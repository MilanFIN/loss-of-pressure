                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _showScoreScreen
                                     13 	.globl _initGame
                                     14 	.globl _initProjectiles
                                     15 	.globl _initEnemyOptions
                                     16 	.globl _tickEx
                                     17 	.globl _tickPickups
                                     18 	.globl _moveProjectiles
                                     19 	.globl _fire
                                     20 	.globl _setGunIcon
                                     21 	.globl _checkCollision
                                     22 	.globl _killEnemy
                                     23 	.globl _spawnPickup
                                     24 	.globl _takeDamage
                                     25 	.globl _move
                                     26 	.globl _updateEnemyPositions
                                     27 	.globl _initEnemy
                                     28 	.globl _initEnemies
                                     29 	.globl _playSound
                                     30 	.globl _updateDirection
                                     31 	.globl _incrementScore
                                     32 	.globl _updateMissileCount
                                     33 	.globl _updateScore
                                     34 	.globl _setHealthBar
                                     35 	.globl _interruptLCD
                                     36 	.globl _bcd2text
                                     37 	.globl _bcd_sub
                                     38 	.globl _bcd_add
                                     39 	.globl _rand
                                     40 	.globl _initrand
                                     41 	.globl _font_set
                                     42 	.globl _font_load
                                     43 	.globl _font_init
                                     44 	.globl _set_sprite_data
                                     45 	.globl _set_win_tiles
                                     46 	.globl _set_bkg_tiles
                                     47 	.globl _set_bkg_data
                                     48 	.globl _wait_vbl_done
                                     49 	.globl _set_interrupts
                                     50 	.globl _waitpad
                                     51 	.globl _joypad
                                     52 	.globl _add_LCD
                                     53 	.globl _auxTick
                                     54 	.globl _exTiles
                                     55 	.globl _oldestEx
                                     56 	.globl _INCREMENT
                                     57 	.globl _SCORE
                                     58 	.globl _score
                                     59 	.globl _gunMap
                                     60 	.globl _switchDelay
                                     61 	.globl _MISSILES
                                     62 	.globl _missiles
                                     63 	.globl _currentGun
                                     64 	.globl _gunLevel
                                     65 	.globl _enemyCollisionCount
                                     66 	.globl _yOverflow
                                     67 	.globl _xOverflow
                                     68 	.globl _bgY
                                     69 	.globl _bgX
                                     70 	.globl _playerDrawY
                                     71 	.globl _playerDrawX
                                     72 	.globl _playerY
                                     73 	.globl _playerX
                                     74 	.globl _ySpeed
                                     75 	.globl _xSpeed
                                     76 	.globl _yDir
                                     77 	.globl _xDir
                                     78 	.globl _fireCooldown
                                     79 	.globl _oldestProjectile
                                     80 	.globl _missile
                                     81 	.globl _doubleGun
                                     82 	.globl _singleGun
                                     83 	.globl _shieldship
                                     84 	.globl _bigblob
                                     85 	.globl _miniship
                                     86 	.globl _bomb
                                     87 	.globl _blob
                                     88 	.globl _emptyRow
                                     89 	.globl _scorelabel
                                     90 	.globl _weaponlabel
                                     91 	.globl _shieldlabel
                                     92 	.globl _hullabel
                                     93 	.globl _explosions
                                     94 	.globl _pickup
                                     95 	.globl _min_font
                                     96 	.globl _shield
                                     97 	.globl _hull
                                     98 	.globl _joydata
                                     99 	.globl _projectiles
                                    100 	.globl _enemies
                                    101 	.globl _enemyOptions
                                    102 	.globl _AUXTICKFREQUENCY
                                    103 	.globl _exTileCount
                                    104 	.globl _EXPLFRAMETIME
                                    105 	.globl _exCount
                                    106 	.globl _SPLASHDROPOFF
                                    107 	.globl _MAXGUNLEVEL
                                    108 	.globl _maxShield
                                    109 	.globl _maxHull
                                    110 	.globl _PLAYERSIZE
                                    111 	.globl _PROJECTILECOUNT
                                    112 	.globl _ySpawnPositions
                                    113 	.globl _xSpawnPositions
                                    114 	.globl _ENEMYCOUNT
                                    115 	.globl _EMPTYSPRITE
                                    116 	.globl _BLANK
                                    117 	.globl _BLANKSIZE
                                    118 	.globl _Ex3
                                    119 	.globl _Ex2
                                    120 	.globl _Ex1
                                    121 	.globl _ex
                                    122 	.globl _Player1
                                    123 	.globl _Pickups
                                    124 	.globl _health
                                    125 	.globl _ammo
                                    126 	.globl _upgrade
                                    127 	.globl _ProjectileTiles
                                    128 	.globl _largeenemies
                                    129 	.globl _enemy1
                                    130 	.globl _enemyOptionCount
                                    131 	.globl _healthblock
                                    132 	.globl _backgroundtiles
                                    133 	.globl _background1
                                    134 	.globl _cross
                                    135 ;--------------------------------------------------------
                                    136 ; special function registers
                                    137 ;--------------------------------------------------------
                                    138 ;--------------------------------------------------------
                                    139 ; ram data
                                    140 ;--------------------------------------------------------
                                    141 	.area _DATA
      000000                        142 _enemyOptions::
      000000                        143 	.ds 90
      00005A                        144 _enemies::
      00005A                        145 	.ds 90
      0000B4                        146 _projectiles::
      0000B4                        147 	.ds 65
      0000F5                        148 _joydata::
      0000F5                        149 	.ds 1
      0000F6                        150 _hull::
      0000F6                        151 	.ds 1
      0000F7                        152 _shield::
      0000F7                        153 	.ds 1
      0000F8                        154 _min_font::
      0000F8                        155 	.ds 2
      0000FA                        156 _pickup::
      0000FA                        157 	.ds 9
      000103                        158 _explosions::
      000103                        159 	.ds 24
                                    160 ;--------------------------------------------------------
                                    161 ; ram data
                                    162 ;--------------------------------------------------------
                                    163 	.area _INITIALIZED
      000000                        164 _hullabel::
      000000                        165 	.ds 4
      000004                        166 _shieldlabel::
      000004                        167 	.ds 4
      000008                        168 _weaponlabel::
      000008                        169 	.ds 4
      00000C                        170 _scorelabel::
      00000C                        171 	.ds 4
      000010                        172 _emptyRow::
      000010                        173 	.ds 20
      000024                        174 _blob::
      000024                        175 	.ds 18
      000036                        176 _bomb::
      000036                        177 	.ds 18
      000048                        178 _miniship::
      000048                        179 	.ds 18
      00005A                        180 _bigblob::
      00005A                        181 	.ds 18
      00006C                        182 _shieldship::
      00006C                        183 	.ds 18
      00007E                        184 _singleGun::
      00007E                        185 	.ds 13
      00008B                        186 _doubleGun::
      00008B                        187 	.ds 13
      000098                        188 _missile::
      000098                        189 	.ds 13
      0000A5                        190 _oldestProjectile::
      0000A5                        191 	.ds 1
      0000A6                        192 _fireCooldown::
      0000A6                        193 	.ds 1
      0000A7                        194 _xDir::
      0000A7                        195 	.ds 1
      0000A8                        196 _yDir::
      0000A8                        197 	.ds 1
      0000A9                        198 _xSpeed::
      0000A9                        199 	.ds 1
      0000AA                        200 _ySpeed::
      0000AA                        201 	.ds 1
      0000AB                        202 _playerX::
      0000AB                        203 	.ds 2
      0000AD                        204 _playerY::
      0000AD                        205 	.ds 2
      0000AF                        206 _playerDrawX::
      0000AF                        207 	.ds 1
      0000B0                        208 _playerDrawY::
      0000B0                        209 	.ds 1
      0000B1                        210 _bgX::
      0000B1                        211 	.ds 2
      0000B3                        212 _bgY::
      0000B3                        213 	.ds 2
      0000B5                        214 _xOverflow::
      0000B5                        215 	.ds 2
      0000B7                        216 _yOverflow::
      0000B7                        217 	.ds 2
      0000B9                        218 _enemyCollisionCount::
      0000B9                        219 	.ds 1
      0000BA                        220 _gunLevel::
      0000BA                        221 	.ds 1
      0000BB                        222 _currentGun::
      0000BB                        223 	.ds 1
      0000BC                        224 _missiles::
      0000BC                        225 	.ds 1
      0000BD                        226 _MISSILES::
      0000BD                        227 	.ds 4
      0000C1                        228 _switchDelay::
      0000C1                        229 	.ds 1
      0000C2                        230 _gunMap::
      0000C2                        231 	.ds 3
      0000C5                        232 _score::
      0000C5                        233 	.ds 2
      0000C7                        234 _SCORE::
      0000C7                        235 	.ds 4
      0000CB                        236 _INCREMENT::
      0000CB                        237 	.ds 4
      0000CF                        238 _oldestEx::
      0000CF                        239 	.ds 1
      0000D0                        240 _exTiles::
      0000D0                        241 	.ds 3
      0000D3                        242 _auxTick::
      0000D3                        243 	.ds 1
                                    244 ;--------------------------------------------------------
                                    245 ; absolute external ram data
                                    246 ;--------------------------------------------------------
                                    247 	.area _DABS (ABS)
                                    248 ;--------------------------------------------------------
                                    249 ; global & static initialisations
                                    250 ;--------------------------------------------------------
                                    251 	.area _HOME
                                    252 	.area _GSINIT
                                    253 	.area _GSFINAL
                                    254 	.area _GSINIT
                                    255 ;--------------------------------------------------------
                                    256 ; Home
                                    257 ;--------------------------------------------------------
                                    258 	.area _HOME
                                    259 	.area _HOME
                                    260 ;--------------------------------------------------------
                                    261 ; code
                                    262 ;--------------------------------------------------------
                                    263 	.area _CODE
                                    264 ;src/main.c:153: void interruptLCD()
                                    265 ;	---------------------------------
                                    266 ; Function interruptLCD
                                    267 ; ---------------------------------
      000000                        268 _interruptLCD::
                                    269 ;src/main.c:155: HIDE_SPRITES;
      000000 F0r00                  270 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  271 	and	a, #0xfd
      000004 E0r00                  272 	ldh	(_LCDC_REG + 0), a
                                    273 ;src/main.c:156: }
      000006 C9                     274 	ret
      000007                        275 _cross:
      000007 18                     276 	.db #0x18	; 24
      000008 18                     277 	.db #0x18	; 24
      000009 18                     278 	.db #0x18	; 24
      00000A 18                     279 	.db #0x18	; 24
      00000B 3C                     280 	.db #0x3c	; 60
      00000C 3C                     281 	.db #0x3c	; 60
      00000D 3C                     282 	.db #0x3c	; 60
      00000E 3C                     283 	.db #0x3c	; 60
      00000F 7E                     284 	.db #0x7e	; 126
      000010 7E                     285 	.db #0x7e	; 126
      000011 7E                     286 	.db #0x7e	; 126
      000012 7E                     287 	.db #0x7e	; 126
      000013 FF                     288 	.db #0xff	; 255
      000014 FF                     289 	.db #0xff	; 255
      000015 FF                     290 	.db #0xff	; 255
      000016 FF                     291 	.db #0xff	; 255
      000017 0F                     292 	.db #0x0f	; 15
      000018 0F                     293 	.db #0x0f	; 15
      000019 3F                     294 	.db #0x3f	; 63
      00001A 3F                     295 	.db #0x3f	; 63
      00001B FF                     296 	.db #0xff	; 255
      00001C FF                     297 	.db #0xff	; 255
      00001D FF                     298 	.db #0xff	; 255
      00001E FF                     299 	.db #0xff	; 255
      00001F 7E                     300 	.db #0x7e	; 126
      000020 7E                     301 	.db #0x7e	; 126
      000021 3E                     302 	.db #0x3e	; 62
      000022 3E                     303 	.db #0x3e	; 62
      000023 1C                     304 	.db #0x1c	; 28
      000024 1C                     305 	.db #0x1c	; 28
      000025 0C                     306 	.db #0x0c	; 12
      000026 0C                     307 	.db #0x0c	; 12
      000027 C0                     308 	.db #0xc0	; 192
      000028 C0                     309 	.db #0xc0	; 192
      000029 F0                     310 	.db #0xf0	; 240
      00002A F0                     311 	.db #0xf0	; 240
      00002B FC                     312 	.db #0xfc	; 252
      00002C FC                     313 	.db #0xfc	; 252
      00002D FF                     314 	.db #0xff	; 255
      00002E FF                     315 	.db #0xff	; 255
      00002F FF                     316 	.db #0xff	; 255
      000030 FF                     317 	.db #0xff	; 255
      000031 FC                     318 	.db #0xfc	; 252
      000032 FC                     319 	.db #0xfc	; 252
      000033 F0                     320 	.db #0xf0	; 240
      000034 F0                     321 	.db #0xf0	; 240
      000035 C0                     322 	.db #0xc0	; 192
      000036 C0                     323 	.db #0xc0	; 192
      000037 0C                     324 	.db #0x0c	; 12
      000038 0C                     325 	.db #0x0c	; 12
      000039 1C                     326 	.db #0x1c	; 28
      00003A 1C                     327 	.db #0x1c	; 28
      00003B 3E                     328 	.db #0x3e	; 62
      00003C 3E                     329 	.db #0x3e	; 62
      00003D 7E                     330 	.db #0x7e	; 126
      00003E 7E                     331 	.db #0x7e	; 126
      00003F FF                     332 	.db #0xff	; 255
      000040 FF                     333 	.db #0xff	; 255
      000041 FF                     334 	.db #0xff	; 255
      000042 FF                     335 	.db #0xff	; 255
      000043 3F                     336 	.db #0x3f	; 63
      000044 3F                     337 	.db #0x3f	; 63
      000045 0F                     338 	.db #0x0f	; 15
      000046 0F                     339 	.db #0x0f	; 15
      000047 FF                     340 	.db #0xff	; 255
      000048 FF                     341 	.db #0xff	; 255
      000049 FF                     342 	.db #0xff	; 255
      00004A FF                     343 	.db #0xff	; 255
      00004B 7E                     344 	.db #0x7e	; 126
      00004C 7E                     345 	.db #0x7e	; 126
      00004D 7E                     346 	.db #0x7e	; 126
      00004E 7E                     347 	.db #0x7e	; 126
      00004F 3C                     348 	.db #0x3c	; 60
      000050 3C                     349 	.db #0x3c	; 60
      000051 3C                     350 	.db #0x3c	; 60
      000052 3C                     351 	.db #0x3c	; 60
      000053 18                     352 	.db #0x18	; 24
      000054 18                     353 	.db #0x18	; 24
      000055 18                     354 	.db #0x18	; 24
      000056 18                     355 	.db #0x18	; 24
      000057 30                     356 	.db #0x30	; 48	'0'
      000058 30                     357 	.db #0x30	; 48	'0'
      000059 38                     358 	.db #0x38	; 56	'8'
      00005A 38                     359 	.db #0x38	; 56	'8'
      00005B 7C                     360 	.db #0x7c	; 124
      00005C 7C                     361 	.db #0x7c	; 124
      00005D 7E                     362 	.db #0x7e	; 126
      00005E 7E                     363 	.db #0x7e	; 126
      00005F FF                     364 	.db #0xff	; 255
      000060 FF                     365 	.db #0xff	; 255
      000061 FF                     366 	.db #0xff	; 255
      000062 FF                     367 	.db #0xff	; 255
      000063 FC                     368 	.db #0xfc	; 252
      000064 FC                     369 	.db #0xfc	; 252
      000065 F0                     370 	.db #0xf0	; 240
      000066 F0                     371 	.db #0xf0	; 240
      000067 03                     372 	.db #0x03	; 3
      000068 03                     373 	.db #0x03	; 3
      000069 0F                     374 	.db #0x0f	; 15
      00006A 0F                     375 	.db #0x0f	; 15
      00006B 3F                     376 	.db #0x3f	; 63
      00006C 3F                     377 	.db #0x3f	; 63
      00006D FF                     378 	.db #0xff	; 255
      00006E FF                     379 	.db #0xff	; 255
      00006F FF                     380 	.db #0xff	; 255
      000070 FF                     381 	.db #0xff	; 255
      000071 3F                     382 	.db #0x3f	; 63
      000072 3F                     383 	.db #0x3f	; 63
      000073 0F                     384 	.db #0x0f	; 15
      000074 0F                     385 	.db #0x0f	; 15
      000075 03                     386 	.db #0x03	; 3
      000076 03                     387 	.db #0x03	; 3
      000077 F0                     388 	.db #0xf0	; 240
      000078 F0                     389 	.db #0xf0	; 240
      000079 FC                     390 	.db #0xfc	; 252
      00007A FC                     391 	.db #0xfc	; 252
      00007B FF                     392 	.db #0xff	; 255
      00007C FF                     393 	.db #0xff	; 255
      00007D FF                     394 	.db #0xff	; 255
      00007E FF                     395 	.db #0xff	; 255
      00007F 7E                     396 	.db #0x7e	; 126
      000080 7E                     397 	.db #0x7e	; 126
      000081 7C                     398 	.db #0x7c	; 124
      000082 7C                     399 	.db #0x7c	; 124
      000083 38                     400 	.db #0x38	; 56	'8'
      000084 38                     401 	.db #0x38	; 56	'8'
      000085 30                     402 	.db #0x30	; 48	'0'
      000086 30                     403 	.db #0x30	; 48	'0'
      000087                        404 _background1:
      000087 26                     405 	.db #0x26	; 38
      000088 26                     406 	.db #0x26	; 38
      000089 26                     407 	.db #0x26	; 38
      00008A 26                     408 	.db #0x26	; 38
      00008B 26                     409 	.db #0x26	; 38
      00008C 26                     410 	.db #0x26	; 38
      00008D 26                     411 	.db #0x26	; 38
      00008E 26                     412 	.db #0x26	; 38
      00008F 26                     413 	.db #0x26	; 38
      000090 26                     414 	.db #0x26	; 38
      000091 26                     415 	.db #0x26	; 38
      000092 2A                     416 	.db #0x2a	; 42
      000093 29                     417 	.db #0x29	; 41
      000094 26                     418 	.db #0x26	; 38
      000095 26                     419 	.db #0x26	; 38
      000096 26                     420 	.db #0x26	; 38
      000097 26                     421 	.db #0x26	; 38
      000098 26                     422 	.db #0x26	; 38
      000099 26                     423 	.db #0x26	; 38
      00009A 26                     424 	.db #0x26	; 38
      00009B 2C                     425 	.db #0x2c	; 44
      00009C 26                     426 	.db #0x26	; 38
      00009D 26                     427 	.db #0x26	; 38
      00009E 26                     428 	.db #0x26	; 38
      00009F 26                     429 	.db #0x26	; 38
      0000A0 26                     430 	.db #0x26	; 38
      0000A1 26                     431 	.db #0x26	; 38
      0000A2 26                     432 	.db #0x26	; 38
      0000A3 26                     433 	.db #0x26	; 38
      0000A4 26                     434 	.db #0x26	; 38
      0000A5 26                     435 	.db #0x26	; 38
      0000A6 26                     436 	.db #0x26	; 38
      0000A7 26                     437 	.db #0x26	; 38
      0000A8 2B                     438 	.db #0x2b	; 43
      0000A9 26                     439 	.db #0x26	; 38
      0000AA 26                     440 	.db #0x26	; 38
      0000AB 26                     441 	.db #0x26	; 38
      0000AC 26                     442 	.db #0x26	; 38
      0000AD 26                     443 	.db #0x26	; 38
      0000AE 26                     444 	.db #0x26	; 38
      0000AF 26                     445 	.db #0x26	; 38
      0000B0 26                     446 	.db #0x26	; 38
      0000B1 26                     447 	.db #0x26	; 38
      0000B2 26                     448 	.db #0x26	; 38
      0000B3 26                     449 	.db #0x26	; 38
      0000B4 26                     450 	.db #0x26	; 38
      0000B5 26                     451 	.db #0x26	; 38
      0000B6 26                     452 	.db #0x26	; 38
      0000B7 26                     453 	.db #0x26	; 38
      0000B8 26                     454 	.db #0x26	; 38
      0000B9 26                     455 	.db #0x26	; 38
      0000BA 26                     456 	.db #0x26	; 38
      0000BB 26                     457 	.db #0x26	; 38
      0000BC 26                     458 	.db #0x26	; 38
      0000BD 26                     459 	.db #0x26	; 38
      0000BE 26                     460 	.db #0x26	; 38
      0000BF 26                     461 	.db #0x26	; 38
      0000C0 26                     462 	.db #0x26	; 38
      0000C1 26                     463 	.db #0x26	; 38
      0000C2 26                     464 	.db #0x26	; 38
      0000C3 26                     465 	.db #0x26	; 38
      0000C4 26                     466 	.db #0x26	; 38
      0000C5 26                     467 	.db #0x26	; 38
      0000C6 26                     468 	.db #0x26	; 38
      0000C7 26                     469 	.db #0x26	; 38
      0000C8 26                     470 	.db #0x26	; 38
      0000C9 26                     471 	.db #0x26	; 38
      0000CA 26                     472 	.db #0x26	; 38
      0000CB 26                     473 	.db #0x26	; 38
      0000CC 26                     474 	.db #0x26	; 38
      0000CD 26                     475 	.db #0x26	; 38
      0000CE 26                     476 	.db #0x26	; 38
      0000CF 26                     477 	.db #0x26	; 38
      0000D0 26                     478 	.db #0x26	; 38
      0000D1 26                     479 	.db #0x26	; 38
      0000D2 26                     480 	.db #0x26	; 38
      0000D3 26                     481 	.db #0x26	; 38
      0000D4 26                     482 	.db #0x26	; 38
      0000D5 26                     483 	.db #0x26	; 38
      0000D6 26                     484 	.db #0x26	; 38
      0000D7 26                     485 	.db #0x26	; 38
      0000D8 26                     486 	.db #0x26	; 38
      0000D9 26                     487 	.db #0x26	; 38
      0000DA 26                     488 	.db #0x26	; 38
      0000DB 26                     489 	.db #0x26	; 38
      0000DC 26                     490 	.db #0x26	; 38
      0000DD 26                     491 	.db #0x26	; 38
      0000DE 26                     492 	.db #0x26	; 38
      0000DF 26                     493 	.db #0x26	; 38
      0000E0 26                     494 	.db #0x26	; 38
      0000E1 26                     495 	.db #0x26	; 38
      0000E2 26                     496 	.db #0x26	; 38
      0000E3 26                     497 	.db #0x26	; 38
      0000E4 26                     498 	.db #0x26	; 38
      0000E5 26                     499 	.db #0x26	; 38
      0000E6 26                     500 	.db #0x26	; 38
      0000E7 26                     501 	.db #0x26	; 38
      0000E8 26                     502 	.db #0x26	; 38
      0000E9 26                     503 	.db #0x26	; 38
      0000EA 26                     504 	.db #0x26	; 38
      0000EB 26                     505 	.db #0x26	; 38
      0000EC 26                     506 	.db #0x26	; 38
      0000ED 26                     507 	.db #0x26	; 38
      0000EE 26                     508 	.db #0x26	; 38
      0000EF 26                     509 	.db #0x26	; 38
      0000F0 26                     510 	.db #0x26	; 38
      0000F1 26                     511 	.db #0x26	; 38
      0000F2 26                     512 	.db #0x26	; 38
      0000F3 26                     513 	.db #0x26	; 38
      0000F4 26                     514 	.db #0x26	; 38
      0000F5 26                     515 	.db #0x26	; 38
      0000F6 26                     516 	.db #0x26	; 38
      0000F7 26                     517 	.db #0x26	; 38
      0000F8 2B                     518 	.db #0x2b	; 43
      0000F9 26                     519 	.db #0x26	; 38
      0000FA 26                     520 	.db #0x26	; 38
      0000FB 26                     521 	.db #0x26	; 38
      0000FC 26                     522 	.db #0x26	; 38
      0000FD 26                     523 	.db #0x26	; 38
      0000FE 26                     524 	.db #0x26	; 38
      0000FF 2B                     525 	.db #0x2b	; 43
      000100 26                     526 	.db #0x26	; 38
      000101 26                     527 	.db #0x26	; 38
      000102 26                     528 	.db #0x26	; 38
      000103 26                     529 	.db #0x26	; 38
      000104 26                     530 	.db #0x26	; 38
      000105 26                     531 	.db #0x26	; 38
      000106 26                     532 	.db #0x26	; 38
      000107 26                     533 	.db #0x26	; 38
      000108 26                     534 	.db #0x26	; 38
      000109 26                     535 	.db #0x26	; 38
      00010A 26                     536 	.db #0x26	; 38
      00010B 26                     537 	.db #0x26	; 38
      00010C 2B                     538 	.db #0x2b	; 43
      00010D 26                     539 	.db #0x26	; 38
      00010E 26                     540 	.db #0x26	; 38
      00010F 26                     541 	.db #0x26	; 38
      000110 26                     542 	.db #0x26	; 38
      000111 26                     543 	.db #0x26	; 38
      000112 26                     544 	.db #0x26	; 38
      000113 26                     545 	.db #0x26	; 38
      000114 2C                     546 	.db #0x2c	; 44
      000115 26                     547 	.db #0x26	; 38
      000116 26                     548 	.db #0x26	; 38
      000117 26                     549 	.db #0x26	; 38
      000118 26                     550 	.db #0x26	; 38
      000119 26                     551 	.db #0x26	; 38
      00011A 26                     552 	.db #0x26	; 38
      00011B 26                     553 	.db #0x26	; 38
      00011C 26                     554 	.db #0x26	; 38
      00011D 26                     555 	.db #0x26	; 38
      00011E 26                     556 	.db #0x26	; 38
      00011F 26                     557 	.db #0x26	; 38
      000120 26                     558 	.db #0x26	; 38
      000121 26                     559 	.db #0x26	; 38
      000122 26                     560 	.db #0x26	; 38
      000123 26                     561 	.db #0x26	; 38
      000124 26                     562 	.db #0x26	; 38
      000125 26                     563 	.db #0x26	; 38
      000126 26                     564 	.db #0x26	; 38
      000127 26                     565 	.db #0x26	; 38
      000128 26                     566 	.db #0x26	; 38
      000129 2C                     567 	.db #0x2c	; 44
      00012A 26                     568 	.db #0x26	; 38
      00012B 26                     569 	.db #0x26	; 38
      00012C 26                     570 	.db #0x26	; 38
      00012D 26                     571 	.db #0x26	; 38
      00012E 25                     572 	.db #0x25	; 37
      00012F 26                     573 	.db #0x26	; 38
      000130 26                     574 	.db #0x26	; 38
      000131 26                     575 	.db #0x26	; 38
      000132 26                     576 	.db #0x26	; 38
      000133 26                     577 	.db #0x26	; 38
      000134 26                     578 	.db #0x26	; 38
      000135 26                     579 	.db #0x26	; 38
      000136 26                     580 	.db #0x26	; 38
      000137 26                     581 	.db #0x26	; 38
      000138 26                     582 	.db #0x26	; 38
      000139 26                     583 	.db #0x26	; 38
      00013A 26                     584 	.db #0x26	; 38
      00013B 26                     585 	.db #0x26	; 38
      00013C 2C                     586 	.db #0x2c	; 44
      00013D 26                     587 	.db #0x26	; 38
      00013E 26                     588 	.db #0x26	; 38
      00013F 26                     589 	.db #0x26	; 38
      000140 26                     590 	.db #0x26	; 38
      000141 26                     591 	.db #0x26	; 38
      000142 26                     592 	.db #0x26	; 38
      000143 26                     593 	.db #0x26	; 38
      000144 2B                     594 	.db #0x2b	; 43
      000145 26                     595 	.db #0x26	; 38
      000146 26                     596 	.db #0x26	; 38
      000147 26                     597 	.db #0x26	; 38
      000148 26                     598 	.db #0x26	; 38
      000149 26                     599 	.db #0x26	; 38
      00014A 26                     600 	.db #0x26	; 38
      00014B 26                     601 	.db #0x26	; 38
      00014C 26                     602 	.db #0x26	; 38
      00014D 26                     603 	.db #0x26	; 38
      00014E 26                     604 	.db #0x26	; 38
      00014F 26                     605 	.db #0x26	; 38
      000150 26                     606 	.db #0x26	; 38
      000151 26                     607 	.db #0x26	; 38
      000152 26                     608 	.db #0x26	; 38
      000153 26                     609 	.db #0x26	; 38
      000154 26                     610 	.db #0x26	; 38
      000155 26                     611 	.db #0x26	; 38
      000156 26                     612 	.db #0x26	; 38
      000157 26                     613 	.db #0x26	; 38
      000158 26                     614 	.db #0x26	; 38
      000159 26                     615 	.db #0x26	; 38
      00015A 26                     616 	.db #0x26	; 38
      00015B 26                     617 	.db #0x26	; 38
      00015C 26                     618 	.db #0x26	; 38
      00015D 26                     619 	.db #0x26	; 38
      00015E 26                     620 	.db #0x26	; 38
      00015F 26                     621 	.db #0x26	; 38
      000160 2C                     622 	.db #0x2c	; 44
      000161 26                     623 	.db #0x26	; 38
      000162 26                     624 	.db #0x26	; 38
      000163 26                     625 	.db #0x26	; 38
      000164 26                     626 	.db #0x26	; 38
      000165 26                     627 	.db #0x26	; 38
      000166 26                     628 	.db #0x26	; 38
      000167 26                     629 	.db #0x26	; 38
      000168 26                     630 	.db #0x26	; 38
      000169 26                     631 	.db #0x26	; 38
      00016A 26                     632 	.db #0x26	; 38
      00016B 26                     633 	.db #0x26	; 38
      00016C 26                     634 	.db #0x26	; 38
      00016D 26                     635 	.db #0x26	; 38
      00016E 26                     636 	.db #0x26	; 38
      00016F 26                     637 	.db #0x26	; 38
      000170 26                     638 	.db #0x26	; 38
      000171 26                     639 	.db #0x26	; 38
      000172 26                     640 	.db #0x26	; 38
      000173 26                     641 	.db #0x26	; 38
      000174 26                     642 	.db #0x26	; 38
      000175 26                     643 	.db #0x26	; 38
      000176 26                     644 	.db #0x26	; 38
      000177 26                     645 	.db #0x26	; 38
      000178 26                     646 	.db #0x26	; 38
      000179 26                     647 	.db #0x26	; 38
      00017A 26                     648 	.db #0x26	; 38
      00017B 26                     649 	.db #0x26	; 38
      00017C 26                     650 	.db #0x26	; 38
      00017D 26                     651 	.db #0x26	; 38
      00017E 26                     652 	.db #0x26	; 38
      00017F 26                     653 	.db #0x26	; 38
      000180 26                     654 	.db #0x26	; 38
      000181 26                     655 	.db #0x26	; 38
      000182 26                     656 	.db #0x26	; 38
      000183 26                     657 	.db #0x26	; 38
      000184 26                     658 	.db #0x26	; 38
      000185 26                     659 	.db #0x26	; 38
      000186 26                     660 	.db #0x26	; 38
      000187 26                     661 	.db #0x26	; 38
      000188 26                     662 	.db #0x26	; 38
      000189 26                     663 	.db #0x26	; 38
      00018A 26                     664 	.db #0x26	; 38
      00018B 26                     665 	.db #0x26	; 38
      00018C 26                     666 	.db #0x26	; 38
      00018D 26                     667 	.db #0x26	; 38
      00018E 26                     668 	.db #0x26	; 38
      00018F 26                     669 	.db #0x26	; 38
      000190 26                     670 	.db #0x26	; 38
      000191 26                     671 	.db #0x26	; 38
      000192 26                     672 	.db #0x26	; 38
      000193 26                     673 	.db #0x26	; 38
      000194 26                     674 	.db #0x26	; 38
      000195 2B                     675 	.db #0x2b	; 43
      000196 26                     676 	.db #0x26	; 38
      000197 26                     677 	.db #0x26	; 38
      000198 26                     678 	.db #0x26	; 38
      000199 26                     679 	.db #0x26	; 38
      00019A 26                     680 	.db #0x26	; 38
      00019B 26                     681 	.db #0x26	; 38
      00019C 26                     682 	.db #0x26	; 38
      00019D 26                     683 	.db #0x26	; 38
      00019E 26                     684 	.db #0x26	; 38
      00019F 26                     685 	.db #0x26	; 38
      0001A0 26                     686 	.db #0x26	; 38
      0001A1 26                     687 	.db #0x26	; 38
      0001A2 26                     688 	.db #0x26	; 38
      0001A3 26                     689 	.db #0x26	; 38
      0001A4 26                     690 	.db #0x26	; 38
      0001A5 26                     691 	.db #0x26	; 38
      0001A6 25                     692 	.db #0x25	; 37
      0001A7 26                     693 	.db #0x26	; 38
      0001A8 26                     694 	.db #0x26	; 38
      0001A9 26                     695 	.db #0x26	; 38
      0001AA 2B                     696 	.db #0x2b	; 43
      0001AB 26                     697 	.db #0x26	; 38
      0001AC 26                     698 	.db #0x26	; 38
      0001AD 26                     699 	.db #0x26	; 38
      0001AE 26                     700 	.db #0x26	; 38
      0001AF 26                     701 	.db #0x26	; 38
      0001B0 26                     702 	.db #0x26	; 38
      0001B1 26                     703 	.db #0x26	; 38
      0001B2 26                     704 	.db #0x26	; 38
      0001B3 26                     705 	.db #0x26	; 38
      0001B4 26                     706 	.db #0x26	; 38
      0001B5 26                     707 	.db #0x26	; 38
      0001B6 26                     708 	.db #0x26	; 38
      0001B7 26                     709 	.db #0x26	; 38
      0001B8 26                     710 	.db #0x26	; 38
      0001B9 26                     711 	.db #0x26	; 38
      0001BA 26                     712 	.db #0x26	; 38
      0001BB 26                     713 	.db #0x26	; 38
      0001BC 26                     714 	.db #0x26	; 38
      0001BD 26                     715 	.db #0x26	; 38
      0001BE 26                     716 	.db #0x26	; 38
      0001BF 26                     717 	.db #0x26	; 38
      0001C0 26                     718 	.db #0x26	; 38
      0001C1 26                     719 	.db #0x26	; 38
      0001C2 26                     720 	.db #0x26	; 38
      0001C3 26                     721 	.db #0x26	; 38
      0001C4 2B                     722 	.db #0x2b	; 43
      0001C5 26                     723 	.db #0x26	; 38
      0001C6 26                     724 	.db #0x26	; 38
      0001C7 26                     725 	.db #0x26	; 38
      0001C8 26                     726 	.db #0x26	; 38
      0001C9 26                     727 	.db #0x26	; 38
      0001CA 26                     728 	.db #0x26	; 38
      0001CB 26                     729 	.db #0x26	; 38
      0001CC 26                     730 	.db #0x26	; 38
      0001CD 26                     731 	.db #0x26	; 38
      0001CE 26                     732 	.db #0x26	; 38
      0001CF 26                     733 	.db #0x26	; 38
      0001D0 26                     734 	.db #0x26	; 38
      0001D1 26                     735 	.db #0x26	; 38
      0001D2 26                     736 	.db #0x26	; 38
      0001D3 26                     737 	.db #0x26	; 38
      0001D4 26                     738 	.db #0x26	; 38
      0001D5 26                     739 	.db #0x26	; 38
      0001D6 26                     740 	.db #0x26	; 38
      0001D7 26                     741 	.db #0x26	; 38
      0001D8 26                     742 	.db #0x26	; 38
      0001D9 26                     743 	.db #0x26	; 38
      0001DA 27                     744 	.db #0x27	; 39
      0001DB 28                     745 	.db #0x28	; 40
      0001DC 26                     746 	.db #0x26	; 38
      0001DD 26                     747 	.db #0x26	; 38
      0001DE 26                     748 	.db #0x26	; 38
      0001DF 26                     749 	.db #0x26	; 38
      0001E0 26                     750 	.db #0x26	; 38
      0001E1 26                     751 	.db #0x26	; 38
      0001E2 26                     752 	.db #0x26	; 38
      0001E3 26                     753 	.db #0x26	; 38
      0001E4 26                     754 	.db #0x26	; 38
      0001E5 26                     755 	.db #0x26	; 38
      0001E6 26                     756 	.db #0x26	; 38
      0001E7 26                     757 	.db #0x26	; 38
      0001E8 26                     758 	.db #0x26	; 38
      0001E9 26                     759 	.db #0x26	; 38
      0001EA 26                     760 	.db #0x26	; 38
      0001EB 26                     761 	.db #0x26	; 38
      0001EC 26                     762 	.db #0x26	; 38
      0001ED 26                     763 	.db #0x26	; 38
      0001EE 26                     764 	.db #0x26	; 38
      0001EF 26                     765 	.db #0x26	; 38
      0001F0 26                     766 	.db #0x26	; 38
      0001F1 26                     767 	.db #0x26	; 38
      0001F2 26                     768 	.db #0x26	; 38
      0001F3 26                     769 	.db #0x26	; 38
      0001F4 26                     770 	.db #0x26	; 38
      0001F5 26                     771 	.db #0x26	; 38
      0001F6 26                     772 	.db #0x26	; 38
      0001F7 26                     773 	.db #0x26	; 38
      0001F8 26                     774 	.db #0x26	; 38
      0001F9 26                     775 	.db #0x26	; 38
      0001FA 2A                     776 	.db #0x2a	; 42
      0001FB 29                     777 	.db #0x29	; 41
      0001FC 26                     778 	.db #0x26	; 38
      0001FD 26                     779 	.db #0x26	; 38
      0001FE 26                     780 	.db #0x26	; 38
      0001FF 26                     781 	.db #0x26	; 38
      000200 26                     782 	.db #0x26	; 38
      000201 26                     783 	.db #0x26	; 38
      000202 26                     784 	.db #0x26	; 38
      000203 26                     785 	.db #0x26	; 38
      000204 26                     786 	.db #0x26	; 38
      000205 26                     787 	.db #0x26	; 38
      000206 26                     788 	.db #0x26	; 38
      000207 26                     789 	.db #0x26	; 38
      000208 26                     790 	.db #0x26	; 38
      000209 26                     791 	.db #0x26	; 38
      00020A 26                     792 	.db #0x26	; 38
      00020B 26                     793 	.db #0x26	; 38
      00020C 26                     794 	.db #0x26	; 38
      00020D 26                     795 	.db #0x26	; 38
      00020E 27                     796 	.db #0x27	; 39
      00020F 28                     797 	.db #0x28	; 40
      000210 26                     798 	.db #0x26	; 38
      000211 26                     799 	.db #0x26	; 38
      000212 26                     800 	.db #0x26	; 38
      000213 26                     801 	.db #0x26	; 38
      000214 26                     802 	.db #0x26	; 38
      000215 26                     803 	.db #0x26	; 38
      000216 26                     804 	.db #0x26	; 38
      000217 26                     805 	.db #0x26	; 38
      000218 26                     806 	.db #0x26	; 38
      000219 26                     807 	.db #0x26	; 38
      00021A 26                     808 	.db #0x26	; 38
      00021B 26                     809 	.db #0x26	; 38
      00021C 26                     810 	.db #0x26	; 38
      00021D 26                     811 	.db #0x26	; 38
      00021E 26                     812 	.db #0x26	; 38
      00021F 2C                     813 	.db #0x2c	; 44
      000220 26                     814 	.db #0x26	; 38
      000221 26                     815 	.db #0x26	; 38
      000222 26                     816 	.db #0x26	; 38
      000223 26                     817 	.db #0x26	; 38
      000224 26                     818 	.db #0x26	; 38
      000225 26                     819 	.db #0x26	; 38
      000226 26                     820 	.db #0x26	; 38
      000227 26                     821 	.db #0x26	; 38
      000228 26                     822 	.db #0x26	; 38
      000229 26                     823 	.db #0x26	; 38
      00022A 26                     824 	.db #0x26	; 38
      00022B 26                     825 	.db #0x26	; 38
      00022C 26                     826 	.db #0x26	; 38
      00022D 26                     827 	.db #0x26	; 38
      00022E 2A                     828 	.db #0x2a	; 42
      00022F 29                     829 	.db #0x29	; 41
      000230 26                     830 	.db #0x26	; 38
      000231 26                     831 	.db #0x26	; 38
      000232 26                     832 	.db #0x26	; 38
      000233 26                     833 	.db #0x26	; 38
      000234 26                     834 	.db #0x26	; 38
      000235 26                     835 	.db #0x26	; 38
      000236 26                     836 	.db #0x26	; 38
      000237 26                     837 	.db #0x26	; 38
      000238 26                     838 	.db #0x26	; 38
      000239 26                     839 	.db #0x26	; 38
      00023A 26                     840 	.db #0x26	; 38
      00023B 26                     841 	.db #0x26	; 38
      00023C 26                     842 	.db #0x26	; 38
      00023D 25                     843 	.db #0x25	; 37
      00023E 26                     844 	.db #0x26	; 38
      00023F 26                     845 	.db #0x26	; 38
      000240 26                     846 	.db #0x26	; 38
      000241 26                     847 	.db #0x26	; 38
      000242 26                     848 	.db #0x26	; 38
      000243 26                     849 	.db #0x26	; 38
      000244 2C                     850 	.db #0x2c	; 44
      000245 26                     851 	.db #0x26	; 38
      000246 26                     852 	.db #0x26	; 38
      000247 26                     853 	.db #0x26	; 38
      000248 26                     854 	.db #0x26	; 38
      000249 26                     855 	.db #0x26	; 38
      00024A 26                     856 	.db #0x26	; 38
      00024B 26                     857 	.db #0x26	; 38
      00024C 26                     858 	.db #0x26	; 38
      00024D 26                     859 	.db #0x26	; 38
      00024E 26                     860 	.db #0x26	; 38
      00024F 26                     861 	.db #0x26	; 38
      000250 26                     862 	.db #0x26	; 38
      000251 26                     863 	.db #0x26	; 38
      000252 26                     864 	.db #0x26	; 38
      000253 26                     865 	.db #0x26	; 38
      000254 26                     866 	.db #0x26	; 38
      000255 26                     867 	.db #0x26	; 38
      000256 26                     868 	.db #0x26	; 38
      000257 26                     869 	.db #0x26	; 38
      000258 26                     870 	.db #0x26	; 38
      000259 26                     871 	.db #0x26	; 38
      00025A 26                     872 	.db #0x26	; 38
      00025B 26                     873 	.db #0x26	; 38
      00025C 26                     874 	.db #0x26	; 38
      00025D 26                     875 	.db #0x26	; 38
      00025E 26                     876 	.db #0x26	; 38
      00025F 26                     877 	.db #0x26	; 38
      000260 26                     878 	.db #0x26	; 38
      000261 26                     879 	.db #0x26	; 38
      000262 26                     880 	.db #0x26	; 38
      000263 26                     881 	.db #0x26	; 38
      000264 26                     882 	.db #0x26	; 38
      000265 26                     883 	.db #0x26	; 38
      000266 26                     884 	.db #0x26	; 38
      000267 26                     885 	.db #0x26	; 38
      000268 26                     886 	.db #0x26	; 38
      000269 26                     887 	.db #0x26	; 38
      00026A 2C                     888 	.db #0x2c	; 44
      00026B 26                     889 	.db #0x26	; 38
      00026C 26                     890 	.db #0x26	; 38
      00026D 26                     891 	.db #0x26	; 38
      00026E 26                     892 	.db #0x26	; 38
      00026F 26                     893 	.db #0x26	; 38
      000270 26                     894 	.db #0x26	; 38
      000271 26                     895 	.db #0x26	; 38
      000272 26                     896 	.db #0x26	; 38
      000273 26                     897 	.db #0x26	; 38
      000274 26                     898 	.db #0x26	; 38
      000275 26                     899 	.db #0x26	; 38
      000276 26                     900 	.db #0x26	; 38
      000277 26                     901 	.db #0x26	; 38
      000278 26                     902 	.db #0x26	; 38
      000279 2C                     903 	.db #0x2c	; 44
      00027A 26                     904 	.db #0x26	; 38
      00027B 26                     905 	.db #0x26	; 38
      00027C 26                     906 	.db #0x26	; 38
      00027D 26                     907 	.db #0x26	; 38
      00027E 26                     908 	.db #0x26	; 38
      00027F 26                     909 	.db #0x26	; 38
      000280 26                     910 	.db #0x26	; 38
      000281 26                     911 	.db #0x26	; 38
      000282 26                     912 	.db #0x26	; 38
      000283 26                     913 	.db #0x26	; 38
      000284 26                     914 	.db #0x26	; 38
      000285 26                     915 	.db #0x26	; 38
      000286 26                     916 	.db #0x26	; 38
      000287 26                     917 	.db #0x26	; 38
      000288 26                     918 	.db #0x26	; 38
      000289 26                     919 	.db #0x26	; 38
      00028A 26                     920 	.db #0x26	; 38
      00028B 26                     921 	.db #0x26	; 38
      00028C 26                     922 	.db #0x26	; 38
      00028D 26                     923 	.db #0x26	; 38
      00028E 26                     924 	.db #0x26	; 38
      00028F 26                     925 	.db #0x26	; 38
      000290 26                     926 	.db #0x26	; 38
      000291 26                     927 	.db #0x26	; 38
      000292 26                     928 	.db #0x26	; 38
      000293 26                     929 	.db #0x26	; 38
      000294 26                     930 	.db #0x26	; 38
      000295 2B                     931 	.db #0x2b	; 43
      000296 26                     932 	.db #0x26	; 38
      000297 26                     933 	.db #0x26	; 38
      000298 26                     934 	.db #0x26	; 38
      000299 26                     935 	.db #0x26	; 38
      00029A 26                     936 	.db #0x26	; 38
      00029B 26                     937 	.db #0x26	; 38
      00029C 26                     938 	.db #0x26	; 38
      00029D 26                     939 	.db #0x26	; 38
      00029E 26                     940 	.db #0x26	; 38
      00029F 26                     941 	.db #0x26	; 38
      0002A0 26                     942 	.db #0x26	; 38
      0002A1 26                     943 	.db #0x26	; 38
      0002A2 26                     944 	.db #0x26	; 38
      0002A3 26                     945 	.db #0x26	; 38
      0002A4 26                     946 	.db #0x26	; 38
      0002A5 26                     947 	.db #0x26	; 38
      0002A6 26                     948 	.db #0x26	; 38
      0002A7 28                     949 	.db #0x28	; 40
      0002A8 26                     950 	.db #0x26	; 38
      0002A9 26                     951 	.db #0x26	; 38
      0002AA 26                     952 	.db #0x26	; 38
      0002AB 26                     953 	.db #0x26	; 38
      0002AC 26                     954 	.db #0x26	; 38
      0002AD 26                     955 	.db #0x26	; 38
      0002AE 26                     956 	.db #0x26	; 38
      0002AF 26                     957 	.db #0x26	; 38
      0002B0 26                     958 	.db #0x26	; 38
      0002B1 26                     959 	.db #0x26	; 38
      0002B2 26                     960 	.db #0x26	; 38
      0002B3 26                     961 	.db #0x26	; 38
      0002B4 26                     962 	.db #0x26	; 38
      0002B5 26                     963 	.db #0x26	; 38
      0002B6 26                     964 	.db #0x26	; 38
      0002B7 26                     965 	.db #0x26	; 38
      0002B8 26                     966 	.db #0x26	; 38
      0002B9 26                     967 	.db #0x26	; 38
      0002BA 26                     968 	.db #0x26	; 38
      0002BB 26                     969 	.db #0x26	; 38
      0002BC 26                     970 	.db #0x26	; 38
      0002BD 26                     971 	.db #0x26	; 38
      0002BE 26                     972 	.db #0x26	; 38
      0002BF 26                     973 	.db #0x26	; 38
      0002C0 2B                     974 	.db #0x2b	; 43
      0002C1 26                     975 	.db #0x26	; 38
      0002C2 26                     976 	.db #0x26	; 38
      0002C3 26                     977 	.db #0x26	; 38
      0002C4 26                     978 	.db #0x26	; 38
      0002C5 26                     979 	.db #0x26	; 38
      0002C6 27                     980 	.db #0x27	; 39
      0002C7 29                     981 	.db #0x29	; 41
      0002C8 26                     982 	.db #0x26	; 38
      0002C9 26                     983 	.db #0x26	; 38
      0002CA 26                     984 	.db #0x26	; 38
      0002CB 26                     985 	.db #0x26	; 38
      0002CC 26                     986 	.db #0x26	; 38
      0002CD 26                     987 	.db #0x26	; 38
      0002CE 2B                     988 	.db #0x2b	; 43
      0002CF 26                     989 	.db #0x26	; 38
      0002D0 26                     990 	.db #0x26	; 38
      0002D1 26                     991 	.db #0x26	; 38
      0002D2 26                     992 	.db #0x26	; 38
      0002D3 26                     993 	.db #0x26	; 38
      0002D4 26                     994 	.db #0x26	; 38
      0002D5 26                     995 	.db #0x26	; 38
      0002D6 26                     996 	.db #0x26	; 38
      0002D7 26                     997 	.db #0x26	; 38
      0002D8 26                     998 	.db #0x26	; 38
      0002D9 26                     999 	.db #0x26	; 38
      0002DA 26                    1000 	.db #0x26	; 38
      0002DB 26                    1001 	.db #0x26	; 38
      0002DC 26                    1002 	.db #0x26	; 38
      0002DD 26                    1003 	.db #0x26	; 38
      0002DE 26                    1004 	.db #0x26	; 38
      0002DF 26                    1005 	.db #0x26	; 38
      0002E0 26                    1006 	.db #0x26	; 38
      0002E1 26                    1007 	.db #0x26	; 38
      0002E2 26                    1008 	.db #0x26	; 38
      0002E3 26                    1009 	.db #0x26	; 38
      0002E4 26                    1010 	.db #0x26	; 38
      0002E5 26                    1011 	.db #0x26	; 38
      0002E6 2A                    1012 	.db #0x2a	; 42
      0002E7 26                    1013 	.db #0x26	; 38
      0002E8 26                    1014 	.db #0x26	; 38
      0002E9 26                    1015 	.db #0x26	; 38
      0002EA 26                    1016 	.db #0x26	; 38
      0002EB 26                    1017 	.db #0x26	; 38
      0002EC 26                    1018 	.db #0x26	; 38
      0002ED 26                    1019 	.db #0x26	; 38
      0002EE 26                    1020 	.db #0x26	; 38
      0002EF 26                    1021 	.db #0x26	; 38
      0002F0 26                    1022 	.db #0x26	; 38
      0002F1 26                    1023 	.db #0x26	; 38
      0002F2 2C                    1024 	.db #0x2c	; 44
      0002F3 26                    1025 	.db #0x26	; 38
      0002F4 26                    1026 	.db #0x26	; 38
      0002F5 26                    1027 	.db #0x26	; 38
      0002F6 26                    1028 	.db #0x26	; 38
      0002F7 26                    1029 	.db #0x26	; 38
      0002F8 26                    1030 	.db #0x26	; 38
      0002F9 26                    1031 	.db #0x26	; 38
      0002FA 26                    1032 	.db #0x26	; 38
      0002FB 26                    1033 	.db #0x26	; 38
      0002FC 26                    1034 	.db #0x26	; 38
      0002FD 26                    1035 	.db #0x26	; 38
      0002FE 26                    1036 	.db #0x26	; 38
      0002FF 26                    1037 	.db #0x26	; 38
      000300 26                    1038 	.db #0x26	; 38
      000301 26                    1039 	.db #0x26	; 38
      000302 26                    1040 	.db #0x26	; 38
      000303 26                    1041 	.db #0x26	; 38
      000304 26                    1042 	.db #0x26	; 38
      000305 26                    1043 	.db #0x26	; 38
      000306 26                    1044 	.db #0x26	; 38
      000307 26                    1045 	.db #0x26	; 38
      000308 26                    1046 	.db #0x26	; 38
      000309 26                    1047 	.db #0x26	; 38
      00030A 26                    1048 	.db #0x26	; 38
      00030B 26                    1049 	.db #0x26	; 38
      00030C 26                    1050 	.db #0x26	; 38
      00030D 26                    1051 	.db #0x26	; 38
      00030E 26                    1052 	.db #0x26	; 38
      00030F 26                    1053 	.db #0x26	; 38
      000310 26                    1054 	.db #0x26	; 38
      000311 26                    1055 	.db #0x26	; 38
      000312 26                    1056 	.db #0x26	; 38
      000313 26                    1057 	.db #0x26	; 38
      000314 26                    1058 	.db #0x26	; 38
      000315 26                    1059 	.db #0x26	; 38
      000316 26                    1060 	.db #0x26	; 38
      000317 2B                    1061 	.db #0x2b	; 43
      000318 26                    1062 	.db #0x26	; 38
      000319 26                    1063 	.db #0x26	; 38
      00031A 26                    1064 	.db #0x26	; 38
      00031B 26                    1065 	.db #0x26	; 38
      00031C 26                    1066 	.db #0x26	; 38
      00031D 26                    1067 	.db #0x26	; 38
      00031E 26                    1068 	.db #0x26	; 38
      00031F 26                    1069 	.db #0x26	; 38
      000320 26                    1070 	.db #0x26	; 38
      000321 26                    1071 	.db #0x26	; 38
      000322 26                    1072 	.db #0x26	; 38
      000323 26                    1073 	.db #0x26	; 38
      000324 26                    1074 	.db #0x26	; 38
      000325 26                    1075 	.db #0x26	; 38
      000326 26                    1076 	.db #0x26	; 38
      000327 26                    1077 	.db #0x26	; 38
      000328 26                    1078 	.db #0x26	; 38
      000329 26                    1079 	.db #0x26	; 38
      00032A 26                    1080 	.db #0x26	; 38
      00032B 26                    1081 	.db #0x26	; 38
      00032C 26                    1082 	.db #0x26	; 38
      00032D 26                    1083 	.db #0x26	; 38
      00032E 26                    1084 	.db #0x26	; 38
      00032F 26                    1085 	.db #0x26	; 38
      000330 26                    1086 	.db #0x26	; 38
      000331 26                    1087 	.db #0x26	; 38
      000332 26                    1088 	.db #0x26	; 38
      000333 26                    1089 	.db #0x26	; 38
      000334 26                    1090 	.db #0x26	; 38
      000335 26                    1091 	.db #0x26	; 38
      000336 26                    1092 	.db #0x26	; 38
      000337 26                    1093 	.db #0x26	; 38
      000338 26                    1094 	.db #0x26	; 38
      000339 26                    1095 	.db #0x26	; 38
      00033A 26                    1096 	.db #0x26	; 38
      00033B 26                    1097 	.db #0x26	; 38
      00033C 26                    1098 	.db #0x26	; 38
      00033D 26                    1099 	.db #0x26	; 38
      00033E 2B                    1100 	.db #0x2b	; 43
      00033F 26                    1101 	.db #0x26	; 38
      000340 26                    1102 	.db #0x26	; 38
      000341 26                    1103 	.db #0x26	; 38
      000342 26                    1104 	.db #0x26	; 38
      000343 26                    1105 	.db #0x26	; 38
      000344 26                    1106 	.db #0x26	; 38
      000345 26                    1107 	.db #0x26	; 38
      000346 26                    1108 	.db #0x26	; 38
      000347 26                    1109 	.db #0x26	; 38
      000348 26                    1110 	.db #0x26	; 38
      000349 26                    1111 	.db #0x26	; 38
      00034A 2B                    1112 	.db #0x2b	; 43
      00034B 26                    1113 	.db #0x26	; 38
      00034C 26                    1114 	.db #0x26	; 38
      00034D 26                    1115 	.db #0x26	; 38
      00034E 26                    1116 	.db #0x26	; 38
      00034F 26                    1117 	.db #0x26	; 38
      000350 26                    1118 	.db #0x26	; 38
      000351 26                    1119 	.db #0x26	; 38
      000352 26                    1120 	.db #0x26	; 38
      000353 26                    1121 	.db #0x26	; 38
      000354 26                    1122 	.db #0x26	; 38
      000355 26                    1123 	.db #0x26	; 38
      000356 26                    1124 	.db #0x26	; 38
      000357 26                    1125 	.db #0x26	; 38
      000358 26                    1126 	.db #0x26	; 38
      000359 26                    1127 	.db #0x26	; 38
      00035A 26                    1128 	.db #0x26	; 38
      00035B 26                    1129 	.db #0x26	; 38
      00035C 26                    1130 	.db #0x26	; 38
      00035D 26                    1131 	.db #0x26	; 38
      00035E 26                    1132 	.db #0x26	; 38
      00035F 26                    1133 	.db #0x26	; 38
      000360 26                    1134 	.db #0x26	; 38
      000361 26                    1135 	.db #0x26	; 38
      000362 26                    1136 	.db #0x26	; 38
      000363 26                    1137 	.db #0x26	; 38
      000364 26                    1138 	.db #0x26	; 38
      000365 26                    1139 	.db #0x26	; 38
      000366 2C                    1140 	.db #0x2c	; 44
      000367 26                    1141 	.db #0x26	; 38
      000368 26                    1142 	.db #0x26	; 38
      000369 26                    1143 	.db #0x26	; 38
      00036A 26                    1144 	.db #0x26	; 38
      00036B 26                    1145 	.db #0x26	; 38
      00036C 26                    1146 	.db #0x26	; 38
      00036D 26                    1147 	.db #0x26	; 38
      00036E 26                    1148 	.db #0x26	; 38
      00036F 26                    1149 	.db #0x26	; 38
      000370 2B                    1150 	.db #0x2b	; 43
      000371 26                    1151 	.db #0x26	; 38
      000372 26                    1152 	.db #0x26	; 38
      000373 26                    1153 	.db #0x26	; 38
      000374 26                    1154 	.db #0x26	; 38
      000375 26                    1155 	.db #0x26	; 38
      000376 26                    1156 	.db #0x26	; 38
      000377 26                    1157 	.db #0x26	; 38
      000378 26                    1158 	.db #0x26	; 38
      000379 26                    1159 	.db #0x26	; 38
      00037A 26                    1160 	.db #0x26	; 38
      00037B 26                    1161 	.db #0x26	; 38
      00037C 26                    1162 	.db #0x26	; 38
      00037D 26                    1163 	.db #0x26	; 38
      00037E 26                    1164 	.db #0x26	; 38
      00037F 26                    1165 	.db #0x26	; 38
      000380 26                    1166 	.db #0x26	; 38
      000381 26                    1167 	.db #0x26	; 38
      000382 26                    1168 	.db #0x26	; 38
      000383 26                    1169 	.db #0x26	; 38
      000384 26                    1170 	.db #0x26	; 38
      000385 26                    1171 	.db #0x26	; 38
      000386 26                    1172 	.db #0x26	; 38
      000387 26                    1173 	.db #0x26	; 38
      000388 26                    1174 	.db #0x26	; 38
      000389 26                    1175 	.db #0x26	; 38
      00038A 26                    1176 	.db #0x26	; 38
      00038B 26                    1177 	.db #0x26	; 38
      00038C 26                    1178 	.db #0x26	; 38
      00038D 26                    1179 	.db #0x26	; 38
      00038E 26                    1180 	.db #0x26	; 38
      00038F 26                    1181 	.db #0x26	; 38
      000390 26                    1182 	.db #0x26	; 38
      000391 26                    1183 	.db #0x26	; 38
      000392 26                    1184 	.db #0x26	; 38
      000393 26                    1185 	.db #0x26	; 38
      000394 26                    1186 	.db #0x26	; 38
      000395 26                    1187 	.db #0x26	; 38
      000396 26                    1188 	.db #0x26	; 38
      000397 26                    1189 	.db #0x26	; 38
      000398 27                    1190 	.db #0x27	; 39
      000399 28                    1191 	.db #0x28	; 40
      00039A 26                    1192 	.db #0x26	; 38
      00039B 26                    1193 	.db #0x26	; 38
      00039C 26                    1194 	.db #0x26	; 38
      00039D 26                    1195 	.db #0x26	; 38
      00039E 26                    1196 	.db #0x26	; 38
      00039F 26                    1197 	.db #0x26	; 38
      0003A0 26                    1198 	.db #0x26	; 38
      0003A1 26                    1199 	.db #0x26	; 38
      0003A2 26                    1200 	.db #0x26	; 38
      0003A3 26                    1201 	.db #0x26	; 38
      0003A4 26                    1202 	.db #0x26	; 38
      0003A5 26                    1203 	.db #0x26	; 38
      0003A6 26                    1204 	.db #0x26	; 38
      0003A7 26                    1205 	.db #0x26	; 38
      0003A8 26                    1206 	.db #0x26	; 38
      0003A9 26                    1207 	.db #0x26	; 38
      0003AA 26                    1208 	.db #0x26	; 38
      0003AB 26                    1209 	.db #0x26	; 38
      0003AC 26                    1210 	.db #0x26	; 38
      0003AD 2B                    1211 	.db #0x2b	; 43
      0003AE 26                    1212 	.db #0x26	; 38
      0003AF 26                    1213 	.db #0x26	; 38
      0003B0 26                    1214 	.db #0x26	; 38
      0003B1 26                    1215 	.db #0x26	; 38
      0003B2 26                    1216 	.db #0x26	; 38
      0003B3 26                    1217 	.db #0x26	; 38
      0003B4 26                    1218 	.db #0x26	; 38
      0003B5 25                    1219 	.db #0x25	; 37
      0003B6 26                    1220 	.db #0x26	; 38
      0003B7 26                    1221 	.db #0x26	; 38
      0003B8 2A                    1222 	.db #0x2a	; 42
      0003B9 29                    1223 	.db #0x29	; 41
      0003BA 26                    1224 	.db #0x26	; 38
      0003BB 26                    1225 	.db #0x26	; 38
      0003BC 26                    1226 	.db #0x26	; 38
      0003BD 26                    1227 	.db #0x26	; 38
      0003BE 26                    1228 	.db #0x26	; 38
      0003BF 26                    1229 	.db #0x26	; 38
      0003C0 26                    1230 	.db #0x26	; 38
      0003C1 26                    1231 	.db #0x26	; 38
      0003C2 2B                    1232 	.db #0x2b	; 43
      0003C3 26                    1233 	.db #0x26	; 38
      0003C4 26                    1234 	.db #0x26	; 38
      0003C5 26                    1235 	.db #0x26	; 38
      0003C6 26                    1236 	.db #0x26	; 38
      0003C7 26                    1237 	.db #0x26	; 38
      0003C8 26                    1238 	.db #0x26	; 38
      0003C9 2C                    1239 	.db #0x2c	; 44
      0003CA 26                    1240 	.db #0x26	; 38
      0003CB 26                    1241 	.db #0x26	; 38
      0003CC 26                    1242 	.db #0x26	; 38
      0003CD 26                    1243 	.db #0x26	; 38
      0003CE 26                    1244 	.db #0x26	; 38
      0003CF 26                    1245 	.db #0x26	; 38
      0003D0 26                    1246 	.db #0x26	; 38
      0003D1 26                    1247 	.db #0x26	; 38
      0003D2 26                    1248 	.db #0x26	; 38
      0003D3 26                    1249 	.db #0x26	; 38
      0003D4 26                    1250 	.db #0x26	; 38
      0003D5 2C                    1251 	.db #0x2c	; 44
      0003D6 26                    1252 	.db #0x26	; 38
      0003D7 26                    1253 	.db #0x26	; 38
      0003D8 26                    1254 	.db #0x26	; 38
      0003D9 26                    1255 	.db #0x26	; 38
      0003DA 26                    1256 	.db #0x26	; 38
      0003DB 26                    1257 	.db #0x26	; 38
      0003DC 26                    1258 	.db #0x26	; 38
      0003DD 26                    1259 	.db #0x26	; 38
      0003DE 26                    1260 	.db #0x26	; 38
      0003DF 26                    1261 	.db #0x26	; 38
      0003E0 26                    1262 	.db #0x26	; 38
      0003E1 26                    1263 	.db #0x26	; 38
      0003E2 26                    1264 	.db #0x26	; 38
      0003E3 26                    1265 	.db #0x26	; 38
      0003E4 26                    1266 	.db #0x26	; 38
      0003E5 26                    1267 	.db #0x26	; 38
      0003E6 26                    1268 	.db #0x26	; 38
      0003E7 26                    1269 	.db #0x26	; 38
      0003E8 26                    1270 	.db #0x26	; 38
      0003E9 26                    1271 	.db #0x26	; 38
      0003EA 26                    1272 	.db #0x26	; 38
      0003EB 26                    1273 	.db #0x26	; 38
      0003EC 26                    1274 	.db #0x26	; 38
      0003ED 26                    1275 	.db #0x26	; 38
      0003EE 26                    1276 	.db #0x26	; 38
      0003EF 26                    1277 	.db #0x26	; 38
      0003F0 26                    1278 	.db #0x26	; 38
      0003F1 26                    1279 	.db #0x26	; 38
      0003F2 26                    1280 	.db #0x26	; 38
      0003F3 26                    1281 	.db #0x26	; 38
      0003F4 26                    1282 	.db #0x26	; 38
      0003F5 26                    1283 	.db #0x26	; 38
      0003F6 26                    1284 	.db #0x26	; 38
      0003F7 26                    1285 	.db #0x26	; 38
      0003F8 26                    1286 	.db #0x26	; 38
      0003F9 26                    1287 	.db #0x26	; 38
      0003FA 26                    1288 	.db #0x26	; 38
      0003FB 26                    1289 	.db #0x26	; 38
      0003FC 26                    1290 	.db #0x26	; 38
      0003FD 26                    1291 	.db #0x26	; 38
      0003FE 26                    1292 	.db #0x26	; 38
      0003FF 26                    1293 	.db #0x26	; 38
      000400 26                    1294 	.db #0x26	; 38
      000401 26                    1295 	.db #0x26	; 38
      000402 26                    1296 	.db #0x26	; 38
      000403 26                    1297 	.db #0x26	; 38
      000404 26                    1298 	.db #0x26	; 38
      000405 26                    1299 	.db #0x26	; 38
      000406 26                    1300 	.db #0x26	; 38
      000407 26                    1301 	.db #0x26	; 38
      000408 26                    1302 	.db #0x26	; 38
      000409 26                    1303 	.db #0x26	; 38
      00040A 26                    1304 	.db #0x26	; 38
      00040B 26                    1305 	.db #0x26	; 38
      00040C 26                    1306 	.db #0x26	; 38
      00040D 2B                    1307 	.db #0x2b	; 43
      00040E 26                    1308 	.db #0x26	; 38
      00040F 26                    1309 	.db #0x26	; 38
      000410 26                    1310 	.db #0x26	; 38
      000411 26                    1311 	.db #0x26	; 38
      000412 26                    1312 	.db #0x26	; 38
      000413 26                    1313 	.db #0x26	; 38
      000414 26                    1314 	.db #0x26	; 38
      000415 26                    1315 	.db #0x26	; 38
      000416 26                    1316 	.db #0x26	; 38
      000417 26                    1317 	.db #0x26	; 38
      000418 26                    1318 	.db #0x26	; 38
      000419 26                    1319 	.db #0x26	; 38
      00041A 26                    1320 	.db #0x26	; 38
      00041B 26                    1321 	.db #0x26	; 38
      00041C 26                    1322 	.db #0x26	; 38
      00041D 26                    1323 	.db #0x26	; 38
      00041E 26                    1324 	.db #0x26	; 38
      00041F 26                    1325 	.db #0x26	; 38
      000420 2B                    1326 	.db #0x2b	; 43
      000421 26                    1327 	.db #0x26	; 38
      000422 26                    1328 	.db #0x26	; 38
      000423 26                    1329 	.db #0x26	; 38
      000424 26                    1330 	.db #0x26	; 38
      000425 26                    1331 	.db #0x26	; 38
      000426 26                    1332 	.db #0x26	; 38
      000427 26                    1333 	.db #0x26	; 38
      000428 26                    1334 	.db #0x26	; 38
      000429 26                    1335 	.db #0x26	; 38
      00042A 26                    1336 	.db #0x26	; 38
      00042B 26                    1337 	.db #0x26	; 38
      00042C 26                    1338 	.db #0x26	; 38
      00042D 26                    1339 	.db #0x26	; 38
      00042E 26                    1340 	.db #0x26	; 38
      00042F 26                    1341 	.db #0x26	; 38
      000430 26                    1342 	.db #0x26	; 38
      000431 26                    1343 	.db #0x26	; 38
      000432 26                    1344 	.db #0x26	; 38
      000433 26                    1345 	.db #0x26	; 38
      000434 26                    1346 	.db #0x26	; 38
      000435 26                    1347 	.db #0x26	; 38
      000436 26                    1348 	.db #0x26	; 38
      000437 2C                    1349 	.db #0x2c	; 44
      000438 26                    1350 	.db #0x26	; 38
      000439 26                    1351 	.db #0x26	; 38
      00043A 26                    1352 	.db #0x26	; 38
      00043B 26                    1353 	.db #0x26	; 38
      00043C 26                    1354 	.db #0x26	; 38
      00043D 26                    1355 	.db #0x26	; 38
      00043E 26                    1356 	.db #0x26	; 38
      00043F 26                    1357 	.db #0x26	; 38
      000440 26                    1358 	.db #0x26	; 38
      000441 26                    1359 	.db #0x26	; 38
      000442 26                    1360 	.db #0x26	; 38
      000443 26                    1361 	.db #0x26	; 38
      000444 26                    1362 	.db #0x26	; 38
      000445 26                    1363 	.db #0x26	; 38
      000446 26                    1364 	.db #0x26	; 38
      000447 26                    1365 	.db #0x26	; 38
      000448 25                    1366 	.db #0x25	; 37
      000449 2C                    1367 	.db #0x2c	; 44
      00044A 26                    1368 	.db #0x26	; 38
      00044B 26                    1369 	.db #0x26	; 38
      00044C 26                    1370 	.db #0x26	; 38
      00044D 26                    1371 	.db #0x26	; 38
      00044E 26                    1372 	.db #0x26	; 38
      00044F 26                    1373 	.db #0x26	; 38
      000450 26                    1374 	.db #0x26	; 38
      000451 26                    1375 	.db #0x26	; 38
      000452 26                    1376 	.db #0x26	; 38
      000453 26                    1377 	.db #0x26	; 38
      000454 26                    1378 	.db #0x26	; 38
      000455 26                    1379 	.db #0x26	; 38
      000456 26                    1380 	.db #0x26	; 38
      000457 26                    1381 	.db #0x26	; 38
      000458 26                    1382 	.db #0x26	; 38
      000459 26                    1383 	.db #0x26	; 38
      00045A 2B                    1384 	.db #0x2b	; 43
      00045B 26                    1385 	.db #0x26	; 38
      00045C 26                    1386 	.db #0x26	; 38
      00045D 26                    1387 	.db #0x26	; 38
      00045E 26                    1388 	.db #0x26	; 38
      00045F 26                    1389 	.db #0x26	; 38
      000460 26                    1390 	.db #0x26	; 38
      000461 26                    1391 	.db #0x26	; 38
      000462 26                    1392 	.db #0x26	; 38
      000463 26                    1393 	.db #0x26	; 38
      000464 26                    1394 	.db #0x26	; 38
      000465 26                    1395 	.db #0x26	; 38
      000466 26                    1396 	.db #0x26	; 38
      000467 26                    1397 	.db #0x26	; 38
      000468 26                    1398 	.db #0x26	; 38
      000469 26                    1399 	.db #0x26	; 38
      00046A 26                    1400 	.db #0x26	; 38
      00046B 26                    1401 	.db #0x26	; 38
      00046C 26                    1402 	.db #0x26	; 38
      00046D 26                    1403 	.db #0x26	; 38
      00046E 26                    1404 	.db #0x26	; 38
      00046F 26                    1405 	.db #0x26	; 38
      000470 26                    1406 	.db #0x26	; 38
      000471 26                    1407 	.db #0x26	; 38
      000472 27                    1408 	.db #0x27	; 39
      000473 28                    1409 	.db #0x28	; 40
      000474 26                    1410 	.db #0x26	; 38
      000475 26                    1411 	.db #0x26	; 38
      000476 26                    1412 	.db #0x26	; 38
      000477 26                    1413 	.db #0x26	; 38
      000478 26                    1414 	.db #0x26	; 38
      000479 26                    1415 	.db #0x26	; 38
      00047A 26                    1416 	.db #0x26	; 38
      00047B 26                    1417 	.db #0x26	; 38
      00047C 26                    1418 	.db #0x26	; 38
      00047D 26                    1419 	.db #0x26	; 38
      00047E 26                    1420 	.db #0x26	; 38
      00047F 26                    1421 	.db #0x26	; 38
      000480 26                    1422 	.db #0x26	; 38
      000481 26                    1423 	.db #0x26	; 38
      000482 26                    1424 	.db #0x26	; 38
      000483 26                    1425 	.db #0x26	; 38
      000484 26                    1426 	.db #0x26	; 38
      000485 26                    1427 	.db #0x26	; 38
      000486 2B                    1428 	.db #0x2b	; 43
      000487                       1429 _backgroundtiles:
      000487 40                    1430 	.db #0x40	; 64
      000488 38                    1431 	.db #0x38	; 56	'8'
      000489 3A                    1432 	.db #0x3a	; 58
      00048A 44                    1433 	.db #0x44	; 68	'D'
      00048B 7C                    1434 	.db #0x7c	; 124
      00048C 9A                    1435 	.db #0x9a	; 154
      00048D 5E                    1436 	.db #0x5e	; 94
      00048E E9                    1437 	.db #0xe9	; 233
      00048F 7A                    1438 	.db #0x7a	; 122	'z'
      000490 87                    1439 	.db #0x87	; 135
      000491 76                    1440 	.db #0x76	; 118	'v'
      000492 B9                    1441 	.db #0xb9	; 185
      000493 3C                    1442 	.db #0x3c	; 60
      000494 72                    1443 	.db #0x72	; 114	'r'
      000495 00                    1444 	.db #0x00	; 0
      000496 3C                    1445 	.db #0x3c	; 60
      000497 00                    1446 	.db #0x00	; 0
      000498 00                    1447 	.db #0x00	; 0
      000499 00                    1448 	.db #0x00	; 0
      00049A 00                    1449 	.db #0x00	; 0
      00049B 00                    1450 	.db #0x00	; 0
      00049C 00                    1451 	.db #0x00	; 0
      00049D 00                    1452 	.db #0x00	; 0
      00049E 00                    1453 	.db #0x00	; 0
      00049F 00                    1454 	.db #0x00	; 0
      0004A0 00                    1455 	.db #0x00	; 0
      0004A1 00                    1456 	.db #0x00	; 0
      0004A2 00                    1457 	.db #0x00	; 0
      0004A3 00                    1458 	.db #0x00	; 0
      0004A4 00                    1459 	.db #0x00	; 0
      0004A5 00                    1460 	.db #0x00	; 0
      0004A6 00                    1461 	.db #0x00	; 0
      0004A7 00                    1462 	.db #0x00	; 0
      0004A8 0F                    1463 	.db #0x0f	; 15
      0004A9 08                    1464 	.db #0x08	; 8
      0004AA 17                    1465 	.db #0x17	; 23
      0004AB 1C                    1466 	.db #0x1c	; 28
      0004AC 23                    1467 	.db #0x23	; 35
      0004AD 3E                    1468 	.db #0x3e	; 62
      0004AE 41                    1469 	.db #0x41	; 65	'A'
      0004AF 1B                    1470 	.db #0x1b	; 27
      0004B0 64                    1471 	.db #0x64	; 100	'd'
      0004B1 31                    1472 	.db #0x31	; 49	'1'
      0004B2 4E                    1473 	.db #0x4e	; 78	'N'
      0004B3 B1                    1474 	.db #0xb1	; 177
      0004B4 CE                    1475 	.db #0xce	; 206
      0004B5 BB                    1476 	.db #0xbb	; 187
      0004B6 C4                    1477 	.db #0xc4	; 196
      0004B7 00                    1478 	.db #0x00	; 0
      0004B8 F8                    1479 	.db #0xf8	; 248
      0004B9 00                    1480 	.db #0x00	; 0
      0004BA FC                    1481 	.db #0xfc	; 252
      0004BB E0                    1482 	.db #0xe0	; 224
      0004BC 1E                    1483 	.db #0x1e	; 30
      0004BD F0                    1484 	.db #0xf0	; 240
      0004BE 0F                    1485 	.db #0x0f	; 15
      0004BF BE                    1486 	.db #0xbe	; 190
      0004C0 01                    1487 	.db #0x01	; 1
      0004C1 BC                    1488 	.db #0xbc	; 188
      0004C2 02                    1489 	.db #0x02	; 2
      0004C3 CE                    1490 	.db #0xce	; 206
      0004C4 01                    1491 	.db #0x01	; 1
      0004C5 F6                    1492 	.db #0xf6	; 246
      0004C6 61                    1493 	.db #0x61	; 97	'a'
      0004C7 F4                    1494 	.db #0xf4	; 244
      0004C8 02                    1495 	.db #0x02	; 2
      0004C9 94                    1496 	.db #0x94	; 148
      0004CA 62                    1497 	.db #0x62	; 98	'b'
      0004CB E4                    1498 	.db #0xe4	; 228
      0004CC 02                    1499 	.db #0x02	; 2
      0004CD 6C                    1500 	.db #0x6c	; 108	'l'
      0004CE 82                    1501 	.db #0x82	; 130
      0004CF 70                    1502 	.db #0x70	; 112	'p'
      0004D0 8C                    1503 	.db #0x8c	; 140
      0004D1 60                    1504 	.db #0x60	; 96
      0004D2 90                    1505 	.db #0x90	; 144
      0004D3 00                    1506 	.db #0x00	; 0
      0004D4 E0                    1507 	.db #0xe0	; 224
      0004D5 80                    1508 	.db #0x80	; 128
      0004D6 80                    1509 	.db #0x80	; 128
      0004D7 8E                    1510 	.db #0x8e	; 142
      0004D8 F7                    1511 	.db #0xf7	; 247
      0004D9 8F                    1512 	.db #0x8f	; 143
      0004DA F3                    1513 	.db #0xf3	; 243
      0004DB 86                    1514 	.db #0x86	; 134
      0004DC F9                    1515 	.db #0xf9	; 249
      0004DD 42                    1516 	.db #0x42	; 66	'B'
      0004DE 7D                    1517 	.db #0x7d	; 125
      0004DF 80                    1518 	.db #0x80	; 128
      0004E0 FF                    1519 	.db #0xff	; 255
      0004E1 44                    1520 	.db #0x44	; 68	'D'
      0004E2 7F                    1521 	.db #0x7f	; 127
      0004E3 28                    1522 	.db #0x28	; 40
      0004E4 3F                    1523 	.db #0x3f	; 63
      0004E5 07                    1524 	.db #0x07	; 7
      0004E6 07                    1525 	.db #0x07	; 7
      0004E7 00                    1526 	.db #0x00	; 0
      0004E8 00                    1527 	.db #0x00	; 0
      0004E9 08                    1528 	.db #0x08	; 8
      0004EA 00                    1529 	.db #0x00	; 0
      0004EB 08                    1530 	.db #0x08	; 8
      0004EC 00                    1531 	.db #0x00	; 0
      0004ED 1C                    1532 	.db #0x1c	; 28
      0004EE 00                    1533 	.db #0x00	; 0
      0004EF 7F                    1534 	.db #0x7f	; 127
      0004F0 00                    1535 	.db #0x00	; 0
      0004F1 1C                    1536 	.db #0x1c	; 28
      0004F2 00                    1537 	.db #0x00	; 0
      0004F3 08                    1538 	.db #0x08	; 8
      0004F4 00                    1539 	.db #0x00	; 0
      0004F5 08                    1540 	.db #0x08	; 8
      0004F6 00                    1541 	.db #0x00	; 0
      0004F7 00                    1542 	.db #0x00	; 0
      0004F8 00                    1543 	.db #0x00	; 0
      0004F9 00                    1544 	.db #0x00	; 0
      0004FA 00                    1545 	.db #0x00	; 0
      0004FB 00                    1546 	.db #0x00	; 0
      0004FC 00                    1547 	.db #0x00	; 0
      0004FD 10                    1548 	.db #0x10	; 16
      0004FE 00                    1549 	.db #0x00	; 0
      0004FF 00                    1550 	.db #0x00	; 0
      000500 00                    1551 	.db #0x00	; 0
      000501 00                    1552 	.db #0x00	; 0
      000502 00                    1553 	.db #0x00	; 0
      000503 00                    1554 	.db #0x00	; 0
      000504 00                    1555 	.db #0x00	; 0
      000505 00                    1556 	.db #0x00	; 0
      000506 00                    1557 	.db #0x00	; 0
      000507                       1558 _healthblock:
      000507 FE                    1559 	.db #0xfe	; 254
      000508 FE                    1560 	.db #0xfe	; 254
      000509 FE                    1561 	.db #0xfe	; 254
      00050A FE                    1562 	.db #0xfe	; 254
      00050B FE                    1563 	.db #0xfe	; 254
      00050C FE                    1564 	.db #0xfe	; 254
      00050D FE                    1565 	.db #0xfe	; 254
      00050E FE                    1566 	.db #0xfe	; 254
      00050F FE                    1567 	.db #0xfe	; 254
      000510 FE                    1568 	.db #0xfe	; 254
      000511 FE                    1569 	.db #0xfe	; 254
      000512 FE                    1570 	.db #0xfe	; 254
      000513 FE                    1571 	.db #0xfe	; 254
      000514 FE                    1572 	.db #0xfe	; 254
      000515 00                    1573 	.db #0x00	; 0
      000516 00                    1574 	.db #0x00	; 0
      000517                       1575 _enemyOptionCount:
      000517 05                    1576 	.db #0x05	; 5
      000518                       1577 _enemy1:
      000518 66                    1578 	.db #0x66	; 102	'f'
      000519 24                    1579 	.db #0x24	; 36
      00051A E7                    1580 	.db #0xe7	; 231
      00051B 66                    1581 	.db #0x66	; 102	'f'
      00051C F7                    1582 	.db #0xf7	; 247
      00051D E7                    1583 	.db #0xe7	; 231
      00051E 1C                    1584 	.db #0x1c	; 28
      00051F 18                    1585 	.db #0x18	; 24
      000520 38                    1586 	.db #0x38	; 56	'8'
      000521 18                    1587 	.db #0x18	; 24
      000522 EF                    1588 	.db #0xef	; 239
      000523 E7                    1589 	.db #0xe7	; 231
      000524 E7                    1590 	.db #0xe7	; 231
      000525 66                    1591 	.db #0x66	; 102	'f'
      000526 66                    1592 	.db #0x66	; 102	'f'
      000527 24                    1593 	.db #0x24	; 36
      000528 00                    1594 	.db #0x00	; 0
      000529 00                    1595 	.db #0x00	; 0
      00052A 00                    1596 	.db #0x00	; 0
      00052B 00                    1597 	.db #0x00	; 0
      00052C 00                    1598 	.db #0x00	; 0
      00052D 00                    1599 	.db #0x00	; 0
      00052E 00                    1600 	.db #0x00	; 0
      00052F 00                    1601 	.db #0x00	; 0
      000530 00                    1602 	.db #0x00	; 0
      000531 00                    1603 	.db #0x00	; 0
      000532 00                    1604 	.db #0x00	; 0
      000533 00                    1605 	.db #0x00	; 0
      000534 00                    1606 	.db #0x00	; 0
      000535 00                    1607 	.db #0x00	; 0
      000536 00                    1608 	.db #0x00	; 0
      000537 00                    1609 	.db #0x00	; 0
      000538 3C                    1610 	.db #0x3c	; 60
      000539 3C                    1611 	.db #0x3c	; 60
      00053A 5E                    1612 	.db #0x5e	; 94
      00053B 62                    1613 	.db #0x62	; 98	'b'
      00053C 8F                    1614 	.db #0x8f	; 143
      00053D F1                    1615 	.db #0xf1	; 241
      00053E C7                    1616 	.db #0xc7	; 199
      00053F F9                    1617 	.db #0xf9	; 249
      000540 C3                    1618 	.db #0xc3	; 195
      000541 FD                    1619 	.db #0xfd	; 253
      000542 E1                    1620 	.db #0xe1	; 225
      000543 FF                    1621 	.db #0xff	; 255
      000544 7A                    1622 	.db #0x7a	; 122	'z'
      000545 7E                    1623 	.db #0x7e	; 126
      000546 3C                    1624 	.db #0x3c	; 60
      000547 3C                    1625 	.db #0x3c	; 60
      000548 00                    1626 	.db #0x00	; 0
      000549 00                    1627 	.db #0x00	; 0
      00054A 00                    1628 	.db #0x00	; 0
      00054B 00                    1629 	.db #0x00	; 0
      00054C 00                    1630 	.db #0x00	; 0
      00054D 00                    1631 	.db #0x00	; 0
      00054E 00                    1632 	.db #0x00	; 0
      00054F 00                    1633 	.db #0x00	; 0
      000550 00                    1634 	.db #0x00	; 0
      000551 00                    1635 	.db #0x00	; 0
      000552 00                    1636 	.db #0x00	; 0
      000553 00                    1637 	.db #0x00	; 0
      000554 00                    1638 	.db #0x00	; 0
      000555 00                    1639 	.db #0x00	; 0
      000556 00                    1640 	.db #0x00	; 0
      000557 00                    1641 	.db #0x00	; 0
      000558 3C                    1642 	.db #0x3c	; 60
      000559 3E                    1643 	.db #0x3e	; 62
      00055A 20                    1644 	.db #0x20	; 32
      00055B 38                    1645 	.db #0x38	; 56	'8'
      00055C 44                    1646 	.db #0x44	; 68	'D'
      00055D 78                    1647 	.db #0x78	; 120	'x'
      00055E BA                    1648 	.db #0xba	; 186
      00055F C4                    1649 	.db #0xc4	; 196
      000560 BA                    1650 	.db #0xba	; 186
      000561 C4                    1651 	.db #0xc4	; 196
      000562 44                    1652 	.db #0x44	; 68	'D'
      000563 78                    1653 	.db #0x78	; 120	'x'
      000564 20                    1654 	.db #0x20	; 32
      000565 38                    1655 	.db #0x38	; 56	'8'
      000566 3C                    1656 	.db #0x3c	; 60
      000567 3E                    1657 	.db #0x3e	; 62
      000568                       1658 _largeenemies:
      000568 00                    1659 	.db #0x00	; 0
      000569 00                    1660 	.db #0x00	; 0
      00056A 00                    1661 	.db #0x00	; 0
      00056B 00                    1662 	.db #0x00	; 0
      00056C 00                    1663 	.db #0x00	; 0
      00056D 00                    1664 	.db #0x00	; 0
      00056E 00                    1665 	.db #0x00	; 0
      00056F 00                    1666 	.db #0x00	; 0
      000570 00                    1667 	.db #0x00	; 0
      000571 00                    1668 	.db #0x00	; 0
      000572 00                    1669 	.db #0x00	; 0
      000573 00                    1670 	.db #0x00	; 0
      000574 00                    1671 	.db #0x00	; 0
      000575 00                    1672 	.db #0x00	; 0
      000576 7F                    1673 	.db #0x7f	; 127
      000577 7F                    1674 	.db #0x7f	; 127
      000578 7F                    1675 	.db #0x7f	; 127
      000579 7F                    1676 	.db #0x7f	; 127
      00057A 00                    1677 	.db #0x00	; 0
      00057B 00                    1678 	.db #0x00	; 0
      00057C 00                    1679 	.db #0x00	; 0
      00057D 00                    1680 	.db #0x00	; 0
      00057E 00                    1681 	.db #0x00	; 0
      00057F 00                    1682 	.db #0x00	; 0
      000580 00                    1683 	.db #0x00	; 0
      000581 00                    1684 	.db #0x00	; 0
      000582 00                    1685 	.db #0x00	; 0
      000583 00                    1686 	.db #0x00	; 0
      000584 00                    1687 	.db #0x00	; 0
      000585 00                    1688 	.db #0x00	; 0
      000586 00                    1689 	.db #0x00	; 0
      000587 00                    1690 	.db #0x00	; 0
      000588 00                    1691 	.db #0x00	; 0
      000589 00                    1692 	.db #0x00	; 0
      00058A 40                    1693 	.db #0x40	; 64
      00058B 40                    1694 	.db #0x40	; 64
      00058C 60                    1695 	.db #0x60	; 96
      00058D 60                    1696 	.db #0x60	; 96
      00058E 70                    1697 	.db #0x70	; 112	'p'
      00058F 70                    1698 	.db #0x70	; 112	'p'
      000590 78                    1699 	.db #0x78	; 120	'x'
      000591 78                    1700 	.db #0x78	; 120	'x'
      000592 7C                    1701 	.db #0x7c	; 124
      000593 7C                    1702 	.db #0x7c	; 124
      000594 7E                    1703 	.db #0x7e	; 126
      000595 7E                    1704 	.db #0x7e	; 126
      000596 FF                    1705 	.db #0xff	; 255
      000597 FF                    1706 	.db #0xff	; 255
      000598 FF                    1707 	.db #0xff	; 255
      000599 FF                    1708 	.db #0xff	; 255
      00059A 7E                    1709 	.db #0x7e	; 126
      00059B 7E                    1710 	.db #0x7e	; 126
      00059C 7C                    1711 	.db #0x7c	; 124
      00059D 7C                    1712 	.db #0x7c	; 124
      00059E 78                    1713 	.db #0x78	; 120	'x'
      00059F 78                    1714 	.db #0x78	; 120	'x'
      0005A0 70                    1715 	.db #0x70	; 112	'p'
      0005A1 70                    1716 	.db #0x70	; 112	'p'
      0005A2 60                    1717 	.db #0x60	; 96
      0005A3 60                    1718 	.db #0x60	; 96
      0005A4 40                    1719 	.db #0x40	; 64
      0005A5 40                    1720 	.db #0x40	; 64
      0005A6 00                    1721 	.db #0x00	; 0
      0005A7 00                    1722 	.db #0x00	; 0
      0005A8 07                    1723 	.db #0x07	; 7
      0005A9 00                    1724 	.db #0x00	; 0
      0005AA 18                    1725 	.db #0x18	; 24
      0005AB 00                    1726 	.db #0x00	; 0
      0005AC 20                    1727 	.db #0x20	; 32
      0005AD 00                    1728 	.db #0x00	; 0
      0005AE 4C                    1729 	.db #0x4c	; 76	'L'
      0005AF 0C                    1730 	.db #0x0c	; 12
      0005B0 43                    1731 	.db #0x43	; 67	'C'
      0005B1 0F                    1732 	.db #0x0f	; 15
      0005B2 84                    1733 	.db #0x84	; 132
      0005B3 27                    1734 	.db #0x27	; 39
      0005B4 80                    1735 	.db #0x80	; 128
      0005B5 13                    1736 	.db #0x13	; 19
      0005B6 83                    1737 	.db #0x83	; 131
      0005B7 2A                    1738 	.db #0x2a	; 42
      0005B8 83                    1739 	.db #0x83	; 131
      0005B9 16                    1740 	.db #0x16	; 22
      0005BA 80                    1741 	.db #0x80	; 128
      0005BB 23                    1742 	.db #0x23	; 35
      0005BC 84                    1743 	.db #0x84	; 132
      0005BD 07                    1744 	.db #0x07	; 7
      0005BE 43                    1745 	.db #0x43	; 67	'C'
      0005BF 0F                    1746 	.db #0x0f	; 15
      0005C0 4C                    1747 	.db #0x4c	; 76	'L'
      0005C1 0C                    1748 	.db #0x0c	; 12
      0005C2 20                    1749 	.db #0x20	; 32
      0005C3 00                    1750 	.db #0x00	; 0
      0005C4 18                    1751 	.db #0x18	; 24
      0005C5 00                    1752 	.db #0x00	; 0
      0005C6 07                    1753 	.db #0x07	; 7
      0005C7 00                    1754 	.db #0x00	; 0
      0005C8 E0                    1755 	.db #0xe0	; 224
      0005C9 00                    1756 	.db #0x00	; 0
      0005CA 18                    1757 	.db #0x18	; 24
      0005CB 00                    1758 	.db #0x00	; 0
      0005CC 04                    1759 	.db #0x04	; 4
      0005CD 00                    1760 	.db #0x00	; 0
      0005CE 02                    1761 	.db #0x02	; 2
      0005CF 00                    1762 	.db #0x00	; 0
      0005D0 02                    1763 	.db #0x02	; 2
      0005D1 00                    1764 	.db #0x00	; 0
      0005D2 C1                    1765 	.db #0xc1	; 193
      0005D3 C0                    1766 	.db #0xc0	; 192
      0005D4 11                    1767 	.db #0x11	; 17
      0005D5 F0                    1768 	.db #0xf0	; 240
      0005D6 E5                    1769 	.db #0xe5	; 229
      0005D7 1C                    1770 	.db #0x1c	; 28
      0005D8 E5                    1771 	.db #0xe5	; 229
      0005D9 1C                    1772 	.db #0x1c	; 28
      0005DA 11                    1773 	.db #0x11	; 17
      0005DB F0                    1774 	.db #0xf0	; 240
      0005DC C1                    1775 	.db #0xc1	; 193
      0005DD C0                    1776 	.db #0xc0	; 192
      0005DE 02                    1777 	.db #0x02	; 2
      0005DF 00                    1778 	.db #0x00	; 0
      0005E0 02                    1779 	.db #0x02	; 2
      0005E1 00                    1780 	.db #0x00	; 0
      0005E2 04                    1781 	.db #0x04	; 4
      0005E3 00                    1782 	.db #0x00	; 0
      0005E4 18                    1783 	.db #0x18	; 24
      0005E5 00                    1784 	.db #0x00	; 0
      0005E6 E0                    1785 	.db #0xe0	; 224
      0005E7 00                    1786 	.db #0x00	; 0
      0005E8                       1787 _ProjectileTiles:
      0005E8 24                    1788 	.db #0x24	; 36
      0005E9 18                    1789 	.db #0x18	; 24
      0005EA 18                    1790 	.db #0x18	; 24
      0005EB 3C                    1791 	.db #0x3c	; 60
      0005EC 18                    1792 	.db #0x18	; 24
      0005ED 3C                    1793 	.db #0x3c	; 60
      0005EE 24                    1794 	.db #0x24	; 36
      0005EF 18                    1795 	.db #0x18	; 24
      0005F0 00                    1796 	.db #0x00	; 0
      0005F1 00                    1797 	.db #0x00	; 0
      0005F2 00                    1798 	.db #0x00	; 0
      0005F3 00                    1799 	.db #0x00	; 0
      0005F4 00                    1800 	.db #0x00	; 0
      0005F5 00                    1801 	.db #0x00	; 0
      0005F6 00                    1802 	.db #0x00	; 0
      0005F7 00                    1803 	.db #0x00	; 0
      0005F8 00                    1804 	.db #0x00	; 0
      0005F9 00                    1805 	.db #0x00	; 0
      0005FA 00                    1806 	.db #0x00	; 0
      0005FB 00                    1807 	.db #0x00	; 0
      0005FC 00                    1808 	.db #0x00	; 0
      0005FD 00                    1809 	.db #0x00	; 0
      0005FE 00                    1810 	.db #0x00	; 0
      0005FF 00                    1811 	.db #0x00	; 0
      000600 00                    1812 	.db #0x00	; 0
      000601 00                    1813 	.db #0x00	; 0
      000602 00                    1814 	.db #0x00	; 0
      000603 00                    1815 	.db #0x00	; 0
      000604 00                    1816 	.db #0x00	; 0
      000605 00                    1817 	.db #0x00	; 0
      000606 00                    1818 	.db #0x00	; 0
      000607 00                    1819 	.db #0x00	; 0
      000608 00                    1820 	.db #0x00	; 0
      000609 00                    1821 	.db #0x00	; 0
      00060A 00                    1822 	.db #0x00	; 0
      00060B 00                    1823 	.db #0x00	; 0
      00060C 09                    1824 	.db #0x09	; 9
      00060D 06                    1825 	.db #0x06	; 6
      00060E 06                    1826 	.db #0x06	; 6
      00060F 0F                    1827 	.db #0x0f	; 15
      000610 06                    1828 	.db #0x06	; 6
      000611 0F                    1829 	.db #0x0f	; 15
      000612 09                    1830 	.db #0x09	; 9
      000613 06                    1831 	.db #0x06	; 6
      000614 00                    1832 	.db #0x00	; 0
      000615 00                    1833 	.db #0x00	; 0
      000616 00                    1834 	.db #0x00	; 0
      000617 00                    1835 	.db #0x00	; 0
      000618 00                    1836 	.db #0x00	; 0
      000619 00                    1837 	.db #0x00	; 0
      00061A 00                    1838 	.db #0x00	; 0
      00061B 00                    1839 	.db #0x00	; 0
      00061C 00                    1840 	.db #0x00	; 0
      00061D 00                    1841 	.db #0x00	; 0
      00061E 00                    1842 	.db #0x00	; 0
      00061F 00                    1843 	.db #0x00	; 0
      000620 00                    1844 	.db #0x00	; 0
      000621 00                    1845 	.db #0x00	; 0
      000622 00                    1846 	.db #0x00	; 0
      000623 00                    1847 	.db #0x00	; 0
      000624 00                    1848 	.db #0x00	; 0
      000625 00                    1849 	.db #0x00	; 0
      000626 00                    1850 	.db #0x00	; 0
      000627 00                    1851 	.db #0x00	; 0
      000628 09                    1852 	.db #0x09	; 9
      000629 06                    1853 	.db #0x06	; 6
      00062A 06                    1854 	.db #0x06	; 6
      00062B 0F                    1855 	.db #0x0f	; 15
      00062C 06                    1856 	.db #0x06	; 6
      00062D 0F                    1857 	.db #0x0f	; 15
      00062E 09                    1858 	.db #0x09	; 9
      00062F 06                    1859 	.db #0x06	; 6
      000630 00                    1860 	.db #0x00	; 0
      000631 00                    1861 	.db #0x00	; 0
      000632 00                    1862 	.db #0x00	; 0
      000633 00                    1863 	.db #0x00	; 0
      000634 00                    1864 	.db #0x00	; 0
      000635 00                    1865 	.db #0x00	; 0
      000636 00                    1866 	.db #0x00	; 0
      000637 00                    1867 	.db #0x00	; 0
      000638 00                    1868 	.db #0x00	; 0
      000639 00                    1869 	.db #0x00	; 0
      00063A 00                    1870 	.db #0x00	; 0
      00063B 00                    1871 	.db #0x00	; 0
      00063C 00                    1872 	.db #0x00	; 0
      00063D 00                    1873 	.db #0x00	; 0
      00063E 00                    1874 	.db #0x00	; 0
      00063F 00                    1875 	.db #0x00	; 0
      000640 00                    1876 	.db #0x00	; 0
      000641 00                    1877 	.db #0x00	; 0
      000642 00                    1878 	.db #0x00	; 0
      000643 00                    1879 	.db #0x00	; 0
      000644 00                    1880 	.db #0x00	; 0
      000645 00                    1881 	.db #0x00	; 0
      000646 00                    1882 	.db #0x00	; 0
      000647 00                    1883 	.db #0x00	; 0
      000648 99                    1884 	.db #0x99	; 153
      000649 66                    1885 	.db #0x66	; 102	'f'
      00064A 66                    1886 	.db #0x66	; 102	'f'
      00064B FF                    1887 	.db #0xff	; 255
      00064C 66                    1888 	.db #0x66	; 102	'f'
      00064D FF                    1889 	.db #0xff	; 255
      00064E 99                    1890 	.db #0x99	; 153
      00064F 66                    1891 	.db #0x66	; 102	'f'
      000650 00                    1892 	.db #0x00	; 0
      000651 00                    1893 	.db #0x00	; 0
      000652 00                    1894 	.db #0x00	; 0
      000653 00                    1895 	.db #0x00	; 0
      000654 00                    1896 	.db #0x00	; 0
      000655 00                    1897 	.db #0x00	; 0
      000656 00                    1898 	.db #0x00	; 0
      000657 00                    1899 	.db #0x00	; 0
      000658 00                    1900 	.db #0x00	; 0
      000659 00                    1901 	.db #0x00	; 0
      00065A 00                    1902 	.db #0x00	; 0
      00065B 00                    1903 	.db #0x00	; 0
      00065C 00                    1904 	.db #0x00	; 0
      00065D 00                    1905 	.db #0x00	; 0
      00065E 00                    1906 	.db #0x00	; 0
      00065F 00                    1907 	.db #0x00	; 0
      000660 00                    1908 	.db #0x00	; 0
      000661 00                    1909 	.db #0x00	; 0
      000662 00                    1910 	.db #0x00	; 0
      000663 00                    1911 	.db #0x00	; 0
      000664 00                    1912 	.db #0x00	; 0
      000665 00                    1913 	.db #0x00	; 0
      000666 00                    1914 	.db #0x00	; 0
      000667 00                    1915 	.db #0x00	; 0
      000668 09                    1916 	.db #0x09	; 9
      000669 06                    1917 	.db #0x06	; 6
      00066A 06                    1918 	.db #0x06	; 6
      00066B 0F                    1919 	.db #0x0f	; 15
      00066C 06                    1920 	.db #0x06	; 6
      00066D 0F                    1921 	.db #0x0f	; 15
      00066E 09                    1922 	.db #0x09	; 9
      00066F 06                    1923 	.db #0x06	; 6
      000670 09                    1924 	.db #0x09	; 9
      000671 06                    1925 	.db #0x06	; 6
      000672 06                    1926 	.db #0x06	; 6
      000673 0F                    1927 	.db #0x0f	; 15
      000674 06                    1928 	.db #0x06	; 6
      000675 0F                    1929 	.db #0x0f	; 15
      000676 09                    1930 	.db #0x09	; 9
      000677 06                    1931 	.db #0x06	; 6
      000678 00                    1932 	.db #0x00	; 0
      000679 00                    1933 	.db #0x00	; 0
      00067A 00                    1934 	.db #0x00	; 0
      00067B 00                    1935 	.db #0x00	; 0
      00067C 00                    1936 	.db #0x00	; 0
      00067D 00                    1937 	.db #0x00	; 0
      00067E 00                    1938 	.db #0x00	; 0
      00067F 00                    1939 	.db #0x00	; 0
      000680 00                    1940 	.db #0x00	; 0
      000681 00                    1941 	.db #0x00	; 0
      000682 00                    1942 	.db #0x00	; 0
      000683 00                    1943 	.db #0x00	; 0
      000684 00                    1944 	.db #0x00	; 0
      000685 00                    1945 	.db #0x00	; 0
      000686 00                    1946 	.db #0x00	; 0
      000687 00                    1947 	.db #0x00	; 0
      000688 90                    1948 	.db #0x90	; 144
      000689 60                    1949 	.db #0x60	; 96
      00068A 60                    1950 	.db #0x60	; 96
      00068B F0                    1951 	.db #0xf0	; 240
      00068C 60                    1952 	.db #0x60	; 96
      00068D F0                    1953 	.db #0xf0	; 240
      00068E 90                    1954 	.db #0x90	; 144
      00068F 60                    1955 	.db #0x60	; 96
      000690 09                    1956 	.db #0x09	; 9
      000691 06                    1957 	.db #0x06	; 6
      000692 06                    1958 	.db #0x06	; 6
      000693 0F                    1959 	.db #0x0f	; 15
      000694 06                    1960 	.db #0x06	; 6
      000695 0F                    1961 	.db #0x0f	; 15
      000696 09                    1962 	.db #0x09	; 9
      000697 06                    1963 	.db #0x06	; 6
      000698 00                    1964 	.db #0x00	; 0
      000699 00                    1965 	.db #0x00	; 0
      00069A 00                    1966 	.db #0x00	; 0
      00069B 00                    1967 	.db #0x00	; 0
      00069C 00                    1968 	.db #0x00	; 0
      00069D 00                    1969 	.db #0x00	; 0
      00069E 00                    1970 	.db #0x00	; 0
      00069F 00                    1971 	.db #0x00	; 0
      0006A0 00                    1972 	.db #0x00	; 0
      0006A1 00                    1973 	.db #0x00	; 0
      0006A2 00                    1974 	.db #0x00	; 0
      0006A3 00                    1975 	.db #0x00	; 0
      0006A4 00                    1976 	.db #0x00	; 0
      0006A5 00                    1977 	.db #0x00	; 0
      0006A6 00                    1978 	.db #0x00	; 0
      0006A7 00                    1979 	.db #0x00	; 0
      0006A8 18                    1980 	.db #0x18	; 24
      0006A9 00                    1981 	.db #0x00	; 0
      0006AA 18                    1982 	.db #0x18	; 24
      0006AB 18                    1983 	.db #0x18	; 24
      0006AC 18                    1984 	.db #0x18	; 24
      0006AD 18                    1985 	.db #0x18	; 24
      0006AE 3C                    1986 	.db #0x3c	; 60
      0006AF 18                    1987 	.db #0x18	; 24
      0006B0 3C                    1988 	.db #0x3c	; 60
      0006B1 18                    1989 	.db #0x18	; 24
      0006B2 3C                    1990 	.db #0x3c	; 60
      0006B3 3C                    1991 	.db #0x3c	; 60
      0006B4 7E                    1992 	.db #0x7e	; 126
      0006B5 3C                    1993 	.db #0x3c	; 60
      0006B6 7E                    1994 	.db #0x7e	; 126
      0006B7 24                    1995 	.db #0x24	; 36
      0006B8 00                    1996 	.db #0x00	; 0
      0006B9 00                    1997 	.db #0x00	; 0
      0006BA 00                    1998 	.db #0x00	; 0
      0006BB 00                    1999 	.db #0x00	; 0
      0006BC 00                    2000 	.db #0x00	; 0
      0006BD 00                    2001 	.db #0x00	; 0
      0006BE 00                    2002 	.db #0x00	; 0
      0006BF 00                    2003 	.db #0x00	; 0
      0006C0 00                    2004 	.db #0x00	; 0
      0006C1 00                    2005 	.db #0x00	; 0
      0006C2 00                    2006 	.db #0x00	; 0
      0006C3 00                    2007 	.db #0x00	; 0
      0006C4 00                    2008 	.db #0x00	; 0
      0006C5 00                    2009 	.db #0x00	; 0
      0006C6 00                    2010 	.db #0x00	; 0
      0006C7 00                    2011 	.db #0x00	; 0
      0006C8 C0                    2012 	.db #0xc0	; 192
      0006C9 00                    2013 	.db #0x00	; 0
      0006CA F8                    2014 	.db #0xf8	; 248
      0006CB E0                    2015 	.db #0xe0	; 224
      0006CC FF                    2016 	.db #0xff	; 255
      0006CD 7E                    2017 	.db #0x7e	; 126
      0006CE FF                    2018 	.db #0xff	; 255
      0006CF 7E                    2019 	.db #0x7e	; 126
      0006D0 F8                    2020 	.db #0xf8	; 248
      0006D1 E0                    2021 	.db #0xe0	; 224
      0006D2 C0                    2022 	.db #0xc0	; 192
      0006D3 00                    2023 	.db #0x00	; 0
      0006D4 00                    2024 	.db #0x00	; 0
      0006D5 00                    2025 	.db #0x00	; 0
      0006D6 00                    2026 	.db #0x00	; 0
      0006D7 00                    2027 	.db #0x00	; 0
      0006D8 00                    2028 	.db #0x00	; 0
      0006D9 00                    2029 	.db #0x00	; 0
      0006DA 00                    2030 	.db #0x00	; 0
      0006DB 00                    2031 	.db #0x00	; 0
      0006DC 00                    2032 	.db #0x00	; 0
      0006DD 00                    2033 	.db #0x00	; 0
      0006DE 00                    2034 	.db #0x00	; 0
      0006DF 00                    2035 	.db #0x00	; 0
      0006E0 00                    2036 	.db #0x00	; 0
      0006E1 00                    2037 	.db #0x00	; 0
      0006E2 00                    2038 	.db #0x00	; 0
      0006E3 00                    2039 	.db #0x00	; 0
      0006E4 00                    2040 	.db #0x00	; 0
      0006E5 00                    2041 	.db #0x00	; 0
      0006E6 00                    2042 	.db #0x00	; 0
      0006E7 00                    2043 	.db #0x00	; 0
      0006E8 06                    2044 	.db #0x06	; 6
      0006E9 00                    2045 	.db #0x00	; 0
      0006EA 0F                    2046 	.db #0x0f	; 15
      0006EB 06                    2047 	.db #0x06	; 6
      0006EC 1F                    2048 	.db #0x1f	; 31
      0006ED 0E                    2049 	.db #0x0e	; 14
      0006EE 7E                    2050 	.db #0x7e	; 126
      0006EF 1C                    2051 	.db #0x1c	; 28
      0006F0 FC                    2052 	.db #0xfc	; 252
      0006F1 78                    2053 	.db #0x78	; 120	'x'
      0006F2 F8                    2054 	.db #0xf8	; 248
      0006F3 F0                    2055 	.db #0xf0	; 240
      0006F4 F8                    2056 	.db #0xf8	; 248
      0006F5 70                    2057 	.db #0x70	; 112	'p'
      0006F6 70                    2058 	.db #0x70	; 112	'p'
      0006F7 20                    2059 	.db #0x20	; 32
      0006F8 00                    2060 	.db #0x00	; 0
      0006F9 00                    2061 	.db #0x00	; 0
      0006FA 00                    2062 	.db #0x00	; 0
      0006FB 00                    2063 	.db #0x00	; 0
      0006FC 00                    2064 	.db #0x00	; 0
      0006FD 00                    2065 	.db #0x00	; 0
      0006FE 00                    2066 	.db #0x00	; 0
      0006FF 00                    2067 	.db #0x00	; 0
      000700 00                    2068 	.db #0x00	; 0
      000701 00                    2069 	.db #0x00	; 0
      000702 00                    2070 	.db #0x00	; 0
      000703 00                    2071 	.db #0x00	; 0
      000704 00                    2072 	.db #0x00	; 0
      000705 00                    2073 	.db #0x00	; 0
      000706 00                    2074 	.db #0x00	; 0
      000707 00                    2075 	.db #0x00	; 0
      000708                       2076 _upgrade:
      000708 01                    2077 	.db #0x01	; 1
      000709 00 00                 2078 	.dw #0x0000
      00070B 00 00                 2079 	.dw #0x0000
      00070D 00                    2080 	.db #0x00	; 0
      00070E 00                    2081 	.db #0x00	; 0
      00070F 00                    2082 	.db #0x00	; 0
      000710 70                    2083 	.db #0x70	; 112	'p'
      000711                       2084 _ammo:
      000711 01                    2085 	.db #0x01	; 1
      000712 00 00                 2086 	.dw #0x0000
      000714 00 00                 2087 	.dw #0x0000
      000716 00                    2088 	.db #0x00	; 0
      000717 01                    2089 	.db #0x01	; 1
      000718 05                    2090 	.db #0x05	; 5
      000719 72                    2091 	.db #0x72	; 114	'r'
      00071A                       2092 _health:
      00071A 01                    2093 	.db #0x01	; 1
      00071B 00 00                 2094 	.dw #0x0000
      00071D 00 00                 2095 	.dw #0x0000
      00071F 00                    2096 	.db #0x00	; 0
      000720 02                    2097 	.db #0x02	; 2
      000721 32                    2098 	.db #0x32	; 50	'2'
      000722 74                    2099 	.db #0x74	; 116	't'
      000723                       2100 _Pickups:
      000723 7E                    2101 	.db #0x7e	; 126
      000724 00                    2102 	.db #0x00	; 0
      000725 81                    2103 	.db #0x81	; 129
      000726 00                    2104 	.db #0x00	; 0
      000727 D7                    2105 	.db #0xd7	; 215
      000728 56                    2106 	.db #0x56	; 86	'V'
      000729 D7                    2107 	.db #0xd7	; 215
      00072A 56                    2108 	.db #0x56	; 86	'V'
      00072B D5                    2109 	.db #0xd5	; 213
      00072C 54                    2110 	.db #0x54	; 84	'T'
      00072D F5                    2111 	.db #0xf5	; 245
      00072E 74                    2112 	.db #0x74	; 116	't'
      00072F 81                    2113 	.db #0x81	; 129
      000730 00                    2114 	.db #0x00	; 0
      000731 7E                    2115 	.db #0x7e	; 126
      000732 00                    2116 	.db #0x00	; 0
      000733 00                    2117 	.db #0x00	; 0
      000734 00                    2118 	.db #0x00	; 0
      000735 00                    2119 	.db #0x00	; 0
      000736 00                    2120 	.db #0x00	; 0
      000737 00                    2121 	.db #0x00	; 0
      000738 00                    2122 	.db #0x00	; 0
      000739 00                    2123 	.db #0x00	; 0
      00073A 00                    2124 	.db #0x00	; 0
      00073B 00                    2125 	.db #0x00	; 0
      00073C 00                    2126 	.db #0x00	; 0
      00073D 00                    2127 	.db #0x00	; 0
      00073E 00                    2128 	.db #0x00	; 0
      00073F 00                    2129 	.db #0x00	; 0
      000740 00                    2130 	.db #0x00	; 0
      000741 00                    2131 	.db #0x00	; 0
      000742 00                    2132 	.db #0x00	; 0
      000743 7E                    2133 	.db #0x7e	; 126
      000744 00                    2134 	.db #0x00	; 0
      000745 8F                    2135 	.db #0x8f	; 143
      000746 06                    2136 	.db #0x06	; 6
      000747 9F                    2137 	.db #0x9f	; 159
      000748 0E                    2138 	.db #0x0e	; 14
      000749 FF                    2139 	.db #0xff	; 255
      00074A 1C                    2140 	.db #0x1c	; 28
      00074B FD                    2141 	.db #0xfd	; 253
      00074C 78                    2142 	.db #0x78	; 120	'x'
      00074D F9                    2143 	.db #0xf9	; 249
      00074E 70                    2144 	.db #0x70	; 112	'p'
      00074F F9                    2145 	.db #0xf9	; 249
      000750 70                    2146 	.db #0x70	; 112	'p'
      000751 7E                    2147 	.db #0x7e	; 126
      000752 00                    2148 	.db #0x00	; 0
      000753 00                    2149 	.db #0x00	; 0
      000754 00                    2150 	.db #0x00	; 0
      000755 00                    2151 	.db #0x00	; 0
      000756 00                    2152 	.db #0x00	; 0
      000757 00                    2153 	.db #0x00	; 0
      000758 00                    2154 	.db #0x00	; 0
      000759 00                    2155 	.db #0x00	; 0
      00075A 00                    2156 	.db #0x00	; 0
      00075B 00                    2157 	.db #0x00	; 0
      00075C 00                    2158 	.db #0x00	; 0
      00075D 00                    2159 	.db #0x00	; 0
      00075E 00                    2160 	.db #0x00	; 0
      00075F 00                    2161 	.db #0x00	; 0
      000760 00                    2162 	.db #0x00	; 0
      000761 00                    2163 	.db #0x00	; 0
      000762 00                    2164 	.db #0x00	; 0
      000763 7E                    2165 	.db #0x7e	; 126
      000764 00                    2166 	.db #0x00	; 0
      000765 99                    2167 	.db #0x99	; 153
      000766 18                    2168 	.db #0x18	; 24
      000767 99                    2169 	.db #0x99	; 153
      000768 18                    2170 	.db #0x18	; 24
      000769 FF                    2171 	.db #0xff	; 255
      00076A 7E                    2172 	.db #0x7e	; 126
      00076B FF                    2173 	.db #0xff	; 255
      00076C 7E                    2174 	.db #0x7e	; 126
      00076D 99                    2175 	.db #0x99	; 153
      00076E 18                    2176 	.db #0x18	; 24
      00076F 99                    2177 	.db #0x99	; 153
      000770 18                    2178 	.db #0x18	; 24
      000771 7E                    2179 	.db #0x7e	; 126
      000772 00                    2180 	.db #0x00	; 0
      000773 00                    2181 	.db #0x00	; 0
      000774 00                    2182 	.db #0x00	; 0
      000775 00                    2183 	.db #0x00	; 0
      000776 00                    2184 	.db #0x00	; 0
      000777 00                    2185 	.db #0x00	; 0
      000778 00                    2186 	.db #0x00	; 0
      000779 00                    2187 	.db #0x00	; 0
      00077A 00                    2188 	.db #0x00	; 0
      00077B 00                    2189 	.db #0x00	; 0
      00077C 00                    2190 	.db #0x00	; 0
      00077D 00                    2191 	.db #0x00	; 0
      00077E 00                    2192 	.db #0x00	; 0
      00077F 00                    2193 	.db #0x00	; 0
      000780 00                    2194 	.db #0x00	; 0
      000781 00                    2195 	.db #0x00	; 0
      000782 00                    2196 	.db #0x00	; 0
      000783                       2197 _Player1:
      000783 08                    2198 	.db #0x08	; 8
      000784 08                    2199 	.db #0x08	; 8
      000785 1C                    2200 	.db #0x1c	; 28
      000786 14                    2201 	.db #0x14	; 20
      000787 38                    2202 	.db #0x38	; 56	'8'
      000788 28                    2203 	.db #0x28	; 40
      000789 68                    2204 	.db #0x68	; 104	'h'
      00078A 58                    2205 	.db #0x58	; 88	'X'
      00078B 50                    2206 	.db #0x50	; 80	'P'
      00078C 71                    2207 	.db #0x71	; 113	'q'
      00078D D0                    2208 	.db #0xd0	; 208
      00078E B2                    2209 	.db #0xb2	; 178
      00078F D5                    2210 	.db #0xd5	; 213
      000790 B6                    2211 	.db #0xb6	; 182
      000791 D5                    2212 	.db #0xd5	; 213
      000792 B6                    2213 	.db #0xb6	; 182
      000793 D5                    2214 	.db #0xd5	; 213
      000794 B6                    2215 	.db #0xb6	; 182
      000795 CD                    2216 	.db #0xcd	; 205
      000796 BE                    2217 	.db #0xbe	; 190
      000797 C5                    2218 	.db #0xc5	; 197
      000798 BE                    2219 	.db #0xbe	; 190
      000799 65                    2220 	.db #0x65	; 101	'e'
      00079A 5E                    2221 	.db #0x5e	; 94
      00079B 3E                    2222 	.db #0x3e	; 62
      00079C 2F                    2223 	.db #0x2f	; 47
      00079D 13                    2224 	.db #0x13	; 19
      00079E 13                    2225 	.db #0x13	; 19
      00079F 06                    2226 	.db #0x06	; 6
      0007A0 07                    2227 	.db #0x07	; 7
      0007A1 07                    2228 	.db #0x07	; 7
      0007A2 05                    2229 	.db #0x05	; 5
      0007A3 10                    2230 	.db #0x10	; 16
      0007A4 10                    2231 	.db #0x10	; 16
      0007A5 38                    2232 	.db #0x38	; 56	'8'
      0007A6 28                    2233 	.db #0x28	; 40
      0007A7 1C                    2234 	.db #0x1c	; 28
      0007A8 14                    2235 	.db #0x14	; 20
      0007A9 16                    2236 	.db #0x16	; 22
      0007AA 1A                    2237 	.db #0x1a	; 26
      0007AB 0A                    2238 	.db #0x0a	; 10
      0007AC 8E                    2239 	.db #0x8e	; 142
      0007AD 0B                    2240 	.db #0x0b	; 11
      0007AE 4D                    2241 	.db #0x4d	; 77	'M'
      0007AF AB                    2242 	.db #0xab	; 171
      0007B0 6D                    2243 	.db #0x6d	; 109	'm'
      0007B1 AB                    2244 	.db #0xab	; 171
      0007B2 6D                    2245 	.db #0x6d	; 109	'm'
      0007B3 AB                    2246 	.db #0xab	; 171
      0007B4 6D                    2247 	.db #0x6d	; 109	'm'
      0007B5 B3                    2248 	.db #0xb3	; 179
      0007B6 7D                    2249 	.db #0x7d	; 125
      0007B7 A3                    2250 	.db #0xa3	; 163
      0007B8 7D                    2251 	.db #0x7d	; 125
      0007B9 A6                    2252 	.db #0xa6	; 166
      0007BA 7A                    2253 	.db #0x7a	; 122	'z'
      0007BB 7C                    2254 	.db #0x7c	; 124
      0007BC F4                    2255 	.db #0xf4	; 244
      0007BD C8                    2256 	.db #0xc8	; 200
      0007BE C8                    2257 	.db #0xc8	; 200
      0007BF 60                    2258 	.db #0x60	; 96
      0007C0 E0                    2259 	.db #0xe0	; 224
      0007C1 E0                    2260 	.db #0xe0	; 224
      0007C2 A0                    2261 	.db #0xa0	; 160
      0007C3 07                    2262 	.db #0x07	; 7
      0007C4 07                    2263 	.db #0x07	; 7
      0007C5 0F                    2264 	.db #0x0f	; 15
      0007C6 08                    2265 	.db #0x08	; 8
      0007C7 18                    2266 	.db #0x18	; 24
      0007C8 17                    2267 	.db #0x17	; 23
      0007C9 31                    2268 	.db #0x31	; 49	'1'
      0007CA 2F                    2269 	.db #0x2f	; 47
      0007CB 12                    2270 	.db #0x12	; 18
      0007CC 1E                    2271 	.db #0x1e	; 30
      0007CD DF                    2272 	.db #0xdf	; 223
      0007CE DF                    2273 	.db #0xdf	; 223
      0007CF F0                    2274 	.db #0xf0	; 240
      0007D0 7F                    2275 	.db #0x7f	; 127
      0007D1 AF                    2276 	.db #0xaf	; 175
      0007D2 F0                    2277 	.db #0xf0	; 240
      0007D3 AF                    2278 	.db #0xaf	; 175
      0007D4 F0                    2279 	.db #0xf0	; 240
      0007D5 F0                    2280 	.db #0xf0	; 240
      0007D6 7F                    2281 	.db #0x7f	; 127
      0007D7 DF                    2282 	.db #0xdf	; 223
      0007D8 DF                    2283 	.db #0xdf	; 223
      0007D9 12                    2284 	.db #0x12	; 18
      0007DA 1E                    2285 	.db #0x1e	; 30
      0007DB 31                    2286 	.db #0x31	; 49	'1'
      0007DC 2F                    2287 	.db #0x2f	; 47
      0007DD 18                    2288 	.db #0x18	; 24
      0007DE 17                    2289 	.db #0x17	; 23
      0007DF 0F                    2290 	.db #0x0f	; 15
      0007E0 08                    2291 	.db #0x08	; 8
      0007E1 07                    2292 	.db #0x07	; 7
      0007E2 07                    2293 	.db #0x07	; 7
      0007E3 E0                    2294 	.db #0xe0	; 224
      0007E4 E0                    2295 	.db #0xe0	; 224
      0007E5 F8                    2296 	.db #0xf8	; 248
      0007E6 18                    2297 	.db #0x18	; 24
      0007E7 0C                    2298 	.db #0x0c	; 12
      0007E8 F4                    2299 	.db #0xf4	; 244
      0007E9 F6                    2300 	.db #0xf6	; 246
      0007EA FA                    2301 	.db #0xfa	; 250
      0007EB 0F                    2302 	.db #0x0f	; 15
      0007EC 0D                    2303 	.db #0x0d	; 13
      0007ED C2                    2304 	.db #0xc2	; 194
      0007EE C2                    2305 	.db #0xc2	; 194
      0007EF 00                    2306 	.db #0x00	; 0
      0007F0 E0                    2307 	.db #0xe0	; 224
      0007F1 C0                    2308 	.db #0xc0	; 192
      0007F2 10                    2309 	.db #0x10	; 16
      0007F3 C0                    2310 	.db #0xc0	; 192
      0007F4 10                    2311 	.db #0x10	; 16
      0007F5 00                    2312 	.db #0x00	; 0
      0007F6 E0                    2313 	.db #0xe0	; 224
      0007F7 C2                    2314 	.db #0xc2	; 194
      0007F8 C2                    2315 	.db #0xc2	; 194
      0007F9 0F                    2316 	.db #0x0f	; 15
      0007FA 0D                    2317 	.db #0x0d	; 13
      0007FB F6                    2318 	.db #0xf6	; 246
      0007FC FA                    2319 	.db #0xfa	; 250
      0007FD 0C                    2320 	.db #0x0c	; 12
      0007FE F4                    2321 	.db #0xf4	; 244
      0007FF F8                    2322 	.db #0xf8	; 248
      000800 18                    2323 	.db #0x18	; 24
      000801 E0                    2324 	.db #0xe0	; 224
      000802 E0                    2325 	.db #0xe0	; 224
      000803 07                    2326 	.db #0x07	; 7
      000804 07                    2327 	.db #0x07	; 7
      000805 1B                    2328 	.db #0x1b	; 27
      000806 1C                    2329 	.db #0x1c	; 28
      000807 38                    2330 	.db #0x38	; 56	'8'
      000808 27                    2331 	.db #0x27	; 39
      000809 60                    2332 	.db #0x60	; 96
      00080A 5E                    2333 	.db #0x5e	; 94
      00080B 60                    2334 	.db #0x60	; 96
      00080C 5C                    2335 	.db #0x5c	; 92
      00080D 41                    2336 	.db #0x41	; 65	'A'
      00080E 79                    2337 	.db #0x79	; 121	'y'
      00080F C4                    2338 	.db #0xc4	; 196
      000810 B7                    2339 	.db #0xb7	; 183
      000811 99                    2340 	.db #0x99	; 153
      000812 FE                    2341 	.db #0xfe	; 254
      000813 B3                    2342 	.db #0xb3	; 179
      000814 EC                    2343 	.db #0xec	; 236
      000815 67                    2344 	.db #0x67	; 103	'g'
      000816 58                    2345 	.db #0x58	; 88	'X'
      000817 2E                    2346 	.db #0x2e	; 46
      000818 31                    2347 	.db #0x31	; 49	'1'
      000819 5C                    2348 	.db #0x5c	; 92
      00081A 73                    2349 	.db #0x73	; 115	's'
      00081B 69                    2350 	.db #0x69	; 105	'i'
      00081C 5E                    2351 	.db #0x5e	; 94
      00081D 37                    2352 	.db #0x37	; 55	'7'
      00081E 2D                    2353 	.db #0x2d	; 45
      00081F 1A                    2354 	.db #0x1a	; 26
      000820 1B                    2355 	.db #0x1b	; 27
      000821 01                    2356 	.db #0x01	; 1
      000822 01                    2357 	.db #0x01	; 1
      000823 E0                    2358 	.db #0xe0	; 224
      000824 E0                    2359 	.db #0xe0	; 224
      000825 90                    2360 	.db #0x90	; 144
      000826 70                    2361 	.db #0x70	; 112	'p'
      000827 C0                    2362 	.db #0xc0	; 192
      000828 C0                    2363 	.db #0xc0	; 192
      000829 00                    2364 	.db #0x00	; 0
      00082A 00                    2365 	.db #0x00	; 0
      00082B 02                    2366 	.db #0x02	; 2
      00082C 02                    2367 	.db #0x02	; 2
      00082D C1                    2368 	.db #0xc1	; 193
      00082E C3                    2369 	.db #0xc3	; 195
      00082F 65                    2370 	.db #0x65	; 101	'e'
      000830 A7                    2371 	.db #0xa7	; 167
      000831 A7                    2372 	.db #0xa7	; 167
      000832 65                    2373 	.db #0x65	; 101	'e'
      000833 A3                    2374 	.db #0xa3	; 163
      000834 65                    2375 	.db #0x65	; 101	'e'
      000835 03                    2376 	.db #0x03	; 3
      000836 CD                    2377 	.db #0xcd	; 205
      000837 41                    2378 	.db #0x41	; 65	'A'
      000838 DF                    2379 	.db #0xdf	; 223
      000839 86                    2380 	.db #0x86	; 134
      00083A BA                    2381 	.db #0xba	; 186
      00083B 86                    2382 	.db #0x86	; 134
      00083C FA                    2383 	.db #0xfa	; 250
      00083D 1C                    2384 	.db #0x1c	; 28
      00083E E4                    2385 	.db #0xe4	; 228
      00083F 78                    2386 	.db #0x78	; 120	'x'
      000840 B8                    2387 	.db #0xb8	; 184
      000841 C0                    2388 	.db #0xc0	; 192
      000842 C0                    2389 	.db #0xc0	; 192
      000843 00                    2390 	.db #0x00	; 0
      000844 00                    2391 	.db #0x00	; 0
      000845 00                    2392 	.db #0x00	; 0
      000846 00                    2393 	.db #0x00	; 0
      000847 00                    2394 	.db #0x00	; 0
      000848 00                    2395 	.db #0x00	; 0
      000849 00                    2396 	.db #0x00	; 0
      00084A 00                    2397 	.db #0x00	; 0
      00084B 00                    2398 	.db #0x00	; 0
      00084C 00                    2399 	.db #0x00	; 0
      00084D 00                    2400 	.db #0x00	; 0
      00084E 00                    2401 	.db #0x00	; 0
      00084F 00                    2402 	.db #0x00	; 0
      000850 00                    2403 	.db #0x00	; 0
      000851 00                    2404 	.db #0x00	; 0
      000852 00                    2405 	.db #0x00	; 0
      000853 00                    2406 	.db #0x00	; 0
      000854 00                    2407 	.db #0x00	; 0
      000855 00                    2408 	.db #0x00	; 0
      000856 00                    2409 	.db #0x00	; 0
      000857 00                    2410 	.db #0x00	; 0
      000858 00                    2411 	.db #0x00	; 0
      000859 00                    2412 	.db #0x00	; 0
      00085A 00                    2413 	.db #0x00	; 0
      00085B 00                    2414 	.db #0x00	; 0
      00085C 00                    2415 	.db #0x00	; 0
      00085D 00                    2416 	.db #0x00	; 0
      00085E 00                    2417 	.db #0x00	; 0
      00085F 00                    2418 	.db #0x00	; 0
      000860 00                    2419 	.db #0x00	; 0
      000861 00                    2420 	.db #0x00	; 0
      000862 00                    2421 	.db #0x00	; 0
      000863 00                    2422 	.db #0x00	; 0
      000864 00                    2423 	.db #0x00	; 0
      000865 00                    2424 	.db #0x00	; 0
      000866 00                    2425 	.db #0x00	; 0
      000867 00                    2426 	.db #0x00	; 0
      000868 00                    2427 	.db #0x00	; 0
      000869 00                    2428 	.db #0x00	; 0
      00086A 00                    2429 	.db #0x00	; 0
      00086B 00                    2430 	.db #0x00	; 0
      00086C 00                    2431 	.db #0x00	; 0
      00086D 00                    2432 	.db #0x00	; 0
      00086E 00                    2433 	.db #0x00	; 0
      00086F 00                    2434 	.db #0x00	; 0
      000870 00                    2435 	.db #0x00	; 0
      000871 00                    2436 	.db #0x00	; 0
      000872 00                    2437 	.db #0x00	; 0
      000873 00                    2438 	.db #0x00	; 0
      000874 00                    2439 	.db #0x00	; 0
      000875 00                    2440 	.db #0x00	; 0
      000876 00                    2441 	.db #0x00	; 0
      000877 00                    2442 	.db #0x00	; 0
      000878 00                    2443 	.db #0x00	; 0
      000879 00                    2444 	.db #0x00	; 0
      00087A 00                    2445 	.db #0x00	; 0
      00087B 00                    2446 	.db #0x00	; 0
      00087C 00                    2447 	.db #0x00	; 0
      00087D 00                    2448 	.db #0x00	; 0
      00087E 00                    2449 	.db #0x00	; 0
      00087F 00                    2450 	.db #0x00	; 0
      000880 00                    2451 	.db #0x00	; 0
      000881 00                    2452 	.db #0x00	; 0
      000882 00                    2453 	.db #0x00	; 0
      000883                       2454 _ex:
      000883 00                    2455 	.db #0x00	; 0
      000884 00                    2456 	.db #0x00	; 0
      000885 00                    2457 	.db #0x00	; 0
      000886 00                    2458 	.db #0x00	; 0
      000887 00                    2459 	.db #0x00	; 0
      000888 00                    2460 	.db #0x00	; 0
      000889                       2461 _Ex1:
      000889 00                    2462 	.db #0x00	; 0
      00088A 00                    2463 	.db #0x00	; 0
      00088B 00                    2464 	.db #0x00	; 0
      00088C 00                    2465 	.db #0x00	; 0
      00088D 00                    2466 	.db #0x00	; 0
      00088E 00                    2467 	.db #0x00	; 0
      00088F 00                    2468 	.db #0x00	; 0
      000890 00                    2469 	.db #0x00	; 0
      000891 00                    2470 	.db #0x00	; 0
      000892 00                    2471 	.db #0x00	; 0
      000893 04                    2472 	.db #0x04	; 4
      000894 04                    2473 	.db #0x04	; 4
      000895 06                    2474 	.db #0x06	; 6
      000896 06                    2475 	.db #0x06	; 6
      000897 06                    2476 	.db #0x06	; 6
      000898 06                    2477 	.db #0x06	; 6
      000899 00                    2478 	.db #0x00	; 0
      00089A 00                    2479 	.db #0x00	; 0
      00089B 00                    2480 	.db #0x00	; 0
      00089C 00                    2481 	.db #0x00	; 0
      00089D 03                    2482 	.db #0x03	; 3
      00089E 03                    2483 	.db #0x03	; 3
      00089F 07                    2484 	.db #0x07	; 7
      0008A0 07                    2485 	.db #0x07	; 7
      0008A1 02                    2486 	.db #0x02	; 2
      0008A2 02                    2487 	.db #0x02	; 2
      0008A3 00                    2488 	.db #0x00	; 0
      0008A4 00                    2489 	.db #0x00	; 0
      0008A5 00                    2490 	.db #0x00	; 0
      0008A6 00                    2491 	.db #0x00	; 0
      0008A7 00                    2492 	.db #0x00	; 0
      0008A8 00                    2493 	.db #0x00	; 0
      0008A9 00                    2494 	.db #0x00	; 0
      0008AA 00                    2495 	.db #0x00	; 0
      0008AB 00                    2496 	.db #0x00	; 0
      0008AC 00                    2497 	.db #0x00	; 0
      0008AD 00                    2498 	.db #0x00	; 0
      0008AE 00                    2499 	.db #0x00	; 0
      0008AF 00                    2500 	.db #0x00	; 0
      0008B0 00                    2501 	.db #0x00	; 0
      0008B1 00                    2502 	.db #0x00	; 0
      0008B2 00                    2503 	.db #0x00	; 0
      0008B3 00                    2504 	.db #0x00	; 0
      0008B4 00                    2505 	.db #0x00	; 0
      0008B5 00                    2506 	.db #0x00	; 0
      0008B6 00                    2507 	.db #0x00	; 0
      0008B7 38                    2508 	.db #0x38	; 56	'8'
      0008B8 38                    2509 	.db #0x38	; 56	'8'
      0008B9 38                    2510 	.db #0x38	; 56	'8'
      0008BA 38                    2511 	.db #0x38	; 56	'8'
      0008BB 30                    2512 	.db #0x30	; 48	'0'
      0008BC 30                    2513 	.db #0x30	; 48	'0'
      0008BD 00                    2514 	.db #0x00	; 0
      0008BE 00                    2515 	.db #0x00	; 0
      0008BF 00                    2516 	.db #0x00	; 0
      0008C0 00                    2517 	.db #0x00	; 0
      0008C1 00                    2518 	.db #0x00	; 0
      0008C2 00                    2519 	.db #0x00	; 0
      0008C3 00                    2520 	.db #0x00	; 0
      0008C4 00                    2521 	.db #0x00	; 0
      0008C5 00                    2522 	.db #0x00	; 0
      0008C6 00                    2523 	.db #0x00	; 0
      0008C7 00                    2524 	.db #0x00	; 0
      0008C8 00                    2525 	.db #0x00	; 0
      0008C9 00                    2526 	.db #0x00	; 0
      0008CA 00                    2527 	.db #0x00	; 0
      0008CB 00                    2528 	.db #0x00	; 0
      0008CC 00                    2529 	.db #0x00	; 0
      0008CD 00                    2530 	.db #0x00	; 0
      0008CE 00                    2531 	.db #0x00	; 0
      0008CF 18                    2532 	.db #0x18	; 24
      0008D0 18                    2533 	.db #0x18	; 24
      0008D1 3E                    2534 	.db #0x3e	; 62
      0008D2 3E                    2535 	.db #0x3e	; 62
      0008D3 3E                    2536 	.db #0x3e	; 62
      0008D4 3E                    2537 	.db #0x3e	; 62
      0008D5 1C                    2538 	.db #0x1c	; 28
      0008D6 1C                    2539 	.db #0x1c	; 28
      0008D7 08                    2540 	.db #0x08	; 8
      0008D8 08                    2541 	.db #0x08	; 8
      0008D9 00                    2542 	.db #0x00	; 0
      0008DA 00                    2543 	.db #0x00	; 0
      0008DB 00                    2544 	.db #0x00	; 0
      0008DC 00                    2545 	.db #0x00	; 0
      0008DD 07                    2546 	.db #0x07	; 7
      0008DE 07                    2547 	.db #0x07	; 7
      0008DF 07                    2548 	.db #0x07	; 7
      0008E0 07                    2549 	.db #0x07	; 7
      0008E1 07                    2550 	.db #0x07	; 7
      0008E2 07                    2551 	.db #0x07	; 7
      0008E3 03                    2552 	.db #0x03	; 3
      0008E4 03                    2553 	.db #0x03	; 3
      0008E5 03                    2554 	.db #0x03	; 3
      0008E6 03                    2555 	.db #0x03	; 3
      0008E7 00                    2556 	.db #0x00	; 0
      0008E8 00                    2557 	.db #0x00	; 0
      0008E9 00                    2558 	.db #0x00	; 0
      0008EA 00                    2559 	.db #0x00	; 0
      0008EB 00                    2560 	.db #0x00	; 0
      0008EC 00                    2561 	.db #0x00	; 0
      0008ED 04                    2562 	.db #0x04	; 4
      0008EE 04                    2563 	.db #0x04	; 4
      0008EF 1E                    2564 	.db #0x1e	; 30
      0008F0 1E                    2565 	.db #0x1e	; 30
      0008F1 3E                    2566 	.db #0x3e	; 62
      0008F2 3E                    2567 	.db #0x3e	; 62
      0008F3 3E                    2568 	.db #0x3e	; 62
      0008F4 3E                    2569 	.db #0x3e	; 62
      0008F5 1E                    2570 	.db #0x1e	; 30
      0008F6 1E                    2571 	.db #0x1e	; 30
      0008F7 0C                    2572 	.db #0x0c	; 12
      0008F8 0C                    2573 	.db #0x0c	; 12
      0008F9 00                    2574 	.db #0x00	; 0
      0008FA 00                    2575 	.db #0x00	; 0
      0008FB 00                    2576 	.db #0x00	; 0
      0008FC 00                    2577 	.db #0x00	; 0
      0008FD 00                    2578 	.db #0x00	; 0
      0008FE 00                    2579 	.db #0x00	; 0
      0008FF 80                    2580 	.db #0x80	; 128
      000900 80                    2581 	.db #0x80	; 128
      000901 C0                    2582 	.db #0xc0	; 192
      000902 C0                    2583 	.db #0xc0	; 192
      000903 80                    2584 	.db #0x80	; 128
      000904 80                    2585 	.db #0x80	; 128
      000905 00                    2586 	.db #0x00	; 0
      000906 00                    2587 	.db #0x00	; 0
      000907 00                    2588 	.db #0x00	; 0
      000908 00                    2589 	.db #0x00	; 0
      000909 00                    2590 	.db #0x00	; 0
      00090A 00                    2591 	.db #0x00	; 0
      00090B 20                    2592 	.db #0x20	; 32
      00090C 20                    2593 	.db #0x20	; 32
      00090D 70                    2594 	.db #0x70	; 112	'p'
      00090E 70                    2595 	.db #0x70	; 112	'p'
      00090F 70                    2596 	.db #0x70	; 112	'p'
      000910 70                    2597 	.db #0x70	; 112	'p'
      000911 60                    2598 	.db #0x60	; 96
      000912 60                    2599 	.db #0x60	; 96
      000913 00                    2600 	.db #0x00	; 0
      000914 00                    2601 	.db #0x00	; 0
      000915 00                    2602 	.db #0x00	; 0
      000916 00                    2603 	.db #0x00	; 0
      000917 00                    2604 	.db #0x00	; 0
      000918 00                    2605 	.db #0x00	; 0
      000919 00                    2606 	.db #0x00	; 0
      00091A 00                    2607 	.db #0x00	; 0
      00091B 00                    2608 	.db #0x00	; 0
      00091C 00                    2609 	.db #0x00	; 0
      00091D 00                    2610 	.db #0x00	; 0
      00091E 00                    2611 	.db #0x00	; 0
      00091F 00                    2612 	.db #0x00	; 0
      000920 00                    2613 	.db #0x00	; 0
      000921 00                    2614 	.db #0x00	; 0
      000922 00                    2615 	.db #0x00	; 0
      000923 07                    2616 	.db #0x07	; 7
      000924 07                    2617 	.db #0x07	; 7
      000925 07                    2618 	.db #0x07	; 7
      000926 07                    2619 	.db #0x07	; 7
      000927 06                    2620 	.db #0x06	; 6
      000928 06                    2621 	.db #0x06	; 6
      000929 00                    2622 	.db #0x00	; 0
      00092A 00                    2623 	.db #0x00	; 0
      00092B 04                    2624 	.db #0x04	; 4
      00092C 04                    2625 	.db #0x04	; 4
      00092D 0E                    2626 	.db #0x0e	; 14
      00092E 0E                    2627 	.db #0x0e	; 14
      00092F 0E                    2628 	.db #0x0e	; 14
      000930 0E                    2629 	.db #0x0e	; 14
      000931 00                    2630 	.db #0x00	; 0
      000932 00                    2631 	.db #0x00	; 0
      000933 00                    2632 	.db #0x00	; 0
      000934 00                    2633 	.db #0x00	; 0
      000935 00                    2634 	.db #0x00	; 0
      000936 00                    2635 	.db #0x00	; 0
      000937 00                    2636 	.db #0x00	; 0
      000938 00                    2637 	.db #0x00	; 0
      000939 00                    2638 	.db #0x00	; 0
      00093A 00                    2639 	.db #0x00	; 0
      00093B 00                    2640 	.db #0x00	; 0
      00093C 00                    2641 	.db #0x00	; 0
      00093D 00                    2642 	.db #0x00	; 0
      00093E 00                    2643 	.db #0x00	; 0
      00093F 00                    2644 	.db #0x00	; 0
      000940 00                    2645 	.db #0x00	; 0
      000941 00                    2646 	.db #0x00	; 0
      000942 00                    2647 	.db #0x00	; 0
      000943 00                    2648 	.db #0x00	; 0
      000944 00                    2649 	.db #0x00	; 0
      000945 00                    2650 	.db #0x00	; 0
      000946 00                    2651 	.db #0x00	; 0
      000947 00                    2652 	.db #0x00	; 0
      000948 00                    2653 	.db #0x00	; 0
      000949 00                    2654 	.db #0x00	; 0
      00094A 00                    2655 	.db #0x00	; 0
      00094B 40                    2656 	.db #0x40	; 64
      00094C 40                    2657 	.db #0x40	; 64
      00094D 60                    2658 	.db #0x60	; 96
      00094E 60                    2659 	.db #0x60	; 96
      00094F 00                    2660 	.db #0x00	; 0
      000950 00                    2661 	.db #0x00	; 0
      000951 00                    2662 	.db #0x00	; 0
      000952 00                    2663 	.db #0x00	; 0
      000953 00                    2664 	.db #0x00	; 0
      000954 00                    2665 	.db #0x00	; 0
      000955 00                    2666 	.db #0x00	; 0
      000956 00                    2667 	.db #0x00	; 0
      000957 00                    2668 	.db #0x00	; 0
      000958 00                    2669 	.db #0x00	; 0
      000959 00                    2670 	.db #0x00	; 0
      00095A 00                    2671 	.db #0x00	; 0
      00095B 00                    2672 	.db #0x00	; 0
      00095C 00                    2673 	.db #0x00	; 0
      00095D 00                    2674 	.db #0x00	; 0
      00095E 00                    2675 	.db #0x00	; 0
      00095F 00                    2676 	.db #0x00	; 0
      000960 00                    2677 	.db #0x00	; 0
      000961 00                    2678 	.db #0x00	; 0
      000962 00                    2679 	.db #0x00	; 0
      000963 00                    2680 	.db #0x00	; 0
      000964 00                    2681 	.db #0x00	; 0
      000965 04                    2682 	.db #0x04	; 4
      000966 04                    2683 	.db #0x04	; 4
      000967 06                    2684 	.db #0x06	; 6
      000968 06                    2685 	.db #0x06	; 6
      000969 00                    2686 	.db #0x00	; 0
      00096A 00                    2687 	.db #0x00	; 0
      00096B 02                    2688 	.db #0x02	; 2
      00096C 02                    2689 	.db #0x02	; 2
      00096D 02                    2690 	.db #0x02	; 2
      00096E 02                    2691 	.db #0x02	; 2
      00096F 00                    2692 	.db #0x00	; 0
      000970 00                    2693 	.db #0x00	; 0
      000971 00                    2694 	.db #0x00	; 0
      000972 00                    2695 	.db #0x00	; 0
      000973 00                    2696 	.db #0x00	; 0
      000974 00                    2697 	.db #0x00	; 0
      000975 00                    2698 	.db #0x00	; 0
      000976 00                    2699 	.db #0x00	; 0
      000977 00                    2700 	.db #0x00	; 0
      000978 00                    2701 	.db #0x00	; 0
      000979 00                    2702 	.db #0x00	; 0
      00097A 00                    2703 	.db #0x00	; 0
      00097B 00                    2704 	.db #0x00	; 0
      00097C 00                    2705 	.db #0x00	; 0
      00097D 00                    2706 	.db #0x00	; 0
      00097E 00                    2707 	.db #0x00	; 0
      00097F 00                    2708 	.db #0x00	; 0
      000980 00                    2709 	.db #0x00	; 0
      000981 00                    2710 	.db #0x00	; 0
      000982 00                    2711 	.db #0x00	; 0
      000983 00                    2712 	.db #0x00	; 0
      000984 00                    2713 	.db #0x00	; 0
      000985 00                    2714 	.db #0x00	; 0
      000986 00                    2715 	.db #0x00	; 0
      000987 00                    2716 	.db #0x00	; 0
      000988 00                    2717 	.db #0x00	; 0
      000989                       2718 _Ex2:
      000989 00                    2719 	.db #0x00	; 0
      00098A 00                    2720 	.db #0x00	; 0
      00098B 00                    2721 	.db #0x00	; 0
      00098C 00                    2722 	.db #0x00	; 0
      00098D 00                    2723 	.db #0x00	; 0
      00098E 00                    2724 	.db #0x00	; 0
      00098F 01                    2725 	.db #0x01	; 1
      000990 01                    2726 	.db #0x01	; 1
      000991 03                    2727 	.db #0x03	; 3
      000992 03                    2728 	.db #0x03	; 3
      000993 03                    2729 	.db #0x03	; 3
      000994 03                    2730 	.db #0x03	; 3
      000995 00                    2731 	.db #0x00	; 0
      000996 00                    2732 	.db #0x00	; 0
      000997 06                    2733 	.db #0x06	; 6
      000998 06                    2734 	.db #0x06	; 6
      000999 0E                    2735 	.db #0x0e	; 14
      00099A 0E                    2736 	.db #0x0e	; 14
      00099B 0E                    2737 	.db #0x0e	; 14
      00099C 0E                    2738 	.db #0x0e	; 14
      00099D 00                    2739 	.db #0x00	; 0
      00099E 00                    2740 	.db #0x00	; 0
      00099F 00                    2741 	.db #0x00	; 0
      0009A0 00                    2742 	.db #0x00	; 0
      0009A1 00                    2743 	.db #0x00	; 0
      0009A2 00                    2744 	.db #0x00	; 0
      0009A3 00                    2745 	.db #0x00	; 0
      0009A4 00                    2746 	.db #0x00	; 0
      0009A5 00                    2747 	.db #0x00	; 0
      0009A6 00                    2748 	.db #0x00	; 0
      0009A7 00                    2749 	.db #0x00	; 0
      0009A8 00                    2750 	.db #0x00	; 0
      0009A9 00                    2751 	.db #0x00	; 0
      0009AA 00                    2752 	.db #0x00	; 0
      0009AB 00                    2753 	.db #0x00	; 0
      0009AC 00                    2754 	.db #0x00	; 0
      0009AD 00                    2755 	.db #0x00	; 0
      0009AE 00                    2756 	.db #0x00	; 0
      0009AF 80                    2757 	.db #0x80	; 128
      0009B0 80                    2758 	.db #0x80	; 128
      0009B1 80                    2759 	.db #0x80	; 128
      0009B2 80                    2760 	.db #0x80	; 128
      0009B3 00                    2761 	.db #0x00	; 0
      0009B4 00                    2762 	.db #0x00	; 0
      0009B5 60                    2763 	.db #0x60	; 96
      0009B6 60                    2764 	.db #0x60	; 96
      0009B7 60                    2765 	.db #0x60	; 96
      0009B8 60                    2766 	.db #0x60	; 96
      0009B9 00                    2767 	.db #0x00	; 0
      0009BA 00                    2768 	.db #0x00	; 0
      0009BB C0                    2769 	.db #0xc0	; 192
      0009BC C0                    2770 	.db #0xc0	; 192
      0009BD C0                    2771 	.db #0xc0	; 192
      0009BE C0                    2772 	.db #0xc0	; 192
      0009BF C0                    2773 	.db #0xc0	; 192
      0009C0 C0                    2774 	.db #0xc0	; 192
      0009C1 00                    2775 	.db #0x00	; 0
      0009C2 00                    2776 	.db #0x00	; 0
      0009C3 00                    2777 	.db #0x00	; 0
      0009C4 00                    2778 	.db #0x00	; 0
      0009C5 00                    2779 	.db #0x00	; 0
      0009C6 00                    2780 	.db #0x00	; 0
      0009C7 00                    2781 	.db #0x00	; 0
      0009C8 00                    2782 	.db #0x00	; 0
      0009C9 00                    2783 	.db #0x00	; 0
      0009CA 00                    2784 	.db #0x00	; 0
      0009CB 00                    2785 	.db #0x00	; 0
      0009CC 00                    2786 	.db #0x00	; 0
      0009CD 03                    2787 	.db #0x03	; 3
      0009CE 03                    2788 	.db #0x03	; 3
      0009CF 03                    2789 	.db #0x03	; 3
      0009D0 03                    2790 	.db #0x03	; 3
      0009D1 03                    2791 	.db #0x03	; 3
      0009D2 03                    2792 	.db #0x03	; 3
      0009D3 01                    2793 	.db #0x01	; 1
      0009D4 01                    2794 	.db #0x01	; 1
      0009D5 00                    2795 	.db #0x00	; 0
      0009D6 00                    2796 	.db #0x00	; 0
      0009D7 00                    2797 	.db #0x00	; 0
      0009D8 00                    2798 	.db #0x00	; 0
      0009D9 00                    2799 	.db #0x00	; 0
      0009DA 00                    2800 	.db #0x00	; 0
      0009DB 1C                    2801 	.db #0x1c	; 28
      0009DC 1C                    2802 	.db #0x1c	; 28
      0009DD 3C                    2803 	.db #0x3c	; 60
      0009DE 3C                    2804 	.db #0x3c	; 60
      0009DF 3C                    2805 	.db #0x3c	; 60
      0009E0 3C                    2806 	.db #0x3c	; 60
      0009E1 30                    2807 	.db #0x30	; 48	'0'
      0009E2 30                    2808 	.db #0x30	; 48	'0'
      0009E3 00                    2809 	.db #0x00	; 0
      0009E4 00                    2810 	.db #0x00	; 0
      0009E5 00                    2811 	.db #0x00	; 0
      0009E6 00                    2812 	.db #0x00	; 0
      0009E7 00                    2813 	.db #0x00	; 0
      0009E8 00                    2814 	.db #0x00	; 0
      0009E9 00                    2815 	.db #0x00	; 0
      0009EA 00                    2816 	.db #0x00	; 0
      0009EB 00                    2817 	.db #0x00	; 0
      0009EC 00                    2818 	.db #0x00	; 0
      0009ED 80                    2819 	.db #0x80	; 128
      0009EE 80                    2820 	.db #0x80	; 128
      0009EF C0                    2821 	.db #0xc0	; 192
      0009F0 C0                    2822 	.db #0xc0	; 192
      0009F1 C0                    2823 	.db #0xc0	; 192
      0009F2 C0                    2824 	.db #0xc0	; 192
      0009F3 DE                    2825 	.db #0xde	; 222
      0009F4 DE                    2826 	.db #0xde	; 222
      0009F5 9E                    2827 	.db #0x9e	; 158
      0009F6 9E                    2828 	.db #0x9e	; 158
      0009F7 0E                    2829 	.db #0x0e	; 14
      0009F8 0E                    2830 	.db #0x0e	; 14
      0009F9 00                    2831 	.db #0x00	; 0
      0009FA 00                    2832 	.db #0x00	; 0
      0009FB 00                    2833 	.db #0x00	; 0
      0009FC 00                    2834 	.db #0x00	; 0
      0009FD 38                    2835 	.db #0x38	; 56	'8'
      0009FE 38                    2836 	.db #0x38	; 56	'8'
      0009FF 3C                    2837 	.db #0x3c	; 60
      000A00 3C                    2838 	.db #0x3c	; 60
      000A01 3C                    2839 	.db #0x3c	; 60
      000A02 3C                    2840 	.db #0x3c	; 60
      000A03 3C                    2841 	.db #0x3c	; 60
      000A04 3C                    2842 	.db #0x3c	; 60
      000A05 1C                    2843 	.db #0x1c	; 28
      000A06 1C                    2844 	.db #0x1c	; 28
      000A07 00                    2845 	.db #0x00	; 0
      000A08 00                    2846 	.db #0x00	; 0
      000A09 00                    2847 	.db #0x00	; 0
      000A0A 00                    2848 	.db #0x00	; 0
      000A0B 04                    2849 	.db #0x04	; 4
      000A0C 04                    2850 	.db #0x04	; 4
      000A0D 07                    2851 	.db #0x07	; 7
      000A0E 07                    2852 	.db #0x07	; 7
      000A0F 07                    2853 	.db #0x07	; 7
      000A10 07                    2854 	.db #0x07	; 7
      000A11 00                    2855 	.db #0x00	; 0
      000A12 00                    2856 	.db #0x00	; 0
      000A13 00                    2857 	.db #0x00	; 0
      000A14 00                    2858 	.db #0x00	; 0
      000A15 00                    2859 	.db #0x00	; 0
      000A16 00                    2860 	.db #0x00	; 0
      000A17 00                    2861 	.db #0x00	; 0
      000A18 00                    2862 	.db #0x00	; 0
      000A19 00                    2863 	.db #0x00	; 0
      000A1A 00                    2864 	.db #0x00	; 0
      000A1B 00                    2865 	.db #0x00	; 0
      000A1C 00                    2866 	.db #0x00	; 0
      000A1D 00                    2867 	.db #0x00	; 0
      000A1E 00                    2868 	.db #0x00	; 0
      000A1F 00                    2869 	.db #0x00	; 0
      000A20 00                    2870 	.db #0x00	; 0
      000A21 38                    2871 	.db #0x38	; 56	'8'
      000A22 38                    2872 	.db #0x38	; 56	'8'
      000A23 18                    2873 	.db #0x18	; 24
      000A24 18                    2874 	.db #0x18	; 24
      000A25 00                    2875 	.db #0x00	; 0
      000A26 00                    2876 	.db #0x00	; 0
      000A27 00                    2877 	.db #0x00	; 0
      000A28 00                    2878 	.db #0x00	; 0
      000A29 00                    2879 	.db #0x00	; 0
      000A2A 00                    2880 	.db #0x00	; 0
      000A2B 00                    2881 	.db #0x00	; 0
      000A2C 00                    2882 	.db #0x00	; 0
      000A2D 00                    2883 	.db #0x00	; 0
      000A2E 00                    2884 	.db #0x00	; 0
      000A2F 00                    2885 	.db #0x00	; 0
      000A30 00                    2886 	.db #0x00	; 0
      000A31 00                    2887 	.db #0x00	; 0
      000A32 00                    2888 	.db #0x00	; 0
      000A33 0C                    2889 	.db #0x0c	; 12
      000A34 0C                    2890 	.db #0x0c	; 12
      000A35 0E                    2891 	.db #0x0e	; 14
      000A36 0E                    2892 	.db #0x0e	; 14
      000A37 06                    2893 	.db #0x06	; 6
      000A38 06                    2894 	.db #0x06	; 6
      000A39 00                    2895 	.db #0x00	; 0
      000A3A 00                    2896 	.db #0x00	; 0
      000A3B 00                    2897 	.db #0x00	; 0
      000A3C 00                    2898 	.db #0x00	; 0
      000A3D 00                    2899 	.db #0x00	; 0
      000A3E 00                    2900 	.db #0x00	; 0
      000A3F 00                    2901 	.db #0x00	; 0
      000A40 00                    2902 	.db #0x00	; 0
      000A41 06                    2903 	.db #0x06	; 6
      000A42 06                    2904 	.db #0x06	; 6
      000A43 0E                    2905 	.db #0x0e	; 14
      000A44 0E                    2906 	.db #0x0e	; 14
      000A45 04                    2907 	.db #0x04	; 4
      000A46 04                    2908 	.db #0x04	; 4
      000A47 00                    2909 	.db #0x00	; 0
      000A48 00                    2910 	.db #0x00	; 0
      000A49 0E                    2911 	.db #0x0e	; 14
      000A4A 0E                    2912 	.db #0x0e	; 14
      000A4B 04                    2913 	.db #0x04	; 4
      000A4C 04                    2914 	.db #0x04	; 4
      000A4D 00                    2915 	.db #0x00	; 0
      000A4E 00                    2916 	.db #0x00	; 0
      000A4F 00                    2917 	.db #0x00	; 0
      000A50 00                    2918 	.db #0x00	; 0
      000A51 00                    2919 	.db #0x00	; 0
      000A52 00                    2920 	.db #0x00	; 0
      000A53 00                    2921 	.db #0x00	; 0
      000A54 00                    2922 	.db #0x00	; 0
      000A55 00                    2923 	.db #0x00	; 0
      000A56 00                    2924 	.db #0x00	; 0
      000A57 00                    2925 	.db #0x00	; 0
      000A58 00                    2926 	.db #0x00	; 0
      000A59 00                    2927 	.db #0x00	; 0
      000A5A 00                    2928 	.db #0x00	; 0
      000A5B 00                    2929 	.db #0x00	; 0
      000A5C 00                    2930 	.db #0x00	; 0
      000A5D 00                    2931 	.db #0x00	; 0
      000A5E 00                    2932 	.db #0x00	; 0
      000A5F 00                    2933 	.db #0x00	; 0
      000A60 00                    2934 	.db #0x00	; 0
      000A61 20                    2935 	.db #0x20	; 32
      000A62 20                    2936 	.db #0x20	; 32
      000A63 30                    2937 	.db #0x30	; 48	'0'
      000A64 30                    2938 	.db #0x30	; 48	'0'
      000A65 00                    2939 	.db #0x00	; 0
      000A66 00                    2940 	.db #0x00	; 0
      000A67 00                    2941 	.db #0x00	; 0
      000A68 00                    2942 	.db #0x00	; 0
      000A69 00                    2943 	.db #0x00	; 0
      000A6A 00                    2944 	.db #0x00	; 0
      000A6B 00                    2945 	.db #0x00	; 0
      000A6C 00                    2946 	.db #0x00	; 0
      000A6D 00                    2947 	.db #0x00	; 0
      000A6E 00                    2948 	.db #0x00	; 0
      000A6F 00                    2949 	.db #0x00	; 0
      000A70 00                    2950 	.db #0x00	; 0
      000A71 00                    2951 	.db #0x00	; 0
      000A72 00                    2952 	.db #0x00	; 0
      000A73 00                    2953 	.db #0x00	; 0
      000A74 00                    2954 	.db #0x00	; 0
      000A75 04                    2955 	.db #0x04	; 4
      000A76 04                    2956 	.db #0x04	; 4
      000A77 03                    2957 	.db #0x03	; 3
      000A78 03                    2958 	.db #0x03	; 3
      000A79 00                    2959 	.db #0x00	; 0
      000A7A 00                    2960 	.db #0x00	; 0
      000A7B 00                    2961 	.db #0x00	; 0
      000A7C 00                    2962 	.db #0x00	; 0
      000A7D 00                    2963 	.db #0x00	; 0
      000A7E 00                    2964 	.db #0x00	; 0
      000A7F 00                    2965 	.db #0x00	; 0
      000A80 00                    2966 	.db #0x00	; 0
      000A81 00                    2967 	.db #0x00	; 0
      000A82 00                    2968 	.db #0x00	; 0
      000A83 02                    2969 	.db #0x02	; 2
      000A84 02                    2970 	.db #0x02	; 2
      000A85 02                    2971 	.db #0x02	; 2
      000A86 02                    2972 	.db #0x02	; 2
      000A87 00                    2973 	.db #0x00	; 0
      000A88 00                    2974 	.db #0x00	; 0
      000A89                       2975 _Ex3:
      000A89 00                    2976 	.db #0x00	; 0
      000A8A 00                    2977 	.db #0x00	; 0
      000A8B 00                    2978 	.db #0x00	; 0
      000A8C 00                    2979 	.db #0x00	; 0
      000A8D 00                    2980 	.db #0x00	; 0
      000A8E 00                    2981 	.db #0x00	; 0
      000A8F 00                    2982 	.db #0x00	; 0
      000A90 00                    2983 	.db #0x00	; 0
      000A91 00                    2984 	.db #0x00	; 0
      000A92 00                    2985 	.db #0x00	; 0
      000A93 00                    2986 	.db #0x00	; 0
      000A94 00                    2987 	.db #0x00	; 0
      000A95 02                    2988 	.db #0x02	; 2
      000A96 02                    2989 	.db #0x02	; 2
      000A97 07                    2990 	.db #0x07	; 7
      000A98 07                    2991 	.db #0x07	; 7
      000A99 02                    2992 	.db #0x02	; 2
      000A9A 02                    2993 	.db #0x02	; 2
      000A9B 00                    2994 	.db #0x00	; 0
      000A9C 00                    2995 	.db #0x00	; 0
      000A9D 00                    2996 	.db #0x00	; 0
      000A9E 00                    2997 	.db #0x00	; 0
      000A9F 00                    2998 	.db #0x00	; 0
      000AA0 00                    2999 	.db #0x00	; 0
      000AA1 00                    3000 	.db #0x00	; 0
      000AA2 00                    3001 	.db #0x00	; 0
      000AA3 00                    3002 	.db #0x00	; 0
      000AA4 00                    3003 	.db #0x00	; 0
      000AA5 00                    3004 	.db #0x00	; 0
      000AA6 00                    3005 	.db #0x00	; 0
      000AA7 00                    3006 	.db #0x00	; 0
      000AA8 00                    3007 	.db #0x00	; 0
      000AA9 00                    3008 	.db #0x00	; 0
      000AAA 00                    3009 	.db #0x00	; 0
      000AAB 00                    3010 	.db #0x00	; 0
      000AAC 00                    3011 	.db #0x00	; 0
      000AAD 00                    3012 	.db #0x00	; 0
      000AAE 00                    3013 	.db #0x00	; 0
      000AAF 00                    3014 	.db #0x00	; 0
      000AB0 00                    3015 	.db #0x00	; 0
      000AB1 00                    3016 	.db #0x00	; 0
      000AB2 00                    3017 	.db #0x00	; 0
      000AB3 00                    3018 	.db #0x00	; 0
      000AB4 00                    3019 	.db #0x00	; 0
      000AB5 20                    3020 	.db #0x20	; 32
      000AB6 20                    3021 	.db #0x20	; 32
      000AB7 70                    3022 	.db #0x70	; 112	'p'
      000AB8 70                    3023 	.db #0x70	; 112	'p'
      000AB9 20                    3024 	.db #0x20	; 32
      000ABA 20                    3025 	.db #0x20	; 32
      000ABB 00                    3026 	.db #0x00	; 0
      000ABC 00                    3027 	.db #0x00	; 0
      000ABD 00                    3028 	.db #0x00	; 0
      000ABE 00                    3029 	.db #0x00	; 0
      000ABF 00                    3030 	.db #0x00	; 0
      000AC0 00                    3031 	.db #0x00	; 0
      000AC1 00                    3032 	.db #0x00	; 0
      000AC2 00                    3033 	.db #0x00	; 0
      000AC3 00                    3034 	.db #0x00	; 0
      000AC4 00                    3035 	.db #0x00	; 0
      000AC5 00                    3036 	.db #0x00	; 0
      000AC6 00                    3037 	.db #0x00	; 0
      000AC7 00                    3038 	.db #0x00	; 0
      000AC8 00                    3039 	.db #0x00	; 0
      000AC9 00                    3040 	.db #0x00	; 0
      000ACA 00                    3041 	.db #0x00	; 0
      000ACB 00                    3042 	.db #0x00	; 0
      000ACC 00                    3043 	.db #0x00	; 0
      000ACD 00                    3044 	.db #0x00	; 0
      000ACE 00                    3045 	.db #0x00	; 0
      000ACF 00                    3046 	.db #0x00	; 0
      000AD0 00                    3047 	.db #0x00	; 0
      000AD1 00                    3048 	.db #0x00	; 0
      000AD2 00                    3049 	.db #0x00	; 0
      000AD3 10                    3050 	.db #0x10	; 16
      000AD4 10                    3051 	.db #0x10	; 16
      000AD5 38                    3052 	.db #0x38	; 56	'8'
      000AD6 38                    3053 	.db #0x38	; 56	'8'
      000AD7 3E                    3054 	.db #0x3e	; 62
      000AD8 3E                    3055 	.db #0x3e	; 62
      000AD9 18                    3056 	.db #0x18	; 24
      000ADA 18                    3057 	.db #0x18	; 24
      000ADB 00                    3058 	.db #0x00	; 0
      000ADC 00                    3059 	.db #0x00	; 0
      000ADD 00                    3060 	.db #0x00	; 0
      000ADE 00                    3061 	.db #0x00	; 0
      000ADF 00                    3062 	.db #0x00	; 0
      000AE0 00                    3063 	.db #0x00	; 0
      000AE1 00                    3064 	.db #0x00	; 0
      000AE2 00                    3065 	.db #0x00	; 0
      000AE3 00                    3066 	.db #0x00	; 0
      000AE4 00                    3067 	.db #0x00	; 0
      000AE5 00                    3068 	.db #0x00	; 0
      000AE6 00                    3069 	.db #0x00	; 0
      000AE7 00                    3070 	.db #0x00	; 0
      000AE8 00                    3071 	.db #0x00	; 0
      000AE9 00                    3072 	.db #0x00	; 0
      000AEA 00                    3073 	.db #0x00	; 0
      000AEB 00                    3074 	.db #0x00	; 0
      000AEC 00                    3075 	.db #0x00	; 0
      000AED 00                    3076 	.db #0x00	; 0
      000AEE 00                    3077 	.db #0x00	; 0
      000AEF 00                    3078 	.db #0x00	; 0
      000AF0 00                    3079 	.db #0x00	; 0
      000AF1 00                    3080 	.db #0x00	; 0
      000AF2 00                    3081 	.db #0x00	; 0
      000AF3 00                    3082 	.db #0x00	; 0
      000AF4 00                    3083 	.db #0x00	; 0
      000AF5 1C                    3084 	.db #0x1c	; 28
      000AF6 1C                    3085 	.db #0x1c	; 28
      000AF7 7C                    3086 	.db #0x7c	; 124
      000AF8 7C                    3087 	.db #0x7c	; 124
      000AF9 1C                    3088 	.db #0x1c	; 28
      000AFA 1C                    3089 	.db #0x1c	; 28
      000AFB 08                    3090 	.db #0x08	; 8
      000AFC 08                    3091 	.db #0x08	; 8
      000AFD 00                    3092 	.db #0x00	; 0
      000AFE 00                    3093 	.db #0x00	; 0
      000AFF 00                    3094 	.db #0x00	; 0
      000B00 00                    3095 	.db #0x00	; 0
      000B01 00                    3096 	.db #0x00	; 0
      000B02 00                    3097 	.db #0x00	; 0
      000B03 00                    3098 	.db #0x00	; 0
      000B04 00                    3099 	.db #0x00	; 0
      000B05 00                    3100 	.db #0x00	; 0
      000B06 00                    3101 	.db #0x00	; 0
      000B07 00                    3102 	.db #0x00	; 0
      000B08 00                    3103 	.db #0x00	; 0
      000B09 00                    3104 	.db #0x00	; 0
      000B0A 00                    3105 	.db #0x00	; 0
      000B0B 00                    3106 	.db #0x00	; 0
      000B0C 00                    3107 	.db #0x00	; 0
      000B0D 00                    3108 	.db #0x00	; 0
      000B0E 00                    3109 	.db #0x00	; 0
      000B0F 00                    3110 	.db #0x00	; 0
      000B10 00                    3111 	.db #0x00	; 0
      000B11 00                    3112 	.db #0x00	; 0
      000B12 00                    3113 	.db #0x00	; 0
      000B13 00                    3114 	.db #0x00	; 0
      000B14 00                    3115 	.db #0x00	; 0
      000B15 28                    3116 	.db #0x28	; 40
      000B16 28                    3117 	.db #0x28	; 40
      000B17 30                    3118 	.db #0x30	; 48	'0'
      000B18 30                    3119 	.db #0x30	; 48	'0'
      000B19 38                    3120 	.db #0x38	; 56	'8'
      000B1A 38                    3121 	.db #0x38	; 56	'8'
      000B1B 10                    3122 	.db #0x10	; 16
      000B1C 10                    3123 	.db #0x10	; 16
      000B1D 00                    3124 	.db #0x00	; 0
      000B1E 00                    3125 	.db #0x00	; 0
      000B1F 00                    3126 	.db #0x00	; 0
      000B20 00                    3127 	.db #0x00	; 0
      000B21 00                    3128 	.db #0x00	; 0
      000B22 00                    3129 	.db #0x00	; 0
      000B23 00                    3130 	.db #0x00	; 0
      000B24 00                    3131 	.db #0x00	; 0
      000B25 00                    3132 	.db #0x00	; 0
      000B26 00                    3133 	.db #0x00	; 0
      000B27 00                    3134 	.db #0x00	; 0
      000B28 00                    3135 	.db #0x00	; 0
      000B29 00                    3136 	.db #0x00	; 0
      000B2A 00                    3137 	.db #0x00	; 0
      000B2B 00                    3138 	.db #0x00	; 0
      000B2C 00                    3139 	.db #0x00	; 0
      000B2D 00                    3140 	.db #0x00	; 0
      000B2E 00                    3141 	.db #0x00	; 0
      000B2F 00                    3142 	.db #0x00	; 0
      000B30 00                    3143 	.db #0x00	; 0
      000B31 00                    3144 	.db #0x00	; 0
      000B32 00                    3145 	.db #0x00	; 0
      000B33 00                    3146 	.db #0x00	; 0
      000B34 00                    3147 	.db #0x00	; 0
      000B35 04                    3148 	.db #0x04	; 4
      000B36 04                    3149 	.db #0x04	; 4
      000B37 0E                    3150 	.db #0x0e	; 14
      000B38 0E                    3151 	.db #0x0e	; 14
      000B39 0E                    3152 	.db #0x0e	; 14
      000B3A 0E                    3153 	.db #0x0e	; 14
      000B3B 00                    3154 	.db #0x00	; 0
      000B3C 00                    3155 	.db #0x00	; 0
      000B3D 00                    3156 	.db #0x00	; 0
      000B3E 00                    3157 	.db #0x00	; 0
      000B3F 00                    3158 	.db #0x00	; 0
      000B40 00                    3159 	.db #0x00	; 0
      000B41 00                    3160 	.db #0x00	; 0
      000B42 00                    3161 	.db #0x00	; 0
      000B43 00                    3162 	.db #0x00	; 0
      000B44 00                    3163 	.db #0x00	; 0
      000B45 00                    3164 	.db #0x00	; 0
      000B46 00                    3165 	.db #0x00	; 0
      000B47 00                    3166 	.db #0x00	; 0
      000B48 00                    3167 	.db #0x00	; 0
      000B49 00                    3168 	.db #0x00	; 0
      000B4A 00                    3169 	.db #0x00	; 0
      000B4B 00                    3170 	.db #0x00	; 0
      000B4C 00                    3171 	.db #0x00	; 0
      000B4D 00                    3172 	.db #0x00	; 0
      000B4E 00                    3173 	.db #0x00	; 0
      000B4F 00                    3174 	.db #0x00	; 0
      000B50 00                    3175 	.db #0x00	; 0
      000B51 00                    3176 	.db #0x00	; 0
      000B52 00                    3177 	.db #0x00	; 0
      000B53 00                    3178 	.db #0x00	; 0
      000B54 00                    3179 	.db #0x00	; 0
      000B55 00                    3180 	.db #0x00	; 0
      000B56 00                    3181 	.db #0x00	; 0
      000B57 60                    3182 	.db #0x60	; 96
      000B58 60                    3183 	.db #0x60	; 96
      000B59 40                    3184 	.db #0x40	; 64
      000B5A 40                    3185 	.db #0x40	; 64
      000B5B 00                    3186 	.db #0x00	; 0
      000B5C 00                    3187 	.db #0x00	; 0
      000B5D 00                    3188 	.db #0x00	; 0
      000B5E 00                    3189 	.db #0x00	; 0
      000B5F 00                    3190 	.db #0x00	; 0
      000B60 00                    3191 	.db #0x00	; 0
      000B61 00                    3192 	.db #0x00	; 0
      000B62 00                    3193 	.db #0x00	; 0
      000B63 00                    3194 	.db #0x00	; 0
      000B64 00                    3195 	.db #0x00	; 0
      000B65 00                    3196 	.db #0x00	; 0
      000B66 00                    3197 	.db #0x00	; 0
      000B67 00                    3198 	.db #0x00	; 0
      000B68 00                    3199 	.db #0x00	; 0
      000B69 00                    3200 	.db #0x00	; 0
      000B6A 00                    3201 	.db #0x00	; 0
      000B6B 00                    3202 	.db #0x00	; 0
      000B6C 00                    3203 	.db #0x00	; 0
      000B6D 00                    3204 	.db #0x00	; 0
      000B6E 00                    3205 	.db #0x00	; 0
      000B6F 00                    3206 	.db #0x00	; 0
      000B70 00                    3207 	.db #0x00	; 0
      000B71 00                    3208 	.db #0x00	; 0
      000B72 00                    3209 	.db #0x00	; 0
      000B73 00                    3210 	.db #0x00	; 0
      000B74 00                    3211 	.db #0x00	; 0
      000B75 00                    3212 	.db #0x00	; 0
      000B76 00                    3213 	.db #0x00	; 0
      000B77 02                    3214 	.db #0x02	; 2
      000B78 02                    3215 	.db #0x02	; 2
      000B79 02                    3216 	.db #0x02	; 2
      000B7A 02                    3217 	.db #0x02	; 2
      000B7B 00                    3218 	.db #0x00	; 0
      000B7C 00                    3219 	.db #0x00	; 0
      000B7D 00                    3220 	.db #0x00	; 0
      000B7E 00                    3221 	.db #0x00	; 0
      000B7F 00                    3222 	.db #0x00	; 0
      000B80 00                    3223 	.db #0x00	; 0
      000B81 00                    3224 	.db #0x00	; 0
      000B82 00                    3225 	.db #0x00	; 0
      000B83 00                    3226 	.db #0x00	; 0
      000B84 00                    3227 	.db #0x00	; 0
      000B85 00                    3228 	.db #0x00	; 0
      000B86 00                    3229 	.db #0x00	; 0
      000B87 00                    3230 	.db #0x00	; 0
      000B88 00                    3231 	.db #0x00	; 0
      000B89                       3232 _BLANKSIZE:
      000B89 03                    3233 	.db #0x03	; 3
      000B8A                       3234 _BLANK:
      000B8A 26                    3235 	.db #0x26	; 38
      000B8B 2B                    3236 	.db #0x2b	; 43
      000B8C 2C                    3237 	.db #0x2c	; 44
      000B8D                       3238 _EMPTYSPRITE:
      000B8D 50                    3239 	.db #0x50	; 80	'P'
      000B8E                       3240 _ENEMYCOUNT:
      000B8E 05                    3241 	.db #0x05	; 5
      000B8F                       3242 _xSpawnPositions:
      000B8F 00                    3243 	.db #0x00	; 0
      000B90 60                    3244 	.db #0x60	; 96
      000B91 B0                    3245 	.db #0xb0	; 176
      000B92 00                    3246 	.db #0x00	; 0
      000B93 B0                    3247 	.db #0xb0	; 176
      000B94 00                    3248 	.db #0x00	; 0
      000B95 60                    3249 	.db #0x60	; 96
      000B96 B0                    3250 	.db #0xb0	; 176
      000B97                       3251 _ySpawnPositions:
      000B97 00                    3252 	.db #0x00	; 0
      000B98 00                    3253 	.db #0x00	; 0
      000B99 00                    3254 	.db #0x00	; 0
      000B9A 5C                    3255 	.db #0x5c	; 92
      000B9B 5C                    3256 	.db #0x5c	; 92
      000B9C A0                    3257 	.db #0xa0	; 160
      000B9D A0                    3258 	.db #0xa0	; 160
      000B9E A0                    3259 	.db #0xa0	; 160
      000B9F                       3260 _PROJECTILECOUNT:
      000B9F 05                    3261 	.db #0x05	; 5
      000BA0                       3262 _PLAYERSIZE:
      000BA0 10                    3263 	.db #0x10	; 16
      000BA1                       3264 _maxHull:
      000BA1 64                    3265 	.db #0x64	;  100	'd'
      000BA2                       3266 _maxShield:
      000BA2 64                    3267 	.db #0x64	;  100	'd'
      000BA3                       3268 _MAXGUNLEVEL:
      000BA3 01                    3269 	.db #0x01	; 1
      000BA4                       3270 _SPLASHDROPOFF:
      000BA4 01                    3271 	.db #0x01	; 1
      000BA5                       3272 _exCount:
      000BA5 04                    3273 	.db #0x04	; 4
      000BA6                       3274 _EXPLFRAMETIME:
      000BA6 04                    3275 	.db #0x04	; 4
      000BA7                       3276 _exTileCount:
      000BA7 03                    3277 	.db #0x03	; 3
      000BA8                       3278 _AUXTICKFREQUENCY:
      000BA8 01                    3279 	.db #0x01	; 1
                                   3280 ;src/main.c:159: void setHealthBar(uint8_t row, uint8_t hp) {
                                   3281 ;	---------------------------------
                                   3282 ; Function setHealthBar
                                   3283 ; ---------------------------------
      000BA9                       3284 _setHealthBar::
      000BA9 E8 FB                 3285 	add	sp, #-5
                                   3286 ;src/main.c:161: if (hp >= 80) {
      000BAB F8 08                 3287 	ldhl	sp,	#8
      000BAD 7E                    3288 	ld	a, (hl)
      000BAE D6 50                 3289 	sub	a, #0x50
      000BB0 38 31                 3290 	jr	C, 00102$
                                   3291 ;src/main.c:162: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000BB2 F8 00                 3292 	ldhl	sp,	#0
      000BB4 4D                    3293 	ld	c, l
      000BB5 44                    3294 	ld	b, h
      000BB6 36 50                 3295 	ld	(hl), #0x50
      000BB8 69                    3296 	ld	l, c
                                   3297 ;	spillPairReg hl
                                   3298 ;	spillPairReg hl
      000BB9 60                    3299 	ld	h, b
                                   3300 ;	spillPairReg hl
                                   3301 ;	spillPairReg hl
      000BBA 23                    3302 	inc	hl
      000BBB 36 50                 3303 	ld	(hl), #0x50
      000BBD 69                    3304 	ld	l, c
                                   3305 ;	spillPairReg hl
                                   3306 ;	spillPairReg hl
      000BBE 60                    3307 	ld	h, b
                                   3308 ;	spillPairReg hl
                                   3309 ;	spillPairReg hl
      000BBF 23                    3310 	inc	hl
      000BC0 23                    3311 	inc	hl
      000BC1 36 50                 3312 	ld	(hl), #0x50
      000BC3 69                    3313 	ld	l, c
                                   3314 ;	spillPairReg hl
                                   3315 ;	spillPairReg hl
      000BC4 60                    3316 	ld	h, b
                                   3317 ;	spillPairReg hl
                                   3318 ;	spillPairReg hl
      000BC5 23                    3319 	inc	hl
      000BC6 23                    3320 	inc	hl
      000BC7 23                    3321 	inc	hl
      000BC8 36 50                 3322 	ld	(hl), #0x50
      000BCA 21 04 00              3323 	ld	hl, #0x0004
      000BCD 09                    3324 	add	hl, bc
      000BCE 36 50                 3325 	ld	(hl), #0x50
                                   3326 ;src/main.c:163: set_win_tiles(5,row,5,1,blockmap);
      000BD0 C5                    3327 	push	bc
      000BD1 21 05 01              3328 	ld	hl, #0x105
      000BD4 E5                    3329 	push	hl
      000BD5 F8 0B                 3330 	ldhl	sp,	#11
      000BD7 66                    3331 	ld	h, (hl)
      000BD8 2E 05                 3332 	ld	l, #0x05
      000BDA E5                    3333 	push	hl
      000BDB CDr00r00              3334 	call	_set_win_tiles
      000BDE E8 06                 3335 	add	sp, #6
                                   3336 ;src/main.c:164: return;
      000BE0 C3rB7r0C              3337 	jp	00109$
      000BE3                       3338 00102$:
                                   3339 ;src/main.c:166: if (hp >= 60) {
      000BE3 F8 08                 3340 	ldhl	sp,	#8
      000BE5 7E                    3341 	ld	a, (hl)
      000BE6 D6 3C                 3342 	sub	a, #0x3c
      000BE8 38 31                 3343 	jr	C, 00104$
                                   3344 ;src/main.c:167: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000BEA F8 00                 3345 	ldhl	sp,	#0
      000BEC 4D                    3346 	ld	c, l
      000BED 44                    3347 	ld	b, h
      000BEE 36 50                 3348 	ld	(hl), #0x50
      000BF0 69                    3349 	ld	l, c
                                   3350 ;	spillPairReg hl
                                   3351 ;	spillPairReg hl
      000BF1 60                    3352 	ld	h, b
                                   3353 ;	spillPairReg hl
                                   3354 ;	spillPairReg hl
      000BF2 23                    3355 	inc	hl
      000BF3 36 50                 3356 	ld	(hl), #0x50
      000BF5 69                    3357 	ld	l, c
                                   3358 ;	spillPairReg hl
                                   3359 ;	spillPairReg hl
      000BF6 60                    3360 	ld	h, b
                                   3361 ;	spillPairReg hl
                                   3362 ;	spillPairReg hl
      000BF7 23                    3363 	inc	hl
      000BF8 23                    3364 	inc	hl
      000BF9 36 50                 3365 	ld	(hl), #0x50
      000BFB 69                    3366 	ld	l, c
                                   3367 ;	spillPairReg hl
                                   3368 ;	spillPairReg hl
      000BFC 60                    3369 	ld	h, b
                                   3370 ;	spillPairReg hl
                                   3371 ;	spillPairReg hl
      000BFD 23                    3372 	inc	hl
      000BFE 23                    3373 	inc	hl
      000BFF 23                    3374 	inc	hl
      000C00 36 50                 3375 	ld	(hl), #0x50
      000C02 21 04 00              3376 	ld	hl, #0x0004
      000C05 09                    3377 	add	hl, bc
      000C06 36 00                 3378 	ld	(hl), #0x00
                                   3379 ;src/main.c:168: set_win_tiles(5,row,5,1,blockmap);
      000C08 C5                    3380 	push	bc
      000C09 21 05 01              3381 	ld	hl, #0x105
      000C0C E5                    3382 	push	hl
      000C0D F8 0B                 3383 	ldhl	sp,	#11
      000C0F 66                    3384 	ld	h, (hl)
      000C10 2E 05                 3385 	ld	l, #0x05
      000C12 E5                    3386 	push	hl
      000C13 CDr00r00              3387 	call	_set_win_tiles
      000C16 E8 06                 3388 	add	sp, #6
                                   3389 ;src/main.c:169: return;
      000C18 C3rB7r0C              3390 	jp	00109$
      000C1B                       3391 00104$:
                                   3392 ;src/main.c:171: if (hp >= 40) {
      000C1B F8 08                 3393 	ldhl	sp,	#8
      000C1D 7E                    3394 	ld	a, (hl)
      000C1E D6 28                 3395 	sub	a, #0x28
      000C20 38 30                 3396 	jr	C, 00106$
                                   3397 ;src/main.c:172: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000C22 F8 00                 3398 	ldhl	sp,	#0
      000C24 4D                    3399 	ld	c, l
      000C25 44                    3400 	ld	b, h
      000C26 36 50                 3401 	ld	(hl), #0x50
      000C28 69                    3402 	ld	l, c
                                   3403 ;	spillPairReg hl
                                   3404 ;	spillPairReg hl
      000C29 60                    3405 	ld	h, b
                                   3406 ;	spillPairReg hl
                                   3407 ;	spillPairReg hl
      000C2A 23                    3408 	inc	hl
      000C2B 36 50                 3409 	ld	(hl), #0x50
      000C2D 69                    3410 	ld	l, c
                                   3411 ;	spillPairReg hl
                                   3412 ;	spillPairReg hl
      000C2E 60                    3413 	ld	h, b
                                   3414 ;	spillPairReg hl
                                   3415 ;	spillPairReg hl
      000C2F 23                    3416 	inc	hl
      000C30 23                    3417 	inc	hl
      000C31 36 50                 3418 	ld	(hl), #0x50
      000C33 59                    3419 	ld	e, c
      000C34 50                    3420 	ld	d, b
      000C35 13                    3421 	inc	de
      000C36 13                    3422 	inc	de
      000C37 13                    3423 	inc	de
      000C38 AF                    3424 	xor	a, a
      000C39 12                    3425 	ld	(de), a
      000C3A 21 04 00              3426 	ld	hl, #0x0004
      000C3D 09                    3427 	add	hl, bc
      000C3E 36 00                 3428 	ld	(hl), #0x00
                                   3429 ;src/main.c:173: set_win_tiles(5,row,5,1,blockmap);
      000C40 C5                    3430 	push	bc
      000C41 21 05 01              3431 	ld	hl, #0x105
      000C44 E5                    3432 	push	hl
      000C45 F8 0B                 3433 	ldhl	sp,	#11
      000C47 66                    3434 	ld	h, (hl)
      000C48 2E 05                 3435 	ld	l, #0x05
      000C4A E5                    3436 	push	hl
      000C4B CDr00r00              3437 	call	_set_win_tiles
      000C4E E8 06                 3438 	add	sp, #6
                                   3439 ;src/main.c:174: return;
      000C50 18 65                 3440 	jr	00109$
      000C52                       3441 00106$:
                                   3442 ;src/main.c:176: if (hp >= 20) {
      000C52 F8 08                 3443 	ldhl	sp,	#8
      000C54 7E                    3444 	ld	a, (hl)
      000C55 D6 14                 3445 	sub	a, #0x14
      000C57 38 30                 3446 	jr	C, 00108$
                                   3447 ;src/main.c:177: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000C59 F8 00                 3448 	ldhl	sp,	#0
      000C5B 4D                    3449 	ld	c, l
      000C5C 44                    3450 	ld	b, h
      000C5D 36 50                 3451 	ld	(hl), #0x50
      000C5F 69                    3452 	ld	l, c
                                   3453 ;	spillPairReg hl
                                   3454 ;	spillPairReg hl
      000C60 60                    3455 	ld	h, b
                                   3456 ;	spillPairReg hl
                                   3457 ;	spillPairReg hl
      000C61 23                    3458 	inc	hl
      000C62 36 50                 3459 	ld	(hl), #0x50
      000C64 59                    3460 	ld	e, c
      000C65 50                    3461 	ld	d, b
      000C66 13                    3462 	inc	de
      000C67 13                    3463 	inc	de
      000C68 AF                    3464 	xor	a, a
      000C69 12                    3465 	ld	(de), a
      000C6A 59                    3466 	ld	e, c
      000C6B 50                    3467 	ld	d, b
      000C6C 13                    3468 	inc	de
      000C6D 13                    3469 	inc	de
      000C6E 13                    3470 	inc	de
      000C6F AF                    3471 	xor	a, a
      000C70 12                    3472 	ld	(de), a
      000C71 21 04 00              3473 	ld	hl, #0x0004
      000C74 09                    3474 	add	hl, bc
      000C75 36 00                 3475 	ld	(hl), #0x00
                                   3476 ;src/main.c:178: set_win_tiles(5,row,5,1,blockmap);
      000C77 C5                    3477 	push	bc
      000C78 21 05 01              3478 	ld	hl, #0x105
      000C7B E5                    3479 	push	hl
      000C7C F8 0B                 3480 	ldhl	sp,	#11
      000C7E 66                    3481 	ld	h, (hl)
      000C7F 2E 05                 3482 	ld	l, #0x05
      000C81 E5                    3483 	push	hl
      000C82 CDr00r00              3484 	call	_set_win_tiles
      000C85 E8 06                 3485 	add	sp, #6
                                   3486 ;src/main.c:179: return;
      000C87 18 2E                 3487 	jr	00109$
      000C89                       3488 00108$:
                                   3489 ;src/main.c:181: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000C89 F8 00                 3490 	ldhl	sp,	#0
      000C8B 4D                    3491 	ld	c, l
      000C8C 44                    3492 	ld	b, h
      000C8D 36 50                 3493 	ld	(hl), #0x50
      000C8F 59                    3494 	ld	e, c
      000C90 50                    3495 	ld	d, b
      000C91 13                    3496 	inc	de
      000C92 AF                    3497 	xor	a, a
      000C93 12                    3498 	ld	(de), a
      000C94 59                    3499 	ld	e, c
      000C95 50                    3500 	ld	d, b
      000C96 13                    3501 	inc	de
      000C97 13                    3502 	inc	de
      000C98 AF                    3503 	xor	a, a
      000C99 12                    3504 	ld	(de), a
      000C9A 59                    3505 	ld	e, c
      000C9B 50                    3506 	ld	d, b
      000C9C 13                    3507 	inc	de
      000C9D 13                    3508 	inc	de
      000C9E 13                    3509 	inc	de
      000C9F AF                    3510 	xor	a, a
      000CA0 12                    3511 	ld	(de), a
      000CA1 21 04 00              3512 	ld	hl, #0x0004
      000CA4 09                    3513 	add	hl, bc
      000CA5 36 00                 3514 	ld	(hl), #0x00
                                   3515 ;src/main.c:182: set_win_tiles(5,row,5,1,blockmap);
      000CA7 C5                    3516 	push	bc
      000CA8 21 05 01              3517 	ld	hl, #0x105
      000CAB E5                    3518 	push	hl
      000CAC F8 0B                 3519 	ldhl	sp,	#11
      000CAE 66                    3520 	ld	h, (hl)
      000CAF 2E 05                 3521 	ld	l, #0x05
      000CB1 E5                    3522 	push	hl
      000CB2 CDr00r00              3523 	call	_set_win_tiles
      000CB5 E8 06                 3524 	add	sp, #6
                                   3525 ;src/main.c:183: return;
      000CB7                       3526 00109$:
                                   3527 ;src/main.c:185: }
      000CB7 E8 05                 3528 	add	sp, #5
      000CB9 C9                    3529 	ret
                                   3530 ;src/main.c:187: void updateScore() {
                                   3531 ;	---------------------------------
                                   3532 ; Function updateScore
                                   3533 ; ---------------------------------
      000CBA                       3534 _updateScore::
      000CBA E8 F6                 3535 	add	sp, #-10
                                   3536 ;src/main.c:191: len = bcd2text(&SCORE, 0x01, buf);
      000CBC F8 00                 3537 	ldhl	sp,	#0
      000CBE 4D                    3538 	ld	c, l
      000CBF 44                    3539 	ld	b, h
      000CC0 59                    3540 	ld	e, c
      000CC1 50                    3541 	ld	d, b
      000CC2 C5                    3542 	push	bc
      000CC3 D5                    3543 	push	de
      000CC4 3E 01                 3544 	ld	a, #0x01
      000CC6 F5                    3545 	push	af
      000CC7 33                    3546 	inc	sp
      000CC8 11rC7r00              3547 	ld	de, #_SCORE
      000CCB D5                    3548 	push	de
      000CCC CDr00r00              3549 	call	_bcd2text
      000CCF E8 05                 3550 	add	sp, #5
      000CD1 C1                    3551 	pop	bc
                                   3552 ;src/main.c:192: set_win_tiles(15, 1, 5, 1, buf+3);
      000CD2 03                    3553 	inc	bc
      000CD3 03                    3554 	inc	bc
      000CD4 03                    3555 	inc	bc
      000CD5 C5                    3556 	push	bc
      000CD6 21 05 01              3557 	ld	hl, #0x105
      000CD9 E5                    3558 	push	hl
      000CDA 21 0F 01              3559 	ld	hl, #0x10f
      000CDD E5                    3560 	push	hl
      000CDE CDr00r00              3561 	call	_set_win_tiles
                                   3562 ;src/main.c:193: }
      000CE1 E8 10                 3563 	add	sp, #16
      000CE3 C9                    3564 	ret
                                   3565 ;src/main.c:195: void updateMissileCount(int8_t amount) {
                                   3566 ;	---------------------------------
                                   3567 ; Function updateMissileCount
                                   3568 ; ---------------------------------
      000CE4                       3569 _updateMissileCount::
      000CE4 E8 F6                 3570 	add	sp, #-10
                                   3571 ;src/main.c:196: if (amount == -1) {
      000CE6 F8 0C                 3572 	ldhl	sp,	#12
      000CE8 7E                    3573 	ld	a, (hl)
      000CE9 3C                    3574 	inc	a
      000CEA 20 13                 3575 	jr	NZ, 00112$
                                   3576 ;src/main.c:197: missiles--;
      000CEC 21rBCr00              3577 	ld	hl, #_missiles
      000CEF 35                    3578 	dec	(hl)
                                   3579 ;src/main.c:198: bcd_sub(&MISSILES, &INCREMENT);
      000CF0 11rCBr00              3580 	ld	de, #_INCREMENT
      000CF3 D5                    3581 	push	de
      000CF4 11rBDr00              3582 	ld	de, #_MISSILES
      000CF7 D5                    3583 	push	de
      000CF8 CDr00r00              3584 	call	_bcd_sub
      000CFB E8 04                 3585 	add	sp, #4
      000CFD 18 30                 3586 	jr	00104$
                                   3587 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000CFF                       3588 00112$:
      000CFF 0E 00                 3589 	ld	c, #0x00
      000D01                       3590 00106$:
      000D01 F8 0C                 3591 	ldhl	sp,	#12
      000D03 5E                    3592 	ld	e, (hl)
      000D04 79                    3593 	ld	a,c
      000D05 57                    3594 	ld	d,a
      000D06 96                    3595 	sub	a, (hl)
      000D07 CB 7B                 3596 	bit	7, e
      000D09 28 07                 3597 	jr	Z, 00128$
      000D0B CB 7A                 3598 	bit	7, d
      000D0D 20 08                 3599 	jr	NZ, 00129$
      000D0F BF                    3600 	cp	a, a
      000D10 18 05                 3601 	jr	00129$
      000D12                       3602 00128$:
      000D12 CB 7A                 3603 	bit	7, d
      000D14 28 01                 3604 	jr	Z, 00129$
      000D16 37                    3605 	scf
      000D17                       3606 00129$:
      000D17 30 16                 3607 	jr	NC, 00104$
                                   3608 ;src/main.c:202: ++missiles;
      000D19 21rBCr00              3609 	ld	hl, #_missiles
      000D1C 34                    3610 	inc	(hl)
                                   3611 ;src/main.c:203: bcd_add(&MISSILES, &INCREMENT);
      000D1D C5                    3612 	push	bc
      000D1E 11rCBr00              3613 	ld	de, #_INCREMENT
      000D21 D5                    3614 	push	de
      000D22 11rBDr00              3615 	ld	de, #_MISSILES
      000D25 D5                    3616 	push	de
      000D26 CDr00r00              3617 	call	_bcd_add
      000D29 E8 04                 3618 	add	sp, #4
      000D2B C1                    3619 	pop	bc
                                   3620 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000D2C 0C                    3621 	inc	c
      000D2D 18 D2                 3622 	jr	00106$
      000D2F                       3623 00104$:
                                   3624 ;src/main.c:208: len = bcd2text(&MISSILES, 0x01, buf);
      000D2F F8 00                 3625 	ldhl	sp,	#0
      000D31 4D                    3626 	ld	c, l
      000D32 44                    3627 	ld	b, h
      000D33 59                    3628 	ld	e, c
      000D34 50                    3629 	ld	d, b
      000D35 C5                    3630 	push	bc
      000D36 D5                    3631 	push	de
      000D37 3E 01                 3632 	ld	a, #0x01
      000D39 F5                    3633 	push	af
      000D3A 33                    3634 	inc	sp
      000D3B 11rBDr00              3635 	ld	de, #_MISSILES
      000D3E D5                    3636 	push	de
      000D3F CDr00r00              3637 	call	_bcd2text
      000D42 E8 05                 3638 	add	sp, #5
      000D44 C1                    3639 	pop	bc
                                   3640 ;src/main.c:209: set_win_tiles(18, 0, 2, 1, buf+6);
      000D45 21 06 00              3641 	ld	hl, #0x0006
      000D48 09                    3642 	add	hl, bc
      000D49 E5                    3643 	push	hl
      000D4A 21 02 01              3644 	ld	hl, #0x102
      000D4D E5                    3645 	push	hl
      000D4E 21 12 00              3646 	ld	hl, #0x12
      000D51 E5                    3647 	push	hl
      000D52 CDr00r00              3648 	call	_set_win_tiles
                                   3649 ;src/main.c:211: }
      000D55 E8 10                 3650 	add	sp, #16
      000D57 C9                    3651 	ret
                                   3652 ;src/main.c:213: void incrementScore() {
                                   3653 ;	---------------------------------
                                   3654 ; Function incrementScore
                                   3655 ; ---------------------------------
      000D58                       3656 _incrementScore::
                                   3657 ;src/main.c:214: score += 1;
      000D58 21rC5r00              3658 	ld	hl, #_score
      000D5B 2A                    3659 	ld	a, (hl+)
      000D5C 4F                    3660 	ld	c, a
      000D5D 3A                    3661 	ld	a, (hl-)
      000D5E 47                    3662 	ld	b, a
      000D5F 03                    3663 	inc	bc
      000D60 79                    3664 	ld	a, c
      000D61 22                    3665 	ld	(hl+), a
      000D62 70                    3666 	ld	(hl), b
                                   3667 ;src/main.c:215: bcd_add(&SCORE, &INCREMENT);
      000D63 11rCBr00              3668 	ld	de, #_INCREMENT
      000D66 D5                    3669 	push	de
      000D67 11rC7r00              3670 	ld	de, #_SCORE
      000D6A D5                    3671 	push	de
      000D6B CDr00r00              3672 	call	_bcd_add
      000D6E E8 04                 3673 	add	sp, #4
                                   3674 ;src/main.c:216: }
      000D70 C9                    3675 	ret
                                   3676 ;src/main.c:218: void updateDirection() {
                                   3677 ;	---------------------------------
                                   3678 ; Function updateDirection
                                   3679 ; ---------------------------------
      000D71                       3680 _updateDirection::
      000D71 E8 FC                 3681 	add	sp, #-4
                                   3682 ;src/main.c:222: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000D73 21rF5r00              3683 	ld	hl, #_joydata
      000D76 5E                    3684 	ld	e, (hl)
      000D77 7B                    3685 	ld	a, e
      000D78 E6 01                 3686 	and	a, #0x01
      000D7A F8 00                 3687 	ldhl	sp,	#0
      000D7C 22                    3688 	ld	(hl+), a
      000D7D AF                    3689 	xor	a, a
      000D7E 22                    3690 	ld	(hl+), a
      000D7F 7B                    3691 	ld	a, e
      000D80 E6 04                 3692 	and	a, #0x04
      000D82 22                    3693 	ld	(hl+), a
      000D83 AF                    3694 	xor	a, a
      000D84 32                    3695 	ld	(hl-), a
      000D85 2B                    3696 	dec	hl
      000D86 7B                    3697 	ld	a, e
      000D87 E6 08                 3698 	and	a, #0x08
      000D89 4F                    3699 	ld	c, a
      000D8A 06 00                 3700 	ld	b, #0x00
      000D8C 3A                    3701 	ld	a, (hl-)
      000D8D B6                    3702 	or	a, (hl)
      000D8E 28 14                 3703 	jr	Z, 00102$
      000D90 F8 03                 3704 	ldhl	sp,	#3
      000D92 3A                    3705 	ld	a, (hl-)
      000D93 B6                    3706 	or	a, (hl)
      000D94 20 0E                 3707 	jr	NZ, 00102$
      000D96 78                    3708 	ld	a, b
      000D97 B1                    3709 	or	a, c
      000D98 20 0A                 3710 	jr	NZ, 00102$
                                   3711 ;src/main.c:223: xDir = 1;
      000D9A 21rA7r00              3712 	ld	hl, #_xDir
      000D9D 36 01                 3713 	ld	(hl), #0x01
                                   3714 ;src/main.c:224: yDir = 0;
      000D9F 21rA8r00              3715 	ld	hl, #_yDir
      000DA2 36 00                 3716 	ld	(hl), #0x00
      000DA4                       3717 00102$:
                                   3718 ;src/main.c:226: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000DA4 7B                    3719 	ld	a, e
      000DA5 E6 02                 3720 	and	a, #0x02
      000DA7 5F                    3721 	ld	e, a
      000DA8 16 00                 3722 	ld	d, #0x00
      000DAA 7A                    3723 	ld	a, d
      000DAB B3                    3724 	or	a, e
      000DAC 28 14                 3725 	jr	Z, 00106$
      000DAE F8 03                 3726 	ldhl	sp,	#3
      000DB0 3A                    3727 	ld	a, (hl-)
      000DB1 B6                    3728 	or	a, (hl)
      000DB2 20 0E                 3729 	jr	NZ, 00106$
      000DB4 78                    3730 	ld	a, b
      000DB5 B1                    3731 	or	a, c
      000DB6 20 0A                 3732 	jr	NZ, 00106$
                                   3733 ;src/main.c:227: xDir = -1;
      000DB8 21rA7r00              3734 	ld	hl, #_xDir
      000DBB 36 FF                 3735 	ld	(hl), #0xff
                                   3736 ;src/main.c:228: yDir = 0;
      000DBD 21rA8r00              3737 	ld	hl, #_yDir
      000DC0 36 00                 3738 	ld	(hl), #0x00
      000DC2                       3739 00106$:
                                   3740 ;src/main.c:230: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DC2 F8 03                 3741 	ldhl	sp,	#3
      000DC4 3A                    3742 	ld	a, (hl-)
      000DC5 B6                    3743 	or	a, (hl)
      000DC6 28 13                 3744 	jr	Z, 00110$
      000DC8 7A                    3745 	ld	a, d
      000DC9 B3                    3746 	or	a, e
      000DCA 20 0F                 3747 	jr	NZ, 00110$
      000DCC 2B                    3748 	dec	hl
      000DCD 3A                    3749 	ld	a, (hl-)
      000DCE B6                    3750 	or	a, (hl)
      000DCF 20 0A                 3751 	jr	NZ, 00110$
                                   3752 ;src/main.c:231: xDir = 0;
      000DD1 21rA7r00              3753 	ld	hl, #_xDir
      000DD4 36 00                 3754 	ld	(hl), #0x00
                                   3755 ;src/main.c:232: yDir = -1;
      000DD6 21rA8r00              3756 	ld	hl, #_yDir
      000DD9 36 FF                 3757 	ld	(hl), #0xff
      000DDB                       3758 00110$:
                                   3759 ;src/main.c:234: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DDB 78                    3760 	ld	a, b
      000DDC B1                    3761 	or	a, c
      000DDD 28 14                 3762 	jr	Z, 00114$
      000DDF 7A                    3763 	ld	a, d
      000DE0 B3                    3764 	or	a, e
      000DE1 20 10                 3765 	jr	NZ, 00114$
      000DE3 F8 01                 3766 	ldhl	sp,	#1
      000DE5 3A                    3767 	ld	a, (hl-)
      000DE6 B6                    3768 	or	a, (hl)
      000DE7 20 0A                 3769 	jr	NZ, 00114$
                                   3770 ;src/main.c:235: xDir = 0;
      000DE9 21rA7r00              3771 	ld	hl, #_xDir
      000DEC 36 00                 3772 	ld	(hl), #0x00
                                   3773 ;src/main.c:236: yDir = 1;
      000DEE 21rA8r00              3774 	ld	hl, #_yDir
      000DF1 36 01                 3775 	ld	(hl), #0x01
      000DF3                       3776 00114$:
                                   3777 ;src/main.c:240: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000DF3 F8 03                 3778 	ldhl	sp,	#3
      000DF5 3A                    3779 	ld	a, (hl-)
      000DF6 B6                    3780 	or	a, (hl)
      000DF7 28 0F                 3781 	jr	Z, 00118$
      000DF9 2B                    3782 	dec	hl
      000DFA 3A                    3783 	ld	a, (hl-)
      000DFB B6                    3784 	or	a, (hl)
      000DFC 28 0A                 3785 	jr	Z, 00118$
                                   3786 ;src/main.c:241: xDir = 1;
      000DFE 21rA7r00              3787 	ld	hl, #_xDir
      000E01 36 01                 3788 	ld	(hl), #0x01
                                   3789 ;src/main.c:242: yDir = -1;
      000E03 21rA8r00              3790 	ld	hl, #_yDir
      000E06 36 FF                 3791 	ld	(hl), #0xff
      000E08                       3792 00118$:
                                   3793 ;src/main.c:244: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000E08 F8 03                 3794 	ldhl	sp,	#3
      000E0A 3A                    3795 	ld	a, (hl-)
      000E0B B6                    3796 	or	a, (hl)
      000E0C 28 0E                 3797 	jr	Z, 00121$
      000E0E 7A                    3798 	ld	a, d
      000E0F B3                    3799 	or	a, e
      000E10 28 0A                 3800 	jr	Z, 00121$
                                   3801 ;src/main.c:245: xDir = -1;
      000E12 21rA7r00              3802 	ld	hl, #_xDir
      000E15 36 FF                 3803 	ld	(hl), #0xff
                                   3804 ;src/main.c:246: yDir = -1;
      000E17 21rA8r00              3805 	ld	hl, #_yDir
      000E1A 36 FF                 3806 	ld	(hl), #0xff
      000E1C                       3807 00121$:
                                   3808 ;src/main.c:248: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000E1C 78                    3809 	ld	a, b
      000E1D B1                    3810 	or	a, c
      000E1E 28 10                 3811 	jr	Z, 00124$
      000E20 F8 01                 3812 	ldhl	sp,	#1
      000E22 3A                    3813 	ld	a, (hl-)
      000E23 B6                    3814 	or	a, (hl)
      000E24 28 0A                 3815 	jr	Z, 00124$
                                   3816 ;src/main.c:249: xDir = 1;
      000E26 21rA7r00              3817 	ld	hl, #_xDir
      000E29 36 01                 3818 	ld	(hl), #0x01
                                   3819 ;src/main.c:250: yDir = 1;
      000E2B 21rA8r00              3820 	ld	hl, #_yDir
      000E2E 36 01                 3821 	ld	(hl), #0x01
      000E30                       3822 00124$:
                                   3823 ;src/main.c:252: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000E30 78                    3824 	ld	a, b
      000E31 B1                    3825 	or	a, c
      000E32 28 0E                 3826 	jr	Z, 00127$
      000E34 7A                    3827 	ld	a, d
      000E35 B3                    3828 	or	a, e
      000E36 28 0A                 3829 	jr	Z, 00127$
                                   3830 ;src/main.c:253: xDir = -1;
      000E38 21rA7r00              3831 	ld	hl, #_xDir
      000E3B 36 FF                 3832 	ld	(hl), #0xff
                                   3833 ;src/main.c:254: yDir = 1;
      000E3D 21rA8r00              3834 	ld	hl, #_yDir
      000E40 36 01                 3835 	ld	(hl), #0x01
      000E42                       3836 00127$:
                                   3837 ;src/main.c:259: if (xDir == 0 && yDir == 0) {
      000E42 FArA7r00              3838 	ld	a, (#_xDir)
      000E45 B7                    3839 	or	a, a
      000E46 20 07                 3840 	jr	NZ, 00130$
      000E48 FArA8r00              3841 	ld	a, (#_yDir)
      000E4B B7                    3842 	or	a, a
                                   3843 ;src/main.c:260: return;
      000E4C CAr93r0F              3844 	jp	Z,00194$
      000E4F                       3845 00130$:
                                   3846 ;src/main.c:292: if (auxTick == 0) {
      000E4F FArD3r00              3847 	ld	a, (#_auxTick)
      000E52 B7                    3848 	or	a, a
      000E53 C2r93r0F              3849 	jp	NZ, 00194$
                                   3850 ;src/main.c:293: if (xDir == 0 && yDir > 0) {
      000E56 21rA8r00              3851 	ld	hl, #_yDir
      000E59 5E                    3852 	ld	e, (hl)
      000E5A AF                    3853 	xor	a, a
      000E5B 57                    3854 	ld	d, a
      000E5C 96                    3855 	sub	a, (hl)
      000E5D CB 7B                 3856 	bit	7, e
      000E5F 28 07                 3857 	jr	Z, 00381$
      000E61 CB 7A                 3858 	bit	7, d
      000E63 20 08                 3859 	jr	NZ, 00382$
      000E65 BF                    3860 	cp	a, a
      000E66 18 05                 3861 	jr	00382$
      000E68                       3862 00381$:
      000E68 CB 7A                 3863 	bit	7, d
      000E6A 28 01                 3864 	jr	Z, 00382$
      000E6C 37                    3865 	scf
      000E6D                       3866 00382$:
      000E6D 3E 00                 3867 	ld	a, #0x00
      000E6F 17                    3868 	rla
      000E70 4F                    3869 	ld	c, a
      000E71 FArA7r00              3870 	ld	a, (#_xDir)
      000E74 B7                    3871 	or	a,a
      000E75 20 1A                 3872 	jr	NZ, 00157$
      000E77 B1                    3873 	or	a,c
      000E78 28 17                 3874 	jr	Z, 00157$
                                   3875 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E7A 21r02r00              3876 	ld	hl, #(_shadow_OAM + 2)
      000E7D 36 00                 3877 	ld	(hl), #0x00
      000E7F 21r06r00              3878 	ld	hl, #(_shadow_OAM + 6)
      000E82 36 02                 3879 	ld	(hl), #0x02
                                   3880 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000E84 21r03r00              3881 	ld	hl, #(_shadow_OAM + 3)
      000E87 36 40                 3882 	ld	(hl), #0x40
      000E89 21r07r00              3883 	ld	hl, #(_shadow_OAM + 7)
      000E8C 36 40                 3884 	ld	(hl), #0x40
                                   3885 ;src/main.c:297: set_sprite_prop(1, S_FLIPY); 
      000E8E C3r93r0F              3886 	jp	00194$
      000E91                       3887 00157$:
                                   3888 ;src/main.c:299: else if (xDir == 0 && yDir < 0) {
      000E91 FArA8r00              3889 	ld	a, (#_yDir)
      000E94 07                    3890 	rlca
      000E95 E6 01                 3891 	and	a,#0x01
      000E97 F8 02                 3892 	ldhl	sp,	#2
      000E99 77                    3893 	ld	(hl), a
      000E9A FArA7r00              3894 	ld	a, (#_xDir)
      000E9D B7                    3895 	or	a, a
      000E9E 20 1D                 3896 	jr	NZ, 00153$
      000EA0 F8 02                 3897 	ldhl	sp,	#2
      000EA2 7E                    3898 	ld	a, (hl)
      000EA3 B7                    3899 	or	a, a
      000EA4 28 17                 3900 	jr	Z, 00153$
                                   3901 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000EA6 21r02r00              3902 	ld	hl, #(_shadow_OAM + 2)
      000EA9 36 00                 3903 	ld	(hl), #0x00
      000EAB 21r06r00              3904 	ld	hl, #(_shadow_OAM + 6)
      000EAE 36 02                 3905 	ld	(hl), #0x02
                                   3906 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EB0 21r03r00              3907 	ld	hl, #(_shadow_OAM + 3)
      000EB3 36 00                 3908 	ld	(hl), #0x00
      000EB5 21r07r00              3909 	ld	hl, #(_shadow_OAM + 7)
      000EB8 36 00                 3910 	ld	(hl), #0x00
                                   3911 ;src/main.c:303: set_sprite_prop(1, 0); 
      000EBA C3r93r0F              3912 	jp	00194$
      000EBD                       3913 00153$:
                                   3914 ;src/main.c:305: else if (xDir > 0 && yDir == 0) {
      000EBD 21rA7r00              3915 	ld	hl, #_xDir
      000EC0 5E                    3916 	ld	e, (hl)
      000EC1 AF                    3917 	xor	a, a
      000EC2 57                    3918 	ld	d, a
      000EC3 96                    3919 	sub	a, (hl)
      000EC4 CB 7B                 3920 	bit	7, e
      000EC6 28 07                 3921 	jr	Z, 00383$
      000EC8 CB 7A                 3922 	bit	7, d
      000ECA 20 08                 3923 	jr	NZ, 00384$
      000ECC BF                    3924 	cp	a, a
      000ECD 18 05                 3925 	jr	00384$
      000ECF                       3926 00383$:
      000ECF CB 7A                 3927 	bit	7, d
      000ED1 28 01                 3928 	jr	Z, 00384$
      000ED3 37                    3929 	scf
      000ED4                       3930 00384$:
      000ED4 3E 00                 3931 	ld	a, #0x00
      000ED6 17                    3932 	rla
      000ED7 47                    3933 	ld	b, a
      000ED8 B7                    3934 	or	a, a
      000ED9 28 1D                 3935 	jr	Z, 00149$
      000EDB FArA8r00              3936 	ld	a, (#_yDir)
      000EDE B7                    3937 	or	a, a
      000EDF 20 17                 3938 	jr	NZ, 00149$
                                   3939 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000EE1 21r02r00              3940 	ld	hl, #(_shadow_OAM + 2)
      000EE4 36 04                 3941 	ld	(hl), #0x04
      000EE6 21r06r00              3942 	ld	hl, #(_shadow_OAM + 6)
      000EE9 36 06                 3943 	ld	(hl), #0x06
                                   3944 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EEB 21r03r00              3945 	ld	hl, #(_shadow_OAM + 3)
      000EEE 36 00                 3946 	ld	(hl), #0x00
      000EF0 21r07r00              3947 	ld	hl, #(_shadow_OAM + 7)
      000EF3 36 00                 3948 	ld	(hl), #0x00
                                   3949 ;src/main.c:309: set_sprite_prop(1, 0); 
      000EF5 C3r93r0F              3950 	jp	00194$
      000EF8                       3951 00149$:
                                   3952 ;src/main.c:311: else if (xDir < 0 && yDir == 0) {
      000EF8 FArA7r00              3953 	ld	a, (#_xDir)
      000EFB 07                    3954 	rlca
      000EFC E6 01                 3955 	and	a,#0x01
      000EFE F8 03                 3956 	ldhl	sp,	#3
      000F00 77                    3957 	ld	(hl), a
      000F01 7E                    3958 	ld	a, (hl)
      000F02 B7                    3959 	or	a, a
      000F03 28 1C                 3960 	jr	Z, 00145$
      000F05 FArA8r00              3961 	ld	a, (#_yDir)
      000F08 B7                    3962 	or	a, a
      000F09 20 16                 3963 	jr	NZ, 00145$
                                   3964 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F0B 21r02r00              3965 	ld	hl, #(_shadow_OAM + 2)
      000F0E 36 04                 3966 	ld	(hl), #0x04
      000F10 21r06r00              3967 	ld	hl, #(_shadow_OAM + 6)
      000F13 36 06                 3968 	ld	(hl), #0x06
                                   3969 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F15 21r03r00              3970 	ld	hl, #(_shadow_OAM + 3)
      000F18 36 20                 3971 	ld	(hl), #0x20
      000F1A 21r07r00              3972 	ld	hl, #(_shadow_OAM + 7)
      000F1D 36 20                 3973 	ld	(hl), #0x20
                                   3974 ;src/main.c:315: set_sprite_prop(1, S_FLIPX); 
      000F1F 18 72                 3975 	jr	00194$
      000F21                       3976 00145$:
                                   3977 ;src/main.c:317: else if (xDir > 0 && yDir < 0) {
      000F21 78                    3978 	ld	a, b
      000F22 B7                    3979 	or	a, a
      000F23 28 1C                 3980 	jr	Z, 00141$
      000F25 F8 02                 3981 	ldhl	sp,	#2
      000F27 7E                    3982 	ld	a, (hl)
      000F28 B7                    3983 	or	a, a
      000F29 28 16                 3984 	jr	Z, 00141$
                                   3985 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F2B 21r02r00              3986 	ld	hl, #(_shadow_OAM + 2)
      000F2E 36 08                 3987 	ld	(hl), #0x08
      000F30 21r06r00              3988 	ld	hl, #(_shadow_OAM + 6)
      000F33 36 0A                 3989 	ld	(hl), #0x0a
                                   3990 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F35 21r03r00              3991 	ld	hl, #(_shadow_OAM + 3)
      000F38 36 00                 3992 	ld	(hl), #0x00
      000F3A 21r07r00              3993 	ld	hl, #(_shadow_OAM + 7)
      000F3D 36 00                 3994 	ld	(hl), #0x00
                                   3995 ;src/main.c:321: set_sprite_prop(1, 0); 
      000F3F 18 52                 3996 	jr	00194$
      000F41                       3997 00141$:
                                   3998 ;src/main.c:323: else if (xDir > 0 && yDir > 0) {
      000F41 78                    3999 	ld	a, b
      000F42 B7                    4000 	or	a, a
      000F43 28 1A                 4001 	jr	Z, 00137$
      000F45 79                    4002 	ld	a, c
      000F46 B7                    4003 	or	a, a
      000F47 28 16                 4004 	jr	Z, 00137$
                                   4005 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F49 21r02r00              4006 	ld	hl, #(_shadow_OAM + 2)
      000F4C 36 08                 4007 	ld	(hl), #0x08
      000F4E 21r06r00              4008 	ld	hl, #(_shadow_OAM + 6)
      000F51 36 0A                 4009 	ld	(hl), #0x0a
                                   4010 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F53 21r03r00              4011 	ld	hl, #(_shadow_OAM + 3)
      000F56 36 40                 4012 	ld	(hl), #0x40
      000F58 21r07r00              4013 	ld	hl, #(_shadow_OAM + 7)
      000F5B 36 40                 4014 	ld	(hl), #0x40
                                   4015 ;src/main.c:327: set_sprite_prop(1, S_FLIPY); 
      000F5D 18 34                 4016 	jr	00194$
      000F5F                       4017 00137$:
                                   4018 ;src/main.c:329: else if (xDir < 0 && yDir > 0) {
      000F5F F8 03                 4019 	ldhl	sp,	#3
      000F61 7E                    4020 	ld	a, (hl)
      000F62 B7                    4021 	or	a, a
      000F63 28 1A                 4022 	jr	Z, 00133$
      000F65 79                    4023 	ld	a, c
      000F66 B7                    4024 	or	a, a
      000F67 28 16                 4025 	jr	Z, 00133$
                                   4026 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F69 21r02r00              4027 	ld	hl, #(_shadow_OAM + 2)
      000F6C 36 08                 4028 	ld	(hl), #0x08
      000F6E 21r06r00              4029 	ld	hl, #(_shadow_OAM + 6)
      000F71 36 0A                 4030 	ld	(hl), #0x0a
                                   4031 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F73 21r03r00              4032 	ld	hl, #(_shadow_OAM + 3)
      000F76 36 60                 4033 	ld	(hl), #0x60
      000F78 21r07r00              4034 	ld	hl, #(_shadow_OAM + 7)
      000F7B 36 60                 4035 	ld	(hl), #0x60
                                   4036 ;src/main.c:333: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000F7D 18 14                 4037 	jr	00194$
      000F7F                       4038 00133$:
                                   4039 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F7F 21r02r00              4040 	ld	hl, #(_shadow_OAM + 2)
      000F82 36 08                 4041 	ld	(hl), #0x08
      000F84 21r06r00              4042 	ld	hl, #(_shadow_OAM + 6)
      000F87 36 0A                 4043 	ld	(hl), #0x0a
                                   4044 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F89 21r03r00              4045 	ld	hl, #(_shadow_OAM + 3)
      000F8C 36 20                 4046 	ld	(hl), #0x20
      000F8E 21r07r00              4047 	ld	hl, #(_shadow_OAM + 7)
      000F91 36 20                 4048 	ld	(hl), #0x20
                                   4049 ;src/main.c:339: set_sprite_prop(1, S_FLIPX); 
      000F93                       4050 00194$:
                                   4051 ;src/main.c:344: }
      000F93 E8 04                 4052 	add	sp, #4
      000F95 C9                    4053 	ret
                                   4054 ;src/main.c:378: void playSound(uint8_t type) {
                                   4055 ;	---------------------------------
                                   4056 ; Function playSound
                                   4057 ; ---------------------------------
      000F96                       4058 _playSound::
                                   4059 ;src/main.c:379: if (type == 20) { //singlegun
      000F96 F8 02                 4060 	ldhl	sp,	#2
      000F98 7E                    4061 	ld	a, (hl)
      000F99 D6 14                 4062 	sub	a, #0x14
      000F9B 20 13                 4063 	jr	NZ, 00102$
                                   4064 ;src/main.c:380: NR10_REG = 0x00;
      000F9D AF                    4065 	xor	a, a
      000F9E E0r00                 4066 	ldh	(_NR10_REG + 0), a
                                   4067 ;src/main.c:381: NR11_REG = 0x81;
      000FA0 3E 81                 4068 	ld	a, #0x81
      000FA2 E0r00                 4069 	ldh	(_NR11_REG + 0), a
                                   4070 ;src/main.c:382: NR12_REG = 0x43;
      000FA4 3E 43                 4071 	ld	a, #0x43
      000FA6 E0r00                 4072 	ldh	(_NR12_REG + 0), a
                                   4073 ;src/main.c:383: NR13_REG = 0X00;//0x6D;
      000FA8 AF                    4074 	xor	a, a
      000FA9 E0r00                 4075 	ldh	(_NR13_REG + 0), a
                                   4076 ;src/main.c:384: NR14_REG = 0x86;
      000FAB 3E 86                 4077 	ld	a, #0x86
      000FAD E0r00                 4078 	ldh	(_NR14_REG + 0), a
                                   4079 ;src/main.c:385: return;
      000FAF C9                    4080 	ret
      000FB0                       4081 00102$:
                                   4082 ;src/main.c:387: if (type == 23) {
      000FB0 F8 02                 4083 	ldhl	sp,	#2
      000FB2 7E                    4084 	ld	a, (hl)
      000FB3 D6 17                 4085 	sub	a, #0x17
      000FB5 20 12                 4086 	jr	NZ, 00104$
                                   4087 ;src/main.c:388: NR10_REG = 0x00;
      000FB7 AF                    4088 	xor	a, a
      000FB8 E0r00                 4089 	ldh	(_NR10_REG + 0), a
                                   4090 ;src/main.c:389: NR11_REG = 0x81;
      000FBA 3E 81                 4091 	ld	a, #0x81
      000FBC E0r00                 4092 	ldh	(_NR11_REG + 0), a
                                   4093 ;src/main.c:390: NR12_REG = 0x53;
      000FBE 3E 53                 4094 	ld	a, #0x53
      000FC0 E0r00                 4095 	ldh	(_NR12_REG + 0), a
                                   4096 ;src/main.c:391: NR13_REG = 0X00;//0x6D;
      000FC2 AF                    4097 	xor	a, a
      000FC3 E0r00                 4098 	ldh	(_NR13_REG + 0), a
                                   4099 ;src/main.c:392: NR14_REG = 0x86;
      000FC5 3E 86                 4100 	ld	a, #0x86
      000FC7 E0r00                 4101 	ldh	(_NR14_REG + 0), a
      000FC9                       4102 00104$:
                                   4103 ;src/main.c:394: if (type == 26) {
      000FC9 F8 02                 4104 	ldhl	sp,	#2
      000FCB 7E                    4105 	ld	a, (hl)
      000FCC D6 1A                 4106 	sub	a, #0x1a
      000FCE 20 13                 4107 	jr	NZ, 00106$
                                   4108 ;src/main.c:395: NR10_REG = 0x00;
      000FD0 AF                    4109 	xor	a, a
      000FD1 E0r00                 4110 	ldh	(_NR10_REG + 0), a
                                   4111 ;src/main.c:396: NR11_REG = 0x89;
      000FD3 3E 89                 4112 	ld	a, #0x89
      000FD5 E0r00                 4113 	ldh	(_NR11_REG + 0), a
                                   4114 ;src/main.c:397: NR12_REG = 0x55;
      000FD7 3E 55                 4115 	ld	a, #0x55
      000FD9 E0r00                 4116 	ldh	(_NR12_REG + 0), a
                                   4117 ;src/main.c:398: NR13_REG = 0x70;//0Xbe;//0x6D;
      000FDB 3E 70                 4118 	ld	a, #0x70
      000FDD E0r00                 4119 	ldh	(_NR13_REG + 0), a
                                   4120 ;src/main.c:399: NR14_REG = 0x84;
      000FDF 3E 84                 4121 	ld	a, #0x84
      000FE1 E0r00                 4122 	ldh	(_NR14_REG + 0), a
      000FE3                       4123 00106$:
                                   4124 ;src/main.c:401: if (type == 0) {  // explosion
      000FE3 F8 02                 4125 	ldhl	sp,	#2
      000FE5 7E                    4126 	ld	a, (hl)
      000FE6 B7                    4127 	or	a, a
      000FE7 C0                    4128 	ret	NZ
                                   4129 ;src/main.c:402: NR41_REG = 0x20;  
      000FE8 3E 20                 4130 	ld	a, #0x20
      000FEA E0r00                 4131 	ldh	(_NR41_REG + 0), a
                                   4132 ;src/main.c:403: NR42_REG = 0xa2;//0xa3;  
      000FEC 3E A2                 4133 	ld	a, #0xa2
      000FEE E0r00                 4134 	ldh	(_NR42_REG + 0), a
                                   4135 ;src/main.c:404: NR43_REG = 0x57;  
      000FF0 3E 57                 4136 	ld	a, #0x57
      000FF2 E0r00                 4137 	ldh	(_NR43_REG + 0), a
                                   4138 ;src/main.c:405: NR44_REG = 0x80;  
      000FF4 3E 80                 4139 	ld	a, #0x80
      000FF6 E0r00                 4140 	ldh	(_NR44_REG + 0), a
                                   4141 ;src/main.c:411: }
      000FF8 C9                    4142 	ret
                                   4143 ;src/main.c:413: void initEnemies(uint8_t loadSprites) {
                                   4144 ;	---------------------------------
                                   4145 ; Function initEnemies
                                   4146 ; ---------------------------------
      000FF9                       4147 _initEnemies::
      000FF9 E8 F9                 4148 	add	sp, #-7
                                   4149 ;src/main.c:415: if (loadSprites) {
      000FFB F8 09                 4150 	ldhl	sp,	#9
      000FFD 7E                    4151 	ld	a, (hl)
      000FFE B7                    4152 	or	a, a
      000FFF 28 1A                 4153 	jr	Z, 00102$
                                   4154 ;src/main.c:417: set_sprite_data(0x40, 5, enemy1);
      001001 11r18r05              4155 	ld	de, #_enemy1
      001004 D5                    4156 	push	de
      001005 21 40 05              4157 	ld	hl, #0x540
      001008 E5                    4158 	push	hl
      001009 CDr00r00              4159 	call	_set_sprite_data
      00100C E8 04                 4160 	add	sp, #4
                                   4161 ;src/main.c:418: set_sprite_data(0x50, 8, largeenemies);
      00100E 11r68r05              4162 	ld	de, #_largeenemies
      001011 D5                    4163 	push	de
      001012 21 50 08              4164 	ld	hl, #0x850
      001015 E5                    4165 	push	hl
      001016 CDr00r00              4166 	call	_set_sprite_data
      001019 E8 04                 4167 	add	sp, #4
      00101B                       4168 00102$:
                                   4169 ;src/main.c:421: struct Enemy *eptr = enemies;
      00101B 01r5Ar00              4170 	ld	bc, #_enemies+0
                                   4171 ;src/main.c:423: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00101E F8 06                 4172 	ldhl	sp,	#6
      001020 36 00                 4173 	ld	(hl), #0x00
      001022                       4174 00116$:
      001022 21r8Er0B              4175 	ld	hl, #_ENEMYCOUNT
      001025 5E                    4176 	ld	e, (hl)
      001026 F8 06                 4177 	ldhl	sp,	#6
      001028 7E                    4178 	ld	a, (hl)
      001029 93                    4179 	sub	a, e
      00102A D2r61r11              4180 	jp	NC, 00118$
                                   4181 ;src/main.c:424: if (eptr->alive == 0) {
      00102D 21 09 00              4182 	ld	hl, #0x0009
      001030 09                    4183 	add	hl, bc
      001031 7E                    4184 	ld	a, (hl)
      001032 B7                    4185 	or	a, a
      001033 C2r55r11              4186 	jp	NZ, 00107$
                                   4187 ;src/main.c:426: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001036 C5                    4188 	push	bc
      001037 CDr00r00              4189 	call	_rand
      00103A 7B                    4190 	ld	a, e
      00103B C1                    4191 	pop	bc
      00103C 21r17r05              4192 	ld	hl, #_enemyOptionCount
      00103F 56                    4193 	ld	d, (hl)
      001040 C5                    4194 	push	bc
      001041 D5                    4195 	push	de
      001042 33                    4196 	inc	sp
      001043 F5                    4197 	push	af
      001044 33                    4198 	inc	sp
      001045 CDr00r00              4199 	call	__moduchar
      001048 E1                    4200 	pop	hl
      001049 7B                    4201 	ld	a, e
      00104A C1                    4202 	pop	bc
                                   4203 ;src/main.c:428: (*eptr) = enemyOptions[enemyInd];
      00104B 5F                    4204 	ld	e, a
      00104C 16 00                 4205 	ld	d, #0x00
      00104E 6B                    4206 	ld	l, e
      00104F 62                    4207 	ld	h, d
      001050 29                    4208 	add	hl, hl
      001051 29                    4209 	add	hl, hl
      001052 29                    4210 	add	hl, hl
      001053 19                    4211 	add	hl, de
      001054 29                    4212 	add	hl, hl
      001055 11r00r00              4213 	ld	de, #_enemyOptions
      001058 19                    4214 	add	hl, de
      001059 59                    4215 	ld	e, c
      00105A 50                    4216 	ld	d, b
      00105B C5                    4217 	push	bc
      00105C 01 12 00              4218 	ld	bc, #0x12
      00105F C5                    4219 	push	bc
      001060 E5                    4220 	push	hl
      001061 D5                    4221 	push	de
      001062 CDr00r00              4222 	call	___memcpy
      001065 E8 06                 4223 	add	sp, #6
      001067 CDr00r00              4224 	call	_rand
      00106A 7B                    4225 	ld	a, e
      00106B C1                    4226 	pop	bc
      00106C E6 07                 4227 	and	a, #0x07
      00106E F8 05                 4228 	ldhl	sp,	#5
      001070 77                    4229 	ld	(hl), a
                                   4230 ;src/main.c:431: eptr->x = xSpawnPositions[posIndex];
      001071 11r8Fr0B              4231 	ld	de, #_xSpawnPositions
      001074 6E                    4232 	ld	l, (hl)
      001075 26 00                 4233 	ld	h, #0x00
      001077 19                    4234 	add	hl, de
      001078 5D                    4235 	ld	e, l
      001079 54                    4236 	ld	d, h
      00107A 1A                    4237 	ld	a, (de)
      00107B 5F                    4238 	ld	e, a
      00107C 16 00                 4239 	ld	d, #0x00
      00107E 69                    4240 	ld	l, c
      00107F 60                    4241 	ld	h, b
      001080 7B                    4242 	ld	a, e
      001081 22                    4243 	ld	(hl+), a
      001082 72                    4244 	ld	(hl), d
                                   4245 ;src/main.c:432: eptr->y = ySpawnPositions[posIndex];
      001083 21 02 00              4246 	ld	hl, #0x0002
      001086 09                    4247 	add	hl, bc
      001087 33                    4248 	inc	sp
      001088 33                    4249 	inc	sp
      001089 E5                    4250 	push	hl
      00108A 11r97r0B              4251 	ld	de, #_ySpawnPositions
      00108D F8 05                 4252 	ldhl	sp,	#5
      00108F 6E                    4253 	ld	l, (hl)
      001090 26 00                 4254 	ld	h, #0x00
      001092 19                    4255 	add	hl, de
      001093 5D                    4256 	ld	e, l
      001094 54                    4257 	ld	d, h
      001095 1A                    4258 	ld	a, (de)
      001096 F8 04                 4259 	ldhl	sp,	#4
      001098 22                    4260 	ld	(hl+), a
      001099 AF                    4261 	xor	a, a
      00109A 32                    4262 	ld	(hl-), a
      00109B D1                    4263 	pop	de
      00109C D5                    4264 	push	de
      00109D 2A                    4265 	ld	a, (hl+)
      00109E 12                    4266 	ld	(de), a
      00109F 13                    4267 	inc	de
      0010A0 7E                    4268 	ld	a, (hl)
      0010A1 12                    4269 	ld	(de), a
                                   4270 ;src/main.c:434: if (eptr->spriteCount == 1) {
      0010A2 21 08 00              4271 	ld	hl, #0x0008
      0010A5 09                    4272 	add	hl, bc
      0010A6 7E                    4273 	ld	a, (hl)
      0010A7 F8 05                 4274 	ldhl	sp,	#5
      0010A9 77                    4275 	ld	(hl), a
                                   4276 ;src/main.c:435: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010AA 21 06 00              4277 	ld	hl, #0x0006
      0010AD 09                    4278 	add	hl, bc
      0010AE 5D                    4279 	ld	e, l
      0010AF 54                    4280 	ld	d, h
      0010B0 F8 06                 4281 	ldhl	sp,	#6
      0010B2 6E                    4282 	ld	l, (hl)
                                   4283 ;	spillPairReg hl
                                   4284 ;	spillPairReg hl
      0010B3 1A                    4285 	ld	a, (de)
      0010B4 5F                    4286 	ld	e, a
      0010B5 7D                    4287 	ld	a, l
      0010B6 87                    4288 	add	a, a
      0010B7 F8 02                 4289 	ldhl	sp,	#2
      0010B9 77                    4290 	ld	(hl), a
      0010BA 2A                    4291 	ld	a, (hl+)
      0010BB C6 0A                 4292 	add	a, #0x0a
                                   4293 ;src/main.c:434: if (eptr->spriteCount == 1) {
      0010BD 22                    4294 	ld	(hl+), a
      0010BE 23                    4295 	inc	hl
      0010BF 7E                    4296 	ld	a, (hl)
      0010C0 3D                    4297 	dec	a
      0010C1 20 2D                 4298 	jr	NZ, 00104$
                                   4299 ;src/main.c:435: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010C3 F8 03                 4300 	ldhl	sp,	#3
      0010C5 56                    4301 	ld	d, (hl)
                                   4302 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010C6 6A                    4303 	ld	l, d
                                   4304 ;	spillPairReg hl
                                   4305 ;	spillPairReg hl
      0010C7 26 00                 4306 	ld	h, #0x00
                                   4307 ;	spillPairReg hl
                                   4308 ;	spillPairReg hl
      0010C9 29                    4309 	add	hl, hl
      0010CA 29                    4310 	add	hl, hl
      0010CB D5                    4311 	push	de
      0010CC 11r00r00              4312 	ld	de, #_shadow_OAM
      0010CF 19                    4313 	add	hl, de
      0010D0 23                    4314 	inc	hl
      0010D1 23                    4315 	inc	hl
      0010D2 D1                    4316 	pop	de
      0010D3 73                    4317 	ld	(hl), e
                                   4318 ;src/main.c:436: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010D4 D1                    4319 	pop	de
      0010D5 D5                    4320 	push	de
      0010D6 1A                    4321 	ld	a, (de)
      0010D7 F8 05                 4322 	ldhl	sp,	#5
      0010D9 32                    4323 	ld	(hl-), a
      0010DA 0A                    4324 	ld	a, (bc)
      0010DB 32                    4325 	ld	(hl-), a
                                   4326 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0010DC 6E                    4327 	ld	l, (hl)
                                   4328 ;	spillPairReg hl
                                   4329 ;	spillPairReg hl
      0010DD 26 00                 4330 	ld	h, #0x00
                                   4331 ;	spillPairReg hl
                                   4332 ;	spillPairReg hl
      0010DF 29                    4333 	add	hl, hl
      0010E0 29                    4334 	add	hl, hl
      0010E1 11r00r00              4335 	ld	de, #_shadow_OAM
      0010E4 19                    4336 	add	hl, de
      0010E5 5D                    4337 	ld	e, l
      0010E6 54                    4338 	ld	d, h
                                   4339 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0010E7 F8 05                 4340 	ldhl	sp,	#5
      0010E9 3A                    4341 	ld	a, (hl-)
      0010EA 12                    4342 	ld	(de), a
      0010EB 13                    4343 	inc	de
      0010EC 7E                    4344 	ld	a, (hl)
      0010ED 12                    4345 	ld	(de), a
                                   4346 ;src/main.c:436: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010EE 18 65                 4347 	jr	00107$
      0010F0                       4348 00104$:
                                   4349 ;src/main.c:439: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010F0 F8 03                 4350 	ldhl	sp,	#3
      0010F2 56                    4351 	ld	d, (hl)
                                   4352 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010F3 6A                    4353 	ld	l, d
                                   4354 ;	spillPairReg hl
                                   4355 ;	spillPairReg hl
      0010F4 26 00                 4356 	ld	h, #0x00
                                   4357 ;	spillPairReg hl
                                   4358 ;	spillPairReg hl
      0010F6 29                    4359 	add	hl, hl
      0010F7 29                    4360 	add	hl, hl
      0010F8 D5                    4361 	push	de
      0010F9 11r00r00              4362 	ld	de, #_shadow_OAM
      0010FC 19                    4363 	add	hl, de
      0010FD 23                    4364 	inc	hl
      0010FE 23                    4365 	inc	hl
      0010FF D1                    4366 	pop	de
      001100 73                    4367 	ld	(hl), e
                                   4368 ;src/main.c:440: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001101 D1                    4369 	pop	de
      001102 D5                    4370 	push	de
      001103 1A                    4371 	ld	a, (de)
      001104 F8 04                 4372 	ldhl	sp,	#4
      001106 22                    4373 	ld	(hl+), a
      001107 0A                    4374 	ld	a, (bc)
      001108 32                    4375 	ld	(hl-), a
      001109 2B                    4376 	dec	hl
      00110A 5E                    4377 	ld	e, (hl)
                                   4378 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00110B 26 00                 4379 	ld	h, #0x00
                                   4380 ;	spillPairReg hl
                                   4381 ;	spillPairReg hl
      00110D 6B                    4382 	ld	l, e
      00110E 29                    4383 	add	hl, hl
      00110F 29                    4384 	add	hl, hl
      001110 11r00r00              4385 	ld	de, #_shadow_OAM
      001113 19                    4386 	add	hl, de
      001114 5D                    4387 	ld	e, l
      001115 54                    4388 	ld	d, h
                                   4389 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001116 F8 04                 4390 	ldhl	sp,	#4
      001118 2A                    4391 	ld	a, (hl+)
      001119 12                    4392 	ld	(de), a
      00111A 13                    4393 	inc	de
      00111B 7E                    4394 	ld	a, (hl)
      00111C 12                    4395 	ld	(de), a
                                   4396 ;src/main.c:442: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      00111D 21 07 00              4397 	ld	hl, #0x0007
      001120 09                    4398 	add	hl, bc
      001121 5E                    4399 	ld	e, (hl)
      001122 F8 02                 4400 	ldhl	sp,	#2
      001124 7E                    4401 	ld	a, (hl)
      001125 C6 0B                 4402 	add	a, #0x0b
      001127 F8 05                 4403 	ldhl	sp,	#5
      001129 77                    4404 	ld	(hl), a
      00112A 56                    4405 	ld	d, (hl)
                                   4406 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00112B 6A                    4407 	ld	l, d
                                   4408 ;	spillPairReg hl
                                   4409 ;	spillPairReg hl
      00112C 26 00                 4410 	ld	h, #0x00
                                   4411 ;	spillPairReg hl
                                   4412 ;	spillPairReg hl
      00112E 29                    4413 	add	hl, hl
      00112F 29                    4414 	add	hl, hl
      001130 D5                    4415 	push	de
      001131 11r00r00              4416 	ld	de, #_shadow_OAM
      001134 19                    4417 	add	hl, de
      001135 23                    4418 	inc	hl
      001136 23                    4419 	inc	hl
      001137 D1                    4420 	pop	de
      001138 73                    4421 	ld	(hl), e
                                   4422 ;src/main.c:443: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001139 D1                    4423 	pop	de
      00113A D5                    4424 	push	de
      00113B 1A                    4425 	ld	a, (de)
      00113C F8 04                 4426 	ldhl	sp,	#4
      00113E 32                    4427 	ld	(hl-), a
      00113F 0A                    4428 	ld	a, (bc)
      001140 22                    4429 	ld	(hl+), a
      001141 23                    4430 	inc	hl
      001142 5E                    4431 	ld	e, (hl)
                                   4432 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001143 26 00                 4433 	ld	h, #0x00
                                   4434 ;	spillPairReg hl
                                   4435 ;	spillPairReg hl
      001145 6B                    4436 	ld	l, e
      001146 29                    4437 	add	hl, hl
      001147 29                    4438 	add	hl, hl
      001148 11r00r00              4439 	ld	de, #_shadow_OAM
      00114B 19                    4440 	add	hl, de
      00114C 5D                    4441 	ld	e, l
      00114D 54                    4442 	ld	d, h
                                   4443 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00114E F8 04                 4444 	ldhl	sp,	#4
      001150 3A                    4445 	ld	a, (hl-)
      001151 12                    4446 	ld	(de), a
      001152 13                    4447 	inc	de
      001153 7E                    4448 	ld	a, (hl)
      001154 12                    4449 	ld	(de), a
                                   4450 ;src/main.c:443: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001155                       4451 00107$:
                                   4452 ;src/main.c:448: eptr++;
      001155 21 12 00              4453 	ld	hl, #0x0012
      001158 09                    4454 	add	hl, bc
      001159 4D                    4455 	ld	c, l
      00115A 44                    4456 	ld	b, h
                                   4457 ;src/main.c:423: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00115B F8 06                 4458 	ldhl	sp,	#6
      00115D 34                    4459 	inc	(hl)
      00115E C3r22r10              4460 	jp	00116$
      001161                       4461 00118$:
                                   4462 ;src/main.c:451: }
      001161 E8 07                 4463 	add	sp, #7
      001163 C9                    4464 	ret
                                   4465 ;src/main.c:453: void initEnemy(uint8_t i) {
                                   4466 ;	---------------------------------
                                   4467 ; Function initEnemy
                                   4468 ; ---------------------------------
      001164                       4469 _initEnemy::
      001164 E8 FC                 4470 	add	sp, #-4
                                   4471 ;src/main.c:456: if (enemies[i].alive == 0) {
      001166 F8 06                 4472 	ldhl	sp,	#6
      001168 4E                    4473 	ld	c, (hl)
      001169 06 00                 4474 	ld	b, #0x00
      00116B 69                    4475 	ld	l, c
      00116C 60                    4476 	ld	h, b
      00116D 29                    4477 	add	hl, hl
      00116E 29                    4478 	add	hl, hl
      00116F 29                    4479 	add	hl, hl
      001170 09                    4480 	add	hl, bc
      001171 29                    4481 	add	hl, hl
      001172 01r5Ar00              4482 	ld	bc,#_enemies
      001175 09                    4483 	add	hl,bc
      001176 4D                    4484 	ld	c, l
      001177 44                    4485 	ld	b, h
      001178 21 09 00              4486 	ld	hl, #0x0009
      00117B 09                    4487 	add	hl, bc
      00117C 7E                    4488 	ld	a, (hl)
      00117D B7                    4489 	or	a, a
      00117E C2r45r12              4490 	jp	NZ, 00109$
                                   4491 ;src/main.c:458: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001181 C5                    4492 	push	bc
      001182 CDr00r00              4493 	call	_rand
      001185 7B                    4494 	ld	a, e
      001186 C1                    4495 	pop	bc
      001187 21r17r05              4496 	ld	hl, #_enemyOptionCount
      00118A 56                    4497 	ld	d, (hl)
      00118B C5                    4498 	push	bc
      00118C D5                    4499 	push	de
      00118D 33                    4500 	inc	sp
      00118E F5                    4501 	push	af
      00118F 33                    4502 	inc	sp
      001190 CDr00r00              4503 	call	__moduchar
      001193 E1                    4504 	pop	hl
      001194 C1                    4505 	pop	bc
      001195 F8 03                 4506 	ldhl	sp,	#3
      001197 73                    4507 	ld	(hl), e
                                   4508 ;src/main.c:459: enemies[i] = enemyOptions[enemyInd];
      001198 5E                    4509 	ld	e, (hl)
      001199 16 00                 4510 	ld	d, #0x00
      00119B 6B                    4511 	ld	l, e
      00119C 62                    4512 	ld	h, d
      00119D 29                    4513 	add	hl, hl
      00119E 29                    4514 	add	hl, hl
      00119F 29                    4515 	add	hl, hl
      0011A0 19                    4516 	add	hl, de
      0011A1 29                    4517 	add	hl, hl
      0011A2 11r00r00              4518 	ld	de, #_enemyOptions
      0011A5 19                    4519 	add	hl, de
      0011A6 59                    4520 	ld	e, c
      0011A7 50                    4521 	ld	d, b
      0011A8 C5                    4522 	push	bc
      0011A9 01 12 00              4523 	ld	bc, #0x12
      0011AC C5                    4524 	push	bc
      0011AD E5                    4525 	push	hl
      0011AE D5                    4526 	push	de
      0011AF CDr00r00              4527 	call	___memcpy
      0011B2 E8 06                 4528 	add	sp, #6
      0011B4 CDr00r00              4529 	call	_rand
      0011B7 7B                    4530 	ld	a, e
      0011B8 C1                    4531 	pop	bc
      0011B9 E6 07                 4532 	and	a, #0x07
      0011BB F8 03                 4533 	ldhl	sp,	#3
      0011BD 77                    4534 	ld	(hl), a
                                   4535 ;src/main.c:462: enemies[i].x = xSpawnPositions[posIndex];
      0011BE 11r8Fr0B              4536 	ld	de, #_xSpawnPositions+0
      0011C1 6E                    4537 	ld	l, (hl)
      0011C2 26 00                 4538 	ld	h, #0x00
      0011C4 19                    4539 	add	hl, de
      0011C5 5D                    4540 	ld	e, l
      0011C6 54                    4541 	ld	d, h
      0011C7 1A                    4542 	ld	a, (de)
      0011C8 5F                    4543 	ld	e, a
      0011C9 16 00                 4544 	ld	d, #0x00
      0011CB 69                    4545 	ld	l, c
      0011CC 60                    4546 	ld	h, b
      0011CD 7B                    4547 	ld	a, e
      0011CE 22                    4548 	ld	(hl+), a
      0011CF 72                    4549 	ld	(hl), d
                                   4550 ;src/main.c:463: enemies[i].y = ySpawnPositions[posIndex];
      0011D0 21 02 00              4551 	ld	hl, #0x0002
      0011D3 09                    4552 	add	hl, bc
      0011D4 33                    4553 	inc	sp
      0011D5 33                    4554 	inc	sp
      0011D6 E5                    4555 	push	hl
      0011D7 11r97r0B              4556 	ld	de, #_ySpawnPositions+0
      0011DA F8 03                 4557 	ldhl	sp,	#3
      0011DC 6E                    4558 	ld	l, (hl)
      0011DD 26 00                 4559 	ld	h, #0x00
      0011DF 19                    4560 	add	hl, de
      0011E0 5D                    4561 	ld	e, l
      0011E1 54                    4562 	ld	d, h
      0011E2 1A                    4563 	ld	a, (de)
      0011E3 F8 02                 4564 	ldhl	sp,	#2
      0011E5 22                    4565 	ld	(hl+), a
      0011E6 AF                    4566 	xor	a, a
      0011E7 32                    4567 	ld	(hl-), a
      0011E8 D1                    4568 	pop	de
      0011E9 D5                    4569 	push	de
      0011EA 2A                    4570 	ld	a, (hl+)
      0011EB 12                    4571 	ld	(de), a
      0011EC 13                    4572 	inc	de
      0011ED 7E                    4573 	ld	a, (hl)
      0011EE 12                    4574 	ld	(de), a
                                   4575 ;src/main.c:465: if (enemies[i].spriteCount == 1) {
      0011EF 21 08 00              4576 	ld	hl, #0x0008
      0011F2 09                    4577 	add	hl, bc
      0011F3 7E                    4578 	ld	a, (hl)
      0011F4 F8 02                 4579 	ldhl	sp,	#2
      0011F6 77                    4580 	ld	(hl), a
                                   4581 ;src/main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      0011F7 21 06 00              4582 	ld	hl, #0x0006
      0011FA 09                    4583 	add	hl, bc
      0011FB 5D                    4584 	ld	e, l
      0011FC 54                    4585 	ld	d, h
      0011FD F8 06                 4586 	ldhl	sp,	#6
      0011FF 7E                    4587 	ld	a, (hl)
      001200 F5                    4588 	push	af
      001201 1A                    4589 	ld	a, (de)
      001202 5F                    4590 	ld	e, a
      001203 F1                    4591 	pop	af
      001204 87                    4592 	add	a, a
      001205 F8 03                 4593 	ldhl	sp,	#3
      001207 77                    4594 	ld	(hl), a
      001208 7E                    4595 	ld	a, (hl)
      001209 C6 0A                 4596 	add	a, #0x0a
      00120B 6F                    4597 	ld	l, a
                                   4598 ;	spillPairReg hl
                                   4599 ;	spillPairReg hl
                                   4600 ;src/main.c:465: if (enemies[i].spriteCount == 1) {
      00120C E5                    4601 	push	hl
      00120D F8 04                 4602 	ldhl	sp,	#4
      00120F 7E                    4603 	ld	a, (hl)
      001210 3D                    4604 	dec	a
      001211 E1                    4605 	pop	hl
      001212 20 0D                 4606 	jr	NZ, 00102$
                                   4607 ;src/main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   4608 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
                                   4609 ;	spillPairReg hl
                                   4610 ;	spillPairReg hl
      001214 26 00                 4611 	ld	h, #0x00
                                   4612 ;	spillPairReg hl
                                   4613 ;	spillPairReg hl
      001216 29                    4614 	add	hl, hl
      001217 29                    4615 	add	hl, hl
      001218 01r00r00              4616 	ld	bc, #_shadow_OAM
      00121B 09                    4617 	add	hl, bc
      00121C 23                    4618 	inc	hl
      00121D 23                    4619 	inc	hl
      00121E 73                    4620 	ld	(hl), e
                                   4621 ;src/main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      00121F 18 24                 4622 	jr	00109$
      001221                       4623 00102$:
                                   4624 ;src/main.c:470: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   4625 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001221 55                    4626 	ld	d,l
                                   4627 ;	spillPairReg hl
                                   4628 ;	spillPairReg hl
      001222 26 00                 4629 	ld	h, #0x00
                                   4630 ;	spillPairReg hl
                                   4631 ;	spillPairReg hl
      001224 29                    4632 	add	hl, hl
      001225 29                    4633 	add	hl, hl
      001226 D5                    4634 	push	de
      001227 11r00r00              4635 	ld	de, #_shadow_OAM
      00122A 19                    4636 	add	hl, de
      00122B 23                    4637 	inc	hl
      00122C 23                    4638 	inc	hl
      00122D D1                    4639 	pop	de
      00122E 73                    4640 	ld	(hl), e
                                   4641 ;src/main.c:473: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      00122F 21 07 00              4642 	ld	hl, #0x0007
      001232 09                    4643 	add	hl, bc
      001233 4E                    4644 	ld	c, (hl)
      001234 F8 03                 4645 	ldhl	sp,	#3
      001236 7E                    4646 	ld	a, (hl)
      001237 C6 0B                 4647 	add	a, #0x0b
                                   4648 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001239 6F                    4649 	ld	l, a
      00123A 11r00r00              4650 	ld	de, #_shadow_OAM+0
                                   4651 ;	spillPairReg hl
                                   4652 ;	spillPairReg hl
      00123D 26 00                 4653 	ld	h, #0x00
                                   4654 ;	spillPairReg hl
                                   4655 ;	spillPairReg hl
      00123F 29                    4656 	add	hl, hl
      001240 29                    4657 	add	hl, hl
      001241 19                    4658 	add	hl, de
      001242 23                    4659 	inc	hl
      001243 23                    4660 	inc	hl
      001244 71                    4661 	ld	(hl), c
                                   4662 ;src/main.c:473: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      001245                       4663 00109$:
                                   4664 ;src/main.c:482: }
      001245 E8 04                 4665 	add	sp, #4
      001247 C9                    4666 	ret
                                   4667 ;src/main.c:485: void updateEnemyPositions() {
                                   4668 ;	---------------------------------
                                   4669 ; Function updateEnemyPositions
                                   4670 ; ---------------------------------
      001248                       4671 _updateEnemyPositions::
      001248 E8 F0                 4672 	add	sp, #-16
                                   4673 ;src/main.c:488: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00124A F8 0F                 4674 	ldhl	sp,	#15
      00124C 36 00                 4675 	ld	(hl), #0x00
      00124E                       4676 00197$:
      00124E 21r8Er0B              4677 	ld	hl, #_ENEMYCOUNT
      001251 4E                    4678 	ld	c, (hl)
      001252 F8 0F                 4679 	ldhl	sp,	#15
      001254 7E                    4680 	ld	a, (hl)
      001255 91                    4681 	sub	a, c
      001256 D2r70r18              4682 	jp	NC, 00145$
                                   4683 ;src/main.c:489: if (!enemies[i].alive) {
      001259 4E                    4684 	ld	c, (hl)
      00125A 06 00                 4685 	ld	b, #0x00
      00125C 69                    4686 	ld	l, c
      00125D 60                    4687 	ld	h, b
      00125E 29                    4688 	add	hl, hl
      00125F 29                    4689 	add	hl, hl
      001260 29                    4690 	add	hl, hl
      001261 09                    4691 	add	hl, bc
      001262 29                    4692 	add	hl, hl
                                   4693 ;src/main.c:497: if (enemies[i].x < playerDrawX) {
      001263 01r5Ar00              4694 	ld	bc,#_enemies
      001266 09                    4695 	add	hl,bc
      001267 33                    4696 	inc	sp
      001268 33                    4697 	inc	sp
                                   4698 ;src/main.c:489: if (!enemies[i].alive) {
      001269 5D                    4699 	ld	e, l
      00126A 54                    4700 	ld	d, h
      00126B D5                    4701 	push	de
      00126C 21 09 00              4702 	ld	hl, #0x0009
      00126F 19                    4703 	add	hl, de
      001270 4D                    4704 	ld	c, l
      001271 44                    4705 	ld	b, h
      001272 0A                    4706 	ld	a, (bc)
      001273 B7                    4707 	or	a, a
      001274 CAr6Ar18              4708 	jp	Z, 00144$
                                   4709 ;src/main.c:492: enemies[i].x -= xOverflow;
      001277 D1                    4710 	pop	de
      001278 D5                    4711 	push	de
      001279 1A                    4712 	ld	a, (de)
      00127A 4F                    4713 	ld	c, a
      00127B 13                    4714 	inc	de
      00127C 1A                    4715 	ld	a, (de)
      00127D 47                    4716 	ld	b, a
      00127E 21rB5r00              4717 	ld	hl, #_xOverflow
      001281 2A                    4718 	ld	a, (hl+)
      001282 5F                    4719 	ld	e, a
      001283 56                    4720 	ld	d, (hl)
      001284 79                    4721 	ld	a, c
      001285 93                    4722 	sub	a, e
      001286 5F                    4723 	ld	e, a
      001287 78                    4724 	ld	a, b
      001288 9A                    4725 	sbc	a, d
      001289 F8 0E                 4726 	ldhl	sp,	#14
      00128B 32                    4727 	ld	(hl-), a
      00128C 73                    4728 	ld	(hl), e
      00128D D1                    4729 	pop	de
      00128E D5                    4730 	push	de
      00128F 2A                    4731 	ld	a, (hl+)
      001290 12                    4732 	ld	(de), a
      001291 13                    4733 	inc	de
      001292 7E                    4734 	ld	a, (hl)
      001293 12                    4735 	ld	(de), a
                                   4736 ;src/main.c:493: enemies[i].y -= yOverflow;
      001294 D1                    4737 	pop	de
      001295 D5                    4738 	push	de
      001296 21 02 00              4739 	ld	hl, #0x0002
      001299 19                    4740 	add	hl, de
      00129A E5                    4741 	push	hl
      00129B 7D                    4742 	ld	a, l
      00129C F8 04                 4743 	ldhl	sp,	#4
      00129E 77                    4744 	ld	(hl), a
      00129F E1                    4745 	pop	hl
      0012A0 7C                    4746 	ld	a, h
      0012A1 F8 03                 4747 	ldhl	sp,	#3
      0012A3 32                    4748 	ld	(hl-), a
      0012A4 2A                    4749 	ld	a, (hl+)
      0012A5 5F                    4750 	ld	e, a
      0012A6 56                    4751 	ld	d, (hl)
      0012A7 1A                    4752 	ld	a, (de)
      0012A8 4F                    4753 	ld	c, a
      0012A9 13                    4754 	inc	de
      0012AA 1A                    4755 	ld	a, (de)
      0012AB 47                    4756 	ld	b, a
      0012AC 79                    4757 	ld	a, c
      0012AD 21rB7r00              4758 	ld	hl, #_yOverflow
      0012B0 96                    4759 	sub	a, (hl)
      0012B1 23                    4760 	inc	hl
      0012B2 4F                    4761 	ld	c, a
      0012B3 78                    4762 	ld	a, b
      0012B4 9E                    4763 	sbc	a, (hl)
      0012B5 47                    4764 	ld	b, a
      0012B6 F8 02                 4765 	ldhl	sp,	#2
      0012B8 2A                    4766 	ld	a,	(hl+)
      0012B9 66                    4767 	ld	h, (hl)
      0012BA 6F                    4768 	ld	l, a
      0012BB 79                    4769 	ld	a, c
      0012BC 22                    4770 	ld	(hl+), a
      0012BD 70                    4771 	ld	(hl), b
                                   4772 ;src/main.c:496: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012BE F8 0D                 4773 	ldhl	sp,	#13
      0012C0 7E                    4774 	ld	a, (hl)
      0012C1 21rAFr00              4775 	ld	hl, #_playerDrawX
      0012C4 4E                    4776 	ld	c, (hl)
      0012C5 91                    4777 	sub	a, c
      0012C6 4F                    4778 	ld	c, a
                                   4779 ;src/main.c:368: if (value >= 0) return value;
      0012C7 CB 79                 4780 	bit	7, c
      0012C9 20 03                 4781 	jr	NZ, 00170$
      0012CB 41                    4782 	ld	b, c
      0012CC 18 03                 4783 	jr	00172$
      0012CE                       4784 00170$:
                                   4785 ;src/main.c:369: else return - value;
      0012CE AF                    4786 	xor	a, a
      0012CF 91                    4787 	sub	a, c
      0012D0 47                    4788 	ld	b, a
                                   4789 ;src/main.c:496: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012D1                       4790 00172$:
                                   4791 ;src/main.c:511: enemies[i].ySpeed += enemies[i].accel;
      0012D1 D1                    4792 	pop	de
      0012D2 D5                    4793 	push	de
      0012D3 21 0D 00              4794 	ld	hl, #0x000d
      0012D6 19                    4795 	add	hl, de
      0012D7 E5                    4796 	push	hl
      0012D8 7D                    4797 	ld	a, l
      0012D9 F8 08                 4798 	ldhl	sp,	#8
      0012DB 77                    4799 	ld	(hl), a
      0012DC E1                    4800 	pop	hl
      0012DD 7C                    4801 	ld	a, h
      0012DE F8 07                 4802 	ldhl	sp,	#7
      0012E0 77                    4803 	ld	(hl), a
                                   4804 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      0012E1 D1                    4805 	pop	de
      0012E2 D5                    4806 	push	de
      0012E3 21 0E 00              4807 	ld	hl, #0x000e
      0012E6 19                    4808 	add	hl, de
      0012E7 E5                    4809 	push	hl
      0012E8 7D                    4810 	ld	a, l
      0012E9 F8 06                 4811 	ldhl	sp,	#6
      0012EB 77                    4812 	ld	(hl), a
      0012EC E1                    4813 	pop	hl
      0012ED 7C                    4814 	ld	a, h
      0012EE F8 05                 4815 	ldhl	sp,	#5
                                   4816 ;src/main.c:505: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      0012F0 32                    4817 	ld	(hl-), a
      0012F1 2A                    4818 	ld	a, (hl+)
      0012F2 5F                    4819 	ld	e, a
      0012F3 56                    4820 	ld	d, (hl)
      0012F4 1A                    4821 	ld	a, (de)
      0012F5 4F                    4822 	ld	c, a
                                   4823 ;src/main.c:496: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012F6 58                    4824 	ld	e, b
      0012F7 3E 08                 4825 	ld	a,#0x08
      0012F9 57                    4826 	ld	d,a
      0012FA 90                    4827 	sub	a, b
      0012FB CB 7B                 4828 	bit	7, e
      0012FD 28 07                 4829 	jr	Z, 00399$
      0012FF CB 7A                 4830 	bit	7, d
      001301 20 08                 4831 	jr	NZ, 00400$
      001303 BF                    4832 	cp	a, a
      001304 18 05                 4833 	jr	00400$
      001306                       4834 00399$:
      001306 CB 7A                 4835 	bit	7, d
      001308 28 01                 4836 	jr	Z, 00400$
      00130A 37                    4837 	scf
      00130B                       4838 00400$:
      00130B 30 4E                 4839 	jr	NC, 00111$
                                   4840 ;src/main.c:497: if (enemies[i].x < playerDrawX) {
      00130D D1                    4841 	pop	de
      00130E D5                    4842 	push	de
      00130F 1A                    4843 	ld	a, (de)
      001310 F8 0B                 4844 	ldhl	sp,	#11
      001312 22                    4845 	ld	(hl+), a
      001313 13                    4846 	inc	de
      001314 1A                    4847 	ld	a, (de)
      001315 77                    4848 	ld	(hl), a
      001316 FArAFr00              4849 	ld	a, (#_playerDrawX)
      001319 F8 0D                 4850 	ldhl	sp,	#13
      00131B 22                    4851 	ld	(hl+), a
      00131C 36 00                 4852 	ld	(hl), #0x00
                                   4853 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      00131E F8 06                 4854 	ldhl	sp,#6
      001320 2A                    4855 	ld	a, (hl+)
      001321 5F                    4856 	ld	e, a
      001322 56                    4857 	ld	d, (hl)
      001323 1A                    4858 	ld	a, (de)
      001324 47                    4859 	ld	b, a
                                   4860 ;src/main.c:497: if (enemies[i].x < playerDrawX) {
      001325 F8 0B                 4861 	ldhl	sp,	#11
      001327 5D                    4862 	ld	e, l
      001328 54                    4863 	ld	d, h
      001329 F8 0D                 4864 	ldhl	sp,	#13
      00132B 1A                    4865 	ld	a, (de)
      00132C 13                    4866 	inc	de
      00132D 96                    4867 	sub	a, (hl)
      00132E 23                    4868 	inc	hl
      00132F 1A                    4869 	ld	a, (de)
      001330 9E                    4870 	sbc	a, (hl)
      001331 1A                    4871 	ld	a, (de)
      001332 57                    4872 	ld	d, a
      001333 CB 7E                 4873 	bit	7, (hl)
      001335 28 07                 4874 	jr	Z, 00401$
      001337 CB 7A                 4875 	bit	7, d
      001339 20 08                 4876 	jr	NZ, 00402$
      00133B BF                    4877 	cp	a, a
      00133C 18 05                 4878 	jr	00402$
      00133E                       4879 00401$:
      00133E CB 7A                 4880 	bit	7, d
      001340 28 01                 4881 	jr	Z, 00402$
      001342 37                    4882 	scf
      001343                       4883 00402$:
      001343 30 0B                 4884 	jr	NC, 00104$
                                   4885 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      001345 79                    4886 	ld	a, c
      001346 80                    4887 	add	a, b
      001347 4F                    4888 	ld	c, a
      001348 F8 04                 4889 	ldhl	sp,	#4
      00134A 2A                    4890 	ld	a,	(hl+)
      00134B 66                    4891 	ld	h, (hl)
      00134C 6F                    4892 	ld	l, a
      00134D 71                    4893 	ld	(hl), c
      00134E 18 38                 4894 	jr	00112$
      001350                       4895 00104$:
                                   4896 ;src/main.c:501: enemies[i].xSpeed -= enemies[i].accel;
      001350 79                    4897 	ld	a, c
      001351 90                    4898 	sub	a, b
      001352 4F                    4899 	ld	c, a
      001353 F8 04                 4900 	ldhl	sp,	#4
      001355 2A                    4901 	ld	a,	(hl+)
      001356 66                    4902 	ld	h, (hl)
      001357 6F                    4903 	ld	l, a
      001358 71                    4904 	ld	(hl), c
      001359 18 2D                 4905 	jr	00112$
      00135B                       4906 00111$:
                                   4907 ;src/main.c:505: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      00135B 59                    4908 	ld	e, c
      00135C AF                    4909 	xor	a, a
      00135D 57                    4910 	ld	d, a
      00135E 91                    4911 	sub	a, c
      00135F CB 7B                 4912 	bit	7, e
      001361 28 07                 4913 	jr	Z, 00403$
      001363 CB 7A                 4914 	bit	7, d
      001365 20 08                 4915 	jr	NZ, 00404$
      001367 BF                    4916 	cp	a, a
      001368 18 05                 4917 	jr	00404$
      00136A                       4918 00403$:
      00136A CB 7A                 4919 	bit	7, d
      00136C 28 01                 4920 	jr	Z, 00404$
      00136E 37                    4921 	scf
      00136F                       4922 00404$:
      00136F 30 07                 4923 	jr	NC, 00107$
      001371 0D                    4924 	dec	c
      001372 F8 04                 4925 	ldhl	sp,	#4
      001374 2A                    4926 	ld	a,	(hl+)
      001375 66                    4927 	ld	h, (hl)
      001376 6F                    4928 	ld	l, a
      001377 71                    4929 	ld	(hl), c
      001378                       4930 00107$:
      001378 F8 04                 4931 	ldhl	sp,#4
      00137A 2A                    4932 	ld	a, (hl+)
      00137B 5F                    4933 	ld	e, a
      00137C 56                    4934 	ld	d, (hl)
      00137D 1A                    4935 	ld	a, (de)
      00137E 4F                    4936 	ld	c, a
                                   4937 ;src/main.c:506: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      00137F CB 79                 4938 	bit	7, c
      001381 28 05                 4939 	jr	Z, 00112$
      001383 0C                    4940 	inc	c
      001384 3A                    4941 	ld	a, (hl-)
      001385 6E                    4942 	ld	l, (hl)
      001386 67                    4943 	ld	h, a
      001387 71                    4944 	ld	(hl), c
      001388                       4945 00112$:
                                   4946 ;src/main.c:509: if (abs(enemies[i].y - playerDrawY) > 8) {
      001388 F8 02                 4947 	ldhl	sp,#2
      00138A 2A                    4948 	ld	a, (hl+)
      00138B 5F                    4949 	ld	e, a
      00138C 56                    4950 	ld	d, (hl)
      00138D 1A                    4951 	ld	a, (de)
      00138E 4F                    4952 	ld	c, a
      00138F 13                    4953 	inc	de
      001390 1A                    4954 	ld	a, (de)
      001391 47                    4955 	ld	b, a
      001392 79                    4956 	ld	a, c
      001393 21rB0r00              4957 	ld	hl, #_playerDrawY
      001396 5E                    4958 	ld	e, (hl)
      001397 93                    4959 	sub	a, e
      001398 6F                    4960 	ld	l, a
                                   4961 ;	spillPairReg hl
                                   4962 ;	spillPairReg hl
                                   4963 ;src/main.c:368: if (value >= 0) return value;
      001399 CB 7D                 4964 	bit	7, l
      00139B 20 06                 4965 	jr	NZ, 00174$
      00139D 7D                    4966 	ld	a, l
      00139E F8 0E                 4967 	ldhl	sp,	#14
      0013A0 77                    4968 	ld	(hl), a
      0013A1 18 06                 4969 	jr	00176$
      0013A3                       4970 00174$:
                                   4971 ;src/main.c:369: else return - value;
      0013A3 AF                    4972 	xor	a, a
      0013A4 95                    4973 	sub	a, l
      0013A5 5F                    4974 	ld	e, a
      0013A6 F8 0E                 4975 	ldhl	sp,	#14
      0013A8 73                    4976 	ld	(hl), e
                                   4977 ;src/main.c:509: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013A9                       4978 00176$:
                                   4979 ;src/main.c:511: enemies[i].ySpeed += enemies[i].accel;
      0013A9 D1                    4980 	pop	de
      0013AA D5                    4981 	push	de
      0013AB 21 0F 00              4982 	ld	hl, #0x000f
      0013AE 19                    4983 	add	hl, de
      0013AF E5                    4984 	push	hl
      0013B0 7D                    4985 	ld	a, l
      0013B1 F8 0A                 4986 	ldhl	sp,	#10
      0013B3 77                    4987 	ld	(hl), a
      0013B4 E1                    4988 	pop	hl
      0013B5 7C                    4989 	ld	a, h
      0013B6 F8 09                 4990 	ldhl	sp,	#9
                                   4991 ;src/main.c:518: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      0013B8 32                    4992 	ld	(hl-), a
      0013B9 2A                    4993 	ld	a, (hl+)
      0013BA 5F                    4994 	ld	e, a
      0013BB 2A                    4995 	ld	a, (hl+)
      0013BC 23                    4996 	inc	hl
      0013BD 57                    4997 	ld	d, a
      0013BE 1A                    4998 	ld	a, (de)
      0013BF 77                    4999 	ld	(hl), a
                                   5000 ;src/main.c:509: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013C0 F8 0E                 5001 	ldhl	sp,	#14
      0013C2 5E                    5002 	ld	e, (hl)
      0013C3 3E 08                 5003 	ld	a,#0x08
      0013C5 57                    5004 	ld	d,a
      0013C6 96                    5005 	sub	a, (hl)
      0013C7 CB 7B                 5006 	bit	7, e
      0013C9 28 07                 5007 	jr	Z, 00405$
      0013CB CB 7A                 5008 	bit	7, d
      0013CD 20 08                 5009 	jr	NZ, 00406$
      0013CF BF                    5010 	cp	a, a
      0013D0 18 05                 5011 	jr	00406$
      0013D2                       5012 00405$:
      0013D2 CB 7A                 5013 	bit	7, d
      0013D4 28 01                 5014 	jr	Z, 00406$
      0013D6 37                    5015 	scf
      0013D7                       5016 00406$:
      0013D7 30 49                 5017 	jr	NC, 00121$
                                   5018 ;src/main.c:510: if (enemies[i].y < playerDrawY) {
      0013D9 FArB0r00              5019 	ld	a, (#_playerDrawY)
      0013DC F8 0C                 5020 	ldhl	sp,	#12
      0013DE 22                    5021 	ld	(hl+), a
      0013DF 36 00                 5022 	ld	(hl), #0x00
                                   5023 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      0013E1 F8 06                 5024 	ldhl	sp,#6
      0013E3 2A                    5025 	ld	a, (hl+)
      0013E4 5F                    5026 	ld	e, a
      0013E5 56                    5027 	ld	d, (hl)
      0013E6 1A                    5028 	ld	a, (de)
      0013E7 F8 0E                 5029 	ldhl	sp,	#14
                                   5030 ;src/main.c:510: if (enemies[i].y < playerDrawY) {
      0013E9 32                    5031 	ld	(hl-), a
      0013EA 2B                    5032 	dec	hl
      0013EB 79                    5033 	ld	a, c
      0013EC 96                    5034 	sub	a, (hl)
      0013ED 23                    5035 	inc	hl
      0013EE 78                    5036 	ld	a, b
      0013EF 9E                    5037 	sbc	a, (hl)
      0013F0 78                    5038 	ld	a, b
      0013F1 57                    5039 	ld	d, a
      0013F2 CB 7E                 5040 	bit	7, (hl)
      0013F4 28 07                 5041 	jr	Z, 00407$
      0013F6 CB 7A                 5042 	bit	7, d
      0013F8 20 08                 5043 	jr	NZ, 00408$
      0013FA BF                    5044 	cp	a, a
      0013FB 18 05                 5045 	jr	00408$
      0013FD                       5046 00407$:
      0013FD CB 7A                 5047 	bit	7, d
      0013FF 28 01                 5048 	jr	Z, 00408$
      001401 37                    5049 	scf
      001402                       5050 00408$:
      001402 30 0F                 5051 	jr	NC, 00114$
                                   5052 ;src/main.c:511: enemies[i].ySpeed += enemies[i].accel;
      001404 F8 0B                 5053 	ldhl	sp,	#11
      001406 7E                    5054 	ld	a, (hl)
      001407 F8 0E                 5055 	ldhl	sp,	#14
      001409 86                    5056 	add	a, (hl)
      00140A 4F                    5057 	ld	c, a
      00140B F8 08                 5058 	ldhl	sp,	#8
      00140D 2A                    5059 	ld	a,	(hl+)
      00140E 66                    5060 	ld	h, (hl)
      00140F 6F                    5061 	ld	l, a
      001410 71                    5062 	ld	(hl), c
      001411 18 41                 5063 	jr	00122$
      001413                       5064 00114$:
                                   5065 ;src/main.c:514: enemies[i].ySpeed -= enemies[i].accel;
      001413 F8 0B                 5066 	ldhl	sp,	#11
      001415 7E                    5067 	ld	a, (hl)
      001416 F8 0E                 5068 	ldhl	sp,	#14
      001418 96                    5069 	sub	a, (hl)
      001419 4F                    5070 	ld	c, a
      00141A F8 08                 5071 	ldhl	sp,	#8
      00141C 2A                    5072 	ld	a,	(hl+)
      00141D 66                    5073 	ld	h, (hl)
      00141E 6F                    5074 	ld	l, a
      00141F 71                    5075 	ld	(hl), c
      001420 18 32                 5076 	jr	00122$
      001422                       5077 00121$:
                                   5078 ;src/main.c:518: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001422 F8 0B                 5079 	ldhl	sp,	#11
      001424 5E                    5080 	ld	e, (hl)
      001425 AF                    5081 	xor	a, a
      001426 57                    5082 	ld	d, a
      001427 96                    5083 	sub	a, (hl)
      001428 CB 7B                 5084 	bit	7, e
      00142A 28 07                 5085 	jr	Z, 00409$
      00142C CB 7A                 5086 	bit	7, d
      00142E 20 08                 5087 	jr	NZ, 00410$
      001430 BF                    5088 	cp	a, a
      001431 18 05                 5089 	jr	00410$
      001433                       5090 00409$:
      001433 CB 7A                 5091 	bit	7, d
      001435 28 01                 5092 	jr	Z, 00410$
      001437 37                    5093 	scf
      001438                       5094 00410$:
      001438 30 0A                 5095 	jr	NC, 00117$
      00143A F8 0B                 5096 	ldhl	sp,	#11
      00143C 4E                    5097 	ld	c, (hl)
      00143D 0D                    5098 	dec	c
      00143E F8 08                 5099 	ldhl	sp,	#8
      001440 2A                    5100 	ld	a,	(hl+)
      001441 66                    5101 	ld	h, (hl)
      001442 6F                    5102 	ld	l, a
      001443 71                    5103 	ld	(hl), c
      001444                       5104 00117$:
      001444 F8 08                 5105 	ldhl	sp,#8
      001446 2A                    5106 	ld	a, (hl+)
      001447 5F                    5107 	ld	e, a
      001448 56                    5108 	ld	d, (hl)
      001449 1A                    5109 	ld	a, (de)
      00144A 4F                    5110 	ld	c, a
                                   5111 ;src/main.c:519: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      00144B CB 79                 5112 	bit	7, c
      00144D 28 05                 5113 	jr	Z, 00122$
      00144F 0C                    5114 	inc	c
      001450 3A                    5115 	ld	a, (hl-)
      001451 6E                    5116 	ld	l, (hl)
      001452 67                    5117 	ld	h, a
      001453 71                    5118 	ld	(hl), c
      001454                       5119 00122$:
                                   5120 ;src/main.c:523: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001454 D1                    5121 	pop	de
      001455 D5                    5122 	push	de
      001456 21 0C 00              5123 	ld	hl, #0x000c
      001459 19                    5124 	add	hl, de
      00145A E5                    5125 	push	hl
      00145B 7D                    5126 	ld	a, l
      00145C F8 0C                 5127 	ldhl	sp,	#12
      00145E 77                    5128 	ld	(hl), a
      00145F E1                    5129 	pop	hl
      001460 7C                    5130 	ld	a, h
      001461 F8 0B                 5131 	ldhl	sp,	#11
      001463 32                    5132 	ld	(hl-), a
      001464 2A                    5133 	ld	a, (hl+)
      001465 5F                    5134 	ld	e, a
      001466 2A                    5135 	ld	a, (hl+)
      001467 57                    5136 	ld	d, a
      001468 1A                    5137 	ld	a, (de)
      001469 4F                    5138 	ld	c, a
      00146A 22                    5139 	ld	(hl+), a
      00146B AF                    5140 	xor	a, a
      00146C 91                    5141 	sub	a, c
      00146D 77                    5142 	ld	(hl), a
      00146E F8 04                 5143 	ldhl	sp,#4
      001470 2A                    5144 	ld	a, (hl+)
      001471 5F                    5145 	ld	e, a
      001472 56                    5146 	ld	d, (hl)
      001473 1A                    5147 	ld	a, (de)
      001474 F8 0E                 5148 	ldhl	sp,	#14
                                   5149 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      001476 32                    5150 	ld	(hl-), a
      001477 2A                    5151 	ld	a, (hl+)
      001478 5F                    5152 	ld	e, a
      001479 56                    5153 	ld	d, (hl)
      00147A 3A                    5154 	ld	a, (hl-)
      00147B 96                    5155 	sub	a, (hl)
      00147C CB 7B                 5156 	bit	7, e
      00147E 28 07                 5157 	jr	Z, 00411$
      001480 CB 7A                 5158 	bit	7, d
      001482 20 08                 5159 	jr	NZ, 00412$
      001484 BF                    5160 	cp	a, a
      001485 18 05                 5161 	jr	00412$
      001487                       5162 00411$:
      001487 CB 7A                 5163 	bit	7, d
      001489 28 01                 5164 	jr	Z, 00412$
      00148B 37                    5165 	scf
      00148C                       5166 00412$:
      00148C 30 06                 5167 	jr	NC, 00200$
      00148E F8 0D                 5168 	ldhl	sp,	#13
      001490 2A                    5169 	ld	a, (hl+)
      001491 77                    5170 	ld	(hl), a
      001492 18 26                 5171 	jr	00201$
      001494                       5172 00200$:
      001494 F8 0E                 5173 	ldhl	sp,	#14
      001496 3A                    5174 	ld	a, (hl-)
      001497 2B                    5175 	dec	hl
      001498 5F                    5176 	ld	e, a
      001499 56                    5177 	ld	d, (hl)
      00149A 2A                    5178 	ld	a, (hl+)
      00149B 23                    5179 	inc	hl
      00149C 96                    5180 	sub	a, (hl)
      00149D CB 7B                 5181 	bit	7, e
      00149F 28 07                 5182 	jr	Z, 00413$
      0014A1 CB 7A                 5183 	bit	7, d
      0014A3 20 08                 5184 	jr	NZ, 00414$
      0014A5 BF                    5185 	cp	a, a
      0014A6 18 05                 5186 	jr	00414$
      0014A8                       5187 00413$:
      0014A8 CB 7A                 5188 	bit	7, d
      0014AA 28 01                 5189 	jr	Z, 00414$
      0014AC 37                    5190 	scf
      0014AD                       5191 00414$:
      0014AD 30 05                 5192 	jr	NC, 00202$
      0014AF F8 0C                 5193 	ldhl	sp,	#12
      0014B1 5E                    5194 	ld	e, (hl)
      0014B2 18 03                 5195 	jr	00203$
      0014B4                       5196 00202$:
      0014B4 F8 0E                 5197 	ldhl	sp,	#14
      0014B6 5E                    5198 	ld	e, (hl)
      0014B7                       5199 00203$:
      0014B7 F8 0E                 5200 	ldhl	sp,	#14
      0014B9 73                    5201 	ld	(hl), e
      0014BA                       5202 00201$:
      0014BA F8 0E                 5203 	ldhl	sp,	#14
      0014BC 4E                    5204 	ld	c, (hl)
                                   5205 ;src/main.c:523: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0014BD F8 04                 5206 	ldhl	sp,	#4
      0014BF 2A                    5207 	ld	a,	(hl+)
      0014C0 66                    5208 	ld	h, (hl)
      0014C1 6F                    5209 	ld	l, a
      0014C2 71                    5210 	ld	(hl), c
                                   5211 ;src/main.c:524: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0014C3 F8 0A                 5212 	ldhl	sp,#10
      0014C5 2A                    5213 	ld	a, (hl+)
      0014C6 5F                    5214 	ld	e, a
      0014C7 3A                    5215 	ld	a, (hl-)
      0014C8 2B                    5216 	dec	hl
      0014C9 2B                    5217 	dec	hl
      0014CA 57                    5218 	ld	d, a
      0014CB 1A                    5219 	ld	a, (de)
      0014CC 47                    5220 	ld	b, a
      0014CD 48                    5221 	ld	c, b
      0014CE AF                    5222 	xor	a, a
      0014CF 90                    5223 	sub	a, b
      0014D0 47                    5224 	ld	b, a
      0014D1 2A                    5225 	ld	a, (hl+)
      0014D2 5F                    5226 	ld	e, a
      0014D3 56                    5227 	ld	d, (hl)
      0014D4 1A                    5228 	ld	a, (de)
      0014D5 6F                    5229 	ld	l, a
                                   5230 ;	spillPairReg hl
                                   5231 ;	spillPairReg hl
                                   5232 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      0014D6 58                    5233 	ld	e, b
      0014D7 7D                    5234 	ld	a,l
      0014D8 57                    5235 	ld	d,a
      0014D9 90                    5236 	sub	a, b
      0014DA CB 7B                 5237 	bit	7, e
      0014DC 28 07                 5238 	jr	Z, 00415$
      0014DE CB 7A                 5239 	bit	7, d
      0014E0 20 08                 5240 	jr	NZ, 00416$
      0014E2 BF                    5241 	cp	a, a
      0014E3 18 05                 5242 	jr	00416$
      0014E5                       5243 00415$:
      0014E5 CB 7A                 5244 	bit	7, d
      0014E7 28 01                 5245 	jr	Z, 00416$
      0014E9 37                    5246 	scf
      0014EA                       5247 00416$:
      0014EA 30 03                 5248 	jr	NC, 00204$
      0014EC 48                    5249 	ld	c, b
      0014ED 18 17                 5250 	jr	00205$
      0014EF                       5251 00204$:
      0014EF 5D                    5252 	ld	e, l
      0014F0 79                    5253 	ld	a,c
      0014F1 57                    5254 	ld	d,a
      0014F2 95                    5255 	sub	a, l
      0014F3 CB 7B                 5256 	bit	7, e
      0014F5 28 07                 5257 	jr	Z, 00417$
      0014F7 CB 7A                 5258 	bit	7, d
      0014F9 20 08                 5259 	jr	NZ, 00418$
      0014FB BF                    5260 	cp	a, a
      0014FC 18 05                 5261 	jr	00418$
      0014FE                       5262 00417$:
      0014FE CB 7A                 5263 	bit	7, d
      001500 28 01                 5264 	jr	Z, 00418$
      001502 37                    5265 	scf
      001503                       5266 00418$:
      001503 38 01                 5267 	jr	C, 00207$
      001505 4D                    5268 	ld	c, l
      001506                       5269 00207$:
      001506                       5270 00205$:
                                   5271 ;src/main.c:524: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001506 F8 08                 5272 	ldhl	sp,	#8
      001508 2A                    5273 	ld	a,	(hl+)
      001509 66                    5274 	ld	h, (hl)
      00150A 6F                    5275 	ld	l, a
      00150B 71                    5276 	ld	(hl), c
                                   5277 ;src/main.c:527: enemies[i].xReserve += enemies[i].xSpeed;
      00150C D1                    5278 	pop	de
      00150D D5                    5279 	push	de
      00150E 21 04 00              5280 	ld	hl, #0x0004
      001511 19                    5281 	add	hl, de
      001512 E5                    5282 	push	hl
      001513 7D                    5283 	ld	a, l
      001514 F8 0E                 5284 	ldhl	sp,	#14
      001516 77                    5285 	ld	(hl), a
      001517 E1                    5286 	pop	hl
      001518 7C                    5287 	ld	a, h
      001519 F8 0D                 5288 	ldhl	sp,	#13
      00151B 32                    5289 	ld	(hl-), a
      00151C 2A                    5290 	ld	a, (hl+)
      00151D 5F                    5291 	ld	e, a
      00151E 56                    5292 	ld	d, (hl)
      00151F 1A                    5293 	ld	a, (de)
      001520 47                    5294 	ld	b, a
      001521 F8 04                 5295 	ldhl	sp,#4
      001523 2A                    5296 	ld	a, (hl+)
      001524 5F                    5297 	ld	e, a
      001525 56                    5298 	ld	d, (hl)
      001526 1A                    5299 	ld	a, (de)
      001527 80                    5300 	add	a, b
      001528 47                    5301 	ld	b, a
      001529 F8 0C                 5302 	ldhl	sp,	#12
      00152B 2A                    5303 	ld	a,	(hl+)
      00152C 66                    5304 	ld	h, (hl)
      00152D 6F                    5305 	ld	l, a
      00152E 70                    5306 	ld	(hl), b
                                   5307 ;src/main.c:528: enemies[i].yReserve += enemies[i].ySpeed;
      00152F D1                    5308 	pop	de
      001530 D5                    5309 	push	de
      001531 21 05 00              5310 	ld	hl, #0x0005
      001534 19                    5311 	add	hl, de
      001535 E5                    5312 	push	hl
      001536 7D                    5313 	ld	a, l
      001537 F8 08                 5314 	ldhl	sp,	#8
      001539 77                    5315 	ld	(hl), a
      00153A E1                    5316 	pop	hl
      00153B 7C                    5317 	ld	a, h
      00153C F8 07                 5318 	ldhl	sp,	#7
      00153E 32                    5319 	ld	(hl-), a
      00153F 2A                    5320 	ld	a, (hl+)
      001540 5F                    5321 	ld	e, a
      001541 56                    5322 	ld	d, (hl)
      001542 1A                    5323 	ld	a, (de)
      001543 81                    5324 	add	a, c
      001544 4F                    5325 	ld	c, a
      001545 3A                    5326 	ld	a, (hl-)
      001546 6E                    5327 	ld	l, (hl)
      001547 67                    5328 	ld	h, a
      001548 71                    5329 	ld	(hl), c
                                   5330 ;src/main.c:532: if (enemies[i].xReserve >> 3 > 0) {
      001549 F8 0C                 5331 	ldhl	sp,#12
      00154B 2A                    5332 	ld	a, (hl+)
      00154C 5F                    5333 	ld	e, a
      00154D 2A                    5334 	ld	a, (hl+)
      00154E 57                    5335 	ld	d, a
      00154F 1A                    5336 	ld	a, (de)
      001550 77                    5337 	ld	(hl), a
      001551 CB 28                 5338 	sra	b
      001553 CB 28                 5339 	sra	b
      001555 CB 28                 5340 	sra	b
      001557 58                    5341 	ld	e, b
      001558 AF                    5342 	xor	a, a
      001559 57                    5343 	ld	d, a
      00155A 90                    5344 	sub	a, b
      00155B CB 7B                 5345 	bit	7, e
      00155D 28 07                 5346 	jr	Z, 00419$
      00155F CB 7A                 5347 	bit	7, d
      001561 20 08                 5348 	jr	NZ, 00420$
      001563 BF                    5349 	cp	a, a
      001564 18 05                 5350 	jr	00420$
      001566                       5351 00419$:
      001566 CB 7A                 5352 	bit	7, d
      001568 28 01                 5353 	jr	Z, 00420$
      00156A 37                    5354 	scf
      00156B                       5355 00420$:
      00156B 30 36                 5356 	jr	NC, 00126$
                                   5357 ;src/main.c:533: int8_t xMovement = enemies[i].xReserve >> 3;
      00156D F8 0E                 5358 	ldhl	sp,	#14
      00156F 7E                    5359 	ld	a, (hl)
      001570 CB 2F                 5360 	sra	a
      001572 CB 2F                 5361 	sra	a
      001574 CB 2F                 5362 	sra	a
      001576 77                    5363 	ld	(hl), a
                                   5364 ;src/main.c:534: enemies[i].x += xMovement;
      001577 D1                    5365 	pop	de
      001578 D5                    5366 	push	de
      001579 1A                    5367 	ld	a, (de)
      00157A 4F                    5368 	ld	c, a
      00157B 13                    5369 	inc	de
      00157C 1A                    5370 	ld	a, (de)
      00157D 47                    5371 	ld	b, a
      00157E 7E                    5372 	ld	a, (hl)
      00157F 5F                    5373 	ld	e, a
      001580 07                    5374 	rlca
      001581 9F                    5375 	sbc	a, a
      001582 57                    5376 	ld	d, a
      001583 69                    5377 	ld	l, c
                                   5378 ;	spillPairReg hl
                                   5379 ;	spillPairReg hl
      001584 60                    5380 	ld	h, b
                                   5381 ;	spillPairReg hl
                                   5382 ;	spillPairReg hl
      001585 19                    5383 	add	hl, de
      001586 4D                    5384 	ld	c, l
      001587 44                    5385 	ld	b, h
      001588 E1                    5386 	pop	hl
      001589 E5                    5387 	push	hl
      00158A 79                    5388 	ld	a, c
      00158B 22                    5389 	ld	(hl+), a
      00158C 70                    5390 	ld	(hl), b
                                   5391 ;src/main.c:535: enemies[i].xReserve -=  xMovement << 3;
      00158D F8 0C                 5392 	ldhl	sp,#12
      00158F 2A                    5393 	ld	a, (hl+)
      001590 5F                    5394 	ld	e, a
      001591 2A                    5395 	ld	a, (hl+)
      001592 57                    5396 	ld	d, a
      001593 1A                    5397 	ld	a, (de)
      001594 F5                    5398 	push	af
      001595 3A                    5399 	ld	a, (hl-)
      001596 87                    5400 	add	a, a
      001597 87                    5401 	add	a, a
      001598 87                    5402 	add	a, a
      001599 4F                    5403 	ld	c, a
      00159A F1                    5404 	pop	af
      00159B 91                    5405 	sub	a, c
      00159C 4F                    5406 	ld	c, a
      00159D 3A                    5407 	ld	a, (hl-)
      00159E 6E                    5408 	ld	l, (hl)
      00159F 67                    5409 	ld	h, a
      0015A0 71                    5410 	ld	(hl), c
      0015A1 18 60                 5411 	jr	00127$
      0015A3                       5412 00126$:
                                   5413 ;src/main.c:538: else if ((-enemies[i].xReserve) >> 3 > 0){
      0015A3 F8 0E                 5414 	ldhl	sp,	#14
      0015A5 7E                    5415 	ld	a, (hl)
      0015A6 4F                    5416 	ld	c, a
      0015A7 07                    5417 	rlca
      0015A8 9F                    5418 	sbc	a, a
      0015A9 47                    5419 	ld	b, a
      0015AA AF                    5420 	xor	a, a
      0015AB 91                    5421 	sub	a, c
      0015AC 4F                    5422 	ld	c, a
      0015AD 9F                    5423 	sbc	a, a
      0015AE 90                    5424 	sub	a, b
      0015AF 47                    5425 	ld	b, a
      0015B0 CB 28                 5426 	sra	b
      0015B2 CB 19                 5427 	rr	c
      0015B4 CB 28                 5428 	sra	b
      0015B6 CB 19                 5429 	rr	c
      0015B8 CB 28                 5430 	sra	b
      0015BA CB 19                 5431 	rr	c
      0015BC 58                    5432 	ld	e, b
      0015BD AF                    5433 	xor	a, a
      0015BE 57                    5434 	ld	d, a
      0015BF B9                    5435 	cp	a, c
      0015C0 98                    5436 	sbc	a, b
      0015C1 CB 7B                 5437 	bit	7, e
      0015C3 28 07                 5438 	jr	Z, 00421$
      0015C5 CB 7A                 5439 	bit	7, d
      0015C7 20 08                 5440 	jr	NZ, 00422$
      0015C9 BF                    5441 	cp	a, a
      0015CA 18 05                 5442 	jr	00422$
      0015CC                       5443 00421$:
      0015CC CB 7A                 5444 	bit	7, d
      0015CE 28 01                 5445 	jr	Z, 00422$
      0015D0 37                    5446 	scf
      0015D1                       5447 00422$:
      0015D1 30 30                 5448 	jr	NC, 00127$
                                   5449 ;src/main.c:539: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      0015D3 AF                    5450 	xor	a, a
      0015D4 91                    5451 	sub	a, c
      0015D5 4F                    5452 	ld	c, a
      0015D6 F8 0E                 5453 	ldhl	sp,	#14
      0015D8 71                    5454 	ld	(hl), c
                                   5455 ;src/main.c:540: enemies[i].x += xMovement;
      0015D9 D1                    5456 	pop	de
      0015DA D5                    5457 	push	de
      0015DB 1A                    5458 	ld	a, (de)
      0015DC 4F                    5459 	ld	c, a
      0015DD 13                    5460 	inc	de
      0015DE 1A                    5461 	ld	a, (de)
      0015DF 47                    5462 	ld	b, a
      0015E0 7E                    5463 	ld	a, (hl)
      0015E1 5F                    5464 	ld	e, a
      0015E2 07                    5465 	rlca
      0015E3 9F                    5466 	sbc	a, a
      0015E4 57                    5467 	ld	d, a
      0015E5 69                    5468 	ld	l, c
                                   5469 ;	spillPairReg hl
                                   5470 ;	spillPairReg hl
      0015E6 60                    5471 	ld	h, b
                                   5472 ;	spillPairReg hl
                                   5473 ;	spillPairReg hl
      0015E7 19                    5474 	add	hl, de
      0015E8 4D                    5475 	ld	c, l
      0015E9 44                    5476 	ld	b, h
      0015EA E1                    5477 	pop	hl
      0015EB E5                    5478 	push	hl
      0015EC 79                    5479 	ld	a, c
      0015ED 22                    5480 	ld	(hl+), a
      0015EE 70                    5481 	ld	(hl), b
                                   5482 ;src/main.c:541: enemies[i].xReserve +=  (-xMovement) << 3;
      0015EF F8 0C                 5483 	ldhl	sp,#12
      0015F1 2A                    5484 	ld	a, (hl+)
      0015F2 5F                    5485 	ld	e, a
      0015F3 2A                    5486 	ld	a, (hl+)
      0015F4 57                    5487 	ld	d, a
      0015F5 1A                    5488 	ld	a, (de)
      0015F6 4F                    5489 	ld	c, a
      0015F7 AF                    5490 	xor	a, a
      0015F8 96                    5491 	sub	a, (hl)
      0015F9 2B                    5492 	dec	hl
      0015FA 87                    5493 	add	a, a
      0015FB 87                    5494 	add	a, a
      0015FC 87                    5495 	add	a, a
      0015FD 81                    5496 	add	a, c
      0015FE 4F                    5497 	ld	c, a
      0015FF 3A                    5498 	ld	a, (hl-)
      001600 6E                    5499 	ld	l, (hl)
      001601 67                    5500 	ld	h, a
      001602 71                    5501 	ld	(hl), c
      001603                       5502 00127$:
                                   5503 ;src/main.c:528: enemies[i].yReserve += enemies[i].ySpeed;
      001603 F8 06                 5504 	ldhl	sp,#6
      001605 2A                    5505 	ld	a, (hl+)
      001606 5F                    5506 	ld	e, a
      001607 56                    5507 	ld	d, (hl)
      001608 1A                    5508 	ld	a, (de)
      001609 F8 0D                 5509 	ldhl	sp,	#13
      00160B 77                    5510 	ld	(hl), a
                                   5511 ;src/main.c:544: if (enemies[i].yReserve >> 3 > 0) {
      00160C 2A                    5512 	ld	a, (hl+)
      00160D CB 2F                 5513 	sra	a
      00160F CB 2F                 5514 	sra	a
      001611 CB 2F                 5515 	sra	a
      001613 77                    5516 	ld	(hl), a
      001614 5E                    5517 	ld	e, (hl)
      001615 AF                    5518 	xor	a, a
      001616 57                    5519 	ld	d, a
      001617 96                    5520 	sub	a, (hl)
      001618 CB 7B                 5521 	bit	7, e
      00161A 28 07                 5522 	jr	Z, 00423$
      00161C CB 7A                 5523 	bit	7, d
      00161E 20 08                 5524 	jr	NZ, 00424$
      001620 BF                    5525 	cp	a, a
      001621 18 05                 5526 	jr	00424$
      001623                       5527 00423$:
      001623 CB 7A                 5528 	bit	7, d
      001625 28 01                 5529 	jr	Z, 00424$
      001627 37                    5530 	scf
      001628                       5531 00424$:
      001628 30 59                 5532 	jr	NC, 00131$
                                   5533 ;src/main.c:545: int8_t yMovement = enemies[i].yReserve >> 3;
      00162A F8 0E                 5534 	ldhl	sp,	#14
      00162C 7E                    5535 	ld	a, (hl)
      00162D F8 08                 5536 	ldhl	sp,	#8
      00162F 77                    5537 	ld	(hl), a
                                   5538 ;src/main.c:546: enemies[i].y += yMovement;
      001630 F8 02                 5539 	ldhl	sp,#2
      001632 2A                    5540 	ld	a, (hl+)
      001633 5F                    5541 	ld	e, a
      001634 56                    5542 	ld	d, (hl)
      001635 1A                    5543 	ld	a, (de)
      001636 F8 0D                 5544 	ldhl	sp,	#13
      001638 22                    5545 	ld	(hl+), a
      001639 13                    5546 	inc	de
      00163A 1A                    5547 	ld	a, (de)
      00163B 77                    5548 	ld	(hl), a
      00163C F8 08                 5549 	ldhl	sp,	#8
      00163E 2A                    5550 	ld	a, (hl+)
      00163F 22                    5551 	ld	(hl+), a
      001640 07                    5552 	rlca
      001641 9F                    5553 	sbc	a, a
      001642 77                    5554 	ld	(hl), a
      001643 F8 0D                 5555 	ldhl	sp,	#13
      001645 3A                    5556 	ld	a, (hl-)
      001646 2B                    5557 	dec	hl
      001647 77                    5558 	ld	(hl), a
      001648 F8 0E                 5559 	ldhl	sp,	#14
      00164A 3A                    5560 	ld	a, (hl-)
      00164B 2B                    5561 	dec	hl
      00164C 32                    5562 	ld	(hl-), a
      00164D 2A                    5563 	ld	a, (hl+)
      00164E 5F                    5564 	ld	e, a
      00164F 56                    5565 	ld	d, (hl)
      001650 F8 09                 5566 	ldhl	sp,	#9
      001652 2A                    5567 	ld	a,	(hl+)
      001653 66                    5568 	ld	h, (hl)
      001654 6F                    5569 	ld	l, a
      001655 19                    5570 	add	hl, de
      001656 E5                    5571 	push	hl
      001657 7D                    5572 	ld	a, l
      001658 F8 0F                 5573 	ldhl	sp,	#15
      00165A 77                    5574 	ld	(hl), a
      00165B E1                    5575 	pop	hl
      00165C 7C                    5576 	ld	a, h
      00165D F8 0E                 5577 	ldhl	sp,	#14
      00165F 77                    5578 	ld	(hl), a
      001660 F8 02                 5579 	ldhl	sp,#2
      001662 2A                    5580 	ld	a, (hl+)
      001663 5F                    5581 	ld	e, a
      001664 56                    5582 	ld	d, (hl)
      001665 F8 0D                 5583 	ldhl	sp,	#13
      001667 2A                    5584 	ld	a, (hl+)
      001668 12                    5585 	ld	(de), a
      001669 13                    5586 	inc	de
      00166A 7E                    5587 	ld	a, (hl)
      00166B 12                    5588 	ld	(de), a
                                   5589 ;src/main.c:547: enemies[i].yReserve -=  yMovement << 3;
      00166C F8 06                 5590 	ldhl	sp,#6
      00166E 2A                    5591 	ld	a, (hl+)
      00166F 5F                    5592 	ld	e, a
      001670 2A                    5593 	ld	a, (hl+)
      001671 57                    5594 	ld	d, a
      001672 1A                    5595 	ld	a, (de)
      001673 F5                    5596 	push	af
      001674 3A                    5597 	ld	a, (hl-)
      001675 87                    5598 	add	a, a
      001676 87                    5599 	add	a, a
      001677 87                    5600 	add	a, a
      001678 4F                    5601 	ld	c, a
      001679 F1                    5602 	pop	af
      00167A 91                    5603 	sub	a, c
      00167B 4F                    5604 	ld	c, a
      00167C 3A                    5605 	ld	a, (hl-)
      00167D 6E                    5606 	ld	l, (hl)
      00167E 67                    5607 	ld	h, a
      00167F 71                    5608 	ld	(hl), c
      001680 C3r23r17              5609 	jp	00132$
      001683                       5610 00131$:
                                   5611 ;src/main.c:549: else if ((-enemies[i].yReserve) >> 3 > 0){
      001683 F8 0D                 5612 	ldhl	sp,	#13
      001685 7E                    5613 	ld	a, (hl)
      001686 F8 0A                 5614 	ldhl	sp,	#10
      001688 22                    5615 	ld	(hl+), a
      001689 07                    5616 	rlca
      00168A 9F                    5617 	sbc	a, a
      00168B 77                    5618 	ld	(hl), a
      00168C 11 00 00              5619 	ld	de, #0x0000
      00168F 3A                    5620 	ld	a, (hl-)
      001690 6E                    5621 	ld	l, (hl)
      001691 67                    5622 	ld	h, a
      001692 7B                    5623 	ld	a, e
      001693 95                    5624 	sub	a, l
      001694 5F                    5625 	ld	e, a
      001695 7A                    5626 	ld	a, d
      001696 9C                    5627 	sbc	a, h
      001697 F8 0E                 5628 	ldhl	sp,	#14
      001699 32                    5629 	ld	(hl-), a
      00169A 7B                    5630 	ld	a, e
      00169B 22                    5631 	ld	(hl+), a
      00169C CB 2E                 5632 	sra	(hl)
      00169E 2B                    5633 	dec	hl
      00169F CB 1E                 5634 	rr	(hl)
      0016A1 23                    5635 	inc	hl
      0016A2 CB 2E                 5636 	sra	(hl)
      0016A4 2B                    5637 	dec	hl
      0016A5 CB 1E                 5638 	rr	(hl)
      0016A7 23                    5639 	inc	hl
      0016A8 CB 2E                 5640 	sra	(hl)
      0016AA 2B                    5641 	dec	hl
      0016AB CB 1E                 5642 	rr	(hl)
      0016AD AF                    5643 	xor	a, a
      0016AE 96                    5644 	sub	a, (hl)
      0016AF 23                    5645 	inc	hl
      0016B0 3E 00                 5646 	ld	a, #0x00
      0016B2 9E                    5647 	sbc	a, (hl)
      0016B3 3E 00                 5648 	ld	a, #0x00
      0016B5 57                    5649 	ld	d, a
      0016B6 CB 7E                 5650 	bit	7, (hl)
      0016B8 28 07                 5651 	jr	Z, 00425$
      0016BA CB 7A                 5652 	bit	7, d
      0016BC 20 08                 5653 	jr	NZ, 00426$
      0016BE BF                    5654 	cp	a, a
      0016BF 18 05                 5655 	jr	00426$
      0016C1                       5656 00425$:
      0016C1 CB 7A                 5657 	bit	7, d
      0016C3 28 01                 5658 	jr	Z, 00426$
      0016C5 37                    5659 	scf
      0016C6                       5660 00426$:
      0016C6 30 5B                 5661 	jr	NC, 00132$
                                   5662 ;src/main.c:550: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0016C8 F8 0D                 5663 	ldhl	sp,	#13
      0016CA 2A                    5664 	ld	a, (hl+)
      0016CB 4F                    5665 	ld	c, a
      0016CC AF                    5666 	xor	a, a
      0016CD 91                    5667 	sub	a, c
      0016CE 77                    5668 	ld	(hl), a
      0016CF 7E                    5669 	ld	a, (hl)
      0016D0 F8 08                 5670 	ldhl	sp,	#8
      0016D2 77                    5671 	ld	(hl), a
                                   5672 ;src/main.c:551: enemies[i].y += yMovement;
      0016D3 F8 02                 5673 	ldhl	sp,#2
      0016D5 2A                    5674 	ld	a, (hl+)
      0016D6 5F                    5675 	ld	e, a
      0016D7 56                    5676 	ld	d, (hl)
      0016D8 1A                    5677 	ld	a, (de)
      0016D9 F8 0D                 5678 	ldhl	sp,	#13
      0016DB 22                    5679 	ld	(hl+), a
      0016DC 13                    5680 	inc	de
      0016DD 1A                    5681 	ld	a, (de)
      0016DE 77                    5682 	ld	(hl), a
      0016DF F8 08                 5683 	ldhl	sp,	#8
      0016E1 2A                    5684 	ld	a, (hl+)
      0016E2 22                    5685 	ld	(hl+), a
      0016E3 07                    5686 	rlca
      0016E4 9F                    5687 	sbc	a, a
      0016E5 77                    5688 	ld	(hl), a
      0016E6 F8 0D                 5689 	ldhl	sp,	#13
      0016E8 3A                    5690 	ld	a, (hl-)
      0016E9 2B                    5691 	dec	hl
      0016EA 77                    5692 	ld	(hl), a
      0016EB F8 0E                 5693 	ldhl	sp,	#14
      0016ED 3A                    5694 	ld	a, (hl-)
      0016EE 2B                    5695 	dec	hl
      0016EF 32                    5696 	ld	(hl-), a
      0016F0 2A                    5697 	ld	a, (hl+)
      0016F1 5F                    5698 	ld	e, a
      0016F2 56                    5699 	ld	d, (hl)
      0016F3 F8 09                 5700 	ldhl	sp,	#9
      0016F5 2A                    5701 	ld	a,	(hl+)
      0016F6 66                    5702 	ld	h, (hl)
      0016F7 6F                    5703 	ld	l, a
      0016F8 19                    5704 	add	hl, de
      0016F9 E5                    5705 	push	hl
      0016FA 7D                    5706 	ld	a, l
      0016FB F8 0F                 5707 	ldhl	sp,	#15
      0016FD 77                    5708 	ld	(hl), a
      0016FE E1                    5709 	pop	hl
      0016FF 7C                    5710 	ld	a, h
      001700 F8 0E                 5711 	ldhl	sp,	#14
      001702 77                    5712 	ld	(hl), a
      001703 F8 02                 5713 	ldhl	sp,#2
      001705 2A                    5714 	ld	a, (hl+)
      001706 5F                    5715 	ld	e, a
      001707 56                    5716 	ld	d, (hl)
      001708 F8 0D                 5717 	ldhl	sp,	#13
      00170A 2A                    5718 	ld	a, (hl+)
      00170B 12                    5719 	ld	(de), a
      00170C 13                    5720 	inc	de
      00170D 7E                    5721 	ld	a, (hl)
      00170E 12                    5722 	ld	(de), a
                                   5723 ;src/main.c:552: enemies[i].yReserve +=  (-yMovement) << 3;
      00170F F8 06                 5724 	ldhl	sp,#6
      001711 2A                    5725 	ld	a, (hl+)
      001712 5F                    5726 	ld	e, a
      001713 2A                    5727 	ld	a, (hl+)
      001714 57                    5728 	ld	d, a
      001715 1A                    5729 	ld	a, (de)
      001716 4F                    5730 	ld	c, a
      001717 AF                    5731 	xor	a, a
      001718 96                    5732 	sub	a, (hl)
      001719 2B                    5733 	dec	hl
      00171A 87                    5734 	add	a, a
      00171B 87                    5735 	add	a, a
      00171C 87                    5736 	add	a, a
      00171D 81                    5737 	add	a, c
      00171E 4F                    5738 	ld	c, a
      00171F 3A                    5739 	ld	a, (hl-)
      001720 6E                    5740 	ld	l, (hl)
      001721 67                    5741 	ld	h, a
      001722 71                    5742 	ld	(hl), c
      001723                       5743 00132$:
                                   5744 ;src/main.c:557: if (auxTick == 1) {
      001723 FArD3r00              5745 	ld	a, (#_auxTick)
      001726 3D                    5746 	dec	a
      001727 C2r6Ar18              5747 	jp	NZ,00144$
                                   5748 ;src/main.c:559: if (enemies[i].spriteCount == 1) {
      00172A D1                    5749 	pop	de
      00172B D5                    5750 	push	de
      00172C 21 08 00              5751 	ld	hl, #0x0008
      00172F 19                    5752 	add	hl, de
      001730 4D                    5753 	ld	c, l
      001731 44                    5754 	ld	b, h
      001732 0A                    5755 	ld	a, (bc)
      001733 47                    5756 	ld	b, a
                                   5757 ;src/main.c:560: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001734 F8 0F                 5758 	ldhl	sp,	#15
      001736 3A                    5759 	ld	a, (hl-)
      001737 87                    5760 	add	a, a
      001738 4F                    5761 	ld	c, a
      001739 C6 0A                 5762 	add	a, #0x0a
      00173B 77                    5763 	ld	(hl), a
                                   5764 ;src/main.c:559: if (enemies[i].spriteCount == 1) {
      00173C 05                    5765 	dec	b
      00173D 20 51                 5766 	jr	NZ, 00140$
                                   5767 ;src/main.c:560: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00173F F8 02                 5768 	ldhl	sp,#2
      001741 2A                    5769 	ld	a, (hl+)
      001742 5F                    5770 	ld	e, a
      001743 56                    5771 	ld	d, (hl)
      001744 1A                    5772 	ld	a, (de)
      001745 C6 0C                 5773 	add	a, #0x0c
      001747 4F                    5774 	ld	c, a
      001748 D1                    5775 	pop	de
      001749 D5                    5776 	push	de
      00174A 1A                    5777 	ld	a, (de)
      00174B C6 04                 5778 	add	a, #0x04
      00174D 5F                    5779 	ld	e, a
      00174E F8 0E                 5780 	ldhl	sp,	#14
                                   5781 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001750 6E                    5782 	ld	l, (hl)
                                   5783 ;	spillPairReg hl
                                   5784 ;	spillPairReg hl
      001751 26 00                 5785 	ld	h, #0x00
                                   5786 ;	spillPairReg hl
                                   5787 ;	spillPairReg hl
      001753 29                    5788 	add	hl, hl
      001754 29                    5789 	add	hl, hl
      001755 D5                    5790 	push	de
      001756 11r00r00              5791 	ld	de, #_shadow_OAM
      001759 19                    5792 	add	hl, de
      00175A D1                    5793 	pop	de
                                   5794 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00175B 79                    5795 	ld	a, c
      00175C 22                    5796 	ld	(hl+), a
      00175D 73                    5797 	ld	(hl), e
                                   5798 ;src/main.c:561: if (enemies[i].xSpeed >= 0) {
      00175E F8 04                 5799 	ldhl	sp,#4
      001760 2A                    5800 	ld	a, (hl+)
      001761 5F                    5801 	ld	e, a
      001762 56                    5802 	ld	d, (hl)
      001763 1A                    5803 	ld	a, (de)
      001764 CB 7F                 5804 	bit	7,a
      001766 20 14                 5805 	jr	NZ, 00134$
                                   5806 ;src/main.c:562: set_sprite_prop(10+(i<<1), 0);
      001768 F8 0E                 5807 	ldhl	sp,	#14
      00176A 4E                    5808 	ld	c, (hl)
                                   5809 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00176B 26 00                 5810 	ld	h, #0x00
                                   5811 ;	spillPairReg hl
                                   5812 ;	spillPairReg hl
      00176D 69                    5813 	ld	l, c
      00176E 29                    5814 	add	hl, hl
      00176F 29                    5815 	add	hl, hl
      001770 11r00r00              5816 	ld	de, #_shadow_OAM
      001773 19                    5817 	add	hl, de
      001774 23                    5818 	inc	hl
      001775 23                    5819 	inc	hl
      001776 23                    5820 	inc	hl
      001777 36 00                 5821 	ld	(hl), #0x00
                                   5822 ;src/main.c:562: set_sprite_prop(10+(i<<1), 0);
      001779 C3r6Ar18              5823 	jp	00144$
      00177C                       5824 00134$:
                                   5825 ;src/main.c:565: set_sprite_prop(10+(i<<1), S_FLIPX);
      00177C F8 0E                 5826 	ldhl	sp,	#14
      00177E 4E                    5827 	ld	c, (hl)
                                   5828 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00177F 26 00                 5829 	ld	h, #0x00
                                   5830 ;	spillPairReg hl
                                   5831 ;	spillPairReg hl
      001781 69                    5832 	ld	l, c
      001782 29                    5833 	add	hl, hl
      001783 29                    5834 	add	hl, hl
      001784 11r00r00              5835 	ld	de, #_shadow_OAM
      001787 19                    5836 	add	hl, de
      001788 23                    5837 	inc	hl
      001789 23                    5838 	inc	hl
      00178A 23                    5839 	inc	hl
      00178B 36 20                 5840 	ld	(hl), #0x20
                                   5841 ;src/main.c:565: set_sprite_prop(10+(i<<1), S_FLIPX);
      00178D C3r6Ar18              5842 	jp	00144$
      001790                       5843 00140$:
                                   5844 ;src/main.c:570: if (enemies[i].xSpeed >= 0) {
      001790 F8 04                 5845 	ldhl	sp,#4
      001792 2A                    5846 	ld	a, (hl+)
      001793 5F                    5847 	ld	e, a
      001794 56                    5848 	ld	d, (hl)
      001795 1A                    5849 	ld	a, (de)
      001796 CB 7F                 5850 	bit	7,a
      001798 20 6C                 5851 	jr	NZ, 00137$
                                   5852 ;src/main.c:571: set_sprite_prop(10+(i<<1), 0);
      00179A F8 0E                 5853 	ldhl	sp,	#14
      00179C 46                    5854 	ld	b, (hl)
                                   5855 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00179D 26 00                 5856 	ld	h, #0x00
                                   5857 ;	spillPairReg hl
                                   5858 ;	spillPairReg hl
      00179F 68                    5859 	ld	l, b
      0017A0 29                    5860 	add	hl, hl
      0017A1 29                    5861 	add	hl, hl
      0017A2 11r00r00              5862 	ld	de, #_shadow_OAM
      0017A5 19                    5863 	add	hl, de
      0017A6 23                    5864 	inc	hl
      0017A7 23                    5865 	inc	hl
      0017A8 23                    5866 	inc	hl
      0017A9 36 00                 5867 	ld	(hl), #0x00
                                   5868 ;src/main.c:572: set_sprite_prop(10+(i<<1)+1, 0);
      0017AB 79                    5869 	ld	a, c
      0017AC C6 0B                 5870 	add	a, #0x0b
      0017AE 4F                    5871 	ld	c, a
                                   5872 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017AF 69                    5873 	ld	l, c
                                   5874 ;	spillPairReg hl
                                   5875 ;	spillPairReg hl
      0017B0 26 00                 5876 	ld	h, #0x00
                                   5877 ;	spillPairReg hl
                                   5878 ;	spillPairReg hl
      0017B2 29                    5879 	add	hl, hl
      0017B3 29                    5880 	add	hl, hl
      0017B4 11r00r00              5881 	ld	de, #_shadow_OAM
      0017B7 19                    5882 	add	hl, de
      0017B8 23                    5883 	inc	hl
      0017B9 23                    5884 	inc	hl
      0017BA 23                    5885 	inc	hl
      0017BB 36 00                 5886 	ld	(hl), #0x00
                                   5887 ;src/main.c:573: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      0017BD F8 02                 5888 	ldhl	sp,#2
      0017BF 2A                    5889 	ld	a, (hl+)
      0017C0 5F                    5890 	ld	e, a
      0017C1 56                    5891 	ld	d, (hl)
      0017C2 1A                    5892 	ld	a, (de)
      0017C3 C6 08                 5893 	add	a, #0x08
      0017C5 F8 0C                 5894 	ldhl	sp,	#12
      0017C7 22                    5895 	ld	(hl+), a
      0017C8 D1                    5896 	pop	de
      0017C9 D5                    5897 	push	de
      0017CA 1A                    5898 	ld	a, (de)
      0017CB 22                    5899 	ld	(hl+), a
      0017CC 46                    5900 	ld	b, (hl)
                                   5901 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017CD 11r00r00              5902 	ld	de, #_shadow_OAM+0
      0017D0 26 00                 5903 	ld	h, #0x00
                                   5904 ;	spillPairReg hl
                                   5905 ;	spillPairReg hl
      0017D2 68                    5906 	ld	l, b
      0017D3 29                    5907 	add	hl, hl
      0017D4 29                    5908 	add	hl, hl
      0017D5 19                    5909 	add	hl, de
      0017D6 5D                    5910 	ld	e, l
      0017D7 54                    5911 	ld	d, h
                                   5912 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017D8 F8 0C                 5913 	ldhl	sp,	#12
      0017DA 2A                    5914 	ld	a, (hl+)
      0017DB 12                    5915 	ld	(de), a
      0017DC 13                    5916 	inc	de
      0017DD 7E                    5917 	ld	a, (hl)
      0017DE 12                    5918 	ld	(de), a
                                   5919 ;src/main.c:574: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      0017DF F8 02                 5920 	ldhl	sp,#2
      0017E1 2A                    5921 	ld	a, (hl+)
      0017E2 5F                    5922 	ld	e, a
      0017E3 56                    5923 	ld	d, (hl)
      0017E4 1A                    5924 	ld	a, (de)
      0017E5 C6 08                 5925 	add	a, #0x08
      0017E7 F8 0E                 5926 	ldhl	sp,	#14
      0017E9 77                    5927 	ld	(hl), a
      0017EA D1                    5928 	pop	de
      0017EB D5                    5929 	push	de
      0017EC 1A                    5930 	ld	a, (de)
      0017ED C6 08                 5931 	add	a, #0x08
      0017EF 5F                    5932 	ld	e, a
                                   5933 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017F0 26 00                 5934 	ld	h, #0x00
                                   5935 ;	spillPairReg hl
                                   5936 ;	spillPairReg hl
      0017F2 69                    5937 	ld	l, c
      0017F3 29                    5938 	add	hl, hl
      0017F4 29                    5939 	add	hl, hl
      0017F5 7D                    5940 	ld	a, l
      0017F6 C6r00                 5941 	add	a, #<(_shadow_OAM)
      0017F8 4F                    5942 	ld	c, a
      0017F9 7C                    5943 	ld	a, h
      0017FA CEs00                 5944 	adc	a, #>(_shadow_OAM)
      0017FC 47                    5945 	ld	b, a
                                   5946 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017FD F8 0E                 5947 	ldhl	sp,	#14
      0017FF 7E                    5948 	ld	a, (hl)
      001800 02                    5949 	ld	(bc), a
      001801 03                    5950 	inc	bc
      001802 7B                    5951 	ld	a, e
      001803 02                    5952 	ld	(bc), a
                                   5953 ;src/main.c:574: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001804 18 64                 5954 	jr	00144$
      001806                       5955 00137$:
                                   5956 ;src/main.c:577: set_sprite_prop(10+(i<<1), S_FLIPX);
      001806 F8 0E                 5957 	ldhl	sp,	#14
                                   5958 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001808 6E                    5959 	ld	l, (hl)
                                   5960 ;	spillPairReg hl
                                   5961 ;	spillPairReg hl
      001809 26 00                 5962 	ld	h, #0x00
                                   5963 ;	spillPairReg hl
                                   5964 ;	spillPairReg hl
      00180B 29                    5965 	add	hl, hl
      00180C 29                    5966 	add	hl, hl
      00180D 11r00r00              5967 	ld	de, #_shadow_OAM
      001810 19                    5968 	add	hl, de
      001811 23                    5969 	inc	hl
      001812 23                    5970 	inc	hl
      001813 23                    5971 	inc	hl
      001814 36 20                 5972 	ld	(hl), #0x20
                                   5973 ;src/main.c:578: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001816 79                    5974 	ld	a, c
      001817 C6 0B                 5975 	add	a, #0x0b
      001819 F8 0D                 5976 	ldhl	sp,	#13
      00181B 77                    5977 	ld	(hl), a
      00181C 4E                    5978 	ld	c, (hl)
                                   5979 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00181D 26 00                 5980 	ld	h, #0x00
                                   5981 ;	spillPairReg hl
                                   5982 ;	spillPairReg hl
      00181F 69                    5983 	ld	l, c
      001820 29                    5984 	add	hl, hl
      001821 29                    5985 	add	hl, hl
      001822 11r00r00              5986 	ld	de, #_shadow_OAM
      001825 19                    5987 	add	hl, de
      001826 23                    5988 	inc	hl
      001827 23                    5989 	inc	hl
      001828 23                    5990 	inc	hl
      001829 36 20                 5991 	ld	(hl), #0x20
                                   5992 ;src/main.c:579: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      00182B F8 02                 5993 	ldhl	sp,#2
      00182D 2A                    5994 	ld	a, (hl+)
      00182E 5F                    5995 	ld	e, a
      00182F 56                    5996 	ld	d, (hl)
      001830 1A                    5997 	ld	a, (de)
      001831 C6 08                 5998 	add	a, #0x08
      001833 4F                    5999 	ld	c, a
      001834 D1                    6000 	pop	de
      001835 D5                    6001 	push	de
      001836 1A                    6002 	ld	a, (de)
      001837 C6 08                 6003 	add	a, #0x08
      001839 5F                    6004 	ld	e, a
      00183A F8 0E                 6005 	ldhl	sp,	#14
                                   6006 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00183C 6E                    6007 	ld	l, (hl)
                                   6008 ;	spillPairReg hl
                                   6009 ;	spillPairReg hl
      00183D 26 00                 6010 	ld	h, #0x00
                                   6011 ;	spillPairReg hl
                                   6012 ;	spillPairReg hl
      00183F 29                    6013 	add	hl, hl
      001840 29                    6014 	add	hl, hl
      001841 D5                    6015 	push	de
      001842 11r00r00              6016 	ld	de, #_shadow_OAM
      001845 19                    6017 	add	hl, de
      001846 D1                    6018 	pop	de
                                   6019 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001847 79                    6020 	ld	a, c
      001848 22                    6021 	ld	(hl+), a
      001849 73                    6022 	ld	(hl), e
                                   6023 ;src/main.c:580: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00184A F8 02                 6024 	ldhl	sp,#2
      00184C 2A                    6025 	ld	a, (hl+)
      00184D 5F                    6026 	ld	e, a
      00184E 56                    6027 	ld	d, (hl)
      00184F 1A                    6028 	ld	a, (de)
      001850 C6 08                 6029 	add	a, #0x08
      001852 4F                    6030 	ld	c, a
      001853 D1                    6031 	pop	de
      001854 D5                    6032 	push	de
      001855 1A                    6033 	ld	a, (de)
      001856 F8 0E                 6034 	ldhl	sp,	#14
      001858 32                    6035 	ld	(hl-), a
                                   6036 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001859 6E                    6037 	ld	l, (hl)
                                   6038 ;	spillPairReg hl
                                   6039 ;	spillPairReg hl
      00185A 26 00                 6040 	ld	h, #0x00
                                   6041 ;	spillPairReg hl
                                   6042 ;	spillPairReg hl
      00185C 29                    6043 	add	hl, hl
      00185D 29                    6044 	add	hl, hl
      00185E 11r00r00              6045 	ld	de, #_shadow_OAM
      001861 19                    6046 	add	hl, de
                                   6047 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001862 79                    6048 	ld	a, c
      001863 22                    6049 	ld	(hl+), a
      001864 4D                    6050 	ld	c, l
      001865 44                    6051 	ld	b, h
      001866 F8 0E                 6052 	ldhl	sp,	#14
      001868 7E                    6053 	ld	a, (hl)
      001869 02                    6054 	ld	(bc), a
                                   6055 ;src/main.c:580: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00186A                       6056 00144$:
                                   6057 ;src/main.c:488: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00186A F8 0F                 6058 	ldhl	sp,	#15
      00186C 34                    6059 	inc	(hl)
      00186D C3r4Er12              6060 	jp	00197$
      001870                       6061 00145$:
                                   6062 ;src/main.c:590: uint8_t i = enemyCollisionCount;
      001870 FArB9r00              6063 	ld	a, (#_enemyCollisionCount)
      001873 F8 01                 6064 	ldhl	sp,	#1
      001875 77                    6065 	ld	(hl), a
                                   6066 ;src/main.c:592: if (enemies[i].alive) {
      001876 4E                    6067 	ld	c, (hl)
      001877 06 00                 6068 	ld	b, #0x00
      001879 69                    6069 	ld	l, c
      00187A 60                    6070 	ld	h, b
      00187B 29                    6071 	add	hl, hl
      00187C 29                    6072 	add	hl, hl
      00187D 29                    6073 	add	hl, hl
      00187E 09                    6074 	add	hl, bc
      00187F 29                    6075 	add	hl, hl
      001880 01r5Ar00              6076 	ld	bc,#_enemies
      001883 09                    6077 	add	hl,bc
      001884 E5                    6078 	push	hl
      001885 7D                    6079 	ld	a, l
      001886 F8 04                 6080 	ldhl	sp,	#4
      001888 77                    6081 	ld	(hl), a
      001889 E1                    6082 	pop	hl
      00188A 7C                    6083 	ld	a, h
      00188B F8 03                 6084 	ldhl	sp,	#3
      00188D 32                    6085 	ld	(hl-), a
      00188E 2A                    6086 	ld	a, (hl+)
      00188F 5F                    6087 	ld	e, a
      001890 56                    6088 	ld	d, (hl)
      001891 21 09 00              6089 	ld	hl, #0x0009
      001894 19                    6090 	add	hl, de
      001895 E5                    6091 	push	hl
      001896 7D                    6092 	ld	a, l
      001897 F8 06                 6093 	ldhl	sp,	#6
      001899 77                    6094 	ld	(hl), a
      00189A E1                    6095 	pop	hl
      00189B 7C                    6096 	ld	a, h
      00189C F8 05                 6097 	ldhl	sp,	#5
      00189E 32                    6098 	ld	(hl-), a
      00189F 2A                    6099 	ld	a, (hl+)
      0018A0 5F                    6100 	ld	e, a
      0018A1 56                    6101 	ld	d, (hl)
      0018A2 1A                    6102 	ld	a, (de)
      0018A3 F8 0F                 6103 	ldhl	sp,	#15
      0018A5 77                    6104 	ld	(hl), a
      0018A6 7E                    6105 	ld	a, (hl)
      0018A7 B7                    6106 	or	a, a
      0018A8 CAr66r1B              6107 	jp	Z, 00198$
                                   6108 ;src/main.c:593: if (enemies[i].visible == 1) {
      0018AB F8 02                 6109 	ldhl	sp,#2
      0018AD 2A                    6110 	ld	a, (hl+)
      0018AE 5F                    6111 	ld	e, a
      0018AF 56                    6112 	ld	d, (hl)
      0018B0 21 0A 00              6113 	ld	hl, #0x000a
      0018B3 19                    6114 	add	hl, de
      0018B4 4D                    6115 	ld	c, l
      0018B5 44                    6116 	ld	b, h
      0018B6 0A                    6117 	ld	a, (bc)
      0018B7 F8 06                 6118 	ldhl	sp,	#6
      0018B9 77                    6119 	ld	(hl), a
                                   6120 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018BA F8 02                 6121 	ldhl	sp,#2
      0018BC 2A                    6122 	ld	a, (hl+)
      0018BD 5F                    6123 	ld	e, a
      0018BE 56                    6124 	ld	d, (hl)
      0018BF 1A                    6125 	ld	a, (de)
      0018C0 F8 07                 6126 	ldhl	sp,	#7
      0018C2 22                    6127 	ld	(hl+), a
      0018C3 13                    6128 	inc	de
      0018C4 1A                    6129 	ld	a, (de)
      0018C5 77                    6130 	ld	(hl), a
      0018C6 F8 02                 6131 	ldhl	sp,#2
      0018C8 2A                    6132 	ld	a, (hl+)
      0018C9 5F                    6133 	ld	e, a
      0018CA 56                    6134 	ld	d, (hl)
      0018CB 21 02 00              6135 	ld	hl, #0x0002
      0018CE 19                    6136 	add	hl, de
      0018CF E5                    6137 	push	hl
      0018D0 7D                    6138 	ld	a, l
      0018D1 F8 0B                 6139 	ldhl	sp,	#11
      0018D3 77                    6140 	ld	(hl), a
      0018D4 E1                    6141 	pop	hl
      0018D5 7C                    6142 	ld	a, h
      0018D6 F8 0A                 6143 	ldhl	sp,	#10
      0018D8 77                    6144 	ld	(hl), a
                                   6145 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      0018D9 F8 01                 6146 	ldhl	sp,	#1
      0018DB 5E                    6147 	ld	e, (hl)
                                   6148 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018DC F8 07                 6149 	ldhl	sp,	#7
      0018DE 7E                    6150 	ld	a, (hl)
      0018DF F8 0B                 6151 	ldhl	sp,	#11
      0018E1 77                    6152 	ld	(hl), a
      0018E2 F8 08                 6153 	ldhl	sp,	#8
      0018E4 7E                    6154 	ld	a, (hl)
      0018E5 F8 0C                 6155 	ldhl	sp,	#12
                                   6156 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      0018E7 22                    6157 	ld	(hl+), a
      0018E8 7B                    6158 	ld	a, e
      0018E9 87                    6159 	add	a, a
                                   6160 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018EA 32                    6161 	ld	(hl-), a
      0018EB 2A                    6162 	ld	a, (hl+)
      0018EC 23                    6163 	inc	hl
      0018ED 07                    6164 	rlca
      0018EE E6 01                 6165 	and	a,#0x01
                                   6166 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      0018F0 32                    6167 	ld	(hl-), a
      0018F1 2A                    6168 	ld	a, (hl+)
      0018F2 23                    6169 	inc	hl
      0018F3 C6 0A                 6170 	add	a, #0x0a
      0018F5 77                    6171 	ld	(hl), a
                                   6172 ;src/main.c:593: if (enemies[i].visible == 1) {
      0018F6 F8 06                 6173 	ldhl	sp,	#6
      0018F8 7E                    6174 	ld	a, (hl)
      0018F9 3D                    6175 	dec	a
      0018FA 20 74                 6176 	jr	NZ, 00165$
                                   6177 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018FC F8 0E                 6178 	ldhl	sp,	#14
      0018FE 7E                    6179 	ld	a, (hl)
      0018FF B7                    6180 	or	a, a
      001900 20 48                 6181 	jr	NZ, 00146$
      001902 F8 0B                 6182 	ldhl	sp,	#11
      001904 3E AC                 6183 	ld	a, #0xac
      001906 96                    6184 	sub	a, (hl)
      001907 23                    6185 	inc	hl
      001908 3E 00                 6186 	ld	a, #0x00
      00190A 9E                    6187 	sbc	a, (hl)
      00190B 3E 00                 6188 	ld	a, #0x00
      00190D 57                    6189 	ld	d, a
      00190E CB 7E                 6190 	bit	7, (hl)
      001910 28 07                 6191 	jr	Z, 00433$
      001912 CB 7A                 6192 	bit	7, d
      001914 20 08                 6193 	jr	NZ, 00434$
      001916 BF                    6194 	cp	a, a
      001917 18 05                 6195 	jr	00434$
      001919                       6196 00433$:
      001919 CB 7A                 6197 	bit	7, d
      00191B 28 01                 6198 	jr	Z, 00434$
      00191D 37                    6199 	scf
      00191E                       6200 00434$:
      00191E 38 2A                 6201 	jr	C, 00146$
      001920 F8 09                 6202 	ldhl	sp,#9
      001922 2A                    6203 	ld	a, (hl+)
      001923 5F                    6204 	ld	e, a
      001924 56                    6205 	ld	d, (hl)
      001925 1A                    6206 	ld	a, (de)
      001926 6F                    6207 	ld	l, a
                                   6208 ;	spillPairReg hl
                                   6209 ;	spillPairReg hl
      001927 13                    6210 	inc	de
      001928 1A                    6211 	ld	a, (de)
      001929 67                    6212 	ld	h, a
                                   6213 ;	spillPairReg hl
                                   6214 ;	spillPairReg hl
      00192A CB 7C                 6215 	bit	7, h
      00192C 20 1C                 6216 	jr	NZ, 00146$
      00192E 5C                    6217 	ld	e, h
      00192F 16 00                 6218 	ld	d, #0x00
      001931 3E 98                 6219 	ld	a, #0x98
      001933 BD                    6220 	cp	a, l
      001934 3E 00                 6221 	ld	a, #0x00
      001936 9C                    6222 	sbc	a, h
      001937 CB 7B                 6223 	bit	7, e
      001939 28 07                 6224 	jr	Z, 00435$
      00193B CB 7A                 6225 	bit	7, d
      00193D 20 08                 6226 	jr	NZ, 00436$
      00193F BF                    6227 	cp	a, a
      001940 18 05                 6228 	jr	00436$
      001942                       6229 00435$:
      001942 CB 7A                 6230 	bit	7, d
      001944 28 01                 6231 	jr	Z, 00436$
      001946 37                    6232 	scf
      001947                       6233 00436$:
      001947 D2r66r1B              6234 	jp	NC, 00198$
      00194A                       6235 00146$:
                                   6236 ;src/main.c:595: enemies[i].visible = 0;
      00194A AF                    6237 	xor	a, a
      00194B 02                    6238 	ld	(bc), a
                                   6239 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      00194C F8 0F                 6240 	ldhl	sp,	#15
                                   6241 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00194E 6E                    6242 	ld	l, (hl)
      00194F 11r00r00              6243 	ld	de, #_shadow_OAM+0
                                   6244 ;	spillPairReg hl
                                   6245 ;	spillPairReg hl
      001952 26 00                 6246 	ld	h, #0x00
                                   6247 ;	spillPairReg hl
                                   6248 ;	spillPairReg hl
      001954 29                    6249 	add	hl, hl
      001955 29                    6250 	add	hl, hl
      001956 19                    6251 	add	hl, de
      001957 23                    6252 	inc	hl
      001958 23                    6253 	inc	hl
      001959 36 7F                 6254 	ld	(hl), #0x7f
                                   6255 ;src/main.c:597: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00195B F8 0D                 6256 	ldhl	sp,	#13
      00195D 7E                    6257 	ld	a, (hl)
      00195E C6 0B                 6258 	add	a, #0x0b
                                   6259 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001960 6F                    6260 	ld	l, a
      001961 11r00r00              6261 	ld	de, #_shadow_OAM+0
                                   6262 ;	spillPairReg hl
                                   6263 ;	spillPairReg hl
      001964 26 00                 6264 	ld	h, #0x00
                                   6265 ;	spillPairReg hl
                                   6266 ;	spillPairReg hl
      001966 29                    6267 	add	hl, hl
      001967 29                    6268 	add	hl, hl
      001968 19                    6269 	add	hl, de
      001969 23                    6270 	inc	hl
      00196A 23                    6271 	inc	hl
      00196B 36 7F                 6272 	ld	(hl), #0x7f
                                   6273 ;src/main.c:597: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00196D C3r66r1B              6274 	jp	00198$
      001970                       6275 00165$:
                                   6276 ;src/main.c:601: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001970 F8 0E                 6277 	ldhl	sp,	#14
      001972 CB 46                 6278 	bit	0, (hl)
      001974 C2r71r1A              6279 	jp	NZ, 00159$
      001977 F8 0B                 6280 	ldhl	sp,	#11
      001979 2A                    6281 	ld	a, (hl+)
      00197A D6 AC                 6282 	sub	a, #0xac
      00197C 7E                    6283 	ld	a, (hl)
      00197D DE 00                 6284 	sbc	a, #0x00
      00197F 56                    6285 	ld	d, (hl)
      001980 3E 00                 6286 	ld	a, #0x00
      001982 CB 7F                 6287 	bit	7,a
      001984 28 07                 6288 	jr	Z, 00437$
      001986 CB 7A                 6289 	bit	7, d
      001988 20 08                 6290 	jr	NZ, 00438$
      00198A BF                    6291 	cp	a, a
      00198B 18 05                 6292 	jr	00438$
      00198D                       6293 00437$:
      00198D CB 7A                 6294 	bit	7, d
      00198F 28 01                 6295 	jr	Z, 00438$
      001991 37                    6296 	scf
      001992                       6297 00438$:
      001992 D2r71r1A              6298 	jp	NC, 00159$
      001995 F8 09                 6299 	ldhl	sp,#9
      001997 2A                    6300 	ld	a, (hl+)
      001998 5F                    6301 	ld	e, a
      001999 56                    6302 	ld	d, (hl)
      00199A 1A                    6303 	ld	a, (de)
      00199B 6F                    6304 	ld	l, a
                                   6305 ;	spillPairReg hl
                                   6306 ;	spillPairReg hl
      00199C 13                    6307 	inc	de
      00199D 1A                    6308 	ld	a, (de)
      00199E 67                    6309 	ld	h, a
                                   6310 ;	spillPairReg hl
                                   6311 ;	spillPairReg hl
      00199F 5C                    6312 	ld	e, h
      0019A0 AF                    6313 	xor	a, a
      0019A1 57                    6314 	ld	d, a
      0019A2 BD                    6315 	cp	a, l
      0019A3 9C                    6316 	sbc	a, h
      0019A4 CB 7B                 6317 	bit	7, e
      0019A6 28 07                 6318 	jr	Z, 00439$
      0019A8 CB 7A                 6319 	bit	7, d
      0019AA 20 08                 6320 	jr	NZ, 00440$
      0019AC BF                    6321 	cp	a, a
      0019AD 18 05                 6322 	jr	00440$
      0019AF                       6323 00439$:
      0019AF CB 7A                 6324 	bit	7, d
      0019B1 28 01                 6325 	jr	Z, 00440$
      0019B3 37                    6326 	scf
      0019B4                       6327 00440$:
      0019B4 D2r71r1A              6328 	jp	NC, 00159$
      0019B7 7D                    6329 	ld	a, l
      0019B8 D6 98                 6330 	sub	a, #0x98
      0019BA 7C                    6331 	ld	a, h
      0019BB 17                    6332 	rla
      0019BC 3F                    6333 	ccf
      0019BD 1F                    6334 	rra
      0019BE DE 80                 6335 	sbc	a, #0x80
      0019C0 D2r71r1A              6336 	jp	NC, 00159$
                                   6337 ;src/main.c:602: enemies[i].visible = 1;
      0019C3 3E 01                 6338 	ld	a, #0x01
      0019C5 02                    6339 	ld	(bc), a
                                   6340 ;src/main.c:603: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      0019C6 F8 02                 6341 	ldhl	sp,#2
      0019C8 2A                    6342 	ld	a, (hl+)
      0019C9 5F                    6343 	ld	e, a
      0019CA 56                    6344 	ld	d, (hl)
      0019CB 21 06 00              6345 	ld	hl, #0x0006
      0019CE 19                    6346 	add	hl, de
      0019CF 4D                    6347 	ld	c, l
      0019D0 44                    6348 	ld	b, h
      0019D1 0A                    6349 	ld	a, (bc)
      0019D2 F8 0E                 6350 	ldhl	sp,	#14
      0019D4 22                    6351 	ld	(hl+), a
      0019D5 4E                    6352 	ld	c, (hl)
                                   6353 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0019D6 F8 0B                 6354 	ldhl	sp,	#11
      0019D8 79                    6355 	ld	a, c
      0019D9 22                    6356 	ld	(hl+), a
      0019DA 36 00                 6357 	ld	(hl), #0x00
      0019DC 3E 02                 6358 	ld	a, #0x02
      0019DE                       6359 00441$:
      0019DE F8 0B                 6360 	ldhl	sp,	#11
      0019E0 CB 26                 6361 	sla	(hl)
      0019E2 23                    6362 	inc	hl
      0019E3 CB 16                 6363 	rl	(hl)
      0019E5 3D                    6364 	dec	a
      0019E6 20 F6                 6365 	jr	NZ, 00441$
      0019E8 2B                    6366 	dec	hl
      0019E9 2A                    6367 	ld	a, (hl+)
      0019EA 5F                    6368 	ld	e, a
      0019EB 56                    6369 	ld	d, (hl)
      0019EC 21r00r00              6370 	ld	hl, #_shadow_OAM
      0019EF 19                    6371 	add	hl, de
      0019F0 E5                    6372 	push	hl
      0019F1 7D                    6373 	ld	a, l
      0019F2 F8 0B                 6374 	ldhl	sp,	#11
      0019F4 77                    6375 	ld	(hl), a
      0019F5 E1                    6376 	pop	hl
      0019F6 7C                    6377 	ld	a, h
      0019F7 F8 0A                 6378 	ldhl	sp,	#10
      0019F9 32                    6379 	ld	(hl-), a
      0019FA 2A                    6380 	ld	a, (hl+)
      0019FB 5F                    6381 	ld	e, a
      0019FC 56                    6382 	ld	d, (hl)
      0019FD 21 02 00              6383 	ld	hl, #0x0002
      001A00 19                    6384 	add	hl, de
      001A01 E5                    6385 	push	hl
      001A02 7D                    6386 	ld	a, l
      001A03 F8 0D                 6387 	ldhl	sp,	#13
      001A05 77                    6388 	ld	(hl), a
      001A06 E1                    6389 	pop	hl
      001A07 7C                    6390 	ld	a, h
      001A08 F8 0C                 6391 	ldhl	sp,	#12
      001A0A 32                    6392 	ld	(hl-), a
      001A0B 2A                    6393 	ld	a, (hl+)
      001A0C 5F                    6394 	ld	e, a
      001A0D 2A                    6395 	ld	a, (hl+)
      001A0E 23                    6396 	inc	hl
      001A0F 57                    6397 	ld	d, a
      001A10 7E                    6398 	ld	a, (hl)
      001A11 12                    6399 	ld	(de), a
                                   6400 ;src/main.c:604: if (enemies[i].spriteCount == 2) {
      001A12 F8 02                 6401 	ldhl	sp,#2
      001A14 2A                    6402 	ld	a, (hl+)
      001A15 5F                    6403 	ld	e, a
      001A16 56                    6404 	ld	d, (hl)
      001A17 21 08 00              6405 	ld	hl, #0x0008
      001A1A 19                    6406 	add	hl, de
      001A1B 4D                    6407 	ld	c, l
      001A1C 44                    6408 	ld	b, h
      001A1D 0A                    6409 	ld	a, (bc)
      001A1E D6 02                 6410 	sub	a, #0x02
      001A20 C2r66r1B              6411 	jp	NZ,00198$
                                   6412 ;src/main.c:605: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001A23 F8 02                 6413 	ldhl	sp,#2
      001A25 2A                    6414 	ld	a, (hl+)
      001A26 5F                    6415 	ld	e, a
      001A27 56                    6416 	ld	d, (hl)
      001A28 21 07 00              6417 	ld	hl, #0x0007
      001A2B 19                    6418 	add	hl, de
      001A2C 4D                    6419 	ld	c, l
      001A2D 44                    6420 	ld	b, h
      001A2E 0A                    6421 	ld	a, (bc)
      001A2F F8 0F                 6422 	ldhl	sp,	#15
      001A31 32                    6423 	ld	(hl-), a
      001A32 2B                    6424 	dec	hl
      001A33 7E                    6425 	ld	a, (hl)
      001A34 C6 0B                 6426 	add	a, #0x0b
                                   6427 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A36 22                    6428 	ld	(hl+), a
      001A37 36 00                 6429 	ld	(hl), #0x00
      001A39 3E 02                 6430 	ld	a, #0x02
      001A3B                       6431 00444$:
      001A3B F8 0D                 6432 	ldhl	sp,	#13
      001A3D CB 26                 6433 	sla	(hl)
      001A3F 23                    6434 	inc	hl
      001A40 CB 16                 6435 	rl	(hl)
      001A42 3D                    6436 	dec	a
      001A43 20 F6                 6437 	jr	NZ, 00444$
      001A45 2B                    6438 	dec	hl
      001A46 2A                    6439 	ld	a, (hl+)
      001A47 5F                    6440 	ld	e, a
      001A48 56                    6441 	ld	d, (hl)
      001A49 21r00r00              6442 	ld	hl, #_shadow_OAM
      001A4C 19                    6443 	add	hl, de
      001A4D E5                    6444 	push	hl
      001A4E 7D                    6445 	ld	a, l
      001A4F F8 0D                 6446 	ldhl	sp,	#13
      001A51 77                    6447 	ld	(hl), a
      001A52 E1                    6448 	pop	hl
      001A53 7C                    6449 	ld	a, h
      001A54 F8 0C                 6450 	ldhl	sp,	#12
      001A56 32                    6451 	ld	(hl-), a
      001A57 2A                    6452 	ld	a, (hl+)
      001A58 5F                    6453 	ld	e, a
      001A59 56                    6454 	ld	d, (hl)
      001A5A 21 02 00              6455 	ld	hl, #0x0002
      001A5D 19                    6456 	add	hl, de
      001A5E E5                    6457 	push	hl
      001A5F 7D                    6458 	ld	a, l
      001A60 F8 0F                 6459 	ldhl	sp,	#15
      001A62 77                    6460 	ld	(hl), a
      001A63 E1                    6461 	pop	hl
      001A64 7C                    6462 	ld	a, h
      001A65 F8 0E                 6463 	ldhl	sp,	#14
      001A67 32                    6464 	ld	(hl-), a
      001A68 2A                    6465 	ld	a, (hl+)
      001A69 5F                    6466 	ld	e, a
      001A6A 2A                    6467 	ld	a, (hl+)
      001A6B 57                    6468 	ld	d, a
      001A6C 7E                    6469 	ld	a, (hl)
      001A6D 12                    6470 	ld	(de), a
                                   6471 ;src/main.c:605: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001A6E C3r66r1B              6472 	jp	00198$
      001A71                       6473 00159$:
                                   6474 ;src/main.c:608: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001A71 F8 07                 6475 	ldhl	sp,	#7
      001A73 2A                    6476 	ld	a, (hl+)
      001A74 D6 9C                 6477 	sub	a, #0x9c
      001A76 7E                    6478 	ld	a, (hl)
      001A77 DE FF                 6479 	sbc	a, #0xff
      001A79 56                    6480 	ld	d, (hl)
      001A7A 3E FF                 6481 	ld	a, #0xff
      001A7C CB 7F                 6482 	bit	7,a
      001A7E 28 07                 6483 	jr	Z, 00445$
      001A80 CB 7A                 6484 	bit	7, d
      001A82 20 08                 6485 	jr	NZ, 00446$
      001A84 BF                    6486 	cp	a, a
      001A85 18 05                 6487 	jr	00446$
      001A87                       6488 00445$:
      001A87 CB 7A                 6489 	bit	7, d
      001A89 28 01                 6490 	jr	Z, 00446$
      001A8B 37                    6491 	scf
      001A8C                       6492 00446$:
      001A8C 38 4F                 6493 	jr	C, 00153$
      001A8E F8 0B                 6494 	ldhl	sp,	#11
      001A90 3E 10                 6495 	ld	a, #0x10
      001A92 96                    6496 	sub	a, (hl)
      001A93 23                    6497 	inc	hl
      001A94 3E 01                 6498 	ld	a, #0x01
      001A96 9E                    6499 	sbc	a, (hl)
      001A97 3E 01                 6500 	ld	a, #0x01
      001A99 57                    6501 	ld	d, a
      001A9A CB 7E                 6502 	bit	7, (hl)
      001A9C 28 07                 6503 	jr	Z, 00447$
      001A9E CB 7A                 6504 	bit	7, d
      001AA0 20 08                 6505 	jr	NZ, 00448$
      001AA2 BF                    6506 	cp	a, a
      001AA3 18 05                 6507 	jr	00448$
      001AA5                       6508 00447$:
      001AA5 CB 7A                 6509 	bit	7, d
      001AA7 28 01                 6510 	jr	Z, 00448$
      001AA9 37                    6511 	scf
      001AAA                       6512 00448$:
      001AAA 38 31                 6513 	jr	C, 00153$
      001AAC F8 09                 6514 	ldhl	sp,#9
      001AAE 2A                    6515 	ld	a, (hl+)
      001AAF 5F                    6516 	ld	e, a
      001AB0 56                    6517 	ld	d, (hl)
      001AB1 1A                    6518 	ld	a, (de)
      001AB2 4F                    6519 	ld	c, a
      001AB3 13                    6520 	inc	de
      001AB4 1A                    6521 	ld	a, (de)
      001AB5 47                    6522 	ld	b, a
      001AB6 79                    6523 	ld	a, c
      001AB7 D6 9C                 6524 	sub	a, #0x9c
      001AB9 78                    6525 	ld	a, b
      001ABA 17                    6526 	rla
      001ABB 3F                    6527 	ccf
      001ABC 1F                    6528 	rra
      001ABD DE 7F                 6529 	sbc	a, #0x7f
      001ABF 38 1C                 6530 	jr	C, 00153$
      001AC1 58                    6531 	ld	e, b
      001AC2 16 00                 6532 	ld	d, #0x00
      001AC4 3E FC                 6533 	ld	a, #0xfc
      001AC6 B9                    6534 	cp	a, c
      001AC7 3E 00                 6535 	ld	a, #0x00
      001AC9 98                    6536 	sbc	a, b
      001ACA CB 7B                 6537 	bit	7, e
      001ACC 28 07                 6538 	jr	Z, 00449$
      001ACE CB 7A                 6539 	bit	7, d
      001AD0 20 08                 6540 	jr	NZ, 00450$
      001AD2 BF                    6541 	cp	a, a
      001AD3 18 05                 6542 	jr	00450$
      001AD5                       6543 00449$:
      001AD5 CB 7A                 6544 	bit	7, d
      001AD7 28 01                 6545 	jr	Z, 00450$
      001AD9 37                    6546 	scf
      001ADA                       6547 00450$:
      001ADA D2r66r1B              6548 	jp	NC, 00198$
      001ADD                       6549 00153$:
                                   6550 ;src/main.c:609: enemies[i].alive = 0;
      001ADD F8 04                 6551 	ldhl	sp,	#4
      001ADF 2A                    6552 	ld	a,	(hl+)
      001AE0 66                    6553 	ld	h, (hl)
      001AE1 6F                    6554 	ld	l, a
      001AE2 36 00                 6555 	ld	(hl), #0x00
                                   6556 ;src/main.c:610: set_sprite_tile(10+(i<<1), 0x7f);
      001AE4 F8 0F                 6557 	ldhl	sp,	#15
                                   6558 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001AE6 3A                    6559 	ld	a, (hl-)
      001AE7 22                    6560 	ld	(hl+), a
      001AE8 36 00                 6561 	ld	(hl), #0x00
      001AEA 3E 02                 6562 	ld	a, #0x02
      001AEC                       6563 00451$:
      001AEC F8 0E                 6564 	ldhl	sp,	#14
      001AEE CB 26                 6565 	sla	(hl)
      001AF0 23                    6566 	inc	hl
      001AF1 CB 16                 6567 	rl	(hl)
      001AF3 3D                    6568 	dec	a
      001AF4 20 F6                 6569 	jr	NZ, 00451$
      001AF6 2B                    6570 	dec	hl
      001AF7 2A                    6571 	ld	a, (hl+)
      001AF8 5F                    6572 	ld	e, a
      001AF9 56                    6573 	ld	d, (hl)
      001AFA 21r00r00              6574 	ld	hl, #_shadow_OAM
      001AFD 19                    6575 	add	hl, de
      001AFE E5                    6576 	push	hl
      001AFF 7D                    6577 	ld	a, l
      001B00 F8 0D                 6578 	ldhl	sp,	#13
      001B02 77                    6579 	ld	(hl), a
      001B03 E1                    6580 	pop	hl
      001B04 7C                    6581 	ld	a, h
      001B05 F8 0C                 6582 	ldhl	sp,	#12
      001B07 32                    6583 	ld	(hl-), a
      001B08 2A                    6584 	ld	a, (hl+)
      001B09 5F                    6585 	ld	e, a
      001B0A 56                    6586 	ld	d, (hl)
      001B0B 21 02 00              6587 	ld	hl, #0x0002
      001B0E 19                    6588 	add	hl, de
      001B0F E5                    6589 	push	hl
      001B10 7D                    6590 	ld	a, l
      001B11 F8 10                 6591 	ldhl	sp,	#16
      001B13 77                    6592 	ld	(hl), a
      001B14 E1                    6593 	pop	hl
      001B15 7C                    6594 	ld	a, h
      001B16 F8 0F                 6595 	ldhl	sp,	#15
      001B18 32                    6596 	ld	(hl-), a
      001B19 2A                    6597 	ld	a,	(hl+)
      001B1A 66                    6598 	ld	h, (hl)
      001B1B 6F                    6599 	ld	l, a
      001B1C 36 7F                 6600 	ld	(hl), #0x7f
                                   6601 ;src/main.c:611: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001B1E F8 0D                 6602 	ldhl	sp,	#13
      001B20 2A                    6603 	ld	a, (hl+)
      001B21 23                    6604 	inc	hl
      001B22 C6 0B                 6605 	add	a, #0x0b
      001B24 77                    6606 	ld	(hl), a
                                   6607 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B25 3A                    6608 	ld	a, (hl-)
      001B26 22                    6609 	ld	(hl+), a
      001B27 36 00                 6610 	ld	(hl), #0x00
      001B29 3E 02                 6611 	ld	a, #0x02
      001B2B                       6612 00452$:
      001B2B F8 0E                 6613 	ldhl	sp,	#14
      001B2D CB 26                 6614 	sla	(hl)
      001B2F 23                    6615 	inc	hl
      001B30 CB 16                 6616 	rl	(hl)
      001B32 3D                    6617 	dec	a
      001B33 20 F6                 6618 	jr	NZ, 00452$
      001B35 2B                    6619 	dec	hl
      001B36 2A                    6620 	ld	a, (hl+)
      001B37 5F                    6621 	ld	e, a
      001B38 56                    6622 	ld	d, (hl)
      001B39 21r00r00              6623 	ld	hl, #_shadow_OAM
      001B3C 19                    6624 	add	hl, de
      001B3D E5                    6625 	push	hl
      001B3E 7D                    6626 	ld	a, l
      001B3F F8 0E                 6627 	ldhl	sp,	#14
      001B41 77                    6628 	ld	(hl), a
      001B42 E1                    6629 	pop	hl
      001B43 7C                    6630 	ld	a, h
      001B44 F8 0D                 6631 	ldhl	sp,	#13
      001B46 32                    6632 	ld	(hl-), a
      001B47 2A                    6633 	ld	a, (hl+)
      001B48 5F                    6634 	ld	e, a
      001B49 56                    6635 	ld	d, (hl)
      001B4A 21 02 00              6636 	ld	hl, #0x0002
      001B4D 19                    6637 	add	hl, de
      001B4E E5                    6638 	push	hl
      001B4F 7D                    6639 	ld	a, l
      001B50 F8 10                 6640 	ldhl	sp,	#16
      001B52 77                    6641 	ld	(hl), a
      001B53 E1                    6642 	pop	hl
      001B54 7C                    6643 	ld	a, h
      001B55 F8 0F                 6644 	ldhl	sp,	#15
      001B57 32                    6645 	ld	(hl-), a
      001B58 2A                    6646 	ld	a,	(hl+)
      001B59 66                    6647 	ld	h, (hl)
      001B5A 6F                    6648 	ld	l, a
      001B5B 36 7F                 6649 	ld	(hl), #0x7f
                                   6650 ;src/main.c:612: initEnemy(i);
      001B5D F8 01                 6651 	ldhl	sp,	#1
      001B5F 7E                    6652 	ld	a, (hl)
      001B60 F5                    6653 	push	af
      001B61 33                    6654 	inc	sp
      001B62 CDr64r11              6655 	call	_initEnemy
      001B65 33                    6656 	inc	sp
      001B66                       6657 00198$:
                                   6658 ;src/main.c:618: }
      001B66 E8 10                 6659 	add	sp, #16
      001B68 C9                    6660 	ret
                                   6661 ;src/main.c:623: void move() {
                                   6662 ;	---------------------------------
                                   6663 ; Function move
                                   6664 ; ---------------------------------
      001B69                       6665 _move::
      001B69 E8 F8                 6666 	add	sp, #-8
                                   6667 ;src/main.c:626: if (joydata & J_A) {
      001B6B FArF5r00              6668 	ld	a, (#_joydata)
      001B6E CB 67                 6669 	bit	4, a
      001B70 28 16                 6670 	jr	Z, 00102$
                                   6671 ;src/main.c:627: xSpeed += xDir + xDir + xDir;
      001B72 21rA7r00              6672 	ld	hl, #_xDir
      001B75 7E                    6673 	ld	a, (hl)
      001B76 87                    6674 	add	a, a
      001B77 86                    6675 	add	a, (hl)
      001B78 21rA9r00              6676 	ld	hl, #_xSpeed
      001B7B 86                    6677 	add	a, (hl)
      001B7C 77                    6678 	ld	(hl), a
                                   6679 ;src/main.c:628: ySpeed += yDir + yDir + yDir;
      001B7D 21rA8r00              6680 	ld	hl, #_yDir
      001B80 7E                    6681 	ld	a, (hl)
      001B81 87                    6682 	add	a, a
      001B82 86                    6683 	add	a, (hl)
      001B83 21rAAr00              6684 	ld	hl, #_ySpeed
      001B86 86                    6685 	add	a, (hl)
      001B87 77                    6686 	ld	(hl), a
      001B88                       6687 00102$:
                                   6688 ;src/main.c:632: xSpeed = clamp(xSpeed, -100, 100);
      001B88 21rA9r00              6689 	ld	hl, #_xSpeed
      001B8B 4E                    6690 	ld	c, (hl)
                                   6691 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      001B8C 79                    6692 	ld	a, c
      001B8D EE 80                 6693 	xor	a, #0x80
      001B8F D6 1C                 6694 	sub	a, #0x1c
      001B91 30 04                 6695 	jr	NC, 00165$
      001B93 0E 9C                 6696 	ld	c, #0x9c
      001B95 18 19                 6697 	jr	00166$
      001B97                       6698 00165$:
      001B97 59                    6699 	ld	e, c
      001B98 3E 64                 6700 	ld	a,#0x64
      001B9A 57                    6701 	ld	d,a
      001B9B 91                    6702 	sub	a, c
      001B9C CB 7B                 6703 	bit	7, e
      001B9E 28 07                 6704 	jr	Z, 00342$
      001BA0 CB 7A                 6705 	bit	7, d
      001BA2 20 08                 6706 	jr	NZ, 00343$
      001BA4 BF                    6707 	cp	a, a
      001BA5 18 05                 6708 	jr	00343$
      001BA7                       6709 00342$:
      001BA7 CB 7A                 6710 	bit	7, d
      001BA9 28 01                 6711 	jr	Z, 00343$
      001BAB 37                    6712 	scf
      001BAC                       6713 00343$:
      001BAC 30 02                 6714 	jr	NC, 00167$
      001BAE 0E 64                 6715 	ld	c, #0x64
      001BB0                       6716 00167$:
      001BB0                       6717 00166$:
      001BB0 21rA9r00              6718 	ld	hl, #_xSpeed
      001BB3 71                    6719 	ld	(hl), c
                                   6720 ;src/main.c:633: ySpeed = clamp(ySpeed, -100, 100);
      001BB4 21rAAr00              6721 	ld	hl, #_ySpeed
      001BB7 4E                    6722 	ld	c, (hl)
                                   6723 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      001BB8 79                    6724 	ld	a, c
      001BB9 EE 80                 6725 	xor	a, #0x80
      001BBB D6 1C                 6726 	sub	a, #0x1c
      001BBD 30 04                 6727 	jr	NC, 00169$
      001BBF 0E 9C                 6728 	ld	c, #0x9c
      001BC1 18 19                 6729 	jr	00170$
      001BC3                       6730 00169$:
      001BC3 59                    6731 	ld	e, c
      001BC4 3E 64                 6732 	ld	a,#0x64
      001BC6 57                    6733 	ld	d,a
      001BC7 91                    6734 	sub	a, c
      001BC8 CB 7B                 6735 	bit	7, e
      001BCA 28 07                 6736 	jr	Z, 00344$
      001BCC CB 7A                 6737 	bit	7, d
      001BCE 20 08                 6738 	jr	NZ, 00345$
      001BD0 BF                    6739 	cp	a, a
      001BD1 18 05                 6740 	jr	00345$
      001BD3                       6741 00344$:
      001BD3 CB 7A                 6742 	bit	7, d
      001BD5 28 01                 6743 	jr	Z, 00345$
      001BD7 37                    6744 	scf
      001BD8                       6745 00345$:
      001BD8 30 02                 6746 	jr	NC, 00171$
      001BDA 0E 64                 6747 	ld	c, #0x64
      001BDC                       6748 00171$:
      001BDC                       6749 00170$:
      001BDC 21rAAr00              6750 	ld	hl, #_ySpeed
      001BDF 71                    6751 	ld	(hl), c
                                   6752 ;src/main.c:635: xOverflow = 0;
      001BE0 AF                    6753 	xor	a, a
      001BE1 21rB5r00              6754 	ld	hl, #_xOverflow
      001BE4 22                    6755 	ld	(hl+), a
      001BE5 77                    6756 	ld	(hl), a
                                   6757 ;src/main.c:636: yOverflow = 0;
      001BE6 AF                    6758 	xor	a, a
      001BE7 21rB7r00              6759 	ld	hl, #_yOverflow
      001BEA 22                    6760 	ld	(hl+), a
      001BEB 77                    6761 	ld	(hl), a
                                   6762 ;src/main.c:641: uint8_t xCollisionPoint = playerDrawX; 
      001BEC 21rAFr00              6763 	ld	hl, #_playerDrawX
      001BEF 4E                    6764 	ld	c, (hl)
                                   6765 ;src/main.c:644: xCollisionPoint = playerDrawX +8; //right edge
      001BF0 46                    6766 	ld	b, (hl)
                                   6767 ;src/main.c:643: if (xSpeed > 0) {
      001BF1 21rA9r00              6768 	ld	hl, #_xSpeed
      001BF4 5E                    6769 	ld	e, (hl)
      001BF5 AF                    6770 	xor	a, a
      001BF6 57                    6771 	ld	d, a
      001BF7 96                    6772 	sub	a, (hl)
      001BF8 CB 7B                 6773 	bit	7, e
      001BFA 28 07                 6774 	jr	Z, 00346$
      001BFC CB 7A                 6775 	bit	7, d
      001BFE 20 08                 6776 	jr	NZ, 00347$
      001C00 BF                    6777 	cp	a, a
      001C01 18 05                 6778 	jr	00347$
      001C03                       6779 00346$:
      001C03 CB 7A                 6780 	bit	7, d
      001C05 28 01                 6781 	jr	Z, 00347$
      001C07 37                    6782 	scf
      001C08                       6783 00347$:
      001C08 30 04                 6784 	jr	NC, 00104$
                                   6785 ;src/main.c:644: xCollisionPoint = playerDrawX +8; //right edge
      001C0A 78                    6786 	ld	a, b
      001C0B C6 08                 6787 	add	a, #0x08
      001C0D 4F                    6788 	ld	c, a
      001C0E                       6789 00104$:
                                   6790 ;src/main.c:646: if (xSpeed < 0) {
      001C0E FArA9r00              6791 	ld	a, (#_xSpeed)
      001C11 CB 7F                 6792 	bit	7, a
      001C13 28 04                 6793 	jr	Z, 00106$
                                   6794 ;src/main.c:647: xCollisionPoint = playerDrawX -8; //left edge
      001C15 78                    6795 	ld	a, b
      001C16 C6 F8                 6796 	add	a, #0xf8
      001C18 4F                    6797 	ld	c, a
      001C19                       6798 00106$:
                                   6799 ;src/main.c:651: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001C19 06 00                 6800 	ld	b, #0x00
      001C1B 79                    6801 	ld	a, c
      001C1C 21rB1r00              6802 	ld	hl, #_bgX
      001C1F 86                    6803 	add	a, (hl)
      001C20 23                    6804 	inc	hl
      001C21 4F                    6805 	ld	c, a
      001C22 78                    6806 	ld	a, b
      001C23 8E                    6807 	adc	a, (hl)
      001C24 47                    6808 	ld	b, a
      001C25 CB 28                 6809 	sra	b
      001C27 CB 19                 6810 	rr	c
      001C29 CB 28                 6811 	sra	b
      001C2B CB 19                 6812 	rr	c
      001C2D CB 28                 6813 	sra	b
      001C2F CB 19                 6814 	rr	c
      001C31 11 20 00              6815 	ld	de, #0x0020
      001C34 D5                    6816 	push	de
      001C35 C5                    6817 	push	bc
      001C36 CDr00r00              6818 	call	__modsint
      001C39 E8 04                 6819 	add	sp, #4
                                   6820 ;src/main.c:655: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001C3B 21rB0r00              6821 	ld	hl, #_playerDrawY
      001C3E 4E                    6822 	ld	c, (hl)
      001C3F 06 00                 6823 	ld	b, #0x00
      001C41 79                    6824 	ld	a, c
      001C42 21rB3r00              6825 	ld	hl, #_bgY
      001C45 86                    6826 	add	a, (hl)
      001C46 23                    6827 	inc	hl
      001C47 4F                    6828 	ld	c, a
      001C48 78                    6829 	ld	a, b
      001C49 8E                    6830 	adc	a, (hl)
      001C4A 47                    6831 	ld	b, a
      001C4B CB 28                 6832 	sra	b
      001C4D CB 19                 6833 	rr	c
      001C4F CB 28                 6834 	sra	b
      001C51 CB 19                 6835 	rr	c
      001C53 CB 28                 6836 	sra	b
      001C55 CB 19                 6837 	rr	c
      001C57 D5                    6838 	push	de
      001C58 21 20 00              6839 	ld	hl, #0x0020
      001C5B E5                    6840 	push	hl
      001C5C C5                    6841 	push	bc
      001C5D CDr00r00              6842 	call	__modsint
      001C60 E8 04                 6843 	add	sp, #4
      001C62 6B                    6844 	ld	l, e
                                   6845 ;	spillPairReg hl
                                   6846 ;	spillPairReg hl
                                   6847 ;	spillPairReg hl
                                   6848 ;	spillPairReg hl
      001C63 D1                    6849 	pop	de
                                   6850 ;src/main.c:658: uint16_t ind = 32*bgindY + bgindX;
      001C64 26 00                 6851 	ld	h, #0x00
                                   6852 ;	spillPairReg hl
                                   6853 ;	spillPairReg hl
      001C66 29                    6854 	add	hl, hl
      001C67 29                    6855 	add	hl, hl
      001C68 29                    6856 	add	hl, hl
      001C69 29                    6857 	add	hl, hl
      001C6A 29                    6858 	add	hl, hl
      001C6B 19                    6859 	add	hl, de
      001C6C 5D                    6860 	ld	e, l
      001C6D 54                    6861 	ld	d, h
                                   6862 ;src/main.c:659: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001C6E 0E 01                 6863 	ld	c, #0x01
                                   6864 ;src/main.c:660: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001C70 21r87r00              6865 	ld	hl, #_background1
      001C73 19                    6866 	add	hl, de
      001C74 46                    6867 	ld	b, (hl)
      001C75 1E 00                 6868 	ld	e, #0x00
      001C77                       6869 00158$:
      001C77 FAr89r0B              6870 	ld	a, (#_BLANKSIZE)
      001C7A F8 02                 6871 	ldhl	sp,	#2
      001C7C 77                    6872 	ld	(hl), a
      001C7D 7B                    6873 	ld	a, e
      001C7E 96                    6874 	sub	a, (hl)
      001C7F 30 11                 6875 	jr	NC, 00109$
                                   6876 ;src/main.c:661: if (background1[ind] == BLANK[i] ) {
      001C81 21r8Ar0B              6877 	ld	hl, #_BLANK
      001C84 16 00                 6878 	ld	d, #0x00
      001C86 19                    6879 	add	hl, de
      001C87 56                    6880 	ld	d, (hl)
      001C88 78                    6881 	ld	a, b
                                   6882 ;src/main.c:662: result = 0;
      001C89 92                    6883 	sub	a,d
      001C8A 20 03                 6884 	jr	NZ, 00159$
      001C8C 4F                    6885 	ld	c,a
                                   6886 ;src/main.c:663: break;
      001C8D 18 03                 6887 	jr	00109$
      001C8F                       6888 00159$:
                                   6889 ;src/main.c:660: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001C8F 1C                    6890 	inc	e
      001C90 18 E5                 6891 	jr	00158$
      001C92                       6892 00109$:
                                   6893 ;src/main.c:667: if (result == 0) {
      001C92 79                    6894 	ld	a, c
      001C93 B7                    6895 	or	a, a
      001C94 C2r62r1D              6896 	jp	NZ, 00114$
                                   6897 ;src/main.c:668: playerX+=xSpeed;
      001C97 FArA9r00              6898 	ld	a, (#_xSpeed)
      001C9A 4F                    6899 	ld	c, a
      001C9B 07                    6900 	rlca
      001C9C 9F                    6901 	sbc	a, a
      001C9D 47                    6902 	ld	b, a
      001C9E 21rABr00              6903 	ld	hl, #_playerX
      001CA1 6E                    6904 	ld	l, (hl)
                                   6905 ;	spillPairReg hl
                                   6906 ;	spillPairReg hl
      001CA2 FArACr00              6907 	ld	a, (_playerX + 1)
      001CA5 67                    6908 	ld	h, a
                                   6909 ;	spillPairReg hl
                                   6910 ;	spillPairReg hl
      001CA6 09                    6911 	add	hl, bc
      001CA7 4D                    6912 	ld	c, l
      001CA8 44                    6913 	ld	b, h
      001CA9 21rABr00              6914 	ld	hl, #_playerX
      001CAC 79                    6915 	ld	a, c
      001CAD 22                    6916 	ld	(hl+), a
                                   6917 ;src/main.c:670: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001CAE 78                    6918 	ld	a, b
      001CAF 32                    6919 	ld	(hl-), a
      001CB0 2A                    6920 	ld	a, (hl+)
      001CB1 4F                    6921 	ld	c, a
      001CB2 46                    6922 	ld	b, (hl)
      001CB3 79                    6923 	ld	a, c
      001CB4 D6 80                 6924 	sub	a, #0x80
      001CB6 78                    6925 	ld	a, b
      001CB7 DE 08                 6926 	sbc	a, #0x08
      001CB9 30 05                 6927 	jr	NC, 00173$
      001CBB 01 80 08              6928 	ld	bc, #0x0880
      001CBE 18 0B                 6929 	jr	00174$
      001CC0                       6930 00173$:
      001CC0 3E 80                 6931 	ld	a, #0x80
      001CC2 B9                    6932 	cp	a, c
      001CC3 3E 0B                 6933 	ld	a, #0x0b
      001CC5 98                    6934 	sbc	a, b
      001CC6 30 03                 6935 	jr	NC, 00175$
      001CC8 01 80 0B              6936 	ld	bc, #0x0b80
      001CCB                       6937 00175$:
      001CCB                       6938 00174$:
      001CCB 59                    6939 	ld	e,c
      001CCC 50                    6940 	ld	d,b
                                   6941 ;src/main.c:672: xOverflow = (playerX - limitedPlayerX);
      001CCD FArABr00              6942 	ld	a, (#_playerX)
      001CD0 93                    6943 	sub	a, e
      001CD1 EArB5r00              6944 	ld	(#_xOverflow),a
      001CD4 FArACr00              6945 	ld	a, (#_playerX + 1)
      001CD7 9A                    6946 	sbc	a, d
      001CD8 21rB6r00              6947 	ld	hl, #_xOverflow + 1
                                   6948 ;src/main.c:673: if (xOverflow >= 0) {
      001CDB 32                    6949 	ld	(hl-), a
      001CDC 6E                    6950 	ld	l, (hl)
                                   6951 ;	spillPairReg hl
                                   6952 ;	spillPairReg hl
      001CDD FArB6r00              6953 	ld	a, (_xOverflow + 1)
                                   6954 ;	spillPairReg hl
                                   6955 ;	spillPairReg hl
      001CE0 CB 7F                 6956 	bit	7,a
      001CE2 20 22                 6957 	jr	NZ, 00111$
                                   6958 ;src/main.c:674: xOverflow = xOverflow >> 5;
      001CE4 21rB6r00              6959 	ld	hl, #_xOverflow + 1
      001CE7 CB 2E                 6960 	sra	(hl)
      001CE9 2B                    6961 	dec	hl
      001CEA CB 1E                 6962 	rr	(hl)
      001CEC 23                    6963 	inc	hl
      001CED CB 2E                 6964 	sra	(hl)
      001CEF 2B                    6965 	dec	hl
      001CF0 CB 1E                 6966 	rr	(hl)
      001CF2 23                    6967 	inc	hl
      001CF3 CB 2E                 6968 	sra	(hl)
      001CF5 2B                    6969 	dec	hl
      001CF6 CB 1E                 6970 	rr	(hl)
      001CF8 23                    6971 	inc	hl
      001CF9 CB 2E                 6972 	sra	(hl)
      001CFB 2B                    6973 	dec	hl
      001CFC CB 1E                 6974 	rr	(hl)
      001CFE 23                    6975 	inc	hl
      001CFF CB 2E                 6976 	sra	(hl)
      001D01 2B                    6977 	dec	hl
      001D02 CB 1E                 6978 	rr	(hl)
      001D04 18 25                 6979 	jr	00112$
      001D06                       6980 00111$:
                                   6981 ;src/main.c:677: xOverflow = -((-xOverflow) >> 5);
      001D06 AF                    6982 	xor	a, a
      001D07 21rB5r00              6983 	ld	hl, #_xOverflow
      001D0A 96                    6984 	sub	a, (hl)
      001D0B 23                    6985 	inc	hl
      001D0C 5F                    6986 	ld	e, a
      001D0D 9F                    6987 	sbc	a, a
      001D0E 96                    6988 	sub	a, (hl)
      001D0F 2B                    6989 	dec	hl
      001D10 57                    6990 	ld	d, a
      001D11 CB 2A                 6991 	sra	d
      001D13 CB 1B                 6992 	rr	e
      001D15 CB 2A                 6993 	sra	d
      001D17 CB 1B                 6994 	rr	e
      001D19 CB 2A                 6995 	sra	d
      001D1B CB 1B                 6996 	rr	e
      001D1D CB 2A                 6997 	sra	d
      001D1F CB 1B                 6998 	rr	e
      001D21 CB 2A                 6999 	sra	d
      001D23 CB 1B                 7000 	rr	e
      001D25 AF                    7001 	xor	a, a
      001D26 93                    7002 	sub	a, e
      001D27 22                    7003 	ld	(hl+), a
      001D28 9F                    7004 	sbc	a, a
      001D29 92                    7005 	sub	a, d
      001D2A 77                    7006 	ld	(hl), a
      001D2B                       7007 00112$:
                                   7008 ;src/main.c:679: bgX += xOverflow;
      001D2B FArB1r00              7009 	ld	a, (#_bgX)
      001D2E 21rB5r00              7010 	ld	hl, #_xOverflow
      001D31 86                    7011 	add	a, (hl)
      001D32 21rB1r00              7012 	ld	hl, #_bgX
      001D35 22                    7013 	ld	(hl+), a
      001D36 7E                    7014 	ld	a, (hl)
      001D37 21rB6r00              7015 	ld	hl, #_xOverflow + 1
      001D3A 8E                    7016 	adc	a, (hl)
      001D3B EArB2r00              7017 	ld	(#_bgX + 1),a
                                   7018 ;src/main.c:680: playerX = limitedPlayerX;
      001D3E 21rABr00              7019 	ld	hl, #_playerX
      001D41 79                    7020 	ld	a, c
      001D42 22                    7021 	ld	(hl+), a
                                   7022 ;src/main.c:681: playerDrawX=playerX >> 5;
      001D43 78                    7023 	ld	a, b
      001D44 32                    7024 	ld	(hl-), a
      001D45 2A                    7025 	ld	a, (hl+)
      001D46 4F                    7026 	ld	c, a
      001D47 46                    7027 	ld	b, (hl)
      001D48 CB 38                 7028 	srl	b
      001D4A CB 19                 7029 	rr	c
      001D4C CB 38                 7030 	srl	b
      001D4E CB 19                 7031 	rr	c
      001D50 CB 38                 7032 	srl	b
      001D52 CB 19                 7033 	rr	c
      001D54 CB 38                 7034 	srl	b
      001D56 CB 19                 7035 	rr	c
      001D58 CB 38                 7036 	srl	b
      001D5A CB 19                 7037 	rr	c
      001D5C 21rAFr00              7038 	ld	hl, #_playerDrawX
      001D5F 71                    7039 	ld	(hl), c
      001D60 18 05                 7040 	jr	00115$
      001D62                       7041 00114$:
                                   7042 ;src/main.c:689: xSpeed = 0;
      001D62 21rA9r00              7043 	ld	hl, #_xSpeed
      001D65 36 00                 7044 	ld	(hl), #0x00
      001D67                       7045 00115$:
                                   7046 ;src/main.c:697: uint8_t yCollisionPoint = playerDrawY; 
      001D67 FArB0r00              7047 	ld	a, (#_playerDrawY)
      001D6A F8 07                 7048 	ldhl	sp,	#7
      001D6C 77                    7049 	ld	(hl), a
                                   7050 ;src/main.c:700: yCollisionPoint = playerDrawY +8; //bottom edge
      001D6D 21rB0r00              7051 	ld	hl, #_playerDrawY
      001D70 4E                    7052 	ld	c, (hl)
                                   7053 ;src/main.c:699: if (ySpeed > 0) {
      001D71 21rAAr00              7054 	ld	hl, #_ySpeed
      001D74 5E                    7055 	ld	e, (hl)
      001D75 AF                    7056 	xor	a, a
      001D76 57                    7057 	ld	d, a
      001D77 96                    7058 	sub	a, (hl)
      001D78 CB 7B                 7059 	bit	7, e
      001D7A 28 07                 7060 	jr	Z, 00350$
      001D7C CB 7A                 7061 	bit	7, d
      001D7E 20 08                 7062 	jr	NZ, 00351$
      001D80 BF                    7063 	cp	a, a
      001D81 18 05                 7064 	jr	00351$
      001D83                       7065 00350$:
      001D83 CB 7A                 7066 	bit	7, d
      001D85 28 01                 7067 	jr	Z, 00351$
      001D87 37                    7068 	scf
      001D88                       7069 00351$:
      001D88 30 06                 7070 	jr	NC, 00117$
                                   7071 ;src/main.c:700: yCollisionPoint = playerDrawY +8; //bottom edge
      001D8A 79                    7072 	ld	a, c
      001D8B C6 08                 7073 	add	a, #0x08
      001D8D F8 07                 7074 	ldhl	sp,	#7
      001D8F 77                    7075 	ld	(hl), a
      001D90                       7076 00117$:
                                   7077 ;src/main.c:702: if (ySpeed < 0) {
      001D90 FArAAr00              7078 	ld	a, (#_ySpeed)
      001D93 CB 7F                 7079 	bit	7, a
      001D95 28 06                 7080 	jr	Z, 00119$
                                   7081 ;src/main.c:703: yCollisionPoint = playerDrawY -8; //top edge, 
      001D97 79                    7082 	ld	a, c
      001D98 C6 F8                 7083 	add	a, #0xf8
      001D9A F8 07                 7084 	ldhl	sp,	#7
      001D9C 77                    7085 	ld	(hl), a
      001D9D                       7086 00119$:
                                   7087 ;src/main.c:707: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001D9D FArAFr00              7088 	ld	a, (#_playerDrawX)
      001DA0 0E 00                 7089 	ld	c, #0x00
      001DA2 F8 03                 7090 	ldhl	sp,	#3
      001DA4 22                    7091 	ld	(hl+), a
      001DA5 79                    7092 	ld	a, c
      001DA6 32                    7093 	ld	(hl-), a
      001DA7 2A                    7094 	ld	a, (hl+)
      001DA8 5F                    7095 	ld	e, a
      001DA9 56                    7096 	ld	d, (hl)
      001DAA 21rB1r00              7097 	ld	hl, #_bgX
      001DAD 2A                    7098 	ld	a,	(hl+)
      001DAE 66                    7099 	ld	h, (hl)
      001DAF 6F                    7100 	ld	l, a
      001DB0 19                    7101 	add	hl, de
      001DB1 E5                    7102 	push	hl
      001DB2 7D                    7103 	ld	a, l
      001DB3 F8 07                 7104 	ldhl	sp,	#7
      001DB5 77                    7105 	ld	(hl), a
      001DB6 E1                    7106 	pop	hl
      001DB7 7C                    7107 	ld	a, h
      001DB8 F8 06                 7108 	ldhl	sp,	#6
      001DBA 77                    7109 	ld	(hl), a
      001DBB CB 2E                 7110 	sra	(hl)
      001DBD 2B                    7111 	dec	hl
      001DBE CB 1E                 7112 	rr	(hl)
      001DC0 23                    7113 	inc	hl
      001DC1 CB 2E                 7114 	sra	(hl)
      001DC3 2B                    7115 	dec	hl
      001DC4 CB 1E                 7116 	rr	(hl)
      001DC6 23                    7117 	inc	hl
      001DC7 CB 2E                 7118 	sra	(hl)
      001DC9 2B                    7119 	dec	hl
      001DCA CB 1E                 7120 	rr	(hl)
      001DCC 11 20 00              7121 	ld	de, #0x0020
      001DCF D5                    7122 	push	de
      001DD0 2A                    7123 	ld	a, (hl+)
      001DD1 5F                    7124 	ld	e, a
      001DD2 56                    7125 	ld	d, (hl)
      001DD3 D5                    7126 	push	de
      001DD4 CDr00r00              7127 	call	__modsint
      001DD7 E8 04                 7128 	add	sp, #4
      001DD9 F8 05                 7129 	ldhl	sp,	#5
      001DDB 7B                    7130 	ld	a, e
      001DDC 22                    7131 	ld	(hl+), a
      001DDD 72                    7132 	ld	(hl), d
      001DDE F8 05                 7133 	ldhl	sp,	#5
      001DE0 7E                    7134 	ld	a, (hl)
      001DE1 F8 00                 7135 	ldhl	sp,	#0
      001DE3 77                    7136 	ld	(hl), a
      001DE4 F8 06                 7137 	ldhl	sp,	#6
      001DE6 7E                    7138 	ld	a, (hl)
      001DE7 F8 01                 7139 	ldhl	sp,	#1
      001DE9 77                    7140 	ld	(hl), a
                                   7141 ;src/main.c:710: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001DEA F8 07                 7142 	ldhl	sp,	#7
      001DEC 3A                    7143 	ld	a, (hl-)
      001DED 22                    7144 	ld	(hl+), a
      001DEE AF                    7145 	xor	a, a
      001DEF 32                    7146 	ld	(hl-), a
      001DF0 3A                    7147 	ld	a, (hl-)
      001DF1 2B                    7148 	dec	hl
      001DF2 77                    7149 	ld	(hl), a
      001DF3 F8 07                 7150 	ldhl	sp,	#7
      001DF5 3A                    7151 	ld	a, (hl-)
      001DF6 2B                    7152 	dec	hl
      001DF7 32                    7153 	ld	(hl-), a
      001DF8 2A                    7154 	ld	a, (hl+)
      001DF9 5F                    7155 	ld	e, a
      001DFA 56                    7156 	ld	d, (hl)
      001DFB 21rB3r00              7157 	ld	hl, #_bgY
      001DFE 2A                    7158 	ld	a,	(hl+)
      001DFF 66                    7159 	ld	h, (hl)
      001E00 6F                    7160 	ld	l, a
      001E01 19                    7161 	add	hl, de
      001E02 E5                    7162 	push	hl
      001E03 7D                    7163 	ld	a, l
      001E04 F8 08                 7164 	ldhl	sp,	#8
      001E06 77                    7165 	ld	(hl), a
      001E07 E1                    7166 	pop	hl
      001E08 7C                    7167 	ld	a, h
      001E09 F8 07                 7168 	ldhl	sp,	#7
      001E0B 77                    7169 	ld	(hl), a
      001E0C CB 2E                 7170 	sra	(hl)
      001E0E 2B                    7171 	dec	hl
      001E0F CB 1E                 7172 	rr	(hl)
      001E11 23                    7173 	inc	hl
      001E12 CB 2E                 7174 	sra	(hl)
      001E14 2B                    7175 	dec	hl
      001E15 CB 1E                 7176 	rr	(hl)
      001E17 23                    7177 	inc	hl
      001E18 CB 2E                 7178 	sra	(hl)
      001E1A 2B                    7179 	dec	hl
      001E1B CB 1E                 7180 	rr	(hl)
      001E1D 11 20 00              7181 	ld	de, #0x0020
      001E20 D5                    7182 	push	de
      001E21 2A                    7183 	ld	a, (hl+)
      001E22 5F                    7184 	ld	e, a
      001E23 56                    7185 	ld	d, (hl)
      001E24 D5                    7186 	push	de
      001E25 CDr00r00              7187 	call	__modsint
      001E28 E8 04                 7188 	add	sp, #4
      001E2A F8 06                 7189 	ldhl	sp,	#6
      001E2C 7B                    7190 	ld	a, e
      001E2D 22                    7191 	ld	(hl+), a
      001E2E 72                    7192 	ld	(hl), d
      001E2F F8 06                 7193 	ldhl	sp,	#6
      001E31 2A                    7194 	ld	a, (hl+)
      001E32 77                    7195 	ld	(hl), a
                                   7196 ;src/main.c:713: ind = 32*bgindY + bgindX;
      001E33 3A                    7197 	ld	a, (hl-)
      001E34 22                    7198 	ld	(hl+), a
      001E35 36 00                 7199 	ld	(hl), #0x00
      001E37 3E 05                 7200 	ld	a, #0x05
      001E39                       7201 00352$:
      001E39 F8 06                 7202 	ldhl	sp,	#6
      001E3B CB 26                 7203 	sla	(hl)
      001E3D 23                    7204 	inc	hl
      001E3E CB 16                 7205 	rl	(hl)
      001E40 3D                    7206 	dec	a
      001E41 20 F6                 7207 	jr	NZ, 00352$
      001E43 2B                    7208 	dec	hl
      001E44 3A                    7209 	ld	a, (hl-)
      001E45 2B                    7210 	dec	hl
      001E46 77                    7211 	ld	(hl), a
      001E47 F8 07                 7212 	ldhl	sp,	#7
      001E49 3A                    7213 	ld	a, (hl-)
      001E4A 2B                    7214 	dec	hl
      001E4B 77                    7215 	ld	(hl), a
      001E4C D1                    7216 	pop	de
      001E4D D5                    7217 	push	de
      001E4E 3A                    7218 	ld	a, (hl-)
      001E4F 6E                    7219 	ld	l, (hl)
      001E50 67                    7220 	ld	h, a
      001E51 19                    7221 	add	hl, de
      001E52 E5                    7222 	push	hl
      001E53 7D                    7223 	ld	a, l
      001E54 F8 08                 7224 	ldhl	sp,	#8
      001E56 77                    7225 	ld	(hl), a
      001E57 E1                    7226 	pop	hl
      001E58 7C                    7227 	ld	a, h
      001E59 F8 07                 7228 	ldhl	sp,	#7
      001E5B 77                    7229 	ld	(hl), a
                                   7230 ;src/main.c:714: result = 1;
      001E5C F8 03                 7231 	ldhl	sp,	#3
      001E5E 36 01                 7232 	ld	(hl), #0x01
                                   7233 ;src/main.c:715: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001E60 F8 06                 7234 	ldhl	sp,#6
      001E62 2A                    7235 	ld	a, (hl+)
      001E63 5F                    7236 	ld	e, a
      001E64 56                    7237 	ld	d, (hl)
      001E65 21r87r00              7238 	ld	hl, #_background1
      001E68 19                    7239 	add	hl, de
      001E69 4D                    7240 	ld	c, l
      001E6A 44                    7241 	ld	b, h
      001E6B 0A                    7242 	ld	a, (bc)
      001E6C F8 04                 7243 	ldhl	sp,	#4
      001E6E 77                    7244 	ld	(hl), a
      001E6F F8 07                 7245 	ldhl	sp,	#7
      001E71 36 00                 7246 	ld	(hl), #0x00
      001E73                       7247 00161$:
      001E73 F8 07                 7248 	ldhl	sp,	#7
      001E75 7E                    7249 	ld	a, (hl)
      001E76 F8 02                 7250 	ldhl	sp,	#2
      001E78 96                    7251 	sub	a, (hl)
      001E79 30 29                 7252 	jr	NC, 00122$
                                   7253 ;src/main.c:716: if (background1[ind] == BLANK[j] ) {
      001E7B 11r8Ar0B              7254 	ld	de, #_BLANK
      001E7E F8 07                 7255 	ldhl	sp,	#7
      001E80 6E                    7256 	ld	l, (hl)
      001E81 26 00                 7257 	ld	h, #0x00
      001E83 19                    7258 	add	hl, de
      001E84 E5                    7259 	push	hl
      001E85 7D                    7260 	ld	a, l
      001E86 F8 07                 7261 	ldhl	sp,	#7
      001E88 77                    7262 	ld	(hl), a
      001E89 E1                    7263 	pop	hl
      001E8A 7C                    7264 	ld	a, h
      001E8B F8 06                 7265 	ldhl	sp,	#6
      001E8D 32                    7266 	ld	(hl-), a
      001E8E 2A                    7267 	ld	a, (hl+)
      001E8F 5F                    7268 	ld	e, a
      001E90 3A                    7269 	ld	a, (hl-)
      001E91 2B                    7270 	dec	hl
      001E92 57                    7271 	ld	d, a
      001E93 1A                    7272 	ld	a, (de)
      001E94 4F                    7273 	ld	c, a
      001E95 7E                    7274 	ld	a, (hl)
      001E96 91                    7275 	sub	a, c
      001E97 20 06                 7276 	jr	NZ, 00162$
                                   7277 ;src/main.c:717: result = 0;
      001E99 F8 03                 7278 	ldhl	sp,	#3
      001E9B 36 00                 7279 	ld	(hl), #0x00
                                   7280 ;src/main.c:718: break;
      001E9D 18 05                 7281 	jr	00122$
      001E9F                       7282 00162$:
                                   7283 ;src/main.c:715: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001E9F F8 07                 7284 	ldhl	sp,	#7
      001EA1 34                    7285 	inc	(hl)
      001EA2 18 CF                 7286 	jr	00161$
      001EA4                       7287 00122$:
                                   7288 ;src/main.c:722: if (result == 0) {
      001EA4 F8 03                 7289 	ldhl	sp,	#3
      001EA6 7E                    7290 	ld	a, (hl)
      001EA7 B7                    7291 	or	a, a
      001EA8 C2r72r1F              7292 	jp	NZ, 00127$
                                   7293 ;src/main.c:723: playerY += ySpeed;
      001EAB FArAAr00              7294 	ld	a, (#_ySpeed)
      001EAE 4F                    7295 	ld	c, a
      001EAF 07                    7296 	rlca
      001EB0 9F                    7297 	sbc	a, a
      001EB1 21rADr00              7298 	ld	hl, #_playerY
      001EB4 5E                    7299 	ld	e, (hl)
      001EB5 23                    7300 	inc	hl
      001EB6 56                    7301 	ld	d, (hl)
      001EB7 2B                    7302 	dec	hl
      001EB8 47                    7303 	ld	b, a
      001EB9 79                    7304 	ld	a, c
      001EBA 83                    7305 	add	a, e
      001EBB 4F                    7306 	ld	c, a
      001EBC 78                    7307 	ld	a, b
      001EBD 8A                    7308 	adc	a, d
      001EBE 47                    7309 	ld	b, a
      001EBF 79                    7310 	ld	a, c
      001EC0 22                    7311 	ld	(hl+), a
                                   7312 ;src/main.c:725: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001EC1 78                    7313 	ld	a, b
      001EC2 32                    7314 	ld	(hl-), a
      001EC3 2A                    7315 	ld	a, (hl+)
      001EC4 5F                    7316 	ld	e, a
      001EC5 56                    7317 	ld	d, (hl)
      001EC6 7A                    7318 	ld	a, d
      001EC7 D6 06                 7319 	sub	a, #0x06
      001EC9 30 05                 7320 	jr	NC, 00177$
      001ECB 11 00 06              7321 	ld	de, #0x0600
      001ECE 18 0B                 7322 	jr	00178$
      001ED0                       7323 00177$:
      001ED0 3E C0                 7324 	ld	a, #0xc0
      001ED2 BB                    7325 	cp	a, e
      001ED3 3E 09                 7326 	ld	a, #0x09
      001ED5 9A                    7327 	sbc	a, d
      001ED6 30 03                 7328 	jr	NC, 00179$
      001ED8 11 C0 09              7329 	ld	de, #0x09c0
      001EDB                       7330 00179$:
      001EDB                       7331 00178$:
      001EDB 4B                    7332 	ld	c, e
      001EDC 42                    7333 	ld	b, d
                                   7334 ;src/main.c:727: yOverflow = (playerY - limitedPlayerY);
      001EDD FArADr00              7335 	ld	a, (#_playerY)
      001EE0 93                    7336 	sub	a, e
      001EE1 EArB7r00              7337 	ld	(#_yOverflow),a
      001EE4 FArAEr00              7338 	ld	a, (#_playerY + 1)
      001EE7 9A                    7339 	sbc	a, d
      001EE8 21rB8r00              7340 	ld	hl, #_yOverflow + 1
                                   7341 ;src/main.c:728: if (yOverflow >= 0) {
      001EEB 32                    7342 	ld	(hl-), a
      001EEC 6E                    7343 	ld	l, (hl)
                                   7344 ;	spillPairReg hl
                                   7345 ;	spillPairReg hl
      001EED FArB8r00              7346 	ld	a, (_yOverflow + 1)
                                   7347 ;	spillPairReg hl
                                   7348 ;	spillPairReg hl
      001EF0 CB 7F                 7349 	bit	7,a
      001EF2 20 22                 7350 	jr	NZ, 00124$
                                   7351 ;src/main.c:729: yOverflow = yOverflow >> 5;
      001EF4 21rB8r00              7352 	ld	hl, #_yOverflow + 1
      001EF7 CB 2E                 7353 	sra	(hl)
      001EF9 2B                    7354 	dec	hl
      001EFA CB 1E                 7355 	rr	(hl)
      001EFC 23                    7356 	inc	hl
      001EFD CB 2E                 7357 	sra	(hl)
      001EFF 2B                    7358 	dec	hl
      001F00 CB 1E                 7359 	rr	(hl)
      001F02 23                    7360 	inc	hl
      001F03 CB 2E                 7361 	sra	(hl)
      001F05 2B                    7362 	dec	hl
      001F06 CB 1E                 7363 	rr	(hl)
      001F08 23                    7364 	inc	hl
      001F09 CB 2E                 7365 	sra	(hl)
      001F0B 2B                    7366 	dec	hl
      001F0C CB 1E                 7367 	rr	(hl)
      001F0E 23                    7368 	inc	hl
      001F0F CB 2E                 7369 	sra	(hl)
      001F11 2B                    7370 	dec	hl
      001F12 CB 1E                 7371 	rr	(hl)
      001F14 18 25                 7372 	jr	00125$
      001F16                       7373 00124$:
                                   7374 ;src/main.c:732: yOverflow = -((-yOverflow) >> 5);
      001F16 AF                    7375 	xor	a, a
      001F17 21rB7r00              7376 	ld	hl, #_yOverflow
      001F1A 96                    7377 	sub	a, (hl)
      001F1B 23                    7378 	inc	hl
      001F1C 5F                    7379 	ld	e, a
      001F1D 9F                    7380 	sbc	a, a
      001F1E 96                    7381 	sub	a, (hl)
      001F1F 2B                    7382 	dec	hl
      001F20 57                    7383 	ld	d, a
      001F21 CB 2A                 7384 	sra	d
      001F23 CB 1B                 7385 	rr	e
      001F25 CB 2A                 7386 	sra	d
      001F27 CB 1B                 7387 	rr	e
      001F29 CB 2A                 7388 	sra	d
      001F2B CB 1B                 7389 	rr	e
      001F2D CB 2A                 7390 	sra	d
      001F2F CB 1B                 7391 	rr	e
      001F31 CB 2A                 7392 	sra	d
      001F33 CB 1B                 7393 	rr	e
      001F35 AF                    7394 	xor	a, a
      001F36 93                    7395 	sub	a, e
      001F37 22                    7396 	ld	(hl+), a
      001F38 9F                    7397 	sbc	a, a
      001F39 92                    7398 	sub	a, d
      001F3A 77                    7399 	ld	(hl), a
      001F3B                       7400 00125$:
                                   7401 ;src/main.c:734: bgY += yOverflow;
      001F3B FArB3r00              7402 	ld	a, (#_bgY)
      001F3E 21rB7r00              7403 	ld	hl, #_yOverflow
      001F41 86                    7404 	add	a, (hl)
      001F42 21rB3r00              7405 	ld	hl, #_bgY
      001F45 22                    7406 	ld	(hl+), a
      001F46 7E                    7407 	ld	a, (hl)
      001F47 21rB8r00              7408 	ld	hl, #_yOverflow + 1
      001F4A 8E                    7409 	adc	a, (hl)
      001F4B EArB4r00              7410 	ld	(#_bgY + 1),a
                                   7411 ;src/main.c:735: playerY = limitedPlayerY;
      001F4E 21rADr00              7412 	ld	hl, #_playerY
      001F51 79                    7413 	ld	a, c
      001F52 22                    7414 	ld	(hl+), a
                                   7415 ;src/main.c:736: playerDrawY=playerY >> 5;
      001F53 78                    7416 	ld	a, b
      001F54 32                    7417 	ld	(hl-), a
      001F55 2A                    7418 	ld	a, (hl+)
      001F56 4F                    7419 	ld	c, a
      001F57 46                    7420 	ld	b, (hl)
      001F58 CB 38                 7421 	srl	b
      001F5A CB 19                 7422 	rr	c
      001F5C CB 38                 7423 	srl	b
      001F5E CB 19                 7424 	rr	c
      001F60 CB 38                 7425 	srl	b
      001F62 CB 19                 7426 	rr	c
      001F64 CB 38                 7427 	srl	b
      001F66 CB 19                 7428 	rr	c
      001F68 CB 38                 7429 	srl	b
      001F6A CB 19                 7430 	rr	c
      001F6C 21rB0r00              7431 	ld	hl, #_playerDrawY
      001F6F 71                    7432 	ld	(hl), c
      001F70 18 05                 7433 	jr	00128$
      001F72                       7434 00127$:
                                   7435 ;src/main.c:741: ySpeed = 0;
      001F72 21rAAr00              7436 	ld	hl, #_ySpeed
      001F75 36 00                 7437 	ld	(hl), #0x00
      001F77                       7438 00128$:
                                   7439 ;src/main.c:641: uint8_t xCollisionPoint = playerDrawX; 
      001F77 FArAFr00              7440 	ld	a, (#_playerDrawX)
      001F7A F8 07                 7441 	ldhl	sp,	#7
      001F7C 77                    7442 	ld	(hl), a
                                   7443 ;src/main.c:700: yCollisionPoint = playerDrawY +8; //bottom edge
      001F7D FArB0r00              7444 	ld	a, (#_playerDrawY)
      001F80 C6 08                 7445 	add	a, #0x08
      001F82 F8 06                 7446 	ldhl	sp,	#6
      001F84 77                    7447 	ld	(hl), a
                                   7448 ;src/main.c:744: if (xDir >= 0) {
      001F85 FArA7r00              7449 	ld	a, (#_xDir)
      001F88 CB 7F                 7450 	bit	7, a
      001F8A 20 2A                 7451 	jr	NZ, 00130$
                                   7452 ;src/main.c:745: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   7453 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7454 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001F8C 11r00r00              7455 	ld	de, #_shadow_OAM
      001F8F F8 06                 7456 	ldhl	sp,	#6
      001F91 2A                    7457 	ld	a, (hl+)
      001F92 12                    7458 	ld	(de), a
      001F93 11r01r00              7459 	ld	de, #(_shadow_OAM + 1)
      001F96 7E                    7460 	ld	a, (hl)
      001F97 12                    7461 	ld	(de), a
                                   7462 ;src/main.c:747: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001F98 FArB0r00              7463 	ld	a, (#_playerDrawY)
      001F9B F8 07                 7464 	ldhl	sp,	#7
      001F9D 77                    7465 	ld	(hl), a
      001F9E 3A                    7466 	ld	a, (hl-)
      001F9F C6 08                 7467 	add	a, #0x08
      001FA1 77                    7468 	ld	(hl), a
      001FA2 FArAFr00              7469 	ld	a, (#_playerDrawX)
      001FA5 C6 08                 7470 	add	a, #0x08
      001FA7 F8 07                 7471 	ldhl	sp,	#7
                                   7472 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7473 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FA9 32                    7474 	ld	(hl-), a
      001FAA 11r04r00              7475 	ld	de, #(_shadow_OAM + 4)
      001FAD 2A                    7476 	ld	a, (hl+)
      001FAE 12                    7477 	ld	(de), a
      001FAF 11r05r00              7478 	ld	de, #(_shadow_OAM + 5)
      001FB2 7E                    7479 	ld	a, (hl)
      001FB3 12                    7480 	ld	(de), a
                                   7481 ;src/main.c:747: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001FB4 18 28                 7482 	jr	00131$
      001FB6                       7483 00130$:
                                   7484 ;src/main.c:750: move_sprite(1, playerDrawX , playerDrawY +8);
                                   7485 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001FB6 01r04r00              7486 	ld	bc, #(_shadow_OAM + 4)
                                   7487 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FB9 F8 06                 7488 	ldhl	sp,	#6
      001FBB 2A                    7489 	ld	a, (hl+)
      001FBC 02                    7490 	ld	(bc), a
      001FBD 03                    7491 	inc	bc
      001FBE 7E                    7492 	ld	a, (hl)
      001FBF 02                    7493 	ld	(bc), a
                                   7494 ;src/main.c:752: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001FC0 FArB0r00              7495 	ld	a, (#_playerDrawY)
      001FC3 F8 07                 7496 	ldhl	sp,	#7
      001FC5 77                    7497 	ld	(hl), a
      001FC6 3A                    7498 	ld	a, (hl-)
      001FC7 C6 08                 7499 	add	a, #0x08
      001FC9 77                    7500 	ld	(hl), a
      001FCA FArAFr00              7501 	ld	a, (#_playerDrawX)
      001FCD F8 07                 7502 	ldhl	sp,	#7
      001FCF 77                    7503 	ld	(hl), a
      001FD0 7E                    7504 	ld	a, (hl)
      001FD1 C6 08                 7505 	add	a, #0x08
                                   7506 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7507 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FD3 32                    7508 	ld	(hl-), a
      001FD4 11r00r00              7509 	ld	de, #_shadow_OAM
      001FD7 2A                    7510 	ld	a, (hl+)
      001FD8 12                    7511 	ld	(de), a
      001FD9 11r01r00              7512 	ld	de, #(_shadow_OAM + 1)
      001FDC 7E                    7513 	ld	a, (hl)
      001FDD 12                    7514 	ld	(de), a
                                   7515 ;src/main.c:752: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001FDE                       7516 00131$:
                                   7517 ;src/main.c:757: if (bgX >= 256) {
      001FDE 21rB1r00              7518 	ld	hl, #_bgX
      001FE1 2A                    7519 	ld	a, (hl+)
      001FE2 4F                    7520 	ld	c, a
      001FE3 46                    7521 	ld	b, (hl)
      001FE4 78                    7522 	ld	a, b
      001FE5 EE 80                 7523 	xor	a, #0x80
      001FE7 D6 81                 7524 	sub	a, #0x81
      001FE9 38 0F                 7525 	jr	C, 00133$
                                   7526 ;src/main.c:758: bgX = bgX % 256;
      001FEB AF                    7527 	xor	a, a
      001FEC 3C                    7528 	inc	a
      001FED F5                    7529 	push	af
      001FEE C5                    7530 	push	bc
      001FEF CDr00r00              7531 	call	__modsint
      001FF2 E8 04                 7532 	add	sp, #4
      001FF4 21rB1r00              7533 	ld	hl, #_bgX
      001FF7 7B                    7534 	ld	a, e
      001FF8 22                    7535 	ld	(hl+), a
      001FF9 72                    7536 	ld	(hl), d
      001FFA                       7537 00133$:
                                   7538 ;src/main.c:760: if (bgX < 0) {
      001FFA 21rB1r00              7539 	ld	hl, #_bgX
      001FFD 2A                    7540 	ld	a, (hl+)
      001FFE 4F                    7541 	ld	c, a
      001FFF 46                    7542 	ld	b, (hl)
      002000 CB 78                 7543 	bit	7, b
      002002 28 15                 7544 	jr	Z, 00135$
                                   7545 ;src/main.c:761: bgX = 255 - (bgX % 256);
      002004 AF                    7546 	xor	a, a
      002005 3C                    7547 	inc	a
      002006 F5                    7548 	push	af
      002007 C5                    7549 	push	bc
      002008 CDr00r00              7550 	call	__modsint
      00200B E8 04                 7551 	add	sp, #4
      00200D 3E FF                 7552 	ld	a, #0xff
      00200F 93                    7553 	sub	a, e
      002010 4F                    7554 	ld	c, a
      002011 9F                    7555 	sbc	a, a
      002012 92                    7556 	sub	a, d
      002013 21rB1r00              7557 	ld	hl, #_bgX
      002016 71                    7558 	ld	(hl), c
      002017 23                    7559 	inc	hl
      002018 77                    7560 	ld	(hl), a
      002019                       7561 00135$:
                                   7562 ;src/main.c:763: if (bgY >= 256) {
      002019 21rB3r00              7563 	ld	hl, #_bgY
      00201C 2A                    7564 	ld	a, (hl+)
      00201D 4F                    7565 	ld	c, a
      00201E 46                    7566 	ld	b, (hl)
      00201F 78                    7567 	ld	a, b
      002020 EE 80                 7568 	xor	a, #0x80
      002022 D6 81                 7569 	sub	a, #0x81
      002024 38 0F                 7570 	jr	C, 00137$
                                   7571 ;src/main.c:764: bgY = bgY % 256;
      002026 AF                    7572 	xor	a, a
      002027 3C                    7573 	inc	a
      002028 F5                    7574 	push	af
      002029 C5                    7575 	push	bc
      00202A CDr00r00              7576 	call	__modsint
      00202D E8 04                 7577 	add	sp, #4
      00202F 21rB3r00              7578 	ld	hl, #_bgY
      002032 7B                    7579 	ld	a, e
      002033 22                    7580 	ld	(hl+), a
      002034 72                    7581 	ld	(hl), d
      002035                       7582 00137$:
                                   7583 ;src/main.c:766: if (bgY < 0) {
      002035 21rB3r00              7584 	ld	hl, #_bgY
      002038 2A                    7585 	ld	a, (hl+)
      002039 4F                    7586 	ld	c, a
      00203A 46                    7587 	ld	b, (hl)
      00203B CB 78                 7588 	bit	7, b
      00203D 28 15                 7589 	jr	Z, 00139$
                                   7590 ;src/main.c:767: bgY = 255 - (bgY % 256);
      00203F AF                    7591 	xor	a, a
      002040 3C                    7592 	inc	a
      002041 F5                    7593 	push	af
      002042 C5                    7594 	push	bc
      002043 CDr00r00              7595 	call	__modsint
      002046 E8 04                 7596 	add	sp, #4
      002048 3E FF                 7597 	ld	a, #0xff
      00204A 93                    7598 	sub	a, e
      00204B 4F                    7599 	ld	c, a
      00204C 9F                    7600 	sbc	a, a
      00204D 92                    7601 	sub	a, d
      00204E 21rB3r00              7602 	ld	hl, #_bgY
      002051 71                    7603 	ld	(hl), c
      002052 23                    7604 	inc	hl
      002053 77                    7605 	ld	(hl), a
      002054                       7606 00139$:
                                   7607 ;src/main.c:770: move_bkg(bgX, bgY);
      002054 21rB3r00              7608 	ld	hl, #_bgY
      002057 4E                    7609 	ld	c, (hl)
      002058 FArB1r00              7610 	ld	a, (#_bgX)
      00205B E0r00                 7611 	ldh	(_SCX_REG + 0), a
                                   7612 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00205D 79                    7613 	ld	a, c
      00205E E0r00                 7614 	ldh	(_SCY_REG + 0), a
                                   7615 ;src/main.c:773: if (ySpeed > 0) ySpeed--;
      002060 21rAAr00              7616 	ld	hl, #_ySpeed
      002063 5E                    7617 	ld	e, (hl)
      002064 AF                    7618 	xor	a, a
      002065 57                    7619 	ld	d, a
      002066 96                    7620 	sub	a, (hl)
      002067 CB 7B                 7621 	bit	7, e
      002069 28 07                 7622 	jr	Z, 00355$
      00206B CB 7A                 7623 	bit	7, d
      00206D 20 08                 7624 	jr	NZ, 00356$
      00206F BF                    7625 	cp	a, a
      002070 18 05                 7626 	jr	00356$
      002072                       7627 00355$:
      002072 CB 7A                 7628 	bit	7, d
      002074 28 01                 7629 	jr	Z, 00356$
      002076 37                    7630 	scf
      002077                       7631 00356$:
      002077 30 04                 7632 	jr	NC, 00141$
      002079 21rAAr00              7633 	ld	hl, #_ySpeed
      00207C 35                    7634 	dec	(hl)
      00207D                       7635 00141$:
                                   7636 ;src/main.c:774: if (ySpeed < 0) ySpeed++;
      00207D 21rAAr00              7637 	ld	hl, #_ySpeed
      002080 CB 7E                 7638 	bit	7, (hl)
      002082 28 01                 7639 	jr	Z, 00143$
      002084 34                    7640 	inc	(hl)
      002085                       7641 00143$:
                                   7642 ;src/main.c:775: if (xSpeed > 0) xSpeed--;
      002085 21rA9r00              7643 	ld	hl, #_xSpeed
      002088 5E                    7644 	ld	e, (hl)
      002089 AF                    7645 	xor	a, a
      00208A 57                    7646 	ld	d, a
      00208B 96                    7647 	sub	a, (hl)
      00208C CB 7B                 7648 	bit	7, e
      00208E 28 07                 7649 	jr	Z, 00357$
      002090 CB 7A                 7650 	bit	7, d
      002092 20 08                 7651 	jr	NZ, 00358$
      002094 BF                    7652 	cp	a, a
      002095 18 05                 7653 	jr	00358$
      002097                       7654 00357$:
      002097 CB 7A                 7655 	bit	7, d
      002099 28 01                 7656 	jr	Z, 00358$
      00209B 37                    7657 	scf
      00209C                       7658 00358$:
      00209C 30 04                 7659 	jr	NC, 00145$
      00209E 21rA9r00              7660 	ld	hl, #_xSpeed
      0020A1 35                    7661 	dec	(hl)
      0020A2                       7662 00145$:
                                   7663 ;src/main.c:776: if (xSpeed < 0) xSpeed++;
      0020A2 21rA9r00              7664 	ld	hl, #_xSpeed
      0020A5 CB 7E                 7665 	bit	7, (hl)
      0020A7 28 01                 7666 	jr	Z, 00163$
      0020A9 34                    7667 	inc	(hl)
      0020AA                       7668 00163$:
                                   7669 ;src/main.c:780: }
      0020AA E8 08                 7670 	add	sp, #8
      0020AC C9                    7671 	ret
                                   7672 ;src/main.c:782: void takeDamage(int16_t amount) {
                                   7673 ;	---------------------------------
                                   7674 ; Function takeDamage
                                   7675 ; ---------------------------------
      0020AD                       7676 _takeDamage::
      0020AD 3B                    7677 	dec	sp
                                   7678 ;src/main.c:783: if (amount > shield) {
      0020AE FArF7r00              7679 	ld	a, (#_shield)
      0020B1 4F                    7680 	ld	c, a
      0020B2 07                    7681 	rlca
      0020B3 9F                    7682 	sbc	a, a
      0020B4 47                    7683 	ld	b, a
                                   7684 ;src/main.c:785: hull -= (amount - shield);
      0020B5 F8 03                 7685 	ldhl	sp,	#3
      0020B7 7E                    7686 	ld	a, (hl)
      0020B8 F8 00                 7687 	ldhl	sp,	#0
      0020BA 77                    7688 	ld	(hl), a
                                   7689 ;src/main.c:783: if (amount > shield) {
      0020BB F8 03                 7690 	ldhl	sp,	#3
      0020BD 79                    7691 	ld	a, c
      0020BE 96                    7692 	sub	a, (hl)
      0020BF 23                    7693 	inc	hl
      0020C0 78                    7694 	ld	a, b
      0020C1 9E                    7695 	sbc	a, (hl)
      0020C2 78                    7696 	ld	a, b
      0020C3 57                    7697 	ld	d, a
      0020C4 CB 7E                 7698 	bit	7, (hl)
      0020C6 28 07                 7699 	jr	Z, 00111$
      0020C8 CB 7A                 7700 	bit	7, d
      0020CA 20 08                 7701 	jr	NZ, 00112$
      0020CC BF                    7702 	cp	a, a
      0020CD 18 05                 7703 	jr	00112$
      0020CF                       7704 00111$:
      0020CF CB 7A                 7705 	bit	7, d
      0020D1 28 01                 7706 	jr	Z, 00112$
      0020D3 37                    7707 	scf
      0020D4                       7708 00112$:
      0020D4 30 10                 7709 	jr	NC, 00102$
                                   7710 ;src/main.c:784: shield = 0;
      0020D6 21rF7r00              7711 	ld	hl, #_shield
      0020D9 36 00                 7712 	ld	(hl), #0x00
                                   7713 ;src/main.c:785: hull -= (amount - shield);
      0020DB FArF6r00              7714 	ld	a, (#_hull)
      0020DE F8 00                 7715 	ldhl	sp,	#0
      0020E0 96                    7716 	sub	a, (hl)
      0020E1 EArF6r00              7717 	ld	(#_hull),a
      0020E4 18 09                 7718 	jr	00104$
      0020E6                       7719 00102$:
                                   7720 ;src/main.c:788: shield -= amount;
      0020E6 FArF7r00              7721 	ld	a, (#_shield)
      0020E9 F8 00                 7722 	ldhl	sp,	#0
      0020EB 96                    7723 	sub	a, (hl)
      0020EC EArF7r00              7724 	ld	(#_shield),a
      0020EF                       7725 00104$:
                                   7726 ;src/main.c:790: }
      0020EF 33                    7727 	inc	sp
      0020F0 C9                    7728 	ret
                                   7729 ;src/main.c:792: void spawnPickup(int16_t x, int16_t y) {
                                   7730 ;	---------------------------------
                                   7731 ; Function spawnPickup
                                   7732 ; ---------------------------------
      0020F1                       7733 _spawnPickup::
                                   7734 ;src/main.c:793: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      0020F1 CDr00r00              7735 	call	_rand
      0020F4 7B                    7736 	ld	a, e
      0020F5 E6 0F                 7737 	and	a, #0x0f
      0020F7 C0                    7738 	ret	NZ
                                   7739 ;src/main.c:794: if (spawn == 0) {
                                   7740 ;src/main.c:795: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      0020F8 CDr00r00              7741 	call	_rand
      0020FB 7B                    7742 	ld	a, e
      0020FC E6 03                 7743 	and	a, #0x03
                                   7744 ;src/main.c:796: if (type == 0) {
      0020FE 5F                    7745 	ld	e,a
      0020FF B7                    7746 	or	a, a
      002100 20 13                 7747 	jr	NZ, 00106$
                                   7748 ;src/main.c:797: pickup = health;
      002102 11 09 00              7749 	ld	de, #0x0009
      002105 D5                    7750 	push	de
      002106 11r1Ar07              7751 	ld	de, #_health
      002109 D5                    7752 	push	de
      00210A 11rFAr00              7753 	ld	de, #_pickup
      00210D D5                    7754 	push	de
      00210E CDr00r00              7755 	call	___memcpy
      002111 E8 06                 7756 	add	sp, #6
      002113 18 31                 7757 	jr	00107$
      002115                       7758 00106$:
                                   7759 ;src/main.c:799: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      002115 1D                    7760 	dec	e
      002116 20 1D                 7761 	jr	NZ, 00102$
      002118 21rA3r0B              7762 	ld	hl, #_MAXGUNLEVEL
      00211B 4E                    7763 	ld	c, (hl)
      00211C FArBAr00              7764 	ld	a, (#_gunLevel)
      00211F 91                    7765 	sub	a, c
      002120 30 13                 7766 	jr	NC, 00102$
                                   7767 ;src/main.c:800: pickup = upgrade;
      002122 11 09 00              7768 	ld	de, #0x0009
      002125 D5                    7769 	push	de
      002126 11r08r07              7770 	ld	de, #_upgrade
      002129 D5                    7771 	push	de
      00212A 11rFAr00              7772 	ld	de, #_pickup
      00212D D5                    7773 	push	de
      00212E CDr00r00              7774 	call	___memcpy
      002131 E8 06                 7775 	add	sp, #6
      002133 18 11                 7776 	jr	00107$
      002135                       7777 00102$:
                                   7778 ;src/main.c:803: pickup = ammo;
      002135 01r11r07              7779 	ld	bc, #_ammo
      002138 11rFAr00              7780 	ld	de, #_pickup
      00213B 21 09 00              7781 	ld	hl, #0x0009
      00213E E5                    7782 	push	hl
      00213F C5                    7783 	push	bc
      002140 D5                    7784 	push	de
      002141 CDr00r00              7785 	call	___memcpy
      002144 E8 06                 7786 	add	sp, #6
      002146                       7787 00107$:
                                   7788 ;src/main.c:805: pickup.active = 1;
      002146 21rFFr00              7789 	ld	hl, #(_pickup + 5)
      002149 36 01                 7790 	ld	(hl), #0x01
                                   7791 ;src/main.c:807: pickup.x = x;
      00214B 11rFBr00              7792 	ld	de, #(_pickup + 1)
      00214E F8 02                 7793 	ldhl	sp,	#2
      002150 2A                    7794 	ld	a, (hl+)
      002151 12                    7795 	ld	(de), a
      002152 13                    7796 	inc	de
                                   7797 ;src/main.c:808: pickup.y = y;
      002153 2A                    7798 	ld	a, (hl+)
      002154 12                    7799 	ld	(de), a
      002155 11rFDr00              7800 	ld	de, #(_pickup + 3)
      002158 2A                    7801 	ld	a, (hl+)
      002159 12                    7802 	ld	(de), a
      00215A 13                    7803 	inc	de
      00215B 7E                    7804 	ld	a, (hl)
      00215C 12                    7805 	ld	(de), a
                                   7806 ;src/main.c:810: set_sprite_tile(3, pickup.tile); //0x7f
      00215D 21r02r01              7807 	ld	hl, #(_pickup + 8)
      002160 4E                    7808 	ld	c, (hl)
                                   7809 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002161 21r0Er00              7810 	ld	hl, #(_shadow_OAM + 14)
      002164 71                    7811 	ld	(hl), c
                                   7812 ;src/main.c:810: set_sprite_tile(3, pickup.tile); //0x7f
                                   7813 ;src/main.c:816: }
      002165 C9                    7814 	ret
                                   7815 ;src/main.c:818: void killEnemy(uint8_t i) {
                                   7816 ;	---------------------------------
                                   7817 ; Function killEnemy
                                   7818 ; ---------------------------------
      002166                       7819 _killEnemy::
      002166 E8 FC                 7820 	add	sp, #-4
                                   7821 ;src/main.c:819: set_sprite_tile(10+(i<<1), 0x7f);
      002168 F8 06                 7822 	ldhl	sp,	#6
      00216A 7E                    7823 	ld	a, (hl)
      00216B 87                    7824 	add	a, a
      00216C 4F                    7825 	ld	c, a
      00216D C6 0A                 7826 	add	a, #0x0a
                                   7827 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00216F 6F                    7828 	ld	l, a
      002170 11r00r00              7829 	ld	de, #_shadow_OAM+0
                                   7830 ;	spillPairReg hl
                                   7831 ;	spillPairReg hl
      002173 26 00                 7832 	ld	h, #0x00
                                   7833 ;	spillPairReg hl
                                   7834 ;	spillPairReg hl
      002175 29                    7835 	add	hl, hl
      002176 29                    7836 	add	hl, hl
      002177 19                    7837 	add	hl, de
      002178 23                    7838 	inc	hl
      002179 23                    7839 	inc	hl
      00217A 36 7F                 7840 	ld	(hl), #0x7f
                                   7841 ;src/main.c:820: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00217C 79                    7842 	ld	a, c
      00217D C6 0B                 7843 	add	a, #0x0b
                                   7844 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00217F 6F                    7845 	ld	l, a
      002180 01r00r00              7846 	ld	bc, #_shadow_OAM+0
                                   7847 ;	spillPairReg hl
                                   7848 ;	spillPairReg hl
      002183 26 00                 7849 	ld	h, #0x00
                                   7850 ;	spillPairReg hl
                                   7851 ;	spillPairReg hl
      002185 29                    7852 	add	hl, hl
      002186 29                    7853 	add	hl, hl
      002187 09                    7854 	add	hl, bc
      002188 23                    7855 	inc	hl
      002189 23                    7856 	inc	hl
      00218A 36 7F                 7857 	ld	(hl), #0x7f
                                   7858 ;src/main.c:822: spawnPickup(enemies[i].x, enemies[i].y);
      00218C F8 06                 7859 	ldhl	sp,	#6
      00218E 4E                    7860 	ld	c, (hl)
      00218F 06 00                 7861 	ld	b, #0x00
      002191 69                    7862 	ld	l, c
      002192 60                    7863 	ld	h, b
      002193 29                    7864 	add	hl, hl
      002194 29                    7865 	add	hl, hl
      002195 29                    7866 	add	hl, hl
      002196 09                    7867 	add	hl, bc
      002197 29                    7868 	add	hl, hl
      002198 01r5Ar00              7869 	ld	bc,#_enemies
      00219B 09                    7870 	add	hl,bc
      00219C 33                    7871 	inc	sp
      00219D 33                    7872 	inc	sp
      00219E 5D                    7873 	ld	e, l
      00219F 54                    7874 	ld	d, h
      0021A0 D5                    7875 	push	de
      0021A1 21 02 00              7876 	ld	hl, #0x0002
      0021A4 19                    7877 	add	hl, de
      0021A5 E5                    7878 	push	hl
      0021A6 7D                    7879 	ld	a, l
      0021A7 F8 04                 7880 	ldhl	sp,	#4
      0021A9 77                    7881 	ld	(hl), a
      0021AA E1                    7882 	pop	hl
      0021AB 7C                    7883 	ld	a, h
      0021AC F8 03                 7884 	ldhl	sp,	#3
      0021AE 32                    7885 	ld	(hl-), a
      0021AF 2A                    7886 	ld	a, (hl+)
      0021B0 5F                    7887 	ld	e, a
      0021B1 56                    7888 	ld	d, (hl)
      0021B2 1A                    7889 	ld	a, (de)
      0021B3 4F                    7890 	ld	c, a
      0021B4 13                    7891 	inc	de
      0021B5 1A                    7892 	ld	a, (de)
      0021B6 47                    7893 	ld	b, a
      0021B7 D1                    7894 	pop	de
      0021B8 D5                    7895 	push	de
      0021B9 1A                    7896 	ld	a, (de)
      0021BA 6F                    7897 	ld	l, a
                                   7898 ;	spillPairReg hl
                                   7899 ;	spillPairReg hl
      0021BB 13                    7900 	inc	de
      0021BC 1A                    7901 	ld	a, (de)
      0021BD 67                    7902 	ld	h, a
                                   7903 ;	spillPairReg hl
                                   7904 ;	spillPairReg hl
      0021BE C5                    7905 	push	bc
      0021BF E5                    7906 	push	hl
      0021C0 CDrF1r20              7907 	call	_spawnPickup
      0021C3 E8 04                 7908 	add	sp, #4
                                   7909 ;src/main.c:824: enemies[i].alive = 0;
      0021C5 D1                    7910 	pop	de
      0021C6 D5                    7911 	push	de
      0021C7 21 09 00              7912 	ld	hl, #0x0009
      0021CA 19                    7913 	add	hl, de
      0021CB 4D                    7914 	ld	c, l
      0021CC 44                    7915 	ld	b, h
      0021CD AF                    7916 	xor	a, a
      0021CE 02                    7917 	ld	(bc), a
                                   7918 ;src/main.c:825: enemies[i].visible = 0;
      0021CF D1                    7919 	pop	de
      0021D0 D5                    7920 	push	de
      0021D1 21 0A 00              7921 	ld	hl, #0x000a
      0021D4 19                    7922 	add	hl, de
      0021D5 4D                    7923 	ld	c, l
      0021D6 44                    7924 	ld	b, h
      0021D7 AF                    7925 	xor	a, a
      0021D8 02                    7926 	ld	(bc), a
                                   7927 ;src/main.c:827: playSound(0);
      0021D9 AF                    7928 	xor	a, a
      0021DA F5                    7929 	push	af
      0021DB 33                    7930 	inc	sp
      0021DC CDr96r0F              7931 	call	_playSound
      0021DF 33                    7932 	inc	sp
                                   7933 ;src/main.c:828: incrementScore();
      0021E0 CDr58r0D              7934 	call	_incrementScore
                                   7935 ;src/main.c:829: updateScore();
      0021E3 CDrBAr0C              7936 	call	_updateScore
                                   7937 ;src/main.c:831: explosions[oldestEx].visible = 1;
      0021E6 21rCFr00              7938 	ld	hl, #_oldestEx
      0021E9 4E                    7939 	ld	c, (hl)
      0021EA 06 00                 7940 	ld	b, #0x00
      0021EC 69                    7941 	ld	l, c
      0021ED 60                    7942 	ld	h, b
      0021EE 29                    7943 	add	hl, hl
      0021EF 09                    7944 	add	hl, bc
      0021F0 29                    7945 	add	hl, hl
      0021F1 01r03r01              7946 	ld	bc,#_explosions
      0021F4 09                    7947 	add	hl,bc
      0021F5 36 01                 7948 	ld	(hl), #0x01
                                   7949 ;src/main.c:832: explosions[oldestEx].x = enemies[i].x;
      0021F7 21rCFr00              7950 	ld	hl, #_oldestEx
      0021FA 4E                    7951 	ld	c, (hl)
      0021FB 06 00                 7952 	ld	b, #0x00
      0021FD 69                    7953 	ld	l, c
      0021FE 60                    7954 	ld	h, b
      0021FF 29                    7955 	add	hl, hl
      002200 09                    7956 	add	hl, bc
      002201 29                    7957 	add	hl, hl
      002202 01r03r01              7958 	ld	bc,#_explosions
      002205 09                    7959 	add	hl,bc
      002206 23                    7960 	inc	hl
      002207 4D                    7961 	ld	c, l
      002208 44                    7962 	ld	b, h
      002209 D1                    7963 	pop	de
      00220A D5                    7964 	push	de
      00220B 1A                    7965 	ld	a, (de)
      00220C 02                    7966 	ld	(bc), a
                                   7967 ;src/main.c:833: explosions[oldestEx].y = enemies[i].y;
      00220D 21rCFr00              7968 	ld	hl, #_oldestEx
      002210 4E                    7969 	ld	c, (hl)
      002211 06 00                 7970 	ld	b, #0x00
      002213 69                    7971 	ld	l, c
      002214 60                    7972 	ld	h, b
      002215 29                    7973 	add	hl, hl
      002216 09                    7974 	add	hl, bc
      002217 29                    7975 	add	hl, hl
      002218 01r03r01              7976 	ld	bc,#_explosions
      00221B 09                    7977 	add	hl,bc
      00221C 23                    7978 	inc	hl
      00221D 23                    7979 	inc	hl
      00221E 4D                    7980 	ld	c, l
      00221F 44                    7981 	ld	b, h
      002220 F8 02                 7982 	ldhl	sp,#2
      002222 2A                    7983 	ld	a, (hl+)
      002223 5F                    7984 	ld	e, a
      002224 56                    7985 	ld	d, (hl)
      002225 1A                    7986 	ld	a, (de)
      002226 02                    7987 	ld	(bc), a
                                   7988 ;src/main.c:836: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      002227 CDr00r00              7989 	call	_rand
      00222A 7B                    7990 	ld	a, e
      00222B 21rA7r0B              7991 	ld	hl, #_exTileCount
      00222E 46                    7992 	ld	b, (hl)
      00222F C5                    7993 	push	bc
      002230 33                    7994 	inc	sp
      002231 F5                    7995 	push	af
      002232 33                    7996 	inc	sp
      002233 CDr00r00              7997 	call	__moduchar
      002236 E1                    7998 	pop	hl
      002237 F8 03                 7999 	ldhl	sp,	#3
      002239 73                    8000 	ld	(hl), e
                                   8001 ;src/main.c:838: explosions[oldestEx].tile = exTiles[tileNum];
      00223A 21rCFr00              8002 	ld	hl, #_oldestEx
      00223D 4E                    8003 	ld	c, (hl)
      00223E 06 00                 8004 	ld	b, #0x00
      002240 69                    8005 	ld	l, c
      002241 60                    8006 	ld	h, b
      002242 29                    8007 	add	hl, hl
      002243 09                    8008 	add	hl, bc
      002244 29                    8009 	add	hl, hl
      002245 01r03r01              8010 	ld	bc,#_explosions
      002248 09                    8011 	add	hl,bc
      002249 23                    8012 	inc	hl
      00224A 23                    8013 	inc	hl
      00224B 23                    8014 	inc	hl
      00224C 23                    8015 	inc	hl
      00224D 23                    8016 	inc	hl
      00224E 4D                    8017 	ld	c, l
      00224F 44                    8018 	ld	b, h
      002250 11rD0r00              8019 	ld	de, #_exTiles+0
      002253 F8 03                 8020 	ldhl	sp,	#3
      002255 6E                    8021 	ld	l, (hl)
      002256 26 00                 8022 	ld	h, #0x00
      002258 19                    8023 	add	hl, de
      002259 5D                    8024 	ld	e, l
      00225A 54                    8025 	ld	d, h
      00225B 1A                    8026 	ld	a, (de)
      00225C 02                    8027 	ld	(bc), a
                                   8028 ;src/main.c:839: explosions[oldestEx].frame = 0;
      00225D 21rCFr00              8029 	ld	hl, #_oldestEx
      002260 4E                    8030 	ld	c, (hl)
      002261 06 00                 8031 	ld	b, #0x00
      002263 69                    8032 	ld	l, c
      002264 60                    8033 	ld	h, b
      002265 29                    8034 	add	hl, hl
      002266 09                    8035 	add	hl, bc
      002267 29                    8036 	add	hl, hl
      002268 01r03r01              8037 	ld	bc,#_explosions
      00226B 09                    8038 	add	hl,bc
      00226C 23                    8039 	inc	hl
      00226D 23                    8040 	inc	hl
      00226E 23                    8041 	inc	hl
      00226F 36 00                 8042 	ld	(hl), #0x00
                                   8043 ;src/main.c:840: explosions[oldestEx].frameCounter = 0;
      002271 21rCFr00              8044 	ld	hl, #_oldestEx
      002274 4E                    8045 	ld	c, (hl)
      002275 06 00                 8046 	ld	b, #0x00
      002277 69                    8047 	ld	l, c
      002278 60                    8048 	ld	h, b
      002279 29                    8049 	add	hl, hl
      00227A 09                    8050 	add	hl, bc
      00227B 29                    8051 	add	hl, hl
      00227C 01r03r01              8052 	ld	bc,#_explosions
      00227F 09                    8053 	add	hl,bc
      002280 01 04 00              8054 	ld	bc, #0x0004
      002283 09                    8055 	add	hl, bc
      002284 36 00                 8056 	ld	(hl), #0x00
                                   8057 ;src/main.c:842: set_sprite_tile(20 + oldestEx+oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      002286 21rCFr00              8058 	ld	hl, #_oldestEx
      002289 4E                    8059 	ld	c, (hl)
      00228A 06 00                 8060 	ld	b, #0x00
      00228C 69                    8061 	ld	l, c
      00228D 60                    8062 	ld	h, b
      00228E 29                    8063 	add	hl, hl
      00228F 09                    8064 	add	hl, bc
      002290 29                    8065 	add	hl, hl
      002291 01r03r01              8066 	ld	bc,#_explosions
      002294 09                    8067 	add	hl,bc
      002295 5D                    8068 	ld	e, l
      002296 54                    8069 	ld	d, h
      002297 21 05 00              8070 	ld	hl, #0x0005
      00229A 19                    8071 	add	hl, de
      00229B 4E                    8072 	ld	c, (hl)
      00229C 13                    8073 	inc	de
      00229D 13                    8074 	inc	de
      00229E 13                    8075 	inc	de
      00229F 1A                    8076 	ld	a, (de)
      0022A0 87                    8077 	add	a, a
      0022A1 81                    8078 	add	a, c
      0022A2 4F                    8079 	ld	c, a
      0022A3 21rCFr00              8080 	ld	hl, #_oldestEx
      0022A6 46                    8081 	ld	b, (hl)
      0022A7 78                    8082 	ld	a, b
      0022A8 C6 14                 8083 	add	a, #0x14
      0022AA 80                    8084 	add	a, b
                                   8085 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022AB 6F                    8086 	ld	l, a
      0022AC 11r00r00              8087 	ld	de, #_shadow_OAM+0
                                   8088 ;	spillPairReg hl
                                   8089 ;	spillPairReg hl
      0022AF 26 00                 8090 	ld	h, #0x00
                                   8091 ;	spillPairReg hl
                                   8092 ;	spillPairReg hl
      0022B1 29                    8093 	add	hl, hl
      0022B2 29                    8094 	add	hl, hl
      0022B3 19                    8095 	add	hl, de
      0022B4 23                    8096 	inc	hl
      0022B5 23                    8097 	inc	hl
      0022B6 71                    8098 	ld	(hl), c
                                   8099 ;src/main.c:843: set_sprite_tile(21 + oldestEx+oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      0022B7 21rCFr00              8100 	ld	hl, #_oldestEx
      0022BA 4E                    8101 	ld	c, (hl)
      0022BB 06 00                 8102 	ld	b, #0x00
      0022BD 69                    8103 	ld	l, c
      0022BE 60                    8104 	ld	h, b
      0022BF 29                    8105 	add	hl, hl
      0022C0 09                    8106 	add	hl, bc
      0022C1 29                    8107 	add	hl, hl
      0022C2 01r03r01              8108 	ld	bc,#_explosions
      0022C5 09                    8109 	add	hl,bc
      0022C6 5D                    8110 	ld	e, l
      0022C7 54                    8111 	ld	d, h
      0022C8 21 05 00              8112 	ld	hl, #0x0005
      0022CB 19                    8113 	add	hl, de
      0022CC 4E                    8114 	ld	c, (hl)
      0022CD 13                    8115 	inc	de
      0022CE 13                    8116 	inc	de
      0022CF 13                    8117 	inc	de
      0022D0 1A                    8118 	ld	a, (de)
      0022D1 87                    8119 	add	a, a
      0022D2 81                    8120 	add	a, c
      0022D3 C6 02                 8121 	add	a, #0x02
      0022D5 4F                    8122 	ld	c, a
      0022D6 21rCFr00              8123 	ld	hl, #_oldestEx
      0022D9 46                    8124 	ld	b, (hl)
      0022DA 78                    8125 	ld	a, b
      0022DB C6 15                 8126 	add	a, #0x15
      0022DD 80                    8127 	add	a, b
                                   8128 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022DE 6F                    8129 	ld	l, a
      0022DF 11r00r00              8130 	ld	de, #_shadow_OAM+0
                                   8131 ;	spillPairReg hl
                                   8132 ;	spillPairReg hl
      0022E2 26 00                 8133 	ld	h, #0x00
                                   8134 ;	spillPairReg hl
                                   8135 ;	spillPairReg hl
      0022E4 29                    8136 	add	hl, hl
      0022E5 29                    8137 	add	hl, hl
      0022E6 19                    8138 	add	hl, de
      0022E7 23                    8139 	inc	hl
      0022E8 23                    8140 	inc	hl
      0022E9 71                    8141 	ld	(hl), c
                                   8142 ;src/main.c:848: oldestEx++;
      0022EA 21rCFr00              8143 	ld	hl, #_oldestEx
      0022ED 34                    8144 	inc	(hl)
                                   8145 ;src/main.c:849: if (oldestEx >= exCount) {
      0022EE 21rA5r0B              8146 	ld	hl, #_exCount
      0022F1 4E                    8147 	ld	c, (hl)
      0022F2 21rCFr00              8148 	ld	hl, #_oldestEx
      0022F5 7E                    8149 	ld	a, (hl)
      0022F6 91                    8150 	sub	a, c
      0022F7 38 02                 8151 	jr	C, 00107$
                                   8152 ;src/main.c:850: oldestEx = 0;
      0022F9 36 00                 8153 	ld	(hl), #0x00
      0022FB                       8154 00107$:
                                   8155 ;src/main.c:854: }
      0022FB E8 04                 8156 	add	sp, #4
      0022FD C9                    8157 	ret
                                   8158 ;src/main.c:856: void checkCollision() {
                                   8159 ;	---------------------------------
                                   8160 ; Function checkCollision
                                   8161 ; ---------------------------------
      0022FE                       8162 _checkCollision::
      0022FE E8 E9                 8163 	add	sp, #-23
                                   8164 ;src/main.c:863: struct Enemy *eptr = enemies + enemyCollisionCount;
      002300 21rB9r00              8165 	ld	hl, #_enemyCollisionCount
      002303 4E                    8166 	ld	c, (hl)
      002304 06 00                 8167 	ld	b, #0x00
      002306 69                    8168 	ld	l, c
      002307 60                    8169 	ld	h, b
      002308 29                    8170 	add	hl, hl
      002309 29                    8171 	add	hl, hl
      00230A 29                    8172 	add	hl, hl
      00230B 09                    8173 	add	hl, bc
      00230C 29                    8174 	add	hl, hl
      00230D 01r5Ar00              8175 	ld	bc,#_enemies
      002310 09                    8176 	add	hl,bc
      002311 4D                    8177 	ld	c, l
      002312 7C                    8178 	ld	a, h
      002313 F8 00                 8179 	ldhl	sp,	#0
      002315 71                    8180 	ld	(hl), c
      002316 23                    8181 	inc	hl
      002317 77                    8182 	ld	(hl), a
                                   8183 ;src/main.c:864: uint8_t i = enemyCollisionCount;
      002318 FArB9r00              8184 	ld	a, (#_enemyCollisionCount)
      00231B F8 02                 8185 	ldhl	sp,	#2
      00231D 77                    8186 	ld	(hl), a
                                   8187 ;src/main.c:866: if (eptr->visible && eptr->alive) {
      00231E D1                    8188 	pop	de
      00231F D5                    8189 	push	de
      002320 21 0A 00              8190 	ld	hl, #0x000a
      002323 19                    8191 	add	hl, de
      002324 4D                    8192 	ld	c, l
      002325 44                    8193 	ld	b, h
      002326 0A                    8194 	ld	a, (bc)
      002327 B7                    8195 	or	a, a
      002328 CArABr27              8196 	jp	Z, 00139$
      00232B D1                    8197 	pop	de
      00232C D5                    8198 	push	de
      00232D 21 09 00              8199 	ld	hl, #0x0009
      002330 19                    8200 	add	hl, de
      002331 4D                    8201 	ld	c, l
      002332 44                    8202 	ld	b, h
      002333 0A                    8203 	ld	a, (bc)
      002334 B7                    8204 	or	a, a
      002335 CArABr27              8205 	jp	Z, 00139$
                                   8206 ;src/main.c:868: uint8_t alive = 1;
      002338 F8 12                 8207 	ldhl	sp,	#18
      00233A 36 01                 8208 	ld	(hl), #0x01
                                   8209 ;src/main.c:871: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00233C D1                    8210 	pop	de
      00233D D5                    8211 	push	de
      00233E 21 08 00              8212 	ld	hl, #0x0008
      002341 19                    8213 	add	hl, de
      002342 4D                    8214 	ld	c, l
      002343 44                    8215 	ld	b, h
      002344 0A                    8216 	ld	a, (bc)
      002345 4F                    8217 	ld	c, a
      002346 3D                    8218 	dec	a
      002347 3E 01                 8219 	ld	a, #0x01
      002349 28 01                 8220 	jr	Z, 00350$
      00234B AF                    8221 	xor	a, a
      00234C                       8222 00350$:
      00234C F8 13                 8223 	ldhl	sp,	#19
      00234E 77                    8224 	ld	(hl), a
      00234F FArAFr00              8225 	ld	a, (#_playerDrawX)
      002352 F8 14                 8226 	ldhl	sp,	#20
      002354 77                    8227 	ld	(hl), a
                                   8228 ;src/main.c:872: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002355 79                    8229 	ld	a, c
      002356 D6 02                 8230 	sub	a, #0x02
      002358 3E 01                 8231 	ld	a, #0x01
      00235A 28 01                 8232 	jr	Z, 00352$
      00235C AF                    8233 	xor	a, a
      00235D                       8234 00352$:
      00235D F8 15                 8235 	ldhl	sp,	#21
                                   8236 ;src/main.c:871: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00235F 32                    8237 	ld	(hl-), a
      002360 2B                    8238 	dec	hl
      002361 7E                    8239 	ld	a, (hl)
      002362 B7                    8240 	or	a, a
      002363 28 2F                 8241 	jr	Z, 00110$
      002365 D1                    8242 	pop	de
      002366 D5                    8243 	push	de
      002367 1A                    8244 	ld	a, (de)
      002368 F8 16                 8245 	ldhl	sp,	#22
      00236A 77                    8246 	ld	(hl), a
      00236B 3A                    8247 	ld	a, (hl-)
      00236C 2B                    8248 	dec	hl
      00236D 96                    8249 	sub	a, (hl)
      00236E 23                    8250 	inc	hl
      00236F 23                    8251 	inc	hl
      002370 77                    8252 	ld	(hl), a
                                   8253 ;src/main.c:368: if (value >= 0) return value;
      002371 CB 7E                 8254 	bit	7, (hl)
      002373 28 06                 8255 	jr	Z, 00147$
                                   8256 ;src/main.c:369: else return - value;
      002375 AF                    8257 	xor	a, a
      002376 F8 16                 8258 	ldhl	sp,	#22
      002378 96                    8259 	sub	a, (hl)
      002379 4F                    8260 	ld	c, a
      00237A 71                    8261 	ld	(hl), c
                                   8262 ;src/main.c:871: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00237B                       8263 00147$:
      00237B F8 16                 8264 	ldhl	sp,	#22
      00237D 5E                    8265 	ld	e, (hl)
      00237E 3E 08                 8266 	ld	a,#0x08
      002380 57                    8267 	ld	d,a
      002381 96                    8268 	sub	a, (hl)
      002382 CB 7B                 8269 	bit	7, e
      002384 28 07                 8270 	jr	Z, 00353$
      002386 CB 7A                 8271 	bit	7, d
      002388 20 08                 8272 	jr	NZ, 00354$
      00238A BF                    8273 	cp	a, a
      00238B 18 05                 8274 	jr	00354$
      00238D                       8275 00353$:
      00238D CB 7A                 8276 	bit	7, d
      00238F 28 01                 8277 	jr	Z, 00354$
      002391 37                    8278 	scf
      002392                       8279 00354$:
      002392 30 2F                 8280 	jr	NC, 00106$
      002394                       8281 00110$:
                                   8282 ;src/main.c:872: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002394 F8 15                 8283 	ldhl	sp,	#21
      002396 7E                    8284 	ld	a, (hl)
      002397 B7                    8285 	or	a, a
      002398 CAr7Er24              8286 	jp	Z, 00107$
      00239B 2B                    8287 	dec	hl
      00239C D1                    8288 	pop	de
      00239D D5                    8289 	push	de
      00239E 1A                    8290 	ld	a, (de)
      00239F 96                    8291 	sub	a, (hl)
      0023A0 4F                    8292 	ld	c, a
                                   8293 ;src/main.c:368: if (value >= 0) return value;
      0023A1 CB 79                 8294 	bit	7, c
      0023A3 20 03                 8295 	jr	NZ, 00149$
      0023A5 41                    8296 	ld	b, c
      0023A6 18 03                 8297 	jr	00151$
      0023A8                       8298 00149$:
                                   8299 ;src/main.c:369: else return - value;
      0023A8 AF                    8300 	xor	a, a
      0023A9 91                    8301 	sub	a, c
      0023AA 47                    8302 	ld	b, a
                                   8303 ;src/main.c:872: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0023AB                       8304 00151$:
      0023AB 58                    8305 	ld	e, b
      0023AC 3E 10                 8306 	ld	a,#0x10
      0023AE 57                    8307 	ld	d,a
      0023AF 90                    8308 	sub	a, b
      0023B0 CB 7B                 8309 	bit	7, e
      0023B2 28 07                 8310 	jr	Z, 00355$
      0023B4 CB 7A                 8311 	bit	7, d
      0023B6 20 08                 8312 	jr	NZ, 00356$
      0023B8 BF                    8313 	cp	a, a
      0023B9 18 05                 8314 	jr	00356$
      0023BB                       8315 00355$:
      0023BB CB 7A                 8316 	bit	7, d
      0023BD 28 01                 8317 	jr	Z, 00356$
      0023BF 37                    8318 	scf
      0023C0                       8319 00356$:
      0023C0 DAr7Er24              8320 	jp	C, 00107$
      0023C3                       8321 00106$:
                                   8322 ;src/main.c:873: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0023C3 C1                    8323 	pop	bc
      0023C4 C5                    8324 	push	bc
      0023C5 03                    8325 	inc	bc
      0023C6 03                    8326 	inc	bc
      0023C7 FArB0r00              8327 	ld	a, (#_playerDrawY)
      0023CA F8 16                 8328 	ldhl	sp,	#22
      0023CC 77                    8329 	ld	(hl), a
      0023CD F8 13                 8330 	ldhl	sp,	#19
      0023CF 7E                    8331 	ld	a, (hl)
      0023D0 B7                    8332 	or	a, a
      0023D1 28 23                 8333 	jr	Z, 00105$
      0023D3 0A                    8334 	ld	a, (bc)
      0023D4 F8 16                 8335 	ldhl	sp,	#22
      0023D6 96                    8336 	sub	a, (hl)
      0023D7 6F                    8337 	ld	l, a
                                   8338 ;	spillPairReg hl
                                   8339 ;	spillPairReg hl
                                   8340 ;src/main.c:368: if (value >= 0) return value;
      0023D8 CB 7D                 8341 	bit	7, l
      0023DA 28 03                 8342 	jr	Z, 00155$
                                   8343 ;src/main.c:369: else return - value;
      0023DC AF                    8344 	xor	a, a
      0023DD 95                    8345 	sub	a, l
      0023DE 6F                    8346 	ld	l, a
                                   8347 ;	spillPairReg hl
                                   8348 ;	spillPairReg hl
                                   8349 ;src/main.c:873: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0023DF                       8350 00155$:
      0023DF 5D                    8351 	ld	e, l
      0023E0 3E 08                 8352 	ld	a,#0x08
      0023E2 57                    8353 	ld	d,a
      0023E3 95                    8354 	sub	a, l
      0023E4 CB 7B                 8355 	bit	7, e
      0023E6 28 07                 8356 	jr	Z, 00357$
      0023E8 CB 7A                 8357 	bit	7, d
      0023EA 20 08                 8358 	jr	NZ, 00358$
      0023EC BF                    8359 	cp	a, a
      0023ED 18 05                 8360 	jr	00358$
      0023EF                       8361 00357$:
      0023EF CB 7A                 8362 	bit	7, d
      0023F1 28 01                 8363 	jr	Z, 00358$
      0023F3 37                    8364 	scf
      0023F4                       8365 00358$:
      0023F4 30 29                 8366 	jr	NC, 00101$
      0023F6                       8367 00105$:
                                   8368 ;src/main.c:874: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      0023F6 F8 15                 8369 	ldhl	sp,	#21
      0023F8 7E                    8370 	ld	a, (hl)
      0023F9 B7                    8371 	or	a, a
      0023FA CAr7Er24              8372 	jp	Z, 00107$
      0023FD 23                    8373 	inc	hl
      0023FE 0A                    8374 	ld	a, (bc)
      0023FF 96                    8375 	sub	a, (hl)
      002400 4F                    8376 	ld	c, a
                                   8377 ;src/main.c:368: if (value >= 0) return value;
      002401 CB 79                 8378 	bit	7, c
      002403 28 03                 8379 	jr	Z, 00159$
                                   8380 ;src/main.c:369: else return - value;
      002405 AF                    8381 	xor	a, a
      002406 91                    8382 	sub	a, c
      002407 4F                    8383 	ld	c, a
                                   8384 ;src/main.c:874: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002408                       8385 00159$:
      002408 59                    8386 	ld	e, c
      002409 3E 10                 8387 	ld	a,#0x10
      00240B 57                    8388 	ld	d,a
      00240C 91                    8389 	sub	a, c
      00240D CB 7B                 8390 	bit	7, e
      00240F 28 07                 8391 	jr	Z, 00359$
      002411 CB 7A                 8392 	bit	7, d
      002413 20 08                 8393 	jr	NZ, 00360$
      002415 BF                    8394 	cp	a, a
      002416 18 05                 8395 	jr	00360$
      002418                       8396 00359$:
      002418 CB 7A                 8397 	bit	7, d
      00241A 28 01                 8398 	jr	Z, 00360$
      00241C 37                    8399 	scf
      00241D                       8400 00360$:
      00241D 38 5F                 8401 	jr	C, 00107$
      00241F                       8402 00101$:
                                   8403 ;src/main.c:876: set_sprite_tile(10+(i<<1), 0x7f);
      00241F F8 02                 8404 	ldhl	sp,	#2
      002421 7E                    8405 	ld	a, (hl)
      002422 87                    8406 	add	a, a
      002423 C6 0A                 8407 	add	a, #0x0a
                                   8408 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002425 6F                    8409 	ld	l, a
      002426 01r00r00              8410 	ld	bc, #_shadow_OAM+0
                                   8411 ;	spillPairReg hl
                                   8412 ;	spillPairReg hl
      002429 26 00                 8413 	ld	h, #0x00
                                   8414 ;	spillPairReg hl
                                   8415 ;	spillPairReg hl
      00242B 29                    8416 	add	hl, hl
      00242C 29                    8417 	add	hl, hl
      00242D 09                    8418 	add	hl, bc
      00242E 23                    8419 	inc	hl
      00242F 23                    8420 	inc	hl
      002430 36 7F                 8421 	ld	(hl), #0x7f
                                   8422 ;src/main.c:877: set_sprite_tile(10+(i<<1)+1, 0x7f);
      002432 F8 02                 8423 	ldhl	sp,	#2
      002434 7E                    8424 	ld	a, (hl)
      002435 87                    8425 	add	a, a
      002436 C6 0B                 8426 	add	a, #0x0b
                                   8427 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002438 6F                    8428 	ld	l, a
      002439 01r00r00              8429 	ld	bc, #_shadow_OAM+0
                                   8430 ;	spillPairReg hl
                                   8431 ;	spillPairReg hl
      00243C 26 00                 8432 	ld	h, #0x00
                                   8433 ;	spillPairReg hl
                                   8434 ;	spillPairReg hl
      00243E 29                    8435 	add	hl, hl
      00243F 29                    8436 	add	hl, hl
      002440 09                    8437 	add	hl, bc
      002441 23                    8438 	inc	hl
      002442 23                    8439 	inc	hl
      002443 36 7F                 8440 	ld	(hl), #0x7f
                                   8441 ;src/main.c:878: eptr->alive = 0;
      002445 D1                    8442 	pop	de
      002446 D5                    8443 	push	de
      002447 21 09 00              8444 	ld	hl, #0x0009
      00244A 19                    8445 	add	hl, de
      00244B 4D                    8446 	ld	c, l
      00244C 44                    8447 	ld	b, h
      00244D AF                    8448 	xor	a, a
      00244E 02                    8449 	ld	(bc), a
                                   8450 ;src/main.c:879: eptr->visible = 0;
      00244F D1                    8451 	pop	de
      002450 D5                    8452 	push	de
      002451 21 0A 00              8453 	ld	hl, #0x000a
      002454 19                    8454 	add	hl, de
      002455 4D                    8455 	ld	c, l
      002456 44                    8456 	ld	b, h
      002457 AF                    8457 	xor	a, a
      002458 02                    8458 	ld	(bc), a
                                   8459 ;src/main.c:880: takeDamage(eptr->damage);
      002459 D1                    8460 	pop	de
      00245A D5                    8461 	push	de
      00245B 21 0B 00              8462 	ld	hl, #0x000b
      00245E 19                    8463 	add	hl, de
      00245F 4D                    8464 	ld	c, l
      002460 44                    8465 	ld	b, h
      002461 0A                    8466 	ld	a, (bc)
      002462 06 00                 8467 	ld	b, #0x00
      002464 4F                    8468 	ld	c, a
      002465 C5                    8469 	push	bc
      002466 CDrADr20              8470 	call	_takeDamage
      002469 E1                    8471 	pop	hl
                                   8472 ;src/main.c:881: initEnemy(i);
      00246A F8 02                 8473 	ldhl	sp,	#2
      00246C 7E                    8474 	ld	a, (hl)
      00246D F5                    8475 	push	af
      00246E 33                    8476 	inc	sp
      00246F CDr64r11              8477 	call	_initEnemy
      002472 33                    8478 	inc	sp
                                   8479 ;src/main.c:882: playSound(0);
      002473 AF                    8480 	xor	a, a
      002474 F5                    8481 	push	af
      002475 33                    8482 	inc	sp
      002476 CDr96r0F              8483 	call	_playSound
      002479 33                    8484 	inc	sp
                                   8485 ;src/main.c:884: alive = 0;
      00247A F8 12                 8486 	ldhl	sp,	#18
      00247C 36 00                 8487 	ld	(hl), #0x00
      00247E                       8488 00107$:
                                   8489 ;src/main.c:890: if (alive) {
      00247E F8 12                 8490 	ldhl	sp,	#18
      002480 7E                    8491 	ld	a, (hl)
      002481 B7                    8492 	or	a, a
      002482 CArABr27              8493 	jp	Z, 00139$
                                   8494 ;src/main.c:891: struct Projectile *pptr = projectiles;
      002485 23                    8495 	inc	hl
      002486 3ErB4                 8496 	ld	a, #<(_projectiles)
      002488 22                    8497 	ld	(hl+), a
      002489 36s00                 8498 	ld	(hl), #>(_projectiles)
                                   8499 ;src/main.c:893: while (j < PROJECTILECOUNT) {
      00248B D1                    8500 	pop	de
      00248C D5                    8501 	push	de
      00248D 21 02 00              8502 	ld	hl, #0x0002
      002490 19                    8503 	add	hl, de
      002491 E5                    8504 	push	hl
      002492 7D                    8505 	ld	a, l
      002493 F8 05                 8506 	ldhl	sp,	#5
      002495 77                    8507 	ld	(hl), a
      002496 E1                    8508 	pop	hl
      002497 7C                    8509 	ld	a, h
      002498 F8 04                 8510 	ldhl	sp,	#4
      00249A 32                    8511 	ld	(hl-), a
      00249B 2A                    8512 	ld	a, (hl+)
      00249C 23                    8513 	inc	hl
      00249D 32                    8514 	ld	(hl-), a
      00249E 2A                    8515 	ld	a, (hl+)
      00249F 23                    8516 	inc	hl
      0024A0 77                    8517 	ld	(hl), a
      0024A1 D1                    8518 	pop	de
      0024A2 D5                    8519 	push	de
      0024A3 21 08 00              8520 	ld	hl, #0x0008
      0024A6 19                    8521 	add	hl, de
      0024A7 E5                    8522 	push	hl
      0024A8 7D                    8523 	ld	a, l
      0024A9 F8 09                 8524 	ldhl	sp,	#9
      0024AB 77                    8525 	ld	(hl), a
      0024AC E1                    8526 	pop	hl
      0024AD 7C                    8527 	ld	a, h
      0024AE F8 08                 8528 	ldhl	sp,	#8
      0024B0 77                    8529 	ld	(hl), a
      0024B1 F8 03                 8530 	ldhl	sp,	#3
      0024B3 7E                    8531 	ld	a, (hl)
      0024B4 F8 09                 8532 	ldhl	sp,	#9
      0024B6 77                    8533 	ld	(hl), a
      0024B7 F8 04                 8534 	ldhl	sp,	#4
      0024B9 7E                    8535 	ld	a, (hl)
      0024BA F8 0A                 8536 	ldhl	sp,	#10
      0024BC 77                    8537 	ld	(hl), a
      0024BD F8 15                 8538 	ldhl	sp,	#21
      0024BF 36 00                 8539 	ld	(hl), #0x00
      0024C1                       8540 00133$:
      0024C1 21r9Fr0B              8541 	ld	hl, #_PROJECTILECOUNT
      0024C4 4E                    8542 	ld	c, (hl)
      0024C5 F8 15                 8543 	ldhl	sp,	#21
      0024C7 7E                    8544 	ld	a, (hl)
      0024C8 91                    8545 	sub	a, c
      0024C9 D2rABr27              8546 	jp	NC, 00139$
                                   8547 ;src/main.c:894: if (pptr->active) {
      0024CC 2B                    8548 	dec	hl
      0024CD 2B                    8549 	dec	hl
      0024CE 2A                    8550 	ld	a, (hl+)
      0024CF 5F                    8551 	ld	e, a
      0024D0 56                    8552 	ld	d, (hl)
      0024D1 21 0A 00              8553 	ld	hl, #0x000a
      0024D4 19                    8554 	add	hl, de
      0024D5 4D                    8555 	ld	c, l
      0024D6 44                    8556 	ld	b, h
      0024D7 0A                    8557 	ld	a, (bc)
      0024D8 B7                    8558 	or	a, a
      0024D9 CAr92r27              8559 	jp	Z, 00132$
                                   8560 ;src/main.c:896: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0024DC F8 07                 8561 	ldhl	sp,#7
      0024DE 2A                    8562 	ld	a, (hl+)
      0024DF 5F                    8563 	ld	e, a
      0024E0 56                    8564 	ld	d, (hl)
      0024E1 1A                    8565 	ld	a, (de)
      0024E2 4F                    8566 	ld	c, a
      0024E3 3D                    8567 	dec	a
      0024E4 3E 01                 8568 	ld	a, #0x01
      0024E6 28 01                 8569 	jr	Z, 00362$
      0024E8 AF                    8570 	xor	a, a
      0024E9                       8571 00362$:
      0024E9 F8 11                 8572 	ldhl	sp,	#17
      0024EB 77                    8573 	ld	(hl), a
                                   8574 ;src/main.c:897: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      0024EC 79                    8575 	ld	a, c
      0024ED D6 02                 8576 	sub	a, #0x02
      0024EF 3E 01                 8577 	ld	a, #0x01
      0024F1 28 01                 8578 	jr	Z, 00364$
      0024F3 AF                    8579 	xor	a, a
      0024F4                       8580 00364$:
      0024F4 F8 12                 8581 	ldhl	sp,	#18
                                   8582 ;src/main.c:896: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0024F6 32                    8583 	ld	(hl-), a
      0024F7 7E                    8584 	ld	a, (hl)
      0024F8 B7                    8585 	or	a, a
      0024F9 28 2C                 8586 	jr	Z, 00130$
      0024FB D1                    8587 	pop	de
      0024FC D5                    8588 	push	de
      0024FD 1A                    8589 	ld	a, (de)
      0024FE F8 13                 8590 	ldhl	sp,#19
      002500 5E                    8591 	ld	e, (hl)
      002501 23                    8592 	inc	hl
      002502 56                    8593 	ld	d, (hl)
      002503 F5                    8594 	push	af
      002504 1A                    8595 	ld	a, (de)
      002505 4F                    8596 	ld	c, a
      002506 F1                    8597 	pop	af
      002507 91                    8598 	sub	a, c
      002508 4F                    8599 	ld	c, a
                                   8600 ;src/main.c:368: if (value >= 0) return value;
      002509 CB 79                 8601 	bit	7, c
      00250B 28 03                 8602 	jr	Z, 00165$
                                   8603 ;src/main.c:369: else return - value;
      00250D AF                    8604 	xor	a, a
      00250E 91                    8605 	sub	a, c
      00250F 4F                    8606 	ld	c, a
                                   8607 ;src/main.c:896: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002510                       8608 00165$:
      002510 59                    8609 	ld	e, c
      002511 3E 08                 8610 	ld	a,#0x08
      002513 57                    8611 	ld	d,a
      002514 91                    8612 	sub	a, c
      002515 CB 7B                 8613 	bit	7, e
      002517 28 07                 8614 	jr	Z, 00365$
      002519 CB 7A                 8615 	bit	7, d
      00251B 20 08                 8616 	jr	NZ, 00366$
      00251D BF                    8617 	cp	a, a
      00251E 18 05                 8618 	jr	00366$
      002520                       8619 00365$:
      002520 CB 7A                 8620 	bit	7, d
      002522 28 01                 8621 	jr	Z, 00366$
      002524 37                    8622 	scf
      002525                       8623 00366$:
      002525 30 3A                 8624 	jr	NC, 00126$
      002527                       8625 00130$:
                                   8626 ;src/main.c:897: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002527 F8 12                 8627 	ldhl	sp,	#18
      002529 7E                    8628 	ld	a, (hl)
      00252A B7                    8629 	or	a, a
      00252B CAr92r27              8630 	jp	Z, 00132$
      00252E 23                    8631 	inc	hl
      00252F D1                    8632 	pop	de
      002530 D5                    8633 	push	de
      002531 1A                    8634 	ld	a, (de)
      002532 5E                    8635 	ld	e, (hl)
      002533 23                    8636 	inc	hl
      002534 56                    8637 	ld	d, (hl)
      002535 23                    8638 	inc	hl
      002536 23                    8639 	inc	hl
      002537 F5                    8640 	push	af
      002538 1A                    8641 	ld	a, (de)
      002539 4F                    8642 	ld	c, a
      00253A F1                    8643 	pop	af
      00253B 91                    8644 	sub	a, c
      00253C 77                    8645 	ld	(hl), a
                                   8646 ;src/main.c:368: if (value >= 0) return value;
      00253D CB 7E                 8647 	bit	7, (hl)
      00253F 20 03                 8648 	jr	NZ, 00167$
      002541 4E                    8649 	ld	c, (hl)
      002542 18 05                 8650 	jr	00169$
      002544                       8651 00167$:
                                   8652 ;src/main.c:369: else return - value;
      002544 AF                    8653 	xor	a, a
      002545 F8 16                 8654 	ldhl	sp,	#22
      002547 96                    8655 	sub	a, (hl)
      002548 4F                    8656 	ld	c, a
                                   8657 ;src/main.c:897: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002549                       8658 00169$:
      002549 59                    8659 	ld	e, c
      00254A 3E 10                 8660 	ld	a,#0x10
      00254C 57                    8661 	ld	d,a
      00254D 91                    8662 	sub	a, c
      00254E CB 7B                 8663 	bit	7, e
      002550 28 07                 8664 	jr	Z, 00367$
      002552 CB 7A                 8665 	bit	7, d
      002554 20 08                 8666 	jr	NZ, 00368$
      002556 BF                    8667 	cp	a, a
      002557 18 05                 8668 	jr	00368$
      002559                       8669 00367$:
      002559 CB 7A                 8670 	bit	7, d
      00255B 28 01                 8671 	jr	Z, 00368$
      00255D 37                    8672 	scf
      00255E                       8673 00368$:
      00255E DAr92r27              8674 	jp	C, 00132$
      002561                       8675 00126$:
                                   8676 ;src/main.c:898: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002561 F8 13                 8677 	ldhl	sp,	#19
      002563 2A                    8678 	ld	a, (hl+)
      002564 4F                    8679 	ld	c, a
      002565 46                    8680 	ld	b, (hl)
      002566 03                    8681 	inc	bc
      002567 03                    8682 	inc	bc
      002568 F8 11                 8683 	ldhl	sp,	#17
      00256A 7E                    8684 	ld	a, (hl)
      00256B B7                    8685 	or	a, a
      00256C 28 2A                 8686 	jr	Z, 00125$
      00256E F8 09                 8687 	ldhl	sp,#9
      002570 2A                    8688 	ld	a, (hl+)
      002571 5F                    8689 	ld	e, a
      002572 56                    8690 	ld	d, (hl)
      002573 1A                    8691 	ld	a, (de)
      002574 F5                    8692 	push	af
      002575 0A                    8693 	ld	a, (bc)
      002576 5F                    8694 	ld	e, a
      002577 F1                    8695 	pop	af
      002578 93                    8696 	sub	a, e
      002579 6F                    8697 	ld	l, a
                                   8698 ;	spillPairReg hl
                                   8699 ;	spillPairReg hl
                                   8700 ;src/main.c:368: if (value >= 0) return value;
      00257A CB 7D                 8701 	bit	7, l
      00257C 28 03                 8702 	jr	Z, 00173$
                                   8703 ;src/main.c:369: else return - value;
      00257E AF                    8704 	xor	a, a
      00257F 95                    8705 	sub	a, l
      002580 6F                    8706 	ld	l, a
                                   8707 ;	spillPairReg hl
                                   8708 ;	spillPairReg hl
                                   8709 ;src/main.c:898: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002581                       8710 00173$:
      002581 5D                    8711 	ld	e, l
      002582 3E 08                 8712 	ld	a,#0x08
      002584 57                    8713 	ld	d,a
      002585 95                    8714 	sub	a, l
      002586 CB 7B                 8715 	bit	7, e
      002588 28 07                 8716 	jr	Z, 00369$
      00258A CB 7A                 8717 	bit	7, d
      00258C 20 08                 8718 	jr	NZ, 00370$
      00258E BF                    8719 	cp	a, a
      00258F 18 05                 8720 	jr	00370$
      002591                       8721 00369$:
      002591 CB 7A                 8722 	bit	7, d
      002593 28 01                 8723 	jr	Z, 00370$
      002595 37                    8724 	scf
      002596                       8725 00370$:
      002596 30 32                 8726 	jr	NC, 00121$
      002598                       8727 00125$:
                                   8728 ;src/main.c:899: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      002598 F8 12                 8729 	ldhl	sp,	#18
      00259A 7E                    8730 	ld	a, (hl)
      00259B B7                    8731 	or	a, a
      00259C CAr92r27              8732 	jp	Z, 00132$
      00259F F8 03                 8733 	ldhl	sp,#3
      0025A1 2A                    8734 	ld	a, (hl+)
      0025A2 5F                    8735 	ld	e, a
      0025A3 56                    8736 	ld	d, (hl)
      0025A4 1A                    8737 	ld	a, (de)
      0025A5 F5                    8738 	push	af
      0025A6 0A                    8739 	ld	a, (bc)
      0025A7 4F                    8740 	ld	c, a
      0025A8 F1                    8741 	pop	af
      0025A9 91                    8742 	sub	a, c
      0025AA 4F                    8743 	ld	c, a
                                   8744 ;src/main.c:368: if (value >= 0) return value;
      0025AB CB 79                 8745 	bit	7, c
      0025AD 28 03                 8746 	jr	Z, 00177$
                                   8747 ;src/main.c:369: else return - value;
      0025AF AF                    8748 	xor	a, a
      0025B0 91                    8749 	sub	a, c
      0025B1 4F                    8750 	ld	c, a
                                   8751 ;src/main.c:899: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      0025B2                       8752 00177$:
      0025B2 59                    8753 	ld	e, c
      0025B3 3E 10                 8754 	ld	a,#0x10
      0025B5 57                    8755 	ld	d,a
      0025B6 91                    8756 	sub	a, c
      0025B7 CB 7B                 8757 	bit	7, e
      0025B9 28 07                 8758 	jr	Z, 00371$
      0025BB CB 7A                 8759 	bit	7, d
      0025BD 20 08                 8760 	jr	NZ, 00372$
      0025BF BF                    8761 	cp	a, a
      0025C0 18 05                 8762 	jr	00372$
      0025C2                       8763 00371$:
      0025C2 CB 7A                 8764 	bit	7, d
      0025C4 28 01                 8765 	jr	Z, 00372$
      0025C6 37                    8766 	scf
      0025C7                       8767 00372$:
      0025C7 DAr92r27              8768 	jp	C, 00132$
      0025CA                       8769 00121$:
                                   8770 ;src/main.c:901: set_sprite_tile(30+j, 0x7f);
      0025CA F8 15                 8771 	ldhl	sp,	#21
      0025CC 7E                    8772 	ld	a, (hl)
      0025CD C6 1E                 8773 	add	a, #0x1e
                                   8774 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0025CF 6F                    8775 	ld	l, a
      0025D0 01r00r00              8776 	ld	bc, #_shadow_OAM+0
                                   8777 ;	spillPairReg hl
                                   8778 ;	spillPairReg hl
      0025D3 26 00                 8779 	ld	h, #0x00
                                   8780 ;	spillPairReg hl
                                   8781 ;	spillPairReg hl
      0025D5 29                    8782 	add	hl, hl
      0025D6 29                    8783 	add	hl, hl
      0025D7 09                    8784 	add	hl, bc
      0025D8 23                    8785 	inc	hl
      0025D9 23                    8786 	inc	hl
      0025DA 36 7F                 8787 	ld	(hl), #0x7f
                                   8788 ;src/main.c:902: pptr->active = 0;
      0025DC F8 13                 8789 	ldhl	sp,#19
      0025DE 2A                    8790 	ld	a, (hl+)
      0025DF 5F                    8791 	ld	e, a
      0025E0 56                    8792 	ld	d, (hl)
      0025E1 21 0A 00              8793 	ld	hl, #0x000a
      0025E4 19                    8794 	add	hl, de
      0025E5 4D                    8795 	ld	c, l
      0025E6 44                    8796 	ld	b, h
      0025E7 AF                    8797 	xor	a, a
      0025E8 02                    8798 	ld	(bc), a
                                   8799 ;src/main.c:904: if (pptr->type == 0x2c) { //missile
      0025E9 F8 13                 8800 	ldhl	sp,#19
      0025EB 2A                    8801 	ld	a, (hl+)
      0025EC 5F                    8802 	ld	e, a
      0025ED 56                    8803 	ld	d, (hl)
      0025EE 21 0C 00              8804 	ld	hl, #0x000c
      0025F1 19                    8805 	add	hl, de
      0025F2 4D                    8806 	ld	c, l
      0025F3 44                    8807 	ld	b, h
      0025F4 0A                    8808 	ld	a, (bc)
      0025F5 5F                    8809 	ld	e, a
                                   8810 ;src/main.c:909: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      0025F6 D5                    8811 	push	de
      0025F7 F8 15                 8812 	ldhl	sp,#21
      0025F9 2A                    8813 	ld	a, (hl+)
      0025FA 5F                    8814 	ld	e, a
      0025FB 56                    8815 	ld	d, (hl)
      0025FC 21 08 00              8816 	ld	hl, #0x0008
      0025FF 19                    8817 	add	hl, de
      002600 D1                    8818 	pop	de
      002601 4D                    8819 	ld	c, l
      002602 44                    8820 	ld	b, h
                                   8821 ;src/main.c:904: if (pptr->type == 0x2c) { //missile
      002603 7B                    8822 	ld	a, e
      002604 D6 2C                 8823 	sub	a, #0x2c
      002606 C2r37r27              8824 	jp	NZ,00119$
                                   8825 ;src/main.c:909: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002609 F8 0B                 8826 	ldhl	sp,	#11
      00260B 79                    8827 	ld	a, c
      00260C 22                    8828 	ld	(hl+), a
      00260D 70                    8829 	ld	(hl), b
      00260E F8 16                 8830 	ldhl	sp,	#22
      002610 36 00                 8831 	ld	(hl), #0x00
      002612                       8832 00188$:
      002612 21r8Er0B              8833 	ld	hl, #_ENEMYCOUNT
      002615 4E                    8834 	ld	c, (hl)
      002616 F8 16                 8835 	ldhl	sp,	#22
      002618 7E                    8836 	ld	a, (hl)
      002619 91                    8837 	sub	a, c
      00261A D2r92r27              8838 	jp	NC, 00132$
                                   8839 ;src/main.c:910: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      00261D D1                    8840 	pop	de
      00261E D5                    8841 	push	de
      00261F 1A                    8842 	ld	a, (de)
      002620 F8 0F                 8843 	ldhl	sp,	#15
      002622 22                    8844 	ld	(hl+), a
      002623 13                    8845 	inc	de
      002624 1A                    8846 	ld	a, (de)
      002625 77                    8847 	ld	(hl), a
      002626 F8 16                 8848 	ldhl	sp,	#22
      002628 4E                    8849 	ld	c, (hl)
      002629 06 00                 8850 	ld	b, #0x00
      00262B 69                    8851 	ld	l, c
      00262C 60                    8852 	ld	h, b
      00262D 29                    8853 	add	hl, hl
      00262E 29                    8854 	add	hl, hl
      00262F 29                    8855 	add	hl, hl
      002630 09                    8856 	add	hl, bc
      002631 29                    8857 	add	hl, hl
      002632 01r5Ar00              8858 	ld	bc,#_enemies
      002635 09                    8859 	add	hl,bc
      002636 E5                    8860 	push	hl
      002637 7D                    8861 	ld	a, l
      002638 F8 13                 8862 	ldhl	sp,	#19
      00263A 77                    8863 	ld	(hl), a
      00263B E1                    8864 	pop	hl
      00263C 7C                    8865 	ld	a, h
      00263D F8 12                 8866 	ldhl	sp,	#18
      00263F 32                    8867 	ld	(hl-), a
      002640 2A                    8868 	ld	a, (hl+)
      002641 5F                    8869 	ld	e, a
      002642 3A                    8870 	ld	a, (hl-)
      002643 2B                    8871 	dec	hl
      002644 2B                    8872 	dec	hl
      002645 57                    8873 	ld	d, a
      002646 1A                    8874 	ld	a, (de)
      002647 4F                    8875 	ld	c, a
      002648 13                    8876 	inc	de
      002649 1A                    8877 	ld	a, (de)
      00264A 47                    8878 	ld	b, a
      00264B 2A                    8879 	ld	a, (hl+)
      00264C 5F                    8880 	ld	e, a
      00264D 56                    8881 	ld	d, (hl)
      00264E 7B                    8882 	ld	a, e
      00264F 91                    8883 	sub	a, c
      002650 5F                    8884 	ld	e, a
      002651 7A                    8885 	ld	a, d
      002652 98                    8886 	sbc	a, b
      002653 4B                    8887 	ld	c, e
      002654 47                    8888 	ld	b, a
                                   8889 ;	spillPairReg hl
                                   8890 ;	spillPairReg hl
      002655 60                    8891 	ld	h, b
                                   8892 ;	spillPairReg hl
                                   8893 ;	spillPairReg hl
      002656 CB 7C                 8894 	bit	7, h
      002658 20 07                 8895 	jr	NZ, 00180$
      00265A F8 0F                 8896 	ldhl	sp,	#15
      00265C 79                    8897 	ld	a, c
      00265D 22                    8898 	ld	(hl+), a
      00265E 70                    8899 	ld	(hl), b
      00265F 18 0B                 8900 	jr	00182$
      002661                       8901 00180$:
      002661 AF                    8902 	xor	a, a
      002662 91                    8903 	sub	a, c
      002663 4F                    8904 	ld	c, a
      002664 9F                    8905 	sbc	a, a
      002665 90                    8906 	sub	a, b
      002666 47                    8907 	ld	b, a
      002667 F8 0F                 8908 	ldhl	sp,	#15
      002669 79                    8909 	ld	a, c
      00266A 22                    8910 	ld	(hl+), a
      00266B 70                    8911 	ld	(hl), b
      00266C                       8912 00182$:
      00266C F8 05                 8913 	ldhl	sp,#5
      00266E 2A                    8914 	ld	a, (hl+)
      00266F 5F                    8915 	ld	e, a
      002670 56                    8916 	ld	d, (hl)
      002671 1A                    8917 	ld	a, (de)
      002672 4F                    8918 	ld	c, a
      002673 13                    8919 	inc	de
      002674 1A                    8920 	ld	a, (de)
      002675 47                    8921 	ld	b, a
      002676 F8 11                 8922 	ldhl	sp,	#17
      002678 2A                    8923 	ld	a, (hl+)
      002679 66                    8924 	ld	h, (hl)
                                   8925 ;	spillPairReg hl
                                   8926 ;	spillPairReg hl
      00267A 6F                    8927 	ld	l, a
                                   8928 ;	spillPairReg hl
                                   8929 ;	spillPairReg hl
      00267B 23                    8930 	inc	hl
      00267C 23                    8931 	inc	hl
      00267D 2A                    8932 	ld	a,	(hl+)
      00267E 66                    8933 	ld	h, (hl)
                                   8934 ;	spillPairReg hl
      00267F 6F                    8935 	ld	l, a
                                   8936 ;	spillPairReg hl
                                   8937 ;	spillPairReg hl
      002680 79                    8938 	ld	a, c
      002681 95                    8939 	sub	a, l
      002682 4F                    8940 	ld	c, a
      002683 78                    8941 	ld	a, b
      002684 9C                    8942 	sbc	a, h
      002685 47                    8943 	ld	b, a
                                   8944 ;	spillPairReg hl
                                   8945 ;	spillPairReg hl
      002686 60                    8946 	ld	h, b
                                   8947 ;	spillPairReg hl
                                   8948 ;	spillPairReg hl
      002687 CB 7C                 8949 	bit	7, h
      002689 28 06                 8950 	jr	Z, 00186$
      00268B AF                    8951 	xor	a, a
      00268C 91                    8952 	sub	a, c
      00268D 4F                    8953 	ld	c, a
      00268E 9F                    8954 	sbc	a, a
      00268F 90                    8955 	sub	a, b
      002690 47                    8956 	ld	b, a
      002691                       8957 00186$:
      002691 F8 0F                 8958 	ldhl	sp,	#15
      002693 2A                    8959 	ld	a,	(hl+)
      002694 66                    8960 	ld	h, (hl)
      002695 6F                    8961 	ld	l, a
      002696 09                    8962 	add	hl, bc
      002697 4D                    8963 	ld	c, l
      002698 44                    8964 	ld	b, h
      002699 21rA4r0B              8965 	ld	hl, #_SPLASHDROPOFF
      00269C 5E                    8966 	ld	e, (hl)
      00269D 1C                    8967 	inc	e
      00269E 18 04                 8968 	jr	00376$
      0026A0                       8969 00375$:
      0026A0 CB 21                 8970 	sla	c
      0026A2 CB 10                 8971 	rl	b
      0026A4                       8972 00376$:
      0026A4 1D                    8973 	dec	e
      0026A5 20 F9                 8974 	jr	NZ,00375$
                                   8975 ;src/main.c:911: int16_t dmg = pptr->damage - dmgDropOff;
      0026A7 F8 0B                 8976 	ldhl	sp,#11
      0026A9 2A                    8977 	ld	a, (hl+)
      0026AA 5F                    8978 	ld	e, a
      0026AB 56                    8979 	ld	d, (hl)
      0026AC 1A                    8980 	ld	a, (de)
      0026AD 6F                    8981 	ld	l, a
                                   8982 ;	spillPairReg hl
                                   8983 ;	spillPairReg hl
      0026AE 13                    8984 	inc	de
      0026AF 1A                    8985 	ld	a, (de)
      0026B0 67                    8986 	ld	h, a
                                   8987 ;	spillPairReg hl
                                   8988 ;	spillPairReg hl
      0026B1 7D                    8989 	ld	a, l
      0026B2 91                    8990 	sub	a, c
      0026B3 5F                    8991 	ld	e, a
      0026B4 7C                    8992 	ld	a, h
      0026B5 98                    8993 	sbc	a, b
      0026B6 F8 0D                 8994 	ldhl	sp,	#13
      0026B8 73                    8995 	ld	(hl), e
      0026B9 23                    8996 	inc	hl
                                   8997 ;src/main.c:912: if (dmg > 0) {
      0026BA 32                    8998 	ld	(hl-), a
      0026BB 2A                    8999 	ld	a, (hl+)
      0026BC 4F                    9000 	ld	c, a
      0026BD 46                    9001 	ld	b, (hl)
      0026BE 58                    9002 	ld	e, b
      0026BF AF                    9003 	xor	a, a
      0026C0 57                    9004 	ld	d, a
      0026C1 B9                    9005 	cp	a, c
      0026C2 98                    9006 	sbc	a, b
      0026C3 CB 7B                 9007 	bit	7, e
      0026C5 28 07                 9008 	jr	Z, 00377$
      0026C7 CB 7A                 9009 	bit	7, d
      0026C9 20 08                 9010 	jr	NZ, 00378$
      0026CB BF                    9011 	cp	a, a
      0026CC 18 05                 9012 	jr	00378$
      0026CE                       9013 00377$:
      0026CE CB 7A                 9014 	bit	7, d
      0026D0 28 01                 9015 	jr	Z, 00378$
      0026D2 37                    9016 	scf
      0026D3                       9017 00378$:
      0026D3 30 5C                 9018 	jr	NC, 00189$
                                   9019 ;src/main.c:913: enemies[k].hp -= dmg;
      0026D5 F8 11                 9020 	ldhl	sp,#17
      0026D7 2A                    9021 	ld	a, (hl+)
      0026D8 5F                    9022 	ld	e, a
      0026D9 56                    9023 	ld	d, (hl)
      0026DA 21 10 00              9024 	ld	hl, #0x0010
      0026DD 19                    9025 	add	hl, de
      0026DE E5                    9026 	push	hl
      0026DF 7D                    9027 	ld	a, l
      0026E0 F8 11                 9028 	ldhl	sp,	#17
      0026E2 77                    9029 	ld	(hl), a
      0026E3 E1                    9030 	pop	hl
      0026E4 7C                    9031 	ld	a, h
      0026E5 F8 10                 9032 	ldhl	sp,	#16
      0026E7 32                    9033 	ld	(hl-), a
      0026E8 2A                    9034 	ld	a, (hl+)
      0026E9 5F                    9035 	ld	e, a
      0026EA 2A                    9036 	ld	a, (hl+)
      0026EB 57                    9037 	ld	d, a
      0026EC 1A                    9038 	ld	a, (de)
      0026ED 22                    9039 	ld	(hl+), a
      0026EE 13                    9040 	inc	de
      0026EF 1A                    9041 	ld	a, (de)
      0026F0 32                    9042 	ld	(hl-), a
      0026F1 2A                    9043 	ld	a, (hl+)
      0026F2 5F                    9044 	ld	e, a
      0026F3 56                    9045 	ld	d, (hl)
      0026F4 F8 0D                 9046 	ldhl	sp,	#13
      0026F6 2A                    9047 	ld	a,	(hl+)
      0026F7 66                    9048 	ld	h, (hl)
      0026F8 6F                    9049 	ld	l, a
      0026F9 7B                    9050 	ld	a, e
      0026FA 95                    9051 	sub	a, l
      0026FB 5F                    9052 	ld	e, a
      0026FC 7A                    9053 	ld	a, d
      0026FD 9C                    9054 	sbc	a, h
      0026FE 47                    9055 	ld	b, a
      0026FF 4B                    9056 	ld	c, e
      002700 F8 0F                 9057 	ldhl	sp,	#15
      002702 2A                    9058 	ld	a,	(hl+)
      002703 66                    9059 	ld	h, (hl)
      002704 6F                    9060 	ld	l, a
      002705 79                    9061 	ld	a, c
      002706 22                    9062 	ld	(hl+), a
      002707 70                    9063 	ld	(hl), b
                                   9064 ;src/main.c:914: if (enemies[k].hp <= 0) {
      002708 58                    9065 	ld	e, b
      002709 AF                    9066 	xor	a, a
      00270A 57                    9067 	ld	d, a
      00270B B9                    9068 	cp	a, c
      00270C 98                    9069 	sbc	a, b
      00270D CB 7B                 9070 	bit	7, e
      00270F 28 07                 9071 	jr	Z, 00379$
      002711 CB 7A                 9072 	bit	7, d
      002713 20 08                 9073 	jr	NZ, 00380$
      002715 BF                    9074 	cp	a, a
      002716 18 05                 9075 	jr	00380$
      002718                       9076 00379$:
      002718 CB 7A                 9077 	bit	7, d
      00271A 28 01                 9078 	jr	Z, 00380$
      00271C 37                    9079 	scf
      00271D                       9080 00380$:
      00271D 38 12                 9081 	jr	C, 00189$
                                   9082 ;src/main.c:915: killEnemy(k);
      00271F F8 16                 9083 	ldhl	sp,	#22
      002721 7E                    9084 	ld	a, (hl)
      002722 F5                    9085 	push	af
      002723 33                    9086 	inc	sp
      002724 CDr66r21              9087 	call	_killEnemy
      002727 33                    9088 	inc	sp
                                   9089 ;src/main.c:916: initEnemy(k);
      002728 F8 16                 9090 	ldhl	sp,	#22
      00272A 7E                    9091 	ld	a, (hl)
      00272B F5                    9092 	push	af
      00272C 33                    9093 	inc	sp
      00272D CDr64r11              9094 	call	_initEnemy
      002730 33                    9095 	inc	sp
      002731                       9096 00189$:
                                   9097 ;src/main.c:909: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002731 F8 16                 9098 	ldhl	sp,	#22
      002733 34                    9099 	inc	(hl)
      002734 C3r12r26              9100 	jp	00188$
      002737                       9101 00119$:
                                   9102 ;src/main.c:924: eptr->hp -= pptr->damage;
      002737 D1                    9103 	pop	de
      002738 D5                    9104 	push	de
      002739 21 10 00              9105 	ld	hl, #0x0010
      00273C 19                    9106 	add	hl, de
      00273D E5                    9107 	push	hl
      00273E 7D                    9108 	ld	a, l
      00273F F8 11                 9109 	ldhl	sp,	#17
      002741 77                    9110 	ld	(hl), a
      002742 E1                    9111 	pop	hl
      002743 7C                    9112 	ld	a, h
      002744 F8 10                 9113 	ldhl	sp,	#16
      002746 32                    9114 	ld	(hl-), a
      002747 2A                    9115 	ld	a, (hl+)
      002748 5F                    9116 	ld	e, a
      002749 2A                    9117 	ld	a, (hl+)
      00274A 57                    9118 	ld	d, a
      00274B 1A                    9119 	ld	a, (de)
      00274C 22                    9120 	ld	(hl+), a
      00274D 13                    9121 	inc	de
      00274E 1A                    9122 	ld	a, (de)
      00274F 77                    9123 	ld	(hl), a
      002750 69                    9124 	ld	l, c
      002751 60                    9125 	ld	h, b
      002752 2A                    9126 	ld	a, (hl+)
      002753 4F                    9127 	ld	c, a
      002754 46                    9128 	ld	b, (hl)
      002755 F8 11                 9129 	ldhl	sp,#17
      002757 2A                    9130 	ld	a, (hl+)
      002758 5F                    9131 	ld	e, a
      002759 56                    9132 	ld	d, (hl)
      00275A 7B                    9133 	ld	a, e
      00275B 91                    9134 	sub	a, c
      00275C 5F                    9135 	ld	e, a
      00275D 7A                    9136 	ld	a, d
      00275E 98                    9137 	sbc	a, b
      00275F 47                    9138 	ld	b, a
      002760 4B                    9139 	ld	c, e
      002761 F8 0F                 9140 	ldhl	sp,	#15
      002763 2A                    9141 	ld	a,	(hl+)
      002764 66                    9142 	ld	h, (hl)
      002765 6F                    9143 	ld	l, a
      002766 79                    9144 	ld	a, c
      002767 22                    9145 	ld	(hl+), a
      002768 70                    9146 	ld	(hl), b
                                   9147 ;src/main.c:926: if (eptr->hp <= 0) {
      002769 58                    9148 	ld	e, b
      00276A AF                    9149 	xor	a, a
      00276B 57                    9150 	ld	d, a
      00276C B9                    9151 	cp	a, c
      00276D 98                    9152 	sbc	a, b
      00276E CB 7B                 9153 	bit	7, e
      002770 28 07                 9154 	jr	Z, 00381$
      002772 CB 7A                 9155 	bit	7, d
      002774 20 08                 9156 	jr	NZ, 00382$
      002776 BF                    9157 	cp	a, a
      002777 18 05                 9158 	jr	00382$
      002779                       9159 00381$:
      002779 CB 7A                 9160 	bit	7, d
      00277B 28 01                 9161 	jr	Z, 00382$
      00277D 37                    9162 	scf
      00277E                       9163 00382$:
      00277E 38 12                 9164 	jr	C, 00132$
                                   9165 ;src/main.c:928: killEnemy(i);
      002780 F8 02                 9166 	ldhl	sp,	#2
      002782 7E                    9167 	ld	a, (hl)
      002783 F5                    9168 	push	af
      002784 33                    9169 	inc	sp
      002785 CDr66r21              9170 	call	_killEnemy
      002788 33                    9171 	inc	sp
                                   9172 ;src/main.c:929: initEnemy(i);
      002789 F8 02                 9173 	ldhl	sp,	#2
      00278B 7E                    9174 	ld	a, (hl)
      00278C F5                    9175 	push	af
      00278D 33                    9176 	inc	sp
      00278E CDr64r11              9177 	call	_initEnemy
      002791 33                    9178 	inc	sp
      002792                       9179 00132$:
                                   9180 ;src/main.c:941: j++;
      002792 F8 15                 9181 	ldhl	sp,	#21
      002794 34                    9182 	inc	(hl)
                                   9183 ;src/main.c:942: pptr++;
      002795 2B                    9184 	dec	hl
      002796 2B                    9185 	dec	hl
      002797 2A                    9186 	ld	a, (hl+)
      002798 5F                    9187 	ld	e, a
      002799 56                    9188 	ld	d, (hl)
      00279A 21 0D 00              9189 	ld	hl, #0x000d
      00279D 19                    9190 	add	hl, de
      00279E E5                    9191 	push	hl
      00279F 7D                    9192 	ld	a, l
      0027A0 F8 15                 9193 	ldhl	sp,	#21
      0027A2 77                    9194 	ld	(hl), a
      0027A3 E1                    9195 	pop	hl
      0027A4 7C                    9196 	ld	a, h
      0027A5 F8 14                 9197 	ldhl	sp,	#20
      0027A7 77                    9198 	ld	(hl), a
      0027A8 C3rC1r24              9199 	jp	00133$
      0027AB                       9200 00139$:
                                   9201 ;src/main.c:948: if (enemyCollisionCount == 0) {
      0027AB FArB9r00              9202 	ld	a, (#_enemyCollisionCount)
      0027AE B7                    9203 	or	a, a
      0027AF 20 09                 9204 	jr	NZ, 00142$
                                   9205 ;src/main.c:949: enemyCollisionCount = ENEMYCOUNT - 1;
      0027B1 FAr8Er0B              9206 	ld	a, (#_ENEMYCOUNT)
      0027B4 3D                    9207 	dec	a
      0027B5 EArB9r00              9208 	ld	(#_enemyCollisionCount),a
      0027B8 18 04                 9209 	jr	00190$
      0027BA                       9210 00142$:
                                   9211 ;src/main.c:952: enemyCollisionCount--;
      0027BA 21rB9r00              9212 	ld	hl, #_enemyCollisionCount
      0027BD 35                    9213 	dec	(hl)
      0027BE                       9214 00190$:
                                   9215 ;src/main.c:957: }
      0027BE E8 17                 9216 	add	sp, #23
      0027C0 C9                    9217 	ret
                                   9218 ;src/main.c:960: void setGunIcon() {
                                   9219 ;	---------------------------------
                                   9220 ; Function setGunIcon
                                   9221 ; ---------------------------------
      0027C1                       9222 _setGunIcon::
                                   9223 ;src/main.c:962: if (currentGun == 0) {
      0027C1 FArBBr00              9224 	ld	a, (#_currentGun)
      0027C4 B7                    9225 	or	a, a
      0027C5 20 1B                 9226 	jr	NZ, 00102$
                                   9227 ;src/main.c:963: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      0027C7 01rC2r00              9228 	ld	bc, #_gunMap+0
      0027CA 79                    9229 	ld	a, c
      0027CB 21rBAr00              9230 	ld	hl, #_gunLevel
      0027CE 86                    9231 	add	a, (hl)
      0027CF 4F                    9232 	ld	c, a
      0027D0 30 01                 9233 	jr	NC, 00111$
      0027D2 04                    9234 	inc	b
      0027D3                       9235 00111$:
      0027D3 C5                    9236 	push	bc
      0027D4 21 01 01              9237 	ld	hl, #0x101
      0027D7 E5                    9238 	push	hl
      0027D8 21 0F 00              9239 	ld	hl, #0x0f
      0027DB E5                    9240 	push	hl
      0027DC CDr00r00              9241 	call	_set_win_tiles
      0027DF E8 06                 9242 	add	sp, #6
      0027E1 C9                    9243 	ret
      0027E2                       9244 00102$:
                                   9245 ;src/main.c:966: set_win_tiles(15, 0,1,1,gunMap+2);
      0027E2 11rC4r00              9246 	ld	de, #(_gunMap + 2)
      0027E5 D5                    9247 	push	de
      0027E6 21 01 01              9248 	ld	hl, #0x101
      0027E9 E5                    9249 	push	hl
      0027EA 21 0F 00              9250 	ld	hl, #0x0f
      0027ED E5                    9251 	push	hl
      0027EE CDr00r00              9252 	call	_set_win_tiles
      0027F1 E8 06                 9253 	add	sp, #6
                                   9254 ;src/main.c:968: }
      0027F3 C9                    9255 	ret
                                   9256 ;src/main.c:978: void fire() {
                                   9257 ;	---------------------------------
                                   9258 ; Function fire
                                   9259 ; ---------------------------------
      0027F4                       9260 _fire::
      0027F4 E8 FB                 9261 	add	sp, #-5
                                   9262 ;src/main.c:980: oldestProjectile += 1;
      0027F6 21rA5r00              9263 	ld	hl, #_oldestProjectile
      0027F9 34                    9264 	inc	(hl)
      0027FA 7E                    9265 	ld	a, (hl)
                                   9266 ;src/main.c:981: if (oldestProjectile >= PROJECTILECOUNT) {
      0027FB 21r9Fr0B              9267 	ld	hl, #_PROJECTILECOUNT
      0027FE 4E                    9268 	ld	c, (hl)
      0027FF 21rA5r00              9269 	ld	hl, #_oldestProjectile
      002802 7E                    9270 	ld	a, (hl)
      002803 91                    9271 	sub	a, c
      002804 38 02                 9272 	jr	C, 00102$
                                   9273 ;src/main.c:982: oldestProjectile = 0;
      002806 36 00                 9274 	ld	(hl), #0x00
      002808                       9275 00102$:
                                   9276 ;src/main.c:987: projectiles[oldestProjectile] = singleGun;
      002808 21rA5r00              9277 	ld	hl, #_oldestProjectile
      00280B 4E                    9278 	ld	c, (hl)
      00280C 06 00                 9279 	ld	b, #0x00
      00280E 69                    9280 	ld	l, c
      00280F 60                    9281 	ld	h, b
      002810 29                    9282 	add	hl, hl
      002811 09                    9283 	add	hl, bc
      002812 29                    9284 	add	hl, hl
      002813 29                    9285 	add	hl, hl
      002814 09                    9286 	add	hl, bc
      002815 E5                    9287 	push	hl
      002816 7D                    9288 	ld	a, l
      002817 F8 05                 9289 	ldhl	sp,	#5
      002819 77                    9290 	ld	(hl), a
      00281A E1                    9291 	pop	hl
      00281B 7C                    9292 	ld	a, h
      00281C F8 04                 9293 	ldhl	sp,	#4
      00281E 77                    9294 	ld	(hl), a
                                   9295 ;src/main.c:985: if (currentGun == 0) {
      00281F FArBBr00              9296 	ld	a, (#_currentGun)
      002822 B7                    9297 	or	a, a
      002823 20 3C                 9298 	jr	NZ, 00113$
                                   9299 ;src/main.c:986: if (gunLevel == 0) {
      002825 FArBAr00              9300 	ld	a, (#_gunLevel)
      002828 B7                    9301 	or	a, a
      002829 20 1B                 9302 	jr	NZ, 00104$
                                   9303 ;src/main.c:987: projectiles[oldestProjectile] = singleGun;
      00282B 11r7Er00              9304 	ld	de, #_singleGun+0
      00282E 01rB4r00              9305 	ld	bc, #_projectiles+0
      002831 F8 03                 9306 	ldhl	sp,	#3
      002833 2A                    9307 	ld	a,	(hl+)
      002834 66                    9308 	ld	h, (hl)
      002835 6F                    9309 	ld	l, a
      002836 09                    9310 	add	hl, bc
      002837 4D                    9311 	ld	c, l
      002838 44                    9312 	ld	b, h
      002839 21 0D 00              9313 	ld	hl, #0x000d
      00283C E5                    9314 	push	hl
      00283D D5                    9315 	push	de
      00283E C5                    9316 	push	bc
      00283F CDr00r00              9317 	call	___memcpy
      002842 E8 06                 9318 	add	sp, #6
      002844 18 61                 9319 	jr	00114$
      002846                       9320 00104$:
                                   9321 ;src/main.c:990: projectiles[oldestProjectile] = doubleGun;
      002846 11r8Br00              9322 	ld	de, #_doubleGun+0
      002849 01rB4r00              9323 	ld	bc, #_projectiles+0
      00284C F8 03                 9324 	ldhl	sp,	#3
      00284E 2A                    9325 	ld	a,	(hl+)
      00284F 66                    9326 	ld	h, (hl)
      002850 6F                    9327 	ld	l, a
      002851 09                    9328 	add	hl, bc
      002852 4D                    9329 	ld	c, l
      002853 44                    9330 	ld	b, h
      002854 21 0D 00              9331 	ld	hl, #0x000d
      002857 E5                    9332 	push	hl
      002858 D5                    9333 	push	de
      002859 C5                    9334 	push	bc
      00285A CDr00r00              9335 	call	___memcpy
      00285D E8 06                 9336 	add	sp, #6
      00285F 18 46                 9337 	jr	00114$
      002861                       9338 00113$:
                                   9339 ;src/main.c:993: else if (currentGun == 1) {
      002861 FArBBr00              9340 	ld	a, (#_currentGun)
      002864 3D                    9341 	dec	a
      002865 20 40                 9342 	jr	NZ, 00114$
                                   9343 ;src/main.c:994: if (missiles == 0) {
      002867 FArBCr00              9344 	ld	a, (#_missiles)
      00286A B7                    9345 	or	a, a
      00286B 20 0B                 9346 	jr	NZ, 00107$
                                   9347 ;src/main.c:995: currentGun = 0;
      00286D 21rBBr00              9348 	ld	hl, #_currentGun
      002870 36 00                 9349 	ld	(hl), #0x00
                                   9350 ;src/main.c:996: setGunIcon();
      002872 CDrC1r27              9351 	call	_setGunIcon
                                   9352 ;src/main.c:997: return;
      002875 C3r9Fr2D              9353 	jp	00155$
      002878                       9354 00107$:
                                   9355 ;src/main.c:1000: projectiles[oldestProjectile] = missile;
      002878 11r98r00              9356 	ld	de, #_missile+0
      00287B 01rB4r00              9357 	ld	bc, #_projectiles+0
      00287E F8 03                 9358 	ldhl	sp,	#3
      002880 2A                    9359 	ld	a,	(hl+)
      002881 66                    9360 	ld	h, (hl)
      002882 6F                    9361 	ld	l, a
      002883 09                    9362 	add	hl, bc
      002884 4D                    9363 	ld	c, l
      002885 44                    9364 	ld	b, h
      002886 21 0D 00              9365 	ld	hl, #0x000d
      002889 E5                    9366 	push	hl
      00288A D5                    9367 	push	de
      00288B C5                    9368 	push	bc
      00288C CDr00r00              9369 	call	___memcpy
      00288F E8 06                 9370 	add	sp, #6
                                   9371 ;src/main.c:1001: updateMissileCount(-1);
      002891 3E FF                 9372 	ld	a, #0xff
      002893 F5                    9373 	push	af
      002894 33                    9374 	inc	sp
      002895 CDrE4r0C              9375 	call	_updateMissileCount
      002898 33                    9376 	inc	sp
                                   9377 ;src/main.c:1003: if (missiles == 0) {
      002899 FArBCr00              9378 	ld	a, (#_missiles)
      00289C B7                    9379 	or	a, a
      00289D 20 08                 9380 	jr	NZ, 00114$
                                   9381 ;src/main.c:1004: currentGun = 0;
      00289F 21rBBr00              9382 	ld	hl, #_currentGun
      0028A2 36 00                 9383 	ld	(hl), #0x00
                                   9384 ;src/main.c:1005: setGunIcon();
      0028A4 CDrC1r27              9385 	call	_setGunIcon
      0028A7                       9386 00114$:
                                   9387 ;src/main.c:1008: projectiles[oldestProjectile].x = playerDrawX;
      0028A7 21rA5r00              9388 	ld	hl, #_oldestProjectile
      0028AA 4E                    9389 	ld	c, (hl)
      0028AB 06 00                 9390 	ld	b, #0x00
      0028AD 69                    9391 	ld	l, c
      0028AE 60                    9392 	ld	h, b
      0028AF 29                    9393 	add	hl, hl
      0028B0 09                    9394 	add	hl, bc
      0028B1 29                    9395 	add	hl, hl
      0028B2 29                    9396 	add	hl, hl
      0028B3 09                    9397 	add	hl, bc
      0028B4 01rB4r00              9398 	ld	bc,#_projectiles
      0028B7 09                    9399 	add	hl,bc
      0028B8 E5                    9400 	push	hl
      0028B9 FArAFr00              9401 	ld	a, (#_playerDrawX)
      0028BC E1                    9402 	pop	hl
      0028BD 0E 00                 9403 	ld	c, #0x00
      0028BF 22                    9404 	ld	(hl+), a
      0028C0 71                    9405 	ld	(hl), c
                                   9406 ;src/main.c:1009: projectiles[oldestProjectile].y = playerDrawY;
      0028C1 21rA5r00              9407 	ld	hl, #_oldestProjectile
      0028C4 4E                    9408 	ld	c, (hl)
      0028C5 06 00                 9409 	ld	b, #0x00
      0028C7 69                    9410 	ld	l, c
      0028C8 60                    9411 	ld	h, b
      0028C9 29                    9412 	add	hl, hl
      0028CA 09                    9413 	add	hl, bc
      0028CB 29                    9414 	add	hl, hl
      0028CC 29                    9415 	add	hl, hl
      0028CD 09                    9416 	add	hl, bc
      0028CE 01rB4r00              9417 	ld	bc,#_projectiles
      0028D1 09                    9418 	add	hl,bc
      0028D2 23                    9419 	inc	hl
      0028D3 23                    9420 	inc	hl
      0028D4 E5                    9421 	push	hl
      0028D5 FArB0r00              9422 	ld	a, (#_playerDrawY)
      0028D8 E1                    9423 	pop	hl
      0028D9 0E 00                 9424 	ld	c, #0x00
      0028DB 22                    9425 	ld	(hl+), a
      0028DC 71                    9426 	ld	(hl), c
                                   9427 ;src/main.c:1010: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      0028DD 21rA5r00              9428 	ld	hl, #_oldestProjectile
      0028E0 4E                    9429 	ld	c, (hl)
      0028E1 06 00                 9430 	ld	b, #0x00
      0028E3 69                    9431 	ld	l, c
      0028E4 60                    9432 	ld	h, b
      0028E5 29                    9433 	add	hl, hl
      0028E6 09                    9434 	add	hl, bc
      0028E7 29                    9435 	add	hl, hl
      0028E8 29                    9436 	add	hl, hl
      0028E9 09                    9437 	add	hl, bc
      0028EA 01rB4r00              9438 	ld	bc,#_projectiles
      0028ED 09                    9439 	add	hl,bc
      0028EE 5D                    9440 	ld	e, l
      0028EF 54                    9441 	ld	d, h
      0028F0 21 05 00              9442 	ld	hl, #0x0005
      0028F3 19                    9443 	add	hl, de
      0028F4 4D                    9444 	ld	c, l
      0028F5 44                    9445 	ld	b, h
      0028F6 21 07 00              9446 	ld	hl, #0x0007
      0028F9 19                    9447 	add	hl, de
      0028FA 7E                    9448 	ld	a, (hl)
      0028FB C5                    9449 	push	bc
      0028FC F5                    9450 	push	af
      0028FD 33                    9451 	inc	sp
      0028FE FArA7r00              9452 	ld	a, (#_xDir)
      002901 F5                    9453 	push	af
      002902 33                    9454 	inc	sp
      002903 CDr00r00              9455 	call	__muluschar
      002906 E1                    9456 	pop	hl
      002907 7B                    9457 	ld	a, e
      002908 C1                    9458 	pop	bc
      002909 02                    9459 	ld	(bc), a
                                   9460 ;src/main.c:1011: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      00290A 21rA5r00              9461 	ld	hl, #_oldestProjectile
      00290D 4E                    9462 	ld	c, (hl)
      00290E 06 00                 9463 	ld	b, #0x00
      002910 69                    9464 	ld	l, c
      002911 60                    9465 	ld	h, b
      002912 29                    9466 	add	hl, hl
      002913 09                    9467 	add	hl, bc
      002914 29                    9468 	add	hl, hl
      002915 29                    9469 	add	hl, hl
      002916 09                    9470 	add	hl, bc
      002917 01rB4r00              9471 	ld	bc,#_projectiles
      00291A 09                    9472 	add	hl,bc
      00291B 5D                    9473 	ld	e, l
      00291C 54                    9474 	ld	d, h
      00291D 21 06 00              9475 	ld	hl, #0x0006
      002920 19                    9476 	add	hl, de
      002921 4D                    9477 	ld	c, l
      002922 44                    9478 	ld	b, h
      002923 21 07 00              9479 	ld	hl, #0x0007
      002926 19                    9480 	add	hl, de
      002927 7E                    9481 	ld	a, (hl)
      002928 C5                    9482 	push	bc
      002929 F5                    9483 	push	af
      00292A 33                    9484 	inc	sp
      00292B FArA8r00              9485 	ld	a, (#_yDir)
      00292E F5                    9486 	push	af
      00292F 33                    9487 	inc	sp
      002930 CDr00r00              9488 	call	__muluschar
      002933 E1                    9489 	pop	hl
      002934 7B                    9490 	ld	a, e
      002935 C1                    9491 	pop	bc
      002936 02                    9492 	ld	(bc), a
                                   9493 ;src/main.c:980: oldestProjectile += 1;
      002937 FArA5r00              9494 	ld	a, (#_oldestProjectile)
      00293A F8 04                 9495 	ldhl	sp,	#4
      00293C 77                    9496 	ld	(hl), a
                                   9497 ;src/main.c:987: projectiles[oldestProjectile] = singleGun;
      00293D 21rA5r00              9498 	ld	hl, #_oldestProjectile
      002940 4E                    9499 	ld	c, (hl)
      002941 06 00                 9500 	ld	b, #0x00
      002943 69                    9501 	ld	l, c
      002944 60                    9502 	ld	h, b
      002945 29                    9503 	add	hl, hl
      002946 09                    9504 	add	hl, bc
      002947 29                    9505 	add	hl, hl
      002948 29                    9506 	add	hl, hl
      002949 09                    9507 	add	hl, bc
                                   9508 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00294A 01rB4r00              9509 	ld	bc,#_projectiles
      00294D 09                    9510 	add	hl,bc
      00294E 4D                    9511 	ld	c, l
      00294F 44                    9512 	ld	b, h
      002950 F8 04                 9513 	ldhl	sp,	#4
      002952 3A                    9514 	ld	a, (hl-)
      002953 C6 1E                 9515 	add	a, #0x1e
      002955 77                    9516 	ld	(hl), a
      002956 21 0C 00              9517 	ld	hl, #0x000c
      002959 09                    9518 	add	hl, bc
      00295A 7E                    9519 	ld	a, (hl)
      00295B F8 04                 9520 	ldhl	sp,	#4
      00295D 77                    9521 	ld	(hl), a
                                   9522 ;src/main.c:1015: if (yDir != 0 && xDir == 0) {
      00295E FArA8r00              9523 	ld	a, (#_yDir)
      002961 B7                    9524 	or	a, a
      002962 28 71                 9525 	jr	Z, 00141$
      002964 FArA7r00              9526 	ld	a, (#_xDir)
      002967 B7                    9527 	or	a, a
      002968 20 6B                 9528 	jr	NZ, 00141$
                                   9529 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00296A F8 04                 9530 	ldhl	sp,	#4
      00296C 3A                    9531 	ld	a, (hl-)
      00296D 4F                    9532 	ld	c, a
                                   9533 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00296E 6E                    9534 	ld	l, (hl)
                                   9535 ;	spillPairReg hl
                                   9536 ;	spillPairReg hl
      00296F 26 00                 9537 	ld	h, #0x00
                                   9538 ;	spillPairReg hl
                                   9539 ;	spillPairReg hl
      002971 29                    9540 	add	hl, hl
      002972 29                    9541 	add	hl, hl
      002973 11r00r00              9542 	ld	de, #_shadow_OAM
      002976 19                    9543 	add	hl, de
      002977 23                    9544 	inc	hl
      002978 23                    9545 	inc	hl
      002979 71                    9546 	ld	(hl), c
                                   9547 ;src/main.c:980: oldestProjectile += 1;
      00297A FArA5r00              9548 	ld	a, (#_oldestProjectile)
                                   9549 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00297D C6 1E                 9550 	add	a, #0x1e
      00297F 4F                    9551 	ld	c, a
                                   9552 ;src/main.c:1017: if (yDir == 1) {
      002980 FArA8r00              9553 	ld	a, (#_yDir)
                                   9554 ;src/main.c:1018: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   9555 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002983 3D                    9556 	dec	a
      002984 20 27                 9557 	jr	NZ, 00116$
      002986 67                    9558 	ld	h,a
                                   9559 ;	spillPairReg hl
                                   9560 ;	spillPairReg hl
      002987 69                    9561 	ld	l, c
      002988 29                    9562 	add	hl, hl
      002989 29                    9563 	add	hl, hl
      00298A 11r00r00              9564 	ld	de, #_shadow_OAM
      00298D 19                    9565 	add	hl, de
      00298E 23                    9566 	inc	hl
      00298F 23                    9567 	inc	hl
      002990 23                    9568 	inc	hl
      002991 36 40                 9569 	ld	(hl), #0x40
                                   9570 ;src/main.c:1019: projectiles[oldestProjectile].offset = 4;
      002993 21rA5r00              9571 	ld	hl, #_oldestProjectile
      002996 4E                    9572 	ld	c, (hl)
      002997 06 00                 9573 	ld	b, #0x00
      002999 69                    9574 	ld	l, c
      00299A 60                    9575 	ld	h, b
      00299B 29                    9576 	add	hl, hl
      00299C 09                    9577 	add	hl, bc
      00299D 29                    9578 	add	hl, hl
      00299E 29                    9579 	add	hl, hl
      00299F 09                    9580 	add	hl, bc
      0029A0 01rB4r00              9581 	ld	bc,#_projectiles
      0029A3 09                    9582 	add	hl,bc
      0029A4 01 04 00              9583 	ld	bc, #0x0004
      0029A7 09                    9584 	add	hl, bc
      0029A8 36 04                 9585 	ld	(hl), #0x04
      0029AA C3r86r2D              9586 	jp	00142$
      0029AD                       9587 00116$:
                                   9588 ;src/main.c:1022: set_sprite_prop(30+oldestProjectile, 0); 
                                   9589 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0029AD 26 00                 9590 	ld	h, #0x00
                                   9591 ;	spillPairReg hl
                                   9592 ;	spillPairReg hl
      0029AF 69                    9593 	ld	l, c
      0029B0 29                    9594 	add	hl, hl
      0029B1 29                    9595 	add	hl, hl
      0029B2 11r00r00              9596 	ld	de, #_shadow_OAM
      0029B5 19                    9597 	add	hl, de
      0029B6 23                    9598 	inc	hl
      0029B7 23                    9599 	inc	hl
      0029B8 23                    9600 	inc	hl
      0029B9 36 00                 9601 	ld	(hl), #0x00
                                   9602 ;src/main.c:1023: projectiles[oldestProjectile].offset = 12;
      0029BB 21rA5r00              9603 	ld	hl, #_oldestProjectile
      0029BE 4E                    9604 	ld	c, (hl)
      0029BF 06 00                 9605 	ld	b, #0x00
      0029C1 69                    9606 	ld	l, c
      0029C2 60                    9607 	ld	h, b
      0029C3 29                    9608 	add	hl, hl
      0029C4 09                    9609 	add	hl, bc
      0029C5 29                    9610 	add	hl, hl
      0029C6 29                    9611 	add	hl, hl
      0029C7 09                    9612 	add	hl, bc
      0029C8 01rB4r00              9613 	ld	bc,#_projectiles
      0029CB 09                    9614 	add	hl,bc
      0029CC 01 04 00              9615 	ld	bc, #0x0004
      0029CF 09                    9616 	add	hl, bc
      0029D0 36 0C                 9617 	ld	(hl), #0x0c
      0029D2 C3r86r2D              9618 	jp	00142$
      0029D5                       9619 00141$:
                                   9620 ;src/main.c:1027: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   9621 ;src/main.c:1026: else if (xDir != 0 && yDir == 0) {
      0029D5 FArA7r00              9622 	ld	a, (#_xDir)
      0029D8 B7                    9623 	or	a, a
      0029D9 CAr1Fr2B              9624 	jp	Z, 00137$
      0029DC FArA8r00              9625 	ld	a, (#_yDir)
      0029DF B7                    9626 	or	a, a
      0029E0 C2r1Fr2B              9627 	jp	NZ, 00137$
                                   9628 ;src/main.c:1027: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      0029E3 F8 04                 9629 	ldhl	sp,	#4
      0029E5 34                    9630 	inc	(hl)
      0029E6 34                    9631 	inc	(hl)
      0029E7 2B                    9632 	dec	hl
                                   9633 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0029E8 3A                    9634 	ld	a, (hl-)
      0029E9 22                    9635 	ld	(hl+), a
      0029EA 36 00                 9636 	ld	(hl), #0x00
      0029EC 3E 02                 9637 	ld	a, #0x02
      0029EE                       9638 00261$:
      0029EE F8 02                 9639 	ldhl	sp,	#2
      0029F0 CB 26                 9640 	sla	(hl)
      0029F2 23                    9641 	inc	hl
      0029F3 CB 16                 9642 	rl	(hl)
      0029F5 3D                    9643 	dec	a
      0029F6 20 F6                 9644 	jr	NZ, 00261$
      0029F8 2B                    9645 	dec	hl
      0029F9 2A                    9646 	ld	a, (hl+)
      0029FA 5F                    9647 	ld	e, a
      0029FB 56                    9648 	ld	d, (hl)
      0029FC 21r00r00              9649 	ld	hl, #_shadow_OAM
      0029FF 19                    9650 	add	hl, de
      002A00 33                    9651 	inc	sp
      002A01 33                    9652 	inc	sp
      002A02 5D                    9653 	ld	e, l
      002A03 54                    9654 	ld	d, h
      002A04 D5                    9655 	push	de
      002A05 21 02 00              9656 	ld	hl, #0x0002
      002A08 19                    9657 	add	hl, de
      002A09 E5                    9658 	push	hl
      002A0A 7D                    9659 	ld	a, l
      002A0B F8 04                 9660 	ldhl	sp,	#4
      002A0D 77                    9661 	ld	(hl), a
      002A0E E1                    9662 	pop	hl
      002A0F 7C                    9663 	ld	a, h
      002A10 F8 03                 9664 	ldhl	sp,	#3
      002A12 32                    9665 	ld	(hl-), a
      002A13 2A                    9666 	ld	a, (hl+)
      002A14 5F                    9667 	ld	e, a
      002A15 2A                    9668 	ld	a, (hl+)
      002A16 57                    9669 	ld	d, a
      002A17 7E                    9670 	ld	a, (hl)
      002A18 12                    9671 	ld	(de), a
                                   9672 ;src/main.c:980: oldestProjectile += 1;
      002A19 FArA5r00              9673 	ld	a, (#_oldestProjectile)
      002A1C F8 04                 9674 	ldhl	sp,	#4
      002A1E 77                    9675 	ld	(hl), a
                                   9676 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002A1F 7E                    9677 	ld	a, (hl)
      002A20 C6 1E                 9678 	add	a, #0x1e
      002A22 77                    9679 	ld	(hl), a
                                   9680 ;src/main.c:1028: if (xDir == 1) {
      002A23 FArA7r00              9681 	ld	a, (#_xDir)
      002A26 3D                    9682 	dec	a
      002A27 20 7B                 9683 	jr	NZ, 00119$
                                   9684 ;src/main.c:1029: set_sprite_prop(30+oldestProjectile, 0);
      002A29 F8 04                 9685 	ldhl	sp,	#4
                                   9686 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002A2B 3A                    9687 	ld	a, (hl-)
      002A2C 22                    9688 	ld	(hl+), a
      002A2D 36 00                 9689 	ld	(hl), #0x00
      002A2F 3E 02                 9690 	ld	a, #0x02
      002A31                       9691 00264$:
      002A31 F8 03                 9692 	ldhl	sp,	#3
      002A33 CB 26                 9693 	sla	(hl)
      002A35 23                    9694 	inc	hl
      002A36 CB 16                 9695 	rl	(hl)
      002A38 3D                    9696 	dec	a
      002A39 20 F6                 9697 	jr	NZ, 00264$
      002A3B 2B                    9698 	dec	hl
      002A3C 2A                    9699 	ld	a, (hl+)
      002A3D 5F                    9700 	ld	e, a
      002A3E 56                    9701 	ld	d, (hl)
      002A3F 21r00r00              9702 	ld	hl, #_shadow_OAM
      002A42 19                    9703 	add	hl, de
      002A43 E5                    9704 	push	hl
      002A44 7D                    9705 	ld	a, l
      002A45 F8 03                 9706 	ldhl	sp,	#3
      002A47 77                    9707 	ld	(hl), a
      002A48 E1                    9708 	pop	hl
      002A49 7C                    9709 	ld	a, h
      002A4A F8 02                 9710 	ldhl	sp,	#2
      002A4C 32                    9711 	ld	(hl-), a
      002A4D 2A                    9712 	ld	a, (hl+)
      002A4E 5F                    9713 	ld	e, a
      002A4F 56                    9714 	ld	d, (hl)
      002A50 21 03 00              9715 	ld	hl, #0x0003
      002A53 19                    9716 	add	hl, de
      002A54 E5                    9717 	push	hl
      002A55 7D                    9718 	ld	a, l
      002A56 F8 05                 9719 	ldhl	sp,	#5
      002A58 77                    9720 	ld	(hl), a
      002A59 E1                    9721 	pop	hl
      002A5A 7C                    9722 	ld	a, h
      002A5B F8 04                 9723 	ldhl	sp,	#4
      002A5D 32                    9724 	ld	(hl-), a
      002A5E 2A                    9725 	ld	a,	(hl+)
      002A5F 66                    9726 	ld	h, (hl)
      002A60 6F                    9727 	ld	l, a
      002A61 36 00                 9728 	ld	(hl), #0x00
                                   9729 ;src/main.c:1030: projectiles[oldestProjectile].offset = 12;
      002A63 21rA5r00              9730 	ld	hl, #_oldestProjectile
      002A66 4E                    9731 	ld	c, (hl)
      002A67 06 00                 9732 	ld	b, #0x00
      002A69 69                    9733 	ld	l, c
      002A6A 60                    9734 	ld	h, b
      002A6B 29                    9735 	add	hl, hl
      002A6C 09                    9736 	add	hl, bc
      002A6D 29                    9737 	add	hl, hl
      002A6E 29                    9738 	add	hl, hl
      002A6F 09                    9739 	add	hl, bc
      002A70 E5                    9740 	push	hl
      002A71 7D                    9741 	ld	a, l
      002A72 F8 05                 9742 	ldhl	sp,	#5
      002A74 77                    9743 	ld	(hl), a
      002A75 E1                    9744 	pop	hl
      002A76 7C                    9745 	ld	a, h
      002A77 F8 04                 9746 	ldhl	sp,	#4
      002A79 32                    9747 	ld	(hl-), a
      002A7A 2A                    9748 	ld	a, (hl+)
      002A7B 5F                    9749 	ld	e, a
      002A7C 56                    9750 	ld	d, (hl)
      002A7D 21rB4r00              9751 	ld	hl, #_projectiles
      002A80 19                    9752 	add	hl, de
      002A81 E5                    9753 	push	hl
      002A82 7D                    9754 	ld	a, l
      002A83 F8 03                 9755 	ldhl	sp,	#3
      002A85 77                    9756 	ld	(hl), a
      002A86 E1                    9757 	pop	hl
      002A87 7C                    9758 	ld	a, h
      002A88 F8 02                 9759 	ldhl	sp,	#2
      002A8A 32                    9760 	ld	(hl-), a
      002A8B 2A                    9761 	ld	a, (hl+)
      002A8C 5F                    9762 	ld	e, a
      002A8D 56                    9763 	ld	d, (hl)
      002A8E 21 04 00              9764 	ld	hl, #0x0004
      002A91 19                    9765 	add	hl, de
      002A92 E5                    9766 	push	hl
      002A93 7D                    9767 	ld	a, l
      002A94 F8 05                 9768 	ldhl	sp,	#5
      002A96 77                    9769 	ld	(hl), a
      002A97 E1                    9770 	pop	hl
      002A98 7C                    9771 	ld	a, h
      002A99 F8 04                 9772 	ldhl	sp,	#4
      002A9B 32                    9773 	ld	(hl-), a
      002A9C 2A                    9774 	ld	a,	(hl+)
      002A9D 66                    9775 	ld	h, (hl)
      002A9E 6F                    9776 	ld	l, a
      002A9F 36 0C                 9777 	ld	(hl), #0x0c
      002AA1 C3r86r2D              9778 	jp	00142$
      002AA4                       9779 00119$:
                                   9780 ;src/main.c:1033: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002AA4 F8 04                 9781 	ldhl	sp,	#4
                                   9782 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002AA6 3A                    9783 	ld	a, (hl-)
      002AA7 22                    9784 	ld	(hl+), a
      002AA8 36 00                 9785 	ld	(hl), #0x00
      002AAA 3E 02                 9786 	ld	a, #0x02
      002AAC                       9787 00265$:
      002AAC F8 03                 9788 	ldhl	sp,	#3
      002AAE CB 26                 9789 	sla	(hl)
      002AB0 23                    9790 	inc	hl
      002AB1 CB 16                 9791 	rl	(hl)
      002AB3 3D                    9792 	dec	a
      002AB4 20 F6                 9793 	jr	NZ, 00265$
      002AB6 2B                    9794 	dec	hl
      002AB7 2A                    9795 	ld	a, (hl+)
      002AB8 5F                    9796 	ld	e, a
      002AB9 56                    9797 	ld	d, (hl)
      002ABA 21r00r00              9798 	ld	hl, #_shadow_OAM
      002ABD 19                    9799 	add	hl, de
      002ABE E5                    9800 	push	hl
      002ABF 7D                    9801 	ld	a, l
      002AC0 F8 03                 9802 	ldhl	sp,	#3
      002AC2 77                    9803 	ld	(hl), a
      002AC3 E1                    9804 	pop	hl
      002AC4 7C                    9805 	ld	a, h
      002AC5 F8 02                 9806 	ldhl	sp,	#2
      002AC7 32                    9807 	ld	(hl-), a
      002AC8 2A                    9808 	ld	a, (hl+)
      002AC9 5F                    9809 	ld	e, a
      002ACA 56                    9810 	ld	d, (hl)
      002ACB 21 03 00              9811 	ld	hl, #0x0003
      002ACE 19                    9812 	add	hl, de
      002ACF E5                    9813 	push	hl
      002AD0 7D                    9814 	ld	a, l
      002AD1 F8 05                 9815 	ldhl	sp,	#5
      002AD3 77                    9816 	ld	(hl), a
      002AD4 E1                    9817 	pop	hl
      002AD5 7C                    9818 	ld	a, h
      002AD6 F8 04                 9819 	ldhl	sp,	#4
      002AD8 32                    9820 	ld	(hl-), a
      002AD9 2A                    9821 	ld	a,	(hl+)
      002ADA 66                    9822 	ld	h, (hl)
      002ADB 6F                    9823 	ld	l, a
      002ADC 36 20                 9824 	ld	(hl), #0x20
                                   9825 ;src/main.c:1034: projectiles[oldestProjectile].offset = 12;
      002ADE 21rA5r00              9826 	ld	hl, #_oldestProjectile
      002AE1 4E                    9827 	ld	c, (hl)
      002AE2 06 00                 9828 	ld	b, #0x00
      002AE4 69                    9829 	ld	l, c
      002AE5 60                    9830 	ld	h, b
      002AE6 29                    9831 	add	hl, hl
      002AE7 09                    9832 	add	hl, bc
      002AE8 29                    9833 	add	hl, hl
      002AE9 29                    9834 	add	hl, hl
      002AEA 09                    9835 	add	hl, bc
      002AEB E5                    9836 	push	hl
      002AEC 7D                    9837 	ld	a, l
      002AED F8 05                 9838 	ldhl	sp,	#5
      002AEF 77                    9839 	ld	(hl), a
      002AF0 E1                    9840 	pop	hl
      002AF1 7C                    9841 	ld	a, h
      002AF2 F8 04                 9842 	ldhl	sp,	#4
      002AF4 32                    9843 	ld	(hl-), a
      002AF5 2A                    9844 	ld	a, (hl+)
      002AF6 5F                    9845 	ld	e, a
      002AF7 56                    9846 	ld	d, (hl)
      002AF8 21rB4r00              9847 	ld	hl, #_projectiles
      002AFB 19                    9848 	add	hl, de
      002AFC E5                    9849 	push	hl
      002AFD 7D                    9850 	ld	a, l
      002AFE F8 03                 9851 	ldhl	sp,	#3
      002B00 77                    9852 	ld	(hl), a
      002B01 E1                    9853 	pop	hl
      002B02 7C                    9854 	ld	a, h
      002B03 F8 02                 9855 	ldhl	sp,	#2
      002B05 32                    9856 	ld	(hl-), a
      002B06 2A                    9857 	ld	a, (hl+)
      002B07 5F                    9858 	ld	e, a
      002B08 56                    9859 	ld	d, (hl)
      002B09 21 04 00              9860 	ld	hl, #0x0004
      002B0C 19                    9861 	add	hl, de
      002B0D E5                    9862 	push	hl
      002B0E 7D                    9863 	ld	a, l
      002B0F F8 05                 9864 	ldhl	sp,	#5
      002B11 77                    9865 	ld	(hl), a
      002B12 E1                    9866 	pop	hl
      002B13 7C                    9867 	ld	a, h
      002B14 F8 04                 9868 	ldhl	sp,	#4
      002B16 32                    9869 	ld	(hl-), a
      002B17 2A                    9870 	ld	a,	(hl+)
      002B18 66                    9871 	ld	h, (hl)
      002B19 6F                    9872 	ld	l, a
      002B1A 36 0C                 9873 	ld	(hl), #0x0c
      002B1C C3r86r2D              9874 	jp	00142$
      002B1F                       9875 00137$:
                                   9876 ;src/main.c:1038: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      002B1F F8 04                 9877 	ldhl	sp,	#4
      002B21 7E                    9878 	ld	a, (hl)
      002B22 C6 04                 9879 	add	a, #0x04
      002B24 F8 00                 9880 	ldhl	sp,	#0
      002B26 77                    9881 	ld	(hl), a
      002B27 F8 03                 9882 	ldhl	sp,	#3
                                   9883 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002B29 7E                    9884 	ld	a, (hl)
      002B2A 22                    9885 	ld	(hl+), a
      002B2B 36 00                 9886 	ld	(hl), #0x00
      002B2D 3E 02                 9887 	ld	a, #0x02
      002B2F                       9888 00266$:
      002B2F F8 03                 9889 	ldhl	sp,	#3
      002B31 CB 26                 9890 	sla	(hl)
      002B33 23                    9891 	inc	hl
      002B34 CB 16                 9892 	rl	(hl)
      002B36 3D                    9893 	dec	a
      002B37 20 F6                 9894 	jr	NZ, 00266$
      002B39 2B                    9895 	dec	hl
      002B3A 2A                    9896 	ld	a, (hl+)
      002B3B 5F                    9897 	ld	e, a
      002B3C 56                    9898 	ld	d, (hl)
      002B3D 21r00r00              9899 	ld	hl, #_shadow_OAM
      002B40 19                    9900 	add	hl, de
      002B41 E5                    9901 	push	hl
      002B42 7D                    9902 	ld	a, l
      002B43 F8 03                 9903 	ldhl	sp,	#3
      002B45 77                    9904 	ld	(hl), a
      002B46 E1                    9905 	pop	hl
      002B47 7C                    9906 	ld	a, h
      002B48 F8 02                 9907 	ldhl	sp,	#2
      002B4A 32                    9908 	ld	(hl-), a
      002B4B 2A                    9909 	ld	a, (hl+)
      002B4C 5F                    9910 	ld	e, a
      002B4D 56                    9911 	ld	d, (hl)
      002B4E 21 02 00              9912 	ld	hl, #0x0002
      002B51 19                    9913 	add	hl, de
      002B52 E5                    9914 	push	hl
      002B53 7D                    9915 	ld	a, l
      002B54 F8 05                 9916 	ldhl	sp,	#5
      002B56 77                    9917 	ld	(hl), a
      002B57 E1                    9918 	pop	hl
      002B58 7C                    9919 	ld	a, h
      002B59 F8 04                 9920 	ldhl	sp,	#4
      002B5B 32                    9921 	ld	(hl-), a
      002B5C 2A                    9922 	ld	a, (hl+)
      002B5D 5F                    9923 	ld	e, a
      002B5E 56                    9924 	ld	d, (hl)
      002B5F F8 00                 9925 	ldhl	sp,	#0
      002B61 7E                    9926 	ld	a, (hl)
      002B62 12                    9927 	ld	(de), a
                                   9928 ;src/main.c:1039: if (xDir == 1 && yDir == -1) {
      002B63 FArA7r00              9929 	ld	a, (#_xDir)
      002B66 3D                    9930 	dec	a
      002B67 3E 01                 9931 	ld	a, #0x01
      002B69 28 01                 9932 	jr	Z, 00268$
      002B6B AF                    9933 	xor	a, a
      002B6C                       9934 00268$:
      002B6C F8 04                 9935 	ldhl	sp,	#4
      002B6E 77                    9936 	ld	(hl), a
                                   9937 ;src/main.c:980: oldestProjectile += 1;
      002B6F 21rA5r00              9938 	ld	hl, #_oldestProjectile
      002B72 4E                    9939 	ld	c, (hl)
                                   9940 ;src/main.c:1039: if (xDir == 1 && yDir == -1) {
      002B73 FArA8r00              9941 	ld	a, (#_yDir)
      002B76 3C                    9942 	inc	a
      002B77 3E 01                 9943 	ld	a, #0x01
      002B79 28 01                 9944 	jr	Z, 00270$
      002B7B AF                    9945 	xor	a, a
      002B7C                       9946 00270$:
      002B7C F8 01                 9947 	ldhl	sp,	#1
                                   9948 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002B7E 22                    9949 	ld	(hl+), a
      002B7F 79                    9950 	ld	a, c
      002B80 C6 1E                 9951 	add	a, #0x1e
                                   9952 ;src/main.c:1039: if (xDir == 1 && yDir == -1) {
      002B82 22                    9953 	ld	(hl+), a
      002B83 23                    9954 	inc	hl
      002B84 7E                    9955 	ld	a, (hl)
      002B85 B7                    9956 	or	a, a
      002B86 CAr09r2C              9957 	jp	Z, 00133$
      002B89 F8 01                 9958 	ldhl	sp,	#1
      002B8B 7E                    9959 	ld	a, (hl)
      002B8C B7                    9960 	or	a, a
      002B8D 28 7A                 9961 	jr	Z, 00133$
                                   9962 ;src/main.c:1040: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002B8F 23                    9963 	inc	hl
                                   9964 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002B90 2A                    9965 	ld	a, (hl+)
      002B91 22                    9966 	ld	(hl+), a
      002B92 36 00                 9967 	ld	(hl), #0x00
      002B94 3E 02                 9968 	ld	a, #0x02
      002B96                       9969 00271$:
      002B96 F8 03                 9970 	ldhl	sp,	#3
      002B98 CB 26                 9971 	sla	(hl)
      002B9A 23                    9972 	inc	hl
      002B9B CB 16                 9973 	rl	(hl)
      002B9D 3D                    9974 	dec	a
      002B9E 20 F6                 9975 	jr	NZ, 00271$
      002BA0 2B                    9976 	dec	hl
      002BA1 2A                    9977 	ld	a, (hl+)
      002BA2 5F                    9978 	ld	e, a
      002BA3 56                    9979 	ld	d, (hl)
      002BA4 21r00r00              9980 	ld	hl, #_shadow_OAM
      002BA7 19                    9981 	add	hl, de
      002BA8 E5                    9982 	push	hl
      002BA9 7D                    9983 	ld	a, l
      002BAA F8 03                 9984 	ldhl	sp,	#3
      002BAC 77                    9985 	ld	(hl), a
      002BAD E1                    9986 	pop	hl
      002BAE 7C                    9987 	ld	a, h
      002BAF F8 02                 9988 	ldhl	sp,	#2
      002BB1 32                    9989 	ld	(hl-), a
      002BB2 2A                    9990 	ld	a, (hl+)
      002BB3 5F                    9991 	ld	e, a
      002BB4 56                    9992 	ld	d, (hl)
      002BB5 21 03 00              9993 	ld	hl, #0x0003
      002BB8 19                    9994 	add	hl, de
      002BB9 E5                    9995 	push	hl
      002BBA 7D                    9996 	ld	a, l
      002BBB F8 05                 9997 	ldhl	sp,	#5
      002BBD 77                    9998 	ld	(hl), a
      002BBE E1                    9999 	pop	hl
      002BBF 7C                   10000 	ld	a, h
      002BC0 F8 04                10001 	ldhl	sp,	#4
      002BC2 32                   10002 	ld	(hl-), a
      002BC3 2A                   10003 	ld	a,	(hl+)
      002BC4 66                   10004 	ld	h, (hl)
      002BC5 6F                   10005 	ld	l, a
      002BC6 36 00                10006 	ld	(hl), #0x00
                                  10007 ;src/main.c:1041: projectiles[oldestProjectile].offset = 12;
      002BC8 21rA5r00             10008 	ld	hl, #_oldestProjectile
      002BCB 4E                   10009 	ld	c, (hl)
      002BCC 06 00                10010 	ld	b, #0x00
      002BCE 69                   10011 	ld	l, c
      002BCF 60                   10012 	ld	h, b
      002BD0 29                   10013 	add	hl, hl
      002BD1 09                   10014 	add	hl, bc
      002BD2 29                   10015 	add	hl, hl
      002BD3 29                   10016 	add	hl, hl
      002BD4 09                   10017 	add	hl, bc
      002BD5 E5                   10018 	push	hl
      002BD6 7D                   10019 	ld	a, l
      002BD7 F8 05                10020 	ldhl	sp,	#5
      002BD9 77                   10021 	ld	(hl), a
      002BDA E1                   10022 	pop	hl
      002BDB 7C                   10023 	ld	a, h
      002BDC F8 04                10024 	ldhl	sp,	#4
      002BDE 32                   10025 	ld	(hl-), a
      002BDF 2A                   10026 	ld	a, (hl+)
      002BE0 5F                   10027 	ld	e, a
      002BE1 56                   10028 	ld	d, (hl)
      002BE2 21rB4r00             10029 	ld	hl, #_projectiles
      002BE5 19                   10030 	add	hl, de
      002BE6 E5                   10031 	push	hl
      002BE7 7D                   10032 	ld	a, l
      002BE8 F8 03                10033 	ldhl	sp,	#3
      002BEA 77                   10034 	ld	(hl), a
      002BEB E1                   10035 	pop	hl
      002BEC 7C                   10036 	ld	a, h
      002BED F8 02                10037 	ldhl	sp,	#2
      002BEF 32                   10038 	ld	(hl-), a
      002BF0 2A                   10039 	ld	a, (hl+)
      002BF1 5F                   10040 	ld	e, a
      002BF2 56                   10041 	ld	d, (hl)
      002BF3 21 04 00             10042 	ld	hl, #0x0004
      002BF6 19                   10043 	add	hl, de
      002BF7 E5                   10044 	push	hl
      002BF8 7D                   10045 	ld	a, l
      002BF9 F8 05                10046 	ldhl	sp,	#5
      002BFB 77                   10047 	ld	(hl), a
      002BFC E1                   10048 	pop	hl
      002BFD 7C                   10049 	ld	a, h
      002BFE F8 04                10050 	ldhl	sp,	#4
      002C00 32                   10051 	ld	(hl-), a
      002C01 2A                   10052 	ld	a,	(hl+)
      002C02 66                   10053 	ld	h, (hl)
      002C03 6F                   10054 	ld	l, a
      002C04 36 0C                10055 	ld	(hl), #0x0c
      002C06 C3r86r2D             10056 	jp	00142$
      002C09                      10057 00133$:
                                  10058 ;src/main.c:1017: if (yDir == 1) {
      002C09 FArA8r00             10059 	ld	a, (#_yDir)
      002C0C 3D                   10060 	dec	a
      002C0D 3E 01                10061 	ld	a, #0x01
      002C0F 28 01                10062 	jr	Z, 00273$
      002C11 AF                   10063 	xor	a, a
      002C12                      10064 00273$:
      002C12 F8 03                10065 	ldhl	sp,	#3
                                  10066 ;src/main.c:1043: else if (xDir == 1 && yDir == 1) {
      002C14 22                   10067 	ld	(hl+), a
      002C15 7E                   10068 	ld	a, (hl)
      002C16 B7                   10069 	or	a, a
      002C17 CAr99r2C             10070 	jp	Z, 00129$
      002C1A 2B                   10071 	dec	hl
      002C1B 7E                   10072 	ld	a, (hl)
      002C1C B7                   10073 	or	a, a
      002C1D 28 7A                10074 	jr	Z, 00129$
                                  10075 ;src/main.c:1044: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      002C1F 2B                   10076 	dec	hl
                                  10077 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002C20 2A                   10078 	ld	a, (hl+)
      002C21 22                   10079 	ld	(hl+), a
      002C22 36 00                10080 	ld	(hl), #0x00
      002C24 3E 02                10081 	ld	a, #0x02
      002C26                      10082 00274$:
      002C26 F8 03                10083 	ldhl	sp,	#3
      002C28 CB 26                10084 	sla	(hl)
      002C2A 23                   10085 	inc	hl
      002C2B CB 16                10086 	rl	(hl)
      002C2D 3D                   10087 	dec	a
      002C2E 20 F6                10088 	jr	NZ, 00274$
      002C30 2B                   10089 	dec	hl
      002C31 2A                   10090 	ld	a, (hl+)
      002C32 5F                   10091 	ld	e, a
      002C33 56                   10092 	ld	d, (hl)
      002C34 21r00r00             10093 	ld	hl, #_shadow_OAM
      002C37 19                   10094 	add	hl, de
      002C38 E5                   10095 	push	hl
      002C39 7D                   10096 	ld	a, l
      002C3A F8 03                10097 	ldhl	sp,	#3
      002C3C 77                   10098 	ld	(hl), a
      002C3D E1                   10099 	pop	hl
      002C3E 7C                   10100 	ld	a, h
      002C3F F8 02                10101 	ldhl	sp,	#2
      002C41 32                   10102 	ld	(hl-), a
      002C42 2A                   10103 	ld	a, (hl+)
      002C43 5F                   10104 	ld	e, a
      002C44 56                   10105 	ld	d, (hl)
      002C45 21 03 00             10106 	ld	hl, #0x0003
      002C48 19                   10107 	add	hl, de
      002C49 E5                   10108 	push	hl
      002C4A 7D                   10109 	ld	a, l
      002C4B F8 05                10110 	ldhl	sp,	#5
      002C4D 77                   10111 	ld	(hl), a
      002C4E E1                   10112 	pop	hl
      002C4F 7C                   10113 	ld	a, h
      002C50 F8 04                10114 	ldhl	sp,	#4
      002C52 32                   10115 	ld	(hl-), a
      002C53 2A                   10116 	ld	a,	(hl+)
      002C54 66                   10117 	ld	h, (hl)
      002C55 6F                   10118 	ld	l, a
      002C56 36 40                10119 	ld	(hl), #0x40
                                  10120 ;src/main.c:1045: projectiles[oldestProjectile].offset = 4;
      002C58 21rA5r00             10121 	ld	hl, #_oldestProjectile
      002C5B 4E                   10122 	ld	c, (hl)
      002C5C 06 00                10123 	ld	b, #0x00
      002C5E 69                   10124 	ld	l, c
      002C5F 60                   10125 	ld	h, b
      002C60 29                   10126 	add	hl, hl
      002C61 09                   10127 	add	hl, bc
      002C62 29                   10128 	add	hl, hl
      002C63 29                   10129 	add	hl, hl
      002C64 09                   10130 	add	hl, bc
      002C65 E5                   10131 	push	hl
      002C66 7D                   10132 	ld	a, l
      002C67 F8 05                10133 	ldhl	sp,	#5
      002C69 77                   10134 	ld	(hl), a
      002C6A E1                   10135 	pop	hl
      002C6B 7C                   10136 	ld	a, h
      002C6C F8 04                10137 	ldhl	sp,	#4
      002C6E 32                   10138 	ld	(hl-), a
      002C6F 2A                   10139 	ld	a, (hl+)
      002C70 5F                   10140 	ld	e, a
      002C71 56                   10141 	ld	d, (hl)
      002C72 21rB4r00             10142 	ld	hl, #_projectiles
      002C75 19                   10143 	add	hl, de
      002C76 E5                   10144 	push	hl
      002C77 7D                   10145 	ld	a, l
      002C78 F8 03                10146 	ldhl	sp,	#3
      002C7A 77                   10147 	ld	(hl), a
      002C7B E1                   10148 	pop	hl
      002C7C 7C                   10149 	ld	a, h
      002C7D F8 02                10150 	ldhl	sp,	#2
      002C7F 32                   10151 	ld	(hl-), a
      002C80 2A                   10152 	ld	a, (hl+)
      002C81 5F                   10153 	ld	e, a
      002C82 56                   10154 	ld	d, (hl)
      002C83 21 04 00             10155 	ld	hl, #0x0004
      002C86 19                   10156 	add	hl, de
      002C87 E5                   10157 	push	hl
      002C88 7D                   10158 	ld	a, l
      002C89 F8 05                10159 	ldhl	sp,	#5
      002C8B 77                   10160 	ld	(hl), a
      002C8C E1                   10161 	pop	hl
      002C8D 7C                   10162 	ld	a, h
      002C8E F8 04                10163 	ldhl	sp,	#4
      002C90 32                   10164 	ld	(hl-), a
      002C91 2A                   10165 	ld	a,	(hl+)
      002C92 66                   10166 	ld	h, (hl)
      002C93 6F                   10167 	ld	l, a
      002C94 36 04                10168 	ld	(hl), #0x04
      002C96 C3r86r2D             10169 	jp	00142$
      002C99                      10170 00129$:
                                  10171 ;src/main.c:1047: else if (xDir == -1 && yDir == 1) {
      002C99 FArA7r00             10172 	ld	a, (#_xDir)
      002C9C 3C                   10173 	inc	a
      002C9D 3E 01                10174 	ld	a, #0x01
      002C9F 28 01                10175 	jr	Z, 00276$
      002CA1 AF                   10176 	xor	a, a
      002CA2                      10177 00276$:
      002CA2 F8 04                10178 	ldhl	sp,	#4
      002CA4 77                   10179 	ld	(hl), a
      002CA5 7E                   10180 	ld	a, (hl)
      002CA6 B7                   10181 	or	a, a
      002CA7 CAr28r2D             10182 	jp	Z, 00125$
      002CAA 2B                   10183 	dec	hl
      002CAB 7E                   10184 	ld	a, (hl)
      002CAC B7                   10185 	or	a, a
      002CAD 28 79                10186 	jr	Z, 00125$
                                  10187 ;src/main.c:1048: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002CAF 2B                   10188 	dec	hl
                                  10189 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002CB0 2A                   10190 	ld	a, (hl+)
      002CB1 22                   10191 	ld	(hl+), a
      002CB2 36 00                10192 	ld	(hl), #0x00
      002CB4 3E 02                10193 	ld	a, #0x02
      002CB6                      10194 00277$:
      002CB6 F8 03                10195 	ldhl	sp,	#3
      002CB8 CB 26                10196 	sla	(hl)
      002CBA 23                   10197 	inc	hl
      002CBB CB 16                10198 	rl	(hl)
      002CBD 3D                   10199 	dec	a
      002CBE 20 F6                10200 	jr	NZ, 00277$
      002CC0 2B                   10201 	dec	hl
      002CC1 2A                   10202 	ld	a, (hl+)
      002CC2 5F                   10203 	ld	e, a
      002CC3 56                   10204 	ld	d, (hl)
      002CC4 21r00r00             10205 	ld	hl, #_shadow_OAM
      002CC7 19                   10206 	add	hl, de
      002CC8 E5                   10207 	push	hl
      002CC9 7D                   10208 	ld	a, l
      002CCA F8 03                10209 	ldhl	sp,	#3
      002CCC 77                   10210 	ld	(hl), a
      002CCD E1                   10211 	pop	hl
      002CCE 7C                   10212 	ld	a, h
      002CCF F8 02                10213 	ldhl	sp,	#2
      002CD1 32                   10214 	ld	(hl-), a
      002CD2 2A                   10215 	ld	a, (hl+)
      002CD3 5F                   10216 	ld	e, a
      002CD4 56                   10217 	ld	d, (hl)
      002CD5 21 03 00             10218 	ld	hl, #0x0003
      002CD8 19                   10219 	add	hl, de
      002CD9 E5                   10220 	push	hl
      002CDA 7D                   10221 	ld	a, l
      002CDB F8 05                10222 	ldhl	sp,	#5
      002CDD 77                   10223 	ld	(hl), a
      002CDE E1                   10224 	pop	hl
      002CDF 7C                   10225 	ld	a, h
      002CE0 F8 04                10226 	ldhl	sp,	#4
      002CE2 32                   10227 	ld	(hl-), a
      002CE3 2A                   10228 	ld	a,	(hl+)
      002CE4 66                   10229 	ld	h, (hl)
      002CE5 6F                   10230 	ld	l, a
      002CE6 36 60                10231 	ld	(hl), #0x60
                                  10232 ;src/main.c:1049: projectiles[oldestProjectile].offset = 4;
      002CE8 21rA5r00             10233 	ld	hl, #_oldestProjectile
      002CEB 4E                   10234 	ld	c, (hl)
      002CEC 06 00                10235 	ld	b, #0x00
      002CEE 69                   10236 	ld	l, c
      002CEF 60                   10237 	ld	h, b
      002CF0 29                   10238 	add	hl, hl
      002CF1 09                   10239 	add	hl, bc
      002CF2 29                   10240 	add	hl, hl
      002CF3 29                   10241 	add	hl, hl
      002CF4 09                   10242 	add	hl, bc
      002CF5 E5                   10243 	push	hl
      002CF6 7D                   10244 	ld	a, l
      002CF7 F8 05                10245 	ldhl	sp,	#5
      002CF9 77                   10246 	ld	(hl), a
      002CFA E1                   10247 	pop	hl
      002CFB 7C                   10248 	ld	a, h
      002CFC F8 04                10249 	ldhl	sp,	#4
      002CFE 32                   10250 	ld	(hl-), a
      002CFF 2A                   10251 	ld	a, (hl+)
      002D00 5F                   10252 	ld	e, a
      002D01 56                   10253 	ld	d, (hl)
      002D02 21rB4r00             10254 	ld	hl, #_projectiles
      002D05 19                   10255 	add	hl, de
      002D06 E5                   10256 	push	hl
      002D07 7D                   10257 	ld	a, l
      002D08 F8 03                10258 	ldhl	sp,	#3
      002D0A 77                   10259 	ld	(hl), a
      002D0B E1                   10260 	pop	hl
      002D0C 7C                   10261 	ld	a, h
      002D0D F8 02                10262 	ldhl	sp,	#2
      002D0F 32                   10263 	ld	(hl-), a
      002D10 2A                   10264 	ld	a, (hl+)
      002D11 5F                   10265 	ld	e, a
      002D12 56                   10266 	ld	d, (hl)
      002D13 21 04 00             10267 	ld	hl, #0x0004
      002D16 19                   10268 	add	hl, de
      002D17 E5                   10269 	push	hl
      002D18 7D                   10270 	ld	a, l
      002D19 F8 05                10271 	ldhl	sp,	#5
      002D1B 77                   10272 	ld	(hl), a
      002D1C E1                   10273 	pop	hl
      002D1D 7C                   10274 	ld	a, h
      002D1E F8 04                10275 	ldhl	sp,	#4
      002D20 32                   10276 	ld	(hl-), a
      002D21 2A                   10277 	ld	a,	(hl+)
      002D22 66                   10278 	ld	h, (hl)
      002D23 6F                   10279 	ld	l, a
      002D24 36 04                10280 	ld	(hl), #0x04
      002D26 18 5E                10281 	jr	00142$
      002D28                      10282 00125$:
                                  10283 ;src/main.c:1051: else if (xDir == -1 && yDir == -1) {
      002D28 F8 04                10284 	ldhl	sp,	#4
      002D2A 7E                   10285 	ld	a, (hl)
      002D2B B7                   10286 	or	a, a
      002D2C 28 58                10287 	jr	Z, 00142$
      002D2E F8 01                10288 	ldhl	sp,	#1
      002D30 7E                   10289 	ld	a, (hl)
      002D31 B7                   10290 	or	a, a
      002D32 28 52                10291 	jr	Z, 00142$
                                  10292 ;src/main.c:1052: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002D34 23                   10293 	inc	hl
                                  10294 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002D35 2A                   10295 	ld	a, (hl+)
      002D36 22                   10296 	ld	(hl+), a
      002D37 36 00                10297 	ld	(hl), #0x00
      002D39 3E 02                10298 	ld	a, #0x02
      002D3B                      10299 00278$:
      002D3B F8 03                10300 	ldhl	sp,	#3
      002D3D CB 26                10301 	sla	(hl)
      002D3F 23                   10302 	inc	hl
      002D40 CB 16                10303 	rl	(hl)
      002D42 3D                   10304 	dec	a
      002D43 20 F6                10305 	jr	NZ, 00278$
      002D45 2B                   10306 	dec	hl
      002D46 2A                   10307 	ld	a, (hl+)
      002D47 5F                   10308 	ld	e, a
      002D48 56                   10309 	ld	d, (hl)
      002D49 21r00r00             10310 	ld	hl, #_shadow_OAM
      002D4C 19                   10311 	add	hl, de
      002D4D E5                   10312 	push	hl
      002D4E 7D                   10313 	ld	a, l
      002D4F F8 03                10314 	ldhl	sp,	#3
      002D51 77                   10315 	ld	(hl), a
      002D52 E1                   10316 	pop	hl
      002D53 7C                   10317 	ld	a, h
      002D54 F8 02                10318 	ldhl	sp,	#2
      002D56 32                   10319 	ld	(hl-), a
      002D57 2A                   10320 	ld	a, (hl+)
      002D58 5F                   10321 	ld	e, a
      002D59 56                   10322 	ld	d, (hl)
      002D5A 21 03 00             10323 	ld	hl, #0x0003
      002D5D 19                   10324 	add	hl, de
      002D5E E5                   10325 	push	hl
      002D5F 7D                   10326 	ld	a, l
      002D60 F8 05                10327 	ldhl	sp,	#5
      002D62 77                   10328 	ld	(hl), a
      002D63 E1                   10329 	pop	hl
      002D64 7C                   10330 	ld	a, h
      002D65 F8 04                10331 	ldhl	sp,	#4
      002D67 32                   10332 	ld	(hl-), a
      002D68 2A                   10333 	ld	a,	(hl+)
      002D69 66                   10334 	ld	h, (hl)
      002D6A 6F                   10335 	ld	l, a
      002D6B 36 20                10336 	ld	(hl), #0x20
                                  10337 ;src/main.c:1053: projectiles[oldestProjectile].offset = 12;
      002D6D 21rA5r00             10338 	ld	hl, #_oldestProjectile
      002D70 4E                   10339 	ld	c, (hl)
      002D71 06 00                10340 	ld	b, #0x00
      002D73 69                   10341 	ld	l, c
      002D74 60                   10342 	ld	h, b
      002D75 29                   10343 	add	hl, hl
      002D76 09                   10344 	add	hl, bc
      002D77 29                   10345 	add	hl, hl
      002D78 29                   10346 	add	hl, hl
      002D79 09                   10347 	add	hl, bc
      002D7A 01rB4r00             10348 	ld	bc,#_projectiles
      002D7D 09                   10349 	add	hl,bc
      002D7E 4D                   10350 	ld	c, l
      002D7F 44                   10351 	ld	b, h
      002D80 21 04 00             10352 	ld	hl, #0x0004
      002D83 09                   10353 	add	hl, bc
      002D84 36 0C                10354 	ld	(hl), #0x0c
      002D86                      10355 00142$:
                                  10356 ;src/main.c:1057: fireCooldown = projectiles[oldestProjectile].delay;
      002D86 21rA5r00             10357 	ld	hl, #_oldestProjectile
      002D89 4E                   10358 	ld	c, (hl)
      002D8A 06 00                10359 	ld	b, #0x00
      002D8C 69                   10360 	ld	l, c
      002D8D 60                   10361 	ld	h, b
      002D8E 29                   10362 	add	hl, hl
      002D8F 09                   10363 	add	hl, bc
      002D90 29                   10364 	add	hl, hl
      002D91 29                   10365 	add	hl, hl
      002D92 09                   10366 	add	hl, bc
      002D93 01rB4r00             10367 	ld	bc,#_projectiles
      002D96 09                   10368 	add	hl,bc
      002D97 01 0B 00             10369 	ld	bc, #0x000b
      002D9A 09                   10370 	add	hl, bc
      002D9B 7E                   10371 	ld	a, (hl)
      002D9C EArA6r00             10372 	ld	(#_fireCooldown),a
      002D9F                      10373 00155$:
                                  10374 ;src/main.c:1063: }
      002D9F E8 05                10375 	add	sp, #5
      002DA1 C9                   10376 	ret
                                  10377 ;src/main.c:1066: void moveProjectiles() {
                                  10378 ;	---------------------------------
                                  10379 ; Function moveProjectiles
                                  10380 ; ---------------------------------
      002DA2                      10381 _moveProjectiles::
      002DA2 E8 F6                10382 	add	sp, #-10
                                  10383 ;src/main.c:1067: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002DA4 F8 09                10384 	ldhl	sp,	#9
      002DA6 36 00                10385 	ld	(hl), #0x00
      002DA8                      10386 00112$:
      002DA8 21r9Fr0B             10387 	ld	hl, #_PROJECTILECOUNT
      002DAB 4E                   10388 	ld	c, (hl)
      002DAC F8 09                10389 	ldhl	sp,	#9
      002DAE 7E                   10390 	ld	a, (hl)
      002DAF 91                   10391 	sub	a, c
      002DB0 D2r82r2F             10392 	jp	NC, 00114$
                                  10393 ;src/main.c:1068: if (projectiles[i].active) {
      002DB3 4E                   10394 	ld	c, (hl)
      002DB4 06 00                10395 	ld	b, #0x00
      002DB6 69                   10396 	ld	l, c
      002DB7 60                   10397 	ld	h, b
      002DB8 29                   10398 	add	hl, hl
      002DB9 09                   10399 	add	hl, bc
      002DBA 29                   10400 	add	hl, hl
      002DBB 29                   10401 	add	hl, hl
      002DBC 09                   10402 	add	hl, bc
      002DBD 01rB4r00             10403 	ld	bc,#_projectiles
      002DC0 09                   10404 	add	hl,bc
      002DC1 E5                   10405 	push	hl
      002DC2 7D                   10406 	ld	a, l
      002DC3 F8 07                10407 	ldhl	sp,	#7
      002DC5 77                   10408 	ld	(hl), a
      002DC6 E1                   10409 	pop	hl
      002DC7 7C                   10410 	ld	a, h
      002DC8 F8 06                10411 	ldhl	sp,	#6
      002DCA 32                   10412 	ld	(hl-), a
      002DCB 2A                   10413 	ld	a, (hl+)
      002DCC 5F                   10414 	ld	e, a
      002DCD 56                   10415 	ld	d, (hl)
      002DCE 21 0A 00             10416 	ld	hl, #0x000a
      002DD1 19                   10417 	add	hl, de
      002DD2 4D                   10418 	ld	c, l
      002DD3 44                   10419 	ld	b, h
      002DD4 0A                   10420 	ld	a, (bc)
      002DD5 F8 08                10421 	ldhl	sp,	#8
      002DD7 77                   10422 	ld	(hl), a
      002DD8 7E                   10423 	ld	a, (hl)
      002DD9 B7                   10424 	or	a, a
      002DDA CAr7Cr2F             10425 	jp	Z, 00113$
                                  10426 ;src/main.c:1069: projectiles[i].x -= xOverflow;
      002DDD 2B                   10427 	dec	hl
      002DDE 2B                   10428 	dec	hl
      002DDF 2B                   10429 	dec	hl
      002DE0 2A                   10430 	ld	a, (hl+)
      002DE1 5F                   10431 	ld	e, a
      002DE2 56                   10432 	ld	d, (hl)
      002DE3 1A                   10433 	ld	a, (de)
      002DE4 47                   10434 	ld	b, a
      002DE5 13                   10435 	inc	de
      002DE6 1A                   10436 	ld	a, (de)
      002DE7 4F                   10437 	ld	c, a
      002DE8 58                   10438 	ld	e, b
      002DE9 51                   10439 	ld	d, c
      002DEA 21rB5r00             10440 	ld	hl, #_xOverflow
      002DED 2A                   10441 	ld	a,	(hl+)
      002DEE 66                   10442 	ld	h, (hl)
      002DEF 6F                   10443 	ld	l, a
      002DF0 7B                   10444 	ld	a, e
      002DF1 95                   10445 	sub	a, l
      002DF2 5F                   10446 	ld	e, a
      002DF3 7A                   10447 	ld	a, d
      002DF4 9C                   10448 	sbc	a, h
      002DF5 F8 01                10449 	ldhl	sp,	#1
      002DF7 32                   10450 	ld	(hl-), a
      002DF8 73                   10451 	ld	(hl), e
      002DF9 F8 05                10452 	ldhl	sp,#5
      002DFB 2A                   10453 	ld	a, (hl+)
      002DFC 5F                   10454 	ld	e, a
      002DFD 56                   10455 	ld	d, (hl)
      002DFE F8 00                10456 	ldhl	sp,	#0
      002E00 2A                   10457 	ld	a, (hl+)
      002E01 12                   10458 	ld	(de), a
      002E02 13                   10459 	inc	de
      002E03 7E                   10460 	ld	a, (hl)
      002E04 12                   10461 	ld	(de), a
                                  10462 ;src/main.c:1070: projectiles[i].y -= yOverflow;
      002E05 F8 05                10463 	ldhl	sp,#5
      002E07 2A                   10464 	ld	a, (hl+)
      002E08 5F                   10465 	ld	e, a
      002E09 56                   10466 	ld	d, (hl)
      002E0A 21 02 00             10467 	ld	hl, #0x0002
      002E0D 19                   10468 	add	hl, de
      002E0E E5                   10469 	push	hl
      002E0F 7D                   10470 	ld	a, l
      002E10 F8 04                10471 	ldhl	sp,	#4
      002E12 77                   10472 	ld	(hl), a
      002E13 E1                   10473 	pop	hl
      002E14 7C                   10474 	ld	a, h
      002E15 F8 03                10475 	ldhl	sp,	#3
      002E17 32                   10476 	ld	(hl-), a
      002E18 2A                   10477 	ld	a, (hl+)
      002E19 5F                   10478 	ld	e, a
      002E1A 56                   10479 	ld	d, (hl)
      002E1B 1A                   10480 	ld	a, (de)
      002E1C 4F                   10481 	ld	c, a
      002E1D 13                   10482 	inc	de
      002E1E 1A                   10483 	ld	a, (de)
      002E1F 47                   10484 	ld	b, a
      002E20 79                   10485 	ld	a, c
      002E21 21rB7r00             10486 	ld	hl, #_yOverflow
      002E24 96                   10487 	sub	a, (hl)
      002E25 23                   10488 	inc	hl
      002E26 4F                   10489 	ld	c, a
      002E27 78                   10490 	ld	a, b
      002E28 9E                   10491 	sbc	a, (hl)
      002E29 47                   10492 	ld	b, a
      002E2A F8 02                10493 	ldhl	sp,	#2
      002E2C 2A                   10494 	ld	a,	(hl+)
      002E2D 66                   10495 	ld	h, (hl)
      002E2E 6F                   10496 	ld	l, a
      002E2F 79                   10497 	ld	a, c
      002E30 22                   10498 	ld	(hl+), a
      002E31 70                   10499 	ld	(hl), b
                                  10500 ;src/main.c:1072: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002E32 F8 05                10501 	ldhl	sp,#5
      002E34 2A                   10502 	ld	a, (hl+)
      002E35 5F                   10503 	ld	e, a
      002E36 56                   10504 	ld	d, (hl)
      002E37 21 06 00             10505 	ld	hl, #0x0006
      002E3A 19                   10506 	add	hl, de
      002E3B 5D                   10507 	ld	e, l
      002E3C 54                   10508 	ld	d, h
      002E3D 1A                   10509 	ld	a, (de)
      002E3E 6F                   10510 	ld	l, a
                                  10511 ;	spillPairReg hl
                                  10512 ;	spillPairReg hl
      002E3F 07                   10513 	rlca
      002E40 9F                   10514 	sbc	a, a
      002E41 67                   10515 	ld	h, a
                                  10516 ;	spillPairReg hl
                                  10517 ;	spillPairReg hl
      002E42 09                   10518 	add	hl, bc
      002E43 4D                   10519 	ld	c, l
      002E44 44                   10520 	ld	b, h
                                  10521 ;src/main.c:1073: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002E45 F8 05                10522 	ldhl	sp,#5
      002E47 2A                   10523 	ld	a, (hl+)
      002E48 5F                   10524 	ld	e, a
      002E49 56                   10525 	ld	d, (hl)
      002E4A 21 05 00             10526 	ld	hl, #0x0005
      002E4D 19                   10527 	add	hl, de
      002E4E 5D                   10528 	ld	e, l
      002E4F 54                   10529 	ld	d, h
      002E50 1A                   10530 	ld	a, (de)
      002E51 F8 07                10531 	ldhl	sp,	#7
      002E53 22                   10532 	ld	(hl+), a
      002E54 07                   10533 	rlca
      002E55 9F                   10534 	sbc	a, a
      002E56 77                   10535 	ld	(hl), a
      002E57 D1                   10536 	pop	de
      002E58 D5                   10537 	push	de
      002E59 3A                   10538 	ld	a, (hl-)
      002E5A 6E                   10539 	ld	l, (hl)
      002E5B 67                   10540 	ld	h, a
      002E5C 19                   10541 	add	hl, de
      002E5D 5D                   10542 	ld	e, l
      002E5E 7C                   10543 	ld	a, h
      002E5F F8 07                10544 	ldhl	sp,	#7
      002E61 73                   10545 	ld	(hl), e
      002E62 23                   10546 	inc	hl
      002E63 77                   10547 	ld	(hl), a
                                  10548 ;src/main.c:1076: projectiles[i].y = newY;
      002E64 F8 02                10549 	ldhl	sp,	#2
      002E66 2A                   10550 	ld	a,	(hl+)
      002E67 66                   10551 	ld	h, (hl)
      002E68 6F                   10552 	ld	l, a
      002E69 79                   10553 	ld	a, c
      002E6A 22                   10554 	ld	(hl+), a
      002E6B 70                   10555 	ld	(hl), b
                                  10556 ;src/main.c:1077: projectiles[i].x = newX;
      002E6C F8 05                10557 	ldhl	sp,#5
      002E6E 2A                   10558 	ld	a, (hl+)
      002E6F 5F                   10559 	ld	e, a
      002E70 2A                   10560 	ld	a, (hl+)
      002E71 57                   10561 	ld	d, a
      002E72 2A                   10562 	ld	a, (hl+)
      002E73 12                   10563 	ld	(de), a
      002E74 13                   10564 	inc	de
                                  10565 ;src/main.c:1081: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002E75 3A                   10566 	ld	a, (hl-)
      002E76 2B                   10567 	dec	hl
      002E77 2B                   10568 	dec	hl
      002E78 12                   10569 	ld	(de), a
      002E79 2A                   10570 	ld	a, (hl+)
      002E7A 5F                   10571 	ld	e, a
      002E7B 56                   10572 	ld	d, (hl)
      002E7C 21 04 00             10573 	ld	hl, #0x0004
      002E7F 19                   10574 	add	hl, de
      002E80 5D                   10575 	ld	e, l
      002E81 54                   10576 	ld	d, h
      002E82 1A                   10577 	ld	a, (de)
      002E83 81                   10578 	add	a, c
      002E84 4F                   10579 	ld	c, a
      002E85 F8 07                10580 	ldhl	sp,	#7
      002E87 2A                   10581 	ld	a, (hl+)
      002E88 23                   10582 	inc	hl
      002E89 C6 04                10583 	add	a, #0x04
      002E8B 5F                   10584 	ld	e, a
      002E8C 7E                   10585 	ld	a, (hl)
      002E8D C6 1E                10586 	add	a, #0x1e
      002E8F F8 04                10587 	ldhl	sp,	#4
      002E91 77                   10588 	ld	(hl), a
                                  10589 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002E92 6E                   10590 	ld	l, (hl)
                                  10591 ;	spillPairReg hl
                                  10592 ;	spillPairReg hl
      002E93 26 00                10593 	ld	h, #0x00
                                  10594 ;	spillPairReg hl
                                  10595 ;	spillPairReg hl
      002E95 29                   10596 	add	hl, hl
      002E96 29                   10597 	add	hl, hl
      002E97 D5                   10598 	push	de
      002E98 11r00r00             10599 	ld	de, #_shadow_OAM
      002E9B 19                   10600 	add	hl, de
      002E9C D1                   10601 	pop	de
                                  10602 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002E9D 79                   10603 	ld	a, c
      002E9E 22                   10604 	ld	(hl+), a
      002E9F 73                   10605 	ld	(hl), e
                                  10606 ;src/main.c:1085: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002EA0 F8 05                10607 	ldhl	sp,#5
      002EA2 2A                   10608 	ld	a, (hl+)
      002EA3 5F                   10609 	ld	e, a
      002EA4 3A                   10610 	ld	a, (hl-)
      002EA5 57                   10611 	ld	d, a
      002EA6 1A                   10612 	ld	a, (de)
      002EA7 22                   10613 	ld	(hl+), a
      002EA8 13                   10614 	inc	de
      002EA9 1A                   10615 	ld	a, (de)
      002EAA 22                   10616 	ld	(hl+), a
      002EAB 23                   10617 	inc	hl
      002EAC CB 7E                10618 	bit	7, (hl)
      002EAE 20 51                10619 	jr	NZ, 00101$
      002EB0 F8 05                10620 	ldhl	sp,	#5
      002EB2 2A                   10621 	ld	a, (hl+)
      002EB3 23                   10622 	inc	hl
      002EB4 32                   10623 	ld	(hl-), a
      002EB5 2A                   10624 	ld	a, (hl+)
      002EB6 23                   10625 	inc	hl
      002EB7 32                   10626 	ld	(hl-), a
      002EB8 3E AA                10627 	ld	a, #0xaa
      002EBA 96                   10628 	sub	a, (hl)
      002EBB 23                   10629 	inc	hl
      002EBC 3E 00                10630 	ld	a, #0x00
      002EBE 9E                   10631 	sbc	a, (hl)
      002EBF 3E 00                10632 	ld	a, #0x00
      002EC1 57                   10633 	ld	d, a
      002EC2 CB 7E                10634 	bit	7, (hl)
      002EC4 28 07                10635 	jr	Z, 00147$
      002EC6 CB 7A                10636 	bit	7, d
      002EC8 20 08                10637 	jr	NZ, 00148$
      002ECA BF                   10638 	cp	a, a
      002ECB 18 05                10639 	jr	00148$
      002ECD                      10640 00147$:
      002ECD CB 7A                10641 	bit	7, d
      002ECF 28 01                10642 	jr	Z, 00148$
      002ED1 37                   10643 	scf
      002ED2                      10644 00148$:
      002ED2 38 2D                10645 	jr	C, 00101$
      002ED4 F8 02                10646 	ldhl	sp,#2
      002ED6 2A                   10647 	ld	a, (hl+)
      002ED7 5F                   10648 	ld	e, a
      002ED8 56                   10649 	ld	d, (hl)
      002ED9 1A                   10650 	ld	a, (de)
      002EDA F8 07                10651 	ldhl	sp,	#7
      002EDC 22                   10652 	ld	(hl+), a
      002EDD 13                   10653 	inc	de
      002EDE 1A                   10654 	ld	a, (de)
      002EDF 77                   10655 	ld	(hl), a
      002EE0 CB 7E                10656 	bit	7, (hl)
      002EE2 20 1D                10657 	jr	NZ, 00101$
      002EE4 2B                   10658 	dec	hl
      002EE5 3E 9A                10659 	ld	a, #0x9a
      002EE7 96                   10660 	sub	a, (hl)
      002EE8 23                   10661 	inc	hl
      002EE9 3E 00                10662 	ld	a, #0x00
      002EEB 9E                   10663 	sbc	a, (hl)
      002EEC 3E 00                10664 	ld	a, #0x00
      002EEE 57                   10665 	ld	d, a
      002EEF CB 7E                10666 	bit	7, (hl)
      002EF1 28 07                10667 	jr	Z, 00149$
      002EF3 CB 7A                10668 	bit	7, d
      002EF5 20 08                10669 	jr	NZ, 00150$
      002EF7 BF                   10670 	cp	a, a
      002EF8 18 05                10671 	jr	00150$
      002EFA                      10672 00149$:
      002EFA CB 7A                10673 	bit	7, d
      002EFC 28 01                10674 	jr	Z, 00150$
      002EFE 37                   10675 	scf
      002EFF                      10676 00150$:
      002EFF 30 7B                10677 	jr	NC, 00113$
      002F01                      10678 00101$:
                                  10679 ;src/main.c:1086: projectiles[i].active = 0;
      002F01 F8 09                10680 	ldhl	sp,	#9
      002F03 4E                   10681 	ld	c, (hl)
      002F04 06 00                10682 	ld	b, #0x00
      002F06 69                   10683 	ld	l, c
      002F07 60                   10684 	ld	h, b
      002F08 29                   10685 	add	hl, hl
      002F09 09                   10686 	add	hl, bc
      002F0A 29                   10687 	add	hl, hl
      002F0B 29                   10688 	add	hl, hl
      002F0C 09                   10689 	add	hl, bc
      002F0D E5                   10690 	push	hl
      002F0E 7D                   10691 	ld	a, l
      002F0F F8 09                10692 	ldhl	sp,	#9
      002F11 77                   10693 	ld	(hl), a
      002F12 E1                   10694 	pop	hl
      002F13 7C                   10695 	ld	a, h
      002F14 F8 08                10696 	ldhl	sp,	#8
      002F16 32                   10697 	ld	(hl-), a
      002F17 2A                   10698 	ld	a, (hl+)
      002F18 5F                   10699 	ld	e, a
      002F19 56                   10700 	ld	d, (hl)
      002F1A 21rB4r00             10701 	ld	hl, #_projectiles
      002F1D 19                   10702 	add	hl, de
      002F1E E5                   10703 	push	hl
      002F1F 7D                   10704 	ld	a, l
      002F20 F8 07                10705 	ldhl	sp,	#7
      002F22 77                   10706 	ld	(hl), a
      002F23 E1                   10707 	pop	hl
      002F24 7C                   10708 	ld	a, h
      002F25 F8 06                10709 	ldhl	sp,	#6
      002F27 32                   10710 	ld	(hl-), a
      002F28 2A                   10711 	ld	a, (hl+)
      002F29 5F                   10712 	ld	e, a
      002F2A 56                   10713 	ld	d, (hl)
      002F2B 21 0A 00             10714 	ld	hl, #0x000a
      002F2E 19                   10715 	add	hl, de
      002F2F E5                   10716 	push	hl
      002F30 7D                   10717 	ld	a, l
      002F31 F8 09                10718 	ldhl	sp,	#9
      002F33 77                   10719 	ld	(hl), a
      002F34 E1                   10720 	pop	hl
      002F35 7C                   10721 	ld	a, h
      002F36 F8 08                10722 	ldhl	sp,	#8
      002F38 32                   10723 	ld	(hl-), a
      002F39 2A                   10724 	ld	a,	(hl+)
      002F3A 66                   10725 	ld	h, (hl)
      002F3B 6F                   10726 	ld	l, a
      002F3C 36 00                10727 	ld	(hl), #0x00
                                  10728 ;src/main.c:1087: set_sprite_tile(30+i, 0x7f);
      002F3E F8 04                10729 	ldhl	sp,	#4
      002F40 7E                   10730 	ld	a, (hl)
      002F41 F8 08                10731 	ldhl	sp,	#8
      002F43 77                   10732 	ld	(hl), a
                                  10733 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002F44 3A                   10734 	ld	a, (hl-)
      002F45 22                   10735 	ld	(hl+), a
      002F46 36 00                10736 	ld	(hl), #0x00
      002F48 3E 02                10737 	ld	a, #0x02
      002F4A                      10738 00151$:
      002F4A F8 07                10739 	ldhl	sp,	#7
      002F4C CB 26                10740 	sla	(hl)
      002F4E 23                   10741 	inc	hl
      002F4F CB 16                10742 	rl	(hl)
      002F51 3D                   10743 	dec	a
      002F52 20 F6                10744 	jr	NZ, 00151$
      002F54 2B                   10745 	dec	hl
      002F55 2A                   10746 	ld	a, (hl+)
      002F56 5F                   10747 	ld	e, a
      002F57 56                   10748 	ld	d, (hl)
      002F58 21r00r00             10749 	ld	hl, #_shadow_OAM
      002F5B 19                   10750 	add	hl, de
      002F5C E5                   10751 	push	hl
      002F5D 7D                   10752 	ld	a, l
      002F5E F8 07                10753 	ldhl	sp,	#7
      002F60 77                   10754 	ld	(hl), a
      002F61 E1                   10755 	pop	hl
      002F62 7C                   10756 	ld	a, h
      002F63 F8 06                10757 	ldhl	sp,	#6
      002F65 32                   10758 	ld	(hl-), a
      002F66 2A                   10759 	ld	a, (hl+)
      002F67 5F                   10760 	ld	e, a
      002F68 56                   10761 	ld	d, (hl)
      002F69 21 02 00             10762 	ld	hl, #0x0002
      002F6C 19                   10763 	add	hl, de
      002F6D E5                   10764 	push	hl
      002F6E 7D                   10765 	ld	a, l
      002F6F F8 09                10766 	ldhl	sp,	#9
      002F71 77                   10767 	ld	(hl), a
      002F72 E1                   10768 	pop	hl
      002F73 7C                   10769 	ld	a, h
      002F74 F8 08                10770 	ldhl	sp,	#8
      002F76 32                   10771 	ld	(hl-), a
      002F77 2A                   10772 	ld	a,	(hl+)
      002F78 66                   10773 	ld	h, (hl)
      002F79 6F                   10774 	ld	l, a
      002F7A 36 7F                10775 	ld	(hl), #0x7f
                                  10776 ;src/main.c:1087: set_sprite_tile(30+i, 0x7f);
      002F7C                      10777 00113$:
                                  10778 ;src/main.c:1067: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002F7C F8 09                10779 	ldhl	sp,	#9
      002F7E 34                   10780 	inc	(hl)
      002F7F C3rA8r2D             10781 	jp	00112$
      002F82                      10782 00114$:
                                  10783 ;src/main.c:1092: }
      002F82 E8 0A                10784 	add	sp, #10
      002F84 C9                   10785 	ret
                                  10786 ;src/main.c:1094: void tickPickups() {
                                  10787 ;	---------------------------------
                                  10788 ; Function tickPickups
                                  10789 ; ---------------------------------
      002F85                      10790 _tickPickups::
      002F85 3B                   10791 	dec	sp
      002F86 3B                   10792 	dec	sp
                                  10793 ;src/main.c:1096: if (pickup.active) {
      002F87 FArFFr00             10794 	ld	a, (#(_pickup + 5) + 0)
      002F8A B7                   10795 	or	a, a
      002F8B CAr5Ar31             10796 	jp	Z, 00144$
                                  10797 ;src/main.c:1097: pickup.x -= xOverflow;
      002F8E 21rFBr00             10798 	ld	hl, #(_pickup + 1)
      002F91 2A                   10799 	ld	a, (hl+)
      002F92 47                   10800 	ld	b, a
      002F93 4E                   10801 	ld	c, (hl)
      002F94 58                   10802 	ld	e, b
      002F95 51                   10803 	ld	d, c
      002F96 21rB5r00             10804 	ld	hl, #_xOverflow
      002F99 2A                   10805 	ld	a,	(hl+)
      002F9A 66                   10806 	ld	h, (hl)
      002F9B 6F                   10807 	ld	l, a
      002F9C 7B                   10808 	ld	a, e
      002F9D 95                   10809 	sub	a, l
      002F9E 5F                   10810 	ld	e, a
      002F9F 7A                   10811 	ld	a, d
      002FA0 9C                   10812 	sbc	a, h
      002FA1 F8 01                10813 	ldhl	sp,	#1
      002FA3 32                   10814 	ld	(hl-), a
      002FA4 73                   10815 	ld	(hl), e
      002FA5 11rFBr00             10816 	ld	de, #(_pickup + 1)
      002FA8 2A                   10817 	ld	a, (hl+)
      002FA9 12                   10818 	ld	(de), a
      002FAA 13                   10819 	inc	de
      002FAB 7E                   10820 	ld	a, (hl)
      002FAC 12                   10821 	ld	(de), a
                                  10822 ;src/main.c:1098: pickup.y -= yOverflow;
      002FAD 21rFDr00             10823 	ld	hl, #(_pickup + 3)
      002FB0 2A                   10824 	ld	a, (hl+)
      002FB1 4F                   10825 	ld	c, a
      002FB2 46                   10826 	ld	b, (hl)
      002FB3 79                   10827 	ld	a, c
      002FB4 21rB7r00             10828 	ld	hl, #_yOverflow
      002FB7 96                   10829 	sub	a, (hl)
      002FB8 23                   10830 	inc	hl
      002FB9 4F                   10831 	ld	c, a
      002FBA 78                   10832 	ld	a, b
      002FBB 9E                   10833 	sbc	a, (hl)
      002FBC 47                   10834 	ld	b, a
      002FBD 21rFDr00             10835 	ld	hl, #(_pickup + 3)
      002FC0 79                   10836 	ld	a, c
      002FC1 22                   10837 	ld	(hl+), a
      002FC2 70                   10838 	ld	(hl), b
                                  10839 ;src/main.c:1099: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002FC3 79                   10840 	ld	a, c
      002FC4 C6 0C                10841 	add	a, #0x0c
      002FC6 47                   10842 	ld	b, a
      002FC7 F8 00                10843 	ldhl	sp,	#0
      002FC9 7E                   10844 	ld	a, (hl)
      002FCA C6 04                10845 	add	a, #0x04
      002FCC 4F                   10846 	ld	c, a
                                  10847 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002FCD 21r0Cr00             10848 	ld	hl, #(_shadow_OAM + 12)
                                  10849 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002FD0 78                   10850 	ld	a, b
      002FD1 22                   10851 	ld	(hl+), a
      002FD2 71                   10852 	ld	(hl), c
                                  10853 ;src/main.c:1100: if (pickup.visible && auxTick == 1) {
      002FD3 21rFAr00             10854 	ld	hl, #_pickup
      002FD6 4E                   10855 	ld	c, (hl)
                                  10856 ;src/main.c:1097: pickup.x -= xOverflow;
      002FD7 11rFBr00             10857 	ld	de, #(_pickup + 1)
      002FDA 1A                   10858 	ld	a, (de)
      002FDB F8 00                10859 	ldhl	sp,	#0
      002FDD 22                   10860 	ld	(hl+), a
      002FDE 13                   10861 	inc	de
      002FDF 1A                   10862 	ld	a, (de)
      002FE0 77                   10863 	ld	(hl), a
                                  10864 ;src/main.c:1100: if (pickup.visible && auxTick == 1) {
      002FE1 79                   10865 	ld	a, c
      002FE2 B7                   10866 	or	a, a
      002FE3 CArEEr30             10867 	jp	Z, 00127$
      002FE6 FArD3r00             10868 	ld	a, (#_auxTick)
      002FE9 3D                   10869 	dec	a
      002FEA C2rEEr30             10870 	jp	NZ,00127$
                                  10871 ;src/main.c:1102: if (abs(pickup.x - playerDrawX) < 10) {
      002FED F8 00                10872 	ldhl	sp,	#0
      002FEF 7E                   10873 	ld	a, (hl)
      002FF0 21rAFr00             10874 	ld	hl, #_playerDrawX
      002FF3 4E                   10875 	ld	c, (hl)
      002FF4 91                   10876 	sub	a, c
      002FF5 4F                   10877 	ld	c, a
                                  10878 ;src/main.c:368: if (value >= 0) return value;
      002FF6 CB 79                10879 	bit	7, c
      002FF8 28 03                10880 	jr	Z, 00136$
                                  10881 ;src/main.c:369: else return - value;
      002FFA AF                   10882 	xor	a, a
      002FFB 91                   10883 	sub	a, c
      002FFC 4F                   10884 	ld	c, a
                                  10885 ;src/main.c:1102: if (abs(pickup.x - playerDrawX) < 10) {
      002FFD                      10886 00136$:
      002FFD 79                   10887 	ld	a, c
      002FFE EE 80                10888 	xor	a, #0x80
      003000 D6 8A                10889 	sub	a, #0x8a
      003002 D2r91r30             10890 	jp	NC, 00115$
                                  10891 ;src/main.c:1103: if (abs(pickup.y - playerDrawY) < 10) {
      003005 FArFDr00             10892 	ld	a, (#(_pickup + 3) + 0)
      003008 F8 01                10893 	ldhl	sp,	#1
      00300A 77                   10894 	ld	(hl), a
      00300B 21rB0r00             10895 	ld	hl, #_playerDrawY
      00300E 4E                   10896 	ld	c, (hl)
      00300F F8 01                10897 	ldhl	sp,	#1
      003011 7E                   10898 	ld	a, (hl)
      003012 91                   10899 	sub	a, c
      003013 77                   10900 	ld	(hl), a
                                  10901 ;src/main.c:368: if (value >= 0) return value;
      003014 CB 7E                10902 	bit	7, (hl)
      003016 28 05                10903 	jr	Z, 00140$
                                  10904 ;src/main.c:369: else return - value;
      003018 AF                   10905 	xor	a, a
      003019 F8 01                10906 	ldhl	sp,	#1
      00301B 96                   10907 	sub	a, (hl)
      00301C 77                   10908 	ld	(hl), a
                                  10909 ;src/main.c:1103: if (abs(pickup.y - playerDrawY) < 10) {
      00301D                      10910 00140$:
      00301D F8 01                10911 	ldhl	sp,	#1
      00301F 7E                   10912 	ld	a, (hl)
      003020 EE 80                10913 	xor	a, #0x80
      003022 D6 8A                10914 	sub	a, #0x8a
      003024 30 6B                10915 	jr	NC, 00115$
                                  10916 ;src/main.c:1104: if (pickup.type == 0) { //upgrade
      003026 FAr00r01             10917 	ld	a, (#(_pickup + 6) + 0)
      003029 B7                   10918 	or	a, a
      00302A 20 0D                10919 	jr	NZ, 00104$
                                  10920 ;src/main.c:1105: if (gunLevel < 1) {
      00302C 21rBAr00             10921 	ld	hl, #_gunLevel
      00302F 7E                   10922 	ld	a, (hl)
      003030 D6 01                10923 	sub	a, #0x01
      003032 30 05                10924 	jr	NC, 00104$
                                  10925 ;src/main.c:1106: gunLevel += 1;
      003034 34                   10926 	inc	(hl)
      003035 7E                   10927 	ld	a, (hl)
                                  10928 ;src/main.c:1107: setGunIcon();
      003036 CDrC1r27             10929 	call	_setGunIcon
      003039                      10930 00104$:
                                  10931 ;src/main.c:1110: if (pickup.type == 1) { //missile ammo
      003039 21r00r01             10932 	ld	hl, #(_pickup + 6)
      00303C 6E                   10933 	ld	l, (hl)
                                  10934 ;	spillPairReg hl
                                  10935 ;src/main.c:1111: updateMissileCount(pickup.amount);
      00303D 01r01r01             10936 	ld	bc, #_pickup + 7
                                  10937 ;src/main.c:1110: if (pickup.type == 1) { //missile ammo
      003040 2D                   10938 	dec	l
      003041 20 09                10939 	jr	NZ, 00106$
                                  10940 ;src/main.c:1111: updateMissileCount(pickup.amount);
      003043 0A                   10941 	ld	a, (bc)
      003044 C5                   10942 	push	bc
      003045 F5                   10943 	push	af
      003046 33                   10944 	inc	sp
      003047 CDrE4r0C             10945 	call	_updateMissileCount
      00304A 33                   10946 	inc	sp
      00304B C1                   10947 	pop	bc
      00304C                      10948 00106$:
                                  10949 ;src/main.c:1113: if (pickup.type == 2) {
      00304C FAr00r01             10950 	ld	a, (#(_pickup + 6) + 0)
      00304F D6 02                10951 	sub	a, #0x02
      003051 20 34                10952 	jr	NZ, 00111$
                                  10953 ;src/main.c:1114: if (hull + pickup.amount <= 100) {
      003053 21rF6r00             10954 	ld	hl, #_hull
      003056 5E                   10955 	ld	e, (hl)
      003057 16 00                10956 	ld	d, #0x00
      003059 0A                   10957 	ld	a, (bc)
      00305A 4F                   10958 	ld	c, a
      00305B 69                   10959 	ld	l, c
                                  10960 ;	spillPairReg hl
                                  10961 ;	spillPairReg hl
      00305C 26 00                10962 	ld	h, #0x00
                                  10963 ;	spillPairReg hl
                                  10964 ;	spillPairReg hl
      00305E 19                   10965 	add	hl, de
      00305F 5C                   10966 	ld	e, h
      003060 16 00                10967 	ld	d, #0x00
      003062 3E 64                10968 	ld	a, #0x64
      003064 BD                   10969 	cp	a, l
      003065 3E 00                10970 	ld	a, #0x00
      003067 9C                   10971 	sbc	a, h
      003068 CB 7B                10972 	bit	7, e
      00306A 28 07                10973 	jr	Z, 00247$
      00306C CB 7A                10974 	bit	7, d
      00306E 20 08                10975 	jr	NZ, 00248$
      003070 BF                   10976 	cp	a, a
      003071 18 05                10977 	jr	00248$
      003073                      10978 00247$:
      003073 CB 7A                10979 	bit	7, d
      003075 28 01                10980 	jr	Z, 00248$
      003077 37                   10981 	scf
      003078                      10982 00248$:
      003078 38 08                10983 	jr	C, 00108$
                                  10984 ;src/main.c:1115: hull += pickup.amount;
      00307A 79                   10985 	ld	a, c
      00307B 21rF6r00             10986 	ld	hl, #_hull
      00307E 86                   10987 	add	a, (hl)
      00307F 77                   10988 	ld	(hl), a
      003080 18 05                10989 	jr	00111$
      003082                      10990 00108$:
                                  10991 ;src/main.c:1118: hull = 100;
      003082 21rF6r00             10992 	ld	hl, #_hull
      003085 36 64                10993 	ld	(hl), #0x64
      003087                      10994 00111$:
                                  10995 ;src/main.c:1121: pickup.active = 0;
      003087 21rFFr00             10996 	ld	hl, #(_pickup + 5)
      00308A 36 00                10997 	ld	(hl), #0x00
                                  10998 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00308C 21r0Er00             10999 	ld	hl, #(_shadow_OAM + 14)
      00308F 36 7F                11000 	ld	(hl), #0x7f
                                  11001 ;src/main.c:1122: set_sprite_tile(3, 0x7f);
      003091                      11002 00115$:
                                  11003 ;src/main.c:1097: pickup.x -= xOverflow;
      003091 21rFBr00             11004 	ld	hl, #(_pickup + 1)
      003094 2A                   11005 	ld	a, (hl+)
      003095 4F                   11006 	ld	c, a
      003096 46                   11007 	ld	b, (hl)
                                  11008 ;src/main.c:1125: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      003097 79                   11009 	ld	a, c
      003098 D6 F6                11010 	sub	a, #0xf6
      00309A 78                   11011 	ld	a, b
      00309B 17                   11012 	rla
      00309C 3F                   11013 	ccf
      00309D 1F                   11014 	rra
      00309E DE 7F                11015 	sbc	a, #0x7f
      0030A0 38 40                11016 	jr	C, 00116$
      0030A2 58                   11017 	ld	e, b
      0030A3 16 00                11018 	ld	d, #0x00
      0030A5 3E AA                11019 	ld	a, #0xaa
      0030A7 B9                   11020 	cp	a, c
      0030A8 3E 00                11021 	ld	a, #0x00
      0030AA 98                   11022 	sbc	a, b
      0030AB CB 7B                11023 	bit	7, e
      0030AD 28 07                11024 	jr	Z, 00249$
      0030AF CB 7A                11025 	bit	7, d
      0030B1 20 08                11026 	jr	NZ, 00250$
      0030B3 BF                   11027 	cp	a, a
      0030B4 18 05                11028 	jr	00250$
      0030B6                      11029 00249$:
      0030B6 CB 7A                11030 	bit	7, d
      0030B8 28 01                11031 	jr	Z, 00250$
      0030BA 37                   11032 	scf
      0030BB                      11033 00250$:
      0030BB 38 25                11034 	jr	C, 00116$
                                  11035 ;src/main.c:1098: pickup.y -= yOverflow;
      0030BD 21rFDr00             11036 	ld	hl, #(_pickup + 3)
      0030C0 2A                   11037 	ld	a, (hl+)
      0030C1 4F                   11038 	ld	c, a
      0030C2 46                   11039 	ld	b, (hl)
                                  11040 ;src/main.c:1125: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0030C3 CB 78                11041 	bit	7, b
      0030C5 20 1B                11042 	jr	NZ, 00116$
      0030C7 58                   11043 	ld	e, b
      0030C8 16 00                11044 	ld	d, #0x00
      0030CA 3E 9B                11045 	ld	a, #0x9b
      0030CC B9                   11046 	cp	a, c
      0030CD 3E 00                11047 	ld	a, #0x00
      0030CF 98                   11048 	sbc	a, b
      0030D0 CB 7B                11049 	bit	7, e
      0030D2 28 07                11050 	jr	Z, 00251$
      0030D4 CB 7A                11051 	bit	7, d
      0030D6 20 08                11052 	jr	NZ, 00252$
      0030D8 BF                   11053 	cp	a, a
      0030D9 18 05                11054 	jr	00252$
      0030DB                      11055 00251$:
      0030DB CB 7A                11056 	bit	7, d
      0030DD 28 01                11057 	jr	Z, 00252$
      0030DF 37                   11058 	scf
      0030E0                      11059 00252$:
      0030E0 30 78                11060 	jr	NC, 00144$
      0030E2                      11061 00116$:
                                  11062 ;src/main.c:1126: pickup.visible = 0;
      0030E2 21rFAr00             11063 	ld	hl, #_pickup
      0030E5 36 00                11064 	ld	(hl), #0x00
                                  11065 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0030E7 21r0Er00             11066 	ld	hl, #(_shadow_OAM + 14)
      0030EA 36 7F                11067 	ld	(hl), #0x7f
                                  11068 ;src/main.c:1127: set_sprite_tile(3, 0x7f);
      0030EC 18 6C                11069 	jr	00144$
      0030EE                      11070 00127$:
                                  11071 ;src/main.c:1131: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      0030EE F8 00                11072 	ldhl	sp,	#0
      0030F0 2A                   11073 	ld	a, (hl+)
      0030F1 D6 F6                11074 	sub	a, #0xf6
      0030F3 7E                   11075 	ld	a, (hl)
      0030F4 DE FF                11076 	sbc	a, #0xff
      0030F6 56                   11077 	ld	d, (hl)
      0030F7 3E FF                11078 	ld	a, #0xff
      0030F9 CB 7F                11079 	bit	7,a
      0030FB 28 07                11080 	jr	Z, 00253$
      0030FD CB 7A                11081 	bit	7, d
      0030FF 20 08                11082 	jr	NZ, 00254$
      003101 BF                   11083 	cp	a, a
      003102 18 05                11084 	jr	00254$
      003104                      11085 00253$:
      003104 CB 7A                11086 	bit	7, d
      003106 28 01                11087 	jr	Z, 00254$
      003108 37                   11088 	scf
      003109                      11089 00254$:
      003109 38 4F                11090 	jr	C, 00144$
      00310B C1                   11091 	pop	bc
      00310C C5                   11092 	push	bc
      00310D 58                   11093 	ld	e, b
      00310E 16 00                11094 	ld	d, #0x00
      003110 3E AA                11095 	ld	a, #0xaa
      003112 B9                   11096 	cp	a, c
      003113 3E 00                11097 	ld	a, #0x00
      003115 98                   11098 	sbc	a, b
      003116 CB 7B                11099 	bit	7, e
      003118 28 07                11100 	jr	Z, 00255$
      00311A CB 7A                11101 	bit	7, d
      00311C 20 08                11102 	jr	NZ, 00256$
      00311E BF                   11103 	cp	a, a
      00311F 18 05                11104 	jr	00256$
      003121                      11105 00255$:
      003121 CB 7A                11106 	bit	7, d
      003123 28 01                11107 	jr	Z, 00256$
      003125 37                   11108 	scf
      003126                      11109 00256$:
      003126 38 32                11110 	jr	C, 00144$
                                  11111 ;src/main.c:1098: pickup.y -= yOverflow;
      003128 21rFDr00             11112 	ld	hl, #(_pickup + 3)
      00312B 2A                   11113 	ld	a, (hl+)
      00312C 4F                   11114 	ld	c, a
      00312D 46                   11115 	ld	b, (hl)
                                  11116 ;src/main.c:1125: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
                                  11117 ;src/main.c:1131: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      00312E CB 78                11118 	bit	7, b
      003130 20 28                11119 	jr	NZ, 00144$
      003132 58                   11120 	ld	e, b
      003133 16 00                11121 	ld	d, #0x00
      003135 3E 9B                11122 	ld	a, #0x9b
      003137 B9                   11123 	cp	a, c
      003138 3E 00                11124 	ld	a, #0x00
      00313A 98                   11125 	sbc	a, b
      00313B CB 7B                11126 	bit	7, e
      00313D 28 07                11127 	jr	Z, 00257$
      00313F CB 7A                11128 	bit	7, d
      003141 20 08                11129 	jr	NZ, 00258$
      003143 BF                   11130 	cp	a, a
      003144 18 05                11131 	jr	00258$
      003146                      11132 00257$:
      003146 CB 7A                11133 	bit	7, d
      003148 28 01                11134 	jr	Z, 00258$
      00314A 37                   11135 	scf
      00314B                      11136 00258$:
      00314B 38 0D                11137 	jr	C, 00144$
                                  11138 ;src/main.c:1132: pickup.visible = 1;
      00314D 21rFAr00             11139 	ld	hl, #_pickup
      003150 36 01                11140 	ld	(hl), #0x01
                                  11141 ;src/main.c:1133: set_sprite_tile(3, pickup.tile);
      003152 21r02r01             11142 	ld	hl, #(_pickup + 8)
      003155 4E                   11143 	ld	c, (hl)
                                  11144 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003156 21r0Er00             11145 	ld	hl, #(_shadow_OAM + 14)
      003159 71                   11146 	ld	(hl), c
                                  11147 ;src/main.c:1133: set_sprite_tile(3, pickup.tile);
      00315A                      11148 00144$:
                                  11149 ;src/main.c:1138: }
      00315A 33                   11150 	inc	sp
      00315B 33                   11151 	inc	sp
      00315C C9                   11152 	ret
                                  11153 ;src/main.c:1140: void tickEx() {
                                  11154 ;	---------------------------------
                                  11155 ; Function tickEx
                                  11156 ; ---------------------------------
      00315D                      11157 _tickEx::
      00315D E8 F4                11158 	add	sp, #-12
                                  11159 ;src/main.c:1141: for (uint8_t i = 0; i < exCount; ++i) {
      00315F F8 0B                11160 	ldhl	sp,	#11
      003161 36 00                11161 	ld	(hl), #0x00
      003163                      11162 00118$:
      003163 21rA5r0B             11163 	ld	hl, #_exCount
      003166 4E                   11164 	ld	c, (hl)
      003167 F8 0B                11165 	ldhl	sp,	#11
      003169 7E                   11166 	ld	a, (hl)
      00316A 91                   11167 	sub	a, c
      00316B D2r3Br33             11168 	jp	NC, 00120$
                                  11169 ;src/main.c:1142: if (explosions[i].visible) {
      00316E 4E                   11170 	ld	c, (hl)
      00316F 06 00                11171 	ld	b, #0x00
      003171 69                   11172 	ld	l, c
      003172 60                   11173 	ld	h, b
      003173 29                   11174 	add	hl, hl
      003174 09                   11175 	add	hl, bc
      003175 29                   11176 	add	hl, hl
      003176 01r03r01             11177 	ld	bc,#_explosions
      003179 09                   11178 	add	hl,bc
      00317A E5                   11179 	push	hl
      00317B 7D                   11180 	ld	a, l
      00317C F8 03                11181 	ldhl	sp,	#3
      00317E 77                   11182 	ld	(hl), a
      00317F E1                   11183 	pop	hl
      003180 7C                   11184 	ld	a, h
      003181 F8 02                11185 	ldhl	sp,	#2
      003183 32                   11186 	ld	(hl-), a
      003184 2A                   11187 	ld	a, (hl+)
      003185 5F                   11188 	ld	e, a
      003186 56                   11189 	ld	d, (hl)
      003187 1A                   11190 	ld	a, (de)
      003188 F8 0A                11191 	ldhl	sp,	#10
      00318A 77                   11192 	ld	(hl), a
      00318B 7E                   11193 	ld	a, (hl)
      00318C B7                   11194 	or	a, a
      00318D CAr35r33             11195 	jp	Z, 00119$
                                  11196 ;src/main.c:1144: explosions[i].x -= xOverflow;
      003190 F8 01                11197 	ldhl	sp,	#1
      003192 2A                   11198 	ld	a, (hl+)
      003193 4F                   11199 	ld	c, a
      003194 46                   11200 	ld	b, (hl)
      003195 03                   11201 	inc	bc
      003196 0A                   11202 	ld	a, (bc)
      003197 21rB5r00             11203 	ld	hl, #_xOverflow
      00319A 5E                   11204 	ld	e, (hl)
      00319B 93                   11205 	sub	a, e
      00319C 02                   11206 	ld	(bc), a
                                  11207 ;src/main.c:1145: explosions[i].y -= yOverflow;
      00319D F8 01                11208 	ldhl	sp,#1
      00319F 2A                   11209 	ld	a, (hl+)
      0031A0 5F                   11210 	ld	e, a
      0031A1 56                   11211 	ld	d, (hl)
      0031A2 21 02 00             11212 	ld	hl, #0x0002
      0031A5 19                   11213 	add	hl, de
      0031A6 E5                   11214 	push	hl
      0031A7 7D                   11215 	ld	a, l
      0031A8 F8 09                11216 	ldhl	sp,	#9
      0031AA 77                   11217 	ld	(hl), a
      0031AB E1                   11218 	pop	hl
      0031AC 7C                   11219 	ld	a, h
      0031AD F8 08                11220 	ldhl	sp,	#8
      0031AF 32                   11221 	ld	(hl-), a
      0031B0 2A                   11222 	ld	a, (hl+)
      0031B1 5F                   11223 	ld	e, a
      0031B2 56                   11224 	ld	d, (hl)
      0031B3 1A                   11225 	ld	a, (de)
      0031B4 21rB7r00             11226 	ld	hl, #_yOverflow
      0031B7 5E                   11227 	ld	e, (hl)
      0031B8 93                   11228 	sub	a, e
      0031B9 F8 07                11229 	ldhl	sp,	#7
      0031BB F5                   11230 	push	af
      0031BC 2A                   11231 	ld	a,	(hl+)
      0031BD 66                   11232 	ld	h, (hl)
      0031BE 6F                   11233 	ld	l, a
      0031BF F1                   11234 	pop	af
      0031C0 77                   11235 	ld	(hl), a
                                  11236 ;src/main.c:1146: move_sprite(20 +i+i, explosions[i].x, explosions[i].y+8);
      0031C1 F8 07                11237 	ldhl	sp,#7
      0031C3 2A                   11238 	ld	a, (hl+)
      0031C4 5F                   11239 	ld	e, a
      0031C5 2A                   11240 	ld	a, (hl+)
      0031C6 57                   11241 	ld	d, a
      0031C7 1A                   11242 	ld	a, (de)
      0031C8 C6 08                11243 	add	a, #0x08
      0031CA 5F                   11244 	ld	e, a
      0031CB 0A                   11245 	ld	a, (bc)
      0031CC 22                   11246 	ld	(hl+), a
      0031CD 23                   11247 	inc	hl
      0031CE 3A                   11248 	ld	a, (hl-)
      0031CF 77                   11249 	ld	(hl), a
      0031D0 7E                   11250 	ld	a, (hl)
      0031D1 C6 14                11251 	add	a, #0x14
      0031D3 86                   11252 	add	a, (hl)
      0031D4 F8 03                11253 	ldhl	sp,	#3
      0031D6 77                   11254 	ld	(hl), a
      0031D7 56                   11255 	ld	d, (hl)
                                  11256 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0031D8 26 00                11257 	ld	h, #0x00
                                  11258 ;	spillPairReg hl
                                  11259 ;	spillPairReg hl
      0031DA 6A                   11260 	ld	l, d
      0031DB 29                   11261 	add	hl, hl
      0031DC 29                   11262 	add	hl, hl
      0031DD D5                   11263 	push	de
      0031DE 11r00r00             11264 	ld	de, #_shadow_OAM
      0031E1 19                   11265 	add	hl, de
      0031E2 D1                   11266 	pop	de
                                  11267 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0031E3 7B                   11268 	ld	a, e
      0031E4 22                   11269 	ld	(hl+), a
      0031E5 5D                   11270 	ld	e, l
      0031E6 54                   11271 	ld	d, h
      0031E7 F8 09                11272 	ldhl	sp,	#9
                                  11273 ;src/main.c:1147: move_sprite(21 +i+i, explosions[i].x+8, explosions[i].y+8);
      0031E9 3A                   11274 	ld	a, (hl-)
      0031EA 2B                   11275 	dec	hl
      0031EB 12                   11276 	ld	(de), a
      0031EC 2A                   11277 	ld	a, (hl+)
      0031ED 5F                   11278 	ld	e, a
      0031EE 2A                   11279 	ld	a, (hl+)
      0031EF 23                   11280 	inc	hl
      0031F0 57                   11281 	ld	d, a
      0031F1 1A                   11282 	ld	a, (de)
      0031F2 C6 08                11283 	add	a, #0x08
      0031F4 5F                   11284 	ld	e, a
      0031F5 0A                   11285 	ld	a, (bc)
      0031F6 C6 08                11286 	add	a, #0x08
      0031F8 4F                   11287 	ld	c, a
      0031F9 7E                   11288 	ld	a, (hl)
      0031FA C6 15                11289 	add	a, #0x15
      0031FC 86                   11290 	add	a, (hl)
      0031FD 2B                   11291 	dec	hl
      0031FE 77                   11292 	ld	(hl), a
                                  11293 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0031FF 6E                   11294 	ld	l, (hl)
                                  11295 ;	spillPairReg hl
                                  11296 ;	spillPairReg hl
      003200 26 00                11297 	ld	h, #0x00
                                  11298 ;	spillPairReg hl
                                  11299 ;	spillPairReg hl
      003202 29                   11300 	add	hl, hl
      003203 29                   11301 	add	hl, hl
      003204 D5                   11302 	push	de
      003205 11r00r00             11303 	ld	de, #_shadow_OAM
      003208 19                   11304 	add	hl, de
      003209 D1                   11305 	pop	de
                                  11306 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00320A 7B                   11307 	ld	a, e
      00320B 22                   11308 	ld	(hl+), a
      00320C 71                   11309 	ld	(hl), c
                                  11310 ;src/main.c:1149: explosions[i].frameCounter++;
      00320D F8 01                11311 	ldhl	sp,#1
      00320F 2A                   11312 	ld	a, (hl+)
      003210 5F                   11313 	ld	e, a
      003211 56                   11314 	ld	d, (hl)
      003212 21 04 00             11315 	ld	hl, #0x0004
      003215 19                   11316 	add	hl, de
      003216 4D                   11317 	ld	c, l
      003217 44                   11318 	ld	b, h
      003218 0A                   11319 	ld	a, (bc)
      003219 3C                   11320 	inc	a
      00321A 02                   11321 	ld	(bc), a
                                  11322 ;src/main.c:1150: if (auxTick == 0) {
      00321B FArD3r00             11323 	ld	a, (#_auxTick)
      00321E B7                   11324 	or	a, a
      00321F C2r35r33             11325 	jp	NZ, 00119$
                                  11326 ;src/main.c:1151: if (explosions[i].frameCounter > EXPLFRAMETIME) {
      003222 0A                   11327 	ld	a, (bc)
      003223 5F                   11328 	ld	e, a
      003224 FArA6r0B             11329 	ld	a, (#_EXPLFRAMETIME)
      003227 93                   11330 	sub	a, e
      003228 D2r35r33             11331 	jp	NC, 00119$
                                  11332 ;src/main.c:1152: explosions[i].frameCounter = 0;
      00322B AF                   11333 	xor	a, a
      00322C 02                   11334 	ld	(bc), a
                                  11335 ;src/main.c:1153: explosions[i].frame += 1; 
      00322D F8 01                11336 	ldhl	sp,#1
      00322F 2A                   11337 	ld	a, (hl+)
      003230 5F                   11338 	ld	e, a
      003231 56                   11339 	ld	d, (hl)
      003232 21 03 00             11340 	ld	hl, #0x0003
      003235 19                   11341 	add	hl, de
      003236 E5                   11342 	push	hl
      003237 7D                   11343 	ld	a, l
      003238 F8 06                11344 	ldhl	sp,	#6
      00323A 77                   11345 	ld	(hl), a
      00323B E1                   11346 	pop	hl
      00323C 7C                   11347 	ld	a, h
      00323D F8 05                11348 	ldhl	sp,	#5
      00323F 32                   11349 	ld	(hl-), a
      003240 2A                   11350 	ld	a, (hl+)
      003241 5F                   11351 	ld	e, a
      003242 56                   11352 	ld	d, (hl)
      003243 1A                   11353 	ld	a, (de)
      003244 4F                   11354 	ld	c, a
      003245 0C                   11355 	inc	c
      003246 3A                   11356 	ld	a, (hl-)
      003247 6E                   11357 	ld	l, (hl)
      003248 67                   11358 	ld	h, a
      003249 71                   11359 	ld	(hl), c
                                  11360 ;src/main.c:1154: if (explosions[i].frame > 3) {
      00324A F8 04                11361 	ldhl	sp,#4
      00324C 2A                   11362 	ld	a, (hl+)
      00324D 5F                   11363 	ld	e, a
      00324E 56                   11364 	ld	d, (hl)
      00324F 1A                   11365 	ld	a, (de)
      003250 4F                   11366 	ld	c, a
      003251 3E 03                11367 	ld	a, #0x03
      003253 91                   11368 	sub	a, c
      003254 30 2A                11369 	jr	NC, 00102$
                                  11370 ;src/main.c:1155: explosions[i].visible = 0;
      003256 F8 01                11371 	ldhl	sp,	#1
      003258 2A                   11372 	ld	a,	(hl+)
      003259 66                   11373 	ld	h, (hl)
      00325A 6F                   11374 	ld	l, a
      00325B 36 00                11375 	ld	(hl), #0x00
                                  11376 ;src/main.c:1156: set_sprite_tile(20 + i+i, 0x7f);
      00325D F8 03                11377 	ldhl	sp,	#3
      00325F 4E                   11378 	ld	c, (hl)
                                  11379 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003260 26 00                11380 	ld	h, #0x00
                                  11381 ;	spillPairReg hl
                                  11382 ;	spillPairReg hl
      003262 69                   11383 	ld	l, c
      003263 29                   11384 	add	hl, hl
      003264 29                   11385 	add	hl, hl
      003265 11r00r00             11386 	ld	de, #_shadow_OAM
      003268 19                   11387 	add	hl, de
      003269 23                   11388 	inc	hl
      00326A 23                   11389 	inc	hl
      00326B 36 7F                11390 	ld	(hl), #0x7f
                                  11391 ;src/main.c:1157: set_sprite_tile(21 + i+i, 0x7f);
      00326D F8 09                11392 	ldhl	sp,	#9
      00326F 4E                   11393 	ld	c, (hl)
                                  11394 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003270 26 00                11395 	ld	h, #0x00
                                  11396 ;	spillPairReg hl
                                  11397 ;	spillPairReg hl
      003272 69                   11398 	ld	l, c
      003273 29                   11399 	add	hl, hl
      003274 29                   11400 	add	hl, hl
      003275 11r00r00             11401 	ld	de, #_shadow_OAM
      003278 19                   11402 	add	hl, de
      003279 23                   11403 	inc	hl
      00327A 23                   11404 	inc	hl
      00327B 36 7F                11405 	ld	(hl), #0x7f
                                  11406 ;src/main.c:1157: set_sprite_tile(21 + i+i, 0x7f);
      00327D C3r35r33             11407 	jp	00119$
      003280                      11408 00102$:
                                  11409 ;src/main.c:1160: set_sprite_tile(20 + i+i, explosions[i].tile + (explosions[i].frame *4));
      003280 F8 01                11410 	ldhl	sp,#1
      003282 2A                   11411 	ld	a, (hl+)
      003283 5F                   11412 	ld	e, a
      003284 56                   11413 	ld	d, (hl)
      003285 21 05 00             11414 	ld	hl, #0x0005
      003288 19                   11415 	add	hl, de
      003289 E5                   11416 	push	hl
      00328A 7D                   11417 	ld	a, l
      00328B F8 08                11418 	ldhl	sp,	#8
      00328D 77                   11419 	ld	(hl), a
      00328E E1                   11420 	pop	hl
      00328F 7C                   11421 	ld	a, h
      003290 F8 07                11422 	ldhl	sp,	#7
      003292 32                   11423 	ld	(hl-), a
      003293 2A                   11424 	ld	a, (hl+)
      003294 5F                   11425 	ld	e, a
      003295 56                   11426 	ld	d, (hl)
      003296 1A                   11427 	ld	a, (de)
      003297 F8 0A                11428 	ldhl	sp,	#10
      003299 32                   11429 	ld	(hl-), a
      00329A 2B                   11430 	dec	hl
      00329B 71                   11431 	ld	(hl), c
      00329C CB 26                11432 	sla	(hl)
      00329E CB 26                11433 	sla	(hl)
      0032A0 23                   11434 	inc	hl
      0032A1 23                   11435 	inc	hl
      0032A2 3A                   11436 	ld	a, (hl-)
      0032A3 2B                   11437 	dec	hl
      0032A4 86                   11438 	add	a, (hl)
      0032A5 23                   11439 	inc	hl
      0032A6 23                   11440 	inc	hl
      0032A7 77                   11441 	ld	(hl), a
      0032A8 F8 03                11442 	ldhl	sp,	#3
                                  11443 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0032AA 3A                   11444 	ld	a, (hl-)
      0032AB 22                   11445 	ld	(hl+), a
      0032AC 36 00                11446 	ld	(hl), #0x00
      0032AE 3E 02                11447 	ld	a, #0x02
      0032B0                      11448 00153$:
      0032B0 F8 02                11449 	ldhl	sp,	#2
      0032B2 CB 26                11450 	sla	(hl)
      0032B4 23                   11451 	inc	hl
      0032B5 CB 16                11452 	rl	(hl)
      0032B7 3D                   11453 	dec	a
      0032B8 20 F6                11454 	jr	NZ, 00153$
      0032BA 11r00r00             11455 	ld	de, #_shadow_OAM
      0032BD 3A                   11456 	ld	a, (hl-)
      0032BE 6E                   11457 	ld	l, (hl)
      0032BF 67                   11458 	ld	h, a
      0032C0 19                   11459 	add	hl, de
      0032C1 33                   11460 	inc	sp
      0032C2 33                   11461 	inc	sp
      0032C3 5D                   11462 	ld	e, l
      0032C4 54                   11463 	ld	d, h
      0032C5 D5                   11464 	push	de
      0032C6 21 02 00             11465 	ld	hl, #0x0002
      0032C9 19                   11466 	add	hl, de
      0032CA E5                   11467 	push	hl
      0032CB 7D                   11468 	ld	a, l
      0032CC F8 04                11469 	ldhl	sp,	#4
      0032CE 77                   11470 	ld	(hl), a
      0032CF E1                   11471 	pop	hl
      0032D0 7C                   11472 	ld	a, h
      0032D1 F8 03                11473 	ldhl	sp,	#3
      0032D3 32                   11474 	ld	(hl-), a
      0032D4 2A                   11475 	ld	a, (hl+)
      0032D5 5F                   11476 	ld	e, a
      0032D6 56                   11477 	ld	d, (hl)
      0032D7 F8 0A                11478 	ldhl	sp,	#10
      0032D9 7E                   11479 	ld	a, (hl)
      0032DA 12                   11480 	ld	(de), a
                                  11481 ;src/main.c:1161: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      0032DB F8 06                11482 	ldhl	sp,#6
      0032DD 2A                   11483 	ld	a, (hl+)
      0032DE 5F                   11484 	ld	e, a
      0032DF 56                   11485 	ld	d, (hl)
      0032E0 1A                   11486 	ld	a, (de)
      0032E1 F8 0A                11487 	ldhl	sp,	#10
      0032E3 77                   11488 	ld	(hl), a
      0032E4 F8 04                11489 	ldhl	sp,#4
      0032E6 2A                   11490 	ld	a, (hl+)
      0032E7 5F                   11491 	ld	e, a
      0032E8 56                   11492 	ld	d, (hl)
      0032E9 1A                   11493 	ld	a, (de)
      0032EA F8 08                11494 	ldhl	sp,	#8
      0032EC 77                   11495 	ld	(hl), a
      0032ED CB 26                11496 	sla	(hl)
      0032EF CB 26                11497 	sla	(hl)
      0032F1 23                   11498 	inc	hl
      0032F2 23                   11499 	inc	hl
      0032F3 3A                   11500 	ld	a, (hl-)
      0032F4 2B                   11501 	dec	hl
      0032F5 86                   11502 	add	a, (hl)
      0032F6 23                   11503 	inc	hl
      0032F7 23                   11504 	inc	hl
      0032F8 77                   11505 	ld	(hl), a
      0032F9 34                   11506 	inc	(hl)
      0032FA 34                   11507 	inc	(hl)
      0032FB 2B                   11508 	dec	hl
                                  11509 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0032FC 3A                   11510 	ld	a, (hl-)
      0032FD 22                   11511 	ld	(hl+), a
      0032FE 36 00                11512 	ld	(hl), #0x00
      003300 3E 02                11513 	ld	a, #0x02
      003302                      11514 00154$:
      003302 F8 08                11515 	ldhl	sp,	#8
      003304 CB 26                11516 	sla	(hl)
      003306 23                   11517 	inc	hl
      003307 CB 16                11518 	rl	(hl)
      003309 3D                   11519 	dec	a
      00330A 20 F6                11520 	jr	NZ, 00154$
      00330C 2B                   11521 	dec	hl
      00330D 2A                   11522 	ld	a, (hl+)
      00330E 5F                   11523 	ld	e, a
      00330F 56                   11524 	ld	d, (hl)
      003310 21r00r00             11525 	ld	hl, #_shadow_OAM
      003313 19                   11526 	add	hl, de
      003314 E5                   11527 	push	hl
      003315 7D                   11528 	ld	a, l
      003316 F8 08                11529 	ldhl	sp,	#8
      003318 77                   11530 	ld	(hl), a
      003319 E1                   11531 	pop	hl
      00331A 7C                   11532 	ld	a, h
      00331B F8 07                11533 	ldhl	sp,	#7
      00331D 32                   11534 	ld	(hl-), a
      00331E 2A                   11535 	ld	a, (hl+)
      00331F 5F                   11536 	ld	e, a
      003320 56                   11537 	ld	d, (hl)
      003321 21 02 00             11538 	ld	hl, #0x0002
      003324 19                   11539 	add	hl, de
      003325 E5                   11540 	push	hl
      003326 7D                   11541 	ld	a, l
      003327 F8 0A                11542 	ldhl	sp,	#10
      003329 77                   11543 	ld	(hl), a
      00332A E1                   11544 	pop	hl
      00332B 7C                   11545 	ld	a, h
      00332C F8 09                11546 	ldhl	sp,	#9
      00332E 32                   11547 	ld	(hl-), a
      00332F 2A                   11548 	ld	a, (hl+)
      003330 5F                   11549 	ld	e, a
      003331 2A                   11550 	ld	a, (hl+)
      003332 57                   11551 	ld	d, a
      003333 7E                   11552 	ld	a, (hl)
      003334 12                   11553 	ld	(de), a
                                  11554 ;src/main.c:1161: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      003335                      11555 00119$:
                                  11556 ;src/main.c:1141: for (uint8_t i = 0; i < exCount; ++i) {
      003335 F8 0B                11557 	ldhl	sp,	#11
      003337 34                   11558 	inc	(hl)
      003338 C3r63r31             11559 	jp	00118$
      00333B                      11560 00120$:
                                  11561 ;src/main.c:1167: }
      00333B E8 0C                11562 	add	sp, #12
      00333D C9                   11563 	ret
                                  11564 ;src/main.c:1169: void initEnemyOptions() {
                                  11565 ;	---------------------------------
                                  11566 ; Function initEnemyOptions
                                  11567 ; ---------------------------------
      00333E                      11568 _initEnemyOptions::
                                  11569 ;src/main.c:1170: enemyOptions[0] = blob;
      00333E 11 12 00             11570 	ld	de, #0x0012
      003341 D5                   11571 	push	de
      003342 11r24r00             11572 	ld	de, #_blob
      003345 D5                   11573 	push	de
      003346 11r00r00             11574 	ld	de, #_enemyOptions
      003349 D5                   11575 	push	de
      00334A CDr00r00             11576 	call	___memcpy
      00334D E8 06                11577 	add	sp, #6
                                  11578 ;src/main.c:1171: enemyOptions[1] = bomb;
      00334F 11 12 00             11579 	ld	de, #0x0012
      003352 D5                   11580 	push	de
      003353 11r36r00             11581 	ld	de, #_bomb
      003356 D5                   11582 	push	de
      003357 11r12r00             11583 	ld	de, #(_enemyOptions + 18)
      00335A D5                   11584 	push	de
      00335B CDr00r00             11585 	call	___memcpy
      00335E E8 06                11586 	add	sp, #6
                                  11587 ;src/main.c:1172: enemyOptions[2] = miniship;
      003360 11 12 00             11588 	ld	de, #0x0012
      003363 D5                   11589 	push	de
      003364 11r48r00             11590 	ld	de, #_miniship
      003367 D5                   11591 	push	de
      003368 11r24r00             11592 	ld	de, #(_enemyOptions + 36)
      00336B D5                   11593 	push	de
      00336C CDr00r00             11594 	call	___memcpy
      00336F E8 06                11595 	add	sp, #6
                                  11596 ;src/main.c:1173: enemyOptions[3] = shieldship;
      003371 11 12 00             11597 	ld	de, #0x0012
      003374 D5                   11598 	push	de
      003375 11r6Cr00             11599 	ld	de, #_shieldship
      003378 D5                   11600 	push	de
      003379 11r36r00             11601 	ld	de, #(_enemyOptions + 54)
      00337C D5                   11602 	push	de
      00337D CDr00r00             11603 	call	___memcpy
      003380 E8 06                11604 	add	sp, #6
                                  11605 ;src/main.c:1175: enemyOptions[4] = bigblob;
      003382 11 12 00             11606 	ld	de, #0x0012
      003385 D5                   11607 	push	de
      003386 11r5Ar00             11608 	ld	de, #_bigblob
      003389 D5                   11609 	push	de
      00338A 11r48r00             11610 	ld	de, #(_enemyOptions + 72)
      00338D D5                   11611 	push	de
      00338E CDr00r00             11612 	call	___memcpy
      003391 E8 06                11613 	add	sp, #6
                                  11614 ;src/main.c:1176: }
      003393 C9                   11615 	ret
                                  11616 ;src/main.c:1179: void initProjectiles() {
                                  11617 ;	---------------------------------
                                  11618 ; Function initProjectiles
                                  11619 ; ---------------------------------
      003394                      11620 _initProjectiles::
                                  11621 ;src/main.c:1180: set_sprite_data(0x20, 17, ProjectileTiles); 
      003394 11rE8r05             11622 	ld	de, #_ProjectileTiles
      003397 D5                   11623 	push	de
      003398 21 20 11             11624 	ld	hl, #0x1120
      00339B E5                   11625 	push	hl
      00339C CDr00r00             11626 	call	_set_sprite_data
      00339F E8 04                11627 	add	sp, #4
                                  11628 ;src/main.c:1182: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0033A1 AF                   11629 	xor	a, a
      0033A2                      11630 00103$:
      0033A2 21r9Fr0B             11631 	ld	hl, #_PROJECTILECOUNT
      0033A5 4E                   11632 	ld	c, (hl)
      0033A6 B9                   11633 	cp	a, c
      0033A7 D0                   11634 	ret	NC
      0033A8 3C                   11635 	inc	a
                                  11636 ;src/main.c:1186: }
      0033A9 18 F7                11637 	jr	00103$
                                  11638 ;src/main.c:1188: void initGame() {
                                  11639 ;	---------------------------------
                                  11640 ; Function initGame
                                  11641 ; ---------------------------------
      0033AB                      11642 _initGame::
                                  11643 ;src/main.c:1189: STAT_REG = 0x45;
      0033AB 3E 45                11644 	ld	a, #0x45
      0033AD E0r00                11645 	ldh	(_STAT_REG + 0), a
                                  11646 ;src/main.c:1190: LYC_REG = 0x7e; //line 126
      0033AF 3E 7E                11647 	ld	a, #0x7e
      0033B1 E0r00                11648 	ldh	(_LYC_REG + 0), a
                                  11649 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0033B3 F3                   11650 	di
                                  11651 ;src/main.c:1192: add_LCD(interruptLCD);
      0033B4 11r00r00             11652 	ld	de, #_interruptLCD
      0033B7 D5                   11653 	push	de
      0033B8 CDr00r00             11654 	call	_add_LCD
      0033BB 33                   11655 	inc	sp
      0033BC 33                   11656 	inc	sp
                                  11657 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      0033BD FB                   11658 	ei
                                  11659 ;src/main.c:1194: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      0033BE 3E 03                11660 	ld	a, #0x03
      0033C0 F5                   11661 	push	af
      0033C1 33                   11662 	inc	sp
      0033C2 CDr00r00             11663 	call	_set_interrupts
      0033C5 33                   11664 	inc	sp
                                  11665 ;src/main.c:1196: xDir = 0;
      0033C6 21rA7r00             11666 	ld	hl, #_xDir
      0033C9 36 00                11667 	ld	(hl), #0x00
                                  11668 ;src/main.c:1197: yDir = -1;
      0033CB 21rA8r00             11669 	ld	hl, #_yDir
      0033CE 36 FF                11670 	ld	(hl), #0xff
                                  11671 ;src/main.c:1198: xSpeed = 0;
      0033D0 21rA9r00             11672 	ld	hl, #_xSpeed
      0033D3 36 00                11673 	ld	(hl), #0x00
                                  11674 ;src/main.c:1199: ySpeed = 0;
      0033D5 21rAAr00             11675 	ld	hl, #_ySpeed
      0033D8 36 00                11676 	ld	(hl), #0x00
                                  11677 ;src/main.c:1202: playerX = 80<<5;
      0033DA 21rABr00             11678 	ld	hl, #_playerX
      0033DD 36 00                11679 	ld	(hl), #0x00
      0033DF 23                   11680 	inc	hl
      0033E0 36 0A                11681 	ld	(hl), #0x0a
                                  11682 ;src/main.c:1203: playerY = 80<<5;
      0033E2 21rADr00             11683 	ld	hl, #_playerY
      0033E5 36 00                11684 	ld	(hl), #0x00
      0033E7 23                   11685 	inc	hl
      0033E8 36 0A                11686 	ld	(hl), #0x0a
                                  11687 ;src/main.c:1205: playerDrawX = 80;
      0033EA 21rAFr00             11688 	ld	hl, #_playerDrawX
      0033ED 36 50                11689 	ld	(hl), #0x50
                                  11690 ;src/main.c:1206: playerDrawY = 80;
      0033EF 21rB0r00             11691 	ld	hl, #_playerDrawY
      0033F2 36 50                11692 	ld	(hl), #0x50
                                  11693 ;src/main.c:1209: bgX = 0;
      0033F4 AF                   11694 	xor	a, a
      0033F5 21rB1r00             11695 	ld	hl, #_bgX
      0033F8 22                   11696 	ld	(hl+), a
      0033F9 77                   11697 	ld	(hl), a
                                  11698 ;src/main.c:1210: bgY = 0;
      0033FA AF                   11699 	xor	a, a
      0033FB 21rB3r00             11700 	ld	hl, #_bgY
      0033FE 22                   11701 	ld	(hl+), a
      0033FF 77                   11702 	ld	(hl), a
                                  11703 ;src/main.c:1212: hull = maxHull;
      003400 FArA1r0B             11704 	ld	a, (#_maxHull)
      003403 EArF6r00             11705 	ld	(#_hull),a
                                  11706 ;src/main.c:1213: shield = maxShield;
      003406 FArA2r0B             11707 	ld	a, (#_maxShield)
      003409 EArF7r00             11708 	ld	(#_shield),a
                                  11709 ;src/main.c:1215: DISPLAY_ON;
      00340C F0r00                11710 	ldh	a, (_LCDC_REG + 0)
      00340E F6 80                11711 	or	a, #0x80
      003410 E0r00                11712 	ldh	(_LCDC_REG + 0), a
                                  11713 ;src/main.c:1216: SPRITES_8x16;
      003412 F0r00                11714 	ldh	a, (_LCDC_REG + 0)
      003414 F6 04                11715 	or	a, #0x04
      003416 E0r00                11716 	ldh	(_LCDC_REG + 0), a
                                  11717 ;src/main.c:1217: set_sprite_data(0, 12, Player1);
      003418 11r83r07             11718 	ld	de, #_Player1
      00341B D5                   11719 	push	de
      00341C 21 00 0C             11720 	ld	hl, #0xc00
      00341F E5                   11721 	push	hl
      003420 CDr00r00             11722 	call	_set_sprite_data
      003423 E8 04                11723 	add	sp, #4
                                  11724 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003425 21r02r00             11725 	ld	hl, #(_shadow_OAM + 2)
      003428 36 00                11726 	ld	(hl), #0x00
      00342A 21r06r00             11727 	ld	hl, #(_shadow_OAM + 6)
      00342D 36 02                11728 	ld	(hl), #0x02
                                  11729 ;src/main.c:1223: SHOW_SPRITES;
      00342F F0r00                11730 	ldh	a, (_LCDC_REG + 0)
      003431 F6 02                11731 	or	a, #0x02
      003433 E0r00                11732 	ldh	(_LCDC_REG + 0), a
                                  11733 ;src/main.c:1227: font_init();
      003435 CDr00r00             11734 	call	_font_init
                                  11735 ;src/main.c:1229: min_font = font_load(font_min); // 36 tiles of characters
      003438 11r00r00             11736 	ld	de, #_font_min
      00343B D5                   11737 	push	de
      00343C CDr00r00             11738 	call	_font_load
      00343F E1                   11739 	pop	hl
      003440 21rF8r00             11740 	ld	hl, #_min_font
      003443 7B                   11741 	ld	a, e
      003444 22                   11742 	ld	(hl+), a
                                  11743 ;src/main.c:1230: font_set(min_font);
      003445 7A                   11744 	ld	a, d
      003446 32                   11745 	ld	(hl-), a
      003447 2A                   11746 	ld	a, (hl+)
      003448 5F                   11747 	ld	e, a
      003449 56                   11748 	ld	d, (hl)
      00344A D5                   11749 	push	de
      00344B CDr00r00             11750 	call	_font_set
      00344E E1                   11751 	pop	hl
                                  11752 ;src/main.c:1231: set_win_tiles(1,0,4,1,hullabel);
      00344F 11r00r00             11753 	ld	de, #_hullabel
      003452 D5                   11754 	push	de
      003453 21 04 01             11755 	ld	hl, #0x104
      003456 E5                   11756 	push	hl
      003457 21 01 00             11757 	ld	hl, #0x01
      00345A E5                   11758 	push	hl
      00345B CDr00r00             11759 	call	_set_win_tiles
      00345E E8 06                11760 	add	sp, #6
                                  11761 ;src/main.c:1232: set_win_tiles(1,1,4,1,shieldlabel);
      003460 11r04r00             11762 	ld	de, #_shieldlabel
      003463 D5                   11763 	push	de
      003464 21 04 01             11764 	ld	hl, #0x104
      003467 E5                   11765 	push	hl
      003468 21 01 01             11766 	ld	hl, #0x101
      00346B E5                   11767 	push	hl
      00346C CDr00r00             11768 	call	_set_win_tiles
      00346F E8 06                11769 	add	sp, #6
                                  11770 ;src/main.c:1237: set_bkg_data(0x50,1,healthblock);
      003471 11r07r05             11771 	ld	de, #_healthblock
      003474 D5                   11772 	push	de
      003475 21 50 01             11773 	ld	hl, #0x150
      003478 E5                   11774 	push	hl
      003479 CDr00r00             11775 	call	_set_bkg_data
      00347C E8 04                11776 	add	sp, #4
                                  11777 ;src/main.c:1239: setHealthBar(0, hull);
      00347E FArF6r00             11778 	ld	a, (#_hull)
      003481 67                   11779 	ld	h, a
      003482 2E 00                11780 	ld	l, #0x00
      003484 E5                   11781 	push	hl
      003485 CDrA9r0B             11782 	call	_setHealthBar
      003488 E1                   11783 	pop	hl
                                  11784 ;src/main.c:1240: setHealthBar(1, shield);
      003489 FArF7r00             11785 	ld	a, (#_shield)
      00348C 67                   11786 	ld	h, a
      00348D 2E 01                11787 	ld	l, #0x01
      00348F E5                   11788 	push	hl
      003490 CDrA9r0B             11789 	call	_setHealthBar
      003493 E1                   11790 	pop	hl
                                  11791 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003494 3E 07                11792 	ld	a, #0x07
      003496 E0r00                11793 	ldh	(_WX_REG + 0), a
      003498 3E 7E                11794 	ld	a, #0x7e
      00349A E0r00                11795 	ldh	(_WY_REG + 0), a
                                  11796 ;src/main.c:1247: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      00349C 11r87r04             11797 	ld	de, #_backgroundtiles
      00349F D5                   11798 	push	de
      0034A0 21 25 08             11799 	ld	hl, #0x825
      0034A3 E5                   11800 	push	hl
      0034A4 CDr00r00             11801 	call	_set_bkg_data
      0034A7 E8 04                11802 	add	sp, #4
                                  11803 ;src/main.c:1248: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      0034A9 11r87r00             11804 	ld	de, #_background1
      0034AC D5                   11805 	push	de
      0034AD 21 20 20             11806 	ld	hl, #0x2020
      0034B0 E5                   11807 	push	hl
      0034B1 AF                   11808 	xor	a, a
      0034B2 0F                   11809 	rrca
      0034B3 F5                   11810 	push	af
      0034B4 CDr00r00             11811 	call	_set_bkg_tiles
      0034B7 E8 06                11812 	add	sp, #6
                                  11813 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0034B9 AF                   11814 	xor	a, a
      0034BA E0r00                11815 	ldh	(_SCX_REG + 0), a
      0034BC AF                   11816 	xor	a, a
      0034BD E0r00                11817 	ldh	(_SCY_REG + 0), a
                                  11818 ;src/main.c:1254: set_bkg_data(0x51, 18, ProjectileTiles);
      0034BF 11rE8r05             11819 	ld	de, #_ProjectileTiles
      0034C2 D5                   11820 	push	de
      0034C3 21 51 12             11821 	ld	hl, #0x1251
      0034C6 E5                   11822 	push	hl
      0034C7 CDr00r00             11823 	call	_set_bkg_data
      0034CA E8 04                11824 	add	sp, #4
                                  11825 ;src/main.c:1256: set_win_tiles(10, 0,4,1,weaponlabel);
      0034CC 11r08r00             11826 	ld	de, #_weaponlabel
      0034CF D5                   11827 	push	de
      0034D0 21 04 01             11828 	ld	hl, #0x104
      0034D3 E5                   11829 	push	hl
      0034D4 21 0A 00             11830 	ld	hl, #0x0a
      0034D7 E5                   11831 	push	hl
      0034D8 CDr00r00             11832 	call	_set_win_tiles
      0034DB E8 06                11833 	add	sp, #6
                                  11834 ;src/main.c:1257: set_win_tiles(10, 1,4,1,scorelabel);
      0034DD 11r0Cr00             11835 	ld	de, #_scorelabel
      0034E0 D5                   11836 	push	de
      0034E1 21 04 01             11837 	ld	hl, #0x104
      0034E4 E5                   11838 	push	hl
      0034E5 21 0A 01             11839 	ld	hl, #0x10a
      0034E8 E5                   11840 	push	hl
      0034E9 CDr00r00             11841 	call	_set_win_tiles
      0034EC E8 06                11842 	add	sp, #6
                                  11843 ;src/main.c:1259: setGunIcon();
      0034EE CDrC1r27             11844 	call	_setGunIcon
                                  11845 ;src/main.c:1260: SHOW_BKG;
      0034F1 F0r00                11846 	ldh	a, (_LCDC_REG + 0)
      0034F3 F6 01                11847 	or	a, #0x01
      0034F5 E0r00                11848 	ldh	(_LCDC_REG + 0), a
                                  11849 ;src/main.c:1261: SHOW_WIN;;
      0034F7 F0r00                11850 	ldh	a, (_LCDC_REG + 0)
      0034F9 F6 20                11851 	or	a, #0x20
      0034FB E0r00                11852 	ldh	(_LCDC_REG + 0), a
                                  11853 ;src/main.c:1263: SCORE = MAKE_BCD(00000);
      0034FD AF                   11854 	xor	a, a
      0034FE 21rC7r00             11855 	ld	hl, #_SCORE
      003501 22                   11856 	ld	(hl+), a
      003502 22                   11857 	ld	(hl+), a
      003503 22                   11858 	ld	(hl+), a
      003504 77                   11859 	ld	(hl), a
                                  11860 ;src/main.c:1264: updateScore();
      003505 CDrBAr0C             11861 	call	_updateScore
                                  11862 ;src/main.c:1265: missiles = 0;
      003508 21rBCr00             11863 	ld	hl, #_missiles
      00350B 36 00                11864 	ld	(hl), #0x00
                                  11865 ;src/main.c:1266: MISSILES = MAKE_BCD(0);
      00350D AF                   11866 	xor	a, a
      00350E 21rBDr00             11867 	ld	hl, #_MISSILES
      003511 22                   11868 	ld	(hl+), a
      003512 22                   11869 	ld	(hl+), a
      003513 22                   11870 	ld	(hl+), a
      003514 77                   11871 	ld	(hl), a
                                  11872 ;src/main.c:1267: updateMissileCount(0);
      003515 AF                   11873 	xor	a, a
      003516 F5                   11874 	push	af
      003517 33                   11875 	inc	sp
      003518 CDrE4r0C             11876 	call	_updateMissileCount
      00351B 33                   11877 	inc	sp
                                  11878 ;src/main.c:1268: set_win_tiles(17, 0,1,1,gunMap+2);
      00351C 11rC4r00             11879 	ld	de, #(_gunMap + 2)
      00351F D5                   11880 	push	de
      003520 21 01 01             11881 	ld	hl, #0x101
      003523 E5                   11882 	push	hl
      003524 21 11 00             11883 	ld	hl, #0x11
      003527 E5                   11884 	push	hl
      003528 CDr00r00             11885 	call	_set_win_tiles
      00352B E8 06                11886 	add	sp, #6
                                  11887 ;src/main.c:1272: pickup = upgrade;//upgrade;
      00352D 11 09 00             11888 	ld	de, #0x0009
      003530 D5                   11889 	push	de
      003531 11r08r07             11890 	ld	de, #_upgrade
      003534 D5                   11891 	push	de
      003535 11rFAr00             11892 	ld	de, #_pickup
      003538 D5                   11893 	push	de
      003539 CDr00r00             11894 	call	___memcpy
      00353C E8 06                11895 	add	sp, #6
                                  11896 ;src/main.c:1274: set_sprite_data(0x70, 6, Pickups);
      00353E 11r23r07             11897 	ld	de, #_Pickups
      003541 D5                   11898 	push	de
      003542 21 70 06             11899 	ld	hl, #0x670
      003545 E5                   11900 	push	hl
      003546 CDr00r00             11901 	call	_set_sprite_data
      003549 E8 04                11902 	add	sp, #4
                                  11903 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00354B 21r0Er00             11904 	ld	hl, #(_shadow_OAM + 14)
      00354E 36 7F                11905 	ld	(hl), #0x7f
                                  11906 ;src/main.c:1276: move_sprite(3, pickup.x + 4, pickup.y + 12);
      003550 FArFDr00             11907 	ld	a, (#(_pickup + 3) + 0)
      003553 C6 0C                11908 	add	a, #0x0c
      003555 47                   11909 	ld	b, a
      003556 FArFBr00             11910 	ld	a, (#(_pickup + 1) + 0)
      003559 C6 04                11911 	add	a, #0x04
      00355B 4F                   11912 	ld	c, a
                                  11913 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00355C 21r0Cr00             11914 	ld	hl, #(_shadow_OAM + 12)
                                  11915 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00355F 78                   11916 	ld	a, b
      003560 22                   11917 	ld	(hl+), a
      003561 71                   11918 	ld	(hl), c
                                  11919 ;src/main.c:1278: for (uint8_t i = 0; i<exCount; ++i) {
      003562 0E 00                11920 	ld	c, #0x00
      003564                      11921 00111$:
      003564 21rA5r0B             11922 	ld	hl, #_exCount
      003567 46                   11923 	ld	b, (hl)
      003568 79                   11924 	ld	a, c
      003569 90                   11925 	sub	a, b
      00356A 30 1E                11926 	jr	NC, 00101$
                                  11927 ;src/main.c:1279: explosions[i] = ex;
      00356C 06 00                11928 	ld	b, #0x00
      00356E 69                   11929 	ld	l, c
      00356F 60                   11930 	ld	h, b
      003570 29                   11931 	add	hl, hl
      003571 09                   11932 	add	hl, bc
      003572 29                   11933 	add	hl, hl
      003573 11r03r01             11934 	ld	de, #_explosions
      003576 19                   11935 	add	hl, de
      003577 C5                   11936 	push	bc
      003578 11 06 00             11937 	ld	de, #0x0006
      00357B D5                   11938 	push	de
      00357C 11r83r08             11939 	ld	de, #_ex
      00357F D5                   11940 	push	de
      003580 E5                   11941 	push	hl
      003581 CDr00r00             11942 	call	___memcpy
      003584 E8 06                11943 	add	sp, #6
      003586 C1                   11944 	pop	bc
                                  11945 ;src/main.c:1278: for (uint8_t i = 0; i<exCount; ++i) {
      003587 0C                   11946 	inc	c
      003588 18 DA                11947 	jr	00111$
      00358A                      11948 00101$:
                                  11949 ;src/main.c:1281: set_sprite_data(exTiles[0], 16, Ex1);
      00358A FArD0r00             11950 	ld	a, (#_exTiles + 0)
      00358D 11r89r08             11951 	ld	de, #_Ex1
      003590 D5                   11952 	push	de
      003591 26 10                11953 	ld	h, #0x10
                                  11954 ;	spillPairReg hl
                                  11955 ;	spillPairReg hl
      003593 E5                   11956 	push	hl
      003594 33                   11957 	inc	sp
      003595 F5                   11958 	push	af
      003596 33                   11959 	inc	sp
      003597 CDr00r00             11960 	call	_set_sprite_data
      00359A E8 04                11961 	add	sp, #4
                                  11962 ;src/main.c:1282: set_sprite_data(exTiles[1], 16, Ex2);
      00359C FArD1r00             11963 	ld	a, (#(_exTiles + 1) + 0)
      00359F 11r89r09             11964 	ld	de, #_Ex2
      0035A2 D5                   11965 	push	de
      0035A3 26 10                11966 	ld	h, #0x10
                                  11967 ;	spillPairReg hl
                                  11968 ;	spillPairReg hl
      0035A5 E5                   11969 	push	hl
      0035A6 33                   11970 	inc	sp
      0035A7 F5                   11971 	push	af
      0035A8 33                   11972 	inc	sp
      0035A9 CDr00r00             11973 	call	_set_sprite_data
      0035AC E8 04                11974 	add	sp, #4
                                  11975 ;src/main.c:1283: set_sprite_data(exTiles[2], 16, Ex3);
      0035AE FArD2r00             11976 	ld	a, (#(_exTiles + 2) + 0)
      0035B1 11r89r0A             11977 	ld	de, #_Ex3
      0035B4 D5                   11978 	push	de
      0035B5 26 10                11979 	ld	h, #0x10
                                  11980 ;	spillPairReg hl
                                  11981 ;	spillPairReg hl
      0035B7 E5                   11982 	push	hl
      0035B8 33                   11983 	inc	sp
      0035B9 F5                   11984 	push	af
      0035BA 33                   11985 	inc	sp
      0035BB CDr00r00             11986 	call	_set_sprite_data
      0035BE E8 04                11987 	add	sp, #4
                                  11988 ;src/main.c:1284: }
      0035C0 C9                   11989 	ret
                                  11990 ;src/main.c:1289: void showScoreScreen() {
                                  11991 ;	---------------------------------
                                  11992 ; Function showScoreScreen
                                  11993 ; ---------------------------------
      0035C1                      11994 _showScoreScreen::
                                  11995 ;src/main.c:1290: HIDE_WIN;
      0035C1 F0r00                11996 	ldh	a, (_LCDC_REG + 0)
      0035C3 E6 DF                11997 	and	a, #0xdf
      0035C5 E0r00                11998 	ldh	(_LCDC_REG + 0), a
                                  11999 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      0035C7 AF                   12000 	xor	a, a
      0035C8 E0r00                12001 	ldh	(_WX_REG + 0), a
      0035CA AF                   12002 	xor	a, a
      0035CB E0r00                12003 	ldh	(_WY_REG + 0), a
                                  12004 ;src/main.c:1294: for (uint8_t i=0; i < 18; ++i) {
      0035CD 06 00                12005 	ld	b, #0x00
      0035CF                      12006 00104$:
      0035CF 78                   12007 	ld	a, b
      0035D0 D6 12                12008 	sub	a, #0x12
      0035D2 30 16                12009 	jr	NC, 00101$
                                  12010 ;src/main.c:1295: set_win_tiles(1,i,20,1,emptyRow);
      0035D4 11r10r00             12011 	ld	de, #_emptyRow
      0035D7 D5                   12012 	push	de
      0035D8 21 14 01             12013 	ld	hl, #0x114
      0035DB E5                   12014 	push	hl
      0035DC C5                   12015 	push	bc
      0035DD 33                   12016 	inc	sp
      0035DE 3E 01                12017 	ld	a, #0x01
      0035E0 F5                   12018 	push	af
      0035E1 33                   12019 	inc	sp
      0035E2 CDr00r00             12020 	call	_set_win_tiles
      0035E5 E8 06                12021 	add	sp, #6
                                  12022 ;src/main.c:1294: for (uint8_t i=0; i < 18; ++i) {
      0035E7 04                   12023 	inc	b
      0035E8 18 E5                12024 	jr	00104$
      0035EA                      12025 00101$:
                                  12026 ;src/main.c:1299: SHOW_WIN;
      0035EA F0r00                12027 	ldh	a, (_LCDC_REG + 0)
      0035EC F6 20                12028 	or	a, #0x20
      0035EE E0r00                12029 	ldh	(_LCDC_REG + 0), a
                                  12030 ;src/main.c:1301: }
      0035F0 C9                   12031 	ret
                                  12032 ;src/main.c:1303: void main(){
                                  12033 ;	---------------------------------
                                  12034 ; Function main
                                  12035 ; ---------------------------------
      0035F1                      12036 _main::
      0035F1 E8 FC                12037 	add	sp, #-4
                                  12038 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0035F3 F3                   12039 	di
                                  12040 ;src/main.c:1307: initEnemyOptions();
      0035F4 CDr3Er33             12041 	call	_initEnemyOptions
                                  12042 ;src/main.c:1313: NR52_REG = 0x80; // sound on 
      0035F7 3E 80                12043 	ld	a, #0x80
      0035F9 E0r00                12044 	ldh	(_NR52_REG + 0), a
                                  12045 ;src/main.c:1314: NR50_REG = 0x77; // volume
      0035FB 3E 77                12046 	ld	a, #0x77
      0035FD E0r00                12047 	ldh	(_NR50_REG + 0), a
                                  12048 ;src/main.c:1315: NR51_REG = 0xFF; // all channels
      0035FF 3E FF                12049 	ld	a, #0xff
      003601 E0r00                12050 	ldh	(_NR51_REG + 0), a
                                  12051 ;src/main.c:1319: waitpad(J_A);
      003603 3E 10                12052 	ld	a, #0x10
      003605 F5                   12053 	push	af
      003606 33                   12054 	inc	sp
      003607 CDr00r00             12055 	call	_waitpad
      00360A 33                   12056 	inc	sp
                                  12057 ;src/main.c:1320: uint16_t seed = LY_REG;
      00360B F0r00                12058 	ldh	a, (_LY_REG + 0)
      00360D 4F                   12059 	ld	c, a
      00360E 06 00                12060 	ld	b, #0x00
                                  12061 ;src/main.c:1321: seed |= (uint16_t)DIV_REG << 8;
      003610 F0r00                12062 	ldh	a, (_DIV_REG + 0)
      003612 5F                   12063 	ld	e, a
      003613 AF                   12064 	xor	a, a
      003614 B1                   12065 	or	a, c
      003615 4F                   12066 	ld	c, a
      003616 7B                   12067 	ld	a, e
      003617 B0                   12068 	or	a, b
      003618 47                   12069 	ld	b, a
                                  12070 ;src/main.c:1322: initrand(seed);
      003619 C5                   12071 	push	bc
      00361A CDr00r00             12072 	call	_initrand
      00361D E1                   12073 	pop	hl
                                  12074 ;src/main.c:1327: initGame();
      00361E CDrABr33             12075 	call	_initGame
                                  12076 ;src/main.c:1328: initEnemies(1);
      003621 3E 01                12077 	ld	a, #0x01
      003623 F5                   12078 	push	af
      003624 33                   12079 	inc	sp
      003625 CDrF9r0F             12080 	call	_initEnemies
      003628 33                   12081 	inc	sp
                                  12082 ;src/main.c:1329: initProjectiles();
      003629 CDr94r33             12083 	call	_initProjectiles
                                  12084 ;src/main.c:1331: while(hull > 0) {
      00362C                      12085 00121$:
      00362C 21rF6r00             12086 	ld	hl, #_hull
      00362F 7E                   12087 	ld	a, (hl)
      003630 B7                   12088 	or	a, a
      003631 CAr02r37             12089 	jp	Z, 00177$
                                  12090 ;src/main.c:1332: hull = 0; //TODO: REMOVE
      003634 36 00                12091 	ld	(hl), #0x00
                                  12092 ;src/main.c:1333: SHOW_SPRITES;
      003636 F0r00                12093 	ldh	a, (_LCDC_REG + 0)
      003638 F6 02                12094 	or	a, #0x02
      00363A E0r00                12095 	ldh	(_LCDC_REG + 0), a
                                  12096 ;src/main.c:1335: joydata = joypad(); // query for button states
      00363C CDr00r00             12097 	call	_joypad
      00363F 21rF5r00             12098 	ld	hl, #_joydata
      003642 73                   12099 	ld	(hl), e
                                  12100 ;src/main.c:1337: updateDirection(); // set player direction
      003643 CDr71r0D             12101 	call	_updateDirection
                                  12102 ;src/main.c:1340: move(); 
      003646 CDr69r1B             12103 	call	_move
                                  12104 ;src/main.c:1342: moveProjectiles();
      003649 CDrA2r2D             12105 	call	_moveProjectiles
                                  12106 ;src/main.c:1343: tickPickups();
      00364C CDr85r2F             12107 	call	_tickPickups
                                  12108 ;src/main.c:1344: tickEx();
      00364F CDr5Dr31             12109 	call	_tickEx
                                  12110 ;src/main.c:1348: updateEnemyPositions();
      003652 CDr48r12             12111 	call	_updateEnemyPositions
                                  12112 ;src/main.c:1351: checkCollision(); 
      003655 CDrFEr22             12113 	call	_checkCollision
                                  12114 ;src/main.c:971: if (shield < maxShield) {
      003658 21rA2r0B             12115 	ld	hl, #_maxShield
      00365B 4E                   12116 	ld	c, (hl)
      00365C 59                   12117 	ld	e, c
      00365D 21rF7r00             12118 	ld	hl, #_shield
      003660 56                   12119 	ld	d, (hl)
      003661 7E                   12120 	ld	a, (hl)
      003662 91                   12121 	sub	a, c
      003663 CB 7B                12122 	bit	7, e
      003665 28 07                12123 	jr	Z, 00317$
      003667 CB 7A                12124 	bit	7, d
      003669 20 08                12125 	jr	NZ, 00318$
      00366B BF                   12126 	cp	a, a
      00366C 18 05                12127 	jr	00318$
      00366E                      12128 00317$:
      00366E CB 7A                12129 	bit	7, d
      003670 28 01                12130 	jr	Z, 00318$
      003672 37                   12131 	scf
      003673                      12132 00318$:
      003673 30 04                12133 	jr	NC, 00145$
                                  12134 ;src/main.c:972: shield += 1;
      003675 21rF7r00             12135 	ld	hl, #_shield
      003678 34                   12136 	inc	(hl)
      003679                      12137 00145$:
                                  12138 ;src/main.c:974: setHealthBar(0, hull);
      003679 FArF6r00             12139 	ld	a, (#_hull)
      00367C 67                   12140 	ld	h, a
      00367D 2E 00                12141 	ld	l, #0x00
      00367F E5                   12142 	push	hl
      003680 CDrA9r0B             12143 	call	_setHealthBar
      003683 E1                   12144 	pop	hl
                                  12145 ;src/main.c:975: setHealthBar(1, shield);
      003684 FArF7r00             12146 	ld	a, (#_shield)
      003687 67                   12147 	ld	h, a
      003688 2E 01                12148 	ld	l, #0x01
      00368A E5                   12149 	push	hl
      00368B CDrA9r0B             12150 	call	_setHealthBar
      00368E E1                   12151 	pop	hl
                                  12152 ;src/main.c:1356: if (joydata & J_B && fireCooldown == 0) {
      00368F FArF5r00             12153 	ld	a, (#_joydata)
      003692 CB 6F                12154 	bit	5, a
      003694 28 09                12155 	jr	Z, 00102$
      003696 FArA6r00             12156 	ld	a, (#_fireCooldown)
      003699 B7                   12157 	or	a, a
      00369A 20 03                12158 	jr	NZ, 00102$
                                  12159 ;src/main.c:1357: fire();
      00369C CDrF4r27             12160 	call	_fire
      00369F                      12161 00102$:
                                  12162 ;src/main.c:1359: if (fireCooldown > 0) {
      00369F 21rA6r00             12163 	ld	hl, #_fireCooldown
      0036A2 7E                   12164 	ld	a, (hl)
      0036A3 B7                   12165 	or	a, a
      0036A4 28 01                12166 	jr	Z, 00105$
                                  12167 ;src/main.c:1360: --fireCooldown;
      0036A6 35                   12168 	dec	(hl)
      0036A7                      12169 00105$:
                                  12170 ;src/main.c:1363: if (joydata & J_SELECT && switchDelay == 0) {
      0036A7 FArF5r00             12171 	ld	a, (#_joydata)
      0036AA CB 77                12172 	bit	6, a
      0036AC 28 24                12173 	jr	Z, 00112$
      0036AE FArC1r00             12174 	ld	a, (#_switchDelay)
      0036B1 B7                   12175 	or	a, a
      0036B2 20 1E                12176 	jr	NZ, 00112$
                                  12177 ;src/main.c:1364: if (currentGun == 0) {
      0036B4 21rBBr00             12178 	ld	hl, #_currentGun
      0036B7 7E                   12179 	ld	a, (hl)
      0036B8 B7                   12180 	or	a, a
      0036B9 20 04                12181 	jr	NZ, 00109$
                                  12182 ;src/main.c:1365: currentGun = 1;
      0036BB 36 01                12183 	ld	(hl), #0x01
      0036BD 18 0B                12184 	jr	00110$
      0036BF                      12185 00109$:
                                  12186 ;src/main.c:1367: else if (currentGun == 1) {
      0036BF FArBBr00             12187 	ld	a, (#_currentGun)
      0036C2 3D                   12188 	dec	a
      0036C3 20 05                12189 	jr	NZ, 00110$
                                  12190 ;src/main.c:1368: currentGun = 0;
      0036C5 21rBBr00             12191 	ld	hl, #_currentGun
      0036C8 36 00                12192 	ld	(hl), #0x00
      0036CA                      12193 00110$:
                                  12194 ;src/main.c:1370: setGunIcon();
      0036CA CDrC1r27             12195 	call	_setGunIcon
                                  12196 ;src/main.c:1371: switchDelay = 30;
      0036CD 21rC1r00             12197 	ld	hl, #_switchDelay
      0036D0 36 1E                12198 	ld	(hl), #0x1e
      0036D2                      12199 00112$:
                                  12200 ;src/main.c:1373: if (switchDelay != 0) {
      0036D2 21rC1r00             12201 	ld	hl, #_switchDelay
      0036D5 7E                   12202 	ld	a, (hl)
      0036D6 B7                   12203 	or	a, a
      0036D7 28 01                12204 	jr	Z, 00115$
                                  12205 ;src/main.c:1374: switchDelay--;
      0036D9 35                   12206 	dec	(hl)
      0036DA                      12207 00115$:
                                  12208 ;src/main.c:1377: if (auxTick == 0) {
      0036DA FArD3r00             12209 	ld	a, (#_auxTick)
      0036DD B7                   12210 	or	a, a
      0036DE 20 08                12211 	jr	NZ, 00117$
                                  12212 ;src/main.c:1378: auxTick = AUXTICKFREQUENCY;
      0036E0 FArA8r0B             12213 	ld	a, (#_AUXTICKFREQUENCY)
      0036E3 EArD3r00             12214 	ld	(#_auxTick),a
      0036E6 18 04                12215 	jr	00118$
      0036E8                      12216 00117$:
                                  12217 ;src/main.c:1381: auxTick--;
      0036E8 21rD3r00             12218 	ld	hl, #_auxTick
      0036EB 35                   12219 	dec	(hl)
      0036EC                      12220 00118$:
                                  12221 ;src/main.c:1386: if (hull > 100) {
      0036EC 3E 64                12222 	ld	a, #0x64
      0036EE 21rF6r00             12223 	ld	hl, #_hull
      0036F1 96                   12224 	sub	a, (hl)
      0036F2 30 02                12225 	jr	NC, 00120$
                                  12226 ;src/main.c:1387: hull = 0;
      0036F4 36 00                12227 	ld	(hl), #0x00
      0036F6                      12228 00120$:
                                  12229 ;src/main.c:1390: SHOW_WIN;	
      0036F6 F0r00                12230 	ldh	a, (_LCDC_REG + 0)
      0036F8 F6 20                12231 	or	a, #0x20
      0036FA E0r00                12232 	ldh	(_LCDC_REG + 0), a
                                  12233 ;src/main.c:1391: wait_vbl_done(); // Idle until next frame
      0036FC CDr00r00             12234 	call	_wait_vbl_done
      0036FF C3r2Cr36             12235 	jp	00121$
                                  12236 ;src/main.c:1396: for (uint8_t i=0; i<exCount; ++i) {
      003702                      12237 00177$:
      003702 F8 03                12238 	ldhl	sp,	#3
      003704 36 00                12239 	ld	(hl), #0x00
      003706                      12240 00153$:
      003706 21rA5r0B             12241 	ld	hl, #_exCount
      003709 4E                   12242 	ld	c, (hl)
      00370A F8 03                12243 	ldhl	sp,	#3
      00370C 7E                   12244 	ld	a, (hl)
      00370D 91                   12245 	sub	a, c
      00370E 30 48                12246 	jr	NC, 00124$
                                  12247 ;src/main.c:1397: explosions[i].x = 200;
      003710 4E                   12248 	ld	c, (hl)
      003711 06 00                12249 	ld	b, #0x00
      003713 69                   12250 	ld	l, c
      003714 60                   12251 	ld	h, b
      003715 29                   12252 	add	hl, hl
      003716 09                   12253 	add	hl, bc
      003717 29                   12254 	add	hl, hl
      003718 01r03r01             12255 	ld	bc,#_explosions
      00371B 09                   12256 	add	hl,bc
                                  12257 ;	spillPairReg hl
                                  12258 ;	spillPairReg hl
      00371C 4D                   12259 	ld	c,l
      00371D 44                   12260 	ld	b,h
                                  12261 ;	spillPairReg hl
                                  12262 ;	spillPairReg hl
      00371E 23                   12263 	inc	hl
      00371F 36 C8                12264 	ld	(hl), #0xc8
                                  12265 ;src/main.c:1398: explosions[i].y = 200;
      003721 69                   12266 	ld	l, c
                                  12267 ;	spillPairReg hl
                                  12268 ;	spillPairReg hl
      003722 60                   12269 	ld	h, b
                                  12270 ;	spillPairReg hl
                                  12271 ;	spillPairReg hl
      003723 23                   12272 	inc	hl
      003724 23                   12273 	inc	hl
      003725 36 C8                12274 	ld	(hl), #0xc8
                                  12275 ;src/main.c:1400: explosions[i].tile = exTiles[0];
      003727 21 05 00             12276 	ld	hl, #0x0005
      00372A 09                   12277 	add	hl, bc
      00372B E5                   12278 	push	hl
      00372C 7D                   12279 	ld	a, l
      00372D F8 03                12280 	ldhl	sp,	#3
      00372F 77                   12281 	ld	(hl), a
      003730 E1                   12282 	pop	hl
      003731 7C                   12283 	ld	a, h
      003732 F8 02                12284 	ldhl	sp,	#2
      003734 32                   12285 	ld	(hl-), a
      003735 FArD0r00             12286 	ld	a, (#_exTiles + 0)
      003738 F5                   12287 	push	af
      003739 2A                   12288 	ld	a,	(hl+)
      00373A 66                   12289 	ld	h, (hl)
      00373B 6F                   12290 	ld	l, a
      00373C F1                   12291 	pop	af
      00373D 77                   12292 	ld	(hl), a
                                  12293 ;src/main.c:1401: explosions[i].frameCounter = 0;
      00373E 21 04 00             12294 	ld	hl, #0x0004
      003741 09                   12295 	add	hl, bc
      003742 36 00                12296 	ld	(hl), #0x00
                                  12297 ;src/main.c:1402: explosions[i].frame = 2-i;
      003744 59                   12298 	ld	e, c
      003745 50                   12299 	ld	d, b
      003746 13                   12300 	inc	de
      003747 13                   12301 	inc	de
      003748 13                   12302 	inc	de
      003749 F8 03                12303 	ldhl	sp,	#3
      00374B 6E                   12304 	ld	l, (hl)
                                  12305 ;	spillPairReg hl
                                  12306 ;	spillPairReg hl
      00374C 3E 02                12307 	ld	a, #0x02
      00374E 95                   12308 	sub	a, l
      00374F 12                   12309 	ld	(de), a
                                  12310 ;src/main.c:1403: explosions[i].visible = 1;
      003750 3E 01                12311 	ld	a, #0x01
      003752 02                   12312 	ld	(bc), a
                                  12313 ;src/main.c:1396: for (uint8_t i=0; i<exCount; ++i) {
      003753 F8 03                12314 	ldhl	sp,	#3
      003755 34                   12315 	inc	(hl)
      003756 18 AE                12316 	jr	00153$
      003758                      12317 00124$:
                                  12318 ;src/main.c:1405: xOverflow = 0;
      003758 AF                   12319 	xor	a, a
      003759 21rB5r00             12320 	ld	hl, #_xOverflow
      00375C 22                   12321 	ld	(hl+), a
      00375D 77                   12322 	ld	(hl), a
                                  12323 ;src/main.c:1406: yOverflow = 0;
      00375E AF                   12324 	xor	a, a
      00375F 21rB7r00             12325 	ld	hl, #_yOverflow
      003762 22                   12326 	ld	(hl+), a
      003763 77                   12327 	ld	(hl), a
                                  12328 ;src/main.c:1408: while(endExCount < 12) {
      003764 F8 03                12329 	ldhl	sp,	#3
      003766 36 00                12330 	ld	(hl), #0x00
      003768                      12331 00132$:
      003768 F8 03                12332 	ldhl	sp,	#3
      00376A 7E                   12333 	ld	a, (hl)
      00376B D6 0C                12334 	sub	a, #0x0c
      00376D D2rDFr38             12335 	jp	NC, 00134$
                                  12336 ;src/main.c:1410: SHOW_SPRITES;
      003770 F0r00                12337 	ldh	a, (_LCDC_REG + 0)
      003772 F6 02                12338 	or	a, #0x02
      003774 E0r00                12339 	ldh	(_LCDC_REG + 0), a
                                  12340 ;src/main.c:1411: tickEx();
      003776 CDr5Dr31             12341 	call	_tickEx
                                  12342 ;src/main.c:1412: if (auxTick == 0) {
      003779 FArD3r00             12343 	ld	a, (#_auxTick)
      00377C B7                   12344 	or	a, a
      00377D 20 08                12345 	jr	NZ, 00126$
                                  12346 ;src/main.c:1413: auxTick = AUXTICKFREQUENCY;
      00377F FArA8r0B             12347 	ld	a, (#_AUXTICKFREQUENCY)
      003782 EArD3r00             12348 	ld	(#_auxTick),a
      003785 18 04                12349 	jr	00127$
      003787                      12350 00126$:
                                  12351 ;src/main.c:1416: auxTick--;
      003787 21rD3r00             12352 	ld	hl, #_auxTick
      00378A 35                   12353 	dec	(hl)
      00378B                      12354 00127$:
                                  12355 ;src/main.c:1418: if (!explosions[oldestEx].visible) {
      00378B 21rCFr00             12356 	ld	hl, #_oldestEx
      00378E 4E                   12357 	ld	c, (hl)
      00378F 06 00                12358 	ld	b, #0x00
      003791 69                   12359 	ld	l, c
      003792 60                   12360 	ld	h, b
      003793 29                   12361 	add	hl, hl
      003794 09                   12362 	add	hl, bc
      003795 29                   12363 	add	hl, hl
      003796 01r03r01             12364 	ld	bc,#_explosions
      003799 09                   12365 	add	hl,bc
      00379A E5                   12366 	push	hl
      00379B 7D                   12367 	ld	a, l
      00379C F8 03                12368 	ldhl	sp,	#3
      00379E 77                   12369 	ld	(hl), a
      00379F E1                   12370 	pop	hl
      0037A0 7C                   12371 	ld	a, h
      0037A1 F8 02                12372 	ldhl	sp,	#2
      0037A3 32                   12373 	ld	(hl-), a
      0037A4 2A                   12374 	ld	a, (hl+)
      0037A5 5F                   12375 	ld	e, a
      0037A6 56                   12376 	ld	d, (hl)
      0037A7 1A                   12377 	ld	a, (de)
      0037A8 B7                   12378 	or	a, a
      0037A9 C2rD3r38             12379 	jp	NZ, 00131$
                                  12380 ;src/main.c:1419: explosions[oldestEx].visible = 1;
      0037AC 3A                   12381 	ld	a, (hl-)
      0037AD 6E                   12382 	ld	l, (hl)
      0037AE 67                   12383 	ld	h, a
      0037AF 36 01                12384 	ld	(hl), #0x01
                                  12385 ;src/main.c:1422: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      0037B1 CDr00r00             12386 	call	_rand
      0037B4 7B                   12387 	ld	a, e
      0037B5 21rA7r0B             12388 	ld	hl, #_exTileCount
      0037B8 46                   12389 	ld	b, (hl)
      0037B9 C5                   12390 	push	bc
      0037BA 33                   12391 	inc	sp
      0037BB F5                   12392 	push	af
      0037BC 33                   12393 	inc	sp
      0037BD CDr00r00             12394 	call	__moduchar
      0037C0 E1                   12395 	pop	hl
      0037C1 F8 00                12396 	ldhl	sp,	#0
      0037C3 73                   12397 	ld	(hl), e
                                  12398 ;src/main.c:1423: uint8_t xOff = ((uint8_t)rand()) % 32;
      0037C4 CDr00r00             12399 	call	_rand
      0037C7 7B                   12400 	ld	a, e
      0037C8 E6 1F                12401 	and	a, #0x1f
      0037CA F8 01                12402 	ldhl	sp,	#1
      0037CC 77                   12403 	ld	(hl), a
                                  12404 ;src/main.c:1424: uint8_t yOff = ((uint8_t)rand()) % 32;
      0037CD CDr00r00             12405 	call	_rand
      0037D0 7B                   12406 	ld	a, e
      0037D1 E6 1F                12407 	and	a, #0x1f
      0037D3 F8 02                12408 	ldhl	sp,	#2
      0037D5 77                   12409 	ld	(hl), a
                                  12410 ;src/main.c:1426: explosions[oldestEx].x = playerDrawX -16 + xOff;
      0037D6 21rCFr00             12411 	ld	hl, #_oldestEx
      0037D9 4E                   12412 	ld	c, (hl)
      0037DA 06 00                12413 	ld	b, #0x00
      0037DC 69                   12414 	ld	l, c
      0037DD 60                   12415 	ld	h, b
      0037DE 29                   12416 	add	hl, hl
      0037DF 09                   12417 	add	hl, bc
      0037E0 29                   12418 	add	hl, hl
      0037E1 01r03r01             12419 	ld	bc,#_explosions
      0037E4 09                   12420 	add	hl,bc
      0037E5 23                   12421 	inc	hl
      0037E6 4D                   12422 	ld	c, l
      0037E7 44                   12423 	ld	b, h
      0037E8 FArAFr00             12424 	ld	a, (#_playerDrawX)
      0037EB C6 F0                12425 	add	a, #0xf0
      0037ED F8 01                12426 	ldhl	sp,	#1
      0037EF 5E                   12427 	ld	e, (hl)
      0037F0 83                   12428 	add	a, e
      0037F1 02                   12429 	ld	(bc), a
                                  12430 ;src/main.c:1427: explosions[oldestEx].y = playerDrawY -16 + yOff;
      0037F2 21rCFr00             12431 	ld	hl, #_oldestEx
      0037F5 4E                   12432 	ld	c, (hl)
      0037F6 06 00                12433 	ld	b, #0x00
      0037F8 69                   12434 	ld	l, c
      0037F9 60                   12435 	ld	h, b
      0037FA 29                   12436 	add	hl, hl
      0037FB 09                   12437 	add	hl, bc
      0037FC 29                   12438 	add	hl, hl
      0037FD 01r03r01             12439 	ld	bc,#_explosions
      003800 09                   12440 	add	hl,bc
      003801 23                   12441 	inc	hl
      003802 23                   12442 	inc	hl
      003803 4D                   12443 	ld	c, l
      003804 44                   12444 	ld	b, h
      003805 FArB0r00             12445 	ld	a, (#_playerDrawY)
      003808 C6 F0                12446 	add	a, #0xf0
      00380A F8 02                12447 	ldhl	sp,	#2
      00380C 5E                   12448 	ld	e, (hl)
      00380D 83                   12449 	add	a, e
      00380E 02                   12450 	ld	(bc), a
                                  12451 ;src/main.c:1428: explosions[oldestEx].tile = exTiles[tileNum];
      00380F 21rCFr00             12452 	ld	hl, #_oldestEx
      003812 4E                   12453 	ld	c, (hl)
      003813 06 00                12454 	ld	b, #0x00
      003815 69                   12455 	ld	l, c
      003816 60                   12456 	ld	h, b
      003817 29                   12457 	add	hl, hl
      003818 09                   12458 	add	hl, bc
      003819 29                   12459 	add	hl, hl
      00381A 01r03r01             12460 	ld	bc,#_explosions
      00381D 09                   12461 	add	hl,bc
      00381E 23                   12462 	inc	hl
      00381F 23                   12463 	inc	hl
      003820 23                   12464 	inc	hl
      003821 23                   12465 	inc	hl
      003822 23                   12466 	inc	hl
      003823 4D                   12467 	ld	c, l
      003824 44                   12468 	ld	b, h
      003825 11rD0r00             12469 	ld	de, #_exTiles
      003828 F8 00                12470 	ldhl	sp,	#0
      00382A 6E                   12471 	ld	l, (hl)
      00382B 26 00                12472 	ld	h, #0x00
      00382D 19                   12473 	add	hl, de
      00382E 5D                   12474 	ld	e, l
      00382F 54                   12475 	ld	d, h
      003830 1A                   12476 	ld	a, (de)
      003831 02                   12477 	ld	(bc), a
                                  12478 ;src/main.c:1429: explosions[oldestEx].frame = 0;
      003832 21rCFr00             12479 	ld	hl, #_oldestEx
      003835 4E                   12480 	ld	c, (hl)
      003836 06 00                12481 	ld	b, #0x00
      003838 69                   12482 	ld	l, c
      003839 60                   12483 	ld	h, b
      00383A 29                   12484 	add	hl, hl
      00383B 09                   12485 	add	hl, bc
      00383C 29                   12486 	add	hl, hl
      00383D 01r03r01             12487 	ld	bc,#_explosions
      003840 09                   12488 	add	hl,bc
      003841 23                   12489 	inc	hl
      003842 23                   12490 	inc	hl
      003843 23                   12491 	inc	hl
      003844 36 00                12492 	ld	(hl), #0x00
                                  12493 ;src/main.c:1430: explosions[oldestEx].frameCounter = 0;
      003846 21rCFr00             12494 	ld	hl, #_oldestEx
      003849 4E                   12495 	ld	c, (hl)
      00384A 06 00                12496 	ld	b, #0x00
      00384C 69                   12497 	ld	l, c
      00384D 60                   12498 	ld	h, b
      00384E 29                   12499 	add	hl, hl
      00384F 09                   12500 	add	hl, bc
      003850 29                   12501 	add	hl, hl
      003851 01r03r01             12502 	ld	bc,#_explosions
      003854 09                   12503 	add	hl,bc
      003855 01 04 00             12504 	ld	bc, #0x0004
      003858 09                   12505 	add	hl, bc
      003859 36 00                12506 	ld	(hl), #0x00
                                  12507 ;src/main.c:1432: set_sprite_tile(20 + oldestEx+oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      00385B 21rCFr00             12508 	ld	hl, #_oldestEx
      00385E 4E                   12509 	ld	c, (hl)
      00385F 06 00                12510 	ld	b, #0x00
      003861 69                   12511 	ld	l, c
      003862 60                   12512 	ld	h, b
      003863 29                   12513 	add	hl, hl
      003864 09                   12514 	add	hl, bc
      003865 29                   12515 	add	hl, hl
      003866 01r03r01             12516 	ld	bc,#_explosions
      003869 09                   12517 	add	hl,bc
      00386A 5D                   12518 	ld	e, l
      00386B 54                   12519 	ld	d, h
      00386C 21 05 00             12520 	ld	hl, #0x0005
      00386F 19                   12521 	add	hl, de
      003870 4E                   12522 	ld	c, (hl)
      003871 13                   12523 	inc	de
      003872 13                   12524 	inc	de
      003873 13                   12525 	inc	de
      003874 1A                   12526 	ld	a, (de)
      003875 87                   12527 	add	a, a
      003876 81                   12528 	add	a, c
      003877 4F                   12529 	ld	c, a
      003878 21rCFr00             12530 	ld	hl, #_oldestEx
      00387B 46                   12531 	ld	b, (hl)
      00387C 78                   12532 	ld	a, b
      00387D C6 14                12533 	add	a, #0x14
      00387F 80                   12534 	add	a, b
                                  12535 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003880 6F                   12536 	ld	l, a
      003881 11r00r00             12537 	ld	de, #_shadow_OAM+0
                                  12538 ;	spillPairReg hl
                                  12539 ;	spillPairReg hl
      003884 26 00                12540 	ld	h, #0x00
                                  12541 ;	spillPairReg hl
                                  12542 ;	spillPairReg hl
      003886 29                   12543 	add	hl, hl
      003887 29                   12544 	add	hl, hl
      003888 19                   12545 	add	hl, de
      003889 23                   12546 	inc	hl
      00388A 23                   12547 	inc	hl
      00388B 71                   12548 	ld	(hl), c
                                  12549 ;src/main.c:1433: set_sprite_tile(21 + oldestEx+oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      00388C 21rCFr00             12550 	ld	hl, #_oldestEx
      00388F 4E                   12551 	ld	c, (hl)
      003890 06 00                12552 	ld	b, #0x00
      003892 69                   12553 	ld	l, c
      003893 60                   12554 	ld	h, b
      003894 29                   12555 	add	hl, hl
      003895 09                   12556 	add	hl, bc
      003896 29                   12557 	add	hl, hl
      003897 01r03r01             12558 	ld	bc,#_explosions
      00389A 09                   12559 	add	hl,bc
      00389B 5D                   12560 	ld	e, l
      00389C 54                   12561 	ld	d, h
      00389D 21 05 00             12562 	ld	hl, #0x0005
      0038A0 19                   12563 	add	hl, de
      0038A1 4E                   12564 	ld	c, (hl)
      0038A2 13                   12565 	inc	de
      0038A3 13                   12566 	inc	de
      0038A4 13                   12567 	inc	de
      0038A5 1A                   12568 	ld	a, (de)
      0038A6 87                   12569 	add	a, a
      0038A7 81                   12570 	add	a, c
      0038A8 C6 02                12571 	add	a, #0x02
      0038AA 4F                   12572 	ld	c, a
      0038AB 21rCFr00             12573 	ld	hl, #_oldestEx
      0038AE 46                   12574 	ld	b, (hl)
      0038AF 78                   12575 	ld	a, b
      0038B0 C6 15                12576 	add	a, #0x15
      0038B2 80                   12577 	add	a, b
                                  12578 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0038B3 6F                   12579 	ld	l, a
      0038B4 11r00r00             12580 	ld	de, #_shadow_OAM+0
                                  12581 ;	spillPairReg hl
                                  12582 ;	spillPairReg hl
      0038B7 26 00                12583 	ld	h, #0x00
                                  12584 ;	spillPairReg hl
                                  12585 ;	spillPairReg hl
      0038B9 29                   12586 	add	hl, hl
      0038BA 29                   12587 	add	hl, hl
      0038BB 19                   12588 	add	hl, de
      0038BC 23                   12589 	inc	hl
      0038BD 23                   12590 	inc	hl
      0038BE 71                   12591 	ld	(hl), c
                                  12592 ;src/main.c:1435: oldestEx++;
      0038BF 21rCFr00             12593 	ld	hl, #_oldestEx
      0038C2 34                   12594 	inc	(hl)
                                  12595 ;src/main.c:1436: if (oldestEx >= exCount) {
      0038C3 21rA5r0B             12596 	ld	hl, #_exCount
      0038C6 4E                   12597 	ld	c, (hl)
      0038C7 21rCFr00             12598 	ld	hl, #_oldestEx
      0038CA 7E                   12599 	ld	a, (hl)
      0038CB 91                   12600 	sub	a, c
      0038CC 38 02                12601 	jr	C, 00129$
                                  12602 ;src/main.c:1437: oldestEx = 0;
      0038CE 36 00                12603 	ld	(hl), #0x00
      0038D0                      12604 00129$:
                                  12605 ;src/main.c:1439: endExCount++;
      0038D0 F8 03                12606 	ldhl	sp,	#3
      0038D2 34                   12607 	inc	(hl)
      0038D3                      12608 00131$:
                                  12609 ;src/main.c:1442: SHOW_WIN;	
      0038D3 F0r00                12610 	ldh	a, (_LCDC_REG + 0)
      0038D5 F6 20                12611 	or	a, #0x20
      0038D7 E0r00                12612 	ldh	(_LCDC_REG + 0), a
                                  12613 ;src/main.c:1444: wait_vbl_done();
      0038D9 CDr00r00             12614 	call	_wait_vbl_done
      0038DC C3r68r37             12615 	jp	00132$
      0038DF                      12616 00134$:
                                  12617 ;src/main.c:1447: for (uint8_t j=0; j<exCount; ++j) {
      0038DF F8 03                12618 	ldhl	sp,	#3
      0038E1 36 00                12619 	ld	(hl), #0x00
      0038E3                      12620 00156$:
      0038E3 21rA5r0B             12621 	ld	hl, #_exCount
      0038E6 4E                   12622 	ld	c, (hl)
      0038E7 F8 03                12623 	ldhl	sp,	#3
      0038E9 7E                   12624 	ld	a, (hl)
      0038EA 91                   12625 	sub	a, c
      0038EB 30 2A                12626 	jr	NC, 00135$
                                  12627 ;src/main.c:1449: move_sprite(20 +j+j, 200, 200);
      0038ED 4E                   12628 	ld	c, (hl)
      0038EE 79                   12629 	ld	a, c
      0038EF C6 14                12630 	add	a, #0x14
      0038F1 81                   12631 	add	a, c
                                  12632 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0038F2 6F                   12633 	ld	l, a
      0038F3 11r00r00             12634 	ld	de, #_shadow_OAM+0
                                  12635 ;	spillPairReg hl
                                  12636 ;	spillPairReg hl
      0038F6 26 00                12637 	ld	h, #0x00
                                  12638 ;	spillPairReg hl
                                  12639 ;	spillPairReg hl
      0038F8 29                   12640 	add	hl, hl
      0038F9 29                   12641 	add	hl, hl
      0038FA 19                   12642 	add	hl, de
                                  12643 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0038FB 3E C8                12644 	ld	a, #0xc8
      0038FD 22                   12645 	ld	(hl+), a
      0038FE 36 C8                12646 	ld	(hl), #0xc8
                                  12647 ;src/main.c:1450: move_sprite(21 +j+j, 200, 200);
      003900 79                   12648 	ld	a, c
      003901 C6 15                12649 	add	a, #0x15
      003903 81                   12650 	add	a, c
                                  12651 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003904 6F                   12652 	ld	l, a
      003905 01r00r00             12653 	ld	bc, #_shadow_OAM+0
                                  12654 ;	spillPairReg hl
                                  12655 ;	spillPairReg hl
      003908 26 00                12656 	ld	h, #0x00
                                  12657 ;	spillPairReg hl
                                  12658 ;	spillPairReg hl
      00390A 29                   12659 	add	hl, hl
      00390B 29                   12660 	add	hl, hl
      00390C 09                   12661 	add	hl, bc
                                  12662 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00390D 3E C8                12663 	ld	a, #0xc8
      00390F 22                   12664 	ld	(hl+), a
      003910 36 C8                12665 	ld	(hl), #0xc8
                                  12666 ;src/main.c:1447: for (uint8_t j=0; j<exCount; ++j) {
      003912 F8 03                12667 	ldhl	sp,	#3
      003914 34                   12668 	inc	(hl)
      003915 18 CC                12669 	jr	00156$
      003917                      12670 00135$:
                                  12671 ;src/main.c:1452: for (uint16_t k=0; k<180; ++k) {
      003917 01 00 00             12672 	ld	bc, #0x0000
      00391A                      12673 00159$:
      00391A 59                   12674 	ld	e, c
      00391B 50                   12675 	ld	d, b
      00391C 7B                   12676 	ld	a, e
      00391D D6 B4                12677 	sub	a, #0xb4
      00391F 7A                   12678 	ld	a, d
      003920 DE 00                12679 	sbc	a, #0x00
      003922 30 12                12680 	jr	NC, 00136$
                                  12681 ;src/main.c:1453: SHOW_SPRITES;
      003924 F0r00                12682 	ldh	a, (_LCDC_REG + 0)
      003926 F6 02                12683 	or	a, #0x02
      003928 E0r00                12684 	ldh	(_LCDC_REG + 0), a
                                  12685 ;src/main.c:1454: SHOW_WIN;
      00392A F0r00                12686 	ldh	a, (_LCDC_REG + 0)
      00392C F6 20                12687 	or	a, #0x20
      00392E E0r00                12688 	ldh	(_LCDC_REG + 0), a
                                  12689 ;src/main.c:1455: wait_vbl_done();
      003930 CDr00r00             12690 	call	_wait_vbl_done
                                  12691 ;src/main.c:1452: for (uint16_t k=0; k<180; ++k) {
      003933 03                   12692 	inc	bc
      003934 18 E4                12693 	jr	00159$
      003936                      12694 00136$:
                                  12695 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      003936 F3                   12696 	di
                                  12697 ;src/main.c:1458: showScoreScreen();
      003937 CDrC1r35             12698 	call	_showScoreScreen
                                  12699 ;src/main.c:1459: while(1) {
      00393A                      12700 00138$:
                                  12701 ;src/main.c:1460: wait_vbl_done();
      00393A CDr00r00             12702 	call	_wait_vbl_done
      00393D 18 FB                12703 	jr	00138$
                                  12704 ;src/main.c:1466: }
      00393F E8 04                12705 	add	sp, #4
      003941 C9                   12706 	ret
                                  12707 	.area _CODE
                                  12708 	.area _INITIALIZER
      000000                      12709 __xinit__hullabel:
      000000 12                   12710 	.db #0x12	; 18
      000001 1F                   12711 	.db #0x1f	; 31
      000002 16                   12712 	.db #0x16	; 22
      000003 16                   12713 	.db #0x16	; 22
      000004                      12714 __xinit__shieldlabel:
      000004 1D                   12715 	.db #0x1d	; 29
      000005 12                   12716 	.db #0x12	; 18
      000006 16                   12717 	.db #0x16	; 22
      000007 0E                   12718 	.db #0x0e	; 14
      000008                      12719 __xinit__weaponlabel:
      000008 21                   12720 	.db #0x21	; 33
      000009 0F                   12721 	.db #0x0f	; 15
      00000A 1A                   12722 	.db #0x1a	; 26
      00000B 18                   12723 	.db #0x18	; 24
      00000C                      12724 __xinit__scorelabel:
      00000C 1D                   12725 	.db #0x1d	; 29
      00000D 0D                   12726 	.db #0x0d	; 13
      00000E 1C                   12727 	.db #0x1c	; 28
      00000F 0F                   12728 	.db #0x0f	; 15
      000010                      12729 __xinit__emptyRow:
      000010 00                   12730 	.db #0x00	; 0
      000011 00                   12731 	.db #0x00	; 0
      000012 00                   12732 	.db #0x00	; 0
      000013 00                   12733 	.db #0x00	; 0
      000014 00                   12734 	.db #0x00	; 0
      000015 00                   12735 	.db #0x00	; 0
      000016 00                   12736 	.db #0x00	; 0
      000017 00                   12737 	.db #0x00	; 0
      000018 00                   12738 	.db #0x00	; 0
      000019 00                   12739 	.db #0x00	; 0
      00001A 00                   12740 	.db #0x00	; 0
      00001B 00                   12741 	.db #0x00	; 0
      00001C 00                   12742 	.db #0x00	; 0
      00001D 00                   12743 	.db #0x00	; 0
      00001E 00                   12744 	.db #0x00	; 0
      00001F 00                   12745 	.db #0x00	; 0
      000020 00                   12746 	.db #0x00	; 0
      000021 00                   12747 	.db #0x00	; 0
      000022 00                   12748 	.db #0x00	; 0
      000023 00                   12749 	.db #0x00	; 0
      000024                      12750 __xinit__blob:
      000024 00 00                12751 	.dw #0x0000
      000026 00 00                12752 	.dw #0x0000
      000028 00                   12753 	.db #0x00	;  0
      000029 00                   12754 	.db #0x00	;  0
      00002A 40                   12755 	.db #0x40	; 64
      00002B 00                   12756 	.db #0x00	; 0
      00002C 01                   12757 	.db #0x01	; 1
      00002D 01                   12758 	.db #0x01	; 1
      00002E 01                   12759 	.db #0x01	; 1
      00002F 32                   12760 	.db #0x32	; 50	'2'
      000030 03                   12761 	.db #0x03	;  3
      000031 01                   12762 	.db #0x01	; 1
      000032 00                   12763 	.db #0x00	;  0
      000033 00                   12764 	.db #0x00	;  0
      000034 32 00                12765 	.dw #0x0032
      000036                      12766 __xinit__bomb:
      000036 00 00                12767 	.dw #0x0000
      000038 00 00                12768 	.dw #0x0000
      00003A 00                   12769 	.db #0x00	;  0
      00003B 00                   12770 	.db #0x00	;  0
      00003C 42                   12771 	.db #0x42	; 66	'B'
      00003D 00                   12772 	.db #0x00	; 0
      00003E 01                   12773 	.db #0x01	; 1
      00003F 01                   12774 	.db #0x01	; 1
      000040 01                   12775 	.db #0x01	; 1
      000041 32                   12776 	.db #0x32	; 50	'2'
      000042 05                   12777 	.db #0x05	;  5
      000043 01                   12778 	.db #0x01	; 1
      000044 00                   12779 	.db #0x00	;  0
      000045 00                   12780 	.db #0x00	;  0
      000046 32 00                12781 	.dw #0x0032
      000048                      12782 __xinit__miniship:
      000048 00 00                12783 	.dw #0x0000
      00004A 00 00                12784 	.dw #0x0000
      00004C 00                   12785 	.db #0x00	;  0
      00004D 00                   12786 	.db #0x00	;  0
      00004E 44                   12787 	.db #0x44	; 68	'D'
      00004F 00                   12788 	.db #0x00	; 0
      000050 01                   12789 	.db #0x01	; 1
      000051 01                   12790 	.db #0x01	; 1
      000052 01                   12791 	.db #0x01	; 1
      000053 32                   12792 	.db #0x32	; 50	'2'
      000054 05                   12793 	.db #0x05	;  5
      000055 01                   12794 	.db #0x01	; 1
      000056 00                   12795 	.db #0x00	;  0
      000057 00                   12796 	.db #0x00	;  0
      000058 32 00                12797 	.dw #0x0032
      00005A                      12798 __xinit__bigblob:
      00005A 00 00                12799 	.dw #0x0000
      00005C 00 00                12800 	.dw #0x0000
      00005E 00                   12801 	.db #0x00	;  0
      00005F 00                   12802 	.db #0x00	;  0
      000060 50                   12803 	.db #0x50	; 80	'P'
      000061 52                   12804 	.db #0x52	; 82	'R'
      000062 02                   12805 	.db #0x02	; 2
      000063 01                   12806 	.db #0x01	; 1
      000064 01                   12807 	.db #0x01	; 1
      000065 32                   12808 	.db #0x32	; 50	'2'
      000066 03                   12809 	.db #0x03	;  3
      000067 01                   12810 	.db #0x01	; 1
      000068 00                   12811 	.db #0x00	;  0
      000069 00                   12812 	.db #0x00	;  0
      00006A 64 00                12813 	.dw #0x0064
      00006C                      12814 __xinit__shieldship:
      00006C 00 00                12815 	.dw #0x0000
      00006E 00 00                12816 	.dw #0x0000
      000070 00                   12817 	.db #0x00	;  0
      000071 00                   12818 	.db #0x00	;  0
      000072 54                   12819 	.db #0x54	; 84	'T'
      000073 56                   12820 	.db #0x56	; 86	'V'
      000074 02                   12821 	.db #0x02	; 2
      000075 01                   12822 	.db #0x01	; 1
      000076 01                   12823 	.db #0x01	; 1
      000077 32                   12824 	.db #0x32	; 50	'2'
      000078 03                   12825 	.db #0x03	;  3
      000079 01                   12826 	.db #0x01	; 1
      00007A 00                   12827 	.db #0x00	;  0
      00007B 00                   12828 	.db #0x00	;  0
      00007C 46 00                12829 	.dw #0x0046
      00007E                      12830 __xinit__singleGun:
      00007E 00 00                12831 	.dw #0x0000
      000080 00 00                12832 	.dw #0x0000
      000082 00                   12833 	.db #0x00	;  0
      000083 00                   12834 	.db #0x00	;  0
      000084 FF                   12835 	.db #0xff	; -1
      000085 02                   12836 	.db #0x02	; 2
      000086 32 00                12837 	.dw #0x0032
      000088 01                   12838 	.db #0x01	; 1
      000089 0F                   12839 	.db #0x0f	; 15
      00008A 20                   12840 	.db #0x20	; 32
      00008B                      12841 __xinit__doubleGun:
      00008B 00 00                12842 	.dw #0x0000
      00008D 00 00                12843 	.dw #0x0000
      00008F 00                   12844 	.db #0x00	;  0
      000090 00                   12845 	.db #0x00	;  0
      000091 FF                   12846 	.db #0xff	; -1
      000092 02                   12847 	.db #0x02	; 2
      000093 46 00                12848 	.dw #0x0046
      000095 01                   12849 	.db #0x01	; 1
      000096 0F                   12850 	.db #0x0f	; 15
      000097 26                   12851 	.db #0x26	; 38
      000098                      12852 __xinit__missile:
      000098 00 00                12853 	.dw #0x0000
      00009A 00 00                12854 	.dw #0x0000
      00009C 00                   12855 	.db #0x00	;  0
      00009D 00                   12856 	.db #0x00	;  0
      00009E FF                   12857 	.db #0xff	; -1
      00009F 01                   12858 	.db #0x01	; 1
      0000A0 64 00                12859 	.dw #0x0064
      0000A2 01                   12860 	.db #0x01	; 1
      0000A3 1E                   12861 	.db #0x1e	; 30
      0000A4 2C                   12862 	.db #0x2c	; 44
      0000A5                      12863 __xinit__oldestProjectile:
      0000A5 00                   12864 	.db #0x00	; 0
      0000A6                      12865 __xinit__fireCooldown:
      0000A6 00                   12866 	.db #0x00	; 0
      0000A7                      12867 __xinit__xDir:
      0000A7 00                   12868 	.db #0x00	;  0
      0000A8                      12869 __xinit__yDir:
      0000A8 FF                   12870 	.db #0xff	; -1
      0000A9                      12871 __xinit__xSpeed:
      0000A9 00                   12872 	.db #0x00	;  0
      0000AA                      12873 __xinit__ySpeed:
      0000AA 00                   12874 	.db #0x00	;  0
      0000AB                      12875 __xinit__playerX:
      0000AB 00 0A                12876 	.dw #0x0a00
      0000AD                      12877 __xinit__playerY:
      0000AD 00 0A                12878 	.dw #0x0a00
      0000AF                      12879 __xinit__playerDrawX:
      0000AF 50                   12880 	.db #0x50	; 80	'P'
      0000B0                      12881 __xinit__playerDrawY:
      0000B0 50                   12882 	.db #0x50	; 80	'P'
      0000B1                      12883 __xinit__bgX:
      0000B1 00 00                12884 	.dw #0x0000
      0000B3                      12885 __xinit__bgY:
      0000B3 00 00                12886 	.dw #0x0000
      0000B5                      12887 __xinit__xOverflow:
      0000B5 00 00                12888 	.dw #0x0000
      0000B7                      12889 __xinit__yOverflow:
      0000B7 00 00                12890 	.dw #0x0000
      0000B9                      12891 __xinit__enemyCollisionCount:
      0000B9 00                   12892 	.db #0x00	; 0
      0000BA                      12893 __xinit__gunLevel:
      0000BA 00                   12894 	.db #0x00	; 0
      0000BB                      12895 __xinit__currentGun:
      0000BB 00                   12896 	.db #0x00	; 0
      0000BC                      12897 __xinit__missiles:
      0000BC 00                   12898 	.db #0x00	; 0
      0000BD                      12899 __xinit__MISSILES:
      0000BD 00 00 00 00          12900 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000C1                      12901 __xinit__switchDelay:
      0000C1 00                   12902 	.db #0x00	; 0
      0000C2                      12903 __xinit__gunMap:
      0000C2 53                   12904 	.db #0x53	; 83	'S'
      0000C3 5B                   12905 	.db #0x5b	; 91
      0000C4 61                   12906 	.db #0x61	; 97	'a'
      0000C5                      12907 __xinit__score:
      0000C5 00 00                12908 	.dw #0x0000
      0000C7                      12909 __xinit__SCORE:
      0000C7 00 00 00 00          12910 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000CB                      12911 __xinit__INCREMENT:
      0000CB 01 00 00 00          12912 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000CF                      12913 __xinit__oldestEx:
      0000CF 00                   12914 	.db #0x00	; 0
      0000D0                      12915 __xinit__exTiles:
      0000D0 80                   12916 	.db #0x80	; 128
      0000D1 90                   12917 	.db #0x90	; 144
      0000D2 A0                   12918 	.db #0xa0	; 160
      0000D3                      12919 __xinit__auxTick:
      0000D3 01                   12920 	.db #0x01	; 1
                                  12921 	.area _CABS (ABS)
