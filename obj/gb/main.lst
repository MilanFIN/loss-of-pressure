                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickPickups
                                     16 	.globl _moveProjectiles
                                     17 	.globl _fire
                                     18 	.globl _setGunIcon
                                     19 	.globl _checkCollision
                                     20 	.globl _takeDamage
                                     21 	.globl _move
                                     22 	.globl _updateEnemyPositions
                                     23 	.globl _initEnemies
                                     24 	.globl _playSound
                                     25 	.globl _updateDirection
                                     26 	.globl _incrementScore
                                     27 	.globl _updateMissileCount
                                     28 	.globl _updateScore
                                     29 	.globl _setHealthBar
                                     30 	.globl _interruptLCD
                                     31 	.globl _bcd2text
                                     32 	.globl _bcd_sub
                                     33 	.globl _bcd_add
                                     34 	.globl _rand
                                     35 	.globl _initrand
                                     36 	.globl _font_set
                                     37 	.globl _font_load
                                     38 	.globl _font_init
                                     39 	.globl _set_sprite_data
                                     40 	.globl _set_win_tiles
                                     41 	.globl _set_bkg_tiles
                                     42 	.globl _set_bkg_data
                                     43 	.globl _wait_vbl_done
                                     44 	.globl _set_interrupts
                                     45 	.globl _waitpad
                                     46 	.globl _joypad
                                     47 	.globl _add_LCD
                                     48 	.globl _INCREMENT
                                     49 	.globl _SCORE
                                     50 	.globl _score
                                     51 	.globl _gunMap
                                     52 	.globl _switchDelay
                                     53 	.globl _MISSILES
                                     54 	.globl _missiles
                                     55 	.globl _currentGun
                                     56 	.globl _gunLevel
                                     57 	.globl _enemyCollisionCount
                                     58 	.globl _yOverflow
                                     59 	.globl _xOverflow
                                     60 	.globl _bgY
                                     61 	.globl _bgX
                                     62 	.globl _playerDrawY
                                     63 	.globl _playerDrawX
                                     64 	.globl _playerY
                                     65 	.globl _playerX
                                     66 	.globl _ySpeed
                                     67 	.globl _xSpeed
                                     68 	.globl _yDir
                                     69 	.globl _xDir
                                     70 	.globl _fireCooldown
                                     71 	.globl _oldestProjectile
                                     72 	.globl _ammo
                                     73 	.globl _upgrade
                                     74 	.globl _missile
                                     75 	.globl _doubleGun
                                     76 	.globl _singleGun
                                     77 	.globl _shieldship
                                     78 	.globl _bigblob
                                     79 	.globl _miniship
                                     80 	.globl _bomb
                                     81 	.globl _blob
                                     82 	.globl _scorelabel
                                     83 	.globl _weaponlabel
                                     84 	.globl _shieldlabel
                                     85 	.globl _hullabel
                                     86 	.globl _pickup
                                     87 	.globl _min_font
                                     88 	.globl _shield
                                     89 	.globl _hull
                                     90 	.globl _joydata
                                     91 	.globl _projectiles
                                     92 	.globl _enemies
                                     93 	.globl _enemyOptions
                                     94 	.globl _maxShield
                                     95 	.globl _maxHull
                                     96 	.globl _PLAYERSIZE
                                     97 	.globl _PROJECTILECOUNT
                                     98 	.globl _ySpawnPositions
                                     99 	.globl _xSpawnPositions
                                    100 	.globl _ENEMYCOUNT
                                    101 	.globl _EMPTYSPRITE
                                    102 	.globl _BLANK
                                    103 	.globl _BLANKSIZE
                                    104 	.globl _Player1
                                    105 	.globl _Pickups
                                    106 	.globl _ProjectileTiles
                                    107 	.globl _largeenemies
                                    108 	.globl _enemy1
                                    109 	.globl _enemyOptionCount
                                    110 	.globl _healthblock
                                    111 	.globl _backgroundtiles
                                    112 	.globl _background1
                                    113 	.globl _cross
                                    114 ;--------------------------------------------------------
                                    115 ; special function registers
                                    116 ;--------------------------------------------------------
                                    117 ;--------------------------------------------------------
                                    118 ; ram data
                                    119 ;--------------------------------------------------------
                                    120 	.area _DATA
      000000                        121 _enemyOptions::
      000000                        122 	.ds 80
      000050                        123 _enemies::
      000050                        124 	.ds 80
      0000A0                        125 _projectiles::
      0000A0                        126 	.ds 60
      0000DC                        127 _joydata::
      0000DC                        128 	.ds 1
      0000DD                        129 _hull::
      0000DD                        130 	.ds 1
      0000DE                        131 _shield::
      0000DE                        132 	.ds 1
      0000DF                        133 _min_font::
      0000DF                        134 	.ds 2
      0000E1                        135 _pickup::
      0000E1                        136 	.ds 7
                                    137 ;--------------------------------------------------------
                                    138 ; ram data
                                    139 ;--------------------------------------------------------
                                    140 	.area _INITIALIZED
      000000                        141 _hullabel::
      000000                        142 	.ds 4
      000004                        143 _shieldlabel::
      000004                        144 	.ds 4
      000008                        145 _weaponlabel::
      000008                        146 	.ds 4
      00000C                        147 _scorelabel::
      00000C                        148 	.ds 4
      000010                        149 _blob::
      000010                        150 	.ds 16
      000020                        151 _bomb::
      000020                        152 	.ds 16
      000030                        153 _miniship::
      000030                        154 	.ds 16
      000040                        155 _bigblob::
      000040                        156 	.ds 16
      000050                        157 _shieldship::
      000050                        158 	.ds 16
      000060                        159 _singleGun::
      000060                        160 	.ds 12
      00006C                        161 _doubleGun::
      00006C                        162 	.ds 12
      000078                        163 _missile::
      000078                        164 	.ds 12
      000084                        165 _upgrade::
      000084                        166 	.ds 7
      00008B                        167 _ammo::
      00008B                        168 	.ds 7
      000092                        169 _oldestProjectile::
      000092                        170 	.ds 1
      000093                        171 _fireCooldown::
      000093                        172 	.ds 1
      000094                        173 _xDir::
      000094                        174 	.ds 1
      000095                        175 _yDir::
      000095                        176 	.ds 1
      000096                        177 _xSpeed::
      000096                        178 	.ds 1
      000097                        179 _ySpeed::
      000097                        180 	.ds 1
      000098                        181 _playerX::
      000098                        182 	.ds 2
      00009A                        183 _playerY::
      00009A                        184 	.ds 2
      00009C                        185 _playerDrawX::
      00009C                        186 	.ds 1
      00009D                        187 _playerDrawY::
      00009D                        188 	.ds 1
      00009E                        189 _bgX::
      00009E                        190 	.ds 2
      0000A0                        191 _bgY::
      0000A0                        192 	.ds 2
      0000A2                        193 _xOverflow::
      0000A2                        194 	.ds 2
      0000A4                        195 _yOverflow::
      0000A4                        196 	.ds 2
      0000A6                        197 _enemyCollisionCount::
      0000A6                        198 	.ds 1
      0000A7                        199 _gunLevel::
      0000A7                        200 	.ds 1
      0000A8                        201 _currentGun::
      0000A8                        202 	.ds 1
      0000A9                        203 _missiles::
      0000A9                        204 	.ds 1
      0000AA                        205 _MISSILES::
      0000AA                        206 	.ds 4
      0000AE                        207 _switchDelay::
      0000AE                        208 	.ds 1
      0000AF                        209 _gunMap::
      0000AF                        210 	.ds 3
      0000B2                        211 _score::
      0000B2                        212 	.ds 2
      0000B4                        213 _SCORE::
      0000B4                        214 	.ds 4
      0000B8                        215 _INCREMENT::
      0000B8                        216 	.ds 4
                                    217 ;--------------------------------------------------------
                                    218 ; absolute external ram data
                                    219 ;--------------------------------------------------------
                                    220 	.area _DABS (ABS)
                                    221 ;--------------------------------------------------------
                                    222 ; global & static initialisations
                                    223 ;--------------------------------------------------------
                                    224 	.area _HOME
                                    225 	.area _GSINIT
                                    226 	.area _GSFINAL
                                    227 	.area _GSINIT
                                    228 ;--------------------------------------------------------
                                    229 ; Home
                                    230 ;--------------------------------------------------------
                                    231 	.area _HOME
                                    232 	.area _HOME
                                    233 ;--------------------------------------------------------
                                    234 ; code
                                    235 ;--------------------------------------------------------
                                    236 	.area _CODE
                                    237 ;src/main.c:113: void interruptLCD()
                                    238 ;	---------------------------------
                                    239 ; Function interruptLCD
                                    240 ; ---------------------------------
      000000                        241 _interruptLCD::
                                    242 ;src/main.c:115: HIDE_SPRITES;
      000000 F0r00                  243 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  244 	and	a, #0xfd
      000004 E0r00                  245 	ldh	(_LCDC_REG + 0), a
                                    246 ;src/main.c:116: }
      000006 C9                     247 	ret
      000007                        248 _cross:
      000007 18                     249 	.db #0x18	; 24
      000008 18                     250 	.db #0x18	; 24
      000009 18                     251 	.db #0x18	; 24
      00000A 18                     252 	.db #0x18	; 24
      00000B 3C                     253 	.db #0x3c	; 60
      00000C 3C                     254 	.db #0x3c	; 60
      00000D 3C                     255 	.db #0x3c	; 60
      00000E 3C                     256 	.db #0x3c	; 60
      00000F 7E                     257 	.db #0x7e	; 126
      000010 7E                     258 	.db #0x7e	; 126
      000011 7E                     259 	.db #0x7e	; 126
      000012 7E                     260 	.db #0x7e	; 126
      000013 FF                     261 	.db #0xff	; 255
      000014 FF                     262 	.db #0xff	; 255
      000015 FF                     263 	.db #0xff	; 255
      000016 FF                     264 	.db #0xff	; 255
      000017 0F                     265 	.db #0x0f	; 15
      000018 0F                     266 	.db #0x0f	; 15
      000019 3F                     267 	.db #0x3f	; 63
      00001A 3F                     268 	.db #0x3f	; 63
      00001B FF                     269 	.db #0xff	; 255
      00001C FF                     270 	.db #0xff	; 255
      00001D FF                     271 	.db #0xff	; 255
      00001E FF                     272 	.db #0xff	; 255
      00001F 7E                     273 	.db #0x7e	; 126
      000020 7E                     274 	.db #0x7e	; 126
      000021 3E                     275 	.db #0x3e	; 62
      000022 3E                     276 	.db #0x3e	; 62
      000023 1C                     277 	.db #0x1c	; 28
      000024 1C                     278 	.db #0x1c	; 28
      000025 0C                     279 	.db #0x0c	; 12
      000026 0C                     280 	.db #0x0c	; 12
      000027 C0                     281 	.db #0xc0	; 192
      000028 C0                     282 	.db #0xc0	; 192
      000029 F0                     283 	.db #0xf0	; 240
      00002A F0                     284 	.db #0xf0	; 240
      00002B FC                     285 	.db #0xfc	; 252
      00002C FC                     286 	.db #0xfc	; 252
      00002D FF                     287 	.db #0xff	; 255
      00002E FF                     288 	.db #0xff	; 255
      00002F FF                     289 	.db #0xff	; 255
      000030 FF                     290 	.db #0xff	; 255
      000031 FC                     291 	.db #0xfc	; 252
      000032 FC                     292 	.db #0xfc	; 252
      000033 F0                     293 	.db #0xf0	; 240
      000034 F0                     294 	.db #0xf0	; 240
      000035 C0                     295 	.db #0xc0	; 192
      000036 C0                     296 	.db #0xc0	; 192
      000037 0C                     297 	.db #0x0c	; 12
      000038 0C                     298 	.db #0x0c	; 12
      000039 1C                     299 	.db #0x1c	; 28
      00003A 1C                     300 	.db #0x1c	; 28
      00003B 3E                     301 	.db #0x3e	; 62
      00003C 3E                     302 	.db #0x3e	; 62
      00003D 7E                     303 	.db #0x7e	; 126
      00003E 7E                     304 	.db #0x7e	; 126
      00003F FF                     305 	.db #0xff	; 255
      000040 FF                     306 	.db #0xff	; 255
      000041 FF                     307 	.db #0xff	; 255
      000042 FF                     308 	.db #0xff	; 255
      000043 3F                     309 	.db #0x3f	; 63
      000044 3F                     310 	.db #0x3f	; 63
      000045 0F                     311 	.db #0x0f	; 15
      000046 0F                     312 	.db #0x0f	; 15
      000047 FF                     313 	.db #0xff	; 255
      000048 FF                     314 	.db #0xff	; 255
      000049 FF                     315 	.db #0xff	; 255
      00004A FF                     316 	.db #0xff	; 255
      00004B 7E                     317 	.db #0x7e	; 126
      00004C 7E                     318 	.db #0x7e	; 126
      00004D 7E                     319 	.db #0x7e	; 126
      00004E 7E                     320 	.db #0x7e	; 126
      00004F 3C                     321 	.db #0x3c	; 60
      000050 3C                     322 	.db #0x3c	; 60
      000051 3C                     323 	.db #0x3c	; 60
      000052 3C                     324 	.db #0x3c	; 60
      000053 18                     325 	.db #0x18	; 24
      000054 18                     326 	.db #0x18	; 24
      000055 18                     327 	.db #0x18	; 24
      000056 18                     328 	.db #0x18	; 24
      000057 30                     329 	.db #0x30	; 48	'0'
      000058 30                     330 	.db #0x30	; 48	'0'
      000059 38                     331 	.db #0x38	; 56	'8'
      00005A 38                     332 	.db #0x38	; 56	'8'
      00005B 7C                     333 	.db #0x7c	; 124
      00005C 7C                     334 	.db #0x7c	; 124
      00005D 7E                     335 	.db #0x7e	; 126
      00005E 7E                     336 	.db #0x7e	; 126
      00005F FF                     337 	.db #0xff	; 255
      000060 FF                     338 	.db #0xff	; 255
      000061 FF                     339 	.db #0xff	; 255
      000062 FF                     340 	.db #0xff	; 255
      000063 FC                     341 	.db #0xfc	; 252
      000064 FC                     342 	.db #0xfc	; 252
      000065 F0                     343 	.db #0xf0	; 240
      000066 F0                     344 	.db #0xf0	; 240
      000067 03                     345 	.db #0x03	; 3
      000068 03                     346 	.db #0x03	; 3
      000069 0F                     347 	.db #0x0f	; 15
      00006A 0F                     348 	.db #0x0f	; 15
      00006B 3F                     349 	.db #0x3f	; 63
      00006C 3F                     350 	.db #0x3f	; 63
      00006D FF                     351 	.db #0xff	; 255
      00006E FF                     352 	.db #0xff	; 255
      00006F FF                     353 	.db #0xff	; 255
      000070 FF                     354 	.db #0xff	; 255
      000071 3F                     355 	.db #0x3f	; 63
      000072 3F                     356 	.db #0x3f	; 63
      000073 0F                     357 	.db #0x0f	; 15
      000074 0F                     358 	.db #0x0f	; 15
      000075 03                     359 	.db #0x03	; 3
      000076 03                     360 	.db #0x03	; 3
      000077 F0                     361 	.db #0xf0	; 240
      000078 F0                     362 	.db #0xf0	; 240
      000079 FC                     363 	.db #0xfc	; 252
      00007A FC                     364 	.db #0xfc	; 252
      00007B FF                     365 	.db #0xff	; 255
      00007C FF                     366 	.db #0xff	; 255
      00007D FF                     367 	.db #0xff	; 255
      00007E FF                     368 	.db #0xff	; 255
      00007F 7E                     369 	.db #0x7e	; 126
      000080 7E                     370 	.db #0x7e	; 126
      000081 7C                     371 	.db #0x7c	; 124
      000082 7C                     372 	.db #0x7c	; 124
      000083 38                     373 	.db #0x38	; 56	'8'
      000084 38                     374 	.db #0x38	; 56	'8'
      000085 30                     375 	.db #0x30	; 48	'0'
      000086 30                     376 	.db #0x30	; 48	'0'
      000087                        377 _background1:
      000087 26                     378 	.db #0x26	; 38
      000088 26                     379 	.db #0x26	; 38
      000089 26                     380 	.db #0x26	; 38
      00008A 26                     381 	.db #0x26	; 38
      00008B 26                     382 	.db #0x26	; 38
      00008C 26                     383 	.db #0x26	; 38
      00008D 26                     384 	.db #0x26	; 38
      00008E 26                     385 	.db #0x26	; 38
      00008F 26                     386 	.db #0x26	; 38
      000090 26                     387 	.db #0x26	; 38
      000091 26                     388 	.db #0x26	; 38
      000092 2A                     389 	.db #0x2a	; 42
      000093 29                     390 	.db #0x29	; 41
      000094 26                     391 	.db #0x26	; 38
      000095 26                     392 	.db #0x26	; 38
      000096 26                     393 	.db #0x26	; 38
      000097 26                     394 	.db #0x26	; 38
      000098 26                     395 	.db #0x26	; 38
      000099 26                     396 	.db #0x26	; 38
      00009A 26                     397 	.db #0x26	; 38
      00009B 2C                     398 	.db #0x2c	; 44
      00009C 26                     399 	.db #0x26	; 38
      00009D 26                     400 	.db #0x26	; 38
      00009E 26                     401 	.db #0x26	; 38
      00009F 26                     402 	.db #0x26	; 38
      0000A0 26                     403 	.db #0x26	; 38
      0000A1 26                     404 	.db #0x26	; 38
      0000A2 26                     405 	.db #0x26	; 38
      0000A3 26                     406 	.db #0x26	; 38
      0000A4 26                     407 	.db #0x26	; 38
      0000A5 26                     408 	.db #0x26	; 38
      0000A6 26                     409 	.db #0x26	; 38
      0000A7 26                     410 	.db #0x26	; 38
      0000A8 2B                     411 	.db #0x2b	; 43
      0000A9 26                     412 	.db #0x26	; 38
      0000AA 26                     413 	.db #0x26	; 38
      0000AB 26                     414 	.db #0x26	; 38
      0000AC 26                     415 	.db #0x26	; 38
      0000AD 26                     416 	.db #0x26	; 38
      0000AE 26                     417 	.db #0x26	; 38
      0000AF 26                     418 	.db #0x26	; 38
      0000B0 26                     419 	.db #0x26	; 38
      0000B1 26                     420 	.db #0x26	; 38
      0000B2 26                     421 	.db #0x26	; 38
      0000B3 26                     422 	.db #0x26	; 38
      0000B4 26                     423 	.db #0x26	; 38
      0000B5 26                     424 	.db #0x26	; 38
      0000B6 26                     425 	.db #0x26	; 38
      0000B7 26                     426 	.db #0x26	; 38
      0000B8 26                     427 	.db #0x26	; 38
      0000B9 26                     428 	.db #0x26	; 38
      0000BA 26                     429 	.db #0x26	; 38
      0000BB 26                     430 	.db #0x26	; 38
      0000BC 26                     431 	.db #0x26	; 38
      0000BD 26                     432 	.db #0x26	; 38
      0000BE 26                     433 	.db #0x26	; 38
      0000BF 26                     434 	.db #0x26	; 38
      0000C0 26                     435 	.db #0x26	; 38
      0000C1 26                     436 	.db #0x26	; 38
      0000C2 26                     437 	.db #0x26	; 38
      0000C3 26                     438 	.db #0x26	; 38
      0000C4 26                     439 	.db #0x26	; 38
      0000C5 26                     440 	.db #0x26	; 38
      0000C6 26                     441 	.db #0x26	; 38
      0000C7 26                     442 	.db #0x26	; 38
      0000C8 26                     443 	.db #0x26	; 38
      0000C9 26                     444 	.db #0x26	; 38
      0000CA 26                     445 	.db #0x26	; 38
      0000CB 26                     446 	.db #0x26	; 38
      0000CC 26                     447 	.db #0x26	; 38
      0000CD 26                     448 	.db #0x26	; 38
      0000CE 26                     449 	.db #0x26	; 38
      0000CF 26                     450 	.db #0x26	; 38
      0000D0 26                     451 	.db #0x26	; 38
      0000D1 26                     452 	.db #0x26	; 38
      0000D2 26                     453 	.db #0x26	; 38
      0000D3 26                     454 	.db #0x26	; 38
      0000D4 26                     455 	.db #0x26	; 38
      0000D5 26                     456 	.db #0x26	; 38
      0000D6 26                     457 	.db #0x26	; 38
      0000D7 26                     458 	.db #0x26	; 38
      0000D8 26                     459 	.db #0x26	; 38
      0000D9 26                     460 	.db #0x26	; 38
      0000DA 26                     461 	.db #0x26	; 38
      0000DB 26                     462 	.db #0x26	; 38
      0000DC 26                     463 	.db #0x26	; 38
      0000DD 26                     464 	.db #0x26	; 38
      0000DE 26                     465 	.db #0x26	; 38
      0000DF 26                     466 	.db #0x26	; 38
      0000E0 26                     467 	.db #0x26	; 38
      0000E1 26                     468 	.db #0x26	; 38
      0000E2 26                     469 	.db #0x26	; 38
      0000E3 26                     470 	.db #0x26	; 38
      0000E4 26                     471 	.db #0x26	; 38
      0000E5 26                     472 	.db #0x26	; 38
      0000E6 26                     473 	.db #0x26	; 38
      0000E7 26                     474 	.db #0x26	; 38
      0000E8 26                     475 	.db #0x26	; 38
      0000E9 26                     476 	.db #0x26	; 38
      0000EA 26                     477 	.db #0x26	; 38
      0000EB 26                     478 	.db #0x26	; 38
      0000EC 26                     479 	.db #0x26	; 38
      0000ED 26                     480 	.db #0x26	; 38
      0000EE 26                     481 	.db #0x26	; 38
      0000EF 26                     482 	.db #0x26	; 38
      0000F0 26                     483 	.db #0x26	; 38
      0000F1 26                     484 	.db #0x26	; 38
      0000F2 26                     485 	.db #0x26	; 38
      0000F3 26                     486 	.db #0x26	; 38
      0000F4 26                     487 	.db #0x26	; 38
      0000F5 26                     488 	.db #0x26	; 38
      0000F6 26                     489 	.db #0x26	; 38
      0000F7 26                     490 	.db #0x26	; 38
      0000F8 2B                     491 	.db #0x2b	; 43
      0000F9 26                     492 	.db #0x26	; 38
      0000FA 26                     493 	.db #0x26	; 38
      0000FB 26                     494 	.db #0x26	; 38
      0000FC 26                     495 	.db #0x26	; 38
      0000FD 26                     496 	.db #0x26	; 38
      0000FE 26                     497 	.db #0x26	; 38
      0000FF 2B                     498 	.db #0x2b	; 43
      000100 26                     499 	.db #0x26	; 38
      000101 26                     500 	.db #0x26	; 38
      000102 26                     501 	.db #0x26	; 38
      000103 26                     502 	.db #0x26	; 38
      000104 26                     503 	.db #0x26	; 38
      000105 26                     504 	.db #0x26	; 38
      000106 26                     505 	.db #0x26	; 38
      000107 26                     506 	.db #0x26	; 38
      000108 26                     507 	.db #0x26	; 38
      000109 26                     508 	.db #0x26	; 38
      00010A 26                     509 	.db #0x26	; 38
      00010B 26                     510 	.db #0x26	; 38
      00010C 2B                     511 	.db #0x2b	; 43
      00010D 26                     512 	.db #0x26	; 38
      00010E 26                     513 	.db #0x26	; 38
      00010F 26                     514 	.db #0x26	; 38
      000110 26                     515 	.db #0x26	; 38
      000111 26                     516 	.db #0x26	; 38
      000112 26                     517 	.db #0x26	; 38
      000113 26                     518 	.db #0x26	; 38
      000114 2C                     519 	.db #0x2c	; 44
      000115 26                     520 	.db #0x26	; 38
      000116 26                     521 	.db #0x26	; 38
      000117 26                     522 	.db #0x26	; 38
      000118 26                     523 	.db #0x26	; 38
      000119 26                     524 	.db #0x26	; 38
      00011A 26                     525 	.db #0x26	; 38
      00011B 26                     526 	.db #0x26	; 38
      00011C 26                     527 	.db #0x26	; 38
      00011D 26                     528 	.db #0x26	; 38
      00011E 26                     529 	.db #0x26	; 38
      00011F 26                     530 	.db #0x26	; 38
      000120 26                     531 	.db #0x26	; 38
      000121 26                     532 	.db #0x26	; 38
      000122 26                     533 	.db #0x26	; 38
      000123 26                     534 	.db #0x26	; 38
      000124 26                     535 	.db #0x26	; 38
      000125 26                     536 	.db #0x26	; 38
      000126 26                     537 	.db #0x26	; 38
      000127 26                     538 	.db #0x26	; 38
      000128 26                     539 	.db #0x26	; 38
      000129 2C                     540 	.db #0x2c	; 44
      00012A 26                     541 	.db #0x26	; 38
      00012B 26                     542 	.db #0x26	; 38
      00012C 26                     543 	.db #0x26	; 38
      00012D 26                     544 	.db #0x26	; 38
      00012E 25                     545 	.db #0x25	; 37
      00012F 26                     546 	.db #0x26	; 38
      000130 26                     547 	.db #0x26	; 38
      000131 26                     548 	.db #0x26	; 38
      000132 26                     549 	.db #0x26	; 38
      000133 26                     550 	.db #0x26	; 38
      000134 26                     551 	.db #0x26	; 38
      000135 26                     552 	.db #0x26	; 38
      000136 26                     553 	.db #0x26	; 38
      000137 26                     554 	.db #0x26	; 38
      000138 26                     555 	.db #0x26	; 38
      000139 26                     556 	.db #0x26	; 38
      00013A 26                     557 	.db #0x26	; 38
      00013B 26                     558 	.db #0x26	; 38
      00013C 2C                     559 	.db #0x2c	; 44
      00013D 26                     560 	.db #0x26	; 38
      00013E 26                     561 	.db #0x26	; 38
      00013F 26                     562 	.db #0x26	; 38
      000140 26                     563 	.db #0x26	; 38
      000141 26                     564 	.db #0x26	; 38
      000142 26                     565 	.db #0x26	; 38
      000143 26                     566 	.db #0x26	; 38
      000144 2B                     567 	.db #0x2b	; 43
      000145 26                     568 	.db #0x26	; 38
      000146 26                     569 	.db #0x26	; 38
      000147 26                     570 	.db #0x26	; 38
      000148 26                     571 	.db #0x26	; 38
      000149 26                     572 	.db #0x26	; 38
      00014A 26                     573 	.db #0x26	; 38
      00014B 26                     574 	.db #0x26	; 38
      00014C 26                     575 	.db #0x26	; 38
      00014D 26                     576 	.db #0x26	; 38
      00014E 26                     577 	.db #0x26	; 38
      00014F 26                     578 	.db #0x26	; 38
      000150 26                     579 	.db #0x26	; 38
      000151 26                     580 	.db #0x26	; 38
      000152 26                     581 	.db #0x26	; 38
      000153 26                     582 	.db #0x26	; 38
      000154 26                     583 	.db #0x26	; 38
      000155 26                     584 	.db #0x26	; 38
      000156 26                     585 	.db #0x26	; 38
      000157 26                     586 	.db #0x26	; 38
      000158 26                     587 	.db #0x26	; 38
      000159 26                     588 	.db #0x26	; 38
      00015A 26                     589 	.db #0x26	; 38
      00015B 26                     590 	.db #0x26	; 38
      00015C 26                     591 	.db #0x26	; 38
      00015D 26                     592 	.db #0x26	; 38
      00015E 26                     593 	.db #0x26	; 38
      00015F 26                     594 	.db #0x26	; 38
      000160 2C                     595 	.db #0x2c	; 44
      000161 26                     596 	.db #0x26	; 38
      000162 26                     597 	.db #0x26	; 38
      000163 26                     598 	.db #0x26	; 38
      000164 26                     599 	.db #0x26	; 38
      000165 26                     600 	.db #0x26	; 38
      000166 26                     601 	.db #0x26	; 38
      000167 26                     602 	.db #0x26	; 38
      000168 26                     603 	.db #0x26	; 38
      000169 26                     604 	.db #0x26	; 38
      00016A 26                     605 	.db #0x26	; 38
      00016B 26                     606 	.db #0x26	; 38
      00016C 26                     607 	.db #0x26	; 38
      00016D 26                     608 	.db #0x26	; 38
      00016E 26                     609 	.db #0x26	; 38
      00016F 26                     610 	.db #0x26	; 38
      000170 26                     611 	.db #0x26	; 38
      000171 26                     612 	.db #0x26	; 38
      000172 26                     613 	.db #0x26	; 38
      000173 26                     614 	.db #0x26	; 38
      000174 26                     615 	.db #0x26	; 38
      000175 26                     616 	.db #0x26	; 38
      000176 26                     617 	.db #0x26	; 38
      000177 26                     618 	.db #0x26	; 38
      000178 26                     619 	.db #0x26	; 38
      000179 26                     620 	.db #0x26	; 38
      00017A 26                     621 	.db #0x26	; 38
      00017B 26                     622 	.db #0x26	; 38
      00017C 26                     623 	.db #0x26	; 38
      00017D 26                     624 	.db #0x26	; 38
      00017E 26                     625 	.db #0x26	; 38
      00017F 26                     626 	.db #0x26	; 38
      000180 26                     627 	.db #0x26	; 38
      000181 26                     628 	.db #0x26	; 38
      000182 26                     629 	.db #0x26	; 38
      000183 26                     630 	.db #0x26	; 38
      000184 26                     631 	.db #0x26	; 38
      000185 26                     632 	.db #0x26	; 38
      000186 26                     633 	.db #0x26	; 38
      000187 26                     634 	.db #0x26	; 38
      000188 26                     635 	.db #0x26	; 38
      000189 26                     636 	.db #0x26	; 38
      00018A 26                     637 	.db #0x26	; 38
      00018B 26                     638 	.db #0x26	; 38
      00018C 26                     639 	.db #0x26	; 38
      00018D 26                     640 	.db #0x26	; 38
      00018E 26                     641 	.db #0x26	; 38
      00018F 26                     642 	.db #0x26	; 38
      000190 26                     643 	.db #0x26	; 38
      000191 26                     644 	.db #0x26	; 38
      000192 26                     645 	.db #0x26	; 38
      000193 26                     646 	.db #0x26	; 38
      000194 26                     647 	.db #0x26	; 38
      000195 2B                     648 	.db #0x2b	; 43
      000196 26                     649 	.db #0x26	; 38
      000197 26                     650 	.db #0x26	; 38
      000198 26                     651 	.db #0x26	; 38
      000199 26                     652 	.db #0x26	; 38
      00019A 26                     653 	.db #0x26	; 38
      00019B 26                     654 	.db #0x26	; 38
      00019C 26                     655 	.db #0x26	; 38
      00019D 26                     656 	.db #0x26	; 38
      00019E 26                     657 	.db #0x26	; 38
      00019F 26                     658 	.db #0x26	; 38
      0001A0 26                     659 	.db #0x26	; 38
      0001A1 26                     660 	.db #0x26	; 38
      0001A2 26                     661 	.db #0x26	; 38
      0001A3 26                     662 	.db #0x26	; 38
      0001A4 26                     663 	.db #0x26	; 38
      0001A5 26                     664 	.db #0x26	; 38
      0001A6 25                     665 	.db #0x25	; 37
      0001A7 26                     666 	.db #0x26	; 38
      0001A8 26                     667 	.db #0x26	; 38
      0001A9 26                     668 	.db #0x26	; 38
      0001AA 2B                     669 	.db #0x2b	; 43
      0001AB 26                     670 	.db #0x26	; 38
      0001AC 26                     671 	.db #0x26	; 38
      0001AD 26                     672 	.db #0x26	; 38
      0001AE 26                     673 	.db #0x26	; 38
      0001AF 26                     674 	.db #0x26	; 38
      0001B0 26                     675 	.db #0x26	; 38
      0001B1 26                     676 	.db #0x26	; 38
      0001B2 26                     677 	.db #0x26	; 38
      0001B3 26                     678 	.db #0x26	; 38
      0001B4 26                     679 	.db #0x26	; 38
      0001B5 26                     680 	.db #0x26	; 38
      0001B6 26                     681 	.db #0x26	; 38
      0001B7 26                     682 	.db #0x26	; 38
      0001B8 26                     683 	.db #0x26	; 38
      0001B9 26                     684 	.db #0x26	; 38
      0001BA 26                     685 	.db #0x26	; 38
      0001BB 26                     686 	.db #0x26	; 38
      0001BC 26                     687 	.db #0x26	; 38
      0001BD 26                     688 	.db #0x26	; 38
      0001BE 26                     689 	.db #0x26	; 38
      0001BF 26                     690 	.db #0x26	; 38
      0001C0 26                     691 	.db #0x26	; 38
      0001C1 26                     692 	.db #0x26	; 38
      0001C2 26                     693 	.db #0x26	; 38
      0001C3 26                     694 	.db #0x26	; 38
      0001C4 2B                     695 	.db #0x2b	; 43
      0001C5 26                     696 	.db #0x26	; 38
      0001C6 26                     697 	.db #0x26	; 38
      0001C7 26                     698 	.db #0x26	; 38
      0001C8 26                     699 	.db #0x26	; 38
      0001C9 26                     700 	.db #0x26	; 38
      0001CA 26                     701 	.db #0x26	; 38
      0001CB 26                     702 	.db #0x26	; 38
      0001CC 26                     703 	.db #0x26	; 38
      0001CD 26                     704 	.db #0x26	; 38
      0001CE 26                     705 	.db #0x26	; 38
      0001CF 26                     706 	.db #0x26	; 38
      0001D0 26                     707 	.db #0x26	; 38
      0001D1 26                     708 	.db #0x26	; 38
      0001D2 26                     709 	.db #0x26	; 38
      0001D3 26                     710 	.db #0x26	; 38
      0001D4 26                     711 	.db #0x26	; 38
      0001D5 26                     712 	.db #0x26	; 38
      0001D6 26                     713 	.db #0x26	; 38
      0001D7 26                     714 	.db #0x26	; 38
      0001D8 26                     715 	.db #0x26	; 38
      0001D9 26                     716 	.db #0x26	; 38
      0001DA 27                     717 	.db #0x27	; 39
      0001DB 28                     718 	.db #0x28	; 40
      0001DC 26                     719 	.db #0x26	; 38
      0001DD 26                     720 	.db #0x26	; 38
      0001DE 26                     721 	.db #0x26	; 38
      0001DF 26                     722 	.db #0x26	; 38
      0001E0 26                     723 	.db #0x26	; 38
      0001E1 26                     724 	.db #0x26	; 38
      0001E2 26                     725 	.db #0x26	; 38
      0001E3 26                     726 	.db #0x26	; 38
      0001E4 26                     727 	.db #0x26	; 38
      0001E5 26                     728 	.db #0x26	; 38
      0001E6 26                     729 	.db #0x26	; 38
      0001E7 26                     730 	.db #0x26	; 38
      0001E8 26                     731 	.db #0x26	; 38
      0001E9 26                     732 	.db #0x26	; 38
      0001EA 26                     733 	.db #0x26	; 38
      0001EB 26                     734 	.db #0x26	; 38
      0001EC 26                     735 	.db #0x26	; 38
      0001ED 26                     736 	.db #0x26	; 38
      0001EE 26                     737 	.db #0x26	; 38
      0001EF 26                     738 	.db #0x26	; 38
      0001F0 26                     739 	.db #0x26	; 38
      0001F1 26                     740 	.db #0x26	; 38
      0001F2 26                     741 	.db #0x26	; 38
      0001F3 26                     742 	.db #0x26	; 38
      0001F4 26                     743 	.db #0x26	; 38
      0001F5 26                     744 	.db #0x26	; 38
      0001F6 26                     745 	.db #0x26	; 38
      0001F7 26                     746 	.db #0x26	; 38
      0001F8 26                     747 	.db #0x26	; 38
      0001F9 26                     748 	.db #0x26	; 38
      0001FA 2A                     749 	.db #0x2a	; 42
      0001FB 29                     750 	.db #0x29	; 41
      0001FC 26                     751 	.db #0x26	; 38
      0001FD 26                     752 	.db #0x26	; 38
      0001FE 26                     753 	.db #0x26	; 38
      0001FF 26                     754 	.db #0x26	; 38
      000200 26                     755 	.db #0x26	; 38
      000201 26                     756 	.db #0x26	; 38
      000202 26                     757 	.db #0x26	; 38
      000203 26                     758 	.db #0x26	; 38
      000204 26                     759 	.db #0x26	; 38
      000205 26                     760 	.db #0x26	; 38
      000206 26                     761 	.db #0x26	; 38
      000207 26                     762 	.db #0x26	; 38
      000208 26                     763 	.db #0x26	; 38
      000209 26                     764 	.db #0x26	; 38
      00020A 26                     765 	.db #0x26	; 38
      00020B 26                     766 	.db #0x26	; 38
      00020C 26                     767 	.db #0x26	; 38
      00020D 26                     768 	.db #0x26	; 38
      00020E 27                     769 	.db #0x27	; 39
      00020F 28                     770 	.db #0x28	; 40
      000210 26                     771 	.db #0x26	; 38
      000211 26                     772 	.db #0x26	; 38
      000212 26                     773 	.db #0x26	; 38
      000213 26                     774 	.db #0x26	; 38
      000214 26                     775 	.db #0x26	; 38
      000215 26                     776 	.db #0x26	; 38
      000216 26                     777 	.db #0x26	; 38
      000217 26                     778 	.db #0x26	; 38
      000218 26                     779 	.db #0x26	; 38
      000219 26                     780 	.db #0x26	; 38
      00021A 26                     781 	.db #0x26	; 38
      00021B 26                     782 	.db #0x26	; 38
      00021C 26                     783 	.db #0x26	; 38
      00021D 26                     784 	.db #0x26	; 38
      00021E 26                     785 	.db #0x26	; 38
      00021F 2C                     786 	.db #0x2c	; 44
      000220 26                     787 	.db #0x26	; 38
      000221 26                     788 	.db #0x26	; 38
      000222 26                     789 	.db #0x26	; 38
      000223 26                     790 	.db #0x26	; 38
      000224 26                     791 	.db #0x26	; 38
      000225 26                     792 	.db #0x26	; 38
      000226 26                     793 	.db #0x26	; 38
      000227 26                     794 	.db #0x26	; 38
      000228 26                     795 	.db #0x26	; 38
      000229 26                     796 	.db #0x26	; 38
      00022A 26                     797 	.db #0x26	; 38
      00022B 26                     798 	.db #0x26	; 38
      00022C 26                     799 	.db #0x26	; 38
      00022D 26                     800 	.db #0x26	; 38
      00022E 2A                     801 	.db #0x2a	; 42
      00022F 29                     802 	.db #0x29	; 41
      000230 26                     803 	.db #0x26	; 38
      000231 26                     804 	.db #0x26	; 38
      000232 26                     805 	.db #0x26	; 38
      000233 26                     806 	.db #0x26	; 38
      000234 26                     807 	.db #0x26	; 38
      000235 26                     808 	.db #0x26	; 38
      000236 26                     809 	.db #0x26	; 38
      000237 26                     810 	.db #0x26	; 38
      000238 26                     811 	.db #0x26	; 38
      000239 26                     812 	.db #0x26	; 38
      00023A 26                     813 	.db #0x26	; 38
      00023B 26                     814 	.db #0x26	; 38
      00023C 26                     815 	.db #0x26	; 38
      00023D 25                     816 	.db #0x25	; 37
      00023E 26                     817 	.db #0x26	; 38
      00023F 26                     818 	.db #0x26	; 38
      000240 26                     819 	.db #0x26	; 38
      000241 26                     820 	.db #0x26	; 38
      000242 26                     821 	.db #0x26	; 38
      000243 26                     822 	.db #0x26	; 38
      000244 2C                     823 	.db #0x2c	; 44
      000245 26                     824 	.db #0x26	; 38
      000246 26                     825 	.db #0x26	; 38
      000247 26                     826 	.db #0x26	; 38
      000248 26                     827 	.db #0x26	; 38
      000249 26                     828 	.db #0x26	; 38
      00024A 26                     829 	.db #0x26	; 38
      00024B 26                     830 	.db #0x26	; 38
      00024C 26                     831 	.db #0x26	; 38
      00024D 26                     832 	.db #0x26	; 38
      00024E 26                     833 	.db #0x26	; 38
      00024F 26                     834 	.db #0x26	; 38
      000250 26                     835 	.db #0x26	; 38
      000251 26                     836 	.db #0x26	; 38
      000252 26                     837 	.db #0x26	; 38
      000253 26                     838 	.db #0x26	; 38
      000254 26                     839 	.db #0x26	; 38
      000255 26                     840 	.db #0x26	; 38
      000256 26                     841 	.db #0x26	; 38
      000257 26                     842 	.db #0x26	; 38
      000258 26                     843 	.db #0x26	; 38
      000259 26                     844 	.db #0x26	; 38
      00025A 26                     845 	.db #0x26	; 38
      00025B 26                     846 	.db #0x26	; 38
      00025C 26                     847 	.db #0x26	; 38
      00025D 26                     848 	.db #0x26	; 38
      00025E 26                     849 	.db #0x26	; 38
      00025F 26                     850 	.db #0x26	; 38
      000260 26                     851 	.db #0x26	; 38
      000261 26                     852 	.db #0x26	; 38
      000262 26                     853 	.db #0x26	; 38
      000263 26                     854 	.db #0x26	; 38
      000264 26                     855 	.db #0x26	; 38
      000265 26                     856 	.db #0x26	; 38
      000266 26                     857 	.db #0x26	; 38
      000267 26                     858 	.db #0x26	; 38
      000268 26                     859 	.db #0x26	; 38
      000269 26                     860 	.db #0x26	; 38
      00026A 2C                     861 	.db #0x2c	; 44
      00026B 26                     862 	.db #0x26	; 38
      00026C 26                     863 	.db #0x26	; 38
      00026D 26                     864 	.db #0x26	; 38
      00026E 26                     865 	.db #0x26	; 38
      00026F 26                     866 	.db #0x26	; 38
      000270 26                     867 	.db #0x26	; 38
      000271 26                     868 	.db #0x26	; 38
      000272 26                     869 	.db #0x26	; 38
      000273 26                     870 	.db #0x26	; 38
      000274 26                     871 	.db #0x26	; 38
      000275 26                     872 	.db #0x26	; 38
      000276 26                     873 	.db #0x26	; 38
      000277 26                     874 	.db #0x26	; 38
      000278 26                     875 	.db #0x26	; 38
      000279 2C                     876 	.db #0x2c	; 44
      00027A 26                     877 	.db #0x26	; 38
      00027B 26                     878 	.db #0x26	; 38
      00027C 26                     879 	.db #0x26	; 38
      00027D 26                     880 	.db #0x26	; 38
      00027E 26                     881 	.db #0x26	; 38
      00027F 26                     882 	.db #0x26	; 38
      000280 26                     883 	.db #0x26	; 38
      000281 26                     884 	.db #0x26	; 38
      000282 26                     885 	.db #0x26	; 38
      000283 26                     886 	.db #0x26	; 38
      000284 26                     887 	.db #0x26	; 38
      000285 26                     888 	.db #0x26	; 38
      000286 26                     889 	.db #0x26	; 38
      000287 26                     890 	.db #0x26	; 38
      000288 26                     891 	.db #0x26	; 38
      000289 26                     892 	.db #0x26	; 38
      00028A 26                     893 	.db #0x26	; 38
      00028B 26                     894 	.db #0x26	; 38
      00028C 26                     895 	.db #0x26	; 38
      00028D 26                     896 	.db #0x26	; 38
      00028E 26                     897 	.db #0x26	; 38
      00028F 26                     898 	.db #0x26	; 38
      000290 26                     899 	.db #0x26	; 38
      000291 26                     900 	.db #0x26	; 38
      000292 26                     901 	.db #0x26	; 38
      000293 26                     902 	.db #0x26	; 38
      000294 26                     903 	.db #0x26	; 38
      000295 2B                     904 	.db #0x2b	; 43
      000296 26                     905 	.db #0x26	; 38
      000297 26                     906 	.db #0x26	; 38
      000298 26                     907 	.db #0x26	; 38
      000299 26                     908 	.db #0x26	; 38
      00029A 26                     909 	.db #0x26	; 38
      00029B 26                     910 	.db #0x26	; 38
      00029C 26                     911 	.db #0x26	; 38
      00029D 26                     912 	.db #0x26	; 38
      00029E 26                     913 	.db #0x26	; 38
      00029F 26                     914 	.db #0x26	; 38
      0002A0 26                     915 	.db #0x26	; 38
      0002A1 26                     916 	.db #0x26	; 38
      0002A2 26                     917 	.db #0x26	; 38
      0002A3 26                     918 	.db #0x26	; 38
      0002A4 26                     919 	.db #0x26	; 38
      0002A5 26                     920 	.db #0x26	; 38
      0002A6 26                     921 	.db #0x26	; 38
      0002A7 28                     922 	.db #0x28	; 40
      0002A8 26                     923 	.db #0x26	; 38
      0002A9 26                     924 	.db #0x26	; 38
      0002AA 26                     925 	.db #0x26	; 38
      0002AB 26                     926 	.db #0x26	; 38
      0002AC 26                     927 	.db #0x26	; 38
      0002AD 26                     928 	.db #0x26	; 38
      0002AE 26                     929 	.db #0x26	; 38
      0002AF 26                     930 	.db #0x26	; 38
      0002B0 26                     931 	.db #0x26	; 38
      0002B1 26                     932 	.db #0x26	; 38
      0002B2 26                     933 	.db #0x26	; 38
      0002B3 26                     934 	.db #0x26	; 38
      0002B4 26                     935 	.db #0x26	; 38
      0002B5 26                     936 	.db #0x26	; 38
      0002B6 26                     937 	.db #0x26	; 38
      0002B7 26                     938 	.db #0x26	; 38
      0002B8 26                     939 	.db #0x26	; 38
      0002B9 26                     940 	.db #0x26	; 38
      0002BA 26                     941 	.db #0x26	; 38
      0002BB 26                     942 	.db #0x26	; 38
      0002BC 26                     943 	.db #0x26	; 38
      0002BD 26                     944 	.db #0x26	; 38
      0002BE 26                     945 	.db #0x26	; 38
      0002BF 26                     946 	.db #0x26	; 38
      0002C0 2B                     947 	.db #0x2b	; 43
      0002C1 26                     948 	.db #0x26	; 38
      0002C2 26                     949 	.db #0x26	; 38
      0002C3 26                     950 	.db #0x26	; 38
      0002C4 26                     951 	.db #0x26	; 38
      0002C5 26                     952 	.db #0x26	; 38
      0002C6 27                     953 	.db #0x27	; 39
      0002C7 29                     954 	.db #0x29	; 41
      0002C8 26                     955 	.db #0x26	; 38
      0002C9 26                     956 	.db #0x26	; 38
      0002CA 26                     957 	.db #0x26	; 38
      0002CB 26                     958 	.db #0x26	; 38
      0002CC 26                     959 	.db #0x26	; 38
      0002CD 26                     960 	.db #0x26	; 38
      0002CE 2B                     961 	.db #0x2b	; 43
      0002CF 26                     962 	.db #0x26	; 38
      0002D0 26                     963 	.db #0x26	; 38
      0002D1 26                     964 	.db #0x26	; 38
      0002D2 26                     965 	.db #0x26	; 38
      0002D3 26                     966 	.db #0x26	; 38
      0002D4 26                     967 	.db #0x26	; 38
      0002D5 26                     968 	.db #0x26	; 38
      0002D6 26                     969 	.db #0x26	; 38
      0002D7 26                     970 	.db #0x26	; 38
      0002D8 26                     971 	.db #0x26	; 38
      0002D9 26                     972 	.db #0x26	; 38
      0002DA 26                     973 	.db #0x26	; 38
      0002DB 26                     974 	.db #0x26	; 38
      0002DC 26                     975 	.db #0x26	; 38
      0002DD 26                     976 	.db #0x26	; 38
      0002DE 26                     977 	.db #0x26	; 38
      0002DF 26                     978 	.db #0x26	; 38
      0002E0 26                     979 	.db #0x26	; 38
      0002E1 26                     980 	.db #0x26	; 38
      0002E2 26                     981 	.db #0x26	; 38
      0002E3 26                     982 	.db #0x26	; 38
      0002E4 26                     983 	.db #0x26	; 38
      0002E5 26                     984 	.db #0x26	; 38
      0002E6 2A                     985 	.db #0x2a	; 42
      0002E7 26                     986 	.db #0x26	; 38
      0002E8 26                     987 	.db #0x26	; 38
      0002E9 26                     988 	.db #0x26	; 38
      0002EA 26                     989 	.db #0x26	; 38
      0002EB 26                     990 	.db #0x26	; 38
      0002EC 26                     991 	.db #0x26	; 38
      0002ED 26                     992 	.db #0x26	; 38
      0002EE 26                     993 	.db #0x26	; 38
      0002EF 26                     994 	.db #0x26	; 38
      0002F0 26                     995 	.db #0x26	; 38
      0002F1 26                     996 	.db #0x26	; 38
      0002F2 2C                     997 	.db #0x2c	; 44
      0002F3 26                     998 	.db #0x26	; 38
      0002F4 26                     999 	.db #0x26	; 38
      0002F5 26                    1000 	.db #0x26	; 38
      0002F6 26                    1001 	.db #0x26	; 38
      0002F7 26                    1002 	.db #0x26	; 38
      0002F8 26                    1003 	.db #0x26	; 38
      0002F9 26                    1004 	.db #0x26	; 38
      0002FA 26                    1005 	.db #0x26	; 38
      0002FB 26                    1006 	.db #0x26	; 38
      0002FC 26                    1007 	.db #0x26	; 38
      0002FD 26                    1008 	.db #0x26	; 38
      0002FE 26                    1009 	.db #0x26	; 38
      0002FF 26                    1010 	.db #0x26	; 38
      000300 26                    1011 	.db #0x26	; 38
      000301 26                    1012 	.db #0x26	; 38
      000302 26                    1013 	.db #0x26	; 38
      000303 26                    1014 	.db #0x26	; 38
      000304 26                    1015 	.db #0x26	; 38
      000305 26                    1016 	.db #0x26	; 38
      000306 26                    1017 	.db #0x26	; 38
      000307 26                    1018 	.db #0x26	; 38
      000308 26                    1019 	.db #0x26	; 38
      000309 26                    1020 	.db #0x26	; 38
      00030A 26                    1021 	.db #0x26	; 38
      00030B 26                    1022 	.db #0x26	; 38
      00030C 26                    1023 	.db #0x26	; 38
      00030D 26                    1024 	.db #0x26	; 38
      00030E 26                    1025 	.db #0x26	; 38
      00030F 26                    1026 	.db #0x26	; 38
      000310 26                    1027 	.db #0x26	; 38
      000311 26                    1028 	.db #0x26	; 38
      000312 26                    1029 	.db #0x26	; 38
      000313 26                    1030 	.db #0x26	; 38
      000314 26                    1031 	.db #0x26	; 38
      000315 26                    1032 	.db #0x26	; 38
      000316 26                    1033 	.db #0x26	; 38
      000317 2B                    1034 	.db #0x2b	; 43
      000318 26                    1035 	.db #0x26	; 38
      000319 26                    1036 	.db #0x26	; 38
      00031A 26                    1037 	.db #0x26	; 38
      00031B 26                    1038 	.db #0x26	; 38
      00031C 26                    1039 	.db #0x26	; 38
      00031D 26                    1040 	.db #0x26	; 38
      00031E 26                    1041 	.db #0x26	; 38
      00031F 26                    1042 	.db #0x26	; 38
      000320 26                    1043 	.db #0x26	; 38
      000321 26                    1044 	.db #0x26	; 38
      000322 26                    1045 	.db #0x26	; 38
      000323 26                    1046 	.db #0x26	; 38
      000324 26                    1047 	.db #0x26	; 38
      000325 26                    1048 	.db #0x26	; 38
      000326 26                    1049 	.db #0x26	; 38
      000327 26                    1050 	.db #0x26	; 38
      000328 26                    1051 	.db #0x26	; 38
      000329 26                    1052 	.db #0x26	; 38
      00032A 26                    1053 	.db #0x26	; 38
      00032B 26                    1054 	.db #0x26	; 38
      00032C 26                    1055 	.db #0x26	; 38
      00032D 26                    1056 	.db #0x26	; 38
      00032E 26                    1057 	.db #0x26	; 38
      00032F 26                    1058 	.db #0x26	; 38
      000330 26                    1059 	.db #0x26	; 38
      000331 26                    1060 	.db #0x26	; 38
      000332 26                    1061 	.db #0x26	; 38
      000333 26                    1062 	.db #0x26	; 38
      000334 26                    1063 	.db #0x26	; 38
      000335 26                    1064 	.db #0x26	; 38
      000336 26                    1065 	.db #0x26	; 38
      000337 26                    1066 	.db #0x26	; 38
      000338 26                    1067 	.db #0x26	; 38
      000339 26                    1068 	.db #0x26	; 38
      00033A 26                    1069 	.db #0x26	; 38
      00033B 26                    1070 	.db #0x26	; 38
      00033C 26                    1071 	.db #0x26	; 38
      00033D 26                    1072 	.db #0x26	; 38
      00033E 2B                    1073 	.db #0x2b	; 43
      00033F 26                    1074 	.db #0x26	; 38
      000340 26                    1075 	.db #0x26	; 38
      000341 26                    1076 	.db #0x26	; 38
      000342 26                    1077 	.db #0x26	; 38
      000343 26                    1078 	.db #0x26	; 38
      000344 26                    1079 	.db #0x26	; 38
      000345 26                    1080 	.db #0x26	; 38
      000346 26                    1081 	.db #0x26	; 38
      000347 26                    1082 	.db #0x26	; 38
      000348 26                    1083 	.db #0x26	; 38
      000349 26                    1084 	.db #0x26	; 38
      00034A 2B                    1085 	.db #0x2b	; 43
      00034B 26                    1086 	.db #0x26	; 38
      00034C 26                    1087 	.db #0x26	; 38
      00034D 26                    1088 	.db #0x26	; 38
      00034E 26                    1089 	.db #0x26	; 38
      00034F 26                    1090 	.db #0x26	; 38
      000350 26                    1091 	.db #0x26	; 38
      000351 26                    1092 	.db #0x26	; 38
      000352 26                    1093 	.db #0x26	; 38
      000353 26                    1094 	.db #0x26	; 38
      000354 26                    1095 	.db #0x26	; 38
      000355 26                    1096 	.db #0x26	; 38
      000356 26                    1097 	.db #0x26	; 38
      000357 26                    1098 	.db #0x26	; 38
      000358 26                    1099 	.db #0x26	; 38
      000359 26                    1100 	.db #0x26	; 38
      00035A 26                    1101 	.db #0x26	; 38
      00035B 26                    1102 	.db #0x26	; 38
      00035C 26                    1103 	.db #0x26	; 38
      00035D 26                    1104 	.db #0x26	; 38
      00035E 26                    1105 	.db #0x26	; 38
      00035F 26                    1106 	.db #0x26	; 38
      000360 26                    1107 	.db #0x26	; 38
      000361 26                    1108 	.db #0x26	; 38
      000362 26                    1109 	.db #0x26	; 38
      000363 26                    1110 	.db #0x26	; 38
      000364 26                    1111 	.db #0x26	; 38
      000365 26                    1112 	.db #0x26	; 38
      000366 2C                    1113 	.db #0x2c	; 44
      000367 26                    1114 	.db #0x26	; 38
      000368 26                    1115 	.db #0x26	; 38
      000369 26                    1116 	.db #0x26	; 38
      00036A 26                    1117 	.db #0x26	; 38
      00036B 26                    1118 	.db #0x26	; 38
      00036C 26                    1119 	.db #0x26	; 38
      00036D 26                    1120 	.db #0x26	; 38
      00036E 26                    1121 	.db #0x26	; 38
      00036F 26                    1122 	.db #0x26	; 38
      000370 2B                    1123 	.db #0x2b	; 43
      000371 26                    1124 	.db #0x26	; 38
      000372 26                    1125 	.db #0x26	; 38
      000373 26                    1126 	.db #0x26	; 38
      000374 26                    1127 	.db #0x26	; 38
      000375 26                    1128 	.db #0x26	; 38
      000376 26                    1129 	.db #0x26	; 38
      000377 26                    1130 	.db #0x26	; 38
      000378 26                    1131 	.db #0x26	; 38
      000379 26                    1132 	.db #0x26	; 38
      00037A 26                    1133 	.db #0x26	; 38
      00037B 26                    1134 	.db #0x26	; 38
      00037C 26                    1135 	.db #0x26	; 38
      00037D 26                    1136 	.db #0x26	; 38
      00037E 26                    1137 	.db #0x26	; 38
      00037F 26                    1138 	.db #0x26	; 38
      000380 26                    1139 	.db #0x26	; 38
      000381 26                    1140 	.db #0x26	; 38
      000382 26                    1141 	.db #0x26	; 38
      000383 26                    1142 	.db #0x26	; 38
      000384 26                    1143 	.db #0x26	; 38
      000385 26                    1144 	.db #0x26	; 38
      000386 26                    1145 	.db #0x26	; 38
      000387 26                    1146 	.db #0x26	; 38
      000388 26                    1147 	.db #0x26	; 38
      000389 26                    1148 	.db #0x26	; 38
      00038A 26                    1149 	.db #0x26	; 38
      00038B 26                    1150 	.db #0x26	; 38
      00038C 26                    1151 	.db #0x26	; 38
      00038D 26                    1152 	.db #0x26	; 38
      00038E 26                    1153 	.db #0x26	; 38
      00038F 26                    1154 	.db #0x26	; 38
      000390 26                    1155 	.db #0x26	; 38
      000391 26                    1156 	.db #0x26	; 38
      000392 26                    1157 	.db #0x26	; 38
      000393 26                    1158 	.db #0x26	; 38
      000394 26                    1159 	.db #0x26	; 38
      000395 26                    1160 	.db #0x26	; 38
      000396 26                    1161 	.db #0x26	; 38
      000397 26                    1162 	.db #0x26	; 38
      000398 27                    1163 	.db #0x27	; 39
      000399 28                    1164 	.db #0x28	; 40
      00039A 26                    1165 	.db #0x26	; 38
      00039B 26                    1166 	.db #0x26	; 38
      00039C 26                    1167 	.db #0x26	; 38
      00039D 26                    1168 	.db #0x26	; 38
      00039E 26                    1169 	.db #0x26	; 38
      00039F 26                    1170 	.db #0x26	; 38
      0003A0 26                    1171 	.db #0x26	; 38
      0003A1 26                    1172 	.db #0x26	; 38
      0003A2 26                    1173 	.db #0x26	; 38
      0003A3 26                    1174 	.db #0x26	; 38
      0003A4 26                    1175 	.db #0x26	; 38
      0003A5 26                    1176 	.db #0x26	; 38
      0003A6 26                    1177 	.db #0x26	; 38
      0003A7 26                    1178 	.db #0x26	; 38
      0003A8 26                    1179 	.db #0x26	; 38
      0003A9 26                    1180 	.db #0x26	; 38
      0003AA 26                    1181 	.db #0x26	; 38
      0003AB 26                    1182 	.db #0x26	; 38
      0003AC 26                    1183 	.db #0x26	; 38
      0003AD 2B                    1184 	.db #0x2b	; 43
      0003AE 26                    1185 	.db #0x26	; 38
      0003AF 26                    1186 	.db #0x26	; 38
      0003B0 26                    1187 	.db #0x26	; 38
      0003B1 26                    1188 	.db #0x26	; 38
      0003B2 26                    1189 	.db #0x26	; 38
      0003B3 26                    1190 	.db #0x26	; 38
      0003B4 26                    1191 	.db #0x26	; 38
      0003B5 25                    1192 	.db #0x25	; 37
      0003B6 26                    1193 	.db #0x26	; 38
      0003B7 26                    1194 	.db #0x26	; 38
      0003B8 2A                    1195 	.db #0x2a	; 42
      0003B9 29                    1196 	.db #0x29	; 41
      0003BA 26                    1197 	.db #0x26	; 38
      0003BB 26                    1198 	.db #0x26	; 38
      0003BC 26                    1199 	.db #0x26	; 38
      0003BD 26                    1200 	.db #0x26	; 38
      0003BE 26                    1201 	.db #0x26	; 38
      0003BF 26                    1202 	.db #0x26	; 38
      0003C0 26                    1203 	.db #0x26	; 38
      0003C1 26                    1204 	.db #0x26	; 38
      0003C2 2B                    1205 	.db #0x2b	; 43
      0003C3 26                    1206 	.db #0x26	; 38
      0003C4 26                    1207 	.db #0x26	; 38
      0003C5 26                    1208 	.db #0x26	; 38
      0003C6 26                    1209 	.db #0x26	; 38
      0003C7 26                    1210 	.db #0x26	; 38
      0003C8 26                    1211 	.db #0x26	; 38
      0003C9 2C                    1212 	.db #0x2c	; 44
      0003CA 26                    1213 	.db #0x26	; 38
      0003CB 26                    1214 	.db #0x26	; 38
      0003CC 26                    1215 	.db #0x26	; 38
      0003CD 26                    1216 	.db #0x26	; 38
      0003CE 26                    1217 	.db #0x26	; 38
      0003CF 26                    1218 	.db #0x26	; 38
      0003D0 26                    1219 	.db #0x26	; 38
      0003D1 26                    1220 	.db #0x26	; 38
      0003D2 26                    1221 	.db #0x26	; 38
      0003D3 26                    1222 	.db #0x26	; 38
      0003D4 26                    1223 	.db #0x26	; 38
      0003D5 2C                    1224 	.db #0x2c	; 44
      0003D6 26                    1225 	.db #0x26	; 38
      0003D7 26                    1226 	.db #0x26	; 38
      0003D8 26                    1227 	.db #0x26	; 38
      0003D9 26                    1228 	.db #0x26	; 38
      0003DA 26                    1229 	.db #0x26	; 38
      0003DB 26                    1230 	.db #0x26	; 38
      0003DC 26                    1231 	.db #0x26	; 38
      0003DD 26                    1232 	.db #0x26	; 38
      0003DE 26                    1233 	.db #0x26	; 38
      0003DF 26                    1234 	.db #0x26	; 38
      0003E0 26                    1235 	.db #0x26	; 38
      0003E1 26                    1236 	.db #0x26	; 38
      0003E2 26                    1237 	.db #0x26	; 38
      0003E3 26                    1238 	.db #0x26	; 38
      0003E4 26                    1239 	.db #0x26	; 38
      0003E5 26                    1240 	.db #0x26	; 38
      0003E6 26                    1241 	.db #0x26	; 38
      0003E7 26                    1242 	.db #0x26	; 38
      0003E8 26                    1243 	.db #0x26	; 38
      0003E9 26                    1244 	.db #0x26	; 38
      0003EA 26                    1245 	.db #0x26	; 38
      0003EB 26                    1246 	.db #0x26	; 38
      0003EC 26                    1247 	.db #0x26	; 38
      0003ED 26                    1248 	.db #0x26	; 38
      0003EE 26                    1249 	.db #0x26	; 38
      0003EF 26                    1250 	.db #0x26	; 38
      0003F0 26                    1251 	.db #0x26	; 38
      0003F1 26                    1252 	.db #0x26	; 38
      0003F2 26                    1253 	.db #0x26	; 38
      0003F3 26                    1254 	.db #0x26	; 38
      0003F4 26                    1255 	.db #0x26	; 38
      0003F5 26                    1256 	.db #0x26	; 38
      0003F6 26                    1257 	.db #0x26	; 38
      0003F7 26                    1258 	.db #0x26	; 38
      0003F8 26                    1259 	.db #0x26	; 38
      0003F9 26                    1260 	.db #0x26	; 38
      0003FA 26                    1261 	.db #0x26	; 38
      0003FB 26                    1262 	.db #0x26	; 38
      0003FC 26                    1263 	.db #0x26	; 38
      0003FD 26                    1264 	.db #0x26	; 38
      0003FE 26                    1265 	.db #0x26	; 38
      0003FF 26                    1266 	.db #0x26	; 38
      000400 26                    1267 	.db #0x26	; 38
      000401 26                    1268 	.db #0x26	; 38
      000402 26                    1269 	.db #0x26	; 38
      000403 26                    1270 	.db #0x26	; 38
      000404 26                    1271 	.db #0x26	; 38
      000405 26                    1272 	.db #0x26	; 38
      000406 26                    1273 	.db #0x26	; 38
      000407 26                    1274 	.db #0x26	; 38
      000408 26                    1275 	.db #0x26	; 38
      000409 26                    1276 	.db #0x26	; 38
      00040A 26                    1277 	.db #0x26	; 38
      00040B 26                    1278 	.db #0x26	; 38
      00040C 26                    1279 	.db #0x26	; 38
      00040D 2B                    1280 	.db #0x2b	; 43
      00040E 26                    1281 	.db #0x26	; 38
      00040F 26                    1282 	.db #0x26	; 38
      000410 26                    1283 	.db #0x26	; 38
      000411 26                    1284 	.db #0x26	; 38
      000412 26                    1285 	.db #0x26	; 38
      000413 26                    1286 	.db #0x26	; 38
      000414 26                    1287 	.db #0x26	; 38
      000415 26                    1288 	.db #0x26	; 38
      000416 26                    1289 	.db #0x26	; 38
      000417 26                    1290 	.db #0x26	; 38
      000418 26                    1291 	.db #0x26	; 38
      000419 26                    1292 	.db #0x26	; 38
      00041A 26                    1293 	.db #0x26	; 38
      00041B 26                    1294 	.db #0x26	; 38
      00041C 26                    1295 	.db #0x26	; 38
      00041D 26                    1296 	.db #0x26	; 38
      00041E 26                    1297 	.db #0x26	; 38
      00041F 26                    1298 	.db #0x26	; 38
      000420 2B                    1299 	.db #0x2b	; 43
      000421 26                    1300 	.db #0x26	; 38
      000422 26                    1301 	.db #0x26	; 38
      000423 26                    1302 	.db #0x26	; 38
      000424 26                    1303 	.db #0x26	; 38
      000425 26                    1304 	.db #0x26	; 38
      000426 26                    1305 	.db #0x26	; 38
      000427 26                    1306 	.db #0x26	; 38
      000428 26                    1307 	.db #0x26	; 38
      000429 26                    1308 	.db #0x26	; 38
      00042A 26                    1309 	.db #0x26	; 38
      00042B 26                    1310 	.db #0x26	; 38
      00042C 26                    1311 	.db #0x26	; 38
      00042D 26                    1312 	.db #0x26	; 38
      00042E 26                    1313 	.db #0x26	; 38
      00042F 26                    1314 	.db #0x26	; 38
      000430 26                    1315 	.db #0x26	; 38
      000431 26                    1316 	.db #0x26	; 38
      000432 26                    1317 	.db #0x26	; 38
      000433 26                    1318 	.db #0x26	; 38
      000434 26                    1319 	.db #0x26	; 38
      000435 26                    1320 	.db #0x26	; 38
      000436 26                    1321 	.db #0x26	; 38
      000437 2C                    1322 	.db #0x2c	; 44
      000438 26                    1323 	.db #0x26	; 38
      000439 26                    1324 	.db #0x26	; 38
      00043A 26                    1325 	.db #0x26	; 38
      00043B 26                    1326 	.db #0x26	; 38
      00043C 26                    1327 	.db #0x26	; 38
      00043D 26                    1328 	.db #0x26	; 38
      00043E 26                    1329 	.db #0x26	; 38
      00043F 26                    1330 	.db #0x26	; 38
      000440 26                    1331 	.db #0x26	; 38
      000441 26                    1332 	.db #0x26	; 38
      000442 26                    1333 	.db #0x26	; 38
      000443 26                    1334 	.db #0x26	; 38
      000444 26                    1335 	.db #0x26	; 38
      000445 26                    1336 	.db #0x26	; 38
      000446 26                    1337 	.db #0x26	; 38
      000447 26                    1338 	.db #0x26	; 38
      000448 25                    1339 	.db #0x25	; 37
      000449 2C                    1340 	.db #0x2c	; 44
      00044A 26                    1341 	.db #0x26	; 38
      00044B 26                    1342 	.db #0x26	; 38
      00044C 26                    1343 	.db #0x26	; 38
      00044D 26                    1344 	.db #0x26	; 38
      00044E 26                    1345 	.db #0x26	; 38
      00044F 26                    1346 	.db #0x26	; 38
      000450 26                    1347 	.db #0x26	; 38
      000451 26                    1348 	.db #0x26	; 38
      000452 26                    1349 	.db #0x26	; 38
      000453 26                    1350 	.db #0x26	; 38
      000454 26                    1351 	.db #0x26	; 38
      000455 26                    1352 	.db #0x26	; 38
      000456 26                    1353 	.db #0x26	; 38
      000457 26                    1354 	.db #0x26	; 38
      000458 26                    1355 	.db #0x26	; 38
      000459 26                    1356 	.db #0x26	; 38
      00045A 2B                    1357 	.db #0x2b	; 43
      00045B 26                    1358 	.db #0x26	; 38
      00045C 26                    1359 	.db #0x26	; 38
      00045D 26                    1360 	.db #0x26	; 38
      00045E 26                    1361 	.db #0x26	; 38
      00045F 26                    1362 	.db #0x26	; 38
      000460 26                    1363 	.db #0x26	; 38
      000461 26                    1364 	.db #0x26	; 38
      000462 26                    1365 	.db #0x26	; 38
      000463 26                    1366 	.db #0x26	; 38
      000464 26                    1367 	.db #0x26	; 38
      000465 26                    1368 	.db #0x26	; 38
      000466 26                    1369 	.db #0x26	; 38
      000467 26                    1370 	.db #0x26	; 38
      000468 26                    1371 	.db #0x26	; 38
      000469 26                    1372 	.db #0x26	; 38
      00046A 26                    1373 	.db #0x26	; 38
      00046B 26                    1374 	.db #0x26	; 38
      00046C 26                    1375 	.db #0x26	; 38
      00046D 26                    1376 	.db #0x26	; 38
      00046E 26                    1377 	.db #0x26	; 38
      00046F 26                    1378 	.db #0x26	; 38
      000470 26                    1379 	.db #0x26	; 38
      000471 26                    1380 	.db #0x26	; 38
      000472 27                    1381 	.db #0x27	; 39
      000473 28                    1382 	.db #0x28	; 40
      000474 26                    1383 	.db #0x26	; 38
      000475 26                    1384 	.db #0x26	; 38
      000476 26                    1385 	.db #0x26	; 38
      000477 26                    1386 	.db #0x26	; 38
      000478 26                    1387 	.db #0x26	; 38
      000479 26                    1388 	.db #0x26	; 38
      00047A 26                    1389 	.db #0x26	; 38
      00047B 26                    1390 	.db #0x26	; 38
      00047C 26                    1391 	.db #0x26	; 38
      00047D 26                    1392 	.db #0x26	; 38
      00047E 26                    1393 	.db #0x26	; 38
      00047F 26                    1394 	.db #0x26	; 38
      000480 26                    1395 	.db #0x26	; 38
      000481 26                    1396 	.db #0x26	; 38
      000482 26                    1397 	.db #0x26	; 38
      000483 26                    1398 	.db #0x26	; 38
      000484 26                    1399 	.db #0x26	; 38
      000485 26                    1400 	.db #0x26	; 38
      000486 2B                    1401 	.db #0x2b	; 43
      000487                       1402 _backgroundtiles:
      000487 40                    1403 	.db #0x40	; 64
      000488 38                    1404 	.db #0x38	; 56	'8'
      000489 3A                    1405 	.db #0x3a	; 58
      00048A 44                    1406 	.db #0x44	; 68	'D'
      00048B 7C                    1407 	.db #0x7c	; 124
      00048C 9A                    1408 	.db #0x9a	; 154
      00048D 5E                    1409 	.db #0x5e	; 94
      00048E E9                    1410 	.db #0xe9	; 233
      00048F 7A                    1411 	.db #0x7a	; 122	'z'
      000490 87                    1412 	.db #0x87	; 135
      000491 76                    1413 	.db #0x76	; 118	'v'
      000492 B9                    1414 	.db #0xb9	; 185
      000493 3C                    1415 	.db #0x3c	; 60
      000494 72                    1416 	.db #0x72	; 114	'r'
      000495 00                    1417 	.db #0x00	; 0
      000496 3C                    1418 	.db #0x3c	; 60
      000497 00                    1419 	.db #0x00	; 0
      000498 00                    1420 	.db #0x00	; 0
      000499 00                    1421 	.db #0x00	; 0
      00049A 00                    1422 	.db #0x00	; 0
      00049B 00                    1423 	.db #0x00	; 0
      00049C 00                    1424 	.db #0x00	; 0
      00049D 00                    1425 	.db #0x00	; 0
      00049E 00                    1426 	.db #0x00	; 0
      00049F 00                    1427 	.db #0x00	; 0
      0004A0 00                    1428 	.db #0x00	; 0
      0004A1 00                    1429 	.db #0x00	; 0
      0004A2 00                    1430 	.db #0x00	; 0
      0004A3 00                    1431 	.db #0x00	; 0
      0004A4 00                    1432 	.db #0x00	; 0
      0004A5 00                    1433 	.db #0x00	; 0
      0004A6 00                    1434 	.db #0x00	; 0
      0004A7 00                    1435 	.db #0x00	; 0
      0004A8 0F                    1436 	.db #0x0f	; 15
      0004A9 08                    1437 	.db #0x08	; 8
      0004AA 17                    1438 	.db #0x17	; 23
      0004AB 1C                    1439 	.db #0x1c	; 28
      0004AC 23                    1440 	.db #0x23	; 35
      0004AD 3E                    1441 	.db #0x3e	; 62
      0004AE 41                    1442 	.db #0x41	; 65	'A'
      0004AF 1B                    1443 	.db #0x1b	; 27
      0004B0 64                    1444 	.db #0x64	; 100	'd'
      0004B1 31                    1445 	.db #0x31	; 49	'1'
      0004B2 4E                    1446 	.db #0x4e	; 78	'N'
      0004B3 B1                    1447 	.db #0xb1	; 177
      0004B4 CE                    1448 	.db #0xce	; 206
      0004B5 BB                    1449 	.db #0xbb	; 187
      0004B6 C4                    1450 	.db #0xc4	; 196
      0004B7 00                    1451 	.db #0x00	; 0
      0004B8 F8                    1452 	.db #0xf8	; 248
      0004B9 00                    1453 	.db #0x00	; 0
      0004BA FC                    1454 	.db #0xfc	; 252
      0004BB E0                    1455 	.db #0xe0	; 224
      0004BC 1E                    1456 	.db #0x1e	; 30
      0004BD F0                    1457 	.db #0xf0	; 240
      0004BE 0F                    1458 	.db #0x0f	; 15
      0004BF BE                    1459 	.db #0xbe	; 190
      0004C0 01                    1460 	.db #0x01	; 1
      0004C1 BC                    1461 	.db #0xbc	; 188
      0004C2 02                    1462 	.db #0x02	; 2
      0004C3 CE                    1463 	.db #0xce	; 206
      0004C4 01                    1464 	.db #0x01	; 1
      0004C5 F6                    1465 	.db #0xf6	; 246
      0004C6 61                    1466 	.db #0x61	; 97	'a'
      0004C7 F4                    1467 	.db #0xf4	; 244
      0004C8 02                    1468 	.db #0x02	; 2
      0004C9 94                    1469 	.db #0x94	; 148
      0004CA 62                    1470 	.db #0x62	; 98	'b'
      0004CB E4                    1471 	.db #0xe4	; 228
      0004CC 02                    1472 	.db #0x02	; 2
      0004CD 6C                    1473 	.db #0x6c	; 108	'l'
      0004CE 82                    1474 	.db #0x82	; 130
      0004CF 70                    1475 	.db #0x70	; 112	'p'
      0004D0 8C                    1476 	.db #0x8c	; 140
      0004D1 60                    1477 	.db #0x60	; 96
      0004D2 90                    1478 	.db #0x90	; 144
      0004D3 00                    1479 	.db #0x00	; 0
      0004D4 E0                    1480 	.db #0xe0	; 224
      0004D5 80                    1481 	.db #0x80	; 128
      0004D6 80                    1482 	.db #0x80	; 128
      0004D7 8E                    1483 	.db #0x8e	; 142
      0004D8 F7                    1484 	.db #0xf7	; 247
      0004D9 8F                    1485 	.db #0x8f	; 143
      0004DA F3                    1486 	.db #0xf3	; 243
      0004DB 86                    1487 	.db #0x86	; 134
      0004DC F9                    1488 	.db #0xf9	; 249
      0004DD 42                    1489 	.db #0x42	; 66	'B'
      0004DE 7D                    1490 	.db #0x7d	; 125
      0004DF 80                    1491 	.db #0x80	; 128
      0004E0 FF                    1492 	.db #0xff	; 255
      0004E1 44                    1493 	.db #0x44	; 68	'D'
      0004E2 7F                    1494 	.db #0x7f	; 127
      0004E3 28                    1495 	.db #0x28	; 40
      0004E4 3F                    1496 	.db #0x3f	; 63
      0004E5 07                    1497 	.db #0x07	; 7
      0004E6 07                    1498 	.db #0x07	; 7
      0004E7 00                    1499 	.db #0x00	; 0
      0004E8 00                    1500 	.db #0x00	; 0
      0004E9 08                    1501 	.db #0x08	; 8
      0004EA 00                    1502 	.db #0x00	; 0
      0004EB 08                    1503 	.db #0x08	; 8
      0004EC 00                    1504 	.db #0x00	; 0
      0004ED 1C                    1505 	.db #0x1c	; 28
      0004EE 00                    1506 	.db #0x00	; 0
      0004EF 7F                    1507 	.db #0x7f	; 127
      0004F0 00                    1508 	.db #0x00	; 0
      0004F1 1C                    1509 	.db #0x1c	; 28
      0004F2 00                    1510 	.db #0x00	; 0
      0004F3 08                    1511 	.db #0x08	; 8
      0004F4 00                    1512 	.db #0x00	; 0
      0004F5 08                    1513 	.db #0x08	; 8
      0004F6 00                    1514 	.db #0x00	; 0
      0004F7 00                    1515 	.db #0x00	; 0
      0004F8 00                    1516 	.db #0x00	; 0
      0004F9 00                    1517 	.db #0x00	; 0
      0004FA 00                    1518 	.db #0x00	; 0
      0004FB 00                    1519 	.db #0x00	; 0
      0004FC 00                    1520 	.db #0x00	; 0
      0004FD 10                    1521 	.db #0x10	; 16
      0004FE 00                    1522 	.db #0x00	; 0
      0004FF 00                    1523 	.db #0x00	; 0
      000500 00                    1524 	.db #0x00	; 0
      000501 00                    1525 	.db #0x00	; 0
      000502 00                    1526 	.db #0x00	; 0
      000503 00                    1527 	.db #0x00	; 0
      000504 00                    1528 	.db #0x00	; 0
      000505 00                    1529 	.db #0x00	; 0
      000506 00                    1530 	.db #0x00	; 0
      000507                       1531 _healthblock:
      000507 FE                    1532 	.db #0xfe	; 254
      000508 FE                    1533 	.db #0xfe	; 254
      000509 FE                    1534 	.db #0xfe	; 254
      00050A FE                    1535 	.db #0xfe	; 254
      00050B FE                    1536 	.db #0xfe	; 254
      00050C FE                    1537 	.db #0xfe	; 254
      00050D FE                    1538 	.db #0xfe	; 254
      00050E FE                    1539 	.db #0xfe	; 254
      00050F FE                    1540 	.db #0xfe	; 254
      000510 FE                    1541 	.db #0xfe	; 254
      000511 FE                    1542 	.db #0xfe	; 254
      000512 FE                    1543 	.db #0xfe	; 254
      000513 FE                    1544 	.db #0xfe	; 254
      000514 FE                    1545 	.db #0xfe	; 254
      000515 00                    1546 	.db #0x00	; 0
      000516 00                    1547 	.db #0x00	; 0
      000517                       1548 _enemyOptionCount:
      000517 05                    1549 	.db #0x05	; 5
      000518                       1550 _enemy1:
      000518 66                    1551 	.db #0x66	; 102	'f'
      000519 24                    1552 	.db #0x24	; 36
      00051A E7                    1553 	.db #0xe7	; 231
      00051B 66                    1554 	.db #0x66	; 102	'f'
      00051C F7                    1555 	.db #0xf7	; 247
      00051D E7                    1556 	.db #0xe7	; 231
      00051E 1C                    1557 	.db #0x1c	; 28
      00051F 18                    1558 	.db #0x18	; 24
      000520 38                    1559 	.db #0x38	; 56	'8'
      000521 18                    1560 	.db #0x18	; 24
      000522 EF                    1561 	.db #0xef	; 239
      000523 E7                    1562 	.db #0xe7	; 231
      000524 E7                    1563 	.db #0xe7	; 231
      000525 66                    1564 	.db #0x66	; 102	'f'
      000526 66                    1565 	.db #0x66	; 102	'f'
      000527 24                    1566 	.db #0x24	; 36
      000528 00                    1567 	.db #0x00	; 0
      000529 00                    1568 	.db #0x00	; 0
      00052A 00                    1569 	.db #0x00	; 0
      00052B 00                    1570 	.db #0x00	; 0
      00052C 00                    1571 	.db #0x00	; 0
      00052D 00                    1572 	.db #0x00	; 0
      00052E 00                    1573 	.db #0x00	; 0
      00052F 00                    1574 	.db #0x00	; 0
      000530 00                    1575 	.db #0x00	; 0
      000531 00                    1576 	.db #0x00	; 0
      000532 00                    1577 	.db #0x00	; 0
      000533 00                    1578 	.db #0x00	; 0
      000534 00                    1579 	.db #0x00	; 0
      000535 00                    1580 	.db #0x00	; 0
      000536 00                    1581 	.db #0x00	; 0
      000537 00                    1582 	.db #0x00	; 0
      000538 3C                    1583 	.db #0x3c	; 60
      000539 3C                    1584 	.db #0x3c	; 60
      00053A 5E                    1585 	.db #0x5e	; 94
      00053B 62                    1586 	.db #0x62	; 98	'b'
      00053C 8F                    1587 	.db #0x8f	; 143
      00053D F1                    1588 	.db #0xf1	; 241
      00053E C7                    1589 	.db #0xc7	; 199
      00053F F9                    1590 	.db #0xf9	; 249
      000540 C3                    1591 	.db #0xc3	; 195
      000541 FD                    1592 	.db #0xfd	; 253
      000542 E1                    1593 	.db #0xe1	; 225
      000543 FF                    1594 	.db #0xff	; 255
      000544 7A                    1595 	.db #0x7a	; 122	'z'
      000545 7E                    1596 	.db #0x7e	; 126
      000546 3C                    1597 	.db #0x3c	; 60
      000547 3C                    1598 	.db #0x3c	; 60
      000548 00                    1599 	.db #0x00	; 0
      000549 00                    1600 	.db #0x00	; 0
      00054A 00                    1601 	.db #0x00	; 0
      00054B 00                    1602 	.db #0x00	; 0
      00054C 00                    1603 	.db #0x00	; 0
      00054D 00                    1604 	.db #0x00	; 0
      00054E 00                    1605 	.db #0x00	; 0
      00054F 00                    1606 	.db #0x00	; 0
      000550 00                    1607 	.db #0x00	; 0
      000551 00                    1608 	.db #0x00	; 0
      000552 00                    1609 	.db #0x00	; 0
      000553 00                    1610 	.db #0x00	; 0
      000554 00                    1611 	.db #0x00	; 0
      000555 00                    1612 	.db #0x00	; 0
      000556 00                    1613 	.db #0x00	; 0
      000557 00                    1614 	.db #0x00	; 0
      000558 3C                    1615 	.db #0x3c	; 60
      000559 3E                    1616 	.db #0x3e	; 62
      00055A 20                    1617 	.db #0x20	; 32
      00055B 38                    1618 	.db #0x38	; 56	'8'
      00055C 44                    1619 	.db #0x44	; 68	'D'
      00055D 78                    1620 	.db #0x78	; 120	'x'
      00055E BA                    1621 	.db #0xba	; 186
      00055F C4                    1622 	.db #0xc4	; 196
      000560 BA                    1623 	.db #0xba	; 186
      000561 C4                    1624 	.db #0xc4	; 196
      000562 44                    1625 	.db #0x44	; 68	'D'
      000563 78                    1626 	.db #0x78	; 120	'x'
      000564 20                    1627 	.db #0x20	; 32
      000565 38                    1628 	.db #0x38	; 56	'8'
      000566 3C                    1629 	.db #0x3c	; 60
      000567 3E                    1630 	.db #0x3e	; 62
      000568                       1631 _largeenemies:
      000568 00                    1632 	.db #0x00	; 0
      000569 00                    1633 	.db #0x00	; 0
      00056A 00                    1634 	.db #0x00	; 0
      00056B 00                    1635 	.db #0x00	; 0
      00056C 00                    1636 	.db #0x00	; 0
      00056D 00                    1637 	.db #0x00	; 0
      00056E 00                    1638 	.db #0x00	; 0
      00056F 00                    1639 	.db #0x00	; 0
      000570 00                    1640 	.db #0x00	; 0
      000571 00                    1641 	.db #0x00	; 0
      000572 00                    1642 	.db #0x00	; 0
      000573 00                    1643 	.db #0x00	; 0
      000574 00                    1644 	.db #0x00	; 0
      000575 00                    1645 	.db #0x00	; 0
      000576 7F                    1646 	.db #0x7f	; 127
      000577 7F                    1647 	.db #0x7f	; 127
      000578 7F                    1648 	.db #0x7f	; 127
      000579 7F                    1649 	.db #0x7f	; 127
      00057A 00                    1650 	.db #0x00	; 0
      00057B 00                    1651 	.db #0x00	; 0
      00057C 00                    1652 	.db #0x00	; 0
      00057D 00                    1653 	.db #0x00	; 0
      00057E 00                    1654 	.db #0x00	; 0
      00057F 00                    1655 	.db #0x00	; 0
      000580 00                    1656 	.db #0x00	; 0
      000581 00                    1657 	.db #0x00	; 0
      000582 00                    1658 	.db #0x00	; 0
      000583 00                    1659 	.db #0x00	; 0
      000584 00                    1660 	.db #0x00	; 0
      000585 00                    1661 	.db #0x00	; 0
      000586 00                    1662 	.db #0x00	; 0
      000587 00                    1663 	.db #0x00	; 0
      000588 00                    1664 	.db #0x00	; 0
      000589 00                    1665 	.db #0x00	; 0
      00058A 40                    1666 	.db #0x40	; 64
      00058B 40                    1667 	.db #0x40	; 64
      00058C 60                    1668 	.db #0x60	; 96
      00058D 60                    1669 	.db #0x60	; 96
      00058E 70                    1670 	.db #0x70	; 112	'p'
      00058F 70                    1671 	.db #0x70	; 112	'p'
      000590 78                    1672 	.db #0x78	; 120	'x'
      000591 78                    1673 	.db #0x78	; 120	'x'
      000592 7C                    1674 	.db #0x7c	; 124
      000593 7C                    1675 	.db #0x7c	; 124
      000594 7E                    1676 	.db #0x7e	; 126
      000595 7E                    1677 	.db #0x7e	; 126
      000596 FF                    1678 	.db #0xff	; 255
      000597 FF                    1679 	.db #0xff	; 255
      000598 FF                    1680 	.db #0xff	; 255
      000599 FF                    1681 	.db #0xff	; 255
      00059A 7E                    1682 	.db #0x7e	; 126
      00059B 7E                    1683 	.db #0x7e	; 126
      00059C 7C                    1684 	.db #0x7c	; 124
      00059D 7C                    1685 	.db #0x7c	; 124
      00059E 78                    1686 	.db #0x78	; 120	'x'
      00059F 78                    1687 	.db #0x78	; 120	'x'
      0005A0 70                    1688 	.db #0x70	; 112	'p'
      0005A1 70                    1689 	.db #0x70	; 112	'p'
      0005A2 60                    1690 	.db #0x60	; 96
      0005A3 60                    1691 	.db #0x60	; 96
      0005A4 40                    1692 	.db #0x40	; 64
      0005A5 40                    1693 	.db #0x40	; 64
      0005A6 00                    1694 	.db #0x00	; 0
      0005A7 00                    1695 	.db #0x00	; 0
      0005A8 07                    1696 	.db #0x07	; 7
      0005A9 00                    1697 	.db #0x00	; 0
      0005AA 18                    1698 	.db #0x18	; 24
      0005AB 00                    1699 	.db #0x00	; 0
      0005AC 20                    1700 	.db #0x20	; 32
      0005AD 00                    1701 	.db #0x00	; 0
      0005AE 4C                    1702 	.db #0x4c	; 76	'L'
      0005AF 0C                    1703 	.db #0x0c	; 12
      0005B0 43                    1704 	.db #0x43	; 67	'C'
      0005B1 0F                    1705 	.db #0x0f	; 15
      0005B2 84                    1706 	.db #0x84	; 132
      0005B3 27                    1707 	.db #0x27	; 39
      0005B4 80                    1708 	.db #0x80	; 128
      0005B5 13                    1709 	.db #0x13	; 19
      0005B6 83                    1710 	.db #0x83	; 131
      0005B7 2A                    1711 	.db #0x2a	; 42
      0005B8 83                    1712 	.db #0x83	; 131
      0005B9 16                    1713 	.db #0x16	; 22
      0005BA 80                    1714 	.db #0x80	; 128
      0005BB 23                    1715 	.db #0x23	; 35
      0005BC 84                    1716 	.db #0x84	; 132
      0005BD 07                    1717 	.db #0x07	; 7
      0005BE 43                    1718 	.db #0x43	; 67	'C'
      0005BF 0F                    1719 	.db #0x0f	; 15
      0005C0 4C                    1720 	.db #0x4c	; 76	'L'
      0005C1 0C                    1721 	.db #0x0c	; 12
      0005C2 20                    1722 	.db #0x20	; 32
      0005C3 00                    1723 	.db #0x00	; 0
      0005C4 18                    1724 	.db #0x18	; 24
      0005C5 00                    1725 	.db #0x00	; 0
      0005C6 07                    1726 	.db #0x07	; 7
      0005C7 00                    1727 	.db #0x00	; 0
      0005C8 E0                    1728 	.db #0xe0	; 224
      0005C9 00                    1729 	.db #0x00	; 0
      0005CA 18                    1730 	.db #0x18	; 24
      0005CB 00                    1731 	.db #0x00	; 0
      0005CC 04                    1732 	.db #0x04	; 4
      0005CD 00                    1733 	.db #0x00	; 0
      0005CE 02                    1734 	.db #0x02	; 2
      0005CF 00                    1735 	.db #0x00	; 0
      0005D0 02                    1736 	.db #0x02	; 2
      0005D1 00                    1737 	.db #0x00	; 0
      0005D2 C1                    1738 	.db #0xc1	; 193
      0005D3 C0                    1739 	.db #0xc0	; 192
      0005D4 11                    1740 	.db #0x11	; 17
      0005D5 F0                    1741 	.db #0xf0	; 240
      0005D6 E5                    1742 	.db #0xe5	; 229
      0005D7 1C                    1743 	.db #0x1c	; 28
      0005D8 E5                    1744 	.db #0xe5	; 229
      0005D9 1C                    1745 	.db #0x1c	; 28
      0005DA 11                    1746 	.db #0x11	; 17
      0005DB F0                    1747 	.db #0xf0	; 240
      0005DC C1                    1748 	.db #0xc1	; 193
      0005DD C0                    1749 	.db #0xc0	; 192
      0005DE 02                    1750 	.db #0x02	; 2
      0005DF 00                    1751 	.db #0x00	; 0
      0005E0 02                    1752 	.db #0x02	; 2
      0005E1 00                    1753 	.db #0x00	; 0
      0005E2 04                    1754 	.db #0x04	; 4
      0005E3 00                    1755 	.db #0x00	; 0
      0005E4 18                    1756 	.db #0x18	; 24
      0005E5 00                    1757 	.db #0x00	; 0
      0005E6 E0                    1758 	.db #0xe0	; 224
      0005E7 00                    1759 	.db #0x00	; 0
      0005E8                       1760 _ProjectileTiles:
      0005E8 24                    1761 	.db #0x24	; 36
      0005E9 18                    1762 	.db #0x18	; 24
      0005EA 18                    1763 	.db #0x18	; 24
      0005EB 3C                    1764 	.db #0x3c	; 60
      0005EC 18                    1765 	.db #0x18	; 24
      0005ED 3C                    1766 	.db #0x3c	; 60
      0005EE 24                    1767 	.db #0x24	; 36
      0005EF 18                    1768 	.db #0x18	; 24
      0005F0 00                    1769 	.db #0x00	; 0
      0005F1 00                    1770 	.db #0x00	; 0
      0005F2 00                    1771 	.db #0x00	; 0
      0005F3 00                    1772 	.db #0x00	; 0
      0005F4 00                    1773 	.db #0x00	; 0
      0005F5 00                    1774 	.db #0x00	; 0
      0005F6 00                    1775 	.db #0x00	; 0
      0005F7 00                    1776 	.db #0x00	; 0
      0005F8 00                    1777 	.db #0x00	; 0
      0005F9 00                    1778 	.db #0x00	; 0
      0005FA 00                    1779 	.db #0x00	; 0
      0005FB 00                    1780 	.db #0x00	; 0
      0005FC 00                    1781 	.db #0x00	; 0
      0005FD 00                    1782 	.db #0x00	; 0
      0005FE 00                    1783 	.db #0x00	; 0
      0005FF 00                    1784 	.db #0x00	; 0
      000600 00                    1785 	.db #0x00	; 0
      000601 00                    1786 	.db #0x00	; 0
      000602 00                    1787 	.db #0x00	; 0
      000603 00                    1788 	.db #0x00	; 0
      000604 00                    1789 	.db #0x00	; 0
      000605 00                    1790 	.db #0x00	; 0
      000606 00                    1791 	.db #0x00	; 0
      000607 00                    1792 	.db #0x00	; 0
      000608 00                    1793 	.db #0x00	; 0
      000609 00                    1794 	.db #0x00	; 0
      00060A 00                    1795 	.db #0x00	; 0
      00060B 00                    1796 	.db #0x00	; 0
      00060C 09                    1797 	.db #0x09	; 9
      00060D 06                    1798 	.db #0x06	; 6
      00060E 06                    1799 	.db #0x06	; 6
      00060F 0F                    1800 	.db #0x0f	; 15
      000610 06                    1801 	.db #0x06	; 6
      000611 0F                    1802 	.db #0x0f	; 15
      000612 09                    1803 	.db #0x09	; 9
      000613 06                    1804 	.db #0x06	; 6
      000614 00                    1805 	.db #0x00	; 0
      000615 00                    1806 	.db #0x00	; 0
      000616 00                    1807 	.db #0x00	; 0
      000617 00                    1808 	.db #0x00	; 0
      000618 00                    1809 	.db #0x00	; 0
      000619 00                    1810 	.db #0x00	; 0
      00061A 00                    1811 	.db #0x00	; 0
      00061B 00                    1812 	.db #0x00	; 0
      00061C 00                    1813 	.db #0x00	; 0
      00061D 00                    1814 	.db #0x00	; 0
      00061E 00                    1815 	.db #0x00	; 0
      00061F 00                    1816 	.db #0x00	; 0
      000620 00                    1817 	.db #0x00	; 0
      000621 00                    1818 	.db #0x00	; 0
      000622 00                    1819 	.db #0x00	; 0
      000623 00                    1820 	.db #0x00	; 0
      000624 00                    1821 	.db #0x00	; 0
      000625 00                    1822 	.db #0x00	; 0
      000626 00                    1823 	.db #0x00	; 0
      000627 00                    1824 	.db #0x00	; 0
      000628 09                    1825 	.db #0x09	; 9
      000629 06                    1826 	.db #0x06	; 6
      00062A 06                    1827 	.db #0x06	; 6
      00062B 0F                    1828 	.db #0x0f	; 15
      00062C 06                    1829 	.db #0x06	; 6
      00062D 0F                    1830 	.db #0x0f	; 15
      00062E 09                    1831 	.db #0x09	; 9
      00062F 06                    1832 	.db #0x06	; 6
      000630 00                    1833 	.db #0x00	; 0
      000631 00                    1834 	.db #0x00	; 0
      000632 00                    1835 	.db #0x00	; 0
      000633 00                    1836 	.db #0x00	; 0
      000634 00                    1837 	.db #0x00	; 0
      000635 00                    1838 	.db #0x00	; 0
      000636 00                    1839 	.db #0x00	; 0
      000637 00                    1840 	.db #0x00	; 0
      000638 00                    1841 	.db #0x00	; 0
      000639 00                    1842 	.db #0x00	; 0
      00063A 00                    1843 	.db #0x00	; 0
      00063B 00                    1844 	.db #0x00	; 0
      00063C 00                    1845 	.db #0x00	; 0
      00063D 00                    1846 	.db #0x00	; 0
      00063E 00                    1847 	.db #0x00	; 0
      00063F 00                    1848 	.db #0x00	; 0
      000640 00                    1849 	.db #0x00	; 0
      000641 00                    1850 	.db #0x00	; 0
      000642 00                    1851 	.db #0x00	; 0
      000643 00                    1852 	.db #0x00	; 0
      000644 00                    1853 	.db #0x00	; 0
      000645 00                    1854 	.db #0x00	; 0
      000646 00                    1855 	.db #0x00	; 0
      000647 00                    1856 	.db #0x00	; 0
      000648 99                    1857 	.db #0x99	; 153
      000649 66                    1858 	.db #0x66	; 102	'f'
      00064A 66                    1859 	.db #0x66	; 102	'f'
      00064B FF                    1860 	.db #0xff	; 255
      00064C 66                    1861 	.db #0x66	; 102	'f'
      00064D FF                    1862 	.db #0xff	; 255
      00064E 99                    1863 	.db #0x99	; 153
      00064F 66                    1864 	.db #0x66	; 102	'f'
      000650 00                    1865 	.db #0x00	; 0
      000651 00                    1866 	.db #0x00	; 0
      000652 00                    1867 	.db #0x00	; 0
      000653 00                    1868 	.db #0x00	; 0
      000654 00                    1869 	.db #0x00	; 0
      000655 00                    1870 	.db #0x00	; 0
      000656 00                    1871 	.db #0x00	; 0
      000657 00                    1872 	.db #0x00	; 0
      000658 00                    1873 	.db #0x00	; 0
      000659 00                    1874 	.db #0x00	; 0
      00065A 00                    1875 	.db #0x00	; 0
      00065B 00                    1876 	.db #0x00	; 0
      00065C 00                    1877 	.db #0x00	; 0
      00065D 00                    1878 	.db #0x00	; 0
      00065E 00                    1879 	.db #0x00	; 0
      00065F 00                    1880 	.db #0x00	; 0
      000660 00                    1881 	.db #0x00	; 0
      000661 00                    1882 	.db #0x00	; 0
      000662 00                    1883 	.db #0x00	; 0
      000663 00                    1884 	.db #0x00	; 0
      000664 00                    1885 	.db #0x00	; 0
      000665 00                    1886 	.db #0x00	; 0
      000666 00                    1887 	.db #0x00	; 0
      000667 00                    1888 	.db #0x00	; 0
      000668 09                    1889 	.db #0x09	; 9
      000669 06                    1890 	.db #0x06	; 6
      00066A 06                    1891 	.db #0x06	; 6
      00066B 0F                    1892 	.db #0x0f	; 15
      00066C 06                    1893 	.db #0x06	; 6
      00066D 0F                    1894 	.db #0x0f	; 15
      00066E 09                    1895 	.db #0x09	; 9
      00066F 06                    1896 	.db #0x06	; 6
      000670 09                    1897 	.db #0x09	; 9
      000671 06                    1898 	.db #0x06	; 6
      000672 06                    1899 	.db #0x06	; 6
      000673 0F                    1900 	.db #0x0f	; 15
      000674 06                    1901 	.db #0x06	; 6
      000675 0F                    1902 	.db #0x0f	; 15
      000676 09                    1903 	.db #0x09	; 9
      000677 06                    1904 	.db #0x06	; 6
      000678 00                    1905 	.db #0x00	; 0
      000679 00                    1906 	.db #0x00	; 0
      00067A 00                    1907 	.db #0x00	; 0
      00067B 00                    1908 	.db #0x00	; 0
      00067C 00                    1909 	.db #0x00	; 0
      00067D 00                    1910 	.db #0x00	; 0
      00067E 00                    1911 	.db #0x00	; 0
      00067F 00                    1912 	.db #0x00	; 0
      000680 00                    1913 	.db #0x00	; 0
      000681 00                    1914 	.db #0x00	; 0
      000682 00                    1915 	.db #0x00	; 0
      000683 00                    1916 	.db #0x00	; 0
      000684 00                    1917 	.db #0x00	; 0
      000685 00                    1918 	.db #0x00	; 0
      000686 00                    1919 	.db #0x00	; 0
      000687 00                    1920 	.db #0x00	; 0
      000688 90                    1921 	.db #0x90	; 144
      000689 60                    1922 	.db #0x60	; 96
      00068A 60                    1923 	.db #0x60	; 96
      00068B F0                    1924 	.db #0xf0	; 240
      00068C 60                    1925 	.db #0x60	; 96
      00068D F0                    1926 	.db #0xf0	; 240
      00068E 90                    1927 	.db #0x90	; 144
      00068F 60                    1928 	.db #0x60	; 96
      000690 09                    1929 	.db #0x09	; 9
      000691 06                    1930 	.db #0x06	; 6
      000692 06                    1931 	.db #0x06	; 6
      000693 0F                    1932 	.db #0x0f	; 15
      000694 06                    1933 	.db #0x06	; 6
      000695 0F                    1934 	.db #0x0f	; 15
      000696 09                    1935 	.db #0x09	; 9
      000697 06                    1936 	.db #0x06	; 6
      000698 00                    1937 	.db #0x00	; 0
      000699 00                    1938 	.db #0x00	; 0
      00069A 00                    1939 	.db #0x00	; 0
      00069B 00                    1940 	.db #0x00	; 0
      00069C 00                    1941 	.db #0x00	; 0
      00069D 00                    1942 	.db #0x00	; 0
      00069E 00                    1943 	.db #0x00	; 0
      00069F 00                    1944 	.db #0x00	; 0
      0006A0 00                    1945 	.db #0x00	; 0
      0006A1 00                    1946 	.db #0x00	; 0
      0006A2 00                    1947 	.db #0x00	; 0
      0006A3 00                    1948 	.db #0x00	; 0
      0006A4 00                    1949 	.db #0x00	; 0
      0006A5 00                    1950 	.db #0x00	; 0
      0006A6 00                    1951 	.db #0x00	; 0
      0006A7 00                    1952 	.db #0x00	; 0
      0006A8 18                    1953 	.db #0x18	; 24
      0006A9 00                    1954 	.db #0x00	; 0
      0006AA 18                    1955 	.db #0x18	; 24
      0006AB 18                    1956 	.db #0x18	; 24
      0006AC 18                    1957 	.db #0x18	; 24
      0006AD 18                    1958 	.db #0x18	; 24
      0006AE 3C                    1959 	.db #0x3c	; 60
      0006AF 18                    1960 	.db #0x18	; 24
      0006B0 3C                    1961 	.db #0x3c	; 60
      0006B1 18                    1962 	.db #0x18	; 24
      0006B2 3C                    1963 	.db #0x3c	; 60
      0006B3 3C                    1964 	.db #0x3c	; 60
      0006B4 7E                    1965 	.db #0x7e	; 126
      0006B5 3C                    1966 	.db #0x3c	; 60
      0006B6 7E                    1967 	.db #0x7e	; 126
      0006B7 24                    1968 	.db #0x24	; 36
      0006B8 00                    1969 	.db #0x00	; 0
      0006B9 00                    1970 	.db #0x00	; 0
      0006BA 00                    1971 	.db #0x00	; 0
      0006BB 00                    1972 	.db #0x00	; 0
      0006BC 00                    1973 	.db #0x00	; 0
      0006BD 00                    1974 	.db #0x00	; 0
      0006BE 00                    1975 	.db #0x00	; 0
      0006BF 00                    1976 	.db #0x00	; 0
      0006C0 00                    1977 	.db #0x00	; 0
      0006C1 00                    1978 	.db #0x00	; 0
      0006C2 00                    1979 	.db #0x00	; 0
      0006C3 00                    1980 	.db #0x00	; 0
      0006C4 00                    1981 	.db #0x00	; 0
      0006C5 00                    1982 	.db #0x00	; 0
      0006C6 00                    1983 	.db #0x00	; 0
      0006C7 00                    1984 	.db #0x00	; 0
      0006C8 C0                    1985 	.db #0xc0	; 192
      0006C9 00                    1986 	.db #0x00	; 0
      0006CA F8                    1987 	.db #0xf8	; 248
      0006CB E0                    1988 	.db #0xe0	; 224
      0006CC FF                    1989 	.db #0xff	; 255
      0006CD 7E                    1990 	.db #0x7e	; 126
      0006CE FF                    1991 	.db #0xff	; 255
      0006CF 7E                    1992 	.db #0x7e	; 126
      0006D0 F8                    1993 	.db #0xf8	; 248
      0006D1 E0                    1994 	.db #0xe0	; 224
      0006D2 C0                    1995 	.db #0xc0	; 192
      0006D3 00                    1996 	.db #0x00	; 0
      0006D4 00                    1997 	.db #0x00	; 0
      0006D5 00                    1998 	.db #0x00	; 0
      0006D6 00                    1999 	.db #0x00	; 0
      0006D7 00                    2000 	.db #0x00	; 0
      0006D8 00                    2001 	.db #0x00	; 0
      0006D9 00                    2002 	.db #0x00	; 0
      0006DA 00                    2003 	.db #0x00	; 0
      0006DB 00                    2004 	.db #0x00	; 0
      0006DC 00                    2005 	.db #0x00	; 0
      0006DD 00                    2006 	.db #0x00	; 0
      0006DE 00                    2007 	.db #0x00	; 0
      0006DF 00                    2008 	.db #0x00	; 0
      0006E0 00                    2009 	.db #0x00	; 0
      0006E1 00                    2010 	.db #0x00	; 0
      0006E2 00                    2011 	.db #0x00	; 0
      0006E3 00                    2012 	.db #0x00	; 0
      0006E4 00                    2013 	.db #0x00	; 0
      0006E5 00                    2014 	.db #0x00	; 0
      0006E6 00                    2015 	.db #0x00	; 0
      0006E7 00                    2016 	.db #0x00	; 0
      0006E8 06                    2017 	.db #0x06	; 6
      0006E9 00                    2018 	.db #0x00	; 0
      0006EA 0F                    2019 	.db #0x0f	; 15
      0006EB 06                    2020 	.db #0x06	; 6
      0006EC 1F                    2021 	.db #0x1f	; 31
      0006ED 0E                    2022 	.db #0x0e	; 14
      0006EE 7E                    2023 	.db #0x7e	; 126
      0006EF 1C                    2024 	.db #0x1c	; 28
      0006F0 FC                    2025 	.db #0xfc	; 252
      0006F1 78                    2026 	.db #0x78	; 120	'x'
      0006F2 F8                    2027 	.db #0xf8	; 248
      0006F3 F0                    2028 	.db #0xf0	; 240
      0006F4 F8                    2029 	.db #0xf8	; 248
      0006F5 70                    2030 	.db #0x70	; 112	'p'
      0006F6 70                    2031 	.db #0x70	; 112	'p'
      0006F7 20                    2032 	.db #0x20	; 32
      0006F8 00                    2033 	.db #0x00	; 0
      0006F9 00                    2034 	.db #0x00	; 0
      0006FA 00                    2035 	.db #0x00	; 0
      0006FB 00                    2036 	.db #0x00	; 0
      0006FC 00                    2037 	.db #0x00	; 0
      0006FD 00                    2038 	.db #0x00	; 0
      0006FE 00                    2039 	.db #0x00	; 0
      0006FF 00                    2040 	.db #0x00	; 0
      000700 00                    2041 	.db #0x00	; 0
      000701 00                    2042 	.db #0x00	; 0
      000702 00                    2043 	.db #0x00	; 0
      000703 00                    2044 	.db #0x00	; 0
      000704 00                    2045 	.db #0x00	; 0
      000705 00                    2046 	.db #0x00	; 0
      000706 00                    2047 	.db #0x00	; 0
      000707 00                    2048 	.db #0x00	; 0
      000708                       2049 _Pickups:
      000708 FF                    2050 	.db #0xff	; 255
      000709 00                    2051 	.db #0x00	; 0
      00070A 81                    2052 	.db #0x81	; 129
      00070B 00                    2053 	.db #0x00	; 0
      00070C D7                    2054 	.db #0xd7	; 215
      00070D 56                    2055 	.db #0x56	; 86	'V'
      00070E D7                    2056 	.db #0xd7	; 215
      00070F 56                    2057 	.db #0x56	; 86	'V'
      000710 D5                    2058 	.db #0xd5	; 213
      000711 54                    2059 	.db #0x54	; 84	'T'
      000712 F5                    2060 	.db #0xf5	; 245
      000713 74                    2061 	.db #0x74	; 116	't'
      000714 81                    2062 	.db #0x81	; 129
      000715 00                    2063 	.db #0x00	; 0
      000716 FF                    2064 	.db #0xff	; 255
      000717 00                    2065 	.db #0x00	; 0
      000718 00                    2066 	.db #0x00	; 0
      000719 00                    2067 	.db #0x00	; 0
      00071A 00                    2068 	.db #0x00	; 0
      00071B 00                    2069 	.db #0x00	; 0
      00071C 00                    2070 	.db #0x00	; 0
      00071D 00                    2071 	.db #0x00	; 0
      00071E 00                    2072 	.db #0x00	; 0
      00071F 00                    2073 	.db #0x00	; 0
      000720 00                    2074 	.db #0x00	; 0
      000721 00                    2075 	.db #0x00	; 0
      000722 00                    2076 	.db #0x00	; 0
      000723 00                    2077 	.db #0x00	; 0
      000724 00                    2078 	.db #0x00	; 0
      000725 00                    2079 	.db #0x00	; 0
      000726 00                    2080 	.db #0x00	; 0
      000727 00                    2081 	.db #0x00	; 0
      000728 FF                    2082 	.db #0xff	; 255
      000729 00                    2083 	.db #0x00	; 0
      00072A 8F                    2084 	.db #0x8f	; 143
      00072B 06                    2085 	.db #0x06	; 6
      00072C 9F                    2086 	.db #0x9f	; 159
      00072D 0E                    2087 	.db #0x0e	; 14
      00072E FF                    2088 	.db #0xff	; 255
      00072F 1C                    2089 	.db #0x1c	; 28
      000730 FD                    2090 	.db #0xfd	; 253
      000731 78                    2091 	.db #0x78	; 120	'x'
      000732 F9                    2092 	.db #0xf9	; 249
      000733 70                    2093 	.db #0x70	; 112	'p'
      000734 F9                    2094 	.db #0xf9	; 249
      000735 70                    2095 	.db #0x70	; 112	'p'
      000736 FF                    2096 	.db #0xff	; 255
      000737 00                    2097 	.db #0x00	; 0
      000738 00                    2098 	.db #0x00	; 0
      000739 00                    2099 	.db #0x00	; 0
      00073A 00                    2100 	.db #0x00	; 0
      00073B 00                    2101 	.db #0x00	; 0
      00073C 00                    2102 	.db #0x00	; 0
      00073D 00                    2103 	.db #0x00	; 0
      00073E 00                    2104 	.db #0x00	; 0
      00073F 00                    2105 	.db #0x00	; 0
      000740 00                    2106 	.db #0x00	; 0
      000741 00                    2107 	.db #0x00	; 0
      000742 00                    2108 	.db #0x00	; 0
      000743 00                    2109 	.db #0x00	; 0
      000744 00                    2110 	.db #0x00	; 0
      000745 00                    2111 	.db #0x00	; 0
      000746 00                    2112 	.db #0x00	; 0
      000747 00                    2113 	.db #0x00	; 0
      000748                       2114 _Player1:
      000748 08                    2115 	.db #0x08	; 8
      000749 08                    2116 	.db #0x08	; 8
      00074A 1C                    2117 	.db #0x1c	; 28
      00074B 14                    2118 	.db #0x14	; 20
      00074C 38                    2119 	.db #0x38	; 56	'8'
      00074D 28                    2120 	.db #0x28	; 40
      00074E 68                    2121 	.db #0x68	; 104	'h'
      00074F 58                    2122 	.db #0x58	; 88	'X'
      000750 50                    2123 	.db #0x50	; 80	'P'
      000751 71                    2124 	.db #0x71	; 113	'q'
      000752 D0                    2125 	.db #0xd0	; 208
      000753 B2                    2126 	.db #0xb2	; 178
      000754 D5                    2127 	.db #0xd5	; 213
      000755 B6                    2128 	.db #0xb6	; 182
      000756 D5                    2129 	.db #0xd5	; 213
      000757 B6                    2130 	.db #0xb6	; 182
      000758 D5                    2131 	.db #0xd5	; 213
      000759 B6                    2132 	.db #0xb6	; 182
      00075A CD                    2133 	.db #0xcd	; 205
      00075B BE                    2134 	.db #0xbe	; 190
      00075C C5                    2135 	.db #0xc5	; 197
      00075D BE                    2136 	.db #0xbe	; 190
      00075E 65                    2137 	.db #0x65	; 101	'e'
      00075F 5E                    2138 	.db #0x5e	; 94
      000760 3E                    2139 	.db #0x3e	; 62
      000761 2F                    2140 	.db #0x2f	; 47
      000762 13                    2141 	.db #0x13	; 19
      000763 13                    2142 	.db #0x13	; 19
      000764 06                    2143 	.db #0x06	; 6
      000765 07                    2144 	.db #0x07	; 7
      000766 07                    2145 	.db #0x07	; 7
      000767 05                    2146 	.db #0x05	; 5
      000768 10                    2147 	.db #0x10	; 16
      000769 10                    2148 	.db #0x10	; 16
      00076A 38                    2149 	.db #0x38	; 56	'8'
      00076B 28                    2150 	.db #0x28	; 40
      00076C 1C                    2151 	.db #0x1c	; 28
      00076D 14                    2152 	.db #0x14	; 20
      00076E 16                    2153 	.db #0x16	; 22
      00076F 1A                    2154 	.db #0x1a	; 26
      000770 0A                    2155 	.db #0x0a	; 10
      000771 8E                    2156 	.db #0x8e	; 142
      000772 0B                    2157 	.db #0x0b	; 11
      000773 4D                    2158 	.db #0x4d	; 77	'M'
      000774 AB                    2159 	.db #0xab	; 171
      000775 6D                    2160 	.db #0x6d	; 109	'm'
      000776 AB                    2161 	.db #0xab	; 171
      000777 6D                    2162 	.db #0x6d	; 109	'm'
      000778 AB                    2163 	.db #0xab	; 171
      000779 6D                    2164 	.db #0x6d	; 109	'm'
      00077A B3                    2165 	.db #0xb3	; 179
      00077B 7D                    2166 	.db #0x7d	; 125
      00077C A3                    2167 	.db #0xa3	; 163
      00077D 7D                    2168 	.db #0x7d	; 125
      00077E A6                    2169 	.db #0xa6	; 166
      00077F 7A                    2170 	.db #0x7a	; 122	'z'
      000780 7C                    2171 	.db #0x7c	; 124
      000781 F4                    2172 	.db #0xf4	; 244
      000782 C8                    2173 	.db #0xc8	; 200
      000783 C8                    2174 	.db #0xc8	; 200
      000784 60                    2175 	.db #0x60	; 96
      000785 E0                    2176 	.db #0xe0	; 224
      000786 E0                    2177 	.db #0xe0	; 224
      000787 A0                    2178 	.db #0xa0	; 160
      000788 07                    2179 	.db #0x07	; 7
      000789 07                    2180 	.db #0x07	; 7
      00078A 0F                    2181 	.db #0x0f	; 15
      00078B 08                    2182 	.db #0x08	; 8
      00078C 18                    2183 	.db #0x18	; 24
      00078D 17                    2184 	.db #0x17	; 23
      00078E 31                    2185 	.db #0x31	; 49	'1'
      00078F 2F                    2186 	.db #0x2f	; 47
      000790 12                    2187 	.db #0x12	; 18
      000791 1E                    2188 	.db #0x1e	; 30
      000792 DF                    2189 	.db #0xdf	; 223
      000793 DF                    2190 	.db #0xdf	; 223
      000794 F0                    2191 	.db #0xf0	; 240
      000795 7F                    2192 	.db #0x7f	; 127
      000796 AF                    2193 	.db #0xaf	; 175
      000797 F0                    2194 	.db #0xf0	; 240
      000798 AF                    2195 	.db #0xaf	; 175
      000799 F0                    2196 	.db #0xf0	; 240
      00079A F0                    2197 	.db #0xf0	; 240
      00079B 7F                    2198 	.db #0x7f	; 127
      00079C DF                    2199 	.db #0xdf	; 223
      00079D DF                    2200 	.db #0xdf	; 223
      00079E 12                    2201 	.db #0x12	; 18
      00079F 1E                    2202 	.db #0x1e	; 30
      0007A0 31                    2203 	.db #0x31	; 49	'1'
      0007A1 2F                    2204 	.db #0x2f	; 47
      0007A2 18                    2205 	.db #0x18	; 24
      0007A3 17                    2206 	.db #0x17	; 23
      0007A4 0F                    2207 	.db #0x0f	; 15
      0007A5 08                    2208 	.db #0x08	; 8
      0007A6 07                    2209 	.db #0x07	; 7
      0007A7 07                    2210 	.db #0x07	; 7
      0007A8 E0                    2211 	.db #0xe0	; 224
      0007A9 E0                    2212 	.db #0xe0	; 224
      0007AA F8                    2213 	.db #0xf8	; 248
      0007AB 18                    2214 	.db #0x18	; 24
      0007AC 0C                    2215 	.db #0x0c	; 12
      0007AD F4                    2216 	.db #0xf4	; 244
      0007AE F6                    2217 	.db #0xf6	; 246
      0007AF FA                    2218 	.db #0xfa	; 250
      0007B0 0F                    2219 	.db #0x0f	; 15
      0007B1 0D                    2220 	.db #0x0d	; 13
      0007B2 C2                    2221 	.db #0xc2	; 194
      0007B3 C2                    2222 	.db #0xc2	; 194
      0007B4 00                    2223 	.db #0x00	; 0
      0007B5 E0                    2224 	.db #0xe0	; 224
      0007B6 C0                    2225 	.db #0xc0	; 192
      0007B7 10                    2226 	.db #0x10	; 16
      0007B8 C0                    2227 	.db #0xc0	; 192
      0007B9 10                    2228 	.db #0x10	; 16
      0007BA 00                    2229 	.db #0x00	; 0
      0007BB E0                    2230 	.db #0xe0	; 224
      0007BC C2                    2231 	.db #0xc2	; 194
      0007BD C2                    2232 	.db #0xc2	; 194
      0007BE 0F                    2233 	.db #0x0f	; 15
      0007BF 0D                    2234 	.db #0x0d	; 13
      0007C0 F6                    2235 	.db #0xf6	; 246
      0007C1 FA                    2236 	.db #0xfa	; 250
      0007C2 0C                    2237 	.db #0x0c	; 12
      0007C3 F4                    2238 	.db #0xf4	; 244
      0007C4 F8                    2239 	.db #0xf8	; 248
      0007C5 18                    2240 	.db #0x18	; 24
      0007C6 E0                    2241 	.db #0xe0	; 224
      0007C7 E0                    2242 	.db #0xe0	; 224
      0007C8 07                    2243 	.db #0x07	; 7
      0007C9 07                    2244 	.db #0x07	; 7
      0007CA 1B                    2245 	.db #0x1b	; 27
      0007CB 1C                    2246 	.db #0x1c	; 28
      0007CC 38                    2247 	.db #0x38	; 56	'8'
      0007CD 27                    2248 	.db #0x27	; 39
      0007CE 60                    2249 	.db #0x60	; 96
      0007CF 5E                    2250 	.db #0x5e	; 94
      0007D0 60                    2251 	.db #0x60	; 96
      0007D1 5C                    2252 	.db #0x5c	; 92
      0007D2 41                    2253 	.db #0x41	; 65	'A'
      0007D3 79                    2254 	.db #0x79	; 121	'y'
      0007D4 C4                    2255 	.db #0xc4	; 196
      0007D5 B7                    2256 	.db #0xb7	; 183
      0007D6 99                    2257 	.db #0x99	; 153
      0007D7 FE                    2258 	.db #0xfe	; 254
      0007D8 B3                    2259 	.db #0xb3	; 179
      0007D9 EC                    2260 	.db #0xec	; 236
      0007DA 67                    2261 	.db #0x67	; 103	'g'
      0007DB 58                    2262 	.db #0x58	; 88	'X'
      0007DC 2E                    2263 	.db #0x2e	; 46
      0007DD 31                    2264 	.db #0x31	; 49	'1'
      0007DE 5C                    2265 	.db #0x5c	; 92
      0007DF 73                    2266 	.db #0x73	; 115	's'
      0007E0 69                    2267 	.db #0x69	; 105	'i'
      0007E1 5E                    2268 	.db #0x5e	; 94
      0007E2 37                    2269 	.db #0x37	; 55	'7'
      0007E3 2D                    2270 	.db #0x2d	; 45
      0007E4 1A                    2271 	.db #0x1a	; 26
      0007E5 1B                    2272 	.db #0x1b	; 27
      0007E6 01                    2273 	.db #0x01	; 1
      0007E7 01                    2274 	.db #0x01	; 1
      0007E8 E0                    2275 	.db #0xe0	; 224
      0007E9 E0                    2276 	.db #0xe0	; 224
      0007EA 90                    2277 	.db #0x90	; 144
      0007EB 70                    2278 	.db #0x70	; 112	'p'
      0007EC C0                    2279 	.db #0xc0	; 192
      0007ED C0                    2280 	.db #0xc0	; 192
      0007EE 00                    2281 	.db #0x00	; 0
      0007EF 00                    2282 	.db #0x00	; 0
      0007F0 02                    2283 	.db #0x02	; 2
      0007F1 02                    2284 	.db #0x02	; 2
      0007F2 C1                    2285 	.db #0xc1	; 193
      0007F3 C3                    2286 	.db #0xc3	; 195
      0007F4 65                    2287 	.db #0x65	; 101	'e'
      0007F5 A7                    2288 	.db #0xa7	; 167
      0007F6 A7                    2289 	.db #0xa7	; 167
      0007F7 65                    2290 	.db #0x65	; 101	'e'
      0007F8 A3                    2291 	.db #0xa3	; 163
      0007F9 65                    2292 	.db #0x65	; 101	'e'
      0007FA 03                    2293 	.db #0x03	; 3
      0007FB CD                    2294 	.db #0xcd	; 205
      0007FC 41                    2295 	.db #0x41	; 65	'A'
      0007FD DF                    2296 	.db #0xdf	; 223
      0007FE 86                    2297 	.db #0x86	; 134
      0007FF BA                    2298 	.db #0xba	; 186
      000800 86                    2299 	.db #0x86	; 134
      000801 FA                    2300 	.db #0xfa	; 250
      000802 1C                    2301 	.db #0x1c	; 28
      000803 E4                    2302 	.db #0xe4	; 228
      000804 78                    2303 	.db #0x78	; 120	'x'
      000805 B8                    2304 	.db #0xb8	; 184
      000806 C0                    2305 	.db #0xc0	; 192
      000807 C0                    2306 	.db #0xc0	; 192
      000808 00                    2307 	.db #0x00	; 0
      000809 00                    2308 	.db #0x00	; 0
      00080A 00                    2309 	.db #0x00	; 0
      00080B 00                    2310 	.db #0x00	; 0
      00080C 00                    2311 	.db #0x00	; 0
      00080D 00                    2312 	.db #0x00	; 0
      00080E 00                    2313 	.db #0x00	; 0
      00080F 00                    2314 	.db #0x00	; 0
      000810 00                    2315 	.db #0x00	; 0
      000811 00                    2316 	.db #0x00	; 0
      000812 00                    2317 	.db #0x00	; 0
      000813 00                    2318 	.db #0x00	; 0
      000814 00                    2319 	.db #0x00	; 0
      000815 00                    2320 	.db #0x00	; 0
      000816 00                    2321 	.db #0x00	; 0
      000817 00                    2322 	.db #0x00	; 0
      000818 00                    2323 	.db #0x00	; 0
      000819 00                    2324 	.db #0x00	; 0
      00081A 00                    2325 	.db #0x00	; 0
      00081B 00                    2326 	.db #0x00	; 0
      00081C 00                    2327 	.db #0x00	; 0
      00081D 00                    2328 	.db #0x00	; 0
      00081E 00                    2329 	.db #0x00	; 0
      00081F 00                    2330 	.db #0x00	; 0
      000820 00                    2331 	.db #0x00	; 0
      000821 00                    2332 	.db #0x00	; 0
      000822 00                    2333 	.db #0x00	; 0
      000823 00                    2334 	.db #0x00	; 0
      000824 00                    2335 	.db #0x00	; 0
      000825 00                    2336 	.db #0x00	; 0
      000826 00                    2337 	.db #0x00	; 0
      000827 00                    2338 	.db #0x00	; 0
      000828 00                    2339 	.db #0x00	; 0
      000829 00                    2340 	.db #0x00	; 0
      00082A 00                    2341 	.db #0x00	; 0
      00082B 00                    2342 	.db #0x00	; 0
      00082C 00                    2343 	.db #0x00	; 0
      00082D 00                    2344 	.db #0x00	; 0
      00082E 00                    2345 	.db #0x00	; 0
      00082F 00                    2346 	.db #0x00	; 0
      000830 00                    2347 	.db #0x00	; 0
      000831 00                    2348 	.db #0x00	; 0
      000832 00                    2349 	.db #0x00	; 0
      000833 00                    2350 	.db #0x00	; 0
      000834 00                    2351 	.db #0x00	; 0
      000835 00                    2352 	.db #0x00	; 0
      000836 00                    2353 	.db #0x00	; 0
      000837 00                    2354 	.db #0x00	; 0
      000838 00                    2355 	.db #0x00	; 0
      000839 00                    2356 	.db #0x00	; 0
      00083A 00                    2357 	.db #0x00	; 0
      00083B 00                    2358 	.db #0x00	; 0
      00083C 00                    2359 	.db #0x00	; 0
      00083D 00                    2360 	.db #0x00	; 0
      00083E 00                    2361 	.db #0x00	; 0
      00083F 00                    2362 	.db #0x00	; 0
      000840 00                    2363 	.db #0x00	; 0
      000841 00                    2364 	.db #0x00	; 0
      000842 00                    2365 	.db #0x00	; 0
      000843 00                    2366 	.db #0x00	; 0
      000844 00                    2367 	.db #0x00	; 0
      000845 00                    2368 	.db #0x00	; 0
      000846 00                    2369 	.db #0x00	; 0
      000847 00                    2370 	.db #0x00	; 0
      000848                       2371 _BLANKSIZE:
      000848 03                    2372 	.db #0x03	; 3
      000849                       2373 _BLANK:
      000849 26                    2374 	.db #0x26	; 38
      00084A 2B                    2375 	.db #0x2b	; 43
      00084B 2C                    2376 	.db #0x2c	; 44
      00084C                       2377 _EMPTYSPRITE:
      00084C 50                    2378 	.db #0x50	; 80	'P'
      00084D                       2379 _ENEMYCOUNT:
      00084D 05                    2380 	.db #0x05	; 5
      00084E                       2381 _xSpawnPositions:
      00084E 00                    2382 	.db #0x00	; 0
      00084F 60                    2383 	.db #0x60	; 96
      000850 B0                    2384 	.db #0xb0	; 176
      000851 00                    2385 	.db #0x00	; 0
      000852 B0                    2386 	.db #0xb0	; 176
      000853 00                    2387 	.db #0x00	; 0
      000854 60                    2388 	.db #0x60	; 96
      000855 B0                    2389 	.db #0xb0	; 176
      000856                       2390 _ySpawnPositions:
      000856 00                    2391 	.db #0x00	; 0
      000857 00                    2392 	.db #0x00	; 0
      000858 00                    2393 	.db #0x00	; 0
      000859 5C                    2394 	.db #0x5c	; 92
      00085A 5C                    2395 	.db #0x5c	; 92
      00085B A0                    2396 	.db #0xa0	; 160
      00085C A0                    2397 	.db #0xa0	; 160
      00085D A0                    2398 	.db #0xa0	; 160
      00085E                       2399 _PROJECTILECOUNT:
      00085E 05                    2400 	.db #0x05	; 5
      00085F                       2401 _PLAYERSIZE:
      00085F 10                    2402 	.db #0x10	; 16
      000860                       2403 _maxHull:
      000860 64                    2404 	.db #0x64	;  100	'd'
      000861                       2405 _maxShield:
      000861 64                    2406 	.db #0x64	;  100	'd'
                                   2407 ;src/main.c:119: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2408 ;	---------------------------------
                                   2409 ; Function setHealthBar
                                   2410 ; ---------------------------------
      000862                       2411 _setHealthBar::
      000862 E8 FB                 2412 	add	sp, #-5
                                   2413 ;src/main.c:121: if (hp >= 80) {
      000864 F8 08                 2414 	ldhl	sp,	#8
      000866 7E                    2415 	ld	a, (hl)
      000867 D6 50                 2416 	sub	a, #0x50
      000869 38 31                 2417 	jr	C, 00102$
                                   2418 ;src/main.c:122: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      00086B F8 00                 2419 	ldhl	sp,	#0
      00086D 4D                    2420 	ld	c, l
      00086E 44                    2421 	ld	b, h
      00086F 36 50                 2422 	ld	(hl), #0x50
      000871 69                    2423 	ld	l, c
                                   2424 ;	spillPairReg hl
                                   2425 ;	spillPairReg hl
      000872 60                    2426 	ld	h, b
                                   2427 ;	spillPairReg hl
                                   2428 ;	spillPairReg hl
      000873 23                    2429 	inc	hl
      000874 36 50                 2430 	ld	(hl), #0x50
      000876 69                    2431 	ld	l, c
                                   2432 ;	spillPairReg hl
                                   2433 ;	spillPairReg hl
      000877 60                    2434 	ld	h, b
                                   2435 ;	spillPairReg hl
                                   2436 ;	spillPairReg hl
      000878 23                    2437 	inc	hl
      000879 23                    2438 	inc	hl
      00087A 36 50                 2439 	ld	(hl), #0x50
      00087C 69                    2440 	ld	l, c
                                   2441 ;	spillPairReg hl
                                   2442 ;	spillPairReg hl
      00087D 60                    2443 	ld	h, b
                                   2444 ;	spillPairReg hl
                                   2445 ;	spillPairReg hl
      00087E 23                    2446 	inc	hl
      00087F 23                    2447 	inc	hl
      000880 23                    2448 	inc	hl
      000881 36 50                 2449 	ld	(hl), #0x50
      000883 21 04 00              2450 	ld	hl, #0x0004
      000886 09                    2451 	add	hl, bc
      000887 36 50                 2452 	ld	(hl), #0x50
                                   2453 ;src/main.c:123: set_win_tiles(5,row,5,1,blockmap);
      000889 C5                    2454 	push	bc
      00088A 21 05 01              2455 	ld	hl, #0x105
      00088D E5                    2456 	push	hl
      00088E F8 0B                 2457 	ldhl	sp,	#11
      000890 66                    2458 	ld	h, (hl)
      000891 2E 05                 2459 	ld	l, #0x05
      000893 E5                    2460 	push	hl
      000894 CDr00r00              2461 	call	_set_win_tiles
      000897 E8 06                 2462 	add	sp, #6
                                   2463 ;src/main.c:124: return;
      000899 C3r70r09              2464 	jp	00109$
      00089C                       2465 00102$:
                                   2466 ;src/main.c:126: if (hp >= 60) {
      00089C F8 08                 2467 	ldhl	sp,	#8
      00089E 7E                    2468 	ld	a, (hl)
      00089F D6 3C                 2469 	sub	a, #0x3c
      0008A1 38 31                 2470 	jr	C, 00104$
                                   2471 ;src/main.c:127: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0008A3 F8 00                 2472 	ldhl	sp,	#0
      0008A5 4D                    2473 	ld	c, l
      0008A6 44                    2474 	ld	b, h
      0008A7 36 50                 2475 	ld	(hl), #0x50
      0008A9 69                    2476 	ld	l, c
                                   2477 ;	spillPairReg hl
                                   2478 ;	spillPairReg hl
      0008AA 60                    2479 	ld	h, b
                                   2480 ;	spillPairReg hl
                                   2481 ;	spillPairReg hl
      0008AB 23                    2482 	inc	hl
      0008AC 36 50                 2483 	ld	(hl), #0x50
      0008AE 69                    2484 	ld	l, c
                                   2485 ;	spillPairReg hl
                                   2486 ;	spillPairReg hl
      0008AF 60                    2487 	ld	h, b
                                   2488 ;	spillPairReg hl
                                   2489 ;	spillPairReg hl
      0008B0 23                    2490 	inc	hl
      0008B1 23                    2491 	inc	hl
      0008B2 36 50                 2492 	ld	(hl), #0x50
      0008B4 69                    2493 	ld	l, c
                                   2494 ;	spillPairReg hl
                                   2495 ;	spillPairReg hl
      0008B5 60                    2496 	ld	h, b
                                   2497 ;	spillPairReg hl
                                   2498 ;	spillPairReg hl
      0008B6 23                    2499 	inc	hl
      0008B7 23                    2500 	inc	hl
      0008B8 23                    2501 	inc	hl
      0008B9 36 50                 2502 	ld	(hl), #0x50
      0008BB 21 04 00              2503 	ld	hl, #0x0004
      0008BE 09                    2504 	add	hl, bc
      0008BF 36 00                 2505 	ld	(hl), #0x00
                                   2506 ;src/main.c:128: set_win_tiles(5,row,5,1,blockmap);
      0008C1 C5                    2507 	push	bc
      0008C2 21 05 01              2508 	ld	hl, #0x105
      0008C5 E5                    2509 	push	hl
      0008C6 F8 0B                 2510 	ldhl	sp,	#11
      0008C8 66                    2511 	ld	h, (hl)
      0008C9 2E 05                 2512 	ld	l, #0x05
      0008CB E5                    2513 	push	hl
      0008CC CDr00r00              2514 	call	_set_win_tiles
      0008CF E8 06                 2515 	add	sp, #6
                                   2516 ;src/main.c:129: return;
      0008D1 C3r70r09              2517 	jp	00109$
      0008D4                       2518 00104$:
                                   2519 ;src/main.c:131: if (hp >= 40) {
      0008D4 F8 08                 2520 	ldhl	sp,	#8
      0008D6 7E                    2521 	ld	a, (hl)
      0008D7 D6 28                 2522 	sub	a, #0x28
      0008D9 38 30                 2523 	jr	C, 00106$
                                   2524 ;src/main.c:132: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      0008DB F8 00                 2525 	ldhl	sp,	#0
      0008DD 4D                    2526 	ld	c, l
      0008DE 44                    2527 	ld	b, h
      0008DF 36 50                 2528 	ld	(hl), #0x50
      0008E1 69                    2529 	ld	l, c
                                   2530 ;	spillPairReg hl
                                   2531 ;	spillPairReg hl
      0008E2 60                    2532 	ld	h, b
                                   2533 ;	spillPairReg hl
                                   2534 ;	spillPairReg hl
      0008E3 23                    2535 	inc	hl
      0008E4 36 50                 2536 	ld	(hl), #0x50
      0008E6 69                    2537 	ld	l, c
                                   2538 ;	spillPairReg hl
                                   2539 ;	spillPairReg hl
      0008E7 60                    2540 	ld	h, b
                                   2541 ;	spillPairReg hl
                                   2542 ;	spillPairReg hl
      0008E8 23                    2543 	inc	hl
      0008E9 23                    2544 	inc	hl
      0008EA 36 50                 2545 	ld	(hl), #0x50
      0008EC 59                    2546 	ld	e, c
      0008ED 50                    2547 	ld	d, b
      0008EE 13                    2548 	inc	de
      0008EF 13                    2549 	inc	de
      0008F0 13                    2550 	inc	de
      0008F1 AF                    2551 	xor	a, a
      0008F2 12                    2552 	ld	(de), a
      0008F3 21 04 00              2553 	ld	hl, #0x0004
      0008F6 09                    2554 	add	hl, bc
      0008F7 36 00                 2555 	ld	(hl), #0x00
                                   2556 ;src/main.c:133: set_win_tiles(5,row,5,1,blockmap);
      0008F9 C5                    2557 	push	bc
      0008FA 21 05 01              2558 	ld	hl, #0x105
      0008FD E5                    2559 	push	hl
      0008FE F8 0B                 2560 	ldhl	sp,	#11
      000900 66                    2561 	ld	h, (hl)
      000901 2E 05                 2562 	ld	l, #0x05
      000903 E5                    2563 	push	hl
      000904 CDr00r00              2564 	call	_set_win_tiles
      000907 E8 06                 2565 	add	sp, #6
                                   2566 ;src/main.c:134: return;
      000909 18 65                 2567 	jr	00109$
      00090B                       2568 00106$:
                                   2569 ;src/main.c:136: if (hp >= 20) {
      00090B F8 08                 2570 	ldhl	sp,	#8
      00090D 7E                    2571 	ld	a, (hl)
      00090E D6 14                 2572 	sub	a, #0x14
      000910 38 30                 2573 	jr	C, 00108$
                                   2574 ;src/main.c:137: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000912 F8 00                 2575 	ldhl	sp,	#0
      000914 4D                    2576 	ld	c, l
      000915 44                    2577 	ld	b, h
      000916 36 50                 2578 	ld	(hl), #0x50
      000918 69                    2579 	ld	l, c
                                   2580 ;	spillPairReg hl
                                   2581 ;	spillPairReg hl
      000919 60                    2582 	ld	h, b
                                   2583 ;	spillPairReg hl
                                   2584 ;	spillPairReg hl
      00091A 23                    2585 	inc	hl
      00091B 36 50                 2586 	ld	(hl), #0x50
      00091D 59                    2587 	ld	e, c
      00091E 50                    2588 	ld	d, b
      00091F 13                    2589 	inc	de
      000920 13                    2590 	inc	de
      000921 AF                    2591 	xor	a, a
      000922 12                    2592 	ld	(de), a
      000923 59                    2593 	ld	e, c
      000924 50                    2594 	ld	d, b
      000925 13                    2595 	inc	de
      000926 13                    2596 	inc	de
      000927 13                    2597 	inc	de
      000928 AF                    2598 	xor	a, a
      000929 12                    2599 	ld	(de), a
      00092A 21 04 00              2600 	ld	hl, #0x0004
      00092D 09                    2601 	add	hl, bc
      00092E 36 00                 2602 	ld	(hl), #0x00
                                   2603 ;src/main.c:138: set_win_tiles(5,row,5,1,blockmap);
      000930 C5                    2604 	push	bc
      000931 21 05 01              2605 	ld	hl, #0x105
      000934 E5                    2606 	push	hl
      000935 F8 0B                 2607 	ldhl	sp,	#11
      000937 66                    2608 	ld	h, (hl)
      000938 2E 05                 2609 	ld	l, #0x05
      00093A E5                    2610 	push	hl
      00093B CDr00r00              2611 	call	_set_win_tiles
      00093E E8 06                 2612 	add	sp, #6
                                   2613 ;src/main.c:139: return;
      000940 18 2E                 2614 	jr	00109$
      000942                       2615 00108$:
                                   2616 ;src/main.c:141: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000942 F8 00                 2617 	ldhl	sp,	#0
      000944 4D                    2618 	ld	c, l
      000945 44                    2619 	ld	b, h
      000946 36 50                 2620 	ld	(hl), #0x50
      000948 59                    2621 	ld	e, c
      000949 50                    2622 	ld	d, b
      00094A 13                    2623 	inc	de
      00094B AF                    2624 	xor	a, a
      00094C 12                    2625 	ld	(de), a
      00094D 59                    2626 	ld	e, c
      00094E 50                    2627 	ld	d, b
      00094F 13                    2628 	inc	de
      000950 13                    2629 	inc	de
      000951 AF                    2630 	xor	a, a
      000952 12                    2631 	ld	(de), a
      000953 59                    2632 	ld	e, c
      000954 50                    2633 	ld	d, b
      000955 13                    2634 	inc	de
      000956 13                    2635 	inc	de
      000957 13                    2636 	inc	de
      000958 AF                    2637 	xor	a, a
      000959 12                    2638 	ld	(de), a
      00095A 21 04 00              2639 	ld	hl, #0x0004
      00095D 09                    2640 	add	hl, bc
      00095E 36 00                 2641 	ld	(hl), #0x00
                                   2642 ;src/main.c:142: set_win_tiles(5,row,5,1,blockmap);
      000960 C5                    2643 	push	bc
      000961 21 05 01              2644 	ld	hl, #0x105
      000964 E5                    2645 	push	hl
      000965 F8 0B                 2646 	ldhl	sp,	#11
      000967 66                    2647 	ld	h, (hl)
      000968 2E 05                 2648 	ld	l, #0x05
      00096A E5                    2649 	push	hl
      00096B CDr00r00              2650 	call	_set_win_tiles
      00096E E8 06                 2651 	add	sp, #6
                                   2652 ;src/main.c:143: return;
      000970                       2653 00109$:
                                   2654 ;src/main.c:145: }
      000970 E8 05                 2655 	add	sp, #5
      000972 C9                    2656 	ret
                                   2657 ;src/main.c:147: void updateScore() {
                                   2658 ;	---------------------------------
                                   2659 ; Function updateScore
                                   2660 ; ---------------------------------
      000973                       2661 _updateScore::
      000973 E8 F6                 2662 	add	sp, #-10
                                   2663 ;src/main.c:151: len = bcd2text(&SCORE, 0x01, buf);
      000975 F8 00                 2664 	ldhl	sp,	#0
      000977 4D                    2665 	ld	c, l
      000978 44                    2666 	ld	b, h
      000979 59                    2667 	ld	e, c
      00097A 50                    2668 	ld	d, b
      00097B C5                    2669 	push	bc
      00097C D5                    2670 	push	de
      00097D 3E 01                 2671 	ld	a, #0x01
      00097F F5                    2672 	push	af
      000980 33                    2673 	inc	sp
      000981 11rB4r00              2674 	ld	de, #_SCORE
      000984 D5                    2675 	push	de
      000985 CDr00r00              2676 	call	_bcd2text
      000988 E8 05                 2677 	add	sp, #5
      00098A C1                    2678 	pop	bc
                                   2679 ;src/main.c:152: set_win_tiles(15, 1, 5, 1, buf+3);
      00098B 03                    2680 	inc	bc
      00098C 03                    2681 	inc	bc
      00098D 03                    2682 	inc	bc
      00098E C5                    2683 	push	bc
      00098F 21 05 01              2684 	ld	hl, #0x105
      000992 E5                    2685 	push	hl
      000993 21 0F 01              2686 	ld	hl, #0x10f
      000996 E5                    2687 	push	hl
      000997 CDr00r00              2688 	call	_set_win_tiles
                                   2689 ;src/main.c:153: }
      00099A E8 10                 2690 	add	sp, #16
      00099C C9                    2691 	ret
                                   2692 ;src/main.c:155: void updateMissileCount(int8_t amount) {
                                   2693 ;	---------------------------------
                                   2694 ; Function updateMissileCount
                                   2695 ; ---------------------------------
      00099D                       2696 _updateMissileCount::
      00099D E8 F3                 2697 	add	sp, #-13
                                   2698 ;src/main.c:156: if (amount == -1) {
      00099F F8 0F                 2699 	ldhl	sp,	#15
      0009A1 7E                    2700 	ld	a, (hl)
      0009A2 3C                    2701 	inc	a
      0009A3 20 13                 2702 	jr	NZ, 00112$
                                   2703 ;src/main.c:157: missiles--;
      0009A5 21rA9r00              2704 	ld	hl, #_missiles
      0009A8 35                    2705 	dec	(hl)
                                   2706 ;src/main.c:158: bcd_sub(&MISSILES, &INCREMENT);
      0009A9 11rB8r00              2707 	ld	de, #_INCREMENT
      0009AC D5                    2708 	push	de
      0009AD 11rAAr00              2709 	ld	de, #_MISSILES
      0009B0 D5                    2710 	push	de
      0009B1 CDr00r00              2711 	call	_bcd_sub
      0009B4 E8 04                 2712 	add	sp, #4
      0009B6 18 41                 2713 	jr	00104$
                                   2714 ;src/main.c:161: for(uint8_t i=0; i<amount;i++) {
      0009B8                       2715 00112$:
      0009B8 F8 0C                 2716 	ldhl	sp,	#12
      0009BA 36 00                 2717 	ld	(hl), #0x00
      0009BC                       2718 00106$:
      0009BC F8 0C                 2719 	ldhl	sp,	#12
      0009BE 4E                    2720 	ld	c, (hl)
      0009BF 06 00                 2721 	ld	b, #0x00
      0009C1 F8 0F                 2722 	ldhl	sp,	#15
      0009C3 7E                    2723 	ld	a, (hl)
      0009C4 F8 0A                 2724 	ldhl	sp,	#10
      0009C6 22                    2725 	ld	(hl+), a
      0009C7 07                    2726 	rlca
      0009C8 9F                    2727 	sbc	a, a
      0009C9 32                    2728 	ld	(hl-), a
      0009CA 79                    2729 	ld	a, c
      0009CB 96                    2730 	sub	a, (hl)
      0009CC 23                    2731 	inc	hl
      0009CD 78                    2732 	ld	a, b
      0009CE 9E                    2733 	sbc	a, (hl)
      0009CF 78                    2734 	ld	a, b
      0009D0 57                    2735 	ld	d, a
      0009D1 CB 7E                 2736 	bit	7, (hl)
      0009D3 28 07                 2737 	jr	Z, 00128$
      0009D5 CB 7A                 2738 	bit	7, d
      0009D7 20 08                 2739 	jr	NZ, 00129$
      0009D9 BF                    2740 	cp	a, a
      0009DA 18 05                 2741 	jr	00129$
      0009DC                       2742 00128$:
      0009DC CB 7A                 2743 	bit	7, d
      0009DE 28 01                 2744 	jr	Z, 00129$
      0009E0 37                    2745 	scf
      0009E1                       2746 00129$:
      0009E1 30 16                 2747 	jr	NC, 00104$
                                   2748 ;src/main.c:162: ++missiles;
      0009E3 21rA9r00              2749 	ld	hl, #_missiles
      0009E6 34                    2750 	inc	(hl)
                                   2751 ;src/main.c:163: bcd_add(&MISSILES, &INCREMENT);
      0009E7 11rB8r00              2752 	ld	de, #_INCREMENT
      0009EA D5                    2753 	push	de
      0009EB 11rAAr00              2754 	ld	de, #_MISSILES
      0009EE D5                    2755 	push	de
      0009EF CDr00r00              2756 	call	_bcd_add
      0009F2 E8 04                 2757 	add	sp, #4
                                   2758 ;src/main.c:161: for(uint8_t i=0; i<amount;i++) {
      0009F4 F8 0C                 2759 	ldhl	sp,	#12
      0009F6 34                    2760 	inc	(hl)
      0009F7 18 C3                 2761 	jr	00106$
      0009F9                       2762 00104$:
                                   2763 ;src/main.c:168: len = bcd2text(&MISSILES, 0x01, buf);
      0009F9 F8 00                 2764 	ldhl	sp,	#0
      0009FB 4D                    2765 	ld	c, l
      0009FC 44                    2766 	ld	b, h
      0009FD 59                    2767 	ld	e, c
      0009FE 50                    2768 	ld	d, b
      0009FF C5                    2769 	push	bc
      000A00 D5                    2770 	push	de
      000A01 3E 01                 2771 	ld	a, #0x01
      000A03 F5                    2772 	push	af
      000A04 33                    2773 	inc	sp
      000A05 11rAAr00              2774 	ld	de, #_MISSILES
      000A08 D5                    2775 	push	de
      000A09 CDr00r00              2776 	call	_bcd2text
      000A0C E8 05                 2777 	add	sp, #5
      000A0E C1                    2778 	pop	bc
                                   2779 ;src/main.c:169: set_win_tiles(18, 0, 2, 1, buf+6);
      000A0F 21 06 00              2780 	ld	hl, #0x0006
      000A12 09                    2781 	add	hl, bc
      000A13 E5                    2782 	push	hl
      000A14 21 02 01              2783 	ld	hl, #0x102
      000A17 E5                    2784 	push	hl
      000A18 21 12 00              2785 	ld	hl, #0x12
      000A1B E5                    2786 	push	hl
      000A1C CDr00r00              2787 	call	_set_win_tiles
                                   2788 ;src/main.c:171: }
      000A1F E8 13                 2789 	add	sp, #19
      000A21 C9                    2790 	ret
                                   2791 ;src/main.c:173: void incrementScore() {
                                   2792 ;	---------------------------------
                                   2793 ; Function incrementScore
                                   2794 ; ---------------------------------
      000A22                       2795 _incrementScore::
                                   2796 ;src/main.c:174: score += 1;
      000A22 21rB2r00              2797 	ld	hl, #_score
      000A25 2A                    2798 	ld	a, (hl+)
      000A26 4F                    2799 	ld	c, a
      000A27 3A                    2800 	ld	a, (hl-)
      000A28 47                    2801 	ld	b, a
      000A29 03                    2802 	inc	bc
      000A2A 79                    2803 	ld	a, c
      000A2B 22                    2804 	ld	(hl+), a
      000A2C 70                    2805 	ld	(hl), b
                                   2806 ;src/main.c:175: bcd_add(&SCORE, &INCREMENT);
      000A2D 11rB8r00              2807 	ld	de, #_INCREMENT
      000A30 D5                    2808 	push	de
      000A31 11rB4r00              2809 	ld	de, #_SCORE
      000A34 D5                    2810 	push	de
      000A35 CDr00r00              2811 	call	_bcd_add
      000A38 E8 04                 2812 	add	sp, #4
                                   2813 ;src/main.c:176: }
      000A3A C9                    2814 	ret
                                   2815 ;src/main.c:178: void updateDirection() {
                                   2816 ;	---------------------------------
                                   2817 ; Function updateDirection
                                   2818 ; ---------------------------------
      000A3B                       2819 _updateDirection::
      000A3B E8 FC                 2820 	add	sp, #-4
                                   2821 ;src/main.c:182: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A3D 21rDCr00              2822 	ld	hl, #_joydata
      000A40 5E                    2823 	ld	e, (hl)
      000A41 7B                    2824 	ld	a, e
      000A42 E6 01                 2825 	and	a, #0x01
      000A44 F8 00                 2826 	ldhl	sp,	#0
      000A46 22                    2827 	ld	(hl+), a
      000A47 AF                    2828 	xor	a, a
      000A48 22                    2829 	ld	(hl+), a
      000A49 7B                    2830 	ld	a, e
      000A4A E6 04                 2831 	and	a, #0x04
      000A4C 22                    2832 	ld	(hl+), a
      000A4D AF                    2833 	xor	a, a
      000A4E 32                    2834 	ld	(hl-), a
      000A4F 2B                    2835 	dec	hl
      000A50 7B                    2836 	ld	a, e
      000A51 E6 08                 2837 	and	a, #0x08
      000A53 4F                    2838 	ld	c, a
      000A54 06 00                 2839 	ld	b, #0x00
      000A56 3A                    2840 	ld	a, (hl-)
      000A57 B6                    2841 	or	a, (hl)
      000A58 28 14                 2842 	jr	Z, 00102$
      000A5A F8 03                 2843 	ldhl	sp,	#3
      000A5C 3A                    2844 	ld	a, (hl-)
      000A5D B6                    2845 	or	a, (hl)
      000A5E 20 0E                 2846 	jr	NZ, 00102$
      000A60 78                    2847 	ld	a, b
      000A61 B1                    2848 	or	a, c
      000A62 20 0A                 2849 	jr	NZ, 00102$
                                   2850 ;src/main.c:183: xDir = 1;
      000A64 21r94r00              2851 	ld	hl, #_xDir
      000A67 36 01                 2852 	ld	(hl), #0x01
                                   2853 ;src/main.c:184: yDir = 0;
      000A69 21r95r00              2854 	ld	hl, #_yDir
      000A6C 36 00                 2855 	ld	(hl), #0x00
      000A6E                       2856 00102$:
                                   2857 ;src/main.c:186: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A6E 7B                    2858 	ld	a, e
      000A6F E6 02                 2859 	and	a, #0x02
      000A71 5F                    2860 	ld	e, a
      000A72 16 00                 2861 	ld	d, #0x00
      000A74 7A                    2862 	ld	a, d
      000A75 B3                    2863 	or	a, e
      000A76 28 14                 2864 	jr	Z, 00106$
      000A78 F8 03                 2865 	ldhl	sp,	#3
      000A7A 3A                    2866 	ld	a, (hl-)
      000A7B B6                    2867 	or	a, (hl)
      000A7C 20 0E                 2868 	jr	NZ, 00106$
      000A7E 78                    2869 	ld	a, b
      000A7F B1                    2870 	or	a, c
      000A80 20 0A                 2871 	jr	NZ, 00106$
                                   2872 ;src/main.c:187: xDir = -1;
      000A82 21r94r00              2873 	ld	hl, #_xDir
      000A85 36 FF                 2874 	ld	(hl), #0xff
                                   2875 ;src/main.c:188: yDir = 0;
      000A87 21r95r00              2876 	ld	hl, #_yDir
      000A8A 36 00                 2877 	ld	(hl), #0x00
      000A8C                       2878 00106$:
                                   2879 ;src/main.c:190: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000A8C F8 03                 2880 	ldhl	sp,	#3
      000A8E 3A                    2881 	ld	a, (hl-)
      000A8F B6                    2882 	or	a, (hl)
      000A90 28 13                 2883 	jr	Z, 00110$
      000A92 7A                    2884 	ld	a, d
      000A93 B3                    2885 	or	a, e
      000A94 20 0F                 2886 	jr	NZ, 00110$
      000A96 2B                    2887 	dec	hl
      000A97 3A                    2888 	ld	a, (hl-)
      000A98 B6                    2889 	or	a, (hl)
      000A99 20 0A                 2890 	jr	NZ, 00110$
                                   2891 ;src/main.c:191: xDir = 0;
      000A9B 21r94r00              2892 	ld	hl, #_xDir
      000A9E 36 00                 2893 	ld	(hl), #0x00
                                   2894 ;src/main.c:192: yDir = -1;
      000AA0 21r95r00              2895 	ld	hl, #_yDir
      000AA3 36 FF                 2896 	ld	(hl), #0xff
      000AA5                       2897 00110$:
                                   2898 ;src/main.c:194: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000AA5 78                    2899 	ld	a, b
      000AA6 B1                    2900 	or	a, c
      000AA7 28 14                 2901 	jr	Z, 00114$
      000AA9 7A                    2902 	ld	a, d
      000AAA B3                    2903 	or	a, e
      000AAB 20 10                 2904 	jr	NZ, 00114$
      000AAD F8 01                 2905 	ldhl	sp,	#1
      000AAF 3A                    2906 	ld	a, (hl-)
      000AB0 B6                    2907 	or	a, (hl)
      000AB1 20 0A                 2908 	jr	NZ, 00114$
                                   2909 ;src/main.c:195: xDir = 0;
      000AB3 21r94r00              2910 	ld	hl, #_xDir
      000AB6 36 00                 2911 	ld	(hl), #0x00
                                   2912 ;src/main.c:196: yDir = 1;
      000AB8 21r95r00              2913 	ld	hl, #_yDir
      000ABB 36 01                 2914 	ld	(hl), #0x01
      000ABD                       2915 00114$:
                                   2916 ;src/main.c:200: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000ABD F8 03                 2917 	ldhl	sp,	#3
      000ABF 3A                    2918 	ld	a, (hl-)
      000AC0 B6                    2919 	or	a, (hl)
      000AC1 28 0F                 2920 	jr	Z, 00118$
      000AC3 2B                    2921 	dec	hl
      000AC4 3A                    2922 	ld	a, (hl-)
      000AC5 B6                    2923 	or	a, (hl)
      000AC6 28 0A                 2924 	jr	Z, 00118$
                                   2925 ;src/main.c:201: xDir = 1;
      000AC8 21r94r00              2926 	ld	hl, #_xDir
      000ACB 36 01                 2927 	ld	(hl), #0x01
                                   2928 ;src/main.c:202: yDir = -1;
      000ACD 21r95r00              2929 	ld	hl, #_yDir
      000AD0 36 FF                 2930 	ld	(hl), #0xff
      000AD2                       2931 00118$:
                                   2932 ;src/main.c:204: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000AD2 F8 03                 2933 	ldhl	sp,	#3
      000AD4 3A                    2934 	ld	a, (hl-)
      000AD5 B6                    2935 	or	a, (hl)
      000AD6 28 0E                 2936 	jr	Z, 00121$
      000AD8 7A                    2937 	ld	a, d
      000AD9 B3                    2938 	or	a, e
      000ADA 28 0A                 2939 	jr	Z, 00121$
                                   2940 ;src/main.c:205: xDir = -1;
      000ADC 21r94r00              2941 	ld	hl, #_xDir
      000ADF 36 FF                 2942 	ld	(hl), #0xff
                                   2943 ;src/main.c:206: yDir = -1;
      000AE1 21r95r00              2944 	ld	hl, #_yDir
      000AE4 36 FF                 2945 	ld	(hl), #0xff
      000AE6                       2946 00121$:
                                   2947 ;src/main.c:208: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000AE6 78                    2948 	ld	a, b
      000AE7 B1                    2949 	or	a, c
      000AE8 28 10                 2950 	jr	Z, 00124$
      000AEA F8 01                 2951 	ldhl	sp,	#1
      000AEC 3A                    2952 	ld	a, (hl-)
      000AED B6                    2953 	or	a, (hl)
      000AEE 28 0A                 2954 	jr	Z, 00124$
                                   2955 ;src/main.c:209: xDir = 1;
      000AF0 21r94r00              2956 	ld	hl, #_xDir
      000AF3 36 01                 2957 	ld	(hl), #0x01
                                   2958 ;src/main.c:210: yDir = 1;
      000AF5 21r95r00              2959 	ld	hl, #_yDir
      000AF8 36 01                 2960 	ld	(hl), #0x01
      000AFA                       2961 00124$:
                                   2962 ;src/main.c:212: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000AFA 78                    2963 	ld	a, b
      000AFB B1                    2964 	or	a, c
      000AFC 28 0E                 2965 	jr	Z, 00127$
      000AFE 7A                    2966 	ld	a, d
      000AFF B3                    2967 	or	a, e
      000B00 28 0A                 2968 	jr	Z, 00127$
                                   2969 ;src/main.c:213: xDir = -1;
      000B02 21r94r00              2970 	ld	hl, #_xDir
      000B05 36 FF                 2971 	ld	(hl), #0xff
                                   2972 ;src/main.c:214: yDir = 1;
      000B07 21r95r00              2973 	ld	hl, #_yDir
      000B0A 36 01                 2974 	ld	(hl), #0x01
      000B0C                       2975 00127$:
                                   2976 ;src/main.c:219: if (xDir == 0 && yDir == 0) {
      000B0C FAr94r00              2977 	ld	a, (#_xDir)
      000B0F B7                    2978 	or	a, a
      000B10 20 07                 2979 	jr	NZ, 00130$
      000B12 FAr95r00              2980 	ld	a, (#_yDir)
      000B15 B7                    2981 	or	a, a
                                   2982 ;src/main.c:220: return;
      000B16 CAr62r0C              2983 	jp	Z,00195$
      000B19                       2984 00130$:
                                   2985 ;src/main.c:252: if (xDir == 0 && yDir > 0) {
      000B19 21r95r00              2986 	ld	hl, #_yDir
      000B1C 5E                    2987 	ld	e, (hl)
      000B1D AF                    2988 	xor	a, a
      000B1E 57                    2989 	ld	d, a
      000B1F 96                    2990 	sub	a, (hl)
      000B20 CB 7B                 2991 	bit	7, e
      000B22 28 07                 2992 	jr	Z, 00387$
      000B24 CB 7A                 2993 	bit	7, d
      000B26 20 08                 2994 	jr	NZ, 00388$
      000B28 BF                    2995 	cp	a, a
      000B29 18 05                 2996 	jr	00388$
      000B2B                       2997 00387$:
      000B2B CB 7A                 2998 	bit	7, d
      000B2D 28 01                 2999 	jr	Z, 00388$
      000B2F 37                    3000 	scf
      000B30                       3001 00388$:
      000B30 3E 00                 3002 	ld	a, #0x00
      000B32 17                    3003 	rla
      000B33 4F                    3004 	ld	c, a
      000B34 FAr94r00              3005 	ld	a, (#_xDir)
      000B37 B7                    3006 	or	a,a
      000B38 20 1A                 3007 	jr	NZ, 00160$
      000B3A B1                    3008 	or	a,c
      000B3B 28 17                 3009 	jr	Z, 00160$
                                   3010 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B3D 21r02r00              3011 	ld	hl, #(_shadow_OAM + 2)
      000B40 36 00                 3012 	ld	(hl), #0x00
      000B42 21r06r00              3013 	ld	hl, #(_shadow_OAM + 6)
      000B45 36 02                 3014 	ld	(hl), #0x02
                                   3015 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B47 21r03r00              3016 	ld	hl, #(_shadow_OAM + 3)
      000B4A 36 40                 3017 	ld	(hl), #0x40
      000B4C 21r07r00              3018 	ld	hl, #(_shadow_OAM + 7)
      000B4F 36 40                 3019 	ld	(hl), #0x40
                                   3020 ;src/main.c:256: set_sprite_prop(1, S_FLIPY); 
      000B51 C3r62r0C              3021 	jp	00195$
      000B54                       3022 00160$:
                                   3023 ;src/main.c:258: else if (xDir == 0 && yDir < 0) {
      000B54 FAr95r00              3024 	ld	a, (#_yDir)
      000B57 07                    3025 	rlca
      000B58 E6 01                 3026 	and	a,#0x01
      000B5A F8 02                 3027 	ldhl	sp,	#2
      000B5C 77                    3028 	ld	(hl), a
      000B5D FAr94r00              3029 	ld	a, (#_xDir)
      000B60 B7                    3030 	or	a, a
      000B61 20 1D                 3031 	jr	NZ, 00156$
      000B63 F8 02                 3032 	ldhl	sp,	#2
      000B65 7E                    3033 	ld	a, (hl)
      000B66 B7                    3034 	or	a, a
      000B67 28 17                 3035 	jr	Z, 00156$
                                   3036 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B69 21r02r00              3037 	ld	hl, #(_shadow_OAM + 2)
      000B6C 36 00                 3038 	ld	(hl), #0x00
      000B6E 21r06r00              3039 	ld	hl, #(_shadow_OAM + 6)
      000B71 36 02                 3040 	ld	(hl), #0x02
                                   3041 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B73 21r03r00              3042 	ld	hl, #(_shadow_OAM + 3)
      000B76 36 00                 3043 	ld	(hl), #0x00
      000B78 21r07r00              3044 	ld	hl, #(_shadow_OAM + 7)
      000B7B 36 00                 3045 	ld	(hl), #0x00
                                   3046 ;src/main.c:262: set_sprite_prop(1, 0); 
      000B7D C3r62r0C              3047 	jp	00195$
      000B80                       3048 00156$:
                                   3049 ;src/main.c:264: else if (xDir > 0 && yDir == 0) {
      000B80 21r94r00              3050 	ld	hl, #_xDir
      000B83 5E                    3051 	ld	e, (hl)
      000B84 AF                    3052 	xor	a, a
      000B85 57                    3053 	ld	d, a
      000B86 96                    3054 	sub	a, (hl)
      000B87 CB 7B                 3055 	bit	7, e
      000B89 28 07                 3056 	jr	Z, 00389$
      000B8B CB 7A                 3057 	bit	7, d
      000B8D 20 08                 3058 	jr	NZ, 00390$
      000B8F BF                    3059 	cp	a, a
      000B90 18 05                 3060 	jr	00390$
      000B92                       3061 00389$:
      000B92 CB 7A                 3062 	bit	7, d
      000B94 28 01                 3063 	jr	Z, 00390$
      000B96 37                    3064 	scf
      000B97                       3065 00390$:
      000B97 3E 00                 3066 	ld	a, #0x00
      000B99 17                    3067 	rla
      000B9A 47                    3068 	ld	b, a
      000B9B B7                    3069 	or	a, a
      000B9C 28 1D                 3070 	jr	Z, 00152$
      000B9E FAr95r00              3071 	ld	a, (#_yDir)
      000BA1 B7                    3072 	or	a, a
      000BA2 20 17                 3073 	jr	NZ, 00152$
                                   3074 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BA4 21r02r00              3075 	ld	hl, #(_shadow_OAM + 2)
      000BA7 36 04                 3076 	ld	(hl), #0x04
      000BA9 21r06r00              3077 	ld	hl, #(_shadow_OAM + 6)
      000BAC 36 06                 3078 	ld	(hl), #0x06
                                   3079 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BAE 21r03r00              3080 	ld	hl, #(_shadow_OAM + 3)
      000BB1 36 00                 3081 	ld	(hl), #0x00
      000BB3 21r07r00              3082 	ld	hl, #(_shadow_OAM + 7)
      000BB6 36 00                 3083 	ld	(hl), #0x00
                                   3084 ;src/main.c:268: set_sprite_prop(1, 0); 
      000BB8 C3r62r0C              3085 	jp	00195$
      000BBB                       3086 00152$:
                                   3087 ;src/main.c:270: else if (xDir < 0 && yDir == 0) {
      000BBB FAr94r00              3088 	ld	a, (#_xDir)
      000BBE 07                    3089 	rlca
      000BBF E6 01                 3090 	and	a,#0x01
      000BC1 F8 03                 3091 	ldhl	sp,	#3
      000BC3 77                    3092 	ld	(hl), a
      000BC4 7E                    3093 	ld	a, (hl)
      000BC5 B7                    3094 	or	a, a
      000BC6 28 1D                 3095 	jr	Z, 00148$
      000BC8 FAr95r00              3096 	ld	a, (#_yDir)
      000BCB B7                    3097 	or	a, a
      000BCC 20 17                 3098 	jr	NZ, 00148$
                                   3099 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BCE 21r02r00              3100 	ld	hl, #(_shadow_OAM + 2)
      000BD1 36 04                 3101 	ld	(hl), #0x04
      000BD3 21r06r00              3102 	ld	hl, #(_shadow_OAM + 6)
      000BD6 36 06                 3103 	ld	(hl), #0x06
                                   3104 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BD8 21r03r00              3105 	ld	hl, #(_shadow_OAM + 3)
      000BDB 36 20                 3106 	ld	(hl), #0x20
      000BDD 21r07r00              3107 	ld	hl, #(_shadow_OAM + 7)
      000BE0 36 20                 3108 	ld	(hl), #0x20
                                   3109 ;src/main.c:274: set_sprite_prop(1, S_FLIPX); 
      000BE2 C3r62r0C              3110 	jp	00195$
      000BE5                       3111 00148$:
                                   3112 ;src/main.c:276: else if (xDir > 0 && yDir < 0) {
      000BE5 78                    3113 	ld	a, b
      000BE6 B7                    3114 	or	a, a
      000BE7 28 1C                 3115 	jr	Z, 00144$
      000BE9 F8 02                 3116 	ldhl	sp,	#2
      000BEB 7E                    3117 	ld	a, (hl)
      000BEC B7                    3118 	or	a, a
      000BED 28 16                 3119 	jr	Z, 00144$
                                   3120 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BEF 21r02r00              3121 	ld	hl, #(_shadow_OAM + 2)
      000BF2 36 08                 3122 	ld	(hl), #0x08
      000BF4 21r06r00              3123 	ld	hl, #(_shadow_OAM + 6)
      000BF7 36 0A                 3124 	ld	(hl), #0x0a
                                   3125 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BF9 21r03r00              3126 	ld	hl, #(_shadow_OAM + 3)
      000BFC 36 00                 3127 	ld	(hl), #0x00
      000BFE 21r07r00              3128 	ld	hl, #(_shadow_OAM + 7)
      000C01 36 00                 3129 	ld	(hl), #0x00
                                   3130 ;src/main.c:280: set_sprite_prop(1, 0); 
      000C03 18 5D                 3131 	jr	00195$
      000C05                       3132 00144$:
                                   3133 ;src/main.c:282: else if (xDir > 0 && yDir > 0) {
      000C05 78                    3134 	ld	a, b
      000C06 B7                    3135 	or	a, a
      000C07 28 1A                 3136 	jr	Z, 00140$
      000C09 79                    3137 	ld	a, c
      000C0A B7                    3138 	or	a, a
      000C0B 28 16                 3139 	jr	Z, 00140$
                                   3140 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C0D 21r02r00              3141 	ld	hl, #(_shadow_OAM + 2)
      000C10 36 08                 3142 	ld	(hl), #0x08
      000C12 21r06r00              3143 	ld	hl, #(_shadow_OAM + 6)
      000C15 36 0A                 3144 	ld	(hl), #0x0a
                                   3145 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C17 21r03r00              3146 	ld	hl, #(_shadow_OAM + 3)
      000C1A 36 40                 3147 	ld	(hl), #0x40
      000C1C 21r07r00              3148 	ld	hl, #(_shadow_OAM + 7)
      000C1F 36 40                 3149 	ld	(hl), #0x40
                                   3150 ;src/main.c:286: set_sprite_prop(1, S_FLIPY); 
      000C21 18 3F                 3151 	jr	00195$
      000C23                       3152 00140$:
                                   3153 ;src/main.c:288: else if (xDir < 0 && yDir > 0) {
      000C23 F8 03                 3154 	ldhl	sp,	#3
      000C25 7E                    3155 	ld	a, (hl)
      000C26 B7                    3156 	or	a, a
      000C27 28 1A                 3157 	jr	Z, 00136$
      000C29 79                    3158 	ld	a, c
      000C2A B7                    3159 	or	a, a
      000C2B 28 16                 3160 	jr	Z, 00136$
                                   3161 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C2D 21r02r00              3162 	ld	hl, #(_shadow_OAM + 2)
      000C30 36 08                 3163 	ld	(hl), #0x08
      000C32 21r06r00              3164 	ld	hl, #(_shadow_OAM + 6)
      000C35 36 0A                 3165 	ld	(hl), #0x0a
                                   3166 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C37 21r03r00              3167 	ld	hl, #(_shadow_OAM + 3)
      000C3A 36 60                 3168 	ld	(hl), #0x60
      000C3C 21r07r00              3169 	ld	hl, #(_shadow_OAM + 7)
      000C3F 36 60                 3170 	ld	(hl), #0x60
                                   3171 ;src/main.c:292: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000C41 18 1F                 3172 	jr	00195$
      000C43                       3173 00136$:
                                   3174 ;src/main.c:294: else if (xDir < 0 && yDir < 0) {
      000C43 F8 03                 3175 	ldhl	sp,	#3
      000C45 7E                    3176 	ld	a, (hl)
      000C46 B7                    3177 	or	a, a
      000C47 28 19                 3178 	jr	Z, 00195$
      000C49 2B                    3179 	dec	hl
      000C4A 7E                    3180 	ld	a, (hl)
      000C4B B7                    3181 	or	a, a
      000C4C 28 14                 3182 	jr	Z, 00195$
                                   3183 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C4E 21r02r00              3184 	ld	hl, #(_shadow_OAM + 2)
      000C51 36 08                 3185 	ld	(hl), #0x08
      000C53 21r06r00              3186 	ld	hl, #(_shadow_OAM + 6)
      000C56 36 0A                 3187 	ld	(hl), #0x0a
                                   3188 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C58 21r03r00              3189 	ld	hl, #(_shadow_OAM + 3)
      000C5B 36 20                 3190 	ld	(hl), #0x20
      000C5D 21r07r00              3191 	ld	hl, #(_shadow_OAM + 7)
      000C60 36 20                 3192 	ld	(hl), #0x20
                                   3193 ;src/main.c:298: set_sprite_prop(1, S_FLIPX); 
      000C62                       3194 00195$:
                                   3195 ;src/main.c:300: }
      000C62 E8 04                 3196 	add	sp, #4
      000C64 C9                    3197 	ret
                                   3198 ;src/main.c:329: void playSound(uint8_t type) {
                                   3199 ;	---------------------------------
                                   3200 ; Function playSound
                                   3201 ; ---------------------------------
      000C65                       3202 _playSound::
                                   3203 ;src/main.c:330: if (type == 20) { //singlegun
      000C65 F8 02                 3204 	ldhl	sp,	#2
      000C67 7E                    3205 	ld	a, (hl)
      000C68 D6 14                 3206 	sub	a, #0x14
      000C6A 20 13                 3207 	jr	NZ, 00102$
                                   3208 ;src/main.c:331: NR10_REG = 0x00;
      000C6C AF                    3209 	xor	a, a
      000C6D E0r00                 3210 	ldh	(_NR10_REG + 0), a
                                   3211 ;src/main.c:332: NR11_REG = 0x81;
      000C6F 3E 81                 3212 	ld	a, #0x81
      000C71 E0r00                 3213 	ldh	(_NR11_REG + 0), a
                                   3214 ;src/main.c:333: NR12_REG = 0x43;
      000C73 3E 43                 3215 	ld	a, #0x43
      000C75 E0r00                 3216 	ldh	(_NR12_REG + 0), a
                                   3217 ;src/main.c:334: NR13_REG = 0X00;//0x6D;
      000C77 AF                    3218 	xor	a, a
      000C78 E0r00                 3219 	ldh	(_NR13_REG + 0), a
                                   3220 ;src/main.c:335: NR14_REG = 0x86;
      000C7A 3E 86                 3221 	ld	a, #0x86
      000C7C E0r00                 3222 	ldh	(_NR14_REG + 0), a
                                   3223 ;src/main.c:336: return;
      000C7E C9                    3224 	ret
      000C7F                       3225 00102$:
                                   3226 ;src/main.c:338: if (type == 23) {
      000C7F F8 02                 3227 	ldhl	sp,	#2
      000C81 7E                    3228 	ld	a, (hl)
      000C82 D6 17                 3229 	sub	a, #0x17
      000C84 20 12                 3230 	jr	NZ, 00104$
                                   3231 ;src/main.c:339: NR10_REG = 0x00;
      000C86 AF                    3232 	xor	a, a
      000C87 E0r00                 3233 	ldh	(_NR10_REG + 0), a
                                   3234 ;src/main.c:340: NR11_REG = 0x81;
      000C89 3E 81                 3235 	ld	a, #0x81
      000C8B E0r00                 3236 	ldh	(_NR11_REG + 0), a
                                   3237 ;src/main.c:341: NR12_REG = 0x53;
      000C8D 3E 53                 3238 	ld	a, #0x53
      000C8F E0r00                 3239 	ldh	(_NR12_REG + 0), a
                                   3240 ;src/main.c:342: NR13_REG = 0X00;//0x6D;
      000C91 AF                    3241 	xor	a, a
      000C92 E0r00                 3242 	ldh	(_NR13_REG + 0), a
                                   3243 ;src/main.c:343: NR14_REG = 0x86;
      000C94 3E 86                 3244 	ld	a, #0x86
      000C96 E0r00                 3245 	ldh	(_NR14_REG + 0), a
      000C98                       3246 00104$:
                                   3247 ;src/main.c:345: if (type == 26) {
      000C98 F8 02                 3248 	ldhl	sp,	#2
      000C9A 7E                    3249 	ld	a, (hl)
      000C9B D6 1A                 3250 	sub	a, #0x1a
      000C9D 20 13                 3251 	jr	NZ, 00106$
                                   3252 ;src/main.c:346: NR10_REG = 0x00;
      000C9F AF                    3253 	xor	a, a
      000CA0 E0r00                 3254 	ldh	(_NR10_REG + 0), a
                                   3255 ;src/main.c:347: NR11_REG = 0x89;
      000CA2 3E 89                 3256 	ld	a, #0x89
      000CA4 E0r00                 3257 	ldh	(_NR11_REG + 0), a
                                   3258 ;src/main.c:348: NR12_REG = 0x55;
      000CA6 3E 55                 3259 	ld	a, #0x55
      000CA8 E0r00                 3260 	ldh	(_NR12_REG + 0), a
                                   3261 ;src/main.c:349: NR13_REG = 0x70;//0Xbe;//0x6D;
      000CAA 3E 70                 3262 	ld	a, #0x70
      000CAC E0r00                 3263 	ldh	(_NR13_REG + 0), a
                                   3264 ;src/main.c:350: NR14_REG = 0x84;
      000CAE 3E 84                 3265 	ld	a, #0x84
      000CB0 E0r00                 3266 	ldh	(_NR14_REG + 0), a
      000CB2                       3267 00106$:
                                   3268 ;src/main.c:352: if (type == 0) {  // explosion
      000CB2 F8 02                 3269 	ldhl	sp,	#2
      000CB4 7E                    3270 	ld	a, (hl)
      000CB5 B7                    3271 	or	a, a
      000CB6 C0                    3272 	ret	NZ
                                   3273 ;src/main.c:353: NR41_REG = 0x20;  
      000CB7 3E 20                 3274 	ld	a, #0x20
      000CB9 E0r00                 3275 	ldh	(_NR41_REG + 0), a
                                   3276 ;src/main.c:354: NR42_REG = 0xa2;//0xa3;  
      000CBB 3E A2                 3277 	ld	a, #0xa2
      000CBD E0r00                 3278 	ldh	(_NR42_REG + 0), a
                                   3279 ;src/main.c:355: NR43_REG = 0x57;  
      000CBF 3E 57                 3280 	ld	a, #0x57
      000CC1 E0r00                 3281 	ldh	(_NR43_REG + 0), a
                                   3282 ;src/main.c:356: NR44_REG = 0x80;  
      000CC3 3E 80                 3283 	ld	a, #0x80
      000CC5 E0r00                 3284 	ldh	(_NR44_REG + 0), a
                                   3285 ;src/main.c:362: }
      000CC7 C9                    3286 	ret
                                   3287 ;src/main.c:364: void initEnemies(uint8_t loadSprites) {
                                   3288 ;	---------------------------------
                                   3289 ; Function initEnemies
                                   3290 ; ---------------------------------
      000CC8                       3291 _initEnemies::
      000CC8 E8 F9                 3292 	add	sp, #-7
                                   3293 ;src/main.c:366: if (loadSprites) {
      000CCA F8 09                 3294 	ldhl	sp,	#9
      000CCC 7E                    3295 	ld	a, (hl)
      000CCD B7                    3296 	or	a, a
      000CCE 28 1A                 3297 	jr	Z, 00102$
                                   3298 ;src/main.c:368: set_sprite_data(0x40, 5, enemy1);
      000CD0 11r18r05              3299 	ld	de, #_enemy1
      000CD3 D5                    3300 	push	de
      000CD4 21 40 05              3301 	ld	hl, #0x540
      000CD7 E5                    3302 	push	hl
      000CD8 CDr00r00              3303 	call	_set_sprite_data
      000CDB E8 04                 3304 	add	sp, #4
                                   3305 ;src/main.c:369: set_sprite_data(0x50, 8, largeenemies);
      000CDD 11r68r05              3306 	ld	de, #_largeenemies
      000CE0 D5                    3307 	push	de
      000CE1 21 50 08              3308 	ld	hl, #0x850
      000CE4 E5                    3309 	push	hl
      000CE5 CDr00r00              3310 	call	_set_sprite_data
      000CE8 E8 04                 3311 	add	sp, #4
      000CEA                       3312 00102$:
                                   3313 ;src/main.c:372: struct Enemy *eptr = enemies;
      000CEA F8 04                 3314 	ldhl	sp,	#4
      000CEC 3Er50                 3315 	ld	a, #<(_enemies)
      000CEE 22                    3316 	ld	(hl+), a
                                   3317 ;src/main.c:374: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000CEF 3Es00                 3318 	ld	a, #>(_enemies)
      000CF1 22                    3319 	ld	(hl+), a
      000CF2 36 00                 3320 	ld	(hl), #0x00
      000CF4                       3321 00116$:
      000CF4 21r4Dr08              3322 	ld	hl, #_ENEMYCOUNT
      000CF7 4E                    3323 	ld	c, (hl)
      000CF8 F8 06                 3324 	ldhl	sp,	#6
      000CFA 7E                    3325 	ld	a, (hl)
      000CFB 91                    3326 	sub	a, c
      000CFC D2r70r0E              3327 	jp	NC, 00118$
                                   3328 ;src/main.c:375: if (eptr->alive == 0) {
      000CFF 2B                    3329 	dec	hl
      000D00 2B                    3330 	dec	hl
      000D01 2A                    3331 	ld	a, (hl+)
      000D02 5F                    3332 	ld	e, a
      000D03 56                    3333 	ld	d, (hl)
      000D04 21 09 00              3334 	ld	hl, #0x0009
      000D07 19                    3335 	add	hl, de
      000D08 4D                    3336 	ld	c, l
      000D09 44                    3337 	ld	b, h
      000D0A 0A                    3338 	ld	a, (bc)
      000D0B F8 03                 3339 	ldhl	sp,	#3
      000D0D 77                    3340 	ld	(hl), a
      000D0E 7E                    3341 	ld	a, (hl)
      000D0F B7                    3342 	or	a, a
      000D10 C2r59r0E              3343 	jp	NZ, 00107$
                                   3344 ;src/main.c:377: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      000D13 CDr00r00              3345 	call	_rand
      000D16 F8 02                 3346 	ldhl	sp,	#2
      000D18 73                    3347 	ld	(hl), e
      000D19 FAr17r05              3348 	ld	a, (#_enemyOptionCount)
      000D1C F8 03                 3349 	ldhl	sp,	#3
      000D1E 77                    3350 	ld	(hl), a
      000D1F 3A                    3351 	ld	a, (hl-)
      000D20 57                    3352 	ld	d, a
      000D21 5E                    3353 	ld	e, (hl)
      000D22 D5                    3354 	push	de
      000D23 CDr00r00              3355 	call	__moduchar
      000D26 E1                    3356 	pop	hl
                                   3357 ;src/main.c:379: (*eptr) = enemyOptions[enemyInd];
      000D27 F8 03                 3358 	ldhl	sp,#3
      000D29 73                    3359 	ld	(hl), e
      000D2A 3A                    3360 	ld	a, (hl-)
      000D2B 22                    3361 	ld	(hl+), a
      000D2C AF                    3362 	xor	a, a
      000D2D 32                    3363 	ld	(hl-), a
      000D2E 3A                    3364 	ld	a, (hl-)
      000D2F 2B                    3365 	dec	hl
      000D30 77                    3366 	ld	(hl), a
      000D31 F8 03                 3367 	ldhl	sp,	#3
      000D33 3A                    3368 	ld	a, (hl-)
      000D34 2B                    3369 	dec	hl
      000D35 77                    3370 	ld	(hl), a
      000D36 3E 04                 3371 	ld	a, #0x04
      000D38                       3372 00146$:
      000D38 F8 00                 3373 	ldhl	sp,	#0
      000D3A CB 26                 3374 	sla	(hl)
      000D3C 23                    3375 	inc	hl
      000D3D CB 16                 3376 	rl	(hl)
      000D3F 3D                    3377 	dec	a
      000D40 20 F6                 3378 	jr	NZ, 00146$
      000D42 D1                    3379 	pop	de
      000D43 D5                    3380 	push	de
      000D44 21r00r00              3381 	ld	hl, #_enemyOptions
      000D47 19                    3382 	add	hl, de
      000D48 E5                    3383 	push	hl
      000D49 7D                    3384 	ld	a, l
      000D4A F8 04                 3385 	ldhl	sp,	#4
      000D4C 77                    3386 	ld	(hl), a
      000D4D E1                    3387 	pop	hl
      000D4E 7C                    3388 	ld	a, h
      000D4F F8 03                 3389 	ldhl	sp,	#3
      000D51 32                    3390 	ld	(hl-), a
      000D52 2A                    3391 	ld	a, (hl+)
      000D53 5F                    3392 	ld	e, a
      000D54 2A                    3393 	ld	a, (hl+)
      000D55 57                    3394 	ld	d, a
      000D56 2A                    3395 	ld	a, (hl+)
      000D57 4F                    3396 	ld	c, a
      000D58 46                    3397 	ld	b, (hl)
      000D59 21 10 00              3398 	ld	hl, #0x0010
      000D5C E5                    3399 	push	hl
      000D5D D5                    3400 	push	de
      000D5E C5                    3401 	push	bc
      000D5F CDr00r00              3402 	call	___memcpy
      000D62 E8 06                 3403 	add	sp, #6
                                   3404 ;src/main.c:381: uint8_t posIndex =  ((uint8_t)rand()) % (uint8_t)8;//(rand() & 8);
      000D64 CDr00r00              3405 	call	_rand
      000D67 7B                    3406 	ld	a, e
      000D68 E6 07                 3407 	and	a, #0x07
      000D6A F8 03                 3408 	ldhl	sp,	#3
      000D6C 77                    3409 	ld	(hl), a
                                   3410 ;src/main.c:382: eptr->x = xSpawnPositions[posIndex];
      000D6D 11r4Er08              3411 	ld	de, #_xSpawnPositions
      000D70 6E                    3412 	ld	l, (hl)
      000D71 26 00                 3413 	ld	h, #0x00
      000D73 19                    3414 	add	hl, de
      000D74 4D                    3415 	ld	c, l
      000D75 44                    3416 	ld	b, h
      000D76 0A                    3417 	ld	a, (bc)
      000D77 4F                    3418 	ld	c, a
      000D78 06 00                 3419 	ld	b, #0x00
      000D7A F8 04                 3420 	ldhl	sp,	#4
      000D7C 2A                    3421 	ld	a,	(hl+)
      000D7D 66                    3422 	ld	h, (hl)
      000D7E 6F                    3423 	ld	l, a
      000D7F 79                    3424 	ld	a, c
      000D80 22                    3425 	ld	(hl+), a
      000D81 70                    3426 	ld	(hl), b
                                   3427 ;src/main.c:383: eptr->y = ySpawnPositions[posIndex];
      000D82 F8 04                 3428 	ldhl	sp,#4
      000D84 2A                    3429 	ld	a, (hl+)
      000D85 5F                    3430 	ld	e, a
      000D86 56                    3431 	ld	d, (hl)
      000D87 21 02 00              3432 	ld	hl, #0x0002
      000D8A 19                    3433 	add	hl, de
      000D8B 33                    3434 	inc	sp
      000D8C 33                    3435 	inc	sp
      000D8D E5                    3436 	push	hl
      000D8E 11r56r08              3437 	ld	de, #_ySpawnPositions
      000D91 F8 03                 3438 	ldhl	sp,	#3
      000D93 6E                    3439 	ld	l, (hl)
      000D94 26 00                 3440 	ld	h, #0x00
      000D96 19                    3441 	add	hl, de
      000D97 4D                    3442 	ld	c, l
      000D98 44                    3443 	ld	b, h
      000D99 0A                    3444 	ld	a, (bc)
      000D9A 4F                    3445 	ld	c, a
      000D9B 06 00                 3446 	ld	b, #0x00
      000D9D E1                    3447 	pop	hl
      000D9E E5                    3448 	push	hl
      000D9F 79                    3449 	ld	a, c
      000DA0 22                    3450 	ld	(hl+), a
      000DA1 70                    3451 	ld	(hl), b
                                   3452 ;src/main.c:385: if (eptr->spriteCount == 1) {
      000DA2 F8 04                 3453 	ldhl	sp,#4
      000DA4 2A                    3454 	ld	a, (hl+)
      000DA5 5F                    3455 	ld	e, a
      000DA6 56                    3456 	ld	d, (hl)
      000DA7 21 08 00              3457 	ld	hl, #0x0008
      000DAA 19                    3458 	add	hl, de
      000DAB 4D                    3459 	ld	c, l
      000DAC 44                    3460 	ld	b, h
      000DAD 0A                    3461 	ld	a, (bc)
      000DAE 47                    3462 	ld	b, a
                                   3463 ;src/main.c:386: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DAF F8 04                 3464 	ldhl	sp,#4
      000DB1 2A                    3465 	ld	a, (hl+)
      000DB2 5F                    3466 	ld	e, a
      000DB3 56                    3467 	ld	d, (hl)
      000DB4 21 06 00              3468 	ld	hl, #0x0006
      000DB7 19                    3469 	add	hl, de
      000DB8 5D                    3470 	ld	e, l
      000DB9 54                    3471 	ld	d, h
      000DBA F8 06                 3472 	ldhl	sp,	#6
      000DBC 4E                    3473 	ld	c, (hl)
      000DBD 1A                    3474 	ld	a, (de)
      000DBE 5F                    3475 	ld	e, a
      000DBF CB 21                 3476 	sla	c
      000DC1 79                    3477 	ld	a, c
      000DC2 C6 0A                 3478 	add	a, #0x0a
      000DC4 F8 02                 3479 	ldhl	sp,	#2
      000DC6 77                    3480 	ld	(hl), a
                                   3481 ;src/main.c:385: if (eptr->spriteCount == 1) {
      000DC7 05                    3482 	dec	b
      000DC8 20 2C                 3483 	jr	NZ, 00104$
                                   3484 ;src/main.c:386: set_sprite_tile(10+ (i<<1), eptr->sprite0);
                                   3485 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DCA 6E                    3486 	ld	l, (hl)
                                   3487 ;	spillPairReg hl
                                   3488 ;	spillPairReg hl
      000DCB 26 00                 3489 	ld	h, #0x00
                                   3490 ;	spillPairReg hl
                                   3491 ;	spillPairReg hl
      000DCD 29                    3492 	add	hl, hl
      000DCE 29                    3493 	add	hl, hl
      000DCF 01r00r00              3494 	ld	bc, #_shadow_OAM
      000DD2 09                    3495 	add	hl, bc
      000DD3 23                    3496 	inc	hl
      000DD4 23                    3497 	inc	hl
      000DD5 73                    3498 	ld	(hl), e
                                   3499 ;src/main.c:387: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DD6 D1                    3500 	pop	de
      000DD7 D5                    3501 	push	de
      000DD8 1A                    3502 	ld	a, (de)
      000DD9 4F                    3503 	ld	c, a
      000DDA F8 04                 3504 	ldhl	sp,#4
      000DDC 2A                    3505 	ld	a, (hl+)
      000DDD 5F                    3506 	ld	e, a
      000DDE 3A                    3507 	ld	a, (hl-)
      000DDF 2B                    3508 	dec	hl
      000DE0 57                    3509 	ld	d, a
      000DE1 1A                    3510 	ld	a, (de)
      000DE2 32                    3511 	ld	(hl-), a
                                   3512 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DE3 6E                    3513 	ld	l, (hl)
                                   3514 ;	spillPairReg hl
                                   3515 ;	spillPairReg hl
      000DE4 26 00                 3516 	ld	h, #0x00
                                   3517 ;	spillPairReg hl
                                   3518 ;	spillPairReg hl
      000DE6 29                    3519 	add	hl, hl
      000DE7 29                    3520 	add	hl, hl
      000DE8 11r00r00              3521 	ld	de, #_shadow_OAM
      000DEB 19                    3522 	add	hl, de
                                   3523 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DEC 79                    3524 	ld	a, c
      000DED 22                    3525 	ld	(hl+), a
      000DEE 4D                    3526 	ld	c, l
      000DEF 44                    3527 	ld	b, h
      000DF0 F8 03                 3528 	ldhl	sp,	#3
      000DF2 7E                    3529 	ld	a, (hl)
      000DF3 02                    3530 	ld	(bc), a
                                   3531 ;src/main.c:387: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DF4 18 63                 3532 	jr	00107$
      000DF6                       3533 00104$:
                                   3534 ;src/main.c:390: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DF6 43                    3535 	ld	b, e
      000DF7 F8 02                 3536 	ldhl	sp,	#2
                                   3537 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DF9 6E                    3538 	ld	l, (hl)
                                   3539 ;	spillPairReg hl
                                   3540 ;	spillPairReg hl
      000DFA 26 00                 3541 	ld	h, #0x00
                                   3542 ;	spillPairReg hl
                                   3543 ;	spillPairReg hl
      000DFC 29                    3544 	add	hl, hl
      000DFD 29                    3545 	add	hl, hl
      000DFE 11r00r00              3546 	ld	de, #_shadow_OAM
      000E01 19                    3547 	add	hl, de
      000E02 23                    3548 	inc	hl
      000E03 23                    3549 	inc	hl
      000E04 70                    3550 	ld	(hl), b
                                   3551 ;src/main.c:391: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000E05 D1                    3552 	pop	de
      000E06 D5                    3553 	push	de
      000E07 1A                    3554 	ld	a, (de)
      000E08 47                    3555 	ld	b, a
      000E09 F8 04                 3556 	ldhl	sp,#4
      000E0B 2A                    3557 	ld	a, (hl+)
      000E0C 5F                    3558 	ld	e, a
      000E0D 3A                    3559 	ld	a, (hl-)
      000E0E 2B                    3560 	dec	hl
      000E0F 57                    3561 	ld	d, a
      000E10 1A                    3562 	ld	a, (de)
      000E11 32                    3563 	ld	(hl-), a
                                   3564 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E12 6E                    3565 	ld	l, (hl)
                                   3566 ;	spillPairReg hl
                                   3567 ;	spillPairReg hl
      000E13 26 00                 3568 	ld	h, #0x00
                                   3569 ;	spillPairReg hl
                                   3570 ;	spillPairReg hl
      000E15 29                    3571 	add	hl, hl
      000E16 29                    3572 	add	hl, hl
      000E17 11r00r00              3573 	ld	de, #_shadow_OAM
      000E1A 19                    3574 	add	hl, de
                                   3575 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E1B 78                    3576 	ld	a, b
      000E1C 22                    3577 	ld	(hl+), a
      000E1D 5D                    3578 	ld	e, l
      000E1E 54                    3579 	ld	d, h
      000E1F F8 03                 3580 	ldhl	sp,	#3
                                   3581 ;src/main.c:393: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      000E21 2A                    3582 	ld	a, (hl+)
      000E22 12                    3583 	ld	(de), a
      000E23 2A                    3584 	ld	a, (hl+)
      000E24 5F                    3585 	ld	e, a
      000E25 56                    3586 	ld	d, (hl)
      000E26 21 07 00              3587 	ld	hl, #0x0007
      000E29 19                    3588 	add	hl, de
      000E2A 5D                    3589 	ld	e, l
      000E2B 54                    3590 	ld	d, h
      000E2C 1A                    3591 	ld	a, (de)
      000E2D 5F                    3592 	ld	e, a
      000E2E 79                    3593 	ld	a, c
      000E2F C6 0B                 3594 	add	a, #0x0b
      000E31 F8 03                 3595 	ldhl	sp,	#3
      000E33 77                    3596 	ld	(hl), a
                                   3597 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E34 6E                    3598 	ld	l, (hl)
                                   3599 ;	spillPairReg hl
                                   3600 ;	spillPairReg hl
      000E35 26 00                 3601 	ld	h, #0x00
                                   3602 ;	spillPairReg hl
                                   3603 ;	spillPairReg hl
      000E37 29                    3604 	add	hl, hl
      000E38 29                    3605 	add	hl, hl
      000E39 01r00r00              3606 	ld	bc, #_shadow_OAM
      000E3C 09                    3607 	add	hl, bc
      000E3D 23                    3608 	inc	hl
      000E3E 23                    3609 	inc	hl
      000E3F 73                    3610 	ld	(hl), e
                                   3611 ;src/main.c:394: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E40 D1                    3612 	pop	de
      000E41 D5                    3613 	push	de
      000E42 1A                    3614 	ld	a, (de)
      000E43 47                    3615 	ld	b, a
      000E44 F8 04                 3616 	ldhl	sp,#4
      000E46 2A                    3617 	ld	a, (hl+)
      000E47 5F                    3618 	ld	e, a
      000E48 3A                    3619 	ld	a, (hl-)
      000E49 2B                    3620 	dec	hl
      000E4A 57                    3621 	ld	d, a
      000E4B 1A                    3622 	ld	a, (de)
      000E4C 4F                    3623 	ld	c, a
                                   3624 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E4D 6E                    3625 	ld	l, (hl)
                                   3626 ;	spillPairReg hl
                                   3627 ;	spillPairReg hl
      000E4E 26 00                 3628 	ld	h, #0x00
                                   3629 ;	spillPairReg hl
                                   3630 ;	spillPairReg hl
      000E50 29                    3631 	add	hl, hl
      000E51 29                    3632 	add	hl, hl
      000E52 11r00r00              3633 	ld	de, #_shadow_OAM
      000E55 19                    3634 	add	hl, de
                                   3635 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E56 78                    3636 	ld	a, b
      000E57 22                    3637 	ld	(hl+), a
      000E58 71                    3638 	ld	(hl), c
                                   3639 ;src/main.c:394: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E59                       3640 00107$:
                                   3641 ;src/main.c:399: eptr++;
      000E59 F8 04                 3642 	ldhl	sp,#4
      000E5B 2A                    3643 	ld	a, (hl+)
      000E5C 5F                    3644 	ld	e, a
      000E5D 56                    3645 	ld	d, (hl)
      000E5E 21 10 00              3646 	ld	hl, #0x0010
      000E61 19                    3647 	add	hl, de
      000E62 E5                    3648 	push	hl
      000E63 7D                    3649 	ld	a, l
      000E64 F8 06                 3650 	ldhl	sp,	#6
      000E66 77                    3651 	ld	(hl), a
      000E67 E1                    3652 	pop	hl
      000E68 7C                    3653 	ld	a, h
      000E69 F8 05                 3654 	ldhl	sp,	#5
                                   3655 ;src/main.c:374: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E6B 22                    3656 	ld	(hl+), a
      000E6C 34                    3657 	inc	(hl)
      000E6D C3rF4r0C              3658 	jp	00116$
      000E70                       3659 00118$:
                                   3660 ;src/main.c:402: }
      000E70 E8 07                 3661 	add	sp, #7
      000E72 C9                    3662 	ret
                                   3663 ;src/main.c:405: void updateEnemyPositions() {
                                   3664 ;	---------------------------------
                                   3665 ; Function updateEnemyPositions
                                   3666 ; ---------------------------------
      000E73                       3667 _updateEnemyPositions::
      000E73 E8 F0                 3668 	add	sp, #-16
                                   3669 ;src/main.c:408: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E75 F8 0F                 3670 	ldhl	sp,	#15
      000E77 36 00                 3671 	ld	(hl), #0x00
      000E79                       3672 00196$:
      000E79 21r4Dr08              3673 	ld	hl, #_ENEMYCOUNT
      000E7C 4E                    3674 	ld	c, (hl)
      000E7D F8 0F                 3675 	ldhl	sp,	#15
      000E7F 7E                    3676 	ld	a, (hl)
      000E80 91                    3677 	sub	a, c
      000E81 D2r30r13              3678 	jp	NC, 00134$
                                   3679 ;src/main.c:409: if (!enemies[i].alive) {
      000E84 3A                    3680 	ld	a, (hl-)
      000E85 2B                    3681 	dec	hl
      000E86 22                    3682 	ld	(hl+), a
      000E87 36 00                 3683 	ld	(hl), #0x00
      000E89 3E 04                 3684 	ld	a, #0x04
      000E8B                       3685 00407$:
      000E8B F8 0D                 3686 	ldhl	sp,	#13
      000E8D CB 26                 3687 	sla	(hl)
      000E8F 23                    3688 	inc	hl
      000E90 CB 16                 3689 	rl	(hl)
      000E92 3D                    3690 	dec	a
      000E93 20 F6                 3691 	jr	NZ, 00407$
      000E95 2B                    3692 	dec	hl
      000E96 2A                    3693 	ld	a, (hl+)
      000E97 5F                    3694 	ld	e, a
      000E98 56                    3695 	ld	d, (hl)
      000E99 21r50r00              3696 	ld	hl, #_enemies
      000E9C 19                    3697 	add	hl, de
      000E9D E5                    3698 	push	hl
      000E9E 7D                    3699 	ld	a, l
      000E9F F8 04                 3700 	ldhl	sp,	#4
      000EA1 77                    3701 	ld	(hl), a
      000EA2 E1                    3702 	pop	hl
      000EA3 7C                    3703 	ld	a, h
      000EA4 F8 03                 3704 	ldhl	sp,	#3
      000EA6 32                    3705 	ld	(hl-), a
      000EA7 2A                    3706 	ld	a, (hl+)
      000EA8 5F                    3707 	ld	e, a
      000EA9 56                    3708 	ld	d, (hl)
      000EAA 21 09 00              3709 	ld	hl, #0x0009
      000EAD 19                    3710 	add	hl, de
      000EAE 4D                    3711 	ld	c, l
      000EAF 44                    3712 	ld	b, h
      000EB0 0A                    3713 	ld	a, (bc)
      000EB1 B7                    3714 	or	a, a
      000EB2 CAr2Ar13              3715 	jp	Z, 00133$
                                   3716 ;src/main.c:412: enemies[i].x -= xOverflow;
      000EB5 F8 02                 3717 	ldhl	sp,#2
      000EB7 2A                    3718 	ld	a, (hl+)
      000EB8 5F                    3719 	ld	e, a
      000EB9 56                    3720 	ld	d, (hl)
      000EBA 1A                    3721 	ld	a, (de)
      000EBB 4F                    3722 	ld	c, a
      000EBC 13                    3723 	inc	de
      000EBD 1A                    3724 	ld	a, (de)
      000EBE 47                    3725 	ld	b, a
      000EBF 21rA2r00              3726 	ld	hl, #_xOverflow
      000EC2 2A                    3727 	ld	a, (hl+)
      000EC3 5F                    3728 	ld	e, a
      000EC4 56                    3729 	ld	d, (hl)
      000EC5 79                    3730 	ld	a, c
      000EC6 93                    3731 	sub	a, e
      000EC7 5F                    3732 	ld	e, a
      000EC8 78                    3733 	ld	a, b
      000EC9 9A                    3734 	sbc	a, d
      000ECA F8 0E                 3735 	ldhl	sp,	#14
      000ECC 32                    3736 	ld	(hl-), a
      000ECD 73                    3737 	ld	(hl), e
      000ECE F8 02                 3738 	ldhl	sp,#2
      000ED0 2A                    3739 	ld	a, (hl+)
      000ED1 5F                    3740 	ld	e, a
      000ED2 56                    3741 	ld	d, (hl)
      000ED3 F8 0D                 3742 	ldhl	sp,	#13
      000ED5 2A                    3743 	ld	a, (hl+)
      000ED6 12                    3744 	ld	(de), a
      000ED7 13                    3745 	inc	de
      000ED8 7E                    3746 	ld	a, (hl)
      000ED9 12                    3747 	ld	(de), a
                                   3748 ;src/main.c:413: enemies[i].y -= yOverflow;
      000EDA F8 02                 3749 	ldhl	sp,#2
      000EDC 2A                    3750 	ld	a, (hl+)
      000EDD 5F                    3751 	ld	e, a
      000EDE 56                    3752 	ld	d, (hl)
      000EDF 21 02 00              3753 	ld	hl, #0x0002
      000EE2 19                    3754 	add	hl, de
      000EE3 E5                    3755 	push	hl
      000EE4 7D                    3756 	ld	a, l
      000EE5 F8 06                 3757 	ldhl	sp,	#6
      000EE7 77                    3758 	ld	(hl), a
      000EE8 E1                    3759 	pop	hl
      000EE9 7C                    3760 	ld	a, h
      000EEA F8 05                 3761 	ldhl	sp,	#5
      000EEC 32                    3762 	ld	(hl-), a
      000EED 2A                    3763 	ld	a, (hl+)
      000EEE 5F                    3764 	ld	e, a
      000EEF 56                    3765 	ld	d, (hl)
      000EF0 1A                    3766 	ld	a, (de)
      000EF1 4F                    3767 	ld	c, a
      000EF2 13                    3768 	inc	de
      000EF3 1A                    3769 	ld	a, (de)
      000EF4 47                    3770 	ld	b, a
      000EF5 79                    3771 	ld	a, c
      000EF6 21rA4r00              3772 	ld	hl, #_yOverflow
      000EF9 96                    3773 	sub	a, (hl)
      000EFA 23                    3774 	inc	hl
      000EFB 4F                    3775 	ld	c, a
      000EFC 78                    3776 	ld	a, b
      000EFD 9E                    3777 	sbc	a, (hl)
      000EFE 47                    3778 	ld	b, a
      000EFF F8 04                 3779 	ldhl	sp,	#4
      000F01 2A                    3780 	ld	a,	(hl+)
      000F02 66                    3781 	ld	h, (hl)
      000F03 6F                    3782 	ld	l, a
      000F04 79                    3783 	ld	a, c
      000F05 22                    3784 	ld	(hl+), a
      000F06 70                    3785 	ld	(hl), b
                                   3786 ;src/main.c:416: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F07 F8 0D                 3787 	ldhl	sp,	#13
      000F09 7E                    3788 	ld	a, (hl)
      000F0A 21r9Cr00              3789 	ld	hl, #_playerDrawX
      000F0D 4E                    3790 	ld	c, (hl)
      000F0E 91                    3791 	sub	a, c
      000F0F 4F                    3792 	ld	c, a
                                   3793 ;src/main.c:324: if (value >= 0) return value;
      000F10 CB 79                 3794 	bit	7, c
      000F12 20 03                 3795 	jr	NZ, 00169$
      000F14 41                    3796 	ld	b, c
      000F15 18 03                 3797 	jr	00171$
      000F17                       3798 00169$:
                                   3799 ;src/main.c:325: else return - value;
      000F17 AF                    3800 	xor	a, a
      000F18 91                    3801 	sub	a, c
      000F19 47                    3802 	ld	b, a
                                   3803 ;src/main.c:416: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F1A                       3804 00171$:
                                   3805 ;src/main.c:425: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F1A F8 02                 3806 	ldhl	sp,#2
      000F1C 2A                    3807 	ld	a, (hl+)
      000F1D 5F                    3808 	ld	e, a
      000F1E 56                    3809 	ld	d, (hl)
      000F1F 21 0E 00              3810 	ld	hl, #0x000e
      000F22 19                    3811 	add	hl, de
      000F23 E5                    3812 	push	hl
      000F24 7D                    3813 	ld	a, l
      000F25 F8 08                 3814 	ldhl	sp,	#8
      000F27 77                    3815 	ld	(hl), a
      000F28 E1                    3816 	pop	hl
      000F29 7C                    3817 	ld	a, h
      000F2A F8 07                 3818 	ldhl	sp,	#7
      000F2C 32                    3819 	ld	(hl-), a
      000F2D 2A                    3820 	ld	a, (hl+)
      000F2E 5F                    3821 	ld	e, a
      000F2F 56                    3822 	ld	d, (hl)
      000F30 1A                    3823 	ld	a, (de)
      000F31 4F                    3824 	ld	c, a
                                   3825 ;src/main.c:418: enemies[i].xSpeed += enemies[i].accel;
      000F32 F8 02                 3826 	ldhl	sp,#2
      000F34 2A                    3827 	ld	a, (hl+)
      000F35 5F                    3828 	ld	e, a
      000F36 56                    3829 	ld	d, (hl)
      000F37 21 0D 00              3830 	ld	hl, #0x000d
      000F3A 19                    3831 	add	hl, de
      000F3B 33                    3832 	inc	sp
      000F3C 33                    3833 	inc	sp
      000F3D E5                    3834 	push	hl
                                   3835 ;src/main.c:416: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F3E 58                    3836 	ld	e, b
      000F3F 3E 08                 3837 	ld	a,#0x08
      000F41 57                    3838 	ld	d,a
      000F42 90                    3839 	sub	a, b
      000F43 CB 7B                 3840 	bit	7, e
      000F45 28 07                 3841 	jr	Z, 00408$
      000F47 CB 7A                 3842 	bit	7, d
      000F49 20 08                 3843 	jr	NZ, 00409$
      000F4B BF                    3844 	cp	a, a
      000F4C 18 05                 3845 	jr	00409$
      000F4E                       3846 00408$:
      000F4E CB 7A                 3847 	bit	7, d
      000F50 28 01                 3848 	jr	Z, 00409$
      000F52 37                    3849 	scf
      000F53                       3850 00409$:
      000F53 30 4E                 3851 	jr	NC, 00111$
                                   3852 ;src/main.c:417: if (enemies[i].x < playerDrawX) {
      000F55 F8 02                 3853 	ldhl	sp,#2
      000F57 2A                    3854 	ld	a, (hl+)
      000F58 5F                    3855 	ld	e, a
      000F59 56                    3856 	ld	d, (hl)
      000F5A 1A                    3857 	ld	a, (de)
      000F5B F8 0B                 3858 	ldhl	sp,	#11
      000F5D 22                    3859 	ld	(hl+), a
      000F5E 13                    3860 	inc	de
      000F5F 1A                    3861 	ld	a, (de)
      000F60 77                    3862 	ld	(hl), a
      000F61 FAr9Cr00              3863 	ld	a, (#_playerDrawX)
      000F64 F8 0D                 3864 	ldhl	sp,	#13
      000F66 22                    3865 	ld	(hl+), a
      000F67 36 00                 3866 	ld	(hl), #0x00
                                   3867 ;src/main.c:418: enemies[i].xSpeed += enemies[i].accel;
      000F69 D1                    3868 	pop	de
      000F6A D5                    3869 	push	de
      000F6B 1A                    3870 	ld	a, (de)
      000F6C 47                    3871 	ld	b, a
                                   3872 ;src/main.c:417: if (enemies[i].x < playerDrawX) {
      000F6D F8 0B                 3873 	ldhl	sp,	#11
      000F6F 5D                    3874 	ld	e, l
      000F70 54                    3875 	ld	d, h
      000F71 F8 0D                 3876 	ldhl	sp,	#13
      000F73 1A                    3877 	ld	a, (de)
      000F74 13                    3878 	inc	de
      000F75 96                    3879 	sub	a, (hl)
      000F76 23                    3880 	inc	hl
      000F77 1A                    3881 	ld	a, (de)
      000F78 9E                    3882 	sbc	a, (hl)
      000F79 1A                    3883 	ld	a, (de)
      000F7A 57                    3884 	ld	d, a
      000F7B CB 7E                 3885 	bit	7, (hl)
      000F7D 28 07                 3886 	jr	Z, 00410$
      000F7F CB 7A                 3887 	bit	7, d
      000F81 20 08                 3888 	jr	NZ, 00411$
      000F83 BF                    3889 	cp	a, a
      000F84 18 05                 3890 	jr	00411$
      000F86                       3891 00410$:
      000F86 CB 7A                 3892 	bit	7, d
      000F88 28 01                 3893 	jr	Z, 00411$
      000F8A 37                    3894 	scf
      000F8B                       3895 00411$:
      000F8B 30 0B                 3896 	jr	NC, 00104$
                                   3897 ;src/main.c:418: enemies[i].xSpeed += enemies[i].accel;
      000F8D 79                    3898 	ld	a, c
      000F8E 80                    3899 	add	a, b
      000F8F 4F                    3900 	ld	c, a
      000F90 F8 06                 3901 	ldhl	sp,	#6
      000F92 2A                    3902 	ld	a,	(hl+)
      000F93 66                    3903 	ld	h, (hl)
      000F94 6F                    3904 	ld	l, a
      000F95 71                    3905 	ld	(hl), c
      000F96 18 38                 3906 	jr	00112$
      000F98                       3907 00104$:
                                   3908 ;src/main.c:421: enemies[i].xSpeed -= enemies[i].accel;
      000F98 79                    3909 	ld	a, c
      000F99 90                    3910 	sub	a, b
      000F9A 4F                    3911 	ld	c, a
      000F9B F8 06                 3912 	ldhl	sp,	#6
      000F9D 2A                    3913 	ld	a,	(hl+)
      000F9E 66                    3914 	ld	h, (hl)
      000F9F 6F                    3915 	ld	l, a
      000FA0 71                    3916 	ld	(hl), c
      000FA1 18 2D                 3917 	jr	00112$
      000FA3                       3918 00111$:
                                   3919 ;src/main.c:425: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000FA3 59                    3920 	ld	e, c
      000FA4 AF                    3921 	xor	a, a
      000FA5 57                    3922 	ld	d, a
      000FA6 91                    3923 	sub	a, c
      000FA7 CB 7B                 3924 	bit	7, e
      000FA9 28 07                 3925 	jr	Z, 00412$
      000FAB CB 7A                 3926 	bit	7, d
      000FAD 20 08                 3927 	jr	NZ, 00413$
      000FAF BF                    3928 	cp	a, a
      000FB0 18 05                 3929 	jr	00413$
      000FB2                       3930 00412$:
      000FB2 CB 7A                 3931 	bit	7, d
      000FB4 28 01                 3932 	jr	Z, 00413$
      000FB6 37                    3933 	scf
      000FB7                       3934 00413$:
      000FB7 30 07                 3935 	jr	NC, 00107$
      000FB9 0D                    3936 	dec	c
      000FBA F8 06                 3937 	ldhl	sp,	#6
      000FBC 2A                    3938 	ld	a,	(hl+)
      000FBD 66                    3939 	ld	h, (hl)
      000FBE 6F                    3940 	ld	l, a
      000FBF 71                    3941 	ld	(hl), c
      000FC0                       3942 00107$:
      000FC0 F8 06                 3943 	ldhl	sp,#6
      000FC2 2A                    3944 	ld	a, (hl+)
      000FC3 5F                    3945 	ld	e, a
      000FC4 56                    3946 	ld	d, (hl)
      000FC5 1A                    3947 	ld	a, (de)
      000FC6 4F                    3948 	ld	c, a
                                   3949 ;src/main.c:426: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      000FC7 CB 79                 3950 	bit	7, c
      000FC9 28 05                 3951 	jr	Z, 00112$
      000FCB 0C                    3952 	inc	c
      000FCC 3A                    3953 	ld	a, (hl-)
      000FCD 6E                    3954 	ld	l, (hl)
      000FCE 67                    3955 	ld	h, a
      000FCF 71                    3956 	ld	(hl), c
      000FD0                       3957 00112$:
                                   3958 ;src/main.c:429: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FD0 F8 04                 3959 	ldhl	sp,#4
      000FD2 2A                    3960 	ld	a, (hl+)
      000FD3 5F                    3961 	ld	e, a
      000FD4 56                    3962 	ld	d, (hl)
      000FD5 1A                    3963 	ld	a, (de)
      000FD6 4F                    3964 	ld	c, a
      000FD7 13                    3965 	inc	de
      000FD8 1A                    3966 	ld	a, (de)
      000FD9 47                    3967 	ld	b, a
      000FDA 79                    3968 	ld	a, c
      000FDB 21r9Dr00              3969 	ld	hl, #_playerDrawY
      000FDE 5E                    3970 	ld	e, (hl)
      000FDF 93                    3971 	sub	a, e
      000FE0 6F                    3972 	ld	l, a
                                   3973 ;	spillPairReg hl
                                   3974 ;	spillPairReg hl
                                   3975 ;src/main.c:324: if (value >= 0) return value;
      000FE1 CB 7D                 3976 	bit	7, l
      000FE3 20 06                 3977 	jr	NZ, 00173$
      000FE5 7D                    3978 	ld	a, l
      000FE6 F8 0E                 3979 	ldhl	sp,	#14
      000FE8 77                    3980 	ld	(hl), a
      000FE9 18 06                 3981 	jr	00175$
      000FEB                       3982 00173$:
                                   3983 ;src/main.c:325: else return - value;
      000FEB AF                    3984 	xor	a, a
      000FEC 95                    3985 	sub	a, l
      000FED 5F                    3986 	ld	e, a
      000FEE F8 0E                 3987 	ldhl	sp,	#14
      000FF0 73                    3988 	ld	(hl), e
                                   3989 ;src/main.c:429: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FF1                       3990 00175$:
                                   3991 ;src/main.c:431: enemies[i].ySpeed += enemies[i].accel;
      000FF1 F8 02                 3992 	ldhl	sp,#2
      000FF3 2A                    3993 	ld	a, (hl+)
      000FF4 5F                    3994 	ld	e, a
      000FF5 56                    3995 	ld	d, (hl)
      000FF6 21 0F 00              3996 	ld	hl, #0x000f
      000FF9 19                    3997 	add	hl, de
      000FFA E5                    3998 	push	hl
      000FFB 7D                    3999 	ld	a, l
      000FFC F8 0A                 4000 	ldhl	sp,	#10
      000FFE 77                    4001 	ld	(hl), a
      000FFF E1                    4002 	pop	hl
      001000 7C                    4003 	ld	a, h
      001001 F8 09                 4004 	ldhl	sp,	#9
                                   4005 ;src/main.c:438: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001003 32                    4006 	ld	(hl-), a
      001004 2A                    4007 	ld	a, (hl+)
      001005 5F                    4008 	ld	e, a
      001006 2A                    4009 	ld	a, (hl+)
      001007 23                    4010 	inc	hl
      001008 57                    4011 	ld	d, a
      001009 1A                    4012 	ld	a, (de)
      00100A 77                    4013 	ld	(hl), a
                                   4014 ;src/main.c:429: if (abs(enemies[i].y - playerDrawY) > 8) {
      00100B F8 0E                 4015 	ldhl	sp,	#14
      00100D 5E                    4016 	ld	e, (hl)
      00100E 3E 08                 4017 	ld	a,#0x08
      001010 57                    4018 	ld	d,a
      001011 96                    4019 	sub	a, (hl)
      001012 CB 7B                 4020 	bit	7, e
      001014 28 07                 4021 	jr	Z, 00414$
      001016 CB 7A                 4022 	bit	7, d
      001018 20 08                 4023 	jr	NZ, 00415$
      00101A BF                    4024 	cp	a, a
      00101B 18 05                 4025 	jr	00415$
      00101D                       4026 00414$:
      00101D CB 7A                 4027 	bit	7, d
      00101F 28 01                 4028 	jr	Z, 00415$
      001021 37                    4029 	scf
      001022                       4030 00415$:
      001022 30 44                 4031 	jr	NC, 00121$
                                   4032 ;src/main.c:430: if (enemies[i].y < playerDrawY) {
      001024 FAr9Dr00              4033 	ld	a, (#_playerDrawY)
      001027 F8 0C                 4034 	ldhl	sp,	#12
      001029 22                    4035 	ld	(hl+), a
                                   4036 ;src/main.c:431: enemies[i].ySpeed += enemies[i].accel;
      00102A AF                    4037 	xor	a, a
      00102B 22                    4038 	ld	(hl+), a
      00102C D1                    4039 	pop	de
      00102D D5                    4040 	push	de
      00102E 1A                    4041 	ld	a, (de)
                                   4042 ;src/main.c:430: if (enemies[i].y < playerDrawY) {
      00102F 32                    4043 	ld	(hl-), a
      001030 2B                    4044 	dec	hl
      001031 79                    4045 	ld	a, c
      001032 96                    4046 	sub	a, (hl)
      001033 23                    4047 	inc	hl
      001034 78                    4048 	ld	a, b
      001035 9E                    4049 	sbc	a, (hl)
      001036 78                    4050 	ld	a, b
      001037 57                    4051 	ld	d, a
      001038 CB 7E                 4052 	bit	7, (hl)
      00103A 28 07                 4053 	jr	Z, 00416$
      00103C CB 7A                 4054 	bit	7, d
      00103E 20 08                 4055 	jr	NZ, 00417$
      001040 BF                    4056 	cp	a, a
      001041 18 05                 4057 	jr	00417$
      001043                       4058 00416$:
      001043 CB 7A                 4059 	bit	7, d
      001045 28 01                 4060 	jr	Z, 00417$
      001047 37                    4061 	scf
      001048                       4062 00417$:
      001048 30 0F                 4063 	jr	NC, 00114$
                                   4064 ;src/main.c:431: enemies[i].ySpeed += enemies[i].accel;
      00104A F8 0B                 4065 	ldhl	sp,	#11
      00104C 7E                    4066 	ld	a, (hl)
      00104D F8 0E                 4067 	ldhl	sp,	#14
      00104F 86                    4068 	add	a, (hl)
      001050 4F                    4069 	ld	c, a
      001051 F8 08                 4070 	ldhl	sp,	#8
      001053 2A                    4071 	ld	a,	(hl+)
      001054 66                    4072 	ld	h, (hl)
      001055 6F                    4073 	ld	l, a
      001056 71                    4074 	ld	(hl), c
      001057 18 41                 4075 	jr	00122$
      001059                       4076 00114$:
                                   4077 ;src/main.c:434: enemies[i].ySpeed -= enemies[i].accel;
      001059 F8 0B                 4078 	ldhl	sp,	#11
      00105B 7E                    4079 	ld	a, (hl)
      00105C F8 0E                 4080 	ldhl	sp,	#14
      00105E 96                    4081 	sub	a, (hl)
      00105F 4F                    4082 	ld	c, a
      001060 F8 08                 4083 	ldhl	sp,	#8
      001062 2A                    4084 	ld	a,	(hl+)
      001063 66                    4085 	ld	h, (hl)
      001064 6F                    4086 	ld	l, a
      001065 71                    4087 	ld	(hl), c
      001066 18 32                 4088 	jr	00122$
      001068                       4089 00121$:
                                   4090 ;src/main.c:438: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001068 F8 0B                 4091 	ldhl	sp,	#11
      00106A 5E                    4092 	ld	e, (hl)
      00106B AF                    4093 	xor	a, a
      00106C 57                    4094 	ld	d, a
      00106D 96                    4095 	sub	a, (hl)
      00106E CB 7B                 4096 	bit	7, e
      001070 28 07                 4097 	jr	Z, 00418$
      001072 CB 7A                 4098 	bit	7, d
      001074 20 08                 4099 	jr	NZ, 00419$
      001076 BF                    4100 	cp	a, a
      001077 18 05                 4101 	jr	00419$
      001079                       4102 00418$:
      001079 CB 7A                 4103 	bit	7, d
      00107B 28 01                 4104 	jr	Z, 00419$
      00107D 37                    4105 	scf
      00107E                       4106 00419$:
      00107E 30 0A                 4107 	jr	NC, 00117$
      001080 F8 0B                 4108 	ldhl	sp,	#11
      001082 4E                    4109 	ld	c, (hl)
      001083 0D                    4110 	dec	c
      001084 F8 08                 4111 	ldhl	sp,	#8
      001086 2A                    4112 	ld	a,	(hl+)
      001087 66                    4113 	ld	h, (hl)
      001088 6F                    4114 	ld	l, a
      001089 71                    4115 	ld	(hl), c
      00108A                       4116 00117$:
      00108A F8 08                 4117 	ldhl	sp,#8
      00108C 2A                    4118 	ld	a, (hl+)
      00108D 5F                    4119 	ld	e, a
      00108E 56                    4120 	ld	d, (hl)
      00108F 1A                    4121 	ld	a, (de)
      001090 4F                    4122 	ld	c, a
                                   4123 ;src/main.c:439: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      001091 CB 79                 4124 	bit	7, c
      001093 28 05                 4125 	jr	Z, 00122$
      001095 0C                    4126 	inc	c
      001096 3A                    4127 	ld	a, (hl-)
      001097 6E                    4128 	ld	l, (hl)
      001098 67                    4129 	ld	h, a
      001099 71                    4130 	ld	(hl), c
      00109A                       4131 00122$:
                                   4132 ;src/main.c:443: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      00109A F8 02                 4133 	ldhl	sp,#2
      00109C 2A                    4134 	ld	a, (hl+)
      00109D 5F                    4135 	ld	e, a
      00109E 56                    4136 	ld	d, (hl)
      00109F 21 0C 00              4137 	ld	hl, #0x000c
      0010A2 19                    4138 	add	hl, de
      0010A3 E5                    4139 	push	hl
      0010A4 7D                    4140 	ld	a, l
      0010A5 F8 0C                 4141 	ldhl	sp,	#12
      0010A7 77                    4142 	ld	(hl), a
      0010A8 E1                    4143 	pop	hl
      0010A9 7C                    4144 	ld	a, h
      0010AA F8 0B                 4145 	ldhl	sp,	#11
      0010AC 32                    4146 	ld	(hl-), a
      0010AD 2A                    4147 	ld	a, (hl+)
      0010AE 5F                    4148 	ld	e, a
      0010AF 2A                    4149 	ld	a, (hl+)
      0010B0 57                    4150 	ld	d, a
      0010B1 1A                    4151 	ld	a, (de)
      0010B2 4F                    4152 	ld	c, a
      0010B3 22                    4153 	ld	(hl+), a
      0010B4 AF                    4154 	xor	a, a
      0010B5 91                    4155 	sub	a, c
      0010B6 77                    4156 	ld	(hl), a
      0010B7 F8 06                 4157 	ldhl	sp,#6
      0010B9 2A                    4158 	ld	a, (hl+)
      0010BA 5F                    4159 	ld	e, a
      0010BB 56                    4160 	ld	d, (hl)
      0010BC 1A                    4161 	ld	a, (de)
      0010BD F8 0E                 4162 	ldhl	sp,	#14
                                   4163 ;src/main.c:305: return (value < min) ? min : (value > max) ? max : value;
      0010BF 32                    4164 	ld	(hl-), a
      0010C0 2A                    4165 	ld	a, (hl+)
      0010C1 5F                    4166 	ld	e, a
      0010C2 56                    4167 	ld	d, (hl)
      0010C3 3A                    4168 	ld	a, (hl-)
      0010C4 96                    4169 	sub	a, (hl)
      0010C5 CB 7B                 4170 	bit	7, e
      0010C7 28 07                 4171 	jr	Z, 00420$
      0010C9 CB 7A                 4172 	bit	7, d
      0010CB 20 08                 4173 	jr	NZ, 00421$
      0010CD BF                    4174 	cp	a, a
      0010CE 18 05                 4175 	jr	00421$
      0010D0                       4176 00420$:
      0010D0 CB 7A                 4177 	bit	7, d
      0010D2 28 01                 4178 	jr	Z, 00421$
      0010D4 37                    4179 	scf
      0010D5                       4180 00421$:
      0010D5 30 06                 4181 	jr	NC, 00202$
      0010D7 F8 0D                 4182 	ldhl	sp,	#13
      0010D9 2A                    4183 	ld	a, (hl+)
      0010DA 77                    4184 	ld	(hl), a
      0010DB 18 26                 4185 	jr	00203$
      0010DD                       4186 00202$:
      0010DD F8 0E                 4187 	ldhl	sp,	#14
      0010DF 3A                    4188 	ld	a, (hl-)
      0010E0 2B                    4189 	dec	hl
      0010E1 5F                    4190 	ld	e, a
      0010E2 56                    4191 	ld	d, (hl)
      0010E3 2A                    4192 	ld	a, (hl+)
      0010E4 23                    4193 	inc	hl
      0010E5 96                    4194 	sub	a, (hl)
      0010E6 CB 7B                 4195 	bit	7, e
      0010E8 28 07                 4196 	jr	Z, 00422$
      0010EA CB 7A                 4197 	bit	7, d
      0010EC 20 08                 4198 	jr	NZ, 00423$
      0010EE BF                    4199 	cp	a, a
      0010EF 18 05                 4200 	jr	00423$
      0010F1                       4201 00422$:
      0010F1 CB 7A                 4202 	bit	7, d
      0010F3 28 01                 4203 	jr	Z, 00423$
      0010F5 37                    4204 	scf
      0010F6                       4205 00423$:
      0010F6 30 05                 4206 	jr	NC, 00204$
      0010F8 F8 0C                 4207 	ldhl	sp,	#12
      0010FA 5E                    4208 	ld	e, (hl)
      0010FB 18 03                 4209 	jr	00205$
      0010FD                       4210 00204$:
      0010FD F8 0E                 4211 	ldhl	sp,	#14
      0010FF 5E                    4212 	ld	e, (hl)
      001100                       4213 00205$:
      001100 F8 0E                 4214 	ldhl	sp,	#14
      001102 73                    4215 	ld	(hl), e
      001103                       4216 00203$:
      001103 F8 0E                 4217 	ldhl	sp,	#14
      001105 4E                    4218 	ld	c, (hl)
                                   4219 ;src/main.c:443: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001106 F8 06                 4220 	ldhl	sp,	#6
      001108 2A                    4221 	ld	a,	(hl+)
      001109 66                    4222 	ld	h, (hl)
      00110A 6F                    4223 	ld	l, a
      00110B 71                    4224 	ld	(hl), c
                                   4225 ;src/main.c:444: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      00110C F8 0A                 4226 	ldhl	sp,#10
      00110E 2A                    4227 	ld	a, (hl+)
      00110F 5F                    4228 	ld	e, a
      001110 3A                    4229 	ld	a, (hl-)
      001111 2B                    4230 	dec	hl
      001112 2B                    4231 	dec	hl
      001113 57                    4232 	ld	d, a
      001114 1A                    4233 	ld	a, (de)
      001115 47                    4234 	ld	b, a
      001116 48                    4235 	ld	c, b
      001117 AF                    4236 	xor	a, a
      001118 90                    4237 	sub	a, b
      001119 47                    4238 	ld	b, a
      00111A 2A                    4239 	ld	a, (hl+)
      00111B 5F                    4240 	ld	e, a
      00111C 56                    4241 	ld	d, (hl)
      00111D 1A                    4242 	ld	a, (de)
      00111E 6F                    4243 	ld	l, a
                                   4244 ;	spillPairReg hl
                                   4245 ;	spillPairReg hl
                                   4246 ;src/main.c:305: return (value < min) ? min : (value > max) ? max : value;
      00111F 58                    4247 	ld	e, b
      001120 7D                    4248 	ld	a,l
      001121 57                    4249 	ld	d,a
      001122 90                    4250 	sub	a, b
      001123 CB 7B                 4251 	bit	7, e
      001125 28 07                 4252 	jr	Z, 00424$
      001127 CB 7A                 4253 	bit	7, d
      001129 20 08                 4254 	jr	NZ, 00425$
      00112B BF                    4255 	cp	a, a
      00112C 18 05                 4256 	jr	00425$
      00112E                       4257 00424$:
      00112E CB 7A                 4258 	bit	7, d
      001130 28 01                 4259 	jr	Z, 00425$
      001132 37                    4260 	scf
      001133                       4261 00425$:
      001133 30 03                 4262 	jr	NC, 00206$
      001135 48                    4263 	ld	c, b
      001136 18 17                 4264 	jr	00207$
      001138                       4265 00206$:
      001138 5D                    4266 	ld	e, l
      001139 79                    4267 	ld	a,c
      00113A 57                    4268 	ld	d,a
      00113B 95                    4269 	sub	a, l
      00113C CB 7B                 4270 	bit	7, e
      00113E 28 07                 4271 	jr	Z, 00426$
      001140 CB 7A                 4272 	bit	7, d
      001142 20 08                 4273 	jr	NZ, 00427$
      001144 BF                    4274 	cp	a, a
      001145 18 05                 4275 	jr	00427$
      001147                       4276 00426$:
      001147 CB 7A                 4277 	bit	7, d
      001149 28 01                 4278 	jr	Z, 00427$
      00114B 37                    4279 	scf
      00114C                       4280 00427$:
      00114C 38 01                 4281 	jr	C, 00209$
      00114E 4D                    4282 	ld	c, l
      00114F                       4283 00209$:
      00114F                       4284 00207$:
                                   4285 ;src/main.c:444: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      00114F F8 08                 4286 	ldhl	sp,	#8
      001151 2A                    4287 	ld	a,	(hl+)
      001152 66                    4288 	ld	h, (hl)
      001153 6F                    4289 	ld	l, a
      001154 71                    4290 	ld	(hl), c
                                   4291 ;src/main.c:447: enemies[i].xReserve += enemies[i].xSpeed;
      001155 F8 02                 4292 	ldhl	sp,#2
      001157 2A                    4293 	ld	a, (hl+)
      001158 5F                    4294 	ld	e, a
      001159 56                    4295 	ld	d, (hl)
      00115A 21 04 00              4296 	ld	hl, #0x0004
      00115D 19                    4297 	add	hl, de
      00115E E5                    4298 	push	hl
      00115F 7D                    4299 	ld	a, l
      001160 F8 0F                 4300 	ldhl	sp,	#15
      001162 77                    4301 	ld	(hl), a
      001163 E1                    4302 	pop	hl
      001164 7C                    4303 	ld	a, h
      001165 F8 0E                 4304 	ldhl	sp,	#14
      001167 32                    4305 	ld	(hl-), a
      001168 2A                    4306 	ld	a, (hl+)
      001169 5F                    4307 	ld	e, a
      00116A 56                    4308 	ld	d, (hl)
      00116B 1A                    4309 	ld	a, (de)
      00116C 47                    4310 	ld	b, a
      00116D F8 06                 4311 	ldhl	sp,#6
      00116F 2A                    4312 	ld	a, (hl+)
      001170 5F                    4313 	ld	e, a
      001171 56                    4314 	ld	d, (hl)
      001172 1A                    4315 	ld	a, (de)
      001173 80                    4316 	add	a, b
      001174 47                    4317 	ld	b, a
      001175 F8 0D                 4318 	ldhl	sp,	#13
      001177 2A                    4319 	ld	a,	(hl+)
      001178 66                    4320 	ld	h, (hl)
      001179 6F                    4321 	ld	l, a
      00117A 70                    4322 	ld	(hl), b
                                   4323 ;src/main.c:448: enemies[i].yReserve += enemies[i].ySpeed;
      00117B F8 02                 4324 	ldhl	sp,#2
      00117D 2A                    4325 	ld	a, (hl+)
      00117E 5F                    4326 	ld	e, a
      00117F 56                    4327 	ld	d, (hl)
      001180 21 05 00              4328 	ld	hl, #0x0005
      001183 19                    4329 	add	hl, de
      001184 E5                    4330 	push	hl
      001185 7D                    4331 	ld	a, l
      001186 F8 0C                 4332 	ldhl	sp,	#12
      001188 77                    4333 	ld	(hl), a
      001189 E1                    4334 	pop	hl
      00118A 7C                    4335 	ld	a, h
      00118B F8 0B                 4336 	ldhl	sp,	#11
      00118D 32                    4337 	ld	(hl-), a
      00118E 2A                    4338 	ld	a, (hl+)
      00118F 5F                    4339 	ld	e, a
      001190 56                    4340 	ld	d, (hl)
      001191 1A                    4341 	ld	a, (de)
      001192 81                    4342 	add	a, c
      001193 4F                    4343 	ld	c, a
      001194 3A                    4344 	ld	a, (hl-)
      001195 6E                    4345 	ld	l, (hl)
      001196 67                    4346 	ld	h, a
      001197 71                    4347 	ld	(hl), c
                                   4348 ;src/main.c:452: if (enemies[i].xReserve >> 3 > 0) {
      001198 F8 0D                 4349 	ldhl	sp,#13
      00119A 2A                    4350 	ld	a, (hl+)
      00119B 5F                    4351 	ld	e, a
      00119C 3A                    4352 	ld	a, (hl-)
      00119D 2B                    4353 	dec	hl
      00119E 57                    4354 	ld	d, a
      00119F 1A                    4355 	ld	a, (de)
      0011A0 77                    4356 	ld	(hl), a
      0011A1 CB 28                 4357 	sra	b
      0011A3 CB 28                 4358 	sra	b
      0011A5 CB 28                 4359 	sra	b
      0011A7 58                    4360 	ld	e, b
      0011A8 AF                    4361 	xor	a, a
      0011A9 57                    4362 	ld	d, a
      0011AA 90                    4363 	sub	a, b
      0011AB CB 7B                 4364 	bit	7, e
      0011AD 28 07                 4365 	jr	Z, 00428$
      0011AF CB 7A                 4366 	bit	7, d
      0011B1 20 08                 4367 	jr	NZ, 00429$
      0011B3 BF                    4368 	cp	a, a
      0011B4 18 05                 4369 	jr	00429$
      0011B6                       4370 00428$:
      0011B6 CB 7A                 4371 	bit	7, d
      0011B8 28 01                 4372 	jr	Z, 00429$
      0011BA 37                    4373 	scf
      0011BB                       4374 00429$:
      0011BB 30 3F                 4375 	jr	NC, 00126$
                                   4376 ;src/main.c:453: int8_t xMovement = enemies[i].xReserve >> 3;
      0011BD F8 0C                 4377 	ldhl	sp,	#12
      0011BF 7E                    4378 	ld	a, (hl)
      0011C0 CB 2F                 4379 	sra	a
      0011C2 CB 2F                 4380 	sra	a
      0011C4 CB 2F                 4381 	sra	a
      0011C6 77                    4382 	ld	(hl), a
                                   4383 ;src/main.c:454: enemies[i].x += xMovement;
      0011C7 F8 02                 4384 	ldhl	sp,#2
      0011C9 2A                    4385 	ld	a, (hl+)
      0011CA 5F                    4386 	ld	e, a
      0011CB 56                    4387 	ld	d, (hl)
      0011CC 1A                    4388 	ld	a, (de)
      0011CD 4F                    4389 	ld	c, a
      0011CE 13                    4390 	inc	de
      0011CF 1A                    4391 	ld	a, (de)
      0011D0 47                    4392 	ld	b, a
      0011D1 F8 0C                 4393 	ldhl	sp,	#12
      0011D3 7E                    4394 	ld	a, (hl)
      0011D4 5F                    4395 	ld	e, a
      0011D5 07                    4396 	rlca
      0011D6 9F                    4397 	sbc	a, a
      0011D7 57                    4398 	ld	d, a
      0011D8 69                    4399 	ld	l, c
                                   4400 ;	spillPairReg hl
                                   4401 ;	spillPairReg hl
      0011D9 60                    4402 	ld	h, b
                                   4403 ;	spillPairReg hl
                                   4404 ;	spillPairReg hl
      0011DA 19                    4405 	add	hl, de
      0011DB 4D                    4406 	ld	c, l
      0011DC 44                    4407 	ld	b, h
      0011DD F8 02                 4408 	ldhl	sp,	#2
      0011DF 2A                    4409 	ld	a,	(hl+)
      0011E0 66                    4410 	ld	h, (hl)
      0011E1 6F                    4411 	ld	l, a
      0011E2 79                    4412 	ld	a, c
      0011E3 22                    4413 	ld	(hl+), a
      0011E4 70                    4414 	ld	(hl), b
                                   4415 ;src/main.c:455: enemies[i].xReserve -=  xMovement << 3;
      0011E5 F8 0D                 4416 	ldhl	sp,#13
      0011E7 2A                    4417 	ld	a, (hl+)
      0011E8 5F                    4418 	ld	e, a
      0011E9 3A                    4419 	ld	a, (hl-)
      0011EA 2B                    4420 	dec	hl
      0011EB 57                    4421 	ld	d, a
      0011EC 1A                    4422 	ld	a, (de)
      0011ED F5                    4423 	push	af
      0011EE 2A                    4424 	ld	a, (hl+)
      0011EF 87                    4425 	add	a, a
      0011F0 87                    4426 	add	a, a
      0011F1 87                    4427 	add	a, a
      0011F2 4F                    4428 	ld	c, a
      0011F3 F1                    4429 	pop	af
      0011F4 91                    4430 	sub	a, c
      0011F5 4F                    4431 	ld	c, a
      0011F6 2A                    4432 	ld	a,	(hl+)
      0011F7 66                    4433 	ld	h, (hl)
      0011F8 6F                    4434 	ld	l, a
      0011F9 71                    4435 	ld	(hl), c
      0011FA 18 69                 4436 	jr	00127$
      0011FC                       4437 00126$:
                                   4438 ;src/main.c:458: else if ((-enemies[i].xReserve) >> 3 > 0){
      0011FC F8 0C                 4439 	ldhl	sp,	#12
      0011FE 7E                    4440 	ld	a, (hl)
      0011FF 4F                    4441 	ld	c, a
      001200 07                    4442 	rlca
      001201 9F                    4443 	sbc	a, a
      001202 47                    4444 	ld	b, a
      001203 AF                    4445 	xor	a, a
      001204 91                    4446 	sub	a, c
      001205 4F                    4447 	ld	c, a
      001206 9F                    4448 	sbc	a, a
      001207 90                    4449 	sub	a, b
      001208 47                    4450 	ld	b, a
      001209 CB 28                 4451 	sra	b
      00120B CB 19                 4452 	rr	c
      00120D CB 28                 4453 	sra	b
      00120F CB 19                 4454 	rr	c
      001211 CB 28                 4455 	sra	b
      001213 CB 19                 4456 	rr	c
      001215 58                    4457 	ld	e, b
      001216 AF                    4458 	xor	a, a
      001217 57                    4459 	ld	d, a
      001218 B9                    4460 	cp	a, c
      001219 98                    4461 	sbc	a, b
      00121A CB 7B                 4462 	bit	7, e
      00121C 28 07                 4463 	jr	Z, 00430$
      00121E CB 7A                 4464 	bit	7, d
      001220 20 08                 4465 	jr	NZ, 00431$
      001222 BF                    4466 	cp	a, a
      001223 18 05                 4467 	jr	00431$
      001225                       4468 00430$:
      001225 CB 7A                 4469 	bit	7, d
      001227 28 01                 4470 	jr	Z, 00431$
      001229 37                    4471 	scf
      00122A                       4472 00431$:
      00122A 30 39                 4473 	jr	NC, 00127$
                                   4474 ;src/main.c:459: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      00122C AF                    4475 	xor	a, a
      00122D 91                    4476 	sub	a, c
      00122E 4F                    4477 	ld	c, a
      00122F F8 0C                 4478 	ldhl	sp,	#12
      001231 71                    4479 	ld	(hl), c
                                   4480 ;src/main.c:460: enemies[i].x += xMovement;
      001232 F8 02                 4481 	ldhl	sp,#2
      001234 2A                    4482 	ld	a, (hl+)
      001235 5F                    4483 	ld	e, a
      001236 56                    4484 	ld	d, (hl)
      001237 1A                    4485 	ld	a, (de)
      001238 4F                    4486 	ld	c, a
      001239 13                    4487 	inc	de
      00123A 1A                    4488 	ld	a, (de)
      00123B 47                    4489 	ld	b, a
      00123C F8 0C                 4490 	ldhl	sp,	#12
      00123E 7E                    4491 	ld	a, (hl)
      00123F 5F                    4492 	ld	e, a
      001240 07                    4493 	rlca
      001241 9F                    4494 	sbc	a, a
      001242 57                    4495 	ld	d, a
      001243 69                    4496 	ld	l, c
                                   4497 ;	spillPairReg hl
                                   4498 ;	spillPairReg hl
      001244 60                    4499 	ld	h, b
                                   4500 ;	spillPairReg hl
                                   4501 ;	spillPairReg hl
      001245 19                    4502 	add	hl, de
      001246 4D                    4503 	ld	c, l
      001247 44                    4504 	ld	b, h
      001248 F8 02                 4505 	ldhl	sp,	#2
      00124A 2A                    4506 	ld	a,	(hl+)
      00124B 66                    4507 	ld	h, (hl)
      00124C 6F                    4508 	ld	l, a
      00124D 79                    4509 	ld	a, c
      00124E 22                    4510 	ld	(hl+), a
      00124F 70                    4511 	ld	(hl), b
                                   4512 ;src/main.c:461: enemies[i].xReserve +=  (-xMovement) << 3;
      001250 F8 0D                 4513 	ldhl	sp,#13
      001252 2A                    4514 	ld	a, (hl+)
      001253 5F                    4515 	ld	e, a
      001254 3A                    4516 	ld	a, (hl-)
      001255 2B                    4517 	dec	hl
      001256 57                    4518 	ld	d, a
      001257 1A                    4519 	ld	a, (de)
      001258 4F                    4520 	ld	c, a
      001259 AF                    4521 	xor	a, a
      00125A 96                    4522 	sub	a, (hl)
      00125B 23                    4523 	inc	hl
      00125C 87                    4524 	add	a, a
      00125D 87                    4525 	add	a, a
      00125E 87                    4526 	add	a, a
      00125F 81                    4527 	add	a, c
      001260 4F                    4528 	ld	c, a
      001261 2A                    4529 	ld	a,	(hl+)
      001262 66                    4530 	ld	h, (hl)
      001263 6F                    4531 	ld	l, a
      001264 71                    4532 	ld	(hl), c
      001265                       4533 00127$:
                                   4534 ;src/main.c:448: enemies[i].yReserve += enemies[i].ySpeed;
      001265 F8 0A                 4535 	ldhl	sp,#10
      001267 2A                    4536 	ld	a, (hl+)
      001268 5F                    4537 	ld	e, a
      001269 56                    4538 	ld	d, (hl)
      00126A 1A                    4539 	ld	a, (de)
      00126B 4F                    4540 	ld	c, a
                                   4541 ;src/main.c:464: if (enemies[i].yReserve >> 3 > 0) {
      00126C 41                    4542 	ld	b, c
      00126D CB 28                 4543 	sra	b
      00126F CB 28                 4544 	sra	b
      001271 CB 28                 4545 	sra	b
      001273 58                    4546 	ld	e, b
      001274 AF                    4547 	xor	a, a
      001275 57                    4548 	ld	d, a
      001276 90                    4549 	sub	a, b
      001277 CB 7B                 4550 	bit	7, e
      001279 28 07                 4551 	jr	Z, 00432$
      00127B CB 7A                 4552 	bit	7, d
      00127D 20 08                 4553 	jr	NZ, 00433$
      00127F BF                    4554 	cp	a, a
      001280 18 05                 4555 	jr	00433$
      001282                       4556 00432$:
      001282 CB 7A                 4557 	bit	7, d
      001284 28 01                 4558 	jr	Z, 00433$
      001286 37                    4559 	scf
      001287                       4560 00433$:
      001287 30 3A                 4561 	jr	NC, 00131$
                                   4562 ;src/main.c:465: int8_t yMovement = enemies[i].yReserve >> 3;
      001289 F8 0E                 4563 	ldhl	sp,	#14
      00128B 70                    4564 	ld	(hl), b
                                   4565 ;src/main.c:466: enemies[i].y += yMovement;
      00128C F8 04                 4566 	ldhl	sp,#4
      00128E 2A                    4567 	ld	a, (hl+)
      00128F 5F                    4568 	ld	e, a
      001290 56                    4569 	ld	d, (hl)
      001291 1A                    4570 	ld	a, (de)
      001292 4F                    4571 	ld	c, a
      001293 13                    4572 	inc	de
      001294 1A                    4573 	ld	a, (de)
      001295 47                    4574 	ld	b, a
      001296 F8 0E                 4575 	ldhl	sp,	#14
      001298 7E                    4576 	ld	a, (hl)
      001299 5F                    4577 	ld	e, a
      00129A 07                    4578 	rlca
      00129B 9F                    4579 	sbc	a, a
      00129C 57                    4580 	ld	d, a
      00129D 69                    4581 	ld	l, c
                                   4582 ;	spillPairReg hl
                                   4583 ;	spillPairReg hl
      00129E 60                    4584 	ld	h, b
                                   4585 ;	spillPairReg hl
                                   4586 ;	spillPairReg hl
      00129F 19                    4587 	add	hl, de
      0012A0 4D                    4588 	ld	c, l
      0012A1 44                    4589 	ld	b, h
      0012A2 F8 04                 4590 	ldhl	sp,	#4
      0012A4 2A                    4591 	ld	a,	(hl+)
      0012A5 66                    4592 	ld	h, (hl)
      0012A6 6F                    4593 	ld	l, a
      0012A7 79                    4594 	ld	a, c
      0012A8 22                    4595 	ld	(hl+), a
      0012A9 70                    4596 	ld	(hl), b
                                   4597 ;src/main.c:467: enemies[i].yReserve -=  yMovement << 3;
      0012AA F8 0A                 4598 	ldhl	sp,#10
      0012AC 2A                    4599 	ld	a, (hl+)
      0012AD 5F                    4600 	ld	e, a
      0012AE 56                    4601 	ld	d, (hl)
      0012AF 1A                    4602 	ld	a, (de)
      0012B0 F5                    4603 	push	af
      0012B1 F8 10                 4604 	ldhl	sp,	#16
      0012B3 7E                    4605 	ld	a, (hl)
      0012B4 87                    4606 	add	a, a
      0012B5 87                    4607 	add	a, a
      0012B6 87                    4608 	add	a, a
      0012B7 4F                    4609 	ld	c, a
      0012B8 F1                    4610 	pop	af
      0012B9 91                    4611 	sub	a, c
      0012BA 4F                    4612 	ld	c, a
      0012BB F8 0A                 4613 	ldhl	sp,	#10
      0012BD 2A                    4614 	ld	a,	(hl+)
      0012BE 66                    4615 	ld	h, (hl)
      0012BF 6F                    4616 	ld	l, a
      0012C0 71                    4617 	ld	(hl), c
      0012C1 18 67                 4618 	jr	00133$
      0012C3                       4619 00131$:
                                   4620 ;src/main.c:469: else if ((-enemies[i].yReserve) >> 3 > 0){
      0012C3 79                    4621 	ld	a, c
      0012C4 07                    4622 	rlca
      0012C5 9F                    4623 	sbc	a, a
      0012C6 47                    4624 	ld	b, a
      0012C7 AF                    4625 	xor	a, a
      0012C8 91                    4626 	sub	a, c
      0012C9 4F                    4627 	ld	c, a
      0012CA 9F                    4628 	sbc	a, a
      0012CB 90                    4629 	sub	a, b
      0012CC 47                    4630 	ld	b, a
      0012CD CB 28                 4631 	sra	b
      0012CF CB 19                 4632 	rr	c
      0012D1 CB 28                 4633 	sra	b
      0012D3 CB 19                 4634 	rr	c
      0012D5 CB 28                 4635 	sra	b
      0012D7 CB 19                 4636 	rr	c
      0012D9 58                    4637 	ld	e, b
      0012DA AF                    4638 	xor	a, a
      0012DB 57                    4639 	ld	d, a
      0012DC B9                    4640 	cp	a, c
      0012DD 98                    4641 	sbc	a, b
      0012DE CB 7B                 4642 	bit	7, e
      0012E0 28 07                 4643 	jr	Z, 00434$
      0012E2 CB 7A                 4644 	bit	7, d
      0012E4 20 08                 4645 	jr	NZ, 00435$
      0012E6 BF                    4646 	cp	a, a
      0012E7 18 05                 4647 	jr	00435$
      0012E9                       4648 00434$:
      0012E9 CB 7A                 4649 	bit	7, d
      0012EB 28 01                 4650 	jr	Z, 00435$
      0012ED 37                    4651 	scf
      0012EE                       4652 00435$:
      0012EE 30 3A                 4653 	jr	NC, 00133$
                                   4654 ;src/main.c:470: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0012F0 AF                    4655 	xor	a, a
      0012F1 91                    4656 	sub	a, c
      0012F2 4F                    4657 	ld	c, a
      0012F3 F8 0E                 4658 	ldhl	sp,	#14
      0012F5 71                    4659 	ld	(hl), c
                                   4660 ;src/main.c:471: enemies[i].y += yMovement;
      0012F6 F8 04                 4661 	ldhl	sp,#4
      0012F8 2A                    4662 	ld	a, (hl+)
      0012F9 5F                    4663 	ld	e, a
      0012FA 56                    4664 	ld	d, (hl)
      0012FB 1A                    4665 	ld	a, (de)
      0012FC 4F                    4666 	ld	c, a
      0012FD 13                    4667 	inc	de
      0012FE 1A                    4668 	ld	a, (de)
      0012FF 47                    4669 	ld	b, a
      001300 F8 0E                 4670 	ldhl	sp,	#14
      001302 7E                    4671 	ld	a, (hl)
      001303 5F                    4672 	ld	e, a
      001304 07                    4673 	rlca
      001305 9F                    4674 	sbc	a, a
      001306 57                    4675 	ld	d, a
      001307 69                    4676 	ld	l, c
      001308 60                    4677 	ld	h, b
      001309 19                    4678 	add	hl, de
      00130A 4D                    4679 	ld	c, l
      00130B 44                    4680 	ld	b, h
      00130C F8 04                 4681 	ldhl	sp,	#4
      00130E 2A                    4682 	ld	a,	(hl+)
      00130F 66                    4683 	ld	h, (hl)
      001310 6F                    4684 	ld	l, a
      001311 79                    4685 	ld	a, c
      001312 22                    4686 	ld	(hl+), a
      001313 70                    4687 	ld	(hl), b
                                   4688 ;src/main.c:472: enemies[i].yReserve +=  (-yMovement) << 3;
      001314 F8 0A                 4689 	ldhl	sp,#10
      001316 2A                    4690 	ld	a, (hl+)
      001317 5F                    4691 	ld	e, a
      001318 56                    4692 	ld	d, (hl)
      001319 1A                    4693 	ld	a, (de)
      00131A 4F                    4694 	ld	c, a
      00131B AF                    4695 	xor	a, a
      00131C F8 0E                 4696 	ldhl	sp,	#14
      00131E 96                    4697 	sub	a, (hl)
      00131F 87                    4698 	add	a, a
      001320 87                    4699 	add	a, a
      001321 87                    4700 	add	a, a
      001322 81                    4701 	add	a, c
      001323 4F                    4702 	ld	c, a
      001324 F8 0A                 4703 	ldhl	sp,	#10
      001326 2A                    4704 	ld	a,	(hl+)
      001327 66                    4705 	ld	h, (hl)
      001328 6F                    4706 	ld	l, a
      001329 71                    4707 	ld	(hl), c
      00132A                       4708 00133$:
                                   4709 ;src/main.c:408: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00132A F8 0F                 4710 	ldhl	sp,	#15
      00132C 34                    4711 	inc	(hl)
      00132D C3r79r0E              4712 	jp	00196$
      001330                       4713 00134$:
                                   4714 ;src/main.c:479: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001330 F8 0F                 4715 	ldhl	sp,	#15
      001332 36 00                 4716 	ld	(hl), #0x00
      001334                       4717 00198$:
      001334 21r4Dr08              4718 	ld	hl, #_ENEMYCOUNT
      001337 4E                    4719 	ld	c, (hl)
      001338 F8 0F                 4720 	ldhl	sp,	#15
      00133A 7E                    4721 	ld	a, (hl)
      00133B 91                    4722 	sub	a, c
      00133C D2rDFr16              4723 	jp	NC, 00200$
                                   4724 ;src/main.c:481: if (enemies[i].alive) {
      00133F 7E                    4725 	ld	a, (hl)
      001340 16 00                 4726 	ld	d, #0x00
      001342 87                    4727 	add	a, a
      001343 CB 12                 4728 	rl	d
      001345 87                    4729 	add	a, a
      001346 CB 12                 4730 	rl	d
      001348 87                    4731 	add	a, a
      001349 CB 12                 4732 	rl	d
      00134B 87                    4733 	add	a, a
      00134C CB 12                 4734 	rl	d
      00134E 5F                    4735 	ld	e, a
      00134F 21r50r00              4736 	ld	hl, #_enemies
      001352 19                    4737 	add	hl, de
      001353 E5                    4738 	push	hl
      001354 7D                    4739 	ld	a, l
      001355 F8 03                 4740 	ldhl	sp,	#3
      001357 77                    4741 	ld	(hl), a
      001358 E1                    4742 	pop	hl
      001359 7C                    4743 	ld	a, h
      00135A F8 02                 4744 	ldhl	sp,	#2
      00135C 32                    4745 	ld	(hl-), a
      00135D 2A                    4746 	ld	a, (hl+)
      00135E 5F                    4747 	ld	e, a
      00135F 56                    4748 	ld	d, (hl)
      001360 21 09 00              4749 	ld	hl, #0x0009
      001363 19                    4750 	add	hl, de
      001364 E5                    4751 	push	hl
      001365 7D                    4752 	ld	a, l
      001366 F8 05                 4753 	ldhl	sp,	#5
      001368 77                    4754 	ld	(hl), a
      001369 E1                    4755 	pop	hl
      00136A 7C                    4756 	ld	a, h
      00136B F8 04                 4757 	ldhl	sp,	#4
      00136D 32                    4758 	ld	(hl-), a
      00136E 2A                    4759 	ld	a, (hl+)
      00136F 5F                    4760 	ld	e, a
      001370 56                    4761 	ld	d, (hl)
      001371 1A                    4762 	ld	a, (de)
      001372 F8 0E                 4763 	ldhl	sp,	#14
      001374 77                    4764 	ld	(hl), a
      001375 7E                    4765 	ld	a, (hl)
      001376 B7                    4766 	or	a, a
      001377 CAr6Dr15              4767 	jp	Z, 00157$
                                   4768 ;src/main.c:482: if (enemies[i].visible == 1) {
      00137A F8 01                 4769 	ldhl	sp,#1
      00137C 2A                    4770 	ld	a, (hl+)
      00137D 5F                    4771 	ld	e, a
      00137E 56                    4772 	ld	d, (hl)
      00137F 21 0A 00              4773 	ld	hl, #0x000a
      001382 19                    4774 	add	hl, de
      001383 E5                    4775 	push	hl
      001384 7D                    4776 	ld	a, l
      001385 F8 07                 4777 	ldhl	sp,	#7
      001387 77                    4778 	ld	(hl), a
      001388 E1                    4779 	pop	hl
      001389 7C                    4780 	ld	a, h
      00138A F8 06                 4781 	ldhl	sp,	#6
      00138C 32                    4782 	ld	(hl-), a
      00138D 2A                    4783 	ld	a, (hl+)
      00138E 5F                    4784 	ld	e, a
      00138F 2A                    4785 	ld	a, (hl+)
      001390 57                    4786 	ld	d, a
      001391 1A                    4787 	ld	a, (de)
      001392 77                    4788 	ld	(hl), a
                                   4789 ;src/main.c:483: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001393 F8 01                 4790 	ldhl	sp,#1
      001395 2A                    4791 	ld	a, (hl+)
      001396 5F                    4792 	ld	e, a
      001397 56                    4793 	ld	d, (hl)
      001398 1A                    4794 	ld	a, (de)
      001399 F8 08                 4795 	ldhl	sp,	#8
      00139B 22                    4796 	ld	(hl+), a
      00139C 13                    4797 	inc	de
      00139D 1A                    4798 	ld	a, (de)
      00139E 77                    4799 	ld	(hl), a
      00139F F8 01                 4800 	ldhl	sp,	#1
      0013A1 2A                    4801 	ld	a, (hl+)
      0013A2 4F                    4802 	ld	c, a
      0013A3 46                    4803 	ld	b, (hl)
      0013A4 03                    4804 	inc	bc
      0013A5 03                    4805 	inc	bc
                                   4806 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      0013A6 F8 0F                 4807 	ldhl	sp,	#15
      0013A8 5E                    4808 	ld	e, (hl)
                                   4809 ;src/main.c:483: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013A9 F8 08                 4810 	ldhl	sp,	#8
      0013AB 2A                    4811 	ld	a, (hl+)
      0013AC 23                    4812 	inc	hl
      0013AD 32                    4813 	ld	(hl-), a
      0013AE 2A                    4814 	ld	a, (hl+)
      0013AF 23                    4815 	inc	hl
                                   4816 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      0013B0 22                    4817 	ld	(hl+), a
      0013B1 7B                    4818 	ld	a, e
      0013B2 87                    4819 	add	a, a
                                   4820 ;src/main.c:483: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013B3 32                    4821 	ld	(hl-), a
      0013B4 2A                    4822 	ld	a, (hl+)
      0013B5 23                    4823 	inc	hl
      0013B6 07                    4824 	rlca
      0013B7 E6 01                 4825 	and	a,#0x01
                                   4826 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      0013B9 32                    4827 	ld	(hl-), a
      0013BA 2A                    4828 	ld	a, (hl+)
      0013BB 23                    4829 	inc	hl
      0013BC C6 0A                 4830 	add	a, #0x0a
      0013BE 77                    4831 	ld	(hl), a
                                   4832 ;src/main.c:482: if (enemies[i].visible == 1) {
      0013BF F8 07                 4833 	ldhl	sp,	#7
      0013C1 7E                    4834 	ld	a, (hl)
      0013C2 3D                    4835 	dec	a
      0013C3 20 74                 4836 	jr	NZ, 00154$
                                   4837 ;src/main.c:483: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013C5 F8 0D                 4838 	ldhl	sp,	#13
      0013C7 7E                    4839 	ld	a, (hl)
      0013C8 B7                    4840 	or	a, a
      0013C9 20 43                 4841 	jr	NZ, 00135$
      0013CB F8 0A                 4842 	ldhl	sp,	#10
      0013CD 3E AC                 4843 	ld	a, #0xac
      0013CF 96                    4844 	sub	a, (hl)
      0013D0 23                    4845 	inc	hl
      0013D1 3E 00                 4846 	ld	a, #0x00
      0013D3 9E                    4847 	sbc	a, (hl)
      0013D4 3E 00                 4848 	ld	a, #0x00
      0013D6 57                    4849 	ld	d, a
      0013D7 CB 7E                 4850 	bit	7, (hl)
      0013D9 28 07                 4851 	jr	Z, 00439$
      0013DB CB 7A                 4852 	bit	7, d
      0013DD 20 08                 4853 	jr	NZ, 00440$
      0013DF BF                    4854 	cp	a, a
      0013E0 18 05                 4855 	jr	00440$
      0013E2                       4856 00439$:
      0013E2 CB 7A                 4857 	bit	7, d
      0013E4 28 01                 4858 	jr	Z, 00440$
      0013E6 37                    4859 	scf
      0013E7                       4860 00440$:
      0013E7 38 25                 4861 	jr	C, 00135$
      0013E9 69                    4862 	ld	l, c
      0013EA 60                    4863 	ld	h, b
      0013EB 2A                    4864 	ld	a, (hl+)
      0013EC 4F                    4865 	ld	c, a
      0013ED 46                    4866 	ld	b, (hl)
      0013EE CB 78                 4867 	bit	7, b
      0013F0 20 1C                 4868 	jr	NZ, 00135$
      0013F2 58                    4869 	ld	e, b
      0013F3 16 00                 4870 	ld	d, #0x00
      0013F5 3E 98                 4871 	ld	a, #0x98
      0013F7 B9                    4872 	cp	a, c
      0013F8 3E 00                 4873 	ld	a, #0x00
      0013FA 98                    4874 	sbc	a, b
      0013FB CB 7B                 4875 	bit	7, e
      0013FD 28 07                 4876 	jr	Z, 00441$
      0013FF CB 7A                 4877 	bit	7, d
      001401 20 08                 4878 	jr	NZ, 00442$
      001403 BF                    4879 	cp	a, a
      001404 18 05                 4880 	jr	00442$
      001406                       4881 00441$:
      001406 CB 7A                 4882 	bit	7, d
      001408 28 01                 4883 	jr	Z, 00442$
      00140A 37                    4884 	scf
      00140B                       4885 00442$:
      00140B D2r6Dr15              4886 	jp	NC, 00157$
      00140E                       4887 00135$:
                                   4888 ;src/main.c:484: enemies[i].visible = 0;
      00140E F8 05                 4889 	ldhl	sp,	#5
      001410 2A                    4890 	ld	a,	(hl+)
      001411 66                    4891 	ld	h, (hl)
      001412 6F                    4892 	ld	l, a
      001413 36 00                 4893 	ld	(hl), #0x00
                                   4894 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      001415 F8 0E                 4895 	ldhl	sp,	#14
                                   4896 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001417 6E                    4897 	ld	l, (hl)
      001418 01r00r00              4898 	ld	bc, #_shadow_OAM+0
                                   4899 ;	spillPairReg hl
                                   4900 ;	spillPairReg hl
      00141B 26 00                 4901 	ld	h, #0x00
                                   4902 ;	spillPairReg hl
                                   4903 ;	spillPairReg hl
      00141D 29                    4904 	add	hl, hl
      00141E 29                    4905 	add	hl, hl
      00141F 09                    4906 	add	hl, bc
      001420 23                    4907 	inc	hl
      001421 23                    4908 	inc	hl
      001422 36 7F                 4909 	ld	(hl), #0x7f
                                   4910 ;src/main.c:486: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001424 F8 0C                 4911 	ldhl	sp,	#12
      001426 7E                    4912 	ld	a, (hl)
      001427 C6 0B                 4913 	add	a, #0x0b
                                   4914 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001429 6F                    4915 	ld	l, a
      00142A 01r00r00              4916 	ld	bc, #_shadow_OAM+0
                                   4917 ;	spillPairReg hl
                                   4918 ;	spillPairReg hl
      00142D 26 00                 4919 	ld	h, #0x00
                                   4920 ;	spillPairReg hl
                                   4921 ;	spillPairReg hl
      00142F 29                    4922 	add	hl, hl
      001430 29                    4923 	add	hl, hl
      001431 09                    4924 	add	hl, bc
      001432 23                    4925 	inc	hl
      001433 23                    4926 	inc	hl
      001434 36 7F                 4927 	ld	(hl), #0x7f
                                   4928 ;src/main.c:486: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001436 C3r6Dr15              4929 	jp	00157$
      001439                       4930 00154$:
                                   4931 ;src/main.c:490: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001439 F8 0D                 4932 	ldhl	sp,	#13
      00143B CB 46                 4933 	bit	0, (hl)
      00143D C2rD8r14              4934 	jp	NZ, 00148$
      001440 F8 0A                 4935 	ldhl	sp,	#10
      001442 2A                    4936 	ld	a, (hl+)
      001443 D6 AC                 4937 	sub	a, #0xac
      001445 7E                    4938 	ld	a, (hl)
      001446 DE 00                 4939 	sbc	a, #0x00
      001448 56                    4940 	ld	d, (hl)
      001449 3E 00                 4941 	ld	a, #0x00
      00144B CB 7F                 4942 	bit	7,a
      00144D 28 07                 4943 	jr	Z, 00443$
      00144F CB 7A                 4944 	bit	7, d
      001451 20 08                 4945 	jr	NZ, 00444$
      001453 BF                    4946 	cp	a, a
      001454 18 05                 4947 	jr	00444$
      001456                       4948 00443$:
      001456 CB 7A                 4949 	bit	7, d
      001458 28 01                 4950 	jr	Z, 00444$
      00145A 37                    4951 	scf
      00145B                       4952 00444$:
      00145B 30 7B                 4953 	jr	NC, 00148$
      00145D 69                    4954 	ld	l, c
      00145E 60                    4955 	ld	h, b
      00145F 2A                    4956 	ld	a,	(hl+)
      001460 66                    4957 	ld	h, (hl)
                                   4958 ;	spillPairReg hl
      001461 6F                    4959 	ld	l, a
                                   4960 ;	spillPairReg hl
                                   4961 ;	spillPairReg hl
      001462 5C                    4962 	ld	e, h
      001463 AF                    4963 	xor	a, a
      001464 57                    4964 	ld	d, a
      001465 BD                    4965 	cp	a, l
      001466 9C                    4966 	sbc	a, h
      001467 CB 7B                 4967 	bit	7, e
      001469 28 07                 4968 	jr	Z, 00445$
      00146B CB 7A                 4969 	bit	7, d
      00146D 20 08                 4970 	jr	NZ, 00446$
      00146F BF                    4971 	cp	a, a
      001470 18 05                 4972 	jr	00446$
      001472                       4973 00445$:
      001472 CB 7A                 4974 	bit	7, d
      001474 28 01                 4975 	jr	Z, 00446$
      001476 37                    4976 	scf
      001477                       4977 00446$:
      001477 30 5F                 4978 	jr	NC, 00148$
      001479 7D                    4979 	ld	a, l
      00147A D6 98                 4980 	sub	a, #0x98
      00147C 7C                    4981 	ld	a, h
      00147D 17                    4982 	rla
      00147E 3F                    4983 	ccf
      00147F 1F                    4984 	rra
      001480 DE 80                 4985 	sbc	a, #0x80
      001482 30 54                 4986 	jr	NC, 00148$
                                   4987 ;src/main.c:491: enemies[i].visible = 1;
      001484 F8 05                 4988 	ldhl	sp,	#5
      001486 2A                    4989 	ld	a,	(hl+)
      001487 66                    4990 	ld	h, (hl)
      001488 6F                    4991 	ld	l, a
      001489 36 01                 4992 	ld	(hl), #0x01
                                   4993 ;src/main.c:492: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      00148B F8 01                 4994 	ldhl	sp,#1
      00148D 2A                    4995 	ld	a, (hl+)
      00148E 5F                    4996 	ld	e, a
      00148F 56                    4997 	ld	d, (hl)
      001490 21 06 00              4998 	ld	hl, #0x0006
      001493 19                    4999 	add	hl, de
      001494 4D                    5000 	ld	c, l
      001495 44                    5001 	ld	b, h
      001496 0A                    5002 	ld	a, (bc)
      001497 4F                    5003 	ld	c, a
      001498 F8 0E                 5004 	ldhl	sp,	#14
                                   5005 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00149A 6E                    5006 	ld	l, (hl)
                                   5007 ;	spillPairReg hl
                                   5008 ;	spillPairReg hl
      00149B 26 00                 5009 	ld	h, #0x00
                                   5010 ;	spillPairReg hl
                                   5011 ;	spillPairReg hl
      00149D 29                    5012 	add	hl, hl
      00149E 29                    5013 	add	hl, hl
      00149F 11r00r00              5014 	ld	de, #_shadow_OAM
      0014A2 19                    5015 	add	hl, de
      0014A3 23                    5016 	inc	hl
      0014A4 23                    5017 	inc	hl
      0014A5 71                    5018 	ld	(hl), c
                                   5019 ;src/main.c:493: if (enemies[i].spriteCount == 2) {
      0014A6 F8 01                 5020 	ldhl	sp,#1
      0014A8 2A                    5021 	ld	a, (hl+)
      0014A9 5F                    5022 	ld	e, a
      0014AA 56                    5023 	ld	d, (hl)
      0014AB 21 08 00              5024 	ld	hl, #0x0008
      0014AE 19                    5025 	add	hl, de
      0014AF 4D                    5026 	ld	c, l
      0014B0 44                    5027 	ld	b, h
      0014B1 0A                    5028 	ld	a, (bc)
      0014B2 D6 02                 5029 	sub	a, #0x02
      0014B4 C2r6Dr15              5030 	jp	NZ,00157$
                                   5031 ;src/main.c:494: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0014B7 F8 01                 5032 	ldhl	sp,#1
      0014B9 2A                    5033 	ld	a, (hl+)
      0014BA 5F                    5034 	ld	e, a
      0014BB 56                    5035 	ld	d, (hl)
      0014BC 21 07 00              5036 	ld	hl, #0x0007
      0014BF 19                    5037 	add	hl, de
      0014C0 4D                    5038 	ld	c, l
      0014C1 44                    5039 	ld	b, h
      0014C2 0A                    5040 	ld	a, (bc)
      0014C3 4F                    5041 	ld	c, a
      0014C4 F8 0C                 5042 	ldhl	sp,	#12
      0014C6 7E                    5043 	ld	a, (hl)
      0014C7 C6 0B                 5044 	add	a, #0x0b
                                   5045 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0014C9 6F                    5046 	ld	l, a
                                   5047 ;	spillPairReg hl
                                   5048 ;	spillPairReg hl
      0014CA 26 00                 5049 	ld	h, #0x00
                                   5050 ;	spillPairReg hl
                                   5051 ;	spillPairReg hl
      0014CC 29                    5052 	add	hl, hl
      0014CD 29                    5053 	add	hl, hl
      0014CE 11r00r00              5054 	ld	de, #_shadow_OAM
      0014D1 19                    5055 	add	hl, de
      0014D2 23                    5056 	inc	hl
      0014D3 23                    5057 	inc	hl
      0014D4 71                    5058 	ld	(hl), c
                                   5059 ;src/main.c:494: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0014D5 C3r6Dr15              5060 	jp	00157$
      0014D8                       5061 00148$:
                                   5062 ;src/main.c:497: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      0014D8 F8 08                 5063 	ldhl	sp,	#8
      0014DA 2A                    5064 	ld	a, (hl+)
      0014DB D6 9C                 5065 	sub	a, #0x9c
      0014DD 7E                    5066 	ld	a, (hl)
      0014DE DE FF                 5067 	sbc	a, #0xff
      0014E0 56                    5068 	ld	d, (hl)
      0014E1 3E FF                 5069 	ld	a, #0xff
      0014E3 CB 7F                 5070 	bit	7,a
      0014E5 28 07                 5071 	jr	Z, 00449$
      0014E7 CB 7A                 5072 	bit	7, d
      0014E9 20 08                 5073 	jr	NZ, 00450$
      0014EB BF                    5074 	cp	a, a
      0014EC 18 05                 5075 	jr	00450$
      0014EE                       5076 00449$:
      0014EE CB 7A                 5077 	bit	7, d
      0014F0 28 01                 5078 	jr	Z, 00450$
      0014F2 37                    5079 	scf
      0014F3                       5080 00450$:
      0014F3 38 49                 5081 	jr	C, 00142$
      0014F5 F8 0A                 5082 	ldhl	sp,	#10
      0014F7 3E 10                 5083 	ld	a, #0x10
      0014F9 96                    5084 	sub	a, (hl)
      0014FA 23                    5085 	inc	hl
      0014FB 3E 01                 5086 	ld	a, #0x01
      0014FD 9E                    5087 	sbc	a, (hl)
      0014FE 3E 01                 5088 	ld	a, #0x01
      001500 57                    5089 	ld	d, a
      001501 CB 7E                 5090 	bit	7, (hl)
      001503 28 07                 5091 	jr	Z, 00451$
      001505 CB 7A                 5092 	bit	7, d
      001507 20 08                 5093 	jr	NZ, 00452$
      001509 BF                    5094 	cp	a, a
      00150A 18 05                 5095 	jr	00452$
      00150C                       5096 00451$:
      00150C CB 7A                 5097 	bit	7, d
      00150E 28 01                 5098 	jr	Z, 00452$
      001510 37                    5099 	scf
      001511                       5100 00452$:
      001511 38 2B                 5101 	jr	C, 00142$
      001513 69                    5102 	ld	l, c
      001514 60                    5103 	ld	h, b
      001515 2A                    5104 	ld	a, (hl+)
      001516 4F                    5105 	ld	c, a
      001517 46                    5106 	ld	b, (hl)
      001518 79                    5107 	ld	a, c
      001519 D6 9C                 5108 	sub	a, #0x9c
      00151B 78                    5109 	ld	a, b
      00151C 17                    5110 	rla
      00151D 3F                    5111 	ccf
      00151E 1F                    5112 	rra
      00151F DE 7F                 5113 	sbc	a, #0x7f
      001521 38 1B                 5114 	jr	C, 00142$
      001523 58                    5115 	ld	e, b
      001524 16 00                 5116 	ld	d, #0x00
      001526 3E FC                 5117 	ld	a, #0xfc
      001528 B9                    5118 	cp	a, c
      001529 3E 00                 5119 	ld	a, #0x00
      00152B 98                    5120 	sbc	a, b
      00152C CB 7B                 5121 	bit	7, e
      00152E 28 07                 5122 	jr	Z, 00453$
      001530 CB 7A                 5123 	bit	7, d
      001532 20 08                 5124 	jr	NZ, 00454$
      001534 BF                    5125 	cp	a, a
      001535 18 05                 5126 	jr	00454$
      001537                       5127 00453$:
      001537 CB 7A                 5128 	bit	7, d
      001539 28 01                 5129 	jr	Z, 00454$
      00153B 37                    5130 	scf
      00153C                       5131 00454$:
      00153C 30 2F                 5132 	jr	NC, 00157$
      00153E                       5133 00142$:
                                   5134 ;src/main.c:498: enemies[i].alive = 0;
      00153E F8 03                 5135 	ldhl	sp,	#3
      001540 2A                    5136 	ld	a,	(hl+)
      001541 66                    5137 	ld	h, (hl)
      001542 6F                    5138 	ld	l, a
      001543 36 00                 5139 	ld	(hl), #0x00
                                   5140 ;src/main.c:499: set_sprite_tile(10+(i<<1), 0x7f);
      001545 F8 0E                 5141 	ldhl	sp,	#14
                                   5142 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001547 6E                    5143 	ld	l, (hl)
      001548 01r00r00              5144 	ld	bc, #_shadow_OAM+0
                                   5145 ;	spillPairReg hl
                                   5146 ;	spillPairReg hl
      00154B 26 00                 5147 	ld	h, #0x00
                                   5148 ;	spillPairReg hl
                                   5149 ;	spillPairReg hl
      00154D 29                    5150 	add	hl, hl
      00154E 29                    5151 	add	hl, hl
      00154F 09                    5152 	add	hl, bc
      001550 23                    5153 	inc	hl
      001551 23                    5154 	inc	hl
      001552 36 7F                 5155 	ld	(hl), #0x7f
                                   5156 ;src/main.c:500: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001554 F8 0C                 5157 	ldhl	sp,	#12
      001556 7E                    5158 	ld	a, (hl)
      001557 C6 0B                 5159 	add	a, #0x0b
                                   5160 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001559 6F                    5161 	ld	l, a
      00155A 01r00r00              5162 	ld	bc, #_shadow_OAM+0
                                   5163 ;	spillPairReg hl
                                   5164 ;	spillPairReg hl
      00155D 26 00                 5165 	ld	h, #0x00
                                   5166 ;	spillPairReg hl
                                   5167 ;	spillPairReg hl
      00155F 29                    5168 	add	hl, hl
      001560 29                    5169 	add	hl, hl
      001561 09                    5170 	add	hl, bc
      001562 23                    5171 	inc	hl
      001563 23                    5172 	inc	hl
      001564 36 7F                 5173 	ld	(hl), #0x7f
                                   5174 ;src/main.c:501: initEnemies(0);
      001566 AF                    5175 	xor	a, a
      001567 F5                    5176 	push	af
      001568 33                    5177 	inc	sp
      001569 CDrC8r0C              5178 	call	_initEnemies
      00156C 33                    5179 	inc	sp
      00156D                       5180 00157$:
                                   5181 ;src/main.c:505: if (enemies[i].spriteCount == 1) {
      00156D F8 0F                 5182 	ldhl	sp,	#15
      00156F 6E                    5183 	ld	l, (hl)
      001570 26 00                 5184 	ld	h, #0x00
      001572 29                    5185 	add	hl, hl
      001573 29                    5186 	add	hl, hl
      001574 29                    5187 	add	hl, hl
      001575 29                    5188 	add	hl, hl
      001576 7D                    5189 	ld	a, l
      001577 C6r50                 5190 	add	a, #<(_enemies)
      001579 4F                    5191 	ld	c, a
      00157A 7C                    5192 	ld	a, h
      00157B CEs00                 5193 	adc	a, #>(_enemies)
      00157D 47                    5194 	ld	b, a
      00157E 21 08 00              5195 	ld	hl, #0x0008
      001581 09                    5196 	add	hl, bc
      001582 5E                    5197 	ld	e, (hl)
                                   5198 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      001583 F8 0F                 5199 	ldhl	sp,	#15
      001585 3A                    5200 	ld	a, (hl-)
      001586 87                    5201 	add	a, a
      001587 77                    5202 	ld	(hl), a
      001588 7E                    5203 	ld	a, (hl)
      001589 C6 0A                 5204 	add	a, #0x0a
      00158B F8 0A                 5205 	ldhl	sp,	#10
      00158D 77                    5206 	ld	(hl), a
                                   5207 ;src/main.c:505: if (enemies[i].spriteCount == 1) {
      00158E 1D                    5208 	dec	e
      00158F 20 52                 5209 	jr	NZ, 00165$
                                   5210 ;src/main.c:506: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001591 59                    5211 	ld	e, c
      001592 50                    5212 	ld	d, b
      001593 13                    5213 	inc	de
      001594 13                    5214 	inc	de
      001595 1A                    5215 	ld	a, (de)
      001596 C6 0C                 5216 	add	a, #0x0c
      001598 5F                    5217 	ld	e, a
      001599 0A                    5218 	ld	a, (bc)
      00159A C6 04                 5219 	add	a, #0x04
      00159C F8 0E                 5220 	ldhl	sp,	#14
      00159E 77                    5221 	ld	(hl), a
      00159F F8 0A                 5222 	ldhl	sp,	#10
      0015A1 56                    5223 	ld	d, (hl)
                                   5224 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0015A2 6A                    5225 	ld	l, d
                                   5226 ;	spillPairReg hl
                                   5227 ;	spillPairReg hl
      0015A3 26 00                 5228 	ld	h, #0x00
                                   5229 ;	spillPairReg hl
                                   5230 ;	spillPairReg hl
      0015A5 29                    5231 	add	hl, hl
      0015A6 29                    5232 	add	hl, hl
      0015A7 D5                    5233 	push	de
      0015A8 11r00r00              5234 	ld	de, #_shadow_OAM
      0015AB 19                    5235 	add	hl, de
      0015AC D1                    5236 	pop	de
                                   5237 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0015AD 7B                    5238 	ld	a, e
      0015AE 22                    5239 	ld	(hl+), a
      0015AF 5D                    5240 	ld	e, l
      0015B0 54                    5241 	ld	d, h
      0015B1 F8 0E                 5242 	ldhl	sp,	#14
      0015B3 7E                    5243 	ld	a, (hl)
      0015B4 12                    5244 	ld	(de), a
                                   5245 ;src/main.c:507: if (enemies[i].xSpeed >= 0) {
      0015B5 21 0E 00              5246 	ld	hl, #0x000e
      0015B8 09                    5247 	add	hl, bc
      0015B9 CB 7E                 5248 	bit	7, (hl)
      0015BB 20 13                 5249 	jr	NZ, 00159$
                                   5250 ;src/main.c:508: set_sprite_prop(10+(i<<1), 0);
      0015BD F8 0A                 5251 	ldhl	sp,	#10
                                   5252 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015BF 6E                    5253 	ld	l, (hl)
      0015C0 01r00r00              5254 	ld	bc, #_shadow_OAM+0
                                   5255 ;	spillPairReg hl
                                   5256 ;	spillPairReg hl
      0015C3 26 00                 5257 	ld	h, #0x00
                                   5258 ;	spillPairReg hl
                                   5259 ;	spillPairReg hl
      0015C5 29                    5260 	add	hl, hl
      0015C6 29                    5261 	add	hl, hl
      0015C7 09                    5262 	add	hl, bc
      0015C8 23                    5263 	inc	hl
      0015C9 23                    5264 	inc	hl
      0015CA 23                    5265 	inc	hl
      0015CB 36 00                 5266 	ld	(hl), #0x00
                                   5267 ;src/main.c:508: set_sprite_prop(10+(i<<1), 0);
      0015CD C3rD9r16              5268 	jp	00199$
      0015D0                       5269 00159$:
                                   5270 ;src/main.c:511: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015D0 F8 0A                 5271 	ldhl	sp,	#10
                                   5272 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015D2 6E                    5273 	ld	l, (hl)
      0015D3 01r00r00              5274 	ld	bc, #_shadow_OAM+0
                                   5275 ;	spillPairReg hl
                                   5276 ;	spillPairReg hl
      0015D6 26 00                 5277 	ld	h, #0x00
                                   5278 ;	spillPairReg hl
                                   5279 ;	spillPairReg hl
      0015D8 29                    5280 	add	hl, hl
      0015D9 29                    5281 	add	hl, hl
      0015DA 09                    5282 	add	hl, bc
      0015DB 23                    5283 	inc	hl
      0015DC 23                    5284 	inc	hl
      0015DD 23                    5285 	inc	hl
      0015DE 36 20                 5286 	ld	(hl), #0x20
                                   5287 ;src/main.c:511: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015E0 C3rD9r16              5288 	jp	00199$
      0015E3                       5289 00165$:
                                   5290 ;src/main.c:516: if (enemies[i].xSpeed >= 0) {
      0015E3 21 0E 00              5291 	ld	hl, #0x000e
      0015E6 09                    5292 	add	hl, bc
      0015E7 E5                    5293 	push	hl
      0015E8 7D                    5294 	ld	a, l
      0015E9 F8 0E                 5295 	ldhl	sp,	#14
      0015EB 77                    5296 	ld	(hl), a
      0015EC E1                    5297 	pop	hl
      0015ED 7C                    5298 	ld	a, h
      0015EE F8 0D                 5299 	ldhl	sp,	#13
      0015F0 32                    5300 	ld	(hl-), a
      0015F1 2A                    5301 	ld	a, (hl+)
      0015F2 5F                    5302 	ld	e, a
      0015F3 56                    5303 	ld	d, (hl)
      0015F4 1A                    5304 	ld	a, (de)
                                   5305 ;	spillPairReg hl
                                   5306 ;	spillPairReg hl
      0015F5 CB 7F                 5307 	bit	7,a
      0015F7 20 70                 5308 	jr	NZ, 00162$
                                   5309 ;src/main.c:517: set_sprite_prop(10+(i<<1), 0);
      0015F9 F8 0A                 5310 	ldhl	sp,	#10
                                   5311 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015FB 6E                    5312 	ld	l, (hl)
                                   5313 ;	spillPairReg hl
                                   5314 ;	spillPairReg hl
      0015FC 26 00                 5315 	ld	h, #0x00
                                   5316 ;	spillPairReg hl
                                   5317 ;	spillPairReg hl
      0015FE 29                    5318 	add	hl, hl
      0015FF 29                    5319 	add	hl, hl
      001600 11r00r00              5320 	ld	de, #_shadow_OAM
      001603 19                    5321 	add	hl, de
      001604 23                    5322 	inc	hl
      001605 23                    5323 	inc	hl
      001606 23                    5324 	inc	hl
      001607 36 00                 5325 	ld	(hl), #0x00
                                   5326 ;src/main.c:518: set_sprite_prop(10+(i<<1)+1, 0);
      001609 F8 0E                 5327 	ldhl	sp,	#14
      00160B 7E                    5328 	ld	a, (hl)
      00160C C6 0B                 5329 	add	a, #0x0b
      00160E F8 0B                 5330 	ldhl	sp,	#11
      001610 77                    5331 	ld	(hl), a
                                   5332 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001611 6E                    5333 	ld	l, (hl)
                                   5334 ;	spillPairReg hl
                                   5335 ;	spillPairReg hl
      001612 26 00                 5336 	ld	h, #0x00
                                   5337 ;	spillPairReg hl
                                   5338 ;	spillPairReg hl
      001614 29                    5339 	add	hl, hl
      001615 29                    5340 	add	hl, hl
      001616 11r00r00              5341 	ld	de, #_shadow_OAM
      001619 19                    5342 	add	hl, de
      00161A 23                    5343 	inc	hl
      00161B 23                    5344 	inc	hl
      00161C 23                    5345 	inc	hl
      00161D 36 00                 5346 	ld	(hl), #0x00
                                   5347 ;src/main.c:519: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      00161F 21 02 00              5348 	ld	hl, #0x0002
      001622 09                    5349 	add	hl, bc
      001623 E5                    5350 	push	hl
      001624 7D                    5351 	ld	a, l
      001625 F8 0E                 5352 	ldhl	sp,	#14
      001627 77                    5353 	ld	(hl), a
      001628 E1                    5354 	pop	hl
      001629 7C                    5355 	ld	a, h
      00162A F8 0D                 5356 	ldhl	sp,	#13
      00162C 32                    5357 	ld	(hl-), a
      00162D 2A                    5358 	ld	a, (hl+)
      00162E 5F                    5359 	ld	e, a
      00162F 2A                    5360 	ld	a, (hl+)
      001630 57                    5361 	ld	d, a
      001631 1A                    5362 	ld	a, (de)
      001632 C6 08                 5363 	add	a, #0x08
      001634 5F                    5364 	ld	e, a
      001635 0A                    5365 	ld	a, (bc)
      001636 77                    5366 	ld	(hl), a
      001637 F8 0A                 5367 	ldhl	sp,	#10
      001639 56                    5368 	ld	d, (hl)
                                   5369 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00163A 6A                    5370 	ld	l, d
                                   5371 ;	spillPairReg hl
                                   5372 ;	spillPairReg hl
      00163B 26 00                 5373 	ld	h, #0x00
                                   5374 ;	spillPairReg hl
                                   5375 ;	spillPairReg hl
      00163D 29                    5376 	add	hl, hl
      00163E 29                    5377 	add	hl, hl
      00163F D5                    5378 	push	de
      001640 11r00r00              5379 	ld	de, #_shadow_OAM
      001643 19                    5380 	add	hl, de
      001644 D1                    5381 	pop	de
                                   5382 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001645 7B                    5383 	ld	a, e
      001646 22                    5384 	ld	(hl+), a
      001647 5D                    5385 	ld	e, l
      001648 54                    5386 	ld	d, h
      001649 F8 0E                 5387 	ldhl	sp,	#14
                                   5388 ;src/main.c:520: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      00164B 3A                    5389 	ld	a, (hl-)
      00164C 2B                    5390 	dec	hl
      00164D 12                    5391 	ld	(de), a
      00164E 2A                    5392 	ld	a, (hl+)
      00164F 5F                    5393 	ld	e, a
      001650 3A                    5394 	ld	a, (hl-)
      001651 2B                    5395 	dec	hl
      001652 57                    5396 	ld	d, a
      001653 1A                    5397 	ld	a, (de)
      001654 C6 08                 5398 	add	a, #0x08
      001656 57                    5399 	ld	d, a
      001657 0A                    5400 	ld	a, (bc)
      001658 C6 08                 5401 	add	a, #0x08
      00165A 5F                    5402 	ld	e, a
                                   5403 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00165B 6E                    5404 	ld	l, (hl)
                                   5405 ;	spillPairReg hl
                                   5406 ;	spillPairReg hl
      00165C 26 00                 5407 	ld	h, #0x00
                                   5408 ;	spillPairReg hl
                                   5409 ;	spillPairReg hl
      00165E 29                    5410 	add	hl, hl
      00165F 29                    5411 	add	hl, hl
      001660 01r00r00              5412 	ld	bc, #_shadow_OAM
      001663 09                    5413 	add	hl, bc
                                   5414 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001664 7A                    5415 	ld	a, d
      001665 22                    5416 	ld	(hl+), a
      001666 73                    5417 	ld	(hl), e
                                   5418 ;src/main.c:520: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001667 18 70                 5419 	jr	00199$
      001669                       5420 00162$:
                                   5421 ;src/main.c:523: set_sprite_prop(10+(i<<1), S_FLIPX);
      001669 F8 0A                 5422 	ldhl	sp,	#10
      00166B 5E                    5423 	ld	e, (hl)
                                   5424 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00166C 26 00                 5425 	ld	h, #0x00
                                   5426 ;	spillPairReg hl
                                   5427 ;	spillPairReg hl
      00166E 6B                    5428 	ld	l, e
      00166F 29                    5429 	add	hl, hl
      001670 29                    5430 	add	hl, hl
      001671 11r00r00              5431 	ld	de, #_shadow_OAM
      001674 19                    5432 	add	hl, de
      001675 23                    5433 	inc	hl
      001676 23                    5434 	inc	hl
      001677 23                    5435 	inc	hl
      001678 36 20                 5436 	ld	(hl), #0x20
                                   5437 ;src/main.c:524: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      00167A F8 0E                 5438 	ldhl	sp,	#14
      00167C 7E                    5439 	ld	a, (hl)
      00167D C6 0B                 5440 	add	a, #0x0b
      00167F F8 0B                 5441 	ldhl	sp,	#11
      001681 77                    5442 	ld	(hl), a
      001682 5E                    5443 	ld	e, (hl)
                                   5444 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001683 26 00                 5445 	ld	h, #0x00
                                   5446 ;	spillPairReg hl
                                   5447 ;	spillPairReg hl
      001685 6B                    5448 	ld	l, e
      001686 29                    5449 	add	hl, hl
      001687 29                    5450 	add	hl, hl
      001688 11r00r00              5451 	ld	de, #_shadow_OAM
      00168B 19                    5452 	add	hl, de
      00168C 23                    5453 	inc	hl
      00168D 23                    5454 	inc	hl
      00168E 23                    5455 	inc	hl
      00168F 36 20                 5456 	ld	(hl), #0x20
                                   5457 ;src/main.c:525: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      001691 21 02 00              5458 	ld	hl, #0x0002
      001694 09                    5459 	add	hl, bc
      001695 E5                    5460 	push	hl
      001696 7D                    5461 	ld	a, l
      001697 F8 0E                 5462 	ldhl	sp,	#14
      001699 77                    5463 	ld	(hl), a
      00169A E1                    5464 	pop	hl
      00169B 7C                    5465 	ld	a, h
      00169C F8 0D                 5466 	ldhl	sp,	#13
      00169E 32                    5467 	ld	(hl-), a
      00169F 2A                    5468 	ld	a, (hl+)
      0016A0 5F                    5469 	ld	e, a
      0016A1 2A                    5470 	ld	a, (hl+)
      0016A2 57                    5471 	ld	d, a
      0016A3 1A                    5472 	ld	a, (de)
      0016A4 C6 08                 5473 	add	a, #0x08
      0016A6 5F                    5474 	ld	e, a
      0016A7 0A                    5475 	ld	a, (bc)
      0016A8 C6 08                 5476 	add	a, #0x08
      0016AA 77                    5477 	ld	(hl), a
      0016AB F8 0A                 5478 	ldhl	sp,	#10
      0016AD 56                    5479 	ld	d, (hl)
                                   5480 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0016AE 6A                    5481 	ld	l, d
                                   5482 ;	spillPairReg hl
                                   5483 ;	spillPairReg hl
      0016AF 26 00                 5484 	ld	h, #0x00
                                   5485 ;	spillPairReg hl
                                   5486 ;	spillPairReg hl
      0016B1 29                    5487 	add	hl, hl
      0016B2 29                    5488 	add	hl, hl
      0016B3 D5                    5489 	push	de
      0016B4 11r00r00              5490 	ld	de, #_shadow_OAM
      0016B7 19                    5491 	add	hl, de
      0016B8 D1                    5492 	pop	de
                                   5493 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016B9 7B                    5494 	ld	a, e
      0016BA 22                    5495 	ld	(hl+), a
      0016BB 5D                    5496 	ld	e, l
      0016BC 54                    5497 	ld	d, h
      0016BD F8 0E                 5498 	ldhl	sp,	#14
                                   5499 ;src/main.c:526: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0016BF 3A                    5500 	ld	a, (hl-)
      0016C0 2B                    5501 	dec	hl
      0016C1 12                    5502 	ld	(de), a
      0016C2 2A                    5503 	ld	a, (hl+)
      0016C3 5F                    5504 	ld	e, a
      0016C4 3A                    5505 	ld	a, (hl-)
      0016C5 2B                    5506 	dec	hl
      0016C6 57                    5507 	ld	d, a
      0016C7 1A                    5508 	ld	a, (de)
      0016C8 C6 08                 5509 	add	a, #0x08
      0016CA 57                    5510 	ld	d, a
      0016CB 0A                    5511 	ld	a, (bc)
      0016CC 5F                    5512 	ld	e, a
                                   5513 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0016CD 6E                    5514 	ld	l, (hl)
                                   5515 ;	spillPairReg hl
                                   5516 ;	spillPairReg hl
      0016CE 26 00                 5517 	ld	h, #0x00
                                   5518 ;	spillPairReg hl
                                   5519 ;	spillPairReg hl
      0016D0 29                    5520 	add	hl, hl
      0016D1 29                    5521 	add	hl, hl
      0016D2 01r00r00              5522 	ld	bc, #_shadow_OAM
      0016D5 09                    5523 	add	hl, bc
                                   5524 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016D6 7A                    5525 	ld	a, d
      0016D7 22                    5526 	ld	(hl+), a
      0016D8 73                    5527 	ld	(hl), e
                                   5528 ;src/main.c:526: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0016D9                       5529 00199$:
                                   5530 ;src/main.c:479: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0016D9 F8 0F                 5531 	ldhl	sp,	#15
      0016DB 34                    5532 	inc	(hl)
      0016DC C3r34r13              5533 	jp	00198$
      0016DF                       5534 00200$:
                                   5535 ;src/main.c:532: }
      0016DF E8 10                 5536 	add	sp, #16
      0016E1 C9                    5537 	ret
                                   5538 ;src/main.c:537: void move() {
                                   5539 ;	---------------------------------
                                   5540 ; Function move
                                   5541 ; ---------------------------------
      0016E2                       5542 _move::
      0016E2 E8 F8                 5543 	add	sp, #-8
                                   5544 ;src/main.c:541: if (joydata & J_A) {
      0016E4 FArDCr00              5545 	ld	a, (#_joydata)
      0016E7 CB 67                 5546 	bit	4, a
      0016E9 28 16                 5547 	jr	Z, 00102$
                                   5548 ;src/main.c:542: xSpeed += xDir + xDir + xDir;
      0016EB 21r94r00              5549 	ld	hl, #_xDir
      0016EE 7E                    5550 	ld	a, (hl)
      0016EF 87                    5551 	add	a, a
      0016F0 86                    5552 	add	a, (hl)
      0016F1 21r96r00              5553 	ld	hl, #_xSpeed
      0016F4 86                    5554 	add	a, (hl)
      0016F5 77                    5555 	ld	(hl), a
                                   5556 ;src/main.c:543: ySpeed += yDir + yDir + yDir;
      0016F6 21r95r00              5557 	ld	hl, #_yDir
      0016F9 7E                    5558 	ld	a, (hl)
      0016FA 87                    5559 	add	a, a
      0016FB 86                    5560 	add	a, (hl)
      0016FC 21r97r00              5561 	ld	hl, #_ySpeed
      0016FF 86                    5562 	add	a, (hl)
      001700 77                    5563 	ld	(hl), a
      001701                       5564 00102$:
                                   5565 ;src/main.c:547: xSpeed = clamp(xSpeed, -100, 100);
      001701 21r96r00              5566 	ld	hl, #_xSpeed
      001704 4E                    5567 	ld	c, (hl)
                                   5568 ;src/main.c:305: return (value < min) ? min : (value > max) ? max : value;
      001705 79                    5569 	ld	a, c
      001706 EE 80                 5570 	xor	a, #0x80
      001708 D6 1C                 5571 	sub	a, #0x1c
      00170A 30 04                 5572 	jr	NC, 00165$
      00170C 0E 9C                 5573 	ld	c, #0x9c
      00170E 18 19                 5574 	jr	00166$
      001710                       5575 00165$:
      001710 59                    5576 	ld	e, c
      001711 3E 64                 5577 	ld	a,#0x64
      001713 57                    5578 	ld	d,a
      001714 91                    5579 	sub	a, c
      001715 CB 7B                 5580 	bit	7, e
      001717 28 07                 5581 	jr	Z, 00342$
      001719 CB 7A                 5582 	bit	7, d
      00171B 20 08                 5583 	jr	NZ, 00343$
      00171D BF                    5584 	cp	a, a
      00171E 18 05                 5585 	jr	00343$
      001720                       5586 00342$:
      001720 CB 7A                 5587 	bit	7, d
      001722 28 01                 5588 	jr	Z, 00343$
      001724 37                    5589 	scf
      001725                       5590 00343$:
      001725 30 02                 5591 	jr	NC, 00167$
      001727 0E 64                 5592 	ld	c, #0x64
      001729                       5593 00167$:
      001729                       5594 00166$:
      001729 21r96r00              5595 	ld	hl, #_xSpeed
      00172C 71                    5596 	ld	(hl), c
                                   5597 ;src/main.c:548: ySpeed = clamp(ySpeed, -100, 100);
      00172D 21r97r00              5598 	ld	hl, #_ySpeed
      001730 4E                    5599 	ld	c, (hl)
                                   5600 ;src/main.c:305: return (value < min) ? min : (value > max) ? max : value;
      001731 79                    5601 	ld	a, c
      001732 EE 80                 5602 	xor	a, #0x80
      001734 D6 1C                 5603 	sub	a, #0x1c
      001736 30 04                 5604 	jr	NC, 00169$
      001738 0E 9C                 5605 	ld	c, #0x9c
      00173A 18 19                 5606 	jr	00170$
      00173C                       5607 00169$:
      00173C 59                    5608 	ld	e, c
      00173D 3E 64                 5609 	ld	a,#0x64
      00173F 57                    5610 	ld	d,a
      001740 91                    5611 	sub	a, c
      001741 CB 7B                 5612 	bit	7, e
      001743 28 07                 5613 	jr	Z, 00344$
      001745 CB 7A                 5614 	bit	7, d
      001747 20 08                 5615 	jr	NZ, 00345$
      001749 BF                    5616 	cp	a, a
      00174A 18 05                 5617 	jr	00345$
      00174C                       5618 00344$:
      00174C CB 7A                 5619 	bit	7, d
      00174E 28 01                 5620 	jr	Z, 00345$
      001750 37                    5621 	scf
      001751                       5622 00345$:
      001751 30 02                 5623 	jr	NC, 00171$
      001753 0E 64                 5624 	ld	c, #0x64
      001755                       5625 00171$:
      001755                       5626 00170$:
      001755 21r97r00              5627 	ld	hl, #_ySpeed
      001758 71                    5628 	ld	(hl), c
                                   5629 ;src/main.c:550: xOverflow = 0;
      001759 AF                    5630 	xor	a, a
      00175A 21rA2r00              5631 	ld	hl, #_xOverflow
      00175D 22                    5632 	ld	(hl+), a
      00175E 77                    5633 	ld	(hl), a
                                   5634 ;src/main.c:551: yOverflow = 0;
      00175F AF                    5635 	xor	a, a
      001760 21rA4r00              5636 	ld	hl, #_yOverflow
      001763 22                    5637 	ld	(hl+), a
      001764 77                    5638 	ld	(hl), a
                                   5639 ;src/main.c:556: uint8_t xCollisionPoint = playerDrawX; 
      001765 21r9Cr00              5640 	ld	hl, #_playerDrawX
      001768 4E                    5641 	ld	c, (hl)
                                   5642 ;src/main.c:559: xCollisionPoint = playerDrawX +8; //right edge
      001769 46                    5643 	ld	b, (hl)
                                   5644 ;src/main.c:558: if (xSpeed > 0) {
      00176A 21r96r00              5645 	ld	hl, #_xSpeed
      00176D 5E                    5646 	ld	e, (hl)
      00176E AF                    5647 	xor	a, a
      00176F 57                    5648 	ld	d, a
      001770 96                    5649 	sub	a, (hl)
      001771 CB 7B                 5650 	bit	7, e
      001773 28 07                 5651 	jr	Z, 00346$
      001775 CB 7A                 5652 	bit	7, d
      001777 20 08                 5653 	jr	NZ, 00347$
      001779 BF                    5654 	cp	a, a
      00177A 18 05                 5655 	jr	00347$
      00177C                       5656 00346$:
      00177C CB 7A                 5657 	bit	7, d
      00177E 28 01                 5658 	jr	Z, 00347$
      001780 37                    5659 	scf
      001781                       5660 00347$:
      001781 30 04                 5661 	jr	NC, 00104$
                                   5662 ;src/main.c:559: xCollisionPoint = playerDrawX +8; //right edge
      001783 78                    5663 	ld	a, b
      001784 C6 08                 5664 	add	a, #0x08
      001786 4F                    5665 	ld	c, a
      001787                       5666 00104$:
                                   5667 ;src/main.c:561: if (xSpeed < 0) {
      001787 FAr96r00              5668 	ld	a, (#_xSpeed)
      00178A CB 7F                 5669 	bit	7, a
      00178C 28 04                 5670 	jr	Z, 00106$
                                   5671 ;src/main.c:562: xCollisionPoint = playerDrawX -8; //left edge
      00178E 78                    5672 	ld	a, b
      00178F C6 F8                 5673 	add	a, #0xf8
      001791 4F                    5674 	ld	c, a
      001792                       5675 00106$:
                                   5676 ;src/main.c:566: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001792 06 00                 5677 	ld	b, #0x00
      001794 79                    5678 	ld	a, c
      001795 21r9Er00              5679 	ld	hl, #_bgX
      001798 86                    5680 	add	a, (hl)
      001799 23                    5681 	inc	hl
      00179A 4F                    5682 	ld	c, a
      00179B 78                    5683 	ld	a, b
      00179C 8E                    5684 	adc	a, (hl)
      00179D 47                    5685 	ld	b, a
      00179E CB 28                 5686 	sra	b
      0017A0 CB 19                 5687 	rr	c
      0017A2 CB 28                 5688 	sra	b
      0017A4 CB 19                 5689 	rr	c
      0017A6 CB 28                 5690 	sra	b
      0017A8 CB 19                 5691 	rr	c
      0017AA 11 20 00              5692 	ld	de, #0x0020
      0017AD D5                    5693 	push	de
      0017AE C5                    5694 	push	bc
      0017AF CDr00r00              5695 	call	__modsint
      0017B2 E8 04                 5696 	add	sp, #4
                                   5697 ;src/main.c:570: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      0017B4 21r9Dr00              5698 	ld	hl, #_playerDrawY
      0017B7 4E                    5699 	ld	c, (hl)
      0017B8 06 00                 5700 	ld	b, #0x00
      0017BA 79                    5701 	ld	a, c
      0017BB 21rA0r00              5702 	ld	hl, #_bgY
      0017BE 86                    5703 	add	a, (hl)
      0017BF 23                    5704 	inc	hl
      0017C0 4F                    5705 	ld	c, a
      0017C1 78                    5706 	ld	a, b
      0017C2 8E                    5707 	adc	a, (hl)
      0017C3 47                    5708 	ld	b, a
      0017C4 CB 28                 5709 	sra	b
      0017C6 CB 19                 5710 	rr	c
      0017C8 CB 28                 5711 	sra	b
      0017CA CB 19                 5712 	rr	c
      0017CC CB 28                 5713 	sra	b
      0017CE CB 19                 5714 	rr	c
      0017D0 D5                    5715 	push	de
      0017D1 21 20 00              5716 	ld	hl, #0x0020
      0017D4 E5                    5717 	push	hl
      0017D5 C5                    5718 	push	bc
      0017D6 CDr00r00              5719 	call	__modsint
      0017D9 E8 04                 5720 	add	sp, #4
      0017DB 6B                    5721 	ld	l, e
                                   5722 ;	spillPairReg hl
                                   5723 ;	spillPairReg hl
                                   5724 ;	spillPairReg hl
                                   5725 ;	spillPairReg hl
      0017DC D1                    5726 	pop	de
                                   5727 ;src/main.c:573: uint16_t ind = 32*bgindY + bgindX;
      0017DD 26 00                 5728 	ld	h, #0x00
                                   5729 ;	spillPairReg hl
                                   5730 ;	spillPairReg hl
      0017DF 29                    5731 	add	hl, hl
      0017E0 29                    5732 	add	hl, hl
      0017E1 29                    5733 	add	hl, hl
      0017E2 29                    5734 	add	hl, hl
      0017E3 29                    5735 	add	hl, hl
      0017E4 19                    5736 	add	hl, de
      0017E5 5D                    5737 	ld	e, l
      0017E6 54                    5738 	ld	d, h
                                   5739 ;src/main.c:574: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      0017E7 0E 01                 5740 	ld	c, #0x01
                                   5741 ;src/main.c:575: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017E9 21r87r00              5742 	ld	hl, #_background1
      0017EC 19                    5743 	add	hl, de
      0017ED 46                    5744 	ld	b, (hl)
      0017EE 1E 00                 5745 	ld	e, #0x00
      0017F0                       5746 00158$:
      0017F0 FAr48r08              5747 	ld	a, (#_BLANKSIZE)
      0017F3 F8 02                 5748 	ldhl	sp,	#2
      0017F5 77                    5749 	ld	(hl), a
      0017F6 7B                    5750 	ld	a, e
      0017F7 96                    5751 	sub	a, (hl)
      0017F8 30 11                 5752 	jr	NC, 00109$
                                   5753 ;src/main.c:576: if (background1[ind] == BLANK[i] ) {
      0017FA 21r49r08              5754 	ld	hl, #_BLANK
      0017FD 16 00                 5755 	ld	d, #0x00
      0017FF 19                    5756 	add	hl, de
      001800 56                    5757 	ld	d, (hl)
      001801 78                    5758 	ld	a, b
                                   5759 ;src/main.c:577: result = 0;
      001802 92                    5760 	sub	a,d
      001803 20 03                 5761 	jr	NZ, 00159$
      001805 4F                    5762 	ld	c,a
                                   5763 ;src/main.c:578: break;
      001806 18 03                 5764 	jr	00109$
      001808                       5765 00159$:
                                   5766 ;src/main.c:575: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001808 1C                    5767 	inc	e
      001809 18 E5                 5768 	jr	00158$
      00180B                       5769 00109$:
                                   5770 ;src/main.c:582: if (result == 0) {
      00180B 79                    5771 	ld	a, c
      00180C B7                    5772 	or	a, a
      00180D C2rDBr18              5773 	jp	NZ, 00114$
                                   5774 ;src/main.c:583: playerX+=xSpeed;
      001810 FAr96r00              5775 	ld	a, (#_xSpeed)
      001813 4F                    5776 	ld	c, a
      001814 07                    5777 	rlca
      001815 9F                    5778 	sbc	a, a
      001816 47                    5779 	ld	b, a
      001817 21r98r00              5780 	ld	hl, #_playerX
      00181A 6E                    5781 	ld	l, (hl)
                                   5782 ;	spillPairReg hl
                                   5783 ;	spillPairReg hl
      00181B FAr99r00              5784 	ld	a, (_playerX + 1)
      00181E 67                    5785 	ld	h, a
                                   5786 ;	spillPairReg hl
                                   5787 ;	spillPairReg hl
      00181F 09                    5788 	add	hl, bc
      001820 4D                    5789 	ld	c, l
      001821 44                    5790 	ld	b, h
      001822 21r98r00              5791 	ld	hl, #_playerX
      001825 79                    5792 	ld	a, c
      001826 22                    5793 	ld	(hl+), a
                                   5794 ;src/main.c:585: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001827 78                    5795 	ld	a, b
      001828 32                    5796 	ld	(hl-), a
      001829 2A                    5797 	ld	a, (hl+)
      00182A 4F                    5798 	ld	c, a
      00182B 46                    5799 	ld	b, (hl)
      00182C 79                    5800 	ld	a, c
      00182D D6 80                 5801 	sub	a, #0x80
      00182F 78                    5802 	ld	a, b
      001830 DE 08                 5803 	sbc	a, #0x08
      001832 30 05                 5804 	jr	NC, 00173$
      001834 01 80 08              5805 	ld	bc, #0x0880
      001837 18 0B                 5806 	jr	00174$
      001839                       5807 00173$:
      001839 3E 80                 5808 	ld	a, #0x80
      00183B B9                    5809 	cp	a, c
      00183C 3E 0B                 5810 	ld	a, #0x0b
      00183E 98                    5811 	sbc	a, b
      00183F 30 03                 5812 	jr	NC, 00175$
      001841 01 80 0B              5813 	ld	bc, #0x0b80
      001844                       5814 00175$:
      001844                       5815 00174$:
      001844 59                    5816 	ld	e,c
      001845 50                    5817 	ld	d,b
                                   5818 ;src/main.c:587: xOverflow = (playerX - limitedPlayerX);
      001846 FAr98r00              5819 	ld	a, (#_playerX)
      001849 93                    5820 	sub	a, e
      00184A EArA2r00              5821 	ld	(#_xOverflow),a
      00184D FAr99r00              5822 	ld	a, (#_playerX + 1)
      001850 9A                    5823 	sbc	a, d
      001851 21rA3r00              5824 	ld	hl, #_xOverflow + 1
                                   5825 ;src/main.c:588: if (xOverflow >= 0) {
      001854 32                    5826 	ld	(hl-), a
      001855 6E                    5827 	ld	l, (hl)
                                   5828 ;	spillPairReg hl
                                   5829 ;	spillPairReg hl
      001856 FArA3r00              5830 	ld	a, (_xOverflow + 1)
                                   5831 ;	spillPairReg hl
                                   5832 ;	spillPairReg hl
      001859 CB 7F                 5833 	bit	7,a
      00185B 20 22                 5834 	jr	NZ, 00111$
                                   5835 ;src/main.c:589: xOverflow = xOverflow >> 5;
      00185D 21rA3r00              5836 	ld	hl, #_xOverflow + 1
      001860 CB 2E                 5837 	sra	(hl)
      001862 2B                    5838 	dec	hl
      001863 CB 1E                 5839 	rr	(hl)
      001865 23                    5840 	inc	hl
      001866 CB 2E                 5841 	sra	(hl)
      001868 2B                    5842 	dec	hl
      001869 CB 1E                 5843 	rr	(hl)
      00186B 23                    5844 	inc	hl
      00186C CB 2E                 5845 	sra	(hl)
      00186E 2B                    5846 	dec	hl
      00186F CB 1E                 5847 	rr	(hl)
      001871 23                    5848 	inc	hl
      001872 CB 2E                 5849 	sra	(hl)
      001874 2B                    5850 	dec	hl
      001875 CB 1E                 5851 	rr	(hl)
      001877 23                    5852 	inc	hl
      001878 CB 2E                 5853 	sra	(hl)
      00187A 2B                    5854 	dec	hl
      00187B CB 1E                 5855 	rr	(hl)
      00187D 18 25                 5856 	jr	00112$
      00187F                       5857 00111$:
                                   5858 ;src/main.c:592: xOverflow = -((-xOverflow) >> 5);
      00187F AF                    5859 	xor	a, a
      001880 21rA2r00              5860 	ld	hl, #_xOverflow
      001883 96                    5861 	sub	a, (hl)
      001884 23                    5862 	inc	hl
      001885 5F                    5863 	ld	e, a
      001886 9F                    5864 	sbc	a, a
      001887 96                    5865 	sub	a, (hl)
      001888 2B                    5866 	dec	hl
      001889 57                    5867 	ld	d, a
      00188A CB 2A                 5868 	sra	d
      00188C CB 1B                 5869 	rr	e
      00188E CB 2A                 5870 	sra	d
      001890 CB 1B                 5871 	rr	e
      001892 CB 2A                 5872 	sra	d
      001894 CB 1B                 5873 	rr	e
      001896 CB 2A                 5874 	sra	d
      001898 CB 1B                 5875 	rr	e
      00189A CB 2A                 5876 	sra	d
      00189C CB 1B                 5877 	rr	e
      00189E AF                    5878 	xor	a, a
      00189F 93                    5879 	sub	a, e
      0018A0 22                    5880 	ld	(hl+), a
      0018A1 9F                    5881 	sbc	a, a
      0018A2 92                    5882 	sub	a, d
      0018A3 77                    5883 	ld	(hl), a
      0018A4                       5884 00112$:
                                   5885 ;src/main.c:594: bgX += xOverflow;
      0018A4 FAr9Er00              5886 	ld	a, (#_bgX)
      0018A7 21rA2r00              5887 	ld	hl, #_xOverflow
      0018AA 86                    5888 	add	a, (hl)
      0018AB 21r9Er00              5889 	ld	hl, #_bgX
      0018AE 22                    5890 	ld	(hl+), a
      0018AF 7E                    5891 	ld	a, (hl)
      0018B0 21rA3r00              5892 	ld	hl, #_xOverflow + 1
      0018B3 8E                    5893 	adc	a, (hl)
      0018B4 EAr9Fr00              5894 	ld	(#_bgX + 1),a
                                   5895 ;src/main.c:595: playerX = limitedPlayerX;
      0018B7 21r98r00              5896 	ld	hl, #_playerX
      0018BA 79                    5897 	ld	a, c
      0018BB 22                    5898 	ld	(hl+), a
                                   5899 ;src/main.c:596: playerDrawX=playerX >> 5;
      0018BC 78                    5900 	ld	a, b
      0018BD 32                    5901 	ld	(hl-), a
      0018BE 2A                    5902 	ld	a, (hl+)
      0018BF 4F                    5903 	ld	c, a
      0018C0 46                    5904 	ld	b, (hl)
      0018C1 CB 38                 5905 	srl	b
      0018C3 CB 19                 5906 	rr	c
      0018C5 CB 38                 5907 	srl	b
      0018C7 CB 19                 5908 	rr	c
      0018C9 CB 38                 5909 	srl	b
      0018CB CB 19                 5910 	rr	c
      0018CD CB 38                 5911 	srl	b
      0018CF CB 19                 5912 	rr	c
      0018D1 CB 38                 5913 	srl	b
      0018D3 CB 19                 5914 	rr	c
      0018D5 21r9Cr00              5915 	ld	hl, #_playerDrawX
      0018D8 71                    5916 	ld	(hl), c
      0018D9 18 05                 5917 	jr	00115$
      0018DB                       5918 00114$:
                                   5919 ;src/main.c:604: xSpeed = 0;
      0018DB 21r96r00              5920 	ld	hl, #_xSpeed
      0018DE 36 00                 5921 	ld	(hl), #0x00
      0018E0                       5922 00115$:
                                   5923 ;src/main.c:612: uint8_t yCollisionPoint = playerDrawY; 
      0018E0 FAr9Dr00              5924 	ld	a, (#_playerDrawY)
      0018E3 F8 07                 5925 	ldhl	sp,	#7
      0018E5 77                    5926 	ld	(hl), a
                                   5927 ;src/main.c:615: yCollisionPoint = playerDrawY +8; //bottom edge
      0018E6 21r9Dr00              5928 	ld	hl, #_playerDrawY
      0018E9 4E                    5929 	ld	c, (hl)
                                   5930 ;src/main.c:614: if (ySpeed > 0) {
      0018EA 21r97r00              5931 	ld	hl, #_ySpeed
      0018ED 5E                    5932 	ld	e, (hl)
      0018EE AF                    5933 	xor	a, a
      0018EF 57                    5934 	ld	d, a
      0018F0 96                    5935 	sub	a, (hl)
      0018F1 CB 7B                 5936 	bit	7, e
      0018F3 28 07                 5937 	jr	Z, 00350$
      0018F5 CB 7A                 5938 	bit	7, d
      0018F7 20 08                 5939 	jr	NZ, 00351$
      0018F9 BF                    5940 	cp	a, a
      0018FA 18 05                 5941 	jr	00351$
      0018FC                       5942 00350$:
      0018FC CB 7A                 5943 	bit	7, d
      0018FE 28 01                 5944 	jr	Z, 00351$
      001900 37                    5945 	scf
      001901                       5946 00351$:
      001901 30 06                 5947 	jr	NC, 00117$
                                   5948 ;src/main.c:615: yCollisionPoint = playerDrawY +8; //bottom edge
      001903 79                    5949 	ld	a, c
      001904 C6 08                 5950 	add	a, #0x08
      001906 F8 07                 5951 	ldhl	sp,	#7
      001908 77                    5952 	ld	(hl), a
      001909                       5953 00117$:
                                   5954 ;src/main.c:617: if (ySpeed < 0) {
      001909 FAr97r00              5955 	ld	a, (#_ySpeed)
      00190C CB 7F                 5956 	bit	7, a
      00190E 28 06                 5957 	jr	Z, 00119$
                                   5958 ;src/main.c:618: yCollisionPoint = playerDrawY -8; //top edge, 
      001910 79                    5959 	ld	a, c
      001911 C6 F8                 5960 	add	a, #0xf8
      001913 F8 07                 5961 	ldhl	sp,	#7
      001915 77                    5962 	ld	(hl), a
      001916                       5963 00119$:
                                   5964 ;src/main.c:622: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001916 FAr9Cr00              5965 	ld	a, (#_playerDrawX)
      001919 0E 00                 5966 	ld	c, #0x00
      00191B F8 03                 5967 	ldhl	sp,	#3
      00191D 22                    5968 	ld	(hl+), a
      00191E 79                    5969 	ld	a, c
      00191F 32                    5970 	ld	(hl-), a
      001920 2A                    5971 	ld	a, (hl+)
      001921 5F                    5972 	ld	e, a
      001922 56                    5973 	ld	d, (hl)
      001923 21r9Er00              5974 	ld	hl, #_bgX
      001926 2A                    5975 	ld	a,	(hl+)
      001927 66                    5976 	ld	h, (hl)
      001928 6F                    5977 	ld	l, a
      001929 19                    5978 	add	hl, de
      00192A E5                    5979 	push	hl
      00192B 7D                    5980 	ld	a, l
      00192C F8 07                 5981 	ldhl	sp,	#7
      00192E 77                    5982 	ld	(hl), a
      00192F E1                    5983 	pop	hl
      001930 7C                    5984 	ld	a, h
      001931 F8 06                 5985 	ldhl	sp,	#6
      001933 77                    5986 	ld	(hl), a
      001934 CB 2E                 5987 	sra	(hl)
      001936 2B                    5988 	dec	hl
      001937 CB 1E                 5989 	rr	(hl)
      001939 23                    5990 	inc	hl
      00193A CB 2E                 5991 	sra	(hl)
      00193C 2B                    5992 	dec	hl
      00193D CB 1E                 5993 	rr	(hl)
      00193F 23                    5994 	inc	hl
      001940 CB 2E                 5995 	sra	(hl)
      001942 2B                    5996 	dec	hl
      001943 CB 1E                 5997 	rr	(hl)
      001945 11 20 00              5998 	ld	de, #0x0020
      001948 D5                    5999 	push	de
      001949 2A                    6000 	ld	a, (hl+)
      00194A 5F                    6001 	ld	e, a
      00194B 56                    6002 	ld	d, (hl)
      00194C D5                    6003 	push	de
      00194D CDr00r00              6004 	call	__modsint
      001950 E8 04                 6005 	add	sp, #4
      001952 F8 05                 6006 	ldhl	sp,	#5
      001954 7B                    6007 	ld	a, e
      001955 22                    6008 	ld	(hl+), a
      001956 72                    6009 	ld	(hl), d
      001957 F8 05                 6010 	ldhl	sp,	#5
      001959 7E                    6011 	ld	a, (hl)
      00195A F8 00                 6012 	ldhl	sp,	#0
      00195C 77                    6013 	ld	(hl), a
      00195D F8 06                 6014 	ldhl	sp,	#6
      00195F 7E                    6015 	ld	a, (hl)
      001960 F8 01                 6016 	ldhl	sp,	#1
      001962 77                    6017 	ld	(hl), a
                                   6018 ;src/main.c:625: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001963 F8 07                 6019 	ldhl	sp,	#7
      001965 3A                    6020 	ld	a, (hl-)
      001966 22                    6021 	ld	(hl+), a
      001967 AF                    6022 	xor	a, a
      001968 32                    6023 	ld	(hl-), a
      001969 3A                    6024 	ld	a, (hl-)
      00196A 2B                    6025 	dec	hl
      00196B 77                    6026 	ld	(hl), a
      00196C F8 07                 6027 	ldhl	sp,	#7
      00196E 3A                    6028 	ld	a, (hl-)
      00196F 2B                    6029 	dec	hl
      001970 32                    6030 	ld	(hl-), a
      001971 2A                    6031 	ld	a, (hl+)
      001972 5F                    6032 	ld	e, a
      001973 56                    6033 	ld	d, (hl)
      001974 21rA0r00              6034 	ld	hl, #_bgY
      001977 2A                    6035 	ld	a,	(hl+)
      001978 66                    6036 	ld	h, (hl)
      001979 6F                    6037 	ld	l, a
      00197A 19                    6038 	add	hl, de
      00197B E5                    6039 	push	hl
      00197C 7D                    6040 	ld	a, l
      00197D F8 08                 6041 	ldhl	sp,	#8
      00197F 77                    6042 	ld	(hl), a
      001980 E1                    6043 	pop	hl
      001981 7C                    6044 	ld	a, h
      001982 F8 07                 6045 	ldhl	sp,	#7
      001984 77                    6046 	ld	(hl), a
      001985 CB 2E                 6047 	sra	(hl)
      001987 2B                    6048 	dec	hl
      001988 CB 1E                 6049 	rr	(hl)
      00198A 23                    6050 	inc	hl
      00198B CB 2E                 6051 	sra	(hl)
      00198D 2B                    6052 	dec	hl
      00198E CB 1E                 6053 	rr	(hl)
      001990 23                    6054 	inc	hl
      001991 CB 2E                 6055 	sra	(hl)
      001993 2B                    6056 	dec	hl
      001994 CB 1E                 6057 	rr	(hl)
      001996 11 20 00              6058 	ld	de, #0x0020
      001999 D5                    6059 	push	de
      00199A 2A                    6060 	ld	a, (hl+)
      00199B 5F                    6061 	ld	e, a
      00199C 56                    6062 	ld	d, (hl)
      00199D D5                    6063 	push	de
      00199E CDr00r00              6064 	call	__modsint
      0019A1 E8 04                 6065 	add	sp, #4
      0019A3 F8 06                 6066 	ldhl	sp,	#6
      0019A5 7B                    6067 	ld	a, e
      0019A6 22                    6068 	ld	(hl+), a
      0019A7 72                    6069 	ld	(hl), d
      0019A8 F8 06                 6070 	ldhl	sp,	#6
      0019AA 2A                    6071 	ld	a, (hl+)
      0019AB 77                    6072 	ld	(hl), a
                                   6073 ;src/main.c:628: ind = 32*bgindY + bgindX;
      0019AC 3A                    6074 	ld	a, (hl-)
      0019AD 22                    6075 	ld	(hl+), a
      0019AE 36 00                 6076 	ld	(hl), #0x00
      0019B0 3E 05                 6077 	ld	a, #0x05
      0019B2                       6078 00352$:
      0019B2 F8 06                 6079 	ldhl	sp,	#6
      0019B4 CB 26                 6080 	sla	(hl)
      0019B6 23                    6081 	inc	hl
      0019B7 CB 16                 6082 	rl	(hl)
      0019B9 3D                    6083 	dec	a
      0019BA 20 F6                 6084 	jr	NZ, 00352$
      0019BC 2B                    6085 	dec	hl
      0019BD 3A                    6086 	ld	a, (hl-)
      0019BE 2B                    6087 	dec	hl
      0019BF 77                    6088 	ld	(hl), a
      0019C0 F8 07                 6089 	ldhl	sp,	#7
      0019C2 3A                    6090 	ld	a, (hl-)
      0019C3 2B                    6091 	dec	hl
      0019C4 77                    6092 	ld	(hl), a
      0019C5 D1                    6093 	pop	de
      0019C6 D5                    6094 	push	de
      0019C7 3A                    6095 	ld	a, (hl-)
      0019C8 6E                    6096 	ld	l, (hl)
      0019C9 67                    6097 	ld	h, a
      0019CA 19                    6098 	add	hl, de
      0019CB E5                    6099 	push	hl
      0019CC 7D                    6100 	ld	a, l
      0019CD F8 08                 6101 	ldhl	sp,	#8
      0019CF 77                    6102 	ld	(hl), a
      0019D0 E1                    6103 	pop	hl
      0019D1 7C                    6104 	ld	a, h
      0019D2 F8 07                 6105 	ldhl	sp,	#7
      0019D4 77                    6106 	ld	(hl), a
                                   6107 ;src/main.c:629: result = 1;
      0019D5 F8 03                 6108 	ldhl	sp,	#3
      0019D7 36 01                 6109 	ld	(hl), #0x01
                                   6110 ;src/main.c:630: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0019D9 F8 06                 6111 	ldhl	sp,#6
      0019DB 2A                    6112 	ld	a, (hl+)
      0019DC 5F                    6113 	ld	e, a
      0019DD 56                    6114 	ld	d, (hl)
      0019DE 21r87r00              6115 	ld	hl, #_background1
      0019E1 19                    6116 	add	hl, de
      0019E2 4D                    6117 	ld	c, l
      0019E3 44                    6118 	ld	b, h
      0019E4 0A                    6119 	ld	a, (bc)
      0019E5 F8 04                 6120 	ldhl	sp,	#4
      0019E7 77                    6121 	ld	(hl), a
      0019E8 F8 07                 6122 	ldhl	sp,	#7
      0019EA 36 00                 6123 	ld	(hl), #0x00
      0019EC                       6124 00161$:
      0019EC F8 07                 6125 	ldhl	sp,	#7
      0019EE 7E                    6126 	ld	a, (hl)
      0019EF F8 02                 6127 	ldhl	sp,	#2
      0019F1 96                    6128 	sub	a, (hl)
      0019F2 30 29                 6129 	jr	NC, 00122$
                                   6130 ;src/main.c:631: if (background1[ind] == BLANK[j] ) {
      0019F4 11r49r08              6131 	ld	de, #_BLANK
      0019F7 F8 07                 6132 	ldhl	sp,	#7
      0019F9 6E                    6133 	ld	l, (hl)
      0019FA 26 00                 6134 	ld	h, #0x00
      0019FC 19                    6135 	add	hl, de
      0019FD E5                    6136 	push	hl
      0019FE 7D                    6137 	ld	a, l
      0019FF F8 07                 6138 	ldhl	sp,	#7
      001A01 77                    6139 	ld	(hl), a
      001A02 E1                    6140 	pop	hl
      001A03 7C                    6141 	ld	a, h
      001A04 F8 06                 6142 	ldhl	sp,	#6
      001A06 32                    6143 	ld	(hl-), a
      001A07 2A                    6144 	ld	a, (hl+)
      001A08 5F                    6145 	ld	e, a
      001A09 3A                    6146 	ld	a, (hl-)
      001A0A 2B                    6147 	dec	hl
      001A0B 57                    6148 	ld	d, a
      001A0C 1A                    6149 	ld	a, (de)
      001A0D 4F                    6150 	ld	c, a
      001A0E 7E                    6151 	ld	a, (hl)
      001A0F 91                    6152 	sub	a, c
      001A10 20 06                 6153 	jr	NZ, 00162$
                                   6154 ;src/main.c:632: result = 0;
      001A12 F8 03                 6155 	ldhl	sp,	#3
      001A14 36 00                 6156 	ld	(hl), #0x00
                                   6157 ;src/main.c:633: break;
      001A16 18 05                 6158 	jr	00122$
      001A18                       6159 00162$:
                                   6160 ;src/main.c:630: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001A18 F8 07                 6161 	ldhl	sp,	#7
      001A1A 34                    6162 	inc	(hl)
      001A1B 18 CF                 6163 	jr	00161$
      001A1D                       6164 00122$:
                                   6165 ;src/main.c:637: if (result == 0) {
      001A1D F8 03                 6166 	ldhl	sp,	#3
      001A1F 7E                    6167 	ld	a, (hl)
      001A20 B7                    6168 	or	a, a
      001A21 C2rEBr1A              6169 	jp	NZ, 00127$
                                   6170 ;src/main.c:638: playerY += ySpeed;
      001A24 FAr97r00              6171 	ld	a, (#_ySpeed)
      001A27 4F                    6172 	ld	c, a
      001A28 07                    6173 	rlca
      001A29 9F                    6174 	sbc	a, a
      001A2A 21r9Ar00              6175 	ld	hl, #_playerY
      001A2D 5E                    6176 	ld	e, (hl)
      001A2E 23                    6177 	inc	hl
      001A2F 56                    6178 	ld	d, (hl)
      001A30 2B                    6179 	dec	hl
      001A31 47                    6180 	ld	b, a
      001A32 79                    6181 	ld	a, c
      001A33 83                    6182 	add	a, e
      001A34 4F                    6183 	ld	c, a
      001A35 78                    6184 	ld	a, b
      001A36 8A                    6185 	adc	a, d
      001A37 47                    6186 	ld	b, a
      001A38 79                    6187 	ld	a, c
      001A39 22                    6188 	ld	(hl+), a
                                   6189 ;src/main.c:640: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001A3A 78                    6190 	ld	a, b
      001A3B 32                    6191 	ld	(hl-), a
      001A3C 2A                    6192 	ld	a, (hl+)
      001A3D 5F                    6193 	ld	e, a
      001A3E 56                    6194 	ld	d, (hl)
      001A3F 7A                    6195 	ld	a, d
      001A40 D6 06                 6196 	sub	a, #0x06
      001A42 30 05                 6197 	jr	NC, 00177$
      001A44 11 00 06              6198 	ld	de, #0x0600
      001A47 18 0B                 6199 	jr	00178$
      001A49                       6200 00177$:
      001A49 3E C0                 6201 	ld	a, #0xc0
      001A4B BB                    6202 	cp	a, e
      001A4C 3E 09                 6203 	ld	a, #0x09
      001A4E 9A                    6204 	sbc	a, d
      001A4F 30 03                 6205 	jr	NC, 00179$
      001A51 11 C0 09              6206 	ld	de, #0x09c0
      001A54                       6207 00179$:
      001A54                       6208 00178$:
      001A54 4B                    6209 	ld	c, e
      001A55 42                    6210 	ld	b, d
                                   6211 ;src/main.c:642: yOverflow = (playerY - limitedPlayerY);
      001A56 FAr9Ar00              6212 	ld	a, (#_playerY)
      001A59 93                    6213 	sub	a, e
      001A5A EArA4r00              6214 	ld	(#_yOverflow),a
      001A5D FAr9Br00              6215 	ld	a, (#_playerY + 1)
      001A60 9A                    6216 	sbc	a, d
      001A61 21rA5r00              6217 	ld	hl, #_yOverflow + 1
                                   6218 ;src/main.c:643: if (yOverflow >= 0) {
      001A64 32                    6219 	ld	(hl-), a
      001A65 6E                    6220 	ld	l, (hl)
                                   6221 ;	spillPairReg hl
                                   6222 ;	spillPairReg hl
      001A66 FArA5r00              6223 	ld	a, (_yOverflow + 1)
                                   6224 ;	spillPairReg hl
                                   6225 ;	spillPairReg hl
      001A69 CB 7F                 6226 	bit	7,a
      001A6B 20 22                 6227 	jr	NZ, 00124$
                                   6228 ;src/main.c:644: yOverflow = yOverflow >> 5;
      001A6D 21rA5r00              6229 	ld	hl, #_yOverflow + 1
      001A70 CB 2E                 6230 	sra	(hl)
      001A72 2B                    6231 	dec	hl
      001A73 CB 1E                 6232 	rr	(hl)
      001A75 23                    6233 	inc	hl
      001A76 CB 2E                 6234 	sra	(hl)
      001A78 2B                    6235 	dec	hl
      001A79 CB 1E                 6236 	rr	(hl)
      001A7B 23                    6237 	inc	hl
      001A7C CB 2E                 6238 	sra	(hl)
      001A7E 2B                    6239 	dec	hl
      001A7F CB 1E                 6240 	rr	(hl)
      001A81 23                    6241 	inc	hl
      001A82 CB 2E                 6242 	sra	(hl)
      001A84 2B                    6243 	dec	hl
      001A85 CB 1E                 6244 	rr	(hl)
      001A87 23                    6245 	inc	hl
      001A88 CB 2E                 6246 	sra	(hl)
      001A8A 2B                    6247 	dec	hl
      001A8B CB 1E                 6248 	rr	(hl)
      001A8D 18 25                 6249 	jr	00125$
      001A8F                       6250 00124$:
                                   6251 ;src/main.c:647: yOverflow = -((-yOverflow) >> 5);
      001A8F AF                    6252 	xor	a, a
      001A90 21rA4r00              6253 	ld	hl, #_yOverflow
      001A93 96                    6254 	sub	a, (hl)
      001A94 23                    6255 	inc	hl
      001A95 5F                    6256 	ld	e, a
      001A96 9F                    6257 	sbc	a, a
      001A97 96                    6258 	sub	a, (hl)
      001A98 2B                    6259 	dec	hl
      001A99 57                    6260 	ld	d, a
      001A9A CB 2A                 6261 	sra	d
      001A9C CB 1B                 6262 	rr	e
      001A9E CB 2A                 6263 	sra	d
      001AA0 CB 1B                 6264 	rr	e
      001AA2 CB 2A                 6265 	sra	d
      001AA4 CB 1B                 6266 	rr	e
      001AA6 CB 2A                 6267 	sra	d
      001AA8 CB 1B                 6268 	rr	e
      001AAA CB 2A                 6269 	sra	d
      001AAC CB 1B                 6270 	rr	e
      001AAE AF                    6271 	xor	a, a
      001AAF 93                    6272 	sub	a, e
      001AB0 22                    6273 	ld	(hl+), a
      001AB1 9F                    6274 	sbc	a, a
      001AB2 92                    6275 	sub	a, d
      001AB3 77                    6276 	ld	(hl), a
      001AB4                       6277 00125$:
                                   6278 ;src/main.c:649: bgY += yOverflow;
      001AB4 FArA0r00              6279 	ld	a, (#_bgY)
      001AB7 21rA4r00              6280 	ld	hl, #_yOverflow
      001ABA 86                    6281 	add	a, (hl)
      001ABB 21rA0r00              6282 	ld	hl, #_bgY
      001ABE 22                    6283 	ld	(hl+), a
      001ABF 7E                    6284 	ld	a, (hl)
      001AC0 21rA5r00              6285 	ld	hl, #_yOverflow + 1
      001AC3 8E                    6286 	adc	a, (hl)
      001AC4 EArA1r00              6287 	ld	(#_bgY + 1),a
                                   6288 ;src/main.c:650: playerY = limitedPlayerY;
      001AC7 21r9Ar00              6289 	ld	hl, #_playerY
      001ACA 79                    6290 	ld	a, c
      001ACB 22                    6291 	ld	(hl+), a
                                   6292 ;src/main.c:651: playerDrawY=playerY >> 5;
      001ACC 78                    6293 	ld	a, b
      001ACD 32                    6294 	ld	(hl-), a
      001ACE 2A                    6295 	ld	a, (hl+)
      001ACF 4F                    6296 	ld	c, a
      001AD0 46                    6297 	ld	b, (hl)
      001AD1 CB 38                 6298 	srl	b
      001AD3 CB 19                 6299 	rr	c
      001AD5 CB 38                 6300 	srl	b
      001AD7 CB 19                 6301 	rr	c
      001AD9 CB 38                 6302 	srl	b
      001ADB CB 19                 6303 	rr	c
      001ADD CB 38                 6304 	srl	b
      001ADF CB 19                 6305 	rr	c
      001AE1 CB 38                 6306 	srl	b
      001AE3 CB 19                 6307 	rr	c
      001AE5 21r9Dr00              6308 	ld	hl, #_playerDrawY
      001AE8 71                    6309 	ld	(hl), c
      001AE9 18 05                 6310 	jr	00128$
      001AEB                       6311 00127$:
                                   6312 ;src/main.c:656: ySpeed = 0;
      001AEB 21r97r00              6313 	ld	hl, #_ySpeed
      001AEE 36 00                 6314 	ld	(hl), #0x00
      001AF0                       6315 00128$:
                                   6316 ;src/main.c:556: uint8_t xCollisionPoint = playerDrawX; 
      001AF0 FAr9Cr00              6317 	ld	a, (#_playerDrawX)
      001AF3 F8 07                 6318 	ldhl	sp,	#7
      001AF5 77                    6319 	ld	(hl), a
                                   6320 ;src/main.c:615: yCollisionPoint = playerDrawY +8; //bottom edge
      001AF6 FAr9Dr00              6321 	ld	a, (#_playerDrawY)
      001AF9 C6 08                 6322 	add	a, #0x08
      001AFB F8 06                 6323 	ldhl	sp,	#6
      001AFD 77                    6324 	ld	(hl), a
                                   6325 ;src/main.c:659: if (xDir >= 0) {
      001AFE FAr94r00              6326 	ld	a, (#_xDir)
      001B01 CB 7F                 6327 	bit	7, a
      001B03 20 2A                 6328 	jr	NZ, 00130$
                                   6329 ;src/main.c:660: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   6330 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6331 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B05 11r00r00              6332 	ld	de, #_shadow_OAM
      001B08 F8 06                 6333 	ldhl	sp,	#6
      001B0A 2A                    6334 	ld	a, (hl+)
      001B0B 12                    6335 	ld	(de), a
      001B0C 11r01r00              6336 	ld	de, #(_shadow_OAM + 1)
      001B0F 7E                    6337 	ld	a, (hl)
      001B10 12                    6338 	ld	(de), a
                                   6339 ;src/main.c:662: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001B11 FAr9Dr00              6340 	ld	a, (#_playerDrawY)
      001B14 F8 07                 6341 	ldhl	sp,	#7
      001B16 77                    6342 	ld	(hl), a
      001B17 3A                    6343 	ld	a, (hl-)
      001B18 C6 08                 6344 	add	a, #0x08
      001B1A 77                    6345 	ld	(hl), a
      001B1B FAr9Cr00              6346 	ld	a, (#_playerDrawX)
      001B1E C6 08                 6347 	add	a, #0x08
      001B20 F8 07                 6348 	ldhl	sp,	#7
                                   6349 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6350 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B22 32                    6351 	ld	(hl-), a
      001B23 11r04r00              6352 	ld	de, #(_shadow_OAM + 4)
      001B26 2A                    6353 	ld	a, (hl+)
      001B27 12                    6354 	ld	(de), a
      001B28 11r05r00              6355 	ld	de, #(_shadow_OAM + 5)
      001B2B 7E                    6356 	ld	a, (hl)
      001B2C 12                    6357 	ld	(de), a
                                   6358 ;src/main.c:662: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001B2D 18 28                 6359 	jr	00131$
      001B2F                       6360 00130$:
                                   6361 ;src/main.c:665: move_sprite(1, playerDrawX , playerDrawY +8);
                                   6362 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001B2F 01r04r00              6363 	ld	bc, #(_shadow_OAM + 4)
                                   6364 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B32 F8 06                 6365 	ldhl	sp,	#6
      001B34 2A                    6366 	ld	a, (hl+)
      001B35 02                    6367 	ld	(bc), a
      001B36 03                    6368 	inc	bc
      001B37 7E                    6369 	ld	a, (hl)
      001B38 02                    6370 	ld	(bc), a
                                   6371 ;src/main.c:667: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B39 FAr9Dr00              6372 	ld	a, (#_playerDrawY)
      001B3C F8 07                 6373 	ldhl	sp,	#7
      001B3E 77                    6374 	ld	(hl), a
      001B3F 3A                    6375 	ld	a, (hl-)
      001B40 C6 08                 6376 	add	a, #0x08
      001B42 77                    6377 	ld	(hl), a
      001B43 FAr9Cr00              6378 	ld	a, (#_playerDrawX)
      001B46 F8 07                 6379 	ldhl	sp,	#7
      001B48 77                    6380 	ld	(hl), a
      001B49 7E                    6381 	ld	a, (hl)
      001B4A C6 08                 6382 	add	a, #0x08
                                   6383 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6384 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B4C 32                    6385 	ld	(hl-), a
      001B4D 11r00r00              6386 	ld	de, #_shadow_OAM
      001B50 2A                    6387 	ld	a, (hl+)
      001B51 12                    6388 	ld	(de), a
      001B52 11r01r00              6389 	ld	de, #(_shadow_OAM + 1)
      001B55 7E                    6390 	ld	a, (hl)
      001B56 12                    6391 	ld	(de), a
                                   6392 ;src/main.c:667: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B57                       6393 00131$:
                                   6394 ;src/main.c:672: if (bgX >= 256) {
      001B57 21r9Er00              6395 	ld	hl, #_bgX
      001B5A 2A                    6396 	ld	a, (hl+)
      001B5B 4F                    6397 	ld	c, a
      001B5C 46                    6398 	ld	b, (hl)
      001B5D 78                    6399 	ld	a, b
      001B5E EE 80                 6400 	xor	a, #0x80
      001B60 D6 81                 6401 	sub	a, #0x81
      001B62 38 0F                 6402 	jr	C, 00133$
                                   6403 ;src/main.c:673: bgX = bgX % 256;
      001B64 AF                    6404 	xor	a, a
      001B65 3C                    6405 	inc	a
      001B66 F5                    6406 	push	af
      001B67 C5                    6407 	push	bc
      001B68 CDr00r00              6408 	call	__modsint
      001B6B E8 04                 6409 	add	sp, #4
      001B6D 21r9Er00              6410 	ld	hl, #_bgX
      001B70 7B                    6411 	ld	a, e
      001B71 22                    6412 	ld	(hl+), a
      001B72 72                    6413 	ld	(hl), d
      001B73                       6414 00133$:
                                   6415 ;src/main.c:675: if (bgX < 0) {
      001B73 21r9Er00              6416 	ld	hl, #_bgX
      001B76 2A                    6417 	ld	a, (hl+)
      001B77 4F                    6418 	ld	c, a
      001B78 46                    6419 	ld	b, (hl)
      001B79 CB 78                 6420 	bit	7, b
      001B7B 28 15                 6421 	jr	Z, 00135$
                                   6422 ;src/main.c:676: bgX = 255 - (bgX % 256);
      001B7D AF                    6423 	xor	a, a
      001B7E 3C                    6424 	inc	a
      001B7F F5                    6425 	push	af
      001B80 C5                    6426 	push	bc
      001B81 CDr00r00              6427 	call	__modsint
      001B84 E8 04                 6428 	add	sp, #4
      001B86 3E FF                 6429 	ld	a, #0xff
      001B88 93                    6430 	sub	a, e
      001B89 4F                    6431 	ld	c, a
      001B8A 9F                    6432 	sbc	a, a
      001B8B 92                    6433 	sub	a, d
      001B8C 21r9Er00              6434 	ld	hl, #_bgX
      001B8F 71                    6435 	ld	(hl), c
      001B90 23                    6436 	inc	hl
      001B91 77                    6437 	ld	(hl), a
      001B92                       6438 00135$:
                                   6439 ;src/main.c:678: if (bgY >= 256) {
      001B92 21rA0r00              6440 	ld	hl, #_bgY
      001B95 2A                    6441 	ld	a, (hl+)
      001B96 4F                    6442 	ld	c, a
      001B97 46                    6443 	ld	b, (hl)
      001B98 78                    6444 	ld	a, b
      001B99 EE 80                 6445 	xor	a, #0x80
      001B9B D6 81                 6446 	sub	a, #0x81
      001B9D 38 0F                 6447 	jr	C, 00137$
                                   6448 ;src/main.c:679: bgY = bgY % 256;
      001B9F AF                    6449 	xor	a, a
      001BA0 3C                    6450 	inc	a
      001BA1 F5                    6451 	push	af
      001BA2 C5                    6452 	push	bc
      001BA3 CDr00r00              6453 	call	__modsint
      001BA6 E8 04                 6454 	add	sp, #4
      001BA8 21rA0r00              6455 	ld	hl, #_bgY
      001BAB 7B                    6456 	ld	a, e
      001BAC 22                    6457 	ld	(hl+), a
      001BAD 72                    6458 	ld	(hl), d
      001BAE                       6459 00137$:
                                   6460 ;src/main.c:681: if (bgY < 0) {
      001BAE 21rA0r00              6461 	ld	hl, #_bgY
      001BB1 2A                    6462 	ld	a, (hl+)
      001BB2 4F                    6463 	ld	c, a
      001BB3 46                    6464 	ld	b, (hl)
      001BB4 CB 78                 6465 	bit	7, b
      001BB6 28 15                 6466 	jr	Z, 00139$
                                   6467 ;src/main.c:682: bgY = 255 - (bgY % 256);
      001BB8 AF                    6468 	xor	a, a
      001BB9 3C                    6469 	inc	a
      001BBA F5                    6470 	push	af
      001BBB C5                    6471 	push	bc
      001BBC CDr00r00              6472 	call	__modsint
      001BBF E8 04                 6473 	add	sp, #4
      001BC1 3E FF                 6474 	ld	a, #0xff
      001BC3 93                    6475 	sub	a, e
      001BC4 4F                    6476 	ld	c, a
      001BC5 9F                    6477 	sbc	a, a
      001BC6 92                    6478 	sub	a, d
      001BC7 21rA0r00              6479 	ld	hl, #_bgY
      001BCA 71                    6480 	ld	(hl), c
      001BCB 23                    6481 	inc	hl
      001BCC 77                    6482 	ld	(hl), a
      001BCD                       6483 00139$:
                                   6484 ;src/main.c:685: move_bkg(bgX, bgY);
      001BCD 21rA0r00              6485 	ld	hl, #_bgY
      001BD0 4E                    6486 	ld	c, (hl)
      001BD1 FAr9Er00              6487 	ld	a, (#_bgX)
      001BD4 E0r00                 6488 	ldh	(_SCX_REG + 0), a
                                   6489 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001BD6 79                    6490 	ld	a, c
      001BD7 E0r00                 6491 	ldh	(_SCY_REG + 0), a
                                   6492 ;src/main.c:688: if (ySpeed > 0) ySpeed--;
      001BD9 21r97r00              6493 	ld	hl, #_ySpeed
      001BDC 5E                    6494 	ld	e, (hl)
      001BDD AF                    6495 	xor	a, a
      001BDE 57                    6496 	ld	d, a
      001BDF 96                    6497 	sub	a, (hl)
      001BE0 CB 7B                 6498 	bit	7, e
      001BE2 28 07                 6499 	jr	Z, 00355$
      001BE4 CB 7A                 6500 	bit	7, d
      001BE6 20 08                 6501 	jr	NZ, 00356$
      001BE8 BF                    6502 	cp	a, a
      001BE9 18 05                 6503 	jr	00356$
      001BEB                       6504 00355$:
      001BEB CB 7A                 6505 	bit	7, d
      001BED 28 01                 6506 	jr	Z, 00356$
      001BEF 37                    6507 	scf
      001BF0                       6508 00356$:
      001BF0 30 04                 6509 	jr	NC, 00141$
      001BF2 21r97r00              6510 	ld	hl, #_ySpeed
      001BF5 35                    6511 	dec	(hl)
      001BF6                       6512 00141$:
                                   6513 ;src/main.c:689: if (ySpeed < 0) ySpeed++;
      001BF6 21r97r00              6514 	ld	hl, #_ySpeed
      001BF9 CB 7E                 6515 	bit	7, (hl)
      001BFB 28 01                 6516 	jr	Z, 00143$
      001BFD 34                    6517 	inc	(hl)
      001BFE                       6518 00143$:
                                   6519 ;src/main.c:690: if (xSpeed > 0) xSpeed--;
      001BFE 21r96r00              6520 	ld	hl, #_xSpeed
      001C01 5E                    6521 	ld	e, (hl)
      001C02 AF                    6522 	xor	a, a
      001C03 57                    6523 	ld	d, a
      001C04 96                    6524 	sub	a, (hl)
      001C05 CB 7B                 6525 	bit	7, e
      001C07 28 07                 6526 	jr	Z, 00357$
      001C09 CB 7A                 6527 	bit	7, d
      001C0B 20 08                 6528 	jr	NZ, 00358$
      001C0D BF                    6529 	cp	a, a
      001C0E 18 05                 6530 	jr	00358$
      001C10                       6531 00357$:
      001C10 CB 7A                 6532 	bit	7, d
      001C12 28 01                 6533 	jr	Z, 00358$
      001C14 37                    6534 	scf
      001C15                       6535 00358$:
      001C15 30 04                 6536 	jr	NC, 00145$
      001C17 21r96r00              6537 	ld	hl, #_xSpeed
      001C1A 35                    6538 	dec	(hl)
      001C1B                       6539 00145$:
                                   6540 ;src/main.c:691: if (xSpeed < 0) xSpeed++;
      001C1B 21r96r00              6541 	ld	hl, #_xSpeed
      001C1E CB 7E                 6542 	bit	7, (hl)
      001C20 28 01                 6543 	jr	Z, 00163$
      001C22 34                    6544 	inc	(hl)
      001C23                       6545 00163$:
                                   6546 ;src/main.c:695: }
      001C23 E8 08                 6547 	add	sp, #8
      001C25 C9                    6548 	ret
                                   6549 ;src/main.c:697: void takeDamage(int16_t amount) {
                                   6550 ;	---------------------------------
                                   6551 ; Function takeDamage
                                   6552 ; ---------------------------------
      001C26                       6553 _takeDamage::
      001C26 3B                    6554 	dec	sp
                                   6555 ;src/main.c:698: if (amount > shield) {
      001C27 FArDEr00              6556 	ld	a, (#_shield)
      001C2A 4F                    6557 	ld	c, a
      001C2B 07                    6558 	rlca
      001C2C 9F                    6559 	sbc	a, a
      001C2D 47                    6560 	ld	b, a
                                   6561 ;src/main.c:700: hull -= (amount - shield);
      001C2E F8 03                 6562 	ldhl	sp,	#3
      001C30 7E                    6563 	ld	a, (hl)
      001C31 F8 00                 6564 	ldhl	sp,	#0
      001C33 77                    6565 	ld	(hl), a
                                   6566 ;src/main.c:698: if (amount > shield) {
      001C34 F8 03                 6567 	ldhl	sp,	#3
      001C36 79                    6568 	ld	a, c
      001C37 96                    6569 	sub	a, (hl)
      001C38 23                    6570 	inc	hl
      001C39 78                    6571 	ld	a, b
      001C3A 9E                    6572 	sbc	a, (hl)
      001C3B 78                    6573 	ld	a, b
      001C3C 57                    6574 	ld	d, a
      001C3D CB 7E                 6575 	bit	7, (hl)
      001C3F 28 07                 6576 	jr	Z, 00111$
      001C41 CB 7A                 6577 	bit	7, d
      001C43 20 08                 6578 	jr	NZ, 00112$
      001C45 BF                    6579 	cp	a, a
      001C46 18 05                 6580 	jr	00112$
      001C48                       6581 00111$:
      001C48 CB 7A                 6582 	bit	7, d
      001C4A 28 01                 6583 	jr	Z, 00112$
      001C4C 37                    6584 	scf
      001C4D                       6585 00112$:
      001C4D 30 10                 6586 	jr	NC, 00102$
                                   6587 ;src/main.c:699: shield = 0;
      001C4F 21rDEr00              6588 	ld	hl, #_shield
      001C52 36 00                 6589 	ld	(hl), #0x00
                                   6590 ;src/main.c:700: hull -= (amount - shield);
      001C54 FArDDr00              6591 	ld	a, (#_hull)
      001C57 F8 00                 6592 	ldhl	sp,	#0
      001C59 96                    6593 	sub	a, (hl)
      001C5A EArDDr00              6594 	ld	(#_hull),a
      001C5D 18 09                 6595 	jr	00104$
      001C5F                       6596 00102$:
                                   6597 ;src/main.c:703: shield -= amount;
      001C5F FArDEr00              6598 	ld	a, (#_shield)
      001C62 F8 00                 6599 	ldhl	sp,	#0
      001C64 96                    6600 	sub	a, (hl)
      001C65 EArDEr00              6601 	ld	(#_shield),a
      001C68                       6602 00104$:
                                   6603 ;src/main.c:705: }
      001C68 33                    6604 	inc	sp
      001C69 C9                    6605 	ret
                                   6606 ;src/main.c:707: void checkCollision() {
                                   6607 ;	---------------------------------
                                   6608 ; Function checkCollision
                                   6609 ; ---------------------------------
      001C6A                       6610 _checkCollision::
      001C6A E8 F1                 6611 	add	sp, #-15
                                   6612 ;src/main.c:714: struct Enemy *eptr = enemies + enemyCollisionCount;
      001C6C 01r50r00              6613 	ld	bc, #_enemies+0
      001C6F 21rA6r00              6614 	ld	hl, #_enemyCollisionCount
      001C72 6E                    6615 	ld	l, (hl)
                                   6616 ;	spillPairReg hl
                                   6617 ;	spillPairReg hl
      001C73 26 00                 6618 	ld	h, #0x00
                                   6619 ;	spillPairReg hl
                                   6620 ;	spillPairReg hl
      001C75 29                    6621 	add	hl, hl
      001C76 29                    6622 	add	hl, hl
      001C77 29                    6623 	add	hl, hl
      001C78 29                    6624 	add	hl, hl
      001C79 09                    6625 	add	hl, bc
      001C7A 4D                    6626 	ld	c, l
      001C7B 7C                    6627 	ld	a, h
      001C7C F8 00                 6628 	ldhl	sp,	#0
      001C7E 71                    6629 	ld	(hl), c
      001C7F 23                    6630 	inc	hl
      001C80 77                    6631 	ld	(hl), a
                                   6632 ;src/main.c:715: uint8_t i = enemyCollisionCount;
      001C81 FArA6r00              6633 	ld	a, (#_enemyCollisionCount)
      001C84 F8 02                 6634 	ldhl	sp,	#2
      001C86 77                    6635 	ld	(hl), a
                                   6636 ;src/main.c:717: if (eptr->visible && eptr->alive) {
      001C87 D1                    6637 	pop	de
      001C88 D5                    6638 	push	de
      001C89 21 0A 00              6639 	ld	hl, #0x000a
      001C8C 19                    6640 	add	hl, de
      001C8D 4D                    6641 	ld	c, l
      001C8E 44                    6642 	ld	b, h
      001C8F 0A                    6643 	ld	a, (bc)
      001C90 B7                    6644 	or	a, a
      001C91 CArA5r1F              6645 	jp	Z, 00127$
      001C94 D1                    6646 	pop	de
      001C95 D5                    6647 	push	de
      001C96 21 09 00              6648 	ld	hl, #0x0009
      001C99 19                    6649 	add	hl, de
      001C9A 4D                    6650 	ld	c, l
      001C9B 44                    6651 	ld	b, h
      001C9C 0A                    6652 	ld	a, (bc)
      001C9D B7                    6653 	or	a, a
      001C9E CArA5r1F              6654 	jp	Z, 00127$
                                   6655 ;src/main.c:719: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001CA1 D1                    6656 	pop	de
      001CA2 D5                    6657 	push	de
      001CA3 21 08 00              6658 	ld	hl, #0x0008
      001CA6 19                    6659 	add	hl, de
      001CA7 4D                    6660 	ld	c, l
      001CA8 44                    6661 	ld	b, h
      001CA9 0A                    6662 	ld	a, (bc)
      001CAA 4F                    6663 	ld	c, a
      001CAB 3D                    6664 	dec	a
      001CAC 3E 01                 6665 	ld	a, #0x01
      001CAE 28 01                 6666 	jr	Z, 00283$
      001CB0 AF                    6667 	xor	a, a
      001CB1                       6668 00283$:
      001CB1 F8 0B                 6669 	ldhl	sp,	#11
      001CB3 77                    6670 	ld	(hl), a
      001CB4 FAr9Cr00              6671 	ld	a, (#_playerDrawX)
      001CB7 F8 0C                 6672 	ldhl	sp,	#12
      001CB9 77                    6673 	ld	(hl), a
                                   6674 ;src/main.c:720: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001CBA 79                    6675 	ld	a, c
      001CBB D6 02                 6676 	sub	a, #0x02
      001CBD 3E 01                 6677 	ld	a, #0x01
      001CBF 28 01                 6678 	jr	Z, 00285$
      001CC1 AF                    6679 	xor	a, a
      001CC2                       6680 00285$:
      001CC2 F8 0D                 6681 	ldhl	sp,	#13
                                   6682 ;src/main.c:719: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001CC4 32                    6683 	ld	(hl-), a
      001CC5 2B                    6684 	dec	hl
      001CC6 7E                    6685 	ld	a, (hl)
      001CC7 B7                    6686 	or	a, a
      001CC8 28 2E                 6687 	jr	Z, 00110$
      001CCA D1                    6688 	pop	de
      001CCB D5                    6689 	push	de
      001CCC 1A                    6690 	ld	a, (de)
      001CCD F8 0E                 6691 	ldhl	sp,	#14
      001CCF 77                    6692 	ld	(hl), a
      001CD0 3A                    6693 	ld	a, (hl-)
      001CD1 2B                    6694 	dec	hl
      001CD2 96                    6695 	sub	a, (hl)
      001CD3 23                    6696 	inc	hl
      001CD4 23                    6697 	inc	hl
      001CD5 77                    6698 	ld	(hl), a
                                   6699 ;src/main.c:324: if (value >= 0) return value;
      001CD6 CB 7E                 6700 	bit	7, (hl)
      001CD8 28 05                 6701 	jr	Z, 00135$
                                   6702 ;src/main.c:325: else return - value;
      001CDA AF                    6703 	xor	a, a
      001CDB F8 0E                 6704 	ldhl	sp,	#14
      001CDD 96                    6705 	sub	a, (hl)
      001CDE 77                    6706 	ld	(hl), a
                                   6707 ;src/main.c:719: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001CDF                       6708 00135$:
      001CDF F8 0E                 6709 	ldhl	sp,	#14
      001CE1 5E                    6710 	ld	e, (hl)
      001CE2 3E 08                 6711 	ld	a,#0x08
      001CE4 57                    6712 	ld	d,a
      001CE5 96                    6713 	sub	a, (hl)
      001CE6 CB 7B                 6714 	bit	7, e
      001CE8 28 07                 6715 	jr	Z, 00286$
      001CEA CB 7A                 6716 	bit	7, d
      001CEC 20 08                 6717 	jr	NZ, 00287$
      001CEE BF                    6718 	cp	a, a
      001CEF 18 05                 6719 	jr	00287$
      001CF1                       6720 00286$:
      001CF1 CB 7A                 6721 	bit	7, d
      001CF3 28 01                 6722 	jr	Z, 00287$
      001CF5 37                    6723 	scf
      001CF6                       6724 00287$:
      001CF6 30 33                 6725 	jr	NC, 00106$
      001CF8                       6726 00110$:
                                   6727 ;src/main.c:720: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001CF8 F8 0D                 6728 	ldhl	sp,	#13
      001CFA 7E                    6729 	ld	a, (hl)
      001CFB B7                    6730 	or	a, a
      001CFC CArDFr1D              6731 	jp	Z, 00107$
      001CFF 2B                    6732 	dec	hl
      001D00 D1                    6733 	pop	de
      001D01 D5                    6734 	push	de
      001D02 1A                    6735 	ld	a, (de)
      001D03 96                    6736 	sub	a, (hl)
      001D04 23                    6737 	inc	hl
      001D05 23                    6738 	inc	hl
      001D06 77                    6739 	ld	(hl), a
                                   6740 ;src/main.c:324: if (value >= 0) return value;
      001D07 CB 7E                 6741 	bit	7, (hl)
      001D09 28 06                 6742 	jr	Z, 00139$
                                   6743 ;src/main.c:325: else return - value;
      001D0B AF                    6744 	xor	a, a
      001D0C F8 0E                 6745 	ldhl	sp,	#14
      001D0E 96                    6746 	sub	a, (hl)
      001D0F 4F                    6747 	ld	c, a
      001D10 71                    6748 	ld	(hl), c
                                   6749 ;src/main.c:720: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D11                       6750 00139$:
      001D11 F8 0E                 6751 	ldhl	sp,	#14
      001D13 5E                    6752 	ld	e, (hl)
      001D14 3E 10                 6753 	ld	a,#0x10
      001D16 57                    6754 	ld	d,a
      001D17 96                    6755 	sub	a, (hl)
      001D18 CB 7B                 6756 	bit	7, e
      001D1A 28 07                 6757 	jr	Z, 00288$
      001D1C CB 7A                 6758 	bit	7, d
      001D1E 20 08                 6759 	jr	NZ, 00289$
      001D20 BF                    6760 	cp	a, a
      001D21 18 05                 6761 	jr	00289$
      001D23                       6762 00288$:
      001D23 CB 7A                 6763 	bit	7, d
      001D25 28 01                 6764 	jr	Z, 00289$
      001D27 37                    6765 	scf
      001D28                       6766 00289$:
      001D28 DArDFr1D              6767 	jp	C, 00107$
      001D2B                       6768 00106$:
                                   6769 ;src/main.c:721: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001D2B C1                    6770 	pop	bc
      001D2C C5                    6771 	push	bc
      001D2D 03                    6772 	inc	bc
      001D2E 03                    6773 	inc	bc
      001D2F FAr9Dr00              6774 	ld	a, (#_playerDrawY)
      001D32 F8 0E                 6775 	ldhl	sp,	#14
      001D34 77                    6776 	ld	(hl), a
      001D35 F8 0B                 6777 	ldhl	sp,	#11
      001D37 7E                    6778 	ld	a, (hl)
      001D38 B7                    6779 	or	a, a
      001D39 28 23                 6780 	jr	Z, 00105$
      001D3B 0A                    6781 	ld	a, (bc)
      001D3C F8 0E                 6782 	ldhl	sp,	#14
      001D3E 96                    6783 	sub	a, (hl)
      001D3F 6F                    6784 	ld	l, a
                                   6785 ;	spillPairReg hl
                                   6786 ;	spillPairReg hl
                                   6787 ;src/main.c:324: if (value >= 0) return value;
      001D40 CB 7D                 6788 	bit	7, l
      001D42 28 03                 6789 	jr	Z, 00143$
                                   6790 ;src/main.c:325: else return - value;
      001D44 AF                    6791 	xor	a, a
      001D45 95                    6792 	sub	a, l
      001D46 6F                    6793 	ld	l, a
                                   6794 ;	spillPairReg hl
                                   6795 ;	spillPairReg hl
                                   6796 ;src/main.c:721: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001D47                       6797 00143$:
      001D47 5D                    6798 	ld	e, l
      001D48 3E 08                 6799 	ld	a,#0x08
      001D4A 57                    6800 	ld	d,a
      001D4B 95                    6801 	sub	a, l
      001D4C CB 7B                 6802 	bit	7, e
      001D4E 28 07                 6803 	jr	Z, 00290$
      001D50 CB 7A                 6804 	bit	7, d
      001D52 20 08                 6805 	jr	NZ, 00291$
      001D54 BF                    6806 	cp	a, a
      001D55 18 05                 6807 	jr	00291$
      001D57                       6808 00290$:
      001D57 CB 7A                 6809 	bit	7, d
      001D59 28 01                 6810 	jr	Z, 00291$
      001D5B 37                    6811 	scf
      001D5C                       6812 00291$:
      001D5C 30 28                 6813 	jr	NC, 00101$
      001D5E                       6814 00105$:
                                   6815 ;src/main.c:722: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001D5E F8 0D                 6816 	ldhl	sp,	#13
      001D60 7E                    6817 	ld	a, (hl)
      001D61 B7                    6818 	or	a, a
      001D62 28 7B                 6819 	jr	Z, 00107$
      001D64 23                    6820 	inc	hl
      001D65 0A                    6821 	ld	a, (bc)
      001D66 96                    6822 	sub	a, (hl)
      001D67 4F                    6823 	ld	c, a
                                   6824 ;src/main.c:324: if (value >= 0) return value;
      001D68 CB 79                 6825 	bit	7, c
      001D6A 28 03                 6826 	jr	Z, 00147$
                                   6827 ;src/main.c:325: else return - value;
      001D6C AF                    6828 	xor	a, a
      001D6D 91                    6829 	sub	a, c
      001D6E 4F                    6830 	ld	c, a
                                   6831 ;src/main.c:722: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001D6F                       6832 00147$:
      001D6F 59                    6833 	ld	e, c
      001D70 3E 10                 6834 	ld	a,#0x10
      001D72 57                    6835 	ld	d,a
      001D73 91                    6836 	sub	a, c
      001D74 CB 7B                 6837 	bit	7, e
      001D76 28 07                 6838 	jr	Z, 00292$
      001D78 CB 7A                 6839 	bit	7, d
      001D7A 20 08                 6840 	jr	NZ, 00293$
      001D7C BF                    6841 	cp	a, a
      001D7D 18 05                 6842 	jr	00293$
      001D7F                       6843 00292$:
      001D7F CB 7A                 6844 	bit	7, d
      001D81 28 01                 6845 	jr	Z, 00293$
      001D83 37                    6846 	scf
      001D84                       6847 00293$:
      001D84 38 59                 6848 	jr	C, 00107$
      001D86                       6849 00101$:
                                   6850 ;src/main.c:724: set_sprite_tile(10+(i<<1), 0x7f);
      001D86 F8 02                 6851 	ldhl	sp,	#2
      001D88 7E                    6852 	ld	a, (hl)
      001D89 87                    6853 	add	a, a
      001D8A C6 0A                 6854 	add	a, #0x0a
                                   6855 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D8C 6F                    6856 	ld	l, a
      001D8D 01r00r00              6857 	ld	bc, #_shadow_OAM+0
                                   6858 ;	spillPairReg hl
                                   6859 ;	spillPairReg hl
      001D90 26 00                 6860 	ld	h, #0x00
                                   6861 ;	spillPairReg hl
                                   6862 ;	spillPairReg hl
      001D92 29                    6863 	add	hl, hl
      001D93 29                    6864 	add	hl, hl
      001D94 09                    6865 	add	hl, bc
      001D95 23                    6866 	inc	hl
      001D96 23                    6867 	inc	hl
      001D97 36 7F                 6868 	ld	(hl), #0x7f
                                   6869 ;src/main.c:725: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001D99 F8 02                 6870 	ldhl	sp,	#2
      001D9B 7E                    6871 	ld	a, (hl)
      001D9C 87                    6872 	add	a, a
      001D9D C6 0B                 6873 	add	a, #0x0b
                                   6874 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D9F 6F                    6875 	ld	l, a
      001DA0 01r00r00              6876 	ld	bc, #_shadow_OAM+0
                                   6877 ;	spillPairReg hl
                                   6878 ;	spillPairReg hl
      001DA3 26 00                 6879 	ld	h, #0x00
                                   6880 ;	spillPairReg hl
                                   6881 ;	spillPairReg hl
      001DA5 29                    6882 	add	hl, hl
      001DA6 29                    6883 	add	hl, hl
      001DA7 09                    6884 	add	hl, bc
      001DA8 23                    6885 	inc	hl
      001DA9 23                    6886 	inc	hl
      001DAA 36 7F                 6887 	ld	(hl), #0x7f
                                   6888 ;src/main.c:726: eptr->alive = 0;
      001DAC D1                    6889 	pop	de
      001DAD D5                    6890 	push	de
      001DAE 21 09 00              6891 	ld	hl, #0x0009
      001DB1 19                    6892 	add	hl, de
      001DB2 4D                    6893 	ld	c, l
      001DB3 44                    6894 	ld	b, h
      001DB4 AF                    6895 	xor	a, a
      001DB5 02                    6896 	ld	(bc), a
                                   6897 ;src/main.c:727: eptr->visible = 0;
      001DB6 D1                    6898 	pop	de
      001DB7 D5                    6899 	push	de
      001DB8 21 0A 00              6900 	ld	hl, #0x000a
      001DBB 19                    6901 	add	hl, de
      001DBC 4D                    6902 	ld	c, l
      001DBD 44                    6903 	ld	b, h
      001DBE AF                    6904 	xor	a, a
      001DBF 02                    6905 	ld	(bc), a
                                   6906 ;src/main.c:728: takeDamage(eptr->damage);
      001DC0 D1                    6907 	pop	de
      001DC1 D5                    6908 	push	de
      001DC2 21 0B 00              6909 	ld	hl, #0x000b
      001DC5 19                    6910 	add	hl, de
      001DC6 4D                    6911 	ld	c, l
      001DC7 44                    6912 	ld	b, h
      001DC8 0A                    6913 	ld	a, (bc)
      001DC9 06 00                 6914 	ld	b, #0x00
      001DCB 4F                    6915 	ld	c, a
      001DCC C5                    6916 	push	bc
      001DCD CDr26r1C              6917 	call	_takeDamage
      001DD0 E1                    6918 	pop	hl
                                   6919 ;src/main.c:729: initEnemies(0);
      001DD1 AF                    6920 	xor	a, a
      001DD2 F5                    6921 	push	af
      001DD3 33                    6922 	inc	sp
      001DD4 CDrC8r0C              6923 	call	_initEnemies
      001DD7 33                    6924 	inc	sp
                                   6925 ;src/main.c:730: playSound(0);
      001DD8 AF                    6926 	xor	a, a
      001DD9 F5                    6927 	push	af
      001DDA 33                    6928 	inc	sp
      001DDB CDr65r0C              6929 	call	_playSound
      001DDE 33                    6930 	inc	sp
      001DDF                       6931 00107$:
                                   6932 ;src/main.c:736: struct Projectile *pptr = projectiles;
      001DDF F8 0C                 6933 	ldhl	sp,	#12
      001DE1 3ErA0                 6934 	ld	a, #<(_projectiles)
      001DE3 22                    6935 	ld	(hl+), a
      001DE4 36s00                 6936 	ld	(hl), #>(_projectiles)
                                   6937 ;src/main.c:738: while (j < PROJECTILECOUNT) {
      001DE6 D1                    6938 	pop	de
      001DE7 D5                    6939 	push	de
      001DE8 21 02 00              6940 	ld	hl, #0x0002
      001DEB 19                    6941 	add	hl, de
      001DEC E5                    6942 	push	hl
      001DED 7D                    6943 	ld	a, l
      001DEE F8 05                 6944 	ldhl	sp,	#5
      001DF0 77                    6945 	ld	(hl), a
      001DF1 E1                    6946 	pop	hl
      001DF2 7C                    6947 	ld	a, h
      001DF3 F8 04                 6948 	ldhl	sp,	#4
      001DF5 77                    6949 	ld	(hl), a
      001DF6 D1                    6950 	pop	de
      001DF7 D5                    6951 	push	de
      001DF8 21 08 00              6952 	ld	hl, #0x0008
      001DFB 19                    6953 	add	hl, de
      001DFC E5                    6954 	push	hl
      001DFD 7D                    6955 	ld	a, l
      001DFE F8 07                 6956 	ldhl	sp,	#7
      001E00 77                    6957 	ld	(hl), a
      001E01 E1                    6958 	pop	hl
      001E02 7C                    6959 	ld	a, h
      001E03 F8 06                 6960 	ldhl	sp,	#6
      001E05 77                    6961 	ld	(hl), a
      001E06 F8 03                 6962 	ldhl	sp,	#3
      001E08 7E                    6963 	ld	a, (hl)
      001E09 F8 07                 6964 	ldhl	sp,	#7
      001E0B 77                    6965 	ld	(hl), a
      001E0C F8 04                 6966 	ldhl	sp,	#4
      001E0E 7E                    6967 	ld	a, (hl)
      001E0F F8 08                 6968 	ldhl	sp,	#8
      001E11 77                    6969 	ld	(hl), a
      001E12 F8 0E                 6970 	ldhl	sp,	#14
      001E14 36 00                 6971 	ld	(hl), #0x00
      001E16                       6972 00123$:
      001E16 21r5Er08              6973 	ld	hl, #_PROJECTILECOUNT
      001E19 4E                    6974 	ld	c, (hl)
      001E1A F8 0E                 6975 	ldhl	sp,	#14
      001E1C 7E                    6976 	ld	a, (hl)
      001E1D 91                    6977 	sub	a, c
      001E1E D2rA5r1F              6978 	jp	NC, 00127$
                                   6979 ;src/main.c:739: if (pptr->active) {
      001E21 2B                    6980 	dec	hl
      001E22 2B                    6981 	dec	hl
      001E23 2A                    6982 	ld	a, (hl+)
      001E24 5F                    6983 	ld	e, a
      001E25 56                    6984 	ld	d, (hl)
      001E26 21 09 00              6985 	ld	hl, #0x0009
      001E29 19                    6986 	add	hl, de
      001E2A 4D                    6987 	ld	c, l
      001E2B 44                    6988 	ld	b, h
      001E2C 0A                    6989 	ld	a, (bc)
      001E2D B7                    6990 	or	a, a
      001E2E CAr8Cr1F              6991 	jp	Z, 00122$
                                   6992 ;src/main.c:743: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001E31 F8 05                 6993 	ldhl	sp,#5
      001E33 2A                    6994 	ld	a, (hl+)
      001E34 5F                    6995 	ld	e, a
      001E35 56                    6996 	ld	d, (hl)
      001E36 1A                    6997 	ld	a, (de)
      001E37 4F                    6998 	ld	c, a
      001E38 3D                    6999 	dec	a
      001E39 3E 01                 7000 	ld	a, #0x01
      001E3B 28 01                 7001 	jr	Z, 00295$
      001E3D AF                    7002 	xor	a, a
      001E3E                       7003 00295$:
      001E3E F8 09                 7004 	ldhl	sp,	#9
      001E40 77                    7005 	ld	(hl), a
                                   7006 ;src/main.c:744: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001E41 79                    7007 	ld	a, c
      001E42 D6 02                 7008 	sub	a, #0x02
      001E44 3E 01                 7009 	ld	a, #0x01
      001E46 28 01                 7010 	jr	Z, 00297$
      001E48 AF                    7011 	xor	a, a
      001E49                       7012 00297$:
      001E49 F8 0A                 7013 	ldhl	sp,	#10
                                   7014 ;src/main.c:743: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001E4B 32                    7015 	ld	(hl-), a
      001E4C 7E                    7016 	ld	a, (hl)
      001E4D B7                    7017 	or	a, a
      001E4E 28 2C                 7018 	jr	Z, 00120$
      001E50 D1                    7019 	pop	de
      001E51 D5                    7020 	push	de
      001E52 1A                    7021 	ld	a, (de)
      001E53 F8 0C                 7022 	ldhl	sp,#12
      001E55 5E                    7023 	ld	e, (hl)
      001E56 23                    7024 	inc	hl
      001E57 56                    7025 	ld	d, (hl)
      001E58 F5                    7026 	push	af
      001E59 1A                    7027 	ld	a, (de)
      001E5A 4F                    7028 	ld	c, a
      001E5B F1                    7029 	pop	af
      001E5C 91                    7030 	sub	a, c
      001E5D 4F                    7031 	ld	c, a
                                   7032 ;src/main.c:324: if (value >= 0) return value;
      001E5E CB 79                 7033 	bit	7, c
      001E60 28 03                 7034 	jr	Z, 00153$
                                   7035 ;src/main.c:325: else return - value;
      001E62 AF                    7036 	xor	a, a
      001E63 91                    7037 	sub	a, c
      001E64 4F                    7038 	ld	c, a
                                   7039 ;src/main.c:743: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001E65                       7040 00153$:
      001E65 59                    7041 	ld	e, c
      001E66 3E 08                 7042 	ld	a,#0x08
      001E68 57                    7043 	ld	d,a
      001E69 91                    7044 	sub	a, c
      001E6A CB 7B                 7045 	bit	7, e
      001E6C 28 07                 7046 	jr	Z, 00298$
      001E6E CB 7A                 7047 	bit	7, d
      001E70 20 08                 7048 	jr	NZ, 00299$
      001E72 BF                    7049 	cp	a, a
      001E73 18 05                 7050 	jr	00299$
      001E75                       7051 00298$:
      001E75 CB 7A                 7052 	bit	7, d
      001E77 28 01                 7053 	jr	Z, 00299$
      001E79 37                    7054 	scf
      001E7A                       7055 00299$:
      001E7A 30 3B                 7056 	jr	NC, 00116$
      001E7C                       7057 00120$:
                                   7058 ;src/main.c:744: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001E7C F8 0A                 7059 	ldhl	sp,	#10
      001E7E 7E                    7060 	ld	a, (hl)
      001E7F B7                    7061 	or	a, a
      001E80 CAr8Cr1F              7062 	jp	Z, 00122$
      001E83 D1                    7063 	pop	de
      001E84 D5                    7064 	push	de
      001E85 1A                    7065 	ld	a, (de)
      001E86 F8 0C                 7066 	ldhl	sp,#12
      001E88 5E                    7067 	ld	e, (hl)
      001E89 23                    7068 	inc	hl
      001E8A 56                    7069 	ld	d, (hl)
      001E8B 2B                    7070 	dec	hl
      001E8C 2B                    7071 	dec	hl
      001E8D F5                    7072 	push	af
      001E8E 1A                    7073 	ld	a, (de)
      001E8F 4F                    7074 	ld	c, a
      001E90 F1                    7075 	pop	af
      001E91 91                    7076 	sub	a, c
      001E92 77                    7077 	ld	(hl), a
                                   7078 ;src/main.c:324: if (value >= 0) return value;
      001E93 CB 7E                 7079 	bit	7, (hl)
      001E95 20 03                 7080 	jr	NZ, 00155$
      001E97 4E                    7081 	ld	c, (hl)
      001E98 18 05                 7082 	jr	00157$
      001E9A                       7083 00155$:
                                   7084 ;src/main.c:325: else return - value;
      001E9A AF                    7085 	xor	a, a
      001E9B F8 0B                 7086 	ldhl	sp,	#11
      001E9D 96                    7087 	sub	a, (hl)
      001E9E 4F                    7088 	ld	c, a
                                   7089 ;src/main.c:744: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001E9F                       7090 00157$:
      001E9F 59                    7091 	ld	e, c
      001EA0 3E 10                 7092 	ld	a,#0x10
      001EA2 57                    7093 	ld	d,a
      001EA3 91                    7094 	sub	a, c
      001EA4 CB 7B                 7095 	bit	7, e
      001EA6 28 07                 7096 	jr	Z, 00300$
      001EA8 CB 7A                 7097 	bit	7, d
      001EAA 20 08                 7098 	jr	NZ, 00301$
      001EAC BF                    7099 	cp	a, a
      001EAD 18 05                 7100 	jr	00301$
      001EAF                       7101 00300$:
      001EAF CB 7A                 7102 	bit	7, d
      001EB1 28 01                 7103 	jr	Z, 00301$
      001EB3 37                    7104 	scf
      001EB4                       7105 00301$:
      001EB4 DAr8Cr1F              7106 	jp	C, 00122$
      001EB7                       7107 00116$:
                                   7108 ;src/main.c:745: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001EB7 F8 0C                 7109 	ldhl	sp,	#12
      001EB9 2A                    7110 	ld	a, (hl+)
      001EBA 4F                    7111 	ld	c, a
      001EBB 46                    7112 	ld	b, (hl)
      001EBC 03                    7113 	inc	bc
      001EBD 03                    7114 	inc	bc
      001EBE F8 09                 7115 	ldhl	sp,	#9
      001EC0 7E                    7116 	ld	a, (hl)
      001EC1 B7                    7117 	or	a, a
      001EC2 28 2A                 7118 	jr	Z, 00115$
      001EC4 2B                    7119 	dec	hl
      001EC5 2B                    7120 	dec	hl
      001EC6 2A                    7121 	ld	a, (hl+)
      001EC7 5F                    7122 	ld	e, a
      001EC8 56                    7123 	ld	d, (hl)
      001EC9 1A                    7124 	ld	a, (de)
      001ECA F5                    7125 	push	af
      001ECB 0A                    7126 	ld	a, (bc)
      001ECC 5F                    7127 	ld	e, a
      001ECD F1                    7128 	pop	af
      001ECE 93                    7129 	sub	a, e
      001ECF 6F                    7130 	ld	l, a
                                   7131 ;	spillPairReg hl
                                   7132 ;	spillPairReg hl
                                   7133 ;src/main.c:324: if (value >= 0) return value;
      001ED0 CB 7D                 7134 	bit	7, l
      001ED2 28 03                 7135 	jr	Z, 00161$
                                   7136 ;src/main.c:325: else return - value;
      001ED4 AF                    7137 	xor	a, a
      001ED5 95                    7138 	sub	a, l
      001ED6 6F                    7139 	ld	l, a
                                   7140 ;	spillPairReg hl
                                   7141 ;	spillPairReg hl
                                   7142 ;src/main.c:745: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001ED7                       7143 00161$:
      001ED7 5D                    7144 	ld	e, l
      001ED8 3E 08                 7145 	ld	a,#0x08
      001EDA 57                    7146 	ld	d,a
      001EDB 95                    7147 	sub	a, l
      001EDC CB 7B                 7148 	bit	7, e
      001EDE 28 07                 7149 	jr	Z, 00302$
      001EE0 CB 7A                 7150 	bit	7, d
      001EE2 20 08                 7151 	jr	NZ, 00303$
      001EE4 BF                    7152 	cp	a, a
      001EE5 18 05                 7153 	jr	00303$
      001EE7                       7154 00302$:
      001EE7 CB 7A                 7155 	bit	7, d
      001EE9 28 01                 7156 	jr	Z, 00303$
      001EEB 37                    7157 	scf
      001EEC                       7158 00303$:
      001EEC 30 31                 7159 	jr	NC, 00111$
      001EEE                       7160 00115$:
                                   7161 ;src/main.c:746: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001EEE F8 0A                 7162 	ldhl	sp,	#10
      001EF0 7E                    7163 	ld	a, (hl)
      001EF1 B7                    7164 	or	a, a
      001EF2 CAr8Cr1F              7165 	jp	Z, 00122$
      001EF5 F8 03                 7166 	ldhl	sp,#3
      001EF7 2A                    7167 	ld	a, (hl+)
      001EF8 5F                    7168 	ld	e, a
      001EF9 56                    7169 	ld	d, (hl)
      001EFA 1A                    7170 	ld	a, (de)
      001EFB F5                    7171 	push	af
      001EFC 0A                    7172 	ld	a, (bc)
      001EFD 4F                    7173 	ld	c, a
      001EFE F1                    7174 	pop	af
      001EFF 91                    7175 	sub	a, c
      001F00 4F                    7176 	ld	c, a
                                   7177 ;src/main.c:324: if (value >= 0) return value;
      001F01 CB 79                 7178 	bit	7, c
      001F03 28 03                 7179 	jr	Z, 00165$
                                   7180 ;src/main.c:325: else return - value;
      001F05 AF                    7181 	xor	a, a
      001F06 91                    7182 	sub	a, c
      001F07 4F                    7183 	ld	c, a
                                   7184 ;src/main.c:746: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001F08                       7185 00165$:
      001F08 59                    7186 	ld	e, c
      001F09 3E 10                 7187 	ld	a,#0x10
      001F0B 57                    7188 	ld	d,a
      001F0C 91                    7189 	sub	a, c
      001F0D CB 7B                 7190 	bit	7, e
      001F0F 28 07                 7191 	jr	Z, 00304$
      001F11 CB 7A                 7192 	bit	7, d
      001F13 20 08                 7193 	jr	NZ, 00305$
      001F15 BF                    7194 	cp	a, a
      001F16 18 05                 7195 	jr	00305$
      001F18                       7196 00304$:
      001F18 CB 7A                 7197 	bit	7, d
      001F1A 28 01                 7198 	jr	Z, 00305$
      001F1C 37                    7199 	scf
      001F1D                       7200 00305$:
      001F1D 38 6D                 7201 	jr	C, 00122$
      001F1F                       7202 00111$:
                                   7203 ;src/main.c:749: set_sprite_tile(10+(i<<1), 0x7f);
      001F1F F8 02                 7204 	ldhl	sp,	#2
      001F21 7E                    7205 	ld	a, (hl)
      001F22 87                    7206 	add	a, a
      001F23 4F                    7207 	ld	c, a
      001F24 C6 0A                 7208 	add	a, #0x0a
                                   7209 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001F26 6F                    7210 	ld	l, a
                                   7211 ;	spillPairReg hl
                                   7212 ;	spillPairReg hl
      001F27 26 00                 7213 	ld	h, #0x00
                                   7214 ;	spillPairReg hl
                                   7215 ;	spillPairReg hl
      001F29 29                    7216 	add	hl, hl
      001F2A 29                    7217 	add	hl, hl
      001F2B 11r00r00              7218 	ld	de, #_shadow_OAM
      001F2E 19                    7219 	add	hl, de
      001F2F 23                    7220 	inc	hl
      001F30 23                    7221 	inc	hl
      001F31 36 7F                 7222 	ld	(hl), #0x7f
                                   7223 ;src/main.c:750: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001F33 79                    7224 	ld	a, c
      001F34 C6 0B                 7225 	add	a, #0x0b
      001F36 4F                    7226 	ld	c, a
                                   7227 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001F37 26 00                 7228 	ld	h, #0x00
                                   7229 ;	spillPairReg hl
                                   7230 ;	spillPairReg hl
      001F39 69                    7231 	ld	l, c
      001F3A 29                    7232 	add	hl, hl
      001F3B 29                    7233 	add	hl, hl
      001F3C 11r00r00              7234 	ld	de, #_shadow_OAM
      001F3F 19                    7235 	add	hl, de
      001F40 23                    7236 	inc	hl
      001F41 23                    7237 	inc	hl
      001F42 36 7F                 7238 	ld	(hl), #0x7f
                                   7239 ;src/main.c:751: eptr->alive = 0;
      001F44 D1                    7240 	pop	de
      001F45 D5                    7241 	push	de
      001F46 21 09 00              7242 	ld	hl, #0x0009
      001F49 19                    7243 	add	hl, de
      001F4A 4D                    7244 	ld	c, l
      001F4B 44                    7245 	ld	b, h
      001F4C AF                    7246 	xor	a, a
      001F4D 02                    7247 	ld	(bc), a
                                   7248 ;src/main.c:752: eptr->visible = 0;
      001F4E D1                    7249 	pop	de
      001F4F D5                    7250 	push	de
      001F50 21 0A 00              7251 	ld	hl, #0x000a
      001F53 19                    7252 	add	hl, de
      001F54 4D                    7253 	ld	c, l
      001F55 44                    7254 	ld	b, h
      001F56 AF                    7255 	xor	a, a
      001F57 02                    7256 	ld	(bc), a
                                   7257 ;src/main.c:753: initEnemies(0);
      001F58 AF                    7258 	xor	a, a
      001F59 F5                    7259 	push	af
      001F5A 33                    7260 	inc	sp
      001F5B CDrC8r0C              7261 	call	_initEnemies
      001F5E 33                    7262 	inc	sp
                                   7263 ;src/main.c:754: set_sprite_tile(30+j, 0x7f);
      001F5F F8 0E                 7264 	ldhl	sp,	#14
      001F61 7E                    7265 	ld	a, (hl)
      001F62 C6 1E                 7266 	add	a, #0x1e
      001F64 4F                    7267 	ld	c, a
                                   7268 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001F65 26 00                 7269 	ld	h, #0x00
                                   7270 ;	spillPairReg hl
                                   7271 ;	spillPairReg hl
      001F67 69                    7272 	ld	l, c
      001F68 29                    7273 	add	hl, hl
      001F69 29                    7274 	add	hl, hl
      001F6A 11r00r00              7275 	ld	de, #_shadow_OAM
      001F6D 19                    7276 	add	hl, de
      001F6E 23                    7277 	inc	hl
      001F6F 23                    7278 	inc	hl
      001F70 36 7F                 7279 	ld	(hl), #0x7f
                                   7280 ;src/main.c:755: playSound(0);
      001F72 AF                    7281 	xor	a, a
      001F73 F5                    7282 	push	af
      001F74 33                    7283 	inc	sp
      001F75 CDr65r0C              7284 	call	_playSound
      001F78 33                    7285 	inc	sp
                                   7286 ;src/main.c:756: pptr->active = 0;
      001F79 F8 0C                 7287 	ldhl	sp,#12
      001F7B 2A                    7288 	ld	a, (hl+)
      001F7C 5F                    7289 	ld	e, a
      001F7D 56                    7290 	ld	d, (hl)
      001F7E 21 09 00              7291 	ld	hl, #0x0009
      001F81 19                    7292 	add	hl, de
      001F82 4D                    7293 	ld	c, l
      001F83 44                    7294 	ld	b, h
      001F84 AF                    7295 	xor	a, a
      001F85 02                    7296 	ld	(bc), a
                                   7297 ;src/main.c:757: incrementScore();
      001F86 CDr22r0A              7298 	call	_incrementScore
                                   7299 ;src/main.c:758: updateScore();
      001F89 CDr73r09              7300 	call	_updateScore
      001F8C                       7301 00122$:
                                   7302 ;src/main.c:763: j++;
      001F8C F8 0E                 7303 	ldhl	sp,	#14
      001F8E 34                    7304 	inc	(hl)
                                   7305 ;src/main.c:764: pptr++;
      001F8F 2B                    7306 	dec	hl
      001F90 2B                    7307 	dec	hl
      001F91 2A                    7308 	ld	a, (hl+)
      001F92 5F                    7309 	ld	e, a
      001F93 56                    7310 	ld	d, (hl)
      001F94 21 0C 00              7311 	ld	hl, #0x000c
      001F97 19                    7312 	add	hl, de
      001F98 E5                    7313 	push	hl
      001F99 7D                    7314 	ld	a, l
      001F9A F8 0E                 7315 	ldhl	sp,	#14
      001F9C 77                    7316 	ld	(hl), a
      001F9D E1                    7317 	pop	hl
      001F9E 7C                    7318 	ld	a, h
      001F9F F8 0D                 7319 	ldhl	sp,	#13
      001FA1 77                    7320 	ld	(hl), a
      001FA2 C3r16r1E              7321 	jp	00123$
      001FA5                       7322 00127$:
                                   7323 ;src/main.c:768: if (enemyCollisionCount == 0) {
      001FA5 FArA6r00              7324 	ld	a, (#_enemyCollisionCount)
      001FA8 B7                    7325 	or	a, a
      001FA9 20 09                 7326 	jr	NZ, 00130$
                                   7327 ;src/main.c:769: enemyCollisionCount = ENEMYCOUNT - 1;
      001FAB FAr4Dr08              7328 	ld	a, (#_ENEMYCOUNT)
      001FAE 3D                    7329 	dec	a
      001FAF EArA6r00              7330 	ld	(#_enemyCollisionCount),a
      001FB2 18 04                 7331 	jr	00169$
      001FB4                       7332 00130$:
                                   7333 ;src/main.c:772: enemyCollisionCount--;
      001FB4 21rA6r00              7334 	ld	hl, #_enemyCollisionCount
      001FB7 35                    7335 	dec	(hl)
      001FB8                       7336 00169$:
                                   7337 ;src/main.c:777: }
      001FB8 E8 0F                 7338 	add	sp, #15
      001FBA C9                    7339 	ret
                                   7340 ;src/main.c:780: void setGunIcon() {
                                   7341 ;	---------------------------------
                                   7342 ; Function setGunIcon
                                   7343 ; ---------------------------------
      001FBB                       7344 _setGunIcon::
                                   7345 ;src/main.c:782: if (currentGun == 0) {
      001FBB FArA8r00              7346 	ld	a, (#_currentGun)
      001FBE B7                    7347 	or	a, a
      001FBF 20 1B                 7348 	jr	NZ, 00102$
                                   7349 ;src/main.c:783: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      001FC1 01rAFr00              7350 	ld	bc, #_gunMap+0
      001FC4 79                    7351 	ld	a, c
      001FC5 21rA7r00              7352 	ld	hl, #_gunLevel
      001FC8 86                    7353 	add	a, (hl)
      001FC9 4F                    7354 	ld	c, a
      001FCA 30 01                 7355 	jr	NC, 00111$
      001FCC 04                    7356 	inc	b
      001FCD                       7357 00111$:
      001FCD C5                    7358 	push	bc
      001FCE 21 01 01              7359 	ld	hl, #0x101
      001FD1 E5                    7360 	push	hl
      001FD2 21 0F 00              7361 	ld	hl, #0x0f
      001FD5 E5                    7362 	push	hl
      001FD6 CDr00r00              7363 	call	_set_win_tiles
      001FD9 E8 06                 7364 	add	sp, #6
      001FDB C9                    7365 	ret
      001FDC                       7366 00102$:
                                   7367 ;src/main.c:786: set_win_tiles(15, 0,1,1,gunMap+2);
      001FDC 11rB1r00              7368 	ld	de, #(_gunMap + 2)
      001FDF D5                    7369 	push	de
      001FE0 21 01 01              7370 	ld	hl, #0x101
      001FE3 E5                    7371 	push	hl
      001FE4 21 0F 00              7372 	ld	hl, #0x0f
      001FE7 E5                    7373 	push	hl
      001FE8 CDr00r00              7374 	call	_set_win_tiles
      001FEB E8 06                 7375 	add	sp, #6
                                   7376 ;src/main.c:788: }
      001FED C9                    7377 	ret
                                   7378 ;src/main.c:798: void fire() {
                                   7379 ;	---------------------------------
                                   7380 ; Function fire
                                   7381 ; ---------------------------------
      001FEE                       7382 _fire::
      001FEE E8 FB                 7383 	add	sp, #-5
                                   7384 ;src/main.c:800: oldestProjectile += 1;
      001FF0 21r92r00              7385 	ld	hl, #_oldestProjectile
      001FF3 34                    7386 	inc	(hl)
      001FF4 7E                    7387 	ld	a, (hl)
                                   7388 ;src/main.c:801: if (oldestProjectile >= PROJECTILECOUNT) {
      001FF5 21r5Er08              7389 	ld	hl, #_PROJECTILECOUNT
      001FF8 4E                    7390 	ld	c, (hl)
      001FF9 21r92r00              7391 	ld	hl, #_oldestProjectile
      001FFC 7E                    7392 	ld	a, (hl)
      001FFD 91                    7393 	sub	a, c
      001FFE 38 02                 7394 	jr	C, 00102$
                                   7395 ;src/main.c:802: oldestProjectile = 0;
      002000 36 00                 7396 	ld	(hl), #0x00
      002002                       7397 00102$:
                                   7398 ;src/main.c:805: if (currentGun == 0) {
      002002 FArA8r00              7399 	ld	a, (#_currentGun)
      002005 B7                    7400 	or	a, a
      002006 20 3A                 7401 	jr	NZ, 00107$
                                   7402 ;src/main.c:807: projectiles[oldestProjectile] = singleGun;
      002008 21r92r00              7403 	ld	hl, #_oldestProjectile
      00200B 4E                    7404 	ld	c, (hl)
      00200C 06 00                 7405 	ld	b, #0x00
      00200E 69                    7406 	ld	l, c
      00200F 60                    7407 	ld	h, b
      002010 29                    7408 	add	hl, hl
      002011 09                    7409 	add	hl, bc
      002012 29                    7410 	add	hl, hl
      002013 29                    7411 	add	hl, hl
      002014 4D                    7412 	ld	c, l
      002015 44                    7413 	ld	b, h
                                   7414 ;src/main.c:806: if (gunLevel == 0) {
      002016 FArA7r00              7415 	ld	a, (#_gunLevel)
      002019 B7                    7416 	or	a, a
      00201A 20 14                 7417 	jr	NZ, 00104$
                                   7418 ;src/main.c:807: projectiles[oldestProjectile] = singleGun;
      00201C 11r60r00              7419 	ld	de, #_singleGun+0
      00201F 21rA0r00              7420 	ld	hl, #_projectiles
      002022 09                    7421 	add	hl, bc
      002023 01 0C 00              7422 	ld	bc, #0x000c
      002026 C5                    7423 	push	bc
      002027 D5                    7424 	push	de
      002028 E5                    7425 	push	hl
      002029 CDr00r00              7426 	call	___memcpy
      00202C E8 06                 7427 	add	sp, #6
      00202E 18 12                 7428 	jr	00107$
      002030                       7429 00104$:
                                   7430 ;src/main.c:810: projectiles[oldestProjectile] = doubleGun;
      002030 11r6Cr00              7431 	ld	de, #_doubleGun+0
      002033 21rA0r00              7432 	ld	hl, #_projectiles
      002036 09                    7433 	add	hl, bc
      002037 01 0C 00              7434 	ld	bc, #0x000c
      00203A C5                    7435 	push	bc
      00203B D5                    7436 	push	de
      00203C E5                    7437 	push	hl
      00203D CDr00r00              7438 	call	___memcpy
      002040 E8 06                 7439 	add	sp, #6
      002042                       7440 00107$:
                                   7441 ;src/main.c:813: if (currentGun == 1) {
      002042 FArA8r00              7442 	ld	a, (#_currentGun)
      002045 3D                    7443 	dec	a
      002046 20 45                 7444 	jr	NZ, 00113$
                                   7445 ;src/main.c:814: if (missiles == 0) {
      002048 FArA9r00              7446 	ld	a, (#_missiles)
      00204B B7                    7447 	or	a, a
      00204C 20 0B                 7448 	jr	NZ, 00109$
                                   7449 ;src/main.c:815: currentGun = 0;
      00204E 21rA8r00              7450 	ld	hl, #_currentGun
      002051 36 00                 7451 	ld	(hl), #0x00
                                   7452 ;src/main.c:816: setGunIcon();
      002053 CDrBBr1F              7453 	call	_setGunIcon
                                   7454 ;src/main.c:817: return;
      002056 C3r84r25              7455 	jp	00154$
      002059                       7456 00109$:
                                   7457 ;src/main.c:820: projectiles[oldestProjectile] = missile;
      002059 21r92r00              7458 	ld	hl, #_oldestProjectile
      00205C 4E                    7459 	ld	c, (hl)
      00205D 06 00                 7460 	ld	b, #0x00
      00205F 69                    7461 	ld	l, c
      002060 60                    7462 	ld	h, b
      002061 29                    7463 	add	hl, hl
      002062 09                    7464 	add	hl, bc
      002063 29                    7465 	add	hl, hl
      002064 29                    7466 	add	hl, hl
      002065 01rA0r00              7467 	ld	bc,#_projectiles
      002068 09                    7468 	add	hl,bc
      002069 11 0C 00              7469 	ld	de, #0x000c
      00206C D5                    7470 	push	de
      00206D 11r78r00              7471 	ld	de, #_missile
      002070 D5                    7472 	push	de
      002071 E5                    7473 	push	hl
      002072 CDr00r00              7474 	call	___memcpy
      002075 E8 06                 7475 	add	sp, #6
                                   7476 ;src/main.c:821: updateMissileCount(-1);
      002077 3E FF                 7477 	ld	a, #0xff
      002079 F5                    7478 	push	af
      00207A 33                    7479 	inc	sp
      00207B CDr9Dr09              7480 	call	_updateMissileCount
      00207E 33                    7481 	inc	sp
                                   7482 ;src/main.c:823: if (missiles == 0) {
      00207F FArA9r00              7483 	ld	a, (#_missiles)
      002082 B7                    7484 	or	a, a
      002083 20 08                 7485 	jr	NZ, 00113$
                                   7486 ;src/main.c:824: currentGun = 0;
      002085 21rA8r00              7487 	ld	hl, #_currentGun
      002088 36 00                 7488 	ld	(hl), #0x00
                                   7489 ;src/main.c:825: setGunIcon();
      00208A CDrBBr1F              7490 	call	_setGunIcon
      00208D                       7491 00113$:
                                   7492 ;src/main.c:828: projectiles[oldestProjectile].x = playerDrawX;
      00208D 21r92r00              7493 	ld	hl, #_oldestProjectile
      002090 4E                    7494 	ld	c, (hl)
      002091 06 00                 7495 	ld	b, #0x00
      002093 69                    7496 	ld	l, c
      002094 60                    7497 	ld	h, b
      002095 29                    7498 	add	hl, hl
      002096 09                    7499 	add	hl, bc
      002097 29                    7500 	add	hl, hl
      002098 29                    7501 	add	hl, hl
      002099 01rA0r00              7502 	ld	bc,#_projectiles
      00209C 09                    7503 	add	hl,bc
      00209D E5                    7504 	push	hl
      00209E FAr9Cr00              7505 	ld	a, (#_playerDrawX)
      0020A1 E1                    7506 	pop	hl
      0020A2 0E 00                 7507 	ld	c, #0x00
      0020A4 22                    7508 	ld	(hl+), a
      0020A5 71                    7509 	ld	(hl), c
                                   7510 ;src/main.c:829: projectiles[oldestProjectile].y = playerDrawY;
      0020A6 21r92r00              7511 	ld	hl, #_oldestProjectile
      0020A9 4E                    7512 	ld	c, (hl)
      0020AA 06 00                 7513 	ld	b, #0x00
      0020AC 69                    7514 	ld	l, c
      0020AD 60                    7515 	ld	h, b
      0020AE 29                    7516 	add	hl, hl
      0020AF 09                    7517 	add	hl, bc
      0020B0 29                    7518 	add	hl, hl
      0020B1 29                    7519 	add	hl, hl
      0020B2 01rA0r00              7520 	ld	bc,#_projectiles
      0020B5 09                    7521 	add	hl,bc
      0020B6 23                    7522 	inc	hl
      0020B7 23                    7523 	inc	hl
      0020B8 E5                    7524 	push	hl
      0020B9 FAr9Dr00              7525 	ld	a, (#_playerDrawY)
      0020BC E1                    7526 	pop	hl
      0020BD 0E 00                 7527 	ld	c, #0x00
      0020BF 22                    7528 	ld	(hl+), a
      0020C0 71                    7529 	ld	(hl), c
                                   7530 ;src/main.c:830: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      0020C1 21r92r00              7531 	ld	hl, #_oldestProjectile
      0020C4 4E                    7532 	ld	c, (hl)
      0020C5 06 00                 7533 	ld	b, #0x00
      0020C7 69                    7534 	ld	l, c
      0020C8 60                    7535 	ld	h, b
      0020C9 29                    7536 	add	hl, hl
      0020CA 09                    7537 	add	hl, bc
      0020CB 29                    7538 	add	hl, hl
      0020CC 29                    7539 	add	hl, hl
      0020CD 01rA0r00              7540 	ld	bc,#_projectiles
      0020D0 09                    7541 	add	hl,bc
      0020D1 5D                    7542 	ld	e, l
      0020D2 54                    7543 	ld	d, h
      0020D3 21 05 00              7544 	ld	hl, #0x0005
      0020D6 19                    7545 	add	hl, de
      0020D7 4D                    7546 	ld	c, l
      0020D8 44                    7547 	ld	b, h
      0020D9 21 07 00              7548 	ld	hl, #0x0007
      0020DC 19                    7549 	add	hl, de
      0020DD 7E                    7550 	ld	a, (hl)
      0020DE C5                    7551 	push	bc
      0020DF F5                    7552 	push	af
      0020E0 33                    7553 	inc	sp
      0020E1 FAr94r00              7554 	ld	a, (#_xDir)
      0020E4 F5                    7555 	push	af
      0020E5 33                    7556 	inc	sp
      0020E6 CDr00r00              7557 	call	__muluschar
      0020E9 E1                    7558 	pop	hl
      0020EA 7B                    7559 	ld	a, e
      0020EB C1                    7560 	pop	bc
      0020EC 02                    7561 	ld	(bc), a
                                   7562 ;src/main.c:831: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      0020ED 21r92r00              7563 	ld	hl, #_oldestProjectile
      0020F0 4E                    7564 	ld	c, (hl)
      0020F1 06 00                 7565 	ld	b, #0x00
      0020F3 69                    7566 	ld	l, c
      0020F4 60                    7567 	ld	h, b
      0020F5 29                    7568 	add	hl, hl
      0020F6 09                    7569 	add	hl, bc
      0020F7 29                    7570 	add	hl, hl
      0020F8 29                    7571 	add	hl, hl
      0020F9 01rA0r00              7572 	ld	bc,#_projectiles
      0020FC 09                    7573 	add	hl,bc
      0020FD 5D                    7574 	ld	e, l
      0020FE 54                    7575 	ld	d, h
      0020FF 21 06 00              7576 	ld	hl, #0x0006
      002102 19                    7577 	add	hl, de
      002103 4D                    7578 	ld	c, l
      002104 44                    7579 	ld	b, h
      002105 21 07 00              7580 	ld	hl, #0x0007
      002108 19                    7581 	add	hl, de
      002109 7E                    7582 	ld	a, (hl)
      00210A C5                    7583 	push	bc
      00210B F5                    7584 	push	af
      00210C 33                    7585 	inc	sp
      00210D FAr95r00              7586 	ld	a, (#_yDir)
      002110 F5                    7587 	push	af
      002111 33                    7588 	inc	sp
      002112 CDr00r00              7589 	call	__muluschar
      002115 E1                    7590 	pop	hl
      002116 7B                    7591 	ld	a, e
      002117 C1                    7592 	pop	bc
      002118 02                    7593 	ld	(bc), a
                                   7594 ;src/main.c:800: oldestProjectile += 1;
      002119 FAr92r00              7595 	ld	a, (#_oldestProjectile)
      00211C F8 04                 7596 	ldhl	sp,	#4
      00211E 77                    7597 	ld	(hl), a
                                   7598 ;src/main.c:807: projectiles[oldestProjectile] = singleGun;
      00211F 21r92r00              7599 	ld	hl, #_oldestProjectile
      002122 4E                    7600 	ld	c, (hl)
      002123 06 00                 7601 	ld	b, #0x00
      002125 69                    7602 	ld	l, c
      002126 60                    7603 	ld	h, b
      002127 29                    7604 	add	hl, hl
      002128 09                    7605 	add	hl, bc
      002129 29                    7606 	add	hl, hl
      00212A 29                    7607 	add	hl, hl
                                   7608 ;src/main.c:836: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00212B 01rA0r00              7609 	ld	bc,#_projectiles
      00212E 09                    7610 	add	hl,bc
      00212F 4D                    7611 	ld	c, l
      002130 44                    7612 	ld	b, h
      002131 F8 04                 7613 	ldhl	sp,	#4
      002133 3A                    7614 	ld	a, (hl-)
      002134 C6 1E                 7615 	add	a, #0x1e
      002136 77                    7616 	ld	(hl), a
      002137 21 0B 00              7617 	ld	hl, #0x000b
      00213A 09                    7618 	add	hl, bc
      00213B 7E                    7619 	ld	a, (hl)
      00213C F8 04                 7620 	ldhl	sp,	#4
      00213E 77                    7621 	ld	(hl), a
                                   7622 ;src/main.c:835: if (yDir != 0 && xDir == 0) {
      00213F FAr95r00              7623 	ld	a, (#_yDir)
      002142 B7                    7624 	or	a, a
      002143 28 6F                 7625 	jr	Z, 00140$
      002145 FAr94r00              7626 	ld	a, (#_xDir)
      002148 B7                    7627 	or	a, a
      002149 20 69                 7628 	jr	NZ, 00140$
                                   7629 ;src/main.c:836: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00214B F8 04                 7630 	ldhl	sp,	#4
      00214D 3A                    7631 	ld	a, (hl-)
      00214E 4F                    7632 	ld	c, a
                                   7633 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00214F 6E                    7634 	ld	l, (hl)
                                   7635 ;	spillPairReg hl
                                   7636 ;	spillPairReg hl
      002150 26 00                 7637 	ld	h, #0x00
                                   7638 ;	spillPairReg hl
                                   7639 ;	spillPairReg hl
      002152 29                    7640 	add	hl, hl
      002153 29                    7641 	add	hl, hl
      002154 11r00r00              7642 	ld	de, #_shadow_OAM
      002157 19                    7643 	add	hl, de
      002158 23                    7644 	inc	hl
      002159 23                    7645 	inc	hl
      00215A 71                    7646 	ld	(hl), c
                                   7647 ;src/main.c:800: oldestProjectile += 1;
      00215B FAr92r00              7648 	ld	a, (#_oldestProjectile)
                                   7649 ;src/main.c:836: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00215E C6 1E                 7650 	add	a, #0x1e
      002160 4F                    7651 	ld	c, a
                                   7652 ;src/main.c:837: if (yDir == 1) {
      002161 FAr95r00              7653 	ld	a, (#_yDir)
                                   7654 ;src/main.c:838: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   7655 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002164 3D                    7656 	dec	a
      002165 20 26                 7657 	jr	NZ, 00115$
      002167 67                    7658 	ld	h,a
                                   7659 ;	spillPairReg hl
                                   7660 ;	spillPairReg hl
      002168 69                    7661 	ld	l, c
      002169 29                    7662 	add	hl, hl
      00216A 29                    7663 	add	hl, hl
      00216B 11r00r00              7664 	ld	de, #_shadow_OAM
      00216E 19                    7665 	add	hl, de
      00216F 23                    7666 	inc	hl
      002170 23                    7667 	inc	hl
      002171 23                    7668 	inc	hl
      002172 36 40                 7669 	ld	(hl), #0x40
                                   7670 ;src/main.c:839: projectiles[oldestProjectile].offset = 4;
      002174 21r92r00              7671 	ld	hl, #_oldestProjectile
      002177 4E                    7672 	ld	c, (hl)
      002178 06 00                 7673 	ld	b, #0x00
      00217A 69                    7674 	ld	l, c
      00217B 60                    7675 	ld	h, b
      00217C 29                    7676 	add	hl, hl
      00217D 09                    7677 	add	hl, bc
      00217E 29                    7678 	add	hl, hl
      00217F 29                    7679 	add	hl, hl
      002180 01rA0r00              7680 	ld	bc,#_projectiles
      002183 09                    7681 	add	hl,bc
      002184 01 04 00              7682 	ld	bc, #0x0004
      002187 09                    7683 	add	hl, bc
      002188 36 04                 7684 	ld	(hl), #0x04
      00218A C3r5Fr25              7685 	jp	00141$
      00218D                       7686 00115$:
                                   7687 ;src/main.c:842: set_sprite_prop(30+oldestProjectile, 0); 
                                   7688 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00218D 26 00                 7689 	ld	h, #0x00
                                   7690 ;	spillPairReg hl
                                   7691 ;	spillPairReg hl
      00218F 69                    7692 	ld	l, c
      002190 29                    7693 	add	hl, hl
      002191 29                    7694 	add	hl, hl
      002192 11r00r00              7695 	ld	de, #_shadow_OAM
      002195 19                    7696 	add	hl, de
      002196 23                    7697 	inc	hl
      002197 23                    7698 	inc	hl
      002198 23                    7699 	inc	hl
      002199 36 00                 7700 	ld	(hl), #0x00
                                   7701 ;src/main.c:843: projectiles[oldestProjectile].offset = 12;
      00219B 21r92r00              7702 	ld	hl, #_oldestProjectile
      00219E 4E                    7703 	ld	c, (hl)
      00219F 06 00                 7704 	ld	b, #0x00
      0021A1 69                    7705 	ld	l, c
      0021A2 60                    7706 	ld	h, b
      0021A3 29                    7707 	add	hl, hl
      0021A4 09                    7708 	add	hl, bc
      0021A5 29                    7709 	add	hl, hl
      0021A6 29                    7710 	add	hl, hl
      0021A7 01rA0r00              7711 	ld	bc,#_projectiles
      0021AA 09                    7712 	add	hl,bc
      0021AB 01 04 00              7713 	ld	bc, #0x0004
      0021AE 09                    7714 	add	hl, bc
      0021AF 36 0C                 7715 	ld	(hl), #0x0c
      0021B1 C3r5Fr25              7716 	jp	00141$
      0021B4                       7717 00140$:
                                   7718 ;src/main.c:847: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   7719 ;src/main.c:846: else if (xDir != 0 && yDir == 0) {
      0021B4 FAr94r00              7720 	ld	a, (#_xDir)
      0021B7 B7                    7721 	or	a, a
      0021B8 CArFCr22              7722 	jp	Z, 00136$
      0021BB FAr95r00              7723 	ld	a, (#_yDir)
      0021BE B7                    7724 	or	a, a
      0021BF C2rFCr22              7725 	jp	NZ, 00136$
                                   7726 ;src/main.c:847: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      0021C2 F8 04                 7727 	ldhl	sp,	#4
      0021C4 34                    7728 	inc	(hl)
      0021C5 34                    7729 	inc	(hl)
      0021C6 2B                    7730 	dec	hl
                                   7731 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0021C7 3A                    7732 	ld	a, (hl-)
      0021C8 22                    7733 	ld	(hl+), a
      0021C9 36 00                 7734 	ld	(hl), #0x00
      0021CB 3E 02                 7735 	ld	a, #0x02
      0021CD                       7736 00260$:
      0021CD F8 02                 7737 	ldhl	sp,	#2
      0021CF CB 26                 7738 	sla	(hl)
      0021D1 23                    7739 	inc	hl
      0021D2 CB 16                 7740 	rl	(hl)
      0021D4 3D                    7741 	dec	a
      0021D5 20 F6                 7742 	jr	NZ, 00260$
      0021D7 2B                    7743 	dec	hl
      0021D8 2A                    7744 	ld	a, (hl+)
      0021D9 5F                    7745 	ld	e, a
      0021DA 56                    7746 	ld	d, (hl)
      0021DB 21r00r00              7747 	ld	hl, #_shadow_OAM
      0021DE 19                    7748 	add	hl, de
      0021DF 33                    7749 	inc	sp
      0021E0 33                    7750 	inc	sp
      0021E1 5D                    7751 	ld	e, l
      0021E2 54                    7752 	ld	d, h
      0021E3 D5                    7753 	push	de
      0021E4 21 02 00              7754 	ld	hl, #0x0002
      0021E7 19                    7755 	add	hl, de
      0021E8 E5                    7756 	push	hl
      0021E9 7D                    7757 	ld	a, l
      0021EA F8 04                 7758 	ldhl	sp,	#4
      0021EC 77                    7759 	ld	(hl), a
      0021ED E1                    7760 	pop	hl
      0021EE 7C                    7761 	ld	a, h
      0021EF F8 03                 7762 	ldhl	sp,	#3
      0021F1 32                    7763 	ld	(hl-), a
      0021F2 2A                    7764 	ld	a, (hl+)
      0021F3 5F                    7765 	ld	e, a
      0021F4 2A                    7766 	ld	a, (hl+)
      0021F5 57                    7767 	ld	d, a
      0021F6 7E                    7768 	ld	a, (hl)
      0021F7 12                    7769 	ld	(de), a
                                   7770 ;src/main.c:800: oldestProjectile += 1;
      0021F8 FAr92r00              7771 	ld	a, (#_oldestProjectile)
      0021FB F8 04                 7772 	ldhl	sp,	#4
      0021FD 77                    7773 	ld	(hl), a
                                   7774 ;src/main.c:836: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0021FE 7E                    7775 	ld	a, (hl)
      0021FF C6 1E                 7776 	add	a, #0x1e
      002201 77                    7777 	ld	(hl), a
                                   7778 ;src/main.c:848: if (xDir == 1) {
      002202 FAr94r00              7779 	ld	a, (#_xDir)
      002205 3D                    7780 	dec	a
      002206 20 7A                 7781 	jr	NZ, 00118$
                                   7782 ;src/main.c:849: set_sprite_prop(30+oldestProjectile, 0);
      002208 F8 04                 7783 	ldhl	sp,	#4
                                   7784 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00220A 3A                    7785 	ld	a, (hl-)
      00220B 22                    7786 	ld	(hl+), a
      00220C 36 00                 7787 	ld	(hl), #0x00
      00220E 3E 02                 7788 	ld	a, #0x02
      002210                       7789 00263$:
      002210 F8 03                 7790 	ldhl	sp,	#3
      002212 CB 26                 7791 	sla	(hl)
      002214 23                    7792 	inc	hl
      002215 CB 16                 7793 	rl	(hl)
      002217 3D                    7794 	dec	a
      002218 20 F6                 7795 	jr	NZ, 00263$
      00221A 2B                    7796 	dec	hl
      00221B 2A                    7797 	ld	a, (hl+)
      00221C 5F                    7798 	ld	e, a
      00221D 56                    7799 	ld	d, (hl)
      00221E 21r00r00              7800 	ld	hl, #_shadow_OAM
      002221 19                    7801 	add	hl, de
      002222 E5                    7802 	push	hl
      002223 7D                    7803 	ld	a, l
      002224 F8 03                 7804 	ldhl	sp,	#3
      002226 77                    7805 	ld	(hl), a
      002227 E1                    7806 	pop	hl
      002228 7C                    7807 	ld	a, h
      002229 F8 02                 7808 	ldhl	sp,	#2
      00222B 32                    7809 	ld	(hl-), a
      00222C 2A                    7810 	ld	a, (hl+)
      00222D 5F                    7811 	ld	e, a
      00222E 56                    7812 	ld	d, (hl)
      00222F 21 03 00              7813 	ld	hl, #0x0003
      002232 19                    7814 	add	hl, de
      002233 E5                    7815 	push	hl
      002234 7D                    7816 	ld	a, l
      002235 F8 05                 7817 	ldhl	sp,	#5
      002237 77                    7818 	ld	(hl), a
      002238 E1                    7819 	pop	hl
      002239 7C                    7820 	ld	a, h
      00223A F8 04                 7821 	ldhl	sp,	#4
      00223C 32                    7822 	ld	(hl-), a
      00223D 2A                    7823 	ld	a,	(hl+)
      00223E 66                    7824 	ld	h, (hl)
      00223F 6F                    7825 	ld	l, a
      002240 36 00                 7826 	ld	(hl), #0x00
                                   7827 ;src/main.c:850: projectiles[oldestProjectile].offset = 12;
      002242 21r92r00              7828 	ld	hl, #_oldestProjectile
      002245 4E                    7829 	ld	c, (hl)
      002246 06 00                 7830 	ld	b, #0x00
      002248 69                    7831 	ld	l, c
      002249 60                    7832 	ld	h, b
      00224A 29                    7833 	add	hl, hl
      00224B 09                    7834 	add	hl, bc
      00224C 29                    7835 	add	hl, hl
      00224D 29                    7836 	add	hl, hl
      00224E E5                    7837 	push	hl
      00224F 7D                    7838 	ld	a, l
      002250 F8 05                 7839 	ldhl	sp,	#5
      002252 77                    7840 	ld	(hl), a
      002253 E1                    7841 	pop	hl
      002254 7C                    7842 	ld	a, h
      002255 F8 04                 7843 	ldhl	sp,	#4
      002257 32                    7844 	ld	(hl-), a
      002258 2A                    7845 	ld	a, (hl+)
      002259 5F                    7846 	ld	e, a
      00225A 56                    7847 	ld	d, (hl)
      00225B 21rA0r00              7848 	ld	hl, #_projectiles
      00225E 19                    7849 	add	hl, de
      00225F E5                    7850 	push	hl
      002260 7D                    7851 	ld	a, l
      002261 F8 03                 7852 	ldhl	sp,	#3
      002263 77                    7853 	ld	(hl), a
      002264 E1                    7854 	pop	hl
      002265 7C                    7855 	ld	a, h
      002266 F8 02                 7856 	ldhl	sp,	#2
      002268 32                    7857 	ld	(hl-), a
      002269 2A                    7858 	ld	a, (hl+)
      00226A 5F                    7859 	ld	e, a
      00226B 56                    7860 	ld	d, (hl)
      00226C 21 04 00              7861 	ld	hl, #0x0004
      00226F 19                    7862 	add	hl, de
      002270 E5                    7863 	push	hl
      002271 7D                    7864 	ld	a, l
      002272 F8 05                 7865 	ldhl	sp,	#5
      002274 77                    7866 	ld	(hl), a
      002275 E1                    7867 	pop	hl
      002276 7C                    7868 	ld	a, h
      002277 F8 04                 7869 	ldhl	sp,	#4
      002279 32                    7870 	ld	(hl-), a
      00227A 2A                    7871 	ld	a,	(hl+)
      00227B 66                    7872 	ld	h, (hl)
      00227C 6F                    7873 	ld	l, a
      00227D 36 0C                 7874 	ld	(hl), #0x0c
      00227F C3r5Fr25              7875 	jp	00141$
      002282                       7876 00118$:
                                   7877 ;src/main.c:853: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002282 F8 04                 7878 	ldhl	sp,	#4
                                   7879 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002284 3A                    7880 	ld	a, (hl-)
      002285 22                    7881 	ld	(hl+), a
      002286 36 00                 7882 	ld	(hl), #0x00
      002288 3E 02                 7883 	ld	a, #0x02
      00228A                       7884 00264$:
      00228A F8 03                 7885 	ldhl	sp,	#3
      00228C CB 26                 7886 	sla	(hl)
      00228E 23                    7887 	inc	hl
      00228F CB 16                 7888 	rl	(hl)
      002291 3D                    7889 	dec	a
      002292 20 F6                 7890 	jr	NZ, 00264$
      002294 2B                    7891 	dec	hl
      002295 2A                    7892 	ld	a, (hl+)
      002296 5F                    7893 	ld	e, a
      002297 56                    7894 	ld	d, (hl)
      002298 21r00r00              7895 	ld	hl, #_shadow_OAM
      00229B 19                    7896 	add	hl, de
      00229C E5                    7897 	push	hl
      00229D 7D                    7898 	ld	a, l
      00229E F8 03                 7899 	ldhl	sp,	#3
      0022A0 77                    7900 	ld	(hl), a
      0022A1 E1                    7901 	pop	hl
      0022A2 7C                    7902 	ld	a, h
      0022A3 F8 02                 7903 	ldhl	sp,	#2
      0022A5 32                    7904 	ld	(hl-), a
      0022A6 2A                    7905 	ld	a, (hl+)
      0022A7 5F                    7906 	ld	e, a
      0022A8 56                    7907 	ld	d, (hl)
      0022A9 21 03 00              7908 	ld	hl, #0x0003
      0022AC 19                    7909 	add	hl, de
      0022AD E5                    7910 	push	hl
      0022AE 7D                    7911 	ld	a, l
      0022AF F8 05                 7912 	ldhl	sp,	#5
      0022B1 77                    7913 	ld	(hl), a
      0022B2 E1                    7914 	pop	hl
      0022B3 7C                    7915 	ld	a, h
      0022B4 F8 04                 7916 	ldhl	sp,	#4
      0022B6 32                    7917 	ld	(hl-), a
      0022B7 2A                    7918 	ld	a,	(hl+)
      0022B8 66                    7919 	ld	h, (hl)
      0022B9 6F                    7920 	ld	l, a
      0022BA 36 20                 7921 	ld	(hl), #0x20
                                   7922 ;src/main.c:854: projectiles[oldestProjectile].offset = 12;
      0022BC 21r92r00              7923 	ld	hl, #_oldestProjectile
      0022BF 4E                    7924 	ld	c, (hl)
      0022C0 06 00                 7925 	ld	b, #0x00
      0022C2 69                    7926 	ld	l, c
      0022C3 60                    7927 	ld	h, b
      0022C4 29                    7928 	add	hl, hl
      0022C5 09                    7929 	add	hl, bc
      0022C6 29                    7930 	add	hl, hl
      0022C7 29                    7931 	add	hl, hl
      0022C8 E5                    7932 	push	hl
      0022C9 7D                    7933 	ld	a, l
      0022CA F8 05                 7934 	ldhl	sp,	#5
      0022CC 77                    7935 	ld	(hl), a
      0022CD E1                    7936 	pop	hl
      0022CE 7C                    7937 	ld	a, h
      0022CF F8 04                 7938 	ldhl	sp,	#4
      0022D1 32                    7939 	ld	(hl-), a
      0022D2 2A                    7940 	ld	a, (hl+)
      0022D3 5F                    7941 	ld	e, a
      0022D4 56                    7942 	ld	d, (hl)
      0022D5 21rA0r00              7943 	ld	hl, #_projectiles
      0022D8 19                    7944 	add	hl, de
      0022D9 E5                    7945 	push	hl
      0022DA 7D                    7946 	ld	a, l
      0022DB F8 03                 7947 	ldhl	sp,	#3
      0022DD 77                    7948 	ld	(hl), a
      0022DE E1                    7949 	pop	hl
      0022DF 7C                    7950 	ld	a, h
      0022E0 F8 02                 7951 	ldhl	sp,	#2
      0022E2 32                    7952 	ld	(hl-), a
      0022E3 2A                    7953 	ld	a, (hl+)
      0022E4 5F                    7954 	ld	e, a
      0022E5 56                    7955 	ld	d, (hl)
      0022E6 21 04 00              7956 	ld	hl, #0x0004
      0022E9 19                    7957 	add	hl, de
      0022EA E5                    7958 	push	hl
      0022EB 7D                    7959 	ld	a, l
      0022EC F8 05                 7960 	ldhl	sp,	#5
      0022EE 77                    7961 	ld	(hl), a
      0022EF E1                    7962 	pop	hl
      0022F0 7C                    7963 	ld	a, h
      0022F1 F8 04                 7964 	ldhl	sp,	#4
      0022F3 32                    7965 	ld	(hl-), a
      0022F4 2A                    7966 	ld	a,	(hl+)
      0022F5 66                    7967 	ld	h, (hl)
      0022F6 6F                    7968 	ld	l, a
      0022F7 36 0C                 7969 	ld	(hl), #0x0c
      0022F9 C3r5Fr25              7970 	jp	00141$
      0022FC                       7971 00136$:
                                   7972 ;src/main.c:858: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      0022FC F8 04                 7973 	ldhl	sp,	#4
      0022FE 7E                    7974 	ld	a, (hl)
      0022FF C6 04                 7975 	add	a, #0x04
      002301 F8 00                 7976 	ldhl	sp,	#0
      002303 77                    7977 	ld	(hl), a
      002304 F8 03                 7978 	ldhl	sp,	#3
                                   7979 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002306 7E                    7980 	ld	a, (hl)
      002307 22                    7981 	ld	(hl+), a
      002308 36 00                 7982 	ld	(hl), #0x00
      00230A 3E 02                 7983 	ld	a, #0x02
      00230C                       7984 00265$:
      00230C F8 03                 7985 	ldhl	sp,	#3
      00230E CB 26                 7986 	sla	(hl)
      002310 23                    7987 	inc	hl
      002311 CB 16                 7988 	rl	(hl)
      002313 3D                    7989 	dec	a
      002314 20 F6                 7990 	jr	NZ, 00265$
      002316 2B                    7991 	dec	hl
      002317 2A                    7992 	ld	a, (hl+)
      002318 5F                    7993 	ld	e, a
      002319 56                    7994 	ld	d, (hl)
      00231A 21r00r00              7995 	ld	hl, #_shadow_OAM
      00231D 19                    7996 	add	hl, de
      00231E E5                    7997 	push	hl
      00231F 7D                    7998 	ld	a, l
      002320 F8 03                 7999 	ldhl	sp,	#3
      002322 77                    8000 	ld	(hl), a
      002323 E1                    8001 	pop	hl
      002324 7C                    8002 	ld	a, h
      002325 F8 02                 8003 	ldhl	sp,	#2
      002327 32                    8004 	ld	(hl-), a
      002328 2A                    8005 	ld	a, (hl+)
      002329 5F                    8006 	ld	e, a
      00232A 56                    8007 	ld	d, (hl)
      00232B 21 02 00              8008 	ld	hl, #0x0002
      00232E 19                    8009 	add	hl, de
      00232F E5                    8010 	push	hl
      002330 7D                    8011 	ld	a, l
      002331 F8 05                 8012 	ldhl	sp,	#5
      002333 77                    8013 	ld	(hl), a
      002334 E1                    8014 	pop	hl
      002335 7C                    8015 	ld	a, h
      002336 F8 04                 8016 	ldhl	sp,	#4
      002338 32                    8017 	ld	(hl-), a
      002339 2A                    8018 	ld	a, (hl+)
      00233A 5F                    8019 	ld	e, a
      00233B 56                    8020 	ld	d, (hl)
      00233C F8 00                 8021 	ldhl	sp,	#0
      00233E 7E                    8022 	ld	a, (hl)
      00233F 12                    8023 	ld	(de), a
                                   8024 ;src/main.c:859: if (xDir == 1 && yDir == -1) {
      002340 FAr94r00              8025 	ld	a, (#_xDir)
      002343 3D                    8026 	dec	a
      002344 3E 01                 8027 	ld	a, #0x01
      002346 28 01                 8028 	jr	Z, 00267$
      002348 AF                    8029 	xor	a, a
      002349                       8030 00267$:
      002349 F8 04                 8031 	ldhl	sp,	#4
      00234B 77                    8032 	ld	(hl), a
                                   8033 ;src/main.c:800: oldestProjectile += 1;
      00234C 21r92r00              8034 	ld	hl, #_oldestProjectile
      00234F 4E                    8035 	ld	c, (hl)
                                   8036 ;src/main.c:859: if (xDir == 1 && yDir == -1) {
      002350 FAr95r00              8037 	ld	a, (#_yDir)
      002353 3C                    8038 	inc	a
      002354 3E 01                 8039 	ld	a, #0x01
      002356 28 01                 8040 	jr	Z, 00269$
      002358 AF                    8041 	xor	a, a
      002359                       8042 00269$:
      002359 F8 01                 8043 	ldhl	sp,	#1
                                   8044 ;src/main.c:836: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00235B 22                    8045 	ld	(hl+), a
      00235C 79                    8046 	ld	a, c
      00235D C6 1E                 8047 	add	a, #0x1e
                                   8048 ;src/main.c:859: if (xDir == 1 && yDir == -1) {
      00235F 22                    8049 	ld	(hl+), a
      002360 23                    8050 	inc	hl
      002361 7E                    8051 	ld	a, (hl)
      002362 B7                    8052 	or	a, a
      002363 CArE5r23              8053 	jp	Z, 00132$
      002366 F8 01                 8054 	ldhl	sp,	#1
      002368 7E                    8055 	ld	a, (hl)
      002369 B7                    8056 	or	a, a
      00236A 28 79                 8057 	jr	Z, 00132$
                                   8058 ;src/main.c:860: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      00236C 23                    8059 	inc	hl
                                   8060 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00236D 2A                    8061 	ld	a, (hl+)
      00236E 22                    8062 	ld	(hl+), a
      00236F 36 00                 8063 	ld	(hl), #0x00
      002371 3E 02                 8064 	ld	a, #0x02
      002373                       8065 00270$:
      002373 F8 03                 8066 	ldhl	sp,	#3
      002375 CB 26                 8067 	sla	(hl)
      002377 23                    8068 	inc	hl
      002378 CB 16                 8069 	rl	(hl)
      00237A 3D                    8070 	dec	a
      00237B 20 F6                 8071 	jr	NZ, 00270$
      00237D 2B                    8072 	dec	hl
      00237E 2A                    8073 	ld	a, (hl+)
      00237F 5F                    8074 	ld	e, a
      002380 56                    8075 	ld	d, (hl)
      002381 21r00r00              8076 	ld	hl, #_shadow_OAM
      002384 19                    8077 	add	hl, de
      002385 E5                    8078 	push	hl
      002386 7D                    8079 	ld	a, l
      002387 F8 03                 8080 	ldhl	sp,	#3
      002389 77                    8081 	ld	(hl), a
      00238A E1                    8082 	pop	hl
      00238B 7C                    8083 	ld	a, h
      00238C F8 02                 8084 	ldhl	sp,	#2
      00238E 32                    8085 	ld	(hl-), a
      00238F 2A                    8086 	ld	a, (hl+)
      002390 5F                    8087 	ld	e, a
      002391 56                    8088 	ld	d, (hl)
      002392 21 03 00              8089 	ld	hl, #0x0003
      002395 19                    8090 	add	hl, de
      002396 E5                    8091 	push	hl
      002397 7D                    8092 	ld	a, l
      002398 F8 05                 8093 	ldhl	sp,	#5
      00239A 77                    8094 	ld	(hl), a
      00239B E1                    8095 	pop	hl
      00239C 7C                    8096 	ld	a, h
      00239D F8 04                 8097 	ldhl	sp,	#4
      00239F 32                    8098 	ld	(hl-), a
      0023A0 2A                    8099 	ld	a,	(hl+)
      0023A1 66                    8100 	ld	h, (hl)
      0023A2 6F                    8101 	ld	l, a
      0023A3 36 00                 8102 	ld	(hl), #0x00
                                   8103 ;src/main.c:861: projectiles[oldestProjectile].offset = 12;
      0023A5 21r92r00              8104 	ld	hl, #_oldestProjectile
      0023A8 4E                    8105 	ld	c, (hl)
      0023A9 06 00                 8106 	ld	b, #0x00
      0023AB 69                    8107 	ld	l, c
      0023AC 60                    8108 	ld	h, b
      0023AD 29                    8109 	add	hl, hl
      0023AE 09                    8110 	add	hl, bc
      0023AF 29                    8111 	add	hl, hl
      0023B0 29                    8112 	add	hl, hl
      0023B1 E5                    8113 	push	hl
      0023B2 7D                    8114 	ld	a, l
      0023B3 F8 05                 8115 	ldhl	sp,	#5
      0023B5 77                    8116 	ld	(hl), a
      0023B6 E1                    8117 	pop	hl
      0023B7 7C                    8118 	ld	a, h
      0023B8 F8 04                 8119 	ldhl	sp,	#4
      0023BA 32                    8120 	ld	(hl-), a
      0023BB 2A                    8121 	ld	a, (hl+)
      0023BC 5F                    8122 	ld	e, a
      0023BD 56                    8123 	ld	d, (hl)
      0023BE 21rA0r00              8124 	ld	hl, #_projectiles
      0023C1 19                    8125 	add	hl, de
      0023C2 E5                    8126 	push	hl
      0023C3 7D                    8127 	ld	a, l
      0023C4 F8 03                 8128 	ldhl	sp,	#3
      0023C6 77                    8129 	ld	(hl), a
      0023C7 E1                    8130 	pop	hl
      0023C8 7C                    8131 	ld	a, h
      0023C9 F8 02                 8132 	ldhl	sp,	#2
      0023CB 32                    8133 	ld	(hl-), a
      0023CC 2A                    8134 	ld	a, (hl+)
      0023CD 5F                    8135 	ld	e, a
      0023CE 56                    8136 	ld	d, (hl)
      0023CF 21 04 00              8137 	ld	hl, #0x0004
      0023D2 19                    8138 	add	hl, de
      0023D3 E5                    8139 	push	hl
      0023D4 7D                    8140 	ld	a, l
      0023D5 F8 05                 8141 	ldhl	sp,	#5
      0023D7 77                    8142 	ld	(hl), a
      0023D8 E1                    8143 	pop	hl
      0023D9 7C                    8144 	ld	a, h
      0023DA F8 04                 8145 	ldhl	sp,	#4
      0023DC 32                    8146 	ld	(hl-), a
      0023DD 2A                    8147 	ld	a,	(hl+)
      0023DE 66                    8148 	ld	h, (hl)
      0023DF 6F                    8149 	ld	l, a
      0023E0 36 0C                 8150 	ld	(hl), #0x0c
      0023E2 C3r5Fr25              8151 	jp	00141$
      0023E5                       8152 00132$:
                                   8153 ;src/main.c:837: if (yDir == 1) {
      0023E5 FAr95r00              8154 	ld	a, (#_yDir)
      0023E8 3D                    8155 	dec	a
      0023E9 3E 01                 8156 	ld	a, #0x01
      0023EB 28 01                 8157 	jr	Z, 00272$
      0023ED AF                    8158 	xor	a, a
      0023EE                       8159 00272$:
      0023EE F8 03                 8160 	ldhl	sp,	#3
                                   8161 ;src/main.c:863: else if (xDir == 1 && yDir == 1) {
      0023F0 22                    8162 	ld	(hl+), a
      0023F1 7E                    8163 	ld	a, (hl)
      0023F2 B7                    8164 	or	a, a
      0023F3 CAr74r24              8165 	jp	Z, 00128$
      0023F6 2B                    8166 	dec	hl
      0023F7 7E                    8167 	ld	a, (hl)
      0023F8 B7                    8168 	or	a, a
      0023F9 28 79                 8169 	jr	Z, 00128$
                                   8170 ;src/main.c:864: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      0023FB 2B                    8171 	dec	hl
                                   8172 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0023FC 2A                    8173 	ld	a, (hl+)
      0023FD 22                    8174 	ld	(hl+), a
      0023FE 36 00                 8175 	ld	(hl), #0x00
      002400 3E 02                 8176 	ld	a, #0x02
      002402                       8177 00273$:
      002402 F8 03                 8178 	ldhl	sp,	#3
      002404 CB 26                 8179 	sla	(hl)
      002406 23                    8180 	inc	hl
      002407 CB 16                 8181 	rl	(hl)
      002409 3D                    8182 	dec	a
      00240A 20 F6                 8183 	jr	NZ, 00273$
      00240C 2B                    8184 	dec	hl
      00240D 2A                    8185 	ld	a, (hl+)
      00240E 5F                    8186 	ld	e, a
      00240F 56                    8187 	ld	d, (hl)
      002410 21r00r00              8188 	ld	hl, #_shadow_OAM
      002413 19                    8189 	add	hl, de
      002414 E5                    8190 	push	hl
      002415 7D                    8191 	ld	a, l
      002416 F8 03                 8192 	ldhl	sp,	#3
      002418 77                    8193 	ld	(hl), a
      002419 E1                    8194 	pop	hl
      00241A 7C                    8195 	ld	a, h
      00241B F8 02                 8196 	ldhl	sp,	#2
      00241D 32                    8197 	ld	(hl-), a
      00241E 2A                    8198 	ld	a, (hl+)
      00241F 5F                    8199 	ld	e, a
      002420 56                    8200 	ld	d, (hl)
      002421 21 03 00              8201 	ld	hl, #0x0003
      002424 19                    8202 	add	hl, de
      002425 E5                    8203 	push	hl
      002426 7D                    8204 	ld	a, l
      002427 F8 05                 8205 	ldhl	sp,	#5
      002429 77                    8206 	ld	(hl), a
      00242A E1                    8207 	pop	hl
      00242B 7C                    8208 	ld	a, h
      00242C F8 04                 8209 	ldhl	sp,	#4
      00242E 32                    8210 	ld	(hl-), a
      00242F 2A                    8211 	ld	a,	(hl+)
      002430 66                    8212 	ld	h, (hl)
      002431 6F                    8213 	ld	l, a
      002432 36 40                 8214 	ld	(hl), #0x40
                                   8215 ;src/main.c:865: projectiles[oldestProjectile].offset = 4;
      002434 21r92r00              8216 	ld	hl, #_oldestProjectile
      002437 4E                    8217 	ld	c, (hl)
      002438 06 00                 8218 	ld	b, #0x00
      00243A 69                    8219 	ld	l, c
      00243B 60                    8220 	ld	h, b
      00243C 29                    8221 	add	hl, hl
      00243D 09                    8222 	add	hl, bc
      00243E 29                    8223 	add	hl, hl
      00243F 29                    8224 	add	hl, hl
      002440 E5                    8225 	push	hl
      002441 7D                    8226 	ld	a, l
      002442 F8 05                 8227 	ldhl	sp,	#5
      002444 77                    8228 	ld	(hl), a
      002445 E1                    8229 	pop	hl
      002446 7C                    8230 	ld	a, h
      002447 F8 04                 8231 	ldhl	sp,	#4
      002449 32                    8232 	ld	(hl-), a
      00244A 2A                    8233 	ld	a, (hl+)
      00244B 5F                    8234 	ld	e, a
      00244C 56                    8235 	ld	d, (hl)
      00244D 21rA0r00              8236 	ld	hl, #_projectiles
      002450 19                    8237 	add	hl, de
      002451 E5                    8238 	push	hl
      002452 7D                    8239 	ld	a, l
      002453 F8 03                 8240 	ldhl	sp,	#3
      002455 77                    8241 	ld	(hl), a
      002456 E1                    8242 	pop	hl
      002457 7C                    8243 	ld	a, h
      002458 F8 02                 8244 	ldhl	sp,	#2
      00245A 32                    8245 	ld	(hl-), a
      00245B 2A                    8246 	ld	a, (hl+)
      00245C 5F                    8247 	ld	e, a
      00245D 56                    8248 	ld	d, (hl)
      00245E 21 04 00              8249 	ld	hl, #0x0004
      002461 19                    8250 	add	hl, de
      002462 E5                    8251 	push	hl
      002463 7D                    8252 	ld	a, l
      002464 F8 05                 8253 	ldhl	sp,	#5
      002466 77                    8254 	ld	(hl), a
      002467 E1                    8255 	pop	hl
      002468 7C                    8256 	ld	a, h
      002469 F8 04                 8257 	ldhl	sp,	#4
      00246B 32                    8258 	ld	(hl-), a
      00246C 2A                    8259 	ld	a,	(hl+)
      00246D 66                    8260 	ld	h, (hl)
      00246E 6F                    8261 	ld	l, a
      00246F 36 04                 8262 	ld	(hl), #0x04
      002471 C3r5Fr25              8263 	jp	00141$
      002474                       8264 00128$:
                                   8265 ;src/main.c:867: else if (xDir == -1 && yDir == 1) {
      002474 FAr94r00              8266 	ld	a, (#_xDir)
      002477 3C                    8267 	inc	a
      002478 3E 01                 8268 	ld	a, #0x01
      00247A 28 01                 8269 	jr	Z, 00275$
      00247C AF                    8270 	xor	a, a
      00247D                       8271 00275$:
      00247D F8 04                 8272 	ldhl	sp,	#4
      00247F 77                    8273 	ld	(hl), a
      002480 7E                    8274 	ld	a, (hl)
      002481 B7                    8275 	or	a, a
      002482 CAr02r25              8276 	jp	Z, 00124$
      002485 2B                    8277 	dec	hl
      002486 7E                    8278 	ld	a, (hl)
      002487 B7                    8279 	or	a, a
      002488 28 78                 8280 	jr	Z, 00124$
                                   8281 ;src/main.c:868: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      00248A 2B                    8282 	dec	hl
                                   8283 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00248B 2A                    8284 	ld	a, (hl+)
      00248C 22                    8285 	ld	(hl+), a
      00248D 36 00                 8286 	ld	(hl), #0x00
      00248F 3E 02                 8287 	ld	a, #0x02
      002491                       8288 00276$:
      002491 F8 03                 8289 	ldhl	sp,	#3
      002493 CB 26                 8290 	sla	(hl)
      002495 23                    8291 	inc	hl
      002496 CB 16                 8292 	rl	(hl)
      002498 3D                    8293 	dec	a
      002499 20 F6                 8294 	jr	NZ, 00276$
      00249B 2B                    8295 	dec	hl
      00249C 2A                    8296 	ld	a, (hl+)
      00249D 5F                    8297 	ld	e, a
      00249E 56                    8298 	ld	d, (hl)
      00249F 21r00r00              8299 	ld	hl, #_shadow_OAM
      0024A2 19                    8300 	add	hl, de
      0024A3 E5                    8301 	push	hl
      0024A4 7D                    8302 	ld	a, l
      0024A5 F8 03                 8303 	ldhl	sp,	#3
      0024A7 77                    8304 	ld	(hl), a
      0024A8 E1                    8305 	pop	hl
      0024A9 7C                    8306 	ld	a, h
      0024AA F8 02                 8307 	ldhl	sp,	#2
      0024AC 32                    8308 	ld	(hl-), a
      0024AD 2A                    8309 	ld	a, (hl+)
      0024AE 5F                    8310 	ld	e, a
      0024AF 56                    8311 	ld	d, (hl)
      0024B0 21 03 00              8312 	ld	hl, #0x0003
      0024B3 19                    8313 	add	hl, de
      0024B4 E5                    8314 	push	hl
      0024B5 7D                    8315 	ld	a, l
      0024B6 F8 05                 8316 	ldhl	sp,	#5
      0024B8 77                    8317 	ld	(hl), a
      0024B9 E1                    8318 	pop	hl
      0024BA 7C                    8319 	ld	a, h
      0024BB F8 04                 8320 	ldhl	sp,	#4
      0024BD 32                    8321 	ld	(hl-), a
      0024BE 2A                    8322 	ld	a,	(hl+)
      0024BF 66                    8323 	ld	h, (hl)
      0024C0 6F                    8324 	ld	l, a
      0024C1 36 60                 8325 	ld	(hl), #0x60
                                   8326 ;src/main.c:869: projectiles[oldestProjectile].offset = 4;
      0024C3 21r92r00              8327 	ld	hl, #_oldestProjectile
      0024C6 4E                    8328 	ld	c, (hl)
      0024C7 06 00                 8329 	ld	b, #0x00
      0024C9 69                    8330 	ld	l, c
      0024CA 60                    8331 	ld	h, b
      0024CB 29                    8332 	add	hl, hl
      0024CC 09                    8333 	add	hl, bc
      0024CD 29                    8334 	add	hl, hl
      0024CE 29                    8335 	add	hl, hl
      0024CF E5                    8336 	push	hl
      0024D0 7D                    8337 	ld	a, l
      0024D1 F8 05                 8338 	ldhl	sp,	#5
      0024D3 77                    8339 	ld	(hl), a
      0024D4 E1                    8340 	pop	hl
      0024D5 7C                    8341 	ld	a, h
      0024D6 F8 04                 8342 	ldhl	sp,	#4
      0024D8 32                    8343 	ld	(hl-), a
      0024D9 2A                    8344 	ld	a, (hl+)
      0024DA 5F                    8345 	ld	e, a
      0024DB 56                    8346 	ld	d, (hl)
      0024DC 21rA0r00              8347 	ld	hl, #_projectiles
      0024DF 19                    8348 	add	hl, de
      0024E0 E5                    8349 	push	hl
      0024E1 7D                    8350 	ld	a, l
      0024E2 F8 03                 8351 	ldhl	sp,	#3
      0024E4 77                    8352 	ld	(hl), a
      0024E5 E1                    8353 	pop	hl
      0024E6 7C                    8354 	ld	a, h
      0024E7 F8 02                 8355 	ldhl	sp,	#2
      0024E9 32                    8356 	ld	(hl-), a
      0024EA 2A                    8357 	ld	a, (hl+)
      0024EB 5F                    8358 	ld	e, a
      0024EC 56                    8359 	ld	d, (hl)
      0024ED 21 04 00              8360 	ld	hl, #0x0004
      0024F0 19                    8361 	add	hl, de
      0024F1 E5                    8362 	push	hl
      0024F2 7D                    8363 	ld	a, l
      0024F3 F8 05                 8364 	ldhl	sp,	#5
      0024F5 77                    8365 	ld	(hl), a
      0024F6 E1                    8366 	pop	hl
      0024F7 7C                    8367 	ld	a, h
      0024F8 F8 04                 8368 	ldhl	sp,	#4
      0024FA 32                    8369 	ld	(hl-), a
      0024FB 2A                    8370 	ld	a,	(hl+)
      0024FC 66                    8371 	ld	h, (hl)
      0024FD 6F                    8372 	ld	l, a
      0024FE 36 04                 8373 	ld	(hl), #0x04
      002500 18 5D                 8374 	jr	00141$
      002502                       8375 00124$:
                                   8376 ;src/main.c:871: else if (xDir == -1 && yDir == -1) {
      002502 F8 04                 8377 	ldhl	sp,	#4
      002504 7E                    8378 	ld	a, (hl)
      002505 B7                    8379 	or	a, a
      002506 28 57                 8380 	jr	Z, 00141$
      002508 F8 01                 8381 	ldhl	sp,	#1
      00250A 7E                    8382 	ld	a, (hl)
      00250B B7                    8383 	or	a, a
      00250C 28 51                 8384 	jr	Z, 00141$
                                   8385 ;src/main.c:872: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      00250E 23                    8386 	inc	hl
                                   8387 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00250F 2A                    8388 	ld	a, (hl+)
      002510 22                    8389 	ld	(hl+), a
      002511 36 00                 8390 	ld	(hl), #0x00
      002513 3E 02                 8391 	ld	a, #0x02
      002515                       8392 00277$:
      002515 F8 03                 8393 	ldhl	sp,	#3
      002517 CB 26                 8394 	sla	(hl)
      002519 23                    8395 	inc	hl
      00251A CB 16                 8396 	rl	(hl)
      00251C 3D                    8397 	dec	a
      00251D 20 F6                 8398 	jr	NZ, 00277$
      00251F 2B                    8399 	dec	hl
      002520 2A                    8400 	ld	a, (hl+)
      002521 5F                    8401 	ld	e, a
      002522 56                    8402 	ld	d, (hl)
      002523 21r00r00              8403 	ld	hl, #_shadow_OAM
      002526 19                    8404 	add	hl, de
      002527 E5                    8405 	push	hl
      002528 7D                    8406 	ld	a, l
      002529 F8 03                 8407 	ldhl	sp,	#3
      00252B 77                    8408 	ld	(hl), a
      00252C E1                    8409 	pop	hl
      00252D 7C                    8410 	ld	a, h
      00252E F8 02                 8411 	ldhl	sp,	#2
      002530 32                    8412 	ld	(hl-), a
      002531 2A                    8413 	ld	a, (hl+)
      002532 5F                    8414 	ld	e, a
      002533 56                    8415 	ld	d, (hl)
      002534 21 03 00              8416 	ld	hl, #0x0003
      002537 19                    8417 	add	hl, de
      002538 E5                    8418 	push	hl
      002539 7D                    8419 	ld	a, l
      00253A F8 05                 8420 	ldhl	sp,	#5
      00253C 77                    8421 	ld	(hl), a
      00253D E1                    8422 	pop	hl
      00253E 7C                    8423 	ld	a, h
      00253F F8 04                 8424 	ldhl	sp,	#4
      002541 32                    8425 	ld	(hl-), a
      002542 2A                    8426 	ld	a,	(hl+)
      002543 66                    8427 	ld	h, (hl)
      002544 6F                    8428 	ld	l, a
      002545 36 20                 8429 	ld	(hl), #0x20
                                   8430 ;src/main.c:873: projectiles[oldestProjectile].offset = 12;
      002547 21r92r00              8431 	ld	hl, #_oldestProjectile
      00254A 4E                    8432 	ld	c, (hl)
      00254B 06 00                 8433 	ld	b, #0x00
      00254D 69                    8434 	ld	l, c
      00254E 60                    8435 	ld	h, b
      00254F 29                    8436 	add	hl, hl
      002550 09                    8437 	add	hl, bc
      002551 29                    8438 	add	hl, hl
      002552 29                    8439 	add	hl, hl
      002553 01rA0r00              8440 	ld	bc,#_projectiles
      002556 09                    8441 	add	hl,bc
      002557 4D                    8442 	ld	c, l
      002558 44                    8443 	ld	b, h
      002559 21 04 00              8444 	ld	hl, #0x0004
      00255C 09                    8445 	add	hl, bc
      00255D 36 0C                 8446 	ld	(hl), #0x0c
      00255F                       8447 00141$:
                                   8448 ;src/main.c:877: fireCooldown = projectiles[oldestProjectile].delay;
      00255F 21r92r00              8449 	ld	hl, #_oldestProjectile
      002562 4E                    8450 	ld	c, (hl)
      002563 06 00                 8451 	ld	b, #0x00
      002565 69                    8452 	ld	l, c
      002566 60                    8453 	ld	h, b
      002567 29                    8454 	add	hl, hl
      002568 09                    8455 	add	hl, bc
      002569 29                    8456 	add	hl, hl
      00256A 29                    8457 	add	hl, hl
      00256B 01rA0r00              8458 	ld	bc,#_projectiles
      00256E 09                    8459 	add	hl,bc
      00256F 4D                    8460 	ld	c, l
      002570 44                    8461 	ld	b, h
      002571 21 0A 00              8462 	ld	hl, #0x000a
      002574 09                    8463 	add	hl, bc
      002575 7E                    8464 	ld	a, (hl)
      002576 EAr93r00              8465 	ld	(#_fireCooldown),a
                                   8466 ;src/main.c:879: playSound(projectiles[oldestProjectile].type);
      002579 21 0B 00              8467 	ld	hl, #0x000b
      00257C 09                    8468 	add	hl, bc
      00257D 7E                    8469 	ld	a, (hl)
      00257E F5                    8470 	push	af
      00257F 33                    8471 	inc	sp
      002580 CDr65r0C              8472 	call	_playSound
      002583 33                    8473 	inc	sp
      002584                       8474 00154$:
                                   8475 ;src/main.c:883: }
      002584 E8 05                 8476 	add	sp, #5
      002586 C9                    8477 	ret
                                   8478 ;src/main.c:886: void moveProjectiles() {
                                   8479 ;	---------------------------------
                                   8480 ; Function moveProjectiles
                                   8481 ; ---------------------------------
      002587                       8482 _moveProjectiles::
      002587 E8 F9                 8483 	add	sp, #-7
                                   8484 ;src/main.c:887: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002589 F8 06                 8485 	ldhl	sp,	#6
      00258B 36 00                 8486 	ld	(hl), #0x00
      00258D                       8487 00112$:
      00258D 21r5Er08              8488 	ld	hl, #_PROJECTILECOUNT
      002590 4E                    8489 	ld	c, (hl)
      002591 F8 06                 8490 	ldhl	sp,	#6
      002593 7E                    8491 	ld	a, (hl)
      002594 91                    8492 	sub	a, c
      002595 D2rE3r26              8493 	jp	NC, 00114$
                                   8494 ;src/main.c:888: projectiles[i].x -= xOverflow;
      002598 4E                    8495 	ld	c, (hl)
      002599 06 00                 8496 	ld	b, #0x00
      00259B 69                    8497 	ld	l, c
      00259C 60                    8498 	ld	h, b
      00259D 29                    8499 	add	hl, hl
      00259E 09                    8500 	add	hl, bc
      00259F 29                    8501 	add	hl, hl
      0025A0 29                    8502 	add	hl, hl
      0025A1 01rA0r00              8503 	ld	bc,#_projectiles
      0025A4 09                    8504 	add	hl,bc
      0025A5 33                    8505 	inc	sp
      0025A6 33                    8506 	inc	sp
      0025A7 5D                    8507 	ld	e, l
      0025A8 54                    8508 	ld	d, h
      0025A9 D5                    8509 	push	de
      0025AA 1A                    8510 	ld	a, (de)
      0025AB 4F                    8511 	ld	c, a
      0025AC 13                    8512 	inc	de
      0025AD 1A                    8513 	ld	a, (de)
      0025AE 47                    8514 	ld	b, a
      0025AF 79                    8515 	ld	a, c
      0025B0 21rA2r00              8516 	ld	hl, #_xOverflow
      0025B3 96                    8517 	sub	a, (hl)
      0025B4 23                    8518 	inc	hl
      0025B5 4F                    8519 	ld	c, a
      0025B6 78                    8520 	ld	a, b
      0025B7 9E                    8521 	sbc	a, (hl)
      0025B8 47                    8522 	ld	b, a
      0025B9 E1                    8523 	pop	hl
      0025BA E5                    8524 	push	hl
      0025BB 79                    8525 	ld	a, c
      0025BC 22                    8526 	ld	(hl+), a
      0025BD 70                    8527 	ld	(hl), b
                                   8528 ;src/main.c:889: projectiles[i].y -= yOverflow;
      0025BE D1                    8529 	pop	de
      0025BF D5                    8530 	push	de
      0025C0 21 02 00              8531 	ld	hl, #0x0002
      0025C3 19                    8532 	add	hl, de
      0025C4 E5                    8533 	push	hl
      0025C5 7D                    8534 	ld	a, l
      0025C6 F8 04                 8535 	ldhl	sp,	#4
      0025C8 77                    8536 	ld	(hl), a
      0025C9 E1                    8537 	pop	hl
      0025CA 7C                    8538 	ld	a, h
      0025CB F8 03                 8539 	ldhl	sp,	#3
      0025CD 32                    8540 	ld	(hl-), a
      0025CE 2A                    8541 	ld	a, (hl+)
      0025CF 5F                    8542 	ld	e, a
      0025D0 56                    8543 	ld	d, (hl)
      0025D1 1A                    8544 	ld	a, (de)
      0025D2 4F                    8545 	ld	c, a
      0025D3 13                    8546 	inc	de
      0025D4 1A                    8547 	ld	a, (de)
      0025D5 47                    8548 	ld	b, a
      0025D6 79                    8549 	ld	a, c
      0025D7 21rA4r00              8550 	ld	hl, #_yOverflow
      0025DA 96                    8551 	sub	a, (hl)
      0025DB 23                    8552 	inc	hl
      0025DC 4F                    8553 	ld	c, a
      0025DD 78                    8554 	ld	a, b
      0025DE 9E                    8555 	sbc	a, (hl)
      0025DF 47                    8556 	ld	b, a
      0025E0 F8 02                 8557 	ldhl	sp,	#2
      0025E2 2A                    8558 	ld	a,	(hl+)
      0025E3 66                    8559 	ld	h, (hl)
      0025E4 6F                    8560 	ld	l, a
      0025E5 79                    8561 	ld	a, c
      0025E6 22                    8562 	ld	(hl+), a
      0025E7 70                    8563 	ld	(hl), b
                                   8564 ;src/main.c:891: if (projectiles[i].active) {
      0025E8 D1                    8565 	pop	de
      0025E9 D5                    8566 	push	de
      0025EA 21 09 00              8567 	ld	hl, #0x0009
      0025ED 19                    8568 	add	hl, de
      0025EE 4D                    8569 	ld	c, l
      0025EF 44                    8570 	ld	b, h
      0025F0 0A                    8571 	ld	a, (bc)
      0025F1 B7                    8572 	or	a, a
      0025F2 CArDDr26              8573 	jp	Z, 00113$
                                   8574 ;src/main.c:892: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      0025F5 F8 02                 8575 	ldhl	sp,#2
      0025F7 2A                    8576 	ld	a, (hl+)
      0025F8 5F                    8577 	ld	e, a
      0025F9 56                    8578 	ld	d, (hl)
      0025FA 1A                    8579 	ld	a, (de)
      0025FB 4F                    8580 	ld	c, a
      0025FC 13                    8581 	inc	de
      0025FD 1A                    8582 	ld	a, (de)
      0025FE 47                    8583 	ld	b, a
      0025FF D1                    8584 	pop	de
      002600 D5                    8585 	push	de
      002601 21 06 00              8586 	ld	hl, #0x0006
      002604 19                    8587 	add	hl, de
      002605 5D                    8588 	ld	e, l
      002606 54                    8589 	ld	d, h
      002607 1A                    8590 	ld	a, (de)
      002608 6F                    8591 	ld	l, a
                                   8592 ;	spillPairReg hl
                                   8593 ;	spillPairReg hl
      002609 07                    8594 	rlca
      00260A 9F                    8595 	sbc	a, a
      00260B 67                    8596 	ld	h, a
                                   8597 ;	spillPairReg hl
                                   8598 ;	spillPairReg hl
      00260C 09                    8599 	add	hl, bc
      00260D 4D                    8600 	ld	c, l
      00260E 44                    8601 	ld	b, h
      00260F F8 04                 8602 	ldhl	sp,	#4
      002611 79                    8603 	ld	a, c
      002612 22                    8604 	ld	(hl+), a
      002613 70                    8605 	ld	(hl), b
                                   8606 ;src/main.c:893: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002614 D1                    8607 	pop	de
      002615 D5                    8608 	push	de
      002616 1A                    8609 	ld	a, (de)
      002617 4F                    8610 	ld	c, a
      002618 13                    8611 	inc	de
      002619 1A                    8612 	ld	a, (de)
      00261A 47                    8613 	ld	b, a
      00261B D1                    8614 	pop	de
      00261C D5                    8615 	push	de
      00261D 21 05 00              8616 	ld	hl, #0x0005
      002620 19                    8617 	add	hl, de
      002621 5D                    8618 	ld	e, l
      002622 54                    8619 	ld	d, h
      002623 1A                    8620 	ld	a, (de)
      002624 6F                    8621 	ld	l, a
                                   8622 ;	spillPairReg hl
                                   8623 ;	spillPairReg hl
      002625 07                    8624 	rlca
      002626 9F                    8625 	sbc	a, a
      002627 67                    8626 	ld	h, a
                                   8627 ;	spillPairReg hl
                                   8628 ;	spillPairReg hl
      002628 09                    8629 	add	hl, bc
      002629 4D                    8630 	ld	c, l
      00262A 44                    8631 	ld	b, h
                                   8632 ;src/main.c:896: projectiles[i].y = newY;
      00262B F8 02                 8633 	ldhl	sp,#2
      00262D 2A                    8634 	ld	a, (hl+)
      00262E 5F                    8635 	ld	e, a
      00262F 2A                    8636 	ld	a, (hl+)
      002630 57                    8637 	ld	d, a
      002631 2A                    8638 	ld	a, (hl+)
      002632 12                    8639 	ld	(de), a
      002633 13                    8640 	inc	de
      002634 7E                    8641 	ld	a, (hl)
      002635 12                    8642 	ld	(de), a
                                   8643 ;src/main.c:897: projectiles[i].x = newX;
      002636 E1                    8644 	pop	hl
      002637 E5                    8645 	push	hl
      002638 79                    8646 	ld	a, c
      002639 22                    8647 	ld	(hl+), a
      00263A 70                    8648 	ld	(hl), b
                                   8649 ;src/main.c:901: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      00263B F8 04                 8650 	ldhl	sp,	#4
      00263D 2A                    8651 	ld	a, (hl+)
      00263E 77                    8652 	ld	(hl), a
      00263F D1                    8653 	pop	de
      002640 D5                    8654 	push	de
      002641 21 04 00              8655 	ld	hl, #0x0004
      002644 19                    8656 	add	hl, de
      002645 5D                    8657 	ld	e, l
      002646 54                    8658 	ld	d, h
      002647 1A                    8659 	ld	a, (de)
      002648 F8 05                 8660 	ldhl	sp,	#5
      00264A 86                    8661 	add	a, (hl)
      00264B 2B                    8662 	dec	hl
      00264C 5F                    8663 	ld	e, a
      00264D 79                    8664 	ld	a, c
      00264E C6 04                 8665 	add	a, #0x04
      002650 22                    8666 	ld	(hl+), a
      002651 23                    8667 	inc	hl
      002652 3A                    8668 	ld	a, (hl-)
      002653 C6 1E                 8669 	add	a, #0x1e
      002655 77                    8670 	ld	(hl), a
      002656 56                    8671 	ld	d, (hl)
                                   8672 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002657 26 00                 8673 	ld	h, #0x00
                                   8674 ;	spillPairReg hl
                                   8675 ;	spillPairReg hl
      002659 6A                    8676 	ld	l, d
      00265A 29                    8677 	add	hl, hl
      00265B 29                    8678 	add	hl, hl
      00265C D5                    8679 	push	de
      00265D 11r00r00              8680 	ld	de, #_shadow_OAM
      002660 19                    8681 	add	hl, de
      002661 D1                    8682 	pop	de
                                   8683 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002662 7B                    8684 	ld	a, e
      002663 22                    8685 	ld	(hl+), a
      002664 5D                    8686 	ld	e, l
      002665 54                    8687 	ld	d, h
      002666 F8 04                 8688 	ldhl	sp,	#4
      002668 7E                    8689 	ld	a, (hl)
      002669 12                    8690 	ld	(de), a
                                   8691 ;src/main.c:905: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      00266A D1                    8692 	pop	de
      00266B D5                    8693 	push	de
      00266C 1A                    8694 	ld	a, (de)
      00266D 6F                    8695 	ld	l, a
                                   8696 ;	spillPairReg hl
                                   8697 ;	spillPairReg hl
      00266E 13                    8698 	inc	de
      00266F 1A                    8699 	ld	a, (de)
      002670 67                    8700 	ld	h, a
                                   8701 ;	spillPairReg hl
                                   8702 ;	spillPairReg hl
      002671 CB 78                 8703 	bit	7, b
      002673 20 44                 8704 	jr	NZ, 00101$
      002675 5C                    8705 	ld	e, h
      002676 16 00                 8706 	ld	d, #0x00
      002678 3E AA                 8707 	ld	a, #0xaa
      00267A BD                    8708 	cp	a, l
      00267B 3E 00                 8709 	ld	a, #0x00
      00267D 9C                    8710 	sbc	a, h
      00267E CB 7B                 8711 	bit	7, e
      002680 28 07                 8712 	jr	Z, 00147$
      002682 CB 7A                 8713 	bit	7, d
      002684 20 08                 8714 	jr	NZ, 00148$
      002686 BF                    8715 	cp	a, a
      002687 18 05                 8716 	jr	00148$
      002689                       8717 00147$:
      002689 CB 7A                 8718 	bit	7, d
      00268B 28 01                 8719 	jr	Z, 00148$
      00268D 37                    8720 	scf
      00268E                       8721 00148$:
      00268E 38 29                 8722 	jr	C, 00101$
                                   8723 ;src/main.c:889: projectiles[i].y -= yOverflow;
      002690 F8 02                 8724 	ldhl	sp,#2
      002692 2A                    8725 	ld	a, (hl+)
      002693 5F                    8726 	ld	e, a
      002694 56                    8727 	ld	d, (hl)
      002695 1A                    8728 	ld	a, (de)
      002696 4F                    8729 	ld	c, a
      002697 13                    8730 	inc	de
      002698 1A                    8731 	ld	a, (de)
                                   8732 ;src/main.c:905: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002699 47                    8733 	ld	b, a
      00269A CB 78                 8734 	bit	7, b
      00269C 20 1B                 8735 	jr	NZ, 00101$
      00269E 58                    8736 	ld	e, b
      00269F 16 00                 8737 	ld	d, #0x00
      0026A1 3E 9A                 8738 	ld	a, #0x9a
      0026A3 B9                    8739 	cp	a, c
      0026A4 3E 00                 8740 	ld	a, #0x00
      0026A6 98                    8741 	sbc	a, b
      0026A7 CB 7B                 8742 	bit	7, e
      0026A9 28 07                 8743 	jr	Z, 00149$
      0026AB CB 7A                 8744 	bit	7, d
      0026AD 20 08                 8745 	jr	NZ, 00150$
      0026AF BF                    8746 	cp	a, a
      0026B0 18 05                 8747 	jr	00150$
      0026B2                       8748 00149$:
      0026B2 CB 7A                 8749 	bit	7, d
      0026B4 28 01                 8750 	jr	Z, 00150$
      0026B6 37                    8751 	scf
      0026B7                       8752 00150$:
      0026B7 30 24                 8753 	jr	NC, 00113$
      0026B9                       8754 00101$:
                                   8755 ;src/main.c:906: projectiles[i].active = 0;
      0026B9 F8 06                 8756 	ldhl	sp,	#6
      0026BB 4E                    8757 	ld	c, (hl)
      0026BC 06 00                 8758 	ld	b, #0x00
      0026BE 69                    8759 	ld	l, c
      0026BF 60                    8760 	ld	h, b
      0026C0 29                    8761 	add	hl, hl
      0026C1 09                    8762 	add	hl, bc
      0026C2 29                    8763 	add	hl, hl
      0026C3 29                    8764 	add	hl, hl
      0026C4 11rA0r00              8765 	ld	de, #_projectiles
      0026C7 19                    8766 	add	hl, de
      0026C8 01 09 00              8767 	ld	bc, #0x0009
      0026CB 09                    8768 	add	hl, bc
      0026CC 36 00                 8769 	ld	(hl), #0x00
                                   8770 ;src/main.c:907: set_sprite_tile(30+i, 0x7f);
      0026CE F8 05                 8771 	ldhl	sp,	#5
                                   8772 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0026D0 6E                    8773 	ld	l, (hl)
                                   8774 ;	spillPairReg hl
                                   8775 ;	spillPairReg hl
      0026D1 26 00                 8776 	ld	h, #0x00
                                   8777 ;	spillPairReg hl
                                   8778 ;	spillPairReg hl
      0026D3 29                    8779 	add	hl, hl
      0026D4 29                    8780 	add	hl, hl
      0026D5 11r00r00              8781 	ld	de, #_shadow_OAM
      0026D8 19                    8782 	add	hl, de
      0026D9 23                    8783 	inc	hl
      0026DA 23                    8784 	inc	hl
      0026DB 36 7F                 8785 	ld	(hl), #0x7f
                                   8786 ;src/main.c:907: set_sprite_tile(30+i, 0x7f);
      0026DD                       8787 00113$:
                                   8788 ;src/main.c:887: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0026DD F8 06                 8789 	ldhl	sp,	#6
      0026DF 34                    8790 	inc	(hl)
      0026E0 C3r8Dr25              8791 	jp	00112$
      0026E3                       8792 00114$:
                                   8793 ;src/main.c:911: }
      0026E3 E8 07                 8794 	add	sp, #7
      0026E5 C9                    8795 	ret
                                   8796 ;src/main.c:913: void tickPickups() {
                                   8797 ;	---------------------------------
                                   8798 ; Function tickPickups
                                   8799 ; ---------------------------------
      0026E6                       8800 _tickPickups::
      0026E6 3B                    8801 	dec	sp
                                   8802 ;src/main.c:914: pickup.x -= xOverflow;
      0026E7 21rE1r00              8803 	ld	hl, #_pickup
      0026EA 2A                    8804 	ld	a, (hl+)
      0026EB 4F                    8805 	ld	c, a
      0026EC 46                    8806 	ld	b, (hl)
      0026ED 79                    8807 	ld	a, c
      0026EE 21rA2r00              8808 	ld	hl, #_xOverflow
      0026F1 96                    8809 	sub	a, (hl)
      0026F2 23                    8810 	inc	hl
      0026F3 4F                    8811 	ld	c, a
      0026F4 78                    8812 	ld	a, b
      0026F5 9E                    8813 	sbc	a, (hl)
      0026F6 47                    8814 	ld	b, a
      0026F7 21rE1r00              8815 	ld	hl, #_pickup
      0026FA 79                    8816 	ld	a, c
      0026FB 22                    8817 	ld	(hl+), a
      0026FC 70                    8818 	ld	(hl), b
                                   8819 ;src/main.c:915: pickup.y -= yOverflow;
      0026FD 21rE3r00              8820 	ld	hl, #(_pickup + 2)
      002700 2A                    8821 	ld	a, (hl+)
      002701 4F                    8822 	ld	c, a
      002702 46                    8823 	ld	b, (hl)
      002703 79                    8824 	ld	a, c
      002704 21rA4r00              8825 	ld	hl, #_yOverflow
      002707 96                    8826 	sub	a, (hl)
      002708 23                    8827 	inc	hl
      002709 4F                    8828 	ld	c, a
      00270A 78                    8829 	ld	a, b
      00270B 9E                    8830 	sbc	a, (hl)
      00270C 47                    8831 	ld	b, a
      00270D 21rE3r00              8832 	ld	hl, #(_pickup + 2)
      002710 79                    8833 	ld	a, c
      002711 22                    8834 	ld	(hl+), a
      002712 70                    8835 	ld	(hl), b
                                   8836 ;src/main.c:917: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002713 79                    8837 	ld	a, c
      002714 C6 0C                 8838 	add	a, #0x0c
      002716 47                    8839 	ld	b, a
      002717 FArE1r00              8840 	ld	a, (#_pickup + 0)
      00271A C6 04                 8841 	add	a, #0x04
      00271C 4F                    8842 	ld	c, a
                                   8843 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00271D 21r0Cr00              8844 	ld	hl, #(_shadow_OAM + 12)
                                   8845 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002720 78                    8846 	ld	a, b
      002721 22                    8847 	ld	(hl+), a
      002722 71                    8848 	ld	(hl), c
                                   8849 ;src/main.c:918: if (pickup.active) {
      002723 FArE5r00              8850 	ld	a, (#(_pickup + 4) + 0)
      002726 B7                    8851 	or	a, a
      002727 28 61                 8852 	jr	Z, 00123$
                                   8853 ;src/main.c:919: if (abs(pickup.x - playerDrawX) < 10) {
      002729 FArE1r00              8854 	ld	a, (#_pickup + 0)
      00272C 21r9Cr00              8855 	ld	hl, #_playerDrawX
      00272F 4E                    8856 	ld	c, (hl)
      002730 91                    8857 	sub	a, c
      002731 4F                    8858 	ld	c, a
                                   8859 ;src/main.c:324: if (value >= 0) return value;
      002732 CB 79                 8860 	bit	7, c
      002734 28 03                 8861 	jr	Z, 00117$
                                   8862 ;src/main.c:325: else return - value;
      002736 AF                    8863 	xor	a, a
      002737 91                    8864 	sub	a, c
      002738 4F                    8865 	ld	c, a
                                   8866 ;src/main.c:919: if (abs(pickup.x - playerDrawX) < 10) {
      002739                       8867 00117$:
      002739 79                    8868 	ld	a, c
      00273A EE 80                 8869 	xor	a, #0x80
      00273C D6 8A                 8870 	sub	a, #0x8a
      00273E 30 4A                 8871 	jr	NC, 00123$
                                   8872 ;src/main.c:920: if (abs(pickup.y - playerDrawY) < 10) {
      002740 FArE3r00              8873 	ld	a, (#(_pickup + 2) + 0)
      002743 21r9Dr00              8874 	ld	hl, #_playerDrawY
      002746 4E                    8875 	ld	c, (hl)
      002747 91                    8876 	sub	a, c
      002748 F8 00                 8877 	ldhl	sp,	#0
      00274A 77                    8878 	ld	(hl), a
                                   8879 ;src/main.c:324: if (value >= 0) return value;
      00274B CB 7E                 8880 	bit	7, (hl)
      00274D 28 05                 8881 	jr	Z, 00121$
                                   8882 ;src/main.c:325: else return - value;
      00274F AF                    8883 	xor	a, a
      002750 F8 00                 8884 	ldhl	sp,	#0
      002752 96                    8885 	sub	a, (hl)
      002753 77                    8886 	ld	(hl), a
                                   8887 ;src/main.c:920: if (abs(pickup.y - playerDrawY) < 10) {
      002754                       8888 00121$:
      002754 F8 00                 8889 	ldhl	sp,	#0
      002756 7E                    8890 	ld	a, (hl)
      002757 EE 80                 8891 	xor	a, #0x80
      002759 D6 8A                 8892 	sub	a, #0x8a
      00275B 30 2D                 8893 	jr	NC, 00123$
                                   8894 ;src/main.c:921: if (pickup.type == 0) { //upgrade
      00275D 01rE6r00              8895 	ld	bc, #_pickup + 5
      002760 0A                    8896 	ld	a, (bc)
      002761 B7                    8897 	or	a, a
      002762 20 0F                 8898 	jr	NZ, 00104$
                                   8899 ;src/main.c:922: if (gunLevel < 1) {
      002764 21rA7r00              8900 	ld	hl, #_gunLevel
      002767 7E                    8901 	ld	a, (hl)
      002768 D6 01                 8902 	sub	a, #0x01
      00276A 30 07                 8903 	jr	NC, 00104$
                                   8904 ;src/main.c:923: gunLevel += 1;
      00276C 34                    8905 	inc	(hl)
      00276D 7E                    8906 	ld	a, (hl)
                                   8907 ;src/main.c:924: setGunIcon();
      00276E C5                    8908 	push	bc
      00276F CDrBBr1F              8909 	call	_setGunIcon
      002772 C1                    8910 	pop	bc
      002773                       8911 00104$:
                                   8912 ;src/main.c:927: if (pickup.type == 1) { //missile ammo
      002773 0A                    8913 	ld	a, (bc)
      002774 3D                    8914 	dec	a
      002775 20 09                 8915 	jr	NZ, 00106$
                                   8916 ;src/main.c:928: updateMissileCount(pickup.amount);
      002777 FArE7r00              8917 	ld	a, (#(_pickup + 6) + 0)
      00277A F5                    8918 	push	af
      00277B 33                    8919 	inc	sp
      00277C CDr9Dr09              8920 	call	_updateMissileCount
      00277F 33                    8921 	inc	sp
      002780                       8922 00106$:
                                   8923 ;src/main.c:930: pickup.active = 0;
      002780 21rE5r00              8924 	ld	hl, #(_pickup + 4)
      002783 36 00                 8925 	ld	(hl), #0x00
                                   8926 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002785 21r0Er00              8927 	ld	hl, #(_shadow_OAM + 14)
      002788 36 7F                 8928 	ld	(hl), #0x7f
                                   8929 ;src/main.c:931: set_sprite_tile(3, 0x7f);
      00278A                       8930 00123$:
                                   8931 ;src/main.c:936: }
      00278A 33                    8932 	inc	sp
      00278B C9                    8933 	ret
                                   8934 ;src/main.c:938: void initEnemyOptions() {
                                   8935 ;	---------------------------------
                                   8936 ; Function initEnemyOptions
                                   8937 ; ---------------------------------
      00278C                       8938 _initEnemyOptions::
                                   8939 ;src/main.c:939: enemyOptions[0] = blob;
      00278C 11 10 00              8940 	ld	de, #0x0010
      00278F D5                    8941 	push	de
      002790 11r10r00              8942 	ld	de, #_blob
      002793 D5                    8943 	push	de
      002794 11r00r00              8944 	ld	de, #_enemyOptions
      002797 D5                    8945 	push	de
      002798 CDr00r00              8946 	call	___memcpy
      00279B E8 06                 8947 	add	sp, #6
                                   8948 ;src/main.c:940: enemyOptions[1] = bomb;
      00279D 11 10 00              8949 	ld	de, #0x0010
      0027A0 D5                    8950 	push	de
      0027A1 11r20r00              8951 	ld	de, #_bomb
      0027A4 D5                    8952 	push	de
      0027A5 11r10r00              8953 	ld	de, #(_enemyOptions + 16)
      0027A8 D5                    8954 	push	de
      0027A9 CDr00r00              8955 	call	___memcpy
      0027AC E8 06                 8956 	add	sp, #6
                                   8957 ;src/main.c:941: enemyOptions[2] = miniship;
      0027AE 11 10 00              8958 	ld	de, #0x0010
      0027B1 D5                    8959 	push	de
      0027B2 11r30r00              8960 	ld	de, #_miniship
      0027B5 D5                    8961 	push	de
      0027B6 11r20r00              8962 	ld	de, #(_enemyOptions + 32)
      0027B9 D5                    8963 	push	de
      0027BA CDr00r00              8964 	call	___memcpy
      0027BD E8 06                 8965 	add	sp, #6
                                   8966 ;src/main.c:942: enemyOptions[3] = shieldship;
      0027BF 11 10 00              8967 	ld	de, #0x0010
      0027C2 D5                    8968 	push	de
      0027C3 11r50r00              8969 	ld	de, #_shieldship
      0027C6 D5                    8970 	push	de
      0027C7 11r30r00              8971 	ld	de, #(_enemyOptions + 48)
      0027CA D5                    8972 	push	de
      0027CB CDr00r00              8973 	call	___memcpy
      0027CE E8 06                 8974 	add	sp, #6
                                   8975 ;src/main.c:944: enemyOptions[4] = bigblob;
      0027D0 11 10 00              8976 	ld	de, #0x0010
      0027D3 D5                    8977 	push	de
      0027D4 11r40r00              8978 	ld	de, #_bigblob
      0027D7 D5                    8979 	push	de
      0027D8 11r40r00              8980 	ld	de, #(_enemyOptions + 64)
      0027DB D5                    8981 	push	de
      0027DC CDr00r00              8982 	call	___memcpy
      0027DF E8 06                 8983 	add	sp, #6
                                   8984 ;src/main.c:945: }
      0027E1 C9                    8985 	ret
                                   8986 ;src/main.c:948: void initProjectiles() {
                                   8987 ;	---------------------------------
                                   8988 ; Function initProjectiles
                                   8989 ; ---------------------------------
      0027E2                       8990 _initProjectiles::
                                   8991 ;src/main.c:949: set_sprite_data(0x20, 17, ProjectileTiles); 
      0027E2 11rE8r05              8992 	ld	de, #_ProjectileTiles
      0027E5 D5                    8993 	push	de
      0027E6 21 20 11              8994 	ld	hl, #0x1120
      0027E9 E5                    8995 	push	hl
      0027EA CDr00r00              8996 	call	_set_sprite_data
      0027ED E8 04                 8997 	add	sp, #4
                                   8998 ;src/main.c:951: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0027EF AF                    8999 	xor	a, a
      0027F0                       9000 00103$:
      0027F0 21r5Er08              9001 	ld	hl, #_PROJECTILECOUNT
      0027F3 4E                    9002 	ld	c, (hl)
      0027F4 B9                    9003 	cp	a, c
      0027F5 D0                    9004 	ret	NC
      0027F6 3C                    9005 	inc	a
                                   9006 ;src/main.c:955: }
      0027F7 18 F7                 9007 	jr	00103$
                                   9008 ;src/main.c:957: void initGame() {
                                   9009 ;	---------------------------------
                                   9010 ; Function initGame
                                   9011 ; ---------------------------------
      0027F9                       9012 _initGame::
                                   9013 ;src/main.c:960: xDir = 0;
      0027F9 21r94r00              9014 	ld	hl, #_xDir
      0027FC 36 00                 9015 	ld	(hl), #0x00
                                   9016 ;src/main.c:961: yDir = -1;
      0027FE 21r95r00              9017 	ld	hl, #_yDir
      002801 36 FF                 9018 	ld	(hl), #0xff
                                   9019 ;src/main.c:962: xSpeed = 0;
      002803 21r96r00              9020 	ld	hl, #_xSpeed
      002806 36 00                 9021 	ld	(hl), #0x00
                                   9022 ;src/main.c:963: ySpeed = 0;
      002808 21r97r00              9023 	ld	hl, #_ySpeed
      00280B 36 00                 9024 	ld	(hl), #0x00
                                   9025 ;src/main.c:966: playerX = 80<<5;
      00280D 21r98r00              9026 	ld	hl, #_playerX
      002810 36 00                 9027 	ld	(hl), #0x00
      002812 23                    9028 	inc	hl
      002813 36 0A                 9029 	ld	(hl), #0x0a
                                   9030 ;src/main.c:967: playerY = 80<<5;
      002815 21r9Ar00              9031 	ld	hl, #_playerY
      002818 36 00                 9032 	ld	(hl), #0x00
      00281A 23                    9033 	inc	hl
      00281B 36 0A                 9034 	ld	(hl), #0x0a
                                   9035 ;src/main.c:969: playerDrawX = 80;
      00281D 21r9Cr00              9036 	ld	hl, #_playerDrawX
      002820 36 50                 9037 	ld	(hl), #0x50
                                   9038 ;src/main.c:970: playerDrawY = 80;
      002822 21r9Dr00              9039 	ld	hl, #_playerDrawY
      002825 36 50                 9040 	ld	(hl), #0x50
                                   9041 ;src/main.c:973: bgX = 0;
      002827 AF                    9042 	xor	a, a
      002828 21r9Er00              9043 	ld	hl, #_bgX
      00282B 22                    9044 	ld	(hl+), a
      00282C 77                    9045 	ld	(hl), a
                                   9046 ;src/main.c:974: bgY = 0;
      00282D AF                    9047 	xor	a, a
      00282E 21rA0r00              9048 	ld	hl, #_bgY
      002831 22                    9049 	ld	(hl+), a
      002832 77                    9050 	ld	(hl), a
                                   9051 ;src/main.c:976: hull = maxHull;
      002833 FAr60r08              9052 	ld	a, (#_maxHull)
      002836 EArDDr00              9053 	ld	(#_hull),a
                                   9054 ;src/main.c:977: shield = maxShield;
      002839 FAr61r08              9055 	ld	a, (#_maxShield)
      00283C EArDEr00              9056 	ld	(#_shield),a
                                   9057 ;src/main.c:979: DISPLAY_ON;
      00283F F0r00                 9058 	ldh	a, (_LCDC_REG + 0)
      002841 F6 80                 9059 	or	a, #0x80
      002843 E0r00                 9060 	ldh	(_LCDC_REG + 0), a
                                   9061 ;src/main.c:980: SPRITES_8x16;
      002845 F0r00                 9062 	ldh	a, (_LCDC_REG + 0)
      002847 F6 04                 9063 	or	a, #0x04
      002849 E0r00                 9064 	ldh	(_LCDC_REG + 0), a
                                   9065 ;src/main.c:981: set_sprite_data(0, 12, Player1);
      00284B 11r48r07              9066 	ld	de, #_Player1
      00284E D5                    9067 	push	de
      00284F 21 00 0C              9068 	ld	hl, #0xc00
      002852 E5                    9069 	push	hl
      002853 CDr00r00              9070 	call	_set_sprite_data
      002856 E8 04                 9071 	add	sp, #4
                                   9072 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002858 21r02r00              9073 	ld	hl, #(_shadow_OAM + 2)
      00285B 36 00                 9074 	ld	(hl), #0x00
      00285D 21r06r00              9075 	ld	hl, #(_shadow_OAM + 6)
      002860 36 02                 9076 	ld	(hl), #0x02
                                   9077 ;src/main.c:987: SHOW_SPRITES;
      002862 F0r00                 9078 	ldh	a, (_LCDC_REG + 0)
      002864 F6 02                 9079 	or	a, #0x02
      002866 E0r00                 9080 	ldh	(_LCDC_REG + 0), a
                                   9081 ;src/main.c:991: font_init();
      002868 CDr00r00              9082 	call	_font_init
                                   9083 ;src/main.c:993: min_font = font_load(font_min); // 36 tiles of characters
      00286B 11r00r00              9084 	ld	de, #_font_min
      00286E D5                    9085 	push	de
      00286F CDr00r00              9086 	call	_font_load
      002872 E1                    9087 	pop	hl
      002873 21rDFr00              9088 	ld	hl, #_min_font
      002876 7B                    9089 	ld	a, e
      002877 22                    9090 	ld	(hl+), a
                                   9091 ;src/main.c:994: font_set(min_font);
      002878 7A                    9092 	ld	a, d
      002879 32                    9093 	ld	(hl-), a
      00287A 2A                    9094 	ld	a, (hl+)
      00287B 5F                    9095 	ld	e, a
      00287C 56                    9096 	ld	d, (hl)
      00287D D5                    9097 	push	de
      00287E CDr00r00              9098 	call	_font_set
      002881 E1                    9099 	pop	hl
                                   9100 ;src/main.c:995: set_win_tiles(1,0,4,1,hullabel);
      002882 11r00r00              9101 	ld	de, #_hullabel
      002885 D5                    9102 	push	de
      002886 21 04 01              9103 	ld	hl, #0x104
      002889 E5                    9104 	push	hl
      00288A 21 01 00              9105 	ld	hl, #0x01
      00288D E5                    9106 	push	hl
      00288E CDr00r00              9107 	call	_set_win_tiles
      002891 E8 06                 9108 	add	sp, #6
                                   9109 ;src/main.c:996: set_win_tiles(1,1,4,1,shieldlabel);
      002893 11r04r00              9110 	ld	de, #_shieldlabel
      002896 D5                    9111 	push	de
      002897 21 04 01              9112 	ld	hl, #0x104
      00289A E5                    9113 	push	hl
      00289B 21 01 01              9114 	ld	hl, #0x101
      00289E E5                    9115 	push	hl
      00289F CDr00r00              9116 	call	_set_win_tiles
      0028A2 E8 06                 9117 	add	sp, #6
                                   9118 ;src/main.c:1001: set_bkg_data(0x50,1,healthblock);
      0028A4 11r07r05              9119 	ld	de, #_healthblock
      0028A7 D5                    9120 	push	de
      0028A8 21 50 01              9121 	ld	hl, #0x150
      0028AB E5                    9122 	push	hl
      0028AC CDr00r00              9123 	call	_set_bkg_data
      0028AF E8 04                 9124 	add	sp, #4
                                   9125 ;src/main.c:1003: setHealthBar(0, hull);
      0028B1 FArDDr00              9126 	ld	a, (#_hull)
      0028B4 67                    9127 	ld	h, a
      0028B5 2E 00                 9128 	ld	l, #0x00
      0028B7 E5                    9129 	push	hl
      0028B8 CDr62r08              9130 	call	_setHealthBar
      0028BB E1                    9131 	pop	hl
                                   9132 ;src/main.c:1004: setHealthBar(1, shield);
      0028BC FArDEr00              9133 	ld	a, (#_shield)
      0028BF 67                    9134 	ld	h, a
      0028C0 2E 01                 9135 	ld	l, #0x01
      0028C2 E5                    9136 	push	hl
      0028C3 CDr62r08              9137 	call	_setHealthBar
      0028C6 E1                    9138 	pop	hl
                                   9139 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      0028C7 3E 07                 9140 	ld	a, #0x07
      0028C9 E0r00                 9141 	ldh	(_WX_REG + 0), a
      0028CB 3E 7E                 9142 	ld	a, #0x7e
      0028CD E0r00                 9143 	ldh	(_WY_REG + 0), a
                                   9144 ;src/main.c:1011: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      0028CF 11r87r04              9145 	ld	de, #_backgroundtiles
      0028D2 D5                    9146 	push	de
      0028D3 21 25 08              9147 	ld	hl, #0x825
      0028D6 E5                    9148 	push	hl
      0028D7 CDr00r00              9149 	call	_set_bkg_data
      0028DA E8 04                 9150 	add	sp, #4
                                   9151 ;src/main.c:1012: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      0028DC 11r87r00              9152 	ld	de, #_background1
      0028DF D5                    9153 	push	de
      0028E0 21 20 20              9154 	ld	hl, #0x2020
      0028E3 E5                    9155 	push	hl
      0028E4 AF                    9156 	xor	a, a
      0028E5 0F                    9157 	rrca
      0028E6 F5                    9158 	push	af
      0028E7 CDr00r00              9159 	call	_set_bkg_tiles
      0028EA E8 06                 9160 	add	sp, #6
                                   9161 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0028EC AF                    9162 	xor	a, a
      0028ED E0r00                 9163 	ldh	(_SCX_REG + 0), a
      0028EF AF                    9164 	xor	a, a
      0028F0 E0r00                 9165 	ldh	(_SCY_REG + 0), a
                                   9166 ;src/main.c:1018: set_bkg_data(0x51, 18, ProjectileTiles);
      0028F2 11rE8r05              9167 	ld	de, #_ProjectileTiles
      0028F5 D5                    9168 	push	de
      0028F6 21 51 12              9169 	ld	hl, #0x1251
      0028F9 E5                    9170 	push	hl
      0028FA CDr00r00              9171 	call	_set_bkg_data
      0028FD E8 04                 9172 	add	sp, #4
                                   9173 ;src/main.c:1020: set_win_tiles(10, 0,4,1,weaponlabel);
      0028FF 11r08r00              9174 	ld	de, #_weaponlabel
      002902 D5                    9175 	push	de
      002903 21 04 01              9176 	ld	hl, #0x104
      002906 E5                    9177 	push	hl
      002907 21 0A 00              9178 	ld	hl, #0x0a
      00290A E5                    9179 	push	hl
      00290B CDr00r00              9180 	call	_set_win_tiles
      00290E E8 06                 9181 	add	sp, #6
                                   9182 ;src/main.c:1021: set_win_tiles(10, 1,4,1,scorelabel);
      002910 11r0Cr00              9183 	ld	de, #_scorelabel
      002913 D5                    9184 	push	de
      002914 21 04 01              9185 	ld	hl, #0x104
      002917 E5                    9186 	push	hl
      002918 21 0A 01              9187 	ld	hl, #0x10a
      00291B E5                    9188 	push	hl
      00291C CDr00r00              9189 	call	_set_win_tiles
      00291F E8 06                 9190 	add	sp, #6
                                   9191 ;src/main.c:1023: setGunIcon();
      002921 CDrBBr1F              9192 	call	_setGunIcon
                                   9193 ;src/main.c:1024: SHOW_BKG;
      002924 F0r00                 9194 	ldh	a, (_LCDC_REG + 0)
      002926 F6 01                 9195 	or	a, #0x01
      002928 E0r00                 9196 	ldh	(_LCDC_REG + 0), a
                                   9197 ;src/main.c:1025: SHOW_WIN;;
      00292A F0r00                 9198 	ldh	a, (_LCDC_REG + 0)
      00292C F6 20                 9199 	or	a, #0x20
      00292E E0r00                 9200 	ldh	(_LCDC_REG + 0), a
                                   9201 ;src/main.c:1027: SCORE = MAKE_BCD(00000);
      002930 AF                    9202 	xor	a, a
      002931 21rB4r00              9203 	ld	hl, #_SCORE
      002934 22                    9204 	ld	(hl+), a
      002935 22                    9205 	ld	(hl+), a
      002936 22                    9206 	ld	(hl+), a
      002937 77                    9207 	ld	(hl), a
                                   9208 ;src/main.c:1028: updateScore();
      002938 CDr73r09              9209 	call	_updateScore
                                   9210 ;src/main.c:1029: MISSILES = MAKE_BCD(1);
      00293B 21rAAr00              9211 	ld	hl, #_MISSILES
      00293E 3E 01                 9212 	ld	a, #0x01
      002940 22                    9213 	ld	(hl+), a
      002941 AF                    9214 	xor	a, a
      002942 22                    9215 	ld	(hl+), a
      002943 22                    9216 	ld	(hl+), a
      002944 77                    9217 	ld	(hl), a
                                   9218 ;src/main.c:1030: updateMissileCount(0);
      002945 AF                    9219 	xor	a, a
      002946 F5                    9220 	push	af
      002947 33                    9221 	inc	sp
      002948 CDr9Dr09              9222 	call	_updateMissileCount
      00294B 33                    9223 	inc	sp
                                   9224 ;src/main.c:1031: set_win_tiles(17, 0,1,1,gunMap+2);
      00294C 11rB1r00              9225 	ld	de, #(_gunMap + 2)
      00294F D5                    9226 	push	de
      002950 21 01 01              9227 	ld	hl, #0x101
      002953 E5                    9228 	push	hl
      002954 21 11 00              9229 	ld	hl, #0x11
      002957 E5                    9230 	push	hl
      002958 CDr00r00              9231 	call	_set_win_tiles
      00295B E8 06                 9232 	add	sp, #6
                                   9233 ;src/main.c:1035: pickup = ammo;//upgrade;
      00295D 11 07 00              9234 	ld	de, #0x0007
      002960 D5                    9235 	push	de
      002961 11r8Br00              9236 	ld	de, #_ammo
      002964 D5                    9237 	push	de
      002965 11rE1r00              9238 	ld	de, #_pickup
      002968 D5                    9239 	push	de
      002969 CDr00r00              9240 	call	___memcpy
      00296C E8 06                 9241 	add	sp, #6
                                   9242 ;src/main.c:1036: pickup.active = 1;
      00296E 21rE5r00              9243 	ld	hl, #(_pickup + 4)
      002971 36 01                 9244 	ld	(hl), #0x01
                                   9245 ;src/main.c:1042: set_sprite_data(0x70, 4, Pickups);
      002973 11r08r07              9246 	ld	de, #_Pickups
      002976 D5                    9247 	push	de
      002977 21 70 04              9248 	ld	hl, #0x470
      00297A E5                    9249 	push	hl
      00297B CDr00r00              9250 	call	_set_sprite_data
      00297E E8 04                 9251 	add	sp, #4
                                   9252 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002980 21r0Er00              9253 	ld	hl, #(_shadow_OAM + 14)
      002983 36 70                 9254 	ld	(hl), #0x70
                                   9255 ;src/main.c:1044: pickup.x = 100;
      002985 21rE1r00              9256 	ld	hl, #_pickup
      002988 3E 64                 9257 	ld	a, #0x64
      00298A 22                    9258 	ld	(hl+), a
      00298B 36 00                 9259 	ld	(hl), #0x00
                                   9260 ;src/main.c:1045: pickup.y = 80;
      00298D 01rE3r00              9261 	ld	bc, #_pickup + 2
      002990 69                    9262 	ld	l, c
      002991 60                    9263 	ld	h, b
      002992 3E 50                 9264 	ld	a, #0x50
      002994 22                    9265 	ld	(hl+), a
      002995 36 00                 9266 	ld	(hl), #0x00
                                   9267 ;src/main.c:1046: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002997 0A                    9268 	ld	a, (bc)
      002998 C6 0C                 9269 	add	a, #0x0c
      00299A 47                    9270 	ld	b, a
      00299B FArE1r00              9271 	ld	a, (#_pickup + 0)
      00299E C6 04                 9272 	add	a, #0x04
      0029A0 4F                    9273 	ld	c, a
                                   9274 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0029A1 21r0Cr00              9275 	ld	hl, #(_shadow_OAM + 12)
                                   9276 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0029A4 78                    9277 	ld	a, b
      0029A5 22                    9278 	ld	(hl+), a
      0029A6 71                    9279 	ld	(hl), c
                                   9280 ;src/main.c:1046: move_sprite(3, pickup.x + 4, pickup.y + 12);
                                   9281 ;src/main.c:1048: }
      0029A7 C9                    9282 	ret
                                   9283 ;src/main.c:1050: void main(){
                                   9284 ;	---------------------------------
                                   9285 ; Function main
                                   9286 ; ---------------------------------
      0029A8                       9287 _main::
                                   9288 ;src/main.c:1053: initEnemyOptions();
      0029A8 CDr8Cr27              9289 	call	_initEnemyOptions
                                   9290 ;src/main.c:1056: STAT_REG = 0x45;
      0029AB 3E 45                 9291 	ld	a, #0x45
      0029AD E0r00                 9292 	ldh	(_STAT_REG + 0), a
                                   9293 ;src/main.c:1057: LYC_REG = 0x7e; //line 126
      0029AF 3E 7E                 9294 	ld	a, #0x7e
      0029B1 E0r00                 9295 	ldh	(_LYC_REG + 0), a
                                   9296 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0029B3 F3                    9297 	di
                                   9298 ;src/main.c:1059: add_LCD(interruptLCD);
      0029B4 11r00r00              9299 	ld	de, #_interruptLCD
      0029B7 D5                    9300 	push	de
      0029B8 CDr00r00              9301 	call	_add_LCD
      0029BB 33                    9302 	inc	sp
      0029BC 33                    9303 	inc	sp
                                   9304 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      0029BD FB                    9305 	ei
                                   9306 ;src/main.c:1061: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      0029BE 3E 03                 9307 	ld	a, #0x03
      0029C0 F5                    9308 	push	af
      0029C1 33                    9309 	inc	sp
      0029C2 CDr00r00              9310 	call	_set_interrupts
      0029C5 33                    9311 	inc	sp
                                   9312 ;src/main.c:1065: NR52_REG = 0x80; // sound on 
      0029C6 3E 80                 9313 	ld	a, #0x80
      0029C8 E0r00                 9314 	ldh	(_NR52_REG + 0), a
                                   9315 ;src/main.c:1066: NR50_REG = 0x77; // volume
      0029CA 3E 77                 9316 	ld	a, #0x77
      0029CC E0r00                 9317 	ldh	(_NR50_REG + 0), a
                                   9318 ;src/main.c:1067: NR51_REG = 0xFF; // all channels
      0029CE 3E FF                 9319 	ld	a, #0xff
      0029D0 E0r00                 9320 	ldh	(_NR51_REG + 0), a
                                   9321 ;src/main.c:1071: waitpad(J_A);
      0029D2 3E 10                 9322 	ld	a, #0x10
      0029D4 F5                    9323 	push	af
      0029D5 33                    9324 	inc	sp
      0029D6 CDr00r00              9325 	call	_waitpad
      0029D9 33                    9326 	inc	sp
                                   9327 ;src/main.c:1072: uint16_t seed = LY_REG;
      0029DA F0r00                 9328 	ldh	a, (_LY_REG + 0)
      0029DC 4F                    9329 	ld	c, a
      0029DD 06 00                 9330 	ld	b, #0x00
                                   9331 ;src/main.c:1073: seed |= (uint16_t)DIV_REG << 8;
      0029DF F0r00                 9332 	ldh	a, (_DIV_REG + 0)
      0029E1 5F                    9333 	ld	e, a
      0029E2 AF                    9334 	xor	a, a
      0029E3 B1                    9335 	or	a, c
      0029E4 4F                    9336 	ld	c, a
      0029E5 7B                    9337 	ld	a, e
      0029E6 B0                    9338 	or	a, b
      0029E7 47                    9339 	ld	b, a
                                   9340 ;src/main.c:1074: initrand(seed);
      0029E8 C5                    9341 	push	bc
      0029E9 CDr00r00              9342 	call	_initrand
      0029EC E1                    9343 	pop	hl
                                   9344 ;src/main.c:1079: initGame();
      0029ED CDrF9r27              9345 	call	_initGame
                                   9346 ;src/main.c:1080: initEnemies(1);
      0029F0 3E 01                 9347 	ld	a, #0x01
      0029F2 F5                    9348 	push	af
      0029F3 33                    9349 	inc	sp
      0029F4 CDrC8r0C              9350 	call	_initEnemies
      0029F7 33                    9351 	inc	sp
                                   9352 ;src/main.c:1081: initProjectiles();
      0029F8 CDrE2r27              9353 	call	_initProjectiles
                                   9354 ;src/main.c:1083: while(1) {
      0029FB                       9355 00117$:
                                   9356 ;src/main.c:1084: SHOW_SPRITES;
      0029FB F0r00                 9357 	ldh	a, (_LCDC_REG + 0)
      0029FD F6 02                 9358 	or	a, #0x02
      0029FF E0r00                 9359 	ldh	(_LCDC_REG + 0), a
                                   9360 ;src/main.c:1086: joydata = joypad(); // query for button states
      002A01 CDr00r00              9361 	call	_joypad
      002A04 21rDCr00              9362 	ld	hl, #_joydata
      002A07 73                    9363 	ld	(hl), e
                                   9364 ;src/main.c:1088: updateDirection(); // set player direction
      002A08 CDr3Br0A              9365 	call	_updateDirection
                                   9366 ;src/main.c:1091: move(); 
      002A0B CDrE2r16              9367 	call	_move
                                   9368 ;src/main.c:1093: updateEnemyPositions();
      002A0E CDr73r0E              9369 	call	_updateEnemyPositions
                                   9370 ;src/main.c:1096: checkCollision(); 
      002A11 CDr6Ar1C              9371 	call	_checkCollision
                                   9372 ;src/main.c:791: if (shield < maxShield) {
      002A14 21r61r08              9373 	ld	hl, #_maxShield
      002A17 4E                    9374 	ld	c, (hl)
      002A18 59                    9375 	ld	e, c
      002A19 21rDEr00              9376 	ld	hl, #_shield
      002A1C 56                    9377 	ld	d, (hl)
      002A1D 7E                    9378 	ld	a, (hl)
      002A1E 91                    9379 	sub	a, c
      002A1F CB 7B                 9380 	bit	7, e
      002A21 28 07                 9381 	jr	Z, 00179$
      002A23 CB 7A                 9382 	bit	7, d
      002A25 20 08                 9383 	jr	NZ, 00180$
      002A27 BF                    9384 	cp	a, a
      002A28 18 05                 9385 	jr	00180$
      002A2A                       9386 00179$:
      002A2A CB 7A                 9387 	bit	7, d
      002A2C 28 01                 9388 	jr	Z, 00180$
      002A2E 37                    9389 	scf
      002A2F                       9390 00180$:
      002A2F 30 04                 9391 	jr	NC, 00125$
                                   9392 ;src/main.c:792: shield += 1;
      002A31 21rDEr00              9393 	ld	hl, #_shield
      002A34 34                    9394 	inc	(hl)
      002A35                       9395 00125$:
                                   9396 ;src/main.c:794: setHealthBar(0, hull);
      002A35 FArDDr00              9397 	ld	a, (#_hull)
      002A38 67                    9398 	ld	h, a
      002A39 2E 00                 9399 	ld	l, #0x00
      002A3B E5                    9400 	push	hl
      002A3C CDr62r08              9401 	call	_setHealthBar
      002A3F E1                    9402 	pop	hl
                                   9403 ;src/main.c:795: setHealthBar(1, shield);
      002A40 FArDEr00              9404 	ld	a, (#_shield)
      002A43 67                    9405 	ld	h, a
      002A44 2E 01                 9406 	ld	l, #0x01
      002A46 E5                    9407 	push	hl
      002A47 CDr62r08              9408 	call	_setHealthBar
      002A4A E1                    9409 	pop	hl
                                   9410 ;src/main.c:1101: if (joydata & J_B && fireCooldown == 0) {
      002A4B FArDCr00              9411 	ld	a, (#_joydata)
      002A4E CB 6F                 9412 	bit	5, a
      002A50 28 09                 9413 	jr	Z, 00102$
      002A52 FAr93r00              9414 	ld	a, (#_fireCooldown)
      002A55 B7                    9415 	or	a, a
      002A56 20 03                 9416 	jr	NZ, 00102$
                                   9417 ;src/main.c:1102: fire();
      002A58 CDrEEr1F              9418 	call	_fire
      002A5B                       9419 00102$:
                                   9420 ;src/main.c:1104: if (fireCooldown > 0) {
      002A5B 21r93r00              9421 	ld	hl, #_fireCooldown
      002A5E 7E                    9422 	ld	a, (hl)
      002A5F B7                    9423 	or	a, a
      002A60 28 01                 9424 	jr	Z, 00105$
                                   9425 ;src/main.c:1105: --fireCooldown;
      002A62 35                    9426 	dec	(hl)
      002A63                       9427 00105$:
                                   9428 ;src/main.c:1108: if (joydata & J_SELECT && switchDelay == 0) {
      002A63 FArDCr00              9429 	ld	a, (#_joydata)
      002A66 CB 77                 9430 	bit	6, a
      002A68 28 24                 9431 	jr	Z, 00112$
      002A6A FArAEr00              9432 	ld	a, (#_switchDelay)
      002A6D B7                    9433 	or	a, a
      002A6E 20 1E                 9434 	jr	NZ, 00112$
                                   9435 ;src/main.c:1109: if (currentGun == 0) {
      002A70 21rA8r00              9436 	ld	hl, #_currentGun
      002A73 7E                    9437 	ld	a, (hl)
      002A74 B7                    9438 	or	a, a
      002A75 20 04                 9439 	jr	NZ, 00109$
                                   9440 ;src/main.c:1110: currentGun = 1;
      002A77 36 01                 9441 	ld	(hl), #0x01
      002A79 18 0B                 9442 	jr	00110$
      002A7B                       9443 00109$:
                                   9444 ;src/main.c:1112: else if (currentGun == 1) {
      002A7B FArA8r00              9445 	ld	a, (#_currentGun)
      002A7E 3D                    9446 	dec	a
      002A7F 20 05                 9447 	jr	NZ, 00110$
                                   9448 ;src/main.c:1113: currentGun = 0;
      002A81 21rA8r00              9449 	ld	hl, #_currentGun
      002A84 36 00                 9450 	ld	(hl), #0x00
      002A86                       9451 00110$:
                                   9452 ;src/main.c:1115: setGunIcon();
      002A86 CDrBBr1F              9453 	call	_setGunIcon
                                   9454 ;src/main.c:1116: switchDelay = 30;
      002A89 21rAEr00              9455 	ld	hl, #_switchDelay
      002A8C 36 1E                 9456 	ld	(hl), #0x1e
      002A8E                       9457 00112$:
                                   9458 ;src/main.c:1118: if (switchDelay != 0) {
      002A8E 21rAEr00              9459 	ld	hl, #_switchDelay
      002A91 7E                    9460 	ld	a, (hl)
      002A92 B7                    9461 	or	a, a
      002A93 28 01                 9462 	jr	Z, 00115$
                                   9463 ;src/main.c:1119: switchDelay--;
      002A95 35                    9464 	dec	(hl)
      002A96                       9465 00115$:
                                   9466 ;src/main.c:1121: moveProjectiles();
      002A96 CDr87r25              9467 	call	_moveProjectiles
                                   9468 ;src/main.c:1122: tickPickups();
      002A99 CDrE6r26              9469 	call	_tickPickups
                                   9470 ;src/main.c:1127: SHOW_WIN;	
      002A9C F0r00                 9471 	ldh	a, (_LCDC_REG + 0)
      002A9E F6 20                 9472 	or	a, #0x20
      002AA0 E0r00                 9473 	ldh	(_LCDC_REG + 0), a
                                   9474 ;src/main.c:1128: wait_vbl_done(); // Idle until next frame
      002AA2 CDr00r00              9475 	call	_wait_vbl_done
                                   9476 ;src/main.c:1133: }
      002AA5 C3rFBr29              9477 	jp	00117$
                                   9478 	.area _CODE
                                   9479 	.area _INITIALIZER
      000000                       9480 __xinit__hullabel:
      000000 12                    9481 	.db #0x12	; 18
      000001 1F                    9482 	.db #0x1f	; 31
      000002 16                    9483 	.db #0x16	; 22
      000003 16                    9484 	.db #0x16	; 22
      000004                       9485 __xinit__shieldlabel:
      000004 1D                    9486 	.db #0x1d	; 29
      000005 12                    9487 	.db #0x12	; 18
      000006 16                    9488 	.db #0x16	; 22
      000007 0E                    9489 	.db #0x0e	; 14
      000008                       9490 __xinit__weaponlabel:
      000008 21                    9491 	.db #0x21	; 33
      000009 0F                    9492 	.db #0x0f	; 15
      00000A 1A                    9493 	.db #0x1a	; 26
      00000B 18                    9494 	.db #0x18	; 24
      00000C                       9495 __xinit__scorelabel:
      00000C 1D                    9496 	.db #0x1d	; 29
      00000D 0D                    9497 	.db #0x0d	; 13
      00000E 1C                    9498 	.db #0x1c	; 28
      00000F 0F                    9499 	.db #0x0f	; 15
      000010                       9500 __xinit__blob:
      000010 00 00                 9501 	.dw #0x0000
      000012 00 00                 9502 	.dw #0x0000
      000014 00                    9503 	.db #0x00	;  0
      000015 00                    9504 	.db #0x00	;  0
      000016 40                    9505 	.db #0x40	; 64
      000017 00                    9506 	.db #0x00	; 0
      000018 01                    9507 	.db #0x01	; 1
      000019 01                    9508 	.db #0x01	; 1
      00001A 01                    9509 	.db #0x01	; 1
      00001B 32                    9510 	.db #0x32	; 50	'2'
      00001C 03                    9511 	.db #0x03	;  3
      00001D 01                    9512 	.db #0x01	; 1
      00001E 00                    9513 	.db #0x00	;  0
      00001F 00                    9514 	.db #0x00	;  0
      000020                       9515 __xinit__bomb:
      000020 00 00                 9516 	.dw #0x0000
      000022 00 00                 9517 	.dw #0x0000
      000024 00                    9518 	.db #0x00	;  0
      000025 00                    9519 	.db #0x00	;  0
      000026 42                    9520 	.db #0x42	; 66	'B'
      000027 00                    9521 	.db #0x00	; 0
      000028 01                    9522 	.db #0x01	; 1
      000029 01                    9523 	.db #0x01	; 1
      00002A 01                    9524 	.db #0x01	; 1
      00002B 32                    9525 	.db #0x32	; 50	'2'
      00002C 05                    9526 	.db #0x05	;  5
      00002D 01                    9527 	.db #0x01	; 1
      00002E 00                    9528 	.db #0x00	;  0
      00002F 00                    9529 	.db #0x00	;  0
      000030                       9530 __xinit__miniship:
      000030 00 00                 9531 	.dw #0x0000
      000032 00 00                 9532 	.dw #0x0000
      000034 00                    9533 	.db #0x00	;  0
      000035 00                    9534 	.db #0x00	;  0
      000036 44                    9535 	.db #0x44	; 68	'D'
      000037 00                    9536 	.db #0x00	; 0
      000038 01                    9537 	.db #0x01	; 1
      000039 01                    9538 	.db #0x01	; 1
      00003A 01                    9539 	.db #0x01	; 1
      00003B 32                    9540 	.db #0x32	; 50	'2'
      00003C 05                    9541 	.db #0x05	;  5
      00003D 01                    9542 	.db #0x01	; 1
      00003E 00                    9543 	.db #0x00	;  0
      00003F 00                    9544 	.db #0x00	;  0
      000040                       9545 __xinit__bigblob:
      000040 00 00                 9546 	.dw #0x0000
      000042 00 00                 9547 	.dw #0x0000
      000044 00                    9548 	.db #0x00	;  0
      000045 00                    9549 	.db #0x00	;  0
      000046 50                    9550 	.db #0x50	; 80	'P'
      000047 52                    9551 	.db #0x52	; 82	'R'
      000048 02                    9552 	.db #0x02	; 2
      000049 01                    9553 	.db #0x01	; 1
      00004A 01                    9554 	.db #0x01	; 1
      00004B 32                    9555 	.db #0x32	; 50	'2'
      00004C 03                    9556 	.db #0x03	;  3
      00004D 01                    9557 	.db #0x01	; 1
      00004E 00                    9558 	.db #0x00	;  0
      00004F 00                    9559 	.db #0x00	;  0
      000050                       9560 __xinit__shieldship:
      000050 00 00                 9561 	.dw #0x0000
      000052 00 00                 9562 	.dw #0x0000
      000054 00                    9563 	.db #0x00	;  0
      000055 00                    9564 	.db #0x00	;  0
      000056 54                    9565 	.db #0x54	; 84	'T'
      000057 56                    9566 	.db #0x56	; 86	'V'
      000058 02                    9567 	.db #0x02	; 2
      000059 01                    9568 	.db #0x01	; 1
      00005A 01                    9569 	.db #0x01	; 1
      00005B 32                    9570 	.db #0x32	; 50	'2'
      00005C 03                    9571 	.db #0x03	;  3
      00005D 01                    9572 	.db #0x01	; 1
      00005E 00                    9573 	.db #0x00	;  0
      00005F 00                    9574 	.db #0x00	;  0
      000060                       9575 __xinit__singleGun:
      000060 00 00                 9576 	.dw #0x0000
      000062 00 00                 9577 	.dw #0x0000
      000064 00                    9578 	.db #0x00	;  0
      000065 00                    9579 	.db #0x00	;  0
      000066 FF                    9580 	.db #0xff	; -1
      000067 02                    9581 	.db #0x02	; 2
      000068 00                    9582 	.db #0x00	; 0
      000069 01                    9583 	.db #0x01	; 1
      00006A 0F                    9584 	.db #0x0f	; 15
      00006B 20                    9585 	.db #0x20	; 32
      00006C                       9586 __xinit__doubleGun:
      00006C 00 00                 9587 	.dw #0x0000
      00006E 00 00                 9588 	.dw #0x0000
      000070 00                    9589 	.db #0x00	;  0
      000071 00                    9590 	.db #0x00	;  0
      000072 FF                    9591 	.db #0xff	; -1
      000073 02                    9592 	.db #0x02	; 2
      000074 00                    9593 	.db #0x00	; 0
      000075 01                    9594 	.db #0x01	; 1
      000076 0F                    9595 	.db #0x0f	; 15
      000077 26                    9596 	.db #0x26	; 38
      000078                       9597 __xinit__missile:
      000078 00 00                 9598 	.dw #0x0000
      00007A 00 00                 9599 	.dw #0x0000
      00007C 00                    9600 	.db #0x00	;  0
      00007D 00                    9601 	.db #0x00	;  0
      00007E FF                    9602 	.db #0xff	; -1
      00007F 01                    9603 	.db #0x01	; 1
      000080 00                    9604 	.db #0x00	; 0
      000081 01                    9605 	.db #0x01	; 1
      000082 1E                    9606 	.db #0x1e	; 30
      000083 2C                    9607 	.db #0x2c	; 44
      000084                       9608 __xinit__upgrade:
      000084 00 00                 9609 	.dw #0x0000
      000086 00 00                 9610 	.dw #0x0000
      000088 00                    9611 	.db #0x00	; 0
      000089 00                    9612 	.db #0x00	; 0
      00008A 00                    9613 	.db #0x00	; 0
      00008B                       9614 __xinit__ammo:
      00008B 00 00                 9615 	.dw #0x0000
      00008D 00 00                 9616 	.dw #0x0000
      00008F 00                    9617 	.db #0x00	; 0
      000090 01                    9618 	.db #0x01	; 1
      000091 05                    9619 	.db #0x05	; 5
      000092                       9620 __xinit__oldestProjectile:
      000092 00                    9621 	.db #0x00	; 0
      000093                       9622 __xinit__fireCooldown:
      000093 00                    9623 	.db #0x00	; 0
      000094                       9624 __xinit__xDir:
      000094 00                    9625 	.db #0x00	;  0
      000095                       9626 __xinit__yDir:
      000095 FF                    9627 	.db #0xff	; -1
      000096                       9628 __xinit__xSpeed:
      000096 00                    9629 	.db #0x00	;  0
      000097                       9630 __xinit__ySpeed:
      000097 00                    9631 	.db #0x00	;  0
      000098                       9632 __xinit__playerX:
      000098 00 0A                 9633 	.dw #0x0a00
      00009A                       9634 __xinit__playerY:
      00009A 00 0A                 9635 	.dw #0x0a00
      00009C                       9636 __xinit__playerDrawX:
      00009C 50                    9637 	.db #0x50	; 80	'P'
      00009D                       9638 __xinit__playerDrawY:
      00009D 50                    9639 	.db #0x50	; 80	'P'
      00009E                       9640 __xinit__bgX:
      00009E 00 00                 9641 	.dw #0x0000
      0000A0                       9642 __xinit__bgY:
      0000A0 00 00                 9643 	.dw #0x0000
      0000A2                       9644 __xinit__xOverflow:
      0000A2 00 00                 9645 	.dw #0x0000
      0000A4                       9646 __xinit__yOverflow:
      0000A4 00 00                 9647 	.dw #0x0000
      0000A6                       9648 __xinit__enemyCollisionCount:
      0000A6 00                    9649 	.db #0x00	; 0
      0000A7                       9650 __xinit__gunLevel:
      0000A7 00                    9651 	.db #0x00	; 0
      0000A8                       9652 __xinit__currentGun:
      0000A8 00                    9653 	.db #0x00	; 0
      0000A9                       9654 __xinit__missiles:
      0000A9 01                    9655 	.db #0x01	; 1
      0000AA                       9656 __xinit__MISSILES:
      0000AA 01 00 00 00           9657 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000AE                       9658 __xinit__switchDelay:
      0000AE 00                    9659 	.db #0x00	; 0
      0000AF                       9660 __xinit__gunMap:
      0000AF 53                    9661 	.db #0x53	; 83	'S'
      0000B0 5B                    9662 	.db #0x5b	; 91
      0000B1 61                    9663 	.db #0x61	; 97	'a'
      0000B2                       9664 __xinit__score:
      0000B2 00 00                 9665 	.dw #0x0000
      0000B4                       9666 __xinit__SCORE:
      0000B4 00 00 00 00           9667 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B8                       9668 __xinit__INCREMENT:
      0000B8 01 00 00 00           9669 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   9670 	.area _CABS (ABS)
