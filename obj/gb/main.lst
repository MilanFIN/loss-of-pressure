                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _showLevelSelection
                                     13 	.globl _clearScreen
                                     14 	.globl _showMenu
                                     15 	.globl _updateMenu
                                     16 	.globl _showStartScreen
                                     17 	.globl _initFont
                                     18 	.globl _showControls
                                     19 	.globl _showScoreScreen
                                     20 	.globl _initGame
                                     21 	.globl _initProjectiles
                                     22 	.globl _initEnemyOptions
                                     23 	.globl _tickEx
                                     24 	.globl _tickPickups
                                     25 	.globl _moveProjectiles
                                     26 	.globl _fire
                                     27 	.globl _setGunIcon
                                     28 	.globl _checkCollision
                                     29 	.globl _killEnemy
                                     30 	.globl _spawnPickup
                                     31 	.globl _takeDamage
                                     32 	.globl _move
                                     33 	.globl _updateEnemyPositions
                                     34 	.globl _initEnemy
                                     35 	.globl _initEnemies
                                     36 	.globl _playSound
                                     37 	.globl _updateDirection
                                     38 	.globl _incrementScore
                                     39 	.globl _updateMissileCount
                                     40 	.globl _updateScore
                                     41 	.globl _setHealthBar
                                     42 	.globl _interruptLCD
                                     43 	.globl _bcd2text
                                     44 	.globl _bcd_sub
                                     45 	.globl _bcd_add
                                     46 	.globl _rand
                                     47 	.globl _initrand
                                     48 	.globl _font_set
                                     49 	.globl _font_load
                                     50 	.globl _font_init
                                     51 	.globl _set_sprite_data
                                     52 	.globl _set_win_tiles
                                     53 	.globl _set_bkg_tiles
                                     54 	.globl _set_bkg_data
                                     55 	.globl _wait_vbl_done
                                     56 	.globl _set_interrupts
                                     57 	.globl _waitpadup
                                     58 	.globl _waitpad
                                     59 	.globl _joypad
                                     60 	.globl _add_LCD
                                     61 	.globl _auxTick
                                     62 	.globl _exTiles
                                     63 	.globl _oldestEx
                                     64 	.globl _INCREMENT
                                     65 	.globl _SCORE
                                     66 	.globl _score
                                     67 	.globl _gunMap
                                     68 	.globl _switchDelay
                                     69 	.globl _MISSILES
                                     70 	.globl _missiles
                                     71 	.globl _currentGun
                                     72 	.globl _gunLevel
                                     73 	.globl _enemyCollisionCount
                                     74 	.globl _yOverflow
                                     75 	.globl _xOverflow
                                     76 	.globl _prevJoyData
                                     77 	.globl _joydata
                                     78 	.globl _bgY
                                     79 	.globl _bgX
                                     80 	.globl _playerDrawY
                                     81 	.globl _playerDrawX
                                     82 	.globl _playerY
                                     83 	.globl _playerX
                                     84 	.globl _ySpeed
                                     85 	.globl _xSpeed
                                     86 	.globl _yDir
                                     87 	.globl _xDir
                                     88 	.globl _fireCooldown
                                     89 	.globl _oldestProjectile
                                     90 	.globl _missile
                                     91 	.globl _doubleGun
                                     92 	.globl _singleGun
                                     93 	.globl _shieldship
                                     94 	.globl _bigblob
                                     95 	.globl _miniship
                                     96 	.globl _bomb
                                     97 	.globl _blob
                                     98 	.globl _bonusLabel
                                     99 	.globl _marshabLabel
                                    100 	.globl _asteroids2Label
                                    101 	.globl _asteroids1Label
                                    102 	.globl _voidLabel
                                    103 	.globl _selectLevelLabel
                                    104 	.globl _controlsLabel
                                    105 	.globl _playLabel
                                    106 	.globl _pressStartLabel
                                    107 	.globl _emptyRow
                                    108 	.globl _toContinueLabel
                                    109 	.globl _pressAnyKeyLabel
                                    110 	.globl _endScoreLabel
                                    111 	.globl _scorelabel
                                    112 	.globl _weaponlabel
                                    113 	.globl _shieldlabel
                                    114 	.globl _hullabel
                                    115 	.globl _explosions
                                    116 	.globl _pickup
                                    117 	.globl _min_font
                                    118 	.globl _shield
                                    119 	.globl _hull
                                    120 	.globl _projectiles
                                    121 	.globl _enemies
                                    122 	.globl _enemyOptions
                                    123 	.globl _AUXTICKFREQUENCY
                                    124 	.globl _exTileCount
                                    125 	.globl _EXPLFRAMETIME
                                    126 	.globl _exCount
                                    127 	.globl _SPLASHDROPOFF
                                    128 	.globl _MAXGUNLEVEL
                                    129 	.globl _maxShield
                                    130 	.globl _maxHull
                                    131 	.globl _PLAYERSIZE
                                    132 	.globl _PROJECTILECOUNT
                                    133 	.globl _ySpawnPositions
                                    134 	.globl _xSpawnPositions
                                    135 	.globl _ENEMYCOUNT
                                    136 	.globl _EMPTYSPRITE
                                    137 	.globl _BLANK
                                    138 	.globl _BLANKSIZE
                                    139 	.globl _MenuPicker
                                    140 	.globl _Ex3
                                    141 	.globl _Ex2
                                    142 	.globl _Ex1
                                    143 	.globl _ex
                                    144 	.globl _Player1
                                    145 	.globl _Pickups
                                    146 	.globl _health
                                    147 	.globl _ammo
                                    148 	.globl _upgrade
                                    149 	.globl _ProjectileTiles
                                    150 	.globl _largeenemies
                                    151 	.globl _enemy1
                                    152 	.globl _enemyOptionCount
                                    153 	.globl _healthblock
                                    154 	.globl _marsbackground
                                    155 	.globl _marstiles
                                    156 	.globl _backgroundtiles
                                    157 	.globl _background1
                                    158 	.globl _cross
                                    159 ;--------------------------------------------------------
                                    160 ; special function registers
                                    161 ;--------------------------------------------------------
                                    162 ;--------------------------------------------------------
                                    163 ; ram data
                                    164 ;--------------------------------------------------------
                                    165 	.area _DATA
      000000                        166 _enemyOptions::
      000000                        167 	.ds 90
      00005A                        168 _enemies::
      00005A                        169 	.ds 90
      0000B4                        170 _projectiles::
      0000B4                        171 	.ds 65
      0000F5                        172 _hull::
      0000F5                        173 	.ds 1
      0000F6                        174 _shield::
      0000F6                        175 	.ds 1
      0000F7                        176 _min_font::
      0000F7                        177 	.ds 2
      0000F9                        178 _pickup::
      0000F9                        179 	.ds 9
      000102                        180 _explosions::
      000102                        181 	.ds 24
                                    182 ;--------------------------------------------------------
                                    183 ; ram data
                                    184 ;--------------------------------------------------------
                                    185 	.area _INITIALIZED
      000000                        186 _hullabel::
      000000                        187 	.ds 4
      000004                        188 _shieldlabel::
      000004                        189 	.ds 4
      000008                        190 _weaponlabel::
      000008                        191 	.ds 4
      00000C                        192 _scorelabel::
      00000C                        193 	.ds 4
      000010                        194 _endScoreLabel::
      000010                        195 	.ds 5
      000015                        196 _pressAnyKeyLabel::
      000015                        197 	.ds 13
      000022                        198 _toContinueLabel::
      000022                        199 	.ds 11
      00002D                        200 _emptyRow::
      00002D                        201 	.ds 20
      000041                        202 _pressStartLabel::
      000041                        203 	.ds 11
      00004C                        204 _playLabel::
      00004C                        205 	.ds 4
      000050                        206 _controlsLabel::
      000050                        207 	.ds 8
      000058                        208 _selectLevelLabel::
      000058                        209 	.ds 12
      000064                        210 _voidLabel::
      000064                        211 	.ds 4
      000068                        212 _asteroids1Label::
      000068                        213 	.ds 11
      000073                        214 _asteroids2Label::
      000073                        215 	.ds 11
      00007E                        216 _marshabLabel::
      00007E                        217 	.ds 8
      000086                        218 _bonusLabel::
      000086                        219 	.ds 5
      00008B                        220 _blob::
      00008B                        221 	.ds 18
      00009D                        222 _bomb::
      00009D                        223 	.ds 18
      0000AF                        224 _miniship::
      0000AF                        225 	.ds 18
      0000C1                        226 _bigblob::
      0000C1                        227 	.ds 18
      0000D3                        228 _shieldship::
      0000D3                        229 	.ds 18
      0000E5                        230 _singleGun::
      0000E5                        231 	.ds 13
      0000F2                        232 _doubleGun::
      0000F2                        233 	.ds 13
      0000FF                        234 _missile::
      0000FF                        235 	.ds 13
      00010C                        236 _oldestProjectile::
      00010C                        237 	.ds 1
      00010D                        238 _fireCooldown::
      00010D                        239 	.ds 1
      00010E                        240 _xDir::
      00010E                        241 	.ds 1
      00010F                        242 _yDir::
      00010F                        243 	.ds 1
      000110                        244 _xSpeed::
      000110                        245 	.ds 1
      000111                        246 _ySpeed::
      000111                        247 	.ds 1
      000112                        248 _playerX::
      000112                        249 	.ds 2
      000114                        250 _playerY::
      000114                        251 	.ds 2
      000116                        252 _playerDrawX::
      000116                        253 	.ds 1
      000117                        254 _playerDrawY::
      000117                        255 	.ds 1
      000118                        256 _bgX::
      000118                        257 	.ds 2
      00011A                        258 _bgY::
      00011A                        259 	.ds 2
      00011C                        260 _joydata::
      00011C                        261 	.ds 1
      00011D                        262 _prevJoyData::
      00011D                        263 	.ds 1
      00011E                        264 _xOverflow::
      00011E                        265 	.ds 2
      000120                        266 _yOverflow::
      000120                        267 	.ds 2
      000122                        268 _enemyCollisionCount::
      000122                        269 	.ds 1
      000123                        270 _gunLevel::
      000123                        271 	.ds 1
      000124                        272 _currentGun::
      000124                        273 	.ds 1
      000125                        274 _missiles::
      000125                        275 	.ds 1
      000126                        276 _MISSILES::
      000126                        277 	.ds 4
      00012A                        278 _switchDelay::
      00012A                        279 	.ds 1
      00012B                        280 _gunMap::
      00012B                        281 	.ds 3
      00012E                        282 _score::
      00012E                        283 	.ds 2
      000130                        284 _SCORE::
      000130                        285 	.ds 4
      000134                        286 _INCREMENT::
      000134                        287 	.ds 4
      000138                        288 _oldestEx::
      000138                        289 	.ds 1
      000139                        290 _exTiles::
      000139                        291 	.ds 3
      00013C                        292 _auxTick::
      00013C                        293 	.ds 1
                                    294 ;--------------------------------------------------------
                                    295 ; absolute external ram data
                                    296 ;--------------------------------------------------------
                                    297 	.area _DABS (ABS)
                                    298 ;--------------------------------------------------------
                                    299 ; global & static initialisations
                                    300 ;--------------------------------------------------------
                                    301 	.area _HOME
                                    302 	.area _GSINIT
                                    303 	.area _GSFINAL
                                    304 	.area _GSINIT
                                    305 ;--------------------------------------------------------
                                    306 ; Home
                                    307 ;--------------------------------------------------------
                                    308 	.area _HOME
                                    309 	.area _HOME
                                    310 ;--------------------------------------------------------
                                    311 ; code
                                    312 ;--------------------------------------------------------
                                    313 	.area _CODE
                                    314 ;src/main.c:161: void interruptLCD()
                                    315 ;	---------------------------------
                                    316 ; Function interruptLCD
                                    317 ; ---------------------------------
      000000                        318 _interruptLCD::
                                    319 ;src/main.c:163: HIDE_SPRITES;
      000000 F0r00                  320 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  321 	and	a, #0xfd
      000004 E0r00                  322 	ldh	(_LCDC_REG + 0), a
                                    323 ;src/main.c:164: }
      000006 C9                     324 	ret
      000007                        325 _cross:
      000007 18                     326 	.db #0x18	; 24
      000008 18                     327 	.db #0x18	; 24
      000009 18                     328 	.db #0x18	; 24
      00000A 18                     329 	.db #0x18	; 24
      00000B 3C                     330 	.db #0x3c	; 60
      00000C 3C                     331 	.db #0x3c	; 60
      00000D 3C                     332 	.db #0x3c	; 60
      00000E 3C                     333 	.db #0x3c	; 60
      00000F 7E                     334 	.db #0x7e	; 126
      000010 7E                     335 	.db #0x7e	; 126
      000011 7E                     336 	.db #0x7e	; 126
      000012 7E                     337 	.db #0x7e	; 126
      000013 FF                     338 	.db #0xff	; 255
      000014 FF                     339 	.db #0xff	; 255
      000015 FF                     340 	.db #0xff	; 255
      000016 FF                     341 	.db #0xff	; 255
      000017 0F                     342 	.db #0x0f	; 15
      000018 0F                     343 	.db #0x0f	; 15
      000019 3F                     344 	.db #0x3f	; 63
      00001A 3F                     345 	.db #0x3f	; 63
      00001B FF                     346 	.db #0xff	; 255
      00001C FF                     347 	.db #0xff	; 255
      00001D FF                     348 	.db #0xff	; 255
      00001E FF                     349 	.db #0xff	; 255
      00001F 7E                     350 	.db #0x7e	; 126
      000020 7E                     351 	.db #0x7e	; 126
      000021 3E                     352 	.db #0x3e	; 62
      000022 3E                     353 	.db #0x3e	; 62
      000023 1C                     354 	.db #0x1c	; 28
      000024 1C                     355 	.db #0x1c	; 28
      000025 0C                     356 	.db #0x0c	; 12
      000026 0C                     357 	.db #0x0c	; 12
      000027 C0                     358 	.db #0xc0	; 192
      000028 C0                     359 	.db #0xc0	; 192
      000029 F0                     360 	.db #0xf0	; 240
      00002A F0                     361 	.db #0xf0	; 240
      00002B FC                     362 	.db #0xfc	; 252
      00002C FC                     363 	.db #0xfc	; 252
      00002D FF                     364 	.db #0xff	; 255
      00002E FF                     365 	.db #0xff	; 255
      00002F FF                     366 	.db #0xff	; 255
      000030 FF                     367 	.db #0xff	; 255
      000031 FC                     368 	.db #0xfc	; 252
      000032 FC                     369 	.db #0xfc	; 252
      000033 F0                     370 	.db #0xf0	; 240
      000034 F0                     371 	.db #0xf0	; 240
      000035 C0                     372 	.db #0xc0	; 192
      000036 C0                     373 	.db #0xc0	; 192
      000037 0C                     374 	.db #0x0c	; 12
      000038 0C                     375 	.db #0x0c	; 12
      000039 1C                     376 	.db #0x1c	; 28
      00003A 1C                     377 	.db #0x1c	; 28
      00003B 3E                     378 	.db #0x3e	; 62
      00003C 3E                     379 	.db #0x3e	; 62
      00003D 7E                     380 	.db #0x7e	; 126
      00003E 7E                     381 	.db #0x7e	; 126
      00003F FF                     382 	.db #0xff	; 255
      000040 FF                     383 	.db #0xff	; 255
      000041 FF                     384 	.db #0xff	; 255
      000042 FF                     385 	.db #0xff	; 255
      000043 3F                     386 	.db #0x3f	; 63
      000044 3F                     387 	.db #0x3f	; 63
      000045 0F                     388 	.db #0x0f	; 15
      000046 0F                     389 	.db #0x0f	; 15
      000047 FF                     390 	.db #0xff	; 255
      000048 FF                     391 	.db #0xff	; 255
      000049 FF                     392 	.db #0xff	; 255
      00004A FF                     393 	.db #0xff	; 255
      00004B 7E                     394 	.db #0x7e	; 126
      00004C 7E                     395 	.db #0x7e	; 126
      00004D 7E                     396 	.db #0x7e	; 126
      00004E 7E                     397 	.db #0x7e	; 126
      00004F 3C                     398 	.db #0x3c	; 60
      000050 3C                     399 	.db #0x3c	; 60
      000051 3C                     400 	.db #0x3c	; 60
      000052 3C                     401 	.db #0x3c	; 60
      000053 18                     402 	.db #0x18	; 24
      000054 18                     403 	.db #0x18	; 24
      000055 18                     404 	.db #0x18	; 24
      000056 18                     405 	.db #0x18	; 24
      000057 30                     406 	.db #0x30	; 48	'0'
      000058 30                     407 	.db #0x30	; 48	'0'
      000059 38                     408 	.db #0x38	; 56	'8'
      00005A 38                     409 	.db #0x38	; 56	'8'
      00005B 7C                     410 	.db #0x7c	; 124
      00005C 7C                     411 	.db #0x7c	; 124
      00005D 7E                     412 	.db #0x7e	; 126
      00005E 7E                     413 	.db #0x7e	; 126
      00005F FF                     414 	.db #0xff	; 255
      000060 FF                     415 	.db #0xff	; 255
      000061 FF                     416 	.db #0xff	; 255
      000062 FF                     417 	.db #0xff	; 255
      000063 FC                     418 	.db #0xfc	; 252
      000064 FC                     419 	.db #0xfc	; 252
      000065 F0                     420 	.db #0xf0	; 240
      000066 F0                     421 	.db #0xf0	; 240
      000067 03                     422 	.db #0x03	; 3
      000068 03                     423 	.db #0x03	; 3
      000069 0F                     424 	.db #0x0f	; 15
      00006A 0F                     425 	.db #0x0f	; 15
      00006B 3F                     426 	.db #0x3f	; 63
      00006C 3F                     427 	.db #0x3f	; 63
      00006D FF                     428 	.db #0xff	; 255
      00006E FF                     429 	.db #0xff	; 255
      00006F FF                     430 	.db #0xff	; 255
      000070 FF                     431 	.db #0xff	; 255
      000071 3F                     432 	.db #0x3f	; 63
      000072 3F                     433 	.db #0x3f	; 63
      000073 0F                     434 	.db #0x0f	; 15
      000074 0F                     435 	.db #0x0f	; 15
      000075 03                     436 	.db #0x03	; 3
      000076 03                     437 	.db #0x03	; 3
      000077 F0                     438 	.db #0xf0	; 240
      000078 F0                     439 	.db #0xf0	; 240
      000079 FC                     440 	.db #0xfc	; 252
      00007A FC                     441 	.db #0xfc	; 252
      00007B FF                     442 	.db #0xff	; 255
      00007C FF                     443 	.db #0xff	; 255
      00007D FF                     444 	.db #0xff	; 255
      00007E FF                     445 	.db #0xff	; 255
      00007F 7E                     446 	.db #0x7e	; 126
      000080 7E                     447 	.db #0x7e	; 126
      000081 7C                     448 	.db #0x7c	; 124
      000082 7C                     449 	.db #0x7c	; 124
      000083 38                     450 	.db #0x38	; 56	'8'
      000084 38                     451 	.db #0x38	; 56	'8'
      000085 30                     452 	.db #0x30	; 48	'0'
      000086 30                     453 	.db #0x30	; 48	'0'
      000087                        454 _background1:
      000087 25                     455 	.db #0x25	; 37
      000088 25                     456 	.db #0x25	; 37
      000089 25                     457 	.db #0x25	; 37
      00008A 25                     458 	.db #0x25	; 37
      00008B 25                     459 	.db #0x25	; 37
      00008C 25                     460 	.db #0x25	; 37
      00008D 25                     461 	.db #0x25	; 37
      00008E 25                     462 	.db #0x25	; 37
      00008F 25                     463 	.db #0x25	; 37
      000090 25                     464 	.db #0x25	; 37
      000091 25                     465 	.db #0x25	; 37
      000092 25                     466 	.db #0x25	; 37
      000093 25                     467 	.db #0x25	; 37
      000094 25                     468 	.db #0x25	; 37
      000095 25                     469 	.db #0x25	; 37
      000096 25                     470 	.db #0x25	; 37
      000097 25                     471 	.db #0x25	; 37
      000098 25                     472 	.db #0x25	; 37
      000099 25                     473 	.db #0x25	; 37
      00009A 25                     474 	.db #0x25	; 37
      00009B 25                     475 	.db #0x25	; 37
      00009C 25                     476 	.db #0x25	; 37
      00009D 25                     477 	.db #0x25	; 37
      00009E 25                     478 	.db #0x25	; 37
      00009F 25                     479 	.db #0x25	; 37
      0000A0 25                     480 	.db #0x25	; 37
      0000A1 25                     481 	.db #0x25	; 37
      0000A2 25                     482 	.db #0x25	; 37
      0000A3 25                     483 	.db #0x25	; 37
      0000A4 25                     484 	.db #0x25	; 37
      0000A5 25                     485 	.db #0x25	; 37
      0000A6 25                     486 	.db #0x25	; 37
      0000A7 25                     487 	.db #0x25	; 37
      0000A8 25                     488 	.db #0x25	; 37
      0000A9 25                     489 	.db #0x25	; 37
      0000AA 25                     490 	.db #0x25	; 37
      0000AB 25                     491 	.db #0x25	; 37
      0000AC 25                     492 	.db #0x25	; 37
      0000AD 25                     493 	.db #0x25	; 37
      0000AE 25                     494 	.db #0x25	; 37
      0000AF 25                     495 	.db #0x25	; 37
      0000B0 25                     496 	.db #0x25	; 37
      0000B1 25                     497 	.db #0x25	; 37
      0000B2 25                     498 	.db #0x25	; 37
      0000B3 25                     499 	.db #0x25	; 37
      0000B4 25                     500 	.db #0x25	; 37
      0000B5 25                     501 	.db #0x25	; 37
      0000B6 25                     502 	.db #0x25	; 37
      0000B7 25                     503 	.db #0x25	; 37
      0000B8 25                     504 	.db #0x25	; 37
      0000B9 25                     505 	.db #0x25	; 37
      0000BA 25                     506 	.db #0x25	; 37
      0000BB 25                     507 	.db #0x25	; 37
      0000BC 25                     508 	.db #0x25	; 37
      0000BD 25                     509 	.db #0x25	; 37
      0000BE 25                     510 	.db #0x25	; 37
      0000BF 25                     511 	.db #0x25	; 37
      0000C0 25                     512 	.db #0x25	; 37
      0000C1 25                     513 	.db #0x25	; 37
      0000C2 25                     514 	.db #0x25	; 37
      0000C3 25                     515 	.db #0x25	; 37
      0000C4 25                     516 	.db #0x25	; 37
      0000C5 25                     517 	.db #0x25	; 37
      0000C6 25                     518 	.db #0x25	; 37
      0000C7 25                     519 	.db #0x25	; 37
      0000C8 25                     520 	.db #0x25	; 37
      0000C9 25                     521 	.db #0x25	; 37
      0000CA 28                     522 	.db #0x28	; 40
      0000CB 25                     523 	.db #0x25	; 37
      0000CC 25                     524 	.db #0x25	; 37
      0000CD 25                     525 	.db #0x25	; 37
      0000CE 25                     526 	.db #0x25	; 37
      0000CF 25                     527 	.db #0x25	; 37
      0000D0 25                     528 	.db #0x25	; 37
      0000D1 25                     529 	.db #0x25	; 37
      0000D2 25                     530 	.db #0x25	; 37
      0000D3 25                     531 	.db #0x25	; 37
      0000D4 25                     532 	.db #0x25	; 37
      0000D5 25                     533 	.db #0x25	; 37
      0000D6 25                     534 	.db #0x25	; 37
      0000D7 25                     535 	.db #0x25	; 37
      0000D8 25                     536 	.db #0x25	; 37
      0000D9 25                     537 	.db #0x25	; 37
      0000DA 25                     538 	.db #0x25	; 37
      0000DB 25                     539 	.db #0x25	; 37
      0000DC 26                     540 	.db #0x26	; 38
      0000DD 25                     541 	.db #0x25	; 37
      0000DE 25                     542 	.db #0x25	; 37
      0000DF 25                     543 	.db #0x25	; 37
      0000E0 25                     544 	.db #0x25	; 37
      0000E1 25                     545 	.db #0x25	; 37
      0000E2 25                     546 	.db #0x25	; 37
      0000E3 25                     547 	.db #0x25	; 37
      0000E4 25                     548 	.db #0x25	; 37
      0000E5 25                     549 	.db #0x25	; 37
      0000E6 25                     550 	.db #0x25	; 37
      0000E7 25                     551 	.db #0x25	; 37
      0000E8 25                     552 	.db #0x25	; 37
      0000E9 25                     553 	.db #0x25	; 37
      0000EA 25                     554 	.db #0x25	; 37
      0000EB 25                     555 	.db #0x25	; 37
      0000EC 25                     556 	.db #0x25	; 37
      0000ED 25                     557 	.db #0x25	; 37
      0000EE 25                     558 	.db #0x25	; 37
      0000EF 25                     559 	.db #0x25	; 37
      0000F0 25                     560 	.db #0x25	; 37
      0000F1 25                     561 	.db #0x25	; 37
      0000F2 25                     562 	.db #0x25	; 37
      0000F3 25                     563 	.db #0x25	; 37
      0000F4 25                     564 	.db #0x25	; 37
      0000F5 25                     565 	.db #0x25	; 37
      0000F6 25                     566 	.db #0x25	; 37
      0000F7 25                     567 	.db #0x25	; 37
      0000F8 25                     568 	.db #0x25	; 37
      0000F9 25                     569 	.db #0x25	; 37
      0000FA 25                     570 	.db #0x25	; 37
      0000FB 25                     571 	.db #0x25	; 37
      0000FC 25                     572 	.db #0x25	; 37
      0000FD 25                     573 	.db #0x25	; 37
      0000FE 25                     574 	.db #0x25	; 37
      0000FF 25                     575 	.db #0x25	; 37
      000100 25                     576 	.db #0x25	; 37
      000101 28                     577 	.db #0x28	; 40
      000102 25                     578 	.db #0x25	; 37
      000103 25                     579 	.db #0x25	; 37
      000104 25                     580 	.db #0x25	; 37
      000105 25                     581 	.db #0x25	; 37
      000106 25                     582 	.db #0x25	; 37
      000107 25                     583 	.db #0x25	; 37
      000108 25                     584 	.db #0x25	; 37
      000109 25                     585 	.db #0x25	; 37
      00010A 25                     586 	.db #0x25	; 37
      00010B 25                     587 	.db #0x25	; 37
      00010C 25                     588 	.db #0x25	; 37
      00010D 25                     589 	.db #0x25	; 37
      00010E 25                     590 	.db #0x25	; 37
      00010F 25                     591 	.db #0x25	; 37
      000110 25                     592 	.db #0x25	; 37
      000111 25                     593 	.db #0x25	; 37
      000112 25                     594 	.db #0x25	; 37
      000113 25                     595 	.db #0x25	; 37
      000114 25                     596 	.db #0x25	; 37
      000115 25                     597 	.db #0x25	; 37
      000116 29                     598 	.db #0x29	; 41
      000117 2A                     599 	.db #0x2a	; 42
      000118 25                     600 	.db #0x25	; 37
      000119 25                     601 	.db #0x25	; 37
      00011A 25                     602 	.db #0x25	; 37
      00011B 25                     603 	.db #0x25	; 37
      00011C 25                     604 	.db #0x25	; 37
      00011D 25                     605 	.db #0x25	; 37
      00011E 25                     606 	.db #0x25	; 37
      00011F 25                     607 	.db #0x25	; 37
      000120 25                     608 	.db #0x25	; 37
      000121 25                     609 	.db #0x25	; 37
      000122 25                     610 	.db #0x25	; 37
      000123 25                     611 	.db #0x25	; 37
      000124 25                     612 	.db #0x25	; 37
      000125 25                     613 	.db #0x25	; 37
      000126 25                     614 	.db #0x25	; 37
      000127 25                     615 	.db #0x25	; 37
      000128 25                     616 	.db #0x25	; 37
      000129 27                     617 	.db #0x27	; 39
      00012A 25                     618 	.db #0x25	; 37
      00012B 25                     619 	.db #0x25	; 37
      00012C 25                     620 	.db #0x25	; 37
      00012D 25                     621 	.db #0x25	; 37
      00012E 25                     622 	.db #0x25	; 37
      00012F 25                     623 	.db #0x25	; 37
      000130 25                     624 	.db #0x25	; 37
      000131 26                     625 	.db #0x26	; 38
      000132 25                     626 	.db #0x25	; 37
      000133 25                     627 	.db #0x25	; 37
      000134 25                     628 	.db #0x25	; 37
      000135 25                     629 	.db #0x25	; 37
      000136 2C                     630 	.db #0x2c	; 44
      000137 2B                     631 	.db #0x2b	; 43
      000138 25                     632 	.db #0x25	; 37
      000139 25                     633 	.db #0x25	; 37
      00013A 25                     634 	.db #0x25	; 37
      00013B 25                     635 	.db #0x25	; 37
      00013C 25                     636 	.db #0x25	; 37
      00013D 25                     637 	.db #0x25	; 37
      00013E 25                     638 	.db #0x25	; 37
      00013F 25                     639 	.db #0x25	; 37
      000140 25                     640 	.db #0x25	; 37
      000141 25                     641 	.db #0x25	; 37
      000142 25                     642 	.db #0x25	; 37
      000143 25                     643 	.db #0x25	; 37
      000144 25                     644 	.db #0x25	; 37
      000145 25                     645 	.db #0x25	; 37
      000146 25                     646 	.db #0x25	; 37
      000147 25                     647 	.db #0x25	; 37
      000148 25                     648 	.db #0x25	; 37
      000149 25                     649 	.db #0x25	; 37
      00014A 25                     650 	.db #0x25	; 37
      00014B 25                     651 	.db #0x25	; 37
      00014C 25                     652 	.db #0x25	; 37
      00014D 25                     653 	.db #0x25	; 37
      00014E 25                     654 	.db #0x25	; 37
      00014F 25                     655 	.db #0x25	; 37
      000150 25                     656 	.db #0x25	; 37
      000151 25                     657 	.db #0x25	; 37
      000152 25                     658 	.db #0x25	; 37
      000153 25                     659 	.db #0x25	; 37
      000154 25                     660 	.db #0x25	; 37
      000155 25                     661 	.db #0x25	; 37
      000156 25                     662 	.db #0x25	; 37
      000157 25                     663 	.db #0x25	; 37
      000158 25                     664 	.db #0x25	; 37
      000159 25                     665 	.db #0x25	; 37
      00015A 25                     666 	.db #0x25	; 37
      00015B 25                     667 	.db #0x25	; 37
      00015C 25                     668 	.db #0x25	; 37
      00015D 25                     669 	.db #0x25	; 37
      00015E 25                     670 	.db #0x25	; 37
      00015F 25                     671 	.db #0x25	; 37
      000160 25                     672 	.db #0x25	; 37
      000161 25                     673 	.db #0x25	; 37
      000162 25                     674 	.db #0x25	; 37
      000163 25                     675 	.db #0x25	; 37
      000164 25                     676 	.db #0x25	; 37
      000165 25                     677 	.db #0x25	; 37
      000166 25                     678 	.db #0x25	; 37
      000167 25                     679 	.db #0x25	; 37
      000168 25                     680 	.db #0x25	; 37
      000169 25                     681 	.db #0x25	; 37
      00016A 25                     682 	.db #0x25	; 37
      00016B 25                     683 	.db #0x25	; 37
      00016C 25                     684 	.db #0x25	; 37
      00016D 25                     685 	.db #0x25	; 37
      00016E 25                     686 	.db #0x25	; 37
      00016F 25                     687 	.db #0x25	; 37
      000170 25                     688 	.db #0x25	; 37
      000171 25                     689 	.db #0x25	; 37
      000172 25                     690 	.db #0x25	; 37
      000173 25                     691 	.db #0x25	; 37
      000174 25                     692 	.db #0x25	; 37
      000175 25                     693 	.db #0x25	; 37
      000176 25                     694 	.db #0x25	; 37
      000177 25                     695 	.db #0x25	; 37
      000178 25                     696 	.db #0x25	; 37
      000179 25                     697 	.db #0x25	; 37
      00017A 25                     698 	.db #0x25	; 37
      00017B 25                     699 	.db #0x25	; 37
      00017C 25                     700 	.db #0x25	; 37
      00017D 25                     701 	.db #0x25	; 37
      00017E 27                     702 	.db #0x27	; 39
      00017F 25                     703 	.db #0x25	; 37
      000180 25                     704 	.db #0x25	; 37
      000181 25                     705 	.db #0x25	; 37
      000182 25                     706 	.db #0x25	; 37
      000183 25                     707 	.db #0x25	; 37
      000184 25                     708 	.db #0x25	; 37
      000185 25                     709 	.db #0x25	; 37
      000186 25                     710 	.db #0x25	; 37
      000187 25                     711 	.db #0x25	; 37
      000188 25                     712 	.db #0x25	; 37
      000189 25                     713 	.db #0x25	; 37
      00018A 25                     714 	.db #0x25	; 37
      00018B 25                     715 	.db #0x25	; 37
      00018C 25                     716 	.db #0x25	; 37
      00018D 26                     717 	.db #0x26	; 38
      00018E 25                     718 	.db #0x25	; 37
      00018F 25                     719 	.db #0x25	; 37
      000190 25                     720 	.db #0x25	; 37
      000191 25                     721 	.db #0x25	; 37
      000192 25                     722 	.db #0x25	; 37
      000193 25                     723 	.db #0x25	; 37
      000194 25                     724 	.db #0x25	; 37
      000195 25                     725 	.db #0x25	; 37
      000196 25                     726 	.db #0x25	; 37
      000197 25                     727 	.db #0x25	; 37
      000198 25                     728 	.db #0x25	; 37
      000199 25                     729 	.db #0x25	; 37
      00019A 25                     730 	.db #0x25	; 37
      00019B 25                     731 	.db #0x25	; 37
      00019C 25                     732 	.db #0x25	; 37
      00019D 25                     733 	.db #0x25	; 37
      00019E 25                     734 	.db #0x25	; 37
      00019F 25                     735 	.db #0x25	; 37
      0001A0 25                     736 	.db #0x25	; 37
      0001A1 25                     737 	.db #0x25	; 37
      0001A2 25                     738 	.db #0x25	; 37
      0001A3 25                     739 	.db #0x25	; 37
      0001A4 26                     740 	.db #0x26	; 38
      0001A5 25                     741 	.db #0x25	; 37
      0001A6 25                     742 	.db #0x25	; 37
      0001A7 25                     743 	.db #0x25	; 37
      0001A8 25                     744 	.db #0x25	; 37
      0001A9 25                     745 	.db #0x25	; 37
      0001AA 25                     746 	.db #0x25	; 37
      0001AB 25                     747 	.db #0x25	; 37
      0001AC 25                     748 	.db #0x25	; 37
      0001AD 25                     749 	.db #0x25	; 37
      0001AE 25                     750 	.db #0x25	; 37
      0001AF 25                     751 	.db #0x25	; 37
      0001B0 25                     752 	.db #0x25	; 37
      0001B1 25                     753 	.db #0x25	; 37
      0001B2 25                     754 	.db #0x25	; 37
      0001B3 25                     755 	.db #0x25	; 37
      0001B4 25                     756 	.db #0x25	; 37
      0001B5 25                     757 	.db #0x25	; 37
      0001B6 25                     758 	.db #0x25	; 37
      0001B7 25                     759 	.db #0x25	; 37
      0001B8 25                     760 	.db #0x25	; 37
      0001B9 25                     761 	.db #0x25	; 37
      0001BA 25                     762 	.db #0x25	; 37
      0001BB 25                     763 	.db #0x25	; 37
      0001BC 25                     764 	.db #0x25	; 37
      0001BD 25                     765 	.db #0x25	; 37
      0001BE 25                     766 	.db #0x25	; 37
      0001BF 25                     767 	.db #0x25	; 37
      0001C0 25                     768 	.db #0x25	; 37
      0001C1 25                     769 	.db #0x25	; 37
      0001C2 25                     770 	.db #0x25	; 37
      0001C3 25                     771 	.db #0x25	; 37
      0001C4 25                     772 	.db #0x25	; 37
      0001C5 25                     773 	.db #0x25	; 37
      0001C6 25                     774 	.db #0x25	; 37
      0001C7 25                     775 	.db #0x25	; 37
      0001C8 25                     776 	.db #0x25	; 37
      0001C9 25                     777 	.db #0x25	; 37
      0001CA 25                     778 	.db #0x25	; 37
      0001CB 25                     779 	.db #0x25	; 37
      0001CC 25                     780 	.db #0x25	; 37
      0001CD 25                     781 	.db #0x25	; 37
      0001CE 25                     782 	.db #0x25	; 37
      0001CF 25                     783 	.db #0x25	; 37
      0001D0 25                     784 	.db #0x25	; 37
      0001D1 25                     785 	.db #0x25	; 37
      0001D2 25                     786 	.db #0x25	; 37
      0001D3 25                     787 	.db #0x25	; 37
      0001D4 25                     788 	.db #0x25	; 37
      0001D5 25                     789 	.db #0x25	; 37
      0001D6 25                     790 	.db #0x25	; 37
      0001D7 25                     791 	.db #0x25	; 37
      0001D8 25                     792 	.db #0x25	; 37
      0001D9 25                     793 	.db #0x25	; 37
      0001DA 27                     794 	.db #0x27	; 39
      0001DB 25                     795 	.db #0x25	; 37
      0001DC 25                     796 	.db #0x25	; 37
      0001DD 25                     797 	.db #0x25	; 37
      0001DE 25                     798 	.db #0x25	; 37
      0001DF 25                     799 	.db #0x25	; 37
      0001E0 25                     800 	.db #0x25	; 37
      0001E1 25                     801 	.db #0x25	; 37
      0001E2 25                     802 	.db #0x25	; 37
      0001E3 25                     803 	.db #0x25	; 37
      0001E4 25                     804 	.db #0x25	; 37
      0001E5 25                     805 	.db #0x25	; 37
      0001E6 25                     806 	.db #0x25	; 37
      0001E7 25                     807 	.db #0x25	; 37
      0001E8 25                     808 	.db #0x25	; 37
      0001E9 25                     809 	.db #0x25	; 37
      0001EA 25                     810 	.db #0x25	; 37
      0001EB 25                     811 	.db #0x25	; 37
      0001EC 25                     812 	.db #0x25	; 37
      0001ED 25                     813 	.db #0x25	; 37
      0001EE 25                     814 	.db #0x25	; 37
      0001EF 25                     815 	.db #0x25	; 37
      0001F0 27                     816 	.db #0x27	; 39
      0001F1 25                     817 	.db #0x25	; 37
      0001F2 25                     818 	.db #0x25	; 37
      0001F3 25                     819 	.db #0x25	; 37
      0001F4 25                     820 	.db #0x25	; 37
      0001F5 25                     821 	.db #0x25	; 37
      0001F6 25                     822 	.db #0x25	; 37
      0001F7 28                     823 	.db #0x28	; 40
      0001F8 25                     824 	.db #0x25	; 37
      0001F9 25                     825 	.db #0x25	; 37
      0001FA 25                     826 	.db #0x25	; 37
      0001FB 25                     827 	.db #0x25	; 37
      0001FC 25                     828 	.db #0x25	; 37
      0001FD 25                     829 	.db #0x25	; 37
      0001FE 25                     830 	.db #0x25	; 37
      0001FF 25                     831 	.db #0x25	; 37
      000200 25                     832 	.db #0x25	; 37
      000201 25                     833 	.db #0x25	; 37
      000202 25                     834 	.db #0x25	; 37
      000203 25                     835 	.db #0x25	; 37
      000204 25                     836 	.db #0x25	; 37
      000205 25                     837 	.db #0x25	; 37
      000206 25                     838 	.db #0x25	; 37
      000207 25                     839 	.db #0x25	; 37
      000208 25                     840 	.db #0x25	; 37
      000209 25                     841 	.db #0x25	; 37
      00020A 25                     842 	.db #0x25	; 37
      00020B 25                     843 	.db #0x25	; 37
      00020C 25                     844 	.db #0x25	; 37
      00020D 25                     845 	.db #0x25	; 37
      00020E 25                     846 	.db #0x25	; 37
      00020F 25                     847 	.db #0x25	; 37
      000210 25                     848 	.db #0x25	; 37
      000211 25                     849 	.db #0x25	; 37
      000212 25                     850 	.db #0x25	; 37
      000213 25                     851 	.db #0x25	; 37
      000214 25                     852 	.db #0x25	; 37
      000215 25                     853 	.db #0x25	; 37
      000216 25                     854 	.db #0x25	; 37
      000217 25                     855 	.db #0x25	; 37
      000218 25                     856 	.db #0x25	; 37
      000219 25                     857 	.db #0x25	; 37
      00021A 25                     858 	.db #0x25	; 37
      00021B 25                     859 	.db #0x25	; 37
      00021C 25                     860 	.db #0x25	; 37
      00021D 25                     861 	.db #0x25	; 37
      00021E 25                     862 	.db #0x25	; 37
      00021F 25                     863 	.db #0x25	; 37
      000220 25                     864 	.db #0x25	; 37
      000221 25                     865 	.db #0x25	; 37
      000222 25                     866 	.db #0x25	; 37
      000223 25                     867 	.db #0x25	; 37
      000224 25                     868 	.db #0x25	; 37
      000225 25                     869 	.db #0x25	; 37
      000226 25                     870 	.db #0x25	; 37
      000227 25                     871 	.db #0x25	; 37
      000228 25                     872 	.db #0x25	; 37
      000229 25                     873 	.db #0x25	; 37
      00022A 25                     874 	.db #0x25	; 37
      00022B 25                     875 	.db #0x25	; 37
      00022C 25                     876 	.db #0x25	; 37
      00022D 25                     877 	.db #0x25	; 37
      00022E 25                     878 	.db #0x25	; 37
      00022F 25                     879 	.db #0x25	; 37
      000230 25                     880 	.db #0x25	; 37
      000231 25                     881 	.db #0x25	; 37
      000232 25                     882 	.db #0x25	; 37
      000233 25                     883 	.db #0x25	; 37
      000234 25                     884 	.db #0x25	; 37
      000235 25                     885 	.db #0x25	; 37
      000236 25                     886 	.db #0x25	; 37
      000237 25                     887 	.db #0x25	; 37
      000238 25                     888 	.db #0x25	; 37
      000239 25                     889 	.db #0x25	; 37
      00023A 25                     890 	.db #0x25	; 37
      00023B 25                     891 	.db #0x25	; 37
      00023C 25                     892 	.db #0x25	; 37
      00023D 25                     893 	.db #0x25	; 37
      00023E 25                     894 	.db #0x25	; 37
      00023F 26                     895 	.db #0x26	; 38
      000240 25                     896 	.db #0x25	; 37
      000241 25                     897 	.db #0x25	; 37
      000242 25                     898 	.db #0x25	; 37
      000243 25                     899 	.db #0x25	; 37
      000244 25                     900 	.db #0x25	; 37
      000245 25                     901 	.db #0x25	; 37
      000246 25                     902 	.db #0x25	; 37
      000247 25                     903 	.db #0x25	; 37
      000248 25                     904 	.db #0x25	; 37
      000249 26                     905 	.db #0x26	; 38
      00024A 25                     906 	.db #0x25	; 37
      00024B 25                     907 	.db #0x25	; 37
      00024C 25                     908 	.db #0x25	; 37
      00024D 25                     909 	.db #0x25	; 37
      00024E 25                     910 	.db #0x25	; 37
      00024F 25                     911 	.db #0x25	; 37
      000250 25                     912 	.db #0x25	; 37
      000251 25                     913 	.db #0x25	; 37
      000252 25                     914 	.db #0x25	; 37
      000253 25                     915 	.db #0x25	; 37
      000254 25                     916 	.db #0x25	; 37
      000255 25                     917 	.db #0x25	; 37
      000256 25                     918 	.db #0x25	; 37
      000257 25                     919 	.db #0x25	; 37
      000258 25                     920 	.db #0x25	; 37
      000259 25                     921 	.db #0x25	; 37
      00025A 25                     922 	.db #0x25	; 37
      00025B 25                     923 	.db #0x25	; 37
      00025C 25                     924 	.db #0x25	; 37
      00025D 25                     925 	.db #0x25	; 37
      00025E 25                     926 	.db #0x25	; 37
      00025F 25                     927 	.db #0x25	; 37
      000260 25                     928 	.db #0x25	; 37
      000261 25                     929 	.db #0x25	; 37
      000262 25                     930 	.db #0x25	; 37
      000263 25                     931 	.db #0x25	; 37
      000264 25                     932 	.db #0x25	; 37
      000265 25                     933 	.db #0x25	; 37
      000266 25                     934 	.db #0x25	; 37
      000267 25                     935 	.db #0x25	; 37
      000268 25                     936 	.db #0x25	; 37
      000269 25                     937 	.db #0x25	; 37
      00026A 25                     938 	.db #0x25	; 37
      00026B 25                     939 	.db #0x25	; 37
      00026C 25                     940 	.db #0x25	; 37
      00026D 25                     941 	.db #0x25	; 37
      00026E 25                     942 	.db #0x25	; 37
      00026F 25                     943 	.db #0x25	; 37
      000270 25                     944 	.db #0x25	; 37
      000271 25                     945 	.db #0x25	; 37
      000272 25                     946 	.db #0x25	; 37
      000273 25                     947 	.db #0x25	; 37
      000274 25                     948 	.db #0x25	; 37
      000275 25                     949 	.db #0x25	; 37
      000276 25                     950 	.db #0x25	; 37
      000277 25                     951 	.db #0x25	; 37
      000278 25                     952 	.db #0x25	; 37
      000279 25                     953 	.db #0x25	; 37
      00027A 25                     954 	.db #0x25	; 37
      00027B 25                     955 	.db #0x25	; 37
      00027C 25                     956 	.db #0x25	; 37
      00027D 25                     957 	.db #0x25	; 37
      00027E 25                     958 	.db #0x25	; 37
      00027F 25                     959 	.db #0x25	; 37
      000280 25                     960 	.db #0x25	; 37
      000281 25                     961 	.db #0x25	; 37
      000282 25                     962 	.db #0x25	; 37
      000283 25                     963 	.db #0x25	; 37
      000284 25                     964 	.db #0x25	; 37
      000285 25                     965 	.db #0x25	; 37
      000286 25                     966 	.db #0x25	; 37
      000287 25                     967 	.db #0x25	; 37
      000288 25                     968 	.db #0x25	; 37
      000289 25                     969 	.db #0x25	; 37
      00028A 25                     970 	.db #0x25	; 37
      00028B 25                     971 	.db #0x25	; 37
      00028C 25                     972 	.db #0x25	; 37
      00028D 25                     973 	.db #0x25	; 37
      00028E 25                     974 	.db #0x25	; 37
      00028F 25                     975 	.db #0x25	; 37
      000290 25                     976 	.db #0x25	; 37
      000291 25                     977 	.db #0x25	; 37
      000292 25                     978 	.db #0x25	; 37
      000293 25                     979 	.db #0x25	; 37
      000294 25                     980 	.db #0x25	; 37
      000295 25                     981 	.db #0x25	; 37
      000296 25                     982 	.db #0x25	; 37
      000297 25                     983 	.db #0x25	; 37
      000298 25                     984 	.db #0x25	; 37
      000299 25                     985 	.db #0x25	; 37
      00029A 25                     986 	.db #0x25	; 37
      00029B 25                     987 	.db #0x25	; 37
      00029C 25                     988 	.db #0x25	; 37
      00029D 25                     989 	.db #0x25	; 37
      00029E 25                     990 	.db #0x25	; 37
      00029F 25                     991 	.db #0x25	; 37
      0002A0 25                     992 	.db #0x25	; 37
      0002A1 25                     993 	.db #0x25	; 37
      0002A2 25                     994 	.db #0x25	; 37
      0002A3 27                     995 	.db #0x27	; 39
      0002A4 25                     996 	.db #0x25	; 37
      0002A5 25                     997 	.db #0x25	; 37
      0002A6 25                     998 	.db #0x25	; 37
      0002A7 25                     999 	.db #0x25	; 37
      0002A8 25                    1000 	.db #0x25	; 37
      0002A9 25                    1001 	.db #0x25	; 37
      0002AA 25                    1002 	.db #0x25	; 37
      0002AB 25                    1003 	.db #0x25	; 37
      0002AC 25                    1004 	.db #0x25	; 37
      0002AD 25                    1005 	.db #0x25	; 37
      0002AE 25                    1006 	.db #0x25	; 37
      0002AF 25                    1007 	.db #0x25	; 37
      0002B0 25                    1008 	.db #0x25	; 37
      0002B1 25                    1009 	.db #0x25	; 37
      0002B2 25                    1010 	.db #0x25	; 37
      0002B3 25                    1011 	.db #0x25	; 37
      0002B4 26                    1012 	.db #0x26	; 38
      0002B5 25                    1013 	.db #0x25	; 37
      0002B6 25                    1014 	.db #0x25	; 37
      0002B7 25                    1015 	.db #0x25	; 37
      0002B8 25                    1016 	.db #0x25	; 37
      0002B9 25                    1017 	.db #0x25	; 37
      0002BA 25                    1018 	.db #0x25	; 37
      0002BB 25                    1019 	.db #0x25	; 37
      0002BC 25                    1020 	.db #0x25	; 37
      0002BD 25                    1021 	.db #0x25	; 37
      0002BE 25                    1022 	.db #0x25	; 37
      0002BF 25                    1023 	.db #0x25	; 37
      0002C0 25                    1024 	.db #0x25	; 37
      0002C1 25                    1025 	.db #0x25	; 37
      0002C2 25                    1026 	.db #0x25	; 37
      0002C3 25                    1027 	.db #0x25	; 37
      0002C4 25                    1028 	.db #0x25	; 37
      0002C5 25                    1029 	.db #0x25	; 37
      0002C6 25                    1030 	.db #0x25	; 37
      0002C7 25                    1031 	.db #0x25	; 37
      0002C8 25                    1032 	.db #0x25	; 37
      0002C9 25                    1033 	.db #0x25	; 37
      0002CA 25                    1034 	.db #0x25	; 37
      0002CB 25                    1035 	.db #0x25	; 37
      0002CC 25                    1036 	.db #0x25	; 37
      0002CD 25                    1037 	.db #0x25	; 37
      0002CE 25                    1038 	.db #0x25	; 37
      0002CF 25                    1039 	.db #0x25	; 37
      0002D0 25                    1040 	.db #0x25	; 37
      0002D1 25                    1041 	.db #0x25	; 37
      0002D2 25                    1042 	.db #0x25	; 37
      0002D3 25                    1043 	.db #0x25	; 37
      0002D4 25                    1044 	.db #0x25	; 37
      0002D5 25                    1045 	.db #0x25	; 37
      0002D6 25                    1046 	.db #0x25	; 37
      0002D7 25                    1047 	.db #0x25	; 37
      0002D8 25                    1048 	.db #0x25	; 37
      0002D9 25                    1049 	.db #0x25	; 37
      0002DA 25                    1050 	.db #0x25	; 37
      0002DB 25                    1051 	.db #0x25	; 37
      0002DC 25                    1052 	.db #0x25	; 37
      0002DD 25                    1053 	.db #0x25	; 37
      0002DE 25                    1054 	.db #0x25	; 37
      0002DF 25                    1055 	.db #0x25	; 37
      0002E0 25                    1056 	.db #0x25	; 37
      0002E1 25                    1057 	.db #0x25	; 37
      0002E2 25                    1058 	.db #0x25	; 37
      0002E3 25                    1059 	.db #0x25	; 37
      0002E4 25                    1060 	.db #0x25	; 37
      0002E5 25                    1061 	.db #0x25	; 37
      0002E6 25                    1062 	.db #0x25	; 37
      0002E7 25                    1063 	.db #0x25	; 37
      0002E8 25                    1064 	.db #0x25	; 37
      0002E9 25                    1065 	.db #0x25	; 37
      0002EA 25                    1066 	.db #0x25	; 37
      0002EB 28                    1067 	.db #0x28	; 40
      0002EC 25                    1068 	.db #0x25	; 37
      0002ED 25                    1069 	.db #0x25	; 37
      0002EE 25                    1070 	.db #0x25	; 37
      0002EF 25                    1071 	.db #0x25	; 37
      0002F0 25                    1072 	.db #0x25	; 37
      0002F1 25                    1073 	.db #0x25	; 37
      0002F2 25                    1074 	.db #0x25	; 37
      0002F3 25                    1075 	.db #0x25	; 37
      0002F4 25                    1076 	.db #0x25	; 37
      0002F5 25                    1077 	.db #0x25	; 37
      0002F6 25                    1078 	.db #0x25	; 37
      0002F7 25                    1079 	.db #0x25	; 37
      0002F8 25                    1080 	.db #0x25	; 37
      0002F9 25                    1081 	.db #0x25	; 37
      0002FA 25                    1082 	.db #0x25	; 37
      0002FB 25                    1083 	.db #0x25	; 37
      0002FC 25                    1084 	.db #0x25	; 37
      0002FD 25                    1085 	.db #0x25	; 37
      0002FE 25                    1086 	.db #0x25	; 37
      0002FF 25                    1087 	.db #0x25	; 37
      000300 25                    1088 	.db #0x25	; 37
      000301 25                    1089 	.db #0x25	; 37
      000302 25                    1090 	.db #0x25	; 37
      000303 25                    1091 	.db #0x25	; 37
      000304 25                    1092 	.db #0x25	; 37
      000305 25                    1093 	.db #0x25	; 37
      000306 27                    1094 	.db #0x27	; 39
      000307 25                    1095 	.db #0x25	; 37
      000308 25                    1096 	.db #0x25	; 37
      000309 25                    1097 	.db #0x25	; 37
      00030A 25                    1098 	.db #0x25	; 37
      00030B 25                    1099 	.db #0x25	; 37
      00030C 25                    1100 	.db #0x25	; 37
      00030D 25                    1101 	.db #0x25	; 37
      00030E 25                    1102 	.db #0x25	; 37
      00030F 25                    1103 	.db #0x25	; 37
      000310 25                    1104 	.db #0x25	; 37
      000311 25                    1105 	.db #0x25	; 37
      000312 25                    1106 	.db #0x25	; 37
      000313 25                    1107 	.db #0x25	; 37
      000314 25                    1108 	.db #0x25	; 37
      000315 25                    1109 	.db #0x25	; 37
      000316 25                    1110 	.db #0x25	; 37
      000317 25                    1111 	.db #0x25	; 37
      000318 25                    1112 	.db #0x25	; 37
      000319 25                    1113 	.db #0x25	; 37
      00031A 25                    1114 	.db #0x25	; 37
      00031B 25                    1115 	.db #0x25	; 37
      00031C 25                    1116 	.db #0x25	; 37
      00031D 25                    1117 	.db #0x25	; 37
      00031E 25                    1118 	.db #0x25	; 37
      00031F 25                    1119 	.db #0x25	; 37
      000320 29                    1120 	.db #0x29	; 41
      000321 2A                    1121 	.db #0x2a	; 42
      000322 25                    1122 	.db #0x25	; 37
      000323 25                    1123 	.db #0x25	; 37
      000324 25                    1124 	.db #0x25	; 37
      000325 25                    1125 	.db #0x25	; 37
      000326 25                    1126 	.db #0x25	; 37
      000327 25                    1127 	.db #0x25	; 37
      000328 25                    1128 	.db #0x25	; 37
      000329 25                    1129 	.db #0x25	; 37
      00032A 25                    1130 	.db #0x25	; 37
      00032B 25                    1131 	.db #0x25	; 37
      00032C 25                    1132 	.db #0x25	; 37
      00032D 25                    1133 	.db #0x25	; 37
      00032E 25                    1134 	.db #0x25	; 37
      00032F 25                    1135 	.db #0x25	; 37
      000330 25                    1136 	.db #0x25	; 37
      000331 25                    1137 	.db #0x25	; 37
      000332 25                    1138 	.db #0x25	; 37
      000333 25                    1139 	.db #0x25	; 37
      000334 25                    1140 	.db #0x25	; 37
      000335 25                    1141 	.db #0x25	; 37
      000336 25                    1142 	.db #0x25	; 37
      000337 25                    1143 	.db #0x25	; 37
      000338 25                    1144 	.db #0x25	; 37
      000339 25                    1145 	.db #0x25	; 37
      00033A 25                    1146 	.db #0x25	; 37
      00033B 25                    1147 	.db #0x25	; 37
      00033C 25                    1148 	.db #0x25	; 37
      00033D 25                    1149 	.db #0x25	; 37
      00033E 25                    1150 	.db #0x25	; 37
      00033F 25                    1151 	.db #0x25	; 37
      000340 2C                    1152 	.db #0x2c	; 44
      000341 2B                    1153 	.db #0x2b	; 43
      000342 25                    1154 	.db #0x25	; 37
      000343 25                    1155 	.db #0x25	; 37
      000344 25                    1156 	.db #0x25	; 37
      000345 25                    1157 	.db #0x25	; 37
      000346 25                    1158 	.db #0x25	; 37
      000347 25                    1159 	.db #0x25	; 37
      000348 25                    1160 	.db #0x25	; 37
      000349 25                    1161 	.db #0x25	; 37
      00034A 25                    1162 	.db #0x25	; 37
      00034B 25                    1163 	.db #0x25	; 37
      00034C 25                    1164 	.db #0x25	; 37
      00034D 25                    1165 	.db #0x25	; 37
      00034E 25                    1166 	.db #0x25	; 37
      00034F 25                    1167 	.db #0x25	; 37
      000350 25                    1168 	.db #0x25	; 37
      000351 25                    1169 	.db #0x25	; 37
      000352 27                    1170 	.db #0x27	; 39
      000353 25                    1171 	.db #0x25	; 37
      000354 25                    1172 	.db #0x25	; 37
      000355 25                    1173 	.db #0x25	; 37
      000356 25                    1174 	.db #0x25	; 37
      000357 25                    1175 	.db #0x25	; 37
      000358 25                    1176 	.db #0x25	; 37
      000359 25                    1177 	.db #0x25	; 37
      00035A 25                    1178 	.db #0x25	; 37
      00035B 25                    1179 	.db #0x25	; 37
      00035C 25                    1180 	.db #0x25	; 37
      00035D 25                    1181 	.db #0x25	; 37
      00035E 25                    1182 	.db #0x25	; 37
      00035F 25                    1183 	.db #0x25	; 37
      000360 25                    1184 	.db #0x25	; 37
      000361 25                    1185 	.db #0x25	; 37
      000362 25                    1186 	.db #0x25	; 37
      000363 25                    1187 	.db #0x25	; 37
      000364 25                    1188 	.db #0x25	; 37
      000365 25                    1189 	.db #0x25	; 37
      000366 25                    1190 	.db #0x25	; 37
      000367 25                    1191 	.db #0x25	; 37
      000368 25                    1192 	.db #0x25	; 37
      000369 25                    1193 	.db #0x25	; 37
      00036A 25                    1194 	.db #0x25	; 37
      00036B 25                    1195 	.db #0x25	; 37
      00036C 25                    1196 	.db #0x25	; 37
      00036D 25                    1197 	.db #0x25	; 37
      00036E 25                    1198 	.db #0x25	; 37
      00036F 25                    1199 	.db #0x25	; 37
      000370 25                    1200 	.db #0x25	; 37
      000371 25                    1201 	.db #0x25	; 37
      000372 25                    1202 	.db #0x25	; 37
      000373 25                    1203 	.db #0x25	; 37
      000374 25                    1204 	.db #0x25	; 37
      000375 25                    1205 	.db #0x25	; 37
      000376 25                    1206 	.db #0x25	; 37
      000377 25                    1207 	.db #0x25	; 37
      000378 25                    1208 	.db #0x25	; 37
      000379 25                    1209 	.db #0x25	; 37
      00037A 25                    1210 	.db #0x25	; 37
      00037B 25                    1211 	.db #0x25	; 37
      00037C 25                    1212 	.db #0x25	; 37
      00037D 25                    1213 	.db #0x25	; 37
      00037E 25                    1214 	.db #0x25	; 37
      00037F 25                    1215 	.db #0x25	; 37
      000380 25                    1216 	.db #0x25	; 37
      000381 25                    1217 	.db #0x25	; 37
      000382 25                    1218 	.db #0x25	; 37
      000383 25                    1219 	.db #0x25	; 37
      000384 25                    1220 	.db #0x25	; 37
      000385 25                    1221 	.db #0x25	; 37
      000386 25                    1222 	.db #0x25	; 37
      000387 25                    1223 	.db #0x25	; 37
      000388 25                    1224 	.db #0x25	; 37
      000389 25                    1225 	.db #0x25	; 37
      00038A 25                    1226 	.db #0x25	; 37
      00038B 25                    1227 	.db #0x25	; 37
      00038C 25                    1228 	.db #0x25	; 37
      00038D 25                    1229 	.db #0x25	; 37
      00038E 25                    1230 	.db #0x25	; 37
      00038F 25                    1231 	.db #0x25	; 37
      000390 25                    1232 	.db #0x25	; 37
      000391 25                    1233 	.db #0x25	; 37
      000392 25                    1234 	.db #0x25	; 37
      000393 25                    1235 	.db #0x25	; 37
      000394 25                    1236 	.db #0x25	; 37
      000395 25                    1237 	.db #0x25	; 37
      000396 25                    1238 	.db #0x25	; 37
      000397 25                    1239 	.db #0x25	; 37
      000398 27                    1240 	.db #0x27	; 39
      000399 25                    1241 	.db #0x25	; 37
      00039A 25                    1242 	.db #0x25	; 37
      00039B 25                    1243 	.db #0x25	; 37
      00039C 25                    1244 	.db #0x25	; 37
      00039D 25                    1245 	.db #0x25	; 37
      00039E 25                    1246 	.db #0x25	; 37
      00039F 25                    1247 	.db #0x25	; 37
      0003A0 25                    1248 	.db #0x25	; 37
      0003A1 25                    1249 	.db #0x25	; 37
      0003A2 25                    1250 	.db #0x25	; 37
      0003A3 25                    1251 	.db #0x25	; 37
      0003A4 25                    1252 	.db #0x25	; 37
      0003A5 25                    1253 	.db #0x25	; 37
      0003A6 25                    1254 	.db #0x25	; 37
      0003A7 25                    1255 	.db #0x25	; 37
      0003A8 25                    1256 	.db #0x25	; 37
      0003A9 25                    1257 	.db #0x25	; 37
      0003AA 25                    1258 	.db #0x25	; 37
      0003AB 25                    1259 	.db #0x25	; 37
      0003AC 25                    1260 	.db #0x25	; 37
      0003AD 25                    1261 	.db #0x25	; 37
      0003AE 25                    1262 	.db #0x25	; 37
      0003AF 25                    1263 	.db #0x25	; 37
      0003B0 25                    1264 	.db #0x25	; 37
      0003B1 25                    1265 	.db #0x25	; 37
      0003B2 25                    1266 	.db #0x25	; 37
      0003B3 25                    1267 	.db #0x25	; 37
      0003B4 25                    1268 	.db #0x25	; 37
      0003B5 25                    1269 	.db #0x25	; 37
      0003B6 25                    1270 	.db #0x25	; 37
      0003B7 25                    1271 	.db #0x25	; 37
      0003B8 25                    1272 	.db #0x25	; 37
      0003B9 25                    1273 	.db #0x25	; 37
      0003BA 25                    1274 	.db #0x25	; 37
      0003BB 25                    1275 	.db #0x25	; 37
      0003BC 25                    1276 	.db #0x25	; 37
      0003BD 25                    1277 	.db #0x25	; 37
      0003BE 25                    1278 	.db #0x25	; 37
      0003BF 25                    1279 	.db #0x25	; 37
      0003C0 25                    1280 	.db #0x25	; 37
      0003C1 25                    1281 	.db #0x25	; 37
      0003C2 25                    1282 	.db #0x25	; 37
      0003C3 25                    1283 	.db #0x25	; 37
      0003C4 25                    1284 	.db #0x25	; 37
      0003C5 25                    1285 	.db #0x25	; 37
      0003C6 25                    1286 	.db #0x25	; 37
      0003C7 25                    1287 	.db #0x25	; 37
      0003C8 25                    1288 	.db #0x25	; 37
      0003C9 25                    1289 	.db #0x25	; 37
      0003CA 25                    1290 	.db #0x25	; 37
      0003CB 26                    1291 	.db #0x26	; 38
      0003CC 25                    1292 	.db #0x25	; 37
      0003CD 25                    1293 	.db #0x25	; 37
      0003CE 25                    1294 	.db #0x25	; 37
      0003CF 25                    1295 	.db #0x25	; 37
      0003D0 25                    1296 	.db #0x25	; 37
      0003D1 25                    1297 	.db #0x25	; 37
      0003D2 25                    1298 	.db #0x25	; 37
      0003D3 25                    1299 	.db #0x25	; 37
      0003D4 29                    1300 	.db #0x29	; 41
      0003D5 2A                    1301 	.db #0x2a	; 42
      0003D6 25                    1302 	.db #0x25	; 37
      0003D7 25                    1303 	.db #0x25	; 37
      0003D8 25                    1304 	.db #0x25	; 37
      0003D9 25                    1305 	.db #0x25	; 37
      0003DA 25                    1306 	.db #0x25	; 37
      0003DB 25                    1307 	.db #0x25	; 37
      0003DC 26                    1308 	.db #0x26	; 38
      0003DD 25                    1309 	.db #0x25	; 37
      0003DE 25                    1310 	.db #0x25	; 37
      0003DF 25                    1311 	.db #0x25	; 37
      0003E0 25                    1312 	.db #0x25	; 37
      0003E1 25                    1313 	.db #0x25	; 37
      0003E2 25                    1314 	.db #0x25	; 37
      0003E3 25                    1315 	.db #0x25	; 37
      0003E4 25                    1316 	.db #0x25	; 37
      0003E5 26                    1317 	.db #0x26	; 38
      0003E6 25                    1318 	.db #0x25	; 37
      0003E7 25                    1319 	.db #0x25	; 37
      0003E8 25                    1320 	.db #0x25	; 37
      0003E9 25                    1321 	.db #0x25	; 37
      0003EA 25                    1322 	.db #0x25	; 37
      0003EB 25                    1323 	.db #0x25	; 37
      0003EC 25                    1324 	.db #0x25	; 37
      0003ED 25                    1325 	.db #0x25	; 37
      0003EE 25                    1326 	.db #0x25	; 37
      0003EF 25                    1327 	.db #0x25	; 37
      0003F0 25                    1328 	.db #0x25	; 37
      0003F1 25                    1329 	.db #0x25	; 37
      0003F2 25                    1330 	.db #0x25	; 37
      0003F3 25                    1331 	.db #0x25	; 37
      0003F4 2C                    1332 	.db #0x2c	; 44
      0003F5 2B                    1333 	.db #0x2b	; 43
      0003F6 25                    1334 	.db #0x25	; 37
      0003F7 25                    1335 	.db #0x25	; 37
      0003F8 25                    1336 	.db #0x25	; 37
      0003F9 25                    1337 	.db #0x25	; 37
      0003FA 25                    1338 	.db #0x25	; 37
      0003FB 25                    1339 	.db #0x25	; 37
      0003FC 25                    1340 	.db #0x25	; 37
      0003FD 25                    1341 	.db #0x25	; 37
      0003FE 25                    1342 	.db #0x25	; 37
      0003FF 25                    1343 	.db #0x25	; 37
      000400 25                    1344 	.db #0x25	; 37
      000401 25                    1345 	.db #0x25	; 37
      000402 25                    1346 	.db #0x25	; 37
      000403 25                    1347 	.db #0x25	; 37
      000404 25                    1348 	.db #0x25	; 37
      000405 25                    1349 	.db #0x25	; 37
      000406 25                    1350 	.db #0x25	; 37
      000407 25                    1351 	.db #0x25	; 37
      000408 25                    1352 	.db #0x25	; 37
      000409 25                    1353 	.db #0x25	; 37
      00040A 25                    1354 	.db #0x25	; 37
      00040B 25                    1355 	.db #0x25	; 37
      00040C 25                    1356 	.db #0x25	; 37
      00040D 25                    1357 	.db #0x25	; 37
      00040E 25                    1358 	.db #0x25	; 37
      00040F 25                    1359 	.db #0x25	; 37
      000410 25                    1360 	.db #0x25	; 37
      000411 25                    1361 	.db #0x25	; 37
      000412 25                    1362 	.db #0x25	; 37
      000413 25                    1363 	.db #0x25	; 37
      000414 25                    1364 	.db #0x25	; 37
      000415 25                    1365 	.db #0x25	; 37
      000416 25                    1366 	.db #0x25	; 37
      000417 25                    1367 	.db #0x25	; 37
      000418 25                    1368 	.db #0x25	; 37
      000419 25                    1369 	.db #0x25	; 37
      00041A 25                    1370 	.db #0x25	; 37
      00041B 25                    1371 	.db #0x25	; 37
      00041C 25                    1372 	.db #0x25	; 37
      00041D 25                    1373 	.db #0x25	; 37
      00041E 25                    1374 	.db #0x25	; 37
      00041F 25                    1375 	.db #0x25	; 37
      000420 25                    1376 	.db #0x25	; 37
      000421 25                    1377 	.db #0x25	; 37
      000422 25                    1378 	.db #0x25	; 37
      000423 25                    1379 	.db #0x25	; 37
      000424 25                    1380 	.db #0x25	; 37
      000425 25                    1381 	.db #0x25	; 37
      000426 25                    1382 	.db #0x25	; 37
      000427 25                    1383 	.db #0x25	; 37
      000428 25                    1384 	.db #0x25	; 37
      000429 25                    1385 	.db #0x25	; 37
      00042A 25                    1386 	.db #0x25	; 37
      00042B 25                    1387 	.db #0x25	; 37
      00042C 25                    1388 	.db #0x25	; 37
      00042D 25                    1389 	.db #0x25	; 37
      00042E 25                    1390 	.db #0x25	; 37
      00042F 25                    1391 	.db #0x25	; 37
      000430 25                    1392 	.db #0x25	; 37
      000431 25                    1393 	.db #0x25	; 37
      000432 25                    1394 	.db #0x25	; 37
      000433 25                    1395 	.db #0x25	; 37
      000434 25                    1396 	.db #0x25	; 37
      000435 25                    1397 	.db #0x25	; 37
      000436 25                    1398 	.db #0x25	; 37
      000437 25                    1399 	.db #0x25	; 37
      000438 25                    1400 	.db #0x25	; 37
      000439 25                    1401 	.db #0x25	; 37
      00043A 25                    1402 	.db #0x25	; 37
      00043B 25                    1403 	.db #0x25	; 37
      00043C 25                    1404 	.db #0x25	; 37
      00043D 25                    1405 	.db #0x25	; 37
      00043E 25                    1406 	.db #0x25	; 37
      00043F 25                    1407 	.db #0x25	; 37
      000440 25                    1408 	.db #0x25	; 37
      000441 25                    1409 	.db #0x25	; 37
      000442 25                    1410 	.db #0x25	; 37
      000443 25                    1411 	.db #0x25	; 37
      000444 25                    1412 	.db #0x25	; 37
      000445 25                    1413 	.db #0x25	; 37
      000446 25                    1414 	.db #0x25	; 37
      000447 25                    1415 	.db #0x25	; 37
      000448 25                    1416 	.db #0x25	; 37
      000449 25                    1417 	.db #0x25	; 37
      00044A 25                    1418 	.db #0x25	; 37
      00044B 25                    1419 	.db #0x25	; 37
      00044C 25                    1420 	.db #0x25	; 37
      00044D 25                    1421 	.db #0x25	; 37
      00044E 25                    1422 	.db #0x25	; 37
      00044F 25                    1423 	.db #0x25	; 37
      000450 27                    1424 	.db #0x27	; 39
      000451 25                    1425 	.db #0x25	; 37
      000452 25                    1426 	.db #0x25	; 37
      000453 25                    1427 	.db #0x25	; 37
      000454 25                    1428 	.db #0x25	; 37
      000455 25                    1429 	.db #0x25	; 37
      000456 25                    1430 	.db #0x25	; 37
      000457 25                    1431 	.db #0x25	; 37
      000458 25                    1432 	.db #0x25	; 37
      000459 25                    1433 	.db #0x25	; 37
      00045A 25                    1434 	.db #0x25	; 37
      00045B 25                    1435 	.db #0x25	; 37
      00045C 25                    1436 	.db #0x25	; 37
      00045D 25                    1437 	.db #0x25	; 37
      00045E 25                    1438 	.db #0x25	; 37
      00045F 25                    1439 	.db #0x25	; 37
      000460 25                    1440 	.db #0x25	; 37
      000461 28                    1441 	.db #0x28	; 40
      000462 25                    1442 	.db #0x25	; 37
      000463 25                    1443 	.db #0x25	; 37
      000464 25                    1444 	.db #0x25	; 37
      000465 25                    1445 	.db #0x25	; 37
      000466 25                    1446 	.db #0x25	; 37
      000467 25                    1447 	.db #0x25	; 37
      000468 25                    1448 	.db #0x25	; 37
      000469 25                    1449 	.db #0x25	; 37
      00046A 25                    1450 	.db #0x25	; 37
      00046B 25                    1451 	.db #0x25	; 37
      00046C 25                    1452 	.db #0x25	; 37
      00046D 25                    1453 	.db #0x25	; 37
      00046E 25                    1454 	.db #0x25	; 37
      00046F 25                    1455 	.db #0x25	; 37
      000470 25                    1456 	.db #0x25	; 37
      000471 25                    1457 	.db #0x25	; 37
      000472 25                    1458 	.db #0x25	; 37
      000473 25                    1459 	.db #0x25	; 37
      000474 25                    1460 	.db #0x25	; 37
      000475 25                    1461 	.db #0x25	; 37
      000476 27                    1462 	.db #0x27	; 39
      000477 25                    1463 	.db #0x25	; 37
      000478 25                    1464 	.db #0x25	; 37
      000479 25                    1465 	.db #0x25	; 37
      00047A 25                    1466 	.db #0x25	; 37
      00047B 25                    1467 	.db #0x25	; 37
      00047C 25                    1468 	.db #0x25	; 37
      00047D 25                    1469 	.db #0x25	; 37
      00047E 25                    1470 	.db #0x25	; 37
      00047F 25                    1471 	.db #0x25	; 37
      000480 25                    1472 	.db #0x25	; 37
      000481 25                    1473 	.db #0x25	; 37
      000482 25                    1474 	.db #0x25	; 37
      000483 25                    1475 	.db #0x25	; 37
      000484 25                    1476 	.db #0x25	; 37
      000485 25                    1477 	.db #0x25	; 37
      000486 25                    1478 	.db #0x25	; 37
      000487                       1479 _backgroundtiles:
      000487 00                    1480 	.db #0x00	; 0
      000488 00                    1481 	.db #0x00	; 0
      000489 00                    1482 	.db #0x00	; 0
      00048A 00                    1483 	.db #0x00	; 0
      00048B 00                    1484 	.db #0x00	; 0
      00048C 00                    1485 	.db #0x00	; 0
      00048D 00                    1486 	.db #0x00	; 0
      00048E 00                    1487 	.db #0x00	; 0
      00048F 00                    1488 	.db #0x00	; 0
      000490 00                    1489 	.db #0x00	; 0
      000491 00                    1490 	.db #0x00	; 0
      000492 00                    1491 	.db #0x00	; 0
      000493 00                    1492 	.db #0x00	; 0
      000494 00                    1493 	.db #0x00	; 0
      000495 00                    1494 	.db #0x00	; 0
      000496 00                    1495 	.db #0x00	; 0
      000497 00                    1496 	.db #0x00	; 0
      000498 00                    1497 	.db #0x00	; 0
      000499 08                    1498 	.db #0x08	; 8
      00049A 00                    1499 	.db #0x00	; 0
      00049B 08                    1500 	.db #0x08	; 8
      00049C 00                    1501 	.db #0x00	; 0
      00049D 1C                    1502 	.db #0x1c	; 28
      00049E 00                    1503 	.db #0x00	; 0
      00049F 7F                    1504 	.db #0x7f	; 127
      0004A0 00                    1505 	.db #0x00	; 0
      0004A1 1C                    1506 	.db #0x1c	; 28
      0004A2 00                    1507 	.db #0x00	; 0
      0004A3 08                    1508 	.db #0x08	; 8
      0004A4 00                    1509 	.db #0x00	; 0
      0004A5 08                    1510 	.db #0x08	; 8
      0004A6 00                    1511 	.db #0x00	; 0
      0004A7 00                    1512 	.db #0x00	; 0
      0004A8 00                    1513 	.db #0x00	; 0
      0004A9 00                    1514 	.db #0x00	; 0
      0004AA 00                    1515 	.db #0x00	; 0
      0004AB 00                    1516 	.db #0x00	; 0
      0004AC 00                    1517 	.db #0x00	; 0
      0004AD 18                    1518 	.db #0x18	; 24
      0004AE 00                    1519 	.db #0x00	; 0
      0004AF 18                    1520 	.db #0x18	; 24
      0004B0 00                    1521 	.db #0x00	; 0
      0004B1 00                    1522 	.db #0x00	; 0
      0004B2 00                    1523 	.db #0x00	; 0
      0004B3 00                    1524 	.db #0x00	; 0
      0004B4 00                    1525 	.db #0x00	; 0
      0004B5 00                    1526 	.db #0x00	; 0
      0004B6 00                    1527 	.db #0x00	; 0
      0004B7 46                    1528 	.db #0x46	; 70	'F'
      0004B8 38                    1529 	.db #0x38	; 56	'8'
      0004B9 3E                    1530 	.db #0x3e	; 62
      0004BA 40                    1531 	.db #0x40	; 64
      0004BB 7E                    1532 	.db #0x7e	; 126
      0004BC 98                    1533 	.db #0x98	; 152
      0004BD 5F                    1534 	.db #0x5f	; 95
      0004BE E8                    1535 	.db #0xe8	; 232
      0004BF 7A                    1536 	.db #0x7a	; 122	'z'
      0004C0 87                    1537 	.db #0x87	; 135
      0004C1 76                    1538 	.db #0x76	; 118	'v'
      0004C2 B9                    1539 	.db #0xb9	; 185
      0004C3 3C                    1540 	.db #0x3c	; 60
      0004C4 72                    1541 	.db #0x72	; 114	'r'
      0004C5 00                    1542 	.db #0x00	; 0
      0004C6 3C                    1543 	.db #0x3c	; 60
      0004C7 00                    1544 	.db #0x00	; 0
      0004C8 0F                    1545 	.db #0x0f	; 15
      0004C9 08                    1546 	.db #0x08	; 8
      0004CA 17                    1547 	.db #0x17	; 23
      0004CB 1C                    1548 	.db #0x1c	; 28
      0004CC 23                    1549 	.db #0x23	; 35
      0004CD 3E                    1550 	.db #0x3e	; 62
      0004CE 41                    1551 	.db #0x41	; 65	'A'
      0004CF 1B                    1552 	.db #0x1b	; 27
      0004D0 64                    1553 	.db #0x64	; 100	'd'
      0004D1 31                    1554 	.db #0x31	; 49	'1'
      0004D2 4E                    1555 	.db #0x4e	; 78	'N'
      0004D3 B1                    1556 	.db #0xb1	; 177
      0004D4 CE                    1557 	.db #0xce	; 206
      0004D5 BB                    1558 	.db #0xbb	; 187
      0004D6 C4                    1559 	.db #0xc4	; 196
      0004D7 00                    1560 	.db #0x00	; 0
      0004D8 F8                    1561 	.db #0xf8	; 248
      0004D9 00                    1562 	.db #0x00	; 0
      0004DA FC                    1563 	.db #0xfc	; 252
      0004DB E0                    1564 	.db #0xe0	; 224
      0004DC 1E                    1565 	.db #0x1e	; 30
      0004DD F0                    1566 	.db #0xf0	; 240
      0004DE 0F                    1567 	.db #0x0f	; 15
      0004DF BE                    1568 	.db #0xbe	; 190
      0004E0 01                    1569 	.db #0x01	; 1
      0004E1 BC                    1570 	.db #0xbc	; 188
      0004E2 02                    1571 	.db #0x02	; 2
      0004E3 CE                    1572 	.db #0xce	; 206
      0004E4 01                    1573 	.db #0x01	; 1
      0004E5 F6                    1574 	.db #0xf6	; 246
      0004E6 61                    1575 	.db #0x61	; 97	'a'
      0004E7 F4                    1576 	.db #0xf4	; 244
      0004E8 02                    1577 	.db #0x02	; 2
      0004E9 94                    1578 	.db #0x94	; 148
      0004EA 62                    1579 	.db #0x62	; 98	'b'
      0004EB E4                    1580 	.db #0xe4	; 228
      0004EC 02                    1581 	.db #0x02	; 2
      0004ED 6C                    1582 	.db #0x6c	; 108	'l'
      0004EE 82                    1583 	.db #0x82	; 130
      0004EF 70                    1584 	.db #0x70	; 112	'p'
      0004F0 8C                    1585 	.db #0x8c	; 140
      0004F1 60                    1586 	.db #0x60	; 96
      0004F2 90                    1587 	.db #0x90	; 144
      0004F3 00                    1588 	.db #0x00	; 0
      0004F4 E0                    1589 	.db #0xe0	; 224
      0004F5 80                    1590 	.db #0x80	; 128
      0004F6 80                    1591 	.db #0x80	; 128
      0004F7 8E                    1592 	.db #0x8e	; 142
      0004F8 F7                    1593 	.db #0xf7	; 247
      0004F9 8F                    1594 	.db #0x8f	; 143
      0004FA F3                    1595 	.db #0xf3	; 243
      0004FB 86                    1596 	.db #0x86	; 134
      0004FC F9                    1597 	.db #0xf9	; 249
      0004FD 42                    1598 	.db #0x42	; 66	'B'
      0004FE 7D                    1599 	.db #0x7d	; 125
      0004FF 80                    1600 	.db #0x80	; 128
      000500 FF                    1601 	.db #0xff	; 255
      000501 44                    1602 	.db #0x44	; 68	'D'
      000502 7F                    1603 	.db #0x7f	; 127
      000503 28                    1604 	.db #0x28	; 40
      000504 3F                    1605 	.db #0x3f	; 63
      000505 07                    1606 	.db #0x07	; 7
      000506 07                    1607 	.db #0x07	; 7
      000507                       1608 _marstiles:
      000507 26                    1609 	.db #0x26	; 38
      000508 00                    1610 	.db #0x00	; 0
      000509 59                    1611 	.db #0x59	; 89	'Y'
      00050A 00                    1612 	.db #0x00	; 0
      00050B 85                    1613 	.db #0x85	; 133
      00050C 00                    1614 	.db #0x00	; 0
      00050D 5A                    1615 	.db #0x5a	; 90	'Z'
      00050E 00                    1616 	.db #0x00	; 0
      00050F 20                    1617 	.db #0x20	; 32
      000510 00                    1618 	.db #0x00	; 0
      000511 D4                    1619 	.db #0xd4	; 212
      000512 00                    1620 	.db #0x00	; 0
      000513 0B                    1621 	.db #0x0b	; 11
      000514 00                    1622 	.db #0x00	; 0
      000515 D0                    1623 	.db #0xd0	; 208
      000516 00                    1624 	.db #0x00	; 0
      000517 92                    1625 	.db #0x92	; 146
      000518 00                    1626 	.db #0x00	; 0
      000519 7E                    1627 	.db #0x7e	; 126
      00051A 7E                    1628 	.db #0x7e	; 126
      00051B 81                    1629 	.db #0x81	; 129
      00051C FF                    1630 	.db #0xff	; 255
      00051D FF                    1631 	.db #0xff	; 255
      00051E 00                    1632 	.db #0x00	; 0
      00051F FF                    1633 	.db #0xff	; 255
      000520 00                    1634 	.db #0x00	; 0
      000521 81                    1635 	.db #0x81	; 129
      000522 FF                    1636 	.db #0xff	; 255
      000523 7E                    1637 	.db #0x7e	; 126
      000524 7E                    1638 	.db #0x7e	; 126
      000525 33                    1639 	.db #0x33	; 51	'3'
      000526 00                    1640 	.db #0x00	; 0
      000527 3D                    1641 	.db #0x3d	; 61
      000528 24                    1642 	.db #0x24	; 36
      000529 DA                    1643 	.db #0xda	; 218
      00052A 66                    1644 	.db #0x66	; 102	'f'
      00052B 5B                    1645 	.db #0x5b	; 91
      00052C 66                    1646 	.db #0x66	; 102	'f'
      00052D DA                    1647 	.db #0xda	; 218
      00052E 66                    1648 	.db #0x66	; 102	'f'
      00052F 5B                    1649 	.db #0x5b	; 91
      000530 66                    1650 	.db #0x66	; 102	'f'
      000531 5A                    1651 	.db #0x5a	; 90	'Z'
      000532 66                    1652 	.db #0x66	; 102	'f'
      000533 DA                    1653 	.db #0xda	; 218
      000534 66                    1654 	.db #0x66	; 102	'f'
      000535 3D                    1655 	.db #0x3d	; 61
      000536 24                    1656 	.db #0x24	; 36
      000537 8E                    1657 	.db #0x8e	; 142
      000538 10                    1658 	.db #0x10	; 16
      000539 1E                    1659 	.db #0x1e	; 30
      00053A 60                    1660 	.db #0x60	; 96
      00053B 02                    1661 	.db #0x02	; 2
      00053C FC                    1662 	.db #0xfc	; 252
      00053D 81                    1663 	.db #0x81	; 129
      00053E FE                    1664 	.db #0xfe	; 254
      00053F C0                    1665 	.db #0xc0	; 192
      000540 FE                    1666 	.db #0xfe	; 254
      000541 E6                    1667 	.db #0xe6	; 230
      000542 FE                    1668 	.db #0xfe	; 254
      000543 7C                    1669 	.db #0x7c	; 124
      000544 7C                    1670 	.db #0x7c	; 124
      000545 39                    1671 	.db #0x39	; 57	'9'
      000546 38                    1672 	.db #0x38	; 56	'8'
      000547 44                    1673 	.db #0x44	; 68	'D'
      000548 00                    1674 	.db #0x00	; 0
      000549 A9                    1675 	.db #0xa9	; 169
      00054A 00                    1676 	.db #0x00	; 0
      00054B 12                    1677 	.db #0x12	; 18
      00054C 00                    1678 	.db #0x00	; 0
      00054D 0C                    1679 	.db #0x0c	; 12
      00054E 30                    1680 	.db #0x30	; 48	'0'
      00054F 62                    1681 	.db #0x62	; 98	'b'
      000550 7C                    1682 	.db #0x7c	; 124
      000551 F9                    1683 	.db #0xf9	; 249
      000552 FE                    1684 	.db #0xfe	; 254
      000553 7C                    1685 	.db #0x7c	; 124
      000554 7F                    1686 	.db #0x7f	; 127
      000555 3E                    1687 	.db #0x3e	; 62
      000556 3E                    1688 	.db #0x3e	; 62
      000557 80                    1689 	.db #0x80	; 128
      000558 0E                    1690 	.db #0x0e	; 14
      000559 4D                    1691 	.db #0x4d	; 77	'M'
      00055A 12                    1692 	.db #0x12	; 18
      00055B 2C                    1693 	.db #0x2c	; 44
      00055C 32                    1694 	.db #0x32	; 50	'2'
      00055D 34                    1695 	.db #0x34	; 52	'4'
      00055E 2A                    1696 	.db #0x2a	; 42
      00055F E0                    1697 	.db #0xe0	; 224
      000560 7C                    1698 	.db #0x7c	; 124
      000561 71                    1699 	.db #0x71	; 113	'q'
      000562 7C                    1700 	.db #0x7c	; 124
      000563 7A                    1701 	.db #0x7a	; 122	'z'
      000564 7E                    1702 	.db #0x7e	; 126
      000565 FE                    1703 	.db #0xfe	; 254
      000566 7E                    1704 	.db #0x7e	; 126
      000567 9F                    1705 	.db #0x9f	; 159
      000568 1F                    1706 	.db #0x1f	; 31
      000569 3F                    1707 	.db #0x3f	; 63
      00056A 21                    1708 	.db #0x21	; 33
      00056B 61                    1709 	.db #0x61	; 97	'a'
      00056C 41                    1710 	.db #0x41	; 65	'A'
      00056D C1                    1711 	.db #0xc1	; 193
      00056E 81                    1712 	.db #0x81	; 129
      00056F 9F                    1713 	.db #0x9f	; 159
      000570 9F                    1714 	.db #0x9f	; 159
      000571 BF                    1715 	.db #0xbf	; 191
      000572 A1                    1716 	.db #0xa1	; 161
      000573 E1                    1717 	.db #0xe1	; 225
      000574 C1                    1718 	.db #0xc1	; 193
      000575 C1                    1719 	.db #0xc1	; 193
      000576 81                    1720 	.db #0x81	; 129
      000577 FA                    1721 	.db #0xfa	; 250
      000578 F8                    1722 	.db #0xf8	; 248
      000579 FC                    1723 	.db #0xfc	; 252
      00057A 04                    1724 	.db #0x04	; 4
      00057B 07                    1725 	.db #0x07	; 7
      00057C 02                    1726 	.db #0x02	; 2
      00057D 03                    1727 	.db #0x03	; 3
      00057E 01                    1728 	.db #0x01	; 1
      00057F F9                    1729 	.db #0xf9	; 249
      000580 F9                    1730 	.db #0xf9	; 249
      000581 FD                    1731 	.db #0xfd	; 253
      000582 05                    1732 	.db #0x05	; 5
      000583 07                    1733 	.db #0x07	; 7
      000584 03                    1734 	.db #0x03	; 3
      000585 03                    1735 	.db #0x03	; 3
      000586 01                    1736 	.db #0x01	; 1
      000587 9F                    1737 	.db #0x9f	; 159
      000588 9F                    1738 	.db #0x9f	; 159
      000589 BF                    1739 	.db #0xbf	; 191
      00058A A1                    1740 	.db #0xa1	; 161
      00058B E1                    1741 	.db #0xe1	; 225
      00058C C1                    1742 	.db #0xc1	; 193
      00058D C5                    1743 	.db #0xc5	; 197
      00058E 81                    1744 	.db #0x81	; 129
      00058F 9F                    1745 	.db #0x9f	; 159
      000590 9F                    1746 	.db #0x9f	; 159
      000591 BF                    1747 	.db #0xbf	; 191
      000592 A1                    1748 	.db #0xa1	; 161
      000593 E9                    1749 	.db #0xe9	; 233
      000594 C1                    1750 	.db #0xc1	; 193
      000595 C5                    1751 	.db #0xc5	; 197
      000596 81                    1752 	.db #0x81	; 129
      000597 F9                    1753 	.db #0xf9	; 249
      000598 F9                    1754 	.db #0xf9	; 249
      000599 FD                    1755 	.db #0xfd	; 253
      00059A 05                    1756 	.db #0x05	; 5
      00059B 07                    1757 	.db #0x07	; 7
      00059C 03                    1758 	.db #0x03	; 3
      00059D 03                    1759 	.db #0x03	; 3
      00059E 01                    1760 	.db #0x01	; 1
      00059F F9                    1761 	.db #0xf9	; 249
      0005A0 F9                    1762 	.db #0xf9	; 249
      0005A1 FD                    1763 	.db #0xfd	; 253
      0005A2 05                    1764 	.db #0x05	; 5
      0005A3 07                    1765 	.db #0x07	; 7
      0005A4 03                    1766 	.db #0x03	; 3
      0005A5 03                    1767 	.db #0x03	; 3
      0005A6 01                    1768 	.db #0x01	; 1
      0005A7 89                    1769 	.db #0x89	; 137
      0005A8 81                    1770 	.db #0x81	; 129
      0005A9 91                    1771 	.db #0x91	; 145
      0005AA 81                    1772 	.db #0x81	; 129
      0005AB 89                    1773 	.db #0x89	; 137
      0005AC 81                    1774 	.db #0x81	; 129
      0005AD 91                    1775 	.db #0x91	; 145
      0005AE 81                    1776 	.db #0x81	; 129
      0005AF 81                    1777 	.db #0x81	; 129
      0005B0 81                    1778 	.db #0x81	; 129
      0005B1 7F                    1779 	.db #0x7f	; 127
      0005B2 7F                    1780 	.db #0x7f	; 127
      0005B3 04                    1781 	.db #0x04	; 4
      0005B4 00                    1782 	.db #0x00	; 0
      0005B5 51                    1783 	.db #0x51	; 81	'Q'
      0005B6 00                    1784 	.db #0x00	; 0
      0005B7 41                    1785 	.db #0x41	; 65	'A'
      0005B8 01                    1786 	.db #0x01	; 1
      0005B9 21                    1787 	.db #0x21	; 33
      0005BA 01                    1788 	.db #0x01	; 1
      0005BB 21                    1789 	.db #0x21	; 33
      0005BC 01                    1790 	.db #0x01	; 1
      0005BD 19                    1791 	.db #0x19	; 25
      0005BE 01                    1792 	.db #0x01	; 1
      0005BF 01                    1793 	.db #0x01	; 1
      0005C0 01                    1794 	.db #0x01	; 1
      0005C1 FE                    1795 	.db #0xfe	; 254
      0005C2 FE                    1796 	.db #0xfe	; 254
      0005C3 10                    1797 	.db #0x10	; 16
      0005C4 00                    1798 	.db #0x00	; 0
      0005C5 42                    1799 	.db #0x42	; 66	'B'
      0005C6 00                    1800 	.db #0x00	; 0
      0005C7 09                    1801 	.db #0x09	; 9
      0005C8 01                    1802 	.db #0x01	; 1
      0005C9 86                    1803 	.db #0x86	; 134
      0005CA 07                    1804 	.db #0x07	; 7
      0005CB 2C                    1805 	.db #0x2c	; 44
      0005CC 0B                    1806 	.db #0x0b	; 11
      0005CD 1C                    1807 	.db #0x1c	; 28
      0005CE 13                    1808 	.db #0x13	; 19
      0005CF 38                    1809 	.db #0x38	; 56	'8'
      0005D0 25                    1810 	.db #0x25	; 37
      0005D1 F0                    1811 	.db #0xf0	; 240
      0005D2 4D                    1812 	.db #0x4d	; 77	'M'
      0005D3 70                    1813 	.db #0x70	; 112	'p'
      0005D4 4F                    1814 	.db #0x4f	; 79	'O'
      0005D5 70                    1815 	.db #0x70	; 112	'p'
      0005D6 4F                    1816 	.db #0x4f	; 79	'O'
      0005D7 70                    1817 	.db #0x70	; 112	'p'
      0005D8 4F                    1818 	.db #0x4f	; 79	'O'
      0005D9 70                    1819 	.db #0x70	; 112	'p'
      0005DA 4D                    1820 	.db #0x4d	; 77	'M'
      0005DB F0                    1821 	.db #0xf0	; 240
      0005DC 4D                    1822 	.db #0x4d	; 77	'M'
      0005DD 78                    1823 	.db #0x78	; 120	'x'
      0005DE 47                    1824 	.db #0x47	; 71	'G'
      0005DF 38                    1825 	.db #0x38	; 56	'8'
      0005E0 27                    1826 	.db #0x27	; 39
      0005E1 BC                    1827 	.db #0xbc	; 188
      0005E2 23                    1828 	.db #0x23	; 35
      0005E3 5E                    1829 	.db #0x5e	; 94
      0005E4 11                    1830 	.db #0x11	; 17
      0005E5 7F                    1831 	.db #0x7f	; 127
      0005E6 7F                    1832 	.db #0x7f	; 127
      0005E7 90                    1833 	.db #0x90	; 144
      0005E8 80                    1834 	.db #0x80	; 128
      0005E9 62                    1835 	.db #0x62	; 98	'b'
      0005EA E0                    1836 	.db #0xe0	; 224
      0005EB 35                    1837 	.db #0x35	; 53	'5'
      0005EC D0                    1838 	.db #0xd0	; 208
      0005ED 38                    1839 	.db #0x38	; 56	'8'
      0005EE C8                    1840 	.db #0xc8	; 200
      0005EF 1C                    1841 	.db #0x1c	; 28
      0005F0 E4                    1842 	.db #0xe4	; 228
      0005F1 0E                    1843 	.db #0x0e	; 14
      0005F2 D2                    1844 	.db #0xd2	; 210
      0005F3 0F                    1845 	.db #0x0f	; 15
      0005F4 D2                    1846 	.db #0xd2	; 210
      0005F5 0E                    1847 	.db #0x0e	; 14
      0005F6 F2                    1848 	.db #0xf2	; 242
      0005F7 0E                    1849 	.db #0x0e	; 14
      0005F8 F2                    1850 	.db #0xf2	; 242
      0005F9 0F                    1851 	.db #0x0f	; 15
      0005FA F2                    1852 	.db #0xf2	; 242
      0005FB 0E                    1853 	.db #0x0e	; 14
      0005FC F2                    1854 	.db #0xf2	; 242
      0005FD 1E                    1855 	.db #0x1e	; 30
      0005FE 62                    1856 	.db #0x62	; 98	'b'
      0005FF 1C                    1857 	.db #0x1c	; 28
      000600 64                    1858 	.db #0x64	; 100	'd'
      000601 3D                    1859 	.db #0x3d	; 61
      000602 C4                    1860 	.db #0xc4	; 196
      000603 7A                    1861 	.db #0x7a	; 122	'z'
      000604 88                    1862 	.db #0x88	; 136
      000605 FF                    1863 	.db #0xff	; 255
      000606 FE                    1864 	.db #0xfe	; 254
      000607                       1865 _marsbackground:
      000607 25                    1866 	.db #0x25	; 37
      000608 25                    1867 	.db #0x25	; 37
      000609 25                    1868 	.db #0x25	; 37
      00060A 25                    1869 	.db #0x25	; 37
      00060B 25                    1870 	.db #0x25	; 37
      00060C 25                    1871 	.db #0x25	; 37
      00060D 25                    1872 	.db #0x25	; 37
      00060E 25                    1873 	.db #0x25	; 37
      00060F 25                    1874 	.db #0x25	; 37
      000610 25                    1875 	.db #0x25	; 37
      000611 25                    1876 	.db #0x25	; 37
      000612 25                    1877 	.db #0x25	; 37
      000613 25                    1878 	.db #0x25	; 37
      000614 25                    1879 	.db #0x25	; 37
      000615 25                    1880 	.db #0x25	; 37
      000616 25                    1881 	.db #0x25	; 37
      000617 25                    1882 	.db #0x25	; 37
      000618 25                    1883 	.db #0x25	; 37
      000619 25                    1884 	.db #0x25	; 37
      00061A 25                    1885 	.db #0x25	; 37
      00061B 25                    1886 	.db #0x25	; 37
      00061C 25                    1887 	.db #0x25	; 37
      00061D 27                    1888 	.db #0x27	; 39
      00061E 25                    1889 	.db #0x25	; 37
      00061F 25                    1890 	.db #0x25	; 37
      000620 25                    1891 	.db #0x25	; 37
      000621 25                    1892 	.db #0x25	; 37
      000622 25                    1893 	.db #0x25	; 37
      000623 25                    1894 	.db #0x25	; 37
      000624 25                    1895 	.db #0x25	; 37
      000625 25                    1896 	.db #0x25	; 37
      000626 25                    1897 	.db #0x25	; 37
      000627 25                    1898 	.db #0x25	; 37
      000628 25                    1899 	.db #0x25	; 37
      000629 25                    1900 	.db #0x25	; 37
      00062A 25                    1901 	.db #0x25	; 37
      00062B 25                    1902 	.db #0x25	; 37
      00062C 25                    1903 	.db #0x25	; 37
      00062D 25                    1904 	.db #0x25	; 37
      00062E 25                    1905 	.db #0x25	; 37
      00062F 25                    1906 	.db #0x25	; 37
      000630 25                    1907 	.db #0x25	; 37
      000631 25                    1908 	.db #0x25	; 37
      000632 25                    1909 	.db #0x25	; 37
      000633 25                    1910 	.db #0x25	; 37
      000634 25                    1911 	.db #0x25	; 37
      000635 25                    1912 	.db #0x25	; 37
      000636 25                    1913 	.db #0x25	; 37
      000637 25                    1914 	.db #0x25	; 37
      000638 25                    1915 	.db #0x25	; 37
      000639 25                    1916 	.db #0x25	; 37
      00063A 25                    1917 	.db #0x25	; 37
      00063B 25                    1918 	.db #0x25	; 37
      00063C 25                    1919 	.db #0x25	; 37
      00063D 27                    1920 	.db #0x27	; 39
      00063E 25                    1921 	.db #0x25	; 37
      00063F 25                    1922 	.db #0x25	; 37
      000640 25                    1923 	.db #0x25	; 37
      000641 25                    1924 	.db #0x25	; 37
      000642 25                    1925 	.db #0x25	; 37
      000643 25                    1926 	.db #0x25	; 37
      000644 25                    1927 	.db #0x25	; 37
      000645 25                    1928 	.db #0x25	; 37
      000646 25                    1929 	.db #0x25	; 37
      000647 25                    1930 	.db #0x25	; 37
      000648 25                    1931 	.db #0x25	; 37
      000649 25                    1932 	.db #0x25	; 37
      00064A 28                    1933 	.db #0x28	; 40
      00064B 25                    1934 	.db #0x25	; 37
      00064C 25                    1935 	.db #0x25	; 37
      00064D 25                    1936 	.db #0x25	; 37
      00064E 25                    1937 	.db #0x25	; 37
      00064F 25                    1938 	.db #0x25	; 37
      000650 25                    1939 	.db #0x25	; 37
      000651 25                    1940 	.db #0x25	; 37
      000652 25                    1941 	.db #0x25	; 37
      000653 25                    1942 	.db #0x25	; 37
      000654 25                    1943 	.db #0x25	; 37
      000655 25                    1944 	.db #0x25	; 37
      000656 25                    1945 	.db #0x25	; 37
      000657 25                    1946 	.db #0x25	; 37
      000658 25                    1947 	.db #0x25	; 37
      000659 25                    1948 	.db #0x25	; 37
      00065A 25                    1949 	.db #0x25	; 37
      00065B 25                    1950 	.db #0x25	; 37
      00065C 25                    1951 	.db #0x25	; 37
      00065D 27                    1952 	.db #0x27	; 39
      00065E 25                    1953 	.db #0x25	; 37
      00065F 25                    1954 	.db #0x25	; 37
      000660 25                    1955 	.db #0x25	; 37
      000661 25                    1956 	.db #0x25	; 37
      000662 25                    1957 	.db #0x25	; 37
      000663 25                    1958 	.db #0x25	; 37
      000664 25                    1959 	.db #0x25	; 37
      000665 25                    1960 	.db #0x25	; 37
      000666 25                    1961 	.db #0x25	; 37
      000667 25                    1962 	.db #0x25	; 37
      000668 25                    1963 	.db #0x25	; 37
      000669 25                    1964 	.db #0x25	; 37
      00066A 25                    1965 	.db #0x25	; 37
      00066B 25                    1966 	.db #0x25	; 37
      00066C 25                    1967 	.db #0x25	; 37
      00066D 25                    1968 	.db #0x25	; 37
      00066E 25                    1969 	.db #0x25	; 37
      00066F 25                    1970 	.db #0x25	; 37
      000670 25                    1971 	.db #0x25	; 37
      000671 25                    1972 	.db #0x25	; 37
      000672 25                    1973 	.db #0x25	; 37
      000673 25                    1974 	.db #0x25	; 37
      000674 25                    1975 	.db #0x25	; 37
      000675 25                    1976 	.db #0x25	; 37
      000676 25                    1977 	.db #0x25	; 37
      000677 25                    1978 	.db #0x25	; 37
      000678 25                    1979 	.db #0x25	; 37
      000679 25                    1980 	.db #0x25	; 37
      00067A 25                    1981 	.db #0x25	; 37
      00067B 25                    1982 	.db #0x25	; 37
      00067C 2A                    1983 	.db #0x2a	; 42
      00067D 27                    1984 	.db #0x27	; 39
      00067E 25                    1985 	.db #0x25	; 37
      00067F 25                    1986 	.db #0x25	; 37
      000680 25                    1987 	.db #0x25	; 37
      000681 25                    1988 	.db #0x25	; 37
      000682 25                    1989 	.db #0x25	; 37
      000683 25                    1990 	.db #0x25	; 37
      000684 25                    1991 	.db #0x25	; 37
      000685 25                    1992 	.db #0x25	; 37
      000686 25                    1993 	.db #0x25	; 37
      000687 25                    1994 	.db #0x25	; 37
      000688 25                    1995 	.db #0x25	; 37
      000689 25                    1996 	.db #0x25	; 37
      00068A 25                    1997 	.db #0x25	; 37
      00068B 25                    1998 	.db #0x25	; 37
      00068C 25                    1999 	.db #0x25	; 37
      00068D 25                    2000 	.db #0x25	; 37
      00068E 25                    2001 	.db #0x25	; 37
      00068F 25                    2002 	.db #0x25	; 37
      000690 25                    2003 	.db #0x25	; 37
      000691 25                    2004 	.db #0x25	; 37
      000692 2B                    2005 	.db #0x2b	; 43
      000693 2C                    2006 	.db #0x2c	; 44
      000694 25                    2007 	.db #0x25	; 37
      000695 25                    2008 	.db #0x25	; 37
      000696 25                    2009 	.db #0x25	; 37
      000697 25                    2010 	.db #0x25	; 37
      000698 25                    2011 	.db #0x25	; 37
      000699 25                    2012 	.db #0x25	; 37
      00069A 25                    2013 	.db #0x25	; 37
      00069B 25                    2014 	.db #0x25	; 37
      00069C 25                    2015 	.db #0x25	; 37
      00069D 27                    2016 	.db #0x27	; 39
      00069E 25                    2017 	.db #0x25	; 37
      00069F 25                    2018 	.db #0x25	; 37
      0006A0 25                    2019 	.db #0x25	; 37
      0006A1 25                    2020 	.db #0x25	; 37
      0006A2 25                    2021 	.db #0x25	; 37
      0006A3 25                    2022 	.db #0x25	; 37
      0006A4 25                    2023 	.db #0x25	; 37
      0006A5 25                    2024 	.db #0x25	; 37
      0006A6 25                    2025 	.db #0x25	; 37
      0006A7 25                    2026 	.db #0x25	; 37
      0006A8 25                    2027 	.db #0x25	; 37
      0006A9 25                    2028 	.db #0x25	; 37
      0006AA 25                    2029 	.db #0x25	; 37
      0006AB 25                    2030 	.db #0x25	; 37
      0006AC 25                    2031 	.db #0x25	; 37
      0006AD 29                    2032 	.db #0x29	; 41
      0006AE 25                    2033 	.db #0x25	; 37
      0006AF 25                    2034 	.db #0x25	; 37
      0006B0 25                    2035 	.db #0x25	; 37
      0006B1 25                    2036 	.db #0x25	; 37
      0006B2 2D                    2037 	.db #0x2d	; 45
      0006B3 2E                    2038 	.db #0x2e	; 46
      0006B4 25                    2039 	.db #0x25	; 37
      0006B5 25                    2040 	.db #0x25	; 37
      0006B6 25                    2041 	.db #0x25	; 37
      0006B7 25                    2042 	.db #0x25	; 37
      0006B8 25                    2043 	.db #0x25	; 37
      0006B9 25                    2044 	.db #0x25	; 37
      0006BA 25                    2045 	.db #0x25	; 37
      0006BB 25                    2046 	.db #0x25	; 37
      0006BC 25                    2047 	.db #0x25	; 37
      0006BD 27                    2048 	.db #0x27	; 39
      0006BE 25                    2049 	.db #0x25	; 37
      0006BF 25                    2050 	.db #0x25	; 37
      0006C0 25                    2051 	.db #0x25	; 37
      0006C1 25                    2052 	.db #0x25	; 37
      0006C2 25                    2053 	.db #0x25	; 37
      0006C3 25                    2054 	.db #0x25	; 37
      0006C4 25                    2055 	.db #0x25	; 37
      0006C5 25                    2056 	.db #0x25	; 37
      0006C6 25                    2057 	.db #0x25	; 37
      0006C7 25                    2058 	.db #0x25	; 37
      0006C8 25                    2059 	.db #0x25	; 37
      0006C9 25                    2060 	.db #0x25	; 37
      0006CA 25                    2061 	.db #0x25	; 37
      0006CB 25                    2062 	.db #0x25	; 37
      0006CC 25                    2063 	.db #0x25	; 37
      0006CD 25                    2064 	.db #0x25	; 37
      0006CE 25                    2065 	.db #0x25	; 37
      0006CF 25                    2066 	.db #0x25	; 37
      0006D0 25                    2067 	.db #0x25	; 37
      0006D1 25                    2068 	.db #0x25	; 37
      0006D2 2D                    2069 	.db #0x2d	; 45
      0006D3 2E                    2070 	.db #0x2e	; 46
      0006D4 25                    2071 	.db #0x25	; 37
      0006D5 25                    2072 	.db #0x25	; 37
      0006D6 25                    2073 	.db #0x25	; 37
      0006D7 25                    2074 	.db #0x25	; 37
      0006D8 25                    2075 	.db #0x25	; 37
      0006D9 25                    2076 	.db #0x25	; 37
      0006DA 25                    2077 	.db #0x25	; 37
      0006DB 25                    2078 	.db #0x25	; 37
      0006DC 25                    2079 	.db #0x25	; 37
      0006DD 27                    2080 	.db #0x27	; 39
      0006DE 25                    2081 	.db #0x25	; 37
      0006DF 25                    2082 	.db #0x25	; 37
      0006E0 25                    2083 	.db #0x25	; 37
      0006E1 25                    2084 	.db #0x25	; 37
      0006E2 25                    2085 	.db #0x25	; 37
      0006E3 25                    2086 	.db #0x25	; 37
      0006E4 25                    2087 	.db #0x25	; 37
      0006E5 25                    2088 	.db #0x25	; 37
      0006E6 25                    2089 	.db #0x25	; 37
      0006E7 25                    2090 	.db #0x25	; 37
      0006E8 25                    2091 	.db #0x25	; 37
      0006E9 25                    2092 	.db #0x25	; 37
      0006EA 25                    2093 	.db #0x25	; 37
      0006EB 25                    2094 	.db #0x25	; 37
      0006EC 25                    2095 	.db #0x25	; 37
      0006ED 25                    2096 	.db #0x25	; 37
      0006EE 25                    2097 	.db #0x25	; 37
      0006EF 25                    2098 	.db #0x25	; 37
      0006F0 25                    2099 	.db #0x25	; 37
      0006F1 25                    2100 	.db #0x25	; 37
      0006F2 2D                    2101 	.db #0x2d	; 45
      0006F3 2E                    2102 	.db #0x2e	; 46
      0006F4 25                    2103 	.db #0x25	; 37
      0006F5 25                    2104 	.db #0x25	; 37
      0006F6 25                    2105 	.db #0x25	; 37
      0006F7 25                    2106 	.db #0x25	; 37
      0006F8 25                    2107 	.db #0x25	; 37
      0006F9 25                    2108 	.db #0x25	; 37
      0006FA 25                    2109 	.db #0x25	; 37
      0006FB 25                    2110 	.db #0x25	; 37
      0006FC 25                    2111 	.db #0x25	; 37
      0006FD 27                    2112 	.db #0x27	; 39
      0006FE 25                    2113 	.db #0x25	; 37
      0006FF 25                    2114 	.db #0x25	; 37
      000700 25                    2115 	.db #0x25	; 37
      000701 25                    2116 	.db #0x25	; 37
      000702 25                    2117 	.db #0x25	; 37
      000703 25                    2118 	.db #0x25	; 37
      000704 25                    2119 	.db #0x25	; 37
      000705 25                    2120 	.db #0x25	; 37
      000706 25                    2121 	.db #0x25	; 37
      000707 25                    2122 	.db #0x25	; 37
      000708 25                    2123 	.db #0x25	; 37
      000709 25                    2124 	.db #0x25	; 37
      00070A 25                    2125 	.db #0x25	; 37
      00070B 25                    2126 	.db #0x25	; 37
      00070C 25                    2127 	.db #0x25	; 37
      00070D 25                    2128 	.db #0x25	; 37
      00070E 25                    2129 	.db #0x25	; 37
      00070F 25                    2130 	.db #0x25	; 37
      000710 25                    2131 	.db #0x25	; 37
      000711 25                    2132 	.db #0x25	; 37
      000712 2D                    2133 	.db #0x2d	; 45
      000713 2E                    2134 	.db #0x2e	; 46
      000714 25                    2135 	.db #0x25	; 37
      000715 25                    2136 	.db #0x25	; 37
      000716 25                    2137 	.db #0x25	; 37
      000717 25                    2138 	.db #0x25	; 37
      000718 25                    2139 	.db #0x25	; 37
      000719 25                    2140 	.db #0x25	; 37
      00071A 25                    2141 	.db #0x25	; 37
      00071B 25                    2142 	.db #0x25	; 37
      00071C 25                    2143 	.db #0x25	; 37
      00071D 27                    2144 	.db #0x27	; 39
      00071E 25                    2145 	.db #0x25	; 37
      00071F 25                    2146 	.db #0x25	; 37
      000720 25                    2147 	.db #0x25	; 37
      000721 25                    2148 	.db #0x25	; 37
      000722 25                    2149 	.db #0x25	; 37
      000723 25                    2150 	.db #0x25	; 37
      000724 25                    2151 	.db #0x25	; 37
      000725 25                    2152 	.db #0x25	; 37
      000726 25                    2153 	.db #0x25	; 37
      000727 25                    2154 	.db #0x25	; 37
      000728 25                    2155 	.db #0x25	; 37
      000729 25                    2156 	.db #0x25	; 37
      00072A 25                    2157 	.db #0x25	; 37
      00072B 25                    2158 	.db #0x25	; 37
      00072C 25                    2159 	.db #0x25	; 37
      00072D 25                    2160 	.db #0x25	; 37
      00072E 25                    2161 	.db #0x25	; 37
      00072F 25                    2162 	.db #0x25	; 37
      000730 25                    2163 	.db #0x25	; 37
      000731 25                    2164 	.db #0x25	; 37
      000732 2D                    2165 	.db #0x2d	; 45
      000733 2E                    2166 	.db #0x2e	; 46
      000734 25                    2167 	.db #0x25	; 37
      000735 25                    2168 	.db #0x25	; 37
      000736 25                    2169 	.db #0x25	; 37
      000737 25                    2170 	.db #0x25	; 37
      000738 25                    2171 	.db #0x25	; 37
      000739 25                    2172 	.db #0x25	; 37
      00073A 25                    2173 	.db #0x25	; 37
      00073B 25                    2174 	.db #0x25	; 37
      00073C 25                    2175 	.db #0x25	; 37
      00073D 27                    2176 	.db #0x27	; 39
      00073E 25                    2177 	.db #0x25	; 37
      00073F 29                    2178 	.db #0x29	; 41
      000740 25                    2179 	.db #0x25	; 37
      000741 25                    2180 	.db #0x25	; 37
      000742 25                    2181 	.db #0x25	; 37
      000743 25                    2182 	.db #0x25	; 37
      000744 25                    2183 	.db #0x25	; 37
      000745 25                    2184 	.db #0x25	; 37
      000746 25                    2185 	.db #0x25	; 37
      000747 26                    2186 	.db #0x26	; 38
      000748 26                    2187 	.db #0x26	; 38
      000749 26                    2188 	.db #0x26	; 38
      00074A 26                    2189 	.db #0x26	; 38
      00074B 25                    2190 	.db #0x25	; 37
      00074C 25                    2191 	.db #0x25	; 37
      00074D 25                    2192 	.db #0x25	; 37
      00074E 25                    2193 	.db #0x25	; 37
      00074F 25                    2194 	.db #0x25	; 37
      000750 25                    2195 	.db #0x25	; 37
      000751 25                    2196 	.db #0x25	; 37
      000752 2F                    2197 	.db #0x2f	; 47
      000753 30                    2198 	.db #0x30	; 48	'0'
      000754 26                    2199 	.db #0x26	; 38
      000755 26                    2200 	.db #0x26	; 38
      000756 26                    2201 	.db #0x26	; 38
      000757 26                    2202 	.db #0x26	; 38
      000758 26                    2203 	.db #0x26	; 38
      000759 26                    2204 	.db #0x26	; 38
      00075A 26                    2205 	.db #0x26	; 38
      00075B 26                    2206 	.db #0x26	; 38
      00075C 26                    2207 	.db #0x26	; 38
      00075D 26                    2208 	.db #0x26	; 38
      00075E 26                    2209 	.db #0x26	; 38
      00075F 26                    2210 	.db #0x26	; 38
      000760 26                    2211 	.db #0x26	; 38
      000761 26                    2212 	.db #0x26	; 38
      000762 26                    2213 	.db #0x26	; 38
      000763 26                    2214 	.db #0x26	; 38
      000764 26                    2215 	.db #0x26	; 38
      000765 26                    2216 	.db #0x26	; 38
      000766 26                    2217 	.db #0x26	; 38
      000767 25                    2218 	.db #0x25	; 37
      000768 25                    2219 	.db #0x25	; 37
      000769 25                    2220 	.db #0x25	; 37
      00076A 27                    2221 	.db #0x27	; 39
      00076B 25                    2222 	.db #0x25	; 37
      00076C 25                    2223 	.db #0x25	; 37
      00076D 25                    2224 	.db #0x25	; 37
      00076E 25                    2225 	.db #0x25	; 37
      00076F 25                    2226 	.db #0x25	; 37
      000770 25                    2227 	.db #0x25	; 37
      000771 25                    2228 	.db #0x25	; 37
      000772 25                    2229 	.db #0x25	; 37
      000773 25                    2230 	.db #0x25	; 37
      000774 25                    2231 	.db #0x25	; 37
      000775 25                    2232 	.db #0x25	; 37
      000776 25                    2233 	.db #0x25	; 37
      000777 25                    2234 	.db #0x25	; 37
      000778 25                    2235 	.db #0x25	; 37
      000779 25                    2236 	.db #0x25	; 37
      00077A 25                    2237 	.db #0x25	; 37
      00077B 25                    2238 	.db #0x25	; 37
      00077C 25                    2239 	.db #0x25	; 37
      00077D 25                    2240 	.db #0x25	; 37
      00077E 25                    2241 	.db #0x25	; 37
      00077F 25                    2242 	.db #0x25	; 37
      000780 25                    2243 	.db #0x25	; 37
      000781 25                    2244 	.db #0x25	; 37
      000782 25                    2245 	.db #0x25	; 37
      000783 25                    2246 	.db #0x25	; 37
      000784 25                    2247 	.db #0x25	; 37
      000785 25                    2248 	.db #0x25	; 37
      000786 25                    2249 	.db #0x25	; 37
      000787 25                    2250 	.db #0x25	; 37
      000788 25                    2251 	.db #0x25	; 37
      000789 25                    2252 	.db #0x25	; 37
      00078A 27                    2253 	.db #0x27	; 39
      00078B 25                    2254 	.db #0x25	; 37
      00078C 25                    2255 	.db #0x25	; 37
      00078D 25                    2256 	.db #0x25	; 37
      00078E 25                    2257 	.db #0x25	; 37
      00078F 25                    2258 	.db #0x25	; 37
      000790 25                    2259 	.db #0x25	; 37
      000791 25                    2260 	.db #0x25	; 37
      000792 25                    2261 	.db #0x25	; 37
      000793 25                    2262 	.db #0x25	; 37
      000794 25                    2263 	.db #0x25	; 37
      000795 25                    2264 	.db #0x25	; 37
      000796 25                    2265 	.db #0x25	; 37
      000797 25                    2266 	.db #0x25	; 37
      000798 25                    2267 	.db #0x25	; 37
      000799 25                    2268 	.db #0x25	; 37
      00079A 25                    2269 	.db #0x25	; 37
      00079B 25                    2270 	.db #0x25	; 37
      00079C 25                    2271 	.db #0x25	; 37
      00079D 25                    2272 	.db #0x25	; 37
      00079E 25                    2273 	.db #0x25	; 37
      00079F 25                    2274 	.db #0x25	; 37
      0007A0 25                    2275 	.db #0x25	; 37
      0007A1 25                    2276 	.db #0x25	; 37
      0007A2 25                    2277 	.db #0x25	; 37
      0007A3 25                    2278 	.db #0x25	; 37
      0007A4 25                    2279 	.db #0x25	; 37
      0007A5 25                    2280 	.db #0x25	; 37
      0007A6 25                    2281 	.db #0x25	; 37
      0007A7 25                    2282 	.db #0x25	; 37
      0007A8 25                    2283 	.db #0x25	; 37
      0007A9 25                    2284 	.db #0x25	; 37
      0007AA 27                    2285 	.db #0x27	; 39
      0007AB 25                    2286 	.db #0x25	; 37
      0007AC 25                    2287 	.db #0x25	; 37
      0007AD 25                    2288 	.db #0x25	; 37
      0007AE 25                    2289 	.db #0x25	; 37
      0007AF 25                    2290 	.db #0x25	; 37
      0007B0 25                    2291 	.db #0x25	; 37
      0007B1 25                    2292 	.db #0x25	; 37
      0007B2 25                    2293 	.db #0x25	; 37
      0007B3 25                    2294 	.db #0x25	; 37
      0007B4 25                    2295 	.db #0x25	; 37
      0007B5 25                    2296 	.db #0x25	; 37
      0007B6 25                    2297 	.db #0x25	; 37
      0007B7 25                    2298 	.db #0x25	; 37
      0007B8 25                    2299 	.db #0x25	; 37
      0007B9 28                    2300 	.db #0x28	; 40
      0007BA 25                    2301 	.db #0x25	; 37
      0007BB 25                    2302 	.db #0x25	; 37
      0007BC 25                    2303 	.db #0x25	; 37
      0007BD 25                    2304 	.db #0x25	; 37
      0007BE 25                    2305 	.db #0x25	; 37
      0007BF 25                    2306 	.db #0x25	; 37
      0007C0 25                    2307 	.db #0x25	; 37
      0007C1 25                    2308 	.db #0x25	; 37
      0007C2 25                    2309 	.db #0x25	; 37
      0007C3 25                    2310 	.db #0x25	; 37
      0007C4 25                    2311 	.db #0x25	; 37
      0007C5 25                    2312 	.db #0x25	; 37
      0007C6 25                    2313 	.db #0x25	; 37
      0007C7 25                    2314 	.db #0x25	; 37
      0007C8 25                    2315 	.db #0x25	; 37
      0007C9 28                    2316 	.db #0x28	; 40
      0007CA 27                    2317 	.db #0x27	; 39
      0007CB 25                    2318 	.db #0x25	; 37
      0007CC 25                    2319 	.db #0x25	; 37
      0007CD 25                    2320 	.db #0x25	; 37
      0007CE 25                    2321 	.db #0x25	; 37
      0007CF 25                    2322 	.db #0x25	; 37
      0007D0 25                    2323 	.db #0x25	; 37
      0007D1 25                    2324 	.db #0x25	; 37
      0007D2 25                    2325 	.db #0x25	; 37
      0007D3 25                    2326 	.db #0x25	; 37
      0007D4 25                    2327 	.db #0x25	; 37
      0007D5 25                    2328 	.db #0x25	; 37
      0007D6 25                    2329 	.db #0x25	; 37
      0007D7 25                    2330 	.db #0x25	; 37
      0007D8 25                    2331 	.db #0x25	; 37
      0007D9 25                    2332 	.db #0x25	; 37
      0007DA 25                    2333 	.db #0x25	; 37
      0007DB 25                    2334 	.db #0x25	; 37
      0007DC 25                    2335 	.db #0x25	; 37
      0007DD 25                    2336 	.db #0x25	; 37
      0007DE 25                    2337 	.db #0x25	; 37
      0007DF 25                    2338 	.db #0x25	; 37
      0007E0 25                    2339 	.db #0x25	; 37
      0007E1 25                    2340 	.db #0x25	; 37
      0007E2 25                    2341 	.db #0x25	; 37
      0007E3 25                    2342 	.db #0x25	; 37
      0007E4 25                    2343 	.db #0x25	; 37
      0007E5 25                    2344 	.db #0x25	; 37
      0007E6 25                    2345 	.db #0x25	; 37
      0007E7 25                    2346 	.db #0x25	; 37
      0007E8 25                    2347 	.db #0x25	; 37
      0007E9 25                    2348 	.db #0x25	; 37
      0007EA 27                    2349 	.db #0x27	; 39
      0007EB 25                    2350 	.db #0x25	; 37
      0007EC 25                    2351 	.db #0x25	; 37
      0007ED 25                    2352 	.db #0x25	; 37
      0007EE 25                    2353 	.db #0x25	; 37
      0007EF 25                    2354 	.db #0x25	; 37
      0007F0 25                    2355 	.db #0x25	; 37
      0007F1 25                    2356 	.db #0x25	; 37
      0007F2 25                    2357 	.db #0x25	; 37
      0007F3 25                    2358 	.db #0x25	; 37
      0007F4 25                    2359 	.db #0x25	; 37
      0007F5 25                    2360 	.db #0x25	; 37
      0007F6 25                    2361 	.db #0x25	; 37
      0007F7 25                    2362 	.db #0x25	; 37
      0007F8 25                    2363 	.db #0x25	; 37
      0007F9 25                    2364 	.db #0x25	; 37
      0007FA 25                    2365 	.db #0x25	; 37
      0007FB 25                    2366 	.db #0x25	; 37
      0007FC 25                    2367 	.db #0x25	; 37
      0007FD 25                    2368 	.db #0x25	; 37
      0007FE 25                    2369 	.db #0x25	; 37
      0007FF 25                    2370 	.db #0x25	; 37
      000800 25                    2371 	.db #0x25	; 37
      000801 25                    2372 	.db #0x25	; 37
      000802 25                    2373 	.db #0x25	; 37
      000803 25                    2374 	.db #0x25	; 37
      000804 25                    2375 	.db #0x25	; 37
      000805 25                    2376 	.db #0x25	; 37
      000806 25                    2377 	.db #0x25	; 37
      000807 25                    2378 	.db #0x25	; 37
      000808 25                    2379 	.db #0x25	; 37
      000809 25                    2380 	.db #0x25	; 37
      00080A 27                    2381 	.db #0x27	; 39
      00080B 25                    2382 	.db #0x25	; 37
      00080C 25                    2383 	.db #0x25	; 37
      00080D 25                    2384 	.db #0x25	; 37
      00080E 2A                    2385 	.db #0x2a	; 42
      00080F 25                    2386 	.db #0x25	; 37
      000810 25                    2387 	.db #0x25	; 37
      000811 25                    2388 	.db #0x25	; 37
      000812 25                    2389 	.db #0x25	; 37
      000813 25                    2390 	.db #0x25	; 37
      000814 25                    2391 	.db #0x25	; 37
      000815 25                    2392 	.db #0x25	; 37
      000816 25                    2393 	.db #0x25	; 37
      000817 25                    2394 	.db #0x25	; 37
      000818 25                    2395 	.db #0x25	; 37
      000819 25                    2396 	.db #0x25	; 37
      00081A 25                    2397 	.db #0x25	; 37
      00081B 25                    2398 	.db #0x25	; 37
      00081C 25                    2399 	.db #0x25	; 37
      00081D 25                    2400 	.db #0x25	; 37
      00081E 25                    2401 	.db #0x25	; 37
      00081F 25                    2402 	.db #0x25	; 37
      000820 25                    2403 	.db #0x25	; 37
      000821 25                    2404 	.db #0x25	; 37
      000822 25                    2405 	.db #0x25	; 37
      000823 25                    2406 	.db #0x25	; 37
      000824 25                    2407 	.db #0x25	; 37
      000825 25                    2408 	.db #0x25	; 37
      000826 25                    2409 	.db #0x25	; 37
      000827 25                    2410 	.db #0x25	; 37
      000828 25                    2411 	.db #0x25	; 37
      000829 25                    2412 	.db #0x25	; 37
      00082A 27                    2413 	.db #0x27	; 39
      00082B 25                    2414 	.db #0x25	; 37
      00082C 25                    2415 	.db #0x25	; 37
      00082D 25                    2416 	.db #0x25	; 37
      00082E 25                    2417 	.db #0x25	; 37
      00082F 25                    2418 	.db #0x25	; 37
      000830 25                    2419 	.db #0x25	; 37
      000831 25                    2420 	.db #0x25	; 37
      000832 25                    2421 	.db #0x25	; 37
      000833 25                    2422 	.db #0x25	; 37
      000834 25                    2423 	.db #0x25	; 37
      000835 25                    2424 	.db #0x25	; 37
      000836 25                    2425 	.db #0x25	; 37
      000837 25                    2426 	.db #0x25	; 37
      000838 25                    2427 	.db #0x25	; 37
      000839 25                    2428 	.db #0x25	; 37
      00083A 25                    2429 	.db #0x25	; 37
      00083B 25                    2430 	.db #0x25	; 37
      00083C 25                    2431 	.db #0x25	; 37
      00083D 25                    2432 	.db #0x25	; 37
      00083E 25                    2433 	.db #0x25	; 37
      00083F 25                    2434 	.db #0x25	; 37
      000840 25                    2435 	.db #0x25	; 37
      000841 25                    2436 	.db #0x25	; 37
      000842 25                    2437 	.db #0x25	; 37
      000843 25                    2438 	.db #0x25	; 37
      000844 25                    2439 	.db #0x25	; 37
      000845 25                    2440 	.db #0x25	; 37
      000846 25                    2441 	.db #0x25	; 37
      000847 25                    2442 	.db #0x25	; 37
      000848 25                    2443 	.db #0x25	; 37
      000849 25                    2444 	.db #0x25	; 37
      00084A 27                    2445 	.db #0x27	; 39
      00084B 25                    2446 	.db #0x25	; 37
      00084C 25                    2447 	.db #0x25	; 37
      00084D 25                    2448 	.db #0x25	; 37
      00084E 25                    2449 	.db #0x25	; 37
      00084F 25                    2450 	.db #0x25	; 37
      000850 25                    2451 	.db #0x25	; 37
      000851 25                    2452 	.db #0x25	; 37
      000852 25                    2453 	.db #0x25	; 37
      000853 25                    2454 	.db #0x25	; 37
      000854 25                    2455 	.db #0x25	; 37
      000855 25                    2456 	.db #0x25	; 37
      000856 25                    2457 	.db #0x25	; 37
      000857 25                    2458 	.db #0x25	; 37
      000858 25                    2459 	.db #0x25	; 37
      000859 25                    2460 	.db #0x25	; 37
      00085A 25                    2461 	.db #0x25	; 37
      00085B 25                    2462 	.db #0x25	; 37
      00085C 31                    2463 	.db #0x31	; 49	'1'
      00085D 33                    2464 	.db #0x33	; 51	'3'
      00085E 25                    2465 	.db #0x25	; 37
      00085F 25                    2466 	.db #0x25	; 37
      000860 25                    2467 	.db #0x25	; 37
      000861 2A                    2468 	.db #0x2a	; 42
      000862 25                    2469 	.db #0x25	; 37
      000863 25                    2470 	.db #0x25	; 37
      000864 25                    2471 	.db #0x25	; 37
      000865 25                    2472 	.db #0x25	; 37
      000866 25                    2473 	.db #0x25	; 37
      000867 25                    2474 	.db #0x25	; 37
      000868 25                    2475 	.db #0x25	; 37
      000869 25                    2476 	.db #0x25	; 37
      00086A 27                    2477 	.db #0x27	; 39
      00086B 25                    2478 	.db #0x25	; 37
      00086C 25                    2479 	.db #0x25	; 37
      00086D 25                    2480 	.db #0x25	; 37
      00086E 25                    2481 	.db #0x25	; 37
      00086F 25                    2482 	.db #0x25	; 37
      000870 25                    2483 	.db #0x25	; 37
      000871 25                    2484 	.db #0x25	; 37
      000872 25                    2485 	.db #0x25	; 37
      000873 25                    2486 	.db #0x25	; 37
      000874 25                    2487 	.db #0x25	; 37
      000875 25                    2488 	.db #0x25	; 37
      000876 25                    2489 	.db #0x25	; 37
      000877 25                    2490 	.db #0x25	; 37
      000878 25                    2491 	.db #0x25	; 37
      000879 25                    2492 	.db #0x25	; 37
      00087A 25                    2493 	.db #0x25	; 37
      00087B 25                    2494 	.db #0x25	; 37
      00087C 32                    2495 	.db #0x32	; 50	'2'
      00087D 34                    2496 	.db #0x34	; 52	'4'
      00087E 25                    2497 	.db #0x25	; 37
      00087F 25                    2498 	.db #0x25	; 37
      000880 25                    2499 	.db #0x25	; 37
      000881 25                    2500 	.db #0x25	; 37
      000882 25                    2501 	.db #0x25	; 37
      000883 25                    2502 	.db #0x25	; 37
      000884 25                    2503 	.db #0x25	; 37
      000885 25                    2504 	.db #0x25	; 37
      000886 25                    2505 	.db #0x25	; 37
      000887 25                    2506 	.db #0x25	; 37
      000888 25                    2507 	.db #0x25	; 37
      000889 25                    2508 	.db #0x25	; 37
      00088A 27                    2509 	.db #0x27	; 39
      00088B 25                    2510 	.db #0x25	; 37
      00088C 25                    2511 	.db #0x25	; 37
      00088D 25                    2512 	.db #0x25	; 37
      00088E 25                    2513 	.db #0x25	; 37
      00088F 25                    2514 	.db #0x25	; 37
      000890 25                    2515 	.db #0x25	; 37
      000891 25                    2516 	.db #0x25	; 37
      000892 25                    2517 	.db #0x25	; 37
      000893 25                    2518 	.db #0x25	; 37
      000894 25                    2519 	.db #0x25	; 37
      000895 25                    2520 	.db #0x25	; 37
      000896 25                    2521 	.db #0x25	; 37
      000897 25                    2522 	.db #0x25	; 37
      000898 25                    2523 	.db #0x25	; 37
      000899 28                    2524 	.db #0x28	; 40
      00089A 25                    2525 	.db #0x25	; 37
      00089B 25                    2526 	.db #0x25	; 37
      00089C 25                    2527 	.db #0x25	; 37
      00089D 25                    2528 	.db #0x25	; 37
      00089E 25                    2529 	.db #0x25	; 37
      00089F 25                    2530 	.db #0x25	; 37
      0008A0 25                    2531 	.db #0x25	; 37
      0008A1 25                    2532 	.db #0x25	; 37
      0008A2 25                    2533 	.db #0x25	; 37
      0008A3 25                    2534 	.db #0x25	; 37
      0008A4 25                    2535 	.db #0x25	; 37
      0008A5 25                    2536 	.db #0x25	; 37
      0008A6 25                    2537 	.db #0x25	; 37
      0008A7 25                    2538 	.db #0x25	; 37
      0008A8 25                    2539 	.db #0x25	; 37
      0008A9 25                    2540 	.db #0x25	; 37
      0008AA 27                    2541 	.db #0x27	; 39
      0008AB 25                    2542 	.db #0x25	; 37
      0008AC 25                    2543 	.db #0x25	; 37
      0008AD 25                    2544 	.db #0x25	; 37
      0008AE 25                    2545 	.db #0x25	; 37
      0008AF 25                    2546 	.db #0x25	; 37
      0008B0 25                    2547 	.db #0x25	; 37
      0008B1 25                    2548 	.db #0x25	; 37
      0008B2 25                    2549 	.db #0x25	; 37
      0008B3 25                    2550 	.db #0x25	; 37
      0008B4 25                    2551 	.db #0x25	; 37
      0008B5 29                    2552 	.db #0x29	; 41
      0008B6 25                    2553 	.db #0x25	; 37
      0008B7 25                    2554 	.db #0x25	; 37
      0008B8 25                    2555 	.db #0x25	; 37
      0008B9 25                    2556 	.db #0x25	; 37
      0008BA 25                    2557 	.db #0x25	; 37
      0008BB 25                    2558 	.db #0x25	; 37
      0008BC 25                    2559 	.db #0x25	; 37
      0008BD 25                    2560 	.db #0x25	; 37
      0008BE 25                    2561 	.db #0x25	; 37
      0008BF 25                    2562 	.db #0x25	; 37
      0008C0 25                    2563 	.db #0x25	; 37
      0008C1 25                    2564 	.db #0x25	; 37
      0008C2 25                    2565 	.db #0x25	; 37
      0008C3 25                    2566 	.db #0x25	; 37
      0008C4 25                    2567 	.db #0x25	; 37
      0008C5 25                    2568 	.db #0x25	; 37
      0008C6 25                    2569 	.db #0x25	; 37
      0008C7 25                    2570 	.db #0x25	; 37
      0008C8 25                    2571 	.db #0x25	; 37
      0008C9 25                    2572 	.db #0x25	; 37
      0008CA 27                    2573 	.db #0x27	; 39
      0008CB 25                    2574 	.db #0x25	; 37
      0008CC 25                    2575 	.db #0x25	; 37
      0008CD 25                    2576 	.db #0x25	; 37
      0008CE 25                    2577 	.db #0x25	; 37
      0008CF 25                    2578 	.db #0x25	; 37
      0008D0 25                    2579 	.db #0x25	; 37
      0008D1 25                    2580 	.db #0x25	; 37
      0008D2 25                    2581 	.db #0x25	; 37
      0008D3 25                    2582 	.db #0x25	; 37
      0008D4 25                    2583 	.db #0x25	; 37
      0008D5 25                    2584 	.db #0x25	; 37
      0008D6 25                    2585 	.db #0x25	; 37
      0008D7 25                    2586 	.db #0x25	; 37
      0008D8 25                    2587 	.db #0x25	; 37
      0008D9 25                    2588 	.db #0x25	; 37
      0008DA 25                    2589 	.db #0x25	; 37
      0008DB 25                    2590 	.db #0x25	; 37
      0008DC 25                    2591 	.db #0x25	; 37
      0008DD 25                    2592 	.db #0x25	; 37
      0008DE 25                    2593 	.db #0x25	; 37
      0008DF 25                    2594 	.db #0x25	; 37
      0008E0 25                    2595 	.db #0x25	; 37
      0008E1 25                    2596 	.db #0x25	; 37
      0008E2 25                    2597 	.db #0x25	; 37
      0008E3 25                    2598 	.db #0x25	; 37
      0008E4 25                    2599 	.db #0x25	; 37
      0008E5 29                    2600 	.db #0x29	; 41
      0008E6 25                    2601 	.db #0x25	; 37
      0008E7 25                    2602 	.db #0x25	; 37
      0008E8 25                    2603 	.db #0x25	; 37
      0008E9 25                    2604 	.db #0x25	; 37
      0008EA 27                    2605 	.db #0x27	; 39
      0008EB 25                    2606 	.db #0x25	; 37
      0008EC 25                    2607 	.db #0x25	; 37
      0008ED 25                    2608 	.db #0x25	; 37
      0008EE 25                    2609 	.db #0x25	; 37
      0008EF 25                    2610 	.db #0x25	; 37
      0008F0 25                    2611 	.db #0x25	; 37
      0008F1 25                    2612 	.db #0x25	; 37
      0008F2 25                    2613 	.db #0x25	; 37
      0008F3 25                    2614 	.db #0x25	; 37
      0008F4 25                    2615 	.db #0x25	; 37
      0008F5 25                    2616 	.db #0x25	; 37
      0008F6 25                    2617 	.db #0x25	; 37
      0008F7 25                    2618 	.db #0x25	; 37
      0008F8 25                    2619 	.db #0x25	; 37
      0008F9 25                    2620 	.db #0x25	; 37
      0008FA 25                    2621 	.db #0x25	; 37
      0008FB 25                    2622 	.db #0x25	; 37
      0008FC 25                    2623 	.db #0x25	; 37
      0008FD 25                    2624 	.db #0x25	; 37
      0008FE 25                    2625 	.db #0x25	; 37
      0008FF 25                    2626 	.db #0x25	; 37
      000900 25                    2627 	.db #0x25	; 37
      000901 25                    2628 	.db #0x25	; 37
      000902 25                    2629 	.db #0x25	; 37
      000903 25                    2630 	.db #0x25	; 37
      000904 25                    2631 	.db #0x25	; 37
      000905 25                    2632 	.db #0x25	; 37
      000906 25                    2633 	.db #0x25	; 37
      000907 25                    2634 	.db #0x25	; 37
      000908 25                    2635 	.db #0x25	; 37
      000909 25                    2636 	.db #0x25	; 37
      00090A 27                    2637 	.db #0x27	; 39
      00090B 25                    2638 	.db #0x25	; 37
      00090C 25                    2639 	.db #0x25	; 37
      00090D 25                    2640 	.db #0x25	; 37
      00090E 25                    2641 	.db #0x25	; 37
      00090F 25                    2642 	.db #0x25	; 37
      000910 25                    2643 	.db #0x25	; 37
      000911 25                    2644 	.db #0x25	; 37
      000912 25                    2645 	.db #0x25	; 37
      000913 25                    2646 	.db #0x25	; 37
      000914 25                    2647 	.db #0x25	; 37
      000915 25                    2648 	.db #0x25	; 37
      000916 25                    2649 	.db #0x25	; 37
      000917 25                    2650 	.db #0x25	; 37
      000918 25                    2651 	.db #0x25	; 37
      000919 25                    2652 	.db #0x25	; 37
      00091A 25                    2653 	.db #0x25	; 37
      00091B 25                    2654 	.db #0x25	; 37
      00091C 25                    2655 	.db #0x25	; 37
      00091D 25                    2656 	.db #0x25	; 37
      00091E 25                    2657 	.db #0x25	; 37
      00091F 25                    2658 	.db #0x25	; 37
      000920 25                    2659 	.db #0x25	; 37
      000921 25                    2660 	.db #0x25	; 37
      000922 25                    2661 	.db #0x25	; 37
      000923 25                    2662 	.db #0x25	; 37
      000924 25                    2663 	.db #0x25	; 37
      000925 25                    2664 	.db #0x25	; 37
      000926 25                    2665 	.db #0x25	; 37
      000927 25                    2666 	.db #0x25	; 37
      000928 25                    2667 	.db #0x25	; 37
      000929 25                    2668 	.db #0x25	; 37
      00092A 27                    2669 	.db #0x27	; 39
      00092B 25                    2670 	.db #0x25	; 37
      00092C 25                    2671 	.db #0x25	; 37
      00092D 25                    2672 	.db #0x25	; 37
      00092E 25                    2673 	.db #0x25	; 37
      00092F 25                    2674 	.db #0x25	; 37
      000930 25                    2675 	.db #0x25	; 37
      000931 25                    2676 	.db #0x25	; 37
      000932 25                    2677 	.db #0x25	; 37
      000933 25                    2678 	.db #0x25	; 37
      000934 25                    2679 	.db #0x25	; 37
      000935 25                    2680 	.db #0x25	; 37
      000936 25                    2681 	.db #0x25	; 37
      000937 25                    2682 	.db #0x25	; 37
      000938 25                    2683 	.db #0x25	; 37
      000939 25                    2684 	.db #0x25	; 37
      00093A 25                    2685 	.db #0x25	; 37
      00093B 25                    2686 	.db #0x25	; 37
      00093C 25                    2687 	.db #0x25	; 37
      00093D 28                    2688 	.db #0x28	; 40
      00093E 25                    2689 	.db #0x25	; 37
      00093F 25                    2690 	.db #0x25	; 37
      000940 25                    2691 	.db #0x25	; 37
      000941 25                    2692 	.db #0x25	; 37
      000942 25                    2693 	.db #0x25	; 37
      000943 25                    2694 	.db #0x25	; 37
      000944 25                    2695 	.db #0x25	; 37
      000945 25                    2696 	.db #0x25	; 37
      000946 25                    2697 	.db #0x25	; 37
      000947 25                    2698 	.db #0x25	; 37
      000948 25                    2699 	.db #0x25	; 37
      000949 25                    2700 	.db #0x25	; 37
      00094A 27                    2701 	.db #0x27	; 39
      00094B 25                    2702 	.db #0x25	; 37
      00094C 25                    2703 	.db #0x25	; 37
      00094D 25                    2704 	.db #0x25	; 37
      00094E 25                    2705 	.db #0x25	; 37
      00094F 25                    2706 	.db #0x25	; 37
      000950 25                    2707 	.db #0x25	; 37
      000951 25                    2708 	.db #0x25	; 37
      000952 25                    2709 	.db #0x25	; 37
      000953 25                    2710 	.db #0x25	; 37
      000954 25                    2711 	.db #0x25	; 37
      000955 25                    2712 	.db #0x25	; 37
      000956 25                    2713 	.db #0x25	; 37
      000957 25                    2714 	.db #0x25	; 37
      000958 25                    2715 	.db #0x25	; 37
      000959 25                    2716 	.db #0x25	; 37
      00095A 25                    2717 	.db #0x25	; 37
      00095B 25                    2718 	.db #0x25	; 37
      00095C 25                    2719 	.db #0x25	; 37
      00095D 25                    2720 	.db #0x25	; 37
      00095E 25                    2721 	.db #0x25	; 37
      00095F 25                    2722 	.db #0x25	; 37
      000960 25                    2723 	.db #0x25	; 37
      000961 25                    2724 	.db #0x25	; 37
      000962 25                    2725 	.db #0x25	; 37
      000963 25                    2726 	.db #0x25	; 37
      000964 25                    2727 	.db #0x25	; 37
      000965 25                    2728 	.db #0x25	; 37
      000966 25                    2729 	.db #0x25	; 37
      000967 25                    2730 	.db #0x25	; 37
      000968 25                    2731 	.db #0x25	; 37
      000969 25                    2732 	.db #0x25	; 37
      00096A 27                    2733 	.db #0x27	; 39
      00096B 25                    2734 	.db #0x25	; 37
      00096C 25                    2735 	.db #0x25	; 37
      00096D 25                    2736 	.db #0x25	; 37
      00096E 25                    2737 	.db #0x25	; 37
      00096F 25                    2738 	.db #0x25	; 37
      000970 25                    2739 	.db #0x25	; 37
      000971 25                    2740 	.db #0x25	; 37
      000972 25                    2741 	.db #0x25	; 37
      000973 25                    2742 	.db #0x25	; 37
      000974 25                    2743 	.db #0x25	; 37
      000975 25                    2744 	.db #0x25	; 37
      000976 25                    2745 	.db #0x25	; 37
      000977 25                    2746 	.db #0x25	; 37
      000978 25                    2747 	.db #0x25	; 37
      000979 25                    2748 	.db #0x25	; 37
      00097A 25                    2749 	.db #0x25	; 37
      00097B 25                    2750 	.db #0x25	; 37
      00097C 25                    2751 	.db #0x25	; 37
      00097D 25                    2752 	.db #0x25	; 37
      00097E 25                    2753 	.db #0x25	; 37
      00097F 25                    2754 	.db #0x25	; 37
      000980 25                    2755 	.db #0x25	; 37
      000981 25                    2756 	.db #0x25	; 37
      000982 25                    2757 	.db #0x25	; 37
      000983 25                    2758 	.db #0x25	; 37
      000984 25                    2759 	.db #0x25	; 37
      000985 25                    2760 	.db #0x25	; 37
      000986 25                    2761 	.db #0x25	; 37
      000987 26                    2762 	.db #0x26	; 38
      000988 26                    2763 	.db #0x26	; 38
      000989 26                    2764 	.db #0x26	; 38
      00098A 26                    2765 	.db #0x26	; 38
      00098B 28                    2766 	.db #0x28	; 40
      00098C 25                    2767 	.db #0x25	; 37
      00098D 25                    2768 	.db #0x25	; 37
      00098E 25                    2769 	.db #0x25	; 37
      00098F 25                    2770 	.db #0x25	; 37
      000990 25                    2771 	.db #0x25	; 37
      000991 25                    2772 	.db #0x25	; 37
      000992 25                    2773 	.db #0x25	; 37
      000993 25                    2774 	.db #0x25	; 37
      000994 25                    2775 	.db #0x25	; 37
      000995 25                    2776 	.db #0x25	; 37
      000996 25                    2777 	.db #0x25	; 37
      000997 25                    2778 	.db #0x25	; 37
      000998 25                    2779 	.db #0x25	; 37
      000999 25                    2780 	.db #0x25	; 37
      00099A 25                    2781 	.db #0x25	; 37
      00099B 25                    2782 	.db #0x25	; 37
      00099C 25                    2783 	.db #0x25	; 37
      00099D 26                    2784 	.db #0x26	; 38
      00099E 26                    2785 	.db #0x26	; 38
      00099F 26                    2786 	.db #0x26	; 38
      0009A0 26                    2787 	.db #0x26	; 38
      0009A1 26                    2788 	.db #0x26	; 38
      0009A2 26                    2789 	.db #0x26	; 38
      0009A3 26                    2790 	.db #0x26	; 38
      0009A4 26                    2791 	.db #0x26	; 38
      0009A5 26                    2792 	.db #0x26	; 38
      0009A6 26                    2793 	.db #0x26	; 38
      0009A7 25                    2794 	.db #0x25	; 37
      0009A8 25                    2795 	.db #0x25	; 37
      0009A9 25                    2796 	.db #0x25	; 37
      0009AA 25                    2797 	.db #0x25	; 37
      0009AB 25                    2798 	.db #0x25	; 37
      0009AC 25                    2799 	.db #0x25	; 37
      0009AD 25                    2800 	.db #0x25	; 37
      0009AE 25                    2801 	.db #0x25	; 37
      0009AF 25                    2802 	.db #0x25	; 37
      0009B0 25                    2803 	.db #0x25	; 37
      0009B1 25                    2804 	.db #0x25	; 37
      0009B2 25                    2805 	.db #0x25	; 37
      0009B3 25                    2806 	.db #0x25	; 37
      0009B4 25                    2807 	.db #0x25	; 37
      0009B5 25                    2808 	.db #0x25	; 37
      0009B6 25                    2809 	.db #0x25	; 37
      0009B7 25                    2810 	.db #0x25	; 37
      0009B8 25                    2811 	.db #0x25	; 37
      0009B9 25                    2812 	.db #0x25	; 37
      0009BA 25                    2813 	.db #0x25	; 37
      0009BB 25                    2814 	.db #0x25	; 37
      0009BC 25                    2815 	.db #0x25	; 37
      0009BD 27                    2816 	.db #0x27	; 39
      0009BE 25                    2817 	.db #0x25	; 37
      0009BF 25                    2818 	.db #0x25	; 37
      0009C0 25                    2819 	.db #0x25	; 37
      0009C1 25                    2820 	.db #0x25	; 37
      0009C2 25                    2821 	.db #0x25	; 37
      0009C3 25                    2822 	.db #0x25	; 37
      0009C4 25                    2823 	.db #0x25	; 37
      0009C5 25                    2824 	.db #0x25	; 37
      0009C6 25                    2825 	.db #0x25	; 37
      0009C7 25                    2826 	.db #0x25	; 37
      0009C8 25                    2827 	.db #0x25	; 37
      0009C9 25                    2828 	.db #0x25	; 37
      0009CA 25                    2829 	.db #0x25	; 37
      0009CB 25                    2830 	.db #0x25	; 37
      0009CC 25                    2831 	.db #0x25	; 37
      0009CD 25                    2832 	.db #0x25	; 37
      0009CE 25                    2833 	.db #0x25	; 37
      0009CF 25                    2834 	.db #0x25	; 37
      0009D0 25                    2835 	.db #0x25	; 37
      0009D1 25                    2836 	.db #0x25	; 37
      0009D2 25                    2837 	.db #0x25	; 37
      0009D3 25                    2838 	.db #0x25	; 37
      0009D4 25                    2839 	.db #0x25	; 37
      0009D5 2A                    2840 	.db #0x2a	; 42
      0009D6 25                    2841 	.db #0x25	; 37
      0009D7 25                    2842 	.db #0x25	; 37
      0009D8 25                    2843 	.db #0x25	; 37
      0009D9 25                    2844 	.db #0x25	; 37
      0009DA 25                    2845 	.db #0x25	; 37
      0009DB 25                    2846 	.db #0x25	; 37
      0009DC 25                    2847 	.db #0x25	; 37
      0009DD 27                    2848 	.db #0x27	; 39
      0009DE 25                    2849 	.db #0x25	; 37
      0009DF 25                    2850 	.db #0x25	; 37
      0009E0 25                    2851 	.db #0x25	; 37
      0009E1 25                    2852 	.db #0x25	; 37
      0009E2 25                    2853 	.db #0x25	; 37
      0009E3 25                    2854 	.db #0x25	; 37
      0009E4 25                    2855 	.db #0x25	; 37
      0009E5 25                    2856 	.db #0x25	; 37
      0009E6 25                    2857 	.db #0x25	; 37
      0009E7 25                    2858 	.db #0x25	; 37
      0009E8 25                    2859 	.db #0x25	; 37
      0009E9 25                    2860 	.db #0x25	; 37
      0009EA 25                    2861 	.db #0x25	; 37
      0009EB 25                    2862 	.db #0x25	; 37
      0009EC 25                    2863 	.db #0x25	; 37
      0009ED 25                    2864 	.db #0x25	; 37
      0009EE 25                    2865 	.db #0x25	; 37
      0009EF 25                    2866 	.db #0x25	; 37
      0009F0 25                    2867 	.db #0x25	; 37
      0009F1 25                    2868 	.db #0x25	; 37
      0009F2 25                    2869 	.db #0x25	; 37
      0009F3 25                    2870 	.db #0x25	; 37
      0009F4 25                    2871 	.db #0x25	; 37
      0009F5 25                    2872 	.db #0x25	; 37
      0009F6 25                    2873 	.db #0x25	; 37
      0009F7 25                    2874 	.db #0x25	; 37
      0009F8 25                    2875 	.db #0x25	; 37
      0009F9 25                    2876 	.db #0x25	; 37
      0009FA 25                    2877 	.db #0x25	; 37
      0009FB 25                    2878 	.db #0x25	; 37
      0009FC 25                    2879 	.db #0x25	; 37
      0009FD 27                    2880 	.db #0x27	; 39
      0009FE 25                    2881 	.db #0x25	; 37
      0009FF 25                    2882 	.db #0x25	; 37
      000A00 25                    2883 	.db #0x25	; 37
      000A01 25                    2884 	.db #0x25	; 37
      000A02 25                    2885 	.db #0x25	; 37
      000A03 25                    2886 	.db #0x25	; 37
      000A04 25                    2887 	.db #0x25	; 37
      000A05 25                    2888 	.db #0x25	; 37
      000A06 25                    2889 	.db #0x25	; 37
      000A07                       2890 _healthblock:
      000A07 FE                    2891 	.db #0xfe	; 254
      000A08 FE                    2892 	.db #0xfe	; 254
      000A09 FE                    2893 	.db #0xfe	; 254
      000A0A FE                    2894 	.db #0xfe	; 254
      000A0B FE                    2895 	.db #0xfe	; 254
      000A0C FE                    2896 	.db #0xfe	; 254
      000A0D FE                    2897 	.db #0xfe	; 254
      000A0E FE                    2898 	.db #0xfe	; 254
      000A0F FE                    2899 	.db #0xfe	; 254
      000A10 FE                    2900 	.db #0xfe	; 254
      000A11 FE                    2901 	.db #0xfe	; 254
      000A12 FE                    2902 	.db #0xfe	; 254
      000A13 FE                    2903 	.db #0xfe	; 254
      000A14 FE                    2904 	.db #0xfe	; 254
      000A15 00                    2905 	.db #0x00	; 0
      000A16 00                    2906 	.db #0x00	; 0
      000A17                       2907 _enemyOptionCount:
      000A17 05                    2908 	.db #0x05	; 5
      000A18                       2909 _enemy1:
      000A18 66                    2910 	.db #0x66	; 102	'f'
      000A19 24                    2911 	.db #0x24	; 36
      000A1A E7                    2912 	.db #0xe7	; 231
      000A1B 66                    2913 	.db #0x66	; 102	'f'
      000A1C F7                    2914 	.db #0xf7	; 247
      000A1D E7                    2915 	.db #0xe7	; 231
      000A1E 1C                    2916 	.db #0x1c	; 28
      000A1F 18                    2917 	.db #0x18	; 24
      000A20 38                    2918 	.db #0x38	; 56	'8'
      000A21 18                    2919 	.db #0x18	; 24
      000A22 EF                    2920 	.db #0xef	; 239
      000A23 E7                    2921 	.db #0xe7	; 231
      000A24 E7                    2922 	.db #0xe7	; 231
      000A25 66                    2923 	.db #0x66	; 102	'f'
      000A26 66                    2924 	.db #0x66	; 102	'f'
      000A27 24                    2925 	.db #0x24	; 36
      000A28 00                    2926 	.db #0x00	; 0
      000A29 00                    2927 	.db #0x00	; 0
      000A2A 00                    2928 	.db #0x00	; 0
      000A2B 00                    2929 	.db #0x00	; 0
      000A2C 00                    2930 	.db #0x00	; 0
      000A2D 00                    2931 	.db #0x00	; 0
      000A2E 00                    2932 	.db #0x00	; 0
      000A2F 00                    2933 	.db #0x00	; 0
      000A30 00                    2934 	.db #0x00	; 0
      000A31 00                    2935 	.db #0x00	; 0
      000A32 00                    2936 	.db #0x00	; 0
      000A33 00                    2937 	.db #0x00	; 0
      000A34 00                    2938 	.db #0x00	; 0
      000A35 00                    2939 	.db #0x00	; 0
      000A36 00                    2940 	.db #0x00	; 0
      000A37 00                    2941 	.db #0x00	; 0
      000A38 3C                    2942 	.db #0x3c	; 60
      000A39 3C                    2943 	.db #0x3c	; 60
      000A3A 5E                    2944 	.db #0x5e	; 94
      000A3B 62                    2945 	.db #0x62	; 98	'b'
      000A3C 8F                    2946 	.db #0x8f	; 143
      000A3D F1                    2947 	.db #0xf1	; 241
      000A3E C7                    2948 	.db #0xc7	; 199
      000A3F F9                    2949 	.db #0xf9	; 249
      000A40 C3                    2950 	.db #0xc3	; 195
      000A41 FD                    2951 	.db #0xfd	; 253
      000A42 E1                    2952 	.db #0xe1	; 225
      000A43 FF                    2953 	.db #0xff	; 255
      000A44 7A                    2954 	.db #0x7a	; 122	'z'
      000A45 7E                    2955 	.db #0x7e	; 126
      000A46 3C                    2956 	.db #0x3c	; 60
      000A47 3C                    2957 	.db #0x3c	; 60
      000A48 00                    2958 	.db #0x00	; 0
      000A49 00                    2959 	.db #0x00	; 0
      000A4A 00                    2960 	.db #0x00	; 0
      000A4B 00                    2961 	.db #0x00	; 0
      000A4C 00                    2962 	.db #0x00	; 0
      000A4D 00                    2963 	.db #0x00	; 0
      000A4E 00                    2964 	.db #0x00	; 0
      000A4F 00                    2965 	.db #0x00	; 0
      000A50 00                    2966 	.db #0x00	; 0
      000A51 00                    2967 	.db #0x00	; 0
      000A52 00                    2968 	.db #0x00	; 0
      000A53 00                    2969 	.db #0x00	; 0
      000A54 00                    2970 	.db #0x00	; 0
      000A55 00                    2971 	.db #0x00	; 0
      000A56 00                    2972 	.db #0x00	; 0
      000A57 00                    2973 	.db #0x00	; 0
      000A58 3C                    2974 	.db #0x3c	; 60
      000A59 3E                    2975 	.db #0x3e	; 62
      000A5A 20                    2976 	.db #0x20	; 32
      000A5B 38                    2977 	.db #0x38	; 56	'8'
      000A5C 44                    2978 	.db #0x44	; 68	'D'
      000A5D 78                    2979 	.db #0x78	; 120	'x'
      000A5E BA                    2980 	.db #0xba	; 186
      000A5F C4                    2981 	.db #0xc4	; 196
      000A60 BA                    2982 	.db #0xba	; 186
      000A61 C4                    2983 	.db #0xc4	; 196
      000A62 44                    2984 	.db #0x44	; 68	'D'
      000A63 78                    2985 	.db #0x78	; 120	'x'
      000A64 20                    2986 	.db #0x20	; 32
      000A65 38                    2987 	.db #0x38	; 56	'8'
      000A66 3C                    2988 	.db #0x3c	; 60
      000A67 3E                    2989 	.db #0x3e	; 62
      000A68                       2990 _largeenemies:
      000A68 00                    2991 	.db #0x00	; 0
      000A69 00                    2992 	.db #0x00	; 0
      000A6A 00                    2993 	.db #0x00	; 0
      000A6B 00                    2994 	.db #0x00	; 0
      000A6C 00                    2995 	.db #0x00	; 0
      000A6D 00                    2996 	.db #0x00	; 0
      000A6E 00                    2997 	.db #0x00	; 0
      000A6F 00                    2998 	.db #0x00	; 0
      000A70 00                    2999 	.db #0x00	; 0
      000A71 00                    3000 	.db #0x00	; 0
      000A72 00                    3001 	.db #0x00	; 0
      000A73 00                    3002 	.db #0x00	; 0
      000A74 00                    3003 	.db #0x00	; 0
      000A75 00                    3004 	.db #0x00	; 0
      000A76 7F                    3005 	.db #0x7f	; 127
      000A77 7F                    3006 	.db #0x7f	; 127
      000A78 7F                    3007 	.db #0x7f	; 127
      000A79 7F                    3008 	.db #0x7f	; 127
      000A7A 00                    3009 	.db #0x00	; 0
      000A7B 00                    3010 	.db #0x00	; 0
      000A7C 00                    3011 	.db #0x00	; 0
      000A7D 00                    3012 	.db #0x00	; 0
      000A7E 00                    3013 	.db #0x00	; 0
      000A7F 00                    3014 	.db #0x00	; 0
      000A80 00                    3015 	.db #0x00	; 0
      000A81 00                    3016 	.db #0x00	; 0
      000A82 00                    3017 	.db #0x00	; 0
      000A83 00                    3018 	.db #0x00	; 0
      000A84 00                    3019 	.db #0x00	; 0
      000A85 00                    3020 	.db #0x00	; 0
      000A86 00                    3021 	.db #0x00	; 0
      000A87 00                    3022 	.db #0x00	; 0
      000A88 00                    3023 	.db #0x00	; 0
      000A89 00                    3024 	.db #0x00	; 0
      000A8A 40                    3025 	.db #0x40	; 64
      000A8B 40                    3026 	.db #0x40	; 64
      000A8C 60                    3027 	.db #0x60	; 96
      000A8D 60                    3028 	.db #0x60	; 96
      000A8E 70                    3029 	.db #0x70	; 112	'p'
      000A8F 70                    3030 	.db #0x70	; 112	'p'
      000A90 78                    3031 	.db #0x78	; 120	'x'
      000A91 78                    3032 	.db #0x78	; 120	'x'
      000A92 7C                    3033 	.db #0x7c	; 124
      000A93 7C                    3034 	.db #0x7c	; 124
      000A94 7E                    3035 	.db #0x7e	; 126
      000A95 7E                    3036 	.db #0x7e	; 126
      000A96 FF                    3037 	.db #0xff	; 255
      000A97 FF                    3038 	.db #0xff	; 255
      000A98 FF                    3039 	.db #0xff	; 255
      000A99 FF                    3040 	.db #0xff	; 255
      000A9A 7E                    3041 	.db #0x7e	; 126
      000A9B 7E                    3042 	.db #0x7e	; 126
      000A9C 7C                    3043 	.db #0x7c	; 124
      000A9D 7C                    3044 	.db #0x7c	; 124
      000A9E 78                    3045 	.db #0x78	; 120	'x'
      000A9F 78                    3046 	.db #0x78	; 120	'x'
      000AA0 70                    3047 	.db #0x70	; 112	'p'
      000AA1 70                    3048 	.db #0x70	; 112	'p'
      000AA2 60                    3049 	.db #0x60	; 96
      000AA3 60                    3050 	.db #0x60	; 96
      000AA4 40                    3051 	.db #0x40	; 64
      000AA5 40                    3052 	.db #0x40	; 64
      000AA6 00                    3053 	.db #0x00	; 0
      000AA7 00                    3054 	.db #0x00	; 0
      000AA8 07                    3055 	.db #0x07	; 7
      000AA9 00                    3056 	.db #0x00	; 0
      000AAA 18                    3057 	.db #0x18	; 24
      000AAB 00                    3058 	.db #0x00	; 0
      000AAC 20                    3059 	.db #0x20	; 32
      000AAD 00                    3060 	.db #0x00	; 0
      000AAE 4C                    3061 	.db #0x4c	; 76	'L'
      000AAF 0C                    3062 	.db #0x0c	; 12
      000AB0 43                    3063 	.db #0x43	; 67	'C'
      000AB1 0F                    3064 	.db #0x0f	; 15
      000AB2 84                    3065 	.db #0x84	; 132
      000AB3 27                    3066 	.db #0x27	; 39
      000AB4 80                    3067 	.db #0x80	; 128
      000AB5 13                    3068 	.db #0x13	; 19
      000AB6 83                    3069 	.db #0x83	; 131
      000AB7 2A                    3070 	.db #0x2a	; 42
      000AB8 83                    3071 	.db #0x83	; 131
      000AB9 16                    3072 	.db #0x16	; 22
      000ABA 80                    3073 	.db #0x80	; 128
      000ABB 23                    3074 	.db #0x23	; 35
      000ABC 84                    3075 	.db #0x84	; 132
      000ABD 07                    3076 	.db #0x07	; 7
      000ABE 43                    3077 	.db #0x43	; 67	'C'
      000ABF 0F                    3078 	.db #0x0f	; 15
      000AC0 4C                    3079 	.db #0x4c	; 76	'L'
      000AC1 0C                    3080 	.db #0x0c	; 12
      000AC2 20                    3081 	.db #0x20	; 32
      000AC3 00                    3082 	.db #0x00	; 0
      000AC4 18                    3083 	.db #0x18	; 24
      000AC5 00                    3084 	.db #0x00	; 0
      000AC6 07                    3085 	.db #0x07	; 7
      000AC7 00                    3086 	.db #0x00	; 0
      000AC8 E0                    3087 	.db #0xe0	; 224
      000AC9 00                    3088 	.db #0x00	; 0
      000ACA 18                    3089 	.db #0x18	; 24
      000ACB 00                    3090 	.db #0x00	; 0
      000ACC 04                    3091 	.db #0x04	; 4
      000ACD 00                    3092 	.db #0x00	; 0
      000ACE 02                    3093 	.db #0x02	; 2
      000ACF 00                    3094 	.db #0x00	; 0
      000AD0 02                    3095 	.db #0x02	; 2
      000AD1 00                    3096 	.db #0x00	; 0
      000AD2 C1                    3097 	.db #0xc1	; 193
      000AD3 C0                    3098 	.db #0xc0	; 192
      000AD4 11                    3099 	.db #0x11	; 17
      000AD5 F0                    3100 	.db #0xf0	; 240
      000AD6 E5                    3101 	.db #0xe5	; 229
      000AD7 1C                    3102 	.db #0x1c	; 28
      000AD8 E5                    3103 	.db #0xe5	; 229
      000AD9 1C                    3104 	.db #0x1c	; 28
      000ADA 11                    3105 	.db #0x11	; 17
      000ADB F0                    3106 	.db #0xf0	; 240
      000ADC C1                    3107 	.db #0xc1	; 193
      000ADD C0                    3108 	.db #0xc0	; 192
      000ADE 02                    3109 	.db #0x02	; 2
      000ADF 00                    3110 	.db #0x00	; 0
      000AE0 02                    3111 	.db #0x02	; 2
      000AE1 00                    3112 	.db #0x00	; 0
      000AE2 04                    3113 	.db #0x04	; 4
      000AE3 00                    3114 	.db #0x00	; 0
      000AE4 18                    3115 	.db #0x18	; 24
      000AE5 00                    3116 	.db #0x00	; 0
      000AE6 E0                    3117 	.db #0xe0	; 224
      000AE7 00                    3118 	.db #0x00	; 0
      000AE8                       3119 _ProjectileTiles:
      000AE8 24                    3120 	.db #0x24	; 36
      000AE9 18                    3121 	.db #0x18	; 24
      000AEA 18                    3122 	.db #0x18	; 24
      000AEB 3C                    3123 	.db #0x3c	; 60
      000AEC 18                    3124 	.db #0x18	; 24
      000AED 3C                    3125 	.db #0x3c	; 60
      000AEE 24                    3126 	.db #0x24	; 36
      000AEF 18                    3127 	.db #0x18	; 24
      000AF0 00                    3128 	.db #0x00	; 0
      000AF1 00                    3129 	.db #0x00	; 0
      000AF2 00                    3130 	.db #0x00	; 0
      000AF3 00                    3131 	.db #0x00	; 0
      000AF4 00                    3132 	.db #0x00	; 0
      000AF5 00                    3133 	.db #0x00	; 0
      000AF6 00                    3134 	.db #0x00	; 0
      000AF7 00                    3135 	.db #0x00	; 0
      000AF8 00                    3136 	.db #0x00	; 0
      000AF9 00                    3137 	.db #0x00	; 0
      000AFA 00                    3138 	.db #0x00	; 0
      000AFB 00                    3139 	.db #0x00	; 0
      000AFC 00                    3140 	.db #0x00	; 0
      000AFD 00                    3141 	.db #0x00	; 0
      000AFE 00                    3142 	.db #0x00	; 0
      000AFF 00                    3143 	.db #0x00	; 0
      000B00 00                    3144 	.db #0x00	; 0
      000B01 00                    3145 	.db #0x00	; 0
      000B02 00                    3146 	.db #0x00	; 0
      000B03 00                    3147 	.db #0x00	; 0
      000B04 00                    3148 	.db #0x00	; 0
      000B05 00                    3149 	.db #0x00	; 0
      000B06 00                    3150 	.db #0x00	; 0
      000B07 00                    3151 	.db #0x00	; 0
      000B08 00                    3152 	.db #0x00	; 0
      000B09 00                    3153 	.db #0x00	; 0
      000B0A 00                    3154 	.db #0x00	; 0
      000B0B 00                    3155 	.db #0x00	; 0
      000B0C 09                    3156 	.db #0x09	; 9
      000B0D 06                    3157 	.db #0x06	; 6
      000B0E 06                    3158 	.db #0x06	; 6
      000B0F 0F                    3159 	.db #0x0f	; 15
      000B10 06                    3160 	.db #0x06	; 6
      000B11 0F                    3161 	.db #0x0f	; 15
      000B12 09                    3162 	.db #0x09	; 9
      000B13 06                    3163 	.db #0x06	; 6
      000B14 00                    3164 	.db #0x00	; 0
      000B15 00                    3165 	.db #0x00	; 0
      000B16 00                    3166 	.db #0x00	; 0
      000B17 00                    3167 	.db #0x00	; 0
      000B18 00                    3168 	.db #0x00	; 0
      000B19 00                    3169 	.db #0x00	; 0
      000B1A 00                    3170 	.db #0x00	; 0
      000B1B 00                    3171 	.db #0x00	; 0
      000B1C 00                    3172 	.db #0x00	; 0
      000B1D 00                    3173 	.db #0x00	; 0
      000B1E 00                    3174 	.db #0x00	; 0
      000B1F 00                    3175 	.db #0x00	; 0
      000B20 00                    3176 	.db #0x00	; 0
      000B21 00                    3177 	.db #0x00	; 0
      000B22 00                    3178 	.db #0x00	; 0
      000B23 00                    3179 	.db #0x00	; 0
      000B24 00                    3180 	.db #0x00	; 0
      000B25 00                    3181 	.db #0x00	; 0
      000B26 00                    3182 	.db #0x00	; 0
      000B27 00                    3183 	.db #0x00	; 0
      000B28 09                    3184 	.db #0x09	; 9
      000B29 06                    3185 	.db #0x06	; 6
      000B2A 06                    3186 	.db #0x06	; 6
      000B2B 0F                    3187 	.db #0x0f	; 15
      000B2C 06                    3188 	.db #0x06	; 6
      000B2D 0F                    3189 	.db #0x0f	; 15
      000B2E 09                    3190 	.db #0x09	; 9
      000B2F 06                    3191 	.db #0x06	; 6
      000B30 00                    3192 	.db #0x00	; 0
      000B31 00                    3193 	.db #0x00	; 0
      000B32 00                    3194 	.db #0x00	; 0
      000B33 00                    3195 	.db #0x00	; 0
      000B34 00                    3196 	.db #0x00	; 0
      000B35 00                    3197 	.db #0x00	; 0
      000B36 00                    3198 	.db #0x00	; 0
      000B37 00                    3199 	.db #0x00	; 0
      000B38 00                    3200 	.db #0x00	; 0
      000B39 00                    3201 	.db #0x00	; 0
      000B3A 00                    3202 	.db #0x00	; 0
      000B3B 00                    3203 	.db #0x00	; 0
      000B3C 00                    3204 	.db #0x00	; 0
      000B3D 00                    3205 	.db #0x00	; 0
      000B3E 00                    3206 	.db #0x00	; 0
      000B3F 00                    3207 	.db #0x00	; 0
      000B40 00                    3208 	.db #0x00	; 0
      000B41 00                    3209 	.db #0x00	; 0
      000B42 00                    3210 	.db #0x00	; 0
      000B43 00                    3211 	.db #0x00	; 0
      000B44 00                    3212 	.db #0x00	; 0
      000B45 00                    3213 	.db #0x00	; 0
      000B46 00                    3214 	.db #0x00	; 0
      000B47 00                    3215 	.db #0x00	; 0
      000B48 99                    3216 	.db #0x99	; 153
      000B49 66                    3217 	.db #0x66	; 102	'f'
      000B4A 66                    3218 	.db #0x66	; 102	'f'
      000B4B FF                    3219 	.db #0xff	; 255
      000B4C 66                    3220 	.db #0x66	; 102	'f'
      000B4D FF                    3221 	.db #0xff	; 255
      000B4E 99                    3222 	.db #0x99	; 153
      000B4F 66                    3223 	.db #0x66	; 102	'f'
      000B50 00                    3224 	.db #0x00	; 0
      000B51 00                    3225 	.db #0x00	; 0
      000B52 00                    3226 	.db #0x00	; 0
      000B53 00                    3227 	.db #0x00	; 0
      000B54 00                    3228 	.db #0x00	; 0
      000B55 00                    3229 	.db #0x00	; 0
      000B56 00                    3230 	.db #0x00	; 0
      000B57 00                    3231 	.db #0x00	; 0
      000B58 00                    3232 	.db #0x00	; 0
      000B59 00                    3233 	.db #0x00	; 0
      000B5A 00                    3234 	.db #0x00	; 0
      000B5B 00                    3235 	.db #0x00	; 0
      000B5C 00                    3236 	.db #0x00	; 0
      000B5D 00                    3237 	.db #0x00	; 0
      000B5E 00                    3238 	.db #0x00	; 0
      000B5F 00                    3239 	.db #0x00	; 0
      000B60 00                    3240 	.db #0x00	; 0
      000B61 00                    3241 	.db #0x00	; 0
      000B62 00                    3242 	.db #0x00	; 0
      000B63 00                    3243 	.db #0x00	; 0
      000B64 00                    3244 	.db #0x00	; 0
      000B65 00                    3245 	.db #0x00	; 0
      000B66 00                    3246 	.db #0x00	; 0
      000B67 00                    3247 	.db #0x00	; 0
      000B68 09                    3248 	.db #0x09	; 9
      000B69 06                    3249 	.db #0x06	; 6
      000B6A 06                    3250 	.db #0x06	; 6
      000B6B 0F                    3251 	.db #0x0f	; 15
      000B6C 06                    3252 	.db #0x06	; 6
      000B6D 0F                    3253 	.db #0x0f	; 15
      000B6E 09                    3254 	.db #0x09	; 9
      000B6F 06                    3255 	.db #0x06	; 6
      000B70 09                    3256 	.db #0x09	; 9
      000B71 06                    3257 	.db #0x06	; 6
      000B72 06                    3258 	.db #0x06	; 6
      000B73 0F                    3259 	.db #0x0f	; 15
      000B74 06                    3260 	.db #0x06	; 6
      000B75 0F                    3261 	.db #0x0f	; 15
      000B76 09                    3262 	.db #0x09	; 9
      000B77 06                    3263 	.db #0x06	; 6
      000B78 00                    3264 	.db #0x00	; 0
      000B79 00                    3265 	.db #0x00	; 0
      000B7A 00                    3266 	.db #0x00	; 0
      000B7B 00                    3267 	.db #0x00	; 0
      000B7C 00                    3268 	.db #0x00	; 0
      000B7D 00                    3269 	.db #0x00	; 0
      000B7E 00                    3270 	.db #0x00	; 0
      000B7F 00                    3271 	.db #0x00	; 0
      000B80 00                    3272 	.db #0x00	; 0
      000B81 00                    3273 	.db #0x00	; 0
      000B82 00                    3274 	.db #0x00	; 0
      000B83 00                    3275 	.db #0x00	; 0
      000B84 00                    3276 	.db #0x00	; 0
      000B85 00                    3277 	.db #0x00	; 0
      000B86 00                    3278 	.db #0x00	; 0
      000B87 00                    3279 	.db #0x00	; 0
      000B88 90                    3280 	.db #0x90	; 144
      000B89 60                    3281 	.db #0x60	; 96
      000B8A 60                    3282 	.db #0x60	; 96
      000B8B F0                    3283 	.db #0xf0	; 240
      000B8C 60                    3284 	.db #0x60	; 96
      000B8D F0                    3285 	.db #0xf0	; 240
      000B8E 90                    3286 	.db #0x90	; 144
      000B8F 60                    3287 	.db #0x60	; 96
      000B90 09                    3288 	.db #0x09	; 9
      000B91 06                    3289 	.db #0x06	; 6
      000B92 06                    3290 	.db #0x06	; 6
      000B93 0F                    3291 	.db #0x0f	; 15
      000B94 06                    3292 	.db #0x06	; 6
      000B95 0F                    3293 	.db #0x0f	; 15
      000B96 09                    3294 	.db #0x09	; 9
      000B97 06                    3295 	.db #0x06	; 6
      000B98 00                    3296 	.db #0x00	; 0
      000B99 00                    3297 	.db #0x00	; 0
      000B9A 00                    3298 	.db #0x00	; 0
      000B9B 00                    3299 	.db #0x00	; 0
      000B9C 00                    3300 	.db #0x00	; 0
      000B9D 00                    3301 	.db #0x00	; 0
      000B9E 00                    3302 	.db #0x00	; 0
      000B9F 00                    3303 	.db #0x00	; 0
      000BA0 00                    3304 	.db #0x00	; 0
      000BA1 00                    3305 	.db #0x00	; 0
      000BA2 00                    3306 	.db #0x00	; 0
      000BA3 00                    3307 	.db #0x00	; 0
      000BA4 00                    3308 	.db #0x00	; 0
      000BA5 00                    3309 	.db #0x00	; 0
      000BA6 00                    3310 	.db #0x00	; 0
      000BA7 00                    3311 	.db #0x00	; 0
      000BA8 18                    3312 	.db #0x18	; 24
      000BA9 00                    3313 	.db #0x00	; 0
      000BAA 18                    3314 	.db #0x18	; 24
      000BAB 18                    3315 	.db #0x18	; 24
      000BAC 18                    3316 	.db #0x18	; 24
      000BAD 18                    3317 	.db #0x18	; 24
      000BAE 3C                    3318 	.db #0x3c	; 60
      000BAF 18                    3319 	.db #0x18	; 24
      000BB0 3C                    3320 	.db #0x3c	; 60
      000BB1 18                    3321 	.db #0x18	; 24
      000BB2 3C                    3322 	.db #0x3c	; 60
      000BB3 3C                    3323 	.db #0x3c	; 60
      000BB4 7E                    3324 	.db #0x7e	; 126
      000BB5 3C                    3325 	.db #0x3c	; 60
      000BB6 7E                    3326 	.db #0x7e	; 126
      000BB7 24                    3327 	.db #0x24	; 36
      000BB8 00                    3328 	.db #0x00	; 0
      000BB9 00                    3329 	.db #0x00	; 0
      000BBA 00                    3330 	.db #0x00	; 0
      000BBB 00                    3331 	.db #0x00	; 0
      000BBC 00                    3332 	.db #0x00	; 0
      000BBD 00                    3333 	.db #0x00	; 0
      000BBE 00                    3334 	.db #0x00	; 0
      000BBF 00                    3335 	.db #0x00	; 0
      000BC0 00                    3336 	.db #0x00	; 0
      000BC1 00                    3337 	.db #0x00	; 0
      000BC2 00                    3338 	.db #0x00	; 0
      000BC3 00                    3339 	.db #0x00	; 0
      000BC4 00                    3340 	.db #0x00	; 0
      000BC5 00                    3341 	.db #0x00	; 0
      000BC6 00                    3342 	.db #0x00	; 0
      000BC7 00                    3343 	.db #0x00	; 0
      000BC8 C0                    3344 	.db #0xc0	; 192
      000BC9 00                    3345 	.db #0x00	; 0
      000BCA F8                    3346 	.db #0xf8	; 248
      000BCB E0                    3347 	.db #0xe0	; 224
      000BCC FF                    3348 	.db #0xff	; 255
      000BCD 7E                    3349 	.db #0x7e	; 126
      000BCE FF                    3350 	.db #0xff	; 255
      000BCF 7E                    3351 	.db #0x7e	; 126
      000BD0 F8                    3352 	.db #0xf8	; 248
      000BD1 E0                    3353 	.db #0xe0	; 224
      000BD2 C0                    3354 	.db #0xc0	; 192
      000BD3 00                    3355 	.db #0x00	; 0
      000BD4 00                    3356 	.db #0x00	; 0
      000BD5 00                    3357 	.db #0x00	; 0
      000BD6 00                    3358 	.db #0x00	; 0
      000BD7 00                    3359 	.db #0x00	; 0
      000BD8 00                    3360 	.db #0x00	; 0
      000BD9 00                    3361 	.db #0x00	; 0
      000BDA 00                    3362 	.db #0x00	; 0
      000BDB 00                    3363 	.db #0x00	; 0
      000BDC 00                    3364 	.db #0x00	; 0
      000BDD 00                    3365 	.db #0x00	; 0
      000BDE 00                    3366 	.db #0x00	; 0
      000BDF 00                    3367 	.db #0x00	; 0
      000BE0 00                    3368 	.db #0x00	; 0
      000BE1 00                    3369 	.db #0x00	; 0
      000BE2 00                    3370 	.db #0x00	; 0
      000BE3 00                    3371 	.db #0x00	; 0
      000BE4 00                    3372 	.db #0x00	; 0
      000BE5 00                    3373 	.db #0x00	; 0
      000BE6 00                    3374 	.db #0x00	; 0
      000BE7 00                    3375 	.db #0x00	; 0
      000BE8 06                    3376 	.db #0x06	; 6
      000BE9 00                    3377 	.db #0x00	; 0
      000BEA 0F                    3378 	.db #0x0f	; 15
      000BEB 06                    3379 	.db #0x06	; 6
      000BEC 1F                    3380 	.db #0x1f	; 31
      000BED 0E                    3381 	.db #0x0e	; 14
      000BEE 7E                    3382 	.db #0x7e	; 126
      000BEF 1C                    3383 	.db #0x1c	; 28
      000BF0 FC                    3384 	.db #0xfc	; 252
      000BF1 78                    3385 	.db #0x78	; 120	'x'
      000BF2 F8                    3386 	.db #0xf8	; 248
      000BF3 F0                    3387 	.db #0xf0	; 240
      000BF4 F8                    3388 	.db #0xf8	; 248
      000BF5 70                    3389 	.db #0x70	; 112	'p'
      000BF6 70                    3390 	.db #0x70	; 112	'p'
      000BF7 20                    3391 	.db #0x20	; 32
      000BF8 00                    3392 	.db #0x00	; 0
      000BF9 00                    3393 	.db #0x00	; 0
      000BFA 00                    3394 	.db #0x00	; 0
      000BFB 00                    3395 	.db #0x00	; 0
      000BFC 00                    3396 	.db #0x00	; 0
      000BFD 00                    3397 	.db #0x00	; 0
      000BFE 00                    3398 	.db #0x00	; 0
      000BFF 00                    3399 	.db #0x00	; 0
      000C00 00                    3400 	.db #0x00	; 0
      000C01 00                    3401 	.db #0x00	; 0
      000C02 00                    3402 	.db #0x00	; 0
      000C03 00                    3403 	.db #0x00	; 0
      000C04 00                    3404 	.db #0x00	; 0
      000C05 00                    3405 	.db #0x00	; 0
      000C06 00                    3406 	.db #0x00	; 0
      000C07 00                    3407 	.db #0x00	; 0
      000C08                       3408 _upgrade:
      000C08 01                    3409 	.db #0x01	; 1
      000C09 00 00                 3410 	.dw #0x0000
      000C0B 00 00                 3411 	.dw #0x0000
      000C0D 00                    3412 	.db #0x00	; 0
      000C0E 00                    3413 	.db #0x00	; 0
      000C0F 00                    3414 	.db #0x00	; 0
      000C10 70                    3415 	.db #0x70	; 112	'p'
      000C11                       3416 _ammo:
      000C11 01                    3417 	.db #0x01	; 1
      000C12 00 00                 3418 	.dw #0x0000
      000C14 00 00                 3419 	.dw #0x0000
      000C16 00                    3420 	.db #0x00	; 0
      000C17 01                    3421 	.db #0x01	; 1
      000C18 05                    3422 	.db #0x05	; 5
      000C19 72                    3423 	.db #0x72	; 114	'r'
      000C1A                       3424 _health:
      000C1A 01                    3425 	.db #0x01	; 1
      000C1B 00 00                 3426 	.dw #0x0000
      000C1D 00 00                 3427 	.dw #0x0000
      000C1F 00                    3428 	.db #0x00	; 0
      000C20 02                    3429 	.db #0x02	; 2
      000C21 32                    3430 	.db #0x32	; 50	'2'
      000C22 74                    3431 	.db #0x74	; 116	't'
      000C23                       3432 _Pickups:
      000C23 7E                    3433 	.db #0x7e	; 126
      000C24 00                    3434 	.db #0x00	; 0
      000C25 81                    3435 	.db #0x81	; 129
      000C26 00                    3436 	.db #0x00	; 0
      000C27 D7                    3437 	.db #0xd7	; 215
      000C28 56                    3438 	.db #0x56	; 86	'V'
      000C29 D7                    3439 	.db #0xd7	; 215
      000C2A 56                    3440 	.db #0x56	; 86	'V'
      000C2B D5                    3441 	.db #0xd5	; 213
      000C2C 54                    3442 	.db #0x54	; 84	'T'
      000C2D F5                    3443 	.db #0xf5	; 245
      000C2E 74                    3444 	.db #0x74	; 116	't'
      000C2F 81                    3445 	.db #0x81	; 129
      000C30 00                    3446 	.db #0x00	; 0
      000C31 7E                    3447 	.db #0x7e	; 126
      000C32 00                    3448 	.db #0x00	; 0
      000C33 00                    3449 	.db #0x00	; 0
      000C34 00                    3450 	.db #0x00	; 0
      000C35 00                    3451 	.db #0x00	; 0
      000C36 00                    3452 	.db #0x00	; 0
      000C37 00                    3453 	.db #0x00	; 0
      000C38 00                    3454 	.db #0x00	; 0
      000C39 00                    3455 	.db #0x00	; 0
      000C3A 00                    3456 	.db #0x00	; 0
      000C3B 00                    3457 	.db #0x00	; 0
      000C3C 00                    3458 	.db #0x00	; 0
      000C3D 00                    3459 	.db #0x00	; 0
      000C3E 00                    3460 	.db #0x00	; 0
      000C3F 00                    3461 	.db #0x00	; 0
      000C40 00                    3462 	.db #0x00	; 0
      000C41 00                    3463 	.db #0x00	; 0
      000C42 00                    3464 	.db #0x00	; 0
      000C43 7E                    3465 	.db #0x7e	; 126
      000C44 00                    3466 	.db #0x00	; 0
      000C45 8F                    3467 	.db #0x8f	; 143
      000C46 06                    3468 	.db #0x06	; 6
      000C47 9F                    3469 	.db #0x9f	; 159
      000C48 0E                    3470 	.db #0x0e	; 14
      000C49 FF                    3471 	.db #0xff	; 255
      000C4A 1C                    3472 	.db #0x1c	; 28
      000C4B FD                    3473 	.db #0xfd	; 253
      000C4C 78                    3474 	.db #0x78	; 120	'x'
      000C4D F9                    3475 	.db #0xf9	; 249
      000C4E 70                    3476 	.db #0x70	; 112	'p'
      000C4F F9                    3477 	.db #0xf9	; 249
      000C50 70                    3478 	.db #0x70	; 112	'p'
      000C51 7E                    3479 	.db #0x7e	; 126
      000C52 00                    3480 	.db #0x00	; 0
      000C53 00                    3481 	.db #0x00	; 0
      000C54 00                    3482 	.db #0x00	; 0
      000C55 00                    3483 	.db #0x00	; 0
      000C56 00                    3484 	.db #0x00	; 0
      000C57 00                    3485 	.db #0x00	; 0
      000C58 00                    3486 	.db #0x00	; 0
      000C59 00                    3487 	.db #0x00	; 0
      000C5A 00                    3488 	.db #0x00	; 0
      000C5B 00                    3489 	.db #0x00	; 0
      000C5C 00                    3490 	.db #0x00	; 0
      000C5D 00                    3491 	.db #0x00	; 0
      000C5E 00                    3492 	.db #0x00	; 0
      000C5F 00                    3493 	.db #0x00	; 0
      000C60 00                    3494 	.db #0x00	; 0
      000C61 00                    3495 	.db #0x00	; 0
      000C62 00                    3496 	.db #0x00	; 0
      000C63 7E                    3497 	.db #0x7e	; 126
      000C64 00                    3498 	.db #0x00	; 0
      000C65 99                    3499 	.db #0x99	; 153
      000C66 18                    3500 	.db #0x18	; 24
      000C67 99                    3501 	.db #0x99	; 153
      000C68 18                    3502 	.db #0x18	; 24
      000C69 FF                    3503 	.db #0xff	; 255
      000C6A 7E                    3504 	.db #0x7e	; 126
      000C6B FF                    3505 	.db #0xff	; 255
      000C6C 7E                    3506 	.db #0x7e	; 126
      000C6D 99                    3507 	.db #0x99	; 153
      000C6E 18                    3508 	.db #0x18	; 24
      000C6F 99                    3509 	.db #0x99	; 153
      000C70 18                    3510 	.db #0x18	; 24
      000C71 7E                    3511 	.db #0x7e	; 126
      000C72 00                    3512 	.db #0x00	; 0
      000C73 00                    3513 	.db #0x00	; 0
      000C74 00                    3514 	.db #0x00	; 0
      000C75 00                    3515 	.db #0x00	; 0
      000C76 00                    3516 	.db #0x00	; 0
      000C77 00                    3517 	.db #0x00	; 0
      000C78 00                    3518 	.db #0x00	; 0
      000C79 00                    3519 	.db #0x00	; 0
      000C7A 00                    3520 	.db #0x00	; 0
      000C7B 00                    3521 	.db #0x00	; 0
      000C7C 00                    3522 	.db #0x00	; 0
      000C7D 00                    3523 	.db #0x00	; 0
      000C7E 00                    3524 	.db #0x00	; 0
      000C7F 00                    3525 	.db #0x00	; 0
      000C80 00                    3526 	.db #0x00	; 0
      000C81 00                    3527 	.db #0x00	; 0
      000C82 00                    3528 	.db #0x00	; 0
      000C83                       3529 _Player1:
      000C83 08                    3530 	.db #0x08	; 8
      000C84 08                    3531 	.db #0x08	; 8
      000C85 1C                    3532 	.db #0x1c	; 28
      000C86 14                    3533 	.db #0x14	; 20
      000C87 38                    3534 	.db #0x38	; 56	'8'
      000C88 28                    3535 	.db #0x28	; 40
      000C89 68                    3536 	.db #0x68	; 104	'h'
      000C8A 58                    3537 	.db #0x58	; 88	'X'
      000C8B 50                    3538 	.db #0x50	; 80	'P'
      000C8C 71                    3539 	.db #0x71	; 113	'q'
      000C8D D0                    3540 	.db #0xd0	; 208
      000C8E B2                    3541 	.db #0xb2	; 178
      000C8F D5                    3542 	.db #0xd5	; 213
      000C90 B6                    3543 	.db #0xb6	; 182
      000C91 D5                    3544 	.db #0xd5	; 213
      000C92 B6                    3545 	.db #0xb6	; 182
      000C93 D5                    3546 	.db #0xd5	; 213
      000C94 B6                    3547 	.db #0xb6	; 182
      000C95 CD                    3548 	.db #0xcd	; 205
      000C96 BE                    3549 	.db #0xbe	; 190
      000C97 C5                    3550 	.db #0xc5	; 197
      000C98 BE                    3551 	.db #0xbe	; 190
      000C99 65                    3552 	.db #0x65	; 101	'e'
      000C9A 5E                    3553 	.db #0x5e	; 94
      000C9B 3E                    3554 	.db #0x3e	; 62
      000C9C 2F                    3555 	.db #0x2f	; 47
      000C9D 13                    3556 	.db #0x13	; 19
      000C9E 13                    3557 	.db #0x13	; 19
      000C9F 06                    3558 	.db #0x06	; 6
      000CA0 07                    3559 	.db #0x07	; 7
      000CA1 07                    3560 	.db #0x07	; 7
      000CA2 05                    3561 	.db #0x05	; 5
      000CA3 10                    3562 	.db #0x10	; 16
      000CA4 10                    3563 	.db #0x10	; 16
      000CA5 38                    3564 	.db #0x38	; 56	'8'
      000CA6 28                    3565 	.db #0x28	; 40
      000CA7 1C                    3566 	.db #0x1c	; 28
      000CA8 14                    3567 	.db #0x14	; 20
      000CA9 16                    3568 	.db #0x16	; 22
      000CAA 1A                    3569 	.db #0x1a	; 26
      000CAB 0A                    3570 	.db #0x0a	; 10
      000CAC 8E                    3571 	.db #0x8e	; 142
      000CAD 0B                    3572 	.db #0x0b	; 11
      000CAE 4D                    3573 	.db #0x4d	; 77	'M'
      000CAF AB                    3574 	.db #0xab	; 171
      000CB0 6D                    3575 	.db #0x6d	; 109	'm'
      000CB1 AB                    3576 	.db #0xab	; 171
      000CB2 6D                    3577 	.db #0x6d	; 109	'm'
      000CB3 AB                    3578 	.db #0xab	; 171
      000CB4 6D                    3579 	.db #0x6d	; 109	'm'
      000CB5 B3                    3580 	.db #0xb3	; 179
      000CB6 7D                    3581 	.db #0x7d	; 125
      000CB7 A3                    3582 	.db #0xa3	; 163
      000CB8 7D                    3583 	.db #0x7d	; 125
      000CB9 A6                    3584 	.db #0xa6	; 166
      000CBA 7A                    3585 	.db #0x7a	; 122	'z'
      000CBB 7C                    3586 	.db #0x7c	; 124
      000CBC F4                    3587 	.db #0xf4	; 244
      000CBD C8                    3588 	.db #0xc8	; 200
      000CBE C8                    3589 	.db #0xc8	; 200
      000CBF 60                    3590 	.db #0x60	; 96
      000CC0 E0                    3591 	.db #0xe0	; 224
      000CC1 E0                    3592 	.db #0xe0	; 224
      000CC2 A0                    3593 	.db #0xa0	; 160
      000CC3 07                    3594 	.db #0x07	; 7
      000CC4 07                    3595 	.db #0x07	; 7
      000CC5 0F                    3596 	.db #0x0f	; 15
      000CC6 08                    3597 	.db #0x08	; 8
      000CC7 18                    3598 	.db #0x18	; 24
      000CC8 17                    3599 	.db #0x17	; 23
      000CC9 31                    3600 	.db #0x31	; 49	'1'
      000CCA 2F                    3601 	.db #0x2f	; 47
      000CCB 12                    3602 	.db #0x12	; 18
      000CCC 1E                    3603 	.db #0x1e	; 30
      000CCD DF                    3604 	.db #0xdf	; 223
      000CCE DF                    3605 	.db #0xdf	; 223
      000CCF F0                    3606 	.db #0xf0	; 240
      000CD0 7F                    3607 	.db #0x7f	; 127
      000CD1 AF                    3608 	.db #0xaf	; 175
      000CD2 F0                    3609 	.db #0xf0	; 240
      000CD3 AF                    3610 	.db #0xaf	; 175
      000CD4 F0                    3611 	.db #0xf0	; 240
      000CD5 F0                    3612 	.db #0xf0	; 240
      000CD6 7F                    3613 	.db #0x7f	; 127
      000CD7 DF                    3614 	.db #0xdf	; 223
      000CD8 DF                    3615 	.db #0xdf	; 223
      000CD9 12                    3616 	.db #0x12	; 18
      000CDA 1E                    3617 	.db #0x1e	; 30
      000CDB 31                    3618 	.db #0x31	; 49	'1'
      000CDC 2F                    3619 	.db #0x2f	; 47
      000CDD 18                    3620 	.db #0x18	; 24
      000CDE 17                    3621 	.db #0x17	; 23
      000CDF 0F                    3622 	.db #0x0f	; 15
      000CE0 08                    3623 	.db #0x08	; 8
      000CE1 07                    3624 	.db #0x07	; 7
      000CE2 07                    3625 	.db #0x07	; 7
      000CE3 E0                    3626 	.db #0xe0	; 224
      000CE4 E0                    3627 	.db #0xe0	; 224
      000CE5 F8                    3628 	.db #0xf8	; 248
      000CE6 18                    3629 	.db #0x18	; 24
      000CE7 0C                    3630 	.db #0x0c	; 12
      000CE8 F4                    3631 	.db #0xf4	; 244
      000CE9 F6                    3632 	.db #0xf6	; 246
      000CEA FA                    3633 	.db #0xfa	; 250
      000CEB 0F                    3634 	.db #0x0f	; 15
      000CEC 0D                    3635 	.db #0x0d	; 13
      000CED C2                    3636 	.db #0xc2	; 194
      000CEE C2                    3637 	.db #0xc2	; 194
      000CEF 00                    3638 	.db #0x00	; 0
      000CF0 E0                    3639 	.db #0xe0	; 224
      000CF1 C0                    3640 	.db #0xc0	; 192
      000CF2 10                    3641 	.db #0x10	; 16
      000CF3 C0                    3642 	.db #0xc0	; 192
      000CF4 10                    3643 	.db #0x10	; 16
      000CF5 00                    3644 	.db #0x00	; 0
      000CF6 E0                    3645 	.db #0xe0	; 224
      000CF7 C2                    3646 	.db #0xc2	; 194
      000CF8 C2                    3647 	.db #0xc2	; 194
      000CF9 0F                    3648 	.db #0x0f	; 15
      000CFA 0D                    3649 	.db #0x0d	; 13
      000CFB F6                    3650 	.db #0xf6	; 246
      000CFC FA                    3651 	.db #0xfa	; 250
      000CFD 0C                    3652 	.db #0x0c	; 12
      000CFE F4                    3653 	.db #0xf4	; 244
      000CFF F8                    3654 	.db #0xf8	; 248
      000D00 18                    3655 	.db #0x18	; 24
      000D01 E0                    3656 	.db #0xe0	; 224
      000D02 E0                    3657 	.db #0xe0	; 224
      000D03 07                    3658 	.db #0x07	; 7
      000D04 07                    3659 	.db #0x07	; 7
      000D05 1B                    3660 	.db #0x1b	; 27
      000D06 1C                    3661 	.db #0x1c	; 28
      000D07 38                    3662 	.db #0x38	; 56	'8'
      000D08 27                    3663 	.db #0x27	; 39
      000D09 60                    3664 	.db #0x60	; 96
      000D0A 5E                    3665 	.db #0x5e	; 94
      000D0B 60                    3666 	.db #0x60	; 96
      000D0C 5C                    3667 	.db #0x5c	; 92
      000D0D 41                    3668 	.db #0x41	; 65	'A'
      000D0E 79                    3669 	.db #0x79	; 121	'y'
      000D0F C4                    3670 	.db #0xc4	; 196
      000D10 B7                    3671 	.db #0xb7	; 183
      000D11 99                    3672 	.db #0x99	; 153
      000D12 FE                    3673 	.db #0xfe	; 254
      000D13 B3                    3674 	.db #0xb3	; 179
      000D14 EC                    3675 	.db #0xec	; 236
      000D15 67                    3676 	.db #0x67	; 103	'g'
      000D16 58                    3677 	.db #0x58	; 88	'X'
      000D17 2E                    3678 	.db #0x2e	; 46
      000D18 31                    3679 	.db #0x31	; 49	'1'
      000D19 5C                    3680 	.db #0x5c	; 92
      000D1A 73                    3681 	.db #0x73	; 115	's'
      000D1B 69                    3682 	.db #0x69	; 105	'i'
      000D1C 5E                    3683 	.db #0x5e	; 94
      000D1D 37                    3684 	.db #0x37	; 55	'7'
      000D1E 2D                    3685 	.db #0x2d	; 45
      000D1F 1A                    3686 	.db #0x1a	; 26
      000D20 1B                    3687 	.db #0x1b	; 27
      000D21 01                    3688 	.db #0x01	; 1
      000D22 01                    3689 	.db #0x01	; 1
      000D23 E0                    3690 	.db #0xe0	; 224
      000D24 E0                    3691 	.db #0xe0	; 224
      000D25 90                    3692 	.db #0x90	; 144
      000D26 70                    3693 	.db #0x70	; 112	'p'
      000D27 C0                    3694 	.db #0xc0	; 192
      000D28 C0                    3695 	.db #0xc0	; 192
      000D29 00                    3696 	.db #0x00	; 0
      000D2A 00                    3697 	.db #0x00	; 0
      000D2B 02                    3698 	.db #0x02	; 2
      000D2C 02                    3699 	.db #0x02	; 2
      000D2D C1                    3700 	.db #0xc1	; 193
      000D2E C3                    3701 	.db #0xc3	; 195
      000D2F 65                    3702 	.db #0x65	; 101	'e'
      000D30 A7                    3703 	.db #0xa7	; 167
      000D31 A7                    3704 	.db #0xa7	; 167
      000D32 65                    3705 	.db #0x65	; 101	'e'
      000D33 A3                    3706 	.db #0xa3	; 163
      000D34 65                    3707 	.db #0x65	; 101	'e'
      000D35 03                    3708 	.db #0x03	; 3
      000D36 CD                    3709 	.db #0xcd	; 205
      000D37 41                    3710 	.db #0x41	; 65	'A'
      000D38 DF                    3711 	.db #0xdf	; 223
      000D39 86                    3712 	.db #0x86	; 134
      000D3A BA                    3713 	.db #0xba	; 186
      000D3B 86                    3714 	.db #0x86	; 134
      000D3C FA                    3715 	.db #0xfa	; 250
      000D3D 1C                    3716 	.db #0x1c	; 28
      000D3E E4                    3717 	.db #0xe4	; 228
      000D3F 78                    3718 	.db #0x78	; 120	'x'
      000D40 B8                    3719 	.db #0xb8	; 184
      000D41 C0                    3720 	.db #0xc0	; 192
      000D42 C0                    3721 	.db #0xc0	; 192
      000D43 00                    3722 	.db #0x00	; 0
      000D44 00                    3723 	.db #0x00	; 0
      000D45 00                    3724 	.db #0x00	; 0
      000D46 00                    3725 	.db #0x00	; 0
      000D47 00                    3726 	.db #0x00	; 0
      000D48 00                    3727 	.db #0x00	; 0
      000D49 00                    3728 	.db #0x00	; 0
      000D4A 00                    3729 	.db #0x00	; 0
      000D4B 00                    3730 	.db #0x00	; 0
      000D4C 00                    3731 	.db #0x00	; 0
      000D4D 00                    3732 	.db #0x00	; 0
      000D4E 00                    3733 	.db #0x00	; 0
      000D4F 00                    3734 	.db #0x00	; 0
      000D50 00                    3735 	.db #0x00	; 0
      000D51 00                    3736 	.db #0x00	; 0
      000D52 00                    3737 	.db #0x00	; 0
      000D53 00                    3738 	.db #0x00	; 0
      000D54 00                    3739 	.db #0x00	; 0
      000D55 00                    3740 	.db #0x00	; 0
      000D56 00                    3741 	.db #0x00	; 0
      000D57 00                    3742 	.db #0x00	; 0
      000D58 00                    3743 	.db #0x00	; 0
      000D59 00                    3744 	.db #0x00	; 0
      000D5A 00                    3745 	.db #0x00	; 0
      000D5B 00                    3746 	.db #0x00	; 0
      000D5C 00                    3747 	.db #0x00	; 0
      000D5D 00                    3748 	.db #0x00	; 0
      000D5E 00                    3749 	.db #0x00	; 0
      000D5F 00                    3750 	.db #0x00	; 0
      000D60 00                    3751 	.db #0x00	; 0
      000D61 00                    3752 	.db #0x00	; 0
      000D62 00                    3753 	.db #0x00	; 0
      000D63 00                    3754 	.db #0x00	; 0
      000D64 00                    3755 	.db #0x00	; 0
      000D65 00                    3756 	.db #0x00	; 0
      000D66 00                    3757 	.db #0x00	; 0
      000D67 00                    3758 	.db #0x00	; 0
      000D68 00                    3759 	.db #0x00	; 0
      000D69 00                    3760 	.db #0x00	; 0
      000D6A 00                    3761 	.db #0x00	; 0
      000D6B 00                    3762 	.db #0x00	; 0
      000D6C 00                    3763 	.db #0x00	; 0
      000D6D 00                    3764 	.db #0x00	; 0
      000D6E 00                    3765 	.db #0x00	; 0
      000D6F 00                    3766 	.db #0x00	; 0
      000D70 00                    3767 	.db #0x00	; 0
      000D71 00                    3768 	.db #0x00	; 0
      000D72 00                    3769 	.db #0x00	; 0
      000D73 00                    3770 	.db #0x00	; 0
      000D74 00                    3771 	.db #0x00	; 0
      000D75 00                    3772 	.db #0x00	; 0
      000D76 00                    3773 	.db #0x00	; 0
      000D77 00                    3774 	.db #0x00	; 0
      000D78 00                    3775 	.db #0x00	; 0
      000D79 00                    3776 	.db #0x00	; 0
      000D7A 00                    3777 	.db #0x00	; 0
      000D7B 00                    3778 	.db #0x00	; 0
      000D7C 00                    3779 	.db #0x00	; 0
      000D7D 00                    3780 	.db #0x00	; 0
      000D7E 00                    3781 	.db #0x00	; 0
      000D7F 00                    3782 	.db #0x00	; 0
      000D80 00                    3783 	.db #0x00	; 0
      000D81 00                    3784 	.db #0x00	; 0
      000D82 00                    3785 	.db #0x00	; 0
      000D83                       3786 _ex:
      000D83 00                    3787 	.db #0x00	; 0
      000D84 00                    3788 	.db #0x00	; 0
      000D85 00                    3789 	.db #0x00	; 0
      000D86 00                    3790 	.db #0x00	; 0
      000D87 00                    3791 	.db #0x00	; 0
      000D88 00                    3792 	.db #0x00	; 0
      000D89                       3793 _Ex1:
      000D89 00                    3794 	.db #0x00	; 0
      000D8A 00                    3795 	.db #0x00	; 0
      000D8B 00                    3796 	.db #0x00	; 0
      000D8C 00                    3797 	.db #0x00	; 0
      000D8D 00                    3798 	.db #0x00	; 0
      000D8E 00                    3799 	.db #0x00	; 0
      000D8F 00                    3800 	.db #0x00	; 0
      000D90 00                    3801 	.db #0x00	; 0
      000D91 00                    3802 	.db #0x00	; 0
      000D92 00                    3803 	.db #0x00	; 0
      000D93 04                    3804 	.db #0x04	; 4
      000D94 04                    3805 	.db #0x04	; 4
      000D95 06                    3806 	.db #0x06	; 6
      000D96 06                    3807 	.db #0x06	; 6
      000D97 06                    3808 	.db #0x06	; 6
      000D98 06                    3809 	.db #0x06	; 6
      000D99 00                    3810 	.db #0x00	; 0
      000D9A 00                    3811 	.db #0x00	; 0
      000D9B 00                    3812 	.db #0x00	; 0
      000D9C 00                    3813 	.db #0x00	; 0
      000D9D 03                    3814 	.db #0x03	; 3
      000D9E 03                    3815 	.db #0x03	; 3
      000D9F 07                    3816 	.db #0x07	; 7
      000DA0 07                    3817 	.db #0x07	; 7
      000DA1 02                    3818 	.db #0x02	; 2
      000DA2 02                    3819 	.db #0x02	; 2
      000DA3 00                    3820 	.db #0x00	; 0
      000DA4 00                    3821 	.db #0x00	; 0
      000DA5 00                    3822 	.db #0x00	; 0
      000DA6 00                    3823 	.db #0x00	; 0
      000DA7 00                    3824 	.db #0x00	; 0
      000DA8 00                    3825 	.db #0x00	; 0
      000DA9 00                    3826 	.db #0x00	; 0
      000DAA 00                    3827 	.db #0x00	; 0
      000DAB 00                    3828 	.db #0x00	; 0
      000DAC 00                    3829 	.db #0x00	; 0
      000DAD 00                    3830 	.db #0x00	; 0
      000DAE 00                    3831 	.db #0x00	; 0
      000DAF 00                    3832 	.db #0x00	; 0
      000DB0 00                    3833 	.db #0x00	; 0
      000DB1 00                    3834 	.db #0x00	; 0
      000DB2 00                    3835 	.db #0x00	; 0
      000DB3 00                    3836 	.db #0x00	; 0
      000DB4 00                    3837 	.db #0x00	; 0
      000DB5 00                    3838 	.db #0x00	; 0
      000DB6 00                    3839 	.db #0x00	; 0
      000DB7 38                    3840 	.db #0x38	; 56	'8'
      000DB8 38                    3841 	.db #0x38	; 56	'8'
      000DB9 38                    3842 	.db #0x38	; 56	'8'
      000DBA 38                    3843 	.db #0x38	; 56	'8'
      000DBB 30                    3844 	.db #0x30	; 48	'0'
      000DBC 30                    3845 	.db #0x30	; 48	'0'
      000DBD 00                    3846 	.db #0x00	; 0
      000DBE 00                    3847 	.db #0x00	; 0
      000DBF 00                    3848 	.db #0x00	; 0
      000DC0 00                    3849 	.db #0x00	; 0
      000DC1 00                    3850 	.db #0x00	; 0
      000DC2 00                    3851 	.db #0x00	; 0
      000DC3 00                    3852 	.db #0x00	; 0
      000DC4 00                    3853 	.db #0x00	; 0
      000DC5 00                    3854 	.db #0x00	; 0
      000DC6 00                    3855 	.db #0x00	; 0
      000DC7 00                    3856 	.db #0x00	; 0
      000DC8 00                    3857 	.db #0x00	; 0
      000DC9 00                    3858 	.db #0x00	; 0
      000DCA 00                    3859 	.db #0x00	; 0
      000DCB 00                    3860 	.db #0x00	; 0
      000DCC 00                    3861 	.db #0x00	; 0
      000DCD 00                    3862 	.db #0x00	; 0
      000DCE 00                    3863 	.db #0x00	; 0
      000DCF 18                    3864 	.db #0x18	; 24
      000DD0 18                    3865 	.db #0x18	; 24
      000DD1 3E                    3866 	.db #0x3e	; 62
      000DD2 3E                    3867 	.db #0x3e	; 62
      000DD3 3E                    3868 	.db #0x3e	; 62
      000DD4 3E                    3869 	.db #0x3e	; 62
      000DD5 1C                    3870 	.db #0x1c	; 28
      000DD6 1C                    3871 	.db #0x1c	; 28
      000DD7 08                    3872 	.db #0x08	; 8
      000DD8 08                    3873 	.db #0x08	; 8
      000DD9 00                    3874 	.db #0x00	; 0
      000DDA 00                    3875 	.db #0x00	; 0
      000DDB 00                    3876 	.db #0x00	; 0
      000DDC 00                    3877 	.db #0x00	; 0
      000DDD 07                    3878 	.db #0x07	; 7
      000DDE 07                    3879 	.db #0x07	; 7
      000DDF 07                    3880 	.db #0x07	; 7
      000DE0 07                    3881 	.db #0x07	; 7
      000DE1 07                    3882 	.db #0x07	; 7
      000DE2 07                    3883 	.db #0x07	; 7
      000DE3 03                    3884 	.db #0x03	; 3
      000DE4 03                    3885 	.db #0x03	; 3
      000DE5 03                    3886 	.db #0x03	; 3
      000DE6 03                    3887 	.db #0x03	; 3
      000DE7 00                    3888 	.db #0x00	; 0
      000DE8 00                    3889 	.db #0x00	; 0
      000DE9 00                    3890 	.db #0x00	; 0
      000DEA 00                    3891 	.db #0x00	; 0
      000DEB 00                    3892 	.db #0x00	; 0
      000DEC 00                    3893 	.db #0x00	; 0
      000DED 04                    3894 	.db #0x04	; 4
      000DEE 04                    3895 	.db #0x04	; 4
      000DEF 1E                    3896 	.db #0x1e	; 30
      000DF0 1E                    3897 	.db #0x1e	; 30
      000DF1 3E                    3898 	.db #0x3e	; 62
      000DF2 3E                    3899 	.db #0x3e	; 62
      000DF3 3E                    3900 	.db #0x3e	; 62
      000DF4 3E                    3901 	.db #0x3e	; 62
      000DF5 1E                    3902 	.db #0x1e	; 30
      000DF6 1E                    3903 	.db #0x1e	; 30
      000DF7 0C                    3904 	.db #0x0c	; 12
      000DF8 0C                    3905 	.db #0x0c	; 12
      000DF9 00                    3906 	.db #0x00	; 0
      000DFA 00                    3907 	.db #0x00	; 0
      000DFB 00                    3908 	.db #0x00	; 0
      000DFC 00                    3909 	.db #0x00	; 0
      000DFD 00                    3910 	.db #0x00	; 0
      000DFE 00                    3911 	.db #0x00	; 0
      000DFF 80                    3912 	.db #0x80	; 128
      000E00 80                    3913 	.db #0x80	; 128
      000E01 C0                    3914 	.db #0xc0	; 192
      000E02 C0                    3915 	.db #0xc0	; 192
      000E03 80                    3916 	.db #0x80	; 128
      000E04 80                    3917 	.db #0x80	; 128
      000E05 00                    3918 	.db #0x00	; 0
      000E06 00                    3919 	.db #0x00	; 0
      000E07 00                    3920 	.db #0x00	; 0
      000E08 00                    3921 	.db #0x00	; 0
      000E09 00                    3922 	.db #0x00	; 0
      000E0A 00                    3923 	.db #0x00	; 0
      000E0B 20                    3924 	.db #0x20	; 32
      000E0C 20                    3925 	.db #0x20	; 32
      000E0D 70                    3926 	.db #0x70	; 112	'p'
      000E0E 70                    3927 	.db #0x70	; 112	'p'
      000E0F 70                    3928 	.db #0x70	; 112	'p'
      000E10 70                    3929 	.db #0x70	; 112	'p'
      000E11 60                    3930 	.db #0x60	; 96
      000E12 60                    3931 	.db #0x60	; 96
      000E13 00                    3932 	.db #0x00	; 0
      000E14 00                    3933 	.db #0x00	; 0
      000E15 00                    3934 	.db #0x00	; 0
      000E16 00                    3935 	.db #0x00	; 0
      000E17 00                    3936 	.db #0x00	; 0
      000E18 00                    3937 	.db #0x00	; 0
      000E19 00                    3938 	.db #0x00	; 0
      000E1A 00                    3939 	.db #0x00	; 0
      000E1B 00                    3940 	.db #0x00	; 0
      000E1C 00                    3941 	.db #0x00	; 0
      000E1D 00                    3942 	.db #0x00	; 0
      000E1E 00                    3943 	.db #0x00	; 0
      000E1F 00                    3944 	.db #0x00	; 0
      000E20 00                    3945 	.db #0x00	; 0
      000E21 00                    3946 	.db #0x00	; 0
      000E22 00                    3947 	.db #0x00	; 0
      000E23 07                    3948 	.db #0x07	; 7
      000E24 07                    3949 	.db #0x07	; 7
      000E25 07                    3950 	.db #0x07	; 7
      000E26 07                    3951 	.db #0x07	; 7
      000E27 06                    3952 	.db #0x06	; 6
      000E28 06                    3953 	.db #0x06	; 6
      000E29 00                    3954 	.db #0x00	; 0
      000E2A 00                    3955 	.db #0x00	; 0
      000E2B 04                    3956 	.db #0x04	; 4
      000E2C 04                    3957 	.db #0x04	; 4
      000E2D 0E                    3958 	.db #0x0e	; 14
      000E2E 0E                    3959 	.db #0x0e	; 14
      000E2F 0E                    3960 	.db #0x0e	; 14
      000E30 0E                    3961 	.db #0x0e	; 14
      000E31 00                    3962 	.db #0x00	; 0
      000E32 00                    3963 	.db #0x00	; 0
      000E33 00                    3964 	.db #0x00	; 0
      000E34 00                    3965 	.db #0x00	; 0
      000E35 00                    3966 	.db #0x00	; 0
      000E36 00                    3967 	.db #0x00	; 0
      000E37 00                    3968 	.db #0x00	; 0
      000E38 00                    3969 	.db #0x00	; 0
      000E39 00                    3970 	.db #0x00	; 0
      000E3A 00                    3971 	.db #0x00	; 0
      000E3B 00                    3972 	.db #0x00	; 0
      000E3C 00                    3973 	.db #0x00	; 0
      000E3D 00                    3974 	.db #0x00	; 0
      000E3E 00                    3975 	.db #0x00	; 0
      000E3F 00                    3976 	.db #0x00	; 0
      000E40 00                    3977 	.db #0x00	; 0
      000E41 00                    3978 	.db #0x00	; 0
      000E42 00                    3979 	.db #0x00	; 0
      000E43 00                    3980 	.db #0x00	; 0
      000E44 00                    3981 	.db #0x00	; 0
      000E45 00                    3982 	.db #0x00	; 0
      000E46 00                    3983 	.db #0x00	; 0
      000E47 00                    3984 	.db #0x00	; 0
      000E48 00                    3985 	.db #0x00	; 0
      000E49 00                    3986 	.db #0x00	; 0
      000E4A 00                    3987 	.db #0x00	; 0
      000E4B 40                    3988 	.db #0x40	; 64
      000E4C 40                    3989 	.db #0x40	; 64
      000E4D 60                    3990 	.db #0x60	; 96
      000E4E 60                    3991 	.db #0x60	; 96
      000E4F 00                    3992 	.db #0x00	; 0
      000E50 00                    3993 	.db #0x00	; 0
      000E51 00                    3994 	.db #0x00	; 0
      000E52 00                    3995 	.db #0x00	; 0
      000E53 00                    3996 	.db #0x00	; 0
      000E54 00                    3997 	.db #0x00	; 0
      000E55 00                    3998 	.db #0x00	; 0
      000E56 00                    3999 	.db #0x00	; 0
      000E57 00                    4000 	.db #0x00	; 0
      000E58 00                    4001 	.db #0x00	; 0
      000E59 00                    4002 	.db #0x00	; 0
      000E5A 00                    4003 	.db #0x00	; 0
      000E5B 00                    4004 	.db #0x00	; 0
      000E5C 00                    4005 	.db #0x00	; 0
      000E5D 00                    4006 	.db #0x00	; 0
      000E5E 00                    4007 	.db #0x00	; 0
      000E5F 00                    4008 	.db #0x00	; 0
      000E60 00                    4009 	.db #0x00	; 0
      000E61 00                    4010 	.db #0x00	; 0
      000E62 00                    4011 	.db #0x00	; 0
      000E63 00                    4012 	.db #0x00	; 0
      000E64 00                    4013 	.db #0x00	; 0
      000E65 04                    4014 	.db #0x04	; 4
      000E66 04                    4015 	.db #0x04	; 4
      000E67 06                    4016 	.db #0x06	; 6
      000E68 06                    4017 	.db #0x06	; 6
      000E69 00                    4018 	.db #0x00	; 0
      000E6A 00                    4019 	.db #0x00	; 0
      000E6B 02                    4020 	.db #0x02	; 2
      000E6C 02                    4021 	.db #0x02	; 2
      000E6D 02                    4022 	.db #0x02	; 2
      000E6E 02                    4023 	.db #0x02	; 2
      000E6F 00                    4024 	.db #0x00	; 0
      000E70 00                    4025 	.db #0x00	; 0
      000E71 00                    4026 	.db #0x00	; 0
      000E72 00                    4027 	.db #0x00	; 0
      000E73 00                    4028 	.db #0x00	; 0
      000E74 00                    4029 	.db #0x00	; 0
      000E75 00                    4030 	.db #0x00	; 0
      000E76 00                    4031 	.db #0x00	; 0
      000E77 00                    4032 	.db #0x00	; 0
      000E78 00                    4033 	.db #0x00	; 0
      000E79 00                    4034 	.db #0x00	; 0
      000E7A 00                    4035 	.db #0x00	; 0
      000E7B 00                    4036 	.db #0x00	; 0
      000E7C 00                    4037 	.db #0x00	; 0
      000E7D 00                    4038 	.db #0x00	; 0
      000E7E 00                    4039 	.db #0x00	; 0
      000E7F 00                    4040 	.db #0x00	; 0
      000E80 00                    4041 	.db #0x00	; 0
      000E81 00                    4042 	.db #0x00	; 0
      000E82 00                    4043 	.db #0x00	; 0
      000E83 00                    4044 	.db #0x00	; 0
      000E84 00                    4045 	.db #0x00	; 0
      000E85 00                    4046 	.db #0x00	; 0
      000E86 00                    4047 	.db #0x00	; 0
      000E87 00                    4048 	.db #0x00	; 0
      000E88 00                    4049 	.db #0x00	; 0
      000E89                       4050 _Ex2:
      000E89 00                    4051 	.db #0x00	; 0
      000E8A 00                    4052 	.db #0x00	; 0
      000E8B 00                    4053 	.db #0x00	; 0
      000E8C 00                    4054 	.db #0x00	; 0
      000E8D 00                    4055 	.db #0x00	; 0
      000E8E 00                    4056 	.db #0x00	; 0
      000E8F 01                    4057 	.db #0x01	; 1
      000E90 01                    4058 	.db #0x01	; 1
      000E91 03                    4059 	.db #0x03	; 3
      000E92 03                    4060 	.db #0x03	; 3
      000E93 03                    4061 	.db #0x03	; 3
      000E94 03                    4062 	.db #0x03	; 3
      000E95 00                    4063 	.db #0x00	; 0
      000E96 00                    4064 	.db #0x00	; 0
      000E97 06                    4065 	.db #0x06	; 6
      000E98 06                    4066 	.db #0x06	; 6
      000E99 0E                    4067 	.db #0x0e	; 14
      000E9A 0E                    4068 	.db #0x0e	; 14
      000E9B 0E                    4069 	.db #0x0e	; 14
      000E9C 0E                    4070 	.db #0x0e	; 14
      000E9D 00                    4071 	.db #0x00	; 0
      000E9E 00                    4072 	.db #0x00	; 0
      000E9F 00                    4073 	.db #0x00	; 0
      000EA0 00                    4074 	.db #0x00	; 0
      000EA1 00                    4075 	.db #0x00	; 0
      000EA2 00                    4076 	.db #0x00	; 0
      000EA3 00                    4077 	.db #0x00	; 0
      000EA4 00                    4078 	.db #0x00	; 0
      000EA5 00                    4079 	.db #0x00	; 0
      000EA6 00                    4080 	.db #0x00	; 0
      000EA7 00                    4081 	.db #0x00	; 0
      000EA8 00                    4082 	.db #0x00	; 0
      000EA9 00                    4083 	.db #0x00	; 0
      000EAA 00                    4084 	.db #0x00	; 0
      000EAB 00                    4085 	.db #0x00	; 0
      000EAC 00                    4086 	.db #0x00	; 0
      000EAD 00                    4087 	.db #0x00	; 0
      000EAE 00                    4088 	.db #0x00	; 0
      000EAF 80                    4089 	.db #0x80	; 128
      000EB0 80                    4090 	.db #0x80	; 128
      000EB1 80                    4091 	.db #0x80	; 128
      000EB2 80                    4092 	.db #0x80	; 128
      000EB3 00                    4093 	.db #0x00	; 0
      000EB4 00                    4094 	.db #0x00	; 0
      000EB5 60                    4095 	.db #0x60	; 96
      000EB6 60                    4096 	.db #0x60	; 96
      000EB7 60                    4097 	.db #0x60	; 96
      000EB8 60                    4098 	.db #0x60	; 96
      000EB9 00                    4099 	.db #0x00	; 0
      000EBA 00                    4100 	.db #0x00	; 0
      000EBB C0                    4101 	.db #0xc0	; 192
      000EBC C0                    4102 	.db #0xc0	; 192
      000EBD C0                    4103 	.db #0xc0	; 192
      000EBE C0                    4104 	.db #0xc0	; 192
      000EBF C0                    4105 	.db #0xc0	; 192
      000EC0 C0                    4106 	.db #0xc0	; 192
      000EC1 00                    4107 	.db #0x00	; 0
      000EC2 00                    4108 	.db #0x00	; 0
      000EC3 00                    4109 	.db #0x00	; 0
      000EC4 00                    4110 	.db #0x00	; 0
      000EC5 00                    4111 	.db #0x00	; 0
      000EC6 00                    4112 	.db #0x00	; 0
      000EC7 00                    4113 	.db #0x00	; 0
      000EC8 00                    4114 	.db #0x00	; 0
      000EC9 00                    4115 	.db #0x00	; 0
      000ECA 00                    4116 	.db #0x00	; 0
      000ECB 00                    4117 	.db #0x00	; 0
      000ECC 00                    4118 	.db #0x00	; 0
      000ECD 03                    4119 	.db #0x03	; 3
      000ECE 03                    4120 	.db #0x03	; 3
      000ECF 03                    4121 	.db #0x03	; 3
      000ED0 03                    4122 	.db #0x03	; 3
      000ED1 03                    4123 	.db #0x03	; 3
      000ED2 03                    4124 	.db #0x03	; 3
      000ED3 01                    4125 	.db #0x01	; 1
      000ED4 01                    4126 	.db #0x01	; 1
      000ED5 00                    4127 	.db #0x00	; 0
      000ED6 00                    4128 	.db #0x00	; 0
      000ED7 00                    4129 	.db #0x00	; 0
      000ED8 00                    4130 	.db #0x00	; 0
      000ED9 00                    4131 	.db #0x00	; 0
      000EDA 00                    4132 	.db #0x00	; 0
      000EDB 1C                    4133 	.db #0x1c	; 28
      000EDC 1C                    4134 	.db #0x1c	; 28
      000EDD 3C                    4135 	.db #0x3c	; 60
      000EDE 3C                    4136 	.db #0x3c	; 60
      000EDF 3C                    4137 	.db #0x3c	; 60
      000EE0 3C                    4138 	.db #0x3c	; 60
      000EE1 30                    4139 	.db #0x30	; 48	'0'
      000EE2 30                    4140 	.db #0x30	; 48	'0'
      000EE3 00                    4141 	.db #0x00	; 0
      000EE4 00                    4142 	.db #0x00	; 0
      000EE5 00                    4143 	.db #0x00	; 0
      000EE6 00                    4144 	.db #0x00	; 0
      000EE7 00                    4145 	.db #0x00	; 0
      000EE8 00                    4146 	.db #0x00	; 0
      000EE9 00                    4147 	.db #0x00	; 0
      000EEA 00                    4148 	.db #0x00	; 0
      000EEB 00                    4149 	.db #0x00	; 0
      000EEC 00                    4150 	.db #0x00	; 0
      000EED 80                    4151 	.db #0x80	; 128
      000EEE 80                    4152 	.db #0x80	; 128
      000EEF C0                    4153 	.db #0xc0	; 192
      000EF0 C0                    4154 	.db #0xc0	; 192
      000EF1 C0                    4155 	.db #0xc0	; 192
      000EF2 C0                    4156 	.db #0xc0	; 192
      000EF3 DE                    4157 	.db #0xde	; 222
      000EF4 DE                    4158 	.db #0xde	; 222
      000EF5 9E                    4159 	.db #0x9e	; 158
      000EF6 9E                    4160 	.db #0x9e	; 158
      000EF7 0E                    4161 	.db #0x0e	; 14
      000EF8 0E                    4162 	.db #0x0e	; 14
      000EF9 00                    4163 	.db #0x00	; 0
      000EFA 00                    4164 	.db #0x00	; 0
      000EFB 00                    4165 	.db #0x00	; 0
      000EFC 00                    4166 	.db #0x00	; 0
      000EFD 38                    4167 	.db #0x38	; 56	'8'
      000EFE 38                    4168 	.db #0x38	; 56	'8'
      000EFF 3C                    4169 	.db #0x3c	; 60
      000F00 3C                    4170 	.db #0x3c	; 60
      000F01 3C                    4171 	.db #0x3c	; 60
      000F02 3C                    4172 	.db #0x3c	; 60
      000F03 3C                    4173 	.db #0x3c	; 60
      000F04 3C                    4174 	.db #0x3c	; 60
      000F05 1C                    4175 	.db #0x1c	; 28
      000F06 1C                    4176 	.db #0x1c	; 28
      000F07 00                    4177 	.db #0x00	; 0
      000F08 00                    4178 	.db #0x00	; 0
      000F09 00                    4179 	.db #0x00	; 0
      000F0A 00                    4180 	.db #0x00	; 0
      000F0B 04                    4181 	.db #0x04	; 4
      000F0C 04                    4182 	.db #0x04	; 4
      000F0D 07                    4183 	.db #0x07	; 7
      000F0E 07                    4184 	.db #0x07	; 7
      000F0F 07                    4185 	.db #0x07	; 7
      000F10 07                    4186 	.db #0x07	; 7
      000F11 00                    4187 	.db #0x00	; 0
      000F12 00                    4188 	.db #0x00	; 0
      000F13 00                    4189 	.db #0x00	; 0
      000F14 00                    4190 	.db #0x00	; 0
      000F15 00                    4191 	.db #0x00	; 0
      000F16 00                    4192 	.db #0x00	; 0
      000F17 00                    4193 	.db #0x00	; 0
      000F18 00                    4194 	.db #0x00	; 0
      000F19 00                    4195 	.db #0x00	; 0
      000F1A 00                    4196 	.db #0x00	; 0
      000F1B 00                    4197 	.db #0x00	; 0
      000F1C 00                    4198 	.db #0x00	; 0
      000F1D 00                    4199 	.db #0x00	; 0
      000F1E 00                    4200 	.db #0x00	; 0
      000F1F 00                    4201 	.db #0x00	; 0
      000F20 00                    4202 	.db #0x00	; 0
      000F21 38                    4203 	.db #0x38	; 56	'8'
      000F22 38                    4204 	.db #0x38	; 56	'8'
      000F23 18                    4205 	.db #0x18	; 24
      000F24 18                    4206 	.db #0x18	; 24
      000F25 00                    4207 	.db #0x00	; 0
      000F26 00                    4208 	.db #0x00	; 0
      000F27 00                    4209 	.db #0x00	; 0
      000F28 00                    4210 	.db #0x00	; 0
      000F29 00                    4211 	.db #0x00	; 0
      000F2A 00                    4212 	.db #0x00	; 0
      000F2B 00                    4213 	.db #0x00	; 0
      000F2C 00                    4214 	.db #0x00	; 0
      000F2D 00                    4215 	.db #0x00	; 0
      000F2E 00                    4216 	.db #0x00	; 0
      000F2F 00                    4217 	.db #0x00	; 0
      000F30 00                    4218 	.db #0x00	; 0
      000F31 00                    4219 	.db #0x00	; 0
      000F32 00                    4220 	.db #0x00	; 0
      000F33 0C                    4221 	.db #0x0c	; 12
      000F34 0C                    4222 	.db #0x0c	; 12
      000F35 0E                    4223 	.db #0x0e	; 14
      000F36 0E                    4224 	.db #0x0e	; 14
      000F37 06                    4225 	.db #0x06	; 6
      000F38 06                    4226 	.db #0x06	; 6
      000F39 00                    4227 	.db #0x00	; 0
      000F3A 00                    4228 	.db #0x00	; 0
      000F3B 00                    4229 	.db #0x00	; 0
      000F3C 00                    4230 	.db #0x00	; 0
      000F3D 00                    4231 	.db #0x00	; 0
      000F3E 00                    4232 	.db #0x00	; 0
      000F3F 00                    4233 	.db #0x00	; 0
      000F40 00                    4234 	.db #0x00	; 0
      000F41 06                    4235 	.db #0x06	; 6
      000F42 06                    4236 	.db #0x06	; 6
      000F43 0E                    4237 	.db #0x0e	; 14
      000F44 0E                    4238 	.db #0x0e	; 14
      000F45 04                    4239 	.db #0x04	; 4
      000F46 04                    4240 	.db #0x04	; 4
      000F47 00                    4241 	.db #0x00	; 0
      000F48 00                    4242 	.db #0x00	; 0
      000F49 0E                    4243 	.db #0x0e	; 14
      000F4A 0E                    4244 	.db #0x0e	; 14
      000F4B 04                    4245 	.db #0x04	; 4
      000F4C 04                    4246 	.db #0x04	; 4
      000F4D 00                    4247 	.db #0x00	; 0
      000F4E 00                    4248 	.db #0x00	; 0
      000F4F 00                    4249 	.db #0x00	; 0
      000F50 00                    4250 	.db #0x00	; 0
      000F51 00                    4251 	.db #0x00	; 0
      000F52 00                    4252 	.db #0x00	; 0
      000F53 00                    4253 	.db #0x00	; 0
      000F54 00                    4254 	.db #0x00	; 0
      000F55 00                    4255 	.db #0x00	; 0
      000F56 00                    4256 	.db #0x00	; 0
      000F57 00                    4257 	.db #0x00	; 0
      000F58 00                    4258 	.db #0x00	; 0
      000F59 00                    4259 	.db #0x00	; 0
      000F5A 00                    4260 	.db #0x00	; 0
      000F5B 00                    4261 	.db #0x00	; 0
      000F5C 00                    4262 	.db #0x00	; 0
      000F5D 00                    4263 	.db #0x00	; 0
      000F5E 00                    4264 	.db #0x00	; 0
      000F5F 00                    4265 	.db #0x00	; 0
      000F60 00                    4266 	.db #0x00	; 0
      000F61 20                    4267 	.db #0x20	; 32
      000F62 20                    4268 	.db #0x20	; 32
      000F63 30                    4269 	.db #0x30	; 48	'0'
      000F64 30                    4270 	.db #0x30	; 48	'0'
      000F65 00                    4271 	.db #0x00	; 0
      000F66 00                    4272 	.db #0x00	; 0
      000F67 00                    4273 	.db #0x00	; 0
      000F68 00                    4274 	.db #0x00	; 0
      000F69 00                    4275 	.db #0x00	; 0
      000F6A 00                    4276 	.db #0x00	; 0
      000F6B 00                    4277 	.db #0x00	; 0
      000F6C 00                    4278 	.db #0x00	; 0
      000F6D 00                    4279 	.db #0x00	; 0
      000F6E 00                    4280 	.db #0x00	; 0
      000F6F 00                    4281 	.db #0x00	; 0
      000F70 00                    4282 	.db #0x00	; 0
      000F71 00                    4283 	.db #0x00	; 0
      000F72 00                    4284 	.db #0x00	; 0
      000F73 00                    4285 	.db #0x00	; 0
      000F74 00                    4286 	.db #0x00	; 0
      000F75 04                    4287 	.db #0x04	; 4
      000F76 04                    4288 	.db #0x04	; 4
      000F77 03                    4289 	.db #0x03	; 3
      000F78 03                    4290 	.db #0x03	; 3
      000F79 00                    4291 	.db #0x00	; 0
      000F7A 00                    4292 	.db #0x00	; 0
      000F7B 00                    4293 	.db #0x00	; 0
      000F7C 00                    4294 	.db #0x00	; 0
      000F7D 00                    4295 	.db #0x00	; 0
      000F7E 00                    4296 	.db #0x00	; 0
      000F7F 00                    4297 	.db #0x00	; 0
      000F80 00                    4298 	.db #0x00	; 0
      000F81 00                    4299 	.db #0x00	; 0
      000F82 00                    4300 	.db #0x00	; 0
      000F83 02                    4301 	.db #0x02	; 2
      000F84 02                    4302 	.db #0x02	; 2
      000F85 02                    4303 	.db #0x02	; 2
      000F86 02                    4304 	.db #0x02	; 2
      000F87 00                    4305 	.db #0x00	; 0
      000F88 00                    4306 	.db #0x00	; 0
      000F89                       4307 _Ex3:
      000F89 00                    4308 	.db #0x00	; 0
      000F8A 00                    4309 	.db #0x00	; 0
      000F8B 00                    4310 	.db #0x00	; 0
      000F8C 00                    4311 	.db #0x00	; 0
      000F8D 00                    4312 	.db #0x00	; 0
      000F8E 00                    4313 	.db #0x00	; 0
      000F8F 00                    4314 	.db #0x00	; 0
      000F90 00                    4315 	.db #0x00	; 0
      000F91 00                    4316 	.db #0x00	; 0
      000F92 00                    4317 	.db #0x00	; 0
      000F93 00                    4318 	.db #0x00	; 0
      000F94 00                    4319 	.db #0x00	; 0
      000F95 02                    4320 	.db #0x02	; 2
      000F96 02                    4321 	.db #0x02	; 2
      000F97 07                    4322 	.db #0x07	; 7
      000F98 07                    4323 	.db #0x07	; 7
      000F99 02                    4324 	.db #0x02	; 2
      000F9A 02                    4325 	.db #0x02	; 2
      000F9B 00                    4326 	.db #0x00	; 0
      000F9C 00                    4327 	.db #0x00	; 0
      000F9D 00                    4328 	.db #0x00	; 0
      000F9E 00                    4329 	.db #0x00	; 0
      000F9F 00                    4330 	.db #0x00	; 0
      000FA0 00                    4331 	.db #0x00	; 0
      000FA1 00                    4332 	.db #0x00	; 0
      000FA2 00                    4333 	.db #0x00	; 0
      000FA3 00                    4334 	.db #0x00	; 0
      000FA4 00                    4335 	.db #0x00	; 0
      000FA5 00                    4336 	.db #0x00	; 0
      000FA6 00                    4337 	.db #0x00	; 0
      000FA7 00                    4338 	.db #0x00	; 0
      000FA8 00                    4339 	.db #0x00	; 0
      000FA9 00                    4340 	.db #0x00	; 0
      000FAA 00                    4341 	.db #0x00	; 0
      000FAB 00                    4342 	.db #0x00	; 0
      000FAC 00                    4343 	.db #0x00	; 0
      000FAD 00                    4344 	.db #0x00	; 0
      000FAE 00                    4345 	.db #0x00	; 0
      000FAF 00                    4346 	.db #0x00	; 0
      000FB0 00                    4347 	.db #0x00	; 0
      000FB1 00                    4348 	.db #0x00	; 0
      000FB2 00                    4349 	.db #0x00	; 0
      000FB3 00                    4350 	.db #0x00	; 0
      000FB4 00                    4351 	.db #0x00	; 0
      000FB5 20                    4352 	.db #0x20	; 32
      000FB6 20                    4353 	.db #0x20	; 32
      000FB7 70                    4354 	.db #0x70	; 112	'p'
      000FB8 70                    4355 	.db #0x70	; 112	'p'
      000FB9 20                    4356 	.db #0x20	; 32
      000FBA 20                    4357 	.db #0x20	; 32
      000FBB 00                    4358 	.db #0x00	; 0
      000FBC 00                    4359 	.db #0x00	; 0
      000FBD 00                    4360 	.db #0x00	; 0
      000FBE 00                    4361 	.db #0x00	; 0
      000FBF 00                    4362 	.db #0x00	; 0
      000FC0 00                    4363 	.db #0x00	; 0
      000FC1 00                    4364 	.db #0x00	; 0
      000FC2 00                    4365 	.db #0x00	; 0
      000FC3 00                    4366 	.db #0x00	; 0
      000FC4 00                    4367 	.db #0x00	; 0
      000FC5 00                    4368 	.db #0x00	; 0
      000FC6 00                    4369 	.db #0x00	; 0
      000FC7 00                    4370 	.db #0x00	; 0
      000FC8 00                    4371 	.db #0x00	; 0
      000FC9 00                    4372 	.db #0x00	; 0
      000FCA 00                    4373 	.db #0x00	; 0
      000FCB 00                    4374 	.db #0x00	; 0
      000FCC 00                    4375 	.db #0x00	; 0
      000FCD 00                    4376 	.db #0x00	; 0
      000FCE 00                    4377 	.db #0x00	; 0
      000FCF 00                    4378 	.db #0x00	; 0
      000FD0 00                    4379 	.db #0x00	; 0
      000FD1 00                    4380 	.db #0x00	; 0
      000FD2 00                    4381 	.db #0x00	; 0
      000FD3 10                    4382 	.db #0x10	; 16
      000FD4 10                    4383 	.db #0x10	; 16
      000FD5 38                    4384 	.db #0x38	; 56	'8'
      000FD6 38                    4385 	.db #0x38	; 56	'8'
      000FD7 3E                    4386 	.db #0x3e	; 62
      000FD8 3E                    4387 	.db #0x3e	; 62
      000FD9 18                    4388 	.db #0x18	; 24
      000FDA 18                    4389 	.db #0x18	; 24
      000FDB 00                    4390 	.db #0x00	; 0
      000FDC 00                    4391 	.db #0x00	; 0
      000FDD 00                    4392 	.db #0x00	; 0
      000FDE 00                    4393 	.db #0x00	; 0
      000FDF 00                    4394 	.db #0x00	; 0
      000FE0 00                    4395 	.db #0x00	; 0
      000FE1 00                    4396 	.db #0x00	; 0
      000FE2 00                    4397 	.db #0x00	; 0
      000FE3 00                    4398 	.db #0x00	; 0
      000FE4 00                    4399 	.db #0x00	; 0
      000FE5 00                    4400 	.db #0x00	; 0
      000FE6 00                    4401 	.db #0x00	; 0
      000FE7 00                    4402 	.db #0x00	; 0
      000FE8 00                    4403 	.db #0x00	; 0
      000FE9 00                    4404 	.db #0x00	; 0
      000FEA 00                    4405 	.db #0x00	; 0
      000FEB 00                    4406 	.db #0x00	; 0
      000FEC 00                    4407 	.db #0x00	; 0
      000FED 00                    4408 	.db #0x00	; 0
      000FEE 00                    4409 	.db #0x00	; 0
      000FEF 00                    4410 	.db #0x00	; 0
      000FF0 00                    4411 	.db #0x00	; 0
      000FF1 00                    4412 	.db #0x00	; 0
      000FF2 00                    4413 	.db #0x00	; 0
      000FF3 00                    4414 	.db #0x00	; 0
      000FF4 00                    4415 	.db #0x00	; 0
      000FF5 1C                    4416 	.db #0x1c	; 28
      000FF6 1C                    4417 	.db #0x1c	; 28
      000FF7 7C                    4418 	.db #0x7c	; 124
      000FF8 7C                    4419 	.db #0x7c	; 124
      000FF9 1C                    4420 	.db #0x1c	; 28
      000FFA 1C                    4421 	.db #0x1c	; 28
      000FFB 08                    4422 	.db #0x08	; 8
      000FFC 08                    4423 	.db #0x08	; 8
      000FFD 00                    4424 	.db #0x00	; 0
      000FFE 00                    4425 	.db #0x00	; 0
      000FFF 00                    4426 	.db #0x00	; 0
      001000 00                    4427 	.db #0x00	; 0
      001001 00                    4428 	.db #0x00	; 0
      001002 00                    4429 	.db #0x00	; 0
      001003 00                    4430 	.db #0x00	; 0
      001004 00                    4431 	.db #0x00	; 0
      001005 00                    4432 	.db #0x00	; 0
      001006 00                    4433 	.db #0x00	; 0
      001007 00                    4434 	.db #0x00	; 0
      001008 00                    4435 	.db #0x00	; 0
      001009 00                    4436 	.db #0x00	; 0
      00100A 00                    4437 	.db #0x00	; 0
      00100B 00                    4438 	.db #0x00	; 0
      00100C 00                    4439 	.db #0x00	; 0
      00100D 00                    4440 	.db #0x00	; 0
      00100E 00                    4441 	.db #0x00	; 0
      00100F 00                    4442 	.db #0x00	; 0
      001010 00                    4443 	.db #0x00	; 0
      001011 00                    4444 	.db #0x00	; 0
      001012 00                    4445 	.db #0x00	; 0
      001013 00                    4446 	.db #0x00	; 0
      001014 00                    4447 	.db #0x00	; 0
      001015 28                    4448 	.db #0x28	; 40
      001016 28                    4449 	.db #0x28	; 40
      001017 30                    4450 	.db #0x30	; 48	'0'
      001018 30                    4451 	.db #0x30	; 48	'0'
      001019 38                    4452 	.db #0x38	; 56	'8'
      00101A 38                    4453 	.db #0x38	; 56	'8'
      00101B 10                    4454 	.db #0x10	; 16
      00101C 10                    4455 	.db #0x10	; 16
      00101D 00                    4456 	.db #0x00	; 0
      00101E 00                    4457 	.db #0x00	; 0
      00101F 00                    4458 	.db #0x00	; 0
      001020 00                    4459 	.db #0x00	; 0
      001021 00                    4460 	.db #0x00	; 0
      001022 00                    4461 	.db #0x00	; 0
      001023 00                    4462 	.db #0x00	; 0
      001024 00                    4463 	.db #0x00	; 0
      001025 00                    4464 	.db #0x00	; 0
      001026 00                    4465 	.db #0x00	; 0
      001027 00                    4466 	.db #0x00	; 0
      001028 00                    4467 	.db #0x00	; 0
      001029 00                    4468 	.db #0x00	; 0
      00102A 00                    4469 	.db #0x00	; 0
      00102B 00                    4470 	.db #0x00	; 0
      00102C 00                    4471 	.db #0x00	; 0
      00102D 00                    4472 	.db #0x00	; 0
      00102E 00                    4473 	.db #0x00	; 0
      00102F 00                    4474 	.db #0x00	; 0
      001030 00                    4475 	.db #0x00	; 0
      001031 00                    4476 	.db #0x00	; 0
      001032 00                    4477 	.db #0x00	; 0
      001033 00                    4478 	.db #0x00	; 0
      001034 00                    4479 	.db #0x00	; 0
      001035 04                    4480 	.db #0x04	; 4
      001036 04                    4481 	.db #0x04	; 4
      001037 0E                    4482 	.db #0x0e	; 14
      001038 0E                    4483 	.db #0x0e	; 14
      001039 0E                    4484 	.db #0x0e	; 14
      00103A 0E                    4485 	.db #0x0e	; 14
      00103B 00                    4486 	.db #0x00	; 0
      00103C 00                    4487 	.db #0x00	; 0
      00103D 00                    4488 	.db #0x00	; 0
      00103E 00                    4489 	.db #0x00	; 0
      00103F 00                    4490 	.db #0x00	; 0
      001040 00                    4491 	.db #0x00	; 0
      001041 00                    4492 	.db #0x00	; 0
      001042 00                    4493 	.db #0x00	; 0
      001043 00                    4494 	.db #0x00	; 0
      001044 00                    4495 	.db #0x00	; 0
      001045 00                    4496 	.db #0x00	; 0
      001046 00                    4497 	.db #0x00	; 0
      001047 00                    4498 	.db #0x00	; 0
      001048 00                    4499 	.db #0x00	; 0
      001049 00                    4500 	.db #0x00	; 0
      00104A 00                    4501 	.db #0x00	; 0
      00104B 00                    4502 	.db #0x00	; 0
      00104C 00                    4503 	.db #0x00	; 0
      00104D 00                    4504 	.db #0x00	; 0
      00104E 00                    4505 	.db #0x00	; 0
      00104F 00                    4506 	.db #0x00	; 0
      001050 00                    4507 	.db #0x00	; 0
      001051 00                    4508 	.db #0x00	; 0
      001052 00                    4509 	.db #0x00	; 0
      001053 00                    4510 	.db #0x00	; 0
      001054 00                    4511 	.db #0x00	; 0
      001055 00                    4512 	.db #0x00	; 0
      001056 00                    4513 	.db #0x00	; 0
      001057 60                    4514 	.db #0x60	; 96
      001058 60                    4515 	.db #0x60	; 96
      001059 40                    4516 	.db #0x40	; 64
      00105A 40                    4517 	.db #0x40	; 64
      00105B 00                    4518 	.db #0x00	; 0
      00105C 00                    4519 	.db #0x00	; 0
      00105D 00                    4520 	.db #0x00	; 0
      00105E 00                    4521 	.db #0x00	; 0
      00105F 00                    4522 	.db #0x00	; 0
      001060 00                    4523 	.db #0x00	; 0
      001061 00                    4524 	.db #0x00	; 0
      001062 00                    4525 	.db #0x00	; 0
      001063 00                    4526 	.db #0x00	; 0
      001064 00                    4527 	.db #0x00	; 0
      001065 00                    4528 	.db #0x00	; 0
      001066 00                    4529 	.db #0x00	; 0
      001067 00                    4530 	.db #0x00	; 0
      001068 00                    4531 	.db #0x00	; 0
      001069 00                    4532 	.db #0x00	; 0
      00106A 00                    4533 	.db #0x00	; 0
      00106B 00                    4534 	.db #0x00	; 0
      00106C 00                    4535 	.db #0x00	; 0
      00106D 00                    4536 	.db #0x00	; 0
      00106E 00                    4537 	.db #0x00	; 0
      00106F 00                    4538 	.db #0x00	; 0
      001070 00                    4539 	.db #0x00	; 0
      001071 00                    4540 	.db #0x00	; 0
      001072 00                    4541 	.db #0x00	; 0
      001073 00                    4542 	.db #0x00	; 0
      001074 00                    4543 	.db #0x00	; 0
      001075 00                    4544 	.db #0x00	; 0
      001076 00                    4545 	.db #0x00	; 0
      001077 02                    4546 	.db #0x02	; 2
      001078 02                    4547 	.db #0x02	; 2
      001079 02                    4548 	.db #0x02	; 2
      00107A 02                    4549 	.db #0x02	; 2
      00107B 00                    4550 	.db #0x00	; 0
      00107C 00                    4551 	.db #0x00	; 0
      00107D 00                    4552 	.db #0x00	; 0
      00107E 00                    4553 	.db #0x00	; 0
      00107F 00                    4554 	.db #0x00	; 0
      001080 00                    4555 	.db #0x00	; 0
      001081 00                    4556 	.db #0x00	; 0
      001082 00                    4557 	.db #0x00	; 0
      001083 00                    4558 	.db #0x00	; 0
      001084 00                    4559 	.db #0x00	; 0
      001085 00                    4560 	.db #0x00	; 0
      001086 00                    4561 	.db #0x00	; 0
      001087 00                    4562 	.db #0x00	; 0
      001088 00                    4563 	.db #0x00	; 0
      001089                       4564 _MenuPicker:
      001089 3C                    4565 	.db #0x3c	; 60
      00108A 3C                    4566 	.db #0x3c	; 60
      00108B 7E                    4567 	.db #0x7e	; 126
      00108C 7E                    4568 	.db #0x7e	; 126
      00108D FF                    4569 	.db #0xff	; 255
      00108E FF                    4570 	.db #0xff	; 255
      00108F FF                    4571 	.db #0xff	; 255
      001090 FF                    4572 	.db #0xff	; 255
      001091 FF                    4573 	.db #0xff	; 255
      001092 FF                    4574 	.db #0xff	; 255
      001093 FF                    4575 	.db #0xff	; 255
      001094 FF                    4576 	.db #0xff	; 255
      001095 7E                    4577 	.db #0x7e	; 126
      001096 7E                    4578 	.db #0x7e	; 126
      001097 3C                    4579 	.db #0x3c	; 60
      001098 3C                    4580 	.db #0x3c	; 60
      001099 00                    4581 	.db #0x00	; 0
      00109A 00                    4582 	.db #0x00	; 0
      00109B 00                    4583 	.db #0x00	; 0
      00109C 00                    4584 	.db #0x00	; 0
      00109D 00                    4585 	.db #0x00	; 0
      00109E 00                    4586 	.db #0x00	; 0
      00109F 00                    4587 	.db #0x00	; 0
      0010A0 00                    4588 	.db #0x00	; 0
      0010A1 00                    4589 	.db #0x00	; 0
      0010A2 00                    4590 	.db #0x00	; 0
      0010A3 00                    4591 	.db #0x00	; 0
      0010A4 00                    4592 	.db #0x00	; 0
      0010A5 00                    4593 	.db #0x00	; 0
      0010A6 00                    4594 	.db #0x00	; 0
      0010A7 00                    4595 	.db #0x00	; 0
      0010A8 00                    4596 	.db #0x00	; 0
      0010A9                       4597 _BLANKSIZE:
      0010A9 03                    4598 	.db #0x03	; 3
      0010AA                       4599 _BLANK:
      0010AA 25                    4600 	.db #0x25	; 37
      0010AB 26                    4601 	.db #0x26	; 38
      0010AC 27                    4602 	.db #0x27	; 39
      0010AD                       4603 _EMPTYSPRITE:
      0010AD 50                    4604 	.db #0x50	; 80	'P'
      0010AE                       4605 _ENEMYCOUNT:
      0010AE 05                    4606 	.db #0x05	; 5
      0010AF                       4607 _xSpawnPositions:
      0010AF 00                    4608 	.db #0x00	; 0
      0010B0 60                    4609 	.db #0x60	; 96
      0010B1 B0                    4610 	.db #0xb0	; 176
      0010B2 00                    4611 	.db #0x00	; 0
      0010B3 B0                    4612 	.db #0xb0	; 176
      0010B4 00                    4613 	.db #0x00	; 0
      0010B5 60                    4614 	.db #0x60	; 96
      0010B6 B0                    4615 	.db #0xb0	; 176
      0010B7                       4616 _ySpawnPositions:
      0010B7 00                    4617 	.db #0x00	; 0
      0010B8 00                    4618 	.db #0x00	; 0
      0010B9 00                    4619 	.db #0x00	; 0
      0010BA 5C                    4620 	.db #0x5c	; 92
      0010BB 5C                    4621 	.db #0x5c	; 92
      0010BC A0                    4622 	.db #0xa0	; 160
      0010BD A0                    4623 	.db #0xa0	; 160
      0010BE A0                    4624 	.db #0xa0	; 160
      0010BF                       4625 _PROJECTILECOUNT:
      0010BF 05                    4626 	.db #0x05	; 5
      0010C0                       4627 _PLAYERSIZE:
      0010C0 10                    4628 	.db #0x10	; 16
      0010C1                       4629 _maxHull:
      0010C1 64                    4630 	.db #0x64	;  100	'd'
      0010C2                       4631 _maxShield:
      0010C2 64                    4632 	.db #0x64	;  100	'd'
      0010C3                       4633 _MAXGUNLEVEL:
      0010C3 01                    4634 	.db #0x01	; 1
      0010C4                       4635 _SPLASHDROPOFF:
      0010C4 01                    4636 	.db #0x01	; 1
      0010C5                       4637 _exCount:
      0010C5 04                    4638 	.db #0x04	; 4
      0010C6                       4639 _EXPLFRAMETIME:
      0010C6 04                    4640 	.db #0x04	; 4
      0010C7                       4641 _exTileCount:
      0010C7 03                    4642 	.db #0x03	; 3
      0010C8                       4643 _AUXTICKFREQUENCY:
      0010C8 01                    4644 	.db #0x01	; 1
                                   4645 ;src/main.c:167: void setHealthBar(uint8_t row, uint8_t hp) {
                                   4646 ;	---------------------------------
                                   4647 ; Function setHealthBar
                                   4648 ; ---------------------------------
      0010C9                       4649 _setHealthBar::
      0010C9 E8 FB                 4650 	add	sp, #-5
                                   4651 ;src/main.c:169: if (hp >= 80) {
      0010CB F8 08                 4652 	ldhl	sp,	#8
      0010CD 7E                    4653 	ld	a, (hl)
      0010CE D6 50                 4654 	sub	a, #0x50
      0010D0 38 31                 4655 	jr	C, 00102$
                                   4656 ;src/main.c:170: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0010D2 F8 00                 4657 	ldhl	sp,	#0
      0010D4 4D                    4658 	ld	c, l
      0010D5 44                    4659 	ld	b, h
      0010D6 36 50                 4660 	ld	(hl), #0x50
      0010D8 69                    4661 	ld	l, c
                                   4662 ;	spillPairReg hl
                                   4663 ;	spillPairReg hl
      0010D9 60                    4664 	ld	h, b
                                   4665 ;	spillPairReg hl
                                   4666 ;	spillPairReg hl
      0010DA 23                    4667 	inc	hl
      0010DB 36 50                 4668 	ld	(hl), #0x50
      0010DD 69                    4669 	ld	l, c
                                   4670 ;	spillPairReg hl
                                   4671 ;	spillPairReg hl
      0010DE 60                    4672 	ld	h, b
                                   4673 ;	spillPairReg hl
                                   4674 ;	spillPairReg hl
      0010DF 23                    4675 	inc	hl
      0010E0 23                    4676 	inc	hl
      0010E1 36 50                 4677 	ld	(hl), #0x50
      0010E3 69                    4678 	ld	l, c
                                   4679 ;	spillPairReg hl
                                   4680 ;	spillPairReg hl
      0010E4 60                    4681 	ld	h, b
                                   4682 ;	spillPairReg hl
                                   4683 ;	spillPairReg hl
      0010E5 23                    4684 	inc	hl
      0010E6 23                    4685 	inc	hl
      0010E7 23                    4686 	inc	hl
      0010E8 36 50                 4687 	ld	(hl), #0x50
      0010EA 21 04 00              4688 	ld	hl, #0x0004
      0010ED 09                    4689 	add	hl, bc
      0010EE 36 50                 4690 	ld	(hl), #0x50
                                   4691 ;src/main.c:171: set_win_tiles(5,row,5,1,blockmap);
      0010F0 C5                    4692 	push	bc
      0010F1 21 05 01              4693 	ld	hl, #0x105
      0010F4 E5                    4694 	push	hl
      0010F5 F8 0B                 4695 	ldhl	sp,	#11
      0010F7 66                    4696 	ld	h, (hl)
      0010F8 2E 05                 4697 	ld	l, #0x05
      0010FA E5                    4698 	push	hl
      0010FB CDr00r00              4699 	call	_set_win_tiles
      0010FE E8 06                 4700 	add	sp, #6
                                   4701 ;src/main.c:172: return;
      001100 C3rD7r11              4702 	jp	00109$
      001103                       4703 00102$:
                                   4704 ;src/main.c:174: if (hp >= 60) {
      001103 F8 08                 4705 	ldhl	sp,	#8
      001105 7E                    4706 	ld	a, (hl)
      001106 D6 3C                 4707 	sub	a, #0x3c
      001108 38 31                 4708 	jr	C, 00104$
                                   4709 ;src/main.c:175: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      00110A F8 00                 4710 	ldhl	sp,	#0
      00110C 4D                    4711 	ld	c, l
      00110D 44                    4712 	ld	b, h
      00110E 36 50                 4713 	ld	(hl), #0x50
      001110 69                    4714 	ld	l, c
                                   4715 ;	spillPairReg hl
                                   4716 ;	spillPairReg hl
      001111 60                    4717 	ld	h, b
                                   4718 ;	spillPairReg hl
                                   4719 ;	spillPairReg hl
      001112 23                    4720 	inc	hl
      001113 36 50                 4721 	ld	(hl), #0x50
      001115 69                    4722 	ld	l, c
                                   4723 ;	spillPairReg hl
                                   4724 ;	spillPairReg hl
      001116 60                    4725 	ld	h, b
                                   4726 ;	spillPairReg hl
                                   4727 ;	spillPairReg hl
      001117 23                    4728 	inc	hl
      001118 23                    4729 	inc	hl
      001119 36 50                 4730 	ld	(hl), #0x50
      00111B 69                    4731 	ld	l, c
                                   4732 ;	spillPairReg hl
                                   4733 ;	spillPairReg hl
      00111C 60                    4734 	ld	h, b
                                   4735 ;	spillPairReg hl
                                   4736 ;	spillPairReg hl
      00111D 23                    4737 	inc	hl
      00111E 23                    4738 	inc	hl
      00111F 23                    4739 	inc	hl
      001120 36 50                 4740 	ld	(hl), #0x50
      001122 21 04 00              4741 	ld	hl, #0x0004
      001125 09                    4742 	add	hl, bc
      001126 36 00                 4743 	ld	(hl), #0x00
                                   4744 ;src/main.c:176: set_win_tiles(5,row,5,1,blockmap);
      001128 C5                    4745 	push	bc
      001129 21 05 01              4746 	ld	hl, #0x105
      00112C E5                    4747 	push	hl
      00112D F8 0B                 4748 	ldhl	sp,	#11
      00112F 66                    4749 	ld	h, (hl)
      001130 2E 05                 4750 	ld	l, #0x05
      001132 E5                    4751 	push	hl
      001133 CDr00r00              4752 	call	_set_win_tiles
      001136 E8 06                 4753 	add	sp, #6
                                   4754 ;src/main.c:177: return;
      001138 C3rD7r11              4755 	jp	00109$
      00113B                       4756 00104$:
                                   4757 ;src/main.c:179: if (hp >= 40) {
      00113B F8 08                 4758 	ldhl	sp,	#8
      00113D 7E                    4759 	ld	a, (hl)
      00113E D6 28                 4760 	sub	a, #0x28
      001140 38 30                 4761 	jr	C, 00106$
                                   4762 ;src/main.c:180: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      001142 F8 00                 4763 	ldhl	sp,	#0
      001144 4D                    4764 	ld	c, l
      001145 44                    4765 	ld	b, h
      001146 36 50                 4766 	ld	(hl), #0x50
      001148 69                    4767 	ld	l, c
                                   4768 ;	spillPairReg hl
                                   4769 ;	spillPairReg hl
      001149 60                    4770 	ld	h, b
                                   4771 ;	spillPairReg hl
                                   4772 ;	spillPairReg hl
      00114A 23                    4773 	inc	hl
      00114B 36 50                 4774 	ld	(hl), #0x50
      00114D 69                    4775 	ld	l, c
                                   4776 ;	spillPairReg hl
                                   4777 ;	spillPairReg hl
      00114E 60                    4778 	ld	h, b
                                   4779 ;	spillPairReg hl
                                   4780 ;	spillPairReg hl
      00114F 23                    4781 	inc	hl
      001150 23                    4782 	inc	hl
      001151 36 50                 4783 	ld	(hl), #0x50
      001153 59                    4784 	ld	e, c
      001154 50                    4785 	ld	d, b
      001155 13                    4786 	inc	de
      001156 13                    4787 	inc	de
      001157 13                    4788 	inc	de
      001158 AF                    4789 	xor	a, a
      001159 12                    4790 	ld	(de), a
      00115A 21 04 00              4791 	ld	hl, #0x0004
      00115D 09                    4792 	add	hl, bc
      00115E 36 00                 4793 	ld	(hl), #0x00
                                   4794 ;src/main.c:181: set_win_tiles(5,row,5,1,blockmap);
      001160 C5                    4795 	push	bc
      001161 21 05 01              4796 	ld	hl, #0x105
      001164 E5                    4797 	push	hl
      001165 F8 0B                 4798 	ldhl	sp,	#11
      001167 66                    4799 	ld	h, (hl)
      001168 2E 05                 4800 	ld	l, #0x05
      00116A E5                    4801 	push	hl
      00116B CDr00r00              4802 	call	_set_win_tiles
      00116E E8 06                 4803 	add	sp, #6
                                   4804 ;src/main.c:182: return;
      001170 18 65                 4805 	jr	00109$
      001172                       4806 00106$:
                                   4807 ;src/main.c:184: if (hp >= 20) {
      001172 F8 08                 4808 	ldhl	sp,	#8
      001174 7E                    4809 	ld	a, (hl)
      001175 D6 14                 4810 	sub	a, #0x14
      001177 38 30                 4811 	jr	C, 00108$
                                   4812 ;src/main.c:185: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      001179 F8 00                 4813 	ldhl	sp,	#0
      00117B 4D                    4814 	ld	c, l
      00117C 44                    4815 	ld	b, h
      00117D 36 50                 4816 	ld	(hl), #0x50
      00117F 69                    4817 	ld	l, c
                                   4818 ;	spillPairReg hl
                                   4819 ;	spillPairReg hl
      001180 60                    4820 	ld	h, b
                                   4821 ;	spillPairReg hl
                                   4822 ;	spillPairReg hl
      001181 23                    4823 	inc	hl
      001182 36 50                 4824 	ld	(hl), #0x50
      001184 59                    4825 	ld	e, c
      001185 50                    4826 	ld	d, b
      001186 13                    4827 	inc	de
      001187 13                    4828 	inc	de
      001188 AF                    4829 	xor	a, a
      001189 12                    4830 	ld	(de), a
      00118A 59                    4831 	ld	e, c
      00118B 50                    4832 	ld	d, b
      00118C 13                    4833 	inc	de
      00118D 13                    4834 	inc	de
      00118E 13                    4835 	inc	de
      00118F AF                    4836 	xor	a, a
      001190 12                    4837 	ld	(de), a
      001191 21 04 00              4838 	ld	hl, #0x0004
      001194 09                    4839 	add	hl, bc
      001195 36 00                 4840 	ld	(hl), #0x00
                                   4841 ;src/main.c:186: set_win_tiles(5,row,5,1,blockmap);
      001197 C5                    4842 	push	bc
      001198 21 05 01              4843 	ld	hl, #0x105
      00119B E5                    4844 	push	hl
      00119C F8 0B                 4845 	ldhl	sp,	#11
      00119E 66                    4846 	ld	h, (hl)
      00119F 2E 05                 4847 	ld	l, #0x05
      0011A1 E5                    4848 	push	hl
      0011A2 CDr00r00              4849 	call	_set_win_tiles
      0011A5 E8 06                 4850 	add	sp, #6
                                   4851 ;src/main.c:187: return;
      0011A7 18 2E                 4852 	jr	00109$
      0011A9                       4853 00108$:
                                   4854 ;src/main.c:189: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      0011A9 F8 00                 4855 	ldhl	sp,	#0
      0011AB 4D                    4856 	ld	c, l
      0011AC 44                    4857 	ld	b, h
      0011AD 36 50                 4858 	ld	(hl), #0x50
      0011AF 59                    4859 	ld	e, c
      0011B0 50                    4860 	ld	d, b
      0011B1 13                    4861 	inc	de
      0011B2 AF                    4862 	xor	a, a
      0011B3 12                    4863 	ld	(de), a
      0011B4 59                    4864 	ld	e, c
      0011B5 50                    4865 	ld	d, b
      0011B6 13                    4866 	inc	de
      0011B7 13                    4867 	inc	de
      0011B8 AF                    4868 	xor	a, a
      0011B9 12                    4869 	ld	(de), a
      0011BA 59                    4870 	ld	e, c
      0011BB 50                    4871 	ld	d, b
      0011BC 13                    4872 	inc	de
      0011BD 13                    4873 	inc	de
      0011BE 13                    4874 	inc	de
      0011BF AF                    4875 	xor	a, a
      0011C0 12                    4876 	ld	(de), a
      0011C1 21 04 00              4877 	ld	hl, #0x0004
      0011C4 09                    4878 	add	hl, bc
      0011C5 36 00                 4879 	ld	(hl), #0x00
                                   4880 ;src/main.c:190: set_win_tiles(5,row,5,1,blockmap);
      0011C7 C5                    4881 	push	bc
      0011C8 21 05 01              4882 	ld	hl, #0x105
      0011CB E5                    4883 	push	hl
      0011CC F8 0B                 4884 	ldhl	sp,	#11
      0011CE 66                    4885 	ld	h, (hl)
      0011CF 2E 05                 4886 	ld	l, #0x05
      0011D1 E5                    4887 	push	hl
      0011D2 CDr00r00              4888 	call	_set_win_tiles
      0011D5 E8 06                 4889 	add	sp, #6
                                   4890 ;src/main.c:191: return;
      0011D7                       4891 00109$:
                                   4892 ;src/main.c:193: }
      0011D7 E8 05                 4893 	add	sp, #5
      0011D9 C9                    4894 	ret
                                   4895 ;src/main.c:195: void updateScore() {
                                   4896 ;	---------------------------------
                                   4897 ; Function updateScore
                                   4898 ; ---------------------------------
      0011DA                       4899 _updateScore::
      0011DA E8 F6                 4900 	add	sp, #-10
                                   4901 ;src/main.c:199: len = bcd2text(&SCORE, 0x01, buf);
      0011DC F8 00                 4902 	ldhl	sp,	#0
      0011DE 4D                    4903 	ld	c, l
      0011DF 44                    4904 	ld	b, h
      0011E0 59                    4905 	ld	e, c
      0011E1 50                    4906 	ld	d, b
      0011E2 C5                    4907 	push	bc
      0011E3 D5                    4908 	push	de
      0011E4 3E 01                 4909 	ld	a, #0x01
      0011E6 F5                    4910 	push	af
      0011E7 33                    4911 	inc	sp
      0011E8 11r30r01              4912 	ld	de, #_SCORE
      0011EB D5                    4913 	push	de
      0011EC CDr00r00              4914 	call	_bcd2text
      0011EF E8 05                 4915 	add	sp, #5
      0011F1 C1                    4916 	pop	bc
                                   4917 ;src/main.c:200: set_win_tiles(15, 1, 5, 1, buf+3);
      0011F2 03                    4918 	inc	bc
      0011F3 03                    4919 	inc	bc
      0011F4 03                    4920 	inc	bc
      0011F5 C5                    4921 	push	bc
      0011F6 21 05 01              4922 	ld	hl, #0x105
      0011F9 E5                    4923 	push	hl
      0011FA 21 0F 01              4924 	ld	hl, #0x10f
      0011FD E5                    4925 	push	hl
      0011FE CDr00r00              4926 	call	_set_win_tiles
                                   4927 ;src/main.c:201: }
      001201 E8 10                 4928 	add	sp, #16
      001203 C9                    4929 	ret
                                   4930 ;src/main.c:203: void updateMissileCount(int8_t amount) {
                                   4931 ;	---------------------------------
                                   4932 ; Function updateMissileCount
                                   4933 ; ---------------------------------
      001204                       4934 _updateMissileCount::
      001204 E8 F6                 4935 	add	sp, #-10
                                   4936 ;src/main.c:204: if (amount == -1) {
      001206 F8 0C                 4937 	ldhl	sp,	#12
      001208 7E                    4938 	ld	a, (hl)
      001209 3C                    4939 	inc	a
      00120A 20 13                 4940 	jr	NZ, 00112$
                                   4941 ;src/main.c:205: missiles--;
      00120C 21r25r01              4942 	ld	hl, #_missiles
      00120F 35                    4943 	dec	(hl)
                                   4944 ;src/main.c:206: bcd_sub(&MISSILES, &INCREMENT);
      001210 11r34r01              4945 	ld	de, #_INCREMENT
      001213 D5                    4946 	push	de
      001214 11r26r01              4947 	ld	de, #_MISSILES
      001217 D5                    4948 	push	de
      001218 CDr00r00              4949 	call	_bcd_sub
      00121B E8 04                 4950 	add	sp, #4
      00121D 18 30                 4951 	jr	00104$
                                   4952 ;src/main.c:209: for(int8_t i=0; i<amount;i++) {
      00121F                       4953 00112$:
      00121F 0E 00                 4954 	ld	c, #0x00
      001221                       4955 00106$:
      001221 F8 0C                 4956 	ldhl	sp,	#12
      001223 5E                    4957 	ld	e, (hl)
      001224 79                    4958 	ld	a,c
      001225 57                    4959 	ld	d,a
      001226 96                    4960 	sub	a, (hl)
      001227 CB 7B                 4961 	bit	7, e
      001229 28 07                 4962 	jr	Z, 00128$
      00122B CB 7A                 4963 	bit	7, d
      00122D 20 08                 4964 	jr	NZ, 00129$
      00122F BF                    4965 	cp	a, a
      001230 18 05                 4966 	jr	00129$
      001232                       4967 00128$:
      001232 CB 7A                 4968 	bit	7, d
      001234 28 01                 4969 	jr	Z, 00129$
      001236 37                    4970 	scf
      001237                       4971 00129$:
      001237 30 16                 4972 	jr	NC, 00104$
                                   4973 ;src/main.c:210: ++missiles;
      001239 21r25r01              4974 	ld	hl, #_missiles
      00123C 34                    4975 	inc	(hl)
                                   4976 ;src/main.c:211: bcd_add(&MISSILES, &INCREMENT);
      00123D C5                    4977 	push	bc
      00123E 11r34r01              4978 	ld	de, #_INCREMENT
      001241 D5                    4979 	push	de
      001242 11r26r01              4980 	ld	de, #_MISSILES
      001245 D5                    4981 	push	de
      001246 CDr00r00              4982 	call	_bcd_add
      001249 E8 04                 4983 	add	sp, #4
      00124B C1                    4984 	pop	bc
                                   4985 ;src/main.c:209: for(int8_t i=0; i<amount;i++) {
      00124C 0C                    4986 	inc	c
      00124D 18 D2                 4987 	jr	00106$
      00124F                       4988 00104$:
                                   4989 ;src/main.c:216: len = bcd2text(&MISSILES, 0x01, buf);
      00124F F8 00                 4990 	ldhl	sp,	#0
      001251 4D                    4991 	ld	c, l
      001252 44                    4992 	ld	b, h
      001253 59                    4993 	ld	e, c
      001254 50                    4994 	ld	d, b
      001255 C5                    4995 	push	bc
      001256 D5                    4996 	push	de
      001257 3E 01                 4997 	ld	a, #0x01
      001259 F5                    4998 	push	af
      00125A 33                    4999 	inc	sp
      00125B 11r26r01              5000 	ld	de, #_MISSILES
      00125E D5                    5001 	push	de
      00125F CDr00r00              5002 	call	_bcd2text
      001262 E8 05                 5003 	add	sp, #5
      001264 C1                    5004 	pop	bc
                                   5005 ;src/main.c:217: set_win_tiles(18, 0, 2, 1, buf+6);
      001265 21 06 00              5006 	ld	hl, #0x0006
      001268 09                    5007 	add	hl, bc
      001269 E5                    5008 	push	hl
      00126A 21 02 01              5009 	ld	hl, #0x102
      00126D E5                    5010 	push	hl
      00126E 21 12 00              5011 	ld	hl, #0x12
      001271 E5                    5012 	push	hl
      001272 CDr00r00              5013 	call	_set_win_tiles
                                   5014 ;src/main.c:219: }
      001275 E8 10                 5015 	add	sp, #16
      001277 C9                    5016 	ret
                                   5017 ;src/main.c:221: void incrementScore() {
                                   5018 ;	---------------------------------
                                   5019 ; Function incrementScore
                                   5020 ; ---------------------------------
      001278                       5021 _incrementScore::
                                   5022 ;src/main.c:222: score += 1;
      001278 21r2Er01              5023 	ld	hl, #_score
      00127B 2A                    5024 	ld	a, (hl+)
      00127C 4F                    5025 	ld	c, a
      00127D 3A                    5026 	ld	a, (hl-)
      00127E 47                    5027 	ld	b, a
      00127F 03                    5028 	inc	bc
      001280 79                    5029 	ld	a, c
      001281 22                    5030 	ld	(hl+), a
      001282 70                    5031 	ld	(hl), b
                                   5032 ;src/main.c:223: bcd_add(&SCORE, &INCREMENT);
      001283 11r34r01              5033 	ld	de, #_INCREMENT
      001286 D5                    5034 	push	de
      001287 11r30r01              5035 	ld	de, #_SCORE
      00128A D5                    5036 	push	de
      00128B CDr00r00              5037 	call	_bcd_add
      00128E E8 04                 5038 	add	sp, #4
                                   5039 ;src/main.c:224: }
      001290 C9                    5040 	ret
                                   5041 ;src/main.c:226: void updateDirection() {
                                   5042 ;	---------------------------------
                                   5043 ; Function updateDirection
                                   5044 ; ---------------------------------
      001291                       5045 _updateDirection::
      001291 E8 FC                 5046 	add	sp, #-4
                                   5047 ;src/main.c:230: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      001293 21r1Cr01              5048 	ld	hl, #_joydata
      001296 5E                    5049 	ld	e, (hl)
      001297 7B                    5050 	ld	a, e
      001298 E6 01                 5051 	and	a, #0x01
      00129A F8 00                 5052 	ldhl	sp,	#0
      00129C 22                    5053 	ld	(hl+), a
      00129D AF                    5054 	xor	a, a
      00129E 22                    5055 	ld	(hl+), a
      00129F 7B                    5056 	ld	a, e
      0012A0 E6 04                 5057 	and	a, #0x04
      0012A2 22                    5058 	ld	(hl+), a
      0012A3 AF                    5059 	xor	a, a
      0012A4 32                    5060 	ld	(hl-), a
      0012A5 2B                    5061 	dec	hl
      0012A6 7B                    5062 	ld	a, e
      0012A7 E6 08                 5063 	and	a, #0x08
      0012A9 4F                    5064 	ld	c, a
      0012AA 06 00                 5065 	ld	b, #0x00
      0012AC 3A                    5066 	ld	a, (hl-)
      0012AD B6                    5067 	or	a, (hl)
      0012AE 28 14                 5068 	jr	Z, 00102$
      0012B0 F8 03                 5069 	ldhl	sp,	#3
      0012B2 3A                    5070 	ld	a, (hl-)
      0012B3 B6                    5071 	or	a, (hl)
      0012B4 20 0E                 5072 	jr	NZ, 00102$
      0012B6 78                    5073 	ld	a, b
      0012B7 B1                    5074 	or	a, c
      0012B8 20 0A                 5075 	jr	NZ, 00102$
                                   5076 ;src/main.c:231: xDir = 1;
      0012BA 21r0Er01              5077 	ld	hl, #_xDir
      0012BD 36 01                 5078 	ld	(hl), #0x01
                                   5079 ;src/main.c:232: yDir = 0;
      0012BF 21r0Fr01              5080 	ld	hl, #_yDir
      0012C2 36 00                 5081 	ld	(hl), #0x00
      0012C4                       5082 00102$:
                                   5083 ;src/main.c:234: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0012C4 7B                    5084 	ld	a, e
      0012C5 E6 02                 5085 	and	a, #0x02
      0012C7 5F                    5086 	ld	e, a
      0012C8 16 00                 5087 	ld	d, #0x00
      0012CA 7A                    5088 	ld	a, d
      0012CB B3                    5089 	or	a, e
      0012CC 28 14                 5090 	jr	Z, 00106$
      0012CE F8 03                 5091 	ldhl	sp,	#3
      0012D0 3A                    5092 	ld	a, (hl-)
      0012D1 B6                    5093 	or	a, (hl)
      0012D2 20 0E                 5094 	jr	NZ, 00106$
      0012D4 78                    5095 	ld	a, b
      0012D5 B1                    5096 	or	a, c
      0012D6 20 0A                 5097 	jr	NZ, 00106$
                                   5098 ;src/main.c:235: xDir = -1;
      0012D8 21r0Er01              5099 	ld	hl, #_xDir
      0012DB 36 FF                 5100 	ld	(hl), #0xff
                                   5101 ;src/main.c:236: yDir = 0;
      0012DD 21r0Fr01              5102 	ld	hl, #_yDir
      0012E0 36 00                 5103 	ld	(hl), #0x00
      0012E2                       5104 00106$:
                                   5105 ;src/main.c:238: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      0012E2 F8 03                 5106 	ldhl	sp,	#3
      0012E4 3A                    5107 	ld	a, (hl-)
      0012E5 B6                    5108 	or	a, (hl)
      0012E6 28 13                 5109 	jr	Z, 00110$
      0012E8 7A                    5110 	ld	a, d
      0012E9 B3                    5111 	or	a, e
      0012EA 20 0F                 5112 	jr	NZ, 00110$
      0012EC 2B                    5113 	dec	hl
      0012ED 3A                    5114 	ld	a, (hl-)
      0012EE B6                    5115 	or	a, (hl)
      0012EF 20 0A                 5116 	jr	NZ, 00110$
                                   5117 ;src/main.c:239: xDir = 0;
      0012F1 21r0Er01              5118 	ld	hl, #_xDir
      0012F4 36 00                 5119 	ld	(hl), #0x00
                                   5120 ;src/main.c:240: yDir = -1;
      0012F6 21r0Fr01              5121 	ld	hl, #_yDir
      0012F9 36 FF                 5122 	ld	(hl), #0xff
      0012FB                       5123 00110$:
                                   5124 ;src/main.c:242: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      0012FB 78                    5125 	ld	a, b
      0012FC B1                    5126 	or	a, c
      0012FD 28 14                 5127 	jr	Z, 00114$
      0012FF 7A                    5128 	ld	a, d
      001300 B3                    5129 	or	a, e
      001301 20 10                 5130 	jr	NZ, 00114$
      001303 F8 01                 5131 	ldhl	sp,	#1
      001305 3A                    5132 	ld	a, (hl-)
      001306 B6                    5133 	or	a, (hl)
      001307 20 0A                 5134 	jr	NZ, 00114$
                                   5135 ;src/main.c:243: xDir = 0;
      001309 21r0Er01              5136 	ld	hl, #_xDir
      00130C 36 00                 5137 	ld	(hl), #0x00
                                   5138 ;src/main.c:244: yDir = 1;
      00130E 21r0Fr01              5139 	ld	hl, #_yDir
      001311 36 01                 5140 	ld	(hl), #0x01
      001313                       5141 00114$:
                                   5142 ;src/main.c:248: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      001313 F8 03                 5143 	ldhl	sp,	#3
      001315 3A                    5144 	ld	a, (hl-)
      001316 B6                    5145 	or	a, (hl)
      001317 28 0F                 5146 	jr	Z, 00118$
      001319 2B                    5147 	dec	hl
      00131A 3A                    5148 	ld	a, (hl-)
      00131B B6                    5149 	or	a, (hl)
      00131C 28 0A                 5150 	jr	Z, 00118$
                                   5151 ;src/main.c:249: xDir = 1;
      00131E 21r0Er01              5152 	ld	hl, #_xDir
      001321 36 01                 5153 	ld	(hl), #0x01
                                   5154 ;src/main.c:250: yDir = -1;
      001323 21r0Fr01              5155 	ld	hl, #_yDir
      001326 36 FF                 5156 	ld	(hl), #0xff
      001328                       5157 00118$:
                                   5158 ;src/main.c:252: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      001328 F8 03                 5159 	ldhl	sp,	#3
      00132A 3A                    5160 	ld	a, (hl-)
      00132B B6                    5161 	or	a, (hl)
      00132C 28 0E                 5162 	jr	Z, 00121$
      00132E 7A                    5163 	ld	a, d
      00132F B3                    5164 	or	a, e
      001330 28 0A                 5165 	jr	Z, 00121$
                                   5166 ;src/main.c:253: xDir = -1;
      001332 21r0Er01              5167 	ld	hl, #_xDir
      001335 36 FF                 5168 	ld	(hl), #0xff
                                   5169 ;src/main.c:254: yDir = -1;
      001337 21r0Fr01              5170 	ld	hl, #_yDir
      00133A 36 FF                 5171 	ld	(hl), #0xff
      00133C                       5172 00121$:
                                   5173 ;src/main.c:256: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      00133C 78                    5174 	ld	a, b
      00133D B1                    5175 	or	a, c
      00133E 28 10                 5176 	jr	Z, 00124$
      001340 F8 01                 5177 	ldhl	sp,	#1
      001342 3A                    5178 	ld	a, (hl-)
      001343 B6                    5179 	or	a, (hl)
      001344 28 0A                 5180 	jr	Z, 00124$
                                   5181 ;src/main.c:257: xDir = 1;
      001346 21r0Er01              5182 	ld	hl, #_xDir
      001349 36 01                 5183 	ld	(hl), #0x01
                                   5184 ;src/main.c:258: yDir = 1;
      00134B 21r0Fr01              5185 	ld	hl, #_yDir
      00134E 36 01                 5186 	ld	(hl), #0x01
      001350                       5187 00124$:
                                   5188 ;src/main.c:260: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      001350 78                    5189 	ld	a, b
      001351 B1                    5190 	or	a, c
      001352 28 0E                 5191 	jr	Z, 00127$
      001354 7A                    5192 	ld	a, d
      001355 B3                    5193 	or	a, e
      001356 28 0A                 5194 	jr	Z, 00127$
                                   5195 ;src/main.c:261: xDir = -1;
      001358 21r0Er01              5196 	ld	hl, #_xDir
      00135B 36 FF                 5197 	ld	(hl), #0xff
                                   5198 ;src/main.c:262: yDir = 1;
      00135D 21r0Fr01              5199 	ld	hl, #_yDir
      001360 36 01                 5200 	ld	(hl), #0x01
      001362                       5201 00127$:
                                   5202 ;src/main.c:267: if (xDir == 0 && yDir == 0) {
      001362 FAr0Er01              5203 	ld	a, (#_xDir)
      001365 B7                    5204 	or	a, a
      001366 20 07                 5205 	jr	NZ, 00130$
      001368 FAr0Fr01              5206 	ld	a, (#_yDir)
      00136B B7                    5207 	or	a, a
                                   5208 ;src/main.c:268: return;
      00136C CArB3r14              5209 	jp	Z,00194$
      00136F                       5210 00130$:
                                   5211 ;src/main.c:300: if (auxTick == 0) {
      00136F FAr3Cr01              5212 	ld	a, (#_auxTick)
      001372 B7                    5213 	or	a, a
      001373 C2rB3r14              5214 	jp	NZ, 00194$
                                   5215 ;src/main.c:301: if (xDir == 0 && yDir > 0) {
      001376 21r0Fr01              5216 	ld	hl, #_yDir
      001379 5E                    5217 	ld	e, (hl)
      00137A AF                    5218 	xor	a, a
      00137B 57                    5219 	ld	d, a
      00137C 96                    5220 	sub	a, (hl)
      00137D CB 7B                 5221 	bit	7, e
      00137F 28 07                 5222 	jr	Z, 00381$
      001381 CB 7A                 5223 	bit	7, d
      001383 20 08                 5224 	jr	NZ, 00382$
      001385 BF                    5225 	cp	a, a
      001386 18 05                 5226 	jr	00382$
      001388                       5227 00381$:
      001388 CB 7A                 5228 	bit	7, d
      00138A 28 01                 5229 	jr	Z, 00382$
      00138C 37                    5230 	scf
      00138D                       5231 00382$:
      00138D 3E 00                 5232 	ld	a, #0x00
      00138F 17                    5233 	rla
      001390 4F                    5234 	ld	c, a
      001391 FAr0Er01              5235 	ld	a, (#_xDir)
      001394 B7                    5236 	or	a,a
      001395 20 1A                 5237 	jr	NZ, 00157$
      001397 B1                    5238 	or	a,c
      001398 28 17                 5239 	jr	Z, 00157$
                                   5240 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00139A 21r02r00              5241 	ld	hl, #(_shadow_OAM + 2)
      00139D 36 00                 5242 	ld	(hl), #0x00
      00139F 21r06r00              5243 	ld	hl, #(_shadow_OAM + 6)
      0013A2 36 02                 5244 	ld	(hl), #0x02
                                   5245 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0013A4 21r03r00              5246 	ld	hl, #(_shadow_OAM + 3)
      0013A7 36 40                 5247 	ld	(hl), #0x40
      0013A9 21r07r00              5248 	ld	hl, #(_shadow_OAM + 7)
      0013AC 36 40                 5249 	ld	(hl), #0x40
                                   5250 ;src/main.c:305: set_sprite_prop(1, S_FLIPY); 
      0013AE C3rB3r14              5251 	jp	00194$
      0013B1                       5252 00157$:
                                   5253 ;src/main.c:307: else if (xDir == 0 && yDir < 0) {
      0013B1 FAr0Fr01              5254 	ld	a, (#_yDir)
      0013B4 07                    5255 	rlca
      0013B5 E6 01                 5256 	and	a,#0x01
      0013B7 F8 02                 5257 	ldhl	sp,	#2
      0013B9 77                    5258 	ld	(hl), a
      0013BA FAr0Er01              5259 	ld	a, (#_xDir)
      0013BD B7                    5260 	or	a, a
      0013BE 20 1D                 5261 	jr	NZ, 00153$
      0013C0 F8 02                 5262 	ldhl	sp,	#2
      0013C2 7E                    5263 	ld	a, (hl)
      0013C3 B7                    5264 	or	a, a
      0013C4 28 17                 5265 	jr	Z, 00153$
                                   5266 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013C6 21r02r00              5267 	ld	hl, #(_shadow_OAM + 2)
      0013C9 36 00                 5268 	ld	(hl), #0x00
      0013CB 21r06r00              5269 	ld	hl, #(_shadow_OAM + 6)
      0013CE 36 02                 5270 	ld	(hl), #0x02
                                   5271 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0013D0 21r03r00              5272 	ld	hl, #(_shadow_OAM + 3)
      0013D3 36 00                 5273 	ld	(hl), #0x00
      0013D5 21r07r00              5274 	ld	hl, #(_shadow_OAM + 7)
      0013D8 36 00                 5275 	ld	(hl), #0x00
                                   5276 ;src/main.c:311: set_sprite_prop(1, 0); 
      0013DA C3rB3r14              5277 	jp	00194$
      0013DD                       5278 00153$:
                                   5279 ;src/main.c:313: else if (xDir > 0 && yDir == 0) {
      0013DD 21r0Er01              5280 	ld	hl, #_xDir
      0013E0 5E                    5281 	ld	e, (hl)
      0013E1 AF                    5282 	xor	a, a
      0013E2 57                    5283 	ld	d, a
      0013E3 96                    5284 	sub	a, (hl)
      0013E4 CB 7B                 5285 	bit	7, e
      0013E6 28 07                 5286 	jr	Z, 00383$
      0013E8 CB 7A                 5287 	bit	7, d
      0013EA 20 08                 5288 	jr	NZ, 00384$
      0013EC BF                    5289 	cp	a, a
      0013ED 18 05                 5290 	jr	00384$
      0013EF                       5291 00383$:
      0013EF CB 7A                 5292 	bit	7, d
      0013F1 28 01                 5293 	jr	Z, 00384$
      0013F3 37                    5294 	scf
      0013F4                       5295 00384$:
      0013F4 3E 00                 5296 	ld	a, #0x00
      0013F6 17                    5297 	rla
      0013F7 47                    5298 	ld	b, a
      0013F8 B7                    5299 	or	a, a
      0013F9 28 1D                 5300 	jr	Z, 00149$
      0013FB FAr0Fr01              5301 	ld	a, (#_yDir)
      0013FE B7                    5302 	or	a, a
      0013FF 20 17                 5303 	jr	NZ, 00149$
                                   5304 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001401 21r02r00              5305 	ld	hl, #(_shadow_OAM + 2)
      001404 36 04                 5306 	ld	(hl), #0x04
      001406 21r06r00              5307 	ld	hl, #(_shadow_OAM + 6)
      001409 36 06                 5308 	ld	(hl), #0x06
                                   5309 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00140B 21r03r00              5310 	ld	hl, #(_shadow_OAM + 3)
      00140E 36 00                 5311 	ld	(hl), #0x00
      001410 21r07r00              5312 	ld	hl, #(_shadow_OAM + 7)
      001413 36 00                 5313 	ld	(hl), #0x00
                                   5314 ;src/main.c:317: set_sprite_prop(1, 0); 
      001415 C3rB3r14              5315 	jp	00194$
      001418                       5316 00149$:
                                   5317 ;src/main.c:319: else if (xDir < 0 && yDir == 0) {
      001418 FAr0Er01              5318 	ld	a, (#_xDir)
      00141B 07                    5319 	rlca
      00141C E6 01                 5320 	and	a,#0x01
      00141E F8 03                 5321 	ldhl	sp,	#3
      001420 77                    5322 	ld	(hl), a
      001421 7E                    5323 	ld	a, (hl)
      001422 B7                    5324 	or	a, a
      001423 28 1C                 5325 	jr	Z, 00145$
      001425 FAr0Fr01              5326 	ld	a, (#_yDir)
      001428 B7                    5327 	or	a, a
      001429 20 16                 5328 	jr	NZ, 00145$
                                   5329 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00142B 21r02r00              5330 	ld	hl, #(_shadow_OAM + 2)
      00142E 36 04                 5331 	ld	(hl), #0x04
      001430 21r06r00              5332 	ld	hl, #(_shadow_OAM + 6)
      001433 36 06                 5333 	ld	(hl), #0x06
                                   5334 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001435 21r03r00              5335 	ld	hl, #(_shadow_OAM + 3)
      001438 36 20                 5336 	ld	(hl), #0x20
      00143A 21r07r00              5337 	ld	hl, #(_shadow_OAM + 7)
      00143D 36 20                 5338 	ld	(hl), #0x20
                                   5339 ;src/main.c:323: set_sprite_prop(1, S_FLIPX); 
      00143F 18 72                 5340 	jr	00194$
      001441                       5341 00145$:
                                   5342 ;src/main.c:325: else if (xDir > 0 && yDir < 0) {
      001441 78                    5343 	ld	a, b
      001442 B7                    5344 	or	a, a
      001443 28 1C                 5345 	jr	Z, 00141$
      001445 F8 02                 5346 	ldhl	sp,	#2
      001447 7E                    5347 	ld	a, (hl)
      001448 B7                    5348 	or	a, a
      001449 28 16                 5349 	jr	Z, 00141$
                                   5350 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00144B 21r02r00              5351 	ld	hl, #(_shadow_OAM + 2)
      00144E 36 08                 5352 	ld	(hl), #0x08
      001450 21r06r00              5353 	ld	hl, #(_shadow_OAM + 6)
      001453 36 0A                 5354 	ld	(hl), #0x0a
                                   5355 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001455 21r03r00              5356 	ld	hl, #(_shadow_OAM + 3)
      001458 36 00                 5357 	ld	(hl), #0x00
      00145A 21r07r00              5358 	ld	hl, #(_shadow_OAM + 7)
      00145D 36 00                 5359 	ld	(hl), #0x00
                                   5360 ;src/main.c:329: set_sprite_prop(1, 0); 
      00145F 18 52                 5361 	jr	00194$
      001461                       5362 00141$:
                                   5363 ;src/main.c:331: else if (xDir > 0 && yDir > 0) {
      001461 78                    5364 	ld	a, b
      001462 B7                    5365 	or	a, a
      001463 28 1A                 5366 	jr	Z, 00137$
      001465 79                    5367 	ld	a, c
      001466 B7                    5368 	or	a, a
      001467 28 16                 5369 	jr	Z, 00137$
                                   5370 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001469 21r02r00              5371 	ld	hl, #(_shadow_OAM + 2)
      00146C 36 08                 5372 	ld	(hl), #0x08
      00146E 21r06r00              5373 	ld	hl, #(_shadow_OAM + 6)
      001471 36 0A                 5374 	ld	(hl), #0x0a
                                   5375 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001473 21r03r00              5376 	ld	hl, #(_shadow_OAM + 3)
      001476 36 40                 5377 	ld	(hl), #0x40
      001478 21r07r00              5378 	ld	hl, #(_shadow_OAM + 7)
      00147B 36 40                 5379 	ld	(hl), #0x40
                                   5380 ;src/main.c:335: set_sprite_prop(1, S_FLIPY); 
      00147D 18 34                 5381 	jr	00194$
      00147F                       5382 00137$:
                                   5383 ;src/main.c:337: else if (xDir < 0 && yDir > 0) {
      00147F F8 03                 5384 	ldhl	sp,	#3
      001481 7E                    5385 	ld	a, (hl)
      001482 B7                    5386 	or	a, a
      001483 28 1A                 5387 	jr	Z, 00133$
      001485 79                    5388 	ld	a, c
      001486 B7                    5389 	or	a, a
      001487 28 16                 5390 	jr	Z, 00133$
                                   5391 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001489 21r02r00              5392 	ld	hl, #(_shadow_OAM + 2)
      00148C 36 08                 5393 	ld	(hl), #0x08
      00148E 21r06r00              5394 	ld	hl, #(_shadow_OAM + 6)
      001491 36 0A                 5395 	ld	(hl), #0x0a
                                   5396 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001493 21r03r00              5397 	ld	hl, #(_shadow_OAM + 3)
      001496 36 60                 5398 	ld	(hl), #0x60
      001498 21r07r00              5399 	ld	hl, #(_shadow_OAM + 7)
      00149B 36 60                 5400 	ld	(hl), #0x60
                                   5401 ;src/main.c:341: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      00149D 18 14                 5402 	jr	00194$
      00149F                       5403 00133$:
                                   5404 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00149F 21r02r00              5405 	ld	hl, #(_shadow_OAM + 2)
      0014A2 36 08                 5406 	ld	(hl), #0x08
      0014A4 21r06r00              5407 	ld	hl, #(_shadow_OAM + 6)
      0014A7 36 0A                 5408 	ld	(hl), #0x0a
                                   5409 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0014A9 21r03r00              5410 	ld	hl, #(_shadow_OAM + 3)
      0014AC 36 20                 5411 	ld	(hl), #0x20
      0014AE 21r07r00              5412 	ld	hl, #(_shadow_OAM + 7)
      0014B1 36 20                 5413 	ld	(hl), #0x20
                                   5414 ;src/main.c:347: set_sprite_prop(1, S_FLIPX); 
      0014B3                       5415 00194$:
                                   5416 ;src/main.c:352: }
      0014B3 E8 04                 5417 	add	sp, #4
      0014B5 C9                    5418 	ret
                                   5419 ;src/main.c:386: void playSound(uint8_t type) {
                                   5420 ;	---------------------------------
                                   5421 ; Function playSound
                                   5422 ; ---------------------------------
      0014B6                       5423 _playSound::
                                   5424 ;src/main.c:387: if (type == 20) { //singlegun
      0014B6 F8 02                 5425 	ldhl	sp,	#2
      0014B8 7E                    5426 	ld	a, (hl)
      0014B9 D6 14                 5427 	sub	a, #0x14
      0014BB 20 13                 5428 	jr	NZ, 00102$
                                   5429 ;src/main.c:388: NR10_REG = 0x00;
      0014BD AF                    5430 	xor	a, a
      0014BE E0r00                 5431 	ldh	(_NR10_REG + 0), a
                                   5432 ;src/main.c:389: NR11_REG = 0x81;
      0014C0 3E 81                 5433 	ld	a, #0x81
      0014C2 E0r00                 5434 	ldh	(_NR11_REG + 0), a
                                   5435 ;src/main.c:390: NR12_REG = 0x43;
      0014C4 3E 43                 5436 	ld	a, #0x43
      0014C6 E0r00                 5437 	ldh	(_NR12_REG + 0), a
                                   5438 ;src/main.c:391: NR13_REG = 0X00;//0x6D;
      0014C8 AF                    5439 	xor	a, a
      0014C9 E0r00                 5440 	ldh	(_NR13_REG + 0), a
                                   5441 ;src/main.c:392: NR14_REG = 0x86;
      0014CB 3E 86                 5442 	ld	a, #0x86
      0014CD E0r00                 5443 	ldh	(_NR14_REG + 0), a
                                   5444 ;src/main.c:393: return;
      0014CF C9                    5445 	ret
      0014D0                       5446 00102$:
                                   5447 ;src/main.c:395: if (type == 23) {
      0014D0 F8 02                 5448 	ldhl	sp,	#2
      0014D2 7E                    5449 	ld	a, (hl)
      0014D3 D6 17                 5450 	sub	a, #0x17
      0014D5 20 12                 5451 	jr	NZ, 00104$
                                   5452 ;src/main.c:396: NR10_REG = 0x00;
      0014D7 AF                    5453 	xor	a, a
      0014D8 E0r00                 5454 	ldh	(_NR10_REG + 0), a
                                   5455 ;src/main.c:397: NR11_REG = 0x81;
      0014DA 3E 81                 5456 	ld	a, #0x81
      0014DC E0r00                 5457 	ldh	(_NR11_REG + 0), a
                                   5458 ;src/main.c:398: NR12_REG = 0x53;
      0014DE 3E 53                 5459 	ld	a, #0x53
      0014E0 E0r00                 5460 	ldh	(_NR12_REG + 0), a
                                   5461 ;src/main.c:399: NR13_REG = 0X00;//0x6D;
      0014E2 AF                    5462 	xor	a, a
      0014E3 E0r00                 5463 	ldh	(_NR13_REG + 0), a
                                   5464 ;src/main.c:400: NR14_REG = 0x86;
      0014E5 3E 86                 5465 	ld	a, #0x86
      0014E7 E0r00                 5466 	ldh	(_NR14_REG + 0), a
      0014E9                       5467 00104$:
                                   5468 ;src/main.c:402: if (type == 26) {
      0014E9 F8 02                 5469 	ldhl	sp,	#2
      0014EB 7E                    5470 	ld	a, (hl)
      0014EC D6 1A                 5471 	sub	a, #0x1a
      0014EE 20 13                 5472 	jr	NZ, 00106$
                                   5473 ;src/main.c:403: NR10_REG = 0x00;
      0014F0 AF                    5474 	xor	a, a
      0014F1 E0r00                 5475 	ldh	(_NR10_REG + 0), a
                                   5476 ;src/main.c:404: NR11_REG = 0x89;
      0014F3 3E 89                 5477 	ld	a, #0x89
      0014F5 E0r00                 5478 	ldh	(_NR11_REG + 0), a
                                   5479 ;src/main.c:405: NR12_REG = 0x55;
      0014F7 3E 55                 5480 	ld	a, #0x55
      0014F9 E0r00                 5481 	ldh	(_NR12_REG + 0), a
                                   5482 ;src/main.c:406: NR13_REG = 0x70;//0Xbe;//0x6D;
      0014FB 3E 70                 5483 	ld	a, #0x70
      0014FD E0r00                 5484 	ldh	(_NR13_REG + 0), a
                                   5485 ;src/main.c:407: NR14_REG = 0x84;
      0014FF 3E 84                 5486 	ld	a, #0x84
      001501 E0r00                 5487 	ldh	(_NR14_REG + 0), a
      001503                       5488 00106$:
                                   5489 ;src/main.c:409: if (type == 0) {  // explosion
      001503 F8 02                 5490 	ldhl	sp,	#2
      001505 7E                    5491 	ld	a, (hl)
      001506 B7                    5492 	or	a, a
      001507 C0                    5493 	ret	NZ
                                   5494 ;src/main.c:410: NR41_REG = 0x20;  
      001508 3E 20                 5495 	ld	a, #0x20
      00150A E0r00                 5496 	ldh	(_NR41_REG + 0), a
                                   5497 ;src/main.c:411: NR42_REG = 0xa2;//0xa3;  
      00150C 3E A2                 5498 	ld	a, #0xa2
      00150E E0r00                 5499 	ldh	(_NR42_REG + 0), a
                                   5500 ;src/main.c:412: NR43_REG = 0x57;  
      001510 3E 57                 5501 	ld	a, #0x57
      001512 E0r00                 5502 	ldh	(_NR43_REG + 0), a
                                   5503 ;src/main.c:413: NR44_REG = 0x80;  
      001514 3E 80                 5504 	ld	a, #0x80
      001516 E0r00                 5505 	ldh	(_NR44_REG + 0), a
                                   5506 ;src/main.c:419: }
      001518 C9                    5507 	ret
                                   5508 ;src/main.c:421: void initEnemies(uint8_t loadSprites) {
                                   5509 ;	---------------------------------
                                   5510 ; Function initEnemies
                                   5511 ; ---------------------------------
      001519                       5512 _initEnemies::
      001519 E8 F9                 5513 	add	sp, #-7
                                   5514 ;src/main.c:423: if (loadSprites) {
      00151B F8 09                 5515 	ldhl	sp,	#9
      00151D 7E                    5516 	ld	a, (hl)
      00151E B7                    5517 	or	a, a
      00151F 28 1A                 5518 	jr	Z, 00102$
                                   5519 ;src/main.c:425: set_sprite_data(0x40, 5, enemy1);
      001521 11r18r0A              5520 	ld	de, #_enemy1
      001524 D5                    5521 	push	de
      001525 21 40 05              5522 	ld	hl, #0x540
      001528 E5                    5523 	push	hl
      001529 CDr00r00              5524 	call	_set_sprite_data
      00152C E8 04                 5525 	add	sp, #4
                                   5526 ;src/main.c:426: set_sprite_data(0x50, 8, largeenemies);
      00152E 11r68r0A              5527 	ld	de, #_largeenemies
      001531 D5                    5528 	push	de
      001532 21 50 08              5529 	ld	hl, #0x850
      001535 E5                    5530 	push	hl
      001536 CDr00r00              5531 	call	_set_sprite_data
      001539 E8 04                 5532 	add	sp, #4
      00153B                       5533 00102$:
                                   5534 ;src/main.c:429: struct Enemy *eptr = enemies;
      00153B 01r5Ar00              5535 	ld	bc, #_enemies+0
                                   5536 ;src/main.c:431: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00153E F8 06                 5537 	ldhl	sp,	#6
      001540 36 00                 5538 	ld	(hl), #0x00
      001542                       5539 00116$:
      001542 21rAEr10              5540 	ld	hl, #_ENEMYCOUNT
      001545 5E                    5541 	ld	e, (hl)
      001546 F8 06                 5542 	ldhl	sp,	#6
      001548 7E                    5543 	ld	a, (hl)
      001549 93                    5544 	sub	a, e
      00154A D2r81r16              5545 	jp	NC, 00118$
                                   5546 ;src/main.c:432: if (eptr->alive == 0) {
      00154D 21 09 00              5547 	ld	hl, #0x0009
      001550 09                    5548 	add	hl, bc
      001551 7E                    5549 	ld	a, (hl)
      001552 B7                    5550 	or	a, a
      001553 C2r75r16              5551 	jp	NZ, 00107$
                                   5552 ;src/main.c:434: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001556 C5                    5553 	push	bc
      001557 CDr00r00              5554 	call	_rand
      00155A 7B                    5555 	ld	a, e
      00155B C1                    5556 	pop	bc
      00155C 21r17r0A              5557 	ld	hl, #_enemyOptionCount
      00155F 56                    5558 	ld	d, (hl)
      001560 C5                    5559 	push	bc
      001561 D5                    5560 	push	de
      001562 33                    5561 	inc	sp
      001563 F5                    5562 	push	af
      001564 33                    5563 	inc	sp
      001565 CDr00r00              5564 	call	__moduchar
      001568 E1                    5565 	pop	hl
      001569 7B                    5566 	ld	a, e
      00156A C1                    5567 	pop	bc
                                   5568 ;src/main.c:436: (*eptr) = enemyOptions[enemyInd];
      00156B 5F                    5569 	ld	e, a
      00156C 16 00                 5570 	ld	d, #0x00
      00156E 6B                    5571 	ld	l, e
      00156F 62                    5572 	ld	h, d
      001570 29                    5573 	add	hl, hl
      001571 29                    5574 	add	hl, hl
      001572 29                    5575 	add	hl, hl
      001573 19                    5576 	add	hl, de
      001574 29                    5577 	add	hl, hl
      001575 11r00r00              5578 	ld	de, #_enemyOptions
      001578 19                    5579 	add	hl, de
      001579 59                    5580 	ld	e, c
      00157A 50                    5581 	ld	d, b
      00157B C5                    5582 	push	bc
      00157C 01 12 00              5583 	ld	bc, #0x12
      00157F C5                    5584 	push	bc
      001580 E5                    5585 	push	hl
      001581 D5                    5586 	push	de
      001582 CDr00r00              5587 	call	___memcpy
      001585 E8 06                 5588 	add	sp, #6
      001587 CDr00r00              5589 	call	_rand
      00158A 7B                    5590 	ld	a, e
      00158B C1                    5591 	pop	bc
      00158C E6 07                 5592 	and	a, #0x07
      00158E F8 05                 5593 	ldhl	sp,	#5
      001590 77                    5594 	ld	(hl), a
                                   5595 ;src/main.c:439: eptr->x = xSpawnPositions[posIndex];
      001591 11rAFr10              5596 	ld	de, #_xSpawnPositions
      001594 6E                    5597 	ld	l, (hl)
      001595 26 00                 5598 	ld	h, #0x00
      001597 19                    5599 	add	hl, de
      001598 5D                    5600 	ld	e, l
      001599 54                    5601 	ld	d, h
      00159A 1A                    5602 	ld	a, (de)
      00159B 5F                    5603 	ld	e, a
      00159C 16 00                 5604 	ld	d, #0x00
      00159E 69                    5605 	ld	l, c
      00159F 60                    5606 	ld	h, b
      0015A0 7B                    5607 	ld	a, e
      0015A1 22                    5608 	ld	(hl+), a
      0015A2 72                    5609 	ld	(hl), d
                                   5610 ;src/main.c:440: eptr->y = ySpawnPositions[posIndex];
      0015A3 21 02 00              5611 	ld	hl, #0x0002
      0015A6 09                    5612 	add	hl, bc
      0015A7 33                    5613 	inc	sp
      0015A8 33                    5614 	inc	sp
      0015A9 E5                    5615 	push	hl
      0015AA 11rB7r10              5616 	ld	de, #_ySpawnPositions
      0015AD F8 05                 5617 	ldhl	sp,	#5
      0015AF 6E                    5618 	ld	l, (hl)
      0015B0 26 00                 5619 	ld	h, #0x00
      0015B2 19                    5620 	add	hl, de
      0015B3 5D                    5621 	ld	e, l
      0015B4 54                    5622 	ld	d, h
      0015B5 1A                    5623 	ld	a, (de)
      0015B6 F8 04                 5624 	ldhl	sp,	#4
      0015B8 22                    5625 	ld	(hl+), a
      0015B9 AF                    5626 	xor	a, a
      0015BA 32                    5627 	ld	(hl-), a
      0015BB D1                    5628 	pop	de
      0015BC D5                    5629 	push	de
      0015BD 2A                    5630 	ld	a, (hl+)
      0015BE 12                    5631 	ld	(de), a
      0015BF 13                    5632 	inc	de
      0015C0 7E                    5633 	ld	a, (hl)
      0015C1 12                    5634 	ld	(de), a
                                   5635 ;src/main.c:442: if (eptr->spriteCount == 1) {
      0015C2 21 08 00              5636 	ld	hl, #0x0008
      0015C5 09                    5637 	add	hl, bc
      0015C6 7E                    5638 	ld	a, (hl)
      0015C7 F8 05                 5639 	ldhl	sp,	#5
      0015C9 77                    5640 	ld	(hl), a
                                   5641 ;src/main.c:443: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0015CA 21 06 00              5642 	ld	hl, #0x0006
      0015CD 09                    5643 	add	hl, bc
      0015CE 5D                    5644 	ld	e, l
      0015CF 54                    5645 	ld	d, h
      0015D0 F8 06                 5646 	ldhl	sp,	#6
      0015D2 6E                    5647 	ld	l, (hl)
                                   5648 ;	spillPairReg hl
                                   5649 ;	spillPairReg hl
      0015D3 1A                    5650 	ld	a, (de)
      0015D4 5F                    5651 	ld	e, a
      0015D5 7D                    5652 	ld	a, l
      0015D6 87                    5653 	add	a, a
      0015D7 F8 02                 5654 	ldhl	sp,	#2
      0015D9 77                    5655 	ld	(hl), a
      0015DA 2A                    5656 	ld	a, (hl+)
      0015DB C6 0A                 5657 	add	a, #0x0a
                                   5658 ;src/main.c:442: if (eptr->spriteCount == 1) {
      0015DD 22                    5659 	ld	(hl+), a
      0015DE 23                    5660 	inc	hl
      0015DF 7E                    5661 	ld	a, (hl)
      0015E0 3D                    5662 	dec	a
      0015E1 20 2D                 5663 	jr	NZ, 00104$
                                   5664 ;src/main.c:443: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0015E3 F8 03                 5665 	ldhl	sp,	#3
      0015E5 56                    5666 	ld	d, (hl)
                                   5667 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0015E6 6A                    5668 	ld	l, d
                                   5669 ;	spillPairReg hl
                                   5670 ;	spillPairReg hl
      0015E7 26 00                 5671 	ld	h, #0x00
                                   5672 ;	spillPairReg hl
                                   5673 ;	spillPairReg hl
      0015E9 29                    5674 	add	hl, hl
      0015EA 29                    5675 	add	hl, hl
      0015EB D5                    5676 	push	de
      0015EC 11r00r00              5677 	ld	de, #_shadow_OAM
      0015EF 19                    5678 	add	hl, de
      0015F0 23                    5679 	inc	hl
      0015F1 23                    5680 	inc	hl
      0015F2 D1                    5681 	pop	de
      0015F3 73                    5682 	ld	(hl), e
                                   5683 ;src/main.c:444: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0015F4 D1                    5684 	pop	de
      0015F5 D5                    5685 	push	de
      0015F6 1A                    5686 	ld	a, (de)
      0015F7 F8 05                 5687 	ldhl	sp,	#5
      0015F9 32                    5688 	ld	(hl-), a
      0015FA 0A                    5689 	ld	a, (bc)
      0015FB 32                    5690 	ld	(hl-), a
                                   5691 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0015FC 6E                    5692 	ld	l, (hl)
                                   5693 ;	spillPairReg hl
                                   5694 ;	spillPairReg hl
      0015FD 26 00                 5695 	ld	h, #0x00
                                   5696 ;	spillPairReg hl
                                   5697 ;	spillPairReg hl
      0015FF 29                    5698 	add	hl, hl
      001600 29                    5699 	add	hl, hl
      001601 11r00r00              5700 	ld	de, #_shadow_OAM
      001604 19                    5701 	add	hl, de
      001605 5D                    5702 	ld	e, l
      001606 54                    5703 	ld	d, h
                                   5704 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001607 F8 05                 5705 	ldhl	sp,	#5
      001609 3A                    5706 	ld	a, (hl-)
      00160A 12                    5707 	ld	(de), a
      00160B 13                    5708 	inc	de
      00160C 7E                    5709 	ld	a, (hl)
      00160D 12                    5710 	ld	(de), a
                                   5711 ;src/main.c:444: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      00160E 18 65                 5712 	jr	00107$
      001610                       5713 00104$:
                                   5714 ;src/main.c:447: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      001610 F8 03                 5715 	ldhl	sp,	#3
      001612 56                    5716 	ld	d, (hl)
                                   5717 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001613 6A                    5718 	ld	l, d
                                   5719 ;	spillPairReg hl
                                   5720 ;	spillPairReg hl
      001614 26 00                 5721 	ld	h, #0x00
                                   5722 ;	spillPairReg hl
                                   5723 ;	spillPairReg hl
      001616 29                    5724 	add	hl, hl
      001617 29                    5725 	add	hl, hl
      001618 D5                    5726 	push	de
      001619 11r00r00              5727 	ld	de, #_shadow_OAM
      00161C 19                    5728 	add	hl, de
      00161D 23                    5729 	inc	hl
      00161E 23                    5730 	inc	hl
      00161F D1                    5731 	pop	de
      001620 73                    5732 	ld	(hl), e
                                   5733 ;src/main.c:448: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001621 D1                    5734 	pop	de
      001622 D5                    5735 	push	de
      001623 1A                    5736 	ld	a, (de)
      001624 F8 04                 5737 	ldhl	sp,	#4
      001626 22                    5738 	ld	(hl+), a
      001627 0A                    5739 	ld	a, (bc)
      001628 32                    5740 	ld	(hl-), a
      001629 2B                    5741 	dec	hl
      00162A 5E                    5742 	ld	e, (hl)
                                   5743 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00162B 26 00                 5744 	ld	h, #0x00
                                   5745 ;	spillPairReg hl
                                   5746 ;	spillPairReg hl
      00162D 6B                    5747 	ld	l, e
      00162E 29                    5748 	add	hl, hl
      00162F 29                    5749 	add	hl, hl
      001630 11r00r00              5750 	ld	de, #_shadow_OAM
      001633 19                    5751 	add	hl, de
      001634 5D                    5752 	ld	e, l
      001635 54                    5753 	ld	d, h
                                   5754 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001636 F8 04                 5755 	ldhl	sp,	#4
      001638 2A                    5756 	ld	a, (hl+)
      001639 12                    5757 	ld	(de), a
      00163A 13                    5758 	inc	de
      00163B 7E                    5759 	ld	a, (hl)
      00163C 12                    5760 	ld	(de), a
                                   5761 ;src/main.c:450: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      00163D 21 07 00              5762 	ld	hl, #0x0007
      001640 09                    5763 	add	hl, bc
      001641 5E                    5764 	ld	e, (hl)
      001642 F8 02                 5765 	ldhl	sp,	#2
      001644 7E                    5766 	ld	a, (hl)
      001645 C6 0B                 5767 	add	a, #0x0b
      001647 F8 05                 5768 	ldhl	sp,	#5
      001649 77                    5769 	ld	(hl), a
      00164A 56                    5770 	ld	d, (hl)
                                   5771 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00164B 6A                    5772 	ld	l, d
                                   5773 ;	spillPairReg hl
                                   5774 ;	spillPairReg hl
      00164C 26 00                 5775 	ld	h, #0x00
                                   5776 ;	spillPairReg hl
                                   5777 ;	spillPairReg hl
      00164E 29                    5778 	add	hl, hl
      00164F 29                    5779 	add	hl, hl
      001650 D5                    5780 	push	de
      001651 11r00r00              5781 	ld	de, #_shadow_OAM
      001654 19                    5782 	add	hl, de
      001655 23                    5783 	inc	hl
      001656 23                    5784 	inc	hl
      001657 D1                    5785 	pop	de
      001658 73                    5786 	ld	(hl), e
                                   5787 ;src/main.c:451: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001659 D1                    5788 	pop	de
      00165A D5                    5789 	push	de
      00165B 1A                    5790 	ld	a, (de)
      00165C F8 04                 5791 	ldhl	sp,	#4
      00165E 32                    5792 	ld	(hl-), a
      00165F 0A                    5793 	ld	a, (bc)
      001660 22                    5794 	ld	(hl+), a
      001661 23                    5795 	inc	hl
      001662 5E                    5796 	ld	e, (hl)
                                   5797 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001663 26 00                 5798 	ld	h, #0x00
                                   5799 ;	spillPairReg hl
                                   5800 ;	spillPairReg hl
      001665 6B                    5801 	ld	l, e
      001666 29                    5802 	add	hl, hl
      001667 29                    5803 	add	hl, hl
      001668 11r00r00              5804 	ld	de, #_shadow_OAM
      00166B 19                    5805 	add	hl, de
      00166C 5D                    5806 	ld	e, l
      00166D 54                    5807 	ld	d, h
                                   5808 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00166E F8 04                 5809 	ldhl	sp,	#4
      001670 3A                    5810 	ld	a, (hl-)
      001671 12                    5811 	ld	(de), a
      001672 13                    5812 	inc	de
      001673 7E                    5813 	ld	a, (hl)
      001674 12                    5814 	ld	(de), a
                                   5815 ;src/main.c:451: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001675                       5816 00107$:
                                   5817 ;src/main.c:456: eptr++;
      001675 21 12 00              5818 	ld	hl, #0x0012
      001678 09                    5819 	add	hl, bc
      001679 4D                    5820 	ld	c, l
      00167A 44                    5821 	ld	b, h
                                   5822 ;src/main.c:431: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00167B F8 06                 5823 	ldhl	sp,	#6
      00167D 34                    5824 	inc	(hl)
      00167E C3r42r15              5825 	jp	00116$
      001681                       5826 00118$:
                                   5827 ;src/main.c:459: }
      001681 E8 07                 5828 	add	sp, #7
      001683 C9                    5829 	ret
                                   5830 ;src/main.c:461: void initEnemy(uint8_t i) {
                                   5831 ;	---------------------------------
                                   5832 ; Function initEnemy
                                   5833 ; ---------------------------------
      001684                       5834 _initEnemy::
      001684 E8 FC                 5835 	add	sp, #-4
                                   5836 ;src/main.c:464: if (enemies[i].alive == 0) {
      001686 F8 06                 5837 	ldhl	sp,	#6
      001688 4E                    5838 	ld	c, (hl)
      001689 06 00                 5839 	ld	b, #0x00
      00168B 69                    5840 	ld	l, c
      00168C 60                    5841 	ld	h, b
      00168D 29                    5842 	add	hl, hl
      00168E 29                    5843 	add	hl, hl
      00168F 29                    5844 	add	hl, hl
      001690 09                    5845 	add	hl, bc
      001691 29                    5846 	add	hl, hl
      001692 01r5Ar00              5847 	ld	bc,#_enemies
      001695 09                    5848 	add	hl,bc
      001696 4D                    5849 	ld	c, l
      001697 44                    5850 	ld	b, h
      001698 21 09 00              5851 	ld	hl, #0x0009
      00169B 09                    5852 	add	hl, bc
      00169C 7E                    5853 	ld	a, (hl)
      00169D B7                    5854 	or	a, a
      00169E C2r65r17              5855 	jp	NZ, 00109$
                                   5856 ;src/main.c:466: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      0016A1 C5                    5857 	push	bc
      0016A2 CDr00r00              5858 	call	_rand
      0016A5 7B                    5859 	ld	a, e
      0016A6 C1                    5860 	pop	bc
      0016A7 21r17r0A              5861 	ld	hl, #_enemyOptionCount
      0016AA 56                    5862 	ld	d, (hl)
      0016AB C5                    5863 	push	bc
      0016AC D5                    5864 	push	de
      0016AD 33                    5865 	inc	sp
      0016AE F5                    5866 	push	af
      0016AF 33                    5867 	inc	sp
      0016B0 CDr00r00              5868 	call	__moduchar
      0016B3 E1                    5869 	pop	hl
      0016B4 C1                    5870 	pop	bc
      0016B5 F8 03                 5871 	ldhl	sp,	#3
      0016B7 73                    5872 	ld	(hl), e
                                   5873 ;src/main.c:467: enemies[i] = enemyOptions[enemyInd];
      0016B8 5E                    5874 	ld	e, (hl)
      0016B9 16 00                 5875 	ld	d, #0x00
      0016BB 6B                    5876 	ld	l, e
      0016BC 62                    5877 	ld	h, d
      0016BD 29                    5878 	add	hl, hl
      0016BE 29                    5879 	add	hl, hl
      0016BF 29                    5880 	add	hl, hl
      0016C0 19                    5881 	add	hl, de
      0016C1 29                    5882 	add	hl, hl
      0016C2 11r00r00              5883 	ld	de, #_enemyOptions
      0016C5 19                    5884 	add	hl, de
      0016C6 59                    5885 	ld	e, c
      0016C7 50                    5886 	ld	d, b
      0016C8 C5                    5887 	push	bc
      0016C9 01 12 00              5888 	ld	bc, #0x12
      0016CC C5                    5889 	push	bc
      0016CD E5                    5890 	push	hl
      0016CE D5                    5891 	push	de
      0016CF CDr00r00              5892 	call	___memcpy
      0016D2 E8 06                 5893 	add	sp, #6
      0016D4 CDr00r00              5894 	call	_rand
      0016D7 7B                    5895 	ld	a, e
      0016D8 C1                    5896 	pop	bc
      0016D9 E6 07                 5897 	and	a, #0x07
      0016DB F8 03                 5898 	ldhl	sp,	#3
      0016DD 77                    5899 	ld	(hl), a
                                   5900 ;src/main.c:470: enemies[i].x = xSpawnPositions[posIndex];
      0016DE 11rAFr10              5901 	ld	de, #_xSpawnPositions+0
      0016E1 6E                    5902 	ld	l, (hl)
      0016E2 26 00                 5903 	ld	h, #0x00
      0016E4 19                    5904 	add	hl, de
      0016E5 5D                    5905 	ld	e, l
      0016E6 54                    5906 	ld	d, h
      0016E7 1A                    5907 	ld	a, (de)
      0016E8 5F                    5908 	ld	e, a
      0016E9 16 00                 5909 	ld	d, #0x00
      0016EB 69                    5910 	ld	l, c
      0016EC 60                    5911 	ld	h, b
      0016ED 7B                    5912 	ld	a, e
      0016EE 22                    5913 	ld	(hl+), a
      0016EF 72                    5914 	ld	(hl), d
                                   5915 ;src/main.c:471: enemies[i].y = ySpawnPositions[posIndex];
      0016F0 21 02 00              5916 	ld	hl, #0x0002
      0016F3 09                    5917 	add	hl, bc
      0016F4 33                    5918 	inc	sp
      0016F5 33                    5919 	inc	sp
      0016F6 E5                    5920 	push	hl
      0016F7 11rB7r10              5921 	ld	de, #_ySpawnPositions+0
      0016FA F8 03                 5922 	ldhl	sp,	#3
      0016FC 6E                    5923 	ld	l, (hl)
      0016FD 26 00                 5924 	ld	h, #0x00
      0016FF 19                    5925 	add	hl, de
      001700 5D                    5926 	ld	e, l
      001701 54                    5927 	ld	d, h
      001702 1A                    5928 	ld	a, (de)
      001703 F8 02                 5929 	ldhl	sp,	#2
      001705 22                    5930 	ld	(hl+), a
      001706 AF                    5931 	xor	a, a
      001707 32                    5932 	ld	(hl-), a
      001708 D1                    5933 	pop	de
      001709 D5                    5934 	push	de
      00170A 2A                    5935 	ld	a, (hl+)
      00170B 12                    5936 	ld	(de), a
      00170C 13                    5937 	inc	de
      00170D 7E                    5938 	ld	a, (hl)
      00170E 12                    5939 	ld	(de), a
                                   5940 ;src/main.c:473: if (enemies[i].spriteCount == 1) {
      00170F 21 08 00              5941 	ld	hl, #0x0008
      001712 09                    5942 	add	hl, bc
      001713 7E                    5943 	ld	a, (hl)
      001714 F8 02                 5944 	ldhl	sp,	#2
      001716 77                    5945 	ld	(hl), a
                                   5946 ;src/main.c:474: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      001717 21 06 00              5947 	ld	hl, #0x0006
      00171A 09                    5948 	add	hl, bc
      00171B 5D                    5949 	ld	e, l
      00171C 54                    5950 	ld	d, h
      00171D F8 06                 5951 	ldhl	sp,	#6
      00171F 7E                    5952 	ld	a, (hl)
      001720 F5                    5953 	push	af
      001721 1A                    5954 	ld	a, (de)
      001722 5F                    5955 	ld	e, a
      001723 F1                    5956 	pop	af
      001724 87                    5957 	add	a, a
      001725 F8 03                 5958 	ldhl	sp,	#3
      001727 77                    5959 	ld	(hl), a
      001728 7E                    5960 	ld	a, (hl)
      001729 C6 0A                 5961 	add	a, #0x0a
      00172B 6F                    5962 	ld	l, a
                                   5963 ;	spillPairReg hl
                                   5964 ;	spillPairReg hl
                                   5965 ;src/main.c:473: if (enemies[i].spriteCount == 1) {
      00172C E5                    5966 	push	hl
      00172D F8 04                 5967 	ldhl	sp,	#4
      00172F 7E                    5968 	ld	a, (hl)
      001730 3D                    5969 	dec	a
      001731 E1                    5970 	pop	hl
      001732 20 0D                 5971 	jr	NZ, 00102$
                                   5972 ;src/main.c:474: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   5973 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
                                   5974 ;	spillPairReg hl
                                   5975 ;	spillPairReg hl
      001734 26 00                 5976 	ld	h, #0x00
                                   5977 ;	spillPairReg hl
                                   5978 ;	spillPairReg hl
      001736 29                    5979 	add	hl, hl
      001737 29                    5980 	add	hl, hl
      001738 01r00r00              5981 	ld	bc, #_shadow_OAM
      00173B 09                    5982 	add	hl, bc
      00173C 23                    5983 	inc	hl
      00173D 23                    5984 	inc	hl
      00173E 73                    5985 	ld	(hl), e
                                   5986 ;src/main.c:474: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      00173F 18 24                 5987 	jr	00109$
      001741                       5988 00102$:
                                   5989 ;src/main.c:478: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   5990 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001741 55                    5991 	ld	d,l
                                   5992 ;	spillPairReg hl
                                   5993 ;	spillPairReg hl
      001742 26 00                 5994 	ld	h, #0x00
                                   5995 ;	spillPairReg hl
                                   5996 ;	spillPairReg hl
      001744 29                    5997 	add	hl, hl
      001745 29                    5998 	add	hl, hl
      001746 D5                    5999 	push	de
      001747 11r00r00              6000 	ld	de, #_shadow_OAM
      00174A 19                    6001 	add	hl, de
      00174B 23                    6002 	inc	hl
      00174C 23                    6003 	inc	hl
      00174D D1                    6004 	pop	de
      00174E 73                    6005 	ld	(hl), e
                                   6006 ;src/main.c:481: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      00174F 21 07 00              6007 	ld	hl, #0x0007
      001752 09                    6008 	add	hl, bc
      001753 4E                    6009 	ld	c, (hl)
      001754 F8 03                 6010 	ldhl	sp,	#3
      001756 7E                    6011 	ld	a, (hl)
      001757 C6 0B                 6012 	add	a, #0x0b
                                   6013 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001759 6F                    6014 	ld	l, a
      00175A 11r00r00              6015 	ld	de, #_shadow_OAM+0
                                   6016 ;	spillPairReg hl
                                   6017 ;	spillPairReg hl
      00175D 26 00                 6018 	ld	h, #0x00
                                   6019 ;	spillPairReg hl
                                   6020 ;	spillPairReg hl
      00175F 29                    6021 	add	hl, hl
      001760 29                    6022 	add	hl, hl
      001761 19                    6023 	add	hl, de
      001762 23                    6024 	inc	hl
      001763 23                    6025 	inc	hl
      001764 71                    6026 	ld	(hl), c
                                   6027 ;src/main.c:481: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      001765                       6028 00109$:
                                   6029 ;src/main.c:490: }
      001765 E8 04                 6030 	add	sp, #4
      001767 C9                    6031 	ret
                                   6032 ;src/main.c:493: void updateEnemyPositions() {
                                   6033 ;	---------------------------------
                                   6034 ; Function updateEnemyPositions
                                   6035 ; ---------------------------------
      001768                       6036 _updateEnemyPositions::
      001768 E8 F0                 6037 	add	sp, #-16
                                   6038 ;src/main.c:496: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00176A F8 0F                 6039 	ldhl	sp,	#15
      00176C 36 00                 6040 	ld	(hl), #0x00
      00176E                       6041 00197$:
      00176E 21rAEr10              6042 	ld	hl, #_ENEMYCOUNT
      001771 4E                    6043 	ld	c, (hl)
      001772 F8 0F                 6044 	ldhl	sp,	#15
      001774 7E                    6045 	ld	a, (hl)
      001775 91                    6046 	sub	a, c
      001776 D2r90r1D              6047 	jp	NC, 00145$
                                   6048 ;src/main.c:497: if (!enemies[i].alive) {
      001779 4E                    6049 	ld	c, (hl)
      00177A 06 00                 6050 	ld	b, #0x00
      00177C 69                    6051 	ld	l, c
      00177D 60                    6052 	ld	h, b
      00177E 29                    6053 	add	hl, hl
      00177F 29                    6054 	add	hl, hl
      001780 29                    6055 	add	hl, hl
      001781 09                    6056 	add	hl, bc
      001782 29                    6057 	add	hl, hl
                                   6058 ;src/main.c:505: if (enemies[i].x < playerDrawX) {
      001783 01r5Ar00              6059 	ld	bc,#_enemies
      001786 09                    6060 	add	hl,bc
      001787 33                    6061 	inc	sp
      001788 33                    6062 	inc	sp
                                   6063 ;src/main.c:497: if (!enemies[i].alive) {
      001789 5D                    6064 	ld	e, l
      00178A 54                    6065 	ld	d, h
      00178B D5                    6066 	push	de
      00178C 21 09 00              6067 	ld	hl, #0x0009
      00178F 19                    6068 	add	hl, de
      001790 4D                    6069 	ld	c, l
      001791 44                    6070 	ld	b, h
      001792 0A                    6071 	ld	a, (bc)
      001793 B7                    6072 	or	a, a
      001794 CAr8Ar1D              6073 	jp	Z, 00144$
                                   6074 ;src/main.c:500: enemies[i].x -= xOverflow;
      001797 D1                    6075 	pop	de
      001798 D5                    6076 	push	de
      001799 1A                    6077 	ld	a, (de)
      00179A 4F                    6078 	ld	c, a
      00179B 13                    6079 	inc	de
      00179C 1A                    6080 	ld	a, (de)
      00179D 47                    6081 	ld	b, a
      00179E 21r1Er01              6082 	ld	hl, #_xOverflow
      0017A1 2A                    6083 	ld	a, (hl+)
      0017A2 5F                    6084 	ld	e, a
      0017A3 56                    6085 	ld	d, (hl)
      0017A4 79                    6086 	ld	a, c
      0017A5 93                    6087 	sub	a, e
      0017A6 5F                    6088 	ld	e, a
      0017A7 78                    6089 	ld	a, b
      0017A8 9A                    6090 	sbc	a, d
      0017A9 F8 0E                 6091 	ldhl	sp,	#14
      0017AB 32                    6092 	ld	(hl-), a
      0017AC 73                    6093 	ld	(hl), e
      0017AD D1                    6094 	pop	de
      0017AE D5                    6095 	push	de
      0017AF 2A                    6096 	ld	a, (hl+)
      0017B0 12                    6097 	ld	(de), a
      0017B1 13                    6098 	inc	de
      0017B2 7E                    6099 	ld	a, (hl)
      0017B3 12                    6100 	ld	(de), a
                                   6101 ;src/main.c:501: enemies[i].y -= yOverflow;
      0017B4 D1                    6102 	pop	de
      0017B5 D5                    6103 	push	de
      0017B6 21 02 00              6104 	ld	hl, #0x0002
      0017B9 19                    6105 	add	hl, de
      0017BA E5                    6106 	push	hl
      0017BB 7D                    6107 	ld	a, l
      0017BC F8 04                 6108 	ldhl	sp,	#4
      0017BE 77                    6109 	ld	(hl), a
      0017BF E1                    6110 	pop	hl
      0017C0 7C                    6111 	ld	a, h
      0017C1 F8 03                 6112 	ldhl	sp,	#3
      0017C3 32                    6113 	ld	(hl-), a
      0017C4 2A                    6114 	ld	a, (hl+)
      0017C5 5F                    6115 	ld	e, a
      0017C6 56                    6116 	ld	d, (hl)
      0017C7 1A                    6117 	ld	a, (de)
      0017C8 4F                    6118 	ld	c, a
      0017C9 13                    6119 	inc	de
      0017CA 1A                    6120 	ld	a, (de)
      0017CB 47                    6121 	ld	b, a
      0017CC 79                    6122 	ld	a, c
      0017CD 21r20r01              6123 	ld	hl, #_yOverflow
      0017D0 96                    6124 	sub	a, (hl)
      0017D1 23                    6125 	inc	hl
      0017D2 4F                    6126 	ld	c, a
      0017D3 78                    6127 	ld	a, b
      0017D4 9E                    6128 	sbc	a, (hl)
      0017D5 47                    6129 	ld	b, a
      0017D6 F8 02                 6130 	ldhl	sp,	#2
      0017D8 2A                    6131 	ld	a,	(hl+)
      0017D9 66                    6132 	ld	h, (hl)
      0017DA 6F                    6133 	ld	l, a
      0017DB 79                    6134 	ld	a, c
      0017DC 22                    6135 	ld	(hl+), a
      0017DD 70                    6136 	ld	(hl), b
                                   6137 ;src/main.c:504: if (abs(enemies[i].x - playerDrawX) > 8) {
      0017DE F8 0D                 6138 	ldhl	sp,	#13
      0017E0 7E                    6139 	ld	a, (hl)
      0017E1 21r16r01              6140 	ld	hl, #_playerDrawX
      0017E4 4E                    6141 	ld	c, (hl)
      0017E5 91                    6142 	sub	a, c
      0017E6 4F                    6143 	ld	c, a
                                   6144 ;src/main.c:376: if (value >= 0) return value;
      0017E7 CB 79                 6145 	bit	7, c
      0017E9 20 03                 6146 	jr	NZ, 00170$
      0017EB 41                    6147 	ld	b, c
      0017EC 18 03                 6148 	jr	00172$
      0017EE                       6149 00170$:
                                   6150 ;src/main.c:377: else return - value;
      0017EE AF                    6151 	xor	a, a
      0017EF 91                    6152 	sub	a, c
      0017F0 47                    6153 	ld	b, a
                                   6154 ;src/main.c:504: if (abs(enemies[i].x - playerDrawX) > 8) {
      0017F1                       6155 00172$:
                                   6156 ;src/main.c:519: enemies[i].ySpeed += enemies[i].accel;
      0017F1 D1                    6157 	pop	de
      0017F2 D5                    6158 	push	de
      0017F3 21 0D 00              6159 	ld	hl, #0x000d
      0017F6 19                    6160 	add	hl, de
      0017F7 E5                    6161 	push	hl
      0017F8 7D                    6162 	ld	a, l
      0017F9 F8 08                 6163 	ldhl	sp,	#8
      0017FB 77                    6164 	ld	(hl), a
      0017FC E1                    6165 	pop	hl
      0017FD 7C                    6166 	ld	a, h
      0017FE F8 07                 6167 	ldhl	sp,	#7
      001800 77                    6168 	ld	(hl), a
                                   6169 ;src/main.c:506: enemies[i].xSpeed += enemies[i].accel;
      001801 D1                    6170 	pop	de
      001802 D5                    6171 	push	de
      001803 21 0E 00              6172 	ld	hl, #0x000e
      001806 19                    6173 	add	hl, de
      001807 E5                    6174 	push	hl
      001808 7D                    6175 	ld	a, l
      001809 F8 06                 6176 	ldhl	sp,	#6
      00180B 77                    6177 	ld	(hl), a
      00180C E1                    6178 	pop	hl
      00180D 7C                    6179 	ld	a, h
      00180E F8 05                 6180 	ldhl	sp,	#5
                                   6181 ;src/main.c:513: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      001810 32                    6182 	ld	(hl-), a
      001811 2A                    6183 	ld	a, (hl+)
      001812 5F                    6184 	ld	e, a
      001813 56                    6185 	ld	d, (hl)
      001814 1A                    6186 	ld	a, (de)
      001815 4F                    6187 	ld	c, a
                                   6188 ;src/main.c:504: if (abs(enemies[i].x - playerDrawX) > 8) {
      001816 58                    6189 	ld	e, b
      001817 3E 08                 6190 	ld	a,#0x08
      001819 57                    6191 	ld	d,a
      00181A 90                    6192 	sub	a, b
      00181B CB 7B                 6193 	bit	7, e
      00181D 28 07                 6194 	jr	Z, 00399$
      00181F CB 7A                 6195 	bit	7, d
      001821 20 08                 6196 	jr	NZ, 00400$
      001823 BF                    6197 	cp	a, a
      001824 18 05                 6198 	jr	00400$
      001826                       6199 00399$:
      001826 CB 7A                 6200 	bit	7, d
      001828 28 01                 6201 	jr	Z, 00400$
      00182A 37                    6202 	scf
      00182B                       6203 00400$:
      00182B 30 4E                 6204 	jr	NC, 00111$
                                   6205 ;src/main.c:505: if (enemies[i].x < playerDrawX) {
      00182D D1                    6206 	pop	de
      00182E D5                    6207 	push	de
      00182F 1A                    6208 	ld	a, (de)
      001830 F8 0B                 6209 	ldhl	sp,	#11
      001832 22                    6210 	ld	(hl+), a
      001833 13                    6211 	inc	de
      001834 1A                    6212 	ld	a, (de)
      001835 77                    6213 	ld	(hl), a
      001836 FAr16r01              6214 	ld	a, (#_playerDrawX)
      001839 F8 0D                 6215 	ldhl	sp,	#13
      00183B 22                    6216 	ld	(hl+), a
      00183C 36 00                 6217 	ld	(hl), #0x00
                                   6218 ;src/main.c:506: enemies[i].xSpeed += enemies[i].accel;
      00183E F8 06                 6219 	ldhl	sp,#6
      001840 2A                    6220 	ld	a, (hl+)
      001841 5F                    6221 	ld	e, a
      001842 56                    6222 	ld	d, (hl)
      001843 1A                    6223 	ld	a, (de)
      001844 47                    6224 	ld	b, a
                                   6225 ;src/main.c:505: if (enemies[i].x < playerDrawX) {
      001845 F8 0B                 6226 	ldhl	sp,	#11
      001847 5D                    6227 	ld	e, l
      001848 54                    6228 	ld	d, h
      001849 F8 0D                 6229 	ldhl	sp,	#13
      00184B 1A                    6230 	ld	a, (de)
      00184C 13                    6231 	inc	de
      00184D 96                    6232 	sub	a, (hl)
      00184E 23                    6233 	inc	hl
      00184F 1A                    6234 	ld	a, (de)
      001850 9E                    6235 	sbc	a, (hl)
      001851 1A                    6236 	ld	a, (de)
      001852 57                    6237 	ld	d, a
      001853 CB 7E                 6238 	bit	7, (hl)
      001855 28 07                 6239 	jr	Z, 00401$
      001857 CB 7A                 6240 	bit	7, d
      001859 20 08                 6241 	jr	NZ, 00402$
      00185B BF                    6242 	cp	a, a
      00185C 18 05                 6243 	jr	00402$
      00185E                       6244 00401$:
      00185E CB 7A                 6245 	bit	7, d
      001860 28 01                 6246 	jr	Z, 00402$
      001862 37                    6247 	scf
      001863                       6248 00402$:
      001863 30 0B                 6249 	jr	NC, 00104$
                                   6250 ;src/main.c:506: enemies[i].xSpeed += enemies[i].accel;
      001865 79                    6251 	ld	a, c
      001866 80                    6252 	add	a, b
      001867 4F                    6253 	ld	c, a
      001868 F8 04                 6254 	ldhl	sp,	#4
      00186A 2A                    6255 	ld	a,	(hl+)
      00186B 66                    6256 	ld	h, (hl)
      00186C 6F                    6257 	ld	l, a
      00186D 71                    6258 	ld	(hl), c
      00186E 18 38                 6259 	jr	00112$
      001870                       6260 00104$:
                                   6261 ;src/main.c:509: enemies[i].xSpeed -= enemies[i].accel;
      001870 79                    6262 	ld	a, c
      001871 90                    6263 	sub	a, b
      001872 4F                    6264 	ld	c, a
      001873 F8 04                 6265 	ldhl	sp,	#4
      001875 2A                    6266 	ld	a,	(hl+)
      001876 66                    6267 	ld	h, (hl)
      001877 6F                    6268 	ld	l, a
      001878 71                    6269 	ld	(hl), c
      001879 18 2D                 6270 	jr	00112$
      00187B                       6271 00111$:
                                   6272 ;src/main.c:513: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      00187B 59                    6273 	ld	e, c
      00187C AF                    6274 	xor	a, a
      00187D 57                    6275 	ld	d, a
      00187E 91                    6276 	sub	a, c
      00187F CB 7B                 6277 	bit	7, e
      001881 28 07                 6278 	jr	Z, 00403$
      001883 CB 7A                 6279 	bit	7, d
      001885 20 08                 6280 	jr	NZ, 00404$
      001887 BF                    6281 	cp	a, a
      001888 18 05                 6282 	jr	00404$
      00188A                       6283 00403$:
      00188A CB 7A                 6284 	bit	7, d
      00188C 28 01                 6285 	jr	Z, 00404$
      00188E 37                    6286 	scf
      00188F                       6287 00404$:
      00188F 30 07                 6288 	jr	NC, 00107$
      001891 0D                    6289 	dec	c
      001892 F8 04                 6290 	ldhl	sp,	#4
      001894 2A                    6291 	ld	a,	(hl+)
      001895 66                    6292 	ld	h, (hl)
      001896 6F                    6293 	ld	l, a
      001897 71                    6294 	ld	(hl), c
      001898                       6295 00107$:
      001898 F8 04                 6296 	ldhl	sp,#4
      00189A 2A                    6297 	ld	a, (hl+)
      00189B 5F                    6298 	ld	e, a
      00189C 56                    6299 	ld	d, (hl)
      00189D 1A                    6300 	ld	a, (de)
      00189E 4F                    6301 	ld	c, a
                                   6302 ;src/main.c:514: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      00189F CB 79                 6303 	bit	7, c
      0018A1 28 05                 6304 	jr	Z, 00112$
      0018A3 0C                    6305 	inc	c
      0018A4 3A                    6306 	ld	a, (hl-)
      0018A5 6E                    6307 	ld	l, (hl)
      0018A6 67                    6308 	ld	h, a
      0018A7 71                    6309 	ld	(hl), c
      0018A8                       6310 00112$:
                                   6311 ;src/main.c:517: if (abs(enemies[i].y - playerDrawY) > 8) {
      0018A8 F8 02                 6312 	ldhl	sp,#2
      0018AA 2A                    6313 	ld	a, (hl+)
      0018AB 5F                    6314 	ld	e, a
      0018AC 56                    6315 	ld	d, (hl)
      0018AD 1A                    6316 	ld	a, (de)
      0018AE 4F                    6317 	ld	c, a
      0018AF 13                    6318 	inc	de
      0018B0 1A                    6319 	ld	a, (de)
      0018B1 47                    6320 	ld	b, a
      0018B2 79                    6321 	ld	a, c
      0018B3 21r17r01              6322 	ld	hl, #_playerDrawY
      0018B6 5E                    6323 	ld	e, (hl)
      0018B7 93                    6324 	sub	a, e
      0018B8 6F                    6325 	ld	l, a
                                   6326 ;	spillPairReg hl
                                   6327 ;	spillPairReg hl
                                   6328 ;src/main.c:376: if (value >= 0) return value;
      0018B9 CB 7D                 6329 	bit	7, l
      0018BB 20 06                 6330 	jr	NZ, 00174$
      0018BD 7D                    6331 	ld	a, l
      0018BE F8 0E                 6332 	ldhl	sp,	#14
      0018C0 77                    6333 	ld	(hl), a
      0018C1 18 06                 6334 	jr	00176$
      0018C3                       6335 00174$:
                                   6336 ;src/main.c:377: else return - value;
      0018C3 AF                    6337 	xor	a, a
      0018C4 95                    6338 	sub	a, l
      0018C5 5F                    6339 	ld	e, a
      0018C6 F8 0E                 6340 	ldhl	sp,	#14
      0018C8 73                    6341 	ld	(hl), e
                                   6342 ;src/main.c:517: if (abs(enemies[i].y - playerDrawY) > 8) {
      0018C9                       6343 00176$:
                                   6344 ;src/main.c:519: enemies[i].ySpeed += enemies[i].accel;
      0018C9 D1                    6345 	pop	de
      0018CA D5                    6346 	push	de
      0018CB 21 0F 00              6347 	ld	hl, #0x000f
      0018CE 19                    6348 	add	hl, de
      0018CF E5                    6349 	push	hl
      0018D0 7D                    6350 	ld	a, l
      0018D1 F8 0A                 6351 	ldhl	sp,	#10
      0018D3 77                    6352 	ld	(hl), a
      0018D4 E1                    6353 	pop	hl
      0018D5 7C                    6354 	ld	a, h
      0018D6 F8 09                 6355 	ldhl	sp,	#9
                                   6356 ;src/main.c:526: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      0018D8 32                    6357 	ld	(hl-), a
      0018D9 2A                    6358 	ld	a, (hl+)
      0018DA 5F                    6359 	ld	e, a
      0018DB 2A                    6360 	ld	a, (hl+)
      0018DC 23                    6361 	inc	hl
      0018DD 57                    6362 	ld	d, a
      0018DE 1A                    6363 	ld	a, (de)
      0018DF 77                    6364 	ld	(hl), a
                                   6365 ;src/main.c:517: if (abs(enemies[i].y - playerDrawY) > 8) {
      0018E0 F8 0E                 6366 	ldhl	sp,	#14
      0018E2 5E                    6367 	ld	e, (hl)
      0018E3 3E 08                 6368 	ld	a,#0x08
      0018E5 57                    6369 	ld	d,a
      0018E6 96                    6370 	sub	a, (hl)
      0018E7 CB 7B                 6371 	bit	7, e
      0018E9 28 07                 6372 	jr	Z, 00405$
      0018EB CB 7A                 6373 	bit	7, d
      0018ED 20 08                 6374 	jr	NZ, 00406$
      0018EF BF                    6375 	cp	a, a
      0018F0 18 05                 6376 	jr	00406$
      0018F2                       6377 00405$:
      0018F2 CB 7A                 6378 	bit	7, d
      0018F4 28 01                 6379 	jr	Z, 00406$
      0018F6 37                    6380 	scf
      0018F7                       6381 00406$:
      0018F7 30 49                 6382 	jr	NC, 00121$
                                   6383 ;src/main.c:518: if (enemies[i].y < playerDrawY) {
      0018F9 FAr17r01              6384 	ld	a, (#_playerDrawY)
      0018FC F8 0C                 6385 	ldhl	sp,	#12
      0018FE 22                    6386 	ld	(hl+), a
      0018FF 36 00                 6387 	ld	(hl), #0x00
                                   6388 ;src/main.c:506: enemies[i].xSpeed += enemies[i].accel;
      001901 F8 06                 6389 	ldhl	sp,#6
      001903 2A                    6390 	ld	a, (hl+)
      001904 5F                    6391 	ld	e, a
      001905 56                    6392 	ld	d, (hl)
      001906 1A                    6393 	ld	a, (de)
      001907 F8 0E                 6394 	ldhl	sp,	#14
                                   6395 ;src/main.c:518: if (enemies[i].y < playerDrawY) {
      001909 32                    6396 	ld	(hl-), a
      00190A 2B                    6397 	dec	hl
      00190B 79                    6398 	ld	a, c
      00190C 96                    6399 	sub	a, (hl)
      00190D 23                    6400 	inc	hl
      00190E 78                    6401 	ld	a, b
      00190F 9E                    6402 	sbc	a, (hl)
      001910 78                    6403 	ld	a, b
      001911 57                    6404 	ld	d, a
      001912 CB 7E                 6405 	bit	7, (hl)
      001914 28 07                 6406 	jr	Z, 00407$
      001916 CB 7A                 6407 	bit	7, d
      001918 20 08                 6408 	jr	NZ, 00408$
      00191A BF                    6409 	cp	a, a
      00191B 18 05                 6410 	jr	00408$
      00191D                       6411 00407$:
      00191D CB 7A                 6412 	bit	7, d
      00191F 28 01                 6413 	jr	Z, 00408$
      001921 37                    6414 	scf
      001922                       6415 00408$:
      001922 30 0F                 6416 	jr	NC, 00114$
                                   6417 ;src/main.c:519: enemies[i].ySpeed += enemies[i].accel;
      001924 F8 0B                 6418 	ldhl	sp,	#11
      001926 7E                    6419 	ld	a, (hl)
      001927 F8 0E                 6420 	ldhl	sp,	#14
      001929 86                    6421 	add	a, (hl)
      00192A 4F                    6422 	ld	c, a
      00192B F8 08                 6423 	ldhl	sp,	#8
      00192D 2A                    6424 	ld	a,	(hl+)
      00192E 66                    6425 	ld	h, (hl)
      00192F 6F                    6426 	ld	l, a
      001930 71                    6427 	ld	(hl), c
      001931 18 41                 6428 	jr	00122$
      001933                       6429 00114$:
                                   6430 ;src/main.c:522: enemies[i].ySpeed -= enemies[i].accel;
      001933 F8 0B                 6431 	ldhl	sp,	#11
      001935 7E                    6432 	ld	a, (hl)
      001936 F8 0E                 6433 	ldhl	sp,	#14
      001938 96                    6434 	sub	a, (hl)
      001939 4F                    6435 	ld	c, a
      00193A F8 08                 6436 	ldhl	sp,	#8
      00193C 2A                    6437 	ld	a,	(hl+)
      00193D 66                    6438 	ld	h, (hl)
      00193E 6F                    6439 	ld	l, a
      00193F 71                    6440 	ld	(hl), c
      001940 18 32                 6441 	jr	00122$
      001942                       6442 00121$:
                                   6443 ;src/main.c:526: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001942 F8 0B                 6444 	ldhl	sp,	#11
      001944 5E                    6445 	ld	e, (hl)
      001945 AF                    6446 	xor	a, a
      001946 57                    6447 	ld	d, a
      001947 96                    6448 	sub	a, (hl)
      001948 CB 7B                 6449 	bit	7, e
      00194A 28 07                 6450 	jr	Z, 00409$
      00194C CB 7A                 6451 	bit	7, d
      00194E 20 08                 6452 	jr	NZ, 00410$
      001950 BF                    6453 	cp	a, a
      001951 18 05                 6454 	jr	00410$
      001953                       6455 00409$:
      001953 CB 7A                 6456 	bit	7, d
      001955 28 01                 6457 	jr	Z, 00410$
      001957 37                    6458 	scf
      001958                       6459 00410$:
      001958 30 0A                 6460 	jr	NC, 00117$
      00195A F8 0B                 6461 	ldhl	sp,	#11
      00195C 4E                    6462 	ld	c, (hl)
      00195D 0D                    6463 	dec	c
      00195E F8 08                 6464 	ldhl	sp,	#8
      001960 2A                    6465 	ld	a,	(hl+)
      001961 66                    6466 	ld	h, (hl)
      001962 6F                    6467 	ld	l, a
      001963 71                    6468 	ld	(hl), c
      001964                       6469 00117$:
      001964 F8 08                 6470 	ldhl	sp,#8
      001966 2A                    6471 	ld	a, (hl+)
      001967 5F                    6472 	ld	e, a
      001968 56                    6473 	ld	d, (hl)
      001969 1A                    6474 	ld	a, (de)
      00196A 4F                    6475 	ld	c, a
                                   6476 ;src/main.c:527: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      00196B CB 79                 6477 	bit	7, c
      00196D 28 05                 6478 	jr	Z, 00122$
      00196F 0C                    6479 	inc	c
      001970 3A                    6480 	ld	a, (hl-)
      001971 6E                    6481 	ld	l, (hl)
      001972 67                    6482 	ld	h, a
      001973 71                    6483 	ld	(hl), c
      001974                       6484 00122$:
                                   6485 ;src/main.c:531: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001974 D1                    6486 	pop	de
      001975 D5                    6487 	push	de
      001976 21 0C 00              6488 	ld	hl, #0x000c
      001979 19                    6489 	add	hl, de
      00197A E5                    6490 	push	hl
      00197B 7D                    6491 	ld	a, l
      00197C F8 0C                 6492 	ldhl	sp,	#12
      00197E 77                    6493 	ld	(hl), a
      00197F E1                    6494 	pop	hl
      001980 7C                    6495 	ld	a, h
      001981 F8 0B                 6496 	ldhl	sp,	#11
      001983 32                    6497 	ld	(hl-), a
      001984 2A                    6498 	ld	a, (hl+)
      001985 5F                    6499 	ld	e, a
      001986 2A                    6500 	ld	a, (hl+)
      001987 57                    6501 	ld	d, a
      001988 1A                    6502 	ld	a, (de)
      001989 4F                    6503 	ld	c, a
      00198A 22                    6504 	ld	(hl+), a
      00198B AF                    6505 	xor	a, a
      00198C 91                    6506 	sub	a, c
      00198D 77                    6507 	ld	(hl), a
      00198E F8 04                 6508 	ldhl	sp,#4
      001990 2A                    6509 	ld	a, (hl+)
      001991 5F                    6510 	ld	e, a
      001992 56                    6511 	ld	d, (hl)
      001993 1A                    6512 	ld	a, (de)
      001994 F8 0E                 6513 	ldhl	sp,	#14
                                   6514 ;src/main.c:357: return (value < min) ? min : (value > max) ? max : value;
      001996 32                    6515 	ld	(hl-), a
      001997 2A                    6516 	ld	a, (hl+)
      001998 5F                    6517 	ld	e, a
      001999 56                    6518 	ld	d, (hl)
      00199A 3A                    6519 	ld	a, (hl-)
      00199B 96                    6520 	sub	a, (hl)
      00199C CB 7B                 6521 	bit	7, e
      00199E 28 07                 6522 	jr	Z, 00411$
      0019A0 CB 7A                 6523 	bit	7, d
      0019A2 20 08                 6524 	jr	NZ, 00412$
      0019A4 BF                    6525 	cp	a, a
      0019A5 18 05                 6526 	jr	00412$
      0019A7                       6527 00411$:
      0019A7 CB 7A                 6528 	bit	7, d
      0019A9 28 01                 6529 	jr	Z, 00412$
      0019AB 37                    6530 	scf
      0019AC                       6531 00412$:
      0019AC 30 06                 6532 	jr	NC, 00200$
      0019AE F8 0D                 6533 	ldhl	sp,	#13
      0019B0 2A                    6534 	ld	a, (hl+)
      0019B1 77                    6535 	ld	(hl), a
      0019B2 18 26                 6536 	jr	00201$
      0019B4                       6537 00200$:
      0019B4 F8 0E                 6538 	ldhl	sp,	#14
      0019B6 3A                    6539 	ld	a, (hl-)
      0019B7 2B                    6540 	dec	hl
      0019B8 5F                    6541 	ld	e, a
      0019B9 56                    6542 	ld	d, (hl)
      0019BA 2A                    6543 	ld	a, (hl+)
      0019BB 23                    6544 	inc	hl
      0019BC 96                    6545 	sub	a, (hl)
      0019BD CB 7B                 6546 	bit	7, e
      0019BF 28 07                 6547 	jr	Z, 00413$
      0019C1 CB 7A                 6548 	bit	7, d
      0019C3 20 08                 6549 	jr	NZ, 00414$
      0019C5 BF                    6550 	cp	a, a
      0019C6 18 05                 6551 	jr	00414$
      0019C8                       6552 00413$:
      0019C8 CB 7A                 6553 	bit	7, d
      0019CA 28 01                 6554 	jr	Z, 00414$
      0019CC 37                    6555 	scf
      0019CD                       6556 00414$:
      0019CD 30 05                 6557 	jr	NC, 00202$
      0019CF F8 0C                 6558 	ldhl	sp,	#12
      0019D1 5E                    6559 	ld	e, (hl)
      0019D2 18 03                 6560 	jr	00203$
      0019D4                       6561 00202$:
      0019D4 F8 0E                 6562 	ldhl	sp,	#14
      0019D6 5E                    6563 	ld	e, (hl)
      0019D7                       6564 00203$:
      0019D7 F8 0E                 6565 	ldhl	sp,	#14
      0019D9 73                    6566 	ld	(hl), e
      0019DA                       6567 00201$:
      0019DA F8 0E                 6568 	ldhl	sp,	#14
      0019DC 4E                    6569 	ld	c, (hl)
                                   6570 ;src/main.c:531: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0019DD F8 04                 6571 	ldhl	sp,	#4
      0019DF 2A                    6572 	ld	a,	(hl+)
      0019E0 66                    6573 	ld	h, (hl)
      0019E1 6F                    6574 	ld	l, a
      0019E2 71                    6575 	ld	(hl), c
                                   6576 ;src/main.c:532: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0019E3 F8 0A                 6577 	ldhl	sp,#10
      0019E5 2A                    6578 	ld	a, (hl+)
      0019E6 5F                    6579 	ld	e, a
      0019E7 3A                    6580 	ld	a, (hl-)
      0019E8 2B                    6581 	dec	hl
      0019E9 2B                    6582 	dec	hl
      0019EA 57                    6583 	ld	d, a
      0019EB 1A                    6584 	ld	a, (de)
      0019EC 47                    6585 	ld	b, a
      0019ED 48                    6586 	ld	c, b
      0019EE AF                    6587 	xor	a, a
      0019EF 90                    6588 	sub	a, b
      0019F0 47                    6589 	ld	b, a
      0019F1 2A                    6590 	ld	a, (hl+)
      0019F2 5F                    6591 	ld	e, a
      0019F3 56                    6592 	ld	d, (hl)
      0019F4 1A                    6593 	ld	a, (de)
      0019F5 6F                    6594 	ld	l, a
                                   6595 ;	spillPairReg hl
                                   6596 ;	spillPairReg hl
                                   6597 ;src/main.c:357: return (value < min) ? min : (value > max) ? max : value;
      0019F6 58                    6598 	ld	e, b
      0019F7 7D                    6599 	ld	a,l
      0019F8 57                    6600 	ld	d,a
      0019F9 90                    6601 	sub	a, b
      0019FA CB 7B                 6602 	bit	7, e
      0019FC 28 07                 6603 	jr	Z, 00415$
      0019FE CB 7A                 6604 	bit	7, d
      001A00 20 08                 6605 	jr	NZ, 00416$
      001A02 BF                    6606 	cp	a, a
      001A03 18 05                 6607 	jr	00416$
      001A05                       6608 00415$:
      001A05 CB 7A                 6609 	bit	7, d
      001A07 28 01                 6610 	jr	Z, 00416$
      001A09 37                    6611 	scf
      001A0A                       6612 00416$:
      001A0A 30 03                 6613 	jr	NC, 00204$
      001A0C 48                    6614 	ld	c, b
      001A0D 18 17                 6615 	jr	00205$
      001A0F                       6616 00204$:
      001A0F 5D                    6617 	ld	e, l
      001A10 79                    6618 	ld	a,c
      001A11 57                    6619 	ld	d,a
      001A12 95                    6620 	sub	a, l
      001A13 CB 7B                 6621 	bit	7, e
      001A15 28 07                 6622 	jr	Z, 00417$
      001A17 CB 7A                 6623 	bit	7, d
      001A19 20 08                 6624 	jr	NZ, 00418$
      001A1B BF                    6625 	cp	a, a
      001A1C 18 05                 6626 	jr	00418$
      001A1E                       6627 00417$:
      001A1E CB 7A                 6628 	bit	7, d
      001A20 28 01                 6629 	jr	Z, 00418$
      001A22 37                    6630 	scf
      001A23                       6631 00418$:
      001A23 38 01                 6632 	jr	C, 00207$
      001A25 4D                    6633 	ld	c, l
      001A26                       6634 00207$:
      001A26                       6635 00205$:
                                   6636 ;src/main.c:532: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001A26 F8 08                 6637 	ldhl	sp,	#8
      001A28 2A                    6638 	ld	a,	(hl+)
      001A29 66                    6639 	ld	h, (hl)
      001A2A 6F                    6640 	ld	l, a
      001A2B 71                    6641 	ld	(hl), c
                                   6642 ;src/main.c:535: enemies[i].xReserve += enemies[i].xSpeed;
      001A2C D1                    6643 	pop	de
      001A2D D5                    6644 	push	de
      001A2E 21 04 00              6645 	ld	hl, #0x0004
      001A31 19                    6646 	add	hl, de
      001A32 E5                    6647 	push	hl
      001A33 7D                    6648 	ld	a, l
      001A34 F8 0E                 6649 	ldhl	sp,	#14
      001A36 77                    6650 	ld	(hl), a
      001A37 E1                    6651 	pop	hl
      001A38 7C                    6652 	ld	a, h
      001A39 F8 0D                 6653 	ldhl	sp,	#13
      001A3B 32                    6654 	ld	(hl-), a
      001A3C 2A                    6655 	ld	a, (hl+)
      001A3D 5F                    6656 	ld	e, a
      001A3E 56                    6657 	ld	d, (hl)
      001A3F 1A                    6658 	ld	a, (de)
      001A40 47                    6659 	ld	b, a
      001A41 F8 04                 6660 	ldhl	sp,#4
      001A43 2A                    6661 	ld	a, (hl+)
      001A44 5F                    6662 	ld	e, a
      001A45 56                    6663 	ld	d, (hl)
      001A46 1A                    6664 	ld	a, (de)
      001A47 80                    6665 	add	a, b
      001A48 47                    6666 	ld	b, a
      001A49 F8 0C                 6667 	ldhl	sp,	#12
      001A4B 2A                    6668 	ld	a,	(hl+)
      001A4C 66                    6669 	ld	h, (hl)
      001A4D 6F                    6670 	ld	l, a
      001A4E 70                    6671 	ld	(hl), b
                                   6672 ;src/main.c:536: enemies[i].yReserve += enemies[i].ySpeed;
      001A4F D1                    6673 	pop	de
      001A50 D5                    6674 	push	de
      001A51 21 05 00              6675 	ld	hl, #0x0005
      001A54 19                    6676 	add	hl, de
      001A55 E5                    6677 	push	hl
      001A56 7D                    6678 	ld	a, l
      001A57 F8 08                 6679 	ldhl	sp,	#8
      001A59 77                    6680 	ld	(hl), a
      001A5A E1                    6681 	pop	hl
      001A5B 7C                    6682 	ld	a, h
      001A5C F8 07                 6683 	ldhl	sp,	#7
      001A5E 32                    6684 	ld	(hl-), a
      001A5F 2A                    6685 	ld	a, (hl+)
      001A60 5F                    6686 	ld	e, a
      001A61 56                    6687 	ld	d, (hl)
      001A62 1A                    6688 	ld	a, (de)
      001A63 81                    6689 	add	a, c
      001A64 4F                    6690 	ld	c, a
      001A65 3A                    6691 	ld	a, (hl-)
      001A66 6E                    6692 	ld	l, (hl)
      001A67 67                    6693 	ld	h, a
      001A68 71                    6694 	ld	(hl), c
                                   6695 ;src/main.c:540: if (enemies[i].xReserve >> 3 > 0) {
      001A69 F8 0C                 6696 	ldhl	sp,#12
      001A6B 2A                    6697 	ld	a, (hl+)
      001A6C 5F                    6698 	ld	e, a
      001A6D 2A                    6699 	ld	a, (hl+)
      001A6E 57                    6700 	ld	d, a
      001A6F 1A                    6701 	ld	a, (de)
      001A70 77                    6702 	ld	(hl), a
      001A71 CB 28                 6703 	sra	b
      001A73 CB 28                 6704 	sra	b
      001A75 CB 28                 6705 	sra	b
      001A77 58                    6706 	ld	e, b
      001A78 AF                    6707 	xor	a, a
      001A79 57                    6708 	ld	d, a
      001A7A 90                    6709 	sub	a, b
      001A7B CB 7B                 6710 	bit	7, e
      001A7D 28 07                 6711 	jr	Z, 00419$
      001A7F CB 7A                 6712 	bit	7, d
      001A81 20 08                 6713 	jr	NZ, 00420$
      001A83 BF                    6714 	cp	a, a
      001A84 18 05                 6715 	jr	00420$
      001A86                       6716 00419$:
      001A86 CB 7A                 6717 	bit	7, d
      001A88 28 01                 6718 	jr	Z, 00420$
      001A8A 37                    6719 	scf
      001A8B                       6720 00420$:
      001A8B 30 36                 6721 	jr	NC, 00126$
                                   6722 ;src/main.c:541: int8_t xMovement = enemies[i].xReserve >> 3;
      001A8D F8 0E                 6723 	ldhl	sp,	#14
      001A8F 7E                    6724 	ld	a, (hl)
      001A90 CB 2F                 6725 	sra	a
      001A92 CB 2F                 6726 	sra	a
      001A94 CB 2F                 6727 	sra	a
      001A96 77                    6728 	ld	(hl), a
                                   6729 ;src/main.c:542: enemies[i].x += xMovement;
      001A97 D1                    6730 	pop	de
      001A98 D5                    6731 	push	de
      001A99 1A                    6732 	ld	a, (de)
      001A9A 4F                    6733 	ld	c, a
      001A9B 13                    6734 	inc	de
      001A9C 1A                    6735 	ld	a, (de)
      001A9D 47                    6736 	ld	b, a
      001A9E 7E                    6737 	ld	a, (hl)
      001A9F 5F                    6738 	ld	e, a
      001AA0 07                    6739 	rlca
      001AA1 9F                    6740 	sbc	a, a
      001AA2 57                    6741 	ld	d, a
      001AA3 69                    6742 	ld	l, c
                                   6743 ;	spillPairReg hl
                                   6744 ;	spillPairReg hl
      001AA4 60                    6745 	ld	h, b
                                   6746 ;	spillPairReg hl
                                   6747 ;	spillPairReg hl
      001AA5 19                    6748 	add	hl, de
      001AA6 4D                    6749 	ld	c, l
      001AA7 44                    6750 	ld	b, h
      001AA8 E1                    6751 	pop	hl
      001AA9 E5                    6752 	push	hl
      001AAA 79                    6753 	ld	a, c
      001AAB 22                    6754 	ld	(hl+), a
      001AAC 70                    6755 	ld	(hl), b
                                   6756 ;src/main.c:543: enemies[i].xReserve -=  xMovement << 3;
      001AAD F8 0C                 6757 	ldhl	sp,#12
      001AAF 2A                    6758 	ld	a, (hl+)
      001AB0 5F                    6759 	ld	e, a
      001AB1 2A                    6760 	ld	a, (hl+)
      001AB2 57                    6761 	ld	d, a
      001AB3 1A                    6762 	ld	a, (de)
      001AB4 F5                    6763 	push	af
      001AB5 3A                    6764 	ld	a, (hl-)
      001AB6 87                    6765 	add	a, a
      001AB7 87                    6766 	add	a, a
      001AB8 87                    6767 	add	a, a
      001AB9 4F                    6768 	ld	c, a
      001ABA F1                    6769 	pop	af
      001ABB 91                    6770 	sub	a, c
      001ABC 4F                    6771 	ld	c, a
      001ABD 3A                    6772 	ld	a, (hl-)
      001ABE 6E                    6773 	ld	l, (hl)
      001ABF 67                    6774 	ld	h, a
      001AC0 71                    6775 	ld	(hl), c
      001AC1 18 60                 6776 	jr	00127$
      001AC3                       6777 00126$:
                                   6778 ;src/main.c:546: else if ((-enemies[i].xReserve) >> 3 > 0){
      001AC3 F8 0E                 6779 	ldhl	sp,	#14
      001AC5 7E                    6780 	ld	a, (hl)
      001AC6 4F                    6781 	ld	c, a
      001AC7 07                    6782 	rlca
      001AC8 9F                    6783 	sbc	a, a
      001AC9 47                    6784 	ld	b, a
      001ACA AF                    6785 	xor	a, a
      001ACB 91                    6786 	sub	a, c
      001ACC 4F                    6787 	ld	c, a
      001ACD 9F                    6788 	sbc	a, a
      001ACE 90                    6789 	sub	a, b
      001ACF 47                    6790 	ld	b, a
      001AD0 CB 28                 6791 	sra	b
      001AD2 CB 19                 6792 	rr	c
      001AD4 CB 28                 6793 	sra	b
      001AD6 CB 19                 6794 	rr	c
      001AD8 CB 28                 6795 	sra	b
      001ADA CB 19                 6796 	rr	c
      001ADC 58                    6797 	ld	e, b
      001ADD AF                    6798 	xor	a, a
      001ADE 57                    6799 	ld	d, a
      001ADF B9                    6800 	cp	a, c
      001AE0 98                    6801 	sbc	a, b
      001AE1 CB 7B                 6802 	bit	7, e
      001AE3 28 07                 6803 	jr	Z, 00421$
      001AE5 CB 7A                 6804 	bit	7, d
      001AE7 20 08                 6805 	jr	NZ, 00422$
      001AE9 BF                    6806 	cp	a, a
      001AEA 18 05                 6807 	jr	00422$
      001AEC                       6808 00421$:
      001AEC CB 7A                 6809 	bit	7, d
      001AEE 28 01                 6810 	jr	Z, 00422$
      001AF0 37                    6811 	scf
      001AF1                       6812 00422$:
      001AF1 30 30                 6813 	jr	NC, 00127$
                                   6814 ;src/main.c:547: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      001AF3 AF                    6815 	xor	a, a
      001AF4 91                    6816 	sub	a, c
      001AF5 4F                    6817 	ld	c, a
      001AF6 F8 0E                 6818 	ldhl	sp,	#14
      001AF8 71                    6819 	ld	(hl), c
                                   6820 ;src/main.c:548: enemies[i].x += xMovement;
      001AF9 D1                    6821 	pop	de
      001AFA D5                    6822 	push	de
      001AFB 1A                    6823 	ld	a, (de)
      001AFC 4F                    6824 	ld	c, a
      001AFD 13                    6825 	inc	de
      001AFE 1A                    6826 	ld	a, (de)
      001AFF 47                    6827 	ld	b, a
      001B00 7E                    6828 	ld	a, (hl)
      001B01 5F                    6829 	ld	e, a
      001B02 07                    6830 	rlca
      001B03 9F                    6831 	sbc	a, a
      001B04 57                    6832 	ld	d, a
      001B05 69                    6833 	ld	l, c
                                   6834 ;	spillPairReg hl
                                   6835 ;	spillPairReg hl
      001B06 60                    6836 	ld	h, b
                                   6837 ;	spillPairReg hl
                                   6838 ;	spillPairReg hl
      001B07 19                    6839 	add	hl, de
      001B08 4D                    6840 	ld	c, l
      001B09 44                    6841 	ld	b, h
      001B0A E1                    6842 	pop	hl
      001B0B E5                    6843 	push	hl
      001B0C 79                    6844 	ld	a, c
      001B0D 22                    6845 	ld	(hl+), a
      001B0E 70                    6846 	ld	(hl), b
                                   6847 ;src/main.c:549: enemies[i].xReserve +=  (-xMovement) << 3;
      001B0F F8 0C                 6848 	ldhl	sp,#12
      001B11 2A                    6849 	ld	a, (hl+)
      001B12 5F                    6850 	ld	e, a
      001B13 2A                    6851 	ld	a, (hl+)
      001B14 57                    6852 	ld	d, a
      001B15 1A                    6853 	ld	a, (de)
      001B16 4F                    6854 	ld	c, a
      001B17 AF                    6855 	xor	a, a
      001B18 96                    6856 	sub	a, (hl)
      001B19 2B                    6857 	dec	hl
      001B1A 87                    6858 	add	a, a
      001B1B 87                    6859 	add	a, a
      001B1C 87                    6860 	add	a, a
      001B1D 81                    6861 	add	a, c
      001B1E 4F                    6862 	ld	c, a
      001B1F 3A                    6863 	ld	a, (hl-)
      001B20 6E                    6864 	ld	l, (hl)
      001B21 67                    6865 	ld	h, a
      001B22 71                    6866 	ld	(hl), c
      001B23                       6867 00127$:
                                   6868 ;src/main.c:536: enemies[i].yReserve += enemies[i].ySpeed;
      001B23 F8 06                 6869 	ldhl	sp,#6
      001B25 2A                    6870 	ld	a, (hl+)
      001B26 5F                    6871 	ld	e, a
      001B27 56                    6872 	ld	d, (hl)
      001B28 1A                    6873 	ld	a, (de)
      001B29 F8 0D                 6874 	ldhl	sp,	#13
      001B2B 77                    6875 	ld	(hl), a
                                   6876 ;src/main.c:552: if (enemies[i].yReserve >> 3 > 0) {
      001B2C 2A                    6877 	ld	a, (hl+)
      001B2D CB 2F                 6878 	sra	a
      001B2F CB 2F                 6879 	sra	a
      001B31 CB 2F                 6880 	sra	a
      001B33 77                    6881 	ld	(hl), a
      001B34 5E                    6882 	ld	e, (hl)
      001B35 AF                    6883 	xor	a, a
      001B36 57                    6884 	ld	d, a
      001B37 96                    6885 	sub	a, (hl)
      001B38 CB 7B                 6886 	bit	7, e
      001B3A 28 07                 6887 	jr	Z, 00423$
      001B3C CB 7A                 6888 	bit	7, d
      001B3E 20 08                 6889 	jr	NZ, 00424$
      001B40 BF                    6890 	cp	a, a
      001B41 18 05                 6891 	jr	00424$
      001B43                       6892 00423$:
      001B43 CB 7A                 6893 	bit	7, d
      001B45 28 01                 6894 	jr	Z, 00424$
      001B47 37                    6895 	scf
      001B48                       6896 00424$:
      001B48 30 59                 6897 	jr	NC, 00131$
                                   6898 ;src/main.c:553: int8_t yMovement = enemies[i].yReserve >> 3;
      001B4A F8 0E                 6899 	ldhl	sp,	#14
      001B4C 7E                    6900 	ld	a, (hl)
      001B4D F8 08                 6901 	ldhl	sp,	#8
      001B4F 77                    6902 	ld	(hl), a
                                   6903 ;src/main.c:554: enemies[i].y += yMovement;
      001B50 F8 02                 6904 	ldhl	sp,#2
      001B52 2A                    6905 	ld	a, (hl+)
      001B53 5F                    6906 	ld	e, a
      001B54 56                    6907 	ld	d, (hl)
      001B55 1A                    6908 	ld	a, (de)
      001B56 F8 0D                 6909 	ldhl	sp,	#13
      001B58 22                    6910 	ld	(hl+), a
      001B59 13                    6911 	inc	de
      001B5A 1A                    6912 	ld	a, (de)
      001B5B 77                    6913 	ld	(hl), a
      001B5C F8 08                 6914 	ldhl	sp,	#8
      001B5E 2A                    6915 	ld	a, (hl+)
      001B5F 22                    6916 	ld	(hl+), a
      001B60 07                    6917 	rlca
      001B61 9F                    6918 	sbc	a, a
      001B62 77                    6919 	ld	(hl), a
      001B63 F8 0D                 6920 	ldhl	sp,	#13
      001B65 3A                    6921 	ld	a, (hl-)
      001B66 2B                    6922 	dec	hl
      001B67 77                    6923 	ld	(hl), a
      001B68 F8 0E                 6924 	ldhl	sp,	#14
      001B6A 3A                    6925 	ld	a, (hl-)
      001B6B 2B                    6926 	dec	hl
      001B6C 32                    6927 	ld	(hl-), a
      001B6D 2A                    6928 	ld	a, (hl+)
      001B6E 5F                    6929 	ld	e, a
      001B6F 56                    6930 	ld	d, (hl)
      001B70 F8 09                 6931 	ldhl	sp,	#9
      001B72 2A                    6932 	ld	a,	(hl+)
      001B73 66                    6933 	ld	h, (hl)
      001B74 6F                    6934 	ld	l, a
      001B75 19                    6935 	add	hl, de
      001B76 E5                    6936 	push	hl
      001B77 7D                    6937 	ld	a, l
      001B78 F8 0F                 6938 	ldhl	sp,	#15
      001B7A 77                    6939 	ld	(hl), a
      001B7B E1                    6940 	pop	hl
      001B7C 7C                    6941 	ld	a, h
      001B7D F8 0E                 6942 	ldhl	sp,	#14
      001B7F 77                    6943 	ld	(hl), a
      001B80 F8 02                 6944 	ldhl	sp,#2
      001B82 2A                    6945 	ld	a, (hl+)
      001B83 5F                    6946 	ld	e, a
      001B84 56                    6947 	ld	d, (hl)
      001B85 F8 0D                 6948 	ldhl	sp,	#13
      001B87 2A                    6949 	ld	a, (hl+)
      001B88 12                    6950 	ld	(de), a
      001B89 13                    6951 	inc	de
      001B8A 7E                    6952 	ld	a, (hl)
      001B8B 12                    6953 	ld	(de), a
                                   6954 ;src/main.c:555: enemies[i].yReserve -=  yMovement << 3;
      001B8C F8 06                 6955 	ldhl	sp,#6
      001B8E 2A                    6956 	ld	a, (hl+)
      001B8F 5F                    6957 	ld	e, a
      001B90 2A                    6958 	ld	a, (hl+)
      001B91 57                    6959 	ld	d, a
      001B92 1A                    6960 	ld	a, (de)
      001B93 F5                    6961 	push	af
      001B94 3A                    6962 	ld	a, (hl-)
      001B95 87                    6963 	add	a, a
      001B96 87                    6964 	add	a, a
      001B97 87                    6965 	add	a, a
      001B98 4F                    6966 	ld	c, a
      001B99 F1                    6967 	pop	af
      001B9A 91                    6968 	sub	a, c
      001B9B 4F                    6969 	ld	c, a
      001B9C 3A                    6970 	ld	a, (hl-)
      001B9D 6E                    6971 	ld	l, (hl)
      001B9E 67                    6972 	ld	h, a
      001B9F 71                    6973 	ld	(hl), c
      001BA0 C3r43r1C              6974 	jp	00132$
      001BA3                       6975 00131$:
                                   6976 ;src/main.c:557: else if ((-enemies[i].yReserve) >> 3 > 0){
      001BA3 F8 0D                 6977 	ldhl	sp,	#13
      001BA5 7E                    6978 	ld	a, (hl)
      001BA6 F8 0A                 6979 	ldhl	sp,	#10
      001BA8 22                    6980 	ld	(hl+), a
      001BA9 07                    6981 	rlca
      001BAA 9F                    6982 	sbc	a, a
      001BAB 77                    6983 	ld	(hl), a
      001BAC 11 00 00              6984 	ld	de, #0x0000
      001BAF 3A                    6985 	ld	a, (hl-)
      001BB0 6E                    6986 	ld	l, (hl)
      001BB1 67                    6987 	ld	h, a
      001BB2 7B                    6988 	ld	a, e
      001BB3 95                    6989 	sub	a, l
      001BB4 5F                    6990 	ld	e, a
      001BB5 7A                    6991 	ld	a, d
      001BB6 9C                    6992 	sbc	a, h
      001BB7 F8 0E                 6993 	ldhl	sp,	#14
      001BB9 32                    6994 	ld	(hl-), a
      001BBA 7B                    6995 	ld	a, e
      001BBB 22                    6996 	ld	(hl+), a
      001BBC CB 2E                 6997 	sra	(hl)
      001BBE 2B                    6998 	dec	hl
      001BBF CB 1E                 6999 	rr	(hl)
      001BC1 23                    7000 	inc	hl
      001BC2 CB 2E                 7001 	sra	(hl)
      001BC4 2B                    7002 	dec	hl
      001BC5 CB 1E                 7003 	rr	(hl)
      001BC7 23                    7004 	inc	hl
      001BC8 CB 2E                 7005 	sra	(hl)
      001BCA 2B                    7006 	dec	hl
      001BCB CB 1E                 7007 	rr	(hl)
      001BCD AF                    7008 	xor	a, a
      001BCE 96                    7009 	sub	a, (hl)
      001BCF 23                    7010 	inc	hl
      001BD0 3E 00                 7011 	ld	a, #0x00
      001BD2 9E                    7012 	sbc	a, (hl)
      001BD3 3E 00                 7013 	ld	a, #0x00
      001BD5 57                    7014 	ld	d, a
      001BD6 CB 7E                 7015 	bit	7, (hl)
      001BD8 28 07                 7016 	jr	Z, 00425$
      001BDA CB 7A                 7017 	bit	7, d
      001BDC 20 08                 7018 	jr	NZ, 00426$
      001BDE BF                    7019 	cp	a, a
      001BDF 18 05                 7020 	jr	00426$
      001BE1                       7021 00425$:
      001BE1 CB 7A                 7022 	bit	7, d
      001BE3 28 01                 7023 	jr	Z, 00426$
      001BE5 37                    7024 	scf
      001BE6                       7025 00426$:
      001BE6 30 5B                 7026 	jr	NC, 00132$
                                   7027 ;src/main.c:558: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      001BE8 F8 0D                 7028 	ldhl	sp,	#13
      001BEA 2A                    7029 	ld	a, (hl+)
      001BEB 4F                    7030 	ld	c, a
      001BEC AF                    7031 	xor	a, a
      001BED 91                    7032 	sub	a, c
      001BEE 77                    7033 	ld	(hl), a
      001BEF 7E                    7034 	ld	a, (hl)
      001BF0 F8 08                 7035 	ldhl	sp,	#8
      001BF2 77                    7036 	ld	(hl), a
                                   7037 ;src/main.c:559: enemies[i].y += yMovement;
      001BF3 F8 02                 7038 	ldhl	sp,#2
      001BF5 2A                    7039 	ld	a, (hl+)
      001BF6 5F                    7040 	ld	e, a
      001BF7 56                    7041 	ld	d, (hl)
      001BF8 1A                    7042 	ld	a, (de)
      001BF9 F8 0D                 7043 	ldhl	sp,	#13
      001BFB 22                    7044 	ld	(hl+), a
      001BFC 13                    7045 	inc	de
      001BFD 1A                    7046 	ld	a, (de)
      001BFE 77                    7047 	ld	(hl), a
      001BFF F8 08                 7048 	ldhl	sp,	#8
      001C01 2A                    7049 	ld	a, (hl+)
      001C02 22                    7050 	ld	(hl+), a
      001C03 07                    7051 	rlca
      001C04 9F                    7052 	sbc	a, a
      001C05 77                    7053 	ld	(hl), a
      001C06 F8 0D                 7054 	ldhl	sp,	#13
      001C08 3A                    7055 	ld	a, (hl-)
      001C09 2B                    7056 	dec	hl
      001C0A 77                    7057 	ld	(hl), a
      001C0B F8 0E                 7058 	ldhl	sp,	#14
      001C0D 3A                    7059 	ld	a, (hl-)
      001C0E 2B                    7060 	dec	hl
      001C0F 32                    7061 	ld	(hl-), a
      001C10 2A                    7062 	ld	a, (hl+)
      001C11 5F                    7063 	ld	e, a
      001C12 56                    7064 	ld	d, (hl)
      001C13 F8 09                 7065 	ldhl	sp,	#9
      001C15 2A                    7066 	ld	a,	(hl+)
      001C16 66                    7067 	ld	h, (hl)
      001C17 6F                    7068 	ld	l, a
      001C18 19                    7069 	add	hl, de
      001C19 E5                    7070 	push	hl
      001C1A 7D                    7071 	ld	a, l
      001C1B F8 0F                 7072 	ldhl	sp,	#15
      001C1D 77                    7073 	ld	(hl), a
      001C1E E1                    7074 	pop	hl
      001C1F 7C                    7075 	ld	a, h
      001C20 F8 0E                 7076 	ldhl	sp,	#14
      001C22 77                    7077 	ld	(hl), a
      001C23 F8 02                 7078 	ldhl	sp,#2
      001C25 2A                    7079 	ld	a, (hl+)
      001C26 5F                    7080 	ld	e, a
      001C27 56                    7081 	ld	d, (hl)
      001C28 F8 0D                 7082 	ldhl	sp,	#13
      001C2A 2A                    7083 	ld	a, (hl+)
      001C2B 12                    7084 	ld	(de), a
      001C2C 13                    7085 	inc	de
      001C2D 7E                    7086 	ld	a, (hl)
      001C2E 12                    7087 	ld	(de), a
                                   7088 ;src/main.c:560: enemies[i].yReserve +=  (-yMovement) << 3;
      001C2F F8 06                 7089 	ldhl	sp,#6
      001C31 2A                    7090 	ld	a, (hl+)
      001C32 5F                    7091 	ld	e, a
      001C33 2A                    7092 	ld	a, (hl+)
      001C34 57                    7093 	ld	d, a
      001C35 1A                    7094 	ld	a, (de)
      001C36 4F                    7095 	ld	c, a
      001C37 AF                    7096 	xor	a, a
      001C38 96                    7097 	sub	a, (hl)
      001C39 2B                    7098 	dec	hl
      001C3A 87                    7099 	add	a, a
      001C3B 87                    7100 	add	a, a
      001C3C 87                    7101 	add	a, a
      001C3D 81                    7102 	add	a, c
      001C3E 4F                    7103 	ld	c, a
      001C3F 3A                    7104 	ld	a, (hl-)
      001C40 6E                    7105 	ld	l, (hl)
      001C41 67                    7106 	ld	h, a
      001C42 71                    7107 	ld	(hl), c
      001C43                       7108 00132$:
                                   7109 ;src/main.c:565: if (auxTick == 1) {
      001C43 FAr3Cr01              7110 	ld	a, (#_auxTick)
      001C46 3D                    7111 	dec	a
      001C47 C2r8Ar1D              7112 	jp	NZ,00144$
                                   7113 ;src/main.c:567: if (enemies[i].spriteCount == 1) {
      001C4A D1                    7114 	pop	de
      001C4B D5                    7115 	push	de
      001C4C 21 08 00              7116 	ld	hl, #0x0008
      001C4F 19                    7117 	add	hl, de
      001C50 4D                    7118 	ld	c, l
      001C51 44                    7119 	ld	b, h
      001C52 0A                    7120 	ld	a, (bc)
      001C53 47                    7121 	ld	b, a
                                   7122 ;src/main.c:568: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001C54 F8 0F                 7123 	ldhl	sp,	#15
      001C56 3A                    7124 	ld	a, (hl-)
      001C57 87                    7125 	add	a, a
      001C58 4F                    7126 	ld	c, a
      001C59 C6 0A                 7127 	add	a, #0x0a
      001C5B 77                    7128 	ld	(hl), a
                                   7129 ;src/main.c:567: if (enemies[i].spriteCount == 1) {
      001C5C 05                    7130 	dec	b
      001C5D 20 51                 7131 	jr	NZ, 00140$
                                   7132 ;src/main.c:568: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001C5F F8 02                 7133 	ldhl	sp,#2
      001C61 2A                    7134 	ld	a, (hl+)
      001C62 5F                    7135 	ld	e, a
      001C63 56                    7136 	ld	d, (hl)
      001C64 1A                    7137 	ld	a, (de)
      001C65 C6 0C                 7138 	add	a, #0x0c
      001C67 4F                    7139 	ld	c, a
      001C68 D1                    7140 	pop	de
      001C69 D5                    7141 	push	de
      001C6A 1A                    7142 	ld	a, (de)
      001C6B C6 04                 7143 	add	a, #0x04
      001C6D 5F                    7144 	ld	e, a
      001C6E F8 0E                 7145 	ldhl	sp,	#14
                                   7146 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001C70 6E                    7147 	ld	l, (hl)
                                   7148 ;	spillPairReg hl
                                   7149 ;	spillPairReg hl
      001C71 26 00                 7150 	ld	h, #0x00
                                   7151 ;	spillPairReg hl
                                   7152 ;	spillPairReg hl
      001C73 29                    7153 	add	hl, hl
      001C74 29                    7154 	add	hl, hl
      001C75 D5                    7155 	push	de
      001C76 11r00r00              7156 	ld	de, #_shadow_OAM
      001C79 19                    7157 	add	hl, de
      001C7A D1                    7158 	pop	de
                                   7159 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001C7B 79                    7160 	ld	a, c
      001C7C 22                    7161 	ld	(hl+), a
      001C7D 73                    7162 	ld	(hl), e
                                   7163 ;src/main.c:569: if (enemies[i].xSpeed >= 0) {
      001C7E F8 04                 7164 	ldhl	sp,#4
      001C80 2A                    7165 	ld	a, (hl+)
      001C81 5F                    7166 	ld	e, a
      001C82 56                    7167 	ld	d, (hl)
      001C83 1A                    7168 	ld	a, (de)
      001C84 CB 7F                 7169 	bit	7,a
      001C86 20 14                 7170 	jr	NZ, 00134$
                                   7171 ;src/main.c:570: set_sprite_prop(10+(i<<1), 0);
      001C88 F8 0E                 7172 	ldhl	sp,	#14
      001C8A 4E                    7173 	ld	c, (hl)
                                   7174 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001C8B 26 00                 7175 	ld	h, #0x00
                                   7176 ;	spillPairReg hl
                                   7177 ;	spillPairReg hl
      001C8D 69                    7178 	ld	l, c
      001C8E 29                    7179 	add	hl, hl
      001C8F 29                    7180 	add	hl, hl
      001C90 11r00r00              7181 	ld	de, #_shadow_OAM
      001C93 19                    7182 	add	hl, de
      001C94 23                    7183 	inc	hl
      001C95 23                    7184 	inc	hl
      001C96 23                    7185 	inc	hl
      001C97 36 00                 7186 	ld	(hl), #0x00
                                   7187 ;src/main.c:570: set_sprite_prop(10+(i<<1), 0);
      001C99 C3r8Ar1D              7188 	jp	00144$
      001C9C                       7189 00134$:
                                   7190 ;src/main.c:573: set_sprite_prop(10+(i<<1), S_FLIPX);
      001C9C F8 0E                 7191 	ldhl	sp,	#14
      001C9E 4E                    7192 	ld	c, (hl)
                                   7193 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001C9F 26 00                 7194 	ld	h, #0x00
                                   7195 ;	spillPairReg hl
                                   7196 ;	spillPairReg hl
      001CA1 69                    7197 	ld	l, c
      001CA2 29                    7198 	add	hl, hl
      001CA3 29                    7199 	add	hl, hl
      001CA4 11r00r00              7200 	ld	de, #_shadow_OAM
      001CA7 19                    7201 	add	hl, de
      001CA8 23                    7202 	inc	hl
      001CA9 23                    7203 	inc	hl
      001CAA 23                    7204 	inc	hl
      001CAB 36 20                 7205 	ld	(hl), #0x20
                                   7206 ;src/main.c:573: set_sprite_prop(10+(i<<1), S_FLIPX);
      001CAD C3r8Ar1D              7207 	jp	00144$
      001CB0                       7208 00140$:
                                   7209 ;src/main.c:578: if (enemies[i].xSpeed >= 0) {
      001CB0 F8 04                 7210 	ldhl	sp,#4
      001CB2 2A                    7211 	ld	a, (hl+)
      001CB3 5F                    7212 	ld	e, a
      001CB4 56                    7213 	ld	d, (hl)
      001CB5 1A                    7214 	ld	a, (de)
      001CB6 CB 7F                 7215 	bit	7,a
      001CB8 20 6C                 7216 	jr	NZ, 00137$
                                   7217 ;src/main.c:579: set_sprite_prop(10+(i<<1), 0);
      001CBA F8 0E                 7218 	ldhl	sp,	#14
      001CBC 46                    7219 	ld	b, (hl)
                                   7220 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001CBD 26 00                 7221 	ld	h, #0x00
                                   7222 ;	spillPairReg hl
                                   7223 ;	spillPairReg hl
      001CBF 68                    7224 	ld	l, b
      001CC0 29                    7225 	add	hl, hl
      001CC1 29                    7226 	add	hl, hl
      001CC2 11r00r00              7227 	ld	de, #_shadow_OAM
      001CC5 19                    7228 	add	hl, de
      001CC6 23                    7229 	inc	hl
      001CC7 23                    7230 	inc	hl
      001CC8 23                    7231 	inc	hl
      001CC9 36 00                 7232 	ld	(hl), #0x00
                                   7233 ;src/main.c:580: set_sprite_prop(10+(i<<1)+1, 0);
      001CCB 79                    7234 	ld	a, c
      001CCC C6 0B                 7235 	add	a, #0x0b
      001CCE 4F                    7236 	ld	c, a
                                   7237 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001CCF 69                    7238 	ld	l, c
                                   7239 ;	spillPairReg hl
                                   7240 ;	spillPairReg hl
      001CD0 26 00                 7241 	ld	h, #0x00
                                   7242 ;	spillPairReg hl
                                   7243 ;	spillPairReg hl
      001CD2 29                    7244 	add	hl, hl
      001CD3 29                    7245 	add	hl, hl
      001CD4 11r00r00              7246 	ld	de, #_shadow_OAM
      001CD7 19                    7247 	add	hl, de
      001CD8 23                    7248 	inc	hl
      001CD9 23                    7249 	inc	hl
      001CDA 23                    7250 	inc	hl
      001CDB 36 00                 7251 	ld	(hl), #0x00
                                   7252 ;src/main.c:581: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      001CDD F8 02                 7253 	ldhl	sp,#2
      001CDF 2A                    7254 	ld	a, (hl+)
      001CE0 5F                    7255 	ld	e, a
      001CE1 56                    7256 	ld	d, (hl)
      001CE2 1A                    7257 	ld	a, (de)
      001CE3 C6 08                 7258 	add	a, #0x08
      001CE5 F8 0C                 7259 	ldhl	sp,	#12
      001CE7 22                    7260 	ld	(hl+), a
      001CE8 D1                    7261 	pop	de
      001CE9 D5                    7262 	push	de
      001CEA 1A                    7263 	ld	a, (de)
      001CEB 22                    7264 	ld	(hl+), a
      001CEC 46                    7265 	ld	b, (hl)
                                   7266 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001CED 11r00r00              7267 	ld	de, #_shadow_OAM+0
      001CF0 26 00                 7268 	ld	h, #0x00
                                   7269 ;	spillPairReg hl
                                   7270 ;	spillPairReg hl
      001CF2 68                    7271 	ld	l, b
      001CF3 29                    7272 	add	hl, hl
      001CF4 29                    7273 	add	hl, hl
      001CF5 19                    7274 	add	hl, de
      001CF6 5D                    7275 	ld	e, l
      001CF7 54                    7276 	ld	d, h
                                   7277 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001CF8 F8 0C                 7278 	ldhl	sp,	#12
      001CFA 2A                    7279 	ld	a, (hl+)
      001CFB 12                    7280 	ld	(de), a
      001CFC 13                    7281 	inc	de
      001CFD 7E                    7282 	ld	a, (hl)
      001CFE 12                    7283 	ld	(de), a
                                   7284 ;src/main.c:582: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001CFF F8 02                 7285 	ldhl	sp,#2
      001D01 2A                    7286 	ld	a, (hl+)
      001D02 5F                    7287 	ld	e, a
      001D03 56                    7288 	ld	d, (hl)
      001D04 1A                    7289 	ld	a, (de)
      001D05 C6 08                 7290 	add	a, #0x08
      001D07 F8 0E                 7291 	ldhl	sp,	#14
      001D09 77                    7292 	ld	(hl), a
      001D0A D1                    7293 	pop	de
      001D0B D5                    7294 	push	de
      001D0C 1A                    7295 	ld	a, (de)
      001D0D C6 08                 7296 	add	a, #0x08
      001D0F 5F                    7297 	ld	e, a
                                   7298 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001D10 26 00                 7299 	ld	h, #0x00
                                   7300 ;	spillPairReg hl
                                   7301 ;	spillPairReg hl
      001D12 69                    7302 	ld	l, c
      001D13 29                    7303 	add	hl, hl
      001D14 29                    7304 	add	hl, hl
      001D15 7D                    7305 	ld	a, l
      001D16 C6r00                 7306 	add	a, #<(_shadow_OAM)
      001D18 4F                    7307 	ld	c, a
      001D19 7C                    7308 	ld	a, h
      001D1A CEs00                 7309 	adc	a, #>(_shadow_OAM)
      001D1C 47                    7310 	ld	b, a
                                   7311 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001D1D F8 0E                 7312 	ldhl	sp,	#14
      001D1F 7E                    7313 	ld	a, (hl)
      001D20 02                    7314 	ld	(bc), a
      001D21 03                    7315 	inc	bc
      001D22 7B                    7316 	ld	a, e
      001D23 02                    7317 	ld	(bc), a
                                   7318 ;src/main.c:582: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001D24 18 64                 7319 	jr	00144$
      001D26                       7320 00137$:
                                   7321 ;src/main.c:585: set_sprite_prop(10+(i<<1), S_FLIPX);
      001D26 F8 0E                 7322 	ldhl	sp,	#14
                                   7323 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001D28 6E                    7324 	ld	l, (hl)
                                   7325 ;	spillPairReg hl
                                   7326 ;	spillPairReg hl
      001D29 26 00                 7327 	ld	h, #0x00
                                   7328 ;	spillPairReg hl
                                   7329 ;	spillPairReg hl
      001D2B 29                    7330 	add	hl, hl
      001D2C 29                    7331 	add	hl, hl
      001D2D 11r00r00              7332 	ld	de, #_shadow_OAM
      001D30 19                    7333 	add	hl, de
      001D31 23                    7334 	inc	hl
      001D32 23                    7335 	inc	hl
      001D33 23                    7336 	inc	hl
      001D34 36 20                 7337 	ld	(hl), #0x20
                                   7338 ;src/main.c:586: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001D36 79                    7339 	ld	a, c
      001D37 C6 0B                 7340 	add	a, #0x0b
      001D39 F8 0D                 7341 	ldhl	sp,	#13
      001D3B 77                    7342 	ld	(hl), a
      001D3C 4E                    7343 	ld	c, (hl)
                                   7344 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001D3D 26 00                 7345 	ld	h, #0x00
                                   7346 ;	spillPairReg hl
                                   7347 ;	spillPairReg hl
      001D3F 69                    7348 	ld	l, c
      001D40 29                    7349 	add	hl, hl
      001D41 29                    7350 	add	hl, hl
      001D42 11r00r00              7351 	ld	de, #_shadow_OAM
      001D45 19                    7352 	add	hl, de
      001D46 23                    7353 	inc	hl
      001D47 23                    7354 	inc	hl
      001D48 23                    7355 	inc	hl
      001D49 36 20                 7356 	ld	(hl), #0x20
                                   7357 ;src/main.c:587: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      001D4B F8 02                 7358 	ldhl	sp,#2
      001D4D 2A                    7359 	ld	a, (hl+)
      001D4E 5F                    7360 	ld	e, a
      001D4F 56                    7361 	ld	d, (hl)
      001D50 1A                    7362 	ld	a, (de)
      001D51 C6 08                 7363 	add	a, #0x08
      001D53 4F                    7364 	ld	c, a
      001D54 D1                    7365 	pop	de
      001D55 D5                    7366 	push	de
      001D56 1A                    7367 	ld	a, (de)
      001D57 C6 08                 7368 	add	a, #0x08
      001D59 5F                    7369 	ld	e, a
      001D5A F8 0E                 7370 	ldhl	sp,	#14
                                   7371 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001D5C 6E                    7372 	ld	l, (hl)
                                   7373 ;	spillPairReg hl
                                   7374 ;	spillPairReg hl
      001D5D 26 00                 7375 	ld	h, #0x00
                                   7376 ;	spillPairReg hl
                                   7377 ;	spillPairReg hl
      001D5F 29                    7378 	add	hl, hl
      001D60 29                    7379 	add	hl, hl
      001D61 D5                    7380 	push	de
      001D62 11r00r00              7381 	ld	de, #_shadow_OAM
      001D65 19                    7382 	add	hl, de
      001D66 D1                    7383 	pop	de
                                   7384 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001D67 79                    7385 	ld	a, c
      001D68 22                    7386 	ld	(hl+), a
      001D69 73                    7387 	ld	(hl), e
                                   7388 ;src/main.c:588: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      001D6A F8 02                 7389 	ldhl	sp,#2
      001D6C 2A                    7390 	ld	a, (hl+)
      001D6D 5F                    7391 	ld	e, a
      001D6E 56                    7392 	ld	d, (hl)
      001D6F 1A                    7393 	ld	a, (de)
      001D70 C6 08                 7394 	add	a, #0x08
      001D72 4F                    7395 	ld	c, a
      001D73 D1                    7396 	pop	de
      001D74 D5                    7397 	push	de
      001D75 1A                    7398 	ld	a, (de)
      001D76 F8 0E                 7399 	ldhl	sp,	#14
      001D78 32                    7400 	ld	(hl-), a
                                   7401 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001D79 6E                    7402 	ld	l, (hl)
                                   7403 ;	spillPairReg hl
                                   7404 ;	spillPairReg hl
      001D7A 26 00                 7405 	ld	h, #0x00
                                   7406 ;	spillPairReg hl
                                   7407 ;	spillPairReg hl
      001D7C 29                    7408 	add	hl, hl
      001D7D 29                    7409 	add	hl, hl
      001D7E 11r00r00              7410 	ld	de, #_shadow_OAM
      001D81 19                    7411 	add	hl, de
                                   7412 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001D82 79                    7413 	ld	a, c
      001D83 22                    7414 	ld	(hl+), a
      001D84 4D                    7415 	ld	c, l
      001D85 44                    7416 	ld	b, h
      001D86 F8 0E                 7417 	ldhl	sp,	#14
      001D88 7E                    7418 	ld	a, (hl)
      001D89 02                    7419 	ld	(bc), a
                                   7420 ;src/main.c:588: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      001D8A                       7421 00144$:
                                   7422 ;src/main.c:496: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001D8A F8 0F                 7423 	ldhl	sp,	#15
      001D8C 34                    7424 	inc	(hl)
      001D8D C3r6Er17              7425 	jp	00197$
      001D90                       7426 00145$:
                                   7427 ;src/main.c:598: uint8_t i = enemyCollisionCount;
      001D90 FAr22r01              7428 	ld	a, (#_enemyCollisionCount)
      001D93 F8 01                 7429 	ldhl	sp,	#1
      001D95 77                    7430 	ld	(hl), a
                                   7431 ;src/main.c:600: if (enemies[i].alive) {
      001D96 4E                    7432 	ld	c, (hl)
      001D97 06 00                 7433 	ld	b, #0x00
      001D99 69                    7434 	ld	l, c
      001D9A 60                    7435 	ld	h, b
      001D9B 29                    7436 	add	hl, hl
      001D9C 29                    7437 	add	hl, hl
      001D9D 29                    7438 	add	hl, hl
      001D9E 09                    7439 	add	hl, bc
      001D9F 29                    7440 	add	hl, hl
      001DA0 01r5Ar00              7441 	ld	bc,#_enemies
      001DA3 09                    7442 	add	hl,bc
      001DA4 E5                    7443 	push	hl
      001DA5 7D                    7444 	ld	a, l
      001DA6 F8 04                 7445 	ldhl	sp,	#4
      001DA8 77                    7446 	ld	(hl), a
      001DA9 E1                    7447 	pop	hl
      001DAA 7C                    7448 	ld	a, h
      001DAB F8 03                 7449 	ldhl	sp,	#3
      001DAD 32                    7450 	ld	(hl-), a
      001DAE 2A                    7451 	ld	a, (hl+)
      001DAF 5F                    7452 	ld	e, a
      001DB0 56                    7453 	ld	d, (hl)
      001DB1 21 09 00              7454 	ld	hl, #0x0009
      001DB4 19                    7455 	add	hl, de
      001DB5 E5                    7456 	push	hl
      001DB6 7D                    7457 	ld	a, l
      001DB7 F8 06                 7458 	ldhl	sp,	#6
      001DB9 77                    7459 	ld	(hl), a
      001DBA E1                    7460 	pop	hl
      001DBB 7C                    7461 	ld	a, h
      001DBC F8 05                 7462 	ldhl	sp,	#5
      001DBE 32                    7463 	ld	(hl-), a
      001DBF 2A                    7464 	ld	a, (hl+)
      001DC0 5F                    7465 	ld	e, a
      001DC1 56                    7466 	ld	d, (hl)
      001DC2 1A                    7467 	ld	a, (de)
      001DC3 F8 0F                 7468 	ldhl	sp,	#15
      001DC5 77                    7469 	ld	(hl), a
      001DC6 7E                    7470 	ld	a, (hl)
      001DC7 B7                    7471 	or	a, a
      001DC8 CAr86r20              7472 	jp	Z, 00198$
                                   7473 ;src/main.c:601: if (enemies[i].visible == 1) {
      001DCB F8 02                 7474 	ldhl	sp,#2
      001DCD 2A                    7475 	ld	a, (hl+)
      001DCE 5F                    7476 	ld	e, a
      001DCF 56                    7477 	ld	d, (hl)
      001DD0 21 0A 00              7478 	ld	hl, #0x000a
      001DD3 19                    7479 	add	hl, de
      001DD4 4D                    7480 	ld	c, l
      001DD5 44                    7481 	ld	b, h
      001DD6 0A                    7482 	ld	a, (bc)
      001DD7 F8 06                 7483 	ldhl	sp,	#6
      001DD9 77                    7484 	ld	(hl), a
                                   7485 ;src/main.c:602: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001DDA F8 02                 7486 	ldhl	sp,#2
      001DDC 2A                    7487 	ld	a, (hl+)
      001DDD 5F                    7488 	ld	e, a
      001DDE 56                    7489 	ld	d, (hl)
      001DDF 1A                    7490 	ld	a, (de)
      001DE0 F8 07                 7491 	ldhl	sp,	#7
      001DE2 22                    7492 	ld	(hl+), a
      001DE3 13                    7493 	inc	de
      001DE4 1A                    7494 	ld	a, (de)
      001DE5 77                    7495 	ld	(hl), a
      001DE6 F8 02                 7496 	ldhl	sp,#2
      001DE8 2A                    7497 	ld	a, (hl+)
      001DE9 5F                    7498 	ld	e, a
      001DEA 56                    7499 	ld	d, (hl)
      001DEB 21 02 00              7500 	ld	hl, #0x0002
      001DEE 19                    7501 	add	hl, de
      001DEF E5                    7502 	push	hl
      001DF0 7D                    7503 	ld	a, l
      001DF1 F8 0B                 7504 	ldhl	sp,	#11
      001DF3 77                    7505 	ld	(hl), a
      001DF4 E1                    7506 	pop	hl
      001DF5 7C                    7507 	ld	a, h
      001DF6 F8 0A                 7508 	ldhl	sp,	#10
      001DF8 77                    7509 	ld	(hl), a
                                   7510 ;src/main.c:604: set_sprite_tile(10+(i<<1), 0x7f);
      001DF9 F8 01                 7511 	ldhl	sp,	#1
      001DFB 5E                    7512 	ld	e, (hl)
                                   7513 ;src/main.c:602: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001DFC F8 07                 7514 	ldhl	sp,	#7
      001DFE 7E                    7515 	ld	a, (hl)
      001DFF F8 0B                 7516 	ldhl	sp,	#11
      001E01 77                    7517 	ld	(hl), a
      001E02 F8 08                 7518 	ldhl	sp,	#8
      001E04 7E                    7519 	ld	a, (hl)
      001E05 F8 0C                 7520 	ldhl	sp,	#12
                                   7521 ;src/main.c:604: set_sprite_tile(10+(i<<1), 0x7f);
      001E07 22                    7522 	ld	(hl+), a
      001E08 7B                    7523 	ld	a, e
      001E09 87                    7524 	add	a, a
                                   7525 ;src/main.c:602: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001E0A 32                    7526 	ld	(hl-), a
      001E0B 2A                    7527 	ld	a, (hl+)
      001E0C 23                    7528 	inc	hl
      001E0D 07                    7529 	rlca
      001E0E E6 01                 7530 	and	a,#0x01
                                   7531 ;src/main.c:604: set_sprite_tile(10+(i<<1), 0x7f);
      001E10 32                    7532 	ld	(hl-), a
      001E11 2A                    7533 	ld	a, (hl+)
      001E12 23                    7534 	inc	hl
      001E13 C6 0A                 7535 	add	a, #0x0a
      001E15 77                    7536 	ld	(hl), a
                                   7537 ;src/main.c:601: if (enemies[i].visible == 1) {
      001E16 F8 06                 7538 	ldhl	sp,	#6
      001E18 7E                    7539 	ld	a, (hl)
      001E19 3D                    7540 	dec	a
      001E1A 20 74                 7541 	jr	NZ, 00165$
                                   7542 ;src/main.c:602: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001E1C F8 0E                 7543 	ldhl	sp,	#14
      001E1E 7E                    7544 	ld	a, (hl)
      001E1F B7                    7545 	or	a, a
      001E20 20 48                 7546 	jr	NZ, 00146$
      001E22 F8 0B                 7547 	ldhl	sp,	#11
      001E24 3E AC                 7548 	ld	a, #0xac
      001E26 96                    7549 	sub	a, (hl)
      001E27 23                    7550 	inc	hl
      001E28 3E 00                 7551 	ld	a, #0x00
      001E2A 9E                    7552 	sbc	a, (hl)
      001E2B 3E 00                 7553 	ld	a, #0x00
      001E2D 57                    7554 	ld	d, a
      001E2E CB 7E                 7555 	bit	7, (hl)
      001E30 28 07                 7556 	jr	Z, 00433$
      001E32 CB 7A                 7557 	bit	7, d
      001E34 20 08                 7558 	jr	NZ, 00434$
      001E36 BF                    7559 	cp	a, a
      001E37 18 05                 7560 	jr	00434$
      001E39                       7561 00433$:
      001E39 CB 7A                 7562 	bit	7, d
      001E3B 28 01                 7563 	jr	Z, 00434$
      001E3D 37                    7564 	scf
      001E3E                       7565 00434$:
      001E3E 38 2A                 7566 	jr	C, 00146$
      001E40 F8 09                 7567 	ldhl	sp,#9
      001E42 2A                    7568 	ld	a, (hl+)
      001E43 5F                    7569 	ld	e, a
      001E44 56                    7570 	ld	d, (hl)
      001E45 1A                    7571 	ld	a, (de)
      001E46 6F                    7572 	ld	l, a
                                   7573 ;	spillPairReg hl
                                   7574 ;	spillPairReg hl
      001E47 13                    7575 	inc	de
      001E48 1A                    7576 	ld	a, (de)
      001E49 67                    7577 	ld	h, a
                                   7578 ;	spillPairReg hl
                                   7579 ;	spillPairReg hl
      001E4A CB 7C                 7580 	bit	7, h
      001E4C 20 1C                 7581 	jr	NZ, 00146$
      001E4E 5C                    7582 	ld	e, h
      001E4F 16 00                 7583 	ld	d, #0x00
      001E51 3E 98                 7584 	ld	a, #0x98
      001E53 BD                    7585 	cp	a, l
      001E54 3E 00                 7586 	ld	a, #0x00
      001E56 9C                    7587 	sbc	a, h
      001E57 CB 7B                 7588 	bit	7, e
      001E59 28 07                 7589 	jr	Z, 00435$
      001E5B CB 7A                 7590 	bit	7, d
      001E5D 20 08                 7591 	jr	NZ, 00436$
      001E5F BF                    7592 	cp	a, a
      001E60 18 05                 7593 	jr	00436$
      001E62                       7594 00435$:
      001E62 CB 7A                 7595 	bit	7, d
      001E64 28 01                 7596 	jr	Z, 00436$
      001E66 37                    7597 	scf
      001E67                       7598 00436$:
      001E67 D2r86r20              7599 	jp	NC, 00198$
      001E6A                       7600 00146$:
                                   7601 ;src/main.c:603: enemies[i].visible = 0;
      001E6A AF                    7602 	xor	a, a
      001E6B 02                    7603 	ld	(bc), a
                                   7604 ;src/main.c:604: set_sprite_tile(10+(i<<1), 0x7f);
      001E6C F8 0F                 7605 	ldhl	sp,	#15
                                   7606 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E6E 6E                    7607 	ld	l, (hl)
      001E6F 11r00r00              7608 	ld	de, #_shadow_OAM+0
                                   7609 ;	spillPairReg hl
                                   7610 ;	spillPairReg hl
      001E72 26 00                 7611 	ld	h, #0x00
                                   7612 ;	spillPairReg hl
                                   7613 ;	spillPairReg hl
      001E74 29                    7614 	add	hl, hl
      001E75 29                    7615 	add	hl, hl
      001E76 19                    7616 	add	hl, de
      001E77 23                    7617 	inc	hl
      001E78 23                    7618 	inc	hl
      001E79 36 7F                 7619 	ld	(hl), #0x7f
                                   7620 ;src/main.c:605: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001E7B F8 0D                 7621 	ldhl	sp,	#13
      001E7D 7E                    7622 	ld	a, (hl)
      001E7E C6 0B                 7623 	add	a, #0x0b
                                   7624 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E80 6F                    7625 	ld	l, a
      001E81 11r00r00              7626 	ld	de, #_shadow_OAM+0
                                   7627 ;	spillPairReg hl
                                   7628 ;	spillPairReg hl
      001E84 26 00                 7629 	ld	h, #0x00
                                   7630 ;	spillPairReg hl
                                   7631 ;	spillPairReg hl
      001E86 29                    7632 	add	hl, hl
      001E87 29                    7633 	add	hl, hl
      001E88 19                    7634 	add	hl, de
      001E89 23                    7635 	inc	hl
      001E8A 23                    7636 	inc	hl
      001E8B 36 7F                 7637 	ld	(hl), #0x7f
                                   7638 ;src/main.c:605: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001E8D C3r86r20              7639 	jp	00198$
      001E90                       7640 00165$:
                                   7641 ;src/main.c:609: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001E90 F8 0E                 7642 	ldhl	sp,	#14
      001E92 CB 46                 7643 	bit	0, (hl)
      001E94 C2r91r1F              7644 	jp	NZ, 00159$
      001E97 F8 0B                 7645 	ldhl	sp,	#11
      001E99 2A                    7646 	ld	a, (hl+)
      001E9A D6 AC                 7647 	sub	a, #0xac
      001E9C 7E                    7648 	ld	a, (hl)
      001E9D DE 00                 7649 	sbc	a, #0x00
      001E9F 56                    7650 	ld	d, (hl)
      001EA0 3E 00                 7651 	ld	a, #0x00
      001EA2 CB 7F                 7652 	bit	7,a
      001EA4 28 07                 7653 	jr	Z, 00437$
      001EA6 CB 7A                 7654 	bit	7, d
      001EA8 20 08                 7655 	jr	NZ, 00438$
      001EAA BF                    7656 	cp	a, a
      001EAB 18 05                 7657 	jr	00438$
      001EAD                       7658 00437$:
      001EAD CB 7A                 7659 	bit	7, d
      001EAF 28 01                 7660 	jr	Z, 00438$
      001EB1 37                    7661 	scf
      001EB2                       7662 00438$:
      001EB2 D2r91r1F              7663 	jp	NC, 00159$
      001EB5 F8 09                 7664 	ldhl	sp,#9
      001EB7 2A                    7665 	ld	a, (hl+)
      001EB8 5F                    7666 	ld	e, a
      001EB9 56                    7667 	ld	d, (hl)
      001EBA 1A                    7668 	ld	a, (de)
      001EBB 6F                    7669 	ld	l, a
                                   7670 ;	spillPairReg hl
                                   7671 ;	spillPairReg hl
      001EBC 13                    7672 	inc	de
      001EBD 1A                    7673 	ld	a, (de)
      001EBE 67                    7674 	ld	h, a
                                   7675 ;	spillPairReg hl
                                   7676 ;	spillPairReg hl
      001EBF 5C                    7677 	ld	e, h
      001EC0 AF                    7678 	xor	a, a
      001EC1 57                    7679 	ld	d, a
      001EC2 BD                    7680 	cp	a, l
      001EC3 9C                    7681 	sbc	a, h
      001EC4 CB 7B                 7682 	bit	7, e
      001EC6 28 07                 7683 	jr	Z, 00439$
      001EC8 CB 7A                 7684 	bit	7, d
      001ECA 20 08                 7685 	jr	NZ, 00440$
      001ECC BF                    7686 	cp	a, a
      001ECD 18 05                 7687 	jr	00440$
      001ECF                       7688 00439$:
      001ECF CB 7A                 7689 	bit	7, d
      001ED1 28 01                 7690 	jr	Z, 00440$
      001ED3 37                    7691 	scf
      001ED4                       7692 00440$:
      001ED4 D2r91r1F              7693 	jp	NC, 00159$
      001ED7 7D                    7694 	ld	a, l
      001ED8 D6 98                 7695 	sub	a, #0x98
      001EDA 7C                    7696 	ld	a, h
      001EDB 17                    7697 	rla
      001EDC 3F                    7698 	ccf
      001EDD 1F                    7699 	rra
      001EDE DE 80                 7700 	sbc	a, #0x80
      001EE0 D2r91r1F              7701 	jp	NC, 00159$
                                   7702 ;src/main.c:610: enemies[i].visible = 1;
      001EE3 3E 01                 7703 	ld	a, #0x01
      001EE5 02                    7704 	ld	(bc), a
                                   7705 ;src/main.c:611: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      001EE6 F8 02                 7706 	ldhl	sp,#2
      001EE8 2A                    7707 	ld	a, (hl+)
      001EE9 5F                    7708 	ld	e, a
      001EEA 56                    7709 	ld	d, (hl)
      001EEB 21 06 00              7710 	ld	hl, #0x0006
      001EEE 19                    7711 	add	hl, de
      001EEF 4D                    7712 	ld	c, l
      001EF0 44                    7713 	ld	b, h
      001EF1 0A                    7714 	ld	a, (bc)
      001EF2 F8 0E                 7715 	ldhl	sp,	#14
      001EF4 22                    7716 	ld	(hl+), a
      001EF5 4E                    7717 	ld	c, (hl)
                                   7718 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001EF6 F8 0B                 7719 	ldhl	sp,	#11
      001EF8 79                    7720 	ld	a, c
      001EF9 22                    7721 	ld	(hl+), a
      001EFA 36 00                 7722 	ld	(hl), #0x00
      001EFC 3E 02                 7723 	ld	a, #0x02
      001EFE                       7724 00441$:
      001EFE F8 0B                 7725 	ldhl	sp,	#11
      001F00 CB 26                 7726 	sla	(hl)
      001F02 23                    7727 	inc	hl
      001F03 CB 16                 7728 	rl	(hl)
      001F05 3D                    7729 	dec	a
      001F06 20 F6                 7730 	jr	NZ, 00441$
      001F08 2B                    7731 	dec	hl
      001F09 2A                    7732 	ld	a, (hl+)
      001F0A 5F                    7733 	ld	e, a
      001F0B 56                    7734 	ld	d, (hl)
      001F0C 21r00r00              7735 	ld	hl, #_shadow_OAM
      001F0F 19                    7736 	add	hl, de
      001F10 E5                    7737 	push	hl
      001F11 7D                    7738 	ld	a, l
      001F12 F8 0B                 7739 	ldhl	sp,	#11
      001F14 77                    7740 	ld	(hl), a
      001F15 E1                    7741 	pop	hl
      001F16 7C                    7742 	ld	a, h
      001F17 F8 0A                 7743 	ldhl	sp,	#10
      001F19 32                    7744 	ld	(hl-), a
      001F1A 2A                    7745 	ld	a, (hl+)
      001F1B 5F                    7746 	ld	e, a
      001F1C 56                    7747 	ld	d, (hl)
      001F1D 21 02 00              7748 	ld	hl, #0x0002
      001F20 19                    7749 	add	hl, de
      001F21 E5                    7750 	push	hl
      001F22 7D                    7751 	ld	a, l
      001F23 F8 0D                 7752 	ldhl	sp,	#13
      001F25 77                    7753 	ld	(hl), a
      001F26 E1                    7754 	pop	hl
      001F27 7C                    7755 	ld	a, h
      001F28 F8 0C                 7756 	ldhl	sp,	#12
      001F2A 32                    7757 	ld	(hl-), a
      001F2B 2A                    7758 	ld	a, (hl+)
      001F2C 5F                    7759 	ld	e, a
      001F2D 2A                    7760 	ld	a, (hl+)
      001F2E 23                    7761 	inc	hl
      001F2F 57                    7762 	ld	d, a
      001F30 7E                    7763 	ld	a, (hl)
      001F31 12                    7764 	ld	(de), a
                                   7765 ;src/main.c:612: if (enemies[i].spriteCount == 2) {
      001F32 F8 02                 7766 	ldhl	sp,#2
      001F34 2A                    7767 	ld	a, (hl+)
      001F35 5F                    7768 	ld	e, a
      001F36 56                    7769 	ld	d, (hl)
      001F37 21 08 00              7770 	ld	hl, #0x0008
      001F3A 19                    7771 	add	hl, de
      001F3B 4D                    7772 	ld	c, l
      001F3C 44                    7773 	ld	b, h
      001F3D 0A                    7774 	ld	a, (bc)
      001F3E D6 02                 7775 	sub	a, #0x02
      001F40 C2r86r20              7776 	jp	NZ,00198$
                                   7777 ;src/main.c:613: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001F43 F8 02                 7778 	ldhl	sp,#2
      001F45 2A                    7779 	ld	a, (hl+)
      001F46 5F                    7780 	ld	e, a
      001F47 56                    7781 	ld	d, (hl)
      001F48 21 07 00              7782 	ld	hl, #0x0007
      001F4B 19                    7783 	add	hl, de
      001F4C 4D                    7784 	ld	c, l
      001F4D 44                    7785 	ld	b, h
      001F4E 0A                    7786 	ld	a, (bc)
      001F4F F8 0F                 7787 	ldhl	sp,	#15
      001F51 32                    7788 	ld	(hl-), a
      001F52 2B                    7789 	dec	hl
      001F53 7E                    7790 	ld	a, (hl)
      001F54 C6 0B                 7791 	add	a, #0x0b
                                   7792 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001F56 22                    7793 	ld	(hl+), a
      001F57 36 00                 7794 	ld	(hl), #0x00
      001F59 3E 02                 7795 	ld	a, #0x02
      001F5B                       7796 00444$:
      001F5B F8 0D                 7797 	ldhl	sp,	#13
      001F5D CB 26                 7798 	sla	(hl)
      001F5F 23                    7799 	inc	hl
      001F60 CB 16                 7800 	rl	(hl)
      001F62 3D                    7801 	dec	a
      001F63 20 F6                 7802 	jr	NZ, 00444$
      001F65 2B                    7803 	dec	hl
      001F66 2A                    7804 	ld	a, (hl+)
      001F67 5F                    7805 	ld	e, a
      001F68 56                    7806 	ld	d, (hl)
      001F69 21r00r00              7807 	ld	hl, #_shadow_OAM
      001F6C 19                    7808 	add	hl, de
      001F6D E5                    7809 	push	hl
      001F6E 7D                    7810 	ld	a, l
      001F6F F8 0D                 7811 	ldhl	sp,	#13
      001F71 77                    7812 	ld	(hl), a
      001F72 E1                    7813 	pop	hl
      001F73 7C                    7814 	ld	a, h
      001F74 F8 0C                 7815 	ldhl	sp,	#12
      001F76 32                    7816 	ld	(hl-), a
      001F77 2A                    7817 	ld	a, (hl+)
      001F78 5F                    7818 	ld	e, a
      001F79 56                    7819 	ld	d, (hl)
      001F7A 21 02 00              7820 	ld	hl, #0x0002
      001F7D 19                    7821 	add	hl, de
      001F7E E5                    7822 	push	hl
      001F7F 7D                    7823 	ld	a, l
      001F80 F8 0F                 7824 	ldhl	sp,	#15
      001F82 77                    7825 	ld	(hl), a
      001F83 E1                    7826 	pop	hl
      001F84 7C                    7827 	ld	a, h
      001F85 F8 0E                 7828 	ldhl	sp,	#14
      001F87 32                    7829 	ld	(hl-), a
      001F88 2A                    7830 	ld	a, (hl+)
      001F89 5F                    7831 	ld	e, a
      001F8A 2A                    7832 	ld	a, (hl+)
      001F8B 57                    7833 	ld	d, a
      001F8C 7E                    7834 	ld	a, (hl)
      001F8D 12                    7835 	ld	(de), a
                                   7836 ;src/main.c:613: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001F8E C3r86r20              7837 	jp	00198$
      001F91                       7838 00159$:
                                   7839 ;src/main.c:616: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001F91 F8 07                 7840 	ldhl	sp,	#7
      001F93 2A                    7841 	ld	a, (hl+)
      001F94 D6 9C                 7842 	sub	a, #0x9c
      001F96 7E                    7843 	ld	a, (hl)
      001F97 DE FF                 7844 	sbc	a, #0xff
      001F99 56                    7845 	ld	d, (hl)
      001F9A 3E FF                 7846 	ld	a, #0xff
      001F9C CB 7F                 7847 	bit	7,a
      001F9E 28 07                 7848 	jr	Z, 00445$
      001FA0 CB 7A                 7849 	bit	7, d
      001FA2 20 08                 7850 	jr	NZ, 00446$
      001FA4 BF                    7851 	cp	a, a
      001FA5 18 05                 7852 	jr	00446$
      001FA7                       7853 00445$:
      001FA7 CB 7A                 7854 	bit	7, d
      001FA9 28 01                 7855 	jr	Z, 00446$
      001FAB 37                    7856 	scf
      001FAC                       7857 00446$:
      001FAC 38 4F                 7858 	jr	C, 00153$
      001FAE F8 0B                 7859 	ldhl	sp,	#11
      001FB0 3E 10                 7860 	ld	a, #0x10
      001FB2 96                    7861 	sub	a, (hl)
      001FB3 23                    7862 	inc	hl
      001FB4 3E 01                 7863 	ld	a, #0x01
      001FB6 9E                    7864 	sbc	a, (hl)
      001FB7 3E 01                 7865 	ld	a, #0x01
      001FB9 57                    7866 	ld	d, a
      001FBA CB 7E                 7867 	bit	7, (hl)
      001FBC 28 07                 7868 	jr	Z, 00447$
      001FBE CB 7A                 7869 	bit	7, d
      001FC0 20 08                 7870 	jr	NZ, 00448$
      001FC2 BF                    7871 	cp	a, a
      001FC3 18 05                 7872 	jr	00448$
      001FC5                       7873 00447$:
      001FC5 CB 7A                 7874 	bit	7, d
      001FC7 28 01                 7875 	jr	Z, 00448$
      001FC9 37                    7876 	scf
      001FCA                       7877 00448$:
      001FCA 38 31                 7878 	jr	C, 00153$
      001FCC F8 09                 7879 	ldhl	sp,#9
      001FCE 2A                    7880 	ld	a, (hl+)
      001FCF 5F                    7881 	ld	e, a
      001FD0 56                    7882 	ld	d, (hl)
      001FD1 1A                    7883 	ld	a, (de)
      001FD2 4F                    7884 	ld	c, a
      001FD3 13                    7885 	inc	de
      001FD4 1A                    7886 	ld	a, (de)
      001FD5 47                    7887 	ld	b, a
      001FD6 79                    7888 	ld	a, c
      001FD7 D6 9C                 7889 	sub	a, #0x9c
      001FD9 78                    7890 	ld	a, b
      001FDA 17                    7891 	rla
      001FDB 3F                    7892 	ccf
      001FDC 1F                    7893 	rra
      001FDD DE 7F                 7894 	sbc	a, #0x7f
      001FDF 38 1C                 7895 	jr	C, 00153$
      001FE1 58                    7896 	ld	e, b
      001FE2 16 00                 7897 	ld	d, #0x00
      001FE4 3E FC                 7898 	ld	a, #0xfc
      001FE6 B9                    7899 	cp	a, c
      001FE7 3E 00                 7900 	ld	a, #0x00
      001FE9 98                    7901 	sbc	a, b
      001FEA CB 7B                 7902 	bit	7, e
      001FEC 28 07                 7903 	jr	Z, 00449$
      001FEE CB 7A                 7904 	bit	7, d
      001FF0 20 08                 7905 	jr	NZ, 00450$
      001FF2 BF                    7906 	cp	a, a
      001FF3 18 05                 7907 	jr	00450$
      001FF5                       7908 00449$:
      001FF5 CB 7A                 7909 	bit	7, d
      001FF7 28 01                 7910 	jr	Z, 00450$
      001FF9 37                    7911 	scf
      001FFA                       7912 00450$:
      001FFA D2r86r20              7913 	jp	NC, 00198$
      001FFD                       7914 00153$:
                                   7915 ;src/main.c:617: enemies[i].alive = 0;
      001FFD F8 04                 7916 	ldhl	sp,	#4
      001FFF 2A                    7917 	ld	a,	(hl+)
      002000 66                    7918 	ld	h, (hl)
      002001 6F                    7919 	ld	l, a
      002002 36 00                 7920 	ld	(hl), #0x00
                                   7921 ;src/main.c:618: set_sprite_tile(10+(i<<1), 0x7f);
      002004 F8 0F                 7922 	ldhl	sp,	#15
                                   7923 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002006 3A                    7924 	ld	a, (hl-)
      002007 22                    7925 	ld	(hl+), a
      002008 36 00                 7926 	ld	(hl), #0x00
      00200A 3E 02                 7927 	ld	a, #0x02
      00200C                       7928 00451$:
      00200C F8 0E                 7929 	ldhl	sp,	#14
      00200E CB 26                 7930 	sla	(hl)
      002010 23                    7931 	inc	hl
      002011 CB 16                 7932 	rl	(hl)
      002013 3D                    7933 	dec	a
      002014 20 F6                 7934 	jr	NZ, 00451$
      002016 2B                    7935 	dec	hl
      002017 2A                    7936 	ld	a, (hl+)
      002018 5F                    7937 	ld	e, a
      002019 56                    7938 	ld	d, (hl)
      00201A 21r00r00              7939 	ld	hl, #_shadow_OAM
      00201D 19                    7940 	add	hl, de
      00201E E5                    7941 	push	hl
      00201F 7D                    7942 	ld	a, l
      002020 F8 0D                 7943 	ldhl	sp,	#13
      002022 77                    7944 	ld	(hl), a
      002023 E1                    7945 	pop	hl
      002024 7C                    7946 	ld	a, h
      002025 F8 0C                 7947 	ldhl	sp,	#12
      002027 32                    7948 	ld	(hl-), a
      002028 2A                    7949 	ld	a, (hl+)
      002029 5F                    7950 	ld	e, a
      00202A 56                    7951 	ld	d, (hl)
      00202B 21 02 00              7952 	ld	hl, #0x0002
      00202E 19                    7953 	add	hl, de
      00202F E5                    7954 	push	hl
      002030 7D                    7955 	ld	a, l
      002031 F8 10                 7956 	ldhl	sp,	#16
      002033 77                    7957 	ld	(hl), a
      002034 E1                    7958 	pop	hl
      002035 7C                    7959 	ld	a, h
      002036 F8 0F                 7960 	ldhl	sp,	#15
      002038 32                    7961 	ld	(hl-), a
      002039 2A                    7962 	ld	a,	(hl+)
      00203A 66                    7963 	ld	h, (hl)
      00203B 6F                    7964 	ld	l, a
      00203C 36 7F                 7965 	ld	(hl), #0x7f
                                   7966 ;src/main.c:619: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00203E F8 0D                 7967 	ldhl	sp,	#13
      002040 2A                    7968 	ld	a, (hl+)
      002041 23                    7969 	inc	hl
      002042 C6 0B                 7970 	add	a, #0x0b
      002044 77                    7971 	ld	(hl), a
                                   7972 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002045 3A                    7973 	ld	a, (hl-)
      002046 22                    7974 	ld	(hl+), a
      002047 36 00                 7975 	ld	(hl), #0x00
      002049 3E 02                 7976 	ld	a, #0x02
      00204B                       7977 00452$:
      00204B F8 0E                 7978 	ldhl	sp,	#14
      00204D CB 26                 7979 	sla	(hl)
      00204F 23                    7980 	inc	hl
      002050 CB 16                 7981 	rl	(hl)
      002052 3D                    7982 	dec	a
      002053 20 F6                 7983 	jr	NZ, 00452$
      002055 2B                    7984 	dec	hl
      002056 2A                    7985 	ld	a, (hl+)
      002057 5F                    7986 	ld	e, a
      002058 56                    7987 	ld	d, (hl)
      002059 21r00r00              7988 	ld	hl, #_shadow_OAM
      00205C 19                    7989 	add	hl, de
      00205D E5                    7990 	push	hl
      00205E 7D                    7991 	ld	a, l
      00205F F8 0E                 7992 	ldhl	sp,	#14
      002061 77                    7993 	ld	(hl), a
      002062 E1                    7994 	pop	hl
      002063 7C                    7995 	ld	a, h
      002064 F8 0D                 7996 	ldhl	sp,	#13
      002066 32                    7997 	ld	(hl-), a
      002067 2A                    7998 	ld	a, (hl+)
      002068 5F                    7999 	ld	e, a
      002069 56                    8000 	ld	d, (hl)
      00206A 21 02 00              8001 	ld	hl, #0x0002
      00206D 19                    8002 	add	hl, de
      00206E E5                    8003 	push	hl
      00206F 7D                    8004 	ld	a, l
      002070 F8 10                 8005 	ldhl	sp,	#16
      002072 77                    8006 	ld	(hl), a
      002073 E1                    8007 	pop	hl
      002074 7C                    8008 	ld	a, h
      002075 F8 0F                 8009 	ldhl	sp,	#15
      002077 32                    8010 	ld	(hl-), a
      002078 2A                    8011 	ld	a,	(hl+)
      002079 66                    8012 	ld	h, (hl)
      00207A 6F                    8013 	ld	l, a
      00207B 36 7F                 8014 	ld	(hl), #0x7f
                                   8015 ;src/main.c:620: initEnemy(i);
      00207D F8 01                 8016 	ldhl	sp,	#1
      00207F 7E                    8017 	ld	a, (hl)
      002080 F5                    8018 	push	af
      002081 33                    8019 	inc	sp
      002082 CDr84r16              8020 	call	_initEnemy
      002085 33                    8021 	inc	sp
      002086                       8022 00198$:
                                   8023 ;src/main.c:626: }
      002086 E8 10                 8024 	add	sp, #16
      002088 C9                    8025 	ret
                                   8026 ;src/main.c:631: void move() {
                                   8027 ;	---------------------------------
                                   8028 ; Function move
                                   8029 ; ---------------------------------
      002089                       8030 _move::
      002089 E8 F8                 8031 	add	sp, #-8
                                   8032 ;src/main.c:634: if (joydata & J_A) {
      00208B FAr1Cr01              8033 	ld	a, (#_joydata)
      00208E CB 67                 8034 	bit	4, a
      002090 28 16                 8035 	jr	Z, 00102$
                                   8036 ;src/main.c:635: xSpeed += xDir + xDir + xDir;
      002092 21r0Er01              8037 	ld	hl, #_xDir
      002095 7E                    8038 	ld	a, (hl)
      002096 87                    8039 	add	a, a
      002097 86                    8040 	add	a, (hl)
      002098 21r10r01              8041 	ld	hl, #_xSpeed
      00209B 86                    8042 	add	a, (hl)
      00209C 77                    8043 	ld	(hl), a
                                   8044 ;src/main.c:636: ySpeed += yDir + yDir + yDir;
      00209D 21r0Fr01              8045 	ld	hl, #_yDir
      0020A0 7E                    8046 	ld	a, (hl)
      0020A1 87                    8047 	add	a, a
      0020A2 86                    8048 	add	a, (hl)
      0020A3 21r11r01              8049 	ld	hl, #_ySpeed
      0020A6 86                    8050 	add	a, (hl)
      0020A7 77                    8051 	ld	(hl), a
      0020A8                       8052 00102$:
                                   8053 ;src/main.c:640: xSpeed = clamp(xSpeed, -100, 100);
      0020A8 21r10r01              8054 	ld	hl, #_xSpeed
      0020AB 4E                    8055 	ld	c, (hl)
                                   8056 ;src/main.c:357: return (value < min) ? min : (value > max) ? max : value;
      0020AC 79                    8057 	ld	a, c
      0020AD EE 80                 8058 	xor	a, #0x80
      0020AF D6 1C                 8059 	sub	a, #0x1c
      0020B1 30 04                 8060 	jr	NC, 00165$
      0020B3 0E 9C                 8061 	ld	c, #0x9c
      0020B5 18 19                 8062 	jr	00166$
      0020B7                       8063 00165$:
      0020B7 59                    8064 	ld	e, c
      0020B8 3E 64                 8065 	ld	a,#0x64
      0020BA 57                    8066 	ld	d,a
      0020BB 91                    8067 	sub	a, c
      0020BC CB 7B                 8068 	bit	7, e
      0020BE 28 07                 8069 	jr	Z, 00342$
      0020C0 CB 7A                 8070 	bit	7, d
      0020C2 20 08                 8071 	jr	NZ, 00343$
      0020C4 BF                    8072 	cp	a, a
      0020C5 18 05                 8073 	jr	00343$
      0020C7                       8074 00342$:
      0020C7 CB 7A                 8075 	bit	7, d
      0020C9 28 01                 8076 	jr	Z, 00343$
      0020CB 37                    8077 	scf
      0020CC                       8078 00343$:
      0020CC 30 02                 8079 	jr	NC, 00167$
      0020CE 0E 64                 8080 	ld	c, #0x64
      0020D0                       8081 00167$:
      0020D0                       8082 00166$:
      0020D0 21r10r01              8083 	ld	hl, #_xSpeed
      0020D3 71                    8084 	ld	(hl), c
                                   8085 ;src/main.c:641: ySpeed = clamp(ySpeed, -100, 100);
      0020D4 21r11r01              8086 	ld	hl, #_ySpeed
      0020D7 4E                    8087 	ld	c, (hl)
                                   8088 ;src/main.c:357: return (value < min) ? min : (value > max) ? max : value;
      0020D8 79                    8089 	ld	a, c
      0020D9 EE 80                 8090 	xor	a, #0x80
      0020DB D6 1C                 8091 	sub	a, #0x1c
      0020DD 30 04                 8092 	jr	NC, 00169$
      0020DF 0E 9C                 8093 	ld	c, #0x9c
      0020E1 18 19                 8094 	jr	00170$
      0020E3                       8095 00169$:
      0020E3 59                    8096 	ld	e, c
      0020E4 3E 64                 8097 	ld	a,#0x64
      0020E6 57                    8098 	ld	d,a
      0020E7 91                    8099 	sub	a, c
      0020E8 CB 7B                 8100 	bit	7, e
      0020EA 28 07                 8101 	jr	Z, 00344$
      0020EC CB 7A                 8102 	bit	7, d
      0020EE 20 08                 8103 	jr	NZ, 00345$
      0020F0 BF                    8104 	cp	a, a
      0020F1 18 05                 8105 	jr	00345$
      0020F3                       8106 00344$:
      0020F3 CB 7A                 8107 	bit	7, d
      0020F5 28 01                 8108 	jr	Z, 00345$
      0020F7 37                    8109 	scf
      0020F8                       8110 00345$:
      0020F8 30 02                 8111 	jr	NC, 00171$
      0020FA 0E 64                 8112 	ld	c, #0x64
      0020FC                       8113 00171$:
      0020FC                       8114 00170$:
      0020FC 21r11r01              8115 	ld	hl, #_ySpeed
      0020FF 71                    8116 	ld	(hl), c
                                   8117 ;src/main.c:643: xOverflow = 0;
      002100 AF                    8118 	xor	a, a
      002101 21r1Er01              8119 	ld	hl, #_xOverflow
      002104 22                    8120 	ld	(hl+), a
      002105 77                    8121 	ld	(hl), a
                                   8122 ;src/main.c:644: yOverflow = 0;
      002106 AF                    8123 	xor	a, a
      002107 21r20r01              8124 	ld	hl, #_yOverflow
      00210A 22                    8125 	ld	(hl+), a
      00210B 77                    8126 	ld	(hl), a
                                   8127 ;src/main.c:649: uint8_t xCollisionPoint = playerDrawX; 
      00210C 21r16r01              8128 	ld	hl, #_playerDrawX
      00210F 4E                    8129 	ld	c, (hl)
                                   8130 ;src/main.c:652: xCollisionPoint = playerDrawX +8; //right edge
      002110 46                    8131 	ld	b, (hl)
                                   8132 ;src/main.c:651: if (xSpeed > 0) {
      002111 21r10r01              8133 	ld	hl, #_xSpeed
      002114 5E                    8134 	ld	e, (hl)
      002115 AF                    8135 	xor	a, a
      002116 57                    8136 	ld	d, a
      002117 96                    8137 	sub	a, (hl)
      002118 CB 7B                 8138 	bit	7, e
      00211A 28 07                 8139 	jr	Z, 00346$
      00211C CB 7A                 8140 	bit	7, d
      00211E 20 08                 8141 	jr	NZ, 00347$
      002120 BF                    8142 	cp	a, a
      002121 18 05                 8143 	jr	00347$
      002123                       8144 00346$:
      002123 CB 7A                 8145 	bit	7, d
      002125 28 01                 8146 	jr	Z, 00347$
      002127 37                    8147 	scf
      002128                       8148 00347$:
      002128 30 04                 8149 	jr	NC, 00104$
                                   8150 ;src/main.c:652: xCollisionPoint = playerDrawX +8; //right edge
      00212A 78                    8151 	ld	a, b
      00212B C6 08                 8152 	add	a, #0x08
      00212D 4F                    8153 	ld	c, a
      00212E                       8154 00104$:
                                   8155 ;src/main.c:654: if (xSpeed < 0) {
      00212E FAr10r01              8156 	ld	a, (#_xSpeed)
      002131 CB 7F                 8157 	bit	7, a
      002133 28 04                 8158 	jr	Z, 00106$
                                   8159 ;src/main.c:655: xCollisionPoint = playerDrawX -8; //left edge
      002135 78                    8160 	ld	a, b
      002136 C6 F8                 8161 	add	a, #0xf8
      002138 4F                    8162 	ld	c, a
      002139                       8163 00106$:
                                   8164 ;src/main.c:659: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      002139 06 00                 8165 	ld	b, #0x00
      00213B 79                    8166 	ld	a, c
      00213C 21r18r01              8167 	ld	hl, #_bgX
      00213F 86                    8168 	add	a, (hl)
      002140 23                    8169 	inc	hl
      002141 4F                    8170 	ld	c, a
      002142 78                    8171 	ld	a, b
      002143 8E                    8172 	adc	a, (hl)
      002144 47                    8173 	ld	b, a
      002145 CB 28                 8174 	sra	b
      002147 CB 19                 8175 	rr	c
      002149 CB 28                 8176 	sra	b
      00214B CB 19                 8177 	rr	c
      00214D CB 28                 8178 	sra	b
      00214F CB 19                 8179 	rr	c
      002151 11 20 00              8180 	ld	de, #0x0020
      002154 D5                    8181 	push	de
      002155 C5                    8182 	push	bc
      002156 CDr00r00              8183 	call	__modsint
      002159 E8 04                 8184 	add	sp, #4
                                   8185 ;src/main.c:663: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      00215B 21r17r01              8186 	ld	hl, #_playerDrawY
      00215E 4E                    8187 	ld	c, (hl)
      00215F 06 00                 8188 	ld	b, #0x00
      002161 79                    8189 	ld	a, c
      002162 21r1Ar01              8190 	ld	hl, #_bgY
      002165 86                    8191 	add	a, (hl)
      002166 23                    8192 	inc	hl
      002167 4F                    8193 	ld	c, a
      002168 78                    8194 	ld	a, b
      002169 8E                    8195 	adc	a, (hl)
      00216A 47                    8196 	ld	b, a
      00216B CB 28                 8197 	sra	b
      00216D CB 19                 8198 	rr	c
      00216F CB 28                 8199 	sra	b
      002171 CB 19                 8200 	rr	c
      002173 CB 28                 8201 	sra	b
      002175 CB 19                 8202 	rr	c
      002177 D5                    8203 	push	de
      002178 21 20 00              8204 	ld	hl, #0x0020
      00217B E5                    8205 	push	hl
      00217C C5                    8206 	push	bc
      00217D CDr00r00              8207 	call	__modsint
      002180 E8 04                 8208 	add	sp, #4
      002182 6B                    8209 	ld	l, e
                                   8210 ;	spillPairReg hl
                                   8211 ;	spillPairReg hl
                                   8212 ;	spillPairReg hl
                                   8213 ;	spillPairReg hl
      002183 D1                    8214 	pop	de
                                   8215 ;src/main.c:666: uint16_t ind = 32*bgindY + bgindX;
      002184 26 00                 8216 	ld	h, #0x00
                                   8217 ;	spillPairReg hl
                                   8218 ;	spillPairReg hl
      002186 29                    8219 	add	hl, hl
      002187 29                    8220 	add	hl, hl
      002188 29                    8221 	add	hl, hl
      002189 29                    8222 	add	hl, hl
      00218A 29                    8223 	add	hl, hl
      00218B 19                    8224 	add	hl, de
      00218C 5D                    8225 	ld	e, l
      00218D 54                    8226 	ld	d, h
                                   8227 ;src/main.c:667: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      00218E 0E 01                 8228 	ld	c, #0x01
                                   8229 ;src/main.c:668: for (uint8_t i=0; i<BLANKSIZE; i++) {
      002190 21r07r06              8230 	ld	hl, #_marsbackground
      002193 19                    8231 	add	hl, de
      002194 46                    8232 	ld	b, (hl)
      002195 1E 00                 8233 	ld	e, #0x00
      002197                       8234 00158$:
      002197 FArA9r10              8235 	ld	a, (#_BLANKSIZE)
      00219A F8 02                 8236 	ldhl	sp,	#2
      00219C 77                    8237 	ld	(hl), a
      00219D 7B                    8238 	ld	a, e
      00219E 96                    8239 	sub	a, (hl)
      00219F 30 11                 8240 	jr	NC, 00109$
                                   8241 ;src/main.c:669: if (marsbackground[ind] == BLANK[i] ) {
      0021A1 21rAAr10              8242 	ld	hl, #_BLANK
      0021A4 16 00                 8243 	ld	d, #0x00
      0021A6 19                    8244 	add	hl, de
      0021A7 56                    8245 	ld	d, (hl)
      0021A8 78                    8246 	ld	a, b
                                   8247 ;src/main.c:670: result = 0;
      0021A9 92                    8248 	sub	a,d
      0021AA 20 03                 8249 	jr	NZ, 00159$
      0021AC 4F                    8250 	ld	c,a
                                   8251 ;src/main.c:671: break;
      0021AD 18 03                 8252 	jr	00109$
      0021AF                       8253 00159$:
                                   8254 ;src/main.c:668: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0021AF 1C                    8255 	inc	e
      0021B0 18 E5                 8256 	jr	00158$
      0021B2                       8257 00109$:
                                   8258 ;src/main.c:675: if (result == 0) {
      0021B2 79                    8259 	ld	a, c
      0021B3 B7                    8260 	or	a, a
      0021B4 C2r82r22              8261 	jp	NZ, 00114$
                                   8262 ;src/main.c:676: playerX+=xSpeed;
      0021B7 FAr10r01              8263 	ld	a, (#_xSpeed)
      0021BA 4F                    8264 	ld	c, a
      0021BB 07                    8265 	rlca
      0021BC 9F                    8266 	sbc	a, a
      0021BD 47                    8267 	ld	b, a
      0021BE 21r12r01              8268 	ld	hl, #_playerX
      0021C1 6E                    8269 	ld	l, (hl)
                                   8270 ;	spillPairReg hl
                                   8271 ;	spillPairReg hl
      0021C2 FAr13r01              8272 	ld	a, (_playerX + 1)
      0021C5 67                    8273 	ld	h, a
                                   8274 ;	spillPairReg hl
                                   8275 ;	spillPairReg hl
      0021C6 09                    8276 	add	hl, bc
      0021C7 4D                    8277 	ld	c, l
      0021C8 44                    8278 	ld	b, h
      0021C9 21r12r01              8279 	ld	hl, #_playerX
      0021CC 79                    8280 	ld	a, c
      0021CD 22                    8281 	ld	(hl+), a
                                   8282 ;src/main.c:678: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      0021CE 78                    8283 	ld	a, b
      0021CF 32                    8284 	ld	(hl-), a
      0021D0 2A                    8285 	ld	a, (hl+)
      0021D1 4F                    8286 	ld	c, a
      0021D2 46                    8287 	ld	b, (hl)
      0021D3 79                    8288 	ld	a, c
      0021D4 D6 80                 8289 	sub	a, #0x80
      0021D6 78                    8290 	ld	a, b
      0021D7 DE 08                 8291 	sbc	a, #0x08
      0021D9 30 05                 8292 	jr	NC, 00173$
      0021DB 01 80 08              8293 	ld	bc, #0x0880
      0021DE 18 0B                 8294 	jr	00174$
      0021E0                       8295 00173$:
      0021E0 3E 80                 8296 	ld	a, #0x80
      0021E2 B9                    8297 	cp	a, c
      0021E3 3E 0B                 8298 	ld	a, #0x0b
      0021E5 98                    8299 	sbc	a, b
      0021E6 30 03                 8300 	jr	NC, 00175$
      0021E8 01 80 0B              8301 	ld	bc, #0x0b80
      0021EB                       8302 00175$:
      0021EB                       8303 00174$:
      0021EB 59                    8304 	ld	e,c
      0021EC 50                    8305 	ld	d,b
                                   8306 ;src/main.c:680: xOverflow = (playerX - limitedPlayerX);
      0021ED FAr12r01              8307 	ld	a, (#_playerX)
      0021F0 93                    8308 	sub	a, e
      0021F1 EAr1Er01              8309 	ld	(#_xOverflow),a
      0021F4 FAr13r01              8310 	ld	a, (#_playerX + 1)
      0021F7 9A                    8311 	sbc	a, d
      0021F8 21r1Fr01              8312 	ld	hl, #_xOverflow + 1
                                   8313 ;src/main.c:681: if (xOverflow >= 0) {
      0021FB 32                    8314 	ld	(hl-), a
      0021FC 6E                    8315 	ld	l, (hl)
                                   8316 ;	spillPairReg hl
                                   8317 ;	spillPairReg hl
      0021FD FAr1Fr01              8318 	ld	a, (_xOverflow + 1)
                                   8319 ;	spillPairReg hl
                                   8320 ;	spillPairReg hl
      002200 CB 7F                 8321 	bit	7,a
      002202 20 22                 8322 	jr	NZ, 00111$
                                   8323 ;src/main.c:682: xOverflow = xOverflow >> 5;
      002204 21r1Fr01              8324 	ld	hl, #_xOverflow + 1
      002207 CB 2E                 8325 	sra	(hl)
      002209 2B                    8326 	dec	hl
      00220A CB 1E                 8327 	rr	(hl)
      00220C 23                    8328 	inc	hl
      00220D CB 2E                 8329 	sra	(hl)
      00220F 2B                    8330 	dec	hl
      002210 CB 1E                 8331 	rr	(hl)
      002212 23                    8332 	inc	hl
      002213 CB 2E                 8333 	sra	(hl)
      002215 2B                    8334 	dec	hl
      002216 CB 1E                 8335 	rr	(hl)
      002218 23                    8336 	inc	hl
      002219 CB 2E                 8337 	sra	(hl)
      00221B 2B                    8338 	dec	hl
      00221C CB 1E                 8339 	rr	(hl)
      00221E 23                    8340 	inc	hl
      00221F CB 2E                 8341 	sra	(hl)
      002221 2B                    8342 	dec	hl
      002222 CB 1E                 8343 	rr	(hl)
      002224 18 25                 8344 	jr	00112$
      002226                       8345 00111$:
                                   8346 ;src/main.c:685: xOverflow = -((-xOverflow) >> 5);
      002226 AF                    8347 	xor	a, a
      002227 21r1Er01              8348 	ld	hl, #_xOverflow
      00222A 96                    8349 	sub	a, (hl)
      00222B 23                    8350 	inc	hl
      00222C 5F                    8351 	ld	e, a
      00222D 9F                    8352 	sbc	a, a
      00222E 96                    8353 	sub	a, (hl)
      00222F 2B                    8354 	dec	hl
      002230 57                    8355 	ld	d, a
      002231 CB 2A                 8356 	sra	d
      002233 CB 1B                 8357 	rr	e
      002235 CB 2A                 8358 	sra	d
      002237 CB 1B                 8359 	rr	e
      002239 CB 2A                 8360 	sra	d
      00223B CB 1B                 8361 	rr	e
      00223D CB 2A                 8362 	sra	d
      00223F CB 1B                 8363 	rr	e
      002241 CB 2A                 8364 	sra	d
      002243 CB 1B                 8365 	rr	e
      002245 AF                    8366 	xor	a, a
      002246 93                    8367 	sub	a, e
      002247 22                    8368 	ld	(hl+), a
      002248 9F                    8369 	sbc	a, a
      002249 92                    8370 	sub	a, d
      00224A 77                    8371 	ld	(hl), a
      00224B                       8372 00112$:
                                   8373 ;src/main.c:687: bgX += xOverflow;
      00224B FAr18r01              8374 	ld	a, (#_bgX)
      00224E 21r1Er01              8375 	ld	hl, #_xOverflow
      002251 86                    8376 	add	a, (hl)
      002252 21r18r01              8377 	ld	hl, #_bgX
      002255 22                    8378 	ld	(hl+), a
      002256 7E                    8379 	ld	a, (hl)
      002257 21r1Fr01              8380 	ld	hl, #_xOverflow + 1
      00225A 8E                    8381 	adc	a, (hl)
      00225B EAr19r01              8382 	ld	(#_bgX + 1),a
                                   8383 ;src/main.c:688: playerX = limitedPlayerX;
      00225E 21r12r01              8384 	ld	hl, #_playerX
      002261 79                    8385 	ld	a, c
      002262 22                    8386 	ld	(hl+), a
                                   8387 ;src/main.c:689: playerDrawX=playerX >> 5;
      002263 78                    8388 	ld	a, b
      002264 32                    8389 	ld	(hl-), a
      002265 2A                    8390 	ld	a, (hl+)
      002266 4F                    8391 	ld	c, a
      002267 46                    8392 	ld	b, (hl)
      002268 CB 38                 8393 	srl	b
      00226A CB 19                 8394 	rr	c
      00226C CB 38                 8395 	srl	b
      00226E CB 19                 8396 	rr	c
      002270 CB 38                 8397 	srl	b
      002272 CB 19                 8398 	rr	c
      002274 CB 38                 8399 	srl	b
      002276 CB 19                 8400 	rr	c
      002278 CB 38                 8401 	srl	b
      00227A CB 19                 8402 	rr	c
      00227C 21r16r01              8403 	ld	hl, #_playerDrawX
      00227F 71                    8404 	ld	(hl), c
      002280 18 05                 8405 	jr	00115$
      002282                       8406 00114$:
                                   8407 ;src/main.c:697: xSpeed = 0;
      002282 21r10r01              8408 	ld	hl, #_xSpeed
      002285 36 00                 8409 	ld	(hl), #0x00
      002287                       8410 00115$:
                                   8411 ;src/main.c:705: uint8_t yCollisionPoint = playerDrawY; 
      002287 FAr17r01              8412 	ld	a, (#_playerDrawY)
      00228A F8 07                 8413 	ldhl	sp,	#7
      00228C 77                    8414 	ld	(hl), a
                                   8415 ;src/main.c:708: yCollisionPoint = playerDrawY +8; //bottom edge
      00228D 21r17r01              8416 	ld	hl, #_playerDrawY
      002290 4E                    8417 	ld	c, (hl)
                                   8418 ;src/main.c:707: if (ySpeed > 0) {
      002291 21r11r01              8419 	ld	hl, #_ySpeed
      002294 5E                    8420 	ld	e, (hl)
      002295 AF                    8421 	xor	a, a
      002296 57                    8422 	ld	d, a
      002297 96                    8423 	sub	a, (hl)
      002298 CB 7B                 8424 	bit	7, e
      00229A 28 07                 8425 	jr	Z, 00350$
      00229C CB 7A                 8426 	bit	7, d
      00229E 20 08                 8427 	jr	NZ, 00351$
      0022A0 BF                    8428 	cp	a, a
      0022A1 18 05                 8429 	jr	00351$
      0022A3                       8430 00350$:
      0022A3 CB 7A                 8431 	bit	7, d
      0022A5 28 01                 8432 	jr	Z, 00351$
      0022A7 37                    8433 	scf
      0022A8                       8434 00351$:
      0022A8 30 06                 8435 	jr	NC, 00117$
                                   8436 ;src/main.c:708: yCollisionPoint = playerDrawY +8; //bottom edge
      0022AA 79                    8437 	ld	a, c
      0022AB C6 08                 8438 	add	a, #0x08
      0022AD F8 07                 8439 	ldhl	sp,	#7
      0022AF 77                    8440 	ld	(hl), a
      0022B0                       8441 00117$:
                                   8442 ;src/main.c:710: if (ySpeed < 0) {
      0022B0 FAr11r01              8443 	ld	a, (#_ySpeed)
      0022B3 CB 7F                 8444 	bit	7, a
      0022B5 28 06                 8445 	jr	Z, 00119$
                                   8446 ;src/main.c:711: yCollisionPoint = playerDrawY -8; //top edge, 
      0022B7 79                    8447 	ld	a, c
      0022B8 C6 F8                 8448 	add	a, #0xf8
      0022BA F8 07                 8449 	ldhl	sp,	#7
      0022BC 77                    8450 	ld	(hl), a
      0022BD                       8451 00119$:
                                   8452 ;src/main.c:715: bgindX = ((playerDrawX + bgX) >> 3)%32;
      0022BD FAr16r01              8453 	ld	a, (#_playerDrawX)
      0022C0 0E 00                 8454 	ld	c, #0x00
      0022C2 F8 03                 8455 	ldhl	sp,	#3
      0022C4 22                    8456 	ld	(hl+), a
      0022C5 79                    8457 	ld	a, c
      0022C6 32                    8458 	ld	(hl-), a
      0022C7 2A                    8459 	ld	a, (hl+)
      0022C8 5F                    8460 	ld	e, a
      0022C9 56                    8461 	ld	d, (hl)
      0022CA 21r18r01              8462 	ld	hl, #_bgX
      0022CD 2A                    8463 	ld	a,	(hl+)
      0022CE 66                    8464 	ld	h, (hl)
      0022CF 6F                    8465 	ld	l, a
      0022D0 19                    8466 	add	hl, de
      0022D1 E5                    8467 	push	hl
      0022D2 7D                    8468 	ld	a, l
      0022D3 F8 07                 8469 	ldhl	sp,	#7
      0022D5 77                    8470 	ld	(hl), a
      0022D6 E1                    8471 	pop	hl
      0022D7 7C                    8472 	ld	a, h
      0022D8 F8 06                 8473 	ldhl	sp,	#6
      0022DA 77                    8474 	ld	(hl), a
      0022DB CB 2E                 8475 	sra	(hl)
      0022DD 2B                    8476 	dec	hl
      0022DE CB 1E                 8477 	rr	(hl)
      0022E0 23                    8478 	inc	hl
      0022E1 CB 2E                 8479 	sra	(hl)
      0022E3 2B                    8480 	dec	hl
      0022E4 CB 1E                 8481 	rr	(hl)
      0022E6 23                    8482 	inc	hl
      0022E7 CB 2E                 8483 	sra	(hl)
      0022E9 2B                    8484 	dec	hl
      0022EA CB 1E                 8485 	rr	(hl)
      0022EC 11 20 00              8486 	ld	de, #0x0020
      0022EF D5                    8487 	push	de
      0022F0 2A                    8488 	ld	a, (hl+)
      0022F1 5F                    8489 	ld	e, a
      0022F2 56                    8490 	ld	d, (hl)
      0022F3 D5                    8491 	push	de
      0022F4 CDr00r00              8492 	call	__modsint
      0022F7 E8 04                 8493 	add	sp, #4
      0022F9 F8 05                 8494 	ldhl	sp,	#5
      0022FB 7B                    8495 	ld	a, e
      0022FC 22                    8496 	ld	(hl+), a
      0022FD 72                    8497 	ld	(hl), d
      0022FE F8 05                 8498 	ldhl	sp,	#5
      002300 7E                    8499 	ld	a, (hl)
      002301 F8 00                 8500 	ldhl	sp,	#0
      002303 77                    8501 	ld	(hl), a
      002304 F8 06                 8502 	ldhl	sp,	#6
      002306 7E                    8503 	ld	a, (hl)
      002307 F8 01                 8504 	ldhl	sp,	#1
      002309 77                    8505 	ld	(hl), a
                                   8506 ;src/main.c:718: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      00230A F8 07                 8507 	ldhl	sp,	#7
      00230C 3A                    8508 	ld	a, (hl-)
      00230D 22                    8509 	ld	(hl+), a
      00230E AF                    8510 	xor	a, a
      00230F 32                    8511 	ld	(hl-), a
      002310 3A                    8512 	ld	a, (hl-)
      002311 2B                    8513 	dec	hl
      002312 77                    8514 	ld	(hl), a
      002313 F8 07                 8515 	ldhl	sp,	#7
      002315 3A                    8516 	ld	a, (hl-)
      002316 2B                    8517 	dec	hl
      002317 32                    8518 	ld	(hl-), a
      002318 2A                    8519 	ld	a, (hl+)
      002319 5F                    8520 	ld	e, a
      00231A 56                    8521 	ld	d, (hl)
      00231B 21r1Ar01              8522 	ld	hl, #_bgY
      00231E 2A                    8523 	ld	a,	(hl+)
      00231F 66                    8524 	ld	h, (hl)
      002320 6F                    8525 	ld	l, a
      002321 19                    8526 	add	hl, de
      002322 E5                    8527 	push	hl
      002323 7D                    8528 	ld	a, l
      002324 F8 08                 8529 	ldhl	sp,	#8
      002326 77                    8530 	ld	(hl), a
      002327 E1                    8531 	pop	hl
      002328 7C                    8532 	ld	a, h
      002329 F8 07                 8533 	ldhl	sp,	#7
      00232B 77                    8534 	ld	(hl), a
      00232C CB 2E                 8535 	sra	(hl)
      00232E 2B                    8536 	dec	hl
      00232F CB 1E                 8537 	rr	(hl)
      002331 23                    8538 	inc	hl
      002332 CB 2E                 8539 	sra	(hl)
      002334 2B                    8540 	dec	hl
      002335 CB 1E                 8541 	rr	(hl)
      002337 23                    8542 	inc	hl
      002338 CB 2E                 8543 	sra	(hl)
      00233A 2B                    8544 	dec	hl
      00233B CB 1E                 8545 	rr	(hl)
      00233D 11 20 00              8546 	ld	de, #0x0020
      002340 D5                    8547 	push	de
      002341 2A                    8548 	ld	a, (hl+)
      002342 5F                    8549 	ld	e, a
      002343 56                    8550 	ld	d, (hl)
      002344 D5                    8551 	push	de
      002345 CDr00r00              8552 	call	__modsint
      002348 E8 04                 8553 	add	sp, #4
      00234A F8 06                 8554 	ldhl	sp,	#6
      00234C 7B                    8555 	ld	a, e
      00234D 22                    8556 	ld	(hl+), a
      00234E 72                    8557 	ld	(hl), d
      00234F F8 06                 8558 	ldhl	sp,	#6
      002351 2A                    8559 	ld	a, (hl+)
      002352 77                    8560 	ld	(hl), a
                                   8561 ;src/main.c:721: ind = 32*bgindY + bgindX;
      002353 3A                    8562 	ld	a, (hl-)
      002354 22                    8563 	ld	(hl+), a
      002355 36 00                 8564 	ld	(hl), #0x00
      002357 3E 05                 8565 	ld	a, #0x05
      002359                       8566 00352$:
      002359 F8 06                 8567 	ldhl	sp,	#6
      00235B CB 26                 8568 	sla	(hl)
      00235D 23                    8569 	inc	hl
      00235E CB 16                 8570 	rl	(hl)
      002360 3D                    8571 	dec	a
      002361 20 F6                 8572 	jr	NZ, 00352$
      002363 2B                    8573 	dec	hl
      002364 3A                    8574 	ld	a, (hl-)
      002365 2B                    8575 	dec	hl
      002366 77                    8576 	ld	(hl), a
      002367 F8 07                 8577 	ldhl	sp,	#7
      002369 3A                    8578 	ld	a, (hl-)
      00236A 2B                    8579 	dec	hl
      00236B 77                    8580 	ld	(hl), a
      00236C D1                    8581 	pop	de
      00236D D5                    8582 	push	de
      00236E 3A                    8583 	ld	a, (hl-)
      00236F 6E                    8584 	ld	l, (hl)
      002370 67                    8585 	ld	h, a
      002371 19                    8586 	add	hl, de
      002372 E5                    8587 	push	hl
      002373 7D                    8588 	ld	a, l
      002374 F8 08                 8589 	ldhl	sp,	#8
      002376 77                    8590 	ld	(hl), a
      002377 E1                    8591 	pop	hl
      002378 7C                    8592 	ld	a, h
      002379 F8 07                 8593 	ldhl	sp,	#7
      00237B 77                    8594 	ld	(hl), a
                                   8595 ;src/main.c:722: result = 1;
      00237C F8 03                 8596 	ldhl	sp,	#3
      00237E 36 01                 8597 	ld	(hl), #0x01
                                   8598 ;src/main.c:723: for (uint8_t j=0; j<BLANKSIZE; j++) {
      002380 F8 06                 8599 	ldhl	sp,#6
      002382 2A                    8600 	ld	a, (hl+)
      002383 5F                    8601 	ld	e, a
      002384 56                    8602 	ld	d, (hl)
      002385 21r07r06              8603 	ld	hl, #_marsbackground
      002388 19                    8604 	add	hl, de
      002389 4D                    8605 	ld	c, l
      00238A 44                    8606 	ld	b, h
      00238B 0A                    8607 	ld	a, (bc)
      00238C F8 04                 8608 	ldhl	sp,	#4
      00238E 77                    8609 	ld	(hl), a
      00238F F8 07                 8610 	ldhl	sp,	#7
      002391 36 00                 8611 	ld	(hl), #0x00
      002393                       8612 00161$:
      002393 F8 07                 8613 	ldhl	sp,	#7
      002395 7E                    8614 	ld	a, (hl)
      002396 F8 02                 8615 	ldhl	sp,	#2
      002398 96                    8616 	sub	a, (hl)
      002399 30 29                 8617 	jr	NC, 00122$
                                   8618 ;src/main.c:724: if (marsbackground[ind] == BLANK[j] ) {
      00239B 11rAAr10              8619 	ld	de, #_BLANK
      00239E F8 07                 8620 	ldhl	sp,	#7
      0023A0 6E                    8621 	ld	l, (hl)
      0023A1 26 00                 8622 	ld	h, #0x00
      0023A3 19                    8623 	add	hl, de
      0023A4 E5                    8624 	push	hl
      0023A5 7D                    8625 	ld	a, l
      0023A6 F8 07                 8626 	ldhl	sp,	#7
      0023A8 77                    8627 	ld	(hl), a
      0023A9 E1                    8628 	pop	hl
      0023AA 7C                    8629 	ld	a, h
      0023AB F8 06                 8630 	ldhl	sp,	#6
      0023AD 32                    8631 	ld	(hl-), a
      0023AE 2A                    8632 	ld	a, (hl+)
      0023AF 5F                    8633 	ld	e, a
      0023B0 3A                    8634 	ld	a, (hl-)
      0023B1 2B                    8635 	dec	hl
      0023B2 57                    8636 	ld	d, a
      0023B3 1A                    8637 	ld	a, (de)
      0023B4 4F                    8638 	ld	c, a
      0023B5 7E                    8639 	ld	a, (hl)
      0023B6 91                    8640 	sub	a, c
      0023B7 20 06                 8641 	jr	NZ, 00162$
                                   8642 ;src/main.c:725: result = 0;
      0023B9 F8 03                 8643 	ldhl	sp,	#3
      0023BB 36 00                 8644 	ld	(hl), #0x00
                                   8645 ;src/main.c:726: break;
      0023BD 18 05                 8646 	jr	00122$
      0023BF                       8647 00162$:
                                   8648 ;src/main.c:723: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0023BF F8 07                 8649 	ldhl	sp,	#7
      0023C1 34                    8650 	inc	(hl)
      0023C2 18 CF                 8651 	jr	00161$
      0023C4                       8652 00122$:
                                   8653 ;src/main.c:730: if (result == 0) {
      0023C4 F8 03                 8654 	ldhl	sp,	#3
      0023C6 7E                    8655 	ld	a, (hl)
      0023C7 B7                    8656 	or	a, a
      0023C8 C2r92r24              8657 	jp	NZ, 00127$
                                   8658 ;src/main.c:731: playerY += ySpeed;
      0023CB FAr11r01              8659 	ld	a, (#_ySpeed)
      0023CE 4F                    8660 	ld	c, a
      0023CF 07                    8661 	rlca
      0023D0 9F                    8662 	sbc	a, a
      0023D1 21r14r01              8663 	ld	hl, #_playerY
      0023D4 5E                    8664 	ld	e, (hl)
      0023D5 23                    8665 	inc	hl
      0023D6 56                    8666 	ld	d, (hl)
      0023D7 2B                    8667 	dec	hl
      0023D8 47                    8668 	ld	b, a
      0023D9 79                    8669 	ld	a, c
      0023DA 83                    8670 	add	a, e
      0023DB 4F                    8671 	ld	c, a
      0023DC 78                    8672 	ld	a, b
      0023DD 8A                    8673 	adc	a, d
      0023DE 47                    8674 	ld	b, a
      0023DF 79                    8675 	ld	a, c
      0023E0 22                    8676 	ld	(hl+), a
                                   8677 ;src/main.c:733: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      0023E1 78                    8678 	ld	a, b
      0023E2 32                    8679 	ld	(hl-), a
      0023E3 2A                    8680 	ld	a, (hl+)
      0023E4 5F                    8681 	ld	e, a
      0023E5 56                    8682 	ld	d, (hl)
      0023E6 7A                    8683 	ld	a, d
      0023E7 D6 06                 8684 	sub	a, #0x06
      0023E9 30 05                 8685 	jr	NC, 00177$
      0023EB 11 00 06              8686 	ld	de, #0x0600
      0023EE 18 0B                 8687 	jr	00178$
      0023F0                       8688 00177$:
      0023F0 3E C0                 8689 	ld	a, #0xc0
      0023F2 BB                    8690 	cp	a, e
      0023F3 3E 09                 8691 	ld	a, #0x09
      0023F5 9A                    8692 	sbc	a, d
      0023F6 30 03                 8693 	jr	NC, 00179$
      0023F8 11 C0 09              8694 	ld	de, #0x09c0
      0023FB                       8695 00179$:
      0023FB                       8696 00178$:
      0023FB 4B                    8697 	ld	c, e
      0023FC 42                    8698 	ld	b, d
                                   8699 ;src/main.c:735: yOverflow = (playerY - limitedPlayerY);
      0023FD FAr14r01              8700 	ld	a, (#_playerY)
      002400 93                    8701 	sub	a, e
      002401 EAr20r01              8702 	ld	(#_yOverflow),a
      002404 FAr15r01              8703 	ld	a, (#_playerY + 1)
      002407 9A                    8704 	sbc	a, d
      002408 21r21r01              8705 	ld	hl, #_yOverflow + 1
                                   8706 ;src/main.c:736: if (yOverflow >= 0) {
      00240B 32                    8707 	ld	(hl-), a
      00240C 6E                    8708 	ld	l, (hl)
                                   8709 ;	spillPairReg hl
                                   8710 ;	spillPairReg hl
      00240D FAr21r01              8711 	ld	a, (_yOverflow + 1)
                                   8712 ;	spillPairReg hl
                                   8713 ;	spillPairReg hl
      002410 CB 7F                 8714 	bit	7,a
      002412 20 22                 8715 	jr	NZ, 00124$
                                   8716 ;src/main.c:737: yOverflow = yOverflow >> 5;
      002414 21r21r01              8717 	ld	hl, #_yOverflow + 1
      002417 CB 2E                 8718 	sra	(hl)
      002419 2B                    8719 	dec	hl
      00241A CB 1E                 8720 	rr	(hl)
      00241C 23                    8721 	inc	hl
      00241D CB 2E                 8722 	sra	(hl)
      00241F 2B                    8723 	dec	hl
      002420 CB 1E                 8724 	rr	(hl)
      002422 23                    8725 	inc	hl
      002423 CB 2E                 8726 	sra	(hl)
      002425 2B                    8727 	dec	hl
      002426 CB 1E                 8728 	rr	(hl)
      002428 23                    8729 	inc	hl
      002429 CB 2E                 8730 	sra	(hl)
      00242B 2B                    8731 	dec	hl
      00242C CB 1E                 8732 	rr	(hl)
      00242E 23                    8733 	inc	hl
      00242F CB 2E                 8734 	sra	(hl)
      002431 2B                    8735 	dec	hl
      002432 CB 1E                 8736 	rr	(hl)
      002434 18 25                 8737 	jr	00125$
      002436                       8738 00124$:
                                   8739 ;src/main.c:740: yOverflow = -((-yOverflow) >> 5);
      002436 AF                    8740 	xor	a, a
      002437 21r20r01              8741 	ld	hl, #_yOverflow
      00243A 96                    8742 	sub	a, (hl)
      00243B 23                    8743 	inc	hl
      00243C 5F                    8744 	ld	e, a
      00243D 9F                    8745 	sbc	a, a
      00243E 96                    8746 	sub	a, (hl)
      00243F 2B                    8747 	dec	hl
      002440 57                    8748 	ld	d, a
      002441 CB 2A                 8749 	sra	d
      002443 CB 1B                 8750 	rr	e
      002445 CB 2A                 8751 	sra	d
      002447 CB 1B                 8752 	rr	e
      002449 CB 2A                 8753 	sra	d
      00244B CB 1B                 8754 	rr	e
      00244D CB 2A                 8755 	sra	d
      00244F CB 1B                 8756 	rr	e
      002451 CB 2A                 8757 	sra	d
      002453 CB 1B                 8758 	rr	e
      002455 AF                    8759 	xor	a, a
      002456 93                    8760 	sub	a, e
      002457 22                    8761 	ld	(hl+), a
      002458 9F                    8762 	sbc	a, a
      002459 92                    8763 	sub	a, d
      00245A 77                    8764 	ld	(hl), a
      00245B                       8765 00125$:
                                   8766 ;src/main.c:742: bgY += yOverflow;
      00245B FAr1Ar01              8767 	ld	a, (#_bgY)
      00245E 21r20r01              8768 	ld	hl, #_yOverflow
      002461 86                    8769 	add	a, (hl)
      002462 21r1Ar01              8770 	ld	hl, #_bgY
      002465 22                    8771 	ld	(hl+), a
      002466 7E                    8772 	ld	a, (hl)
      002467 21r21r01              8773 	ld	hl, #_yOverflow + 1
      00246A 8E                    8774 	adc	a, (hl)
      00246B EAr1Br01              8775 	ld	(#_bgY + 1),a
                                   8776 ;src/main.c:743: playerY = limitedPlayerY;
      00246E 21r14r01              8777 	ld	hl, #_playerY
      002471 79                    8778 	ld	a, c
      002472 22                    8779 	ld	(hl+), a
                                   8780 ;src/main.c:744: playerDrawY=playerY >> 5;
      002473 78                    8781 	ld	a, b
      002474 32                    8782 	ld	(hl-), a
      002475 2A                    8783 	ld	a, (hl+)
      002476 4F                    8784 	ld	c, a
      002477 46                    8785 	ld	b, (hl)
      002478 CB 38                 8786 	srl	b
      00247A CB 19                 8787 	rr	c
      00247C CB 38                 8788 	srl	b
      00247E CB 19                 8789 	rr	c
      002480 CB 38                 8790 	srl	b
      002482 CB 19                 8791 	rr	c
      002484 CB 38                 8792 	srl	b
      002486 CB 19                 8793 	rr	c
      002488 CB 38                 8794 	srl	b
      00248A CB 19                 8795 	rr	c
      00248C 21r17r01              8796 	ld	hl, #_playerDrawY
      00248F 71                    8797 	ld	(hl), c
      002490 18 05                 8798 	jr	00128$
      002492                       8799 00127$:
                                   8800 ;src/main.c:749: ySpeed = 0;
      002492 21r11r01              8801 	ld	hl, #_ySpeed
      002495 36 00                 8802 	ld	(hl), #0x00
      002497                       8803 00128$:
                                   8804 ;src/main.c:649: uint8_t xCollisionPoint = playerDrawX; 
      002497 FAr16r01              8805 	ld	a, (#_playerDrawX)
      00249A F8 07                 8806 	ldhl	sp,	#7
      00249C 77                    8807 	ld	(hl), a
                                   8808 ;src/main.c:708: yCollisionPoint = playerDrawY +8; //bottom edge
      00249D FAr17r01              8809 	ld	a, (#_playerDrawY)
      0024A0 C6 08                 8810 	add	a, #0x08
      0024A2 F8 06                 8811 	ldhl	sp,	#6
      0024A4 77                    8812 	ld	(hl), a
                                   8813 ;src/main.c:752: if (xDir >= 0) {
      0024A5 FAr0Er01              8814 	ld	a, (#_xDir)
      0024A8 CB 7F                 8815 	bit	7, a
      0024AA 20 2A                 8816 	jr	NZ, 00130$
                                   8817 ;src/main.c:753: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   8818 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   8819 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0024AC 11r00r00              8820 	ld	de, #_shadow_OAM
      0024AF F8 06                 8821 	ldhl	sp,	#6
      0024B1 2A                    8822 	ld	a, (hl+)
      0024B2 12                    8823 	ld	(de), a
      0024B3 11r01r00              8824 	ld	de, #(_shadow_OAM + 1)
      0024B6 7E                    8825 	ld	a, (hl)
      0024B7 12                    8826 	ld	(de), a
                                   8827 ;src/main.c:755: move_sprite(1, playerDrawX +8, playerDrawY +8);
      0024B8 FAr17r01              8828 	ld	a, (#_playerDrawY)
      0024BB F8 07                 8829 	ldhl	sp,	#7
      0024BD 77                    8830 	ld	(hl), a
      0024BE 3A                    8831 	ld	a, (hl-)
      0024BF C6 08                 8832 	add	a, #0x08
      0024C1 77                    8833 	ld	(hl), a
      0024C2 FAr16r01              8834 	ld	a, (#_playerDrawX)
      0024C5 C6 08                 8835 	add	a, #0x08
      0024C7 F8 07                 8836 	ldhl	sp,	#7
                                   8837 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   8838 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0024C9 32                    8839 	ld	(hl-), a
      0024CA 11r04r00              8840 	ld	de, #(_shadow_OAM + 4)
      0024CD 2A                    8841 	ld	a, (hl+)
      0024CE 12                    8842 	ld	(de), a
      0024CF 11r05r00              8843 	ld	de, #(_shadow_OAM + 5)
      0024D2 7E                    8844 	ld	a, (hl)
      0024D3 12                    8845 	ld	(de), a
                                   8846 ;src/main.c:755: move_sprite(1, playerDrawX +8, playerDrawY +8);
      0024D4 18 28                 8847 	jr	00131$
      0024D6                       8848 00130$:
                                   8849 ;src/main.c:758: move_sprite(1, playerDrawX , playerDrawY +8);
                                   8850 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0024D6 01r04r00              8851 	ld	bc, #(_shadow_OAM + 4)
                                   8852 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0024D9 F8 06                 8853 	ldhl	sp,	#6
      0024DB 2A                    8854 	ld	a, (hl+)
      0024DC 02                    8855 	ld	(bc), a
      0024DD 03                    8856 	inc	bc
      0024DE 7E                    8857 	ld	a, (hl)
      0024DF 02                    8858 	ld	(bc), a
                                   8859 ;src/main.c:760: move_sprite(0, playerDrawX +8, playerDrawY +8);
      0024E0 FAr17r01              8860 	ld	a, (#_playerDrawY)
      0024E3 F8 07                 8861 	ldhl	sp,	#7
      0024E5 77                    8862 	ld	(hl), a
      0024E6 3A                    8863 	ld	a, (hl-)
      0024E7 C6 08                 8864 	add	a, #0x08
      0024E9 77                    8865 	ld	(hl), a
      0024EA FAr16r01              8866 	ld	a, (#_playerDrawX)
      0024ED F8 07                 8867 	ldhl	sp,	#7
      0024EF 77                    8868 	ld	(hl), a
      0024F0 7E                    8869 	ld	a, (hl)
      0024F1 C6 08                 8870 	add	a, #0x08
                                   8871 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   8872 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0024F3 32                    8873 	ld	(hl-), a
      0024F4 11r00r00              8874 	ld	de, #_shadow_OAM
      0024F7 2A                    8875 	ld	a, (hl+)
      0024F8 12                    8876 	ld	(de), a
      0024F9 11r01r00              8877 	ld	de, #(_shadow_OAM + 1)
      0024FC 7E                    8878 	ld	a, (hl)
      0024FD 12                    8879 	ld	(de), a
                                   8880 ;src/main.c:760: move_sprite(0, playerDrawX +8, playerDrawY +8);
      0024FE                       8881 00131$:
                                   8882 ;src/main.c:765: if (bgX >= 256) {
      0024FE 21r18r01              8883 	ld	hl, #_bgX
      002501 2A                    8884 	ld	a, (hl+)
      002502 4F                    8885 	ld	c, a
      002503 46                    8886 	ld	b, (hl)
      002504 78                    8887 	ld	a, b
      002505 EE 80                 8888 	xor	a, #0x80
      002507 D6 81                 8889 	sub	a, #0x81
      002509 38 0F                 8890 	jr	C, 00133$
                                   8891 ;src/main.c:766: bgX = bgX % 256;
      00250B AF                    8892 	xor	a, a
      00250C 3C                    8893 	inc	a
      00250D F5                    8894 	push	af
      00250E C5                    8895 	push	bc
      00250F CDr00r00              8896 	call	__modsint
      002512 E8 04                 8897 	add	sp, #4
      002514 21r18r01              8898 	ld	hl, #_bgX
      002517 7B                    8899 	ld	a, e
      002518 22                    8900 	ld	(hl+), a
      002519 72                    8901 	ld	(hl), d
      00251A                       8902 00133$:
                                   8903 ;src/main.c:768: if (bgX < 0) {
      00251A 21r18r01              8904 	ld	hl, #_bgX
      00251D 2A                    8905 	ld	a, (hl+)
      00251E 4F                    8906 	ld	c, a
      00251F 46                    8907 	ld	b, (hl)
      002520 CB 78                 8908 	bit	7, b
      002522 28 15                 8909 	jr	Z, 00135$
                                   8910 ;src/main.c:769: bgX = 255 - (bgX % 256);
      002524 AF                    8911 	xor	a, a
      002525 3C                    8912 	inc	a
      002526 F5                    8913 	push	af
      002527 C5                    8914 	push	bc
      002528 CDr00r00              8915 	call	__modsint
      00252B E8 04                 8916 	add	sp, #4
      00252D 3E FF                 8917 	ld	a, #0xff
      00252F 93                    8918 	sub	a, e
      002530 4F                    8919 	ld	c, a
      002531 9F                    8920 	sbc	a, a
      002532 92                    8921 	sub	a, d
      002533 21r18r01              8922 	ld	hl, #_bgX
      002536 71                    8923 	ld	(hl), c
      002537 23                    8924 	inc	hl
      002538 77                    8925 	ld	(hl), a
      002539                       8926 00135$:
                                   8927 ;src/main.c:771: if (bgY >= 256) {
      002539 21r1Ar01              8928 	ld	hl, #_bgY
      00253C 2A                    8929 	ld	a, (hl+)
      00253D 4F                    8930 	ld	c, a
      00253E 46                    8931 	ld	b, (hl)
      00253F 78                    8932 	ld	a, b
      002540 EE 80                 8933 	xor	a, #0x80
      002542 D6 81                 8934 	sub	a, #0x81
      002544 38 0F                 8935 	jr	C, 00137$
                                   8936 ;src/main.c:772: bgY = bgY % 256;
      002546 AF                    8937 	xor	a, a
      002547 3C                    8938 	inc	a
      002548 F5                    8939 	push	af
      002549 C5                    8940 	push	bc
      00254A CDr00r00              8941 	call	__modsint
      00254D E8 04                 8942 	add	sp, #4
      00254F 21r1Ar01              8943 	ld	hl, #_bgY
      002552 7B                    8944 	ld	a, e
      002553 22                    8945 	ld	(hl+), a
      002554 72                    8946 	ld	(hl), d
      002555                       8947 00137$:
                                   8948 ;src/main.c:774: if (bgY < 0) {
      002555 21r1Ar01              8949 	ld	hl, #_bgY
      002558 2A                    8950 	ld	a, (hl+)
      002559 4F                    8951 	ld	c, a
      00255A 46                    8952 	ld	b, (hl)
      00255B CB 78                 8953 	bit	7, b
      00255D 28 15                 8954 	jr	Z, 00139$
                                   8955 ;src/main.c:775: bgY = 255 - (bgY % 256);
      00255F AF                    8956 	xor	a, a
      002560 3C                    8957 	inc	a
      002561 F5                    8958 	push	af
      002562 C5                    8959 	push	bc
      002563 CDr00r00              8960 	call	__modsint
      002566 E8 04                 8961 	add	sp, #4
      002568 3E FF                 8962 	ld	a, #0xff
      00256A 93                    8963 	sub	a, e
      00256B 4F                    8964 	ld	c, a
      00256C 9F                    8965 	sbc	a, a
      00256D 92                    8966 	sub	a, d
      00256E 21r1Ar01              8967 	ld	hl, #_bgY
      002571 71                    8968 	ld	(hl), c
      002572 23                    8969 	inc	hl
      002573 77                    8970 	ld	(hl), a
      002574                       8971 00139$:
                                   8972 ;src/main.c:778: move_bkg(bgX, bgY);
      002574 21r1Ar01              8973 	ld	hl, #_bgY
      002577 4E                    8974 	ld	c, (hl)
      002578 FAr18r01              8975 	ld	a, (#_bgX)
      00257B E0r00                 8976 	ldh	(_SCX_REG + 0), a
                                   8977 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00257D 79                    8978 	ld	a, c
      00257E E0r00                 8979 	ldh	(_SCY_REG + 0), a
                                   8980 ;src/main.c:781: if (ySpeed > 0) ySpeed--;
      002580 21r11r01              8981 	ld	hl, #_ySpeed
      002583 5E                    8982 	ld	e, (hl)
      002584 AF                    8983 	xor	a, a
      002585 57                    8984 	ld	d, a
      002586 96                    8985 	sub	a, (hl)
      002587 CB 7B                 8986 	bit	7, e
      002589 28 07                 8987 	jr	Z, 00355$
      00258B CB 7A                 8988 	bit	7, d
      00258D 20 08                 8989 	jr	NZ, 00356$
      00258F BF                    8990 	cp	a, a
      002590 18 05                 8991 	jr	00356$
      002592                       8992 00355$:
      002592 CB 7A                 8993 	bit	7, d
      002594 28 01                 8994 	jr	Z, 00356$
      002596 37                    8995 	scf
      002597                       8996 00356$:
      002597 30 04                 8997 	jr	NC, 00141$
      002599 21r11r01              8998 	ld	hl, #_ySpeed
      00259C 35                    8999 	dec	(hl)
      00259D                       9000 00141$:
                                   9001 ;src/main.c:782: if (ySpeed < 0) ySpeed++;
      00259D 21r11r01              9002 	ld	hl, #_ySpeed
      0025A0 CB 7E                 9003 	bit	7, (hl)
      0025A2 28 01                 9004 	jr	Z, 00143$
      0025A4 34                    9005 	inc	(hl)
      0025A5                       9006 00143$:
                                   9007 ;src/main.c:783: if (xSpeed > 0) xSpeed--;
      0025A5 21r10r01              9008 	ld	hl, #_xSpeed
      0025A8 5E                    9009 	ld	e, (hl)
      0025A9 AF                    9010 	xor	a, a
      0025AA 57                    9011 	ld	d, a
      0025AB 96                    9012 	sub	a, (hl)
      0025AC CB 7B                 9013 	bit	7, e
      0025AE 28 07                 9014 	jr	Z, 00357$
      0025B0 CB 7A                 9015 	bit	7, d
      0025B2 20 08                 9016 	jr	NZ, 00358$
      0025B4 BF                    9017 	cp	a, a
      0025B5 18 05                 9018 	jr	00358$
      0025B7                       9019 00357$:
      0025B7 CB 7A                 9020 	bit	7, d
      0025B9 28 01                 9021 	jr	Z, 00358$
      0025BB 37                    9022 	scf
      0025BC                       9023 00358$:
      0025BC 30 04                 9024 	jr	NC, 00145$
      0025BE 21r10r01              9025 	ld	hl, #_xSpeed
      0025C1 35                    9026 	dec	(hl)
      0025C2                       9027 00145$:
                                   9028 ;src/main.c:784: if (xSpeed < 0) xSpeed++;
      0025C2 21r10r01              9029 	ld	hl, #_xSpeed
      0025C5 CB 7E                 9030 	bit	7, (hl)
      0025C7 28 01                 9031 	jr	Z, 00163$
      0025C9 34                    9032 	inc	(hl)
      0025CA                       9033 00163$:
                                   9034 ;src/main.c:788: }
      0025CA E8 08                 9035 	add	sp, #8
      0025CC C9                    9036 	ret
                                   9037 ;src/main.c:790: void takeDamage(int16_t amount) {
                                   9038 ;	---------------------------------
                                   9039 ; Function takeDamage
                                   9040 ; ---------------------------------
      0025CD                       9041 _takeDamage::
      0025CD 3B                    9042 	dec	sp
                                   9043 ;src/main.c:791: if (amount > shield) {
      0025CE FArF6r00              9044 	ld	a, (#_shield)
      0025D1 4F                    9045 	ld	c, a
      0025D2 07                    9046 	rlca
      0025D3 9F                    9047 	sbc	a, a
      0025D4 47                    9048 	ld	b, a
                                   9049 ;src/main.c:793: hull -= (amount - shield);
      0025D5 F8 03                 9050 	ldhl	sp,	#3
      0025D7 7E                    9051 	ld	a, (hl)
      0025D8 F8 00                 9052 	ldhl	sp,	#0
      0025DA 77                    9053 	ld	(hl), a
                                   9054 ;src/main.c:791: if (amount > shield) {
      0025DB F8 03                 9055 	ldhl	sp,	#3
      0025DD 79                    9056 	ld	a, c
      0025DE 96                    9057 	sub	a, (hl)
      0025DF 23                    9058 	inc	hl
      0025E0 78                    9059 	ld	a, b
      0025E1 9E                    9060 	sbc	a, (hl)
      0025E2 78                    9061 	ld	a, b
      0025E3 57                    9062 	ld	d, a
      0025E4 CB 7E                 9063 	bit	7, (hl)
      0025E6 28 07                 9064 	jr	Z, 00111$
      0025E8 CB 7A                 9065 	bit	7, d
      0025EA 20 08                 9066 	jr	NZ, 00112$
      0025EC BF                    9067 	cp	a, a
      0025ED 18 05                 9068 	jr	00112$
      0025EF                       9069 00111$:
      0025EF CB 7A                 9070 	bit	7, d
      0025F1 28 01                 9071 	jr	Z, 00112$
      0025F3 37                    9072 	scf
      0025F4                       9073 00112$:
      0025F4 30 10                 9074 	jr	NC, 00102$
                                   9075 ;src/main.c:792: shield = 0;
      0025F6 21rF6r00              9076 	ld	hl, #_shield
      0025F9 36 00                 9077 	ld	(hl), #0x00
                                   9078 ;src/main.c:793: hull -= (amount - shield);
      0025FB FArF5r00              9079 	ld	a, (#_hull)
      0025FE F8 00                 9080 	ldhl	sp,	#0
      002600 96                    9081 	sub	a, (hl)
      002601 EArF5r00              9082 	ld	(#_hull),a
      002604 18 09                 9083 	jr	00104$
      002606                       9084 00102$:
                                   9085 ;src/main.c:796: shield -= amount;
      002606 FArF6r00              9086 	ld	a, (#_shield)
      002609 F8 00                 9087 	ldhl	sp,	#0
      00260B 96                    9088 	sub	a, (hl)
      00260C EArF6r00              9089 	ld	(#_shield),a
      00260F                       9090 00104$:
                                   9091 ;src/main.c:798: }
      00260F 33                    9092 	inc	sp
      002610 C9                    9093 	ret
                                   9094 ;src/main.c:800: void spawnPickup(int16_t x, int16_t y) {
                                   9095 ;	---------------------------------
                                   9096 ; Function spawnPickup
                                   9097 ; ---------------------------------
      002611                       9098 _spawnPickup::
                                   9099 ;src/main.c:801: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      002611 CDr00r00              9100 	call	_rand
      002614 7B                    9101 	ld	a, e
      002615 E6 0F                 9102 	and	a, #0x0f
      002617 C0                    9103 	ret	NZ
                                   9104 ;src/main.c:802: if (spawn == 0) {
                                   9105 ;src/main.c:803: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      002618 CDr00r00              9106 	call	_rand
      00261B 7B                    9107 	ld	a, e
      00261C E6 03                 9108 	and	a, #0x03
                                   9109 ;src/main.c:804: if (type == 0) {
      00261E 5F                    9110 	ld	e,a
      00261F B7                    9111 	or	a, a
      002620 20 13                 9112 	jr	NZ, 00106$
                                   9113 ;src/main.c:805: pickup = health;
      002622 11 09 00              9114 	ld	de, #0x0009
      002625 D5                    9115 	push	de
      002626 11r1Ar0C              9116 	ld	de, #_health
      002629 D5                    9117 	push	de
      00262A 11rF9r00              9118 	ld	de, #_pickup
      00262D D5                    9119 	push	de
      00262E CDr00r00              9120 	call	___memcpy
      002631 E8 06                 9121 	add	sp, #6
      002633 18 31                 9122 	jr	00107$
      002635                       9123 00106$:
                                   9124 ;src/main.c:807: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      002635 1D                    9125 	dec	e
      002636 20 1D                 9126 	jr	NZ, 00102$
      002638 21rC3r10              9127 	ld	hl, #_MAXGUNLEVEL
      00263B 4E                    9128 	ld	c, (hl)
      00263C FAr23r01              9129 	ld	a, (#_gunLevel)
      00263F 91                    9130 	sub	a, c
      002640 30 13                 9131 	jr	NC, 00102$
                                   9132 ;src/main.c:808: pickup = upgrade;
      002642 11 09 00              9133 	ld	de, #0x0009
      002645 D5                    9134 	push	de
      002646 11r08r0C              9135 	ld	de, #_upgrade
      002649 D5                    9136 	push	de
      00264A 11rF9r00              9137 	ld	de, #_pickup
      00264D D5                    9138 	push	de
      00264E CDr00r00              9139 	call	___memcpy
      002651 E8 06                 9140 	add	sp, #6
      002653 18 11                 9141 	jr	00107$
      002655                       9142 00102$:
                                   9143 ;src/main.c:811: pickup = ammo;
      002655 01r11r0C              9144 	ld	bc, #_ammo
      002658 11rF9r00              9145 	ld	de, #_pickup
      00265B 21 09 00              9146 	ld	hl, #0x0009
      00265E E5                    9147 	push	hl
      00265F C5                    9148 	push	bc
      002660 D5                    9149 	push	de
      002661 CDr00r00              9150 	call	___memcpy
      002664 E8 06                 9151 	add	sp, #6
      002666                       9152 00107$:
                                   9153 ;src/main.c:813: pickup.active = 1;
      002666 21rFEr00              9154 	ld	hl, #(_pickup + 5)
      002669 36 01                 9155 	ld	(hl), #0x01
                                   9156 ;src/main.c:815: pickup.x = x;
      00266B 11rFAr00              9157 	ld	de, #(_pickup + 1)
      00266E F8 02                 9158 	ldhl	sp,	#2
      002670 2A                    9159 	ld	a, (hl+)
      002671 12                    9160 	ld	(de), a
      002672 13                    9161 	inc	de
                                   9162 ;src/main.c:816: pickup.y = y;
      002673 2A                    9163 	ld	a, (hl+)
      002674 12                    9164 	ld	(de), a
      002675 11rFCr00              9165 	ld	de, #(_pickup + 3)
      002678 2A                    9166 	ld	a, (hl+)
      002679 12                    9167 	ld	(de), a
      00267A 13                    9168 	inc	de
      00267B 7E                    9169 	ld	a, (hl)
      00267C 12                    9170 	ld	(de), a
                                   9171 ;src/main.c:818: set_sprite_tile(3, pickup.tile); //0x7f
      00267D 21r01r01              9172 	ld	hl, #(_pickup + 8)
      002680 4E                    9173 	ld	c, (hl)
                                   9174 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002681 21r0Er00              9175 	ld	hl, #(_shadow_OAM + 14)
      002684 71                    9176 	ld	(hl), c
                                   9177 ;src/main.c:818: set_sprite_tile(3, pickup.tile); //0x7f
                                   9178 ;src/main.c:824: }
      002685 C9                    9179 	ret
                                   9180 ;src/main.c:826: void killEnemy(uint8_t i) {
                                   9181 ;	---------------------------------
                                   9182 ; Function killEnemy
                                   9183 ; ---------------------------------
      002686                       9184 _killEnemy::
      002686 E8 FC                 9185 	add	sp, #-4
                                   9186 ;src/main.c:827: set_sprite_tile(10+(i<<1), 0x7f);
      002688 F8 06                 9187 	ldhl	sp,	#6
      00268A 7E                    9188 	ld	a, (hl)
      00268B 87                    9189 	add	a, a
      00268C 4F                    9190 	ld	c, a
      00268D C6 0A                 9191 	add	a, #0x0a
                                   9192 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00268F 6F                    9193 	ld	l, a
      002690 11r00r00              9194 	ld	de, #_shadow_OAM+0
                                   9195 ;	spillPairReg hl
                                   9196 ;	spillPairReg hl
      002693 26 00                 9197 	ld	h, #0x00
                                   9198 ;	spillPairReg hl
                                   9199 ;	spillPairReg hl
      002695 29                    9200 	add	hl, hl
      002696 29                    9201 	add	hl, hl
      002697 19                    9202 	add	hl, de
      002698 23                    9203 	inc	hl
      002699 23                    9204 	inc	hl
      00269A 36 7F                 9205 	ld	(hl), #0x7f
                                   9206 ;src/main.c:828: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00269C 79                    9207 	ld	a, c
      00269D C6 0B                 9208 	add	a, #0x0b
                                   9209 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00269F 6F                    9210 	ld	l, a
      0026A0 01r00r00              9211 	ld	bc, #_shadow_OAM+0
                                   9212 ;	spillPairReg hl
                                   9213 ;	spillPairReg hl
      0026A3 26 00                 9214 	ld	h, #0x00
                                   9215 ;	spillPairReg hl
                                   9216 ;	spillPairReg hl
      0026A5 29                    9217 	add	hl, hl
      0026A6 29                    9218 	add	hl, hl
      0026A7 09                    9219 	add	hl, bc
      0026A8 23                    9220 	inc	hl
      0026A9 23                    9221 	inc	hl
      0026AA 36 7F                 9222 	ld	(hl), #0x7f
                                   9223 ;src/main.c:830: spawnPickup(enemies[i].x, enemies[i].y);
      0026AC F8 06                 9224 	ldhl	sp,	#6
      0026AE 4E                    9225 	ld	c, (hl)
      0026AF 06 00                 9226 	ld	b, #0x00
      0026B1 69                    9227 	ld	l, c
      0026B2 60                    9228 	ld	h, b
      0026B3 29                    9229 	add	hl, hl
      0026B4 29                    9230 	add	hl, hl
      0026B5 29                    9231 	add	hl, hl
      0026B6 09                    9232 	add	hl, bc
      0026B7 29                    9233 	add	hl, hl
      0026B8 01r5Ar00              9234 	ld	bc,#_enemies
      0026BB 09                    9235 	add	hl,bc
      0026BC 33                    9236 	inc	sp
      0026BD 33                    9237 	inc	sp
      0026BE 5D                    9238 	ld	e, l
      0026BF 54                    9239 	ld	d, h
      0026C0 D5                    9240 	push	de
      0026C1 21 02 00              9241 	ld	hl, #0x0002
      0026C4 19                    9242 	add	hl, de
      0026C5 E5                    9243 	push	hl
      0026C6 7D                    9244 	ld	a, l
      0026C7 F8 04                 9245 	ldhl	sp,	#4
      0026C9 77                    9246 	ld	(hl), a
      0026CA E1                    9247 	pop	hl
      0026CB 7C                    9248 	ld	a, h
      0026CC F8 03                 9249 	ldhl	sp,	#3
      0026CE 32                    9250 	ld	(hl-), a
      0026CF 2A                    9251 	ld	a, (hl+)
      0026D0 5F                    9252 	ld	e, a
      0026D1 56                    9253 	ld	d, (hl)
      0026D2 1A                    9254 	ld	a, (de)
      0026D3 4F                    9255 	ld	c, a
      0026D4 13                    9256 	inc	de
      0026D5 1A                    9257 	ld	a, (de)
      0026D6 47                    9258 	ld	b, a
      0026D7 D1                    9259 	pop	de
      0026D8 D5                    9260 	push	de
      0026D9 1A                    9261 	ld	a, (de)
      0026DA 6F                    9262 	ld	l, a
                                   9263 ;	spillPairReg hl
                                   9264 ;	spillPairReg hl
      0026DB 13                    9265 	inc	de
      0026DC 1A                    9266 	ld	a, (de)
      0026DD 67                    9267 	ld	h, a
                                   9268 ;	spillPairReg hl
                                   9269 ;	spillPairReg hl
      0026DE C5                    9270 	push	bc
      0026DF E5                    9271 	push	hl
      0026E0 CDr11r26              9272 	call	_spawnPickup
      0026E3 E8 04                 9273 	add	sp, #4
                                   9274 ;src/main.c:832: enemies[i].alive = 0;
      0026E5 D1                    9275 	pop	de
      0026E6 D5                    9276 	push	de
      0026E7 21 09 00              9277 	ld	hl, #0x0009
      0026EA 19                    9278 	add	hl, de
      0026EB 4D                    9279 	ld	c, l
      0026EC 44                    9280 	ld	b, h
      0026ED AF                    9281 	xor	a, a
      0026EE 02                    9282 	ld	(bc), a
                                   9283 ;src/main.c:833: enemies[i].visible = 0;
      0026EF D1                    9284 	pop	de
      0026F0 D5                    9285 	push	de
      0026F1 21 0A 00              9286 	ld	hl, #0x000a
      0026F4 19                    9287 	add	hl, de
      0026F5 4D                    9288 	ld	c, l
      0026F6 44                    9289 	ld	b, h
      0026F7 AF                    9290 	xor	a, a
      0026F8 02                    9291 	ld	(bc), a
                                   9292 ;src/main.c:835: playSound(0);
      0026F9 AF                    9293 	xor	a, a
      0026FA F5                    9294 	push	af
      0026FB 33                    9295 	inc	sp
      0026FC CDrB6r14              9296 	call	_playSound
      0026FF 33                    9297 	inc	sp
                                   9298 ;src/main.c:836: incrementScore();
      002700 CDr78r12              9299 	call	_incrementScore
                                   9300 ;src/main.c:837: updateScore();
      002703 CDrDAr11              9301 	call	_updateScore
                                   9302 ;src/main.c:839: explosions[oldestEx].visible = 1;
      002706 21r38r01              9303 	ld	hl, #_oldestEx
      002709 4E                    9304 	ld	c, (hl)
      00270A 06 00                 9305 	ld	b, #0x00
      00270C 69                    9306 	ld	l, c
      00270D 60                    9307 	ld	h, b
      00270E 29                    9308 	add	hl, hl
      00270F 09                    9309 	add	hl, bc
      002710 29                    9310 	add	hl, hl
      002711 01r02r01              9311 	ld	bc,#_explosions
      002714 09                    9312 	add	hl,bc
      002715 36 01                 9313 	ld	(hl), #0x01
                                   9314 ;src/main.c:840: explosions[oldestEx].x = enemies[i].x;
      002717 21r38r01              9315 	ld	hl, #_oldestEx
      00271A 4E                    9316 	ld	c, (hl)
      00271B 06 00                 9317 	ld	b, #0x00
      00271D 69                    9318 	ld	l, c
      00271E 60                    9319 	ld	h, b
      00271F 29                    9320 	add	hl, hl
      002720 09                    9321 	add	hl, bc
      002721 29                    9322 	add	hl, hl
      002722 01r02r01              9323 	ld	bc,#_explosions
      002725 09                    9324 	add	hl,bc
      002726 23                    9325 	inc	hl
      002727 4D                    9326 	ld	c, l
      002728 44                    9327 	ld	b, h
      002729 D1                    9328 	pop	de
      00272A D5                    9329 	push	de
      00272B 1A                    9330 	ld	a, (de)
      00272C 02                    9331 	ld	(bc), a
                                   9332 ;src/main.c:841: explosions[oldestEx].y = enemies[i].y;
      00272D 21r38r01              9333 	ld	hl, #_oldestEx
      002730 4E                    9334 	ld	c, (hl)
      002731 06 00                 9335 	ld	b, #0x00
      002733 69                    9336 	ld	l, c
      002734 60                    9337 	ld	h, b
      002735 29                    9338 	add	hl, hl
      002736 09                    9339 	add	hl, bc
      002737 29                    9340 	add	hl, hl
      002738 01r02r01              9341 	ld	bc,#_explosions
      00273B 09                    9342 	add	hl,bc
      00273C 23                    9343 	inc	hl
      00273D 23                    9344 	inc	hl
      00273E 4D                    9345 	ld	c, l
      00273F 44                    9346 	ld	b, h
      002740 F8 02                 9347 	ldhl	sp,#2
      002742 2A                    9348 	ld	a, (hl+)
      002743 5F                    9349 	ld	e, a
      002744 56                    9350 	ld	d, (hl)
      002745 1A                    9351 	ld	a, (de)
      002746 02                    9352 	ld	(bc), a
                                   9353 ;src/main.c:844: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      002747 CDr00r00              9354 	call	_rand
      00274A 7B                    9355 	ld	a, e
      00274B 21rC7r10              9356 	ld	hl, #_exTileCount
      00274E 46                    9357 	ld	b, (hl)
      00274F C5                    9358 	push	bc
      002750 33                    9359 	inc	sp
      002751 F5                    9360 	push	af
      002752 33                    9361 	inc	sp
      002753 CDr00r00              9362 	call	__moduchar
      002756 E1                    9363 	pop	hl
      002757 F8 03                 9364 	ldhl	sp,	#3
      002759 73                    9365 	ld	(hl), e
                                   9366 ;src/main.c:846: explosions[oldestEx].tile = exTiles[tileNum];
      00275A 21r38r01              9367 	ld	hl, #_oldestEx
      00275D 4E                    9368 	ld	c, (hl)
      00275E 06 00                 9369 	ld	b, #0x00
      002760 69                    9370 	ld	l, c
      002761 60                    9371 	ld	h, b
      002762 29                    9372 	add	hl, hl
      002763 09                    9373 	add	hl, bc
      002764 29                    9374 	add	hl, hl
      002765 01r02r01              9375 	ld	bc,#_explosions
      002768 09                    9376 	add	hl,bc
      002769 23                    9377 	inc	hl
      00276A 23                    9378 	inc	hl
      00276B 23                    9379 	inc	hl
      00276C 23                    9380 	inc	hl
      00276D 23                    9381 	inc	hl
      00276E 4D                    9382 	ld	c, l
      00276F 44                    9383 	ld	b, h
      002770 11r39r01              9384 	ld	de, #_exTiles+0
      002773 F8 03                 9385 	ldhl	sp,	#3
      002775 6E                    9386 	ld	l, (hl)
      002776 26 00                 9387 	ld	h, #0x00
      002778 19                    9388 	add	hl, de
      002779 5D                    9389 	ld	e, l
      00277A 54                    9390 	ld	d, h
      00277B 1A                    9391 	ld	a, (de)
      00277C 02                    9392 	ld	(bc), a
                                   9393 ;src/main.c:847: explosions[oldestEx].frame = 0;
      00277D 21r38r01              9394 	ld	hl, #_oldestEx
      002780 4E                    9395 	ld	c, (hl)
      002781 06 00                 9396 	ld	b, #0x00
      002783 69                    9397 	ld	l, c
      002784 60                    9398 	ld	h, b
      002785 29                    9399 	add	hl, hl
      002786 09                    9400 	add	hl, bc
      002787 29                    9401 	add	hl, hl
      002788 01r02r01              9402 	ld	bc,#_explosions
      00278B 09                    9403 	add	hl,bc
      00278C 23                    9404 	inc	hl
      00278D 23                    9405 	inc	hl
      00278E 23                    9406 	inc	hl
      00278F 36 00                 9407 	ld	(hl), #0x00
                                   9408 ;src/main.c:848: explosions[oldestEx].frameCounter = 0;
      002791 21r38r01              9409 	ld	hl, #_oldestEx
      002794 4E                    9410 	ld	c, (hl)
      002795 06 00                 9411 	ld	b, #0x00
      002797 69                    9412 	ld	l, c
      002798 60                    9413 	ld	h, b
      002799 29                    9414 	add	hl, hl
      00279A 09                    9415 	add	hl, bc
      00279B 29                    9416 	add	hl, hl
      00279C 01r02r01              9417 	ld	bc,#_explosions
      00279F 09                    9418 	add	hl,bc
      0027A0 01 04 00              9419 	ld	bc, #0x0004
      0027A3 09                    9420 	add	hl, bc
      0027A4 36 00                 9421 	ld	(hl), #0x00
                                   9422 ;src/main.c:850: set_sprite_tile(20 + oldestEx+oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      0027A6 21r38r01              9423 	ld	hl, #_oldestEx
      0027A9 4E                    9424 	ld	c, (hl)
      0027AA 06 00                 9425 	ld	b, #0x00
      0027AC 69                    9426 	ld	l, c
      0027AD 60                    9427 	ld	h, b
      0027AE 29                    9428 	add	hl, hl
      0027AF 09                    9429 	add	hl, bc
      0027B0 29                    9430 	add	hl, hl
      0027B1 01r02r01              9431 	ld	bc,#_explosions
      0027B4 09                    9432 	add	hl,bc
      0027B5 5D                    9433 	ld	e, l
      0027B6 54                    9434 	ld	d, h
      0027B7 21 05 00              9435 	ld	hl, #0x0005
      0027BA 19                    9436 	add	hl, de
      0027BB 4E                    9437 	ld	c, (hl)
      0027BC 13                    9438 	inc	de
      0027BD 13                    9439 	inc	de
      0027BE 13                    9440 	inc	de
      0027BF 1A                    9441 	ld	a, (de)
      0027C0 87                    9442 	add	a, a
      0027C1 81                    9443 	add	a, c
      0027C2 4F                    9444 	ld	c, a
      0027C3 21r38r01              9445 	ld	hl, #_oldestEx
      0027C6 46                    9446 	ld	b, (hl)
      0027C7 78                    9447 	ld	a, b
      0027C8 C6 14                 9448 	add	a, #0x14
      0027CA 80                    9449 	add	a, b
                                   9450 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0027CB 6F                    9451 	ld	l, a
      0027CC 11r00r00              9452 	ld	de, #_shadow_OAM+0
                                   9453 ;	spillPairReg hl
                                   9454 ;	spillPairReg hl
      0027CF 26 00                 9455 	ld	h, #0x00
                                   9456 ;	spillPairReg hl
                                   9457 ;	spillPairReg hl
      0027D1 29                    9458 	add	hl, hl
      0027D2 29                    9459 	add	hl, hl
      0027D3 19                    9460 	add	hl, de
      0027D4 23                    9461 	inc	hl
      0027D5 23                    9462 	inc	hl
      0027D6 71                    9463 	ld	(hl), c
                                   9464 ;src/main.c:851: set_sprite_tile(21 + oldestEx+oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      0027D7 21r38r01              9465 	ld	hl, #_oldestEx
      0027DA 4E                    9466 	ld	c, (hl)
      0027DB 06 00                 9467 	ld	b, #0x00
      0027DD 69                    9468 	ld	l, c
      0027DE 60                    9469 	ld	h, b
      0027DF 29                    9470 	add	hl, hl
      0027E0 09                    9471 	add	hl, bc
      0027E1 29                    9472 	add	hl, hl
      0027E2 01r02r01              9473 	ld	bc,#_explosions
      0027E5 09                    9474 	add	hl,bc
      0027E6 5D                    9475 	ld	e, l
      0027E7 54                    9476 	ld	d, h
      0027E8 21 05 00              9477 	ld	hl, #0x0005
      0027EB 19                    9478 	add	hl, de
      0027EC 4E                    9479 	ld	c, (hl)
      0027ED 13                    9480 	inc	de
      0027EE 13                    9481 	inc	de
      0027EF 13                    9482 	inc	de
      0027F0 1A                    9483 	ld	a, (de)
      0027F1 87                    9484 	add	a, a
      0027F2 81                    9485 	add	a, c
      0027F3 C6 02                 9486 	add	a, #0x02
      0027F5 4F                    9487 	ld	c, a
      0027F6 21r38r01              9488 	ld	hl, #_oldestEx
      0027F9 46                    9489 	ld	b, (hl)
      0027FA 78                    9490 	ld	a, b
      0027FB C6 15                 9491 	add	a, #0x15
      0027FD 80                    9492 	add	a, b
                                   9493 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0027FE 6F                    9494 	ld	l, a
      0027FF 11r00r00              9495 	ld	de, #_shadow_OAM+0
                                   9496 ;	spillPairReg hl
                                   9497 ;	spillPairReg hl
      002802 26 00                 9498 	ld	h, #0x00
                                   9499 ;	spillPairReg hl
                                   9500 ;	spillPairReg hl
      002804 29                    9501 	add	hl, hl
      002805 29                    9502 	add	hl, hl
      002806 19                    9503 	add	hl, de
      002807 23                    9504 	inc	hl
      002808 23                    9505 	inc	hl
      002809 71                    9506 	ld	(hl), c
                                   9507 ;src/main.c:856: oldestEx++;
      00280A 21r38r01              9508 	ld	hl, #_oldestEx
      00280D 34                    9509 	inc	(hl)
                                   9510 ;src/main.c:857: if (oldestEx >= exCount) {
      00280E 21rC5r10              9511 	ld	hl, #_exCount
      002811 4E                    9512 	ld	c, (hl)
      002812 21r38r01              9513 	ld	hl, #_oldestEx
      002815 7E                    9514 	ld	a, (hl)
      002816 91                    9515 	sub	a, c
      002817 38 02                 9516 	jr	C, 00107$
                                   9517 ;src/main.c:858: oldestEx = 0;
      002819 36 00                 9518 	ld	(hl), #0x00
      00281B                       9519 00107$:
                                   9520 ;src/main.c:862: }
      00281B E8 04                 9521 	add	sp, #4
      00281D C9                    9522 	ret
                                   9523 ;src/main.c:864: void checkCollision() {
                                   9524 ;	---------------------------------
                                   9525 ; Function checkCollision
                                   9526 ; ---------------------------------
      00281E                       9527 _checkCollision::
      00281E E8 E9                 9528 	add	sp, #-23
                                   9529 ;src/main.c:871: struct Enemy *eptr = enemies + enemyCollisionCount;
      002820 21r22r01              9530 	ld	hl, #_enemyCollisionCount
      002823 4E                    9531 	ld	c, (hl)
      002824 06 00                 9532 	ld	b, #0x00
      002826 69                    9533 	ld	l, c
      002827 60                    9534 	ld	h, b
      002828 29                    9535 	add	hl, hl
      002829 29                    9536 	add	hl, hl
      00282A 29                    9537 	add	hl, hl
      00282B 09                    9538 	add	hl, bc
      00282C 29                    9539 	add	hl, hl
      00282D 01r5Ar00              9540 	ld	bc,#_enemies
      002830 09                    9541 	add	hl,bc
      002831 4D                    9542 	ld	c, l
      002832 7C                    9543 	ld	a, h
      002833 F8 00                 9544 	ldhl	sp,	#0
      002835 71                    9545 	ld	(hl), c
      002836 23                    9546 	inc	hl
      002837 77                    9547 	ld	(hl), a
                                   9548 ;src/main.c:872: uint8_t i = enemyCollisionCount;
      002838 FAr22r01              9549 	ld	a, (#_enemyCollisionCount)
      00283B F8 02                 9550 	ldhl	sp,	#2
      00283D 77                    9551 	ld	(hl), a
                                   9552 ;src/main.c:874: if (eptr->visible && eptr->alive) {
      00283E D1                    9553 	pop	de
      00283F D5                    9554 	push	de
      002840 21 0A 00              9555 	ld	hl, #0x000a
      002843 19                    9556 	add	hl, de
      002844 4D                    9557 	ld	c, l
      002845 44                    9558 	ld	b, h
      002846 0A                    9559 	ld	a, (bc)
      002847 B7                    9560 	or	a, a
      002848 CArCBr2C              9561 	jp	Z, 00139$
      00284B D1                    9562 	pop	de
      00284C D5                    9563 	push	de
      00284D 21 09 00              9564 	ld	hl, #0x0009
      002850 19                    9565 	add	hl, de
      002851 4D                    9566 	ld	c, l
      002852 44                    9567 	ld	b, h
      002853 0A                    9568 	ld	a, (bc)
      002854 B7                    9569 	or	a, a
      002855 CArCBr2C              9570 	jp	Z, 00139$
                                   9571 ;src/main.c:876: uint8_t alive = 1;
      002858 F8 12                 9572 	ldhl	sp,	#18
      00285A 36 01                 9573 	ld	(hl), #0x01
                                   9574 ;src/main.c:879: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00285C D1                    9575 	pop	de
      00285D D5                    9576 	push	de
      00285E 21 08 00              9577 	ld	hl, #0x0008
      002861 19                    9578 	add	hl, de
      002862 4D                    9579 	ld	c, l
      002863 44                    9580 	ld	b, h
      002864 0A                    9581 	ld	a, (bc)
      002865 4F                    9582 	ld	c, a
      002866 3D                    9583 	dec	a
      002867 3E 01                 9584 	ld	a, #0x01
      002869 28 01                 9585 	jr	Z, 00350$
      00286B AF                    9586 	xor	a, a
      00286C                       9587 00350$:
      00286C F8 13                 9588 	ldhl	sp,	#19
      00286E 77                    9589 	ld	(hl), a
      00286F FAr16r01              9590 	ld	a, (#_playerDrawX)
      002872 F8 14                 9591 	ldhl	sp,	#20
      002874 77                    9592 	ld	(hl), a
                                   9593 ;src/main.c:880: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002875 79                    9594 	ld	a, c
      002876 D6 02                 9595 	sub	a, #0x02
      002878 3E 01                 9596 	ld	a, #0x01
      00287A 28 01                 9597 	jr	Z, 00352$
      00287C AF                    9598 	xor	a, a
      00287D                       9599 00352$:
      00287D F8 15                 9600 	ldhl	sp,	#21
                                   9601 ;src/main.c:879: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00287F 32                    9602 	ld	(hl-), a
      002880 2B                    9603 	dec	hl
      002881 7E                    9604 	ld	a, (hl)
      002882 B7                    9605 	or	a, a
      002883 28 2F                 9606 	jr	Z, 00110$
      002885 D1                    9607 	pop	de
      002886 D5                    9608 	push	de
      002887 1A                    9609 	ld	a, (de)
      002888 F8 16                 9610 	ldhl	sp,	#22
      00288A 77                    9611 	ld	(hl), a
      00288B 3A                    9612 	ld	a, (hl-)
      00288C 2B                    9613 	dec	hl
      00288D 96                    9614 	sub	a, (hl)
      00288E 23                    9615 	inc	hl
      00288F 23                    9616 	inc	hl
      002890 77                    9617 	ld	(hl), a
                                   9618 ;src/main.c:376: if (value >= 0) return value;
      002891 CB 7E                 9619 	bit	7, (hl)
      002893 28 06                 9620 	jr	Z, 00147$
                                   9621 ;src/main.c:377: else return - value;
      002895 AF                    9622 	xor	a, a
      002896 F8 16                 9623 	ldhl	sp,	#22
      002898 96                    9624 	sub	a, (hl)
      002899 4F                    9625 	ld	c, a
      00289A 71                    9626 	ld	(hl), c
                                   9627 ;src/main.c:879: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00289B                       9628 00147$:
      00289B F8 16                 9629 	ldhl	sp,	#22
      00289D 5E                    9630 	ld	e, (hl)
      00289E 3E 08                 9631 	ld	a,#0x08
      0028A0 57                    9632 	ld	d,a
      0028A1 96                    9633 	sub	a, (hl)
      0028A2 CB 7B                 9634 	bit	7, e
      0028A4 28 07                 9635 	jr	Z, 00353$
      0028A6 CB 7A                 9636 	bit	7, d
      0028A8 20 08                 9637 	jr	NZ, 00354$
      0028AA BF                    9638 	cp	a, a
      0028AB 18 05                 9639 	jr	00354$
      0028AD                       9640 00353$:
      0028AD CB 7A                 9641 	bit	7, d
      0028AF 28 01                 9642 	jr	Z, 00354$
      0028B1 37                    9643 	scf
      0028B2                       9644 00354$:
      0028B2 30 2F                 9645 	jr	NC, 00106$
      0028B4                       9646 00110$:
                                   9647 ;src/main.c:880: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0028B4 F8 15                 9648 	ldhl	sp,	#21
      0028B6 7E                    9649 	ld	a, (hl)
      0028B7 B7                    9650 	or	a, a
      0028B8 CAr9Er29              9651 	jp	Z, 00107$
      0028BB 2B                    9652 	dec	hl
      0028BC D1                    9653 	pop	de
      0028BD D5                    9654 	push	de
      0028BE 1A                    9655 	ld	a, (de)
      0028BF 96                    9656 	sub	a, (hl)
      0028C0 4F                    9657 	ld	c, a
                                   9658 ;src/main.c:376: if (value >= 0) return value;
      0028C1 CB 79                 9659 	bit	7, c
      0028C3 20 03                 9660 	jr	NZ, 00149$
      0028C5 41                    9661 	ld	b, c
      0028C6 18 03                 9662 	jr	00151$
      0028C8                       9663 00149$:
                                   9664 ;src/main.c:377: else return - value;
      0028C8 AF                    9665 	xor	a, a
      0028C9 91                    9666 	sub	a, c
      0028CA 47                    9667 	ld	b, a
                                   9668 ;src/main.c:880: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0028CB                       9669 00151$:
      0028CB 58                    9670 	ld	e, b
      0028CC 3E 10                 9671 	ld	a,#0x10
      0028CE 57                    9672 	ld	d,a
      0028CF 90                    9673 	sub	a, b
      0028D0 CB 7B                 9674 	bit	7, e
      0028D2 28 07                 9675 	jr	Z, 00355$
      0028D4 CB 7A                 9676 	bit	7, d
      0028D6 20 08                 9677 	jr	NZ, 00356$
      0028D8 BF                    9678 	cp	a, a
      0028D9 18 05                 9679 	jr	00356$
      0028DB                       9680 00355$:
      0028DB CB 7A                 9681 	bit	7, d
      0028DD 28 01                 9682 	jr	Z, 00356$
      0028DF 37                    9683 	scf
      0028E0                       9684 00356$:
      0028E0 DAr9Er29              9685 	jp	C, 00107$
      0028E3                       9686 00106$:
                                   9687 ;src/main.c:881: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0028E3 C1                    9688 	pop	bc
      0028E4 C5                    9689 	push	bc
      0028E5 03                    9690 	inc	bc
      0028E6 03                    9691 	inc	bc
      0028E7 FAr17r01              9692 	ld	a, (#_playerDrawY)
      0028EA F8 16                 9693 	ldhl	sp,	#22
      0028EC 77                    9694 	ld	(hl), a
      0028ED F8 13                 9695 	ldhl	sp,	#19
      0028EF 7E                    9696 	ld	a, (hl)
      0028F0 B7                    9697 	or	a, a
      0028F1 28 23                 9698 	jr	Z, 00105$
      0028F3 0A                    9699 	ld	a, (bc)
      0028F4 F8 16                 9700 	ldhl	sp,	#22
      0028F6 96                    9701 	sub	a, (hl)
      0028F7 6F                    9702 	ld	l, a
                                   9703 ;	spillPairReg hl
                                   9704 ;	spillPairReg hl
                                   9705 ;src/main.c:376: if (value >= 0) return value;
      0028F8 CB 7D                 9706 	bit	7, l
      0028FA 28 03                 9707 	jr	Z, 00155$
                                   9708 ;src/main.c:377: else return - value;
      0028FC AF                    9709 	xor	a, a
      0028FD 95                    9710 	sub	a, l
      0028FE 6F                    9711 	ld	l, a
                                   9712 ;	spillPairReg hl
                                   9713 ;	spillPairReg hl
                                   9714 ;src/main.c:881: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0028FF                       9715 00155$:
      0028FF 5D                    9716 	ld	e, l
      002900 3E 08                 9717 	ld	a,#0x08
      002902 57                    9718 	ld	d,a
      002903 95                    9719 	sub	a, l
      002904 CB 7B                 9720 	bit	7, e
      002906 28 07                 9721 	jr	Z, 00357$
      002908 CB 7A                 9722 	bit	7, d
      00290A 20 08                 9723 	jr	NZ, 00358$
      00290C BF                    9724 	cp	a, a
      00290D 18 05                 9725 	jr	00358$
      00290F                       9726 00357$:
      00290F CB 7A                 9727 	bit	7, d
      002911 28 01                 9728 	jr	Z, 00358$
      002913 37                    9729 	scf
      002914                       9730 00358$:
      002914 30 29                 9731 	jr	NC, 00101$
      002916                       9732 00105$:
                                   9733 ;src/main.c:882: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002916 F8 15                 9734 	ldhl	sp,	#21
      002918 7E                    9735 	ld	a, (hl)
      002919 B7                    9736 	or	a, a
      00291A CAr9Er29              9737 	jp	Z, 00107$
      00291D 23                    9738 	inc	hl
      00291E 0A                    9739 	ld	a, (bc)
      00291F 96                    9740 	sub	a, (hl)
      002920 4F                    9741 	ld	c, a
                                   9742 ;src/main.c:376: if (value >= 0) return value;
      002921 CB 79                 9743 	bit	7, c
      002923 28 03                 9744 	jr	Z, 00159$
                                   9745 ;src/main.c:377: else return - value;
      002925 AF                    9746 	xor	a, a
      002926 91                    9747 	sub	a, c
      002927 4F                    9748 	ld	c, a
                                   9749 ;src/main.c:882: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002928                       9750 00159$:
      002928 59                    9751 	ld	e, c
      002929 3E 10                 9752 	ld	a,#0x10
      00292B 57                    9753 	ld	d,a
      00292C 91                    9754 	sub	a, c
      00292D CB 7B                 9755 	bit	7, e
      00292F 28 07                 9756 	jr	Z, 00359$
      002931 CB 7A                 9757 	bit	7, d
      002933 20 08                 9758 	jr	NZ, 00360$
      002935 BF                    9759 	cp	a, a
      002936 18 05                 9760 	jr	00360$
      002938                       9761 00359$:
      002938 CB 7A                 9762 	bit	7, d
      00293A 28 01                 9763 	jr	Z, 00360$
      00293C 37                    9764 	scf
      00293D                       9765 00360$:
      00293D 38 5F                 9766 	jr	C, 00107$
      00293F                       9767 00101$:
                                   9768 ;src/main.c:884: set_sprite_tile(10+(i<<1), 0x7f);
      00293F F8 02                 9769 	ldhl	sp,	#2
      002941 7E                    9770 	ld	a, (hl)
      002942 87                    9771 	add	a, a
      002943 C6 0A                 9772 	add	a, #0x0a
                                   9773 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002945 6F                    9774 	ld	l, a
      002946 01r00r00              9775 	ld	bc, #_shadow_OAM+0
                                   9776 ;	spillPairReg hl
                                   9777 ;	spillPairReg hl
      002949 26 00                 9778 	ld	h, #0x00
                                   9779 ;	spillPairReg hl
                                   9780 ;	spillPairReg hl
      00294B 29                    9781 	add	hl, hl
      00294C 29                    9782 	add	hl, hl
      00294D 09                    9783 	add	hl, bc
      00294E 23                    9784 	inc	hl
      00294F 23                    9785 	inc	hl
      002950 36 7F                 9786 	ld	(hl), #0x7f
                                   9787 ;src/main.c:885: set_sprite_tile(10+(i<<1)+1, 0x7f);
      002952 F8 02                 9788 	ldhl	sp,	#2
      002954 7E                    9789 	ld	a, (hl)
      002955 87                    9790 	add	a, a
      002956 C6 0B                 9791 	add	a, #0x0b
                                   9792 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002958 6F                    9793 	ld	l, a
      002959 01r00r00              9794 	ld	bc, #_shadow_OAM+0
                                   9795 ;	spillPairReg hl
                                   9796 ;	spillPairReg hl
      00295C 26 00                 9797 	ld	h, #0x00
                                   9798 ;	spillPairReg hl
                                   9799 ;	spillPairReg hl
      00295E 29                    9800 	add	hl, hl
      00295F 29                    9801 	add	hl, hl
      002960 09                    9802 	add	hl, bc
      002961 23                    9803 	inc	hl
      002962 23                    9804 	inc	hl
      002963 36 7F                 9805 	ld	(hl), #0x7f
                                   9806 ;src/main.c:886: eptr->alive = 0;
      002965 D1                    9807 	pop	de
      002966 D5                    9808 	push	de
      002967 21 09 00              9809 	ld	hl, #0x0009
      00296A 19                    9810 	add	hl, de
      00296B 4D                    9811 	ld	c, l
      00296C 44                    9812 	ld	b, h
      00296D AF                    9813 	xor	a, a
      00296E 02                    9814 	ld	(bc), a
                                   9815 ;src/main.c:887: eptr->visible = 0;
      00296F D1                    9816 	pop	de
      002970 D5                    9817 	push	de
      002971 21 0A 00              9818 	ld	hl, #0x000a
      002974 19                    9819 	add	hl, de
      002975 4D                    9820 	ld	c, l
      002976 44                    9821 	ld	b, h
      002977 AF                    9822 	xor	a, a
      002978 02                    9823 	ld	(bc), a
                                   9824 ;src/main.c:888: takeDamage(eptr->damage);
      002979 D1                    9825 	pop	de
      00297A D5                    9826 	push	de
      00297B 21 0B 00              9827 	ld	hl, #0x000b
      00297E 19                    9828 	add	hl, de
      00297F 4D                    9829 	ld	c, l
      002980 44                    9830 	ld	b, h
      002981 0A                    9831 	ld	a, (bc)
      002982 06 00                 9832 	ld	b, #0x00
      002984 4F                    9833 	ld	c, a
      002985 C5                    9834 	push	bc
      002986 CDrCDr25              9835 	call	_takeDamage
      002989 E1                    9836 	pop	hl
                                   9837 ;src/main.c:889: initEnemy(i);
      00298A F8 02                 9838 	ldhl	sp,	#2
      00298C 7E                    9839 	ld	a, (hl)
      00298D F5                    9840 	push	af
      00298E 33                    9841 	inc	sp
      00298F CDr84r16              9842 	call	_initEnemy
      002992 33                    9843 	inc	sp
                                   9844 ;src/main.c:890: playSound(0);
      002993 AF                    9845 	xor	a, a
      002994 F5                    9846 	push	af
      002995 33                    9847 	inc	sp
      002996 CDrB6r14              9848 	call	_playSound
      002999 33                    9849 	inc	sp
                                   9850 ;src/main.c:892: alive = 0;
      00299A F8 12                 9851 	ldhl	sp,	#18
      00299C 36 00                 9852 	ld	(hl), #0x00
      00299E                       9853 00107$:
                                   9854 ;src/main.c:898: if (alive) {
      00299E F8 12                 9855 	ldhl	sp,	#18
      0029A0 7E                    9856 	ld	a, (hl)
      0029A1 B7                    9857 	or	a, a
      0029A2 CArCBr2C              9858 	jp	Z, 00139$
                                   9859 ;src/main.c:899: struct Projectile *pptr = projectiles;
      0029A5 23                    9860 	inc	hl
      0029A6 3ErB4                 9861 	ld	a, #<(_projectiles)
      0029A8 22                    9862 	ld	(hl+), a
      0029A9 36s00                 9863 	ld	(hl), #>(_projectiles)
                                   9864 ;src/main.c:901: while (j < PROJECTILECOUNT) {
      0029AB D1                    9865 	pop	de
      0029AC D5                    9866 	push	de
      0029AD 21 02 00              9867 	ld	hl, #0x0002
      0029B0 19                    9868 	add	hl, de
      0029B1 E5                    9869 	push	hl
      0029B2 7D                    9870 	ld	a, l
      0029B3 F8 05                 9871 	ldhl	sp,	#5
      0029B5 77                    9872 	ld	(hl), a
      0029B6 E1                    9873 	pop	hl
      0029B7 7C                    9874 	ld	a, h
      0029B8 F8 04                 9875 	ldhl	sp,	#4
      0029BA 32                    9876 	ld	(hl-), a
      0029BB 2A                    9877 	ld	a, (hl+)
      0029BC 23                    9878 	inc	hl
      0029BD 32                    9879 	ld	(hl-), a
      0029BE 2A                    9880 	ld	a, (hl+)
      0029BF 23                    9881 	inc	hl
      0029C0 77                    9882 	ld	(hl), a
      0029C1 D1                    9883 	pop	de
      0029C2 D5                    9884 	push	de
      0029C3 21 08 00              9885 	ld	hl, #0x0008
      0029C6 19                    9886 	add	hl, de
      0029C7 E5                    9887 	push	hl
      0029C8 7D                    9888 	ld	a, l
      0029C9 F8 09                 9889 	ldhl	sp,	#9
      0029CB 77                    9890 	ld	(hl), a
      0029CC E1                    9891 	pop	hl
      0029CD 7C                    9892 	ld	a, h
      0029CE F8 08                 9893 	ldhl	sp,	#8
      0029D0 77                    9894 	ld	(hl), a
      0029D1 F8 03                 9895 	ldhl	sp,	#3
      0029D3 7E                    9896 	ld	a, (hl)
      0029D4 F8 09                 9897 	ldhl	sp,	#9
      0029D6 77                    9898 	ld	(hl), a
      0029D7 F8 04                 9899 	ldhl	sp,	#4
      0029D9 7E                    9900 	ld	a, (hl)
      0029DA F8 0A                 9901 	ldhl	sp,	#10
      0029DC 77                    9902 	ld	(hl), a
      0029DD F8 15                 9903 	ldhl	sp,	#21
      0029DF 36 00                 9904 	ld	(hl), #0x00
      0029E1                       9905 00133$:
      0029E1 21rBFr10              9906 	ld	hl, #_PROJECTILECOUNT
      0029E4 4E                    9907 	ld	c, (hl)
      0029E5 F8 15                 9908 	ldhl	sp,	#21
      0029E7 7E                    9909 	ld	a, (hl)
      0029E8 91                    9910 	sub	a, c
      0029E9 D2rCBr2C              9911 	jp	NC, 00139$
                                   9912 ;src/main.c:902: if (pptr->active) {
      0029EC 2B                    9913 	dec	hl
      0029ED 2B                    9914 	dec	hl
      0029EE 2A                    9915 	ld	a, (hl+)
      0029EF 5F                    9916 	ld	e, a
      0029F0 56                    9917 	ld	d, (hl)
      0029F1 21 0A 00              9918 	ld	hl, #0x000a
      0029F4 19                    9919 	add	hl, de
      0029F5 4D                    9920 	ld	c, l
      0029F6 44                    9921 	ld	b, h
      0029F7 0A                    9922 	ld	a, (bc)
      0029F8 B7                    9923 	or	a, a
      0029F9 CArB2r2C              9924 	jp	Z, 00132$
                                   9925 ;src/main.c:904: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0029FC F8 07                 9926 	ldhl	sp,#7
      0029FE 2A                    9927 	ld	a, (hl+)
      0029FF 5F                    9928 	ld	e, a
      002A00 56                    9929 	ld	d, (hl)
      002A01 1A                    9930 	ld	a, (de)
      002A02 4F                    9931 	ld	c, a
      002A03 3D                    9932 	dec	a
      002A04 3E 01                 9933 	ld	a, #0x01
      002A06 28 01                 9934 	jr	Z, 00362$
      002A08 AF                    9935 	xor	a, a
      002A09                       9936 00362$:
      002A09 F8 11                 9937 	ldhl	sp,	#17
      002A0B 77                    9938 	ld	(hl), a
                                   9939 ;src/main.c:905: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002A0C 79                    9940 	ld	a, c
      002A0D D6 02                 9941 	sub	a, #0x02
      002A0F 3E 01                 9942 	ld	a, #0x01
      002A11 28 01                 9943 	jr	Z, 00364$
      002A13 AF                    9944 	xor	a, a
      002A14                       9945 00364$:
      002A14 F8 12                 9946 	ldhl	sp,	#18
                                   9947 ;src/main.c:904: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002A16 32                    9948 	ld	(hl-), a
      002A17 7E                    9949 	ld	a, (hl)
      002A18 B7                    9950 	or	a, a
      002A19 28 2C                 9951 	jr	Z, 00130$
      002A1B D1                    9952 	pop	de
      002A1C D5                    9953 	push	de
      002A1D 1A                    9954 	ld	a, (de)
      002A1E F8 13                 9955 	ldhl	sp,#19
      002A20 5E                    9956 	ld	e, (hl)
      002A21 23                    9957 	inc	hl
      002A22 56                    9958 	ld	d, (hl)
      002A23 F5                    9959 	push	af
      002A24 1A                    9960 	ld	a, (de)
      002A25 4F                    9961 	ld	c, a
      002A26 F1                    9962 	pop	af
      002A27 91                    9963 	sub	a, c
      002A28 4F                    9964 	ld	c, a
                                   9965 ;src/main.c:376: if (value >= 0) return value;
      002A29 CB 79                 9966 	bit	7, c
      002A2B 28 03                 9967 	jr	Z, 00165$
                                   9968 ;src/main.c:377: else return - value;
      002A2D AF                    9969 	xor	a, a
      002A2E 91                    9970 	sub	a, c
      002A2F 4F                    9971 	ld	c, a
                                   9972 ;src/main.c:904: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002A30                       9973 00165$:
      002A30 59                    9974 	ld	e, c
      002A31 3E 08                 9975 	ld	a,#0x08
      002A33 57                    9976 	ld	d,a
      002A34 91                    9977 	sub	a, c
      002A35 CB 7B                 9978 	bit	7, e
      002A37 28 07                 9979 	jr	Z, 00365$
      002A39 CB 7A                 9980 	bit	7, d
      002A3B 20 08                 9981 	jr	NZ, 00366$
      002A3D BF                    9982 	cp	a, a
      002A3E 18 05                 9983 	jr	00366$
      002A40                       9984 00365$:
      002A40 CB 7A                 9985 	bit	7, d
      002A42 28 01                 9986 	jr	Z, 00366$
      002A44 37                    9987 	scf
      002A45                       9988 00366$:
      002A45 30 3A                 9989 	jr	NC, 00126$
      002A47                       9990 00130$:
                                   9991 ;src/main.c:905: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002A47 F8 12                 9992 	ldhl	sp,	#18
      002A49 7E                    9993 	ld	a, (hl)
      002A4A B7                    9994 	or	a, a
      002A4B CArB2r2C              9995 	jp	Z, 00132$
      002A4E 23                    9996 	inc	hl
      002A4F D1                    9997 	pop	de
      002A50 D5                    9998 	push	de
      002A51 1A                    9999 	ld	a, (de)
      002A52 5E                   10000 	ld	e, (hl)
      002A53 23                   10001 	inc	hl
      002A54 56                   10002 	ld	d, (hl)
      002A55 23                   10003 	inc	hl
      002A56 23                   10004 	inc	hl
      002A57 F5                   10005 	push	af
      002A58 1A                   10006 	ld	a, (de)
      002A59 4F                   10007 	ld	c, a
      002A5A F1                   10008 	pop	af
      002A5B 91                   10009 	sub	a, c
      002A5C 77                   10010 	ld	(hl), a
                                  10011 ;src/main.c:376: if (value >= 0) return value;
      002A5D CB 7E                10012 	bit	7, (hl)
      002A5F 20 03                10013 	jr	NZ, 00167$
      002A61 4E                   10014 	ld	c, (hl)
      002A62 18 05                10015 	jr	00169$
      002A64                      10016 00167$:
                                  10017 ;src/main.c:377: else return - value;
      002A64 AF                   10018 	xor	a, a
      002A65 F8 16                10019 	ldhl	sp,	#22
      002A67 96                   10020 	sub	a, (hl)
      002A68 4F                   10021 	ld	c, a
                                  10022 ;src/main.c:905: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002A69                      10023 00169$:
      002A69 59                   10024 	ld	e, c
      002A6A 3E 10                10025 	ld	a,#0x10
      002A6C 57                   10026 	ld	d,a
      002A6D 91                   10027 	sub	a, c
      002A6E CB 7B                10028 	bit	7, e
      002A70 28 07                10029 	jr	Z, 00367$
      002A72 CB 7A                10030 	bit	7, d
      002A74 20 08                10031 	jr	NZ, 00368$
      002A76 BF                   10032 	cp	a, a
      002A77 18 05                10033 	jr	00368$
      002A79                      10034 00367$:
      002A79 CB 7A                10035 	bit	7, d
      002A7B 28 01                10036 	jr	Z, 00368$
      002A7D 37                   10037 	scf
      002A7E                      10038 00368$:
      002A7E DArB2r2C             10039 	jp	C, 00132$
      002A81                      10040 00126$:
                                  10041 ;src/main.c:906: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002A81 F8 13                10042 	ldhl	sp,	#19
      002A83 2A                   10043 	ld	a, (hl+)
      002A84 4F                   10044 	ld	c, a
      002A85 46                   10045 	ld	b, (hl)
      002A86 03                   10046 	inc	bc
      002A87 03                   10047 	inc	bc
      002A88 F8 11                10048 	ldhl	sp,	#17
      002A8A 7E                   10049 	ld	a, (hl)
      002A8B B7                   10050 	or	a, a
      002A8C 28 2A                10051 	jr	Z, 00125$
      002A8E F8 09                10052 	ldhl	sp,#9
      002A90 2A                   10053 	ld	a, (hl+)
      002A91 5F                   10054 	ld	e, a
      002A92 56                   10055 	ld	d, (hl)
      002A93 1A                   10056 	ld	a, (de)
      002A94 F5                   10057 	push	af
      002A95 0A                   10058 	ld	a, (bc)
      002A96 5F                   10059 	ld	e, a
      002A97 F1                   10060 	pop	af
      002A98 93                   10061 	sub	a, e
      002A99 6F                   10062 	ld	l, a
                                  10063 ;	spillPairReg hl
                                  10064 ;	spillPairReg hl
                                  10065 ;src/main.c:376: if (value >= 0) return value;
      002A9A CB 7D                10066 	bit	7, l
      002A9C 28 03                10067 	jr	Z, 00173$
                                  10068 ;src/main.c:377: else return - value;
      002A9E AF                   10069 	xor	a, a
      002A9F 95                   10070 	sub	a, l
      002AA0 6F                   10071 	ld	l, a
                                  10072 ;	spillPairReg hl
                                  10073 ;	spillPairReg hl
                                  10074 ;src/main.c:906: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002AA1                      10075 00173$:
      002AA1 5D                   10076 	ld	e, l
      002AA2 3E 08                10077 	ld	a,#0x08
      002AA4 57                   10078 	ld	d,a
      002AA5 95                   10079 	sub	a, l
      002AA6 CB 7B                10080 	bit	7, e
      002AA8 28 07                10081 	jr	Z, 00369$
      002AAA CB 7A                10082 	bit	7, d
      002AAC 20 08                10083 	jr	NZ, 00370$
      002AAE BF                   10084 	cp	a, a
      002AAF 18 05                10085 	jr	00370$
      002AB1                      10086 00369$:
      002AB1 CB 7A                10087 	bit	7, d
      002AB3 28 01                10088 	jr	Z, 00370$
      002AB5 37                   10089 	scf
      002AB6                      10090 00370$:
      002AB6 30 32                10091 	jr	NC, 00121$
      002AB8                      10092 00125$:
                                  10093 ;src/main.c:907: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      002AB8 F8 12                10094 	ldhl	sp,	#18
      002ABA 7E                   10095 	ld	a, (hl)
      002ABB B7                   10096 	or	a, a
      002ABC CArB2r2C             10097 	jp	Z, 00132$
      002ABF F8 03                10098 	ldhl	sp,#3
      002AC1 2A                   10099 	ld	a, (hl+)
      002AC2 5F                   10100 	ld	e, a
      002AC3 56                   10101 	ld	d, (hl)
      002AC4 1A                   10102 	ld	a, (de)
      002AC5 F5                   10103 	push	af
      002AC6 0A                   10104 	ld	a, (bc)
      002AC7 4F                   10105 	ld	c, a
      002AC8 F1                   10106 	pop	af
      002AC9 91                   10107 	sub	a, c
      002ACA 4F                   10108 	ld	c, a
                                  10109 ;src/main.c:376: if (value >= 0) return value;
      002ACB CB 79                10110 	bit	7, c
      002ACD 28 03                10111 	jr	Z, 00177$
                                  10112 ;src/main.c:377: else return - value;
      002ACF AF                   10113 	xor	a, a
      002AD0 91                   10114 	sub	a, c
      002AD1 4F                   10115 	ld	c, a
                                  10116 ;src/main.c:907: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      002AD2                      10117 00177$:
      002AD2 59                   10118 	ld	e, c
      002AD3 3E 10                10119 	ld	a,#0x10
      002AD5 57                   10120 	ld	d,a
      002AD6 91                   10121 	sub	a, c
      002AD7 CB 7B                10122 	bit	7, e
      002AD9 28 07                10123 	jr	Z, 00371$
      002ADB CB 7A                10124 	bit	7, d
      002ADD 20 08                10125 	jr	NZ, 00372$
      002ADF BF                   10126 	cp	a, a
      002AE0 18 05                10127 	jr	00372$
      002AE2                      10128 00371$:
      002AE2 CB 7A                10129 	bit	7, d
      002AE4 28 01                10130 	jr	Z, 00372$
      002AE6 37                   10131 	scf
      002AE7                      10132 00372$:
      002AE7 DArB2r2C             10133 	jp	C, 00132$
      002AEA                      10134 00121$:
                                  10135 ;src/main.c:909: set_sprite_tile(30+j, 0x7f);
      002AEA F8 15                10136 	ldhl	sp,	#21
      002AEC 7E                   10137 	ld	a, (hl)
      002AED C6 1E                10138 	add	a, #0x1e
                                  10139 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002AEF 6F                   10140 	ld	l, a
      002AF0 01r00r00             10141 	ld	bc, #_shadow_OAM+0
                                  10142 ;	spillPairReg hl
                                  10143 ;	spillPairReg hl
      002AF3 26 00                10144 	ld	h, #0x00
                                  10145 ;	spillPairReg hl
                                  10146 ;	spillPairReg hl
      002AF5 29                   10147 	add	hl, hl
      002AF6 29                   10148 	add	hl, hl
      002AF7 09                   10149 	add	hl, bc
      002AF8 23                   10150 	inc	hl
      002AF9 23                   10151 	inc	hl
      002AFA 36 7F                10152 	ld	(hl), #0x7f
                                  10153 ;src/main.c:910: pptr->active = 0;
      002AFC F8 13                10154 	ldhl	sp,#19
      002AFE 2A                   10155 	ld	a, (hl+)
      002AFF 5F                   10156 	ld	e, a
      002B00 56                   10157 	ld	d, (hl)
      002B01 21 0A 00             10158 	ld	hl, #0x000a
      002B04 19                   10159 	add	hl, de
      002B05 4D                   10160 	ld	c, l
      002B06 44                   10161 	ld	b, h
      002B07 AF                   10162 	xor	a, a
      002B08 02                   10163 	ld	(bc), a
                                  10164 ;src/main.c:912: if (pptr->type == 0x2c) { //missile
      002B09 F8 13                10165 	ldhl	sp,#19
      002B0B 2A                   10166 	ld	a, (hl+)
      002B0C 5F                   10167 	ld	e, a
      002B0D 56                   10168 	ld	d, (hl)
      002B0E 21 0C 00             10169 	ld	hl, #0x000c
      002B11 19                   10170 	add	hl, de
      002B12 4D                   10171 	ld	c, l
      002B13 44                   10172 	ld	b, h
      002B14 0A                   10173 	ld	a, (bc)
      002B15 5F                   10174 	ld	e, a
                                  10175 ;src/main.c:917: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002B16 D5                   10176 	push	de
      002B17 F8 15                10177 	ldhl	sp,#21
      002B19 2A                   10178 	ld	a, (hl+)
      002B1A 5F                   10179 	ld	e, a
      002B1B 56                   10180 	ld	d, (hl)
      002B1C 21 08 00             10181 	ld	hl, #0x0008
      002B1F 19                   10182 	add	hl, de
      002B20 D1                   10183 	pop	de
      002B21 4D                   10184 	ld	c, l
      002B22 44                   10185 	ld	b, h
                                  10186 ;src/main.c:912: if (pptr->type == 0x2c) { //missile
      002B23 7B                   10187 	ld	a, e
      002B24 D6 2C                10188 	sub	a, #0x2c
      002B26 C2r57r2C             10189 	jp	NZ,00119$
                                  10190 ;src/main.c:917: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002B29 F8 0B                10191 	ldhl	sp,	#11
      002B2B 79                   10192 	ld	a, c
      002B2C 22                   10193 	ld	(hl+), a
      002B2D 70                   10194 	ld	(hl), b
      002B2E F8 16                10195 	ldhl	sp,	#22
      002B30 36 00                10196 	ld	(hl), #0x00
      002B32                      10197 00188$:
      002B32 21rAEr10             10198 	ld	hl, #_ENEMYCOUNT
      002B35 4E                   10199 	ld	c, (hl)
      002B36 F8 16                10200 	ldhl	sp,	#22
      002B38 7E                   10201 	ld	a, (hl)
      002B39 91                   10202 	sub	a, c
      002B3A D2rB2r2C             10203 	jp	NC, 00132$
                                  10204 ;src/main.c:918: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      002B3D D1                   10205 	pop	de
      002B3E D5                   10206 	push	de
      002B3F 1A                   10207 	ld	a, (de)
      002B40 F8 0F                10208 	ldhl	sp,	#15
      002B42 22                   10209 	ld	(hl+), a
      002B43 13                   10210 	inc	de
      002B44 1A                   10211 	ld	a, (de)
      002B45 77                   10212 	ld	(hl), a
      002B46 F8 16                10213 	ldhl	sp,	#22
      002B48 4E                   10214 	ld	c, (hl)
      002B49 06 00                10215 	ld	b, #0x00
      002B4B 69                   10216 	ld	l, c
      002B4C 60                   10217 	ld	h, b
      002B4D 29                   10218 	add	hl, hl
      002B4E 29                   10219 	add	hl, hl
      002B4F 29                   10220 	add	hl, hl
      002B50 09                   10221 	add	hl, bc
      002B51 29                   10222 	add	hl, hl
      002B52 01r5Ar00             10223 	ld	bc,#_enemies
      002B55 09                   10224 	add	hl,bc
      002B56 E5                   10225 	push	hl
      002B57 7D                   10226 	ld	a, l
      002B58 F8 13                10227 	ldhl	sp,	#19
      002B5A 77                   10228 	ld	(hl), a
      002B5B E1                   10229 	pop	hl
      002B5C 7C                   10230 	ld	a, h
      002B5D F8 12                10231 	ldhl	sp,	#18
      002B5F 32                   10232 	ld	(hl-), a
      002B60 2A                   10233 	ld	a, (hl+)
      002B61 5F                   10234 	ld	e, a
      002B62 3A                   10235 	ld	a, (hl-)
      002B63 2B                   10236 	dec	hl
      002B64 2B                   10237 	dec	hl
      002B65 57                   10238 	ld	d, a
      002B66 1A                   10239 	ld	a, (de)
      002B67 4F                   10240 	ld	c, a
      002B68 13                   10241 	inc	de
      002B69 1A                   10242 	ld	a, (de)
      002B6A 47                   10243 	ld	b, a
      002B6B 2A                   10244 	ld	a, (hl+)
      002B6C 5F                   10245 	ld	e, a
      002B6D 56                   10246 	ld	d, (hl)
      002B6E 7B                   10247 	ld	a, e
      002B6F 91                   10248 	sub	a, c
      002B70 5F                   10249 	ld	e, a
      002B71 7A                   10250 	ld	a, d
      002B72 98                   10251 	sbc	a, b
      002B73 4B                   10252 	ld	c, e
      002B74 47                   10253 	ld	b, a
                                  10254 ;	spillPairReg hl
                                  10255 ;	spillPairReg hl
      002B75 60                   10256 	ld	h, b
                                  10257 ;	spillPairReg hl
                                  10258 ;	spillPairReg hl
      002B76 CB 7C                10259 	bit	7, h
      002B78 20 07                10260 	jr	NZ, 00180$
      002B7A F8 0F                10261 	ldhl	sp,	#15
      002B7C 79                   10262 	ld	a, c
      002B7D 22                   10263 	ld	(hl+), a
      002B7E 70                   10264 	ld	(hl), b
      002B7F 18 0B                10265 	jr	00182$
      002B81                      10266 00180$:
      002B81 AF                   10267 	xor	a, a
      002B82 91                   10268 	sub	a, c
      002B83 4F                   10269 	ld	c, a
      002B84 9F                   10270 	sbc	a, a
      002B85 90                   10271 	sub	a, b
      002B86 47                   10272 	ld	b, a
      002B87 F8 0F                10273 	ldhl	sp,	#15
      002B89 79                   10274 	ld	a, c
      002B8A 22                   10275 	ld	(hl+), a
      002B8B 70                   10276 	ld	(hl), b
      002B8C                      10277 00182$:
      002B8C F8 05                10278 	ldhl	sp,#5
      002B8E 2A                   10279 	ld	a, (hl+)
      002B8F 5F                   10280 	ld	e, a
      002B90 56                   10281 	ld	d, (hl)
      002B91 1A                   10282 	ld	a, (de)
      002B92 4F                   10283 	ld	c, a
      002B93 13                   10284 	inc	de
      002B94 1A                   10285 	ld	a, (de)
      002B95 47                   10286 	ld	b, a
      002B96 F8 11                10287 	ldhl	sp,	#17
      002B98 2A                   10288 	ld	a, (hl+)
      002B99 66                   10289 	ld	h, (hl)
                                  10290 ;	spillPairReg hl
                                  10291 ;	spillPairReg hl
      002B9A 6F                   10292 	ld	l, a
                                  10293 ;	spillPairReg hl
                                  10294 ;	spillPairReg hl
      002B9B 23                   10295 	inc	hl
      002B9C 23                   10296 	inc	hl
      002B9D 2A                   10297 	ld	a,	(hl+)
      002B9E 66                   10298 	ld	h, (hl)
                                  10299 ;	spillPairReg hl
      002B9F 6F                   10300 	ld	l, a
                                  10301 ;	spillPairReg hl
                                  10302 ;	spillPairReg hl
      002BA0 79                   10303 	ld	a, c
      002BA1 95                   10304 	sub	a, l
      002BA2 4F                   10305 	ld	c, a
      002BA3 78                   10306 	ld	a, b
      002BA4 9C                   10307 	sbc	a, h
      002BA5 47                   10308 	ld	b, a
                                  10309 ;	spillPairReg hl
                                  10310 ;	spillPairReg hl
      002BA6 60                   10311 	ld	h, b
                                  10312 ;	spillPairReg hl
                                  10313 ;	spillPairReg hl
      002BA7 CB 7C                10314 	bit	7, h
      002BA9 28 06                10315 	jr	Z, 00186$
      002BAB AF                   10316 	xor	a, a
      002BAC 91                   10317 	sub	a, c
      002BAD 4F                   10318 	ld	c, a
      002BAE 9F                   10319 	sbc	a, a
      002BAF 90                   10320 	sub	a, b
      002BB0 47                   10321 	ld	b, a
      002BB1                      10322 00186$:
      002BB1 F8 0F                10323 	ldhl	sp,	#15
      002BB3 2A                   10324 	ld	a,	(hl+)
      002BB4 66                   10325 	ld	h, (hl)
      002BB5 6F                   10326 	ld	l, a
      002BB6 09                   10327 	add	hl, bc
      002BB7 4D                   10328 	ld	c, l
      002BB8 44                   10329 	ld	b, h
      002BB9 21rC4r10             10330 	ld	hl, #_SPLASHDROPOFF
      002BBC 5E                   10331 	ld	e, (hl)
      002BBD 1C                   10332 	inc	e
      002BBE 18 04                10333 	jr	00376$
      002BC0                      10334 00375$:
      002BC0 CB 21                10335 	sla	c
      002BC2 CB 10                10336 	rl	b
      002BC4                      10337 00376$:
      002BC4 1D                   10338 	dec	e
      002BC5 20 F9                10339 	jr	NZ,00375$
                                  10340 ;src/main.c:919: int16_t dmg = pptr->damage - dmgDropOff;
      002BC7 F8 0B                10341 	ldhl	sp,#11
      002BC9 2A                   10342 	ld	a, (hl+)
      002BCA 5F                   10343 	ld	e, a
      002BCB 56                   10344 	ld	d, (hl)
      002BCC 1A                   10345 	ld	a, (de)
      002BCD 6F                   10346 	ld	l, a
                                  10347 ;	spillPairReg hl
                                  10348 ;	spillPairReg hl
      002BCE 13                   10349 	inc	de
      002BCF 1A                   10350 	ld	a, (de)
      002BD0 67                   10351 	ld	h, a
                                  10352 ;	spillPairReg hl
                                  10353 ;	spillPairReg hl
      002BD1 7D                   10354 	ld	a, l
      002BD2 91                   10355 	sub	a, c
      002BD3 5F                   10356 	ld	e, a
      002BD4 7C                   10357 	ld	a, h
      002BD5 98                   10358 	sbc	a, b
      002BD6 F8 0D                10359 	ldhl	sp,	#13
      002BD8 73                   10360 	ld	(hl), e
      002BD9 23                   10361 	inc	hl
                                  10362 ;src/main.c:920: if (dmg > 0) {
      002BDA 32                   10363 	ld	(hl-), a
      002BDB 2A                   10364 	ld	a, (hl+)
      002BDC 4F                   10365 	ld	c, a
      002BDD 46                   10366 	ld	b, (hl)
      002BDE 58                   10367 	ld	e, b
      002BDF AF                   10368 	xor	a, a
      002BE0 57                   10369 	ld	d, a
      002BE1 B9                   10370 	cp	a, c
      002BE2 98                   10371 	sbc	a, b
      002BE3 CB 7B                10372 	bit	7, e
      002BE5 28 07                10373 	jr	Z, 00377$
      002BE7 CB 7A                10374 	bit	7, d
      002BE9 20 08                10375 	jr	NZ, 00378$
      002BEB BF                   10376 	cp	a, a
      002BEC 18 05                10377 	jr	00378$
      002BEE                      10378 00377$:
      002BEE CB 7A                10379 	bit	7, d
      002BF0 28 01                10380 	jr	Z, 00378$
      002BF2 37                   10381 	scf
      002BF3                      10382 00378$:
      002BF3 30 5C                10383 	jr	NC, 00189$
                                  10384 ;src/main.c:921: enemies[k].hp -= dmg;
      002BF5 F8 11                10385 	ldhl	sp,#17
      002BF7 2A                   10386 	ld	a, (hl+)
      002BF8 5F                   10387 	ld	e, a
      002BF9 56                   10388 	ld	d, (hl)
      002BFA 21 10 00             10389 	ld	hl, #0x0010
      002BFD 19                   10390 	add	hl, de
      002BFE E5                   10391 	push	hl
      002BFF 7D                   10392 	ld	a, l
      002C00 F8 11                10393 	ldhl	sp,	#17
      002C02 77                   10394 	ld	(hl), a
      002C03 E1                   10395 	pop	hl
      002C04 7C                   10396 	ld	a, h
      002C05 F8 10                10397 	ldhl	sp,	#16
      002C07 32                   10398 	ld	(hl-), a
      002C08 2A                   10399 	ld	a, (hl+)
      002C09 5F                   10400 	ld	e, a
      002C0A 2A                   10401 	ld	a, (hl+)
      002C0B 57                   10402 	ld	d, a
      002C0C 1A                   10403 	ld	a, (de)
      002C0D 22                   10404 	ld	(hl+), a
      002C0E 13                   10405 	inc	de
      002C0F 1A                   10406 	ld	a, (de)
      002C10 32                   10407 	ld	(hl-), a
      002C11 2A                   10408 	ld	a, (hl+)
      002C12 5F                   10409 	ld	e, a
      002C13 56                   10410 	ld	d, (hl)
      002C14 F8 0D                10411 	ldhl	sp,	#13
      002C16 2A                   10412 	ld	a,	(hl+)
      002C17 66                   10413 	ld	h, (hl)
      002C18 6F                   10414 	ld	l, a
      002C19 7B                   10415 	ld	a, e
      002C1A 95                   10416 	sub	a, l
      002C1B 5F                   10417 	ld	e, a
      002C1C 7A                   10418 	ld	a, d
      002C1D 9C                   10419 	sbc	a, h
      002C1E 47                   10420 	ld	b, a
      002C1F 4B                   10421 	ld	c, e
      002C20 F8 0F                10422 	ldhl	sp,	#15
      002C22 2A                   10423 	ld	a,	(hl+)
      002C23 66                   10424 	ld	h, (hl)
      002C24 6F                   10425 	ld	l, a
      002C25 79                   10426 	ld	a, c
      002C26 22                   10427 	ld	(hl+), a
      002C27 70                   10428 	ld	(hl), b
                                  10429 ;src/main.c:922: if (enemies[k].hp <= 0) {
      002C28 58                   10430 	ld	e, b
      002C29 AF                   10431 	xor	a, a
      002C2A 57                   10432 	ld	d, a
      002C2B B9                   10433 	cp	a, c
      002C2C 98                   10434 	sbc	a, b
      002C2D CB 7B                10435 	bit	7, e
      002C2F 28 07                10436 	jr	Z, 00379$
      002C31 CB 7A                10437 	bit	7, d
      002C33 20 08                10438 	jr	NZ, 00380$
      002C35 BF                   10439 	cp	a, a
      002C36 18 05                10440 	jr	00380$
      002C38                      10441 00379$:
      002C38 CB 7A                10442 	bit	7, d
      002C3A 28 01                10443 	jr	Z, 00380$
      002C3C 37                   10444 	scf
      002C3D                      10445 00380$:
      002C3D 38 12                10446 	jr	C, 00189$
                                  10447 ;src/main.c:923: killEnemy(k);
      002C3F F8 16                10448 	ldhl	sp,	#22
      002C41 7E                   10449 	ld	a, (hl)
      002C42 F5                   10450 	push	af
      002C43 33                   10451 	inc	sp
      002C44 CDr86r26             10452 	call	_killEnemy
      002C47 33                   10453 	inc	sp
                                  10454 ;src/main.c:924: initEnemy(k);
      002C48 F8 16                10455 	ldhl	sp,	#22
      002C4A 7E                   10456 	ld	a, (hl)
      002C4B F5                   10457 	push	af
      002C4C 33                   10458 	inc	sp
      002C4D CDr84r16             10459 	call	_initEnemy
      002C50 33                   10460 	inc	sp
      002C51                      10461 00189$:
                                  10462 ;src/main.c:917: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002C51 F8 16                10463 	ldhl	sp,	#22
      002C53 34                   10464 	inc	(hl)
      002C54 C3r32r2B             10465 	jp	00188$
      002C57                      10466 00119$:
                                  10467 ;src/main.c:932: eptr->hp -= pptr->damage;
      002C57 D1                   10468 	pop	de
      002C58 D5                   10469 	push	de
      002C59 21 10 00             10470 	ld	hl, #0x0010
      002C5C 19                   10471 	add	hl, de
      002C5D E5                   10472 	push	hl
      002C5E 7D                   10473 	ld	a, l
      002C5F F8 11                10474 	ldhl	sp,	#17
      002C61 77                   10475 	ld	(hl), a
      002C62 E1                   10476 	pop	hl
      002C63 7C                   10477 	ld	a, h
      002C64 F8 10                10478 	ldhl	sp,	#16
      002C66 32                   10479 	ld	(hl-), a
      002C67 2A                   10480 	ld	a, (hl+)
      002C68 5F                   10481 	ld	e, a
      002C69 2A                   10482 	ld	a, (hl+)
      002C6A 57                   10483 	ld	d, a
      002C6B 1A                   10484 	ld	a, (de)
      002C6C 22                   10485 	ld	(hl+), a
      002C6D 13                   10486 	inc	de
      002C6E 1A                   10487 	ld	a, (de)
      002C6F 77                   10488 	ld	(hl), a
      002C70 69                   10489 	ld	l, c
      002C71 60                   10490 	ld	h, b
      002C72 2A                   10491 	ld	a, (hl+)
      002C73 4F                   10492 	ld	c, a
      002C74 46                   10493 	ld	b, (hl)
      002C75 F8 11                10494 	ldhl	sp,#17
      002C77 2A                   10495 	ld	a, (hl+)
      002C78 5F                   10496 	ld	e, a
      002C79 56                   10497 	ld	d, (hl)
      002C7A 7B                   10498 	ld	a, e
      002C7B 91                   10499 	sub	a, c
      002C7C 5F                   10500 	ld	e, a
      002C7D 7A                   10501 	ld	a, d
      002C7E 98                   10502 	sbc	a, b
      002C7F 47                   10503 	ld	b, a
      002C80 4B                   10504 	ld	c, e
      002C81 F8 0F                10505 	ldhl	sp,	#15
      002C83 2A                   10506 	ld	a,	(hl+)
      002C84 66                   10507 	ld	h, (hl)
      002C85 6F                   10508 	ld	l, a
      002C86 79                   10509 	ld	a, c
      002C87 22                   10510 	ld	(hl+), a
      002C88 70                   10511 	ld	(hl), b
                                  10512 ;src/main.c:934: if (eptr->hp <= 0) {
      002C89 58                   10513 	ld	e, b
      002C8A AF                   10514 	xor	a, a
      002C8B 57                   10515 	ld	d, a
      002C8C B9                   10516 	cp	a, c
      002C8D 98                   10517 	sbc	a, b
      002C8E CB 7B                10518 	bit	7, e
      002C90 28 07                10519 	jr	Z, 00381$
      002C92 CB 7A                10520 	bit	7, d
      002C94 20 08                10521 	jr	NZ, 00382$
      002C96 BF                   10522 	cp	a, a
      002C97 18 05                10523 	jr	00382$
      002C99                      10524 00381$:
      002C99 CB 7A                10525 	bit	7, d
      002C9B 28 01                10526 	jr	Z, 00382$
      002C9D 37                   10527 	scf
      002C9E                      10528 00382$:
      002C9E 38 12                10529 	jr	C, 00132$
                                  10530 ;src/main.c:936: killEnemy(i);
      002CA0 F8 02                10531 	ldhl	sp,	#2
      002CA2 7E                   10532 	ld	a, (hl)
      002CA3 F5                   10533 	push	af
      002CA4 33                   10534 	inc	sp
      002CA5 CDr86r26             10535 	call	_killEnemy
      002CA8 33                   10536 	inc	sp
                                  10537 ;src/main.c:937: initEnemy(i);
      002CA9 F8 02                10538 	ldhl	sp,	#2
      002CAB 7E                   10539 	ld	a, (hl)
      002CAC F5                   10540 	push	af
      002CAD 33                   10541 	inc	sp
      002CAE CDr84r16             10542 	call	_initEnemy
      002CB1 33                   10543 	inc	sp
      002CB2                      10544 00132$:
                                  10545 ;src/main.c:949: j++;
      002CB2 F8 15                10546 	ldhl	sp,	#21
      002CB4 34                   10547 	inc	(hl)
                                  10548 ;src/main.c:950: pptr++;
      002CB5 2B                   10549 	dec	hl
      002CB6 2B                   10550 	dec	hl
      002CB7 2A                   10551 	ld	a, (hl+)
      002CB8 5F                   10552 	ld	e, a
      002CB9 56                   10553 	ld	d, (hl)
      002CBA 21 0D 00             10554 	ld	hl, #0x000d
      002CBD 19                   10555 	add	hl, de
      002CBE E5                   10556 	push	hl
      002CBF 7D                   10557 	ld	a, l
      002CC0 F8 15                10558 	ldhl	sp,	#21
      002CC2 77                   10559 	ld	(hl), a
      002CC3 E1                   10560 	pop	hl
      002CC4 7C                   10561 	ld	a, h
      002CC5 F8 14                10562 	ldhl	sp,	#20
      002CC7 77                   10563 	ld	(hl), a
      002CC8 C3rE1r29             10564 	jp	00133$
      002CCB                      10565 00139$:
                                  10566 ;src/main.c:956: if (enemyCollisionCount == 0) {
      002CCB FAr22r01             10567 	ld	a, (#_enemyCollisionCount)
      002CCE B7                   10568 	or	a, a
      002CCF 20 09                10569 	jr	NZ, 00142$
                                  10570 ;src/main.c:957: enemyCollisionCount = ENEMYCOUNT - 1;
      002CD1 FArAEr10             10571 	ld	a, (#_ENEMYCOUNT)
      002CD4 3D                   10572 	dec	a
      002CD5 EAr22r01             10573 	ld	(#_enemyCollisionCount),a
      002CD8 18 04                10574 	jr	00190$
      002CDA                      10575 00142$:
                                  10576 ;src/main.c:960: enemyCollisionCount--;
      002CDA 21r22r01             10577 	ld	hl, #_enemyCollisionCount
      002CDD 35                   10578 	dec	(hl)
      002CDE                      10579 00190$:
                                  10580 ;src/main.c:965: }
      002CDE E8 17                10581 	add	sp, #23
      002CE0 C9                   10582 	ret
                                  10583 ;src/main.c:968: void setGunIcon() {
                                  10584 ;	---------------------------------
                                  10585 ; Function setGunIcon
                                  10586 ; ---------------------------------
      002CE1                      10587 _setGunIcon::
                                  10588 ;src/main.c:970: if (currentGun == 0) {
      002CE1 FAr24r01             10589 	ld	a, (#_currentGun)
      002CE4 B7                   10590 	or	a, a
      002CE5 20 1B                10591 	jr	NZ, 00102$
                                  10592 ;src/main.c:971: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      002CE7 01r2Br01             10593 	ld	bc, #_gunMap+0
      002CEA 79                   10594 	ld	a, c
      002CEB 21r23r01             10595 	ld	hl, #_gunLevel
      002CEE 86                   10596 	add	a, (hl)
      002CEF 4F                   10597 	ld	c, a
      002CF0 30 01                10598 	jr	NC, 00111$
      002CF2 04                   10599 	inc	b
      002CF3                      10600 00111$:
      002CF3 C5                   10601 	push	bc
      002CF4 21 01 01             10602 	ld	hl, #0x101
      002CF7 E5                   10603 	push	hl
      002CF8 21 0F 00             10604 	ld	hl, #0x0f
      002CFB E5                   10605 	push	hl
      002CFC CDr00r00             10606 	call	_set_win_tiles
      002CFF E8 06                10607 	add	sp, #6
      002D01 C9                   10608 	ret
      002D02                      10609 00102$:
                                  10610 ;src/main.c:974: set_win_tiles(15, 0,1,1,gunMap+2);
      002D02 11r2Dr01             10611 	ld	de, #(_gunMap + 2)
      002D05 D5                   10612 	push	de
      002D06 21 01 01             10613 	ld	hl, #0x101
      002D09 E5                   10614 	push	hl
      002D0A 21 0F 00             10615 	ld	hl, #0x0f
      002D0D E5                   10616 	push	hl
      002D0E CDr00r00             10617 	call	_set_win_tiles
      002D11 E8 06                10618 	add	sp, #6
                                  10619 ;src/main.c:976: }
      002D13 C9                   10620 	ret
                                  10621 ;src/main.c:986: void fire() {
                                  10622 ;	---------------------------------
                                  10623 ; Function fire
                                  10624 ; ---------------------------------
      002D14                      10625 _fire::
      002D14 E8 FB                10626 	add	sp, #-5
                                  10627 ;src/main.c:988: oldestProjectile += 1;
      002D16 21r0Cr01             10628 	ld	hl, #_oldestProjectile
      002D19 34                   10629 	inc	(hl)
      002D1A 7E                   10630 	ld	a, (hl)
                                  10631 ;src/main.c:989: if (oldestProjectile >= PROJECTILECOUNT) {
      002D1B 21rBFr10             10632 	ld	hl, #_PROJECTILECOUNT
      002D1E 4E                   10633 	ld	c, (hl)
      002D1F 21r0Cr01             10634 	ld	hl, #_oldestProjectile
      002D22 7E                   10635 	ld	a, (hl)
      002D23 91                   10636 	sub	a, c
      002D24 38 02                10637 	jr	C, 00102$
                                  10638 ;src/main.c:990: oldestProjectile = 0;
      002D26 36 00                10639 	ld	(hl), #0x00
      002D28                      10640 00102$:
                                  10641 ;src/main.c:995: projectiles[oldestProjectile] = singleGun;
      002D28 21r0Cr01             10642 	ld	hl, #_oldestProjectile
      002D2B 4E                   10643 	ld	c, (hl)
      002D2C 06 00                10644 	ld	b, #0x00
      002D2E 69                   10645 	ld	l, c
      002D2F 60                   10646 	ld	h, b
      002D30 29                   10647 	add	hl, hl
      002D31 09                   10648 	add	hl, bc
      002D32 29                   10649 	add	hl, hl
      002D33 29                   10650 	add	hl, hl
      002D34 09                   10651 	add	hl, bc
      002D35 E5                   10652 	push	hl
      002D36 7D                   10653 	ld	a, l
      002D37 F8 05                10654 	ldhl	sp,	#5
      002D39 77                   10655 	ld	(hl), a
      002D3A E1                   10656 	pop	hl
      002D3B 7C                   10657 	ld	a, h
      002D3C F8 04                10658 	ldhl	sp,	#4
      002D3E 77                   10659 	ld	(hl), a
                                  10660 ;src/main.c:993: if (currentGun == 0) {
      002D3F FAr24r01             10661 	ld	a, (#_currentGun)
      002D42 B7                   10662 	or	a, a
      002D43 20 3C                10663 	jr	NZ, 00113$
                                  10664 ;src/main.c:994: if (gunLevel == 0) {
      002D45 FAr23r01             10665 	ld	a, (#_gunLevel)
      002D48 B7                   10666 	or	a, a
      002D49 20 1B                10667 	jr	NZ, 00104$
                                  10668 ;src/main.c:995: projectiles[oldestProjectile] = singleGun;
      002D4B 11rE5r00             10669 	ld	de, #_singleGun+0
      002D4E 01rB4r00             10670 	ld	bc, #_projectiles+0
      002D51 F8 03                10671 	ldhl	sp,	#3
      002D53 2A                   10672 	ld	a,	(hl+)
      002D54 66                   10673 	ld	h, (hl)
      002D55 6F                   10674 	ld	l, a
      002D56 09                   10675 	add	hl, bc
      002D57 4D                   10676 	ld	c, l
      002D58 44                   10677 	ld	b, h
      002D59 21 0D 00             10678 	ld	hl, #0x000d
      002D5C E5                   10679 	push	hl
      002D5D D5                   10680 	push	de
      002D5E C5                   10681 	push	bc
      002D5F CDr00r00             10682 	call	___memcpy
      002D62 E8 06                10683 	add	sp, #6
      002D64 18 61                10684 	jr	00114$
      002D66                      10685 00104$:
                                  10686 ;src/main.c:998: projectiles[oldestProjectile] = doubleGun;
      002D66 11rF2r00             10687 	ld	de, #_doubleGun+0
      002D69 01rB4r00             10688 	ld	bc, #_projectiles+0
      002D6C F8 03                10689 	ldhl	sp,	#3
      002D6E 2A                   10690 	ld	a,	(hl+)
      002D6F 66                   10691 	ld	h, (hl)
      002D70 6F                   10692 	ld	l, a
      002D71 09                   10693 	add	hl, bc
      002D72 4D                   10694 	ld	c, l
      002D73 44                   10695 	ld	b, h
      002D74 21 0D 00             10696 	ld	hl, #0x000d
      002D77 E5                   10697 	push	hl
      002D78 D5                   10698 	push	de
      002D79 C5                   10699 	push	bc
      002D7A CDr00r00             10700 	call	___memcpy
      002D7D E8 06                10701 	add	sp, #6
      002D7F 18 46                10702 	jr	00114$
      002D81                      10703 00113$:
                                  10704 ;src/main.c:1001: else if (currentGun == 1) {
      002D81 FAr24r01             10705 	ld	a, (#_currentGun)
      002D84 3D                   10706 	dec	a
      002D85 20 40                10707 	jr	NZ, 00114$
                                  10708 ;src/main.c:1002: if (missiles == 0) {
      002D87 FAr25r01             10709 	ld	a, (#_missiles)
      002D8A B7                   10710 	or	a, a
      002D8B 20 0B                10711 	jr	NZ, 00107$
                                  10712 ;src/main.c:1003: currentGun = 0;
      002D8D 21r24r01             10713 	ld	hl, #_currentGun
      002D90 36 00                10714 	ld	(hl), #0x00
                                  10715 ;src/main.c:1004: setGunIcon();
      002D92 CDrE1r2C             10716 	call	_setGunIcon
                                  10717 ;src/main.c:1005: return;
      002D95 C3rBFr32             10718 	jp	00155$
      002D98                      10719 00107$:
                                  10720 ;src/main.c:1008: projectiles[oldestProjectile] = missile;
      002D98 11rFFr00             10721 	ld	de, #_missile+0
      002D9B 01rB4r00             10722 	ld	bc, #_projectiles+0
      002D9E F8 03                10723 	ldhl	sp,	#3
      002DA0 2A                   10724 	ld	a,	(hl+)
      002DA1 66                   10725 	ld	h, (hl)
      002DA2 6F                   10726 	ld	l, a
      002DA3 09                   10727 	add	hl, bc
      002DA4 4D                   10728 	ld	c, l
      002DA5 44                   10729 	ld	b, h
      002DA6 21 0D 00             10730 	ld	hl, #0x000d
      002DA9 E5                   10731 	push	hl
      002DAA D5                   10732 	push	de
      002DAB C5                   10733 	push	bc
      002DAC CDr00r00             10734 	call	___memcpy
      002DAF E8 06                10735 	add	sp, #6
                                  10736 ;src/main.c:1009: updateMissileCount(-1);
      002DB1 3E FF                10737 	ld	a, #0xff
      002DB3 F5                   10738 	push	af
      002DB4 33                   10739 	inc	sp
      002DB5 CDr04r12             10740 	call	_updateMissileCount
      002DB8 33                   10741 	inc	sp
                                  10742 ;src/main.c:1011: if (missiles == 0) {
      002DB9 FAr25r01             10743 	ld	a, (#_missiles)
      002DBC B7                   10744 	or	a, a
      002DBD 20 08                10745 	jr	NZ, 00114$
                                  10746 ;src/main.c:1012: currentGun = 0;
      002DBF 21r24r01             10747 	ld	hl, #_currentGun
      002DC2 36 00                10748 	ld	(hl), #0x00
                                  10749 ;src/main.c:1013: setGunIcon();
      002DC4 CDrE1r2C             10750 	call	_setGunIcon
      002DC7                      10751 00114$:
                                  10752 ;src/main.c:1016: projectiles[oldestProjectile].x = playerDrawX;
      002DC7 21r0Cr01             10753 	ld	hl, #_oldestProjectile
      002DCA 4E                   10754 	ld	c, (hl)
      002DCB 06 00                10755 	ld	b, #0x00
      002DCD 69                   10756 	ld	l, c
      002DCE 60                   10757 	ld	h, b
      002DCF 29                   10758 	add	hl, hl
      002DD0 09                   10759 	add	hl, bc
      002DD1 29                   10760 	add	hl, hl
      002DD2 29                   10761 	add	hl, hl
      002DD3 09                   10762 	add	hl, bc
      002DD4 01rB4r00             10763 	ld	bc,#_projectiles
      002DD7 09                   10764 	add	hl,bc
      002DD8 E5                   10765 	push	hl
      002DD9 FAr16r01             10766 	ld	a, (#_playerDrawX)
      002DDC E1                   10767 	pop	hl
      002DDD 0E 00                10768 	ld	c, #0x00
      002DDF 22                   10769 	ld	(hl+), a
      002DE0 71                   10770 	ld	(hl), c
                                  10771 ;src/main.c:1017: projectiles[oldestProjectile].y = playerDrawY;
      002DE1 21r0Cr01             10772 	ld	hl, #_oldestProjectile
      002DE4 4E                   10773 	ld	c, (hl)
      002DE5 06 00                10774 	ld	b, #0x00
      002DE7 69                   10775 	ld	l, c
      002DE8 60                   10776 	ld	h, b
      002DE9 29                   10777 	add	hl, hl
      002DEA 09                   10778 	add	hl, bc
      002DEB 29                   10779 	add	hl, hl
      002DEC 29                   10780 	add	hl, hl
      002DED 09                   10781 	add	hl, bc
      002DEE 01rB4r00             10782 	ld	bc,#_projectiles
      002DF1 09                   10783 	add	hl,bc
      002DF2 23                   10784 	inc	hl
      002DF3 23                   10785 	inc	hl
      002DF4 E5                   10786 	push	hl
      002DF5 FAr17r01             10787 	ld	a, (#_playerDrawY)
      002DF8 E1                   10788 	pop	hl
      002DF9 0E 00                10789 	ld	c, #0x00
      002DFB 22                   10790 	ld	(hl+), a
      002DFC 71                   10791 	ld	(hl), c
                                  10792 ;src/main.c:1018: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      002DFD 21r0Cr01             10793 	ld	hl, #_oldestProjectile
      002E00 4E                   10794 	ld	c, (hl)
      002E01 06 00                10795 	ld	b, #0x00
      002E03 69                   10796 	ld	l, c
      002E04 60                   10797 	ld	h, b
      002E05 29                   10798 	add	hl, hl
      002E06 09                   10799 	add	hl, bc
      002E07 29                   10800 	add	hl, hl
      002E08 29                   10801 	add	hl, hl
      002E09 09                   10802 	add	hl, bc
      002E0A 01rB4r00             10803 	ld	bc,#_projectiles
      002E0D 09                   10804 	add	hl,bc
      002E0E 5D                   10805 	ld	e, l
      002E0F 54                   10806 	ld	d, h
      002E10 21 05 00             10807 	ld	hl, #0x0005
      002E13 19                   10808 	add	hl, de
      002E14 4D                   10809 	ld	c, l
      002E15 44                   10810 	ld	b, h
      002E16 21 07 00             10811 	ld	hl, #0x0007
      002E19 19                   10812 	add	hl, de
      002E1A 7E                   10813 	ld	a, (hl)
      002E1B C5                   10814 	push	bc
      002E1C F5                   10815 	push	af
      002E1D 33                   10816 	inc	sp
      002E1E FAr0Er01             10817 	ld	a, (#_xDir)
      002E21 F5                   10818 	push	af
      002E22 33                   10819 	inc	sp
      002E23 CDr00r00             10820 	call	__muluschar
      002E26 E1                   10821 	pop	hl
      002E27 7B                   10822 	ld	a, e
      002E28 C1                   10823 	pop	bc
      002E29 02                   10824 	ld	(bc), a
                                  10825 ;src/main.c:1019: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      002E2A 21r0Cr01             10826 	ld	hl, #_oldestProjectile
      002E2D 4E                   10827 	ld	c, (hl)
      002E2E 06 00                10828 	ld	b, #0x00
      002E30 69                   10829 	ld	l, c
      002E31 60                   10830 	ld	h, b
      002E32 29                   10831 	add	hl, hl
      002E33 09                   10832 	add	hl, bc
      002E34 29                   10833 	add	hl, hl
      002E35 29                   10834 	add	hl, hl
      002E36 09                   10835 	add	hl, bc
      002E37 01rB4r00             10836 	ld	bc,#_projectiles
      002E3A 09                   10837 	add	hl,bc
      002E3B 5D                   10838 	ld	e, l
      002E3C 54                   10839 	ld	d, h
      002E3D 21 06 00             10840 	ld	hl, #0x0006
      002E40 19                   10841 	add	hl, de
      002E41 4D                   10842 	ld	c, l
      002E42 44                   10843 	ld	b, h
      002E43 21 07 00             10844 	ld	hl, #0x0007
      002E46 19                   10845 	add	hl, de
      002E47 7E                   10846 	ld	a, (hl)
      002E48 C5                   10847 	push	bc
      002E49 F5                   10848 	push	af
      002E4A 33                   10849 	inc	sp
      002E4B FAr0Fr01             10850 	ld	a, (#_yDir)
      002E4E F5                   10851 	push	af
      002E4F 33                   10852 	inc	sp
      002E50 CDr00r00             10853 	call	__muluschar
      002E53 E1                   10854 	pop	hl
      002E54 7B                   10855 	ld	a, e
      002E55 C1                   10856 	pop	bc
      002E56 02                   10857 	ld	(bc), a
                                  10858 ;src/main.c:988: oldestProjectile += 1;
      002E57 FAr0Cr01             10859 	ld	a, (#_oldestProjectile)
      002E5A F8 04                10860 	ldhl	sp,	#4
      002E5C 77                   10861 	ld	(hl), a
                                  10862 ;src/main.c:995: projectiles[oldestProjectile] = singleGun;
      002E5D 21r0Cr01             10863 	ld	hl, #_oldestProjectile
      002E60 4E                   10864 	ld	c, (hl)
      002E61 06 00                10865 	ld	b, #0x00
      002E63 69                   10866 	ld	l, c
      002E64 60                   10867 	ld	h, b
      002E65 29                   10868 	add	hl, hl
      002E66 09                   10869 	add	hl, bc
      002E67 29                   10870 	add	hl, hl
      002E68 29                   10871 	add	hl, hl
      002E69 09                   10872 	add	hl, bc
                                  10873 ;src/main.c:1024: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002E6A 01rB4r00             10874 	ld	bc,#_projectiles
      002E6D 09                   10875 	add	hl,bc
      002E6E 4D                   10876 	ld	c, l
      002E6F 44                   10877 	ld	b, h
      002E70 F8 04                10878 	ldhl	sp,	#4
      002E72 3A                   10879 	ld	a, (hl-)
      002E73 C6 1E                10880 	add	a, #0x1e
      002E75 77                   10881 	ld	(hl), a
      002E76 21 0C 00             10882 	ld	hl, #0x000c
      002E79 09                   10883 	add	hl, bc
      002E7A 7E                   10884 	ld	a, (hl)
      002E7B F8 04                10885 	ldhl	sp,	#4
      002E7D 77                   10886 	ld	(hl), a
                                  10887 ;src/main.c:1023: if (yDir != 0 && xDir == 0) {
      002E7E FAr0Fr01             10888 	ld	a, (#_yDir)
      002E81 B7                   10889 	or	a, a
      002E82 28 71                10890 	jr	Z, 00141$
      002E84 FAr0Er01             10891 	ld	a, (#_xDir)
      002E87 B7                   10892 	or	a, a
      002E88 20 6B                10893 	jr	NZ, 00141$
                                  10894 ;src/main.c:1024: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002E8A F8 04                10895 	ldhl	sp,	#4
      002E8C 3A                   10896 	ld	a, (hl-)
      002E8D 4F                   10897 	ld	c, a
                                  10898 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002E8E 6E                   10899 	ld	l, (hl)
                                  10900 ;	spillPairReg hl
                                  10901 ;	spillPairReg hl
      002E8F 26 00                10902 	ld	h, #0x00
                                  10903 ;	spillPairReg hl
                                  10904 ;	spillPairReg hl
      002E91 29                   10905 	add	hl, hl
      002E92 29                   10906 	add	hl, hl
      002E93 11r00r00             10907 	ld	de, #_shadow_OAM
      002E96 19                   10908 	add	hl, de
      002E97 23                   10909 	inc	hl
      002E98 23                   10910 	inc	hl
      002E99 71                   10911 	ld	(hl), c
                                  10912 ;src/main.c:988: oldestProjectile += 1;
      002E9A FAr0Cr01             10913 	ld	a, (#_oldestProjectile)
                                  10914 ;src/main.c:1024: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002E9D C6 1E                10915 	add	a, #0x1e
      002E9F 4F                   10916 	ld	c, a
                                  10917 ;src/main.c:1025: if (yDir == 1) {
      002EA0 FAr0Fr01             10918 	ld	a, (#_yDir)
                                  10919 ;src/main.c:1026: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                  10920 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002EA3 3D                   10921 	dec	a
      002EA4 20 27                10922 	jr	NZ, 00116$
      002EA6 67                   10923 	ld	h,a
                                  10924 ;	spillPairReg hl
                                  10925 ;	spillPairReg hl
      002EA7 69                   10926 	ld	l, c
      002EA8 29                   10927 	add	hl, hl
      002EA9 29                   10928 	add	hl, hl
      002EAA 11r00r00             10929 	ld	de, #_shadow_OAM
      002EAD 19                   10930 	add	hl, de
      002EAE 23                   10931 	inc	hl
      002EAF 23                   10932 	inc	hl
      002EB0 23                   10933 	inc	hl
      002EB1 36 40                10934 	ld	(hl), #0x40
                                  10935 ;src/main.c:1027: projectiles[oldestProjectile].offset = 4;
      002EB3 21r0Cr01             10936 	ld	hl, #_oldestProjectile
      002EB6 4E                   10937 	ld	c, (hl)
      002EB7 06 00                10938 	ld	b, #0x00
      002EB9 69                   10939 	ld	l, c
      002EBA 60                   10940 	ld	h, b
      002EBB 29                   10941 	add	hl, hl
      002EBC 09                   10942 	add	hl, bc
      002EBD 29                   10943 	add	hl, hl
      002EBE 29                   10944 	add	hl, hl
      002EBF 09                   10945 	add	hl, bc
      002EC0 01rB4r00             10946 	ld	bc,#_projectiles
      002EC3 09                   10947 	add	hl,bc
      002EC4 01 04 00             10948 	ld	bc, #0x0004
      002EC7 09                   10949 	add	hl, bc
      002EC8 36 04                10950 	ld	(hl), #0x04
      002ECA C3rA6r32             10951 	jp	00142$
      002ECD                      10952 00116$:
                                  10953 ;src/main.c:1030: set_sprite_prop(30+oldestProjectile, 0); 
                                  10954 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002ECD 26 00                10955 	ld	h, #0x00
                                  10956 ;	spillPairReg hl
                                  10957 ;	spillPairReg hl
      002ECF 69                   10958 	ld	l, c
      002ED0 29                   10959 	add	hl, hl
      002ED1 29                   10960 	add	hl, hl
      002ED2 11r00r00             10961 	ld	de, #_shadow_OAM
      002ED5 19                   10962 	add	hl, de
      002ED6 23                   10963 	inc	hl
      002ED7 23                   10964 	inc	hl
      002ED8 23                   10965 	inc	hl
      002ED9 36 00                10966 	ld	(hl), #0x00
                                  10967 ;src/main.c:1031: projectiles[oldestProjectile].offset = 12;
      002EDB 21r0Cr01             10968 	ld	hl, #_oldestProjectile
      002EDE 4E                   10969 	ld	c, (hl)
      002EDF 06 00                10970 	ld	b, #0x00
      002EE1 69                   10971 	ld	l, c
      002EE2 60                   10972 	ld	h, b
      002EE3 29                   10973 	add	hl, hl
      002EE4 09                   10974 	add	hl, bc
      002EE5 29                   10975 	add	hl, hl
      002EE6 29                   10976 	add	hl, hl
      002EE7 09                   10977 	add	hl, bc
      002EE8 01rB4r00             10978 	ld	bc,#_projectiles
      002EEB 09                   10979 	add	hl,bc
      002EEC 01 04 00             10980 	ld	bc, #0x0004
      002EEF 09                   10981 	add	hl, bc
      002EF0 36 0C                10982 	ld	(hl), #0x0c
      002EF2 C3rA6r32             10983 	jp	00142$
      002EF5                      10984 00141$:
                                  10985 ;src/main.c:1035: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                  10986 ;src/main.c:1034: else if (xDir != 0 && yDir == 0) {
      002EF5 FAr0Er01             10987 	ld	a, (#_xDir)
      002EF8 B7                   10988 	or	a, a
      002EF9 CAr3Fr30             10989 	jp	Z, 00137$
      002EFC FAr0Fr01             10990 	ld	a, (#_yDir)
      002EFF B7                   10991 	or	a, a
      002F00 C2r3Fr30             10992 	jp	NZ, 00137$
                                  10993 ;src/main.c:1035: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      002F03 F8 04                10994 	ldhl	sp,	#4
      002F05 34                   10995 	inc	(hl)
      002F06 34                   10996 	inc	(hl)
      002F07 2B                   10997 	dec	hl
                                  10998 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002F08 3A                   10999 	ld	a, (hl-)
      002F09 22                   11000 	ld	(hl+), a
      002F0A 36 00                11001 	ld	(hl), #0x00
      002F0C 3E 02                11002 	ld	a, #0x02
      002F0E                      11003 00261$:
      002F0E F8 02                11004 	ldhl	sp,	#2
      002F10 CB 26                11005 	sla	(hl)
      002F12 23                   11006 	inc	hl
      002F13 CB 16                11007 	rl	(hl)
      002F15 3D                   11008 	dec	a
      002F16 20 F6                11009 	jr	NZ, 00261$
      002F18 2B                   11010 	dec	hl
      002F19 2A                   11011 	ld	a, (hl+)
      002F1A 5F                   11012 	ld	e, a
      002F1B 56                   11013 	ld	d, (hl)
      002F1C 21r00r00             11014 	ld	hl, #_shadow_OAM
      002F1F 19                   11015 	add	hl, de
      002F20 33                   11016 	inc	sp
      002F21 33                   11017 	inc	sp
      002F22 5D                   11018 	ld	e, l
      002F23 54                   11019 	ld	d, h
      002F24 D5                   11020 	push	de
      002F25 21 02 00             11021 	ld	hl, #0x0002
      002F28 19                   11022 	add	hl, de
      002F29 E5                   11023 	push	hl
      002F2A 7D                   11024 	ld	a, l
      002F2B F8 04                11025 	ldhl	sp,	#4
      002F2D 77                   11026 	ld	(hl), a
      002F2E E1                   11027 	pop	hl
      002F2F 7C                   11028 	ld	a, h
      002F30 F8 03                11029 	ldhl	sp,	#3
      002F32 32                   11030 	ld	(hl-), a
      002F33 2A                   11031 	ld	a, (hl+)
      002F34 5F                   11032 	ld	e, a
      002F35 2A                   11033 	ld	a, (hl+)
      002F36 57                   11034 	ld	d, a
      002F37 7E                   11035 	ld	a, (hl)
      002F38 12                   11036 	ld	(de), a
                                  11037 ;src/main.c:988: oldestProjectile += 1;
      002F39 FAr0Cr01             11038 	ld	a, (#_oldestProjectile)
      002F3C F8 04                11039 	ldhl	sp,	#4
      002F3E 77                   11040 	ld	(hl), a
                                  11041 ;src/main.c:1024: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002F3F 7E                   11042 	ld	a, (hl)
      002F40 C6 1E                11043 	add	a, #0x1e
      002F42 77                   11044 	ld	(hl), a
                                  11045 ;src/main.c:1036: if (xDir == 1) {
      002F43 FAr0Er01             11046 	ld	a, (#_xDir)
      002F46 3D                   11047 	dec	a
      002F47 20 7B                11048 	jr	NZ, 00119$
                                  11049 ;src/main.c:1037: set_sprite_prop(30+oldestProjectile, 0);
      002F49 F8 04                11050 	ldhl	sp,	#4
                                  11051 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002F4B 3A                   11052 	ld	a, (hl-)
      002F4C 22                   11053 	ld	(hl+), a
      002F4D 36 00                11054 	ld	(hl), #0x00
      002F4F 3E 02                11055 	ld	a, #0x02
      002F51                      11056 00264$:
      002F51 F8 03                11057 	ldhl	sp,	#3
      002F53 CB 26                11058 	sla	(hl)
      002F55 23                   11059 	inc	hl
      002F56 CB 16                11060 	rl	(hl)
      002F58 3D                   11061 	dec	a
      002F59 20 F6                11062 	jr	NZ, 00264$
      002F5B 2B                   11063 	dec	hl
      002F5C 2A                   11064 	ld	a, (hl+)
      002F5D 5F                   11065 	ld	e, a
      002F5E 56                   11066 	ld	d, (hl)
      002F5F 21r00r00             11067 	ld	hl, #_shadow_OAM
      002F62 19                   11068 	add	hl, de
      002F63 E5                   11069 	push	hl
      002F64 7D                   11070 	ld	a, l
      002F65 F8 03                11071 	ldhl	sp,	#3
      002F67 77                   11072 	ld	(hl), a
      002F68 E1                   11073 	pop	hl
      002F69 7C                   11074 	ld	a, h
      002F6A F8 02                11075 	ldhl	sp,	#2
      002F6C 32                   11076 	ld	(hl-), a
      002F6D 2A                   11077 	ld	a, (hl+)
      002F6E 5F                   11078 	ld	e, a
      002F6F 56                   11079 	ld	d, (hl)
      002F70 21 03 00             11080 	ld	hl, #0x0003
      002F73 19                   11081 	add	hl, de
      002F74 E5                   11082 	push	hl
      002F75 7D                   11083 	ld	a, l
      002F76 F8 05                11084 	ldhl	sp,	#5
      002F78 77                   11085 	ld	(hl), a
      002F79 E1                   11086 	pop	hl
      002F7A 7C                   11087 	ld	a, h
      002F7B F8 04                11088 	ldhl	sp,	#4
      002F7D 32                   11089 	ld	(hl-), a
      002F7E 2A                   11090 	ld	a,	(hl+)
      002F7F 66                   11091 	ld	h, (hl)
      002F80 6F                   11092 	ld	l, a
      002F81 36 00                11093 	ld	(hl), #0x00
                                  11094 ;src/main.c:1038: projectiles[oldestProjectile].offset = 12;
      002F83 21r0Cr01             11095 	ld	hl, #_oldestProjectile
      002F86 4E                   11096 	ld	c, (hl)
      002F87 06 00                11097 	ld	b, #0x00
      002F89 69                   11098 	ld	l, c
      002F8A 60                   11099 	ld	h, b
      002F8B 29                   11100 	add	hl, hl
      002F8C 09                   11101 	add	hl, bc
      002F8D 29                   11102 	add	hl, hl
      002F8E 29                   11103 	add	hl, hl
      002F8F 09                   11104 	add	hl, bc
      002F90 E5                   11105 	push	hl
      002F91 7D                   11106 	ld	a, l
      002F92 F8 05                11107 	ldhl	sp,	#5
      002F94 77                   11108 	ld	(hl), a
      002F95 E1                   11109 	pop	hl
      002F96 7C                   11110 	ld	a, h
      002F97 F8 04                11111 	ldhl	sp,	#4
      002F99 32                   11112 	ld	(hl-), a
      002F9A 2A                   11113 	ld	a, (hl+)
      002F9B 5F                   11114 	ld	e, a
      002F9C 56                   11115 	ld	d, (hl)
      002F9D 21rB4r00             11116 	ld	hl, #_projectiles
      002FA0 19                   11117 	add	hl, de
      002FA1 E5                   11118 	push	hl
      002FA2 7D                   11119 	ld	a, l
      002FA3 F8 03                11120 	ldhl	sp,	#3
      002FA5 77                   11121 	ld	(hl), a
      002FA6 E1                   11122 	pop	hl
      002FA7 7C                   11123 	ld	a, h
      002FA8 F8 02                11124 	ldhl	sp,	#2
      002FAA 32                   11125 	ld	(hl-), a
      002FAB 2A                   11126 	ld	a, (hl+)
      002FAC 5F                   11127 	ld	e, a
      002FAD 56                   11128 	ld	d, (hl)
      002FAE 21 04 00             11129 	ld	hl, #0x0004
      002FB1 19                   11130 	add	hl, de
      002FB2 E5                   11131 	push	hl
      002FB3 7D                   11132 	ld	a, l
      002FB4 F8 05                11133 	ldhl	sp,	#5
      002FB6 77                   11134 	ld	(hl), a
      002FB7 E1                   11135 	pop	hl
      002FB8 7C                   11136 	ld	a, h
      002FB9 F8 04                11137 	ldhl	sp,	#4
      002FBB 32                   11138 	ld	(hl-), a
      002FBC 2A                   11139 	ld	a,	(hl+)
      002FBD 66                   11140 	ld	h, (hl)
      002FBE 6F                   11141 	ld	l, a
      002FBF 36 0C                11142 	ld	(hl), #0x0c
      002FC1 C3rA6r32             11143 	jp	00142$
      002FC4                      11144 00119$:
                                  11145 ;src/main.c:1041: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002FC4 F8 04                11146 	ldhl	sp,	#4
                                  11147 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002FC6 3A                   11148 	ld	a, (hl-)
      002FC7 22                   11149 	ld	(hl+), a
      002FC8 36 00                11150 	ld	(hl), #0x00
      002FCA 3E 02                11151 	ld	a, #0x02
      002FCC                      11152 00265$:
      002FCC F8 03                11153 	ldhl	sp,	#3
      002FCE CB 26                11154 	sla	(hl)
      002FD0 23                   11155 	inc	hl
      002FD1 CB 16                11156 	rl	(hl)
      002FD3 3D                   11157 	dec	a
      002FD4 20 F6                11158 	jr	NZ, 00265$
      002FD6 2B                   11159 	dec	hl
      002FD7 2A                   11160 	ld	a, (hl+)
      002FD8 5F                   11161 	ld	e, a
      002FD9 56                   11162 	ld	d, (hl)
      002FDA 21r00r00             11163 	ld	hl, #_shadow_OAM
      002FDD 19                   11164 	add	hl, de
      002FDE E5                   11165 	push	hl
      002FDF 7D                   11166 	ld	a, l
      002FE0 F8 03                11167 	ldhl	sp,	#3
      002FE2 77                   11168 	ld	(hl), a
      002FE3 E1                   11169 	pop	hl
      002FE4 7C                   11170 	ld	a, h
      002FE5 F8 02                11171 	ldhl	sp,	#2
      002FE7 32                   11172 	ld	(hl-), a
      002FE8 2A                   11173 	ld	a, (hl+)
      002FE9 5F                   11174 	ld	e, a
      002FEA 56                   11175 	ld	d, (hl)
      002FEB 21 03 00             11176 	ld	hl, #0x0003
      002FEE 19                   11177 	add	hl, de
      002FEF E5                   11178 	push	hl
      002FF0 7D                   11179 	ld	a, l
      002FF1 F8 05                11180 	ldhl	sp,	#5
      002FF3 77                   11181 	ld	(hl), a
      002FF4 E1                   11182 	pop	hl
      002FF5 7C                   11183 	ld	a, h
      002FF6 F8 04                11184 	ldhl	sp,	#4
      002FF8 32                   11185 	ld	(hl-), a
      002FF9 2A                   11186 	ld	a,	(hl+)
      002FFA 66                   11187 	ld	h, (hl)
      002FFB 6F                   11188 	ld	l, a
      002FFC 36 20                11189 	ld	(hl), #0x20
                                  11190 ;src/main.c:1042: projectiles[oldestProjectile].offset = 12;
      002FFE 21r0Cr01             11191 	ld	hl, #_oldestProjectile
      003001 4E                   11192 	ld	c, (hl)
      003002 06 00                11193 	ld	b, #0x00
      003004 69                   11194 	ld	l, c
      003005 60                   11195 	ld	h, b
      003006 29                   11196 	add	hl, hl
      003007 09                   11197 	add	hl, bc
      003008 29                   11198 	add	hl, hl
      003009 29                   11199 	add	hl, hl
      00300A 09                   11200 	add	hl, bc
      00300B E5                   11201 	push	hl
      00300C 7D                   11202 	ld	a, l
      00300D F8 05                11203 	ldhl	sp,	#5
      00300F 77                   11204 	ld	(hl), a
      003010 E1                   11205 	pop	hl
      003011 7C                   11206 	ld	a, h
      003012 F8 04                11207 	ldhl	sp,	#4
      003014 32                   11208 	ld	(hl-), a
      003015 2A                   11209 	ld	a, (hl+)
      003016 5F                   11210 	ld	e, a
      003017 56                   11211 	ld	d, (hl)
      003018 21rB4r00             11212 	ld	hl, #_projectiles
      00301B 19                   11213 	add	hl, de
      00301C E5                   11214 	push	hl
      00301D 7D                   11215 	ld	a, l
      00301E F8 03                11216 	ldhl	sp,	#3
      003020 77                   11217 	ld	(hl), a
      003021 E1                   11218 	pop	hl
      003022 7C                   11219 	ld	a, h
      003023 F8 02                11220 	ldhl	sp,	#2
      003025 32                   11221 	ld	(hl-), a
      003026 2A                   11222 	ld	a, (hl+)
      003027 5F                   11223 	ld	e, a
      003028 56                   11224 	ld	d, (hl)
      003029 21 04 00             11225 	ld	hl, #0x0004
      00302C 19                   11226 	add	hl, de
      00302D E5                   11227 	push	hl
      00302E 7D                   11228 	ld	a, l
      00302F F8 05                11229 	ldhl	sp,	#5
      003031 77                   11230 	ld	(hl), a
      003032 E1                   11231 	pop	hl
      003033 7C                   11232 	ld	a, h
      003034 F8 04                11233 	ldhl	sp,	#4
      003036 32                   11234 	ld	(hl-), a
      003037 2A                   11235 	ld	a,	(hl+)
      003038 66                   11236 	ld	h, (hl)
      003039 6F                   11237 	ld	l, a
      00303A 36 0C                11238 	ld	(hl), #0x0c
      00303C C3rA6r32             11239 	jp	00142$
      00303F                      11240 00137$:
                                  11241 ;src/main.c:1046: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      00303F F8 04                11242 	ldhl	sp,	#4
      003041 7E                   11243 	ld	a, (hl)
      003042 C6 04                11244 	add	a, #0x04
      003044 F8 00                11245 	ldhl	sp,	#0
      003046 77                   11246 	ld	(hl), a
      003047 F8 03                11247 	ldhl	sp,	#3
                                  11248 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003049 7E                   11249 	ld	a, (hl)
      00304A 22                   11250 	ld	(hl+), a
      00304B 36 00                11251 	ld	(hl), #0x00
      00304D 3E 02                11252 	ld	a, #0x02
      00304F                      11253 00266$:
      00304F F8 03                11254 	ldhl	sp,	#3
      003051 CB 26                11255 	sla	(hl)
      003053 23                   11256 	inc	hl
      003054 CB 16                11257 	rl	(hl)
      003056 3D                   11258 	dec	a
      003057 20 F6                11259 	jr	NZ, 00266$
      003059 2B                   11260 	dec	hl
      00305A 2A                   11261 	ld	a, (hl+)
      00305B 5F                   11262 	ld	e, a
      00305C 56                   11263 	ld	d, (hl)
      00305D 21r00r00             11264 	ld	hl, #_shadow_OAM
      003060 19                   11265 	add	hl, de
      003061 E5                   11266 	push	hl
      003062 7D                   11267 	ld	a, l
      003063 F8 03                11268 	ldhl	sp,	#3
      003065 77                   11269 	ld	(hl), a
      003066 E1                   11270 	pop	hl
      003067 7C                   11271 	ld	a, h
      003068 F8 02                11272 	ldhl	sp,	#2
      00306A 32                   11273 	ld	(hl-), a
      00306B 2A                   11274 	ld	a, (hl+)
      00306C 5F                   11275 	ld	e, a
      00306D 56                   11276 	ld	d, (hl)
      00306E 21 02 00             11277 	ld	hl, #0x0002
      003071 19                   11278 	add	hl, de
      003072 E5                   11279 	push	hl
      003073 7D                   11280 	ld	a, l
      003074 F8 05                11281 	ldhl	sp,	#5
      003076 77                   11282 	ld	(hl), a
      003077 E1                   11283 	pop	hl
      003078 7C                   11284 	ld	a, h
      003079 F8 04                11285 	ldhl	sp,	#4
      00307B 32                   11286 	ld	(hl-), a
      00307C 2A                   11287 	ld	a, (hl+)
      00307D 5F                   11288 	ld	e, a
      00307E 56                   11289 	ld	d, (hl)
      00307F F8 00                11290 	ldhl	sp,	#0
      003081 7E                   11291 	ld	a, (hl)
      003082 12                   11292 	ld	(de), a
                                  11293 ;src/main.c:1047: if (xDir == 1 && yDir == -1) {
      003083 FAr0Er01             11294 	ld	a, (#_xDir)
      003086 3D                   11295 	dec	a
      003087 3E 01                11296 	ld	a, #0x01
      003089 28 01                11297 	jr	Z, 00268$
      00308B AF                   11298 	xor	a, a
      00308C                      11299 00268$:
      00308C F8 04                11300 	ldhl	sp,	#4
      00308E 77                   11301 	ld	(hl), a
                                  11302 ;src/main.c:988: oldestProjectile += 1;
      00308F 21r0Cr01             11303 	ld	hl, #_oldestProjectile
      003092 4E                   11304 	ld	c, (hl)
                                  11305 ;src/main.c:1047: if (xDir == 1 && yDir == -1) {
      003093 FAr0Fr01             11306 	ld	a, (#_yDir)
      003096 3C                   11307 	inc	a
      003097 3E 01                11308 	ld	a, #0x01
      003099 28 01                11309 	jr	Z, 00270$
      00309B AF                   11310 	xor	a, a
      00309C                      11311 00270$:
      00309C F8 01                11312 	ldhl	sp,	#1
                                  11313 ;src/main.c:1024: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00309E 22                   11314 	ld	(hl+), a
      00309F 79                   11315 	ld	a, c
      0030A0 C6 1E                11316 	add	a, #0x1e
                                  11317 ;src/main.c:1047: if (xDir == 1 && yDir == -1) {
      0030A2 22                   11318 	ld	(hl+), a
      0030A3 23                   11319 	inc	hl
      0030A4 7E                   11320 	ld	a, (hl)
      0030A5 B7                   11321 	or	a, a
      0030A6 CAr29r31             11322 	jp	Z, 00133$
      0030A9 F8 01                11323 	ldhl	sp,	#1
      0030AB 7E                   11324 	ld	a, (hl)
      0030AC B7                   11325 	or	a, a
      0030AD 28 7A                11326 	jr	Z, 00133$
                                  11327 ;src/main.c:1048: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      0030AF 23                   11328 	inc	hl
                                  11329 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0030B0 2A                   11330 	ld	a, (hl+)
      0030B1 22                   11331 	ld	(hl+), a
      0030B2 36 00                11332 	ld	(hl), #0x00
      0030B4 3E 02                11333 	ld	a, #0x02
      0030B6                      11334 00271$:
      0030B6 F8 03                11335 	ldhl	sp,	#3
      0030B8 CB 26                11336 	sla	(hl)
      0030BA 23                   11337 	inc	hl
      0030BB CB 16                11338 	rl	(hl)
      0030BD 3D                   11339 	dec	a
      0030BE 20 F6                11340 	jr	NZ, 00271$
      0030C0 2B                   11341 	dec	hl
      0030C1 2A                   11342 	ld	a, (hl+)
      0030C2 5F                   11343 	ld	e, a
      0030C3 56                   11344 	ld	d, (hl)
      0030C4 21r00r00             11345 	ld	hl, #_shadow_OAM
      0030C7 19                   11346 	add	hl, de
      0030C8 E5                   11347 	push	hl
      0030C9 7D                   11348 	ld	a, l
      0030CA F8 03                11349 	ldhl	sp,	#3
      0030CC 77                   11350 	ld	(hl), a
      0030CD E1                   11351 	pop	hl
      0030CE 7C                   11352 	ld	a, h
      0030CF F8 02                11353 	ldhl	sp,	#2
      0030D1 32                   11354 	ld	(hl-), a
      0030D2 2A                   11355 	ld	a, (hl+)
      0030D3 5F                   11356 	ld	e, a
      0030D4 56                   11357 	ld	d, (hl)
      0030D5 21 03 00             11358 	ld	hl, #0x0003
      0030D8 19                   11359 	add	hl, de
      0030D9 E5                   11360 	push	hl
      0030DA 7D                   11361 	ld	a, l
      0030DB F8 05                11362 	ldhl	sp,	#5
      0030DD 77                   11363 	ld	(hl), a
      0030DE E1                   11364 	pop	hl
      0030DF 7C                   11365 	ld	a, h
      0030E0 F8 04                11366 	ldhl	sp,	#4
      0030E2 32                   11367 	ld	(hl-), a
      0030E3 2A                   11368 	ld	a,	(hl+)
      0030E4 66                   11369 	ld	h, (hl)
      0030E5 6F                   11370 	ld	l, a
      0030E6 36 00                11371 	ld	(hl), #0x00
                                  11372 ;src/main.c:1049: projectiles[oldestProjectile].offset = 12;
      0030E8 21r0Cr01             11373 	ld	hl, #_oldestProjectile
      0030EB 4E                   11374 	ld	c, (hl)
      0030EC 06 00                11375 	ld	b, #0x00
      0030EE 69                   11376 	ld	l, c
      0030EF 60                   11377 	ld	h, b
      0030F0 29                   11378 	add	hl, hl
      0030F1 09                   11379 	add	hl, bc
      0030F2 29                   11380 	add	hl, hl
      0030F3 29                   11381 	add	hl, hl
      0030F4 09                   11382 	add	hl, bc
      0030F5 E5                   11383 	push	hl
      0030F6 7D                   11384 	ld	a, l
      0030F7 F8 05                11385 	ldhl	sp,	#5
      0030F9 77                   11386 	ld	(hl), a
      0030FA E1                   11387 	pop	hl
      0030FB 7C                   11388 	ld	a, h
      0030FC F8 04                11389 	ldhl	sp,	#4
      0030FE 32                   11390 	ld	(hl-), a
      0030FF 2A                   11391 	ld	a, (hl+)
      003100 5F                   11392 	ld	e, a
      003101 56                   11393 	ld	d, (hl)
      003102 21rB4r00             11394 	ld	hl, #_projectiles
      003105 19                   11395 	add	hl, de
      003106 E5                   11396 	push	hl
      003107 7D                   11397 	ld	a, l
      003108 F8 03                11398 	ldhl	sp,	#3
      00310A 77                   11399 	ld	(hl), a
      00310B E1                   11400 	pop	hl
      00310C 7C                   11401 	ld	a, h
      00310D F8 02                11402 	ldhl	sp,	#2
      00310F 32                   11403 	ld	(hl-), a
      003110 2A                   11404 	ld	a, (hl+)
      003111 5F                   11405 	ld	e, a
      003112 56                   11406 	ld	d, (hl)
      003113 21 04 00             11407 	ld	hl, #0x0004
      003116 19                   11408 	add	hl, de
      003117 E5                   11409 	push	hl
      003118 7D                   11410 	ld	a, l
      003119 F8 05                11411 	ldhl	sp,	#5
      00311B 77                   11412 	ld	(hl), a
      00311C E1                   11413 	pop	hl
      00311D 7C                   11414 	ld	a, h
      00311E F8 04                11415 	ldhl	sp,	#4
      003120 32                   11416 	ld	(hl-), a
      003121 2A                   11417 	ld	a,	(hl+)
      003122 66                   11418 	ld	h, (hl)
      003123 6F                   11419 	ld	l, a
      003124 36 0C                11420 	ld	(hl), #0x0c
      003126 C3rA6r32             11421 	jp	00142$
      003129                      11422 00133$:
                                  11423 ;src/main.c:1025: if (yDir == 1) {
      003129 FAr0Fr01             11424 	ld	a, (#_yDir)
      00312C 3D                   11425 	dec	a
      00312D 3E 01                11426 	ld	a, #0x01
      00312F 28 01                11427 	jr	Z, 00273$
      003131 AF                   11428 	xor	a, a
      003132                      11429 00273$:
      003132 F8 03                11430 	ldhl	sp,	#3
                                  11431 ;src/main.c:1051: else if (xDir == 1 && yDir == 1) {
      003134 22                   11432 	ld	(hl+), a
      003135 7E                   11433 	ld	a, (hl)
      003136 B7                   11434 	or	a, a
      003137 CArB9r31             11435 	jp	Z, 00129$
      00313A 2B                   11436 	dec	hl
      00313B 7E                   11437 	ld	a, (hl)
      00313C B7                   11438 	or	a, a
      00313D 28 7A                11439 	jr	Z, 00129$
                                  11440 ;src/main.c:1052: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      00313F 2B                   11441 	dec	hl
                                  11442 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      003140 2A                   11443 	ld	a, (hl+)
      003141 22                   11444 	ld	(hl+), a
      003142 36 00                11445 	ld	(hl), #0x00
      003144 3E 02                11446 	ld	a, #0x02
      003146                      11447 00274$:
      003146 F8 03                11448 	ldhl	sp,	#3
      003148 CB 26                11449 	sla	(hl)
      00314A 23                   11450 	inc	hl
      00314B CB 16                11451 	rl	(hl)
      00314D 3D                   11452 	dec	a
      00314E 20 F6                11453 	jr	NZ, 00274$
      003150 2B                   11454 	dec	hl
      003151 2A                   11455 	ld	a, (hl+)
      003152 5F                   11456 	ld	e, a
      003153 56                   11457 	ld	d, (hl)
      003154 21r00r00             11458 	ld	hl, #_shadow_OAM
      003157 19                   11459 	add	hl, de
      003158 E5                   11460 	push	hl
      003159 7D                   11461 	ld	a, l
      00315A F8 03                11462 	ldhl	sp,	#3
      00315C 77                   11463 	ld	(hl), a
      00315D E1                   11464 	pop	hl
      00315E 7C                   11465 	ld	a, h
      00315F F8 02                11466 	ldhl	sp,	#2
      003161 32                   11467 	ld	(hl-), a
      003162 2A                   11468 	ld	a, (hl+)
      003163 5F                   11469 	ld	e, a
      003164 56                   11470 	ld	d, (hl)
      003165 21 03 00             11471 	ld	hl, #0x0003
      003168 19                   11472 	add	hl, de
      003169 E5                   11473 	push	hl
      00316A 7D                   11474 	ld	a, l
      00316B F8 05                11475 	ldhl	sp,	#5
      00316D 77                   11476 	ld	(hl), a
      00316E E1                   11477 	pop	hl
      00316F 7C                   11478 	ld	a, h
      003170 F8 04                11479 	ldhl	sp,	#4
      003172 32                   11480 	ld	(hl-), a
      003173 2A                   11481 	ld	a,	(hl+)
      003174 66                   11482 	ld	h, (hl)
      003175 6F                   11483 	ld	l, a
      003176 36 40                11484 	ld	(hl), #0x40
                                  11485 ;src/main.c:1053: projectiles[oldestProjectile].offset = 4;
      003178 21r0Cr01             11486 	ld	hl, #_oldestProjectile
      00317B 4E                   11487 	ld	c, (hl)
      00317C 06 00                11488 	ld	b, #0x00
      00317E 69                   11489 	ld	l, c
      00317F 60                   11490 	ld	h, b
      003180 29                   11491 	add	hl, hl
      003181 09                   11492 	add	hl, bc
      003182 29                   11493 	add	hl, hl
      003183 29                   11494 	add	hl, hl
      003184 09                   11495 	add	hl, bc
      003185 E5                   11496 	push	hl
      003186 7D                   11497 	ld	a, l
      003187 F8 05                11498 	ldhl	sp,	#5
      003189 77                   11499 	ld	(hl), a
      00318A E1                   11500 	pop	hl
      00318B 7C                   11501 	ld	a, h
      00318C F8 04                11502 	ldhl	sp,	#4
      00318E 32                   11503 	ld	(hl-), a
      00318F 2A                   11504 	ld	a, (hl+)
      003190 5F                   11505 	ld	e, a
      003191 56                   11506 	ld	d, (hl)
      003192 21rB4r00             11507 	ld	hl, #_projectiles
      003195 19                   11508 	add	hl, de
      003196 E5                   11509 	push	hl
      003197 7D                   11510 	ld	a, l
      003198 F8 03                11511 	ldhl	sp,	#3
      00319A 77                   11512 	ld	(hl), a
      00319B E1                   11513 	pop	hl
      00319C 7C                   11514 	ld	a, h
      00319D F8 02                11515 	ldhl	sp,	#2
      00319F 32                   11516 	ld	(hl-), a
      0031A0 2A                   11517 	ld	a, (hl+)
      0031A1 5F                   11518 	ld	e, a
      0031A2 56                   11519 	ld	d, (hl)
      0031A3 21 04 00             11520 	ld	hl, #0x0004
      0031A6 19                   11521 	add	hl, de
      0031A7 E5                   11522 	push	hl
      0031A8 7D                   11523 	ld	a, l
      0031A9 F8 05                11524 	ldhl	sp,	#5
      0031AB 77                   11525 	ld	(hl), a
      0031AC E1                   11526 	pop	hl
      0031AD 7C                   11527 	ld	a, h
      0031AE F8 04                11528 	ldhl	sp,	#4
      0031B0 32                   11529 	ld	(hl-), a
      0031B1 2A                   11530 	ld	a,	(hl+)
      0031B2 66                   11531 	ld	h, (hl)
      0031B3 6F                   11532 	ld	l, a
      0031B4 36 04                11533 	ld	(hl), #0x04
      0031B6 C3rA6r32             11534 	jp	00142$
      0031B9                      11535 00129$:
                                  11536 ;src/main.c:1055: else if (xDir == -1 && yDir == 1) {
      0031B9 FAr0Er01             11537 	ld	a, (#_xDir)
      0031BC 3C                   11538 	inc	a
      0031BD 3E 01                11539 	ld	a, #0x01
      0031BF 28 01                11540 	jr	Z, 00276$
      0031C1 AF                   11541 	xor	a, a
      0031C2                      11542 00276$:
      0031C2 F8 04                11543 	ldhl	sp,	#4
      0031C4 77                   11544 	ld	(hl), a
      0031C5 7E                   11545 	ld	a, (hl)
      0031C6 B7                   11546 	or	a, a
      0031C7 CAr48r32             11547 	jp	Z, 00125$
      0031CA 2B                   11548 	dec	hl
      0031CB 7E                   11549 	ld	a, (hl)
      0031CC B7                   11550 	or	a, a
      0031CD 28 79                11551 	jr	Z, 00125$
                                  11552 ;src/main.c:1056: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      0031CF 2B                   11553 	dec	hl
                                  11554 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0031D0 2A                   11555 	ld	a, (hl+)
      0031D1 22                   11556 	ld	(hl+), a
      0031D2 36 00                11557 	ld	(hl), #0x00
      0031D4 3E 02                11558 	ld	a, #0x02
      0031D6                      11559 00277$:
      0031D6 F8 03                11560 	ldhl	sp,	#3
      0031D8 CB 26                11561 	sla	(hl)
      0031DA 23                   11562 	inc	hl
      0031DB CB 16                11563 	rl	(hl)
      0031DD 3D                   11564 	dec	a
      0031DE 20 F6                11565 	jr	NZ, 00277$
      0031E0 2B                   11566 	dec	hl
      0031E1 2A                   11567 	ld	a, (hl+)
      0031E2 5F                   11568 	ld	e, a
      0031E3 56                   11569 	ld	d, (hl)
      0031E4 21r00r00             11570 	ld	hl, #_shadow_OAM
      0031E7 19                   11571 	add	hl, de
      0031E8 E5                   11572 	push	hl
      0031E9 7D                   11573 	ld	a, l
      0031EA F8 03                11574 	ldhl	sp,	#3
      0031EC 77                   11575 	ld	(hl), a
      0031ED E1                   11576 	pop	hl
      0031EE 7C                   11577 	ld	a, h
      0031EF F8 02                11578 	ldhl	sp,	#2
      0031F1 32                   11579 	ld	(hl-), a
      0031F2 2A                   11580 	ld	a, (hl+)
      0031F3 5F                   11581 	ld	e, a
      0031F4 56                   11582 	ld	d, (hl)
      0031F5 21 03 00             11583 	ld	hl, #0x0003
      0031F8 19                   11584 	add	hl, de
      0031F9 E5                   11585 	push	hl
      0031FA 7D                   11586 	ld	a, l
      0031FB F8 05                11587 	ldhl	sp,	#5
      0031FD 77                   11588 	ld	(hl), a
      0031FE E1                   11589 	pop	hl
      0031FF 7C                   11590 	ld	a, h
      003200 F8 04                11591 	ldhl	sp,	#4
      003202 32                   11592 	ld	(hl-), a
      003203 2A                   11593 	ld	a,	(hl+)
      003204 66                   11594 	ld	h, (hl)
      003205 6F                   11595 	ld	l, a
      003206 36 60                11596 	ld	(hl), #0x60
                                  11597 ;src/main.c:1057: projectiles[oldestProjectile].offset = 4;
      003208 21r0Cr01             11598 	ld	hl, #_oldestProjectile
      00320B 4E                   11599 	ld	c, (hl)
      00320C 06 00                11600 	ld	b, #0x00
      00320E 69                   11601 	ld	l, c
      00320F 60                   11602 	ld	h, b
      003210 29                   11603 	add	hl, hl
      003211 09                   11604 	add	hl, bc
      003212 29                   11605 	add	hl, hl
      003213 29                   11606 	add	hl, hl
      003214 09                   11607 	add	hl, bc
      003215 E5                   11608 	push	hl
      003216 7D                   11609 	ld	a, l
      003217 F8 05                11610 	ldhl	sp,	#5
      003219 77                   11611 	ld	(hl), a
      00321A E1                   11612 	pop	hl
      00321B 7C                   11613 	ld	a, h
      00321C F8 04                11614 	ldhl	sp,	#4
      00321E 32                   11615 	ld	(hl-), a
      00321F 2A                   11616 	ld	a, (hl+)
      003220 5F                   11617 	ld	e, a
      003221 56                   11618 	ld	d, (hl)
      003222 21rB4r00             11619 	ld	hl, #_projectiles
      003225 19                   11620 	add	hl, de
      003226 E5                   11621 	push	hl
      003227 7D                   11622 	ld	a, l
      003228 F8 03                11623 	ldhl	sp,	#3
      00322A 77                   11624 	ld	(hl), a
      00322B E1                   11625 	pop	hl
      00322C 7C                   11626 	ld	a, h
      00322D F8 02                11627 	ldhl	sp,	#2
      00322F 32                   11628 	ld	(hl-), a
      003230 2A                   11629 	ld	a, (hl+)
      003231 5F                   11630 	ld	e, a
      003232 56                   11631 	ld	d, (hl)
      003233 21 04 00             11632 	ld	hl, #0x0004
      003236 19                   11633 	add	hl, de
      003237 E5                   11634 	push	hl
      003238 7D                   11635 	ld	a, l
      003239 F8 05                11636 	ldhl	sp,	#5
      00323B 77                   11637 	ld	(hl), a
      00323C E1                   11638 	pop	hl
      00323D 7C                   11639 	ld	a, h
      00323E F8 04                11640 	ldhl	sp,	#4
      003240 32                   11641 	ld	(hl-), a
      003241 2A                   11642 	ld	a,	(hl+)
      003242 66                   11643 	ld	h, (hl)
      003243 6F                   11644 	ld	l, a
      003244 36 04                11645 	ld	(hl), #0x04
      003246 18 5E                11646 	jr	00142$
      003248                      11647 00125$:
                                  11648 ;src/main.c:1059: else if (xDir == -1 && yDir == -1) {
      003248 F8 04                11649 	ldhl	sp,	#4
      00324A 7E                   11650 	ld	a, (hl)
      00324B B7                   11651 	or	a, a
      00324C 28 58                11652 	jr	Z, 00142$
      00324E F8 01                11653 	ldhl	sp,	#1
      003250 7E                   11654 	ld	a, (hl)
      003251 B7                   11655 	or	a, a
      003252 28 52                11656 	jr	Z, 00142$
                                  11657 ;src/main.c:1060: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      003254 23                   11658 	inc	hl
                                  11659 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      003255 2A                   11660 	ld	a, (hl+)
      003256 22                   11661 	ld	(hl+), a
      003257 36 00                11662 	ld	(hl), #0x00
      003259 3E 02                11663 	ld	a, #0x02
      00325B                      11664 00278$:
      00325B F8 03                11665 	ldhl	sp,	#3
      00325D CB 26                11666 	sla	(hl)
      00325F 23                   11667 	inc	hl
      003260 CB 16                11668 	rl	(hl)
      003262 3D                   11669 	dec	a
      003263 20 F6                11670 	jr	NZ, 00278$
      003265 2B                   11671 	dec	hl
      003266 2A                   11672 	ld	a, (hl+)
      003267 5F                   11673 	ld	e, a
      003268 56                   11674 	ld	d, (hl)
      003269 21r00r00             11675 	ld	hl, #_shadow_OAM
      00326C 19                   11676 	add	hl, de
      00326D E5                   11677 	push	hl
      00326E 7D                   11678 	ld	a, l
      00326F F8 03                11679 	ldhl	sp,	#3
      003271 77                   11680 	ld	(hl), a
      003272 E1                   11681 	pop	hl
      003273 7C                   11682 	ld	a, h
      003274 F8 02                11683 	ldhl	sp,	#2
      003276 32                   11684 	ld	(hl-), a
      003277 2A                   11685 	ld	a, (hl+)
      003278 5F                   11686 	ld	e, a
      003279 56                   11687 	ld	d, (hl)
      00327A 21 03 00             11688 	ld	hl, #0x0003
      00327D 19                   11689 	add	hl, de
      00327E E5                   11690 	push	hl
      00327F 7D                   11691 	ld	a, l
      003280 F8 05                11692 	ldhl	sp,	#5
      003282 77                   11693 	ld	(hl), a
      003283 E1                   11694 	pop	hl
      003284 7C                   11695 	ld	a, h
      003285 F8 04                11696 	ldhl	sp,	#4
      003287 32                   11697 	ld	(hl-), a
      003288 2A                   11698 	ld	a,	(hl+)
      003289 66                   11699 	ld	h, (hl)
      00328A 6F                   11700 	ld	l, a
      00328B 36 20                11701 	ld	(hl), #0x20
                                  11702 ;src/main.c:1061: projectiles[oldestProjectile].offset = 12;
      00328D 21r0Cr01             11703 	ld	hl, #_oldestProjectile
      003290 4E                   11704 	ld	c, (hl)
      003291 06 00                11705 	ld	b, #0x00
      003293 69                   11706 	ld	l, c
      003294 60                   11707 	ld	h, b
      003295 29                   11708 	add	hl, hl
      003296 09                   11709 	add	hl, bc
      003297 29                   11710 	add	hl, hl
      003298 29                   11711 	add	hl, hl
      003299 09                   11712 	add	hl, bc
      00329A 01rB4r00             11713 	ld	bc,#_projectiles
      00329D 09                   11714 	add	hl,bc
      00329E 4D                   11715 	ld	c, l
      00329F 44                   11716 	ld	b, h
      0032A0 21 04 00             11717 	ld	hl, #0x0004
      0032A3 09                   11718 	add	hl, bc
      0032A4 36 0C                11719 	ld	(hl), #0x0c
      0032A6                      11720 00142$:
                                  11721 ;src/main.c:1065: fireCooldown = projectiles[oldestProjectile].delay;
      0032A6 21r0Cr01             11722 	ld	hl, #_oldestProjectile
      0032A9 4E                   11723 	ld	c, (hl)
      0032AA 06 00                11724 	ld	b, #0x00
      0032AC 69                   11725 	ld	l, c
      0032AD 60                   11726 	ld	h, b
      0032AE 29                   11727 	add	hl, hl
      0032AF 09                   11728 	add	hl, bc
      0032B0 29                   11729 	add	hl, hl
      0032B1 29                   11730 	add	hl, hl
      0032B2 09                   11731 	add	hl, bc
      0032B3 01rB4r00             11732 	ld	bc,#_projectiles
      0032B6 09                   11733 	add	hl,bc
      0032B7 01 0B 00             11734 	ld	bc, #0x000b
      0032BA 09                   11735 	add	hl, bc
      0032BB 7E                   11736 	ld	a, (hl)
      0032BC EAr0Dr01             11737 	ld	(#_fireCooldown),a
      0032BF                      11738 00155$:
                                  11739 ;src/main.c:1071: }
      0032BF E8 05                11740 	add	sp, #5
      0032C1 C9                   11741 	ret
                                  11742 ;src/main.c:1074: void moveProjectiles() {
                                  11743 ;	---------------------------------
                                  11744 ; Function moveProjectiles
                                  11745 ; ---------------------------------
      0032C2                      11746 _moveProjectiles::
      0032C2 E8 F6                11747 	add	sp, #-10
                                  11748 ;src/main.c:1075: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0032C4 F8 09                11749 	ldhl	sp,	#9
      0032C6 36 00                11750 	ld	(hl), #0x00
      0032C8                      11751 00112$:
      0032C8 21rBFr10             11752 	ld	hl, #_PROJECTILECOUNT
      0032CB 4E                   11753 	ld	c, (hl)
      0032CC F8 09                11754 	ldhl	sp,	#9
      0032CE 7E                   11755 	ld	a, (hl)
      0032CF 91                   11756 	sub	a, c
      0032D0 D2rA2r34             11757 	jp	NC, 00114$
                                  11758 ;src/main.c:1076: if (projectiles[i].active) {
      0032D3 4E                   11759 	ld	c, (hl)
      0032D4 06 00                11760 	ld	b, #0x00
      0032D6 69                   11761 	ld	l, c
      0032D7 60                   11762 	ld	h, b
      0032D8 29                   11763 	add	hl, hl
      0032D9 09                   11764 	add	hl, bc
      0032DA 29                   11765 	add	hl, hl
      0032DB 29                   11766 	add	hl, hl
      0032DC 09                   11767 	add	hl, bc
      0032DD 01rB4r00             11768 	ld	bc,#_projectiles
      0032E0 09                   11769 	add	hl,bc
      0032E1 E5                   11770 	push	hl
      0032E2 7D                   11771 	ld	a, l
      0032E3 F8 07                11772 	ldhl	sp,	#7
      0032E5 77                   11773 	ld	(hl), a
      0032E6 E1                   11774 	pop	hl
      0032E7 7C                   11775 	ld	a, h
      0032E8 F8 06                11776 	ldhl	sp,	#6
      0032EA 32                   11777 	ld	(hl-), a
      0032EB 2A                   11778 	ld	a, (hl+)
      0032EC 5F                   11779 	ld	e, a
      0032ED 56                   11780 	ld	d, (hl)
      0032EE 21 0A 00             11781 	ld	hl, #0x000a
      0032F1 19                   11782 	add	hl, de
      0032F2 4D                   11783 	ld	c, l
      0032F3 44                   11784 	ld	b, h
      0032F4 0A                   11785 	ld	a, (bc)
      0032F5 F8 08                11786 	ldhl	sp,	#8
      0032F7 77                   11787 	ld	(hl), a
      0032F8 7E                   11788 	ld	a, (hl)
      0032F9 B7                   11789 	or	a, a
      0032FA CAr9Cr34             11790 	jp	Z, 00113$
                                  11791 ;src/main.c:1077: projectiles[i].x -= xOverflow;
      0032FD 2B                   11792 	dec	hl
      0032FE 2B                   11793 	dec	hl
      0032FF 2B                   11794 	dec	hl
      003300 2A                   11795 	ld	a, (hl+)
      003301 5F                   11796 	ld	e, a
      003302 56                   11797 	ld	d, (hl)
      003303 1A                   11798 	ld	a, (de)
      003304 47                   11799 	ld	b, a
      003305 13                   11800 	inc	de
      003306 1A                   11801 	ld	a, (de)
      003307 4F                   11802 	ld	c, a
      003308 58                   11803 	ld	e, b
      003309 51                   11804 	ld	d, c
      00330A 21r1Er01             11805 	ld	hl, #_xOverflow
      00330D 2A                   11806 	ld	a,	(hl+)
      00330E 66                   11807 	ld	h, (hl)
      00330F 6F                   11808 	ld	l, a
      003310 7B                   11809 	ld	a, e
      003311 95                   11810 	sub	a, l
      003312 5F                   11811 	ld	e, a
      003313 7A                   11812 	ld	a, d
      003314 9C                   11813 	sbc	a, h
      003315 F8 01                11814 	ldhl	sp,	#1
      003317 32                   11815 	ld	(hl-), a
      003318 73                   11816 	ld	(hl), e
      003319 F8 05                11817 	ldhl	sp,#5
      00331B 2A                   11818 	ld	a, (hl+)
      00331C 5F                   11819 	ld	e, a
      00331D 56                   11820 	ld	d, (hl)
      00331E F8 00                11821 	ldhl	sp,	#0
      003320 2A                   11822 	ld	a, (hl+)
      003321 12                   11823 	ld	(de), a
      003322 13                   11824 	inc	de
      003323 7E                   11825 	ld	a, (hl)
      003324 12                   11826 	ld	(de), a
                                  11827 ;src/main.c:1078: projectiles[i].y -= yOverflow;
      003325 F8 05                11828 	ldhl	sp,#5
      003327 2A                   11829 	ld	a, (hl+)
      003328 5F                   11830 	ld	e, a
      003329 56                   11831 	ld	d, (hl)
      00332A 21 02 00             11832 	ld	hl, #0x0002
      00332D 19                   11833 	add	hl, de
      00332E E5                   11834 	push	hl
      00332F 7D                   11835 	ld	a, l
      003330 F8 04                11836 	ldhl	sp,	#4
      003332 77                   11837 	ld	(hl), a
      003333 E1                   11838 	pop	hl
      003334 7C                   11839 	ld	a, h
      003335 F8 03                11840 	ldhl	sp,	#3
      003337 32                   11841 	ld	(hl-), a
      003338 2A                   11842 	ld	a, (hl+)
      003339 5F                   11843 	ld	e, a
      00333A 56                   11844 	ld	d, (hl)
      00333B 1A                   11845 	ld	a, (de)
      00333C 4F                   11846 	ld	c, a
      00333D 13                   11847 	inc	de
      00333E 1A                   11848 	ld	a, (de)
      00333F 47                   11849 	ld	b, a
      003340 79                   11850 	ld	a, c
      003341 21r20r01             11851 	ld	hl, #_yOverflow
      003344 96                   11852 	sub	a, (hl)
      003345 23                   11853 	inc	hl
      003346 4F                   11854 	ld	c, a
      003347 78                   11855 	ld	a, b
      003348 9E                   11856 	sbc	a, (hl)
      003349 47                   11857 	ld	b, a
      00334A F8 02                11858 	ldhl	sp,	#2
      00334C 2A                   11859 	ld	a,	(hl+)
      00334D 66                   11860 	ld	h, (hl)
      00334E 6F                   11861 	ld	l, a
      00334F 79                   11862 	ld	a, c
      003350 22                   11863 	ld	(hl+), a
      003351 70                   11864 	ld	(hl), b
                                  11865 ;src/main.c:1080: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      003352 F8 05                11866 	ldhl	sp,#5
      003354 2A                   11867 	ld	a, (hl+)
      003355 5F                   11868 	ld	e, a
      003356 56                   11869 	ld	d, (hl)
      003357 21 06 00             11870 	ld	hl, #0x0006
      00335A 19                   11871 	add	hl, de
      00335B 5D                   11872 	ld	e, l
      00335C 54                   11873 	ld	d, h
      00335D 1A                   11874 	ld	a, (de)
      00335E 6F                   11875 	ld	l, a
                                  11876 ;	spillPairReg hl
                                  11877 ;	spillPairReg hl
      00335F 07                   11878 	rlca
      003360 9F                   11879 	sbc	a, a
      003361 67                   11880 	ld	h, a
                                  11881 ;	spillPairReg hl
                                  11882 ;	spillPairReg hl
      003362 09                   11883 	add	hl, bc
      003363 4D                   11884 	ld	c, l
      003364 44                   11885 	ld	b, h
                                  11886 ;src/main.c:1081: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      003365 F8 05                11887 	ldhl	sp,#5
      003367 2A                   11888 	ld	a, (hl+)
      003368 5F                   11889 	ld	e, a
      003369 56                   11890 	ld	d, (hl)
      00336A 21 05 00             11891 	ld	hl, #0x0005
      00336D 19                   11892 	add	hl, de
      00336E 5D                   11893 	ld	e, l
      00336F 54                   11894 	ld	d, h
      003370 1A                   11895 	ld	a, (de)
      003371 F8 07                11896 	ldhl	sp,	#7
      003373 22                   11897 	ld	(hl+), a
      003374 07                   11898 	rlca
      003375 9F                   11899 	sbc	a, a
      003376 77                   11900 	ld	(hl), a
      003377 D1                   11901 	pop	de
      003378 D5                   11902 	push	de
      003379 3A                   11903 	ld	a, (hl-)
      00337A 6E                   11904 	ld	l, (hl)
      00337B 67                   11905 	ld	h, a
      00337C 19                   11906 	add	hl, de
      00337D 5D                   11907 	ld	e, l
      00337E 7C                   11908 	ld	a, h
      00337F F8 07                11909 	ldhl	sp,	#7
      003381 73                   11910 	ld	(hl), e
      003382 23                   11911 	inc	hl
      003383 77                   11912 	ld	(hl), a
                                  11913 ;src/main.c:1084: projectiles[i].y = newY;
      003384 F8 02                11914 	ldhl	sp,	#2
      003386 2A                   11915 	ld	a,	(hl+)
      003387 66                   11916 	ld	h, (hl)
      003388 6F                   11917 	ld	l, a
      003389 79                   11918 	ld	a, c
      00338A 22                   11919 	ld	(hl+), a
      00338B 70                   11920 	ld	(hl), b
                                  11921 ;src/main.c:1085: projectiles[i].x = newX;
      00338C F8 05                11922 	ldhl	sp,#5
      00338E 2A                   11923 	ld	a, (hl+)
      00338F 5F                   11924 	ld	e, a
      003390 2A                   11925 	ld	a, (hl+)
      003391 57                   11926 	ld	d, a
      003392 2A                   11927 	ld	a, (hl+)
      003393 12                   11928 	ld	(de), a
      003394 13                   11929 	inc	de
                                  11930 ;src/main.c:1089: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      003395 3A                   11931 	ld	a, (hl-)
      003396 2B                   11932 	dec	hl
      003397 2B                   11933 	dec	hl
      003398 12                   11934 	ld	(de), a
      003399 2A                   11935 	ld	a, (hl+)
      00339A 5F                   11936 	ld	e, a
      00339B 56                   11937 	ld	d, (hl)
      00339C 21 04 00             11938 	ld	hl, #0x0004
      00339F 19                   11939 	add	hl, de
      0033A0 5D                   11940 	ld	e, l
      0033A1 54                   11941 	ld	d, h
      0033A2 1A                   11942 	ld	a, (de)
      0033A3 81                   11943 	add	a, c
      0033A4 4F                   11944 	ld	c, a
      0033A5 F8 07                11945 	ldhl	sp,	#7
      0033A7 2A                   11946 	ld	a, (hl+)
      0033A8 23                   11947 	inc	hl
      0033A9 C6 04                11948 	add	a, #0x04
      0033AB 5F                   11949 	ld	e, a
      0033AC 7E                   11950 	ld	a, (hl)
      0033AD C6 1E                11951 	add	a, #0x1e
      0033AF F8 04                11952 	ldhl	sp,	#4
      0033B1 77                   11953 	ld	(hl), a
                                  11954 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0033B2 6E                   11955 	ld	l, (hl)
                                  11956 ;	spillPairReg hl
                                  11957 ;	spillPairReg hl
      0033B3 26 00                11958 	ld	h, #0x00
                                  11959 ;	spillPairReg hl
                                  11960 ;	spillPairReg hl
      0033B5 29                   11961 	add	hl, hl
      0033B6 29                   11962 	add	hl, hl
      0033B7 D5                   11963 	push	de
      0033B8 11r00r00             11964 	ld	de, #_shadow_OAM
      0033BB 19                   11965 	add	hl, de
      0033BC D1                   11966 	pop	de
                                  11967 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0033BD 79                   11968 	ld	a, c
      0033BE 22                   11969 	ld	(hl+), a
      0033BF 73                   11970 	ld	(hl), e
                                  11971 ;src/main.c:1093: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0033C0 F8 05                11972 	ldhl	sp,#5
      0033C2 2A                   11973 	ld	a, (hl+)
      0033C3 5F                   11974 	ld	e, a
      0033C4 3A                   11975 	ld	a, (hl-)
      0033C5 57                   11976 	ld	d, a
      0033C6 1A                   11977 	ld	a, (de)
      0033C7 22                   11978 	ld	(hl+), a
      0033C8 13                   11979 	inc	de
      0033C9 1A                   11980 	ld	a, (de)
      0033CA 22                   11981 	ld	(hl+), a
      0033CB 23                   11982 	inc	hl
      0033CC CB 7E                11983 	bit	7, (hl)
      0033CE 20 51                11984 	jr	NZ, 00101$
      0033D0 F8 05                11985 	ldhl	sp,	#5
      0033D2 2A                   11986 	ld	a, (hl+)
      0033D3 23                   11987 	inc	hl
      0033D4 32                   11988 	ld	(hl-), a
      0033D5 2A                   11989 	ld	a, (hl+)
      0033D6 23                   11990 	inc	hl
      0033D7 32                   11991 	ld	(hl-), a
      0033D8 3E AA                11992 	ld	a, #0xaa
      0033DA 96                   11993 	sub	a, (hl)
      0033DB 23                   11994 	inc	hl
      0033DC 3E 00                11995 	ld	a, #0x00
      0033DE 9E                   11996 	sbc	a, (hl)
      0033DF 3E 00                11997 	ld	a, #0x00
      0033E1 57                   11998 	ld	d, a
      0033E2 CB 7E                11999 	bit	7, (hl)
      0033E4 28 07                12000 	jr	Z, 00147$
      0033E6 CB 7A                12001 	bit	7, d
      0033E8 20 08                12002 	jr	NZ, 00148$
      0033EA BF                   12003 	cp	a, a
      0033EB 18 05                12004 	jr	00148$
      0033ED                      12005 00147$:
      0033ED CB 7A                12006 	bit	7, d
      0033EF 28 01                12007 	jr	Z, 00148$
      0033F1 37                   12008 	scf
      0033F2                      12009 00148$:
      0033F2 38 2D                12010 	jr	C, 00101$
      0033F4 F8 02                12011 	ldhl	sp,#2
      0033F6 2A                   12012 	ld	a, (hl+)
      0033F7 5F                   12013 	ld	e, a
      0033F8 56                   12014 	ld	d, (hl)
      0033F9 1A                   12015 	ld	a, (de)
      0033FA F8 07                12016 	ldhl	sp,	#7
      0033FC 22                   12017 	ld	(hl+), a
      0033FD 13                   12018 	inc	de
      0033FE 1A                   12019 	ld	a, (de)
      0033FF 77                   12020 	ld	(hl), a
      003400 CB 7E                12021 	bit	7, (hl)
      003402 20 1D                12022 	jr	NZ, 00101$
      003404 2B                   12023 	dec	hl
      003405 3E 9A                12024 	ld	a, #0x9a
      003407 96                   12025 	sub	a, (hl)
      003408 23                   12026 	inc	hl
      003409 3E 00                12027 	ld	a, #0x00
      00340B 9E                   12028 	sbc	a, (hl)
      00340C 3E 00                12029 	ld	a, #0x00
      00340E 57                   12030 	ld	d, a
      00340F CB 7E                12031 	bit	7, (hl)
      003411 28 07                12032 	jr	Z, 00149$
      003413 CB 7A                12033 	bit	7, d
      003415 20 08                12034 	jr	NZ, 00150$
      003417 BF                   12035 	cp	a, a
      003418 18 05                12036 	jr	00150$
      00341A                      12037 00149$:
      00341A CB 7A                12038 	bit	7, d
      00341C 28 01                12039 	jr	Z, 00150$
      00341E 37                   12040 	scf
      00341F                      12041 00150$:
      00341F 30 7B                12042 	jr	NC, 00113$
      003421                      12043 00101$:
                                  12044 ;src/main.c:1094: projectiles[i].active = 0;
      003421 F8 09                12045 	ldhl	sp,	#9
      003423 4E                   12046 	ld	c, (hl)
      003424 06 00                12047 	ld	b, #0x00
      003426 69                   12048 	ld	l, c
      003427 60                   12049 	ld	h, b
      003428 29                   12050 	add	hl, hl
      003429 09                   12051 	add	hl, bc
      00342A 29                   12052 	add	hl, hl
      00342B 29                   12053 	add	hl, hl
      00342C 09                   12054 	add	hl, bc
      00342D E5                   12055 	push	hl
      00342E 7D                   12056 	ld	a, l
      00342F F8 09                12057 	ldhl	sp,	#9
      003431 77                   12058 	ld	(hl), a
      003432 E1                   12059 	pop	hl
      003433 7C                   12060 	ld	a, h
      003434 F8 08                12061 	ldhl	sp,	#8
      003436 32                   12062 	ld	(hl-), a
      003437 2A                   12063 	ld	a, (hl+)
      003438 5F                   12064 	ld	e, a
      003439 56                   12065 	ld	d, (hl)
      00343A 21rB4r00             12066 	ld	hl, #_projectiles
      00343D 19                   12067 	add	hl, de
      00343E E5                   12068 	push	hl
      00343F 7D                   12069 	ld	a, l
      003440 F8 07                12070 	ldhl	sp,	#7
      003442 77                   12071 	ld	(hl), a
      003443 E1                   12072 	pop	hl
      003444 7C                   12073 	ld	a, h
      003445 F8 06                12074 	ldhl	sp,	#6
      003447 32                   12075 	ld	(hl-), a
      003448 2A                   12076 	ld	a, (hl+)
      003449 5F                   12077 	ld	e, a
      00344A 56                   12078 	ld	d, (hl)
      00344B 21 0A 00             12079 	ld	hl, #0x000a
      00344E 19                   12080 	add	hl, de
      00344F E5                   12081 	push	hl
      003450 7D                   12082 	ld	a, l
      003451 F8 09                12083 	ldhl	sp,	#9
      003453 77                   12084 	ld	(hl), a
      003454 E1                   12085 	pop	hl
      003455 7C                   12086 	ld	a, h
      003456 F8 08                12087 	ldhl	sp,	#8
      003458 32                   12088 	ld	(hl-), a
      003459 2A                   12089 	ld	a,	(hl+)
      00345A 66                   12090 	ld	h, (hl)
      00345B 6F                   12091 	ld	l, a
      00345C 36 00                12092 	ld	(hl), #0x00
                                  12093 ;src/main.c:1095: set_sprite_tile(30+i, 0x7f);
      00345E F8 04                12094 	ldhl	sp,	#4
      003460 7E                   12095 	ld	a, (hl)
      003461 F8 08                12096 	ldhl	sp,	#8
      003463 77                   12097 	ld	(hl), a
                                  12098 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003464 3A                   12099 	ld	a, (hl-)
      003465 22                   12100 	ld	(hl+), a
      003466 36 00                12101 	ld	(hl), #0x00
      003468 3E 02                12102 	ld	a, #0x02
      00346A                      12103 00151$:
      00346A F8 07                12104 	ldhl	sp,	#7
      00346C CB 26                12105 	sla	(hl)
      00346E 23                   12106 	inc	hl
      00346F CB 16                12107 	rl	(hl)
      003471 3D                   12108 	dec	a
      003472 20 F6                12109 	jr	NZ, 00151$
      003474 2B                   12110 	dec	hl
      003475 2A                   12111 	ld	a, (hl+)
      003476 5F                   12112 	ld	e, a
      003477 56                   12113 	ld	d, (hl)
      003478 21r00r00             12114 	ld	hl, #_shadow_OAM
      00347B 19                   12115 	add	hl, de
      00347C E5                   12116 	push	hl
      00347D 7D                   12117 	ld	a, l
      00347E F8 07                12118 	ldhl	sp,	#7
      003480 77                   12119 	ld	(hl), a
      003481 E1                   12120 	pop	hl
      003482 7C                   12121 	ld	a, h
      003483 F8 06                12122 	ldhl	sp,	#6
      003485 32                   12123 	ld	(hl-), a
      003486 2A                   12124 	ld	a, (hl+)
      003487 5F                   12125 	ld	e, a
      003488 56                   12126 	ld	d, (hl)
      003489 21 02 00             12127 	ld	hl, #0x0002
      00348C 19                   12128 	add	hl, de
      00348D E5                   12129 	push	hl
      00348E 7D                   12130 	ld	a, l
      00348F F8 09                12131 	ldhl	sp,	#9
      003491 77                   12132 	ld	(hl), a
      003492 E1                   12133 	pop	hl
      003493 7C                   12134 	ld	a, h
      003494 F8 08                12135 	ldhl	sp,	#8
      003496 32                   12136 	ld	(hl-), a
      003497 2A                   12137 	ld	a,	(hl+)
      003498 66                   12138 	ld	h, (hl)
      003499 6F                   12139 	ld	l, a
      00349A 36 7F                12140 	ld	(hl), #0x7f
                                  12141 ;src/main.c:1095: set_sprite_tile(30+i, 0x7f);
      00349C                      12142 00113$:
                                  12143 ;src/main.c:1075: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00349C F8 09                12144 	ldhl	sp,	#9
      00349E 34                   12145 	inc	(hl)
      00349F C3rC8r32             12146 	jp	00112$
      0034A2                      12147 00114$:
                                  12148 ;src/main.c:1100: }
      0034A2 E8 0A                12149 	add	sp, #10
      0034A4 C9                   12150 	ret
                                  12151 ;src/main.c:1102: void tickPickups() {
                                  12152 ;	---------------------------------
                                  12153 ; Function tickPickups
                                  12154 ; ---------------------------------
      0034A5                      12155 _tickPickups::
      0034A5 3B                   12156 	dec	sp
      0034A6 3B                   12157 	dec	sp
                                  12158 ;src/main.c:1104: if (pickup.active) {
      0034A7 FArFEr00             12159 	ld	a, (#(_pickup + 5) + 0)
      0034AA B7                   12160 	or	a, a
      0034AB CAr7Ar36             12161 	jp	Z, 00144$
                                  12162 ;src/main.c:1105: pickup.x -= xOverflow;
      0034AE 21rFAr00             12163 	ld	hl, #(_pickup + 1)
      0034B1 2A                   12164 	ld	a, (hl+)
      0034B2 47                   12165 	ld	b, a
      0034B3 4E                   12166 	ld	c, (hl)
      0034B4 58                   12167 	ld	e, b
      0034B5 51                   12168 	ld	d, c
      0034B6 21r1Er01             12169 	ld	hl, #_xOverflow
      0034B9 2A                   12170 	ld	a,	(hl+)
      0034BA 66                   12171 	ld	h, (hl)
      0034BB 6F                   12172 	ld	l, a
      0034BC 7B                   12173 	ld	a, e
      0034BD 95                   12174 	sub	a, l
      0034BE 5F                   12175 	ld	e, a
      0034BF 7A                   12176 	ld	a, d
      0034C0 9C                   12177 	sbc	a, h
      0034C1 F8 01                12178 	ldhl	sp,	#1
      0034C3 32                   12179 	ld	(hl-), a
      0034C4 73                   12180 	ld	(hl), e
      0034C5 11rFAr00             12181 	ld	de, #(_pickup + 1)
      0034C8 2A                   12182 	ld	a, (hl+)
      0034C9 12                   12183 	ld	(de), a
      0034CA 13                   12184 	inc	de
      0034CB 7E                   12185 	ld	a, (hl)
      0034CC 12                   12186 	ld	(de), a
                                  12187 ;src/main.c:1106: pickup.y -= yOverflow;
      0034CD 21rFCr00             12188 	ld	hl, #(_pickup + 3)
      0034D0 2A                   12189 	ld	a, (hl+)
      0034D1 4F                   12190 	ld	c, a
      0034D2 46                   12191 	ld	b, (hl)
      0034D3 79                   12192 	ld	a, c
      0034D4 21r20r01             12193 	ld	hl, #_yOverflow
      0034D7 96                   12194 	sub	a, (hl)
      0034D8 23                   12195 	inc	hl
      0034D9 4F                   12196 	ld	c, a
      0034DA 78                   12197 	ld	a, b
      0034DB 9E                   12198 	sbc	a, (hl)
      0034DC 47                   12199 	ld	b, a
      0034DD 21rFCr00             12200 	ld	hl, #(_pickup + 3)
      0034E0 79                   12201 	ld	a, c
      0034E1 22                   12202 	ld	(hl+), a
      0034E2 70                   12203 	ld	(hl), b
                                  12204 ;src/main.c:1107: move_sprite(3, pickup.x + 4, pickup.y + 12);
      0034E3 79                   12205 	ld	a, c
      0034E4 C6 0C                12206 	add	a, #0x0c
      0034E6 47                   12207 	ld	b, a
      0034E7 F8 00                12208 	ldhl	sp,	#0
      0034E9 7E                   12209 	ld	a, (hl)
      0034EA C6 04                12210 	add	a, #0x04
      0034EC 4F                   12211 	ld	c, a
                                  12212 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0034ED 21r0Cr00             12213 	ld	hl, #(_shadow_OAM + 12)
                                  12214 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0034F0 78                   12215 	ld	a, b
      0034F1 22                   12216 	ld	(hl+), a
      0034F2 71                   12217 	ld	(hl), c
                                  12218 ;src/main.c:1108: if (pickup.visible && auxTick == 1) {
      0034F3 21rF9r00             12219 	ld	hl, #_pickup
      0034F6 4E                   12220 	ld	c, (hl)
                                  12221 ;src/main.c:1105: pickup.x -= xOverflow;
      0034F7 11rFAr00             12222 	ld	de, #(_pickup + 1)
      0034FA 1A                   12223 	ld	a, (de)
      0034FB F8 00                12224 	ldhl	sp,	#0
      0034FD 22                   12225 	ld	(hl+), a
      0034FE 13                   12226 	inc	de
      0034FF 1A                   12227 	ld	a, (de)
      003500 77                   12228 	ld	(hl), a
                                  12229 ;src/main.c:1108: if (pickup.visible && auxTick == 1) {
      003501 79                   12230 	ld	a, c
      003502 B7                   12231 	or	a, a
      003503 CAr0Er36             12232 	jp	Z, 00127$
      003506 FAr3Cr01             12233 	ld	a, (#_auxTick)
      003509 3D                   12234 	dec	a
      00350A C2r0Er36             12235 	jp	NZ,00127$
                                  12236 ;src/main.c:1110: if (abs(pickup.x - playerDrawX) < 10) {
      00350D F8 00                12237 	ldhl	sp,	#0
      00350F 7E                   12238 	ld	a, (hl)
      003510 21r16r01             12239 	ld	hl, #_playerDrawX
      003513 4E                   12240 	ld	c, (hl)
      003514 91                   12241 	sub	a, c
      003515 4F                   12242 	ld	c, a
                                  12243 ;src/main.c:376: if (value >= 0) return value;
      003516 CB 79                12244 	bit	7, c
      003518 28 03                12245 	jr	Z, 00136$
                                  12246 ;src/main.c:377: else return - value;
      00351A AF                   12247 	xor	a, a
      00351B 91                   12248 	sub	a, c
      00351C 4F                   12249 	ld	c, a
                                  12250 ;src/main.c:1110: if (abs(pickup.x - playerDrawX) < 10) {
      00351D                      12251 00136$:
      00351D 79                   12252 	ld	a, c
      00351E EE 80                12253 	xor	a, #0x80
      003520 D6 8A                12254 	sub	a, #0x8a
      003522 D2rB1r35             12255 	jp	NC, 00115$
                                  12256 ;src/main.c:1111: if (abs(pickup.y - playerDrawY) < 10) {
      003525 FArFCr00             12257 	ld	a, (#(_pickup + 3) + 0)
      003528 F8 01                12258 	ldhl	sp,	#1
      00352A 77                   12259 	ld	(hl), a
      00352B 21r17r01             12260 	ld	hl, #_playerDrawY
      00352E 4E                   12261 	ld	c, (hl)
      00352F F8 01                12262 	ldhl	sp,	#1
      003531 7E                   12263 	ld	a, (hl)
      003532 91                   12264 	sub	a, c
      003533 77                   12265 	ld	(hl), a
                                  12266 ;src/main.c:376: if (value >= 0) return value;
      003534 CB 7E                12267 	bit	7, (hl)
      003536 28 05                12268 	jr	Z, 00140$
                                  12269 ;src/main.c:377: else return - value;
      003538 AF                   12270 	xor	a, a
      003539 F8 01                12271 	ldhl	sp,	#1
      00353B 96                   12272 	sub	a, (hl)
      00353C 77                   12273 	ld	(hl), a
                                  12274 ;src/main.c:1111: if (abs(pickup.y - playerDrawY) < 10) {
      00353D                      12275 00140$:
      00353D F8 01                12276 	ldhl	sp,	#1
      00353F 7E                   12277 	ld	a, (hl)
      003540 EE 80                12278 	xor	a, #0x80
      003542 D6 8A                12279 	sub	a, #0x8a
      003544 30 6B                12280 	jr	NC, 00115$
                                  12281 ;src/main.c:1112: if (pickup.type == 0) { //upgrade
      003546 FArFFr00             12282 	ld	a, (#(_pickup + 6) + 0)
      003549 B7                   12283 	or	a, a
      00354A 20 0D                12284 	jr	NZ, 00104$
                                  12285 ;src/main.c:1113: if (gunLevel < 1) {
      00354C 21r23r01             12286 	ld	hl, #_gunLevel
      00354F 7E                   12287 	ld	a, (hl)
      003550 D6 01                12288 	sub	a, #0x01
      003552 30 05                12289 	jr	NC, 00104$
                                  12290 ;src/main.c:1114: gunLevel += 1;
      003554 34                   12291 	inc	(hl)
      003555 7E                   12292 	ld	a, (hl)
                                  12293 ;src/main.c:1115: setGunIcon();
      003556 CDrE1r2C             12294 	call	_setGunIcon
      003559                      12295 00104$:
                                  12296 ;src/main.c:1118: if (pickup.type == 1) { //missile ammo
      003559 21rFFr00             12297 	ld	hl, #(_pickup + 6)
      00355C 6E                   12298 	ld	l, (hl)
                                  12299 ;	spillPairReg hl
                                  12300 ;src/main.c:1119: updateMissileCount(pickup.amount);
      00355D 01r00r01             12301 	ld	bc, #_pickup + 7
                                  12302 ;src/main.c:1118: if (pickup.type == 1) { //missile ammo
      003560 2D                   12303 	dec	l
      003561 20 09                12304 	jr	NZ, 00106$
                                  12305 ;src/main.c:1119: updateMissileCount(pickup.amount);
      003563 0A                   12306 	ld	a, (bc)
      003564 C5                   12307 	push	bc
      003565 F5                   12308 	push	af
      003566 33                   12309 	inc	sp
      003567 CDr04r12             12310 	call	_updateMissileCount
      00356A 33                   12311 	inc	sp
      00356B C1                   12312 	pop	bc
      00356C                      12313 00106$:
                                  12314 ;src/main.c:1121: if (pickup.type == 2) {
      00356C FArFFr00             12315 	ld	a, (#(_pickup + 6) + 0)
      00356F D6 02                12316 	sub	a, #0x02
      003571 20 34                12317 	jr	NZ, 00111$
                                  12318 ;src/main.c:1122: if (hull + pickup.amount <= 100) {
      003573 21rF5r00             12319 	ld	hl, #_hull
      003576 5E                   12320 	ld	e, (hl)
      003577 16 00                12321 	ld	d, #0x00
      003579 0A                   12322 	ld	a, (bc)
      00357A 4F                   12323 	ld	c, a
      00357B 69                   12324 	ld	l, c
                                  12325 ;	spillPairReg hl
                                  12326 ;	spillPairReg hl
      00357C 26 00                12327 	ld	h, #0x00
                                  12328 ;	spillPairReg hl
                                  12329 ;	spillPairReg hl
      00357E 19                   12330 	add	hl, de
      00357F 5C                   12331 	ld	e, h
      003580 16 00                12332 	ld	d, #0x00
      003582 3E 64                12333 	ld	a, #0x64
      003584 BD                   12334 	cp	a, l
      003585 3E 00                12335 	ld	a, #0x00
      003587 9C                   12336 	sbc	a, h
      003588 CB 7B                12337 	bit	7, e
      00358A 28 07                12338 	jr	Z, 00247$
      00358C CB 7A                12339 	bit	7, d
      00358E 20 08                12340 	jr	NZ, 00248$
      003590 BF                   12341 	cp	a, a
      003591 18 05                12342 	jr	00248$
      003593                      12343 00247$:
      003593 CB 7A                12344 	bit	7, d
      003595 28 01                12345 	jr	Z, 00248$
      003597 37                   12346 	scf
      003598                      12347 00248$:
      003598 38 08                12348 	jr	C, 00108$
                                  12349 ;src/main.c:1123: hull += pickup.amount;
      00359A 79                   12350 	ld	a, c
      00359B 21rF5r00             12351 	ld	hl, #_hull
      00359E 86                   12352 	add	a, (hl)
      00359F 77                   12353 	ld	(hl), a
      0035A0 18 05                12354 	jr	00111$
      0035A2                      12355 00108$:
                                  12356 ;src/main.c:1126: hull = 100;
      0035A2 21rF5r00             12357 	ld	hl, #_hull
      0035A5 36 64                12358 	ld	(hl), #0x64
      0035A7                      12359 00111$:
                                  12360 ;src/main.c:1129: pickup.active = 0;
      0035A7 21rFEr00             12361 	ld	hl, #(_pickup + 5)
      0035AA 36 00                12362 	ld	(hl), #0x00
                                  12363 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0035AC 21r0Er00             12364 	ld	hl, #(_shadow_OAM + 14)
      0035AF 36 7F                12365 	ld	(hl), #0x7f
                                  12366 ;src/main.c:1130: set_sprite_tile(3, 0x7f);
      0035B1                      12367 00115$:
                                  12368 ;src/main.c:1105: pickup.x -= xOverflow;
      0035B1 21rFAr00             12369 	ld	hl, #(_pickup + 1)
      0035B4 2A                   12370 	ld	a, (hl+)
      0035B5 4F                   12371 	ld	c, a
      0035B6 46                   12372 	ld	b, (hl)
                                  12373 ;src/main.c:1133: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0035B7 79                   12374 	ld	a, c
      0035B8 D6 F6                12375 	sub	a, #0xf6
      0035BA 78                   12376 	ld	a, b
      0035BB 17                   12377 	rla
      0035BC 3F                   12378 	ccf
      0035BD 1F                   12379 	rra
      0035BE DE 7F                12380 	sbc	a, #0x7f
      0035C0 38 40                12381 	jr	C, 00116$
      0035C2 58                   12382 	ld	e, b
      0035C3 16 00                12383 	ld	d, #0x00
      0035C5 3E AA                12384 	ld	a, #0xaa
      0035C7 B9                   12385 	cp	a, c
      0035C8 3E 00                12386 	ld	a, #0x00
      0035CA 98                   12387 	sbc	a, b
      0035CB CB 7B                12388 	bit	7, e
      0035CD 28 07                12389 	jr	Z, 00249$
      0035CF CB 7A                12390 	bit	7, d
      0035D1 20 08                12391 	jr	NZ, 00250$
      0035D3 BF                   12392 	cp	a, a
      0035D4 18 05                12393 	jr	00250$
      0035D6                      12394 00249$:
      0035D6 CB 7A                12395 	bit	7, d
      0035D8 28 01                12396 	jr	Z, 00250$
      0035DA 37                   12397 	scf
      0035DB                      12398 00250$:
      0035DB 38 25                12399 	jr	C, 00116$
                                  12400 ;src/main.c:1106: pickup.y -= yOverflow;
      0035DD 21rFCr00             12401 	ld	hl, #(_pickup + 3)
      0035E0 2A                   12402 	ld	a, (hl+)
      0035E1 4F                   12403 	ld	c, a
      0035E2 46                   12404 	ld	b, (hl)
                                  12405 ;src/main.c:1133: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0035E3 CB 78                12406 	bit	7, b
      0035E5 20 1B                12407 	jr	NZ, 00116$
      0035E7 58                   12408 	ld	e, b
      0035E8 16 00                12409 	ld	d, #0x00
      0035EA 3E 9B                12410 	ld	a, #0x9b
      0035EC B9                   12411 	cp	a, c
      0035ED 3E 00                12412 	ld	a, #0x00
      0035EF 98                   12413 	sbc	a, b
      0035F0 CB 7B                12414 	bit	7, e
      0035F2 28 07                12415 	jr	Z, 00251$
      0035F4 CB 7A                12416 	bit	7, d
      0035F6 20 08                12417 	jr	NZ, 00252$
      0035F8 BF                   12418 	cp	a, a
      0035F9 18 05                12419 	jr	00252$
      0035FB                      12420 00251$:
      0035FB CB 7A                12421 	bit	7, d
      0035FD 28 01                12422 	jr	Z, 00252$
      0035FF 37                   12423 	scf
      003600                      12424 00252$:
      003600 30 78                12425 	jr	NC, 00144$
      003602                      12426 00116$:
                                  12427 ;src/main.c:1134: pickup.visible = 0;
      003602 21rF9r00             12428 	ld	hl, #_pickup
      003605 36 00                12429 	ld	(hl), #0x00
                                  12430 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003607 21r0Er00             12431 	ld	hl, #(_shadow_OAM + 14)
      00360A 36 7F                12432 	ld	(hl), #0x7f
                                  12433 ;src/main.c:1135: set_sprite_tile(3, 0x7f);
      00360C 18 6C                12434 	jr	00144$
      00360E                      12435 00127$:
                                  12436 ;src/main.c:1139: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      00360E F8 00                12437 	ldhl	sp,	#0
      003610 2A                   12438 	ld	a, (hl+)
      003611 D6 F6                12439 	sub	a, #0xf6
      003613 7E                   12440 	ld	a, (hl)
      003614 DE FF                12441 	sbc	a, #0xff
      003616 56                   12442 	ld	d, (hl)
      003617 3E FF                12443 	ld	a, #0xff
      003619 CB 7F                12444 	bit	7,a
      00361B 28 07                12445 	jr	Z, 00253$
      00361D CB 7A                12446 	bit	7, d
      00361F 20 08                12447 	jr	NZ, 00254$
      003621 BF                   12448 	cp	a, a
      003622 18 05                12449 	jr	00254$
      003624                      12450 00253$:
      003624 CB 7A                12451 	bit	7, d
      003626 28 01                12452 	jr	Z, 00254$
      003628 37                   12453 	scf
      003629                      12454 00254$:
      003629 38 4F                12455 	jr	C, 00144$
      00362B C1                   12456 	pop	bc
      00362C C5                   12457 	push	bc
      00362D 58                   12458 	ld	e, b
      00362E 16 00                12459 	ld	d, #0x00
      003630 3E AA                12460 	ld	a, #0xaa
      003632 B9                   12461 	cp	a, c
      003633 3E 00                12462 	ld	a, #0x00
      003635 98                   12463 	sbc	a, b
      003636 CB 7B                12464 	bit	7, e
      003638 28 07                12465 	jr	Z, 00255$
      00363A CB 7A                12466 	bit	7, d
      00363C 20 08                12467 	jr	NZ, 00256$
      00363E BF                   12468 	cp	a, a
      00363F 18 05                12469 	jr	00256$
      003641                      12470 00255$:
      003641 CB 7A                12471 	bit	7, d
      003643 28 01                12472 	jr	Z, 00256$
      003645 37                   12473 	scf
      003646                      12474 00256$:
      003646 38 32                12475 	jr	C, 00144$
                                  12476 ;src/main.c:1106: pickup.y -= yOverflow;
      003648 21rFCr00             12477 	ld	hl, #(_pickup + 3)
      00364B 2A                   12478 	ld	a, (hl+)
      00364C 4F                   12479 	ld	c, a
      00364D 46                   12480 	ld	b, (hl)
                                  12481 ;src/main.c:1133: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
                                  12482 ;src/main.c:1139: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      00364E CB 78                12483 	bit	7, b
      003650 20 28                12484 	jr	NZ, 00144$
      003652 58                   12485 	ld	e, b
      003653 16 00                12486 	ld	d, #0x00
      003655 3E 9B                12487 	ld	a, #0x9b
      003657 B9                   12488 	cp	a, c
      003658 3E 00                12489 	ld	a, #0x00
      00365A 98                   12490 	sbc	a, b
      00365B CB 7B                12491 	bit	7, e
      00365D 28 07                12492 	jr	Z, 00257$
      00365F CB 7A                12493 	bit	7, d
      003661 20 08                12494 	jr	NZ, 00258$
      003663 BF                   12495 	cp	a, a
      003664 18 05                12496 	jr	00258$
      003666                      12497 00257$:
      003666 CB 7A                12498 	bit	7, d
      003668 28 01                12499 	jr	Z, 00258$
      00366A 37                   12500 	scf
      00366B                      12501 00258$:
      00366B 38 0D                12502 	jr	C, 00144$
                                  12503 ;src/main.c:1140: pickup.visible = 1;
      00366D 21rF9r00             12504 	ld	hl, #_pickup
      003670 36 01                12505 	ld	(hl), #0x01
                                  12506 ;src/main.c:1141: set_sprite_tile(3, pickup.tile);
      003672 21r01r01             12507 	ld	hl, #(_pickup + 8)
      003675 4E                   12508 	ld	c, (hl)
                                  12509 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003676 21r0Er00             12510 	ld	hl, #(_shadow_OAM + 14)
      003679 71                   12511 	ld	(hl), c
                                  12512 ;src/main.c:1141: set_sprite_tile(3, pickup.tile);
      00367A                      12513 00144$:
                                  12514 ;src/main.c:1146: }
      00367A 33                   12515 	inc	sp
      00367B 33                   12516 	inc	sp
      00367C C9                   12517 	ret
                                  12518 ;src/main.c:1148: void tickEx() {
                                  12519 ;	---------------------------------
                                  12520 ; Function tickEx
                                  12521 ; ---------------------------------
      00367D                      12522 _tickEx::
      00367D E8 F4                12523 	add	sp, #-12
                                  12524 ;src/main.c:1149: for (uint8_t i = 0; i < exCount; ++i) {
      00367F F8 0B                12525 	ldhl	sp,	#11
      003681 36 00                12526 	ld	(hl), #0x00
      003683                      12527 00118$:
      003683 21rC5r10             12528 	ld	hl, #_exCount
      003686 4E                   12529 	ld	c, (hl)
      003687 F8 0B                12530 	ldhl	sp,	#11
      003689 7E                   12531 	ld	a, (hl)
      00368A 91                   12532 	sub	a, c
      00368B D2r5Br38             12533 	jp	NC, 00120$
                                  12534 ;src/main.c:1150: if (explosions[i].visible) {
      00368E 4E                   12535 	ld	c, (hl)
      00368F 06 00                12536 	ld	b, #0x00
      003691 69                   12537 	ld	l, c
      003692 60                   12538 	ld	h, b
      003693 29                   12539 	add	hl, hl
      003694 09                   12540 	add	hl, bc
      003695 29                   12541 	add	hl, hl
      003696 01r02r01             12542 	ld	bc,#_explosions
      003699 09                   12543 	add	hl,bc
      00369A E5                   12544 	push	hl
      00369B 7D                   12545 	ld	a, l
      00369C F8 03                12546 	ldhl	sp,	#3
      00369E 77                   12547 	ld	(hl), a
      00369F E1                   12548 	pop	hl
      0036A0 7C                   12549 	ld	a, h
      0036A1 F8 02                12550 	ldhl	sp,	#2
      0036A3 32                   12551 	ld	(hl-), a
      0036A4 2A                   12552 	ld	a, (hl+)
      0036A5 5F                   12553 	ld	e, a
      0036A6 56                   12554 	ld	d, (hl)
      0036A7 1A                   12555 	ld	a, (de)
      0036A8 F8 0A                12556 	ldhl	sp,	#10
      0036AA 77                   12557 	ld	(hl), a
      0036AB 7E                   12558 	ld	a, (hl)
      0036AC B7                   12559 	or	a, a
      0036AD CAr55r38             12560 	jp	Z, 00119$
                                  12561 ;src/main.c:1152: explosions[i].x -= xOverflow;
      0036B0 F8 01                12562 	ldhl	sp,	#1
      0036B2 2A                   12563 	ld	a, (hl+)
      0036B3 4F                   12564 	ld	c, a
      0036B4 46                   12565 	ld	b, (hl)
      0036B5 03                   12566 	inc	bc
      0036B6 0A                   12567 	ld	a, (bc)
      0036B7 21r1Er01             12568 	ld	hl, #_xOverflow
      0036BA 5E                   12569 	ld	e, (hl)
      0036BB 93                   12570 	sub	a, e
      0036BC 02                   12571 	ld	(bc), a
                                  12572 ;src/main.c:1153: explosions[i].y -= yOverflow;
      0036BD F8 01                12573 	ldhl	sp,#1
      0036BF 2A                   12574 	ld	a, (hl+)
      0036C0 5F                   12575 	ld	e, a
      0036C1 56                   12576 	ld	d, (hl)
      0036C2 21 02 00             12577 	ld	hl, #0x0002
      0036C5 19                   12578 	add	hl, de
      0036C6 E5                   12579 	push	hl
      0036C7 7D                   12580 	ld	a, l
      0036C8 F8 09                12581 	ldhl	sp,	#9
      0036CA 77                   12582 	ld	(hl), a
      0036CB E1                   12583 	pop	hl
      0036CC 7C                   12584 	ld	a, h
      0036CD F8 08                12585 	ldhl	sp,	#8
      0036CF 32                   12586 	ld	(hl-), a
      0036D0 2A                   12587 	ld	a, (hl+)
      0036D1 5F                   12588 	ld	e, a
      0036D2 56                   12589 	ld	d, (hl)
      0036D3 1A                   12590 	ld	a, (de)
      0036D4 21r20r01             12591 	ld	hl, #_yOverflow
      0036D7 5E                   12592 	ld	e, (hl)
      0036D8 93                   12593 	sub	a, e
      0036D9 F8 07                12594 	ldhl	sp,	#7
      0036DB F5                   12595 	push	af
      0036DC 2A                   12596 	ld	a,	(hl+)
      0036DD 66                   12597 	ld	h, (hl)
      0036DE 6F                   12598 	ld	l, a
      0036DF F1                   12599 	pop	af
      0036E0 77                   12600 	ld	(hl), a
                                  12601 ;src/main.c:1154: move_sprite(20 +i+i, explosions[i].x, explosions[i].y+8);
      0036E1 F8 07                12602 	ldhl	sp,#7
      0036E3 2A                   12603 	ld	a, (hl+)
      0036E4 5F                   12604 	ld	e, a
      0036E5 2A                   12605 	ld	a, (hl+)
      0036E6 57                   12606 	ld	d, a
      0036E7 1A                   12607 	ld	a, (de)
      0036E8 C6 08                12608 	add	a, #0x08
      0036EA 5F                   12609 	ld	e, a
      0036EB 0A                   12610 	ld	a, (bc)
      0036EC 22                   12611 	ld	(hl+), a
      0036ED 23                   12612 	inc	hl
      0036EE 3A                   12613 	ld	a, (hl-)
      0036EF 77                   12614 	ld	(hl), a
      0036F0 7E                   12615 	ld	a, (hl)
      0036F1 C6 14                12616 	add	a, #0x14
      0036F3 86                   12617 	add	a, (hl)
      0036F4 F8 03                12618 	ldhl	sp,	#3
      0036F6 77                   12619 	ld	(hl), a
      0036F7 56                   12620 	ld	d, (hl)
                                  12621 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0036F8 26 00                12622 	ld	h, #0x00
                                  12623 ;	spillPairReg hl
                                  12624 ;	spillPairReg hl
      0036FA 6A                   12625 	ld	l, d
      0036FB 29                   12626 	add	hl, hl
      0036FC 29                   12627 	add	hl, hl
      0036FD D5                   12628 	push	de
      0036FE 11r00r00             12629 	ld	de, #_shadow_OAM
      003701 19                   12630 	add	hl, de
      003702 D1                   12631 	pop	de
                                  12632 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003703 7B                   12633 	ld	a, e
      003704 22                   12634 	ld	(hl+), a
      003705 5D                   12635 	ld	e, l
      003706 54                   12636 	ld	d, h
      003707 F8 09                12637 	ldhl	sp,	#9
                                  12638 ;src/main.c:1155: move_sprite(21 +i+i, explosions[i].x+8, explosions[i].y+8);
      003709 3A                   12639 	ld	a, (hl-)
      00370A 2B                   12640 	dec	hl
      00370B 12                   12641 	ld	(de), a
      00370C 2A                   12642 	ld	a, (hl+)
      00370D 5F                   12643 	ld	e, a
      00370E 2A                   12644 	ld	a, (hl+)
      00370F 23                   12645 	inc	hl
      003710 57                   12646 	ld	d, a
      003711 1A                   12647 	ld	a, (de)
      003712 C6 08                12648 	add	a, #0x08
      003714 5F                   12649 	ld	e, a
      003715 0A                   12650 	ld	a, (bc)
      003716 C6 08                12651 	add	a, #0x08
      003718 4F                   12652 	ld	c, a
      003719 7E                   12653 	ld	a, (hl)
      00371A C6 15                12654 	add	a, #0x15
      00371C 86                   12655 	add	a, (hl)
      00371D 2B                   12656 	dec	hl
      00371E 77                   12657 	ld	(hl), a
                                  12658 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00371F 6E                   12659 	ld	l, (hl)
                                  12660 ;	spillPairReg hl
                                  12661 ;	spillPairReg hl
      003720 26 00                12662 	ld	h, #0x00
                                  12663 ;	spillPairReg hl
                                  12664 ;	spillPairReg hl
      003722 29                   12665 	add	hl, hl
      003723 29                   12666 	add	hl, hl
      003724 D5                   12667 	push	de
      003725 11r00r00             12668 	ld	de, #_shadow_OAM
      003728 19                   12669 	add	hl, de
      003729 D1                   12670 	pop	de
                                  12671 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00372A 7B                   12672 	ld	a, e
      00372B 22                   12673 	ld	(hl+), a
      00372C 71                   12674 	ld	(hl), c
                                  12675 ;src/main.c:1157: explosions[i].frameCounter++;
      00372D F8 01                12676 	ldhl	sp,#1
      00372F 2A                   12677 	ld	a, (hl+)
      003730 5F                   12678 	ld	e, a
      003731 56                   12679 	ld	d, (hl)
      003732 21 04 00             12680 	ld	hl, #0x0004
      003735 19                   12681 	add	hl, de
      003736 4D                   12682 	ld	c, l
      003737 44                   12683 	ld	b, h
      003738 0A                   12684 	ld	a, (bc)
      003739 3C                   12685 	inc	a
      00373A 02                   12686 	ld	(bc), a
                                  12687 ;src/main.c:1158: if (auxTick == 0) {
      00373B FAr3Cr01             12688 	ld	a, (#_auxTick)
      00373E B7                   12689 	or	a, a
      00373F C2r55r38             12690 	jp	NZ, 00119$
                                  12691 ;src/main.c:1159: if (explosions[i].frameCounter > EXPLFRAMETIME) {
      003742 0A                   12692 	ld	a, (bc)
      003743 5F                   12693 	ld	e, a
      003744 FArC6r10             12694 	ld	a, (#_EXPLFRAMETIME)
      003747 93                   12695 	sub	a, e
      003748 D2r55r38             12696 	jp	NC, 00119$
                                  12697 ;src/main.c:1160: explosions[i].frameCounter = 0;
      00374B AF                   12698 	xor	a, a
      00374C 02                   12699 	ld	(bc), a
                                  12700 ;src/main.c:1161: explosions[i].frame += 1; 
      00374D F8 01                12701 	ldhl	sp,#1
      00374F 2A                   12702 	ld	a, (hl+)
      003750 5F                   12703 	ld	e, a
      003751 56                   12704 	ld	d, (hl)
      003752 21 03 00             12705 	ld	hl, #0x0003
      003755 19                   12706 	add	hl, de
      003756 E5                   12707 	push	hl
      003757 7D                   12708 	ld	a, l
      003758 F8 06                12709 	ldhl	sp,	#6
      00375A 77                   12710 	ld	(hl), a
      00375B E1                   12711 	pop	hl
      00375C 7C                   12712 	ld	a, h
      00375D F8 05                12713 	ldhl	sp,	#5
      00375F 32                   12714 	ld	(hl-), a
      003760 2A                   12715 	ld	a, (hl+)
      003761 5F                   12716 	ld	e, a
      003762 56                   12717 	ld	d, (hl)
      003763 1A                   12718 	ld	a, (de)
      003764 4F                   12719 	ld	c, a
      003765 0C                   12720 	inc	c
      003766 3A                   12721 	ld	a, (hl-)
      003767 6E                   12722 	ld	l, (hl)
      003768 67                   12723 	ld	h, a
      003769 71                   12724 	ld	(hl), c
                                  12725 ;src/main.c:1162: if (explosions[i].frame > 3) {
      00376A F8 04                12726 	ldhl	sp,#4
      00376C 2A                   12727 	ld	a, (hl+)
      00376D 5F                   12728 	ld	e, a
      00376E 56                   12729 	ld	d, (hl)
      00376F 1A                   12730 	ld	a, (de)
      003770 4F                   12731 	ld	c, a
      003771 3E 03                12732 	ld	a, #0x03
      003773 91                   12733 	sub	a, c
      003774 30 2A                12734 	jr	NC, 00102$
                                  12735 ;src/main.c:1163: explosions[i].visible = 0;
      003776 F8 01                12736 	ldhl	sp,	#1
      003778 2A                   12737 	ld	a,	(hl+)
      003779 66                   12738 	ld	h, (hl)
      00377A 6F                   12739 	ld	l, a
      00377B 36 00                12740 	ld	(hl), #0x00
                                  12741 ;src/main.c:1164: set_sprite_tile(20 + i+i, 0x7f);
      00377D F8 03                12742 	ldhl	sp,	#3
      00377F 4E                   12743 	ld	c, (hl)
                                  12744 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003780 26 00                12745 	ld	h, #0x00
                                  12746 ;	spillPairReg hl
                                  12747 ;	spillPairReg hl
      003782 69                   12748 	ld	l, c
      003783 29                   12749 	add	hl, hl
      003784 29                   12750 	add	hl, hl
      003785 11r00r00             12751 	ld	de, #_shadow_OAM
      003788 19                   12752 	add	hl, de
      003789 23                   12753 	inc	hl
      00378A 23                   12754 	inc	hl
      00378B 36 7F                12755 	ld	(hl), #0x7f
                                  12756 ;src/main.c:1165: set_sprite_tile(21 + i+i, 0x7f);
      00378D F8 09                12757 	ldhl	sp,	#9
      00378F 4E                   12758 	ld	c, (hl)
                                  12759 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003790 26 00                12760 	ld	h, #0x00
                                  12761 ;	spillPairReg hl
                                  12762 ;	spillPairReg hl
      003792 69                   12763 	ld	l, c
      003793 29                   12764 	add	hl, hl
      003794 29                   12765 	add	hl, hl
      003795 11r00r00             12766 	ld	de, #_shadow_OAM
      003798 19                   12767 	add	hl, de
      003799 23                   12768 	inc	hl
      00379A 23                   12769 	inc	hl
      00379B 36 7F                12770 	ld	(hl), #0x7f
                                  12771 ;src/main.c:1165: set_sprite_tile(21 + i+i, 0x7f);
      00379D C3r55r38             12772 	jp	00119$
      0037A0                      12773 00102$:
                                  12774 ;src/main.c:1168: set_sprite_tile(20 + i+i, explosions[i].tile + (explosions[i].frame *4));
      0037A0 F8 01                12775 	ldhl	sp,#1
      0037A2 2A                   12776 	ld	a, (hl+)
      0037A3 5F                   12777 	ld	e, a
      0037A4 56                   12778 	ld	d, (hl)
      0037A5 21 05 00             12779 	ld	hl, #0x0005
      0037A8 19                   12780 	add	hl, de
      0037A9 E5                   12781 	push	hl
      0037AA 7D                   12782 	ld	a, l
      0037AB F8 08                12783 	ldhl	sp,	#8
      0037AD 77                   12784 	ld	(hl), a
      0037AE E1                   12785 	pop	hl
      0037AF 7C                   12786 	ld	a, h
      0037B0 F8 07                12787 	ldhl	sp,	#7
      0037B2 32                   12788 	ld	(hl-), a
      0037B3 2A                   12789 	ld	a, (hl+)
      0037B4 5F                   12790 	ld	e, a
      0037B5 56                   12791 	ld	d, (hl)
      0037B6 1A                   12792 	ld	a, (de)
      0037B7 F8 0A                12793 	ldhl	sp,	#10
      0037B9 32                   12794 	ld	(hl-), a
      0037BA 2B                   12795 	dec	hl
      0037BB 71                   12796 	ld	(hl), c
      0037BC CB 26                12797 	sla	(hl)
      0037BE CB 26                12798 	sla	(hl)
      0037C0 23                   12799 	inc	hl
      0037C1 23                   12800 	inc	hl
      0037C2 3A                   12801 	ld	a, (hl-)
      0037C3 2B                   12802 	dec	hl
      0037C4 86                   12803 	add	a, (hl)
      0037C5 23                   12804 	inc	hl
      0037C6 23                   12805 	inc	hl
      0037C7 77                   12806 	ld	(hl), a
      0037C8 F8 03                12807 	ldhl	sp,	#3
                                  12808 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0037CA 3A                   12809 	ld	a, (hl-)
      0037CB 22                   12810 	ld	(hl+), a
      0037CC 36 00                12811 	ld	(hl), #0x00
      0037CE 3E 02                12812 	ld	a, #0x02
      0037D0                      12813 00153$:
      0037D0 F8 02                12814 	ldhl	sp,	#2
      0037D2 CB 26                12815 	sla	(hl)
      0037D4 23                   12816 	inc	hl
      0037D5 CB 16                12817 	rl	(hl)
      0037D7 3D                   12818 	dec	a
      0037D8 20 F6                12819 	jr	NZ, 00153$
      0037DA 11r00r00             12820 	ld	de, #_shadow_OAM
      0037DD 3A                   12821 	ld	a, (hl-)
      0037DE 6E                   12822 	ld	l, (hl)
      0037DF 67                   12823 	ld	h, a
      0037E0 19                   12824 	add	hl, de
      0037E1 33                   12825 	inc	sp
      0037E2 33                   12826 	inc	sp
      0037E3 5D                   12827 	ld	e, l
      0037E4 54                   12828 	ld	d, h
      0037E5 D5                   12829 	push	de
      0037E6 21 02 00             12830 	ld	hl, #0x0002
      0037E9 19                   12831 	add	hl, de
      0037EA E5                   12832 	push	hl
      0037EB 7D                   12833 	ld	a, l
      0037EC F8 04                12834 	ldhl	sp,	#4
      0037EE 77                   12835 	ld	(hl), a
      0037EF E1                   12836 	pop	hl
      0037F0 7C                   12837 	ld	a, h
      0037F1 F8 03                12838 	ldhl	sp,	#3
      0037F3 32                   12839 	ld	(hl-), a
      0037F4 2A                   12840 	ld	a, (hl+)
      0037F5 5F                   12841 	ld	e, a
      0037F6 56                   12842 	ld	d, (hl)
      0037F7 F8 0A                12843 	ldhl	sp,	#10
      0037F9 7E                   12844 	ld	a, (hl)
      0037FA 12                   12845 	ld	(de), a
                                  12846 ;src/main.c:1169: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      0037FB F8 06                12847 	ldhl	sp,#6
      0037FD 2A                   12848 	ld	a, (hl+)
      0037FE 5F                   12849 	ld	e, a
      0037FF 56                   12850 	ld	d, (hl)
      003800 1A                   12851 	ld	a, (de)
      003801 F8 0A                12852 	ldhl	sp,	#10
      003803 77                   12853 	ld	(hl), a
      003804 F8 04                12854 	ldhl	sp,#4
      003806 2A                   12855 	ld	a, (hl+)
      003807 5F                   12856 	ld	e, a
      003808 56                   12857 	ld	d, (hl)
      003809 1A                   12858 	ld	a, (de)
      00380A F8 08                12859 	ldhl	sp,	#8
      00380C 77                   12860 	ld	(hl), a
      00380D CB 26                12861 	sla	(hl)
      00380F CB 26                12862 	sla	(hl)
      003811 23                   12863 	inc	hl
      003812 23                   12864 	inc	hl
      003813 3A                   12865 	ld	a, (hl-)
      003814 2B                   12866 	dec	hl
      003815 86                   12867 	add	a, (hl)
      003816 23                   12868 	inc	hl
      003817 23                   12869 	inc	hl
      003818 77                   12870 	ld	(hl), a
      003819 34                   12871 	inc	(hl)
      00381A 34                   12872 	inc	(hl)
      00381B 2B                   12873 	dec	hl
                                  12874 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00381C 3A                   12875 	ld	a, (hl-)
      00381D 22                   12876 	ld	(hl+), a
      00381E 36 00                12877 	ld	(hl), #0x00
      003820 3E 02                12878 	ld	a, #0x02
      003822                      12879 00154$:
      003822 F8 08                12880 	ldhl	sp,	#8
      003824 CB 26                12881 	sla	(hl)
      003826 23                   12882 	inc	hl
      003827 CB 16                12883 	rl	(hl)
      003829 3D                   12884 	dec	a
      00382A 20 F6                12885 	jr	NZ, 00154$
      00382C 2B                   12886 	dec	hl
      00382D 2A                   12887 	ld	a, (hl+)
      00382E 5F                   12888 	ld	e, a
      00382F 56                   12889 	ld	d, (hl)
      003830 21r00r00             12890 	ld	hl, #_shadow_OAM
      003833 19                   12891 	add	hl, de
      003834 E5                   12892 	push	hl
      003835 7D                   12893 	ld	a, l
      003836 F8 08                12894 	ldhl	sp,	#8
      003838 77                   12895 	ld	(hl), a
      003839 E1                   12896 	pop	hl
      00383A 7C                   12897 	ld	a, h
      00383B F8 07                12898 	ldhl	sp,	#7
      00383D 32                   12899 	ld	(hl-), a
      00383E 2A                   12900 	ld	a, (hl+)
      00383F 5F                   12901 	ld	e, a
      003840 56                   12902 	ld	d, (hl)
      003841 21 02 00             12903 	ld	hl, #0x0002
      003844 19                   12904 	add	hl, de
      003845 E5                   12905 	push	hl
      003846 7D                   12906 	ld	a, l
      003847 F8 0A                12907 	ldhl	sp,	#10
      003849 77                   12908 	ld	(hl), a
      00384A E1                   12909 	pop	hl
      00384B 7C                   12910 	ld	a, h
      00384C F8 09                12911 	ldhl	sp,	#9
      00384E 32                   12912 	ld	(hl-), a
      00384F 2A                   12913 	ld	a, (hl+)
      003850 5F                   12914 	ld	e, a
      003851 2A                   12915 	ld	a, (hl+)
      003852 57                   12916 	ld	d, a
      003853 7E                   12917 	ld	a, (hl)
      003854 12                   12918 	ld	(de), a
                                  12919 ;src/main.c:1169: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      003855                      12920 00119$:
                                  12921 ;src/main.c:1149: for (uint8_t i = 0; i < exCount; ++i) {
      003855 F8 0B                12922 	ldhl	sp,	#11
      003857 34                   12923 	inc	(hl)
      003858 C3r83r36             12924 	jp	00118$
      00385B                      12925 00120$:
                                  12926 ;src/main.c:1175: }
      00385B E8 0C                12927 	add	sp, #12
      00385D C9                   12928 	ret
                                  12929 ;src/main.c:1177: void initEnemyOptions() {
                                  12930 ;	---------------------------------
                                  12931 ; Function initEnemyOptions
                                  12932 ; ---------------------------------
      00385E                      12933 _initEnemyOptions::
                                  12934 ;src/main.c:1178: enemyOptions[0] = blob;
      00385E 11 12 00             12935 	ld	de, #0x0012
      003861 D5                   12936 	push	de
      003862 11r8Br00             12937 	ld	de, #_blob
      003865 D5                   12938 	push	de
      003866 11r00r00             12939 	ld	de, #_enemyOptions
      003869 D5                   12940 	push	de
      00386A CDr00r00             12941 	call	___memcpy
      00386D E8 06                12942 	add	sp, #6
                                  12943 ;src/main.c:1179: enemyOptions[1] = bomb;
      00386F 11 12 00             12944 	ld	de, #0x0012
      003872 D5                   12945 	push	de
      003873 11r9Dr00             12946 	ld	de, #_bomb
      003876 D5                   12947 	push	de
      003877 11r12r00             12948 	ld	de, #(_enemyOptions + 18)
      00387A D5                   12949 	push	de
      00387B CDr00r00             12950 	call	___memcpy
      00387E E8 06                12951 	add	sp, #6
                                  12952 ;src/main.c:1180: enemyOptions[2] = miniship;
      003880 11 12 00             12953 	ld	de, #0x0012
      003883 D5                   12954 	push	de
      003884 11rAFr00             12955 	ld	de, #_miniship
      003887 D5                   12956 	push	de
      003888 11r24r00             12957 	ld	de, #(_enemyOptions + 36)
      00388B D5                   12958 	push	de
      00388C CDr00r00             12959 	call	___memcpy
      00388F E8 06                12960 	add	sp, #6
                                  12961 ;src/main.c:1181: enemyOptions[3] = shieldship;
      003891 11 12 00             12962 	ld	de, #0x0012
      003894 D5                   12963 	push	de
      003895 11rD3r00             12964 	ld	de, #_shieldship
      003898 D5                   12965 	push	de
      003899 11r36r00             12966 	ld	de, #(_enemyOptions + 54)
      00389C D5                   12967 	push	de
      00389D CDr00r00             12968 	call	___memcpy
      0038A0 E8 06                12969 	add	sp, #6
                                  12970 ;src/main.c:1183: enemyOptions[4] = bigblob;
      0038A2 11 12 00             12971 	ld	de, #0x0012
      0038A5 D5                   12972 	push	de
      0038A6 11rC1r00             12973 	ld	de, #_bigblob
      0038A9 D5                   12974 	push	de
      0038AA 11r48r00             12975 	ld	de, #(_enemyOptions + 72)
      0038AD D5                   12976 	push	de
      0038AE CDr00r00             12977 	call	___memcpy
      0038B1 E8 06                12978 	add	sp, #6
                                  12979 ;src/main.c:1184: }
      0038B3 C9                   12980 	ret
                                  12981 ;src/main.c:1187: void initProjectiles() {
                                  12982 ;	---------------------------------
                                  12983 ; Function initProjectiles
                                  12984 ; ---------------------------------
      0038B4                      12985 _initProjectiles::
                                  12986 ;src/main.c:1188: set_sprite_data(0x20, 17, ProjectileTiles); 
      0038B4 11rE8r0A             12987 	ld	de, #_ProjectileTiles
      0038B7 D5                   12988 	push	de
      0038B8 21 20 11             12989 	ld	hl, #0x1120
      0038BB E5                   12990 	push	hl
      0038BC CDr00r00             12991 	call	_set_sprite_data
      0038BF E8 04                12992 	add	sp, #4
                                  12993 ;src/main.c:1190: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0038C1 AF                   12994 	xor	a, a
      0038C2                      12995 00103$:
      0038C2 21rBFr10             12996 	ld	hl, #_PROJECTILECOUNT
      0038C5 4E                   12997 	ld	c, (hl)
      0038C6 B9                   12998 	cp	a, c
      0038C7 D0                   12999 	ret	NC
      0038C8 3C                   13000 	inc	a
                                  13001 ;src/main.c:1194: }
      0038C9 18 F7                13002 	jr	00103$
                                  13003 ;src/main.c:1196: void initGame() {
                                  13004 ;	---------------------------------
                                  13005 ; Function initGame
                                  13006 ; ---------------------------------
      0038CB                      13007 _initGame::
                                  13008 ;src/main.c:1197: HIDE_SPRITES;
      0038CB F0r00                13009 	ldh	a, (_LCDC_REG + 0)
      0038CD E6 FD                13010 	and	a, #0xfd
      0038CF E0r00                13011 	ldh	(_LCDC_REG + 0), a
                                  13012 ;src/main.c:1198: HIDE_WIN;
      0038D1 F0r00                13013 	ldh	a, (_LCDC_REG + 0)
      0038D3 E6 DF                13014 	and	a, #0xdf
      0038D5 E0r00                13015 	ldh	(_LCDC_REG + 0), a
                                  13016 ;src/main.c:1199: HIDE_BKG;
      0038D7 F0r00                13017 	ldh	a, (_LCDC_REG + 0)
      0038D9 E6 FE                13018 	and	a, #0xfe
      0038DB E0r00                13019 	ldh	(_LCDC_REG + 0), a
                                  13020 ;src/main.c:1202: STAT_REG = 0x45;
      0038DD 3E 45                13021 	ld	a, #0x45
      0038DF E0r00                13022 	ldh	(_STAT_REG + 0), a
                                  13023 ;src/main.c:1203: LYC_REG = 0x7e; //line 126
      0038E1 3E 7E                13024 	ld	a, #0x7e
      0038E3 E0r00                13025 	ldh	(_LYC_REG + 0), a
                                  13026 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0038E5 F3                   13027 	di
                                  13028 ;src/main.c:1205: add_LCD(interruptLCD);
      0038E6 11r00r00             13029 	ld	de, #_interruptLCD
      0038E9 D5                   13030 	push	de
      0038EA CDr00r00             13031 	call	_add_LCD
      0038ED 33                   13032 	inc	sp
      0038EE 33                   13033 	inc	sp
                                  13034 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      0038EF FB                   13035 	ei
                                  13036 ;src/main.c:1207: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      0038F0 3E 03                13037 	ld	a, #0x03
      0038F2 F5                   13038 	push	af
      0038F3 33                   13039 	inc	sp
      0038F4 CDr00r00             13040 	call	_set_interrupts
      0038F7 33                   13041 	inc	sp
                                  13042 ;src/main.c:1209: xDir = 0;
      0038F8 21r0Er01             13043 	ld	hl, #_xDir
      0038FB 36 00                13044 	ld	(hl), #0x00
                                  13045 ;src/main.c:1210: yDir = -1;
      0038FD 21r0Fr01             13046 	ld	hl, #_yDir
      003900 36 FF                13047 	ld	(hl), #0xff
                                  13048 ;src/main.c:1211: xSpeed = 0;
      003902 21r10r01             13049 	ld	hl, #_xSpeed
      003905 36 00                13050 	ld	(hl), #0x00
                                  13051 ;src/main.c:1212: ySpeed = 0;
      003907 21r11r01             13052 	ld	hl, #_ySpeed
      00390A 36 00                13053 	ld	(hl), #0x00
                                  13054 ;src/main.c:1215: playerX = 80<<5;
      00390C 21r12r01             13055 	ld	hl, #_playerX
      00390F 36 00                13056 	ld	(hl), #0x00
      003911 23                   13057 	inc	hl
      003912 36 0A                13058 	ld	(hl), #0x0a
                                  13059 ;src/main.c:1216: playerY = 80<<5;
      003914 21r14r01             13060 	ld	hl, #_playerY
      003917 36 00                13061 	ld	(hl), #0x00
      003919 23                   13062 	inc	hl
      00391A 36 0A                13063 	ld	(hl), #0x0a
                                  13064 ;src/main.c:1218: playerDrawX = 80;
      00391C 21r16r01             13065 	ld	hl, #_playerDrawX
      00391F 36 50                13066 	ld	(hl), #0x50
                                  13067 ;src/main.c:1219: playerDrawY = 80;
      003921 21r17r01             13068 	ld	hl, #_playerDrawY
      003924 36 50                13069 	ld	(hl), #0x50
                                  13070 ;src/main.c:1222: bgX = 0;
      003926 AF                   13071 	xor	a, a
      003927 21r18r01             13072 	ld	hl, #_bgX
      00392A 22                   13073 	ld	(hl+), a
      00392B 77                   13074 	ld	(hl), a
                                  13075 ;src/main.c:1223: bgY = 0;
      00392C AF                   13076 	xor	a, a
      00392D 21r1Ar01             13077 	ld	hl, #_bgY
      003930 22                   13078 	ld	(hl+), a
      003931 77                   13079 	ld	(hl), a
                                  13080 ;src/main.c:1225: hull = maxHull;
      003932 FArC1r10             13081 	ld	a, (#_maxHull)
      003935 EArF5r00             13082 	ld	(#_hull),a
                                  13083 ;src/main.c:1226: shield = maxShield;
      003938 FArC2r10             13084 	ld	a, (#_maxShield)
      00393B EArF6r00             13085 	ld	(#_shield),a
                                  13086 ;src/main.c:1228: DISPLAY_ON;
      00393E F0r00                13087 	ldh	a, (_LCDC_REG + 0)
      003940 F6 80                13088 	or	a, #0x80
      003942 E0r00                13089 	ldh	(_LCDC_REG + 0), a
                                  13090 ;src/main.c:1229: SPRITES_8x16;
      003944 F0r00                13091 	ldh	a, (_LCDC_REG + 0)
      003946 F6 04                13092 	or	a, #0x04
      003948 E0r00                13093 	ldh	(_LCDC_REG + 0), a
                                  13094 ;src/main.c:1230: set_sprite_data(0, 12, Player1);
      00394A 11r83r0C             13095 	ld	de, #_Player1
      00394D D5                   13096 	push	de
      00394E 21 00 0C             13097 	ld	hl, #0xc00
      003951 E5                   13098 	push	hl
      003952 CDr00r00             13099 	call	_set_sprite_data
      003955 E8 04                13100 	add	sp, #4
                                  13101 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003957 21r02r00             13102 	ld	hl, #(_shadow_OAM + 2)
      00395A 36 00                13103 	ld	(hl), #0x00
      00395C 21r06r00             13104 	ld	hl, #(_shadow_OAM + 6)
      00395F 36 02                13105 	ld	(hl), #0x02
                                  13106 ;src/main.c:1238: set_win_tiles(1,0,4,1,hullabel);
      003961 11r00r00             13107 	ld	de, #_hullabel
      003964 D5                   13108 	push	de
      003965 21 04 01             13109 	ld	hl, #0x104
      003968 E5                   13110 	push	hl
      003969 21 01 00             13111 	ld	hl, #0x01
      00396C E5                   13112 	push	hl
      00396D CDr00r00             13113 	call	_set_win_tiles
      003970 E8 06                13114 	add	sp, #6
                                  13115 ;src/main.c:1239: set_win_tiles(1,1,4,1,shieldlabel);
      003972 11r04r00             13116 	ld	de, #_shieldlabel
      003975 D5                   13117 	push	de
      003976 21 04 01             13118 	ld	hl, #0x104
      003979 E5                   13119 	push	hl
      00397A 21 01 01             13120 	ld	hl, #0x101
      00397D E5                   13121 	push	hl
      00397E CDr00r00             13122 	call	_set_win_tiles
      003981 E8 06                13123 	add	sp, #6
                                  13124 ;src/main.c:1244: set_bkg_data(0x50,1,healthblock);
      003983 11r07r0A             13125 	ld	de, #_healthblock
      003986 D5                   13126 	push	de
      003987 21 50 01             13127 	ld	hl, #0x150
      00398A E5                   13128 	push	hl
      00398B CDr00r00             13129 	call	_set_bkg_data
      00398E E8 04                13130 	add	sp, #4
                                  13131 ;src/main.c:1246: setHealthBar(0, hull);
      003990 FArF5r00             13132 	ld	a, (#_hull)
      003993 67                   13133 	ld	h, a
      003994 2E 00                13134 	ld	l, #0x00
      003996 E5                   13135 	push	hl
      003997 CDrC9r10             13136 	call	_setHealthBar
      00399A E1                   13137 	pop	hl
                                  13138 ;src/main.c:1247: setHealthBar(1, shield);
      00399B FArF6r00             13139 	ld	a, (#_shield)
      00399E 67                   13140 	ld	h, a
      00399F 2E 01                13141 	ld	l, #0x01
      0039A1 E5                   13142 	push	hl
      0039A2 CDrC9r10             13143 	call	_setHealthBar
      0039A5 E1                   13144 	pop	hl
                                  13145 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      0039A6 3E 07                13146 	ld	a, #0x07
      0039A8 E0r00                13147 	ldh	(_WX_REG + 0), a
      0039AA 3E 7E                13148 	ld	a, #0x7e
      0039AC E0r00                13149 	ldh	(_WY_REG + 0), a
                                  13150 ;src/main.c:1254: set_bkg_data(0x25, 16, marstiles);		// load background tileset (start in vram, count, tilestruct)
      0039AE 11r07r05             13151 	ld	de, #_marstiles
      0039B1 D5                   13152 	push	de
      0039B2 21 25 10             13153 	ld	hl, #0x1025
      0039B5 E5                   13154 	push	hl
      0039B6 CDr00r00             13155 	call	_set_bkg_data
      0039B9 E8 04                13156 	add	sp, #4
                                  13157 ;src/main.c:1255: set_bkg_tiles(0,0,marsbackgroundWidth, marsbackgroundHeight ,marsbackground); //set tilemap to be a background
      0039BB 11r07r06             13158 	ld	de, #_marsbackground
      0039BE D5                   13159 	push	de
      0039BF 21 20 20             13160 	ld	hl, #0x2020
      0039C2 E5                   13161 	push	hl
      0039C3 AF                   13162 	xor	a, a
      0039C4 0F                   13163 	rrca
      0039C5 F5                   13164 	push	af
      0039C6 CDr00r00             13165 	call	_set_bkg_tiles
      0039C9 E8 06                13166 	add	sp, #6
                                  13167 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0039CB AF                   13168 	xor	a, a
      0039CC E0r00                13169 	ldh	(_SCX_REG + 0), a
      0039CE AF                   13170 	xor	a, a
      0039CF E0r00                13171 	ldh	(_SCY_REG + 0), a
                                  13172 ;src/main.c:1261: set_bkg_data(0x51, 18, ProjectileTiles);
      0039D1 11rE8r0A             13173 	ld	de, #_ProjectileTiles
      0039D4 D5                   13174 	push	de
      0039D5 21 51 12             13175 	ld	hl, #0x1251
      0039D8 E5                   13176 	push	hl
      0039D9 CDr00r00             13177 	call	_set_bkg_data
      0039DC E8 04                13178 	add	sp, #4
                                  13179 ;src/main.c:1263: set_win_tiles(10, 0,4,1,weaponlabel);
      0039DE 11r08r00             13180 	ld	de, #_weaponlabel
      0039E1 D5                   13181 	push	de
      0039E2 21 04 01             13182 	ld	hl, #0x104
      0039E5 E5                   13183 	push	hl
      0039E6 21 0A 00             13184 	ld	hl, #0x0a
      0039E9 E5                   13185 	push	hl
      0039EA CDr00r00             13186 	call	_set_win_tiles
      0039ED E8 06                13187 	add	sp, #6
                                  13188 ;src/main.c:1264: set_win_tiles(10, 1,4,1,scorelabel);
      0039EF 11r0Cr00             13189 	ld	de, #_scorelabel
      0039F2 D5                   13190 	push	de
      0039F3 21 04 01             13191 	ld	hl, #0x104
      0039F6 E5                   13192 	push	hl
      0039F7 21 0A 01             13193 	ld	hl, #0x10a
      0039FA E5                   13194 	push	hl
      0039FB CDr00r00             13195 	call	_set_win_tiles
      0039FE E8 06                13196 	add	sp, #6
                                  13197 ;src/main.c:1266: setGunIcon();
      003A00 CDrE1r2C             13198 	call	_setGunIcon
                                  13199 ;src/main.c:1268: SCORE = MAKE_BCD(00000);
      003A03 AF                   13200 	xor	a, a
      003A04 21r30r01             13201 	ld	hl, #_SCORE
      003A07 22                   13202 	ld	(hl+), a
      003A08 22                   13203 	ld	(hl+), a
      003A09 22                   13204 	ld	(hl+), a
      003A0A 77                   13205 	ld	(hl), a
                                  13206 ;src/main.c:1269: updateScore();
      003A0B CDrDAr11             13207 	call	_updateScore
                                  13208 ;src/main.c:1270: missiles = 0;
      003A0E 21r25r01             13209 	ld	hl, #_missiles
      003A11 36 00                13210 	ld	(hl), #0x00
                                  13211 ;src/main.c:1271: MISSILES = MAKE_BCD(0);
      003A13 AF                   13212 	xor	a, a
      003A14 21r26r01             13213 	ld	hl, #_MISSILES
      003A17 22                   13214 	ld	(hl+), a
      003A18 22                   13215 	ld	(hl+), a
      003A19 22                   13216 	ld	(hl+), a
      003A1A 77                   13217 	ld	(hl), a
                                  13218 ;src/main.c:1272: updateMissileCount(0);
      003A1B AF                   13219 	xor	a, a
      003A1C F5                   13220 	push	af
      003A1D 33                   13221 	inc	sp
      003A1E CDr04r12             13222 	call	_updateMissileCount
      003A21 33                   13223 	inc	sp
                                  13224 ;src/main.c:1273: set_win_tiles(17, 0,1,1,gunMap+2);
      003A22 11r2Dr01             13225 	ld	de, #(_gunMap + 2)
      003A25 D5                   13226 	push	de
      003A26 21 01 01             13227 	ld	hl, #0x101
      003A29 E5                   13228 	push	hl
      003A2A 21 11 00             13229 	ld	hl, #0x11
      003A2D E5                   13230 	push	hl
      003A2E CDr00r00             13231 	call	_set_win_tiles
      003A31 E8 06                13232 	add	sp, #6
                                  13233 ;src/main.c:1277: pickup = upgrade;//upgrade;
      003A33 11 09 00             13234 	ld	de, #0x0009
      003A36 D5                   13235 	push	de
      003A37 11r08r0C             13236 	ld	de, #_upgrade
      003A3A D5                   13237 	push	de
      003A3B 11rF9r00             13238 	ld	de, #_pickup
      003A3E D5                   13239 	push	de
      003A3F CDr00r00             13240 	call	___memcpy
      003A42 E8 06                13241 	add	sp, #6
                                  13242 ;src/main.c:1279: set_sprite_data(0x70, 6, Pickups);
      003A44 11r23r0C             13243 	ld	de, #_Pickups
      003A47 D5                   13244 	push	de
      003A48 21 70 06             13245 	ld	hl, #0x670
      003A4B E5                   13246 	push	hl
      003A4C CDr00r00             13247 	call	_set_sprite_data
      003A4F E8 04                13248 	add	sp, #4
                                  13249 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003A51 21r0Er00             13250 	ld	hl, #(_shadow_OAM + 14)
      003A54 36 7F                13251 	ld	(hl), #0x7f
                                  13252 ;src/main.c:1281: move_sprite(3, pickup.x + 4, pickup.y + 12);
      003A56 FArFCr00             13253 	ld	a, (#(_pickup + 3) + 0)
      003A59 C6 0C                13254 	add	a, #0x0c
      003A5B 47                   13255 	ld	b, a
      003A5C FArFAr00             13256 	ld	a, (#(_pickup + 1) + 0)
      003A5F C6 04                13257 	add	a, #0x04
      003A61 4F                   13258 	ld	c, a
                                  13259 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003A62 21r0Cr00             13260 	ld	hl, #(_shadow_OAM + 12)
                                  13261 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003A65 78                   13262 	ld	a, b
      003A66 22                   13263 	ld	(hl+), a
      003A67 71                   13264 	ld	(hl), c
                                  13265 ;src/main.c:1283: for (uint8_t i = 0; i<exCount; ++i) {
      003A68 0E 00                13266 	ld	c, #0x00
      003A6A                      13267 00111$:
      003A6A 21rC5r10             13268 	ld	hl, #_exCount
      003A6D 46                   13269 	ld	b, (hl)
      003A6E 79                   13270 	ld	a, c
      003A6F 90                   13271 	sub	a, b
      003A70 30 1E                13272 	jr	NC, 00101$
                                  13273 ;src/main.c:1284: explosions[i] = ex;
      003A72 06 00                13274 	ld	b, #0x00
      003A74 69                   13275 	ld	l, c
      003A75 60                   13276 	ld	h, b
      003A76 29                   13277 	add	hl, hl
      003A77 09                   13278 	add	hl, bc
      003A78 29                   13279 	add	hl, hl
      003A79 11r02r01             13280 	ld	de, #_explosions
      003A7C 19                   13281 	add	hl, de
      003A7D C5                   13282 	push	bc
      003A7E 11 06 00             13283 	ld	de, #0x0006
      003A81 D5                   13284 	push	de
      003A82 11r83r0D             13285 	ld	de, #_ex
      003A85 D5                   13286 	push	de
      003A86 E5                   13287 	push	hl
      003A87 CDr00r00             13288 	call	___memcpy
      003A8A E8 06                13289 	add	sp, #6
      003A8C C1                   13290 	pop	bc
                                  13291 ;src/main.c:1283: for (uint8_t i = 0; i<exCount; ++i) {
      003A8D 0C                   13292 	inc	c
      003A8E 18 DA                13293 	jr	00111$
      003A90                      13294 00101$:
                                  13295 ;src/main.c:1286: set_sprite_data(exTiles[0], 16, Ex1);
      003A90 FAr39r01             13296 	ld	a, (#_exTiles + 0)
      003A93 11r89r0D             13297 	ld	de, #_Ex1
      003A96 D5                   13298 	push	de
      003A97 26 10                13299 	ld	h, #0x10
                                  13300 ;	spillPairReg hl
                                  13301 ;	spillPairReg hl
      003A99 E5                   13302 	push	hl
      003A9A 33                   13303 	inc	sp
      003A9B F5                   13304 	push	af
      003A9C 33                   13305 	inc	sp
      003A9D CDr00r00             13306 	call	_set_sprite_data
      003AA0 E8 04                13307 	add	sp, #4
                                  13308 ;src/main.c:1287: set_sprite_data(exTiles[1], 16, Ex2);
      003AA2 FAr3Ar01             13309 	ld	a, (#(_exTiles + 1) + 0)
      003AA5 11r89r0E             13310 	ld	de, #_Ex2
      003AA8 D5                   13311 	push	de
      003AA9 26 10                13312 	ld	h, #0x10
                                  13313 ;	spillPairReg hl
                                  13314 ;	spillPairReg hl
      003AAB E5                   13315 	push	hl
      003AAC 33                   13316 	inc	sp
      003AAD F5                   13317 	push	af
      003AAE 33                   13318 	inc	sp
      003AAF CDr00r00             13319 	call	_set_sprite_data
      003AB2 E8 04                13320 	add	sp, #4
                                  13321 ;src/main.c:1288: set_sprite_data(exTiles[2], 16, Ex3);
      003AB4 FAr3Br01             13322 	ld	a, (#(_exTiles + 2) + 0)
      003AB7 11r89r0F             13323 	ld	de, #_Ex3
      003ABA D5                   13324 	push	de
      003ABB 26 10                13325 	ld	h, #0x10
                                  13326 ;	spillPairReg hl
                                  13327 ;	spillPairReg hl
      003ABD E5                   13328 	push	hl
      003ABE 33                   13329 	inc	sp
      003ABF F5                   13330 	push	af
      003AC0 33                   13331 	inc	sp
      003AC1 CDr00r00             13332 	call	_set_sprite_data
      003AC4 E8 04                13333 	add	sp, #4
                                  13334 ;src/main.c:1291: SHOW_SPRITES;
      003AC6 F0r00                13335 	ldh	a, (_LCDC_REG + 0)
      003AC8 F6 02                13336 	or	a, #0x02
      003ACA E0r00                13337 	ldh	(_LCDC_REG + 0), a
                                  13338 ;src/main.c:1292: SHOW_WIN;
      003ACC F0r00                13339 	ldh	a, (_LCDC_REG + 0)
      003ACE F6 20                13340 	or	a, #0x20
      003AD0 E0r00                13341 	ldh	(_LCDC_REG + 0), a
                                  13342 ;src/main.c:1293: SHOW_BKG;
      003AD2 F0r00                13343 	ldh	a, (_LCDC_REG + 0)
      003AD4 F6 01                13344 	or	a, #0x01
      003AD6 E0r00                13345 	ldh	(_LCDC_REG + 0), a
                                  13346 ;src/main.c:1295: }
      003AD8 C9                   13347 	ret
                                  13348 ;src/main.c:1300: void showScoreScreen() {
                                  13349 ;	---------------------------------
                                  13350 ; Function showScoreScreen
                                  13351 ; ---------------------------------
      003AD9                      13352 _showScoreScreen::
      003AD9 E8 F6                13353 	add	sp, #-10
                                  13354 ;src/main.c:1301: HIDE_WIN;
      003ADB F0r00                13355 	ldh	a, (_LCDC_REG + 0)
      003ADD E6 DF                13356 	and	a, #0xdf
      003ADF E0r00                13357 	ldh	(_LCDC_REG + 0), a
                                  13358 ;src/main.c:1302: HIDE_SPRITES;
      003AE1 F0r00                13359 	ldh	a, (_LCDC_REG + 0)
      003AE3 E6 FD                13360 	and	a, #0xfd
      003AE5 E0r00                13361 	ldh	(_LCDC_REG + 0), a
                                  13362 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003AE7 AF                   13363 	xor	a, a
      003AE8 E0r00                13364 	ldh	(_WX_REG + 0), a
      003AEA AF                   13365 	xor	a, a
      003AEB E0r00                13366 	ldh	(_WY_REG + 0), a
                                  13367 ;src/main.c:1306: clearScreen();
      003AED CDrBFr3C             13368 	call	_clearScreen
                                  13369 ;src/main.c:1307: initFont();
      003AF0 CDr99r3B             13370 	call	_initFont
                                  13371 ;src/main.c:1309: set_win_tiles(8, 5, 5, 1, endScoreLabel);
      003AF3 11r10r00             13372 	ld	de, #_endScoreLabel
      003AF6 D5                   13373 	push	de
      003AF7 21 05 01             13374 	ld	hl, #0x105
      003AFA E5                   13375 	push	hl
      003AFB 21 08 05             13376 	ld	hl, #0x508
      003AFE E5                   13377 	push	hl
      003AFF CDr00r00             13378 	call	_set_win_tiles
      003B02 E8 06                13379 	add	sp, #6
                                  13380 ;src/main.c:1313: for (uint16_t j=0; j<1234; ++j) {
      003B04 01 00 00             13381 	ld	bc, #0x0000
      003B07                      13382 00104$:
      003B07 59                   13383 	ld	e, c
      003B08 50                   13384 	ld	d, b
      003B09 7B                   13385 	ld	a, e
      003B0A D6 D2                13386 	sub	a, #0xd2
      003B0C 7A                   13387 	ld	a, d
      003B0D DE 04                13388 	sbc	a, #0x04
      003B0F 30 08                13389 	jr	NC, 00101$
                                  13390 ;src/main.c:1314: incrementScore();
      003B11 C5                   13391 	push	bc
      003B12 CDr78r12             13392 	call	_incrementScore
      003B15 C1                   13393 	pop	bc
                                  13394 ;src/main.c:1313: for (uint16_t j=0; j<1234; ++j) {
      003B16 03                   13395 	inc	bc
      003B17 18 EE                13396 	jr	00104$
      003B19                      13397 00101$:
                                  13398 ;src/main.c:1316: bcd2text(&SCORE, 0x01, buf);
      003B19 F8 00                13399 	ldhl	sp,	#0
      003B1B 4D                   13400 	ld	c, l
      003B1C 44                   13401 	ld	b, h
      003B1D 59                   13402 	ld	e, c
      003B1E 50                   13403 	ld	d, b
      003B1F C5                   13404 	push	bc
      003B20 D5                   13405 	push	de
      003B21 3E 01                13406 	ld	a, #0x01
      003B23 F5                   13407 	push	af
      003B24 33                   13408 	inc	sp
      003B25 11r30r01             13409 	ld	de, #_SCORE
      003B28 D5                   13410 	push	de
      003B29 CDr00r00             13411 	call	_bcd2text
      003B2C E8 05                13412 	add	sp, #5
      003B2E C1                   13413 	pop	bc
                                  13414 ;src/main.c:1317: set_win_tiles(7, 8, 7, 1, buf+1);
      003B2F 03                   13415 	inc	bc
      003B30 C5                   13416 	push	bc
      003B31 21 07 01             13417 	ld	hl, #0x107
      003B34 E5                   13418 	push	hl
      003B35 21 07 08             13419 	ld	hl, #0x807
      003B38 E5                   13420 	push	hl
      003B39 CDr00r00             13421 	call	_set_win_tiles
      003B3C E8 06                13422 	add	sp, #6
                                  13423 ;src/main.c:1321: set_win_tiles(4, 11, 13, 1, pressAnyKeyLabel);
      003B3E 11r15r00             13424 	ld	de, #_pressAnyKeyLabel
      003B41 D5                   13425 	push	de
      003B42 21 0D 01             13426 	ld	hl, #0x10d
      003B45 E5                   13427 	push	hl
      003B46 21 04 0B             13428 	ld	hl, #0xb04
      003B49 E5                   13429 	push	hl
      003B4A CDr00r00             13430 	call	_set_win_tiles
      003B4D E8 06                13431 	add	sp, #6
                                  13432 ;src/main.c:1323: set_win_tiles(5, 12, 11, 1, toContinueLabel);
      003B4F 11r22r00             13433 	ld	de, #_toContinueLabel
      003B52 D5                   13434 	push	de
      003B53 21 0B 01             13435 	ld	hl, #0x10b
      003B56 E5                   13436 	push	hl
      003B57 21 05 0C             13437 	ld	hl, #0xc05
      003B5A E5                   13438 	push	hl
      003B5B CDr00r00             13439 	call	_set_win_tiles
      003B5E E8 06                13440 	add	sp, #6
                                  13441 ;src/main.c:1327: SHOW_WIN;
      003B60 F0r00                13442 	ldh	a, (_LCDC_REG + 0)
      003B62 F6 20                13443 	or	a, #0x20
      003B64 E0r00                13444 	ldh	(_LCDC_REG + 0), a
                                  13445 ;src/main.c:1329: }
      003B66 E8 0A                13446 	add	sp, #10
      003B68 C9                   13447 	ret
                                  13448 ;src/main.c:1331: void showControls() {
                                  13449 ;	---------------------------------
                                  13450 ; Function showControls
                                  13451 ; ---------------------------------
      003B69                      13452 _showControls::
                                  13453 ;src/main.c:1332: HIDE_WIN;
      003B69 F0r00                13454 	ldh	a, (_LCDC_REG + 0)
      003B6B E6 DF                13455 	and	a, #0xdf
      003B6D E0r00                13456 	ldh	(_LCDC_REG + 0), a
                                  13457 ;src/main.c:1333: HIDE_SPRITES;
      003B6F F0r00                13458 	ldh	a, (_LCDC_REG + 0)
      003B71 E6 FD                13459 	and	a, #0xfd
      003B73 E0r00                13460 	ldh	(_LCDC_REG + 0), a
                                  13461 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003B75 AF                   13462 	xor	a, a
      003B76 E0r00                13463 	ldh	(_WX_REG + 0), a
      003B78 AF                   13464 	xor	a, a
      003B79 E0r00                13465 	ldh	(_WY_REG + 0), a
                                  13466 ;src/main.c:1337: clearScreen();
      003B7B CDrBFr3C             13467 	call	_clearScreen
                                  13468 ;src/main.c:1338: initFont();
      003B7E CDr99r3B             13469 	call	_initFont
                                  13470 ;src/main.c:1340: set_win_tiles(8, 5, 5, 1, endScoreLabel);
      003B81 11r10r00             13471 	ld	de, #_endScoreLabel
      003B84 D5                   13472 	push	de
      003B85 21 05 01             13473 	ld	hl, #0x105
      003B88 E5                   13474 	push	hl
      003B89 21 08 05             13475 	ld	hl, #0x508
      003B8C E5                   13476 	push	hl
      003B8D CDr00r00             13477 	call	_set_win_tiles
      003B90 E8 06                13478 	add	sp, #6
                                  13479 ;src/main.c:1343: SHOW_WIN;
      003B92 F0r00                13480 	ldh	a, (_LCDC_REG + 0)
      003B94 F6 20                13481 	or	a, #0x20
      003B96 E0r00                13482 	ldh	(_LCDC_REG + 0), a
                                  13483 ;src/main.c:1345: }
      003B98 C9                   13484 	ret
                                  13485 ;src/main.c:1347: void initFont() {
                                  13486 ;	---------------------------------
                                  13487 ; Function initFont
                                  13488 ; ---------------------------------
      003B99                      13489 _initFont::
                                  13490 ;src/main.c:1348: font_init();
      003B99 CDr00r00             13491 	call	_font_init
                                  13492 ;src/main.c:1350: min_font = font_load(font_min); // 36 tiles of characters
      003B9C 11r00r00             13493 	ld	de, #_font_min
      003B9F D5                   13494 	push	de
      003BA0 CDr00r00             13495 	call	_font_load
      003BA3 E1                   13496 	pop	hl
      003BA4 21rF7r00             13497 	ld	hl, #_min_font
      003BA7 7B                   13498 	ld	a, e
      003BA8 22                   13499 	ld	(hl+), a
                                  13500 ;src/main.c:1351: font_set(min_font);
      003BA9 7A                   13501 	ld	a, d
      003BAA 32                   13502 	ld	(hl-), a
      003BAB 2A                   13503 	ld	a, (hl+)
      003BAC 5F                   13504 	ld	e, a
      003BAD 56                   13505 	ld	d, (hl)
      003BAE D5                   13506 	push	de
      003BAF CDr00r00             13507 	call	_font_set
      003BB2 E1                   13508 	pop	hl
                                  13509 ;src/main.c:1353: }
      003BB3 C9                   13510 	ret
                                  13511 ;src/main.c:1355: void showStartScreen() {
                                  13512 ;	---------------------------------
                                  13513 ; Function showStartScreen
                                  13514 ; ---------------------------------
      003BB4                      13515 _showStartScreen::
                                  13516 ;src/main.c:1356: initFont();
      003BB4 CDr99r3B             13517 	call	_initFont
                                  13518 ;src/main.c:1358: HIDE_WIN;
      003BB7 F0r00                13519 	ldh	a, (_LCDC_REG + 0)
      003BB9 E6 DF                13520 	and	a, #0xdf
      003BBB E0r00                13521 	ldh	(_LCDC_REG + 0), a
                                  13522 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003BBD AF                   13523 	xor	a, a
      003BBE E0r00                13524 	ldh	(_WX_REG + 0), a
      003BC0 AF                   13525 	xor	a, a
      003BC1 E0r00                13526 	ldh	(_WY_REG + 0), a
                                  13527 ;src/main.c:1363: set_win_tiles(5, 8, 11, 1, pressStartLabel);
      003BC3 11r41r00             13528 	ld	de, #_pressStartLabel
      003BC6 D5                   13529 	push	de
      003BC7 21 0B 01             13530 	ld	hl, #0x10b
      003BCA E5                   13531 	push	hl
      003BCB 21 05 08             13532 	ld	hl, #0x805
      003BCE E5                   13533 	push	hl
      003BCF CDr00r00             13534 	call	_set_win_tiles
      003BD2 E8 06                13535 	add	sp, #6
                                  13536 ;src/main.c:1365: SHOW_WIN;
      003BD4 F0r00                13537 	ldh	a, (_LCDC_REG + 0)
      003BD6 F6 20                13538 	or	a, #0x20
      003BD8 E0r00                13539 	ldh	(_LCDC_REG + 0), a
                                  13540 ;src/main.c:1366: }
      003BDA C9                   13541 	ret
                                  13542 ;src/main.c:1369: void updateMenu(int8_t menuitem) {
                                  13543 ;	---------------------------------
                                  13544 ; Function updateMenu
                                  13545 ; ---------------------------------
      003BDB                      13546 _updateMenu::
                                  13547 ;src/main.c:1370: move_sprite(0, 47, 72+ (menuitem<<3));
      003BDB F8 02                13548 	ldhl	sp,	#2
      003BDD 7E                   13549 	ld	a, (hl)
      003BDE 87                   13550 	add	a, a
      003BDF 87                   13551 	add	a, a
      003BE0 87                   13552 	add	a, a
      003BE1 C6 48                13553 	add	a, #0x48
      003BE3 4F                   13554 	ld	c, a
      003BE4 41                   13555 	ld	b, c
                                  13556 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003BE5 21r00r00             13557 	ld	hl, #_shadow_OAM
                                  13558 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003BE8 78                   13559 	ld	a, b
      003BE9 22                   13560 	ld	(hl+), a
      003BEA 36 2F                13561 	ld	(hl), #0x2f
                                  13562 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003BEC 21r04r00             13563 	ld	hl, #(_shadow_OAM + 4)
                                  13564 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003BEF 79                   13565 	ld	a, c
      003BF0 22                   13566 	ld	(hl+), a
      003BF1 36 7B                13567 	ld	(hl), #0x7b
                                  13568 ;src/main.c:1371: move_sprite(1, 123, 72+ (menuitem<<3));
                                  13569 ;src/main.c:1373: }
      003BF3 C9                   13570 	ret
                                  13571 ;src/main.c:1376: uint8_t showMenu() {
                                  13572 ;	---------------------------------
                                  13573 ; Function showMenu
                                  13574 ; ---------------------------------
      003BF4                      13575 _showMenu::
                                  13576 ;src/main.c:1377: initFont();
      003BF4 CDr99r3B             13577 	call	_initFont
                                  13578 ;src/main.c:1379: HIDE_WIN;
      003BF7 F0r00                13579 	ldh	a, (_LCDC_REG + 0)
      003BF9 E6 DF                13580 	and	a, #0xdf
      003BFB E0r00                13581 	ldh	(_LCDC_REG + 0), a
                                  13582 ;src/main.c:1380: HIDE_SPRITES;
      003BFD F0r00                13583 	ldh	a, (_LCDC_REG + 0)
      003BFF E6 FD                13584 	and	a, #0xfd
      003C01 E0r00                13585 	ldh	(_LCDC_REG + 0), a
                                  13586 ;src/main.c:1382: SPRITES_8x8;
      003C03 F0r00                13587 	ldh	a, (_LCDC_REG + 0)
      003C05 E6 FB                13588 	and	a, #0xfb
      003C07 E0r00                13589 	ldh	(_LCDC_REG + 0), a
                                  13590 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003C09 AF                   13591 	xor	a, a
      003C0A E0r00                13592 	ldh	(_WX_REG + 0), a
      003C0C AF                   13593 	xor	a, a
      003C0D E0r00                13594 	ldh	(_WY_REG + 0), a
                                  13595 ;src/main.c:1388: set_win_tiles(9,7, 4, 1, playLabel);
      003C0F 11r4Cr00             13596 	ld	de, #_playLabel
      003C12 D5                   13597 	push	de
      003C13 21 04 01             13598 	ld	hl, #0x104
      003C16 E5                   13599 	push	hl
      003C17 21 09 07             13600 	ld	hl, #0x709
      003C1A E5                   13601 	push	hl
      003C1B CDr00r00             13602 	call	_set_win_tiles
      003C1E E8 06                13603 	add	sp, #6
                                  13604 ;src/main.c:1389: set_win_tiles(7, 8, 8, 1, controlsLabel);
      003C20 11r50r00             13605 	ld	de, #_controlsLabel
      003C23 D5                   13606 	push	de
      003C24 21 08 01             13607 	ld	hl, #0x108
      003C27 E5                   13608 	push	hl
      003C28 21 07 08             13609 	ld	hl, #0x807
      003C2B E5                   13610 	push	hl
      003C2C CDr00r00             13611 	call	_set_win_tiles
      003C2F E8 06                13612 	add	sp, #6
                                  13613 ;src/main.c:1393: set_sprite_data(0, 1, MenuPicker);
      003C31 11r89r10             13614 	ld	de, #_MenuPicker
      003C34 D5                   13615 	push	de
      003C35 AF                   13616 	xor	a, a
      003C36 3C                   13617 	inc	a
      003C37 F5                   13618 	push	af
      003C38 CDr00r00             13619 	call	_set_sprite_data
      003C3B E8 04                13620 	add	sp, #4
                                  13621 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003C3D 21r02r00             13622 	ld	hl, #(_shadow_OAM + 2)
      003C40 36 00                13623 	ld	(hl), #0x00
      003C42 21r06r00             13624 	ld	hl, #(_shadow_OAM + 6)
      003C45 36 00                13625 	ld	(hl), #0x00
                                  13626 ;src/main.c:1396: SHOW_WIN;
      003C47 F0r00                13627 	ldh	a, (_LCDC_REG + 0)
      003C49 F6 20                13628 	or	a, #0x20
      003C4B E0r00                13629 	ldh	(_LCDC_REG + 0), a
                                  13630 ;src/main.c:1397: SHOW_SPRITES;
      003C4D F0r00                13631 	ldh	a, (_LCDC_REG + 0)
      003C4F F6 02                13632 	or	a, #0x02
      003C51 E0r00                13633 	ldh	(_LCDC_REG + 0), a
                                  13634 ;src/main.c:1400: int8_t menuitem = 0;
      003C53 0E 00                13635 	ld	c, #0x00
                                  13636 ;src/main.c:1402: while (1) {
      003C55                      13637 00113$:
                                  13638 ;src/main.c:1403: joydata = joypad(); // query for button states
      003C55 CDr00r00             13639 	call	_joypad
      003C58 21r1Cr01             13640 	ld	hl, #_joydata
      003C5B 73                   13641 	ld	(hl), e
                                  13642 ;src/main.c:1405: if (joydata & J_DOWN) {
      003C5C 7E                   13643 	ld	a, (hl)
      003C5D CB 5F                13644 	bit	3, a
      003C5F 28 03                13645 	jr	Z, 00104$
                                  13646 ;src/main.c:1406: menuitem++;
      003C61 0C                   13647 	inc	c
      003C62 18 05                13648 	jr	00105$
      003C64                      13649 00104$:
                                  13650 ;src/main.c:1408: else if (joydata & J_UP) {
      003C64 CB 57                13651 	bit	2, a
      003C66 28 01                13652 	jr	Z, 00105$
                                  13653 ;src/main.c:1409: menuitem--;
      003C68 0D                   13654 	dec	c
      003C69                      13655 00105$:
                                  13656 ;src/main.c:357: return (value < min) ? min : (value > max) ? max : value;
      003C69 CB 79                13657 	bit	7, c
      003C6B 28 04                13658 	jr	Z, 00121$
      003C6D 0E 00                13659 	ld	c, #0x00
      003C6F 18 19                13660 	jr	00122$
      003C71                      13661 00121$:
      003C71 59                   13662 	ld	e, c
      003C72 3E 01                13663 	ld	a,#0x01
      003C74 57                   13664 	ld	d,a
      003C75 91                   13665 	sub	a, c
      003C76 CB 7B                13666 	bit	7, e
      003C78 28 07                13667 	jr	Z, 00167$
      003C7A CB 7A                13668 	bit	7, d
      003C7C 20 08                13669 	jr	NZ, 00168$
      003C7E BF                   13670 	cp	a, a
      003C7F 18 05                13671 	jr	00168$
      003C81                      13672 00167$:
      003C81 CB 7A                13673 	bit	7, d
      003C83 28 01                13674 	jr	Z, 00168$
      003C85 37                   13675 	scf
      003C86                      13676 00168$:
      003C86 30 02                13677 	jr	NC, 00123$
      003C88 0E 01                13678 	ld	c, #0x01
      003C8A                      13679 00123$:
      003C8A                      13680 00122$:
                                  13681 ;src/main.c:1411: menuitem = clamp(menuitem, 0, 1);
      003C8A 41                   13682 	ld	b,c
                                  13683 ;src/main.c:1412: updateMenu(menuitem);
      003C8B C5                   13684 	push	bc
      003C8C C5                   13685 	push	bc
      003C8D 33                   13686 	inc	sp
      003C8E CDrDBr3B             13687 	call	_updateMenu
      003C91 33                   13688 	inc	sp
      003C92 C1                   13689 	pop	bc
                                  13690 ;src/main.c:1405: if (joydata & J_DOWN) {
      003C93 FAr1Cr01             13691 	ld	a, (#_joydata)
                                  13692 ;src/main.c:1414: if ((joydata & J_A) && menuitem == 0) {
      003C96 E6 10                13693 	and	a, #0x10
      003C98 5F                   13694 	ld	e, a
      003C99 16 00                13695 	ld	d, #0x00
      003C9B 7A                   13696 	ld	a, d
      003C9C B3                   13697 	or	a, e
      003C9D 28 11                13698 	jr	Z, 00109$
      003C9F 78                   13699 	ld	a, b
      003CA0 B7                   13700 	or	a, a
      003CA1 20 0D                13701 	jr	NZ, 00109$
                                  13702 ;src/main.c:1415: waitpadup();
      003CA3 CDr00r00             13703 	call	_waitpadup
                                  13704 ;src/main.c:1416: playSound(0);
      003CA6 AF                   13705 	xor	a, a
      003CA7 F5                   13706 	push	af
      003CA8 33                   13707 	inc	sp
      003CA9 CDrB6r14             13708 	call	_playSound
      003CAC 33                   13709 	inc	sp
                                  13710 ;src/main.c:1417: return 0;
      003CAD 1E 00                13711 	ld	e, #0x00
      003CAF C9                   13712 	ret
      003CB0                      13713 00109$:
                                  13714 ;src/main.c:1419: else if (joydata & J_A) {
      003CB0 7A                   13715 	ld	a, d
      003CB1 B3                   13716 	or	a, e
      003CB2 28 06                13717 	jr	Z, 00110$
                                  13718 ;src/main.c:1420: waitpadup();
      003CB4 CDr00r00             13719 	call	_waitpadup
                                  13720 ;src/main.c:1421: return 1;
      003CB7 1E 01                13721 	ld	e, #0x01
      003CB9 C9                   13722 	ret
      003CBA                      13723 00110$:
                                  13724 ;src/main.c:1424: wait_vbl_done();
      003CBA CDr00r00             13725 	call	_wait_vbl_done
                                  13726 ;src/main.c:1427: }
      003CBD 18 96                13727 	jr	00113$
                                  13728 ;src/main.c:1429: void clearScreen() {
                                  13729 ;	---------------------------------
                                  13730 ; Function clearScreen
                                  13731 ; ---------------------------------
      003CBF                      13732 _clearScreen::
                                  13733 ;src/main.c:1430: HIDE_WIN;
      003CBF F0r00                13734 	ldh	a, (_LCDC_REG + 0)
      003CC1 E6 DF                13735 	and	a, #0xdf
      003CC3 E0r00                13736 	ldh	(_LCDC_REG + 0), a
                                  13737 ;src/main.c:1431: HIDE_BKG;
      003CC5 F0r00                13738 	ldh	a, (_LCDC_REG + 0)
      003CC7 E6 FE                13739 	and	a, #0xfe
      003CC9 E0r00                13740 	ldh	(_LCDC_REG + 0), a
                                  13741 ;src/main.c:1432: for (uint8_t i=0; i < 18; ++i) {
      003CCB 06 00                13742 	ld	b, #0x00
      003CCD                      13743 00105$:
      003CCD 78                   13744 	ld	a, b
      003CCE D6 12                13745 	sub	a, #0x12
      003CD0 30 29                13746 	jr	NC, 00101$
                                  13747 ;src/main.c:1433: set_win_tiles(1,i,20,1,emptyRow);
      003CD2 11r2Dr00             13748 	ld	de, #_emptyRow
      003CD5 D5                   13749 	push	de
      003CD6 21 14 01             13750 	ld	hl, #0x114
      003CD9 E5                   13751 	push	hl
      003CDA C5                   13752 	push	bc
      003CDB 33                   13753 	inc	sp
      003CDC 3E 01                13754 	ld	a, #0x01
      003CDE F5                   13755 	push	af
      003CDF 33                   13756 	inc	sp
      003CE0 CDr00r00             13757 	call	_set_win_tiles
      003CE3 E8 06                13758 	add	sp, #6
                                  13759 ;src/main.c:1434: set_bkg_tiles(1,i,20,1,emptyRow);
      003CE5 11r2Dr00             13760 	ld	de, #_emptyRow
      003CE8 D5                   13761 	push	de
      003CE9 21 14 01             13762 	ld	hl, #0x114
      003CEC E5                   13763 	push	hl
      003CED C5                   13764 	push	bc
      003CEE 33                   13765 	inc	sp
      003CEF 3E 01                13766 	ld	a, #0x01
      003CF1 F5                   13767 	push	af
      003CF2 33                   13768 	inc	sp
      003CF3 CDr00r00             13769 	call	_set_bkg_tiles
      003CF6 E8 06                13770 	add	sp, #6
                                  13771 ;src/main.c:1432: for (uint8_t i=0; i < 18; ++i) {
      003CF8 04                   13772 	inc	b
      003CF9 18 D2                13773 	jr	00105$
      003CFB                      13774 00101$:
                                  13775 ;src/main.c:1436: for (uint8_t j=0; j < 20; ++j) {
      003CFB 0E 00                13776 	ld	c, #0x00
      003CFD                      13777 00108$:
      003CFD 79                   13778 	ld	a, c
      003CFE D6 14                13779 	sub	a, #0x14
      003D00 30 10                13780 	jr	NC, 00102$
                                  13781 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003D02 11r00r00             13782 	ld	de, #_shadow_OAM+0
      003D05 69                   13783 	ld	l, c
                                  13784 ;	spillPairReg hl
                                  13785 ;	spillPairReg hl
      003D06 26 00                13786 	ld	h, #0x00
                                  13787 ;	spillPairReg hl
                                  13788 ;	spillPairReg hl
      003D08 29                   13789 	add	hl, hl
      003D09 29                   13790 	add	hl, hl
      003D0A 19                   13791 	add	hl, de
      003D0B 23                   13792 	inc	hl
      003D0C 23                   13793 	inc	hl
      003D0D 36 7F                13794 	ld	(hl), #0x7f
                                  13795 ;src/main.c:1436: for (uint8_t j=0; j < 20; ++j) {
      003D0F 0C                   13796 	inc	c
      003D10 18 EB                13797 	jr	00108$
      003D12                      13798 00102$:
                                  13799 ;src/main.c:1442: SHOW_WIN;
      003D12 F0r00                13800 	ldh	a, (_LCDC_REG + 0)
      003D14 F6 20                13801 	or	a, #0x20
      003D16 E0r00                13802 	ldh	(_LCDC_REG + 0), a
                                  13803 ;src/main.c:1443: SHOW_BKG;
      003D18 F0r00                13804 	ldh	a, (_LCDC_REG + 0)
      003D1A F6 01                13805 	or	a, #0x01
      003D1C E0r00                13806 	ldh	(_LCDC_REG + 0), a
                                  13807 ;src/main.c:1445: }
      003D1E C9                   13808 	ret
                                  13809 ;src/main.c:1447: uint8_t showLevelSelection() {
                                  13810 ;	---------------------------------
                                  13811 ; Function showLevelSelection
                                  13812 ; ---------------------------------
      003D1F                      13813 _showLevelSelection::
                                  13814 ;src/main.c:1448: HIDE_WIN;
      003D1F F0r00                13815 	ldh	a, (_LCDC_REG + 0)
      003D21 E6 DF                13816 	and	a, #0xdf
      003D23 E0r00                13817 	ldh	(_LCDC_REG + 0), a
                                  13818 ;src/main.c:1449: HIDE_SPRITES;
      003D25 F0r00                13819 	ldh	a, (_LCDC_REG + 0)
      003D27 E6 FD                13820 	and	a, #0xfd
      003D29 E0r00                13821 	ldh	(_LCDC_REG + 0), a
                                  13822 ;src/main.c:1450: clearScreen();
      003D2B CDrBFr3C             13823 	call	_clearScreen
                                  13824 ;src/main.c:1451: initFont();
      003D2E CDr99r3B             13825 	call	_initFont
                                  13826 ;src/main.c:1452: set_win_tiles(5,3, 12, 1, selectLevelLabel);
      003D31 11r58r00             13827 	ld	de, #_selectLevelLabel
      003D34 D5                   13828 	push	de
      003D35 21 0C 01             13829 	ld	hl, #0x10c
      003D38 E5                   13830 	push	hl
      003D39 21 05 03             13831 	ld	hl, #0x305
      003D3C E5                   13832 	push	hl
      003D3D CDr00r00             13833 	call	_set_win_tiles
      003D40 E8 06                13834 	add	sp, #6
                                  13835 ;src/main.c:1454: set_win_tiles(5,6, 4, 1, voidLabel);
      003D42 11r64r00             13836 	ld	de, #_voidLabel
      003D45 D5                   13837 	push	de
      003D46 21 04 01             13838 	ld	hl, #0x104
      003D49 E5                   13839 	push	hl
      003D4A 21 05 06             13840 	ld	hl, #0x605
      003D4D E5                   13841 	push	hl
      003D4E CDr00r00             13842 	call	_set_win_tiles
      003D51 E8 06                13843 	add	sp, #6
                                  13844 ;src/main.c:1455: set_win_tiles(5,7, 11, 1, asteroids1Label);
      003D53 11r68r00             13845 	ld	de, #_asteroids1Label
      003D56 D5                   13846 	push	de
      003D57 21 0B 01             13847 	ld	hl, #0x10b
      003D5A E5                   13848 	push	hl
      003D5B 21 05 07             13849 	ld	hl, #0x705
      003D5E E5                   13850 	push	hl
      003D5F CDr00r00             13851 	call	_set_win_tiles
      003D62 E8 06                13852 	add	sp, #6
                                  13853 ;src/main.c:1456: set_win_tiles(5,8, 11, 1, asteroids2Label);
      003D64 11r73r00             13854 	ld	de, #_asteroids2Label
      003D67 D5                   13855 	push	de
      003D68 21 0B 01             13856 	ld	hl, #0x10b
      003D6B E5                   13857 	push	hl
      003D6C 21 05 08             13858 	ld	hl, #0x805
      003D6F E5                   13859 	push	hl
      003D70 CDr00r00             13860 	call	_set_win_tiles
      003D73 E8 06                13861 	add	sp, #6
                                  13862 ;src/main.c:1457: set_win_tiles(5,9, 8, 1, marshabLabel);
      003D75 11r7Er00             13863 	ld	de, #_marshabLabel
      003D78 D5                   13864 	push	de
      003D79 21 08 01             13865 	ld	hl, #0x108
      003D7C E5                   13866 	push	hl
      003D7D 21 05 09             13867 	ld	hl, #0x905
      003D80 E5                   13868 	push	hl
      003D81 CDr00r00             13869 	call	_set_win_tiles
      003D84 E8 06                13870 	add	sp, #6
                                  13871 ;src/main.c:1458: set_win_tiles(5,10, 5, 1, bonusLabel);
      003D86 11r86r00             13872 	ld	de, #_bonusLabel
      003D89 D5                   13873 	push	de
      003D8A 21 05 01             13874 	ld	hl, #0x105
      003D8D E5                   13875 	push	hl
      003D8E 21 05 0A             13876 	ld	hl, #0xa05
      003D91 E5                   13877 	push	hl
      003D92 CDr00r00             13878 	call	_set_win_tiles
      003D95 E8 06                13879 	add	sp, #6
                                  13880 ;src/main.c:1460: set_sprite_data(0, 1, MenuPicker);
      003D97 11r89r10             13881 	ld	de, #_MenuPicker
      003D9A D5                   13882 	push	de
      003D9B AF                   13883 	xor	a, a
      003D9C 3C                   13884 	inc	a
      003D9D F5                   13885 	push	af
      003D9E CDr00r00             13886 	call	_set_sprite_data
      003DA1 E8 04                13887 	add	sp, #4
                                  13888 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003DA3 21r02r00             13889 	ld	hl, #(_shadow_OAM + 2)
      003DA6 36 00                13890 	ld	(hl), #0x00
                                  13891 ;src/main.c:1463: SHOW_WIN;
      003DA8 F0r00                13892 	ldh	a, (_LCDC_REG + 0)
      003DAA F6 20                13893 	or	a, #0x20
      003DAC E0r00                13894 	ldh	(_LCDC_REG + 0), a
                                  13895 ;src/main.c:1464: SHOW_SPRITES;
      003DAE F0r00                13896 	ldh	a, (_LCDC_REG + 0)
      003DB0 F6 02                13897 	or	a, #0x02
      003DB2 E0r00                13898 	ldh	(_LCDC_REG + 0), a
                                  13899 ;src/main.c:1467: int8_t menuitem = 0;
      003DB4 0E 00                13900 	ld	c, #0x00
                                  13901 ;src/main.c:1468: while(1) {
      003DB6                      13902 00112$:
                                  13903 ;src/main.c:1469: prevJoyData = joydata;
      003DB6 FAr1Cr01             13904 	ld	a, (#_joydata)
      003DB9 EAr1Dr01             13905 	ld	(#_prevJoyData),a
                                  13906 ;src/main.c:1470: joydata = joypad();
      003DBC CDr00r00             13907 	call	_joypad
      003DBF 21r1Cr01             13908 	ld	hl, #_joydata
      003DC2 73                   13909 	ld	(hl), e
                                  13910 ;src/main.c:1469: prevJoyData = joydata;
      003DC3 7E                   13911 	ld	a, (hl)
                                  13912 ;src/main.c:1472: if (joydata & J_A) {
      003DC4 CB 67                13913 	bit	4, a
      003DC6 28 06                13914 	jr	Z, 00102$
                                  13915 ;src/main.c:1473: waitpadup();
      003DC8 CDr00r00             13916 	call	_waitpadup
                                  13917 ;src/main.c:1474: return 1;
      003DCB 1E 01                13918 	ld	e, #0x01
      003DCD C9                   13919 	ret
      003DCE                      13920 00102$:
                                  13921 ;src/main.c:1476: if (joydata & J_B) {
      003DCE CB 6F                13922 	bit	5, a
      003DD0 28 06                13923 	jr	Z, 00104$
                                  13924 ;src/main.c:1477: waitpadup();
      003DD2 CDr00r00             13925 	call	_waitpadup
                                  13926 ;src/main.c:1478: return 0;
      003DD5 1E 00                13927 	ld	e, #0x00
      003DD7 C9                   13928 	ret
      003DD8                      13929 00104$:
                                  13930 ;src/main.c:1481: if (!(prevJoyData & J_DOWN) && (joydata & J_DOWN)) {
      003DD8 21r1Dr01             13931 	ld	hl, #_prevJoyData
      003DDB 46                   13932 	ld	b, (hl)
      003DDC CB 58                13933 	bit	3, b
      003DDE 20 05                13934 	jr	NZ, 00106$
      003DE0 CB 5F                13935 	bit	3, a
      003DE2 28 01                13936 	jr	Z, 00106$
                                  13937 ;src/main.c:1482: ++menuitem;
      003DE4 0C                   13938 	inc	c
      003DE5                      13939 00106$:
                                  13940 ;src/main.c:1484: if (!(prevJoyData & J_UP) && (joydata & J_UP)) {
      003DE5 CB 50                13941 	bit	2, b
      003DE7 20 05                13942 	jr	NZ, 00109$
      003DE9 CB 57                13943 	bit	2, a
      003DEB 28 01                13944 	jr	Z, 00109$
                                  13945 ;src/main.c:1485: --menuitem;
      003DED 0D                   13946 	dec	c
      003DEE                      13947 00109$:
                                  13948 ;src/main.c:357: return (value < min) ? min : (value > max) ? max : value;
      003DEE CB 79                13949 	bit	7, c
      003DF0 28 03                13950 	jr	Z, 00119$
      003DF2 AF                   13951 	xor	a, a
      003DF3 18 1C                13952 	jr	00120$
      003DF5                      13953 00119$:
      003DF5 59                   13954 	ld	e, c
      003DF6 3E 04                13955 	ld	a,#0x04
      003DF8 57                   13956 	ld	d,a
      003DF9 91                   13957 	sub	a, c
      003DFA CB 7B                13958 	bit	7, e
      003DFC 28 07                13959 	jr	Z, 00176$
      003DFE CB 7A                13960 	bit	7, d
      003E00 20 08                13961 	jr	NZ, 00177$
      003E02 BF                   13962 	cp	a, a
      003E03 18 05                13963 	jr	00177$
      003E05                      13964 00176$:
      003E05 CB 7A                13965 	bit	7, d
      003E07 28 01                13966 	jr	Z, 00177$
      003E09 37                   13967 	scf
      003E0A                      13968 00177$:
      003E0A 30 04                13969 	jr	NC, 00121$
      003E0C 3E 04                13970 	ld	a, #0x04
      003E0E 18 01                13971 	jr	00122$
      003E10                      13972 00121$:
      003E10 79                   13973 	ld	a, c
      003E11                      13974 00122$:
      003E11                      13975 00120$:
                                  13976 ;src/main.c:1487: menuitem = clamp(menuitem, 0, 4);
      003E11 4F                   13977 	ld	c, a
                                  13978 ;src/main.c:1488: move_sprite(0, 31, 64 + (menuitem<<3));
      003E12 87                   13979 	add	a, a
      003E13 87                   13980 	add	a, a
      003E14 87                   13981 	add	a, a
      003E15 C6 40                13982 	add	a, #0x40
                                  13983 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                  13984 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003E17 21r00r00             13985 	ld	hl, #_shadow_OAM
      003E1A 22                   13986 	ld	(hl+), a
      003E1B 36 1F                13987 	ld	(hl), #0x1f
                                  13988 ;src/main.c:1490: wait_vbl_done();
      003E1D CDr00r00             13989 	call	_wait_vbl_done
                                  13990 ;src/main.c:1493: }
      003E20 18 94                13991 	jr	00112$
                                  13992 ;src/main.c:1496: void main(){
                                  13993 ;	---------------------------------
                                  13994 ; Function main
                                  13995 ; ---------------------------------
      003E22                      13996 _main::
      003E22 E8 FC                13997 	add	sp, #-4
                                  13998 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      003E24 F3                   13999 	di
                                  14000 ;src/main.c:1501: showStartScreen();
      003E25 CDrB4r3B             14001 	call	_showStartScreen
                                  14002 ;src/main.c:1502: waitpad(J_START | J_A);
      003E28 3E 90                14003 	ld	a, #0x90
      003E2A F5                   14004 	push	af
      003E2B 33                   14005 	inc	sp
      003E2C CDr00r00             14006 	call	_waitpad
      003E2F 33                   14007 	inc	sp
                                  14008 ;src/main.c:1503: waitpadup();
      003E30 CDr00r00             14009 	call	_waitpadup
                                  14010 ;src/main.c:1508: NR52_REG = 0x80; // sound on 
      003E33 3E 80                14011 	ld	a, #0x80
      003E35 E0r00                14012 	ldh	(_NR52_REG + 0), a
                                  14013 ;src/main.c:1509: NR50_REG = 0x77; // volume
      003E37 3E 77                14014 	ld	a, #0x77
      003E39 E0r00                14015 	ldh	(_NR50_REG + 0), a
                                  14016 ;src/main.c:1510: NR51_REG = 0xFF; // all channels
      003E3B 3E FF                14017 	ld	a, #0xff
      003E3D E0r00                14018 	ldh	(_NR51_REG + 0), a
                                  14019 ;src/main.c:1513: uint16_t seed = LY_REG;
      003E3F F0r00                14020 	ldh	a, (_LY_REG + 0)
      003E41 4F                   14021 	ld	c, a
      003E42 06 00                14022 	ld	b, #0x00
                                  14023 ;src/main.c:1514: seed |= (uint16_t)DIV_REG << 8;
      003E44 F0r00                14024 	ldh	a, (_DIV_REG + 0)
      003E46 5F                   14025 	ld	e, a
      003E47 AF                   14026 	xor	a, a
      003E48 B1                   14027 	or	a, c
      003E49 4F                   14028 	ld	c, a
      003E4A 7B                   14029 	ld	a, e
      003E4B B0                   14030 	or	a, b
      003E4C 47                   14031 	ld	b, a
                                  14032 ;src/main.c:1515: initrand(seed);
      003E4D C5                   14033 	push	bc
      003E4E CDr00r00             14034 	call	_initrand
      003E51 33                   14035 	inc	sp
      003E52 33                   14036 	inc	sp
                                  14037 ;src/main.c:1520: while(1) {
      003E53                      14038 00146$:
                                  14039 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      003E53 F3                   14040 	di
                                  14041 ;src/main.c:1525: set_interrupts(1);   
      003E54 3E 01                14042 	ld	a, #0x01
      003E56 F5                   14043 	push	af
      003E57 33                   14044 	inc	sp
      003E58 CDr00r00             14045 	call	_set_interrupts
      003E5B 33                   14046 	inc	sp
                                  14047 ;src/main.c:1527: clearScreen();
      003E5C CDrBFr3C             14048 	call	_clearScreen
                                  14049 ;src/main.c:1529: uint8_t result = showMenu();
      003E5F CDrF4r3B             14050 	call	_showMenu
      003E62 7B                   14051 	ld	a, e
      003E63 47                   14052 	ld	b, a
                                  14053 ;src/main.c:1532: if (result == 0) {
      003E64 B7                   14054 	or	a, a
      003E65 C2r99r41             14055 	jp	NZ, 00143$
                                  14056 ;src/main.c:1534: uint8_t map = showLevelSelection();
      003E68 CDr1Fr3D             14057 	call	_showLevelSelection
      003E6B 7B                   14058 	ld	a, e
                                  14059 ;src/main.c:1535: if (map == 0) {
      003E6C B7                   14060 	or	a, a
      003E6D 28 E4                14061 	jr	Z, 00146$
                                  14062 ;src/main.c:1540: initEnemyOptions();
      003E6F CDr5Er38             14063 	call	_initEnemyOptions
                                  14064 ;src/main.c:1541: initGame();
      003E72 CDrCBr38             14065 	call	_initGame
                                  14066 ;src/main.c:1542: initEnemies(1);
      003E75 3E 01                14067 	ld	a, #0x01
      003E77 F5                   14068 	push	af
      003E78 33                   14069 	inc	sp
      003E79 CDr19r15             14070 	call	_initEnemies
      003E7C 33                   14071 	inc	sp
                                  14072 ;src/main.c:1543: initProjectiles();
      003E7D CDrB4r38             14073 	call	_initProjectiles
                                  14074 ;src/main.c:1546: while(hull > 0) {
      003E80                      14075 00121$:
      003E80 FArF5r00             14076 	ld	a, (#_hull)
      003E83 B7                   14077 	or	a, a
      003E84 CAr59r3F             14078 	jp	Z, 00186$
                                  14079 ;src/main.c:1547: SHOW_SPRITES;
      003E87 F0r00                14080 	ldh	a, (_LCDC_REG + 0)
      003E89 F6 02                14081 	or	a, #0x02
      003E8B E0r00                14082 	ldh	(_LCDC_REG + 0), a
                                  14083 ;src/main.c:1549: joydata = joypad(); // query for button states
      003E8D CDr00r00             14084 	call	_joypad
      003E90 21r1Cr01             14085 	ld	hl, #_joydata
      003E93 73                   14086 	ld	(hl), e
                                  14087 ;src/main.c:1551: updateDirection(); // set player direction
      003E94 CDr91r12             14088 	call	_updateDirection
                                  14089 ;src/main.c:1554: move(); 
      003E97 CDr89r20             14090 	call	_move
                                  14091 ;src/main.c:1556: moveProjectiles();
      003E9A CDrC2r32             14092 	call	_moveProjectiles
                                  14093 ;src/main.c:1557: tickPickups();
      003E9D CDrA5r34             14094 	call	_tickPickups
                                  14095 ;src/main.c:1558: tickEx();
      003EA0 CDr7Dr36             14096 	call	_tickEx
                                  14097 ;src/main.c:1562: updateEnemyPositions();
      003EA3 CDr68r17             14098 	call	_updateEnemyPositions
                                  14099 ;src/main.c:1563: checkCollision(); 
      003EA6 CDr1Er28             14100 	call	_checkCollision
                                  14101 ;src/main.c:979: if (shield < maxShield) {
      003EA9 21rC2r10             14102 	ld	hl, #_maxShield
      003EAC 4E                   14103 	ld	c, (hl)
      003EAD 59                   14104 	ld	e, c
      003EAE 21rF6r00             14105 	ld	hl, #_shield
      003EB1 56                   14106 	ld	d, (hl)
      003EB2 7E                   14107 	ld	a, (hl)
      003EB3 91                   14108 	sub	a, c
      003EB4 CB 7B                14109 	bit	7, e
      003EB6 28 07                14110 	jr	Z, 00341$
      003EB8 CB 7A                14111 	bit	7, d
      003EBA 20 08                14112 	jr	NZ, 00342$
      003EBC BF                   14113 	cp	a, a
      003EBD 18 05                14114 	jr	00342$
      003EBF                      14115 00341$:
      003EBF CB 7A                14116 	bit	7, d
      003EC1 28 01                14117 	jr	Z, 00342$
      003EC3 37                   14118 	scf
      003EC4                      14119 00342$:
      003EC4 30 04                14120 	jr	NC, 00151$
                                  14121 ;src/main.c:980: shield += 1;
      003EC6 21rF6r00             14122 	ld	hl, #_shield
      003EC9 34                   14123 	inc	(hl)
      003ECA                      14124 00151$:
                                  14125 ;src/main.c:982: setHealthBar(0, hull);
      003ECA FArF5r00             14126 	ld	a, (#_hull)
      003ECD 67                   14127 	ld	h, a
      003ECE 2E 00                14128 	ld	l, #0x00
      003ED0 E5                   14129 	push	hl
      003ED1 CDrC9r10             14130 	call	_setHealthBar
      003ED4 E1                   14131 	pop	hl
                                  14132 ;src/main.c:983: setHealthBar(1, shield);
      003ED5 FArF6r00             14133 	ld	a, (#_shield)
      003ED8 67                   14134 	ld	h, a
      003ED9 2E 01                14135 	ld	l, #0x01
      003EDB E5                   14136 	push	hl
      003EDC CDrC9r10             14137 	call	_setHealthBar
      003EDF E1                   14138 	pop	hl
                                  14139 ;src/main.c:1568: if (joydata & J_B && fireCooldown == 0) {
      003EE0 FAr1Cr01             14140 	ld	a, (#_joydata)
      003EE3 CB 6F                14141 	bit	5, a
      003EE5 28 09                14142 	jr	Z, 00102$
      003EE7 FAr0Dr01             14143 	ld	a, (#_fireCooldown)
      003EEA B7                   14144 	or	a, a
      003EEB 20 03                14145 	jr	NZ, 00102$
                                  14146 ;src/main.c:1569: fire();
      003EED CDr14r2D             14147 	call	_fire
      003EF0                      14148 00102$:
                                  14149 ;src/main.c:1571: if (fireCooldown > 0) {
      003EF0 21r0Dr01             14150 	ld	hl, #_fireCooldown
      003EF3 7E                   14151 	ld	a, (hl)
      003EF4 B7                   14152 	or	a, a
      003EF5 28 01                14153 	jr	Z, 00105$
                                  14154 ;src/main.c:1572: --fireCooldown;
      003EF7 35                   14155 	dec	(hl)
      003EF8                      14156 00105$:
                                  14157 ;src/main.c:1575: if (joydata & J_SELECT && switchDelay == 0) {
      003EF8 FAr1Cr01             14158 	ld	a, (#_joydata)
      003EFB CB 77                14159 	bit	6, a
      003EFD 28 24                14160 	jr	Z, 00112$
      003EFF FAr2Ar01             14161 	ld	a, (#_switchDelay)
      003F02 B7                   14162 	or	a, a
      003F03 20 1E                14163 	jr	NZ, 00112$
                                  14164 ;src/main.c:1576: if (currentGun == 0) {
      003F05 21r24r01             14165 	ld	hl, #_currentGun
      003F08 7E                   14166 	ld	a, (hl)
      003F09 B7                   14167 	or	a, a
      003F0A 20 04                14168 	jr	NZ, 00109$
                                  14169 ;src/main.c:1577: currentGun = 1;
      003F0C 36 01                14170 	ld	(hl), #0x01
      003F0E 18 0B                14171 	jr	00110$
      003F10                      14172 00109$:
                                  14173 ;src/main.c:1579: else if (currentGun == 1) {
      003F10 FAr24r01             14174 	ld	a, (#_currentGun)
      003F13 3D                   14175 	dec	a
      003F14 20 05                14176 	jr	NZ, 00110$
                                  14177 ;src/main.c:1580: currentGun = 0;
      003F16 21r24r01             14178 	ld	hl, #_currentGun
      003F19 36 00                14179 	ld	(hl), #0x00
      003F1B                      14180 00110$:
                                  14181 ;src/main.c:1582: setGunIcon();
      003F1B CDrE1r2C             14182 	call	_setGunIcon
                                  14183 ;src/main.c:1583: switchDelay = 30;
      003F1E 21r2Ar01             14184 	ld	hl, #_switchDelay
      003F21 36 1E                14185 	ld	(hl), #0x1e
      003F23                      14186 00112$:
                                  14187 ;src/main.c:1585: if (switchDelay != 0) {
      003F23 21r2Ar01             14188 	ld	hl, #_switchDelay
      003F26 7E                   14189 	ld	a, (hl)
      003F27 B7                   14190 	or	a, a
      003F28 28 01                14191 	jr	Z, 00115$
                                  14192 ;src/main.c:1586: switchDelay--;
      003F2A 35                   14193 	dec	(hl)
      003F2B                      14194 00115$:
                                  14195 ;src/main.c:1589: if (auxTick == 0) {
      003F2B FAr3Cr01             14196 	ld	a, (#_auxTick)
      003F2E B7                   14197 	or	a, a
      003F2F 20 08                14198 	jr	NZ, 00117$
                                  14199 ;src/main.c:1590: auxTick = AUXTICKFREQUENCY;
      003F31 FArC8r10             14200 	ld	a, (#_AUXTICKFREQUENCY)
      003F34 EAr3Cr01             14201 	ld	(#_auxTick),a
      003F37 18 04                14202 	jr	00118$
      003F39                      14203 00117$:
                                  14204 ;src/main.c:1593: auxTick--;
      003F39 21r3Cr01             14205 	ld	hl, #_auxTick
      003F3C 35                   14206 	dec	(hl)
      003F3D                      14207 00118$:
                                  14208 ;src/main.c:1598: if (hull > 100) {
      003F3D 3E 64                14209 	ld	a, #0x64
      003F3F 21rF5r00             14210 	ld	hl, #_hull
      003F42 96                   14211 	sub	a, (hl)
      003F43 30 02                14212 	jr	NC, 00120$
                                  14213 ;src/main.c:1599: hull = 0;
      003F45 36 00                14214 	ld	(hl), #0x00
      003F47                      14215 00120$:
                                  14216 ;src/main.c:1601: SHOW_SPRITES;
      003F47 F0r00                14217 	ldh	a, (_LCDC_REG + 0)
      003F49 F6 02                14218 	or	a, #0x02
      003F4B E0r00                14219 	ldh	(_LCDC_REG + 0), a
                                  14220 ;src/main.c:1603: SHOW_WIN;	
      003F4D F0r00                14221 	ldh	a, (_LCDC_REG + 0)
      003F4F F6 20                14222 	or	a, #0x20
      003F51 E0r00                14223 	ldh	(_LCDC_REG + 0), a
                                  14224 ;src/main.c:1604: wait_vbl_done(); // Idle until next frame
      003F53 CDr00r00             14225 	call	_wait_vbl_done
      003F56 C3r80r3E             14226 	jp	00121$
                                  14227 ;src/main.c:1609: for (uint8_t i=0; i<exCount; ++i) {
      003F59                      14228 00186$:
      003F59 F8 03                14229 	ldhl	sp,	#3
      003F5B 36 00                14230 	ld	(hl), #0x00
      003F5D                      14231 00159$:
      003F5D 21rC5r10             14232 	ld	hl, #_exCount
      003F60 4E                   14233 	ld	c, (hl)
      003F61 F8 03                14234 	ldhl	sp,	#3
      003F63 7E                   14235 	ld	a, (hl)
      003F64 91                   14236 	sub	a, c
      003F65 30 48                14237 	jr	NC, 00124$
                                  14238 ;src/main.c:1610: explosions[i].x = 200;
      003F67 4E                   14239 	ld	c, (hl)
      003F68 06 00                14240 	ld	b, #0x00
      003F6A 69                   14241 	ld	l, c
      003F6B 60                   14242 	ld	h, b
      003F6C 29                   14243 	add	hl, hl
      003F6D 09                   14244 	add	hl, bc
      003F6E 29                   14245 	add	hl, hl
      003F6F 01r02r01             14246 	ld	bc,#_explosions
      003F72 09                   14247 	add	hl,bc
                                  14248 ;	spillPairReg hl
                                  14249 ;	spillPairReg hl
      003F73 4D                   14250 	ld	c,l
      003F74 44                   14251 	ld	b,h
                                  14252 ;	spillPairReg hl
                                  14253 ;	spillPairReg hl
      003F75 23                   14254 	inc	hl
      003F76 36 C8                14255 	ld	(hl), #0xc8
                                  14256 ;src/main.c:1611: explosions[i].y = 200;
      003F78 69                   14257 	ld	l, c
                                  14258 ;	spillPairReg hl
                                  14259 ;	spillPairReg hl
      003F79 60                   14260 	ld	h, b
                                  14261 ;	spillPairReg hl
                                  14262 ;	spillPairReg hl
      003F7A 23                   14263 	inc	hl
      003F7B 23                   14264 	inc	hl
      003F7C 36 C8                14265 	ld	(hl), #0xc8
                                  14266 ;src/main.c:1613: explosions[i].tile = exTiles[0];
      003F7E 21 05 00             14267 	ld	hl, #0x0005
      003F81 09                   14268 	add	hl, bc
      003F82 E5                   14269 	push	hl
      003F83 7D                   14270 	ld	a, l
      003F84 F8 03                14271 	ldhl	sp,	#3
      003F86 77                   14272 	ld	(hl), a
      003F87 E1                   14273 	pop	hl
      003F88 7C                   14274 	ld	a, h
      003F89 F8 02                14275 	ldhl	sp,	#2
      003F8B 32                   14276 	ld	(hl-), a
      003F8C FAr39r01             14277 	ld	a, (#_exTiles + 0)
      003F8F F5                   14278 	push	af
      003F90 2A                   14279 	ld	a,	(hl+)
      003F91 66                   14280 	ld	h, (hl)
      003F92 6F                   14281 	ld	l, a
      003F93 F1                   14282 	pop	af
      003F94 77                   14283 	ld	(hl), a
                                  14284 ;src/main.c:1614: explosions[i].frameCounter = 0;
      003F95 21 04 00             14285 	ld	hl, #0x0004
      003F98 09                   14286 	add	hl, bc
      003F99 36 00                14287 	ld	(hl), #0x00
                                  14288 ;src/main.c:1615: explosions[i].frame = 2-i;
      003F9B 59                   14289 	ld	e, c
      003F9C 50                   14290 	ld	d, b
      003F9D 13                   14291 	inc	de
      003F9E 13                   14292 	inc	de
      003F9F 13                   14293 	inc	de
      003FA0 F8 03                14294 	ldhl	sp,	#3
      003FA2 6E                   14295 	ld	l, (hl)
                                  14296 ;	spillPairReg hl
                                  14297 ;	spillPairReg hl
      003FA3 3E 02                14298 	ld	a, #0x02
      003FA5 95                   14299 	sub	a, l
      003FA6 12                   14300 	ld	(de), a
                                  14301 ;src/main.c:1616: explosions[i].visible = 1;
      003FA7 3E 01                14302 	ld	a, #0x01
      003FA9 02                   14303 	ld	(bc), a
                                  14304 ;src/main.c:1609: for (uint8_t i=0; i<exCount; ++i) {
      003FAA F8 03                14305 	ldhl	sp,	#3
      003FAC 34                   14306 	inc	(hl)
      003FAD 18 AE                14307 	jr	00159$
      003FAF                      14308 00124$:
                                  14309 ;src/main.c:1618: xOverflow = 0;
      003FAF AF                   14310 	xor	a, a
      003FB0 21r1Er01             14311 	ld	hl, #_xOverflow
      003FB3 22                   14312 	ld	(hl+), a
      003FB4 77                   14313 	ld	(hl), a
                                  14314 ;src/main.c:1619: yOverflow = 0;
      003FB5 AF                   14315 	xor	a, a
      003FB6 21r20r01             14316 	ld	hl, #_yOverflow
      003FB9 22                   14317 	ld	(hl+), a
      003FBA 77                   14318 	ld	(hl), a
                                  14319 ;src/main.c:1621: while(endExCount < 12) {
      003FBB F8 03                14320 	ldhl	sp,	#3
      003FBD 36 00                14321 	ld	(hl), #0x00
      003FBF                      14322 00132$:
      003FBF F8 03                14323 	ldhl	sp,	#3
      003FC1 7E                   14324 	ld	a, (hl)
      003FC2 D6 0C                14325 	sub	a, #0x0c
      003FC4 D2r36r41             14326 	jp	NC, 00134$
                                  14327 ;src/main.c:1623: SHOW_SPRITES;
      003FC7 F0r00                14328 	ldh	a, (_LCDC_REG + 0)
      003FC9 F6 02                14329 	or	a, #0x02
      003FCB E0r00                14330 	ldh	(_LCDC_REG + 0), a
                                  14331 ;src/main.c:1624: tickEx();
      003FCD CDr7Dr36             14332 	call	_tickEx
                                  14333 ;src/main.c:1625: if (auxTick == 0) {
      003FD0 FAr3Cr01             14334 	ld	a, (#_auxTick)
      003FD3 B7                   14335 	or	a, a
      003FD4 20 08                14336 	jr	NZ, 00126$
                                  14337 ;src/main.c:1626: auxTick = AUXTICKFREQUENCY;
      003FD6 FArC8r10             14338 	ld	a, (#_AUXTICKFREQUENCY)
      003FD9 EAr3Cr01             14339 	ld	(#_auxTick),a
      003FDC 18 04                14340 	jr	00127$
      003FDE                      14341 00126$:
                                  14342 ;src/main.c:1629: auxTick--;
      003FDE 21r3Cr01             14343 	ld	hl, #_auxTick
      003FE1 35                   14344 	dec	(hl)
      003FE2                      14345 00127$:
                                  14346 ;src/main.c:1631: if (!explosions[oldestEx].visible) {
      003FE2 21r38r01             14347 	ld	hl, #_oldestEx
      003FE5 4E                   14348 	ld	c, (hl)
      003FE6 06 00                14349 	ld	b, #0x00
      003FE8 69                   14350 	ld	l, c
      003FE9 60                   14351 	ld	h, b
      003FEA 29                   14352 	add	hl, hl
      003FEB 09                   14353 	add	hl, bc
      003FEC 29                   14354 	add	hl, hl
      003FED 01r02r01             14355 	ld	bc,#_explosions
      003FF0 09                   14356 	add	hl,bc
      003FF1 E5                   14357 	push	hl
      003FF2 7D                   14358 	ld	a, l
      003FF3 F8 03                14359 	ldhl	sp,	#3
      003FF5 77                   14360 	ld	(hl), a
      003FF6 E1                   14361 	pop	hl
      003FF7 7C                   14362 	ld	a, h
      003FF8 F8 02                14363 	ldhl	sp,	#2
      003FFA 32                   14364 	ld	(hl-), a
      003FFB 2A                   14365 	ld	a, (hl+)
      003FFC 5F                   14366 	ld	e, a
      003FFD 56                   14367 	ld	d, (hl)
      003FFE 1A                   14368 	ld	a, (de)
      003FFF B7                   14369 	or	a, a
      004000 C2r2Ar41             14370 	jp	NZ, 00131$
                                  14371 ;src/main.c:1632: explosions[oldestEx].visible = 1;
      004003 3A                   14372 	ld	a, (hl-)
      004004 6E                   14373 	ld	l, (hl)
      004005 67                   14374 	ld	h, a
      004006 36 01                14375 	ld	(hl), #0x01
                                  14376 ;src/main.c:1635: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      004008 CDr00r00             14377 	call	_rand
      00400B 7B                   14378 	ld	a, e
      00400C 21rC7r10             14379 	ld	hl, #_exTileCount
      00400F 46                   14380 	ld	b, (hl)
      004010 C5                   14381 	push	bc
      004011 33                   14382 	inc	sp
      004012 F5                   14383 	push	af
      004013 33                   14384 	inc	sp
      004014 CDr00r00             14385 	call	__moduchar
      004017 E1                   14386 	pop	hl
      004018 F8 00                14387 	ldhl	sp,	#0
      00401A 73                   14388 	ld	(hl), e
                                  14389 ;src/main.c:1636: uint8_t xOff = ((uint8_t)rand()) % 32;
      00401B CDr00r00             14390 	call	_rand
      00401E 7B                   14391 	ld	a, e
      00401F E6 1F                14392 	and	a, #0x1f
      004021 F8 01                14393 	ldhl	sp,	#1
      004023 77                   14394 	ld	(hl), a
                                  14395 ;src/main.c:1637: uint8_t yOff = ((uint8_t)rand()) % 32;
      004024 CDr00r00             14396 	call	_rand
      004027 7B                   14397 	ld	a, e
      004028 E6 1F                14398 	and	a, #0x1f
      00402A F8 02                14399 	ldhl	sp,	#2
      00402C 77                   14400 	ld	(hl), a
                                  14401 ;src/main.c:1639: explosions[oldestEx].x = playerDrawX -16 + xOff;
      00402D 21r38r01             14402 	ld	hl, #_oldestEx
      004030 4E                   14403 	ld	c, (hl)
      004031 06 00                14404 	ld	b, #0x00
      004033 69                   14405 	ld	l, c
      004034 60                   14406 	ld	h, b
      004035 29                   14407 	add	hl, hl
      004036 09                   14408 	add	hl, bc
      004037 29                   14409 	add	hl, hl
      004038 01r02r01             14410 	ld	bc,#_explosions
      00403B 09                   14411 	add	hl,bc
      00403C 23                   14412 	inc	hl
      00403D 4D                   14413 	ld	c, l
      00403E 44                   14414 	ld	b, h
      00403F FAr16r01             14415 	ld	a, (#_playerDrawX)
      004042 C6 F0                14416 	add	a, #0xf0
      004044 F8 01                14417 	ldhl	sp,	#1
      004046 5E                   14418 	ld	e, (hl)
      004047 83                   14419 	add	a, e
      004048 02                   14420 	ld	(bc), a
                                  14421 ;src/main.c:1640: explosions[oldestEx].y = playerDrawY -16 + yOff;
      004049 21r38r01             14422 	ld	hl, #_oldestEx
      00404C 4E                   14423 	ld	c, (hl)
      00404D 06 00                14424 	ld	b, #0x00
      00404F 69                   14425 	ld	l, c
      004050 60                   14426 	ld	h, b
      004051 29                   14427 	add	hl, hl
      004052 09                   14428 	add	hl, bc
      004053 29                   14429 	add	hl, hl
      004054 01r02r01             14430 	ld	bc,#_explosions
      004057 09                   14431 	add	hl,bc
      004058 23                   14432 	inc	hl
      004059 23                   14433 	inc	hl
      00405A 4D                   14434 	ld	c, l
      00405B 44                   14435 	ld	b, h
      00405C FAr17r01             14436 	ld	a, (#_playerDrawY)
      00405F C6 F0                14437 	add	a, #0xf0
      004061 F8 02                14438 	ldhl	sp,	#2
      004063 5E                   14439 	ld	e, (hl)
      004064 83                   14440 	add	a, e
      004065 02                   14441 	ld	(bc), a
                                  14442 ;src/main.c:1641: explosions[oldestEx].tile = exTiles[tileNum];
      004066 21r38r01             14443 	ld	hl, #_oldestEx
      004069 4E                   14444 	ld	c, (hl)
      00406A 06 00                14445 	ld	b, #0x00
      00406C 69                   14446 	ld	l, c
      00406D 60                   14447 	ld	h, b
      00406E 29                   14448 	add	hl, hl
      00406F 09                   14449 	add	hl, bc
      004070 29                   14450 	add	hl, hl
      004071 01r02r01             14451 	ld	bc,#_explosions
      004074 09                   14452 	add	hl,bc
      004075 23                   14453 	inc	hl
      004076 23                   14454 	inc	hl
      004077 23                   14455 	inc	hl
      004078 23                   14456 	inc	hl
      004079 23                   14457 	inc	hl
      00407A 4D                   14458 	ld	c, l
      00407B 44                   14459 	ld	b, h
      00407C 11r39r01             14460 	ld	de, #_exTiles
      00407F F8 00                14461 	ldhl	sp,	#0
      004081 6E                   14462 	ld	l, (hl)
      004082 26 00                14463 	ld	h, #0x00
      004084 19                   14464 	add	hl, de
      004085 5D                   14465 	ld	e, l
      004086 54                   14466 	ld	d, h
      004087 1A                   14467 	ld	a, (de)
      004088 02                   14468 	ld	(bc), a
                                  14469 ;src/main.c:1642: explosions[oldestEx].frame = 0;
      004089 21r38r01             14470 	ld	hl, #_oldestEx
      00408C 4E                   14471 	ld	c, (hl)
      00408D 06 00                14472 	ld	b, #0x00
      00408F 69                   14473 	ld	l, c
      004090 60                   14474 	ld	h, b
      004091 29                   14475 	add	hl, hl
      004092 09                   14476 	add	hl, bc
      004093 29                   14477 	add	hl, hl
      004094 01r02r01             14478 	ld	bc,#_explosions
      004097 09                   14479 	add	hl,bc
      004098 23                   14480 	inc	hl
      004099 23                   14481 	inc	hl
      00409A 23                   14482 	inc	hl
      00409B 36 00                14483 	ld	(hl), #0x00
                                  14484 ;src/main.c:1643: explosions[oldestEx].frameCounter = 0;
      00409D 21r38r01             14485 	ld	hl, #_oldestEx
      0040A0 4E                   14486 	ld	c, (hl)
      0040A1 06 00                14487 	ld	b, #0x00
      0040A3 69                   14488 	ld	l, c
      0040A4 60                   14489 	ld	h, b
      0040A5 29                   14490 	add	hl, hl
      0040A6 09                   14491 	add	hl, bc
      0040A7 29                   14492 	add	hl, hl
      0040A8 01r02r01             14493 	ld	bc,#_explosions
      0040AB 09                   14494 	add	hl,bc
      0040AC 01 04 00             14495 	ld	bc, #0x0004
      0040AF 09                   14496 	add	hl, bc
      0040B0 36 00                14497 	ld	(hl), #0x00
                                  14498 ;src/main.c:1645: set_sprite_tile(20 + oldestEx+oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      0040B2 21r38r01             14499 	ld	hl, #_oldestEx
      0040B5 4E                   14500 	ld	c, (hl)
      0040B6 06 00                14501 	ld	b, #0x00
      0040B8 69                   14502 	ld	l, c
      0040B9 60                   14503 	ld	h, b
      0040BA 29                   14504 	add	hl, hl
      0040BB 09                   14505 	add	hl, bc
      0040BC 29                   14506 	add	hl, hl
      0040BD 01r02r01             14507 	ld	bc,#_explosions
      0040C0 09                   14508 	add	hl,bc
      0040C1 5D                   14509 	ld	e, l
      0040C2 54                   14510 	ld	d, h
      0040C3 21 05 00             14511 	ld	hl, #0x0005
      0040C6 19                   14512 	add	hl, de
      0040C7 4E                   14513 	ld	c, (hl)
      0040C8 13                   14514 	inc	de
      0040C9 13                   14515 	inc	de
      0040CA 13                   14516 	inc	de
      0040CB 1A                   14517 	ld	a, (de)
      0040CC 87                   14518 	add	a, a
      0040CD 81                   14519 	add	a, c
      0040CE 4F                   14520 	ld	c, a
      0040CF 21r38r01             14521 	ld	hl, #_oldestEx
      0040D2 46                   14522 	ld	b, (hl)
      0040D3 78                   14523 	ld	a, b
      0040D4 C6 14                14524 	add	a, #0x14
      0040D6 80                   14525 	add	a, b
                                  14526 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0040D7 6F                   14527 	ld	l, a
      0040D8 11r00r00             14528 	ld	de, #_shadow_OAM+0
                                  14529 ;	spillPairReg hl
                                  14530 ;	spillPairReg hl
      0040DB 26 00                14531 	ld	h, #0x00
                                  14532 ;	spillPairReg hl
                                  14533 ;	spillPairReg hl
      0040DD 29                   14534 	add	hl, hl
      0040DE 29                   14535 	add	hl, hl
      0040DF 19                   14536 	add	hl, de
      0040E0 23                   14537 	inc	hl
      0040E1 23                   14538 	inc	hl
      0040E2 71                   14539 	ld	(hl), c
                                  14540 ;src/main.c:1646: set_sprite_tile(21 + oldestEx+oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      0040E3 21r38r01             14541 	ld	hl, #_oldestEx
      0040E6 4E                   14542 	ld	c, (hl)
      0040E7 06 00                14543 	ld	b, #0x00
      0040E9 69                   14544 	ld	l, c
      0040EA 60                   14545 	ld	h, b
      0040EB 29                   14546 	add	hl, hl
      0040EC 09                   14547 	add	hl, bc
      0040ED 29                   14548 	add	hl, hl
      0040EE 01r02r01             14549 	ld	bc,#_explosions
      0040F1 09                   14550 	add	hl,bc
      0040F2 5D                   14551 	ld	e, l
      0040F3 54                   14552 	ld	d, h
      0040F4 21 05 00             14553 	ld	hl, #0x0005
      0040F7 19                   14554 	add	hl, de
      0040F8 4E                   14555 	ld	c, (hl)
      0040F9 13                   14556 	inc	de
      0040FA 13                   14557 	inc	de
      0040FB 13                   14558 	inc	de
      0040FC 1A                   14559 	ld	a, (de)
      0040FD 87                   14560 	add	a, a
      0040FE 81                   14561 	add	a, c
      0040FF C6 02                14562 	add	a, #0x02
      004101 4F                   14563 	ld	c, a
      004102 21r38r01             14564 	ld	hl, #_oldestEx
      004105 46                   14565 	ld	b, (hl)
      004106 78                   14566 	ld	a, b
      004107 C6 15                14567 	add	a, #0x15
      004109 80                   14568 	add	a, b
                                  14569 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00410A 6F                   14570 	ld	l, a
      00410B 11r00r00             14571 	ld	de, #_shadow_OAM+0
                                  14572 ;	spillPairReg hl
                                  14573 ;	spillPairReg hl
      00410E 26 00                14574 	ld	h, #0x00
                                  14575 ;	spillPairReg hl
                                  14576 ;	spillPairReg hl
      004110 29                   14577 	add	hl, hl
      004111 29                   14578 	add	hl, hl
      004112 19                   14579 	add	hl, de
      004113 23                   14580 	inc	hl
      004114 23                   14581 	inc	hl
      004115 71                   14582 	ld	(hl), c
                                  14583 ;src/main.c:1648: oldestEx++;
      004116 21r38r01             14584 	ld	hl, #_oldestEx
      004119 34                   14585 	inc	(hl)
                                  14586 ;src/main.c:1649: if (oldestEx >= exCount) {
      00411A 21rC5r10             14587 	ld	hl, #_exCount
      00411D 4E                   14588 	ld	c, (hl)
      00411E 21r38r01             14589 	ld	hl, #_oldestEx
      004121 7E                   14590 	ld	a, (hl)
      004122 91                   14591 	sub	a, c
      004123 38 02                14592 	jr	C, 00129$
                                  14593 ;src/main.c:1650: oldestEx = 0;
      004125 36 00                14594 	ld	(hl), #0x00
      004127                      14595 00129$:
                                  14596 ;src/main.c:1652: endExCount++;
      004127 F8 03                14597 	ldhl	sp,	#3
      004129 34                   14598 	inc	(hl)
      00412A                      14599 00131$:
                                  14600 ;src/main.c:1655: SHOW_WIN;	
      00412A F0r00                14601 	ldh	a, (_LCDC_REG + 0)
      00412C F6 20                14602 	or	a, #0x20
      00412E E0r00                14603 	ldh	(_LCDC_REG + 0), a
                                  14604 ;src/main.c:1657: wait_vbl_done();
      004130 CDr00r00             14605 	call	_wait_vbl_done
      004133 C3rBFr3F             14606 	jp	00132$
      004136                      14607 00134$:
                                  14608 ;src/main.c:1660: for (uint8_t j=0; j<exCount; ++j) {
      004136 0E 00                14609 	ld	c, #0x00
      004138                      14610 00162$:
      004138 21rC5r10             14611 	ld	hl, #_exCount
      00413B 46                   14612 	ld	b, (hl)
      00413C 79                   14613 	ld	a, c
      00413D 90                   14614 	sub	a, b
      00413E 30 28                14615 	jr	NC, 00135$
                                  14616 ;src/main.c:1662: move_sprite(20 +j+j, 200, 200);
      004140 41                   14617 	ld	b, c
      004141 78                   14618 	ld	a, b
      004142 C6 14                14619 	add	a, #0x14
      004144 80                   14620 	add	a, b
                                  14621 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      004145 6F                   14622 	ld	l, a
                                  14623 ;	spillPairReg hl
                                  14624 ;	spillPairReg hl
      004146 26 00                14625 	ld	h, #0x00
                                  14626 ;	spillPairReg hl
                                  14627 ;	spillPairReg hl
      004148 29                   14628 	add	hl, hl
      004149 29                   14629 	add	hl, hl
      00414A 11r00r00             14630 	ld	de, #_shadow_OAM
      00414D 19                   14631 	add	hl, de
                                  14632 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00414E 3E C8                14633 	ld	a, #0xc8
      004150 22                   14634 	ld	(hl+), a
      004151 36 C8                14635 	ld	(hl), #0xc8
                                  14636 ;src/main.c:1663: move_sprite(21 +j+j, 200, 200);
      004153 78                   14637 	ld	a, b
      004154 C6 15                14638 	add	a, #0x15
      004156 80                   14639 	add	a, b
                                  14640 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      004157 6F                   14641 	ld	l, a
      004158 11r00r00             14642 	ld	de, #_shadow_OAM+0
                                  14643 ;	spillPairReg hl
                                  14644 ;	spillPairReg hl
      00415B 26 00                14645 	ld	h, #0x00
                                  14646 ;	spillPairReg hl
                                  14647 ;	spillPairReg hl
      00415D 29                   14648 	add	hl, hl
      00415E 29                   14649 	add	hl, hl
      00415F 19                   14650 	add	hl, de
                                  14651 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      004160 3E C8                14652 	ld	a, #0xc8
      004162 22                   14653 	ld	(hl+), a
      004163 36 C8                14654 	ld	(hl), #0xc8
                                  14655 ;src/main.c:1660: for (uint8_t j=0; j<exCount; ++j) {
      004165 0C                   14656 	inc	c
      004166 18 D0                14657 	jr	00162$
      004168                      14658 00135$:
                                  14659 ;src/main.c:1665: for (uint16_t k=0; k<180; ++k) {
      004168 01 00 00             14660 	ld	bc, #0x0000
      00416B                      14661 00165$:
      00416B 59                   14662 	ld	e, c
      00416C 50                   14663 	ld	d, b
      00416D 7B                   14664 	ld	a, e
      00416E D6 B4                14665 	sub	a, #0xb4
      004170 7A                   14666 	ld	a, d
      004171 DE 00                14667 	sbc	a, #0x00
      004173 30 12                14668 	jr	NC, 00136$
                                  14669 ;src/main.c:1666: SHOW_SPRITES;
      004175 F0r00                14670 	ldh	a, (_LCDC_REG + 0)
      004177 F6 02                14671 	or	a, #0x02
      004179 E0r00                14672 	ldh	(_LCDC_REG + 0), a
                                  14673 ;src/main.c:1667: SHOW_WIN;
      00417B F0r00                14674 	ldh	a, (_LCDC_REG + 0)
      00417D F6 20                14675 	or	a, #0x20
      00417F E0r00                14676 	ldh	(_LCDC_REG + 0), a
                                  14677 ;src/main.c:1668: wait_vbl_done();
      004181 CDr00r00             14678 	call	_wait_vbl_done
                                  14679 ;src/main.c:1665: for (uint16_t k=0; k<180; ++k) {
      004184 03                   14680 	inc	bc
      004185 18 E4                14681 	jr	00165$
      004187                      14682 00136$:
                                  14683 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      004187 F3                   14684 	di
                                  14685 ;src/main.c:1672: showScoreScreen();
      004188 CDrD9r3A             14686 	call	_showScoreScreen
                                  14687 ;src/main.c:1673: waitpad(J_A | J_B | J_DOWN | J_LEFT | J_RIGHT | J_UP | J_SELECT | J_START);
      00418B 3E FF                14688 	ld	a, #0xff
      00418D F5                   14689 	push	af
      00418E 33                   14690 	inc	sp
      00418F CDr00r00             14691 	call	_waitpad
      004192 33                   14692 	inc	sp
                                  14693 ;src/main.c:1674: waitpadup();
      004193 CDr00r00             14694 	call	_waitpadup
      004196 C3r53r3E             14695 	jp	00146$
      004199                      14696 00143$:
                                  14697 ;src/main.c:1679: else if (result == 1) {
      004199 05                   14698 	dec	b
      00419A C2r53r3E             14699 	jp	NZ,00146$
                                  14700 ;src/main.c:1680: showControls();
      00419D CDr69r3B             14701 	call	_showControls
                                  14702 ;src/main.c:1681: waitpad(J_B);
      0041A0 3E 20                14703 	ld	a, #0x20
      0041A2 F5                   14704 	push	af
      0041A3 33                   14705 	inc	sp
      0041A4 CDr00r00             14706 	call	_waitpad
      0041A7 33                   14707 	inc	sp
                                  14708 ;src/main.c:1682: waitpadup();
      0041A8 CDr00r00             14709 	call	_waitpadup
      0041AB C3r53r3E             14710 	jp	00146$
                                  14711 ;src/main.c:1687: }
      0041AE E8 04                14712 	add	sp, #4
      0041B0 C9                   14713 	ret
                                  14714 	.area _CODE
                                  14715 	.area _INITIALIZER
      000000                      14716 __xinit__hullabel:
      000000 12                   14717 	.db #0x12	; 18
      000001 1F                   14718 	.db #0x1f	; 31
      000002 16                   14719 	.db #0x16	; 22
      000003 16                   14720 	.db #0x16	; 22
      000004                      14721 __xinit__shieldlabel:
      000004 1D                   14722 	.db #0x1d	; 29
      000005 12                   14723 	.db #0x12	; 18
      000006 16                   14724 	.db #0x16	; 22
      000007 0E                   14725 	.db #0x0e	; 14
      000008                      14726 __xinit__weaponlabel:
      000008 21                   14727 	.db #0x21	; 33
      000009 0F                   14728 	.db #0x0f	; 15
      00000A 1A                   14729 	.db #0x1a	; 26
      00000B 18                   14730 	.db #0x18	; 24
      00000C                      14731 __xinit__scorelabel:
      00000C 1D                   14732 	.db #0x1d	; 29
      00000D 0D                   14733 	.db #0x0d	; 13
      00000E 1C                   14734 	.db #0x1c	; 28
      00000F 0F                   14735 	.db #0x0f	; 15
      000010                      14736 __xinit__endScoreLabel:
      000010 1D                   14737 	.db #0x1d	; 29
      000011 0D                   14738 	.db #0x0d	; 13
      000012 19                   14739 	.db #0x19	; 25
      000013 1C                   14740 	.db #0x1c	; 28
      000014 0F                   14741 	.db #0x0f	; 15
      000015                      14742 __xinit__pressAnyKeyLabel:
      000015 1A                   14743 	.db #0x1a	; 26
      000016 1C                   14744 	.db #0x1c	; 28
      000017 0F                   14745 	.db #0x0f	; 15
      000018 1D                   14746 	.db #0x1d	; 29
      000019 1D                   14747 	.db #0x1d	; 29
      00001A 00                   14748 	.db #0x00	; 0
      00001B 0B                   14749 	.db #0x0b	; 11
      00001C 18                   14750 	.db #0x18	; 24
      00001D 23                   14751 	.db #0x23	; 35
      00001E 00                   14752 	.db #0x00	; 0
      00001F 15                   14753 	.db #0x15	; 21
      000020 0F                   14754 	.db #0x0f	; 15
      000021 23                   14755 	.db #0x23	; 35
      000022                      14756 __xinit__toContinueLabel:
      000022 1E                   14757 	.db #0x1e	; 30
      000023 19                   14758 	.db #0x19	; 25
      000024 00                   14759 	.db #0x00	; 0
      000025 0D                   14760 	.db #0x0d	; 13
      000026 19                   14761 	.db #0x19	; 25
      000027 18                   14762 	.db #0x18	; 24
      000028 1E                   14763 	.db #0x1e	; 30
      000029 13                   14764 	.db #0x13	; 19
      00002A 18                   14765 	.db #0x18	; 24
      00002B 1F                   14766 	.db #0x1f	; 31
      00002C 0F                   14767 	.db #0x0f	; 15
      00002D                      14768 __xinit__emptyRow:
      00002D 00                   14769 	.db #0x00	; 0
      00002E 00                   14770 	.db #0x00	; 0
      00002F 00                   14771 	.db #0x00	; 0
      000030 00                   14772 	.db #0x00	; 0
      000031 00                   14773 	.db #0x00	; 0
      000032 00                   14774 	.db #0x00	; 0
      000033 00                   14775 	.db #0x00	; 0
      000034 00                   14776 	.db #0x00	; 0
      000035 00                   14777 	.db #0x00	; 0
      000036 00                   14778 	.db #0x00	; 0
      000037 00                   14779 	.db #0x00	; 0
      000038 00                   14780 	.db #0x00	; 0
      000039 00                   14781 	.db #0x00	; 0
      00003A 00                   14782 	.db #0x00	; 0
      00003B 00                   14783 	.db #0x00	; 0
      00003C 00                   14784 	.db #0x00	; 0
      00003D 00                   14785 	.db #0x00	; 0
      00003E 00                   14786 	.db #0x00	; 0
      00003F 00                   14787 	.db #0x00	; 0
      000040 00                   14788 	.db #0x00	; 0
      000041                      14789 __xinit__pressStartLabel:
      000041 1A                   14790 	.db #0x1a	; 26
      000042 1C                   14791 	.db #0x1c	; 28
      000043 0F                   14792 	.db #0x0f	; 15
      000044 1D                   14793 	.db #0x1d	; 29
      000045 1D                   14794 	.db #0x1d	; 29
      000046 00                   14795 	.db #0x00	; 0
      000047 1D                   14796 	.db #0x1d	; 29
      000048 1E                   14797 	.db #0x1e	; 30
      000049 0B                   14798 	.db #0x0b	; 11
      00004A 1C                   14799 	.db #0x1c	; 28
      00004B 1E                   14800 	.db #0x1e	; 30
      00004C                      14801 __xinit__playLabel:
      00004C 1A                   14802 	.db #0x1a	; 26
      00004D 16                   14803 	.db #0x16	; 22
      00004E 0B                   14804 	.db #0x0b	; 11
      00004F 23                   14805 	.db #0x23	; 35
      000050                      14806 __xinit__controlsLabel:
      000050 0D                   14807 	.db #0x0d	; 13
      000051 19                   14808 	.db #0x19	; 25
      000052 18                   14809 	.db #0x18	; 24
      000053 1E                   14810 	.db #0x1e	; 30
      000054 1C                   14811 	.db #0x1c	; 28
      000055 19                   14812 	.db #0x19	; 25
      000056 16                   14813 	.db #0x16	; 22
      000057 1D                   14814 	.db #0x1d	; 29
      000058                      14815 __xinit__selectLevelLabel:
      000058 1D                   14816 	.db #0x1d	; 29
      000059 0F                   14817 	.db #0x0f	; 15
      00005A 16                   14818 	.db #0x16	; 22
      00005B 0F                   14819 	.db #0x0f	; 15
      00005C 0D                   14820 	.db #0x0d	; 13
      00005D 1E                   14821 	.db #0x1e	; 30
      00005E 00                   14822 	.db #0x00	; 0
      00005F 16                   14823 	.db #0x16	; 22
      000060 0F                   14824 	.db #0x0f	; 15
      000061 20                   14825 	.db #0x20	; 32
      000062 0F                   14826 	.db #0x0f	; 15
      000063 16                   14827 	.db #0x16	; 22
      000064                      14828 __xinit__voidLabel:
      000064 20                   14829 	.db #0x20	; 32
      000065 19                   14830 	.db #0x19	; 25
      000066 13                   14831 	.db #0x13	; 19
      000067 0E                   14832 	.db #0x0e	; 14
      000068                      14833 __xinit__asteroids1Label:
      000068 0B                   14834 	.db #0x0b	; 11
      000069 1D                   14835 	.db #0x1d	; 29
      00006A 1E                   14836 	.db #0x1e	; 30
      00006B 0F                   14837 	.db #0x0f	; 15
      00006C 1C                   14838 	.db #0x1c	; 28
      00006D 19                   14839 	.db #0x19	; 25
      00006E 13                   14840 	.db #0x13	; 19
      00006F 0E                   14841 	.db #0x0e	; 14
      000070 1D                   14842 	.db #0x1d	; 29
      000071 00                   14843 	.db #0x00	; 0
      000072 02                   14844 	.db #0x02	; 2
      000073                      14845 __xinit__asteroids2Label:
      000073 0B                   14846 	.db #0x0b	; 11
      000074 1D                   14847 	.db #0x1d	; 29
      000075 1E                   14848 	.db #0x1e	; 30
      000076 0F                   14849 	.db #0x0f	; 15
      000077 1C                   14850 	.db #0x1c	; 28
      000078 19                   14851 	.db #0x19	; 25
      000079 13                   14852 	.db #0x13	; 19
      00007A 0E                   14853 	.db #0x0e	; 14
      00007B 1D                   14854 	.db #0x1d	; 29
      00007C 00                   14855 	.db #0x00	; 0
      00007D 03                   14856 	.db #0x03	; 3
      00007E                      14857 __xinit__marshabLabel:
      00007E 17                   14858 	.db #0x17	; 23
      00007F 0B                   14859 	.db #0x0b	; 11
      000080 1C                   14860 	.db #0x1c	; 28
      000081 1D                   14861 	.db #0x1d	; 29
      000082 00                   14862 	.db #0x00	; 0
      000083 12                   14863 	.db #0x12	; 18
      000084 0B                   14864 	.db #0x0b	; 11
      000085 0C                   14865 	.db #0x0c	; 12
      000086                      14866 __xinit__bonusLabel:
      000086 0C                   14867 	.db #0x0c	; 12
      000087 19                   14868 	.db #0x19	; 25
      000088 18                   14869 	.db #0x18	; 24
      000089 1F                   14870 	.db #0x1f	; 31
      00008A 1D                   14871 	.db #0x1d	; 29
      00008B                      14872 __xinit__blob:
      00008B 00 00                14873 	.dw #0x0000
      00008D 00 00                14874 	.dw #0x0000
      00008F 00                   14875 	.db #0x00	;  0
      000090 00                   14876 	.db #0x00	;  0
      000091 40                   14877 	.db #0x40	; 64
      000092 00                   14878 	.db #0x00	; 0
      000093 01                   14879 	.db #0x01	; 1
      000094 01                   14880 	.db #0x01	; 1
      000095 01                   14881 	.db #0x01	; 1
      000096 32                   14882 	.db #0x32	; 50	'2'
      000097 03                   14883 	.db #0x03	;  3
      000098 01                   14884 	.db #0x01	; 1
      000099 00                   14885 	.db #0x00	;  0
      00009A 00                   14886 	.db #0x00	;  0
      00009B 32 00                14887 	.dw #0x0032
      00009D                      14888 __xinit__bomb:
      00009D 00 00                14889 	.dw #0x0000
      00009F 00 00                14890 	.dw #0x0000
      0000A1 00                   14891 	.db #0x00	;  0
      0000A2 00                   14892 	.db #0x00	;  0
      0000A3 42                   14893 	.db #0x42	; 66	'B'
      0000A4 00                   14894 	.db #0x00	; 0
      0000A5 01                   14895 	.db #0x01	; 1
      0000A6 01                   14896 	.db #0x01	; 1
      0000A7 01                   14897 	.db #0x01	; 1
      0000A8 32                   14898 	.db #0x32	; 50	'2'
      0000A9 05                   14899 	.db #0x05	;  5
      0000AA 01                   14900 	.db #0x01	; 1
      0000AB 00                   14901 	.db #0x00	;  0
      0000AC 00                   14902 	.db #0x00	;  0
      0000AD 32 00                14903 	.dw #0x0032
      0000AF                      14904 __xinit__miniship:
      0000AF 00 00                14905 	.dw #0x0000
      0000B1 00 00                14906 	.dw #0x0000
      0000B3 00                   14907 	.db #0x00	;  0
      0000B4 00                   14908 	.db #0x00	;  0
      0000B5 44                   14909 	.db #0x44	; 68	'D'
      0000B6 00                   14910 	.db #0x00	; 0
      0000B7 01                   14911 	.db #0x01	; 1
      0000B8 01                   14912 	.db #0x01	; 1
      0000B9 01                   14913 	.db #0x01	; 1
      0000BA 32                   14914 	.db #0x32	; 50	'2'
      0000BB 05                   14915 	.db #0x05	;  5
      0000BC 01                   14916 	.db #0x01	; 1
      0000BD 00                   14917 	.db #0x00	;  0
      0000BE 00                   14918 	.db #0x00	;  0
      0000BF 32 00                14919 	.dw #0x0032
      0000C1                      14920 __xinit__bigblob:
      0000C1 00 00                14921 	.dw #0x0000
      0000C3 00 00                14922 	.dw #0x0000
      0000C5 00                   14923 	.db #0x00	;  0
      0000C6 00                   14924 	.db #0x00	;  0
      0000C7 50                   14925 	.db #0x50	; 80	'P'
      0000C8 52                   14926 	.db #0x52	; 82	'R'
      0000C9 02                   14927 	.db #0x02	; 2
      0000CA 01                   14928 	.db #0x01	; 1
      0000CB 01                   14929 	.db #0x01	; 1
      0000CC 32                   14930 	.db #0x32	; 50	'2'
      0000CD 03                   14931 	.db #0x03	;  3
      0000CE 01                   14932 	.db #0x01	; 1
      0000CF 00                   14933 	.db #0x00	;  0
      0000D0 00                   14934 	.db #0x00	;  0
      0000D1 64 00                14935 	.dw #0x0064
      0000D3                      14936 __xinit__shieldship:
      0000D3 00 00                14937 	.dw #0x0000
      0000D5 00 00                14938 	.dw #0x0000
      0000D7 00                   14939 	.db #0x00	;  0
      0000D8 00                   14940 	.db #0x00	;  0
      0000D9 54                   14941 	.db #0x54	; 84	'T'
      0000DA 56                   14942 	.db #0x56	; 86	'V'
      0000DB 02                   14943 	.db #0x02	; 2
      0000DC 01                   14944 	.db #0x01	; 1
      0000DD 01                   14945 	.db #0x01	; 1
      0000DE 32                   14946 	.db #0x32	; 50	'2'
      0000DF 03                   14947 	.db #0x03	;  3
      0000E0 01                   14948 	.db #0x01	; 1
      0000E1 00                   14949 	.db #0x00	;  0
      0000E2 00                   14950 	.db #0x00	;  0
      0000E3 46 00                14951 	.dw #0x0046
      0000E5                      14952 __xinit__singleGun:
      0000E5 00 00                14953 	.dw #0x0000
      0000E7 00 00                14954 	.dw #0x0000
      0000E9 00                   14955 	.db #0x00	;  0
      0000EA 00                   14956 	.db #0x00	;  0
      0000EB FF                   14957 	.db #0xff	; -1
      0000EC 02                   14958 	.db #0x02	; 2
      0000ED 32 00                14959 	.dw #0x0032
      0000EF 01                   14960 	.db #0x01	; 1
      0000F0 0F                   14961 	.db #0x0f	; 15
      0000F1 20                   14962 	.db #0x20	; 32
      0000F2                      14963 __xinit__doubleGun:
      0000F2 00 00                14964 	.dw #0x0000
      0000F4 00 00                14965 	.dw #0x0000
      0000F6 00                   14966 	.db #0x00	;  0
      0000F7 00                   14967 	.db #0x00	;  0
      0000F8 FF                   14968 	.db #0xff	; -1
      0000F9 02                   14969 	.db #0x02	; 2
      0000FA 46 00                14970 	.dw #0x0046
      0000FC 01                   14971 	.db #0x01	; 1
      0000FD 0F                   14972 	.db #0x0f	; 15
      0000FE 26                   14973 	.db #0x26	; 38
      0000FF                      14974 __xinit__missile:
      0000FF 00 00                14975 	.dw #0x0000
      000101 00 00                14976 	.dw #0x0000
      000103 00                   14977 	.db #0x00	;  0
      000104 00                   14978 	.db #0x00	;  0
      000105 FF                   14979 	.db #0xff	; -1
      000106 01                   14980 	.db #0x01	; 1
      000107 64 00                14981 	.dw #0x0064
      000109 01                   14982 	.db #0x01	; 1
      00010A 1E                   14983 	.db #0x1e	; 30
      00010B 2C                   14984 	.db #0x2c	; 44
      00010C                      14985 __xinit__oldestProjectile:
      00010C 00                   14986 	.db #0x00	; 0
      00010D                      14987 __xinit__fireCooldown:
      00010D 00                   14988 	.db #0x00	; 0
      00010E                      14989 __xinit__xDir:
      00010E 00                   14990 	.db #0x00	;  0
      00010F                      14991 __xinit__yDir:
      00010F FF                   14992 	.db #0xff	; -1
      000110                      14993 __xinit__xSpeed:
      000110 00                   14994 	.db #0x00	;  0
      000111                      14995 __xinit__ySpeed:
      000111 00                   14996 	.db #0x00	;  0
      000112                      14997 __xinit__playerX:
      000112 00 0A                14998 	.dw #0x0a00
      000114                      14999 __xinit__playerY:
      000114 00 0A                15000 	.dw #0x0a00
      000116                      15001 __xinit__playerDrawX:
      000116 50                   15002 	.db #0x50	; 80	'P'
      000117                      15003 __xinit__playerDrawY:
      000117 50                   15004 	.db #0x50	; 80	'P'
      000118                      15005 __xinit__bgX:
      000118 00 00                15006 	.dw #0x0000
      00011A                      15007 __xinit__bgY:
      00011A 00 00                15008 	.dw #0x0000
      00011C                      15009 __xinit__joydata:
      00011C 00                   15010 	.db #0x00	; 0
      00011D                      15011 __xinit__prevJoyData:
      00011D 00                   15012 	.db #0x00	; 0
      00011E                      15013 __xinit__xOverflow:
      00011E 00 00                15014 	.dw #0x0000
      000120                      15015 __xinit__yOverflow:
      000120 00 00                15016 	.dw #0x0000
      000122                      15017 __xinit__enemyCollisionCount:
      000122 00                   15018 	.db #0x00	; 0
      000123                      15019 __xinit__gunLevel:
      000123 00                   15020 	.db #0x00	; 0
      000124                      15021 __xinit__currentGun:
      000124 00                   15022 	.db #0x00	; 0
      000125                      15023 __xinit__missiles:
      000125 00                   15024 	.db #0x00	; 0
      000126                      15025 __xinit__MISSILES:
      000126 00 00 00 00          15026 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      00012A                      15027 __xinit__switchDelay:
      00012A 00                   15028 	.db #0x00	; 0
      00012B                      15029 __xinit__gunMap:
      00012B 53                   15030 	.db #0x53	; 83	'S'
      00012C 5B                   15031 	.db #0x5b	; 91
      00012D 61                   15032 	.db #0x61	; 97	'a'
      00012E                      15033 __xinit__score:
      00012E 00 00                15034 	.dw #0x0000
      000130                      15035 __xinit__SCORE:
      000130 00 00 00 00          15036 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      000134                      15037 __xinit__INCREMENT:
      000134 01 00 00 00          15038 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      000138                      15039 __xinit__oldestEx:
      000138 00                   15040 	.db #0x00	; 0
      000139                      15041 __xinit__exTiles:
      000139 80                   15042 	.db #0x80	; 128
      00013A 90                   15043 	.db #0x90	; 144
      00013B A0                   15044 	.db #0xa0	; 160
      00013C                      15045 __xinit__auxTick:
      00013C 01                   15046 	.db #0x01	; 1
                                  15047 	.area _CABS (ABS)
