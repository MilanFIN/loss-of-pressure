                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickEx
                                     16 	.globl _tickPickups
                                     17 	.globl _moveProjectiles
                                     18 	.globl _fire
                                     19 	.globl _setGunIcon
                                     20 	.globl _checkCollision
                                     21 	.globl _killEnemy
                                     22 	.globl _spawnPickup
                                     23 	.globl _takeDamage
                                     24 	.globl _move
                                     25 	.globl _updateEnemyPositions
                                     26 	.globl _initEnemy
                                     27 	.globl _initEnemies
                                     28 	.globl _playSound
                                     29 	.globl _updateDirection
                                     30 	.globl _incrementScore
                                     31 	.globl _updateMissileCount
                                     32 	.globl _updateScore
                                     33 	.globl _setHealthBar
                                     34 	.globl _interruptLCD
                                     35 	.globl _bcd2text
                                     36 	.globl _bcd_sub
                                     37 	.globl _bcd_add
                                     38 	.globl _rand
                                     39 	.globl _initrand
                                     40 	.globl _font_set
                                     41 	.globl _font_load
                                     42 	.globl _font_init
                                     43 	.globl _set_sprite_data
                                     44 	.globl _set_win_tiles
                                     45 	.globl _set_bkg_tiles
                                     46 	.globl _set_bkg_data
                                     47 	.globl _wait_vbl_done
                                     48 	.globl _set_interrupts
                                     49 	.globl _waitpad
                                     50 	.globl _joypad
                                     51 	.globl _add_LCD
                                     52 	.globl _auxTick
                                     53 	.globl _exTiles
                                     54 	.globl _oldestEx
                                     55 	.globl _INCREMENT
                                     56 	.globl _SCORE
                                     57 	.globl _score
                                     58 	.globl _gunMap
                                     59 	.globl _switchDelay
                                     60 	.globl _MISSILES
                                     61 	.globl _missiles
                                     62 	.globl _currentGun
                                     63 	.globl _gunLevel
                                     64 	.globl _enemyCollisionCount
                                     65 	.globl _yOverflow
                                     66 	.globl _xOverflow
                                     67 	.globl _bgY
                                     68 	.globl _bgX
                                     69 	.globl _playerDrawY
                                     70 	.globl _playerDrawX
                                     71 	.globl _playerY
                                     72 	.globl _playerX
                                     73 	.globl _ySpeed
                                     74 	.globl _xSpeed
                                     75 	.globl _yDir
                                     76 	.globl _xDir
                                     77 	.globl _fireCooldown
                                     78 	.globl _oldestProjectile
                                     79 	.globl _missile
                                     80 	.globl _doubleGun
                                     81 	.globl _singleGun
                                     82 	.globl _shieldship
                                     83 	.globl _bigblob
                                     84 	.globl _miniship
                                     85 	.globl _bomb
                                     86 	.globl _blob
                                     87 	.globl _scorelabel
                                     88 	.globl _weaponlabel
                                     89 	.globl _shieldlabel
                                     90 	.globl _hullabel
                                     91 	.globl _explosions
                                     92 	.globl _pickup
                                     93 	.globl _min_font
                                     94 	.globl _shield
                                     95 	.globl _hull
                                     96 	.globl _joydata
                                     97 	.globl _projectiles
                                     98 	.globl _enemies
                                     99 	.globl _enemyOptions
                                    100 	.globl _AUXTICKFREQUENCY
                                    101 	.globl _exTileCount
                                    102 	.globl _EXPLFRAMETIME
                                    103 	.globl _exCount
                                    104 	.globl _SPLASHDROPOFF
                                    105 	.globl _MAXGUNLEVEL
                                    106 	.globl _maxShield
                                    107 	.globl _maxHull
                                    108 	.globl _PLAYERSIZE
                                    109 	.globl _PROJECTILECOUNT
                                    110 	.globl _ySpawnPositions
                                    111 	.globl _xSpawnPositions
                                    112 	.globl _ENEMYCOUNT
                                    113 	.globl _EMPTYSPRITE
                                    114 	.globl _BLANK
                                    115 	.globl _BLANKSIZE
                                    116 	.globl _Ex3
                                    117 	.globl _Ex2
                                    118 	.globl _Ex1
                                    119 	.globl _ex
                                    120 	.globl _Player1
                                    121 	.globl _Pickups
                                    122 	.globl _health
                                    123 	.globl _ammo
                                    124 	.globl _upgrade
                                    125 	.globl _ProjectileTiles
                                    126 	.globl _largeenemies
                                    127 	.globl _enemy1
                                    128 	.globl _enemyOptionCount
                                    129 	.globl _healthblock
                                    130 	.globl _backgroundtiles
                                    131 	.globl _background1
                                    132 	.globl _cross
                                    133 ;--------------------------------------------------------
                                    134 ; special function registers
                                    135 ;--------------------------------------------------------
                                    136 ;--------------------------------------------------------
                                    137 ; ram data
                                    138 ;--------------------------------------------------------
                                    139 	.area _DATA
      000000                        140 _enemyOptions::
      000000                        141 	.ds 90
      00005A                        142 _enemies::
      00005A                        143 	.ds 90
      0000B4                        144 _projectiles::
      0000B4                        145 	.ds 65
      0000F5                        146 _joydata::
      0000F5                        147 	.ds 1
      0000F6                        148 _hull::
      0000F6                        149 	.ds 1
      0000F7                        150 _shield::
      0000F7                        151 	.ds 1
      0000F8                        152 _min_font::
      0000F8                        153 	.ds 2
      0000FA                        154 _pickup::
      0000FA                        155 	.ds 9
      000103                        156 _explosions::
      000103                        157 	.ds 18
                                    158 ;--------------------------------------------------------
                                    159 ; ram data
                                    160 ;--------------------------------------------------------
                                    161 	.area _INITIALIZED
      000000                        162 _hullabel::
      000000                        163 	.ds 4
      000004                        164 _shieldlabel::
      000004                        165 	.ds 4
      000008                        166 _weaponlabel::
      000008                        167 	.ds 4
      00000C                        168 _scorelabel::
      00000C                        169 	.ds 4
      000010                        170 _blob::
      000010                        171 	.ds 18
      000022                        172 _bomb::
      000022                        173 	.ds 18
      000034                        174 _miniship::
      000034                        175 	.ds 18
      000046                        176 _bigblob::
      000046                        177 	.ds 18
      000058                        178 _shieldship::
      000058                        179 	.ds 18
      00006A                        180 _singleGun::
      00006A                        181 	.ds 13
      000077                        182 _doubleGun::
      000077                        183 	.ds 13
      000084                        184 _missile::
      000084                        185 	.ds 13
      000091                        186 _oldestProjectile::
      000091                        187 	.ds 1
      000092                        188 _fireCooldown::
      000092                        189 	.ds 1
      000093                        190 _xDir::
      000093                        191 	.ds 1
      000094                        192 _yDir::
      000094                        193 	.ds 1
      000095                        194 _xSpeed::
      000095                        195 	.ds 1
      000096                        196 _ySpeed::
      000096                        197 	.ds 1
      000097                        198 _playerX::
      000097                        199 	.ds 2
      000099                        200 _playerY::
      000099                        201 	.ds 2
      00009B                        202 _playerDrawX::
      00009B                        203 	.ds 1
      00009C                        204 _playerDrawY::
      00009C                        205 	.ds 1
      00009D                        206 _bgX::
      00009D                        207 	.ds 2
      00009F                        208 _bgY::
      00009F                        209 	.ds 2
      0000A1                        210 _xOverflow::
      0000A1                        211 	.ds 2
      0000A3                        212 _yOverflow::
      0000A3                        213 	.ds 2
      0000A5                        214 _enemyCollisionCount::
      0000A5                        215 	.ds 1
      0000A6                        216 _gunLevel::
      0000A6                        217 	.ds 1
      0000A7                        218 _currentGun::
      0000A7                        219 	.ds 1
      0000A8                        220 _missiles::
      0000A8                        221 	.ds 1
      0000A9                        222 _MISSILES::
      0000A9                        223 	.ds 4
      0000AD                        224 _switchDelay::
      0000AD                        225 	.ds 1
      0000AE                        226 _gunMap::
      0000AE                        227 	.ds 3
      0000B1                        228 _score::
      0000B1                        229 	.ds 2
      0000B3                        230 _SCORE::
      0000B3                        231 	.ds 4
      0000B7                        232 _INCREMENT::
      0000B7                        233 	.ds 4
      0000BB                        234 _oldestEx::
      0000BB                        235 	.ds 1
      0000BC                        236 _exTiles::
      0000BC                        237 	.ds 3
      0000BF                        238 _auxTick::
      0000BF                        239 	.ds 1
                                    240 ;--------------------------------------------------------
                                    241 ; absolute external ram data
                                    242 ;--------------------------------------------------------
                                    243 	.area _DABS (ABS)
                                    244 ;--------------------------------------------------------
                                    245 ; global & static initialisations
                                    246 ;--------------------------------------------------------
                                    247 	.area _HOME
                                    248 	.area _GSINIT
                                    249 	.area _GSFINAL
                                    250 	.area _GSINIT
                                    251 ;--------------------------------------------------------
                                    252 ; Home
                                    253 ;--------------------------------------------------------
                                    254 	.area _HOME
                                    255 	.area _HOME
                                    256 ;--------------------------------------------------------
                                    257 ; code
                                    258 ;--------------------------------------------------------
                                    259 	.area _CODE
                                    260 ;src/main.c:153: void interruptLCD()
                                    261 ;	---------------------------------
                                    262 ; Function interruptLCD
                                    263 ; ---------------------------------
      000000                        264 _interruptLCD::
                                    265 ;src/main.c:155: HIDE_SPRITES;
      000000 F0r00                  266 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  267 	and	a, #0xfd
      000004 E0r00                  268 	ldh	(_LCDC_REG + 0), a
                                    269 ;src/main.c:156: }
      000006 C9                     270 	ret
      000007                        271 _cross:
      000007 18                     272 	.db #0x18	; 24
      000008 18                     273 	.db #0x18	; 24
      000009 18                     274 	.db #0x18	; 24
      00000A 18                     275 	.db #0x18	; 24
      00000B 3C                     276 	.db #0x3c	; 60
      00000C 3C                     277 	.db #0x3c	; 60
      00000D 3C                     278 	.db #0x3c	; 60
      00000E 3C                     279 	.db #0x3c	; 60
      00000F 7E                     280 	.db #0x7e	; 126
      000010 7E                     281 	.db #0x7e	; 126
      000011 7E                     282 	.db #0x7e	; 126
      000012 7E                     283 	.db #0x7e	; 126
      000013 FF                     284 	.db #0xff	; 255
      000014 FF                     285 	.db #0xff	; 255
      000015 FF                     286 	.db #0xff	; 255
      000016 FF                     287 	.db #0xff	; 255
      000017 0F                     288 	.db #0x0f	; 15
      000018 0F                     289 	.db #0x0f	; 15
      000019 3F                     290 	.db #0x3f	; 63
      00001A 3F                     291 	.db #0x3f	; 63
      00001B FF                     292 	.db #0xff	; 255
      00001C FF                     293 	.db #0xff	; 255
      00001D FF                     294 	.db #0xff	; 255
      00001E FF                     295 	.db #0xff	; 255
      00001F 7E                     296 	.db #0x7e	; 126
      000020 7E                     297 	.db #0x7e	; 126
      000021 3E                     298 	.db #0x3e	; 62
      000022 3E                     299 	.db #0x3e	; 62
      000023 1C                     300 	.db #0x1c	; 28
      000024 1C                     301 	.db #0x1c	; 28
      000025 0C                     302 	.db #0x0c	; 12
      000026 0C                     303 	.db #0x0c	; 12
      000027 C0                     304 	.db #0xc0	; 192
      000028 C0                     305 	.db #0xc0	; 192
      000029 F0                     306 	.db #0xf0	; 240
      00002A F0                     307 	.db #0xf0	; 240
      00002B FC                     308 	.db #0xfc	; 252
      00002C FC                     309 	.db #0xfc	; 252
      00002D FF                     310 	.db #0xff	; 255
      00002E FF                     311 	.db #0xff	; 255
      00002F FF                     312 	.db #0xff	; 255
      000030 FF                     313 	.db #0xff	; 255
      000031 FC                     314 	.db #0xfc	; 252
      000032 FC                     315 	.db #0xfc	; 252
      000033 F0                     316 	.db #0xf0	; 240
      000034 F0                     317 	.db #0xf0	; 240
      000035 C0                     318 	.db #0xc0	; 192
      000036 C0                     319 	.db #0xc0	; 192
      000037 0C                     320 	.db #0x0c	; 12
      000038 0C                     321 	.db #0x0c	; 12
      000039 1C                     322 	.db #0x1c	; 28
      00003A 1C                     323 	.db #0x1c	; 28
      00003B 3E                     324 	.db #0x3e	; 62
      00003C 3E                     325 	.db #0x3e	; 62
      00003D 7E                     326 	.db #0x7e	; 126
      00003E 7E                     327 	.db #0x7e	; 126
      00003F FF                     328 	.db #0xff	; 255
      000040 FF                     329 	.db #0xff	; 255
      000041 FF                     330 	.db #0xff	; 255
      000042 FF                     331 	.db #0xff	; 255
      000043 3F                     332 	.db #0x3f	; 63
      000044 3F                     333 	.db #0x3f	; 63
      000045 0F                     334 	.db #0x0f	; 15
      000046 0F                     335 	.db #0x0f	; 15
      000047 FF                     336 	.db #0xff	; 255
      000048 FF                     337 	.db #0xff	; 255
      000049 FF                     338 	.db #0xff	; 255
      00004A FF                     339 	.db #0xff	; 255
      00004B 7E                     340 	.db #0x7e	; 126
      00004C 7E                     341 	.db #0x7e	; 126
      00004D 7E                     342 	.db #0x7e	; 126
      00004E 7E                     343 	.db #0x7e	; 126
      00004F 3C                     344 	.db #0x3c	; 60
      000050 3C                     345 	.db #0x3c	; 60
      000051 3C                     346 	.db #0x3c	; 60
      000052 3C                     347 	.db #0x3c	; 60
      000053 18                     348 	.db #0x18	; 24
      000054 18                     349 	.db #0x18	; 24
      000055 18                     350 	.db #0x18	; 24
      000056 18                     351 	.db #0x18	; 24
      000057 30                     352 	.db #0x30	; 48	'0'
      000058 30                     353 	.db #0x30	; 48	'0'
      000059 38                     354 	.db #0x38	; 56	'8'
      00005A 38                     355 	.db #0x38	; 56	'8'
      00005B 7C                     356 	.db #0x7c	; 124
      00005C 7C                     357 	.db #0x7c	; 124
      00005D 7E                     358 	.db #0x7e	; 126
      00005E 7E                     359 	.db #0x7e	; 126
      00005F FF                     360 	.db #0xff	; 255
      000060 FF                     361 	.db #0xff	; 255
      000061 FF                     362 	.db #0xff	; 255
      000062 FF                     363 	.db #0xff	; 255
      000063 FC                     364 	.db #0xfc	; 252
      000064 FC                     365 	.db #0xfc	; 252
      000065 F0                     366 	.db #0xf0	; 240
      000066 F0                     367 	.db #0xf0	; 240
      000067 03                     368 	.db #0x03	; 3
      000068 03                     369 	.db #0x03	; 3
      000069 0F                     370 	.db #0x0f	; 15
      00006A 0F                     371 	.db #0x0f	; 15
      00006B 3F                     372 	.db #0x3f	; 63
      00006C 3F                     373 	.db #0x3f	; 63
      00006D FF                     374 	.db #0xff	; 255
      00006E FF                     375 	.db #0xff	; 255
      00006F FF                     376 	.db #0xff	; 255
      000070 FF                     377 	.db #0xff	; 255
      000071 3F                     378 	.db #0x3f	; 63
      000072 3F                     379 	.db #0x3f	; 63
      000073 0F                     380 	.db #0x0f	; 15
      000074 0F                     381 	.db #0x0f	; 15
      000075 03                     382 	.db #0x03	; 3
      000076 03                     383 	.db #0x03	; 3
      000077 F0                     384 	.db #0xf0	; 240
      000078 F0                     385 	.db #0xf0	; 240
      000079 FC                     386 	.db #0xfc	; 252
      00007A FC                     387 	.db #0xfc	; 252
      00007B FF                     388 	.db #0xff	; 255
      00007C FF                     389 	.db #0xff	; 255
      00007D FF                     390 	.db #0xff	; 255
      00007E FF                     391 	.db #0xff	; 255
      00007F 7E                     392 	.db #0x7e	; 126
      000080 7E                     393 	.db #0x7e	; 126
      000081 7C                     394 	.db #0x7c	; 124
      000082 7C                     395 	.db #0x7c	; 124
      000083 38                     396 	.db #0x38	; 56	'8'
      000084 38                     397 	.db #0x38	; 56	'8'
      000085 30                     398 	.db #0x30	; 48	'0'
      000086 30                     399 	.db #0x30	; 48	'0'
      000087                        400 _background1:
      000087 26                     401 	.db #0x26	; 38
      000088 26                     402 	.db #0x26	; 38
      000089 26                     403 	.db #0x26	; 38
      00008A 26                     404 	.db #0x26	; 38
      00008B 26                     405 	.db #0x26	; 38
      00008C 26                     406 	.db #0x26	; 38
      00008D 26                     407 	.db #0x26	; 38
      00008E 26                     408 	.db #0x26	; 38
      00008F 26                     409 	.db #0x26	; 38
      000090 26                     410 	.db #0x26	; 38
      000091 26                     411 	.db #0x26	; 38
      000092 2A                     412 	.db #0x2a	; 42
      000093 29                     413 	.db #0x29	; 41
      000094 26                     414 	.db #0x26	; 38
      000095 26                     415 	.db #0x26	; 38
      000096 26                     416 	.db #0x26	; 38
      000097 26                     417 	.db #0x26	; 38
      000098 26                     418 	.db #0x26	; 38
      000099 26                     419 	.db #0x26	; 38
      00009A 26                     420 	.db #0x26	; 38
      00009B 2C                     421 	.db #0x2c	; 44
      00009C 26                     422 	.db #0x26	; 38
      00009D 26                     423 	.db #0x26	; 38
      00009E 26                     424 	.db #0x26	; 38
      00009F 26                     425 	.db #0x26	; 38
      0000A0 26                     426 	.db #0x26	; 38
      0000A1 26                     427 	.db #0x26	; 38
      0000A2 26                     428 	.db #0x26	; 38
      0000A3 26                     429 	.db #0x26	; 38
      0000A4 26                     430 	.db #0x26	; 38
      0000A5 26                     431 	.db #0x26	; 38
      0000A6 26                     432 	.db #0x26	; 38
      0000A7 26                     433 	.db #0x26	; 38
      0000A8 2B                     434 	.db #0x2b	; 43
      0000A9 26                     435 	.db #0x26	; 38
      0000AA 26                     436 	.db #0x26	; 38
      0000AB 26                     437 	.db #0x26	; 38
      0000AC 26                     438 	.db #0x26	; 38
      0000AD 26                     439 	.db #0x26	; 38
      0000AE 26                     440 	.db #0x26	; 38
      0000AF 26                     441 	.db #0x26	; 38
      0000B0 26                     442 	.db #0x26	; 38
      0000B1 26                     443 	.db #0x26	; 38
      0000B2 26                     444 	.db #0x26	; 38
      0000B3 26                     445 	.db #0x26	; 38
      0000B4 26                     446 	.db #0x26	; 38
      0000B5 26                     447 	.db #0x26	; 38
      0000B6 26                     448 	.db #0x26	; 38
      0000B7 26                     449 	.db #0x26	; 38
      0000B8 26                     450 	.db #0x26	; 38
      0000B9 26                     451 	.db #0x26	; 38
      0000BA 26                     452 	.db #0x26	; 38
      0000BB 26                     453 	.db #0x26	; 38
      0000BC 26                     454 	.db #0x26	; 38
      0000BD 26                     455 	.db #0x26	; 38
      0000BE 26                     456 	.db #0x26	; 38
      0000BF 26                     457 	.db #0x26	; 38
      0000C0 26                     458 	.db #0x26	; 38
      0000C1 26                     459 	.db #0x26	; 38
      0000C2 26                     460 	.db #0x26	; 38
      0000C3 26                     461 	.db #0x26	; 38
      0000C4 26                     462 	.db #0x26	; 38
      0000C5 26                     463 	.db #0x26	; 38
      0000C6 26                     464 	.db #0x26	; 38
      0000C7 26                     465 	.db #0x26	; 38
      0000C8 26                     466 	.db #0x26	; 38
      0000C9 26                     467 	.db #0x26	; 38
      0000CA 26                     468 	.db #0x26	; 38
      0000CB 26                     469 	.db #0x26	; 38
      0000CC 26                     470 	.db #0x26	; 38
      0000CD 26                     471 	.db #0x26	; 38
      0000CE 26                     472 	.db #0x26	; 38
      0000CF 26                     473 	.db #0x26	; 38
      0000D0 26                     474 	.db #0x26	; 38
      0000D1 26                     475 	.db #0x26	; 38
      0000D2 26                     476 	.db #0x26	; 38
      0000D3 26                     477 	.db #0x26	; 38
      0000D4 26                     478 	.db #0x26	; 38
      0000D5 26                     479 	.db #0x26	; 38
      0000D6 26                     480 	.db #0x26	; 38
      0000D7 26                     481 	.db #0x26	; 38
      0000D8 26                     482 	.db #0x26	; 38
      0000D9 26                     483 	.db #0x26	; 38
      0000DA 26                     484 	.db #0x26	; 38
      0000DB 26                     485 	.db #0x26	; 38
      0000DC 26                     486 	.db #0x26	; 38
      0000DD 26                     487 	.db #0x26	; 38
      0000DE 26                     488 	.db #0x26	; 38
      0000DF 26                     489 	.db #0x26	; 38
      0000E0 26                     490 	.db #0x26	; 38
      0000E1 26                     491 	.db #0x26	; 38
      0000E2 26                     492 	.db #0x26	; 38
      0000E3 26                     493 	.db #0x26	; 38
      0000E4 26                     494 	.db #0x26	; 38
      0000E5 26                     495 	.db #0x26	; 38
      0000E6 26                     496 	.db #0x26	; 38
      0000E7 26                     497 	.db #0x26	; 38
      0000E8 26                     498 	.db #0x26	; 38
      0000E9 26                     499 	.db #0x26	; 38
      0000EA 26                     500 	.db #0x26	; 38
      0000EB 26                     501 	.db #0x26	; 38
      0000EC 26                     502 	.db #0x26	; 38
      0000ED 26                     503 	.db #0x26	; 38
      0000EE 26                     504 	.db #0x26	; 38
      0000EF 26                     505 	.db #0x26	; 38
      0000F0 26                     506 	.db #0x26	; 38
      0000F1 26                     507 	.db #0x26	; 38
      0000F2 26                     508 	.db #0x26	; 38
      0000F3 26                     509 	.db #0x26	; 38
      0000F4 26                     510 	.db #0x26	; 38
      0000F5 26                     511 	.db #0x26	; 38
      0000F6 26                     512 	.db #0x26	; 38
      0000F7 26                     513 	.db #0x26	; 38
      0000F8 2B                     514 	.db #0x2b	; 43
      0000F9 26                     515 	.db #0x26	; 38
      0000FA 26                     516 	.db #0x26	; 38
      0000FB 26                     517 	.db #0x26	; 38
      0000FC 26                     518 	.db #0x26	; 38
      0000FD 26                     519 	.db #0x26	; 38
      0000FE 26                     520 	.db #0x26	; 38
      0000FF 2B                     521 	.db #0x2b	; 43
      000100 26                     522 	.db #0x26	; 38
      000101 26                     523 	.db #0x26	; 38
      000102 26                     524 	.db #0x26	; 38
      000103 26                     525 	.db #0x26	; 38
      000104 26                     526 	.db #0x26	; 38
      000105 26                     527 	.db #0x26	; 38
      000106 26                     528 	.db #0x26	; 38
      000107 26                     529 	.db #0x26	; 38
      000108 26                     530 	.db #0x26	; 38
      000109 26                     531 	.db #0x26	; 38
      00010A 26                     532 	.db #0x26	; 38
      00010B 26                     533 	.db #0x26	; 38
      00010C 2B                     534 	.db #0x2b	; 43
      00010D 26                     535 	.db #0x26	; 38
      00010E 26                     536 	.db #0x26	; 38
      00010F 26                     537 	.db #0x26	; 38
      000110 26                     538 	.db #0x26	; 38
      000111 26                     539 	.db #0x26	; 38
      000112 26                     540 	.db #0x26	; 38
      000113 26                     541 	.db #0x26	; 38
      000114 2C                     542 	.db #0x2c	; 44
      000115 26                     543 	.db #0x26	; 38
      000116 26                     544 	.db #0x26	; 38
      000117 26                     545 	.db #0x26	; 38
      000118 26                     546 	.db #0x26	; 38
      000119 26                     547 	.db #0x26	; 38
      00011A 26                     548 	.db #0x26	; 38
      00011B 26                     549 	.db #0x26	; 38
      00011C 26                     550 	.db #0x26	; 38
      00011D 26                     551 	.db #0x26	; 38
      00011E 26                     552 	.db #0x26	; 38
      00011F 26                     553 	.db #0x26	; 38
      000120 26                     554 	.db #0x26	; 38
      000121 26                     555 	.db #0x26	; 38
      000122 26                     556 	.db #0x26	; 38
      000123 26                     557 	.db #0x26	; 38
      000124 26                     558 	.db #0x26	; 38
      000125 26                     559 	.db #0x26	; 38
      000126 26                     560 	.db #0x26	; 38
      000127 26                     561 	.db #0x26	; 38
      000128 26                     562 	.db #0x26	; 38
      000129 2C                     563 	.db #0x2c	; 44
      00012A 26                     564 	.db #0x26	; 38
      00012B 26                     565 	.db #0x26	; 38
      00012C 26                     566 	.db #0x26	; 38
      00012D 26                     567 	.db #0x26	; 38
      00012E 25                     568 	.db #0x25	; 37
      00012F 26                     569 	.db #0x26	; 38
      000130 26                     570 	.db #0x26	; 38
      000131 26                     571 	.db #0x26	; 38
      000132 26                     572 	.db #0x26	; 38
      000133 26                     573 	.db #0x26	; 38
      000134 26                     574 	.db #0x26	; 38
      000135 26                     575 	.db #0x26	; 38
      000136 26                     576 	.db #0x26	; 38
      000137 26                     577 	.db #0x26	; 38
      000138 26                     578 	.db #0x26	; 38
      000139 26                     579 	.db #0x26	; 38
      00013A 26                     580 	.db #0x26	; 38
      00013B 26                     581 	.db #0x26	; 38
      00013C 2C                     582 	.db #0x2c	; 44
      00013D 26                     583 	.db #0x26	; 38
      00013E 26                     584 	.db #0x26	; 38
      00013F 26                     585 	.db #0x26	; 38
      000140 26                     586 	.db #0x26	; 38
      000141 26                     587 	.db #0x26	; 38
      000142 26                     588 	.db #0x26	; 38
      000143 26                     589 	.db #0x26	; 38
      000144 2B                     590 	.db #0x2b	; 43
      000145 26                     591 	.db #0x26	; 38
      000146 26                     592 	.db #0x26	; 38
      000147 26                     593 	.db #0x26	; 38
      000148 26                     594 	.db #0x26	; 38
      000149 26                     595 	.db #0x26	; 38
      00014A 26                     596 	.db #0x26	; 38
      00014B 26                     597 	.db #0x26	; 38
      00014C 26                     598 	.db #0x26	; 38
      00014D 26                     599 	.db #0x26	; 38
      00014E 26                     600 	.db #0x26	; 38
      00014F 26                     601 	.db #0x26	; 38
      000150 26                     602 	.db #0x26	; 38
      000151 26                     603 	.db #0x26	; 38
      000152 26                     604 	.db #0x26	; 38
      000153 26                     605 	.db #0x26	; 38
      000154 26                     606 	.db #0x26	; 38
      000155 26                     607 	.db #0x26	; 38
      000156 26                     608 	.db #0x26	; 38
      000157 26                     609 	.db #0x26	; 38
      000158 26                     610 	.db #0x26	; 38
      000159 26                     611 	.db #0x26	; 38
      00015A 26                     612 	.db #0x26	; 38
      00015B 26                     613 	.db #0x26	; 38
      00015C 26                     614 	.db #0x26	; 38
      00015D 26                     615 	.db #0x26	; 38
      00015E 26                     616 	.db #0x26	; 38
      00015F 26                     617 	.db #0x26	; 38
      000160 2C                     618 	.db #0x2c	; 44
      000161 26                     619 	.db #0x26	; 38
      000162 26                     620 	.db #0x26	; 38
      000163 26                     621 	.db #0x26	; 38
      000164 26                     622 	.db #0x26	; 38
      000165 26                     623 	.db #0x26	; 38
      000166 26                     624 	.db #0x26	; 38
      000167 26                     625 	.db #0x26	; 38
      000168 26                     626 	.db #0x26	; 38
      000169 26                     627 	.db #0x26	; 38
      00016A 26                     628 	.db #0x26	; 38
      00016B 26                     629 	.db #0x26	; 38
      00016C 26                     630 	.db #0x26	; 38
      00016D 26                     631 	.db #0x26	; 38
      00016E 26                     632 	.db #0x26	; 38
      00016F 26                     633 	.db #0x26	; 38
      000170 26                     634 	.db #0x26	; 38
      000171 26                     635 	.db #0x26	; 38
      000172 26                     636 	.db #0x26	; 38
      000173 26                     637 	.db #0x26	; 38
      000174 26                     638 	.db #0x26	; 38
      000175 26                     639 	.db #0x26	; 38
      000176 26                     640 	.db #0x26	; 38
      000177 26                     641 	.db #0x26	; 38
      000178 26                     642 	.db #0x26	; 38
      000179 26                     643 	.db #0x26	; 38
      00017A 26                     644 	.db #0x26	; 38
      00017B 26                     645 	.db #0x26	; 38
      00017C 26                     646 	.db #0x26	; 38
      00017D 26                     647 	.db #0x26	; 38
      00017E 26                     648 	.db #0x26	; 38
      00017F 26                     649 	.db #0x26	; 38
      000180 26                     650 	.db #0x26	; 38
      000181 26                     651 	.db #0x26	; 38
      000182 26                     652 	.db #0x26	; 38
      000183 26                     653 	.db #0x26	; 38
      000184 26                     654 	.db #0x26	; 38
      000185 26                     655 	.db #0x26	; 38
      000186 26                     656 	.db #0x26	; 38
      000187 26                     657 	.db #0x26	; 38
      000188 26                     658 	.db #0x26	; 38
      000189 26                     659 	.db #0x26	; 38
      00018A 26                     660 	.db #0x26	; 38
      00018B 26                     661 	.db #0x26	; 38
      00018C 26                     662 	.db #0x26	; 38
      00018D 26                     663 	.db #0x26	; 38
      00018E 26                     664 	.db #0x26	; 38
      00018F 26                     665 	.db #0x26	; 38
      000190 26                     666 	.db #0x26	; 38
      000191 26                     667 	.db #0x26	; 38
      000192 26                     668 	.db #0x26	; 38
      000193 26                     669 	.db #0x26	; 38
      000194 26                     670 	.db #0x26	; 38
      000195 2B                     671 	.db #0x2b	; 43
      000196 26                     672 	.db #0x26	; 38
      000197 26                     673 	.db #0x26	; 38
      000198 26                     674 	.db #0x26	; 38
      000199 26                     675 	.db #0x26	; 38
      00019A 26                     676 	.db #0x26	; 38
      00019B 26                     677 	.db #0x26	; 38
      00019C 26                     678 	.db #0x26	; 38
      00019D 26                     679 	.db #0x26	; 38
      00019E 26                     680 	.db #0x26	; 38
      00019F 26                     681 	.db #0x26	; 38
      0001A0 26                     682 	.db #0x26	; 38
      0001A1 26                     683 	.db #0x26	; 38
      0001A2 26                     684 	.db #0x26	; 38
      0001A3 26                     685 	.db #0x26	; 38
      0001A4 26                     686 	.db #0x26	; 38
      0001A5 26                     687 	.db #0x26	; 38
      0001A6 25                     688 	.db #0x25	; 37
      0001A7 26                     689 	.db #0x26	; 38
      0001A8 26                     690 	.db #0x26	; 38
      0001A9 26                     691 	.db #0x26	; 38
      0001AA 2B                     692 	.db #0x2b	; 43
      0001AB 26                     693 	.db #0x26	; 38
      0001AC 26                     694 	.db #0x26	; 38
      0001AD 26                     695 	.db #0x26	; 38
      0001AE 26                     696 	.db #0x26	; 38
      0001AF 26                     697 	.db #0x26	; 38
      0001B0 26                     698 	.db #0x26	; 38
      0001B1 26                     699 	.db #0x26	; 38
      0001B2 26                     700 	.db #0x26	; 38
      0001B3 26                     701 	.db #0x26	; 38
      0001B4 26                     702 	.db #0x26	; 38
      0001B5 26                     703 	.db #0x26	; 38
      0001B6 26                     704 	.db #0x26	; 38
      0001B7 26                     705 	.db #0x26	; 38
      0001B8 26                     706 	.db #0x26	; 38
      0001B9 26                     707 	.db #0x26	; 38
      0001BA 26                     708 	.db #0x26	; 38
      0001BB 26                     709 	.db #0x26	; 38
      0001BC 26                     710 	.db #0x26	; 38
      0001BD 26                     711 	.db #0x26	; 38
      0001BE 26                     712 	.db #0x26	; 38
      0001BF 26                     713 	.db #0x26	; 38
      0001C0 26                     714 	.db #0x26	; 38
      0001C1 26                     715 	.db #0x26	; 38
      0001C2 26                     716 	.db #0x26	; 38
      0001C3 26                     717 	.db #0x26	; 38
      0001C4 2B                     718 	.db #0x2b	; 43
      0001C5 26                     719 	.db #0x26	; 38
      0001C6 26                     720 	.db #0x26	; 38
      0001C7 26                     721 	.db #0x26	; 38
      0001C8 26                     722 	.db #0x26	; 38
      0001C9 26                     723 	.db #0x26	; 38
      0001CA 26                     724 	.db #0x26	; 38
      0001CB 26                     725 	.db #0x26	; 38
      0001CC 26                     726 	.db #0x26	; 38
      0001CD 26                     727 	.db #0x26	; 38
      0001CE 26                     728 	.db #0x26	; 38
      0001CF 26                     729 	.db #0x26	; 38
      0001D0 26                     730 	.db #0x26	; 38
      0001D1 26                     731 	.db #0x26	; 38
      0001D2 26                     732 	.db #0x26	; 38
      0001D3 26                     733 	.db #0x26	; 38
      0001D4 26                     734 	.db #0x26	; 38
      0001D5 26                     735 	.db #0x26	; 38
      0001D6 26                     736 	.db #0x26	; 38
      0001D7 26                     737 	.db #0x26	; 38
      0001D8 26                     738 	.db #0x26	; 38
      0001D9 26                     739 	.db #0x26	; 38
      0001DA 27                     740 	.db #0x27	; 39
      0001DB 28                     741 	.db #0x28	; 40
      0001DC 26                     742 	.db #0x26	; 38
      0001DD 26                     743 	.db #0x26	; 38
      0001DE 26                     744 	.db #0x26	; 38
      0001DF 26                     745 	.db #0x26	; 38
      0001E0 26                     746 	.db #0x26	; 38
      0001E1 26                     747 	.db #0x26	; 38
      0001E2 26                     748 	.db #0x26	; 38
      0001E3 26                     749 	.db #0x26	; 38
      0001E4 26                     750 	.db #0x26	; 38
      0001E5 26                     751 	.db #0x26	; 38
      0001E6 26                     752 	.db #0x26	; 38
      0001E7 26                     753 	.db #0x26	; 38
      0001E8 26                     754 	.db #0x26	; 38
      0001E9 26                     755 	.db #0x26	; 38
      0001EA 26                     756 	.db #0x26	; 38
      0001EB 26                     757 	.db #0x26	; 38
      0001EC 26                     758 	.db #0x26	; 38
      0001ED 26                     759 	.db #0x26	; 38
      0001EE 26                     760 	.db #0x26	; 38
      0001EF 26                     761 	.db #0x26	; 38
      0001F0 26                     762 	.db #0x26	; 38
      0001F1 26                     763 	.db #0x26	; 38
      0001F2 26                     764 	.db #0x26	; 38
      0001F3 26                     765 	.db #0x26	; 38
      0001F4 26                     766 	.db #0x26	; 38
      0001F5 26                     767 	.db #0x26	; 38
      0001F6 26                     768 	.db #0x26	; 38
      0001F7 26                     769 	.db #0x26	; 38
      0001F8 26                     770 	.db #0x26	; 38
      0001F9 26                     771 	.db #0x26	; 38
      0001FA 2A                     772 	.db #0x2a	; 42
      0001FB 29                     773 	.db #0x29	; 41
      0001FC 26                     774 	.db #0x26	; 38
      0001FD 26                     775 	.db #0x26	; 38
      0001FE 26                     776 	.db #0x26	; 38
      0001FF 26                     777 	.db #0x26	; 38
      000200 26                     778 	.db #0x26	; 38
      000201 26                     779 	.db #0x26	; 38
      000202 26                     780 	.db #0x26	; 38
      000203 26                     781 	.db #0x26	; 38
      000204 26                     782 	.db #0x26	; 38
      000205 26                     783 	.db #0x26	; 38
      000206 26                     784 	.db #0x26	; 38
      000207 26                     785 	.db #0x26	; 38
      000208 26                     786 	.db #0x26	; 38
      000209 26                     787 	.db #0x26	; 38
      00020A 26                     788 	.db #0x26	; 38
      00020B 26                     789 	.db #0x26	; 38
      00020C 26                     790 	.db #0x26	; 38
      00020D 26                     791 	.db #0x26	; 38
      00020E 27                     792 	.db #0x27	; 39
      00020F 28                     793 	.db #0x28	; 40
      000210 26                     794 	.db #0x26	; 38
      000211 26                     795 	.db #0x26	; 38
      000212 26                     796 	.db #0x26	; 38
      000213 26                     797 	.db #0x26	; 38
      000214 26                     798 	.db #0x26	; 38
      000215 26                     799 	.db #0x26	; 38
      000216 26                     800 	.db #0x26	; 38
      000217 26                     801 	.db #0x26	; 38
      000218 26                     802 	.db #0x26	; 38
      000219 26                     803 	.db #0x26	; 38
      00021A 26                     804 	.db #0x26	; 38
      00021B 26                     805 	.db #0x26	; 38
      00021C 26                     806 	.db #0x26	; 38
      00021D 26                     807 	.db #0x26	; 38
      00021E 26                     808 	.db #0x26	; 38
      00021F 2C                     809 	.db #0x2c	; 44
      000220 26                     810 	.db #0x26	; 38
      000221 26                     811 	.db #0x26	; 38
      000222 26                     812 	.db #0x26	; 38
      000223 26                     813 	.db #0x26	; 38
      000224 26                     814 	.db #0x26	; 38
      000225 26                     815 	.db #0x26	; 38
      000226 26                     816 	.db #0x26	; 38
      000227 26                     817 	.db #0x26	; 38
      000228 26                     818 	.db #0x26	; 38
      000229 26                     819 	.db #0x26	; 38
      00022A 26                     820 	.db #0x26	; 38
      00022B 26                     821 	.db #0x26	; 38
      00022C 26                     822 	.db #0x26	; 38
      00022D 26                     823 	.db #0x26	; 38
      00022E 2A                     824 	.db #0x2a	; 42
      00022F 29                     825 	.db #0x29	; 41
      000230 26                     826 	.db #0x26	; 38
      000231 26                     827 	.db #0x26	; 38
      000232 26                     828 	.db #0x26	; 38
      000233 26                     829 	.db #0x26	; 38
      000234 26                     830 	.db #0x26	; 38
      000235 26                     831 	.db #0x26	; 38
      000236 26                     832 	.db #0x26	; 38
      000237 26                     833 	.db #0x26	; 38
      000238 26                     834 	.db #0x26	; 38
      000239 26                     835 	.db #0x26	; 38
      00023A 26                     836 	.db #0x26	; 38
      00023B 26                     837 	.db #0x26	; 38
      00023C 26                     838 	.db #0x26	; 38
      00023D 25                     839 	.db #0x25	; 37
      00023E 26                     840 	.db #0x26	; 38
      00023F 26                     841 	.db #0x26	; 38
      000240 26                     842 	.db #0x26	; 38
      000241 26                     843 	.db #0x26	; 38
      000242 26                     844 	.db #0x26	; 38
      000243 26                     845 	.db #0x26	; 38
      000244 2C                     846 	.db #0x2c	; 44
      000245 26                     847 	.db #0x26	; 38
      000246 26                     848 	.db #0x26	; 38
      000247 26                     849 	.db #0x26	; 38
      000248 26                     850 	.db #0x26	; 38
      000249 26                     851 	.db #0x26	; 38
      00024A 26                     852 	.db #0x26	; 38
      00024B 26                     853 	.db #0x26	; 38
      00024C 26                     854 	.db #0x26	; 38
      00024D 26                     855 	.db #0x26	; 38
      00024E 26                     856 	.db #0x26	; 38
      00024F 26                     857 	.db #0x26	; 38
      000250 26                     858 	.db #0x26	; 38
      000251 26                     859 	.db #0x26	; 38
      000252 26                     860 	.db #0x26	; 38
      000253 26                     861 	.db #0x26	; 38
      000254 26                     862 	.db #0x26	; 38
      000255 26                     863 	.db #0x26	; 38
      000256 26                     864 	.db #0x26	; 38
      000257 26                     865 	.db #0x26	; 38
      000258 26                     866 	.db #0x26	; 38
      000259 26                     867 	.db #0x26	; 38
      00025A 26                     868 	.db #0x26	; 38
      00025B 26                     869 	.db #0x26	; 38
      00025C 26                     870 	.db #0x26	; 38
      00025D 26                     871 	.db #0x26	; 38
      00025E 26                     872 	.db #0x26	; 38
      00025F 26                     873 	.db #0x26	; 38
      000260 26                     874 	.db #0x26	; 38
      000261 26                     875 	.db #0x26	; 38
      000262 26                     876 	.db #0x26	; 38
      000263 26                     877 	.db #0x26	; 38
      000264 26                     878 	.db #0x26	; 38
      000265 26                     879 	.db #0x26	; 38
      000266 26                     880 	.db #0x26	; 38
      000267 26                     881 	.db #0x26	; 38
      000268 26                     882 	.db #0x26	; 38
      000269 26                     883 	.db #0x26	; 38
      00026A 2C                     884 	.db #0x2c	; 44
      00026B 26                     885 	.db #0x26	; 38
      00026C 26                     886 	.db #0x26	; 38
      00026D 26                     887 	.db #0x26	; 38
      00026E 26                     888 	.db #0x26	; 38
      00026F 26                     889 	.db #0x26	; 38
      000270 26                     890 	.db #0x26	; 38
      000271 26                     891 	.db #0x26	; 38
      000272 26                     892 	.db #0x26	; 38
      000273 26                     893 	.db #0x26	; 38
      000274 26                     894 	.db #0x26	; 38
      000275 26                     895 	.db #0x26	; 38
      000276 26                     896 	.db #0x26	; 38
      000277 26                     897 	.db #0x26	; 38
      000278 26                     898 	.db #0x26	; 38
      000279 2C                     899 	.db #0x2c	; 44
      00027A 26                     900 	.db #0x26	; 38
      00027B 26                     901 	.db #0x26	; 38
      00027C 26                     902 	.db #0x26	; 38
      00027D 26                     903 	.db #0x26	; 38
      00027E 26                     904 	.db #0x26	; 38
      00027F 26                     905 	.db #0x26	; 38
      000280 26                     906 	.db #0x26	; 38
      000281 26                     907 	.db #0x26	; 38
      000282 26                     908 	.db #0x26	; 38
      000283 26                     909 	.db #0x26	; 38
      000284 26                     910 	.db #0x26	; 38
      000285 26                     911 	.db #0x26	; 38
      000286 26                     912 	.db #0x26	; 38
      000287 26                     913 	.db #0x26	; 38
      000288 26                     914 	.db #0x26	; 38
      000289 26                     915 	.db #0x26	; 38
      00028A 26                     916 	.db #0x26	; 38
      00028B 26                     917 	.db #0x26	; 38
      00028C 26                     918 	.db #0x26	; 38
      00028D 26                     919 	.db #0x26	; 38
      00028E 26                     920 	.db #0x26	; 38
      00028F 26                     921 	.db #0x26	; 38
      000290 26                     922 	.db #0x26	; 38
      000291 26                     923 	.db #0x26	; 38
      000292 26                     924 	.db #0x26	; 38
      000293 26                     925 	.db #0x26	; 38
      000294 26                     926 	.db #0x26	; 38
      000295 2B                     927 	.db #0x2b	; 43
      000296 26                     928 	.db #0x26	; 38
      000297 26                     929 	.db #0x26	; 38
      000298 26                     930 	.db #0x26	; 38
      000299 26                     931 	.db #0x26	; 38
      00029A 26                     932 	.db #0x26	; 38
      00029B 26                     933 	.db #0x26	; 38
      00029C 26                     934 	.db #0x26	; 38
      00029D 26                     935 	.db #0x26	; 38
      00029E 26                     936 	.db #0x26	; 38
      00029F 26                     937 	.db #0x26	; 38
      0002A0 26                     938 	.db #0x26	; 38
      0002A1 26                     939 	.db #0x26	; 38
      0002A2 26                     940 	.db #0x26	; 38
      0002A3 26                     941 	.db #0x26	; 38
      0002A4 26                     942 	.db #0x26	; 38
      0002A5 26                     943 	.db #0x26	; 38
      0002A6 26                     944 	.db #0x26	; 38
      0002A7 28                     945 	.db #0x28	; 40
      0002A8 26                     946 	.db #0x26	; 38
      0002A9 26                     947 	.db #0x26	; 38
      0002AA 26                     948 	.db #0x26	; 38
      0002AB 26                     949 	.db #0x26	; 38
      0002AC 26                     950 	.db #0x26	; 38
      0002AD 26                     951 	.db #0x26	; 38
      0002AE 26                     952 	.db #0x26	; 38
      0002AF 26                     953 	.db #0x26	; 38
      0002B0 26                     954 	.db #0x26	; 38
      0002B1 26                     955 	.db #0x26	; 38
      0002B2 26                     956 	.db #0x26	; 38
      0002B3 26                     957 	.db #0x26	; 38
      0002B4 26                     958 	.db #0x26	; 38
      0002B5 26                     959 	.db #0x26	; 38
      0002B6 26                     960 	.db #0x26	; 38
      0002B7 26                     961 	.db #0x26	; 38
      0002B8 26                     962 	.db #0x26	; 38
      0002B9 26                     963 	.db #0x26	; 38
      0002BA 26                     964 	.db #0x26	; 38
      0002BB 26                     965 	.db #0x26	; 38
      0002BC 26                     966 	.db #0x26	; 38
      0002BD 26                     967 	.db #0x26	; 38
      0002BE 26                     968 	.db #0x26	; 38
      0002BF 26                     969 	.db #0x26	; 38
      0002C0 2B                     970 	.db #0x2b	; 43
      0002C1 26                     971 	.db #0x26	; 38
      0002C2 26                     972 	.db #0x26	; 38
      0002C3 26                     973 	.db #0x26	; 38
      0002C4 26                     974 	.db #0x26	; 38
      0002C5 26                     975 	.db #0x26	; 38
      0002C6 27                     976 	.db #0x27	; 39
      0002C7 29                     977 	.db #0x29	; 41
      0002C8 26                     978 	.db #0x26	; 38
      0002C9 26                     979 	.db #0x26	; 38
      0002CA 26                     980 	.db #0x26	; 38
      0002CB 26                     981 	.db #0x26	; 38
      0002CC 26                     982 	.db #0x26	; 38
      0002CD 26                     983 	.db #0x26	; 38
      0002CE 2B                     984 	.db #0x2b	; 43
      0002CF 26                     985 	.db #0x26	; 38
      0002D0 26                     986 	.db #0x26	; 38
      0002D1 26                     987 	.db #0x26	; 38
      0002D2 26                     988 	.db #0x26	; 38
      0002D3 26                     989 	.db #0x26	; 38
      0002D4 26                     990 	.db #0x26	; 38
      0002D5 26                     991 	.db #0x26	; 38
      0002D6 26                     992 	.db #0x26	; 38
      0002D7 26                     993 	.db #0x26	; 38
      0002D8 26                     994 	.db #0x26	; 38
      0002D9 26                     995 	.db #0x26	; 38
      0002DA 26                     996 	.db #0x26	; 38
      0002DB 26                     997 	.db #0x26	; 38
      0002DC 26                     998 	.db #0x26	; 38
      0002DD 26                     999 	.db #0x26	; 38
      0002DE 26                    1000 	.db #0x26	; 38
      0002DF 26                    1001 	.db #0x26	; 38
      0002E0 26                    1002 	.db #0x26	; 38
      0002E1 26                    1003 	.db #0x26	; 38
      0002E2 26                    1004 	.db #0x26	; 38
      0002E3 26                    1005 	.db #0x26	; 38
      0002E4 26                    1006 	.db #0x26	; 38
      0002E5 26                    1007 	.db #0x26	; 38
      0002E6 2A                    1008 	.db #0x2a	; 42
      0002E7 26                    1009 	.db #0x26	; 38
      0002E8 26                    1010 	.db #0x26	; 38
      0002E9 26                    1011 	.db #0x26	; 38
      0002EA 26                    1012 	.db #0x26	; 38
      0002EB 26                    1013 	.db #0x26	; 38
      0002EC 26                    1014 	.db #0x26	; 38
      0002ED 26                    1015 	.db #0x26	; 38
      0002EE 26                    1016 	.db #0x26	; 38
      0002EF 26                    1017 	.db #0x26	; 38
      0002F0 26                    1018 	.db #0x26	; 38
      0002F1 26                    1019 	.db #0x26	; 38
      0002F2 2C                    1020 	.db #0x2c	; 44
      0002F3 26                    1021 	.db #0x26	; 38
      0002F4 26                    1022 	.db #0x26	; 38
      0002F5 26                    1023 	.db #0x26	; 38
      0002F6 26                    1024 	.db #0x26	; 38
      0002F7 26                    1025 	.db #0x26	; 38
      0002F8 26                    1026 	.db #0x26	; 38
      0002F9 26                    1027 	.db #0x26	; 38
      0002FA 26                    1028 	.db #0x26	; 38
      0002FB 26                    1029 	.db #0x26	; 38
      0002FC 26                    1030 	.db #0x26	; 38
      0002FD 26                    1031 	.db #0x26	; 38
      0002FE 26                    1032 	.db #0x26	; 38
      0002FF 26                    1033 	.db #0x26	; 38
      000300 26                    1034 	.db #0x26	; 38
      000301 26                    1035 	.db #0x26	; 38
      000302 26                    1036 	.db #0x26	; 38
      000303 26                    1037 	.db #0x26	; 38
      000304 26                    1038 	.db #0x26	; 38
      000305 26                    1039 	.db #0x26	; 38
      000306 26                    1040 	.db #0x26	; 38
      000307 26                    1041 	.db #0x26	; 38
      000308 26                    1042 	.db #0x26	; 38
      000309 26                    1043 	.db #0x26	; 38
      00030A 26                    1044 	.db #0x26	; 38
      00030B 26                    1045 	.db #0x26	; 38
      00030C 26                    1046 	.db #0x26	; 38
      00030D 26                    1047 	.db #0x26	; 38
      00030E 26                    1048 	.db #0x26	; 38
      00030F 26                    1049 	.db #0x26	; 38
      000310 26                    1050 	.db #0x26	; 38
      000311 26                    1051 	.db #0x26	; 38
      000312 26                    1052 	.db #0x26	; 38
      000313 26                    1053 	.db #0x26	; 38
      000314 26                    1054 	.db #0x26	; 38
      000315 26                    1055 	.db #0x26	; 38
      000316 26                    1056 	.db #0x26	; 38
      000317 2B                    1057 	.db #0x2b	; 43
      000318 26                    1058 	.db #0x26	; 38
      000319 26                    1059 	.db #0x26	; 38
      00031A 26                    1060 	.db #0x26	; 38
      00031B 26                    1061 	.db #0x26	; 38
      00031C 26                    1062 	.db #0x26	; 38
      00031D 26                    1063 	.db #0x26	; 38
      00031E 26                    1064 	.db #0x26	; 38
      00031F 26                    1065 	.db #0x26	; 38
      000320 26                    1066 	.db #0x26	; 38
      000321 26                    1067 	.db #0x26	; 38
      000322 26                    1068 	.db #0x26	; 38
      000323 26                    1069 	.db #0x26	; 38
      000324 26                    1070 	.db #0x26	; 38
      000325 26                    1071 	.db #0x26	; 38
      000326 26                    1072 	.db #0x26	; 38
      000327 26                    1073 	.db #0x26	; 38
      000328 26                    1074 	.db #0x26	; 38
      000329 26                    1075 	.db #0x26	; 38
      00032A 26                    1076 	.db #0x26	; 38
      00032B 26                    1077 	.db #0x26	; 38
      00032C 26                    1078 	.db #0x26	; 38
      00032D 26                    1079 	.db #0x26	; 38
      00032E 26                    1080 	.db #0x26	; 38
      00032F 26                    1081 	.db #0x26	; 38
      000330 26                    1082 	.db #0x26	; 38
      000331 26                    1083 	.db #0x26	; 38
      000332 26                    1084 	.db #0x26	; 38
      000333 26                    1085 	.db #0x26	; 38
      000334 26                    1086 	.db #0x26	; 38
      000335 26                    1087 	.db #0x26	; 38
      000336 26                    1088 	.db #0x26	; 38
      000337 26                    1089 	.db #0x26	; 38
      000338 26                    1090 	.db #0x26	; 38
      000339 26                    1091 	.db #0x26	; 38
      00033A 26                    1092 	.db #0x26	; 38
      00033B 26                    1093 	.db #0x26	; 38
      00033C 26                    1094 	.db #0x26	; 38
      00033D 26                    1095 	.db #0x26	; 38
      00033E 2B                    1096 	.db #0x2b	; 43
      00033F 26                    1097 	.db #0x26	; 38
      000340 26                    1098 	.db #0x26	; 38
      000341 26                    1099 	.db #0x26	; 38
      000342 26                    1100 	.db #0x26	; 38
      000343 26                    1101 	.db #0x26	; 38
      000344 26                    1102 	.db #0x26	; 38
      000345 26                    1103 	.db #0x26	; 38
      000346 26                    1104 	.db #0x26	; 38
      000347 26                    1105 	.db #0x26	; 38
      000348 26                    1106 	.db #0x26	; 38
      000349 26                    1107 	.db #0x26	; 38
      00034A 2B                    1108 	.db #0x2b	; 43
      00034B 26                    1109 	.db #0x26	; 38
      00034C 26                    1110 	.db #0x26	; 38
      00034D 26                    1111 	.db #0x26	; 38
      00034E 26                    1112 	.db #0x26	; 38
      00034F 26                    1113 	.db #0x26	; 38
      000350 26                    1114 	.db #0x26	; 38
      000351 26                    1115 	.db #0x26	; 38
      000352 26                    1116 	.db #0x26	; 38
      000353 26                    1117 	.db #0x26	; 38
      000354 26                    1118 	.db #0x26	; 38
      000355 26                    1119 	.db #0x26	; 38
      000356 26                    1120 	.db #0x26	; 38
      000357 26                    1121 	.db #0x26	; 38
      000358 26                    1122 	.db #0x26	; 38
      000359 26                    1123 	.db #0x26	; 38
      00035A 26                    1124 	.db #0x26	; 38
      00035B 26                    1125 	.db #0x26	; 38
      00035C 26                    1126 	.db #0x26	; 38
      00035D 26                    1127 	.db #0x26	; 38
      00035E 26                    1128 	.db #0x26	; 38
      00035F 26                    1129 	.db #0x26	; 38
      000360 26                    1130 	.db #0x26	; 38
      000361 26                    1131 	.db #0x26	; 38
      000362 26                    1132 	.db #0x26	; 38
      000363 26                    1133 	.db #0x26	; 38
      000364 26                    1134 	.db #0x26	; 38
      000365 26                    1135 	.db #0x26	; 38
      000366 2C                    1136 	.db #0x2c	; 44
      000367 26                    1137 	.db #0x26	; 38
      000368 26                    1138 	.db #0x26	; 38
      000369 26                    1139 	.db #0x26	; 38
      00036A 26                    1140 	.db #0x26	; 38
      00036B 26                    1141 	.db #0x26	; 38
      00036C 26                    1142 	.db #0x26	; 38
      00036D 26                    1143 	.db #0x26	; 38
      00036E 26                    1144 	.db #0x26	; 38
      00036F 26                    1145 	.db #0x26	; 38
      000370 2B                    1146 	.db #0x2b	; 43
      000371 26                    1147 	.db #0x26	; 38
      000372 26                    1148 	.db #0x26	; 38
      000373 26                    1149 	.db #0x26	; 38
      000374 26                    1150 	.db #0x26	; 38
      000375 26                    1151 	.db #0x26	; 38
      000376 26                    1152 	.db #0x26	; 38
      000377 26                    1153 	.db #0x26	; 38
      000378 26                    1154 	.db #0x26	; 38
      000379 26                    1155 	.db #0x26	; 38
      00037A 26                    1156 	.db #0x26	; 38
      00037B 26                    1157 	.db #0x26	; 38
      00037C 26                    1158 	.db #0x26	; 38
      00037D 26                    1159 	.db #0x26	; 38
      00037E 26                    1160 	.db #0x26	; 38
      00037F 26                    1161 	.db #0x26	; 38
      000380 26                    1162 	.db #0x26	; 38
      000381 26                    1163 	.db #0x26	; 38
      000382 26                    1164 	.db #0x26	; 38
      000383 26                    1165 	.db #0x26	; 38
      000384 26                    1166 	.db #0x26	; 38
      000385 26                    1167 	.db #0x26	; 38
      000386 26                    1168 	.db #0x26	; 38
      000387 26                    1169 	.db #0x26	; 38
      000388 26                    1170 	.db #0x26	; 38
      000389 26                    1171 	.db #0x26	; 38
      00038A 26                    1172 	.db #0x26	; 38
      00038B 26                    1173 	.db #0x26	; 38
      00038C 26                    1174 	.db #0x26	; 38
      00038D 26                    1175 	.db #0x26	; 38
      00038E 26                    1176 	.db #0x26	; 38
      00038F 26                    1177 	.db #0x26	; 38
      000390 26                    1178 	.db #0x26	; 38
      000391 26                    1179 	.db #0x26	; 38
      000392 26                    1180 	.db #0x26	; 38
      000393 26                    1181 	.db #0x26	; 38
      000394 26                    1182 	.db #0x26	; 38
      000395 26                    1183 	.db #0x26	; 38
      000396 26                    1184 	.db #0x26	; 38
      000397 26                    1185 	.db #0x26	; 38
      000398 27                    1186 	.db #0x27	; 39
      000399 28                    1187 	.db #0x28	; 40
      00039A 26                    1188 	.db #0x26	; 38
      00039B 26                    1189 	.db #0x26	; 38
      00039C 26                    1190 	.db #0x26	; 38
      00039D 26                    1191 	.db #0x26	; 38
      00039E 26                    1192 	.db #0x26	; 38
      00039F 26                    1193 	.db #0x26	; 38
      0003A0 26                    1194 	.db #0x26	; 38
      0003A1 26                    1195 	.db #0x26	; 38
      0003A2 26                    1196 	.db #0x26	; 38
      0003A3 26                    1197 	.db #0x26	; 38
      0003A4 26                    1198 	.db #0x26	; 38
      0003A5 26                    1199 	.db #0x26	; 38
      0003A6 26                    1200 	.db #0x26	; 38
      0003A7 26                    1201 	.db #0x26	; 38
      0003A8 26                    1202 	.db #0x26	; 38
      0003A9 26                    1203 	.db #0x26	; 38
      0003AA 26                    1204 	.db #0x26	; 38
      0003AB 26                    1205 	.db #0x26	; 38
      0003AC 26                    1206 	.db #0x26	; 38
      0003AD 2B                    1207 	.db #0x2b	; 43
      0003AE 26                    1208 	.db #0x26	; 38
      0003AF 26                    1209 	.db #0x26	; 38
      0003B0 26                    1210 	.db #0x26	; 38
      0003B1 26                    1211 	.db #0x26	; 38
      0003B2 26                    1212 	.db #0x26	; 38
      0003B3 26                    1213 	.db #0x26	; 38
      0003B4 26                    1214 	.db #0x26	; 38
      0003B5 25                    1215 	.db #0x25	; 37
      0003B6 26                    1216 	.db #0x26	; 38
      0003B7 26                    1217 	.db #0x26	; 38
      0003B8 2A                    1218 	.db #0x2a	; 42
      0003B9 29                    1219 	.db #0x29	; 41
      0003BA 26                    1220 	.db #0x26	; 38
      0003BB 26                    1221 	.db #0x26	; 38
      0003BC 26                    1222 	.db #0x26	; 38
      0003BD 26                    1223 	.db #0x26	; 38
      0003BE 26                    1224 	.db #0x26	; 38
      0003BF 26                    1225 	.db #0x26	; 38
      0003C0 26                    1226 	.db #0x26	; 38
      0003C1 26                    1227 	.db #0x26	; 38
      0003C2 2B                    1228 	.db #0x2b	; 43
      0003C3 26                    1229 	.db #0x26	; 38
      0003C4 26                    1230 	.db #0x26	; 38
      0003C5 26                    1231 	.db #0x26	; 38
      0003C6 26                    1232 	.db #0x26	; 38
      0003C7 26                    1233 	.db #0x26	; 38
      0003C8 26                    1234 	.db #0x26	; 38
      0003C9 2C                    1235 	.db #0x2c	; 44
      0003CA 26                    1236 	.db #0x26	; 38
      0003CB 26                    1237 	.db #0x26	; 38
      0003CC 26                    1238 	.db #0x26	; 38
      0003CD 26                    1239 	.db #0x26	; 38
      0003CE 26                    1240 	.db #0x26	; 38
      0003CF 26                    1241 	.db #0x26	; 38
      0003D0 26                    1242 	.db #0x26	; 38
      0003D1 26                    1243 	.db #0x26	; 38
      0003D2 26                    1244 	.db #0x26	; 38
      0003D3 26                    1245 	.db #0x26	; 38
      0003D4 26                    1246 	.db #0x26	; 38
      0003D5 2C                    1247 	.db #0x2c	; 44
      0003D6 26                    1248 	.db #0x26	; 38
      0003D7 26                    1249 	.db #0x26	; 38
      0003D8 26                    1250 	.db #0x26	; 38
      0003D9 26                    1251 	.db #0x26	; 38
      0003DA 26                    1252 	.db #0x26	; 38
      0003DB 26                    1253 	.db #0x26	; 38
      0003DC 26                    1254 	.db #0x26	; 38
      0003DD 26                    1255 	.db #0x26	; 38
      0003DE 26                    1256 	.db #0x26	; 38
      0003DF 26                    1257 	.db #0x26	; 38
      0003E0 26                    1258 	.db #0x26	; 38
      0003E1 26                    1259 	.db #0x26	; 38
      0003E2 26                    1260 	.db #0x26	; 38
      0003E3 26                    1261 	.db #0x26	; 38
      0003E4 26                    1262 	.db #0x26	; 38
      0003E5 26                    1263 	.db #0x26	; 38
      0003E6 26                    1264 	.db #0x26	; 38
      0003E7 26                    1265 	.db #0x26	; 38
      0003E8 26                    1266 	.db #0x26	; 38
      0003E9 26                    1267 	.db #0x26	; 38
      0003EA 26                    1268 	.db #0x26	; 38
      0003EB 26                    1269 	.db #0x26	; 38
      0003EC 26                    1270 	.db #0x26	; 38
      0003ED 26                    1271 	.db #0x26	; 38
      0003EE 26                    1272 	.db #0x26	; 38
      0003EF 26                    1273 	.db #0x26	; 38
      0003F0 26                    1274 	.db #0x26	; 38
      0003F1 26                    1275 	.db #0x26	; 38
      0003F2 26                    1276 	.db #0x26	; 38
      0003F3 26                    1277 	.db #0x26	; 38
      0003F4 26                    1278 	.db #0x26	; 38
      0003F5 26                    1279 	.db #0x26	; 38
      0003F6 26                    1280 	.db #0x26	; 38
      0003F7 26                    1281 	.db #0x26	; 38
      0003F8 26                    1282 	.db #0x26	; 38
      0003F9 26                    1283 	.db #0x26	; 38
      0003FA 26                    1284 	.db #0x26	; 38
      0003FB 26                    1285 	.db #0x26	; 38
      0003FC 26                    1286 	.db #0x26	; 38
      0003FD 26                    1287 	.db #0x26	; 38
      0003FE 26                    1288 	.db #0x26	; 38
      0003FF 26                    1289 	.db #0x26	; 38
      000400 26                    1290 	.db #0x26	; 38
      000401 26                    1291 	.db #0x26	; 38
      000402 26                    1292 	.db #0x26	; 38
      000403 26                    1293 	.db #0x26	; 38
      000404 26                    1294 	.db #0x26	; 38
      000405 26                    1295 	.db #0x26	; 38
      000406 26                    1296 	.db #0x26	; 38
      000407 26                    1297 	.db #0x26	; 38
      000408 26                    1298 	.db #0x26	; 38
      000409 26                    1299 	.db #0x26	; 38
      00040A 26                    1300 	.db #0x26	; 38
      00040B 26                    1301 	.db #0x26	; 38
      00040C 26                    1302 	.db #0x26	; 38
      00040D 2B                    1303 	.db #0x2b	; 43
      00040E 26                    1304 	.db #0x26	; 38
      00040F 26                    1305 	.db #0x26	; 38
      000410 26                    1306 	.db #0x26	; 38
      000411 26                    1307 	.db #0x26	; 38
      000412 26                    1308 	.db #0x26	; 38
      000413 26                    1309 	.db #0x26	; 38
      000414 26                    1310 	.db #0x26	; 38
      000415 26                    1311 	.db #0x26	; 38
      000416 26                    1312 	.db #0x26	; 38
      000417 26                    1313 	.db #0x26	; 38
      000418 26                    1314 	.db #0x26	; 38
      000419 26                    1315 	.db #0x26	; 38
      00041A 26                    1316 	.db #0x26	; 38
      00041B 26                    1317 	.db #0x26	; 38
      00041C 26                    1318 	.db #0x26	; 38
      00041D 26                    1319 	.db #0x26	; 38
      00041E 26                    1320 	.db #0x26	; 38
      00041F 26                    1321 	.db #0x26	; 38
      000420 2B                    1322 	.db #0x2b	; 43
      000421 26                    1323 	.db #0x26	; 38
      000422 26                    1324 	.db #0x26	; 38
      000423 26                    1325 	.db #0x26	; 38
      000424 26                    1326 	.db #0x26	; 38
      000425 26                    1327 	.db #0x26	; 38
      000426 26                    1328 	.db #0x26	; 38
      000427 26                    1329 	.db #0x26	; 38
      000428 26                    1330 	.db #0x26	; 38
      000429 26                    1331 	.db #0x26	; 38
      00042A 26                    1332 	.db #0x26	; 38
      00042B 26                    1333 	.db #0x26	; 38
      00042C 26                    1334 	.db #0x26	; 38
      00042D 26                    1335 	.db #0x26	; 38
      00042E 26                    1336 	.db #0x26	; 38
      00042F 26                    1337 	.db #0x26	; 38
      000430 26                    1338 	.db #0x26	; 38
      000431 26                    1339 	.db #0x26	; 38
      000432 26                    1340 	.db #0x26	; 38
      000433 26                    1341 	.db #0x26	; 38
      000434 26                    1342 	.db #0x26	; 38
      000435 26                    1343 	.db #0x26	; 38
      000436 26                    1344 	.db #0x26	; 38
      000437 2C                    1345 	.db #0x2c	; 44
      000438 26                    1346 	.db #0x26	; 38
      000439 26                    1347 	.db #0x26	; 38
      00043A 26                    1348 	.db #0x26	; 38
      00043B 26                    1349 	.db #0x26	; 38
      00043C 26                    1350 	.db #0x26	; 38
      00043D 26                    1351 	.db #0x26	; 38
      00043E 26                    1352 	.db #0x26	; 38
      00043F 26                    1353 	.db #0x26	; 38
      000440 26                    1354 	.db #0x26	; 38
      000441 26                    1355 	.db #0x26	; 38
      000442 26                    1356 	.db #0x26	; 38
      000443 26                    1357 	.db #0x26	; 38
      000444 26                    1358 	.db #0x26	; 38
      000445 26                    1359 	.db #0x26	; 38
      000446 26                    1360 	.db #0x26	; 38
      000447 26                    1361 	.db #0x26	; 38
      000448 25                    1362 	.db #0x25	; 37
      000449 2C                    1363 	.db #0x2c	; 44
      00044A 26                    1364 	.db #0x26	; 38
      00044B 26                    1365 	.db #0x26	; 38
      00044C 26                    1366 	.db #0x26	; 38
      00044D 26                    1367 	.db #0x26	; 38
      00044E 26                    1368 	.db #0x26	; 38
      00044F 26                    1369 	.db #0x26	; 38
      000450 26                    1370 	.db #0x26	; 38
      000451 26                    1371 	.db #0x26	; 38
      000452 26                    1372 	.db #0x26	; 38
      000453 26                    1373 	.db #0x26	; 38
      000454 26                    1374 	.db #0x26	; 38
      000455 26                    1375 	.db #0x26	; 38
      000456 26                    1376 	.db #0x26	; 38
      000457 26                    1377 	.db #0x26	; 38
      000458 26                    1378 	.db #0x26	; 38
      000459 26                    1379 	.db #0x26	; 38
      00045A 2B                    1380 	.db #0x2b	; 43
      00045B 26                    1381 	.db #0x26	; 38
      00045C 26                    1382 	.db #0x26	; 38
      00045D 26                    1383 	.db #0x26	; 38
      00045E 26                    1384 	.db #0x26	; 38
      00045F 26                    1385 	.db #0x26	; 38
      000460 26                    1386 	.db #0x26	; 38
      000461 26                    1387 	.db #0x26	; 38
      000462 26                    1388 	.db #0x26	; 38
      000463 26                    1389 	.db #0x26	; 38
      000464 26                    1390 	.db #0x26	; 38
      000465 26                    1391 	.db #0x26	; 38
      000466 26                    1392 	.db #0x26	; 38
      000467 26                    1393 	.db #0x26	; 38
      000468 26                    1394 	.db #0x26	; 38
      000469 26                    1395 	.db #0x26	; 38
      00046A 26                    1396 	.db #0x26	; 38
      00046B 26                    1397 	.db #0x26	; 38
      00046C 26                    1398 	.db #0x26	; 38
      00046D 26                    1399 	.db #0x26	; 38
      00046E 26                    1400 	.db #0x26	; 38
      00046F 26                    1401 	.db #0x26	; 38
      000470 26                    1402 	.db #0x26	; 38
      000471 26                    1403 	.db #0x26	; 38
      000472 27                    1404 	.db #0x27	; 39
      000473 28                    1405 	.db #0x28	; 40
      000474 26                    1406 	.db #0x26	; 38
      000475 26                    1407 	.db #0x26	; 38
      000476 26                    1408 	.db #0x26	; 38
      000477 26                    1409 	.db #0x26	; 38
      000478 26                    1410 	.db #0x26	; 38
      000479 26                    1411 	.db #0x26	; 38
      00047A 26                    1412 	.db #0x26	; 38
      00047B 26                    1413 	.db #0x26	; 38
      00047C 26                    1414 	.db #0x26	; 38
      00047D 26                    1415 	.db #0x26	; 38
      00047E 26                    1416 	.db #0x26	; 38
      00047F 26                    1417 	.db #0x26	; 38
      000480 26                    1418 	.db #0x26	; 38
      000481 26                    1419 	.db #0x26	; 38
      000482 26                    1420 	.db #0x26	; 38
      000483 26                    1421 	.db #0x26	; 38
      000484 26                    1422 	.db #0x26	; 38
      000485 26                    1423 	.db #0x26	; 38
      000486 2B                    1424 	.db #0x2b	; 43
      000487                       1425 _backgroundtiles:
      000487 40                    1426 	.db #0x40	; 64
      000488 38                    1427 	.db #0x38	; 56	'8'
      000489 3A                    1428 	.db #0x3a	; 58
      00048A 44                    1429 	.db #0x44	; 68	'D'
      00048B 7C                    1430 	.db #0x7c	; 124
      00048C 9A                    1431 	.db #0x9a	; 154
      00048D 5E                    1432 	.db #0x5e	; 94
      00048E E9                    1433 	.db #0xe9	; 233
      00048F 7A                    1434 	.db #0x7a	; 122	'z'
      000490 87                    1435 	.db #0x87	; 135
      000491 76                    1436 	.db #0x76	; 118	'v'
      000492 B9                    1437 	.db #0xb9	; 185
      000493 3C                    1438 	.db #0x3c	; 60
      000494 72                    1439 	.db #0x72	; 114	'r'
      000495 00                    1440 	.db #0x00	; 0
      000496 3C                    1441 	.db #0x3c	; 60
      000497 00                    1442 	.db #0x00	; 0
      000498 00                    1443 	.db #0x00	; 0
      000499 00                    1444 	.db #0x00	; 0
      00049A 00                    1445 	.db #0x00	; 0
      00049B 00                    1446 	.db #0x00	; 0
      00049C 00                    1447 	.db #0x00	; 0
      00049D 00                    1448 	.db #0x00	; 0
      00049E 00                    1449 	.db #0x00	; 0
      00049F 00                    1450 	.db #0x00	; 0
      0004A0 00                    1451 	.db #0x00	; 0
      0004A1 00                    1452 	.db #0x00	; 0
      0004A2 00                    1453 	.db #0x00	; 0
      0004A3 00                    1454 	.db #0x00	; 0
      0004A4 00                    1455 	.db #0x00	; 0
      0004A5 00                    1456 	.db #0x00	; 0
      0004A6 00                    1457 	.db #0x00	; 0
      0004A7 00                    1458 	.db #0x00	; 0
      0004A8 0F                    1459 	.db #0x0f	; 15
      0004A9 08                    1460 	.db #0x08	; 8
      0004AA 17                    1461 	.db #0x17	; 23
      0004AB 1C                    1462 	.db #0x1c	; 28
      0004AC 23                    1463 	.db #0x23	; 35
      0004AD 3E                    1464 	.db #0x3e	; 62
      0004AE 41                    1465 	.db #0x41	; 65	'A'
      0004AF 1B                    1466 	.db #0x1b	; 27
      0004B0 64                    1467 	.db #0x64	; 100	'd'
      0004B1 31                    1468 	.db #0x31	; 49	'1'
      0004B2 4E                    1469 	.db #0x4e	; 78	'N'
      0004B3 B1                    1470 	.db #0xb1	; 177
      0004B4 CE                    1471 	.db #0xce	; 206
      0004B5 BB                    1472 	.db #0xbb	; 187
      0004B6 C4                    1473 	.db #0xc4	; 196
      0004B7 00                    1474 	.db #0x00	; 0
      0004B8 F8                    1475 	.db #0xf8	; 248
      0004B9 00                    1476 	.db #0x00	; 0
      0004BA FC                    1477 	.db #0xfc	; 252
      0004BB E0                    1478 	.db #0xe0	; 224
      0004BC 1E                    1479 	.db #0x1e	; 30
      0004BD F0                    1480 	.db #0xf0	; 240
      0004BE 0F                    1481 	.db #0x0f	; 15
      0004BF BE                    1482 	.db #0xbe	; 190
      0004C0 01                    1483 	.db #0x01	; 1
      0004C1 BC                    1484 	.db #0xbc	; 188
      0004C2 02                    1485 	.db #0x02	; 2
      0004C3 CE                    1486 	.db #0xce	; 206
      0004C4 01                    1487 	.db #0x01	; 1
      0004C5 F6                    1488 	.db #0xf6	; 246
      0004C6 61                    1489 	.db #0x61	; 97	'a'
      0004C7 F4                    1490 	.db #0xf4	; 244
      0004C8 02                    1491 	.db #0x02	; 2
      0004C9 94                    1492 	.db #0x94	; 148
      0004CA 62                    1493 	.db #0x62	; 98	'b'
      0004CB E4                    1494 	.db #0xe4	; 228
      0004CC 02                    1495 	.db #0x02	; 2
      0004CD 6C                    1496 	.db #0x6c	; 108	'l'
      0004CE 82                    1497 	.db #0x82	; 130
      0004CF 70                    1498 	.db #0x70	; 112	'p'
      0004D0 8C                    1499 	.db #0x8c	; 140
      0004D1 60                    1500 	.db #0x60	; 96
      0004D2 90                    1501 	.db #0x90	; 144
      0004D3 00                    1502 	.db #0x00	; 0
      0004D4 E0                    1503 	.db #0xe0	; 224
      0004D5 80                    1504 	.db #0x80	; 128
      0004D6 80                    1505 	.db #0x80	; 128
      0004D7 8E                    1506 	.db #0x8e	; 142
      0004D8 F7                    1507 	.db #0xf7	; 247
      0004D9 8F                    1508 	.db #0x8f	; 143
      0004DA F3                    1509 	.db #0xf3	; 243
      0004DB 86                    1510 	.db #0x86	; 134
      0004DC F9                    1511 	.db #0xf9	; 249
      0004DD 42                    1512 	.db #0x42	; 66	'B'
      0004DE 7D                    1513 	.db #0x7d	; 125
      0004DF 80                    1514 	.db #0x80	; 128
      0004E0 FF                    1515 	.db #0xff	; 255
      0004E1 44                    1516 	.db #0x44	; 68	'D'
      0004E2 7F                    1517 	.db #0x7f	; 127
      0004E3 28                    1518 	.db #0x28	; 40
      0004E4 3F                    1519 	.db #0x3f	; 63
      0004E5 07                    1520 	.db #0x07	; 7
      0004E6 07                    1521 	.db #0x07	; 7
      0004E7 00                    1522 	.db #0x00	; 0
      0004E8 00                    1523 	.db #0x00	; 0
      0004E9 08                    1524 	.db #0x08	; 8
      0004EA 00                    1525 	.db #0x00	; 0
      0004EB 08                    1526 	.db #0x08	; 8
      0004EC 00                    1527 	.db #0x00	; 0
      0004ED 1C                    1528 	.db #0x1c	; 28
      0004EE 00                    1529 	.db #0x00	; 0
      0004EF 7F                    1530 	.db #0x7f	; 127
      0004F0 00                    1531 	.db #0x00	; 0
      0004F1 1C                    1532 	.db #0x1c	; 28
      0004F2 00                    1533 	.db #0x00	; 0
      0004F3 08                    1534 	.db #0x08	; 8
      0004F4 00                    1535 	.db #0x00	; 0
      0004F5 08                    1536 	.db #0x08	; 8
      0004F6 00                    1537 	.db #0x00	; 0
      0004F7 00                    1538 	.db #0x00	; 0
      0004F8 00                    1539 	.db #0x00	; 0
      0004F9 00                    1540 	.db #0x00	; 0
      0004FA 00                    1541 	.db #0x00	; 0
      0004FB 00                    1542 	.db #0x00	; 0
      0004FC 00                    1543 	.db #0x00	; 0
      0004FD 10                    1544 	.db #0x10	; 16
      0004FE 00                    1545 	.db #0x00	; 0
      0004FF 00                    1546 	.db #0x00	; 0
      000500 00                    1547 	.db #0x00	; 0
      000501 00                    1548 	.db #0x00	; 0
      000502 00                    1549 	.db #0x00	; 0
      000503 00                    1550 	.db #0x00	; 0
      000504 00                    1551 	.db #0x00	; 0
      000505 00                    1552 	.db #0x00	; 0
      000506 00                    1553 	.db #0x00	; 0
      000507                       1554 _healthblock:
      000507 FE                    1555 	.db #0xfe	; 254
      000508 FE                    1556 	.db #0xfe	; 254
      000509 FE                    1557 	.db #0xfe	; 254
      00050A FE                    1558 	.db #0xfe	; 254
      00050B FE                    1559 	.db #0xfe	; 254
      00050C FE                    1560 	.db #0xfe	; 254
      00050D FE                    1561 	.db #0xfe	; 254
      00050E FE                    1562 	.db #0xfe	; 254
      00050F FE                    1563 	.db #0xfe	; 254
      000510 FE                    1564 	.db #0xfe	; 254
      000511 FE                    1565 	.db #0xfe	; 254
      000512 FE                    1566 	.db #0xfe	; 254
      000513 FE                    1567 	.db #0xfe	; 254
      000514 FE                    1568 	.db #0xfe	; 254
      000515 00                    1569 	.db #0x00	; 0
      000516 00                    1570 	.db #0x00	; 0
      000517                       1571 _enemyOptionCount:
      000517 05                    1572 	.db #0x05	; 5
      000518                       1573 _enemy1:
      000518 66                    1574 	.db #0x66	; 102	'f'
      000519 24                    1575 	.db #0x24	; 36
      00051A E7                    1576 	.db #0xe7	; 231
      00051B 66                    1577 	.db #0x66	; 102	'f'
      00051C F7                    1578 	.db #0xf7	; 247
      00051D E7                    1579 	.db #0xe7	; 231
      00051E 1C                    1580 	.db #0x1c	; 28
      00051F 18                    1581 	.db #0x18	; 24
      000520 38                    1582 	.db #0x38	; 56	'8'
      000521 18                    1583 	.db #0x18	; 24
      000522 EF                    1584 	.db #0xef	; 239
      000523 E7                    1585 	.db #0xe7	; 231
      000524 E7                    1586 	.db #0xe7	; 231
      000525 66                    1587 	.db #0x66	; 102	'f'
      000526 66                    1588 	.db #0x66	; 102	'f'
      000527 24                    1589 	.db #0x24	; 36
      000528 00                    1590 	.db #0x00	; 0
      000529 00                    1591 	.db #0x00	; 0
      00052A 00                    1592 	.db #0x00	; 0
      00052B 00                    1593 	.db #0x00	; 0
      00052C 00                    1594 	.db #0x00	; 0
      00052D 00                    1595 	.db #0x00	; 0
      00052E 00                    1596 	.db #0x00	; 0
      00052F 00                    1597 	.db #0x00	; 0
      000530 00                    1598 	.db #0x00	; 0
      000531 00                    1599 	.db #0x00	; 0
      000532 00                    1600 	.db #0x00	; 0
      000533 00                    1601 	.db #0x00	; 0
      000534 00                    1602 	.db #0x00	; 0
      000535 00                    1603 	.db #0x00	; 0
      000536 00                    1604 	.db #0x00	; 0
      000537 00                    1605 	.db #0x00	; 0
      000538 3C                    1606 	.db #0x3c	; 60
      000539 3C                    1607 	.db #0x3c	; 60
      00053A 5E                    1608 	.db #0x5e	; 94
      00053B 62                    1609 	.db #0x62	; 98	'b'
      00053C 8F                    1610 	.db #0x8f	; 143
      00053D F1                    1611 	.db #0xf1	; 241
      00053E C7                    1612 	.db #0xc7	; 199
      00053F F9                    1613 	.db #0xf9	; 249
      000540 C3                    1614 	.db #0xc3	; 195
      000541 FD                    1615 	.db #0xfd	; 253
      000542 E1                    1616 	.db #0xe1	; 225
      000543 FF                    1617 	.db #0xff	; 255
      000544 7A                    1618 	.db #0x7a	; 122	'z'
      000545 7E                    1619 	.db #0x7e	; 126
      000546 3C                    1620 	.db #0x3c	; 60
      000547 3C                    1621 	.db #0x3c	; 60
      000548 00                    1622 	.db #0x00	; 0
      000549 00                    1623 	.db #0x00	; 0
      00054A 00                    1624 	.db #0x00	; 0
      00054B 00                    1625 	.db #0x00	; 0
      00054C 00                    1626 	.db #0x00	; 0
      00054D 00                    1627 	.db #0x00	; 0
      00054E 00                    1628 	.db #0x00	; 0
      00054F 00                    1629 	.db #0x00	; 0
      000550 00                    1630 	.db #0x00	; 0
      000551 00                    1631 	.db #0x00	; 0
      000552 00                    1632 	.db #0x00	; 0
      000553 00                    1633 	.db #0x00	; 0
      000554 00                    1634 	.db #0x00	; 0
      000555 00                    1635 	.db #0x00	; 0
      000556 00                    1636 	.db #0x00	; 0
      000557 00                    1637 	.db #0x00	; 0
      000558 3C                    1638 	.db #0x3c	; 60
      000559 3E                    1639 	.db #0x3e	; 62
      00055A 20                    1640 	.db #0x20	; 32
      00055B 38                    1641 	.db #0x38	; 56	'8'
      00055C 44                    1642 	.db #0x44	; 68	'D'
      00055D 78                    1643 	.db #0x78	; 120	'x'
      00055E BA                    1644 	.db #0xba	; 186
      00055F C4                    1645 	.db #0xc4	; 196
      000560 BA                    1646 	.db #0xba	; 186
      000561 C4                    1647 	.db #0xc4	; 196
      000562 44                    1648 	.db #0x44	; 68	'D'
      000563 78                    1649 	.db #0x78	; 120	'x'
      000564 20                    1650 	.db #0x20	; 32
      000565 38                    1651 	.db #0x38	; 56	'8'
      000566 3C                    1652 	.db #0x3c	; 60
      000567 3E                    1653 	.db #0x3e	; 62
      000568                       1654 _largeenemies:
      000568 00                    1655 	.db #0x00	; 0
      000569 00                    1656 	.db #0x00	; 0
      00056A 00                    1657 	.db #0x00	; 0
      00056B 00                    1658 	.db #0x00	; 0
      00056C 00                    1659 	.db #0x00	; 0
      00056D 00                    1660 	.db #0x00	; 0
      00056E 00                    1661 	.db #0x00	; 0
      00056F 00                    1662 	.db #0x00	; 0
      000570 00                    1663 	.db #0x00	; 0
      000571 00                    1664 	.db #0x00	; 0
      000572 00                    1665 	.db #0x00	; 0
      000573 00                    1666 	.db #0x00	; 0
      000574 00                    1667 	.db #0x00	; 0
      000575 00                    1668 	.db #0x00	; 0
      000576 7F                    1669 	.db #0x7f	; 127
      000577 7F                    1670 	.db #0x7f	; 127
      000578 7F                    1671 	.db #0x7f	; 127
      000579 7F                    1672 	.db #0x7f	; 127
      00057A 00                    1673 	.db #0x00	; 0
      00057B 00                    1674 	.db #0x00	; 0
      00057C 00                    1675 	.db #0x00	; 0
      00057D 00                    1676 	.db #0x00	; 0
      00057E 00                    1677 	.db #0x00	; 0
      00057F 00                    1678 	.db #0x00	; 0
      000580 00                    1679 	.db #0x00	; 0
      000581 00                    1680 	.db #0x00	; 0
      000582 00                    1681 	.db #0x00	; 0
      000583 00                    1682 	.db #0x00	; 0
      000584 00                    1683 	.db #0x00	; 0
      000585 00                    1684 	.db #0x00	; 0
      000586 00                    1685 	.db #0x00	; 0
      000587 00                    1686 	.db #0x00	; 0
      000588 00                    1687 	.db #0x00	; 0
      000589 00                    1688 	.db #0x00	; 0
      00058A 40                    1689 	.db #0x40	; 64
      00058B 40                    1690 	.db #0x40	; 64
      00058C 60                    1691 	.db #0x60	; 96
      00058D 60                    1692 	.db #0x60	; 96
      00058E 70                    1693 	.db #0x70	; 112	'p'
      00058F 70                    1694 	.db #0x70	; 112	'p'
      000590 78                    1695 	.db #0x78	; 120	'x'
      000591 78                    1696 	.db #0x78	; 120	'x'
      000592 7C                    1697 	.db #0x7c	; 124
      000593 7C                    1698 	.db #0x7c	; 124
      000594 7E                    1699 	.db #0x7e	; 126
      000595 7E                    1700 	.db #0x7e	; 126
      000596 FF                    1701 	.db #0xff	; 255
      000597 FF                    1702 	.db #0xff	; 255
      000598 FF                    1703 	.db #0xff	; 255
      000599 FF                    1704 	.db #0xff	; 255
      00059A 7E                    1705 	.db #0x7e	; 126
      00059B 7E                    1706 	.db #0x7e	; 126
      00059C 7C                    1707 	.db #0x7c	; 124
      00059D 7C                    1708 	.db #0x7c	; 124
      00059E 78                    1709 	.db #0x78	; 120	'x'
      00059F 78                    1710 	.db #0x78	; 120	'x'
      0005A0 70                    1711 	.db #0x70	; 112	'p'
      0005A1 70                    1712 	.db #0x70	; 112	'p'
      0005A2 60                    1713 	.db #0x60	; 96
      0005A3 60                    1714 	.db #0x60	; 96
      0005A4 40                    1715 	.db #0x40	; 64
      0005A5 40                    1716 	.db #0x40	; 64
      0005A6 00                    1717 	.db #0x00	; 0
      0005A7 00                    1718 	.db #0x00	; 0
      0005A8 07                    1719 	.db #0x07	; 7
      0005A9 00                    1720 	.db #0x00	; 0
      0005AA 18                    1721 	.db #0x18	; 24
      0005AB 00                    1722 	.db #0x00	; 0
      0005AC 20                    1723 	.db #0x20	; 32
      0005AD 00                    1724 	.db #0x00	; 0
      0005AE 4C                    1725 	.db #0x4c	; 76	'L'
      0005AF 0C                    1726 	.db #0x0c	; 12
      0005B0 43                    1727 	.db #0x43	; 67	'C'
      0005B1 0F                    1728 	.db #0x0f	; 15
      0005B2 84                    1729 	.db #0x84	; 132
      0005B3 27                    1730 	.db #0x27	; 39
      0005B4 80                    1731 	.db #0x80	; 128
      0005B5 13                    1732 	.db #0x13	; 19
      0005B6 83                    1733 	.db #0x83	; 131
      0005B7 2A                    1734 	.db #0x2a	; 42
      0005B8 83                    1735 	.db #0x83	; 131
      0005B9 16                    1736 	.db #0x16	; 22
      0005BA 80                    1737 	.db #0x80	; 128
      0005BB 23                    1738 	.db #0x23	; 35
      0005BC 84                    1739 	.db #0x84	; 132
      0005BD 07                    1740 	.db #0x07	; 7
      0005BE 43                    1741 	.db #0x43	; 67	'C'
      0005BF 0F                    1742 	.db #0x0f	; 15
      0005C0 4C                    1743 	.db #0x4c	; 76	'L'
      0005C1 0C                    1744 	.db #0x0c	; 12
      0005C2 20                    1745 	.db #0x20	; 32
      0005C3 00                    1746 	.db #0x00	; 0
      0005C4 18                    1747 	.db #0x18	; 24
      0005C5 00                    1748 	.db #0x00	; 0
      0005C6 07                    1749 	.db #0x07	; 7
      0005C7 00                    1750 	.db #0x00	; 0
      0005C8 E0                    1751 	.db #0xe0	; 224
      0005C9 00                    1752 	.db #0x00	; 0
      0005CA 18                    1753 	.db #0x18	; 24
      0005CB 00                    1754 	.db #0x00	; 0
      0005CC 04                    1755 	.db #0x04	; 4
      0005CD 00                    1756 	.db #0x00	; 0
      0005CE 02                    1757 	.db #0x02	; 2
      0005CF 00                    1758 	.db #0x00	; 0
      0005D0 02                    1759 	.db #0x02	; 2
      0005D1 00                    1760 	.db #0x00	; 0
      0005D2 C1                    1761 	.db #0xc1	; 193
      0005D3 C0                    1762 	.db #0xc0	; 192
      0005D4 11                    1763 	.db #0x11	; 17
      0005D5 F0                    1764 	.db #0xf0	; 240
      0005D6 E5                    1765 	.db #0xe5	; 229
      0005D7 1C                    1766 	.db #0x1c	; 28
      0005D8 E5                    1767 	.db #0xe5	; 229
      0005D9 1C                    1768 	.db #0x1c	; 28
      0005DA 11                    1769 	.db #0x11	; 17
      0005DB F0                    1770 	.db #0xf0	; 240
      0005DC C1                    1771 	.db #0xc1	; 193
      0005DD C0                    1772 	.db #0xc0	; 192
      0005DE 02                    1773 	.db #0x02	; 2
      0005DF 00                    1774 	.db #0x00	; 0
      0005E0 02                    1775 	.db #0x02	; 2
      0005E1 00                    1776 	.db #0x00	; 0
      0005E2 04                    1777 	.db #0x04	; 4
      0005E3 00                    1778 	.db #0x00	; 0
      0005E4 18                    1779 	.db #0x18	; 24
      0005E5 00                    1780 	.db #0x00	; 0
      0005E6 E0                    1781 	.db #0xe0	; 224
      0005E7 00                    1782 	.db #0x00	; 0
      0005E8                       1783 _ProjectileTiles:
      0005E8 24                    1784 	.db #0x24	; 36
      0005E9 18                    1785 	.db #0x18	; 24
      0005EA 18                    1786 	.db #0x18	; 24
      0005EB 3C                    1787 	.db #0x3c	; 60
      0005EC 18                    1788 	.db #0x18	; 24
      0005ED 3C                    1789 	.db #0x3c	; 60
      0005EE 24                    1790 	.db #0x24	; 36
      0005EF 18                    1791 	.db #0x18	; 24
      0005F0 00                    1792 	.db #0x00	; 0
      0005F1 00                    1793 	.db #0x00	; 0
      0005F2 00                    1794 	.db #0x00	; 0
      0005F3 00                    1795 	.db #0x00	; 0
      0005F4 00                    1796 	.db #0x00	; 0
      0005F5 00                    1797 	.db #0x00	; 0
      0005F6 00                    1798 	.db #0x00	; 0
      0005F7 00                    1799 	.db #0x00	; 0
      0005F8 00                    1800 	.db #0x00	; 0
      0005F9 00                    1801 	.db #0x00	; 0
      0005FA 00                    1802 	.db #0x00	; 0
      0005FB 00                    1803 	.db #0x00	; 0
      0005FC 00                    1804 	.db #0x00	; 0
      0005FD 00                    1805 	.db #0x00	; 0
      0005FE 00                    1806 	.db #0x00	; 0
      0005FF 00                    1807 	.db #0x00	; 0
      000600 00                    1808 	.db #0x00	; 0
      000601 00                    1809 	.db #0x00	; 0
      000602 00                    1810 	.db #0x00	; 0
      000603 00                    1811 	.db #0x00	; 0
      000604 00                    1812 	.db #0x00	; 0
      000605 00                    1813 	.db #0x00	; 0
      000606 00                    1814 	.db #0x00	; 0
      000607 00                    1815 	.db #0x00	; 0
      000608 00                    1816 	.db #0x00	; 0
      000609 00                    1817 	.db #0x00	; 0
      00060A 00                    1818 	.db #0x00	; 0
      00060B 00                    1819 	.db #0x00	; 0
      00060C 09                    1820 	.db #0x09	; 9
      00060D 06                    1821 	.db #0x06	; 6
      00060E 06                    1822 	.db #0x06	; 6
      00060F 0F                    1823 	.db #0x0f	; 15
      000610 06                    1824 	.db #0x06	; 6
      000611 0F                    1825 	.db #0x0f	; 15
      000612 09                    1826 	.db #0x09	; 9
      000613 06                    1827 	.db #0x06	; 6
      000614 00                    1828 	.db #0x00	; 0
      000615 00                    1829 	.db #0x00	; 0
      000616 00                    1830 	.db #0x00	; 0
      000617 00                    1831 	.db #0x00	; 0
      000618 00                    1832 	.db #0x00	; 0
      000619 00                    1833 	.db #0x00	; 0
      00061A 00                    1834 	.db #0x00	; 0
      00061B 00                    1835 	.db #0x00	; 0
      00061C 00                    1836 	.db #0x00	; 0
      00061D 00                    1837 	.db #0x00	; 0
      00061E 00                    1838 	.db #0x00	; 0
      00061F 00                    1839 	.db #0x00	; 0
      000620 00                    1840 	.db #0x00	; 0
      000621 00                    1841 	.db #0x00	; 0
      000622 00                    1842 	.db #0x00	; 0
      000623 00                    1843 	.db #0x00	; 0
      000624 00                    1844 	.db #0x00	; 0
      000625 00                    1845 	.db #0x00	; 0
      000626 00                    1846 	.db #0x00	; 0
      000627 00                    1847 	.db #0x00	; 0
      000628 09                    1848 	.db #0x09	; 9
      000629 06                    1849 	.db #0x06	; 6
      00062A 06                    1850 	.db #0x06	; 6
      00062B 0F                    1851 	.db #0x0f	; 15
      00062C 06                    1852 	.db #0x06	; 6
      00062D 0F                    1853 	.db #0x0f	; 15
      00062E 09                    1854 	.db #0x09	; 9
      00062F 06                    1855 	.db #0x06	; 6
      000630 00                    1856 	.db #0x00	; 0
      000631 00                    1857 	.db #0x00	; 0
      000632 00                    1858 	.db #0x00	; 0
      000633 00                    1859 	.db #0x00	; 0
      000634 00                    1860 	.db #0x00	; 0
      000635 00                    1861 	.db #0x00	; 0
      000636 00                    1862 	.db #0x00	; 0
      000637 00                    1863 	.db #0x00	; 0
      000638 00                    1864 	.db #0x00	; 0
      000639 00                    1865 	.db #0x00	; 0
      00063A 00                    1866 	.db #0x00	; 0
      00063B 00                    1867 	.db #0x00	; 0
      00063C 00                    1868 	.db #0x00	; 0
      00063D 00                    1869 	.db #0x00	; 0
      00063E 00                    1870 	.db #0x00	; 0
      00063F 00                    1871 	.db #0x00	; 0
      000640 00                    1872 	.db #0x00	; 0
      000641 00                    1873 	.db #0x00	; 0
      000642 00                    1874 	.db #0x00	; 0
      000643 00                    1875 	.db #0x00	; 0
      000644 00                    1876 	.db #0x00	; 0
      000645 00                    1877 	.db #0x00	; 0
      000646 00                    1878 	.db #0x00	; 0
      000647 00                    1879 	.db #0x00	; 0
      000648 99                    1880 	.db #0x99	; 153
      000649 66                    1881 	.db #0x66	; 102	'f'
      00064A 66                    1882 	.db #0x66	; 102	'f'
      00064B FF                    1883 	.db #0xff	; 255
      00064C 66                    1884 	.db #0x66	; 102	'f'
      00064D FF                    1885 	.db #0xff	; 255
      00064E 99                    1886 	.db #0x99	; 153
      00064F 66                    1887 	.db #0x66	; 102	'f'
      000650 00                    1888 	.db #0x00	; 0
      000651 00                    1889 	.db #0x00	; 0
      000652 00                    1890 	.db #0x00	; 0
      000653 00                    1891 	.db #0x00	; 0
      000654 00                    1892 	.db #0x00	; 0
      000655 00                    1893 	.db #0x00	; 0
      000656 00                    1894 	.db #0x00	; 0
      000657 00                    1895 	.db #0x00	; 0
      000658 00                    1896 	.db #0x00	; 0
      000659 00                    1897 	.db #0x00	; 0
      00065A 00                    1898 	.db #0x00	; 0
      00065B 00                    1899 	.db #0x00	; 0
      00065C 00                    1900 	.db #0x00	; 0
      00065D 00                    1901 	.db #0x00	; 0
      00065E 00                    1902 	.db #0x00	; 0
      00065F 00                    1903 	.db #0x00	; 0
      000660 00                    1904 	.db #0x00	; 0
      000661 00                    1905 	.db #0x00	; 0
      000662 00                    1906 	.db #0x00	; 0
      000663 00                    1907 	.db #0x00	; 0
      000664 00                    1908 	.db #0x00	; 0
      000665 00                    1909 	.db #0x00	; 0
      000666 00                    1910 	.db #0x00	; 0
      000667 00                    1911 	.db #0x00	; 0
      000668 09                    1912 	.db #0x09	; 9
      000669 06                    1913 	.db #0x06	; 6
      00066A 06                    1914 	.db #0x06	; 6
      00066B 0F                    1915 	.db #0x0f	; 15
      00066C 06                    1916 	.db #0x06	; 6
      00066D 0F                    1917 	.db #0x0f	; 15
      00066E 09                    1918 	.db #0x09	; 9
      00066F 06                    1919 	.db #0x06	; 6
      000670 09                    1920 	.db #0x09	; 9
      000671 06                    1921 	.db #0x06	; 6
      000672 06                    1922 	.db #0x06	; 6
      000673 0F                    1923 	.db #0x0f	; 15
      000674 06                    1924 	.db #0x06	; 6
      000675 0F                    1925 	.db #0x0f	; 15
      000676 09                    1926 	.db #0x09	; 9
      000677 06                    1927 	.db #0x06	; 6
      000678 00                    1928 	.db #0x00	; 0
      000679 00                    1929 	.db #0x00	; 0
      00067A 00                    1930 	.db #0x00	; 0
      00067B 00                    1931 	.db #0x00	; 0
      00067C 00                    1932 	.db #0x00	; 0
      00067D 00                    1933 	.db #0x00	; 0
      00067E 00                    1934 	.db #0x00	; 0
      00067F 00                    1935 	.db #0x00	; 0
      000680 00                    1936 	.db #0x00	; 0
      000681 00                    1937 	.db #0x00	; 0
      000682 00                    1938 	.db #0x00	; 0
      000683 00                    1939 	.db #0x00	; 0
      000684 00                    1940 	.db #0x00	; 0
      000685 00                    1941 	.db #0x00	; 0
      000686 00                    1942 	.db #0x00	; 0
      000687 00                    1943 	.db #0x00	; 0
      000688 90                    1944 	.db #0x90	; 144
      000689 60                    1945 	.db #0x60	; 96
      00068A 60                    1946 	.db #0x60	; 96
      00068B F0                    1947 	.db #0xf0	; 240
      00068C 60                    1948 	.db #0x60	; 96
      00068D F0                    1949 	.db #0xf0	; 240
      00068E 90                    1950 	.db #0x90	; 144
      00068F 60                    1951 	.db #0x60	; 96
      000690 09                    1952 	.db #0x09	; 9
      000691 06                    1953 	.db #0x06	; 6
      000692 06                    1954 	.db #0x06	; 6
      000693 0F                    1955 	.db #0x0f	; 15
      000694 06                    1956 	.db #0x06	; 6
      000695 0F                    1957 	.db #0x0f	; 15
      000696 09                    1958 	.db #0x09	; 9
      000697 06                    1959 	.db #0x06	; 6
      000698 00                    1960 	.db #0x00	; 0
      000699 00                    1961 	.db #0x00	; 0
      00069A 00                    1962 	.db #0x00	; 0
      00069B 00                    1963 	.db #0x00	; 0
      00069C 00                    1964 	.db #0x00	; 0
      00069D 00                    1965 	.db #0x00	; 0
      00069E 00                    1966 	.db #0x00	; 0
      00069F 00                    1967 	.db #0x00	; 0
      0006A0 00                    1968 	.db #0x00	; 0
      0006A1 00                    1969 	.db #0x00	; 0
      0006A2 00                    1970 	.db #0x00	; 0
      0006A3 00                    1971 	.db #0x00	; 0
      0006A4 00                    1972 	.db #0x00	; 0
      0006A5 00                    1973 	.db #0x00	; 0
      0006A6 00                    1974 	.db #0x00	; 0
      0006A7 00                    1975 	.db #0x00	; 0
      0006A8 18                    1976 	.db #0x18	; 24
      0006A9 00                    1977 	.db #0x00	; 0
      0006AA 18                    1978 	.db #0x18	; 24
      0006AB 18                    1979 	.db #0x18	; 24
      0006AC 18                    1980 	.db #0x18	; 24
      0006AD 18                    1981 	.db #0x18	; 24
      0006AE 3C                    1982 	.db #0x3c	; 60
      0006AF 18                    1983 	.db #0x18	; 24
      0006B0 3C                    1984 	.db #0x3c	; 60
      0006B1 18                    1985 	.db #0x18	; 24
      0006B2 3C                    1986 	.db #0x3c	; 60
      0006B3 3C                    1987 	.db #0x3c	; 60
      0006B4 7E                    1988 	.db #0x7e	; 126
      0006B5 3C                    1989 	.db #0x3c	; 60
      0006B6 7E                    1990 	.db #0x7e	; 126
      0006B7 24                    1991 	.db #0x24	; 36
      0006B8 00                    1992 	.db #0x00	; 0
      0006B9 00                    1993 	.db #0x00	; 0
      0006BA 00                    1994 	.db #0x00	; 0
      0006BB 00                    1995 	.db #0x00	; 0
      0006BC 00                    1996 	.db #0x00	; 0
      0006BD 00                    1997 	.db #0x00	; 0
      0006BE 00                    1998 	.db #0x00	; 0
      0006BF 00                    1999 	.db #0x00	; 0
      0006C0 00                    2000 	.db #0x00	; 0
      0006C1 00                    2001 	.db #0x00	; 0
      0006C2 00                    2002 	.db #0x00	; 0
      0006C3 00                    2003 	.db #0x00	; 0
      0006C4 00                    2004 	.db #0x00	; 0
      0006C5 00                    2005 	.db #0x00	; 0
      0006C6 00                    2006 	.db #0x00	; 0
      0006C7 00                    2007 	.db #0x00	; 0
      0006C8 C0                    2008 	.db #0xc0	; 192
      0006C9 00                    2009 	.db #0x00	; 0
      0006CA F8                    2010 	.db #0xf8	; 248
      0006CB E0                    2011 	.db #0xe0	; 224
      0006CC FF                    2012 	.db #0xff	; 255
      0006CD 7E                    2013 	.db #0x7e	; 126
      0006CE FF                    2014 	.db #0xff	; 255
      0006CF 7E                    2015 	.db #0x7e	; 126
      0006D0 F8                    2016 	.db #0xf8	; 248
      0006D1 E0                    2017 	.db #0xe0	; 224
      0006D2 C0                    2018 	.db #0xc0	; 192
      0006D3 00                    2019 	.db #0x00	; 0
      0006D4 00                    2020 	.db #0x00	; 0
      0006D5 00                    2021 	.db #0x00	; 0
      0006D6 00                    2022 	.db #0x00	; 0
      0006D7 00                    2023 	.db #0x00	; 0
      0006D8 00                    2024 	.db #0x00	; 0
      0006D9 00                    2025 	.db #0x00	; 0
      0006DA 00                    2026 	.db #0x00	; 0
      0006DB 00                    2027 	.db #0x00	; 0
      0006DC 00                    2028 	.db #0x00	; 0
      0006DD 00                    2029 	.db #0x00	; 0
      0006DE 00                    2030 	.db #0x00	; 0
      0006DF 00                    2031 	.db #0x00	; 0
      0006E0 00                    2032 	.db #0x00	; 0
      0006E1 00                    2033 	.db #0x00	; 0
      0006E2 00                    2034 	.db #0x00	; 0
      0006E3 00                    2035 	.db #0x00	; 0
      0006E4 00                    2036 	.db #0x00	; 0
      0006E5 00                    2037 	.db #0x00	; 0
      0006E6 00                    2038 	.db #0x00	; 0
      0006E7 00                    2039 	.db #0x00	; 0
      0006E8 06                    2040 	.db #0x06	; 6
      0006E9 00                    2041 	.db #0x00	; 0
      0006EA 0F                    2042 	.db #0x0f	; 15
      0006EB 06                    2043 	.db #0x06	; 6
      0006EC 1F                    2044 	.db #0x1f	; 31
      0006ED 0E                    2045 	.db #0x0e	; 14
      0006EE 7E                    2046 	.db #0x7e	; 126
      0006EF 1C                    2047 	.db #0x1c	; 28
      0006F0 FC                    2048 	.db #0xfc	; 252
      0006F1 78                    2049 	.db #0x78	; 120	'x'
      0006F2 F8                    2050 	.db #0xf8	; 248
      0006F3 F0                    2051 	.db #0xf0	; 240
      0006F4 F8                    2052 	.db #0xf8	; 248
      0006F5 70                    2053 	.db #0x70	; 112	'p'
      0006F6 70                    2054 	.db #0x70	; 112	'p'
      0006F7 20                    2055 	.db #0x20	; 32
      0006F8 00                    2056 	.db #0x00	; 0
      0006F9 00                    2057 	.db #0x00	; 0
      0006FA 00                    2058 	.db #0x00	; 0
      0006FB 00                    2059 	.db #0x00	; 0
      0006FC 00                    2060 	.db #0x00	; 0
      0006FD 00                    2061 	.db #0x00	; 0
      0006FE 00                    2062 	.db #0x00	; 0
      0006FF 00                    2063 	.db #0x00	; 0
      000700 00                    2064 	.db #0x00	; 0
      000701 00                    2065 	.db #0x00	; 0
      000702 00                    2066 	.db #0x00	; 0
      000703 00                    2067 	.db #0x00	; 0
      000704 00                    2068 	.db #0x00	; 0
      000705 00                    2069 	.db #0x00	; 0
      000706 00                    2070 	.db #0x00	; 0
      000707 00                    2071 	.db #0x00	; 0
      000708                       2072 _upgrade:
      000708 01                    2073 	.db #0x01	; 1
      000709 00 00                 2074 	.dw #0x0000
      00070B 00 00                 2075 	.dw #0x0000
      00070D 00                    2076 	.db #0x00	; 0
      00070E 00                    2077 	.db #0x00	; 0
      00070F 00                    2078 	.db #0x00	; 0
      000710 70                    2079 	.db #0x70	; 112	'p'
      000711                       2080 _ammo:
      000711 01                    2081 	.db #0x01	; 1
      000712 00 00                 2082 	.dw #0x0000
      000714 00 00                 2083 	.dw #0x0000
      000716 00                    2084 	.db #0x00	; 0
      000717 01                    2085 	.db #0x01	; 1
      000718 05                    2086 	.db #0x05	; 5
      000719 72                    2087 	.db #0x72	; 114	'r'
      00071A                       2088 _health:
      00071A 01                    2089 	.db #0x01	; 1
      00071B 00 00                 2090 	.dw #0x0000
      00071D 00 00                 2091 	.dw #0x0000
      00071F 00                    2092 	.db #0x00	; 0
      000720 02                    2093 	.db #0x02	; 2
      000721 32                    2094 	.db #0x32	; 50	'2'
      000722 74                    2095 	.db #0x74	; 116	't'
      000723                       2096 _Pickups:
      000723 7E                    2097 	.db #0x7e	; 126
      000724 00                    2098 	.db #0x00	; 0
      000725 81                    2099 	.db #0x81	; 129
      000726 00                    2100 	.db #0x00	; 0
      000727 D7                    2101 	.db #0xd7	; 215
      000728 56                    2102 	.db #0x56	; 86	'V'
      000729 D7                    2103 	.db #0xd7	; 215
      00072A 56                    2104 	.db #0x56	; 86	'V'
      00072B D5                    2105 	.db #0xd5	; 213
      00072C 54                    2106 	.db #0x54	; 84	'T'
      00072D F5                    2107 	.db #0xf5	; 245
      00072E 74                    2108 	.db #0x74	; 116	't'
      00072F 81                    2109 	.db #0x81	; 129
      000730 00                    2110 	.db #0x00	; 0
      000731 7E                    2111 	.db #0x7e	; 126
      000732 00                    2112 	.db #0x00	; 0
      000733 00                    2113 	.db #0x00	; 0
      000734 00                    2114 	.db #0x00	; 0
      000735 00                    2115 	.db #0x00	; 0
      000736 00                    2116 	.db #0x00	; 0
      000737 00                    2117 	.db #0x00	; 0
      000738 00                    2118 	.db #0x00	; 0
      000739 00                    2119 	.db #0x00	; 0
      00073A 00                    2120 	.db #0x00	; 0
      00073B 00                    2121 	.db #0x00	; 0
      00073C 00                    2122 	.db #0x00	; 0
      00073D 00                    2123 	.db #0x00	; 0
      00073E 00                    2124 	.db #0x00	; 0
      00073F 00                    2125 	.db #0x00	; 0
      000740 00                    2126 	.db #0x00	; 0
      000741 00                    2127 	.db #0x00	; 0
      000742 00                    2128 	.db #0x00	; 0
      000743 7E                    2129 	.db #0x7e	; 126
      000744 00                    2130 	.db #0x00	; 0
      000745 8F                    2131 	.db #0x8f	; 143
      000746 06                    2132 	.db #0x06	; 6
      000747 9F                    2133 	.db #0x9f	; 159
      000748 0E                    2134 	.db #0x0e	; 14
      000749 FF                    2135 	.db #0xff	; 255
      00074A 1C                    2136 	.db #0x1c	; 28
      00074B FD                    2137 	.db #0xfd	; 253
      00074C 78                    2138 	.db #0x78	; 120	'x'
      00074D F9                    2139 	.db #0xf9	; 249
      00074E 70                    2140 	.db #0x70	; 112	'p'
      00074F F9                    2141 	.db #0xf9	; 249
      000750 70                    2142 	.db #0x70	; 112	'p'
      000751 7E                    2143 	.db #0x7e	; 126
      000752 00                    2144 	.db #0x00	; 0
      000753 00                    2145 	.db #0x00	; 0
      000754 00                    2146 	.db #0x00	; 0
      000755 00                    2147 	.db #0x00	; 0
      000756 00                    2148 	.db #0x00	; 0
      000757 00                    2149 	.db #0x00	; 0
      000758 00                    2150 	.db #0x00	; 0
      000759 00                    2151 	.db #0x00	; 0
      00075A 00                    2152 	.db #0x00	; 0
      00075B 00                    2153 	.db #0x00	; 0
      00075C 00                    2154 	.db #0x00	; 0
      00075D 00                    2155 	.db #0x00	; 0
      00075E 00                    2156 	.db #0x00	; 0
      00075F 00                    2157 	.db #0x00	; 0
      000760 00                    2158 	.db #0x00	; 0
      000761 00                    2159 	.db #0x00	; 0
      000762 00                    2160 	.db #0x00	; 0
      000763 7E                    2161 	.db #0x7e	; 126
      000764 00                    2162 	.db #0x00	; 0
      000765 99                    2163 	.db #0x99	; 153
      000766 18                    2164 	.db #0x18	; 24
      000767 99                    2165 	.db #0x99	; 153
      000768 18                    2166 	.db #0x18	; 24
      000769 FF                    2167 	.db #0xff	; 255
      00076A 7E                    2168 	.db #0x7e	; 126
      00076B FF                    2169 	.db #0xff	; 255
      00076C 7E                    2170 	.db #0x7e	; 126
      00076D 99                    2171 	.db #0x99	; 153
      00076E 18                    2172 	.db #0x18	; 24
      00076F 99                    2173 	.db #0x99	; 153
      000770 18                    2174 	.db #0x18	; 24
      000771 7E                    2175 	.db #0x7e	; 126
      000772 00                    2176 	.db #0x00	; 0
      000773 00                    2177 	.db #0x00	; 0
      000774 00                    2178 	.db #0x00	; 0
      000775 00                    2179 	.db #0x00	; 0
      000776 00                    2180 	.db #0x00	; 0
      000777 00                    2181 	.db #0x00	; 0
      000778 00                    2182 	.db #0x00	; 0
      000779 00                    2183 	.db #0x00	; 0
      00077A 00                    2184 	.db #0x00	; 0
      00077B 00                    2185 	.db #0x00	; 0
      00077C 00                    2186 	.db #0x00	; 0
      00077D 00                    2187 	.db #0x00	; 0
      00077E 00                    2188 	.db #0x00	; 0
      00077F 00                    2189 	.db #0x00	; 0
      000780 00                    2190 	.db #0x00	; 0
      000781 00                    2191 	.db #0x00	; 0
      000782 00                    2192 	.db #0x00	; 0
      000783                       2193 _Player1:
      000783 08                    2194 	.db #0x08	; 8
      000784 08                    2195 	.db #0x08	; 8
      000785 1C                    2196 	.db #0x1c	; 28
      000786 14                    2197 	.db #0x14	; 20
      000787 38                    2198 	.db #0x38	; 56	'8'
      000788 28                    2199 	.db #0x28	; 40
      000789 68                    2200 	.db #0x68	; 104	'h'
      00078A 58                    2201 	.db #0x58	; 88	'X'
      00078B 50                    2202 	.db #0x50	; 80	'P'
      00078C 71                    2203 	.db #0x71	; 113	'q'
      00078D D0                    2204 	.db #0xd0	; 208
      00078E B2                    2205 	.db #0xb2	; 178
      00078F D5                    2206 	.db #0xd5	; 213
      000790 B6                    2207 	.db #0xb6	; 182
      000791 D5                    2208 	.db #0xd5	; 213
      000792 B6                    2209 	.db #0xb6	; 182
      000793 D5                    2210 	.db #0xd5	; 213
      000794 B6                    2211 	.db #0xb6	; 182
      000795 CD                    2212 	.db #0xcd	; 205
      000796 BE                    2213 	.db #0xbe	; 190
      000797 C5                    2214 	.db #0xc5	; 197
      000798 BE                    2215 	.db #0xbe	; 190
      000799 65                    2216 	.db #0x65	; 101	'e'
      00079A 5E                    2217 	.db #0x5e	; 94
      00079B 3E                    2218 	.db #0x3e	; 62
      00079C 2F                    2219 	.db #0x2f	; 47
      00079D 13                    2220 	.db #0x13	; 19
      00079E 13                    2221 	.db #0x13	; 19
      00079F 06                    2222 	.db #0x06	; 6
      0007A0 07                    2223 	.db #0x07	; 7
      0007A1 07                    2224 	.db #0x07	; 7
      0007A2 05                    2225 	.db #0x05	; 5
      0007A3 10                    2226 	.db #0x10	; 16
      0007A4 10                    2227 	.db #0x10	; 16
      0007A5 38                    2228 	.db #0x38	; 56	'8'
      0007A6 28                    2229 	.db #0x28	; 40
      0007A7 1C                    2230 	.db #0x1c	; 28
      0007A8 14                    2231 	.db #0x14	; 20
      0007A9 16                    2232 	.db #0x16	; 22
      0007AA 1A                    2233 	.db #0x1a	; 26
      0007AB 0A                    2234 	.db #0x0a	; 10
      0007AC 8E                    2235 	.db #0x8e	; 142
      0007AD 0B                    2236 	.db #0x0b	; 11
      0007AE 4D                    2237 	.db #0x4d	; 77	'M'
      0007AF AB                    2238 	.db #0xab	; 171
      0007B0 6D                    2239 	.db #0x6d	; 109	'm'
      0007B1 AB                    2240 	.db #0xab	; 171
      0007B2 6D                    2241 	.db #0x6d	; 109	'm'
      0007B3 AB                    2242 	.db #0xab	; 171
      0007B4 6D                    2243 	.db #0x6d	; 109	'm'
      0007B5 B3                    2244 	.db #0xb3	; 179
      0007B6 7D                    2245 	.db #0x7d	; 125
      0007B7 A3                    2246 	.db #0xa3	; 163
      0007B8 7D                    2247 	.db #0x7d	; 125
      0007B9 A6                    2248 	.db #0xa6	; 166
      0007BA 7A                    2249 	.db #0x7a	; 122	'z'
      0007BB 7C                    2250 	.db #0x7c	; 124
      0007BC F4                    2251 	.db #0xf4	; 244
      0007BD C8                    2252 	.db #0xc8	; 200
      0007BE C8                    2253 	.db #0xc8	; 200
      0007BF 60                    2254 	.db #0x60	; 96
      0007C0 E0                    2255 	.db #0xe0	; 224
      0007C1 E0                    2256 	.db #0xe0	; 224
      0007C2 A0                    2257 	.db #0xa0	; 160
      0007C3 07                    2258 	.db #0x07	; 7
      0007C4 07                    2259 	.db #0x07	; 7
      0007C5 0F                    2260 	.db #0x0f	; 15
      0007C6 08                    2261 	.db #0x08	; 8
      0007C7 18                    2262 	.db #0x18	; 24
      0007C8 17                    2263 	.db #0x17	; 23
      0007C9 31                    2264 	.db #0x31	; 49	'1'
      0007CA 2F                    2265 	.db #0x2f	; 47
      0007CB 12                    2266 	.db #0x12	; 18
      0007CC 1E                    2267 	.db #0x1e	; 30
      0007CD DF                    2268 	.db #0xdf	; 223
      0007CE DF                    2269 	.db #0xdf	; 223
      0007CF F0                    2270 	.db #0xf0	; 240
      0007D0 7F                    2271 	.db #0x7f	; 127
      0007D1 AF                    2272 	.db #0xaf	; 175
      0007D2 F0                    2273 	.db #0xf0	; 240
      0007D3 AF                    2274 	.db #0xaf	; 175
      0007D4 F0                    2275 	.db #0xf0	; 240
      0007D5 F0                    2276 	.db #0xf0	; 240
      0007D6 7F                    2277 	.db #0x7f	; 127
      0007D7 DF                    2278 	.db #0xdf	; 223
      0007D8 DF                    2279 	.db #0xdf	; 223
      0007D9 12                    2280 	.db #0x12	; 18
      0007DA 1E                    2281 	.db #0x1e	; 30
      0007DB 31                    2282 	.db #0x31	; 49	'1'
      0007DC 2F                    2283 	.db #0x2f	; 47
      0007DD 18                    2284 	.db #0x18	; 24
      0007DE 17                    2285 	.db #0x17	; 23
      0007DF 0F                    2286 	.db #0x0f	; 15
      0007E0 08                    2287 	.db #0x08	; 8
      0007E1 07                    2288 	.db #0x07	; 7
      0007E2 07                    2289 	.db #0x07	; 7
      0007E3 E0                    2290 	.db #0xe0	; 224
      0007E4 E0                    2291 	.db #0xe0	; 224
      0007E5 F8                    2292 	.db #0xf8	; 248
      0007E6 18                    2293 	.db #0x18	; 24
      0007E7 0C                    2294 	.db #0x0c	; 12
      0007E8 F4                    2295 	.db #0xf4	; 244
      0007E9 F6                    2296 	.db #0xf6	; 246
      0007EA FA                    2297 	.db #0xfa	; 250
      0007EB 0F                    2298 	.db #0x0f	; 15
      0007EC 0D                    2299 	.db #0x0d	; 13
      0007ED C2                    2300 	.db #0xc2	; 194
      0007EE C2                    2301 	.db #0xc2	; 194
      0007EF 00                    2302 	.db #0x00	; 0
      0007F0 E0                    2303 	.db #0xe0	; 224
      0007F1 C0                    2304 	.db #0xc0	; 192
      0007F2 10                    2305 	.db #0x10	; 16
      0007F3 C0                    2306 	.db #0xc0	; 192
      0007F4 10                    2307 	.db #0x10	; 16
      0007F5 00                    2308 	.db #0x00	; 0
      0007F6 E0                    2309 	.db #0xe0	; 224
      0007F7 C2                    2310 	.db #0xc2	; 194
      0007F8 C2                    2311 	.db #0xc2	; 194
      0007F9 0F                    2312 	.db #0x0f	; 15
      0007FA 0D                    2313 	.db #0x0d	; 13
      0007FB F6                    2314 	.db #0xf6	; 246
      0007FC FA                    2315 	.db #0xfa	; 250
      0007FD 0C                    2316 	.db #0x0c	; 12
      0007FE F4                    2317 	.db #0xf4	; 244
      0007FF F8                    2318 	.db #0xf8	; 248
      000800 18                    2319 	.db #0x18	; 24
      000801 E0                    2320 	.db #0xe0	; 224
      000802 E0                    2321 	.db #0xe0	; 224
      000803 07                    2322 	.db #0x07	; 7
      000804 07                    2323 	.db #0x07	; 7
      000805 1B                    2324 	.db #0x1b	; 27
      000806 1C                    2325 	.db #0x1c	; 28
      000807 38                    2326 	.db #0x38	; 56	'8'
      000808 27                    2327 	.db #0x27	; 39
      000809 60                    2328 	.db #0x60	; 96
      00080A 5E                    2329 	.db #0x5e	; 94
      00080B 60                    2330 	.db #0x60	; 96
      00080C 5C                    2331 	.db #0x5c	; 92
      00080D 41                    2332 	.db #0x41	; 65	'A'
      00080E 79                    2333 	.db #0x79	; 121	'y'
      00080F C4                    2334 	.db #0xc4	; 196
      000810 B7                    2335 	.db #0xb7	; 183
      000811 99                    2336 	.db #0x99	; 153
      000812 FE                    2337 	.db #0xfe	; 254
      000813 B3                    2338 	.db #0xb3	; 179
      000814 EC                    2339 	.db #0xec	; 236
      000815 67                    2340 	.db #0x67	; 103	'g'
      000816 58                    2341 	.db #0x58	; 88	'X'
      000817 2E                    2342 	.db #0x2e	; 46
      000818 31                    2343 	.db #0x31	; 49	'1'
      000819 5C                    2344 	.db #0x5c	; 92
      00081A 73                    2345 	.db #0x73	; 115	's'
      00081B 69                    2346 	.db #0x69	; 105	'i'
      00081C 5E                    2347 	.db #0x5e	; 94
      00081D 37                    2348 	.db #0x37	; 55	'7'
      00081E 2D                    2349 	.db #0x2d	; 45
      00081F 1A                    2350 	.db #0x1a	; 26
      000820 1B                    2351 	.db #0x1b	; 27
      000821 01                    2352 	.db #0x01	; 1
      000822 01                    2353 	.db #0x01	; 1
      000823 E0                    2354 	.db #0xe0	; 224
      000824 E0                    2355 	.db #0xe0	; 224
      000825 90                    2356 	.db #0x90	; 144
      000826 70                    2357 	.db #0x70	; 112	'p'
      000827 C0                    2358 	.db #0xc0	; 192
      000828 C0                    2359 	.db #0xc0	; 192
      000829 00                    2360 	.db #0x00	; 0
      00082A 00                    2361 	.db #0x00	; 0
      00082B 02                    2362 	.db #0x02	; 2
      00082C 02                    2363 	.db #0x02	; 2
      00082D C1                    2364 	.db #0xc1	; 193
      00082E C3                    2365 	.db #0xc3	; 195
      00082F 65                    2366 	.db #0x65	; 101	'e'
      000830 A7                    2367 	.db #0xa7	; 167
      000831 A7                    2368 	.db #0xa7	; 167
      000832 65                    2369 	.db #0x65	; 101	'e'
      000833 A3                    2370 	.db #0xa3	; 163
      000834 65                    2371 	.db #0x65	; 101	'e'
      000835 03                    2372 	.db #0x03	; 3
      000836 CD                    2373 	.db #0xcd	; 205
      000837 41                    2374 	.db #0x41	; 65	'A'
      000838 DF                    2375 	.db #0xdf	; 223
      000839 86                    2376 	.db #0x86	; 134
      00083A BA                    2377 	.db #0xba	; 186
      00083B 86                    2378 	.db #0x86	; 134
      00083C FA                    2379 	.db #0xfa	; 250
      00083D 1C                    2380 	.db #0x1c	; 28
      00083E E4                    2381 	.db #0xe4	; 228
      00083F 78                    2382 	.db #0x78	; 120	'x'
      000840 B8                    2383 	.db #0xb8	; 184
      000841 C0                    2384 	.db #0xc0	; 192
      000842 C0                    2385 	.db #0xc0	; 192
      000843 00                    2386 	.db #0x00	; 0
      000844 00                    2387 	.db #0x00	; 0
      000845 00                    2388 	.db #0x00	; 0
      000846 00                    2389 	.db #0x00	; 0
      000847 00                    2390 	.db #0x00	; 0
      000848 00                    2391 	.db #0x00	; 0
      000849 00                    2392 	.db #0x00	; 0
      00084A 00                    2393 	.db #0x00	; 0
      00084B 00                    2394 	.db #0x00	; 0
      00084C 00                    2395 	.db #0x00	; 0
      00084D 00                    2396 	.db #0x00	; 0
      00084E 00                    2397 	.db #0x00	; 0
      00084F 00                    2398 	.db #0x00	; 0
      000850 00                    2399 	.db #0x00	; 0
      000851 00                    2400 	.db #0x00	; 0
      000852 00                    2401 	.db #0x00	; 0
      000853 00                    2402 	.db #0x00	; 0
      000854 00                    2403 	.db #0x00	; 0
      000855 00                    2404 	.db #0x00	; 0
      000856 00                    2405 	.db #0x00	; 0
      000857 00                    2406 	.db #0x00	; 0
      000858 00                    2407 	.db #0x00	; 0
      000859 00                    2408 	.db #0x00	; 0
      00085A 00                    2409 	.db #0x00	; 0
      00085B 00                    2410 	.db #0x00	; 0
      00085C 00                    2411 	.db #0x00	; 0
      00085D 00                    2412 	.db #0x00	; 0
      00085E 00                    2413 	.db #0x00	; 0
      00085F 00                    2414 	.db #0x00	; 0
      000860 00                    2415 	.db #0x00	; 0
      000861 00                    2416 	.db #0x00	; 0
      000862 00                    2417 	.db #0x00	; 0
      000863 00                    2418 	.db #0x00	; 0
      000864 00                    2419 	.db #0x00	; 0
      000865 00                    2420 	.db #0x00	; 0
      000866 00                    2421 	.db #0x00	; 0
      000867 00                    2422 	.db #0x00	; 0
      000868 00                    2423 	.db #0x00	; 0
      000869 00                    2424 	.db #0x00	; 0
      00086A 00                    2425 	.db #0x00	; 0
      00086B 00                    2426 	.db #0x00	; 0
      00086C 00                    2427 	.db #0x00	; 0
      00086D 00                    2428 	.db #0x00	; 0
      00086E 00                    2429 	.db #0x00	; 0
      00086F 00                    2430 	.db #0x00	; 0
      000870 00                    2431 	.db #0x00	; 0
      000871 00                    2432 	.db #0x00	; 0
      000872 00                    2433 	.db #0x00	; 0
      000873 00                    2434 	.db #0x00	; 0
      000874 00                    2435 	.db #0x00	; 0
      000875 00                    2436 	.db #0x00	; 0
      000876 00                    2437 	.db #0x00	; 0
      000877 00                    2438 	.db #0x00	; 0
      000878 00                    2439 	.db #0x00	; 0
      000879 00                    2440 	.db #0x00	; 0
      00087A 00                    2441 	.db #0x00	; 0
      00087B 00                    2442 	.db #0x00	; 0
      00087C 00                    2443 	.db #0x00	; 0
      00087D 00                    2444 	.db #0x00	; 0
      00087E 00                    2445 	.db #0x00	; 0
      00087F 00                    2446 	.db #0x00	; 0
      000880 00                    2447 	.db #0x00	; 0
      000881 00                    2448 	.db #0x00	; 0
      000882 00                    2449 	.db #0x00	; 0
      000883                       2450 _ex:
      000883 00                    2451 	.db #0x00	; 0
      000884 00                    2452 	.db #0x00	; 0
      000885 00                    2453 	.db #0x00	; 0
      000886 00                    2454 	.db #0x00	; 0
      000887 00                    2455 	.db #0x00	; 0
      000888 00                    2456 	.db #0x00	; 0
      000889                       2457 _Ex1:
      000889 00                    2458 	.db #0x00	; 0
      00088A 00                    2459 	.db #0x00	; 0
      00088B 00                    2460 	.db #0x00	; 0
      00088C 00                    2461 	.db #0x00	; 0
      00088D 00                    2462 	.db #0x00	; 0
      00088E 00                    2463 	.db #0x00	; 0
      00088F 00                    2464 	.db #0x00	; 0
      000890 00                    2465 	.db #0x00	; 0
      000891 00                    2466 	.db #0x00	; 0
      000892 00                    2467 	.db #0x00	; 0
      000893 04                    2468 	.db #0x04	; 4
      000894 04                    2469 	.db #0x04	; 4
      000895 06                    2470 	.db #0x06	; 6
      000896 06                    2471 	.db #0x06	; 6
      000897 06                    2472 	.db #0x06	; 6
      000898 06                    2473 	.db #0x06	; 6
      000899 00                    2474 	.db #0x00	; 0
      00089A 00                    2475 	.db #0x00	; 0
      00089B 00                    2476 	.db #0x00	; 0
      00089C 00                    2477 	.db #0x00	; 0
      00089D 03                    2478 	.db #0x03	; 3
      00089E 03                    2479 	.db #0x03	; 3
      00089F 07                    2480 	.db #0x07	; 7
      0008A0 07                    2481 	.db #0x07	; 7
      0008A1 02                    2482 	.db #0x02	; 2
      0008A2 02                    2483 	.db #0x02	; 2
      0008A3 00                    2484 	.db #0x00	; 0
      0008A4 00                    2485 	.db #0x00	; 0
      0008A5 00                    2486 	.db #0x00	; 0
      0008A6 00                    2487 	.db #0x00	; 0
      0008A7 00                    2488 	.db #0x00	; 0
      0008A8 00                    2489 	.db #0x00	; 0
      0008A9 00                    2490 	.db #0x00	; 0
      0008AA 00                    2491 	.db #0x00	; 0
      0008AB 00                    2492 	.db #0x00	; 0
      0008AC 00                    2493 	.db #0x00	; 0
      0008AD 00                    2494 	.db #0x00	; 0
      0008AE 00                    2495 	.db #0x00	; 0
      0008AF 00                    2496 	.db #0x00	; 0
      0008B0 00                    2497 	.db #0x00	; 0
      0008B1 00                    2498 	.db #0x00	; 0
      0008B2 00                    2499 	.db #0x00	; 0
      0008B3 00                    2500 	.db #0x00	; 0
      0008B4 00                    2501 	.db #0x00	; 0
      0008B5 00                    2502 	.db #0x00	; 0
      0008B6 00                    2503 	.db #0x00	; 0
      0008B7 38                    2504 	.db #0x38	; 56	'8'
      0008B8 38                    2505 	.db #0x38	; 56	'8'
      0008B9 38                    2506 	.db #0x38	; 56	'8'
      0008BA 38                    2507 	.db #0x38	; 56	'8'
      0008BB 30                    2508 	.db #0x30	; 48	'0'
      0008BC 30                    2509 	.db #0x30	; 48	'0'
      0008BD 00                    2510 	.db #0x00	; 0
      0008BE 00                    2511 	.db #0x00	; 0
      0008BF 00                    2512 	.db #0x00	; 0
      0008C0 00                    2513 	.db #0x00	; 0
      0008C1 00                    2514 	.db #0x00	; 0
      0008C2 00                    2515 	.db #0x00	; 0
      0008C3 00                    2516 	.db #0x00	; 0
      0008C4 00                    2517 	.db #0x00	; 0
      0008C5 00                    2518 	.db #0x00	; 0
      0008C6 00                    2519 	.db #0x00	; 0
      0008C7 00                    2520 	.db #0x00	; 0
      0008C8 00                    2521 	.db #0x00	; 0
      0008C9 00                    2522 	.db #0x00	; 0
      0008CA 00                    2523 	.db #0x00	; 0
      0008CB 00                    2524 	.db #0x00	; 0
      0008CC 00                    2525 	.db #0x00	; 0
      0008CD 00                    2526 	.db #0x00	; 0
      0008CE 00                    2527 	.db #0x00	; 0
      0008CF 18                    2528 	.db #0x18	; 24
      0008D0 18                    2529 	.db #0x18	; 24
      0008D1 3E                    2530 	.db #0x3e	; 62
      0008D2 3E                    2531 	.db #0x3e	; 62
      0008D3 3E                    2532 	.db #0x3e	; 62
      0008D4 3E                    2533 	.db #0x3e	; 62
      0008D5 1C                    2534 	.db #0x1c	; 28
      0008D6 1C                    2535 	.db #0x1c	; 28
      0008D7 08                    2536 	.db #0x08	; 8
      0008D8 08                    2537 	.db #0x08	; 8
      0008D9 00                    2538 	.db #0x00	; 0
      0008DA 00                    2539 	.db #0x00	; 0
      0008DB 00                    2540 	.db #0x00	; 0
      0008DC 00                    2541 	.db #0x00	; 0
      0008DD 07                    2542 	.db #0x07	; 7
      0008DE 07                    2543 	.db #0x07	; 7
      0008DF 07                    2544 	.db #0x07	; 7
      0008E0 07                    2545 	.db #0x07	; 7
      0008E1 07                    2546 	.db #0x07	; 7
      0008E2 07                    2547 	.db #0x07	; 7
      0008E3 03                    2548 	.db #0x03	; 3
      0008E4 03                    2549 	.db #0x03	; 3
      0008E5 03                    2550 	.db #0x03	; 3
      0008E6 03                    2551 	.db #0x03	; 3
      0008E7 00                    2552 	.db #0x00	; 0
      0008E8 00                    2553 	.db #0x00	; 0
      0008E9 00                    2554 	.db #0x00	; 0
      0008EA 00                    2555 	.db #0x00	; 0
      0008EB 00                    2556 	.db #0x00	; 0
      0008EC 00                    2557 	.db #0x00	; 0
      0008ED 04                    2558 	.db #0x04	; 4
      0008EE 04                    2559 	.db #0x04	; 4
      0008EF 1E                    2560 	.db #0x1e	; 30
      0008F0 1E                    2561 	.db #0x1e	; 30
      0008F1 3E                    2562 	.db #0x3e	; 62
      0008F2 3E                    2563 	.db #0x3e	; 62
      0008F3 3E                    2564 	.db #0x3e	; 62
      0008F4 3E                    2565 	.db #0x3e	; 62
      0008F5 1E                    2566 	.db #0x1e	; 30
      0008F6 1E                    2567 	.db #0x1e	; 30
      0008F7 0C                    2568 	.db #0x0c	; 12
      0008F8 0C                    2569 	.db #0x0c	; 12
      0008F9 00                    2570 	.db #0x00	; 0
      0008FA 00                    2571 	.db #0x00	; 0
      0008FB 00                    2572 	.db #0x00	; 0
      0008FC 00                    2573 	.db #0x00	; 0
      0008FD 00                    2574 	.db #0x00	; 0
      0008FE 00                    2575 	.db #0x00	; 0
      0008FF 80                    2576 	.db #0x80	; 128
      000900 80                    2577 	.db #0x80	; 128
      000901 C0                    2578 	.db #0xc0	; 192
      000902 C0                    2579 	.db #0xc0	; 192
      000903 80                    2580 	.db #0x80	; 128
      000904 80                    2581 	.db #0x80	; 128
      000905 00                    2582 	.db #0x00	; 0
      000906 00                    2583 	.db #0x00	; 0
      000907 00                    2584 	.db #0x00	; 0
      000908 00                    2585 	.db #0x00	; 0
      000909 00                    2586 	.db #0x00	; 0
      00090A 00                    2587 	.db #0x00	; 0
      00090B 20                    2588 	.db #0x20	; 32
      00090C 20                    2589 	.db #0x20	; 32
      00090D 70                    2590 	.db #0x70	; 112	'p'
      00090E 70                    2591 	.db #0x70	; 112	'p'
      00090F 70                    2592 	.db #0x70	; 112	'p'
      000910 70                    2593 	.db #0x70	; 112	'p'
      000911 60                    2594 	.db #0x60	; 96
      000912 60                    2595 	.db #0x60	; 96
      000913 00                    2596 	.db #0x00	; 0
      000914 00                    2597 	.db #0x00	; 0
      000915 00                    2598 	.db #0x00	; 0
      000916 00                    2599 	.db #0x00	; 0
      000917 00                    2600 	.db #0x00	; 0
      000918 00                    2601 	.db #0x00	; 0
      000919 00                    2602 	.db #0x00	; 0
      00091A 00                    2603 	.db #0x00	; 0
      00091B 00                    2604 	.db #0x00	; 0
      00091C 00                    2605 	.db #0x00	; 0
      00091D 00                    2606 	.db #0x00	; 0
      00091E 00                    2607 	.db #0x00	; 0
      00091F 00                    2608 	.db #0x00	; 0
      000920 00                    2609 	.db #0x00	; 0
      000921 00                    2610 	.db #0x00	; 0
      000922 00                    2611 	.db #0x00	; 0
      000923 07                    2612 	.db #0x07	; 7
      000924 07                    2613 	.db #0x07	; 7
      000925 07                    2614 	.db #0x07	; 7
      000926 07                    2615 	.db #0x07	; 7
      000927 06                    2616 	.db #0x06	; 6
      000928 06                    2617 	.db #0x06	; 6
      000929 00                    2618 	.db #0x00	; 0
      00092A 00                    2619 	.db #0x00	; 0
      00092B 04                    2620 	.db #0x04	; 4
      00092C 04                    2621 	.db #0x04	; 4
      00092D 0E                    2622 	.db #0x0e	; 14
      00092E 0E                    2623 	.db #0x0e	; 14
      00092F 0E                    2624 	.db #0x0e	; 14
      000930 0E                    2625 	.db #0x0e	; 14
      000931 00                    2626 	.db #0x00	; 0
      000932 00                    2627 	.db #0x00	; 0
      000933 00                    2628 	.db #0x00	; 0
      000934 00                    2629 	.db #0x00	; 0
      000935 00                    2630 	.db #0x00	; 0
      000936 00                    2631 	.db #0x00	; 0
      000937 00                    2632 	.db #0x00	; 0
      000938 00                    2633 	.db #0x00	; 0
      000939 00                    2634 	.db #0x00	; 0
      00093A 00                    2635 	.db #0x00	; 0
      00093B 00                    2636 	.db #0x00	; 0
      00093C 00                    2637 	.db #0x00	; 0
      00093D 00                    2638 	.db #0x00	; 0
      00093E 00                    2639 	.db #0x00	; 0
      00093F 00                    2640 	.db #0x00	; 0
      000940 00                    2641 	.db #0x00	; 0
      000941 00                    2642 	.db #0x00	; 0
      000942 00                    2643 	.db #0x00	; 0
      000943 00                    2644 	.db #0x00	; 0
      000944 00                    2645 	.db #0x00	; 0
      000945 00                    2646 	.db #0x00	; 0
      000946 00                    2647 	.db #0x00	; 0
      000947 00                    2648 	.db #0x00	; 0
      000948 00                    2649 	.db #0x00	; 0
      000949 00                    2650 	.db #0x00	; 0
      00094A 00                    2651 	.db #0x00	; 0
      00094B 40                    2652 	.db #0x40	; 64
      00094C 40                    2653 	.db #0x40	; 64
      00094D 60                    2654 	.db #0x60	; 96
      00094E 60                    2655 	.db #0x60	; 96
      00094F 00                    2656 	.db #0x00	; 0
      000950 00                    2657 	.db #0x00	; 0
      000951 00                    2658 	.db #0x00	; 0
      000952 00                    2659 	.db #0x00	; 0
      000953 00                    2660 	.db #0x00	; 0
      000954 00                    2661 	.db #0x00	; 0
      000955 00                    2662 	.db #0x00	; 0
      000956 00                    2663 	.db #0x00	; 0
      000957 00                    2664 	.db #0x00	; 0
      000958 00                    2665 	.db #0x00	; 0
      000959 00                    2666 	.db #0x00	; 0
      00095A 00                    2667 	.db #0x00	; 0
      00095B 00                    2668 	.db #0x00	; 0
      00095C 00                    2669 	.db #0x00	; 0
      00095D 00                    2670 	.db #0x00	; 0
      00095E 00                    2671 	.db #0x00	; 0
      00095F 00                    2672 	.db #0x00	; 0
      000960 00                    2673 	.db #0x00	; 0
      000961 00                    2674 	.db #0x00	; 0
      000962 00                    2675 	.db #0x00	; 0
      000963 00                    2676 	.db #0x00	; 0
      000964 00                    2677 	.db #0x00	; 0
      000965 04                    2678 	.db #0x04	; 4
      000966 04                    2679 	.db #0x04	; 4
      000967 06                    2680 	.db #0x06	; 6
      000968 06                    2681 	.db #0x06	; 6
      000969 00                    2682 	.db #0x00	; 0
      00096A 00                    2683 	.db #0x00	; 0
      00096B 02                    2684 	.db #0x02	; 2
      00096C 02                    2685 	.db #0x02	; 2
      00096D 02                    2686 	.db #0x02	; 2
      00096E 02                    2687 	.db #0x02	; 2
      00096F 00                    2688 	.db #0x00	; 0
      000970 00                    2689 	.db #0x00	; 0
      000971 00                    2690 	.db #0x00	; 0
      000972 00                    2691 	.db #0x00	; 0
      000973 00                    2692 	.db #0x00	; 0
      000974 00                    2693 	.db #0x00	; 0
      000975 00                    2694 	.db #0x00	; 0
      000976 00                    2695 	.db #0x00	; 0
      000977 00                    2696 	.db #0x00	; 0
      000978 00                    2697 	.db #0x00	; 0
      000979 00                    2698 	.db #0x00	; 0
      00097A 00                    2699 	.db #0x00	; 0
      00097B 00                    2700 	.db #0x00	; 0
      00097C 00                    2701 	.db #0x00	; 0
      00097D 00                    2702 	.db #0x00	; 0
      00097E 00                    2703 	.db #0x00	; 0
      00097F 00                    2704 	.db #0x00	; 0
      000980 00                    2705 	.db #0x00	; 0
      000981 00                    2706 	.db #0x00	; 0
      000982 00                    2707 	.db #0x00	; 0
      000983 00                    2708 	.db #0x00	; 0
      000984 00                    2709 	.db #0x00	; 0
      000985 00                    2710 	.db #0x00	; 0
      000986 00                    2711 	.db #0x00	; 0
      000987 00                    2712 	.db #0x00	; 0
      000988 00                    2713 	.db #0x00	; 0
      000989                       2714 _Ex2:
      000989 00                    2715 	.db #0x00	; 0
      00098A 00                    2716 	.db #0x00	; 0
      00098B 00                    2717 	.db #0x00	; 0
      00098C 00                    2718 	.db #0x00	; 0
      00098D 00                    2719 	.db #0x00	; 0
      00098E 00                    2720 	.db #0x00	; 0
      00098F 01                    2721 	.db #0x01	; 1
      000990 01                    2722 	.db #0x01	; 1
      000991 03                    2723 	.db #0x03	; 3
      000992 03                    2724 	.db #0x03	; 3
      000993 03                    2725 	.db #0x03	; 3
      000994 03                    2726 	.db #0x03	; 3
      000995 00                    2727 	.db #0x00	; 0
      000996 00                    2728 	.db #0x00	; 0
      000997 06                    2729 	.db #0x06	; 6
      000998 06                    2730 	.db #0x06	; 6
      000999 0E                    2731 	.db #0x0e	; 14
      00099A 0E                    2732 	.db #0x0e	; 14
      00099B 0E                    2733 	.db #0x0e	; 14
      00099C 0E                    2734 	.db #0x0e	; 14
      00099D 00                    2735 	.db #0x00	; 0
      00099E 00                    2736 	.db #0x00	; 0
      00099F 00                    2737 	.db #0x00	; 0
      0009A0 00                    2738 	.db #0x00	; 0
      0009A1 00                    2739 	.db #0x00	; 0
      0009A2 00                    2740 	.db #0x00	; 0
      0009A3 00                    2741 	.db #0x00	; 0
      0009A4 00                    2742 	.db #0x00	; 0
      0009A5 00                    2743 	.db #0x00	; 0
      0009A6 00                    2744 	.db #0x00	; 0
      0009A7 00                    2745 	.db #0x00	; 0
      0009A8 00                    2746 	.db #0x00	; 0
      0009A9 00                    2747 	.db #0x00	; 0
      0009AA 00                    2748 	.db #0x00	; 0
      0009AB 00                    2749 	.db #0x00	; 0
      0009AC 00                    2750 	.db #0x00	; 0
      0009AD 00                    2751 	.db #0x00	; 0
      0009AE 00                    2752 	.db #0x00	; 0
      0009AF 80                    2753 	.db #0x80	; 128
      0009B0 80                    2754 	.db #0x80	; 128
      0009B1 80                    2755 	.db #0x80	; 128
      0009B2 80                    2756 	.db #0x80	; 128
      0009B3 00                    2757 	.db #0x00	; 0
      0009B4 00                    2758 	.db #0x00	; 0
      0009B5 60                    2759 	.db #0x60	; 96
      0009B6 60                    2760 	.db #0x60	; 96
      0009B7 60                    2761 	.db #0x60	; 96
      0009B8 60                    2762 	.db #0x60	; 96
      0009B9 00                    2763 	.db #0x00	; 0
      0009BA 00                    2764 	.db #0x00	; 0
      0009BB C0                    2765 	.db #0xc0	; 192
      0009BC C0                    2766 	.db #0xc0	; 192
      0009BD C0                    2767 	.db #0xc0	; 192
      0009BE C0                    2768 	.db #0xc0	; 192
      0009BF C0                    2769 	.db #0xc0	; 192
      0009C0 C0                    2770 	.db #0xc0	; 192
      0009C1 00                    2771 	.db #0x00	; 0
      0009C2 00                    2772 	.db #0x00	; 0
      0009C3 00                    2773 	.db #0x00	; 0
      0009C4 00                    2774 	.db #0x00	; 0
      0009C5 00                    2775 	.db #0x00	; 0
      0009C6 00                    2776 	.db #0x00	; 0
      0009C7 00                    2777 	.db #0x00	; 0
      0009C8 00                    2778 	.db #0x00	; 0
      0009C9 00                    2779 	.db #0x00	; 0
      0009CA 00                    2780 	.db #0x00	; 0
      0009CB 00                    2781 	.db #0x00	; 0
      0009CC 00                    2782 	.db #0x00	; 0
      0009CD 03                    2783 	.db #0x03	; 3
      0009CE 03                    2784 	.db #0x03	; 3
      0009CF 03                    2785 	.db #0x03	; 3
      0009D0 03                    2786 	.db #0x03	; 3
      0009D1 03                    2787 	.db #0x03	; 3
      0009D2 03                    2788 	.db #0x03	; 3
      0009D3 01                    2789 	.db #0x01	; 1
      0009D4 01                    2790 	.db #0x01	; 1
      0009D5 00                    2791 	.db #0x00	; 0
      0009D6 00                    2792 	.db #0x00	; 0
      0009D7 00                    2793 	.db #0x00	; 0
      0009D8 00                    2794 	.db #0x00	; 0
      0009D9 00                    2795 	.db #0x00	; 0
      0009DA 00                    2796 	.db #0x00	; 0
      0009DB 1C                    2797 	.db #0x1c	; 28
      0009DC 1C                    2798 	.db #0x1c	; 28
      0009DD 3C                    2799 	.db #0x3c	; 60
      0009DE 3C                    2800 	.db #0x3c	; 60
      0009DF 3C                    2801 	.db #0x3c	; 60
      0009E0 3C                    2802 	.db #0x3c	; 60
      0009E1 30                    2803 	.db #0x30	; 48	'0'
      0009E2 30                    2804 	.db #0x30	; 48	'0'
      0009E3 00                    2805 	.db #0x00	; 0
      0009E4 00                    2806 	.db #0x00	; 0
      0009E5 00                    2807 	.db #0x00	; 0
      0009E6 00                    2808 	.db #0x00	; 0
      0009E7 00                    2809 	.db #0x00	; 0
      0009E8 00                    2810 	.db #0x00	; 0
      0009E9 00                    2811 	.db #0x00	; 0
      0009EA 00                    2812 	.db #0x00	; 0
      0009EB 00                    2813 	.db #0x00	; 0
      0009EC 00                    2814 	.db #0x00	; 0
      0009ED 80                    2815 	.db #0x80	; 128
      0009EE 80                    2816 	.db #0x80	; 128
      0009EF C0                    2817 	.db #0xc0	; 192
      0009F0 C0                    2818 	.db #0xc0	; 192
      0009F1 C0                    2819 	.db #0xc0	; 192
      0009F2 C0                    2820 	.db #0xc0	; 192
      0009F3 DE                    2821 	.db #0xde	; 222
      0009F4 DE                    2822 	.db #0xde	; 222
      0009F5 9E                    2823 	.db #0x9e	; 158
      0009F6 9E                    2824 	.db #0x9e	; 158
      0009F7 0E                    2825 	.db #0x0e	; 14
      0009F8 0E                    2826 	.db #0x0e	; 14
      0009F9 00                    2827 	.db #0x00	; 0
      0009FA 00                    2828 	.db #0x00	; 0
      0009FB 00                    2829 	.db #0x00	; 0
      0009FC 00                    2830 	.db #0x00	; 0
      0009FD 38                    2831 	.db #0x38	; 56	'8'
      0009FE 38                    2832 	.db #0x38	; 56	'8'
      0009FF 3C                    2833 	.db #0x3c	; 60
      000A00 3C                    2834 	.db #0x3c	; 60
      000A01 3C                    2835 	.db #0x3c	; 60
      000A02 3C                    2836 	.db #0x3c	; 60
      000A03 3C                    2837 	.db #0x3c	; 60
      000A04 3C                    2838 	.db #0x3c	; 60
      000A05 1C                    2839 	.db #0x1c	; 28
      000A06 1C                    2840 	.db #0x1c	; 28
      000A07 00                    2841 	.db #0x00	; 0
      000A08 00                    2842 	.db #0x00	; 0
      000A09 00                    2843 	.db #0x00	; 0
      000A0A 00                    2844 	.db #0x00	; 0
      000A0B 04                    2845 	.db #0x04	; 4
      000A0C 04                    2846 	.db #0x04	; 4
      000A0D 07                    2847 	.db #0x07	; 7
      000A0E 07                    2848 	.db #0x07	; 7
      000A0F 07                    2849 	.db #0x07	; 7
      000A10 07                    2850 	.db #0x07	; 7
      000A11 00                    2851 	.db #0x00	; 0
      000A12 00                    2852 	.db #0x00	; 0
      000A13 00                    2853 	.db #0x00	; 0
      000A14 00                    2854 	.db #0x00	; 0
      000A15 00                    2855 	.db #0x00	; 0
      000A16 00                    2856 	.db #0x00	; 0
      000A17 00                    2857 	.db #0x00	; 0
      000A18 00                    2858 	.db #0x00	; 0
      000A19 00                    2859 	.db #0x00	; 0
      000A1A 00                    2860 	.db #0x00	; 0
      000A1B 00                    2861 	.db #0x00	; 0
      000A1C 00                    2862 	.db #0x00	; 0
      000A1D 00                    2863 	.db #0x00	; 0
      000A1E 00                    2864 	.db #0x00	; 0
      000A1F 00                    2865 	.db #0x00	; 0
      000A20 00                    2866 	.db #0x00	; 0
      000A21 38                    2867 	.db #0x38	; 56	'8'
      000A22 38                    2868 	.db #0x38	; 56	'8'
      000A23 18                    2869 	.db #0x18	; 24
      000A24 18                    2870 	.db #0x18	; 24
      000A25 00                    2871 	.db #0x00	; 0
      000A26 00                    2872 	.db #0x00	; 0
      000A27 00                    2873 	.db #0x00	; 0
      000A28 00                    2874 	.db #0x00	; 0
      000A29 00                    2875 	.db #0x00	; 0
      000A2A 00                    2876 	.db #0x00	; 0
      000A2B 00                    2877 	.db #0x00	; 0
      000A2C 00                    2878 	.db #0x00	; 0
      000A2D 00                    2879 	.db #0x00	; 0
      000A2E 00                    2880 	.db #0x00	; 0
      000A2F 00                    2881 	.db #0x00	; 0
      000A30 00                    2882 	.db #0x00	; 0
      000A31 00                    2883 	.db #0x00	; 0
      000A32 00                    2884 	.db #0x00	; 0
      000A33 0C                    2885 	.db #0x0c	; 12
      000A34 0C                    2886 	.db #0x0c	; 12
      000A35 0E                    2887 	.db #0x0e	; 14
      000A36 0E                    2888 	.db #0x0e	; 14
      000A37 06                    2889 	.db #0x06	; 6
      000A38 06                    2890 	.db #0x06	; 6
      000A39 00                    2891 	.db #0x00	; 0
      000A3A 00                    2892 	.db #0x00	; 0
      000A3B 00                    2893 	.db #0x00	; 0
      000A3C 00                    2894 	.db #0x00	; 0
      000A3D 00                    2895 	.db #0x00	; 0
      000A3E 00                    2896 	.db #0x00	; 0
      000A3F 00                    2897 	.db #0x00	; 0
      000A40 00                    2898 	.db #0x00	; 0
      000A41 06                    2899 	.db #0x06	; 6
      000A42 06                    2900 	.db #0x06	; 6
      000A43 0E                    2901 	.db #0x0e	; 14
      000A44 0E                    2902 	.db #0x0e	; 14
      000A45 04                    2903 	.db #0x04	; 4
      000A46 04                    2904 	.db #0x04	; 4
      000A47 00                    2905 	.db #0x00	; 0
      000A48 00                    2906 	.db #0x00	; 0
      000A49 0E                    2907 	.db #0x0e	; 14
      000A4A 0E                    2908 	.db #0x0e	; 14
      000A4B 04                    2909 	.db #0x04	; 4
      000A4C 04                    2910 	.db #0x04	; 4
      000A4D 00                    2911 	.db #0x00	; 0
      000A4E 00                    2912 	.db #0x00	; 0
      000A4F 00                    2913 	.db #0x00	; 0
      000A50 00                    2914 	.db #0x00	; 0
      000A51 00                    2915 	.db #0x00	; 0
      000A52 00                    2916 	.db #0x00	; 0
      000A53 00                    2917 	.db #0x00	; 0
      000A54 00                    2918 	.db #0x00	; 0
      000A55 00                    2919 	.db #0x00	; 0
      000A56 00                    2920 	.db #0x00	; 0
      000A57 00                    2921 	.db #0x00	; 0
      000A58 00                    2922 	.db #0x00	; 0
      000A59 00                    2923 	.db #0x00	; 0
      000A5A 00                    2924 	.db #0x00	; 0
      000A5B 00                    2925 	.db #0x00	; 0
      000A5C 00                    2926 	.db #0x00	; 0
      000A5D 00                    2927 	.db #0x00	; 0
      000A5E 00                    2928 	.db #0x00	; 0
      000A5F 00                    2929 	.db #0x00	; 0
      000A60 00                    2930 	.db #0x00	; 0
      000A61 20                    2931 	.db #0x20	; 32
      000A62 20                    2932 	.db #0x20	; 32
      000A63 30                    2933 	.db #0x30	; 48	'0'
      000A64 30                    2934 	.db #0x30	; 48	'0'
      000A65 00                    2935 	.db #0x00	; 0
      000A66 00                    2936 	.db #0x00	; 0
      000A67 00                    2937 	.db #0x00	; 0
      000A68 00                    2938 	.db #0x00	; 0
      000A69 00                    2939 	.db #0x00	; 0
      000A6A 00                    2940 	.db #0x00	; 0
      000A6B 00                    2941 	.db #0x00	; 0
      000A6C 00                    2942 	.db #0x00	; 0
      000A6D 00                    2943 	.db #0x00	; 0
      000A6E 00                    2944 	.db #0x00	; 0
      000A6F 00                    2945 	.db #0x00	; 0
      000A70 00                    2946 	.db #0x00	; 0
      000A71 00                    2947 	.db #0x00	; 0
      000A72 00                    2948 	.db #0x00	; 0
      000A73 00                    2949 	.db #0x00	; 0
      000A74 00                    2950 	.db #0x00	; 0
      000A75 04                    2951 	.db #0x04	; 4
      000A76 04                    2952 	.db #0x04	; 4
      000A77 03                    2953 	.db #0x03	; 3
      000A78 03                    2954 	.db #0x03	; 3
      000A79 00                    2955 	.db #0x00	; 0
      000A7A 00                    2956 	.db #0x00	; 0
      000A7B 00                    2957 	.db #0x00	; 0
      000A7C 00                    2958 	.db #0x00	; 0
      000A7D 00                    2959 	.db #0x00	; 0
      000A7E 00                    2960 	.db #0x00	; 0
      000A7F 00                    2961 	.db #0x00	; 0
      000A80 00                    2962 	.db #0x00	; 0
      000A81 00                    2963 	.db #0x00	; 0
      000A82 00                    2964 	.db #0x00	; 0
      000A83 02                    2965 	.db #0x02	; 2
      000A84 02                    2966 	.db #0x02	; 2
      000A85 02                    2967 	.db #0x02	; 2
      000A86 02                    2968 	.db #0x02	; 2
      000A87 00                    2969 	.db #0x00	; 0
      000A88 00                    2970 	.db #0x00	; 0
      000A89                       2971 _Ex3:
      000A89 00                    2972 	.db #0x00	; 0
      000A8A 00                    2973 	.db #0x00	; 0
      000A8B 00                    2974 	.db #0x00	; 0
      000A8C 00                    2975 	.db #0x00	; 0
      000A8D 00                    2976 	.db #0x00	; 0
      000A8E 00                    2977 	.db #0x00	; 0
      000A8F 00                    2978 	.db #0x00	; 0
      000A90 00                    2979 	.db #0x00	; 0
      000A91 00                    2980 	.db #0x00	; 0
      000A92 00                    2981 	.db #0x00	; 0
      000A93 00                    2982 	.db #0x00	; 0
      000A94 00                    2983 	.db #0x00	; 0
      000A95 02                    2984 	.db #0x02	; 2
      000A96 02                    2985 	.db #0x02	; 2
      000A97 07                    2986 	.db #0x07	; 7
      000A98 07                    2987 	.db #0x07	; 7
      000A99 02                    2988 	.db #0x02	; 2
      000A9A 02                    2989 	.db #0x02	; 2
      000A9B 00                    2990 	.db #0x00	; 0
      000A9C 00                    2991 	.db #0x00	; 0
      000A9D 00                    2992 	.db #0x00	; 0
      000A9E 00                    2993 	.db #0x00	; 0
      000A9F 00                    2994 	.db #0x00	; 0
      000AA0 00                    2995 	.db #0x00	; 0
      000AA1 00                    2996 	.db #0x00	; 0
      000AA2 00                    2997 	.db #0x00	; 0
      000AA3 00                    2998 	.db #0x00	; 0
      000AA4 00                    2999 	.db #0x00	; 0
      000AA5 00                    3000 	.db #0x00	; 0
      000AA6 00                    3001 	.db #0x00	; 0
      000AA7 00                    3002 	.db #0x00	; 0
      000AA8 00                    3003 	.db #0x00	; 0
      000AA9 00                    3004 	.db #0x00	; 0
      000AAA 00                    3005 	.db #0x00	; 0
      000AAB 00                    3006 	.db #0x00	; 0
      000AAC 00                    3007 	.db #0x00	; 0
      000AAD 00                    3008 	.db #0x00	; 0
      000AAE 00                    3009 	.db #0x00	; 0
      000AAF 00                    3010 	.db #0x00	; 0
      000AB0 00                    3011 	.db #0x00	; 0
      000AB1 00                    3012 	.db #0x00	; 0
      000AB2 00                    3013 	.db #0x00	; 0
      000AB3 00                    3014 	.db #0x00	; 0
      000AB4 00                    3015 	.db #0x00	; 0
      000AB5 20                    3016 	.db #0x20	; 32
      000AB6 20                    3017 	.db #0x20	; 32
      000AB7 70                    3018 	.db #0x70	; 112	'p'
      000AB8 70                    3019 	.db #0x70	; 112	'p'
      000AB9 20                    3020 	.db #0x20	; 32
      000ABA 20                    3021 	.db #0x20	; 32
      000ABB 00                    3022 	.db #0x00	; 0
      000ABC 00                    3023 	.db #0x00	; 0
      000ABD 00                    3024 	.db #0x00	; 0
      000ABE 00                    3025 	.db #0x00	; 0
      000ABF 00                    3026 	.db #0x00	; 0
      000AC0 00                    3027 	.db #0x00	; 0
      000AC1 00                    3028 	.db #0x00	; 0
      000AC2 00                    3029 	.db #0x00	; 0
      000AC3 00                    3030 	.db #0x00	; 0
      000AC4 00                    3031 	.db #0x00	; 0
      000AC5 00                    3032 	.db #0x00	; 0
      000AC6 00                    3033 	.db #0x00	; 0
      000AC7 00                    3034 	.db #0x00	; 0
      000AC8 00                    3035 	.db #0x00	; 0
      000AC9 00                    3036 	.db #0x00	; 0
      000ACA 00                    3037 	.db #0x00	; 0
      000ACB 00                    3038 	.db #0x00	; 0
      000ACC 00                    3039 	.db #0x00	; 0
      000ACD 00                    3040 	.db #0x00	; 0
      000ACE 00                    3041 	.db #0x00	; 0
      000ACF 00                    3042 	.db #0x00	; 0
      000AD0 00                    3043 	.db #0x00	; 0
      000AD1 00                    3044 	.db #0x00	; 0
      000AD2 00                    3045 	.db #0x00	; 0
      000AD3 10                    3046 	.db #0x10	; 16
      000AD4 10                    3047 	.db #0x10	; 16
      000AD5 38                    3048 	.db #0x38	; 56	'8'
      000AD6 38                    3049 	.db #0x38	; 56	'8'
      000AD7 3E                    3050 	.db #0x3e	; 62
      000AD8 3E                    3051 	.db #0x3e	; 62
      000AD9 18                    3052 	.db #0x18	; 24
      000ADA 18                    3053 	.db #0x18	; 24
      000ADB 00                    3054 	.db #0x00	; 0
      000ADC 00                    3055 	.db #0x00	; 0
      000ADD 00                    3056 	.db #0x00	; 0
      000ADE 00                    3057 	.db #0x00	; 0
      000ADF 00                    3058 	.db #0x00	; 0
      000AE0 00                    3059 	.db #0x00	; 0
      000AE1 00                    3060 	.db #0x00	; 0
      000AE2 00                    3061 	.db #0x00	; 0
      000AE3 00                    3062 	.db #0x00	; 0
      000AE4 00                    3063 	.db #0x00	; 0
      000AE5 00                    3064 	.db #0x00	; 0
      000AE6 00                    3065 	.db #0x00	; 0
      000AE7 00                    3066 	.db #0x00	; 0
      000AE8 00                    3067 	.db #0x00	; 0
      000AE9 00                    3068 	.db #0x00	; 0
      000AEA 00                    3069 	.db #0x00	; 0
      000AEB 00                    3070 	.db #0x00	; 0
      000AEC 00                    3071 	.db #0x00	; 0
      000AED 00                    3072 	.db #0x00	; 0
      000AEE 00                    3073 	.db #0x00	; 0
      000AEF 00                    3074 	.db #0x00	; 0
      000AF0 00                    3075 	.db #0x00	; 0
      000AF1 00                    3076 	.db #0x00	; 0
      000AF2 00                    3077 	.db #0x00	; 0
      000AF3 00                    3078 	.db #0x00	; 0
      000AF4 00                    3079 	.db #0x00	; 0
      000AF5 1C                    3080 	.db #0x1c	; 28
      000AF6 1C                    3081 	.db #0x1c	; 28
      000AF7 7C                    3082 	.db #0x7c	; 124
      000AF8 7C                    3083 	.db #0x7c	; 124
      000AF9 1C                    3084 	.db #0x1c	; 28
      000AFA 1C                    3085 	.db #0x1c	; 28
      000AFB 08                    3086 	.db #0x08	; 8
      000AFC 08                    3087 	.db #0x08	; 8
      000AFD 00                    3088 	.db #0x00	; 0
      000AFE 00                    3089 	.db #0x00	; 0
      000AFF 00                    3090 	.db #0x00	; 0
      000B00 00                    3091 	.db #0x00	; 0
      000B01 00                    3092 	.db #0x00	; 0
      000B02 00                    3093 	.db #0x00	; 0
      000B03 00                    3094 	.db #0x00	; 0
      000B04 00                    3095 	.db #0x00	; 0
      000B05 00                    3096 	.db #0x00	; 0
      000B06 00                    3097 	.db #0x00	; 0
      000B07 00                    3098 	.db #0x00	; 0
      000B08 00                    3099 	.db #0x00	; 0
      000B09 00                    3100 	.db #0x00	; 0
      000B0A 00                    3101 	.db #0x00	; 0
      000B0B 00                    3102 	.db #0x00	; 0
      000B0C 00                    3103 	.db #0x00	; 0
      000B0D 00                    3104 	.db #0x00	; 0
      000B0E 00                    3105 	.db #0x00	; 0
      000B0F 00                    3106 	.db #0x00	; 0
      000B10 00                    3107 	.db #0x00	; 0
      000B11 00                    3108 	.db #0x00	; 0
      000B12 00                    3109 	.db #0x00	; 0
      000B13 00                    3110 	.db #0x00	; 0
      000B14 00                    3111 	.db #0x00	; 0
      000B15 28                    3112 	.db #0x28	; 40
      000B16 28                    3113 	.db #0x28	; 40
      000B17 30                    3114 	.db #0x30	; 48	'0'
      000B18 30                    3115 	.db #0x30	; 48	'0'
      000B19 38                    3116 	.db #0x38	; 56	'8'
      000B1A 38                    3117 	.db #0x38	; 56	'8'
      000B1B 10                    3118 	.db #0x10	; 16
      000B1C 10                    3119 	.db #0x10	; 16
      000B1D 00                    3120 	.db #0x00	; 0
      000B1E 00                    3121 	.db #0x00	; 0
      000B1F 00                    3122 	.db #0x00	; 0
      000B20 00                    3123 	.db #0x00	; 0
      000B21 00                    3124 	.db #0x00	; 0
      000B22 00                    3125 	.db #0x00	; 0
      000B23 00                    3126 	.db #0x00	; 0
      000B24 00                    3127 	.db #0x00	; 0
      000B25 00                    3128 	.db #0x00	; 0
      000B26 00                    3129 	.db #0x00	; 0
      000B27 00                    3130 	.db #0x00	; 0
      000B28 00                    3131 	.db #0x00	; 0
      000B29 00                    3132 	.db #0x00	; 0
      000B2A 00                    3133 	.db #0x00	; 0
      000B2B 00                    3134 	.db #0x00	; 0
      000B2C 00                    3135 	.db #0x00	; 0
      000B2D 00                    3136 	.db #0x00	; 0
      000B2E 00                    3137 	.db #0x00	; 0
      000B2F 00                    3138 	.db #0x00	; 0
      000B30 00                    3139 	.db #0x00	; 0
      000B31 00                    3140 	.db #0x00	; 0
      000B32 00                    3141 	.db #0x00	; 0
      000B33 00                    3142 	.db #0x00	; 0
      000B34 00                    3143 	.db #0x00	; 0
      000B35 04                    3144 	.db #0x04	; 4
      000B36 04                    3145 	.db #0x04	; 4
      000B37 0E                    3146 	.db #0x0e	; 14
      000B38 0E                    3147 	.db #0x0e	; 14
      000B39 0E                    3148 	.db #0x0e	; 14
      000B3A 0E                    3149 	.db #0x0e	; 14
      000B3B 00                    3150 	.db #0x00	; 0
      000B3C 00                    3151 	.db #0x00	; 0
      000B3D 00                    3152 	.db #0x00	; 0
      000B3E 00                    3153 	.db #0x00	; 0
      000B3F 00                    3154 	.db #0x00	; 0
      000B40 00                    3155 	.db #0x00	; 0
      000B41 00                    3156 	.db #0x00	; 0
      000B42 00                    3157 	.db #0x00	; 0
      000B43 00                    3158 	.db #0x00	; 0
      000B44 00                    3159 	.db #0x00	; 0
      000B45 00                    3160 	.db #0x00	; 0
      000B46 00                    3161 	.db #0x00	; 0
      000B47 00                    3162 	.db #0x00	; 0
      000B48 00                    3163 	.db #0x00	; 0
      000B49 00                    3164 	.db #0x00	; 0
      000B4A 00                    3165 	.db #0x00	; 0
      000B4B 00                    3166 	.db #0x00	; 0
      000B4C 00                    3167 	.db #0x00	; 0
      000B4D 00                    3168 	.db #0x00	; 0
      000B4E 00                    3169 	.db #0x00	; 0
      000B4F 00                    3170 	.db #0x00	; 0
      000B50 00                    3171 	.db #0x00	; 0
      000B51 00                    3172 	.db #0x00	; 0
      000B52 00                    3173 	.db #0x00	; 0
      000B53 00                    3174 	.db #0x00	; 0
      000B54 00                    3175 	.db #0x00	; 0
      000B55 00                    3176 	.db #0x00	; 0
      000B56 00                    3177 	.db #0x00	; 0
      000B57 60                    3178 	.db #0x60	; 96
      000B58 60                    3179 	.db #0x60	; 96
      000B59 40                    3180 	.db #0x40	; 64
      000B5A 40                    3181 	.db #0x40	; 64
      000B5B 00                    3182 	.db #0x00	; 0
      000B5C 00                    3183 	.db #0x00	; 0
      000B5D 00                    3184 	.db #0x00	; 0
      000B5E 00                    3185 	.db #0x00	; 0
      000B5F 00                    3186 	.db #0x00	; 0
      000B60 00                    3187 	.db #0x00	; 0
      000B61 00                    3188 	.db #0x00	; 0
      000B62 00                    3189 	.db #0x00	; 0
      000B63 00                    3190 	.db #0x00	; 0
      000B64 00                    3191 	.db #0x00	; 0
      000B65 00                    3192 	.db #0x00	; 0
      000B66 00                    3193 	.db #0x00	; 0
      000B67 00                    3194 	.db #0x00	; 0
      000B68 00                    3195 	.db #0x00	; 0
      000B69 00                    3196 	.db #0x00	; 0
      000B6A 00                    3197 	.db #0x00	; 0
      000B6B 00                    3198 	.db #0x00	; 0
      000B6C 00                    3199 	.db #0x00	; 0
      000B6D 00                    3200 	.db #0x00	; 0
      000B6E 00                    3201 	.db #0x00	; 0
      000B6F 00                    3202 	.db #0x00	; 0
      000B70 00                    3203 	.db #0x00	; 0
      000B71 00                    3204 	.db #0x00	; 0
      000B72 00                    3205 	.db #0x00	; 0
      000B73 00                    3206 	.db #0x00	; 0
      000B74 00                    3207 	.db #0x00	; 0
      000B75 00                    3208 	.db #0x00	; 0
      000B76 00                    3209 	.db #0x00	; 0
      000B77 02                    3210 	.db #0x02	; 2
      000B78 02                    3211 	.db #0x02	; 2
      000B79 02                    3212 	.db #0x02	; 2
      000B7A 02                    3213 	.db #0x02	; 2
      000B7B 00                    3214 	.db #0x00	; 0
      000B7C 00                    3215 	.db #0x00	; 0
      000B7D 00                    3216 	.db #0x00	; 0
      000B7E 00                    3217 	.db #0x00	; 0
      000B7F 00                    3218 	.db #0x00	; 0
      000B80 00                    3219 	.db #0x00	; 0
      000B81 00                    3220 	.db #0x00	; 0
      000B82 00                    3221 	.db #0x00	; 0
      000B83 00                    3222 	.db #0x00	; 0
      000B84 00                    3223 	.db #0x00	; 0
      000B85 00                    3224 	.db #0x00	; 0
      000B86 00                    3225 	.db #0x00	; 0
      000B87 00                    3226 	.db #0x00	; 0
      000B88 00                    3227 	.db #0x00	; 0
      000B89                       3228 _BLANKSIZE:
      000B89 03                    3229 	.db #0x03	; 3
      000B8A                       3230 _BLANK:
      000B8A 26                    3231 	.db #0x26	; 38
      000B8B 2B                    3232 	.db #0x2b	; 43
      000B8C 2C                    3233 	.db #0x2c	; 44
      000B8D                       3234 _EMPTYSPRITE:
      000B8D 50                    3235 	.db #0x50	; 80	'P'
      000B8E                       3236 _ENEMYCOUNT:
      000B8E 05                    3237 	.db #0x05	; 5
      000B8F                       3238 _xSpawnPositions:
      000B8F 00                    3239 	.db #0x00	; 0
      000B90 60                    3240 	.db #0x60	; 96
      000B91 B0                    3241 	.db #0xb0	; 176
      000B92 00                    3242 	.db #0x00	; 0
      000B93 B0                    3243 	.db #0xb0	; 176
      000B94 00                    3244 	.db #0x00	; 0
      000B95 60                    3245 	.db #0x60	; 96
      000B96 B0                    3246 	.db #0xb0	; 176
      000B97                       3247 _ySpawnPositions:
      000B97 00                    3248 	.db #0x00	; 0
      000B98 00                    3249 	.db #0x00	; 0
      000B99 00                    3250 	.db #0x00	; 0
      000B9A 5C                    3251 	.db #0x5c	; 92
      000B9B 5C                    3252 	.db #0x5c	; 92
      000B9C A0                    3253 	.db #0xa0	; 160
      000B9D A0                    3254 	.db #0xa0	; 160
      000B9E A0                    3255 	.db #0xa0	; 160
      000B9F                       3256 _PROJECTILECOUNT:
      000B9F 05                    3257 	.db #0x05	; 5
      000BA0                       3258 _PLAYERSIZE:
      000BA0 10                    3259 	.db #0x10	; 16
      000BA1                       3260 _maxHull:
      000BA1 64                    3261 	.db #0x64	;  100	'd'
      000BA2                       3262 _maxShield:
      000BA2 64                    3263 	.db #0x64	;  100	'd'
      000BA3                       3264 _MAXGUNLEVEL:
      000BA3 01                    3265 	.db #0x01	; 1
      000BA4                       3266 _SPLASHDROPOFF:
      000BA4 01                    3267 	.db #0x01	; 1
      000BA5                       3268 _exCount:
      000BA5 03                    3269 	.db #0x03	; 3
      000BA6                       3270 _EXPLFRAMETIME:
      000BA6 03                    3271 	.db #0x03	; 3
      000BA7                       3272 _exTileCount:
      000BA7 03                    3273 	.db #0x03	; 3
      000BA8                       3274 _AUXTICKFREQUENCY:
      000BA8 01                    3275 	.db #0x01	; 1
                                   3276 ;src/main.c:159: void setHealthBar(uint8_t row, uint8_t hp) {
                                   3277 ;	---------------------------------
                                   3278 ; Function setHealthBar
                                   3279 ; ---------------------------------
      000BA9                       3280 _setHealthBar::
      000BA9 E8 FB                 3281 	add	sp, #-5
                                   3282 ;src/main.c:161: if (hp >= 80) {
      000BAB F8 08                 3283 	ldhl	sp,	#8
      000BAD 7E                    3284 	ld	a, (hl)
      000BAE D6 50                 3285 	sub	a, #0x50
      000BB0 38 31                 3286 	jr	C, 00102$
                                   3287 ;src/main.c:162: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000BB2 F8 00                 3288 	ldhl	sp,	#0
      000BB4 4D                    3289 	ld	c, l
      000BB5 44                    3290 	ld	b, h
      000BB6 36 50                 3291 	ld	(hl), #0x50
      000BB8 69                    3292 	ld	l, c
                                   3293 ;	spillPairReg hl
                                   3294 ;	spillPairReg hl
      000BB9 60                    3295 	ld	h, b
                                   3296 ;	spillPairReg hl
                                   3297 ;	spillPairReg hl
      000BBA 23                    3298 	inc	hl
      000BBB 36 50                 3299 	ld	(hl), #0x50
      000BBD 69                    3300 	ld	l, c
                                   3301 ;	spillPairReg hl
                                   3302 ;	spillPairReg hl
      000BBE 60                    3303 	ld	h, b
                                   3304 ;	spillPairReg hl
                                   3305 ;	spillPairReg hl
      000BBF 23                    3306 	inc	hl
      000BC0 23                    3307 	inc	hl
      000BC1 36 50                 3308 	ld	(hl), #0x50
      000BC3 69                    3309 	ld	l, c
                                   3310 ;	spillPairReg hl
                                   3311 ;	spillPairReg hl
      000BC4 60                    3312 	ld	h, b
                                   3313 ;	spillPairReg hl
                                   3314 ;	spillPairReg hl
      000BC5 23                    3315 	inc	hl
      000BC6 23                    3316 	inc	hl
      000BC7 23                    3317 	inc	hl
      000BC8 36 50                 3318 	ld	(hl), #0x50
      000BCA 21 04 00              3319 	ld	hl, #0x0004
      000BCD 09                    3320 	add	hl, bc
      000BCE 36 50                 3321 	ld	(hl), #0x50
                                   3322 ;src/main.c:163: set_win_tiles(5,row,5,1,blockmap);
      000BD0 C5                    3323 	push	bc
      000BD1 21 05 01              3324 	ld	hl, #0x105
      000BD4 E5                    3325 	push	hl
      000BD5 F8 0B                 3326 	ldhl	sp,	#11
      000BD7 66                    3327 	ld	h, (hl)
      000BD8 2E 05                 3328 	ld	l, #0x05
      000BDA E5                    3329 	push	hl
      000BDB CDr00r00              3330 	call	_set_win_tiles
      000BDE E8 06                 3331 	add	sp, #6
                                   3332 ;src/main.c:164: return;
      000BE0 C3rB7r0C              3333 	jp	00109$
      000BE3                       3334 00102$:
                                   3335 ;src/main.c:166: if (hp >= 60) {
      000BE3 F8 08                 3336 	ldhl	sp,	#8
      000BE5 7E                    3337 	ld	a, (hl)
      000BE6 D6 3C                 3338 	sub	a, #0x3c
      000BE8 38 31                 3339 	jr	C, 00104$
                                   3340 ;src/main.c:167: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000BEA F8 00                 3341 	ldhl	sp,	#0
      000BEC 4D                    3342 	ld	c, l
      000BED 44                    3343 	ld	b, h
      000BEE 36 50                 3344 	ld	(hl), #0x50
      000BF0 69                    3345 	ld	l, c
                                   3346 ;	spillPairReg hl
                                   3347 ;	spillPairReg hl
      000BF1 60                    3348 	ld	h, b
                                   3349 ;	spillPairReg hl
                                   3350 ;	spillPairReg hl
      000BF2 23                    3351 	inc	hl
      000BF3 36 50                 3352 	ld	(hl), #0x50
      000BF5 69                    3353 	ld	l, c
                                   3354 ;	spillPairReg hl
                                   3355 ;	spillPairReg hl
      000BF6 60                    3356 	ld	h, b
                                   3357 ;	spillPairReg hl
                                   3358 ;	spillPairReg hl
      000BF7 23                    3359 	inc	hl
      000BF8 23                    3360 	inc	hl
      000BF9 36 50                 3361 	ld	(hl), #0x50
      000BFB 69                    3362 	ld	l, c
                                   3363 ;	spillPairReg hl
                                   3364 ;	spillPairReg hl
      000BFC 60                    3365 	ld	h, b
                                   3366 ;	spillPairReg hl
                                   3367 ;	spillPairReg hl
      000BFD 23                    3368 	inc	hl
      000BFE 23                    3369 	inc	hl
      000BFF 23                    3370 	inc	hl
      000C00 36 50                 3371 	ld	(hl), #0x50
      000C02 21 04 00              3372 	ld	hl, #0x0004
      000C05 09                    3373 	add	hl, bc
      000C06 36 00                 3374 	ld	(hl), #0x00
                                   3375 ;src/main.c:168: set_win_tiles(5,row,5,1,blockmap);
      000C08 C5                    3376 	push	bc
      000C09 21 05 01              3377 	ld	hl, #0x105
      000C0C E5                    3378 	push	hl
      000C0D F8 0B                 3379 	ldhl	sp,	#11
      000C0F 66                    3380 	ld	h, (hl)
      000C10 2E 05                 3381 	ld	l, #0x05
      000C12 E5                    3382 	push	hl
      000C13 CDr00r00              3383 	call	_set_win_tiles
      000C16 E8 06                 3384 	add	sp, #6
                                   3385 ;src/main.c:169: return;
      000C18 C3rB7r0C              3386 	jp	00109$
      000C1B                       3387 00104$:
                                   3388 ;src/main.c:171: if (hp >= 40) {
      000C1B F8 08                 3389 	ldhl	sp,	#8
      000C1D 7E                    3390 	ld	a, (hl)
      000C1E D6 28                 3391 	sub	a, #0x28
      000C20 38 30                 3392 	jr	C, 00106$
                                   3393 ;src/main.c:172: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000C22 F8 00                 3394 	ldhl	sp,	#0
      000C24 4D                    3395 	ld	c, l
      000C25 44                    3396 	ld	b, h
      000C26 36 50                 3397 	ld	(hl), #0x50
      000C28 69                    3398 	ld	l, c
                                   3399 ;	spillPairReg hl
                                   3400 ;	spillPairReg hl
      000C29 60                    3401 	ld	h, b
                                   3402 ;	spillPairReg hl
                                   3403 ;	spillPairReg hl
      000C2A 23                    3404 	inc	hl
      000C2B 36 50                 3405 	ld	(hl), #0x50
      000C2D 69                    3406 	ld	l, c
                                   3407 ;	spillPairReg hl
                                   3408 ;	spillPairReg hl
      000C2E 60                    3409 	ld	h, b
                                   3410 ;	spillPairReg hl
                                   3411 ;	spillPairReg hl
      000C2F 23                    3412 	inc	hl
      000C30 23                    3413 	inc	hl
      000C31 36 50                 3414 	ld	(hl), #0x50
      000C33 59                    3415 	ld	e, c
      000C34 50                    3416 	ld	d, b
      000C35 13                    3417 	inc	de
      000C36 13                    3418 	inc	de
      000C37 13                    3419 	inc	de
      000C38 AF                    3420 	xor	a, a
      000C39 12                    3421 	ld	(de), a
      000C3A 21 04 00              3422 	ld	hl, #0x0004
      000C3D 09                    3423 	add	hl, bc
      000C3E 36 00                 3424 	ld	(hl), #0x00
                                   3425 ;src/main.c:173: set_win_tiles(5,row,5,1,blockmap);
      000C40 C5                    3426 	push	bc
      000C41 21 05 01              3427 	ld	hl, #0x105
      000C44 E5                    3428 	push	hl
      000C45 F8 0B                 3429 	ldhl	sp,	#11
      000C47 66                    3430 	ld	h, (hl)
      000C48 2E 05                 3431 	ld	l, #0x05
      000C4A E5                    3432 	push	hl
      000C4B CDr00r00              3433 	call	_set_win_tiles
      000C4E E8 06                 3434 	add	sp, #6
                                   3435 ;src/main.c:174: return;
      000C50 18 65                 3436 	jr	00109$
      000C52                       3437 00106$:
                                   3438 ;src/main.c:176: if (hp >= 20) {
      000C52 F8 08                 3439 	ldhl	sp,	#8
      000C54 7E                    3440 	ld	a, (hl)
      000C55 D6 14                 3441 	sub	a, #0x14
      000C57 38 30                 3442 	jr	C, 00108$
                                   3443 ;src/main.c:177: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000C59 F8 00                 3444 	ldhl	sp,	#0
      000C5B 4D                    3445 	ld	c, l
      000C5C 44                    3446 	ld	b, h
      000C5D 36 50                 3447 	ld	(hl), #0x50
      000C5F 69                    3448 	ld	l, c
                                   3449 ;	spillPairReg hl
                                   3450 ;	spillPairReg hl
      000C60 60                    3451 	ld	h, b
                                   3452 ;	spillPairReg hl
                                   3453 ;	spillPairReg hl
      000C61 23                    3454 	inc	hl
      000C62 36 50                 3455 	ld	(hl), #0x50
      000C64 59                    3456 	ld	e, c
      000C65 50                    3457 	ld	d, b
      000C66 13                    3458 	inc	de
      000C67 13                    3459 	inc	de
      000C68 AF                    3460 	xor	a, a
      000C69 12                    3461 	ld	(de), a
      000C6A 59                    3462 	ld	e, c
      000C6B 50                    3463 	ld	d, b
      000C6C 13                    3464 	inc	de
      000C6D 13                    3465 	inc	de
      000C6E 13                    3466 	inc	de
      000C6F AF                    3467 	xor	a, a
      000C70 12                    3468 	ld	(de), a
      000C71 21 04 00              3469 	ld	hl, #0x0004
      000C74 09                    3470 	add	hl, bc
      000C75 36 00                 3471 	ld	(hl), #0x00
                                   3472 ;src/main.c:178: set_win_tiles(5,row,5,1,blockmap);
      000C77 C5                    3473 	push	bc
      000C78 21 05 01              3474 	ld	hl, #0x105
      000C7B E5                    3475 	push	hl
      000C7C F8 0B                 3476 	ldhl	sp,	#11
      000C7E 66                    3477 	ld	h, (hl)
      000C7F 2E 05                 3478 	ld	l, #0x05
      000C81 E5                    3479 	push	hl
      000C82 CDr00r00              3480 	call	_set_win_tiles
      000C85 E8 06                 3481 	add	sp, #6
                                   3482 ;src/main.c:179: return;
      000C87 18 2E                 3483 	jr	00109$
      000C89                       3484 00108$:
                                   3485 ;src/main.c:181: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000C89 F8 00                 3486 	ldhl	sp,	#0
      000C8B 4D                    3487 	ld	c, l
      000C8C 44                    3488 	ld	b, h
      000C8D 36 50                 3489 	ld	(hl), #0x50
      000C8F 59                    3490 	ld	e, c
      000C90 50                    3491 	ld	d, b
      000C91 13                    3492 	inc	de
      000C92 AF                    3493 	xor	a, a
      000C93 12                    3494 	ld	(de), a
      000C94 59                    3495 	ld	e, c
      000C95 50                    3496 	ld	d, b
      000C96 13                    3497 	inc	de
      000C97 13                    3498 	inc	de
      000C98 AF                    3499 	xor	a, a
      000C99 12                    3500 	ld	(de), a
      000C9A 59                    3501 	ld	e, c
      000C9B 50                    3502 	ld	d, b
      000C9C 13                    3503 	inc	de
      000C9D 13                    3504 	inc	de
      000C9E 13                    3505 	inc	de
      000C9F AF                    3506 	xor	a, a
      000CA0 12                    3507 	ld	(de), a
      000CA1 21 04 00              3508 	ld	hl, #0x0004
      000CA4 09                    3509 	add	hl, bc
      000CA5 36 00                 3510 	ld	(hl), #0x00
                                   3511 ;src/main.c:182: set_win_tiles(5,row,5,1,blockmap);
      000CA7 C5                    3512 	push	bc
      000CA8 21 05 01              3513 	ld	hl, #0x105
      000CAB E5                    3514 	push	hl
      000CAC F8 0B                 3515 	ldhl	sp,	#11
      000CAE 66                    3516 	ld	h, (hl)
      000CAF 2E 05                 3517 	ld	l, #0x05
      000CB1 E5                    3518 	push	hl
      000CB2 CDr00r00              3519 	call	_set_win_tiles
      000CB5 E8 06                 3520 	add	sp, #6
                                   3521 ;src/main.c:183: return;
      000CB7                       3522 00109$:
                                   3523 ;src/main.c:185: }
      000CB7 E8 05                 3524 	add	sp, #5
      000CB9 C9                    3525 	ret
                                   3526 ;src/main.c:187: void updateScore() {
                                   3527 ;	---------------------------------
                                   3528 ; Function updateScore
                                   3529 ; ---------------------------------
      000CBA                       3530 _updateScore::
      000CBA E8 F6                 3531 	add	sp, #-10
                                   3532 ;src/main.c:191: len = bcd2text(&SCORE, 0x01, buf);
      000CBC F8 00                 3533 	ldhl	sp,	#0
      000CBE 4D                    3534 	ld	c, l
      000CBF 44                    3535 	ld	b, h
      000CC0 59                    3536 	ld	e, c
      000CC1 50                    3537 	ld	d, b
      000CC2 C5                    3538 	push	bc
      000CC3 D5                    3539 	push	de
      000CC4 3E 01                 3540 	ld	a, #0x01
      000CC6 F5                    3541 	push	af
      000CC7 33                    3542 	inc	sp
      000CC8 11rB3r00              3543 	ld	de, #_SCORE
      000CCB D5                    3544 	push	de
      000CCC CDr00r00              3545 	call	_bcd2text
      000CCF E8 05                 3546 	add	sp, #5
      000CD1 C1                    3547 	pop	bc
                                   3548 ;src/main.c:192: set_win_tiles(15, 1, 5, 1, buf+3);
      000CD2 03                    3549 	inc	bc
      000CD3 03                    3550 	inc	bc
      000CD4 03                    3551 	inc	bc
      000CD5 C5                    3552 	push	bc
      000CD6 21 05 01              3553 	ld	hl, #0x105
      000CD9 E5                    3554 	push	hl
      000CDA 21 0F 01              3555 	ld	hl, #0x10f
      000CDD E5                    3556 	push	hl
      000CDE CDr00r00              3557 	call	_set_win_tiles
                                   3558 ;src/main.c:193: }
      000CE1 E8 10                 3559 	add	sp, #16
      000CE3 C9                    3560 	ret
                                   3561 ;src/main.c:195: void updateMissileCount(int8_t amount) {
                                   3562 ;	---------------------------------
                                   3563 ; Function updateMissileCount
                                   3564 ; ---------------------------------
      000CE4                       3565 _updateMissileCount::
      000CE4 E8 F6                 3566 	add	sp, #-10
                                   3567 ;src/main.c:196: if (amount == -1) {
      000CE6 F8 0C                 3568 	ldhl	sp,	#12
      000CE8 7E                    3569 	ld	a, (hl)
      000CE9 3C                    3570 	inc	a
      000CEA 20 13                 3571 	jr	NZ, 00112$
                                   3572 ;src/main.c:197: missiles--;
      000CEC 21rA8r00              3573 	ld	hl, #_missiles
      000CEF 35                    3574 	dec	(hl)
                                   3575 ;src/main.c:198: bcd_sub(&MISSILES, &INCREMENT);
      000CF0 11rB7r00              3576 	ld	de, #_INCREMENT
      000CF3 D5                    3577 	push	de
      000CF4 11rA9r00              3578 	ld	de, #_MISSILES
      000CF7 D5                    3579 	push	de
      000CF8 CDr00r00              3580 	call	_bcd_sub
      000CFB E8 04                 3581 	add	sp, #4
      000CFD 18 30                 3582 	jr	00104$
                                   3583 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000CFF                       3584 00112$:
      000CFF 0E 00                 3585 	ld	c, #0x00
      000D01                       3586 00106$:
      000D01 F8 0C                 3587 	ldhl	sp,	#12
      000D03 5E                    3588 	ld	e, (hl)
      000D04 79                    3589 	ld	a,c
      000D05 57                    3590 	ld	d,a
      000D06 96                    3591 	sub	a, (hl)
      000D07 CB 7B                 3592 	bit	7, e
      000D09 28 07                 3593 	jr	Z, 00128$
      000D0B CB 7A                 3594 	bit	7, d
      000D0D 20 08                 3595 	jr	NZ, 00129$
      000D0F BF                    3596 	cp	a, a
      000D10 18 05                 3597 	jr	00129$
      000D12                       3598 00128$:
      000D12 CB 7A                 3599 	bit	7, d
      000D14 28 01                 3600 	jr	Z, 00129$
      000D16 37                    3601 	scf
      000D17                       3602 00129$:
      000D17 30 16                 3603 	jr	NC, 00104$
                                   3604 ;src/main.c:202: ++missiles;
      000D19 21rA8r00              3605 	ld	hl, #_missiles
      000D1C 34                    3606 	inc	(hl)
                                   3607 ;src/main.c:203: bcd_add(&MISSILES, &INCREMENT);
      000D1D C5                    3608 	push	bc
      000D1E 11rB7r00              3609 	ld	de, #_INCREMENT
      000D21 D5                    3610 	push	de
      000D22 11rA9r00              3611 	ld	de, #_MISSILES
      000D25 D5                    3612 	push	de
      000D26 CDr00r00              3613 	call	_bcd_add
      000D29 E8 04                 3614 	add	sp, #4
      000D2B C1                    3615 	pop	bc
                                   3616 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000D2C 0C                    3617 	inc	c
      000D2D 18 D2                 3618 	jr	00106$
      000D2F                       3619 00104$:
                                   3620 ;src/main.c:208: len = bcd2text(&MISSILES, 0x01, buf);
      000D2F F8 00                 3621 	ldhl	sp,	#0
      000D31 4D                    3622 	ld	c, l
      000D32 44                    3623 	ld	b, h
      000D33 59                    3624 	ld	e, c
      000D34 50                    3625 	ld	d, b
      000D35 C5                    3626 	push	bc
      000D36 D5                    3627 	push	de
      000D37 3E 01                 3628 	ld	a, #0x01
      000D39 F5                    3629 	push	af
      000D3A 33                    3630 	inc	sp
      000D3B 11rA9r00              3631 	ld	de, #_MISSILES
      000D3E D5                    3632 	push	de
      000D3F CDr00r00              3633 	call	_bcd2text
      000D42 E8 05                 3634 	add	sp, #5
      000D44 C1                    3635 	pop	bc
                                   3636 ;src/main.c:209: set_win_tiles(18, 0, 2, 1, buf+6);
      000D45 21 06 00              3637 	ld	hl, #0x0006
      000D48 09                    3638 	add	hl, bc
      000D49 E5                    3639 	push	hl
      000D4A 21 02 01              3640 	ld	hl, #0x102
      000D4D E5                    3641 	push	hl
      000D4E 21 12 00              3642 	ld	hl, #0x12
      000D51 E5                    3643 	push	hl
      000D52 CDr00r00              3644 	call	_set_win_tiles
                                   3645 ;src/main.c:211: }
      000D55 E8 10                 3646 	add	sp, #16
      000D57 C9                    3647 	ret
                                   3648 ;src/main.c:213: void incrementScore() {
                                   3649 ;	---------------------------------
                                   3650 ; Function incrementScore
                                   3651 ; ---------------------------------
      000D58                       3652 _incrementScore::
                                   3653 ;src/main.c:214: score += 1;
      000D58 21rB1r00              3654 	ld	hl, #_score
      000D5B 2A                    3655 	ld	a, (hl+)
      000D5C 4F                    3656 	ld	c, a
      000D5D 3A                    3657 	ld	a, (hl-)
      000D5E 47                    3658 	ld	b, a
      000D5F 03                    3659 	inc	bc
      000D60 79                    3660 	ld	a, c
      000D61 22                    3661 	ld	(hl+), a
      000D62 70                    3662 	ld	(hl), b
                                   3663 ;src/main.c:215: bcd_add(&SCORE, &INCREMENT);
      000D63 11rB7r00              3664 	ld	de, #_INCREMENT
      000D66 D5                    3665 	push	de
      000D67 11rB3r00              3666 	ld	de, #_SCORE
      000D6A D5                    3667 	push	de
      000D6B CDr00r00              3668 	call	_bcd_add
      000D6E E8 04                 3669 	add	sp, #4
                                   3670 ;src/main.c:216: }
      000D70 C9                    3671 	ret
                                   3672 ;src/main.c:218: void updateDirection() {
                                   3673 ;	---------------------------------
                                   3674 ; Function updateDirection
                                   3675 ; ---------------------------------
      000D71                       3676 _updateDirection::
      000D71 E8 FC                 3677 	add	sp, #-4
                                   3678 ;src/main.c:222: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000D73 21rF5r00              3679 	ld	hl, #_joydata
      000D76 5E                    3680 	ld	e, (hl)
      000D77 7B                    3681 	ld	a, e
      000D78 E6 01                 3682 	and	a, #0x01
      000D7A F8 00                 3683 	ldhl	sp,	#0
      000D7C 22                    3684 	ld	(hl+), a
      000D7D AF                    3685 	xor	a, a
      000D7E 22                    3686 	ld	(hl+), a
      000D7F 7B                    3687 	ld	a, e
      000D80 E6 04                 3688 	and	a, #0x04
      000D82 22                    3689 	ld	(hl+), a
      000D83 AF                    3690 	xor	a, a
      000D84 32                    3691 	ld	(hl-), a
      000D85 2B                    3692 	dec	hl
      000D86 7B                    3693 	ld	a, e
      000D87 E6 08                 3694 	and	a, #0x08
      000D89 4F                    3695 	ld	c, a
      000D8A 06 00                 3696 	ld	b, #0x00
      000D8C 3A                    3697 	ld	a, (hl-)
      000D8D B6                    3698 	or	a, (hl)
      000D8E 28 14                 3699 	jr	Z, 00102$
      000D90 F8 03                 3700 	ldhl	sp,	#3
      000D92 3A                    3701 	ld	a, (hl-)
      000D93 B6                    3702 	or	a, (hl)
      000D94 20 0E                 3703 	jr	NZ, 00102$
      000D96 78                    3704 	ld	a, b
      000D97 B1                    3705 	or	a, c
      000D98 20 0A                 3706 	jr	NZ, 00102$
                                   3707 ;src/main.c:223: xDir = 1;
      000D9A 21r93r00              3708 	ld	hl, #_xDir
      000D9D 36 01                 3709 	ld	(hl), #0x01
                                   3710 ;src/main.c:224: yDir = 0;
      000D9F 21r94r00              3711 	ld	hl, #_yDir
      000DA2 36 00                 3712 	ld	(hl), #0x00
      000DA4                       3713 00102$:
                                   3714 ;src/main.c:226: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000DA4 7B                    3715 	ld	a, e
      000DA5 E6 02                 3716 	and	a, #0x02
      000DA7 5F                    3717 	ld	e, a
      000DA8 16 00                 3718 	ld	d, #0x00
      000DAA 7A                    3719 	ld	a, d
      000DAB B3                    3720 	or	a, e
      000DAC 28 14                 3721 	jr	Z, 00106$
      000DAE F8 03                 3722 	ldhl	sp,	#3
      000DB0 3A                    3723 	ld	a, (hl-)
      000DB1 B6                    3724 	or	a, (hl)
      000DB2 20 0E                 3725 	jr	NZ, 00106$
      000DB4 78                    3726 	ld	a, b
      000DB5 B1                    3727 	or	a, c
      000DB6 20 0A                 3728 	jr	NZ, 00106$
                                   3729 ;src/main.c:227: xDir = -1;
      000DB8 21r93r00              3730 	ld	hl, #_xDir
      000DBB 36 FF                 3731 	ld	(hl), #0xff
                                   3732 ;src/main.c:228: yDir = 0;
      000DBD 21r94r00              3733 	ld	hl, #_yDir
      000DC0 36 00                 3734 	ld	(hl), #0x00
      000DC2                       3735 00106$:
                                   3736 ;src/main.c:230: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DC2 F8 03                 3737 	ldhl	sp,	#3
      000DC4 3A                    3738 	ld	a, (hl-)
      000DC5 B6                    3739 	or	a, (hl)
      000DC6 28 13                 3740 	jr	Z, 00110$
      000DC8 7A                    3741 	ld	a, d
      000DC9 B3                    3742 	or	a, e
      000DCA 20 0F                 3743 	jr	NZ, 00110$
      000DCC 2B                    3744 	dec	hl
      000DCD 3A                    3745 	ld	a, (hl-)
      000DCE B6                    3746 	or	a, (hl)
      000DCF 20 0A                 3747 	jr	NZ, 00110$
                                   3748 ;src/main.c:231: xDir = 0;
      000DD1 21r93r00              3749 	ld	hl, #_xDir
      000DD4 36 00                 3750 	ld	(hl), #0x00
                                   3751 ;src/main.c:232: yDir = -1;
      000DD6 21r94r00              3752 	ld	hl, #_yDir
      000DD9 36 FF                 3753 	ld	(hl), #0xff
      000DDB                       3754 00110$:
                                   3755 ;src/main.c:234: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DDB 78                    3756 	ld	a, b
      000DDC B1                    3757 	or	a, c
      000DDD 28 14                 3758 	jr	Z, 00114$
      000DDF 7A                    3759 	ld	a, d
      000DE0 B3                    3760 	or	a, e
      000DE1 20 10                 3761 	jr	NZ, 00114$
      000DE3 F8 01                 3762 	ldhl	sp,	#1
      000DE5 3A                    3763 	ld	a, (hl-)
      000DE6 B6                    3764 	or	a, (hl)
      000DE7 20 0A                 3765 	jr	NZ, 00114$
                                   3766 ;src/main.c:235: xDir = 0;
      000DE9 21r93r00              3767 	ld	hl, #_xDir
      000DEC 36 00                 3768 	ld	(hl), #0x00
                                   3769 ;src/main.c:236: yDir = 1;
      000DEE 21r94r00              3770 	ld	hl, #_yDir
      000DF1 36 01                 3771 	ld	(hl), #0x01
      000DF3                       3772 00114$:
                                   3773 ;src/main.c:240: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000DF3 F8 03                 3774 	ldhl	sp,	#3
      000DF5 3A                    3775 	ld	a, (hl-)
      000DF6 B6                    3776 	or	a, (hl)
      000DF7 28 0F                 3777 	jr	Z, 00118$
      000DF9 2B                    3778 	dec	hl
      000DFA 3A                    3779 	ld	a, (hl-)
      000DFB B6                    3780 	or	a, (hl)
      000DFC 28 0A                 3781 	jr	Z, 00118$
                                   3782 ;src/main.c:241: xDir = 1;
      000DFE 21r93r00              3783 	ld	hl, #_xDir
      000E01 36 01                 3784 	ld	(hl), #0x01
                                   3785 ;src/main.c:242: yDir = -1;
      000E03 21r94r00              3786 	ld	hl, #_yDir
      000E06 36 FF                 3787 	ld	(hl), #0xff
      000E08                       3788 00118$:
                                   3789 ;src/main.c:244: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000E08 F8 03                 3790 	ldhl	sp,	#3
      000E0A 3A                    3791 	ld	a, (hl-)
      000E0B B6                    3792 	or	a, (hl)
      000E0C 28 0E                 3793 	jr	Z, 00121$
      000E0E 7A                    3794 	ld	a, d
      000E0F B3                    3795 	or	a, e
      000E10 28 0A                 3796 	jr	Z, 00121$
                                   3797 ;src/main.c:245: xDir = -1;
      000E12 21r93r00              3798 	ld	hl, #_xDir
      000E15 36 FF                 3799 	ld	(hl), #0xff
                                   3800 ;src/main.c:246: yDir = -1;
      000E17 21r94r00              3801 	ld	hl, #_yDir
      000E1A 36 FF                 3802 	ld	(hl), #0xff
      000E1C                       3803 00121$:
                                   3804 ;src/main.c:248: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000E1C 78                    3805 	ld	a, b
      000E1D B1                    3806 	or	a, c
      000E1E 28 10                 3807 	jr	Z, 00124$
      000E20 F8 01                 3808 	ldhl	sp,	#1
      000E22 3A                    3809 	ld	a, (hl-)
      000E23 B6                    3810 	or	a, (hl)
      000E24 28 0A                 3811 	jr	Z, 00124$
                                   3812 ;src/main.c:249: xDir = 1;
      000E26 21r93r00              3813 	ld	hl, #_xDir
      000E29 36 01                 3814 	ld	(hl), #0x01
                                   3815 ;src/main.c:250: yDir = 1;
      000E2B 21r94r00              3816 	ld	hl, #_yDir
      000E2E 36 01                 3817 	ld	(hl), #0x01
      000E30                       3818 00124$:
                                   3819 ;src/main.c:252: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000E30 78                    3820 	ld	a, b
      000E31 B1                    3821 	or	a, c
      000E32 28 0E                 3822 	jr	Z, 00127$
      000E34 7A                    3823 	ld	a, d
      000E35 B3                    3824 	or	a, e
      000E36 28 0A                 3825 	jr	Z, 00127$
                                   3826 ;src/main.c:253: xDir = -1;
      000E38 21r93r00              3827 	ld	hl, #_xDir
      000E3B 36 FF                 3828 	ld	(hl), #0xff
                                   3829 ;src/main.c:254: yDir = 1;
      000E3D 21r94r00              3830 	ld	hl, #_yDir
      000E40 36 01                 3831 	ld	(hl), #0x01
      000E42                       3832 00127$:
                                   3833 ;src/main.c:259: if (xDir == 0 && yDir == 0) {
      000E42 FAr93r00              3834 	ld	a, (#_xDir)
      000E45 B7                    3835 	or	a, a
      000E46 20 07                 3836 	jr	NZ, 00130$
      000E48 FAr94r00              3837 	ld	a, (#_yDir)
      000E4B B7                    3838 	or	a, a
                                   3839 ;src/main.c:260: return;
      000E4C CAr93r0F              3840 	jp	Z,00194$
      000E4F                       3841 00130$:
                                   3842 ;src/main.c:292: if (auxTick == 0) {
      000E4F FArBFr00              3843 	ld	a, (#_auxTick)
      000E52 B7                    3844 	or	a, a
      000E53 C2r93r0F              3845 	jp	NZ, 00194$
                                   3846 ;src/main.c:293: if (xDir == 0 && yDir > 0) {
      000E56 21r94r00              3847 	ld	hl, #_yDir
      000E59 5E                    3848 	ld	e, (hl)
      000E5A AF                    3849 	xor	a, a
      000E5B 57                    3850 	ld	d, a
      000E5C 96                    3851 	sub	a, (hl)
      000E5D CB 7B                 3852 	bit	7, e
      000E5F 28 07                 3853 	jr	Z, 00381$
      000E61 CB 7A                 3854 	bit	7, d
      000E63 20 08                 3855 	jr	NZ, 00382$
      000E65 BF                    3856 	cp	a, a
      000E66 18 05                 3857 	jr	00382$
      000E68                       3858 00381$:
      000E68 CB 7A                 3859 	bit	7, d
      000E6A 28 01                 3860 	jr	Z, 00382$
      000E6C 37                    3861 	scf
      000E6D                       3862 00382$:
      000E6D 3E 00                 3863 	ld	a, #0x00
      000E6F 17                    3864 	rla
      000E70 4F                    3865 	ld	c, a
      000E71 FAr93r00              3866 	ld	a, (#_xDir)
      000E74 B7                    3867 	or	a,a
      000E75 20 1A                 3868 	jr	NZ, 00157$
      000E77 B1                    3869 	or	a,c
      000E78 28 17                 3870 	jr	Z, 00157$
                                   3871 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E7A 21r02r00              3872 	ld	hl, #(_shadow_OAM + 2)
      000E7D 36 00                 3873 	ld	(hl), #0x00
      000E7F 21r06r00              3874 	ld	hl, #(_shadow_OAM + 6)
      000E82 36 02                 3875 	ld	(hl), #0x02
                                   3876 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000E84 21r03r00              3877 	ld	hl, #(_shadow_OAM + 3)
      000E87 36 40                 3878 	ld	(hl), #0x40
      000E89 21r07r00              3879 	ld	hl, #(_shadow_OAM + 7)
      000E8C 36 40                 3880 	ld	(hl), #0x40
                                   3881 ;src/main.c:297: set_sprite_prop(1, S_FLIPY); 
      000E8E C3r93r0F              3882 	jp	00194$
      000E91                       3883 00157$:
                                   3884 ;src/main.c:299: else if (xDir == 0 && yDir < 0) {
      000E91 FAr94r00              3885 	ld	a, (#_yDir)
      000E94 07                    3886 	rlca
      000E95 E6 01                 3887 	and	a,#0x01
      000E97 F8 02                 3888 	ldhl	sp,	#2
      000E99 77                    3889 	ld	(hl), a
      000E9A FAr93r00              3890 	ld	a, (#_xDir)
      000E9D B7                    3891 	or	a, a
      000E9E 20 1D                 3892 	jr	NZ, 00153$
      000EA0 F8 02                 3893 	ldhl	sp,	#2
      000EA2 7E                    3894 	ld	a, (hl)
      000EA3 B7                    3895 	or	a, a
      000EA4 28 17                 3896 	jr	Z, 00153$
                                   3897 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000EA6 21r02r00              3898 	ld	hl, #(_shadow_OAM + 2)
      000EA9 36 00                 3899 	ld	(hl), #0x00
      000EAB 21r06r00              3900 	ld	hl, #(_shadow_OAM + 6)
      000EAE 36 02                 3901 	ld	(hl), #0x02
                                   3902 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EB0 21r03r00              3903 	ld	hl, #(_shadow_OAM + 3)
      000EB3 36 00                 3904 	ld	(hl), #0x00
      000EB5 21r07r00              3905 	ld	hl, #(_shadow_OAM + 7)
      000EB8 36 00                 3906 	ld	(hl), #0x00
                                   3907 ;src/main.c:303: set_sprite_prop(1, 0); 
      000EBA C3r93r0F              3908 	jp	00194$
      000EBD                       3909 00153$:
                                   3910 ;src/main.c:305: else if (xDir > 0 && yDir == 0) {
      000EBD 21r93r00              3911 	ld	hl, #_xDir
      000EC0 5E                    3912 	ld	e, (hl)
      000EC1 AF                    3913 	xor	a, a
      000EC2 57                    3914 	ld	d, a
      000EC3 96                    3915 	sub	a, (hl)
      000EC4 CB 7B                 3916 	bit	7, e
      000EC6 28 07                 3917 	jr	Z, 00383$
      000EC8 CB 7A                 3918 	bit	7, d
      000ECA 20 08                 3919 	jr	NZ, 00384$
      000ECC BF                    3920 	cp	a, a
      000ECD 18 05                 3921 	jr	00384$
      000ECF                       3922 00383$:
      000ECF CB 7A                 3923 	bit	7, d
      000ED1 28 01                 3924 	jr	Z, 00384$
      000ED3 37                    3925 	scf
      000ED4                       3926 00384$:
      000ED4 3E 00                 3927 	ld	a, #0x00
      000ED6 17                    3928 	rla
      000ED7 47                    3929 	ld	b, a
      000ED8 B7                    3930 	or	a, a
      000ED9 28 1D                 3931 	jr	Z, 00149$
      000EDB FAr94r00              3932 	ld	a, (#_yDir)
      000EDE B7                    3933 	or	a, a
      000EDF 20 17                 3934 	jr	NZ, 00149$
                                   3935 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000EE1 21r02r00              3936 	ld	hl, #(_shadow_OAM + 2)
      000EE4 36 04                 3937 	ld	(hl), #0x04
      000EE6 21r06r00              3938 	ld	hl, #(_shadow_OAM + 6)
      000EE9 36 06                 3939 	ld	(hl), #0x06
                                   3940 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EEB 21r03r00              3941 	ld	hl, #(_shadow_OAM + 3)
      000EEE 36 00                 3942 	ld	(hl), #0x00
      000EF0 21r07r00              3943 	ld	hl, #(_shadow_OAM + 7)
      000EF3 36 00                 3944 	ld	(hl), #0x00
                                   3945 ;src/main.c:309: set_sprite_prop(1, 0); 
      000EF5 C3r93r0F              3946 	jp	00194$
      000EF8                       3947 00149$:
                                   3948 ;src/main.c:311: else if (xDir < 0 && yDir == 0) {
      000EF8 FAr93r00              3949 	ld	a, (#_xDir)
      000EFB 07                    3950 	rlca
      000EFC E6 01                 3951 	and	a,#0x01
      000EFE F8 03                 3952 	ldhl	sp,	#3
      000F00 77                    3953 	ld	(hl), a
      000F01 7E                    3954 	ld	a, (hl)
      000F02 B7                    3955 	or	a, a
      000F03 28 1C                 3956 	jr	Z, 00145$
      000F05 FAr94r00              3957 	ld	a, (#_yDir)
      000F08 B7                    3958 	or	a, a
      000F09 20 16                 3959 	jr	NZ, 00145$
                                   3960 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F0B 21r02r00              3961 	ld	hl, #(_shadow_OAM + 2)
      000F0E 36 04                 3962 	ld	(hl), #0x04
      000F10 21r06r00              3963 	ld	hl, #(_shadow_OAM + 6)
      000F13 36 06                 3964 	ld	(hl), #0x06
                                   3965 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F15 21r03r00              3966 	ld	hl, #(_shadow_OAM + 3)
      000F18 36 20                 3967 	ld	(hl), #0x20
      000F1A 21r07r00              3968 	ld	hl, #(_shadow_OAM + 7)
      000F1D 36 20                 3969 	ld	(hl), #0x20
                                   3970 ;src/main.c:315: set_sprite_prop(1, S_FLIPX); 
      000F1F 18 72                 3971 	jr	00194$
      000F21                       3972 00145$:
                                   3973 ;src/main.c:317: else if (xDir > 0 && yDir < 0) {
      000F21 78                    3974 	ld	a, b
      000F22 B7                    3975 	or	a, a
      000F23 28 1C                 3976 	jr	Z, 00141$
      000F25 F8 02                 3977 	ldhl	sp,	#2
      000F27 7E                    3978 	ld	a, (hl)
      000F28 B7                    3979 	or	a, a
      000F29 28 16                 3980 	jr	Z, 00141$
                                   3981 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F2B 21r02r00              3982 	ld	hl, #(_shadow_OAM + 2)
      000F2E 36 08                 3983 	ld	(hl), #0x08
      000F30 21r06r00              3984 	ld	hl, #(_shadow_OAM + 6)
      000F33 36 0A                 3985 	ld	(hl), #0x0a
                                   3986 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F35 21r03r00              3987 	ld	hl, #(_shadow_OAM + 3)
      000F38 36 00                 3988 	ld	(hl), #0x00
      000F3A 21r07r00              3989 	ld	hl, #(_shadow_OAM + 7)
      000F3D 36 00                 3990 	ld	(hl), #0x00
                                   3991 ;src/main.c:321: set_sprite_prop(1, 0); 
      000F3F 18 52                 3992 	jr	00194$
      000F41                       3993 00141$:
                                   3994 ;src/main.c:323: else if (xDir > 0 && yDir > 0) {
      000F41 78                    3995 	ld	a, b
      000F42 B7                    3996 	or	a, a
      000F43 28 1A                 3997 	jr	Z, 00137$
      000F45 79                    3998 	ld	a, c
      000F46 B7                    3999 	or	a, a
      000F47 28 16                 4000 	jr	Z, 00137$
                                   4001 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F49 21r02r00              4002 	ld	hl, #(_shadow_OAM + 2)
      000F4C 36 08                 4003 	ld	(hl), #0x08
      000F4E 21r06r00              4004 	ld	hl, #(_shadow_OAM + 6)
      000F51 36 0A                 4005 	ld	(hl), #0x0a
                                   4006 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F53 21r03r00              4007 	ld	hl, #(_shadow_OAM + 3)
      000F56 36 40                 4008 	ld	(hl), #0x40
      000F58 21r07r00              4009 	ld	hl, #(_shadow_OAM + 7)
      000F5B 36 40                 4010 	ld	(hl), #0x40
                                   4011 ;src/main.c:327: set_sprite_prop(1, S_FLIPY); 
      000F5D 18 34                 4012 	jr	00194$
      000F5F                       4013 00137$:
                                   4014 ;src/main.c:329: else if (xDir < 0 && yDir > 0) {
      000F5F F8 03                 4015 	ldhl	sp,	#3
      000F61 7E                    4016 	ld	a, (hl)
      000F62 B7                    4017 	or	a, a
      000F63 28 1A                 4018 	jr	Z, 00133$
      000F65 79                    4019 	ld	a, c
      000F66 B7                    4020 	or	a, a
      000F67 28 16                 4021 	jr	Z, 00133$
                                   4022 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F69 21r02r00              4023 	ld	hl, #(_shadow_OAM + 2)
      000F6C 36 08                 4024 	ld	(hl), #0x08
      000F6E 21r06r00              4025 	ld	hl, #(_shadow_OAM + 6)
      000F71 36 0A                 4026 	ld	(hl), #0x0a
                                   4027 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F73 21r03r00              4028 	ld	hl, #(_shadow_OAM + 3)
      000F76 36 60                 4029 	ld	(hl), #0x60
      000F78 21r07r00              4030 	ld	hl, #(_shadow_OAM + 7)
      000F7B 36 60                 4031 	ld	(hl), #0x60
                                   4032 ;src/main.c:333: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000F7D 18 14                 4033 	jr	00194$
      000F7F                       4034 00133$:
                                   4035 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F7F 21r02r00              4036 	ld	hl, #(_shadow_OAM + 2)
      000F82 36 08                 4037 	ld	(hl), #0x08
      000F84 21r06r00              4038 	ld	hl, #(_shadow_OAM + 6)
      000F87 36 0A                 4039 	ld	(hl), #0x0a
                                   4040 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F89 21r03r00              4041 	ld	hl, #(_shadow_OAM + 3)
      000F8C 36 20                 4042 	ld	(hl), #0x20
      000F8E 21r07r00              4043 	ld	hl, #(_shadow_OAM + 7)
      000F91 36 20                 4044 	ld	(hl), #0x20
                                   4045 ;src/main.c:339: set_sprite_prop(1, S_FLIPX); 
      000F93                       4046 00194$:
                                   4047 ;src/main.c:344: }
      000F93 E8 04                 4048 	add	sp, #4
      000F95 C9                    4049 	ret
                                   4050 ;src/main.c:378: void playSound(uint8_t type) {
                                   4051 ;	---------------------------------
                                   4052 ; Function playSound
                                   4053 ; ---------------------------------
      000F96                       4054 _playSound::
                                   4055 ;src/main.c:379: if (type == 20) { //singlegun
      000F96 F8 02                 4056 	ldhl	sp,	#2
      000F98 7E                    4057 	ld	a, (hl)
      000F99 D6 14                 4058 	sub	a, #0x14
      000F9B 20 13                 4059 	jr	NZ, 00102$
                                   4060 ;src/main.c:380: NR10_REG = 0x00;
      000F9D AF                    4061 	xor	a, a
      000F9E E0r00                 4062 	ldh	(_NR10_REG + 0), a
                                   4063 ;src/main.c:381: NR11_REG = 0x81;
      000FA0 3E 81                 4064 	ld	a, #0x81
      000FA2 E0r00                 4065 	ldh	(_NR11_REG + 0), a
                                   4066 ;src/main.c:382: NR12_REG = 0x43;
      000FA4 3E 43                 4067 	ld	a, #0x43
      000FA6 E0r00                 4068 	ldh	(_NR12_REG + 0), a
                                   4069 ;src/main.c:383: NR13_REG = 0X00;//0x6D;
      000FA8 AF                    4070 	xor	a, a
      000FA9 E0r00                 4071 	ldh	(_NR13_REG + 0), a
                                   4072 ;src/main.c:384: NR14_REG = 0x86;
      000FAB 3E 86                 4073 	ld	a, #0x86
      000FAD E0r00                 4074 	ldh	(_NR14_REG + 0), a
                                   4075 ;src/main.c:385: return;
      000FAF C9                    4076 	ret
      000FB0                       4077 00102$:
                                   4078 ;src/main.c:387: if (type == 23) {
      000FB0 F8 02                 4079 	ldhl	sp,	#2
      000FB2 7E                    4080 	ld	a, (hl)
      000FB3 D6 17                 4081 	sub	a, #0x17
      000FB5 20 12                 4082 	jr	NZ, 00104$
                                   4083 ;src/main.c:388: NR10_REG = 0x00;
      000FB7 AF                    4084 	xor	a, a
      000FB8 E0r00                 4085 	ldh	(_NR10_REG + 0), a
                                   4086 ;src/main.c:389: NR11_REG = 0x81;
      000FBA 3E 81                 4087 	ld	a, #0x81
      000FBC E0r00                 4088 	ldh	(_NR11_REG + 0), a
                                   4089 ;src/main.c:390: NR12_REG = 0x53;
      000FBE 3E 53                 4090 	ld	a, #0x53
      000FC0 E0r00                 4091 	ldh	(_NR12_REG + 0), a
                                   4092 ;src/main.c:391: NR13_REG = 0X00;//0x6D;
      000FC2 AF                    4093 	xor	a, a
      000FC3 E0r00                 4094 	ldh	(_NR13_REG + 0), a
                                   4095 ;src/main.c:392: NR14_REG = 0x86;
      000FC5 3E 86                 4096 	ld	a, #0x86
      000FC7 E0r00                 4097 	ldh	(_NR14_REG + 0), a
      000FC9                       4098 00104$:
                                   4099 ;src/main.c:394: if (type == 26) {
      000FC9 F8 02                 4100 	ldhl	sp,	#2
      000FCB 7E                    4101 	ld	a, (hl)
      000FCC D6 1A                 4102 	sub	a, #0x1a
      000FCE 20 13                 4103 	jr	NZ, 00106$
                                   4104 ;src/main.c:395: NR10_REG = 0x00;
      000FD0 AF                    4105 	xor	a, a
      000FD1 E0r00                 4106 	ldh	(_NR10_REG + 0), a
                                   4107 ;src/main.c:396: NR11_REG = 0x89;
      000FD3 3E 89                 4108 	ld	a, #0x89
      000FD5 E0r00                 4109 	ldh	(_NR11_REG + 0), a
                                   4110 ;src/main.c:397: NR12_REG = 0x55;
      000FD7 3E 55                 4111 	ld	a, #0x55
      000FD9 E0r00                 4112 	ldh	(_NR12_REG + 0), a
                                   4113 ;src/main.c:398: NR13_REG = 0x70;//0Xbe;//0x6D;
      000FDB 3E 70                 4114 	ld	a, #0x70
      000FDD E0r00                 4115 	ldh	(_NR13_REG + 0), a
                                   4116 ;src/main.c:399: NR14_REG = 0x84;
      000FDF 3E 84                 4117 	ld	a, #0x84
      000FE1 E0r00                 4118 	ldh	(_NR14_REG + 0), a
      000FE3                       4119 00106$:
                                   4120 ;src/main.c:401: if (type == 0) {  // explosion
      000FE3 F8 02                 4121 	ldhl	sp,	#2
      000FE5 7E                    4122 	ld	a, (hl)
      000FE6 B7                    4123 	or	a, a
      000FE7 C0                    4124 	ret	NZ
                                   4125 ;src/main.c:402: NR41_REG = 0x20;  
      000FE8 3E 20                 4126 	ld	a, #0x20
      000FEA E0r00                 4127 	ldh	(_NR41_REG + 0), a
                                   4128 ;src/main.c:403: NR42_REG = 0xa2;//0xa3;  
      000FEC 3E A2                 4129 	ld	a, #0xa2
      000FEE E0r00                 4130 	ldh	(_NR42_REG + 0), a
                                   4131 ;src/main.c:404: NR43_REG = 0x57;  
      000FF0 3E 57                 4132 	ld	a, #0x57
      000FF2 E0r00                 4133 	ldh	(_NR43_REG + 0), a
                                   4134 ;src/main.c:405: NR44_REG = 0x80;  
      000FF4 3E 80                 4135 	ld	a, #0x80
      000FF6 E0r00                 4136 	ldh	(_NR44_REG + 0), a
                                   4137 ;src/main.c:411: }
      000FF8 C9                    4138 	ret
                                   4139 ;src/main.c:413: void initEnemies(uint8_t loadSprites) {
                                   4140 ;	---------------------------------
                                   4141 ; Function initEnemies
                                   4142 ; ---------------------------------
      000FF9                       4143 _initEnemies::
      000FF9 E8 F9                 4144 	add	sp, #-7
                                   4145 ;src/main.c:415: if (loadSprites) {
      000FFB F8 09                 4146 	ldhl	sp,	#9
      000FFD 7E                    4147 	ld	a, (hl)
      000FFE B7                    4148 	or	a, a
      000FFF 28 1A                 4149 	jr	Z, 00102$
                                   4150 ;src/main.c:417: set_sprite_data(0x40, 5, enemy1);
      001001 11r18r05              4151 	ld	de, #_enemy1
      001004 D5                    4152 	push	de
      001005 21 40 05              4153 	ld	hl, #0x540
      001008 E5                    4154 	push	hl
      001009 CDr00r00              4155 	call	_set_sprite_data
      00100C E8 04                 4156 	add	sp, #4
                                   4157 ;src/main.c:418: set_sprite_data(0x50, 8, largeenemies);
      00100E 11r68r05              4158 	ld	de, #_largeenemies
      001011 D5                    4159 	push	de
      001012 21 50 08              4160 	ld	hl, #0x850
      001015 E5                    4161 	push	hl
      001016 CDr00r00              4162 	call	_set_sprite_data
      001019 E8 04                 4163 	add	sp, #4
      00101B                       4164 00102$:
                                   4165 ;src/main.c:421: struct Enemy *eptr = enemies;
      00101B 01r5Ar00              4166 	ld	bc, #_enemies+0
                                   4167 ;src/main.c:423: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00101E F8 06                 4168 	ldhl	sp,	#6
      001020 36 00                 4169 	ld	(hl), #0x00
      001022                       4170 00116$:
      001022 21r8Er0B              4171 	ld	hl, #_ENEMYCOUNT
      001025 5E                    4172 	ld	e, (hl)
      001026 F8 06                 4173 	ldhl	sp,	#6
      001028 7E                    4174 	ld	a, (hl)
      001029 93                    4175 	sub	a, e
      00102A D2r61r11              4176 	jp	NC, 00118$
                                   4177 ;src/main.c:424: if (eptr->alive == 0) {
      00102D 21 09 00              4178 	ld	hl, #0x0009
      001030 09                    4179 	add	hl, bc
      001031 7E                    4180 	ld	a, (hl)
      001032 B7                    4181 	or	a, a
      001033 C2r55r11              4182 	jp	NZ, 00107$
                                   4183 ;src/main.c:426: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001036 C5                    4184 	push	bc
      001037 CDr00r00              4185 	call	_rand
      00103A 7B                    4186 	ld	a, e
      00103B C1                    4187 	pop	bc
      00103C 21r17r05              4188 	ld	hl, #_enemyOptionCount
      00103F 56                    4189 	ld	d, (hl)
      001040 C5                    4190 	push	bc
      001041 D5                    4191 	push	de
      001042 33                    4192 	inc	sp
      001043 F5                    4193 	push	af
      001044 33                    4194 	inc	sp
      001045 CDr00r00              4195 	call	__moduchar
      001048 E1                    4196 	pop	hl
      001049 7B                    4197 	ld	a, e
      00104A C1                    4198 	pop	bc
                                   4199 ;src/main.c:428: (*eptr) = enemyOptions[enemyInd];
      00104B 5F                    4200 	ld	e, a
      00104C 16 00                 4201 	ld	d, #0x00
      00104E 6B                    4202 	ld	l, e
      00104F 62                    4203 	ld	h, d
      001050 29                    4204 	add	hl, hl
      001051 29                    4205 	add	hl, hl
      001052 29                    4206 	add	hl, hl
      001053 19                    4207 	add	hl, de
      001054 29                    4208 	add	hl, hl
      001055 11r00r00              4209 	ld	de, #_enemyOptions
      001058 19                    4210 	add	hl, de
      001059 59                    4211 	ld	e, c
      00105A 50                    4212 	ld	d, b
      00105B C5                    4213 	push	bc
      00105C 01 12 00              4214 	ld	bc, #0x12
      00105F C5                    4215 	push	bc
      001060 E5                    4216 	push	hl
      001061 D5                    4217 	push	de
      001062 CDr00r00              4218 	call	___memcpy
      001065 E8 06                 4219 	add	sp, #6
      001067 CDr00r00              4220 	call	_rand
      00106A 7B                    4221 	ld	a, e
      00106B C1                    4222 	pop	bc
      00106C E6 07                 4223 	and	a, #0x07
      00106E F8 05                 4224 	ldhl	sp,	#5
      001070 77                    4225 	ld	(hl), a
                                   4226 ;src/main.c:431: eptr->x = xSpawnPositions[posIndex];
      001071 11r8Fr0B              4227 	ld	de, #_xSpawnPositions
      001074 6E                    4228 	ld	l, (hl)
      001075 26 00                 4229 	ld	h, #0x00
      001077 19                    4230 	add	hl, de
      001078 5D                    4231 	ld	e, l
      001079 54                    4232 	ld	d, h
      00107A 1A                    4233 	ld	a, (de)
      00107B 5F                    4234 	ld	e, a
      00107C 16 00                 4235 	ld	d, #0x00
      00107E 69                    4236 	ld	l, c
      00107F 60                    4237 	ld	h, b
      001080 7B                    4238 	ld	a, e
      001081 22                    4239 	ld	(hl+), a
      001082 72                    4240 	ld	(hl), d
                                   4241 ;src/main.c:432: eptr->y = ySpawnPositions[posIndex];
      001083 21 02 00              4242 	ld	hl, #0x0002
      001086 09                    4243 	add	hl, bc
      001087 33                    4244 	inc	sp
      001088 33                    4245 	inc	sp
      001089 E5                    4246 	push	hl
      00108A 11r97r0B              4247 	ld	de, #_ySpawnPositions
      00108D F8 05                 4248 	ldhl	sp,	#5
      00108F 6E                    4249 	ld	l, (hl)
      001090 26 00                 4250 	ld	h, #0x00
      001092 19                    4251 	add	hl, de
      001093 5D                    4252 	ld	e, l
      001094 54                    4253 	ld	d, h
      001095 1A                    4254 	ld	a, (de)
      001096 F8 04                 4255 	ldhl	sp,	#4
      001098 22                    4256 	ld	(hl+), a
      001099 AF                    4257 	xor	a, a
      00109A 32                    4258 	ld	(hl-), a
      00109B D1                    4259 	pop	de
      00109C D5                    4260 	push	de
      00109D 2A                    4261 	ld	a, (hl+)
      00109E 12                    4262 	ld	(de), a
      00109F 13                    4263 	inc	de
      0010A0 7E                    4264 	ld	a, (hl)
      0010A1 12                    4265 	ld	(de), a
                                   4266 ;src/main.c:434: if (eptr->spriteCount == 1) {
      0010A2 21 08 00              4267 	ld	hl, #0x0008
      0010A5 09                    4268 	add	hl, bc
      0010A6 7E                    4269 	ld	a, (hl)
      0010A7 F8 05                 4270 	ldhl	sp,	#5
      0010A9 77                    4271 	ld	(hl), a
                                   4272 ;src/main.c:435: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010AA 21 06 00              4273 	ld	hl, #0x0006
      0010AD 09                    4274 	add	hl, bc
      0010AE 5D                    4275 	ld	e, l
      0010AF 54                    4276 	ld	d, h
      0010B0 F8 06                 4277 	ldhl	sp,	#6
      0010B2 6E                    4278 	ld	l, (hl)
                                   4279 ;	spillPairReg hl
                                   4280 ;	spillPairReg hl
      0010B3 1A                    4281 	ld	a, (de)
      0010B4 5F                    4282 	ld	e, a
      0010B5 7D                    4283 	ld	a, l
      0010B6 87                    4284 	add	a, a
      0010B7 F8 02                 4285 	ldhl	sp,	#2
      0010B9 77                    4286 	ld	(hl), a
      0010BA 2A                    4287 	ld	a, (hl+)
      0010BB C6 0A                 4288 	add	a, #0x0a
                                   4289 ;src/main.c:434: if (eptr->spriteCount == 1) {
      0010BD 22                    4290 	ld	(hl+), a
      0010BE 23                    4291 	inc	hl
      0010BF 7E                    4292 	ld	a, (hl)
      0010C0 3D                    4293 	dec	a
      0010C1 20 2D                 4294 	jr	NZ, 00104$
                                   4295 ;src/main.c:435: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010C3 F8 03                 4296 	ldhl	sp,	#3
      0010C5 56                    4297 	ld	d, (hl)
                                   4298 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010C6 6A                    4299 	ld	l, d
                                   4300 ;	spillPairReg hl
                                   4301 ;	spillPairReg hl
      0010C7 26 00                 4302 	ld	h, #0x00
                                   4303 ;	spillPairReg hl
                                   4304 ;	spillPairReg hl
      0010C9 29                    4305 	add	hl, hl
      0010CA 29                    4306 	add	hl, hl
      0010CB D5                    4307 	push	de
      0010CC 11r00r00              4308 	ld	de, #_shadow_OAM
      0010CF 19                    4309 	add	hl, de
      0010D0 23                    4310 	inc	hl
      0010D1 23                    4311 	inc	hl
      0010D2 D1                    4312 	pop	de
      0010D3 73                    4313 	ld	(hl), e
                                   4314 ;src/main.c:436: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010D4 D1                    4315 	pop	de
      0010D5 D5                    4316 	push	de
      0010D6 1A                    4317 	ld	a, (de)
      0010D7 F8 05                 4318 	ldhl	sp,	#5
      0010D9 32                    4319 	ld	(hl-), a
      0010DA 0A                    4320 	ld	a, (bc)
      0010DB 32                    4321 	ld	(hl-), a
                                   4322 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0010DC 6E                    4323 	ld	l, (hl)
                                   4324 ;	spillPairReg hl
                                   4325 ;	spillPairReg hl
      0010DD 26 00                 4326 	ld	h, #0x00
                                   4327 ;	spillPairReg hl
                                   4328 ;	spillPairReg hl
      0010DF 29                    4329 	add	hl, hl
      0010E0 29                    4330 	add	hl, hl
      0010E1 11r00r00              4331 	ld	de, #_shadow_OAM
      0010E4 19                    4332 	add	hl, de
      0010E5 5D                    4333 	ld	e, l
      0010E6 54                    4334 	ld	d, h
                                   4335 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0010E7 F8 05                 4336 	ldhl	sp,	#5
      0010E9 3A                    4337 	ld	a, (hl-)
      0010EA 12                    4338 	ld	(de), a
      0010EB 13                    4339 	inc	de
      0010EC 7E                    4340 	ld	a, (hl)
      0010ED 12                    4341 	ld	(de), a
                                   4342 ;src/main.c:436: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010EE 18 65                 4343 	jr	00107$
      0010F0                       4344 00104$:
                                   4345 ;src/main.c:439: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010F0 F8 03                 4346 	ldhl	sp,	#3
      0010F2 56                    4347 	ld	d, (hl)
                                   4348 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010F3 6A                    4349 	ld	l, d
                                   4350 ;	spillPairReg hl
                                   4351 ;	spillPairReg hl
      0010F4 26 00                 4352 	ld	h, #0x00
                                   4353 ;	spillPairReg hl
                                   4354 ;	spillPairReg hl
      0010F6 29                    4355 	add	hl, hl
      0010F7 29                    4356 	add	hl, hl
      0010F8 D5                    4357 	push	de
      0010F9 11r00r00              4358 	ld	de, #_shadow_OAM
      0010FC 19                    4359 	add	hl, de
      0010FD 23                    4360 	inc	hl
      0010FE 23                    4361 	inc	hl
      0010FF D1                    4362 	pop	de
      001100 73                    4363 	ld	(hl), e
                                   4364 ;src/main.c:440: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001101 D1                    4365 	pop	de
      001102 D5                    4366 	push	de
      001103 1A                    4367 	ld	a, (de)
      001104 F8 04                 4368 	ldhl	sp,	#4
      001106 22                    4369 	ld	(hl+), a
      001107 0A                    4370 	ld	a, (bc)
      001108 32                    4371 	ld	(hl-), a
      001109 2B                    4372 	dec	hl
      00110A 5E                    4373 	ld	e, (hl)
                                   4374 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00110B 26 00                 4375 	ld	h, #0x00
                                   4376 ;	spillPairReg hl
                                   4377 ;	spillPairReg hl
      00110D 6B                    4378 	ld	l, e
      00110E 29                    4379 	add	hl, hl
      00110F 29                    4380 	add	hl, hl
      001110 11r00r00              4381 	ld	de, #_shadow_OAM
      001113 19                    4382 	add	hl, de
      001114 5D                    4383 	ld	e, l
      001115 54                    4384 	ld	d, h
                                   4385 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001116 F8 04                 4386 	ldhl	sp,	#4
      001118 2A                    4387 	ld	a, (hl+)
      001119 12                    4388 	ld	(de), a
      00111A 13                    4389 	inc	de
      00111B 7E                    4390 	ld	a, (hl)
      00111C 12                    4391 	ld	(de), a
                                   4392 ;src/main.c:442: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      00111D 21 07 00              4393 	ld	hl, #0x0007
      001120 09                    4394 	add	hl, bc
      001121 5E                    4395 	ld	e, (hl)
      001122 F8 02                 4396 	ldhl	sp,	#2
      001124 7E                    4397 	ld	a, (hl)
      001125 C6 0B                 4398 	add	a, #0x0b
      001127 F8 05                 4399 	ldhl	sp,	#5
      001129 77                    4400 	ld	(hl), a
      00112A 56                    4401 	ld	d, (hl)
                                   4402 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00112B 6A                    4403 	ld	l, d
                                   4404 ;	spillPairReg hl
                                   4405 ;	spillPairReg hl
      00112C 26 00                 4406 	ld	h, #0x00
                                   4407 ;	spillPairReg hl
                                   4408 ;	spillPairReg hl
      00112E 29                    4409 	add	hl, hl
      00112F 29                    4410 	add	hl, hl
      001130 D5                    4411 	push	de
      001131 11r00r00              4412 	ld	de, #_shadow_OAM
      001134 19                    4413 	add	hl, de
      001135 23                    4414 	inc	hl
      001136 23                    4415 	inc	hl
      001137 D1                    4416 	pop	de
      001138 73                    4417 	ld	(hl), e
                                   4418 ;src/main.c:443: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001139 D1                    4419 	pop	de
      00113A D5                    4420 	push	de
      00113B 1A                    4421 	ld	a, (de)
      00113C F8 04                 4422 	ldhl	sp,	#4
      00113E 32                    4423 	ld	(hl-), a
      00113F 0A                    4424 	ld	a, (bc)
      001140 22                    4425 	ld	(hl+), a
      001141 23                    4426 	inc	hl
      001142 5E                    4427 	ld	e, (hl)
                                   4428 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001143 26 00                 4429 	ld	h, #0x00
                                   4430 ;	spillPairReg hl
                                   4431 ;	spillPairReg hl
      001145 6B                    4432 	ld	l, e
      001146 29                    4433 	add	hl, hl
      001147 29                    4434 	add	hl, hl
      001148 11r00r00              4435 	ld	de, #_shadow_OAM
      00114B 19                    4436 	add	hl, de
      00114C 5D                    4437 	ld	e, l
      00114D 54                    4438 	ld	d, h
                                   4439 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00114E F8 04                 4440 	ldhl	sp,	#4
      001150 3A                    4441 	ld	a, (hl-)
      001151 12                    4442 	ld	(de), a
      001152 13                    4443 	inc	de
      001153 7E                    4444 	ld	a, (hl)
      001154 12                    4445 	ld	(de), a
                                   4446 ;src/main.c:443: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001155                       4447 00107$:
                                   4448 ;src/main.c:448: eptr++;
      001155 21 12 00              4449 	ld	hl, #0x0012
      001158 09                    4450 	add	hl, bc
      001159 4D                    4451 	ld	c, l
      00115A 44                    4452 	ld	b, h
                                   4453 ;src/main.c:423: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00115B F8 06                 4454 	ldhl	sp,	#6
      00115D 34                    4455 	inc	(hl)
      00115E C3r22r10              4456 	jp	00116$
      001161                       4457 00118$:
                                   4458 ;src/main.c:451: }
      001161 E8 07                 4459 	add	sp, #7
      001163 C9                    4460 	ret
                                   4461 ;src/main.c:453: void initEnemy(uint8_t i) {
                                   4462 ;	---------------------------------
                                   4463 ; Function initEnemy
                                   4464 ; ---------------------------------
      001164                       4465 _initEnemy::
      001164 E8 FC                 4466 	add	sp, #-4
                                   4467 ;src/main.c:456: if (enemies[i].alive == 0) {
      001166 F8 06                 4468 	ldhl	sp,	#6
      001168 4E                    4469 	ld	c, (hl)
      001169 06 00                 4470 	ld	b, #0x00
      00116B 69                    4471 	ld	l, c
      00116C 60                    4472 	ld	h, b
      00116D 29                    4473 	add	hl, hl
      00116E 29                    4474 	add	hl, hl
      00116F 29                    4475 	add	hl, hl
      001170 09                    4476 	add	hl, bc
      001171 29                    4477 	add	hl, hl
      001172 01r5Ar00              4478 	ld	bc,#_enemies
      001175 09                    4479 	add	hl,bc
      001176 4D                    4480 	ld	c, l
      001177 44                    4481 	ld	b, h
      001178 21 09 00              4482 	ld	hl, #0x0009
      00117B 09                    4483 	add	hl, bc
      00117C 7E                    4484 	ld	a, (hl)
      00117D B7                    4485 	or	a, a
      00117E C2r45r12              4486 	jp	NZ, 00109$
                                   4487 ;src/main.c:458: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001181 C5                    4488 	push	bc
      001182 CDr00r00              4489 	call	_rand
      001185 7B                    4490 	ld	a, e
      001186 C1                    4491 	pop	bc
      001187 21r17r05              4492 	ld	hl, #_enemyOptionCount
      00118A 56                    4493 	ld	d, (hl)
      00118B C5                    4494 	push	bc
      00118C D5                    4495 	push	de
      00118D 33                    4496 	inc	sp
      00118E F5                    4497 	push	af
      00118F 33                    4498 	inc	sp
      001190 CDr00r00              4499 	call	__moduchar
      001193 E1                    4500 	pop	hl
      001194 C1                    4501 	pop	bc
      001195 F8 03                 4502 	ldhl	sp,	#3
      001197 73                    4503 	ld	(hl), e
                                   4504 ;src/main.c:459: enemies[i] = enemyOptions[enemyInd];
      001198 5E                    4505 	ld	e, (hl)
      001199 16 00                 4506 	ld	d, #0x00
      00119B 6B                    4507 	ld	l, e
      00119C 62                    4508 	ld	h, d
      00119D 29                    4509 	add	hl, hl
      00119E 29                    4510 	add	hl, hl
      00119F 29                    4511 	add	hl, hl
      0011A0 19                    4512 	add	hl, de
      0011A1 29                    4513 	add	hl, hl
      0011A2 11r00r00              4514 	ld	de, #_enemyOptions
      0011A5 19                    4515 	add	hl, de
      0011A6 59                    4516 	ld	e, c
      0011A7 50                    4517 	ld	d, b
      0011A8 C5                    4518 	push	bc
      0011A9 01 12 00              4519 	ld	bc, #0x12
      0011AC C5                    4520 	push	bc
      0011AD E5                    4521 	push	hl
      0011AE D5                    4522 	push	de
      0011AF CDr00r00              4523 	call	___memcpy
      0011B2 E8 06                 4524 	add	sp, #6
      0011B4 CDr00r00              4525 	call	_rand
      0011B7 7B                    4526 	ld	a, e
      0011B8 C1                    4527 	pop	bc
      0011B9 E6 07                 4528 	and	a, #0x07
      0011BB F8 03                 4529 	ldhl	sp,	#3
      0011BD 77                    4530 	ld	(hl), a
                                   4531 ;src/main.c:462: enemies[i].x = xSpawnPositions[posIndex];
      0011BE 11r8Fr0B              4532 	ld	de, #_xSpawnPositions+0
      0011C1 6E                    4533 	ld	l, (hl)
      0011C2 26 00                 4534 	ld	h, #0x00
      0011C4 19                    4535 	add	hl, de
      0011C5 5D                    4536 	ld	e, l
      0011C6 54                    4537 	ld	d, h
      0011C7 1A                    4538 	ld	a, (de)
      0011C8 5F                    4539 	ld	e, a
      0011C9 16 00                 4540 	ld	d, #0x00
      0011CB 69                    4541 	ld	l, c
      0011CC 60                    4542 	ld	h, b
      0011CD 7B                    4543 	ld	a, e
      0011CE 22                    4544 	ld	(hl+), a
      0011CF 72                    4545 	ld	(hl), d
                                   4546 ;src/main.c:463: enemies[i].y = ySpawnPositions[posIndex];
      0011D0 21 02 00              4547 	ld	hl, #0x0002
      0011D3 09                    4548 	add	hl, bc
      0011D4 33                    4549 	inc	sp
      0011D5 33                    4550 	inc	sp
      0011D6 E5                    4551 	push	hl
      0011D7 11r97r0B              4552 	ld	de, #_ySpawnPositions+0
      0011DA F8 03                 4553 	ldhl	sp,	#3
      0011DC 6E                    4554 	ld	l, (hl)
      0011DD 26 00                 4555 	ld	h, #0x00
      0011DF 19                    4556 	add	hl, de
      0011E0 5D                    4557 	ld	e, l
      0011E1 54                    4558 	ld	d, h
      0011E2 1A                    4559 	ld	a, (de)
      0011E3 F8 02                 4560 	ldhl	sp,	#2
      0011E5 22                    4561 	ld	(hl+), a
      0011E6 AF                    4562 	xor	a, a
      0011E7 32                    4563 	ld	(hl-), a
      0011E8 D1                    4564 	pop	de
      0011E9 D5                    4565 	push	de
      0011EA 2A                    4566 	ld	a, (hl+)
      0011EB 12                    4567 	ld	(de), a
      0011EC 13                    4568 	inc	de
      0011ED 7E                    4569 	ld	a, (hl)
      0011EE 12                    4570 	ld	(de), a
                                   4571 ;src/main.c:465: if (enemies[i].spriteCount == 1) {
      0011EF 21 08 00              4572 	ld	hl, #0x0008
      0011F2 09                    4573 	add	hl, bc
      0011F3 7E                    4574 	ld	a, (hl)
      0011F4 F8 02                 4575 	ldhl	sp,	#2
      0011F6 77                    4576 	ld	(hl), a
                                   4577 ;src/main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      0011F7 21 06 00              4578 	ld	hl, #0x0006
      0011FA 09                    4579 	add	hl, bc
      0011FB 5D                    4580 	ld	e, l
      0011FC 54                    4581 	ld	d, h
      0011FD F8 06                 4582 	ldhl	sp,	#6
      0011FF 7E                    4583 	ld	a, (hl)
      001200 F5                    4584 	push	af
      001201 1A                    4585 	ld	a, (de)
      001202 5F                    4586 	ld	e, a
      001203 F1                    4587 	pop	af
      001204 87                    4588 	add	a, a
      001205 F8 03                 4589 	ldhl	sp,	#3
      001207 77                    4590 	ld	(hl), a
      001208 7E                    4591 	ld	a, (hl)
      001209 C6 0A                 4592 	add	a, #0x0a
      00120B 6F                    4593 	ld	l, a
                                   4594 ;	spillPairReg hl
                                   4595 ;	spillPairReg hl
                                   4596 ;src/main.c:465: if (enemies[i].spriteCount == 1) {
      00120C E5                    4597 	push	hl
      00120D F8 04                 4598 	ldhl	sp,	#4
      00120F 7E                    4599 	ld	a, (hl)
      001210 3D                    4600 	dec	a
      001211 E1                    4601 	pop	hl
      001212 20 0D                 4602 	jr	NZ, 00102$
                                   4603 ;src/main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   4604 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
                                   4605 ;	spillPairReg hl
                                   4606 ;	spillPairReg hl
      001214 26 00                 4607 	ld	h, #0x00
                                   4608 ;	spillPairReg hl
                                   4609 ;	spillPairReg hl
      001216 29                    4610 	add	hl, hl
      001217 29                    4611 	add	hl, hl
      001218 01r00r00              4612 	ld	bc, #_shadow_OAM
      00121B 09                    4613 	add	hl, bc
      00121C 23                    4614 	inc	hl
      00121D 23                    4615 	inc	hl
      00121E 73                    4616 	ld	(hl), e
                                   4617 ;src/main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      00121F 18 24                 4618 	jr	00109$
      001221                       4619 00102$:
                                   4620 ;src/main.c:470: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   4621 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001221 55                    4622 	ld	d,l
                                   4623 ;	spillPairReg hl
                                   4624 ;	spillPairReg hl
      001222 26 00                 4625 	ld	h, #0x00
                                   4626 ;	spillPairReg hl
                                   4627 ;	spillPairReg hl
      001224 29                    4628 	add	hl, hl
      001225 29                    4629 	add	hl, hl
      001226 D5                    4630 	push	de
      001227 11r00r00              4631 	ld	de, #_shadow_OAM
      00122A 19                    4632 	add	hl, de
      00122B 23                    4633 	inc	hl
      00122C 23                    4634 	inc	hl
      00122D D1                    4635 	pop	de
      00122E 73                    4636 	ld	(hl), e
                                   4637 ;src/main.c:473: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      00122F 21 07 00              4638 	ld	hl, #0x0007
      001232 09                    4639 	add	hl, bc
      001233 4E                    4640 	ld	c, (hl)
      001234 F8 03                 4641 	ldhl	sp,	#3
      001236 7E                    4642 	ld	a, (hl)
      001237 C6 0B                 4643 	add	a, #0x0b
                                   4644 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001239 6F                    4645 	ld	l, a
      00123A 11r00r00              4646 	ld	de, #_shadow_OAM+0
                                   4647 ;	spillPairReg hl
                                   4648 ;	spillPairReg hl
      00123D 26 00                 4649 	ld	h, #0x00
                                   4650 ;	spillPairReg hl
                                   4651 ;	spillPairReg hl
      00123F 29                    4652 	add	hl, hl
      001240 29                    4653 	add	hl, hl
      001241 19                    4654 	add	hl, de
      001242 23                    4655 	inc	hl
      001243 23                    4656 	inc	hl
      001244 71                    4657 	ld	(hl), c
                                   4658 ;src/main.c:473: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      001245                       4659 00109$:
                                   4660 ;src/main.c:482: }
      001245 E8 04                 4661 	add	sp, #4
      001247 C9                    4662 	ret
                                   4663 ;src/main.c:485: void updateEnemyPositions() {
                                   4664 ;	---------------------------------
                                   4665 ; Function updateEnemyPositions
                                   4666 ; ---------------------------------
      001248                       4667 _updateEnemyPositions::
      001248 E8 F0                 4668 	add	sp, #-16
                                   4669 ;src/main.c:488: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00124A F8 0F                 4670 	ldhl	sp,	#15
      00124C 36 00                 4671 	ld	(hl), #0x00
      00124E                       4672 00197$:
      00124E 21r8Er0B              4673 	ld	hl, #_ENEMYCOUNT
      001251 4E                    4674 	ld	c, (hl)
      001252 F8 0F                 4675 	ldhl	sp,	#15
      001254 7E                    4676 	ld	a, (hl)
      001255 91                    4677 	sub	a, c
      001256 D2r70r18              4678 	jp	NC, 00145$
                                   4679 ;src/main.c:489: if (!enemies[i].alive) {
      001259 4E                    4680 	ld	c, (hl)
      00125A 06 00                 4681 	ld	b, #0x00
      00125C 69                    4682 	ld	l, c
      00125D 60                    4683 	ld	h, b
      00125E 29                    4684 	add	hl, hl
      00125F 29                    4685 	add	hl, hl
      001260 29                    4686 	add	hl, hl
      001261 09                    4687 	add	hl, bc
      001262 29                    4688 	add	hl, hl
                                   4689 ;src/main.c:497: if (enemies[i].x < playerDrawX) {
      001263 01r5Ar00              4690 	ld	bc,#_enemies
      001266 09                    4691 	add	hl,bc
      001267 33                    4692 	inc	sp
      001268 33                    4693 	inc	sp
                                   4694 ;src/main.c:489: if (!enemies[i].alive) {
      001269 5D                    4695 	ld	e, l
      00126A 54                    4696 	ld	d, h
      00126B D5                    4697 	push	de
      00126C 21 09 00              4698 	ld	hl, #0x0009
      00126F 19                    4699 	add	hl, de
      001270 4D                    4700 	ld	c, l
      001271 44                    4701 	ld	b, h
      001272 0A                    4702 	ld	a, (bc)
      001273 B7                    4703 	or	a, a
      001274 CAr6Ar18              4704 	jp	Z, 00144$
                                   4705 ;src/main.c:492: enemies[i].x -= xOverflow;
      001277 D1                    4706 	pop	de
      001278 D5                    4707 	push	de
      001279 1A                    4708 	ld	a, (de)
      00127A 4F                    4709 	ld	c, a
      00127B 13                    4710 	inc	de
      00127C 1A                    4711 	ld	a, (de)
      00127D 47                    4712 	ld	b, a
      00127E 21rA1r00              4713 	ld	hl, #_xOverflow
      001281 2A                    4714 	ld	a, (hl+)
      001282 5F                    4715 	ld	e, a
      001283 56                    4716 	ld	d, (hl)
      001284 79                    4717 	ld	a, c
      001285 93                    4718 	sub	a, e
      001286 5F                    4719 	ld	e, a
      001287 78                    4720 	ld	a, b
      001288 9A                    4721 	sbc	a, d
      001289 F8 0E                 4722 	ldhl	sp,	#14
      00128B 32                    4723 	ld	(hl-), a
      00128C 73                    4724 	ld	(hl), e
      00128D D1                    4725 	pop	de
      00128E D5                    4726 	push	de
      00128F 2A                    4727 	ld	a, (hl+)
      001290 12                    4728 	ld	(de), a
      001291 13                    4729 	inc	de
      001292 7E                    4730 	ld	a, (hl)
      001293 12                    4731 	ld	(de), a
                                   4732 ;src/main.c:493: enemies[i].y -= yOverflow;
      001294 D1                    4733 	pop	de
      001295 D5                    4734 	push	de
      001296 21 02 00              4735 	ld	hl, #0x0002
      001299 19                    4736 	add	hl, de
      00129A E5                    4737 	push	hl
      00129B 7D                    4738 	ld	a, l
      00129C F8 04                 4739 	ldhl	sp,	#4
      00129E 77                    4740 	ld	(hl), a
      00129F E1                    4741 	pop	hl
      0012A0 7C                    4742 	ld	a, h
      0012A1 F8 03                 4743 	ldhl	sp,	#3
      0012A3 32                    4744 	ld	(hl-), a
      0012A4 2A                    4745 	ld	a, (hl+)
      0012A5 5F                    4746 	ld	e, a
      0012A6 56                    4747 	ld	d, (hl)
      0012A7 1A                    4748 	ld	a, (de)
      0012A8 4F                    4749 	ld	c, a
      0012A9 13                    4750 	inc	de
      0012AA 1A                    4751 	ld	a, (de)
      0012AB 47                    4752 	ld	b, a
      0012AC 79                    4753 	ld	a, c
      0012AD 21rA3r00              4754 	ld	hl, #_yOverflow
      0012B0 96                    4755 	sub	a, (hl)
      0012B1 23                    4756 	inc	hl
      0012B2 4F                    4757 	ld	c, a
      0012B3 78                    4758 	ld	a, b
      0012B4 9E                    4759 	sbc	a, (hl)
      0012B5 47                    4760 	ld	b, a
      0012B6 F8 02                 4761 	ldhl	sp,	#2
      0012B8 2A                    4762 	ld	a,	(hl+)
      0012B9 66                    4763 	ld	h, (hl)
      0012BA 6F                    4764 	ld	l, a
      0012BB 79                    4765 	ld	a, c
      0012BC 22                    4766 	ld	(hl+), a
      0012BD 70                    4767 	ld	(hl), b
                                   4768 ;src/main.c:496: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012BE F8 0D                 4769 	ldhl	sp,	#13
      0012C0 7E                    4770 	ld	a, (hl)
      0012C1 21r9Br00              4771 	ld	hl, #_playerDrawX
      0012C4 4E                    4772 	ld	c, (hl)
      0012C5 91                    4773 	sub	a, c
      0012C6 4F                    4774 	ld	c, a
                                   4775 ;src/main.c:368: if (value >= 0) return value;
      0012C7 CB 79                 4776 	bit	7, c
      0012C9 20 03                 4777 	jr	NZ, 00170$
      0012CB 41                    4778 	ld	b, c
      0012CC 18 03                 4779 	jr	00172$
      0012CE                       4780 00170$:
                                   4781 ;src/main.c:369: else return - value;
      0012CE AF                    4782 	xor	a, a
      0012CF 91                    4783 	sub	a, c
      0012D0 47                    4784 	ld	b, a
                                   4785 ;src/main.c:496: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012D1                       4786 00172$:
                                   4787 ;src/main.c:511: enemies[i].ySpeed += enemies[i].accel;
      0012D1 D1                    4788 	pop	de
      0012D2 D5                    4789 	push	de
      0012D3 21 0D 00              4790 	ld	hl, #0x000d
      0012D6 19                    4791 	add	hl, de
      0012D7 E5                    4792 	push	hl
      0012D8 7D                    4793 	ld	a, l
      0012D9 F8 08                 4794 	ldhl	sp,	#8
      0012DB 77                    4795 	ld	(hl), a
      0012DC E1                    4796 	pop	hl
      0012DD 7C                    4797 	ld	a, h
      0012DE F8 07                 4798 	ldhl	sp,	#7
      0012E0 77                    4799 	ld	(hl), a
                                   4800 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      0012E1 D1                    4801 	pop	de
      0012E2 D5                    4802 	push	de
      0012E3 21 0E 00              4803 	ld	hl, #0x000e
      0012E6 19                    4804 	add	hl, de
      0012E7 E5                    4805 	push	hl
      0012E8 7D                    4806 	ld	a, l
      0012E9 F8 06                 4807 	ldhl	sp,	#6
      0012EB 77                    4808 	ld	(hl), a
      0012EC E1                    4809 	pop	hl
      0012ED 7C                    4810 	ld	a, h
      0012EE F8 05                 4811 	ldhl	sp,	#5
                                   4812 ;src/main.c:505: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      0012F0 32                    4813 	ld	(hl-), a
      0012F1 2A                    4814 	ld	a, (hl+)
      0012F2 5F                    4815 	ld	e, a
      0012F3 56                    4816 	ld	d, (hl)
      0012F4 1A                    4817 	ld	a, (de)
      0012F5 4F                    4818 	ld	c, a
                                   4819 ;src/main.c:496: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012F6 58                    4820 	ld	e, b
      0012F7 3E 08                 4821 	ld	a,#0x08
      0012F9 57                    4822 	ld	d,a
      0012FA 90                    4823 	sub	a, b
      0012FB CB 7B                 4824 	bit	7, e
      0012FD 28 07                 4825 	jr	Z, 00399$
      0012FF CB 7A                 4826 	bit	7, d
      001301 20 08                 4827 	jr	NZ, 00400$
      001303 BF                    4828 	cp	a, a
      001304 18 05                 4829 	jr	00400$
      001306                       4830 00399$:
      001306 CB 7A                 4831 	bit	7, d
      001308 28 01                 4832 	jr	Z, 00400$
      00130A 37                    4833 	scf
      00130B                       4834 00400$:
      00130B 30 4E                 4835 	jr	NC, 00111$
                                   4836 ;src/main.c:497: if (enemies[i].x < playerDrawX) {
      00130D D1                    4837 	pop	de
      00130E D5                    4838 	push	de
      00130F 1A                    4839 	ld	a, (de)
      001310 F8 0B                 4840 	ldhl	sp,	#11
      001312 22                    4841 	ld	(hl+), a
      001313 13                    4842 	inc	de
      001314 1A                    4843 	ld	a, (de)
      001315 77                    4844 	ld	(hl), a
      001316 FAr9Br00              4845 	ld	a, (#_playerDrawX)
      001319 F8 0D                 4846 	ldhl	sp,	#13
      00131B 22                    4847 	ld	(hl+), a
      00131C 36 00                 4848 	ld	(hl), #0x00
                                   4849 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      00131E F8 06                 4850 	ldhl	sp,#6
      001320 2A                    4851 	ld	a, (hl+)
      001321 5F                    4852 	ld	e, a
      001322 56                    4853 	ld	d, (hl)
      001323 1A                    4854 	ld	a, (de)
      001324 47                    4855 	ld	b, a
                                   4856 ;src/main.c:497: if (enemies[i].x < playerDrawX) {
      001325 F8 0B                 4857 	ldhl	sp,	#11
      001327 5D                    4858 	ld	e, l
      001328 54                    4859 	ld	d, h
      001329 F8 0D                 4860 	ldhl	sp,	#13
      00132B 1A                    4861 	ld	a, (de)
      00132C 13                    4862 	inc	de
      00132D 96                    4863 	sub	a, (hl)
      00132E 23                    4864 	inc	hl
      00132F 1A                    4865 	ld	a, (de)
      001330 9E                    4866 	sbc	a, (hl)
      001331 1A                    4867 	ld	a, (de)
      001332 57                    4868 	ld	d, a
      001333 CB 7E                 4869 	bit	7, (hl)
      001335 28 07                 4870 	jr	Z, 00401$
      001337 CB 7A                 4871 	bit	7, d
      001339 20 08                 4872 	jr	NZ, 00402$
      00133B BF                    4873 	cp	a, a
      00133C 18 05                 4874 	jr	00402$
      00133E                       4875 00401$:
      00133E CB 7A                 4876 	bit	7, d
      001340 28 01                 4877 	jr	Z, 00402$
      001342 37                    4878 	scf
      001343                       4879 00402$:
      001343 30 0B                 4880 	jr	NC, 00104$
                                   4881 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      001345 79                    4882 	ld	a, c
      001346 80                    4883 	add	a, b
      001347 4F                    4884 	ld	c, a
      001348 F8 04                 4885 	ldhl	sp,	#4
      00134A 2A                    4886 	ld	a,	(hl+)
      00134B 66                    4887 	ld	h, (hl)
      00134C 6F                    4888 	ld	l, a
      00134D 71                    4889 	ld	(hl), c
      00134E 18 38                 4890 	jr	00112$
      001350                       4891 00104$:
                                   4892 ;src/main.c:501: enemies[i].xSpeed -= enemies[i].accel;
      001350 79                    4893 	ld	a, c
      001351 90                    4894 	sub	a, b
      001352 4F                    4895 	ld	c, a
      001353 F8 04                 4896 	ldhl	sp,	#4
      001355 2A                    4897 	ld	a,	(hl+)
      001356 66                    4898 	ld	h, (hl)
      001357 6F                    4899 	ld	l, a
      001358 71                    4900 	ld	(hl), c
      001359 18 2D                 4901 	jr	00112$
      00135B                       4902 00111$:
                                   4903 ;src/main.c:505: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      00135B 59                    4904 	ld	e, c
      00135C AF                    4905 	xor	a, a
      00135D 57                    4906 	ld	d, a
      00135E 91                    4907 	sub	a, c
      00135F CB 7B                 4908 	bit	7, e
      001361 28 07                 4909 	jr	Z, 00403$
      001363 CB 7A                 4910 	bit	7, d
      001365 20 08                 4911 	jr	NZ, 00404$
      001367 BF                    4912 	cp	a, a
      001368 18 05                 4913 	jr	00404$
      00136A                       4914 00403$:
      00136A CB 7A                 4915 	bit	7, d
      00136C 28 01                 4916 	jr	Z, 00404$
      00136E 37                    4917 	scf
      00136F                       4918 00404$:
      00136F 30 07                 4919 	jr	NC, 00107$
      001371 0D                    4920 	dec	c
      001372 F8 04                 4921 	ldhl	sp,	#4
      001374 2A                    4922 	ld	a,	(hl+)
      001375 66                    4923 	ld	h, (hl)
      001376 6F                    4924 	ld	l, a
      001377 71                    4925 	ld	(hl), c
      001378                       4926 00107$:
      001378 F8 04                 4927 	ldhl	sp,#4
      00137A 2A                    4928 	ld	a, (hl+)
      00137B 5F                    4929 	ld	e, a
      00137C 56                    4930 	ld	d, (hl)
      00137D 1A                    4931 	ld	a, (de)
      00137E 4F                    4932 	ld	c, a
                                   4933 ;src/main.c:506: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      00137F CB 79                 4934 	bit	7, c
      001381 28 05                 4935 	jr	Z, 00112$
      001383 0C                    4936 	inc	c
      001384 3A                    4937 	ld	a, (hl-)
      001385 6E                    4938 	ld	l, (hl)
      001386 67                    4939 	ld	h, a
      001387 71                    4940 	ld	(hl), c
      001388                       4941 00112$:
                                   4942 ;src/main.c:509: if (abs(enemies[i].y - playerDrawY) > 8) {
      001388 F8 02                 4943 	ldhl	sp,#2
      00138A 2A                    4944 	ld	a, (hl+)
      00138B 5F                    4945 	ld	e, a
      00138C 56                    4946 	ld	d, (hl)
      00138D 1A                    4947 	ld	a, (de)
      00138E 4F                    4948 	ld	c, a
      00138F 13                    4949 	inc	de
      001390 1A                    4950 	ld	a, (de)
      001391 47                    4951 	ld	b, a
      001392 79                    4952 	ld	a, c
      001393 21r9Cr00              4953 	ld	hl, #_playerDrawY
      001396 5E                    4954 	ld	e, (hl)
      001397 93                    4955 	sub	a, e
      001398 6F                    4956 	ld	l, a
                                   4957 ;	spillPairReg hl
                                   4958 ;	spillPairReg hl
                                   4959 ;src/main.c:368: if (value >= 0) return value;
      001399 CB 7D                 4960 	bit	7, l
      00139B 20 06                 4961 	jr	NZ, 00174$
      00139D 7D                    4962 	ld	a, l
      00139E F8 0E                 4963 	ldhl	sp,	#14
      0013A0 77                    4964 	ld	(hl), a
      0013A1 18 06                 4965 	jr	00176$
      0013A3                       4966 00174$:
                                   4967 ;src/main.c:369: else return - value;
      0013A3 AF                    4968 	xor	a, a
      0013A4 95                    4969 	sub	a, l
      0013A5 5F                    4970 	ld	e, a
      0013A6 F8 0E                 4971 	ldhl	sp,	#14
      0013A8 73                    4972 	ld	(hl), e
                                   4973 ;src/main.c:509: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013A9                       4974 00176$:
                                   4975 ;src/main.c:511: enemies[i].ySpeed += enemies[i].accel;
      0013A9 D1                    4976 	pop	de
      0013AA D5                    4977 	push	de
      0013AB 21 0F 00              4978 	ld	hl, #0x000f
      0013AE 19                    4979 	add	hl, de
      0013AF E5                    4980 	push	hl
      0013B0 7D                    4981 	ld	a, l
      0013B1 F8 0A                 4982 	ldhl	sp,	#10
      0013B3 77                    4983 	ld	(hl), a
      0013B4 E1                    4984 	pop	hl
      0013B5 7C                    4985 	ld	a, h
      0013B6 F8 09                 4986 	ldhl	sp,	#9
                                   4987 ;src/main.c:518: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      0013B8 32                    4988 	ld	(hl-), a
      0013B9 2A                    4989 	ld	a, (hl+)
      0013BA 5F                    4990 	ld	e, a
      0013BB 2A                    4991 	ld	a, (hl+)
      0013BC 23                    4992 	inc	hl
      0013BD 57                    4993 	ld	d, a
      0013BE 1A                    4994 	ld	a, (de)
      0013BF 77                    4995 	ld	(hl), a
                                   4996 ;src/main.c:509: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013C0 F8 0E                 4997 	ldhl	sp,	#14
      0013C2 5E                    4998 	ld	e, (hl)
      0013C3 3E 08                 4999 	ld	a,#0x08
      0013C5 57                    5000 	ld	d,a
      0013C6 96                    5001 	sub	a, (hl)
      0013C7 CB 7B                 5002 	bit	7, e
      0013C9 28 07                 5003 	jr	Z, 00405$
      0013CB CB 7A                 5004 	bit	7, d
      0013CD 20 08                 5005 	jr	NZ, 00406$
      0013CF BF                    5006 	cp	a, a
      0013D0 18 05                 5007 	jr	00406$
      0013D2                       5008 00405$:
      0013D2 CB 7A                 5009 	bit	7, d
      0013D4 28 01                 5010 	jr	Z, 00406$
      0013D6 37                    5011 	scf
      0013D7                       5012 00406$:
      0013D7 30 49                 5013 	jr	NC, 00121$
                                   5014 ;src/main.c:510: if (enemies[i].y < playerDrawY) {
      0013D9 FAr9Cr00              5015 	ld	a, (#_playerDrawY)
      0013DC F8 0C                 5016 	ldhl	sp,	#12
      0013DE 22                    5017 	ld	(hl+), a
      0013DF 36 00                 5018 	ld	(hl), #0x00
                                   5019 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      0013E1 F8 06                 5020 	ldhl	sp,#6
      0013E3 2A                    5021 	ld	a, (hl+)
      0013E4 5F                    5022 	ld	e, a
      0013E5 56                    5023 	ld	d, (hl)
      0013E6 1A                    5024 	ld	a, (de)
      0013E7 F8 0E                 5025 	ldhl	sp,	#14
                                   5026 ;src/main.c:510: if (enemies[i].y < playerDrawY) {
      0013E9 32                    5027 	ld	(hl-), a
      0013EA 2B                    5028 	dec	hl
      0013EB 79                    5029 	ld	a, c
      0013EC 96                    5030 	sub	a, (hl)
      0013ED 23                    5031 	inc	hl
      0013EE 78                    5032 	ld	a, b
      0013EF 9E                    5033 	sbc	a, (hl)
      0013F0 78                    5034 	ld	a, b
      0013F1 57                    5035 	ld	d, a
      0013F2 CB 7E                 5036 	bit	7, (hl)
      0013F4 28 07                 5037 	jr	Z, 00407$
      0013F6 CB 7A                 5038 	bit	7, d
      0013F8 20 08                 5039 	jr	NZ, 00408$
      0013FA BF                    5040 	cp	a, a
      0013FB 18 05                 5041 	jr	00408$
      0013FD                       5042 00407$:
      0013FD CB 7A                 5043 	bit	7, d
      0013FF 28 01                 5044 	jr	Z, 00408$
      001401 37                    5045 	scf
      001402                       5046 00408$:
      001402 30 0F                 5047 	jr	NC, 00114$
                                   5048 ;src/main.c:511: enemies[i].ySpeed += enemies[i].accel;
      001404 F8 0B                 5049 	ldhl	sp,	#11
      001406 7E                    5050 	ld	a, (hl)
      001407 F8 0E                 5051 	ldhl	sp,	#14
      001409 86                    5052 	add	a, (hl)
      00140A 4F                    5053 	ld	c, a
      00140B F8 08                 5054 	ldhl	sp,	#8
      00140D 2A                    5055 	ld	a,	(hl+)
      00140E 66                    5056 	ld	h, (hl)
      00140F 6F                    5057 	ld	l, a
      001410 71                    5058 	ld	(hl), c
      001411 18 41                 5059 	jr	00122$
      001413                       5060 00114$:
                                   5061 ;src/main.c:514: enemies[i].ySpeed -= enemies[i].accel;
      001413 F8 0B                 5062 	ldhl	sp,	#11
      001415 7E                    5063 	ld	a, (hl)
      001416 F8 0E                 5064 	ldhl	sp,	#14
      001418 96                    5065 	sub	a, (hl)
      001419 4F                    5066 	ld	c, a
      00141A F8 08                 5067 	ldhl	sp,	#8
      00141C 2A                    5068 	ld	a,	(hl+)
      00141D 66                    5069 	ld	h, (hl)
      00141E 6F                    5070 	ld	l, a
      00141F 71                    5071 	ld	(hl), c
      001420 18 32                 5072 	jr	00122$
      001422                       5073 00121$:
                                   5074 ;src/main.c:518: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001422 F8 0B                 5075 	ldhl	sp,	#11
      001424 5E                    5076 	ld	e, (hl)
      001425 AF                    5077 	xor	a, a
      001426 57                    5078 	ld	d, a
      001427 96                    5079 	sub	a, (hl)
      001428 CB 7B                 5080 	bit	7, e
      00142A 28 07                 5081 	jr	Z, 00409$
      00142C CB 7A                 5082 	bit	7, d
      00142E 20 08                 5083 	jr	NZ, 00410$
      001430 BF                    5084 	cp	a, a
      001431 18 05                 5085 	jr	00410$
      001433                       5086 00409$:
      001433 CB 7A                 5087 	bit	7, d
      001435 28 01                 5088 	jr	Z, 00410$
      001437 37                    5089 	scf
      001438                       5090 00410$:
      001438 30 0A                 5091 	jr	NC, 00117$
      00143A F8 0B                 5092 	ldhl	sp,	#11
      00143C 4E                    5093 	ld	c, (hl)
      00143D 0D                    5094 	dec	c
      00143E F8 08                 5095 	ldhl	sp,	#8
      001440 2A                    5096 	ld	a,	(hl+)
      001441 66                    5097 	ld	h, (hl)
      001442 6F                    5098 	ld	l, a
      001443 71                    5099 	ld	(hl), c
      001444                       5100 00117$:
      001444 F8 08                 5101 	ldhl	sp,#8
      001446 2A                    5102 	ld	a, (hl+)
      001447 5F                    5103 	ld	e, a
      001448 56                    5104 	ld	d, (hl)
      001449 1A                    5105 	ld	a, (de)
      00144A 4F                    5106 	ld	c, a
                                   5107 ;src/main.c:519: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      00144B CB 79                 5108 	bit	7, c
      00144D 28 05                 5109 	jr	Z, 00122$
      00144F 0C                    5110 	inc	c
      001450 3A                    5111 	ld	a, (hl-)
      001451 6E                    5112 	ld	l, (hl)
      001452 67                    5113 	ld	h, a
      001453 71                    5114 	ld	(hl), c
      001454                       5115 00122$:
                                   5116 ;src/main.c:523: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001454 D1                    5117 	pop	de
      001455 D5                    5118 	push	de
      001456 21 0C 00              5119 	ld	hl, #0x000c
      001459 19                    5120 	add	hl, de
      00145A E5                    5121 	push	hl
      00145B 7D                    5122 	ld	a, l
      00145C F8 0C                 5123 	ldhl	sp,	#12
      00145E 77                    5124 	ld	(hl), a
      00145F E1                    5125 	pop	hl
      001460 7C                    5126 	ld	a, h
      001461 F8 0B                 5127 	ldhl	sp,	#11
      001463 32                    5128 	ld	(hl-), a
      001464 2A                    5129 	ld	a, (hl+)
      001465 5F                    5130 	ld	e, a
      001466 2A                    5131 	ld	a, (hl+)
      001467 57                    5132 	ld	d, a
      001468 1A                    5133 	ld	a, (de)
      001469 4F                    5134 	ld	c, a
      00146A 22                    5135 	ld	(hl+), a
      00146B AF                    5136 	xor	a, a
      00146C 91                    5137 	sub	a, c
      00146D 77                    5138 	ld	(hl), a
      00146E F8 04                 5139 	ldhl	sp,#4
      001470 2A                    5140 	ld	a, (hl+)
      001471 5F                    5141 	ld	e, a
      001472 56                    5142 	ld	d, (hl)
      001473 1A                    5143 	ld	a, (de)
      001474 F8 0E                 5144 	ldhl	sp,	#14
                                   5145 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      001476 32                    5146 	ld	(hl-), a
      001477 2A                    5147 	ld	a, (hl+)
      001478 5F                    5148 	ld	e, a
      001479 56                    5149 	ld	d, (hl)
      00147A 3A                    5150 	ld	a, (hl-)
      00147B 96                    5151 	sub	a, (hl)
      00147C CB 7B                 5152 	bit	7, e
      00147E 28 07                 5153 	jr	Z, 00411$
      001480 CB 7A                 5154 	bit	7, d
      001482 20 08                 5155 	jr	NZ, 00412$
      001484 BF                    5156 	cp	a, a
      001485 18 05                 5157 	jr	00412$
      001487                       5158 00411$:
      001487 CB 7A                 5159 	bit	7, d
      001489 28 01                 5160 	jr	Z, 00412$
      00148B 37                    5161 	scf
      00148C                       5162 00412$:
      00148C 30 06                 5163 	jr	NC, 00200$
      00148E F8 0D                 5164 	ldhl	sp,	#13
      001490 2A                    5165 	ld	a, (hl+)
      001491 77                    5166 	ld	(hl), a
      001492 18 26                 5167 	jr	00201$
      001494                       5168 00200$:
      001494 F8 0E                 5169 	ldhl	sp,	#14
      001496 3A                    5170 	ld	a, (hl-)
      001497 2B                    5171 	dec	hl
      001498 5F                    5172 	ld	e, a
      001499 56                    5173 	ld	d, (hl)
      00149A 2A                    5174 	ld	a, (hl+)
      00149B 23                    5175 	inc	hl
      00149C 96                    5176 	sub	a, (hl)
      00149D CB 7B                 5177 	bit	7, e
      00149F 28 07                 5178 	jr	Z, 00413$
      0014A1 CB 7A                 5179 	bit	7, d
      0014A3 20 08                 5180 	jr	NZ, 00414$
      0014A5 BF                    5181 	cp	a, a
      0014A6 18 05                 5182 	jr	00414$
      0014A8                       5183 00413$:
      0014A8 CB 7A                 5184 	bit	7, d
      0014AA 28 01                 5185 	jr	Z, 00414$
      0014AC 37                    5186 	scf
      0014AD                       5187 00414$:
      0014AD 30 05                 5188 	jr	NC, 00202$
      0014AF F8 0C                 5189 	ldhl	sp,	#12
      0014B1 5E                    5190 	ld	e, (hl)
      0014B2 18 03                 5191 	jr	00203$
      0014B4                       5192 00202$:
      0014B4 F8 0E                 5193 	ldhl	sp,	#14
      0014B6 5E                    5194 	ld	e, (hl)
      0014B7                       5195 00203$:
      0014B7 F8 0E                 5196 	ldhl	sp,	#14
      0014B9 73                    5197 	ld	(hl), e
      0014BA                       5198 00201$:
      0014BA F8 0E                 5199 	ldhl	sp,	#14
      0014BC 4E                    5200 	ld	c, (hl)
                                   5201 ;src/main.c:523: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0014BD F8 04                 5202 	ldhl	sp,	#4
      0014BF 2A                    5203 	ld	a,	(hl+)
      0014C0 66                    5204 	ld	h, (hl)
      0014C1 6F                    5205 	ld	l, a
      0014C2 71                    5206 	ld	(hl), c
                                   5207 ;src/main.c:524: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0014C3 F8 0A                 5208 	ldhl	sp,#10
      0014C5 2A                    5209 	ld	a, (hl+)
      0014C6 5F                    5210 	ld	e, a
      0014C7 3A                    5211 	ld	a, (hl-)
      0014C8 2B                    5212 	dec	hl
      0014C9 2B                    5213 	dec	hl
      0014CA 57                    5214 	ld	d, a
      0014CB 1A                    5215 	ld	a, (de)
      0014CC 47                    5216 	ld	b, a
      0014CD 48                    5217 	ld	c, b
      0014CE AF                    5218 	xor	a, a
      0014CF 90                    5219 	sub	a, b
      0014D0 47                    5220 	ld	b, a
      0014D1 2A                    5221 	ld	a, (hl+)
      0014D2 5F                    5222 	ld	e, a
      0014D3 56                    5223 	ld	d, (hl)
      0014D4 1A                    5224 	ld	a, (de)
      0014D5 6F                    5225 	ld	l, a
                                   5226 ;	spillPairReg hl
                                   5227 ;	spillPairReg hl
                                   5228 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      0014D6 58                    5229 	ld	e, b
      0014D7 7D                    5230 	ld	a,l
      0014D8 57                    5231 	ld	d,a
      0014D9 90                    5232 	sub	a, b
      0014DA CB 7B                 5233 	bit	7, e
      0014DC 28 07                 5234 	jr	Z, 00415$
      0014DE CB 7A                 5235 	bit	7, d
      0014E0 20 08                 5236 	jr	NZ, 00416$
      0014E2 BF                    5237 	cp	a, a
      0014E3 18 05                 5238 	jr	00416$
      0014E5                       5239 00415$:
      0014E5 CB 7A                 5240 	bit	7, d
      0014E7 28 01                 5241 	jr	Z, 00416$
      0014E9 37                    5242 	scf
      0014EA                       5243 00416$:
      0014EA 30 03                 5244 	jr	NC, 00204$
      0014EC 48                    5245 	ld	c, b
      0014ED 18 17                 5246 	jr	00205$
      0014EF                       5247 00204$:
      0014EF 5D                    5248 	ld	e, l
      0014F0 79                    5249 	ld	a,c
      0014F1 57                    5250 	ld	d,a
      0014F2 95                    5251 	sub	a, l
      0014F3 CB 7B                 5252 	bit	7, e
      0014F5 28 07                 5253 	jr	Z, 00417$
      0014F7 CB 7A                 5254 	bit	7, d
      0014F9 20 08                 5255 	jr	NZ, 00418$
      0014FB BF                    5256 	cp	a, a
      0014FC 18 05                 5257 	jr	00418$
      0014FE                       5258 00417$:
      0014FE CB 7A                 5259 	bit	7, d
      001500 28 01                 5260 	jr	Z, 00418$
      001502 37                    5261 	scf
      001503                       5262 00418$:
      001503 38 01                 5263 	jr	C, 00207$
      001505 4D                    5264 	ld	c, l
      001506                       5265 00207$:
      001506                       5266 00205$:
                                   5267 ;src/main.c:524: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001506 F8 08                 5268 	ldhl	sp,	#8
      001508 2A                    5269 	ld	a,	(hl+)
      001509 66                    5270 	ld	h, (hl)
      00150A 6F                    5271 	ld	l, a
      00150B 71                    5272 	ld	(hl), c
                                   5273 ;src/main.c:527: enemies[i].xReserve += enemies[i].xSpeed;
      00150C D1                    5274 	pop	de
      00150D D5                    5275 	push	de
      00150E 21 04 00              5276 	ld	hl, #0x0004
      001511 19                    5277 	add	hl, de
      001512 E5                    5278 	push	hl
      001513 7D                    5279 	ld	a, l
      001514 F8 0E                 5280 	ldhl	sp,	#14
      001516 77                    5281 	ld	(hl), a
      001517 E1                    5282 	pop	hl
      001518 7C                    5283 	ld	a, h
      001519 F8 0D                 5284 	ldhl	sp,	#13
      00151B 32                    5285 	ld	(hl-), a
      00151C 2A                    5286 	ld	a, (hl+)
      00151D 5F                    5287 	ld	e, a
      00151E 56                    5288 	ld	d, (hl)
      00151F 1A                    5289 	ld	a, (de)
      001520 47                    5290 	ld	b, a
      001521 F8 04                 5291 	ldhl	sp,#4
      001523 2A                    5292 	ld	a, (hl+)
      001524 5F                    5293 	ld	e, a
      001525 56                    5294 	ld	d, (hl)
      001526 1A                    5295 	ld	a, (de)
      001527 80                    5296 	add	a, b
      001528 47                    5297 	ld	b, a
      001529 F8 0C                 5298 	ldhl	sp,	#12
      00152B 2A                    5299 	ld	a,	(hl+)
      00152C 66                    5300 	ld	h, (hl)
      00152D 6F                    5301 	ld	l, a
      00152E 70                    5302 	ld	(hl), b
                                   5303 ;src/main.c:528: enemies[i].yReserve += enemies[i].ySpeed;
      00152F D1                    5304 	pop	de
      001530 D5                    5305 	push	de
      001531 21 05 00              5306 	ld	hl, #0x0005
      001534 19                    5307 	add	hl, de
      001535 E5                    5308 	push	hl
      001536 7D                    5309 	ld	a, l
      001537 F8 08                 5310 	ldhl	sp,	#8
      001539 77                    5311 	ld	(hl), a
      00153A E1                    5312 	pop	hl
      00153B 7C                    5313 	ld	a, h
      00153C F8 07                 5314 	ldhl	sp,	#7
      00153E 32                    5315 	ld	(hl-), a
      00153F 2A                    5316 	ld	a, (hl+)
      001540 5F                    5317 	ld	e, a
      001541 56                    5318 	ld	d, (hl)
      001542 1A                    5319 	ld	a, (de)
      001543 81                    5320 	add	a, c
      001544 4F                    5321 	ld	c, a
      001545 3A                    5322 	ld	a, (hl-)
      001546 6E                    5323 	ld	l, (hl)
      001547 67                    5324 	ld	h, a
      001548 71                    5325 	ld	(hl), c
                                   5326 ;src/main.c:532: if (enemies[i].xReserve >> 3 > 0) {
      001549 F8 0C                 5327 	ldhl	sp,#12
      00154B 2A                    5328 	ld	a, (hl+)
      00154C 5F                    5329 	ld	e, a
      00154D 2A                    5330 	ld	a, (hl+)
      00154E 57                    5331 	ld	d, a
      00154F 1A                    5332 	ld	a, (de)
      001550 77                    5333 	ld	(hl), a
      001551 CB 28                 5334 	sra	b
      001553 CB 28                 5335 	sra	b
      001555 CB 28                 5336 	sra	b
      001557 58                    5337 	ld	e, b
      001558 AF                    5338 	xor	a, a
      001559 57                    5339 	ld	d, a
      00155A 90                    5340 	sub	a, b
      00155B CB 7B                 5341 	bit	7, e
      00155D 28 07                 5342 	jr	Z, 00419$
      00155F CB 7A                 5343 	bit	7, d
      001561 20 08                 5344 	jr	NZ, 00420$
      001563 BF                    5345 	cp	a, a
      001564 18 05                 5346 	jr	00420$
      001566                       5347 00419$:
      001566 CB 7A                 5348 	bit	7, d
      001568 28 01                 5349 	jr	Z, 00420$
      00156A 37                    5350 	scf
      00156B                       5351 00420$:
      00156B 30 36                 5352 	jr	NC, 00126$
                                   5353 ;src/main.c:533: int8_t xMovement = enemies[i].xReserve >> 3;
      00156D F8 0E                 5354 	ldhl	sp,	#14
      00156F 7E                    5355 	ld	a, (hl)
      001570 CB 2F                 5356 	sra	a
      001572 CB 2F                 5357 	sra	a
      001574 CB 2F                 5358 	sra	a
      001576 77                    5359 	ld	(hl), a
                                   5360 ;src/main.c:534: enemies[i].x += xMovement;
      001577 D1                    5361 	pop	de
      001578 D5                    5362 	push	de
      001579 1A                    5363 	ld	a, (de)
      00157A 4F                    5364 	ld	c, a
      00157B 13                    5365 	inc	de
      00157C 1A                    5366 	ld	a, (de)
      00157D 47                    5367 	ld	b, a
      00157E 7E                    5368 	ld	a, (hl)
      00157F 5F                    5369 	ld	e, a
      001580 07                    5370 	rlca
      001581 9F                    5371 	sbc	a, a
      001582 57                    5372 	ld	d, a
      001583 69                    5373 	ld	l, c
                                   5374 ;	spillPairReg hl
                                   5375 ;	spillPairReg hl
      001584 60                    5376 	ld	h, b
                                   5377 ;	spillPairReg hl
                                   5378 ;	spillPairReg hl
      001585 19                    5379 	add	hl, de
      001586 4D                    5380 	ld	c, l
      001587 44                    5381 	ld	b, h
      001588 E1                    5382 	pop	hl
      001589 E5                    5383 	push	hl
      00158A 79                    5384 	ld	a, c
      00158B 22                    5385 	ld	(hl+), a
      00158C 70                    5386 	ld	(hl), b
                                   5387 ;src/main.c:535: enemies[i].xReserve -=  xMovement << 3;
      00158D F8 0C                 5388 	ldhl	sp,#12
      00158F 2A                    5389 	ld	a, (hl+)
      001590 5F                    5390 	ld	e, a
      001591 2A                    5391 	ld	a, (hl+)
      001592 57                    5392 	ld	d, a
      001593 1A                    5393 	ld	a, (de)
      001594 F5                    5394 	push	af
      001595 3A                    5395 	ld	a, (hl-)
      001596 87                    5396 	add	a, a
      001597 87                    5397 	add	a, a
      001598 87                    5398 	add	a, a
      001599 4F                    5399 	ld	c, a
      00159A F1                    5400 	pop	af
      00159B 91                    5401 	sub	a, c
      00159C 4F                    5402 	ld	c, a
      00159D 3A                    5403 	ld	a, (hl-)
      00159E 6E                    5404 	ld	l, (hl)
      00159F 67                    5405 	ld	h, a
      0015A0 71                    5406 	ld	(hl), c
      0015A1 18 60                 5407 	jr	00127$
      0015A3                       5408 00126$:
                                   5409 ;src/main.c:538: else if ((-enemies[i].xReserve) >> 3 > 0){
      0015A3 F8 0E                 5410 	ldhl	sp,	#14
      0015A5 7E                    5411 	ld	a, (hl)
      0015A6 4F                    5412 	ld	c, a
      0015A7 07                    5413 	rlca
      0015A8 9F                    5414 	sbc	a, a
      0015A9 47                    5415 	ld	b, a
      0015AA AF                    5416 	xor	a, a
      0015AB 91                    5417 	sub	a, c
      0015AC 4F                    5418 	ld	c, a
      0015AD 9F                    5419 	sbc	a, a
      0015AE 90                    5420 	sub	a, b
      0015AF 47                    5421 	ld	b, a
      0015B0 CB 28                 5422 	sra	b
      0015B2 CB 19                 5423 	rr	c
      0015B4 CB 28                 5424 	sra	b
      0015B6 CB 19                 5425 	rr	c
      0015B8 CB 28                 5426 	sra	b
      0015BA CB 19                 5427 	rr	c
      0015BC 58                    5428 	ld	e, b
      0015BD AF                    5429 	xor	a, a
      0015BE 57                    5430 	ld	d, a
      0015BF B9                    5431 	cp	a, c
      0015C0 98                    5432 	sbc	a, b
      0015C1 CB 7B                 5433 	bit	7, e
      0015C3 28 07                 5434 	jr	Z, 00421$
      0015C5 CB 7A                 5435 	bit	7, d
      0015C7 20 08                 5436 	jr	NZ, 00422$
      0015C9 BF                    5437 	cp	a, a
      0015CA 18 05                 5438 	jr	00422$
      0015CC                       5439 00421$:
      0015CC CB 7A                 5440 	bit	7, d
      0015CE 28 01                 5441 	jr	Z, 00422$
      0015D0 37                    5442 	scf
      0015D1                       5443 00422$:
      0015D1 30 30                 5444 	jr	NC, 00127$
                                   5445 ;src/main.c:539: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      0015D3 AF                    5446 	xor	a, a
      0015D4 91                    5447 	sub	a, c
      0015D5 4F                    5448 	ld	c, a
      0015D6 F8 0E                 5449 	ldhl	sp,	#14
      0015D8 71                    5450 	ld	(hl), c
                                   5451 ;src/main.c:540: enemies[i].x += xMovement;
      0015D9 D1                    5452 	pop	de
      0015DA D5                    5453 	push	de
      0015DB 1A                    5454 	ld	a, (de)
      0015DC 4F                    5455 	ld	c, a
      0015DD 13                    5456 	inc	de
      0015DE 1A                    5457 	ld	a, (de)
      0015DF 47                    5458 	ld	b, a
      0015E0 7E                    5459 	ld	a, (hl)
      0015E1 5F                    5460 	ld	e, a
      0015E2 07                    5461 	rlca
      0015E3 9F                    5462 	sbc	a, a
      0015E4 57                    5463 	ld	d, a
      0015E5 69                    5464 	ld	l, c
                                   5465 ;	spillPairReg hl
                                   5466 ;	spillPairReg hl
      0015E6 60                    5467 	ld	h, b
                                   5468 ;	spillPairReg hl
                                   5469 ;	spillPairReg hl
      0015E7 19                    5470 	add	hl, de
      0015E8 4D                    5471 	ld	c, l
      0015E9 44                    5472 	ld	b, h
      0015EA E1                    5473 	pop	hl
      0015EB E5                    5474 	push	hl
      0015EC 79                    5475 	ld	a, c
      0015ED 22                    5476 	ld	(hl+), a
      0015EE 70                    5477 	ld	(hl), b
                                   5478 ;src/main.c:541: enemies[i].xReserve +=  (-xMovement) << 3;
      0015EF F8 0C                 5479 	ldhl	sp,#12
      0015F1 2A                    5480 	ld	a, (hl+)
      0015F2 5F                    5481 	ld	e, a
      0015F3 2A                    5482 	ld	a, (hl+)
      0015F4 57                    5483 	ld	d, a
      0015F5 1A                    5484 	ld	a, (de)
      0015F6 4F                    5485 	ld	c, a
      0015F7 AF                    5486 	xor	a, a
      0015F8 96                    5487 	sub	a, (hl)
      0015F9 2B                    5488 	dec	hl
      0015FA 87                    5489 	add	a, a
      0015FB 87                    5490 	add	a, a
      0015FC 87                    5491 	add	a, a
      0015FD 81                    5492 	add	a, c
      0015FE 4F                    5493 	ld	c, a
      0015FF 3A                    5494 	ld	a, (hl-)
      001600 6E                    5495 	ld	l, (hl)
      001601 67                    5496 	ld	h, a
      001602 71                    5497 	ld	(hl), c
      001603                       5498 00127$:
                                   5499 ;src/main.c:528: enemies[i].yReserve += enemies[i].ySpeed;
      001603 F8 06                 5500 	ldhl	sp,#6
      001605 2A                    5501 	ld	a, (hl+)
      001606 5F                    5502 	ld	e, a
      001607 56                    5503 	ld	d, (hl)
      001608 1A                    5504 	ld	a, (de)
      001609 F8 0D                 5505 	ldhl	sp,	#13
      00160B 77                    5506 	ld	(hl), a
                                   5507 ;src/main.c:544: if (enemies[i].yReserve >> 3 > 0) {
      00160C 2A                    5508 	ld	a, (hl+)
      00160D CB 2F                 5509 	sra	a
      00160F CB 2F                 5510 	sra	a
      001611 CB 2F                 5511 	sra	a
      001613 77                    5512 	ld	(hl), a
      001614 5E                    5513 	ld	e, (hl)
      001615 AF                    5514 	xor	a, a
      001616 57                    5515 	ld	d, a
      001617 96                    5516 	sub	a, (hl)
      001618 CB 7B                 5517 	bit	7, e
      00161A 28 07                 5518 	jr	Z, 00423$
      00161C CB 7A                 5519 	bit	7, d
      00161E 20 08                 5520 	jr	NZ, 00424$
      001620 BF                    5521 	cp	a, a
      001621 18 05                 5522 	jr	00424$
      001623                       5523 00423$:
      001623 CB 7A                 5524 	bit	7, d
      001625 28 01                 5525 	jr	Z, 00424$
      001627 37                    5526 	scf
      001628                       5527 00424$:
      001628 30 59                 5528 	jr	NC, 00131$
                                   5529 ;src/main.c:545: int8_t yMovement = enemies[i].yReserve >> 3;
      00162A F8 0E                 5530 	ldhl	sp,	#14
      00162C 7E                    5531 	ld	a, (hl)
      00162D F8 08                 5532 	ldhl	sp,	#8
      00162F 77                    5533 	ld	(hl), a
                                   5534 ;src/main.c:546: enemies[i].y += yMovement;
      001630 F8 02                 5535 	ldhl	sp,#2
      001632 2A                    5536 	ld	a, (hl+)
      001633 5F                    5537 	ld	e, a
      001634 56                    5538 	ld	d, (hl)
      001635 1A                    5539 	ld	a, (de)
      001636 F8 0D                 5540 	ldhl	sp,	#13
      001638 22                    5541 	ld	(hl+), a
      001639 13                    5542 	inc	de
      00163A 1A                    5543 	ld	a, (de)
      00163B 77                    5544 	ld	(hl), a
      00163C F8 08                 5545 	ldhl	sp,	#8
      00163E 2A                    5546 	ld	a, (hl+)
      00163F 22                    5547 	ld	(hl+), a
      001640 07                    5548 	rlca
      001641 9F                    5549 	sbc	a, a
      001642 77                    5550 	ld	(hl), a
      001643 F8 0D                 5551 	ldhl	sp,	#13
      001645 3A                    5552 	ld	a, (hl-)
      001646 2B                    5553 	dec	hl
      001647 77                    5554 	ld	(hl), a
      001648 F8 0E                 5555 	ldhl	sp,	#14
      00164A 3A                    5556 	ld	a, (hl-)
      00164B 2B                    5557 	dec	hl
      00164C 32                    5558 	ld	(hl-), a
      00164D 2A                    5559 	ld	a, (hl+)
      00164E 5F                    5560 	ld	e, a
      00164F 56                    5561 	ld	d, (hl)
      001650 F8 09                 5562 	ldhl	sp,	#9
      001652 2A                    5563 	ld	a,	(hl+)
      001653 66                    5564 	ld	h, (hl)
      001654 6F                    5565 	ld	l, a
      001655 19                    5566 	add	hl, de
      001656 E5                    5567 	push	hl
      001657 7D                    5568 	ld	a, l
      001658 F8 0F                 5569 	ldhl	sp,	#15
      00165A 77                    5570 	ld	(hl), a
      00165B E1                    5571 	pop	hl
      00165C 7C                    5572 	ld	a, h
      00165D F8 0E                 5573 	ldhl	sp,	#14
      00165F 77                    5574 	ld	(hl), a
      001660 F8 02                 5575 	ldhl	sp,#2
      001662 2A                    5576 	ld	a, (hl+)
      001663 5F                    5577 	ld	e, a
      001664 56                    5578 	ld	d, (hl)
      001665 F8 0D                 5579 	ldhl	sp,	#13
      001667 2A                    5580 	ld	a, (hl+)
      001668 12                    5581 	ld	(de), a
      001669 13                    5582 	inc	de
      00166A 7E                    5583 	ld	a, (hl)
      00166B 12                    5584 	ld	(de), a
                                   5585 ;src/main.c:547: enemies[i].yReserve -=  yMovement << 3;
      00166C F8 06                 5586 	ldhl	sp,#6
      00166E 2A                    5587 	ld	a, (hl+)
      00166F 5F                    5588 	ld	e, a
      001670 2A                    5589 	ld	a, (hl+)
      001671 57                    5590 	ld	d, a
      001672 1A                    5591 	ld	a, (de)
      001673 F5                    5592 	push	af
      001674 3A                    5593 	ld	a, (hl-)
      001675 87                    5594 	add	a, a
      001676 87                    5595 	add	a, a
      001677 87                    5596 	add	a, a
      001678 4F                    5597 	ld	c, a
      001679 F1                    5598 	pop	af
      00167A 91                    5599 	sub	a, c
      00167B 4F                    5600 	ld	c, a
      00167C 3A                    5601 	ld	a, (hl-)
      00167D 6E                    5602 	ld	l, (hl)
      00167E 67                    5603 	ld	h, a
      00167F 71                    5604 	ld	(hl), c
      001680 C3r23r17              5605 	jp	00132$
      001683                       5606 00131$:
                                   5607 ;src/main.c:549: else if ((-enemies[i].yReserve) >> 3 > 0){
      001683 F8 0D                 5608 	ldhl	sp,	#13
      001685 7E                    5609 	ld	a, (hl)
      001686 F8 0A                 5610 	ldhl	sp,	#10
      001688 22                    5611 	ld	(hl+), a
      001689 07                    5612 	rlca
      00168A 9F                    5613 	sbc	a, a
      00168B 77                    5614 	ld	(hl), a
      00168C 11 00 00              5615 	ld	de, #0x0000
      00168F 3A                    5616 	ld	a, (hl-)
      001690 6E                    5617 	ld	l, (hl)
      001691 67                    5618 	ld	h, a
      001692 7B                    5619 	ld	a, e
      001693 95                    5620 	sub	a, l
      001694 5F                    5621 	ld	e, a
      001695 7A                    5622 	ld	a, d
      001696 9C                    5623 	sbc	a, h
      001697 F8 0E                 5624 	ldhl	sp,	#14
      001699 32                    5625 	ld	(hl-), a
      00169A 7B                    5626 	ld	a, e
      00169B 22                    5627 	ld	(hl+), a
      00169C CB 2E                 5628 	sra	(hl)
      00169E 2B                    5629 	dec	hl
      00169F CB 1E                 5630 	rr	(hl)
      0016A1 23                    5631 	inc	hl
      0016A2 CB 2E                 5632 	sra	(hl)
      0016A4 2B                    5633 	dec	hl
      0016A5 CB 1E                 5634 	rr	(hl)
      0016A7 23                    5635 	inc	hl
      0016A8 CB 2E                 5636 	sra	(hl)
      0016AA 2B                    5637 	dec	hl
      0016AB CB 1E                 5638 	rr	(hl)
      0016AD AF                    5639 	xor	a, a
      0016AE 96                    5640 	sub	a, (hl)
      0016AF 23                    5641 	inc	hl
      0016B0 3E 00                 5642 	ld	a, #0x00
      0016B2 9E                    5643 	sbc	a, (hl)
      0016B3 3E 00                 5644 	ld	a, #0x00
      0016B5 57                    5645 	ld	d, a
      0016B6 CB 7E                 5646 	bit	7, (hl)
      0016B8 28 07                 5647 	jr	Z, 00425$
      0016BA CB 7A                 5648 	bit	7, d
      0016BC 20 08                 5649 	jr	NZ, 00426$
      0016BE BF                    5650 	cp	a, a
      0016BF 18 05                 5651 	jr	00426$
      0016C1                       5652 00425$:
      0016C1 CB 7A                 5653 	bit	7, d
      0016C3 28 01                 5654 	jr	Z, 00426$
      0016C5 37                    5655 	scf
      0016C6                       5656 00426$:
      0016C6 30 5B                 5657 	jr	NC, 00132$
                                   5658 ;src/main.c:550: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0016C8 F8 0D                 5659 	ldhl	sp,	#13
      0016CA 2A                    5660 	ld	a, (hl+)
      0016CB 4F                    5661 	ld	c, a
      0016CC AF                    5662 	xor	a, a
      0016CD 91                    5663 	sub	a, c
      0016CE 77                    5664 	ld	(hl), a
      0016CF 7E                    5665 	ld	a, (hl)
      0016D0 F8 08                 5666 	ldhl	sp,	#8
      0016D2 77                    5667 	ld	(hl), a
                                   5668 ;src/main.c:551: enemies[i].y += yMovement;
      0016D3 F8 02                 5669 	ldhl	sp,#2
      0016D5 2A                    5670 	ld	a, (hl+)
      0016D6 5F                    5671 	ld	e, a
      0016D7 56                    5672 	ld	d, (hl)
      0016D8 1A                    5673 	ld	a, (de)
      0016D9 F8 0D                 5674 	ldhl	sp,	#13
      0016DB 22                    5675 	ld	(hl+), a
      0016DC 13                    5676 	inc	de
      0016DD 1A                    5677 	ld	a, (de)
      0016DE 77                    5678 	ld	(hl), a
      0016DF F8 08                 5679 	ldhl	sp,	#8
      0016E1 2A                    5680 	ld	a, (hl+)
      0016E2 22                    5681 	ld	(hl+), a
      0016E3 07                    5682 	rlca
      0016E4 9F                    5683 	sbc	a, a
      0016E5 77                    5684 	ld	(hl), a
      0016E6 F8 0D                 5685 	ldhl	sp,	#13
      0016E8 3A                    5686 	ld	a, (hl-)
      0016E9 2B                    5687 	dec	hl
      0016EA 77                    5688 	ld	(hl), a
      0016EB F8 0E                 5689 	ldhl	sp,	#14
      0016ED 3A                    5690 	ld	a, (hl-)
      0016EE 2B                    5691 	dec	hl
      0016EF 32                    5692 	ld	(hl-), a
      0016F0 2A                    5693 	ld	a, (hl+)
      0016F1 5F                    5694 	ld	e, a
      0016F2 56                    5695 	ld	d, (hl)
      0016F3 F8 09                 5696 	ldhl	sp,	#9
      0016F5 2A                    5697 	ld	a,	(hl+)
      0016F6 66                    5698 	ld	h, (hl)
      0016F7 6F                    5699 	ld	l, a
      0016F8 19                    5700 	add	hl, de
      0016F9 E5                    5701 	push	hl
      0016FA 7D                    5702 	ld	a, l
      0016FB F8 0F                 5703 	ldhl	sp,	#15
      0016FD 77                    5704 	ld	(hl), a
      0016FE E1                    5705 	pop	hl
      0016FF 7C                    5706 	ld	a, h
      001700 F8 0E                 5707 	ldhl	sp,	#14
      001702 77                    5708 	ld	(hl), a
      001703 F8 02                 5709 	ldhl	sp,#2
      001705 2A                    5710 	ld	a, (hl+)
      001706 5F                    5711 	ld	e, a
      001707 56                    5712 	ld	d, (hl)
      001708 F8 0D                 5713 	ldhl	sp,	#13
      00170A 2A                    5714 	ld	a, (hl+)
      00170B 12                    5715 	ld	(de), a
      00170C 13                    5716 	inc	de
      00170D 7E                    5717 	ld	a, (hl)
      00170E 12                    5718 	ld	(de), a
                                   5719 ;src/main.c:552: enemies[i].yReserve +=  (-yMovement) << 3;
      00170F F8 06                 5720 	ldhl	sp,#6
      001711 2A                    5721 	ld	a, (hl+)
      001712 5F                    5722 	ld	e, a
      001713 2A                    5723 	ld	a, (hl+)
      001714 57                    5724 	ld	d, a
      001715 1A                    5725 	ld	a, (de)
      001716 4F                    5726 	ld	c, a
      001717 AF                    5727 	xor	a, a
      001718 96                    5728 	sub	a, (hl)
      001719 2B                    5729 	dec	hl
      00171A 87                    5730 	add	a, a
      00171B 87                    5731 	add	a, a
      00171C 87                    5732 	add	a, a
      00171D 81                    5733 	add	a, c
      00171E 4F                    5734 	ld	c, a
      00171F 3A                    5735 	ld	a, (hl-)
      001720 6E                    5736 	ld	l, (hl)
      001721 67                    5737 	ld	h, a
      001722 71                    5738 	ld	(hl), c
      001723                       5739 00132$:
                                   5740 ;src/main.c:557: if (auxTick == 1) {
      001723 FArBFr00              5741 	ld	a, (#_auxTick)
      001726 3D                    5742 	dec	a
      001727 C2r6Ar18              5743 	jp	NZ,00144$
                                   5744 ;src/main.c:559: if (enemies[i].spriteCount == 1) {
      00172A D1                    5745 	pop	de
      00172B D5                    5746 	push	de
      00172C 21 08 00              5747 	ld	hl, #0x0008
      00172F 19                    5748 	add	hl, de
      001730 4D                    5749 	ld	c, l
      001731 44                    5750 	ld	b, h
      001732 0A                    5751 	ld	a, (bc)
      001733 47                    5752 	ld	b, a
                                   5753 ;src/main.c:560: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001734 F8 0F                 5754 	ldhl	sp,	#15
      001736 3A                    5755 	ld	a, (hl-)
      001737 87                    5756 	add	a, a
      001738 4F                    5757 	ld	c, a
      001739 C6 0A                 5758 	add	a, #0x0a
      00173B 77                    5759 	ld	(hl), a
                                   5760 ;src/main.c:559: if (enemies[i].spriteCount == 1) {
      00173C 05                    5761 	dec	b
      00173D 20 51                 5762 	jr	NZ, 00140$
                                   5763 ;src/main.c:560: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00173F F8 02                 5764 	ldhl	sp,#2
      001741 2A                    5765 	ld	a, (hl+)
      001742 5F                    5766 	ld	e, a
      001743 56                    5767 	ld	d, (hl)
      001744 1A                    5768 	ld	a, (de)
      001745 C6 0C                 5769 	add	a, #0x0c
      001747 4F                    5770 	ld	c, a
      001748 D1                    5771 	pop	de
      001749 D5                    5772 	push	de
      00174A 1A                    5773 	ld	a, (de)
      00174B C6 04                 5774 	add	a, #0x04
      00174D 5F                    5775 	ld	e, a
      00174E F8 0E                 5776 	ldhl	sp,	#14
                                   5777 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001750 6E                    5778 	ld	l, (hl)
                                   5779 ;	spillPairReg hl
                                   5780 ;	spillPairReg hl
      001751 26 00                 5781 	ld	h, #0x00
                                   5782 ;	spillPairReg hl
                                   5783 ;	spillPairReg hl
      001753 29                    5784 	add	hl, hl
      001754 29                    5785 	add	hl, hl
      001755 D5                    5786 	push	de
      001756 11r00r00              5787 	ld	de, #_shadow_OAM
      001759 19                    5788 	add	hl, de
      00175A D1                    5789 	pop	de
                                   5790 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00175B 79                    5791 	ld	a, c
      00175C 22                    5792 	ld	(hl+), a
      00175D 73                    5793 	ld	(hl), e
                                   5794 ;src/main.c:561: if (enemies[i].xSpeed >= 0) {
      00175E F8 04                 5795 	ldhl	sp,#4
      001760 2A                    5796 	ld	a, (hl+)
      001761 5F                    5797 	ld	e, a
      001762 56                    5798 	ld	d, (hl)
      001763 1A                    5799 	ld	a, (de)
      001764 CB 7F                 5800 	bit	7,a
      001766 20 14                 5801 	jr	NZ, 00134$
                                   5802 ;src/main.c:562: set_sprite_prop(10+(i<<1), 0);
      001768 F8 0E                 5803 	ldhl	sp,	#14
      00176A 4E                    5804 	ld	c, (hl)
                                   5805 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00176B 26 00                 5806 	ld	h, #0x00
                                   5807 ;	spillPairReg hl
                                   5808 ;	spillPairReg hl
      00176D 69                    5809 	ld	l, c
      00176E 29                    5810 	add	hl, hl
      00176F 29                    5811 	add	hl, hl
      001770 11r00r00              5812 	ld	de, #_shadow_OAM
      001773 19                    5813 	add	hl, de
      001774 23                    5814 	inc	hl
      001775 23                    5815 	inc	hl
      001776 23                    5816 	inc	hl
      001777 36 00                 5817 	ld	(hl), #0x00
                                   5818 ;src/main.c:562: set_sprite_prop(10+(i<<1), 0);
      001779 C3r6Ar18              5819 	jp	00144$
      00177C                       5820 00134$:
                                   5821 ;src/main.c:565: set_sprite_prop(10+(i<<1), S_FLIPX);
      00177C F8 0E                 5822 	ldhl	sp,	#14
      00177E 4E                    5823 	ld	c, (hl)
                                   5824 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00177F 26 00                 5825 	ld	h, #0x00
                                   5826 ;	spillPairReg hl
                                   5827 ;	spillPairReg hl
      001781 69                    5828 	ld	l, c
      001782 29                    5829 	add	hl, hl
      001783 29                    5830 	add	hl, hl
      001784 11r00r00              5831 	ld	de, #_shadow_OAM
      001787 19                    5832 	add	hl, de
      001788 23                    5833 	inc	hl
      001789 23                    5834 	inc	hl
      00178A 23                    5835 	inc	hl
      00178B 36 20                 5836 	ld	(hl), #0x20
                                   5837 ;src/main.c:565: set_sprite_prop(10+(i<<1), S_FLIPX);
      00178D C3r6Ar18              5838 	jp	00144$
      001790                       5839 00140$:
                                   5840 ;src/main.c:570: if (enemies[i].xSpeed >= 0) {
      001790 F8 04                 5841 	ldhl	sp,#4
      001792 2A                    5842 	ld	a, (hl+)
      001793 5F                    5843 	ld	e, a
      001794 56                    5844 	ld	d, (hl)
      001795 1A                    5845 	ld	a, (de)
      001796 CB 7F                 5846 	bit	7,a
      001798 20 6C                 5847 	jr	NZ, 00137$
                                   5848 ;src/main.c:571: set_sprite_prop(10+(i<<1), 0);
      00179A F8 0E                 5849 	ldhl	sp,	#14
      00179C 46                    5850 	ld	b, (hl)
                                   5851 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00179D 26 00                 5852 	ld	h, #0x00
                                   5853 ;	spillPairReg hl
                                   5854 ;	spillPairReg hl
      00179F 68                    5855 	ld	l, b
      0017A0 29                    5856 	add	hl, hl
      0017A1 29                    5857 	add	hl, hl
      0017A2 11r00r00              5858 	ld	de, #_shadow_OAM
      0017A5 19                    5859 	add	hl, de
      0017A6 23                    5860 	inc	hl
      0017A7 23                    5861 	inc	hl
      0017A8 23                    5862 	inc	hl
      0017A9 36 00                 5863 	ld	(hl), #0x00
                                   5864 ;src/main.c:572: set_sprite_prop(10+(i<<1)+1, 0);
      0017AB 79                    5865 	ld	a, c
      0017AC C6 0B                 5866 	add	a, #0x0b
      0017AE 4F                    5867 	ld	c, a
                                   5868 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017AF 69                    5869 	ld	l, c
                                   5870 ;	spillPairReg hl
                                   5871 ;	spillPairReg hl
      0017B0 26 00                 5872 	ld	h, #0x00
                                   5873 ;	spillPairReg hl
                                   5874 ;	spillPairReg hl
      0017B2 29                    5875 	add	hl, hl
      0017B3 29                    5876 	add	hl, hl
      0017B4 11r00r00              5877 	ld	de, #_shadow_OAM
      0017B7 19                    5878 	add	hl, de
      0017B8 23                    5879 	inc	hl
      0017B9 23                    5880 	inc	hl
      0017BA 23                    5881 	inc	hl
      0017BB 36 00                 5882 	ld	(hl), #0x00
                                   5883 ;src/main.c:573: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      0017BD F8 02                 5884 	ldhl	sp,#2
      0017BF 2A                    5885 	ld	a, (hl+)
      0017C0 5F                    5886 	ld	e, a
      0017C1 56                    5887 	ld	d, (hl)
      0017C2 1A                    5888 	ld	a, (de)
      0017C3 C6 08                 5889 	add	a, #0x08
      0017C5 F8 0C                 5890 	ldhl	sp,	#12
      0017C7 22                    5891 	ld	(hl+), a
      0017C8 D1                    5892 	pop	de
      0017C9 D5                    5893 	push	de
      0017CA 1A                    5894 	ld	a, (de)
      0017CB 22                    5895 	ld	(hl+), a
      0017CC 46                    5896 	ld	b, (hl)
                                   5897 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017CD 11r00r00              5898 	ld	de, #_shadow_OAM+0
      0017D0 26 00                 5899 	ld	h, #0x00
                                   5900 ;	spillPairReg hl
                                   5901 ;	spillPairReg hl
      0017D2 68                    5902 	ld	l, b
      0017D3 29                    5903 	add	hl, hl
      0017D4 29                    5904 	add	hl, hl
      0017D5 19                    5905 	add	hl, de
      0017D6 5D                    5906 	ld	e, l
      0017D7 54                    5907 	ld	d, h
                                   5908 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017D8 F8 0C                 5909 	ldhl	sp,	#12
      0017DA 2A                    5910 	ld	a, (hl+)
      0017DB 12                    5911 	ld	(de), a
      0017DC 13                    5912 	inc	de
      0017DD 7E                    5913 	ld	a, (hl)
      0017DE 12                    5914 	ld	(de), a
                                   5915 ;src/main.c:574: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      0017DF F8 02                 5916 	ldhl	sp,#2
      0017E1 2A                    5917 	ld	a, (hl+)
      0017E2 5F                    5918 	ld	e, a
      0017E3 56                    5919 	ld	d, (hl)
      0017E4 1A                    5920 	ld	a, (de)
      0017E5 C6 08                 5921 	add	a, #0x08
      0017E7 F8 0E                 5922 	ldhl	sp,	#14
      0017E9 77                    5923 	ld	(hl), a
      0017EA D1                    5924 	pop	de
      0017EB D5                    5925 	push	de
      0017EC 1A                    5926 	ld	a, (de)
      0017ED C6 08                 5927 	add	a, #0x08
      0017EF 5F                    5928 	ld	e, a
                                   5929 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017F0 26 00                 5930 	ld	h, #0x00
                                   5931 ;	spillPairReg hl
                                   5932 ;	spillPairReg hl
      0017F2 69                    5933 	ld	l, c
      0017F3 29                    5934 	add	hl, hl
      0017F4 29                    5935 	add	hl, hl
      0017F5 7D                    5936 	ld	a, l
      0017F6 C6r00                 5937 	add	a, #<(_shadow_OAM)
      0017F8 4F                    5938 	ld	c, a
      0017F9 7C                    5939 	ld	a, h
      0017FA CEs00                 5940 	adc	a, #>(_shadow_OAM)
      0017FC 47                    5941 	ld	b, a
                                   5942 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017FD F8 0E                 5943 	ldhl	sp,	#14
      0017FF 7E                    5944 	ld	a, (hl)
      001800 02                    5945 	ld	(bc), a
      001801 03                    5946 	inc	bc
      001802 7B                    5947 	ld	a, e
      001803 02                    5948 	ld	(bc), a
                                   5949 ;src/main.c:574: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001804 18 64                 5950 	jr	00144$
      001806                       5951 00137$:
                                   5952 ;src/main.c:577: set_sprite_prop(10+(i<<1), S_FLIPX);
      001806 F8 0E                 5953 	ldhl	sp,	#14
                                   5954 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001808 6E                    5955 	ld	l, (hl)
                                   5956 ;	spillPairReg hl
                                   5957 ;	spillPairReg hl
      001809 26 00                 5958 	ld	h, #0x00
                                   5959 ;	spillPairReg hl
                                   5960 ;	spillPairReg hl
      00180B 29                    5961 	add	hl, hl
      00180C 29                    5962 	add	hl, hl
      00180D 11r00r00              5963 	ld	de, #_shadow_OAM
      001810 19                    5964 	add	hl, de
      001811 23                    5965 	inc	hl
      001812 23                    5966 	inc	hl
      001813 23                    5967 	inc	hl
      001814 36 20                 5968 	ld	(hl), #0x20
                                   5969 ;src/main.c:578: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001816 79                    5970 	ld	a, c
      001817 C6 0B                 5971 	add	a, #0x0b
      001819 F8 0D                 5972 	ldhl	sp,	#13
      00181B 77                    5973 	ld	(hl), a
      00181C 4E                    5974 	ld	c, (hl)
                                   5975 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00181D 26 00                 5976 	ld	h, #0x00
                                   5977 ;	spillPairReg hl
                                   5978 ;	spillPairReg hl
      00181F 69                    5979 	ld	l, c
      001820 29                    5980 	add	hl, hl
      001821 29                    5981 	add	hl, hl
      001822 11r00r00              5982 	ld	de, #_shadow_OAM
      001825 19                    5983 	add	hl, de
      001826 23                    5984 	inc	hl
      001827 23                    5985 	inc	hl
      001828 23                    5986 	inc	hl
      001829 36 20                 5987 	ld	(hl), #0x20
                                   5988 ;src/main.c:579: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      00182B F8 02                 5989 	ldhl	sp,#2
      00182D 2A                    5990 	ld	a, (hl+)
      00182E 5F                    5991 	ld	e, a
      00182F 56                    5992 	ld	d, (hl)
      001830 1A                    5993 	ld	a, (de)
      001831 C6 08                 5994 	add	a, #0x08
      001833 4F                    5995 	ld	c, a
      001834 D1                    5996 	pop	de
      001835 D5                    5997 	push	de
      001836 1A                    5998 	ld	a, (de)
      001837 C6 08                 5999 	add	a, #0x08
      001839 5F                    6000 	ld	e, a
      00183A F8 0E                 6001 	ldhl	sp,	#14
                                   6002 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00183C 6E                    6003 	ld	l, (hl)
                                   6004 ;	spillPairReg hl
                                   6005 ;	spillPairReg hl
      00183D 26 00                 6006 	ld	h, #0x00
                                   6007 ;	spillPairReg hl
                                   6008 ;	spillPairReg hl
      00183F 29                    6009 	add	hl, hl
      001840 29                    6010 	add	hl, hl
      001841 D5                    6011 	push	de
      001842 11r00r00              6012 	ld	de, #_shadow_OAM
      001845 19                    6013 	add	hl, de
      001846 D1                    6014 	pop	de
                                   6015 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001847 79                    6016 	ld	a, c
      001848 22                    6017 	ld	(hl+), a
      001849 73                    6018 	ld	(hl), e
                                   6019 ;src/main.c:580: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00184A F8 02                 6020 	ldhl	sp,#2
      00184C 2A                    6021 	ld	a, (hl+)
      00184D 5F                    6022 	ld	e, a
      00184E 56                    6023 	ld	d, (hl)
      00184F 1A                    6024 	ld	a, (de)
      001850 C6 08                 6025 	add	a, #0x08
      001852 4F                    6026 	ld	c, a
      001853 D1                    6027 	pop	de
      001854 D5                    6028 	push	de
      001855 1A                    6029 	ld	a, (de)
      001856 F8 0E                 6030 	ldhl	sp,	#14
      001858 32                    6031 	ld	(hl-), a
                                   6032 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001859 6E                    6033 	ld	l, (hl)
                                   6034 ;	spillPairReg hl
                                   6035 ;	spillPairReg hl
      00185A 26 00                 6036 	ld	h, #0x00
                                   6037 ;	spillPairReg hl
                                   6038 ;	spillPairReg hl
      00185C 29                    6039 	add	hl, hl
      00185D 29                    6040 	add	hl, hl
      00185E 11r00r00              6041 	ld	de, #_shadow_OAM
      001861 19                    6042 	add	hl, de
                                   6043 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001862 79                    6044 	ld	a, c
      001863 22                    6045 	ld	(hl+), a
      001864 4D                    6046 	ld	c, l
      001865 44                    6047 	ld	b, h
      001866 F8 0E                 6048 	ldhl	sp,	#14
      001868 7E                    6049 	ld	a, (hl)
      001869 02                    6050 	ld	(bc), a
                                   6051 ;src/main.c:580: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00186A                       6052 00144$:
                                   6053 ;src/main.c:488: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00186A F8 0F                 6054 	ldhl	sp,	#15
      00186C 34                    6055 	inc	(hl)
      00186D C3r4Er12              6056 	jp	00197$
      001870                       6057 00145$:
                                   6058 ;src/main.c:590: uint8_t i = enemyCollisionCount;
      001870 FArA5r00              6059 	ld	a, (#_enemyCollisionCount)
      001873 F8 01                 6060 	ldhl	sp,	#1
      001875 77                    6061 	ld	(hl), a
                                   6062 ;src/main.c:592: if (enemies[i].alive) {
      001876 4E                    6063 	ld	c, (hl)
      001877 06 00                 6064 	ld	b, #0x00
      001879 69                    6065 	ld	l, c
      00187A 60                    6066 	ld	h, b
      00187B 29                    6067 	add	hl, hl
      00187C 29                    6068 	add	hl, hl
      00187D 29                    6069 	add	hl, hl
      00187E 09                    6070 	add	hl, bc
      00187F 29                    6071 	add	hl, hl
      001880 01r5Ar00              6072 	ld	bc,#_enemies
      001883 09                    6073 	add	hl,bc
      001884 E5                    6074 	push	hl
      001885 7D                    6075 	ld	a, l
      001886 F8 04                 6076 	ldhl	sp,	#4
      001888 77                    6077 	ld	(hl), a
      001889 E1                    6078 	pop	hl
      00188A 7C                    6079 	ld	a, h
      00188B F8 03                 6080 	ldhl	sp,	#3
      00188D 32                    6081 	ld	(hl-), a
      00188E 2A                    6082 	ld	a, (hl+)
      00188F 5F                    6083 	ld	e, a
      001890 56                    6084 	ld	d, (hl)
      001891 21 09 00              6085 	ld	hl, #0x0009
      001894 19                    6086 	add	hl, de
      001895 E5                    6087 	push	hl
      001896 7D                    6088 	ld	a, l
      001897 F8 06                 6089 	ldhl	sp,	#6
      001899 77                    6090 	ld	(hl), a
      00189A E1                    6091 	pop	hl
      00189B 7C                    6092 	ld	a, h
      00189C F8 05                 6093 	ldhl	sp,	#5
      00189E 32                    6094 	ld	(hl-), a
      00189F 2A                    6095 	ld	a, (hl+)
      0018A0 5F                    6096 	ld	e, a
      0018A1 56                    6097 	ld	d, (hl)
      0018A2 1A                    6098 	ld	a, (de)
      0018A3 F8 0F                 6099 	ldhl	sp,	#15
      0018A5 77                    6100 	ld	(hl), a
      0018A6 7E                    6101 	ld	a, (hl)
      0018A7 B7                    6102 	or	a, a
      0018A8 CAr66r1B              6103 	jp	Z, 00198$
                                   6104 ;src/main.c:593: if (enemies[i].visible == 1) {
      0018AB F8 02                 6105 	ldhl	sp,#2
      0018AD 2A                    6106 	ld	a, (hl+)
      0018AE 5F                    6107 	ld	e, a
      0018AF 56                    6108 	ld	d, (hl)
      0018B0 21 0A 00              6109 	ld	hl, #0x000a
      0018B3 19                    6110 	add	hl, de
      0018B4 4D                    6111 	ld	c, l
      0018B5 44                    6112 	ld	b, h
      0018B6 0A                    6113 	ld	a, (bc)
      0018B7 F8 06                 6114 	ldhl	sp,	#6
      0018B9 77                    6115 	ld	(hl), a
                                   6116 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018BA F8 02                 6117 	ldhl	sp,#2
      0018BC 2A                    6118 	ld	a, (hl+)
      0018BD 5F                    6119 	ld	e, a
      0018BE 56                    6120 	ld	d, (hl)
      0018BF 1A                    6121 	ld	a, (de)
      0018C0 F8 07                 6122 	ldhl	sp,	#7
      0018C2 22                    6123 	ld	(hl+), a
      0018C3 13                    6124 	inc	de
      0018C4 1A                    6125 	ld	a, (de)
      0018C5 77                    6126 	ld	(hl), a
      0018C6 F8 02                 6127 	ldhl	sp,#2
      0018C8 2A                    6128 	ld	a, (hl+)
      0018C9 5F                    6129 	ld	e, a
      0018CA 56                    6130 	ld	d, (hl)
      0018CB 21 02 00              6131 	ld	hl, #0x0002
      0018CE 19                    6132 	add	hl, de
      0018CF E5                    6133 	push	hl
      0018D0 7D                    6134 	ld	a, l
      0018D1 F8 0B                 6135 	ldhl	sp,	#11
      0018D3 77                    6136 	ld	(hl), a
      0018D4 E1                    6137 	pop	hl
      0018D5 7C                    6138 	ld	a, h
      0018D6 F8 0A                 6139 	ldhl	sp,	#10
      0018D8 77                    6140 	ld	(hl), a
                                   6141 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      0018D9 F8 01                 6142 	ldhl	sp,	#1
      0018DB 5E                    6143 	ld	e, (hl)
                                   6144 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018DC F8 07                 6145 	ldhl	sp,	#7
      0018DE 7E                    6146 	ld	a, (hl)
      0018DF F8 0B                 6147 	ldhl	sp,	#11
      0018E1 77                    6148 	ld	(hl), a
      0018E2 F8 08                 6149 	ldhl	sp,	#8
      0018E4 7E                    6150 	ld	a, (hl)
      0018E5 F8 0C                 6151 	ldhl	sp,	#12
                                   6152 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      0018E7 22                    6153 	ld	(hl+), a
      0018E8 7B                    6154 	ld	a, e
      0018E9 87                    6155 	add	a, a
                                   6156 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018EA 32                    6157 	ld	(hl-), a
      0018EB 2A                    6158 	ld	a, (hl+)
      0018EC 23                    6159 	inc	hl
      0018ED 07                    6160 	rlca
      0018EE E6 01                 6161 	and	a,#0x01
                                   6162 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      0018F0 32                    6163 	ld	(hl-), a
      0018F1 2A                    6164 	ld	a, (hl+)
      0018F2 23                    6165 	inc	hl
      0018F3 C6 0A                 6166 	add	a, #0x0a
      0018F5 77                    6167 	ld	(hl), a
                                   6168 ;src/main.c:593: if (enemies[i].visible == 1) {
      0018F6 F8 06                 6169 	ldhl	sp,	#6
      0018F8 7E                    6170 	ld	a, (hl)
      0018F9 3D                    6171 	dec	a
      0018FA 20 74                 6172 	jr	NZ, 00165$
                                   6173 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018FC F8 0E                 6174 	ldhl	sp,	#14
      0018FE 7E                    6175 	ld	a, (hl)
      0018FF B7                    6176 	or	a, a
      001900 20 48                 6177 	jr	NZ, 00146$
      001902 F8 0B                 6178 	ldhl	sp,	#11
      001904 3E AC                 6179 	ld	a, #0xac
      001906 96                    6180 	sub	a, (hl)
      001907 23                    6181 	inc	hl
      001908 3E 00                 6182 	ld	a, #0x00
      00190A 9E                    6183 	sbc	a, (hl)
      00190B 3E 00                 6184 	ld	a, #0x00
      00190D 57                    6185 	ld	d, a
      00190E CB 7E                 6186 	bit	7, (hl)
      001910 28 07                 6187 	jr	Z, 00433$
      001912 CB 7A                 6188 	bit	7, d
      001914 20 08                 6189 	jr	NZ, 00434$
      001916 BF                    6190 	cp	a, a
      001917 18 05                 6191 	jr	00434$
      001919                       6192 00433$:
      001919 CB 7A                 6193 	bit	7, d
      00191B 28 01                 6194 	jr	Z, 00434$
      00191D 37                    6195 	scf
      00191E                       6196 00434$:
      00191E 38 2A                 6197 	jr	C, 00146$
      001920 F8 09                 6198 	ldhl	sp,#9
      001922 2A                    6199 	ld	a, (hl+)
      001923 5F                    6200 	ld	e, a
      001924 56                    6201 	ld	d, (hl)
      001925 1A                    6202 	ld	a, (de)
      001926 6F                    6203 	ld	l, a
                                   6204 ;	spillPairReg hl
                                   6205 ;	spillPairReg hl
      001927 13                    6206 	inc	de
      001928 1A                    6207 	ld	a, (de)
      001929 67                    6208 	ld	h, a
                                   6209 ;	spillPairReg hl
                                   6210 ;	spillPairReg hl
      00192A CB 7C                 6211 	bit	7, h
      00192C 20 1C                 6212 	jr	NZ, 00146$
      00192E 5C                    6213 	ld	e, h
      00192F 16 00                 6214 	ld	d, #0x00
      001931 3E 98                 6215 	ld	a, #0x98
      001933 BD                    6216 	cp	a, l
      001934 3E 00                 6217 	ld	a, #0x00
      001936 9C                    6218 	sbc	a, h
      001937 CB 7B                 6219 	bit	7, e
      001939 28 07                 6220 	jr	Z, 00435$
      00193B CB 7A                 6221 	bit	7, d
      00193D 20 08                 6222 	jr	NZ, 00436$
      00193F BF                    6223 	cp	a, a
      001940 18 05                 6224 	jr	00436$
      001942                       6225 00435$:
      001942 CB 7A                 6226 	bit	7, d
      001944 28 01                 6227 	jr	Z, 00436$
      001946 37                    6228 	scf
      001947                       6229 00436$:
      001947 D2r66r1B              6230 	jp	NC, 00198$
      00194A                       6231 00146$:
                                   6232 ;src/main.c:595: enemies[i].visible = 0;
      00194A AF                    6233 	xor	a, a
      00194B 02                    6234 	ld	(bc), a
                                   6235 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      00194C F8 0F                 6236 	ldhl	sp,	#15
                                   6237 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00194E 6E                    6238 	ld	l, (hl)
      00194F 11r00r00              6239 	ld	de, #_shadow_OAM+0
                                   6240 ;	spillPairReg hl
                                   6241 ;	spillPairReg hl
      001952 26 00                 6242 	ld	h, #0x00
                                   6243 ;	spillPairReg hl
                                   6244 ;	spillPairReg hl
      001954 29                    6245 	add	hl, hl
      001955 29                    6246 	add	hl, hl
      001956 19                    6247 	add	hl, de
      001957 23                    6248 	inc	hl
      001958 23                    6249 	inc	hl
      001959 36 7F                 6250 	ld	(hl), #0x7f
                                   6251 ;src/main.c:597: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00195B F8 0D                 6252 	ldhl	sp,	#13
      00195D 7E                    6253 	ld	a, (hl)
      00195E C6 0B                 6254 	add	a, #0x0b
                                   6255 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001960 6F                    6256 	ld	l, a
      001961 11r00r00              6257 	ld	de, #_shadow_OAM+0
                                   6258 ;	spillPairReg hl
                                   6259 ;	spillPairReg hl
      001964 26 00                 6260 	ld	h, #0x00
                                   6261 ;	spillPairReg hl
                                   6262 ;	spillPairReg hl
      001966 29                    6263 	add	hl, hl
      001967 29                    6264 	add	hl, hl
      001968 19                    6265 	add	hl, de
      001969 23                    6266 	inc	hl
      00196A 23                    6267 	inc	hl
      00196B 36 7F                 6268 	ld	(hl), #0x7f
                                   6269 ;src/main.c:597: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00196D C3r66r1B              6270 	jp	00198$
      001970                       6271 00165$:
                                   6272 ;src/main.c:601: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001970 F8 0E                 6273 	ldhl	sp,	#14
      001972 CB 46                 6274 	bit	0, (hl)
      001974 C2r71r1A              6275 	jp	NZ, 00159$
      001977 F8 0B                 6276 	ldhl	sp,	#11
      001979 2A                    6277 	ld	a, (hl+)
      00197A D6 AC                 6278 	sub	a, #0xac
      00197C 7E                    6279 	ld	a, (hl)
      00197D DE 00                 6280 	sbc	a, #0x00
      00197F 56                    6281 	ld	d, (hl)
      001980 3E 00                 6282 	ld	a, #0x00
      001982 CB 7F                 6283 	bit	7,a
      001984 28 07                 6284 	jr	Z, 00437$
      001986 CB 7A                 6285 	bit	7, d
      001988 20 08                 6286 	jr	NZ, 00438$
      00198A BF                    6287 	cp	a, a
      00198B 18 05                 6288 	jr	00438$
      00198D                       6289 00437$:
      00198D CB 7A                 6290 	bit	7, d
      00198F 28 01                 6291 	jr	Z, 00438$
      001991 37                    6292 	scf
      001992                       6293 00438$:
      001992 D2r71r1A              6294 	jp	NC, 00159$
      001995 F8 09                 6295 	ldhl	sp,#9
      001997 2A                    6296 	ld	a, (hl+)
      001998 5F                    6297 	ld	e, a
      001999 56                    6298 	ld	d, (hl)
      00199A 1A                    6299 	ld	a, (de)
      00199B 6F                    6300 	ld	l, a
                                   6301 ;	spillPairReg hl
                                   6302 ;	spillPairReg hl
      00199C 13                    6303 	inc	de
      00199D 1A                    6304 	ld	a, (de)
      00199E 67                    6305 	ld	h, a
                                   6306 ;	spillPairReg hl
                                   6307 ;	spillPairReg hl
      00199F 5C                    6308 	ld	e, h
      0019A0 AF                    6309 	xor	a, a
      0019A1 57                    6310 	ld	d, a
      0019A2 BD                    6311 	cp	a, l
      0019A3 9C                    6312 	sbc	a, h
      0019A4 CB 7B                 6313 	bit	7, e
      0019A6 28 07                 6314 	jr	Z, 00439$
      0019A8 CB 7A                 6315 	bit	7, d
      0019AA 20 08                 6316 	jr	NZ, 00440$
      0019AC BF                    6317 	cp	a, a
      0019AD 18 05                 6318 	jr	00440$
      0019AF                       6319 00439$:
      0019AF CB 7A                 6320 	bit	7, d
      0019B1 28 01                 6321 	jr	Z, 00440$
      0019B3 37                    6322 	scf
      0019B4                       6323 00440$:
      0019B4 D2r71r1A              6324 	jp	NC, 00159$
      0019B7 7D                    6325 	ld	a, l
      0019B8 D6 98                 6326 	sub	a, #0x98
      0019BA 7C                    6327 	ld	a, h
      0019BB 17                    6328 	rla
      0019BC 3F                    6329 	ccf
      0019BD 1F                    6330 	rra
      0019BE DE 80                 6331 	sbc	a, #0x80
      0019C0 D2r71r1A              6332 	jp	NC, 00159$
                                   6333 ;src/main.c:602: enemies[i].visible = 1;
      0019C3 3E 01                 6334 	ld	a, #0x01
      0019C5 02                    6335 	ld	(bc), a
                                   6336 ;src/main.c:603: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      0019C6 F8 02                 6337 	ldhl	sp,#2
      0019C8 2A                    6338 	ld	a, (hl+)
      0019C9 5F                    6339 	ld	e, a
      0019CA 56                    6340 	ld	d, (hl)
      0019CB 21 06 00              6341 	ld	hl, #0x0006
      0019CE 19                    6342 	add	hl, de
      0019CF 4D                    6343 	ld	c, l
      0019D0 44                    6344 	ld	b, h
      0019D1 0A                    6345 	ld	a, (bc)
      0019D2 F8 0E                 6346 	ldhl	sp,	#14
      0019D4 22                    6347 	ld	(hl+), a
      0019D5 4E                    6348 	ld	c, (hl)
                                   6349 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0019D6 F8 0B                 6350 	ldhl	sp,	#11
      0019D8 79                    6351 	ld	a, c
      0019D9 22                    6352 	ld	(hl+), a
      0019DA 36 00                 6353 	ld	(hl), #0x00
      0019DC 3E 02                 6354 	ld	a, #0x02
      0019DE                       6355 00441$:
      0019DE F8 0B                 6356 	ldhl	sp,	#11
      0019E0 CB 26                 6357 	sla	(hl)
      0019E2 23                    6358 	inc	hl
      0019E3 CB 16                 6359 	rl	(hl)
      0019E5 3D                    6360 	dec	a
      0019E6 20 F6                 6361 	jr	NZ, 00441$
      0019E8 2B                    6362 	dec	hl
      0019E9 2A                    6363 	ld	a, (hl+)
      0019EA 5F                    6364 	ld	e, a
      0019EB 56                    6365 	ld	d, (hl)
      0019EC 21r00r00              6366 	ld	hl, #_shadow_OAM
      0019EF 19                    6367 	add	hl, de
      0019F0 E5                    6368 	push	hl
      0019F1 7D                    6369 	ld	a, l
      0019F2 F8 0B                 6370 	ldhl	sp,	#11
      0019F4 77                    6371 	ld	(hl), a
      0019F5 E1                    6372 	pop	hl
      0019F6 7C                    6373 	ld	a, h
      0019F7 F8 0A                 6374 	ldhl	sp,	#10
      0019F9 32                    6375 	ld	(hl-), a
      0019FA 2A                    6376 	ld	a, (hl+)
      0019FB 5F                    6377 	ld	e, a
      0019FC 56                    6378 	ld	d, (hl)
      0019FD 21 02 00              6379 	ld	hl, #0x0002
      001A00 19                    6380 	add	hl, de
      001A01 E5                    6381 	push	hl
      001A02 7D                    6382 	ld	a, l
      001A03 F8 0D                 6383 	ldhl	sp,	#13
      001A05 77                    6384 	ld	(hl), a
      001A06 E1                    6385 	pop	hl
      001A07 7C                    6386 	ld	a, h
      001A08 F8 0C                 6387 	ldhl	sp,	#12
      001A0A 32                    6388 	ld	(hl-), a
      001A0B 2A                    6389 	ld	a, (hl+)
      001A0C 5F                    6390 	ld	e, a
      001A0D 2A                    6391 	ld	a, (hl+)
      001A0E 23                    6392 	inc	hl
      001A0F 57                    6393 	ld	d, a
      001A10 7E                    6394 	ld	a, (hl)
      001A11 12                    6395 	ld	(de), a
                                   6396 ;src/main.c:604: if (enemies[i].spriteCount == 2) {
      001A12 F8 02                 6397 	ldhl	sp,#2
      001A14 2A                    6398 	ld	a, (hl+)
      001A15 5F                    6399 	ld	e, a
      001A16 56                    6400 	ld	d, (hl)
      001A17 21 08 00              6401 	ld	hl, #0x0008
      001A1A 19                    6402 	add	hl, de
      001A1B 4D                    6403 	ld	c, l
      001A1C 44                    6404 	ld	b, h
      001A1D 0A                    6405 	ld	a, (bc)
      001A1E D6 02                 6406 	sub	a, #0x02
      001A20 C2r66r1B              6407 	jp	NZ,00198$
                                   6408 ;src/main.c:605: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001A23 F8 02                 6409 	ldhl	sp,#2
      001A25 2A                    6410 	ld	a, (hl+)
      001A26 5F                    6411 	ld	e, a
      001A27 56                    6412 	ld	d, (hl)
      001A28 21 07 00              6413 	ld	hl, #0x0007
      001A2B 19                    6414 	add	hl, de
      001A2C 4D                    6415 	ld	c, l
      001A2D 44                    6416 	ld	b, h
      001A2E 0A                    6417 	ld	a, (bc)
      001A2F F8 0F                 6418 	ldhl	sp,	#15
      001A31 32                    6419 	ld	(hl-), a
      001A32 2B                    6420 	dec	hl
      001A33 7E                    6421 	ld	a, (hl)
      001A34 C6 0B                 6422 	add	a, #0x0b
                                   6423 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A36 22                    6424 	ld	(hl+), a
      001A37 36 00                 6425 	ld	(hl), #0x00
      001A39 3E 02                 6426 	ld	a, #0x02
      001A3B                       6427 00444$:
      001A3B F8 0D                 6428 	ldhl	sp,	#13
      001A3D CB 26                 6429 	sla	(hl)
      001A3F 23                    6430 	inc	hl
      001A40 CB 16                 6431 	rl	(hl)
      001A42 3D                    6432 	dec	a
      001A43 20 F6                 6433 	jr	NZ, 00444$
      001A45 2B                    6434 	dec	hl
      001A46 2A                    6435 	ld	a, (hl+)
      001A47 5F                    6436 	ld	e, a
      001A48 56                    6437 	ld	d, (hl)
      001A49 21r00r00              6438 	ld	hl, #_shadow_OAM
      001A4C 19                    6439 	add	hl, de
      001A4D E5                    6440 	push	hl
      001A4E 7D                    6441 	ld	a, l
      001A4F F8 0D                 6442 	ldhl	sp,	#13
      001A51 77                    6443 	ld	(hl), a
      001A52 E1                    6444 	pop	hl
      001A53 7C                    6445 	ld	a, h
      001A54 F8 0C                 6446 	ldhl	sp,	#12
      001A56 32                    6447 	ld	(hl-), a
      001A57 2A                    6448 	ld	a, (hl+)
      001A58 5F                    6449 	ld	e, a
      001A59 56                    6450 	ld	d, (hl)
      001A5A 21 02 00              6451 	ld	hl, #0x0002
      001A5D 19                    6452 	add	hl, de
      001A5E E5                    6453 	push	hl
      001A5F 7D                    6454 	ld	a, l
      001A60 F8 0F                 6455 	ldhl	sp,	#15
      001A62 77                    6456 	ld	(hl), a
      001A63 E1                    6457 	pop	hl
      001A64 7C                    6458 	ld	a, h
      001A65 F8 0E                 6459 	ldhl	sp,	#14
      001A67 32                    6460 	ld	(hl-), a
      001A68 2A                    6461 	ld	a, (hl+)
      001A69 5F                    6462 	ld	e, a
      001A6A 2A                    6463 	ld	a, (hl+)
      001A6B 57                    6464 	ld	d, a
      001A6C 7E                    6465 	ld	a, (hl)
      001A6D 12                    6466 	ld	(de), a
                                   6467 ;src/main.c:605: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001A6E C3r66r1B              6468 	jp	00198$
      001A71                       6469 00159$:
                                   6470 ;src/main.c:608: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001A71 F8 07                 6471 	ldhl	sp,	#7
      001A73 2A                    6472 	ld	a, (hl+)
      001A74 D6 9C                 6473 	sub	a, #0x9c
      001A76 7E                    6474 	ld	a, (hl)
      001A77 DE FF                 6475 	sbc	a, #0xff
      001A79 56                    6476 	ld	d, (hl)
      001A7A 3E FF                 6477 	ld	a, #0xff
      001A7C CB 7F                 6478 	bit	7,a
      001A7E 28 07                 6479 	jr	Z, 00445$
      001A80 CB 7A                 6480 	bit	7, d
      001A82 20 08                 6481 	jr	NZ, 00446$
      001A84 BF                    6482 	cp	a, a
      001A85 18 05                 6483 	jr	00446$
      001A87                       6484 00445$:
      001A87 CB 7A                 6485 	bit	7, d
      001A89 28 01                 6486 	jr	Z, 00446$
      001A8B 37                    6487 	scf
      001A8C                       6488 00446$:
      001A8C 38 4F                 6489 	jr	C, 00153$
      001A8E F8 0B                 6490 	ldhl	sp,	#11
      001A90 3E 10                 6491 	ld	a, #0x10
      001A92 96                    6492 	sub	a, (hl)
      001A93 23                    6493 	inc	hl
      001A94 3E 01                 6494 	ld	a, #0x01
      001A96 9E                    6495 	sbc	a, (hl)
      001A97 3E 01                 6496 	ld	a, #0x01
      001A99 57                    6497 	ld	d, a
      001A9A CB 7E                 6498 	bit	7, (hl)
      001A9C 28 07                 6499 	jr	Z, 00447$
      001A9E CB 7A                 6500 	bit	7, d
      001AA0 20 08                 6501 	jr	NZ, 00448$
      001AA2 BF                    6502 	cp	a, a
      001AA3 18 05                 6503 	jr	00448$
      001AA5                       6504 00447$:
      001AA5 CB 7A                 6505 	bit	7, d
      001AA7 28 01                 6506 	jr	Z, 00448$
      001AA9 37                    6507 	scf
      001AAA                       6508 00448$:
      001AAA 38 31                 6509 	jr	C, 00153$
      001AAC F8 09                 6510 	ldhl	sp,#9
      001AAE 2A                    6511 	ld	a, (hl+)
      001AAF 5F                    6512 	ld	e, a
      001AB0 56                    6513 	ld	d, (hl)
      001AB1 1A                    6514 	ld	a, (de)
      001AB2 4F                    6515 	ld	c, a
      001AB3 13                    6516 	inc	de
      001AB4 1A                    6517 	ld	a, (de)
      001AB5 47                    6518 	ld	b, a
      001AB6 79                    6519 	ld	a, c
      001AB7 D6 9C                 6520 	sub	a, #0x9c
      001AB9 78                    6521 	ld	a, b
      001ABA 17                    6522 	rla
      001ABB 3F                    6523 	ccf
      001ABC 1F                    6524 	rra
      001ABD DE 7F                 6525 	sbc	a, #0x7f
      001ABF 38 1C                 6526 	jr	C, 00153$
      001AC1 58                    6527 	ld	e, b
      001AC2 16 00                 6528 	ld	d, #0x00
      001AC4 3E FC                 6529 	ld	a, #0xfc
      001AC6 B9                    6530 	cp	a, c
      001AC7 3E 00                 6531 	ld	a, #0x00
      001AC9 98                    6532 	sbc	a, b
      001ACA CB 7B                 6533 	bit	7, e
      001ACC 28 07                 6534 	jr	Z, 00449$
      001ACE CB 7A                 6535 	bit	7, d
      001AD0 20 08                 6536 	jr	NZ, 00450$
      001AD2 BF                    6537 	cp	a, a
      001AD3 18 05                 6538 	jr	00450$
      001AD5                       6539 00449$:
      001AD5 CB 7A                 6540 	bit	7, d
      001AD7 28 01                 6541 	jr	Z, 00450$
      001AD9 37                    6542 	scf
      001ADA                       6543 00450$:
      001ADA D2r66r1B              6544 	jp	NC, 00198$
      001ADD                       6545 00153$:
                                   6546 ;src/main.c:609: enemies[i].alive = 0;
      001ADD F8 04                 6547 	ldhl	sp,	#4
      001ADF 2A                    6548 	ld	a,	(hl+)
      001AE0 66                    6549 	ld	h, (hl)
      001AE1 6F                    6550 	ld	l, a
      001AE2 36 00                 6551 	ld	(hl), #0x00
                                   6552 ;src/main.c:610: set_sprite_tile(10+(i<<1), 0x7f);
      001AE4 F8 0F                 6553 	ldhl	sp,	#15
                                   6554 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001AE6 3A                    6555 	ld	a, (hl-)
      001AE7 22                    6556 	ld	(hl+), a
      001AE8 36 00                 6557 	ld	(hl), #0x00
      001AEA 3E 02                 6558 	ld	a, #0x02
      001AEC                       6559 00451$:
      001AEC F8 0E                 6560 	ldhl	sp,	#14
      001AEE CB 26                 6561 	sla	(hl)
      001AF0 23                    6562 	inc	hl
      001AF1 CB 16                 6563 	rl	(hl)
      001AF3 3D                    6564 	dec	a
      001AF4 20 F6                 6565 	jr	NZ, 00451$
      001AF6 2B                    6566 	dec	hl
      001AF7 2A                    6567 	ld	a, (hl+)
      001AF8 5F                    6568 	ld	e, a
      001AF9 56                    6569 	ld	d, (hl)
      001AFA 21r00r00              6570 	ld	hl, #_shadow_OAM
      001AFD 19                    6571 	add	hl, de
      001AFE E5                    6572 	push	hl
      001AFF 7D                    6573 	ld	a, l
      001B00 F8 0D                 6574 	ldhl	sp,	#13
      001B02 77                    6575 	ld	(hl), a
      001B03 E1                    6576 	pop	hl
      001B04 7C                    6577 	ld	a, h
      001B05 F8 0C                 6578 	ldhl	sp,	#12
      001B07 32                    6579 	ld	(hl-), a
      001B08 2A                    6580 	ld	a, (hl+)
      001B09 5F                    6581 	ld	e, a
      001B0A 56                    6582 	ld	d, (hl)
      001B0B 21 02 00              6583 	ld	hl, #0x0002
      001B0E 19                    6584 	add	hl, de
      001B0F E5                    6585 	push	hl
      001B10 7D                    6586 	ld	a, l
      001B11 F8 10                 6587 	ldhl	sp,	#16
      001B13 77                    6588 	ld	(hl), a
      001B14 E1                    6589 	pop	hl
      001B15 7C                    6590 	ld	a, h
      001B16 F8 0F                 6591 	ldhl	sp,	#15
      001B18 32                    6592 	ld	(hl-), a
      001B19 2A                    6593 	ld	a,	(hl+)
      001B1A 66                    6594 	ld	h, (hl)
      001B1B 6F                    6595 	ld	l, a
      001B1C 36 7F                 6596 	ld	(hl), #0x7f
                                   6597 ;src/main.c:611: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001B1E F8 0D                 6598 	ldhl	sp,	#13
      001B20 2A                    6599 	ld	a, (hl+)
      001B21 23                    6600 	inc	hl
      001B22 C6 0B                 6601 	add	a, #0x0b
      001B24 77                    6602 	ld	(hl), a
                                   6603 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B25 3A                    6604 	ld	a, (hl-)
      001B26 22                    6605 	ld	(hl+), a
      001B27 36 00                 6606 	ld	(hl), #0x00
      001B29 3E 02                 6607 	ld	a, #0x02
      001B2B                       6608 00452$:
      001B2B F8 0E                 6609 	ldhl	sp,	#14
      001B2D CB 26                 6610 	sla	(hl)
      001B2F 23                    6611 	inc	hl
      001B30 CB 16                 6612 	rl	(hl)
      001B32 3D                    6613 	dec	a
      001B33 20 F6                 6614 	jr	NZ, 00452$
      001B35 2B                    6615 	dec	hl
      001B36 2A                    6616 	ld	a, (hl+)
      001B37 5F                    6617 	ld	e, a
      001B38 56                    6618 	ld	d, (hl)
      001B39 21r00r00              6619 	ld	hl, #_shadow_OAM
      001B3C 19                    6620 	add	hl, de
      001B3D E5                    6621 	push	hl
      001B3E 7D                    6622 	ld	a, l
      001B3F F8 0E                 6623 	ldhl	sp,	#14
      001B41 77                    6624 	ld	(hl), a
      001B42 E1                    6625 	pop	hl
      001B43 7C                    6626 	ld	a, h
      001B44 F8 0D                 6627 	ldhl	sp,	#13
      001B46 32                    6628 	ld	(hl-), a
      001B47 2A                    6629 	ld	a, (hl+)
      001B48 5F                    6630 	ld	e, a
      001B49 56                    6631 	ld	d, (hl)
      001B4A 21 02 00              6632 	ld	hl, #0x0002
      001B4D 19                    6633 	add	hl, de
      001B4E E5                    6634 	push	hl
      001B4F 7D                    6635 	ld	a, l
      001B50 F8 10                 6636 	ldhl	sp,	#16
      001B52 77                    6637 	ld	(hl), a
      001B53 E1                    6638 	pop	hl
      001B54 7C                    6639 	ld	a, h
      001B55 F8 0F                 6640 	ldhl	sp,	#15
      001B57 32                    6641 	ld	(hl-), a
      001B58 2A                    6642 	ld	a,	(hl+)
      001B59 66                    6643 	ld	h, (hl)
      001B5A 6F                    6644 	ld	l, a
      001B5B 36 7F                 6645 	ld	(hl), #0x7f
                                   6646 ;src/main.c:612: initEnemy(i);
      001B5D F8 01                 6647 	ldhl	sp,	#1
      001B5F 7E                    6648 	ld	a, (hl)
      001B60 F5                    6649 	push	af
      001B61 33                    6650 	inc	sp
      001B62 CDr64r11              6651 	call	_initEnemy
      001B65 33                    6652 	inc	sp
      001B66                       6653 00198$:
                                   6654 ;src/main.c:618: }
      001B66 E8 10                 6655 	add	sp, #16
      001B68 C9                    6656 	ret
                                   6657 ;src/main.c:623: void move() {
                                   6658 ;	---------------------------------
                                   6659 ; Function move
                                   6660 ; ---------------------------------
      001B69                       6661 _move::
      001B69 E8 F8                 6662 	add	sp, #-8
                                   6663 ;src/main.c:626: if (joydata & J_A) {
      001B6B FArF5r00              6664 	ld	a, (#_joydata)
      001B6E CB 67                 6665 	bit	4, a
      001B70 28 16                 6666 	jr	Z, 00102$
                                   6667 ;src/main.c:627: xSpeed += xDir + xDir + xDir;
      001B72 21r93r00              6668 	ld	hl, #_xDir
      001B75 7E                    6669 	ld	a, (hl)
      001B76 87                    6670 	add	a, a
      001B77 86                    6671 	add	a, (hl)
      001B78 21r95r00              6672 	ld	hl, #_xSpeed
      001B7B 86                    6673 	add	a, (hl)
      001B7C 77                    6674 	ld	(hl), a
                                   6675 ;src/main.c:628: ySpeed += yDir + yDir + yDir;
      001B7D 21r94r00              6676 	ld	hl, #_yDir
      001B80 7E                    6677 	ld	a, (hl)
      001B81 87                    6678 	add	a, a
      001B82 86                    6679 	add	a, (hl)
      001B83 21r96r00              6680 	ld	hl, #_ySpeed
      001B86 86                    6681 	add	a, (hl)
      001B87 77                    6682 	ld	(hl), a
      001B88                       6683 00102$:
                                   6684 ;src/main.c:632: xSpeed = clamp(xSpeed, -100, 100);
      001B88 21r95r00              6685 	ld	hl, #_xSpeed
      001B8B 4E                    6686 	ld	c, (hl)
                                   6687 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      001B8C 79                    6688 	ld	a, c
      001B8D EE 80                 6689 	xor	a, #0x80
      001B8F D6 1C                 6690 	sub	a, #0x1c
      001B91 30 04                 6691 	jr	NC, 00165$
      001B93 0E 9C                 6692 	ld	c, #0x9c
      001B95 18 19                 6693 	jr	00166$
      001B97                       6694 00165$:
      001B97 59                    6695 	ld	e, c
      001B98 3E 64                 6696 	ld	a,#0x64
      001B9A 57                    6697 	ld	d,a
      001B9B 91                    6698 	sub	a, c
      001B9C CB 7B                 6699 	bit	7, e
      001B9E 28 07                 6700 	jr	Z, 00342$
      001BA0 CB 7A                 6701 	bit	7, d
      001BA2 20 08                 6702 	jr	NZ, 00343$
      001BA4 BF                    6703 	cp	a, a
      001BA5 18 05                 6704 	jr	00343$
      001BA7                       6705 00342$:
      001BA7 CB 7A                 6706 	bit	7, d
      001BA9 28 01                 6707 	jr	Z, 00343$
      001BAB 37                    6708 	scf
      001BAC                       6709 00343$:
      001BAC 30 02                 6710 	jr	NC, 00167$
      001BAE 0E 64                 6711 	ld	c, #0x64
      001BB0                       6712 00167$:
      001BB0                       6713 00166$:
      001BB0 21r95r00              6714 	ld	hl, #_xSpeed
      001BB3 71                    6715 	ld	(hl), c
                                   6716 ;src/main.c:633: ySpeed = clamp(ySpeed, -100, 100);
      001BB4 21r96r00              6717 	ld	hl, #_ySpeed
      001BB7 4E                    6718 	ld	c, (hl)
                                   6719 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      001BB8 79                    6720 	ld	a, c
      001BB9 EE 80                 6721 	xor	a, #0x80
      001BBB D6 1C                 6722 	sub	a, #0x1c
      001BBD 30 04                 6723 	jr	NC, 00169$
      001BBF 0E 9C                 6724 	ld	c, #0x9c
      001BC1 18 19                 6725 	jr	00170$
      001BC3                       6726 00169$:
      001BC3 59                    6727 	ld	e, c
      001BC4 3E 64                 6728 	ld	a,#0x64
      001BC6 57                    6729 	ld	d,a
      001BC7 91                    6730 	sub	a, c
      001BC8 CB 7B                 6731 	bit	7, e
      001BCA 28 07                 6732 	jr	Z, 00344$
      001BCC CB 7A                 6733 	bit	7, d
      001BCE 20 08                 6734 	jr	NZ, 00345$
      001BD0 BF                    6735 	cp	a, a
      001BD1 18 05                 6736 	jr	00345$
      001BD3                       6737 00344$:
      001BD3 CB 7A                 6738 	bit	7, d
      001BD5 28 01                 6739 	jr	Z, 00345$
      001BD7 37                    6740 	scf
      001BD8                       6741 00345$:
      001BD8 30 02                 6742 	jr	NC, 00171$
      001BDA 0E 64                 6743 	ld	c, #0x64
      001BDC                       6744 00171$:
      001BDC                       6745 00170$:
      001BDC 21r96r00              6746 	ld	hl, #_ySpeed
      001BDF 71                    6747 	ld	(hl), c
                                   6748 ;src/main.c:635: xOverflow = 0;
      001BE0 AF                    6749 	xor	a, a
      001BE1 21rA1r00              6750 	ld	hl, #_xOverflow
      001BE4 22                    6751 	ld	(hl+), a
      001BE5 77                    6752 	ld	(hl), a
                                   6753 ;src/main.c:636: yOverflow = 0;
      001BE6 AF                    6754 	xor	a, a
      001BE7 21rA3r00              6755 	ld	hl, #_yOverflow
      001BEA 22                    6756 	ld	(hl+), a
      001BEB 77                    6757 	ld	(hl), a
                                   6758 ;src/main.c:641: uint8_t xCollisionPoint = playerDrawX; 
      001BEC 21r9Br00              6759 	ld	hl, #_playerDrawX
      001BEF 4E                    6760 	ld	c, (hl)
                                   6761 ;src/main.c:644: xCollisionPoint = playerDrawX +8; //right edge
      001BF0 46                    6762 	ld	b, (hl)
                                   6763 ;src/main.c:643: if (xSpeed > 0) {
      001BF1 21r95r00              6764 	ld	hl, #_xSpeed
      001BF4 5E                    6765 	ld	e, (hl)
      001BF5 AF                    6766 	xor	a, a
      001BF6 57                    6767 	ld	d, a
      001BF7 96                    6768 	sub	a, (hl)
      001BF8 CB 7B                 6769 	bit	7, e
      001BFA 28 07                 6770 	jr	Z, 00346$
      001BFC CB 7A                 6771 	bit	7, d
      001BFE 20 08                 6772 	jr	NZ, 00347$
      001C00 BF                    6773 	cp	a, a
      001C01 18 05                 6774 	jr	00347$
      001C03                       6775 00346$:
      001C03 CB 7A                 6776 	bit	7, d
      001C05 28 01                 6777 	jr	Z, 00347$
      001C07 37                    6778 	scf
      001C08                       6779 00347$:
      001C08 30 04                 6780 	jr	NC, 00104$
                                   6781 ;src/main.c:644: xCollisionPoint = playerDrawX +8; //right edge
      001C0A 78                    6782 	ld	a, b
      001C0B C6 08                 6783 	add	a, #0x08
      001C0D 4F                    6784 	ld	c, a
      001C0E                       6785 00104$:
                                   6786 ;src/main.c:646: if (xSpeed < 0) {
      001C0E FAr95r00              6787 	ld	a, (#_xSpeed)
      001C11 CB 7F                 6788 	bit	7, a
      001C13 28 04                 6789 	jr	Z, 00106$
                                   6790 ;src/main.c:647: xCollisionPoint = playerDrawX -8; //left edge
      001C15 78                    6791 	ld	a, b
      001C16 C6 F8                 6792 	add	a, #0xf8
      001C18 4F                    6793 	ld	c, a
      001C19                       6794 00106$:
                                   6795 ;src/main.c:651: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001C19 06 00                 6796 	ld	b, #0x00
      001C1B 79                    6797 	ld	a, c
      001C1C 21r9Dr00              6798 	ld	hl, #_bgX
      001C1F 86                    6799 	add	a, (hl)
      001C20 23                    6800 	inc	hl
      001C21 4F                    6801 	ld	c, a
      001C22 78                    6802 	ld	a, b
      001C23 8E                    6803 	adc	a, (hl)
      001C24 47                    6804 	ld	b, a
      001C25 CB 28                 6805 	sra	b
      001C27 CB 19                 6806 	rr	c
      001C29 CB 28                 6807 	sra	b
      001C2B CB 19                 6808 	rr	c
      001C2D CB 28                 6809 	sra	b
      001C2F CB 19                 6810 	rr	c
      001C31 11 20 00              6811 	ld	de, #0x0020
      001C34 D5                    6812 	push	de
      001C35 C5                    6813 	push	bc
      001C36 CDr00r00              6814 	call	__modsint
      001C39 E8 04                 6815 	add	sp, #4
                                   6816 ;src/main.c:655: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001C3B 21r9Cr00              6817 	ld	hl, #_playerDrawY
      001C3E 4E                    6818 	ld	c, (hl)
      001C3F 06 00                 6819 	ld	b, #0x00
      001C41 79                    6820 	ld	a, c
      001C42 21r9Fr00              6821 	ld	hl, #_bgY
      001C45 86                    6822 	add	a, (hl)
      001C46 23                    6823 	inc	hl
      001C47 4F                    6824 	ld	c, a
      001C48 78                    6825 	ld	a, b
      001C49 8E                    6826 	adc	a, (hl)
      001C4A 47                    6827 	ld	b, a
      001C4B CB 28                 6828 	sra	b
      001C4D CB 19                 6829 	rr	c
      001C4F CB 28                 6830 	sra	b
      001C51 CB 19                 6831 	rr	c
      001C53 CB 28                 6832 	sra	b
      001C55 CB 19                 6833 	rr	c
      001C57 D5                    6834 	push	de
      001C58 21 20 00              6835 	ld	hl, #0x0020
      001C5B E5                    6836 	push	hl
      001C5C C5                    6837 	push	bc
      001C5D CDr00r00              6838 	call	__modsint
      001C60 E8 04                 6839 	add	sp, #4
      001C62 6B                    6840 	ld	l, e
                                   6841 ;	spillPairReg hl
                                   6842 ;	spillPairReg hl
                                   6843 ;	spillPairReg hl
                                   6844 ;	spillPairReg hl
      001C63 D1                    6845 	pop	de
                                   6846 ;src/main.c:658: uint16_t ind = 32*bgindY + bgindX;
      001C64 26 00                 6847 	ld	h, #0x00
                                   6848 ;	spillPairReg hl
                                   6849 ;	spillPairReg hl
      001C66 29                    6850 	add	hl, hl
      001C67 29                    6851 	add	hl, hl
      001C68 29                    6852 	add	hl, hl
      001C69 29                    6853 	add	hl, hl
      001C6A 29                    6854 	add	hl, hl
      001C6B 19                    6855 	add	hl, de
      001C6C 5D                    6856 	ld	e, l
      001C6D 54                    6857 	ld	d, h
                                   6858 ;src/main.c:659: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001C6E 0E 01                 6859 	ld	c, #0x01
                                   6860 ;src/main.c:660: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001C70 21r87r00              6861 	ld	hl, #_background1
      001C73 19                    6862 	add	hl, de
      001C74 46                    6863 	ld	b, (hl)
      001C75 1E 00                 6864 	ld	e, #0x00
      001C77                       6865 00158$:
      001C77 FAr89r0B              6866 	ld	a, (#_BLANKSIZE)
      001C7A F8 02                 6867 	ldhl	sp,	#2
      001C7C 77                    6868 	ld	(hl), a
      001C7D 7B                    6869 	ld	a, e
      001C7E 96                    6870 	sub	a, (hl)
      001C7F 30 11                 6871 	jr	NC, 00109$
                                   6872 ;src/main.c:661: if (background1[ind] == BLANK[i] ) {
      001C81 21r8Ar0B              6873 	ld	hl, #_BLANK
      001C84 16 00                 6874 	ld	d, #0x00
      001C86 19                    6875 	add	hl, de
      001C87 56                    6876 	ld	d, (hl)
      001C88 78                    6877 	ld	a, b
                                   6878 ;src/main.c:662: result = 0;
      001C89 92                    6879 	sub	a,d
      001C8A 20 03                 6880 	jr	NZ, 00159$
      001C8C 4F                    6881 	ld	c,a
                                   6882 ;src/main.c:663: break;
      001C8D 18 03                 6883 	jr	00109$
      001C8F                       6884 00159$:
                                   6885 ;src/main.c:660: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001C8F 1C                    6886 	inc	e
      001C90 18 E5                 6887 	jr	00158$
      001C92                       6888 00109$:
                                   6889 ;src/main.c:667: if (result == 0) {
      001C92 79                    6890 	ld	a, c
      001C93 B7                    6891 	or	a, a
      001C94 C2r62r1D              6892 	jp	NZ, 00114$
                                   6893 ;src/main.c:668: playerX+=xSpeed;
      001C97 FAr95r00              6894 	ld	a, (#_xSpeed)
      001C9A 4F                    6895 	ld	c, a
      001C9B 07                    6896 	rlca
      001C9C 9F                    6897 	sbc	a, a
      001C9D 47                    6898 	ld	b, a
      001C9E 21r97r00              6899 	ld	hl, #_playerX
      001CA1 6E                    6900 	ld	l, (hl)
                                   6901 ;	spillPairReg hl
                                   6902 ;	spillPairReg hl
      001CA2 FAr98r00              6903 	ld	a, (_playerX + 1)
      001CA5 67                    6904 	ld	h, a
                                   6905 ;	spillPairReg hl
                                   6906 ;	spillPairReg hl
      001CA6 09                    6907 	add	hl, bc
      001CA7 4D                    6908 	ld	c, l
      001CA8 44                    6909 	ld	b, h
      001CA9 21r97r00              6910 	ld	hl, #_playerX
      001CAC 79                    6911 	ld	a, c
      001CAD 22                    6912 	ld	(hl+), a
                                   6913 ;src/main.c:670: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001CAE 78                    6914 	ld	a, b
      001CAF 32                    6915 	ld	(hl-), a
      001CB0 2A                    6916 	ld	a, (hl+)
      001CB1 4F                    6917 	ld	c, a
      001CB2 46                    6918 	ld	b, (hl)
      001CB3 79                    6919 	ld	a, c
      001CB4 D6 80                 6920 	sub	a, #0x80
      001CB6 78                    6921 	ld	a, b
      001CB7 DE 08                 6922 	sbc	a, #0x08
      001CB9 30 05                 6923 	jr	NC, 00173$
      001CBB 01 80 08              6924 	ld	bc, #0x0880
      001CBE 18 0B                 6925 	jr	00174$
      001CC0                       6926 00173$:
      001CC0 3E 80                 6927 	ld	a, #0x80
      001CC2 B9                    6928 	cp	a, c
      001CC3 3E 0B                 6929 	ld	a, #0x0b
      001CC5 98                    6930 	sbc	a, b
      001CC6 30 03                 6931 	jr	NC, 00175$
      001CC8 01 80 0B              6932 	ld	bc, #0x0b80
      001CCB                       6933 00175$:
      001CCB                       6934 00174$:
      001CCB 59                    6935 	ld	e,c
      001CCC 50                    6936 	ld	d,b
                                   6937 ;src/main.c:672: xOverflow = (playerX - limitedPlayerX);
      001CCD FAr97r00              6938 	ld	a, (#_playerX)
      001CD0 93                    6939 	sub	a, e
      001CD1 EArA1r00              6940 	ld	(#_xOverflow),a
      001CD4 FAr98r00              6941 	ld	a, (#_playerX + 1)
      001CD7 9A                    6942 	sbc	a, d
      001CD8 21rA2r00              6943 	ld	hl, #_xOverflow + 1
                                   6944 ;src/main.c:673: if (xOverflow >= 0) {
      001CDB 32                    6945 	ld	(hl-), a
      001CDC 6E                    6946 	ld	l, (hl)
                                   6947 ;	spillPairReg hl
                                   6948 ;	spillPairReg hl
      001CDD FArA2r00              6949 	ld	a, (_xOverflow + 1)
                                   6950 ;	spillPairReg hl
                                   6951 ;	spillPairReg hl
      001CE0 CB 7F                 6952 	bit	7,a
      001CE2 20 22                 6953 	jr	NZ, 00111$
                                   6954 ;src/main.c:674: xOverflow = xOverflow >> 5;
      001CE4 21rA2r00              6955 	ld	hl, #_xOverflow + 1
      001CE7 CB 2E                 6956 	sra	(hl)
      001CE9 2B                    6957 	dec	hl
      001CEA CB 1E                 6958 	rr	(hl)
      001CEC 23                    6959 	inc	hl
      001CED CB 2E                 6960 	sra	(hl)
      001CEF 2B                    6961 	dec	hl
      001CF0 CB 1E                 6962 	rr	(hl)
      001CF2 23                    6963 	inc	hl
      001CF3 CB 2E                 6964 	sra	(hl)
      001CF5 2B                    6965 	dec	hl
      001CF6 CB 1E                 6966 	rr	(hl)
      001CF8 23                    6967 	inc	hl
      001CF9 CB 2E                 6968 	sra	(hl)
      001CFB 2B                    6969 	dec	hl
      001CFC CB 1E                 6970 	rr	(hl)
      001CFE 23                    6971 	inc	hl
      001CFF CB 2E                 6972 	sra	(hl)
      001D01 2B                    6973 	dec	hl
      001D02 CB 1E                 6974 	rr	(hl)
      001D04 18 25                 6975 	jr	00112$
      001D06                       6976 00111$:
                                   6977 ;src/main.c:677: xOverflow = -((-xOverflow) >> 5);
      001D06 AF                    6978 	xor	a, a
      001D07 21rA1r00              6979 	ld	hl, #_xOverflow
      001D0A 96                    6980 	sub	a, (hl)
      001D0B 23                    6981 	inc	hl
      001D0C 5F                    6982 	ld	e, a
      001D0D 9F                    6983 	sbc	a, a
      001D0E 96                    6984 	sub	a, (hl)
      001D0F 2B                    6985 	dec	hl
      001D10 57                    6986 	ld	d, a
      001D11 CB 2A                 6987 	sra	d
      001D13 CB 1B                 6988 	rr	e
      001D15 CB 2A                 6989 	sra	d
      001D17 CB 1B                 6990 	rr	e
      001D19 CB 2A                 6991 	sra	d
      001D1B CB 1B                 6992 	rr	e
      001D1D CB 2A                 6993 	sra	d
      001D1F CB 1B                 6994 	rr	e
      001D21 CB 2A                 6995 	sra	d
      001D23 CB 1B                 6996 	rr	e
      001D25 AF                    6997 	xor	a, a
      001D26 93                    6998 	sub	a, e
      001D27 22                    6999 	ld	(hl+), a
      001D28 9F                    7000 	sbc	a, a
      001D29 92                    7001 	sub	a, d
      001D2A 77                    7002 	ld	(hl), a
      001D2B                       7003 00112$:
                                   7004 ;src/main.c:679: bgX += xOverflow;
      001D2B FAr9Dr00              7005 	ld	a, (#_bgX)
      001D2E 21rA1r00              7006 	ld	hl, #_xOverflow
      001D31 86                    7007 	add	a, (hl)
      001D32 21r9Dr00              7008 	ld	hl, #_bgX
      001D35 22                    7009 	ld	(hl+), a
      001D36 7E                    7010 	ld	a, (hl)
      001D37 21rA2r00              7011 	ld	hl, #_xOverflow + 1
      001D3A 8E                    7012 	adc	a, (hl)
      001D3B EAr9Er00              7013 	ld	(#_bgX + 1),a
                                   7014 ;src/main.c:680: playerX = limitedPlayerX;
      001D3E 21r97r00              7015 	ld	hl, #_playerX
      001D41 79                    7016 	ld	a, c
      001D42 22                    7017 	ld	(hl+), a
                                   7018 ;src/main.c:681: playerDrawX=playerX >> 5;
      001D43 78                    7019 	ld	a, b
      001D44 32                    7020 	ld	(hl-), a
      001D45 2A                    7021 	ld	a, (hl+)
      001D46 4F                    7022 	ld	c, a
      001D47 46                    7023 	ld	b, (hl)
      001D48 CB 38                 7024 	srl	b
      001D4A CB 19                 7025 	rr	c
      001D4C CB 38                 7026 	srl	b
      001D4E CB 19                 7027 	rr	c
      001D50 CB 38                 7028 	srl	b
      001D52 CB 19                 7029 	rr	c
      001D54 CB 38                 7030 	srl	b
      001D56 CB 19                 7031 	rr	c
      001D58 CB 38                 7032 	srl	b
      001D5A CB 19                 7033 	rr	c
      001D5C 21r9Br00              7034 	ld	hl, #_playerDrawX
      001D5F 71                    7035 	ld	(hl), c
      001D60 18 05                 7036 	jr	00115$
      001D62                       7037 00114$:
                                   7038 ;src/main.c:689: xSpeed = 0;
      001D62 21r95r00              7039 	ld	hl, #_xSpeed
      001D65 36 00                 7040 	ld	(hl), #0x00
      001D67                       7041 00115$:
                                   7042 ;src/main.c:697: uint8_t yCollisionPoint = playerDrawY; 
      001D67 FAr9Cr00              7043 	ld	a, (#_playerDrawY)
      001D6A F8 07                 7044 	ldhl	sp,	#7
      001D6C 77                    7045 	ld	(hl), a
                                   7046 ;src/main.c:700: yCollisionPoint = playerDrawY +8; //bottom edge
      001D6D 21r9Cr00              7047 	ld	hl, #_playerDrawY
      001D70 4E                    7048 	ld	c, (hl)
                                   7049 ;src/main.c:699: if (ySpeed > 0) {
      001D71 21r96r00              7050 	ld	hl, #_ySpeed
      001D74 5E                    7051 	ld	e, (hl)
      001D75 AF                    7052 	xor	a, a
      001D76 57                    7053 	ld	d, a
      001D77 96                    7054 	sub	a, (hl)
      001D78 CB 7B                 7055 	bit	7, e
      001D7A 28 07                 7056 	jr	Z, 00350$
      001D7C CB 7A                 7057 	bit	7, d
      001D7E 20 08                 7058 	jr	NZ, 00351$
      001D80 BF                    7059 	cp	a, a
      001D81 18 05                 7060 	jr	00351$
      001D83                       7061 00350$:
      001D83 CB 7A                 7062 	bit	7, d
      001D85 28 01                 7063 	jr	Z, 00351$
      001D87 37                    7064 	scf
      001D88                       7065 00351$:
      001D88 30 06                 7066 	jr	NC, 00117$
                                   7067 ;src/main.c:700: yCollisionPoint = playerDrawY +8; //bottom edge
      001D8A 79                    7068 	ld	a, c
      001D8B C6 08                 7069 	add	a, #0x08
      001D8D F8 07                 7070 	ldhl	sp,	#7
      001D8F 77                    7071 	ld	(hl), a
      001D90                       7072 00117$:
                                   7073 ;src/main.c:702: if (ySpeed < 0) {
      001D90 FAr96r00              7074 	ld	a, (#_ySpeed)
      001D93 CB 7F                 7075 	bit	7, a
      001D95 28 06                 7076 	jr	Z, 00119$
                                   7077 ;src/main.c:703: yCollisionPoint = playerDrawY -8; //top edge, 
      001D97 79                    7078 	ld	a, c
      001D98 C6 F8                 7079 	add	a, #0xf8
      001D9A F8 07                 7080 	ldhl	sp,	#7
      001D9C 77                    7081 	ld	(hl), a
      001D9D                       7082 00119$:
                                   7083 ;src/main.c:707: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001D9D FAr9Br00              7084 	ld	a, (#_playerDrawX)
      001DA0 0E 00                 7085 	ld	c, #0x00
      001DA2 F8 03                 7086 	ldhl	sp,	#3
      001DA4 22                    7087 	ld	(hl+), a
      001DA5 79                    7088 	ld	a, c
      001DA6 32                    7089 	ld	(hl-), a
      001DA7 2A                    7090 	ld	a, (hl+)
      001DA8 5F                    7091 	ld	e, a
      001DA9 56                    7092 	ld	d, (hl)
      001DAA 21r9Dr00              7093 	ld	hl, #_bgX
      001DAD 2A                    7094 	ld	a,	(hl+)
      001DAE 66                    7095 	ld	h, (hl)
      001DAF 6F                    7096 	ld	l, a
      001DB0 19                    7097 	add	hl, de
      001DB1 E5                    7098 	push	hl
      001DB2 7D                    7099 	ld	a, l
      001DB3 F8 07                 7100 	ldhl	sp,	#7
      001DB5 77                    7101 	ld	(hl), a
      001DB6 E1                    7102 	pop	hl
      001DB7 7C                    7103 	ld	a, h
      001DB8 F8 06                 7104 	ldhl	sp,	#6
      001DBA 77                    7105 	ld	(hl), a
      001DBB CB 2E                 7106 	sra	(hl)
      001DBD 2B                    7107 	dec	hl
      001DBE CB 1E                 7108 	rr	(hl)
      001DC0 23                    7109 	inc	hl
      001DC1 CB 2E                 7110 	sra	(hl)
      001DC3 2B                    7111 	dec	hl
      001DC4 CB 1E                 7112 	rr	(hl)
      001DC6 23                    7113 	inc	hl
      001DC7 CB 2E                 7114 	sra	(hl)
      001DC9 2B                    7115 	dec	hl
      001DCA CB 1E                 7116 	rr	(hl)
      001DCC 11 20 00              7117 	ld	de, #0x0020
      001DCF D5                    7118 	push	de
      001DD0 2A                    7119 	ld	a, (hl+)
      001DD1 5F                    7120 	ld	e, a
      001DD2 56                    7121 	ld	d, (hl)
      001DD3 D5                    7122 	push	de
      001DD4 CDr00r00              7123 	call	__modsint
      001DD7 E8 04                 7124 	add	sp, #4
      001DD9 F8 05                 7125 	ldhl	sp,	#5
      001DDB 7B                    7126 	ld	a, e
      001DDC 22                    7127 	ld	(hl+), a
      001DDD 72                    7128 	ld	(hl), d
      001DDE F8 05                 7129 	ldhl	sp,	#5
      001DE0 7E                    7130 	ld	a, (hl)
      001DE1 F8 00                 7131 	ldhl	sp,	#0
      001DE3 77                    7132 	ld	(hl), a
      001DE4 F8 06                 7133 	ldhl	sp,	#6
      001DE6 7E                    7134 	ld	a, (hl)
      001DE7 F8 01                 7135 	ldhl	sp,	#1
      001DE9 77                    7136 	ld	(hl), a
                                   7137 ;src/main.c:710: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001DEA F8 07                 7138 	ldhl	sp,	#7
      001DEC 3A                    7139 	ld	a, (hl-)
      001DED 22                    7140 	ld	(hl+), a
      001DEE AF                    7141 	xor	a, a
      001DEF 32                    7142 	ld	(hl-), a
      001DF0 3A                    7143 	ld	a, (hl-)
      001DF1 2B                    7144 	dec	hl
      001DF2 77                    7145 	ld	(hl), a
      001DF3 F8 07                 7146 	ldhl	sp,	#7
      001DF5 3A                    7147 	ld	a, (hl-)
      001DF6 2B                    7148 	dec	hl
      001DF7 32                    7149 	ld	(hl-), a
      001DF8 2A                    7150 	ld	a, (hl+)
      001DF9 5F                    7151 	ld	e, a
      001DFA 56                    7152 	ld	d, (hl)
      001DFB 21r9Fr00              7153 	ld	hl, #_bgY
      001DFE 2A                    7154 	ld	a,	(hl+)
      001DFF 66                    7155 	ld	h, (hl)
      001E00 6F                    7156 	ld	l, a
      001E01 19                    7157 	add	hl, de
      001E02 E5                    7158 	push	hl
      001E03 7D                    7159 	ld	a, l
      001E04 F8 08                 7160 	ldhl	sp,	#8
      001E06 77                    7161 	ld	(hl), a
      001E07 E1                    7162 	pop	hl
      001E08 7C                    7163 	ld	a, h
      001E09 F8 07                 7164 	ldhl	sp,	#7
      001E0B 77                    7165 	ld	(hl), a
      001E0C CB 2E                 7166 	sra	(hl)
      001E0E 2B                    7167 	dec	hl
      001E0F CB 1E                 7168 	rr	(hl)
      001E11 23                    7169 	inc	hl
      001E12 CB 2E                 7170 	sra	(hl)
      001E14 2B                    7171 	dec	hl
      001E15 CB 1E                 7172 	rr	(hl)
      001E17 23                    7173 	inc	hl
      001E18 CB 2E                 7174 	sra	(hl)
      001E1A 2B                    7175 	dec	hl
      001E1B CB 1E                 7176 	rr	(hl)
      001E1D 11 20 00              7177 	ld	de, #0x0020
      001E20 D5                    7178 	push	de
      001E21 2A                    7179 	ld	a, (hl+)
      001E22 5F                    7180 	ld	e, a
      001E23 56                    7181 	ld	d, (hl)
      001E24 D5                    7182 	push	de
      001E25 CDr00r00              7183 	call	__modsint
      001E28 E8 04                 7184 	add	sp, #4
      001E2A F8 06                 7185 	ldhl	sp,	#6
      001E2C 7B                    7186 	ld	a, e
      001E2D 22                    7187 	ld	(hl+), a
      001E2E 72                    7188 	ld	(hl), d
      001E2F F8 06                 7189 	ldhl	sp,	#6
      001E31 2A                    7190 	ld	a, (hl+)
      001E32 77                    7191 	ld	(hl), a
                                   7192 ;src/main.c:713: ind = 32*bgindY + bgindX;
      001E33 3A                    7193 	ld	a, (hl-)
      001E34 22                    7194 	ld	(hl+), a
      001E35 36 00                 7195 	ld	(hl), #0x00
      001E37 3E 05                 7196 	ld	a, #0x05
      001E39                       7197 00352$:
      001E39 F8 06                 7198 	ldhl	sp,	#6
      001E3B CB 26                 7199 	sla	(hl)
      001E3D 23                    7200 	inc	hl
      001E3E CB 16                 7201 	rl	(hl)
      001E40 3D                    7202 	dec	a
      001E41 20 F6                 7203 	jr	NZ, 00352$
      001E43 2B                    7204 	dec	hl
      001E44 3A                    7205 	ld	a, (hl-)
      001E45 2B                    7206 	dec	hl
      001E46 77                    7207 	ld	(hl), a
      001E47 F8 07                 7208 	ldhl	sp,	#7
      001E49 3A                    7209 	ld	a, (hl-)
      001E4A 2B                    7210 	dec	hl
      001E4B 77                    7211 	ld	(hl), a
      001E4C D1                    7212 	pop	de
      001E4D D5                    7213 	push	de
      001E4E 3A                    7214 	ld	a, (hl-)
      001E4F 6E                    7215 	ld	l, (hl)
      001E50 67                    7216 	ld	h, a
      001E51 19                    7217 	add	hl, de
      001E52 E5                    7218 	push	hl
      001E53 7D                    7219 	ld	a, l
      001E54 F8 08                 7220 	ldhl	sp,	#8
      001E56 77                    7221 	ld	(hl), a
      001E57 E1                    7222 	pop	hl
      001E58 7C                    7223 	ld	a, h
      001E59 F8 07                 7224 	ldhl	sp,	#7
      001E5B 77                    7225 	ld	(hl), a
                                   7226 ;src/main.c:714: result = 1;
      001E5C F8 03                 7227 	ldhl	sp,	#3
      001E5E 36 01                 7228 	ld	(hl), #0x01
                                   7229 ;src/main.c:715: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001E60 F8 06                 7230 	ldhl	sp,#6
      001E62 2A                    7231 	ld	a, (hl+)
      001E63 5F                    7232 	ld	e, a
      001E64 56                    7233 	ld	d, (hl)
      001E65 21r87r00              7234 	ld	hl, #_background1
      001E68 19                    7235 	add	hl, de
      001E69 4D                    7236 	ld	c, l
      001E6A 44                    7237 	ld	b, h
      001E6B 0A                    7238 	ld	a, (bc)
      001E6C F8 04                 7239 	ldhl	sp,	#4
      001E6E 77                    7240 	ld	(hl), a
      001E6F F8 07                 7241 	ldhl	sp,	#7
      001E71 36 00                 7242 	ld	(hl), #0x00
      001E73                       7243 00161$:
      001E73 F8 07                 7244 	ldhl	sp,	#7
      001E75 7E                    7245 	ld	a, (hl)
      001E76 F8 02                 7246 	ldhl	sp,	#2
      001E78 96                    7247 	sub	a, (hl)
      001E79 30 29                 7248 	jr	NC, 00122$
                                   7249 ;src/main.c:716: if (background1[ind] == BLANK[j] ) {
      001E7B 11r8Ar0B              7250 	ld	de, #_BLANK
      001E7E F8 07                 7251 	ldhl	sp,	#7
      001E80 6E                    7252 	ld	l, (hl)
      001E81 26 00                 7253 	ld	h, #0x00
      001E83 19                    7254 	add	hl, de
      001E84 E5                    7255 	push	hl
      001E85 7D                    7256 	ld	a, l
      001E86 F8 07                 7257 	ldhl	sp,	#7
      001E88 77                    7258 	ld	(hl), a
      001E89 E1                    7259 	pop	hl
      001E8A 7C                    7260 	ld	a, h
      001E8B F8 06                 7261 	ldhl	sp,	#6
      001E8D 32                    7262 	ld	(hl-), a
      001E8E 2A                    7263 	ld	a, (hl+)
      001E8F 5F                    7264 	ld	e, a
      001E90 3A                    7265 	ld	a, (hl-)
      001E91 2B                    7266 	dec	hl
      001E92 57                    7267 	ld	d, a
      001E93 1A                    7268 	ld	a, (de)
      001E94 4F                    7269 	ld	c, a
      001E95 7E                    7270 	ld	a, (hl)
      001E96 91                    7271 	sub	a, c
      001E97 20 06                 7272 	jr	NZ, 00162$
                                   7273 ;src/main.c:717: result = 0;
      001E99 F8 03                 7274 	ldhl	sp,	#3
      001E9B 36 00                 7275 	ld	(hl), #0x00
                                   7276 ;src/main.c:718: break;
      001E9D 18 05                 7277 	jr	00122$
      001E9F                       7278 00162$:
                                   7279 ;src/main.c:715: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001E9F F8 07                 7280 	ldhl	sp,	#7
      001EA1 34                    7281 	inc	(hl)
      001EA2 18 CF                 7282 	jr	00161$
      001EA4                       7283 00122$:
                                   7284 ;src/main.c:722: if (result == 0) {
      001EA4 F8 03                 7285 	ldhl	sp,	#3
      001EA6 7E                    7286 	ld	a, (hl)
      001EA7 B7                    7287 	or	a, a
      001EA8 C2r72r1F              7288 	jp	NZ, 00127$
                                   7289 ;src/main.c:723: playerY += ySpeed;
      001EAB FAr96r00              7290 	ld	a, (#_ySpeed)
      001EAE 4F                    7291 	ld	c, a
      001EAF 07                    7292 	rlca
      001EB0 9F                    7293 	sbc	a, a
      001EB1 21r99r00              7294 	ld	hl, #_playerY
      001EB4 5E                    7295 	ld	e, (hl)
      001EB5 23                    7296 	inc	hl
      001EB6 56                    7297 	ld	d, (hl)
      001EB7 2B                    7298 	dec	hl
      001EB8 47                    7299 	ld	b, a
      001EB9 79                    7300 	ld	a, c
      001EBA 83                    7301 	add	a, e
      001EBB 4F                    7302 	ld	c, a
      001EBC 78                    7303 	ld	a, b
      001EBD 8A                    7304 	adc	a, d
      001EBE 47                    7305 	ld	b, a
      001EBF 79                    7306 	ld	a, c
      001EC0 22                    7307 	ld	(hl+), a
                                   7308 ;src/main.c:725: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001EC1 78                    7309 	ld	a, b
      001EC2 32                    7310 	ld	(hl-), a
      001EC3 2A                    7311 	ld	a, (hl+)
      001EC4 5F                    7312 	ld	e, a
      001EC5 56                    7313 	ld	d, (hl)
      001EC6 7A                    7314 	ld	a, d
      001EC7 D6 06                 7315 	sub	a, #0x06
      001EC9 30 05                 7316 	jr	NC, 00177$
      001ECB 11 00 06              7317 	ld	de, #0x0600
      001ECE 18 0B                 7318 	jr	00178$
      001ED0                       7319 00177$:
      001ED0 3E C0                 7320 	ld	a, #0xc0
      001ED2 BB                    7321 	cp	a, e
      001ED3 3E 09                 7322 	ld	a, #0x09
      001ED5 9A                    7323 	sbc	a, d
      001ED6 30 03                 7324 	jr	NC, 00179$
      001ED8 11 C0 09              7325 	ld	de, #0x09c0
      001EDB                       7326 00179$:
      001EDB                       7327 00178$:
      001EDB 4B                    7328 	ld	c, e
      001EDC 42                    7329 	ld	b, d
                                   7330 ;src/main.c:727: yOverflow = (playerY - limitedPlayerY);
      001EDD FAr99r00              7331 	ld	a, (#_playerY)
      001EE0 93                    7332 	sub	a, e
      001EE1 EArA3r00              7333 	ld	(#_yOverflow),a
      001EE4 FAr9Ar00              7334 	ld	a, (#_playerY + 1)
      001EE7 9A                    7335 	sbc	a, d
      001EE8 21rA4r00              7336 	ld	hl, #_yOverflow + 1
                                   7337 ;src/main.c:728: if (yOverflow >= 0) {
      001EEB 32                    7338 	ld	(hl-), a
      001EEC 6E                    7339 	ld	l, (hl)
                                   7340 ;	spillPairReg hl
                                   7341 ;	spillPairReg hl
      001EED FArA4r00              7342 	ld	a, (_yOverflow + 1)
                                   7343 ;	spillPairReg hl
                                   7344 ;	spillPairReg hl
      001EF0 CB 7F                 7345 	bit	7,a
      001EF2 20 22                 7346 	jr	NZ, 00124$
                                   7347 ;src/main.c:729: yOverflow = yOverflow >> 5;
      001EF4 21rA4r00              7348 	ld	hl, #_yOverflow + 1
      001EF7 CB 2E                 7349 	sra	(hl)
      001EF9 2B                    7350 	dec	hl
      001EFA CB 1E                 7351 	rr	(hl)
      001EFC 23                    7352 	inc	hl
      001EFD CB 2E                 7353 	sra	(hl)
      001EFF 2B                    7354 	dec	hl
      001F00 CB 1E                 7355 	rr	(hl)
      001F02 23                    7356 	inc	hl
      001F03 CB 2E                 7357 	sra	(hl)
      001F05 2B                    7358 	dec	hl
      001F06 CB 1E                 7359 	rr	(hl)
      001F08 23                    7360 	inc	hl
      001F09 CB 2E                 7361 	sra	(hl)
      001F0B 2B                    7362 	dec	hl
      001F0C CB 1E                 7363 	rr	(hl)
      001F0E 23                    7364 	inc	hl
      001F0F CB 2E                 7365 	sra	(hl)
      001F11 2B                    7366 	dec	hl
      001F12 CB 1E                 7367 	rr	(hl)
      001F14 18 25                 7368 	jr	00125$
      001F16                       7369 00124$:
                                   7370 ;src/main.c:732: yOverflow = -((-yOverflow) >> 5);
      001F16 AF                    7371 	xor	a, a
      001F17 21rA3r00              7372 	ld	hl, #_yOverflow
      001F1A 96                    7373 	sub	a, (hl)
      001F1B 23                    7374 	inc	hl
      001F1C 5F                    7375 	ld	e, a
      001F1D 9F                    7376 	sbc	a, a
      001F1E 96                    7377 	sub	a, (hl)
      001F1F 2B                    7378 	dec	hl
      001F20 57                    7379 	ld	d, a
      001F21 CB 2A                 7380 	sra	d
      001F23 CB 1B                 7381 	rr	e
      001F25 CB 2A                 7382 	sra	d
      001F27 CB 1B                 7383 	rr	e
      001F29 CB 2A                 7384 	sra	d
      001F2B CB 1B                 7385 	rr	e
      001F2D CB 2A                 7386 	sra	d
      001F2F CB 1B                 7387 	rr	e
      001F31 CB 2A                 7388 	sra	d
      001F33 CB 1B                 7389 	rr	e
      001F35 AF                    7390 	xor	a, a
      001F36 93                    7391 	sub	a, e
      001F37 22                    7392 	ld	(hl+), a
      001F38 9F                    7393 	sbc	a, a
      001F39 92                    7394 	sub	a, d
      001F3A 77                    7395 	ld	(hl), a
      001F3B                       7396 00125$:
                                   7397 ;src/main.c:734: bgY += yOverflow;
      001F3B FAr9Fr00              7398 	ld	a, (#_bgY)
      001F3E 21rA3r00              7399 	ld	hl, #_yOverflow
      001F41 86                    7400 	add	a, (hl)
      001F42 21r9Fr00              7401 	ld	hl, #_bgY
      001F45 22                    7402 	ld	(hl+), a
      001F46 7E                    7403 	ld	a, (hl)
      001F47 21rA4r00              7404 	ld	hl, #_yOverflow + 1
      001F4A 8E                    7405 	adc	a, (hl)
      001F4B EArA0r00              7406 	ld	(#_bgY + 1),a
                                   7407 ;src/main.c:735: playerY = limitedPlayerY;
      001F4E 21r99r00              7408 	ld	hl, #_playerY
      001F51 79                    7409 	ld	a, c
      001F52 22                    7410 	ld	(hl+), a
                                   7411 ;src/main.c:736: playerDrawY=playerY >> 5;
      001F53 78                    7412 	ld	a, b
      001F54 32                    7413 	ld	(hl-), a
      001F55 2A                    7414 	ld	a, (hl+)
      001F56 4F                    7415 	ld	c, a
      001F57 46                    7416 	ld	b, (hl)
      001F58 CB 38                 7417 	srl	b
      001F5A CB 19                 7418 	rr	c
      001F5C CB 38                 7419 	srl	b
      001F5E CB 19                 7420 	rr	c
      001F60 CB 38                 7421 	srl	b
      001F62 CB 19                 7422 	rr	c
      001F64 CB 38                 7423 	srl	b
      001F66 CB 19                 7424 	rr	c
      001F68 CB 38                 7425 	srl	b
      001F6A CB 19                 7426 	rr	c
      001F6C 21r9Cr00              7427 	ld	hl, #_playerDrawY
      001F6F 71                    7428 	ld	(hl), c
      001F70 18 05                 7429 	jr	00128$
      001F72                       7430 00127$:
                                   7431 ;src/main.c:741: ySpeed = 0;
      001F72 21r96r00              7432 	ld	hl, #_ySpeed
      001F75 36 00                 7433 	ld	(hl), #0x00
      001F77                       7434 00128$:
                                   7435 ;src/main.c:641: uint8_t xCollisionPoint = playerDrawX; 
      001F77 FAr9Br00              7436 	ld	a, (#_playerDrawX)
      001F7A F8 07                 7437 	ldhl	sp,	#7
      001F7C 77                    7438 	ld	(hl), a
                                   7439 ;src/main.c:700: yCollisionPoint = playerDrawY +8; //bottom edge
      001F7D FAr9Cr00              7440 	ld	a, (#_playerDrawY)
      001F80 C6 08                 7441 	add	a, #0x08
      001F82 F8 06                 7442 	ldhl	sp,	#6
      001F84 77                    7443 	ld	(hl), a
                                   7444 ;src/main.c:744: if (xDir >= 0) {
      001F85 FAr93r00              7445 	ld	a, (#_xDir)
      001F88 CB 7F                 7446 	bit	7, a
      001F8A 20 2A                 7447 	jr	NZ, 00130$
                                   7448 ;src/main.c:745: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   7449 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7450 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001F8C 11r00r00              7451 	ld	de, #_shadow_OAM
      001F8F F8 06                 7452 	ldhl	sp,	#6
      001F91 2A                    7453 	ld	a, (hl+)
      001F92 12                    7454 	ld	(de), a
      001F93 11r01r00              7455 	ld	de, #(_shadow_OAM + 1)
      001F96 7E                    7456 	ld	a, (hl)
      001F97 12                    7457 	ld	(de), a
                                   7458 ;src/main.c:747: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001F98 FAr9Cr00              7459 	ld	a, (#_playerDrawY)
      001F9B F8 07                 7460 	ldhl	sp,	#7
      001F9D 77                    7461 	ld	(hl), a
      001F9E 3A                    7462 	ld	a, (hl-)
      001F9F C6 08                 7463 	add	a, #0x08
      001FA1 77                    7464 	ld	(hl), a
      001FA2 FAr9Br00              7465 	ld	a, (#_playerDrawX)
      001FA5 C6 08                 7466 	add	a, #0x08
      001FA7 F8 07                 7467 	ldhl	sp,	#7
                                   7468 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7469 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FA9 32                    7470 	ld	(hl-), a
      001FAA 11r04r00              7471 	ld	de, #(_shadow_OAM + 4)
      001FAD 2A                    7472 	ld	a, (hl+)
      001FAE 12                    7473 	ld	(de), a
      001FAF 11r05r00              7474 	ld	de, #(_shadow_OAM + 5)
      001FB2 7E                    7475 	ld	a, (hl)
      001FB3 12                    7476 	ld	(de), a
                                   7477 ;src/main.c:747: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001FB4 18 28                 7478 	jr	00131$
      001FB6                       7479 00130$:
                                   7480 ;src/main.c:750: move_sprite(1, playerDrawX , playerDrawY +8);
                                   7481 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001FB6 01r04r00              7482 	ld	bc, #(_shadow_OAM + 4)
                                   7483 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FB9 F8 06                 7484 	ldhl	sp,	#6
      001FBB 2A                    7485 	ld	a, (hl+)
      001FBC 02                    7486 	ld	(bc), a
      001FBD 03                    7487 	inc	bc
      001FBE 7E                    7488 	ld	a, (hl)
      001FBF 02                    7489 	ld	(bc), a
                                   7490 ;src/main.c:752: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001FC0 FAr9Cr00              7491 	ld	a, (#_playerDrawY)
      001FC3 F8 07                 7492 	ldhl	sp,	#7
      001FC5 77                    7493 	ld	(hl), a
      001FC6 3A                    7494 	ld	a, (hl-)
      001FC7 C6 08                 7495 	add	a, #0x08
      001FC9 77                    7496 	ld	(hl), a
      001FCA FAr9Br00              7497 	ld	a, (#_playerDrawX)
      001FCD F8 07                 7498 	ldhl	sp,	#7
      001FCF 77                    7499 	ld	(hl), a
      001FD0 7E                    7500 	ld	a, (hl)
      001FD1 C6 08                 7501 	add	a, #0x08
                                   7502 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7503 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FD3 32                    7504 	ld	(hl-), a
      001FD4 11r00r00              7505 	ld	de, #_shadow_OAM
      001FD7 2A                    7506 	ld	a, (hl+)
      001FD8 12                    7507 	ld	(de), a
      001FD9 11r01r00              7508 	ld	de, #(_shadow_OAM + 1)
      001FDC 7E                    7509 	ld	a, (hl)
      001FDD 12                    7510 	ld	(de), a
                                   7511 ;src/main.c:752: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001FDE                       7512 00131$:
                                   7513 ;src/main.c:757: if (bgX >= 256) {
      001FDE 21r9Dr00              7514 	ld	hl, #_bgX
      001FE1 2A                    7515 	ld	a, (hl+)
      001FE2 4F                    7516 	ld	c, a
      001FE3 46                    7517 	ld	b, (hl)
      001FE4 78                    7518 	ld	a, b
      001FE5 EE 80                 7519 	xor	a, #0x80
      001FE7 D6 81                 7520 	sub	a, #0x81
      001FE9 38 0F                 7521 	jr	C, 00133$
                                   7522 ;src/main.c:758: bgX = bgX % 256;
      001FEB AF                    7523 	xor	a, a
      001FEC 3C                    7524 	inc	a
      001FED F5                    7525 	push	af
      001FEE C5                    7526 	push	bc
      001FEF CDr00r00              7527 	call	__modsint
      001FF2 E8 04                 7528 	add	sp, #4
      001FF4 21r9Dr00              7529 	ld	hl, #_bgX
      001FF7 7B                    7530 	ld	a, e
      001FF8 22                    7531 	ld	(hl+), a
      001FF9 72                    7532 	ld	(hl), d
      001FFA                       7533 00133$:
                                   7534 ;src/main.c:760: if (bgX < 0) {
      001FFA 21r9Dr00              7535 	ld	hl, #_bgX
      001FFD 2A                    7536 	ld	a, (hl+)
      001FFE 4F                    7537 	ld	c, a
      001FFF 46                    7538 	ld	b, (hl)
      002000 CB 78                 7539 	bit	7, b
      002002 28 15                 7540 	jr	Z, 00135$
                                   7541 ;src/main.c:761: bgX = 255 - (bgX % 256);
      002004 AF                    7542 	xor	a, a
      002005 3C                    7543 	inc	a
      002006 F5                    7544 	push	af
      002007 C5                    7545 	push	bc
      002008 CDr00r00              7546 	call	__modsint
      00200B E8 04                 7547 	add	sp, #4
      00200D 3E FF                 7548 	ld	a, #0xff
      00200F 93                    7549 	sub	a, e
      002010 4F                    7550 	ld	c, a
      002011 9F                    7551 	sbc	a, a
      002012 92                    7552 	sub	a, d
      002013 21r9Dr00              7553 	ld	hl, #_bgX
      002016 71                    7554 	ld	(hl), c
      002017 23                    7555 	inc	hl
      002018 77                    7556 	ld	(hl), a
      002019                       7557 00135$:
                                   7558 ;src/main.c:763: if (bgY >= 256) {
      002019 21r9Fr00              7559 	ld	hl, #_bgY
      00201C 2A                    7560 	ld	a, (hl+)
      00201D 4F                    7561 	ld	c, a
      00201E 46                    7562 	ld	b, (hl)
      00201F 78                    7563 	ld	a, b
      002020 EE 80                 7564 	xor	a, #0x80
      002022 D6 81                 7565 	sub	a, #0x81
      002024 38 0F                 7566 	jr	C, 00137$
                                   7567 ;src/main.c:764: bgY = bgY % 256;
      002026 AF                    7568 	xor	a, a
      002027 3C                    7569 	inc	a
      002028 F5                    7570 	push	af
      002029 C5                    7571 	push	bc
      00202A CDr00r00              7572 	call	__modsint
      00202D E8 04                 7573 	add	sp, #4
      00202F 21r9Fr00              7574 	ld	hl, #_bgY
      002032 7B                    7575 	ld	a, e
      002033 22                    7576 	ld	(hl+), a
      002034 72                    7577 	ld	(hl), d
      002035                       7578 00137$:
                                   7579 ;src/main.c:766: if (bgY < 0) {
      002035 21r9Fr00              7580 	ld	hl, #_bgY
      002038 2A                    7581 	ld	a, (hl+)
      002039 4F                    7582 	ld	c, a
      00203A 46                    7583 	ld	b, (hl)
      00203B CB 78                 7584 	bit	7, b
      00203D 28 15                 7585 	jr	Z, 00139$
                                   7586 ;src/main.c:767: bgY = 255 - (bgY % 256);
      00203F AF                    7587 	xor	a, a
      002040 3C                    7588 	inc	a
      002041 F5                    7589 	push	af
      002042 C5                    7590 	push	bc
      002043 CDr00r00              7591 	call	__modsint
      002046 E8 04                 7592 	add	sp, #4
      002048 3E FF                 7593 	ld	a, #0xff
      00204A 93                    7594 	sub	a, e
      00204B 4F                    7595 	ld	c, a
      00204C 9F                    7596 	sbc	a, a
      00204D 92                    7597 	sub	a, d
      00204E 21r9Fr00              7598 	ld	hl, #_bgY
      002051 71                    7599 	ld	(hl), c
      002052 23                    7600 	inc	hl
      002053 77                    7601 	ld	(hl), a
      002054                       7602 00139$:
                                   7603 ;src/main.c:770: move_bkg(bgX, bgY);
      002054 21r9Fr00              7604 	ld	hl, #_bgY
      002057 4E                    7605 	ld	c, (hl)
      002058 FAr9Dr00              7606 	ld	a, (#_bgX)
      00205B E0r00                 7607 	ldh	(_SCX_REG + 0), a
                                   7608 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00205D 79                    7609 	ld	a, c
      00205E E0r00                 7610 	ldh	(_SCY_REG + 0), a
                                   7611 ;src/main.c:773: if (ySpeed > 0) ySpeed--;
      002060 21r96r00              7612 	ld	hl, #_ySpeed
      002063 5E                    7613 	ld	e, (hl)
      002064 AF                    7614 	xor	a, a
      002065 57                    7615 	ld	d, a
      002066 96                    7616 	sub	a, (hl)
      002067 CB 7B                 7617 	bit	7, e
      002069 28 07                 7618 	jr	Z, 00355$
      00206B CB 7A                 7619 	bit	7, d
      00206D 20 08                 7620 	jr	NZ, 00356$
      00206F BF                    7621 	cp	a, a
      002070 18 05                 7622 	jr	00356$
      002072                       7623 00355$:
      002072 CB 7A                 7624 	bit	7, d
      002074 28 01                 7625 	jr	Z, 00356$
      002076 37                    7626 	scf
      002077                       7627 00356$:
      002077 30 04                 7628 	jr	NC, 00141$
      002079 21r96r00              7629 	ld	hl, #_ySpeed
      00207C 35                    7630 	dec	(hl)
      00207D                       7631 00141$:
                                   7632 ;src/main.c:774: if (ySpeed < 0) ySpeed++;
      00207D 21r96r00              7633 	ld	hl, #_ySpeed
      002080 CB 7E                 7634 	bit	7, (hl)
      002082 28 01                 7635 	jr	Z, 00143$
      002084 34                    7636 	inc	(hl)
      002085                       7637 00143$:
                                   7638 ;src/main.c:775: if (xSpeed > 0) xSpeed--;
      002085 21r95r00              7639 	ld	hl, #_xSpeed
      002088 5E                    7640 	ld	e, (hl)
      002089 AF                    7641 	xor	a, a
      00208A 57                    7642 	ld	d, a
      00208B 96                    7643 	sub	a, (hl)
      00208C CB 7B                 7644 	bit	7, e
      00208E 28 07                 7645 	jr	Z, 00357$
      002090 CB 7A                 7646 	bit	7, d
      002092 20 08                 7647 	jr	NZ, 00358$
      002094 BF                    7648 	cp	a, a
      002095 18 05                 7649 	jr	00358$
      002097                       7650 00357$:
      002097 CB 7A                 7651 	bit	7, d
      002099 28 01                 7652 	jr	Z, 00358$
      00209B 37                    7653 	scf
      00209C                       7654 00358$:
      00209C 30 04                 7655 	jr	NC, 00145$
      00209E 21r95r00              7656 	ld	hl, #_xSpeed
      0020A1 35                    7657 	dec	(hl)
      0020A2                       7658 00145$:
                                   7659 ;src/main.c:776: if (xSpeed < 0) xSpeed++;
      0020A2 21r95r00              7660 	ld	hl, #_xSpeed
      0020A5 CB 7E                 7661 	bit	7, (hl)
      0020A7 28 01                 7662 	jr	Z, 00163$
      0020A9 34                    7663 	inc	(hl)
      0020AA                       7664 00163$:
                                   7665 ;src/main.c:780: }
      0020AA E8 08                 7666 	add	sp, #8
      0020AC C9                    7667 	ret
                                   7668 ;src/main.c:782: void takeDamage(int16_t amount) {
                                   7669 ;	---------------------------------
                                   7670 ; Function takeDamage
                                   7671 ; ---------------------------------
      0020AD                       7672 _takeDamage::
      0020AD 3B                    7673 	dec	sp
                                   7674 ;src/main.c:783: if (amount > shield) {
      0020AE FArF7r00              7675 	ld	a, (#_shield)
      0020B1 4F                    7676 	ld	c, a
      0020B2 07                    7677 	rlca
      0020B3 9F                    7678 	sbc	a, a
      0020B4 47                    7679 	ld	b, a
                                   7680 ;src/main.c:785: hull -= (amount - shield);
      0020B5 F8 03                 7681 	ldhl	sp,	#3
      0020B7 7E                    7682 	ld	a, (hl)
      0020B8 F8 00                 7683 	ldhl	sp,	#0
      0020BA 77                    7684 	ld	(hl), a
                                   7685 ;src/main.c:783: if (amount > shield) {
      0020BB F8 03                 7686 	ldhl	sp,	#3
      0020BD 79                    7687 	ld	a, c
      0020BE 96                    7688 	sub	a, (hl)
      0020BF 23                    7689 	inc	hl
      0020C0 78                    7690 	ld	a, b
      0020C1 9E                    7691 	sbc	a, (hl)
      0020C2 78                    7692 	ld	a, b
      0020C3 57                    7693 	ld	d, a
      0020C4 CB 7E                 7694 	bit	7, (hl)
      0020C6 28 07                 7695 	jr	Z, 00111$
      0020C8 CB 7A                 7696 	bit	7, d
      0020CA 20 08                 7697 	jr	NZ, 00112$
      0020CC BF                    7698 	cp	a, a
      0020CD 18 05                 7699 	jr	00112$
      0020CF                       7700 00111$:
      0020CF CB 7A                 7701 	bit	7, d
      0020D1 28 01                 7702 	jr	Z, 00112$
      0020D3 37                    7703 	scf
      0020D4                       7704 00112$:
      0020D4 30 10                 7705 	jr	NC, 00102$
                                   7706 ;src/main.c:784: shield = 0;
      0020D6 21rF7r00              7707 	ld	hl, #_shield
      0020D9 36 00                 7708 	ld	(hl), #0x00
                                   7709 ;src/main.c:785: hull -= (amount - shield);
      0020DB FArF6r00              7710 	ld	a, (#_hull)
      0020DE F8 00                 7711 	ldhl	sp,	#0
      0020E0 96                    7712 	sub	a, (hl)
      0020E1 EArF6r00              7713 	ld	(#_hull),a
      0020E4 18 09                 7714 	jr	00104$
      0020E6                       7715 00102$:
                                   7716 ;src/main.c:788: shield -= amount;
      0020E6 FArF7r00              7717 	ld	a, (#_shield)
      0020E9 F8 00                 7718 	ldhl	sp,	#0
      0020EB 96                    7719 	sub	a, (hl)
      0020EC EArF7r00              7720 	ld	(#_shield),a
      0020EF                       7721 00104$:
                                   7722 ;src/main.c:790: }
      0020EF 33                    7723 	inc	sp
      0020F0 C9                    7724 	ret
                                   7725 ;src/main.c:792: void spawnPickup(int16_t x, int16_t y) {
                                   7726 ;	---------------------------------
                                   7727 ; Function spawnPickup
                                   7728 ; ---------------------------------
      0020F1                       7729 _spawnPickup::
                                   7730 ;src/main.c:793: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      0020F1 CDr00r00              7731 	call	_rand
      0020F4 7B                    7732 	ld	a, e
      0020F5 E6 0F                 7733 	and	a, #0x0f
      0020F7 C0                    7734 	ret	NZ
                                   7735 ;src/main.c:794: if (spawn == 0) {
                                   7736 ;src/main.c:795: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      0020F8 CDr00r00              7737 	call	_rand
      0020FB 7B                    7738 	ld	a, e
      0020FC E6 03                 7739 	and	a, #0x03
                                   7740 ;src/main.c:796: if (type == 0) {
      0020FE 5F                    7741 	ld	e,a
      0020FF B7                    7742 	or	a, a
      002100 20 13                 7743 	jr	NZ, 00106$
                                   7744 ;src/main.c:797: pickup = health;
      002102 11 09 00              7745 	ld	de, #0x0009
      002105 D5                    7746 	push	de
      002106 11r1Ar07              7747 	ld	de, #_health
      002109 D5                    7748 	push	de
      00210A 11rFAr00              7749 	ld	de, #_pickup
      00210D D5                    7750 	push	de
      00210E CDr00r00              7751 	call	___memcpy
      002111 E8 06                 7752 	add	sp, #6
      002113 18 31                 7753 	jr	00107$
      002115                       7754 00106$:
                                   7755 ;src/main.c:799: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      002115 1D                    7756 	dec	e
      002116 20 1D                 7757 	jr	NZ, 00102$
      002118 21rA3r0B              7758 	ld	hl, #_MAXGUNLEVEL
      00211B 4E                    7759 	ld	c, (hl)
      00211C FArA6r00              7760 	ld	a, (#_gunLevel)
      00211F 91                    7761 	sub	a, c
      002120 30 13                 7762 	jr	NC, 00102$
                                   7763 ;src/main.c:800: pickup = upgrade;
      002122 11 09 00              7764 	ld	de, #0x0009
      002125 D5                    7765 	push	de
      002126 11r08r07              7766 	ld	de, #_upgrade
      002129 D5                    7767 	push	de
      00212A 11rFAr00              7768 	ld	de, #_pickup
      00212D D5                    7769 	push	de
      00212E CDr00r00              7770 	call	___memcpy
      002131 E8 06                 7771 	add	sp, #6
      002133 18 11                 7772 	jr	00107$
      002135                       7773 00102$:
                                   7774 ;src/main.c:803: pickup = ammo;
      002135 01r11r07              7775 	ld	bc, #_ammo
      002138 11rFAr00              7776 	ld	de, #_pickup
      00213B 21 09 00              7777 	ld	hl, #0x0009
      00213E E5                    7778 	push	hl
      00213F C5                    7779 	push	bc
      002140 D5                    7780 	push	de
      002141 CDr00r00              7781 	call	___memcpy
      002144 E8 06                 7782 	add	sp, #6
      002146                       7783 00107$:
                                   7784 ;src/main.c:805: pickup.active = 1;
      002146 21rFFr00              7785 	ld	hl, #(_pickup + 5)
      002149 36 01                 7786 	ld	(hl), #0x01
                                   7787 ;src/main.c:807: pickup.x = x;
      00214B 11rFBr00              7788 	ld	de, #(_pickup + 1)
      00214E F8 02                 7789 	ldhl	sp,	#2
      002150 2A                    7790 	ld	a, (hl+)
      002151 12                    7791 	ld	(de), a
      002152 13                    7792 	inc	de
                                   7793 ;src/main.c:808: pickup.y = y;
      002153 2A                    7794 	ld	a, (hl+)
      002154 12                    7795 	ld	(de), a
      002155 11rFDr00              7796 	ld	de, #(_pickup + 3)
      002158 2A                    7797 	ld	a, (hl+)
      002159 12                    7798 	ld	(de), a
      00215A 13                    7799 	inc	de
      00215B 7E                    7800 	ld	a, (hl)
      00215C 12                    7801 	ld	(de), a
                                   7802 ;src/main.c:810: set_sprite_tile(3, pickup.tile); //0x7f
      00215D 21r02r01              7803 	ld	hl, #(_pickup + 8)
      002160 4E                    7804 	ld	c, (hl)
                                   7805 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002161 21r0Er00              7806 	ld	hl, #(_shadow_OAM + 14)
      002164 71                    7807 	ld	(hl), c
                                   7808 ;src/main.c:810: set_sprite_tile(3, pickup.tile); //0x7f
                                   7809 ;src/main.c:816: }
      002165 C9                    7810 	ret
                                   7811 ;src/main.c:818: void killEnemy(uint8_t i) {
                                   7812 ;	---------------------------------
                                   7813 ; Function killEnemy
                                   7814 ; ---------------------------------
      002166                       7815 _killEnemy::
      002166 E8 FC                 7816 	add	sp, #-4
                                   7817 ;src/main.c:819: set_sprite_tile(10+(i<<1), 0x7f);
      002168 F8 06                 7818 	ldhl	sp,	#6
      00216A 7E                    7819 	ld	a, (hl)
      00216B 87                    7820 	add	a, a
      00216C 4F                    7821 	ld	c, a
      00216D C6 0A                 7822 	add	a, #0x0a
                                   7823 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00216F 6F                    7824 	ld	l, a
      002170 11r00r00              7825 	ld	de, #_shadow_OAM+0
                                   7826 ;	spillPairReg hl
                                   7827 ;	spillPairReg hl
      002173 26 00                 7828 	ld	h, #0x00
                                   7829 ;	spillPairReg hl
                                   7830 ;	spillPairReg hl
      002175 29                    7831 	add	hl, hl
      002176 29                    7832 	add	hl, hl
      002177 19                    7833 	add	hl, de
      002178 23                    7834 	inc	hl
      002179 23                    7835 	inc	hl
      00217A 36 7F                 7836 	ld	(hl), #0x7f
                                   7837 ;src/main.c:820: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00217C 79                    7838 	ld	a, c
      00217D C6 0B                 7839 	add	a, #0x0b
                                   7840 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00217F 6F                    7841 	ld	l, a
      002180 01r00r00              7842 	ld	bc, #_shadow_OAM+0
                                   7843 ;	spillPairReg hl
                                   7844 ;	spillPairReg hl
      002183 26 00                 7845 	ld	h, #0x00
                                   7846 ;	spillPairReg hl
                                   7847 ;	spillPairReg hl
      002185 29                    7848 	add	hl, hl
      002186 29                    7849 	add	hl, hl
      002187 09                    7850 	add	hl, bc
      002188 23                    7851 	inc	hl
      002189 23                    7852 	inc	hl
      00218A 36 7F                 7853 	ld	(hl), #0x7f
                                   7854 ;src/main.c:822: spawnPickup(enemies[i].x, enemies[i].y);
      00218C F8 06                 7855 	ldhl	sp,	#6
      00218E 4E                    7856 	ld	c, (hl)
      00218F 06 00                 7857 	ld	b, #0x00
      002191 69                    7858 	ld	l, c
      002192 60                    7859 	ld	h, b
      002193 29                    7860 	add	hl, hl
      002194 29                    7861 	add	hl, hl
      002195 29                    7862 	add	hl, hl
      002196 09                    7863 	add	hl, bc
      002197 29                    7864 	add	hl, hl
      002198 01r5Ar00              7865 	ld	bc,#_enemies
      00219B 09                    7866 	add	hl,bc
      00219C 33                    7867 	inc	sp
      00219D 33                    7868 	inc	sp
      00219E 5D                    7869 	ld	e, l
      00219F 54                    7870 	ld	d, h
      0021A0 D5                    7871 	push	de
      0021A1 21 02 00              7872 	ld	hl, #0x0002
      0021A4 19                    7873 	add	hl, de
      0021A5 E5                    7874 	push	hl
      0021A6 7D                    7875 	ld	a, l
      0021A7 F8 04                 7876 	ldhl	sp,	#4
      0021A9 77                    7877 	ld	(hl), a
      0021AA E1                    7878 	pop	hl
      0021AB 7C                    7879 	ld	a, h
      0021AC F8 03                 7880 	ldhl	sp,	#3
      0021AE 32                    7881 	ld	(hl-), a
      0021AF 2A                    7882 	ld	a, (hl+)
      0021B0 5F                    7883 	ld	e, a
      0021B1 56                    7884 	ld	d, (hl)
      0021B2 1A                    7885 	ld	a, (de)
      0021B3 4F                    7886 	ld	c, a
      0021B4 13                    7887 	inc	de
      0021B5 1A                    7888 	ld	a, (de)
      0021B6 47                    7889 	ld	b, a
      0021B7 D1                    7890 	pop	de
      0021B8 D5                    7891 	push	de
      0021B9 1A                    7892 	ld	a, (de)
      0021BA 6F                    7893 	ld	l, a
                                   7894 ;	spillPairReg hl
                                   7895 ;	spillPairReg hl
      0021BB 13                    7896 	inc	de
      0021BC 1A                    7897 	ld	a, (de)
      0021BD 67                    7898 	ld	h, a
                                   7899 ;	spillPairReg hl
                                   7900 ;	spillPairReg hl
      0021BE C5                    7901 	push	bc
      0021BF E5                    7902 	push	hl
      0021C0 CDrF1r20              7903 	call	_spawnPickup
      0021C3 E8 04                 7904 	add	sp, #4
                                   7905 ;src/main.c:824: enemies[i].alive = 0;
      0021C5 D1                    7906 	pop	de
      0021C6 D5                    7907 	push	de
      0021C7 21 09 00              7908 	ld	hl, #0x0009
      0021CA 19                    7909 	add	hl, de
      0021CB 4D                    7910 	ld	c, l
      0021CC 44                    7911 	ld	b, h
      0021CD AF                    7912 	xor	a, a
      0021CE 02                    7913 	ld	(bc), a
                                   7914 ;src/main.c:825: enemies[i].visible = 0;
      0021CF D1                    7915 	pop	de
      0021D0 D5                    7916 	push	de
      0021D1 21 0A 00              7917 	ld	hl, #0x000a
      0021D4 19                    7918 	add	hl, de
      0021D5 4D                    7919 	ld	c, l
      0021D6 44                    7920 	ld	b, h
      0021D7 AF                    7921 	xor	a, a
      0021D8 02                    7922 	ld	(bc), a
                                   7923 ;src/main.c:827: playSound(0);
      0021D9 AF                    7924 	xor	a, a
      0021DA F5                    7925 	push	af
      0021DB 33                    7926 	inc	sp
      0021DC CDr96r0F              7927 	call	_playSound
      0021DF 33                    7928 	inc	sp
                                   7929 ;src/main.c:828: incrementScore();
      0021E0 CDr58r0D              7930 	call	_incrementScore
                                   7931 ;src/main.c:829: updateScore();
      0021E3 CDrBAr0C              7932 	call	_updateScore
                                   7933 ;src/main.c:831: explosions[oldestEx].visible = 1;
      0021E6 21rBBr00              7934 	ld	hl, #_oldestEx
      0021E9 4E                    7935 	ld	c, (hl)
      0021EA 06 00                 7936 	ld	b, #0x00
      0021EC 69                    7937 	ld	l, c
      0021ED 60                    7938 	ld	h, b
      0021EE 29                    7939 	add	hl, hl
      0021EF 09                    7940 	add	hl, bc
      0021F0 29                    7941 	add	hl, hl
      0021F1 01r03r01              7942 	ld	bc,#_explosions
      0021F4 09                    7943 	add	hl,bc
      0021F5 36 01                 7944 	ld	(hl), #0x01
                                   7945 ;src/main.c:832: explosions[oldestEx].x = enemies[i].x;
      0021F7 21rBBr00              7946 	ld	hl, #_oldestEx
      0021FA 4E                    7947 	ld	c, (hl)
      0021FB 06 00                 7948 	ld	b, #0x00
      0021FD 69                    7949 	ld	l, c
      0021FE 60                    7950 	ld	h, b
      0021FF 29                    7951 	add	hl, hl
      002200 09                    7952 	add	hl, bc
      002201 29                    7953 	add	hl, hl
      002202 01r03r01              7954 	ld	bc,#_explosions
      002205 09                    7955 	add	hl,bc
      002206 23                    7956 	inc	hl
      002207 4D                    7957 	ld	c, l
      002208 44                    7958 	ld	b, h
      002209 D1                    7959 	pop	de
      00220A D5                    7960 	push	de
      00220B 1A                    7961 	ld	a, (de)
      00220C 02                    7962 	ld	(bc), a
                                   7963 ;src/main.c:833: explosions[oldestEx].y = enemies[i].y;
      00220D 21rBBr00              7964 	ld	hl, #_oldestEx
      002210 4E                    7965 	ld	c, (hl)
      002211 06 00                 7966 	ld	b, #0x00
      002213 69                    7967 	ld	l, c
      002214 60                    7968 	ld	h, b
      002215 29                    7969 	add	hl, hl
      002216 09                    7970 	add	hl, bc
      002217 29                    7971 	add	hl, hl
      002218 01r03r01              7972 	ld	bc,#_explosions
      00221B 09                    7973 	add	hl,bc
      00221C 23                    7974 	inc	hl
      00221D 23                    7975 	inc	hl
      00221E 4D                    7976 	ld	c, l
      00221F 44                    7977 	ld	b, h
      002220 F8 02                 7978 	ldhl	sp,#2
      002222 2A                    7979 	ld	a, (hl+)
      002223 5F                    7980 	ld	e, a
      002224 56                    7981 	ld	d, (hl)
      002225 1A                    7982 	ld	a, (de)
      002226 02                    7983 	ld	(bc), a
                                   7984 ;src/main.c:836: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      002227 CDr00r00              7985 	call	_rand
      00222A 7B                    7986 	ld	a, e
      00222B 21rA7r0B              7987 	ld	hl, #_exTileCount
      00222E 46                    7988 	ld	b, (hl)
      00222F C5                    7989 	push	bc
      002230 33                    7990 	inc	sp
      002231 F5                    7991 	push	af
      002232 33                    7992 	inc	sp
      002233 CDr00r00              7993 	call	__moduchar
      002236 E1                    7994 	pop	hl
      002237 F8 03                 7995 	ldhl	sp,	#3
      002239 73                    7996 	ld	(hl), e
                                   7997 ;src/main.c:838: explosions[oldestEx].tile = exTiles[tileNum];
      00223A 21rBBr00              7998 	ld	hl, #_oldestEx
      00223D 4E                    7999 	ld	c, (hl)
      00223E 06 00                 8000 	ld	b, #0x00
      002240 69                    8001 	ld	l, c
      002241 60                    8002 	ld	h, b
      002242 29                    8003 	add	hl, hl
      002243 09                    8004 	add	hl, bc
      002244 29                    8005 	add	hl, hl
      002245 01r03r01              8006 	ld	bc,#_explosions
      002248 09                    8007 	add	hl,bc
      002249 23                    8008 	inc	hl
      00224A 23                    8009 	inc	hl
      00224B 23                    8010 	inc	hl
      00224C 23                    8011 	inc	hl
      00224D 23                    8012 	inc	hl
      00224E 4D                    8013 	ld	c, l
      00224F 44                    8014 	ld	b, h
      002250 11rBCr00              8015 	ld	de, #_exTiles+0
      002253 F8 03                 8016 	ldhl	sp,	#3
      002255 6E                    8017 	ld	l, (hl)
      002256 26 00                 8018 	ld	h, #0x00
      002258 19                    8019 	add	hl, de
      002259 5D                    8020 	ld	e, l
      00225A 54                    8021 	ld	d, h
      00225B 1A                    8022 	ld	a, (de)
      00225C 02                    8023 	ld	(bc), a
                                   8024 ;src/main.c:839: explosions[oldestEx].frame = 0;
      00225D 21rBBr00              8025 	ld	hl, #_oldestEx
      002260 4E                    8026 	ld	c, (hl)
      002261 06 00                 8027 	ld	b, #0x00
      002263 69                    8028 	ld	l, c
      002264 60                    8029 	ld	h, b
      002265 29                    8030 	add	hl, hl
      002266 09                    8031 	add	hl, bc
      002267 29                    8032 	add	hl, hl
      002268 01r03r01              8033 	ld	bc,#_explosions
      00226B 09                    8034 	add	hl,bc
      00226C 23                    8035 	inc	hl
      00226D 23                    8036 	inc	hl
      00226E 23                    8037 	inc	hl
      00226F 36 00                 8038 	ld	(hl), #0x00
                                   8039 ;src/main.c:840: explosions[oldestEx].frameCounter = 0;
      002271 21rBBr00              8040 	ld	hl, #_oldestEx
      002274 4E                    8041 	ld	c, (hl)
      002275 06 00                 8042 	ld	b, #0x00
      002277 69                    8043 	ld	l, c
      002278 60                    8044 	ld	h, b
      002279 29                    8045 	add	hl, hl
      00227A 09                    8046 	add	hl, bc
      00227B 29                    8047 	add	hl, hl
      00227C 01r03r01              8048 	ld	bc,#_explosions
      00227F 09                    8049 	add	hl,bc
      002280 01 04 00              8050 	ld	bc, #0x0004
      002283 09                    8051 	add	hl, bc
      002284 36 00                 8052 	ld	(hl), #0x00
                                   8053 ;src/main.c:842: set_sprite_tile(20 + oldestEx+oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      002286 21rBBr00              8054 	ld	hl, #_oldestEx
      002289 4E                    8055 	ld	c, (hl)
      00228A 06 00                 8056 	ld	b, #0x00
      00228C 69                    8057 	ld	l, c
      00228D 60                    8058 	ld	h, b
      00228E 29                    8059 	add	hl, hl
      00228F 09                    8060 	add	hl, bc
      002290 29                    8061 	add	hl, hl
      002291 01r03r01              8062 	ld	bc,#_explosions
      002294 09                    8063 	add	hl,bc
      002295 5D                    8064 	ld	e, l
      002296 54                    8065 	ld	d, h
      002297 21 05 00              8066 	ld	hl, #0x0005
      00229A 19                    8067 	add	hl, de
      00229B 4E                    8068 	ld	c, (hl)
      00229C 13                    8069 	inc	de
      00229D 13                    8070 	inc	de
      00229E 13                    8071 	inc	de
      00229F 1A                    8072 	ld	a, (de)
      0022A0 87                    8073 	add	a, a
      0022A1 81                    8074 	add	a, c
      0022A2 4F                    8075 	ld	c, a
      0022A3 21rBBr00              8076 	ld	hl, #_oldestEx
      0022A6 46                    8077 	ld	b, (hl)
      0022A7 78                    8078 	ld	a, b
      0022A8 C6 14                 8079 	add	a, #0x14
      0022AA 80                    8080 	add	a, b
                                   8081 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022AB 6F                    8082 	ld	l, a
      0022AC 11r00r00              8083 	ld	de, #_shadow_OAM+0
                                   8084 ;	spillPairReg hl
                                   8085 ;	spillPairReg hl
      0022AF 26 00                 8086 	ld	h, #0x00
                                   8087 ;	spillPairReg hl
                                   8088 ;	spillPairReg hl
      0022B1 29                    8089 	add	hl, hl
      0022B2 29                    8090 	add	hl, hl
      0022B3 19                    8091 	add	hl, de
      0022B4 23                    8092 	inc	hl
      0022B5 23                    8093 	inc	hl
      0022B6 71                    8094 	ld	(hl), c
                                   8095 ;src/main.c:843: set_sprite_tile(21 + oldestEx+oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      0022B7 21rBBr00              8096 	ld	hl, #_oldestEx
      0022BA 4E                    8097 	ld	c, (hl)
      0022BB 06 00                 8098 	ld	b, #0x00
      0022BD 69                    8099 	ld	l, c
      0022BE 60                    8100 	ld	h, b
      0022BF 29                    8101 	add	hl, hl
      0022C0 09                    8102 	add	hl, bc
      0022C1 29                    8103 	add	hl, hl
      0022C2 01r03r01              8104 	ld	bc,#_explosions
      0022C5 09                    8105 	add	hl,bc
      0022C6 5D                    8106 	ld	e, l
      0022C7 54                    8107 	ld	d, h
      0022C8 21 05 00              8108 	ld	hl, #0x0005
      0022CB 19                    8109 	add	hl, de
      0022CC 4E                    8110 	ld	c, (hl)
      0022CD 13                    8111 	inc	de
      0022CE 13                    8112 	inc	de
      0022CF 13                    8113 	inc	de
      0022D0 1A                    8114 	ld	a, (de)
      0022D1 87                    8115 	add	a, a
      0022D2 81                    8116 	add	a, c
      0022D3 C6 02                 8117 	add	a, #0x02
      0022D5 4F                    8118 	ld	c, a
      0022D6 21rBBr00              8119 	ld	hl, #_oldestEx
      0022D9 46                    8120 	ld	b, (hl)
      0022DA 78                    8121 	ld	a, b
      0022DB C6 15                 8122 	add	a, #0x15
      0022DD 80                    8123 	add	a, b
                                   8124 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022DE 6F                    8125 	ld	l, a
      0022DF 11r00r00              8126 	ld	de, #_shadow_OAM+0
                                   8127 ;	spillPairReg hl
                                   8128 ;	spillPairReg hl
      0022E2 26 00                 8129 	ld	h, #0x00
                                   8130 ;	spillPairReg hl
                                   8131 ;	spillPairReg hl
      0022E4 29                    8132 	add	hl, hl
      0022E5 29                    8133 	add	hl, hl
      0022E6 19                    8134 	add	hl, de
      0022E7 23                    8135 	inc	hl
      0022E8 23                    8136 	inc	hl
      0022E9 71                    8137 	ld	(hl), c
                                   8138 ;src/main.c:848: oldestEx++;
      0022EA 21rBBr00              8139 	ld	hl, #_oldestEx
      0022ED 34                    8140 	inc	(hl)
                                   8141 ;src/main.c:849: if (oldestEx >= exCount) {
      0022EE 21rA5r0B              8142 	ld	hl, #_exCount
      0022F1 4E                    8143 	ld	c, (hl)
      0022F2 21rBBr00              8144 	ld	hl, #_oldestEx
      0022F5 7E                    8145 	ld	a, (hl)
      0022F6 91                    8146 	sub	a, c
      0022F7 38 02                 8147 	jr	C, 00107$
                                   8148 ;src/main.c:850: oldestEx = 0;
      0022F9 36 00                 8149 	ld	(hl), #0x00
      0022FB                       8150 00107$:
                                   8151 ;src/main.c:854: }
      0022FB E8 04                 8152 	add	sp, #4
      0022FD C9                    8153 	ret
                                   8154 ;src/main.c:856: void checkCollision() {
                                   8155 ;	---------------------------------
                                   8156 ; Function checkCollision
                                   8157 ; ---------------------------------
      0022FE                       8158 _checkCollision::
      0022FE E8 E9                 8159 	add	sp, #-23
                                   8160 ;src/main.c:863: struct Enemy *eptr = enemies + enemyCollisionCount;
      002300 21rA5r00              8161 	ld	hl, #_enemyCollisionCount
      002303 4E                    8162 	ld	c, (hl)
      002304 06 00                 8163 	ld	b, #0x00
      002306 69                    8164 	ld	l, c
      002307 60                    8165 	ld	h, b
      002308 29                    8166 	add	hl, hl
      002309 29                    8167 	add	hl, hl
      00230A 29                    8168 	add	hl, hl
      00230B 09                    8169 	add	hl, bc
      00230C 29                    8170 	add	hl, hl
      00230D 01r5Ar00              8171 	ld	bc,#_enemies
      002310 09                    8172 	add	hl,bc
      002311 4D                    8173 	ld	c, l
      002312 7C                    8174 	ld	a, h
      002313 F8 00                 8175 	ldhl	sp,	#0
      002315 71                    8176 	ld	(hl), c
      002316 23                    8177 	inc	hl
      002317 77                    8178 	ld	(hl), a
                                   8179 ;src/main.c:864: uint8_t i = enemyCollisionCount;
      002318 FArA5r00              8180 	ld	a, (#_enemyCollisionCount)
      00231B F8 02                 8181 	ldhl	sp,	#2
      00231D 77                    8182 	ld	(hl), a
                                   8183 ;src/main.c:866: if (eptr->visible && eptr->alive) {
      00231E D1                    8184 	pop	de
      00231F D5                    8185 	push	de
      002320 21 0A 00              8186 	ld	hl, #0x000a
      002323 19                    8187 	add	hl, de
      002324 4D                    8188 	ld	c, l
      002325 44                    8189 	ld	b, h
      002326 0A                    8190 	ld	a, (bc)
      002327 B7                    8191 	or	a, a
      002328 CArABr27              8192 	jp	Z, 00139$
      00232B D1                    8193 	pop	de
      00232C D5                    8194 	push	de
      00232D 21 09 00              8195 	ld	hl, #0x0009
      002330 19                    8196 	add	hl, de
      002331 4D                    8197 	ld	c, l
      002332 44                    8198 	ld	b, h
      002333 0A                    8199 	ld	a, (bc)
      002334 B7                    8200 	or	a, a
      002335 CArABr27              8201 	jp	Z, 00139$
                                   8202 ;src/main.c:868: uint8_t alive = 1;
      002338 F8 12                 8203 	ldhl	sp,	#18
      00233A 36 01                 8204 	ld	(hl), #0x01
                                   8205 ;src/main.c:871: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00233C D1                    8206 	pop	de
      00233D D5                    8207 	push	de
      00233E 21 08 00              8208 	ld	hl, #0x0008
      002341 19                    8209 	add	hl, de
      002342 4D                    8210 	ld	c, l
      002343 44                    8211 	ld	b, h
      002344 0A                    8212 	ld	a, (bc)
      002345 4F                    8213 	ld	c, a
      002346 3D                    8214 	dec	a
      002347 3E 01                 8215 	ld	a, #0x01
      002349 28 01                 8216 	jr	Z, 00350$
      00234B AF                    8217 	xor	a, a
      00234C                       8218 00350$:
      00234C F8 13                 8219 	ldhl	sp,	#19
      00234E 77                    8220 	ld	(hl), a
      00234F FAr9Br00              8221 	ld	a, (#_playerDrawX)
      002352 F8 14                 8222 	ldhl	sp,	#20
      002354 77                    8223 	ld	(hl), a
                                   8224 ;src/main.c:872: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002355 79                    8225 	ld	a, c
      002356 D6 02                 8226 	sub	a, #0x02
      002358 3E 01                 8227 	ld	a, #0x01
      00235A 28 01                 8228 	jr	Z, 00352$
      00235C AF                    8229 	xor	a, a
      00235D                       8230 00352$:
      00235D F8 15                 8231 	ldhl	sp,	#21
                                   8232 ;src/main.c:871: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00235F 32                    8233 	ld	(hl-), a
      002360 2B                    8234 	dec	hl
      002361 7E                    8235 	ld	a, (hl)
      002362 B7                    8236 	or	a, a
      002363 28 2F                 8237 	jr	Z, 00110$
      002365 D1                    8238 	pop	de
      002366 D5                    8239 	push	de
      002367 1A                    8240 	ld	a, (de)
      002368 F8 16                 8241 	ldhl	sp,	#22
      00236A 77                    8242 	ld	(hl), a
      00236B 3A                    8243 	ld	a, (hl-)
      00236C 2B                    8244 	dec	hl
      00236D 96                    8245 	sub	a, (hl)
      00236E 23                    8246 	inc	hl
      00236F 23                    8247 	inc	hl
      002370 77                    8248 	ld	(hl), a
                                   8249 ;src/main.c:368: if (value >= 0) return value;
      002371 CB 7E                 8250 	bit	7, (hl)
      002373 28 06                 8251 	jr	Z, 00147$
                                   8252 ;src/main.c:369: else return - value;
      002375 AF                    8253 	xor	a, a
      002376 F8 16                 8254 	ldhl	sp,	#22
      002378 96                    8255 	sub	a, (hl)
      002379 4F                    8256 	ld	c, a
      00237A 71                    8257 	ld	(hl), c
                                   8258 ;src/main.c:871: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00237B                       8259 00147$:
      00237B F8 16                 8260 	ldhl	sp,	#22
      00237D 5E                    8261 	ld	e, (hl)
      00237E 3E 08                 8262 	ld	a,#0x08
      002380 57                    8263 	ld	d,a
      002381 96                    8264 	sub	a, (hl)
      002382 CB 7B                 8265 	bit	7, e
      002384 28 07                 8266 	jr	Z, 00353$
      002386 CB 7A                 8267 	bit	7, d
      002388 20 08                 8268 	jr	NZ, 00354$
      00238A BF                    8269 	cp	a, a
      00238B 18 05                 8270 	jr	00354$
      00238D                       8271 00353$:
      00238D CB 7A                 8272 	bit	7, d
      00238F 28 01                 8273 	jr	Z, 00354$
      002391 37                    8274 	scf
      002392                       8275 00354$:
      002392 30 2F                 8276 	jr	NC, 00106$
      002394                       8277 00110$:
                                   8278 ;src/main.c:872: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002394 F8 15                 8279 	ldhl	sp,	#21
      002396 7E                    8280 	ld	a, (hl)
      002397 B7                    8281 	or	a, a
      002398 CAr7Er24              8282 	jp	Z, 00107$
      00239B 2B                    8283 	dec	hl
      00239C D1                    8284 	pop	de
      00239D D5                    8285 	push	de
      00239E 1A                    8286 	ld	a, (de)
      00239F 96                    8287 	sub	a, (hl)
      0023A0 4F                    8288 	ld	c, a
                                   8289 ;src/main.c:368: if (value >= 0) return value;
      0023A1 CB 79                 8290 	bit	7, c
      0023A3 20 03                 8291 	jr	NZ, 00149$
      0023A5 41                    8292 	ld	b, c
      0023A6 18 03                 8293 	jr	00151$
      0023A8                       8294 00149$:
                                   8295 ;src/main.c:369: else return - value;
      0023A8 AF                    8296 	xor	a, a
      0023A9 91                    8297 	sub	a, c
      0023AA 47                    8298 	ld	b, a
                                   8299 ;src/main.c:872: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0023AB                       8300 00151$:
      0023AB 58                    8301 	ld	e, b
      0023AC 3E 10                 8302 	ld	a,#0x10
      0023AE 57                    8303 	ld	d,a
      0023AF 90                    8304 	sub	a, b
      0023B0 CB 7B                 8305 	bit	7, e
      0023B2 28 07                 8306 	jr	Z, 00355$
      0023B4 CB 7A                 8307 	bit	7, d
      0023B6 20 08                 8308 	jr	NZ, 00356$
      0023B8 BF                    8309 	cp	a, a
      0023B9 18 05                 8310 	jr	00356$
      0023BB                       8311 00355$:
      0023BB CB 7A                 8312 	bit	7, d
      0023BD 28 01                 8313 	jr	Z, 00356$
      0023BF 37                    8314 	scf
      0023C0                       8315 00356$:
      0023C0 DAr7Er24              8316 	jp	C, 00107$
      0023C3                       8317 00106$:
                                   8318 ;src/main.c:873: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0023C3 C1                    8319 	pop	bc
      0023C4 C5                    8320 	push	bc
      0023C5 03                    8321 	inc	bc
      0023C6 03                    8322 	inc	bc
      0023C7 FAr9Cr00              8323 	ld	a, (#_playerDrawY)
      0023CA F8 16                 8324 	ldhl	sp,	#22
      0023CC 77                    8325 	ld	(hl), a
      0023CD F8 13                 8326 	ldhl	sp,	#19
      0023CF 7E                    8327 	ld	a, (hl)
      0023D0 B7                    8328 	or	a, a
      0023D1 28 23                 8329 	jr	Z, 00105$
      0023D3 0A                    8330 	ld	a, (bc)
      0023D4 F8 16                 8331 	ldhl	sp,	#22
      0023D6 96                    8332 	sub	a, (hl)
      0023D7 6F                    8333 	ld	l, a
                                   8334 ;	spillPairReg hl
                                   8335 ;	spillPairReg hl
                                   8336 ;src/main.c:368: if (value >= 0) return value;
      0023D8 CB 7D                 8337 	bit	7, l
      0023DA 28 03                 8338 	jr	Z, 00155$
                                   8339 ;src/main.c:369: else return - value;
      0023DC AF                    8340 	xor	a, a
      0023DD 95                    8341 	sub	a, l
      0023DE 6F                    8342 	ld	l, a
                                   8343 ;	spillPairReg hl
                                   8344 ;	spillPairReg hl
                                   8345 ;src/main.c:873: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0023DF                       8346 00155$:
      0023DF 5D                    8347 	ld	e, l
      0023E0 3E 08                 8348 	ld	a,#0x08
      0023E2 57                    8349 	ld	d,a
      0023E3 95                    8350 	sub	a, l
      0023E4 CB 7B                 8351 	bit	7, e
      0023E6 28 07                 8352 	jr	Z, 00357$
      0023E8 CB 7A                 8353 	bit	7, d
      0023EA 20 08                 8354 	jr	NZ, 00358$
      0023EC BF                    8355 	cp	a, a
      0023ED 18 05                 8356 	jr	00358$
      0023EF                       8357 00357$:
      0023EF CB 7A                 8358 	bit	7, d
      0023F1 28 01                 8359 	jr	Z, 00358$
      0023F3 37                    8360 	scf
      0023F4                       8361 00358$:
      0023F4 30 29                 8362 	jr	NC, 00101$
      0023F6                       8363 00105$:
                                   8364 ;src/main.c:874: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      0023F6 F8 15                 8365 	ldhl	sp,	#21
      0023F8 7E                    8366 	ld	a, (hl)
      0023F9 B7                    8367 	or	a, a
      0023FA CAr7Er24              8368 	jp	Z, 00107$
      0023FD 23                    8369 	inc	hl
      0023FE 0A                    8370 	ld	a, (bc)
      0023FF 96                    8371 	sub	a, (hl)
      002400 4F                    8372 	ld	c, a
                                   8373 ;src/main.c:368: if (value >= 0) return value;
      002401 CB 79                 8374 	bit	7, c
      002403 28 03                 8375 	jr	Z, 00159$
                                   8376 ;src/main.c:369: else return - value;
      002405 AF                    8377 	xor	a, a
      002406 91                    8378 	sub	a, c
      002407 4F                    8379 	ld	c, a
                                   8380 ;src/main.c:874: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002408                       8381 00159$:
      002408 59                    8382 	ld	e, c
      002409 3E 10                 8383 	ld	a,#0x10
      00240B 57                    8384 	ld	d,a
      00240C 91                    8385 	sub	a, c
      00240D CB 7B                 8386 	bit	7, e
      00240F 28 07                 8387 	jr	Z, 00359$
      002411 CB 7A                 8388 	bit	7, d
      002413 20 08                 8389 	jr	NZ, 00360$
      002415 BF                    8390 	cp	a, a
      002416 18 05                 8391 	jr	00360$
      002418                       8392 00359$:
      002418 CB 7A                 8393 	bit	7, d
      00241A 28 01                 8394 	jr	Z, 00360$
      00241C 37                    8395 	scf
      00241D                       8396 00360$:
      00241D 38 5F                 8397 	jr	C, 00107$
      00241F                       8398 00101$:
                                   8399 ;src/main.c:876: set_sprite_tile(10+(i<<1), 0x7f);
      00241F F8 02                 8400 	ldhl	sp,	#2
      002421 7E                    8401 	ld	a, (hl)
      002422 87                    8402 	add	a, a
      002423 C6 0A                 8403 	add	a, #0x0a
                                   8404 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002425 6F                    8405 	ld	l, a
      002426 01r00r00              8406 	ld	bc, #_shadow_OAM+0
                                   8407 ;	spillPairReg hl
                                   8408 ;	spillPairReg hl
      002429 26 00                 8409 	ld	h, #0x00
                                   8410 ;	spillPairReg hl
                                   8411 ;	spillPairReg hl
      00242B 29                    8412 	add	hl, hl
      00242C 29                    8413 	add	hl, hl
      00242D 09                    8414 	add	hl, bc
      00242E 23                    8415 	inc	hl
      00242F 23                    8416 	inc	hl
      002430 36 7F                 8417 	ld	(hl), #0x7f
                                   8418 ;src/main.c:877: set_sprite_tile(10+(i<<1)+1, 0x7f);
      002432 F8 02                 8419 	ldhl	sp,	#2
      002434 7E                    8420 	ld	a, (hl)
      002435 87                    8421 	add	a, a
      002436 C6 0B                 8422 	add	a, #0x0b
                                   8423 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002438 6F                    8424 	ld	l, a
      002439 01r00r00              8425 	ld	bc, #_shadow_OAM+0
                                   8426 ;	spillPairReg hl
                                   8427 ;	spillPairReg hl
      00243C 26 00                 8428 	ld	h, #0x00
                                   8429 ;	spillPairReg hl
                                   8430 ;	spillPairReg hl
      00243E 29                    8431 	add	hl, hl
      00243F 29                    8432 	add	hl, hl
      002440 09                    8433 	add	hl, bc
      002441 23                    8434 	inc	hl
      002442 23                    8435 	inc	hl
      002443 36 7F                 8436 	ld	(hl), #0x7f
                                   8437 ;src/main.c:878: eptr->alive = 0;
      002445 D1                    8438 	pop	de
      002446 D5                    8439 	push	de
      002447 21 09 00              8440 	ld	hl, #0x0009
      00244A 19                    8441 	add	hl, de
      00244B 4D                    8442 	ld	c, l
      00244C 44                    8443 	ld	b, h
      00244D AF                    8444 	xor	a, a
      00244E 02                    8445 	ld	(bc), a
                                   8446 ;src/main.c:879: eptr->visible = 0;
      00244F D1                    8447 	pop	de
      002450 D5                    8448 	push	de
      002451 21 0A 00              8449 	ld	hl, #0x000a
      002454 19                    8450 	add	hl, de
      002455 4D                    8451 	ld	c, l
      002456 44                    8452 	ld	b, h
      002457 AF                    8453 	xor	a, a
      002458 02                    8454 	ld	(bc), a
                                   8455 ;src/main.c:880: takeDamage(eptr->damage);
      002459 D1                    8456 	pop	de
      00245A D5                    8457 	push	de
      00245B 21 0B 00              8458 	ld	hl, #0x000b
      00245E 19                    8459 	add	hl, de
      00245F 4D                    8460 	ld	c, l
      002460 44                    8461 	ld	b, h
      002461 0A                    8462 	ld	a, (bc)
      002462 06 00                 8463 	ld	b, #0x00
      002464 4F                    8464 	ld	c, a
      002465 C5                    8465 	push	bc
      002466 CDrADr20              8466 	call	_takeDamage
      002469 E1                    8467 	pop	hl
                                   8468 ;src/main.c:881: initEnemy(i);
      00246A F8 02                 8469 	ldhl	sp,	#2
      00246C 7E                    8470 	ld	a, (hl)
      00246D F5                    8471 	push	af
      00246E 33                    8472 	inc	sp
      00246F CDr64r11              8473 	call	_initEnemy
      002472 33                    8474 	inc	sp
                                   8475 ;src/main.c:882: playSound(0);
      002473 AF                    8476 	xor	a, a
      002474 F5                    8477 	push	af
      002475 33                    8478 	inc	sp
      002476 CDr96r0F              8479 	call	_playSound
      002479 33                    8480 	inc	sp
                                   8481 ;src/main.c:884: alive = 0;
      00247A F8 12                 8482 	ldhl	sp,	#18
      00247C 36 00                 8483 	ld	(hl), #0x00
      00247E                       8484 00107$:
                                   8485 ;src/main.c:890: if (alive) {
      00247E F8 12                 8486 	ldhl	sp,	#18
      002480 7E                    8487 	ld	a, (hl)
      002481 B7                    8488 	or	a, a
      002482 CArABr27              8489 	jp	Z, 00139$
                                   8490 ;src/main.c:891: struct Projectile *pptr = projectiles;
      002485 23                    8491 	inc	hl
      002486 3ErB4                 8492 	ld	a, #<(_projectiles)
      002488 22                    8493 	ld	(hl+), a
      002489 36s00                 8494 	ld	(hl), #>(_projectiles)
                                   8495 ;src/main.c:893: while (j < PROJECTILECOUNT) {
      00248B D1                    8496 	pop	de
      00248C D5                    8497 	push	de
      00248D 21 02 00              8498 	ld	hl, #0x0002
      002490 19                    8499 	add	hl, de
      002491 E5                    8500 	push	hl
      002492 7D                    8501 	ld	a, l
      002493 F8 05                 8502 	ldhl	sp,	#5
      002495 77                    8503 	ld	(hl), a
      002496 E1                    8504 	pop	hl
      002497 7C                    8505 	ld	a, h
      002498 F8 04                 8506 	ldhl	sp,	#4
      00249A 32                    8507 	ld	(hl-), a
      00249B 2A                    8508 	ld	a, (hl+)
      00249C 23                    8509 	inc	hl
      00249D 32                    8510 	ld	(hl-), a
      00249E 2A                    8511 	ld	a, (hl+)
      00249F 23                    8512 	inc	hl
      0024A0 77                    8513 	ld	(hl), a
      0024A1 D1                    8514 	pop	de
      0024A2 D5                    8515 	push	de
      0024A3 21 08 00              8516 	ld	hl, #0x0008
      0024A6 19                    8517 	add	hl, de
      0024A7 E5                    8518 	push	hl
      0024A8 7D                    8519 	ld	a, l
      0024A9 F8 09                 8520 	ldhl	sp,	#9
      0024AB 77                    8521 	ld	(hl), a
      0024AC E1                    8522 	pop	hl
      0024AD 7C                    8523 	ld	a, h
      0024AE F8 08                 8524 	ldhl	sp,	#8
      0024B0 77                    8525 	ld	(hl), a
      0024B1 F8 03                 8526 	ldhl	sp,	#3
      0024B3 7E                    8527 	ld	a, (hl)
      0024B4 F8 09                 8528 	ldhl	sp,	#9
      0024B6 77                    8529 	ld	(hl), a
      0024B7 F8 04                 8530 	ldhl	sp,	#4
      0024B9 7E                    8531 	ld	a, (hl)
      0024BA F8 0A                 8532 	ldhl	sp,	#10
      0024BC 77                    8533 	ld	(hl), a
      0024BD F8 15                 8534 	ldhl	sp,	#21
      0024BF 36 00                 8535 	ld	(hl), #0x00
      0024C1                       8536 00133$:
      0024C1 21r9Fr0B              8537 	ld	hl, #_PROJECTILECOUNT
      0024C4 4E                    8538 	ld	c, (hl)
      0024C5 F8 15                 8539 	ldhl	sp,	#21
      0024C7 7E                    8540 	ld	a, (hl)
      0024C8 91                    8541 	sub	a, c
      0024C9 D2rABr27              8542 	jp	NC, 00139$
                                   8543 ;src/main.c:894: if (pptr->active) {
      0024CC 2B                    8544 	dec	hl
      0024CD 2B                    8545 	dec	hl
      0024CE 2A                    8546 	ld	a, (hl+)
      0024CF 5F                    8547 	ld	e, a
      0024D0 56                    8548 	ld	d, (hl)
      0024D1 21 0A 00              8549 	ld	hl, #0x000a
      0024D4 19                    8550 	add	hl, de
      0024D5 4D                    8551 	ld	c, l
      0024D6 44                    8552 	ld	b, h
      0024D7 0A                    8553 	ld	a, (bc)
      0024D8 B7                    8554 	or	a, a
      0024D9 CAr92r27              8555 	jp	Z, 00132$
                                   8556 ;src/main.c:896: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0024DC F8 07                 8557 	ldhl	sp,#7
      0024DE 2A                    8558 	ld	a, (hl+)
      0024DF 5F                    8559 	ld	e, a
      0024E0 56                    8560 	ld	d, (hl)
      0024E1 1A                    8561 	ld	a, (de)
      0024E2 4F                    8562 	ld	c, a
      0024E3 3D                    8563 	dec	a
      0024E4 3E 01                 8564 	ld	a, #0x01
      0024E6 28 01                 8565 	jr	Z, 00362$
      0024E8 AF                    8566 	xor	a, a
      0024E9                       8567 00362$:
      0024E9 F8 11                 8568 	ldhl	sp,	#17
      0024EB 77                    8569 	ld	(hl), a
                                   8570 ;src/main.c:897: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      0024EC 79                    8571 	ld	a, c
      0024ED D6 02                 8572 	sub	a, #0x02
      0024EF 3E 01                 8573 	ld	a, #0x01
      0024F1 28 01                 8574 	jr	Z, 00364$
      0024F3 AF                    8575 	xor	a, a
      0024F4                       8576 00364$:
      0024F4 F8 12                 8577 	ldhl	sp,	#18
                                   8578 ;src/main.c:896: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0024F6 32                    8579 	ld	(hl-), a
      0024F7 7E                    8580 	ld	a, (hl)
      0024F8 B7                    8581 	or	a, a
      0024F9 28 2C                 8582 	jr	Z, 00130$
      0024FB D1                    8583 	pop	de
      0024FC D5                    8584 	push	de
      0024FD 1A                    8585 	ld	a, (de)
      0024FE F8 13                 8586 	ldhl	sp,#19
      002500 5E                    8587 	ld	e, (hl)
      002501 23                    8588 	inc	hl
      002502 56                    8589 	ld	d, (hl)
      002503 F5                    8590 	push	af
      002504 1A                    8591 	ld	a, (de)
      002505 4F                    8592 	ld	c, a
      002506 F1                    8593 	pop	af
      002507 91                    8594 	sub	a, c
      002508 4F                    8595 	ld	c, a
                                   8596 ;src/main.c:368: if (value >= 0) return value;
      002509 CB 79                 8597 	bit	7, c
      00250B 28 03                 8598 	jr	Z, 00165$
                                   8599 ;src/main.c:369: else return - value;
      00250D AF                    8600 	xor	a, a
      00250E 91                    8601 	sub	a, c
      00250F 4F                    8602 	ld	c, a
                                   8603 ;src/main.c:896: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002510                       8604 00165$:
      002510 59                    8605 	ld	e, c
      002511 3E 08                 8606 	ld	a,#0x08
      002513 57                    8607 	ld	d,a
      002514 91                    8608 	sub	a, c
      002515 CB 7B                 8609 	bit	7, e
      002517 28 07                 8610 	jr	Z, 00365$
      002519 CB 7A                 8611 	bit	7, d
      00251B 20 08                 8612 	jr	NZ, 00366$
      00251D BF                    8613 	cp	a, a
      00251E 18 05                 8614 	jr	00366$
      002520                       8615 00365$:
      002520 CB 7A                 8616 	bit	7, d
      002522 28 01                 8617 	jr	Z, 00366$
      002524 37                    8618 	scf
      002525                       8619 00366$:
      002525 30 3A                 8620 	jr	NC, 00126$
      002527                       8621 00130$:
                                   8622 ;src/main.c:897: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002527 F8 12                 8623 	ldhl	sp,	#18
      002529 7E                    8624 	ld	a, (hl)
      00252A B7                    8625 	or	a, a
      00252B CAr92r27              8626 	jp	Z, 00132$
      00252E 23                    8627 	inc	hl
      00252F D1                    8628 	pop	de
      002530 D5                    8629 	push	de
      002531 1A                    8630 	ld	a, (de)
      002532 5E                    8631 	ld	e, (hl)
      002533 23                    8632 	inc	hl
      002534 56                    8633 	ld	d, (hl)
      002535 23                    8634 	inc	hl
      002536 23                    8635 	inc	hl
      002537 F5                    8636 	push	af
      002538 1A                    8637 	ld	a, (de)
      002539 4F                    8638 	ld	c, a
      00253A F1                    8639 	pop	af
      00253B 91                    8640 	sub	a, c
      00253C 77                    8641 	ld	(hl), a
                                   8642 ;src/main.c:368: if (value >= 0) return value;
      00253D CB 7E                 8643 	bit	7, (hl)
      00253F 20 03                 8644 	jr	NZ, 00167$
      002541 4E                    8645 	ld	c, (hl)
      002542 18 05                 8646 	jr	00169$
      002544                       8647 00167$:
                                   8648 ;src/main.c:369: else return - value;
      002544 AF                    8649 	xor	a, a
      002545 F8 16                 8650 	ldhl	sp,	#22
      002547 96                    8651 	sub	a, (hl)
      002548 4F                    8652 	ld	c, a
                                   8653 ;src/main.c:897: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002549                       8654 00169$:
      002549 59                    8655 	ld	e, c
      00254A 3E 10                 8656 	ld	a,#0x10
      00254C 57                    8657 	ld	d,a
      00254D 91                    8658 	sub	a, c
      00254E CB 7B                 8659 	bit	7, e
      002550 28 07                 8660 	jr	Z, 00367$
      002552 CB 7A                 8661 	bit	7, d
      002554 20 08                 8662 	jr	NZ, 00368$
      002556 BF                    8663 	cp	a, a
      002557 18 05                 8664 	jr	00368$
      002559                       8665 00367$:
      002559 CB 7A                 8666 	bit	7, d
      00255B 28 01                 8667 	jr	Z, 00368$
      00255D 37                    8668 	scf
      00255E                       8669 00368$:
      00255E DAr92r27              8670 	jp	C, 00132$
      002561                       8671 00126$:
                                   8672 ;src/main.c:898: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002561 F8 13                 8673 	ldhl	sp,	#19
      002563 2A                    8674 	ld	a, (hl+)
      002564 4F                    8675 	ld	c, a
      002565 46                    8676 	ld	b, (hl)
      002566 03                    8677 	inc	bc
      002567 03                    8678 	inc	bc
      002568 F8 11                 8679 	ldhl	sp,	#17
      00256A 7E                    8680 	ld	a, (hl)
      00256B B7                    8681 	or	a, a
      00256C 28 2A                 8682 	jr	Z, 00125$
      00256E F8 09                 8683 	ldhl	sp,#9
      002570 2A                    8684 	ld	a, (hl+)
      002571 5F                    8685 	ld	e, a
      002572 56                    8686 	ld	d, (hl)
      002573 1A                    8687 	ld	a, (de)
      002574 F5                    8688 	push	af
      002575 0A                    8689 	ld	a, (bc)
      002576 5F                    8690 	ld	e, a
      002577 F1                    8691 	pop	af
      002578 93                    8692 	sub	a, e
      002579 6F                    8693 	ld	l, a
                                   8694 ;	spillPairReg hl
                                   8695 ;	spillPairReg hl
                                   8696 ;src/main.c:368: if (value >= 0) return value;
      00257A CB 7D                 8697 	bit	7, l
      00257C 28 03                 8698 	jr	Z, 00173$
                                   8699 ;src/main.c:369: else return - value;
      00257E AF                    8700 	xor	a, a
      00257F 95                    8701 	sub	a, l
      002580 6F                    8702 	ld	l, a
                                   8703 ;	spillPairReg hl
                                   8704 ;	spillPairReg hl
                                   8705 ;src/main.c:898: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002581                       8706 00173$:
      002581 5D                    8707 	ld	e, l
      002582 3E 08                 8708 	ld	a,#0x08
      002584 57                    8709 	ld	d,a
      002585 95                    8710 	sub	a, l
      002586 CB 7B                 8711 	bit	7, e
      002588 28 07                 8712 	jr	Z, 00369$
      00258A CB 7A                 8713 	bit	7, d
      00258C 20 08                 8714 	jr	NZ, 00370$
      00258E BF                    8715 	cp	a, a
      00258F 18 05                 8716 	jr	00370$
      002591                       8717 00369$:
      002591 CB 7A                 8718 	bit	7, d
      002593 28 01                 8719 	jr	Z, 00370$
      002595 37                    8720 	scf
      002596                       8721 00370$:
      002596 30 32                 8722 	jr	NC, 00121$
      002598                       8723 00125$:
                                   8724 ;src/main.c:899: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      002598 F8 12                 8725 	ldhl	sp,	#18
      00259A 7E                    8726 	ld	a, (hl)
      00259B B7                    8727 	or	a, a
      00259C CAr92r27              8728 	jp	Z, 00132$
      00259F F8 03                 8729 	ldhl	sp,#3
      0025A1 2A                    8730 	ld	a, (hl+)
      0025A2 5F                    8731 	ld	e, a
      0025A3 56                    8732 	ld	d, (hl)
      0025A4 1A                    8733 	ld	a, (de)
      0025A5 F5                    8734 	push	af
      0025A6 0A                    8735 	ld	a, (bc)
      0025A7 4F                    8736 	ld	c, a
      0025A8 F1                    8737 	pop	af
      0025A9 91                    8738 	sub	a, c
      0025AA 4F                    8739 	ld	c, a
                                   8740 ;src/main.c:368: if (value >= 0) return value;
      0025AB CB 79                 8741 	bit	7, c
      0025AD 28 03                 8742 	jr	Z, 00177$
                                   8743 ;src/main.c:369: else return - value;
      0025AF AF                    8744 	xor	a, a
      0025B0 91                    8745 	sub	a, c
      0025B1 4F                    8746 	ld	c, a
                                   8747 ;src/main.c:899: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      0025B2                       8748 00177$:
      0025B2 59                    8749 	ld	e, c
      0025B3 3E 10                 8750 	ld	a,#0x10
      0025B5 57                    8751 	ld	d,a
      0025B6 91                    8752 	sub	a, c
      0025B7 CB 7B                 8753 	bit	7, e
      0025B9 28 07                 8754 	jr	Z, 00371$
      0025BB CB 7A                 8755 	bit	7, d
      0025BD 20 08                 8756 	jr	NZ, 00372$
      0025BF BF                    8757 	cp	a, a
      0025C0 18 05                 8758 	jr	00372$
      0025C2                       8759 00371$:
      0025C2 CB 7A                 8760 	bit	7, d
      0025C4 28 01                 8761 	jr	Z, 00372$
      0025C6 37                    8762 	scf
      0025C7                       8763 00372$:
      0025C7 DAr92r27              8764 	jp	C, 00132$
      0025CA                       8765 00121$:
                                   8766 ;src/main.c:901: set_sprite_tile(30+j, 0x7f);
      0025CA F8 15                 8767 	ldhl	sp,	#21
      0025CC 7E                    8768 	ld	a, (hl)
      0025CD C6 1E                 8769 	add	a, #0x1e
                                   8770 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0025CF 6F                    8771 	ld	l, a
      0025D0 01r00r00              8772 	ld	bc, #_shadow_OAM+0
                                   8773 ;	spillPairReg hl
                                   8774 ;	spillPairReg hl
      0025D3 26 00                 8775 	ld	h, #0x00
                                   8776 ;	spillPairReg hl
                                   8777 ;	spillPairReg hl
      0025D5 29                    8778 	add	hl, hl
      0025D6 29                    8779 	add	hl, hl
      0025D7 09                    8780 	add	hl, bc
      0025D8 23                    8781 	inc	hl
      0025D9 23                    8782 	inc	hl
      0025DA 36 7F                 8783 	ld	(hl), #0x7f
                                   8784 ;src/main.c:902: pptr->active = 0;
      0025DC F8 13                 8785 	ldhl	sp,#19
      0025DE 2A                    8786 	ld	a, (hl+)
      0025DF 5F                    8787 	ld	e, a
      0025E0 56                    8788 	ld	d, (hl)
      0025E1 21 0A 00              8789 	ld	hl, #0x000a
      0025E4 19                    8790 	add	hl, de
      0025E5 4D                    8791 	ld	c, l
      0025E6 44                    8792 	ld	b, h
      0025E7 AF                    8793 	xor	a, a
      0025E8 02                    8794 	ld	(bc), a
                                   8795 ;src/main.c:904: if (pptr->type == 0x2c) { //missile
      0025E9 F8 13                 8796 	ldhl	sp,#19
      0025EB 2A                    8797 	ld	a, (hl+)
      0025EC 5F                    8798 	ld	e, a
      0025ED 56                    8799 	ld	d, (hl)
      0025EE 21 0C 00              8800 	ld	hl, #0x000c
      0025F1 19                    8801 	add	hl, de
      0025F2 4D                    8802 	ld	c, l
      0025F3 44                    8803 	ld	b, h
      0025F4 0A                    8804 	ld	a, (bc)
      0025F5 5F                    8805 	ld	e, a
                                   8806 ;src/main.c:909: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      0025F6 D5                    8807 	push	de
      0025F7 F8 15                 8808 	ldhl	sp,#21
      0025F9 2A                    8809 	ld	a, (hl+)
      0025FA 5F                    8810 	ld	e, a
      0025FB 56                    8811 	ld	d, (hl)
      0025FC 21 08 00              8812 	ld	hl, #0x0008
      0025FF 19                    8813 	add	hl, de
      002600 D1                    8814 	pop	de
      002601 4D                    8815 	ld	c, l
      002602 44                    8816 	ld	b, h
                                   8817 ;src/main.c:904: if (pptr->type == 0x2c) { //missile
      002603 7B                    8818 	ld	a, e
      002604 D6 2C                 8819 	sub	a, #0x2c
      002606 C2r37r27              8820 	jp	NZ,00119$
                                   8821 ;src/main.c:909: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002609 F8 0B                 8822 	ldhl	sp,	#11
      00260B 79                    8823 	ld	a, c
      00260C 22                    8824 	ld	(hl+), a
      00260D 70                    8825 	ld	(hl), b
      00260E F8 16                 8826 	ldhl	sp,	#22
      002610 36 00                 8827 	ld	(hl), #0x00
      002612                       8828 00188$:
      002612 21r8Er0B              8829 	ld	hl, #_ENEMYCOUNT
      002615 4E                    8830 	ld	c, (hl)
      002616 F8 16                 8831 	ldhl	sp,	#22
      002618 7E                    8832 	ld	a, (hl)
      002619 91                    8833 	sub	a, c
      00261A D2r92r27              8834 	jp	NC, 00132$
                                   8835 ;src/main.c:910: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      00261D D1                    8836 	pop	de
      00261E D5                    8837 	push	de
      00261F 1A                    8838 	ld	a, (de)
      002620 F8 0F                 8839 	ldhl	sp,	#15
      002622 22                    8840 	ld	(hl+), a
      002623 13                    8841 	inc	de
      002624 1A                    8842 	ld	a, (de)
      002625 77                    8843 	ld	(hl), a
      002626 F8 16                 8844 	ldhl	sp,	#22
      002628 4E                    8845 	ld	c, (hl)
      002629 06 00                 8846 	ld	b, #0x00
      00262B 69                    8847 	ld	l, c
      00262C 60                    8848 	ld	h, b
      00262D 29                    8849 	add	hl, hl
      00262E 29                    8850 	add	hl, hl
      00262F 29                    8851 	add	hl, hl
      002630 09                    8852 	add	hl, bc
      002631 29                    8853 	add	hl, hl
      002632 01r5Ar00              8854 	ld	bc,#_enemies
      002635 09                    8855 	add	hl,bc
      002636 E5                    8856 	push	hl
      002637 7D                    8857 	ld	a, l
      002638 F8 13                 8858 	ldhl	sp,	#19
      00263A 77                    8859 	ld	(hl), a
      00263B E1                    8860 	pop	hl
      00263C 7C                    8861 	ld	a, h
      00263D F8 12                 8862 	ldhl	sp,	#18
      00263F 32                    8863 	ld	(hl-), a
      002640 2A                    8864 	ld	a, (hl+)
      002641 5F                    8865 	ld	e, a
      002642 3A                    8866 	ld	a, (hl-)
      002643 2B                    8867 	dec	hl
      002644 2B                    8868 	dec	hl
      002645 57                    8869 	ld	d, a
      002646 1A                    8870 	ld	a, (de)
      002647 4F                    8871 	ld	c, a
      002648 13                    8872 	inc	de
      002649 1A                    8873 	ld	a, (de)
      00264A 47                    8874 	ld	b, a
      00264B 2A                    8875 	ld	a, (hl+)
      00264C 5F                    8876 	ld	e, a
      00264D 56                    8877 	ld	d, (hl)
      00264E 7B                    8878 	ld	a, e
      00264F 91                    8879 	sub	a, c
      002650 5F                    8880 	ld	e, a
      002651 7A                    8881 	ld	a, d
      002652 98                    8882 	sbc	a, b
      002653 4B                    8883 	ld	c, e
      002654 47                    8884 	ld	b, a
                                   8885 ;	spillPairReg hl
                                   8886 ;	spillPairReg hl
      002655 60                    8887 	ld	h, b
                                   8888 ;	spillPairReg hl
                                   8889 ;	spillPairReg hl
      002656 CB 7C                 8890 	bit	7, h
      002658 20 07                 8891 	jr	NZ, 00180$
      00265A F8 0F                 8892 	ldhl	sp,	#15
      00265C 79                    8893 	ld	a, c
      00265D 22                    8894 	ld	(hl+), a
      00265E 70                    8895 	ld	(hl), b
      00265F 18 0B                 8896 	jr	00182$
      002661                       8897 00180$:
      002661 AF                    8898 	xor	a, a
      002662 91                    8899 	sub	a, c
      002663 4F                    8900 	ld	c, a
      002664 9F                    8901 	sbc	a, a
      002665 90                    8902 	sub	a, b
      002666 47                    8903 	ld	b, a
      002667 F8 0F                 8904 	ldhl	sp,	#15
      002669 79                    8905 	ld	a, c
      00266A 22                    8906 	ld	(hl+), a
      00266B 70                    8907 	ld	(hl), b
      00266C                       8908 00182$:
      00266C F8 05                 8909 	ldhl	sp,#5
      00266E 2A                    8910 	ld	a, (hl+)
      00266F 5F                    8911 	ld	e, a
      002670 56                    8912 	ld	d, (hl)
      002671 1A                    8913 	ld	a, (de)
      002672 4F                    8914 	ld	c, a
      002673 13                    8915 	inc	de
      002674 1A                    8916 	ld	a, (de)
      002675 47                    8917 	ld	b, a
      002676 F8 11                 8918 	ldhl	sp,	#17
      002678 2A                    8919 	ld	a, (hl+)
      002679 66                    8920 	ld	h, (hl)
                                   8921 ;	spillPairReg hl
                                   8922 ;	spillPairReg hl
      00267A 6F                    8923 	ld	l, a
                                   8924 ;	spillPairReg hl
                                   8925 ;	spillPairReg hl
      00267B 23                    8926 	inc	hl
      00267C 23                    8927 	inc	hl
      00267D 2A                    8928 	ld	a,	(hl+)
      00267E 66                    8929 	ld	h, (hl)
                                   8930 ;	spillPairReg hl
      00267F 6F                    8931 	ld	l, a
                                   8932 ;	spillPairReg hl
                                   8933 ;	spillPairReg hl
      002680 79                    8934 	ld	a, c
      002681 95                    8935 	sub	a, l
      002682 4F                    8936 	ld	c, a
      002683 78                    8937 	ld	a, b
      002684 9C                    8938 	sbc	a, h
      002685 47                    8939 	ld	b, a
                                   8940 ;	spillPairReg hl
                                   8941 ;	spillPairReg hl
      002686 60                    8942 	ld	h, b
                                   8943 ;	spillPairReg hl
                                   8944 ;	spillPairReg hl
      002687 CB 7C                 8945 	bit	7, h
      002689 28 06                 8946 	jr	Z, 00186$
      00268B AF                    8947 	xor	a, a
      00268C 91                    8948 	sub	a, c
      00268D 4F                    8949 	ld	c, a
      00268E 9F                    8950 	sbc	a, a
      00268F 90                    8951 	sub	a, b
      002690 47                    8952 	ld	b, a
      002691                       8953 00186$:
      002691 F8 0F                 8954 	ldhl	sp,	#15
      002693 2A                    8955 	ld	a,	(hl+)
      002694 66                    8956 	ld	h, (hl)
      002695 6F                    8957 	ld	l, a
      002696 09                    8958 	add	hl, bc
      002697 4D                    8959 	ld	c, l
      002698 44                    8960 	ld	b, h
      002699 21rA4r0B              8961 	ld	hl, #_SPLASHDROPOFF
      00269C 5E                    8962 	ld	e, (hl)
      00269D 1C                    8963 	inc	e
      00269E 18 04                 8964 	jr	00376$
      0026A0                       8965 00375$:
      0026A0 CB 21                 8966 	sla	c
      0026A2 CB 10                 8967 	rl	b
      0026A4                       8968 00376$:
      0026A4 1D                    8969 	dec	e
      0026A5 20 F9                 8970 	jr	NZ,00375$
                                   8971 ;src/main.c:911: int16_t dmg = pptr->damage - dmgDropOff;
      0026A7 F8 0B                 8972 	ldhl	sp,#11
      0026A9 2A                    8973 	ld	a, (hl+)
      0026AA 5F                    8974 	ld	e, a
      0026AB 56                    8975 	ld	d, (hl)
      0026AC 1A                    8976 	ld	a, (de)
      0026AD 6F                    8977 	ld	l, a
                                   8978 ;	spillPairReg hl
                                   8979 ;	spillPairReg hl
      0026AE 13                    8980 	inc	de
      0026AF 1A                    8981 	ld	a, (de)
      0026B0 67                    8982 	ld	h, a
                                   8983 ;	spillPairReg hl
                                   8984 ;	spillPairReg hl
      0026B1 7D                    8985 	ld	a, l
      0026B2 91                    8986 	sub	a, c
      0026B3 5F                    8987 	ld	e, a
      0026B4 7C                    8988 	ld	a, h
      0026B5 98                    8989 	sbc	a, b
      0026B6 F8 0D                 8990 	ldhl	sp,	#13
      0026B8 73                    8991 	ld	(hl), e
      0026B9 23                    8992 	inc	hl
                                   8993 ;src/main.c:912: if (dmg > 0) {
      0026BA 32                    8994 	ld	(hl-), a
      0026BB 2A                    8995 	ld	a, (hl+)
      0026BC 4F                    8996 	ld	c, a
      0026BD 46                    8997 	ld	b, (hl)
      0026BE 58                    8998 	ld	e, b
      0026BF AF                    8999 	xor	a, a
      0026C0 57                    9000 	ld	d, a
      0026C1 B9                    9001 	cp	a, c
      0026C2 98                    9002 	sbc	a, b
      0026C3 CB 7B                 9003 	bit	7, e
      0026C5 28 07                 9004 	jr	Z, 00377$
      0026C7 CB 7A                 9005 	bit	7, d
      0026C9 20 08                 9006 	jr	NZ, 00378$
      0026CB BF                    9007 	cp	a, a
      0026CC 18 05                 9008 	jr	00378$
      0026CE                       9009 00377$:
      0026CE CB 7A                 9010 	bit	7, d
      0026D0 28 01                 9011 	jr	Z, 00378$
      0026D2 37                    9012 	scf
      0026D3                       9013 00378$:
      0026D3 30 5C                 9014 	jr	NC, 00189$
                                   9015 ;src/main.c:913: enemies[k].hp -= dmg;
      0026D5 F8 11                 9016 	ldhl	sp,#17
      0026D7 2A                    9017 	ld	a, (hl+)
      0026D8 5F                    9018 	ld	e, a
      0026D9 56                    9019 	ld	d, (hl)
      0026DA 21 10 00              9020 	ld	hl, #0x0010
      0026DD 19                    9021 	add	hl, de
      0026DE E5                    9022 	push	hl
      0026DF 7D                    9023 	ld	a, l
      0026E0 F8 11                 9024 	ldhl	sp,	#17
      0026E2 77                    9025 	ld	(hl), a
      0026E3 E1                    9026 	pop	hl
      0026E4 7C                    9027 	ld	a, h
      0026E5 F8 10                 9028 	ldhl	sp,	#16
      0026E7 32                    9029 	ld	(hl-), a
      0026E8 2A                    9030 	ld	a, (hl+)
      0026E9 5F                    9031 	ld	e, a
      0026EA 2A                    9032 	ld	a, (hl+)
      0026EB 57                    9033 	ld	d, a
      0026EC 1A                    9034 	ld	a, (de)
      0026ED 22                    9035 	ld	(hl+), a
      0026EE 13                    9036 	inc	de
      0026EF 1A                    9037 	ld	a, (de)
      0026F0 32                    9038 	ld	(hl-), a
      0026F1 2A                    9039 	ld	a, (hl+)
      0026F2 5F                    9040 	ld	e, a
      0026F3 56                    9041 	ld	d, (hl)
      0026F4 F8 0D                 9042 	ldhl	sp,	#13
      0026F6 2A                    9043 	ld	a,	(hl+)
      0026F7 66                    9044 	ld	h, (hl)
      0026F8 6F                    9045 	ld	l, a
      0026F9 7B                    9046 	ld	a, e
      0026FA 95                    9047 	sub	a, l
      0026FB 5F                    9048 	ld	e, a
      0026FC 7A                    9049 	ld	a, d
      0026FD 9C                    9050 	sbc	a, h
      0026FE 47                    9051 	ld	b, a
      0026FF 4B                    9052 	ld	c, e
      002700 F8 0F                 9053 	ldhl	sp,	#15
      002702 2A                    9054 	ld	a,	(hl+)
      002703 66                    9055 	ld	h, (hl)
      002704 6F                    9056 	ld	l, a
      002705 79                    9057 	ld	a, c
      002706 22                    9058 	ld	(hl+), a
      002707 70                    9059 	ld	(hl), b
                                   9060 ;src/main.c:914: if (enemies[k].hp <= 0) {
      002708 58                    9061 	ld	e, b
      002709 AF                    9062 	xor	a, a
      00270A 57                    9063 	ld	d, a
      00270B B9                    9064 	cp	a, c
      00270C 98                    9065 	sbc	a, b
      00270D CB 7B                 9066 	bit	7, e
      00270F 28 07                 9067 	jr	Z, 00379$
      002711 CB 7A                 9068 	bit	7, d
      002713 20 08                 9069 	jr	NZ, 00380$
      002715 BF                    9070 	cp	a, a
      002716 18 05                 9071 	jr	00380$
      002718                       9072 00379$:
      002718 CB 7A                 9073 	bit	7, d
      00271A 28 01                 9074 	jr	Z, 00380$
      00271C 37                    9075 	scf
      00271D                       9076 00380$:
      00271D 38 12                 9077 	jr	C, 00189$
                                   9078 ;src/main.c:915: killEnemy(k);
      00271F F8 16                 9079 	ldhl	sp,	#22
      002721 7E                    9080 	ld	a, (hl)
      002722 F5                    9081 	push	af
      002723 33                    9082 	inc	sp
      002724 CDr66r21              9083 	call	_killEnemy
      002727 33                    9084 	inc	sp
                                   9085 ;src/main.c:916: initEnemy(k);
      002728 F8 16                 9086 	ldhl	sp,	#22
      00272A 7E                    9087 	ld	a, (hl)
      00272B F5                    9088 	push	af
      00272C 33                    9089 	inc	sp
      00272D CDr64r11              9090 	call	_initEnemy
      002730 33                    9091 	inc	sp
      002731                       9092 00189$:
                                   9093 ;src/main.c:909: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002731 F8 16                 9094 	ldhl	sp,	#22
      002733 34                    9095 	inc	(hl)
      002734 C3r12r26              9096 	jp	00188$
      002737                       9097 00119$:
                                   9098 ;src/main.c:924: eptr->hp -= pptr->damage;
      002737 D1                    9099 	pop	de
      002738 D5                    9100 	push	de
      002739 21 10 00              9101 	ld	hl, #0x0010
      00273C 19                    9102 	add	hl, de
      00273D E5                    9103 	push	hl
      00273E 7D                    9104 	ld	a, l
      00273F F8 11                 9105 	ldhl	sp,	#17
      002741 77                    9106 	ld	(hl), a
      002742 E1                    9107 	pop	hl
      002743 7C                    9108 	ld	a, h
      002744 F8 10                 9109 	ldhl	sp,	#16
      002746 32                    9110 	ld	(hl-), a
      002747 2A                    9111 	ld	a, (hl+)
      002748 5F                    9112 	ld	e, a
      002749 2A                    9113 	ld	a, (hl+)
      00274A 57                    9114 	ld	d, a
      00274B 1A                    9115 	ld	a, (de)
      00274C 22                    9116 	ld	(hl+), a
      00274D 13                    9117 	inc	de
      00274E 1A                    9118 	ld	a, (de)
      00274F 77                    9119 	ld	(hl), a
      002750 69                    9120 	ld	l, c
      002751 60                    9121 	ld	h, b
      002752 2A                    9122 	ld	a, (hl+)
      002753 4F                    9123 	ld	c, a
      002754 46                    9124 	ld	b, (hl)
      002755 F8 11                 9125 	ldhl	sp,#17
      002757 2A                    9126 	ld	a, (hl+)
      002758 5F                    9127 	ld	e, a
      002759 56                    9128 	ld	d, (hl)
      00275A 7B                    9129 	ld	a, e
      00275B 91                    9130 	sub	a, c
      00275C 5F                    9131 	ld	e, a
      00275D 7A                    9132 	ld	a, d
      00275E 98                    9133 	sbc	a, b
      00275F 47                    9134 	ld	b, a
      002760 4B                    9135 	ld	c, e
      002761 F8 0F                 9136 	ldhl	sp,	#15
      002763 2A                    9137 	ld	a,	(hl+)
      002764 66                    9138 	ld	h, (hl)
      002765 6F                    9139 	ld	l, a
      002766 79                    9140 	ld	a, c
      002767 22                    9141 	ld	(hl+), a
      002768 70                    9142 	ld	(hl), b
                                   9143 ;src/main.c:926: if (eptr->hp <= 0) {
      002769 58                    9144 	ld	e, b
      00276A AF                    9145 	xor	a, a
      00276B 57                    9146 	ld	d, a
      00276C B9                    9147 	cp	a, c
      00276D 98                    9148 	sbc	a, b
      00276E CB 7B                 9149 	bit	7, e
      002770 28 07                 9150 	jr	Z, 00381$
      002772 CB 7A                 9151 	bit	7, d
      002774 20 08                 9152 	jr	NZ, 00382$
      002776 BF                    9153 	cp	a, a
      002777 18 05                 9154 	jr	00382$
      002779                       9155 00381$:
      002779 CB 7A                 9156 	bit	7, d
      00277B 28 01                 9157 	jr	Z, 00382$
      00277D 37                    9158 	scf
      00277E                       9159 00382$:
      00277E 38 12                 9160 	jr	C, 00132$
                                   9161 ;src/main.c:928: killEnemy(i);
      002780 F8 02                 9162 	ldhl	sp,	#2
      002782 7E                    9163 	ld	a, (hl)
      002783 F5                    9164 	push	af
      002784 33                    9165 	inc	sp
      002785 CDr66r21              9166 	call	_killEnemy
      002788 33                    9167 	inc	sp
                                   9168 ;src/main.c:929: initEnemy(i);
      002789 F8 02                 9169 	ldhl	sp,	#2
      00278B 7E                    9170 	ld	a, (hl)
      00278C F5                    9171 	push	af
      00278D 33                    9172 	inc	sp
      00278E CDr64r11              9173 	call	_initEnemy
      002791 33                    9174 	inc	sp
      002792                       9175 00132$:
                                   9176 ;src/main.c:941: j++;
      002792 F8 15                 9177 	ldhl	sp,	#21
      002794 34                    9178 	inc	(hl)
                                   9179 ;src/main.c:942: pptr++;
      002795 2B                    9180 	dec	hl
      002796 2B                    9181 	dec	hl
      002797 2A                    9182 	ld	a, (hl+)
      002798 5F                    9183 	ld	e, a
      002799 56                    9184 	ld	d, (hl)
      00279A 21 0D 00              9185 	ld	hl, #0x000d
      00279D 19                    9186 	add	hl, de
      00279E E5                    9187 	push	hl
      00279F 7D                    9188 	ld	a, l
      0027A0 F8 15                 9189 	ldhl	sp,	#21
      0027A2 77                    9190 	ld	(hl), a
      0027A3 E1                    9191 	pop	hl
      0027A4 7C                    9192 	ld	a, h
      0027A5 F8 14                 9193 	ldhl	sp,	#20
      0027A7 77                    9194 	ld	(hl), a
      0027A8 C3rC1r24              9195 	jp	00133$
      0027AB                       9196 00139$:
                                   9197 ;src/main.c:948: if (enemyCollisionCount == 0) {
      0027AB FArA5r00              9198 	ld	a, (#_enemyCollisionCount)
      0027AE B7                    9199 	or	a, a
      0027AF 20 09                 9200 	jr	NZ, 00142$
                                   9201 ;src/main.c:949: enemyCollisionCount = ENEMYCOUNT - 1;
      0027B1 FAr8Er0B              9202 	ld	a, (#_ENEMYCOUNT)
      0027B4 3D                    9203 	dec	a
      0027B5 EArA5r00              9204 	ld	(#_enemyCollisionCount),a
      0027B8 18 04                 9205 	jr	00190$
      0027BA                       9206 00142$:
                                   9207 ;src/main.c:952: enemyCollisionCount--;
      0027BA 21rA5r00              9208 	ld	hl, #_enemyCollisionCount
      0027BD 35                    9209 	dec	(hl)
      0027BE                       9210 00190$:
                                   9211 ;src/main.c:957: }
      0027BE E8 17                 9212 	add	sp, #23
      0027C0 C9                    9213 	ret
                                   9214 ;src/main.c:960: void setGunIcon() {
                                   9215 ;	---------------------------------
                                   9216 ; Function setGunIcon
                                   9217 ; ---------------------------------
      0027C1                       9218 _setGunIcon::
                                   9219 ;src/main.c:962: if (currentGun == 0) {
      0027C1 FArA7r00              9220 	ld	a, (#_currentGun)
      0027C4 B7                    9221 	or	a, a
      0027C5 20 1B                 9222 	jr	NZ, 00102$
                                   9223 ;src/main.c:963: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      0027C7 01rAEr00              9224 	ld	bc, #_gunMap+0
      0027CA 79                    9225 	ld	a, c
      0027CB 21rA6r00              9226 	ld	hl, #_gunLevel
      0027CE 86                    9227 	add	a, (hl)
      0027CF 4F                    9228 	ld	c, a
      0027D0 30 01                 9229 	jr	NC, 00111$
      0027D2 04                    9230 	inc	b
      0027D3                       9231 00111$:
      0027D3 C5                    9232 	push	bc
      0027D4 21 01 01              9233 	ld	hl, #0x101
      0027D7 E5                    9234 	push	hl
      0027D8 21 0F 00              9235 	ld	hl, #0x0f
      0027DB E5                    9236 	push	hl
      0027DC CDr00r00              9237 	call	_set_win_tiles
      0027DF E8 06                 9238 	add	sp, #6
      0027E1 C9                    9239 	ret
      0027E2                       9240 00102$:
                                   9241 ;src/main.c:966: set_win_tiles(15, 0,1,1,gunMap+2);
      0027E2 11rB0r00              9242 	ld	de, #(_gunMap + 2)
      0027E5 D5                    9243 	push	de
      0027E6 21 01 01              9244 	ld	hl, #0x101
      0027E9 E5                    9245 	push	hl
      0027EA 21 0F 00              9246 	ld	hl, #0x0f
      0027ED E5                    9247 	push	hl
      0027EE CDr00r00              9248 	call	_set_win_tiles
      0027F1 E8 06                 9249 	add	sp, #6
                                   9250 ;src/main.c:968: }
      0027F3 C9                    9251 	ret
                                   9252 ;src/main.c:978: void fire() {
                                   9253 ;	---------------------------------
                                   9254 ; Function fire
                                   9255 ; ---------------------------------
      0027F4                       9256 _fire::
      0027F4 E8 FB                 9257 	add	sp, #-5
                                   9258 ;src/main.c:980: oldestProjectile += 1;
      0027F6 21r91r00              9259 	ld	hl, #_oldestProjectile
      0027F9 34                    9260 	inc	(hl)
      0027FA 7E                    9261 	ld	a, (hl)
                                   9262 ;src/main.c:981: if (oldestProjectile >= PROJECTILECOUNT) {
      0027FB 21r9Fr0B              9263 	ld	hl, #_PROJECTILECOUNT
      0027FE 4E                    9264 	ld	c, (hl)
      0027FF 21r91r00              9265 	ld	hl, #_oldestProjectile
      002802 7E                    9266 	ld	a, (hl)
      002803 91                    9267 	sub	a, c
      002804 38 02                 9268 	jr	C, 00102$
                                   9269 ;src/main.c:982: oldestProjectile = 0;
      002806 36 00                 9270 	ld	(hl), #0x00
      002808                       9271 00102$:
                                   9272 ;src/main.c:987: projectiles[oldestProjectile] = singleGun;
      002808 21r91r00              9273 	ld	hl, #_oldestProjectile
      00280B 4E                    9274 	ld	c, (hl)
      00280C 06 00                 9275 	ld	b, #0x00
      00280E 69                    9276 	ld	l, c
      00280F 60                    9277 	ld	h, b
      002810 29                    9278 	add	hl, hl
      002811 09                    9279 	add	hl, bc
      002812 29                    9280 	add	hl, hl
      002813 29                    9281 	add	hl, hl
      002814 09                    9282 	add	hl, bc
      002815 E5                    9283 	push	hl
      002816 7D                    9284 	ld	a, l
      002817 F8 05                 9285 	ldhl	sp,	#5
      002819 77                    9286 	ld	(hl), a
      00281A E1                    9287 	pop	hl
      00281B 7C                    9288 	ld	a, h
      00281C F8 04                 9289 	ldhl	sp,	#4
      00281E 77                    9290 	ld	(hl), a
                                   9291 ;src/main.c:985: if (currentGun == 0) {
      00281F FArA7r00              9292 	ld	a, (#_currentGun)
      002822 B7                    9293 	or	a, a
      002823 20 3C                 9294 	jr	NZ, 00113$
                                   9295 ;src/main.c:986: if (gunLevel == 0) {
      002825 FArA6r00              9296 	ld	a, (#_gunLevel)
      002828 B7                    9297 	or	a, a
      002829 20 1B                 9298 	jr	NZ, 00104$
                                   9299 ;src/main.c:987: projectiles[oldestProjectile] = singleGun;
      00282B 11r6Ar00              9300 	ld	de, #_singleGun+0
      00282E 01rB4r00              9301 	ld	bc, #_projectiles+0
      002831 F8 03                 9302 	ldhl	sp,	#3
      002833 2A                    9303 	ld	a,	(hl+)
      002834 66                    9304 	ld	h, (hl)
      002835 6F                    9305 	ld	l, a
      002836 09                    9306 	add	hl, bc
      002837 4D                    9307 	ld	c, l
      002838 44                    9308 	ld	b, h
      002839 21 0D 00              9309 	ld	hl, #0x000d
      00283C E5                    9310 	push	hl
      00283D D5                    9311 	push	de
      00283E C5                    9312 	push	bc
      00283F CDr00r00              9313 	call	___memcpy
      002842 E8 06                 9314 	add	sp, #6
      002844 18 61                 9315 	jr	00114$
      002846                       9316 00104$:
                                   9317 ;src/main.c:990: projectiles[oldestProjectile] = doubleGun;
      002846 11r77r00              9318 	ld	de, #_doubleGun+0
      002849 01rB4r00              9319 	ld	bc, #_projectiles+0
      00284C F8 03                 9320 	ldhl	sp,	#3
      00284E 2A                    9321 	ld	a,	(hl+)
      00284F 66                    9322 	ld	h, (hl)
      002850 6F                    9323 	ld	l, a
      002851 09                    9324 	add	hl, bc
      002852 4D                    9325 	ld	c, l
      002853 44                    9326 	ld	b, h
      002854 21 0D 00              9327 	ld	hl, #0x000d
      002857 E5                    9328 	push	hl
      002858 D5                    9329 	push	de
      002859 C5                    9330 	push	bc
      00285A CDr00r00              9331 	call	___memcpy
      00285D E8 06                 9332 	add	sp, #6
      00285F 18 46                 9333 	jr	00114$
      002861                       9334 00113$:
                                   9335 ;src/main.c:993: else if (currentGun == 1) {
      002861 FArA7r00              9336 	ld	a, (#_currentGun)
      002864 3D                    9337 	dec	a
      002865 20 40                 9338 	jr	NZ, 00114$
                                   9339 ;src/main.c:994: if (missiles == 0) {
      002867 FArA8r00              9340 	ld	a, (#_missiles)
      00286A B7                    9341 	or	a, a
      00286B 20 0B                 9342 	jr	NZ, 00107$
                                   9343 ;src/main.c:995: currentGun = 0;
      00286D 21rA7r00              9344 	ld	hl, #_currentGun
      002870 36 00                 9345 	ld	(hl), #0x00
                                   9346 ;src/main.c:996: setGunIcon();
      002872 CDrC1r27              9347 	call	_setGunIcon
                                   9348 ;src/main.c:997: return;
      002875 C3r9Fr2D              9349 	jp	00155$
      002878                       9350 00107$:
                                   9351 ;src/main.c:1000: projectiles[oldestProjectile] = missile;
      002878 11r84r00              9352 	ld	de, #_missile+0
      00287B 01rB4r00              9353 	ld	bc, #_projectiles+0
      00287E F8 03                 9354 	ldhl	sp,	#3
      002880 2A                    9355 	ld	a,	(hl+)
      002881 66                    9356 	ld	h, (hl)
      002882 6F                    9357 	ld	l, a
      002883 09                    9358 	add	hl, bc
      002884 4D                    9359 	ld	c, l
      002885 44                    9360 	ld	b, h
      002886 21 0D 00              9361 	ld	hl, #0x000d
      002889 E5                    9362 	push	hl
      00288A D5                    9363 	push	de
      00288B C5                    9364 	push	bc
      00288C CDr00r00              9365 	call	___memcpy
      00288F E8 06                 9366 	add	sp, #6
                                   9367 ;src/main.c:1001: updateMissileCount(-1);
      002891 3E FF                 9368 	ld	a, #0xff
      002893 F5                    9369 	push	af
      002894 33                    9370 	inc	sp
      002895 CDrE4r0C              9371 	call	_updateMissileCount
      002898 33                    9372 	inc	sp
                                   9373 ;src/main.c:1003: if (missiles == 0) {
      002899 FArA8r00              9374 	ld	a, (#_missiles)
      00289C B7                    9375 	or	a, a
      00289D 20 08                 9376 	jr	NZ, 00114$
                                   9377 ;src/main.c:1004: currentGun = 0;
      00289F 21rA7r00              9378 	ld	hl, #_currentGun
      0028A2 36 00                 9379 	ld	(hl), #0x00
                                   9380 ;src/main.c:1005: setGunIcon();
      0028A4 CDrC1r27              9381 	call	_setGunIcon
      0028A7                       9382 00114$:
                                   9383 ;src/main.c:1008: projectiles[oldestProjectile].x = playerDrawX;
      0028A7 21r91r00              9384 	ld	hl, #_oldestProjectile
      0028AA 4E                    9385 	ld	c, (hl)
      0028AB 06 00                 9386 	ld	b, #0x00
      0028AD 69                    9387 	ld	l, c
      0028AE 60                    9388 	ld	h, b
      0028AF 29                    9389 	add	hl, hl
      0028B0 09                    9390 	add	hl, bc
      0028B1 29                    9391 	add	hl, hl
      0028B2 29                    9392 	add	hl, hl
      0028B3 09                    9393 	add	hl, bc
      0028B4 01rB4r00              9394 	ld	bc,#_projectiles
      0028B7 09                    9395 	add	hl,bc
      0028B8 E5                    9396 	push	hl
      0028B9 FAr9Br00              9397 	ld	a, (#_playerDrawX)
      0028BC E1                    9398 	pop	hl
      0028BD 0E 00                 9399 	ld	c, #0x00
      0028BF 22                    9400 	ld	(hl+), a
      0028C0 71                    9401 	ld	(hl), c
                                   9402 ;src/main.c:1009: projectiles[oldestProjectile].y = playerDrawY;
      0028C1 21r91r00              9403 	ld	hl, #_oldestProjectile
      0028C4 4E                    9404 	ld	c, (hl)
      0028C5 06 00                 9405 	ld	b, #0x00
      0028C7 69                    9406 	ld	l, c
      0028C8 60                    9407 	ld	h, b
      0028C9 29                    9408 	add	hl, hl
      0028CA 09                    9409 	add	hl, bc
      0028CB 29                    9410 	add	hl, hl
      0028CC 29                    9411 	add	hl, hl
      0028CD 09                    9412 	add	hl, bc
      0028CE 01rB4r00              9413 	ld	bc,#_projectiles
      0028D1 09                    9414 	add	hl,bc
      0028D2 23                    9415 	inc	hl
      0028D3 23                    9416 	inc	hl
      0028D4 E5                    9417 	push	hl
      0028D5 FAr9Cr00              9418 	ld	a, (#_playerDrawY)
      0028D8 E1                    9419 	pop	hl
      0028D9 0E 00                 9420 	ld	c, #0x00
      0028DB 22                    9421 	ld	(hl+), a
      0028DC 71                    9422 	ld	(hl), c
                                   9423 ;src/main.c:1010: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      0028DD 21r91r00              9424 	ld	hl, #_oldestProjectile
      0028E0 4E                    9425 	ld	c, (hl)
      0028E1 06 00                 9426 	ld	b, #0x00
      0028E3 69                    9427 	ld	l, c
      0028E4 60                    9428 	ld	h, b
      0028E5 29                    9429 	add	hl, hl
      0028E6 09                    9430 	add	hl, bc
      0028E7 29                    9431 	add	hl, hl
      0028E8 29                    9432 	add	hl, hl
      0028E9 09                    9433 	add	hl, bc
      0028EA 01rB4r00              9434 	ld	bc,#_projectiles
      0028ED 09                    9435 	add	hl,bc
      0028EE 5D                    9436 	ld	e, l
      0028EF 54                    9437 	ld	d, h
      0028F0 21 05 00              9438 	ld	hl, #0x0005
      0028F3 19                    9439 	add	hl, de
      0028F4 4D                    9440 	ld	c, l
      0028F5 44                    9441 	ld	b, h
      0028F6 21 07 00              9442 	ld	hl, #0x0007
      0028F9 19                    9443 	add	hl, de
      0028FA 7E                    9444 	ld	a, (hl)
      0028FB C5                    9445 	push	bc
      0028FC F5                    9446 	push	af
      0028FD 33                    9447 	inc	sp
      0028FE FAr93r00              9448 	ld	a, (#_xDir)
      002901 F5                    9449 	push	af
      002902 33                    9450 	inc	sp
      002903 CDr00r00              9451 	call	__muluschar
      002906 E1                    9452 	pop	hl
      002907 7B                    9453 	ld	a, e
      002908 C1                    9454 	pop	bc
      002909 02                    9455 	ld	(bc), a
                                   9456 ;src/main.c:1011: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      00290A 21r91r00              9457 	ld	hl, #_oldestProjectile
      00290D 4E                    9458 	ld	c, (hl)
      00290E 06 00                 9459 	ld	b, #0x00
      002910 69                    9460 	ld	l, c
      002911 60                    9461 	ld	h, b
      002912 29                    9462 	add	hl, hl
      002913 09                    9463 	add	hl, bc
      002914 29                    9464 	add	hl, hl
      002915 29                    9465 	add	hl, hl
      002916 09                    9466 	add	hl, bc
      002917 01rB4r00              9467 	ld	bc,#_projectiles
      00291A 09                    9468 	add	hl,bc
      00291B 5D                    9469 	ld	e, l
      00291C 54                    9470 	ld	d, h
      00291D 21 06 00              9471 	ld	hl, #0x0006
      002920 19                    9472 	add	hl, de
      002921 4D                    9473 	ld	c, l
      002922 44                    9474 	ld	b, h
      002923 21 07 00              9475 	ld	hl, #0x0007
      002926 19                    9476 	add	hl, de
      002927 7E                    9477 	ld	a, (hl)
      002928 C5                    9478 	push	bc
      002929 F5                    9479 	push	af
      00292A 33                    9480 	inc	sp
      00292B FAr94r00              9481 	ld	a, (#_yDir)
      00292E F5                    9482 	push	af
      00292F 33                    9483 	inc	sp
      002930 CDr00r00              9484 	call	__muluschar
      002933 E1                    9485 	pop	hl
      002934 7B                    9486 	ld	a, e
      002935 C1                    9487 	pop	bc
      002936 02                    9488 	ld	(bc), a
                                   9489 ;src/main.c:980: oldestProjectile += 1;
      002937 FAr91r00              9490 	ld	a, (#_oldestProjectile)
      00293A F8 04                 9491 	ldhl	sp,	#4
      00293C 77                    9492 	ld	(hl), a
                                   9493 ;src/main.c:987: projectiles[oldestProjectile] = singleGun;
      00293D 21r91r00              9494 	ld	hl, #_oldestProjectile
      002940 4E                    9495 	ld	c, (hl)
      002941 06 00                 9496 	ld	b, #0x00
      002943 69                    9497 	ld	l, c
      002944 60                    9498 	ld	h, b
      002945 29                    9499 	add	hl, hl
      002946 09                    9500 	add	hl, bc
      002947 29                    9501 	add	hl, hl
      002948 29                    9502 	add	hl, hl
      002949 09                    9503 	add	hl, bc
                                   9504 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00294A 01rB4r00              9505 	ld	bc,#_projectiles
      00294D 09                    9506 	add	hl,bc
      00294E 4D                    9507 	ld	c, l
      00294F 44                    9508 	ld	b, h
      002950 F8 04                 9509 	ldhl	sp,	#4
      002952 3A                    9510 	ld	a, (hl-)
      002953 C6 1E                 9511 	add	a, #0x1e
      002955 77                    9512 	ld	(hl), a
      002956 21 0C 00              9513 	ld	hl, #0x000c
      002959 09                    9514 	add	hl, bc
      00295A 7E                    9515 	ld	a, (hl)
      00295B F8 04                 9516 	ldhl	sp,	#4
      00295D 77                    9517 	ld	(hl), a
                                   9518 ;src/main.c:1015: if (yDir != 0 && xDir == 0) {
      00295E FAr94r00              9519 	ld	a, (#_yDir)
      002961 B7                    9520 	or	a, a
      002962 28 71                 9521 	jr	Z, 00141$
      002964 FAr93r00              9522 	ld	a, (#_xDir)
      002967 B7                    9523 	or	a, a
      002968 20 6B                 9524 	jr	NZ, 00141$
                                   9525 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00296A F8 04                 9526 	ldhl	sp,	#4
      00296C 3A                    9527 	ld	a, (hl-)
      00296D 4F                    9528 	ld	c, a
                                   9529 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00296E 6E                    9530 	ld	l, (hl)
                                   9531 ;	spillPairReg hl
                                   9532 ;	spillPairReg hl
      00296F 26 00                 9533 	ld	h, #0x00
                                   9534 ;	spillPairReg hl
                                   9535 ;	spillPairReg hl
      002971 29                    9536 	add	hl, hl
      002972 29                    9537 	add	hl, hl
      002973 11r00r00              9538 	ld	de, #_shadow_OAM
      002976 19                    9539 	add	hl, de
      002977 23                    9540 	inc	hl
      002978 23                    9541 	inc	hl
      002979 71                    9542 	ld	(hl), c
                                   9543 ;src/main.c:980: oldestProjectile += 1;
      00297A FAr91r00              9544 	ld	a, (#_oldestProjectile)
                                   9545 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00297D C6 1E                 9546 	add	a, #0x1e
      00297F 4F                    9547 	ld	c, a
                                   9548 ;src/main.c:1017: if (yDir == 1) {
      002980 FAr94r00              9549 	ld	a, (#_yDir)
                                   9550 ;src/main.c:1018: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   9551 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002983 3D                    9552 	dec	a
      002984 20 27                 9553 	jr	NZ, 00116$
      002986 67                    9554 	ld	h,a
                                   9555 ;	spillPairReg hl
                                   9556 ;	spillPairReg hl
      002987 69                    9557 	ld	l, c
      002988 29                    9558 	add	hl, hl
      002989 29                    9559 	add	hl, hl
      00298A 11r00r00              9560 	ld	de, #_shadow_OAM
      00298D 19                    9561 	add	hl, de
      00298E 23                    9562 	inc	hl
      00298F 23                    9563 	inc	hl
      002990 23                    9564 	inc	hl
      002991 36 40                 9565 	ld	(hl), #0x40
                                   9566 ;src/main.c:1019: projectiles[oldestProjectile].offset = 4;
      002993 21r91r00              9567 	ld	hl, #_oldestProjectile
      002996 4E                    9568 	ld	c, (hl)
      002997 06 00                 9569 	ld	b, #0x00
      002999 69                    9570 	ld	l, c
      00299A 60                    9571 	ld	h, b
      00299B 29                    9572 	add	hl, hl
      00299C 09                    9573 	add	hl, bc
      00299D 29                    9574 	add	hl, hl
      00299E 29                    9575 	add	hl, hl
      00299F 09                    9576 	add	hl, bc
      0029A0 01rB4r00              9577 	ld	bc,#_projectiles
      0029A3 09                    9578 	add	hl,bc
      0029A4 01 04 00              9579 	ld	bc, #0x0004
      0029A7 09                    9580 	add	hl, bc
      0029A8 36 04                 9581 	ld	(hl), #0x04
      0029AA C3r86r2D              9582 	jp	00142$
      0029AD                       9583 00116$:
                                   9584 ;src/main.c:1022: set_sprite_prop(30+oldestProjectile, 0); 
                                   9585 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0029AD 26 00                 9586 	ld	h, #0x00
                                   9587 ;	spillPairReg hl
                                   9588 ;	spillPairReg hl
      0029AF 69                    9589 	ld	l, c
      0029B0 29                    9590 	add	hl, hl
      0029B1 29                    9591 	add	hl, hl
      0029B2 11r00r00              9592 	ld	de, #_shadow_OAM
      0029B5 19                    9593 	add	hl, de
      0029B6 23                    9594 	inc	hl
      0029B7 23                    9595 	inc	hl
      0029B8 23                    9596 	inc	hl
      0029B9 36 00                 9597 	ld	(hl), #0x00
                                   9598 ;src/main.c:1023: projectiles[oldestProjectile].offset = 12;
      0029BB 21r91r00              9599 	ld	hl, #_oldestProjectile
      0029BE 4E                    9600 	ld	c, (hl)
      0029BF 06 00                 9601 	ld	b, #0x00
      0029C1 69                    9602 	ld	l, c
      0029C2 60                    9603 	ld	h, b
      0029C3 29                    9604 	add	hl, hl
      0029C4 09                    9605 	add	hl, bc
      0029C5 29                    9606 	add	hl, hl
      0029C6 29                    9607 	add	hl, hl
      0029C7 09                    9608 	add	hl, bc
      0029C8 01rB4r00              9609 	ld	bc,#_projectiles
      0029CB 09                    9610 	add	hl,bc
      0029CC 01 04 00              9611 	ld	bc, #0x0004
      0029CF 09                    9612 	add	hl, bc
      0029D0 36 0C                 9613 	ld	(hl), #0x0c
      0029D2 C3r86r2D              9614 	jp	00142$
      0029D5                       9615 00141$:
                                   9616 ;src/main.c:1027: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   9617 ;src/main.c:1026: else if (xDir != 0 && yDir == 0) {
      0029D5 FAr93r00              9618 	ld	a, (#_xDir)
      0029D8 B7                    9619 	or	a, a
      0029D9 CAr1Fr2B              9620 	jp	Z, 00137$
      0029DC FAr94r00              9621 	ld	a, (#_yDir)
      0029DF B7                    9622 	or	a, a
      0029E0 C2r1Fr2B              9623 	jp	NZ, 00137$
                                   9624 ;src/main.c:1027: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      0029E3 F8 04                 9625 	ldhl	sp,	#4
      0029E5 34                    9626 	inc	(hl)
      0029E6 34                    9627 	inc	(hl)
      0029E7 2B                    9628 	dec	hl
                                   9629 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0029E8 3A                    9630 	ld	a, (hl-)
      0029E9 22                    9631 	ld	(hl+), a
      0029EA 36 00                 9632 	ld	(hl), #0x00
      0029EC 3E 02                 9633 	ld	a, #0x02
      0029EE                       9634 00261$:
      0029EE F8 02                 9635 	ldhl	sp,	#2
      0029F0 CB 26                 9636 	sla	(hl)
      0029F2 23                    9637 	inc	hl
      0029F3 CB 16                 9638 	rl	(hl)
      0029F5 3D                    9639 	dec	a
      0029F6 20 F6                 9640 	jr	NZ, 00261$
      0029F8 2B                    9641 	dec	hl
      0029F9 2A                    9642 	ld	a, (hl+)
      0029FA 5F                    9643 	ld	e, a
      0029FB 56                    9644 	ld	d, (hl)
      0029FC 21r00r00              9645 	ld	hl, #_shadow_OAM
      0029FF 19                    9646 	add	hl, de
      002A00 33                    9647 	inc	sp
      002A01 33                    9648 	inc	sp
      002A02 5D                    9649 	ld	e, l
      002A03 54                    9650 	ld	d, h
      002A04 D5                    9651 	push	de
      002A05 21 02 00              9652 	ld	hl, #0x0002
      002A08 19                    9653 	add	hl, de
      002A09 E5                    9654 	push	hl
      002A0A 7D                    9655 	ld	a, l
      002A0B F8 04                 9656 	ldhl	sp,	#4
      002A0D 77                    9657 	ld	(hl), a
      002A0E E1                    9658 	pop	hl
      002A0F 7C                    9659 	ld	a, h
      002A10 F8 03                 9660 	ldhl	sp,	#3
      002A12 32                    9661 	ld	(hl-), a
      002A13 2A                    9662 	ld	a, (hl+)
      002A14 5F                    9663 	ld	e, a
      002A15 2A                    9664 	ld	a, (hl+)
      002A16 57                    9665 	ld	d, a
      002A17 7E                    9666 	ld	a, (hl)
      002A18 12                    9667 	ld	(de), a
                                   9668 ;src/main.c:980: oldestProjectile += 1;
      002A19 FAr91r00              9669 	ld	a, (#_oldestProjectile)
      002A1C F8 04                 9670 	ldhl	sp,	#4
      002A1E 77                    9671 	ld	(hl), a
                                   9672 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002A1F 7E                    9673 	ld	a, (hl)
      002A20 C6 1E                 9674 	add	a, #0x1e
      002A22 77                    9675 	ld	(hl), a
                                   9676 ;src/main.c:1028: if (xDir == 1) {
      002A23 FAr93r00              9677 	ld	a, (#_xDir)
      002A26 3D                    9678 	dec	a
      002A27 20 7B                 9679 	jr	NZ, 00119$
                                   9680 ;src/main.c:1029: set_sprite_prop(30+oldestProjectile, 0);
      002A29 F8 04                 9681 	ldhl	sp,	#4
                                   9682 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002A2B 3A                    9683 	ld	a, (hl-)
      002A2C 22                    9684 	ld	(hl+), a
      002A2D 36 00                 9685 	ld	(hl), #0x00
      002A2F 3E 02                 9686 	ld	a, #0x02
      002A31                       9687 00264$:
      002A31 F8 03                 9688 	ldhl	sp,	#3
      002A33 CB 26                 9689 	sla	(hl)
      002A35 23                    9690 	inc	hl
      002A36 CB 16                 9691 	rl	(hl)
      002A38 3D                    9692 	dec	a
      002A39 20 F6                 9693 	jr	NZ, 00264$
      002A3B 2B                    9694 	dec	hl
      002A3C 2A                    9695 	ld	a, (hl+)
      002A3D 5F                    9696 	ld	e, a
      002A3E 56                    9697 	ld	d, (hl)
      002A3F 21r00r00              9698 	ld	hl, #_shadow_OAM
      002A42 19                    9699 	add	hl, de
      002A43 E5                    9700 	push	hl
      002A44 7D                    9701 	ld	a, l
      002A45 F8 03                 9702 	ldhl	sp,	#3
      002A47 77                    9703 	ld	(hl), a
      002A48 E1                    9704 	pop	hl
      002A49 7C                    9705 	ld	a, h
      002A4A F8 02                 9706 	ldhl	sp,	#2
      002A4C 32                    9707 	ld	(hl-), a
      002A4D 2A                    9708 	ld	a, (hl+)
      002A4E 5F                    9709 	ld	e, a
      002A4F 56                    9710 	ld	d, (hl)
      002A50 21 03 00              9711 	ld	hl, #0x0003
      002A53 19                    9712 	add	hl, de
      002A54 E5                    9713 	push	hl
      002A55 7D                    9714 	ld	a, l
      002A56 F8 05                 9715 	ldhl	sp,	#5
      002A58 77                    9716 	ld	(hl), a
      002A59 E1                    9717 	pop	hl
      002A5A 7C                    9718 	ld	a, h
      002A5B F8 04                 9719 	ldhl	sp,	#4
      002A5D 32                    9720 	ld	(hl-), a
      002A5E 2A                    9721 	ld	a,	(hl+)
      002A5F 66                    9722 	ld	h, (hl)
      002A60 6F                    9723 	ld	l, a
      002A61 36 00                 9724 	ld	(hl), #0x00
                                   9725 ;src/main.c:1030: projectiles[oldestProjectile].offset = 12;
      002A63 21r91r00              9726 	ld	hl, #_oldestProjectile
      002A66 4E                    9727 	ld	c, (hl)
      002A67 06 00                 9728 	ld	b, #0x00
      002A69 69                    9729 	ld	l, c
      002A6A 60                    9730 	ld	h, b
      002A6B 29                    9731 	add	hl, hl
      002A6C 09                    9732 	add	hl, bc
      002A6D 29                    9733 	add	hl, hl
      002A6E 29                    9734 	add	hl, hl
      002A6F 09                    9735 	add	hl, bc
      002A70 E5                    9736 	push	hl
      002A71 7D                    9737 	ld	a, l
      002A72 F8 05                 9738 	ldhl	sp,	#5
      002A74 77                    9739 	ld	(hl), a
      002A75 E1                    9740 	pop	hl
      002A76 7C                    9741 	ld	a, h
      002A77 F8 04                 9742 	ldhl	sp,	#4
      002A79 32                    9743 	ld	(hl-), a
      002A7A 2A                    9744 	ld	a, (hl+)
      002A7B 5F                    9745 	ld	e, a
      002A7C 56                    9746 	ld	d, (hl)
      002A7D 21rB4r00              9747 	ld	hl, #_projectiles
      002A80 19                    9748 	add	hl, de
      002A81 E5                    9749 	push	hl
      002A82 7D                    9750 	ld	a, l
      002A83 F8 03                 9751 	ldhl	sp,	#3
      002A85 77                    9752 	ld	(hl), a
      002A86 E1                    9753 	pop	hl
      002A87 7C                    9754 	ld	a, h
      002A88 F8 02                 9755 	ldhl	sp,	#2
      002A8A 32                    9756 	ld	(hl-), a
      002A8B 2A                    9757 	ld	a, (hl+)
      002A8C 5F                    9758 	ld	e, a
      002A8D 56                    9759 	ld	d, (hl)
      002A8E 21 04 00              9760 	ld	hl, #0x0004
      002A91 19                    9761 	add	hl, de
      002A92 E5                    9762 	push	hl
      002A93 7D                    9763 	ld	a, l
      002A94 F8 05                 9764 	ldhl	sp,	#5
      002A96 77                    9765 	ld	(hl), a
      002A97 E1                    9766 	pop	hl
      002A98 7C                    9767 	ld	a, h
      002A99 F8 04                 9768 	ldhl	sp,	#4
      002A9B 32                    9769 	ld	(hl-), a
      002A9C 2A                    9770 	ld	a,	(hl+)
      002A9D 66                    9771 	ld	h, (hl)
      002A9E 6F                    9772 	ld	l, a
      002A9F 36 0C                 9773 	ld	(hl), #0x0c
      002AA1 C3r86r2D              9774 	jp	00142$
      002AA4                       9775 00119$:
                                   9776 ;src/main.c:1033: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002AA4 F8 04                 9777 	ldhl	sp,	#4
                                   9778 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002AA6 3A                    9779 	ld	a, (hl-)
      002AA7 22                    9780 	ld	(hl+), a
      002AA8 36 00                 9781 	ld	(hl), #0x00
      002AAA 3E 02                 9782 	ld	a, #0x02
      002AAC                       9783 00265$:
      002AAC F8 03                 9784 	ldhl	sp,	#3
      002AAE CB 26                 9785 	sla	(hl)
      002AB0 23                    9786 	inc	hl
      002AB1 CB 16                 9787 	rl	(hl)
      002AB3 3D                    9788 	dec	a
      002AB4 20 F6                 9789 	jr	NZ, 00265$
      002AB6 2B                    9790 	dec	hl
      002AB7 2A                    9791 	ld	a, (hl+)
      002AB8 5F                    9792 	ld	e, a
      002AB9 56                    9793 	ld	d, (hl)
      002ABA 21r00r00              9794 	ld	hl, #_shadow_OAM
      002ABD 19                    9795 	add	hl, de
      002ABE E5                    9796 	push	hl
      002ABF 7D                    9797 	ld	a, l
      002AC0 F8 03                 9798 	ldhl	sp,	#3
      002AC2 77                    9799 	ld	(hl), a
      002AC3 E1                    9800 	pop	hl
      002AC4 7C                    9801 	ld	a, h
      002AC5 F8 02                 9802 	ldhl	sp,	#2
      002AC7 32                    9803 	ld	(hl-), a
      002AC8 2A                    9804 	ld	a, (hl+)
      002AC9 5F                    9805 	ld	e, a
      002ACA 56                    9806 	ld	d, (hl)
      002ACB 21 03 00              9807 	ld	hl, #0x0003
      002ACE 19                    9808 	add	hl, de
      002ACF E5                    9809 	push	hl
      002AD0 7D                    9810 	ld	a, l
      002AD1 F8 05                 9811 	ldhl	sp,	#5
      002AD3 77                    9812 	ld	(hl), a
      002AD4 E1                    9813 	pop	hl
      002AD5 7C                    9814 	ld	a, h
      002AD6 F8 04                 9815 	ldhl	sp,	#4
      002AD8 32                    9816 	ld	(hl-), a
      002AD9 2A                    9817 	ld	a,	(hl+)
      002ADA 66                    9818 	ld	h, (hl)
      002ADB 6F                    9819 	ld	l, a
      002ADC 36 20                 9820 	ld	(hl), #0x20
                                   9821 ;src/main.c:1034: projectiles[oldestProjectile].offset = 12;
      002ADE 21r91r00              9822 	ld	hl, #_oldestProjectile
      002AE1 4E                    9823 	ld	c, (hl)
      002AE2 06 00                 9824 	ld	b, #0x00
      002AE4 69                    9825 	ld	l, c
      002AE5 60                    9826 	ld	h, b
      002AE6 29                    9827 	add	hl, hl
      002AE7 09                    9828 	add	hl, bc
      002AE8 29                    9829 	add	hl, hl
      002AE9 29                    9830 	add	hl, hl
      002AEA 09                    9831 	add	hl, bc
      002AEB E5                    9832 	push	hl
      002AEC 7D                    9833 	ld	a, l
      002AED F8 05                 9834 	ldhl	sp,	#5
      002AEF 77                    9835 	ld	(hl), a
      002AF0 E1                    9836 	pop	hl
      002AF1 7C                    9837 	ld	a, h
      002AF2 F8 04                 9838 	ldhl	sp,	#4
      002AF4 32                    9839 	ld	(hl-), a
      002AF5 2A                    9840 	ld	a, (hl+)
      002AF6 5F                    9841 	ld	e, a
      002AF7 56                    9842 	ld	d, (hl)
      002AF8 21rB4r00              9843 	ld	hl, #_projectiles
      002AFB 19                    9844 	add	hl, de
      002AFC E5                    9845 	push	hl
      002AFD 7D                    9846 	ld	a, l
      002AFE F8 03                 9847 	ldhl	sp,	#3
      002B00 77                    9848 	ld	(hl), a
      002B01 E1                    9849 	pop	hl
      002B02 7C                    9850 	ld	a, h
      002B03 F8 02                 9851 	ldhl	sp,	#2
      002B05 32                    9852 	ld	(hl-), a
      002B06 2A                    9853 	ld	a, (hl+)
      002B07 5F                    9854 	ld	e, a
      002B08 56                    9855 	ld	d, (hl)
      002B09 21 04 00              9856 	ld	hl, #0x0004
      002B0C 19                    9857 	add	hl, de
      002B0D E5                    9858 	push	hl
      002B0E 7D                    9859 	ld	a, l
      002B0F F8 05                 9860 	ldhl	sp,	#5
      002B11 77                    9861 	ld	(hl), a
      002B12 E1                    9862 	pop	hl
      002B13 7C                    9863 	ld	a, h
      002B14 F8 04                 9864 	ldhl	sp,	#4
      002B16 32                    9865 	ld	(hl-), a
      002B17 2A                    9866 	ld	a,	(hl+)
      002B18 66                    9867 	ld	h, (hl)
      002B19 6F                    9868 	ld	l, a
      002B1A 36 0C                 9869 	ld	(hl), #0x0c
      002B1C C3r86r2D              9870 	jp	00142$
      002B1F                       9871 00137$:
                                   9872 ;src/main.c:1038: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      002B1F F8 04                 9873 	ldhl	sp,	#4
      002B21 7E                    9874 	ld	a, (hl)
      002B22 C6 04                 9875 	add	a, #0x04
      002B24 F8 00                 9876 	ldhl	sp,	#0
      002B26 77                    9877 	ld	(hl), a
      002B27 F8 03                 9878 	ldhl	sp,	#3
                                   9879 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002B29 7E                    9880 	ld	a, (hl)
      002B2A 22                    9881 	ld	(hl+), a
      002B2B 36 00                 9882 	ld	(hl), #0x00
      002B2D 3E 02                 9883 	ld	a, #0x02
      002B2F                       9884 00266$:
      002B2F F8 03                 9885 	ldhl	sp,	#3
      002B31 CB 26                 9886 	sla	(hl)
      002B33 23                    9887 	inc	hl
      002B34 CB 16                 9888 	rl	(hl)
      002B36 3D                    9889 	dec	a
      002B37 20 F6                 9890 	jr	NZ, 00266$
      002B39 2B                    9891 	dec	hl
      002B3A 2A                    9892 	ld	a, (hl+)
      002B3B 5F                    9893 	ld	e, a
      002B3C 56                    9894 	ld	d, (hl)
      002B3D 21r00r00              9895 	ld	hl, #_shadow_OAM
      002B40 19                    9896 	add	hl, de
      002B41 E5                    9897 	push	hl
      002B42 7D                    9898 	ld	a, l
      002B43 F8 03                 9899 	ldhl	sp,	#3
      002B45 77                    9900 	ld	(hl), a
      002B46 E1                    9901 	pop	hl
      002B47 7C                    9902 	ld	a, h
      002B48 F8 02                 9903 	ldhl	sp,	#2
      002B4A 32                    9904 	ld	(hl-), a
      002B4B 2A                    9905 	ld	a, (hl+)
      002B4C 5F                    9906 	ld	e, a
      002B4D 56                    9907 	ld	d, (hl)
      002B4E 21 02 00              9908 	ld	hl, #0x0002
      002B51 19                    9909 	add	hl, de
      002B52 E5                    9910 	push	hl
      002B53 7D                    9911 	ld	a, l
      002B54 F8 05                 9912 	ldhl	sp,	#5
      002B56 77                    9913 	ld	(hl), a
      002B57 E1                    9914 	pop	hl
      002B58 7C                    9915 	ld	a, h
      002B59 F8 04                 9916 	ldhl	sp,	#4
      002B5B 32                    9917 	ld	(hl-), a
      002B5C 2A                    9918 	ld	a, (hl+)
      002B5D 5F                    9919 	ld	e, a
      002B5E 56                    9920 	ld	d, (hl)
      002B5F F8 00                 9921 	ldhl	sp,	#0
      002B61 7E                    9922 	ld	a, (hl)
      002B62 12                    9923 	ld	(de), a
                                   9924 ;src/main.c:1039: if (xDir == 1 && yDir == -1) {
      002B63 FAr93r00              9925 	ld	a, (#_xDir)
      002B66 3D                    9926 	dec	a
      002B67 3E 01                 9927 	ld	a, #0x01
      002B69 28 01                 9928 	jr	Z, 00268$
      002B6B AF                    9929 	xor	a, a
      002B6C                       9930 00268$:
      002B6C F8 04                 9931 	ldhl	sp,	#4
      002B6E 77                    9932 	ld	(hl), a
                                   9933 ;src/main.c:980: oldestProjectile += 1;
      002B6F 21r91r00              9934 	ld	hl, #_oldestProjectile
      002B72 4E                    9935 	ld	c, (hl)
                                   9936 ;src/main.c:1039: if (xDir == 1 && yDir == -1) {
      002B73 FAr94r00              9937 	ld	a, (#_yDir)
      002B76 3C                    9938 	inc	a
      002B77 3E 01                 9939 	ld	a, #0x01
      002B79 28 01                 9940 	jr	Z, 00270$
      002B7B AF                    9941 	xor	a, a
      002B7C                       9942 00270$:
      002B7C F8 01                 9943 	ldhl	sp,	#1
                                   9944 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002B7E 22                    9945 	ld	(hl+), a
      002B7F 79                    9946 	ld	a, c
      002B80 C6 1E                 9947 	add	a, #0x1e
                                   9948 ;src/main.c:1039: if (xDir == 1 && yDir == -1) {
      002B82 22                    9949 	ld	(hl+), a
      002B83 23                    9950 	inc	hl
      002B84 7E                    9951 	ld	a, (hl)
      002B85 B7                    9952 	or	a, a
      002B86 CAr09r2C              9953 	jp	Z, 00133$
      002B89 F8 01                 9954 	ldhl	sp,	#1
      002B8B 7E                    9955 	ld	a, (hl)
      002B8C B7                    9956 	or	a, a
      002B8D 28 7A                 9957 	jr	Z, 00133$
                                   9958 ;src/main.c:1040: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002B8F 23                    9959 	inc	hl
                                   9960 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002B90 2A                    9961 	ld	a, (hl+)
      002B91 22                    9962 	ld	(hl+), a
      002B92 36 00                 9963 	ld	(hl), #0x00
      002B94 3E 02                 9964 	ld	a, #0x02
      002B96                       9965 00271$:
      002B96 F8 03                 9966 	ldhl	sp,	#3
      002B98 CB 26                 9967 	sla	(hl)
      002B9A 23                    9968 	inc	hl
      002B9B CB 16                 9969 	rl	(hl)
      002B9D 3D                    9970 	dec	a
      002B9E 20 F6                 9971 	jr	NZ, 00271$
      002BA0 2B                    9972 	dec	hl
      002BA1 2A                    9973 	ld	a, (hl+)
      002BA2 5F                    9974 	ld	e, a
      002BA3 56                    9975 	ld	d, (hl)
      002BA4 21r00r00              9976 	ld	hl, #_shadow_OAM
      002BA7 19                    9977 	add	hl, de
      002BA8 E5                    9978 	push	hl
      002BA9 7D                    9979 	ld	a, l
      002BAA F8 03                 9980 	ldhl	sp,	#3
      002BAC 77                    9981 	ld	(hl), a
      002BAD E1                    9982 	pop	hl
      002BAE 7C                    9983 	ld	a, h
      002BAF F8 02                 9984 	ldhl	sp,	#2
      002BB1 32                    9985 	ld	(hl-), a
      002BB2 2A                    9986 	ld	a, (hl+)
      002BB3 5F                    9987 	ld	e, a
      002BB4 56                    9988 	ld	d, (hl)
      002BB5 21 03 00              9989 	ld	hl, #0x0003
      002BB8 19                    9990 	add	hl, de
      002BB9 E5                    9991 	push	hl
      002BBA 7D                    9992 	ld	a, l
      002BBB F8 05                 9993 	ldhl	sp,	#5
      002BBD 77                    9994 	ld	(hl), a
      002BBE E1                    9995 	pop	hl
      002BBF 7C                    9996 	ld	a, h
      002BC0 F8 04                 9997 	ldhl	sp,	#4
      002BC2 32                    9998 	ld	(hl-), a
      002BC3 2A                    9999 	ld	a,	(hl+)
      002BC4 66                   10000 	ld	h, (hl)
      002BC5 6F                   10001 	ld	l, a
      002BC6 36 00                10002 	ld	(hl), #0x00
                                  10003 ;src/main.c:1041: projectiles[oldestProjectile].offset = 12;
      002BC8 21r91r00             10004 	ld	hl, #_oldestProjectile
      002BCB 4E                   10005 	ld	c, (hl)
      002BCC 06 00                10006 	ld	b, #0x00
      002BCE 69                   10007 	ld	l, c
      002BCF 60                   10008 	ld	h, b
      002BD0 29                   10009 	add	hl, hl
      002BD1 09                   10010 	add	hl, bc
      002BD2 29                   10011 	add	hl, hl
      002BD3 29                   10012 	add	hl, hl
      002BD4 09                   10013 	add	hl, bc
      002BD5 E5                   10014 	push	hl
      002BD6 7D                   10015 	ld	a, l
      002BD7 F8 05                10016 	ldhl	sp,	#5
      002BD9 77                   10017 	ld	(hl), a
      002BDA E1                   10018 	pop	hl
      002BDB 7C                   10019 	ld	a, h
      002BDC F8 04                10020 	ldhl	sp,	#4
      002BDE 32                   10021 	ld	(hl-), a
      002BDF 2A                   10022 	ld	a, (hl+)
      002BE0 5F                   10023 	ld	e, a
      002BE1 56                   10024 	ld	d, (hl)
      002BE2 21rB4r00             10025 	ld	hl, #_projectiles
      002BE5 19                   10026 	add	hl, de
      002BE6 E5                   10027 	push	hl
      002BE7 7D                   10028 	ld	a, l
      002BE8 F8 03                10029 	ldhl	sp,	#3
      002BEA 77                   10030 	ld	(hl), a
      002BEB E1                   10031 	pop	hl
      002BEC 7C                   10032 	ld	a, h
      002BED F8 02                10033 	ldhl	sp,	#2
      002BEF 32                   10034 	ld	(hl-), a
      002BF0 2A                   10035 	ld	a, (hl+)
      002BF1 5F                   10036 	ld	e, a
      002BF2 56                   10037 	ld	d, (hl)
      002BF3 21 04 00             10038 	ld	hl, #0x0004
      002BF6 19                   10039 	add	hl, de
      002BF7 E5                   10040 	push	hl
      002BF8 7D                   10041 	ld	a, l
      002BF9 F8 05                10042 	ldhl	sp,	#5
      002BFB 77                   10043 	ld	(hl), a
      002BFC E1                   10044 	pop	hl
      002BFD 7C                   10045 	ld	a, h
      002BFE F8 04                10046 	ldhl	sp,	#4
      002C00 32                   10047 	ld	(hl-), a
      002C01 2A                   10048 	ld	a,	(hl+)
      002C02 66                   10049 	ld	h, (hl)
      002C03 6F                   10050 	ld	l, a
      002C04 36 0C                10051 	ld	(hl), #0x0c
      002C06 C3r86r2D             10052 	jp	00142$
      002C09                      10053 00133$:
                                  10054 ;src/main.c:1017: if (yDir == 1) {
      002C09 FAr94r00             10055 	ld	a, (#_yDir)
      002C0C 3D                   10056 	dec	a
      002C0D 3E 01                10057 	ld	a, #0x01
      002C0F 28 01                10058 	jr	Z, 00273$
      002C11 AF                   10059 	xor	a, a
      002C12                      10060 00273$:
      002C12 F8 03                10061 	ldhl	sp,	#3
                                  10062 ;src/main.c:1043: else if (xDir == 1 && yDir == 1) {
      002C14 22                   10063 	ld	(hl+), a
      002C15 7E                   10064 	ld	a, (hl)
      002C16 B7                   10065 	or	a, a
      002C17 CAr99r2C             10066 	jp	Z, 00129$
      002C1A 2B                   10067 	dec	hl
      002C1B 7E                   10068 	ld	a, (hl)
      002C1C B7                   10069 	or	a, a
      002C1D 28 7A                10070 	jr	Z, 00129$
                                  10071 ;src/main.c:1044: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      002C1F 2B                   10072 	dec	hl
                                  10073 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002C20 2A                   10074 	ld	a, (hl+)
      002C21 22                   10075 	ld	(hl+), a
      002C22 36 00                10076 	ld	(hl), #0x00
      002C24 3E 02                10077 	ld	a, #0x02
      002C26                      10078 00274$:
      002C26 F8 03                10079 	ldhl	sp,	#3
      002C28 CB 26                10080 	sla	(hl)
      002C2A 23                   10081 	inc	hl
      002C2B CB 16                10082 	rl	(hl)
      002C2D 3D                   10083 	dec	a
      002C2E 20 F6                10084 	jr	NZ, 00274$
      002C30 2B                   10085 	dec	hl
      002C31 2A                   10086 	ld	a, (hl+)
      002C32 5F                   10087 	ld	e, a
      002C33 56                   10088 	ld	d, (hl)
      002C34 21r00r00             10089 	ld	hl, #_shadow_OAM
      002C37 19                   10090 	add	hl, de
      002C38 E5                   10091 	push	hl
      002C39 7D                   10092 	ld	a, l
      002C3A F8 03                10093 	ldhl	sp,	#3
      002C3C 77                   10094 	ld	(hl), a
      002C3D E1                   10095 	pop	hl
      002C3E 7C                   10096 	ld	a, h
      002C3F F8 02                10097 	ldhl	sp,	#2
      002C41 32                   10098 	ld	(hl-), a
      002C42 2A                   10099 	ld	a, (hl+)
      002C43 5F                   10100 	ld	e, a
      002C44 56                   10101 	ld	d, (hl)
      002C45 21 03 00             10102 	ld	hl, #0x0003
      002C48 19                   10103 	add	hl, de
      002C49 E5                   10104 	push	hl
      002C4A 7D                   10105 	ld	a, l
      002C4B F8 05                10106 	ldhl	sp,	#5
      002C4D 77                   10107 	ld	(hl), a
      002C4E E1                   10108 	pop	hl
      002C4F 7C                   10109 	ld	a, h
      002C50 F8 04                10110 	ldhl	sp,	#4
      002C52 32                   10111 	ld	(hl-), a
      002C53 2A                   10112 	ld	a,	(hl+)
      002C54 66                   10113 	ld	h, (hl)
      002C55 6F                   10114 	ld	l, a
      002C56 36 40                10115 	ld	(hl), #0x40
                                  10116 ;src/main.c:1045: projectiles[oldestProjectile].offset = 4;
      002C58 21r91r00             10117 	ld	hl, #_oldestProjectile
      002C5B 4E                   10118 	ld	c, (hl)
      002C5C 06 00                10119 	ld	b, #0x00
      002C5E 69                   10120 	ld	l, c
      002C5F 60                   10121 	ld	h, b
      002C60 29                   10122 	add	hl, hl
      002C61 09                   10123 	add	hl, bc
      002C62 29                   10124 	add	hl, hl
      002C63 29                   10125 	add	hl, hl
      002C64 09                   10126 	add	hl, bc
      002C65 E5                   10127 	push	hl
      002C66 7D                   10128 	ld	a, l
      002C67 F8 05                10129 	ldhl	sp,	#5
      002C69 77                   10130 	ld	(hl), a
      002C6A E1                   10131 	pop	hl
      002C6B 7C                   10132 	ld	a, h
      002C6C F8 04                10133 	ldhl	sp,	#4
      002C6E 32                   10134 	ld	(hl-), a
      002C6F 2A                   10135 	ld	a, (hl+)
      002C70 5F                   10136 	ld	e, a
      002C71 56                   10137 	ld	d, (hl)
      002C72 21rB4r00             10138 	ld	hl, #_projectiles
      002C75 19                   10139 	add	hl, de
      002C76 E5                   10140 	push	hl
      002C77 7D                   10141 	ld	a, l
      002C78 F8 03                10142 	ldhl	sp,	#3
      002C7A 77                   10143 	ld	(hl), a
      002C7B E1                   10144 	pop	hl
      002C7C 7C                   10145 	ld	a, h
      002C7D F8 02                10146 	ldhl	sp,	#2
      002C7F 32                   10147 	ld	(hl-), a
      002C80 2A                   10148 	ld	a, (hl+)
      002C81 5F                   10149 	ld	e, a
      002C82 56                   10150 	ld	d, (hl)
      002C83 21 04 00             10151 	ld	hl, #0x0004
      002C86 19                   10152 	add	hl, de
      002C87 E5                   10153 	push	hl
      002C88 7D                   10154 	ld	a, l
      002C89 F8 05                10155 	ldhl	sp,	#5
      002C8B 77                   10156 	ld	(hl), a
      002C8C E1                   10157 	pop	hl
      002C8D 7C                   10158 	ld	a, h
      002C8E F8 04                10159 	ldhl	sp,	#4
      002C90 32                   10160 	ld	(hl-), a
      002C91 2A                   10161 	ld	a,	(hl+)
      002C92 66                   10162 	ld	h, (hl)
      002C93 6F                   10163 	ld	l, a
      002C94 36 04                10164 	ld	(hl), #0x04
      002C96 C3r86r2D             10165 	jp	00142$
      002C99                      10166 00129$:
                                  10167 ;src/main.c:1047: else if (xDir == -1 && yDir == 1) {
      002C99 FAr93r00             10168 	ld	a, (#_xDir)
      002C9C 3C                   10169 	inc	a
      002C9D 3E 01                10170 	ld	a, #0x01
      002C9F 28 01                10171 	jr	Z, 00276$
      002CA1 AF                   10172 	xor	a, a
      002CA2                      10173 00276$:
      002CA2 F8 04                10174 	ldhl	sp,	#4
      002CA4 77                   10175 	ld	(hl), a
      002CA5 7E                   10176 	ld	a, (hl)
      002CA6 B7                   10177 	or	a, a
      002CA7 CAr28r2D             10178 	jp	Z, 00125$
      002CAA 2B                   10179 	dec	hl
      002CAB 7E                   10180 	ld	a, (hl)
      002CAC B7                   10181 	or	a, a
      002CAD 28 79                10182 	jr	Z, 00125$
                                  10183 ;src/main.c:1048: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002CAF 2B                   10184 	dec	hl
                                  10185 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002CB0 2A                   10186 	ld	a, (hl+)
      002CB1 22                   10187 	ld	(hl+), a
      002CB2 36 00                10188 	ld	(hl), #0x00
      002CB4 3E 02                10189 	ld	a, #0x02
      002CB6                      10190 00277$:
      002CB6 F8 03                10191 	ldhl	sp,	#3
      002CB8 CB 26                10192 	sla	(hl)
      002CBA 23                   10193 	inc	hl
      002CBB CB 16                10194 	rl	(hl)
      002CBD 3D                   10195 	dec	a
      002CBE 20 F6                10196 	jr	NZ, 00277$
      002CC0 2B                   10197 	dec	hl
      002CC1 2A                   10198 	ld	a, (hl+)
      002CC2 5F                   10199 	ld	e, a
      002CC3 56                   10200 	ld	d, (hl)
      002CC4 21r00r00             10201 	ld	hl, #_shadow_OAM
      002CC7 19                   10202 	add	hl, de
      002CC8 E5                   10203 	push	hl
      002CC9 7D                   10204 	ld	a, l
      002CCA F8 03                10205 	ldhl	sp,	#3
      002CCC 77                   10206 	ld	(hl), a
      002CCD E1                   10207 	pop	hl
      002CCE 7C                   10208 	ld	a, h
      002CCF F8 02                10209 	ldhl	sp,	#2
      002CD1 32                   10210 	ld	(hl-), a
      002CD2 2A                   10211 	ld	a, (hl+)
      002CD3 5F                   10212 	ld	e, a
      002CD4 56                   10213 	ld	d, (hl)
      002CD5 21 03 00             10214 	ld	hl, #0x0003
      002CD8 19                   10215 	add	hl, de
      002CD9 E5                   10216 	push	hl
      002CDA 7D                   10217 	ld	a, l
      002CDB F8 05                10218 	ldhl	sp,	#5
      002CDD 77                   10219 	ld	(hl), a
      002CDE E1                   10220 	pop	hl
      002CDF 7C                   10221 	ld	a, h
      002CE0 F8 04                10222 	ldhl	sp,	#4
      002CE2 32                   10223 	ld	(hl-), a
      002CE3 2A                   10224 	ld	a,	(hl+)
      002CE4 66                   10225 	ld	h, (hl)
      002CE5 6F                   10226 	ld	l, a
      002CE6 36 60                10227 	ld	(hl), #0x60
                                  10228 ;src/main.c:1049: projectiles[oldestProjectile].offset = 4;
      002CE8 21r91r00             10229 	ld	hl, #_oldestProjectile
      002CEB 4E                   10230 	ld	c, (hl)
      002CEC 06 00                10231 	ld	b, #0x00
      002CEE 69                   10232 	ld	l, c
      002CEF 60                   10233 	ld	h, b
      002CF0 29                   10234 	add	hl, hl
      002CF1 09                   10235 	add	hl, bc
      002CF2 29                   10236 	add	hl, hl
      002CF3 29                   10237 	add	hl, hl
      002CF4 09                   10238 	add	hl, bc
      002CF5 E5                   10239 	push	hl
      002CF6 7D                   10240 	ld	a, l
      002CF7 F8 05                10241 	ldhl	sp,	#5
      002CF9 77                   10242 	ld	(hl), a
      002CFA E1                   10243 	pop	hl
      002CFB 7C                   10244 	ld	a, h
      002CFC F8 04                10245 	ldhl	sp,	#4
      002CFE 32                   10246 	ld	(hl-), a
      002CFF 2A                   10247 	ld	a, (hl+)
      002D00 5F                   10248 	ld	e, a
      002D01 56                   10249 	ld	d, (hl)
      002D02 21rB4r00             10250 	ld	hl, #_projectiles
      002D05 19                   10251 	add	hl, de
      002D06 E5                   10252 	push	hl
      002D07 7D                   10253 	ld	a, l
      002D08 F8 03                10254 	ldhl	sp,	#3
      002D0A 77                   10255 	ld	(hl), a
      002D0B E1                   10256 	pop	hl
      002D0C 7C                   10257 	ld	a, h
      002D0D F8 02                10258 	ldhl	sp,	#2
      002D0F 32                   10259 	ld	(hl-), a
      002D10 2A                   10260 	ld	a, (hl+)
      002D11 5F                   10261 	ld	e, a
      002D12 56                   10262 	ld	d, (hl)
      002D13 21 04 00             10263 	ld	hl, #0x0004
      002D16 19                   10264 	add	hl, de
      002D17 E5                   10265 	push	hl
      002D18 7D                   10266 	ld	a, l
      002D19 F8 05                10267 	ldhl	sp,	#5
      002D1B 77                   10268 	ld	(hl), a
      002D1C E1                   10269 	pop	hl
      002D1D 7C                   10270 	ld	a, h
      002D1E F8 04                10271 	ldhl	sp,	#4
      002D20 32                   10272 	ld	(hl-), a
      002D21 2A                   10273 	ld	a,	(hl+)
      002D22 66                   10274 	ld	h, (hl)
      002D23 6F                   10275 	ld	l, a
      002D24 36 04                10276 	ld	(hl), #0x04
      002D26 18 5E                10277 	jr	00142$
      002D28                      10278 00125$:
                                  10279 ;src/main.c:1051: else if (xDir == -1 && yDir == -1) {
      002D28 F8 04                10280 	ldhl	sp,	#4
      002D2A 7E                   10281 	ld	a, (hl)
      002D2B B7                   10282 	or	a, a
      002D2C 28 58                10283 	jr	Z, 00142$
      002D2E F8 01                10284 	ldhl	sp,	#1
      002D30 7E                   10285 	ld	a, (hl)
      002D31 B7                   10286 	or	a, a
      002D32 28 52                10287 	jr	Z, 00142$
                                  10288 ;src/main.c:1052: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002D34 23                   10289 	inc	hl
                                  10290 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002D35 2A                   10291 	ld	a, (hl+)
      002D36 22                   10292 	ld	(hl+), a
      002D37 36 00                10293 	ld	(hl), #0x00
      002D39 3E 02                10294 	ld	a, #0x02
      002D3B                      10295 00278$:
      002D3B F8 03                10296 	ldhl	sp,	#3
      002D3D CB 26                10297 	sla	(hl)
      002D3F 23                   10298 	inc	hl
      002D40 CB 16                10299 	rl	(hl)
      002D42 3D                   10300 	dec	a
      002D43 20 F6                10301 	jr	NZ, 00278$
      002D45 2B                   10302 	dec	hl
      002D46 2A                   10303 	ld	a, (hl+)
      002D47 5F                   10304 	ld	e, a
      002D48 56                   10305 	ld	d, (hl)
      002D49 21r00r00             10306 	ld	hl, #_shadow_OAM
      002D4C 19                   10307 	add	hl, de
      002D4D E5                   10308 	push	hl
      002D4E 7D                   10309 	ld	a, l
      002D4F F8 03                10310 	ldhl	sp,	#3
      002D51 77                   10311 	ld	(hl), a
      002D52 E1                   10312 	pop	hl
      002D53 7C                   10313 	ld	a, h
      002D54 F8 02                10314 	ldhl	sp,	#2
      002D56 32                   10315 	ld	(hl-), a
      002D57 2A                   10316 	ld	a, (hl+)
      002D58 5F                   10317 	ld	e, a
      002D59 56                   10318 	ld	d, (hl)
      002D5A 21 03 00             10319 	ld	hl, #0x0003
      002D5D 19                   10320 	add	hl, de
      002D5E E5                   10321 	push	hl
      002D5F 7D                   10322 	ld	a, l
      002D60 F8 05                10323 	ldhl	sp,	#5
      002D62 77                   10324 	ld	(hl), a
      002D63 E1                   10325 	pop	hl
      002D64 7C                   10326 	ld	a, h
      002D65 F8 04                10327 	ldhl	sp,	#4
      002D67 32                   10328 	ld	(hl-), a
      002D68 2A                   10329 	ld	a,	(hl+)
      002D69 66                   10330 	ld	h, (hl)
      002D6A 6F                   10331 	ld	l, a
      002D6B 36 20                10332 	ld	(hl), #0x20
                                  10333 ;src/main.c:1053: projectiles[oldestProjectile].offset = 12;
      002D6D 21r91r00             10334 	ld	hl, #_oldestProjectile
      002D70 4E                   10335 	ld	c, (hl)
      002D71 06 00                10336 	ld	b, #0x00
      002D73 69                   10337 	ld	l, c
      002D74 60                   10338 	ld	h, b
      002D75 29                   10339 	add	hl, hl
      002D76 09                   10340 	add	hl, bc
      002D77 29                   10341 	add	hl, hl
      002D78 29                   10342 	add	hl, hl
      002D79 09                   10343 	add	hl, bc
      002D7A 01rB4r00             10344 	ld	bc,#_projectiles
      002D7D 09                   10345 	add	hl,bc
      002D7E 4D                   10346 	ld	c, l
      002D7F 44                   10347 	ld	b, h
      002D80 21 04 00             10348 	ld	hl, #0x0004
      002D83 09                   10349 	add	hl, bc
      002D84 36 0C                10350 	ld	(hl), #0x0c
      002D86                      10351 00142$:
                                  10352 ;src/main.c:1057: fireCooldown = projectiles[oldestProjectile].delay;
      002D86 21r91r00             10353 	ld	hl, #_oldestProjectile
      002D89 4E                   10354 	ld	c, (hl)
      002D8A 06 00                10355 	ld	b, #0x00
      002D8C 69                   10356 	ld	l, c
      002D8D 60                   10357 	ld	h, b
      002D8E 29                   10358 	add	hl, hl
      002D8F 09                   10359 	add	hl, bc
      002D90 29                   10360 	add	hl, hl
      002D91 29                   10361 	add	hl, hl
      002D92 09                   10362 	add	hl, bc
      002D93 01rB4r00             10363 	ld	bc,#_projectiles
      002D96 09                   10364 	add	hl,bc
      002D97 01 0B 00             10365 	ld	bc, #0x000b
      002D9A 09                   10366 	add	hl, bc
      002D9B 7E                   10367 	ld	a, (hl)
      002D9C EAr92r00             10368 	ld	(#_fireCooldown),a
      002D9F                      10369 00155$:
                                  10370 ;src/main.c:1063: }
      002D9F E8 05                10371 	add	sp, #5
      002DA1 C9                   10372 	ret
                                  10373 ;src/main.c:1066: void moveProjectiles() {
                                  10374 ;	---------------------------------
                                  10375 ; Function moveProjectiles
                                  10376 ; ---------------------------------
      002DA2                      10377 _moveProjectiles::
      002DA2 E8 F6                10378 	add	sp, #-10
                                  10379 ;src/main.c:1067: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002DA4 F8 09                10380 	ldhl	sp,	#9
      002DA6 36 00                10381 	ld	(hl), #0x00
      002DA8                      10382 00112$:
      002DA8 21r9Fr0B             10383 	ld	hl, #_PROJECTILECOUNT
      002DAB 4E                   10384 	ld	c, (hl)
      002DAC F8 09                10385 	ldhl	sp,	#9
      002DAE 7E                   10386 	ld	a, (hl)
      002DAF 91                   10387 	sub	a, c
      002DB0 D2r82r2F             10388 	jp	NC, 00114$
                                  10389 ;src/main.c:1068: if (projectiles[i].active) {
      002DB3 4E                   10390 	ld	c, (hl)
      002DB4 06 00                10391 	ld	b, #0x00
      002DB6 69                   10392 	ld	l, c
      002DB7 60                   10393 	ld	h, b
      002DB8 29                   10394 	add	hl, hl
      002DB9 09                   10395 	add	hl, bc
      002DBA 29                   10396 	add	hl, hl
      002DBB 29                   10397 	add	hl, hl
      002DBC 09                   10398 	add	hl, bc
      002DBD 01rB4r00             10399 	ld	bc,#_projectiles
      002DC0 09                   10400 	add	hl,bc
      002DC1 E5                   10401 	push	hl
      002DC2 7D                   10402 	ld	a, l
      002DC3 F8 07                10403 	ldhl	sp,	#7
      002DC5 77                   10404 	ld	(hl), a
      002DC6 E1                   10405 	pop	hl
      002DC7 7C                   10406 	ld	a, h
      002DC8 F8 06                10407 	ldhl	sp,	#6
      002DCA 32                   10408 	ld	(hl-), a
      002DCB 2A                   10409 	ld	a, (hl+)
      002DCC 5F                   10410 	ld	e, a
      002DCD 56                   10411 	ld	d, (hl)
      002DCE 21 0A 00             10412 	ld	hl, #0x000a
      002DD1 19                   10413 	add	hl, de
      002DD2 4D                   10414 	ld	c, l
      002DD3 44                   10415 	ld	b, h
      002DD4 0A                   10416 	ld	a, (bc)
      002DD5 F8 08                10417 	ldhl	sp,	#8
      002DD7 77                   10418 	ld	(hl), a
      002DD8 7E                   10419 	ld	a, (hl)
      002DD9 B7                   10420 	or	a, a
      002DDA CAr7Cr2F             10421 	jp	Z, 00113$
                                  10422 ;src/main.c:1069: projectiles[i].x -= xOverflow;
      002DDD 2B                   10423 	dec	hl
      002DDE 2B                   10424 	dec	hl
      002DDF 2B                   10425 	dec	hl
      002DE0 2A                   10426 	ld	a, (hl+)
      002DE1 5F                   10427 	ld	e, a
      002DE2 56                   10428 	ld	d, (hl)
      002DE3 1A                   10429 	ld	a, (de)
      002DE4 47                   10430 	ld	b, a
      002DE5 13                   10431 	inc	de
      002DE6 1A                   10432 	ld	a, (de)
      002DE7 4F                   10433 	ld	c, a
      002DE8 58                   10434 	ld	e, b
      002DE9 51                   10435 	ld	d, c
      002DEA 21rA1r00             10436 	ld	hl, #_xOverflow
      002DED 2A                   10437 	ld	a,	(hl+)
      002DEE 66                   10438 	ld	h, (hl)
      002DEF 6F                   10439 	ld	l, a
      002DF0 7B                   10440 	ld	a, e
      002DF1 95                   10441 	sub	a, l
      002DF2 5F                   10442 	ld	e, a
      002DF3 7A                   10443 	ld	a, d
      002DF4 9C                   10444 	sbc	a, h
      002DF5 F8 01                10445 	ldhl	sp,	#1
      002DF7 32                   10446 	ld	(hl-), a
      002DF8 73                   10447 	ld	(hl), e
      002DF9 F8 05                10448 	ldhl	sp,#5
      002DFB 2A                   10449 	ld	a, (hl+)
      002DFC 5F                   10450 	ld	e, a
      002DFD 56                   10451 	ld	d, (hl)
      002DFE F8 00                10452 	ldhl	sp,	#0
      002E00 2A                   10453 	ld	a, (hl+)
      002E01 12                   10454 	ld	(de), a
      002E02 13                   10455 	inc	de
      002E03 7E                   10456 	ld	a, (hl)
      002E04 12                   10457 	ld	(de), a
                                  10458 ;src/main.c:1070: projectiles[i].y -= yOverflow;
      002E05 F8 05                10459 	ldhl	sp,#5
      002E07 2A                   10460 	ld	a, (hl+)
      002E08 5F                   10461 	ld	e, a
      002E09 56                   10462 	ld	d, (hl)
      002E0A 21 02 00             10463 	ld	hl, #0x0002
      002E0D 19                   10464 	add	hl, de
      002E0E E5                   10465 	push	hl
      002E0F 7D                   10466 	ld	a, l
      002E10 F8 04                10467 	ldhl	sp,	#4
      002E12 77                   10468 	ld	(hl), a
      002E13 E1                   10469 	pop	hl
      002E14 7C                   10470 	ld	a, h
      002E15 F8 03                10471 	ldhl	sp,	#3
      002E17 32                   10472 	ld	(hl-), a
      002E18 2A                   10473 	ld	a, (hl+)
      002E19 5F                   10474 	ld	e, a
      002E1A 56                   10475 	ld	d, (hl)
      002E1B 1A                   10476 	ld	a, (de)
      002E1C 4F                   10477 	ld	c, a
      002E1D 13                   10478 	inc	de
      002E1E 1A                   10479 	ld	a, (de)
      002E1F 47                   10480 	ld	b, a
      002E20 79                   10481 	ld	a, c
      002E21 21rA3r00             10482 	ld	hl, #_yOverflow
      002E24 96                   10483 	sub	a, (hl)
      002E25 23                   10484 	inc	hl
      002E26 4F                   10485 	ld	c, a
      002E27 78                   10486 	ld	a, b
      002E28 9E                   10487 	sbc	a, (hl)
      002E29 47                   10488 	ld	b, a
      002E2A F8 02                10489 	ldhl	sp,	#2
      002E2C 2A                   10490 	ld	a,	(hl+)
      002E2D 66                   10491 	ld	h, (hl)
      002E2E 6F                   10492 	ld	l, a
      002E2F 79                   10493 	ld	a, c
      002E30 22                   10494 	ld	(hl+), a
      002E31 70                   10495 	ld	(hl), b
                                  10496 ;src/main.c:1072: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002E32 F8 05                10497 	ldhl	sp,#5
      002E34 2A                   10498 	ld	a, (hl+)
      002E35 5F                   10499 	ld	e, a
      002E36 56                   10500 	ld	d, (hl)
      002E37 21 06 00             10501 	ld	hl, #0x0006
      002E3A 19                   10502 	add	hl, de
      002E3B 5D                   10503 	ld	e, l
      002E3C 54                   10504 	ld	d, h
      002E3D 1A                   10505 	ld	a, (de)
      002E3E 6F                   10506 	ld	l, a
                                  10507 ;	spillPairReg hl
                                  10508 ;	spillPairReg hl
      002E3F 07                   10509 	rlca
      002E40 9F                   10510 	sbc	a, a
      002E41 67                   10511 	ld	h, a
                                  10512 ;	spillPairReg hl
                                  10513 ;	spillPairReg hl
      002E42 09                   10514 	add	hl, bc
      002E43 4D                   10515 	ld	c, l
      002E44 44                   10516 	ld	b, h
                                  10517 ;src/main.c:1073: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002E45 F8 05                10518 	ldhl	sp,#5
      002E47 2A                   10519 	ld	a, (hl+)
      002E48 5F                   10520 	ld	e, a
      002E49 56                   10521 	ld	d, (hl)
      002E4A 21 05 00             10522 	ld	hl, #0x0005
      002E4D 19                   10523 	add	hl, de
      002E4E 5D                   10524 	ld	e, l
      002E4F 54                   10525 	ld	d, h
      002E50 1A                   10526 	ld	a, (de)
      002E51 F8 07                10527 	ldhl	sp,	#7
      002E53 22                   10528 	ld	(hl+), a
      002E54 07                   10529 	rlca
      002E55 9F                   10530 	sbc	a, a
      002E56 77                   10531 	ld	(hl), a
      002E57 D1                   10532 	pop	de
      002E58 D5                   10533 	push	de
      002E59 3A                   10534 	ld	a, (hl-)
      002E5A 6E                   10535 	ld	l, (hl)
      002E5B 67                   10536 	ld	h, a
      002E5C 19                   10537 	add	hl, de
      002E5D 5D                   10538 	ld	e, l
      002E5E 7C                   10539 	ld	a, h
      002E5F F8 07                10540 	ldhl	sp,	#7
      002E61 73                   10541 	ld	(hl), e
      002E62 23                   10542 	inc	hl
      002E63 77                   10543 	ld	(hl), a
                                  10544 ;src/main.c:1076: projectiles[i].y = newY;
      002E64 F8 02                10545 	ldhl	sp,	#2
      002E66 2A                   10546 	ld	a,	(hl+)
      002E67 66                   10547 	ld	h, (hl)
      002E68 6F                   10548 	ld	l, a
      002E69 79                   10549 	ld	a, c
      002E6A 22                   10550 	ld	(hl+), a
      002E6B 70                   10551 	ld	(hl), b
                                  10552 ;src/main.c:1077: projectiles[i].x = newX;
      002E6C F8 05                10553 	ldhl	sp,#5
      002E6E 2A                   10554 	ld	a, (hl+)
      002E6F 5F                   10555 	ld	e, a
      002E70 2A                   10556 	ld	a, (hl+)
      002E71 57                   10557 	ld	d, a
      002E72 2A                   10558 	ld	a, (hl+)
      002E73 12                   10559 	ld	(de), a
      002E74 13                   10560 	inc	de
                                  10561 ;src/main.c:1081: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002E75 3A                   10562 	ld	a, (hl-)
      002E76 2B                   10563 	dec	hl
      002E77 2B                   10564 	dec	hl
      002E78 12                   10565 	ld	(de), a
      002E79 2A                   10566 	ld	a, (hl+)
      002E7A 5F                   10567 	ld	e, a
      002E7B 56                   10568 	ld	d, (hl)
      002E7C 21 04 00             10569 	ld	hl, #0x0004
      002E7F 19                   10570 	add	hl, de
      002E80 5D                   10571 	ld	e, l
      002E81 54                   10572 	ld	d, h
      002E82 1A                   10573 	ld	a, (de)
      002E83 81                   10574 	add	a, c
      002E84 4F                   10575 	ld	c, a
      002E85 F8 07                10576 	ldhl	sp,	#7
      002E87 2A                   10577 	ld	a, (hl+)
      002E88 23                   10578 	inc	hl
      002E89 C6 04                10579 	add	a, #0x04
      002E8B 5F                   10580 	ld	e, a
      002E8C 7E                   10581 	ld	a, (hl)
      002E8D C6 1E                10582 	add	a, #0x1e
      002E8F F8 04                10583 	ldhl	sp,	#4
      002E91 77                   10584 	ld	(hl), a
                                  10585 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002E92 6E                   10586 	ld	l, (hl)
                                  10587 ;	spillPairReg hl
                                  10588 ;	spillPairReg hl
      002E93 26 00                10589 	ld	h, #0x00
                                  10590 ;	spillPairReg hl
                                  10591 ;	spillPairReg hl
      002E95 29                   10592 	add	hl, hl
      002E96 29                   10593 	add	hl, hl
      002E97 D5                   10594 	push	de
      002E98 11r00r00             10595 	ld	de, #_shadow_OAM
      002E9B 19                   10596 	add	hl, de
      002E9C D1                   10597 	pop	de
                                  10598 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002E9D 79                   10599 	ld	a, c
      002E9E 22                   10600 	ld	(hl+), a
      002E9F 73                   10601 	ld	(hl), e
                                  10602 ;src/main.c:1085: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002EA0 F8 05                10603 	ldhl	sp,#5
      002EA2 2A                   10604 	ld	a, (hl+)
      002EA3 5F                   10605 	ld	e, a
      002EA4 3A                   10606 	ld	a, (hl-)
      002EA5 57                   10607 	ld	d, a
      002EA6 1A                   10608 	ld	a, (de)
      002EA7 22                   10609 	ld	(hl+), a
      002EA8 13                   10610 	inc	de
      002EA9 1A                   10611 	ld	a, (de)
      002EAA 22                   10612 	ld	(hl+), a
      002EAB 23                   10613 	inc	hl
      002EAC CB 7E                10614 	bit	7, (hl)
      002EAE 20 51                10615 	jr	NZ, 00101$
      002EB0 F8 05                10616 	ldhl	sp,	#5
      002EB2 2A                   10617 	ld	a, (hl+)
      002EB3 23                   10618 	inc	hl
      002EB4 32                   10619 	ld	(hl-), a
      002EB5 2A                   10620 	ld	a, (hl+)
      002EB6 23                   10621 	inc	hl
      002EB7 32                   10622 	ld	(hl-), a
      002EB8 3E AA                10623 	ld	a, #0xaa
      002EBA 96                   10624 	sub	a, (hl)
      002EBB 23                   10625 	inc	hl
      002EBC 3E 00                10626 	ld	a, #0x00
      002EBE 9E                   10627 	sbc	a, (hl)
      002EBF 3E 00                10628 	ld	a, #0x00
      002EC1 57                   10629 	ld	d, a
      002EC2 CB 7E                10630 	bit	7, (hl)
      002EC4 28 07                10631 	jr	Z, 00147$
      002EC6 CB 7A                10632 	bit	7, d
      002EC8 20 08                10633 	jr	NZ, 00148$
      002ECA BF                   10634 	cp	a, a
      002ECB 18 05                10635 	jr	00148$
      002ECD                      10636 00147$:
      002ECD CB 7A                10637 	bit	7, d
      002ECF 28 01                10638 	jr	Z, 00148$
      002ED1 37                   10639 	scf
      002ED2                      10640 00148$:
      002ED2 38 2D                10641 	jr	C, 00101$
      002ED4 F8 02                10642 	ldhl	sp,#2
      002ED6 2A                   10643 	ld	a, (hl+)
      002ED7 5F                   10644 	ld	e, a
      002ED8 56                   10645 	ld	d, (hl)
      002ED9 1A                   10646 	ld	a, (de)
      002EDA F8 07                10647 	ldhl	sp,	#7
      002EDC 22                   10648 	ld	(hl+), a
      002EDD 13                   10649 	inc	de
      002EDE 1A                   10650 	ld	a, (de)
      002EDF 77                   10651 	ld	(hl), a
      002EE0 CB 7E                10652 	bit	7, (hl)
      002EE2 20 1D                10653 	jr	NZ, 00101$
      002EE4 2B                   10654 	dec	hl
      002EE5 3E 9A                10655 	ld	a, #0x9a
      002EE7 96                   10656 	sub	a, (hl)
      002EE8 23                   10657 	inc	hl
      002EE9 3E 00                10658 	ld	a, #0x00
      002EEB 9E                   10659 	sbc	a, (hl)
      002EEC 3E 00                10660 	ld	a, #0x00
      002EEE 57                   10661 	ld	d, a
      002EEF CB 7E                10662 	bit	7, (hl)
      002EF1 28 07                10663 	jr	Z, 00149$
      002EF3 CB 7A                10664 	bit	7, d
      002EF5 20 08                10665 	jr	NZ, 00150$
      002EF7 BF                   10666 	cp	a, a
      002EF8 18 05                10667 	jr	00150$
      002EFA                      10668 00149$:
      002EFA CB 7A                10669 	bit	7, d
      002EFC 28 01                10670 	jr	Z, 00150$
      002EFE 37                   10671 	scf
      002EFF                      10672 00150$:
      002EFF 30 7B                10673 	jr	NC, 00113$
      002F01                      10674 00101$:
                                  10675 ;src/main.c:1086: projectiles[i].active = 0;
      002F01 F8 09                10676 	ldhl	sp,	#9
      002F03 4E                   10677 	ld	c, (hl)
      002F04 06 00                10678 	ld	b, #0x00
      002F06 69                   10679 	ld	l, c
      002F07 60                   10680 	ld	h, b
      002F08 29                   10681 	add	hl, hl
      002F09 09                   10682 	add	hl, bc
      002F0A 29                   10683 	add	hl, hl
      002F0B 29                   10684 	add	hl, hl
      002F0C 09                   10685 	add	hl, bc
      002F0D E5                   10686 	push	hl
      002F0E 7D                   10687 	ld	a, l
      002F0F F8 09                10688 	ldhl	sp,	#9
      002F11 77                   10689 	ld	(hl), a
      002F12 E1                   10690 	pop	hl
      002F13 7C                   10691 	ld	a, h
      002F14 F8 08                10692 	ldhl	sp,	#8
      002F16 32                   10693 	ld	(hl-), a
      002F17 2A                   10694 	ld	a, (hl+)
      002F18 5F                   10695 	ld	e, a
      002F19 56                   10696 	ld	d, (hl)
      002F1A 21rB4r00             10697 	ld	hl, #_projectiles
      002F1D 19                   10698 	add	hl, de
      002F1E E5                   10699 	push	hl
      002F1F 7D                   10700 	ld	a, l
      002F20 F8 07                10701 	ldhl	sp,	#7
      002F22 77                   10702 	ld	(hl), a
      002F23 E1                   10703 	pop	hl
      002F24 7C                   10704 	ld	a, h
      002F25 F8 06                10705 	ldhl	sp,	#6
      002F27 32                   10706 	ld	(hl-), a
      002F28 2A                   10707 	ld	a, (hl+)
      002F29 5F                   10708 	ld	e, a
      002F2A 56                   10709 	ld	d, (hl)
      002F2B 21 0A 00             10710 	ld	hl, #0x000a
      002F2E 19                   10711 	add	hl, de
      002F2F E5                   10712 	push	hl
      002F30 7D                   10713 	ld	a, l
      002F31 F8 09                10714 	ldhl	sp,	#9
      002F33 77                   10715 	ld	(hl), a
      002F34 E1                   10716 	pop	hl
      002F35 7C                   10717 	ld	a, h
      002F36 F8 08                10718 	ldhl	sp,	#8
      002F38 32                   10719 	ld	(hl-), a
      002F39 2A                   10720 	ld	a,	(hl+)
      002F3A 66                   10721 	ld	h, (hl)
      002F3B 6F                   10722 	ld	l, a
      002F3C 36 00                10723 	ld	(hl), #0x00
                                  10724 ;src/main.c:1087: set_sprite_tile(30+i, 0x7f);
      002F3E F8 04                10725 	ldhl	sp,	#4
      002F40 7E                   10726 	ld	a, (hl)
      002F41 F8 08                10727 	ldhl	sp,	#8
      002F43 77                   10728 	ld	(hl), a
                                  10729 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002F44 3A                   10730 	ld	a, (hl-)
      002F45 22                   10731 	ld	(hl+), a
      002F46 36 00                10732 	ld	(hl), #0x00
      002F48 3E 02                10733 	ld	a, #0x02
      002F4A                      10734 00151$:
      002F4A F8 07                10735 	ldhl	sp,	#7
      002F4C CB 26                10736 	sla	(hl)
      002F4E 23                   10737 	inc	hl
      002F4F CB 16                10738 	rl	(hl)
      002F51 3D                   10739 	dec	a
      002F52 20 F6                10740 	jr	NZ, 00151$
      002F54 2B                   10741 	dec	hl
      002F55 2A                   10742 	ld	a, (hl+)
      002F56 5F                   10743 	ld	e, a
      002F57 56                   10744 	ld	d, (hl)
      002F58 21r00r00             10745 	ld	hl, #_shadow_OAM
      002F5B 19                   10746 	add	hl, de
      002F5C E5                   10747 	push	hl
      002F5D 7D                   10748 	ld	a, l
      002F5E F8 07                10749 	ldhl	sp,	#7
      002F60 77                   10750 	ld	(hl), a
      002F61 E1                   10751 	pop	hl
      002F62 7C                   10752 	ld	a, h
      002F63 F8 06                10753 	ldhl	sp,	#6
      002F65 32                   10754 	ld	(hl-), a
      002F66 2A                   10755 	ld	a, (hl+)
      002F67 5F                   10756 	ld	e, a
      002F68 56                   10757 	ld	d, (hl)
      002F69 21 02 00             10758 	ld	hl, #0x0002
      002F6C 19                   10759 	add	hl, de
      002F6D E5                   10760 	push	hl
      002F6E 7D                   10761 	ld	a, l
      002F6F F8 09                10762 	ldhl	sp,	#9
      002F71 77                   10763 	ld	(hl), a
      002F72 E1                   10764 	pop	hl
      002F73 7C                   10765 	ld	a, h
      002F74 F8 08                10766 	ldhl	sp,	#8
      002F76 32                   10767 	ld	(hl-), a
      002F77 2A                   10768 	ld	a,	(hl+)
      002F78 66                   10769 	ld	h, (hl)
      002F79 6F                   10770 	ld	l, a
      002F7A 36 7F                10771 	ld	(hl), #0x7f
                                  10772 ;src/main.c:1087: set_sprite_tile(30+i, 0x7f);
      002F7C                      10773 00113$:
                                  10774 ;src/main.c:1067: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002F7C F8 09                10775 	ldhl	sp,	#9
      002F7E 34                   10776 	inc	(hl)
      002F7F C3rA8r2D             10777 	jp	00112$
      002F82                      10778 00114$:
                                  10779 ;src/main.c:1092: }
      002F82 E8 0A                10780 	add	sp, #10
      002F84 C9                   10781 	ret
                                  10782 ;src/main.c:1094: void tickPickups() {
                                  10783 ;	---------------------------------
                                  10784 ; Function tickPickups
                                  10785 ; ---------------------------------
      002F85                      10786 _tickPickups::
      002F85 3B                   10787 	dec	sp
      002F86 3B                   10788 	dec	sp
                                  10789 ;src/main.c:1096: if (pickup.active) {
      002F87 FArFFr00             10790 	ld	a, (#(_pickup + 5) + 0)
      002F8A B7                   10791 	or	a, a
      002F8B CAr5Ar31             10792 	jp	Z, 00144$
                                  10793 ;src/main.c:1097: pickup.x -= xOverflow;
      002F8E 21rFBr00             10794 	ld	hl, #(_pickup + 1)
      002F91 2A                   10795 	ld	a, (hl+)
      002F92 47                   10796 	ld	b, a
      002F93 4E                   10797 	ld	c, (hl)
      002F94 58                   10798 	ld	e, b
      002F95 51                   10799 	ld	d, c
      002F96 21rA1r00             10800 	ld	hl, #_xOverflow
      002F99 2A                   10801 	ld	a,	(hl+)
      002F9A 66                   10802 	ld	h, (hl)
      002F9B 6F                   10803 	ld	l, a
      002F9C 7B                   10804 	ld	a, e
      002F9D 95                   10805 	sub	a, l
      002F9E 5F                   10806 	ld	e, a
      002F9F 7A                   10807 	ld	a, d
      002FA0 9C                   10808 	sbc	a, h
      002FA1 F8 01                10809 	ldhl	sp,	#1
      002FA3 32                   10810 	ld	(hl-), a
      002FA4 73                   10811 	ld	(hl), e
      002FA5 11rFBr00             10812 	ld	de, #(_pickup + 1)
      002FA8 2A                   10813 	ld	a, (hl+)
      002FA9 12                   10814 	ld	(de), a
      002FAA 13                   10815 	inc	de
      002FAB 7E                   10816 	ld	a, (hl)
      002FAC 12                   10817 	ld	(de), a
                                  10818 ;src/main.c:1098: pickup.y -= yOverflow;
      002FAD 21rFDr00             10819 	ld	hl, #(_pickup + 3)
      002FB0 2A                   10820 	ld	a, (hl+)
      002FB1 4F                   10821 	ld	c, a
      002FB2 46                   10822 	ld	b, (hl)
      002FB3 79                   10823 	ld	a, c
      002FB4 21rA3r00             10824 	ld	hl, #_yOverflow
      002FB7 96                   10825 	sub	a, (hl)
      002FB8 23                   10826 	inc	hl
      002FB9 4F                   10827 	ld	c, a
      002FBA 78                   10828 	ld	a, b
      002FBB 9E                   10829 	sbc	a, (hl)
      002FBC 47                   10830 	ld	b, a
      002FBD 21rFDr00             10831 	ld	hl, #(_pickup + 3)
      002FC0 79                   10832 	ld	a, c
      002FC1 22                   10833 	ld	(hl+), a
      002FC2 70                   10834 	ld	(hl), b
                                  10835 ;src/main.c:1099: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002FC3 79                   10836 	ld	a, c
      002FC4 C6 0C                10837 	add	a, #0x0c
      002FC6 47                   10838 	ld	b, a
      002FC7 F8 00                10839 	ldhl	sp,	#0
      002FC9 7E                   10840 	ld	a, (hl)
      002FCA C6 04                10841 	add	a, #0x04
      002FCC 4F                   10842 	ld	c, a
                                  10843 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002FCD 21r0Cr00             10844 	ld	hl, #(_shadow_OAM + 12)
                                  10845 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002FD0 78                   10846 	ld	a, b
      002FD1 22                   10847 	ld	(hl+), a
      002FD2 71                   10848 	ld	(hl), c
                                  10849 ;src/main.c:1100: if (pickup.visible && auxTick == 1) {
      002FD3 21rFAr00             10850 	ld	hl, #_pickup
      002FD6 4E                   10851 	ld	c, (hl)
                                  10852 ;src/main.c:1097: pickup.x -= xOverflow;
      002FD7 11rFBr00             10853 	ld	de, #(_pickup + 1)
      002FDA 1A                   10854 	ld	a, (de)
      002FDB F8 00                10855 	ldhl	sp,	#0
      002FDD 22                   10856 	ld	(hl+), a
      002FDE 13                   10857 	inc	de
      002FDF 1A                   10858 	ld	a, (de)
      002FE0 77                   10859 	ld	(hl), a
                                  10860 ;src/main.c:1100: if (pickup.visible && auxTick == 1) {
      002FE1 79                   10861 	ld	a, c
      002FE2 B7                   10862 	or	a, a
      002FE3 CArEEr30             10863 	jp	Z, 00127$
      002FE6 FArBFr00             10864 	ld	a, (#_auxTick)
      002FE9 3D                   10865 	dec	a
      002FEA C2rEEr30             10866 	jp	NZ,00127$
                                  10867 ;src/main.c:1102: if (abs(pickup.x - playerDrawX) < 10) {
      002FED F8 00                10868 	ldhl	sp,	#0
      002FEF 7E                   10869 	ld	a, (hl)
      002FF0 21r9Br00             10870 	ld	hl, #_playerDrawX
      002FF3 4E                   10871 	ld	c, (hl)
      002FF4 91                   10872 	sub	a, c
      002FF5 4F                   10873 	ld	c, a
                                  10874 ;src/main.c:368: if (value >= 0) return value;
      002FF6 CB 79                10875 	bit	7, c
      002FF8 28 03                10876 	jr	Z, 00136$
                                  10877 ;src/main.c:369: else return - value;
      002FFA AF                   10878 	xor	a, a
      002FFB 91                   10879 	sub	a, c
      002FFC 4F                   10880 	ld	c, a
                                  10881 ;src/main.c:1102: if (abs(pickup.x - playerDrawX) < 10) {
      002FFD                      10882 00136$:
      002FFD 79                   10883 	ld	a, c
      002FFE EE 80                10884 	xor	a, #0x80
      003000 D6 8A                10885 	sub	a, #0x8a
      003002 D2r91r30             10886 	jp	NC, 00115$
                                  10887 ;src/main.c:1103: if (abs(pickup.y - playerDrawY) < 10) {
      003005 FArFDr00             10888 	ld	a, (#(_pickup + 3) + 0)
      003008 F8 01                10889 	ldhl	sp,	#1
      00300A 77                   10890 	ld	(hl), a
      00300B 21r9Cr00             10891 	ld	hl, #_playerDrawY
      00300E 4E                   10892 	ld	c, (hl)
      00300F F8 01                10893 	ldhl	sp,	#1
      003011 7E                   10894 	ld	a, (hl)
      003012 91                   10895 	sub	a, c
      003013 77                   10896 	ld	(hl), a
                                  10897 ;src/main.c:368: if (value >= 0) return value;
      003014 CB 7E                10898 	bit	7, (hl)
      003016 28 05                10899 	jr	Z, 00140$
                                  10900 ;src/main.c:369: else return - value;
      003018 AF                   10901 	xor	a, a
      003019 F8 01                10902 	ldhl	sp,	#1
      00301B 96                   10903 	sub	a, (hl)
      00301C 77                   10904 	ld	(hl), a
                                  10905 ;src/main.c:1103: if (abs(pickup.y - playerDrawY) < 10) {
      00301D                      10906 00140$:
      00301D F8 01                10907 	ldhl	sp,	#1
      00301F 7E                   10908 	ld	a, (hl)
      003020 EE 80                10909 	xor	a, #0x80
      003022 D6 8A                10910 	sub	a, #0x8a
      003024 30 6B                10911 	jr	NC, 00115$
                                  10912 ;src/main.c:1104: if (pickup.type == 0) { //upgrade
      003026 FAr00r01             10913 	ld	a, (#(_pickup + 6) + 0)
      003029 B7                   10914 	or	a, a
      00302A 20 0D                10915 	jr	NZ, 00104$
                                  10916 ;src/main.c:1105: if (gunLevel < 1) {
      00302C 21rA6r00             10917 	ld	hl, #_gunLevel
      00302F 7E                   10918 	ld	a, (hl)
      003030 D6 01                10919 	sub	a, #0x01
      003032 30 05                10920 	jr	NC, 00104$
                                  10921 ;src/main.c:1106: gunLevel += 1;
      003034 34                   10922 	inc	(hl)
      003035 7E                   10923 	ld	a, (hl)
                                  10924 ;src/main.c:1107: setGunIcon();
      003036 CDrC1r27             10925 	call	_setGunIcon
      003039                      10926 00104$:
                                  10927 ;src/main.c:1110: if (pickup.type == 1) { //missile ammo
      003039 21r00r01             10928 	ld	hl, #(_pickup + 6)
      00303C 6E                   10929 	ld	l, (hl)
                                  10930 ;	spillPairReg hl
                                  10931 ;src/main.c:1111: updateMissileCount(pickup.amount);
      00303D 01r01r01             10932 	ld	bc, #_pickup + 7
                                  10933 ;src/main.c:1110: if (pickup.type == 1) { //missile ammo
      003040 2D                   10934 	dec	l
      003041 20 09                10935 	jr	NZ, 00106$
                                  10936 ;src/main.c:1111: updateMissileCount(pickup.amount);
      003043 0A                   10937 	ld	a, (bc)
      003044 C5                   10938 	push	bc
      003045 F5                   10939 	push	af
      003046 33                   10940 	inc	sp
      003047 CDrE4r0C             10941 	call	_updateMissileCount
      00304A 33                   10942 	inc	sp
      00304B C1                   10943 	pop	bc
      00304C                      10944 00106$:
                                  10945 ;src/main.c:1113: if (pickup.type == 2) {
      00304C FAr00r01             10946 	ld	a, (#(_pickup + 6) + 0)
      00304F D6 02                10947 	sub	a, #0x02
      003051 20 34                10948 	jr	NZ, 00111$
                                  10949 ;src/main.c:1114: if (hull + pickup.amount <= 100) {
      003053 21rF6r00             10950 	ld	hl, #_hull
      003056 5E                   10951 	ld	e, (hl)
      003057 16 00                10952 	ld	d, #0x00
      003059 0A                   10953 	ld	a, (bc)
      00305A 4F                   10954 	ld	c, a
      00305B 69                   10955 	ld	l, c
                                  10956 ;	spillPairReg hl
                                  10957 ;	spillPairReg hl
      00305C 26 00                10958 	ld	h, #0x00
                                  10959 ;	spillPairReg hl
                                  10960 ;	spillPairReg hl
      00305E 19                   10961 	add	hl, de
      00305F 5C                   10962 	ld	e, h
      003060 16 00                10963 	ld	d, #0x00
      003062 3E 64                10964 	ld	a, #0x64
      003064 BD                   10965 	cp	a, l
      003065 3E 00                10966 	ld	a, #0x00
      003067 9C                   10967 	sbc	a, h
      003068 CB 7B                10968 	bit	7, e
      00306A 28 07                10969 	jr	Z, 00247$
      00306C CB 7A                10970 	bit	7, d
      00306E 20 08                10971 	jr	NZ, 00248$
      003070 BF                   10972 	cp	a, a
      003071 18 05                10973 	jr	00248$
      003073                      10974 00247$:
      003073 CB 7A                10975 	bit	7, d
      003075 28 01                10976 	jr	Z, 00248$
      003077 37                   10977 	scf
      003078                      10978 00248$:
      003078 38 08                10979 	jr	C, 00108$
                                  10980 ;src/main.c:1115: hull += pickup.amount;
      00307A 79                   10981 	ld	a, c
      00307B 21rF6r00             10982 	ld	hl, #_hull
      00307E 86                   10983 	add	a, (hl)
      00307F 77                   10984 	ld	(hl), a
      003080 18 05                10985 	jr	00111$
      003082                      10986 00108$:
                                  10987 ;src/main.c:1118: hull = 100;
      003082 21rF6r00             10988 	ld	hl, #_hull
      003085 36 64                10989 	ld	(hl), #0x64
      003087                      10990 00111$:
                                  10991 ;src/main.c:1121: pickup.active = 0;
      003087 21rFFr00             10992 	ld	hl, #(_pickup + 5)
      00308A 36 00                10993 	ld	(hl), #0x00
                                  10994 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00308C 21r0Er00             10995 	ld	hl, #(_shadow_OAM + 14)
      00308F 36 7F                10996 	ld	(hl), #0x7f
                                  10997 ;src/main.c:1122: set_sprite_tile(3, 0x7f);
      003091                      10998 00115$:
                                  10999 ;src/main.c:1097: pickup.x -= xOverflow;
      003091 21rFBr00             11000 	ld	hl, #(_pickup + 1)
      003094 2A                   11001 	ld	a, (hl+)
      003095 4F                   11002 	ld	c, a
      003096 46                   11003 	ld	b, (hl)
                                  11004 ;src/main.c:1125: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      003097 79                   11005 	ld	a, c
      003098 D6 F6                11006 	sub	a, #0xf6
      00309A 78                   11007 	ld	a, b
      00309B 17                   11008 	rla
      00309C 3F                   11009 	ccf
      00309D 1F                   11010 	rra
      00309E DE 7F                11011 	sbc	a, #0x7f
      0030A0 38 40                11012 	jr	C, 00116$
      0030A2 58                   11013 	ld	e, b
      0030A3 16 00                11014 	ld	d, #0x00
      0030A5 3E AA                11015 	ld	a, #0xaa
      0030A7 B9                   11016 	cp	a, c
      0030A8 3E 00                11017 	ld	a, #0x00
      0030AA 98                   11018 	sbc	a, b
      0030AB CB 7B                11019 	bit	7, e
      0030AD 28 07                11020 	jr	Z, 00249$
      0030AF CB 7A                11021 	bit	7, d
      0030B1 20 08                11022 	jr	NZ, 00250$
      0030B3 BF                   11023 	cp	a, a
      0030B4 18 05                11024 	jr	00250$
      0030B6                      11025 00249$:
      0030B6 CB 7A                11026 	bit	7, d
      0030B8 28 01                11027 	jr	Z, 00250$
      0030BA 37                   11028 	scf
      0030BB                      11029 00250$:
      0030BB 38 25                11030 	jr	C, 00116$
                                  11031 ;src/main.c:1098: pickup.y -= yOverflow;
      0030BD 21rFDr00             11032 	ld	hl, #(_pickup + 3)
      0030C0 2A                   11033 	ld	a, (hl+)
      0030C1 4F                   11034 	ld	c, a
      0030C2 46                   11035 	ld	b, (hl)
                                  11036 ;src/main.c:1125: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0030C3 CB 78                11037 	bit	7, b
      0030C5 20 1B                11038 	jr	NZ, 00116$
      0030C7 58                   11039 	ld	e, b
      0030C8 16 00                11040 	ld	d, #0x00
      0030CA 3E 9B                11041 	ld	a, #0x9b
      0030CC B9                   11042 	cp	a, c
      0030CD 3E 00                11043 	ld	a, #0x00
      0030CF 98                   11044 	sbc	a, b
      0030D0 CB 7B                11045 	bit	7, e
      0030D2 28 07                11046 	jr	Z, 00251$
      0030D4 CB 7A                11047 	bit	7, d
      0030D6 20 08                11048 	jr	NZ, 00252$
      0030D8 BF                   11049 	cp	a, a
      0030D9 18 05                11050 	jr	00252$
      0030DB                      11051 00251$:
      0030DB CB 7A                11052 	bit	7, d
      0030DD 28 01                11053 	jr	Z, 00252$
      0030DF 37                   11054 	scf
      0030E0                      11055 00252$:
      0030E0 30 78                11056 	jr	NC, 00144$
      0030E2                      11057 00116$:
                                  11058 ;src/main.c:1126: pickup.visible = 0;
      0030E2 21rFAr00             11059 	ld	hl, #_pickup
      0030E5 36 00                11060 	ld	(hl), #0x00
                                  11061 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0030E7 21r0Er00             11062 	ld	hl, #(_shadow_OAM + 14)
      0030EA 36 7F                11063 	ld	(hl), #0x7f
                                  11064 ;src/main.c:1127: set_sprite_tile(3, 0x7f);
      0030EC 18 6C                11065 	jr	00144$
      0030EE                      11066 00127$:
                                  11067 ;src/main.c:1131: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      0030EE F8 00                11068 	ldhl	sp,	#0
      0030F0 2A                   11069 	ld	a, (hl+)
      0030F1 D6 F6                11070 	sub	a, #0xf6
      0030F3 7E                   11071 	ld	a, (hl)
      0030F4 DE FF                11072 	sbc	a, #0xff
      0030F6 56                   11073 	ld	d, (hl)
      0030F7 3E FF                11074 	ld	a, #0xff
      0030F9 CB 7F                11075 	bit	7,a
      0030FB 28 07                11076 	jr	Z, 00253$
      0030FD CB 7A                11077 	bit	7, d
      0030FF 20 08                11078 	jr	NZ, 00254$
      003101 BF                   11079 	cp	a, a
      003102 18 05                11080 	jr	00254$
      003104                      11081 00253$:
      003104 CB 7A                11082 	bit	7, d
      003106 28 01                11083 	jr	Z, 00254$
      003108 37                   11084 	scf
      003109                      11085 00254$:
      003109 38 4F                11086 	jr	C, 00144$
      00310B C1                   11087 	pop	bc
      00310C C5                   11088 	push	bc
      00310D 58                   11089 	ld	e, b
      00310E 16 00                11090 	ld	d, #0x00
      003110 3E AA                11091 	ld	a, #0xaa
      003112 B9                   11092 	cp	a, c
      003113 3E 00                11093 	ld	a, #0x00
      003115 98                   11094 	sbc	a, b
      003116 CB 7B                11095 	bit	7, e
      003118 28 07                11096 	jr	Z, 00255$
      00311A CB 7A                11097 	bit	7, d
      00311C 20 08                11098 	jr	NZ, 00256$
      00311E BF                   11099 	cp	a, a
      00311F 18 05                11100 	jr	00256$
      003121                      11101 00255$:
      003121 CB 7A                11102 	bit	7, d
      003123 28 01                11103 	jr	Z, 00256$
      003125 37                   11104 	scf
      003126                      11105 00256$:
      003126 38 32                11106 	jr	C, 00144$
                                  11107 ;src/main.c:1098: pickup.y -= yOverflow;
      003128 21rFDr00             11108 	ld	hl, #(_pickup + 3)
      00312B 2A                   11109 	ld	a, (hl+)
      00312C 4F                   11110 	ld	c, a
      00312D 46                   11111 	ld	b, (hl)
                                  11112 ;src/main.c:1125: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
                                  11113 ;src/main.c:1131: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      00312E CB 78                11114 	bit	7, b
      003130 20 28                11115 	jr	NZ, 00144$
      003132 58                   11116 	ld	e, b
      003133 16 00                11117 	ld	d, #0x00
      003135 3E 9B                11118 	ld	a, #0x9b
      003137 B9                   11119 	cp	a, c
      003138 3E 00                11120 	ld	a, #0x00
      00313A 98                   11121 	sbc	a, b
      00313B CB 7B                11122 	bit	7, e
      00313D 28 07                11123 	jr	Z, 00257$
      00313F CB 7A                11124 	bit	7, d
      003141 20 08                11125 	jr	NZ, 00258$
      003143 BF                   11126 	cp	a, a
      003144 18 05                11127 	jr	00258$
      003146                      11128 00257$:
      003146 CB 7A                11129 	bit	7, d
      003148 28 01                11130 	jr	Z, 00258$
      00314A 37                   11131 	scf
      00314B                      11132 00258$:
      00314B 38 0D                11133 	jr	C, 00144$
                                  11134 ;src/main.c:1132: pickup.visible = 1;
      00314D 21rFAr00             11135 	ld	hl, #_pickup
      003150 36 01                11136 	ld	(hl), #0x01
                                  11137 ;src/main.c:1133: set_sprite_tile(3, pickup.tile);
      003152 21r02r01             11138 	ld	hl, #(_pickup + 8)
      003155 4E                   11139 	ld	c, (hl)
                                  11140 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003156 21r0Er00             11141 	ld	hl, #(_shadow_OAM + 14)
      003159 71                   11142 	ld	(hl), c
                                  11143 ;src/main.c:1133: set_sprite_tile(3, pickup.tile);
      00315A                      11144 00144$:
                                  11145 ;src/main.c:1138: }
      00315A 33                   11146 	inc	sp
      00315B 33                   11147 	inc	sp
      00315C C9                   11148 	ret
                                  11149 ;src/main.c:1140: void tickEx() {
                                  11150 ;	---------------------------------
                                  11151 ; Function tickEx
                                  11152 ; ---------------------------------
      00315D                      11153 _tickEx::
      00315D E8 F4                11154 	add	sp, #-12
                                  11155 ;src/main.c:1141: for (uint8_t i = 0; i < exCount; ++i) {
      00315F F8 0B                11156 	ldhl	sp,	#11
      003161 36 00                11157 	ld	(hl), #0x00
      003163                      11158 00118$:
      003163 21rA5r0B             11159 	ld	hl, #_exCount
      003166 4E                   11160 	ld	c, (hl)
      003167 F8 0B                11161 	ldhl	sp,	#11
      003169 7E                   11162 	ld	a, (hl)
      00316A 91                   11163 	sub	a, c
      00316B D2r3Br33             11164 	jp	NC, 00120$
                                  11165 ;src/main.c:1142: if (explosions[i].visible) {
      00316E 4E                   11166 	ld	c, (hl)
      00316F 06 00                11167 	ld	b, #0x00
      003171 69                   11168 	ld	l, c
      003172 60                   11169 	ld	h, b
      003173 29                   11170 	add	hl, hl
      003174 09                   11171 	add	hl, bc
      003175 29                   11172 	add	hl, hl
      003176 01r03r01             11173 	ld	bc,#_explosions
      003179 09                   11174 	add	hl,bc
      00317A E5                   11175 	push	hl
      00317B 7D                   11176 	ld	a, l
      00317C F8 03                11177 	ldhl	sp,	#3
      00317E 77                   11178 	ld	(hl), a
      00317F E1                   11179 	pop	hl
      003180 7C                   11180 	ld	a, h
      003181 F8 02                11181 	ldhl	sp,	#2
      003183 32                   11182 	ld	(hl-), a
      003184 2A                   11183 	ld	a, (hl+)
      003185 5F                   11184 	ld	e, a
      003186 56                   11185 	ld	d, (hl)
      003187 1A                   11186 	ld	a, (de)
      003188 F8 0A                11187 	ldhl	sp,	#10
      00318A 77                   11188 	ld	(hl), a
      00318B 7E                   11189 	ld	a, (hl)
      00318C B7                   11190 	or	a, a
      00318D CAr35r33             11191 	jp	Z, 00119$
                                  11192 ;src/main.c:1144: explosions[i].x -= xOverflow;
      003190 F8 01                11193 	ldhl	sp,	#1
      003192 2A                   11194 	ld	a, (hl+)
      003193 4F                   11195 	ld	c, a
      003194 46                   11196 	ld	b, (hl)
      003195 03                   11197 	inc	bc
      003196 0A                   11198 	ld	a, (bc)
      003197 21rA1r00             11199 	ld	hl, #_xOverflow
      00319A 5E                   11200 	ld	e, (hl)
      00319B 93                   11201 	sub	a, e
      00319C 02                   11202 	ld	(bc), a
                                  11203 ;src/main.c:1145: explosions[i].y -= yOverflow;
      00319D F8 01                11204 	ldhl	sp,#1
      00319F 2A                   11205 	ld	a, (hl+)
      0031A0 5F                   11206 	ld	e, a
      0031A1 56                   11207 	ld	d, (hl)
      0031A2 21 02 00             11208 	ld	hl, #0x0002
      0031A5 19                   11209 	add	hl, de
      0031A6 E5                   11210 	push	hl
      0031A7 7D                   11211 	ld	a, l
      0031A8 F8 09                11212 	ldhl	sp,	#9
      0031AA 77                   11213 	ld	(hl), a
      0031AB E1                   11214 	pop	hl
      0031AC 7C                   11215 	ld	a, h
      0031AD F8 08                11216 	ldhl	sp,	#8
      0031AF 32                   11217 	ld	(hl-), a
      0031B0 2A                   11218 	ld	a, (hl+)
      0031B1 5F                   11219 	ld	e, a
      0031B2 56                   11220 	ld	d, (hl)
      0031B3 1A                   11221 	ld	a, (de)
      0031B4 21rA3r00             11222 	ld	hl, #_yOverflow
      0031B7 5E                   11223 	ld	e, (hl)
      0031B8 93                   11224 	sub	a, e
      0031B9 F8 07                11225 	ldhl	sp,	#7
      0031BB F5                   11226 	push	af
      0031BC 2A                   11227 	ld	a,	(hl+)
      0031BD 66                   11228 	ld	h, (hl)
      0031BE 6F                   11229 	ld	l, a
      0031BF F1                   11230 	pop	af
      0031C0 77                   11231 	ld	(hl), a
                                  11232 ;src/main.c:1146: move_sprite(20 +i+i, explosions[i].x, explosions[i].y+8);
      0031C1 F8 07                11233 	ldhl	sp,#7
      0031C3 2A                   11234 	ld	a, (hl+)
      0031C4 5F                   11235 	ld	e, a
      0031C5 2A                   11236 	ld	a, (hl+)
      0031C6 57                   11237 	ld	d, a
      0031C7 1A                   11238 	ld	a, (de)
      0031C8 C6 08                11239 	add	a, #0x08
      0031CA 5F                   11240 	ld	e, a
      0031CB 0A                   11241 	ld	a, (bc)
      0031CC 22                   11242 	ld	(hl+), a
      0031CD 23                   11243 	inc	hl
      0031CE 3A                   11244 	ld	a, (hl-)
      0031CF 77                   11245 	ld	(hl), a
      0031D0 7E                   11246 	ld	a, (hl)
      0031D1 C6 14                11247 	add	a, #0x14
      0031D3 86                   11248 	add	a, (hl)
      0031D4 F8 03                11249 	ldhl	sp,	#3
      0031D6 77                   11250 	ld	(hl), a
      0031D7 56                   11251 	ld	d, (hl)
                                  11252 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0031D8 26 00                11253 	ld	h, #0x00
                                  11254 ;	spillPairReg hl
                                  11255 ;	spillPairReg hl
      0031DA 6A                   11256 	ld	l, d
      0031DB 29                   11257 	add	hl, hl
      0031DC 29                   11258 	add	hl, hl
      0031DD D5                   11259 	push	de
      0031DE 11r00r00             11260 	ld	de, #_shadow_OAM
      0031E1 19                   11261 	add	hl, de
      0031E2 D1                   11262 	pop	de
                                  11263 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0031E3 7B                   11264 	ld	a, e
      0031E4 22                   11265 	ld	(hl+), a
      0031E5 5D                   11266 	ld	e, l
      0031E6 54                   11267 	ld	d, h
      0031E7 F8 09                11268 	ldhl	sp,	#9
                                  11269 ;src/main.c:1147: move_sprite(21 +i+i, explosions[i].x+8, explosions[i].y+8);
      0031E9 3A                   11270 	ld	a, (hl-)
      0031EA 2B                   11271 	dec	hl
      0031EB 12                   11272 	ld	(de), a
      0031EC 2A                   11273 	ld	a, (hl+)
      0031ED 5F                   11274 	ld	e, a
      0031EE 2A                   11275 	ld	a, (hl+)
      0031EF 23                   11276 	inc	hl
      0031F0 57                   11277 	ld	d, a
      0031F1 1A                   11278 	ld	a, (de)
      0031F2 C6 08                11279 	add	a, #0x08
      0031F4 5F                   11280 	ld	e, a
      0031F5 0A                   11281 	ld	a, (bc)
      0031F6 C6 08                11282 	add	a, #0x08
      0031F8 4F                   11283 	ld	c, a
      0031F9 7E                   11284 	ld	a, (hl)
      0031FA C6 15                11285 	add	a, #0x15
      0031FC 86                   11286 	add	a, (hl)
      0031FD 2B                   11287 	dec	hl
      0031FE 77                   11288 	ld	(hl), a
                                  11289 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0031FF 6E                   11290 	ld	l, (hl)
                                  11291 ;	spillPairReg hl
                                  11292 ;	spillPairReg hl
      003200 26 00                11293 	ld	h, #0x00
                                  11294 ;	spillPairReg hl
                                  11295 ;	spillPairReg hl
      003202 29                   11296 	add	hl, hl
      003203 29                   11297 	add	hl, hl
      003204 D5                   11298 	push	de
      003205 11r00r00             11299 	ld	de, #_shadow_OAM
      003208 19                   11300 	add	hl, de
      003209 D1                   11301 	pop	de
                                  11302 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00320A 7B                   11303 	ld	a, e
      00320B 22                   11304 	ld	(hl+), a
      00320C 71                   11305 	ld	(hl), c
                                  11306 ;src/main.c:1149: explosions[i].frameCounter++;
      00320D F8 01                11307 	ldhl	sp,#1
      00320F 2A                   11308 	ld	a, (hl+)
      003210 5F                   11309 	ld	e, a
      003211 56                   11310 	ld	d, (hl)
      003212 21 04 00             11311 	ld	hl, #0x0004
      003215 19                   11312 	add	hl, de
      003216 4D                   11313 	ld	c, l
      003217 44                   11314 	ld	b, h
      003218 0A                   11315 	ld	a, (bc)
      003219 3C                   11316 	inc	a
      00321A 02                   11317 	ld	(bc), a
                                  11318 ;src/main.c:1150: if (auxTick == 0) {
      00321B FArBFr00             11319 	ld	a, (#_auxTick)
      00321E B7                   11320 	or	a, a
      00321F C2r35r33             11321 	jp	NZ, 00119$
                                  11322 ;src/main.c:1151: if (explosions[i].frameCounter > EXPLFRAMETIME) {
      003222 0A                   11323 	ld	a, (bc)
      003223 5F                   11324 	ld	e, a
      003224 FArA6r0B             11325 	ld	a, (#_EXPLFRAMETIME)
      003227 93                   11326 	sub	a, e
      003228 D2r35r33             11327 	jp	NC, 00119$
                                  11328 ;src/main.c:1152: explosions[i].frameCounter = 0;
      00322B AF                   11329 	xor	a, a
      00322C 02                   11330 	ld	(bc), a
                                  11331 ;src/main.c:1153: explosions[i].frame += 1; 
      00322D F8 01                11332 	ldhl	sp,#1
      00322F 2A                   11333 	ld	a, (hl+)
      003230 5F                   11334 	ld	e, a
      003231 56                   11335 	ld	d, (hl)
      003232 21 03 00             11336 	ld	hl, #0x0003
      003235 19                   11337 	add	hl, de
      003236 E5                   11338 	push	hl
      003237 7D                   11339 	ld	a, l
      003238 F8 06                11340 	ldhl	sp,	#6
      00323A 77                   11341 	ld	(hl), a
      00323B E1                   11342 	pop	hl
      00323C 7C                   11343 	ld	a, h
      00323D F8 05                11344 	ldhl	sp,	#5
      00323F 32                   11345 	ld	(hl-), a
      003240 2A                   11346 	ld	a, (hl+)
      003241 5F                   11347 	ld	e, a
      003242 56                   11348 	ld	d, (hl)
      003243 1A                   11349 	ld	a, (de)
      003244 4F                   11350 	ld	c, a
      003245 0C                   11351 	inc	c
      003246 3A                   11352 	ld	a, (hl-)
      003247 6E                   11353 	ld	l, (hl)
      003248 67                   11354 	ld	h, a
      003249 71                   11355 	ld	(hl), c
                                  11356 ;src/main.c:1154: if (explosions[i].frame > 3) {
      00324A F8 04                11357 	ldhl	sp,#4
      00324C 2A                   11358 	ld	a, (hl+)
      00324D 5F                   11359 	ld	e, a
      00324E 56                   11360 	ld	d, (hl)
      00324F 1A                   11361 	ld	a, (de)
      003250 4F                   11362 	ld	c, a
      003251 3E 03                11363 	ld	a, #0x03
      003253 91                   11364 	sub	a, c
      003254 30 2A                11365 	jr	NC, 00102$
                                  11366 ;src/main.c:1155: explosions[i].visible = 0;
      003256 F8 01                11367 	ldhl	sp,	#1
      003258 2A                   11368 	ld	a,	(hl+)
      003259 66                   11369 	ld	h, (hl)
      00325A 6F                   11370 	ld	l, a
      00325B 36 00                11371 	ld	(hl), #0x00
                                  11372 ;src/main.c:1156: set_sprite_tile(20 + i+i, 0x7f);
      00325D F8 03                11373 	ldhl	sp,	#3
      00325F 4E                   11374 	ld	c, (hl)
                                  11375 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003260 26 00                11376 	ld	h, #0x00
                                  11377 ;	spillPairReg hl
                                  11378 ;	spillPairReg hl
      003262 69                   11379 	ld	l, c
      003263 29                   11380 	add	hl, hl
      003264 29                   11381 	add	hl, hl
      003265 11r00r00             11382 	ld	de, #_shadow_OAM
      003268 19                   11383 	add	hl, de
      003269 23                   11384 	inc	hl
      00326A 23                   11385 	inc	hl
      00326B 36 7F                11386 	ld	(hl), #0x7f
                                  11387 ;src/main.c:1157: set_sprite_tile(21 + i+i, 0x7f);
      00326D F8 09                11388 	ldhl	sp,	#9
      00326F 4E                   11389 	ld	c, (hl)
                                  11390 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003270 26 00                11391 	ld	h, #0x00
                                  11392 ;	spillPairReg hl
                                  11393 ;	spillPairReg hl
      003272 69                   11394 	ld	l, c
      003273 29                   11395 	add	hl, hl
      003274 29                   11396 	add	hl, hl
      003275 11r00r00             11397 	ld	de, #_shadow_OAM
      003278 19                   11398 	add	hl, de
      003279 23                   11399 	inc	hl
      00327A 23                   11400 	inc	hl
      00327B 36 7F                11401 	ld	(hl), #0x7f
                                  11402 ;src/main.c:1157: set_sprite_tile(21 + i+i, 0x7f);
      00327D C3r35r33             11403 	jp	00119$
      003280                      11404 00102$:
                                  11405 ;src/main.c:1160: set_sprite_tile(20 + i+i, explosions[i].tile + (explosions[i].frame *4));
      003280 F8 01                11406 	ldhl	sp,#1
      003282 2A                   11407 	ld	a, (hl+)
      003283 5F                   11408 	ld	e, a
      003284 56                   11409 	ld	d, (hl)
      003285 21 05 00             11410 	ld	hl, #0x0005
      003288 19                   11411 	add	hl, de
      003289 E5                   11412 	push	hl
      00328A 7D                   11413 	ld	a, l
      00328B F8 08                11414 	ldhl	sp,	#8
      00328D 77                   11415 	ld	(hl), a
      00328E E1                   11416 	pop	hl
      00328F 7C                   11417 	ld	a, h
      003290 F8 07                11418 	ldhl	sp,	#7
      003292 32                   11419 	ld	(hl-), a
      003293 2A                   11420 	ld	a, (hl+)
      003294 5F                   11421 	ld	e, a
      003295 56                   11422 	ld	d, (hl)
      003296 1A                   11423 	ld	a, (de)
      003297 F8 0A                11424 	ldhl	sp,	#10
      003299 32                   11425 	ld	(hl-), a
      00329A 2B                   11426 	dec	hl
      00329B 71                   11427 	ld	(hl), c
      00329C CB 26                11428 	sla	(hl)
      00329E CB 26                11429 	sla	(hl)
      0032A0 23                   11430 	inc	hl
      0032A1 23                   11431 	inc	hl
      0032A2 3A                   11432 	ld	a, (hl-)
      0032A3 2B                   11433 	dec	hl
      0032A4 86                   11434 	add	a, (hl)
      0032A5 23                   11435 	inc	hl
      0032A6 23                   11436 	inc	hl
      0032A7 77                   11437 	ld	(hl), a
      0032A8 F8 03                11438 	ldhl	sp,	#3
                                  11439 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0032AA 3A                   11440 	ld	a, (hl-)
      0032AB 22                   11441 	ld	(hl+), a
      0032AC 36 00                11442 	ld	(hl), #0x00
      0032AE 3E 02                11443 	ld	a, #0x02
      0032B0                      11444 00153$:
      0032B0 F8 02                11445 	ldhl	sp,	#2
      0032B2 CB 26                11446 	sla	(hl)
      0032B4 23                   11447 	inc	hl
      0032B5 CB 16                11448 	rl	(hl)
      0032B7 3D                   11449 	dec	a
      0032B8 20 F6                11450 	jr	NZ, 00153$
      0032BA 11r00r00             11451 	ld	de, #_shadow_OAM
      0032BD 3A                   11452 	ld	a, (hl-)
      0032BE 6E                   11453 	ld	l, (hl)
      0032BF 67                   11454 	ld	h, a
      0032C0 19                   11455 	add	hl, de
      0032C1 33                   11456 	inc	sp
      0032C2 33                   11457 	inc	sp
      0032C3 5D                   11458 	ld	e, l
      0032C4 54                   11459 	ld	d, h
      0032C5 D5                   11460 	push	de
      0032C6 21 02 00             11461 	ld	hl, #0x0002
      0032C9 19                   11462 	add	hl, de
      0032CA E5                   11463 	push	hl
      0032CB 7D                   11464 	ld	a, l
      0032CC F8 04                11465 	ldhl	sp,	#4
      0032CE 77                   11466 	ld	(hl), a
      0032CF E1                   11467 	pop	hl
      0032D0 7C                   11468 	ld	a, h
      0032D1 F8 03                11469 	ldhl	sp,	#3
      0032D3 32                   11470 	ld	(hl-), a
      0032D4 2A                   11471 	ld	a, (hl+)
      0032D5 5F                   11472 	ld	e, a
      0032D6 56                   11473 	ld	d, (hl)
      0032D7 F8 0A                11474 	ldhl	sp,	#10
      0032D9 7E                   11475 	ld	a, (hl)
      0032DA 12                   11476 	ld	(de), a
                                  11477 ;src/main.c:1161: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      0032DB F8 06                11478 	ldhl	sp,#6
      0032DD 2A                   11479 	ld	a, (hl+)
      0032DE 5F                   11480 	ld	e, a
      0032DF 56                   11481 	ld	d, (hl)
      0032E0 1A                   11482 	ld	a, (de)
      0032E1 F8 0A                11483 	ldhl	sp,	#10
      0032E3 77                   11484 	ld	(hl), a
      0032E4 F8 04                11485 	ldhl	sp,#4
      0032E6 2A                   11486 	ld	a, (hl+)
      0032E7 5F                   11487 	ld	e, a
      0032E8 56                   11488 	ld	d, (hl)
      0032E9 1A                   11489 	ld	a, (de)
      0032EA F8 08                11490 	ldhl	sp,	#8
      0032EC 77                   11491 	ld	(hl), a
      0032ED CB 26                11492 	sla	(hl)
      0032EF CB 26                11493 	sla	(hl)
      0032F1 23                   11494 	inc	hl
      0032F2 23                   11495 	inc	hl
      0032F3 3A                   11496 	ld	a, (hl-)
      0032F4 2B                   11497 	dec	hl
      0032F5 86                   11498 	add	a, (hl)
      0032F6 23                   11499 	inc	hl
      0032F7 23                   11500 	inc	hl
      0032F8 77                   11501 	ld	(hl), a
      0032F9 34                   11502 	inc	(hl)
      0032FA 34                   11503 	inc	(hl)
      0032FB 2B                   11504 	dec	hl
                                  11505 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0032FC 3A                   11506 	ld	a, (hl-)
      0032FD 22                   11507 	ld	(hl+), a
      0032FE 36 00                11508 	ld	(hl), #0x00
      003300 3E 02                11509 	ld	a, #0x02
      003302                      11510 00154$:
      003302 F8 08                11511 	ldhl	sp,	#8
      003304 CB 26                11512 	sla	(hl)
      003306 23                   11513 	inc	hl
      003307 CB 16                11514 	rl	(hl)
      003309 3D                   11515 	dec	a
      00330A 20 F6                11516 	jr	NZ, 00154$
      00330C 2B                   11517 	dec	hl
      00330D 2A                   11518 	ld	a, (hl+)
      00330E 5F                   11519 	ld	e, a
      00330F 56                   11520 	ld	d, (hl)
      003310 21r00r00             11521 	ld	hl, #_shadow_OAM
      003313 19                   11522 	add	hl, de
      003314 E5                   11523 	push	hl
      003315 7D                   11524 	ld	a, l
      003316 F8 08                11525 	ldhl	sp,	#8
      003318 77                   11526 	ld	(hl), a
      003319 E1                   11527 	pop	hl
      00331A 7C                   11528 	ld	a, h
      00331B F8 07                11529 	ldhl	sp,	#7
      00331D 32                   11530 	ld	(hl-), a
      00331E 2A                   11531 	ld	a, (hl+)
      00331F 5F                   11532 	ld	e, a
      003320 56                   11533 	ld	d, (hl)
      003321 21 02 00             11534 	ld	hl, #0x0002
      003324 19                   11535 	add	hl, de
      003325 E5                   11536 	push	hl
      003326 7D                   11537 	ld	a, l
      003327 F8 0A                11538 	ldhl	sp,	#10
      003329 77                   11539 	ld	(hl), a
      00332A E1                   11540 	pop	hl
      00332B 7C                   11541 	ld	a, h
      00332C F8 09                11542 	ldhl	sp,	#9
      00332E 32                   11543 	ld	(hl-), a
      00332F 2A                   11544 	ld	a, (hl+)
      003330 5F                   11545 	ld	e, a
      003331 2A                   11546 	ld	a, (hl+)
      003332 57                   11547 	ld	d, a
      003333 7E                   11548 	ld	a, (hl)
      003334 12                   11549 	ld	(de), a
                                  11550 ;src/main.c:1161: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      003335                      11551 00119$:
                                  11552 ;src/main.c:1141: for (uint8_t i = 0; i < exCount; ++i) {
      003335 F8 0B                11553 	ldhl	sp,	#11
      003337 34                   11554 	inc	(hl)
      003338 C3r63r31             11555 	jp	00118$
      00333B                      11556 00120$:
                                  11557 ;src/main.c:1167: }
      00333B E8 0C                11558 	add	sp, #12
      00333D C9                   11559 	ret
                                  11560 ;src/main.c:1169: void initEnemyOptions() {
                                  11561 ;	---------------------------------
                                  11562 ; Function initEnemyOptions
                                  11563 ; ---------------------------------
      00333E                      11564 _initEnemyOptions::
                                  11565 ;src/main.c:1170: enemyOptions[0] = blob;
      00333E 11 12 00             11566 	ld	de, #0x0012
      003341 D5                   11567 	push	de
      003342 11r10r00             11568 	ld	de, #_blob
      003345 D5                   11569 	push	de
      003346 11r00r00             11570 	ld	de, #_enemyOptions
      003349 D5                   11571 	push	de
      00334A CDr00r00             11572 	call	___memcpy
      00334D E8 06                11573 	add	sp, #6
                                  11574 ;src/main.c:1171: enemyOptions[1] = bomb;
      00334F 11 12 00             11575 	ld	de, #0x0012
      003352 D5                   11576 	push	de
      003353 11r22r00             11577 	ld	de, #_bomb
      003356 D5                   11578 	push	de
      003357 11r12r00             11579 	ld	de, #(_enemyOptions + 18)
      00335A D5                   11580 	push	de
      00335B CDr00r00             11581 	call	___memcpy
      00335E E8 06                11582 	add	sp, #6
                                  11583 ;src/main.c:1172: enemyOptions[2] = miniship;
      003360 11 12 00             11584 	ld	de, #0x0012
      003363 D5                   11585 	push	de
      003364 11r34r00             11586 	ld	de, #_miniship
      003367 D5                   11587 	push	de
      003368 11r24r00             11588 	ld	de, #(_enemyOptions + 36)
      00336B D5                   11589 	push	de
      00336C CDr00r00             11590 	call	___memcpy
      00336F E8 06                11591 	add	sp, #6
                                  11592 ;src/main.c:1173: enemyOptions[3] = shieldship;
      003371 11 12 00             11593 	ld	de, #0x0012
      003374 D5                   11594 	push	de
      003375 11r58r00             11595 	ld	de, #_shieldship
      003378 D5                   11596 	push	de
      003379 11r36r00             11597 	ld	de, #(_enemyOptions + 54)
      00337C D5                   11598 	push	de
      00337D CDr00r00             11599 	call	___memcpy
      003380 E8 06                11600 	add	sp, #6
                                  11601 ;src/main.c:1175: enemyOptions[4] = bigblob;
      003382 11 12 00             11602 	ld	de, #0x0012
      003385 D5                   11603 	push	de
      003386 11r46r00             11604 	ld	de, #_bigblob
      003389 D5                   11605 	push	de
      00338A 11r48r00             11606 	ld	de, #(_enemyOptions + 72)
      00338D D5                   11607 	push	de
      00338E CDr00r00             11608 	call	___memcpy
      003391 E8 06                11609 	add	sp, #6
                                  11610 ;src/main.c:1176: }
      003393 C9                   11611 	ret
                                  11612 ;src/main.c:1179: void initProjectiles() {
                                  11613 ;	---------------------------------
                                  11614 ; Function initProjectiles
                                  11615 ; ---------------------------------
      003394                      11616 _initProjectiles::
                                  11617 ;src/main.c:1180: set_sprite_data(0x20, 17, ProjectileTiles); 
      003394 11rE8r05             11618 	ld	de, #_ProjectileTiles
      003397 D5                   11619 	push	de
      003398 21 20 11             11620 	ld	hl, #0x1120
      00339B E5                   11621 	push	hl
      00339C CDr00r00             11622 	call	_set_sprite_data
      00339F E8 04                11623 	add	sp, #4
                                  11624 ;src/main.c:1182: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0033A1 AF                   11625 	xor	a, a
      0033A2                      11626 00103$:
      0033A2 21r9Fr0B             11627 	ld	hl, #_PROJECTILECOUNT
      0033A5 4E                   11628 	ld	c, (hl)
      0033A6 B9                   11629 	cp	a, c
      0033A7 D0                   11630 	ret	NC
      0033A8 3C                   11631 	inc	a
                                  11632 ;src/main.c:1186: }
      0033A9 18 F7                11633 	jr	00103$
                                  11634 ;src/main.c:1188: void initGame() {
                                  11635 ;	---------------------------------
                                  11636 ; Function initGame
                                  11637 ; ---------------------------------
      0033AB                      11638 _initGame::
                                  11639 ;src/main.c:1191: xDir = 0;
      0033AB 21r93r00             11640 	ld	hl, #_xDir
      0033AE 36 00                11641 	ld	(hl), #0x00
                                  11642 ;src/main.c:1192: yDir = -1;
      0033B0 21r94r00             11643 	ld	hl, #_yDir
      0033B3 36 FF                11644 	ld	(hl), #0xff
                                  11645 ;src/main.c:1193: xSpeed = 0;
      0033B5 21r95r00             11646 	ld	hl, #_xSpeed
      0033B8 36 00                11647 	ld	(hl), #0x00
                                  11648 ;src/main.c:1194: ySpeed = 0;
      0033BA 21r96r00             11649 	ld	hl, #_ySpeed
      0033BD 36 00                11650 	ld	(hl), #0x00
                                  11651 ;src/main.c:1197: playerX = 80<<5;
      0033BF 21r97r00             11652 	ld	hl, #_playerX
      0033C2 36 00                11653 	ld	(hl), #0x00
      0033C4 23                   11654 	inc	hl
      0033C5 36 0A                11655 	ld	(hl), #0x0a
                                  11656 ;src/main.c:1198: playerY = 80<<5;
      0033C7 21r99r00             11657 	ld	hl, #_playerY
      0033CA 36 00                11658 	ld	(hl), #0x00
      0033CC 23                   11659 	inc	hl
      0033CD 36 0A                11660 	ld	(hl), #0x0a
                                  11661 ;src/main.c:1200: playerDrawX = 80;
      0033CF 21r9Br00             11662 	ld	hl, #_playerDrawX
      0033D2 36 50                11663 	ld	(hl), #0x50
                                  11664 ;src/main.c:1201: playerDrawY = 80;
      0033D4 21r9Cr00             11665 	ld	hl, #_playerDrawY
      0033D7 36 50                11666 	ld	(hl), #0x50
                                  11667 ;src/main.c:1204: bgX = 0;
      0033D9 AF                   11668 	xor	a, a
      0033DA 21r9Dr00             11669 	ld	hl, #_bgX
      0033DD 22                   11670 	ld	(hl+), a
      0033DE 77                   11671 	ld	(hl), a
                                  11672 ;src/main.c:1205: bgY = 0;
      0033DF AF                   11673 	xor	a, a
      0033E0 21r9Fr00             11674 	ld	hl, #_bgY
      0033E3 22                   11675 	ld	(hl+), a
      0033E4 77                   11676 	ld	(hl), a
                                  11677 ;src/main.c:1207: hull = maxHull;
      0033E5 FArA1r0B             11678 	ld	a, (#_maxHull)
      0033E8 EArF6r00             11679 	ld	(#_hull),a
                                  11680 ;src/main.c:1208: shield = maxShield;
      0033EB FArA2r0B             11681 	ld	a, (#_maxShield)
      0033EE EArF7r00             11682 	ld	(#_shield),a
                                  11683 ;src/main.c:1210: DISPLAY_ON;
      0033F1 F0r00                11684 	ldh	a, (_LCDC_REG + 0)
      0033F3 F6 80                11685 	or	a, #0x80
      0033F5 E0r00                11686 	ldh	(_LCDC_REG + 0), a
                                  11687 ;src/main.c:1211: SPRITES_8x16;
      0033F7 F0r00                11688 	ldh	a, (_LCDC_REG + 0)
      0033F9 F6 04                11689 	or	a, #0x04
      0033FB E0r00                11690 	ldh	(_LCDC_REG + 0), a
                                  11691 ;src/main.c:1212: set_sprite_data(0, 12, Player1);
      0033FD 11r83r07             11692 	ld	de, #_Player1
      003400 D5                   11693 	push	de
      003401 21 00 0C             11694 	ld	hl, #0xc00
      003404 E5                   11695 	push	hl
      003405 CDr00r00             11696 	call	_set_sprite_data
      003408 E8 04                11697 	add	sp, #4
                                  11698 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00340A 21r02r00             11699 	ld	hl, #(_shadow_OAM + 2)
      00340D 36 00                11700 	ld	(hl), #0x00
      00340F 21r06r00             11701 	ld	hl, #(_shadow_OAM + 6)
      003412 36 02                11702 	ld	(hl), #0x02
                                  11703 ;src/main.c:1218: SHOW_SPRITES;
      003414 F0r00                11704 	ldh	a, (_LCDC_REG + 0)
      003416 F6 02                11705 	or	a, #0x02
      003418 E0r00                11706 	ldh	(_LCDC_REG + 0), a
                                  11707 ;src/main.c:1222: font_init();
      00341A CDr00r00             11708 	call	_font_init
                                  11709 ;src/main.c:1224: min_font = font_load(font_min); // 36 tiles of characters
      00341D 11r00r00             11710 	ld	de, #_font_min
      003420 D5                   11711 	push	de
      003421 CDr00r00             11712 	call	_font_load
      003424 E1                   11713 	pop	hl
      003425 21rF8r00             11714 	ld	hl, #_min_font
      003428 7B                   11715 	ld	a, e
      003429 22                   11716 	ld	(hl+), a
                                  11717 ;src/main.c:1225: font_set(min_font);
      00342A 7A                   11718 	ld	a, d
      00342B 32                   11719 	ld	(hl-), a
      00342C 2A                   11720 	ld	a, (hl+)
      00342D 5F                   11721 	ld	e, a
      00342E 56                   11722 	ld	d, (hl)
      00342F D5                   11723 	push	de
      003430 CDr00r00             11724 	call	_font_set
      003433 E1                   11725 	pop	hl
                                  11726 ;src/main.c:1226: set_win_tiles(1,0,4,1,hullabel);
      003434 11r00r00             11727 	ld	de, #_hullabel
      003437 D5                   11728 	push	de
      003438 21 04 01             11729 	ld	hl, #0x104
      00343B E5                   11730 	push	hl
      00343C 21 01 00             11731 	ld	hl, #0x01
      00343F E5                   11732 	push	hl
      003440 CDr00r00             11733 	call	_set_win_tiles
      003443 E8 06                11734 	add	sp, #6
                                  11735 ;src/main.c:1227: set_win_tiles(1,1,4,1,shieldlabel);
      003445 11r04r00             11736 	ld	de, #_shieldlabel
      003448 D5                   11737 	push	de
      003449 21 04 01             11738 	ld	hl, #0x104
      00344C E5                   11739 	push	hl
      00344D 21 01 01             11740 	ld	hl, #0x101
      003450 E5                   11741 	push	hl
      003451 CDr00r00             11742 	call	_set_win_tiles
      003454 E8 06                11743 	add	sp, #6
                                  11744 ;src/main.c:1232: set_bkg_data(0x50,1,healthblock);
      003456 11r07r05             11745 	ld	de, #_healthblock
      003459 D5                   11746 	push	de
      00345A 21 50 01             11747 	ld	hl, #0x150
      00345D E5                   11748 	push	hl
      00345E CDr00r00             11749 	call	_set_bkg_data
      003461 E8 04                11750 	add	sp, #4
                                  11751 ;src/main.c:1234: setHealthBar(0, hull);
      003463 FArF6r00             11752 	ld	a, (#_hull)
      003466 67                   11753 	ld	h, a
      003467 2E 00                11754 	ld	l, #0x00
      003469 E5                   11755 	push	hl
      00346A CDrA9r0B             11756 	call	_setHealthBar
      00346D E1                   11757 	pop	hl
                                  11758 ;src/main.c:1235: setHealthBar(1, shield);
      00346E FArF7r00             11759 	ld	a, (#_shield)
      003471 67                   11760 	ld	h, a
      003472 2E 01                11761 	ld	l, #0x01
      003474 E5                   11762 	push	hl
      003475 CDrA9r0B             11763 	call	_setHealthBar
      003478 E1                   11764 	pop	hl
                                  11765 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003479 3E 07                11766 	ld	a, #0x07
      00347B E0r00                11767 	ldh	(_WX_REG + 0), a
      00347D 3E 7E                11768 	ld	a, #0x7e
      00347F E0r00                11769 	ldh	(_WY_REG + 0), a
                                  11770 ;src/main.c:1242: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      003481 11r87r04             11771 	ld	de, #_backgroundtiles
      003484 D5                   11772 	push	de
      003485 21 25 08             11773 	ld	hl, #0x825
      003488 E5                   11774 	push	hl
      003489 CDr00r00             11775 	call	_set_bkg_data
      00348C E8 04                11776 	add	sp, #4
                                  11777 ;src/main.c:1243: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      00348E 11r87r00             11778 	ld	de, #_background1
      003491 D5                   11779 	push	de
      003492 21 20 20             11780 	ld	hl, #0x2020
      003495 E5                   11781 	push	hl
      003496 AF                   11782 	xor	a, a
      003497 0F                   11783 	rrca
      003498 F5                   11784 	push	af
      003499 CDr00r00             11785 	call	_set_bkg_tiles
      00349C E8 06                11786 	add	sp, #6
                                  11787 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00349E AF                   11788 	xor	a, a
      00349F E0r00                11789 	ldh	(_SCX_REG + 0), a
      0034A1 AF                   11790 	xor	a, a
      0034A2 E0r00                11791 	ldh	(_SCY_REG + 0), a
                                  11792 ;src/main.c:1249: set_bkg_data(0x51, 18, ProjectileTiles);
      0034A4 11rE8r05             11793 	ld	de, #_ProjectileTiles
      0034A7 D5                   11794 	push	de
      0034A8 21 51 12             11795 	ld	hl, #0x1251
      0034AB E5                   11796 	push	hl
      0034AC CDr00r00             11797 	call	_set_bkg_data
      0034AF E8 04                11798 	add	sp, #4
                                  11799 ;src/main.c:1251: set_win_tiles(10, 0,4,1,weaponlabel);
      0034B1 11r08r00             11800 	ld	de, #_weaponlabel
      0034B4 D5                   11801 	push	de
      0034B5 21 04 01             11802 	ld	hl, #0x104
      0034B8 E5                   11803 	push	hl
      0034B9 21 0A 00             11804 	ld	hl, #0x0a
      0034BC E5                   11805 	push	hl
      0034BD CDr00r00             11806 	call	_set_win_tiles
      0034C0 E8 06                11807 	add	sp, #6
                                  11808 ;src/main.c:1252: set_win_tiles(10, 1,4,1,scorelabel);
      0034C2 11r0Cr00             11809 	ld	de, #_scorelabel
      0034C5 D5                   11810 	push	de
      0034C6 21 04 01             11811 	ld	hl, #0x104
      0034C9 E5                   11812 	push	hl
      0034CA 21 0A 01             11813 	ld	hl, #0x10a
      0034CD E5                   11814 	push	hl
      0034CE CDr00r00             11815 	call	_set_win_tiles
      0034D1 E8 06                11816 	add	sp, #6
                                  11817 ;src/main.c:1254: setGunIcon();
      0034D3 CDrC1r27             11818 	call	_setGunIcon
                                  11819 ;src/main.c:1255: SHOW_BKG;
      0034D6 F0r00                11820 	ldh	a, (_LCDC_REG + 0)
      0034D8 F6 01                11821 	or	a, #0x01
      0034DA E0r00                11822 	ldh	(_LCDC_REG + 0), a
                                  11823 ;src/main.c:1256: SHOW_WIN;;
      0034DC F0r00                11824 	ldh	a, (_LCDC_REG + 0)
      0034DE F6 20                11825 	or	a, #0x20
      0034E0 E0r00                11826 	ldh	(_LCDC_REG + 0), a
                                  11827 ;src/main.c:1258: SCORE = MAKE_BCD(00000);
      0034E2 AF                   11828 	xor	a, a
      0034E3 21rB3r00             11829 	ld	hl, #_SCORE
      0034E6 22                   11830 	ld	(hl+), a
      0034E7 22                   11831 	ld	(hl+), a
      0034E8 22                   11832 	ld	(hl+), a
      0034E9 77                   11833 	ld	(hl), a
                                  11834 ;src/main.c:1259: updateScore();
      0034EA CDrBAr0C             11835 	call	_updateScore
                                  11836 ;src/main.c:1260: missiles = 0;
      0034ED 21rA8r00             11837 	ld	hl, #_missiles
      0034F0 36 00                11838 	ld	(hl), #0x00
                                  11839 ;src/main.c:1261: MISSILES = MAKE_BCD(0);
      0034F2 AF                   11840 	xor	a, a
      0034F3 21rA9r00             11841 	ld	hl, #_MISSILES
      0034F6 22                   11842 	ld	(hl+), a
      0034F7 22                   11843 	ld	(hl+), a
      0034F8 22                   11844 	ld	(hl+), a
      0034F9 77                   11845 	ld	(hl), a
                                  11846 ;src/main.c:1262: updateMissileCount(0);
      0034FA AF                   11847 	xor	a, a
      0034FB F5                   11848 	push	af
      0034FC 33                   11849 	inc	sp
      0034FD CDrE4r0C             11850 	call	_updateMissileCount
      003500 33                   11851 	inc	sp
                                  11852 ;src/main.c:1263: set_win_tiles(17, 0,1,1,gunMap+2);
      003501 11rB0r00             11853 	ld	de, #(_gunMap + 2)
      003504 D5                   11854 	push	de
      003505 21 01 01             11855 	ld	hl, #0x101
      003508 E5                   11856 	push	hl
      003509 21 11 00             11857 	ld	hl, #0x11
      00350C E5                   11858 	push	hl
      00350D CDr00r00             11859 	call	_set_win_tiles
      003510 E8 06                11860 	add	sp, #6
                                  11861 ;src/main.c:1267: pickup = upgrade;//upgrade;
      003512 11 09 00             11862 	ld	de, #0x0009
      003515 D5                   11863 	push	de
      003516 11r08r07             11864 	ld	de, #_upgrade
      003519 D5                   11865 	push	de
      00351A 11rFAr00             11866 	ld	de, #_pickup
      00351D D5                   11867 	push	de
      00351E CDr00r00             11868 	call	___memcpy
      003521 E8 06                11869 	add	sp, #6
                                  11870 ;src/main.c:1269: set_sprite_data(0x70, 6, Pickups);
      003523 11r23r07             11871 	ld	de, #_Pickups
      003526 D5                   11872 	push	de
      003527 21 70 06             11873 	ld	hl, #0x670
      00352A E5                   11874 	push	hl
      00352B CDr00r00             11875 	call	_set_sprite_data
      00352E E8 04                11876 	add	sp, #4
                                  11877 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003530 21r0Er00             11878 	ld	hl, #(_shadow_OAM + 14)
      003533 36 7F                11879 	ld	(hl), #0x7f
                                  11880 ;src/main.c:1271: move_sprite(3, pickup.x + 4, pickup.y + 12);
      003535 FArFDr00             11881 	ld	a, (#(_pickup + 3) + 0)
      003538 C6 0C                11882 	add	a, #0x0c
      00353A 47                   11883 	ld	b, a
      00353B FArFBr00             11884 	ld	a, (#(_pickup + 1) + 0)
      00353E C6 04                11885 	add	a, #0x04
      003540 4F                   11886 	ld	c, a
                                  11887 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003541 21r0Cr00             11888 	ld	hl, #(_shadow_OAM + 12)
                                  11889 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003544 78                   11890 	ld	a, b
      003545 22                   11891 	ld	(hl+), a
      003546 71                   11892 	ld	(hl), c
                                  11893 ;src/main.c:1273: for (uint8_t i = 0; i<exCount; ++i) {
      003547 0E 00                11894 	ld	c, #0x00
      003549                      11895 00109$:
      003549 21rA5r0B             11896 	ld	hl, #_exCount
      00354C 46                   11897 	ld	b, (hl)
      00354D 79                   11898 	ld	a, c
      00354E 90                   11899 	sub	a, b
      00354F 30 1E                11900 	jr	NC, 00101$
                                  11901 ;src/main.c:1274: explosions[i] = ex;
      003551 06 00                11902 	ld	b, #0x00
      003553 69                   11903 	ld	l, c
      003554 60                   11904 	ld	h, b
      003555 29                   11905 	add	hl, hl
      003556 09                   11906 	add	hl, bc
      003557 29                   11907 	add	hl, hl
      003558 11r03r01             11908 	ld	de, #_explosions
      00355B 19                   11909 	add	hl, de
      00355C C5                   11910 	push	bc
      00355D 11 06 00             11911 	ld	de, #0x0006
      003560 D5                   11912 	push	de
      003561 11r83r08             11913 	ld	de, #_ex
      003564 D5                   11914 	push	de
      003565 E5                   11915 	push	hl
      003566 CDr00r00             11916 	call	___memcpy
      003569 E8 06                11917 	add	sp, #6
      00356B C1                   11918 	pop	bc
                                  11919 ;src/main.c:1273: for (uint8_t i = 0; i<exCount; ++i) {
      00356C 0C                   11920 	inc	c
      00356D 18 DA                11921 	jr	00109$
      00356F                      11922 00101$:
                                  11923 ;src/main.c:1276: set_sprite_data(exTiles[0], 16, Ex1);
      00356F FArBCr00             11924 	ld	a, (#_exTiles + 0)
      003572 11r89r08             11925 	ld	de, #_Ex1
      003575 D5                   11926 	push	de
      003576 26 10                11927 	ld	h, #0x10
                                  11928 ;	spillPairReg hl
                                  11929 ;	spillPairReg hl
      003578 E5                   11930 	push	hl
      003579 33                   11931 	inc	sp
      00357A F5                   11932 	push	af
      00357B 33                   11933 	inc	sp
      00357C CDr00r00             11934 	call	_set_sprite_data
      00357F E8 04                11935 	add	sp, #4
                                  11936 ;src/main.c:1277: set_sprite_data(exTiles[1], 16, Ex2);
      003581 FArBDr00             11937 	ld	a, (#(_exTiles + 1) + 0)
      003584 11r89r09             11938 	ld	de, #_Ex2
      003587 D5                   11939 	push	de
      003588 26 10                11940 	ld	h, #0x10
                                  11941 ;	spillPairReg hl
                                  11942 ;	spillPairReg hl
      00358A E5                   11943 	push	hl
      00358B 33                   11944 	inc	sp
      00358C F5                   11945 	push	af
      00358D 33                   11946 	inc	sp
      00358E CDr00r00             11947 	call	_set_sprite_data
      003591 E8 04                11948 	add	sp, #4
                                  11949 ;src/main.c:1278: set_sprite_data(exTiles[2], 16, Ex3);
      003593 FArBEr00             11950 	ld	a, (#(_exTiles + 2) + 0)
      003596 11r89r0A             11951 	ld	de, #_Ex3
      003599 D5                   11952 	push	de
      00359A 26 10                11953 	ld	h, #0x10
                                  11954 ;	spillPairReg hl
                                  11955 ;	spillPairReg hl
      00359C E5                   11956 	push	hl
      00359D 33                   11957 	inc	sp
      00359E F5                   11958 	push	af
      00359F 33                   11959 	inc	sp
      0035A0 CDr00r00             11960 	call	_set_sprite_data
      0035A3 E8 04                11961 	add	sp, #4
                                  11962 ;src/main.c:1282: }
      0035A5 C9                   11963 	ret
                                  11964 ;src/main.c:1284: void main(){
                                  11965 ;	---------------------------------
                                  11966 ; Function main
                                  11967 ; ---------------------------------
      0035A6                      11968 _main::
                                  11969 ;src/main.c:1287: initEnemyOptions();
      0035A6 CDr3Er33             11970 	call	_initEnemyOptions
                                  11971 ;src/main.c:1290: STAT_REG = 0x45;
      0035A9 3E 45                11972 	ld	a, #0x45
      0035AB E0r00                11973 	ldh	(_STAT_REG + 0), a
                                  11974 ;src/main.c:1291: LYC_REG = 0x7e; //line 126
      0035AD 3E 7E                11975 	ld	a, #0x7e
      0035AF E0r00                11976 	ldh	(_LYC_REG + 0), a
                                  11977 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0035B1 F3                   11978 	di
                                  11979 ;src/main.c:1293: add_LCD(interruptLCD);
      0035B2 11r00r00             11980 	ld	de, #_interruptLCD
      0035B5 D5                   11981 	push	de
      0035B6 CDr00r00             11982 	call	_add_LCD
      0035B9 33                   11983 	inc	sp
      0035BA 33                   11984 	inc	sp
                                  11985 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      0035BB FB                   11986 	ei
                                  11987 ;src/main.c:1295: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      0035BC 3E 03                11988 	ld	a, #0x03
      0035BE F5                   11989 	push	af
      0035BF 33                   11990 	inc	sp
      0035C0 CDr00r00             11991 	call	_set_interrupts
      0035C3 33                   11992 	inc	sp
                                  11993 ;src/main.c:1299: NR52_REG = 0x80; // sound on 
      0035C4 3E 80                11994 	ld	a, #0x80
      0035C6 E0r00                11995 	ldh	(_NR52_REG + 0), a
                                  11996 ;src/main.c:1300: NR50_REG = 0x77; // volume
      0035C8 3E 77                11997 	ld	a, #0x77
      0035CA E0r00                11998 	ldh	(_NR50_REG + 0), a
                                  11999 ;src/main.c:1301: NR51_REG = 0xFF; // all channels
      0035CC 3E FF                12000 	ld	a, #0xff
      0035CE E0r00                12001 	ldh	(_NR51_REG + 0), a
                                  12002 ;src/main.c:1305: waitpad(J_A);
      0035D0 3E 10                12003 	ld	a, #0x10
      0035D2 F5                   12004 	push	af
      0035D3 33                   12005 	inc	sp
      0035D4 CDr00r00             12006 	call	_waitpad
      0035D7 33                   12007 	inc	sp
                                  12008 ;src/main.c:1306: uint16_t seed = LY_REG;
      0035D8 F0r00                12009 	ldh	a, (_LY_REG + 0)
      0035DA 4F                   12010 	ld	c, a
      0035DB 06 00                12011 	ld	b, #0x00
                                  12012 ;src/main.c:1307: seed |= (uint16_t)DIV_REG << 8;
      0035DD F0r00                12013 	ldh	a, (_DIV_REG + 0)
      0035DF 5F                   12014 	ld	e, a
      0035E0 AF                   12015 	xor	a, a
      0035E1 B1                   12016 	or	a, c
      0035E2 4F                   12017 	ld	c, a
      0035E3 7B                   12018 	ld	a, e
      0035E4 B0                   12019 	or	a, b
      0035E5 47                   12020 	ld	b, a
                                  12021 ;src/main.c:1308: initrand(seed);
      0035E6 C5                   12022 	push	bc
      0035E7 CDr00r00             12023 	call	_initrand
      0035EA E1                   12024 	pop	hl
                                  12025 ;src/main.c:1313: initGame();
      0035EB CDrABr33             12026 	call	_initGame
                                  12027 ;src/main.c:1314: initEnemies(1);
      0035EE 3E 01                12028 	ld	a, #0x01
      0035F0 F5                   12029 	push	af
      0035F1 33                   12030 	inc	sp
      0035F2 CDrF9r0F             12031 	call	_initEnemies
      0035F5 33                   12032 	inc	sp
                                  12033 ;src/main.c:1315: initProjectiles();
      0035F6 CDr94r33             12034 	call	_initProjectiles
                                  12035 ;src/main.c:1317: while(1) {
      0035F9                      12036 00122$:
                                  12037 ;src/main.c:1318: SHOW_SPRITES;
      0035F9 F0r00                12038 	ldh	a, (_LCDC_REG + 0)
      0035FB F6 02                12039 	or	a, #0x02
      0035FD E0r00                12040 	ldh	(_LCDC_REG + 0), a
                                  12041 ;src/main.c:1320: joydata = joypad(); // query for button states
      0035FF CDr00r00             12042 	call	_joypad
      003602 21rF5r00             12043 	ld	hl, #_joydata
      003605 73                   12044 	ld	(hl), e
                                  12045 ;src/main.c:1322: updateDirection(); // set player direction
      003606 CDr71r0D             12046 	call	_updateDirection
                                  12047 ;src/main.c:1325: move(); 
      003609 CDr69r1B             12048 	call	_move
                                  12049 ;src/main.c:1327: moveProjectiles();
      00360C CDrA2r2D             12050 	call	_moveProjectiles
                                  12051 ;src/main.c:1328: tickPickups();
      00360F CDr85r2F             12052 	call	_tickPickups
                                  12053 ;src/main.c:1329: tickEx();
      003612 CDr5Dr31             12054 	call	_tickEx
                                  12055 ;src/main.c:1333: updateEnemyPositions();
      003615 CDr48r12             12056 	call	_updateEnemyPositions
                                  12057 ;src/main.c:1336: checkCollision(); 
      003618 CDrFEr22             12058 	call	_checkCollision
                                  12059 ;src/main.c:971: if (shield < maxShield) {
      00361B 21rA2r0B             12060 	ld	hl, #_maxShield
      00361E 4E                   12061 	ld	c, (hl)
      00361F 59                   12062 	ld	e, c
      003620 21rF7r00             12063 	ld	hl, #_shield
      003623 56                   12064 	ld	d, (hl)
      003624 7E                   12065 	ld	a, (hl)
      003625 91                   12066 	sub	a, c
      003626 CB 7B                12067 	bit	7, e
      003628 28 07                12068 	jr	Z, 00194$
      00362A CB 7A                12069 	bit	7, d
      00362C 20 08                12070 	jr	NZ, 00195$
      00362E BF                   12071 	cp	a, a
      00362F 18 05                12072 	jr	00195$
      003631                      12073 00194$:
      003631 CB 7A                12074 	bit	7, d
      003633 28 01                12075 	jr	Z, 00195$
      003635 37                   12076 	scf
      003636                      12077 00195$:
      003636 30 04                12078 	jr	NC, 00130$
                                  12079 ;src/main.c:972: shield += 1;
      003638 21rF7r00             12080 	ld	hl, #_shield
      00363B 34                   12081 	inc	(hl)
      00363C                      12082 00130$:
                                  12083 ;src/main.c:974: setHealthBar(0, hull);
      00363C FArF6r00             12084 	ld	a, (#_hull)
      00363F 67                   12085 	ld	h, a
      003640 2E 00                12086 	ld	l, #0x00
      003642 E5                   12087 	push	hl
      003643 CDrA9r0B             12088 	call	_setHealthBar
      003646 E1                   12089 	pop	hl
                                  12090 ;src/main.c:975: setHealthBar(1, shield);
      003647 FArF7r00             12091 	ld	a, (#_shield)
      00364A 67                   12092 	ld	h, a
      00364B 2E 01                12093 	ld	l, #0x01
      00364D E5                   12094 	push	hl
      00364E CDrA9r0B             12095 	call	_setHealthBar
      003651 E1                   12096 	pop	hl
                                  12097 ;src/main.c:1341: if (joydata & J_B && fireCooldown == 0) {
      003652 FArF5r00             12098 	ld	a, (#_joydata)
      003655 CB 6F                12099 	bit	5, a
      003657 28 09                12100 	jr	Z, 00102$
      003659 FAr92r00             12101 	ld	a, (#_fireCooldown)
      00365C B7                   12102 	or	a, a
      00365D 20 03                12103 	jr	NZ, 00102$
                                  12104 ;src/main.c:1342: fire();
      00365F CDrF4r27             12105 	call	_fire
      003662                      12106 00102$:
                                  12107 ;src/main.c:1344: if (fireCooldown > 0) {
      003662 21r92r00             12108 	ld	hl, #_fireCooldown
      003665 7E                   12109 	ld	a, (hl)
      003666 B7                   12110 	or	a, a
      003667 28 01                12111 	jr	Z, 00105$
                                  12112 ;src/main.c:1345: --fireCooldown;
      003669 35                   12113 	dec	(hl)
      00366A                      12114 00105$:
                                  12115 ;src/main.c:1348: if (joydata & J_SELECT && switchDelay == 0) {
      00366A FArF5r00             12116 	ld	a, (#_joydata)
      00366D CB 77                12117 	bit	6, a
      00366F 28 24                12118 	jr	Z, 00112$
      003671 FArADr00             12119 	ld	a, (#_switchDelay)
      003674 B7                   12120 	or	a, a
      003675 20 1E                12121 	jr	NZ, 00112$
                                  12122 ;src/main.c:1349: if (currentGun == 0) {
      003677 21rA7r00             12123 	ld	hl, #_currentGun
      00367A 7E                   12124 	ld	a, (hl)
      00367B B7                   12125 	or	a, a
      00367C 20 04                12126 	jr	NZ, 00109$
                                  12127 ;src/main.c:1350: currentGun = 1;
      00367E 36 01                12128 	ld	(hl), #0x01
      003680 18 0B                12129 	jr	00110$
      003682                      12130 00109$:
                                  12131 ;src/main.c:1352: else if (currentGun == 1) {
      003682 FArA7r00             12132 	ld	a, (#_currentGun)
      003685 3D                   12133 	dec	a
      003686 20 05                12134 	jr	NZ, 00110$
                                  12135 ;src/main.c:1353: currentGun = 0;
      003688 21rA7r00             12136 	ld	hl, #_currentGun
      00368B 36 00                12137 	ld	(hl), #0x00
      00368D                      12138 00110$:
                                  12139 ;src/main.c:1355: setGunIcon();
      00368D CDrC1r27             12140 	call	_setGunIcon
                                  12141 ;src/main.c:1356: switchDelay = 30;
      003690 21rADr00             12142 	ld	hl, #_switchDelay
      003693 36 1E                12143 	ld	(hl), #0x1e
      003695                      12144 00112$:
                                  12145 ;src/main.c:1358: if (switchDelay != 0) {
      003695 21rADr00             12146 	ld	hl, #_switchDelay
      003698 7E                   12147 	ld	a, (hl)
      003699 B7                   12148 	or	a, a
      00369A 28 01                12149 	jr	Z, 00115$
                                  12150 ;src/main.c:1359: switchDelay--;
      00369C 35                   12151 	dec	(hl)
      00369D                      12152 00115$:
                                  12153 ;src/main.c:1362: if (auxTick == 0) {
      00369D FArBFr00             12154 	ld	a, (#_auxTick)
      0036A0 B7                   12155 	or	a, a
      0036A1 20 08                12156 	jr	NZ, 00117$
                                  12157 ;src/main.c:1363: auxTick = AUXTICKFREQUENCY;
      0036A3 FArA8r0B             12158 	ld	a, (#_AUXTICKFREQUENCY)
      0036A6 EArBFr00             12159 	ld	(#_auxTick),a
      0036A9 18 04                12160 	jr	00118$
      0036AB                      12161 00117$:
                                  12162 ;src/main.c:1366: auxTick--;
      0036AB 21rBFr00             12163 	ld	hl, #_auxTick
      0036AE 35                   12164 	dec	(hl)
      0036AF                      12165 00118$:
                                  12166 ;src/main.c:1371: if (hull > 100) {
      0036AF 3E 64                12167 	ld	a, #0x64
      0036B1 21rF6r00             12168 	ld	hl, #_hull
      0036B4 96                   12169 	sub	a, (hl)
      0036B5 30 02                12170 	jr	NC, 00120$
                                  12171 ;src/main.c:1372: hull = 0;
      0036B7 36 00                12172 	ld	(hl), #0x00
      0036B9                      12173 00120$:
                                  12174 ;src/main.c:1375: SHOW_WIN;	
      0036B9 F0r00                12175 	ldh	a, (_LCDC_REG + 0)
      0036BB F6 20                12176 	or	a, #0x20
      0036BD E0r00                12177 	ldh	(_LCDC_REG + 0), a
                                  12178 ;src/main.c:1376: wait_vbl_done(); // Idle until next frame
      0036BF CDr00r00             12179 	call	_wait_vbl_done
                                  12180 ;src/main.c:1381: }
      0036C2 C3rF9r35             12181 	jp	00122$
                                  12182 	.area _CODE
                                  12183 	.area _INITIALIZER
      000000                      12184 __xinit__hullabel:
      000000 12                   12185 	.db #0x12	; 18
      000001 1F                   12186 	.db #0x1f	; 31
      000002 16                   12187 	.db #0x16	; 22
      000003 16                   12188 	.db #0x16	; 22
      000004                      12189 __xinit__shieldlabel:
      000004 1D                   12190 	.db #0x1d	; 29
      000005 12                   12191 	.db #0x12	; 18
      000006 16                   12192 	.db #0x16	; 22
      000007 0E                   12193 	.db #0x0e	; 14
      000008                      12194 __xinit__weaponlabel:
      000008 21                   12195 	.db #0x21	; 33
      000009 0F                   12196 	.db #0x0f	; 15
      00000A 1A                   12197 	.db #0x1a	; 26
      00000B 18                   12198 	.db #0x18	; 24
      00000C                      12199 __xinit__scorelabel:
      00000C 1D                   12200 	.db #0x1d	; 29
      00000D 0D                   12201 	.db #0x0d	; 13
      00000E 1C                   12202 	.db #0x1c	; 28
      00000F 0F                   12203 	.db #0x0f	; 15
      000010                      12204 __xinit__blob:
      000010 00 00                12205 	.dw #0x0000
      000012 00 00                12206 	.dw #0x0000
      000014 00                   12207 	.db #0x00	;  0
      000015 00                   12208 	.db #0x00	;  0
      000016 40                   12209 	.db #0x40	; 64
      000017 00                   12210 	.db #0x00	; 0
      000018 01                   12211 	.db #0x01	; 1
      000019 01                   12212 	.db #0x01	; 1
      00001A 01                   12213 	.db #0x01	; 1
      00001B 32                   12214 	.db #0x32	; 50	'2'
      00001C 03                   12215 	.db #0x03	;  3
      00001D 01                   12216 	.db #0x01	; 1
      00001E 00                   12217 	.db #0x00	;  0
      00001F 00                   12218 	.db #0x00	;  0
      000020 32 00                12219 	.dw #0x0032
      000022                      12220 __xinit__bomb:
      000022 00 00                12221 	.dw #0x0000
      000024 00 00                12222 	.dw #0x0000
      000026 00                   12223 	.db #0x00	;  0
      000027 00                   12224 	.db #0x00	;  0
      000028 42                   12225 	.db #0x42	; 66	'B'
      000029 00                   12226 	.db #0x00	; 0
      00002A 01                   12227 	.db #0x01	; 1
      00002B 01                   12228 	.db #0x01	; 1
      00002C 01                   12229 	.db #0x01	; 1
      00002D 32                   12230 	.db #0x32	; 50	'2'
      00002E 05                   12231 	.db #0x05	;  5
      00002F 01                   12232 	.db #0x01	; 1
      000030 00                   12233 	.db #0x00	;  0
      000031 00                   12234 	.db #0x00	;  0
      000032 32 00                12235 	.dw #0x0032
      000034                      12236 __xinit__miniship:
      000034 00 00                12237 	.dw #0x0000
      000036 00 00                12238 	.dw #0x0000
      000038 00                   12239 	.db #0x00	;  0
      000039 00                   12240 	.db #0x00	;  0
      00003A 44                   12241 	.db #0x44	; 68	'D'
      00003B 00                   12242 	.db #0x00	; 0
      00003C 01                   12243 	.db #0x01	; 1
      00003D 01                   12244 	.db #0x01	; 1
      00003E 01                   12245 	.db #0x01	; 1
      00003F 32                   12246 	.db #0x32	; 50	'2'
      000040 05                   12247 	.db #0x05	;  5
      000041 01                   12248 	.db #0x01	; 1
      000042 00                   12249 	.db #0x00	;  0
      000043 00                   12250 	.db #0x00	;  0
      000044 32 00                12251 	.dw #0x0032
      000046                      12252 __xinit__bigblob:
      000046 00 00                12253 	.dw #0x0000
      000048 00 00                12254 	.dw #0x0000
      00004A 00                   12255 	.db #0x00	;  0
      00004B 00                   12256 	.db #0x00	;  0
      00004C 50                   12257 	.db #0x50	; 80	'P'
      00004D 52                   12258 	.db #0x52	; 82	'R'
      00004E 02                   12259 	.db #0x02	; 2
      00004F 01                   12260 	.db #0x01	; 1
      000050 01                   12261 	.db #0x01	; 1
      000051 32                   12262 	.db #0x32	; 50	'2'
      000052 03                   12263 	.db #0x03	;  3
      000053 01                   12264 	.db #0x01	; 1
      000054 00                   12265 	.db #0x00	;  0
      000055 00                   12266 	.db #0x00	;  0
      000056 64 00                12267 	.dw #0x0064
      000058                      12268 __xinit__shieldship:
      000058 00 00                12269 	.dw #0x0000
      00005A 00 00                12270 	.dw #0x0000
      00005C 00                   12271 	.db #0x00	;  0
      00005D 00                   12272 	.db #0x00	;  0
      00005E 54                   12273 	.db #0x54	; 84	'T'
      00005F 56                   12274 	.db #0x56	; 86	'V'
      000060 02                   12275 	.db #0x02	; 2
      000061 01                   12276 	.db #0x01	; 1
      000062 01                   12277 	.db #0x01	; 1
      000063 32                   12278 	.db #0x32	; 50	'2'
      000064 03                   12279 	.db #0x03	;  3
      000065 01                   12280 	.db #0x01	; 1
      000066 00                   12281 	.db #0x00	;  0
      000067 00                   12282 	.db #0x00	;  0
      000068 46 00                12283 	.dw #0x0046
      00006A                      12284 __xinit__singleGun:
      00006A 00 00                12285 	.dw #0x0000
      00006C 00 00                12286 	.dw #0x0000
      00006E 00                   12287 	.db #0x00	;  0
      00006F 00                   12288 	.db #0x00	;  0
      000070 FF                   12289 	.db #0xff	; -1
      000071 02                   12290 	.db #0x02	; 2
      000072 32 00                12291 	.dw #0x0032
      000074 01                   12292 	.db #0x01	; 1
      000075 0F                   12293 	.db #0x0f	; 15
      000076 20                   12294 	.db #0x20	; 32
      000077                      12295 __xinit__doubleGun:
      000077 00 00                12296 	.dw #0x0000
      000079 00 00                12297 	.dw #0x0000
      00007B 00                   12298 	.db #0x00	;  0
      00007C 00                   12299 	.db #0x00	;  0
      00007D FF                   12300 	.db #0xff	; -1
      00007E 02                   12301 	.db #0x02	; 2
      00007F 46 00                12302 	.dw #0x0046
      000081 01                   12303 	.db #0x01	; 1
      000082 0F                   12304 	.db #0x0f	; 15
      000083 26                   12305 	.db #0x26	; 38
      000084                      12306 __xinit__missile:
      000084 00 00                12307 	.dw #0x0000
      000086 00 00                12308 	.dw #0x0000
      000088 00                   12309 	.db #0x00	;  0
      000089 00                   12310 	.db #0x00	;  0
      00008A FF                   12311 	.db #0xff	; -1
      00008B 01                   12312 	.db #0x01	; 1
      00008C 64 00                12313 	.dw #0x0064
      00008E 01                   12314 	.db #0x01	; 1
      00008F 1E                   12315 	.db #0x1e	; 30
      000090 2C                   12316 	.db #0x2c	; 44
      000091                      12317 __xinit__oldestProjectile:
      000091 00                   12318 	.db #0x00	; 0
      000092                      12319 __xinit__fireCooldown:
      000092 00                   12320 	.db #0x00	; 0
      000093                      12321 __xinit__xDir:
      000093 00                   12322 	.db #0x00	;  0
      000094                      12323 __xinit__yDir:
      000094 FF                   12324 	.db #0xff	; -1
      000095                      12325 __xinit__xSpeed:
      000095 00                   12326 	.db #0x00	;  0
      000096                      12327 __xinit__ySpeed:
      000096 00                   12328 	.db #0x00	;  0
      000097                      12329 __xinit__playerX:
      000097 00 0A                12330 	.dw #0x0a00
      000099                      12331 __xinit__playerY:
      000099 00 0A                12332 	.dw #0x0a00
      00009B                      12333 __xinit__playerDrawX:
      00009B 50                   12334 	.db #0x50	; 80	'P'
      00009C                      12335 __xinit__playerDrawY:
      00009C 50                   12336 	.db #0x50	; 80	'P'
      00009D                      12337 __xinit__bgX:
      00009D 00 00                12338 	.dw #0x0000
      00009F                      12339 __xinit__bgY:
      00009F 00 00                12340 	.dw #0x0000
      0000A1                      12341 __xinit__xOverflow:
      0000A1 00 00                12342 	.dw #0x0000
      0000A3                      12343 __xinit__yOverflow:
      0000A3 00 00                12344 	.dw #0x0000
      0000A5                      12345 __xinit__enemyCollisionCount:
      0000A5 00                   12346 	.db #0x00	; 0
      0000A6                      12347 __xinit__gunLevel:
      0000A6 00                   12348 	.db #0x00	; 0
      0000A7                      12349 __xinit__currentGun:
      0000A7 00                   12350 	.db #0x00	; 0
      0000A8                      12351 __xinit__missiles:
      0000A8 00                   12352 	.db #0x00	; 0
      0000A9                      12353 __xinit__MISSILES:
      0000A9 00 00 00 00          12354 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000AD                      12355 __xinit__switchDelay:
      0000AD 00                   12356 	.db #0x00	; 0
      0000AE                      12357 __xinit__gunMap:
      0000AE 53                   12358 	.db #0x53	; 83	'S'
      0000AF 5B                   12359 	.db #0x5b	; 91
      0000B0 61                   12360 	.db #0x61	; 97	'a'
      0000B1                      12361 __xinit__score:
      0000B1 00 00                12362 	.dw #0x0000
      0000B3                      12363 __xinit__SCORE:
      0000B3 00 00 00 00          12364 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B7                      12365 __xinit__INCREMENT:
      0000B7 01 00 00 00          12366 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000BB                      12367 __xinit__oldestEx:
      0000BB 00                   12368 	.db #0x00	; 0
      0000BC                      12369 __xinit__exTiles:
      0000BC 80                   12370 	.db #0x80	; 128
      0000BD 90                   12371 	.db #0x90	; 144
      0000BE A0                   12372 	.db #0xa0	; 160
      0000BF                      12373 __xinit__auxTick:
      0000BF 01                   12374 	.db #0x01	; 1
                                  12375 	.area _CABS (ABS)
