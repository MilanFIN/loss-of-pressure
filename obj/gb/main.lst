                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickEx
                                     16 	.globl _tickPickups
                                     17 	.globl _moveProjectiles
                                     18 	.globl _fire
                                     19 	.globl _setGunIcon
                                     20 	.globl _checkCollision
                                     21 	.globl _killEnemy
                                     22 	.globl _spawnPickup
                                     23 	.globl _takeDamage
                                     24 	.globl _move
                                     25 	.globl _updateEnemyPositions
                                     26 	.globl _initEnemy
                                     27 	.globl _initEnemies
                                     28 	.globl _playSound
                                     29 	.globl _updateDirection
                                     30 	.globl _incrementScore
                                     31 	.globl _updateMissileCount
                                     32 	.globl _updateScore
                                     33 	.globl _setHealthBar
                                     34 	.globl _interruptLCD
                                     35 	.globl _bcd2text
                                     36 	.globl _bcd_sub
                                     37 	.globl _bcd_add
                                     38 	.globl _rand
                                     39 	.globl _initrand
                                     40 	.globl _font_set
                                     41 	.globl _font_load
                                     42 	.globl _font_init
                                     43 	.globl _set_sprite_data
                                     44 	.globl _set_win_tiles
                                     45 	.globl _set_bkg_tiles
                                     46 	.globl _set_bkg_data
                                     47 	.globl _wait_vbl_done
                                     48 	.globl _set_interrupts
                                     49 	.globl _waitpad
                                     50 	.globl _joypad
                                     51 	.globl _add_LCD
                                     52 	.globl _auxTick
                                     53 	.globl _exTiles
                                     54 	.globl _oldestEx
                                     55 	.globl _INCREMENT
                                     56 	.globl _SCORE
                                     57 	.globl _score
                                     58 	.globl _gunMap
                                     59 	.globl _switchDelay
                                     60 	.globl _MISSILES
                                     61 	.globl _missiles
                                     62 	.globl _currentGun
                                     63 	.globl _gunLevel
                                     64 	.globl _enemyCollisionCount
                                     65 	.globl _yOverflow
                                     66 	.globl _xOverflow
                                     67 	.globl _bgY
                                     68 	.globl _bgX
                                     69 	.globl _playerDrawY
                                     70 	.globl _playerDrawX
                                     71 	.globl _playerY
                                     72 	.globl _playerX
                                     73 	.globl _ySpeed
                                     74 	.globl _xSpeed
                                     75 	.globl _yDir
                                     76 	.globl _xDir
                                     77 	.globl _fireCooldown
                                     78 	.globl _oldestProjectile
                                     79 	.globl _missile
                                     80 	.globl _doubleGun
                                     81 	.globl _singleGun
                                     82 	.globl _shieldship
                                     83 	.globl _bigblob
                                     84 	.globl _miniship
                                     85 	.globl _bomb
                                     86 	.globl _blob
                                     87 	.globl _scorelabel
                                     88 	.globl _weaponlabel
                                     89 	.globl _shieldlabel
                                     90 	.globl _hullabel
                                     91 	.globl _explosions
                                     92 	.globl _pickup
                                     93 	.globl _min_font
                                     94 	.globl _shield
                                     95 	.globl _hull
                                     96 	.globl _joydata
                                     97 	.globl _projectiles
                                     98 	.globl _enemies
                                     99 	.globl _enemyOptions
                                    100 	.globl _AUXTICKFREQUENCY
                                    101 	.globl _exTileCount
                                    102 	.globl _EXPLFRAMETIME
                                    103 	.globl _exCount
                                    104 	.globl _SPLASHDROPOFF
                                    105 	.globl _MAXGUNLEVEL
                                    106 	.globl _maxShield
                                    107 	.globl _maxHull
                                    108 	.globl _PLAYERSIZE
                                    109 	.globl _PROJECTILECOUNT
                                    110 	.globl _ySpawnPositions
                                    111 	.globl _xSpawnPositions
                                    112 	.globl _ENEMYCOUNT
                                    113 	.globl _EMPTYSPRITE
                                    114 	.globl _BLANK
                                    115 	.globl _BLANKSIZE
                                    116 	.globl _Ex3
                                    117 	.globl _Ex2
                                    118 	.globl _Ex1
                                    119 	.globl _ex
                                    120 	.globl _Player1
                                    121 	.globl _Pickups
                                    122 	.globl _health
                                    123 	.globl _ammo
                                    124 	.globl _upgrade
                                    125 	.globl _ProjectileTiles
                                    126 	.globl _largeenemies
                                    127 	.globl _enemy1
                                    128 	.globl _enemyOptionCount
                                    129 	.globl _healthblock
                                    130 	.globl _backgroundtiles
                                    131 	.globl _background1
                                    132 	.globl _cross
                                    133 ;--------------------------------------------------------
                                    134 ; special function registers
                                    135 ;--------------------------------------------------------
                                    136 ;--------------------------------------------------------
                                    137 ; ram data
                                    138 ;--------------------------------------------------------
                                    139 	.area _DATA
      000000                        140 _enemyOptions::
      000000                        141 	.ds 90
      00005A                        142 _enemies::
      00005A                        143 	.ds 90
      0000B4                        144 _projectiles::
      0000B4                        145 	.ds 65
      0000F5                        146 _joydata::
      0000F5                        147 	.ds 1
      0000F6                        148 _hull::
      0000F6                        149 	.ds 1
      0000F7                        150 _shield::
      0000F7                        151 	.ds 1
      0000F8                        152 _min_font::
      0000F8                        153 	.ds 2
      0000FA                        154 _pickup::
      0000FA                        155 	.ds 9
      000103                        156 _explosions::
      000103                        157 	.ds 18
                                    158 ;--------------------------------------------------------
                                    159 ; ram data
                                    160 ;--------------------------------------------------------
                                    161 	.area _INITIALIZED
      000000                        162 _hullabel::
      000000                        163 	.ds 4
      000004                        164 _shieldlabel::
      000004                        165 	.ds 4
      000008                        166 _weaponlabel::
      000008                        167 	.ds 4
      00000C                        168 _scorelabel::
      00000C                        169 	.ds 4
      000010                        170 _blob::
      000010                        171 	.ds 18
      000022                        172 _bomb::
      000022                        173 	.ds 18
      000034                        174 _miniship::
      000034                        175 	.ds 18
      000046                        176 _bigblob::
      000046                        177 	.ds 18
      000058                        178 _shieldship::
      000058                        179 	.ds 18
      00006A                        180 _singleGun::
      00006A                        181 	.ds 13
      000077                        182 _doubleGun::
      000077                        183 	.ds 13
      000084                        184 _missile::
      000084                        185 	.ds 13
      000091                        186 _oldestProjectile::
      000091                        187 	.ds 1
      000092                        188 _fireCooldown::
      000092                        189 	.ds 1
      000093                        190 _xDir::
      000093                        191 	.ds 1
      000094                        192 _yDir::
      000094                        193 	.ds 1
      000095                        194 _xSpeed::
      000095                        195 	.ds 1
      000096                        196 _ySpeed::
      000096                        197 	.ds 1
      000097                        198 _playerX::
      000097                        199 	.ds 2
      000099                        200 _playerY::
      000099                        201 	.ds 2
      00009B                        202 _playerDrawX::
      00009B                        203 	.ds 1
      00009C                        204 _playerDrawY::
      00009C                        205 	.ds 1
      00009D                        206 _bgX::
      00009D                        207 	.ds 2
      00009F                        208 _bgY::
      00009F                        209 	.ds 2
      0000A1                        210 _xOverflow::
      0000A1                        211 	.ds 2
      0000A3                        212 _yOverflow::
      0000A3                        213 	.ds 2
      0000A5                        214 _enemyCollisionCount::
      0000A5                        215 	.ds 1
      0000A6                        216 _gunLevel::
      0000A6                        217 	.ds 1
      0000A7                        218 _currentGun::
      0000A7                        219 	.ds 1
      0000A8                        220 _missiles::
      0000A8                        221 	.ds 1
      0000A9                        222 _MISSILES::
      0000A9                        223 	.ds 4
      0000AD                        224 _switchDelay::
      0000AD                        225 	.ds 1
      0000AE                        226 _gunMap::
      0000AE                        227 	.ds 3
      0000B1                        228 _score::
      0000B1                        229 	.ds 2
      0000B3                        230 _SCORE::
      0000B3                        231 	.ds 4
      0000B7                        232 _INCREMENT::
      0000B7                        233 	.ds 4
      0000BB                        234 _oldestEx::
      0000BB                        235 	.ds 1
      0000BC                        236 _exTiles::
      0000BC                        237 	.ds 3
      0000BF                        238 _auxTick::
      0000BF                        239 	.ds 1
                                    240 ;--------------------------------------------------------
                                    241 ; absolute external ram data
                                    242 ;--------------------------------------------------------
                                    243 	.area _DABS (ABS)
                                    244 ;--------------------------------------------------------
                                    245 ; global & static initialisations
                                    246 ;--------------------------------------------------------
                                    247 	.area _HOME
                                    248 	.area _GSINIT
                                    249 	.area _GSFINAL
                                    250 	.area _GSINIT
                                    251 ;--------------------------------------------------------
                                    252 ; Home
                                    253 ;--------------------------------------------------------
                                    254 	.area _HOME
                                    255 	.area _HOME
                                    256 ;--------------------------------------------------------
                                    257 ; code
                                    258 ;--------------------------------------------------------
                                    259 	.area _CODE
                                    260 ;src/main.c:153: void interruptLCD()
                                    261 ;	---------------------------------
                                    262 ; Function interruptLCD
                                    263 ; ---------------------------------
      000000                        264 _interruptLCD::
                                    265 ;src/main.c:155: HIDE_SPRITES;
      000000 F0r00                  266 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  267 	and	a, #0xfd
      000004 E0r00                  268 	ldh	(_LCDC_REG + 0), a
                                    269 ;src/main.c:156: }
      000006 C9                     270 	ret
      000007                        271 _cross:
      000007 18                     272 	.db #0x18	; 24
      000008 18                     273 	.db #0x18	; 24
      000009 18                     274 	.db #0x18	; 24
      00000A 18                     275 	.db #0x18	; 24
      00000B 3C                     276 	.db #0x3c	; 60
      00000C 3C                     277 	.db #0x3c	; 60
      00000D 3C                     278 	.db #0x3c	; 60
      00000E 3C                     279 	.db #0x3c	; 60
      00000F 7E                     280 	.db #0x7e	; 126
      000010 7E                     281 	.db #0x7e	; 126
      000011 7E                     282 	.db #0x7e	; 126
      000012 7E                     283 	.db #0x7e	; 126
      000013 FF                     284 	.db #0xff	; 255
      000014 FF                     285 	.db #0xff	; 255
      000015 FF                     286 	.db #0xff	; 255
      000016 FF                     287 	.db #0xff	; 255
      000017 0F                     288 	.db #0x0f	; 15
      000018 0F                     289 	.db #0x0f	; 15
      000019 3F                     290 	.db #0x3f	; 63
      00001A 3F                     291 	.db #0x3f	; 63
      00001B FF                     292 	.db #0xff	; 255
      00001C FF                     293 	.db #0xff	; 255
      00001D FF                     294 	.db #0xff	; 255
      00001E FF                     295 	.db #0xff	; 255
      00001F 7E                     296 	.db #0x7e	; 126
      000020 7E                     297 	.db #0x7e	; 126
      000021 3E                     298 	.db #0x3e	; 62
      000022 3E                     299 	.db #0x3e	; 62
      000023 1C                     300 	.db #0x1c	; 28
      000024 1C                     301 	.db #0x1c	; 28
      000025 0C                     302 	.db #0x0c	; 12
      000026 0C                     303 	.db #0x0c	; 12
      000027 C0                     304 	.db #0xc0	; 192
      000028 C0                     305 	.db #0xc0	; 192
      000029 F0                     306 	.db #0xf0	; 240
      00002A F0                     307 	.db #0xf0	; 240
      00002B FC                     308 	.db #0xfc	; 252
      00002C FC                     309 	.db #0xfc	; 252
      00002D FF                     310 	.db #0xff	; 255
      00002E FF                     311 	.db #0xff	; 255
      00002F FF                     312 	.db #0xff	; 255
      000030 FF                     313 	.db #0xff	; 255
      000031 FC                     314 	.db #0xfc	; 252
      000032 FC                     315 	.db #0xfc	; 252
      000033 F0                     316 	.db #0xf0	; 240
      000034 F0                     317 	.db #0xf0	; 240
      000035 C0                     318 	.db #0xc0	; 192
      000036 C0                     319 	.db #0xc0	; 192
      000037 0C                     320 	.db #0x0c	; 12
      000038 0C                     321 	.db #0x0c	; 12
      000039 1C                     322 	.db #0x1c	; 28
      00003A 1C                     323 	.db #0x1c	; 28
      00003B 3E                     324 	.db #0x3e	; 62
      00003C 3E                     325 	.db #0x3e	; 62
      00003D 7E                     326 	.db #0x7e	; 126
      00003E 7E                     327 	.db #0x7e	; 126
      00003F FF                     328 	.db #0xff	; 255
      000040 FF                     329 	.db #0xff	; 255
      000041 FF                     330 	.db #0xff	; 255
      000042 FF                     331 	.db #0xff	; 255
      000043 3F                     332 	.db #0x3f	; 63
      000044 3F                     333 	.db #0x3f	; 63
      000045 0F                     334 	.db #0x0f	; 15
      000046 0F                     335 	.db #0x0f	; 15
      000047 FF                     336 	.db #0xff	; 255
      000048 FF                     337 	.db #0xff	; 255
      000049 FF                     338 	.db #0xff	; 255
      00004A FF                     339 	.db #0xff	; 255
      00004B 7E                     340 	.db #0x7e	; 126
      00004C 7E                     341 	.db #0x7e	; 126
      00004D 7E                     342 	.db #0x7e	; 126
      00004E 7E                     343 	.db #0x7e	; 126
      00004F 3C                     344 	.db #0x3c	; 60
      000050 3C                     345 	.db #0x3c	; 60
      000051 3C                     346 	.db #0x3c	; 60
      000052 3C                     347 	.db #0x3c	; 60
      000053 18                     348 	.db #0x18	; 24
      000054 18                     349 	.db #0x18	; 24
      000055 18                     350 	.db #0x18	; 24
      000056 18                     351 	.db #0x18	; 24
      000057 30                     352 	.db #0x30	; 48	'0'
      000058 30                     353 	.db #0x30	; 48	'0'
      000059 38                     354 	.db #0x38	; 56	'8'
      00005A 38                     355 	.db #0x38	; 56	'8'
      00005B 7C                     356 	.db #0x7c	; 124
      00005C 7C                     357 	.db #0x7c	; 124
      00005D 7E                     358 	.db #0x7e	; 126
      00005E 7E                     359 	.db #0x7e	; 126
      00005F FF                     360 	.db #0xff	; 255
      000060 FF                     361 	.db #0xff	; 255
      000061 FF                     362 	.db #0xff	; 255
      000062 FF                     363 	.db #0xff	; 255
      000063 FC                     364 	.db #0xfc	; 252
      000064 FC                     365 	.db #0xfc	; 252
      000065 F0                     366 	.db #0xf0	; 240
      000066 F0                     367 	.db #0xf0	; 240
      000067 03                     368 	.db #0x03	; 3
      000068 03                     369 	.db #0x03	; 3
      000069 0F                     370 	.db #0x0f	; 15
      00006A 0F                     371 	.db #0x0f	; 15
      00006B 3F                     372 	.db #0x3f	; 63
      00006C 3F                     373 	.db #0x3f	; 63
      00006D FF                     374 	.db #0xff	; 255
      00006E FF                     375 	.db #0xff	; 255
      00006F FF                     376 	.db #0xff	; 255
      000070 FF                     377 	.db #0xff	; 255
      000071 3F                     378 	.db #0x3f	; 63
      000072 3F                     379 	.db #0x3f	; 63
      000073 0F                     380 	.db #0x0f	; 15
      000074 0F                     381 	.db #0x0f	; 15
      000075 03                     382 	.db #0x03	; 3
      000076 03                     383 	.db #0x03	; 3
      000077 F0                     384 	.db #0xf0	; 240
      000078 F0                     385 	.db #0xf0	; 240
      000079 FC                     386 	.db #0xfc	; 252
      00007A FC                     387 	.db #0xfc	; 252
      00007B FF                     388 	.db #0xff	; 255
      00007C FF                     389 	.db #0xff	; 255
      00007D FF                     390 	.db #0xff	; 255
      00007E FF                     391 	.db #0xff	; 255
      00007F 7E                     392 	.db #0x7e	; 126
      000080 7E                     393 	.db #0x7e	; 126
      000081 7C                     394 	.db #0x7c	; 124
      000082 7C                     395 	.db #0x7c	; 124
      000083 38                     396 	.db #0x38	; 56	'8'
      000084 38                     397 	.db #0x38	; 56	'8'
      000085 30                     398 	.db #0x30	; 48	'0'
      000086 30                     399 	.db #0x30	; 48	'0'
      000087                        400 _background1:
      000087 26                     401 	.db #0x26	; 38
      000088 26                     402 	.db #0x26	; 38
      000089 26                     403 	.db #0x26	; 38
      00008A 26                     404 	.db #0x26	; 38
      00008B 26                     405 	.db #0x26	; 38
      00008C 26                     406 	.db #0x26	; 38
      00008D 26                     407 	.db #0x26	; 38
      00008E 26                     408 	.db #0x26	; 38
      00008F 26                     409 	.db #0x26	; 38
      000090 26                     410 	.db #0x26	; 38
      000091 26                     411 	.db #0x26	; 38
      000092 2A                     412 	.db #0x2a	; 42
      000093 29                     413 	.db #0x29	; 41
      000094 26                     414 	.db #0x26	; 38
      000095 26                     415 	.db #0x26	; 38
      000096 26                     416 	.db #0x26	; 38
      000097 26                     417 	.db #0x26	; 38
      000098 26                     418 	.db #0x26	; 38
      000099 26                     419 	.db #0x26	; 38
      00009A 26                     420 	.db #0x26	; 38
      00009B 2C                     421 	.db #0x2c	; 44
      00009C 26                     422 	.db #0x26	; 38
      00009D 26                     423 	.db #0x26	; 38
      00009E 26                     424 	.db #0x26	; 38
      00009F 26                     425 	.db #0x26	; 38
      0000A0 26                     426 	.db #0x26	; 38
      0000A1 26                     427 	.db #0x26	; 38
      0000A2 26                     428 	.db #0x26	; 38
      0000A3 26                     429 	.db #0x26	; 38
      0000A4 26                     430 	.db #0x26	; 38
      0000A5 26                     431 	.db #0x26	; 38
      0000A6 26                     432 	.db #0x26	; 38
      0000A7 26                     433 	.db #0x26	; 38
      0000A8 2B                     434 	.db #0x2b	; 43
      0000A9 26                     435 	.db #0x26	; 38
      0000AA 26                     436 	.db #0x26	; 38
      0000AB 26                     437 	.db #0x26	; 38
      0000AC 26                     438 	.db #0x26	; 38
      0000AD 26                     439 	.db #0x26	; 38
      0000AE 26                     440 	.db #0x26	; 38
      0000AF 26                     441 	.db #0x26	; 38
      0000B0 26                     442 	.db #0x26	; 38
      0000B1 26                     443 	.db #0x26	; 38
      0000B2 26                     444 	.db #0x26	; 38
      0000B3 26                     445 	.db #0x26	; 38
      0000B4 26                     446 	.db #0x26	; 38
      0000B5 26                     447 	.db #0x26	; 38
      0000B6 26                     448 	.db #0x26	; 38
      0000B7 26                     449 	.db #0x26	; 38
      0000B8 26                     450 	.db #0x26	; 38
      0000B9 26                     451 	.db #0x26	; 38
      0000BA 26                     452 	.db #0x26	; 38
      0000BB 26                     453 	.db #0x26	; 38
      0000BC 26                     454 	.db #0x26	; 38
      0000BD 26                     455 	.db #0x26	; 38
      0000BE 26                     456 	.db #0x26	; 38
      0000BF 26                     457 	.db #0x26	; 38
      0000C0 26                     458 	.db #0x26	; 38
      0000C1 26                     459 	.db #0x26	; 38
      0000C2 26                     460 	.db #0x26	; 38
      0000C3 26                     461 	.db #0x26	; 38
      0000C4 26                     462 	.db #0x26	; 38
      0000C5 26                     463 	.db #0x26	; 38
      0000C6 26                     464 	.db #0x26	; 38
      0000C7 26                     465 	.db #0x26	; 38
      0000C8 26                     466 	.db #0x26	; 38
      0000C9 26                     467 	.db #0x26	; 38
      0000CA 26                     468 	.db #0x26	; 38
      0000CB 26                     469 	.db #0x26	; 38
      0000CC 26                     470 	.db #0x26	; 38
      0000CD 26                     471 	.db #0x26	; 38
      0000CE 26                     472 	.db #0x26	; 38
      0000CF 26                     473 	.db #0x26	; 38
      0000D0 26                     474 	.db #0x26	; 38
      0000D1 26                     475 	.db #0x26	; 38
      0000D2 26                     476 	.db #0x26	; 38
      0000D3 26                     477 	.db #0x26	; 38
      0000D4 26                     478 	.db #0x26	; 38
      0000D5 26                     479 	.db #0x26	; 38
      0000D6 26                     480 	.db #0x26	; 38
      0000D7 26                     481 	.db #0x26	; 38
      0000D8 26                     482 	.db #0x26	; 38
      0000D9 26                     483 	.db #0x26	; 38
      0000DA 26                     484 	.db #0x26	; 38
      0000DB 26                     485 	.db #0x26	; 38
      0000DC 26                     486 	.db #0x26	; 38
      0000DD 26                     487 	.db #0x26	; 38
      0000DE 26                     488 	.db #0x26	; 38
      0000DF 26                     489 	.db #0x26	; 38
      0000E0 26                     490 	.db #0x26	; 38
      0000E1 26                     491 	.db #0x26	; 38
      0000E2 26                     492 	.db #0x26	; 38
      0000E3 26                     493 	.db #0x26	; 38
      0000E4 26                     494 	.db #0x26	; 38
      0000E5 26                     495 	.db #0x26	; 38
      0000E6 26                     496 	.db #0x26	; 38
      0000E7 26                     497 	.db #0x26	; 38
      0000E8 26                     498 	.db #0x26	; 38
      0000E9 26                     499 	.db #0x26	; 38
      0000EA 26                     500 	.db #0x26	; 38
      0000EB 26                     501 	.db #0x26	; 38
      0000EC 26                     502 	.db #0x26	; 38
      0000ED 26                     503 	.db #0x26	; 38
      0000EE 26                     504 	.db #0x26	; 38
      0000EF 26                     505 	.db #0x26	; 38
      0000F0 26                     506 	.db #0x26	; 38
      0000F1 26                     507 	.db #0x26	; 38
      0000F2 26                     508 	.db #0x26	; 38
      0000F3 26                     509 	.db #0x26	; 38
      0000F4 26                     510 	.db #0x26	; 38
      0000F5 26                     511 	.db #0x26	; 38
      0000F6 26                     512 	.db #0x26	; 38
      0000F7 26                     513 	.db #0x26	; 38
      0000F8 2B                     514 	.db #0x2b	; 43
      0000F9 26                     515 	.db #0x26	; 38
      0000FA 26                     516 	.db #0x26	; 38
      0000FB 26                     517 	.db #0x26	; 38
      0000FC 26                     518 	.db #0x26	; 38
      0000FD 26                     519 	.db #0x26	; 38
      0000FE 26                     520 	.db #0x26	; 38
      0000FF 2B                     521 	.db #0x2b	; 43
      000100 26                     522 	.db #0x26	; 38
      000101 26                     523 	.db #0x26	; 38
      000102 26                     524 	.db #0x26	; 38
      000103 26                     525 	.db #0x26	; 38
      000104 26                     526 	.db #0x26	; 38
      000105 26                     527 	.db #0x26	; 38
      000106 26                     528 	.db #0x26	; 38
      000107 26                     529 	.db #0x26	; 38
      000108 26                     530 	.db #0x26	; 38
      000109 26                     531 	.db #0x26	; 38
      00010A 26                     532 	.db #0x26	; 38
      00010B 26                     533 	.db #0x26	; 38
      00010C 2B                     534 	.db #0x2b	; 43
      00010D 26                     535 	.db #0x26	; 38
      00010E 26                     536 	.db #0x26	; 38
      00010F 26                     537 	.db #0x26	; 38
      000110 26                     538 	.db #0x26	; 38
      000111 26                     539 	.db #0x26	; 38
      000112 26                     540 	.db #0x26	; 38
      000113 26                     541 	.db #0x26	; 38
      000114 2C                     542 	.db #0x2c	; 44
      000115 26                     543 	.db #0x26	; 38
      000116 26                     544 	.db #0x26	; 38
      000117 26                     545 	.db #0x26	; 38
      000118 26                     546 	.db #0x26	; 38
      000119 26                     547 	.db #0x26	; 38
      00011A 26                     548 	.db #0x26	; 38
      00011B 26                     549 	.db #0x26	; 38
      00011C 26                     550 	.db #0x26	; 38
      00011D 26                     551 	.db #0x26	; 38
      00011E 26                     552 	.db #0x26	; 38
      00011F 26                     553 	.db #0x26	; 38
      000120 26                     554 	.db #0x26	; 38
      000121 26                     555 	.db #0x26	; 38
      000122 26                     556 	.db #0x26	; 38
      000123 26                     557 	.db #0x26	; 38
      000124 26                     558 	.db #0x26	; 38
      000125 26                     559 	.db #0x26	; 38
      000126 26                     560 	.db #0x26	; 38
      000127 26                     561 	.db #0x26	; 38
      000128 26                     562 	.db #0x26	; 38
      000129 2C                     563 	.db #0x2c	; 44
      00012A 26                     564 	.db #0x26	; 38
      00012B 26                     565 	.db #0x26	; 38
      00012C 26                     566 	.db #0x26	; 38
      00012D 26                     567 	.db #0x26	; 38
      00012E 25                     568 	.db #0x25	; 37
      00012F 26                     569 	.db #0x26	; 38
      000130 26                     570 	.db #0x26	; 38
      000131 26                     571 	.db #0x26	; 38
      000132 26                     572 	.db #0x26	; 38
      000133 26                     573 	.db #0x26	; 38
      000134 26                     574 	.db #0x26	; 38
      000135 26                     575 	.db #0x26	; 38
      000136 26                     576 	.db #0x26	; 38
      000137 26                     577 	.db #0x26	; 38
      000138 26                     578 	.db #0x26	; 38
      000139 26                     579 	.db #0x26	; 38
      00013A 26                     580 	.db #0x26	; 38
      00013B 26                     581 	.db #0x26	; 38
      00013C 2C                     582 	.db #0x2c	; 44
      00013D 26                     583 	.db #0x26	; 38
      00013E 26                     584 	.db #0x26	; 38
      00013F 26                     585 	.db #0x26	; 38
      000140 26                     586 	.db #0x26	; 38
      000141 26                     587 	.db #0x26	; 38
      000142 26                     588 	.db #0x26	; 38
      000143 26                     589 	.db #0x26	; 38
      000144 2B                     590 	.db #0x2b	; 43
      000145 26                     591 	.db #0x26	; 38
      000146 26                     592 	.db #0x26	; 38
      000147 26                     593 	.db #0x26	; 38
      000148 26                     594 	.db #0x26	; 38
      000149 26                     595 	.db #0x26	; 38
      00014A 26                     596 	.db #0x26	; 38
      00014B 26                     597 	.db #0x26	; 38
      00014C 26                     598 	.db #0x26	; 38
      00014D 26                     599 	.db #0x26	; 38
      00014E 26                     600 	.db #0x26	; 38
      00014F 26                     601 	.db #0x26	; 38
      000150 26                     602 	.db #0x26	; 38
      000151 26                     603 	.db #0x26	; 38
      000152 26                     604 	.db #0x26	; 38
      000153 26                     605 	.db #0x26	; 38
      000154 26                     606 	.db #0x26	; 38
      000155 26                     607 	.db #0x26	; 38
      000156 26                     608 	.db #0x26	; 38
      000157 26                     609 	.db #0x26	; 38
      000158 26                     610 	.db #0x26	; 38
      000159 26                     611 	.db #0x26	; 38
      00015A 26                     612 	.db #0x26	; 38
      00015B 26                     613 	.db #0x26	; 38
      00015C 26                     614 	.db #0x26	; 38
      00015D 26                     615 	.db #0x26	; 38
      00015E 26                     616 	.db #0x26	; 38
      00015F 26                     617 	.db #0x26	; 38
      000160 2C                     618 	.db #0x2c	; 44
      000161 26                     619 	.db #0x26	; 38
      000162 26                     620 	.db #0x26	; 38
      000163 26                     621 	.db #0x26	; 38
      000164 26                     622 	.db #0x26	; 38
      000165 26                     623 	.db #0x26	; 38
      000166 26                     624 	.db #0x26	; 38
      000167 26                     625 	.db #0x26	; 38
      000168 26                     626 	.db #0x26	; 38
      000169 26                     627 	.db #0x26	; 38
      00016A 26                     628 	.db #0x26	; 38
      00016B 26                     629 	.db #0x26	; 38
      00016C 26                     630 	.db #0x26	; 38
      00016D 26                     631 	.db #0x26	; 38
      00016E 26                     632 	.db #0x26	; 38
      00016F 26                     633 	.db #0x26	; 38
      000170 26                     634 	.db #0x26	; 38
      000171 26                     635 	.db #0x26	; 38
      000172 26                     636 	.db #0x26	; 38
      000173 26                     637 	.db #0x26	; 38
      000174 26                     638 	.db #0x26	; 38
      000175 26                     639 	.db #0x26	; 38
      000176 26                     640 	.db #0x26	; 38
      000177 26                     641 	.db #0x26	; 38
      000178 26                     642 	.db #0x26	; 38
      000179 26                     643 	.db #0x26	; 38
      00017A 26                     644 	.db #0x26	; 38
      00017B 26                     645 	.db #0x26	; 38
      00017C 26                     646 	.db #0x26	; 38
      00017D 26                     647 	.db #0x26	; 38
      00017E 26                     648 	.db #0x26	; 38
      00017F 26                     649 	.db #0x26	; 38
      000180 26                     650 	.db #0x26	; 38
      000181 26                     651 	.db #0x26	; 38
      000182 26                     652 	.db #0x26	; 38
      000183 26                     653 	.db #0x26	; 38
      000184 26                     654 	.db #0x26	; 38
      000185 26                     655 	.db #0x26	; 38
      000186 26                     656 	.db #0x26	; 38
      000187 26                     657 	.db #0x26	; 38
      000188 26                     658 	.db #0x26	; 38
      000189 26                     659 	.db #0x26	; 38
      00018A 26                     660 	.db #0x26	; 38
      00018B 26                     661 	.db #0x26	; 38
      00018C 26                     662 	.db #0x26	; 38
      00018D 26                     663 	.db #0x26	; 38
      00018E 26                     664 	.db #0x26	; 38
      00018F 26                     665 	.db #0x26	; 38
      000190 26                     666 	.db #0x26	; 38
      000191 26                     667 	.db #0x26	; 38
      000192 26                     668 	.db #0x26	; 38
      000193 26                     669 	.db #0x26	; 38
      000194 26                     670 	.db #0x26	; 38
      000195 2B                     671 	.db #0x2b	; 43
      000196 26                     672 	.db #0x26	; 38
      000197 26                     673 	.db #0x26	; 38
      000198 26                     674 	.db #0x26	; 38
      000199 26                     675 	.db #0x26	; 38
      00019A 26                     676 	.db #0x26	; 38
      00019B 26                     677 	.db #0x26	; 38
      00019C 26                     678 	.db #0x26	; 38
      00019D 26                     679 	.db #0x26	; 38
      00019E 26                     680 	.db #0x26	; 38
      00019F 26                     681 	.db #0x26	; 38
      0001A0 26                     682 	.db #0x26	; 38
      0001A1 26                     683 	.db #0x26	; 38
      0001A2 26                     684 	.db #0x26	; 38
      0001A3 26                     685 	.db #0x26	; 38
      0001A4 26                     686 	.db #0x26	; 38
      0001A5 26                     687 	.db #0x26	; 38
      0001A6 25                     688 	.db #0x25	; 37
      0001A7 26                     689 	.db #0x26	; 38
      0001A8 26                     690 	.db #0x26	; 38
      0001A9 26                     691 	.db #0x26	; 38
      0001AA 2B                     692 	.db #0x2b	; 43
      0001AB 26                     693 	.db #0x26	; 38
      0001AC 26                     694 	.db #0x26	; 38
      0001AD 26                     695 	.db #0x26	; 38
      0001AE 26                     696 	.db #0x26	; 38
      0001AF 26                     697 	.db #0x26	; 38
      0001B0 26                     698 	.db #0x26	; 38
      0001B1 26                     699 	.db #0x26	; 38
      0001B2 26                     700 	.db #0x26	; 38
      0001B3 26                     701 	.db #0x26	; 38
      0001B4 26                     702 	.db #0x26	; 38
      0001B5 26                     703 	.db #0x26	; 38
      0001B6 26                     704 	.db #0x26	; 38
      0001B7 26                     705 	.db #0x26	; 38
      0001B8 26                     706 	.db #0x26	; 38
      0001B9 26                     707 	.db #0x26	; 38
      0001BA 26                     708 	.db #0x26	; 38
      0001BB 26                     709 	.db #0x26	; 38
      0001BC 26                     710 	.db #0x26	; 38
      0001BD 26                     711 	.db #0x26	; 38
      0001BE 26                     712 	.db #0x26	; 38
      0001BF 26                     713 	.db #0x26	; 38
      0001C0 26                     714 	.db #0x26	; 38
      0001C1 26                     715 	.db #0x26	; 38
      0001C2 26                     716 	.db #0x26	; 38
      0001C3 26                     717 	.db #0x26	; 38
      0001C4 2B                     718 	.db #0x2b	; 43
      0001C5 26                     719 	.db #0x26	; 38
      0001C6 26                     720 	.db #0x26	; 38
      0001C7 26                     721 	.db #0x26	; 38
      0001C8 26                     722 	.db #0x26	; 38
      0001C9 26                     723 	.db #0x26	; 38
      0001CA 26                     724 	.db #0x26	; 38
      0001CB 26                     725 	.db #0x26	; 38
      0001CC 26                     726 	.db #0x26	; 38
      0001CD 26                     727 	.db #0x26	; 38
      0001CE 26                     728 	.db #0x26	; 38
      0001CF 26                     729 	.db #0x26	; 38
      0001D0 26                     730 	.db #0x26	; 38
      0001D1 26                     731 	.db #0x26	; 38
      0001D2 26                     732 	.db #0x26	; 38
      0001D3 26                     733 	.db #0x26	; 38
      0001D4 26                     734 	.db #0x26	; 38
      0001D5 26                     735 	.db #0x26	; 38
      0001D6 26                     736 	.db #0x26	; 38
      0001D7 26                     737 	.db #0x26	; 38
      0001D8 26                     738 	.db #0x26	; 38
      0001D9 26                     739 	.db #0x26	; 38
      0001DA 27                     740 	.db #0x27	; 39
      0001DB 28                     741 	.db #0x28	; 40
      0001DC 26                     742 	.db #0x26	; 38
      0001DD 26                     743 	.db #0x26	; 38
      0001DE 26                     744 	.db #0x26	; 38
      0001DF 26                     745 	.db #0x26	; 38
      0001E0 26                     746 	.db #0x26	; 38
      0001E1 26                     747 	.db #0x26	; 38
      0001E2 26                     748 	.db #0x26	; 38
      0001E3 26                     749 	.db #0x26	; 38
      0001E4 26                     750 	.db #0x26	; 38
      0001E5 26                     751 	.db #0x26	; 38
      0001E6 26                     752 	.db #0x26	; 38
      0001E7 26                     753 	.db #0x26	; 38
      0001E8 26                     754 	.db #0x26	; 38
      0001E9 26                     755 	.db #0x26	; 38
      0001EA 26                     756 	.db #0x26	; 38
      0001EB 26                     757 	.db #0x26	; 38
      0001EC 26                     758 	.db #0x26	; 38
      0001ED 26                     759 	.db #0x26	; 38
      0001EE 26                     760 	.db #0x26	; 38
      0001EF 26                     761 	.db #0x26	; 38
      0001F0 26                     762 	.db #0x26	; 38
      0001F1 26                     763 	.db #0x26	; 38
      0001F2 26                     764 	.db #0x26	; 38
      0001F3 26                     765 	.db #0x26	; 38
      0001F4 26                     766 	.db #0x26	; 38
      0001F5 26                     767 	.db #0x26	; 38
      0001F6 26                     768 	.db #0x26	; 38
      0001F7 26                     769 	.db #0x26	; 38
      0001F8 26                     770 	.db #0x26	; 38
      0001F9 26                     771 	.db #0x26	; 38
      0001FA 2A                     772 	.db #0x2a	; 42
      0001FB 29                     773 	.db #0x29	; 41
      0001FC 26                     774 	.db #0x26	; 38
      0001FD 26                     775 	.db #0x26	; 38
      0001FE 26                     776 	.db #0x26	; 38
      0001FF 26                     777 	.db #0x26	; 38
      000200 26                     778 	.db #0x26	; 38
      000201 26                     779 	.db #0x26	; 38
      000202 26                     780 	.db #0x26	; 38
      000203 26                     781 	.db #0x26	; 38
      000204 26                     782 	.db #0x26	; 38
      000205 26                     783 	.db #0x26	; 38
      000206 26                     784 	.db #0x26	; 38
      000207 26                     785 	.db #0x26	; 38
      000208 26                     786 	.db #0x26	; 38
      000209 26                     787 	.db #0x26	; 38
      00020A 26                     788 	.db #0x26	; 38
      00020B 26                     789 	.db #0x26	; 38
      00020C 26                     790 	.db #0x26	; 38
      00020D 26                     791 	.db #0x26	; 38
      00020E 27                     792 	.db #0x27	; 39
      00020F 28                     793 	.db #0x28	; 40
      000210 26                     794 	.db #0x26	; 38
      000211 26                     795 	.db #0x26	; 38
      000212 26                     796 	.db #0x26	; 38
      000213 26                     797 	.db #0x26	; 38
      000214 26                     798 	.db #0x26	; 38
      000215 26                     799 	.db #0x26	; 38
      000216 26                     800 	.db #0x26	; 38
      000217 26                     801 	.db #0x26	; 38
      000218 26                     802 	.db #0x26	; 38
      000219 26                     803 	.db #0x26	; 38
      00021A 26                     804 	.db #0x26	; 38
      00021B 26                     805 	.db #0x26	; 38
      00021C 26                     806 	.db #0x26	; 38
      00021D 26                     807 	.db #0x26	; 38
      00021E 26                     808 	.db #0x26	; 38
      00021F 2C                     809 	.db #0x2c	; 44
      000220 26                     810 	.db #0x26	; 38
      000221 26                     811 	.db #0x26	; 38
      000222 26                     812 	.db #0x26	; 38
      000223 26                     813 	.db #0x26	; 38
      000224 26                     814 	.db #0x26	; 38
      000225 26                     815 	.db #0x26	; 38
      000226 26                     816 	.db #0x26	; 38
      000227 26                     817 	.db #0x26	; 38
      000228 26                     818 	.db #0x26	; 38
      000229 26                     819 	.db #0x26	; 38
      00022A 26                     820 	.db #0x26	; 38
      00022B 26                     821 	.db #0x26	; 38
      00022C 26                     822 	.db #0x26	; 38
      00022D 26                     823 	.db #0x26	; 38
      00022E 2A                     824 	.db #0x2a	; 42
      00022F 29                     825 	.db #0x29	; 41
      000230 26                     826 	.db #0x26	; 38
      000231 26                     827 	.db #0x26	; 38
      000232 26                     828 	.db #0x26	; 38
      000233 26                     829 	.db #0x26	; 38
      000234 26                     830 	.db #0x26	; 38
      000235 26                     831 	.db #0x26	; 38
      000236 26                     832 	.db #0x26	; 38
      000237 26                     833 	.db #0x26	; 38
      000238 26                     834 	.db #0x26	; 38
      000239 26                     835 	.db #0x26	; 38
      00023A 26                     836 	.db #0x26	; 38
      00023B 26                     837 	.db #0x26	; 38
      00023C 26                     838 	.db #0x26	; 38
      00023D 25                     839 	.db #0x25	; 37
      00023E 26                     840 	.db #0x26	; 38
      00023F 26                     841 	.db #0x26	; 38
      000240 26                     842 	.db #0x26	; 38
      000241 26                     843 	.db #0x26	; 38
      000242 26                     844 	.db #0x26	; 38
      000243 26                     845 	.db #0x26	; 38
      000244 2C                     846 	.db #0x2c	; 44
      000245 26                     847 	.db #0x26	; 38
      000246 26                     848 	.db #0x26	; 38
      000247 26                     849 	.db #0x26	; 38
      000248 26                     850 	.db #0x26	; 38
      000249 26                     851 	.db #0x26	; 38
      00024A 26                     852 	.db #0x26	; 38
      00024B 26                     853 	.db #0x26	; 38
      00024C 26                     854 	.db #0x26	; 38
      00024D 26                     855 	.db #0x26	; 38
      00024E 26                     856 	.db #0x26	; 38
      00024F 26                     857 	.db #0x26	; 38
      000250 26                     858 	.db #0x26	; 38
      000251 26                     859 	.db #0x26	; 38
      000252 26                     860 	.db #0x26	; 38
      000253 26                     861 	.db #0x26	; 38
      000254 26                     862 	.db #0x26	; 38
      000255 26                     863 	.db #0x26	; 38
      000256 26                     864 	.db #0x26	; 38
      000257 26                     865 	.db #0x26	; 38
      000258 26                     866 	.db #0x26	; 38
      000259 26                     867 	.db #0x26	; 38
      00025A 26                     868 	.db #0x26	; 38
      00025B 26                     869 	.db #0x26	; 38
      00025C 26                     870 	.db #0x26	; 38
      00025D 26                     871 	.db #0x26	; 38
      00025E 26                     872 	.db #0x26	; 38
      00025F 26                     873 	.db #0x26	; 38
      000260 26                     874 	.db #0x26	; 38
      000261 26                     875 	.db #0x26	; 38
      000262 26                     876 	.db #0x26	; 38
      000263 26                     877 	.db #0x26	; 38
      000264 26                     878 	.db #0x26	; 38
      000265 26                     879 	.db #0x26	; 38
      000266 26                     880 	.db #0x26	; 38
      000267 26                     881 	.db #0x26	; 38
      000268 26                     882 	.db #0x26	; 38
      000269 26                     883 	.db #0x26	; 38
      00026A 2C                     884 	.db #0x2c	; 44
      00026B 26                     885 	.db #0x26	; 38
      00026C 26                     886 	.db #0x26	; 38
      00026D 26                     887 	.db #0x26	; 38
      00026E 26                     888 	.db #0x26	; 38
      00026F 26                     889 	.db #0x26	; 38
      000270 26                     890 	.db #0x26	; 38
      000271 26                     891 	.db #0x26	; 38
      000272 26                     892 	.db #0x26	; 38
      000273 26                     893 	.db #0x26	; 38
      000274 26                     894 	.db #0x26	; 38
      000275 26                     895 	.db #0x26	; 38
      000276 26                     896 	.db #0x26	; 38
      000277 26                     897 	.db #0x26	; 38
      000278 26                     898 	.db #0x26	; 38
      000279 2C                     899 	.db #0x2c	; 44
      00027A 26                     900 	.db #0x26	; 38
      00027B 26                     901 	.db #0x26	; 38
      00027C 26                     902 	.db #0x26	; 38
      00027D 26                     903 	.db #0x26	; 38
      00027E 26                     904 	.db #0x26	; 38
      00027F 26                     905 	.db #0x26	; 38
      000280 26                     906 	.db #0x26	; 38
      000281 26                     907 	.db #0x26	; 38
      000282 26                     908 	.db #0x26	; 38
      000283 26                     909 	.db #0x26	; 38
      000284 26                     910 	.db #0x26	; 38
      000285 26                     911 	.db #0x26	; 38
      000286 26                     912 	.db #0x26	; 38
      000287 26                     913 	.db #0x26	; 38
      000288 26                     914 	.db #0x26	; 38
      000289 26                     915 	.db #0x26	; 38
      00028A 26                     916 	.db #0x26	; 38
      00028B 26                     917 	.db #0x26	; 38
      00028C 26                     918 	.db #0x26	; 38
      00028D 26                     919 	.db #0x26	; 38
      00028E 26                     920 	.db #0x26	; 38
      00028F 26                     921 	.db #0x26	; 38
      000290 26                     922 	.db #0x26	; 38
      000291 26                     923 	.db #0x26	; 38
      000292 26                     924 	.db #0x26	; 38
      000293 26                     925 	.db #0x26	; 38
      000294 26                     926 	.db #0x26	; 38
      000295 2B                     927 	.db #0x2b	; 43
      000296 26                     928 	.db #0x26	; 38
      000297 26                     929 	.db #0x26	; 38
      000298 26                     930 	.db #0x26	; 38
      000299 26                     931 	.db #0x26	; 38
      00029A 26                     932 	.db #0x26	; 38
      00029B 26                     933 	.db #0x26	; 38
      00029C 26                     934 	.db #0x26	; 38
      00029D 26                     935 	.db #0x26	; 38
      00029E 26                     936 	.db #0x26	; 38
      00029F 26                     937 	.db #0x26	; 38
      0002A0 26                     938 	.db #0x26	; 38
      0002A1 26                     939 	.db #0x26	; 38
      0002A2 26                     940 	.db #0x26	; 38
      0002A3 26                     941 	.db #0x26	; 38
      0002A4 26                     942 	.db #0x26	; 38
      0002A5 26                     943 	.db #0x26	; 38
      0002A6 26                     944 	.db #0x26	; 38
      0002A7 28                     945 	.db #0x28	; 40
      0002A8 26                     946 	.db #0x26	; 38
      0002A9 26                     947 	.db #0x26	; 38
      0002AA 26                     948 	.db #0x26	; 38
      0002AB 26                     949 	.db #0x26	; 38
      0002AC 26                     950 	.db #0x26	; 38
      0002AD 26                     951 	.db #0x26	; 38
      0002AE 26                     952 	.db #0x26	; 38
      0002AF 26                     953 	.db #0x26	; 38
      0002B0 26                     954 	.db #0x26	; 38
      0002B1 26                     955 	.db #0x26	; 38
      0002B2 26                     956 	.db #0x26	; 38
      0002B3 26                     957 	.db #0x26	; 38
      0002B4 26                     958 	.db #0x26	; 38
      0002B5 26                     959 	.db #0x26	; 38
      0002B6 26                     960 	.db #0x26	; 38
      0002B7 26                     961 	.db #0x26	; 38
      0002B8 26                     962 	.db #0x26	; 38
      0002B9 26                     963 	.db #0x26	; 38
      0002BA 26                     964 	.db #0x26	; 38
      0002BB 26                     965 	.db #0x26	; 38
      0002BC 26                     966 	.db #0x26	; 38
      0002BD 26                     967 	.db #0x26	; 38
      0002BE 26                     968 	.db #0x26	; 38
      0002BF 26                     969 	.db #0x26	; 38
      0002C0 2B                     970 	.db #0x2b	; 43
      0002C1 26                     971 	.db #0x26	; 38
      0002C2 26                     972 	.db #0x26	; 38
      0002C3 26                     973 	.db #0x26	; 38
      0002C4 26                     974 	.db #0x26	; 38
      0002C5 26                     975 	.db #0x26	; 38
      0002C6 27                     976 	.db #0x27	; 39
      0002C7 29                     977 	.db #0x29	; 41
      0002C8 26                     978 	.db #0x26	; 38
      0002C9 26                     979 	.db #0x26	; 38
      0002CA 26                     980 	.db #0x26	; 38
      0002CB 26                     981 	.db #0x26	; 38
      0002CC 26                     982 	.db #0x26	; 38
      0002CD 26                     983 	.db #0x26	; 38
      0002CE 2B                     984 	.db #0x2b	; 43
      0002CF 26                     985 	.db #0x26	; 38
      0002D0 26                     986 	.db #0x26	; 38
      0002D1 26                     987 	.db #0x26	; 38
      0002D2 26                     988 	.db #0x26	; 38
      0002D3 26                     989 	.db #0x26	; 38
      0002D4 26                     990 	.db #0x26	; 38
      0002D5 26                     991 	.db #0x26	; 38
      0002D6 26                     992 	.db #0x26	; 38
      0002D7 26                     993 	.db #0x26	; 38
      0002D8 26                     994 	.db #0x26	; 38
      0002D9 26                     995 	.db #0x26	; 38
      0002DA 26                     996 	.db #0x26	; 38
      0002DB 26                     997 	.db #0x26	; 38
      0002DC 26                     998 	.db #0x26	; 38
      0002DD 26                     999 	.db #0x26	; 38
      0002DE 26                    1000 	.db #0x26	; 38
      0002DF 26                    1001 	.db #0x26	; 38
      0002E0 26                    1002 	.db #0x26	; 38
      0002E1 26                    1003 	.db #0x26	; 38
      0002E2 26                    1004 	.db #0x26	; 38
      0002E3 26                    1005 	.db #0x26	; 38
      0002E4 26                    1006 	.db #0x26	; 38
      0002E5 26                    1007 	.db #0x26	; 38
      0002E6 2A                    1008 	.db #0x2a	; 42
      0002E7 26                    1009 	.db #0x26	; 38
      0002E8 26                    1010 	.db #0x26	; 38
      0002E9 26                    1011 	.db #0x26	; 38
      0002EA 26                    1012 	.db #0x26	; 38
      0002EB 26                    1013 	.db #0x26	; 38
      0002EC 26                    1014 	.db #0x26	; 38
      0002ED 26                    1015 	.db #0x26	; 38
      0002EE 26                    1016 	.db #0x26	; 38
      0002EF 26                    1017 	.db #0x26	; 38
      0002F0 26                    1018 	.db #0x26	; 38
      0002F1 26                    1019 	.db #0x26	; 38
      0002F2 2C                    1020 	.db #0x2c	; 44
      0002F3 26                    1021 	.db #0x26	; 38
      0002F4 26                    1022 	.db #0x26	; 38
      0002F5 26                    1023 	.db #0x26	; 38
      0002F6 26                    1024 	.db #0x26	; 38
      0002F7 26                    1025 	.db #0x26	; 38
      0002F8 26                    1026 	.db #0x26	; 38
      0002F9 26                    1027 	.db #0x26	; 38
      0002FA 26                    1028 	.db #0x26	; 38
      0002FB 26                    1029 	.db #0x26	; 38
      0002FC 26                    1030 	.db #0x26	; 38
      0002FD 26                    1031 	.db #0x26	; 38
      0002FE 26                    1032 	.db #0x26	; 38
      0002FF 26                    1033 	.db #0x26	; 38
      000300 26                    1034 	.db #0x26	; 38
      000301 26                    1035 	.db #0x26	; 38
      000302 26                    1036 	.db #0x26	; 38
      000303 26                    1037 	.db #0x26	; 38
      000304 26                    1038 	.db #0x26	; 38
      000305 26                    1039 	.db #0x26	; 38
      000306 26                    1040 	.db #0x26	; 38
      000307 26                    1041 	.db #0x26	; 38
      000308 26                    1042 	.db #0x26	; 38
      000309 26                    1043 	.db #0x26	; 38
      00030A 26                    1044 	.db #0x26	; 38
      00030B 26                    1045 	.db #0x26	; 38
      00030C 26                    1046 	.db #0x26	; 38
      00030D 26                    1047 	.db #0x26	; 38
      00030E 26                    1048 	.db #0x26	; 38
      00030F 26                    1049 	.db #0x26	; 38
      000310 26                    1050 	.db #0x26	; 38
      000311 26                    1051 	.db #0x26	; 38
      000312 26                    1052 	.db #0x26	; 38
      000313 26                    1053 	.db #0x26	; 38
      000314 26                    1054 	.db #0x26	; 38
      000315 26                    1055 	.db #0x26	; 38
      000316 26                    1056 	.db #0x26	; 38
      000317 2B                    1057 	.db #0x2b	; 43
      000318 26                    1058 	.db #0x26	; 38
      000319 26                    1059 	.db #0x26	; 38
      00031A 26                    1060 	.db #0x26	; 38
      00031B 26                    1061 	.db #0x26	; 38
      00031C 26                    1062 	.db #0x26	; 38
      00031D 26                    1063 	.db #0x26	; 38
      00031E 26                    1064 	.db #0x26	; 38
      00031F 26                    1065 	.db #0x26	; 38
      000320 26                    1066 	.db #0x26	; 38
      000321 26                    1067 	.db #0x26	; 38
      000322 26                    1068 	.db #0x26	; 38
      000323 26                    1069 	.db #0x26	; 38
      000324 26                    1070 	.db #0x26	; 38
      000325 26                    1071 	.db #0x26	; 38
      000326 26                    1072 	.db #0x26	; 38
      000327 26                    1073 	.db #0x26	; 38
      000328 26                    1074 	.db #0x26	; 38
      000329 26                    1075 	.db #0x26	; 38
      00032A 26                    1076 	.db #0x26	; 38
      00032B 26                    1077 	.db #0x26	; 38
      00032C 26                    1078 	.db #0x26	; 38
      00032D 26                    1079 	.db #0x26	; 38
      00032E 26                    1080 	.db #0x26	; 38
      00032F 26                    1081 	.db #0x26	; 38
      000330 26                    1082 	.db #0x26	; 38
      000331 26                    1083 	.db #0x26	; 38
      000332 26                    1084 	.db #0x26	; 38
      000333 26                    1085 	.db #0x26	; 38
      000334 26                    1086 	.db #0x26	; 38
      000335 26                    1087 	.db #0x26	; 38
      000336 26                    1088 	.db #0x26	; 38
      000337 26                    1089 	.db #0x26	; 38
      000338 26                    1090 	.db #0x26	; 38
      000339 26                    1091 	.db #0x26	; 38
      00033A 26                    1092 	.db #0x26	; 38
      00033B 26                    1093 	.db #0x26	; 38
      00033C 26                    1094 	.db #0x26	; 38
      00033D 26                    1095 	.db #0x26	; 38
      00033E 2B                    1096 	.db #0x2b	; 43
      00033F 26                    1097 	.db #0x26	; 38
      000340 26                    1098 	.db #0x26	; 38
      000341 26                    1099 	.db #0x26	; 38
      000342 26                    1100 	.db #0x26	; 38
      000343 26                    1101 	.db #0x26	; 38
      000344 26                    1102 	.db #0x26	; 38
      000345 26                    1103 	.db #0x26	; 38
      000346 26                    1104 	.db #0x26	; 38
      000347 26                    1105 	.db #0x26	; 38
      000348 26                    1106 	.db #0x26	; 38
      000349 26                    1107 	.db #0x26	; 38
      00034A 2B                    1108 	.db #0x2b	; 43
      00034B 26                    1109 	.db #0x26	; 38
      00034C 26                    1110 	.db #0x26	; 38
      00034D 26                    1111 	.db #0x26	; 38
      00034E 26                    1112 	.db #0x26	; 38
      00034F 26                    1113 	.db #0x26	; 38
      000350 26                    1114 	.db #0x26	; 38
      000351 26                    1115 	.db #0x26	; 38
      000352 26                    1116 	.db #0x26	; 38
      000353 26                    1117 	.db #0x26	; 38
      000354 26                    1118 	.db #0x26	; 38
      000355 26                    1119 	.db #0x26	; 38
      000356 26                    1120 	.db #0x26	; 38
      000357 26                    1121 	.db #0x26	; 38
      000358 26                    1122 	.db #0x26	; 38
      000359 26                    1123 	.db #0x26	; 38
      00035A 26                    1124 	.db #0x26	; 38
      00035B 26                    1125 	.db #0x26	; 38
      00035C 26                    1126 	.db #0x26	; 38
      00035D 26                    1127 	.db #0x26	; 38
      00035E 26                    1128 	.db #0x26	; 38
      00035F 26                    1129 	.db #0x26	; 38
      000360 26                    1130 	.db #0x26	; 38
      000361 26                    1131 	.db #0x26	; 38
      000362 26                    1132 	.db #0x26	; 38
      000363 26                    1133 	.db #0x26	; 38
      000364 26                    1134 	.db #0x26	; 38
      000365 26                    1135 	.db #0x26	; 38
      000366 2C                    1136 	.db #0x2c	; 44
      000367 26                    1137 	.db #0x26	; 38
      000368 26                    1138 	.db #0x26	; 38
      000369 26                    1139 	.db #0x26	; 38
      00036A 26                    1140 	.db #0x26	; 38
      00036B 26                    1141 	.db #0x26	; 38
      00036C 26                    1142 	.db #0x26	; 38
      00036D 26                    1143 	.db #0x26	; 38
      00036E 26                    1144 	.db #0x26	; 38
      00036F 26                    1145 	.db #0x26	; 38
      000370 2B                    1146 	.db #0x2b	; 43
      000371 26                    1147 	.db #0x26	; 38
      000372 26                    1148 	.db #0x26	; 38
      000373 26                    1149 	.db #0x26	; 38
      000374 26                    1150 	.db #0x26	; 38
      000375 26                    1151 	.db #0x26	; 38
      000376 26                    1152 	.db #0x26	; 38
      000377 26                    1153 	.db #0x26	; 38
      000378 26                    1154 	.db #0x26	; 38
      000379 26                    1155 	.db #0x26	; 38
      00037A 26                    1156 	.db #0x26	; 38
      00037B 26                    1157 	.db #0x26	; 38
      00037C 26                    1158 	.db #0x26	; 38
      00037D 26                    1159 	.db #0x26	; 38
      00037E 26                    1160 	.db #0x26	; 38
      00037F 26                    1161 	.db #0x26	; 38
      000380 26                    1162 	.db #0x26	; 38
      000381 26                    1163 	.db #0x26	; 38
      000382 26                    1164 	.db #0x26	; 38
      000383 26                    1165 	.db #0x26	; 38
      000384 26                    1166 	.db #0x26	; 38
      000385 26                    1167 	.db #0x26	; 38
      000386 26                    1168 	.db #0x26	; 38
      000387 26                    1169 	.db #0x26	; 38
      000388 26                    1170 	.db #0x26	; 38
      000389 26                    1171 	.db #0x26	; 38
      00038A 26                    1172 	.db #0x26	; 38
      00038B 26                    1173 	.db #0x26	; 38
      00038C 26                    1174 	.db #0x26	; 38
      00038D 26                    1175 	.db #0x26	; 38
      00038E 26                    1176 	.db #0x26	; 38
      00038F 26                    1177 	.db #0x26	; 38
      000390 26                    1178 	.db #0x26	; 38
      000391 26                    1179 	.db #0x26	; 38
      000392 26                    1180 	.db #0x26	; 38
      000393 26                    1181 	.db #0x26	; 38
      000394 26                    1182 	.db #0x26	; 38
      000395 26                    1183 	.db #0x26	; 38
      000396 26                    1184 	.db #0x26	; 38
      000397 26                    1185 	.db #0x26	; 38
      000398 27                    1186 	.db #0x27	; 39
      000399 28                    1187 	.db #0x28	; 40
      00039A 26                    1188 	.db #0x26	; 38
      00039B 26                    1189 	.db #0x26	; 38
      00039C 26                    1190 	.db #0x26	; 38
      00039D 26                    1191 	.db #0x26	; 38
      00039E 26                    1192 	.db #0x26	; 38
      00039F 26                    1193 	.db #0x26	; 38
      0003A0 26                    1194 	.db #0x26	; 38
      0003A1 26                    1195 	.db #0x26	; 38
      0003A2 26                    1196 	.db #0x26	; 38
      0003A3 26                    1197 	.db #0x26	; 38
      0003A4 26                    1198 	.db #0x26	; 38
      0003A5 26                    1199 	.db #0x26	; 38
      0003A6 26                    1200 	.db #0x26	; 38
      0003A7 26                    1201 	.db #0x26	; 38
      0003A8 26                    1202 	.db #0x26	; 38
      0003A9 26                    1203 	.db #0x26	; 38
      0003AA 26                    1204 	.db #0x26	; 38
      0003AB 26                    1205 	.db #0x26	; 38
      0003AC 26                    1206 	.db #0x26	; 38
      0003AD 2B                    1207 	.db #0x2b	; 43
      0003AE 26                    1208 	.db #0x26	; 38
      0003AF 26                    1209 	.db #0x26	; 38
      0003B0 26                    1210 	.db #0x26	; 38
      0003B1 26                    1211 	.db #0x26	; 38
      0003B2 26                    1212 	.db #0x26	; 38
      0003B3 26                    1213 	.db #0x26	; 38
      0003B4 26                    1214 	.db #0x26	; 38
      0003B5 25                    1215 	.db #0x25	; 37
      0003B6 26                    1216 	.db #0x26	; 38
      0003B7 26                    1217 	.db #0x26	; 38
      0003B8 2A                    1218 	.db #0x2a	; 42
      0003B9 29                    1219 	.db #0x29	; 41
      0003BA 26                    1220 	.db #0x26	; 38
      0003BB 26                    1221 	.db #0x26	; 38
      0003BC 26                    1222 	.db #0x26	; 38
      0003BD 26                    1223 	.db #0x26	; 38
      0003BE 26                    1224 	.db #0x26	; 38
      0003BF 26                    1225 	.db #0x26	; 38
      0003C0 26                    1226 	.db #0x26	; 38
      0003C1 26                    1227 	.db #0x26	; 38
      0003C2 2B                    1228 	.db #0x2b	; 43
      0003C3 26                    1229 	.db #0x26	; 38
      0003C4 26                    1230 	.db #0x26	; 38
      0003C5 26                    1231 	.db #0x26	; 38
      0003C6 26                    1232 	.db #0x26	; 38
      0003C7 26                    1233 	.db #0x26	; 38
      0003C8 26                    1234 	.db #0x26	; 38
      0003C9 2C                    1235 	.db #0x2c	; 44
      0003CA 26                    1236 	.db #0x26	; 38
      0003CB 26                    1237 	.db #0x26	; 38
      0003CC 26                    1238 	.db #0x26	; 38
      0003CD 26                    1239 	.db #0x26	; 38
      0003CE 26                    1240 	.db #0x26	; 38
      0003CF 26                    1241 	.db #0x26	; 38
      0003D0 26                    1242 	.db #0x26	; 38
      0003D1 26                    1243 	.db #0x26	; 38
      0003D2 26                    1244 	.db #0x26	; 38
      0003D3 26                    1245 	.db #0x26	; 38
      0003D4 26                    1246 	.db #0x26	; 38
      0003D5 2C                    1247 	.db #0x2c	; 44
      0003D6 26                    1248 	.db #0x26	; 38
      0003D7 26                    1249 	.db #0x26	; 38
      0003D8 26                    1250 	.db #0x26	; 38
      0003D9 26                    1251 	.db #0x26	; 38
      0003DA 26                    1252 	.db #0x26	; 38
      0003DB 26                    1253 	.db #0x26	; 38
      0003DC 26                    1254 	.db #0x26	; 38
      0003DD 26                    1255 	.db #0x26	; 38
      0003DE 26                    1256 	.db #0x26	; 38
      0003DF 26                    1257 	.db #0x26	; 38
      0003E0 26                    1258 	.db #0x26	; 38
      0003E1 26                    1259 	.db #0x26	; 38
      0003E2 26                    1260 	.db #0x26	; 38
      0003E3 26                    1261 	.db #0x26	; 38
      0003E4 26                    1262 	.db #0x26	; 38
      0003E5 26                    1263 	.db #0x26	; 38
      0003E6 26                    1264 	.db #0x26	; 38
      0003E7 26                    1265 	.db #0x26	; 38
      0003E8 26                    1266 	.db #0x26	; 38
      0003E9 26                    1267 	.db #0x26	; 38
      0003EA 26                    1268 	.db #0x26	; 38
      0003EB 26                    1269 	.db #0x26	; 38
      0003EC 26                    1270 	.db #0x26	; 38
      0003ED 26                    1271 	.db #0x26	; 38
      0003EE 26                    1272 	.db #0x26	; 38
      0003EF 26                    1273 	.db #0x26	; 38
      0003F0 26                    1274 	.db #0x26	; 38
      0003F1 26                    1275 	.db #0x26	; 38
      0003F2 26                    1276 	.db #0x26	; 38
      0003F3 26                    1277 	.db #0x26	; 38
      0003F4 26                    1278 	.db #0x26	; 38
      0003F5 26                    1279 	.db #0x26	; 38
      0003F6 26                    1280 	.db #0x26	; 38
      0003F7 26                    1281 	.db #0x26	; 38
      0003F8 26                    1282 	.db #0x26	; 38
      0003F9 26                    1283 	.db #0x26	; 38
      0003FA 26                    1284 	.db #0x26	; 38
      0003FB 26                    1285 	.db #0x26	; 38
      0003FC 26                    1286 	.db #0x26	; 38
      0003FD 26                    1287 	.db #0x26	; 38
      0003FE 26                    1288 	.db #0x26	; 38
      0003FF 26                    1289 	.db #0x26	; 38
      000400 26                    1290 	.db #0x26	; 38
      000401 26                    1291 	.db #0x26	; 38
      000402 26                    1292 	.db #0x26	; 38
      000403 26                    1293 	.db #0x26	; 38
      000404 26                    1294 	.db #0x26	; 38
      000405 26                    1295 	.db #0x26	; 38
      000406 26                    1296 	.db #0x26	; 38
      000407 26                    1297 	.db #0x26	; 38
      000408 26                    1298 	.db #0x26	; 38
      000409 26                    1299 	.db #0x26	; 38
      00040A 26                    1300 	.db #0x26	; 38
      00040B 26                    1301 	.db #0x26	; 38
      00040C 26                    1302 	.db #0x26	; 38
      00040D 2B                    1303 	.db #0x2b	; 43
      00040E 26                    1304 	.db #0x26	; 38
      00040F 26                    1305 	.db #0x26	; 38
      000410 26                    1306 	.db #0x26	; 38
      000411 26                    1307 	.db #0x26	; 38
      000412 26                    1308 	.db #0x26	; 38
      000413 26                    1309 	.db #0x26	; 38
      000414 26                    1310 	.db #0x26	; 38
      000415 26                    1311 	.db #0x26	; 38
      000416 26                    1312 	.db #0x26	; 38
      000417 26                    1313 	.db #0x26	; 38
      000418 26                    1314 	.db #0x26	; 38
      000419 26                    1315 	.db #0x26	; 38
      00041A 26                    1316 	.db #0x26	; 38
      00041B 26                    1317 	.db #0x26	; 38
      00041C 26                    1318 	.db #0x26	; 38
      00041D 26                    1319 	.db #0x26	; 38
      00041E 26                    1320 	.db #0x26	; 38
      00041F 26                    1321 	.db #0x26	; 38
      000420 2B                    1322 	.db #0x2b	; 43
      000421 26                    1323 	.db #0x26	; 38
      000422 26                    1324 	.db #0x26	; 38
      000423 26                    1325 	.db #0x26	; 38
      000424 26                    1326 	.db #0x26	; 38
      000425 26                    1327 	.db #0x26	; 38
      000426 26                    1328 	.db #0x26	; 38
      000427 26                    1329 	.db #0x26	; 38
      000428 26                    1330 	.db #0x26	; 38
      000429 26                    1331 	.db #0x26	; 38
      00042A 26                    1332 	.db #0x26	; 38
      00042B 26                    1333 	.db #0x26	; 38
      00042C 26                    1334 	.db #0x26	; 38
      00042D 26                    1335 	.db #0x26	; 38
      00042E 26                    1336 	.db #0x26	; 38
      00042F 26                    1337 	.db #0x26	; 38
      000430 26                    1338 	.db #0x26	; 38
      000431 26                    1339 	.db #0x26	; 38
      000432 26                    1340 	.db #0x26	; 38
      000433 26                    1341 	.db #0x26	; 38
      000434 26                    1342 	.db #0x26	; 38
      000435 26                    1343 	.db #0x26	; 38
      000436 26                    1344 	.db #0x26	; 38
      000437 2C                    1345 	.db #0x2c	; 44
      000438 26                    1346 	.db #0x26	; 38
      000439 26                    1347 	.db #0x26	; 38
      00043A 26                    1348 	.db #0x26	; 38
      00043B 26                    1349 	.db #0x26	; 38
      00043C 26                    1350 	.db #0x26	; 38
      00043D 26                    1351 	.db #0x26	; 38
      00043E 26                    1352 	.db #0x26	; 38
      00043F 26                    1353 	.db #0x26	; 38
      000440 26                    1354 	.db #0x26	; 38
      000441 26                    1355 	.db #0x26	; 38
      000442 26                    1356 	.db #0x26	; 38
      000443 26                    1357 	.db #0x26	; 38
      000444 26                    1358 	.db #0x26	; 38
      000445 26                    1359 	.db #0x26	; 38
      000446 26                    1360 	.db #0x26	; 38
      000447 26                    1361 	.db #0x26	; 38
      000448 25                    1362 	.db #0x25	; 37
      000449 2C                    1363 	.db #0x2c	; 44
      00044A 26                    1364 	.db #0x26	; 38
      00044B 26                    1365 	.db #0x26	; 38
      00044C 26                    1366 	.db #0x26	; 38
      00044D 26                    1367 	.db #0x26	; 38
      00044E 26                    1368 	.db #0x26	; 38
      00044F 26                    1369 	.db #0x26	; 38
      000450 26                    1370 	.db #0x26	; 38
      000451 26                    1371 	.db #0x26	; 38
      000452 26                    1372 	.db #0x26	; 38
      000453 26                    1373 	.db #0x26	; 38
      000454 26                    1374 	.db #0x26	; 38
      000455 26                    1375 	.db #0x26	; 38
      000456 26                    1376 	.db #0x26	; 38
      000457 26                    1377 	.db #0x26	; 38
      000458 26                    1378 	.db #0x26	; 38
      000459 26                    1379 	.db #0x26	; 38
      00045A 2B                    1380 	.db #0x2b	; 43
      00045B 26                    1381 	.db #0x26	; 38
      00045C 26                    1382 	.db #0x26	; 38
      00045D 26                    1383 	.db #0x26	; 38
      00045E 26                    1384 	.db #0x26	; 38
      00045F 26                    1385 	.db #0x26	; 38
      000460 26                    1386 	.db #0x26	; 38
      000461 26                    1387 	.db #0x26	; 38
      000462 26                    1388 	.db #0x26	; 38
      000463 26                    1389 	.db #0x26	; 38
      000464 26                    1390 	.db #0x26	; 38
      000465 26                    1391 	.db #0x26	; 38
      000466 26                    1392 	.db #0x26	; 38
      000467 26                    1393 	.db #0x26	; 38
      000468 26                    1394 	.db #0x26	; 38
      000469 26                    1395 	.db #0x26	; 38
      00046A 26                    1396 	.db #0x26	; 38
      00046B 26                    1397 	.db #0x26	; 38
      00046C 26                    1398 	.db #0x26	; 38
      00046D 26                    1399 	.db #0x26	; 38
      00046E 26                    1400 	.db #0x26	; 38
      00046F 26                    1401 	.db #0x26	; 38
      000470 26                    1402 	.db #0x26	; 38
      000471 26                    1403 	.db #0x26	; 38
      000472 27                    1404 	.db #0x27	; 39
      000473 28                    1405 	.db #0x28	; 40
      000474 26                    1406 	.db #0x26	; 38
      000475 26                    1407 	.db #0x26	; 38
      000476 26                    1408 	.db #0x26	; 38
      000477 26                    1409 	.db #0x26	; 38
      000478 26                    1410 	.db #0x26	; 38
      000479 26                    1411 	.db #0x26	; 38
      00047A 26                    1412 	.db #0x26	; 38
      00047B 26                    1413 	.db #0x26	; 38
      00047C 26                    1414 	.db #0x26	; 38
      00047D 26                    1415 	.db #0x26	; 38
      00047E 26                    1416 	.db #0x26	; 38
      00047F 26                    1417 	.db #0x26	; 38
      000480 26                    1418 	.db #0x26	; 38
      000481 26                    1419 	.db #0x26	; 38
      000482 26                    1420 	.db #0x26	; 38
      000483 26                    1421 	.db #0x26	; 38
      000484 26                    1422 	.db #0x26	; 38
      000485 26                    1423 	.db #0x26	; 38
      000486 2B                    1424 	.db #0x2b	; 43
      000487                       1425 _backgroundtiles:
      000487 40                    1426 	.db #0x40	; 64
      000488 38                    1427 	.db #0x38	; 56	'8'
      000489 3A                    1428 	.db #0x3a	; 58
      00048A 44                    1429 	.db #0x44	; 68	'D'
      00048B 7C                    1430 	.db #0x7c	; 124
      00048C 9A                    1431 	.db #0x9a	; 154
      00048D 5E                    1432 	.db #0x5e	; 94
      00048E E9                    1433 	.db #0xe9	; 233
      00048F 7A                    1434 	.db #0x7a	; 122	'z'
      000490 87                    1435 	.db #0x87	; 135
      000491 76                    1436 	.db #0x76	; 118	'v'
      000492 B9                    1437 	.db #0xb9	; 185
      000493 3C                    1438 	.db #0x3c	; 60
      000494 72                    1439 	.db #0x72	; 114	'r'
      000495 00                    1440 	.db #0x00	; 0
      000496 3C                    1441 	.db #0x3c	; 60
      000497 00                    1442 	.db #0x00	; 0
      000498 00                    1443 	.db #0x00	; 0
      000499 00                    1444 	.db #0x00	; 0
      00049A 00                    1445 	.db #0x00	; 0
      00049B 00                    1446 	.db #0x00	; 0
      00049C 00                    1447 	.db #0x00	; 0
      00049D 00                    1448 	.db #0x00	; 0
      00049E 00                    1449 	.db #0x00	; 0
      00049F 00                    1450 	.db #0x00	; 0
      0004A0 00                    1451 	.db #0x00	; 0
      0004A1 00                    1452 	.db #0x00	; 0
      0004A2 00                    1453 	.db #0x00	; 0
      0004A3 00                    1454 	.db #0x00	; 0
      0004A4 00                    1455 	.db #0x00	; 0
      0004A5 00                    1456 	.db #0x00	; 0
      0004A6 00                    1457 	.db #0x00	; 0
      0004A7 00                    1458 	.db #0x00	; 0
      0004A8 0F                    1459 	.db #0x0f	; 15
      0004A9 08                    1460 	.db #0x08	; 8
      0004AA 17                    1461 	.db #0x17	; 23
      0004AB 1C                    1462 	.db #0x1c	; 28
      0004AC 23                    1463 	.db #0x23	; 35
      0004AD 3E                    1464 	.db #0x3e	; 62
      0004AE 41                    1465 	.db #0x41	; 65	'A'
      0004AF 1B                    1466 	.db #0x1b	; 27
      0004B0 64                    1467 	.db #0x64	; 100	'd'
      0004B1 31                    1468 	.db #0x31	; 49	'1'
      0004B2 4E                    1469 	.db #0x4e	; 78	'N'
      0004B3 B1                    1470 	.db #0xb1	; 177
      0004B4 CE                    1471 	.db #0xce	; 206
      0004B5 BB                    1472 	.db #0xbb	; 187
      0004B6 C4                    1473 	.db #0xc4	; 196
      0004B7 00                    1474 	.db #0x00	; 0
      0004B8 F8                    1475 	.db #0xf8	; 248
      0004B9 00                    1476 	.db #0x00	; 0
      0004BA FC                    1477 	.db #0xfc	; 252
      0004BB E0                    1478 	.db #0xe0	; 224
      0004BC 1E                    1479 	.db #0x1e	; 30
      0004BD F0                    1480 	.db #0xf0	; 240
      0004BE 0F                    1481 	.db #0x0f	; 15
      0004BF BE                    1482 	.db #0xbe	; 190
      0004C0 01                    1483 	.db #0x01	; 1
      0004C1 BC                    1484 	.db #0xbc	; 188
      0004C2 02                    1485 	.db #0x02	; 2
      0004C3 CE                    1486 	.db #0xce	; 206
      0004C4 01                    1487 	.db #0x01	; 1
      0004C5 F6                    1488 	.db #0xf6	; 246
      0004C6 61                    1489 	.db #0x61	; 97	'a'
      0004C7 F4                    1490 	.db #0xf4	; 244
      0004C8 02                    1491 	.db #0x02	; 2
      0004C9 94                    1492 	.db #0x94	; 148
      0004CA 62                    1493 	.db #0x62	; 98	'b'
      0004CB E4                    1494 	.db #0xe4	; 228
      0004CC 02                    1495 	.db #0x02	; 2
      0004CD 6C                    1496 	.db #0x6c	; 108	'l'
      0004CE 82                    1497 	.db #0x82	; 130
      0004CF 70                    1498 	.db #0x70	; 112	'p'
      0004D0 8C                    1499 	.db #0x8c	; 140
      0004D1 60                    1500 	.db #0x60	; 96
      0004D2 90                    1501 	.db #0x90	; 144
      0004D3 00                    1502 	.db #0x00	; 0
      0004D4 E0                    1503 	.db #0xe0	; 224
      0004D5 80                    1504 	.db #0x80	; 128
      0004D6 80                    1505 	.db #0x80	; 128
      0004D7 8E                    1506 	.db #0x8e	; 142
      0004D8 F7                    1507 	.db #0xf7	; 247
      0004D9 8F                    1508 	.db #0x8f	; 143
      0004DA F3                    1509 	.db #0xf3	; 243
      0004DB 86                    1510 	.db #0x86	; 134
      0004DC F9                    1511 	.db #0xf9	; 249
      0004DD 42                    1512 	.db #0x42	; 66	'B'
      0004DE 7D                    1513 	.db #0x7d	; 125
      0004DF 80                    1514 	.db #0x80	; 128
      0004E0 FF                    1515 	.db #0xff	; 255
      0004E1 44                    1516 	.db #0x44	; 68	'D'
      0004E2 7F                    1517 	.db #0x7f	; 127
      0004E3 28                    1518 	.db #0x28	; 40
      0004E4 3F                    1519 	.db #0x3f	; 63
      0004E5 07                    1520 	.db #0x07	; 7
      0004E6 07                    1521 	.db #0x07	; 7
      0004E7 00                    1522 	.db #0x00	; 0
      0004E8 00                    1523 	.db #0x00	; 0
      0004E9 08                    1524 	.db #0x08	; 8
      0004EA 00                    1525 	.db #0x00	; 0
      0004EB 08                    1526 	.db #0x08	; 8
      0004EC 00                    1527 	.db #0x00	; 0
      0004ED 1C                    1528 	.db #0x1c	; 28
      0004EE 00                    1529 	.db #0x00	; 0
      0004EF 7F                    1530 	.db #0x7f	; 127
      0004F0 00                    1531 	.db #0x00	; 0
      0004F1 1C                    1532 	.db #0x1c	; 28
      0004F2 00                    1533 	.db #0x00	; 0
      0004F3 08                    1534 	.db #0x08	; 8
      0004F4 00                    1535 	.db #0x00	; 0
      0004F5 08                    1536 	.db #0x08	; 8
      0004F6 00                    1537 	.db #0x00	; 0
      0004F7 00                    1538 	.db #0x00	; 0
      0004F8 00                    1539 	.db #0x00	; 0
      0004F9 00                    1540 	.db #0x00	; 0
      0004FA 00                    1541 	.db #0x00	; 0
      0004FB 00                    1542 	.db #0x00	; 0
      0004FC 00                    1543 	.db #0x00	; 0
      0004FD 10                    1544 	.db #0x10	; 16
      0004FE 00                    1545 	.db #0x00	; 0
      0004FF 00                    1546 	.db #0x00	; 0
      000500 00                    1547 	.db #0x00	; 0
      000501 00                    1548 	.db #0x00	; 0
      000502 00                    1549 	.db #0x00	; 0
      000503 00                    1550 	.db #0x00	; 0
      000504 00                    1551 	.db #0x00	; 0
      000505 00                    1552 	.db #0x00	; 0
      000506 00                    1553 	.db #0x00	; 0
      000507                       1554 _healthblock:
      000507 FE                    1555 	.db #0xfe	; 254
      000508 FE                    1556 	.db #0xfe	; 254
      000509 FE                    1557 	.db #0xfe	; 254
      00050A FE                    1558 	.db #0xfe	; 254
      00050B FE                    1559 	.db #0xfe	; 254
      00050C FE                    1560 	.db #0xfe	; 254
      00050D FE                    1561 	.db #0xfe	; 254
      00050E FE                    1562 	.db #0xfe	; 254
      00050F FE                    1563 	.db #0xfe	; 254
      000510 FE                    1564 	.db #0xfe	; 254
      000511 FE                    1565 	.db #0xfe	; 254
      000512 FE                    1566 	.db #0xfe	; 254
      000513 FE                    1567 	.db #0xfe	; 254
      000514 FE                    1568 	.db #0xfe	; 254
      000515 00                    1569 	.db #0x00	; 0
      000516 00                    1570 	.db #0x00	; 0
      000517                       1571 _enemyOptionCount:
      000517 05                    1572 	.db #0x05	; 5
      000518                       1573 _enemy1:
      000518 66                    1574 	.db #0x66	; 102	'f'
      000519 24                    1575 	.db #0x24	; 36
      00051A E7                    1576 	.db #0xe7	; 231
      00051B 66                    1577 	.db #0x66	; 102	'f'
      00051C F7                    1578 	.db #0xf7	; 247
      00051D E7                    1579 	.db #0xe7	; 231
      00051E 1C                    1580 	.db #0x1c	; 28
      00051F 18                    1581 	.db #0x18	; 24
      000520 38                    1582 	.db #0x38	; 56	'8'
      000521 18                    1583 	.db #0x18	; 24
      000522 EF                    1584 	.db #0xef	; 239
      000523 E7                    1585 	.db #0xe7	; 231
      000524 E7                    1586 	.db #0xe7	; 231
      000525 66                    1587 	.db #0x66	; 102	'f'
      000526 66                    1588 	.db #0x66	; 102	'f'
      000527 24                    1589 	.db #0x24	; 36
      000528 00                    1590 	.db #0x00	; 0
      000529 00                    1591 	.db #0x00	; 0
      00052A 00                    1592 	.db #0x00	; 0
      00052B 00                    1593 	.db #0x00	; 0
      00052C 00                    1594 	.db #0x00	; 0
      00052D 00                    1595 	.db #0x00	; 0
      00052E 00                    1596 	.db #0x00	; 0
      00052F 00                    1597 	.db #0x00	; 0
      000530 00                    1598 	.db #0x00	; 0
      000531 00                    1599 	.db #0x00	; 0
      000532 00                    1600 	.db #0x00	; 0
      000533 00                    1601 	.db #0x00	; 0
      000534 00                    1602 	.db #0x00	; 0
      000535 00                    1603 	.db #0x00	; 0
      000536 00                    1604 	.db #0x00	; 0
      000537 00                    1605 	.db #0x00	; 0
      000538 3C                    1606 	.db #0x3c	; 60
      000539 3C                    1607 	.db #0x3c	; 60
      00053A 5E                    1608 	.db #0x5e	; 94
      00053B 62                    1609 	.db #0x62	; 98	'b'
      00053C 8F                    1610 	.db #0x8f	; 143
      00053D F1                    1611 	.db #0xf1	; 241
      00053E C7                    1612 	.db #0xc7	; 199
      00053F F9                    1613 	.db #0xf9	; 249
      000540 C3                    1614 	.db #0xc3	; 195
      000541 FD                    1615 	.db #0xfd	; 253
      000542 E1                    1616 	.db #0xe1	; 225
      000543 FF                    1617 	.db #0xff	; 255
      000544 7A                    1618 	.db #0x7a	; 122	'z'
      000545 7E                    1619 	.db #0x7e	; 126
      000546 3C                    1620 	.db #0x3c	; 60
      000547 3C                    1621 	.db #0x3c	; 60
      000548 00                    1622 	.db #0x00	; 0
      000549 00                    1623 	.db #0x00	; 0
      00054A 00                    1624 	.db #0x00	; 0
      00054B 00                    1625 	.db #0x00	; 0
      00054C 00                    1626 	.db #0x00	; 0
      00054D 00                    1627 	.db #0x00	; 0
      00054E 00                    1628 	.db #0x00	; 0
      00054F 00                    1629 	.db #0x00	; 0
      000550 00                    1630 	.db #0x00	; 0
      000551 00                    1631 	.db #0x00	; 0
      000552 00                    1632 	.db #0x00	; 0
      000553 00                    1633 	.db #0x00	; 0
      000554 00                    1634 	.db #0x00	; 0
      000555 00                    1635 	.db #0x00	; 0
      000556 00                    1636 	.db #0x00	; 0
      000557 00                    1637 	.db #0x00	; 0
      000558 3C                    1638 	.db #0x3c	; 60
      000559 3E                    1639 	.db #0x3e	; 62
      00055A 20                    1640 	.db #0x20	; 32
      00055B 38                    1641 	.db #0x38	; 56	'8'
      00055C 44                    1642 	.db #0x44	; 68	'D'
      00055D 78                    1643 	.db #0x78	; 120	'x'
      00055E BA                    1644 	.db #0xba	; 186
      00055F C4                    1645 	.db #0xc4	; 196
      000560 BA                    1646 	.db #0xba	; 186
      000561 C4                    1647 	.db #0xc4	; 196
      000562 44                    1648 	.db #0x44	; 68	'D'
      000563 78                    1649 	.db #0x78	; 120	'x'
      000564 20                    1650 	.db #0x20	; 32
      000565 38                    1651 	.db #0x38	; 56	'8'
      000566 3C                    1652 	.db #0x3c	; 60
      000567 3E                    1653 	.db #0x3e	; 62
      000568                       1654 _largeenemies:
      000568 00                    1655 	.db #0x00	; 0
      000569 00                    1656 	.db #0x00	; 0
      00056A 00                    1657 	.db #0x00	; 0
      00056B 00                    1658 	.db #0x00	; 0
      00056C 00                    1659 	.db #0x00	; 0
      00056D 00                    1660 	.db #0x00	; 0
      00056E 00                    1661 	.db #0x00	; 0
      00056F 00                    1662 	.db #0x00	; 0
      000570 00                    1663 	.db #0x00	; 0
      000571 00                    1664 	.db #0x00	; 0
      000572 00                    1665 	.db #0x00	; 0
      000573 00                    1666 	.db #0x00	; 0
      000574 00                    1667 	.db #0x00	; 0
      000575 00                    1668 	.db #0x00	; 0
      000576 7F                    1669 	.db #0x7f	; 127
      000577 7F                    1670 	.db #0x7f	; 127
      000578 7F                    1671 	.db #0x7f	; 127
      000579 7F                    1672 	.db #0x7f	; 127
      00057A 00                    1673 	.db #0x00	; 0
      00057B 00                    1674 	.db #0x00	; 0
      00057C 00                    1675 	.db #0x00	; 0
      00057D 00                    1676 	.db #0x00	; 0
      00057E 00                    1677 	.db #0x00	; 0
      00057F 00                    1678 	.db #0x00	; 0
      000580 00                    1679 	.db #0x00	; 0
      000581 00                    1680 	.db #0x00	; 0
      000582 00                    1681 	.db #0x00	; 0
      000583 00                    1682 	.db #0x00	; 0
      000584 00                    1683 	.db #0x00	; 0
      000585 00                    1684 	.db #0x00	; 0
      000586 00                    1685 	.db #0x00	; 0
      000587 00                    1686 	.db #0x00	; 0
      000588 00                    1687 	.db #0x00	; 0
      000589 00                    1688 	.db #0x00	; 0
      00058A 40                    1689 	.db #0x40	; 64
      00058B 40                    1690 	.db #0x40	; 64
      00058C 60                    1691 	.db #0x60	; 96
      00058D 60                    1692 	.db #0x60	; 96
      00058E 70                    1693 	.db #0x70	; 112	'p'
      00058F 70                    1694 	.db #0x70	; 112	'p'
      000590 78                    1695 	.db #0x78	; 120	'x'
      000591 78                    1696 	.db #0x78	; 120	'x'
      000592 7C                    1697 	.db #0x7c	; 124
      000593 7C                    1698 	.db #0x7c	; 124
      000594 7E                    1699 	.db #0x7e	; 126
      000595 7E                    1700 	.db #0x7e	; 126
      000596 FF                    1701 	.db #0xff	; 255
      000597 FF                    1702 	.db #0xff	; 255
      000598 FF                    1703 	.db #0xff	; 255
      000599 FF                    1704 	.db #0xff	; 255
      00059A 7E                    1705 	.db #0x7e	; 126
      00059B 7E                    1706 	.db #0x7e	; 126
      00059C 7C                    1707 	.db #0x7c	; 124
      00059D 7C                    1708 	.db #0x7c	; 124
      00059E 78                    1709 	.db #0x78	; 120	'x'
      00059F 78                    1710 	.db #0x78	; 120	'x'
      0005A0 70                    1711 	.db #0x70	; 112	'p'
      0005A1 70                    1712 	.db #0x70	; 112	'p'
      0005A2 60                    1713 	.db #0x60	; 96
      0005A3 60                    1714 	.db #0x60	; 96
      0005A4 40                    1715 	.db #0x40	; 64
      0005A5 40                    1716 	.db #0x40	; 64
      0005A6 00                    1717 	.db #0x00	; 0
      0005A7 00                    1718 	.db #0x00	; 0
      0005A8 07                    1719 	.db #0x07	; 7
      0005A9 00                    1720 	.db #0x00	; 0
      0005AA 18                    1721 	.db #0x18	; 24
      0005AB 00                    1722 	.db #0x00	; 0
      0005AC 20                    1723 	.db #0x20	; 32
      0005AD 00                    1724 	.db #0x00	; 0
      0005AE 4C                    1725 	.db #0x4c	; 76	'L'
      0005AF 0C                    1726 	.db #0x0c	; 12
      0005B0 43                    1727 	.db #0x43	; 67	'C'
      0005B1 0F                    1728 	.db #0x0f	; 15
      0005B2 84                    1729 	.db #0x84	; 132
      0005B3 27                    1730 	.db #0x27	; 39
      0005B4 80                    1731 	.db #0x80	; 128
      0005B5 13                    1732 	.db #0x13	; 19
      0005B6 83                    1733 	.db #0x83	; 131
      0005B7 2A                    1734 	.db #0x2a	; 42
      0005B8 83                    1735 	.db #0x83	; 131
      0005B9 16                    1736 	.db #0x16	; 22
      0005BA 80                    1737 	.db #0x80	; 128
      0005BB 23                    1738 	.db #0x23	; 35
      0005BC 84                    1739 	.db #0x84	; 132
      0005BD 07                    1740 	.db #0x07	; 7
      0005BE 43                    1741 	.db #0x43	; 67	'C'
      0005BF 0F                    1742 	.db #0x0f	; 15
      0005C0 4C                    1743 	.db #0x4c	; 76	'L'
      0005C1 0C                    1744 	.db #0x0c	; 12
      0005C2 20                    1745 	.db #0x20	; 32
      0005C3 00                    1746 	.db #0x00	; 0
      0005C4 18                    1747 	.db #0x18	; 24
      0005C5 00                    1748 	.db #0x00	; 0
      0005C6 07                    1749 	.db #0x07	; 7
      0005C7 00                    1750 	.db #0x00	; 0
      0005C8 E0                    1751 	.db #0xe0	; 224
      0005C9 00                    1752 	.db #0x00	; 0
      0005CA 18                    1753 	.db #0x18	; 24
      0005CB 00                    1754 	.db #0x00	; 0
      0005CC 04                    1755 	.db #0x04	; 4
      0005CD 00                    1756 	.db #0x00	; 0
      0005CE 02                    1757 	.db #0x02	; 2
      0005CF 00                    1758 	.db #0x00	; 0
      0005D0 02                    1759 	.db #0x02	; 2
      0005D1 00                    1760 	.db #0x00	; 0
      0005D2 C1                    1761 	.db #0xc1	; 193
      0005D3 C0                    1762 	.db #0xc0	; 192
      0005D4 11                    1763 	.db #0x11	; 17
      0005D5 F0                    1764 	.db #0xf0	; 240
      0005D6 E5                    1765 	.db #0xe5	; 229
      0005D7 1C                    1766 	.db #0x1c	; 28
      0005D8 E5                    1767 	.db #0xe5	; 229
      0005D9 1C                    1768 	.db #0x1c	; 28
      0005DA 11                    1769 	.db #0x11	; 17
      0005DB F0                    1770 	.db #0xf0	; 240
      0005DC C1                    1771 	.db #0xc1	; 193
      0005DD C0                    1772 	.db #0xc0	; 192
      0005DE 02                    1773 	.db #0x02	; 2
      0005DF 00                    1774 	.db #0x00	; 0
      0005E0 02                    1775 	.db #0x02	; 2
      0005E1 00                    1776 	.db #0x00	; 0
      0005E2 04                    1777 	.db #0x04	; 4
      0005E3 00                    1778 	.db #0x00	; 0
      0005E4 18                    1779 	.db #0x18	; 24
      0005E5 00                    1780 	.db #0x00	; 0
      0005E6 E0                    1781 	.db #0xe0	; 224
      0005E7 00                    1782 	.db #0x00	; 0
      0005E8                       1783 _ProjectileTiles:
      0005E8 24                    1784 	.db #0x24	; 36
      0005E9 18                    1785 	.db #0x18	; 24
      0005EA 18                    1786 	.db #0x18	; 24
      0005EB 3C                    1787 	.db #0x3c	; 60
      0005EC 18                    1788 	.db #0x18	; 24
      0005ED 3C                    1789 	.db #0x3c	; 60
      0005EE 24                    1790 	.db #0x24	; 36
      0005EF 18                    1791 	.db #0x18	; 24
      0005F0 00                    1792 	.db #0x00	; 0
      0005F1 00                    1793 	.db #0x00	; 0
      0005F2 00                    1794 	.db #0x00	; 0
      0005F3 00                    1795 	.db #0x00	; 0
      0005F4 00                    1796 	.db #0x00	; 0
      0005F5 00                    1797 	.db #0x00	; 0
      0005F6 00                    1798 	.db #0x00	; 0
      0005F7 00                    1799 	.db #0x00	; 0
      0005F8 00                    1800 	.db #0x00	; 0
      0005F9 00                    1801 	.db #0x00	; 0
      0005FA 00                    1802 	.db #0x00	; 0
      0005FB 00                    1803 	.db #0x00	; 0
      0005FC 00                    1804 	.db #0x00	; 0
      0005FD 00                    1805 	.db #0x00	; 0
      0005FE 00                    1806 	.db #0x00	; 0
      0005FF 00                    1807 	.db #0x00	; 0
      000600 00                    1808 	.db #0x00	; 0
      000601 00                    1809 	.db #0x00	; 0
      000602 00                    1810 	.db #0x00	; 0
      000603 00                    1811 	.db #0x00	; 0
      000604 00                    1812 	.db #0x00	; 0
      000605 00                    1813 	.db #0x00	; 0
      000606 00                    1814 	.db #0x00	; 0
      000607 00                    1815 	.db #0x00	; 0
      000608 00                    1816 	.db #0x00	; 0
      000609 00                    1817 	.db #0x00	; 0
      00060A 00                    1818 	.db #0x00	; 0
      00060B 00                    1819 	.db #0x00	; 0
      00060C 09                    1820 	.db #0x09	; 9
      00060D 06                    1821 	.db #0x06	; 6
      00060E 06                    1822 	.db #0x06	; 6
      00060F 0F                    1823 	.db #0x0f	; 15
      000610 06                    1824 	.db #0x06	; 6
      000611 0F                    1825 	.db #0x0f	; 15
      000612 09                    1826 	.db #0x09	; 9
      000613 06                    1827 	.db #0x06	; 6
      000614 00                    1828 	.db #0x00	; 0
      000615 00                    1829 	.db #0x00	; 0
      000616 00                    1830 	.db #0x00	; 0
      000617 00                    1831 	.db #0x00	; 0
      000618 00                    1832 	.db #0x00	; 0
      000619 00                    1833 	.db #0x00	; 0
      00061A 00                    1834 	.db #0x00	; 0
      00061B 00                    1835 	.db #0x00	; 0
      00061C 00                    1836 	.db #0x00	; 0
      00061D 00                    1837 	.db #0x00	; 0
      00061E 00                    1838 	.db #0x00	; 0
      00061F 00                    1839 	.db #0x00	; 0
      000620 00                    1840 	.db #0x00	; 0
      000621 00                    1841 	.db #0x00	; 0
      000622 00                    1842 	.db #0x00	; 0
      000623 00                    1843 	.db #0x00	; 0
      000624 00                    1844 	.db #0x00	; 0
      000625 00                    1845 	.db #0x00	; 0
      000626 00                    1846 	.db #0x00	; 0
      000627 00                    1847 	.db #0x00	; 0
      000628 09                    1848 	.db #0x09	; 9
      000629 06                    1849 	.db #0x06	; 6
      00062A 06                    1850 	.db #0x06	; 6
      00062B 0F                    1851 	.db #0x0f	; 15
      00062C 06                    1852 	.db #0x06	; 6
      00062D 0F                    1853 	.db #0x0f	; 15
      00062E 09                    1854 	.db #0x09	; 9
      00062F 06                    1855 	.db #0x06	; 6
      000630 00                    1856 	.db #0x00	; 0
      000631 00                    1857 	.db #0x00	; 0
      000632 00                    1858 	.db #0x00	; 0
      000633 00                    1859 	.db #0x00	; 0
      000634 00                    1860 	.db #0x00	; 0
      000635 00                    1861 	.db #0x00	; 0
      000636 00                    1862 	.db #0x00	; 0
      000637 00                    1863 	.db #0x00	; 0
      000638 00                    1864 	.db #0x00	; 0
      000639 00                    1865 	.db #0x00	; 0
      00063A 00                    1866 	.db #0x00	; 0
      00063B 00                    1867 	.db #0x00	; 0
      00063C 00                    1868 	.db #0x00	; 0
      00063D 00                    1869 	.db #0x00	; 0
      00063E 00                    1870 	.db #0x00	; 0
      00063F 00                    1871 	.db #0x00	; 0
      000640 00                    1872 	.db #0x00	; 0
      000641 00                    1873 	.db #0x00	; 0
      000642 00                    1874 	.db #0x00	; 0
      000643 00                    1875 	.db #0x00	; 0
      000644 00                    1876 	.db #0x00	; 0
      000645 00                    1877 	.db #0x00	; 0
      000646 00                    1878 	.db #0x00	; 0
      000647 00                    1879 	.db #0x00	; 0
      000648 99                    1880 	.db #0x99	; 153
      000649 66                    1881 	.db #0x66	; 102	'f'
      00064A 66                    1882 	.db #0x66	; 102	'f'
      00064B FF                    1883 	.db #0xff	; 255
      00064C 66                    1884 	.db #0x66	; 102	'f'
      00064D FF                    1885 	.db #0xff	; 255
      00064E 99                    1886 	.db #0x99	; 153
      00064F 66                    1887 	.db #0x66	; 102	'f'
      000650 00                    1888 	.db #0x00	; 0
      000651 00                    1889 	.db #0x00	; 0
      000652 00                    1890 	.db #0x00	; 0
      000653 00                    1891 	.db #0x00	; 0
      000654 00                    1892 	.db #0x00	; 0
      000655 00                    1893 	.db #0x00	; 0
      000656 00                    1894 	.db #0x00	; 0
      000657 00                    1895 	.db #0x00	; 0
      000658 00                    1896 	.db #0x00	; 0
      000659 00                    1897 	.db #0x00	; 0
      00065A 00                    1898 	.db #0x00	; 0
      00065B 00                    1899 	.db #0x00	; 0
      00065C 00                    1900 	.db #0x00	; 0
      00065D 00                    1901 	.db #0x00	; 0
      00065E 00                    1902 	.db #0x00	; 0
      00065F 00                    1903 	.db #0x00	; 0
      000660 00                    1904 	.db #0x00	; 0
      000661 00                    1905 	.db #0x00	; 0
      000662 00                    1906 	.db #0x00	; 0
      000663 00                    1907 	.db #0x00	; 0
      000664 00                    1908 	.db #0x00	; 0
      000665 00                    1909 	.db #0x00	; 0
      000666 00                    1910 	.db #0x00	; 0
      000667 00                    1911 	.db #0x00	; 0
      000668 09                    1912 	.db #0x09	; 9
      000669 06                    1913 	.db #0x06	; 6
      00066A 06                    1914 	.db #0x06	; 6
      00066B 0F                    1915 	.db #0x0f	; 15
      00066C 06                    1916 	.db #0x06	; 6
      00066D 0F                    1917 	.db #0x0f	; 15
      00066E 09                    1918 	.db #0x09	; 9
      00066F 06                    1919 	.db #0x06	; 6
      000670 09                    1920 	.db #0x09	; 9
      000671 06                    1921 	.db #0x06	; 6
      000672 06                    1922 	.db #0x06	; 6
      000673 0F                    1923 	.db #0x0f	; 15
      000674 06                    1924 	.db #0x06	; 6
      000675 0F                    1925 	.db #0x0f	; 15
      000676 09                    1926 	.db #0x09	; 9
      000677 06                    1927 	.db #0x06	; 6
      000678 00                    1928 	.db #0x00	; 0
      000679 00                    1929 	.db #0x00	; 0
      00067A 00                    1930 	.db #0x00	; 0
      00067B 00                    1931 	.db #0x00	; 0
      00067C 00                    1932 	.db #0x00	; 0
      00067D 00                    1933 	.db #0x00	; 0
      00067E 00                    1934 	.db #0x00	; 0
      00067F 00                    1935 	.db #0x00	; 0
      000680 00                    1936 	.db #0x00	; 0
      000681 00                    1937 	.db #0x00	; 0
      000682 00                    1938 	.db #0x00	; 0
      000683 00                    1939 	.db #0x00	; 0
      000684 00                    1940 	.db #0x00	; 0
      000685 00                    1941 	.db #0x00	; 0
      000686 00                    1942 	.db #0x00	; 0
      000687 00                    1943 	.db #0x00	; 0
      000688 90                    1944 	.db #0x90	; 144
      000689 60                    1945 	.db #0x60	; 96
      00068A 60                    1946 	.db #0x60	; 96
      00068B F0                    1947 	.db #0xf0	; 240
      00068C 60                    1948 	.db #0x60	; 96
      00068D F0                    1949 	.db #0xf0	; 240
      00068E 90                    1950 	.db #0x90	; 144
      00068F 60                    1951 	.db #0x60	; 96
      000690 09                    1952 	.db #0x09	; 9
      000691 06                    1953 	.db #0x06	; 6
      000692 06                    1954 	.db #0x06	; 6
      000693 0F                    1955 	.db #0x0f	; 15
      000694 06                    1956 	.db #0x06	; 6
      000695 0F                    1957 	.db #0x0f	; 15
      000696 09                    1958 	.db #0x09	; 9
      000697 06                    1959 	.db #0x06	; 6
      000698 00                    1960 	.db #0x00	; 0
      000699 00                    1961 	.db #0x00	; 0
      00069A 00                    1962 	.db #0x00	; 0
      00069B 00                    1963 	.db #0x00	; 0
      00069C 00                    1964 	.db #0x00	; 0
      00069D 00                    1965 	.db #0x00	; 0
      00069E 00                    1966 	.db #0x00	; 0
      00069F 00                    1967 	.db #0x00	; 0
      0006A0 00                    1968 	.db #0x00	; 0
      0006A1 00                    1969 	.db #0x00	; 0
      0006A2 00                    1970 	.db #0x00	; 0
      0006A3 00                    1971 	.db #0x00	; 0
      0006A4 00                    1972 	.db #0x00	; 0
      0006A5 00                    1973 	.db #0x00	; 0
      0006A6 00                    1974 	.db #0x00	; 0
      0006A7 00                    1975 	.db #0x00	; 0
      0006A8 18                    1976 	.db #0x18	; 24
      0006A9 00                    1977 	.db #0x00	; 0
      0006AA 18                    1978 	.db #0x18	; 24
      0006AB 18                    1979 	.db #0x18	; 24
      0006AC 18                    1980 	.db #0x18	; 24
      0006AD 18                    1981 	.db #0x18	; 24
      0006AE 3C                    1982 	.db #0x3c	; 60
      0006AF 18                    1983 	.db #0x18	; 24
      0006B0 3C                    1984 	.db #0x3c	; 60
      0006B1 18                    1985 	.db #0x18	; 24
      0006B2 3C                    1986 	.db #0x3c	; 60
      0006B3 3C                    1987 	.db #0x3c	; 60
      0006B4 7E                    1988 	.db #0x7e	; 126
      0006B5 3C                    1989 	.db #0x3c	; 60
      0006B6 7E                    1990 	.db #0x7e	; 126
      0006B7 24                    1991 	.db #0x24	; 36
      0006B8 00                    1992 	.db #0x00	; 0
      0006B9 00                    1993 	.db #0x00	; 0
      0006BA 00                    1994 	.db #0x00	; 0
      0006BB 00                    1995 	.db #0x00	; 0
      0006BC 00                    1996 	.db #0x00	; 0
      0006BD 00                    1997 	.db #0x00	; 0
      0006BE 00                    1998 	.db #0x00	; 0
      0006BF 00                    1999 	.db #0x00	; 0
      0006C0 00                    2000 	.db #0x00	; 0
      0006C1 00                    2001 	.db #0x00	; 0
      0006C2 00                    2002 	.db #0x00	; 0
      0006C3 00                    2003 	.db #0x00	; 0
      0006C4 00                    2004 	.db #0x00	; 0
      0006C5 00                    2005 	.db #0x00	; 0
      0006C6 00                    2006 	.db #0x00	; 0
      0006C7 00                    2007 	.db #0x00	; 0
      0006C8 C0                    2008 	.db #0xc0	; 192
      0006C9 00                    2009 	.db #0x00	; 0
      0006CA F8                    2010 	.db #0xf8	; 248
      0006CB E0                    2011 	.db #0xe0	; 224
      0006CC FF                    2012 	.db #0xff	; 255
      0006CD 7E                    2013 	.db #0x7e	; 126
      0006CE FF                    2014 	.db #0xff	; 255
      0006CF 7E                    2015 	.db #0x7e	; 126
      0006D0 F8                    2016 	.db #0xf8	; 248
      0006D1 E0                    2017 	.db #0xe0	; 224
      0006D2 C0                    2018 	.db #0xc0	; 192
      0006D3 00                    2019 	.db #0x00	; 0
      0006D4 00                    2020 	.db #0x00	; 0
      0006D5 00                    2021 	.db #0x00	; 0
      0006D6 00                    2022 	.db #0x00	; 0
      0006D7 00                    2023 	.db #0x00	; 0
      0006D8 00                    2024 	.db #0x00	; 0
      0006D9 00                    2025 	.db #0x00	; 0
      0006DA 00                    2026 	.db #0x00	; 0
      0006DB 00                    2027 	.db #0x00	; 0
      0006DC 00                    2028 	.db #0x00	; 0
      0006DD 00                    2029 	.db #0x00	; 0
      0006DE 00                    2030 	.db #0x00	; 0
      0006DF 00                    2031 	.db #0x00	; 0
      0006E0 00                    2032 	.db #0x00	; 0
      0006E1 00                    2033 	.db #0x00	; 0
      0006E2 00                    2034 	.db #0x00	; 0
      0006E3 00                    2035 	.db #0x00	; 0
      0006E4 00                    2036 	.db #0x00	; 0
      0006E5 00                    2037 	.db #0x00	; 0
      0006E6 00                    2038 	.db #0x00	; 0
      0006E7 00                    2039 	.db #0x00	; 0
      0006E8 06                    2040 	.db #0x06	; 6
      0006E9 00                    2041 	.db #0x00	; 0
      0006EA 0F                    2042 	.db #0x0f	; 15
      0006EB 06                    2043 	.db #0x06	; 6
      0006EC 1F                    2044 	.db #0x1f	; 31
      0006ED 0E                    2045 	.db #0x0e	; 14
      0006EE 7E                    2046 	.db #0x7e	; 126
      0006EF 1C                    2047 	.db #0x1c	; 28
      0006F0 FC                    2048 	.db #0xfc	; 252
      0006F1 78                    2049 	.db #0x78	; 120	'x'
      0006F2 F8                    2050 	.db #0xf8	; 248
      0006F3 F0                    2051 	.db #0xf0	; 240
      0006F4 F8                    2052 	.db #0xf8	; 248
      0006F5 70                    2053 	.db #0x70	; 112	'p'
      0006F6 70                    2054 	.db #0x70	; 112	'p'
      0006F7 20                    2055 	.db #0x20	; 32
      0006F8 00                    2056 	.db #0x00	; 0
      0006F9 00                    2057 	.db #0x00	; 0
      0006FA 00                    2058 	.db #0x00	; 0
      0006FB 00                    2059 	.db #0x00	; 0
      0006FC 00                    2060 	.db #0x00	; 0
      0006FD 00                    2061 	.db #0x00	; 0
      0006FE 00                    2062 	.db #0x00	; 0
      0006FF 00                    2063 	.db #0x00	; 0
      000700 00                    2064 	.db #0x00	; 0
      000701 00                    2065 	.db #0x00	; 0
      000702 00                    2066 	.db #0x00	; 0
      000703 00                    2067 	.db #0x00	; 0
      000704 00                    2068 	.db #0x00	; 0
      000705 00                    2069 	.db #0x00	; 0
      000706 00                    2070 	.db #0x00	; 0
      000707 00                    2071 	.db #0x00	; 0
      000708                       2072 _upgrade:
      000708 01                    2073 	.db #0x01	; 1
      000709 00 00                 2074 	.dw #0x0000
      00070B 00 00                 2075 	.dw #0x0000
      00070D 00                    2076 	.db #0x00	; 0
      00070E 00                    2077 	.db #0x00	; 0
      00070F 00                    2078 	.db #0x00	; 0
      000710 70                    2079 	.db #0x70	; 112	'p'
      000711                       2080 _ammo:
      000711 01                    2081 	.db #0x01	; 1
      000712 00 00                 2082 	.dw #0x0000
      000714 00 00                 2083 	.dw #0x0000
      000716 00                    2084 	.db #0x00	; 0
      000717 01                    2085 	.db #0x01	; 1
      000718 05                    2086 	.db #0x05	; 5
      000719 72                    2087 	.db #0x72	; 114	'r'
      00071A                       2088 _health:
      00071A 01                    2089 	.db #0x01	; 1
      00071B 00 00                 2090 	.dw #0x0000
      00071D 00 00                 2091 	.dw #0x0000
      00071F 00                    2092 	.db #0x00	; 0
      000720 02                    2093 	.db #0x02	; 2
      000721 32                    2094 	.db #0x32	; 50	'2'
      000722 74                    2095 	.db #0x74	; 116	't'
      000723                       2096 _Pickups:
      000723 7E                    2097 	.db #0x7e	; 126
      000724 00                    2098 	.db #0x00	; 0
      000725 81                    2099 	.db #0x81	; 129
      000726 00                    2100 	.db #0x00	; 0
      000727 D7                    2101 	.db #0xd7	; 215
      000728 56                    2102 	.db #0x56	; 86	'V'
      000729 D7                    2103 	.db #0xd7	; 215
      00072A 56                    2104 	.db #0x56	; 86	'V'
      00072B D5                    2105 	.db #0xd5	; 213
      00072C 54                    2106 	.db #0x54	; 84	'T'
      00072D F5                    2107 	.db #0xf5	; 245
      00072E 74                    2108 	.db #0x74	; 116	't'
      00072F 81                    2109 	.db #0x81	; 129
      000730 00                    2110 	.db #0x00	; 0
      000731 7E                    2111 	.db #0x7e	; 126
      000732 00                    2112 	.db #0x00	; 0
      000733 00                    2113 	.db #0x00	; 0
      000734 00                    2114 	.db #0x00	; 0
      000735 00                    2115 	.db #0x00	; 0
      000736 00                    2116 	.db #0x00	; 0
      000737 00                    2117 	.db #0x00	; 0
      000738 00                    2118 	.db #0x00	; 0
      000739 00                    2119 	.db #0x00	; 0
      00073A 00                    2120 	.db #0x00	; 0
      00073B 00                    2121 	.db #0x00	; 0
      00073C 00                    2122 	.db #0x00	; 0
      00073D 00                    2123 	.db #0x00	; 0
      00073E 00                    2124 	.db #0x00	; 0
      00073F 00                    2125 	.db #0x00	; 0
      000740 00                    2126 	.db #0x00	; 0
      000741 00                    2127 	.db #0x00	; 0
      000742 00                    2128 	.db #0x00	; 0
      000743 7E                    2129 	.db #0x7e	; 126
      000744 00                    2130 	.db #0x00	; 0
      000745 8F                    2131 	.db #0x8f	; 143
      000746 06                    2132 	.db #0x06	; 6
      000747 9F                    2133 	.db #0x9f	; 159
      000748 0E                    2134 	.db #0x0e	; 14
      000749 FF                    2135 	.db #0xff	; 255
      00074A 1C                    2136 	.db #0x1c	; 28
      00074B FD                    2137 	.db #0xfd	; 253
      00074C 78                    2138 	.db #0x78	; 120	'x'
      00074D F9                    2139 	.db #0xf9	; 249
      00074E 70                    2140 	.db #0x70	; 112	'p'
      00074F F9                    2141 	.db #0xf9	; 249
      000750 70                    2142 	.db #0x70	; 112	'p'
      000751 7E                    2143 	.db #0x7e	; 126
      000752 00                    2144 	.db #0x00	; 0
      000753 00                    2145 	.db #0x00	; 0
      000754 00                    2146 	.db #0x00	; 0
      000755 00                    2147 	.db #0x00	; 0
      000756 00                    2148 	.db #0x00	; 0
      000757 00                    2149 	.db #0x00	; 0
      000758 00                    2150 	.db #0x00	; 0
      000759 00                    2151 	.db #0x00	; 0
      00075A 00                    2152 	.db #0x00	; 0
      00075B 00                    2153 	.db #0x00	; 0
      00075C 00                    2154 	.db #0x00	; 0
      00075D 00                    2155 	.db #0x00	; 0
      00075E 00                    2156 	.db #0x00	; 0
      00075F 00                    2157 	.db #0x00	; 0
      000760 00                    2158 	.db #0x00	; 0
      000761 00                    2159 	.db #0x00	; 0
      000762 00                    2160 	.db #0x00	; 0
      000763 7E                    2161 	.db #0x7e	; 126
      000764 00                    2162 	.db #0x00	; 0
      000765 99                    2163 	.db #0x99	; 153
      000766 18                    2164 	.db #0x18	; 24
      000767 99                    2165 	.db #0x99	; 153
      000768 18                    2166 	.db #0x18	; 24
      000769 FF                    2167 	.db #0xff	; 255
      00076A 7E                    2168 	.db #0x7e	; 126
      00076B FF                    2169 	.db #0xff	; 255
      00076C 7E                    2170 	.db #0x7e	; 126
      00076D 99                    2171 	.db #0x99	; 153
      00076E 18                    2172 	.db #0x18	; 24
      00076F 99                    2173 	.db #0x99	; 153
      000770 18                    2174 	.db #0x18	; 24
      000771 7E                    2175 	.db #0x7e	; 126
      000772 00                    2176 	.db #0x00	; 0
      000773 00                    2177 	.db #0x00	; 0
      000774 00                    2178 	.db #0x00	; 0
      000775 00                    2179 	.db #0x00	; 0
      000776 00                    2180 	.db #0x00	; 0
      000777 00                    2181 	.db #0x00	; 0
      000778 00                    2182 	.db #0x00	; 0
      000779 00                    2183 	.db #0x00	; 0
      00077A 00                    2184 	.db #0x00	; 0
      00077B 00                    2185 	.db #0x00	; 0
      00077C 00                    2186 	.db #0x00	; 0
      00077D 00                    2187 	.db #0x00	; 0
      00077E 00                    2188 	.db #0x00	; 0
      00077F 00                    2189 	.db #0x00	; 0
      000780 00                    2190 	.db #0x00	; 0
      000781 00                    2191 	.db #0x00	; 0
      000782 00                    2192 	.db #0x00	; 0
      000783                       2193 _Player1:
      000783 08                    2194 	.db #0x08	; 8
      000784 08                    2195 	.db #0x08	; 8
      000785 1C                    2196 	.db #0x1c	; 28
      000786 14                    2197 	.db #0x14	; 20
      000787 38                    2198 	.db #0x38	; 56	'8'
      000788 28                    2199 	.db #0x28	; 40
      000789 68                    2200 	.db #0x68	; 104	'h'
      00078A 58                    2201 	.db #0x58	; 88	'X'
      00078B 50                    2202 	.db #0x50	; 80	'P'
      00078C 71                    2203 	.db #0x71	; 113	'q'
      00078D D0                    2204 	.db #0xd0	; 208
      00078E B2                    2205 	.db #0xb2	; 178
      00078F D5                    2206 	.db #0xd5	; 213
      000790 B6                    2207 	.db #0xb6	; 182
      000791 D5                    2208 	.db #0xd5	; 213
      000792 B6                    2209 	.db #0xb6	; 182
      000793 D5                    2210 	.db #0xd5	; 213
      000794 B6                    2211 	.db #0xb6	; 182
      000795 CD                    2212 	.db #0xcd	; 205
      000796 BE                    2213 	.db #0xbe	; 190
      000797 C5                    2214 	.db #0xc5	; 197
      000798 BE                    2215 	.db #0xbe	; 190
      000799 65                    2216 	.db #0x65	; 101	'e'
      00079A 5E                    2217 	.db #0x5e	; 94
      00079B 3E                    2218 	.db #0x3e	; 62
      00079C 2F                    2219 	.db #0x2f	; 47
      00079D 13                    2220 	.db #0x13	; 19
      00079E 13                    2221 	.db #0x13	; 19
      00079F 06                    2222 	.db #0x06	; 6
      0007A0 07                    2223 	.db #0x07	; 7
      0007A1 07                    2224 	.db #0x07	; 7
      0007A2 05                    2225 	.db #0x05	; 5
      0007A3 10                    2226 	.db #0x10	; 16
      0007A4 10                    2227 	.db #0x10	; 16
      0007A5 38                    2228 	.db #0x38	; 56	'8'
      0007A6 28                    2229 	.db #0x28	; 40
      0007A7 1C                    2230 	.db #0x1c	; 28
      0007A8 14                    2231 	.db #0x14	; 20
      0007A9 16                    2232 	.db #0x16	; 22
      0007AA 1A                    2233 	.db #0x1a	; 26
      0007AB 0A                    2234 	.db #0x0a	; 10
      0007AC 8E                    2235 	.db #0x8e	; 142
      0007AD 0B                    2236 	.db #0x0b	; 11
      0007AE 4D                    2237 	.db #0x4d	; 77	'M'
      0007AF AB                    2238 	.db #0xab	; 171
      0007B0 6D                    2239 	.db #0x6d	; 109	'm'
      0007B1 AB                    2240 	.db #0xab	; 171
      0007B2 6D                    2241 	.db #0x6d	; 109	'm'
      0007B3 AB                    2242 	.db #0xab	; 171
      0007B4 6D                    2243 	.db #0x6d	; 109	'm'
      0007B5 B3                    2244 	.db #0xb3	; 179
      0007B6 7D                    2245 	.db #0x7d	; 125
      0007B7 A3                    2246 	.db #0xa3	; 163
      0007B8 7D                    2247 	.db #0x7d	; 125
      0007B9 A6                    2248 	.db #0xa6	; 166
      0007BA 7A                    2249 	.db #0x7a	; 122	'z'
      0007BB 7C                    2250 	.db #0x7c	; 124
      0007BC F4                    2251 	.db #0xf4	; 244
      0007BD C8                    2252 	.db #0xc8	; 200
      0007BE C8                    2253 	.db #0xc8	; 200
      0007BF 60                    2254 	.db #0x60	; 96
      0007C0 E0                    2255 	.db #0xe0	; 224
      0007C1 E0                    2256 	.db #0xe0	; 224
      0007C2 A0                    2257 	.db #0xa0	; 160
      0007C3 07                    2258 	.db #0x07	; 7
      0007C4 07                    2259 	.db #0x07	; 7
      0007C5 0F                    2260 	.db #0x0f	; 15
      0007C6 08                    2261 	.db #0x08	; 8
      0007C7 18                    2262 	.db #0x18	; 24
      0007C8 17                    2263 	.db #0x17	; 23
      0007C9 31                    2264 	.db #0x31	; 49	'1'
      0007CA 2F                    2265 	.db #0x2f	; 47
      0007CB 12                    2266 	.db #0x12	; 18
      0007CC 1E                    2267 	.db #0x1e	; 30
      0007CD DF                    2268 	.db #0xdf	; 223
      0007CE DF                    2269 	.db #0xdf	; 223
      0007CF F0                    2270 	.db #0xf0	; 240
      0007D0 7F                    2271 	.db #0x7f	; 127
      0007D1 AF                    2272 	.db #0xaf	; 175
      0007D2 F0                    2273 	.db #0xf0	; 240
      0007D3 AF                    2274 	.db #0xaf	; 175
      0007D4 F0                    2275 	.db #0xf0	; 240
      0007D5 F0                    2276 	.db #0xf0	; 240
      0007D6 7F                    2277 	.db #0x7f	; 127
      0007D7 DF                    2278 	.db #0xdf	; 223
      0007D8 DF                    2279 	.db #0xdf	; 223
      0007D9 12                    2280 	.db #0x12	; 18
      0007DA 1E                    2281 	.db #0x1e	; 30
      0007DB 31                    2282 	.db #0x31	; 49	'1'
      0007DC 2F                    2283 	.db #0x2f	; 47
      0007DD 18                    2284 	.db #0x18	; 24
      0007DE 17                    2285 	.db #0x17	; 23
      0007DF 0F                    2286 	.db #0x0f	; 15
      0007E0 08                    2287 	.db #0x08	; 8
      0007E1 07                    2288 	.db #0x07	; 7
      0007E2 07                    2289 	.db #0x07	; 7
      0007E3 E0                    2290 	.db #0xe0	; 224
      0007E4 E0                    2291 	.db #0xe0	; 224
      0007E5 F8                    2292 	.db #0xf8	; 248
      0007E6 18                    2293 	.db #0x18	; 24
      0007E7 0C                    2294 	.db #0x0c	; 12
      0007E8 F4                    2295 	.db #0xf4	; 244
      0007E9 F6                    2296 	.db #0xf6	; 246
      0007EA FA                    2297 	.db #0xfa	; 250
      0007EB 0F                    2298 	.db #0x0f	; 15
      0007EC 0D                    2299 	.db #0x0d	; 13
      0007ED C2                    2300 	.db #0xc2	; 194
      0007EE C2                    2301 	.db #0xc2	; 194
      0007EF 00                    2302 	.db #0x00	; 0
      0007F0 E0                    2303 	.db #0xe0	; 224
      0007F1 C0                    2304 	.db #0xc0	; 192
      0007F2 10                    2305 	.db #0x10	; 16
      0007F3 C0                    2306 	.db #0xc0	; 192
      0007F4 10                    2307 	.db #0x10	; 16
      0007F5 00                    2308 	.db #0x00	; 0
      0007F6 E0                    2309 	.db #0xe0	; 224
      0007F7 C2                    2310 	.db #0xc2	; 194
      0007F8 C2                    2311 	.db #0xc2	; 194
      0007F9 0F                    2312 	.db #0x0f	; 15
      0007FA 0D                    2313 	.db #0x0d	; 13
      0007FB F6                    2314 	.db #0xf6	; 246
      0007FC FA                    2315 	.db #0xfa	; 250
      0007FD 0C                    2316 	.db #0x0c	; 12
      0007FE F4                    2317 	.db #0xf4	; 244
      0007FF F8                    2318 	.db #0xf8	; 248
      000800 18                    2319 	.db #0x18	; 24
      000801 E0                    2320 	.db #0xe0	; 224
      000802 E0                    2321 	.db #0xe0	; 224
      000803 07                    2322 	.db #0x07	; 7
      000804 07                    2323 	.db #0x07	; 7
      000805 1B                    2324 	.db #0x1b	; 27
      000806 1C                    2325 	.db #0x1c	; 28
      000807 38                    2326 	.db #0x38	; 56	'8'
      000808 27                    2327 	.db #0x27	; 39
      000809 60                    2328 	.db #0x60	; 96
      00080A 5E                    2329 	.db #0x5e	; 94
      00080B 60                    2330 	.db #0x60	; 96
      00080C 5C                    2331 	.db #0x5c	; 92
      00080D 41                    2332 	.db #0x41	; 65	'A'
      00080E 79                    2333 	.db #0x79	; 121	'y'
      00080F C4                    2334 	.db #0xc4	; 196
      000810 B7                    2335 	.db #0xb7	; 183
      000811 99                    2336 	.db #0x99	; 153
      000812 FE                    2337 	.db #0xfe	; 254
      000813 B3                    2338 	.db #0xb3	; 179
      000814 EC                    2339 	.db #0xec	; 236
      000815 67                    2340 	.db #0x67	; 103	'g'
      000816 58                    2341 	.db #0x58	; 88	'X'
      000817 2E                    2342 	.db #0x2e	; 46
      000818 31                    2343 	.db #0x31	; 49	'1'
      000819 5C                    2344 	.db #0x5c	; 92
      00081A 73                    2345 	.db #0x73	; 115	's'
      00081B 69                    2346 	.db #0x69	; 105	'i'
      00081C 5E                    2347 	.db #0x5e	; 94
      00081D 37                    2348 	.db #0x37	; 55	'7'
      00081E 2D                    2349 	.db #0x2d	; 45
      00081F 1A                    2350 	.db #0x1a	; 26
      000820 1B                    2351 	.db #0x1b	; 27
      000821 01                    2352 	.db #0x01	; 1
      000822 01                    2353 	.db #0x01	; 1
      000823 E0                    2354 	.db #0xe0	; 224
      000824 E0                    2355 	.db #0xe0	; 224
      000825 90                    2356 	.db #0x90	; 144
      000826 70                    2357 	.db #0x70	; 112	'p'
      000827 C0                    2358 	.db #0xc0	; 192
      000828 C0                    2359 	.db #0xc0	; 192
      000829 00                    2360 	.db #0x00	; 0
      00082A 00                    2361 	.db #0x00	; 0
      00082B 02                    2362 	.db #0x02	; 2
      00082C 02                    2363 	.db #0x02	; 2
      00082D C1                    2364 	.db #0xc1	; 193
      00082E C3                    2365 	.db #0xc3	; 195
      00082F 65                    2366 	.db #0x65	; 101	'e'
      000830 A7                    2367 	.db #0xa7	; 167
      000831 A7                    2368 	.db #0xa7	; 167
      000832 65                    2369 	.db #0x65	; 101	'e'
      000833 A3                    2370 	.db #0xa3	; 163
      000834 65                    2371 	.db #0x65	; 101	'e'
      000835 03                    2372 	.db #0x03	; 3
      000836 CD                    2373 	.db #0xcd	; 205
      000837 41                    2374 	.db #0x41	; 65	'A'
      000838 DF                    2375 	.db #0xdf	; 223
      000839 86                    2376 	.db #0x86	; 134
      00083A BA                    2377 	.db #0xba	; 186
      00083B 86                    2378 	.db #0x86	; 134
      00083C FA                    2379 	.db #0xfa	; 250
      00083D 1C                    2380 	.db #0x1c	; 28
      00083E E4                    2381 	.db #0xe4	; 228
      00083F 78                    2382 	.db #0x78	; 120	'x'
      000840 B8                    2383 	.db #0xb8	; 184
      000841 C0                    2384 	.db #0xc0	; 192
      000842 C0                    2385 	.db #0xc0	; 192
      000843 00                    2386 	.db #0x00	; 0
      000844 00                    2387 	.db #0x00	; 0
      000845 00                    2388 	.db #0x00	; 0
      000846 00                    2389 	.db #0x00	; 0
      000847 00                    2390 	.db #0x00	; 0
      000848 00                    2391 	.db #0x00	; 0
      000849 00                    2392 	.db #0x00	; 0
      00084A 00                    2393 	.db #0x00	; 0
      00084B 00                    2394 	.db #0x00	; 0
      00084C 00                    2395 	.db #0x00	; 0
      00084D 00                    2396 	.db #0x00	; 0
      00084E 00                    2397 	.db #0x00	; 0
      00084F 00                    2398 	.db #0x00	; 0
      000850 00                    2399 	.db #0x00	; 0
      000851 00                    2400 	.db #0x00	; 0
      000852 00                    2401 	.db #0x00	; 0
      000853 00                    2402 	.db #0x00	; 0
      000854 00                    2403 	.db #0x00	; 0
      000855 00                    2404 	.db #0x00	; 0
      000856 00                    2405 	.db #0x00	; 0
      000857 00                    2406 	.db #0x00	; 0
      000858 00                    2407 	.db #0x00	; 0
      000859 00                    2408 	.db #0x00	; 0
      00085A 00                    2409 	.db #0x00	; 0
      00085B 00                    2410 	.db #0x00	; 0
      00085C 00                    2411 	.db #0x00	; 0
      00085D 00                    2412 	.db #0x00	; 0
      00085E 00                    2413 	.db #0x00	; 0
      00085F 00                    2414 	.db #0x00	; 0
      000860 00                    2415 	.db #0x00	; 0
      000861 00                    2416 	.db #0x00	; 0
      000862 00                    2417 	.db #0x00	; 0
      000863 00                    2418 	.db #0x00	; 0
      000864 00                    2419 	.db #0x00	; 0
      000865 00                    2420 	.db #0x00	; 0
      000866 00                    2421 	.db #0x00	; 0
      000867 00                    2422 	.db #0x00	; 0
      000868 00                    2423 	.db #0x00	; 0
      000869 00                    2424 	.db #0x00	; 0
      00086A 00                    2425 	.db #0x00	; 0
      00086B 00                    2426 	.db #0x00	; 0
      00086C 00                    2427 	.db #0x00	; 0
      00086D 00                    2428 	.db #0x00	; 0
      00086E 00                    2429 	.db #0x00	; 0
      00086F 00                    2430 	.db #0x00	; 0
      000870 00                    2431 	.db #0x00	; 0
      000871 00                    2432 	.db #0x00	; 0
      000872 00                    2433 	.db #0x00	; 0
      000873 00                    2434 	.db #0x00	; 0
      000874 00                    2435 	.db #0x00	; 0
      000875 00                    2436 	.db #0x00	; 0
      000876 00                    2437 	.db #0x00	; 0
      000877 00                    2438 	.db #0x00	; 0
      000878 00                    2439 	.db #0x00	; 0
      000879 00                    2440 	.db #0x00	; 0
      00087A 00                    2441 	.db #0x00	; 0
      00087B 00                    2442 	.db #0x00	; 0
      00087C 00                    2443 	.db #0x00	; 0
      00087D 00                    2444 	.db #0x00	; 0
      00087E 00                    2445 	.db #0x00	; 0
      00087F 00                    2446 	.db #0x00	; 0
      000880 00                    2447 	.db #0x00	; 0
      000881 00                    2448 	.db #0x00	; 0
      000882 00                    2449 	.db #0x00	; 0
      000883                       2450 _ex:
      000883 00                    2451 	.db #0x00	; 0
      000884 00                    2452 	.db #0x00	; 0
      000885 00                    2453 	.db #0x00	; 0
      000886 00                    2454 	.db #0x00	; 0
      000887 00                    2455 	.db #0x00	; 0
      000888 00                    2456 	.db #0x00	; 0
      000889                       2457 _Ex1:
      000889 00                    2458 	.db #0x00	; 0
      00088A 00                    2459 	.db #0x00	; 0
      00088B 00                    2460 	.db #0x00	; 0
      00088C 00                    2461 	.db #0x00	; 0
      00088D 00                    2462 	.db #0x00	; 0
      00088E 00                    2463 	.db #0x00	; 0
      00088F 00                    2464 	.db #0x00	; 0
      000890 00                    2465 	.db #0x00	; 0
      000891 00                    2466 	.db #0x00	; 0
      000892 00                    2467 	.db #0x00	; 0
      000893 04                    2468 	.db #0x04	; 4
      000894 04                    2469 	.db #0x04	; 4
      000895 06                    2470 	.db #0x06	; 6
      000896 06                    2471 	.db #0x06	; 6
      000897 06                    2472 	.db #0x06	; 6
      000898 06                    2473 	.db #0x06	; 6
      000899 00                    2474 	.db #0x00	; 0
      00089A 00                    2475 	.db #0x00	; 0
      00089B 00                    2476 	.db #0x00	; 0
      00089C 00                    2477 	.db #0x00	; 0
      00089D 03                    2478 	.db #0x03	; 3
      00089E 03                    2479 	.db #0x03	; 3
      00089F 07                    2480 	.db #0x07	; 7
      0008A0 07                    2481 	.db #0x07	; 7
      0008A1 02                    2482 	.db #0x02	; 2
      0008A2 02                    2483 	.db #0x02	; 2
      0008A3 00                    2484 	.db #0x00	; 0
      0008A4 00                    2485 	.db #0x00	; 0
      0008A5 00                    2486 	.db #0x00	; 0
      0008A6 00                    2487 	.db #0x00	; 0
      0008A7 00                    2488 	.db #0x00	; 0
      0008A8 00                    2489 	.db #0x00	; 0
      0008A9 00                    2490 	.db #0x00	; 0
      0008AA 00                    2491 	.db #0x00	; 0
      0008AB 00                    2492 	.db #0x00	; 0
      0008AC 00                    2493 	.db #0x00	; 0
      0008AD 00                    2494 	.db #0x00	; 0
      0008AE 00                    2495 	.db #0x00	; 0
      0008AF 00                    2496 	.db #0x00	; 0
      0008B0 00                    2497 	.db #0x00	; 0
      0008B1 00                    2498 	.db #0x00	; 0
      0008B2 00                    2499 	.db #0x00	; 0
      0008B3 00                    2500 	.db #0x00	; 0
      0008B4 00                    2501 	.db #0x00	; 0
      0008B5 00                    2502 	.db #0x00	; 0
      0008B6 00                    2503 	.db #0x00	; 0
      0008B7 38                    2504 	.db #0x38	; 56	'8'
      0008B8 38                    2505 	.db #0x38	; 56	'8'
      0008B9 38                    2506 	.db #0x38	; 56	'8'
      0008BA 38                    2507 	.db #0x38	; 56	'8'
      0008BB 30                    2508 	.db #0x30	; 48	'0'
      0008BC 30                    2509 	.db #0x30	; 48	'0'
      0008BD 00                    2510 	.db #0x00	; 0
      0008BE 00                    2511 	.db #0x00	; 0
      0008BF 00                    2512 	.db #0x00	; 0
      0008C0 00                    2513 	.db #0x00	; 0
      0008C1 00                    2514 	.db #0x00	; 0
      0008C2 00                    2515 	.db #0x00	; 0
      0008C3 00                    2516 	.db #0x00	; 0
      0008C4 00                    2517 	.db #0x00	; 0
      0008C5 00                    2518 	.db #0x00	; 0
      0008C6 00                    2519 	.db #0x00	; 0
      0008C7 00                    2520 	.db #0x00	; 0
      0008C8 00                    2521 	.db #0x00	; 0
      0008C9 00                    2522 	.db #0x00	; 0
      0008CA 00                    2523 	.db #0x00	; 0
      0008CB 00                    2524 	.db #0x00	; 0
      0008CC 00                    2525 	.db #0x00	; 0
      0008CD 00                    2526 	.db #0x00	; 0
      0008CE 00                    2527 	.db #0x00	; 0
      0008CF 18                    2528 	.db #0x18	; 24
      0008D0 18                    2529 	.db #0x18	; 24
      0008D1 3E                    2530 	.db #0x3e	; 62
      0008D2 3E                    2531 	.db #0x3e	; 62
      0008D3 3E                    2532 	.db #0x3e	; 62
      0008D4 3E                    2533 	.db #0x3e	; 62
      0008D5 1C                    2534 	.db #0x1c	; 28
      0008D6 1C                    2535 	.db #0x1c	; 28
      0008D7 08                    2536 	.db #0x08	; 8
      0008D8 08                    2537 	.db #0x08	; 8
      0008D9 00                    2538 	.db #0x00	; 0
      0008DA 00                    2539 	.db #0x00	; 0
      0008DB 00                    2540 	.db #0x00	; 0
      0008DC 00                    2541 	.db #0x00	; 0
      0008DD 07                    2542 	.db #0x07	; 7
      0008DE 07                    2543 	.db #0x07	; 7
      0008DF 07                    2544 	.db #0x07	; 7
      0008E0 07                    2545 	.db #0x07	; 7
      0008E1 07                    2546 	.db #0x07	; 7
      0008E2 07                    2547 	.db #0x07	; 7
      0008E3 03                    2548 	.db #0x03	; 3
      0008E4 03                    2549 	.db #0x03	; 3
      0008E5 03                    2550 	.db #0x03	; 3
      0008E6 03                    2551 	.db #0x03	; 3
      0008E7 00                    2552 	.db #0x00	; 0
      0008E8 00                    2553 	.db #0x00	; 0
      0008E9 00                    2554 	.db #0x00	; 0
      0008EA 00                    2555 	.db #0x00	; 0
      0008EB 00                    2556 	.db #0x00	; 0
      0008EC 00                    2557 	.db #0x00	; 0
      0008ED 04                    2558 	.db #0x04	; 4
      0008EE 04                    2559 	.db #0x04	; 4
      0008EF 1E                    2560 	.db #0x1e	; 30
      0008F0 1E                    2561 	.db #0x1e	; 30
      0008F1 3E                    2562 	.db #0x3e	; 62
      0008F2 3E                    2563 	.db #0x3e	; 62
      0008F3 3E                    2564 	.db #0x3e	; 62
      0008F4 3E                    2565 	.db #0x3e	; 62
      0008F5 1E                    2566 	.db #0x1e	; 30
      0008F6 1E                    2567 	.db #0x1e	; 30
      0008F7 0C                    2568 	.db #0x0c	; 12
      0008F8 0C                    2569 	.db #0x0c	; 12
      0008F9 00                    2570 	.db #0x00	; 0
      0008FA 00                    2571 	.db #0x00	; 0
      0008FB 00                    2572 	.db #0x00	; 0
      0008FC 00                    2573 	.db #0x00	; 0
      0008FD 00                    2574 	.db #0x00	; 0
      0008FE 00                    2575 	.db #0x00	; 0
      0008FF 80                    2576 	.db #0x80	; 128
      000900 80                    2577 	.db #0x80	; 128
      000901 C0                    2578 	.db #0xc0	; 192
      000902 C0                    2579 	.db #0xc0	; 192
      000903 80                    2580 	.db #0x80	; 128
      000904 80                    2581 	.db #0x80	; 128
      000905 00                    2582 	.db #0x00	; 0
      000906 00                    2583 	.db #0x00	; 0
      000907 00                    2584 	.db #0x00	; 0
      000908 00                    2585 	.db #0x00	; 0
      000909 00                    2586 	.db #0x00	; 0
      00090A 00                    2587 	.db #0x00	; 0
      00090B 20                    2588 	.db #0x20	; 32
      00090C 20                    2589 	.db #0x20	; 32
      00090D 70                    2590 	.db #0x70	; 112	'p'
      00090E 70                    2591 	.db #0x70	; 112	'p'
      00090F 70                    2592 	.db #0x70	; 112	'p'
      000910 70                    2593 	.db #0x70	; 112	'p'
      000911 60                    2594 	.db #0x60	; 96
      000912 60                    2595 	.db #0x60	; 96
      000913 00                    2596 	.db #0x00	; 0
      000914 00                    2597 	.db #0x00	; 0
      000915 00                    2598 	.db #0x00	; 0
      000916 00                    2599 	.db #0x00	; 0
      000917 00                    2600 	.db #0x00	; 0
      000918 00                    2601 	.db #0x00	; 0
      000919 00                    2602 	.db #0x00	; 0
      00091A 00                    2603 	.db #0x00	; 0
      00091B 00                    2604 	.db #0x00	; 0
      00091C 00                    2605 	.db #0x00	; 0
      00091D 00                    2606 	.db #0x00	; 0
      00091E 00                    2607 	.db #0x00	; 0
      00091F 00                    2608 	.db #0x00	; 0
      000920 00                    2609 	.db #0x00	; 0
      000921 00                    2610 	.db #0x00	; 0
      000922 00                    2611 	.db #0x00	; 0
      000923 07                    2612 	.db #0x07	; 7
      000924 07                    2613 	.db #0x07	; 7
      000925 07                    2614 	.db #0x07	; 7
      000926 07                    2615 	.db #0x07	; 7
      000927 06                    2616 	.db #0x06	; 6
      000928 06                    2617 	.db #0x06	; 6
      000929 00                    2618 	.db #0x00	; 0
      00092A 00                    2619 	.db #0x00	; 0
      00092B 04                    2620 	.db #0x04	; 4
      00092C 04                    2621 	.db #0x04	; 4
      00092D 0E                    2622 	.db #0x0e	; 14
      00092E 0E                    2623 	.db #0x0e	; 14
      00092F 0E                    2624 	.db #0x0e	; 14
      000930 0E                    2625 	.db #0x0e	; 14
      000931 00                    2626 	.db #0x00	; 0
      000932 00                    2627 	.db #0x00	; 0
      000933 00                    2628 	.db #0x00	; 0
      000934 00                    2629 	.db #0x00	; 0
      000935 00                    2630 	.db #0x00	; 0
      000936 00                    2631 	.db #0x00	; 0
      000937 00                    2632 	.db #0x00	; 0
      000938 00                    2633 	.db #0x00	; 0
      000939 00                    2634 	.db #0x00	; 0
      00093A 00                    2635 	.db #0x00	; 0
      00093B 00                    2636 	.db #0x00	; 0
      00093C 00                    2637 	.db #0x00	; 0
      00093D 00                    2638 	.db #0x00	; 0
      00093E 00                    2639 	.db #0x00	; 0
      00093F 00                    2640 	.db #0x00	; 0
      000940 00                    2641 	.db #0x00	; 0
      000941 00                    2642 	.db #0x00	; 0
      000942 00                    2643 	.db #0x00	; 0
      000943 00                    2644 	.db #0x00	; 0
      000944 00                    2645 	.db #0x00	; 0
      000945 00                    2646 	.db #0x00	; 0
      000946 00                    2647 	.db #0x00	; 0
      000947 00                    2648 	.db #0x00	; 0
      000948 00                    2649 	.db #0x00	; 0
      000949 00                    2650 	.db #0x00	; 0
      00094A 00                    2651 	.db #0x00	; 0
      00094B 40                    2652 	.db #0x40	; 64
      00094C 40                    2653 	.db #0x40	; 64
      00094D 60                    2654 	.db #0x60	; 96
      00094E 60                    2655 	.db #0x60	; 96
      00094F 00                    2656 	.db #0x00	; 0
      000950 00                    2657 	.db #0x00	; 0
      000951 00                    2658 	.db #0x00	; 0
      000952 00                    2659 	.db #0x00	; 0
      000953 00                    2660 	.db #0x00	; 0
      000954 00                    2661 	.db #0x00	; 0
      000955 00                    2662 	.db #0x00	; 0
      000956 00                    2663 	.db #0x00	; 0
      000957 00                    2664 	.db #0x00	; 0
      000958 00                    2665 	.db #0x00	; 0
      000959 00                    2666 	.db #0x00	; 0
      00095A 00                    2667 	.db #0x00	; 0
      00095B 00                    2668 	.db #0x00	; 0
      00095C 00                    2669 	.db #0x00	; 0
      00095D 00                    2670 	.db #0x00	; 0
      00095E 00                    2671 	.db #0x00	; 0
      00095F 00                    2672 	.db #0x00	; 0
      000960 00                    2673 	.db #0x00	; 0
      000961 00                    2674 	.db #0x00	; 0
      000962 00                    2675 	.db #0x00	; 0
      000963 00                    2676 	.db #0x00	; 0
      000964 00                    2677 	.db #0x00	; 0
      000965 04                    2678 	.db #0x04	; 4
      000966 04                    2679 	.db #0x04	; 4
      000967 06                    2680 	.db #0x06	; 6
      000968 06                    2681 	.db #0x06	; 6
      000969 00                    2682 	.db #0x00	; 0
      00096A 00                    2683 	.db #0x00	; 0
      00096B 02                    2684 	.db #0x02	; 2
      00096C 02                    2685 	.db #0x02	; 2
      00096D 02                    2686 	.db #0x02	; 2
      00096E 02                    2687 	.db #0x02	; 2
      00096F 00                    2688 	.db #0x00	; 0
      000970 00                    2689 	.db #0x00	; 0
      000971 00                    2690 	.db #0x00	; 0
      000972 00                    2691 	.db #0x00	; 0
      000973 00                    2692 	.db #0x00	; 0
      000974 00                    2693 	.db #0x00	; 0
      000975 00                    2694 	.db #0x00	; 0
      000976 00                    2695 	.db #0x00	; 0
      000977 00                    2696 	.db #0x00	; 0
      000978 00                    2697 	.db #0x00	; 0
      000979 00                    2698 	.db #0x00	; 0
      00097A 00                    2699 	.db #0x00	; 0
      00097B 00                    2700 	.db #0x00	; 0
      00097C 00                    2701 	.db #0x00	; 0
      00097D 00                    2702 	.db #0x00	; 0
      00097E 00                    2703 	.db #0x00	; 0
      00097F 00                    2704 	.db #0x00	; 0
      000980 00                    2705 	.db #0x00	; 0
      000981 00                    2706 	.db #0x00	; 0
      000982 00                    2707 	.db #0x00	; 0
      000983 00                    2708 	.db #0x00	; 0
      000984 00                    2709 	.db #0x00	; 0
      000985 00                    2710 	.db #0x00	; 0
      000986 00                    2711 	.db #0x00	; 0
      000987 00                    2712 	.db #0x00	; 0
      000988 00                    2713 	.db #0x00	; 0
      000989                       2714 _Ex2:
      000989 00                    2715 	.db #0x00	; 0
      00098A 00                    2716 	.db #0x00	; 0
      00098B 00                    2717 	.db #0x00	; 0
      00098C 00                    2718 	.db #0x00	; 0
      00098D 00                    2719 	.db #0x00	; 0
      00098E 00                    2720 	.db #0x00	; 0
      00098F 01                    2721 	.db #0x01	; 1
      000990 01                    2722 	.db #0x01	; 1
      000991 03                    2723 	.db #0x03	; 3
      000992 03                    2724 	.db #0x03	; 3
      000993 03                    2725 	.db #0x03	; 3
      000994 03                    2726 	.db #0x03	; 3
      000995 00                    2727 	.db #0x00	; 0
      000996 00                    2728 	.db #0x00	; 0
      000997 06                    2729 	.db #0x06	; 6
      000998 06                    2730 	.db #0x06	; 6
      000999 0E                    2731 	.db #0x0e	; 14
      00099A 0E                    2732 	.db #0x0e	; 14
      00099B 0E                    2733 	.db #0x0e	; 14
      00099C 0E                    2734 	.db #0x0e	; 14
      00099D 00                    2735 	.db #0x00	; 0
      00099E 00                    2736 	.db #0x00	; 0
      00099F 00                    2737 	.db #0x00	; 0
      0009A0 00                    2738 	.db #0x00	; 0
      0009A1 00                    2739 	.db #0x00	; 0
      0009A2 00                    2740 	.db #0x00	; 0
      0009A3 00                    2741 	.db #0x00	; 0
      0009A4 00                    2742 	.db #0x00	; 0
      0009A5 00                    2743 	.db #0x00	; 0
      0009A6 00                    2744 	.db #0x00	; 0
      0009A7 00                    2745 	.db #0x00	; 0
      0009A8 00                    2746 	.db #0x00	; 0
      0009A9 00                    2747 	.db #0x00	; 0
      0009AA 00                    2748 	.db #0x00	; 0
      0009AB 00                    2749 	.db #0x00	; 0
      0009AC 00                    2750 	.db #0x00	; 0
      0009AD 00                    2751 	.db #0x00	; 0
      0009AE 00                    2752 	.db #0x00	; 0
      0009AF 80                    2753 	.db #0x80	; 128
      0009B0 80                    2754 	.db #0x80	; 128
      0009B1 80                    2755 	.db #0x80	; 128
      0009B2 80                    2756 	.db #0x80	; 128
      0009B3 00                    2757 	.db #0x00	; 0
      0009B4 00                    2758 	.db #0x00	; 0
      0009B5 60                    2759 	.db #0x60	; 96
      0009B6 60                    2760 	.db #0x60	; 96
      0009B7 60                    2761 	.db #0x60	; 96
      0009B8 60                    2762 	.db #0x60	; 96
      0009B9 00                    2763 	.db #0x00	; 0
      0009BA 00                    2764 	.db #0x00	; 0
      0009BB C0                    2765 	.db #0xc0	; 192
      0009BC C0                    2766 	.db #0xc0	; 192
      0009BD C0                    2767 	.db #0xc0	; 192
      0009BE C0                    2768 	.db #0xc0	; 192
      0009BF C0                    2769 	.db #0xc0	; 192
      0009C0 C0                    2770 	.db #0xc0	; 192
      0009C1 00                    2771 	.db #0x00	; 0
      0009C2 00                    2772 	.db #0x00	; 0
      0009C3 00                    2773 	.db #0x00	; 0
      0009C4 00                    2774 	.db #0x00	; 0
      0009C5 00                    2775 	.db #0x00	; 0
      0009C6 00                    2776 	.db #0x00	; 0
      0009C7 00                    2777 	.db #0x00	; 0
      0009C8 00                    2778 	.db #0x00	; 0
      0009C9 00                    2779 	.db #0x00	; 0
      0009CA 00                    2780 	.db #0x00	; 0
      0009CB 00                    2781 	.db #0x00	; 0
      0009CC 00                    2782 	.db #0x00	; 0
      0009CD 03                    2783 	.db #0x03	; 3
      0009CE 03                    2784 	.db #0x03	; 3
      0009CF 03                    2785 	.db #0x03	; 3
      0009D0 03                    2786 	.db #0x03	; 3
      0009D1 03                    2787 	.db #0x03	; 3
      0009D2 03                    2788 	.db #0x03	; 3
      0009D3 01                    2789 	.db #0x01	; 1
      0009D4 01                    2790 	.db #0x01	; 1
      0009D5 00                    2791 	.db #0x00	; 0
      0009D6 00                    2792 	.db #0x00	; 0
      0009D7 00                    2793 	.db #0x00	; 0
      0009D8 00                    2794 	.db #0x00	; 0
      0009D9 00                    2795 	.db #0x00	; 0
      0009DA 00                    2796 	.db #0x00	; 0
      0009DB 1C                    2797 	.db #0x1c	; 28
      0009DC 1C                    2798 	.db #0x1c	; 28
      0009DD 3C                    2799 	.db #0x3c	; 60
      0009DE 3C                    2800 	.db #0x3c	; 60
      0009DF 3C                    2801 	.db #0x3c	; 60
      0009E0 3C                    2802 	.db #0x3c	; 60
      0009E1 30                    2803 	.db #0x30	; 48	'0'
      0009E2 30                    2804 	.db #0x30	; 48	'0'
      0009E3 00                    2805 	.db #0x00	; 0
      0009E4 00                    2806 	.db #0x00	; 0
      0009E5 00                    2807 	.db #0x00	; 0
      0009E6 00                    2808 	.db #0x00	; 0
      0009E7 00                    2809 	.db #0x00	; 0
      0009E8 00                    2810 	.db #0x00	; 0
      0009E9 00                    2811 	.db #0x00	; 0
      0009EA 00                    2812 	.db #0x00	; 0
      0009EB 00                    2813 	.db #0x00	; 0
      0009EC 00                    2814 	.db #0x00	; 0
      0009ED 80                    2815 	.db #0x80	; 128
      0009EE 80                    2816 	.db #0x80	; 128
      0009EF C0                    2817 	.db #0xc0	; 192
      0009F0 C0                    2818 	.db #0xc0	; 192
      0009F1 C0                    2819 	.db #0xc0	; 192
      0009F2 C0                    2820 	.db #0xc0	; 192
      0009F3 DE                    2821 	.db #0xde	; 222
      0009F4 DE                    2822 	.db #0xde	; 222
      0009F5 9E                    2823 	.db #0x9e	; 158
      0009F6 9E                    2824 	.db #0x9e	; 158
      0009F7 0E                    2825 	.db #0x0e	; 14
      0009F8 0E                    2826 	.db #0x0e	; 14
      0009F9 00                    2827 	.db #0x00	; 0
      0009FA 00                    2828 	.db #0x00	; 0
      0009FB 00                    2829 	.db #0x00	; 0
      0009FC 00                    2830 	.db #0x00	; 0
      0009FD 38                    2831 	.db #0x38	; 56	'8'
      0009FE 38                    2832 	.db #0x38	; 56	'8'
      0009FF 3C                    2833 	.db #0x3c	; 60
      000A00 3C                    2834 	.db #0x3c	; 60
      000A01 3C                    2835 	.db #0x3c	; 60
      000A02 3C                    2836 	.db #0x3c	; 60
      000A03 3C                    2837 	.db #0x3c	; 60
      000A04 3C                    2838 	.db #0x3c	; 60
      000A05 1C                    2839 	.db #0x1c	; 28
      000A06 1C                    2840 	.db #0x1c	; 28
      000A07 00                    2841 	.db #0x00	; 0
      000A08 00                    2842 	.db #0x00	; 0
      000A09 00                    2843 	.db #0x00	; 0
      000A0A 00                    2844 	.db #0x00	; 0
      000A0B 04                    2845 	.db #0x04	; 4
      000A0C 04                    2846 	.db #0x04	; 4
      000A0D 07                    2847 	.db #0x07	; 7
      000A0E 07                    2848 	.db #0x07	; 7
      000A0F 07                    2849 	.db #0x07	; 7
      000A10 07                    2850 	.db #0x07	; 7
      000A11 00                    2851 	.db #0x00	; 0
      000A12 00                    2852 	.db #0x00	; 0
      000A13 00                    2853 	.db #0x00	; 0
      000A14 00                    2854 	.db #0x00	; 0
      000A15 00                    2855 	.db #0x00	; 0
      000A16 00                    2856 	.db #0x00	; 0
      000A17 00                    2857 	.db #0x00	; 0
      000A18 00                    2858 	.db #0x00	; 0
      000A19 00                    2859 	.db #0x00	; 0
      000A1A 00                    2860 	.db #0x00	; 0
      000A1B 00                    2861 	.db #0x00	; 0
      000A1C 00                    2862 	.db #0x00	; 0
      000A1D 00                    2863 	.db #0x00	; 0
      000A1E 00                    2864 	.db #0x00	; 0
      000A1F 00                    2865 	.db #0x00	; 0
      000A20 00                    2866 	.db #0x00	; 0
      000A21 38                    2867 	.db #0x38	; 56	'8'
      000A22 38                    2868 	.db #0x38	; 56	'8'
      000A23 18                    2869 	.db #0x18	; 24
      000A24 18                    2870 	.db #0x18	; 24
      000A25 00                    2871 	.db #0x00	; 0
      000A26 00                    2872 	.db #0x00	; 0
      000A27 00                    2873 	.db #0x00	; 0
      000A28 00                    2874 	.db #0x00	; 0
      000A29 00                    2875 	.db #0x00	; 0
      000A2A 00                    2876 	.db #0x00	; 0
      000A2B 00                    2877 	.db #0x00	; 0
      000A2C 00                    2878 	.db #0x00	; 0
      000A2D 00                    2879 	.db #0x00	; 0
      000A2E 00                    2880 	.db #0x00	; 0
      000A2F 00                    2881 	.db #0x00	; 0
      000A30 00                    2882 	.db #0x00	; 0
      000A31 00                    2883 	.db #0x00	; 0
      000A32 00                    2884 	.db #0x00	; 0
      000A33 0C                    2885 	.db #0x0c	; 12
      000A34 0C                    2886 	.db #0x0c	; 12
      000A35 0E                    2887 	.db #0x0e	; 14
      000A36 0E                    2888 	.db #0x0e	; 14
      000A37 06                    2889 	.db #0x06	; 6
      000A38 06                    2890 	.db #0x06	; 6
      000A39 00                    2891 	.db #0x00	; 0
      000A3A 00                    2892 	.db #0x00	; 0
      000A3B 00                    2893 	.db #0x00	; 0
      000A3C 00                    2894 	.db #0x00	; 0
      000A3D 00                    2895 	.db #0x00	; 0
      000A3E 00                    2896 	.db #0x00	; 0
      000A3F 00                    2897 	.db #0x00	; 0
      000A40 00                    2898 	.db #0x00	; 0
      000A41 06                    2899 	.db #0x06	; 6
      000A42 06                    2900 	.db #0x06	; 6
      000A43 0E                    2901 	.db #0x0e	; 14
      000A44 0E                    2902 	.db #0x0e	; 14
      000A45 04                    2903 	.db #0x04	; 4
      000A46 04                    2904 	.db #0x04	; 4
      000A47 00                    2905 	.db #0x00	; 0
      000A48 00                    2906 	.db #0x00	; 0
      000A49 0E                    2907 	.db #0x0e	; 14
      000A4A 0E                    2908 	.db #0x0e	; 14
      000A4B 04                    2909 	.db #0x04	; 4
      000A4C 04                    2910 	.db #0x04	; 4
      000A4D 00                    2911 	.db #0x00	; 0
      000A4E 00                    2912 	.db #0x00	; 0
      000A4F 00                    2913 	.db #0x00	; 0
      000A50 00                    2914 	.db #0x00	; 0
      000A51 00                    2915 	.db #0x00	; 0
      000A52 00                    2916 	.db #0x00	; 0
      000A53 00                    2917 	.db #0x00	; 0
      000A54 00                    2918 	.db #0x00	; 0
      000A55 00                    2919 	.db #0x00	; 0
      000A56 00                    2920 	.db #0x00	; 0
      000A57 00                    2921 	.db #0x00	; 0
      000A58 00                    2922 	.db #0x00	; 0
      000A59 00                    2923 	.db #0x00	; 0
      000A5A 00                    2924 	.db #0x00	; 0
      000A5B 00                    2925 	.db #0x00	; 0
      000A5C 00                    2926 	.db #0x00	; 0
      000A5D 00                    2927 	.db #0x00	; 0
      000A5E 00                    2928 	.db #0x00	; 0
      000A5F 00                    2929 	.db #0x00	; 0
      000A60 00                    2930 	.db #0x00	; 0
      000A61 20                    2931 	.db #0x20	; 32
      000A62 20                    2932 	.db #0x20	; 32
      000A63 30                    2933 	.db #0x30	; 48	'0'
      000A64 30                    2934 	.db #0x30	; 48	'0'
      000A65 00                    2935 	.db #0x00	; 0
      000A66 00                    2936 	.db #0x00	; 0
      000A67 00                    2937 	.db #0x00	; 0
      000A68 00                    2938 	.db #0x00	; 0
      000A69 00                    2939 	.db #0x00	; 0
      000A6A 00                    2940 	.db #0x00	; 0
      000A6B 00                    2941 	.db #0x00	; 0
      000A6C 00                    2942 	.db #0x00	; 0
      000A6D 00                    2943 	.db #0x00	; 0
      000A6E 00                    2944 	.db #0x00	; 0
      000A6F 00                    2945 	.db #0x00	; 0
      000A70 00                    2946 	.db #0x00	; 0
      000A71 00                    2947 	.db #0x00	; 0
      000A72 00                    2948 	.db #0x00	; 0
      000A73 00                    2949 	.db #0x00	; 0
      000A74 00                    2950 	.db #0x00	; 0
      000A75 04                    2951 	.db #0x04	; 4
      000A76 04                    2952 	.db #0x04	; 4
      000A77 03                    2953 	.db #0x03	; 3
      000A78 03                    2954 	.db #0x03	; 3
      000A79 00                    2955 	.db #0x00	; 0
      000A7A 00                    2956 	.db #0x00	; 0
      000A7B 00                    2957 	.db #0x00	; 0
      000A7C 00                    2958 	.db #0x00	; 0
      000A7D 00                    2959 	.db #0x00	; 0
      000A7E 00                    2960 	.db #0x00	; 0
      000A7F 00                    2961 	.db #0x00	; 0
      000A80 00                    2962 	.db #0x00	; 0
      000A81 00                    2963 	.db #0x00	; 0
      000A82 00                    2964 	.db #0x00	; 0
      000A83 02                    2965 	.db #0x02	; 2
      000A84 02                    2966 	.db #0x02	; 2
      000A85 02                    2967 	.db #0x02	; 2
      000A86 02                    2968 	.db #0x02	; 2
      000A87 00                    2969 	.db #0x00	; 0
      000A88 00                    2970 	.db #0x00	; 0
      000A89                       2971 _Ex3:
      000A89 00                    2972 	.db #0x00	; 0
      000A8A 00                    2973 	.db #0x00	; 0
      000A8B 00                    2974 	.db #0x00	; 0
      000A8C 00                    2975 	.db #0x00	; 0
      000A8D 00                    2976 	.db #0x00	; 0
      000A8E 00                    2977 	.db #0x00	; 0
      000A8F 00                    2978 	.db #0x00	; 0
      000A90 00                    2979 	.db #0x00	; 0
      000A91 00                    2980 	.db #0x00	; 0
      000A92 00                    2981 	.db #0x00	; 0
      000A93 00                    2982 	.db #0x00	; 0
      000A94 00                    2983 	.db #0x00	; 0
      000A95 02                    2984 	.db #0x02	; 2
      000A96 02                    2985 	.db #0x02	; 2
      000A97 07                    2986 	.db #0x07	; 7
      000A98 07                    2987 	.db #0x07	; 7
      000A99 02                    2988 	.db #0x02	; 2
      000A9A 02                    2989 	.db #0x02	; 2
      000A9B 00                    2990 	.db #0x00	; 0
      000A9C 00                    2991 	.db #0x00	; 0
      000A9D 00                    2992 	.db #0x00	; 0
      000A9E 00                    2993 	.db #0x00	; 0
      000A9F 00                    2994 	.db #0x00	; 0
      000AA0 00                    2995 	.db #0x00	; 0
      000AA1 00                    2996 	.db #0x00	; 0
      000AA2 00                    2997 	.db #0x00	; 0
      000AA3 00                    2998 	.db #0x00	; 0
      000AA4 00                    2999 	.db #0x00	; 0
      000AA5 00                    3000 	.db #0x00	; 0
      000AA6 00                    3001 	.db #0x00	; 0
      000AA7 00                    3002 	.db #0x00	; 0
      000AA8 00                    3003 	.db #0x00	; 0
      000AA9 00                    3004 	.db #0x00	; 0
      000AAA 00                    3005 	.db #0x00	; 0
      000AAB 00                    3006 	.db #0x00	; 0
      000AAC 00                    3007 	.db #0x00	; 0
      000AAD 00                    3008 	.db #0x00	; 0
      000AAE 00                    3009 	.db #0x00	; 0
      000AAF 00                    3010 	.db #0x00	; 0
      000AB0 00                    3011 	.db #0x00	; 0
      000AB1 00                    3012 	.db #0x00	; 0
      000AB2 00                    3013 	.db #0x00	; 0
      000AB3 00                    3014 	.db #0x00	; 0
      000AB4 00                    3015 	.db #0x00	; 0
      000AB5 20                    3016 	.db #0x20	; 32
      000AB6 20                    3017 	.db #0x20	; 32
      000AB7 70                    3018 	.db #0x70	; 112	'p'
      000AB8 70                    3019 	.db #0x70	; 112	'p'
      000AB9 20                    3020 	.db #0x20	; 32
      000ABA 20                    3021 	.db #0x20	; 32
      000ABB 00                    3022 	.db #0x00	; 0
      000ABC 00                    3023 	.db #0x00	; 0
      000ABD 00                    3024 	.db #0x00	; 0
      000ABE 00                    3025 	.db #0x00	; 0
      000ABF 00                    3026 	.db #0x00	; 0
      000AC0 00                    3027 	.db #0x00	; 0
      000AC1 00                    3028 	.db #0x00	; 0
      000AC2 00                    3029 	.db #0x00	; 0
      000AC3 00                    3030 	.db #0x00	; 0
      000AC4 00                    3031 	.db #0x00	; 0
      000AC5 00                    3032 	.db #0x00	; 0
      000AC6 00                    3033 	.db #0x00	; 0
      000AC7 00                    3034 	.db #0x00	; 0
      000AC8 00                    3035 	.db #0x00	; 0
      000AC9 00                    3036 	.db #0x00	; 0
      000ACA 00                    3037 	.db #0x00	; 0
      000ACB 00                    3038 	.db #0x00	; 0
      000ACC 00                    3039 	.db #0x00	; 0
      000ACD 00                    3040 	.db #0x00	; 0
      000ACE 00                    3041 	.db #0x00	; 0
      000ACF 00                    3042 	.db #0x00	; 0
      000AD0 00                    3043 	.db #0x00	; 0
      000AD1 00                    3044 	.db #0x00	; 0
      000AD2 00                    3045 	.db #0x00	; 0
      000AD3 10                    3046 	.db #0x10	; 16
      000AD4 10                    3047 	.db #0x10	; 16
      000AD5 38                    3048 	.db #0x38	; 56	'8'
      000AD6 38                    3049 	.db #0x38	; 56	'8'
      000AD7 3E                    3050 	.db #0x3e	; 62
      000AD8 3E                    3051 	.db #0x3e	; 62
      000AD9 18                    3052 	.db #0x18	; 24
      000ADA 18                    3053 	.db #0x18	; 24
      000ADB 00                    3054 	.db #0x00	; 0
      000ADC 00                    3055 	.db #0x00	; 0
      000ADD 00                    3056 	.db #0x00	; 0
      000ADE 00                    3057 	.db #0x00	; 0
      000ADF 00                    3058 	.db #0x00	; 0
      000AE0 00                    3059 	.db #0x00	; 0
      000AE1 00                    3060 	.db #0x00	; 0
      000AE2 00                    3061 	.db #0x00	; 0
      000AE3 00                    3062 	.db #0x00	; 0
      000AE4 00                    3063 	.db #0x00	; 0
      000AE5 00                    3064 	.db #0x00	; 0
      000AE6 00                    3065 	.db #0x00	; 0
      000AE7 00                    3066 	.db #0x00	; 0
      000AE8 00                    3067 	.db #0x00	; 0
      000AE9 00                    3068 	.db #0x00	; 0
      000AEA 00                    3069 	.db #0x00	; 0
      000AEB 00                    3070 	.db #0x00	; 0
      000AEC 00                    3071 	.db #0x00	; 0
      000AED 00                    3072 	.db #0x00	; 0
      000AEE 00                    3073 	.db #0x00	; 0
      000AEF 00                    3074 	.db #0x00	; 0
      000AF0 00                    3075 	.db #0x00	; 0
      000AF1 00                    3076 	.db #0x00	; 0
      000AF2 00                    3077 	.db #0x00	; 0
      000AF3 00                    3078 	.db #0x00	; 0
      000AF4 00                    3079 	.db #0x00	; 0
      000AF5 1C                    3080 	.db #0x1c	; 28
      000AF6 1C                    3081 	.db #0x1c	; 28
      000AF7 7C                    3082 	.db #0x7c	; 124
      000AF8 7C                    3083 	.db #0x7c	; 124
      000AF9 1C                    3084 	.db #0x1c	; 28
      000AFA 1C                    3085 	.db #0x1c	; 28
      000AFB 08                    3086 	.db #0x08	; 8
      000AFC 08                    3087 	.db #0x08	; 8
      000AFD 00                    3088 	.db #0x00	; 0
      000AFE 00                    3089 	.db #0x00	; 0
      000AFF 00                    3090 	.db #0x00	; 0
      000B00 00                    3091 	.db #0x00	; 0
      000B01 00                    3092 	.db #0x00	; 0
      000B02 00                    3093 	.db #0x00	; 0
      000B03 00                    3094 	.db #0x00	; 0
      000B04 00                    3095 	.db #0x00	; 0
      000B05 00                    3096 	.db #0x00	; 0
      000B06 00                    3097 	.db #0x00	; 0
      000B07 00                    3098 	.db #0x00	; 0
      000B08 00                    3099 	.db #0x00	; 0
      000B09 00                    3100 	.db #0x00	; 0
      000B0A 00                    3101 	.db #0x00	; 0
      000B0B 00                    3102 	.db #0x00	; 0
      000B0C 00                    3103 	.db #0x00	; 0
      000B0D 00                    3104 	.db #0x00	; 0
      000B0E 00                    3105 	.db #0x00	; 0
      000B0F 00                    3106 	.db #0x00	; 0
      000B10 00                    3107 	.db #0x00	; 0
      000B11 00                    3108 	.db #0x00	; 0
      000B12 00                    3109 	.db #0x00	; 0
      000B13 00                    3110 	.db #0x00	; 0
      000B14 00                    3111 	.db #0x00	; 0
      000B15 28                    3112 	.db #0x28	; 40
      000B16 28                    3113 	.db #0x28	; 40
      000B17 30                    3114 	.db #0x30	; 48	'0'
      000B18 30                    3115 	.db #0x30	; 48	'0'
      000B19 38                    3116 	.db #0x38	; 56	'8'
      000B1A 38                    3117 	.db #0x38	; 56	'8'
      000B1B 10                    3118 	.db #0x10	; 16
      000B1C 10                    3119 	.db #0x10	; 16
      000B1D 00                    3120 	.db #0x00	; 0
      000B1E 00                    3121 	.db #0x00	; 0
      000B1F 00                    3122 	.db #0x00	; 0
      000B20 00                    3123 	.db #0x00	; 0
      000B21 00                    3124 	.db #0x00	; 0
      000B22 00                    3125 	.db #0x00	; 0
      000B23 00                    3126 	.db #0x00	; 0
      000B24 00                    3127 	.db #0x00	; 0
      000B25 00                    3128 	.db #0x00	; 0
      000B26 00                    3129 	.db #0x00	; 0
      000B27 00                    3130 	.db #0x00	; 0
      000B28 00                    3131 	.db #0x00	; 0
      000B29 00                    3132 	.db #0x00	; 0
      000B2A 00                    3133 	.db #0x00	; 0
      000B2B 00                    3134 	.db #0x00	; 0
      000B2C 00                    3135 	.db #0x00	; 0
      000B2D 00                    3136 	.db #0x00	; 0
      000B2E 00                    3137 	.db #0x00	; 0
      000B2F 00                    3138 	.db #0x00	; 0
      000B30 00                    3139 	.db #0x00	; 0
      000B31 00                    3140 	.db #0x00	; 0
      000B32 00                    3141 	.db #0x00	; 0
      000B33 00                    3142 	.db #0x00	; 0
      000B34 00                    3143 	.db #0x00	; 0
      000B35 04                    3144 	.db #0x04	; 4
      000B36 04                    3145 	.db #0x04	; 4
      000B37 0E                    3146 	.db #0x0e	; 14
      000B38 0E                    3147 	.db #0x0e	; 14
      000B39 0E                    3148 	.db #0x0e	; 14
      000B3A 0E                    3149 	.db #0x0e	; 14
      000B3B 00                    3150 	.db #0x00	; 0
      000B3C 00                    3151 	.db #0x00	; 0
      000B3D 00                    3152 	.db #0x00	; 0
      000B3E 00                    3153 	.db #0x00	; 0
      000B3F 00                    3154 	.db #0x00	; 0
      000B40 00                    3155 	.db #0x00	; 0
      000B41 00                    3156 	.db #0x00	; 0
      000B42 00                    3157 	.db #0x00	; 0
      000B43 00                    3158 	.db #0x00	; 0
      000B44 00                    3159 	.db #0x00	; 0
      000B45 00                    3160 	.db #0x00	; 0
      000B46 00                    3161 	.db #0x00	; 0
      000B47 00                    3162 	.db #0x00	; 0
      000B48 00                    3163 	.db #0x00	; 0
      000B49 00                    3164 	.db #0x00	; 0
      000B4A 00                    3165 	.db #0x00	; 0
      000B4B 00                    3166 	.db #0x00	; 0
      000B4C 00                    3167 	.db #0x00	; 0
      000B4D 00                    3168 	.db #0x00	; 0
      000B4E 00                    3169 	.db #0x00	; 0
      000B4F 00                    3170 	.db #0x00	; 0
      000B50 00                    3171 	.db #0x00	; 0
      000B51 00                    3172 	.db #0x00	; 0
      000B52 00                    3173 	.db #0x00	; 0
      000B53 00                    3174 	.db #0x00	; 0
      000B54 00                    3175 	.db #0x00	; 0
      000B55 00                    3176 	.db #0x00	; 0
      000B56 00                    3177 	.db #0x00	; 0
      000B57 60                    3178 	.db #0x60	; 96
      000B58 60                    3179 	.db #0x60	; 96
      000B59 40                    3180 	.db #0x40	; 64
      000B5A 40                    3181 	.db #0x40	; 64
      000B5B 00                    3182 	.db #0x00	; 0
      000B5C 00                    3183 	.db #0x00	; 0
      000B5D 00                    3184 	.db #0x00	; 0
      000B5E 00                    3185 	.db #0x00	; 0
      000B5F 00                    3186 	.db #0x00	; 0
      000B60 00                    3187 	.db #0x00	; 0
      000B61 00                    3188 	.db #0x00	; 0
      000B62 00                    3189 	.db #0x00	; 0
      000B63 00                    3190 	.db #0x00	; 0
      000B64 00                    3191 	.db #0x00	; 0
      000B65 00                    3192 	.db #0x00	; 0
      000B66 00                    3193 	.db #0x00	; 0
      000B67 00                    3194 	.db #0x00	; 0
      000B68 00                    3195 	.db #0x00	; 0
      000B69 00                    3196 	.db #0x00	; 0
      000B6A 00                    3197 	.db #0x00	; 0
      000B6B 00                    3198 	.db #0x00	; 0
      000B6C 00                    3199 	.db #0x00	; 0
      000B6D 00                    3200 	.db #0x00	; 0
      000B6E 00                    3201 	.db #0x00	; 0
      000B6F 00                    3202 	.db #0x00	; 0
      000B70 00                    3203 	.db #0x00	; 0
      000B71 00                    3204 	.db #0x00	; 0
      000B72 00                    3205 	.db #0x00	; 0
      000B73 00                    3206 	.db #0x00	; 0
      000B74 00                    3207 	.db #0x00	; 0
      000B75 00                    3208 	.db #0x00	; 0
      000B76 00                    3209 	.db #0x00	; 0
      000B77 02                    3210 	.db #0x02	; 2
      000B78 02                    3211 	.db #0x02	; 2
      000B79 02                    3212 	.db #0x02	; 2
      000B7A 02                    3213 	.db #0x02	; 2
      000B7B 00                    3214 	.db #0x00	; 0
      000B7C 00                    3215 	.db #0x00	; 0
      000B7D 00                    3216 	.db #0x00	; 0
      000B7E 00                    3217 	.db #0x00	; 0
      000B7F 00                    3218 	.db #0x00	; 0
      000B80 00                    3219 	.db #0x00	; 0
      000B81 00                    3220 	.db #0x00	; 0
      000B82 00                    3221 	.db #0x00	; 0
      000B83 00                    3222 	.db #0x00	; 0
      000B84 00                    3223 	.db #0x00	; 0
      000B85 00                    3224 	.db #0x00	; 0
      000B86 00                    3225 	.db #0x00	; 0
      000B87 00                    3226 	.db #0x00	; 0
      000B88 00                    3227 	.db #0x00	; 0
      000B89                       3228 _BLANKSIZE:
      000B89 03                    3229 	.db #0x03	; 3
      000B8A                       3230 _BLANK:
      000B8A 26                    3231 	.db #0x26	; 38
      000B8B 2B                    3232 	.db #0x2b	; 43
      000B8C 2C                    3233 	.db #0x2c	; 44
      000B8D                       3234 _EMPTYSPRITE:
      000B8D 50                    3235 	.db #0x50	; 80	'P'
      000B8E                       3236 _ENEMYCOUNT:
      000B8E 05                    3237 	.db #0x05	; 5
      000B8F                       3238 _xSpawnPositions:
      000B8F 00                    3239 	.db #0x00	; 0
      000B90 60                    3240 	.db #0x60	; 96
      000B91 B0                    3241 	.db #0xb0	; 176
      000B92 00                    3242 	.db #0x00	; 0
      000B93 B0                    3243 	.db #0xb0	; 176
      000B94 00                    3244 	.db #0x00	; 0
      000B95 60                    3245 	.db #0x60	; 96
      000B96 B0                    3246 	.db #0xb0	; 176
      000B97                       3247 _ySpawnPositions:
      000B97 00                    3248 	.db #0x00	; 0
      000B98 00                    3249 	.db #0x00	; 0
      000B99 00                    3250 	.db #0x00	; 0
      000B9A 5C                    3251 	.db #0x5c	; 92
      000B9B 5C                    3252 	.db #0x5c	; 92
      000B9C A0                    3253 	.db #0xa0	; 160
      000B9D A0                    3254 	.db #0xa0	; 160
      000B9E A0                    3255 	.db #0xa0	; 160
      000B9F                       3256 _PROJECTILECOUNT:
      000B9F 05                    3257 	.db #0x05	; 5
      000BA0                       3258 _PLAYERSIZE:
      000BA0 10                    3259 	.db #0x10	; 16
      000BA1                       3260 _maxHull:
      000BA1 64                    3261 	.db #0x64	;  100	'd'
      000BA2                       3262 _maxShield:
      000BA2 64                    3263 	.db #0x64	;  100	'd'
      000BA3                       3264 _MAXGUNLEVEL:
      000BA3 01                    3265 	.db #0x01	; 1
      000BA4                       3266 _SPLASHDROPOFF:
      000BA4 01                    3267 	.db #0x01	; 1
      000BA5                       3268 _exCount:
      000BA5 03                    3269 	.db #0x03	; 3
      000BA6                       3270 _EXPLFRAMETIME:
      000BA6 03                    3271 	.db #0x03	; 3
      000BA7                       3272 _exTileCount:
      000BA7 03                    3273 	.db #0x03	; 3
      000BA8                       3274 _AUXTICKFREQUENCY:
      000BA8 01                    3275 	.db #0x01	; 1
                                   3276 ;src/main.c:159: void setHealthBar(uint8_t row, uint8_t hp) {
                                   3277 ;	---------------------------------
                                   3278 ; Function setHealthBar
                                   3279 ; ---------------------------------
      000BA9                       3280 _setHealthBar::
      000BA9 E8 FB                 3281 	add	sp, #-5
                                   3282 ;src/main.c:161: if (hp >= 80) {
      000BAB F8 08                 3283 	ldhl	sp,	#8
      000BAD 7E                    3284 	ld	a, (hl)
      000BAE D6 50                 3285 	sub	a, #0x50
      000BB0 38 31                 3286 	jr	C, 00102$
                                   3287 ;src/main.c:162: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000BB2 F8 00                 3288 	ldhl	sp,	#0
      000BB4 4D                    3289 	ld	c, l
      000BB5 44                    3290 	ld	b, h
      000BB6 36 50                 3291 	ld	(hl), #0x50
      000BB8 69                    3292 	ld	l, c
                                   3293 ;	spillPairReg hl
                                   3294 ;	spillPairReg hl
      000BB9 60                    3295 	ld	h, b
                                   3296 ;	spillPairReg hl
                                   3297 ;	spillPairReg hl
      000BBA 23                    3298 	inc	hl
      000BBB 36 50                 3299 	ld	(hl), #0x50
      000BBD 69                    3300 	ld	l, c
                                   3301 ;	spillPairReg hl
                                   3302 ;	spillPairReg hl
      000BBE 60                    3303 	ld	h, b
                                   3304 ;	spillPairReg hl
                                   3305 ;	spillPairReg hl
      000BBF 23                    3306 	inc	hl
      000BC0 23                    3307 	inc	hl
      000BC1 36 50                 3308 	ld	(hl), #0x50
      000BC3 69                    3309 	ld	l, c
                                   3310 ;	spillPairReg hl
                                   3311 ;	spillPairReg hl
      000BC4 60                    3312 	ld	h, b
                                   3313 ;	spillPairReg hl
                                   3314 ;	spillPairReg hl
      000BC5 23                    3315 	inc	hl
      000BC6 23                    3316 	inc	hl
      000BC7 23                    3317 	inc	hl
      000BC8 36 50                 3318 	ld	(hl), #0x50
      000BCA 21 04 00              3319 	ld	hl, #0x0004
      000BCD 09                    3320 	add	hl, bc
      000BCE 36 50                 3321 	ld	(hl), #0x50
                                   3322 ;src/main.c:163: set_win_tiles(5,row,5,1,blockmap);
      000BD0 C5                    3323 	push	bc
      000BD1 21 05 01              3324 	ld	hl, #0x105
      000BD4 E5                    3325 	push	hl
      000BD5 F8 0B                 3326 	ldhl	sp,	#11
      000BD7 66                    3327 	ld	h, (hl)
      000BD8 2E 05                 3328 	ld	l, #0x05
      000BDA E5                    3329 	push	hl
      000BDB CDr00r00              3330 	call	_set_win_tiles
      000BDE E8 06                 3331 	add	sp, #6
                                   3332 ;src/main.c:164: return;
      000BE0 C3rB7r0C              3333 	jp	00109$
      000BE3                       3334 00102$:
                                   3335 ;src/main.c:166: if (hp >= 60) {
      000BE3 F8 08                 3336 	ldhl	sp,	#8
      000BE5 7E                    3337 	ld	a, (hl)
      000BE6 D6 3C                 3338 	sub	a, #0x3c
      000BE8 38 31                 3339 	jr	C, 00104$
                                   3340 ;src/main.c:167: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000BEA F8 00                 3341 	ldhl	sp,	#0
      000BEC 4D                    3342 	ld	c, l
      000BED 44                    3343 	ld	b, h
      000BEE 36 50                 3344 	ld	(hl), #0x50
      000BF0 69                    3345 	ld	l, c
                                   3346 ;	spillPairReg hl
                                   3347 ;	spillPairReg hl
      000BF1 60                    3348 	ld	h, b
                                   3349 ;	spillPairReg hl
                                   3350 ;	spillPairReg hl
      000BF2 23                    3351 	inc	hl
      000BF3 36 50                 3352 	ld	(hl), #0x50
      000BF5 69                    3353 	ld	l, c
                                   3354 ;	spillPairReg hl
                                   3355 ;	spillPairReg hl
      000BF6 60                    3356 	ld	h, b
                                   3357 ;	spillPairReg hl
                                   3358 ;	spillPairReg hl
      000BF7 23                    3359 	inc	hl
      000BF8 23                    3360 	inc	hl
      000BF9 36 50                 3361 	ld	(hl), #0x50
      000BFB 69                    3362 	ld	l, c
                                   3363 ;	spillPairReg hl
                                   3364 ;	spillPairReg hl
      000BFC 60                    3365 	ld	h, b
                                   3366 ;	spillPairReg hl
                                   3367 ;	spillPairReg hl
      000BFD 23                    3368 	inc	hl
      000BFE 23                    3369 	inc	hl
      000BFF 23                    3370 	inc	hl
      000C00 36 50                 3371 	ld	(hl), #0x50
      000C02 21 04 00              3372 	ld	hl, #0x0004
      000C05 09                    3373 	add	hl, bc
      000C06 36 00                 3374 	ld	(hl), #0x00
                                   3375 ;src/main.c:168: set_win_tiles(5,row,5,1,blockmap);
      000C08 C5                    3376 	push	bc
      000C09 21 05 01              3377 	ld	hl, #0x105
      000C0C E5                    3378 	push	hl
      000C0D F8 0B                 3379 	ldhl	sp,	#11
      000C0F 66                    3380 	ld	h, (hl)
      000C10 2E 05                 3381 	ld	l, #0x05
      000C12 E5                    3382 	push	hl
      000C13 CDr00r00              3383 	call	_set_win_tiles
      000C16 E8 06                 3384 	add	sp, #6
                                   3385 ;src/main.c:169: return;
      000C18 C3rB7r0C              3386 	jp	00109$
      000C1B                       3387 00104$:
                                   3388 ;src/main.c:171: if (hp >= 40) {
      000C1B F8 08                 3389 	ldhl	sp,	#8
      000C1D 7E                    3390 	ld	a, (hl)
      000C1E D6 28                 3391 	sub	a, #0x28
      000C20 38 30                 3392 	jr	C, 00106$
                                   3393 ;src/main.c:172: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000C22 F8 00                 3394 	ldhl	sp,	#0
      000C24 4D                    3395 	ld	c, l
      000C25 44                    3396 	ld	b, h
      000C26 36 50                 3397 	ld	(hl), #0x50
      000C28 69                    3398 	ld	l, c
                                   3399 ;	spillPairReg hl
                                   3400 ;	spillPairReg hl
      000C29 60                    3401 	ld	h, b
                                   3402 ;	spillPairReg hl
                                   3403 ;	spillPairReg hl
      000C2A 23                    3404 	inc	hl
      000C2B 36 50                 3405 	ld	(hl), #0x50
      000C2D 69                    3406 	ld	l, c
                                   3407 ;	spillPairReg hl
                                   3408 ;	spillPairReg hl
      000C2E 60                    3409 	ld	h, b
                                   3410 ;	spillPairReg hl
                                   3411 ;	spillPairReg hl
      000C2F 23                    3412 	inc	hl
      000C30 23                    3413 	inc	hl
      000C31 36 50                 3414 	ld	(hl), #0x50
      000C33 59                    3415 	ld	e, c
      000C34 50                    3416 	ld	d, b
      000C35 13                    3417 	inc	de
      000C36 13                    3418 	inc	de
      000C37 13                    3419 	inc	de
      000C38 AF                    3420 	xor	a, a
      000C39 12                    3421 	ld	(de), a
      000C3A 21 04 00              3422 	ld	hl, #0x0004
      000C3D 09                    3423 	add	hl, bc
      000C3E 36 00                 3424 	ld	(hl), #0x00
                                   3425 ;src/main.c:173: set_win_tiles(5,row,5,1,blockmap);
      000C40 C5                    3426 	push	bc
      000C41 21 05 01              3427 	ld	hl, #0x105
      000C44 E5                    3428 	push	hl
      000C45 F8 0B                 3429 	ldhl	sp,	#11
      000C47 66                    3430 	ld	h, (hl)
      000C48 2E 05                 3431 	ld	l, #0x05
      000C4A E5                    3432 	push	hl
      000C4B CDr00r00              3433 	call	_set_win_tiles
      000C4E E8 06                 3434 	add	sp, #6
                                   3435 ;src/main.c:174: return;
      000C50 18 65                 3436 	jr	00109$
      000C52                       3437 00106$:
                                   3438 ;src/main.c:176: if (hp >= 20) {
      000C52 F8 08                 3439 	ldhl	sp,	#8
      000C54 7E                    3440 	ld	a, (hl)
      000C55 D6 14                 3441 	sub	a, #0x14
      000C57 38 30                 3442 	jr	C, 00108$
                                   3443 ;src/main.c:177: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000C59 F8 00                 3444 	ldhl	sp,	#0
      000C5B 4D                    3445 	ld	c, l
      000C5C 44                    3446 	ld	b, h
      000C5D 36 50                 3447 	ld	(hl), #0x50
      000C5F 69                    3448 	ld	l, c
                                   3449 ;	spillPairReg hl
                                   3450 ;	spillPairReg hl
      000C60 60                    3451 	ld	h, b
                                   3452 ;	spillPairReg hl
                                   3453 ;	spillPairReg hl
      000C61 23                    3454 	inc	hl
      000C62 36 50                 3455 	ld	(hl), #0x50
      000C64 59                    3456 	ld	e, c
      000C65 50                    3457 	ld	d, b
      000C66 13                    3458 	inc	de
      000C67 13                    3459 	inc	de
      000C68 AF                    3460 	xor	a, a
      000C69 12                    3461 	ld	(de), a
      000C6A 59                    3462 	ld	e, c
      000C6B 50                    3463 	ld	d, b
      000C6C 13                    3464 	inc	de
      000C6D 13                    3465 	inc	de
      000C6E 13                    3466 	inc	de
      000C6F AF                    3467 	xor	a, a
      000C70 12                    3468 	ld	(de), a
      000C71 21 04 00              3469 	ld	hl, #0x0004
      000C74 09                    3470 	add	hl, bc
      000C75 36 00                 3471 	ld	(hl), #0x00
                                   3472 ;src/main.c:178: set_win_tiles(5,row,5,1,blockmap);
      000C77 C5                    3473 	push	bc
      000C78 21 05 01              3474 	ld	hl, #0x105
      000C7B E5                    3475 	push	hl
      000C7C F8 0B                 3476 	ldhl	sp,	#11
      000C7E 66                    3477 	ld	h, (hl)
      000C7F 2E 05                 3478 	ld	l, #0x05
      000C81 E5                    3479 	push	hl
      000C82 CDr00r00              3480 	call	_set_win_tiles
      000C85 E8 06                 3481 	add	sp, #6
                                   3482 ;src/main.c:179: return;
      000C87 18 2E                 3483 	jr	00109$
      000C89                       3484 00108$:
                                   3485 ;src/main.c:181: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000C89 F8 00                 3486 	ldhl	sp,	#0
      000C8B 4D                    3487 	ld	c, l
      000C8C 44                    3488 	ld	b, h
      000C8D 36 50                 3489 	ld	(hl), #0x50
      000C8F 59                    3490 	ld	e, c
      000C90 50                    3491 	ld	d, b
      000C91 13                    3492 	inc	de
      000C92 AF                    3493 	xor	a, a
      000C93 12                    3494 	ld	(de), a
      000C94 59                    3495 	ld	e, c
      000C95 50                    3496 	ld	d, b
      000C96 13                    3497 	inc	de
      000C97 13                    3498 	inc	de
      000C98 AF                    3499 	xor	a, a
      000C99 12                    3500 	ld	(de), a
      000C9A 59                    3501 	ld	e, c
      000C9B 50                    3502 	ld	d, b
      000C9C 13                    3503 	inc	de
      000C9D 13                    3504 	inc	de
      000C9E 13                    3505 	inc	de
      000C9F AF                    3506 	xor	a, a
      000CA0 12                    3507 	ld	(de), a
      000CA1 21 04 00              3508 	ld	hl, #0x0004
      000CA4 09                    3509 	add	hl, bc
      000CA5 36 00                 3510 	ld	(hl), #0x00
                                   3511 ;src/main.c:182: set_win_tiles(5,row,5,1,blockmap);
      000CA7 C5                    3512 	push	bc
      000CA8 21 05 01              3513 	ld	hl, #0x105
      000CAB E5                    3514 	push	hl
      000CAC F8 0B                 3515 	ldhl	sp,	#11
      000CAE 66                    3516 	ld	h, (hl)
      000CAF 2E 05                 3517 	ld	l, #0x05
      000CB1 E5                    3518 	push	hl
      000CB2 CDr00r00              3519 	call	_set_win_tiles
      000CB5 E8 06                 3520 	add	sp, #6
                                   3521 ;src/main.c:183: return;
      000CB7                       3522 00109$:
                                   3523 ;src/main.c:185: }
      000CB7 E8 05                 3524 	add	sp, #5
      000CB9 C9                    3525 	ret
                                   3526 ;src/main.c:187: void updateScore() {
                                   3527 ;	---------------------------------
                                   3528 ; Function updateScore
                                   3529 ; ---------------------------------
      000CBA                       3530 _updateScore::
      000CBA E8 F6                 3531 	add	sp, #-10
                                   3532 ;src/main.c:191: len = bcd2text(&SCORE, 0x01, buf);
      000CBC F8 00                 3533 	ldhl	sp,	#0
      000CBE 4D                    3534 	ld	c, l
      000CBF 44                    3535 	ld	b, h
      000CC0 59                    3536 	ld	e, c
      000CC1 50                    3537 	ld	d, b
      000CC2 C5                    3538 	push	bc
      000CC3 D5                    3539 	push	de
      000CC4 3E 01                 3540 	ld	a, #0x01
      000CC6 F5                    3541 	push	af
      000CC7 33                    3542 	inc	sp
      000CC8 11rB3r00              3543 	ld	de, #_SCORE
      000CCB D5                    3544 	push	de
      000CCC CDr00r00              3545 	call	_bcd2text
      000CCF E8 05                 3546 	add	sp, #5
      000CD1 C1                    3547 	pop	bc
                                   3548 ;src/main.c:192: set_win_tiles(15, 1, 5, 1, buf+3);
      000CD2 03                    3549 	inc	bc
      000CD3 03                    3550 	inc	bc
      000CD4 03                    3551 	inc	bc
      000CD5 C5                    3552 	push	bc
      000CD6 21 05 01              3553 	ld	hl, #0x105
      000CD9 E5                    3554 	push	hl
      000CDA 21 0F 01              3555 	ld	hl, #0x10f
      000CDD E5                    3556 	push	hl
      000CDE CDr00r00              3557 	call	_set_win_tiles
                                   3558 ;src/main.c:193: }
      000CE1 E8 10                 3559 	add	sp, #16
      000CE3 C9                    3560 	ret
                                   3561 ;src/main.c:195: void updateMissileCount(int8_t amount) {
                                   3562 ;	---------------------------------
                                   3563 ; Function updateMissileCount
                                   3564 ; ---------------------------------
      000CE4                       3565 _updateMissileCount::
      000CE4 E8 F6                 3566 	add	sp, #-10
                                   3567 ;src/main.c:196: if (amount == -1) {
      000CE6 F8 0C                 3568 	ldhl	sp,	#12
      000CE8 7E                    3569 	ld	a, (hl)
      000CE9 3C                    3570 	inc	a
      000CEA 20 13                 3571 	jr	NZ, 00112$
                                   3572 ;src/main.c:197: missiles--;
      000CEC 21rA8r00              3573 	ld	hl, #_missiles
      000CEF 35                    3574 	dec	(hl)
                                   3575 ;src/main.c:198: bcd_sub(&MISSILES, &INCREMENT);
      000CF0 11rB7r00              3576 	ld	de, #_INCREMENT
      000CF3 D5                    3577 	push	de
      000CF4 11rA9r00              3578 	ld	de, #_MISSILES
      000CF7 D5                    3579 	push	de
      000CF8 CDr00r00              3580 	call	_bcd_sub
      000CFB E8 04                 3581 	add	sp, #4
      000CFD 18 30                 3582 	jr	00104$
                                   3583 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000CFF                       3584 00112$:
      000CFF 0E 00                 3585 	ld	c, #0x00
      000D01                       3586 00106$:
      000D01 F8 0C                 3587 	ldhl	sp,	#12
      000D03 5E                    3588 	ld	e, (hl)
      000D04 79                    3589 	ld	a,c
      000D05 57                    3590 	ld	d,a
      000D06 96                    3591 	sub	a, (hl)
      000D07 CB 7B                 3592 	bit	7, e
      000D09 28 07                 3593 	jr	Z, 00128$
      000D0B CB 7A                 3594 	bit	7, d
      000D0D 20 08                 3595 	jr	NZ, 00129$
      000D0F BF                    3596 	cp	a, a
      000D10 18 05                 3597 	jr	00129$
      000D12                       3598 00128$:
      000D12 CB 7A                 3599 	bit	7, d
      000D14 28 01                 3600 	jr	Z, 00129$
      000D16 37                    3601 	scf
      000D17                       3602 00129$:
      000D17 30 16                 3603 	jr	NC, 00104$
                                   3604 ;src/main.c:202: ++missiles;
      000D19 21rA8r00              3605 	ld	hl, #_missiles
      000D1C 34                    3606 	inc	(hl)
                                   3607 ;src/main.c:203: bcd_add(&MISSILES, &INCREMENT);
      000D1D C5                    3608 	push	bc
      000D1E 11rB7r00              3609 	ld	de, #_INCREMENT
      000D21 D5                    3610 	push	de
      000D22 11rA9r00              3611 	ld	de, #_MISSILES
      000D25 D5                    3612 	push	de
      000D26 CDr00r00              3613 	call	_bcd_add
      000D29 E8 04                 3614 	add	sp, #4
      000D2B C1                    3615 	pop	bc
                                   3616 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000D2C 0C                    3617 	inc	c
      000D2D 18 D2                 3618 	jr	00106$
      000D2F                       3619 00104$:
                                   3620 ;src/main.c:208: len = bcd2text(&MISSILES, 0x01, buf);
      000D2F F8 00                 3621 	ldhl	sp,	#0
      000D31 4D                    3622 	ld	c, l
      000D32 44                    3623 	ld	b, h
      000D33 59                    3624 	ld	e, c
      000D34 50                    3625 	ld	d, b
      000D35 C5                    3626 	push	bc
      000D36 D5                    3627 	push	de
      000D37 3E 01                 3628 	ld	a, #0x01
      000D39 F5                    3629 	push	af
      000D3A 33                    3630 	inc	sp
      000D3B 11rA9r00              3631 	ld	de, #_MISSILES
      000D3E D5                    3632 	push	de
      000D3F CDr00r00              3633 	call	_bcd2text
      000D42 E8 05                 3634 	add	sp, #5
      000D44 C1                    3635 	pop	bc
                                   3636 ;src/main.c:209: set_win_tiles(18, 0, 2, 1, buf+6);
      000D45 21 06 00              3637 	ld	hl, #0x0006
      000D48 09                    3638 	add	hl, bc
      000D49 E5                    3639 	push	hl
      000D4A 21 02 01              3640 	ld	hl, #0x102
      000D4D E5                    3641 	push	hl
      000D4E 21 12 00              3642 	ld	hl, #0x12
      000D51 E5                    3643 	push	hl
      000D52 CDr00r00              3644 	call	_set_win_tiles
                                   3645 ;src/main.c:211: }
      000D55 E8 10                 3646 	add	sp, #16
      000D57 C9                    3647 	ret
                                   3648 ;src/main.c:213: void incrementScore() {
                                   3649 ;	---------------------------------
                                   3650 ; Function incrementScore
                                   3651 ; ---------------------------------
      000D58                       3652 _incrementScore::
                                   3653 ;src/main.c:214: score += 1;
      000D58 21rB1r00              3654 	ld	hl, #_score
      000D5B 2A                    3655 	ld	a, (hl+)
      000D5C 4F                    3656 	ld	c, a
      000D5D 3A                    3657 	ld	a, (hl-)
      000D5E 47                    3658 	ld	b, a
      000D5F 03                    3659 	inc	bc
      000D60 79                    3660 	ld	a, c
      000D61 22                    3661 	ld	(hl+), a
      000D62 70                    3662 	ld	(hl), b
                                   3663 ;src/main.c:215: bcd_add(&SCORE, &INCREMENT);
      000D63 11rB7r00              3664 	ld	de, #_INCREMENT
      000D66 D5                    3665 	push	de
      000D67 11rB3r00              3666 	ld	de, #_SCORE
      000D6A D5                    3667 	push	de
      000D6B CDr00r00              3668 	call	_bcd_add
      000D6E E8 04                 3669 	add	sp, #4
                                   3670 ;src/main.c:216: }
      000D70 C9                    3671 	ret
                                   3672 ;src/main.c:218: void updateDirection() {
                                   3673 ;	---------------------------------
                                   3674 ; Function updateDirection
                                   3675 ; ---------------------------------
      000D71                       3676 _updateDirection::
      000D71 E8 FC                 3677 	add	sp, #-4
                                   3678 ;src/main.c:222: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000D73 21rF5r00              3679 	ld	hl, #_joydata
      000D76 5E                    3680 	ld	e, (hl)
      000D77 7B                    3681 	ld	a, e
      000D78 E6 01                 3682 	and	a, #0x01
      000D7A F8 00                 3683 	ldhl	sp,	#0
      000D7C 22                    3684 	ld	(hl+), a
      000D7D AF                    3685 	xor	a, a
      000D7E 22                    3686 	ld	(hl+), a
      000D7F 7B                    3687 	ld	a, e
      000D80 E6 04                 3688 	and	a, #0x04
      000D82 22                    3689 	ld	(hl+), a
      000D83 AF                    3690 	xor	a, a
      000D84 32                    3691 	ld	(hl-), a
      000D85 2B                    3692 	dec	hl
      000D86 7B                    3693 	ld	a, e
      000D87 E6 08                 3694 	and	a, #0x08
      000D89 4F                    3695 	ld	c, a
      000D8A 06 00                 3696 	ld	b, #0x00
      000D8C 3A                    3697 	ld	a, (hl-)
      000D8D B6                    3698 	or	a, (hl)
      000D8E 28 14                 3699 	jr	Z, 00102$
      000D90 F8 03                 3700 	ldhl	sp,	#3
      000D92 3A                    3701 	ld	a, (hl-)
      000D93 B6                    3702 	or	a, (hl)
      000D94 20 0E                 3703 	jr	NZ, 00102$
      000D96 78                    3704 	ld	a, b
      000D97 B1                    3705 	or	a, c
      000D98 20 0A                 3706 	jr	NZ, 00102$
                                   3707 ;src/main.c:223: xDir = 1;
      000D9A 21r93r00              3708 	ld	hl, #_xDir
      000D9D 36 01                 3709 	ld	(hl), #0x01
                                   3710 ;src/main.c:224: yDir = 0;
      000D9F 21r94r00              3711 	ld	hl, #_yDir
      000DA2 36 00                 3712 	ld	(hl), #0x00
      000DA4                       3713 00102$:
                                   3714 ;src/main.c:226: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000DA4 7B                    3715 	ld	a, e
      000DA5 E6 02                 3716 	and	a, #0x02
      000DA7 5F                    3717 	ld	e, a
      000DA8 16 00                 3718 	ld	d, #0x00
      000DAA 7A                    3719 	ld	a, d
      000DAB B3                    3720 	or	a, e
      000DAC 28 14                 3721 	jr	Z, 00106$
      000DAE F8 03                 3722 	ldhl	sp,	#3
      000DB0 3A                    3723 	ld	a, (hl-)
      000DB1 B6                    3724 	or	a, (hl)
      000DB2 20 0E                 3725 	jr	NZ, 00106$
      000DB4 78                    3726 	ld	a, b
      000DB5 B1                    3727 	or	a, c
      000DB6 20 0A                 3728 	jr	NZ, 00106$
                                   3729 ;src/main.c:227: xDir = -1;
      000DB8 21r93r00              3730 	ld	hl, #_xDir
      000DBB 36 FF                 3731 	ld	(hl), #0xff
                                   3732 ;src/main.c:228: yDir = 0;
      000DBD 21r94r00              3733 	ld	hl, #_yDir
      000DC0 36 00                 3734 	ld	(hl), #0x00
      000DC2                       3735 00106$:
                                   3736 ;src/main.c:230: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DC2 F8 03                 3737 	ldhl	sp,	#3
      000DC4 3A                    3738 	ld	a, (hl-)
      000DC5 B6                    3739 	or	a, (hl)
      000DC6 28 13                 3740 	jr	Z, 00110$
      000DC8 7A                    3741 	ld	a, d
      000DC9 B3                    3742 	or	a, e
      000DCA 20 0F                 3743 	jr	NZ, 00110$
      000DCC 2B                    3744 	dec	hl
      000DCD 3A                    3745 	ld	a, (hl-)
      000DCE B6                    3746 	or	a, (hl)
      000DCF 20 0A                 3747 	jr	NZ, 00110$
                                   3748 ;src/main.c:231: xDir = 0;
      000DD1 21r93r00              3749 	ld	hl, #_xDir
      000DD4 36 00                 3750 	ld	(hl), #0x00
                                   3751 ;src/main.c:232: yDir = -1;
      000DD6 21r94r00              3752 	ld	hl, #_yDir
      000DD9 36 FF                 3753 	ld	(hl), #0xff
      000DDB                       3754 00110$:
                                   3755 ;src/main.c:234: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DDB 78                    3756 	ld	a, b
      000DDC B1                    3757 	or	a, c
      000DDD 28 14                 3758 	jr	Z, 00114$
      000DDF 7A                    3759 	ld	a, d
      000DE0 B3                    3760 	or	a, e
      000DE1 20 10                 3761 	jr	NZ, 00114$
      000DE3 F8 01                 3762 	ldhl	sp,	#1
      000DE5 3A                    3763 	ld	a, (hl-)
      000DE6 B6                    3764 	or	a, (hl)
      000DE7 20 0A                 3765 	jr	NZ, 00114$
                                   3766 ;src/main.c:235: xDir = 0;
      000DE9 21r93r00              3767 	ld	hl, #_xDir
      000DEC 36 00                 3768 	ld	(hl), #0x00
                                   3769 ;src/main.c:236: yDir = 1;
      000DEE 21r94r00              3770 	ld	hl, #_yDir
      000DF1 36 01                 3771 	ld	(hl), #0x01
      000DF3                       3772 00114$:
                                   3773 ;src/main.c:240: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000DF3 F8 03                 3774 	ldhl	sp,	#3
      000DF5 3A                    3775 	ld	a, (hl-)
      000DF6 B6                    3776 	or	a, (hl)
      000DF7 28 0F                 3777 	jr	Z, 00118$
      000DF9 2B                    3778 	dec	hl
      000DFA 3A                    3779 	ld	a, (hl-)
      000DFB B6                    3780 	or	a, (hl)
      000DFC 28 0A                 3781 	jr	Z, 00118$
                                   3782 ;src/main.c:241: xDir = 1;
      000DFE 21r93r00              3783 	ld	hl, #_xDir
      000E01 36 01                 3784 	ld	(hl), #0x01
                                   3785 ;src/main.c:242: yDir = -1;
      000E03 21r94r00              3786 	ld	hl, #_yDir
      000E06 36 FF                 3787 	ld	(hl), #0xff
      000E08                       3788 00118$:
                                   3789 ;src/main.c:244: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000E08 F8 03                 3790 	ldhl	sp,	#3
      000E0A 3A                    3791 	ld	a, (hl-)
      000E0B B6                    3792 	or	a, (hl)
      000E0C 28 0E                 3793 	jr	Z, 00121$
      000E0E 7A                    3794 	ld	a, d
      000E0F B3                    3795 	or	a, e
      000E10 28 0A                 3796 	jr	Z, 00121$
                                   3797 ;src/main.c:245: xDir = -1;
      000E12 21r93r00              3798 	ld	hl, #_xDir
      000E15 36 FF                 3799 	ld	(hl), #0xff
                                   3800 ;src/main.c:246: yDir = -1;
      000E17 21r94r00              3801 	ld	hl, #_yDir
      000E1A 36 FF                 3802 	ld	(hl), #0xff
      000E1C                       3803 00121$:
                                   3804 ;src/main.c:248: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000E1C 78                    3805 	ld	a, b
      000E1D B1                    3806 	or	a, c
      000E1E 28 10                 3807 	jr	Z, 00124$
      000E20 F8 01                 3808 	ldhl	sp,	#1
      000E22 3A                    3809 	ld	a, (hl-)
      000E23 B6                    3810 	or	a, (hl)
      000E24 28 0A                 3811 	jr	Z, 00124$
                                   3812 ;src/main.c:249: xDir = 1;
      000E26 21r93r00              3813 	ld	hl, #_xDir
      000E29 36 01                 3814 	ld	(hl), #0x01
                                   3815 ;src/main.c:250: yDir = 1;
      000E2B 21r94r00              3816 	ld	hl, #_yDir
      000E2E 36 01                 3817 	ld	(hl), #0x01
      000E30                       3818 00124$:
                                   3819 ;src/main.c:252: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000E30 78                    3820 	ld	a, b
      000E31 B1                    3821 	or	a, c
      000E32 28 0E                 3822 	jr	Z, 00127$
      000E34 7A                    3823 	ld	a, d
      000E35 B3                    3824 	or	a, e
      000E36 28 0A                 3825 	jr	Z, 00127$
                                   3826 ;src/main.c:253: xDir = -1;
      000E38 21r93r00              3827 	ld	hl, #_xDir
      000E3B 36 FF                 3828 	ld	(hl), #0xff
                                   3829 ;src/main.c:254: yDir = 1;
      000E3D 21r94r00              3830 	ld	hl, #_yDir
      000E40 36 01                 3831 	ld	(hl), #0x01
      000E42                       3832 00127$:
                                   3833 ;src/main.c:259: if (xDir == 0 && yDir == 0) {
      000E42 FAr93r00              3834 	ld	a, (#_xDir)
      000E45 B7                    3835 	or	a, a
      000E46 20 07                 3836 	jr	NZ, 00130$
      000E48 FAr94r00              3837 	ld	a, (#_yDir)
      000E4B B7                    3838 	or	a, a
                                   3839 ;src/main.c:260: return;
      000E4C CAr98r0F              3840 	jp	Z,00195$
      000E4F                       3841 00130$:
                                   3842 ;src/main.c:292: if (xDir == 0 && yDir > 0) {
      000E4F 21r94r00              3843 	ld	hl, #_yDir
      000E52 5E                    3844 	ld	e, (hl)
      000E53 AF                    3845 	xor	a, a
      000E54 57                    3846 	ld	d, a
      000E55 96                    3847 	sub	a, (hl)
      000E56 CB 7B                 3848 	bit	7, e
      000E58 28 07                 3849 	jr	Z, 00387$
      000E5A CB 7A                 3850 	bit	7, d
      000E5C 20 08                 3851 	jr	NZ, 00388$
      000E5E BF                    3852 	cp	a, a
      000E5F 18 05                 3853 	jr	00388$
      000E61                       3854 00387$:
      000E61 CB 7A                 3855 	bit	7, d
      000E63 28 01                 3856 	jr	Z, 00388$
      000E65 37                    3857 	scf
      000E66                       3858 00388$:
      000E66 3E 00                 3859 	ld	a, #0x00
      000E68 17                    3860 	rla
      000E69 4F                    3861 	ld	c, a
      000E6A FAr93r00              3862 	ld	a, (#_xDir)
      000E6D B7                    3863 	or	a,a
      000E6E 20 1A                 3864 	jr	NZ, 00160$
      000E70 B1                    3865 	or	a,c
      000E71 28 17                 3866 	jr	Z, 00160$
                                   3867 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E73 21r02r00              3868 	ld	hl, #(_shadow_OAM + 2)
      000E76 36 00                 3869 	ld	(hl), #0x00
      000E78 21r06r00              3870 	ld	hl, #(_shadow_OAM + 6)
      000E7B 36 02                 3871 	ld	(hl), #0x02
                                   3872 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000E7D 21r03r00              3873 	ld	hl, #(_shadow_OAM + 3)
      000E80 36 40                 3874 	ld	(hl), #0x40
      000E82 21r07r00              3875 	ld	hl, #(_shadow_OAM + 7)
      000E85 36 40                 3876 	ld	(hl), #0x40
                                   3877 ;src/main.c:296: set_sprite_prop(1, S_FLIPY); 
      000E87 C3r98r0F              3878 	jp	00195$
      000E8A                       3879 00160$:
                                   3880 ;src/main.c:298: else if (xDir == 0 && yDir < 0) {
      000E8A FAr94r00              3881 	ld	a, (#_yDir)
      000E8D 07                    3882 	rlca
      000E8E E6 01                 3883 	and	a,#0x01
      000E90 F8 02                 3884 	ldhl	sp,	#2
      000E92 77                    3885 	ld	(hl), a
      000E93 FAr93r00              3886 	ld	a, (#_xDir)
      000E96 B7                    3887 	or	a, a
      000E97 20 1D                 3888 	jr	NZ, 00156$
      000E99 F8 02                 3889 	ldhl	sp,	#2
      000E9B 7E                    3890 	ld	a, (hl)
      000E9C B7                    3891 	or	a, a
      000E9D 28 17                 3892 	jr	Z, 00156$
                                   3893 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E9F 21r02r00              3894 	ld	hl, #(_shadow_OAM + 2)
      000EA2 36 00                 3895 	ld	(hl), #0x00
      000EA4 21r06r00              3896 	ld	hl, #(_shadow_OAM + 6)
      000EA7 36 02                 3897 	ld	(hl), #0x02
                                   3898 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EA9 21r03r00              3899 	ld	hl, #(_shadow_OAM + 3)
      000EAC 36 00                 3900 	ld	(hl), #0x00
      000EAE 21r07r00              3901 	ld	hl, #(_shadow_OAM + 7)
      000EB1 36 00                 3902 	ld	(hl), #0x00
                                   3903 ;src/main.c:302: set_sprite_prop(1, 0); 
      000EB3 C3r98r0F              3904 	jp	00195$
      000EB6                       3905 00156$:
                                   3906 ;src/main.c:304: else if (xDir > 0 && yDir == 0) {
      000EB6 21r93r00              3907 	ld	hl, #_xDir
      000EB9 5E                    3908 	ld	e, (hl)
      000EBA AF                    3909 	xor	a, a
      000EBB 57                    3910 	ld	d, a
      000EBC 96                    3911 	sub	a, (hl)
      000EBD CB 7B                 3912 	bit	7, e
      000EBF 28 07                 3913 	jr	Z, 00389$
      000EC1 CB 7A                 3914 	bit	7, d
      000EC3 20 08                 3915 	jr	NZ, 00390$
      000EC5 BF                    3916 	cp	a, a
      000EC6 18 05                 3917 	jr	00390$
      000EC8                       3918 00389$:
      000EC8 CB 7A                 3919 	bit	7, d
      000ECA 28 01                 3920 	jr	Z, 00390$
      000ECC 37                    3921 	scf
      000ECD                       3922 00390$:
      000ECD 3E 00                 3923 	ld	a, #0x00
      000ECF 17                    3924 	rla
      000ED0 47                    3925 	ld	b, a
      000ED1 B7                    3926 	or	a, a
      000ED2 28 1D                 3927 	jr	Z, 00152$
      000ED4 FAr94r00              3928 	ld	a, (#_yDir)
      000ED7 B7                    3929 	or	a, a
      000ED8 20 17                 3930 	jr	NZ, 00152$
                                   3931 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000EDA 21r02r00              3932 	ld	hl, #(_shadow_OAM + 2)
      000EDD 36 04                 3933 	ld	(hl), #0x04
      000EDF 21r06r00              3934 	ld	hl, #(_shadow_OAM + 6)
      000EE2 36 06                 3935 	ld	(hl), #0x06
                                   3936 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EE4 21r03r00              3937 	ld	hl, #(_shadow_OAM + 3)
      000EE7 36 00                 3938 	ld	(hl), #0x00
      000EE9 21r07r00              3939 	ld	hl, #(_shadow_OAM + 7)
      000EEC 36 00                 3940 	ld	(hl), #0x00
                                   3941 ;src/main.c:308: set_sprite_prop(1, 0); 
      000EEE C3r98r0F              3942 	jp	00195$
      000EF1                       3943 00152$:
                                   3944 ;src/main.c:310: else if (xDir < 0 && yDir == 0) {
      000EF1 FAr93r00              3945 	ld	a, (#_xDir)
      000EF4 07                    3946 	rlca
      000EF5 E6 01                 3947 	and	a,#0x01
      000EF7 F8 03                 3948 	ldhl	sp,	#3
      000EF9 77                    3949 	ld	(hl), a
      000EFA 7E                    3950 	ld	a, (hl)
      000EFB B7                    3951 	or	a, a
      000EFC 28 1D                 3952 	jr	Z, 00148$
      000EFE FAr94r00              3953 	ld	a, (#_yDir)
      000F01 B7                    3954 	or	a, a
      000F02 20 17                 3955 	jr	NZ, 00148$
                                   3956 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F04 21r02r00              3957 	ld	hl, #(_shadow_OAM + 2)
      000F07 36 04                 3958 	ld	(hl), #0x04
      000F09 21r06r00              3959 	ld	hl, #(_shadow_OAM + 6)
      000F0C 36 06                 3960 	ld	(hl), #0x06
                                   3961 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F0E 21r03r00              3962 	ld	hl, #(_shadow_OAM + 3)
      000F11 36 20                 3963 	ld	(hl), #0x20
      000F13 21r07r00              3964 	ld	hl, #(_shadow_OAM + 7)
      000F16 36 20                 3965 	ld	(hl), #0x20
                                   3966 ;src/main.c:314: set_sprite_prop(1, S_FLIPX); 
      000F18 C3r98r0F              3967 	jp	00195$
      000F1B                       3968 00148$:
                                   3969 ;src/main.c:316: else if (xDir > 0 && yDir < 0) {
      000F1B 78                    3970 	ld	a, b
      000F1C B7                    3971 	or	a, a
      000F1D 28 1C                 3972 	jr	Z, 00144$
      000F1F F8 02                 3973 	ldhl	sp,	#2
      000F21 7E                    3974 	ld	a, (hl)
      000F22 B7                    3975 	or	a, a
      000F23 28 16                 3976 	jr	Z, 00144$
                                   3977 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F25 21r02r00              3978 	ld	hl, #(_shadow_OAM + 2)
      000F28 36 08                 3979 	ld	(hl), #0x08
      000F2A 21r06r00              3980 	ld	hl, #(_shadow_OAM + 6)
      000F2D 36 0A                 3981 	ld	(hl), #0x0a
                                   3982 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F2F 21r03r00              3983 	ld	hl, #(_shadow_OAM + 3)
      000F32 36 00                 3984 	ld	(hl), #0x00
      000F34 21r07r00              3985 	ld	hl, #(_shadow_OAM + 7)
      000F37 36 00                 3986 	ld	(hl), #0x00
                                   3987 ;src/main.c:320: set_sprite_prop(1, 0); 
      000F39 18 5D                 3988 	jr	00195$
      000F3B                       3989 00144$:
                                   3990 ;src/main.c:322: else if (xDir > 0 && yDir > 0) {
      000F3B 78                    3991 	ld	a, b
      000F3C B7                    3992 	or	a, a
      000F3D 28 1A                 3993 	jr	Z, 00140$
      000F3F 79                    3994 	ld	a, c
      000F40 B7                    3995 	or	a, a
      000F41 28 16                 3996 	jr	Z, 00140$
                                   3997 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F43 21r02r00              3998 	ld	hl, #(_shadow_OAM + 2)
      000F46 36 08                 3999 	ld	(hl), #0x08
      000F48 21r06r00              4000 	ld	hl, #(_shadow_OAM + 6)
      000F4B 36 0A                 4001 	ld	(hl), #0x0a
                                   4002 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F4D 21r03r00              4003 	ld	hl, #(_shadow_OAM + 3)
      000F50 36 40                 4004 	ld	(hl), #0x40
      000F52 21r07r00              4005 	ld	hl, #(_shadow_OAM + 7)
      000F55 36 40                 4006 	ld	(hl), #0x40
                                   4007 ;src/main.c:326: set_sprite_prop(1, S_FLIPY); 
      000F57 18 3F                 4008 	jr	00195$
      000F59                       4009 00140$:
                                   4010 ;src/main.c:328: else if (xDir < 0 && yDir > 0) {
      000F59 F8 03                 4011 	ldhl	sp,	#3
      000F5B 7E                    4012 	ld	a, (hl)
      000F5C B7                    4013 	or	a, a
      000F5D 28 1A                 4014 	jr	Z, 00136$
      000F5F 79                    4015 	ld	a, c
      000F60 B7                    4016 	or	a, a
      000F61 28 16                 4017 	jr	Z, 00136$
                                   4018 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F63 21r02r00              4019 	ld	hl, #(_shadow_OAM + 2)
      000F66 36 08                 4020 	ld	(hl), #0x08
      000F68 21r06r00              4021 	ld	hl, #(_shadow_OAM + 6)
      000F6B 36 0A                 4022 	ld	(hl), #0x0a
                                   4023 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F6D 21r03r00              4024 	ld	hl, #(_shadow_OAM + 3)
      000F70 36 60                 4025 	ld	(hl), #0x60
      000F72 21r07r00              4026 	ld	hl, #(_shadow_OAM + 7)
      000F75 36 60                 4027 	ld	(hl), #0x60
                                   4028 ;src/main.c:332: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000F77 18 1F                 4029 	jr	00195$
      000F79                       4030 00136$:
                                   4031 ;src/main.c:334: else if (xDir < 0 && yDir < 0) {
      000F79 F8 03                 4032 	ldhl	sp,	#3
      000F7B 7E                    4033 	ld	a, (hl)
      000F7C B7                    4034 	or	a, a
      000F7D 28 19                 4035 	jr	Z, 00195$
      000F7F 2B                    4036 	dec	hl
      000F80 7E                    4037 	ld	a, (hl)
      000F81 B7                    4038 	or	a, a
      000F82 28 14                 4039 	jr	Z, 00195$
                                   4040 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F84 21r02r00              4041 	ld	hl, #(_shadow_OAM + 2)
      000F87 36 08                 4042 	ld	(hl), #0x08
      000F89 21r06r00              4043 	ld	hl, #(_shadow_OAM + 6)
      000F8C 36 0A                 4044 	ld	(hl), #0x0a
                                   4045 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F8E 21r03r00              4046 	ld	hl, #(_shadow_OAM + 3)
      000F91 36 20                 4047 	ld	(hl), #0x20
      000F93 21r07r00              4048 	ld	hl, #(_shadow_OAM + 7)
      000F96 36 20                 4049 	ld	(hl), #0x20
                                   4050 ;src/main.c:338: set_sprite_prop(1, S_FLIPX); 
      000F98                       4051 00195$:
                                   4052 ;src/main.c:340: }
      000F98 E8 04                 4053 	add	sp, #4
      000F9A C9                    4054 	ret
                                   4055 ;src/main.c:374: void playSound(uint8_t type) {
                                   4056 ;	---------------------------------
                                   4057 ; Function playSound
                                   4058 ; ---------------------------------
      000F9B                       4059 _playSound::
                                   4060 ;src/main.c:375: if (type == 20) { //singlegun
      000F9B F8 02                 4061 	ldhl	sp,	#2
      000F9D 7E                    4062 	ld	a, (hl)
      000F9E D6 14                 4063 	sub	a, #0x14
      000FA0 20 13                 4064 	jr	NZ, 00102$
                                   4065 ;src/main.c:376: NR10_REG = 0x00;
      000FA2 AF                    4066 	xor	a, a
      000FA3 E0r00                 4067 	ldh	(_NR10_REG + 0), a
                                   4068 ;src/main.c:377: NR11_REG = 0x81;
      000FA5 3E 81                 4069 	ld	a, #0x81
      000FA7 E0r00                 4070 	ldh	(_NR11_REG + 0), a
                                   4071 ;src/main.c:378: NR12_REG = 0x43;
      000FA9 3E 43                 4072 	ld	a, #0x43
      000FAB E0r00                 4073 	ldh	(_NR12_REG + 0), a
                                   4074 ;src/main.c:379: NR13_REG = 0X00;//0x6D;
      000FAD AF                    4075 	xor	a, a
      000FAE E0r00                 4076 	ldh	(_NR13_REG + 0), a
                                   4077 ;src/main.c:380: NR14_REG = 0x86;
      000FB0 3E 86                 4078 	ld	a, #0x86
      000FB2 E0r00                 4079 	ldh	(_NR14_REG + 0), a
                                   4080 ;src/main.c:381: return;
      000FB4 C9                    4081 	ret
      000FB5                       4082 00102$:
                                   4083 ;src/main.c:383: if (type == 23) {
      000FB5 F8 02                 4084 	ldhl	sp,	#2
      000FB7 7E                    4085 	ld	a, (hl)
      000FB8 D6 17                 4086 	sub	a, #0x17
      000FBA 20 12                 4087 	jr	NZ, 00104$
                                   4088 ;src/main.c:384: NR10_REG = 0x00;
      000FBC AF                    4089 	xor	a, a
      000FBD E0r00                 4090 	ldh	(_NR10_REG + 0), a
                                   4091 ;src/main.c:385: NR11_REG = 0x81;
      000FBF 3E 81                 4092 	ld	a, #0x81
      000FC1 E0r00                 4093 	ldh	(_NR11_REG + 0), a
                                   4094 ;src/main.c:386: NR12_REG = 0x53;
      000FC3 3E 53                 4095 	ld	a, #0x53
      000FC5 E0r00                 4096 	ldh	(_NR12_REG + 0), a
                                   4097 ;src/main.c:387: NR13_REG = 0X00;//0x6D;
      000FC7 AF                    4098 	xor	a, a
      000FC8 E0r00                 4099 	ldh	(_NR13_REG + 0), a
                                   4100 ;src/main.c:388: NR14_REG = 0x86;
      000FCA 3E 86                 4101 	ld	a, #0x86
      000FCC E0r00                 4102 	ldh	(_NR14_REG + 0), a
      000FCE                       4103 00104$:
                                   4104 ;src/main.c:390: if (type == 26) {
      000FCE F8 02                 4105 	ldhl	sp,	#2
      000FD0 7E                    4106 	ld	a, (hl)
      000FD1 D6 1A                 4107 	sub	a, #0x1a
      000FD3 20 13                 4108 	jr	NZ, 00106$
                                   4109 ;src/main.c:391: NR10_REG = 0x00;
      000FD5 AF                    4110 	xor	a, a
      000FD6 E0r00                 4111 	ldh	(_NR10_REG + 0), a
                                   4112 ;src/main.c:392: NR11_REG = 0x89;
      000FD8 3E 89                 4113 	ld	a, #0x89
      000FDA E0r00                 4114 	ldh	(_NR11_REG + 0), a
                                   4115 ;src/main.c:393: NR12_REG = 0x55;
      000FDC 3E 55                 4116 	ld	a, #0x55
      000FDE E0r00                 4117 	ldh	(_NR12_REG + 0), a
                                   4118 ;src/main.c:394: NR13_REG = 0x70;//0Xbe;//0x6D;
      000FE0 3E 70                 4119 	ld	a, #0x70
      000FE2 E0r00                 4120 	ldh	(_NR13_REG + 0), a
                                   4121 ;src/main.c:395: NR14_REG = 0x84;
      000FE4 3E 84                 4122 	ld	a, #0x84
      000FE6 E0r00                 4123 	ldh	(_NR14_REG + 0), a
      000FE8                       4124 00106$:
                                   4125 ;src/main.c:397: if (type == 0) {  // explosion
      000FE8 F8 02                 4126 	ldhl	sp,	#2
      000FEA 7E                    4127 	ld	a, (hl)
      000FEB B7                    4128 	or	a, a
      000FEC C0                    4129 	ret	NZ
                                   4130 ;src/main.c:398: NR41_REG = 0x20;  
      000FED 3E 20                 4131 	ld	a, #0x20
      000FEF E0r00                 4132 	ldh	(_NR41_REG + 0), a
                                   4133 ;src/main.c:399: NR42_REG = 0xa2;//0xa3;  
      000FF1 3E A2                 4134 	ld	a, #0xa2
      000FF3 E0r00                 4135 	ldh	(_NR42_REG + 0), a
                                   4136 ;src/main.c:400: NR43_REG = 0x57;  
      000FF5 3E 57                 4137 	ld	a, #0x57
      000FF7 E0r00                 4138 	ldh	(_NR43_REG + 0), a
                                   4139 ;src/main.c:401: NR44_REG = 0x80;  
      000FF9 3E 80                 4140 	ld	a, #0x80
      000FFB E0r00                 4141 	ldh	(_NR44_REG + 0), a
                                   4142 ;src/main.c:407: }
      000FFD C9                    4143 	ret
                                   4144 ;src/main.c:409: void initEnemies(uint8_t loadSprites) {
                                   4145 ;	---------------------------------
                                   4146 ; Function initEnemies
                                   4147 ; ---------------------------------
      000FFE                       4148 _initEnemies::
      000FFE E8 F9                 4149 	add	sp, #-7
                                   4150 ;src/main.c:411: if (loadSprites) {
      001000 F8 09                 4151 	ldhl	sp,	#9
      001002 7E                    4152 	ld	a, (hl)
      001003 B7                    4153 	or	a, a
      001004 28 1A                 4154 	jr	Z, 00102$
                                   4155 ;src/main.c:413: set_sprite_data(0x40, 5, enemy1);
      001006 11r18r05              4156 	ld	de, #_enemy1
      001009 D5                    4157 	push	de
      00100A 21 40 05              4158 	ld	hl, #0x540
      00100D E5                    4159 	push	hl
      00100E CDr00r00              4160 	call	_set_sprite_data
      001011 E8 04                 4161 	add	sp, #4
                                   4162 ;src/main.c:414: set_sprite_data(0x50, 8, largeenemies);
      001013 11r68r05              4163 	ld	de, #_largeenemies
      001016 D5                    4164 	push	de
      001017 21 50 08              4165 	ld	hl, #0x850
      00101A E5                    4166 	push	hl
      00101B CDr00r00              4167 	call	_set_sprite_data
      00101E E8 04                 4168 	add	sp, #4
      001020                       4169 00102$:
                                   4170 ;src/main.c:417: struct Enemy *eptr = enemies;
      001020 01r5Ar00              4171 	ld	bc, #_enemies+0
                                   4172 ;src/main.c:419: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001023 F8 06                 4173 	ldhl	sp,	#6
      001025 36 00                 4174 	ld	(hl), #0x00
      001027                       4175 00116$:
      001027 21r8Er0B              4176 	ld	hl, #_ENEMYCOUNT
      00102A 5E                    4177 	ld	e, (hl)
      00102B F8 06                 4178 	ldhl	sp,	#6
      00102D 7E                    4179 	ld	a, (hl)
      00102E 93                    4180 	sub	a, e
      00102F D2r66r11              4181 	jp	NC, 00118$
                                   4182 ;src/main.c:420: if (eptr->alive == 0) {
      001032 21 09 00              4183 	ld	hl, #0x0009
      001035 09                    4184 	add	hl, bc
      001036 7E                    4185 	ld	a, (hl)
      001037 B7                    4186 	or	a, a
      001038 C2r5Ar11              4187 	jp	NZ, 00107$
                                   4188 ;src/main.c:422: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      00103B C5                    4189 	push	bc
      00103C CDr00r00              4190 	call	_rand
      00103F 7B                    4191 	ld	a, e
      001040 C1                    4192 	pop	bc
      001041 21r17r05              4193 	ld	hl, #_enemyOptionCount
      001044 56                    4194 	ld	d, (hl)
      001045 C5                    4195 	push	bc
      001046 D5                    4196 	push	de
      001047 33                    4197 	inc	sp
      001048 F5                    4198 	push	af
      001049 33                    4199 	inc	sp
      00104A CDr00r00              4200 	call	__moduchar
      00104D E1                    4201 	pop	hl
      00104E 7B                    4202 	ld	a, e
      00104F C1                    4203 	pop	bc
                                   4204 ;src/main.c:424: (*eptr) = enemyOptions[enemyInd];
      001050 5F                    4205 	ld	e, a
      001051 16 00                 4206 	ld	d, #0x00
      001053 6B                    4207 	ld	l, e
      001054 62                    4208 	ld	h, d
      001055 29                    4209 	add	hl, hl
      001056 29                    4210 	add	hl, hl
      001057 29                    4211 	add	hl, hl
      001058 19                    4212 	add	hl, de
      001059 29                    4213 	add	hl, hl
      00105A 11r00r00              4214 	ld	de, #_enemyOptions
      00105D 19                    4215 	add	hl, de
      00105E 59                    4216 	ld	e, c
      00105F 50                    4217 	ld	d, b
      001060 C5                    4218 	push	bc
      001061 01 12 00              4219 	ld	bc, #0x12
      001064 C5                    4220 	push	bc
      001065 E5                    4221 	push	hl
      001066 D5                    4222 	push	de
      001067 CDr00r00              4223 	call	___memcpy
      00106A E8 06                 4224 	add	sp, #6
      00106C CDr00r00              4225 	call	_rand
      00106F 7B                    4226 	ld	a, e
      001070 C1                    4227 	pop	bc
      001071 E6 07                 4228 	and	a, #0x07
      001073 F8 05                 4229 	ldhl	sp,	#5
      001075 77                    4230 	ld	(hl), a
                                   4231 ;src/main.c:427: eptr->x = xSpawnPositions[posIndex];
      001076 11r8Fr0B              4232 	ld	de, #_xSpawnPositions
      001079 6E                    4233 	ld	l, (hl)
      00107A 26 00                 4234 	ld	h, #0x00
      00107C 19                    4235 	add	hl, de
      00107D 5D                    4236 	ld	e, l
      00107E 54                    4237 	ld	d, h
      00107F 1A                    4238 	ld	a, (de)
      001080 5F                    4239 	ld	e, a
      001081 16 00                 4240 	ld	d, #0x00
      001083 69                    4241 	ld	l, c
      001084 60                    4242 	ld	h, b
      001085 7B                    4243 	ld	a, e
      001086 22                    4244 	ld	(hl+), a
      001087 72                    4245 	ld	(hl), d
                                   4246 ;src/main.c:428: eptr->y = ySpawnPositions[posIndex];
      001088 21 02 00              4247 	ld	hl, #0x0002
      00108B 09                    4248 	add	hl, bc
      00108C 33                    4249 	inc	sp
      00108D 33                    4250 	inc	sp
      00108E E5                    4251 	push	hl
      00108F 11r97r0B              4252 	ld	de, #_ySpawnPositions
      001092 F8 05                 4253 	ldhl	sp,	#5
      001094 6E                    4254 	ld	l, (hl)
      001095 26 00                 4255 	ld	h, #0x00
      001097 19                    4256 	add	hl, de
      001098 5D                    4257 	ld	e, l
      001099 54                    4258 	ld	d, h
      00109A 1A                    4259 	ld	a, (de)
      00109B F8 04                 4260 	ldhl	sp,	#4
      00109D 22                    4261 	ld	(hl+), a
      00109E AF                    4262 	xor	a, a
      00109F 32                    4263 	ld	(hl-), a
      0010A0 D1                    4264 	pop	de
      0010A1 D5                    4265 	push	de
      0010A2 2A                    4266 	ld	a, (hl+)
      0010A3 12                    4267 	ld	(de), a
      0010A4 13                    4268 	inc	de
      0010A5 7E                    4269 	ld	a, (hl)
      0010A6 12                    4270 	ld	(de), a
                                   4271 ;src/main.c:430: if (eptr->spriteCount == 1) {
      0010A7 21 08 00              4272 	ld	hl, #0x0008
      0010AA 09                    4273 	add	hl, bc
      0010AB 7E                    4274 	ld	a, (hl)
      0010AC F8 05                 4275 	ldhl	sp,	#5
      0010AE 77                    4276 	ld	(hl), a
                                   4277 ;src/main.c:431: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010AF 21 06 00              4278 	ld	hl, #0x0006
      0010B2 09                    4279 	add	hl, bc
      0010B3 5D                    4280 	ld	e, l
      0010B4 54                    4281 	ld	d, h
      0010B5 F8 06                 4282 	ldhl	sp,	#6
      0010B7 6E                    4283 	ld	l, (hl)
                                   4284 ;	spillPairReg hl
                                   4285 ;	spillPairReg hl
      0010B8 1A                    4286 	ld	a, (de)
      0010B9 5F                    4287 	ld	e, a
      0010BA 7D                    4288 	ld	a, l
      0010BB 87                    4289 	add	a, a
      0010BC F8 02                 4290 	ldhl	sp,	#2
      0010BE 77                    4291 	ld	(hl), a
      0010BF 2A                    4292 	ld	a, (hl+)
      0010C0 C6 0A                 4293 	add	a, #0x0a
                                   4294 ;src/main.c:430: if (eptr->spriteCount == 1) {
      0010C2 22                    4295 	ld	(hl+), a
      0010C3 23                    4296 	inc	hl
      0010C4 7E                    4297 	ld	a, (hl)
      0010C5 3D                    4298 	dec	a
      0010C6 20 2D                 4299 	jr	NZ, 00104$
                                   4300 ;src/main.c:431: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010C8 F8 03                 4301 	ldhl	sp,	#3
      0010CA 56                    4302 	ld	d, (hl)
                                   4303 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010CB 6A                    4304 	ld	l, d
                                   4305 ;	spillPairReg hl
                                   4306 ;	spillPairReg hl
      0010CC 26 00                 4307 	ld	h, #0x00
                                   4308 ;	spillPairReg hl
                                   4309 ;	spillPairReg hl
      0010CE 29                    4310 	add	hl, hl
      0010CF 29                    4311 	add	hl, hl
      0010D0 D5                    4312 	push	de
      0010D1 11r00r00              4313 	ld	de, #_shadow_OAM
      0010D4 19                    4314 	add	hl, de
      0010D5 23                    4315 	inc	hl
      0010D6 23                    4316 	inc	hl
      0010D7 D1                    4317 	pop	de
      0010D8 73                    4318 	ld	(hl), e
                                   4319 ;src/main.c:432: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010D9 D1                    4320 	pop	de
      0010DA D5                    4321 	push	de
      0010DB 1A                    4322 	ld	a, (de)
      0010DC F8 05                 4323 	ldhl	sp,	#5
      0010DE 32                    4324 	ld	(hl-), a
      0010DF 0A                    4325 	ld	a, (bc)
      0010E0 32                    4326 	ld	(hl-), a
                                   4327 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0010E1 6E                    4328 	ld	l, (hl)
                                   4329 ;	spillPairReg hl
                                   4330 ;	spillPairReg hl
      0010E2 26 00                 4331 	ld	h, #0x00
                                   4332 ;	spillPairReg hl
                                   4333 ;	spillPairReg hl
      0010E4 29                    4334 	add	hl, hl
      0010E5 29                    4335 	add	hl, hl
      0010E6 11r00r00              4336 	ld	de, #_shadow_OAM
      0010E9 19                    4337 	add	hl, de
      0010EA 5D                    4338 	ld	e, l
      0010EB 54                    4339 	ld	d, h
                                   4340 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0010EC F8 05                 4341 	ldhl	sp,	#5
      0010EE 3A                    4342 	ld	a, (hl-)
      0010EF 12                    4343 	ld	(de), a
      0010F0 13                    4344 	inc	de
      0010F1 7E                    4345 	ld	a, (hl)
      0010F2 12                    4346 	ld	(de), a
                                   4347 ;src/main.c:432: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010F3 18 65                 4348 	jr	00107$
      0010F5                       4349 00104$:
                                   4350 ;src/main.c:435: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010F5 F8 03                 4351 	ldhl	sp,	#3
      0010F7 56                    4352 	ld	d, (hl)
                                   4353 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010F8 6A                    4354 	ld	l, d
                                   4355 ;	spillPairReg hl
                                   4356 ;	spillPairReg hl
      0010F9 26 00                 4357 	ld	h, #0x00
                                   4358 ;	spillPairReg hl
                                   4359 ;	spillPairReg hl
      0010FB 29                    4360 	add	hl, hl
      0010FC 29                    4361 	add	hl, hl
      0010FD D5                    4362 	push	de
      0010FE 11r00r00              4363 	ld	de, #_shadow_OAM
      001101 19                    4364 	add	hl, de
      001102 23                    4365 	inc	hl
      001103 23                    4366 	inc	hl
      001104 D1                    4367 	pop	de
      001105 73                    4368 	ld	(hl), e
                                   4369 ;src/main.c:436: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001106 D1                    4370 	pop	de
      001107 D5                    4371 	push	de
      001108 1A                    4372 	ld	a, (de)
      001109 F8 04                 4373 	ldhl	sp,	#4
      00110B 22                    4374 	ld	(hl+), a
      00110C 0A                    4375 	ld	a, (bc)
      00110D 32                    4376 	ld	(hl-), a
      00110E 2B                    4377 	dec	hl
      00110F 5E                    4378 	ld	e, (hl)
                                   4379 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001110 26 00                 4380 	ld	h, #0x00
                                   4381 ;	spillPairReg hl
                                   4382 ;	spillPairReg hl
      001112 6B                    4383 	ld	l, e
      001113 29                    4384 	add	hl, hl
      001114 29                    4385 	add	hl, hl
      001115 11r00r00              4386 	ld	de, #_shadow_OAM
      001118 19                    4387 	add	hl, de
      001119 5D                    4388 	ld	e, l
      00111A 54                    4389 	ld	d, h
                                   4390 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00111B F8 04                 4391 	ldhl	sp,	#4
      00111D 2A                    4392 	ld	a, (hl+)
      00111E 12                    4393 	ld	(de), a
      00111F 13                    4394 	inc	de
      001120 7E                    4395 	ld	a, (hl)
      001121 12                    4396 	ld	(de), a
                                   4397 ;src/main.c:438: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      001122 21 07 00              4398 	ld	hl, #0x0007
      001125 09                    4399 	add	hl, bc
      001126 5E                    4400 	ld	e, (hl)
      001127 F8 02                 4401 	ldhl	sp,	#2
      001129 7E                    4402 	ld	a, (hl)
      00112A C6 0B                 4403 	add	a, #0x0b
      00112C F8 05                 4404 	ldhl	sp,	#5
      00112E 77                    4405 	ld	(hl), a
      00112F 56                    4406 	ld	d, (hl)
                                   4407 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001130 6A                    4408 	ld	l, d
                                   4409 ;	spillPairReg hl
                                   4410 ;	spillPairReg hl
      001131 26 00                 4411 	ld	h, #0x00
                                   4412 ;	spillPairReg hl
                                   4413 ;	spillPairReg hl
      001133 29                    4414 	add	hl, hl
      001134 29                    4415 	add	hl, hl
      001135 D5                    4416 	push	de
      001136 11r00r00              4417 	ld	de, #_shadow_OAM
      001139 19                    4418 	add	hl, de
      00113A 23                    4419 	inc	hl
      00113B 23                    4420 	inc	hl
      00113C D1                    4421 	pop	de
      00113D 73                    4422 	ld	(hl), e
                                   4423 ;src/main.c:439: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      00113E D1                    4424 	pop	de
      00113F D5                    4425 	push	de
      001140 1A                    4426 	ld	a, (de)
      001141 F8 04                 4427 	ldhl	sp,	#4
      001143 32                    4428 	ld	(hl-), a
      001144 0A                    4429 	ld	a, (bc)
      001145 22                    4430 	ld	(hl+), a
      001146 23                    4431 	inc	hl
      001147 5E                    4432 	ld	e, (hl)
                                   4433 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001148 26 00                 4434 	ld	h, #0x00
                                   4435 ;	spillPairReg hl
                                   4436 ;	spillPairReg hl
      00114A 6B                    4437 	ld	l, e
      00114B 29                    4438 	add	hl, hl
      00114C 29                    4439 	add	hl, hl
      00114D 11r00r00              4440 	ld	de, #_shadow_OAM
      001150 19                    4441 	add	hl, de
      001151 5D                    4442 	ld	e, l
      001152 54                    4443 	ld	d, h
                                   4444 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001153 F8 04                 4445 	ldhl	sp,	#4
      001155 3A                    4446 	ld	a, (hl-)
      001156 12                    4447 	ld	(de), a
      001157 13                    4448 	inc	de
      001158 7E                    4449 	ld	a, (hl)
      001159 12                    4450 	ld	(de), a
                                   4451 ;src/main.c:439: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      00115A                       4452 00107$:
                                   4453 ;src/main.c:444: eptr++;
      00115A 21 12 00              4454 	ld	hl, #0x0012
      00115D 09                    4455 	add	hl, bc
      00115E 4D                    4456 	ld	c, l
      00115F 44                    4457 	ld	b, h
                                   4458 ;src/main.c:419: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001160 F8 06                 4459 	ldhl	sp,	#6
      001162 34                    4460 	inc	(hl)
      001163 C3r27r10              4461 	jp	00116$
      001166                       4462 00118$:
                                   4463 ;src/main.c:447: }
      001166 E8 07                 4464 	add	sp, #7
      001168 C9                    4465 	ret
                                   4466 ;src/main.c:449: void initEnemy(uint8_t i) {
                                   4467 ;	---------------------------------
                                   4468 ; Function initEnemy
                                   4469 ; ---------------------------------
      001169                       4470 _initEnemy::
      001169 E8 FA                 4471 	add	sp, #-6
                                   4472 ;src/main.c:450: struct Enemy *eptr = enemies + i;
      00116B F8 08                 4473 	ldhl	sp,	#8
      00116D 4E                    4474 	ld	c, (hl)
      00116E 06 00                 4475 	ld	b, #0x00
      001170 69                    4476 	ld	l, c
      001171 60                    4477 	ld	h, b
      001172 29                    4478 	add	hl, hl
      001173 29                    4479 	add	hl, hl
      001174 29                    4480 	add	hl, hl
      001175 09                    4481 	add	hl, bc
      001176 29                    4482 	add	hl, hl
      001177 01r5Ar00              4483 	ld	bc,#_enemies
      00117A 09                    4484 	add	hl,bc
      00117B 4D                    4485 	ld	c, l
      00117C 44                    4486 	ld	b, h
                                   4487 ;src/main.c:452: if (eptr->alive == 0) {
      00117D 21 09 00              4488 	ld	hl, #0x0009
      001180 09                    4489 	add	hl, bc
      001181 7E                    4490 	ld	a, (hl)
      001182 B7                    4491 	or	a, a
      001183 C2rA9r12              4492 	jp	NZ, 00112$
                                   4493 ;src/main.c:454: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001186 C5                    4494 	push	bc
      001187 CDr00r00              4495 	call	_rand
      00118A 7B                    4496 	ld	a, e
      00118B C1                    4497 	pop	bc
      00118C 21r17r05              4498 	ld	hl, #_enemyOptionCount
      00118F 56                    4499 	ld	d, (hl)
      001190 C5                    4500 	push	bc
      001191 D5                    4501 	push	de
      001192 33                    4502 	inc	sp
      001193 F5                    4503 	push	af
      001194 33                    4504 	inc	sp
      001195 CDr00r00              4505 	call	__moduchar
      001198 E1                    4506 	pop	hl
      001199 C1                    4507 	pop	bc
      00119A F8 05                 4508 	ldhl	sp,	#5
      00119C 73                    4509 	ld	(hl), e
                                   4510 ;src/main.c:456: (*eptr) = enemyOptions[enemyInd];
      00119D 5E                    4511 	ld	e, (hl)
      00119E 16 00                 4512 	ld	d, #0x00
      0011A0 6B                    4513 	ld	l, e
      0011A1 62                    4514 	ld	h, d
      0011A2 29                    4515 	add	hl, hl
      0011A3 29                    4516 	add	hl, hl
      0011A4 29                    4517 	add	hl, hl
      0011A5 19                    4518 	add	hl, de
      0011A6 29                    4519 	add	hl, hl
      0011A7 11r00r00              4520 	ld	de, #_enemyOptions
      0011AA 19                    4521 	add	hl, de
      0011AB 59                    4522 	ld	e, c
      0011AC 50                    4523 	ld	d, b
      0011AD C5                    4524 	push	bc
      0011AE 01 12 00              4525 	ld	bc, #0x12
      0011B1 C5                    4526 	push	bc
      0011B2 E5                    4527 	push	hl
      0011B3 D5                    4528 	push	de
      0011B4 CDr00r00              4529 	call	___memcpy
      0011B7 E8 06                 4530 	add	sp, #6
      0011B9 CDr00r00              4531 	call	_rand
      0011BC 7B                    4532 	ld	a, e
      0011BD C1                    4533 	pop	bc
      0011BE E6 07                 4534 	and	a, #0x07
      0011C0 F8 05                 4535 	ldhl	sp,	#5
      0011C2 77                    4536 	ld	(hl), a
                                   4537 ;src/main.c:459: eptr->x = xSpawnPositions[posIndex];
      0011C3 11r8Fr0B              4538 	ld	de, #_xSpawnPositions+0
      0011C6 6E                    4539 	ld	l, (hl)
      0011C7 26 00                 4540 	ld	h, #0x00
      0011C9 19                    4541 	add	hl, de
      0011CA 5D                    4542 	ld	e, l
      0011CB 54                    4543 	ld	d, h
      0011CC 1A                    4544 	ld	a, (de)
      0011CD 5F                    4545 	ld	e, a
      0011CE 16 00                 4546 	ld	d, #0x00
      0011D0 69                    4547 	ld	l, c
      0011D1 60                    4548 	ld	h, b
      0011D2 7B                    4549 	ld	a, e
      0011D3 22                    4550 	ld	(hl+), a
      0011D4 72                    4551 	ld	(hl), d
                                   4552 ;src/main.c:460: eptr->y = ySpawnPositions[posIndex];
      0011D5 21 02 00              4553 	ld	hl, #0x0002
      0011D8 09                    4554 	add	hl, bc
      0011D9 33                    4555 	inc	sp
      0011DA 33                    4556 	inc	sp
      0011DB E5                    4557 	push	hl
      0011DC 11r97r0B              4558 	ld	de, #_ySpawnPositions+0
      0011DF F8 05                 4559 	ldhl	sp,	#5
      0011E1 6E                    4560 	ld	l, (hl)
      0011E2 26 00                 4561 	ld	h, #0x00
      0011E4 19                    4562 	add	hl, de
      0011E5 5D                    4563 	ld	e, l
      0011E6 54                    4564 	ld	d, h
      0011E7 1A                    4565 	ld	a, (de)
      0011E8 F8 04                 4566 	ldhl	sp,	#4
      0011EA 22                    4567 	ld	(hl+), a
      0011EB AF                    4568 	xor	a, a
      0011EC 32                    4569 	ld	(hl-), a
      0011ED D1                    4570 	pop	de
      0011EE D5                    4571 	push	de
      0011EF 2A                    4572 	ld	a, (hl+)
      0011F0 12                    4573 	ld	(de), a
      0011F1 13                    4574 	inc	de
      0011F2 7E                    4575 	ld	a, (hl)
      0011F3 12                    4576 	ld	(de), a
                                   4577 ;src/main.c:462: if (eptr->spriteCount == 1) {
      0011F4 21 08 00              4578 	ld	hl, #0x0008
      0011F7 09                    4579 	add	hl, bc
      0011F8 7E                    4580 	ld	a, (hl)
      0011F9 F8 05                 4581 	ldhl	sp,	#5
      0011FB 77                    4582 	ld	(hl), a
                                   4583 ;src/main.c:463: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0011FC 21 06 00              4584 	ld	hl, #0x0006
      0011FF 09                    4585 	add	hl, bc
      001200 5D                    4586 	ld	e, l
      001201 54                    4587 	ld	d, h
      001202 F8 08                 4588 	ldhl	sp,	#8
      001204 7E                    4589 	ld	a, (hl)
      001205 F5                    4590 	push	af
      001206 1A                    4591 	ld	a, (de)
      001207 5F                    4592 	ld	e, a
      001208 F1                    4593 	pop	af
      001209 87                    4594 	add	a, a
      00120A F8 02                 4595 	ldhl	sp,	#2
      00120C 77                    4596 	ld	(hl), a
      00120D 2A                    4597 	ld	a, (hl+)
      00120E C6 0A                 4598 	add	a, #0x0a
                                   4599 ;src/main.c:462: if (eptr->spriteCount == 1) {
      001210 22                    4600 	ld	(hl+), a
      001211 23                    4601 	inc	hl
      001212 7E                    4602 	ld	a, (hl)
      001213 3D                    4603 	dec	a
      001214 20 31                 4604 	jr	NZ, 00102$
                                   4605 ;src/main.c:463: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      001216 F8 05                 4606 	ldhl	sp,	#5
      001218 7B                    4607 	ld	a, e
      001219 32                    4608 	ld	(hl-), a
      00121A 2B                    4609 	dec	hl
                                   4610 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00121B 6E                    4611 	ld	l, (hl)
                                   4612 ;	spillPairReg hl
                                   4613 ;	spillPairReg hl
      00121C 26 00                 4614 	ld	h, #0x00
                                   4615 ;	spillPairReg hl
                                   4616 ;	spillPairReg hl
      00121E 29                    4617 	add	hl, hl
      00121F 29                    4618 	add	hl, hl
      001220 11r00r00              4619 	ld	de, #_shadow_OAM
      001223 19                    4620 	add	hl, de
      001224 23                    4621 	inc	hl
      001225 23                    4622 	inc	hl
      001226 5D                    4623 	ld	e, l
      001227 54                    4624 	ld	d, h
      001228 F8 05                 4625 	ldhl	sp,	#5
      00122A 7E                    4626 	ld	a, (hl)
      00122B 12                    4627 	ld	(de), a
                                   4628 ;src/main.c:464: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      00122C D1                    4629 	pop	de
      00122D D5                    4630 	push	de
      00122E 1A                    4631 	ld	a, (de)
      00122F 32                    4632 	ld	(hl-), a
      001230 2B                    4633 	dec	hl
      001231 0A                    4634 	ld	a, (bc)
      001232 4F                    4635 	ld	c, a
                                   4636 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001233 6E                    4637 	ld	l, (hl)
                                   4638 ;	spillPairReg hl
                                   4639 ;	spillPairReg hl
      001234 26 00                 4640 	ld	h, #0x00
                                   4641 ;	spillPairReg hl
                                   4642 ;	spillPairReg hl
      001236 29                    4643 	add	hl, hl
      001237 29                    4644 	add	hl, hl
      001238 11r00r00              4645 	ld	de, #_shadow_OAM
      00123B 19                    4646 	add	hl, de
      00123C 5D                    4647 	ld	e, l
      00123D 54                    4648 	ld	d, h
                                   4649 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00123E F8 05                 4650 	ldhl	sp,	#5
      001240 7E                    4651 	ld	a, (hl)
      001241 12                    4652 	ld	(de), a
      001242 13                    4653 	inc	de
      001243 79                    4654 	ld	a, c
      001244 12                    4655 	ld	(de), a
                                   4656 ;src/main.c:464: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001245 18 62                 4657 	jr	00112$
      001247                       4658 00102$:
                                   4659 ;src/main.c:467: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      001247 F8 03                 4660 	ldhl	sp,	#3
      001249 56                    4661 	ld	d, (hl)
                                   4662 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00124A 6A                    4663 	ld	l, d
                                   4664 ;	spillPairReg hl
                                   4665 ;	spillPairReg hl
      00124B 26 00                 4666 	ld	h, #0x00
                                   4667 ;	spillPairReg hl
                                   4668 ;	spillPairReg hl
      00124D 29                    4669 	add	hl, hl
      00124E 29                    4670 	add	hl, hl
      00124F D5                    4671 	push	de
      001250 11r00r00              4672 	ld	de, #_shadow_OAM
      001253 19                    4673 	add	hl, de
      001254 23                    4674 	inc	hl
      001255 23                    4675 	inc	hl
      001256 D1                    4676 	pop	de
      001257 73                    4677 	ld	(hl), e
                                   4678 ;src/main.c:468: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001258 D1                    4679 	pop	de
      001259 D5                    4680 	push	de
      00125A 1A                    4681 	ld	a, (de)
      00125B F8 04                 4682 	ldhl	sp,	#4
      00125D 22                    4683 	ld	(hl+), a
      00125E 0A                    4684 	ld	a, (bc)
      00125F 32                    4685 	ld	(hl-), a
      001260 2B                    4686 	dec	hl
                                   4687 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001261 6E                    4688 	ld	l, (hl)
                                   4689 ;	spillPairReg hl
                                   4690 ;	spillPairReg hl
      001262 26 00                 4691 	ld	h, #0x00
                                   4692 ;	spillPairReg hl
                                   4693 ;	spillPairReg hl
      001264 29                    4694 	add	hl, hl
      001265 29                    4695 	add	hl, hl
      001266 11r00r00              4696 	ld	de, #_shadow_OAM
      001269 19                    4697 	add	hl, de
      00126A 5D                    4698 	ld	e, l
      00126B 54                    4699 	ld	d, h
                                   4700 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00126C F8 04                 4701 	ldhl	sp,	#4
      00126E 2A                    4702 	ld	a, (hl+)
      00126F 12                    4703 	ld	(de), a
      001270 13                    4704 	inc	de
      001271 7E                    4705 	ld	a, (hl)
      001272 12                    4706 	ld	(de), a
                                   4707 ;src/main.c:470: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      001273 21 07 00              4708 	ld	hl, #0x0007
      001276 09                    4709 	add	hl, bc
      001277 5E                    4710 	ld	e, (hl)
      001278 F8 02                 4711 	ldhl	sp,	#2
      00127A 7E                    4712 	ld	a, (hl)
      00127B C6 0B                 4713 	add	a, #0x0b
      00127D F8 05                 4714 	ldhl	sp,	#5
      00127F 77                    4715 	ld	(hl), a
      001280 56                    4716 	ld	d, (hl)
                                   4717 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001281 6A                    4718 	ld	l, d
                                   4719 ;	spillPairReg hl
                                   4720 ;	spillPairReg hl
      001282 26 00                 4721 	ld	h, #0x00
                                   4722 ;	spillPairReg hl
                                   4723 ;	spillPairReg hl
      001284 29                    4724 	add	hl, hl
      001285 29                    4725 	add	hl, hl
      001286 D5                    4726 	push	de
      001287 11r00r00              4727 	ld	de, #_shadow_OAM
      00128A 19                    4728 	add	hl, de
      00128B 23                    4729 	inc	hl
      00128C 23                    4730 	inc	hl
      00128D D1                    4731 	pop	de
      00128E 73                    4732 	ld	(hl), e
                                   4733 ;src/main.c:471: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      00128F D1                    4734 	pop	de
      001290 D5                    4735 	push	de
      001291 1A                    4736 	ld	a, (de)
      001292 F8 04                 4737 	ldhl	sp,	#4
      001294 22                    4738 	ld	(hl+), a
      001295 0A                    4739 	ld	a, (bc)
      001296 4F                    4740 	ld	c, a
                                   4741 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001297 6E                    4742 	ld	l, (hl)
                                   4743 ;	spillPairReg hl
                                   4744 ;	spillPairReg hl
      001298 26 00                 4745 	ld	h, #0x00
                                   4746 ;	spillPairReg hl
                                   4747 ;	spillPairReg hl
      00129A 29                    4748 	add	hl, hl
      00129B 29                    4749 	add	hl, hl
      00129C 11r00r00              4750 	ld	de, #_shadow_OAM
      00129F 19                    4751 	add	hl, de
      0012A0 5D                    4752 	ld	e, l
      0012A1 54                    4753 	ld	d, h
                                   4754 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0012A2 F8 04                 4755 	ldhl	sp,	#4
      0012A4 7E                    4756 	ld	a, (hl)
      0012A5 12                    4757 	ld	(de), a
      0012A6 13                    4758 	inc	de
      0012A7 79                    4759 	ld	a, c
      0012A8 12                    4760 	ld	(de), a
                                   4761 ;src/main.c:471: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      0012A9                       4762 00112$:
                                   4763 ;src/main.c:479: }
      0012A9 E8 06                 4764 	add	sp, #6
      0012AB C9                    4765 	ret
                                   4766 ;src/main.c:482: void updateEnemyPositions() {
                                   4767 ;	---------------------------------
                                   4768 ; Function updateEnemyPositions
                                   4769 ; ---------------------------------
      0012AC                       4770 _updateEnemyPositions::
      0012AC E8 F0                 4771 	add	sp, #-16
                                   4772 ;src/main.c:485: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0012AE F8 0F                 4773 	ldhl	sp,	#15
      0012B0 36 00                 4774 	ld	(hl), #0x00
      0012B2                       4775 00195$:
      0012B2 21r8Er0B              4776 	ld	hl, #_ENEMYCOUNT
      0012B5 4E                    4777 	ld	c, (hl)
      0012B6 F8 0F                 4778 	ldhl	sp,	#15
      0012B8 7E                    4779 	ld	a, (hl)
      0012B9 91                    4780 	sub	a, c
      0012BA D2rCDr18              4781 	jp	NC, 00143$
                                   4782 ;src/main.c:486: if (!enemies[i].alive) {
      0012BD 4E                    4783 	ld	c, (hl)
      0012BE 06 00                 4784 	ld	b, #0x00
      0012C0 69                    4785 	ld	l, c
      0012C1 60                    4786 	ld	h, b
      0012C2 29                    4787 	add	hl, hl
      0012C3 29                    4788 	add	hl, hl
      0012C4 29                    4789 	add	hl, hl
      0012C5 09                    4790 	add	hl, bc
      0012C6 29                    4791 	add	hl, hl
                                   4792 ;src/main.c:494: if (enemies[i].x < playerDrawX) {
      0012C7 01r5Ar00              4793 	ld	bc,#_enemies
      0012CA 09                    4794 	add	hl,bc
      0012CB 33                    4795 	inc	sp
      0012CC 33                    4796 	inc	sp
                                   4797 ;src/main.c:486: if (!enemies[i].alive) {
      0012CD 5D                    4798 	ld	e, l
      0012CE 54                    4799 	ld	d, h
      0012CF D5                    4800 	push	de
      0012D0 21 09 00              4801 	ld	hl, #0x0009
      0012D3 19                    4802 	add	hl, de
      0012D4 4D                    4803 	ld	c, l
      0012D5 44                    4804 	ld	b, h
      0012D6 0A                    4805 	ld	a, (bc)
      0012D7 B7                    4806 	or	a, a
      0012D8 CArC7r18              4807 	jp	Z, 00142$
                                   4808 ;src/main.c:489: enemies[i].x -= xOverflow;
      0012DB D1                    4809 	pop	de
      0012DC D5                    4810 	push	de
      0012DD 1A                    4811 	ld	a, (de)
      0012DE 4F                    4812 	ld	c, a
      0012DF 13                    4813 	inc	de
      0012E0 1A                    4814 	ld	a, (de)
      0012E1 47                    4815 	ld	b, a
      0012E2 21rA1r00              4816 	ld	hl, #_xOverflow
      0012E5 2A                    4817 	ld	a, (hl+)
      0012E6 5F                    4818 	ld	e, a
      0012E7 56                    4819 	ld	d, (hl)
      0012E8 79                    4820 	ld	a, c
      0012E9 93                    4821 	sub	a, e
      0012EA 5F                    4822 	ld	e, a
      0012EB 78                    4823 	ld	a, b
      0012EC 9A                    4824 	sbc	a, d
      0012ED F8 0E                 4825 	ldhl	sp,	#14
      0012EF 32                    4826 	ld	(hl-), a
      0012F0 73                    4827 	ld	(hl), e
      0012F1 D1                    4828 	pop	de
      0012F2 D5                    4829 	push	de
      0012F3 2A                    4830 	ld	a, (hl+)
      0012F4 12                    4831 	ld	(de), a
      0012F5 13                    4832 	inc	de
      0012F6 7E                    4833 	ld	a, (hl)
      0012F7 12                    4834 	ld	(de), a
                                   4835 ;src/main.c:490: enemies[i].y -= yOverflow;
      0012F8 D1                    4836 	pop	de
      0012F9 D5                    4837 	push	de
      0012FA 21 02 00              4838 	ld	hl, #0x0002
      0012FD 19                    4839 	add	hl, de
      0012FE E5                    4840 	push	hl
      0012FF 7D                    4841 	ld	a, l
      001300 F8 04                 4842 	ldhl	sp,	#4
      001302 77                    4843 	ld	(hl), a
      001303 E1                    4844 	pop	hl
      001304 7C                    4845 	ld	a, h
      001305 F8 03                 4846 	ldhl	sp,	#3
      001307 32                    4847 	ld	(hl-), a
      001308 2A                    4848 	ld	a, (hl+)
      001309 5F                    4849 	ld	e, a
      00130A 56                    4850 	ld	d, (hl)
      00130B 1A                    4851 	ld	a, (de)
      00130C 4F                    4852 	ld	c, a
      00130D 13                    4853 	inc	de
      00130E 1A                    4854 	ld	a, (de)
      00130F 47                    4855 	ld	b, a
      001310 79                    4856 	ld	a, c
      001311 21rA3r00              4857 	ld	hl, #_yOverflow
      001314 96                    4858 	sub	a, (hl)
      001315 23                    4859 	inc	hl
      001316 4F                    4860 	ld	c, a
      001317 78                    4861 	ld	a, b
      001318 9E                    4862 	sbc	a, (hl)
      001319 47                    4863 	ld	b, a
      00131A F8 02                 4864 	ldhl	sp,	#2
      00131C 2A                    4865 	ld	a,	(hl+)
      00131D 66                    4866 	ld	h, (hl)
      00131E 6F                    4867 	ld	l, a
      00131F 79                    4868 	ld	a, c
      001320 22                    4869 	ld	(hl+), a
      001321 70                    4870 	ld	(hl), b
                                   4871 ;src/main.c:493: if (abs(enemies[i].x - playerDrawX) > 8) {
      001322 F8 0D                 4872 	ldhl	sp,	#13
      001324 7E                    4873 	ld	a, (hl)
      001325 21r9Br00              4874 	ld	hl, #_playerDrawX
      001328 4E                    4875 	ld	c, (hl)
      001329 91                    4876 	sub	a, c
      00132A 4F                    4877 	ld	c, a
                                   4878 ;src/main.c:364: if (value >= 0) return value;
      00132B CB 79                 4879 	bit	7, c
      00132D 20 03                 4880 	jr	NZ, 00168$
      00132F 41                    4881 	ld	b, c
      001330 18 03                 4882 	jr	00170$
      001332                       4883 00168$:
                                   4884 ;src/main.c:365: else return - value;
      001332 AF                    4885 	xor	a, a
      001333 91                    4886 	sub	a, c
      001334 47                    4887 	ld	b, a
                                   4888 ;src/main.c:493: if (abs(enemies[i].x - playerDrawX) > 8) {
      001335                       4889 00170$:
                                   4890 ;src/main.c:508: enemies[i].ySpeed += enemies[i].accel;
      001335 D1                    4891 	pop	de
      001336 D5                    4892 	push	de
      001337 21 0D 00              4893 	ld	hl, #0x000d
      00133A 19                    4894 	add	hl, de
      00133B E5                    4895 	push	hl
      00133C 7D                    4896 	ld	a, l
      00133D F8 08                 4897 	ldhl	sp,	#8
      00133F 77                    4898 	ld	(hl), a
      001340 E1                    4899 	pop	hl
      001341 7C                    4900 	ld	a, h
      001342 F8 07                 4901 	ldhl	sp,	#7
      001344 77                    4902 	ld	(hl), a
                                   4903 ;src/main.c:495: enemies[i].xSpeed += enemies[i].accel;
      001345 D1                    4904 	pop	de
      001346 D5                    4905 	push	de
      001347 21 0E 00              4906 	ld	hl, #0x000e
      00134A 19                    4907 	add	hl, de
      00134B E5                    4908 	push	hl
      00134C 7D                    4909 	ld	a, l
      00134D F8 06                 4910 	ldhl	sp,	#6
      00134F 77                    4911 	ld	(hl), a
      001350 E1                    4912 	pop	hl
      001351 7C                    4913 	ld	a, h
      001352 F8 05                 4914 	ldhl	sp,	#5
                                   4915 ;src/main.c:502: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      001354 32                    4916 	ld	(hl-), a
      001355 2A                    4917 	ld	a, (hl+)
      001356 5F                    4918 	ld	e, a
      001357 56                    4919 	ld	d, (hl)
      001358 1A                    4920 	ld	a, (de)
      001359 4F                    4921 	ld	c, a
                                   4922 ;src/main.c:493: if (abs(enemies[i].x - playerDrawX) > 8) {
      00135A 58                    4923 	ld	e, b
      00135B 3E 08                 4924 	ld	a,#0x08
      00135D 57                    4925 	ld	d,a
      00135E 90                    4926 	sub	a, b
      00135F CB 7B                 4927 	bit	7, e
      001361 28 07                 4928 	jr	Z, 00392$
      001363 CB 7A                 4929 	bit	7, d
      001365 20 08                 4930 	jr	NZ, 00393$
      001367 BF                    4931 	cp	a, a
      001368 18 05                 4932 	jr	00393$
      00136A                       4933 00392$:
      00136A CB 7A                 4934 	bit	7, d
      00136C 28 01                 4935 	jr	Z, 00393$
      00136E 37                    4936 	scf
      00136F                       4937 00393$:
      00136F 30 4E                 4938 	jr	NC, 00111$
                                   4939 ;src/main.c:494: if (enemies[i].x < playerDrawX) {
      001371 D1                    4940 	pop	de
      001372 D5                    4941 	push	de
      001373 1A                    4942 	ld	a, (de)
      001374 F8 0B                 4943 	ldhl	sp,	#11
      001376 22                    4944 	ld	(hl+), a
      001377 13                    4945 	inc	de
      001378 1A                    4946 	ld	a, (de)
      001379 77                    4947 	ld	(hl), a
      00137A FAr9Br00              4948 	ld	a, (#_playerDrawX)
      00137D F8 0D                 4949 	ldhl	sp,	#13
      00137F 22                    4950 	ld	(hl+), a
      001380 36 00                 4951 	ld	(hl), #0x00
                                   4952 ;src/main.c:495: enemies[i].xSpeed += enemies[i].accel;
      001382 F8 06                 4953 	ldhl	sp,#6
      001384 2A                    4954 	ld	a, (hl+)
      001385 5F                    4955 	ld	e, a
      001386 56                    4956 	ld	d, (hl)
      001387 1A                    4957 	ld	a, (de)
      001388 47                    4958 	ld	b, a
                                   4959 ;src/main.c:494: if (enemies[i].x < playerDrawX) {
      001389 F8 0B                 4960 	ldhl	sp,	#11
      00138B 5D                    4961 	ld	e, l
      00138C 54                    4962 	ld	d, h
      00138D F8 0D                 4963 	ldhl	sp,	#13
      00138F 1A                    4964 	ld	a, (de)
      001390 13                    4965 	inc	de
      001391 96                    4966 	sub	a, (hl)
      001392 23                    4967 	inc	hl
      001393 1A                    4968 	ld	a, (de)
      001394 9E                    4969 	sbc	a, (hl)
      001395 1A                    4970 	ld	a, (de)
      001396 57                    4971 	ld	d, a
      001397 CB 7E                 4972 	bit	7, (hl)
      001399 28 07                 4973 	jr	Z, 00394$
      00139B CB 7A                 4974 	bit	7, d
      00139D 20 08                 4975 	jr	NZ, 00395$
      00139F BF                    4976 	cp	a, a
      0013A0 18 05                 4977 	jr	00395$
      0013A2                       4978 00394$:
      0013A2 CB 7A                 4979 	bit	7, d
      0013A4 28 01                 4980 	jr	Z, 00395$
      0013A6 37                    4981 	scf
      0013A7                       4982 00395$:
      0013A7 30 0B                 4983 	jr	NC, 00104$
                                   4984 ;src/main.c:495: enemies[i].xSpeed += enemies[i].accel;
      0013A9 79                    4985 	ld	a, c
      0013AA 80                    4986 	add	a, b
      0013AB 4F                    4987 	ld	c, a
      0013AC F8 04                 4988 	ldhl	sp,	#4
      0013AE 2A                    4989 	ld	a,	(hl+)
      0013AF 66                    4990 	ld	h, (hl)
      0013B0 6F                    4991 	ld	l, a
      0013B1 71                    4992 	ld	(hl), c
      0013B2 18 38                 4993 	jr	00112$
      0013B4                       4994 00104$:
                                   4995 ;src/main.c:498: enemies[i].xSpeed -= enemies[i].accel;
      0013B4 79                    4996 	ld	a, c
      0013B5 90                    4997 	sub	a, b
      0013B6 4F                    4998 	ld	c, a
      0013B7 F8 04                 4999 	ldhl	sp,	#4
      0013B9 2A                    5000 	ld	a,	(hl+)
      0013BA 66                    5001 	ld	h, (hl)
      0013BB 6F                    5002 	ld	l, a
      0013BC 71                    5003 	ld	(hl), c
      0013BD 18 2D                 5004 	jr	00112$
      0013BF                       5005 00111$:
                                   5006 ;src/main.c:502: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      0013BF 59                    5007 	ld	e, c
      0013C0 AF                    5008 	xor	a, a
      0013C1 57                    5009 	ld	d, a
      0013C2 91                    5010 	sub	a, c
      0013C3 CB 7B                 5011 	bit	7, e
      0013C5 28 07                 5012 	jr	Z, 00396$
      0013C7 CB 7A                 5013 	bit	7, d
      0013C9 20 08                 5014 	jr	NZ, 00397$
      0013CB BF                    5015 	cp	a, a
      0013CC 18 05                 5016 	jr	00397$
      0013CE                       5017 00396$:
      0013CE CB 7A                 5018 	bit	7, d
      0013D0 28 01                 5019 	jr	Z, 00397$
      0013D2 37                    5020 	scf
      0013D3                       5021 00397$:
      0013D3 30 07                 5022 	jr	NC, 00107$
      0013D5 0D                    5023 	dec	c
      0013D6 F8 04                 5024 	ldhl	sp,	#4
      0013D8 2A                    5025 	ld	a,	(hl+)
      0013D9 66                    5026 	ld	h, (hl)
      0013DA 6F                    5027 	ld	l, a
      0013DB 71                    5028 	ld	(hl), c
      0013DC                       5029 00107$:
      0013DC F8 04                 5030 	ldhl	sp,#4
      0013DE 2A                    5031 	ld	a, (hl+)
      0013DF 5F                    5032 	ld	e, a
      0013E0 56                    5033 	ld	d, (hl)
      0013E1 1A                    5034 	ld	a, (de)
      0013E2 4F                    5035 	ld	c, a
                                   5036 ;src/main.c:503: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      0013E3 CB 79                 5037 	bit	7, c
      0013E5 28 05                 5038 	jr	Z, 00112$
      0013E7 0C                    5039 	inc	c
      0013E8 3A                    5040 	ld	a, (hl-)
      0013E9 6E                    5041 	ld	l, (hl)
      0013EA 67                    5042 	ld	h, a
      0013EB 71                    5043 	ld	(hl), c
      0013EC                       5044 00112$:
                                   5045 ;src/main.c:506: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013EC F8 02                 5046 	ldhl	sp,#2
      0013EE 2A                    5047 	ld	a, (hl+)
      0013EF 5F                    5048 	ld	e, a
      0013F0 56                    5049 	ld	d, (hl)
      0013F1 1A                    5050 	ld	a, (de)
      0013F2 4F                    5051 	ld	c, a
      0013F3 13                    5052 	inc	de
      0013F4 1A                    5053 	ld	a, (de)
      0013F5 47                    5054 	ld	b, a
      0013F6 79                    5055 	ld	a, c
      0013F7 21r9Cr00              5056 	ld	hl, #_playerDrawY
      0013FA 5E                    5057 	ld	e, (hl)
      0013FB 93                    5058 	sub	a, e
      0013FC 6F                    5059 	ld	l, a
                                   5060 ;	spillPairReg hl
                                   5061 ;	spillPairReg hl
                                   5062 ;src/main.c:364: if (value >= 0) return value;
      0013FD CB 7D                 5063 	bit	7, l
      0013FF 20 06                 5064 	jr	NZ, 00172$
      001401 7D                    5065 	ld	a, l
      001402 F8 0E                 5066 	ldhl	sp,	#14
      001404 77                    5067 	ld	(hl), a
      001405 18 06                 5068 	jr	00174$
      001407                       5069 00172$:
                                   5070 ;src/main.c:365: else return - value;
      001407 AF                    5071 	xor	a, a
      001408 95                    5072 	sub	a, l
      001409 5F                    5073 	ld	e, a
      00140A F8 0E                 5074 	ldhl	sp,	#14
      00140C 73                    5075 	ld	(hl), e
                                   5076 ;src/main.c:506: if (abs(enemies[i].y - playerDrawY) > 8) {
      00140D                       5077 00174$:
                                   5078 ;src/main.c:508: enemies[i].ySpeed += enemies[i].accel;
      00140D D1                    5079 	pop	de
      00140E D5                    5080 	push	de
      00140F 21 0F 00              5081 	ld	hl, #0x000f
      001412 19                    5082 	add	hl, de
      001413 E5                    5083 	push	hl
      001414 7D                    5084 	ld	a, l
      001415 F8 0A                 5085 	ldhl	sp,	#10
      001417 77                    5086 	ld	(hl), a
      001418 E1                    5087 	pop	hl
      001419 7C                    5088 	ld	a, h
      00141A F8 09                 5089 	ldhl	sp,	#9
                                   5090 ;src/main.c:515: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      00141C 32                    5091 	ld	(hl-), a
      00141D 2A                    5092 	ld	a, (hl+)
      00141E 5F                    5093 	ld	e, a
      00141F 2A                    5094 	ld	a, (hl+)
      001420 23                    5095 	inc	hl
      001421 57                    5096 	ld	d, a
      001422 1A                    5097 	ld	a, (de)
      001423 77                    5098 	ld	(hl), a
                                   5099 ;src/main.c:506: if (abs(enemies[i].y - playerDrawY) > 8) {
      001424 F8 0E                 5100 	ldhl	sp,	#14
      001426 5E                    5101 	ld	e, (hl)
      001427 3E 08                 5102 	ld	a,#0x08
      001429 57                    5103 	ld	d,a
      00142A 96                    5104 	sub	a, (hl)
      00142B CB 7B                 5105 	bit	7, e
      00142D 28 07                 5106 	jr	Z, 00398$
      00142F CB 7A                 5107 	bit	7, d
      001431 20 08                 5108 	jr	NZ, 00399$
      001433 BF                    5109 	cp	a, a
      001434 18 05                 5110 	jr	00399$
      001436                       5111 00398$:
      001436 CB 7A                 5112 	bit	7, d
      001438 28 01                 5113 	jr	Z, 00399$
      00143A 37                    5114 	scf
      00143B                       5115 00399$:
      00143B 30 49                 5116 	jr	NC, 00121$
                                   5117 ;src/main.c:507: if (enemies[i].y < playerDrawY) {
      00143D FAr9Cr00              5118 	ld	a, (#_playerDrawY)
      001440 F8 0C                 5119 	ldhl	sp,	#12
      001442 22                    5120 	ld	(hl+), a
      001443 36 00                 5121 	ld	(hl), #0x00
                                   5122 ;src/main.c:495: enemies[i].xSpeed += enemies[i].accel;
      001445 F8 06                 5123 	ldhl	sp,#6
      001447 2A                    5124 	ld	a, (hl+)
      001448 5F                    5125 	ld	e, a
      001449 56                    5126 	ld	d, (hl)
      00144A 1A                    5127 	ld	a, (de)
      00144B F8 0E                 5128 	ldhl	sp,	#14
                                   5129 ;src/main.c:507: if (enemies[i].y < playerDrawY) {
      00144D 32                    5130 	ld	(hl-), a
      00144E 2B                    5131 	dec	hl
      00144F 79                    5132 	ld	a, c
      001450 96                    5133 	sub	a, (hl)
      001451 23                    5134 	inc	hl
      001452 78                    5135 	ld	a, b
      001453 9E                    5136 	sbc	a, (hl)
      001454 78                    5137 	ld	a, b
      001455 57                    5138 	ld	d, a
      001456 CB 7E                 5139 	bit	7, (hl)
      001458 28 07                 5140 	jr	Z, 00400$
      00145A CB 7A                 5141 	bit	7, d
      00145C 20 08                 5142 	jr	NZ, 00401$
      00145E BF                    5143 	cp	a, a
      00145F 18 05                 5144 	jr	00401$
      001461                       5145 00400$:
      001461 CB 7A                 5146 	bit	7, d
      001463 28 01                 5147 	jr	Z, 00401$
      001465 37                    5148 	scf
      001466                       5149 00401$:
      001466 30 0F                 5150 	jr	NC, 00114$
                                   5151 ;src/main.c:508: enemies[i].ySpeed += enemies[i].accel;
      001468 F8 0B                 5152 	ldhl	sp,	#11
      00146A 7E                    5153 	ld	a, (hl)
      00146B F8 0E                 5154 	ldhl	sp,	#14
      00146D 86                    5155 	add	a, (hl)
      00146E 4F                    5156 	ld	c, a
      00146F F8 08                 5157 	ldhl	sp,	#8
      001471 2A                    5158 	ld	a,	(hl+)
      001472 66                    5159 	ld	h, (hl)
      001473 6F                    5160 	ld	l, a
      001474 71                    5161 	ld	(hl), c
      001475 18 41                 5162 	jr	00122$
      001477                       5163 00114$:
                                   5164 ;src/main.c:511: enemies[i].ySpeed -= enemies[i].accel;
      001477 F8 0B                 5165 	ldhl	sp,	#11
      001479 7E                    5166 	ld	a, (hl)
      00147A F8 0E                 5167 	ldhl	sp,	#14
      00147C 96                    5168 	sub	a, (hl)
      00147D 4F                    5169 	ld	c, a
      00147E F8 08                 5170 	ldhl	sp,	#8
      001480 2A                    5171 	ld	a,	(hl+)
      001481 66                    5172 	ld	h, (hl)
      001482 6F                    5173 	ld	l, a
      001483 71                    5174 	ld	(hl), c
      001484 18 32                 5175 	jr	00122$
      001486                       5176 00121$:
                                   5177 ;src/main.c:515: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001486 F8 0B                 5178 	ldhl	sp,	#11
      001488 5E                    5179 	ld	e, (hl)
      001489 AF                    5180 	xor	a, a
      00148A 57                    5181 	ld	d, a
      00148B 96                    5182 	sub	a, (hl)
      00148C CB 7B                 5183 	bit	7, e
      00148E 28 07                 5184 	jr	Z, 00402$
      001490 CB 7A                 5185 	bit	7, d
      001492 20 08                 5186 	jr	NZ, 00403$
      001494 BF                    5187 	cp	a, a
      001495 18 05                 5188 	jr	00403$
      001497                       5189 00402$:
      001497 CB 7A                 5190 	bit	7, d
      001499 28 01                 5191 	jr	Z, 00403$
      00149B 37                    5192 	scf
      00149C                       5193 00403$:
      00149C 30 0A                 5194 	jr	NC, 00117$
      00149E F8 0B                 5195 	ldhl	sp,	#11
      0014A0 4E                    5196 	ld	c, (hl)
      0014A1 0D                    5197 	dec	c
      0014A2 F8 08                 5198 	ldhl	sp,	#8
      0014A4 2A                    5199 	ld	a,	(hl+)
      0014A5 66                    5200 	ld	h, (hl)
      0014A6 6F                    5201 	ld	l, a
      0014A7 71                    5202 	ld	(hl), c
      0014A8                       5203 00117$:
      0014A8 F8 08                 5204 	ldhl	sp,#8
      0014AA 2A                    5205 	ld	a, (hl+)
      0014AB 5F                    5206 	ld	e, a
      0014AC 56                    5207 	ld	d, (hl)
      0014AD 1A                    5208 	ld	a, (de)
      0014AE 4F                    5209 	ld	c, a
                                   5210 ;src/main.c:516: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      0014AF CB 79                 5211 	bit	7, c
      0014B1 28 05                 5212 	jr	Z, 00122$
      0014B3 0C                    5213 	inc	c
      0014B4 3A                    5214 	ld	a, (hl-)
      0014B5 6E                    5215 	ld	l, (hl)
      0014B6 67                    5216 	ld	h, a
      0014B7 71                    5217 	ld	(hl), c
      0014B8                       5218 00122$:
                                   5219 ;src/main.c:520: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0014B8 D1                    5220 	pop	de
      0014B9 D5                    5221 	push	de
      0014BA 21 0C 00              5222 	ld	hl, #0x000c
      0014BD 19                    5223 	add	hl, de
      0014BE E5                    5224 	push	hl
      0014BF 7D                    5225 	ld	a, l
      0014C0 F8 0C                 5226 	ldhl	sp,	#12
      0014C2 77                    5227 	ld	(hl), a
      0014C3 E1                    5228 	pop	hl
      0014C4 7C                    5229 	ld	a, h
      0014C5 F8 0B                 5230 	ldhl	sp,	#11
      0014C7 32                    5231 	ld	(hl-), a
      0014C8 2A                    5232 	ld	a, (hl+)
      0014C9 5F                    5233 	ld	e, a
      0014CA 2A                    5234 	ld	a, (hl+)
      0014CB 57                    5235 	ld	d, a
      0014CC 1A                    5236 	ld	a, (de)
      0014CD 4F                    5237 	ld	c, a
      0014CE 22                    5238 	ld	(hl+), a
      0014CF AF                    5239 	xor	a, a
      0014D0 91                    5240 	sub	a, c
      0014D1 77                    5241 	ld	(hl), a
      0014D2 F8 04                 5242 	ldhl	sp,#4
      0014D4 2A                    5243 	ld	a, (hl+)
      0014D5 5F                    5244 	ld	e, a
      0014D6 56                    5245 	ld	d, (hl)
      0014D7 1A                    5246 	ld	a, (de)
      0014D8 F8 0E                 5247 	ldhl	sp,	#14
                                   5248 ;src/main.c:345: return (value < min) ? min : (value > max) ? max : value;
      0014DA 32                    5249 	ld	(hl-), a
      0014DB 2A                    5250 	ld	a, (hl+)
      0014DC 5F                    5251 	ld	e, a
      0014DD 56                    5252 	ld	d, (hl)
      0014DE 3A                    5253 	ld	a, (hl-)
      0014DF 96                    5254 	sub	a, (hl)
      0014E0 CB 7B                 5255 	bit	7, e
      0014E2 28 07                 5256 	jr	Z, 00404$
      0014E4 CB 7A                 5257 	bit	7, d
      0014E6 20 08                 5258 	jr	NZ, 00405$
      0014E8 BF                    5259 	cp	a, a
      0014E9 18 05                 5260 	jr	00405$
      0014EB                       5261 00404$:
      0014EB CB 7A                 5262 	bit	7, d
      0014ED 28 01                 5263 	jr	Z, 00405$
      0014EF 37                    5264 	scf
      0014F0                       5265 00405$:
      0014F0 30 06                 5266 	jr	NC, 00198$
      0014F2 F8 0D                 5267 	ldhl	sp,	#13
      0014F4 2A                    5268 	ld	a, (hl+)
      0014F5 77                    5269 	ld	(hl), a
      0014F6 18 26                 5270 	jr	00199$
      0014F8                       5271 00198$:
      0014F8 F8 0E                 5272 	ldhl	sp,	#14
      0014FA 3A                    5273 	ld	a, (hl-)
      0014FB 2B                    5274 	dec	hl
      0014FC 5F                    5275 	ld	e, a
      0014FD 56                    5276 	ld	d, (hl)
      0014FE 2A                    5277 	ld	a, (hl+)
      0014FF 23                    5278 	inc	hl
      001500 96                    5279 	sub	a, (hl)
      001501 CB 7B                 5280 	bit	7, e
      001503 28 07                 5281 	jr	Z, 00406$
      001505 CB 7A                 5282 	bit	7, d
      001507 20 08                 5283 	jr	NZ, 00407$
      001509 BF                    5284 	cp	a, a
      00150A 18 05                 5285 	jr	00407$
      00150C                       5286 00406$:
      00150C CB 7A                 5287 	bit	7, d
      00150E 28 01                 5288 	jr	Z, 00407$
      001510 37                    5289 	scf
      001511                       5290 00407$:
      001511 30 05                 5291 	jr	NC, 00200$
      001513 F8 0C                 5292 	ldhl	sp,	#12
      001515 5E                    5293 	ld	e, (hl)
      001516 18 03                 5294 	jr	00201$
      001518                       5295 00200$:
      001518 F8 0E                 5296 	ldhl	sp,	#14
      00151A 5E                    5297 	ld	e, (hl)
      00151B                       5298 00201$:
      00151B F8 0E                 5299 	ldhl	sp,	#14
      00151D 73                    5300 	ld	(hl), e
      00151E                       5301 00199$:
      00151E F8 0E                 5302 	ldhl	sp,	#14
      001520 4E                    5303 	ld	c, (hl)
                                   5304 ;src/main.c:520: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001521 F8 04                 5305 	ldhl	sp,	#4
      001523 2A                    5306 	ld	a,	(hl+)
      001524 66                    5307 	ld	h, (hl)
      001525 6F                    5308 	ld	l, a
      001526 71                    5309 	ld	(hl), c
                                   5310 ;src/main.c:521: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001527 F8 0A                 5311 	ldhl	sp,#10
      001529 2A                    5312 	ld	a, (hl+)
      00152A 5F                    5313 	ld	e, a
      00152B 3A                    5314 	ld	a, (hl-)
      00152C 2B                    5315 	dec	hl
      00152D 2B                    5316 	dec	hl
      00152E 57                    5317 	ld	d, a
      00152F 1A                    5318 	ld	a, (de)
      001530 47                    5319 	ld	b, a
      001531 48                    5320 	ld	c, b
      001532 AF                    5321 	xor	a, a
      001533 90                    5322 	sub	a, b
      001534 47                    5323 	ld	b, a
      001535 2A                    5324 	ld	a, (hl+)
      001536 5F                    5325 	ld	e, a
      001537 56                    5326 	ld	d, (hl)
      001538 1A                    5327 	ld	a, (de)
      001539 6F                    5328 	ld	l, a
                                   5329 ;	spillPairReg hl
                                   5330 ;	spillPairReg hl
                                   5331 ;src/main.c:345: return (value < min) ? min : (value > max) ? max : value;
      00153A 58                    5332 	ld	e, b
      00153B 7D                    5333 	ld	a,l
      00153C 57                    5334 	ld	d,a
      00153D 90                    5335 	sub	a, b
      00153E CB 7B                 5336 	bit	7, e
      001540 28 07                 5337 	jr	Z, 00408$
      001542 CB 7A                 5338 	bit	7, d
      001544 20 08                 5339 	jr	NZ, 00409$
      001546 BF                    5340 	cp	a, a
      001547 18 05                 5341 	jr	00409$
      001549                       5342 00408$:
      001549 CB 7A                 5343 	bit	7, d
      00154B 28 01                 5344 	jr	Z, 00409$
      00154D 37                    5345 	scf
      00154E                       5346 00409$:
      00154E 30 03                 5347 	jr	NC, 00202$
      001550 48                    5348 	ld	c, b
      001551 18 17                 5349 	jr	00203$
      001553                       5350 00202$:
      001553 5D                    5351 	ld	e, l
      001554 79                    5352 	ld	a,c
      001555 57                    5353 	ld	d,a
      001556 95                    5354 	sub	a, l
      001557 CB 7B                 5355 	bit	7, e
      001559 28 07                 5356 	jr	Z, 00410$
      00155B CB 7A                 5357 	bit	7, d
      00155D 20 08                 5358 	jr	NZ, 00411$
      00155F BF                    5359 	cp	a, a
      001560 18 05                 5360 	jr	00411$
      001562                       5361 00410$:
      001562 CB 7A                 5362 	bit	7, d
      001564 28 01                 5363 	jr	Z, 00411$
      001566 37                    5364 	scf
      001567                       5365 00411$:
      001567 38 01                 5366 	jr	C, 00205$
      001569 4D                    5367 	ld	c, l
      00156A                       5368 00205$:
      00156A                       5369 00203$:
                                   5370 ;src/main.c:521: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      00156A F8 08                 5371 	ldhl	sp,	#8
      00156C 2A                    5372 	ld	a,	(hl+)
      00156D 66                    5373 	ld	h, (hl)
      00156E 6F                    5374 	ld	l, a
      00156F 71                    5375 	ld	(hl), c
                                   5376 ;src/main.c:524: enemies[i].xReserve += enemies[i].xSpeed;
      001570 D1                    5377 	pop	de
      001571 D5                    5378 	push	de
      001572 21 04 00              5379 	ld	hl, #0x0004
      001575 19                    5380 	add	hl, de
      001576 E5                    5381 	push	hl
      001577 7D                    5382 	ld	a, l
      001578 F8 0E                 5383 	ldhl	sp,	#14
      00157A 77                    5384 	ld	(hl), a
      00157B E1                    5385 	pop	hl
      00157C 7C                    5386 	ld	a, h
      00157D F8 0D                 5387 	ldhl	sp,	#13
      00157F 32                    5388 	ld	(hl-), a
      001580 2A                    5389 	ld	a, (hl+)
      001581 5F                    5390 	ld	e, a
      001582 56                    5391 	ld	d, (hl)
      001583 1A                    5392 	ld	a, (de)
      001584 47                    5393 	ld	b, a
      001585 F8 04                 5394 	ldhl	sp,#4
      001587 2A                    5395 	ld	a, (hl+)
      001588 5F                    5396 	ld	e, a
      001589 56                    5397 	ld	d, (hl)
      00158A 1A                    5398 	ld	a, (de)
      00158B 80                    5399 	add	a, b
      00158C 47                    5400 	ld	b, a
      00158D F8 0C                 5401 	ldhl	sp,	#12
      00158F 2A                    5402 	ld	a,	(hl+)
      001590 66                    5403 	ld	h, (hl)
      001591 6F                    5404 	ld	l, a
      001592 70                    5405 	ld	(hl), b
                                   5406 ;src/main.c:525: enemies[i].yReserve += enemies[i].ySpeed;
      001593 D1                    5407 	pop	de
      001594 D5                    5408 	push	de
      001595 21 05 00              5409 	ld	hl, #0x0005
      001598 19                    5410 	add	hl, de
      001599 E5                    5411 	push	hl
      00159A 7D                    5412 	ld	a, l
      00159B F8 08                 5413 	ldhl	sp,	#8
      00159D 77                    5414 	ld	(hl), a
      00159E E1                    5415 	pop	hl
      00159F 7C                    5416 	ld	a, h
      0015A0 F8 07                 5417 	ldhl	sp,	#7
      0015A2 32                    5418 	ld	(hl-), a
      0015A3 2A                    5419 	ld	a, (hl+)
      0015A4 5F                    5420 	ld	e, a
      0015A5 56                    5421 	ld	d, (hl)
      0015A6 1A                    5422 	ld	a, (de)
      0015A7 81                    5423 	add	a, c
      0015A8 4F                    5424 	ld	c, a
      0015A9 3A                    5425 	ld	a, (hl-)
      0015AA 6E                    5426 	ld	l, (hl)
      0015AB 67                    5427 	ld	h, a
      0015AC 71                    5428 	ld	(hl), c
                                   5429 ;src/main.c:529: if (enemies[i].xReserve >> 3 > 0) {
      0015AD F8 0C                 5430 	ldhl	sp,#12
      0015AF 2A                    5431 	ld	a, (hl+)
      0015B0 5F                    5432 	ld	e, a
      0015B1 2A                    5433 	ld	a, (hl+)
      0015B2 57                    5434 	ld	d, a
      0015B3 1A                    5435 	ld	a, (de)
      0015B4 77                    5436 	ld	(hl), a
      0015B5 CB 28                 5437 	sra	b
      0015B7 CB 28                 5438 	sra	b
      0015B9 CB 28                 5439 	sra	b
      0015BB 58                    5440 	ld	e, b
      0015BC AF                    5441 	xor	a, a
      0015BD 57                    5442 	ld	d, a
      0015BE 90                    5443 	sub	a, b
      0015BF CB 7B                 5444 	bit	7, e
      0015C1 28 07                 5445 	jr	Z, 00412$
      0015C3 CB 7A                 5446 	bit	7, d
      0015C5 20 08                 5447 	jr	NZ, 00413$
      0015C7 BF                    5448 	cp	a, a
      0015C8 18 05                 5449 	jr	00413$
      0015CA                       5450 00412$:
      0015CA CB 7A                 5451 	bit	7, d
      0015CC 28 01                 5452 	jr	Z, 00413$
      0015CE 37                    5453 	scf
      0015CF                       5454 00413$:
      0015CF 30 36                 5455 	jr	NC, 00126$
                                   5456 ;src/main.c:530: int8_t xMovement = enemies[i].xReserve >> 3;
      0015D1 F8 0E                 5457 	ldhl	sp,	#14
      0015D3 7E                    5458 	ld	a, (hl)
      0015D4 CB 2F                 5459 	sra	a
      0015D6 CB 2F                 5460 	sra	a
      0015D8 CB 2F                 5461 	sra	a
      0015DA 77                    5462 	ld	(hl), a
                                   5463 ;src/main.c:531: enemies[i].x += xMovement;
      0015DB D1                    5464 	pop	de
      0015DC D5                    5465 	push	de
      0015DD 1A                    5466 	ld	a, (de)
      0015DE 4F                    5467 	ld	c, a
      0015DF 13                    5468 	inc	de
      0015E0 1A                    5469 	ld	a, (de)
      0015E1 47                    5470 	ld	b, a
      0015E2 7E                    5471 	ld	a, (hl)
      0015E3 5F                    5472 	ld	e, a
      0015E4 07                    5473 	rlca
      0015E5 9F                    5474 	sbc	a, a
      0015E6 57                    5475 	ld	d, a
      0015E7 69                    5476 	ld	l, c
                                   5477 ;	spillPairReg hl
                                   5478 ;	spillPairReg hl
      0015E8 60                    5479 	ld	h, b
                                   5480 ;	spillPairReg hl
                                   5481 ;	spillPairReg hl
      0015E9 19                    5482 	add	hl, de
      0015EA 4D                    5483 	ld	c, l
      0015EB 44                    5484 	ld	b, h
      0015EC E1                    5485 	pop	hl
      0015ED E5                    5486 	push	hl
      0015EE 79                    5487 	ld	a, c
      0015EF 22                    5488 	ld	(hl+), a
      0015F0 70                    5489 	ld	(hl), b
                                   5490 ;src/main.c:532: enemies[i].xReserve -=  xMovement << 3;
      0015F1 F8 0C                 5491 	ldhl	sp,#12
      0015F3 2A                    5492 	ld	a, (hl+)
      0015F4 5F                    5493 	ld	e, a
      0015F5 2A                    5494 	ld	a, (hl+)
      0015F6 57                    5495 	ld	d, a
      0015F7 1A                    5496 	ld	a, (de)
      0015F8 F5                    5497 	push	af
      0015F9 3A                    5498 	ld	a, (hl-)
      0015FA 87                    5499 	add	a, a
      0015FB 87                    5500 	add	a, a
      0015FC 87                    5501 	add	a, a
      0015FD 4F                    5502 	ld	c, a
      0015FE F1                    5503 	pop	af
      0015FF 91                    5504 	sub	a, c
      001600 4F                    5505 	ld	c, a
      001601 3A                    5506 	ld	a, (hl-)
      001602 6E                    5507 	ld	l, (hl)
      001603 67                    5508 	ld	h, a
      001604 71                    5509 	ld	(hl), c
      001605 18 60                 5510 	jr	00127$
      001607                       5511 00126$:
                                   5512 ;src/main.c:535: else if ((-enemies[i].xReserve) >> 3 > 0){
      001607 F8 0E                 5513 	ldhl	sp,	#14
      001609 7E                    5514 	ld	a, (hl)
      00160A 4F                    5515 	ld	c, a
      00160B 07                    5516 	rlca
      00160C 9F                    5517 	sbc	a, a
      00160D 47                    5518 	ld	b, a
      00160E AF                    5519 	xor	a, a
      00160F 91                    5520 	sub	a, c
      001610 4F                    5521 	ld	c, a
      001611 9F                    5522 	sbc	a, a
      001612 90                    5523 	sub	a, b
      001613 47                    5524 	ld	b, a
      001614 CB 28                 5525 	sra	b
      001616 CB 19                 5526 	rr	c
      001618 CB 28                 5527 	sra	b
      00161A CB 19                 5528 	rr	c
      00161C CB 28                 5529 	sra	b
      00161E CB 19                 5530 	rr	c
      001620 58                    5531 	ld	e, b
      001621 AF                    5532 	xor	a, a
      001622 57                    5533 	ld	d, a
      001623 B9                    5534 	cp	a, c
      001624 98                    5535 	sbc	a, b
      001625 CB 7B                 5536 	bit	7, e
      001627 28 07                 5537 	jr	Z, 00414$
      001629 CB 7A                 5538 	bit	7, d
      00162B 20 08                 5539 	jr	NZ, 00415$
      00162D BF                    5540 	cp	a, a
      00162E 18 05                 5541 	jr	00415$
      001630                       5542 00414$:
      001630 CB 7A                 5543 	bit	7, d
      001632 28 01                 5544 	jr	Z, 00415$
      001634 37                    5545 	scf
      001635                       5546 00415$:
      001635 30 30                 5547 	jr	NC, 00127$
                                   5548 ;src/main.c:536: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      001637 AF                    5549 	xor	a, a
      001638 91                    5550 	sub	a, c
      001639 4F                    5551 	ld	c, a
      00163A F8 0E                 5552 	ldhl	sp,	#14
      00163C 71                    5553 	ld	(hl), c
                                   5554 ;src/main.c:537: enemies[i].x += xMovement;
      00163D D1                    5555 	pop	de
      00163E D5                    5556 	push	de
      00163F 1A                    5557 	ld	a, (de)
      001640 4F                    5558 	ld	c, a
      001641 13                    5559 	inc	de
      001642 1A                    5560 	ld	a, (de)
      001643 47                    5561 	ld	b, a
      001644 7E                    5562 	ld	a, (hl)
      001645 5F                    5563 	ld	e, a
      001646 07                    5564 	rlca
      001647 9F                    5565 	sbc	a, a
      001648 57                    5566 	ld	d, a
      001649 69                    5567 	ld	l, c
                                   5568 ;	spillPairReg hl
                                   5569 ;	spillPairReg hl
      00164A 60                    5570 	ld	h, b
                                   5571 ;	spillPairReg hl
                                   5572 ;	spillPairReg hl
      00164B 19                    5573 	add	hl, de
      00164C 4D                    5574 	ld	c, l
      00164D 44                    5575 	ld	b, h
      00164E E1                    5576 	pop	hl
      00164F E5                    5577 	push	hl
      001650 79                    5578 	ld	a, c
      001651 22                    5579 	ld	(hl+), a
      001652 70                    5580 	ld	(hl), b
                                   5581 ;src/main.c:538: enemies[i].xReserve +=  (-xMovement) << 3;
      001653 F8 0C                 5582 	ldhl	sp,#12
      001655 2A                    5583 	ld	a, (hl+)
      001656 5F                    5584 	ld	e, a
      001657 2A                    5585 	ld	a, (hl+)
      001658 57                    5586 	ld	d, a
      001659 1A                    5587 	ld	a, (de)
      00165A 4F                    5588 	ld	c, a
      00165B AF                    5589 	xor	a, a
      00165C 96                    5590 	sub	a, (hl)
      00165D 2B                    5591 	dec	hl
      00165E 87                    5592 	add	a, a
      00165F 87                    5593 	add	a, a
      001660 87                    5594 	add	a, a
      001661 81                    5595 	add	a, c
      001662 4F                    5596 	ld	c, a
      001663 3A                    5597 	ld	a, (hl-)
      001664 6E                    5598 	ld	l, (hl)
      001665 67                    5599 	ld	h, a
      001666 71                    5600 	ld	(hl), c
      001667                       5601 00127$:
                                   5602 ;src/main.c:525: enemies[i].yReserve += enemies[i].ySpeed;
      001667 F8 06                 5603 	ldhl	sp,#6
      001669 2A                    5604 	ld	a, (hl+)
      00166A 5F                    5605 	ld	e, a
      00166B 56                    5606 	ld	d, (hl)
      00166C 1A                    5607 	ld	a, (de)
      00166D F8 0D                 5608 	ldhl	sp,	#13
      00166F 77                    5609 	ld	(hl), a
                                   5610 ;src/main.c:541: if (enemies[i].yReserve >> 3 > 0) {
      001670 2A                    5611 	ld	a, (hl+)
      001671 CB 2F                 5612 	sra	a
      001673 CB 2F                 5613 	sra	a
      001675 CB 2F                 5614 	sra	a
      001677 77                    5615 	ld	(hl), a
      001678 5E                    5616 	ld	e, (hl)
      001679 AF                    5617 	xor	a, a
      00167A 57                    5618 	ld	d, a
      00167B 96                    5619 	sub	a, (hl)
      00167C CB 7B                 5620 	bit	7, e
      00167E 28 07                 5621 	jr	Z, 00416$
      001680 CB 7A                 5622 	bit	7, d
      001682 20 08                 5623 	jr	NZ, 00417$
      001684 BF                    5624 	cp	a, a
      001685 18 05                 5625 	jr	00417$
      001687                       5626 00416$:
      001687 CB 7A                 5627 	bit	7, d
      001689 28 01                 5628 	jr	Z, 00417$
      00168B 37                    5629 	scf
      00168C                       5630 00417$:
      00168C 30 59                 5631 	jr	NC, 00131$
                                   5632 ;src/main.c:542: int8_t yMovement = enemies[i].yReserve >> 3;
      00168E F8 0E                 5633 	ldhl	sp,	#14
      001690 7E                    5634 	ld	a, (hl)
      001691 F8 08                 5635 	ldhl	sp,	#8
      001693 77                    5636 	ld	(hl), a
                                   5637 ;src/main.c:543: enemies[i].y += yMovement;
      001694 F8 02                 5638 	ldhl	sp,#2
      001696 2A                    5639 	ld	a, (hl+)
      001697 5F                    5640 	ld	e, a
      001698 56                    5641 	ld	d, (hl)
      001699 1A                    5642 	ld	a, (de)
      00169A F8 0D                 5643 	ldhl	sp,	#13
      00169C 22                    5644 	ld	(hl+), a
      00169D 13                    5645 	inc	de
      00169E 1A                    5646 	ld	a, (de)
      00169F 77                    5647 	ld	(hl), a
      0016A0 F8 08                 5648 	ldhl	sp,	#8
      0016A2 2A                    5649 	ld	a, (hl+)
      0016A3 22                    5650 	ld	(hl+), a
      0016A4 07                    5651 	rlca
      0016A5 9F                    5652 	sbc	a, a
      0016A6 77                    5653 	ld	(hl), a
      0016A7 F8 0D                 5654 	ldhl	sp,	#13
      0016A9 3A                    5655 	ld	a, (hl-)
      0016AA 2B                    5656 	dec	hl
      0016AB 77                    5657 	ld	(hl), a
      0016AC F8 0E                 5658 	ldhl	sp,	#14
      0016AE 3A                    5659 	ld	a, (hl-)
      0016AF 2B                    5660 	dec	hl
      0016B0 32                    5661 	ld	(hl-), a
      0016B1 2A                    5662 	ld	a, (hl+)
      0016B2 5F                    5663 	ld	e, a
      0016B3 56                    5664 	ld	d, (hl)
      0016B4 F8 09                 5665 	ldhl	sp,	#9
      0016B6 2A                    5666 	ld	a,	(hl+)
      0016B7 66                    5667 	ld	h, (hl)
      0016B8 6F                    5668 	ld	l, a
      0016B9 19                    5669 	add	hl, de
      0016BA E5                    5670 	push	hl
      0016BB 7D                    5671 	ld	a, l
      0016BC F8 0F                 5672 	ldhl	sp,	#15
      0016BE 77                    5673 	ld	(hl), a
      0016BF E1                    5674 	pop	hl
      0016C0 7C                    5675 	ld	a, h
      0016C1 F8 0E                 5676 	ldhl	sp,	#14
      0016C3 77                    5677 	ld	(hl), a
      0016C4 F8 02                 5678 	ldhl	sp,#2
      0016C6 2A                    5679 	ld	a, (hl+)
      0016C7 5F                    5680 	ld	e, a
      0016C8 56                    5681 	ld	d, (hl)
      0016C9 F8 0D                 5682 	ldhl	sp,	#13
      0016CB 2A                    5683 	ld	a, (hl+)
      0016CC 12                    5684 	ld	(de), a
      0016CD 13                    5685 	inc	de
      0016CE 7E                    5686 	ld	a, (hl)
      0016CF 12                    5687 	ld	(de), a
                                   5688 ;src/main.c:544: enemies[i].yReserve -=  yMovement << 3;
      0016D0 F8 06                 5689 	ldhl	sp,#6
      0016D2 2A                    5690 	ld	a, (hl+)
      0016D3 5F                    5691 	ld	e, a
      0016D4 2A                    5692 	ld	a, (hl+)
      0016D5 57                    5693 	ld	d, a
      0016D6 1A                    5694 	ld	a, (de)
      0016D7 F5                    5695 	push	af
      0016D8 3A                    5696 	ld	a, (hl-)
      0016D9 87                    5697 	add	a, a
      0016DA 87                    5698 	add	a, a
      0016DB 87                    5699 	add	a, a
      0016DC 4F                    5700 	ld	c, a
      0016DD F1                    5701 	pop	af
      0016DE 91                    5702 	sub	a, c
      0016DF 4F                    5703 	ld	c, a
      0016E0 3A                    5704 	ld	a, (hl-)
      0016E1 6E                    5705 	ld	l, (hl)
      0016E2 67                    5706 	ld	h, a
      0016E3 71                    5707 	ld	(hl), c
      0016E4 C3r87r17              5708 	jp	00132$
      0016E7                       5709 00131$:
                                   5710 ;src/main.c:546: else if ((-enemies[i].yReserve) >> 3 > 0){
      0016E7 F8 0D                 5711 	ldhl	sp,	#13
      0016E9 7E                    5712 	ld	a, (hl)
      0016EA F8 0A                 5713 	ldhl	sp,	#10
      0016EC 22                    5714 	ld	(hl+), a
      0016ED 07                    5715 	rlca
      0016EE 9F                    5716 	sbc	a, a
      0016EF 77                    5717 	ld	(hl), a
      0016F0 11 00 00              5718 	ld	de, #0x0000
      0016F3 3A                    5719 	ld	a, (hl-)
      0016F4 6E                    5720 	ld	l, (hl)
      0016F5 67                    5721 	ld	h, a
      0016F6 7B                    5722 	ld	a, e
      0016F7 95                    5723 	sub	a, l
      0016F8 5F                    5724 	ld	e, a
      0016F9 7A                    5725 	ld	a, d
      0016FA 9C                    5726 	sbc	a, h
      0016FB F8 0E                 5727 	ldhl	sp,	#14
      0016FD 32                    5728 	ld	(hl-), a
      0016FE 7B                    5729 	ld	a, e
      0016FF 22                    5730 	ld	(hl+), a
      001700 CB 2E                 5731 	sra	(hl)
      001702 2B                    5732 	dec	hl
      001703 CB 1E                 5733 	rr	(hl)
      001705 23                    5734 	inc	hl
      001706 CB 2E                 5735 	sra	(hl)
      001708 2B                    5736 	dec	hl
      001709 CB 1E                 5737 	rr	(hl)
      00170B 23                    5738 	inc	hl
      00170C CB 2E                 5739 	sra	(hl)
      00170E 2B                    5740 	dec	hl
      00170F CB 1E                 5741 	rr	(hl)
      001711 AF                    5742 	xor	a, a
      001712 96                    5743 	sub	a, (hl)
      001713 23                    5744 	inc	hl
      001714 3E 00                 5745 	ld	a, #0x00
      001716 9E                    5746 	sbc	a, (hl)
      001717 3E 00                 5747 	ld	a, #0x00
      001719 57                    5748 	ld	d, a
      00171A CB 7E                 5749 	bit	7, (hl)
      00171C 28 07                 5750 	jr	Z, 00418$
      00171E CB 7A                 5751 	bit	7, d
      001720 20 08                 5752 	jr	NZ, 00419$
      001722 BF                    5753 	cp	a, a
      001723 18 05                 5754 	jr	00419$
      001725                       5755 00418$:
      001725 CB 7A                 5756 	bit	7, d
      001727 28 01                 5757 	jr	Z, 00419$
      001729 37                    5758 	scf
      00172A                       5759 00419$:
      00172A 30 5B                 5760 	jr	NC, 00132$
                                   5761 ;src/main.c:547: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      00172C F8 0D                 5762 	ldhl	sp,	#13
      00172E 2A                    5763 	ld	a, (hl+)
      00172F 4F                    5764 	ld	c, a
      001730 AF                    5765 	xor	a, a
      001731 91                    5766 	sub	a, c
      001732 77                    5767 	ld	(hl), a
      001733 7E                    5768 	ld	a, (hl)
      001734 F8 08                 5769 	ldhl	sp,	#8
      001736 77                    5770 	ld	(hl), a
                                   5771 ;src/main.c:548: enemies[i].y += yMovement;
      001737 F8 02                 5772 	ldhl	sp,#2
      001739 2A                    5773 	ld	a, (hl+)
      00173A 5F                    5774 	ld	e, a
      00173B 56                    5775 	ld	d, (hl)
      00173C 1A                    5776 	ld	a, (de)
      00173D F8 0D                 5777 	ldhl	sp,	#13
      00173F 22                    5778 	ld	(hl+), a
      001740 13                    5779 	inc	de
      001741 1A                    5780 	ld	a, (de)
      001742 77                    5781 	ld	(hl), a
      001743 F8 08                 5782 	ldhl	sp,	#8
      001745 2A                    5783 	ld	a, (hl+)
      001746 22                    5784 	ld	(hl+), a
      001747 07                    5785 	rlca
      001748 9F                    5786 	sbc	a, a
      001749 77                    5787 	ld	(hl), a
      00174A F8 0D                 5788 	ldhl	sp,	#13
      00174C 3A                    5789 	ld	a, (hl-)
      00174D 2B                    5790 	dec	hl
      00174E 77                    5791 	ld	(hl), a
      00174F F8 0E                 5792 	ldhl	sp,	#14
      001751 3A                    5793 	ld	a, (hl-)
      001752 2B                    5794 	dec	hl
      001753 32                    5795 	ld	(hl-), a
      001754 2A                    5796 	ld	a, (hl+)
      001755 5F                    5797 	ld	e, a
      001756 56                    5798 	ld	d, (hl)
      001757 F8 09                 5799 	ldhl	sp,	#9
      001759 2A                    5800 	ld	a,	(hl+)
      00175A 66                    5801 	ld	h, (hl)
      00175B 6F                    5802 	ld	l, a
      00175C 19                    5803 	add	hl, de
      00175D E5                    5804 	push	hl
      00175E 7D                    5805 	ld	a, l
      00175F F8 0F                 5806 	ldhl	sp,	#15
      001761 77                    5807 	ld	(hl), a
      001762 E1                    5808 	pop	hl
      001763 7C                    5809 	ld	a, h
      001764 F8 0E                 5810 	ldhl	sp,	#14
      001766 77                    5811 	ld	(hl), a
      001767 F8 02                 5812 	ldhl	sp,#2
      001769 2A                    5813 	ld	a, (hl+)
      00176A 5F                    5814 	ld	e, a
      00176B 56                    5815 	ld	d, (hl)
      00176C F8 0D                 5816 	ldhl	sp,	#13
      00176E 2A                    5817 	ld	a, (hl+)
      00176F 12                    5818 	ld	(de), a
      001770 13                    5819 	inc	de
      001771 7E                    5820 	ld	a, (hl)
      001772 12                    5821 	ld	(de), a
                                   5822 ;src/main.c:549: enemies[i].yReserve +=  (-yMovement) << 3;
      001773 F8 06                 5823 	ldhl	sp,#6
      001775 2A                    5824 	ld	a, (hl+)
      001776 5F                    5825 	ld	e, a
      001777 2A                    5826 	ld	a, (hl+)
      001778 57                    5827 	ld	d, a
      001779 1A                    5828 	ld	a, (de)
      00177A 4F                    5829 	ld	c, a
      00177B AF                    5830 	xor	a, a
      00177C 96                    5831 	sub	a, (hl)
      00177D 2B                    5832 	dec	hl
      00177E 87                    5833 	add	a, a
      00177F 87                    5834 	add	a, a
      001780 87                    5835 	add	a, a
      001781 81                    5836 	add	a, c
      001782 4F                    5837 	ld	c, a
      001783 3A                    5838 	ld	a, (hl-)
      001784 6E                    5839 	ld	l, (hl)
      001785 67                    5840 	ld	h, a
      001786 71                    5841 	ld	(hl), c
      001787                       5842 00132$:
                                   5843 ;src/main.c:555: if (enemies[i].spriteCount == 1) {
      001787 D1                    5844 	pop	de
      001788 D5                    5845 	push	de
      001789 21 08 00              5846 	ld	hl, #0x0008
      00178C 19                    5847 	add	hl, de
      00178D 4D                    5848 	ld	c, l
      00178E 44                    5849 	ld	b, h
      00178F 0A                    5850 	ld	a, (bc)
      001790 47                    5851 	ld	b, a
                                   5852 ;src/main.c:556: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001791 F8 0F                 5853 	ldhl	sp,	#15
      001793 3A                    5854 	ld	a, (hl-)
      001794 87                    5855 	add	a, a
      001795 4F                    5856 	ld	c, a
      001796 C6 0A                 5857 	add	a, #0x0a
      001798 77                    5858 	ld	(hl), a
                                   5859 ;src/main.c:555: if (enemies[i].spriteCount == 1) {
      001799 05                    5860 	dec	b
      00179A 20 51                 5861 	jr	NZ, 00140$
                                   5862 ;src/main.c:556: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00179C F8 02                 5863 	ldhl	sp,#2
      00179E 2A                    5864 	ld	a, (hl+)
      00179F 5F                    5865 	ld	e, a
      0017A0 56                    5866 	ld	d, (hl)
      0017A1 1A                    5867 	ld	a, (de)
      0017A2 C6 0C                 5868 	add	a, #0x0c
      0017A4 4F                    5869 	ld	c, a
      0017A5 D1                    5870 	pop	de
      0017A6 D5                    5871 	push	de
      0017A7 1A                    5872 	ld	a, (de)
      0017A8 C6 04                 5873 	add	a, #0x04
      0017AA 5F                    5874 	ld	e, a
      0017AB F8 0E                 5875 	ldhl	sp,	#14
                                   5876 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017AD 6E                    5877 	ld	l, (hl)
                                   5878 ;	spillPairReg hl
                                   5879 ;	spillPairReg hl
      0017AE 26 00                 5880 	ld	h, #0x00
                                   5881 ;	spillPairReg hl
                                   5882 ;	spillPairReg hl
      0017B0 29                    5883 	add	hl, hl
      0017B1 29                    5884 	add	hl, hl
      0017B2 D5                    5885 	push	de
      0017B3 11r00r00              5886 	ld	de, #_shadow_OAM
      0017B6 19                    5887 	add	hl, de
      0017B7 D1                    5888 	pop	de
                                   5889 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017B8 79                    5890 	ld	a, c
      0017B9 22                    5891 	ld	(hl+), a
      0017BA 73                    5892 	ld	(hl), e
                                   5893 ;src/main.c:557: if (enemies[i].xSpeed >= 0) {
      0017BB F8 04                 5894 	ldhl	sp,#4
      0017BD 2A                    5895 	ld	a, (hl+)
      0017BE 5F                    5896 	ld	e, a
      0017BF 56                    5897 	ld	d, (hl)
      0017C0 1A                    5898 	ld	a, (de)
      0017C1 CB 7F                 5899 	bit	7,a
      0017C3 20 14                 5900 	jr	NZ, 00134$
                                   5901 ;src/main.c:558: set_sprite_prop(10+(i<<1), 0);
      0017C5 F8 0E                 5902 	ldhl	sp,	#14
      0017C7 4E                    5903 	ld	c, (hl)
                                   5904 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017C8 26 00                 5905 	ld	h, #0x00
                                   5906 ;	spillPairReg hl
                                   5907 ;	spillPairReg hl
      0017CA 69                    5908 	ld	l, c
      0017CB 29                    5909 	add	hl, hl
      0017CC 29                    5910 	add	hl, hl
      0017CD 11r00r00              5911 	ld	de, #_shadow_OAM
      0017D0 19                    5912 	add	hl, de
      0017D1 23                    5913 	inc	hl
      0017D2 23                    5914 	inc	hl
      0017D3 23                    5915 	inc	hl
      0017D4 36 00                 5916 	ld	(hl), #0x00
                                   5917 ;src/main.c:558: set_sprite_prop(10+(i<<1), 0);
      0017D6 C3rC7r18              5918 	jp	00142$
      0017D9                       5919 00134$:
                                   5920 ;src/main.c:561: set_sprite_prop(10+(i<<1), S_FLIPX);
      0017D9 F8 0E                 5921 	ldhl	sp,	#14
      0017DB 4E                    5922 	ld	c, (hl)
                                   5923 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017DC 26 00                 5924 	ld	h, #0x00
                                   5925 ;	spillPairReg hl
                                   5926 ;	spillPairReg hl
      0017DE 69                    5927 	ld	l, c
      0017DF 29                    5928 	add	hl, hl
      0017E0 29                    5929 	add	hl, hl
      0017E1 11r00r00              5930 	ld	de, #_shadow_OAM
      0017E4 19                    5931 	add	hl, de
      0017E5 23                    5932 	inc	hl
      0017E6 23                    5933 	inc	hl
      0017E7 23                    5934 	inc	hl
      0017E8 36 20                 5935 	ld	(hl), #0x20
                                   5936 ;src/main.c:561: set_sprite_prop(10+(i<<1), S_FLIPX);
      0017EA C3rC7r18              5937 	jp	00142$
      0017ED                       5938 00140$:
                                   5939 ;src/main.c:566: if (enemies[i].xSpeed >= 0) {
      0017ED F8 04                 5940 	ldhl	sp,#4
      0017EF 2A                    5941 	ld	a, (hl+)
      0017F0 5F                    5942 	ld	e, a
      0017F1 56                    5943 	ld	d, (hl)
      0017F2 1A                    5944 	ld	a, (de)
      0017F3 CB 7F                 5945 	bit	7,a
      0017F5 20 6C                 5946 	jr	NZ, 00137$
                                   5947 ;src/main.c:567: set_sprite_prop(10+(i<<1), 0);
      0017F7 F8 0E                 5948 	ldhl	sp,	#14
      0017F9 46                    5949 	ld	b, (hl)
                                   5950 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017FA 26 00                 5951 	ld	h, #0x00
                                   5952 ;	spillPairReg hl
                                   5953 ;	spillPairReg hl
      0017FC 68                    5954 	ld	l, b
      0017FD 29                    5955 	add	hl, hl
      0017FE 29                    5956 	add	hl, hl
      0017FF 11r00r00              5957 	ld	de, #_shadow_OAM
      001802 19                    5958 	add	hl, de
      001803 23                    5959 	inc	hl
      001804 23                    5960 	inc	hl
      001805 23                    5961 	inc	hl
      001806 36 00                 5962 	ld	(hl), #0x00
                                   5963 ;src/main.c:568: set_sprite_prop(10+(i<<1)+1, 0);
      001808 79                    5964 	ld	a, c
      001809 C6 0B                 5965 	add	a, #0x0b
      00180B 4F                    5966 	ld	c, a
                                   5967 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00180C 69                    5968 	ld	l, c
                                   5969 ;	spillPairReg hl
                                   5970 ;	spillPairReg hl
      00180D 26 00                 5971 	ld	h, #0x00
                                   5972 ;	spillPairReg hl
                                   5973 ;	spillPairReg hl
      00180F 29                    5974 	add	hl, hl
      001810 29                    5975 	add	hl, hl
      001811 11r00r00              5976 	ld	de, #_shadow_OAM
      001814 19                    5977 	add	hl, de
      001815 23                    5978 	inc	hl
      001816 23                    5979 	inc	hl
      001817 23                    5980 	inc	hl
      001818 36 00                 5981 	ld	(hl), #0x00
                                   5982 ;src/main.c:569: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      00181A F8 02                 5983 	ldhl	sp,#2
      00181C 2A                    5984 	ld	a, (hl+)
      00181D 5F                    5985 	ld	e, a
      00181E 56                    5986 	ld	d, (hl)
      00181F 1A                    5987 	ld	a, (de)
      001820 C6 08                 5988 	add	a, #0x08
      001822 F8 0C                 5989 	ldhl	sp,	#12
      001824 22                    5990 	ld	(hl+), a
      001825 D1                    5991 	pop	de
      001826 D5                    5992 	push	de
      001827 1A                    5993 	ld	a, (de)
      001828 22                    5994 	ld	(hl+), a
      001829 46                    5995 	ld	b, (hl)
                                   5996 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00182A 11r00r00              5997 	ld	de, #_shadow_OAM+0
      00182D 26 00                 5998 	ld	h, #0x00
                                   5999 ;	spillPairReg hl
                                   6000 ;	spillPairReg hl
      00182F 68                    6001 	ld	l, b
      001830 29                    6002 	add	hl, hl
      001831 29                    6003 	add	hl, hl
      001832 19                    6004 	add	hl, de
      001833 5D                    6005 	ld	e, l
      001834 54                    6006 	ld	d, h
                                   6007 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001835 F8 0C                 6008 	ldhl	sp,	#12
      001837 2A                    6009 	ld	a, (hl+)
      001838 12                    6010 	ld	(de), a
      001839 13                    6011 	inc	de
      00183A 7E                    6012 	ld	a, (hl)
      00183B 12                    6013 	ld	(de), a
                                   6014 ;src/main.c:570: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      00183C F8 02                 6015 	ldhl	sp,#2
      00183E 2A                    6016 	ld	a, (hl+)
      00183F 5F                    6017 	ld	e, a
      001840 56                    6018 	ld	d, (hl)
      001841 1A                    6019 	ld	a, (de)
      001842 C6 08                 6020 	add	a, #0x08
      001844 F8 0E                 6021 	ldhl	sp,	#14
      001846 77                    6022 	ld	(hl), a
      001847 D1                    6023 	pop	de
      001848 D5                    6024 	push	de
      001849 1A                    6025 	ld	a, (de)
      00184A C6 08                 6026 	add	a, #0x08
      00184C 5F                    6027 	ld	e, a
                                   6028 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00184D 26 00                 6029 	ld	h, #0x00
                                   6030 ;	spillPairReg hl
                                   6031 ;	spillPairReg hl
      00184F 69                    6032 	ld	l, c
      001850 29                    6033 	add	hl, hl
      001851 29                    6034 	add	hl, hl
      001852 7D                    6035 	ld	a, l
      001853 C6r00                 6036 	add	a, #<(_shadow_OAM)
      001855 4F                    6037 	ld	c, a
      001856 7C                    6038 	ld	a, h
      001857 CEs00                 6039 	adc	a, #>(_shadow_OAM)
      001859 47                    6040 	ld	b, a
                                   6041 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00185A F8 0E                 6042 	ldhl	sp,	#14
      00185C 7E                    6043 	ld	a, (hl)
      00185D 02                    6044 	ld	(bc), a
      00185E 03                    6045 	inc	bc
      00185F 7B                    6046 	ld	a, e
      001860 02                    6047 	ld	(bc), a
                                   6048 ;src/main.c:570: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001861 18 64                 6049 	jr	00142$
      001863                       6050 00137$:
                                   6051 ;src/main.c:573: set_sprite_prop(10+(i<<1), S_FLIPX);
      001863 F8 0E                 6052 	ldhl	sp,	#14
                                   6053 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001865 6E                    6054 	ld	l, (hl)
                                   6055 ;	spillPairReg hl
                                   6056 ;	spillPairReg hl
      001866 26 00                 6057 	ld	h, #0x00
                                   6058 ;	spillPairReg hl
                                   6059 ;	spillPairReg hl
      001868 29                    6060 	add	hl, hl
      001869 29                    6061 	add	hl, hl
      00186A 11r00r00              6062 	ld	de, #_shadow_OAM
      00186D 19                    6063 	add	hl, de
      00186E 23                    6064 	inc	hl
      00186F 23                    6065 	inc	hl
      001870 23                    6066 	inc	hl
      001871 36 20                 6067 	ld	(hl), #0x20
                                   6068 ;src/main.c:574: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001873 79                    6069 	ld	a, c
      001874 C6 0B                 6070 	add	a, #0x0b
      001876 F8 0D                 6071 	ldhl	sp,	#13
      001878 77                    6072 	ld	(hl), a
      001879 4E                    6073 	ld	c, (hl)
                                   6074 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00187A 26 00                 6075 	ld	h, #0x00
                                   6076 ;	spillPairReg hl
                                   6077 ;	spillPairReg hl
      00187C 69                    6078 	ld	l, c
      00187D 29                    6079 	add	hl, hl
      00187E 29                    6080 	add	hl, hl
      00187F 11r00r00              6081 	ld	de, #_shadow_OAM
      001882 19                    6082 	add	hl, de
      001883 23                    6083 	inc	hl
      001884 23                    6084 	inc	hl
      001885 23                    6085 	inc	hl
      001886 36 20                 6086 	ld	(hl), #0x20
                                   6087 ;src/main.c:575: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      001888 F8 02                 6088 	ldhl	sp,#2
      00188A 2A                    6089 	ld	a, (hl+)
      00188B 5F                    6090 	ld	e, a
      00188C 56                    6091 	ld	d, (hl)
      00188D 1A                    6092 	ld	a, (de)
      00188E C6 08                 6093 	add	a, #0x08
      001890 4F                    6094 	ld	c, a
      001891 D1                    6095 	pop	de
      001892 D5                    6096 	push	de
      001893 1A                    6097 	ld	a, (de)
      001894 C6 08                 6098 	add	a, #0x08
      001896 5F                    6099 	ld	e, a
      001897 F8 0E                 6100 	ldhl	sp,	#14
                                   6101 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001899 6E                    6102 	ld	l, (hl)
                                   6103 ;	spillPairReg hl
                                   6104 ;	spillPairReg hl
      00189A 26 00                 6105 	ld	h, #0x00
                                   6106 ;	spillPairReg hl
                                   6107 ;	spillPairReg hl
      00189C 29                    6108 	add	hl, hl
      00189D 29                    6109 	add	hl, hl
      00189E D5                    6110 	push	de
      00189F 11r00r00              6111 	ld	de, #_shadow_OAM
      0018A2 19                    6112 	add	hl, de
      0018A3 D1                    6113 	pop	de
                                   6114 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0018A4 79                    6115 	ld	a, c
      0018A5 22                    6116 	ld	(hl+), a
      0018A6 73                    6117 	ld	(hl), e
                                   6118 ;src/main.c:576: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0018A7 F8 02                 6119 	ldhl	sp,#2
      0018A9 2A                    6120 	ld	a, (hl+)
      0018AA 5F                    6121 	ld	e, a
      0018AB 56                    6122 	ld	d, (hl)
      0018AC 1A                    6123 	ld	a, (de)
      0018AD C6 08                 6124 	add	a, #0x08
      0018AF 4F                    6125 	ld	c, a
      0018B0 D1                    6126 	pop	de
      0018B1 D5                    6127 	push	de
      0018B2 1A                    6128 	ld	a, (de)
      0018B3 F8 0E                 6129 	ldhl	sp,	#14
      0018B5 32                    6130 	ld	(hl-), a
                                   6131 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0018B6 6E                    6132 	ld	l, (hl)
                                   6133 ;	spillPairReg hl
                                   6134 ;	spillPairReg hl
      0018B7 26 00                 6135 	ld	h, #0x00
                                   6136 ;	spillPairReg hl
                                   6137 ;	spillPairReg hl
      0018B9 29                    6138 	add	hl, hl
      0018BA 29                    6139 	add	hl, hl
      0018BB 11r00r00              6140 	ld	de, #_shadow_OAM
      0018BE 19                    6141 	add	hl, de
                                   6142 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0018BF 79                    6143 	ld	a, c
      0018C0 22                    6144 	ld	(hl+), a
      0018C1 4D                    6145 	ld	c, l
      0018C2 44                    6146 	ld	b, h
      0018C3 F8 0E                 6147 	ldhl	sp,	#14
      0018C5 7E                    6148 	ld	a, (hl)
      0018C6 02                    6149 	ld	(bc), a
                                   6150 ;src/main.c:576: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0018C7                       6151 00142$:
                                   6152 ;src/main.c:485: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0018C7 F8 0F                 6153 	ldhl	sp,	#15
      0018C9 34                    6154 	inc	(hl)
      0018CA C3rB2r12              6155 	jp	00195$
      0018CD                       6156 00143$:
                                   6157 ;src/main.c:584: uint8_t i = enemyCollisionCount;
      0018CD FArA5r00              6158 	ld	a, (#_enemyCollisionCount)
      0018D0 F8 01                 6159 	ldhl	sp,	#1
      0018D2 77                    6160 	ld	(hl), a
                                   6161 ;src/main.c:586: if (enemies[i].alive) {
      0018D3 4E                    6162 	ld	c, (hl)
      0018D4 06 00                 6163 	ld	b, #0x00
      0018D6 69                    6164 	ld	l, c
      0018D7 60                    6165 	ld	h, b
      0018D8 29                    6166 	add	hl, hl
      0018D9 29                    6167 	add	hl, hl
      0018DA 29                    6168 	add	hl, hl
      0018DB 09                    6169 	add	hl, bc
      0018DC 29                    6170 	add	hl, hl
      0018DD 01r5Ar00              6171 	ld	bc,#_enemies
      0018E0 09                    6172 	add	hl,bc
      0018E1 E5                    6173 	push	hl
      0018E2 7D                    6174 	ld	a, l
      0018E3 F8 04                 6175 	ldhl	sp,	#4
      0018E5 77                    6176 	ld	(hl), a
      0018E6 E1                    6177 	pop	hl
      0018E7 7C                    6178 	ld	a, h
      0018E8 F8 03                 6179 	ldhl	sp,	#3
      0018EA 32                    6180 	ld	(hl-), a
      0018EB 2A                    6181 	ld	a, (hl+)
      0018EC 5F                    6182 	ld	e, a
      0018ED 56                    6183 	ld	d, (hl)
      0018EE 21 09 00              6184 	ld	hl, #0x0009
      0018F1 19                    6185 	add	hl, de
      0018F2 E5                    6186 	push	hl
      0018F3 7D                    6187 	ld	a, l
      0018F4 F8 06                 6188 	ldhl	sp,	#6
      0018F6 77                    6189 	ld	(hl), a
      0018F7 E1                    6190 	pop	hl
      0018F8 7C                    6191 	ld	a, h
      0018F9 F8 05                 6192 	ldhl	sp,	#5
      0018FB 32                    6193 	ld	(hl-), a
      0018FC 2A                    6194 	ld	a, (hl+)
      0018FD 5F                    6195 	ld	e, a
      0018FE 56                    6196 	ld	d, (hl)
      0018FF 1A                    6197 	ld	a, (de)
      001900 F8 0F                 6198 	ldhl	sp,	#15
      001902 77                    6199 	ld	(hl), a
      001903 7E                    6200 	ld	a, (hl)
      001904 B7                    6201 	or	a, a
      001905 CArC3r1B              6202 	jp	Z, 00196$
                                   6203 ;src/main.c:587: if (enemies[i].visible == 1) {
      001908 F8 02                 6204 	ldhl	sp,#2
      00190A 2A                    6205 	ld	a, (hl+)
      00190B 5F                    6206 	ld	e, a
      00190C 56                    6207 	ld	d, (hl)
      00190D 21 0A 00              6208 	ld	hl, #0x000a
      001910 19                    6209 	add	hl, de
      001911 4D                    6210 	ld	c, l
      001912 44                    6211 	ld	b, h
      001913 0A                    6212 	ld	a, (bc)
      001914 F8 06                 6213 	ldhl	sp,	#6
      001916 77                    6214 	ld	(hl), a
                                   6215 ;src/main.c:588: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001917 F8 02                 6216 	ldhl	sp,#2
      001919 2A                    6217 	ld	a, (hl+)
      00191A 5F                    6218 	ld	e, a
      00191B 56                    6219 	ld	d, (hl)
      00191C 1A                    6220 	ld	a, (de)
      00191D F8 07                 6221 	ldhl	sp,	#7
      00191F 22                    6222 	ld	(hl+), a
      001920 13                    6223 	inc	de
      001921 1A                    6224 	ld	a, (de)
      001922 77                    6225 	ld	(hl), a
      001923 F8 02                 6226 	ldhl	sp,#2
      001925 2A                    6227 	ld	a, (hl+)
      001926 5F                    6228 	ld	e, a
      001927 56                    6229 	ld	d, (hl)
      001928 21 02 00              6230 	ld	hl, #0x0002
      00192B 19                    6231 	add	hl, de
      00192C E5                    6232 	push	hl
      00192D 7D                    6233 	ld	a, l
      00192E F8 0B                 6234 	ldhl	sp,	#11
      001930 77                    6235 	ld	(hl), a
      001931 E1                    6236 	pop	hl
      001932 7C                    6237 	ld	a, h
      001933 F8 0A                 6238 	ldhl	sp,	#10
      001935 77                    6239 	ld	(hl), a
                                   6240 ;src/main.c:590: set_sprite_tile(10+(i<<1), 0x7f);
      001936 F8 01                 6241 	ldhl	sp,	#1
      001938 5E                    6242 	ld	e, (hl)
                                   6243 ;src/main.c:588: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001939 F8 07                 6244 	ldhl	sp,	#7
      00193B 7E                    6245 	ld	a, (hl)
      00193C F8 0B                 6246 	ldhl	sp,	#11
      00193E 77                    6247 	ld	(hl), a
      00193F F8 08                 6248 	ldhl	sp,	#8
      001941 7E                    6249 	ld	a, (hl)
      001942 F8 0C                 6250 	ldhl	sp,	#12
                                   6251 ;src/main.c:590: set_sprite_tile(10+(i<<1), 0x7f);
      001944 22                    6252 	ld	(hl+), a
      001945 7B                    6253 	ld	a, e
      001946 87                    6254 	add	a, a
                                   6255 ;src/main.c:588: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001947 32                    6256 	ld	(hl-), a
      001948 2A                    6257 	ld	a, (hl+)
      001949 23                    6258 	inc	hl
      00194A 07                    6259 	rlca
      00194B E6 01                 6260 	and	a,#0x01
                                   6261 ;src/main.c:590: set_sprite_tile(10+(i<<1), 0x7f);
      00194D 32                    6262 	ld	(hl-), a
      00194E 2A                    6263 	ld	a, (hl+)
      00194F 23                    6264 	inc	hl
      001950 C6 0A                 6265 	add	a, #0x0a
      001952 77                    6266 	ld	(hl), a
                                   6267 ;src/main.c:587: if (enemies[i].visible == 1) {
      001953 F8 06                 6268 	ldhl	sp,	#6
      001955 7E                    6269 	ld	a, (hl)
      001956 3D                    6270 	dec	a
      001957 20 74                 6271 	jr	NZ, 00163$
                                   6272 ;src/main.c:588: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001959 F8 0E                 6273 	ldhl	sp,	#14
      00195B 7E                    6274 	ld	a, (hl)
      00195C B7                    6275 	or	a, a
      00195D 20 48                 6276 	jr	NZ, 00144$
      00195F F8 0B                 6277 	ldhl	sp,	#11
      001961 3E AC                 6278 	ld	a, #0xac
      001963 96                    6279 	sub	a, (hl)
      001964 23                    6280 	inc	hl
      001965 3E 00                 6281 	ld	a, #0x00
      001967 9E                    6282 	sbc	a, (hl)
      001968 3E 00                 6283 	ld	a, #0x00
      00196A 57                    6284 	ld	d, a
      00196B CB 7E                 6285 	bit	7, (hl)
      00196D 28 07                 6286 	jr	Z, 00424$
      00196F CB 7A                 6287 	bit	7, d
      001971 20 08                 6288 	jr	NZ, 00425$
      001973 BF                    6289 	cp	a, a
      001974 18 05                 6290 	jr	00425$
      001976                       6291 00424$:
      001976 CB 7A                 6292 	bit	7, d
      001978 28 01                 6293 	jr	Z, 00425$
      00197A 37                    6294 	scf
      00197B                       6295 00425$:
      00197B 38 2A                 6296 	jr	C, 00144$
      00197D F8 09                 6297 	ldhl	sp,#9
      00197F 2A                    6298 	ld	a, (hl+)
      001980 5F                    6299 	ld	e, a
      001981 56                    6300 	ld	d, (hl)
      001982 1A                    6301 	ld	a, (de)
      001983 6F                    6302 	ld	l, a
                                   6303 ;	spillPairReg hl
                                   6304 ;	spillPairReg hl
      001984 13                    6305 	inc	de
      001985 1A                    6306 	ld	a, (de)
      001986 67                    6307 	ld	h, a
                                   6308 ;	spillPairReg hl
                                   6309 ;	spillPairReg hl
      001987 CB 7C                 6310 	bit	7, h
      001989 20 1C                 6311 	jr	NZ, 00144$
      00198B 5C                    6312 	ld	e, h
      00198C 16 00                 6313 	ld	d, #0x00
      00198E 3E 98                 6314 	ld	a, #0x98
      001990 BD                    6315 	cp	a, l
      001991 3E 00                 6316 	ld	a, #0x00
      001993 9C                    6317 	sbc	a, h
      001994 CB 7B                 6318 	bit	7, e
      001996 28 07                 6319 	jr	Z, 00426$
      001998 CB 7A                 6320 	bit	7, d
      00199A 20 08                 6321 	jr	NZ, 00427$
      00199C BF                    6322 	cp	a, a
      00199D 18 05                 6323 	jr	00427$
      00199F                       6324 00426$:
      00199F CB 7A                 6325 	bit	7, d
      0019A1 28 01                 6326 	jr	Z, 00427$
      0019A3 37                    6327 	scf
      0019A4                       6328 00427$:
      0019A4 D2rC3r1B              6329 	jp	NC, 00196$
      0019A7                       6330 00144$:
                                   6331 ;src/main.c:589: enemies[i].visible = 0;
      0019A7 AF                    6332 	xor	a, a
      0019A8 02                    6333 	ld	(bc), a
                                   6334 ;src/main.c:590: set_sprite_tile(10+(i<<1), 0x7f);
      0019A9 F8 0F                 6335 	ldhl	sp,	#15
                                   6336 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0019AB 6E                    6337 	ld	l, (hl)
      0019AC 11r00r00              6338 	ld	de, #_shadow_OAM+0
                                   6339 ;	spillPairReg hl
                                   6340 ;	spillPairReg hl
      0019AF 26 00                 6341 	ld	h, #0x00
                                   6342 ;	spillPairReg hl
                                   6343 ;	spillPairReg hl
      0019B1 29                    6344 	add	hl, hl
      0019B2 29                    6345 	add	hl, hl
      0019B3 19                    6346 	add	hl, de
      0019B4 23                    6347 	inc	hl
      0019B5 23                    6348 	inc	hl
      0019B6 36 7F                 6349 	ld	(hl), #0x7f
                                   6350 ;src/main.c:591: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0019B8 F8 0D                 6351 	ldhl	sp,	#13
      0019BA 7E                    6352 	ld	a, (hl)
      0019BB C6 0B                 6353 	add	a, #0x0b
                                   6354 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0019BD 6F                    6355 	ld	l, a
      0019BE 11r00r00              6356 	ld	de, #_shadow_OAM+0
                                   6357 ;	spillPairReg hl
                                   6358 ;	spillPairReg hl
      0019C1 26 00                 6359 	ld	h, #0x00
                                   6360 ;	spillPairReg hl
                                   6361 ;	spillPairReg hl
      0019C3 29                    6362 	add	hl, hl
      0019C4 29                    6363 	add	hl, hl
      0019C5 19                    6364 	add	hl, de
      0019C6 23                    6365 	inc	hl
      0019C7 23                    6366 	inc	hl
      0019C8 36 7F                 6367 	ld	(hl), #0x7f
                                   6368 ;src/main.c:591: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0019CA C3rC3r1B              6369 	jp	00196$
      0019CD                       6370 00163$:
                                   6371 ;src/main.c:595: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      0019CD F8 0E                 6372 	ldhl	sp,	#14
      0019CF CB 46                 6373 	bit	0, (hl)
      0019D1 C2rCEr1A              6374 	jp	NZ, 00157$
      0019D4 F8 0B                 6375 	ldhl	sp,	#11
      0019D6 2A                    6376 	ld	a, (hl+)
      0019D7 D6 AC                 6377 	sub	a, #0xac
      0019D9 7E                    6378 	ld	a, (hl)
      0019DA DE 00                 6379 	sbc	a, #0x00
      0019DC 56                    6380 	ld	d, (hl)
      0019DD 3E 00                 6381 	ld	a, #0x00
      0019DF CB 7F                 6382 	bit	7,a
      0019E1 28 07                 6383 	jr	Z, 00428$
      0019E3 CB 7A                 6384 	bit	7, d
      0019E5 20 08                 6385 	jr	NZ, 00429$
      0019E7 BF                    6386 	cp	a, a
      0019E8 18 05                 6387 	jr	00429$
      0019EA                       6388 00428$:
      0019EA CB 7A                 6389 	bit	7, d
      0019EC 28 01                 6390 	jr	Z, 00429$
      0019EE 37                    6391 	scf
      0019EF                       6392 00429$:
      0019EF D2rCEr1A              6393 	jp	NC, 00157$
      0019F2 F8 09                 6394 	ldhl	sp,#9
      0019F4 2A                    6395 	ld	a, (hl+)
      0019F5 5F                    6396 	ld	e, a
      0019F6 56                    6397 	ld	d, (hl)
      0019F7 1A                    6398 	ld	a, (de)
      0019F8 6F                    6399 	ld	l, a
                                   6400 ;	spillPairReg hl
                                   6401 ;	spillPairReg hl
      0019F9 13                    6402 	inc	de
      0019FA 1A                    6403 	ld	a, (de)
      0019FB 67                    6404 	ld	h, a
                                   6405 ;	spillPairReg hl
                                   6406 ;	spillPairReg hl
      0019FC 5C                    6407 	ld	e, h
      0019FD AF                    6408 	xor	a, a
      0019FE 57                    6409 	ld	d, a
      0019FF BD                    6410 	cp	a, l
      001A00 9C                    6411 	sbc	a, h
      001A01 CB 7B                 6412 	bit	7, e
      001A03 28 07                 6413 	jr	Z, 00430$
      001A05 CB 7A                 6414 	bit	7, d
      001A07 20 08                 6415 	jr	NZ, 00431$
      001A09 BF                    6416 	cp	a, a
      001A0A 18 05                 6417 	jr	00431$
      001A0C                       6418 00430$:
      001A0C CB 7A                 6419 	bit	7, d
      001A0E 28 01                 6420 	jr	Z, 00431$
      001A10 37                    6421 	scf
      001A11                       6422 00431$:
      001A11 D2rCEr1A              6423 	jp	NC, 00157$
      001A14 7D                    6424 	ld	a, l
      001A15 D6 98                 6425 	sub	a, #0x98
      001A17 7C                    6426 	ld	a, h
      001A18 17                    6427 	rla
      001A19 3F                    6428 	ccf
      001A1A 1F                    6429 	rra
      001A1B DE 80                 6430 	sbc	a, #0x80
      001A1D D2rCEr1A              6431 	jp	NC, 00157$
                                   6432 ;src/main.c:596: enemies[i].visible = 1;
      001A20 3E 01                 6433 	ld	a, #0x01
      001A22 02                    6434 	ld	(bc), a
                                   6435 ;src/main.c:597: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      001A23 F8 02                 6436 	ldhl	sp,#2
      001A25 2A                    6437 	ld	a, (hl+)
      001A26 5F                    6438 	ld	e, a
      001A27 56                    6439 	ld	d, (hl)
      001A28 21 06 00              6440 	ld	hl, #0x0006
      001A2B 19                    6441 	add	hl, de
      001A2C 4D                    6442 	ld	c, l
      001A2D 44                    6443 	ld	b, h
      001A2E 0A                    6444 	ld	a, (bc)
      001A2F F8 0E                 6445 	ldhl	sp,	#14
      001A31 22                    6446 	ld	(hl+), a
      001A32 4E                    6447 	ld	c, (hl)
                                   6448 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A33 F8 0B                 6449 	ldhl	sp,	#11
      001A35 79                    6450 	ld	a, c
      001A36 22                    6451 	ld	(hl+), a
      001A37 36 00                 6452 	ld	(hl), #0x00
      001A39 3E 02                 6453 	ld	a, #0x02
      001A3B                       6454 00432$:
      001A3B F8 0B                 6455 	ldhl	sp,	#11
      001A3D CB 26                 6456 	sla	(hl)
      001A3F 23                    6457 	inc	hl
      001A40 CB 16                 6458 	rl	(hl)
      001A42 3D                    6459 	dec	a
      001A43 20 F6                 6460 	jr	NZ, 00432$
      001A45 2B                    6461 	dec	hl
      001A46 2A                    6462 	ld	a, (hl+)
      001A47 5F                    6463 	ld	e, a
      001A48 56                    6464 	ld	d, (hl)
      001A49 21r00r00              6465 	ld	hl, #_shadow_OAM
      001A4C 19                    6466 	add	hl, de
      001A4D E5                    6467 	push	hl
      001A4E 7D                    6468 	ld	a, l
      001A4F F8 0B                 6469 	ldhl	sp,	#11
      001A51 77                    6470 	ld	(hl), a
      001A52 E1                    6471 	pop	hl
      001A53 7C                    6472 	ld	a, h
      001A54 F8 0A                 6473 	ldhl	sp,	#10
      001A56 32                    6474 	ld	(hl-), a
      001A57 2A                    6475 	ld	a, (hl+)
      001A58 5F                    6476 	ld	e, a
      001A59 56                    6477 	ld	d, (hl)
      001A5A 21 02 00              6478 	ld	hl, #0x0002
      001A5D 19                    6479 	add	hl, de
      001A5E E5                    6480 	push	hl
      001A5F 7D                    6481 	ld	a, l
      001A60 F8 0D                 6482 	ldhl	sp,	#13
      001A62 77                    6483 	ld	(hl), a
      001A63 E1                    6484 	pop	hl
      001A64 7C                    6485 	ld	a, h
      001A65 F8 0C                 6486 	ldhl	sp,	#12
      001A67 32                    6487 	ld	(hl-), a
      001A68 2A                    6488 	ld	a, (hl+)
      001A69 5F                    6489 	ld	e, a
      001A6A 2A                    6490 	ld	a, (hl+)
      001A6B 23                    6491 	inc	hl
      001A6C 57                    6492 	ld	d, a
      001A6D 7E                    6493 	ld	a, (hl)
      001A6E 12                    6494 	ld	(de), a
                                   6495 ;src/main.c:598: if (enemies[i].spriteCount == 2) {
      001A6F F8 02                 6496 	ldhl	sp,#2
      001A71 2A                    6497 	ld	a, (hl+)
      001A72 5F                    6498 	ld	e, a
      001A73 56                    6499 	ld	d, (hl)
      001A74 21 08 00              6500 	ld	hl, #0x0008
      001A77 19                    6501 	add	hl, de
      001A78 4D                    6502 	ld	c, l
      001A79 44                    6503 	ld	b, h
      001A7A 0A                    6504 	ld	a, (bc)
      001A7B D6 02                 6505 	sub	a, #0x02
      001A7D C2rC3r1B              6506 	jp	NZ,00196$
                                   6507 ;src/main.c:599: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001A80 F8 02                 6508 	ldhl	sp,#2
      001A82 2A                    6509 	ld	a, (hl+)
      001A83 5F                    6510 	ld	e, a
      001A84 56                    6511 	ld	d, (hl)
      001A85 21 07 00              6512 	ld	hl, #0x0007
      001A88 19                    6513 	add	hl, de
      001A89 4D                    6514 	ld	c, l
      001A8A 44                    6515 	ld	b, h
      001A8B 0A                    6516 	ld	a, (bc)
      001A8C F8 0F                 6517 	ldhl	sp,	#15
      001A8E 32                    6518 	ld	(hl-), a
      001A8F 2B                    6519 	dec	hl
      001A90 7E                    6520 	ld	a, (hl)
      001A91 C6 0B                 6521 	add	a, #0x0b
                                   6522 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A93 22                    6523 	ld	(hl+), a
      001A94 36 00                 6524 	ld	(hl), #0x00
      001A96 3E 02                 6525 	ld	a, #0x02
      001A98                       6526 00435$:
      001A98 F8 0D                 6527 	ldhl	sp,	#13
      001A9A CB 26                 6528 	sla	(hl)
      001A9C 23                    6529 	inc	hl
      001A9D CB 16                 6530 	rl	(hl)
      001A9F 3D                    6531 	dec	a
      001AA0 20 F6                 6532 	jr	NZ, 00435$
      001AA2 2B                    6533 	dec	hl
      001AA3 2A                    6534 	ld	a, (hl+)
      001AA4 5F                    6535 	ld	e, a
      001AA5 56                    6536 	ld	d, (hl)
      001AA6 21r00r00              6537 	ld	hl, #_shadow_OAM
      001AA9 19                    6538 	add	hl, de
      001AAA E5                    6539 	push	hl
      001AAB 7D                    6540 	ld	a, l
      001AAC F8 0D                 6541 	ldhl	sp,	#13
      001AAE 77                    6542 	ld	(hl), a
      001AAF E1                    6543 	pop	hl
      001AB0 7C                    6544 	ld	a, h
      001AB1 F8 0C                 6545 	ldhl	sp,	#12
      001AB3 32                    6546 	ld	(hl-), a
      001AB4 2A                    6547 	ld	a, (hl+)
      001AB5 5F                    6548 	ld	e, a
      001AB6 56                    6549 	ld	d, (hl)
      001AB7 21 02 00              6550 	ld	hl, #0x0002
      001ABA 19                    6551 	add	hl, de
      001ABB E5                    6552 	push	hl
      001ABC 7D                    6553 	ld	a, l
      001ABD F8 0F                 6554 	ldhl	sp,	#15
      001ABF 77                    6555 	ld	(hl), a
      001AC0 E1                    6556 	pop	hl
      001AC1 7C                    6557 	ld	a, h
      001AC2 F8 0E                 6558 	ldhl	sp,	#14
      001AC4 32                    6559 	ld	(hl-), a
      001AC5 2A                    6560 	ld	a, (hl+)
      001AC6 5F                    6561 	ld	e, a
      001AC7 2A                    6562 	ld	a, (hl+)
      001AC8 57                    6563 	ld	d, a
      001AC9 7E                    6564 	ld	a, (hl)
      001ACA 12                    6565 	ld	(de), a
                                   6566 ;src/main.c:599: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001ACB C3rC3r1B              6567 	jp	00196$
      001ACE                       6568 00157$:
                                   6569 ;src/main.c:602: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001ACE F8 07                 6570 	ldhl	sp,	#7
      001AD0 2A                    6571 	ld	a, (hl+)
      001AD1 D6 9C                 6572 	sub	a, #0x9c
      001AD3 7E                    6573 	ld	a, (hl)
      001AD4 DE FF                 6574 	sbc	a, #0xff
      001AD6 56                    6575 	ld	d, (hl)
      001AD7 3E FF                 6576 	ld	a, #0xff
      001AD9 CB 7F                 6577 	bit	7,a
      001ADB 28 07                 6578 	jr	Z, 00436$
      001ADD CB 7A                 6579 	bit	7, d
      001ADF 20 08                 6580 	jr	NZ, 00437$
      001AE1 BF                    6581 	cp	a, a
      001AE2 18 05                 6582 	jr	00437$
      001AE4                       6583 00436$:
      001AE4 CB 7A                 6584 	bit	7, d
      001AE6 28 01                 6585 	jr	Z, 00437$
      001AE8 37                    6586 	scf
      001AE9                       6587 00437$:
      001AE9 38 4F                 6588 	jr	C, 00151$
      001AEB F8 0B                 6589 	ldhl	sp,	#11
      001AED 3E 10                 6590 	ld	a, #0x10
      001AEF 96                    6591 	sub	a, (hl)
      001AF0 23                    6592 	inc	hl
      001AF1 3E 01                 6593 	ld	a, #0x01
      001AF3 9E                    6594 	sbc	a, (hl)
      001AF4 3E 01                 6595 	ld	a, #0x01
      001AF6 57                    6596 	ld	d, a
      001AF7 CB 7E                 6597 	bit	7, (hl)
      001AF9 28 07                 6598 	jr	Z, 00438$
      001AFB CB 7A                 6599 	bit	7, d
      001AFD 20 08                 6600 	jr	NZ, 00439$
      001AFF BF                    6601 	cp	a, a
      001B00 18 05                 6602 	jr	00439$
      001B02                       6603 00438$:
      001B02 CB 7A                 6604 	bit	7, d
      001B04 28 01                 6605 	jr	Z, 00439$
      001B06 37                    6606 	scf
      001B07                       6607 00439$:
      001B07 38 31                 6608 	jr	C, 00151$
      001B09 F8 09                 6609 	ldhl	sp,#9
      001B0B 2A                    6610 	ld	a, (hl+)
      001B0C 5F                    6611 	ld	e, a
      001B0D 56                    6612 	ld	d, (hl)
      001B0E 1A                    6613 	ld	a, (de)
      001B0F 4F                    6614 	ld	c, a
      001B10 13                    6615 	inc	de
      001B11 1A                    6616 	ld	a, (de)
      001B12 47                    6617 	ld	b, a
      001B13 79                    6618 	ld	a, c
      001B14 D6 9C                 6619 	sub	a, #0x9c
      001B16 78                    6620 	ld	a, b
      001B17 17                    6621 	rla
      001B18 3F                    6622 	ccf
      001B19 1F                    6623 	rra
      001B1A DE 7F                 6624 	sbc	a, #0x7f
      001B1C 38 1C                 6625 	jr	C, 00151$
      001B1E 58                    6626 	ld	e, b
      001B1F 16 00                 6627 	ld	d, #0x00
      001B21 3E FC                 6628 	ld	a, #0xfc
      001B23 B9                    6629 	cp	a, c
      001B24 3E 00                 6630 	ld	a, #0x00
      001B26 98                    6631 	sbc	a, b
      001B27 CB 7B                 6632 	bit	7, e
      001B29 28 07                 6633 	jr	Z, 00440$
      001B2B CB 7A                 6634 	bit	7, d
      001B2D 20 08                 6635 	jr	NZ, 00441$
      001B2F BF                    6636 	cp	a, a
      001B30 18 05                 6637 	jr	00441$
      001B32                       6638 00440$:
      001B32 CB 7A                 6639 	bit	7, d
      001B34 28 01                 6640 	jr	Z, 00441$
      001B36 37                    6641 	scf
      001B37                       6642 00441$:
      001B37 D2rC3r1B              6643 	jp	NC, 00196$
      001B3A                       6644 00151$:
                                   6645 ;src/main.c:603: enemies[i].alive = 0;
      001B3A F8 04                 6646 	ldhl	sp,	#4
      001B3C 2A                    6647 	ld	a,	(hl+)
      001B3D 66                    6648 	ld	h, (hl)
      001B3E 6F                    6649 	ld	l, a
      001B3F 36 00                 6650 	ld	(hl), #0x00
                                   6651 ;src/main.c:604: set_sprite_tile(10+(i<<1), 0x7f);
      001B41 F8 0F                 6652 	ldhl	sp,	#15
                                   6653 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B43 3A                    6654 	ld	a, (hl-)
      001B44 22                    6655 	ld	(hl+), a
      001B45 36 00                 6656 	ld	(hl), #0x00
      001B47 3E 02                 6657 	ld	a, #0x02
      001B49                       6658 00442$:
      001B49 F8 0E                 6659 	ldhl	sp,	#14
      001B4B CB 26                 6660 	sla	(hl)
      001B4D 23                    6661 	inc	hl
      001B4E CB 16                 6662 	rl	(hl)
      001B50 3D                    6663 	dec	a
      001B51 20 F6                 6664 	jr	NZ, 00442$
      001B53 2B                    6665 	dec	hl
      001B54 2A                    6666 	ld	a, (hl+)
      001B55 5F                    6667 	ld	e, a
      001B56 56                    6668 	ld	d, (hl)
      001B57 21r00r00              6669 	ld	hl, #_shadow_OAM
      001B5A 19                    6670 	add	hl, de
      001B5B E5                    6671 	push	hl
      001B5C 7D                    6672 	ld	a, l
      001B5D F8 0D                 6673 	ldhl	sp,	#13
      001B5F 77                    6674 	ld	(hl), a
      001B60 E1                    6675 	pop	hl
      001B61 7C                    6676 	ld	a, h
      001B62 F8 0C                 6677 	ldhl	sp,	#12
      001B64 32                    6678 	ld	(hl-), a
      001B65 2A                    6679 	ld	a, (hl+)
      001B66 5F                    6680 	ld	e, a
      001B67 56                    6681 	ld	d, (hl)
      001B68 21 02 00              6682 	ld	hl, #0x0002
      001B6B 19                    6683 	add	hl, de
      001B6C E5                    6684 	push	hl
      001B6D 7D                    6685 	ld	a, l
      001B6E F8 10                 6686 	ldhl	sp,	#16
      001B70 77                    6687 	ld	(hl), a
      001B71 E1                    6688 	pop	hl
      001B72 7C                    6689 	ld	a, h
      001B73 F8 0F                 6690 	ldhl	sp,	#15
      001B75 32                    6691 	ld	(hl-), a
      001B76 2A                    6692 	ld	a,	(hl+)
      001B77 66                    6693 	ld	h, (hl)
      001B78 6F                    6694 	ld	l, a
      001B79 36 7F                 6695 	ld	(hl), #0x7f
                                   6696 ;src/main.c:605: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001B7B F8 0D                 6697 	ldhl	sp,	#13
      001B7D 2A                    6698 	ld	a, (hl+)
      001B7E 23                    6699 	inc	hl
      001B7F C6 0B                 6700 	add	a, #0x0b
      001B81 77                    6701 	ld	(hl), a
                                   6702 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B82 3A                    6703 	ld	a, (hl-)
      001B83 22                    6704 	ld	(hl+), a
      001B84 36 00                 6705 	ld	(hl), #0x00
      001B86 3E 02                 6706 	ld	a, #0x02
      001B88                       6707 00443$:
      001B88 F8 0E                 6708 	ldhl	sp,	#14
      001B8A CB 26                 6709 	sla	(hl)
      001B8C 23                    6710 	inc	hl
      001B8D CB 16                 6711 	rl	(hl)
      001B8F 3D                    6712 	dec	a
      001B90 20 F6                 6713 	jr	NZ, 00443$
      001B92 2B                    6714 	dec	hl
      001B93 2A                    6715 	ld	a, (hl+)
      001B94 5F                    6716 	ld	e, a
      001B95 56                    6717 	ld	d, (hl)
      001B96 21r00r00              6718 	ld	hl, #_shadow_OAM
      001B99 19                    6719 	add	hl, de
      001B9A E5                    6720 	push	hl
      001B9B 7D                    6721 	ld	a, l
      001B9C F8 0E                 6722 	ldhl	sp,	#14
      001B9E 77                    6723 	ld	(hl), a
      001B9F E1                    6724 	pop	hl
      001BA0 7C                    6725 	ld	a, h
      001BA1 F8 0D                 6726 	ldhl	sp,	#13
      001BA3 32                    6727 	ld	(hl-), a
      001BA4 2A                    6728 	ld	a, (hl+)
      001BA5 5F                    6729 	ld	e, a
      001BA6 56                    6730 	ld	d, (hl)
      001BA7 21 02 00              6731 	ld	hl, #0x0002
      001BAA 19                    6732 	add	hl, de
      001BAB E5                    6733 	push	hl
      001BAC 7D                    6734 	ld	a, l
      001BAD F8 10                 6735 	ldhl	sp,	#16
      001BAF 77                    6736 	ld	(hl), a
      001BB0 E1                    6737 	pop	hl
      001BB1 7C                    6738 	ld	a, h
      001BB2 F8 0F                 6739 	ldhl	sp,	#15
      001BB4 32                    6740 	ld	(hl-), a
      001BB5 2A                    6741 	ld	a,	(hl+)
      001BB6 66                    6742 	ld	h, (hl)
      001BB7 6F                    6743 	ld	l, a
      001BB8 36 7F                 6744 	ld	(hl), #0x7f
                                   6745 ;src/main.c:606: initEnemy(i);
      001BBA F8 01                 6746 	ldhl	sp,	#1
      001BBC 7E                    6747 	ld	a, (hl)
      001BBD F5                    6748 	push	af
      001BBE 33                    6749 	inc	sp
      001BBF CDr69r11              6750 	call	_initEnemy
      001BC2 33                    6751 	inc	sp
      001BC3                       6752 00196$:
                                   6753 ;src/main.c:612: }
      001BC3 E8 10                 6754 	add	sp, #16
      001BC5 C9                    6755 	ret
                                   6756 ;src/main.c:617: void move() {
                                   6757 ;	---------------------------------
                                   6758 ; Function move
                                   6759 ; ---------------------------------
      001BC6                       6760 _move::
      001BC6 E8 F8                 6761 	add	sp, #-8
                                   6762 ;src/main.c:620: if (joydata & J_A) {
      001BC8 FArF5r00              6763 	ld	a, (#_joydata)
      001BCB CB 67                 6764 	bit	4, a
      001BCD 28 16                 6765 	jr	Z, 00102$
                                   6766 ;src/main.c:621: xSpeed += xDir + xDir + xDir;
      001BCF 21r93r00              6767 	ld	hl, #_xDir
      001BD2 7E                    6768 	ld	a, (hl)
      001BD3 87                    6769 	add	a, a
      001BD4 86                    6770 	add	a, (hl)
      001BD5 21r95r00              6771 	ld	hl, #_xSpeed
      001BD8 86                    6772 	add	a, (hl)
      001BD9 77                    6773 	ld	(hl), a
                                   6774 ;src/main.c:622: ySpeed += yDir + yDir + yDir;
      001BDA 21r94r00              6775 	ld	hl, #_yDir
      001BDD 7E                    6776 	ld	a, (hl)
      001BDE 87                    6777 	add	a, a
      001BDF 86                    6778 	add	a, (hl)
      001BE0 21r96r00              6779 	ld	hl, #_ySpeed
      001BE3 86                    6780 	add	a, (hl)
      001BE4 77                    6781 	ld	(hl), a
      001BE5                       6782 00102$:
                                   6783 ;src/main.c:626: xSpeed = clamp(xSpeed, -100, 100);
      001BE5 21r95r00              6784 	ld	hl, #_xSpeed
      001BE8 4E                    6785 	ld	c, (hl)
                                   6786 ;src/main.c:345: return (value < min) ? min : (value > max) ? max : value;
      001BE9 79                    6787 	ld	a, c
      001BEA EE 80                 6788 	xor	a, #0x80
      001BEC D6 1C                 6789 	sub	a, #0x1c
      001BEE 30 04                 6790 	jr	NC, 00165$
      001BF0 0E 9C                 6791 	ld	c, #0x9c
      001BF2 18 19                 6792 	jr	00166$
      001BF4                       6793 00165$:
      001BF4 59                    6794 	ld	e, c
      001BF5 3E 64                 6795 	ld	a,#0x64
      001BF7 57                    6796 	ld	d,a
      001BF8 91                    6797 	sub	a, c
      001BF9 CB 7B                 6798 	bit	7, e
      001BFB 28 07                 6799 	jr	Z, 00342$
      001BFD CB 7A                 6800 	bit	7, d
      001BFF 20 08                 6801 	jr	NZ, 00343$
      001C01 BF                    6802 	cp	a, a
      001C02 18 05                 6803 	jr	00343$
      001C04                       6804 00342$:
      001C04 CB 7A                 6805 	bit	7, d
      001C06 28 01                 6806 	jr	Z, 00343$
      001C08 37                    6807 	scf
      001C09                       6808 00343$:
      001C09 30 02                 6809 	jr	NC, 00167$
      001C0B 0E 64                 6810 	ld	c, #0x64
      001C0D                       6811 00167$:
      001C0D                       6812 00166$:
      001C0D 21r95r00              6813 	ld	hl, #_xSpeed
      001C10 71                    6814 	ld	(hl), c
                                   6815 ;src/main.c:627: ySpeed = clamp(ySpeed, -100, 100);
      001C11 21r96r00              6816 	ld	hl, #_ySpeed
      001C14 4E                    6817 	ld	c, (hl)
                                   6818 ;src/main.c:345: return (value < min) ? min : (value > max) ? max : value;
      001C15 79                    6819 	ld	a, c
      001C16 EE 80                 6820 	xor	a, #0x80
      001C18 D6 1C                 6821 	sub	a, #0x1c
      001C1A 30 04                 6822 	jr	NC, 00169$
      001C1C 0E 9C                 6823 	ld	c, #0x9c
      001C1E 18 19                 6824 	jr	00170$
      001C20                       6825 00169$:
      001C20 59                    6826 	ld	e, c
      001C21 3E 64                 6827 	ld	a,#0x64
      001C23 57                    6828 	ld	d,a
      001C24 91                    6829 	sub	a, c
      001C25 CB 7B                 6830 	bit	7, e
      001C27 28 07                 6831 	jr	Z, 00344$
      001C29 CB 7A                 6832 	bit	7, d
      001C2B 20 08                 6833 	jr	NZ, 00345$
      001C2D BF                    6834 	cp	a, a
      001C2E 18 05                 6835 	jr	00345$
      001C30                       6836 00344$:
      001C30 CB 7A                 6837 	bit	7, d
      001C32 28 01                 6838 	jr	Z, 00345$
      001C34 37                    6839 	scf
      001C35                       6840 00345$:
      001C35 30 02                 6841 	jr	NC, 00171$
      001C37 0E 64                 6842 	ld	c, #0x64
      001C39                       6843 00171$:
      001C39                       6844 00170$:
      001C39 21r96r00              6845 	ld	hl, #_ySpeed
      001C3C 71                    6846 	ld	(hl), c
                                   6847 ;src/main.c:629: xOverflow = 0;
      001C3D AF                    6848 	xor	a, a
      001C3E 21rA1r00              6849 	ld	hl, #_xOverflow
      001C41 22                    6850 	ld	(hl+), a
      001C42 77                    6851 	ld	(hl), a
                                   6852 ;src/main.c:630: yOverflow = 0;
      001C43 AF                    6853 	xor	a, a
      001C44 21rA3r00              6854 	ld	hl, #_yOverflow
      001C47 22                    6855 	ld	(hl+), a
      001C48 77                    6856 	ld	(hl), a
                                   6857 ;src/main.c:635: uint8_t xCollisionPoint = playerDrawX; 
      001C49 21r9Br00              6858 	ld	hl, #_playerDrawX
      001C4C 4E                    6859 	ld	c, (hl)
                                   6860 ;src/main.c:638: xCollisionPoint = playerDrawX +8; //right edge
      001C4D 46                    6861 	ld	b, (hl)
                                   6862 ;src/main.c:637: if (xSpeed > 0) {
      001C4E 21r95r00              6863 	ld	hl, #_xSpeed
      001C51 5E                    6864 	ld	e, (hl)
      001C52 AF                    6865 	xor	a, a
      001C53 57                    6866 	ld	d, a
      001C54 96                    6867 	sub	a, (hl)
      001C55 CB 7B                 6868 	bit	7, e
      001C57 28 07                 6869 	jr	Z, 00346$
      001C59 CB 7A                 6870 	bit	7, d
      001C5B 20 08                 6871 	jr	NZ, 00347$
      001C5D BF                    6872 	cp	a, a
      001C5E 18 05                 6873 	jr	00347$
      001C60                       6874 00346$:
      001C60 CB 7A                 6875 	bit	7, d
      001C62 28 01                 6876 	jr	Z, 00347$
      001C64 37                    6877 	scf
      001C65                       6878 00347$:
      001C65 30 04                 6879 	jr	NC, 00104$
                                   6880 ;src/main.c:638: xCollisionPoint = playerDrawX +8; //right edge
      001C67 78                    6881 	ld	a, b
      001C68 C6 08                 6882 	add	a, #0x08
      001C6A 4F                    6883 	ld	c, a
      001C6B                       6884 00104$:
                                   6885 ;src/main.c:640: if (xSpeed < 0) {
      001C6B FAr95r00              6886 	ld	a, (#_xSpeed)
      001C6E CB 7F                 6887 	bit	7, a
      001C70 28 04                 6888 	jr	Z, 00106$
                                   6889 ;src/main.c:641: xCollisionPoint = playerDrawX -8; //left edge
      001C72 78                    6890 	ld	a, b
      001C73 C6 F8                 6891 	add	a, #0xf8
      001C75 4F                    6892 	ld	c, a
      001C76                       6893 00106$:
                                   6894 ;src/main.c:645: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001C76 06 00                 6895 	ld	b, #0x00
      001C78 79                    6896 	ld	a, c
      001C79 21r9Dr00              6897 	ld	hl, #_bgX
      001C7C 86                    6898 	add	a, (hl)
      001C7D 23                    6899 	inc	hl
      001C7E 4F                    6900 	ld	c, a
      001C7F 78                    6901 	ld	a, b
      001C80 8E                    6902 	adc	a, (hl)
      001C81 47                    6903 	ld	b, a
      001C82 CB 28                 6904 	sra	b
      001C84 CB 19                 6905 	rr	c
      001C86 CB 28                 6906 	sra	b
      001C88 CB 19                 6907 	rr	c
      001C8A CB 28                 6908 	sra	b
      001C8C CB 19                 6909 	rr	c
      001C8E 11 20 00              6910 	ld	de, #0x0020
      001C91 D5                    6911 	push	de
      001C92 C5                    6912 	push	bc
      001C93 CDr00r00              6913 	call	__modsint
      001C96 E8 04                 6914 	add	sp, #4
                                   6915 ;src/main.c:649: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001C98 21r9Cr00              6916 	ld	hl, #_playerDrawY
      001C9B 4E                    6917 	ld	c, (hl)
      001C9C 06 00                 6918 	ld	b, #0x00
      001C9E 79                    6919 	ld	a, c
      001C9F 21r9Fr00              6920 	ld	hl, #_bgY
      001CA2 86                    6921 	add	a, (hl)
      001CA3 23                    6922 	inc	hl
      001CA4 4F                    6923 	ld	c, a
      001CA5 78                    6924 	ld	a, b
      001CA6 8E                    6925 	adc	a, (hl)
      001CA7 47                    6926 	ld	b, a
      001CA8 CB 28                 6927 	sra	b
      001CAA CB 19                 6928 	rr	c
      001CAC CB 28                 6929 	sra	b
      001CAE CB 19                 6930 	rr	c
      001CB0 CB 28                 6931 	sra	b
      001CB2 CB 19                 6932 	rr	c
      001CB4 D5                    6933 	push	de
      001CB5 21 20 00              6934 	ld	hl, #0x0020
      001CB8 E5                    6935 	push	hl
      001CB9 C5                    6936 	push	bc
      001CBA CDr00r00              6937 	call	__modsint
      001CBD E8 04                 6938 	add	sp, #4
      001CBF 6B                    6939 	ld	l, e
                                   6940 ;	spillPairReg hl
                                   6941 ;	spillPairReg hl
                                   6942 ;	spillPairReg hl
                                   6943 ;	spillPairReg hl
      001CC0 D1                    6944 	pop	de
                                   6945 ;src/main.c:652: uint16_t ind = 32*bgindY + bgindX;
      001CC1 26 00                 6946 	ld	h, #0x00
                                   6947 ;	spillPairReg hl
                                   6948 ;	spillPairReg hl
      001CC3 29                    6949 	add	hl, hl
      001CC4 29                    6950 	add	hl, hl
      001CC5 29                    6951 	add	hl, hl
      001CC6 29                    6952 	add	hl, hl
      001CC7 29                    6953 	add	hl, hl
      001CC8 19                    6954 	add	hl, de
      001CC9 5D                    6955 	ld	e, l
      001CCA 54                    6956 	ld	d, h
                                   6957 ;src/main.c:653: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001CCB 0E 01                 6958 	ld	c, #0x01
                                   6959 ;src/main.c:654: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001CCD 21r87r00              6960 	ld	hl, #_background1
      001CD0 19                    6961 	add	hl, de
      001CD1 46                    6962 	ld	b, (hl)
      001CD2 1E 00                 6963 	ld	e, #0x00
      001CD4                       6964 00158$:
      001CD4 FAr89r0B              6965 	ld	a, (#_BLANKSIZE)
      001CD7 F8 02                 6966 	ldhl	sp,	#2
      001CD9 77                    6967 	ld	(hl), a
      001CDA 7B                    6968 	ld	a, e
      001CDB 96                    6969 	sub	a, (hl)
      001CDC 30 11                 6970 	jr	NC, 00109$
                                   6971 ;src/main.c:655: if (background1[ind] == BLANK[i] ) {
      001CDE 21r8Ar0B              6972 	ld	hl, #_BLANK
      001CE1 16 00                 6973 	ld	d, #0x00
      001CE3 19                    6974 	add	hl, de
      001CE4 56                    6975 	ld	d, (hl)
      001CE5 78                    6976 	ld	a, b
                                   6977 ;src/main.c:656: result = 0;
      001CE6 92                    6978 	sub	a,d
      001CE7 20 03                 6979 	jr	NZ, 00159$
      001CE9 4F                    6980 	ld	c,a
                                   6981 ;src/main.c:657: break;
      001CEA 18 03                 6982 	jr	00109$
      001CEC                       6983 00159$:
                                   6984 ;src/main.c:654: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001CEC 1C                    6985 	inc	e
      001CED 18 E5                 6986 	jr	00158$
      001CEF                       6987 00109$:
                                   6988 ;src/main.c:661: if (result == 0) {
      001CEF 79                    6989 	ld	a, c
      001CF0 B7                    6990 	or	a, a
      001CF1 C2rBFr1D              6991 	jp	NZ, 00114$
                                   6992 ;src/main.c:662: playerX+=xSpeed;
      001CF4 FAr95r00              6993 	ld	a, (#_xSpeed)
      001CF7 4F                    6994 	ld	c, a
      001CF8 07                    6995 	rlca
      001CF9 9F                    6996 	sbc	a, a
      001CFA 47                    6997 	ld	b, a
      001CFB 21r97r00              6998 	ld	hl, #_playerX
      001CFE 6E                    6999 	ld	l, (hl)
                                   7000 ;	spillPairReg hl
                                   7001 ;	spillPairReg hl
      001CFF FAr98r00              7002 	ld	a, (_playerX + 1)
      001D02 67                    7003 	ld	h, a
                                   7004 ;	spillPairReg hl
                                   7005 ;	spillPairReg hl
      001D03 09                    7006 	add	hl, bc
      001D04 4D                    7007 	ld	c, l
      001D05 44                    7008 	ld	b, h
      001D06 21r97r00              7009 	ld	hl, #_playerX
      001D09 79                    7010 	ld	a, c
      001D0A 22                    7011 	ld	(hl+), a
                                   7012 ;src/main.c:664: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001D0B 78                    7013 	ld	a, b
      001D0C 32                    7014 	ld	(hl-), a
      001D0D 2A                    7015 	ld	a, (hl+)
      001D0E 4F                    7016 	ld	c, a
      001D0F 46                    7017 	ld	b, (hl)
      001D10 79                    7018 	ld	a, c
      001D11 D6 80                 7019 	sub	a, #0x80
      001D13 78                    7020 	ld	a, b
      001D14 DE 08                 7021 	sbc	a, #0x08
      001D16 30 05                 7022 	jr	NC, 00173$
      001D18 01 80 08              7023 	ld	bc, #0x0880
      001D1B 18 0B                 7024 	jr	00174$
      001D1D                       7025 00173$:
      001D1D 3E 80                 7026 	ld	a, #0x80
      001D1F B9                    7027 	cp	a, c
      001D20 3E 0B                 7028 	ld	a, #0x0b
      001D22 98                    7029 	sbc	a, b
      001D23 30 03                 7030 	jr	NC, 00175$
      001D25 01 80 0B              7031 	ld	bc, #0x0b80
      001D28                       7032 00175$:
      001D28                       7033 00174$:
      001D28 59                    7034 	ld	e,c
      001D29 50                    7035 	ld	d,b
                                   7036 ;src/main.c:666: xOverflow = (playerX - limitedPlayerX);
      001D2A FAr97r00              7037 	ld	a, (#_playerX)
      001D2D 93                    7038 	sub	a, e
      001D2E EArA1r00              7039 	ld	(#_xOverflow),a
      001D31 FAr98r00              7040 	ld	a, (#_playerX + 1)
      001D34 9A                    7041 	sbc	a, d
      001D35 21rA2r00              7042 	ld	hl, #_xOverflow + 1
                                   7043 ;src/main.c:667: if (xOverflow >= 0) {
      001D38 32                    7044 	ld	(hl-), a
      001D39 6E                    7045 	ld	l, (hl)
                                   7046 ;	spillPairReg hl
                                   7047 ;	spillPairReg hl
      001D3A FArA2r00              7048 	ld	a, (_xOverflow + 1)
                                   7049 ;	spillPairReg hl
                                   7050 ;	spillPairReg hl
      001D3D CB 7F                 7051 	bit	7,a
      001D3F 20 22                 7052 	jr	NZ, 00111$
                                   7053 ;src/main.c:668: xOverflow = xOverflow >> 5;
      001D41 21rA2r00              7054 	ld	hl, #_xOverflow + 1
      001D44 CB 2E                 7055 	sra	(hl)
      001D46 2B                    7056 	dec	hl
      001D47 CB 1E                 7057 	rr	(hl)
      001D49 23                    7058 	inc	hl
      001D4A CB 2E                 7059 	sra	(hl)
      001D4C 2B                    7060 	dec	hl
      001D4D CB 1E                 7061 	rr	(hl)
      001D4F 23                    7062 	inc	hl
      001D50 CB 2E                 7063 	sra	(hl)
      001D52 2B                    7064 	dec	hl
      001D53 CB 1E                 7065 	rr	(hl)
      001D55 23                    7066 	inc	hl
      001D56 CB 2E                 7067 	sra	(hl)
      001D58 2B                    7068 	dec	hl
      001D59 CB 1E                 7069 	rr	(hl)
      001D5B 23                    7070 	inc	hl
      001D5C CB 2E                 7071 	sra	(hl)
      001D5E 2B                    7072 	dec	hl
      001D5F CB 1E                 7073 	rr	(hl)
      001D61 18 25                 7074 	jr	00112$
      001D63                       7075 00111$:
                                   7076 ;src/main.c:671: xOverflow = -((-xOverflow) >> 5);
      001D63 AF                    7077 	xor	a, a
      001D64 21rA1r00              7078 	ld	hl, #_xOverflow
      001D67 96                    7079 	sub	a, (hl)
      001D68 23                    7080 	inc	hl
      001D69 5F                    7081 	ld	e, a
      001D6A 9F                    7082 	sbc	a, a
      001D6B 96                    7083 	sub	a, (hl)
      001D6C 2B                    7084 	dec	hl
      001D6D 57                    7085 	ld	d, a
      001D6E CB 2A                 7086 	sra	d
      001D70 CB 1B                 7087 	rr	e
      001D72 CB 2A                 7088 	sra	d
      001D74 CB 1B                 7089 	rr	e
      001D76 CB 2A                 7090 	sra	d
      001D78 CB 1B                 7091 	rr	e
      001D7A CB 2A                 7092 	sra	d
      001D7C CB 1B                 7093 	rr	e
      001D7E CB 2A                 7094 	sra	d
      001D80 CB 1B                 7095 	rr	e
      001D82 AF                    7096 	xor	a, a
      001D83 93                    7097 	sub	a, e
      001D84 22                    7098 	ld	(hl+), a
      001D85 9F                    7099 	sbc	a, a
      001D86 92                    7100 	sub	a, d
      001D87 77                    7101 	ld	(hl), a
      001D88                       7102 00112$:
                                   7103 ;src/main.c:673: bgX += xOverflow;
      001D88 FAr9Dr00              7104 	ld	a, (#_bgX)
      001D8B 21rA1r00              7105 	ld	hl, #_xOverflow
      001D8E 86                    7106 	add	a, (hl)
      001D8F 21r9Dr00              7107 	ld	hl, #_bgX
      001D92 22                    7108 	ld	(hl+), a
      001D93 7E                    7109 	ld	a, (hl)
      001D94 21rA2r00              7110 	ld	hl, #_xOverflow + 1
      001D97 8E                    7111 	adc	a, (hl)
      001D98 EAr9Er00              7112 	ld	(#_bgX + 1),a
                                   7113 ;src/main.c:674: playerX = limitedPlayerX;
      001D9B 21r97r00              7114 	ld	hl, #_playerX
      001D9E 79                    7115 	ld	a, c
      001D9F 22                    7116 	ld	(hl+), a
                                   7117 ;src/main.c:675: playerDrawX=playerX >> 5;
      001DA0 78                    7118 	ld	a, b
      001DA1 32                    7119 	ld	(hl-), a
      001DA2 2A                    7120 	ld	a, (hl+)
      001DA3 4F                    7121 	ld	c, a
      001DA4 46                    7122 	ld	b, (hl)
      001DA5 CB 38                 7123 	srl	b
      001DA7 CB 19                 7124 	rr	c
      001DA9 CB 38                 7125 	srl	b
      001DAB CB 19                 7126 	rr	c
      001DAD CB 38                 7127 	srl	b
      001DAF CB 19                 7128 	rr	c
      001DB1 CB 38                 7129 	srl	b
      001DB3 CB 19                 7130 	rr	c
      001DB5 CB 38                 7131 	srl	b
      001DB7 CB 19                 7132 	rr	c
      001DB9 21r9Br00              7133 	ld	hl, #_playerDrawX
      001DBC 71                    7134 	ld	(hl), c
      001DBD 18 05                 7135 	jr	00115$
      001DBF                       7136 00114$:
                                   7137 ;src/main.c:683: xSpeed = 0;
      001DBF 21r95r00              7138 	ld	hl, #_xSpeed
      001DC2 36 00                 7139 	ld	(hl), #0x00
      001DC4                       7140 00115$:
                                   7141 ;src/main.c:691: uint8_t yCollisionPoint = playerDrawY; 
      001DC4 FAr9Cr00              7142 	ld	a, (#_playerDrawY)
      001DC7 F8 07                 7143 	ldhl	sp,	#7
      001DC9 77                    7144 	ld	(hl), a
                                   7145 ;src/main.c:694: yCollisionPoint = playerDrawY +8; //bottom edge
      001DCA 21r9Cr00              7146 	ld	hl, #_playerDrawY
      001DCD 4E                    7147 	ld	c, (hl)
                                   7148 ;src/main.c:693: if (ySpeed > 0) {
      001DCE 21r96r00              7149 	ld	hl, #_ySpeed
      001DD1 5E                    7150 	ld	e, (hl)
      001DD2 AF                    7151 	xor	a, a
      001DD3 57                    7152 	ld	d, a
      001DD4 96                    7153 	sub	a, (hl)
      001DD5 CB 7B                 7154 	bit	7, e
      001DD7 28 07                 7155 	jr	Z, 00350$
      001DD9 CB 7A                 7156 	bit	7, d
      001DDB 20 08                 7157 	jr	NZ, 00351$
      001DDD BF                    7158 	cp	a, a
      001DDE 18 05                 7159 	jr	00351$
      001DE0                       7160 00350$:
      001DE0 CB 7A                 7161 	bit	7, d
      001DE2 28 01                 7162 	jr	Z, 00351$
      001DE4 37                    7163 	scf
      001DE5                       7164 00351$:
      001DE5 30 06                 7165 	jr	NC, 00117$
                                   7166 ;src/main.c:694: yCollisionPoint = playerDrawY +8; //bottom edge
      001DE7 79                    7167 	ld	a, c
      001DE8 C6 08                 7168 	add	a, #0x08
      001DEA F8 07                 7169 	ldhl	sp,	#7
      001DEC 77                    7170 	ld	(hl), a
      001DED                       7171 00117$:
                                   7172 ;src/main.c:696: if (ySpeed < 0) {
      001DED FAr96r00              7173 	ld	a, (#_ySpeed)
      001DF0 CB 7F                 7174 	bit	7, a
      001DF2 28 06                 7175 	jr	Z, 00119$
                                   7176 ;src/main.c:697: yCollisionPoint = playerDrawY -8; //top edge, 
      001DF4 79                    7177 	ld	a, c
      001DF5 C6 F8                 7178 	add	a, #0xf8
      001DF7 F8 07                 7179 	ldhl	sp,	#7
      001DF9 77                    7180 	ld	(hl), a
      001DFA                       7181 00119$:
                                   7182 ;src/main.c:701: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001DFA FAr9Br00              7183 	ld	a, (#_playerDrawX)
      001DFD 0E 00                 7184 	ld	c, #0x00
      001DFF F8 03                 7185 	ldhl	sp,	#3
      001E01 22                    7186 	ld	(hl+), a
      001E02 79                    7187 	ld	a, c
      001E03 32                    7188 	ld	(hl-), a
      001E04 2A                    7189 	ld	a, (hl+)
      001E05 5F                    7190 	ld	e, a
      001E06 56                    7191 	ld	d, (hl)
      001E07 21r9Dr00              7192 	ld	hl, #_bgX
      001E0A 2A                    7193 	ld	a,	(hl+)
      001E0B 66                    7194 	ld	h, (hl)
      001E0C 6F                    7195 	ld	l, a
      001E0D 19                    7196 	add	hl, de
      001E0E E5                    7197 	push	hl
      001E0F 7D                    7198 	ld	a, l
      001E10 F8 07                 7199 	ldhl	sp,	#7
      001E12 77                    7200 	ld	(hl), a
      001E13 E1                    7201 	pop	hl
      001E14 7C                    7202 	ld	a, h
      001E15 F8 06                 7203 	ldhl	sp,	#6
      001E17 77                    7204 	ld	(hl), a
      001E18 CB 2E                 7205 	sra	(hl)
      001E1A 2B                    7206 	dec	hl
      001E1B CB 1E                 7207 	rr	(hl)
      001E1D 23                    7208 	inc	hl
      001E1E CB 2E                 7209 	sra	(hl)
      001E20 2B                    7210 	dec	hl
      001E21 CB 1E                 7211 	rr	(hl)
      001E23 23                    7212 	inc	hl
      001E24 CB 2E                 7213 	sra	(hl)
      001E26 2B                    7214 	dec	hl
      001E27 CB 1E                 7215 	rr	(hl)
      001E29 11 20 00              7216 	ld	de, #0x0020
      001E2C D5                    7217 	push	de
      001E2D 2A                    7218 	ld	a, (hl+)
      001E2E 5F                    7219 	ld	e, a
      001E2F 56                    7220 	ld	d, (hl)
      001E30 D5                    7221 	push	de
      001E31 CDr00r00              7222 	call	__modsint
      001E34 E8 04                 7223 	add	sp, #4
      001E36 F8 05                 7224 	ldhl	sp,	#5
      001E38 7B                    7225 	ld	a, e
      001E39 22                    7226 	ld	(hl+), a
      001E3A 72                    7227 	ld	(hl), d
      001E3B F8 05                 7228 	ldhl	sp,	#5
      001E3D 7E                    7229 	ld	a, (hl)
      001E3E F8 00                 7230 	ldhl	sp,	#0
      001E40 77                    7231 	ld	(hl), a
      001E41 F8 06                 7232 	ldhl	sp,	#6
      001E43 7E                    7233 	ld	a, (hl)
      001E44 F8 01                 7234 	ldhl	sp,	#1
      001E46 77                    7235 	ld	(hl), a
                                   7236 ;src/main.c:704: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001E47 F8 07                 7237 	ldhl	sp,	#7
      001E49 3A                    7238 	ld	a, (hl-)
      001E4A 22                    7239 	ld	(hl+), a
      001E4B AF                    7240 	xor	a, a
      001E4C 32                    7241 	ld	(hl-), a
      001E4D 3A                    7242 	ld	a, (hl-)
      001E4E 2B                    7243 	dec	hl
      001E4F 77                    7244 	ld	(hl), a
      001E50 F8 07                 7245 	ldhl	sp,	#7
      001E52 3A                    7246 	ld	a, (hl-)
      001E53 2B                    7247 	dec	hl
      001E54 32                    7248 	ld	(hl-), a
      001E55 2A                    7249 	ld	a, (hl+)
      001E56 5F                    7250 	ld	e, a
      001E57 56                    7251 	ld	d, (hl)
      001E58 21r9Fr00              7252 	ld	hl, #_bgY
      001E5B 2A                    7253 	ld	a,	(hl+)
      001E5C 66                    7254 	ld	h, (hl)
      001E5D 6F                    7255 	ld	l, a
      001E5E 19                    7256 	add	hl, de
      001E5F E5                    7257 	push	hl
      001E60 7D                    7258 	ld	a, l
      001E61 F8 08                 7259 	ldhl	sp,	#8
      001E63 77                    7260 	ld	(hl), a
      001E64 E1                    7261 	pop	hl
      001E65 7C                    7262 	ld	a, h
      001E66 F8 07                 7263 	ldhl	sp,	#7
      001E68 77                    7264 	ld	(hl), a
      001E69 CB 2E                 7265 	sra	(hl)
      001E6B 2B                    7266 	dec	hl
      001E6C CB 1E                 7267 	rr	(hl)
      001E6E 23                    7268 	inc	hl
      001E6F CB 2E                 7269 	sra	(hl)
      001E71 2B                    7270 	dec	hl
      001E72 CB 1E                 7271 	rr	(hl)
      001E74 23                    7272 	inc	hl
      001E75 CB 2E                 7273 	sra	(hl)
      001E77 2B                    7274 	dec	hl
      001E78 CB 1E                 7275 	rr	(hl)
      001E7A 11 20 00              7276 	ld	de, #0x0020
      001E7D D5                    7277 	push	de
      001E7E 2A                    7278 	ld	a, (hl+)
      001E7F 5F                    7279 	ld	e, a
      001E80 56                    7280 	ld	d, (hl)
      001E81 D5                    7281 	push	de
      001E82 CDr00r00              7282 	call	__modsint
      001E85 E8 04                 7283 	add	sp, #4
      001E87 F8 06                 7284 	ldhl	sp,	#6
      001E89 7B                    7285 	ld	a, e
      001E8A 22                    7286 	ld	(hl+), a
      001E8B 72                    7287 	ld	(hl), d
      001E8C F8 06                 7288 	ldhl	sp,	#6
      001E8E 2A                    7289 	ld	a, (hl+)
      001E8F 77                    7290 	ld	(hl), a
                                   7291 ;src/main.c:707: ind = 32*bgindY + bgindX;
      001E90 3A                    7292 	ld	a, (hl-)
      001E91 22                    7293 	ld	(hl+), a
      001E92 36 00                 7294 	ld	(hl), #0x00
      001E94 3E 05                 7295 	ld	a, #0x05
      001E96                       7296 00352$:
      001E96 F8 06                 7297 	ldhl	sp,	#6
      001E98 CB 26                 7298 	sla	(hl)
      001E9A 23                    7299 	inc	hl
      001E9B CB 16                 7300 	rl	(hl)
      001E9D 3D                    7301 	dec	a
      001E9E 20 F6                 7302 	jr	NZ, 00352$
      001EA0 2B                    7303 	dec	hl
      001EA1 3A                    7304 	ld	a, (hl-)
      001EA2 2B                    7305 	dec	hl
      001EA3 77                    7306 	ld	(hl), a
      001EA4 F8 07                 7307 	ldhl	sp,	#7
      001EA6 3A                    7308 	ld	a, (hl-)
      001EA7 2B                    7309 	dec	hl
      001EA8 77                    7310 	ld	(hl), a
      001EA9 D1                    7311 	pop	de
      001EAA D5                    7312 	push	de
      001EAB 3A                    7313 	ld	a, (hl-)
      001EAC 6E                    7314 	ld	l, (hl)
      001EAD 67                    7315 	ld	h, a
      001EAE 19                    7316 	add	hl, de
      001EAF E5                    7317 	push	hl
      001EB0 7D                    7318 	ld	a, l
      001EB1 F8 08                 7319 	ldhl	sp,	#8
      001EB3 77                    7320 	ld	(hl), a
      001EB4 E1                    7321 	pop	hl
      001EB5 7C                    7322 	ld	a, h
      001EB6 F8 07                 7323 	ldhl	sp,	#7
      001EB8 77                    7324 	ld	(hl), a
                                   7325 ;src/main.c:708: result = 1;
      001EB9 F8 03                 7326 	ldhl	sp,	#3
      001EBB 36 01                 7327 	ld	(hl), #0x01
                                   7328 ;src/main.c:709: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001EBD F8 06                 7329 	ldhl	sp,#6
      001EBF 2A                    7330 	ld	a, (hl+)
      001EC0 5F                    7331 	ld	e, a
      001EC1 56                    7332 	ld	d, (hl)
      001EC2 21r87r00              7333 	ld	hl, #_background1
      001EC5 19                    7334 	add	hl, de
      001EC6 4D                    7335 	ld	c, l
      001EC7 44                    7336 	ld	b, h
      001EC8 0A                    7337 	ld	a, (bc)
      001EC9 F8 04                 7338 	ldhl	sp,	#4
      001ECB 77                    7339 	ld	(hl), a
      001ECC F8 07                 7340 	ldhl	sp,	#7
      001ECE 36 00                 7341 	ld	(hl), #0x00
      001ED0                       7342 00161$:
      001ED0 F8 07                 7343 	ldhl	sp,	#7
      001ED2 7E                    7344 	ld	a, (hl)
      001ED3 F8 02                 7345 	ldhl	sp,	#2
      001ED5 96                    7346 	sub	a, (hl)
      001ED6 30 29                 7347 	jr	NC, 00122$
                                   7348 ;src/main.c:710: if (background1[ind] == BLANK[j] ) {
      001ED8 11r8Ar0B              7349 	ld	de, #_BLANK
      001EDB F8 07                 7350 	ldhl	sp,	#7
      001EDD 6E                    7351 	ld	l, (hl)
      001EDE 26 00                 7352 	ld	h, #0x00
      001EE0 19                    7353 	add	hl, de
      001EE1 E5                    7354 	push	hl
      001EE2 7D                    7355 	ld	a, l
      001EE3 F8 07                 7356 	ldhl	sp,	#7
      001EE5 77                    7357 	ld	(hl), a
      001EE6 E1                    7358 	pop	hl
      001EE7 7C                    7359 	ld	a, h
      001EE8 F8 06                 7360 	ldhl	sp,	#6
      001EEA 32                    7361 	ld	(hl-), a
      001EEB 2A                    7362 	ld	a, (hl+)
      001EEC 5F                    7363 	ld	e, a
      001EED 3A                    7364 	ld	a, (hl-)
      001EEE 2B                    7365 	dec	hl
      001EEF 57                    7366 	ld	d, a
      001EF0 1A                    7367 	ld	a, (de)
      001EF1 4F                    7368 	ld	c, a
      001EF2 7E                    7369 	ld	a, (hl)
      001EF3 91                    7370 	sub	a, c
      001EF4 20 06                 7371 	jr	NZ, 00162$
                                   7372 ;src/main.c:711: result = 0;
      001EF6 F8 03                 7373 	ldhl	sp,	#3
      001EF8 36 00                 7374 	ld	(hl), #0x00
                                   7375 ;src/main.c:712: break;
      001EFA 18 05                 7376 	jr	00122$
      001EFC                       7377 00162$:
                                   7378 ;src/main.c:709: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001EFC F8 07                 7379 	ldhl	sp,	#7
      001EFE 34                    7380 	inc	(hl)
      001EFF 18 CF                 7381 	jr	00161$
      001F01                       7382 00122$:
                                   7383 ;src/main.c:716: if (result == 0) {
      001F01 F8 03                 7384 	ldhl	sp,	#3
      001F03 7E                    7385 	ld	a, (hl)
      001F04 B7                    7386 	or	a, a
      001F05 C2rCFr1F              7387 	jp	NZ, 00127$
                                   7388 ;src/main.c:717: playerY += ySpeed;
      001F08 FAr96r00              7389 	ld	a, (#_ySpeed)
      001F0B 4F                    7390 	ld	c, a
      001F0C 07                    7391 	rlca
      001F0D 9F                    7392 	sbc	a, a
      001F0E 21r99r00              7393 	ld	hl, #_playerY
      001F11 5E                    7394 	ld	e, (hl)
      001F12 23                    7395 	inc	hl
      001F13 56                    7396 	ld	d, (hl)
      001F14 2B                    7397 	dec	hl
      001F15 47                    7398 	ld	b, a
      001F16 79                    7399 	ld	a, c
      001F17 83                    7400 	add	a, e
      001F18 4F                    7401 	ld	c, a
      001F19 78                    7402 	ld	a, b
      001F1A 8A                    7403 	adc	a, d
      001F1B 47                    7404 	ld	b, a
      001F1C 79                    7405 	ld	a, c
      001F1D 22                    7406 	ld	(hl+), a
                                   7407 ;src/main.c:719: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001F1E 78                    7408 	ld	a, b
      001F1F 32                    7409 	ld	(hl-), a
      001F20 2A                    7410 	ld	a, (hl+)
      001F21 5F                    7411 	ld	e, a
      001F22 56                    7412 	ld	d, (hl)
      001F23 7A                    7413 	ld	a, d
      001F24 D6 06                 7414 	sub	a, #0x06
      001F26 30 05                 7415 	jr	NC, 00177$
      001F28 11 00 06              7416 	ld	de, #0x0600
      001F2B 18 0B                 7417 	jr	00178$
      001F2D                       7418 00177$:
      001F2D 3E C0                 7419 	ld	a, #0xc0
      001F2F BB                    7420 	cp	a, e
      001F30 3E 09                 7421 	ld	a, #0x09
      001F32 9A                    7422 	sbc	a, d
      001F33 30 03                 7423 	jr	NC, 00179$
      001F35 11 C0 09              7424 	ld	de, #0x09c0
      001F38                       7425 00179$:
      001F38                       7426 00178$:
      001F38 4B                    7427 	ld	c, e
      001F39 42                    7428 	ld	b, d
                                   7429 ;src/main.c:721: yOverflow = (playerY - limitedPlayerY);
      001F3A FAr99r00              7430 	ld	a, (#_playerY)
      001F3D 93                    7431 	sub	a, e
      001F3E EArA3r00              7432 	ld	(#_yOverflow),a
      001F41 FAr9Ar00              7433 	ld	a, (#_playerY + 1)
      001F44 9A                    7434 	sbc	a, d
      001F45 21rA4r00              7435 	ld	hl, #_yOverflow + 1
                                   7436 ;src/main.c:722: if (yOverflow >= 0) {
      001F48 32                    7437 	ld	(hl-), a
      001F49 6E                    7438 	ld	l, (hl)
                                   7439 ;	spillPairReg hl
                                   7440 ;	spillPairReg hl
      001F4A FArA4r00              7441 	ld	a, (_yOverflow + 1)
                                   7442 ;	spillPairReg hl
                                   7443 ;	spillPairReg hl
      001F4D CB 7F                 7444 	bit	7,a
      001F4F 20 22                 7445 	jr	NZ, 00124$
                                   7446 ;src/main.c:723: yOverflow = yOverflow >> 5;
      001F51 21rA4r00              7447 	ld	hl, #_yOverflow + 1
      001F54 CB 2E                 7448 	sra	(hl)
      001F56 2B                    7449 	dec	hl
      001F57 CB 1E                 7450 	rr	(hl)
      001F59 23                    7451 	inc	hl
      001F5A CB 2E                 7452 	sra	(hl)
      001F5C 2B                    7453 	dec	hl
      001F5D CB 1E                 7454 	rr	(hl)
      001F5F 23                    7455 	inc	hl
      001F60 CB 2E                 7456 	sra	(hl)
      001F62 2B                    7457 	dec	hl
      001F63 CB 1E                 7458 	rr	(hl)
      001F65 23                    7459 	inc	hl
      001F66 CB 2E                 7460 	sra	(hl)
      001F68 2B                    7461 	dec	hl
      001F69 CB 1E                 7462 	rr	(hl)
      001F6B 23                    7463 	inc	hl
      001F6C CB 2E                 7464 	sra	(hl)
      001F6E 2B                    7465 	dec	hl
      001F6F CB 1E                 7466 	rr	(hl)
      001F71 18 25                 7467 	jr	00125$
      001F73                       7468 00124$:
                                   7469 ;src/main.c:726: yOverflow = -((-yOverflow) >> 5);
      001F73 AF                    7470 	xor	a, a
      001F74 21rA3r00              7471 	ld	hl, #_yOverflow
      001F77 96                    7472 	sub	a, (hl)
      001F78 23                    7473 	inc	hl
      001F79 5F                    7474 	ld	e, a
      001F7A 9F                    7475 	sbc	a, a
      001F7B 96                    7476 	sub	a, (hl)
      001F7C 2B                    7477 	dec	hl
      001F7D 57                    7478 	ld	d, a
      001F7E CB 2A                 7479 	sra	d
      001F80 CB 1B                 7480 	rr	e
      001F82 CB 2A                 7481 	sra	d
      001F84 CB 1B                 7482 	rr	e
      001F86 CB 2A                 7483 	sra	d
      001F88 CB 1B                 7484 	rr	e
      001F8A CB 2A                 7485 	sra	d
      001F8C CB 1B                 7486 	rr	e
      001F8E CB 2A                 7487 	sra	d
      001F90 CB 1B                 7488 	rr	e
      001F92 AF                    7489 	xor	a, a
      001F93 93                    7490 	sub	a, e
      001F94 22                    7491 	ld	(hl+), a
      001F95 9F                    7492 	sbc	a, a
      001F96 92                    7493 	sub	a, d
      001F97 77                    7494 	ld	(hl), a
      001F98                       7495 00125$:
                                   7496 ;src/main.c:728: bgY += yOverflow;
      001F98 FAr9Fr00              7497 	ld	a, (#_bgY)
      001F9B 21rA3r00              7498 	ld	hl, #_yOverflow
      001F9E 86                    7499 	add	a, (hl)
      001F9F 21r9Fr00              7500 	ld	hl, #_bgY
      001FA2 22                    7501 	ld	(hl+), a
      001FA3 7E                    7502 	ld	a, (hl)
      001FA4 21rA4r00              7503 	ld	hl, #_yOverflow + 1
      001FA7 8E                    7504 	adc	a, (hl)
      001FA8 EArA0r00              7505 	ld	(#_bgY + 1),a
                                   7506 ;src/main.c:729: playerY = limitedPlayerY;
      001FAB 21r99r00              7507 	ld	hl, #_playerY
      001FAE 79                    7508 	ld	a, c
      001FAF 22                    7509 	ld	(hl+), a
                                   7510 ;src/main.c:730: playerDrawY=playerY >> 5;
      001FB0 78                    7511 	ld	a, b
      001FB1 32                    7512 	ld	(hl-), a
      001FB2 2A                    7513 	ld	a, (hl+)
      001FB3 4F                    7514 	ld	c, a
      001FB4 46                    7515 	ld	b, (hl)
      001FB5 CB 38                 7516 	srl	b
      001FB7 CB 19                 7517 	rr	c
      001FB9 CB 38                 7518 	srl	b
      001FBB CB 19                 7519 	rr	c
      001FBD CB 38                 7520 	srl	b
      001FBF CB 19                 7521 	rr	c
      001FC1 CB 38                 7522 	srl	b
      001FC3 CB 19                 7523 	rr	c
      001FC5 CB 38                 7524 	srl	b
      001FC7 CB 19                 7525 	rr	c
      001FC9 21r9Cr00              7526 	ld	hl, #_playerDrawY
      001FCC 71                    7527 	ld	(hl), c
      001FCD 18 05                 7528 	jr	00128$
      001FCF                       7529 00127$:
                                   7530 ;src/main.c:735: ySpeed = 0;
      001FCF 21r96r00              7531 	ld	hl, #_ySpeed
      001FD2 36 00                 7532 	ld	(hl), #0x00
      001FD4                       7533 00128$:
                                   7534 ;src/main.c:635: uint8_t xCollisionPoint = playerDrawX; 
      001FD4 FAr9Br00              7535 	ld	a, (#_playerDrawX)
      001FD7 F8 07                 7536 	ldhl	sp,	#7
      001FD9 77                    7537 	ld	(hl), a
                                   7538 ;src/main.c:694: yCollisionPoint = playerDrawY +8; //bottom edge
      001FDA FAr9Cr00              7539 	ld	a, (#_playerDrawY)
      001FDD C6 08                 7540 	add	a, #0x08
      001FDF F8 06                 7541 	ldhl	sp,	#6
      001FE1 77                    7542 	ld	(hl), a
                                   7543 ;src/main.c:738: if (xDir >= 0) {
      001FE2 FAr93r00              7544 	ld	a, (#_xDir)
      001FE5 CB 7F                 7545 	bit	7, a
      001FE7 20 2A                 7546 	jr	NZ, 00130$
                                   7547 ;src/main.c:739: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   7548 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7549 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FE9 11r00r00              7550 	ld	de, #_shadow_OAM
      001FEC F8 06                 7551 	ldhl	sp,	#6
      001FEE 2A                    7552 	ld	a, (hl+)
      001FEF 12                    7553 	ld	(de), a
      001FF0 11r01r00              7554 	ld	de, #(_shadow_OAM + 1)
      001FF3 7E                    7555 	ld	a, (hl)
      001FF4 12                    7556 	ld	(de), a
                                   7557 ;src/main.c:741: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001FF5 FAr9Cr00              7558 	ld	a, (#_playerDrawY)
      001FF8 F8 07                 7559 	ldhl	sp,	#7
      001FFA 77                    7560 	ld	(hl), a
      001FFB 3A                    7561 	ld	a, (hl-)
      001FFC C6 08                 7562 	add	a, #0x08
      001FFE 77                    7563 	ld	(hl), a
      001FFF FAr9Br00              7564 	ld	a, (#_playerDrawX)
      002002 C6 08                 7565 	add	a, #0x08
      002004 F8 07                 7566 	ldhl	sp,	#7
                                   7567 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7568 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002006 32                    7569 	ld	(hl-), a
      002007 11r04r00              7570 	ld	de, #(_shadow_OAM + 4)
      00200A 2A                    7571 	ld	a, (hl+)
      00200B 12                    7572 	ld	(de), a
      00200C 11r05r00              7573 	ld	de, #(_shadow_OAM + 5)
      00200F 7E                    7574 	ld	a, (hl)
      002010 12                    7575 	ld	(de), a
                                   7576 ;src/main.c:741: move_sprite(1, playerDrawX +8, playerDrawY +8);
      002011 18 28                 7577 	jr	00131$
      002013                       7578 00130$:
                                   7579 ;src/main.c:744: move_sprite(1, playerDrawX , playerDrawY +8);
                                   7580 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002013 01r04r00              7581 	ld	bc, #(_shadow_OAM + 4)
                                   7582 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002016 F8 06                 7583 	ldhl	sp,	#6
      002018 2A                    7584 	ld	a, (hl+)
      002019 02                    7585 	ld	(bc), a
      00201A 03                    7586 	inc	bc
      00201B 7E                    7587 	ld	a, (hl)
      00201C 02                    7588 	ld	(bc), a
                                   7589 ;src/main.c:746: move_sprite(0, playerDrawX +8, playerDrawY +8);
      00201D FAr9Cr00              7590 	ld	a, (#_playerDrawY)
      002020 F8 07                 7591 	ldhl	sp,	#7
      002022 77                    7592 	ld	(hl), a
      002023 3A                    7593 	ld	a, (hl-)
      002024 C6 08                 7594 	add	a, #0x08
      002026 77                    7595 	ld	(hl), a
      002027 FAr9Br00              7596 	ld	a, (#_playerDrawX)
      00202A F8 07                 7597 	ldhl	sp,	#7
      00202C 77                    7598 	ld	(hl), a
      00202D 7E                    7599 	ld	a, (hl)
      00202E C6 08                 7600 	add	a, #0x08
                                   7601 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7602 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002030 32                    7603 	ld	(hl-), a
      002031 11r00r00              7604 	ld	de, #_shadow_OAM
      002034 2A                    7605 	ld	a, (hl+)
      002035 12                    7606 	ld	(de), a
      002036 11r01r00              7607 	ld	de, #(_shadow_OAM + 1)
      002039 7E                    7608 	ld	a, (hl)
      00203A 12                    7609 	ld	(de), a
                                   7610 ;src/main.c:746: move_sprite(0, playerDrawX +8, playerDrawY +8);
      00203B                       7611 00131$:
                                   7612 ;src/main.c:751: if (bgX >= 256) {
      00203B 21r9Dr00              7613 	ld	hl, #_bgX
      00203E 2A                    7614 	ld	a, (hl+)
      00203F 4F                    7615 	ld	c, a
      002040 46                    7616 	ld	b, (hl)
      002041 78                    7617 	ld	a, b
      002042 EE 80                 7618 	xor	a, #0x80
      002044 D6 81                 7619 	sub	a, #0x81
      002046 38 0F                 7620 	jr	C, 00133$
                                   7621 ;src/main.c:752: bgX = bgX % 256;
      002048 AF                    7622 	xor	a, a
      002049 3C                    7623 	inc	a
      00204A F5                    7624 	push	af
      00204B C5                    7625 	push	bc
      00204C CDr00r00              7626 	call	__modsint
      00204F E8 04                 7627 	add	sp, #4
      002051 21r9Dr00              7628 	ld	hl, #_bgX
      002054 7B                    7629 	ld	a, e
      002055 22                    7630 	ld	(hl+), a
      002056 72                    7631 	ld	(hl), d
      002057                       7632 00133$:
                                   7633 ;src/main.c:754: if (bgX < 0) {
      002057 21r9Dr00              7634 	ld	hl, #_bgX
      00205A 2A                    7635 	ld	a, (hl+)
      00205B 4F                    7636 	ld	c, a
      00205C 46                    7637 	ld	b, (hl)
      00205D CB 78                 7638 	bit	7, b
      00205F 28 15                 7639 	jr	Z, 00135$
                                   7640 ;src/main.c:755: bgX = 255 - (bgX % 256);
      002061 AF                    7641 	xor	a, a
      002062 3C                    7642 	inc	a
      002063 F5                    7643 	push	af
      002064 C5                    7644 	push	bc
      002065 CDr00r00              7645 	call	__modsint
      002068 E8 04                 7646 	add	sp, #4
      00206A 3E FF                 7647 	ld	a, #0xff
      00206C 93                    7648 	sub	a, e
      00206D 4F                    7649 	ld	c, a
      00206E 9F                    7650 	sbc	a, a
      00206F 92                    7651 	sub	a, d
      002070 21r9Dr00              7652 	ld	hl, #_bgX
      002073 71                    7653 	ld	(hl), c
      002074 23                    7654 	inc	hl
      002075 77                    7655 	ld	(hl), a
      002076                       7656 00135$:
                                   7657 ;src/main.c:757: if (bgY >= 256) {
      002076 21r9Fr00              7658 	ld	hl, #_bgY
      002079 2A                    7659 	ld	a, (hl+)
      00207A 4F                    7660 	ld	c, a
      00207B 46                    7661 	ld	b, (hl)
      00207C 78                    7662 	ld	a, b
      00207D EE 80                 7663 	xor	a, #0x80
      00207F D6 81                 7664 	sub	a, #0x81
      002081 38 0F                 7665 	jr	C, 00137$
                                   7666 ;src/main.c:758: bgY = bgY % 256;
      002083 AF                    7667 	xor	a, a
      002084 3C                    7668 	inc	a
      002085 F5                    7669 	push	af
      002086 C5                    7670 	push	bc
      002087 CDr00r00              7671 	call	__modsint
      00208A E8 04                 7672 	add	sp, #4
      00208C 21r9Fr00              7673 	ld	hl, #_bgY
      00208F 7B                    7674 	ld	a, e
      002090 22                    7675 	ld	(hl+), a
      002091 72                    7676 	ld	(hl), d
      002092                       7677 00137$:
                                   7678 ;src/main.c:760: if (bgY < 0) {
      002092 21r9Fr00              7679 	ld	hl, #_bgY
      002095 2A                    7680 	ld	a, (hl+)
      002096 4F                    7681 	ld	c, a
      002097 46                    7682 	ld	b, (hl)
      002098 CB 78                 7683 	bit	7, b
      00209A 28 15                 7684 	jr	Z, 00139$
                                   7685 ;src/main.c:761: bgY = 255 - (bgY % 256);
      00209C AF                    7686 	xor	a, a
      00209D 3C                    7687 	inc	a
      00209E F5                    7688 	push	af
      00209F C5                    7689 	push	bc
      0020A0 CDr00r00              7690 	call	__modsint
      0020A3 E8 04                 7691 	add	sp, #4
      0020A5 3E FF                 7692 	ld	a, #0xff
      0020A7 93                    7693 	sub	a, e
      0020A8 4F                    7694 	ld	c, a
      0020A9 9F                    7695 	sbc	a, a
      0020AA 92                    7696 	sub	a, d
      0020AB 21r9Fr00              7697 	ld	hl, #_bgY
      0020AE 71                    7698 	ld	(hl), c
      0020AF 23                    7699 	inc	hl
      0020B0 77                    7700 	ld	(hl), a
      0020B1                       7701 00139$:
                                   7702 ;src/main.c:764: move_bkg(bgX, bgY);
      0020B1 21r9Fr00              7703 	ld	hl, #_bgY
      0020B4 4E                    7704 	ld	c, (hl)
      0020B5 FAr9Dr00              7705 	ld	a, (#_bgX)
      0020B8 E0r00                 7706 	ldh	(_SCX_REG + 0), a
                                   7707 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0020BA 79                    7708 	ld	a, c
      0020BB E0r00                 7709 	ldh	(_SCY_REG + 0), a
                                   7710 ;src/main.c:767: if (ySpeed > 0) ySpeed--;
      0020BD 21r96r00              7711 	ld	hl, #_ySpeed
      0020C0 5E                    7712 	ld	e, (hl)
      0020C1 AF                    7713 	xor	a, a
      0020C2 57                    7714 	ld	d, a
      0020C3 96                    7715 	sub	a, (hl)
      0020C4 CB 7B                 7716 	bit	7, e
      0020C6 28 07                 7717 	jr	Z, 00355$
      0020C8 CB 7A                 7718 	bit	7, d
      0020CA 20 08                 7719 	jr	NZ, 00356$
      0020CC BF                    7720 	cp	a, a
      0020CD 18 05                 7721 	jr	00356$
      0020CF                       7722 00355$:
      0020CF CB 7A                 7723 	bit	7, d
      0020D1 28 01                 7724 	jr	Z, 00356$
      0020D3 37                    7725 	scf
      0020D4                       7726 00356$:
      0020D4 30 04                 7727 	jr	NC, 00141$
      0020D6 21r96r00              7728 	ld	hl, #_ySpeed
      0020D9 35                    7729 	dec	(hl)
      0020DA                       7730 00141$:
                                   7731 ;src/main.c:768: if (ySpeed < 0) ySpeed++;
      0020DA 21r96r00              7732 	ld	hl, #_ySpeed
      0020DD CB 7E                 7733 	bit	7, (hl)
      0020DF 28 01                 7734 	jr	Z, 00143$
      0020E1 34                    7735 	inc	(hl)
      0020E2                       7736 00143$:
                                   7737 ;src/main.c:769: if (xSpeed > 0) xSpeed--;
      0020E2 21r95r00              7738 	ld	hl, #_xSpeed
      0020E5 5E                    7739 	ld	e, (hl)
      0020E6 AF                    7740 	xor	a, a
      0020E7 57                    7741 	ld	d, a
      0020E8 96                    7742 	sub	a, (hl)
      0020E9 CB 7B                 7743 	bit	7, e
      0020EB 28 07                 7744 	jr	Z, 00357$
      0020ED CB 7A                 7745 	bit	7, d
      0020EF 20 08                 7746 	jr	NZ, 00358$
      0020F1 BF                    7747 	cp	a, a
      0020F2 18 05                 7748 	jr	00358$
      0020F4                       7749 00357$:
      0020F4 CB 7A                 7750 	bit	7, d
      0020F6 28 01                 7751 	jr	Z, 00358$
      0020F8 37                    7752 	scf
      0020F9                       7753 00358$:
      0020F9 30 04                 7754 	jr	NC, 00145$
      0020FB 21r95r00              7755 	ld	hl, #_xSpeed
      0020FE 35                    7756 	dec	(hl)
      0020FF                       7757 00145$:
                                   7758 ;src/main.c:770: if (xSpeed < 0) xSpeed++;
      0020FF 21r95r00              7759 	ld	hl, #_xSpeed
      002102 CB 7E                 7760 	bit	7, (hl)
      002104 28 01                 7761 	jr	Z, 00163$
      002106 34                    7762 	inc	(hl)
      002107                       7763 00163$:
                                   7764 ;src/main.c:774: }
      002107 E8 08                 7765 	add	sp, #8
      002109 C9                    7766 	ret
                                   7767 ;src/main.c:776: void takeDamage(int16_t amount) {
                                   7768 ;	---------------------------------
                                   7769 ; Function takeDamage
                                   7770 ; ---------------------------------
      00210A                       7771 _takeDamage::
      00210A 3B                    7772 	dec	sp
                                   7773 ;src/main.c:777: if (amount > shield) {
      00210B FArF7r00              7774 	ld	a, (#_shield)
      00210E 4F                    7775 	ld	c, a
      00210F 07                    7776 	rlca
      002110 9F                    7777 	sbc	a, a
      002111 47                    7778 	ld	b, a
                                   7779 ;src/main.c:779: hull -= (amount - shield);
      002112 F8 03                 7780 	ldhl	sp,	#3
      002114 7E                    7781 	ld	a, (hl)
      002115 F8 00                 7782 	ldhl	sp,	#0
      002117 77                    7783 	ld	(hl), a
                                   7784 ;src/main.c:777: if (amount > shield) {
      002118 F8 03                 7785 	ldhl	sp,	#3
      00211A 79                    7786 	ld	a, c
      00211B 96                    7787 	sub	a, (hl)
      00211C 23                    7788 	inc	hl
      00211D 78                    7789 	ld	a, b
      00211E 9E                    7790 	sbc	a, (hl)
      00211F 78                    7791 	ld	a, b
      002120 57                    7792 	ld	d, a
      002121 CB 7E                 7793 	bit	7, (hl)
      002123 28 07                 7794 	jr	Z, 00111$
      002125 CB 7A                 7795 	bit	7, d
      002127 20 08                 7796 	jr	NZ, 00112$
      002129 BF                    7797 	cp	a, a
      00212A 18 05                 7798 	jr	00112$
      00212C                       7799 00111$:
      00212C CB 7A                 7800 	bit	7, d
      00212E 28 01                 7801 	jr	Z, 00112$
      002130 37                    7802 	scf
      002131                       7803 00112$:
      002131 30 10                 7804 	jr	NC, 00102$
                                   7805 ;src/main.c:778: shield = 0;
      002133 21rF7r00              7806 	ld	hl, #_shield
      002136 36 00                 7807 	ld	(hl), #0x00
                                   7808 ;src/main.c:779: hull -= (amount - shield);
      002138 FArF6r00              7809 	ld	a, (#_hull)
      00213B F8 00                 7810 	ldhl	sp,	#0
      00213D 96                    7811 	sub	a, (hl)
      00213E EArF6r00              7812 	ld	(#_hull),a
      002141 18 09                 7813 	jr	00104$
      002143                       7814 00102$:
                                   7815 ;src/main.c:782: shield -= amount;
      002143 FArF7r00              7816 	ld	a, (#_shield)
      002146 F8 00                 7817 	ldhl	sp,	#0
      002148 96                    7818 	sub	a, (hl)
      002149 EArF7r00              7819 	ld	(#_shield),a
      00214C                       7820 00104$:
                                   7821 ;src/main.c:784: }
      00214C 33                    7822 	inc	sp
      00214D C9                    7823 	ret
                                   7824 ;src/main.c:786: void spawnPickup(int16_t x, int16_t y) {
                                   7825 ;	---------------------------------
                                   7826 ; Function spawnPickup
                                   7827 ; ---------------------------------
      00214E                       7828 _spawnPickup::
                                   7829 ;src/main.c:787: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      00214E CDr00r00              7830 	call	_rand
      002151 7B                    7831 	ld	a, e
      002152 E6 0F                 7832 	and	a, #0x0f
      002154 C0                    7833 	ret	NZ
                                   7834 ;src/main.c:788: if (spawn == 0) {
                                   7835 ;src/main.c:789: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      002155 CDr00r00              7836 	call	_rand
      002158 7B                    7837 	ld	a, e
      002159 E6 03                 7838 	and	a, #0x03
                                   7839 ;src/main.c:790: if (type == 0) {
      00215B 5F                    7840 	ld	e,a
      00215C B7                    7841 	or	a, a
      00215D 20 13                 7842 	jr	NZ, 00106$
                                   7843 ;src/main.c:791: pickup = health;
      00215F 11 09 00              7844 	ld	de, #0x0009
      002162 D5                    7845 	push	de
      002163 11r1Ar07              7846 	ld	de, #_health
      002166 D5                    7847 	push	de
      002167 11rFAr00              7848 	ld	de, #_pickup
      00216A D5                    7849 	push	de
      00216B CDr00r00              7850 	call	___memcpy
      00216E E8 06                 7851 	add	sp, #6
      002170 18 31                 7852 	jr	00107$
      002172                       7853 00106$:
                                   7854 ;src/main.c:793: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      002172 1D                    7855 	dec	e
      002173 20 1D                 7856 	jr	NZ, 00102$
      002175 21rA3r0B              7857 	ld	hl, #_MAXGUNLEVEL
      002178 4E                    7858 	ld	c, (hl)
      002179 FArA6r00              7859 	ld	a, (#_gunLevel)
      00217C 91                    7860 	sub	a, c
      00217D 30 13                 7861 	jr	NC, 00102$
                                   7862 ;src/main.c:794: pickup = upgrade;
      00217F 11 09 00              7863 	ld	de, #0x0009
      002182 D5                    7864 	push	de
      002183 11r08r07              7865 	ld	de, #_upgrade
      002186 D5                    7866 	push	de
      002187 11rFAr00              7867 	ld	de, #_pickup
      00218A D5                    7868 	push	de
      00218B CDr00r00              7869 	call	___memcpy
      00218E E8 06                 7870 	add	sp, #6
      002190 18 11                 7871 	jr	00107$
      002192                       7872 00102$:
                                   7873 ;src/main.c:797: pickup = ammo;
      002192 01r11r07              7874 	ld	bc, #_ammo
      002195 11rFAr00              7875 	ld	de, #_pickup
      002198 21 09 00              7876 	ld	hl, #0x0009
      00219B E5                    7877 	push	hl
      00219C C5                    7878 	push	bc
      00219D D5                    7879 	push	de
      00219E CDr00r00              7880 	call	___memcpy
      0021A1 E8 06                 7881 	add	sp, #6
      0021A3                       7882 00107$:
                                   7883 ;src/main.c:799: pickup.active = 1;
      0021A3 21rFFr00              7884 	ld	hl, #(_pickup + 5)
      0021A6 36 01                 7885 	ld	(hl), #0x01
                                   7886 ;src/main.c:801: pickup.x = x;
      0021A8 11rFBr00              7887 	ld	de, #(_pickup + 1)
      0021AB F8 02                 7888 	ldhl	sp,	#2
      0021AD 2A                    7889 	ld	a, (hl+)
      0021AE 12                    7890 	ld	(de), a
      0021AF 13                    7891 	inc	de
                                   7892 ;src/main.c:802: pickup.y = y;
      0021B0 2A                    7893 	ld	a, (hl+)
      0021B1 12                    7894 	ld	(de), a
      0021B2 11rFDr00              7895 	ld	de, #(_pickup + 3)
      0021B5 2A                    7896 	ld	a, (hl+)
      0021B6 12                    7897 	ld	(de), a
      0021B7 13                    7898 	inc	de
      0021B8 7E                    7899 	ld	a, (hl)
      0021B9 12                    7900 	ld	(de), a
                                   7901 ;src/main.c:804: set_sprite_tile(3, pickup.tile); //0x7f
      0021BA 21r02r01              7902 	ld	hl, #(_pickup + 8)
      0021BD 4E                    7903 	ld	c, (hl)
                                   7904 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0021BE 21r0Er00              7905 	ld	hl, #(_shadow_OAM + 14)
      0021C1 71                    7906 	ld	(hl), c
                                   7907 ;src/main.c:804: set_sprite_tile(3, pickup.tile); //0x7f
                                   7908 ;src/main.c:810: }
      0021C2 C9                    7909 	ret
                                   7910 ;src/main.c:812: void killEnemy(uint8_t i) {
                                   7911 ;	---------------------------------
                                   7912 ; Function killEnemy
                                   7913 ; ---------------------------------
      0021C3                       7914 _killEnemy::
      0021C3 E8 FC                 7915 	add	sp, #-4
                                   7916 ;src/main.c:813: set_sprite_tile(10+(i<<1), 0x7f);
      0021C5 F8 06                 7917 	ldhl	sp,	#6
      0021C7 7E                    7918 	ld	a, (hl)
      0021C8 87                    7919 	add	a, a
      0021C9 4F                    7920 	ld	c, a
      0021CA C6 0A                 7921 	add	a, #0x0a
                                   7922 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0021CC 6F                    7923 	ld	l, a
      0021CD 11r00r00              7924 	ld	de, #_shadow_OAM+0
                                   7925 ;	spillPairReg hl
                                   7926 ;	spillPairReg hl
      0021D0 26 00                 7927 	ld	h, #0x00
                                   7928 ;	spillPairReg hl
                                   7929 ;	spillPairReg hl
      0021D2 29                    7930 	add	hl, hl
      0021D3 29                    7931 	add	hl, hl
      0021D4 19                    7932 	add	hl, de
      0021D5 23                    7933 	inc	hl
      0021D6 23                    7934 	inc	hl
      0021D7 36 7F                 7935 	ld	(hl), #0x7f
                                   7936 ;src/main.c:814: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0021D9 79                    7937 	ld	a, c
      0021DA C6 0B                 7938 	add	a, #0x0b
                                   7939 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0021DC 6F                    7940 	ld	l, a
      0021DD 01r00r00              7941 	ld	bc, #_shadow_OAM+0
                                   7942 ;	spillPairReg hl
                                   7943 ;	spillPairReg hl
      0021E0 26 00                 7944 	ld	h, #0x00
                                   7945 ;	spillPairReg hl
                                   7946 ;	spillPairReg hl
      0021E2 29                    7947 	add	hl, hl
      0021E3 29                    7948 	add	hl, hl
      0021E4 09                    7949 	add	hl, bc
      0021E5 23                    7950 	inc	hl
      0021E6 23                    7951 	inc	hl
      0021E7 36 7F                 7952 	ld	(hl), #0x7f
                                   7953 ;src/main.c:816: spawnPickup(enemies[i].x, enemies[i].y);
      0021E9 F8 06                 7954 	ldhl	sp,	#6
      0021EB 4E                    7955 	ld	c, (hl)
      0021EC 06 00                 7956 	ld	b, #0x00
      0021EE 69                    7957 	ld	l, c
      0021EF 60                    7958 	ld	h, b
      0021F0 29                    7959 	add	hl, hl
      0021F1 29                    7960 	add	hl, hl
      0021F2 29                    7961 	add	hl, hl
      0021F3 09                    7962 	add	hl, bc
      0021F4 29                    7963 	add	hl, hl
      0021F5 01r5Ar00              7964 	ld	bc,#_enemies
      0021F8 09                    7965 	add	hl,bc
      0021F9 33                    7966 	inc	sp
      0021FA 33                    7967 	inc	sp
      0021FB 5D                    7968 	ld	e, l
      0021FC 54                    7969 	ld	d, h
      0021FD D5                    7970 	push	de
      0021FE 21 02 00              7971 	ld	hl, #0x0002
      002201 19                    7972 	add	hl, de
      002202 E5                    7973 	push	hl
      002203 7D                    7974 	ld	a, l
      002204 F8 04                 7975 	ldhl	sp,	#4
      002206 77                    7976 	ld	(hl), a
      002207 E1                    7977 	pop	hl
      002208 7C                    7978 	ld	a, h
      002209 F8 03                 7979 	ldhl	sp,	#3
      00220B 32                    7980 	ld	(hl-), a
      00220C 2A                    7981 	ld	a, (hl+)
      00220D 5F                    7982 	ld	e, a
      00220E 56                    7983 	ld	d, (hl)
      00220F 1A                    7984 	ld	a, (de)
      002210 4F                    7985 	ld	c, a
      002211 13                    7986 	inc	de
      002212 1A                    7987 	ld	a, (de)
      002213 47                    7988 	ld	b, a
      002214 D1                    7989 	pop	de
      002215 D5                    7990 	push	de
      002216 1A                    7991 	ld	a, (de)
      002217 6F                    7992 	ld	l, a
                                   7993 ;	spillPairReg hl
                                   7994 ;	spillPairReg hl
      002218 13                    7995 	inc	de
      002219 1A                    7996 	ld	a, (de)
      00221A 67                    7997 	ld	h, a
                                   7998 ;	spillPairReg hl
                                   7999 ;	spillPairReg hl
      00221B C5                    8000 	push	bc
      00221C E5                    8001 	push	hl
      00221D CDr4Er21              8002 	call	_spawnPickup
      002220 E8 04                 8003 	add	sp, #4
                                   8004 ;src/main.c:818: enemies[i].alive = 0;
      002222 D1                    8005 	pop	de
      002223 D5                    8006 	push	de
      002224 21 09 00              8007 	ld	hl, #0x0009
      002227 19                    8008 	add	hl, de
      002228 4D                    8009 	ld	c, l
      002229 44                    8010 	ld	b, h
      00222A AF                    8011 	xor	a, a
      00222B 02                    8012 	ld	(bc), a
                                   8013 ;src/main.c:819: enemies[i].visible = 0;
      00222C D1                    8014 	pop	de
      00222D D5                    8015 	push	de
      00222E 21 0A 00              8016 	ld	hl, #0x000a
      002231 19                    8017 	add	hl, de
      002232 4D                    8018 	ld	c, l
      002233 44                    8019 	ld	b, h
      002234 AF                    8020 	xor	a, a
      002235 02                    8021 	ld	(bc), a
                                   8022 ;src/main.c:820: playSound(0);
      002236 AF                    8023 	xor	a, a
      002237 F5                    8024 	push	af
      002238 33                    8025 	inc	sp
      002239 CDr9Br0F              8026 	call	_playSound
      00223C 33                    8027 	inc	sp
                                   8028 ;src/main.c:821: incrementScore();
      00223D CDr58r0D              8029 	call	_incrementScore
                                   8030 ;src/main.c:822: updateScore();
      002240 CDrBAr0C              8031 	call	_updateScore
                                   8032 ;src/main.c:824: explosions[oldestEx].visible = 1;
      002243 21rBBr00              8033 	ld	hl, #_oldestEx
      002246 4E                    8034 	ld	c, (hl)
      002247 06 00                 8035 	ld	b, #0x00
      002249 69                    8036 	ld	l, c
      00224A 60                    8037 	ld	h, b
      00224B 29                    8038 	add	hl, hl
      00224C 09                    8039 	add	hl, bc
      00224D 29                    8040 	add	hl, hl
      00224E 01r03r01              8041 	ld	bc,#_explosions
      002251 09                    8042 	add	hl,bc
      002252 36 01                 8043 	ld	(hl), #0x01
                                   8044 ;src/main.c:825: explosions[oldestEx].x = enemies[i].x;
      002254 21rBBr00              8045 	ld	hl, #_oldestEx
      002257 4E                    8046 	ld	c, (hl)
      002258 06 00                 8047 	ld	b, #0x00
      00225A 69                    8048 	ld	l, c
      00225B 60                    8049 	ld	h, b
      00225C 29                    8050 	add	hl, hl
      00225D 09                    8051 	add	hl, bc
      00225E 29                    8052 	add	hl, hl
      00225F 01r03r01              8053 	ld	bc,#_explosions
      002262 09                    8054 	add	hl,bc
      002263 23                    8055 	inc	hl
      002264 4D                    8056 	ld	c, l
      002265 44                    8057 	ld	b, h
      002266 D1                    8058 	pop	de
      002267 D5                    8059 	push	de
      002268 1A                    8060 	ld	a, (de)
      002269 02                    8061 	ld	(bc), a
                                   8062 ;src/main.c:826: explosions[oldestEx].y = enemies[i].y;
      00226A 21rBBr00              8063 	ld	hl, #_oldestEx
      00226D 4E                    8064 	ld	c, (hl)
      00226E 06 00                 8065 	ld	b, #0x00
      002270 69                    8066 	ld	l, c
      002271 60                    8067 	ld	h, b
      002272 29                    8068 	add	hl, hl
      002273 09                    8069 	add	hl, bc
      002274 29                    8070 	add	hl, hl
      002275 01r03r01              8071 	ld	bc,#_explosions
      002278 09                    8072 	add	hl,bc
      002279 23                    8073 	inc	hl
      00227A 23                    8074 	inc	hl
      00227B 4D                    8075 	ld	c, l
      00227C 44                    8076 	ld	b, h
      00227D F8 02                 8077 	ldhl	sp,#2
      00227F 2A                    8078 	ld	a, (hl+)
      002280 5F                    8079 	ld	e, a
      002281 56                    8080 	ld	d, (hl)
      002282 1A                    8081 	ld	a, (de)
      002283 02                    8082 	ld	(bc), a
                                   8083 ;src/main.c:829: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      002284 CDr00r00              8084 	call	_rand
      002287 7B                    8085 	ld	a, e
      002288 21rA7r0B              8086 	ld	hl, #_exTileCount
      00228B 46                    8087 	ld	b, (hl)
      00228C C5                    8088 	push	bc
      00228D 33                    8089 	inc	sp
      00228E F5                    8090 	push	af
      00228F 33                    8091 	inc	sp
      002290 CDr00r00              8092 	call	__moduchar
      002293 E1                    8093 	pop	hl
      002294 F8 03                 8094 	ldhl	sp,	#3
      002296 73                    8095 	ld	(hl), e
                                   8096 ;src/main.c:831: explosions[oldestEx].tile = exTiles[tileNum];
      002297 21rBBr00              8097 	ld	hl, #_oldestEx
      00229A 4E                    8098 	ld	c, (hl)
      00229B 06 00                 8099 	ld	b, #0x00
      00229D 69                    8100 	ld	l, c
      00229E 60                    8101 	ld	h, b
      00229F 29                    8102 	add	hl, hl
      0022A0 09                    8103 	add	hl, bc
      0022A1 29                    8104 	add	hl, hl
      0022A2 01r03r01              8105 	ld	bc,#_explosions
      0022A5 09                    8106 	add	hl,bc
      0022A6 23                    8107 	inc	hl
      0022A7 23                    8108 	inc	hl
      0022A8 23                    8109 	inc	hl
      0022A9 23                    8110 	inc	hl
      0022AA 23                    8111 	inc	hl
      0022AB 4D                    8112 	ld	c, l
      0022AC 44                    8113 	ld	b, h
      0022AD 11rBCr00              8114 	ld	de, #_exTiles+0
      0022B0 F8 03                 8115 	ldhl	sp,	#3
      0022B2 6E                    8116 	ld	l, (hl)
      0022B3 26 00                 8117 	ld	h, #0x00
      0022B5 19                    8118 	add	hl, de
      0022B6 5D                    8119 	ld	e, l
      0022B7 54                    8120 	ld	d, h
      0022B8 1A                    8121 	ld	a, (de)
      0022B9 02                    8122 	ld	(bc), a
                                   8123 ;src/main.c:832: explosions[oldestEx].frame = 0;
      0022BA 21rBBr00              8124 	ld	hl, #_oldestEx
      0022BD 4E                    8125 	ld	c, (hl)
      0022BE 06 00                 8126 	ld	b, #0x00
      0022C0 69                    8127 	ld	l, c
      0022C1 60                    8128 	ld	h, b
      0022C2 29                    8129 	add	hl, hl
      0022C3 09                    8130 	add	hl, bc
      0022C4 29                    8131 	add	hl, hl
      0022C5 01r03r01              8132 	ld	bc,#_explosions
      0022C8 09                    8133 	add	hl,bc
      0022C9 23                    8134 	inc	hl
      0022CA 23                    8135 	inc	hl
      0022CB 23                    8136 	inc	hl
      0022CC 36 00                 8137 	ld	(hl), #0x00
                                   8138 ;src/main.c:833: explosions[oldestEx].frameCounter = 0;
      0022CE 21rBBr00              8139 	ld	hl, #_oldestEx
      0022D1 4E                    8140 	ld	c, (hl)
      0022D2 06 00                 8141 	ld	b, #0x00
      0022D4 69                    8142 	ld	l, c
      0022D5 60                    8143 	ld	h, b
      0022D6 29                    8144 	add	hl, hl
      0022D7 09                    8145 	add	hl, bc
      0022D8 29                    8146 	add	hl, hl
      0022D9 01r03r01              8147 	ld	bc,#_explosions
      0022DC 09                    8148 	add	hl,bc
      0022DD 01 04 00              8149 	ld	bc, #0x0004
      0022E0 09                    8150 	add	hl, bc
      0022E1 36 00                 8151 	ld	(hl), #0x00
                                   8152 ;src/main.c:835: set_sprite_tile(20 + 2*oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      0022E3 21rBBr00              8153 	ld	hl, #_oldestEx
      0022E6 4E                    8154 	ld	c, (hl)
      0022E7 06 00                 8155 	ld	b, #0x00
      0022E9 69                    8156 	ld	l, c
      0022EA 60                    8157 	ld	h, b
      0022EB 29                    8158 	add	hl, hl
      0022EC 09                    8159 	add	hl, bc
      0022ED 29                    8160 	add	hl, hl
      0022EE 01r03r01              8161 	ld	bc,#_explosions
      0022F1 09                    8162 	add	hl,bc
      0022F2 5D                    8163 	ld	e, l
      0022F3 54                    8164 	ld	d, h
      0022F4 21 05 00              8165 	ld	hl, #0x0005
      0022F7 19                    8166 	add	hl, de
      0022F8 4E                    8167 	ld	c, (hl)
      0022F9 13                    8168 	inc	de
      0022FA 13                    8169 	inc	de
      0022FB 13                    8170 	inc	de
      0022FC 1A                    8171 	ld	a, (de)
      0022FD 87                    8172 	add	a, a
      0022FE 81                    8173 	add	a, c
      0022FF 4F                    8174 	ld	c, a
      002300 FArBBr00              8175 	ld	a, (#_oldestEx)
      002303 87                    8176 	add	a, a
      002304 C6 14                 8177 	add	a, #0x14
                                   8178 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002306 6F                    8179 	ld	l, a
      002307 11r00r00              8180 	ld	de, #_shadow_OAM+0
                                   8181 ;	spillPairReg hl
                                   8182 ;	spillPairReg hl
      00230A 26 00                 8183 	ld	h, #0x00
                                   8184 ;	spillPairReg hl
                                   8185 ;	spillPairReg hl
      00230C 29                    8186 	add	hl, hl
      00230D 29                    8187 	add	hl, hl
      00230E 19                    8188 	add	hl, de
      00230F 23                    8189 	inc	hl
      002310 23                    8190 	inc	hl
      002311 71                    8191 	ld	(hl), c
                                   8192 ;src/main.c:836: set_sprite_tile(21 + 2*oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      002312 21rBBr00              8193 	ld	hl, #_oldestEx
      002315 4E                    8194 	ld	c, (hl)
      002316 06 00                 8195 	ld	b, #0x00
      002318 69                    8196 	ld	l, c
      002319 60                    8197 	ld	h, b
      00231A 29                    8198 	add	hl, hl
      00231B 09                    8199 	add	hl, bc
      00231C 29                    8200 	add	hl, hl
      00231D 01r03r01              8201 	ld	bc,#_explosions
      002320 09                    8202 	add	hl,bc
      002321 5D                    8203 	ld	e, l
      002322 54                    8204 	ld	d, h
      002323 21 05 00              8205 	ld	hl, #0x0005
      002326 19                    8206 	add	hl, de
      002327 4E                    8207 	ld	c, (hl)
      002328 13                    8208 	inc	de
      002329 13                    8209 	inc	de
      00232A 13                    8210 	inc	de
      00232B 1A                    8211 	ld	a, (de)
      00232C 87                    8212 	add	a, a
      00232D 81                    8213 	add	a, c
      00232E C6 02                 8214 	add	a, #0x02
      002330 4F                    8215 	ld	c, a
      002331 FArBBr00              8216 	ld	a, (#_oldestEx)
      002334 87                    8217 	add	a, a
      002335 C6 15                 8218 	add	a, #0x15
                                   8219 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002337 6F                    8220 	ld	l, a
      002338 11r00r00              8221 	ld	de, #_shadow_OAM+0
                                   8222 ;	spillPairReg hl
                                   8223 ;	spillPairReg hl
      00233B 26 00                 8224 	ld	h, #0x00
                                   8225 ;	spillPairReg hl
                                   8226 ;	spillPairReg hl
      00233D 29                    8227 	add	hl, hl
      00233E 29                    8228 	add	hl, hl
      00233F 19                    8229 	add	hl, de
      002340 23                    8230 	inc	hl
      002341 23                    8231 	inc	hl
      002342 71                    8232 	ld	(hl), c
                                   8233 ;src/main.c:837: move_sprite(20 + 2*oldestEx, explosions[oldestEx].x, explosions[oldestEx].y+8);
      002343 21rBBr00              8234 	ld	hl, #_oldestEx
      002346 4E                    8235 	ld	c, (hl)
      002347 06 00                 8236 	ld	b, #0x00
      002349 69                    8237 	ld	l, c
      00234A 60                    8238 	ld	h, b
      00234B 29                    8239 	add	hl, hl
      00234C 09                    8240 	add	hl, bc
      00234D 29                    8241 	add	hl, hl
      00234E 01r03r01              8242 	ld	bc,#_explosions
      002351 09                    8243 	add	hl,bc
      002352 4D                    8244 	ld	c, l
      002353 44                    8245 	ld	b, h
      002354 23                    8246 	inc	hl
      002355 03                    8247 	inc	bc
      002356 03                    8248 	inc	bc
      002357 0A                    8249 	ld	a, (bc)
      002358 C6 08                 8250 	add	a, #0x08
      00235A 47                    8251 	ld	b, a
      00235B 4E                    8252 	ld	c, (hl)
      00235C FArBBr00              8253 	ld	a, (#_oldestEx)
      00235F 87                    8254 	add	a, a
      002360 C6 14                 8255 	add	a, #0x14
                                   8256 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002362 6F                    8257 	ld	l, a
                                   8258 ;	spillPairReg hl
                                   8259 ;	spillPairReg hl
      002363 26 00                 8260 	ld	h, #0x00
                                   8261 ;	spillPairReg hl
                                   8262 ;	spillPairReg hl
      002365 29                    8263 	add	hl, hl
      002366 29                    8264 	add	hl, hl
      002367 11r00r00              8265 	ld	de, #_shadow_OAM
      00236A 19                    8266 	add	hl, de
                                   8267 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00236B 78                    8268 	ld	a, b
      00236C 22                    8269 	ld	(hl+), a
      00236D 71                    8270 	ld	(hl), c
                                   8271 ;src/main.c:838: move_sprite(21 + 2*oldestEx, explosions[oldestEx].x+8, explosions[oldestEx].y+8);
      00236E 21rBBr00              8272 	ld	hl, #_oldestEx
      002371 4E                    8273 	ld	c, (hl)
      002372 06 00                 8274 	ld	b, #0x00
      002374 69                    8275 	ld	l, c
      002375 60                    8276 	ld	h, b
      002376 29                    8277 	add	hl, hl
      002377 09                    8278 	add	hl, bc
      002378 29                    8279 	add	hl, hl
      002379 01r03r01              8280 	ld	bc,#_explosions
      00237C 09                    8281 	add	hl,bc
      00237D 4D                    8282 	ld	c, l
      00237E 44                    8283 	ld	b, h
      00237F 23                    8284 	inc	hl
      002380 03                    8285 	inc	bc
      002381 03                    8286 	inc	bc
      002382 0A                    8287 	ld	a, (bc)
      002383 C6 08                 8288 	add	a, #0x08
      002385 47                    8289 	ld	b, a
      002386 7E                    8290 	ld	a, (hl)
      002387 C6 08                 8291 	add	a, #0x08
      002389 4F                    8292 	ld	c, a
      00238A FArBBr00              8293 	ld	a, (#_oldestEx)
      00238D 87                    8294 	add	a, a
      00238E C6 15                 8295 	add	a, #0x15
                                   8296 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002390 6F                    8297 	ld	l, a
                                   8298 ;	spillPairReg hl
                                   8299 ;	spillPairReg hl
      002391 26 00                 8300 	ld	h, #0x00
                                   8301 ;	spillPairReg hl
                                   8302 ;	spillPairReg hl
      002393 29                    8303 	add	hl, hl
      002394 29                    8304 	add	hl, hl
      002395 11r00r00              8305 	ld	de, #_shadow_OAM
      002398 19                    8306 	add	hl, de
                                   8307 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002399 78                    8308 	ld	a, b
      00239A 22                    8309 	ld	(hl+), a
      00239B 71                    8310 	ld	(hl), c
                                   8311 ;src/main.c:840: oldestEx++;
      00239C 21rBBr00              8312 	ld	hl, #_oldestEx
      00239F 34                    8313 	inc	(hl)
                                   8314 ;src/main.c:841: if (oldestEx >= exCount) {
      0023A0 21rA5r0B              8315 	ld	hl, #_exCount
      0023A3 4E                    8316 	ld	c, (hl)
      0023A4 21rBBr00              8317 	ld	hl, #_oldestEx
      0023A7 7E                    8318 	ld	a, (hl)
      0023A8 91                    8319 	sub	a, c
      0023A9 38 02                 8320 	jr	C, 00109$
                                   8321 ;src/main.c:842: oldestEx = 0;
      0023AB 36 00                 8322 	ld	(hl), #0x00
      0023AD                       8323 00109$:
                                   8324 ;src/main.c:846: }
      0023AD E8 04                 8325 	add	sp, #4
      0023AF C9                    8326 	ret
                                   8327 ;src/main.c:848: void checkCollision() {
                                   8328 ;	---------------------------------
                                   8329 ; Function checkCollision
                                   8330 ; ---------------------------------
      0023B0                       8331 _checkCollision::
      0023B0 E8 E9                 8332 	add	sp, #-23
                                   8333 ;src/main.c:855: struct Enemy *eptr = enemies + enemyCollisionCount;
      0023B2 21rA5r00              8334 	ld	hl, #_enemyCollisionCount
      0023B5 4E                    8335 	ld	c, (hl)
      0023B6 06 00                 8336 	ld	b, #0x00
      0023B8 69                    8337 	ld	l, c
      0023B9 60                    8338 	ld	h, b
      0023BA 29                    8339 	add	hl, hl
      0023BB 29                    8340 	add	hl, hl
      0023BC 29                    8341 	add	hl, hl
      0023BD 09                    8342 	add	hl, bc
      0023BE 29                    8343 	add	hl, hl
      0023BF 01r5Ar00              8344 	ld	bc,#_enemies
      0023C2 09                    8345 	add	hl,bc
      0023C3 4D                    8346 	ld	c, l
      0023C4 7C                    8347 	ld	a, h
      0023C5 F8 00                 8348 	ldhl	sp,	#0
      0023C7 71                    8349 	ld	(hl), c
      0023C8 23                    8350 	inc	hl
      0023C9 77                    8351 	ld	(hl), a
                                   8352 ;src/main.c:856: uint8_t i = enemyCollisionCount;
      0023CA FArA5r00              8353 	ld	a, (#_enemyCollisionCount)
      0023CD F8 02                 8354 	ldhl	sp,	#2
      0023CF 77                    8355 	ld	(hl), a
                                   8356 ;src/main.c:858: if (eptr->visible && eptr->alive) {
      0023D0 D1                    8357 	pop	de
      0023D1 D5                    8358 	push	de
      0023D2 21 0A 00              8359 	ld	hl, #0x000a
      0023D5 19                    8360 	add	hl, de
      0023D6 4D                    8361 	ld	c, l
      0023D7 44                    8362 	ld	b, h
      0023D8 0A                    8363 	ld	a, (bc)
      0023D9 B7                    8364 	or	a, a
      0023DA CAr5Dr28              8365 	jp	Z, 00139$
      0023DD D1                    8366 	pop	de
      0023DE D5                    8367 	push	de
      0023DF 21 09 00              8368 	ld	hl, #0x0009
      0023E2 19                    8369 	add	hl, de
      0023E3 4D                    8370 	ld	c, l
      0023E4 44                    8371 	ld	b, h
      0023E5 0A                    8372 	ld	a, (bc)
      0023E6 B7                    8373 	or	a, a
      0023E7 CAr5Dr28              8374 	jp	Z, 00139$
                                   8375 ;src/main.c:860: uint8_t alive = 1;
      0023EA F8 12                 8376 	ldhl	sp,	#18
      0023EC 36 01                 8377 	ld	(hl), #0x01
                                   8378 ;src/main.c:863: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      0023EE D1                    8379 	pop	de
      0023EF D5                    8380 	push	de
      0023F0 21 08 00              8381 	ld	hl, #0x0008
      0023F3 19                    8382 	add	hl, de
      0023F4 4D                    8383 	ld	c, l
      0023F5 44                    8384 	ld	b, h
      0023F6 0A                    8385 	ld	a, (bc)
      0023F7 4F                    8386 	ld	c, a
      0023F8 3D                    8387 	dec	a
      0023F9 3E 01                 8388 	ld	a, #0x01
      0023FB 28 01                 8389 	jr	Z, 00350$
      0023FD AF                    8390 	xor	a, a
      0023FE                       8391 00350$:
      0023FE F8 13                 8392 	ldhl	sp,	#19
      002400 77                    8393 	ld	(hl), a
      002401 FAr9Br00              8394 	ld	a, (#_playerDrawX)
      002404 F8 14                 8395 	ldhl	sp,	#20
      002406 77                    8396 	ld	(hl), a
                                   8397 ;src/main.c:864: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002407 79                    8398 	ld	a, c
      002408 D6 02                 8399 	sub	a, #0x02
      00240A 3E 01                 8400 	ld	a, #0x01
      00240C 28 01                 8401 	jr	Z, 00352$
      00240E AF                    8402 	xor	a, a
      00240F                       8403 00352$:
      00240F F8 15                 8404 	ldhl	sp,	#21
                                   8405 ;src/main.c:863: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      002411 32                    8406 	ld	(hl-), a
      002412 2B                    8407 	dec	hl
      002413 7E                    8408 	ld	a, (hl)
      002414 B7                    8409 	or	a, a
      002415 28 2F                 8410 	jr	Z, 00110$
      002417 D1                    8411 	pop	de
      002418 D5                    8412 	push	de
      002419 1A                    8413 	ld	a, (de)
      00241A F8 16                 8414 	ldhl	sp,	#22
      00241C 77                    8415 	ld	(hl), a
      00241D 3A                    8416 	ld	a, (hl-)
      00241E 2B                    8417 	dec	hl
      00241F 96                    8418 	sub	a, (hl)
      002420 23                    8419 	inc	hl
      002421 23                    8420 	inc	hl
      002422 77                    8421 	ld	(hl), a
                                   8422 ;src/main.c:364: if (value >= 0) return value;
      002423 CB 7E                 8423 	bit	7, (hl)
      002425 28 06                 8424 	jr	Z, 00147$
                                   8425 ;src/main.c:365: else return - value;
      002427 AF                    8426 	xor	a, a
      002428 F8 16                 8427 	ldhl	sp,	#22
      00242A 96                    8428 	sub	a, (hl)
      00242B 4F                    8429 	ld	c, a
      00242C 71                    8430 	ld	(hl), c
                                   8431 ;src/main.c:863: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00242D                       8432 00147$:
      00242D F8 16                 8433 	ldhl	sp,	#22
      00242F 5E                    8434 	ld	e, (hl)
      002430 3E 08                 8435 	ld	a,#0x08
      002432 57                    8436 	ld	d,a
      002433 96                    8437 	sub	a, (hl)
      002434 CB 7B                 8438 	bit	7, e
      002436 28 07                 8439 	jr	Z, 00353$
      002438 CB 7A                 8440 	bit	7, d
      00243A 20 08                 8441 	jr	NZ, 00354$
      00243C BF                    8442 	cp	a, a
      00243D 18 05                 8443 	jr	00354$
      00243F                       8444 00353$:
      00243F CB 7A                 8445 	bit	7, d
      002441 28 01                 8446 	jr	Z, 00354$
      002443 37                    8447 	scf
      002444                       8448 00354$:
      002444 30 2F                 8449 	jr	NC, 00106$
      002446                       8450 00110$:
                                   8451 ;src/main.c:864: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002446 F8 15                 8452 	ldhl	sp,	#21
      002448 7E                    8453 	ld	a, (hl)
      002449 B7                    8454 	or	a, a
      00244A CAr30r25              8455 	jp	Z, 00107$
      00244D 2B                    8456 	dec	hl
      00244E D1                    8457 	pop	de
      00244F D5                    8458 	push	de
      002450 1A                    8459 	ld	a, (de)
      002451 96                    8460 	sub	a, (hl)
      002452 4F                    8461 	ld	c, a
                                   8462 ;src/main.c:364: if (value >= 0) return value;
      002453 CB 79                 8463 	bit	7, c
      002455 20 03                 8464 	jr	NZ, 00149$
      002457 41                    8465 	ld	b, c
      002458 18 03                 8466 	jr	00151$
      00245A                       8467 00149$:
                                   8468 ;src/main.c:365: else return - value;
      00245A AF                    8469 	xor	a, a
      00245B 91                    8470 	sub	a, c
      00245C 47                    8471 	ld	b, a
                                   8472 ;src/main.c:864: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      00245D                       8473 00151$:
      00245D 58                    8474 	ld	e, b
      00245E 3E 10                 8475 	ld	a,#0x10
      002460 57                    8476 	ld	d,a
      002461 90                    8477 	sub	a, b
      002462 CB 7B                 8478 	bit	7, e
      002464 28 07                 8479 	jr	Z, 00355$
      002466 CB 7A                 8480 	bit	7, d
      002468 20 08                 8481 	jr	NZ, 00356$
      00246A BF                    8482 	cp	a, a
      00246B 18 05                 8483 	jr	00356$
      00246D                       8484 00355$:
      00246D CB 7A                 8485 	bit	7, d
      00246F 28 01                 8486 	jr	Z, 00356$
      002471 37                    8487 	scf
      002472                       8488 00356$:
      002472 DAr30r25              8489 	jp	C, 00107$
      002475                       8490 00106$:
                                   8491 ;src/main.c:865: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      002475 C1                    8492 	pop	bc
      002476 C5                    8493 	push	bc
      002477 03                    8494 	inc	bc
      002478 03                    8495 	inc	bc
      002479 FAr9Cr00              8496 	ld	a, (#_playerDrawY)
      00247C F8 16                 8497 	ldhl	sp,	#22
      00247E 77                    8498 	ld	(hl), a
      00247F F8 13                 8499 	ldhl	sp,	#19
      002481 7E                    8500 	ld	a, (hl)
      002482 B7                    8501 	or	a, a
      002483 28 23                 8502 	jr	Z, 00105$
      002485 0A                    8503 	ld	a, (bc)
      002486 F8 16                 8504 	ldhl	sp,	#22
      002488 96                    8505 	sub	a, (hl)
      002489 6F                    8506 	ld	l, a
                                   8507 ;	spillPairReg hl
                                   8508 ;	spillPairReg hl
                                   8509 ;src/main.c:364: if (value >= 0) return value;
      00248A CB 7D                 8510 	bit	7, l
      00248C 28 03                 8511 	jr	Z, 00155$
                                   8512 ;src/main.c:365: else return - value;
      00248E AF                    8513 	xor	a, a
      00248F 95                    8514 	sub	a, l
      002490 6F                    8515 	ld	l, a
                                   8516 ;	spillPairReg hl
                                   8517 ;	spillPairReg hl
                                   8518 ;src/main.c:865: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      002491                       8519 00155$:
      002491 5D                    8520 	ld	e, l
      002492 3E 08                 8521 	ld	a,#0x08
      002494 57                    8522 	ld	d,a
      002495 95                    8523 	sub	a, l
      002496 CB 7B                 8524 	bit	7, e
      002498 28 07                 8525 	jr	Z, 00357$
      00249A CB 7A                 8526 	bit	7, d
      00249C 20 08                 8527 	jr	NZ, 00358$
      00249E BF                    8528 	cp	a, a
      00249F 18 05                 8529 	jr	00358$
      0024A1                       8530 00357$:
      0024A1 CB 7A                 8531 	bit	7, d
      0024A3 28 01                 8532 	jr	Z, 00358$
      0024A5 37                    8533 	scf
      0024A6                       8534 00358$:
      0024A6 30 29                 8535 	jr	NC, 00101$
      0024A8                       8536 00105$:
                                   8537 ;src/main.c:866: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      0024A8 F8 15                 8538 	ldhl	sp,	#21
      0024AA 7E                    8539 	ld	a, (hl)
      0024AB B7                    8540 	or	a, a
      0024AC CAr30r25              8541 	jp	Z, 00107$
      0024AF 23                    8542 	inc	hl
      0024B0 0A                    8543 	ld	a, (bc)
      0024B1 96                    8544 	sub	a, (hl)
      0024B2 4F                    8545 	ld	c, a
                                   8546 ;src/main.c:364: if (value >= 0) return value;
      0024B3 CB 79                 8547 	bit	7, c
      0024B5 28 03                 8548 	jr	Z, 00159$
                                   8549 ;src/main.c:365: else return - value;
      0024B7 AF                    8550 	xor	a, a
      0024B8 91                    8551 	sub	a, c
      0024B9 4F                    8552 	ld	c, a
                                   8553 ;src/main.c:866: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      0024BA                       8554 00159$:
      0024BA 59                    8555 	ld	e, c
      0024BB 3E 10                 8556 	ld	a,#0x10
      0024BD 57                    8557 	ld	d,a
      0024BE 91                    8558 	sub	a, c
      0024BF CB 7B                 8559 	bit	7, e
      0024C1 28 07                 8560 	jr	Z, 00359$
      0024C3 CB 7A                 8561 	bit	7, d
      0024C5 20 08                 8562 	jr	NZ, 00360$
      0024C7 BF                    8563 	cp	a, a
      0024C8 18 05                 8564 	jr	00360$
      0024CA                       8565 00359$:
      0024CA CB 7A                 8566 	bit	7, d
      0024CC 28 01                 8567 	jr	Z, 00360$
      0024CE 37                    8568 	scf
      0024CF                       8569 00360$:
      0024CF 38 5F                 8570 	jr	C, 00107$
      0024D1                       8571 00101$:
                                   8572 ;src/main.c:868: set_sprite_tile(10+(i<<1), 0x7f);
      0024D1 F8 02                 8573 	ldhl	sp,	#2
      0024D3 7E                    8574 	ld	a, (hl)
      0024D4 87                    8575 	add	a, a
      0024D5 C6 0A                 8576 	add	a, #0x0a
                                   8577 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0024D7 6F                    8578 	ld	l, a
      0024D8 01r00r00              8579 	ld	bc, #_shadow_OAM+0
                                   8580 ;	spillPairReg hl
                                   8581 ;	spillPairReg hl
      0024DB 26 00                 8582 	ld	h, #0x00
                                   8583 ;	spillPairReg hl
                                   8584 ;	spillPairReg hl
      0024DD 29                    8585 	add	hl, hl
      0024DE 29                    8586 	add	hl, hl
      0024DF 09                    8587 	add	hl, bc
      0024E0 23                    8588 	inc	hl
      0024E1 23                    8589 	inc	hl
      0024E2 36 7F                 8590 	ld	(hl), #0x7f
                                   8591 ;src/main.c:869: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0024E4 F8 02                 8592 	ldhl	sp,	#2
      0024E6 7E                    8593 	ld	a, (hl)
      0024E7 87                    8594 	add	a, a
      0024E8 C6 0B                 8595 	add	a, #0x0b
                                   8596 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0024EA 6F                    8597 	ld	l, a
      0024EB 01r00r00              8598 	ld	bc, #_shadow_OAM+0
                                   8599 ;	spillPairReg hl
                                   8600 ;	spillPairReg hl
      0024EE 26 00                 8601 	ld	h, #0x00
                                   8602 ;	spillPairReg hl
                                   8603 ;	spillPairReg hl
      0024F0 29                    8604 	add	hl, hl
      0024F1 29                    8605 	add	hl, hl
      0024F2 09                    8606 	add	hl, bc
      0024F3 23                    8607 	inc	hl
      0024F4 23                    8608 	inc	hl
      0024F5 36 7F                 8609 	ld	(hl), #0x7f
                                   8610 ;src/main.c:870: eptr->alive = 0;
      0024F7 D1                    8611 	pop	de
      0024F8 D5                    8612 	push	de
      0024F9 21 09 00              8613 	ld	hl, #0x0009
      0024FC 19                    8614 	add	hl, de
      0024FD 4D                    8615 	ld	c, l
      0024FE 44                    8616 	ld	b, h
      0024FF AF                    8617 	xor	a, a
      002500 02                    8618 	ld	(bc), a
                                   8619 ;src/main.c:871: eptr->visible = 0;
      002501 D1                    8620 	pop	de
      002502 D5                    8621 	push	de
      002503 21 0A 00              8622 	ld	hl, #0x000a
      002506 19                    8623 	add	hl, de
      002507 4D                    8624 	ld	c, l
      002508 44                    8625 	ld	b, h
      002509 AF                    8626 	xor	a, a
      00250A 02                    8627 	ld	(bc), a
                                   8628 ;src/main.c:872: takeDamage(eptr->damage);
      00250B D1                    8629 	pop	de
      00250C D5                    8630 	push	de
      00250D 21 0B 00              8631 	ld	hl, #0x000b
      002510 19                    8632 	add	hl, de
      002511 4D                    8633 	ld	c, l
      002512 44                    8634 	ld	b, h
      002513 0A                    8635 	ld	a, (bc)
      002514 06 00                 8636 	ld	b, #0x00
      002516 4F                    8637 	ld	c, a
      002517 C5                    8638 	push	bc
      002518 CDr0Ar21              8639 	call	_takeDamage
      00251B E1                    8640 	pop	hl
                                   8641 ;src/main.c:873: initEnemy(i);
      00251C F8 02                 8642 	ldhl	sp,	#2
      00251E 7E                    8643 	ld	a, (hl)
      00251F F5                    8644 	push	af
      002520 33                    8645 	inc	sp
      002521 CDr69r11              8646 	call	_initEnemy
      002524 33                    8647 	inc	sp
                                   8648 ;src/main.c:874: playSound(0);
      002525 AF                    8649 	xor	a, a
      002526 F5                    8650 	push	af
      002527 33                    8651 	inc	sp
      002528 CDr9Br0F              8652 	call	_playSound
      00252B 33                    8653 	inc	sp
                                   8654 ;src/main.c:876: alive = 0;
      00252C F8 12                 8655 	ldhl	sp,	#18
      00252E 36 00                 8656 	ld	(hl), #0x00
      002530                       8657 00107$:
                                   8658 ;src/main.c:882: if (alive) {
      002530 F8 12                 8659 	ldhl	sp,	#18
      002532 7E                    8660 	ld	a, (hl)
      002533 B7                    8661 	or	a, a
      002534 CAr5Dr28              8662 	jp	Z, 00139$
                                   8663 ;src/main.c:883: struct Projectile *pptr = projectiles;
      002537 23                    8664 	inc	hl
      002538 3ErB4                 8665 	ld	a, #<(_projectiles)
      00253A 22                    8666 	ld	(hl+), a
      00253B 36s00                 8667 	ld	(hl), #>(_projectiles)
                                   8668 ;src/main.c:885: while (j < PROJECTILECOUNT) {
      00253D D1                    8669 	pop	de
      00253E D5                    8670 	push	de
      00253F 21 02 00              8671 	ld	hl, #0x0002
      002542 19                    8672 	add	hl, de
      002543 E5                    8673 	push	hl
      002544 7D                    8674 	ld	a, l
      002545 F8 05                 8675 	ldhl	sp,	#5
      002547 77                    8676 	ld	(hl), a
      002548 E1                    8677 	pop	hl
      002549 7C                    8678 	ld	a, h
      00254A F8 04                 8679 	ldhl	sp,	#4
      00254C 32                    8680 	ld	(hl-), a
      00254D 2A                    8681 	ld	a, (hl+)
      00254E 23                    8682 	inc	hl
      00254F 32                    8683 	ld	(hl-), a
      002550 2A                    8684 	ld	a, (hl+)
      002551 23                    8685 	inc	hl
      002552 77                    8686 	ld	(hl), a
      002553 D1                    8687 	pop	de
      002554 D5                    8688 	push	de
      002555 21 08 00              8689 	ld	hl, #0x0008
      002558 19                    8690 	add	hl, de
      002559 E5                    8691 	push	hl
      00255A 7D                    8692 	ld	a, l
      00255B F8 09                 8693 	ldhl	sp,	#9
      00255D 77                    8694 	ld	(hl), a
      00255E E1                    8695 	pop	hl
      00255F 7C                    8696 	ld	a, h
      002560 F8 08                 8697 	ldhl	sp,	#8
      002562 77                    8698 	ld	(hl), a
      002563 F8 03                 8699 	ldhl	sp,	#3
      002565 7E                    8700 	ld	a, (hl)
      002566 F8 09                 8701 	ldhl	sp,	#9
      002568 77                    8702 	ld	(hl), a
      002569 F8 04                 8703 	ldhl	sp,	#4
      00256B 7E                    8704 	ld	a, (hl)
      00256C F8 0A                 8705 	ldhl	sp,	#10
      00256E 77                    8706 	ld	(hl), a
      00256F F8 15                 8707 	ldhl	sp,	#21
      002571 36 00                 8708 	ld	(hl), #0x00
      002573                       8709 00133$:
      002573 21r9Fr0B              8710 	ld	hl, #_PROJECTILECOUNT
      002576 4E                    8711 	ld	c, (hl)
      002577 F8 15                 8712 	ldhl	sp,	#21
      002579 7E                    8713 	ld	a, (hl)
      00257A 91                    8714 	sub	a, c
      00257B D2r5Dr28              8715 	jp	NC, 00139$
                                   8716 ;src/main.c:886: if (pptr->active) {
      00257E 2B                    8717 	dec	hl
      00257F 2B                    8718 	dec	hl
      002580 2A                    8719 	ld	a, (hl+)
      002581 5F                    8720 	ld	e, a
      002582 56                    8721 	ld	d, (hl)
      002583 21 0A 00              8722 	ld	hl, #0x000a
      002586 19                    8723 	add	hl, de
      002587 4D                    8724 	ld	c, l
      002588 44                    8725 	ld	b, h
      002589 0A                    8726 	ld	a, (bc)
      00258A B7                    8727 	or	a, a
      00258B CAr44r28              8728 	jp	Z, 00132$
                                   8729 ;src/main.c:888: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      00258E F8 07                 8730 	ldhl	sp,#7
      002590 2A                    8731 	ld	a, (hl+)
      002591 5F                    8732 	ld	e, a
      002592 56                    8733 	ld	d, (hl)
      002593 1A                    8734 	ld	a, (de)
      002594 4F                    8735 	ld	c, a
      002595 3D                    8736 	dec	a
      002596 3E 01                 8737 	ld	a, #0x01
      002598 28 01                 8738 	jr	Z, 00362$
      00259A AF                    8739 	xor	a, a
      00259B                       8740 00362$:
      00259B F8 11                 8741 	ldhl	sp,	#17
      00259D 77                    8742 	ld	(hl), a
                                   8743 ;src/main.c:889: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      00259E 79                    8744 	ld	a, c
      00259F D6 02                 8745 	sub	a, #0x02
      0025A1 3E 01                 8746 	ld	a, #0x01
      0025A3 28 01                 8747 	jr	Z, 00364$
      0025A5 AF                    8748 	xor	a, a
      0025A6                       8749 00364$:
      0025A6 F8 12                 8750 	ldhl	sp,	#18
                                   8751 ;src/main.c:888: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0025A8 32                    8752 	ld	(hl-), a
      0025A9 7E                    8753 	ld	a, (hl)
      0025AA B7                    8754 	or	a, a
      0025AB 28 2C                 8755 	jr	Z, 00130$
      0025AD D1                    8756 	pop	de
      0025AE D5                    8757 	push	de
      0025AF 1A                    8758 	ld	a, (de)
      0025B0 F8 13                 8759 	ldhl	sp,#19
      0025B2 5E                    8760 	ld	e, (hl)
      0025B3 23                    8761 	inc	hl
      0025B4 56                    8762 	ld	d, (hl)
      0025B5 F5                    8763 	push	af
      0025B6 1A                    8764 	ld	a, (de)
      0025B7 4F                    8765 	ld	c, a
      0025B8 F1                    8766 	pop	af
      0025B9 91                    8767 	sub	a, c
      0025BA 4F                    8768 	ld	c, a
                                   8769 ;src/main.c:364: if (value >= 0) return value;
      0025BB CB 79                 8770 	bit	7, c
      0025BD 28 03                 8771 	jr	Z, 00165$
                                   8772 ;src/main.c:365: else return - value;
      0025BF AF                    8773 	xor	a, a
      0025C0 91                    8774 	sub	a, c
      0025C1 4F                    8775 	ld	c, a
                                   8776 ;src/main.c:888: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0025C2                       8777 00165$:
      0025C2 59                    8778 	ld	e, c
      0025C3 3E 08                 8779 	ld	a,#0x08
      0025C5 57                    8780 	ld	d,a
      0025C6 91                    8781 	sub	a, c
      0025C7 CB 7B                 8782 	bit	7, e
      0025C9 28 07                 8783 	jr	Z, 00365$
      0025CB CB 7A                 8784 	bit	7, d
      0025CD 20 08                 8785 	jr	NZ, 00366$
      0025CF BF                    8786 	cp	a, a
      0025D0 18 05                 8787 	jr	00366$
      0025D2                       8788 00365$:
      0025D2 CB 7A                 8789 	bit	7, d
      0025D4 28 01                 8790 	jr	Z, 00366$
      0025D6 37                    8791 	scf
      0025D7                       8792 00366$:
      0025D7 30 3A                 8793 	jr	NC, 00126$
      0025D9                       8794 00130$:
                                   8795 ;src/main.c:889: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      0025D9 F8 12                 8796 	ldhl	sp,	#18
      0025DB 7E                    8797 	ld	a, (hl)
      0025DC B7                    8798 	or	a, a
      0025DD CAr44r28              8799 	jp	Z, 00132$
      0025E0 23                    8800 	inc	hl
      0025E1 D1                    8801 	pop	de
      0025E2 D5                    8802 	push	de
      0025E3 1A                    8803 	ld	a, (de)
      0025E4 5E                    8804 	ld	e, (hl)
      0025E5 23                    8805 	inc	hl
      0025E6 56                    8806 	ld	d, (hl)
      0025E7 23                    8807 	inc	hl
      0025E8 23                    8808 	inc	hl
      0025E9 F5                    8809 	push	af
      0025EA 1A                    8810 	ld	a, (de)
      0025EB 4F                    8811 	ld	c, a
      0025EC F1                    8812 	pop	af
      0025ED 91                    8813 	sub	a, c
      0025EE 77                    8814 	ld	(hl), a
                                   8815 ;src/main.c:364: if (value >= 0) return value;
      0025EF CB 7E                 8816 	bit	7, (hl)
      0025F1 20 03                 8817 	jr	NZ, 00167$
      0025F3 4E                    8818 	ld	c, (hl)
      0025F4 18 05                 8819 	jr	00169$
      0025F6                       8820 00167$:
                                   8821 ;src/main.c:365: else return - value;
      0025F6 AF                    8822 	xor	a, a
      0025F7 F8 16                 8823 	ldhl	sp,	#22
      0025F9 96                    8824 	sub	a, (hl)
      0025FA 4F                    8825 	ld	c, a
                                   8826 ;src/main.c:889: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      0025FB                       8827 00169$:
      0025FB 59                    8828 	ld	e, c
      0025FC 3E 10                 8829 	ld	a,#0x10
      0025FE 57                    8830 	ld	d,a
      0025FF 91                    8831 	sub	a, c
      002600 CB 7B                 8832 	bit	7, e
      002602 28 07                 8833 	jr	Z, 00367$
      002604 CB 7A                 8834 	bit	7, d
      002606 20 08                 8835 	jr	NZ, 00368$
      002608 BF                    8836 	cp	a, a
      002609 18 05                 8837 	jr	00368$
      00260B                       8838 00367$:
      00260B CB 7A                 8839 	bit	7, d
      00260D 28 01                 8840 	jr	Z, 00368$
      00260F 37                    8841 	scf
      002610                       8842 00368$:
      002610 DAr44r28              8843 	jp	C, 00132$
      002613                       8844 00126$:
                                   8845 ;src/main.c:890: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002613 F8 13                 8846 	ldhl	sp,	#19
      002615 2A                    8847 	ld	a, (hl+)
      002616 4F                    8848 	ld	c, a
      002617 46                    8849 	ld	b, (hl)
      002618 03                    8850 	inc	bc
      002619 03                    8851 	inc	bc
      00261A F8 11                 8852 	ldhl	sp,	#17
      00261C 7E                    8853 	ld	a, (hl)
      00261D B7                    8854 	or	a, a
      00261E 28 2A                 8855 	jr	Z, 00125$
      002620 F8 09                 8856 	ldhl	sp,#9
      002622 2A                    8857 	ld	a, (hl+)
      002623 5F                    8858 	ld	e, a
      002624 56                    8859 	ld	d, (hl)
      002625 1A                    8860 	ld	a, (de)
      002626 F5                    8861 	push	af
      002627 0A                    8862 	ld	a, (bc)
      002628 5F                    8863 	ld	e, a
      002629 F1                    8864 	pop	af
      00262A 93                    8865 	sub	a, e
      00262B 6F                    8866 	ld	l, a
                                   8867 ;	spillPairReg hl
                                   8868 ;	spillPairReg hl
                                   8869 ;src/main.c:364: if (value >= 0) return value;
      00262C CB 7D                 8870 	bit	7, l
      00262E 28 03                 8871 	jr	Z, 00173$
                                   8872 ;src/main.c:365: else return - value;
      002630 AF                    8873 	xor	a, a
      002631 95                    8874 	sub	a, l
      002632 6F                    8875 	ld	l, a
                                   8876 ;	spillPairReg hl
                                   8877 ;	spillPairReg hl
                                   8878 ;src/main.c:890: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002633                       8879 00173$:
      002633 5D                    8880 	ld	e, l
      002634 3E 08                 8881 	ld	a,#0x08
      002636 57                    8882 	ld	d,a
      002637 95                    8883 	sub	a, l
      002638 CB 7B                 8884 	bit	7, e
      00263A 28 07                 8885 	jr	Z, 00369$
      00263C CB 7A                 8886 	bit	7, d
      00263E 20 08                 8887 	jr	NZ, 00370$
      002640 BF                    8888 	cp	a, a
      002641 18 05                 8889 	jr	00370$
      002643                       8890 00369$:
      002643 CB 7A                 8891 	bit	7, d
      002645 28 01                 8892 	jr	Z, 00370$
      002647 37                    8893 	scf
      002648                       8894 00370$:
      002648 30 32                 8895 	jr	NC, 00121$
      00264A                       8896 00125$:
                                   8897 ;src/main.c:891: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      00264A F8 12                 8898 	ldhl	sp,	#18
      00264C 7E                    8899 	ld	a, (hl)
      00264D B7                    8900 	or	a, a
      00264E CAr44r28              8901 	jp	Z, 00132$
      002651 F8 03                 8902 	ldhl	sp,#3
      002653 2A                    8903 	ld	a, (hl+)
      002654 5F                    8904 	ld	e, a
      002655 56                    8905 	ld	d, (hl)
      002656 1A                    8906 	ld	a, (de)
      002657 F5                    8907 	push	af
      002658 0A                    8908 	ld	a, (bc)
      002659 4F                    8909 	ld	c, a
      00265A F1                    8910 	pop	af
      00265B 91                    8911 	sub	a, c
      00265C 4F                    8912 	ld	c, a
                                   8913 ;src/main.c:364: if (value >= 0) return value;
      00265D CB 79                 8914 	bit	7, c
      00265F 28 03                 8915 	jr	Z, 00177$
                                   8916 ;src/main.c:365: else return - value;
      002661 AF                    8917 	xor	a, a
      002662 91                    8918 	sub	a, c
      002663 4F                    8919 	ld	c, a
                                   8920 ;src/main.c:891: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      002664                       8921 00177$:
      002664 59                    8922 	ld	e, c
      002665 3E 10                 8923 	ld	a,#0x10
      002667 57                    8924 	ld	d,a
      002668 91                    8925 	sub	a, c
      002669 CB 7B                 8926 	bit	7, e
      00266B 28 07                 8927 	jr	Z, 00371$
      00266D CB 7A                 8928 	bit	7, d
      00266F 20 08                 8929 	jr	NZ, 00372$
      002671 BF                    8930 	cp	a, a
      002672 18 05                 8931 	jr	00372$
      002674                       8932 00371$:
      002674 CB 7A                 8933 	bit	7, d
      002676 28 01                 8934 	jr	Z, 00372$
      002678 37                    8935 	scf
      002679                       8936 00372$:
      002679 DAr44r28              8937 	jp	C, 00132$
      00267C                       8938 00121$:
                                   8939 ;src/main.c:893: set_sprite_tile(30+j, 0x7f);
      00267C F8 15                 8940 	ldhl	sp,	#21
      00267E 7E                    8941 	ld	a, (hl)
      00267F C6 1E                 8942 	add	a, #0x1e
                                   8943 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002681 6F                    8944 	ld	l, a
      002682 01r00r00              8945 	ld	bc, #_shadow_OAM+0
                                   8946 ;	spillPairReg hl
                                   8947 ;	spillPairReg hl
      002685 26 00                 8948 	ld	h, #0x00
                                   8949 ;	spillPairReg hl
                                   8950 ;	spillPairReg hl
      002687 29                    8951 	add	hl, hl
      002688 29                    8952 	add	hl, hl
      002689 09                    8953 	add	hl, bc
      00268A 23                    8954 	inc	hl
      00268B 23                    8955 	inc	hl
      00268C 36 7F                 8956 	ld	(hl), #0x7f
                                   8957 ;src/main.c:894: pptr->active = 0;
      00268E F8 13                 8958 	ldhl	sp,#19
      002690 2A                    8959 	ld	a, (hl+)
      002691 5F                    8960 	ld	e, a
      002692 56                    8961 	ld	d, (hl)
      002693 21 0A 00              8962 	ld	hl, #0x000a
      002696 19                    8963 	add	hl, de
      002697 4D                    8964 	ld	c, l
      002698 44                    8965 	ld	b, h
      002699 AF                    8966 	xor	a, a
      00269A 02                    8967 	ld	(bc), a
                                   8968 ;src/main.c:896: if (pptr->type == 0x2c) { //missile
      00269B F8 13                 8969 	ldhl	sp,#19
      00269D 2A                    8970 	ld	a, (hl+)
      00269E 5F                    8971 	ld	e, a
      00269F 56                    8972 	ld	d, (hl)
      0026A0 21 0C 00              8973 	ld	hl, #0x000c
      0026A3 19                    8974 	add	hl, de
      0026A4 4D                    8975 	ld	c, l
      0026A5 44                    8976 	ld	b, h
      0026A6 0A                    8977 	ld	a, (bc)
      0026A7 5F                    8978 	ld	e, a
                                   8979 ;src/main.c:901: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      0026A8 D5                    8980 	push	de
      0026A9 F8 15                 8981 	ldhl	sp,#21
      0026AB 2A                    8982 	ld	a, (hl+)
      0026AC 5F                    8983 	ld	e, a
      0026AD 56                    8984 	ld	d, (hl)
      0026AE 21 08 00              8985 	ld	hl, #0x0008
      0026B1 19                    8986 	add	hl, de
      0026B2 D1                    8987 	pop	de
      0026B3 4D                    8988 	ld	c, l
      0026B4 44                    8989 	ld	b, h
                                   8990 ;src/main.c:896: if (pptr->type == 0x2c) { //missile
      0026B5 7B                    8991 	ld	a, e
      0026B6 D6 2C                 8992 	sub	a, #0x2c
      0026B8 C2rE9r27              8993 	jp	NZ,00119$
                                   8994 ;src/main.c:901: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      0026BB F8 0B                 8995 	ldhl	sp,	#11
      0026BD 79                    8996 	ld	a, c
      0026BE 22                    8997 	ld	(hl+), a
      0026BF 70                    8998 	ld	(hl), b
      0026C0 F8 16                 8999 	ldhl	sp,	#22
      0026C2 36 00                 9000 	ld	(hl), #0x00
      0026C4                       9001 00188$:
      0026C4 21r8Er0B              9002 	ld	hl, #_ENEMYCOUNT
      0026C7 4E                    9003 	ld	c, (hl)
      0026C8 F8 16                 9004 	ldhl	sp,	#22
      0026CA 7E                    9005 	ld	a, (hl)
      0026CB 91                    9006 	sub	a, c
      0026CC D2r44r28              9007 	jp	NC, 00132$
                                   9008 ;src/main.c:902: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      0026CF D1                    9009 	pop	de
      0026D0 D5                    9010 	push	de
      0026D1 1A                    9011 	ld	a, (de)
      0026D2 F8 0F                 9012 	ldhl	sp,	#15
      0026D4 22                    9013 	ld	(hl+), a
      0026D5 13                    9014 	inc	de
      0026D6 1A                    9015 	ld	a, (de)
      0026D7 77                    9016 	ld	(hl), a
      0026D8 F8 16                 9017 	ldhl	sp,	#22
      0026DA 4E                    9018 	ld	c, (hl)
      0026DB 06 00                 9019 	ld	b, #0x00
      0026DD 69                    9020 	ld	l, c
      0026DE 60                    9021 	ld	h, b
      0026DF 29                    9022 	add	hl, hl
      0026E0 29                    9023 	add	hl, hl
      0026E1 29                    9024 	add	hl, hl
      0026E2 09                    9025 	add	hl, bc
      0026E3 29                    9026 	add	hl, hl
      0026E4 01r5Ar00              9027 	ld	bc,#_enemies
      0026E7 09                    9028 	add	hl,bc
      0026E8 E5                    9029 	push	hl
      0026E9 7D                    9030 	ld	a, l
      0026EA F8 13                 9031 	ldhl	sp,	#19
      0026EC 77                    9032 	ld	(hl), a
      0026ED E1                    9033 	pop	hl
      0026EE 7C                    9034 	ld	a, h
      0026EF F8 12                 9035 	ldhl	sp,	#18
      0026F1 32                    9036 	ld	(hl-), a
      0026F2 2A                    9037 	ld	a, (hl+)
      0026F3 5F                    9038 	ld	e, a
      0026F4 3A                    9039 	ld	a, (hl-)
      0026F5 2B                    9040 	dec	hl
      0026F6 2B                    9041 	dec	hl
      0026F7 57                    9042 	ld	d, a
      0026F8 1A                    9043 	ld	a, (de)
      0026F9 4F                    9044 	ld	c, a
      0026FA 13                    9045 	inc	de
      0026FB 1A                    9046 	ld	a, (de)
      0026FC 47                    9047 	ld	b, a
      0026FD 2A                    9048 	ld	a, (hl+)
      0026FE 5F                    9049 	ld	e, a
      0026FF 56                    9050 	ld	d, (hl)
      002700 7B                    9051 	ld	a, e
      002701 91                    9052 	sub	a, c
      002702 5F                    9053 	ld	e, a
      002703 7A                    9054 	ld	a, d
      002704 98                    9055 	sbc	a, b
      002705 4B                    9056 	ld	c, e
      002706 47                    9057 	ld	b, a
                                   9058 ;	spillPairReg hl
                                   9059 ;	spillPairReg hl
      002707 60                    9060 	ld	h, b
                                   9061 ;	spillPairReg hl
                                   9062 ;	spillPairReg hl
      002708 CB 7C                 9063 	bit	7, h
      00270A 20 07                 9064 	jr	NZ, 00180$
      00270C F8 0F                 9065 	ldhl	sp,	#15
      00270E 79                    9066 	ld	a, c
      00270F 22                    9067 	ld	(hl+), a
      002710 70                    9068 	ld	(hl), b
      002711 18 0B                 9069 	jr	00182$
      002713                       9070 00180$:
      002713 AF                    9071 	xor	a, a
      002714 91                    9072 	sub	a, c
      002715 4F                    9073 	ld	c, a
      002716 9F                    9074 	sbc	a, a
      002717 90                    9075 	sub	a, b
      002718 47                    9076 	ld	b, a
      002719 F8 0F                 9077 	ldhl	sp,	#15
      00271B 79                    9078 	ld	a, c
      00271C 22                    9079 	ld	(hl+), a
      00271D 70                    9080 	ld	(hl), b
      00271E                       9081 00182$:
      00271E F8 05                 9082 	ldhl	sp,#5
      002720 2A                    9083 	ld	a, (hl+)
      002721 5F                    9084 	ld	e, a
      002722 56                    9085 	ld	d, (hl)
      002723 1A                    9086 	ld	a, (de)
      002724 4F                    9087 	ld	c, a
      002725 13                    9088 	inc	de
      002726 1A                    9089 	ld	a, (de)
      002727 47                    9090 	ld	b, a
      002728 F8 11                 9091 	ldhl	sp,	#17
      00272A 2A                    9092 	ld	a, (hl+)
      00272B 66                    9093 	ld	h, (hl)
                                   9094 ;	spillPairReg hl
                                   9095 ;	spillPairReg hl
      00272C 6F                    9096 	ld	l, a
                                   9097 ;	spillPairReg hl
                                   9098 ;	spillPairReg hl
      00272D 23                    9099 	inc	hl
      00272E 23                    9100 	inc	hl
      00272F 2A                    9101 	ld	a,	(hl+)
      002730 66                    9102 	ld	h, (hl)
                                   9103 ;	spillPairReg hl
      002731 6F                    9104 	ld	l, a
                                   9105 ;	spillPairReg hl
                                   9106 ;	spillPairReg hl
      002732 79                    9107 	ld	a, c
      002733 95                    9108 	sub	a, l
      002734 4F                    9109 	ld	c, a
      002735 78                    9110 	ld	a, b
      002736 9C                    9111 	sbc	a, h
      002737 47                    9112 	ld	b, a
                                   9113 ;	spillPairReg hl
                                   9114 ;	spillPairReg hl
      002738 60                    9115 	ld	h, b
                                   9116 ;	spillPairReg hl
                                   9117 ;	spillPairReg hl
      002739 CB 7C                 9118 	bit	7, h
      00273B 28 06                 9119 	jr	Z, 00186$
      00273D AF                    9120 	xor	a, a
      00273E 91                    9121 	sub	a, c
      00273F 4F                    9122 	ld	c, a
      002740 9F                    9123 	sbc	a, a
      002741 90                    9124 	sub	a, b
      002742 47                    9125 	ld	b, a
      002743                       9126 00186$:
      002743 F8 0F                 9127 	ldhl	sp,	#15
      002745 2A                    9128 	ld	a,	(hl+)
      002746 66                    9129 	ld	h, (hl)
      002747 6F                    9130 	ld	l, a
      002748 09                    9131 	add	hl, bc
      002749 4D                    9132 	ld	c, l
      00274A 44                    9133 	ld	b, h
      00274B 21rA4r0B              9134 	ld	hl, #_SPLASHDROPOFF
      00274E 5E                    9135 	ld	e, (hl)
      00274F 1C                    9136 	inc	e
      002750 18 04                 9137 	jr	00376$
      002752                       9138 00375$:
      002752 CB 21                 9139 	sla	c
      002754 CB 10                 9140 	rl	b
      002756                       9141 00376$:
      002756 1D                    9142 	dec	e
      002757 20 F9                 9143 	jr	NZ,00375$
                                   9144 ;src/main.c:903: int16_t dmg = pptr->damage - dmgDropOff;
      002759 F8 0B                 9145 	ldhl	sp,#11
      00275B 2A                    9146 	ld	a, (hl+)
      00275C 5F                    9147 	ld	e, a
      00275D 56                    9148 	ld	d, (hl)
      00275E 1A                    9149 	ld	a, (de)
      00275F 6F                    9150 	ld	l, a
                                   9151 ;	spillPairReg hl
                                   9152 ;	spillPairReg hl
      002760 13                    9153 	inc	de
      002761 1A                    9154 	ld	a, (de)
      002762 67                    9155 	ld	h, a
                                   9156 ;	spillPairReg hl
                                   9157 ;	spillPairReg hl
      002763 7D                    9158 	ld	a, l
      002764 91                    9159 	sub	a, c
      002765 5F                    9160 	ld	e, a
      002766 7C                    9161 	ld	a, h
      002767 98                    9162 	sbc	a, b
      002768 F8 0D                 9163 	ldhl	sp,	#13
      00276A 73                    9164 	ld	(hl), e
      00276B 23                    9165 	inc	hl
                                   9166 ;src/main.c:904: if (dmg > 0) {
      00276C 32                    9167 	ld	(hl-), a
      00276D 2A                    9168 	ld	a, (hl+)
      00276E 4F                    9169 	ld	c, a
      00276F 46                    9170 	ld	b, (hl)
      002770 58                    9171 	ld	e, b
      002771 AF                    9172 	xor	a, a
      002772 57                    9173 	ld	d, a
      002773 B9                    9174 	cp	a, c
      002774 98                    9175 	sbc	a, b
      002775 CB 7B                 9176 	bit	7, e
      002777 28 07                 9177 	jr	Z, 00377$
      002779 CB 7A                 9178 	bit	7, d
      00277B 20 08                 9179 	jr	NZ, 00378$
      00277D BF                    9180 	cp	a, a
      00277E 18 05                 9181 	jr	00378$
      002780                       9182 00377$:
      002780 CB 7A                 9183 	bit	7, d
      002782 28 01                 9184 	jr	Z, 00378$
      002784 37                    9185 	scf
      002785                       9186 00378$:
      002785 30 5C                 9187 	jr	NC, 00189$
                                   9188 ;src/main.c:905: enemies[k].hp -= dmg;
      002787 F8 11                 9189 	ldhl	sp,#17
      002789 2A                    9190 	ld	a, (hl+)
      00278A 5F                    9191 	ld	e, a
      00278B 56                    9192 	ld	d, (hl)
      00278C 21 10 00              9193 	ld	hl, #0x0010
      00278F 19                    9194 	add	hl, de
      002790 E5                    9195 	push	hl
      002791 7D                    9196 	ld	a, l
      002792 F8 11                 9197 	ldhl	sp,	#17
      002794 77                    9198 	ld	(hl), a
      002795 E1                    9199 	pop	hl
      002796 7C                    9200 	ld	a, h
      002797 F8 10                 9201 	ldhl	sp,	#16
      002799 32                    9202 	ld	(hl-), a
      00279A 2A                    9203 	ld	a, (hl+)
      00279B 5F                    9204 	ld	e, a
      00279C 2A                    9205 	ld	a, (hl+)
      00279D 57                    9206 	ld	d, a
      00279E 1A                    9207 	ld	a, (de)
      00279F 22                    9208 	ld	(hl+), a
      0027A0 13                    9209 	inc	de
      0027A1 1A                    9210 	ld	a, (de)
      0027A2 32                    9211 	ld	(hl-), a
      0027A3 2A                    9212 	ld	a, (hl+)
      0027A4 5F                    9213 	ld	e, a
      0027A5 56                    9214 	ld	d, (hl)
      0027A6 F8 0D                 9215 	ldhl	sp,	#13
      0027A8 2A                    9216 	ld	a,	(hl+)
      0027A9 66                    9217 	ld	h, (hl)
      0027AA 6F                    9218 	ld	l, a
      0027AB 7B                    9219 	ld	a, e
      0027AC 95                    9220 	sub	a, l
      0027AD 5F                    9221 	ld	e, a
      0027AE 7A                    9222 	ld	a, d
      0027AF 9C                    9223 	sbc	a, h
      0027B0 47                    9224 	ld	b, a
      0027B1 4B                    9225 	ld	c, e
      0027B2 F8 0F                 9226 	ldhl	sp,	#15
      0027B4 2A                    9227 	ld	a,	(hl+)
      0027B5 66                    9228 	ld	h, (hl)
      0027B6 6F                    9229 	ld	l, a
      0027B7 79                    9230 	ld	a, c
      0027B8 22                    9231 	ld	(hl+), a
      0027B9 70                    9232 	ld	(hl), b
                                   9233 ;src/main.c:906: if (enemies[k].hp <= 0) {
      0027BA 58                    9234 	ld	e, b
      0027BB AF                    9235 	xor	a, a
      0027BC 57                    9236 	ld	d, a
      0027BD B9                    9237 	cp	a, c
      0027BE 98                    9238 	sbc	a, b
      0027BF CB 7B                 9239 	bit	7, e
      0027C1 28 07                 9240 	jr	Z, 00379$
      0027C3 CB 7A                 9241 	bit	7, d
      0027C5 20 08                 9242 	jr	NZ, 00380$
      0027C7 BF                    9243 	cp	a, a
      0027C8 18 05                 9244 	jr	00380$
      0027CA                       9245 00379$:
      0027CA CB 7A                 9246 	bit	7, d
      0027CC 28 01                 9247 	jr	Z, 00380$
      0027CE 37                    9248 	scf
      0027CF                       9249 00380$:
      0027CF 38 12                 9250 	jr	C, 00189$
                                   9251 ;src/main.c:907: killEnemy(k);
      0027D1 F8 16                 9252 	ldhl	sp,	#22
      0027D3 7E                    9253 	ld	a, (hl)
      0027D4 F5                    9254 	push	af
      0027D5 33                    9255 	inc	sp
      0027D6 CDrC3r21              9256 	call	_killEnemy
      0027D9 33                    9257 	inc	sp
                                   9258 ;src/main.c:908: initEnemy(k);
      0027DA F8 16                 9259 	ldhl	sp,	#22
      0027DC 7E                    9260 	ld	a, (hl)
      0027DD F5                    9261 	push	af
      0027DE 33                    9262 	inc	sp
      0027DF CDr69r11              9263 	call	_initEnemy
      0027E2 33                    9264 	inc	sp
      0027E3                       9265 00189$:
                                   9266 ;src/main.c:901: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      0027E3 F8 16                 9267 	ldhl	sp,	#22
      0027E5 34                    9268 	inc	(hl)
      0027E6 C3rC4r26              9269 	jp	00188$
      0027E9                       9270 00119$:
                                   9271 ;src/main.c:916: eptr->hp -= pptr->damage;
      0027E9 D1                    9272 	pop	de
      0027EA D5                    9273 	push	de
      0027EB 21 10 00              9274 	ld	hl, #0x0010
      0027EE 19                    9275 	add	hl, de
      0027EF E5                    9276 	push	hl
      0027F0 7D                    9277 	ld	a, l
      0027F1 F8 11                 9278 	ldhl	sp,	#17
      0027F3 77                    9279 	ld	(hl), a
      0027F4 E1                    9280 	pop	hl
      0027F5 7C                    9281 	ld	a, h
      0027F6 F8 10                 9282 	ldhl	sp,	#16
      0027F8 32                    9283 	ld	(hl-), a
      0027F9 2A                    9284 	ld	a, (hl+)
      0027FA 5F                    9285 	ld	e, a
      0027FB 2A                    9286 	ld	a, (hl+)
      0027FC 57                    9287 	ld	d, a
      0027FD 1A                    9288 	ld	a, (de)
      0027FE 22                    9289 	ld	(hl+), a
      0027FF 13                    9290 	inc	de
      002800 1A                    9291 	ld	a, (de)
      002801 77                    9292 	ld	(hl), a
      002802 69                    9293 	ld	l, c
      002803 60                    9294 	ld	h, b
      002804 2A                    9295 	ld	a, (hl+)
      002805 4F                    9296 	ld	c, a
      002806 46                    9297 	ld	b, (hl)
      002807 F8 11                 9298 	ldhl	sp,#17
      002809 2A                    9299 	ld	a, (hl+)
      00280A 5F                    9300 	ld	e, a
      00280B 56                    9301 	ld	d, (hl)
      00280C 7B                    9302 	ld	a, e
      00280D 91                    9303 	sub	a, c
      00280E 5F                    9304 	ld	e, a
      00280F 7A                    9305 	ld	a, d
      002810 98                    9306 	sbc	a, b
      002811 47                    9307 	ld	b, a
      002812 4B                    9308 	ld	c, e
      002813 F8 0F                 9309 	ldhl	sp,	#15
      002815 2A                    9310 	ld	a,	(hl+)
      002816 66                    9311 	ld	h, (hl)
      002817 6F                    9312 	ld	l, a
      002818 79                    9313 	ld	a, c
      002819 22                    9314 	ld	(hl+), a
      00281A 70                    9315 	ld	(hl), b
                                   9316 ;src/main.c:918: if (eptr->hp <= 0) {
      00281B 58                    9317 	ld	e, b
      00281C AF                    9318 	xor	a, a
      00281D 57                    9319 	ld	d, a
      00281E B9                    9320 	cp	a, c
      00281F 98                    9321 	sbc	a, b
      002820 CB 7B                 9322 	bit	7, e
      002822 28 07                 9323 	jr	Z, 00381$
      002824 CB 7A                 9324 	bit	7, d
      002826 20 08                 9325 	jr	NZ, 00382$
      002828 BF                    9326 	cp	a, a
      002829 18 05                 9327 	jr	00382$
      00282B                       9328 00381$:
      00282B CB 7A                 9329 	bit	7, d
      00282D 28 01                 9330 	jr	Z, 00382$
      00282F 37                    9331 	scf
      002830                       9332 00382$:
      002830 38 12                 9333 	jr	C, 00132$
                                   9334 ;src/main.c:920: killEnemy(i);
      002832 F8 02                 9335 	ldhl	sp,	#2
      002834 7E                    9336 	ld	a, (hl)
      002835 F5                    9337 	push	af
      002836 33                    9338 	inc	sp
      002837 CDrC3r21              9339 	call	_killEnemy
      00283A 33                    9340 	inc	sp
                                   9341 ;src/main.c:921: initEnemy(i);
      00283B F8 02                 9342 	ldhl	sp,	#2
      00283D 7E                    9343 	ld	a, (hl)
      00283E F5                    9344 	push	af
      00283F 33                    9345 	inc	sp
      002840 CDr69r11              9346 	call	_initEnemy
      002843 33                    9347 	inc	sp
      002844                       9348 00132$:
                                   9349 ;src/main.c:933: j++;
      002844 F8 15                 9350 	ldhl	sp,	#21
      002846 34                    9351 	inc	(hl)
                                   9352 ;src/main.c:934: pptr++;
      002847 2B                    9353 	dec	hl
      002848 2B                    9354 	dec	hl
      002849 2A                    9355 	ld	a, (hl+)
      00284A 5F                    9356 	ld	e, a
      00284B 56                    9357 	ld	d, (hl)
      00284C 21 0D 00              9358 	ld	hl, #0x000d
      00284F 19                    9359 	add	hl, de
      002850 E5                    9360 	push	hl
      002851 7D                    9361 	ld	a, l
      002852 F8 15                 9362 	ldhl	sp,	#21
      002854 77                    9363 	ld	(hl), a
      002855 E1                    9364 	pop	hl
      002856 7C                    9365 	ld	a, h
      002857 F8 14                 9366 	ldhl	sp,	#20
      002859 77                    9367 	ld	(hl), a
      00285A C3r73r25              9368 	jp	00133$
      00285D                       9369 00139$:
                                   9370 ;src/main.c:940: if (enemyCollisionCount == 0) {
      00285D FArA5r00              9371 	ld	a, (#_enemyCollisionCount)
      002860 B7                    9372 	or	a, a
      002861 20 09                 9373 	jr	NZ, 00142$
                                   9374 ;src/main.c:941: enemyCollisionCount = ENEMYCOUNT - 1;
      002863 FAr8Er0B              9375 	ld	a, (#_ENEMYCOUNT)
      002866 3D                    9376 	dec	a
      002867 EArA5r00              9377 	ld	(#_enemyCollisionCount),a
      00286A 18 04                 9378 	jr	00190$
      00286C                       9379 00142$:
                                   9380 ;src/main.c:944: enemyCollisionCount--;
      00286C 21rA5r00              9381 	ld	hl, #_enemyCollisionCount
      00286F 35                    9382 	dec	(hl)
      002870                       9383 00190$:
                                   9384 ;src/main.c:949: }
      002870 E8 17                 9385 	add	sp, #23
      002872 C9                    9386 	ret
                                   9387 ;src/main.c:952: void setGunIcon() {
                                   9388 ;	---------------------------------
                                   9389 ; Function setGunIcon
                                   9390 ; ---------------------------------
      002873                       9391 _setGunIcon::
                                   9392 ;src/main.c:954: if (currentGun == 0) {
      002873 FArA7r00              9393 	ld	a, (#_currentGun)
      002876 B7                    9394 	or	a, a
      002877 20 1B                 9395 	jr	NZ, 00102$
                                   9396 ;src/main.c:955: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      002879 01rAEr00              9397 	ld	bc, #_gunMap+0
      00287C 79                    9398 	ld	a, c
      00287D 21rA6r00              9399 	ld	hl, #_gunLevel
      002880 86                    9400 	add	a, (hl)
      002881 4F                    9401 	ld	c, a
      002882 30 01                 9402 	jr	NC, 00111$
      002884 04                    9403 	inc	b
      002885                       9404 00111$:
      002885 C5                    9405 	push	bc
      002886 21 01 01              9406 	ld	hl, #0x101
      002889 E5                    9407 	push	hl
      00288A 21 0F 00              9408 	ld	hl, #0x0f
      00288D E5                    9409 	push	hl
      00288E CDr00r00              9410 	call	_set_win_tiles
      002891 E8 06                 9411 	add	sp, #6
      002893 C9                    9412 	ret
      002894                       9413 00102$:
                                   9414 ;src/main.c:958: set_win_tiles(15, 0,1,1,gunMap+2);
      002894 11rB0r00              9415 	ld	de, #(_gunMap + 2)
      002897 D5                    9416 	push	de
      002898 21 01 01              9417 	ld	hl, #0x101
      00289B E5                    9418 	push	hl
      00289C 21 0F 00              9419 	ld	hl, #0x0f
      00289F E5                    9420 	push	hl
      0028A0 CDr00r00              9421 	call	_set_win_tiles
      0028A3 E8 06                 9422 	add	sp, #6
                                   9423 ;src/main.c:960: }
      0028A5 C9                    9424 	ret
                                   9425 ;src/main.c:970: void fire() {
                                   9426 ;	---------------------------------
                                   9427 ; Function fire
                                   9428 ; ---------------------------------
      0028A6                       9429 _fire::
      0028A6 E8 FB                 9430 	add	sp, #-5
                                   9431 ;src/main.c:972: oldestProjectile += 1;
      0028A8 21r91r00              9432 	ld	hl, #_oldestProjectile
      0028AB 34                    9433 	inc	(hl)
      0028AC 7E                    9434 	ld	a, (hl)
                                   9435 ;src/main.c:973: if (oldestProjectile >= PROJECTILECOUNT) {
      0028AD 21r9Fr0B              9436 	ld	hl, #_PROJECTILECOUNT
      0028B0 4E                    9437 	ld	c, (hl)
      0028B1 21r91r00              9438 	ld	hl, #_oldestProjectile
      0028B4 7E                    9439 	ld	a, (hl)
      0028B5 91                    9440 	sub	a, c
      0028B6 38 02                 9441 	jr	C, 00102$
                                   9442 ;src/main.c:974: oldestProjectile = 0;
      0028B8 36 00                 9443 	ld	(hl), #0x00
      0028BA                       9444 00102$:
                                   9445 ;src/main.c:979: projectiles[oldestProjectile] = singleGun;
      0028BA 21r91r00              9446 	ld	hl, #_oldestProjectile
      0028BD 4E                    9447 	ld	c, (hl)
      0028BE 06 00                 9448 	ld	b, #0x00
      0028C0 69                    9449 	ld	l, c
      0028C1 60                    9450 	ld	h, b
      0028C2 29                    9451 	add	hl, hl
      0028C3 09                    9452 	add	hl, bc
      0028C4 29                    9453 	add	hl, hl
      0028C5 29                    9454 	add	hl, hl
      0028C6 09                    9455 	add	hl, bc
      0028C7 E5                    9456 	push	hl
      0028C8 7D                    9457 	ld	a, l
      0028C9 F8 05                 9458 	ldhl	sp,	#5
      0028CB 77                    9459 	ld	(hl), a
      0028CC E1                    9460 	pop	hl
      0028CD 7C                    9461 	ld	a, h
      0028CE F8 04                 9462 	ldhl	sp,	#4
      0028D0 77                    9463 	ld	(hl), a
                                   9464 ;src/main.c:977: if (currentGun == 0) {
      0028D1 FArA7r00              9465 	ld	a, (#_currentGun)
      0028D4 B7                    9466 	or	a, a
      0028D5 20 3C                 9467 	jr	NZ, 00113$
                                   9468 ;src/main.c:978: if (gunLevel == 0) {
      0028D7 FArA6r00              9469 	ld	a, (#_gunLevel)
      0028DA B7                    9470 	or	a, a
      0028DB 20 1B                 9471 	jr	NZ, 00104$
                                   9472 ;src/main.c:979: projectiles[oldestProjectile] = singleGun;
      0028DD 11r6Ar00              9473 	ld	de, #_singleGun+0
      0028E0 01rB4r00              9474 	ld	bc, #_projectiles+0
      0028E3 F8 03                 9475 	ldhl	sp,	#3
      0028E5 2A                    9476 	ld	a,	(hl+)
      0028E6 66                    9477 	ld	h, (hl)
      0028E7 6F                    9478 	ld	l, a
      0028E8 09                    9479 	add	hl, bc
      0028E9 4D                    9480 	ld	c, l
      0028EA 44                    9481 	ld	b, h
      0028EB 21 0D 00              9482 	ld	hl, #0x000d
      0028EE E5                    9483 	push	hl
      0028EF D5                    9484 	push	de
      0028F0 C5                    9485 	push	bc
      0028F1 CDr00r00              9486 	call	___memcpy
      0028F4 E8 06                 9487 	add	sp, #6
      0028F6 18 61                 9488 	jr	00114$
      0028F8                       9489 00104$:
                                   9490 ;src/main.c:982: projectiles[oldestProjectile] = doubleGun;
      0028F8 11r77r00              9491 	ld	de, #_doubleGun+0
      0028FB 01rB4r00              9492 	ld	bc, #_projectiles+0
      0028FE F8 03                 9493 	ldhl	sp,	#3
      002900 2A                    9494 	ld	a,	(hl+)
      002901 66                    9495 	ld	h, (hl)
      002902 6F                    9496 	ld	l, a
      002903 09                    9497 	add	hl, bc
      002904 4D                    9498 	ld	c, l
      002905 44                    9499 	ld	b, h
      002906 21 0D 00              9500 	ld	hl, #0x000d
      002909 E5                    9501 	push	hl
      00290A D5                    9502 	push	de
      00290B C5                    9503 	push	bc
      00290C CDr00r00              9504 	call	___memcpy
      00290F E8 06                 9505 	add	sp, #6
      002911 18 46                 9506 	jr	00114$
      002913                       9507 00113$:
                                   9508 ;src/main.c:985: else if (currentGun == 1) {
      002913 FArA7r00              9509 	ld	a, (#_currentGun)
      002916 3D                    9510 	dec	a
      002917 20 40                 9511 	jr	NZ, 00114$
                                   9512 ;src/main.c:986: if (missiles == 0) {
      002919 FArA8r00              9513 	ld	a, (#_missiles)
      00291C B7                    9514 	or	a, a
      00291D 20 0B                 9515 	jr	NZ, 00107$
                                   9516 ;src/main.c:987: currentGun = 0;
      00291F 21rA7r00              9517 	ld	hl, #_currentGun
      002922 36 00                 9518 	ld	(hl), #0x00
                                   9519 ;src/main.c:988: setGunIcon();
      002924 CDr73r28              9520 	call	_setGunIcon
                                   9521 ;src/main.c:989: return;
      002927 C3r51r2E              9522 	jp	00155$
      00292A                       9523 00107$:
                                   9524 ;src/main.c:992: projectiles[oldestProjectile] = missile;
      00292A 11r84r00              9525 	ld	de, #_missile+0
      00292D 01rB4r00              9526 	ld	bc, #_projectiles+0
      002930 F8 03                 9527 	ldhl	sp,	#3
      002932 2A                    9528 	ld	a,	(hl+)
      002933 66                    9529 	ld	h, (hl)
      002934 6F                    9530 	ld	l, a
      002935 09                    9531 	add	hl, bc
      002936 4D                    9532 	ld	c, l
      002937 44                    9533 	ld	b, h
      002938 21 0D 00              9534 	ld	hl, #0x000d
      00293B E5                    9535 	push	hl
      00293C D5                    9536 	push	de
      00293D C5                    9537 	push	bc
      00293E CDr00r00              9538 	call	___memcpy
      002941 E8 06                 9539 	add	sp, #6
                                   9540 ;src/main.c:993: updateMissileCount(-1);
      002943 3E FF                 9541 	ld	a, #0xff
      002945 F5                    9542 	push	af
      002946 33                    9543 	inc	sp
      002947 CDrE4r0C              9544 	call	_updateMissileCount
      00294A 33                    9545 	inc	sp
                                   9546 ;src/main.c:995: if (missiles == 0) {
      00294B FArA8r00              9547 	ld	a, (#_missiles)
      00294E B7                    9548 	or	a, a
      00294F 20 08                 9549 	jr	NZ, 00114$
                                   9550 ;src/main.c:996: currentGun = 0;
      002951 21rA7r00              9551 	ld	hl, #_currentGun
      002954 36 00                 9552 	ld	(hl), #0x00
                                   9553 ;src/main.c:997: setGunIcon();
      002956 CDr73r28              9554 	call	_setGunIcon
      002959                       9555 00114$:
                                   9556 ;src/main.c:1000: projectiles[oldestProjectile].x = playerDrawX;
      002959 21r91r00              9557 	ld	hl, #_oldestProjectile
      00295C 4E                    9558 	ld	c, (hl)
      00295D 06 00                 9559 	ld	b, #0x00
      00295F 69                    9560 	ld	l, c
      002960 60                    9561 	ld	h, b
      002961 29                    9562 	add	hl, hl
      002962 09                    9563 	add	hl, bc
      002963 29                    9564 	add	hl, hl
      002964 29                    9565 	add	hl, hl
      002965 09                    9566 	add	hl, bc
      002966 01rB4r00              9567 	ld	bc,#_projectiles
      002969 09                    9568 	add	hl,bc
      00296A E5                    9569 	push	hl
      00296B FAr9Br00              9570 	ld	a, (#_playerDrawX)
      00296E E1                    9571 	pop	hl
      00296F 0E 00                 9572 	ld	c, #0x00
      002971 22                    9573 	ld	(hl+), a
      002972 71                    9574 	ld	(hl), c
                                   9575 ;src/main.c:1001: projectiles[oldestProjectile].y = playerDrawY;
      002973 21r91r00              9576 	ld	hl, #_oldestProjectile
      002976 4E                    9577 	ld	c, (hl)
      002977 06 00                 9578 	ld	b, #0x00
      002979 69                    9579 	ld	l, c
      00297A 60                    9580 	ld	h, b
      00297B 29                    9581 	add	hl, hl
      00297C 09                    9582 	add	hl, bc
      00297D 29                    9583 	add	hl, hl
      00297E 29                    9584 	add	hl, hl
      00297F 09                    9585 	add	hl, bc
      002980 01rB4r00              9586 	ld	bc,#_projectiles
      002983 09                    9587 	add	hl,bc
      002984 23                    9588 	inc	hl
      002985 23                    9589 	inc	hl
      002986 E5                    9590 	push	hl
      002987 FAr9Cr00              9591 	ld	a, (#_playerDrawY)
      00298A E1                    9592 	pop	hl
      00298B 0E 00                 9593 	ld	c, #0x00
      00298D 22                    9594 	ld	(hl+), a
      00298E 71                    9595 	ld	(hl), c
                                   9596 ;src/main.c:1002: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      00298F 21r91r00              9597 	ld	hl, #_oldestProjectile
      002992 4E                    9598 	ld	c, (hl)
      002993 06 00                 9599 	ld	b, #0x00
      002995 69                    9600 	ld	l, c
      002996 60                    9601 	ld	h, b
      002997 29                    9602 	add	hl, hl
      002998 09                    9603 	add	hl, bc
      002999 29                    9604 	add	hl, hl
      00299A 29                    9605 	add	hl, hl
      00299B 09                    9606 	add	hl, bc
      00299C 01rB4r00              9607 	ld	bc,#_projectiles
      00299F 09                    9608 	add	hl,bc
      0029A0 5D                    9609 	ld	e, l
      0029A1 54                    9610 	ld	d, h
      0029A2 21 05 00              9611 	ld	hl, #0x0005
      0029A5 19                    9612 	add	hl, de
      0029A6 4D                    9613 	ld	c, l
      0029A7 44                    9614 	ld	b, h
      0029A8 21 07 00              9615 	ld	hl, #0x0007
      0029AB 19                    9616 	add	hl, de
      0029AC 7E                    9617 	ld	a, (hl)
      0029AD C5                    9618 	push	bc
      0029AE F5                    9619 	push	af
      0029AF 33                    9620 	inc	sp
      0029B0 FAr93r00              9621 	ld	a, (#_xDir)
      0029B3 F5                    9622 	push	af
      0029B4 33                    9623 	inc	sp
      0029B5 CDr00r00              9624 	call	__muluschar
      0029B8 E1                    9625 	pop	hl
      0029B9 7B                    9626 	ld	a, e
      0029BA C1                    9627 	pop	bc
      0029BB 02                    9628 	ld	(bc), a
                                   9629 ;src/main.c:1003: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      0029BC 21r91r00              9630 	ld	hl, #_oldestProjectile
      0029BF 4E                    9631 	ld	c, (hl)
      0029C0 06 00                 9632 	ld	b, #0x00
      0029C2 69                    9633 	ld	l, c
      0029C3 60                    9634 	ld	h, b
      0029C4 29                    9635 	add	hl, hl
      0029C5 09                    9636 	add	hl, bc
      0029C6 29                    9637 	add	hl, hl
      0029C7 29                    9638 	add	hl, hl
      0029C8 09                    9639 	add	hl, bc
      0029C9 01rB4r00              9640 	ld	bc,#_projectiles
      0029CC 09                    9641 	add	hl,bc
      0029CD 5D                    9642 	ld	e, l
      0029CE 54                    9643 	ld	d, h
      0029CF 21 06 00              9644 	ld	hl, #0x0006
      0029D2 19                    9645 	add	hl, de
      0029D3 4D                    9646 	ld	c, l
      0029D4 44                    9647 	ld	b, h
      0029D5 21 07 00              9648 	ld	hl, #0x0007
      0029D8 19                    9649 	add	hl, de
      0029D9 7E                    9650 	ld	a, (hl)
      0029DA C5                    9651 	push	bc
      0029DB F5                    9652 	push	af
      0029DC 33                    9653 	inc	sp
      0029DD FAr94r00              9654 	ld	a, (#_yDir)
      0029E0 F5                    9655 	push	af
      0029E1 33                    9656 	inc	sp
      0029E2 CDr00r00              9657 	call	__muluschar
      0029E5 E1                    9658 	pop	hl
      0029E6 7B                    9659 	ld	a, e
      0029E7 C1                    9660 	pop	bc
      0029E8 02                    9661 	ld	(bc), a
                                   9662 ;src/main.c:972: oldestProjectile += 1;
      0029E9 FAr91r00              9663 	ld	a, (#_oldestProjectile)
      0029EC F8 04                 9664 	ldhl	sp,	#4
      0029EE 77                    9665 	ld	(hl), a
                                   9666 ;src/main.c:979: projectiles[oldestProjectile] = singleGun;
      0029EF 21r91r00              9667 	ld	hl, #_oldestProjectile
      0029F2 4E                    9668 	ld	c, (hl)
      0029F3 06 00                 9669 	ld	b, #0x00
      0029F5 69                    9670 	ld	l, c
      0029F6 60                    9671 	ld	h, b
      0029F7 29                    9672 	add	hl, hl
      0029F8 09                    9673 	add	hl, bc
      0029F9 29                    9674 	add	hl, hl
      0029FA 29                    9675 	add	hl, hl
      0029FB 09                    9676 	add	hl, bc
                                   9677 ;src/main.c:1008: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0029FC 01rB4r00              9678 	ld	bc,#_projectiles
      0029FF 09                    9679 	add	hl,bc
      002A00 4D                    9680 	ld	c, l
      002A01 44                    9681 	ld	b, h
      002A02 F8 04                 9682 	ldhl	sp,	#4
      002A04 3A                    9683 	ld	a, (hl-)
      002A05 C6 1E                 9684 	add	a, #0x1e
      002A07 77                    9685 	ld	(hl), a
      002A08 21 0C 00              9686 	ld	hl, #0x000c
      002A0B 09                    9687 	add	hl, bc
      002A0C 7E                    9688 	ld	a, (hl)
      002A0D F8 04                 9689 	ldhl	sp,	#4
      002A0F 77                    9690 	ld	(hl), a
                                   9691 ;src/main.c:1007: if (yDir != 0 && xDir == 0) {
      002A10 FAr94r00              9692 	ld	a, (#_yDir)
      002A13 B7                    9693 	or	a, a
      002A14 28 71                 9694 	jr	Z, 00141$
      002A16 FAr93r00              9695 	ld	a, (#_xDir)
      002A19 B7                    9696 	or	a, a
      002A1A 20 6B                 9697 	jr	NZ, 00141$
                                   9698 ;src/main.c:1008: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002A1C F8 04                 9699 	ldhl	sp,	#4
      002A1E 3A                    9700 	ld	a, (hl-)
      002A1F 4F                    9701 	ld	c, a
                                   9702 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002A20 6E                    9703 	ld	l, (hl)
                                   9704 ;	spillPairReg hl
                                   9705 ;	spillPairReg hl
      002A21 26 00                 9706 	ld	h, #0x00
                                   9707 ;	spillPairReg hl
                                   9708 ;	spillPairReg hl
      002A23 29                    9709 	add	hl, hl
      002A24 29                    9710 	add	hl, hl
      002A25 11r00r00              9711 	ld	de, #_shadow_OAM
      002A28 19                    9712 	add	hl, de
      002A29 23                    9713 	inc	hl
      002A2A 23                    9714 	inc	hl
      002A2B 71                    9715 	ld	(hl), c
                                   9716 ;src/main.c:972: oldestProjectile += 1;
      002A2C FAr91r00              9717 	ld	a, (#_oldestProjectile)
                                   9718 ;src/main.c:1008: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002A2F C6 1E                 9719 	add	a, #0x1e
      002A31 4F                    9720 	ld	c, a
                                   9721 ;src/main.c:1009: if (yDir == 1) {
      002A32 FAr94r00              9722 	ld	a, (#_yDir)
                                   9723 ;src/main.c:1010: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   9724 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002A35 3D                    9725 	dec	a
      002A36 20 27                 9726 	jr	NZ, 00116$
      002A38 67                    9727 	ld	h,a
                                   9728 ;	spillPairReg hl
                                   9729 ;	spillPairReg hl
      002A39 69                    9730 	ld	l, c
      002A3A 29                    9731 	add	hl, hl
      002A3B 29                    9732 	add	hl, hl
      002A3C 11r00r00              9733 	ld	de, #_shadow_OAM
      002A3F 19                    9734 	add	hl, de
      002A40 23                    9735 	inc	hl
      002A41 23                    9736 	inc	hl
      002A42 23                    9737 	inc	hl
      002A43 36 40                 9738 	ld	(hl), #0x40
                                   9739 ;src/main.c:1011: projectiles[oldestProjectile].offset = 4;
      002A45 21r91r00              9740 	ld	hl, #_oldestProjectile
      002A48 4E                    9741 	ld	c, (hl)
      002A49 06 00                 9742 	ld	b, #0x00
      002A4B 69                    9743 	ld	l, c
      002A4C 60                    9744 	ld	h, b
      002A4D 29                    9745 	add	hl, hl
      002A4E 09                    9746 	add	hl, bc
      002A4F 29                    9747 	add	hl, hl
      002A50 29                    9748 	add	hl, hl
      002A51 09                    9749 	add	hl, bc
      002A52 01rB4r00              9750 	ld	bc,#_projectiles
      002A55 09                    9751 	add	hl,bc
      002A56 01 04 00              9752 	ld	bc, #0x0004
      002A59 09                    9753 	add	hl, bc
      002A5A 36 04                 9754 	ld	(hl), #0x04
      002A5C C3r38r2E              9755 	jp	00142$
      002A5F                       9756 00116$:
                                   9757 ;src/main.c:1014: set_sprite_prop(30+oldestProjectile, 0); 
                                   9758 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002A5F 26 00                 9759 	ld	h, #0x00
                                   9760 ;	spillPairReg hl
                                   9761 ;	spillPairReg hl
      002A61 69                    9762 	ld	l, c
      002A62 29                    9763 	add	hl, hl
      002A63 29                    9764 	add	hl, hl
      002A64 11r00r00              9765 	ld	de, #_shadow_OAM
      002A67 19                    9766 	add	hl, de
      002A68 23                    9767 	inc	hl
      002A69 23                    9768 	inc	hl
      002A6A 23                    9769 	inc	hl
      002A6B 36 00                 9770 	ld	(hl), #0x00
                                   9771 ;src/main.c:1015: projectiles[oldestProjectile].offset = 12;
      002A6D 21r91r00              9772 	ld	hl, #_oldestProjectile
      002A70 4E                    9773 	ld	c, (hl)
      002A71 06 00                 9774 	ld	b, #0x00
      002A73 69                    9775 	ld	l, c
      002A74 60                    9776 	ld	h, b
      002A75 29                    9777 	add	hl, hl
      002A76 09                    9778 	add	hl, bc
      002A77 29                    9779 	add	hl, hl
      002A78 29                    9780 	add	hl, hl
      002A79 09                    9781 	add	hl, bc
      002A7A 01rB4r00              9782 	ld	bc,#_projectiles
      002A7D 09                    9783 	add	hl,bc
      002A7E 01 04 00              9784 	ld	bc, #0x0004
      002A81 09                    9785 	add	hl, bc
      002A82 36 0C                 9786 	ld	(hl), #0x0c
      002A84 C3r38r2E              9787 	jp	00142$
      002A87                       9788 00141$:
                                   9789 ;src/main.c:1019: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   9790 ;src/main.c:1018: else if (xDir != 0 && yDir == 0) {
      002A87 FAr93r00              9791 	ld	a, (#_xDir)
      002A8A B7                    9792 	or	a, a
      002A8B CArD1r2B              9793 	jp	Z, 00137$
      002A8E FAr94r00              9794 	ld	a, (#_yDir)
      002A91 B7                    9795 	or	a, a
      002A92 C2rD1r2B              9796 	jp	NZ, 00137$
                                   9797 ;src/main.c:1019: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      002A95 F8 04                 9798 	ldhl	sp,	#4
      002A97 34                    9799 	inc	(hl)
      002A98 34                    9800 	inc	(hl)
      002A99 2B                    9801 	dec	hl
                                   9802 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002A9A 3A                    9803 	ld	a, (hl-)
      002A9B 22                    9804 	ld	(hl+), a
      002A9C 36 00                 9805 	ld	(hl), #0x00
      002A9E 3E 02                 9806 	ld	a, #0x02
      002AA0                       9807 00261$:
      002AA0 F8 02                 9808 	ldhl	sp,	#2
      002AA2 CB 26                 9809 	sla	(hl)
      002AA4 23                    9810 	inc	hl
      002AA5 CB 16                 9811 	rl	(hl)
      002AA7 3D                    9812 	dec	a
      002AA8 20 F6                 9813 	jr	NZ, 00261$
      002AAA 2B                    9814 	dec	hl
      002AAB 2A                    9815 	ld	a, (hl+)
      002AAC 5F                    9816 	ld	e, a
      002AAD 56                    9817 	ld	d, (hl)
      002AAE 21r00r00              9818 	ld	hl, #_shadow_OAM
      002AB1 19                    9819 	add	hl, de
      002AB2 33                    9820 	inc	sp
      002AB3 33                    9821 	inc	sp
      002AB4 5D                    9822 	ld	e, l
      002AB5 54                    9823 	ld	d, h
      002AB6 D5                    9824 	push	de
      002AB7 21 02 00              9825 	ld	hl, #0x0002
      002ABA 19                    9826 	add	hl, de
      002ABB E5                    9827 	push	hl
      002ABC 7D                    9828 	ld	a, l
      002ABD F8 04                 9829 	ldhl	sp,	#4
      002ABF 77                    9830 	ld	(hl), a
      002AC0 E1                    9831 	pop	hl
      002AC1 7C                    9832 	ld	a, h
      002AC2 F8 03                 9833 	ldhl	sp,	#3
      002AC4 32                    9834 	ld	(hl-), a
      002AC5 2A                    9835 	ld	a, (hl+)
      002AC6 5F                    9836 	ld	e, a
      002AC7 2A                    9837 	ld	a, (hl+)
      002AC8 57                    9838 	ld	d, a
      002AC9 7E                    9839 	ld	a, (hl)
      002ACA 12                    9840 	ld	(de), a
                                   9841 ;src/main.c:972: oldestProjectile += 1;
      002ACB FAr91r00              9842 	ld	a, (#_oldestProjectile)
      002ACE F8 04                 9843 	ldhl	sp,	#4
      002AD0 77                    9844 	ld	(hl), a
                                   9845 ;src/main.c:1008: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002AD1 7E                    9846 	ld	a, (hl)
      002AD2 C6 1E                 9847 	add	a, #0x1e
      002AD4 77                    9848 	ld	(hl), a
                                   9849 ;src/main.c:1020: if (xDir == 1) {
      002AD5 FAr93r00              9850 	ld	a, (#_xDir)
      002AD8 3D                    9851 	dec	a
      002AD9 20 7B                 9852 	jr	NZ, 00119$
                                   9853 ;src/main.c:1021: set_sprite_prop(30+oldestProjectile, 0);
      002ADB F8 04                 9854 	ldhl	sp,	#4
                                   9855 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002ADD 3A                    9856 	ld	a, (hl-)
      002ADE 22                    9857 	ld	(hl+), a
      002ADF 36 00                 9858 	ld	(hl), #0x00
      002AE1 3E 02                 9859 	ld	a, #0x02
      002AE3                       9860 00264$:
      002AE3 F8 03                 9861 	ldhl	sp,	#3
      002AE5 CB 26                 9862 	sla	(hl)
      002AE7 23                    9863 	inc	hl
      002AE8 CB 16                 9864 	rl	(hl)
      002AEA 3D                    9865 	dec	a
      002AEB 20 F6                 9866 	jr	NZ, 00264$
      002AED 2B                    9867 	dec	hl
      002AEE 2A                    9868 	ld	a, (hl+)
      002AEF 5F                    9869 	ld	e, a
      002AF0 56                    9870 	ld	d, (hl)
      002AF1 21r00r00              9871 	ld	hl, #_shadow_OAM
      002AF4 19                    9872 	add	hl, de
      002AF5 E5                    9873 	push	hl
      002AF6 7D                    9874 	ld	a, l
      002AF7 F8 03                 9875 	ldhl	sp,	#3
      002AF9 77                    9876 	ld	(hl), a
      002AFA E1                    9877 	pop	hl
      002AFB 7C                    9878 	ld	a, h
      002AFC F8 02                 9879 	ldhl	sp,	#2
      002AFE 32                    9880 	ld	(hl-), a
      002AFF 2A                    9881 	ld	a, (hl+)
      002B00 5F                    9882 	ld	e, a
      002B01 56                    9883 	ld	d, (hl)
      002B02 21 03 00              9884 	ld	hl, #0x0003
      002B05 19                    9885 	add	hl, de
      002B06 E5                    9886 	push	hl
      002B07 7D                    9887 	ld	a, l
      002B08 F8 05                 9888 	ldhl	sp,	#5
      002B0A 77                    9889 	ld	(hl), a
      002B0B E1                    9890 	pop	hl
      002B0C 7C                    9891 	ld	a, h
      002B0D F8 04                 9892 	ldhl	sp,	#4
      002B0F 32                    9893 	ld	(hl-), a
      002B10 2A                    9894 	ld	a,	(hl+)
      002B11 66                    9895 	ld	h, (hl)
      002B12 6F                    9896 	ld	l, a
      002B13 36 00                 9897 	ld	(hl), #0x00
                                   9898 ;src/main.c:1022: projectiles[oldestProjectile].offset = 12;
      002B15 21r91r00              9899 	ld	hl, #_oldestProjectile
      002B18 4E                    9900 	ld	c, (hl)
      002B19 06 00                 9901 	ld	b, #0x00
      002B1B 69                    9902 	ld	l, c
      002B1C 60                    9903 	ld	h, b
      002B1D 29                    9904 	add	hl, hl
      002B1E 09                    9905 	add	hl, bc
      002B1F 29                    9906 	add	hl, hl
      002B20 29                    9907 	add	hl, hl
      002B21 09                    9908 	add	hl, bc
      002B22 E5                    9909 	push	hl
      002B23 7D                    9910 	ld	a, l
      002B24 F8 05                 9911 	ldhl	sp,	#5
      002B26 77                    9912 	ld	(hl), a
      002B27 E1                    9913 	pop	hl
      002B28 7C                    9914 	ld	a, h
      002B29 F8 04                 9915 	ldhl	sp,	#4
      002B2B 32                    9916 	ld	(hl-), a
      002B2C 2A                    9917 	ld	a, (hl+)
      002B2D 5F                    9918 	ld	e, a
      002B2E 56                    9919 	ld	d, (hl)
      002B2F 21rB4r00              9920 	ld	hl, #_projectiles
      002B32 19                    9921 	add	hl, de
      002B33 E5                    9922 	push	hl
      002B34 7D                    9923 	ld	a, l
      002B35 F8 03                 9924 	ldhl	sp,	#3
      002B37 77                    9925 	ld	(hl), a
      002B38 E1                    9926 	pop	hl
      002B39 7C                    9927 	ld	a, h
      002B3A F8 02                 9928 	ldhl	sp,	#2
      002B3C 32                    9929 	ld	(hl-), a
      002B3D 2A                    9930 	ld	a, (hl+)
      002B3E 5F                    9931 	ld	e, a
      002B3F 56                    9932 	ld	d, (hl)
      002B40 21 04 00              9933 	ld	hl, #0x0004
      002B43 19                    9934 	add	hl, de
      002B44 E5                    9935 	push	hl
      002B45 7D                    9936 	ld	a, l
      002B46 F8 05                 9937 	ldhl	sp,	#5
      002B48 77                    9938 	ld	(hl), a
      002B49 E1                    9939 	pop	hl
      002B4A 7C                    9940 	ld	a, h
      002B4B F8 04                 9941 	ldhl	sp,	#4
      002B4D 32                    9942 	ld	(hl-), a
      002B4E 2A                    9943 	ld	a,	(hl+)
      002B4F 66                    9944 	ld	h, (hl)
      002B50 6F                    9945 	ld	l, a
      002B51 36 0C                 9946 	ld	(hl), #0x0c
      002B53 C3r38r2E              9947 	jp	00142$
      002B56                       9948 00119$:
                                   9949 ;src/main.c:1025: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002B56 F8 04                 9950 	ldhl	sp,	#4
                                   9951 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002B58 3A                    9952 	ld	a, (hl-)
      002B59 22                    9953 	ld	(hl+), a
      002B5A 36 00                 9954 	ld	(hl), #0x00
      002B5C 3E 02                 9955 	ld	a, #0x02
      002B5E                       9956 00265$:
      002B5E F8 03                 9957 	ldhl	sp,	#3
      002B60 CB 26                 9958 	sla	(hl)
      002B62 23                    9959 	inc	hl
      002B63 CB 16                 9960 	rl	(hl)
      002B65 3D                    9961 	dec	a
      002B66 20 F6                 9962 	jr	NZ, 00265$
      002B68 2B                    9963 	dec	hl
      002B69 2A                    9964 	ld	a, (hl+)
      002B6A 5F                    9965 	ld	e, a
      002B6B 56                    9966 	ld	d, (hl)
      002B6C 21r00r00              9967 	ld	hl, #_shadow_OAM
      002B6F 19                    9968 	add	hl, de
      002B70 E5                    9969 	push	hl
      002B71 7D                    9970 	ld	a, l
      002B72 F8 03                 9971 	ldhl	sp,	#3
      002B74 77                    9972 	ld	(hl), a
      002B75 E1                    9973 	pop	hl
      002B76 7C                    9974 	ld	a, h
      002B77 F8 02                 9975 	ldhl	sp,	#2
      002B79 32                    9976 	ld	(hl-), a
      002B7A 2A                    9977 	ld	a, (hl+)
      002B7B 5F                    9978 	ld	e, a
      002B7C 56                    9979 	ld	d, (hl)
      002B7D 21 03 00              9980 	ld	hl, #0x0003
      002B80 19                    9981 	add	hl, de
      002B81 E5                    9982 	push	hl
      002B82 7D                    9983 	ld	a, l
      002B83 F8 05                 9984 	ldhl	sp,	#5
      002B85 77                    9985 	ld	(hl), a
      002B86 E1                    9986 	pop	hl
      002B87 7C                    9987 	ld	a, h
      002B88 F8 04                 9988 	ldhl	sp,	#4
      002B8A 32                    9989 	ld	(hl-), a
      002B8B 2A                    9990 	ld	a,	(hl+)
      002B8C 66                    9991 	ld	h, (hl)
      002B8D 6F                    9992 	ld	l, a
      002B8E 36 20                 9993 	ld	(hl), #0x20
                                   9994 ;src/main.c:1026: projectiles[oldestProjectile].offset = 12;
      002B90 21r91r00              9995 	ld	hl, #_oldestProjectile
      002B93 4E                    9996 	ld	c, (hl)
      002B94 06 00                 9997 	ld	b, #0x00
      002B96 69                    9998 	ld	l, c
      002B97 60                    9999 	ld	h, b
      002B98 29                   10000 	add	hl, hl
      002B99 09                   10001 	add	hl, bc
      002B9A 29                   10002 	add	hl, hl
      002B9B 29                   10003 	add	hl, hl
      002B9C 09                   10004 	add	hl, bc
      002B9D E5                   10005 	push	hl
      002B9E 7D                   10006 	ld	a, l
      002B9F F8 05                10007 	ldhl	sp,	#5
      002BA1 77                   10008 	ld	(hl), a
      002BA2 E1                   10009 	pop	hl
      002BA3 7C                   10010 	ld	a, h
      002BA4 F8 04                10011 	ldhl	sp,	#4
      002BA6 32                   10012 	ld	(hl-), a
      002BA7 2A                   10013 	ld	a, (hl+)
      002BA8 5F                   10014 	ld	e, a
      002BA9 56                   10015 	ld	d, (hl)
      002BAA 21rB4r00             10016 	ld	hl, #_projectiles
      002BAD 19                   10017 	add	hl, de
      002BAE E5                   10018 	push	hl
      002BAF 7D                   10019 	ld	a, l
      002BB0 F8 03                10020 	ldhl	sp,	#3
      002BB2 77                   10021 	ld	(hl), a
      002BB3 E1                   10022 	pop	hl
      002BB4 7C                   10023 	ld	a, h
      002BB5 F8 02                10024 	ldhl	sp,	#2
      002BB7 32                   10025 	ld	(hl-), a
      002BB8 2A                   10026 	ld	a, (hl+)
      002BB9 5F                   10027 	ld	e, a
      002BBA 56                   10028 	ld	d, (hl)
      002BBB 21 04 00             10029 	ld	hl, #0x0004
      002BBE 19                   10030 	add	hl, de
      002BBF E5                   10031 	push	hl
      002BC0 7D                   10032 	ld	a, l
      002BC1 F8 05                10033 	ldhl	sp,	#5
      002BC3 77                   10034 	ld	(hl), a
      002BC4 E1                   10035 	pop	hl
      002BC5 7C                   10036 	ld	a, h
      002BC6 F8 04                10037 	ldhl	sp,	#4
      002BC8 32                   10038 	ld	(hl-), a
      002BC9 2A                   10039 	ld	a,	(hl+)
      002BCA 66                   10040 	ld	h, (hl)
      002BCB 6F                   10041 	ld	l, a
      002BCC 36 0C                10042 	ld	(hl), #0x0c
      002BCE C3r38r2E             10043 	jp	00142$
      002BD1                      10044 00137$:
                                  10045 ;src/main.c:1030: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      002BD1 F8 04                10046 	ldhl	sp,	#4
      002BD3 7E                   10047 	ld	a, (hl)
      002BD4 C6 04                10048 	add	a, #0x04
      002BD6 F8 00                10049 	ldhl	sp,	#0
      002BD8 77                   10050 	ld	(hl), a
      002BD9 F8 03                10051 	ldhl	sp,	#3
                                  10052 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002BDB 7E                   10053 	ld	a, (hl)
      002BDC 22                   10054 	ld	(hl+), a
      002BDD 36 00                10055 	ld	(hl), #0x00
      002BDF 3E 02                10056 	ld	a, #0x02
      002BE1                      10057 00266$:
      002BE1 F8 03                10058 	ldhl	sp,	#3
      002BE3 CB 26                10059 	sla	(hl)
      002BE5 23                   10060 	inc	hl
      002BE6 CB 16                10061 	rl	(hl)
      002BE8 3D                   10062 	dec	a
      002BE9 20 F6                10063 	jr	NZ, 00266$
      002BEB 2B                   10064 	dec	hl
      002BEC 2A                   10065 	ld	a, (hl+)
      002BED 5F                   10066 	ld	e, a
      002BEE 56                   10067 	ld	d, (hl)
      002BEF 21r00r00             10068 	ld	hl, #_shadow_OAM
      002BF2 19                   10069 	add	hl, de
      002BF3 E5                   10070 	push	hl
      002BF4 7D                   10071 	ld	a, l
      002BF5 F8 03                10072 	ldhl	sp,	#3
      002BF7 77                   10073 	ld	(hl), a
      002BF8 E1                   10074 	pop	hl
      002BF9 7C                   10075 	ld	a, h
      002BFA F8 02                10076 	ldhl	sp,	#2
      002BFC 32                   10077 	ld	(hl-), a
      002BFD 2A                   10078 	ld	a, (hl+)
      002BFE 5F                   10079 	ld	e, a
      002BFF 56                   10080 	ld	d, (hl)
      002C00 21 02 00             10081 	ld	hl, #0x0002
      002C03 19                   10082 	add	hl, de
      002C04 E5                   10083 	push	hl
      002C05 7D                   10084 	ld	a, l
      002C06 F8 05                10085 	ldhl	sp,	#5
      002C08 77                   10086 	ld	(hl), a
      002C09 E1                   10087 	pop	hl
      002C0A 7C                   10088 	ld	a, h
      002C0B F8 04                10089 	ldhl	sp,	#4
      002C0D 32                   10090 	ld	(hl-), a
      002C0E 2A                   10091 	ld	a, (hl+)
      002C0F 5F                   10092 	ld	e, a
      002C10 56                   10093 	ld	d, (hl)
      002C11 F8 00                10094 	ldhl	sp,	#0
      002C13 7E                   10095 	ld	a, (hl)
      002C14 12                   10096 	ld	(de), a
                                  10097 ;src/main.c:1031: if (xDir == 1 && yDir == -1) {
      002C15 FAr93r00             10098 	ld	a, (#_xDir)
      002C18 3D                   10099 	dec	a
      002C19 3E 01                10100 	ld	a, #0x01
      002C1B 28 01                10101 	jr	Z, 00268$
      002C1D AF                   10102 	xor	a, a
      002C1E                      10103 00268$:
      002C1E F8 04                10104 	ldhl	sp,	#4
      002C20 77                   10105 	ld	(hl), a
                                  10106 ;src/main.c:972: oldestProjectile += 1;
      002C21 21r91r00             10107 	ld	hl, #_oldestProjectile
      002C24 4E                   10108 	ld	c, (hl)
                                  10109 ;src/main.c:1031: if (xDir == 1 && yDir == -1) {
      002C25 FAr94r00             10110 	ld	a, (#_yDir)
      002C28 3C                   10111 	inc	a
      002C29 3E 01                10112 	ld	a, #0x01
      002C2B 28 01                10113 	jr	Z, 00270$
      002C2D AF                   10114 	xor	a, a
      002C2E                      10115 00270$:
      002C2E F8 01                10116 	ldhl	sp,	#1
                                  10117 ;src/main.c:1008: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002C30 22                   10118 	ld	(hl+), a
      002C31 79                   10119 	ld	a, c
      002C32 C6 1E                10120 	add	a, #0x1e
                                  10121 ;src/main.c:1031: if (xDir == 1 && yDir == -1) {
      002C34 22                   10122 	ld	(hl+), a
      002C35 23                   10123 	inc	hl
      002C36 7E                   10124 	ld	a, (hl)
      002C37 B7                   10125 	or	a, a
      002C38 CArBBr2C             10126 	jp	Z, 00133$
      002C3B F8 01                10127 	ldhl	sp,	#1
      002C3D 7E                   10128 	ld	a, (hl)
      002C3E B7                   10129 	or	a, a
      002C3F 28 7A                10130 	jr	Z, 00133$
                                  10131 ;src/main.c:1032: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002C41 23                   10132 	inc	hl
                                  10133 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002C42 2A                   10134 	ld	a, (hl+)
      002C43 22                   10135 	ld	(hl+), a
      002C44 36 00                10136 	ld	(hl), #0x00
      002C46 3E 02                10137 	ld	a, #0x02
      002C48                      10138 00271$:
      002C48 F8 03                10139 	ldhl	sp,	#3
      002C4A CB 26                10140 	sla	(hl)
      002C4C 23                   10141 	inc	hl
      002C4D CB 16                10142 	rl	(hl)
      002C4F 3D                   10143 	dec	a
      002C50 20 F6                10144 	jr	NZ, 00271$
      002C52 2B                   10145 	dec	hl
      002C53 2A                   10146 	ld	a, (hl+)
      002C54 5F                   10147 	ld	e, a
      002C55 56                   10148 	ld	d, (hl)
      002C56 21r00r00             10149 	ld	hl, #_shadow_OAM
      002C59 19                   10150 	add	hl, de
      002C5A E5                   10151 	push	hl
      002C5B 7D                   10152 	ld	a, l
      002C5C F8 03                10153 	ldhl	sp,	#3
      002C5E 77                   10154 	ld	(hl), a
      002C5F E1                   10155 	pop	hl
      002C60 7C                   10156 	ld	a, h
      002C61 F8 02                10157 	ldhl	sp,	#2
      002C63 32                   10158 	ld	(hl-), a
      002C64 2A                   10159 	ld	a, (hl+)
      002C65 5F                   10160 	ld	e, a
      002C66 56                   10161 	ld	d, (hl)
      002C67 21 03 00             10162 	ld	hl, #0x0003
      002C6A 19                   10163 	add	hl, de
      002C6B E5                   10164 	push	hl
      002C6C 7D                   10165 	ld	a, l
      002C6D F8 05                10166 	ldhl	sp,	#5
      002C6F 77                   10167 	ld	(hl), a
      002C70 E1                   10168 	pop	hl
      002C71 7C                   10169 	ld	a, h
      002C72 F8 04                10170 	ldhl	sp,	#4
      002C74 32                   10171 	ld	(hl-), a
      002C75 2A                   10172 	ld	a,	(hl+)
      002C76 66                   10173 	ld	h, (hl)
      002C77 6F                   10174 	ld	l, a
      002C78 36 00                10175 	ld	(hl), #0x00
                                  10176 ;src/main.c:1033: projectiles[oldestProjectile].offset = 12;
      002C7A 21r91r00             10177 	ld	hl, #_oldestProjectile
      002C7D 4E                   10178 	ld	c, (hl)
      002C7E 06 00                10179 	ld	b, #0x00
      002C80 69                   10180 	ld	l, c
      002C81 60                   10181 	ld	h, b
      002C82 29                   10182 	add	hl, hl
      002C83 09                   10183 	add	hl, bc
      002C84 29                   10184 	add	hl, hl
      002C85 29                   10185 	add	hl, hl
      002C86 09                   10186 	add	hl, bc
      002C87 E5                   10187 	push	hl
      002C88 7D                   10188 	ld	a, l
      002C89 F8 05                10189 	ldhl	sp,	#5
      002C8B 77                   10190 	ld	(hl), a
      002C8C E1                   10191 	pop	hl
      002C8D 7C                   10192 	ld	a, h
      002C8E F8 04                10193 	ldhl	sp,	#4
      002C90 32                   10194 	ld	(hl-), a
      002C91 2A                   10195 	ld	a, (hl+)
      002C92 5F                   10196 	ld	e, a
      002C93 56                   10197 	ld	d, (hl)
      002C94 21rB4r00             10198 	ld	hl, #_projectiles
      002C97 19                   10199 	add	hl, de
      002C98 E5                   10200 	push	hl
      002C99 7D                   10201 	ld	a, l
      002C9A F8 03                10202 	ldhl	sp,	#3
      002C9C 77                   10203 	ld	(hl), a
      002C9D E1                   10204 	pop	hl
      002C9E 7C                   10205 	ld	a, h
      002C9F F8 02                10206 	ldhl	sp,	#2
      002CA1 32                   10207 	ld	(hl-), a
      002CA2 2A                   10208 	ld	a, (hl+)
      002CA3 5F                   10209 	ld	e, a
      002CA4 56                   10210 	ld	d, (hl)
      002CA5 21 04 00             10211 	ld	hl, #0x0004
      002CA8 19                   10212 	add	hl, de
      002CA9 E5                   10213 	push	hl
      002CAA 7D                   10214 	ld	a, l
      002CAB F8 05                10215 	ldhl	sp,	#5
      002CAD 77                   10216 	ld	(hl), a
      002CAE E1                   10217 	pop	hl
      002CAF 7C                   10218 	ld	a, h
      002CB0 F8 04                10219 	ldhl	sp,	#4
      002CB2 32                   10220 	ld	(hl-), a
      002CB3 2A                   10221 	ld	a,	(hl+)
      002CB4 66                   10222 	ld	h, (hl)
      002CB5 6F                   10223 	ld	l, a
      002CB6 36 0C                10224 	ld	(hl), #0x0c
      002CB8 C3r38r2E             10225 	jp	00142$
      002CBB                      10226 00133$:
                                  10227 ;src/main.c:1009: if (yDir == 1) {
      002CBB FAr94r00             10228 	ld	a, (#_yDir)
      002CBE 3D                   10229 	dec	a
      002CBF 3E 01                10230 	ld	a, #0x01
      002CC1 28 01                10231 	jr	Z, 00273$
      002CC3 AF                   10232 	xor	a, a
      002CC4                      10233 00273$:
      002CC4 F8 03                10234 	ldhl	sp,	#3
                                  10235 ;src/main.c:1035: else if (xDir == 1 && yDir == 1) {
      002CC6 22                   10236 	ld	(hl+), a
      002CC7 7E                   10237 	ld	a, (hl)
      002CC8 B7                   10238 	or	a, a
      002CC9 CAr4Br2D             10239 	jp	Z, 00129$
      002CCC 2B                   10240 	dec	hl
      002CCD 7E                   10241 	ld	a, (hl)
      002CCE B7                   10242 	or	a, a
      002CCF 28 7A                10243 	jr	Z, 00129$
                                  10244 ;src/main.c:1036: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      002CD1 2B                   10245 	dec	hl
                                  10246 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002CD2 2A                   10247 	ld	a, (hl+)
      002CD3 22                   10248 	ld	(hl+), a
      002CD4 36 00                10249 	ld	(hl), #0x00
      002CD6 3E 02                10250 	ld	a, #0x02
      002CD8                      10251 00274$:
      002CD8 F8 03                10252 	ldhl	sp,	#3
      002CDA CB 26                10253 	sla	(hl)
      002CDC 23                   10254 	inc	hl
      002CDD CB 16                10255 	rl	(hl)
      002CDF 3D                   10256 	dec	a
      002CE0 20 F6                10257 	jr	NZ, 00274$
      002CE2 2B                   10258 	dec	hl
      002CE3 2A                   10259 	ld	a, (hl+)
      002CE4 5F                   10260 	ld	e, a
      002CE5 56                   10261 	ld	d, (hl)
      002CE6 21r00r00             10262 	ld	hl, #_shadow_OAM
      002CE9 19                   10263 	add	hl, de
      002CEA E5                   10264 	push	hl
      002CEB 7D                   10265 	ld	a, l
      002CEC F8 03                10266 	ldhl	sp,	#3
      002CEE 77                   10267 	ld	(hl), a
      002CEF E1                   10268 	pop	hl
      002CF0 7C                   10269 	ld	a, h
      002CF1 F8 02                10270 	ldhl	sp,	#2
      002CF3 32                   10271 	ld	(hl-), a
      002CF4 2A                   10272 	ld	a, (hl+)
      002CF5 5F                   10273 	ld	e, a
      002CF6 56                   10274 	ld	d, (hl)
      002CF7 21 03 00             10275 	ld	hl, #0x0003
      002CFA 19                   10276 	add	hl, de
      002CFB E5                   10277 	push	hl
      002CFC 7D                   10278 	ld	a, l
      002CFD F8 05                10279 	ldhl	sp,	#5
      002CFF 77                   10280 	ld	(hl), a
      002D00 E1                   10281 	pop	hl
      002D01 7C                   10282 	ld	a, h
      002D02 F8 04                10283 	ldhl	sp,	#4
      002D04 32                   10284 	ld	(hl-), a
      002D05 2A                   10285 	ld	a,	(hl+)
      002D06 66                   10286 	ld	h, (hl)
      002D07 6F                   10287 	ld	l, a
      002D08 36 40                10288 	ld	(hl), #0x40
                                  10289 ;src/main.c:1037: projectiles[oldestProjectile].offset = 4;
      002D0A 21r91r00             10290 	ld	hl, #_oldestProjectile
      002D0D 4E                   10291 	ld	c, (hl)
      002D0E 06 00                10292 	ld	b, #0x00
      002D10 69                   10293 	ld	l, c
      002D11 60                   10294 	ld	h, b
      002D12 29                   10295 	add	hl, hl
      002D13 09                   10296 	add	hl, bc
      002D14 29                   10297 	add	hl, hl
      002D15 29                   10298 	add	hl, hl
      002D16 09                   10299 	add	hl, bc
      002D17 E5                   10300 	push	hl
      002D18 7D                   10301 	ld	a, l
      002D19 F8 05                10302 	ldhl	sp,	#5
      002D1B 77                   10303 	ld	(hl), a
      002D1C E1                   10304 	pop	hl
      002D1D 7C                   10305 	ld	a, h
      002D1E F8 04                10306 	ldhl	sp,	#4
      002D20 32                   10307 	ld	(hl-), a
      002D21 2A                   10308 	ld	a, (hl+)
      002D22 5F                   10309 	ld	e, a
      002D23 56                   10310 	ld	d, (hl)
      002D24 21rB4r00             10311 	ld	hl, #_projectiles
      002D27 19                   10312 	add	hl, de
      002D28 E5                   10313 	push	hl
      002D29 7D                   10314 	ld	a, l
      002D2A F8 03                10315 	ldhl	sp,	#3
      002D2C 77                   10316 	ld	(hl), a
      002D2D E1                   10317 	pop	hl
      002D2E 7C                   10318 	ld	a, h
      002D2F F8 02                10319 	ldhl	sp,	#2
      002D31 32                   10320 	ld	(hl-), a
      002D32 2A                   10321 	ld	a, (hl+)
      002D33 5F                   10322 	ld	e, a
      002D34 56                   10323 	ld	d, (hl)
      002D35 21 04 00             10324 	ld	hl, #0x0004
      002D38 19                   10325 	add	hl, de
      002D39 E5                   10326 	push	hl
      002D3A 7D                   10327 	ld	a, l
      002D3B F8 05                10328 	ldhl	sp,	#5
      002D3D 77                   10329 	ld	(hl), a
      002D3E E1                   10330 	pop	hl
      002D3F 7C                   10331 	ld	a, h
      002D40 F8 04                10332 	ldhl	sp,	#4
      002D42 32                   10333 	ld	(hl-), a
      002D43 2A                   10334 	ld	a,	(hl+)
      002D44 66                   10335 	ld	h, (hl)
      002D45 6F                   10336 	ld	l, a
      002D46 36 04                10337 	ld	(hl), #0x04
      002D48 C3r38r2E             10338 	jp	00142$
      002D4B                      10339 00129$:
                                  10340 ;src/main.c:1039: else if (xDir == -1 && yDir == 1) {
      002D4B FAr93r00             10341 	ld	a, (#_xDir)
      002D4E 3C                   10342 	inc	a
      002D4F 3E 01                10343 	ld	a, #0x01
      002D51 28 01                10344 	jr	Z, 00276$
      002D53 AF                   10345 	xor	a, a
      002D54                      10346 00276$:
      002D54 F8 04                10347 	ldhl	sp,	#4
      002D56 77                   10348 	ld	(hl), a
      002D57 7E                   10349 	ld	a, (hl)
      002D58 B7                   10350 	or	a, a
      002D59 CArDAr2D             10351 	jp	Z, 00125$
      002D5C 2B                   10352 	dec	hl
      002D5D 7E                   10353 	ld	a, (hl)
      002D5E B7                   10354 	or	a, a
      002D5F 28 79                10355 	jr	Z, 00125$
                                  10356 ;src/main.c:1040: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002D61 2B                   10357 	dec	hl
                                  10358 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002D62 2A                   10359 	ld	a, (hl+)
      002D63 22                   10360 	ld	(hl+), a
      002D64 36 00                10361 	ld	(hl), #0x00
      002D66 3E 02                10362 	ld	a, #0x02
      002D68                      10363 00277$:
      002D68 F8 03                10364 	ldhl	sp,	#3
      002D6A CB 26                10365 	sla	(hl)
      002D6C 23                   10366 	inc	hl
      002D6D CB 16                10367 	rl	(hl)
      002D6F 3D                   10368 	dec	a
      002D70 20 F6                10369 	jr	NZ, 00277$
      002D72 2B                   10370 	dec	hl
      002D73 2A                   10371 	ld	a, (hl+)
      002D74 5F                   10372 	ld	e, a
      002D75 56                   10373 	ld	d, (hl)
      002D76 21r00r00             10374 	ld	hl, #_shadow_OAM
      002D79 19                   10375 	add	hl, de
      002D7A E5                   10376 	push	hl
      002D7B 7D                   10377 	ld	a, l
      002D7C F8 03                10378 	ldhl	sp,	#3
      002D7E 77                   10379 	ld	(hl), a
      002D7F E1                   10380 	pop	hl
      002D80 7C                   10381 	ld	a, h
      002D81 F8 02                10382 	ldhl	sp,	#2
      002D83 32                   10383 	ld	(hl-), a
      002D84 2A                   10384 	ld	a, (hl+)
      002D85 5F                   10385 	ld	e, a
      002D86 56                   10386 	ld	d, (hl)
      002D87 21 03 00             10387 	ld	hl, #0x0003
      002D8A 19                   10388 	add	hl, de
      002D8B E5                   10389 	push	hl
      002D8C 7D                   10390 	ld	a, l
      002D8D F8 05                10391 	ldhl	sp,	#5
      002D8F 77                   10392 	ld	(hl), a
      002D90 E1                   10393 	pop	hl
      002D91 7C                   10394 	ld	a, h
      002D92 F8 04                10395 	ldhl	sp,	#4
      002D94 32                   10396 	ld	(hl-), a
      002D95 2A                   10397 	ld	a,	(hl+)
      002D96 66                   10398 	ld	h, (hl)
      002D97 6F                   10399 	ld	l, a
      002D98 36 60                10400 	ld	(hl), #0x60
                                  10401 ;src/main.c:1041: projectiles[oldestProjectile].offset = 4;
      002D9A 21r91r00             10402 	ld	hl, #_oldestProjectile
      002D9D 4E                   10403 	ld	c, (hl)
      002D9E 06 00                10404 	ld	b, #0x00
      002DA0 69                   10405 	ld	l, c
      002DA1 60                   10406 	ld	h, b
      002DA2 29                   10407 	add	hl, hl
      002DA3 09                   10408 	add	hl, bc
      002DA4 29                   10409 	add	hl, hl
      002DA5 29                   10410 	add	hl, hl
      002DA6 09                   10411 	add	hl, bc
      002DA7 E5                   10412 	push	hl
      002DA8 7D                   10413 	ld	a, l
      002DA9 F8 05                10414 	ldhl	sp,	#5
      002DAB 77                   10415 	ld	(hl), a
      002DAC E1                   10416 	pop	hl
      002DAD 7C                   10417 	ld	a, h
      002DAE F8 04                10418 	ldhl	sp,	#4
      002DB0 32                   10419 	ld	(hl-), a
      002DB1 2A                   10420 	ld	a, (hl+)
      002DB2 5F                   10421 	ld	e, a
      002DB3 56                   10422 	ld	d, (hl)
      002DB4 21rB4r00             10423 	ld	hl, #_projectiles
      002DB7 19                   10424 	add	hl, de
      002DB8 E5                   10425 	push	hl
      002DB9 7D                   10426 	ld	a, l
      002DBA F8 03                10427 	ldhl	sp,	#3
      002DBC 77                   10428 	ld	(hl), a
      002DBD E1                   10429 	pop	hl
      002DBE 7C                   10430 	ld	a, h
      002DBF F8 02                10431 	ldhl	sp,	#2
      002DC1 32                   10432 	ld	(hl-), a
      002DC2 2A                   10433 	ld	a, (hl+)
      002DC3 5F                   10434 	ld	e, a
      002DC4 56                   10435 	ld	d, (hl)
      002DC5 21 04 00             10436 	ld	hl, #0x0004
      002DC8 19                   10437 	add	hl, de
      002DC9 E5                   10438 	push	hl
      002DCA 7D                   10439 	ld	a, l
      002DCB F8 05                10440 	ldhl	sp,	#5
      002DCD 77                   10441 	ld	(hl), a
      002DCE E1                   10442 	pop	hl
      002DCF 7C                   10443 	ld	a, h
      002DD0 F8 04                10444 	ldhl	sp,	#4
      002DD2 32                   10445 	ld	(hl-), a
      002DD3 2A                   10446 	ld	a,	(hl+)
      002DD4 66                   10447 	ld	h, (hl)
      002DD5 6F                   10448 	ld	l, a
      002DD6 36 04                10449 	ld	(hl), #0x04
      002DD8 18 5E                10450 	jr	00142$
      002DDA                      10451 00125$:
                                  10452 ;src/main.c:1043: else if (xDir == -1 && yDir == -1) {
      002DDA F8 04                10453 	ldhl	sp,	#4
      002DDC 7E                   10454 	ld	a, (hl)
      002DDD B7                   10455 	or	a, a
      002DDE 28 58                10456 	jr	Z, 00142$
      002DE0 F8 01                10457 	ldhl	sp,	#1
      002DE2 7E                   10458 	ld	a, (hl)
      002DE3 B7                   10459 	or	a, a
      002DE4 28 52                10460 	jr	Z, 00142$
                                  10461 ;src/main.c:1044: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002DE6 23                   10462 	inc	hl
                                  10463 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002DE7 2A                   10464 	ld	a, (hl+)
      002DE8 22                   10465 	ld	(hl+), a
      002DE9 36 00                10466 	ld	(hl), #0x00
      002DEB 3E 02                10467 	ld	a, #0x02
      002DED                      10468 00278$:
      002DED F8 03                10469 	ldhl	sp,	#3
      002DEF CB 26                10470 	sla	(hl)
      002DF1 23                   10471 	inc	hl
      002DF2 CB 16                10472 	rl	(hl)
      002DF4 3D                   10473 	dec	a
      002DF5 20 F6                10474 	jr	NZ, 00278$
      002DF7 2B                   10475 	dec	hl
      002DF8 2A                   10476 	ld	a, (hl+)
      002DF9 5F                   10477 	ld	e, a
      002DFA 56                   10478 	ld	d, (hl)
      002DFB 21r00r00             10479 	ld	hl, #_shadow_OAM
      002DFE 19                   10480 	add	hl, de
      002DFF E5                   10481 	push	hl
      002E00 7D                   10482 	ld	a, l
      002E01 F8 03                10483 	ldhl	sp,	#3
      002E03 77                   10484 	ld	(hl), a
      002E04 E1                   10485 	pop	hl
      002E05 7C                   10486 	ld	a, h
      002E06 F8 02                10487 	ldhl	sp,	#2
      002E08 32                   10488 	ld	(hl-), a
      002E09 2A                   10489 	ld	a, (hl+)
      002E0A 5F                   10490 	ld	e, a
      002E0B 56                   10491 	ld	d, (hl)
      002E0C 21 03 00             10492 	ld	hl, #0x0003
      002E0F 19                   10493 	add	hl, de
      002E10 E5                   10494 	push	hl
      002E11 7D                   10495 	ld	a, l
      002E12 F8 05                10496 	ldhl	sp,	#5
      002E14 77                   10497 	ld	(hl), a
      002E15 E1                   10498 	pop	hl
      002E16 7C                   10499 	ld	a, h
      002E17 F8 04                10500 	ldhl	sp,	#4
      002E19 32                   10501 	ld	(hl-), a
      002E1A 2A                   10502 	ld	a,	(hl+)
      002E1B 66                   10503 	ld	h, (hl)
      002E1C 6F                   10504 	ld	l, a
      002E1D 36 20                10505 	ld	(hl), #0x20
                                  10506 ;src/main.c:1045: projectiles[oldestProjectile].offset = 12;
      002E1F 21r91r00             10507 	ld	hl, #_oldestProjectile
      002E22 4E                   10508 	ld	c, (hl)
      002E23 06 00                10509 	ld	b, #0x00
      002E25 69                   10510 	ld	l, c
      002E26 60                   10511 	ld	h, b
      002E27 29                   10512 	add	hl, hl
      002E28 09                   10513 	add	hl, bc
      002E29 29                   10514 	add	hl, hl
      002E2A 29                   10515 	add	hl, hl
      002E2B 09                   10516 	add	hl, bc
      002E2C 01rB4r00             10517 	ld	bc,#_projectiles
      002E2F 09                   10518 	add	hl,bc
      002E30 4D                   10519 	ld	c, l
      002E31 44                   10520 	ld	b, h
      002E32 21 04 00             10521 	ld	hl, #0x0004
      002E35 09                   10522 	add	hl, bc
      002E36 36 0C                10523 	ld	(hl), #0x0c
      002E38                      10524 00142$:
                                  10525 ;src/main.c:1049: fireCooldown = projectiles[oldestProjectile].delay;
      002E38 21r91r00             10526 	ld	hl, #_oldestProjectile
      002E3B 4E                   10527 	ld	c, (hl)
      002E3C 06 00                10528 	ld	b, #0x00
      002E3E 69                   10529 	ld	l, c
      002E3F 60                   10530 	ld	h, b
      002E40 29                   10531 	add	hl, hl
      002E41 09                   10532 	add	hl, bc
      002E42 29                   10533 	add	hl, hl
      002E43 29                   10534 	add	hl, hl
      002E44 09                   10535 	add	hl, bc
      002E45 01rB4r00             10536 	ld	bc,#_projectiles
      002E48 09                   10537 	add	hl,bc
      002E49 01 0B 00             10538 	ld	bc, #0x000b
      002E4C 09                   10539 	add	hl, bc
      002E4D 7E                   10540 	ld	a, (hl)
      002E4E EAr92r00             10541 	ld	(#_fireCooldown),a
      002E51                      10542 00155$:
                                  10543 ;src/main.c:1055: }
      002E51 E8 05                10544 	add	sp, #5
      002E53 C9                   10545 	ret
                                  10546 ;src/main.c:1058: void moveProjectiles() {
                                  10547 ;	---------------------------------
                                  10548 ; Function moveProjectiles
                                  10549 ; ---------------------------------
      002E54                      10550 _moveProjectiles::
      002E54 E8 F6                10551 	add	sp, #-10
                                  10552 ;src/main.c:1059: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002E56 F8 09                10553 	ldhl	sp,	#9
      002E58 36 00                10554 	ld	(hl), #0x00
      002E5A                      10555 00112$:
      002E5A 21r9Fr0B             10556 	ld	hl, #_PROJECTILECOUNT
      002E5D 4E                   10557 	ld	c, (hl)
      002E5E F8 09                10558 	ldhl	sp,	#9
      002E60 7E                   10559 	ld	a, (hl)
      002E61 91                   10560 	sub	a, c
      002E62 D2r34r30             10561 	jp	NC, 00114$
                                  10562 ;src/main.c:1060: if (projectiles[i].active) {
      002E65 4E                   10563 	ld	c, (hl)
      002E66 06 00                10564 	ld	b, #0x00
      002E68 69                   10565 	ld	l, c
      002E69 60                   10566 	ld	h, b
      002E6A 29                   10567 	add	hl, hl
      002E6B 09                   10568 	add	hl, bc
      002E6C 29                   10569 	add	hl, hl
      002E6D 29                   10570 	add	hl, hl
      002E6E 09                   10571 	add	hl, bc
      002E6F 01rB4r00             10572 	ld	bc,#_projectiles
      002E72 09                   10573 	add	hl,bc
      002E73 E5                   10574 	push	hl
      002E74 7D                   10575 	ld	a, l
      002E75 F8 07                10576 	ldhl	sp,	#7
      002E77 77                   10577 	ld	(hl), a
      002E78 E1                   10578 	pop	hl
      002E79 7C                   10579 	ld	a, h
      002E7A F8 06                10580 	ldhl	sp,	#6
      002E7C 32                   10581 	ld	(hl-), a
      002E7D 2A                   10582 	ld	a, (hl+)
      002E7E 5F                   10583 	ld	e, a
      002E7F 56                   10584 	ld	d, (hl)
      002E80 21 0A 00             10585 	ld	hl, #0x000a
      002E83 19                   10586 	add	hl, de
      002E84 4D                   10587 	ld	c, l
      002E85 44                   10588 	ld	b, h
      002E86 0A                   10589 	ld	a, (bc)
      002E87 F8 08                10590 	ldhl	sp,	#8
      002E89 77                   10591 	ld	(hl), a
      002E8A 7E                   10592 	ld	a, (hl)
      002E8B B7                   10593 	or	a, a
      002E8C CAr2Er30             10594 	jp	Z, 00113$
                                  10595 ;src/main.c:1061: projectiles[i].x -= xOverflow;
      002E8F 2B                   10596 	dec	hl
      002E90 2B                   10597 	dec	hl
      002E91 2B                   10598 	dec	hl
      002E92 2A                   10599 	ld	a, (hl+)
      002E93 5F                   10600 	ld	e, a
      002E94 56                   10601 	ld	d, (hl)
      002E95 1A                   10602 	ld	a, (de)
      002E96 47                   10603 	ld	b, a
      002E97 13                   10604 	inc	de
      002E98 1A                   10605 	ld	a, (de)
      002E99 4F                   10606 	ld	c, a
      002E9A 58                   10607 	ld	e, b
      002E9B 51                   10608 	ld	d, c
      002E9C 21rA1r00             10609 	ld	hl, #_xOverflow
      002E9F 2A                   10610 	ld	a,	(hl+)
      002EA0 66                   10611 	ld	h, (hl)
      002EA1 6F                   10612 	ld	l, a
      002EA2 7B                   10613 	ld	a, e
      002EA3 95                   10614 	sub	a, l
      002EA4 5F                   10615 	ld	e, a
      002EA5 7A                   10616 	ld	a, d
      002EA6 9C                   10617 	sbc	a, h
      002EA7 F8 01                10618 	ldhl	sp,	#1
      002EA9 32                   10619 	ld	(hl-), a
      002EAA 73                   10620 	ld	(hl), e
      002EAB F8 05                10621 	ldhl	sp,#5
      002EAD 2A                   10622 	ld	a, (hl+)
      002EAE 5F                   10623 	ld	e, a
      002EAF 56                   10624 	ld	d, (hl)
      002EB0 F8 00                10625 	ldhl	sp,	#0
      002EB2 2A                   10626 	ld	a, (hl+)
      002EB3 12                   10627 	ld	(de), a
      002EB4 13                   10628 	inc	de
      002EB5 7E                   10629 	ld	a, (hl)
      002EB6 12                   10630 	ld	(de), a
                                  10631 ;src/main.c:1062: projectiles[i].y -= yOverflow;
      002EB7 F8 05                10632 	ldhl	sp,#5
      002EB9 2A                   10633 	ld	a, (hl+)
      002EBA 5F                   10634 	ld	e, a
      002EBB 56                   10635 	ld	d, (hl)
      002EBC 21 02 00             10636 	ld	hl, #0x0002
      002EBF 19                   10637 	add	hl, de
      002EC0 E5                   10638 	push	hl
      002EC1 7D                   10639 	ld	a, l
      002EC2 F8 04                10640 	ldhl	sp,	#4
      002EC4 77                   10641 	ld	(hl), a
      002EC5 E1                   10642 	pop	hl
      002EC6 7C                   10643 	ld	a, h
      002EC7 F8 03                10644 	ldhl	sp,	#3
      002EC9 32                   10645 	ld	(hl-), a
      002ECA 2A                   10646 	ld	a, (hl+)
      002ECB 5F                   10647 	ld	e, a
      002ECC 56                   10648 	ld	d, (hl)
      002ECD 1A                   10649 	ld	a, (de)
      002ECE 4F                   10650 	ld	c, a
      002ECF 13                   10651 	inc	de
      002ED0 1A                   10652 	ld	a, (de)
      002ED1 47                   10653 	ld	b, a
      002ED2 79                   10654 	ld	a, c
      002ED3 21rA3r00             10655 	ld	hl, #_yOverflow
      002ED6 96                   10656 	sub	a, (hl)
      002ED7 23                   10657 	inc	hl
      002ED8 4F                   10658 	ld	c, a
      002ED9 78                   10659 	ld	a, b
      002EDA 9E                   10660 	sbc	a, (hl)
      002EDB 47                   10661 	ld	b, a
      002EDC F8 02                10662 	ldhl	sp,	#2
      002EDE 2A                   10663 	ld	a,	(hl+)
      002EDF 66                   10664 	ld	h, (hl)
      002EE0 6F                   10665 	ld	l, a
      002EE1 79                   10666 	ld	a, c
      002EE2 22                   10667 	ld	(hl+), a
      002EE3 70                   10668 	ld	(hl), b
                                  10669 ;src/main.c:1064: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002EE4 F8 05                10670 	ldhl	sp,#5
      002EE6 2A                   10671 	ld	a, (hl+)
      002EE7 5F                   10672 	ld	e, a
      002EE8 56                   10673 	ld	d, (hl)
      002EE9 21 06 00             10674 	ld	hl, #0x0006
      002EEC 19                   10675 	add	hl, de
      002EED 5D                   10676 	ld	e, l
      002EEE 54                   10677 	ld	d, h
      002EEF 1A                   10678 	ld	a, (de)
      002EF0 6F                   10679 	ld	l, a
                                  10680 ;	spillPairReg hl
                                  10681 ;	spillPairReg hl
      002EF1 07                   10682 	rlca
      002EF2 9F                   10683 	sbc	a, a
      002EF3 67                   10684 	ld	h, a
                                  10685 ;	spillPairReg hl
                                  10686 ;	spillPairReg hl
      002EF4 09                   10687 	add	hl, bc
      002EF5 4D                   10688 	ld	c, l
      002EF6 44                   10689 	ld	b, h
                                  10690 ;src/main.c:1065: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002EF7 F8 05                10691 	ldhl	sp,#5
      002EF9 2A                   10692 	ld	a, (hl+)
      002EFA 5F                   10693 	ld	e, a
      002EFB 56                   10694 	ld	d, (hl)
      002EFC 21 05 00             10695 	ld	hl, #0x0005
      002EFF 19                   10696 	add	hl, de
      002F00 5D                   10697 	ld	e, l
      002F01 54                   10698 	ld	d, h
      002F02 1A                   10699 	ld	a, (de)
      002F03 F8 07                10700 	ldhl	sp,	#7
      002F05 22                   10701 	ld	(hl+), a
      002F06 07                   10702 	rlca
      002F07 9F                   10703 	sbc	a, a
      002F08 77                   10704 	ld	(hl), a
      002F09 D1                   10705 	pop	de
      002F0A D5                   10706 	push	de
      002F0B 3A                   10707 	ld	a, (hl-)
      002F0C 6E                   10708 	ld	l, (hl)
      002F0D 67                   10709 	ld	h, a
      002F0E 19                   10710 	add	hl, de
      002F0F 5D                   10711 	ld	e, l
      002F10 7C                   10712 	ld	a, h
      002F11 F8 07                10713 	ldhl	sp,	#7
      002F13 73                   10714 	ld	(hl), e
      002F14 23                   10715 	inc	hl
      002F15 77                   10716 	ld	(hl), a
                                  10717 ;src/main.c:1068: projectiles[i].y = newY;
      002F16 F8 02                10718 	ldhl	sp,	#2
      002F18 2A                   10719 	ld	a,	(hl+)
      002F19 66                   10720 	ld	h, (hl)
      002F1A 6F                   10721 	ld	l, a
      002F1B 79                   10722 	ld	a, c
      002F1C 22                   10723 	ld	(hl+), a
      002F1D 70                   10724 	ld	(hl), b
                                  10725 ;src/main.c:1069: projectiles[i].x = newX;
      002F1E F8 05                10726 	ldhl	sp,#5
      002F20 2A                   10727 	ld	a, (hl+)
      002F21 5F                   10728 	ld	e, a
      002F22 2A                   10729 	ld	a, (hl+)
      002F23 57                   10730 	ld	d, a
      002F24 2A                   10731 	ld	a, (hl+)
      002F25 12                   10732 	ld	(de), a
      002F26 13                   10733 	inc	de
                                  10734 ;src/main.c:1073: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002F27 3A                   10735 	ld	a, (hl-)
      002F28 2B                   10736 	dec	hl
      002F29 2B                   10737 	dec	hl
      002F2A 12                   10738 	ld	(de), a
      002F2B 2A                   10739 	ld	a, (hl+)
      002F2C 5F                   10740 	ld	e, a
      002F2D 56                   10741 	ld	d, (hl)
      002F2E 21 04 00             10742 	ld	hl, #0x0004
      002F31 19                   10743 	add	hl, de
      002F32 5D                   10744 	ld	e, l
      002F33 54                   10745 	ld	d, h
      002F34 1A                   10746 	ld	a, (de)
      002F35 81                   10747 	add	a, c
      002F36 4F                   10748 	ld	c, a
      002F37 F8 07                10749 	ldhl	sp,	#7
      002F39 2A                   10750 	ld	a, (hl+)
      002F3A 23                   10751 	inc	hl
      002F3B C6 04                10752 	add	a, #0x04
      002F3D 5F                   10753 	ld	e, a
      002F3E 7E                   10754 	ld	a, (hl)
      002F3F C6 1E                10755 	add	a, #0x1e
      002F41 F8 04                10756 	ldhl	sp,	#4
      002F43 77                   10757 	ld	(hl), a
                                  10758 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002F44 6E                   10759 	ld	l, (hl)
                                  10760 ;	spillPairReg hl
                                  10761 ;	spillPairReg hl
      002F45 26 00                10762 	ld	h, #0x00
                                  10763 ;	spillPairReg hl
                                  10764 ;	spillPairReg hl
      002F47 29                   10765 	add	hl, hl
      002F48 29                   10766 	add	hl, hl
      002F49 D5                   10767 	push	de
      002F4A 11r00r00             10768 	ld	de, #_shadow_OAM
      002F4D 19                   10769 	add	hl, de
      002F4E D1                   10770 	pop	de
                                  10771 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002F4F 79                   10772 	ld	a, c
      002F50 22                   10773 	ld	(hl+), a
      002F51 73                   10774 	ld	(hl), e
                                  10775 ;src/main.c:1077: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002F52 F8 05                10776 	ldhl	sp,#5
      002F54 2A                   10777 	ld	a, (hl+)
      002F55 5F                   10778 	ld	e, a
      002F56 3A                   10779 	ld	a, (hl-)
      002F57 57                   10780 	ld	d, a
      002F58 1A                   10781 	ld	a, (de)
      002F59 22                   10782 	ld	(hl+), a
      002F5A 13                   10783 	inc	de
      002F5B 1A                   10784 	ld	a, (de)
      002F5C 22                   10785 	ld	(hl+), a
      002F5D 23                   10786 	inc	hl
      002F5E CB 7E                10787 	bit	7, (hl)
      002F60 20 51                10788 	jr	NZ, 00101$
      002F62 F8 05                10789 	ldhl	sp,	#5
      002F64 2A                   10790 	ld	a, (hl+)
      002F65 23                   10791 	inc	hl
      002F66 32                   10792 	ld	(hl-), a
      002F67 2A                   10793 	ld	a, (hl+)
      002F68 23                   10794 	inc	hl
      002F69 32                   10795 	ld	(hl-), a
      002F6A 3E AA                10796 	ld	a, #0xaa
      002F6C 96                   10797 	sub	a, (hl)
      002F6D 23                   10798 	inc	hl
      002F6E 3E 00                10799 	ld	a, #0x00
      002F70 9E                   10800 	sbc	a, (hl)
      002F71 3E 00                10801 	ld	a, #0x00
      002F73 57                   10802 	ld	d, a
      002F74 CB 7E                10803 	bit	7, (hl)
      002F76 28 07                10804 	jr	Z, 00147$
      002F78 CB 7A                10805 	bit	7, d
      002F7A 20 08                10806 	jr	NZ, 00148$
      002F7C BF                   10807 	cp	a, a
      002F7D 18 05                10808 	jr	00148$
      002F7F                      10809 00147$:
      002F7F CB 7A                10810 	bit	7, d
      002F81 28 01                10811 	jr	Z, 00148$
      002F83 37                   10812 	scf
      002F84                      10813 00148$:
      002F84 38 2D                10814 	jr	C, 00101$
      002F86 F8 02                10815 	ldhl	sp,#2
      002F88 2A                   10816 	ld	a, (hl+)
      002F89 5F                   10817 	ld	e, a
      002F8A 56                   10818 	ld	d, (hl)
      002F8B 1A                   10819 	ld	a, (de)
      002F8C F8 07                10820 	ldhl	sp,	#7
      002F8E 22                   10821 	ld	(hl+), a
      002F8F 13                   10822 	inc	de
      002F90 1A                   10823 	ld	a, (de)
      002F91 77                   10824 	ld	(hl), a
      002F92 CB 7E                10825 	bit	7, (hl)
      002F94 20 1D                10826 	jr	NZ, 00101$
      002F96 2B                   10827 	dec	hl
      002F97 3E 9A                10828 	ld	a, #0x9a
      002F99 96                   10829 	sub	a, (hl)
      002F9A 23                   10830 	inc	hl
      002F9B 3E 00                10831 	ld	a, #0x00
      002F9D 9E                   10832 	sbc	a, (hl)
      002F9E 3E 00                10833 	ld	a, #0x00
      002FA0 57                   10834 	ld	d, a
      002FA1 CB 7E                10835 	bit	7, (hl)
      002FA3 28 07                10836 	jr	Z, 00149$
      002FA5 CB 7A                10837 	bit	7, d
      002FA7 20 08                10838 	jr	NZ, 00150$
      002FA9 BF                   10839 	cp	a, a
      002FAA 18 05                10840 	jr	00150$
      002FAC                      10841 00149$:
      002FAC CB 7A                10842 	bit	7, d
      002FAE 28 01                10843 	jr	Z, 00150$
      002FB0 37                   10844 	scf
      002FB1                      10845 00150$:
      002FB1 30 7B                10846 	jr	NC, 00113$
      002FB3                      10847 00101$:
                                  10848 ;src/main.c:1078: projectiles[i].active = 0;
      002FB3 F8 09                10849 	ldhl	sp,	#9
      002FB5 4E                   10850 	ld	c, (hl)
      002FB6 06 00                10851 	ld	b, #0x00
      002FB8 69                   10852 	ld	l, c
      002FB9 60                   10853 	ld	h, b
      002FBA 29                   10854 	add	hl, hl
      002FBB 09                   10855 	add	hl, bc
      002FBC 29                   10856 	add	hl, hl
      002FBD 29                   10857 	add	hl, hl
      002FBE 09                   10858 	add	hl, bc
      002FBF E5                   10859 	push	hl
      002FC0 7D                   10860 	ld	a, l
      002FC1 F8 09                10861 	ldhl	sp,	#9
      002FC3 77                   10862 	ld	(hl), a
      002FC4 E1                   10863 	pop	hl
      002FC5 7C                   10864 	ld	a, h
      002FC6 F8 08                10865 	ldhl	sp,	#8
      002FC8 32                   10866 	ld	(hl-), a
      002FC9 2A                   10867 	ld	a, (hl+)
      002FCA 5F                   10868 	ld	e, a
      002FCB 56                   10869 	ld	d, (hl)
      002FCC 21rB4r00             10870 	ld	hl, #_projectiles
      002FCF 19                   10871 	add	hl, de
      002FD0 E5                   10872 	push	hl
      002FD1 7D                   10873 	ld	a, l
      002FD2 F8 07                10874 	ldhl	sp,	#7
      002FD4 77                   10875 	ld	(hl), a
      002FD5 E1                   10876 	pop	hl
      002FD6 7C                   10877 	ld	a, h
      002FD7 F8 06                10878 	ldhl	sp,	#6
      002FD9 32                   10879 	ld	(hl-), a
      002FDA 2A                   10880 	ld	a, (hl+)
      002FDB 5F                   10881 	ld	e, a
      002FDC 56                   10882 	ld	d, (hl)
      002FDD 21 0A 00             10883 	ld	hl, #0x000a
      002FE0 19                   10884 	add	hl, de
      002FE1 E5                   10885 	push	hl
      002FE2 7D                   10886 	ld	a, l
      002FE3 F8 09                10887 	ldhl	sp,	#9
      002FE5 77                   10888 	ld	(hl), a
      002FE6 E1                   10889 	pop	hl
      002FE7 7C                   10890 	ld	a, h
      002FE8 F8 08                10891 	ldhl	sp,	#8
      002FEA 32                   10892 	ld	(hl-), a
      002FEB 2A                   10893 	ld	a,	(hl+)
      002FEC 66                   10894 	ld	h, (hl)
      002FED 6F                   10895 	ld	l, a
      002FEE 36 00                10896 	ld	(hl), #0x00
                                  10897 ;src/main.c:1079: set_sprite_tile(30+i, 0x7f);
      002FF0 F8 04                10898 	ldhl	sp,	#4
      002FF2 7E                   10899 	ld	a, (hl)
      002FF3 F8 08                10900 	ldhl	sp,	#8
      002FF5 77                   10901 	ld	(hl), a
                                  10902 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002FF6 3A                   10903 	ld	a, (hl-)
      002FF7 22                   10904 	ld	(hl+), a
      002FF8 36 00                10905 	ld	(hl), #0x00
      002FFA 3E 02                10906 	ld	a, #0x02
      002FFC                      10907 00151$:
      002FFC F8 07                10908 	ldhl	sp,	#7
      002FFE CB 26                10909 	sla	(hl)
      003000 23                   10910 	inc	hl
      003001 CB 16                10911 	rl	(hl)
      003003 3D                   10912 	dec	a
      003004 20 F6                10913 	jr	NZ, 00151$
      003006 2B                   10914 	dec	hl
      003007 2A                   10915 	ld	a, (hl+)
      003008 5F                   10916 	ld	e, a
      003009 56                   10917 	ld	d, (hl)
      00300A 21r00r00             10918 	ld	hl, #_shadow_OAM
      00300D 19                   10919 	add	hl, de
      00300E E5                   10920 	push	hl
      00300F 7D                   10921 	ld	a, l
      003010 F8 07                10922 	ldhl	sp,	#7
      003012 77                   10923 	ld	(hl), a
      003013 E1                   10924 	pop	hl
      003014 7C                   10925 	ld	a, h
      003015 F8 06                10926 	ldhl	sp,	#6
      003017 32                   10927 	ld	(hl-), a
      003018 2A                   10928 	ld	a, (hl+)
      003019 5F                   10929 	ld	e, a
      00301A 56                   10930 	ld	d, (hl)
      00301B 21 02 00             10931 	ld	hl, #0x0002
      00301E 19                   10932 	add	hl, de
      00301F E5                   10933 	push	hl
      003020 7D                   10934 	ld	a, l
      003021 F8 09                10935 	ldhl	sp,	#9
      003023 77                   10936 	ld	(hl), a
      003024 E1                   10937 	pop	hl
      003025 7C                   10938 	ld	a, h
      003026 F8 08                10939 	ldhl	sp,	#8
      003028 32                   10940 	ld	(hl-), a
      003029 2A                   10941 	ld	a,	(hl+)
      00302A 66                   10942 	ld	h, (hl)
      00302B 6F                   10943 	ld	l, a
      00302C 36 7F                10944 	ld	(hl), #0x7f
                                  10945 ;src/main.c:1079: set_sprite_tile(30+i, 0x7f);
      00302E                      10946 00113$:
                                  10947 ;src/main.c:1059: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00302E F8 09                10948 	ldhl	sp,	#9
      003030 34                   10949 	inc	(hl)
      003031 C3r5Ar2E             10950 	jp	00112$
      003034                      10951 00114$:
                                  10952 ;src/main.c:1084: }
      003034 E8 0A                10953 	add	sp, #10
      003036 C9                   10954 	ret
                                  10955 ;src/main.c:1086: void tickPickups() {
                                  10956 ;	---------------------------------
                                  10957 ; Function tickPickups
                                  10958 ; ---------------------------------
      003037                      10959 _tickPickups::
      003037 3B                   10960 	dec	sp
      003038 3B                   10961 	dec	sp
                                  10962 ;src/main.c:1088: if (pickup.active) {
      003039 FArFFr00             10963 	ld	a, (#(_pickup + 5) + 0)
      00303C B7                   10964 	or	a, a
      00303D CAr0Cr32             10965 	jp	Z, 00144$
                                  10966 ;src/main.c:1089: pickup.x -= xOverflow;
      003040 21rFBr00             10967 	ld	hl, #(_pickup + 1)
      003043 2A                   10968 	ld	a, (hl+)
      003044 47                   10969 	ld	b, a
      003045 4E                   10970 	ld	c, (hl)
      003046 58                   10971 	ld	e, b
      003047 51                   10972 	ld	d, c
      003048 21rA1r00             10973 	ld	hl, #_xOverflow
      00304B 2A                   10974 	ld	a,	(hl+)
      00304C 66                   10975 	ld	h, (hl)
      00304D 6F                   10976 	ld	l, a
      00304E 7B                   10977 	ld	a, e
      00304F 95                   10978 	sub	a, l
      003050 5F                   10979 	ld	e, a
      003051 7A                   10980 	ld	a, d
      003052 9C                   10981 	sbc	a, h
      003053 F8 01                10982 	ldhl	sp,	#1
      003055 32                   10983 	ld	(hl-), a
      003056 73                   10984 	ld	(hl), e
      003057 11rFBr00             10985 	ld	de, #(_pickup + 1)
      00305A 2A                   10986 	ld	a, (hl+)
      00305B 12                   10987 	ld	(de), a
      00305C 13                   10988 	inc	de
      00305D 7E                   10989 	ld	a, (hl)
      00305E 12                   10990 	ld	(de), a
                                  10991 ;src/main.c:1090: pickup.y -= yOverflow;
      00305F 21rFDr00             10992 	ld	hl, #(_pickup + 3)
      003062 2A                   10993 	ld	a, (hl+)
      003063 4F                   10994 	ld	c, a
      003064 46                   10995 	ld	b, (hl)
      003065 79                   10996 	ld	a, c
      003066 21rA3r00             10997 	ld	hl, #_yOverflow
      003069 96                   10998 	sub	a, (hl)
      00306A 23                   10999 	inc	hl
      00306B 4F                   11000 	ld	c, a
      00306C 78                   11001 	ld	a, b
      00306D 9E                   11002 	sbc	a, (hl)
      00306E 47                   11003 	ld	b, a
      00306F 21rFDr00             11004 	ld	hl, #(_pickup + 3)
      003072 79                   11005 	ld	a, c
      003073 22                   11006 	ld	(hl+), a
      003074 70                   11007 	ld	(hl), b
                                  11008 ;src/main.c:1091: move_sprite(3, pickup.x + 4, pickup.y + 12);
      003075 79                   11009 	ld	a, c
      003076 C6 0C                11010 	add	a, #0x0c
      003078 47                   11011 	ld	b, a
      003079 F8 00                11012 	ldhl	sp,	#0
      00307B 7E                   11013 	ld	a, (hl)
      00307C C6 04                11014 	add	a, #0x04
      00307E 4F                   11015 	ld	c, a
                                  11016 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00307F 21r0Cr00             11017 	ld	hl, #(_shadow_OAM + 12)
                                  11018 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003082 78                   11019 	ld	a, b
      003083 22                   11020 	ld	(hl+), a
      003084 71                   11021 	ld	(hl), c
                                  11022 ;src/main.c:1092: if (pickup.visible && auxTick == 1) {
      003085 21rFAr00             11023 	ld	hl, #_pickup
      003088 4E                   11024 	ld	c, (hl)
                                  11025 ;src/main.c:1089: pickup.x -= xOverflow;
      003089 11rFBr00             11026 	ld	de, #(_pickup + 1)
      00308C 1A                   11027 	ld	a, (de)
      00308D F8 00                11028 	ldhl	sp,	#0
      00308F 22                   11029 	ld	(hl+), a
      003090 13                   11030 	inc	de
      003091 1A                   11031 	ld	a, (de)
      003092 77                   11032 	ld	(hl), a
                                  11033 ;src/main.c:1092: if (pickup.visible && auxTick == 1) {
      003093 79                   11034 	ld	a, c
      003094 B7                   11035 	or	a, a
      003095 CArA0r31             11036 	jp	Z, 00127$
      003098 FArBFr00             11037 	ld	a, (#_auxTick)
      00309B 3D                   11038 	dec	a
      00309C C2rA0r31             11039 	jp	NZ,00127$
                                  11040 ;src/main.c:1094: if (abs(pickup.x - playerDrawX) < 10) {
      00309F F8 00                11041 	ldhl	sp,	#0
      0030A1 7E                   11042 	ld	a, (hl)
      0030A2 21r9Br00             11043 	ld	hl, #_playerDrawX
      0030A5 4E                   11044 	ld	c, (hl)
      0030A6 91                   11045 	sub	a, c
      0030A7 4F                   11046 	ld	c, a
                                  11047 ;src/main.c:364: if (value >= 0) return value;
      0030A8 CB 79                11048 	bit	7, c
      0030AA 28 03                11049 	jr	Z, 00136$
                                  11050 ;src/main.c:365: else return - value;
      0030AC AF                   11051 	xor	a, a
      0030AD 91                   11052 	sub	a, c
      0030AE 4F                   11053 	ld	c, a
                                  11054 ;src/main.c:1094: if (abs(pickup.x - playerDrawX) < 10) {
      0030AF                      11055 00136$:
      0030AF 79                   11056 	ld	a, c
      0030B0 EE 80                11057 	xor	a, #0x80
      0030B2 D6 8A                11058 	sub	a, #0x8a
      0030B4 D2r43r31             11059 	jp	NC, 00115$
                                  11060 ;src/main.c:1095: if (abs(pickup.y - playerDrawY) < 10) {
      0030B7 FArFDr00             11061 	ld	a, (#(_pickup + 3) + 0)
      0030BA F8 01                11062 	ldhl	sp,	#1
      0030BC 77                   11063 	ld	(hl), a
      0030BD 21r9Cr00             11064 	ld	hl, #_playerDrawY
      0030C0 4E                   11065 	ld	c, (hl)
      0030C1 F8 01                11066 	ldhl	sp,	#1
      0030C3 7E                   11067 	ld	a, (hl)
      0030C4 91                   11068 	sub	a, c
      0030C5 77                   11069 	ld	(hl), a
                                  11070 ;src/main.c:364: if (value >= 0) return value;
      0030C6 CB 7E                11071 	bit	7, (hl)
      0030C8 28 05                11072 	jr	Z, 00140$
                                  11073 ;src/main.c:365: else return - value;
      0030CA AF                   11074 	xor	a, a
      0030CB F8 01                11075 	ldhl	sp,	#1
      0030CD 96                   11076 	sub	a, (hl)
      0030CE 77                   11077 	ld	(hl), a
                                  11078 ;src/main.c:1095: if (abs(pickup.y - playerDrawY) < 10) {
      0030CF                      11079 00140$:
      0030CF F8 01                11080 	ldhl	sp,	#1
      0030D1 7E                   11081 	ld	a, (hl)
      0030D2 EE 80                11082 	xor	a, #0x80
      0030D4 D6 8A                11083 	sub	a, #0x8a
      0030D6 30 6B                11084 	jr	NC, 00115$
                                  11085 ;src/main.c:1096: if (pickup.type == 0) { //upgrade
      0030D8 FAr00r01             11086 	ld	a, (#(_pickup + 6) + 0)
      0030DB B7                   11087 	or	a, a
      0030DC 20 0D                11088 	jr	NZ, 00104$
                                  11089 ;src/main.c:1097: if (gunLevel < 1) {
      0030DE 21rA6r00             11090 	ld	hl, #_gunLevel
      0030E1 7E                   11091 	ld	a, (hl)
      0030E2 D6 01                11092 	sub	a, #0x01
      0030E4 30 05                11093 	jr	NC, 00104$
                                  11094 ;src/main.c:1098: gunLevel += 1;
      0030E6 34                   11095 	inc	(hl)
      0030E7 7E                   11096 	ld	a, (hl)
                                  11097 ;src/main.c:1099: setGunIcon();
      0030E8 CDr73r28             11098 	call	_setGunIcon
      0030EB                      11099 00104$:
                                  11100 ;src/main.c:1102: if (pickup.type == 1) { //missile ammo
      0030EB 21r00r01             11101 	ld	hl, #(_pickup + 6)
      0030EE 6E                   11102 	ld	l, (hl)
                                  11103 ;	spillPairReg hl
                                  11104 ;src/main.c:1103: updateMissileCount(pickup.amount);
      0030EF 01r01r01             11105 	ld	bc, #_pickup + 7
                                  11106 ;src/main.c:1102: if (pickup.type == 1) { //missile ammo
      0030F2 2D                   11107 	dec	l
      0030F3 20 09                11108 	jr	NZ, 00106$
                                  11109 ;src/main.c:1103: updateMissileCount(pickup.amount);
      0030F5 0A                   11110 	ld	a, (bc)
      0030F6 C5                   11111 	push	bc
      0030F7 F5                   11112 	push	af
      0030F8 33                   11113 	inc	sp
      0030F9 CDrE4r0C             11114 	call	_updateMissileCount
      0030FC 33                   11115 	inc	sp
      0030FD C1                   11116 	pop	bc
      0030FE                      11117 00106$:
                                  11118 ;src/main.c:1105: if (pickup.type == 2) {
      0030FE FAr00r01             11119 	ld	a, (#(_pickup + 6) + 0)
      003101 D6 02                11120 	sub	a, #0x02
      003103 20 34                11121 	jr	NZ, 00111$
                                  11122 ;src/main.c:1106: if (hull + pickup.amount <= 100) {
      003105 21rF6r00             11123 	ld	hl, #_hull
      003108 5E                   11124 	ld	e, (hl)
      003109 16 00                11125 	ld	d, #0x00
      00310B 0A                   11126 	ld	a, (bc)
      00310C 4F                   11127 	ld	c, a
      00310D 69                   11128 	ld	l, c
                                  11129 ;	spillPairReg hl
                                  11130 ;	spillPairReg hl
      00310E 26 00                11131 	ld	h, #0x00
                                  11132 ;	spillPairReg hl
                                  11133 ;	spillPairReg hl
      003110 19                   11134 	add	hl, de
      003111 5C                   11135 	ld	e, h
      003112 16 00                11136 	ld	d, #0x00
      003114 3E 64                11137 	ld	a, #0x64
      003116 BD                   11138 	cp	a, l
      003117 3E 00                11139 	ld	a, #0x00
      003119 9C                   11140 	sbc	a, h
      00311A CB 7B                11141 	bit	7, e
      00311C 28 07                11142 	jr	Z, 00247$
      00311E CB 7A                11143 	bit	7, d
      003120 20 08                11144 	jr	NZ, 00248$
      003122 BF                   11145 	cp	a, a
      003123 18 05                11146 	jr	00248$
      003125                      11147 00247$:
      003125 CB 7A                11148 	bit	7, d
      003127 28 01                11149 	jr	Z, 00248$
      003129 37                   11150 	scf
      00312A                      11151 00248$:
      00312A 38 08                11152 	jr	C, 00108$
                                  11153 ;src/main.c:1107: hull += pickup.amount;
      00312C 79                   11154 	ld	a, c
      00312D 21rF6r00             11155 	ld	hl, #_hull
      003130 86                   11156 	add	a, (hl)
      003131 77                   11157 	ld	(hl), a
      003132 18 05                11158 	jr	00111$
      003134                      11159 00108$:
                                  11160 ;src/main.c:1110: hull = 100;
      003134 21rF6r00             11161 	ld	hl, #_hull
      003137 36 64                11162 	ld	(hl), #0x64
      003139                      11163 00111$:
                                  11164 ;src/main.c:1113: pickup.active = 0;
      003139 21rFFr00             11165 	ld	hl, #(_pickup + 5)
      00313C 36 00                11166 	ld	(hl), #0x00
                                  11167 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00313E 21r0Er00             11168 	ld	hl, #(_shadow_OAM + 14)
      003141 36 7F                11169 	ld	(hl), #0x7f
                                  11170 ;src/main.c:1114: set_sprite_tile(3, 0x7f);
      003143                      11171 00115$:
                                  11172 ;src/main.c:1089: pickup.x -= xOverflow;
      003143 21rFBr00             11173 	ld	hl, #(_pickup + 1)
      003146 2A                   11174 	ld	a, (hl+)
      003147 4F                   11175 	ld	c, a
      003148 46                   11176 	ld	b, (hl)
                                  11177 ;src/main.c:1117: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      003149 79                   11178 	ld	a, c
      00314A D6 F6                11179 	sub	a, #0xf6
      00314C 78                   11180 	ld	a, b
      00314D 17                   11181 	rla
      00314E 3F                   11182 	ccf
      00314F 1F                   11183 	rra
      003150 DE 7F                11184 	sbc	a, #0x7f
      003152 38 40                11185 	jr	C, 00116$
      003154 58                   11186 	ld	e, b
      003155 16 00                11187 	ld	d, #0x00
      003157 3E AA                11188 	ld	a, #0xaa
      003159 B9                   11189 	cp	a, c
      00315A 3E 00                11190 	ld	a, #0x00
      00315C 98                   11191 	sbc	a, b
      00315D CB 7B                11192 	bit	7, e
      00315F 28 07                11193 	jr	Z, 00249$
      003161 CB 7A                11194 	bit	7, d
      003163 20 08                11195 	jr	NZ, 00250$
      003165 BF                   11196 	cp	a, a
      003166 18 05                11197 	jr	00250$
      003168                      11198 00249$:
      003168 CB 7A                11199 	bit	7, d
      00316A 28 01                11200 	jr	Z, 00250$
      00316C 37                   11201 	scf
      00316D                      11202 00250$:
      00316D 38 25                11203 	jr	C, 00116$
                                  11204 ;src/main.c:1090: pickup.y -= yOverflow;
      00316F 21rFDr00             11205 	ld	hl, #(_pickup + 3)
      003172 2A                   11206 	ld	a, (hl+)
      003173 4F                   11207 	ld	c, a
      003174 46                   11208 	ld	b, (hl)
                                  11209 ;src/main.c:1117: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      003175 CB 78                11210 	bit	7, b
      003177 20 1B                11211 	jr	NZ, 00116$
      003179 58                   11212 	ld	e, b
      00317A 16 00                11213 	ld	d, #0x00
      00317C 3E 9B                11214 	ld	a, #0x9b
      00317E B9                   11215 	cp	a, c
      00317F 3E 00                11216 	ld	a, #0x00
      003181 98                   11217 	sbc	a, b
      003182 CB 7B                11218 	bit	7, e
      003184 28 07                11219 	jr	Z, 00251$
      003186 CB 7A                11220 	bit	7, d
      003188 20 08                11221 	jr	NZ, 00252$
      00318A BF                   11222 	cp	a, a
      00318B 18 05                11223 	jr	00252$
      00318D                      11224 00251$:
      00318D CB 7A                11225 	bit	7, d
      00318F 28 01                11226 	jr	Z, 00252$
      003191 37                   11227 	scf
      003192                      11228 00252$:
      003192 30 78                11229 	jr	NC, 00144$
      003194                      11230 00116$:
                                  11231 ;src/main.c:1118: pickup.visible = 0;
      003194 21rFAr00             11232 	ld	hl, #_pickup
      003197 36 00                11233 	ld	(hl), #0x00
                                  11234 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003199 21r0Er00             11235 	ld	hl, #(_shadow_OAM + 14)
      00319C 36 7F                11236 	ld	(hl), #0x7f
                                  11237 ;src/main.c:1119: set_sprite_tile(3, 0x7f);
      00319E 18 6C                11238 	jr	00144$
      0031A0                      11239 00127$:
                                  11240 ;src/main.c:1123: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      0031A0 F8 00                11241 	ldhl	sp,	#0
      0031A2 2A                   11242 	ld	a, (hl+)
      0031A3 D6 F6                11243 	sub	a, #0xf6
      0031A5 7E                   11244 	ld	a, (hl)
      0031A6 DE FF                11245 	sbc	a, #0xff
      0031A8 56                   11246 	ld	d, (hl)
      0031A9 3E FF                11247 	ld	a, #0xff
      0031AB CB 7F                11248 	bit	7,a
      0031AD 28 07                11249 	jr	Z, 00253$
      0031AF CB 7A                11250 	bit	7, d
      0031B1 20 08                11251 	jr	NZ, 00254$
      0031B3 BF                   11252 	cp	a, a
      0031B4 18 05                11253 	jr	00254$
      0031B6                      11254 00253$:
      0031B6 CB 7A                11255 	bit	7, d
      0031B8 28 01                11256 	jr	Z, 00254$
      0031BA 37                   11257 	scf
      0031BB                      11258 00254$:
      0031BB 38 4F                11259 	jr	C, 00144$
      0031BD C1                   11260 	pop	bc
      0031BE C5                   11261 	push	bc
      0031BF 58                   11262 	ld	e, b
      0031C0 16 00                11263 	ld	d, #0x00
      0031C2 3E AA                11264 	ld	a, #0xaa
      0031C4 B9                   11265 	cp	a, c
      0031C5 3E 00                11266 	ld	a, #0x00
      0031C7 98                   11267 	sbc	a, b
      0031C8 CB 7B                11268 	bit	7, e
      0031CA 28 07                11269 	jr	Z, 00255$
      0031CC CB 7A                11270 	bit	7, d
      0031CE 20 08                11271 	jr	NZ, 00256$
      0031D0 BF                   11272 	cp	a, a
      0031D1 18 05                11273 	jr	00256$
      0031D3                      11274 00255$:
      0031D3 CB 7A                11275 	bit	7, d
      0031D5 28 01                11276 	jr	Z, 00256$
      0031D7 37                   11277 	scf
      0031D8                      11278 00256$:
      0031D8 38 32                11279 	jr	C, 00144$
                                  11280 ;src/main.c:1090: pickup.y -= yOverflow;
      0031DA 21rFDr00             11281 	ld	hl, #(_pickup + 3)
      0031DD 2A                   11282 	ld	a, (hl+)
      0031DE 4F                   11283 	ld	c, a
      0031DF 46                   11284 	ld	b, (hl)
                                  11285 ;src/main.c:1117: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
                                  11286 ;src/main.c:1123: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      0031E0 CB 78                11287 	bit	7, b
      0031E2 20 28                11288 	jr	NZ, 00144$
      0031E4 58                   11289 	ld	e, b
      0031E5 16 00                11290 	ld	d, #0x00
      0031E7 3E 9B                11291 	ld	a, #0x9b
      0031E9 B9                   11292 	cp	a, c
      0031EA 3E 00                11293 	ld	a, #0x00
      0031EC 98                   11294 	sbc	a, b
      0031ED CB 7B                11295 	bit	7, e
      0031EF 28 07                11296 	jr	Z, 00257$
      0031F1 CB 7A                11297 	bit	7, d
      0031F3 20 08                11298 	jr	NZ, 00258$
      0031F5 BF                   11299 	cp	a, a
      0031F6 18 05                11300 	jr	00258$
      0031F8                      11301 00257$:
      0031F8 CB 7A                11302 	bit	7, d
      0031FA 28 01                11303 	jr	Z, 00258$
      0031FC 37                   11304 	scf
      0031FD                      11305 00258$:
      0031FD 38 0D                11306 	jr	C, 00144$
                                  11307 ;src/main.c:1124: pickup.visible = 1;
      0031FF 21rFAr00             11308 	ld	hl, #_pickup
      003202 36 01                11309 	ld	(hl), #0x01
                                  11310 ;src/main.c:1125: set_sprite_tile(3, pickup.tile);
      003204 21r02r01             11311 	ld	hl, #(_pickup + 8)
      003207 4E                   11312 	ld	c, (hl)
                                  11313 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003208 21r0Er00             11314 	ld	hl, #(_shadow_OAM + 14)
      00320B 71                   11315 	ld	(hl), c
                                  11316 ;src/main.c:1125: set_sprite_tile(3, pickup.tile);
      00320C                      11317 00144$:
                                  11318 ;src/main.c:1130: }
      00320C 33                   11319 	inc	sp
      00320D 33                   11320 	inc	sp
      00320E C9                   11321 	ret
                                  11322 ;src/main.c:1132: void tickEx() {
                                  11323 ;	---------------------------------
                                  11324 ; Function tickEx
                                  11325 ; ---------------------------------
      00320F                      11326 _tickEx::
      00320F E8 F4                11327 	add	sp, #-12
                                  11328 ;src/main.c:1133: for (uint8_t i = 0; i < exCount; ++i) {
      003211 F8 0B                11329 	ldhl	sp,	#11
      003213 36 00                11330 	ld	(hl), #0x00
      003215                      11331 00118$:
      003215 21rA5r0B             11332 	ld	hl, #_exCount
      003218 4E                   11333 	ld	c, (hl)
      003219 F8 0B                11334 	ldhl	sp,	#11
      00321B 7E                   11335 	ld	a, (hl)
      00321C 91                   11336 	sub	a, c
      00321D D2rEBr33             11337 	jp	NC, 00120$
                                  11338 ;src/main.c:1134: if (explosions[i].visible) {
      003220 4E                   11339 	ld	c, (hl)
      003221 06 00                11340 	ld	b, #0x00
      003223 69                   11341 	ld	l, c
      003224 60                   11342 	ld	h, b
      003225 29                   11343 	add	hl, hl
      003226 09                   11344 	add	hl, bc
      003227 29                   11345 	add	hl, hl
      003228 01r03r01             11346 	ld	bc,#_explosions
      00322B 09                   11347 	add	hl,bc
      00322C E5                   11348 	push	hl
      00322D 7D                   11349 	ld	a, l
      00322E F8 03                11350 	ldhl	sp,	#3
      003230 77                   11351 	ld	(hl), a
      003231 E1                   11352 	pop	hl
      003232 7C                   11353 	ld	a, h
      003233 F8 02                11354 	ldhl	sp,	#2
      003235 32                   11355 	ld	(hl-), a
      003236 2A                   11356 	ld	a, (hl+)
      003237 5F                   11357 	ld	e, a
      003238 56                   11358 	ld	d, (hl)
      003239 1A                   11359 	ld	a, (de)
      00323A F8 0A                11360 	ldhl	sp,	#10
      00323C 77                   11361 	ld	(hl), a
      00323D 7E                   11362 	ld	a, (hl)
      00323E B7                   11363 	or	a, a
      00323F CArE5r33             11364 	jp	Z, 00119$
                                  11365 ;src/main.c:1136: explosions[i].x -= xOverflow;
      003242 F8 01                11366 	ldhl	sp,	#1
      003244 2A                   11367 	ld	a, (hl+)
      003245 4F                   11368 	ld	c, a
      003246 46                   11369 	ld	b, (hl)
      003247 03                   11370 	inc	bc
      003248 0A                   11371 	ld	a, (bc)
      003249 21rA1r00             11372 	ld	hl, #_xOverflow
      00324C 5E                   11373 	ld	e, (hl)
      00324D 93                   11374 	sub	a, e
      00324E 02                   11375 	ld	(bc), a
                                  11376 ;src/main.c:1137: explosions[i].y -= yOverflow;
      00324F F8 01                11377 	ldhl	sp,#1
      003251 2A                   11378 	ld	a, (hl+)
      003252 5F                   11379 	ld	e, a
      003253 56                   11380 	ld	d, (hl)
      003254 21 02 00             11381 	ld	hl, #0x0002
      003257 19                   11382 	add	hl, de
      003258 E5                   11383 	push	hl
      003259 7D                   11384 	ld	a, l
      00325A F8 09                11385 	ldhl	sp,	#9
      00325C 77                   11386 	ld	(hl), a
      00325D E1                   11387 	pop	hl
      00325E 7C                   11388 	ld	a, h
      00325F F8 08                11389 	ldhl	sp,	#8
      003261 32                   11390 	ld	(hl-), a
      003262 2A                   11391 	ld	a, (hl+)
      003263 5F                   11392 	ld	e, a
      003264 56                   11393 	ld	d, (hl)
      003265 1A                   11394 	ld	a, (de)
      003266 21rA3r00             11395 	ld	hl, #_yOverflow
      003269 5E                   11396 	ld	e, (hl)
      00326A 93                   11397 	sub	a, e
      00326B F8 07                11398 	ldhl	sp,	#7
      00326D F5                   11399 	push	af
      00326E 2A                   11400 	ld	a,	(hl+)
      00326F 66                   11401 	ld	h, (hl)
      003270 6F                   11402 	ld	l, a
      003271 F1                   11403 	pop	af
      003272 77                   11404 	ld	(hl), a
                                  11405 ;src/main.c:1138: move_sprite(20 + 2*i, explosions[i].x, explosions[i].y+8);
      003273 F8 07                11406 	ldhl	sp,#7
      003275 2A                   11407 	ld	a, (hl+)
      003276 5F                   11408 	ld	e, a
      003277 2A                   11409 	ld	a, (hl+)
      003278 57                   11410 	ld	d, a
      003279 1A                   11411 	ld	a, (de)
      00327A C6 08                11412 	add	a, #0x08
      00327C 5F                   11413 	ld	e, a
      00327D 0A                   11414 	ld	a, (bc)
      00327E 22                   11415 	ld	(hl+), a
      00327F 23                   11416 	inc	hl
      003280 3A                   11417 	ld	a, (hl-)
      003281 87                   11418 	add	a, a
      003282 77                   11419 	ld	(hl), a
      003283 7E                   11420 	ld	a, (hl)
      003284 C6 14                11421 	add	a, #0x14
      003286 F8 03                11422 	ldhl	sp,	#3
      003288 77                   11423 	ld	(hl), a
      003289 56                   11424 	ld	d, (hl)
                                  11425 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00328A 26 00                11426 	ld	h, #0x00
                                  11427 ;	spillPairReg hl
                                  11428 ;	spillPairReg hl
      00328C 6A                   11429 	ld	l, d
      00328D 29                   11430 	add	hl, hl
      00328E 29                   11431 	add	hl, hl
      00328F D5                   11432 	push	de
      003290 11r00r00             11433 	ld	de, #_shadow_OAM
      003293 19                   11434 	add	hl, de
      003294 D1                   11435 	pop	de
                                  11436 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003295 7B                   11437 	ld	a, e
      003296 22                   11438 	ld	(hl+), a
      003297 5D                   11439 	ld	e, l
      003298 54                   11440 	ld	d, h
      003299 F8 09                11441 	ldhl	sp,	#9
                                  11442 ;src/main.c:1139: move_sprite(21 + 2*i, explosions[i].x+8, explosions[i].y+8);
      00329B 3A                   11443 	ld	a, (hl-)
      00329C 2B                   11444 	dec	hl
      00329D 12                   11445 	ld	(de), a
      00329E 2A                   11446 	ld	a, (hl+)
      00329F 5F                   11447 	ld	e, a
      0032A0 2A                   11448 	ld	a, (hl+)
      0032A1 23                   11449 	inc	hl
      0032A2 57                   11450 	ld	d, a
      0032A3 1A                   11451 	ld	a, (de)
      0032A4 C6 08                11452 	add	a, #0x08
      0032A6 5F                   11453 	ld	e, a
      0032A7 0A                   11454 	ld	a, (bc)
      0032A8 C6 08                11455 	add	a, #0x08
      0032AA 4F                   11456 	ld	c, a
      0032AB 3A                   11457 	ld	a, (hl-)
      0032AC C6 15                11458 	add	a, #0x15
      0032AE 77                   11459 	ld	(hl), a
                                  11460 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0032AF 6E                   11461 	ld	l, (hl)
                                  11462 ;	spillPairReg hl
                                  11463 ;	spillPairReg hl
      0032B0 26 00                11464 	ld	h, #0x00
                                  11465 ;	spillPairReg hl
                                  11466 ;	spillPairReg hl
      0032B2 29                   11467 	add	hl, hl
      0032B3 29                   11468 	add	hl, hl
      0032B4 D5                   11469 	push	de
      0032B5 11r00r00             11470 	ld	de, #_shadow_OAM
      0032B8 19                   11471 	add	hl, de
      0032B9 D1                   11472 	pop	de
                                  11473 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0032BA 7B                   11474 	ld	a, e
      0032BB 22                   11475 	ld	(hl+), a
      0032BC 71                   11476 	ld	(hl), c
                                  11477 ;src/main.c:1141: explosions[i].frameCounter++;
      0032BD F8 01                11478 	ldhl	sp,#1
      0032BF 2A                   11479 	ld	a, (hl+)
      0032C0 5F                   11480 	ld	e, a
      0032C1 56                   11481 	ld	d, (hl)
      0032C2 21 04 00             11482 	ld	hl, #0x0004
      0032C5 19                   11483 	add	hl, de
      0032C6 4D                   11484 	ld	c, l
      0032C7 44                   11485 	ld	b, h
      0032C8 0A                   11486 	ld	a, (bc)
      0032C9 3C                   11487 	inc	a
      0032CA 02                   11488 	ld	(bc), a
                                  11489 ;src/main.c:1142: if (auxTick == 0) {
      0032CB FArBFr00             11490 	ld	a, (#_auxTick)
      0032CE B7                   11491 	or	a, a
      0032CF C2rE5r33             11492 	jp	NZ, 00119$
                                  11493 ;src/main.c:1143: if (explosions[i].frameCounter > EXPLFRAMETIME) {
      0032D2 0A                   11494 	ld	a, (bc)
      0032D3 5F                   11495 	ld	e, a
      0032D4 FArA6r0B             11496 	ld	a, (#_EXPLFRAMETIME)
      0032D7 93                   11497 	sub	a, e
      0032D8 D2rE5r33             11498 	jp	NC, 00119$
                                  11499 ;src/main.c:1144: explosions[i].frameCounter = 0;
      0032DB AF                   11500 	xor	a, a
      0032DC 02                   11501 	ld	(bc), a
                                  11502 ;src/main.c:1145: explosions[i].frame += 1; 
      0032DD F8 01                11503 	ldhl	sp,#1
      0032DF 2A                   11504 	ld	a, (hl+)
      0032E0 5F                   11505 	ld	e, a
      0032E1 56                   11506 	ld	d, (hl)
      0032E2 21 03 00             11507 	ld	hl, #0x0003
      0032E5 19                   11508 	add	hl, de
      0032E6 E5                   11509 	push	hl
      0032E7 7D                   11510 	ld	a, l
      0032E8 F8 06                11511 	ldhl	sp,	#6
      0032EA 77                   11512 	ld	(hl), a
      0032EB E1                   11513 	pop	hl
      0032EC 7C                   11514 	ld	a, h
      0032ED F8 05                11515 	ldhl	sp,	#5
      0032EF 32                   11516 	ld	(hl-), a
      0032F0 2A                   11517 	ld	a, (hl+)
      0032F1 5F                   11518 	ld	e, a
      0032F2 56                   11519 	ld	d, (hl)
      0032F3 1A                   11520 	ld	a, (de)
      0032F4 4F                   11521 	ld	c, a
      0032F5 0C                   11522 	inc	c
      0032F6 3A                   11523 	ld	a, (hl-)
      0032F7 6E                   11524 	ld	l, (hl)
      0032F8 67                   11525 	ld	h, a
      0032F9 71                   11526 	ld	(hl), c
                                  11527 ;src/main.c:1146: if (explosions[i].frame > 3) {
      0032FA F8 04                11528 	ldhl	sp,#4
      0032FC 2A                   11529 	ld	a, (hl+)
      0032FD 5F                   11530 	ld	e, a
      0032FE 56                   11531 	ld	d, (hl)
      0032FF 1A                   11532 	ld	a, (de)
      003300 4F                   11533 	ld	c, a
      003301 3E 03                11534 	ld	a, #0x03
      003303 91                   11535 	sub	a, c
      003304 30 2A                11536 	jr	NC, 00102$
                                  11537 ;src/main.c:1147: explosions[i].visible = 0;
      003306 F8 01                11538 	ldhl	sp,	#1
      003308 2A                   11539 	ld	a,	(hl+)
      003309 66                   11540 	ld	h, (hl)
      00330A 6F                   11541 	ld	l, a
      00330B 36 00                11542 	ld	(hl), #0x00
                                  11543 ;src/main.c:1148: set_sprite_tile(20 + 2*i, 0x7f);
      00330D F8 03                11544 	ldhl	sp,	#3
      00330F 4E                   11545 	ld	c, (hl)
                                  11546 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003310 26 00                11547 	ld	h, #0x00
                                  11548 ;	spillPairReg hl
                                  11549 ;	spillPairReg hl
      003312 69                   11550 	ld	l, c
      003313 29                   11551 	add	hl, hl
      003314 29                   11552 	add	hl, hl
      003315 11r00r00             11553 	ld	de, #_shadow_OAM
      003318 19                   11554 	add	hl, de
      003319 23                   11555 	inc	hl
      00331A 23                   11556 	inc	hl
      00331B 36 7F                11557 	ld	(hl), #0x7f
                                  11558 ;src/main.c:1149: set_sprite_tile(21 + 2*i, 0x7f);
      00331D F8 09                11559 	ldhl	sp,	#9
      00331F 4E                   11560 	ld	c, (hl)
                                  11561 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003320 26 00                11562 	ld	h, #0x00
                                  11563 ;	spillPairReg hl
                                  11564 ;	spillPairReg hl
      003322 69                   11565 	ld	l, c
      003323 29                   11566 	add	hl, hl
      003324 29                   11567 	add	hl, hl
      003325 11r00r00             11568 	ld	de, #_shadow_OAM
      003328 19                   11569 	add	hl, de
      003329 23                   11570 	inc	hl
      00332A 23                   11571 	inc	hl
      00332B 36 7F                11572 	ld	(hl), #0x7f
                                  11573 ;src/main.c:1149: set_sprite_tile(21 + 2*i, 0x7f);
      00332D C3rE5r33             11574 	jp	00119$
      003330                      11575 00102$:
                                  11576 ;src/main.c:1152: set_sprite_tile(20 + 2*i, explosions[i].tile + (explosions[i].frame *4));
      003330 F8 01                11577 	ldhl	sp,#1
      003332 2A                   11578 	ld	a, (hl+)
      003333 5F                   11579 	ld	e, a
      003334 56                   11580 	ld	d, (hl)
      003335 21 05 00             11581 	ld	hl, #0x0005
      003338 19                   11582 	add	hl, de
      003339 E5                   11583 	push	hl
      00333A 7D                   11584 	ld	a, l
      00333B F8 08                11585 	ldhl	sp,	#8
      00333D 77                   11586 	ld	(hl), a
      00333E E1                   11587 	pop	hl
      00333F 7C                   11588 	ld	a, h
      003340 F8 07                11589 	ldhl	sp,	#7
      003342 32                   11590 	ld	(hl-), a
      003343 2A                   11591 	ld	a, (hl+)
      003344 5F                   11592 	ld	e, a
      003345 56                   11593 	ld	d, (hl)
      003346 1A                   11594 	ld	a, (de)
      003347 F8 0A                11595 	ldhl	sp,	#10
      003349 32                   11596 	ld	(hl-), a
      00334A 2B                   11597 	dec	hl
      00334B 71                   11598 	ld	(hl), c
      00334C CB 26                11599 	sla	(hl)
      00334E CB 26                11600 	sla	(hl)
      003350 23                   11601 	inc	hl
      003351 23                   11602 	inc	hl
      003352 3A                   11603 	ld	a, (hl-)
      003353 2B                   11604 	dec	hl
      003354 86                   11605 	add	a, (hl)
      003355 23                   11606 	inc	hl
      003356 23                   11607 	inc	hl
      003357 77                   11608 	ld	(hl), a
      003358 F8 03                11609 	ldhl	sp,	#3
                                  11610 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00335A 3A                   11611 	ld	a, (hl-)
      00335B 22                   11612 	ld	(hl+), a
      00335C 36 00                11613 	ld	(hl), #0x00
      00335E 3E 02                11614 	ld	a, #0x02
      003360                      11615 00153$:
      003360 F8 02                11616 	ldhl	sp,	#2
      003362 CB 26                11617 	sla	(hl)
      003364 23                   11618 	inc	hl
      003365 CB 16                11619 	rl	(hl)
      003367 3D                   11620 	dec	a
      003368 20 F6                11621 	jr	NZ, 00153$
      00336A 11r00r00             11622 	ld	de, #_shadow_OAM
      00336D 3A                   11623 	ld	a, (hl-)
      00336E 6E                   11624 	ld	l, (hl)
      00336F 67                   11625 	ld	h, a
      003370 19                   11626 	add	hl, de
      003371 33                   11627 	inc	sp
      003372 33                   11628 	inc	sp
      003373 5D                   11629 	ld	e, l
      003374 54                   11630 	ld	d, h
      003375 D5                   11631 	push	de
      003376 21 02 00             11632 	ld	hl, #0x0002
      003379 19                   11633 	add	hl, de
      00337A E5                   11634 	push	hl
      00337B 7D                   11635 	ld	a, l
      00337C F8 04                11636 	ldhl	sp,	#4
      00337E 77                   11637 	ld	(hl), a
      00337F E1                   11638 	pop	hl
      003380 7C                   11639 	ld	a, h
      003381 F8 03                11640 	ldhl	sp,	#3
      003383 32                   11641 	ld	(hl-), a
      003384 2A                   11642 	ld	a, (hl+)
      003385 5F                   11643 	ld	e, a
      003386 56                   11644 	ld	d, (hl)
      003387 F8 0A                11645 	ldhl	sp,	#10
      003389 7E                   11646 	ld	a, (hl)
      00338A 12                   11647 	ld	(de), a
                                  11648 ;src/main.c:1153: set_sprite_tile(21 + 2*i, explosions[i].tile+(explosions[i].frame *4) +2);
      00338B F8 06                11649 	ldhl	sp,#6
      00338D 2A                   11650 	ld	a, (hl+)
      00338E 5F                   11651 	ld	e, a
      00338F 56                   11652 	ld	d, (hl)
      003390 1A                   11653 	ld	a, (de)
      003391 F8 0A                11654 	ldhl	sp,	#10
      003393 77                   11655 	ld	(hl), a
      003394 F8 04                11656 	ldhl	sp,#4
      003396 2A                   11657 	ld	a, (hl+)
      003397 5F                   11658 	ld	e, a
      003398 56                   11659 	ld	d, (hl)
      003399 1A                   11660 	ld	a, (de)
      00339A F8 08                11661 	ldhl	sp,	#8
      00339C 77                   11662 	ld	(hl), a
      00339D CB 26                11663 	sla	(hl)
      00339F CB 26                11664 	sla	(hl)
      0033A1 23                   11665 	inc	hl
      0033A2 23                   11666 	inc	hl
      0033A3 3A                   11667 	ld	a, (hl-)
      0033A4 2B                   11668 	dec	hl
      0033A5 86                   11669 	add	a, (hl)
      0033A6 23                   11670 	inc	hl
      0033A7 23                   11671 	inc	hl
      0033A8 77                   11672 	ld	(hl), a
      0033A9 34                   11673 	inc	(hl)
      0033AA 34                   11674 	inc	(hl)
      0033AB 2B                   11675 	dec	hl
                                  11676 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0033AC 3A                   11677 	ld	a, (hl-)
      0033AD 22                   11678 	ld	(hl+), a
      0033AE 36 00                11679 	ld	(hl), #0x00
      0033B0 3E 02                11680 	ld	a, #0x02
      0033B2                      11681 00154$:
      0033B2 F8 08                11682 	ldhl	sp,	#8
      0033B4 CB 26                11683 	sla	(hl)
      0033B6 23                   11684 	inc	hl
      0033B7 CB 16                11685 	rl	(hl)
      0033B9 3D                   11686 	dec	a
      0033BA 20 F6                11687 	jr	NZ, 00154$
      0033BC 2B                   11688 	dec	hl
      0033BD 2A                   11689 	ld	a, (hl+)
      0033BE 5F                   11690 	ld	e, a
      0033BF 56                   11691 	ld	d, (hl)
      0033C0 21r00r00             11692 	ld	hl, #_shadow_OAM
      0033C3 19                   11693 	add	hl, de
      0033C4 E5                   11694 	push	hl
      0033C5 7D                   11695 	ld	a, l
      0033C6 F8 08                11696 	ldhl	sp,	#8
      0033C8 77                   11697 	ld	(hl), a
      0033C9 E1                   11698 	pop	hl
      0033CA 7C                   11699 	ld	a, h
      0033CB F8 07                11700 	ldhl	sp,	#7
      0033CD 32                   11701 	ld	(hl-), a
      0033CE 2A                   11702 	ld	a, (hl+)
      0033CF 5F                   11703 	ld	e, a
      0033D0 56                   11704 	ld	d, (hl)
      0033D1 21 02 00             11705 	ld	hl, #0x0002
      0033D4 19                   11706 	add	hl, de
      0033D5 E5                   11707 	push	hl
      0033D6 7D                   11708 	ld	a, l
      0033D7 F8 0A                11709 	ldhl	sp,	#10
      0033D9 77                   11710 	ld	(hl), a
      0033DA E1                   11711 	pop	hl
      0033DB 7C                   11712 	ld	a, h
      0033DC F8 09                11713 	ldhl	sp,	#9
      0033DE 32                   11714 	ld	(hl-), a
      0033DF 2A                   11715 	ld	a, (hl+)
      0033E0 5F                   11716 	ld	e, a
      0033E1 2A                   11717 	ld	a, (hl+)
      0033E2 57                   11718 	ld	d, a
      0033E3 7E                   11719 	ld	a, (hl)
      0033E4 12                   11720 	ld	(de), a
                                  11721 ;src/main.c:1153: set_sprite_tile(21 + 2*i, explosions[i].tile+(explosions[i].frame *4) +2);
      0033E5                      11722 00119$:
                                  11723 ;src/main.c:1133: for (uint8_t i = 0; i < exCount; ++i) {
      0033E5 F8 0B                11724 	ldhl	sp,	#11
      0033E7 34                   11725 	inc	(hl)
      0033E8 C3r15r32             11726 	jp	00118$
      0033EB                      11727 00120$:
                                  11728 ;src/main.c:1159: }
      0033EB E8 0C                11729 	add	sp, #12
      0033ED C9                   11730 	ret
                                  11731 ;src/main.c:1161: void initEnemyOptions() {
                                  11732 ;	---------------------------------
                                  11733 ; Function initEnemyOptions
                                  11734 ; ---------------------------------
      0033EE                      11735 _initEnemyOptions::
                                  11736 ;src/main.c:1162: enemyOptions[0] = blob;
      0033EE 11 12 00             11737 	ld	de, #0x0012
      0033F1 D5                   11738 	push	de
      0033F2 11r10r00             11739 	ld	de, #_blob
      0033F5 D5                   11740 	push	de
      0033F6 11r00r00             11741 	ld	de, #_enemyOptions
      0033F9 D5                   11742 	push	de
      0033FA CDr00r00             11743 	call	___memcpy
      0033FD E8 06                11744 	add	sp, #6
                                  11745 ;src/main.c:1163: enemyOptions[1] = bomb;
      0033FF 11 12 00             11746 	ld	de, #0x0012
      003402 D5                   11747 	push	de
      003403 11r22r00             11748 	ld	de, #_bomb
      003406 D5                   11749 	push	de
      003407 11r12r00             11750 	ld	de, #(_enemyOptions + 18)
      00340A D5                   11751 	push	de
      00340B CDr00r00             11752 	call	___memcpy
      00340E E8 06                11753 	add	sp, #6
                                  11754 ;src/main.c:1164: enemyOptions[2] = miniship;
      003410 11 12 00             11755 	ld	de, #0x0012
      003413 D5                   11756 	push	de
      003414 11r34r00             11757 	ld	de, #_miniship
      003417 D5                   11758 	push	de
      003418 11r24r00             11759 	ld	de, #(_enemyOptions + 36)
      00341B D5                   11760 	push	de
      00341C CDr00r00             11761 	call	___memcpy
      00341F E8 06                11762 	add	sp, #6
                                  11763 ;src/main.c:1165: enemyOptions[3] = shieldship;
      003421 11 12 00             11764 	ld	de, #0x0012
      003424 D5                   11765 	push	de
      003425 11r58r00             11766 	ld	de, #_shieldship
      003428 D5                   11767 	push	de
      003429 11r36r00             11768 	ld	de, #(_enemyOptions + 54)
      00342C D5                   11769 	push	de
      00342D CDr00r00             11770 	call	___memcpy
      003430 E8 06                11771 	add	sp, #6
                                  11772 ;src/main.c:1167: enemyOptions[4] = bigblob;
      003432 11 12 00             11773 	ld	de, #0x0012
      003435 D5                   11774 	push	de
      003436 11r46r00             11775 	ld	de, #_bigblob
      003439 D5                   11776 	push	de
      00343A 11r48r00             11777 	ld	de, #(_enemyOptions + 72)
      00343D D5                   11778 	push	de
      00343E CDr00r00             11779 	call	___memcpy
      003441 E8 06                11780 	add	sp, #6
                                  11781 ;src/main.c:1168: }
      003443 C9                   11782 	ret
                                  11783 ;src/main.c:1171: void initProjectiles() {
                                  11784 ;	---------------------------------
                                  11785 ; Function initProjectiles
                                  11786 ; ---------------------------------
      003444                      11787 _initProjectiles::
                                  11788 ;src/main.c:1172: set_sprite_data(0x20, 17, ProjectileTiles); 
      003444 11rE8r05             11789 	ld	de, #_ProjectileTiles
      003447 D5                   11790 	push	de
      003448 21 20 11             11791 	ld	hl, #0x1120
      00344B E5                   11792 	push	hl
      00344C CDr00r00             11793 	call	_set_sprite_data
      00344F E8 04                11794 	add	sp, #4
                                  11795 ;src/main.c:1174: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      003451 AF                   11796 	xor	a, a
      003452                      11797 00103$:
      003452 21r9Fr0B             11798 	ld	hl, #_PROJECTILECOUNT
      003455 4E                   11799 	ld	c, (hl)
      003456 B9                   11800 	cp	a, c
      003457 D0                   11801 	ret	NC
      003458 3C                   11802 	inc	a
                                  11803 ;src/main.c:1178: }
      003459 18 F7                11804 	jr	00103$
                                  11805 ;src/main.c:1180: void initGame() {
                                  11806 ;	---------------------------------
                                  11807 ; Function initGame
                                  11808 ; ---------------------------------
      00345B                      11809 _initGame::
                                  11810 ;src/main.c:1183: xDir = 0;
      00345B 21r93r00             11811 	ld	hl, #_xDir
      00345E 36 00                11812 	ld	(hl), #0x00
                                  11813 ;src/main.c:1184: yDir = -1;
      003460 21r94r00             11814 	ld	hl, #_yDir
      003463 36 FF                11815 	ld	(hl), #0xff
                                  11816 ;src/main.c:1185: xSpeed = 0;
      003465 21r95r00             11817 	ld	hl, #_xSpeed
      003468 36 00                11818 	ld	(hl), #0x00
                                  11819 ;src/main.c:1186: ySpeed = 0;
      00346A 21r96r00             11820 	ld	hl, #_ySpeed
      00346D 36 00                11821 	ld	(hl), #0x00
                                  11822 ;src/main.c:1189: playerX = 80<<5;
      00346F 21r97r00             11823 	ld	hl, #_playerX
      003472 36 00                11824 	ld	(hl), #0x00
      003474 23                   11825 	inc	hl
      003475 36 0A                11826 	ld	(hl), #0x0a
                                  11827 ;src/main.c:1190: playerY = 80<<5;
      003477 21r99r00             11828 	ld	hl, #_playerY
      00347A 36 00                11829 	ld	(hl), #0x00
      00347C 23                   11830 	inc	hl
      00347D 36 0A                11831 	ld	(hl), #0x0a
                                  11832 ;src/main.c:1192: playerDrawX = 80;
      00347F 21r9Br00             11833 	ld	hl, #_playerDrawX
      003482 36 50                11834 	ld	(hl), #0x50
                                  11835 ;src/main.c:1193: playerDrawY = 80;
      003484 21r9Cr00             11836 	ld	hl, #_playerDrawY
      003487 36 50                11837 	ld	(hl), #0x50
                                  11838 ;src/main.c:1196: bgX = 0;
      003489 AF                   11839 	xor	a, a
      00348A 21r9Dr00             11840 	ld	hl, #_bgX
      00348D 22                   11841 	ld	(hl+), a
      00348E 77                   11842 	ld	(hl), a
                                  11843 ;src/main.c:1197: bgY = 0;
      00348F AF                   11844 	xor	a, a
      003490 21r9Fr00             11845 	ld	hl, #_bgY
      003493 22                   11846 	ld	(hl+), a
      003494 77                   11847 	ld	(hl), a
                                  11848 ;src/main.c:1199: hull = maxHull;
      003495 FArA1r0B             11849 	ld	a, (#_maxHull)
      003498 EArF6r00             11850 	ld	(#_hull),a
                                  11851 ;src/main.c:1200: shield = maxShield;
      00349B FArA2r0B             11852 	ld	a, (#_maxShield)
      00349E EArF7r00             11853 	ld	(#_shield),a
                                  11854 ;src/main.c:1202: DISPLAY_ON;
      0034A1 F0r00                11855 	ldh	a, (_LCDC_REG + 0)
      0034A3 F6 80                11856 	or	a, #0x80
      0034A5 E0r00                11857 	ldh	(_LCDC_REG + 0), a
                                  11858 ;src/main.c:1203: SPRITES_8x16;
      0034A7 F0r00                11859 	ldh	a, (_LCDC_REG + 0)
      0034A9 F6 04                11860 	or	a, #0x04
      0034AB E0r00                11861 	ldh	(_LCDC_REG + 0), a
                                  11862 ;src/main.c:1204: set_sprite_data(0, 12, Player1);
      0034AD 11r83r07             11863 	ld	de, #_Player1
      0034B0 D5                   11864 	push	de
      0034B1 21 00 0C             11865 	ld	hl, #0xc00
      0034B4 E5                   11866 	push	hl
      0034B5 CDr00r00             11867 	call	_set_sprite_data
      0034B8 E8 04                11868 	add	sp, #4
                                  11869 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0034BA 21r02r00             11870 	ld	hl, #(_shadow_OAM + 2)
      0034BD 36 00                11871 	ld	(hl), #0x00
      0034BF 21r06r00             11872 	ld	hl, #(_shadow_OAM + 6)
      0034C2 36 02                11873 	ld	(hl), #0x02
                                  11874 ;src/main.c:1210: SHOW_SPRITES;
      0034C4 F0r00                11875 	ldh	a, (_LCDC_REG + 0)
      0034C6 F6 02                11876 	or	a, #0x02
      0034C8 E0r00                11877 	ldh	(_LCDC_REG + 0), a
                                  11878 ;src/main.c:1214: font_init();
      0034CA CDr00r00             11879 	call	_font_init
                                  11880 ;src/main.c:1216: min_font = font_load(font_min); // 36 tiles of characters
      0034CD 11r00r00             11881 	ld	de, #_font_min
      0034D0 D5                   11882 	push	de
      0034D1 CDr00r00             11883 	call	_font_load
      0034D4 E1                   11884 	pop	hl
      0034D5 21rF8r00             11885 	ld	hl, #_min_font
      0034D8 7B                   11886 	ld	a, e
      0034D9 22                   11887 	ld	(hl+), a
                                  11888 ;src/main.c:1217: font_set(min_font);
      0034DA 7A                   11889 	ld	a, d
      0034DB 32                   11890 	ld	(hl-), a
      0034DC 2A                   11891 	ld	a, (hl+)
      0034DD 5F                   11892 	ld	e, a
      0034DE 56                   11893 	ld	d, (hl)
      0034DF D5                   11894 	push	de
      0034E0 CDr00r00             11895 	call	_font_set
      0034E3 E1                   11896 	pop	hl
                                  11897 ;src/main.c:1218: set_win_tiles(1,0,4,1,hullabel);
      0034E4 11r00r00             11898 	ld	de, #_hullabel
      0034E7 D5                   11899 	push	de
      0034E8 21 04 01             11900 	ld	hl, #0x104
      0034EB E5                   11901 	push	hl
      0034EC 21 01 00             11902 	ld	hl, #0x01
      0034EF E5                   11903 	push	hl
      0034F0 CDr00r00             11904 	call	_set_win_tiles
      0034F3 E8 06                11905 	add	sp, #6
                                  11906 ;src/main.c:1219: set_win_tiles(1,1,4,1,shieldlabel);
      0034F5 11r04r00             11907 	ld	de, #_shieldlabel
      0034F8 D5                   11908 	push	de
      0034F9 21 04 01             11909 	ld	hl, #0x104
      0034FC E5                   11910 	push	hl
      0034FD 21 01 01             11911 	ld	hl, #0x101
      003500 E5                   11912 	push	hl
      003501 CDr00r00             11913 	call	_set_win_tiles
      003504 E8 06                11914 	add	sp, #6
                                  11915 ;src/main.c:1224: set_bkg_data(0x50,1,healthblock);
      003506 11r07r05             11916 	ld	de, #_healthblock
      003509 D5                   11917 	push	de
      00350A 21 50 01             11918 	ld	hl, #0x150
      00350D E5                   11919 	push	hl
      00350E CDr00r00             11920 	call	_set_bkg_data
      003511 E8 04                11921 	add	sp, #4
                                  11922 ;src/main.c:1226: setHealthBar(0, hull);
      003513 FArF6r00             11923 	ld	a, (#_hull)
      003516 67                   11924 	ld	h, a
      003517 2E 00                11925 	ld	l, #0x00
      003519 E5                   11926 	push	hl
      00351A CDrA9r0B             11927 	call	_setHealthBar
      00351D E1                   11928 	pop	hl
                                  11929 ;src/main.c:1227: setHealthBar(1, shield);
      00351E FArF7r00             11930 	ld	a, (#_shield)
      003521 67                   11931 	ld	h, a
      003522 2E 01                11932 	ld	l, #0x01
      003524 E5                   11933 	push	hl
      003525 CDrA9r0B             11934 	call	_setHealthBar
      003528 E1                   11935 	pop	hl
                                  11936 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003529 3E 07                11937 	ld	a, #0x07
      00352B E0r00                11938 	ldh	(_WX_REG + 0), a
      00352D 3E 7E                11939 	ld	a, #0x7e
      00352F E0r00                11940 	ldh	(_WY_REG + 0), a
                                  11941 ;src/main.c:1234: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      003531 11r87r04             11942 	ld	de, #_backgroundtiles
      003534 D5                   11943 	push	de
      003535 21 25 08             11944 	ld	hl, #0x825
      003538 E5                   11945 	push	hl
      003539 CDr00r00             11946 	call	_set_bkg_data
      00353C E8 04                11947 	add	sp, #4
                                  11948 ;src/main.c:1235: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      00353E 11r87r00             11949 	ld	de, #_background1
      003541 D5                   11950 	push	de
      003542 21 20 20             11951 	ld	hl, #0x2020
      003545 E5                   11952 	push	hl
      003546 AF                   11953 	xor	a, a
      003547 0F                   11954 	rrca
      003548 F5                   11955 	push	af
      003549 CDr00r00             11956 	call	_set_bkg_tiles
      00354C E8 06                11957 	add	sp, #6
                                  11958 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00354E AF                   11959 	xor	a, a
      00354F E0r00                11960 	ldh	(_SCX_REG + 0), a
      003551 AF                   11961 	xor	a, a
      003552 E0r00                11962 	ldh	(_SCY_REG + 0), a
                                  11963 ;src/main.c:1241: set_bkg_data(0x51, 18, ProjectileTiles);
      003554 11rE8r05             11964 	ld	de, #_ProjectileTiles
      003557 D5                   11965 	push	de
      003558 21 51 12             11966 	ld	hl, #0x1251
      00355B E5                   11967 	push	hl
      00355C CDr00r00             11968 	call	_set_bkg_data
      00355F E8 04                11969 	add	sp, #4
                                  11970 ;src/main.c:1243: set_win_tiles(10, 0,4,1,weaponlabel);
      003561 11r08r00             11971 	ld	de, #_weaponlabel
      003564 D5                   11972 	push	de
      003565 21 04 01             11973 	ld	hl, #0x104
      003568 E5                   11974 	push	hl
      003569 21 0A 00             11975 	ld	hl, #0x0a
      00356C E5                   11976 	push	hl
      00356D CDr00r00             11977 	call	_set_win_tiles
      003570 E8 06                11978 	add	sp, #6
                                  11979 ;src/main.c:1244: set_win_tiles(10, 1,4,1,scorelabel);
      003572 11r0Cr00             11980 	ld	de, #_scorelabel
      003575 D5                   11981 	push	de
      003576 21 04 01             11982 	ld	hl, #0x104
      003579 E5                   11983 	push	hl
      00357A 21 0A 01             11984 	ld	hl, #0x10a
      00357D E5                   11985 	push	hl
      00357E CDr00r00             11986 	call	_set_win_tiles
      003581 E8 06                11987 	add	sp, #6
                                  11988 ;src/main.c:1246: setGunIcon();
      003583 CDr73r28             11989 	call	_setGunIcon
                                  11990 ;src/main.c:1247: SHOW_BKG;
      003586 F0r00                11991 	ldh	a, (_LCDC_REG + 0)
      003588 F6 01                11992 	or	a, #0x01
      00358A E0r00                11993 	ldh	(_LCDC_REG + 0), a
                                  11994 ;src/main.c:1248: SHOW_WIN;;
      00358C F0r00                11995 	ldh	a, (_LCDC_REG + 0)
      00358E F6 20                11996 	or	a, #0x20
      003590 E0r00                11997 	ldh	(_LCDC_REG + 0), a
                                  11998 ;src/main.c:1250: SCORE = MAKE_BCD(00000);
      003592 AF                   11999 	xor	a, a
      003593 21rB3r00             12000 	ld	hl, #_SCORE
      003596 22                   12001 	ld	(hl+), a
      003597 22                   12002 	ld	(hl+), a
      003598 22                   12003 	ld	(hl+), a
      003599 77                   12004 	ld	(hl), a
                                  12005 ;src/main.c:1251: updateScore();
      00359A CDrBAr0C             12006 	call	_updateScore
                                  12007 ;src/main.c:1252: missiles = 0;
      00359D 21rA8r00             12008 	ld	hl, #_missiles
      0035A0 36 00                12009 	ld	(hl), #0x00
                                  12010 ;src/main.c:1253: MISSILES = MAKE_BCD(0);
      0035A2 AF                   12011 	xor	a, a
      0035A3 21rA9r00             12012 	ld	hl, #_MISSILES
      0035A6 22                   12013 	ld	(hl+), a
      0035A7 22                   12014 	ld	(hl+), a
      0035A8 22                   12015 	ld	(hl+), a
      0035A9 77                   12016 	ld	(hl), a
                                  12017 ;src/main.c:1254: updateMissileCount(0);
      0035AA AF                   12018 	xor	a, a
      0035AB F5                   12019 	push	af
      0035AC 33                   12020 	inc	sp
      0035AD CDrE4r0C             12021 	call	_updateMissileCount
      0035B0 33                   12022 	inc	sp
                                  12023 ;src/main.c:1255: set_win_tiles(17, 0,1,1,gunMap+2);
      0035B1 11rB0r00             12024 	ld	de, #(_gunMap + 2)
      0035B4 D5                   12025 	push	de
      0035B5 21 01 01             12026 	ld	hl, #0x101
      0035B8 E5                   12027 	push	hl
      0035B9 21 11 00             12028 	ld	hl, #0x11
      0035BC E5                   12029 	push	hl
      0035BD CDr00r00             12030 	call	_set_win_tiles
      0035C0 E8 06                12031 	add	sp, #6
                                  12032 ;src/main.c:1259: pickup = upgrade;//upgrade;
      0035C2 11 09 00             12033 	ld	de, #0x0009
      0035C5 D5                   12034 	push	de
      0035C6 11r08r07             12035 	ld	de, #_upgrade
      0035C9 D5                   12036 	push	de
      0035CA 11rFAr00             12037 	ld	de, #_pickup
      0035CD D5                   12038 	push	de
      0035CE CDr00r00             12039 	call	___memcpy
      0035D1 E8 06                12040 	add	sp, #6
                                  12041 ;src/main.c:1261: set_sprite_data(0x70, 6, Pickups);
      0035D3 11r23r07             12042 	ld	de, #_Pickups
      0035D6 D5                   12043 	push	de
      0035D7 21 70 06             12044 	ld	hl, #0x670
      0035DA E5                   12045 	push	hl
      0035DB CDr00r00             12046 	call	_set_sprite_data
      0035DE E8 04                12047 	add	sp, #4
                                  12048 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0035E0 21r0Er00             12049 	ld	hl, #(_shadow_OAM + 14)
      0035E3 36 7F                12050 	ld	(hl), #0x7f
                                  12051 ;src/main.c:1265: move_sprite(3, pickup.x + 4, pickup.y + 12);
      0035E5 FArFDr00             12052 	ld	a, (#(_pickup + 3) + 0)
      0035E8 C6 0C                12053 	add	a, #0x0c
      0035EA 47                   12054 	ld	b, a
      0035EB FArFBr00             12055 	ld	a, (#(_pickup + 1) + 0)
      0035EE C6 04                12056 	add	a, #0x04
      0035F0 4F                   12057 	ld	c, a
                                  12058 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0035F1 21r0Cr00             12059 	ld	hl, #(_shadow_OAM + 12)
                                  12060 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0035F4 78                   12061 	ld	a, b
      0035F5 22                   12062 	ld	(hl+), a
      0035F6 71                   12063 	ld	(hl), c
                                  12064 ;src/main.c:1267: for (uint8_t i = 0; i<exCount; ++i) {
      0035F7 0E 00                12065 	ld	c, #0x00
      0035F9                      12066 00109$:
      0035F9 21rA5r0B             12067 	ld	hl, #_exCount
      0035FC 46                   12068 	ld	b, (hl)
      0035FD 79                   12069 	ld	a, c
      0035FE 90                   12070 	sub	a, b
      0035FF 30 1E                12071 	jr	NC, 00101$
                                  12072 ;src/main.c:1268: explosions[i] = ex;
      003601 06 00                12073 	ld	b, #0x00
      003603 69                   12074 	ld	l, c
      003604 60                   12075 	ld	h, b
      003605 29                   12076 	add	hl, hl
      003606 09                   12077 	add	hl, bc
      003607 29                   12078 	add	hl, hl
      003608 11r03r01             12079 	ld	de, #_explosions
      00360B 19                   12080 	add	hl, de
      00360C C5                   12081 	push	bc
      00360D 11 06 00             12082 	ld	de, #0x0006
      003610 D5                   12083 	push	de
      003611 11r83r08             12084 	ld	de, #_ex
      003614 D5                   12085 	push	de
      003615 E5                   12086 	push	hl
      003616 CDr00r00             12087 	call	___memcpy
      003619 E8 06                12088 	add	sp, #6
      00361B C1                   12089 	pop	bc
                                  12090 ;src/main.c:1267: for (uint8_t i = 0; i<exCount; ++i) {
      00361C 0C                   12091 	inc	c
      00361D 18 DA                12092 	jr	00109$
      00361F                      12093 00101$:
                                  12094 ;src/main.c:1270: set_sprite_data(exTiles[0], 16, Ex1);
      00361F FArBCr00             12095 	ld	a, (#_exTiles + 0)
      003622 11r89r08             12096 	ld	de, #_Ex1
      003625 D5                   12097 	push	de
      003626 26 10                12098 	ld	h, #0x10
                                  12099 ;	spillPairReg hl
                                  12100 ;	spillPairReg hl
      003628 E5                   12101 	push	hl
      003629 33                   12102 	inc	sp
      00362A F5                   12103 	push	af
      00362B 33                   12104 	inc	sp
      00362C CDr00r00             12105 	call	_set_sprite_data
      00362F E8 04                12106 	add	sp, #4
                                  12107 ;src/main.c:1271: set_sprite_data(exTiles[1], 16, Ex2);
      003631 FArBDr00             12108 	ld	a, (#(_exTiles + 1) + 0)
      003634 11r89r09             12109 	ld	de, #_Ex2
      003637 D5                   12110 	push	de
      003638 26 10                12111 	ld	h, #0x10
                                  12112 ;	spillPairReg hl
                                  12113 ;	spillPairReg hl
      00363A E5                   12114 	push	hl
      00363B 33                   12115 	inc	sp
      00363C F5                   12116 	push	af
      00363D 33                   12117 	inc	sp
      00363E CDr00r00             12118 	call	_set_sprite_data
      003641 E8 04                12119 	add	sp, #4
                                  12120 ;src/main.c:1272: set_sprite_data(exTiles[2], 16, Ex3);
      003643 FArBEr00             12121 	ld	a, (#(_exTiles + 2) + 0)
      003646 11r89r0A             12122 	ld	de, #_Ex3
      003649 D5                   12123 	push	de
      00364A 26 10                12124 	ld	h, #0x10
                                  12125 ;	spillPairReg hl
                                  12126 ;	spillPairReg hl
      00364C E5                   12127 	push	hl
      00364D 33                   12128 	inc	sp
      00364E F5                   12129 	push	af
      00364F 33                   12130 	inc	sp
      003650 CDr00r00             12131 	call	_set_sprite_data
      003653 E8 04                12132 	add	sp, #4
                                  12133 ;src/main.c:1276: }
      003655 C9                   12134 	ret
                                  12135 ;src/main.c:1278: void main(){
                                  12136 ;	---------------------------------
                                  12137 ; Function main
                                  12138 ; ---------------------------------
      003656                      12139 _main::
                                  12140 ;src/main.c:1281: initEnemyOptions();
      003656 CDrEEr33             12141 	call	_initEnemyOptions
                                  12142 ;src/main.c:1284: STAT_REG = 0x45;
      003659 3E 45                12143 	ld	a, #0x45
      00365B E0r00                12144 	ldh	(_STAT_REG + 0), a
                                  12145 ;src/main.c:1285: LYC_REG = 0x7e; //line 126
      00365D 3E 7E                12146 	ld	a, #0x7e
      00365F E0r00                12147 	ldh	(_LYC_REG + 0), a
                                  12148 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      003661 F3                   12149 	di
                                  12150 ;src/main.c:1287: add_LCD(interruptLCD);
      003662 11r00r00             12151 	ld	de, #_interruptLCD
      003665 D5                   12152 	push	de
      003666 CDr00r00             12153 	call	_add_LCD
      003669 33                   12154 	inc	sp
      00366A 33                   12155 	inc	sp
                                  12156 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      00366B FB                   12157 	ei
                                  12158 ;src/main.c:1289: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      00366C 3E 03                12159 	ld	a, #0x03
      00366E F5                   12160 	push	af
      00366F 33                   12161 	inc	sp
      003670 CDr00r00             12162 	call	_set_interrupts
      003673 33                   12163 	inc	sp
                                  12164 ;src/main.c:1293: NR52_REG = 0x80; // sound on 
      003674 3E 80                12165 	ld	a, #0x80
      003676 E0r00                12166 	ldh	(_NR52_REG + 0), a
                                  12167 ;src/main.c:1294: NR50_REG = 0x77; // volume
      003678 3E 77                12168 	ld	a, #0x77
      00367A E0r00                12169 	ldh	(_NR50_REG + 0), a
                                  12170 ;src/main.c:1295: NR51_REG = 0xFF; // all channels
      00367C 3E FF                12171 	ld	a, #0xff
      00367E E0r00                12172 	ldh	(_NR51_REG + 0), a
                                  12173 ;src/main.c:1299: waitpad(J_A);
      003680 3E 10                12174 	ld	a, #0x10
      003682 F5                   12175 	push	af
      003683 33                   12176 	inc	sp
      003684 CDr00r00             12177 	call	_waitpad
      003687 33                   12178 	inc	sp
                                  12179 ;src/main.c:1300: uint16_t seed = LY_REG;
      003688 F0r00                12180 	ldh	a, (_LY_REG + 0)
      00368A 4F                   12181 	ld	c, a
      00368B 06 00                12182 	ld	b, #0x00
                                  12183 ;src/main.c:1301: seed |= (uint16_t)DIV_REG << 8;
      00368D F0r00                12184 	ldh	a, (_DIV_REG + 0)
      00368F 5F                   12185 	ld	e, a
      003690 AF                   12186 	xor	a, a
      003691 B1                   12187 	or	a, c
      003692 4F                   12188 	ld	c, a
      003693 7B                   12189 	ld	a, e
      003694 B0                   12190 	or	a, b
      003695 47                   12191 	ld	b, a
                                  12192 ;src/main.c:1302: initrand(seed);
      003696 C5                   12193 	push	bc
      003697 CDr00r00             12194 	call	_initrand
      00369A E1                   12195 	pop	hl
                                  12196 ;src/main.c:1307: initGame();
      00369B CDr5Br34             12197 	call	_initGame
                                  12198 ;src/main.c:1308: initEnemies(1);
      00369E 3E 01                12199 	ld	a, #0x01
      0036A0 F5                   12200 	push	af
      0036A1 33                   12201 	inc	sp
      0036A2 CDrFEr0F             12202 	call	_initEnemies
      0036A5 33                   12203 	inc	sp
                                  12204 ;src/main.c:1309: initProjectiles();
      0036A6 CDr44r34             12205 	call	_initProjectiles
                                  12206 ;src/main.c:1311: while(1) {
      0036A9                      12207 00122$:
                                  12208 ;src/main.c:1312: SHOW_SPRITES;
      0036A9 F0r00                12209 	ldh	a, (_LCDC_REG + 0)
      0036AB F6 02                12210 	or	a, #0x02
      0036AD E0r00                12211 	ldh	(_LCDC_REG + 0), a
                                  12212 ;src/main.c:1314: joydata = joypad(); // query for button states
      0036AF CDr00r00             12213 	call	_joypad
      0036B2 21rF5r00             12214 	ld	hl, #_joydata
      0036B5 73                   12215 	ld	(hl), e
                                  12216 ;src/main.c:1316: updateDirection(); // set player direction
      0036B6 CDr71r0D             12217 	call	_updateDirection
                                  12218 ;src/main.c:1319: move(); 
      0036B9 CDrC6r1B             12219 	call	_move
                                  12220 ;src/main.c:1321: updateEnemyPositions();
      0036BC CDrACr12             12221 	call	_updateEnemyPositions
                                  12222 ;src/main.c:1324: checkCollision(); 
      0036BF CDrB0r23             12223 	call	_checkCollision
                                  12224 ;src/main.c:963: if (shield < maxShield) {
      0036C2 21rA2r0B             12225 	ld	hl, #_maxShield
      0036C5 4E                   12226 	ld	c, (hl)
      0036C6 59                   12227 	ld	e, c
      0036C7 21rF7r00             12228 	ld	hl, #_shield
      0036CA 56                   12229 	ld	d, (hl)
      0036CB 7E                   12230 	ld	a, (hl)
      0036CC 91                   12231 	sub	a, c
      0036CD CB 7B                12232 	bit	7, e
      0036CF 28 07                12233 	jr	Z, 00194$
      0036D1 CB 7A                12234 	bit	7, d
      0036D3 20 08                12235 	jr	NZ, 00195$
      0036D5 BF                   12236 	cp	a, a
      0036D6 18 05                12237 	jr	00195$
      0036D8                      12238 00194$:
      0036D8 CB 7A                12239 	bit	7, d
      0036DA 28 01                12240 	jr	Z, 00195$
      0036DC 37                   12241 	scf
      0036DD                      12242 00195$:
      0036DD 30 04                12243 	jr	NC, 00130$
                                  12244 ;src/main.c:964: shield += 1;
      0036DF 21rF7r00             12245 	ld	hl, #_shield
      0036E2 34                   12246 	inc	(hl)
      0036E3                      12247 00130$:
                                  12248 ;src/main.c:966: setHealthBar(0, hull);
      0036E3 FArF6r00             12249 	ld	a, (#_hull)
      0036E6 67                   12250 	ld	h, a
      0036E7 2E 00                12251 	ld	l, #0x00
      0036E9 E5                   12252 	push	hl
      0036EA CDrA9r0B             12253 	call	_setHealthBar
      0036ED E1                   12254 	pop	hl
                                  12255 ;src/main.c:967: setHealthBar(1, shield);
      0036EE FArF7r00             12256 	ld	a, (#_shield)
      0036F1 67                   12257 	ld	h, a
      0036F2 2E 01                12258 	ld	l, #0x01
      0036F4 E5                   12259 	push	hl
      0036F5 CDrA9r0B             12260 	call	_setHealthBar
      0036F8 E1                   12261 	pop	hl
                                  12262 ;src/main.c:1329: if (joydata & J_B && fireCooldown == 0) {
      0036F9 FArF5r00             12263 	ld	a, (#_joydata)
      0036FC CB 6F                12264 	bit	5, a
      0036FE 28 09                12265 	jr	Z, 00102$
      003700 FAr92r00             12266 	ld	a, (#_fireCooldown)
      003703 B7                   12267 	or	a, a
      003704 20 03                12268 	jr	NZ, 00102$
                                  12269 ;src/main.c:1330: fire();
      003706 CDrA6r28             12270 	call	_fire
      003709                      12271 00102$:
                                  12272 ;src/main.c:1332: if (fireCooldown > 0) {
      003709 21r92r00             12273 	ld	hl, #_fireCooldown
      00370C 7E                   12274 	ld	a, (hl)
      00370D B7                   12275 	or	a, a
      00370E 28 01                12276 	jr	Z, 00105$
                                  12277 ;src/main.c:1333: --fireCooldown;
      003710 35                   12278 	dec	(hl)
      003711                      12279 00105$:
                                  12280 ;src/main.c:1336: if (joydata & J_SELECT && switchDelay == 0) {
      003711 FArF5r00             12281 	ld	a, (#_joydata)
      003714 CB 77                12282 	bit	6, a
      003716 28 24                12283 	jr	Z, 00112$
      003718 FArADr00             12284 	ld	a, (#_switchDelay)
      00371B B7                   12285 	or	a, a
      00371C 20 1E                12286 	jr	NZ, 00112$
                                  12287 ;src/main.c:1337: if (currentGun == 0) {
      00371E 21rA7r00             12288 	ld	hl, #_currentGun
      003721 7E                   12289 	ld	a, (hl)
      003722 B7                   12290 	or	a, a
      003723 20 04                12291 	jr	NZ, 00109$
                                  12292 ;src/main.c:1338: currentGun = 1;
      003725 36 01                12293 	ld	(hl), #0x01
      003727 18 0B                12294 	jr	00110$
      003729                      12295 00109$:
                                  12296 ;src/main.c:1340: else if (currentGun == 1) {
      003729 FArA7r00             12297 	ld	a, (#_currentGun)
      00372C 3D                   12298 	dec	a
      00372D 20 05                12299 	jr	NZ, 00110$
                                  12300 ;src/main.c:1341: currentGun = 0;
      00372F 21rA7r00             12301 	ld	hl, #_currentGun
      003732 36 00                12302 	ld	(hl), #0x00
      003734                      12303 00110$:
                                  12304 ;src/main.c:1343: setGunIcon();
      003734 CDr73r28             12305 	call	_setGunIcon
                                  12306 ;src/main.c:1344: switchDelay = 30;
      003737 21rADr00             12307 	ld	hl, #_switchDelay
      00373A 36 1E                12308 	ld	(hl), #0x1e
      00373C                      12309 00112$:
                                  12310 ;src/main.c:1346: if (switchDelay != 0) {
      00373C 21rADr00             12311 	ld	hl, #_switchDelay
      00373F 7E                   12312 	ld	a, (hl)
      003740 B7                   12313 	or	a, a
      003741 28 01                12314 	jr	Z, 00115$
                                  12315 ;src/main.c:1347: switchDelay--;
      003743 35                   12316 	dec	(hl)
      003744                      12317 00115$:
                                  12318 ;src/main.c:1349: moveProjectiles();
      003744 CDr54r2E             12319 	call	_moveProjectiles
                                  12320 ;src/main.c:1350: tickPickups();
      003747 CDr37r30             12321 	call	_tickPickups
                                  12322 ;src/main.c:1351: tickEx();
      00374A CDr0Fr32             12323 	call	_tickEx
                                  12324 ;src/main.c:1353: if (auxTick == 0) {
      00374D FArBFr00             12325 	ld	a, (#_auxTick)
      003750 B7                   12326 	or	a, a
      003751 20 08                12327 	jr	NZ, 00117$
                                  12328 ;src/main.c:1354: auxTick = AUXTICKFREQUENCY;
      003753 FArA8r0B             12329 	ld	a, (#_AUXTICKFREQUENCY)
      003756 EArBFr00             12330 	ld	(#_auxTick),a
      003759 18 04                12331 	jr	00118$
      00375B                      12332 00117$:
                                  12333 ;src/main.c:1357: auxTick--;
      00375B 21rBFr00             12334 	ld	hl, #_auxTick
      00375E 35                   12335 	dec	(hl)
      00375F                      12336 00118$:
                                  12337 ;src/main.c:1362: if (hull > 100) {
      00375F 3E 64                12338 	ld	a, #0x64
      003761 21rF6r00             12339 	ld	hl, #_hull
      003764 96                   12340 	sub	a, (hl)
      003765 30 02                12341 	jr	NC, 00120$
                                  12342 ;src/main.c:1363: hull = 0;
      003767 36 00                12343 	ld	(hl), #0x00
      003769                      12344 00120$:
                                  12345 ;src/main.c:1366: SHOW_WIN;	
      003769 F0r00                12346 	ldh	a, (_LCDC_REG + 0)
      00376B F6 20                12347 	or	a, #0x20
      00376D E0r00                12348 	ldh	(_LCDC_REG + 0), a
                                  12349 ;src/main.c:1367: wait_vbl_done(); // Idle until next frame
      00376F CDr00r00             12350 	call	_wait_vbl_done
                                  12351 ;src/main.c:1372: }
      003772 C3rA9r36             12352 	jp	00122$
                                  12353 	.area _CODE
                                  12354 	.area _INITIALIZER
      000000                      12355 __xinit__hullabel:
      000000 12                   12356 	.db #0x12	; 18
      000001 1F                   12357 	.db #0x1f	; 31
      000002 16                   12358 	.db #0x16	; 22
      000003 16                   12359 	.db #0x16	; 22
      000004                      12360 __xinit__shieldlabel:
      000004 1D                   12361 	.db #0x1d	; 29
      000005 12                   12362 	.db #0x12	; 18
      000006 16                   12363 	.db #0x16	; 22
      000007 0E                   12364 	.db #0x0e	; 14
      000008                      12365 __xinit__weaponlabel:
      000008 21                   12366 	.db #0x21	; 33
      000009 0F                   12367 	.db #0x0f	; 15
      00000A 1A                   12368 	.db #0x1a	; 26
      00000B 18                   12369 	.db #0x18	; 24
      00000C                      12370 __xinit__scorelabel:
      00000C 1D                   12371 	.db #0x1d	; 29
      00000D 0D                   12372 	.db #0x0d	; 13
      00000E 1C                   12373 	.db #0x1c	; 28
      00000F 0F                   12374 	.db #0x0f	; 15
      000010                      12375 __xinit__blob:
      000010 00 00                12376 	.dw #0x0000
      000012 00 00                12377 	.dw #0x0000
      000014 00                   12378 	.db #0x00	;  0
      000015 00                   12379 	.db #0x00	;  0
      000016 40                   12380 	.db #0x40	; 64
      000017 00                   12381 	.db #0x00	; 0
      000018 01                   12382 	.db #0x01	; 1
      000019 01                   12383 	.db #0x01	; 1
      00001A 01                   12384 	.db #0x01	; 1
      00001B 32                   12385 	.db #0x32	; 50	'2'
      00001C 03                   12386 	.db #0x03	;  3
      00001D 01                   12387 	.db #0x01	; 1
      00001E 00                   12388 	.db #0x00	;  0
      00001F 00                   12389 	.db #0x00	;  0
      000020 32 00                12390 	.dw #0x0032
      000022                      12391 __xinit__bomb:
      000022 00 00                12392 	.dw #0x0000
      000024 00 00                12393 	.dw #0x0000
      000026 00                   12394 	.db #0x00	;  0
      000027 00                   12395 	.db #0x00	;  0
      000028 42                   12396 	.db #0x42	; 66	'B'
      000029 00                   12397 	.db #0x00	; 0
      00002A 01                   12398 	.db #0x01	; 1
      00002B 01                   12399 	.db #0x01	; 1
      00002C 01                   12400 	.db #0x01	; 1
      00002D 32                   12401 	.db #0x32	; 50	'2'
      00002E 05                   12402 	.db #0x05	;  5
      00002F 01                   12403 	.db #0x01	; 1
      000030 00                   12404 	.db #0x00	;  0
      000031 00                   12405 	.db #0x00	;  0
      000032 32 00                12406 	.dw #0x0032
      000034                      12407 __xinit__miniship:
      000034 00 00                12408 	.dw #0x0000
      000036 00 00                12409 	.dw #0x0000
      000038 00                   12410 	.db #0x00	;  0
      000039 00                   12411 	.db #0x00	;  0
      00003A 44                   12412 	.db #0x44	; 68	'D'
      00003B 00                   12413 	.db #0x00	; 0
      00003C 01                   12414 	.db #0x01	; 1
      00003D 01                   12415 	.db #0x01	; 1
      00003E 01                   12416 	.db #0x01	; 1
      00003F 32                   12417 	.db #0x32	; 50	'2'
      000040 05                   12418 	.db #0x05	;  5
      000041 01                   12419 	.db #0x01	; 1
      000042 00                   12420 	.db #0x00	;  0
      000043 00                   12421 	.db #0x00	;  0
      000044 32 00                12422 	.dw #0x0032
      000046                      12423 __xinit__bigblob:
      000046 00 00                12424 	.dw #0x0000
      000048 00 00                12425 	.dw #0x0000
      00004A 00                   12426 	.db #0x00	;  0
      00004B 00                   12427 	.db #0x00	;  0
      00004C 50                   12428 	.db #0x50	; 80	'P'
      00004D 52                   12429 	.db #0x52	; 82	'R'
      00004E 02                   12430 	.db #0x02	; 2
      00004F 01                   12431 	.db #0x01	; 1
      000050 01                   12432 	.db #0x01	; 1
      000051 32                   12433 	.db #0x32	; 50	'2'
      000052 03                   12434 	.db #0x03	;  3
      000053 01                   12435 	.db #0x01	; 1
      000054 00                   12436 	.db #0x00	;  0
      000055 00                   12437 	.db #0x00	;  0
      000056 64 00                12438 	.dw #0x0064
      000058                      12439 __xinit__shieldship:
      000058 00 00                12440 	.dw #0x0000
      00005A 00 00                12441 	.dw #0x0000
      00005C 00                   12442 	.db #0x00	;  0
      00005D 00                   12443 	.db #0x00	;  0
      00005E 54                   12444 	.db #0x54	; 84	'T'
      00005F 56                   12445 	.db #0x56	; 86	'V'
      000060 02                   12446 	.db #0x02	; 2
      000061 01                   12447 	.db #0x01	; 1
      000062 01                   12448 	.db #0x01	; 1
      000063 32                   12449 	.db #0x32	; 50	'2'
      000064 03                   12450 	.db #0x03	;  3
      000065 01                   12451 	.db #0x01	; 1
      000066 00                   12452 	.db #0x00	;  0
      000067 00                   12453 	.db #0x00	;  0
      000068 46 00                12454 	.dw #0x0046
      00006A                      12455 __xinit__singleGun:
      00006A 00 00                12456 	.dw #0x0000
      00006C 00 00                12457 	.dw #0x0000
      00006E 00                   12458 	.db #0x00	;  0
      00006F 00                   12459 	.db #0x00	;  0
      000070 FF                   12460 	.db #0xff	; -1
      000071 02                   12461 	.db #0x02	; 2
      000072 32 00                12462 	.dw #0x0032
      000074 01                   12463 	.db #0x01	; 1
      000075 0F                   12464 	.db #0x0f	; 15
      000076 20                   12465 	.db #0x20	; 32
      000077                      12466 __xinit__doubleGun:
      000077 00 00                12467 	.dw #0x0000
      000079 00 00                12468 	.dw #0x0000
      00007B 00                   12469 	.db #0x00	;  0
      00007C 00                   12470 	.db #0x00	;  0
      00007D FF                   12471 	.db #0xff	; -1
      00007E 02                   12472 	.db #0x02	; 2
      00007F 46 00                12473 	.dw #0x0046
      000081 01                   12474 	.db #0x01	; 1
      000082 0F                   12475 	.db #0x0f	; 15
      000083 26                   12476 	.db #0x26	; 38
      000084                      12477 __xinit__missile:
      000084 00 00                12478 	.dw #0x0000
      000086 00 00                12479 	.dw #0x0000
      000088 00                   12480 	.db #0x00	;  0
      000089 00                   12481 	.db #0x00	;  0
      00008A FF                   12482 	.db #0xff	; -1
      00008B 01                   12483 	.db #0x01	; 1
      00008C 64 00                12484 	.dw #0x0064
      00008E 01                   12485 	.db #0x01	; 1
      00008F 1E                   12486 	.db #0x1e	; 30
      000090 2C                   12487 	.db #0x2c	; 44
      000091                      12488 __xinit__oldestProjectile:
      000091 00                   12489 	.db #0x00	; 0
      000092                      12490 __xinit__fireCooldown:
      000092 00                   12491 	.db #0x00	; 0
      000093                      12492 __xinit__xDir:
      000093 00                   12493 	.db #0x00	;  0
      000094                      12494 __xinit__yDir:
      000094 FF                   12495 	.db #0xff	; -1
      000095                      12496 __xinit__xSpeed:
      000095 00                   12497 	.db #0x00	;  0
      000096                      12498 __xinit__ySpeed:
      000096 00                   12499 	.db #0x00	;  0
      000097                      12500 __xinit__playerX:
      000097 00 0A                12501 	.dw #0x0a00
      000099                      12502 __xinit__playerY:
      000099 00 0A                12503 	.dw #0x0a00
      00009B                      12504 __xinit__playerDrawX:
      00009B 50                   12505 	.db #0x50	; 80	'P'
      00009C                      12506 __xinit__playerDrawY:
      00009C 50                   12507 	.db #0x50	; 80	'P'
      00009D                      12508 __xinit__bgX:
      00009D 00 00                12509 	.dw #0x0000
      00009F                      12510 __xinit__bgY:
      00009F 00 00                12511 	.dw #0x0000
      0000A1                      12512 __xinit__xOverflow:
      0000A1 00 00                12513 	.dw #0x0000
      0000A3                      12514 __xinit__yOverflow:
      0000A3 00 00                12515 	.dw #0x0000
      0000A5                      12516 __xinit__enemyCollisionCount:
      0000A5 00                   12517 	.db #0x00	; 0
      0000A6                      12518 __xinit__gunLevel:
      0000A6 00                   12519 	.db #0x00	; 0
      0000A7                      12520 __xinit__currentGun:
      0000A7 00                   12521 	.db #0x00	; 0
      0000A8                      12522 __xinit__missiles:
      0000A8 00                   12523 	.db #0x00	; 0
      0000A9                      12524 __xinit__MISSILES:
      0000A9 00 00 00 00          12525 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000AD                      12526 __xinit__switchDelay:
      0000AD 00                   12527 	.db #0x00	; 0
      0000AE                      12528 __xinit__gunMap:
      0000AE 53                   12529 	.db #0x53	; 83	'S'
      0000AF 5B                   12530 	.db #0x5b	; 91
      0000B0 61                   12531 	.db #0x61	; 97	'a'
      0000B1                      12532 __xinit__score:
      0000B1 00 00                12533 	.dw #0x0000
      0000B3                      12534 __xinit__SCORE:
      0000B3 00 00 00 00          12535 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B7                      12536 __xinit__INCREMENT:
      0000B7 01 00 00 00          12537 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000BB                      12538 __xinit__oldestEx:
      0000BB 00                   12539 	.db #0x00	; 0
      0000BC                      12540 __xinit__exTiles:
      0000BC 80                   12541 	.db #0x80	; 128
      0000BD 90                   12542 	.db #0x90	; 144
      0000BE A0                   12543 	.db #0xa0	; 160
      0000BF                      12544 __xinit__auxTick:
      0000BF 01                   12545 	.db #0x01	; 1
                                  12546 	.area _CABS (ABS)
