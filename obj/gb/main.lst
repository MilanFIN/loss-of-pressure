                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _moveProjectiles
                                     16 	.globl _fire
                                     17 	.globl _setGunIcon
                                     18 	.globl _checkCollision
                                     19 	.globl _takeDamage
                                     20 	.globl _move
                                     21 	.globl _updateEnemyPositions
                                     22 	.globl _initEnemies
                                     23 	.globl _playSound
                                     24 	.globl _updateDirection
                                     25 	.globl _incrementScore
                                     26 	.globl _updateScore
                                     27 	.globl _setHealthBar
                                     28 	.globl _interruptLCD
                                     29 	.globl _bcd2text
                                     30 	.globl _bcd_add
                                     31 	.globl _rand
                                     32 	.globl _initrand
                                     33 	.globl _font_set
                                     34 	.globl _font_load
                                     35 	.globl _font_init
                                     36 	.globl _set_sprite_data
                                     37 	.globl _set_win_tiles
                                     38 	.globl _set_bkg_tiles
                                     39 	.globl _set_bkg_data
                                     40 	.globl _wait_vbl_done
                                     41 	.globl _set_interrupts
                                     42 	.globl _waitpad
                                     43 	.globl _joypad
                                     44 	.globl _add_LCD
                                     45 	.globl _INCREMENT
                                     46 	.globl _bcd
                                     47 	.globl _score
                                     48 	.globl _gunMap
                                     49 	.globl _switchDelay
                                     50 	.globl _currentGun
                                     51 	.globl _enemyCollisionCount
                                     52 	.globl _yOverflow
                                     53 	.globl _xOverflow
                                     54 	.globl _bgY
                                     55 	.globl _bgX
                                     56 	.globl _playerDrawY
                                     57 	.globl _playerDrawX
                                     58 	.globl _playerY
                                     59 	.globl _playerX
                                     60 	.globl _ySpeed
                                     61 	.globl _xSpeed
                                     62 	.globl _yDir
                                     63 	.globl _xDir
                                     64 	.globl _fireCooldown
                                     65 	.globl _oldestProjectile
                                     66 	.globl _missile
                                     67 	.globl _doubleGun
                                     68 	.globl _singleGun
                                     69 	.globl _shieldship
                                     70 	.globl _bigblob
                                     71 	.globl _miniship
                                     72 	.globl _bomb
                                     73 	.globl _blob
                                     74 	.globl _scorelabel
                                     75 	.globl _weaponlabel
                                     76 	.globl _shieldlabel
                                     77 	.globl _hullabel
                                     78 	.globl _min_font
                                     79 	.globl _shield
                                     80 	.globl _hull
                                     81 	.globl _joydata
                                     82 	.globl _projectiles
                                     83 	.globl _enemies
                                     84 	.globl _enemyOptions
                                     85 	.globl _GUNCOUNT
                                     86 	.globl _maxShield
                                     87 	.globl _maxHull
                                     88 	.globl _PLAYERSIZE
                                     89 	.globl _PROJECTILECOUNT
                                     90 	.globl _ySpawnPositions
                                     91 	.globl _xSpawnPositions
                                     92 	.globl _ENEMYCOUNT
                                     93 	.globl _EMPTYSPRITE
                                     94 	.globl _BLANK
                                     95 	.globl _BLANKSIZE
                                     96 	.globl _Player1
                                     97 	.globl _ProjectileTiles
                                     98 	.globl _largeenemies
                                     99 	.globl _enemy1
                                    100 	.globl _enemyOptionCount
                                    101 	.globl _healthblock
                                    102 	.globl _backgroundtiles
                                    103 	.globl _background1
                                    104 	.globl _cross
                                    105 ;--------------------------------------------------------
                                    106 ; special function registers
                                    107 ;--------------------------------------------------------
                                    108 ;--------------------------------------------------------
                                    109 ; ram data
                                    110 ;--------------------------------------------------------
                                    111 	.area _DATA
      000000                        112 _enemyOptions::
      000000                        113 	.ds 80
      000050                        114 _enemies::
      000050                        115 	.ds 80
      0000A0                        116 _projectiles::
      0000A0                        117 	.ds 60
      0000DC                        118 _joydata::
      0000DC                        119 	.ds 1
      0000DD                        120 _hull::
      0000DD                        121 	.ds 1
      0000DE                        122 _shield::
      0000DE                        123 	.ds 1
      0000DF                        124 _min_font::
      0000DF                        125 	.ds 2
                                    126 ;--------------------------------------------------------
                                    127 ; ram data
                                    128 ;--------------------------------------------------------
                                    129 	.area _INITIALIZED
      000000                        130 _hullabel::
      000000                        131 	.ds 4
      000004                        132 _shieldlabel::
      000004                        133 	.ds 4
      000008                        134 _weaponlabel::
      000008                        135 	.ds 4
      00000C                        136 _scorelabel::
      00000C                        137 	.ds 4
      000010                        138 _blob::
      000010                        139 	.ds 16
      000020                        140 _bomb::
      000020                        141 	.ds 16
      000030                        142 _miniship::
      000030                        143 	.ds 16
      000040                        144 _bigblob::
      000040                        145 	.ds 16
      000050                        146 _shieldship::
      000050                        147 	.ds 16
      000060                        148 _singleGun::
      000060                        149 	.ds 12
      00006C                        150 _doubleGun::
      00006C                        151 	.ds 12
      000078                        152 _missile::
      000078                        153 	.ds 12
      000084                        154 _oldestProjectile::
      000084                        155 	.ds 1
      000085                        156 _fireCooldown::
      000085                        157 	.ds 1
      000086                        158 _xDir::
      000086                        159 	.ds 1
      000087                        160 _yDir::
      000087                        161 	.ds 1
      000088                        162 _xSpeed::
      000088                        163 	.ds 1
      000089                        164 _ySpeed::
      000089                        165 	.ds 1
      00008A                        166 _playerX::
      00008A                        167 	.ds 2
      00008C                        168 _playerY::
      00008C                        169 	.ds 2
      00008E                        170 _playerDrawX::
      00008E                        171 	.ds 1
      00008F                        172 _playerDrawY::
      00008F                        173 	.ds 1
      000090                        174 _bgX::
      000090                        175 	.ds 2
      000092                        176 _bgY::
      000092                        177 	.ds 2
      000094                        178 _xOverflow::
      000094                        179 	.ds 2
      000096                        180 _yOverflow::
      000096                        181 	.ds 2
      000098                        182 _enemyCollisionCount::
      000098                        183 	.ds 1
      000099                        184 _currentGun::
      000099                        185 	.ds 1
      00009A                        186 _switchDelay::
      00009A                        187 	.ds 1
      00009B                        188 _gunMap::
      00009B                        189 	.ds 3
      00009E                        190 _score::
      00009E                        191 	.ds 2
      0000A0                        192 _bcd::
      0000A0                        193 	.ds 4
      0000A4                        194 _INCREMENT::
      0000A4                        195 	.ds 4
                                    196 ;--------------------------------------------------------
                                    197 ; absolute external ram data
                                    198 ;--------------------------------------------------------
                                    199 	.area _DABS (ABS)
                                    200 ;--------------------------------------------------------
                                    201 ; global & static initialisations
                                    202 ;--------------------------------------------------------
                                    203 	.area _HOME
                                    204 	.area _GSINIT
                                    205 	.area _GSFINAL
                                    206 	.area _GSINIT
                                    207 ;--------------------------------------------------------
                                    208 ; Home
                                    209 ;--------------------------------------------------------
                                    210 	.area _HOME
                                    211 	.area _HOME
                                    212 ;--------------------------------------------------------
                                    213 ; code
                                    214 ;--------------------------------------------------------
                                    215 	.area _CODE
                                    216 ;src/main.c:113: void interruptLCD()
                                    217 ;	---------------------------------
                                    218 ; Function interruptLCD
                                    219 ; ---------------------------------
      000000                        220 _interruptLCD::
                                    221 ;src/main.c:115: HIDE_SPRITES;
      000000 F0r00                  222 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  223 	and	a, #0xfd
      000004 E0r00                  224 	ldh	(_LCDC_REG + 0), a
                                    225 ;src/main.c:116: }
      000006 C9                     226 	ret
      000007                        227 _cross:
      000007 18                     228 	.db #0x18	; 24
      000008 18                     229 	.db #0x18	; 24
      000009 18                     230 	.db #0x18	; 24
      00000A 18                     231 	.db #0x18	; 24
      00000B 3C                     232 	.db #0x3c	; 60
      00000C 3C                     233 	.db #0x3c	; 60
      00000D 3C                     234 	.db #0x3c	; 60
      00000E 3C                     235 	.db #0x3c	; 60
      00000F 7E                     236 	.db #0x7e	; 126
      000010 7E                     237 	.db #0x7e	; 126
      000011 7E                     238 	.db #0x7e	; 126
      000012 7E                     239 	.db #0x7e	; 126
      000013 FF                     240 	.db #0xff	; 255
      000014 FF                     241 	.db #0xff	; 255
      000015 FF                     242 	.db #0xff	; 255
      000016 FF                     243 	.db #0xff	; 255
      000017 0F                     244 	.db #0x0f	; 15
      000018 0F                     245 	.db #0x0f	; 15
      000019 3F                     246 	.db #0x3f	; 63
      00001A 3F                     247 	.db #0x3f	; 63
      00001B FF                     248 	.db #0xff	; 255
      00001C FF                     249 	.db #0xff	; 255
      00001D FF                     250 	.db #0xff	; 255
      00001E FF                     251 	.db #0xff	; 255
      00001F 7E                     252 	.db #0x7e	; 126
      000020 7E                     253 	.db #0x7e	; 126
      000021 3E                     254 	.db #0x3e	; 62
      000022 3E                     255 	.db #0x3e	; 62
      000023 1C                     256 	.db #0x1c	; 28
      000024 1C                     257 	.db #0x1c	; 28
      000025 0C                     258 	.db #0x0c	; 12
      000026 0C                     259 	.db #0x0c	; 12
      000027 C0                     260 	.db #0xc0	; 192
      000028 C0                     261 	.db #0xc0	; 192
      000029 F0                     262 	.db #0xf0	; 240
      00002A F0                     263 	.db #0xf0	; 240
      00002B FC                     264 	.db #0xfc	; 252
      00002C FC                     265 	.db #0xfc	; 252
      00002D FF                     266 	.db #0xff	; 255
      00002E FF                     267 	.db #0xff	; 255
      00002F FF                     268 	.db #0xff	; 255
      000030 FF                     269 	.db #0xff	; 255
      000031 FC                     270 	.db #0xfc	; 252
      000032 FC                     271 	.db #0xfc	; 252
      000033 F0                     272 	.db #0xf0	; 240
      000034 F0                     273 	.db #0xf0	; 240
      000035 C0                     274 	.db #0xc0	; 192
      000036 C0                     275 	.db #0xc0	; 192
      000037 0C                     276 	.db #0x0c	; 12
      000038 0C                     277 	.db #0x0c	; 12
      000039 1C                     278 	.db #0x1c	; 28
      00003A 1C                     279 	.db #0x1c	; 28
      00003B 3E                     280 	.db #0x3e	; 62
      00003C 3E                     281 	.db #0x3e	; 62
      00003D 7E                     282 	.db #0x7e	; 126
      00003E 7E                     283 	.db #0x7e	; 126
      00003F FF                     284 	.db #0xff	; 255
      000040 FF                     285 	.db #0xff	; 255
      000041 FF                     286 	.db #0xff	; 255
      000042 FF                     287 	.db #0xff	; 255
      000043 3F                     288 	.db #0x3f	; 63
      000044 3F                     289 	.db #0x3f	; 63
      000045 0F                     290 	.db #0x0f	; 15
      000046 0F                     291 	.db #0x0f	; 15
      000047 FF                     292 	.db #0xff	; 255
      000048 FF                     293 	.db #0xff	; 255
      000049 FF                     294 	.db #0xff	; 255
      00004A FF                     295 	.db #0xff	; 255
      00004B 7E                     296 	.db #0x7e	; 126
      00004C 7E                     297 	.db #0x7e	; 126
      00004D 7E                     298 	.db #0x7e	; 126
      00004E 7E                     299 	.db #0x7e	; 126
      00004F 3C                     300 	.db #0x3c	; 60
      000050 3C                     301 	.db #0x3c	; 60
      000051 3C                     302 	.db #0x3c	; 60
      000052 3C                     303 	.db #0x3c	; 60
      000053 18                     304 	.db #0x18	; 24
      000054 18                     305 	.db #0x18	; 24
      000055 18                     306 	.db #0x18	; 24
      000056 18                     307 	.db #0x18	; 24
      000057 30                     308 	.db #0x30	; 48	'0'
      000058 30                     309 	.db #0x30	; 48	'0'
      000059 38                     310 	.db #0x38	; 56	'8'
      00005A 38                     311 	.db #0x38	; 56	'8'
      00005B 7C                     312 	.db #0x7c	; 124
      00005C 7C                     313 	.db #0x7c	; 124
      00005D 7E                     314 	.db #0x7e	; 126
      00005E 7E                     315 	.db #0x7e	; 126
      00005F FF                     316 	.db #0xff	; 255
      000060 FF                     317 	.db #0xff	; 255
      000061 FF                     318 	.db #0xff	; 255
      000062 FF                     319 	.db #0xff	; 255
      000063 FC                     320 	.db #0xfc	; 252
      000064 FC                     321 	.db #0xfc	; 252
      000065 F0                     322 	.db #0xf0	; 240
      000066 F0                     323 	.db #0xf0	; 240
      000067 03                     324 	.db #0x03	; 3
      000068 03                     325 	.db #0x03	; 3
      000069 0F                     326 	.db #0x0f	; 15
      00006A 0F                     327 	.db #0x0f	; 15
      00006B 3F                     328 	.db #0x3f	; 63
      00006C 3F                     329 	.db #0x3f	; 63
      00006D FF                     330 	.db #0xff	; 255
      00006E FF                     331 	.db #0xff	; 255
      00006F FF                     332 	.db #0xff	; 255
      000070 FF                     333 	.db #0xff	; 255
      000071 3F                     334 	.db #0x3f	; 63
      000072 3F                     335 	.db #0x3f	; 63
      000073 0F                     336 	.db #0x0f	; 15
      000074 0F                     337 	.db #0x0f	; 15
      000075 03                     338 	.db #0x03	; 3
      000076 03                     339 	.db #0x03	; 3
      000077 F0                     340 	.db #0xf0	; 240
      000078 F0                     341 	.db #0xf0	; 240
      000079 FC                     342 	.db #0xfc	; 252
      00007A FC                     343 	.db #0xfc	; 252
      00007B FF                     344 	.db #0xff	; 255
      00007C FF                     345 	.db #0xff	; 255
      00007D FF                     346 	.db #0xff	; 255
      00007E FF                     347 	.db #0xff	; 255
      00007F 7E                     348 	.db #0x7e	; 126
      000080 7E                     349 	.db #0x7e	; 126
      000081 7C                     350 	.db #0x7c	; 124
      000082 7C                     351 	.db #0x7c	; 124
      000083 38                     352 	.db #0x38	; 56	'8'
      000084 38                     353 	.db #0x38	; 56	'8'
      000085 30                     354 	.db #0x30	; 48	'0'
      000086 30                     355 	.db #0x30	; 48	'0'
      000087                        356 _background1:
      000087 26                     357 	.db #0x26	; 38
      000088 26                     358 	.db #0x26	; 38
      000089 26                     359 	.db #0x26	; 38
      00008A 26                     360 	.db #0x26	; 38
      00008B 26                     361 	.db #0x26	; 38
      00008C 26                     362 	.db #0x26	; 38
      00008D 26                     363 	.db #0x26	; 38
      00008E 26                     364 	.db #0x26	; 38
      00008F 26                     365 	.db #0x26	; 38
      000090 26                     366 	.db #0x26	; 38
      000091 26                     367 	.db #0x26	; 38
      000092 2A                     368 	.db #0x2a	; 42
      000093 29                     369 	.db #0x29	; 41
      000094 26                     370 	.db #0x26	; 38
      000095 26                     371 	.db #0x26	; 38
      000096 26                     372 	.db #0x26	; 38
      000097 26                     373 	.db #0x26	; 38
      000098 26                     374 	.db #0x26	; 38
      000099 26                     375 	.db #0x26	; 38
      00009A 26                     376 	.db #0x26	; 38
      00009B 2C                     377 	.db #0x2c	; 44
      00009C 26                     378 	.db #0x26	; 38
      00009D 26                     379 	.db #0x26	; 38
      00009E 26                     380 	.db #0x26	; 38
      00009F 26                     381 	.db #0x26	; 38
      0000A0 26                     382 	.db #0x26	; 38
      0000A1 26                     383 	.db #0x26	; 38
      0000A2 26                     384 	.db #0x26	; 38
      0000A3 26                     385 	.db #0x26	; 38
      0000A4 26                     386 	.db #0x26	; 38
      0000A5 26                     387 	.db #0x26	; 38
      0000A6 26                     388 	.db #0x26	; 38
      0000A7 26                     389 	.db #0x26	; 38
      0000A8 2B                     390 	.db #0x2b	; 43
      0000A9 26                     391 	.db #0x26	; 38
      0000AA 26                     392 	.db #0x26	; 38
      0000AB 26                     393 	.db #0x26	; 38
      0000AC 26                     394 	.db #0x26	; 38
      0000AD 26                     395 	.db #0x26	; 38
      0000AE 26                     396 	.db #0x26	; 38
      0000AF 26                     397 	.db #0x26	; 38
      0000B0 26                     398 	.db #0x26	; 38
      0000B1 26                     399 	.db #0x26	; 38
      0000B2 26                     400 	.db #0x26	; 38
      0000B3 26                     401 	.db #0x26	; 38
      0000B4 26                     402 	.db #0x26	; 38
      0000B5 26                     403 	.db #0x26	; 38
      0000B6 26                     404 	.db #0x26	; 38
      0000B7 26                     405 	.db #0x26	; 38
      0000B8 26                     406 	.db #0x26	; 38
      0000B9 26                     407 	.db #0x26	; 38
      0000BA 26                     408 	.db #0x26	; 38
      0000BB 26                     409 	.db #0x26	; 38
      0000BC 26                     410 	.db #0x26	; 38
      0000BD 26                     411 	.db #0x26	; 38
      0000BE 26                     412 	.db #0x26	; 38
      0000BF 26                     413 	.db #0x26	; 38
      0000C0 26                     414 	.db #0x26	; 38
      0000C1 26                     415 	.db #0x26	; 38
      0000C2 26                     416 	.db #0x26	; 38
      0000C3 26                     417 	.db #0x26	; 38
      0000C4 26                     418 	.db #0x26	; 38
      0000C5 26                     419 	.db #0x26	; 38
      0000C6 26                     420 	.db #0x26	; 38
      0000C7 26                     421 	.db #0x26	; 38
      0000C8 26                     422 	.db #0x26	; 38
      0000C9 26                     423 	.db #0x26	; 38
      0000CA 26                     424 	.db #0x26	; 38
      0000CB 26                     425 	.db #0x26	; 38
      0000CC 26                     426 	.db #0x26	; 38
      0000CD 26                     427 	.db #0x26	; 38
      0000CE 26                     428 	.db #0x26	; 38
      0000CF 26                     429 	.db #0x26	; 38
      0000D0 26                     430 	.db #0x26	; 38
      0000D1 26                     431 	.db #0x26	; 38
      0000D2 26                     432 	.db #0x26	; 38
      0000D3 26                     433 	.db #0x26	; 38
      0000D4 26                     434 	.db #0x26	; 38
      0000D5 26                     435 	.db #0x26	; 38
      0000D6 26                     436 	.db #0x26	; 38
      0000D7 26                     437 	.db #0x26	; 38
      0000D8 26                     438 	.db #0x26	; 38
      0000D9 26                     439 	.db #0x26	; 38
      0000DA 26                     440 	.db #0x26	; 38
      0000DB 26                     441 	.db #0x26	; 38
      0000DC 26                     442 	.db #0x26	; 38
      0000DD 26                     443 	.db #0x26	; 38
      0000DE 26                     444 	.db #0x26	; 38
      0000DF 26                     445 	.db #0x26	; 38
      0000E0 26                     446 	.db #0x26	; 38
      0000E1 26                     447 	.db #0x26	; 38
      0000E2 26                     448 	.db #0x26	; 38
      0000E3 26                     449 	.db #0x26	; 38
      0000E4 26                     450 	.db #0x26	; 38
      0000E5 26                     451 	.db #0x26	; 38
      0000E6 26                     452 	.db #0x26	; 38
      0000E7 26                     453 	.db #0x26	; 38
      0000E8 26                     454 	.db #0x26	; 38
      0000E9 26                     455 	.db #0x26	; 38
      0000EA 26                     456 	.db #0x26	; 38
      0000EB 26                     457 	.db #0x26	; 38
      0000EC 26                     458 	.db #0x26	; 38
      0000ED 26                     459 	.db #0x26	; 38
      0000EE 26                     460 	.db #0x26	; 38
      0000EF 26                     461 	.db #0x26	; 38
      0000F0 26                     462 	.db #0x26	; 38
      0000F1 26                     463 	.db #0x26	; 38
      0000F2 26                     464 	.db #0x26	; 38
      0000F3 26                     465 	.db #0x26	; 38
      0000F4 26                     466 	.db #0x26	; 38
      0000F5 26                     467 	.db #0x26	; 38
      0000F6 26                     468 	.db #0x26	; 38
      0000F7 26                     469 	.db #0x26	; 38
      0000F8 2B                     470 	.db #0x2b	; 43
      0000F9 26                     471 	.db #0x26	; 38
      0000FA 26                     472 	.db #0x26	; 38
      0000FB 26                     473 	.db #0x26	; 38
      0000FC 26                     474 	.db #0x26	; 38
      0000FD 26                     475 	.db #0x26	; 38
      0000FE 26                     476 	.db #0x26	; 38
      0000FF 2B                     477 	.db #0x2b	; 43
      000100 26                     478 	.db #0x26	; 38
      000101 26                     479 	.db #0x26	; 38
      000102 26                     480 	.db #0x26	; 38
      000103 26                     481 	.db #0x26	; 38
      000104 26                     482 	.db #0x26	; 38
      000105 26                     483 	.db #0x26	; 38
      000106 26                     484 	.db #0x26	; 38
      000107 26                     485 	.db #0x26	; 38
      000108 26                     486 	.db #0x26	; 38
      000109 26                     487 	.db #0x26	; 38
      00010A 26                     488 	.db #0x26	; 38
      00010B 26                     489 	.db #0x26	; 38
      00010C 2B                     490 	.db #0x2b	; 43
      00010D 26                     491 	.db #0x26	; 38
      00010E 26                     492 	.db #0x26	; 38
      00010F 26                     493 	.db #0x26	; 38
      000110 26                     494 	.db #0x26	; 38
      000111 26                     495 	.db #0x26	; 38
      000112 26                     496 	.db #0x26	; 38
      000113 26                     497 	.db #0x26	; 38
      000114 2C                     498 	.db #0x2c	; 44
      000115 26                     499 	.db #0x26	; 38
      000116 26                     500 	.db #0x26	; 38
      000117 26                     501 	.db #0x26	; 38
      000118 26                     502 	.db #0x26	; 38
      000119 26                     503 	.db #0x26	; 38
      00011A 26                     504 	.db #0x26	; 38
      00011B 26                     505 	.db #0x26	; 38
      00011C 26                     506 	.db #0x26	; 38
      00011D 26                     507 	.db #0x26	; 38
      00011E 26                     508 	.db #0x26	; 38
      00011F 26                     509 	.db #0x26	; 38
      000120 26                     510 	.db #0x26	; 38
      000121 26                     511 	.db #0x26	; 38
      000122 26                     512 	.db #0x26	; 38
      000123 26                     513 	.db #0x26	; 38
      000124 26                     514 	.db #0x26	; 38
      000125 26                     515 	.db #0x26	; 38
      000126 26                     516 	.db #0x26	; 38
      000127 26                     517 	.db #0x26	; 38
      000128 26                     518 	.db #0x26	; 38
      000129 2C                     519 	.db #0x2c	; 44
      00012A 26                     520 	.db #0x26	; 38
      00012B 26                     521 	.db #0x26	; 38
      00012C 26                     522 	.db #0x26	; 38
      00012D 26                     523 	.db #0x26	; 38
      00012E 25                     524 	.db #0x25	; 37
      00012F 26                     525 	.db #0x26	; 38
      000130 26                     526 	.db #0x26	; 38
      000131 26                     527 	.db #0x26	; 38
      000132 26                     528 	.db #0x26	; 38
      000133 26                     529 	.db #0x26	; 38
      000134 26                     530 	.db #0x26	; 38
      000135 26                     531 	.db #0x26	; 38
      000136 26                     532 	.db #0x26	; 38
      000137 26                     533 	.db #0x26	; 38
      000138 26                     534 	.db #0x26	; 38
      000139 26                     535 	.db #0x26	; 38
      00013A 26                     536 	.db #0x26	; 38
      00013B 26                     537 	.db #0x26	; 38
      00013C 2C                     538 	.db #0x2c	; 44
      00013D 26                     539 	.db #0x26	; 38
      00013E 26                     540 	.db #0x26	; 38
      00013F 26                     541 	.db #0x26	; 38
      000140 26                     542 	.db #0x26	; 38
      000141 26                     543 	.db #0x26	; 38
      000142 26                     544 	.db #0x26	; 38
      000143 26                     545 	.db #0x26	; 38
      000144 2B                     546 	.db #0x2b	; 43
      000145 26                     547 	.db #0x26	; 38
      000146 26                     548 	.db #0x26	; 38
      000147 26                     549 	.db #0x26	; 38
      000148 26                     550 	.db #0x26	; 38
      000149 26                     551 	.db #0x26	; 38
      00014A 26                     552 	.db #0x26	; 38
      00014B 26                     553 	.db #0x26	; 38
      00014C 26                     554 	.db #0x26	; 38
      00014D 26                     555 	.db #0x26	; 38
      00014E 26                     556 	.db #0x26	; 38
      00014F 26                     557 	.db #0x26	; 38
      000150 26                     558 	.db #0x26	; 38
      000151 26                     559 	.db #0x26	; 38
      000152 26                     560 	.db #0x26	; 38
      000153 26                     561 	.db #0x26	; 38
      000154 26                     562 	.db #0x26	; 38
      000155 26                     563 	.db #0x26	; 38
      000156 26                     564 	.db #0x26	; 38
      000157 26                     565 	.db #0x26	; 38
      000158 26                     566 	.db #0x26	; 38
      000159 26                     567 	.db #0x26	; 38
      00015A 26                     568 	.db #0x26	; 38
      00015B 26                     569 	.db #0x26	; 38
      00015C 26                     570 	.db #0x26	; 38
      00015D 26                     571 	.db #0x26	; 38
      00015E 26                     572 	.db #0x26	; 38
      00015F 26                     573 	.db #0x26	; 38
      000160 2C                     574 	.db #0x2c	; 44
      000161 26                     575 	.db #0x26	; 38
      000162 26                     576 	.db #0x26	; 38
      000163 26                     577 	.db #0x26	; 38
      000164 26                     578 	.db #0x26	; 38
      000165 26                     579 	.db #0x26	; 38
      000166 26                     580 	.db #0x26	; 38
      000167 26                     581 	.db #0x26	; 38
      000168 26                     582 	.db #0x26	; 38
      000169 26                     583 	.db #0x26	; 38
      00016A 26                     584 	.db #0x26	; 38
      00016B 26                     585 	.db #0x26	; 38
      00016C 26                     586 	.db #0x26	; 38
      00016D 26                     587 	.db #0x26	; 38
      00016E 26                     588 	.db #0x26	; 38
      00016F 26                     589 	.db #0x26	; 38
      000170 26                     590 	.db #0x26	; 38
      000171 26                     591 	.db #0x26	; 38
      000172 26                     592 	.db #0x26	; 38
      000173 26                     593 	.db #0x26	; 38
      000174 26                     594 	.db #0x26	; 38
      000175 26                     595 	.db #0x26	; 38
      000176 26                     596 	.db #0x26	; 38
      000177 26                     597 	.db #0x26	; 38
      000178 26                     598 	.db #0x26	; 38
      000179 26                     599 	.db #0x26	; 38
      00017A 26                     600 	.db #0x26	; 38
      00017B 26                     601 	.db #0x26	; 38
      00017C 26                     602 	.db #0x26	; 38
      00017D 26                     603 	.db #0x26	; 38
      00017E 26                     604 	.db #0x26	; 38
      00017F 26                     605 	.db #0x26	; 38
      000180 26                     606 	.db #0x26	; 38
      000181 26                     607 	.db #0x26	; 38
      000182 26                     608 	.db #0x26	; 38
      000183 26                     609 	.db #0x26	; 38
      000184 26                     610 	.db #0x26	; 38
      000185 26                     611 	.db #0x26	; 38
      000186 26                     612 	.db #0x26	; 38
      000187 26                     613 	.db #0x26	; 38
      000188 26                     614 	.db #0x26	; 38
      000189 26                     615 	.db #0x26	; 38
      00018A 26                     616 	.db #0x26	; 38
      00018B 26                     617 	.db #0x26	; 38
      00018C 26                     618 	.db #0x26	; 38
      00018D 26                     619 	.db #0x26	; 38
      00018E 26                     620 	.db #0x26	; 38
      00018F 26                     621 	.db #0x26	; 38
      000190 26                     622 	.db #0x26	; 38
      000191 26                     623 	.db #0x26	; 38
      000192 26                     624 	.db #0x26	; 38
      000193 26                     625 	.db #0x26	; 38
      000194 26                     626 	.db #0x26	; 38
      000195 2B                     627 	.db #0x2b	; 43
      000196 26                     628 	.db #0x26	; 38
      000197 26                     629 	.db #0x26	; 38
      000198 26                     630 	.db #0x26	; 38
      000199 26                     631 	.db #0x26	; 38
      00019A 26                     632 	.db #0x26	; 38
      00019B 26                     633 	.db #0x26	; 38
      00019C 26                     634 	.db #0x26	; 38
      00019D 26                     635 	.db #0x26	; 38
      00019E 26                     636 	.db #0x26	; 38
      00019F 26                     637 	.db #0x26	; 38
      0001A0 26                     638 	.db #0x26	; 38
      0001A1 26                     639 	.db #0x26	; 38
      0001A2 26                     640 	.db #0x26	; 38
      0001A3 26                     641 	.db #0x26	; 38
      0001A4 26                     642 	.db #0x26	; 38
      0001A5 26                     643 	.db #0x26	; 38
      0001A6 25                     644 	.db #0x25	; 37
      0001A7 26                     645 	.db #0x26	; 38
      0001A8 26                     646 	.db #0x26	; 38
      0001A9 26                     647 	.db #0x26	; 38
      0001AA 2B                     648 	.db #0x2b	; 43
      0001AB 26                     649 	.db #0x26	; 38
      0001AC 26                     650 	.db #0x26	; 38
      0001AD 26                     651 	.db #0x26	; 38
      0001AE 26                     652 	.db #0x26	; 38
      0001AF 26                     653 	.db #0x26	; 38
      0001B0 26                     654 	.db #0x26	; 38
      0001B1 26                     655 	.db #0x26	; 38
      0001B2 26                     656 	.db #0x26	; 38
      0001B3 26                     657 	.db #0x26	; 38
      0001B4 26                     658 	.db #0x26	; 38
      0001B5 26                     659 	.db #0x26	; 38
      0001B6 26                     660 	.db #0x26	; 38
      0001B7 26                     661 	.db #0x26	; 38
      0001B8 26                     662 	.db #0x26	; 38
      0001B9 26                     663 	.db #0x26	; 38
      0001BA 26                     664 	.db #0x26	; 38
      0001BB 26                     665 	.db #0x26	; 38
      0001BC 26                     666 	.db #0x26	; 38
      0001BD 26                     667 	.db #0x26	; 38
      0001BE 26                     668 	.db #0x26	; 38
      0001BF 26                     669 	.db #0x26	; 38
      0001C0 26                     670 	.db #0x26	; 38
      0001C1 26                     671 	.db #0x26	; 38
      0001C2 26                     672 	.db #0x26	; 38
      0001C3 26                     673 	.db #0x26	; 38
      0001C4 2B                     674 	.db #0x2b	; 43
      0001C5 26                     675 	.db #0x26	; 38
      0001C6 26                     676 	.db #0x26	; 38
      0001C7 26                     677 	.db #0x26	; 38
      0001C8 26                     678 	.db #0x26	; 38
      0001C9 26                     679 	.db #0x26	; 38
      0001CA 26                     680 	.db #0x26	; 38
      0001CB 26                     681 	.db #0x26	; 38
      0001CC 26                     682 	.db #0x26	; 38
      0001CD 26                     683 	.db #0x26	; 38
      0001CE 26                     684 	.db #0x26	; 38
      0001CF 26                     685 	.db #0x26	; 38
      0001D0 26                     686 	.db #0x26	; 38
      0001D1 26                     687 	.db #0x26	; 38
      0001D2 26                     688 	.db #0x26	; 38
      0001D3 26                     689 	.db #0x26	; 38
      0001D4 26                     690 	.db #0x26	; 38
      0001D5 26                     691 	.db #0x26	; 38
      0001D6 26                     692 	.db #0x26	; 38
      0001D7 26                     693 	.db #0x26	; 38
      0001D8 26                     694 	.db #0x26	; 38
      0001D9 26                     695 	.db #0x26	; 38
      0001DA 27                     696 	.db #0x27	; 39
      0001DB 28                     697 	.db #0x28	; 40
      0001DC 26                     698 	.db #0x26	; 38
      0001DD 26                     699 	.db #0x26	; 38
      0001DE 26                     700 	.db #0x26	; 38
      0001DF 26                     701 	.db #0x26	; 38
      0001E0 26                     702 	.db #0x26	; 38
      0001E1 26                     703 	.db #0x26	; 38
      0001E2 26                     704 	.db #0x26	; 38
      0001E3 26                     705 	.db #0x26	; 38
      0001E4 26                     706 	.db #0x26	; 38
      0001E5 26                     707 	.db #0x26	; 38
      0001E6 26                     708 	.db #0x26	; 38
      0001E7 26                     709 	.db #0x26	; 38
      0001E8 26                     710 	.db #0x26	; 38
      0001E9 26                     711 	.db #0x26	; 38
      0001EA 26                     712 	.db #0x26	; 38
      0001EB 26                     713 	.db #0x26	; 38
      0001EC 26                     714 	.db #0x26	; 38
      0001ED 26                     715 	.db #0x26	; 38
      0001EE 26                     716 	.db #0x26	; 38
      0001EF 26                     717 	.db #0x26	; 38
      0001F0 26                     718 	.db #0x26	; 38
      0001F1 26                     719 	.db #0x26	; 38
      0001F2 26                     720 	.db #0x26	; 38
      0001F3 26                     721 	.db #0x26	; 38
      0001F4 26                     722 	.db #0x26	; 38
      0001F5 26                     723 	.db #0x26	; 38
      0001F6 26                     724 	.db #0x26	; 38
      0001F7 26                     725 	.db #0x26	; 38
      0001F8 26                     726 	.db #0x26	; 38
      0001F9 26                     727 	.db #0x26	; 38
      0001FA 2A                     728 	.db #0x2a	; 42
      0001FB 29                     729 	.db #0x29	; 41
      0001FC 26                     730 	.db #0x26	; 38
      0001FD 26                     731 	.db #0x26	; 38
      0001FE 26                     732 	.db #0x26	; 38
      0001FF 26                     733 	.db #0x26	; 38
      000200 26                     734 	.db #0x26	; 38
      000201 26                     735 	.db #0x26	; 38
      000202 26                     736 	.db #0x26	; 38
      000203 26                     737 	.db #0x26	; 38
      000204 26                     738 	.db #0x26	; 38
      000205 26                     739 	.db #0x26	; 38
      000206 26                     740 	.db #0x26	; 38
      000207 26                     741 	.db #0x26	; 38
      000208 26                     742 	.db #0x26	; 38
      000209 26                     743 	.db #0x26	; 38
      00020A 26                     744 	.db #0x26	; 38
      00020B 26                     745 	.db #0x26	; 38
      00020C 26                     746 	.db #0x26	; 38
      00020D 26                     747 	.db #0x26	; 38
      00020E 27                     748 	.db #0x27	; 39
      00020F 28                     749 	.db #0x28	; 40
      000210 26                     750 	.db #0x26	; 38
      000211 26                     751 	.db #0x26	; 38
      000212 26                     752 	.db #0x26	; 38
      000213 26                     753 	.db #0x26	; 38
      000214 26                     754 	.db #0x26	; 38
      000215 26                     755 	.db #0x26	; 38
      000216 26                     756 	.db #0x26	; 38
      000217 26                     757 	.db #0x26	; 38
      000218 26                     758 	.db #0x26	; 38
      000219 26                     759 	.db #0x26	; 38
      00021A 26                     760 	.db #0x26	; 38
      00021B 26                     761 	.db #0x26	; 38
      00021C 26                     762 	.db #0x26	; 38
      00021D 26                     763 	.db #0x26	; 38
      00021E 26                     764 	.db #0x26	; 38
      00021F 2C                     765 	.db #0x2c	; 44
      000220 26                     766 	.db #0x26	; 38
      000221 26                     767 	.db #0x26	; 38
      000222 26                     768 	.db #0x26	; 38
      000223 26                     769 	.db #0x26	; 38
      000224 26                     770 	.db #0x26	; 38
      000225 26                     771 	.db #0x26	; 38
      000226 26                     772 	.db #0x26	; 38
      000227 26                     773 	.db #0x26	; 38
      000228 26                     774 	.db #0x26	; 38
      000229 26                     775 	.db #0x26	; 38
      00022A 26                     776 	.db #0x26	; 38
      00022B 26                     777 	.db #0x26	; 38
      00022C 26                     778 	.db #0x26	; 38
      00022D 26                     779 	.db #0x26	; 38
      00022E 2A                     780 	.db #0x2a	; 42
      00022F 29                     781 	.db #0x29	; 41
      000230 26                     782 	.db #0x26	; 38
      000231 26                     783 	.db #0x26	; 38
      000232 26                     784 	.db #0x26	; 38
      000233 26                     785 	.db #0x26	; 38
      000234 26                     786 	.db #0x26	; 38
      000235 26                     787 	.db #0x26	; 38
      000236 26                     788 	.db #0x26	; 38
      000237 26                     789 	.db #0x26	; 38
      000238 26                     790 	.db #0x26	; 38
      000239 26                     791 	.db #0x26	; 38
      00023A 26                     792 	.db #0x26	; 38
      00023B 26                     793 	.db #0x26	; 38
      00023C 26                     794 	.db #0x26	; 38
      00023D 25                     795 	.db #0x25	; 37
      00023E 26                     796 	.db #0x26	; 38
      00023F 26                     797 	.db #0x26	; 38
      000240 26                     798 	.db #0x26	; 38
      000241 26                     799 	.db #0x26	; 38
      000242 26                     800 	.db #0x26	; 38
      000243 26                     801 	.db #0x26	; 38
      000244 2C                     802 	.db #0x2c	; 44
      000245 26                     803 	.db #0x26	; 38
      000246 26                     804 	.db #0x26	; 38
      000247 26                     805 	.db #0x26	; 38
      000248 26                     806 	.db #0x26	; 38
      000249 26                     807 	.db #0x26	; 38
      00024A 26                     808 	.db #0x26	; 38
      00024B 26                     809 	.db #0x26	; 38
      00024C 26                     810 	.db #0x26	; 38
      00024D 26                     811 	.db #0x26	; 38
      00024E 26                     812 	.db #0x26	; 38
      00024F 26                     813 	.db #0x26	; 38
      000250 26                     814 	.db #0x26	; 38
      000251 26                     815 	.db #0x26	; 38
      000252 26                     816 	.db #0x26	; 38
      000253 26                     817 	.db #0x26	; 38
      000254 26                     818 	.db #0x26	; 38
      000255 26                     819 	.db #0x26	; 38
      000256 26                     820 	.db #0x26	; 38
      000257 26                     821 	.db #0x26	; 38
      000258 26                     822 	.db #0x26	; 38
      000259 26                     823 	.db #0x26	; 38
      00025A 26                     824 	.db #0x26	; 38
      00025B 26                     825 	.db #0x26	; 38
      00025C 26                     826 	.db #0x26	; 38
      00025D 26                     827 	.db #0x26	; 38
      00025E 26                     828 	.db #0x26	; 38
      00025F 26                     829 	.db #0x26	; 38
      000260 26                     830 	.db #0x26	; 38
      000261 26                     831 	.db #0x26	; 38
      000262 26                     832 	.db #0x26	; 38
      000263 26                     833 	.db #0x26	; 38
      000264 26                     834 	.db #0x26	; 38
      000265 26                     835 	.db #0x26	; 38
      000266 26                     836 	.db #0x26	; 38
      000267 26                     837 	.db #0x26	; 38
      000268 26                     838 	.db #0x26	; 38
      000269 26                     839 	.db #0x26	; 38
      00026A 2C                     840 	.db #0x2c	; 44
      00026B 26                     841 	.db #0x26	; 38
      00026C 26                     842 	.db #0x26	; 38
      00026D 26                     843 	.db #0x26	; 38
      00026E 26                     844 	.db #0x26	; 38
      00026F 26                     845 	.db #0x26	; 38
      000270 26                     846 	.db #0x26	; 38
      000271 26                     847 	.db #0x26	; 38
      000272 26                     848 	.db #0x26	; 38
      000273 26                     849 	.db #0x26	; 38
      000274 26                     850 	.db #0x26	; 38
      000275 26                     851 	.db #0x26	; 38
      000276 26                     852 	.db #0x26	; 38
      000277 26                     853 	.db #0x26	; 38
      000278 26                     854 	.db #0x26	; 38
      000279 2C                     855 	.db #0x2c	; 44
      00027A 26                     856 	.db #0x26	; 38
      00027B 26                     857 	.db #0x26	; 38
      00027C 26                     858 	.db #0x26	; 38
      00027D 26                     859 	.db #0x26	; 38
      00027E 26                     860 	.db #0x26	; 38
      00027F 26                     861 	.db #0x26	; 38
      000280 26                     862 	.db #0x26	; 38
      000281 26                     863 	.db #0x26	; 38
      000282 26                     864 	.db #0x26	; 38
      000283 26                     865 	.db #0x26	; 38
      000284 26                     866 	.db #0x26	; 38
      000285 26                     867 	.db #0x26	; 38
      000286 26                     868 	.db #0x26	; 38
      000287 26                     869 	.db #0x26	; 38
      000288 26                     870 	.db #0x26	; 38
      000289 26                     871 	.db #0x26	; 38
      00028A 26                     872 	.db #0x26	; 38
      00028B 26                     873 	.db #0x26	; 38
      00028C 26                     874 	.db #0x26	; 38
      00028D 26                     875 	.db #0x26	; 38
      00028E 26                     876 	.db #0x26	; 38
      00028F 26                     877 	.db #0x26	; 38
      000290 26                     878 	.db #0x26	; 38
      000291 26                     879 	.db #0x26	; 38
      000292 26                     880 	.db #0x26	; 38
      000293 26                     881 	.db #0x26	; 38
      000294 26                     882 	.db #0x26	; 38
      000295 2B                     883 	.db #0x2b	; 43
      000296 26                     884 	.db #0x26	; 38
      000297 26                     885 	.db #0x26	; 38
      000298 26                     886 	.db #0x26	; 38
      000299 26                     887 	.db #0x26	; 38
      00029A 26                     888 	.db #0x26	; 38
      00029B 26                     889 	.db #0x26	; 38
      00029C 26                     890 	.db #0x26	; 38
      00029D 26                     891 	.db #0x26	; 38
      00029E 26                     892 	.db #0x26	; 38
      00029F 26                     893 	.db #0x26	; 38
      0002A0 26                     894 	.db #0x26	; 38
      0002A1 26                     895 	.db #0x26	; 38
      0002A2 26                     896 	.db #0x26	; 38
      0002A3 26                     897 	.db #0x26	; 38
      0002A4 26                     898 	.db #0x26	; 38
      0002A5 26                     899 	.db #0x26	; 38
      0002A6 26                     900 	.db #0x26	; 38
      0002A7 28                     901 	.db #0x28	; 40
      0002A8 26                     902 	.db #0x26	; 38
      0002A9 26                     903 	.db #0x26	; 38
      0002AA 26                     904 	.db #0x26	; 38
      0002AB 26                     905 	.db #0x26	; 38
      0002AC 26                     906 	.db #0x26	; 38
      0002AD 26                     907 	.db #0x26	; 38
      0002AE 26                     908 	.db #0x26	; 38
      0002AF 26                     909 	.db #0x26	; 38
      0002B0 26                     910 	.db #0x26	; 38
      0002B1 26                     911 	.db #0x26	; 38
      0002B2 26                     912 	.db #0x26	; 38
      0002B3 26                     913 	.db #0x26	; 38
      0002B4 26                     914 	.db #0x26	; 38
      0002B5 26                     915 	.db #0x26	; 38
      0002B6 26                     916 	.db #0x26	; 38
      0002B7 26                     917 	.db #0x26	; 38
      0002B8 26                     918 	.db #0x26	; 38
      0002B9 26                     919 	.db #0x26	; 38
      0002BA 26                     920 	.db #0x26	; 38
      0002BB 26                     921 	.db #0x26	; 38
      0002BC 26                     922 	.db #0x26	; 38
      0002BD 26                     923 	.db #0x26	; 38
      0002BE 26                     924 	.db #0x26	; 38
      0002BF 26                     925 	.db #0x26	; 38
      0002C0 2B                     926 	.db #0x2b	; 43
      0002C1 26                     927 	.db #0x26	; 38
      0002C2 26                     928 	.db #0x26	; 38
      0002C3 26                     929 	.db #0x26	; 38
      0002C4 26                     930 	.db #0x26	; 38
      0002C5 26                     931 	.db #0x26	; 38
      0002C6 27                     932 	.db #0x27	; 39
      0002C7 29                     933 	.db #0x29	; 41
      0002C8 26                     934 	.db #0x26	; 38
      0002C9 26                     935 	.db #0x26	; 38
      0002CA 26                     936 	.db #0x26	; 38
      0002CB 26                     937 	.db #0x26	; 38
      0002CC 26                     938 	.db #0x26	; 38
      0002CD 26                     939 	.db #0x26	; 38
      0002CE 2B                     940 	.db #0x2b	; 43
      0002CF 26                     941 	.db #0x26	; 38
      0002D0 26                     942 	.db #0x26	; 38
      0002D1 26                     943 	.db #0x26	; 38
      0002D2 26                     944 	.db #0x26	; 38
      0002D3 26                     945 	.db #0x26	; 38
      0002D4 26                     946 	.db #0x26	; 38
      0002D5 26                     947 	.db #0x26	; 38
      0002D6 26                     948 	.db #0x26	; 38
      0002D7 26                     949 	.db #0x26	; 38
      0002D8 26                     950 	.db #0x26	; 38
      0002D9 26                     951 	.db #0x26	; 38
      0002DA 26                     952 	.db #0x26	; 38
      0002DB 26                     953 	.db #0x26	; 38
      0002DC 26                     954 	.db #0x26	; 38
      0002DD 26                     955 	.db #0x26	; 38
      0002DE 26                     956 	.db #0x26	; 38
      0002DF 26                     957 	.db #0x26	; 38
      0002E0 26                     958 	.db #0x26	; 38
      0002E1 26                     959 	.db #0x26	; 38
      0002E2 26                     960 	.db #0x26	; 38
      0002E3 26                     961 	.db #0x26	; 38
      0002E4 26                     962 	.db #0x26	; 38
      0002E5 26                     963 	.db #0x26	; 38
      0002E6 2A                     964 	.db #0x2a	; 42
      0002E7 26                     965 	.db #0x26	; 38
      0002E8 26                     966 	.db #0x26	; 38
      0002E9 26                     967 	.db #0x26	; 38
      0002EA 26                     968 	.db #0x26	; 38
      0002EB 26                     969 	.db #0x26	; 38
      0002EC 26                     970 	.db #0x26	; 38
      0002ED 26                     971 	.db #0x26	; 38
      0002EE 26                     972 	.db #0x26	; 38
      0002EF 26                     973 	.db #0x26	; 38
      0002F0 26                     974 	.db #0x26	; 38
      0002F1 26                     975 	.db #0x26	; 38
      0002F2 2C                     976 	.db #0x2c	; 44
      0002F3 26                     977 	.db #0x26	; 38
      0002F4 26                     978 	.db #0x26	; 38
      0002F5 26                     979 	.db #0x26	; 38
      0002F6 26                     980 	.db #0x26	; 38
      0002F7 26                     981 	.db #0x26	; 38
      0002F8 26                     982 	.db #0x26	; 38
      0002F9 26                     983 	.db #0x26	; 38
      0002FA 26                     984 	.db #0x26	; 38
      0002FB 26                     985 	.db #0x26	; 38
      0002FC 26                     986 	.db #0x26	; 38
      0002FD 26                     987 	.db #0x26	; 38
      0002FE 26                     988 	.db #0x26	; 38
      0002FF 26                     989 	.db #0x26	; 38
      000300 26                     990 	.db #0x26	; 38
      000301 26                     991 	.db #0x26	; 38
      000302 26                     992 	.db #0x26	; 38
      000303 26                     993 	.db #0x26	; 38
      000304 26                     994 	.db #0x26	; 38
      000305 26                     995 	.db #0x26	; 38
      000306 26                     996 	.db #0x26	; 38
      000307 26                     997 	.db #0x26	; 38
      000308 26                     998 	.db #0x26	; 38
      000309 26                     999 	.db #0x26	; 38
      00030A 26                    1000 	.db #0x26	; 38
      00030B 26                    1001 	.db #0x26	; 38
      00030C 26                    1002 	.db #0x26	; 38
      00030D 26                    1003 	.db #0x26	; 38
      00030E 26                    1004 	.db #0x26	; 38
      00030F 26                    1005 	.db #0x26	; 38
      000310 26                    1006 	.db #0x26	; 38
      000311 26                    1007 	.db #0x26	; 38
      000312 26                    1008 	.db #0x26	; 38
      000313 26                    1009 	.db #0x26	; 38
      000314 26                    1010 	.db #0x26	; 38
      000315 26                    1011 	.db #0x26	; 38
      000316 26                    1012 	.db #0x26	; 38
      000317 2B                    1013 	.db #0x2b	; 43
      000318 26                    1014 	.db #0x26	; 38
      000319 26                    1015 	.db #0x26	; 38
      00031A 26                    1016 	.db #0x26	; 38
      00031B 26                    1017 	.db #0x26	; 38
      00031C 26                    1018 	.db #0x26	; 38
      00031D 26                    1019 	.db #0x26	; 38
      00031E 26                    1020 	.db #0x26	; 38
      00031F 26                    1021 	.db #0x26	; 38
      000320 26                    1022 	.db #0x26	; 38
      000321 26                    1023 	.db #0x26	; 38
      000322 26                    1024 	.db #0x26	; 38
      000323 26                    1025 	.db #0x26	; 38
      000324 26                    1026 	.db #0x26	; 38
      000325 26                    1027 	.db #0x26	; 38
      000326 26                    1028 	.db #0x26	; 38
      000327 26                    1029 	.db #0x26	; 38
      000328 26                    1030 	.db #0x26	; 38
      000329 26                    1031 	.db #0x26	; 38
      00032A 26                    1032 	.db #0x26	; 38
      00032B 26                    1033 	.db #0x26	; 38
      00032C 26                    1034 	.db #0x26	; 38
      00032D 26                    1035 	.db #0x26	; 38
      00032E 26                    1036 	.db #0x26	; 38
      00032F 26                    1037 	.db #0x26	; 38
      000330 26                    1038 	.db #0x26	; 38
      000331 26                    1039 	.db #0x26	; 38
      000332 26                    1040 	.db #0x26	; 38
      000333 26                    1041 	.db #0x26	; 38
      000334 26                    1042 	.db #0x26	; 38
      000335 26                    1043 	.db #0x26	; 38
      000336 26                    1044 	.db #0x26	; 38
      000337 26                    1045 	.db #0x26	; 38
      000338 26                    1046 	.db #0x26	; 38
      000339 26                    1047 	.db #0x26	; 38
      00033A 26                    1048 	.db #0x26	; 38
      00033B 26                    1049 	.db #0x26	; 38
      00033C 26                    1050 	.db #0x26	; 38
      00033D 26                    1051 	.db #0x26	; 38
      00033E 2B                    1052 	.db #0x2b	; 43
      00033F 26                    1053 	.db #0x26	; 38
      000340 26                    1054 	.db #0x26	; 38
      000341 26                    1055 	.db #0x26	; 38
      000342 26                    1056 	.db #0x26	; 38
      000343 26                    1057 	.db #0x26	; 38
      000344 26                    1058 	.db #0x26	; 38
      000345 26                    1059 	.db #0x26	; 38
      000346 26                    1060 	.db #0x26	; 38
      000347 26                    1061 	.db #0x26	; 38
      000348 26                    1062 	.db #0x26	; 38
      000349 26                    1063 	.db #0x26	; 38
      00034A 2B                    1064 	.db #0x2b	; 43
      00034B 26                    1065 	.db #0x26	; 38
      00034C 26                    1066 	.db #0x26	; 38
      00034D 26                    1067 	.db #0x26	; 38
      00034E 26                    1068 	.db #0x26	; 38
      00034F 26                    1069 	.db #0x26	; 38
      000350 26                    1070 	.db #0x26	; 38
      000351 26                    1071 	.db #0x26	; 38
      000352 26                    1072 	.db #0x26	; 38
      000353 26                    1073 	.db #0x26	; 38
      000354 26                    1074 	.db #0x26	; 38
      000355 26                    1075 	.db #0x26	; 38
      000356 26                    1076 	.db #0x26	; 38
      000357 26                    1077 	.db #0x26	; 38
      000358 26                    1078 	.db #0x26	; 38
      000359 26                    1079 	.db #0x26	; 38
      00035A 26                    1080 	.db #0x26	; 38
      00035B 26                    1081 	.db #0x26	; 38
      00035C 26                    1082 	.db #0x26	; 38
      00035D 26                    1083 	.db #0x26	; 38
      00035E 26                    1084 	.db #0x26	; 38
      00035F 26                    1085 	.db #0x26	; 38
      000360 26                    1086 	.db #0x26	; 38
      000361 26                    1087 	.db #0x26	; 38
      000362 26                    1088 	.db #0x26	; 38
      000363 26                    1089 	.db #0x26	; 38
      000364 26                    1090 	.db #0x26	; 38
      000365 26                    1091 	.db #0x26	; 38
      000366 2C                    1092 	.db #0x2c	; 44
      000367 26                    1093 	.db #0x26	; 38
      000368 26                    1094 	.db #0x26	; 38
      000369 26                    1095 	.db #0x26	; 38
      00036A 26                    1096 	.db #0x26	; 38
      00036B 26                    1097 	.db #0x26	; 38
      00036C 26                    1098 	.db #0x26	; 38
      00036D 26                    1099 	.db #0x26	; 38
      00036E 26                    1100 	.db #0x26	; 38
      00036F 26                    1101 	.db #0x26	; 38
      000370 2B                    1102 	.db #0x2b	; 43
      000371 26                    1103 	.db #0x26	; 38
      000372 26                    1104 	.db #0x26	; 38
      000373 26                    1105 	.db #0x26	; 38
      000374 26                    1106 	.db #0x26	; 38
      000375 26                    1107 	.db #0x26	; 38
      000376 26                    1108 	.db #0x26	; 38
      000377 26                    1109 	.db #0x26	; 38
      000378 26                    1110 	.db #0x26	; 38
      000379 26                    1111 	.db #0x26	; 38
      00037A 26                    1112 	.db #0x26	; 38
      00037B 26                    1113 	.db #0x26	; 38
      00037C 26                    1114 	.db #0x26	; 38
      00037D 26                    1115 	.db #0x26	; 38
      00037E 26                    1116 	.db #0x26	; 38
      00037F 26                    1117 	.db #0x26	; 38
      000380 26                    1118 	.db #0x26	; 38
      000381 26                    1119 	.db #0x26	; 38
      000382 26                    1120 	.db #0x26	; 38
      000383 26                    1121 	.db #0x26	; 38
      000384 26                    1122 	.db #0x26	; 38
      000385 26                    1123 	.db #0x26	; 38
      000386 26                    1124 	.db #0x26	; 38
      000387 26                    1125 	.db #0x26	; 38
      000388 26                    1126 	.db #0x26	; 38
      000389 26                    1127 	.db #0x26	; 38
      00038A 26                    1128 	.db #0x26	; 38
      00038B 26                    1129 	.db #0x26	; 38
      00038C 26                    1130 	.db #0x26	; 38
      00038D 26                    1131 	.db #0x26	; 38
      00038E 26                    1132 	.db #0x26	; 38
      00038F 26                    1133 	.db #0x26	; 38
      000390 26                    1134 	.db #0x26	; 38
      000391 26                    1135 	.db #0x26	; 38
      000392 26                    1136 	.db #0x26	; 38
      000393 26                    1137 	.db #0x26	; 38
      000394 26                    1138 	.db #0x26	; 38
      000395 26                    1139 	.db #0x26	; 38
      000396 26                    1140 	.db #0x26	; 38
      000397 26                    1141 	.db #0x26	; 38
      000398 27                    1142 	.db #0x27	; 39
      000399 28                    1143 	.db #0x28	; 40
      00039A 26                    1144 	.db #0x26	; 38
      00039B 26                    1145 	.db #0x26	; 38
      00039C 26                    1146 	.db #0x26	; 38
      00039D 26                    1147 	.db #0x26	; 38
      00039E 26                    1148 	.db #0x26	; 38
      00039F 26                    1149 	.db #0x26	; 38
      0003A0 26                    1150 	.db #0x26	; 38
      0003A1 26                    1151 	.db #0x26	; 38
      0003A2 26                    1152 	.db #0x26	; 38
      0003A3 26                    1153 	.db #0x26	; 38
      0003A4 26                    1154 	.db #0x26	; 38
      0003A5 26                    1155 	.db #0x26	; 38
      0003A6 26                    1156 	.db #0x26	; 38
      0003A7 26                    1157 	.db #0x26	; 38
      0003A8 26                    1158 	.db #0x26	; 38
      0003A9 26                    1159 	.db #0x26	; 38
      0003AA 26                    1160 	.db #0x26	; 38
      0003AB 26                    1161 	.db #0x26	; 38
      0003AC 26                    1162 	.db #0x26	; 38
      0003AD 2B                    1163 	.db #0x2b	; 43
      0003AE 26                    1164 	.db #0x26	; 38
      0003AF 26                    1165 	.db #0x26	; 38
      0003B0 26                    1166 	.db #0x26	; 38
      0003B1 26                    1167 	.db #0x26	; 38
      0003B2 26                    1168 	.db #0x26	; 38
      0003B3 26                    1169 	.db #0x26	; 38
      0003B4 26                    1170 	.db #0x26	; 38
      0003B5 25                    1171 	.db #0x25	; 37
      0003B6 26                    1172 	.db #0x26	; 38
      0003B7 26                    1173 	.db #0x26	; 38
      0003B8 2A                    1174 	.db #0x2a	; 42
      0003B9 29                    1175 	.db #0x29	; 41
      0003BA 26                    1176 	.db #0x26	; 38
      0003BB 26                    1177 	.db #0x26	; 38
      0003BC 26                    1178 	.db #0x26	; 38
      0003BD 26                    1179 	.db #0x26	; 38
      0003BE 26                    1180 	.db #0x26	; 38
      0003BF 26                    1181 	.db #0x26	; 38
      0003C0 26                    1182 	.db #0x26	; 38
      0003C1 26                    1183 	.db #0x26	; 38
      0003C2 2B                    1184 	.db #0x2b	; 43
      0003C3 26                    1185 	.db #0x26	; 38
      0003C4 26                    1186 	.db #0x26	; 38
      0003C5 26                    1187 	.db #0x26	; 38
      0003C6 26                    1188 	.db #0x26	; 38
      0003C7 26                    1189 	.db #0x26	; 38
      0003C8 26                    1190 	.db #0x26	; 38
      0003C9 2C                    1191 	.db #0x2c	; 44
      0003CA 26                    1192 	.db #0x26	; 38
      0003CB 26                    1193 	.db #0x26	; 38
      0003CC 26                    1194 	.db #0x26	; 38
      0003CD 26                    1195 	.db #0x26	; 38
      0003CE 26                    1196 	.db #0x26	; 38
      0003CF 26                    1197 	.db #0x26	; 38
      0003D0 26                    1198 	.db #0x26	; 38
      0003D1 26                    1199 	.db #0x26	; 38
      0003D2 26                    1200 	.db #0x26	; 38
      0003D3 26                    1201 	.db #0x26	; 38
      0003D4 26                    1202 	.db #0x26	; 38
      0003D5 2C                    1203 	.db #0x2c	; 44
      0003D6 26                    1204 	.db #0x26	; 38
      0003D7 26                    1205 	.db #0x26	; 38
      0003D8 26                    1206 	.db #0x26	; 38
      0003D9 26                    1207 	.db #0x26	; 38
      0003DA 26                    1208 	.db #0x26	; 38
      0003DB 26                    1209 	.db #0x26	; 38
      0003DC 26                    1210 	.db #0x26	; 38
      0003DD 26                    1211 	.db #0x26	; 38
      0003DE 26                    1212 	.db #0x26	; 38
      0003DF 26                    1213 	.db #0x26	; 38
      0003E0 26                    1214 	.db #0x26	; 38
      0003E1 26                    1215 	.db #0x26	; 38
      0003E2 26                    1216 	.db #0x26	; 38
      0003E3 26                    1217 	.db #0x26	; 38
      0003E4 26                    1218 	.db #0x26	; 38
      0003E5 26                    1219 	.db #0x26	; 38
      0003E6 26                    1220 	.db #0x26	; 38
      0003E7 26                    1221 	.db #0x26	; 38
      0003E8 26                    1222 	.db #0x26	; 38
      0003E9 26                    1223 	.db #0x26	; 38
      0003EA 26                    1224 	.db #0x26	; 38
      0003EB 26                    1225 	.db #0x26	; 38
      0003EC 26                    1226 	.db #0x26	; 38
      0003ED 26                    1227 	.db #0x26	; 38
      0003EE 26                    1228 	.db #0x26	; 38
      0003EF 26                    1229 	.db #0x26	; 38
      0003F0 26                    1230 	.db #0x26	; 38
      0003F1 26                    1231 	.db #0x26	; 38
      0003F2 26                    1232 	.db #0x26	; 38
      0003F3 26                    1233 	.db #0x26	; 38
      0003F4 26                    1234 	.db #0x26	; 38
      0003F5 26                    1235 	.db #0x26	; 38
      0003F6 26                    1236 	.db #0x26	; 38
      0003F7 26                    1237 	.db #0x26	; 38
      0003F8 26                    1238 	.db #0x26	; 38
      0003F9 26                    1239 	.db #0x26	; 38
      0003FA 26                    1240 	.db #0x26	; 38
      0003FB 26                    1241 	.db #0x26	; 38
      0003FC 26                    1242 	.db #0x26	; 38
      0003FD 26                    1243 	.db #0x26	; 38
      0003FE 26                    1244 	.db #0x26	; 38
      0003FF 26                    1245 	.db #0x26	; 38
      000400 26                    1246 	.db #0x26	; 38
      000401 26                    1247 	.db #0x26	; 38
      000402 26                    1248 	.db #0x26	; 38
      000403 26                    1249 	.db #0x26	; 38
      000404 26                    1250 	.db #0x26	; 38
      000405 26                    1251 	.db #0x26	; 38
      000406 26                    1252 	.db #0x26	; 38
      000407 26                    1253 	.db #0x26	; 38
      000408 26                    1254 	.db #0x26	; 38
      000409 26                    1255 	.db #0x26	; 38
      00040A 26                    1256 	.db #0x26	; 38
      00040B 26                    1257 	.db #0x26	; 38
      00040C 26                    1258 	.db #0x26	; 38
      00040D 2B                    1259 	.db #0x2b	; 43
      00040E 26                    1260 	.db #0x26	; 38
      00040F 26                    1261 	.db #0x26	; 38
      000410 26                    1262 	.db #0x26	; 38
      000411 26                    1263 	.db #0x26	; 38
      000412 26                    1264 	.db #0x26	; 38
      000413 26                    1265 	.db #0x26	; 38
      000414 26                    1266 	.db #0x26	; 38
      000415 26                    1267 	.db #0x26	; 38
      000416 26                    1268 	.db #0x26	; 38
      000417 26                    1269 	.db #0x26	; 38
      000418 26                    1270 	.db #0x26	; 38
      000419 26                    1271 	.db #0x26	; 38
      00041A 26                    1272 	.db #0x26	; 38
      00041B 26                    1273 	.db #0x26	; 38
      00041C 26                    1274 	.db #0x26	; 38
      00041D 26                    1275 	.db #0x26	; 38
      00041E 26                    1276 	.db #0x26	; 38
      00041F 26                    1277 	.db #0x26	; 38
      000420 2B                    1278 	.db #0x2b	; 43
      000421 26                    1279 	.db #0x26	; 38
      000422 26                    1280 	.db #0x26	; 38
      000423 26                    1281 	.db #0x26	; 38
      000424 26                    1282 	.db #0x26	; 38
      000425 26                    1283 	.db #0x26	; 38
      000426 26                    1284 	.db #0x26	; 38
      000427 26                    1285 	.db #0x26	; 38
      000428 26                    1286 	.db #0x26	; 38
      000429 26                    1287 	.db #0x26	; 38
      00042A 26                    1288 	.db #0x26	; 38
      00042B 26                    1289 	.db #0x26	; 38
      00042C 26                    1290 	.db #0x26	; 38
      00042D 26                    1291 	.db #0x26	; 38
      00042E 26                    1292 	.db #0x26	; 38
      00042F 26                    1293 	.db #0x26	; 38
      000430 26                    1294 	.db #0x26	; 38
      000431 26                    1295 	.db #0x26	; 38
      000432 26                    1296 	.db #0x26	; 38
      000433 26                    1297 	.db #0x26	; 38
      000434 26                    1298 	.db #0x26	; 38
      000435 26                    1299 	.db #0x26	; 38
      000436 26                    1300 	.db #0x26	; 38
      000437 2C                    1301 	.db #0x2c	; 44
      000438 26                    1302 	.db #0x26	; 38
      000439 26                    1303 	.db #0x26	; 38
      00043A 26                    1304 	.db #0x26	; 38
      00043B 26                    1305 	.db #0x26	; 38
      00043C 26                    1306 	.db #0x26	; 38
      00043D 26                    1307 	.db #0x26	; 38
      00043E 26                    1308 	.db #0x26	; 38
      00043F 26                    1309 	.db #0x26	; 38
      000440 26                    1310 	.db #0x26	; 38
      000441 26                    1311 	.db #0x26	; 38
      000442 26                    1312 	.db #0x26	; 38
      000443 26                    1313 	.db #0x26	; 38
      000444 26                    1314 	.db #0x26	; 38
      000445 26                    1315 	.db #0x26	; 38
      000446 26                    1316 	.db #0x26	; 38
      000447 26                    1317 	.db #0x26	; 38
      000448 25                    1318 	.db #0x25	; 37
      000449 2C                    1319 	.db #0x2c	; 44
      00044A 26                    1320 	.db #0x26	; 38
      00044B 26                    1321 	.db #0x26	; 38
      00044C 26                    1322 	.db #0x26	; 38
      00044D 26                    1323 	.db #0x26	; 38
      00044E 26                    1324 	.db #0x26	; 38
      00044F 26                    1325 	.db #0x26	; 38
      000450 26                    1326 	.db #0x26	; 38
      000451 26                    1327 	.db #0x26	; 38
      000452 26                    1328 	.db #0x26	; 38
      000453 26                    1329 	.db #0x26	; 38
      000454 26                    1330 	.db #0x26	; 38
      000455 26                    1331 	.db #0x26	; 38
      000456 26                    1332 	.db #0x26	; 38
      000457 26                    1333 	.db #0x26	; 38
      000458 26                    1334 	.db #0x26	; 38
      000459 26                    1335 	.db #0x26	; 38
      00045A 2B                    1336 	.db #0x2b	; 43
      00045B 26                    1337 	.db #0x26	; 38
      00045C 26                    1338 	.db #0x26	; 38
      00045D 26                    1339 	.db #0x26	; 38
      00045E 26                    1340 	.db #0x26	; 38
      00045F 26                    1341 	.db #0x26	; 38
      000460 26                    1342 	.db #0x26	; 38
      000461 26                    1343 	.db #0x26	; 38
      000462 26                    1344 	.db #0x26	; 38
      000463 26                    1345 	.db #0x26	; 38
      000464 26                    1346 	.db #0x26	; 38
      000465 26                    1347 	.db #0x26	; 38
      000466 26                    1348 	.db #0x26	; 38
      000467 26                    1349 	.db #0x26	; 38
      000468 26                    1350 	.db #0x26	; 38
      000469 26                    1351 	.db #0x26	; 38
      00046A 26                    1352 	.db #0x26	; 38
      00046B 26                    1353 	.db #0x26	; 38
      00046C 26                    1354 	.db #0x26	; 38
      00046D 26                    1355 	.db #0x26	; 38
      00046E 26                    1356 	.db #0x26	; 38
      00046F 26                    1357 	.db #0x26	; 38
      000470 26                    1358 	.db #0x26	; 38
      000471 26                    1359 	.db #0x26	; 38
      000472 27                    1360 	.db #0x27	; 39
      000473 28                    1361 	.db #0x28	; 40
      000474 26                    1362 	.db #0x26	; 38
      000475 26                    1363 	.db #0x26	; 38
      000476 26                    1364 	.db #0x26	; 38
      000477 26                    1365 	.db #0x26	; 38
      000478 26                    1366 	.db #0x26	; 38
      000479 26                    1367 	.db #0x26	; 38
      00047A 26                    1368 	.db #0x26	; 38
      00047B 26                    1369 	.db #0x26	; 38
      00047C 26                    1370 	.db #0x26	; 38
      00047D 26                    1371 	.db #0x26	; 38
      00047E 26                    1372 	.db #0x26	; 38
      00047F 26                    1373 	.db #0x26	; 38
      000480 26                    1374 	.db #0x26	; 38
      000481 26                    1375 	.db #0x26	; 38
      000482 26                    1376 	.db #0x26	; 38
      000483 26                    1377 	.db #0x26	; 38
      000484 26                    1378 	.db #0x26	; 38
      000485 26                    1379 	.db #0x26	; 38
      000486 2B                    1380 	.db #0x2b	; 43
      000487                       1381 _backgroundtiles:
      000487 40                    1382 	.db #0x40	; 64
      000488 38                    1383 	.db #0x38	; 56	'8'
      000489 3A                    1384 	.db #0x3a	; 58
      00048A 44                    1385 	.db #0x44	; 68	'D'
      00048B 7C                    1386 	.db #0x7c	; 124
      00048C 9A                    1387 	.db #0x9a	; 154
      00048D 5E                    1388 	.db #0x5e	; 94
      00048E E9                    1389 	.db #0xe9	; 233
      00048F 7A                    1390 	.db #0x7a	; 122	'z'
      000490 87                    1391 	.db #0x87	; 135
      000491 76                    1392 	.db #0x76	; 118	'v'
      000492 B9                    1393 	.db #0xb9	; 185
      000493 3C                    1394 	.db #0x3c	; 60
      000494 72                    1395 	.db #0x72	; 114	'r'
      000495 00                    1396 	.db #0x00	; 0
      000496 3C                    1397 	.db #0x3c	; 60
      000497 00                    1398 	.db #0x00	; 0
      000498 00                    1399 	.db #0x00	; 0
      000499 00                    1400 	.db #0x00	; 0
      00049A 00                    1401 	.db #0x00	; 0
      00049B 00                    1402 	.db #0x00	; 0
      00049C 00                    1403 	.db #0x00	; 0
      00049D 00                    1404 	.db #0x00	; 0
      00049E 00                    1405 	.db #0x00	; 0
      00049F 00                    1406 	.db #0x00	; 0
      0004A0 00                    1407 	.db #0x00	; 0
      0004A1 00                    1408 	.db #0x00	; 0
      0004A2 00                    1409 	.db #0x00	; 0
      0004A3 00                    1410 	.db #0x00	; 0
      0004A4 00                    1411 	.db #0x00	; 0
      0004A5 00                    1412 	.db #0x00	; 0
      0004A6 00                    1413 	.db #0x00	; 0
      0004A7 00                    1414 	.db #0x00	; 0
      0004A8 0F                    1415 	.db #0x0f	; 15
      0004A9 08                    1416 	.db #0x08	; 8
      0004AA 17                    1417 	.db #0x17	; 23
      0004AB 1C                    1418 	.db #0x1c	; 28
      0004AC 23                    1419 	.db #0x23	; 35
      0004AD 3E                    1420 	.db #0x3e	; 62
      0004AE 41                    1421 	.db #0x41	; 65	'A'
      0004AF 1B                    1422 	.db #0x1b	; 27
      0004B0 64                    1423 	.db #0x64	; 100	'd'
      0004B1 31                    1424 	.db #0x31	; 49	'1'
      0004B2 4E                    1425 	.db #0x4e	; 78	'N'
      0004B3 B1                    1426 	.db #0xb1	; 177
      0004B4 CE                    1427 	.db #0xce	; 206
      0004B5 BB                    1428 	.db #0xbb	; 187
      0004B6 C4                    1429 	.db #0xc4	; 196
      0004B7 00                    1430 	.db #0x00	; 0
      0004B8 F8                    1431 	.db #0xf8	; 248
      0004B9 00                    1432 	.db #0x00	; 0
      0004BA FC                    1433 	.db #0xfc	; 252
      0004BB E0                    1434 	.db #0xe0	; 224
      0004BC 1E                    1435 	.db #0x1e	; 30
      0004BD F0                    1436 	.db #0xf0	; 240
      0004BE 0F                    1437 	.db #0x0f	; 15
      0004BF BE                    1438 	.db #0xbe	; 190
      0004C0 01                    1439 	.db #0x01	; 1
      0004C1 BC                    1440 	.db #0xbc	; 188
      0004C2 02                    1441 	.db #0x02	; 2
      0004C3 CE                    1442 	.db #0xce	; 206
      0004C4 01                    1443 	.db #0x01	; 1
      0004C5 F6                    1444 	.db #0xf6	; 246
      0004C6 61                    1445 	.db #0x61	; 97	'a'
      0004C7 F4                    1446 	.db #0xf4	; 244
      0004C8 02                    1447 	.db #0x02	; 2
      0004C9 94                    1448 	.db #0x94	; 148
      0004CA 62                    1449 	.db #0x62	; 98	'b'
      0004CB E4                    1450 	.db #0xe4	; 228
      0004CC 02                    1451 	.db #0x02	; 2
      0004CD 6C                    1452 	.db #0x6c	; 108	'l'
      0004CE 82                    1453 	.db #0x82	; 130
      0004CF 70                    1454 	.db #0x70	; 112	'p'
      0004D0 8C                    1455 	.db #0x8c	; 140
      0004D1 60                    1456 	.db #0x60	; 96
      0004D2 90                    1457 	.db #0x90	; 144
      0004D3 00                    1458 	.db #0x00	; 0
      0004D4 E0                    1459 	.db #0xe0	; 224
      0004D5 80                    1460 	.db #0x80	; 128
      0004D6 80                    1461 	.db #0x80	; 128
      0004D7 8E                    1462 	.db #0x8e	; 142
      0004D8 F7                    1463 	.db #0xf7	; 247
      0004D9 8F                    1464 	.db #0x8f	; 143
      0004DA F3                    1465 	.db #0xf3	; 243
      0004DB 86                    1466 	.db #0x86	; 134
      0004DC F9                    1467 	.db #0xf9	; 249
      0004DD 42                    1468 	.db #0x42	; 66	'B'
      0004DE 7D                    1469 	.db #0x7d	; 125
      0004DF 80                    1470 	.db #0x80	; 128
      0004E0 FF                    1471 	.db #0xff	; 255
      0004E1 44                    1472 	.db #0x44	; 68	'D'
      0004E2 7F                    1473 	.db #0x7f	; 127
      0004E3 28                    1474 	.db #0x28	; 40
      0004E4 3F                    1475 	.db #0x3f	; 63
      0004E5 07                    1476 	.db #0x07	; 7
      0004E6 07                    1477 	.db #0x07	; 7
      0004E7 00                    1478 	.db #0x00	; 0
      0004E8 00                    1479 	.db #0x00	; 0
      0004E9 08                    1480 	.db #0x08	; 8
      0004EA 00                    1481 	.db #0x00	; 0
      0004EB 08                    1482 	.db #0x08	; 8
      0004EC 00                    1483 	.db #0x00	; 0
      0004ED 1C                    1484 	.db #0x1c	; 28
      0004EE 00                    1485 	.db #0x00	; 0
      0004EF 7F                    1486 	.db #0x7f	; 127
      0004F0 00                    1487 	.db #0x00	; 0
      0004F1 1C                    1488 	.db #0x1c	; 28
      0004F2 00                    1489 	.db #0x00	; 0
      0004F3 08                    1490 	.db #0x08	; 8
      0004F4 00                    1491 	.db #0x00	; 0
      0004F5 08                    1492 	.db #0x08	; 8
      0004F6 00                    1493 	.db #0x00	; 0
      0004F7 00                    1494 	.db #0x00	; 0
      0004F8 00                    1495 	.db #0x00	; 0
      0004F9 00                    1496 	.db #0x00	; 0
      0004FA 00                    1497 	.db #0x00	; 0
      0004FB 00                    1498 	.db #0x00	; 0
      0004FC 00                    1499 	.db #0x00	; 0
      0004FD 10                    1500 	.db #0x10	; 16
      0004FE 00                    1501 	.db #0x00	; 0
      0004FF 00                    1502 	.db #0x00	; 0
      000500 00                    1503 	.db #0x00	; 0
      000501 00                    1504 	.db #0x00	; 0
      000502 00                    1505 	.db #0x00	; 0
      000503 00                    1506 	.db #0x00	; 0
      000504 00                    1507 	.db #0x00	; 0
      000505 00                    1508 	.db #0x00	; 0
      000506 00                    1509 	.db #0x00	; 0
      000507                       1510 _healthblock:
      000507 FE                    1511 	.db #0xfe	; 254
      000508 FE                    1512 	.db #0xfe	; 254
      000509 FE                    1513 	.db #0xfe	; 254
      00050A FE                    1514 	.db #0xfe	; 254
      00050B FE                    1515 	.db #0xfe	; 254
      00050C FE                    1516 	.db #0xfe	; 254
      00050D FE                    1517 	.db #0xfe	; 254
      00050E FE                    1518 	.db #0xfe	; 254
      00050F FE                    1519 	.db #0xfe	; 254
      000510 FE                    1520 	.db #0xfe	; 254
      000511 FE                    1521 	.db #0xfe	; 254
      000512 FE                    1522 	.db #0xfe	; 254
      000513 FE                    1523 	.db #0xfe	; 254
      000514 FE                    1524 	.db #0xfe	; 254
      000515 00                    1525 	.db #0x00	; 0
      000516 00                    1526 	.db #0x00	; 0
      000517                       1527 _enemyOptionCount:
      000517 05                    1528 	.db #0x05	; 5
      000518                       1529 _enemy1:
      000518 66                    1530 	.db #0x66	; 102	'f'
      000519 24                    1531 	.db #0x24	; 36
      00051A E7                    1532 	.db #0xe7	; 231
      00051B 66                    1533 	.db #0x66	; 102	'f'
      00051C F7                    1534 	.db #0xf7	; 247
      00051D E7                    1535 	.db #0xe7	; 231
      00051E 1C                    1536 	.db #0x1c	; 28
      00051F 18                    1537 	.db #0x18	; 24
      000520 38                    1538 	.db #0x38	; 56	'8'
      000521 18                    1539 	.db #0x18	; 24
      000522 EF                    1540 	.db #0xef	; 239
      000523 E7                    1541 	.db #0xe7	; 231
      000524 E7                    1542 	.db #0xe7	; 231
      000525 66                    1543 	.db #0x66	; 102	'f'
      000526 66                    1544 	.db #0x66	; 102	'f'
      000527 24                    1545 	.db #0x24	; 36
      000528 00                    1546 	.db #0x00	; 0
      000529 00                    1547 	.db #0x00	; 0
      00052A 00                    1548 	.db #0x00	; 0
      00052B 00                    1549 	.db #0x00	; 0
      00052C 00                    1550 	.db #0x00	; 0
      00052D 00                    1551 	.db #0x00	; 0
      00052E 00                    1552 	.db #0x00	; 0
      00052F 00                    1553 	.db #0x00	; 0
      000530 00                    1554 	.db #0x00	; 0
      000531 00                    1555 	.db #0x00	; 0
      000532 00                    1556 	.db #0x00	; 0
      000533 00                    1557 	.db #0x00	; 0
      000534 00                    1558 	.db #0x00	; 0
      000535 00                    1559 	.db #0x00	; 0
      000536 00                    1560 	.db #0x00	; 0
      000537 00                    1561 	.db #0x00	; 0
      000538 3C                    1562 	.db #0x3c	; 60
      000539 3C                    1563 	.db #0x3c	; 60
      00053A 5E                    1564 	.db #0x5e	; 94
      00053B 62                    1565 	.db #0x62	; 98	'b'
      00053C 8F                    1566 	.db #0x8f	; 143
      00053D F1                    1567 	.db #0xf1	; 241
      00053E C7                    1568 	.db #0xc7	; 199
      00053F F9                    1569 	.db #0xf9	; 249
      000540 C3                    1570 	.db #0xc3	; 195
      000541 FD                    1571 	.db #0xfd	; 253
      000542 E1                    1572 	.db #0xe1	; 225
      000543 FF                    1573 	.db #0xff	; 255
      000544 7A                    1574 	.db #0x7a	; 122	'z'
      000545 7E                    1575 	.db #0x7e	; 126
      000546 3C                    1576 	.db #0x3c	; 60
      000547 3C                    1577 	.db #0x3c	; 60
      000548 00                    1578 	.db #0x00	; 0
      000549 00                    1579 	.db #0x00	; 0
      00054A 00                    1580 	.db #0x00	; 0
      00054B 00                    1581 	.db #0x00	; 0
      00054C 00                    1582 	.db #0x00	; 0
      00054D 00                    1583 	.db #0x00	; 0
      00054E 00                    1584 	.db #0x00	; 0
      00054F 00                    1585 	.db #0x00	; 0
      000550 00                    1586 	.db #0x00	; 0
      000551 00                    1587 	.db #0x00	; 0
      000552 00                    1588 	.db #0x00	; 0
      000553 00                    1589 	.db #0x00	; 0
      000554 00                    1590 	.db #0x00	; 0
      000555 00                    1591 	.db #0x00	; 0
      000556 00                    1592 	.db #0x00	; 0
      000557 00                    1593 	.db #0x00	; 0
      000558 3C                    1594 	.db #0x3c	; 60
      000559 3E                    1595 	.db #0x3e	; 62
      00055A 20                    1596 	.db #0x20	; 32
      00055B 38                    1597 	.db #0x38	; 56	'8'
      00055C 44                    1598 	.db #0x44	; 68	'D'
      00055D 78                    1599 	.db #0x78	; 120	'x'
      00055E BA                    1600 	.db #0xba	; 186
      00055F C4                    1601 	.db #0xc4	; 196
      000560 BA                    1602 	.db #0xba	; 186
      000561 C4                    1603 	.db #0xc4	; 196
      000562 44                    1604 	.db #0x44	; 68	'D'
      000563 78                    1605 	.db #0x78	; 120	'x'
      000564 20                    1606 	.db #0x20	; 32
      000565 38                    1607 	.db #0x38	; 56	'8'
      000566 3C                    1608 	.db #0x3c	; 60
      000567 3E                    1609 	.db #0x3e	; 62
      000568                       1610 _largeenemies:
      000568 00                    1611 	.db #0x00	; 0
      000569 00                    1612 	.db #0x00	; 0
      00056A 00                    1613 	.db #0x00	; 0
      00056B 00                    1614 	.db #0x00	; 0
      00056C 00                    1615 	.db #0x00	; 0
      00056D 00                    1616 	.db #0x00	; 0
      00056E 00                    1617 	.db #0x00	; 0
      00056F 00                    1618 	.db #0x00	; 0
      000570 00                    1619 	.db #0x00	; 0
      000571 00                    1620 	.db #0x00	; 0
      000572 00                    1621 	.db #0x00	; 0
      000573 00                    1622 	.db #0x00	; 0
      000574 00                    1623 	.db #0x00	; 0
      000575 00                    1624 	.db #0x00	; 0
      000576 7F                    1625 	.db #0x7f	; 127
      000577 7F                    1626 	.db #0x7f	; 127
      000578 7F                    1627 	.db #0x7f	; 127
      000579 7F                    1628 	.db #0x7f	; 127
      00057A 00                    1629 	.db #0x00	; 0
      00057B 00                    1630 	.db #0x00	; 0
      00057C 00                    1631 	.db #0x00	; 0
      00057D 00                    1632 	.db #0x00	; 0
      00057E 00                    1633 	.db #0x00	; 0
      00057F 00                    1634 	.db #0x00	; 0
      000580 00                    1635 	.db #0x00	; 0
      000581 00                    1636 	.db #0x00	; 0
      000582 00                    1637 	.db #0x00	; 0
      000583 00                    1638 	.db #0x00	; 0
      000584 00                    1639 	.db #0x00	; 0
      000585 00                    1640 	.db #0x00	; 0
      000586 00                    1641 	.db #0x00	; 0
      000587 00                    1642 	.db #0x00	; 0
      000588 00                    1643 	.db #0x00	; 0
      000589 00                    1644 	.db #0x00	; 0
      00058A 40                    1645 	.db #0x40	; 64
      00058B 40                    1646 	.db #0x40	; 64
      00058C 60                    1647 	.db #0x60	; 96
      00058D 60                    1648 	.db #0x60	; 96
      00058E 70                    1649 	.db #0x70	; 112	'p'
      00058F 70                    1650 	.db #0x70	; 112	'p'
      000590 78                    1651 	.db #0x78	; 120	'x'
      000591 78                    1652 	.db #0x78	; 120	'x'
      000592 7C                    1653 	.db #0x7c	; 124
      000593 7C                    1654 	.db #0x7c	; 124
      000594 7E                    1655 	.db #0x7e	; 126
      000595 7E                    1656 	.db #0x7e	; 126
      000596 FF                    1657 	.db #0xff	; 255
      000597 FF                    1658 	.db #0xff	; 255
      000598 FF                    1659 	.db #0xff	; 255
      000599 FF                    1660 	.db #0xff	; 255
      00059A 7E                    1661 	.db #0x7e	; 126
      00059B 7E                    1662 	.db #0x7e	; 126
      00059C 7C                    1663 	.db #0x7c	; 124
      00059D 7C                    1664 	.db #0x7c	; 124
      00059E 78                    1665 	.db #0x78	; 120	'x'
      00059F 78                    1666 	.db #0x78	; 120	'x'
      0005A0 70                    1667 	.db #0x70	; 112	'p'
      0005A1 70                    1668 	.db #0x70	; 112	'p'
      0005A2 60                    1669 	.db #0x60	; 96
      0005A3 60                    1670 	.db #0x60	; 96
      0005A4 40                    1671 	.db #0x40	; 64
      0005A5 40                    1672 	.db #0x40	; 64
      0005A6 00                    1673 	.db #0x00	; 0
      0005A7 00                    1674 	.db #0x00	; 0
      0005A8 07                    1675 	.db #0x07	; 7
      0005A9 00                    1676 	.db #0x00	; 0
      0005AA 18                    1677 	.db #0x18	; 24
      0005AB 00                    1678 	.db #0x00	; 0
      0005AC 20                    1679 	.db #0x20	; 32
      0005AD 00                    1680 	.db #0x00	; 0
      0005AE 4C                    1681 	.db #0x4c	; 76	'L'
      0005AF 0C                    1682 	.db #0x0c	; 12
      0005B0 43                    1683 	.db #0x43	; 67	'C'
      0005B1 0F                    1684 	.db #0x0f	; 15
      0005B2 84                    1685 	.db #0x84	; 132
      0005B3 27                    1686 	.db #0x27	; 39
      0005B4 80                    1687 	.db #0x80	; 128
      0005B5 13                    1688 	.db #0x13	; 19
      0005B6 83                    1689 	.db #0x83	; 131
      0005B7 2A                    1690 	.db #0x2a	; 42
      0005B8 83                    1691 	.db #0x83	; 131
      0005B9 16                    1692 	.db #0x16	; 22
      0005BA 80                    1693 	.db #0x80	; 128
      0005BB 23                    1694 	.db #0x23	; 35
      0005BC 84                    1695 	.db #0x84	; 132
      0005BD 07                    1696 	.db #0x07	; 7
      0005BE 43                    1697 	.db #0x43	; 67	'C'
      0005BF 0F                    1698 	.db #0x0f	; 15
      0005C0 4C                    1699 	.db #0x4c	; 76	'L'
      0005C1 0C                    1700 	.db #0x0c	; 12
      0005C2 20                    1701 	.db #0x20	; 32
      0005C3 00                    1702 	.db #0x00	; 0
      0005C4 18                    1703 	.db #0x18	; 24
      0005C5 00                    1704 	.db #0x00	; 0
      0005C6 07                    1705 	.db #0x07	; 7
      0005C7 00                    1706 	.db #0x00	; 0
      0005C8 E0                    1707 	.db #0xe0	; 224
      0005C9 00                    1708 	.db #0x00	; 0
      0005CA 18                    1709 	.db #0x18	; 24
      0005CB 00                    1710 	.db #0x00	; 0
      0005CC 04                    1711 	.db #0x04	; 4
      0005CD 00                    1712 	.db #0x00	; 0
      0005CE 02                    1713 	.db #0x02	; 2
      0005CF 00                    1714 	.db #0x00	; 0
      0005D0 02                    1715 	.db #0x02	; 2
      0005D1 00                    1716 	.db #0x00	; 0
      0005D2 C1                    1717 	.db #0xc1	; 193
      0005D3 C0                    1718 	.db #0xc0	; 192
      0005D4 11                    1719 	.db #0x11	; 17
      0005D5 F0                    1720 	.db #0xf0	; 240
      0005D6 E5                    1721 	.db #0xe5	; 229
      0005D7 1C                    1722 	.db #0x1c	; 28
      0005D8 E5                    1723 	.db #0xe5	; 229
      0005D9 1C                    1724 	.db #0x1c	; 28
      0005DA 11                    1725 	.db #0x11	; 17
      0005DB F0                    1726 	.db #0xf0	; 240
      0005DC C1                    1727 	.db #0xc1	; 193
      0005DD C0                    1728 	.db #0xc0	; 192
      0005DE 02                    1729 	.db #0x02	; 2
      0005DF 00                    1730 	.db #0x00	; 0
      0005E0 02                    1731 	.db #0x02	; 2
      0005E1 00                    1732 	.db #0x00	; 0
      0005E2 04                    1733 	.db #0x04	; 4
      0005E3 00                    1734 	.db #0x00	; 0
      0005E4 18                    1735 	.db #0x18	; 24
      0005E5 00                    1736 	.db #0x00	; 0
      0005E6 E0                    1737 	.db #0xe0	; 224
      0005E7 00                    1738 	.db #0x00	; 0
      0005E8                       1739 _ProjectileTiles:
      0005E8 24                    1740 	.db #0x24	; 36
      0005E9 18                    1741 	.db #0x18	; 24
      0005EA 18                    1742 	.db #0x18	; 24
      0005EB 3C                    1743 	.db #0x3c	; 60
      0005EC 18                    1744 	.db #0x18	; 24
      0005ED 3C                    1745 	.db #0x3c	; 60
      0005EE 24                    1746 	.db #0x24	; 36
      0005EF 18                    1747 	.db #0x18	; 24
      0005F0 00                    1748 	.db #0x00	; 0
      0005F1 00                    1749 	.db #0x00	; 0
      0005F2 00                    1750 	.db #0x00	; 0
      0005F3 00                    1751 	.db #0x00	; 0
      0005F4 00                    1752 	.db #0x00	; 0
      0005F5 00                    1753 	.db #0x00	; 0
      0005F6 00                    1754 	.db #0x00	; 0
      0005F7 00                    1755 	.db #0x00	; 0
      0005F8 00                    1756 	.db #0x00	; 0
      0005F9 00                    1757 	.db #0x00	; 0
      0005FA 00                    1758 	.db #0x00	; 0
      0005FB 00                    1759 	.db #0x00	; 0
      0005FC 00                    1760 	.db #0x00	; 0
      0005FD 00                    1761 	.db #0x00	; 0
      0005FE 00                    1762 	.db #0x00	; 0
      0005FF 00                    1763 	.db #0x00	; 0
      000600 00                    1764 	.db #0x00	; 0
      000601 00                    1765 	.db #0x00	; 0
      000602 00                    1766 	.db #0x00	; 0
      000603 00                    1767 	.db #0x00	; 0
      000604 00                    1768 	.db #0x00	; 0
      000605 00                    1769 	.db #0x00	; 0
      000606 00                    1770 	.db #0x00	; 0
      000607 00                    1771 	.db #0x00	; 0
      000608 00                    1772 	.db #0x00	; 0
      000609 00                    1773 	.db #0x00	; 0
      00060A 00                    1774 	.db #0x00	; 0
      00060B 00                    1775 	.db #0x00	; 0
      00060C 09                    1776 	.db #0x09	; 9
      00060D 06                    1777 	.db #0x06	; 6
      00060E 06                    1778 	.db #0x06	; 6
      00060F 0F                    1779 	.db #0x0f	; 15
      000610 06                    1780 	.db #0x06	; 6
      000611 0F                    1781 	.db #0x0f	; 15
      000612 09                    1782 	.db #0x09	; 9
      000613 06                    1783 	.db #0x06	; 6
      000614 00                    1784 	.db #0x00	; 0
      000615 00                    1785 	.db #0x00	; 0
      000616 00                    1786 	.db #0x00	; 0
      000617 00                    1787 	.db #0x00	; 0
      000618 00                    1788 	.db #0x00	; 0
      000619 00                    1789 	.db #0x00	; 0
      00061A 00                    1790 	.db #0x00	; 0
      00061B 00                    1791 	.db #0x00	; 0
      00061C 00                    1792 	.db #0x00	; 0
      00061D 00                    1793 	.db #0x00	; 0
      00061E 00                    1794 	.db #0x00	; 0
      00061F 00                    1795 	.db #0x00	; 0
      000620 00                    1796 	.db #0x00	; 0
      000621 00                    1797 	.db #0x00	; 0
      000622 00                    1798 	.db #0x00	; 0
      000623 00                    1799 	.db #0x00	; 0
      000624 00                    1800 	.db #0x00	; 0
      000625 00                    1801 	.db #0x00	; 0
      000626 00                    1802 	.db #0x00	; 0
      000627 00                    1803 	.db #0x00	; 0
      000628 09                    1804 	.db #0x09	; 9
      000629 06                    1805 	.db #0x06	; 6
      00062A 06                    1806 	.db #0x06	; 6
      00062B 0F                    1807 	.db #0x0f	; 15
      00062C 06                    1808 	.db #0x06	; 6
      00062D 0F                    1809 	.db #0x0f	; 15
      00062E 09                    1810 	.db #0x09	; 9
      00062F 06                    1811 	.db #0x06	; 6
      000630 00                    1812 	.db #0x00	; 0
      000631 00                    1813 	.db #0x00	; 0
      000632 00                    1814 	.db #0x00	; 0
      000633 00                    1815 	.db #0x00	; 0
      000634 00                    1816 	.db #0x00	; 0
      000635 00                    1817 	.db #0x00	; 0
      000636 00                    1818 	.db #0x00	; 0
      000637 00                    1819 	.db #0x00	; 0
      000638 00                    1820 	.db #0x00	; 0
      000639 00                    1821 	.db #0x00	; 0
      00063A 00                    1822 	.db #0x00	; 0
      00063B 00                    1823 	.db #0x00	; 0
      00063C 00                    1824 	.db #0x00	; 0
      00063D 00                    1825 	.db #0x00	; 0
      00063E 00                    1826 	.db #0x00	; 0
      00063F 00                    1827 	.db #0x00	; 0
      000640 00                    1828 	.db #0x00	; 0
      000641 00                    1829 	.db #0x00	; 0
      000642 00                    1830 	.db #0x00	; 0
      000643 00                    1831 	.db #0x00	; 0
      000644 00                    1832 	.db #0x00	; 0
      000645 00                    1833 	.db #0x00	; 0
      000646 00                    1834 	.db #0x00	; 0
      000647 00                    1835 	.db #0x00	; 0
      000648 99                    1836 	.db #0x99	; 153
      000649 66                    1837 	.db #0x66	; 102	'f'
      00064A 66                    1838 	.db #0x66	; 102	'f'
      00064B FF                    1839 	.db #0xff	; 255
      00064C 66                    1840 	.db #0x66	; 102	'f'
      00064D FF                    1841 	.db #0xff	; 255
      00064E 99                    1842 	.db #0x99	; 153
      00064F 66                    1843 	.db #0x66	; 102	'f'
      000650 00                    1844 	.db #0x00	; 0
      000651 00                    1845 	.db #0x00	; 0
      000652 00                    1846 	.db #0x00	; 0
      000653 00                    1847 	.db #0x00	; 0
      000654 00                    1848 	.db #0x00	; 0
      000655 00                    1849 	.db #0x00	; 0
      000656 00                    1850 	.db #0x00	; 0
      000657 00                    1851 	.db #0x00	; 0
      000658 00                    1852 	.db #0x00	; 0
      000659 00                    1853 	.db #0x00	; 0
      00065A 00                    1854 	.db #0x00	; 0
      00065B 00                    1855 	.db #0x00	; 0
      00065C 00                    1856 	.db #0x00	; 0
      00065D 00                    1857 	.db #0x00	; 0
      00065E 00                    1858 	.db #0x00	; 0
      00065F 00                    1859 	.db #0x00	; 0
      000660 00                    1860 	.db #0x00	; 0
      000661 00                    1861 	.db #0x00	; 0
      000662 00                    1862 	.db #0x00	; 0
      000663 00                    1863 	.db #0x00	; 0
      000664 00                    1864 	.db #0x00	; 0
      000665 00                    1865 	.db #0x00	; 0
      000666 00                    1866 	.db #0x00	; 0
      000667 00                    1867 	.db #0x00	; 0
      000668 09                    1868 	.db #0x09	; 9
      000669 06                    1869 	.db #0x06	; 6
      00066A 06                    1870 	.db #0x06	; 6
      00066B 0F                    1871 	.db #0x0f	; 15
      00066C 06                    1872 	.db #0x06	; 6
      00066D 0F                    1873 	.db #0x0f	; 15
      00066E 09                    1874 	.db #0x09	; 9
      00066F 06                    1875 	.db #0x06	; 6
      000670 09                    1876 	.db #0x09	; 9
      000671 06                    1877 	.db #0x06	; 6
      000672 06                    1878 	.db #0x06	; 6
      000673 0F                    1879 	.db #0x0f	; 15
      000674 06                    1880 	.db #0x06	; 6
      000675 0F                    1881 	.db #0x0f	; 15
      000676 09                    1882 	.db #0x09	; 9
      000677 06                    1883 	.db #0x06	; 6
      000678 00                    1884 	.db #0x00	; 0
      000679 00                    1885 	.db #0x00	; 0
      00067A 00                    1886 	.db #0x00	; 0
      00067B 00                    1887 	.db #0x00	; 0
      00067C 00                    1888 	.db #0x00	; 0
      00067D 00                    1889 	.db #0x00	; 0
      00067E 00                    1890 	.db #0x00	; 0
      00067F 00                    1891 	.db #0x00	; 0
      000680 00                    1892 	.db #0x00	; 0
      000681 00                    1893 	.db #0x00	; 0
      000682 00                    1894 	.db #0x00	; 0
      000683 00                    1895 	.db #0x00	; 0
      000684 00                    1896 	.db #0x00	; 0
      000685 00                    1897 	.db #0x00	; 0
      000686 00                    1898 	.db #0x00	; 0
      000687 00                    1899 	.db #0x00	; 0
      000688 90                    1900 	.db #0x90	; 144
      000689 60                    1901 	.db #0x60	; 96
      00068A 60                    1902 	.db #0x60	; 96
      00068B F0                    1903 	.db #0xf0	; 240
      00068C 60                    1904 	.db #0x60	; 96
      00068D F0                    1905 	.db #0xf0	; 240
      00068E 90                    1906 	.db #0x90	; 144
      00068F 60                    1907 	.db #0x60	; 96
      000690 09                    1908 	.db #0x09	; 9
      000691 06                    1909 	.db #0x06	; 6
      000692 06                    1910 	.db #0x06	; 6
      000693 0F                    1911 	.db #0x0f	; 15
      000694 06                    1912 	.db #0x06	; 6
      000695 0F                    1913 	.db #0x0f	; 15
      000696 09                    1914 	.db #0x09	; 9
      000697 06                    1915 	.db #0x06	; 6
      000698 00                    1916 	.db #0x00	; 0
      000699 00                    1917 	.db #0x00	; 0
      00069A 00                    1918 	.db #0x00	; 0
      00069B 00                    1919 	.db #0x00	; 0
      00069C 00                    1920 	.db #0x00	; 0
      00069D 00                    1921 	.db #0x00	; 0
      00069E 00                    1922 	.db #0x00	; 0
      00069F 00                    1923 	.db #0x00	; 0
      0006A0 00                    1924 	.db #0x00	; 0
      0006A1 00                    1925 	.db #0x00	; 0
      0006A2 00                    1926 	.db #0x00	; 0
      0006A3 00                    1927 	.db #0x00	; 0
      0006A4 00                    1928 	.db #0x00	; 0
      0006A5 00                    1929 	.db #0x00	; 0
      0006A6 00                    1930 	.db #0x00	; 0
      0006A7 00                    1931 	.db #0x00	; 0
      0006A8 18                    1932 	.db #0x18	; 24
      0006A9 00                    1933 	.db #0x00	; 0
      0006AA 18                    1934 	.db #0x18	; 24
      0006AB 18                    1935 	.db #0x18	; 24
      0006AC 18                    1936 	.db #0x18	; 24
      0006AD 18                    1937 	.db #0x18	; 24
      0006AE 3C                    1938 	.db #0x3c	; 60
      0006AF 18                    1939 	.db #0x18	; 24
      0006B0 3C                    1940 	.db #0x3c	; 60
      0006B1 18                    1941 	.db #0x18	; 24
      0006B2 3C                    1942 	.db #0x3c	; 60
      0006B3 3C                    1943 	.db #0x3c	; 60
      0006B4 7E                    1944 	.db #0x7e	; 126
      0006B5 3C                    1945 	.db #0x3c	; 60
      0006B6 7E                    1946 	.db #0x7e	; 126
      0006B7 24                    1947 	.db #0x24	; 36
      0006B8 00                    1948 	.db #0x00	; 0
      0006B9 00                    1949 	.db #0x00	; 0
      0006BA 00                    1950 	.db #0x00	; 0
      0006BB 00                    1951 	.db #0x00	; 0
      0006BC 00                    1952 	.db #0x00	; 0
      0006BD 00                    1953 	.db #0x00	; 0
      0006BE 00                    1954 	.db #0x00	; 0
      0006BF 00                    1955 	.db #0x00	; 0
      0006C0 00                    1956 	.db #0x00	; 0
      0006C1 00                    1957 	.db #0x00	; 0
      0006C2 00                    1958 	.db #0x00	; 0
      0006C3 00                    1959 	.db #0x00	; 0
      0006C4 00                    1960 	.db #0x00	; 0
      0006C5 00                    1961 	.db #0x00	; 0
      0006C6 00                    1962 	.db #0x00	; 0
      0006C7 00                    1963 	.db #0x00	; 0
      0006C8 C0                    1964 	.db #0xc0	; 192
      0006C9 00                    1965 	.db #0x00	; 0
      0006CA F8                    1966 	.db #0xf8	; 248
      0006CB E0                    1967 	.db #0xe0	; 224
      0006CC FF                    1968 	.db #0xff	; 255
      0006CD 7E                    1969 	.db #0x7e	; 126
      0006CE FF                    1970 	.db #0xff	; 255
      0006CF 7E                    1971 	.db #0x7e	; 126
      0006D0 F8                    1972 	.db #0xf8	; 248
      0006D1 E0                    1973 	.db #0xe0	; 224
      0006D2 C0                    1974 	.db #0xc0	; 192
      0006D3 00                    1975 	.db #0x00	; 0
      0006D4 00                    1976 	.db #0x00	; 0
      0006D5 00                    1977 	.db #0x00	; 0
      0006D6 00                    1978 	.db #0x00	; 0
      0006D7 00                    1979 	.db #0x00	; 0
      0006D8 00                    1980 	.db #0x00	; 0
      0006D9 00                    1981 	.db #0x00	; 0
      0006DA 00                    1982 	.db #0x00	; 0
      0006DB 00                    1983 	.db #0x00	; 0
      0006DC 00                    1984 	.db #0x00	; 0
      0006DD 00                    1985 	.db #0x00	; 0
      0006DE 00                    1986 	.db #0x00	; 0
      0006DF 00                    1987 	.db #0x00	; 0
      0006E0 00                    1988 	.db #0x00	; 0
      0006E1 00                    1989 	.db #0x00	; 0
      0006E2 00                    1990 	.db #0x00	; 0
      0006E3 00                    1991 	.db #0x00	; 0
      0006E4 00                    1992 	.db #0x00	; 0
      0006E5 00                    1993 	.db #0x00	; 0
      0006E6 00                    1994 	.db #0x00	; 0
      0006E7 00                    1995 	.db #0x00	; 0
      0006E8 06                    1996 	.db #0x06	; 6
      0006E9 00                    1997 	.db #0x00	; 0
      0006EA 0F                    1998 	.db #0x0f	; 15
      0006EB 06                    1999 	.db #0x06	; 6
      0006EC 1F                    2000 	.db #0x1f	; 31
      0006ED 0E                    2001 	.db #0x0e	; 14
      0006EE 7E                    2002 	.db #0x7e	; 126
      0006EF 1C                    2003 	.db #0x1c	; 28
      0006F0 FC                    2004 	.db #0xfc	; 252
      0006F1 78                    2005 	.db #0x78	; 120	'x'
      0006F2 F8                    2006 	.db #0xf8	; 248
      0006F3 F0                    2007 	.db #0xf0	; 240
      0006F4 F8                    2008 	.db #0xf8	; 248
      0006F5 70                    2009 	.db #0x70	; 112	'p'
      0006F6 70                    2010 	.db #0x70	; 112	'p'
      0006F7 20                    2011 	.db #0x20	; 32
      0006F8 00                    2012 	.db #0x00	; 0
      0006F9 00                    2013 	.db #0x00	; 0
      0006FA 00                    2014 	.db #0x00	; 0
      0006FB 00                    2015 	.db #0x00	; 0
      0006FC 00                    2016 	.db #0x00	; 0
      0006FD 00                    2017 	.db #0x00	; 0
      0006FE 00                    2018 	.db #0x00	; 0
      0006FF 00                    2019 	.db #0x00	; 0
      000700 00                    2020 	.db #0x00	; 0
      000701 00                    2021 	.db #0x00	; 0
      000702 00                    2022 	.db #0x00	; 0
      000703 00                    2023 	.db #0x00	; 0
      000704 00                    2024 	.db #0x00	; 0
      000705 00                    2025 	.db #0x00	; 0
      000706 00                    2026 	.db #0x00	; 0
      000707 00                    2027 	.db #0x00	; 0
      000708                       2028 _Player1:
      000708 08                    2029 	.db #0x08	; 8
      000709 08                    2030 	.db #0x08	; 8
      00070A 1C                    2031 	.db #0x1c	; 28
      00070B 14                    2032 	.db #0x14	; 20
      00070C 38                    2033 	.db #0x38	; 56	'8'
      00070D 28                    2034 	.db #0x28	; 40
      00070E 68                    2035 	.db #0x68	; 104	'h'
      00070F 58                    2036 	.db #0x58	; 88	'X'
      000710 50                    2037 	.db #0x50	; 80	'P'
      000711 71                    2038 	.db #0x71	; 113	'q'
      000712 D0                    2039 	.db #0xd0	; 208
      000713 B2                    2040 	.db #0xb2	; 178
      000714 D5                    2041 	.db #0xd5	; 213
      000715 B6                    2042 	.db #0xb6	; 182
      000716 D5                    2043 	.db #0xd5	; 213
      000717 B6                    2044 	.db #0xb6	; 182
      000718 D5                    2045 	.db #0xd5	; 213
      000719 B6                    2046 	.db #0xb6	; 182
      00071A CD                    2047 	.db #0xcd	; 205
      00071B BE                    2048 	.db #0xbe	; 190
      00071C C5                    2049 	.db #0xc5	; 197
      00071D BE                    2050 	.db #0xbe	; 190
      00071E 65                    2051 	.db #0x65	; 101	'e'
      00071F 5E                    2052 	.db #0x5e	; 94
      000720 3E                    2053 	.db #0x3e	; 62
      000721 2F                    2054 	.db #0x2f	; 47
      000722 13                    2055 	.db #0x13	; 19
      000723 13                    2056 	.db #0x13	; 19
      000724 06                    2057 	.db #0x06	; 6
      000725 07                    2058 	.db #0x07	; 7
      000726 07                    2059 	.db #0x07	; 7
      000727 05                    2060 	.db #0x05	; 5
      000728 10                    2061 	.db #0x10	; 16
      000729 10                    2062 	.db #0x10	; 16
      00072A 38                    2063 	.db #0x38	; 56	'8'
      00072B 28                    2064 	.db #0x28	; 40
      00072C 1C                    2065 	.db #0x1c	; 28
      00072D 14                    2066 	.db #0x14	; 20
      00072E 16                    2067 	.db #0x16	; 22
      00072F 1A                    2068 	.db #0x1a	; 26
      000730 0A                    2069 	.db #0x0a	; 10
      000731 8E                    2070 	.db #0x8e	; 142
      000732 0B                    2071 	.db #0x0b	; 11
      000733 4D                    2072 	.db #0x4d	; 77	'M'
      000734 AB                    2073 	.db #0xab	; 171
      000735 6D                    2074 	.db #0x6d	; 109	'm'
      000736 AB                    2075 	.db #0xab	; 171
      000737 6D                    2076 	.db #0x6d	; 109	'm'
      000738 AB                    2077 	.db #0xab	; 171
      000739 6D                    2078 	.db #0x6d	; 109	'm'
      00073A B3                    2079 	.db #0xb3	; 179
      00073B 7D                    2080 	.db #0x7d	; 125
      00073C A3                    2081 	.db #0xa3	; 163
      00073D 7D                    2082 	.db #0x7d	; 125
      00073E A6                    2083 	.db #0xa6	; 166
      00073F 7A                    2084 	.db #0x7a	; 122	'z'
      000740 7C                    2085 	.db #0x7c	; 124
      000741 F4                    2086 	.db #0xf4	; 244
      000742 C8                    2087 	.db #0xc8	; 200
      000743 C8                    2088 	.db #0xc8	; 200
      000744 60                    2089 	.db #0x60	; 96
      000745 E0                    2090 	.db #0xe0	; 224
      000746 E0                    2091 	.db #0xe0	; 224
      000747 A0                    2092 	.db #0xa0	; 160
      000748 07                    2093 	.db #0x07	; 7
      000749 07                    2094 	.db #0x07	; 7
      00074A 0F                    2095 	.db #0x0f	; 15
      00074B 08                    2096 	.db #0x08	; 8
      00074C 18                    2097 	.db #0x18	; 24
      00074D 17                    2098 	.db #0x17	; 23
      00074E 31                    2099 	.db #0x31	; 49	'1'
      00074F 2F                    2100 	.db #0x2f	; 47
      000750 12                    2101 	.db #0x12	; 18
      000751 1E                    2102 	.db #0x1e	; 30
      000752 DF                    2103 	.db #0xdf	; 223
      000753 DF                    2104 	.db #0xdf	; 223
      000754 F0                    2105 	.db #0xf0	; 240
      000755 7F                    2106 	.db #0x7f	; 127
      000756 AF                    2107 	.db #0xaf	; 175
      000757 F0                    2108 	.db #0xf0	; 240
      000758 AF                    2109 	.db #0xaf	; 175
      000759 F0                    2110 	.db #0xf0	; 240
      00075A F0                    2111 	.db #0xf0	; 240
      00075B 7F                    2112 	.db #0x7f	; 127
      00075C DF                    2113 	.db #0xdf	; 223
      00075D DF                    2114 	.db #0xdf	; 223
      00075E 12                    2115 	.db #0x12	; 18
      00075F 1E                    2116 	.db #0x1e	; 30
      000760 31                    2117 	.db #0x31	; 49	'1'
      000761 2F                    2118 	.db #0x2f	; 47
      000762 18                    2119 	.db #0x18	; 24
      000763 17                    2120 	.db #0x17	; 23
      000764 0F                    2121 	.db #0x0f	; 15
      000765 08                    2122 	.db #0x08	; 8
      000766 07                    2123 	.db #0x07	; 7
      000767 07                    2124 	.db #0x07	; 7
      000768 E0                    2125 	.db #0xe0	; 224
      000769 E0                    2126 	.db #0xe0	; 224
      00076A F8                    2127 	.db #0xf8	; 248
      00076B 18                    2128 	.db #0x18	; 24
      00076C 0C                    2129 	.db #0x0c	; 12
      00076D F4                    2130 	.db #0xf4	; 244
      00076E F6                    2131 	.db #0xf6	; 246
      00076F FA                    2132 	.db #0xfa	; 250
      000770 0F                    2133 	.db #0x0f	; 15
      000771 0D                    2134 	.db #0x0d	; 13
      000772 C2                    2135 	.db #0xc2	; 194
      000773 C2                    2136 	.db #0xc2	; 194
      000774 00                    2137 	.db #0x00	; 0
      000775 E0                    2138 	.db #0xe0	; 224
      000776 C0                    2139 	.db #0xc0	; 192
      000777 10                    2140 	.db #0x10	; 16
      000778 C0                    2141 	.db #0xc0	; 192
      000779 10                    2142 	.db #0x10	; 16
      00077A 00                    2143 	.db #0x00	; 0
      00077B E0                    2144 	.db #0xe0	; 224
      00077C C2                    2145 	.db #0xc2	; 194
      00077D C2                    2146 	.db #0xc2	; 194
      00077E 0F                    2147 	.db #0x0f	; 15
      00077F 0D                    2148 	.db #0x0d	; 13
      000780 F6                    2149 	.db #0xf6	; 246
      000781 FA                    2150 	.db #0xfa	; 250
      000782 0C                    2151 	.db #0x0c	; 12
      000783 F4                    2152 	.db #0xf4	; 244
      000784 F8                    2153 	.db #0xf8	; 248
      000785 18                    2154 	.db #0x18	; 24
      000786 E0                    2155 	.db #0xe0	; 224
      000787 E0                    2156 	.db #0xe0	; 224
      000788 07                    2157 	.db #0x07	; 7
      000789 07                    2158 	.db #0x07	; 7
      00078A 1B                    2159 	.db #0x1b	; 27
      00078B 1C                    2160 	.db #0x1c	; 28
      00078C 38                    2161 	.db #0x38	; 56	'8'
      00078D 27                    2162 	.db #0x27	; 39
      00078E 60                    2163 	.db #0x60	; 96
      00078F 5E                    2164 	.db #0x5e	; 94
      000790 60                    2165 	.db #0x60	; 96
      000791 5C                    2166 	.db #0x5c	; 92
      000792 41                    2167 	.db #0x41	; 65	'A'
      000793 79                    2168 	.db #0x79	; 121	'y'
      000794 C4                    2169 	.db #0xc4	; 196
      000795 B7                    2170 	.db #0xb7	; 183
      000796 99                    2171 	.db #0x99	; 153
      000797 FE                    2172 	.db #0xfe	; 254
      000798 B3                    2173 	.db #0xb3	; 179
      000799 EC                    2174 	.db #0xec	; 236
      00079A 67                    2175 	.db #0x67	; 103	'g'
      00079B 58                    2176 	.db #0x58	; 88	'X'
      00079C 2E                    2177 	.db #0x2e	; 46
      00079D 31                    2178 	.db #0x31	; 49	'1'
      00079E 5C                    2179 	.db #0x5c	; 92
      00079F 73                    2180 	.db #0x73	; 115	's'
      0007A0 69                    2181 	.db #0x69	; 105	'i'
      0007A1 5E                    2182 	.db #0x5e	; 94
      0007A2 37                    2183 	.db #0x37	; 55	'7'
      0007A3 2D                    2184 	.db #0x2d	; 45
      0007A4 1A                    2185 	.db #0x1a	; 26
      0007A5 1B                    2186 	.db #0x1b	; 27
      0007A6 01                    2187 	.db #0x01	; 1
      0007A7 01                    2188 	.db #0x01	; 1
      0007A8 E0                    2189 	.db #0xe0	; 224
      0007A9 E0                    2190 	.db #0xe0	; 224
      0007AA 90                    2191 	.db #0x90	; 144
      0007AB 70                    2192 	.db #0x70	; 112	'p'
      0007AC C0                    2193 	.db #0xc0	; 192
      0007AD C0                    2194 	.db #0xc0	; 192
      0007AE 00                    2195 	.db #0x00	; 0
      0007AF 00                    2196 	.db #0x00	; 0
      0007B0 02                    2197 	.db #0x02	; 2
      0007B1 02                    2198 	.db #0x02	; 2
      0007B2 C1                    2199 	.db #0xc1	; 193
      0007B3 C3                    2200 	.db #0xc3	; 195
      0007B4 65                    2201 	.db #0x65	; 101	'e'
      0007B5 A7                    2202 	.db #0xa7	; 167
      0007B6 A7                    2203 	.db #0xa7	; 167
      0007B7 65                    2204 	.db #0x65	; 101	'e'
      0007B8 A3                    2205 	.db #0xa3	; 163
      0007B9 65                    2206 	.db #0x65	; 101	'e'
      0007BA 03                    2207 	.db #0x03	; 3
      0007BB CD                    2208 	.db #0xcd	; 205
      0007BC 41                    2209 	.db #0x41	; 65	'A'
      0007BD DF                    2210 	.db #0xdf	; 223
      0007BE 86                    2211 	.db #0x86	; 134
      0007BF BA                    2212 	.db #0xba	; 186
      0007C0 86                    2213 	.db #0x86	; 134
      0007C1 FA                    2214 	.db #0xfa	; 250
      0007C2 1C                    2215 	.db #0x1c	; 28
      0007C3 E4                    2216 	.db #0xe4	; 228
      0007C4 78                    2217 	.db #0x78	; 120	'x'
      0007C5 B8                    2218 	.db #0xb8	; 184
      0007C6 C0                    2219 	.db #0xc0	; 192
      0007C7 C0                    2220 	.db #0xc0	; 192
      0007C8 00                    2221 	.db #0x00	; 0
      0007C9 00                    2222 	.db #0x00	; 0
      0007CA 00                    2223 	.db #0x00	; 0
      0007CB 00                    2224 	.db #0x00	; 0
      0007CC 00                    2225 	.db #0x00	; 0
      0007CD 00                    2226 	.db #0x00	; 0
      0007CE 00                    2227 	.db #0x00	; 0
      0007CF 00                    2228 	.db #0x00	; 0
      0007D0 00                    2229 	.db #0x00	; 0
      0007D1 00                    2230 	.db #0x00	; 0
      0007D2 00                    2231 	.db #0x00	; 0
      0007D3 00                    2232 	.db #0x00	; 0
      0007D4 00                    2233 	.db #0x00	; 0
      0007D5 00                    2234 	.db #0x00	; 0
      0007D6 00                    2235 	.db #0x00	; 0
      0007D7 00                    2236 	.db #0x00	; 0
      0007D8 00                    2237 	.db #0x00	; 0
      0007D9 00                    2238 	.db #0x00	; 0
      0007DA 00                    2239 	.db #0x00	; 0
      0007DB 00                    2240 	.db #0x00	; 0
      0007DC 00                    2241 	.db #0x00	; 0
      0007DD 00                    2242 	.db #0x00	; 0
      0007DE 00                    2243 	.db #0x00	; 0
      0007DF 00                    2244 	.db #0x00	; 0
      0007E0 00                    2245 	.db #0x00	; 0
      0007E1 00                    2246 	.db #0x00	; 0
      0007E2 00                    2247 	.db #0x00	; 0
      0007E3 00                    2248 	.db #0x00	; 0
      0007E4 00                    2249 	.db #0x00	; 0
      0007E5 00                    2250 	.db #0x00	; 0
      0007E6 00                    2251 	.db #0x00	; 0
      0007E7 00                    2252 	.db #0x00	; 0
      0007E8 00                    2253 	.db #0x00	; 0
      0007E9 00                    2254 	.db #0x00	; 0
      0007EA 00                    2255 	.db #0x00	; 0
      0007EB 00                    2256 	.db #0x00	; 0
      0007EC 00                    2257 	.db #0x00	; 0
      0007ED 00                    2258 	.db #0x00	; 0
      0007EE 00                    2259 	.db #0x00	; 0
      0007EF 00                    2260 	.db #0x00	; 0
      0007F0 00                    2261 	.db #0x00	; 0
      0007F1 00                    2262 	.db #0x00	; 0
      0007F2 00                    2263 	.db #0x00	; 0
      0007F3 00                    2264 	.db #0x00	; 0
      0007F4 00                    2265 	.db #0x00	; 0
      0007F5 00                    2266 	.db #0x00	; 0
      0007F6 00                    2267 	.db #0x00	; 0
      0007F7 00                    2268 	.db #0x00	; 0
      0007F8 00                    2269 	.db #0x00	; 0
      0007F9 00                    2270 	.db #0x00	; 0
      0007FA 00                    2271 	.db #0x00	; 0
      0007FB 00                    2272 	.db #0x00	; 0
      0007FC 00                    2273 	.db #0x00	; 0
      0007FD 00                    2274 	.db #0x00	; 0
      0007FE 00                    2275 	.db #0x00	; 0
      0007FF 00                    2276 	.db #0x00	; 0
      000800 00                    2277 	.db #0x00	; 0
      000801 00                    2278 	.db #0x00	; 0
      000802 00                    2279 	.db #0x00	; 0
      000803 00                    2280 	.db #0x00	; 0
      000804 00                    2281 	.db #0x00	; 0
      000805 00                    2282 	.db #0x00	; 0
      000806 00                    2283 	.db #0x00	; 0
      000807 00                    2284 	.db #0x00	; 0
      000808                       2285 _BLANKSIZE:
      000808 03                    2286 	.db #0x03	; 3
      000809                       2287 _BLANK:
      000809 26                    2288 	.db #0x26	; 38
      00080A 2B                    2289 	.db #0x2b	; 43
      00080B 2C                    2290 	.db #0x2c	; 44
      00080C                       2291 _EMPTYSPRITE:
      00080C 50                    2292 	.db #0x50	; 80	'P'
      00080D                       2293 _ENEMYCOUNT:
      00080D 05                    2294 	.db #0x05	; 5
      00080E                       2295 _xSpawnPositions:
      00080E 00                    2296 	.db #0x00	; 0
      00080F 60                    2297 	.db #0x60	; 96
      000810 B0                    2298 	.db #0xb0	; 176
      000811 00                    2299 	.db #0x00	; 0
      000812 B0                    2300 	.db #0xb0	; 176
      000813 00                    2301 	.db #0x00	; 0
      000814 60                    2302 	.db #0x60	; 96
      000815 B0                    2303 	.db #0xb0	; 176
      000816                       2304 _ySpawnPositions:
      000816 00                    2305 	.db #0x00	; 0
      000817 00                    2306 	.db #0x00	; 0
      000818 00                    2307 	.db #0x00	; 0
      000819 5C                    2308 	.db #0x5c	; 92
      00081A 5C                    2309 	.db #0x5c	; 92
      00081B A0                    2310 	.db #0xa0	; 160
      00081C A0                    2311 	.db #0xa0	; 160
      00081D A0                    2312 	.db #0xa0	; 160
      00081E                       2313 _PROJECTILECOUNT:
      00081E 05                    2314 	.db #0x05	; 5
      00081F                       2315 _PLAYERSIZE:
      00081F 10                    2316 	.db #0x10	; 16
      000820                       2317 _maxHull:
      000820 64                    2318 	.db #0x64	;  100	'd'
      000821                       2319 _maxShield:
      000821 64                    2320 	.db #0x64	;  100	'd'
      000822                       2321 _GUNCOUNT:
      000822 03                    2322 	.db #0x03	; 3
                                   2323 ;src/main.c:119: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2324 ;	---------------------------------
                                   2325 ; Function setHealthBar
                                   2326 ; ---------------------------------
      000823                       2327 _setHealthBar::
      000823 E8 FB                 2328 	add	sp, #-5
                                   2329 ;src/main.c:121: if (hp >= 80) {
      000825 F8 08                 2330 	ldhl	sp,	#8
      000827 7E                    2331 	ld	a, (hl)
      000828 D6 50                 2332 	sub	a, #0x50
      00082A 38 31                 2333 	jr	C, 00102$
                                   2334 ;src/main.c:122: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      00082C F8 00                 2335 	ldhl	sp,	#0
      00082E 4D                    2336 	ld	c, l
      00082F 44                    2337 	ld	b, h
      000830 36 50                 2338 	ld	(hl), #0x50
      000832 69                    2339 	ld	l, c
                                   2340 ;	spillPairReg hl
                                   2341 ;	spillPairReg hl
      000833 60                    2342 	ld	h, b
                                   2343 ;	spillPairReg hl
                                   2344 ;	spillPairReg hl
      000834 23                    2345 	inc	hl
      000835 36 50                 2346 	ld	(hl), #0x50
      000837 69                    2347 	ld	l, c
                                   2348 ;	spillPairReg hl
                                   2349 ;	spillPairReg hl
      000838 60                    2350 	ld	h, b
                                   2351 ;	spillPairReg hl
                                   2352 ;	spillPairReg hl
      000839 23                    2353 	inc	hl
      00083A 23                    2354 	inc	hl
      00083B 36 50                 2355 	ld	(hl), #0x50
      00083D 69                    2356 	ld	l, c
                                   2357 ;	spillPairReg hl
                                   2358 ;	spillPairReg hl
      00083E 60                    2359 	ld	h, b
                                   2360 ;	spillPairReg hl
                                   2361 ;	spillPairReg hl
      00083F 23                    2362 	inc	hl
      000840 23                    2363 	inc	hl
      000841 23                    2364 	inc	hl
      000842 36 50                 2365 	ld	(hl), #0x50
      000844 21 04 00              2366 	ld	hl, #0x0004
      000847 09                    2367 	add	hl, bc
      000848 36 50                 2368 	ld	(hl), #0x50
                                   2369 ;src/main.c:123: set_win_tiles(5,row,5,1,blockmap);
      00084A C5                    2370 	push	bc
      00084B 21 05 01              2371 	ld	hl, #0x105
      00084E E5                    2372 	push	hl
      00084F F8 0B                 2373 	ldhl	sp,	#11
      000851 66                    2374 	ld	h, (hl)
      000852 2E 05                 2375 	ld	l, #0x05
      000854 E5                    2376 	push	hl
      000855 CDr00r00              2377 	call	_set_win_tiles
      000858 E8 06                 2378 	add	sp, #6
                                   2379 ;src/main.c:124: return;
      00085A C3r31r09              2380 	jp	00109$
      00085D                       2381 00102$:
                                   2382 ;src/main.c:126: if (hp >= 60) {
      00085D F8 08                 2383 	ldhl	sp,	#8
      00085F 7E                    2384 	ld	a, (hl)
      000860 D6 3C                 2385 	sub	a, #0x3c
      000862 38 31                 2386 	jr	C, 00104$
                                   2387 ;src/main.c:127: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000864 F8 00                 2388 	ldhl	sp,	#0
      000866 4D                    2389 	ld	c, l
      000867 44                    2390 	ld	b, h
      000868 36 50                 2391 	ld	(hl), #0x50
      00086A 69                    2392 	ld	l, c
                                   2393 ;	spillPairReg hl
                                   2394 ;	spillPairReg hl
      00086B 60                    2395 	ld	h, b
                                   2396 ;	spillPairReg hl
                                   2397 ;	spillPairReg hl
      00086C 23                    2398 	inc	hl
      00086D 36 50                 2399 	ld	(hl), #0x50
      00086F 69                    2400 	ld	l, c
                                   2401 ;	spillPairReg hl
                                   2402 ;	spillPairReg hl
      000870 60                    2403 	ld	h, b
                                   2404 ;	spillPairReg hl
                                   2405 ;	spillPairReg hl
      000871 23                    2406 	inc	hl
      000872 23                    2407 	inc	hl
      000873 36 50                 2408 	ld	(hl), #0x50
      000875 69                    2409 	ld	l, c
                                   2410 ;	spillPairReg hl
                                   2411 ;	spillPairReg hl
      000876 60                    2412 	ld	h, b
                                   2413 ;	spillPairReg hl
                                   2414 ;	spillPairReg hl
      000877 23                    2415 	inc	hl
      000878 23                    2416 	inc	hl
      000879 23                    2417 	inc	hl
      00087A 36 50                 2418 	ld	(hl), #0x50
      00087C 21 04 00              2419 	ld	hl, #0x0004
      00087F 09                    2420 	add	hl, bc
      000880 36 00                 2421 	ld	(hl), #0x00
                                   2422 ;src/main.c:128: set_win_tiles(5,row,5,1,blockmap);
      000882 C5                    2423 	push	bc
      000883 21 05 01              2424 	ld	hl, #0x105
      000886 E5                    2425 	push	hl
      000887 F8 0B                 2426 	ldhl	sp,	#11
      000889 66                    2427 	ld	h, (hl)
      00088A 2E 05                 2428 	ld	l, #0x05
      00088C E5                    2429 	push	hl
      00088D CDr00r00              2430 	call	_set_win_tiles
      000890 E8 06                 2431 	add	sp, #6
                                   2432 ;src/main.c:129: return;
      000892 C3r31r09              2433 	jp	00109$
      000895                       2434 00104$:
                                   2435 ;src/main.c:131: if (hp >= 40) {
      000895 F8 08                 2436 	ldhl	sp,	#8
      000897 7E                    2437 	ld	a, (hl)
      000898 D6 28                 2438 	sub	a, #0x28
      00089A 38 30                 2439 	jr	C, 00106$
                                   2440 ;src/main.c:132: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      00089C F8 00                 2441 	ldhl	sp,	#0
      00089E 4D                    2442 	ld	c, l
      00089F 44                    2443 	ld	b, h
      0008A0 36 50                 2444 	ld	(hl), #0x50
      0008A2 69                    2445 	ld	l, c
                                   2446 ;	spillPairReg hl
                                   2447 ;	spillPairReg hl
      0008A3 60                    2448 	ld	h, b
                                   2449 ;	spillPairReg hl
                                   2450 ;	spillPairReg hl
      0008A4 23                    2451 	inc	hl
      0008A5 36 50                 2452 	ld	(hl), #0x50
      0008A7 69                    2453 	ld	l, c
                                   2454 ;	spillPairReg hl
                                   2455 ;	spillPairReg hl
      0008A8 60                    2456 	ld	h, b
                                   2457 ;	spillPairReg hl
                                   2458 ;	spillPairReg hl
      0008A9 23                    2459 	inc	hl
      0008AA 23                    2460 	inc	hl
      0008AB 36 50                 2461 	ld	(hl), #0x50
      0008AD 59                    2462 	ld	e, c
      0008AE 50                    2463 	ld	d, b
      0008AF 13                    2464 	inc	de
      0008B0 13                    2465 	inc	de
      0008B1 13                    2466 	inc	de
      0008B2 AF                    2467 	xor	a, a
      0008B3 12                    2468 	ld	(de), a
      0008B4 21 04 00              2469 	ld	hl, #0x0004
      0008B7 09                    2470 	add	hl, bc
      0008B8 36 00                 2471 	ld	(hl), #0x00
                                   2472 ;src/main.c:133: set_win_tiles(5,row,5,1,blockmap);
      0008BA C5                    2473 	push	bc
      0008BB 21 05 01              2474 	ld	hl, #0x105
      0008BE E5                    2475 	push	hl
      0008BF F8 0B                 2476 	ldhl	sp,	#11
      0008C1 66                    2477 	ld	h, (hl)
      0008C2 2E 05                 2478 	ld	l, #0x05
      0008C4 E5                    2479 	push	hl
      0008C5 CDr00r00              2480 	call	_set_win_tiles
      0008C8 E8 06                 2481 	add	sp, #6
                                   2482 ;src/main.c:134: return;
      0008CA 18 65                 2483 	jr	00109$
      0008CC                       2484 00106$:
                                   2485 ;src/main.c:136: if (hp >= 20) {
      0008CC F8 08                 2486 	ldhl	sp,	#8
      0008CE 7E                    2487 	ld	a, (hl)
      0008CF D6 14                 2488 	sub	a, #0x14
      0008D1 38 30                 2489 	jr	C, 00108$
                                   2490 ;src/main.c:137: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      0008D3 F8 00                 2491 	ldhl	sp,	#0
      0008D5 4D                    2492 	ld	c, l
      0008D6 44                    2493 	ld	b, h
      0008D7 36 50                 2494 	ld	(hl), #0x50
      0008D9 69                    2495 	ld	l, c
                                   2496 ;	spillPairReg hl
                                   2497 ;	spillPairReg hl
      0008DA 60                    2498 	ld	h, b
                                   2499 ;	spillPairReg hl
                                   2500 ;	spillPairReg hl
      0008DB 23                    2501 	inc	hl
      0008DC 36 50                 2502 	ld	(hl), #0x50
      0008DE 59                    2503 	ld	e, c
      0008DF 50                    2504 	ld	d, b
      0008E0 13                    2505 	inc	de
      0008E1 13                    2506 	inc	de
      0008E2 AF                    2507 	xor	a, a
      0008E3 12                    2508 	ld	(de), a
      0008E4 59                    2509 	ld	e, c
      0008E5 50                    2510 	ld	d, b
      0008E6 13                    2511 	inc	de
      0008E7 13                    2512 	inc	de
      0008E8 13                    2513 	inc	de
      0008E9 AF                    2514 	xor	a, a
      0008EA 12                    2515 	ld	(de), a
      0008EB 21 04 00              2516 	ld	hl, #0x0004
      0008EE 09                    2517 	add	hl, bc
      0008EF 36 00                 2518 	ld	(hl), #0x00
                                   2519 ;src/main.c:138: set_win_tiles(5,row,5,1,blockmap);
      0008F1 C5                    2520 	push	bc
      0008F2 21 05 01              2521 	ld	hl, #0x105
      0008F5 E5                    2522 	push	hl
      0008F6 F8 0B                 2523 	ldhl	sp,	#11
      0008F8 66                    2524 	ld	h, (hl)
      0008F9 2E 05                 2525 	ld	l, #0x05
      0008FB E5                    2526 	push	hl
      0008FC CDr00r00              2527 	call	_set_win_tiles
      0008FF E8 06                 2528 	add	sp, #6
                                   2529 ;src/main.c:139: return;
      000901 18 2E                 2530 	jr	00109$
      000903                       2531 00108$:
                                   2532 ;src/main.c:141: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000903 F8 00                 2533 	ldhl	sp,	#0
      000905 4D                    2534 	ld	c, l
      000906 44                    2535 	ld	b, h
      000907 36 50                 2536 	ld	(hl), #0x50
      000909 59                    2537 	ld	e, c
      00090A 50                    2538 	ld	d, b
      00090B 13                    2539 	inc	de
      00090C AF                    2540 	xor	a, a
      00090D 12                    2541 	ld	(de), a
      00090E 59                    2542 	ld	e, c
      00090F 50                    2543 	ld	d, b
      000910 13                    2544 	inc	de
      000911 13                    2545 	inc	de
      000912 AF                    2546 	xor	a, a
      000913 12                    2547 	ld	(de), a
      000914 59                    2548 	ld	e, c
      000915 50                    2549 	ld	d, b
      000916 13                    2550 	inc	de
      000917 13                    2551 	inc	de
      000918 13                    2552 	inc	de
      000919 AF                    2553 	xor	a, a
      00091A 12                    2554 	ld	(de), a
      00091B 21 04 00              2555 	ld	hl, #0x0004
      00091E 09                    2556 	add	hl, bc
      00091F 36 00                 2557 	ld	(hl), #0x00
                                   2558 ;src/main.c:142: set_win_tiles(5,row,5,1,blockmap);
      000921 C5                    2559 	push	bc
      000922 21 05 01              2560 	ld	hl, #0x105
      000925 E5                    2561 	push	hl
      000926 F8 0B                 2562 	ldhl	sp,	#11
      000928 66                    2563 	ld	h, (hl)
      000929 2E 05                 2564 	ld	l, #0x05
      00092B E5                    2565 	push	hl
      00092C CDr00r00              2566 	call	_set_win_tiles
      00092F E8 06                 2567 	add	sp, #6
                                   2568 ;src/main.c:143: return;
      000931                       2569 00109$:
                                   2570 ;src/main.c:145: }
      000931 E8 05                 2571 	add	sp, #5
      000933 C9                    2572 	ret
                                   2573 ;src/main.c:147: void updateScore() {
                                   2574 ;	---------------------------------
                                   2575 ; Function updateScore
                                   2576 ; ---------------------------------
      000934                       2577 _updateScore::
      000934 E8 F6                 2578 	add	sp, #-10
                                   2579 ;src/main.c:151: len = bcd2text(&bcd, 0x01, buf);
      000936 F8 00                 2580 	ldhl	sp,	#0
      000938 4D                    2581 	ld	c, l
      000939 44                    2582 	ld	b, h
      00093A 59                    2583 	ld	e, c
      00093B 50                    2584 	ld	d, b
      00093C C5                    2585 	push	bc
      00093D D5                    2586 	push	de
      00093E 3E 01                 2587 	ld	a, #0x01
      000940 F5                    2588 	push	af
      000941 33                    2589 	inc	sp
      000942 11rA0r00              2590 	ld	de, #_bcd
      000945 D5                    2591 	push	de
      000946 CDr00r00              2592 	call	_bcd2text
      000949 E8 05                 2593 	add	sp, #5
      00094B C1                    2594 	pop	bc
                                   2595 ;src/main.c:152: set_win_tiles(15, 1, 5, 1, buf+3);
      00094C 03                    2596 	inc	bc
      00094D 03                    2597 	inc	bc
      00094E 03                    2598 	inc	bc
      00094F C5                    2599 	push	bc
      000950 21 05 01              2600 	ld	hl, #0x105
      000953 E5                    2601 	push	hl
      000954 21 0F 01              2602 	ld	hl, #0x10f
      000957 E5                    2603 	push	hl
      000958 CDr00r00              2604 	call	_set_win_tiles
                                   2605 ;src/main.c:153: }
      00095B E8 10                 2606 	add	sp, #16
      00095D C9                    2607 	ret
                                   2608 ;src/main.c:155: void incrementScore() {
                                   2609 ;	---------------------------------
                                   2610 ; Function incrementScore
                                   2611 ; ---------------------------------
      00095E                       2612 _incrementScore::
                                   2613 ;src/main.c:156: score += 1;
      00095E 21r9Er00              2614 	ld	hl, #_score
      000961 2A                    2615 	ld	a, (hl+)
      000962 4F                    2616 	ld	c, a
      000963 3A                    2617 	ld	a, (hl-)
      000964 47                    2618 	ld	b, a
      000965 03                    2619 	inc	bc
      000966 79                    2620 	ld	a, c
      000967 22                    2621 	ld	(hl+), a
      000968 70                    2622 	ld	(hl), b
                                   2623 ;src/main.c:157: bcd_add(&bcd, &INCREMENT);
      000969 11rA4r00              2624 	ld	de, #_INCREMENT
      00096C D5                    2625 	push	de
      00096D 11rA0r00              2626 	ld	de, #_bcd
      000970 D5                    2627 	push	de
      000971 CDr00r00              2628 	call	_bcd_add
      000974 E8 04                 2629 	add	sp, #4
                                   2630 ;src/main.c:158: }
      000976 C9                    2631 	ret
                                   2632 ;src/main.c:160: void updateDirection() {
                                   2633 ;	---------------------------------
                                   2634 ; Function updateDirection
                                   2635 ; ---------------------------------
      000977                       2636 _updateDirection::
      000977 E8 FC                 2637 	add	sp, #-4
                                   2638 ;src/main.c:164: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000979 21rDCr00              2639 	ld	hl, #_joydata
      00097C 5E                    2640 	ld	e, (hl)
      00097D 7B                    2641 	ld	a, e
      00097E E6 01                 2642 	and	a, #0x01
      000980 F8 00                 2643 	ldhl	sp,	#0
      000982 22                    2644 	ld	(hl+), a
      000983 AF                    2645 	xor	a, a
      000984 22                    2646 	ld	(hl+), a
      000985 7B                    2647 	ld	a, e
      000986 E6 04                 2648 	and	a, #0x04
      000988 22                    2649 	ld	(hl+), a
      000989 AF                    2650 	xor	a, a
      00098A 32                    2651 	ld	(hl-), a
      00098B 2B                    2652 	dec	hl
      00098C 7B                    2653 	ld	a, e
      00098D E6 08                 2654 	and	a, #0x08
      00098F 4F                    2655 	ld	c, a
      000990 06 00                 2656 	ld	b, #0x00
      000992 3A                    2657 	ld	a, (hl-)
      000993 B6                    2658 	or	a, (hl)
      000994 28 14                 2659 	jr	Z, 00102$
      000996 F8 03                 2660 	ldhl	sp,	#3
      000998 3A                    2661 	ld	a, (hl-)
      000999 B6                    2662 	or	a, (hl)
      00099A 20 0E                 2663 	jr	NZ, 00102$
      00099C 78                    2664 	ld	a, b
      00099D B1                    2665 	or	a, c
      00099E 20 0A                 2666 	jr	NZ, 00102$
                                   2667 ;src/main.c:165: xDir = 1;
      0009A0 21r86r00              2668 	ld	hl, #_xDir
      0009A3 36 01                 2669 	ld	(hl), #0x01
                                   2670 ;src/main.c:166: yDir = 0;
      0009A5 21r87r00              2671 	ld	hl, #_yDir
      0009A8 36 00                 2672 	ld	(hl), #0x00
      0009AA                       2673 00102$:
                                   2674 ;src/main.c:168: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0009AA 7B                    2675 	ld	a, e
      0009AB E6 02                 2676 	and	a, #0x02
      0009AD 5F                    2677 	ld	e, a
      0009AE 16 00                 2678 	ld	d, #0x00
      0009B0 7A                    2679 	ld	a, d
      0009B1 B3                    2680 	or	a, e
      0009B2 28 14                 2681 	jr	Z, 00106$
      0009B4 F8 03                 2682 	ldhl	sp,	#3
      0009B6 3A                    2683 	ld	a, (hl-)
      0009B7 B6                    2684 	or	a, (hl)
      0009B8 20 0E                 2685 	jr	NZ, 00106$
      0009BA 78                    2686 	ld	a, b
      0009BB B1                    2687 	or	a, c
      0009BC 20 0A                 2688 	jr	NZ, 00106$
                                   2689 ;src/main.c:169: xDir = -1;
      0009BE 21r86r00              2690 	ld	hl, #_xDir
      0009C1 36 FF                 2691 	ld	(hl), #0xff
                                   2692 ;src/main.c:170: yDir = 0;
      0009C3 21r87r00              2693 	ld	hl, #_yDir
      0009C6 36 00                 2694 	ld	(hl), #0x00
      0009C8                       2695 00106$:
                                   2696 ;src/main.c:172: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      0009C8 F8 03                 2697 	ldhl	sp,	#3
      0009CA 3A                    2698 	ld	a, (hl-)
      0009CB B6                    2699 	or	a, (hl)
      0009CC 28 13                 2700 	jr	Z, 00110$
      0009CE 7A                    2701 	ld	a, d
      0009CF B3                    2702 	or	a, e
      0009D0 20 0F                 2703 	jr	NZ, 00110$
      0009D2 2B                    2704 	dec	hl
      0009D3 3A                    2705 	ld	a, (hl-)
      0009D4 B6                    2706 	or	a, (hl)
      0009D5 20 0A                 2707 	jr	NZ, 00110$
                                   2708 ;src/main.c:173: xDir = 0;
      0009D7 21r86r00              2709 	ld	hl, #_xDir
      0009DA 36 00                 2710 	ld	(hl), #0x00
                                   2711 ;src/main.c:174: yDir = -1;
      0009DC 21r87r00              2712 	ld	hl, #_yDir
      0009DF 36 FF                 2713 	ld	(hl), #0xff
      0009E1                       2714 00110$:
                                   2715 ;src/main.c:176: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      0009E1 78                    2716 	ld	a, b
      0009E2 B1                    2717 	or	a, c
      0009E3 28 14                 2718 	jr	Z, 00114$
      0009E5 7A                    2719 	ld	a, d
      0009E6 B3                    2720 	or	a, e
      0009E7 20 10                 2721 	jr	NZ, 00114$
      0009E9 F8 01                 2722 	ldhl	sp,	#1
      0009EB 3A                    2723 	ld	a, (hl-)
      0009EC B6                    2724 	or	a, (hl)
      0009ED 20 0A                 2725 	jr	NZ, 00114$
                                   2726 ;src/main.c:177: xDir = 0;
      0009EF 21r86r00              2727 	ld	hl, #_xDir
      0009F2 36 00                 2728 	ld	(hl), #0x00
                                   2729 ;src/main.c:178: yDir = 1;
      0009F4 21r87r00              2730 	ld	hl, #_yDir
      0009F7 36 01                 2731 	ld	(hl), #0x01
      0009F9                       2732 00114$:
                                   2733 ;src/main.c:182: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      0009F9 F8 03                 2734 	ldhl	sp,	#3
      0009FB 3A                    2735 	ld	a, (hl-)
      0009FC B6                    2736 	or	a, (hl)
      0009FD 28 0F                 2737 	jr	Z, 00118$
      0009FF 2B                    2738 	dec	hl
      000A00 3A                    2739 	ld	a, (hl-)
      000A01 B6                    2740 	or	a, (hl)
      000A02 28 0A                 2741 	jr	Z, 00118$
                                   2742 ;src/main.c:183: xDir = 1;
      000A04 21r86r00              2743 	ld	hl, #_xDir
      000A07 36 01                 2744 	ld	(hl), #0x01
                                   2745 ;src/main.c:184: yDir = -1;
      000A09 21r87r00              2746 	ld	hl, #_yDir
      000A0C 36 FF                 2747 	ld	(hl), #0xff
      000A0E                       2748 00118$:
                                   2749 ;src/main.c:186: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000A0E F8 03                 2750 	ldhl	sp,	#3
      000A10 3A                    2751 	ld	a, (hl-)
      000A11 B6                    2752 	or	a, (hl)
      000A12 28 0E                 2753 	jr	Z, 00121$
      000A14 7A                    2754 	ld	a, d
      000A15 B3                    2755 	or	a, e
      000A16 28 0A                 2756 	jr	Z, 00121$
                                   2757 ;src/main.c:187: xDir = -1;
      000A18 21r86r00              2758 	ld	hl, #_xDir
      000A1B 36 FF                 2759 	ld	(hl), #0xff
                                   2760 ;src/main.c:188: yDir = -1;
      000A1D 21r87r00              2761 	ld	hl, #_yDir
      000A20 36 FF                 2762 	ld	(hl), #0xff
      000A22                       2763 00121$:
                                   2764 ;src/main.c:190: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000A22 78                    2765 	ld	a, b
      000A23 B1                    2766 	or	a, c
      000A24 28 10                 2767 	jr	Z, 00124$
      000A26 F8 01                 2768 	ldhl	sp,	#1
      000A28 3A                    2769 	ld	a, (hl-)
      000A29 B6                    2770 	or	a, (hl)
      000A2A 28 0A                 2771 	jr	Z, 00124$
                                   2772 ;src/main.c:191: xDir = 1;
      000A2C 21r86r00              2773 	ld	hl, #_xDir
      000A2F 36 01                 2774 	ld	(hl), #0x01
                                   2775 ;src/main.c:192: yDir = 1;
      000A31 21r87r00              2776 	ld	hl, #_yDir
      000A34 36 01                 2777 	ld	(hl), #0x01
      000A36                       2778 00124$:
                                   2779 ;src/main.c:194: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000A36 78                    2780 	ld	a, b
      000A37 B1                    2781 	or	a, c
      000A38 28 0E                 2782 	jr	Z, 00127$
      000A3A 7A                    2783 	ld	a, d
      000A3B B3                    2784 	or	a, e
      000A3C 28 0A                 2785 	jr	Z, 00127$
                                   2786 ;src/main.c:195: xDir = -1;
      000A3E 21r86r00              2787 	ld	hl, #_xDir
      000A41 36 FF                 2788 	ld	(hl), #0xff
                                   2789 ;src/main.c:196: yDir = 1;
      000A43 21r87r00              2790 	ld	hl, #_yDir
      000A46 36 01                 2791 	ld	(hl), #0x01
      000A48                       2792 00127$:
                                   2793 ;src/main.c:201: if (xDir == 0 && yDir == 0) {
      000A48 FAr86r00              2794 	ld	a, (#_xDir)
      000A4B B7                    2795 	or	a, a
      000A4C 20 07                 2796 	jr	NZ, 00130$
      000A4E FAr87r00              2797 	ld	a, (#_yDir)
      000A51 B7                    2798 	or	a, a
                                   2799 ;src/main.c:202: return;
      000A52 CAr9Er0B              2800 	jp	Z,00195$
      000A55                       2801 00130$:
                                   2802 ;src/main.c:234: if (xDir == 0 && yDir > 0) {
      000A55 21r87r00              2803 	ld	hl, #_yDir
      000A58 5E                    2804 	ld	e, (hl)
      000A59 AF                    2805 	xor	a, a
      000A5A 57                    2806 	ld	d, a
      000A5B 96                    2807 	sub	a, (hl)
      000A5C CB 7B                 2808 	bit	7, e
      000A5E 28 07                 2809 	jr	Z, 00387$
      000A60 CB 7A                 2810 	bit	7, d
      000A62 20 08                 2811 	jr	NZ, 00388$
      000A64 BF                    2812 	cp	a, a
      000A65 18 05                 2813 	jr	00388$
      000A67                       2814 00387$:
      000A67 CB 7A                 2815 	bit	7, d
      000A69 28 01                 2816 	jr	Z, 00388$
      000A6B 37                    2817 	scf
      000A6C                       2818 00388$:
      000A6C 3E 00                 2819 	ld	a, #0x00
      000A6E 17                    2820 	rla
      000A6F 4F                    2821 	ld	c, a
      000A70 FAr86r00              2822 	ld	a, (#_xDir)
      000A73 B7                    2823 	or	a,a
      000A74 20 1A                 2824 	jr	NZ, 00160$
      000A76 B1                    2825 	or	a,c
      000A77 28 17                 2826 	jr	Z, 00160$
                                   2827 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000A79 21r02r00              2828 	ld	hl, #(_shadow_OAM + 2)
      000A7C 36 00                 2829 	ld	(hl), #0x00
      000A7E 21r06r00              2830 	ld	hl, #(_shadow_OAM + 6)
      000A81 36 02                 2831 	ld	(hl), #0x02
                                   2832 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000A83 21r03r00              2833 	ld	hl, #(_shadow_OAM + 3)
      000A86 36 40                 2834 	ld	(hl), #0x40
      000A88 21r07r00              2835 	ld	hl, #(_shadow_OAM + 7)
      000A8B 36 40                 2836 	ld	(hl), #0x40
                                   2837 ;src/main.c:238: set_sprite_prop(1, S_FLIPY); 
      000A8D C3r9Er0B              2838 	jp	00195$
      000A90                       2839 00160$:
                                   2840 ;src/main.c:240: else if (xDir == 0 && yDir < 0) {
      000A90 FAr87r00              2841 	ld	a, (#_yDir)
      000A93 07                    2842 	rlca
      000A94 E6 01                 2843 	and	a,#0x01
      000A96 F8 02                 2844 	ldhl	sp,	#2
      000A98 77                    2845 	ld	(hl), a
      000A99 FAr86r00              2846 	ld	a, (#_xDir)
      000A9C B7                    2847 	or	a, a
      000A9D 20 1D                 2848 	jr	NZ, 00156$
      000A9F F8 02                 2849 	ldhl	sp,	#2
      000AA1 7E                    2850 	ld	a, (hl)
      000AA2 B7                    2851 	or	a, a
      000AA3 28 17                 2852 	jr	Z, 00156$
                                   2853 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AA5 21r02r00              2854 	ld	hl, #(_shadow_OAM + 2)
      000AA8 36 00                 2855 	ld	(hl), #0x00
      000AAA 21r06r00              2856 	ld	hl, #(_shadow_OAM + 6)
      000AAD 36 02                 2857 	ld	(hl), #0x02
                                   2858 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000AAF 21r03r00              2859 	ld	hl, #(_shadow_OAM + 3)
      000AB2 36 00                 2860 	ld	(hl), #0x00
      000AB4 21r07r00              2861 	ld	hl, #(_shadow_OAM + 7)
      000AB7 36 00                 2862 	ld	(hl), #0x00
                                   2863 ;src/main.c:244: set_sprite_prop(1, 0); 
      000AB9 C3r9Er0B              2864 	jp	00195$
      000ABC                       2865 00156$:
                                   2866 ;src/main.c:246: else if (xDir > 0 && yDir == 0) {
      000ABC 21r86r00              2867 	ld	hl, #_xDir
      000ABF 5E                    2868 	ld	e, (hl)
      000AC0 AF                    2869 	xor	a, a
      000AC1 57                    2870 	ld	d, a
      000AC2 96                    2871 	sub	a, (hl)
      000AC3 CB 7B                 2872 	bit	7, e
      000AC5 28 07                 2873 	jr	Z, 00389$
      000AC7 CB 7A                 2874 	bit	7, d
      000AC9 20 08                 2875 	jr	NZ, 00390$
      000ACB BF                    2876 	cp	a, a
      000ACC 18 05                 2877 	jr	00390$
      000ACE                       2878 00389$:
      000ACE CB 7A                 2879 	bit	7, d
      000AD0 28 01                 2880 	jr	Z, 00390$
      000AD2 37                    2881 	scf
      000AD3                       2882 00390$:
      000AD3 3E 00                 2883 	ld	a, #0x00
      000AD5 17                    2884 	rla
      000AD6 47                    2885 	ld	b, a
      000AD7 B7                    2886 	or	a, a
      000AD8 28 1D                 2887 	jr	Z, 00152$
      000ADA FAr87r00              2888 	ld	a, (#_yDir)
      000ADD B7                    2889 	or	a, a
      000ADE 20 17                 2890 	jr	NZ, 00152$
                                   2891 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AE0 21r02r00              2892 	ld	hl, #(_shadow_OAM + 2)
      000AE3 36 04                 2893 	ld	(hl), #0x04
      000AE5 21r06r00              2894 	ld	hl, #(_shadow_OAM + 6)
      000AE8 36 06                 2895 	ld	(hl), #0x06
                                   2896 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000AEA 21r03r00              2897 	ld	hl, #(_shadow_OAM + 3)
      000AED 36 00                 2898 	ld	(hl), #0x00
      000AEF 21r07r00              2899 	ld	hl, #(_shadow_OAM + 7)
      000AF2 36 00                 2900 	ld	(hl), #0x00
                                   2901 ;src/main.c:250: set_sprite_prop(1, 0); 
      000AF4 C3r9Er0B              2902 	jp	00195$
      000AF7                       2903 00152$:
                                   2904 ;src/main.c:252: else if (xDir < 0 && yDir == 0) {
      000AF7 FAr86r00              2905 	ld	a, (#_xDir)
      000AFA 07                    2906 	rlca
      000AFB E6 01                 2907 	and	a,#0x01
      000AFD F8 03                 2908 	ldhl	sp,	#3
      000AFF 77                    2909 	ld	(hl), a
      000B00 7E                    2910 	ld	a, (hl)
      000B01 B7                    2911 	or	a, a
      000B02 28 1D                 2912 	jr	Z, 00148$
      000B04 FAr87r00              2913 	ld	a, (#_yDir)
      000B07 B7                    2914 	or	a, a
      000B08 20 17                 2915 	jr	NZ, 00148$
                                   2916 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B0A 21r02r00              2917 	ld	hl, #(_shadow_OAM + 2)
      000B0D 36 04                 2918 	ld	(hl), #0x04
      000B0F 21r06r00              2919 	ld	hl, #(_shadow_OAM + 6)
      000B12 36 06                 2920 	ld	(hl), #0x06
                                   2921 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B14 21r03r00              2922 	ld	hl, #(_shadow_OAM + 3)
      000B17 36 20                 2923 	ld	(hl), #0x20
      000B19 21r07r00              2924 	ld	hl, #(_shadow_OAM + 7)
      000B1C 36 20                 2925 	ld	(hl), #0x20
                                   2926 ;src/main.c:256: set_sprite_prop(1, S_FLIPX); 
      000B1E C3r9Er0B              2927 	jp	00195$
      000B21                       2928 00148$:
                                   2929 ;src/main.c:258: else if (xDir > 0 && yDir < 0) {
      000B21 78                    2930 	ld	a, b
      000B22 B7                    2931 	or	a, a
      000B23 28 1C                 2932 	jr	Z, 00144$
      000B25 F8 02                 2933 	ldhl	sp,	#2
      000B27 7E                    2934 	ld	a, (hl)
      000B28 B7                    2935 	or	a, a
      000B29 28 16                 2936 	jr	Z, 00144$
                                   2937 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B2B 21r02r00              2938 	ld	hl, #(_shadow_OAM + 2)
      000B2E 36 08                 2939 	ld	(hl), #0x08
      000B30 21r06r00              2940 	ld	hl, #(_shadow_OAM + 6)
      000B33 36 0A                 2941 	ld	(hl), #0x0a
                                   2942 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B35 21r03r00              2943 	ld	hl, #(_shadow_OAM + 3)
      000B38 36 00                 2944 	ld	(hl), #0x00
      000B3A 21r07r00              2945 	ld	hl, #(_shadow_OAM + 7)
      000B3D 36 00                 2946 	ld	(hl), #0x00
                                   2947 ;src/main.c:262: set_sprite_prop(1, 0); 
      000B3F 18 5D                 2948 	jr	00195$
      000B41                       2949 00144$:
                                   2950 ;src/main.c:264: else if (xDir > 0 && yDir > 0) {
      000B41 78                    2951 	ld	a, b
      000B42 B7                    2952 	or	a, a
      000B43 28 1A                 2953 	jr	Z, 00140$
      000B45 79                    2954 	ld	a, c
      000B46 B7                    2955 	or	a, a
      000B47 28 16                 2956 	jr	Z, 00140$
                                   2957 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B49 21r02r00              2958 	ld	hl, #(_shadow_OAM + 2)
      000B4C 36 08                 2959 	ld	(hl), #0x08
      000B4E 21r06r00              2960 	ld	hl, #(_shadow_OAM + 6)
      000B51 36 0A                 2961 	ld	(hl), #0x0a
                                   2962 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B53 21r03r00              2963 	ld	hl, #(_shadow_OAM + 3)
      000B56 36 40                 2964 	ld	(hl), #0x40
      000B58 21r07r00              2965 	ld	hl, #(_shadow_OAM + 7)
      000B5B 36 40                 2966 	ld	(hl), #0x40
                                   2967 ;src/main.c:268: set_sprite_prop(1, S_FLIPY); 
      000B5D 18 3F                 2968 	jr	00195$
      000B5F                       2969 00140$:
                                   2970 ;src/main.c:270: else if (xDir < 0 && yDir > 0) {
      000B5F F8 03                 2971 	ldhl	sp,	#3
      000B61 7E                    2972 	ld	a, (hl)
      000B62 B7                    2973 	or	a, a
      000B63 28 1A                 2974 	jr	Z, 00136$
      000B65 79                    2975 	ld	a, c
      000B66 B7                    2976 	or	a, a
      000B67 28 16                 2977 	jr	Z, 00136$
                                   2978 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B69 21r02r00              2979 	ld	hl, #(_shadow_OAM + 2)
      000B6C 36 08                 2980 	ld	(hl), #0x08
      000B6E 21r06r00              2981 	ld	hl, #(_shadow_OAM + 6)
      000B71 36 0A                 2982 	ld	(hl), #0x0a
                                   2983 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B73 21r03r00              2984 	ld	hl, #(_shadow_OAM + 3)
      000B76 36 60                 2985 	ld	(hl), #0x60
      000B78 21r07r00              2986 	ld	hl, #(_shadow_OAM + 7)
      000B7B 36 60                 2987 	ld	(hl), #0x60
                                   2988 ;src/main.c:274: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000B7D 18 1F                 2989 	jr	00195$
      000B7F                       2990 00136$:
                                   2991 ;src/main.c:276: else if (xDir < 0 && yDir < 0) {
      000B7F F8 03                 2992 	ldhl	sp,	#3
      000B81 7E                    2993 	ld	a, (hl)
      000B82 B7                    2994 	or	a, a
      000B83 28 19                 2995 	jr	Z, 00195$
      000B85 2B                    2996 	dec	hl
      000B86 7E                    2997 	ld	a, (hl)
      000B87 B7                    2998 	or	a, a
      000B88 28 14                 2999 	jr	Z, 00195$
                                   3000 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B8A 21r02r00              3001 	ld	hl, #(_shadow_OAM + 2)
      000B8D 36 08                 3002 	ld	(hl), #0x08
      000B8F 21r06r00              3003 	ld	hl, #(_shadow_OAM + 6)
      000B92 36 0A                 3004 	ld	(hl), #0x0a
                                   3005 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B94 21r03r00              3006 	ld	hl, #(_shadow_OAM + 3)
      000B97 36 20                 3007 	ld	(hl), #0x20
      000B99 21r07r00              3008 	ld	hl, #(_shadow_OAM + 7)
      000B9C 36 20                 3009 	ld	(hl), #0x20
                                   3010 ;src/main.c:280: set_sprite_prop(1, S_FLIPX); 
      000B9E                       3011 00195$:
                                   3012 ;src/main.c:282: }
      000B9E E8 04                 3013 	add	sp, #4
      000BA0 C9                    3014 	ret
                                   3015 ;src/main.c:311: void playSound(uint8_t type) {
                                   3016 ;	---------------------------------
                                   3017 ; Function playSound
                                   3018 ; ---------------------------------
      000BA1                       3019 _playSound::
                                   3020 ;src/main.c:312: if (type == 20) { //singlegun
      000BA1 F8 02                 3021 	ldhl	sp,	#2
      000BA3 7E                    3022 	ld	a, (hl)
      000BA4 D6 14                 3023 	sub	a, #0x14
      000BA6 20 13                 3024 	jr	NZ, 00102$
                                   3025 ;src/main.c:313: NR10_REG = 0x00;
      000BA8 AF                    3026 	xor	a, a
      000BA9 E0r00                 3027 	ldh	(_NR10_REG + 0), a
                                   3028 ;src/main.c:314: NR11_REG = 0x81;
      000BAB 3E 81                 3029 	ld	a, #0x81
      000BAD E0r00                 3030 	ldh	(_NR11_REG + 0), a
                                   3031 ;src/main.c:315: NR12_REG = 0x43;
      000BAF 3E 43                 3032 	ld	a, #0x43
      000BB1 E0r00                 3033 	ldh	(_NR12_REG + 0), a
                                   3034 ;src/main.c:316: NR13_REG = 0X00;//0x6D;
      000BB3 AF                    3035 	xor	a, a
      000BB4 E0r00                 3036 	ldh	(_NR13_REG + 0), a
                                   3037 ;src/main.c:317: NR14_REG = 0x86;
      000BB6 3E 86                 3038 	ld	a, #0x86
      000BB8 E0r00                 3039 	ldh	(_NR14_REG + 0), a
                                   3040 ;src/main.c:318: return;
      000BBA C9                    3041 	ret
      000BBB                       3042 00102$:
                                   3043 ;src/main.c:320: if (type == 23) {
      000BBB F8 02                 3044 	ldhl	sp,	#2
      000BBD 7E                    3045 	ld	a, (hl)
      000BBE D6 17                 3046 	sub	a, #0x17
      000BC0 20 12                 3047 	jr	NZ, 00104$
                                   3048 ;src/main.c:321: NR10_REG = 0x00;
      000BC2 AF                    3049 	xor	a, a
      000BC3 E0r00                 3050 	ldh	(_NR10_REG + 0), a
                                   3051 ;src/main.c:322: NR11_REG = 0x81;
      000BC5 3E 81                 3052 	ld	a, #0x81
      000BC7 E0r00                 3053 	ldh	(_NR11_REG + 0), a
                                   3054 ;src/main.c:323: NR12_REG = 0x53;
      000BC9 3E 53                 3055 	ld	a, #0x53
      000BCB E0r00                 3056 	ldh	(_NR12_REG + 0), a
                                   3057 ;src/main.c:324: NR13_REG = 0X00;//0x6D;
      000BCD AF                    3058 	xor	a, a
      000BCE E0r00                 3059 	ldh	(_NR13_REG + 0), a
                                   3060 ;src/main.c:325: NR14_REG = 0x86;
      000BD0 3E 86                 3061 	ld	a, #0x86
      000BD2 E0r00                 3062 	ldh	(_NR14_REG + 0), a
      000BD4                       3063 00104$:
                                   3064 ;src/main.c:327: if (type == 26) {
      000BD4 F8 02                 3065 	ldhl	sp,	#2
      000BD6 7E                    3066 	ld	a, (hl)
      000BD7 D6 1A                 3067 	sub	a, #0x1a
      000BD9 20 13                 3068 	jr	NZ, 00106$
                                   3069 ;src/main.c:328: NR10_REG = 0x00;
      000BDB AF                    3070 	xor	a, a
      000BDC E0r00                 3071 	ldh	(_NR10_REG + 0), a
                                   3072 ;src/main.c:329: NR11_REG = 0x89;
      000BDE 3E 89                 3073 	ld	a, #0x89
      000BE0 E0r00                 3074 	ldh	(_NR11_REG + 0), a
                                   3075 ;src/main.c:330: NR12_REG = 0x55;
      000BE2 3E 55                 3076 	ld	a, #0x55
      000BE4 E0r00                 3077 	ldh	(_NR12_REG + 0), a
                                   3078 ;src/main.c:331: NR13_REG = 0x70;//0Xbe;//0x6D;
      000BE6 3E 70                 3079 	ld	a, #0x70
      000BE8 E0r00                 3080 	ldh	(_NR13_REG + 0), a
                                   3081 ;src/main.c:332: NR14_REG = 0x84;
      000BEA 3E 84                 3082 	ld	a, #0x84
      000BEC E0r00                 3083 	ldh	(_NR14_REG + 0), a
      000BEE                       3084 00106$:
                                   3085 ;src/main.c:334: if (type == 0) {  // explosion
      000BEE F8 02                 3086 	ldhl	sp,	#2
      000BF0 7E                    3087 	ld	a, (hl)
      000BF1 B7                    3088 	or	a, a
      000BF2 C0                    3089 	ret	NZ
                                   3090 ;src/main.c:335: NR41_REG = 0x20;  
      000BF3 3E 20                 3091 	ld	a, #0x20
      000BF5 E0r00                 3092 	ldh	(_NR41_REG + 0), a
                                   3093 ;src/main.c:336: NR42_REG = 0xa2;//0xa3;  
      000BF7 3E A2                 3094 	ld	a, #0xa2
      000BF9 E0r00                 3095 	ldh	(_NR42_REG + 0), a
                                   3096 ;src/main.c:337: NR43_REG = 0x57;  
      000BFB 3E 57                 3097 	ld	a, #0x57
      000BFD E0r00                 3098 	ldh	(_NR43_REG + 0), a
                                   3099 ;src/main.c:338: NR44_REG = 0x80;  
      000BFF 3E 80                 3100 	ld	a, #0x80
      000C01 E0r00                 3101 	ldh	(_NR44_REG + 0), a
                                   3102 ;src/main.c:344: }
      000C03 C9                    3103 	ret
                                   3104 ;src/main.c:346: void initEnemies(uint8_t loadSprites) {
                                   3105 ;	---------------------------------
                                   3106 ; Function initEnemies
                                   3107 ; ---------------------------------
      000C04                       3108 _initEnemies::
      000C04 E8 F9                 3109 	add	sp, #-7
                                   3110 ;src/main.c:348: if (loadSprites) {
      000C06 F8 09                 3111 	ldhl	sp,	#9
      000C08 7E                    3112 	ld	a, (hl)
      000C09 B7                    3113 	or	a, a
      000C0A 28 1A                 3114 	jr	Z, 00102$
                                   3115 ;src/main.c:350: set_sprite_data(0x40, 5, enemy1);
      000C0C 11r18r05              3116 	ld	de, #_enemy1
      000C0F D5                    3117 	push	de
      000C10 21 40 05              3118 	ld	hl, #0x540
      000C13 E5                    3119 	push	hl
      000C14 CDr00r00              3120 	call	_set_sprite_data
      000C17 E8 04                 3121 	add	sp, #4
                                   3122 ;src/main.c:351: set_sprite_data(0x50, 8, largeenemies);
      000C19 11r68r05              3123 	ld	de, #_largeenemies
      000C1C D5                    3124 	push	de
      000C1D 21 50 08              3125 	ld	hl, #0x850
      000C20 E5                    3126 	push	hl
      000C21 CDr00r00              3127 	call	_set_sprite_data
      000C24 E8 04                 3128 	add	sp, #4
      000C26                       3129 00102$:
                                   3130 ;src/main.c:354: struct Enemy *eptr = enemies;
      000C26 F8 04                 3131 	ldhl	sp,	#4
      000C28 3Er50                 3132 	ld	a, #<(_enemies)
      000C2A 22                    3133 	ld	(hl+), a
                                   3134 ;src/main.c:356: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000C2B 3Es00                 3135 	ld	a, #>(_enemies)
      000C2D 22                    3136 	ld	(hl+), a
      000C2E 36 00                 3137 	ld	(hl), #0x00
      000C30                       3138 00116$:
      000C30 21r0Dr08              3139 	ld	hl, #_ENEMYCOUNT
      000C33 4E                    3140 	ld	c, (hl)
      000C34 F8 06                 3141 	ldhl	sp,	#6
      000C36 7E                    3142 	ld	a, (hl)
      000C37 91                    3143 	sub	a, c
      000C38 D2rACr0D              3144 	jp	NC, 00118$
                                   3145 ;src/main.c:357: if (eptr->alive == 0) {
      000C3B 2B                    3146 	dec	hl
      000C3C 2B                    3147 	dec	hl
      000C3D 2A                    3148 	ld	a, (hl+)
      000C3E 5F                    3149 	ld	e, a
      000C3F 56                    3150 	ld	d, (hl)
      000C40 21 09 00              3151 	ld	hl, #0x0009
      000C43 19                    3152 	add	hl, de
      000C44 4D                    3153 	ld	c, l
      000C45 44                    3154 	ld	b, h
      000C46 0A                    3155 	ld	a, (bc)
      000C47 F8 03                 3156 	ldhl	sp,	#3
      000C49 77                    3157 	ld	(hl), a
      000C4A 7E                    3158 	ld	a, (hl)
      000C4B B7                    3159 	or	a, a
      000C4C C2r95r0D              3160 	jp	NZ, 00107$
                                   3161 ;src/main.c:359: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      000C4F CDr00r00              3162 	call	_rand
      000C52 F8 02                 3163 	ldhl	sp,	#2
      000C54 73                    3164 	ld	(hl), e
      000C55 FAr17r05              3165 	ld	a, (#_enemyOptionCount)
      000C58 F8 03                 3166 	ldhl	sp,	#3
      000C5A 77                    3167 	ld	(hl), a
      000C5B 3A                    3168 	ld	a, (hl-)
      000C5C 57                    3169 	ld	d, a
      000C5D 5E                    3170 	ld	e, (hl)
      000C5E D5                    3171 	push	de
      000C5F CDr00r00              3172 	call	__moduchar
      000C62 E1                    3173 	pop	hl
                                   3174 ;src/main.c:361: (*eptr) = enemyOptions[enemyInd];
      000C63 F8 03                 3175 	ldhl	sp,#3
      000C65 73                    3176 	ld	(hl), e
      000C66 3A                    3177 	ld	a, (hl-)
      000C67 22                    3178 	ld	(hl+), a
      000C68 AF                    3179 	xor	a, a
      000C69 32                    3180 	ld	(hl-), a
      000C6A 3A                    3181 	ld	a, (hl-)
      000C6B 2B                    3182 	dec	hl
      000C6C 77                    3183 	ld	(hl), a
      000C6D F8 03                 3184 	ldhl	sp,	#3
      000C6F 3A                    3185 	ld	a, (hl-)
      000C70 2B                    3186 	dec	hl
      000C71 77                    3187 	ld	(hl), a
      000C72 3E 04                 3188 	ld	a, #0x04
      000C74                       3189 00146$:
      000C74 F8 00                 3190 	ldhl	sp,	#0
      000C76 CB 26                 3191 	sla	(hl)
      000C78 23                    3192 	inc	hl
      000C79 CB 16                 3193 	rl	(hl)
      000C7B 3D                    3194 	dec	a
      000C7C 20 F6                 3195 	jr	NZ, 00146$
      000C7E D1                    3196 	pop	de
      000C7F D5                    3197 	push	de
      000C80 21r00r00              3198 	ld	hl, #_enemyOptions
      000C83 19                    3199 	add	hl, de
      000C84 E5                    3200 	push	hl
      000C85 7D                    3201 	ld	a, l
      000C86 F8 04                 3202 	ldhl	sp,	#4
      000C88 77                    3203 	ld	(hl), a
      000C89 E1                    3204 	pop	hl
      000C8A 7C                    3205 	ld	a, h
      000C8B F8 03                 3206 	ldhl	sp,	#3
      000C8D 32                    3207 	ld	(hl-), a
      000C8E 2A                    3208 	ld	a, (hl+)
      000C8F 5F                    3209 	ld	e, a
      000C90 2A                    3210 	ld	a, (hl+)
      000C91 57                    3211 	ld	d, a
      000C92 2A                    3212 	ld	a, (hl+)
      000C93 4F                    3213 	ld	c, a
      000C94 46                    3214 	ld	b, (hl)
      000C95 21 10 00              3215 	ld	hl, #0x0010
      000C98 E5                    3216 	push	hl
      000C99 D5                    3217 	push	de
      000C9A C5                    3218 	push	bc
      000C9B CDr00r00              3219 	call	___memcpy
      000C9E E8 06                 3220 	add	sp, #6
                                   3221 ;src/main.c:363: uint8_t posIndex =  ((uint8_t)rand()) % (uint8_t)8;//(rand() & 8);
      000CA0 CDr00r00              3222 	call	_rand
      000CA3 7B                    3223 	ld	a, e
      000CA4 E6 07                 3224 	and	a, #0x07
      000CA6 F8 03                 3225 	ldhl	sp,	#3
      000CA8 77                    3226 	ld	(hl), a
                                   3227 ;src/main.c:364: eptr->x = xSpawnPositions[posIndex];
      000CA9 11r0Er08              3228 	ld	de, #_xSpawnPositions
      000CAC 6E                    3229 	ld	l, (hl)
      000CAD 26 00                 3230 	ld	h, #0x00
      000CAF 19                    3231 	add	hl, de
      000CB0 4D                    3232 	ld	c, l
      000CB1 44                    3233 	ld	b, h
      000CB2 0A                    3234 	ld	a, (bc)
      000CB3 4F                    3235 	ld	c, a
      000CB4 06 00                 3236 	ld	b, #0x00
      000CB6 F8 04                 3237 	ldhl	sp,	#4
      000CB8 2A                    3238 	ld	a,	(hl+)
      000CB9 66                    3239 	ld	h, (hl)
      000CBA 6F                    3240 	ld	l, a
      000CBB 79                    3241 	ld	a, c
      000CBC 22                    3242 	ld	(hl+), a
      000CBD 70                    3243 	ld	(hl), b
                                   3244 ;src/main.c:365: eptr->y = ySpawnPositions[posIndex];
      000CBE F8 04                 3245 	ldhl	sp,#4
      000CC0 2A                    3246 	ld	a, (hl+)
      000CC1 5F                    3247 	ld	e, a
      000CC2 56                    3248 	ld	d, (hl)
      000CC3 21 02 00              3249 	ld	hl, #0x0002
      000CC6 19                    3250 	add	hl, de
      000CC7 33                    3251 	inc	sp
      000CC8 33                    3252 	inc	sp
      000CC9 E5                    3253 	push	hl
      000CCA 11r16r08              3254 	ld	de, #_ySpawnPositions
      000CCD F8 03                 3255 	ldhl	sp,	#3
      000CCF 6E                    3256 	ld	l, (hl)
      000CD0 26 00                 3257 	ld	h, #0x00
      000CD2 19                    3258 	add	hl, de
      000CD3 4D                    3259 	ld	c, l
      000CD4 44                    3260 	ld	b, h
      000CD5 0A                    3261 	ld	a, (bc)
      000CD6 4F                    3262 	ld	c, a
      000CD7 06 00                 3263 	ld	b, #0x00
      000CD9 E1                    3264 	pop	hl
      000CDA E5                    3265 	push	hl
      000CDB 79                    3266 	ld	a, c
      000CDC 22                    3267 	ld	(hl+), a
      000CDD 70                    3268 	ld	(hl), b
                                   3269 ;src/main.c:367: if (eptr->spriteCount == 1) {
      000CDE F8 04                 3270 	ldhl	sp,#4
      000CE0 2A                    3271 	ld	a, (hl+)
      000CE1 5F                    3272 	ld	e, a
      000CE2 56                    3273 	ld	d, (hl)
      000CE3 21 08 00              3274 	ld	hl, #0x0008
      000CE6 19                    3275 	add	hl, de
      000CE7 4D                    3276 	ld	c, l
      000CE8 44                    3277 	ld	b, h
      000CE9 0A                    3278 	ld	a, (bc)
      000CEA 47                    3279 	ld	b, a
                                   3280 ;src/main.c:368: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000CEB F8 04                 3281 	ldhl	sp,#4
      000CED 2A                    3282 	ld	a, (hl+)
      000CEE 5F                    3283 	ld	e, a
      000CEF 56                    3284 	ld	d, (hl)
      000CF0 21 06 00              3285 	ld	hl, #0x0006
      000CF3 19                    3286 	add	hl, de
      000CF4 5D                    3287 	ld	e, l
      000CF5 54                    3288 	ld	d, h
      000CF6 F8 06                 3289 	ldhl	sp,	#6
      000CF8 4E                    3290 	ld	c, (hl)
      000CF9 1A                    3291 	ld	a, (de)
      000CFA 5F                    3292 	ld	e, a
      000CFB CB 21                 3293 	sla	c
      000CFD 79                    3294 	ld	a, c
      000CFE C6 0A                 3295 	add	a, #0x0a
      000D00 F8 02                 3296 	ldhl	sp,	#2
      000D02 77                    3297 	ld	(hl), a
                                   3298 ;src/main.c:367: if (eptr->spriteCount == 1) {
      000D03 05                    3299 	dec	b
      000D04 20 2C                 3300 	jr	NZ, 00104$
                                   3301 ;src/main.c:368: set_sprite_tile(10+ (i<<1), eptr->sprite0);
                                   3302 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000D06 6E                    3303 	ld	l, (hl)
                                   3304 ;	spillPairReg hl
                                   3305 ;	spillPairReg hl
      000D07 26 00                 3306 	ld	h, #0x00
                                   3307 ;	spillPairReg hl
                                   3308 ;	spillPairReg hl
      000D09 29                    3309 	add	hl, hl
      000D0A 29                    3310 	add	hl, hl
      000D0B 01r00r00              3311 	ld	bc, #_shadow_OAM
      000D0E 09                    3312 	add	hl, bc
      000D0F 23                    3313 	inc	hl
      000D10 23                    3314 	inc	hl
      000D11 73                    3315 	ld	(hl), e
                                   3316 ;src/main.c:369: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000D12 D1                    3317 	pop	de
      000D13 D5                    3318 	push	de
      000D14 1A                    3319 	ld	a, (de)
      000D15 4F                    3320 	ld	c, a
      000D16 F8 04                 3321 	ldhl	sp,#4
      000D18 2A                    3322 	ld	a, (hl+)
      000D19 5F                    3323 	ld	e, a
      000D1A 3A                    3324 	ld	a, (hl-)
      000D1B 2B                    3325 	dec	hl
      000D1C 57                    3326 	ld	d, a
      000D1D 1A                    3327 	ld	a, (de)
      000D1E 32                    3328 	ld	(hl-), a
                                   3329 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000D1F 6E                    3330 	ld	l, (hl)
                                   3331 ;	spillPairReg hl
                                   3332 ;	spillPairReg hl
      000D20 26 00                 3333 	ld	h, #0x00
                                   3334 ;	spillPairReg hl
                                   3335 ;	spillPairReg hl
      000D22 29                    3336 	add	hl, hl
      000D23 29                    3337 	add	hl, hl
      000D24 11r00r00              3338 	ld	de, #_shadow_OAM
      000D27 19                    3339 	add	hl, de
                                   3340 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000D28 79                    3341 	ld	a, c
      000D29 22                    3342 	ld	(hl+), a
      000D2A 4D                    3343 	ld	c, l
      000D2B 44                    3344 	ld	b, h
      000D2C F8 03                 3345 	ldhl	sp,	#3
      000D2E 7E                    3346 	ld	a, (hl)
      000D2F 02                    3347 	ld	(bc), a
                                   3348 ;src/main.c:369: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000D30 18 63                 3349 	jr	00107$
      000D32                       3350 00104$:
                                   3351 ;src/main.c:372: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000D32 43                    3352 	ld	b, e
      000D33 F8 02                 3353 	ldhl	sp,	#2
                                   3354 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000D35 6E                    3355 	ld	l, (hl)
                                   3356 ;	spillPairReg hl
                                   3357 ;	spillPairReg hl
      000D36 26 00                 3358 	ld	h, #0x00
                                   3359 ;	spillPairReg hl
                                   3360 ;	spillPairReg hl
      000D38 29                    3361 	add	hl, hl
      000D39 29                    3362 	add	hl, hl
      000D3A 11r00r00              3363 	ld	de, #_shadow_OAM
      000D3D 19                    3364 	add	hl, de
      000D3E 23                    3365 	inc	hl
      000D3F 23                    3366 	inc	hl
      000D40 70                    3367 	ld	(hl), b
                                   3368 ;src/main.c:373: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000D41 D1                    3369 	pop	de
      000D42 D5                    3370 	push	de
      000D43 1A                    3371 	ld	a, (de)
      000D44 47                    3372 	ld	b, a
      000D45 F8 04                 3373 	ldhl	sp,#4
      000D47 2A                    3374 	ld	a, (hl+)
      000D48 5F                    3375 	ld	e, a
      000D49 3A                    3376 	ld	a, (hl-)
      000D4A 2B                    3377 	dec	hl
      000D4B 57                    3378 	ld	d, a
      000D4C 1A                    3379 	ld	a, (de)
      000D4D 32                    3380 	ld	(hl-), a
                                   3381 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000D4E 6E                    3382 	ld	l, (hl)
                                   3383 ;	spillPairReg hl
                                   3384 ;	spillPairReg hl
      000D4F 26 00                 3385 	ld	h, #0x00
                                   3386 ;	spillPairReg hl
                                   3387 ;	spillPairReg hl
      000D51 29                    3388 	add	hl, hl
      000D52 29                    3389 	add	hl, hl
      000D53 11r00r00              3390 	ld	de, #_shadow_OAM
      000D56 19                    3391 	add	hl, de
                                   3392 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000D57 78                    3393 	ld	a, b
      000D58 22                    3394 	ld	(hl+), a
      000D59 5D                    3395 	ld	e, l
      000D5A 54                    3396 	ld	d, h
      000D5B F8 03                 3397 	ldhl	sp,	#3
                                   3398 ;src/main.c:375: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      000D5D 2A                    3399 	ld	a, (hl+)
      000D5E 12                    3400 	ld	(de), a
      000D5F 2A                    3401 	ld	a, (hl+)
      000D60 5F                    3402 	ld	e, a
      000D61 56                    3403 	ld	d, (hl)
      000D62 21 07 00              3404 	ld	hl, #0x0007
      000D65 19                    3405 	add	hl, de
      000D66 5D                    3406 	ld	e, l
      000D67 54                    3407 	ld	d, h
      000D68 1A                    3408 	ld	a, (de)
      000D69 5F                    3409 	ld	e, a
      000D6A 79                    3410 	ld	a, c
      000D6B C6 0B                 3411 	add	a, #0x0b
      000D6D F8 03                 3412 	ldhl	sp,	#3
      000D6F 77                    3413 	ld	(hl), a
                                   3414 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000D70 6E                    3415 	ld	l, (hl)
                                   3416 ;	spillPairReg hl
                                   3417 ;	spillPairReg hl
      000D71 26 00                 3418 	ld	h, #0x00
                                   3419 ;	spillPairReg hl
                                   3420 ;	spillPairReg hl
      000D73 29                    3421 	add	hl, hl
      000D74 29                    3422 	add	hl, hl
      000D75 01r00r00              3423 	ld	bc, #_shadow_OAM
      000D78 09                    3424 	add	hl, bc
      000D79 23                    3425 	inc	hl
      000D7A 23                    3426 	inc	hl
      000D7B 73                    3427 	ld	(hl), e
                                   3428 ;src/main.c:376: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000D7C D1                    3429 	pop	de
      000D7D D5                    3430 	push	de
      000D7E 1A                    3431 	ld	a, (de)
      000D7F 47                    3432 	ld	b, a
      000D80 F8 04                 3433 	ldhl	sp,#4
      000D82 2A                    3434 	ld	a, (hl+)
      000D83 5F                    3435 	ld	e, a
      000D84 3A                    3436 	ld	a, (hl-)
      000D85 2B                    3437 	dec	hl
      000D86 57                    3438 	ld	d, a
      000D87 1A                    3439 	ld	a, (de)
      000D88 4F                    3440 	ld	c, a
                                   3441 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000D89 6E                    3442 	ld	l, (hl)
                                   3443 ;	spillPairReg hl
                                   3444 ;	spillPairReg hl
      000D8A 26 00                 3445 	ld	h, #0x00
                                   3446 ;	spillPairReg hl
                                   3447 ;	spillPairReg hl
      000D8C 29                    3448 	add	hl, hl
      000D8D 29                    3449 	add	hl, hl
      000D8E 11r00r00              3450 	ld	de, #_shadow_OAM
      000D91 19                    3451 	add	hl, de
                                   3452 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000D92 78                    3453 	ld	a, b
      000D93 22                    3454 	ld	(hl+), a
      000D94 71                    3455 	ld	(hl), c
                                   3456 ;src/main.c:376: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000D95                       3457 00107$:
                                   3458 ;src/main.c:381: eptr++;
      000D95 F8 04                 3459 	ldhl	sp,#4
      000D97 2A                    3460 	ld	a, (hl+)
      000D98 5F                    3461 	ld	e, a
      000D99 56                    3462 	ld	d, (hl)
      000D9A 21 10 00              3463 	ld	hl, #0x0010
      000D9D 19                    3464 	add	hl, de
      000D9E E5                    3465 	push	hl
      000D9F 7D                    3466 	ld	a, l
      000DA0 F8 06                 3467 	ldhl	sp,	#6
      000DA2 77                    3468 	ld	(hl), a
      000DA3 E1                    3469 	pop	hl
      000DA4 7C                    3470 	ld	a, h
      000DA5 F8 05                 3471 	ldhl	sp,	#5
                                   3472 ;src/main.c:356: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000DA7 22                    3473 	ld	(hl+), a
      000DA8 34                    3474 	inc	(hl)
      000DA9 C3r30r0C              3475 	jp	00116$
      000DAC                       3476 00118$:
                                   3477 ;src/main.c:384: }
      000DAC E8 07                 3478 	add	sp, #7
      000DAE C9                    3479 	ret
                                   3480 ;src/main.c:387: void updateEnemyPositions() {
                                   3481 ;	---------------------------------
                                   3482 ; Function updateEnemyPositions
                                   3483 ; ---------------------------------
      000DAF                       3484 _updateEnemyPositions::
      000DAF E8 F0                 3485 	add	sp, #-16
                                   3486 ;src/main.c:390: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000DB1 F8 0F                 3487 	ldhl	sp,	#15
      000DB3 36 00                 3488 	ld	(hl), #0x00
      000DB5                       3489 00196$:
      000DB5 21r0Dr08              3490 	ld	hl, #_ENEMYCOUNT
      000DB8 4E                    3491 	ld	c, (hl)
      000DB9 F8 0F                 3492 	ldhl	sp,	#15
      000DBB 7E                    3493 	ld	a, (hl)
      000DBC 91                    3494 	sub	a, c
      000DBD D2r6Cr12              3495 	jp	NC, 00134$
                                   3496 ;src/main.c:391: if (!enemies[i].alive) {
      000DC0 3A                    3497 	ld	a, (hl-)
      000DC1 2B                    3498 	dec	hl
      000DC2 22                    3499 	ld	(hl+), a
      000DC3 36 00                 3500 	ld	(hl), #0x00
      000DC5 3E 04                 3501 	ld	a, #0x04
      000DC7                       3502 00407$:
      000DC7 F8 0D                 3503 	ldhl	sp,	#13
      000DC9 CB 26                 3504 	sla	(hl)
      000DCB 23                    3505 	inc	hl
      000DCC CB 16                 3506 	rl	(hl)
      000DCE 3D                    3507 	dec	a
      000DCF 20 F6                 3508 	jr	NZ, 00407$
      000DD1 2B                    3509 	dec	hl
      000DD2 2A                    3510 	ld	a, (hl+)
      000DD3 5F                    3511 	ld	e, a
      000DD4 56                    3512 	ld	d, (hl)
      000DD5 21r50r00              3513 	ld	hl, #_enemies
      000DD8 19                    3514 	add	hl, de
      000DD9 E5                    3515 	push	hl
      000DDA 7D                    3516 	ld	a, l
      000DDB F8 04                 3517 	ldhl	sp,	#4
      000DDD 77                    3518 	ld	(hl), a
      000DDE E1                    3519 	pop	hl
      000DDF 7C                    3520 	ld	a, h
      000DE0 F8 03                 3521 	ldhl	sp,	#3
      000DE2 32                    3522 	ld	(hl-), a
      000DE3 2A                    3523 	ld	a, (hl+)
      000DE4 5F                    3524 	ld	e, a
      000DE5 56                    3525 	ld	d, (hl)
      000DE6 21 09 00              3526 	ld	hl, #0x0009
      000DE9 19                    3527 	add	hl, de
      000DEA 4D                    3528 	ld	c, l
      000DEB 44                    3529 	ld	b, h
      000DEC 0A                    3530 	ld	a, (bc)
      000DED B7                    3531 	or	a, a
      000DEE CAr66r12              3532 	jp	Z, 00133$
                                   3533 ;src/main.c:394: enemies[i].x -= xOverflow;
      000DF1 F8 02                 3534 	ldhl	sp,#2
      000DF3 2A                    3535 	ld	a, (hl+)
      000DF4 5F                    3536 	ld	e, a
      000DF5 56                    3537 	ld	d, (hl)
      000DF6 1A                    3538 	ld	a, (de)
      000DF7 4F                    3539 	ld	c, a
      000DF8 13                    3540 	inc	de
      000DF9 1A                    3541 	ld	a, (de)
      000DFA 47                    3542 	ld	b, a
      000DFB 21r94r00              3543 	ld	hl, #_xOverflow
      000DFE 2A                    3544 	ld	a, (hl+)
      000DFF 5F                    3545 	ld	e, a
      000E00 56                    3546 	ld	d, (hl)
      000E01 79                    3547 	ld	a, c
      000E02 93                    3548 	sub	a, e
      000E03 5F                    3549 	ld	e, a
      000E04 78                    3550 	ld	a, b
      000E05 9A                    3551 	sbc	a, d
      000E06 F8 0E                 3552 	ldhl	sp,	#14
      000E08 32                    3553 	ld	(hl-), a
      000E09 73                    3554 	ld	(hl), e
      000E0A F8 02                 3555 	ldhl	sp,#2
      000E0C 2A                    3556 	ld	a, (hl+)
      000E0D 5F                    3557 	ld	e, a
      000E0E 56                    3558 	ld	d, (hl)
      000E0F F8 0D                 3559 	ldhl	sp,	#13
      000E11 2A                    3560 	ld	a, (hl+)
      000E12 12                    3561 	ld	(de), a
      000E13 13                    3562 	inc	de
      000E14 7E                    3563 	ld	a, (hl)
      000E15 12                    3564 	ld	(de), a
                                   3565 ;src/main.c:395: enemies[i].y -= yOverflow;
      000E16 F8 02                 3566 	ldhl	sp,#2
      000E18 2A                    3567 	ld	a, (hl+)
      000E19 5F                    3568 	ld	e, a
      000E1A 56                    3569 	ld	d, (hl)
      000E1B 21 02 00              3570 	ld	hl, #0x0002
      000E1E 19                    3571 	add	hl, de
      000E1F E5                    3572 	push	hl
      000E20 7D                    3573 	ld	a, l
      000E21 F8 06                 3574 	ldhl	sp,	#6
      000E23 77                    3575 	ld	(hl), a
      000E24 E1                    3576 	pop	hl
      000E25 7C                    3577 	ld	a, h
      000E26 F8 05                 3578 	ldhl	sp,	#5
      000E28 32                    3579 	ld	(hl-), a
      000E29 2A                    3580 	ld	a, (hl+)
      000E2A 5F                    3581 	ld	e, a
      000E2B 56                    3582 	ld	d, (hl)
      000E2C 1A                    3583 	ld	a, (de)
      000E2D 4F                    3584 	ld	c, a
      000E2E 13                    3585 	inc	de
      000E2F 1A                    3586 	ld	a, (de)
      000E30 47                    3587 	ld	b, a
      000E31 79                    3588 	ld	a, c
      000E32 21r96r00              3589 	ld	hl, #_yOverflow
      000E35 96                    3590 	sub	a, (hl)
      000E36 23                    3591 	inc	hl
      000E37 4F                    3592 	ld	c, a
      000E38 78                    3593 	ld	a, b
      000E39 9E                    3594 	sbc	a, (hl)
      000E3A 47                    3595 	ld	b, a
      000E3B F8 04                 3596 	ldhl	sp,	#4
      000E3D 2A                    3597 	ld	a,	(hl+)
      000E3E 66                    3598 	ld	h, (hl)
      000E3F 6F                    3599 	ld	l, a
      000E40 79                    3600 	ld	a, c
      000E41 22                    3601 	ld	(hl+), a
      000E42 70                    3602 	ld	(hl), b
                                   3603 ;src/main.c:398: if (abs(enemies[i].x - playerDrawX) > 8) {
      000E43 F8 0D                 3604 	ldhl	sp,	#13
      000E45 7E                    3605 	ld	a, (hl)
      000E46 21r8Er00              3606 	ld	hl, #_playerDrawX
      000E49 4E                    3607 	ld	c, (hl)
      000E4A 91                    3608 	sub	a, c
      000E4B 4F                    3609 	ld	c, a
                                   3610 ;src/main.c:306: if (value >= 0) return value;
      000E4C CB 79                 3611 	bit	7, c
      000E4E 20 03                 3612 	jr	NZ, 00169$
      000E50 41                    3613 	ld	b, c
      000E51 18 03                 3614 	jr	00171$
      000E53                       3615 00169$:
                                   3616 ;src/main.c:307: else return - value;
      000E53 AF                    3617 	xor	a, a
      000E54 91                    3618 	sub	a, c
      000E55 47                    3619 	ld	b, a
                                   3620 ;src/main.c:398: if (abs(enemies[i].x - playerDrawX) > 8) {
      000E56                       3621 00171$:
                                   3622 ;src/main.c:407: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000E56 F8 02                 3623 	ldhl	sp,#2
      000E58 2A                    3624 	ld	a, (hl+)
      000E59 5F                    3625 	ld	e, a
      000E5A 56                    3626 	ld	d, (hl)
      000E5B 21 0E 00              3627 	ld	hl, #0x000e
      000E5E 19                    3628 	add	hl, de
      000E5F E5                    3629 	push	hl
      000E60 7D                    3630 	ld	a, l
      000E61 F8 08                 3631 	ldhl	sp,	#8
      000E63 77                    3632 	ld	(hl), a
      000E64 E1                    3633 	pop	hl
      000E65 7C                    3634 	ld	a, h
      000E66 F8 07                 3635 	ldhl	sp,	#7
      000E68 32                    3636 	ld	(hl-), a
      000E69 2A                    3637 	ld	a, (hl+)
      000E6A 5F                    3638 	ld	e, a
      000E6B 56                    3639 	ld	d, (hl)
      000E6C 1A                    3640 	ld	a, (de)
      000E6D 4F                    3641 	ld	c, a
                                   3642 ;src/main.c:400: enemies[i].xSpeed += enemies[i].accel;
      000E6E F8 02                 3643 	ldhl	sp,#2
      000E70 2A                    3644 	ld	a, (hl+)
      000E71 5F                    3645 	ld	e, a
      000E72 56                    3646 	ld	d, (hl)
      000E73 21 0D 00              3647 	ld	hl, #0x000d
      000E76 19                    3648 	add	hl, de
      000E77 33                    3649 	inc	sp
      000E78 33                    3650 	inc	sp
      000E79 E5                    3651 	push	hl
                                   3652 ;src/main.c:398: if (abs(enemies[i].x - playerDrawX) > 8) {
      000E7A 58                    3653 	ld	e, b
      000E7B 3E 08                 3654 	ld	a,#0x08
      000E7D 57                    3655 	ld	d,a
      000E7E 90                    3656 	sub	a, b
      000E7F CB 7B                 3657 	bit	7, e
      000E81 28 07                 3658 	jr	Z, 00408$
      000E83 CB 7A                 3659 	bit	7, d
      000E85 20 08                 3660 	jr	NZ, 00409$
      000E87 BF                    3661 	cp	a, a
      000E88 18 05                 3662 	jr	00409$
      000E8A                       3663 00408$:
      000E8A CB 7A                 3664 	bit	7, d
      000E8C 28 01                 3665 	jr	Z, 00409$
      000E8E 37                    3666 	scf
      000E8F                       3667 00409$:
      000E8F 30 4E                 3668 	jr	NC, 00111$
                                   3669 ;src/main.c:399: if (enemies[i].x < playerDrawX) {
      000E91 F8 02                 3670 	ldhl	sp,#2
      000E93 2A                    3671 	ld	a, (hl+)
      000E94 5F                    3672 	ld	e, a
      000E95 56                    3673 	ld	d, (hl)
      000E96 1A                    3674 	ld	a, (de)
      000E97 F8 0B                 3675 	ldhl	sp,	#11
      000E99 22                    3676 	ld	(hl+), a
      000E9A 13                    3677 	inc	de
      000E9B 1A                    3678 	ld	a, (de)
      000E9C 77                    3679 	ld	(hl), a
      000E9D FAr8Er00              3680 	ld	a, (#_playerDrawX)
      000EA0 F8 0D                 3681 	ldhl	sp,	#13
      000EA2 22                    3682 	ld	(hl+), a
      000EA3 36 00                 3683 	ld	(hl), #0x00
                                   3684 ;src/main.c:400: enemies[i].xSpeed += enemies[i].accel;
      000EA5 D1                    3685 	pop	de
      000EA6 D5                    3686 	push	de
      000EA7 1A                    3687 	ld	a, (de)
      000EA8 47                    3688 	ld	b, a
                                   3689 ;src/main.c:399: if (enemies[i].x < playerDrawX) {
      000EA9 F8 0B                 3690 	ldhl	sp,	#11
      000EAB 5D                    3691 	ld	e, l
      000EAC 54                    3692 	ld	d, h
      000EAD F8 0D                 3693 	ldhl	sp,	#13
      000EAF 1A                    3694 	ld	a, (de)
      000EB0 13                    3695 	inc	de
      000EB1 96                    3696 	sub	a, (hl)
      000EB2 23                    3697 	inc	hl
      000EB3 1A                    3698 	ld	a, (de)
      000EB4 9E                    3699 	sbc	a, (hl)
      000EB5 1A                    3700 	ld	a, (de)
      000EB6 57                    3701 	ld	d, a
      000EB7 CB 7E                 3702 	bit	7, (hl)
      000EB9 28 07                 3703 	jr	Z, 00410$
      000EBB CB 7A                 3704 	bit	7, d
      000EBD 20 08                 3705 	jr	NZ, 00411$
      000EBF BF                    3706 	cp	a, a
      000EC0 18 05                 3707 	jr	00411$
      000EC2                       3708 00410$:
      000EC2 CB 7A                 3709 	bit	7, d
      000EC4 28 01                 3710 	jr	Z, 00411$
      000EC6 37                    3711 	scf
      000EC7                       3712 00411$:
      000EC7 30 0B                 3713 	jr	NC, 00104$
                                   3714 ;src/main.c:400: enemies[i].xSpeed += enemies[i].accel;
      000EC9 79                    3715 	ld	a, c
      000ECA 80                    3716 	add	a, b
      000ECB 4F                    3717 	ld	c, a
      000ECC F8 06                 3718 	ldhl	sp,	#6
      000ECE 2A                    3719 	ld	a,	(hl+)
      000ECF 66                    3720 	ld	h, (hl)
      000ED0 6F                    3721 	ld	l, a
      000ED1 71                    3722 	ld	(hl), c
      000ED2 18 38                 3723 	jr	00112$
      000ED4                       3724 00104$:
                                   3725 ;src/main.c:403: enemies[i].xSpeed -= enemies[i].accel;
      000ED4 79                    3726 	ld	a, c
      000ED5 90                    3727 	sub	a, b
      000ED6 4F                    3728 	ld	c, a
      000ED7 F8 06                 3729 	ldhl	sp,	#6
      000ED9 2A                    3730 	ld	a,	(hl+)
      000EDA 66                    3731 	ld	h, (hl)
      000EDB 6F                    3732 	ld	l, a
      000EDC 71                    3733 	ld	(hl), c
      000EDD 18 2D                 3734 	jr	00112$
      000EDF                       3735 00111$:
                                   3736 ;src/main.c:407: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000EDF 59                    3737 	ld	e, c
      000EE0 AF                    3738 	xor	a, a
      000EE1 57                    3739 	ld	d, a
      000EE2 91                    3740 	sub	a, c
      000EE3 CB 7B                 3741 	bit	7, e
      000EE5 28 07                 3742 	jr	Z, 00412$
      000EE7 CB 7A                 3743 	bit	7, d
      000EE9 20 08                 3744 	jr	NZ, 00413$
      000EEB BF                    3745 	cp	a, a
      000EEC 18 05                 3746 	jr	00413$
      000EEE                       3747 00412$:
      000EEE CB 7A                 3748 	bit	7, d
      000EF0 28 01                 3749 	jr	Z, 00413$
      000EF2 37                    3750 	scf
      000EF3                       3751 00413$:
      000EF3 30 07                 3752 	jr	NC, 00107$
      000EF5 0D                    3753 	dec	c
      000EF6 F8 06                 3754 	ldhl	sp,	#6
      000EF8 2A                    3755 	ld	a,	(hl+)
      000EF9 66                    3756 	ld	h, (hl)
      000EFA 6F                    3757 	ld	l, a
      000EFB 71                    3758 	ld	(hl), c
      000EFC                       3759 00107$:
      000EFC F8 06                 3760 	ldhl	sp,#6
      000EFE 2A                    3761 	ld	a, (hl+)
      000EFF 5F                    3762 	ld	e, a
      000F00 56                    3763 	ld	d, (hl)
      000F01 1A                    3764 	ld	a, (de)
      000F02 4F                    3765 	ld	c, a
                                   3766 ;src/main.c:408: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      000F03 CB 79                 3767 	bit	7, c
      000F05 28 05                 3768 	jr	Z, 00112$
      000F07 0C                    3769 	inc	c
      000F08 3A                    3770 	ld	a, (hl-)
      000F09 6E                    3771 	ld	l, (hl)
      000F0A 67                    3772 	ld	h, a
      000F0B 71                    3773 	ld	(hl), c
      000F0C                       3774 00112$:
                                   3775 ;src/main.c:411: if (abs(enemies[i].y - playerDrawY) > 8) {
      000F0C F8 04                 3776 	ldhl	sp,#4
      000F0E 2A                    3777 	ld	a, (hl+)
      000F0F 5F                    3778 	ld	e, a
      000F10 56                    3779 	ld	d, (hl)
      000F11 1A                    3780 	ld	a, (de)
      000F12 4F                    3781 	ld	c, a
      000F13 13                    3782 	inc	de
      000F14 1A                    3783 	ld	a, (de)
      000F15 47                    3784 	ld	b, a
      000F16 79                    3785 	ld	a, c
      000F17 21r8Fr00              3786 	ld	hl, #_playerDrawY
      000F1A 5E                    3787 	ld	e, (hl)
      000F1B 93                    3788 	sub	a, e
      000F1C 6F                    3789 	ld	l, a
                                   3790 ;	spillPairReg hl
                                   3791 ;	spillPairReg hl
                                   3792 ;src/main.c:306: if (value >= 0) return value;
      000F1D CB 7D                 3793 	bit	7, l
      000F1F 20 06                 3794 	jr	NZ, 00173$
      000F21 7D                    3795 	ld	a, l
      000F22 F8 0E                 3796 	ldhl	sp,	#14
      000F24 77                    3797 	ld	(hl), a
      000F25 18 06                 3798 	jr	00175$
      000F27                       3799 00173$:
                                   3800 ;src/main.c:307: else return - value;
      000F27 AF                    3801 	xor	a, a
      000F28 95                    3802 	sub	a, l
      000F29 5F                    3803 	ld	e, a
      000F2A F8 0E                 3804 	ldhl	sp,	#14
      000F2C 73                    3805 	ld	(hl), e
                                   3806 ;src/main.c:411: if (abs(enemies[i].y - playerDrawY) > 8) {
      000F2D                       3807 00175$:
                                   3808 ;src/main.c:413: enemies[i].ySpeed += enemies[i].accel;
      000F2D F8 02                 3809 	ldhl	sp,#2
      000F2F 2A                    3810 	ld	a, (hl+)
      000F30 5F                    3811 	ld	e, a
      000F31 56                    3812 	ld	d, (hl)
      000F32 21 0F 00              3813 	ld	hl, #0x000f
      000F35 19                    3814 	add	hl, de
      000F36 E5                    3815 	push	hl
      000F37 7D                    3816 	ld	a, l
      000F38 F8 0A                 3817 	ldhl	sp,	#10
      000F3A 77                    3818 	ld	(hl), a
      000F3B E1                    3819 	pop	hl
      000F3C 7C                    3820 	ld	a, h
      000F3D F8 09                 3821 	ldhl	sp,	#9
                                   3822 ;src/main.c:420: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      000F3F 32                    3823 	ld	(hl-), a
      000F40 2A                    3824 	ld	a, (hl+)
      000F41 5F                    3825 	ld	e, a
      000F42 2A                    3826 	ld	a, (hl+)
      000F43 23                    3827 	inc	hl
      000F44 57                    3828 	ld	d, a
      000F45 1A                    3829 	ld	a, (de)
      000F46 77                    3830 	ld	(hl), a
                                   3831 ;src/main.c:411: if (abs(enemies[i].y - playerDrawY) > 8) {
      000F47 F8 0E                 3832 	ldhl	sp,	#14
      000F49 5E                    3833 	ld	e, (hl)
      000F4A 3E 08                 3834 	ld	a,#0x08
      000F4C 57                    3835 	ld	d,a
      000F4D 96                    3836 	sub	a, (hl)
      000F4E CB 7B                 3837 	bit	7, e
      000F50 28 07                 3838 	jr	Z, 00414$
      000F52 CB 7A                 3839 	bit	7, d
      000F54 20 08                 3840 	jr	NZ, 00415$
      000F56 BF                    3841 	cp	a, a
      000F57 18 05                 3842 	jr	00415$
      000F59                       3843 00414$:
      000F59 CB 7A                 3844 	bit	7, d
      000F5B 28 01                 3845 	jr	Z, 00415$
      000F5D 37                    3846 	scf
      000F5E                       3847 00415$:
      000F5E 30 44                 3848 	jr	NC, 00121$
                                   3849 ;src/main.c:412: if (enemies[i].y < playerDrawY) {
      000F60 FAr8Fr00              3850 	ld	a, (#_playerDrawY)
      000F63 F8 0C                 3851 	ldhl	sp,	#12
      000F65 22                    3852 	ld	(hl+), a
                                   3853 ;src/main.c:413: enemies[i].ySpeed += enemies[i].accel;
      000F66 AF                    3854 	xor	a, a
      000F67 22                    3855 	ld	(hl+), a
      000F68 D1                    3856 	pop	de
      000F69 D5                    3857 	push	de
      000F6A 1A                    3858 	ld	a, (de)
                                   3859 ;src/main.c:412: if (enemies[i].y < playerDrawY) {
      000F6B 32                    3860 	ld	(hl-), a
      000F6C 2B                    3861 	dec	hl
      000F6D 79                    3862 	ld	a, c
      000F6E 96                    3863 	sub	a, (hl)
      000F6F 23                    3864 	inc	hl
      000F70 78                    3865 	ld	a, b
      000F71 9E                    3866 	sbc	a, (hl)
      000F72 78                    3867 	ld	a, b
      000F73 57                    3868 	ld	d, a
      000F74 CB 7E                 3869 	bit	7, (hl)
      000F76 28 07                 3870 	jr	Z, 00416$
      000F78 CB 7A                 3871 	bit	7, d
      000F7A 20 08                 3872 	jr	NZ, 00417$
      000F7C BF                    3873 	cp	a, a
      000F7D 18 05                 3874 	jr	00417$
      000F7F                       3875 00416$:
      000F7F CB 7A                 3876 	bit	7, d
      000F81 28 01                 3877 	jr	Z, 00417$
      000F83 37                    3878 	scf
      000F84                       3879 00417$:
      000F84 30 0F                 3880 	jr	NC, 00114$
                                   3881 ;src/main.c:413: enemies[i].ySpeed += enemies[i].accel;
      000F86 F8 0B                 3882 	ldhl	sp,	#11
      000F88 7E                    3883 	ld	a, (hl)
      000F89 F8 0E                 3884 	ldhl	sp,	#14
      000F8B 86                    3885 	add	a, (hl)
      000F8C 4F                    3886 	ld	c, a
      000F8D F8 08                 3887 	ldhl	sp,	#8
      000F8F 2A                    3888 	ld	a,	(hl+)
      000F90 66                    3889 	ld	h, (hl)
      000F91 6F                    3890 	ld	l, a
      000F92 71                    3891 	ld	(hl), c
      000F93 18 41                 3892 	jr	00122$
      000F95                       3893 00114$:
                                   3894 ;src/main.c:416: enemies[i].ySpeed -= enemies[i].accel;
      000F95 F8 0B                 3895 	ldhl	sp,	#11
      000F97 7E                    3896 	ld	a, (hl)
      000F98 F8 0E                 3897 	ldhl	sp,	#14
      000F9A 96                    3898 	sub	a, (hl)
      000F9B 4F                    3899 	ld	c, a
      000F9C F8 08                 3900 	ldhl	sp,	#8
      000F9E 2A                    3901 	ld	a,	(hl+)
      000F9F 66                    3902 	ld	h, (hl)
      000FA0 6F                    3903 	ld	l, a
      000FA1 71                    3904 	ld	(hl), c
      000FA2 18 32                 3905 	jr	00122$
      000FA4                       3906 00121$:
                                   3907 ;src/main.c:420: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      000FA4 F8 0B                 3908 	ldhl	sp,	#11
      000FA6 5E                    3909 	ld	e, (hl)
      000FA7 AF                    3910 	xor	a, a
      000FA8 57                    3911 	ld	d, a
      000FA9 96                    3912 	sub	a, (hl)
      000FAA CB 7B                 3913 	bit	7, e
      000FAC 28 07                 3914 	jr	Z, 00418$
      000FAE CB 7A                 3915 	bit	7, d
      000FB0 20 08                 3916 	jr	NZ, 00419$
      000FB2 BF                    3917 	cp	a, a
      000FB3 18 05                 3918 	jr	00419$
      000FB5                       3919 00418$:
      000FB5 CB 7A                 3920 	bit	7, d
      000FB7 28 01                 3921 	jr	Z, 00419$
      000FB9 37                    3922 	scf
      000FBA                       3923 00419$:
      000FBA 30 0A                 3924 	jr	NC, 00117$
      000FBC F8 0B                 3925 	ldhl	sp,	#11
      000FBE 4E                    3926 	ld	c, (hl)
      000FBF 0D                    3927 	dec	c
      000FC0 F8 08                 3928 	ldhl	sp,	#8
      000FC2 2A                    3929 	ld	a,	(hl+)
      000FC3 66                    3930 	ld	h, (hl)
      000FC4 6F                    3931 	ld	l, a
      000FC5 71                    3932 	ld	(hl), c
      000FC6                       3933 00117$:
      000FC6 F8 08                 3934 	ldhl	sp,#8
      000FC8 2A                    3935 	ld	a, (hl+)
      000FC9 5F                    3936 	ld	e, a
      000FCA 56                    3937 	ld	d, (hl)
      000FCB 1A                    3938 	ld	a, (de)
      000FCC 4F                    3939 	ld	c, a
                                   3940 ;src/main.c:421: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      000FCD CB 79                 3941 	bit	7, c
      000FCF 28 05                 3942 	jr	Z, 00122$
      000FD1 0C                    3943 	inc	c
      000FD2 3A                    3944 	ld	a, (hl-)
      000FD3 6E                    3945 	ld	l, (hl)
      000FD4 67                    3946 	ld	h, a
      000FD5 71                    3947 	ld	(hl), c
      000FD6                       3948 00122$:
                                   3949 ;src/main.c:425: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      000FD6 F8 02                 3950 	ldhl	sp,#2
      000FD8 2A                    3951 	ld	a, (hl+)
      000FD9 5F                    3952 	ld	e, a
      000FDA 56                    3953 	ld	d, (hl)
      000FDB 21 0C 00              3954 	ld	hl, #0x000c
      000FDE 19                    3955 	add	hl, de
      000FDF E5                    3956 	push	hl
      000FE0 7D                    3957 	ld	a, l
      000FE1 F8 0C                 3958 	ldhl	sp,	#12
      000FE3 77                    3959 	ld	(hl), a
      000FE4 E1                    3960 	pop	hl
      000FE5 7C                    3961 	ld	a, h
      000FE6 F8 0B                 3962 	ldhl	sp,	#11
      000FE8 32                    3963 	ld	(hl-), a
      000FE9 2A                    3964 	ld	a, (hl+)
      000FEA 5F                    3965 	ld	e, a
      000FEB 2A                    3966 	ld	a, (hl+)
      000FEC 57                    3967 	ld	d, a
      000FED 1A                    3968 	ld	a, (de)
      000FEE 4F                    3969 	ld	c, a
      000FEF 22                    3970 	ld	(hl+), a
      000FF0 AF                    3971 	xor	a, a
      000FF1 91                    3972 	sub	a, c
      000FF2 77                    3973 	ld	(hl), a
      000FF3 F8 06                 3974 	ldhl	sp,#6
      000FF5 2A                    3975 	ld	a, (hl+)
      000FF6 5F                    3976 	ld	e, a
      000FF7 56                    3977 	ld	d, (hl)
      000FF8 1A                    3978 	ld	a, (de)
      000FF9 F8 0E                 3979 	ldhl	sp,	#14
                                   3980 ;src/main.c:287: return (value < min) ? min : (value > max) ? max : value;
      000FFB 32                    3981 	ld	(hl-), a
      000FFC 2A                    3982 	ld	a, (hl+)
      000FFD 5F                    3983 	ld	e, a
      000FFE 56                    3984 	ld	d, (hl)
      000FFF 3A                    3985 	ld	a, (hl-)
      001000 96                    3986 	sub	a, (hl)
      001001 CB 7B                 3987 	bit	7, e
      001003 28 07                 3988 	jr	Z, 00420$
      001005 CB 7A                 3989 	bit	7, d
      001007 20 08                 3990 	jr	NZ, 00421$
      001009 BF                    3991 	cp	a, a
      00100A 18 05                 3992 	jr	00421$
      00100C                       3993 00420$:
      00100C CB 7A                 3994 	bit	7, d
      00100E 28 01                 3995 	jr	Z, 00421$
      001010 37                    3996 	scf
      001011                       3997 00421$:
      001011 30 06                 3998 	jr	NC, 00202$
      001013 F8 0D                 3999 	ldhl	sp,	#13
      001015 2A                    4000 	ld	a, (hl+)
      001016 77                    4001 	ld	(hl), a
      001017 18 26                 4002 	jr	00203$
      001019                       4003 00202$:
      001019 F8 0E                 4004 	ldhl	sp,	#14
      00101B 3A                    4005 	ld	a, (hl-)
      00101C 2B                    4006 	dec	hl
      00101D 5F                    4007 	ld	e, a
      00101E 56                    4008 	ld	d, (hl)
      00101F 2A                    4009 	ld	a, (hl+)
      001020 23                    4010 	inc	hl
      001021 96                    4011 	sub	a, (hl)
      001022 CB 7B                 4012 	bit	7, e
      001024 28 07                 4013 	jr	Z, 00422$
      001026 CB 7A                 4014 	bit	7, d
      001028 20 08                 4015 	jr	NZ, 00423$
      00102A BF                    4016 	cp	a, a
      00102B 18 05                 4017 	jr	00423$
      00102D                       4018 00422$:
      00102D CB 7A                 4019 	bit	7, d
      00102F 28 01                 4020 	jr	Z, 00423$
      001031 37                    4021 	scf
      001032                       4022 00423$:
      001032 30 05                 4023 	jr	NC, 00204$
      001034 F8 0C                 4024 	ldhl	sp,	#12
      001036 5E                    4025 	ld	e, (hl)
      001037 18 03                 4026 	jr	00205$
      001039                       4027 00204$:
      001039 F8 0E                 4028 	ldhl	sp,	#14
      00103B 5E                    4029 	ld	e, (hl)
      00103C                       4030 00205$:
      00103C F8 0E                 4031 	ldhl	sp,	#14
      00103E 73                    4032 	ld	(hl), e
      00103F                       4033 00203$:
      00103F F8 0E                 4034 	ldhl	sp,	#14
      001041 4E                    4035 	ld	c, (hl)
                                   4036 ;src/main.c:425: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001042 F8 06                 4037 	ldhl	sp,	#6
      001044 2A                    4038 	ld	a,	(hl+)
      001045 66                    4039 	ld	h, (hl)
      001046 6F                    4040 	ld	l, a
      001047 71                    4041 	ld	(hl), c
                                   4042 ;src/main.c:426: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001048 F8 0A                 4043 	ldhl	sp,#10
      00104A 2A                    4044 	ld	a, (hl+)
      00104B 5F                    4045 	ld	e, a
      00104C 3A                    4046 	ld	a, (hl-)
      00104D 2B                    4047 	dec	hl
      00104E 2B                    4048 	dec	hl
      00104F 57                    4049 	ld	d, a
      001050 1A                    4050 	ld	a, (de)
      001051 47                    4051 	ld	b, a
      001052 48                    4052 	ld	c, b
      001053 AF                    4053 	xor	a, a
      001054 90                    4054 	sub	a, b
      001055 47                    4055 	ld	b, a
      001056 2A                    4056 	ld	a, (hl+)
      001057 5F                    4057 	ld	e, a
      001058 56                    4058 	ld	d, (hl)
      001059 1A                    4059 	ld	a, (de)
      00105A 6F                    4060 	ld	l, a
                                   4061 ;	spillPairReg hl
                                   4062 ;	spillPairReg hl
                                   4063 ;src/main.c:287: return (value < min) ? min : (value > max) ? max : value;
      00105B 58                    4064 	ld	e, b
      00105C 7D                    4065 	ld	a,l
      00105D 57                    4066 	ld	d,a
      00105E 90                    4067 	sub	a, b
      00105F CB 7B                 4068 	bit	7, e
      001061 28 07                 4069 	jr	Z, 00424$
      001063 CB 7A                 4070 	bit	7, d
      001065 20 08                 4071 	jr	NZ, 00425$
      001067 BF                    4072 	cp	a, a
      001068 18 05                 4073 	jr	00425$
      00106A                       4074 00424$:
      00106A CB 7A                 4075 	bit	7, d
      00106C 28 01                 4076 	jr	Z, 00425$
      00106E 37                    4077 	scf
      00106F                       4078 00425$:
      00106F 30 03                 4079 	jr	NC, 00206$
      001071 48                    4080 	ld	c, b
      001072 18 17                 4081 	jr	00207$
      001074                       4082 00206$:
      001074 5D                    4083 	ld	e, l
      001075 79                    4084 	ld	a,c
      001076 57                    4085 	ld	d,a
      001077 95                    4086 	sub	a, l
      001078 CB 7B                 4087 	bit	7, e
      00107A 28 07                 4088 	jr	Z, 00426$
      00107C CB 7A                 4089 	bit	7, d
      00107E 20 08                 4090 	jr	NZ, 00427$
      001080 BF                    4091 	cp	a, a
      001081 18 05                 4092 	jr	00427$
      001083                       4093 00426$:
      001083 CB 7A                 4094 	bit	7, d
      001085 28 01                 4095 	jr	Z, 00427$
      001087 37                    4096 	scf
      001088                       4097 00427$:
      001088 38 01                 4098 	jr	C, 00209$
      00108A 4D                    4099 	ld	c, l
      00108B                       4100 00209$:
      00108B                       4101 00207$:
                                   4102 ;src/main.c:426: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      00108B F8 08                 4103 	ldhl	sp,	#8
      00108D 2A                    4104 	ld	a,	(hl+)
      00108E 66                    4105 	ld	h, (hl)
      00108F 6F                    4106 	ld	l, a
      001090 71                    4107 	ld	(hl), c
                                   4108 ;src/main.c:429: enemies[i].xReserve += enemies[i].xSpeed;
      001091 F8 02                 4109 	ldhl	sp,#2
      001093 2A                    4110 	ld	a, (hl+)
      001094 5F                    4111 	ld	e, a
      001095 56                    4112 	ld	d, (hl)
      001096 21 04 00              4113 	ld	hl, #0x0004
      001099 19                    4114 	add	hl, de
      00109A E5                    4115 	push	hl
      00109B 7D                    4116 	ld	a, l
      00109C F8 0F                 4117 	ldhl	sp,	#15
      00109E 77                    4118 	ld	(hl), a
      00109F E1                    4119 	pop	hl
      0010A0 7C                    4120 	ld	a, h
      0010A1 F8 0E                 4121 	ldhl	sp,	#14
      0010A3 32                    4122 	ld	(hl-), a
      0010A4 2A                    4123 	ld	a, (hl+)
      0010A5 5F                    4124 	ld	e, a
      0010A6 56                    4125 	ld	d, (hl)
      0010A7 1A                    4126 	ld	a, (de)
      0010A8 47                    4127 	ld	b, a
      0010A9 F8 06                 4128 	ldhl	sp,#6
      0010AB 2A                    4129 	ld	a, (hl+)
      0010AC 5F                    4130 	ld	e, a
      0010AD 56                    4131 	ld	d, (hl)
      0010AE 1A                    4132 	ld	a, (de)
      0010AF 80                    4133 	add	a, b
      0010B0 47                    4134 	ld	b, a
      0010B1 F8 0D                 4135 	ldhl	sp,	#13
      0010B3 2A                    4136 	ld	a,	(hl+)
      0010B4 66                    4137 	ld	h, (hl)
      0010B5 6F                    4138 	ld	l, a
      0010B6 70                    4139 	ld	(hl), b
                                   4140 ;src/main.c:430: enemies[i].yReserve += enemies[i].ySpeed;
      0010B7 F8 02                 4141 	ldhl	sp,#2
      0010B9 2A                    4142 	ld	a, (hl+)
      0010BA 5F                    4143 	ld	e, a
      0010BB 56                    4144 	ld	d, (hl)
      0010BC 21 05 00              4145 	ld	hl, #0x0005
      0010BF 19                    4146 	add	hl, de
      0010C0 E5                    4147 	push	hl
      0010C1 7D                    4148 	ld	a, l
      0010C2 F8 0C                 4149 	ldhl	sp,	#12
      0010C4 77                    4150 	ld	(hl), a
      0010C5 E1                    4151 	pop	hl
      0010C6 7C                    4152 	ld	a, h
      0010C7 F8 0B                 4153 	ldhl	sp,	#11
      0010C9 32                    4154 	ld	(hl-), a
      0010CA 2A                    4155 	ld	a, (hl+)
      0010CB 5F                    4156 	ld	e, a
      0010CC 56                    4157 	ld	d, (hl)
      0010CD 1A                    4158 	ld	a, (de)
      0010CE 81                    4159 	add	a, c
      0010CF 4F                    4160 	ld	c, a
      0010D0 3A                    4161 	ld	a, (hl-)
      0010D1 6E                    4162 	ld	l, (hl)
      0010D2 67                    4163 	ld	h, a
      0010D3 71                    4164 	ld	(hl), c
                                   4165 ;src/main.c:434: if (enemies[i].xReserve >> 3 > 0) {
      0010D4 F8 0D                 4166 	ldhl	sp,#13
      0010D6 2A                    4167 	ld	a, (hl+)
      0010D7 5F                    4168 	ld	e, a
      0010D8 3A                    4169 	ld	a, (hl-)
      0010D9 2B                    4170 	dec	hl
      0010DA 57                    4171 	ld	d, a
      0010DB 1A                    4172 	ld	a, (de)
      0010DC 77                    4173 	ld	(hl), a
      0010DD CB 28                 4174 	sra	b
      0010DF CB 28                 4175 	sra	b
      0010E1 CB 28                 4176 	sra	b
      0010E3 58                    4177 	ld	e, b
      0010E4 AF                    4178 	xor	a, a
      0010E5 57                    4179 	ld	d, a
      0010E6 90                    4180 	sub	a, b
      0010E7 CB 7B                 4181 	bit	7, e
      0010E9 28 07                 4182 	jr	Z, 00428$
      0010EB CB 7A                 4183 	bit	7, d
      0010ED 20 08                 4184 	jr	NZ, 00429$
      0010EF BF                    4185 	cp	a, a
      0010F0 18 05                 4186 	jr	00429$
      0010F2                       4187 00428$:
      0010F2 CB 7A                 4188 	bit	7, d
      0010F4 28 01                 4189 	jr	Z, 00429$
      0010F6 37                    4190 	scf
      0010F7                       4191 00429$:
      0010F7 30 3F                 4192 	jr	NC, 00126$
                                   4193 ;src/main.c:435: int8_t xMovement = enemies[i].xReserve >> 3;
      0010F9 F8 0C                 4194 	ldhl	sp,	#12
      0010FB 7E                    4195 	ld	a, (hl)
      0010FC CB 2F                 4196 	sra	a
      0010FE CB 2F                 4197 	sra	a
      001100 CB 2F                 4198 	sra	a
      001102 77                    4199 	ld	(hl), a
                                   4200 ;src/main.c:436: enemies[i].x += xMovement;
      001103 F8 02                 4201 	ldhl	sp,#2
      001105 2A                    4202 	ld	a, (hl+)
      001106 5F                    4203 	ld	e, a
      001107 56                    4204 	ld	d, (hl)
      001108 1A                    4205 	ld	a, (de)
      001109 4F                    4206 	ld	c, a
      00110A 13                    4207 	inc	de
      00110B 1A                    4208 	ld	a, (de)
      00110C 47                    4209 	ld	b, a
      00110D F8 0C                 4210 	ldhl	sp,	#12
      00110F 7E                    4211 	ld	a, (hl)
      001110 5F                    4212 	ld	e, a
      001111 07                    4213 	rlca
      001112 9F                    4214 	sbc	a, a
      001113 57                    4215 	ld	d, a
      001114 69                    4216 	ld	l, c
                                   4217 ;	spillPairReg hl
                                   4218 ;	spillPairReg hl
      001115 60                    4219 	ld	h, b
                                   4220 ;	spillPairReg hl
                                   4221 ;	spillPairReg hl
      001116 19                    4222 	add	hl, de
      001117 4D                    4223 	ld	c, l
      001118 44                    4224 	ld	b, h
      001119 F8 02                 4225 	ldhl	sp,	#2
      00111B 2A                    4226 	ld	a,	(hl+)
      00111C 66                    4227 	ld	h, (hl)
      00111D 6F                    4228 	ld	l, a
      00111E 79                    4229 	ld	a, c
      00111F 22                    4230 	ld	(hl+), a
      001120 70                    4231 	ld	(hl), b
                                   4232 ;src/main.c:437: enemies[i].xReserve -=  xMovement << 3;
      001121 F8 0D                 4233 	ldhl	sp,#13
      001123 2A                    4234 	ld	a, (hl+)
      001124 5F                    4235 	ld	e, a
      001125 3A                    4236 	ld	a, (hl-)
      001126 2B                    4237 	dec	hl
      001127 57                    4238 	ld	d, a
      001128 1A                    4239 	ld	a, (de)
      001129 F5                    4240 	push	af
      00112A 2A                    4241 	ld	a, (hl+)
      00112B 87                    4242 	add	a, a
      00112C 87                    4243 	add	a, a
      00112D 87                    4244 	add	a, a
      00112E 4F                    4245 	ld	c, a
      00112F F1                    4246 	pop	af
      001130 91                    4247 	sub	a, c
      001131 4F                    4248 	ld	c, a
      001132 2A                    4249 	ld	a,	(hl+)
      001133 66                    4250 	ld	h, (hl)
      001134 6F                    4251 	ld	l, a
      001135 71                    4252 	ld	(hl), c
      001136 18 69                 4253 	jr	00127$
      001138                       4254 00126$:
                                   4255 ;src/main.c:440: else if ((-enemies[i].xReserve) >> 3 > 0){
      001138 F8 0C                 4256 	ldhl	sp,	#12
      00113A 7E                    4257 	ld	a, (hl)
      00113B 4F                    4258 	ld	c, a
      00113C 07                    4259 	rlca
      00113D 9F                    4260 	sbc	a, a
      00113E 47                    4261 	ld	b, a
      00113F AF                    4262 	xor	a, a
      001140 91                    4263 	sub	a, c
      001141 4F                    4264 	ld	c, a
      001142 9F                    4265 	sbc	a, a
      001143 90                    4266 	sub	a, b
      001144 47                    4267 	ld	b, a
      001145 CB 28                 4268 	sra	b
      001147 CB 19                 4269 	rr	c
      001149 CB 28                 4270 	sra	b
      00114B CB 19                 4271 	rr	c
      00114D CB 28                 4272 	sra	b
      00114F CB 19                 4273 	rr	c
      001151 58                    4274 	ld	e, b
      001152 AF                    4275 	xor	a, a
      001153 57                    4276 	ld	d, a
      001154 B9                    4277 	cp	a, c
      001155 98                    4278 	sbc	a, b
      001156 CB 7B                 4279 	bit	7, e
      001158 28 07                 4280 	jr	Z, 00430$
      00115A CB 7A                 4281 	bit	7, d
      00115C 20 08                 4282 	jr	NZ, 00431$
      00115E BF                    4283 	cp	a, a
      00115F 18 05                 4284 	jr	00431$
      001161                       4285 00430$:
      001161 CB 7A                 4286 	bit	7, d
      001163 28 01                 4287 	jr	Z, 00431$
      001165 37                    4288 	scf
      001166                       4289 00431$:
      001166 30 39                 4290 	jr	NC, 00127$
                                   4291 ;src/main.c:441: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      001168 AF                    4292 	xor	a, a
      001169 91                    4293 	sub	a, c
      00116A 4F                    4294 	ld	c, a
      00116B F8 0C                 4295 	ldhl	sp,	#12
      00116D 71                    4296 	ld	(hl), c
                                   4297 ;src/main.c:442: enemies[i].x += xMovement;
      00116E F8 02                 4298 	ldhl	sp,#2
      001170 2A                    4299 	ld	a, (hl+)
      001171 5F                    4300 	ld	e, a
      001172 56                    4301 	ld	d, (hl)
      001173 1A                    4302 	ld	a, (de)
      001174 4F                    4303 	ld	c, a
      001175 13                    4304 	inc	de
      001176 1A                    4305 	ld	a, (de)
      001177 47                    4306 	ld	b, a
      001178 F8 0C                 4307 	ldhl	sp,	#12
      00117A 7E                    4308 	ld	a, (hl)
      00117B 5F                    4309 	ld	e, a
      00117C 07                    4310 	rlca
      00117D 9F                    4311 	sbc	a, a
      00117E 57                    4312 	ld	d, a
      00117F 69                    4313 	ld	l, c
                                   4314 ;	spillPairReg hl
                                   4315 ;	spillPairReg hl
      001180 60                    4316 	ld	h, b
                                   4317 ;	spillPairReg hl
                                   4318 ;	spillPairReg hl
      001181 19                    4319 	add	hl, de
      001182 4D                    4320 	ld	c, l
      001183 44                    4321 	ld	b, h
      001184 F8 02                 4322 	ldhl	sp,	#2
      001186 2A                    4323 	ld	a,	(hl+)
      001187 66                    4324 	ld	h, (hl)
      001188 6F                    4325 	ld	l, a
      001189 79                    4326 	ld	a, c
      00118A 22                    4327 	ld	(hl+), a
      00118B 70                    4328 	ld	(hl), b
                                   4329 ;src/main.c:443: enemies[i].xReserve +=  (-xMovement) << 3;
      00118C F8 0D                 4330 	ldhl	sp,#13
      00118E 2A                    4331 	ld	a, (hl+)
      00118F 5F                    4332 	ld	e, a
      001190 3A                    4333 	ld	a, (hl-)
      001191 2B                    4334 	dec	hl
      001192 57                    4335 	ld	d, a
      001193 1A                    4336 	ld	a, (de)
      001194 4F                    4337 	ld	c, a
      001195 AF                    4338 	xor	a, a
      001196 96                    4339 	sub	a, (hl)
      001197 23                    4340 	inc	hl
      001198 87                    4341 	add	a, a
      001199 87                    4342 	add	a, a
      00119A 87                    4343 	add	a, a
      00119B 81                    4344 	add	a, c
      00119C 4F                    4345 	ld	c, a
      00119D 2A                    4346 	ld	a,	(hl+)
      00119E 66                    4347 	ld	h, (hl)
      00119F 6F                    4348 	ld	l, a
      0011A0 71                    4349 	ld	(hl), c
      0011A1                       4350 00127$:
                                   4351 ;src/main.c:430: enemies[i].yReserve += enemies[i].ySpeed;
      0011A1 F8 0A                 4352 	ldhl	sp,#10
      0011A3 2A                    4353 	ld	a, (hl+)
      0011A4 5F                    4354 	ld	e, a
      0011A5 56                    4355 	ld	d, (hl)
      0011A6 1A                    4356 	ld	a, (de)
      0011A7 4F                    4357 	ld	c, a
                                   4358 ;src/main.c:446: if (enemies[i].yReserve >> 3 > 0) {
      0011A8 41                    4359 	ld	b, c
      0011A9 CB 28                 4360 	sra	b
      0011AB CB 28                 4361 	sra	b
      0011AD CB 28                 4362 	sra	b
      0011AF 58                    4363 	ld	e, b
      0011B0 AF                    4364 	xor	a, a
      0011B1 57                    4365 	ld	d, a
      0011B2 90                    4366 	sub	a, b
      0011B3 CB 7B                 4367 	bit	7, e
      0011B5 28 07                 4368 	jr	Z, 00432$
      0011B7 CB 7A                 4369 	bit	7, d
      0011B9 20 08                 4370 	jr	NZ, 00433$
      0011BB BF                    4371 	cp	a, a
      0011BC 18 05                 4372 	jr	00433$
      0011BE                       4373 00432$:
      0011BE CB 7A                 4374 	bit	7, d
      0011C0 28 01                 4375 	jr	Z, 00433$
      0011C2 37                    4376 	scf
      0011C3                       4377 00433$:
      0011C3 30 3A                 4378 	jr	NC, 00131$
                                   4379 ;src/main.c:447: int8_t yMovement = enemies[i].yReserve >> 3;
      0011C5 F8 0E                 4380 	ldhl	sp,	#14
      0011C7 70                    4381 	ld	(hl), b
                                   4382 ;src/main.c:448: enemies[i].y += yMovement;
      0011C8 F8 04                 4383 	ldhl	sp,#4
      0011CA 2A                    4384 	ld	a, (hl+)
      0011CB 5F                    4385 	ld	e, a
      0011CC 56                    4386 	ld	d, (hl)
      0011CD 1A                    4387 	ld	a, (de)
      0011CE 4F                    4388 	ld	c, a
      0011CF 13                    4389 	inc	de
      0011D0 1A                    4390 	ld	a, (de)
      0011D1 47                    4391 	ld	b, a
      0011D2 F8 0E                 4392 	ldhl	sp,	#14
      0011D4 7E                    4393 	ld	a, (hl)
      0011D5 5F                    4394 	ld	e, a
      0011D6 07                    4395 	rlca
      0011D7 9F                    4396 	sbc	a, a
      0011D8 57                    4397 	ld	d, a
      0011D9 69                    4398 	ld	l, c
                                   4399 ;	spillPairReg hl
                                   4400 ;	spillPairReg hl
      0011DA 60                    4401 	ld	h, b
                                   4402 ;	spillPairReg hl
                                   4403 ;	spillPairReg hl
      0011DB 19                    4404 	add	hl, de
      0011DC 4D                    4405 	ld	c, l
      0011DD 44                    4406 	ld	b, h
      0011DE F8 04                 4407 	ldhl	sp,	#4
      0011E0 2A                    4408 	ld	a,	(hl+)
      0011E1 66                    4409 	ld	h, (hl)
      0011E2 6F                    4410 	ld	l, a
      0011E3 79                    4411 	ld	a, c
      0011E4 22                    4412 	ld	(hl+), a
      0011E5 70                    4413 	ld	(hl), b
                                   4414 ;src/main.c:449: enemies[i].yReserve -=  yMovement << 3;
      0011E6 F8 0A                 4415 	ldhl	sp,#10
      0011E8 2A                    4416 	ld	a, (hl+)
      0011E9 5F                    4417 	ld	e, a
      0011EA 56                    4418 	ld	d, (hl)
      0011EB 1A                    4419 	ld	a, (de)
      0011EC F5                    4420 	push	af
      0011ED F8 10                 4421 	ldhl	sp,	#16
      0011EF 7E                    4422 	ld	a, (hl)
      0011F0 87                    4423 	add	a, a
      0011F1 87                    4424 	add	a, a
      0011F2 87                    4425 	add	a, a
      0011F3 4F                    4426 	ld	c, a
      0011F4 F1                    4427 	pop	af
      0011F5 91                    4428 	sub	a, c
      0011F6 4F                    4429 	ld	c, a
      0011F7 F8 0A                 4430 	ldhl	sp,	#10
      0011F9 2A                    4431 	ld	a,	(hl+)
      0011FA 66                    4432 	ld	h, (hl)
      0011FB 6F                    4433 	ld	l, a
      0011FC 71                    4434 	ld	(hl), c
      0011FD 18 67                 4435 	jr	00133$
      0011FF                       4436 00131$:
                                   4437 ;src/main.c:451: else if ((-enemies[i].yReserve) >> 3 > 0){
      0011FF 79                    4438 	ld	a, c
      001200 07                    4439 	rlca
      001201 9F                    4440 	sbc	a, a
      001202 47                    4441 	ld	b, a
      001203 AF                    4442 	xor	a, a
      001204 91                    4443 	sub	a, c
      001205 4F                    4444 	ld	c, a
      001206 9F                    4445 	sbc	a, a
      001207 90                    4446 	sub	a, b
      001208 47                    4447 	ld	b, a
      001209 CB 28                 4448 	sra	b
      00120B CB 19                 4449 	rr	c
      00120D CB 28                 4450 	sra	b
      00120F CB 19                 4451 	rr	c
      001211 CB 28                 4452 	sra	b
      001213 CB 19                 4453 	rr	c
      001215 58                    4454 	ld	e, b
      001216 AF                    4455 	xor	a, a
      001217 57                    4456 	ld	d, a
      001218 B9                    4457 	cp	a, c
      001219 98                    4458 	sbc	a, b
      00121A CB 7B                 4459 	bit	7, e
      00121C 28 07                 4460 	jr	Z, 00434$
      00121E CB 7A                 4461 	bit	7, d
      001220 20 08                 4462 	jr	NZ, 00435$
      001222 BF                    4463 	cp	a, a
      001223 18 05                 4464 	jr	00435$
      001225                       4465 00434$:
      001225 CB 7A                 4466 	bit	7, d
      001227 28 01                 4467 	jr	Z, 00435$
      001229 37                    4468 	scf
      00122A                       4469 00435$:
      00122A 30 3A                 4470 	jr	NC, 00133$
                                   4471 ;src/main.c:452: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      00122C AF                    4472 	xor	a, a
      00122D 91                    4473 	sub	a, c
      00122E 4F                    4474 	ld	c, a
      00122F F8 0E                 4475 	ldhl	sp,	#14
      001231 71                    4476 	ld	(hl), c
                                   4477 ;src/main.c:453: enemies[i].y += yMovement;
      001232 F8 04                 4478 	ldhl	sp,#4
      001234 2A                    4479 	ld	a, (hl+)
      001235 5F                    4480 	ld	e, a
      001236 56                    4481 	ld	d, (hl)
      001237 1A                    4482 	ld	a, (de)
      001238 4F                    4483 	ld	c, a
      001239 13                    4484 	inc	de
      00123A 1A                    4485 	ld	a, (de)
      00123B 47                    4486 	ld	b, a
      00123C F8 0E                 4487 	ldhl	sp,	#14
      00123E 7E                    4488 	ld	a, (hl)
      00123F 5F                    4489 	ld	e, a
      001240 07                    4490 	rlca
      001241 9F                    4491 	sbc	a, a
      001242 57                    4492 	ld	d, a
      001243 69                    4493 	ld	l, c
      001244 60                    4494 	ld	h, b
      001245 19                    4495 	add	hl, de
      001246 4D                    4496 	ld	c, l
      001247 44                    4497 	ld	b, h
      001248 F8 04                 4498 	ldhl	sp,	#4
      00124A 2A                    4499 	ld	a,	(hl+)
      00124B 66                    4500 	ld	h, (hl)
      00124C 6F                    4501 	ld	l, a
      00124D 79                    4502 	ld	a, c
      00124E 22                    4503 	ld	(hl+), a
      00124F 70                    4504 	ld	(hl), b
                                   4505 ;src/main.c:454: enemies[i].yReserve +=  (-yMovement) << 3;
      001250 F8 0A                 4506 	ldhl	sp,#10
      001252 2A                    4507 	ld	a, (hl+)
      001253 5F                    4508 	ld	e, a
      001254 56                    4509 	ld	d, (hl)
      001255 1A                    4510 	ld	a, (de)
      001256 4F                    4511 	ld	c, a
      001257 AF                    4512 	xor	a, a
      001258 F8 0E                 4513 	ldhl	sp,	#14
      00125A 96                    4514 	sub	a, (hl)
      00125B 87                    4515 	add	a, a
      00125C 87                    4516 	add	a, a
      00125D 87                    4517 	add	a, a
      00125E 81                    4518 	add	a, c
      00125F 4F                    4519 	ld	c, a
      001260 F8 0A                 4520 	ldhl	sp,	#10
      001262 2A                    4521 	ld	a,	(hl+)
      001263 66                    4522 	ld	h, (hl)
      001264 6F                    4523 	ld	l, a
      001265 71                    4524 	ld	(hl), c
      001266                       4525 00133$:
                                   4526 ;src/main.c:390: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001266 F8 0F                 4527 	ldhl	sp,	#15
      001268 34                    4528 	inc	(hl)
      001269 C3rB5r0D              4529 	jp	00196$
      00126C                       4530 00134$:
                                   4531 ;src/main.c:461: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00126C F8 0F                 4532 	ldhl	sp,	#15
      00126E 36 00                 4533 	ld	(hl), #0x00
      001270                       4534 00198$:
      001270 21r0Dr08              4535 	ld	hl, #_ENEMYCOUNT
      001273 4E                    4536 	ld	c, (hl)
      001274 F8 0F                 4537 	ldhl	sp,	#15
      001276 7E                    4538 	ld	a, (hl)
      001277 91                    4539 	sub	a, c
      001278 D2r1Br16              4540 	jp	NC, 00200$
                                   4541 ;src/main.c:463: if (enemies[i].alive) {
      00127B 7E                    4542 	ld	a, (hl)
      00127C 16 00                 4543 	ld	d, #0x00
      00127E 87                    4544 	add	a, a
      00127F CB 12                 4545 	rl	d
      001281 87                    4546 	add	a, a
      001282 CB 12                 4547 	rl	d
      001284 87                    4548 	add	a, a
      001285 CB 12                 4549 	rl	d
      001287 87                    4550 	add	a, a
      001288 CB 12                 4551 	rl	d
      00128A 5F                    4552 	ld	e, a
      00128B 21r50r00              4553 	ld	hl, #_enemies
      00128E 19                    4554 	add	hl, de
      00128F E5                    4555 	push	hl
      001290 7D                    4556 	ld	a, l
      001291 F8 03                 4557 	ldhl	sp,	#3
      001293 77                    4558 	ld	(hl), a
      001294 E1                    4559 	pop	hl
      001295 7C                    4560 	ld	a, h
      001296 F8 02                 4561 	ldhl	sp,	#2
      001298 32                    4562 	ld	(hl-), a
      001299 2A                    4563 	ld	a, (hl+)
      00129A 5F                    4564 	ld	e, a
      00129B 56                    4565 	ld	d, (hl)
      00129C 21 09 00              4566 	ld	hl, #0x0009
      00129F 19                    4567 	add	hl, de
      0012A0 E5                    4568 	push	hl
      0012A1 7D                    4569 	ld	a, l
      0012A2 F8 05                 4570 	ldhl	sp,	#5
      0012A4 77                    4571 	ld	(hl), a
      0012A5 E1                    4572 	pop	hl
      0012A6 7C                    4573 	ld	a, h
      0012A7 F8 04                 4574 	ldhl	sp,	#4
      0012A9 32                    4575 	ld	(hl-), a
      0012AA 2A                    4576 	ld	a, (hl+)
      0012AB 5F                    4577 	ld	e, a
      0012AC 56                    4578 	ld	d, (hl)
      0012AD 1A                    4579 	ld	a, (de)
      0012AE F8 0E                 4580 	ldhl	sp,	#14
      0012B0 77                    4581 	ld	(hl), a
      0012B1 7E                    4582 	ld	a, (hl)
      0012B2 B7                    4583 	or	a, a
      0012B3 CArA9r14              4584 	jp	Z, 00157$
                                   4585 ;src/main.c:464: if (enemies[i].visible == 1) {
      0012B6 F8 01                 4586 	ldhl	sp,#1
      0012B8 2A                    4587 	ld	a, (hl+)
      0012B9 5F                    4588 	ld	e, a
      0012BA 56                    4589 	ld	d, (hl)
      0012BB 21 0A 00              4590 	ld	hl, #0x000a
      0012BE 19                    4591 	add	hl, de
      0012BF E5                    4592 	push	hl
      0012C0 7D                    4593 	ld	a, l
      0012C1 F8 07                 4594 	ldhl	sp,	#7
      0012C3 77                    4595 	ld	(hl), a
      0012C4 E1                    4596 	pop	hl
      0012C5 7C                    4597 	ld	a, h
      0012C6 F8 06                 4598 	ldhl	sp,	#6
      0012C8 32                    4599 	ld	(hl-), a
      0012C9 2A                    4600 	ld	a, (hl+)
      0012CA 5F                    4601 	ld	e, a
      0012CB 2A                    4602 	ld	a, (hl+)
      0012CC 57                    4603 	ld	d, a
      0012CD 1A                    4604 	ld	a, (de)
      0012CE 77                    4605 	ld	(hl), a
                                   4606 ;src/main.c:465: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0012CF F8 01                 4607 	ldhl	sp,#1
      0012D1 2A                    4608 	ld	a, (hl+)
      0012D2 5F                    4609 	ld	e, a
      0012D3 56                    4610 	ld	d, (hl)
      0012D4 1A                    4611 	ld	a, (de)
      0012D5 F8 08                 4612 	ldhl	sp,	#8
      0012D7 22                    4613 	ld	(hl+), a
      0012D8 13                    4614 	inc	de
      0012D9 1A                    4615 	ld	a, (de)
      0012DA 77                    4616 	ld	(hl), a
      0012DB F8 01                 4617 	ldhl	sp,	#1
      0012DD 2A                    4618 	ld	a, (hl+)
      0012DE 4F                    4619 	ld	c, a
      0012DF 46                    4620 	ld	b, (hl)
      0012E0 03                    4621 	inc	bc
      0012E1 03                    4622 	inc	bc
                                   4623 ;src/main.c:467: set_sprite_tile(10+(i<<1), 0x7f);
      0012E2 F8 0F                 4624 	ldhl	sp,	#15
      0012E4 5E                    4625 	ld	e, (hl)
                                   4626 ;src/main.c:465: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0012E5 F8 08                 4627 	ldhl	sp,	#8
      0012E7 2A                    4628 	ld	a, (hl+)
      0012E8 23                    4629 	inc	hl
      0012E9 32                    4630 	ld	(hl-), a
      0012EA 2A                    4631 	ld	a, (hl+)
      0012EB 23                    4632 	inc	hl
                                   4633 ;src/main.c:467: set_sprite_tile(10+(i<<1), 0x7f);
      0012EC 22                    4634 	ld	(hl+), a
      0012ED 7B                    4635 	ld	a, e
      0012EE 87                    4636 	add	a, a
                                   4637 ;src/main.c:465: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0012EF 32                    4638 	ld	(hl-), a
      0012F0 2A                    4639 	ld	a, (hl+)
      0012F1 23                    4640 	inc	hl
      0012F2 07                    4641 	rlca
      0012F3 E6 01                 4642 	and	a,#0x01
                                   4643 ;src/main.c:467: set_sprite_tile(10+(i<<1), 0x7f);
      0012F5 32                    4644 	ld	(hl-), a
      0012F6 2A                    4645 	ld	a, (hl+)
      0012F7 23                    4646 	inc	hl
      0012F8 C6 0A                 4647 	add	a, #0x0a
      0012FA 77                    4648 	ld	(hl), a
                                   4649 ;src/main.c:464: if (enemies[i].visible == 1) {
      0012FB F8 07                 4650 	ldhl	sp,	#7
      0012FD 7E                    4651 	ld	a, (hl)
      0012FE 3D                    4652 	dec	a
      0012FF 20 74                 4653 	jr	NZ, 00154$
                                   4654 ;src/main.c:465: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001301 F8 0D                 4655 	ldhl	sp,	#13
      001303 7E                    4656 	ld	a, (hl)
      001304 B7                    4657 	or	a, a
      001305 20 43                 4658 	jr	NZ, 00135$
      001307 F8 0A                 4659 	ldhl	sp,	#10
      001309 3E AC                 4660 	ld	a, #0xac
      00130B 96                    4661 	sub	a, (hl)
      00130C 23                    4662 	inc	hl
      00130D 3E 00                 4663 	ld	a, #0x00
      00130F 9E                    4664 	sbc	a, (hl)
      001310 3E 00                 4665 	ld	a, #0x00
      001312 57                    4666 	ld	d, a
      001313 CB 7E                 4667 	bit	7, (hl)
      001315 28 07                 4668 	jr	Z, 00439$
      001317 CB 7A                 4669 	bit	7, d
      001319 20 08                 4670 	jr	NZ, 00440$
      00131B BF                    4671 	cp	a, a
      00131C 18 05                 4672 	jr	00440$
      00131E                       4673 00439$:
      00131E CB 7A                 4674 	bit	7, d
      001320 28 01                 4675 	jr	Z, 00440$
      001322 37                    4676 	scf
      001323                       4677 00440$:
      001323 38 25                 4678 	jr	C, 00135$
      001325 69                    4679 	ld	l, c
      001326 60                    4680 	ld	h, b
      001327 2A                    4681 	ld	a, (hl+)
      001328 4F                    4682 	ld	c, a
      001329 46                    4683 	ld	b, (hl)
      00132A CB 78                 4684 	bit	7, b
      00132C 20 1C                 4685 	jr	NZ, 00135$
      00132E 58                    4686 	ld	e, b
      00132F 16 00                 4687 	ld	d, #0x00
      001331 3E 98                 4688 	ld	a, #0x98
      001333 B9                    4689 	cp	a, c
      001334 3E 00                 4690 	ld	a, #0x00
      001336 98                    4691 	sbc	a, b
      001337 CB 7B                 4692 	bit	7, e
      001339 28 07                 4693 	jr	Z, 00441$
      00133B CB 7A                 4694 	bit	7, d
      00133D 20 08                 4695 	jr	NZ, 00442$
      00133F BF                    4696 	cp	a, a
      001340 18 05                 4697 	jr	00442$
      001342                       4698 00441$:
      001342 CB 7A                 4699 	bit	7, d
      001344 28 01                 4700 	jr	Z, 00442$
      001346 37                    4701 	scf
      001347                       4702 00442$:
      001347 D2rA9r14              4703 	jp	NC, 00157$
      00134A                       4704 00135$:
                                   4705 ;src/main.c:466: enemies[i].visible = 0;
      00134A F8 05                 4706 	ldhl	sp,	#5
      00134C 2A                    4707 	ld	a,	(hl+)
      00134D 66                    4708 	ld	h, (hl)
      00134E 6F                    4709 	ld	l, a
      00134F 36 00                 4710 	ld	(hl), #0x00
                                   4711 ;src/main.c:467: set_sprite_tile(10+(i<<1), 0x7f);
      001351 F8 0E                 4712 	ldhl	sp,	#14
                                   4713 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001353 6E                    4714 	ld	l, (hl)
      001354 01r00r00              4715 	ld	bc, #_shadow_OAM+0
                                   4716 ;	spillPairReg hl
                                   4717 ;	spillPairReg hl
      001357 26 00                 4718 	ld	h, #0x00
                                   4719 ;	spillPairReg hl
                                   4720 ;	spillPairReg hl
      001359 29                    4721 	add	hl, hl
      00135A 29                    4722 	add	hl, hl
      00135B 09                    4723 	add	hl, bc
      00135C 23                    4724 	inc	hl
      00135D 23                    4725 	inc	hl
      00135E 36 7F                 4726 	ld	(hl), #0x7f
                                   4727 ;src/main.c:468: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001360 F8 0C                 4728 	ldhl	sp,	#12
      001362 7E                    4729 	ld	a, (hl)
      001363 C6 0B                 4730 	add	a, #0x0b
                                   4731 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001365 6F                    4732 	ld	l, a
      001366 01r00r00              4733 	ld	bc, #_shadow_OAM+0
                                   4734 ;	spillPairReg hl
                                   4735 ;	spillPairReg hl
      001369 26 00                 4736 	ld	h, #0x00
                                   4737 ;	spillPairReg hl
                                   4738 ;	spillPairReg hl
      00136B 29                    4739 	add	hl, hl
      00136C 29                    4740 	add	hl, hl
      00136D 09                    4741 	add	hl, bc
      00136E 23                    4742 	inc	hl
      00136F 23                    4743 	inc	hl
      001370 36 7F                 4744 	ld	(hl), #0x7f
                                   4745 ;src/main.c:468: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001372 C3rA9r14              4746 	jp	00157$
      001375                       4747 00154$:
                                   4748 ;src/main.c:472: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001375 F8 0D                 4749 	ldhl	sp,	#13
      001377 CB 46                 4750 	bit	0, (hl)
      001379 C2r14r14              4751 	jp	NZ, 00148$
      00137C F8 0A                 4752 	ldhl	sp,	#10
      00137E 2A                    4753 	ld	a, (hl+)
      00137F D6 AC                 4754 	sub	a, #0xac
      001381 7E                    4755 	ld	a, (hl)
      001382 DE 00                 4756 	sbc	a, #0x00
      001384 56                    4757 	ld	d, (hl)
      001385 3E 00                 4758 	ld	a, #0x00
      001387 CB 7F                 4759 	bit	7,a
      001389 28 07                 4760 	jr	Z, 00443$
      00138B CB 7A                 4761 	bit	7, d
      00138D 20 08                 4762 	jr	NZ, 00444$
      00138F BF                    4763 	cp	a, a
      001390 18 05                 4764 	jr	00444$
      001392                       4765 00443$:
      001392 CB 7A                 4766 	bit	7, d
      001394 28 01                 4767 	jr	Z, 00444$
      001396 37                    4768 	scf
      001397                       4769 00444$:
      001397 30 7B                 4770 	jr	NC, 00148$
      001399 69                    4771 	ld	l, c
      00139A 60                    4772 	ld	h, b
      00139B 2A                    4773 	ld	a,	(hl+)
      00139C 66                    4774 	ld	h, (hl)
                                   4775 ;	spillPairReg hl
      00139D 6F                    4776 	ld	l, a
                                   4777 ;	spillPairReg hl
                                   4778 ;	spillPairReg hl
      00139E 5C                    4779 	ld	e, h
      00139F AF                    4780 	xor	a, a
      0013A0 57                    4781 	ld	d, a
      0013A1 BD                    4782 	cp	a, l
      0013A2 9C                    4783 	sbc	a, h
      0013A3 CB 7B                 4784 	bit	7, e
      0013A5 28 07                 4785 	jr	Z, 00445$
      0013A7 CB 7A                 4786 	bit	7, d
      0013A9 20 08                 4787 	jr	NZ, 00446$
      0013AB BF                    4788 	cp	a, a
      0013AC 18 05                 4789 	jr	00446$
      0013AE                       4790 00445$:
      0013AE CB 7A                 4791 	bit	7, d
      0013B0 28 01                 4792 	jr	Z, 00446$
      0013B2 37                    4793 	scf
      0013B3                       4794 00446$:
      0013B3 30 5F                 4795 	jr	NC, 00148$
      0013B5 7D                    4796 	ld	a, l
      0013B6 D6 98                 4797 	sub	a, #0x98
      0013B8 7C                    4798 	ld	a, h
      0013B9 17                    4799 	rla
      0013BA 3F                    4800 	ccf
      0013BB 1F                    4801 	rra
      0013BC DE 80                 4802 	sbc	a, #0x80
      0013BE 30 54                 4803 	jr	NC, 00148$
                                   4804 ;src/main.c:473: enemies[i].visible = 1;
      0013C0 F8 05                 4805 	ldhl	sp,	#5
      0013C2 2A                    4806 	ld	a,	(hl+)
      0013C3 66                    4807 	ld	h, (hl)
      0013C4 6F                    4808 	ld	l, a
      0013C5 36 01                 4809 	ld	(hl), #0x01
                                   4810 ;src/main.c:474: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      0013C7 F8 01                 4811 	ldhl	sp,#1
      0013C9 2A                    4812 	ld	a, (hl+)
      0013CA 5F                    4813 	ld	e, a
      0013CB 56                    4814 	ld	d, (hl)
      0013CC 21 06 00              4815 	ld	hl, #0x0006
      0013CF 19                    4816 	add	hl, de
      0013D0 4D                    4817 	ld	c, l
      0013D1 44                    4818 	ld	b, h
      0013D2 0A                    4819 	ld	a, (bc)
      0013D3 4F                    4820 	ld	c, a
      0013D4 F8 0E                 4821 	ldhl	sp,	#14
                                   4822 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013D6 6E                    4823 	ld	l, (hl)
                                   4824 ;	spillPairReg hl
                                   4825 ;	spillPairReg hl
      0013D7 26 00                 4826 	ld	h, #0x00
                                   4827 ;	spillPairReg hl
                                   4828 ;	spillPairReg hl
      0013D9 29                    4829 	add	hl, hl
      0013DA 29                    4830 	add	hl, hl
      0013DB 11r00r00              4831 	ld	de, #_shadow_OAM
      0013DE 19                    4832 	add	hl, de
      0013DF 23                    4833 	inc	hl
      0013E0 23                    4834 	inc	hl
      0013E1 71                    4835 	ld	(hl), c
                                   4836 ;src/main.c:475: if (enemies[i].spriteCount == 2) {
      0013E2 F8 01                 4837 	ldhl	sp,#1
      0013E4 2A                    4838 	ld	a, (hl+)
      0013E5 5F                    4839 	ld	e, a
      0013E6 56                    4840 	ld	d, (hl)
      0013E7 21 08 00              4841 	ld	hl, #0x0008
      0013EA 19                    4842 	add	hl, de
      0013EB 4D                    4843 	ld	c, l
      0013EC 44                    4844 	ld	b, h
      0013ED 0A                    4845 	ld	a, (bc)
      0013EE D6 02                 4846 	sub	a, #0x02
      0013F0 C2rA9r14              4847 	jp	NZ,00157$
                                   4848 ;src/main.c:476: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0013F3 F8 01                 4849 	ldhl	sp,#1
      0013F5 2A                    4850 	ld	a, (hl+)
      0013F6 5F                    4851 	ld	e, a
      0013F7 56                    4852 	ld	d, (hl)
      0013F8 21 07 00              4853 	ld	hl, #0x0007
      0013FB 19                    4854 	add	hl, de
      0013FC 4D                    4855 	ld	c, l
      0013FD 44                    4856 	ld	b, h
      0013FE 0A                    4857 	ld	a, (bc)
      0013FF 4F                    4858 	ld	c, a
      001400 F8 0C                 4859 	ldhl	sp,	#12
      001402 7E                    4860 	ld	a, (hl)
      001403 C6 0B                 4861 	add	a, #0x0b
                                   4862 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001405 6F                    4863 	ld	l, a
                                   4864 ;	spillPairReg hl
                                   4865 ;	spillPairReg hl
      001406 26 00                 4866 	ld	h, #0x00
                                   4867 ;	spillPairReg hl
                                   4868 ;	spillPairReg hl
      001408 29                    4869 	add	hl, hl
      001409 29                    4870 	add	hl, hl
      00140A 11r00r00              4871 	ld	de, #_shadow_OAM
      00140D 19                    4872 	add	hl, de
      00140E 23                    4873 	inc	hl
      00140F 23                    4874 	inc	hl
      001410 71                    4875 	ld	(hl), c
                                   4876 ;src/main.c:476: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001411 C3rA9r14              4877 	jp	00157$
      001414                       4878 00148$:
                                   4879 ;src/main.c:479: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001414 F8 08                 4880 	ldhl	sp,	#8
      001416 2A                    4881 	ld	a, (hl+)
      001417 D6 9C                 4882 	sub	a, #0x9c
      001419 7E                    4883 	ld	a, (hl)
      00141A DE FF                 4884 	sbc	a, #0xff
      00141C 56                    4885 	ld	d, (hl)
      00141D 3E FF                 4886 	ld	a, #0xff
      00141F CB 7F                 4887 	bit	7,a
      001421 28 07                 4888 	jr	Z, 00449$
      001423 CB 7A                 4889 	bit	7, d
      001425 20 08                 4890 	jr	NZ, 00450$
      001427 BF                    4891 	cp	a, a
      001428 18 05                 4892 	jr	00450$
      00142A                       4893 00449$:
      00142A CB 7A                 4894 	bit	7, d
      00142C 28 01                 4895 	jr	Z, 00450$
      00142E 37                    4896 	scf
      00142F                       4897 00450$:
      00142F 38 49                 4898 	jr	C, 00142$
      001431 F8 0A                 4899 	ldhl	sp,	#10
      001433 3E 10                 4900 	ld	a, #0x10
      001435 96                    4901 	sub	a, (hl)
      001436 23                    4902 	inc	hl
      001437 3E 01                 4903 	ld	a, #0x01
      001439 9E                    4904 	sbc	a, (hl)
      00143A 3E 01                 4905 	ld	a, #0x01
      00143C 57                    4906 	ld	d, a
      00143D CB 7E                 4907 	bit	7, (hl)
      00143F 28 07                 4908 	jr	Z, 00451$
      001441 CB 7A                 4909 	bit	7, d
      001443 20 08                 4910 	jr	NZ, 00452$
      001445 BF                    4911 	cp	a, a
      001446 18 05                 4912 	jr	00452$
      001448                       4913 00451$:
      001448 CB 7A                 4914 	bit	7, d
      00144A 28 01                 4915 	jr	Z, 00452$
      00144C 37                    4916 	scf
      00144D                       4917 00452$:
      00144D 38 2B                 4918 	jr	C, 00142$
      00144F 69                    4919 	ld	l, c
      001450 60                    4920 	ld	h, b
      001451 2A                    4921 	ld	a, (hl+)
      001452 4F                    4922 	ld	c, a
      001453 46                    4923 	ld	b, (hl)
      001454 79                    4924 	ld	a, c
      001455 D6 9C                 4925 	sub	a, #0x9c
      001457 78                    4926 	ld	a, b
      001458 17                    4927 	rla
      001459 3F                    4928 	ccf
      00145A 1F                    4929 	rra
      00145B DE 7F                 4930 	sbc	a, #0x7f
      00145D 38 1B                 4931 	jr	C, 00142$
      00145F 58                    4932 	ld	e, b
      001460 16 00                 4933 	ld	d, #0x00
      001462 3E FC                 4934 	ld	a, #0xfc
      001464 B9                    4935 	cp	a, c
      001465 3E 00                 4936 	ld	a, #0x00
      001467 98                    4937 	sbc	a, b
      001468 CB 7B                 4938 	bit	7, e
      00146A 28 07                 4939 	jr	Z, 00453$
      00146C CB 7A                 4940 	bit	7, d
      00146E 20 08                 4941 	jr	NZ, 00454$
      001470 BF                    4942 	cp	a, a
      001471 18 05                 4943 	jr	00454$
      001473                       4944 00453$:
      001473 CB 7A                 4945 	bit	7, d
      001475 28 01                 4946 	jr	Z, 00454$
      001477 37                    4947 	scf
      001478                       4948 00454$:
      001478 30 2F                 4949 	jr	NC, 00157$
      00147A                       4950 00142$:
                                   4951 ;src/main.c:480: enemies[i].alive = 0;
      00147A F8 03                 4952 	ldhl	sp,	#3
      00147C 2A                    4953 	ld	a,	(hl+)
      00147D 66                    4954 	ld	h, (hl)
      00147E 6F                    4955 	ld	l, a
      00147F 36 00                 4956 	ld	(hl), #0x00
                                   4957 ;src/main.c:481: set_sprite_tile(10+(i<<1), 0x7f);
      001481 F8 0E                 4958 	ldhl	sp,	#14
                                   4959 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001483 6E                    4960 	ld	l, (hl)
      001484 01r00r00              4961 	ld	bc, #_shadow_OAM+0
                                   4962 ;	spillPairReg hl
                                   4963 ;	spillPairReg hl
      001487 26 00                 4964 	ld	h, #0x00
                                   4965 ;	spillPairReg hl
                                   4966 ;	spillPairReg hl
      001489 29                    4967 	add	hl, hl
      00148A 29                    4968 	add	hl, hl
      00148B 09                    4969 	add	hl, bc
      00148C 23                    4970 	inc	hl
      00148D 23                    4971 	inc	hl
      00148E 36 7F                 4972 	ld	(hl), #0x7f
                                   4973 ;src/main.c:482: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001490 F8 0C                 4974 	ldhl	sp,	#12
      001492 7E                    4975 	ld	a, (hl)
      001493 C6 0B                 4976 	add	a, #0x0b
                                   4977 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001495 6F                    4978 	ld	l, a
      001496 01r00r00              4979 	ld	bc, #_shadow_OAM+0
                                   4980 ;	spillPairReg hl
                                   4981 ;	spillPairReg hl
      001499 26 00                 4982 	ld	h, #0x00
                                   4983 ;	spillPairReg hl
                                   4984 ;	spillPairReg hl
      00149B 29                    4985 	add	hl, hl
      00149C 29                    4986 	add	hl, hl
      00149D 09                    4987 	add	hl, bc
      00149E 23                    4988 	inc	hl
      00149F 23                    4989 	inc	hl
      0014A0 36 7F                 4990 	ld	(hl), #0x7f
                                   4991 ;src/main.c:483: initEnemies(0);
      0014A2 AF                    4992 	xor	a, a
      0014A3 F5                    4993 	push	af
      0014A4 33                    4994 	inc	sp
      0014A5 CDr04r0C              4995 	call	_initEnemies
      0014A8 33                    4996 	inc	sp
      0014A9                       4997 00157$:
                                   4998 ;src/main.c:487: if (enemies[i].spriteCount == 1) {
      0014A9 F8 0F                 4999 	ldhl	sp,	#15
      0014AB 6E                    5000 	ld	l, (hl)
      0014AC 26 00                 5001 	ld	h, #0x00
      0014AE 29                    5002 	add	hl, hl
      0014AF 29                    5003 	add	hl, hl
      0014B0 29                    5004 	add	hl, hl
      0014B1 29                    5005 	add	hl, hl
      0014B2 7D                    5006 	ld	a, l
      0014B3 C6r50                 5007 	add	a, #<(_enemies)
      0014B5 4F                    5008 	ld	c, a
      0014B6 7C                    5009 	ld	a, h
      0014B7 CEs00                 5010 	adc	a, #>(_enemies)
      0014B9 47                    5011 	ld	b, a
      0014BA 21 08 00              5012 	ld	hl, #0x0008
      0014BD 09                    5013 	add	hl, bc
      0014BE 5E                    5014 	ld	e, (hl)
                                   5015 ;src/main.c:467: set_sprite_tile(10+(i<<1), 0x7f);
      0014BF F8 0F                 5016 	ldhl	sp,	#15
      0014C1 3A                    5017 	ld	a, (hl-)
      0014C2 87                    5018 	add	a, a
      0014C3 77                    5019 	ld	(hl), a
      0014C4 7E                    5020 	ld	a, (hl)
      0014C5 C6 0A                 5021 	add	a, #0x0a
      0014C7 F8 0A                 5022 	ldhl	sp,	#10
      0014C9 77                    5023 	ld	(hl), a
                                   5024 ;src/main.c:487: if (enemies[i].spriteCount == 1) {
      0014CA 1D                    5025 	dec	e
      0014CB 20 52                 5026 	jr	NZ, 00165$
                                   5027 ;src/main.c:488: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      0014CD 59                    5028 	ld	e, c
      0014CE 50                    5029 	ld	d, b
      0014CF 13                    5030 	inc	de
      0014D0 13                    5031 	inc	de
      0014D1 1A                    5032 	ld	a, (de)
      0014D2 C6 0C                 5033 	add	a, #0x0c
      0014D4 5F                    5034 	ld	e, a
      0014D5 0A                    5035 	ld	a, (bc)
      0014D6 C6 04                 5036 	add	a, #0x04
      0014D8 F8 0E                 5037 	ldhl	sp,	#14
      0014DA 77                    5038 	ld	(hl), a
      0014DB F8 0A                 5039 	ldhl	sp,	#10
      0014DD 56                    5040 	ld	d, (hl)
                                   5041 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0014DE 6A                    5042 	ld	l, d
                                   5043 ;	spillPairReg hl
                                   5044 ;	spillPairReg hl
      0014DF 26 00                 5045 	ld	h, #0x00
                                   5046 ;	spillPairReg hl
                                   5047 ;	spillPairReg hl
      0014E1 29                    5048 	add	hl, hl
      0014E2 29                    5049 	add	hl, hl
      0014E3 D5                    5050 	push	de
      0014E4 11r00r00              5051 	ld	de, #_shadow_OAM
      0014E7 19                    5052 	add	hl, de
      0014E8 D1                    5053 	pop	de
                                   5054 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0014E9 7B                    5055 	ld	a, e
      0014EA 22                    5056 	ld	(hl+), a
      0014EB 5D                    5057 	ld	e, l
      0014EC 54                    5058 	ld	d, h
      0014ED F8 0E                 5059 	ldhl	sp,	#14
      0014EF 7E                    5060 	ld	a, (hl)
      0014F0 12                    5061 	ld	(de), a
                                   5062 ;src/main.c:489: if (enemies[i].xSpeed >= 0) {
      0014F1 21 0E 00              5063 	ld	hl, #0x000e
      0014F4 09                    5064 	add	hl, bc
      0014F5 CB 7E                 5065 	bit	7, (hl)
      0014F7 20 13                 5066 	jr	NZ, 00159$
                                   5067 ;src/main.c:490: set_sprite_prop(10+(i<<1), 0);
      0014F9 F8 0A                 5068 	ldhl	sp,	#10
                                   5069 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0014FB 6E                    5070 	ld	l, (hl)
      0014FC 01r00r00              5071 	ld	bc, #_shadow_OAM+0
                                   5072 ;	spillPairReg hl
                                   5073 ;	spillPairReg hl
      0014FF 26 00                 5074 	ld	h, #0x00
                                   5075 ;	spillPairReg hl
                                   5076 ;	spillPairReg hl
      001501 29                    5077 	add	hl, hl
      001502 29                    5078 	add	hl, hl
      001503 09                    5079 	add	hl, bc
      001504 23                    5080 	inc	hl
      001505 23                    5081 	inc	hl
      001506 23                    5082 	inc	hl
      001507 36 00                 5083 	ld	(hl), #0x00
                                   5084 ;src/main.c:490: set_sprite_prop(10+(i<<1), 0);
      001509 C3r15r16              5085 	jp	00199$
      00150C                       5086 00159$:
                                   5087 ;src/main.c:493: set_sprite_prop(10+(i<<1), S_FLIPX);
      00150C F8 0A                 5088 	ldhl	sp,	#10
                                   5089 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00150E 6E                    5090 	ld	l, (hl)
      00150F 01r00r00              5091 	ld	bc, #_shadow_OAM+0
                                   5092 ;	spillPairReg hl
                                   5093 ;	spillPairReg hl
      001512 26 00                 5094 	ld	h, #0x00
                                   5095 ;	spillPairReg hl
                                   5096 ;	spillPairReg hl
      001514 29                    5097 	add	hl, hl
      001515 29                    5098 	add	hl, hl
      001516 09                    5099 	add	hl, bc
      001517 23                    5100 	inc	hl
      001518 23                    5101 	inc	hl
      001519 23                    5102 	inc	hl
      00151A 36 20                 5103 	ld	(hl), #0x20
                                   5104 ;src/main.c:493: set_sprite_prop(10+(i<<1), S_FLIPX);
      00151C C3r15r16              5105 	jp	00199$
      00151F                       5106 00165$:
                                   5107 ;src/main.c:498: if (enemies[i].xSpeed >= 0) {
      00151F 21 0E 00              5108 	ld	hl, #0x000e
      001522 09                    5109 	add	hl, bc
      001523 E5                    5110 	push	hl
      001524 7D                    5111 	ld	a, l
      001525 F8 0E                 5112 	ldhl	sp,	#14
      001527 77                    5113 	ld	(hl), a
      001528 E1                    5114 	pop	hl
      001529 7C                    5115 	ld	a, h
      00152A F8 0D                 5116 	ldhl	sp,	#13
      00152C 32                    5117 	ld	(hl-), a
      00152D 2A                    5118 	ld	a, (hl+)
      00152E 5F                    5119 	ld	e, a
      00152F 56                    5120 	ld	d, (hl)
      001530 1A                    5121 	ld	a, (de)
                                   5122 ;	spillPairReg hl
                                   5123 ;	spillPairReg hl
      001531 CB 7F                 5124 	bit	7,a
      001533 20 70                 5125 	jr	NZ, 00162$
                                   5126 ;src/main.c:499: set_sprite_prop(10+(i<<1), 0);
      001535 F8 0A                 5127 	ldhl	sp,	#10
                                   5128 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001537 6E                    5129 	ld	l, (hl)
                                   5130 ;	spillPairReg hl
                                   5131 ;	spillPairReg hl
      001538 26 00                 5132 	ld	h, #0x00
                                   5133 ;	spillPairReg hl
                                   5134 ;	spillPairReg hl
      00153A 29                    5135 	add	hl, hl
      00153B 29                    5136 	add	hl, hl
      00153C 11r00r00              5137 	ld	de, #_shadow_OAM
      00153F 19                    5138 	add	hl, de
      001540 23                    5139 	inc	hl
      001541 23                    5140 	inc	hl
      001542 23                    5141 	inc	hl
      001543 36 00                 5142 	ld	(hl), #0x00
                                   5143 ;src/main.c:500: set_sprite_prop(10+(i<<1)+1, 0);
      001545 F8 0E                 5144 	ldhl	sp,	#14
      001547 7E                    5145 	ld	a, (hl)
      001548 C6 0B                 5146 	add	a, #0x0b
      00154A F8 0B                 5147 	ldhl	sp,	#11
      00154C 77                    5148 	ld	(hl), a
                                   5149 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00154D 6E                    5150 	ld	l, (hl)
                                   5151 ;	spillPairReg hl
                                   5152 ;	spillPairReg hl
      00154E 26 00                 5153 	ld	h, #0x00
                                   5154 ;	spillPairReg hl
                                   5155 ;	spillPairReg hl
      001550 29                    5156 	add	hl, hl
      001551 29                    5157 	add	hl, hl
      001552 11r00r00              5158 	ld	de, #_shadow_OAM
      001555 19                    5159 	add	hl, de
      001556 23                    5160 	inc	hl
      001557 23                    5161 	inc	hl
      001558 23                    5162 	inc	hl
      001559 36 00                 5163 	ld	(hl), #0x00
                                   5164 ;src/main.c:501: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      00155B 21 02 00              5165 	ld	hl, #0x0002
      00155E 09                    5166 	add	hl, bc
      00155F E5                    5167 	push	hl
      001560 7D                    5168 	ld	a, l
      001561 F8 0E                 5169 	ldhl	sp,	#14
      001563 77                    5170 	ld	(hl), a
      001564 E1                    5171 	pop	hl
      001565 7C                    5172 	ld	a, h
      001566 F8 0D                 5173 	ldhl	sp,	#13
      001568 32                    5174 	ld	(hl-), a
      001569 2A                    5175 	ld	a, (hl+)
      00156A 5F                    5176 	ld	e, a
      00156B 2A                    5177 	ld	a, (hl+)
      00156C 57                    5178 	ld	d, a
      00156D 1A                    5179 	ld	a, (de)
      00156E C6 08                 5180 	add	a, #0x08
      001570 5F                    5181 	ld	e, a
      001571 0A                    5182 	ld	a, (bc)
      001572 77                    5183 	ld	(hl), a
      001573 F8 0A                 5184 	ldhl	sp,	#10
      001575 56                    5185 	ld	d, (hl)
                                   5186 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001576 6A                    5187 	ld	l, d
                                   5188 ;	spillPairReg hl
                                   5189 ;	spillPairReg hl
      001577 26 00                 5190 	ld	h, #0x00
                                   5191 ;	spillPairReg hl
                                   5192 ;	spillPairReg hl
      001579 29                    5193 	add	hl, hl
      00157A 29                    5194 	add	hl, hl
      00157B D5                    5195 	push	de
      00157C 11r00r00              5196 	ld	de, #_shadow_OAM
      00157F 19                    5197 	add	hl, de
      001580 D1                    5198 	pop	de
                                   5199 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001581 7B                    5200 	ld	a, e
      001582 22                    5201 	ld	(hl+), a
      001583 5D                    5202 	ld	e, l
      001584 54                    5203 	ld	d, h
      001585 F8 0E                 5204 	ldhl	sp,	#14
                                   5205 ;src/main.c:502: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001587 3A                    5206 	ld	a, (hl-)
      001588 2B                    5207 	dec	hl
      001589 12                    5208 	ld	(de), a
      00158A 2A                    5209 	ld	a, (hl+)
      00158B 5F                    5210 	ld	e, a
      00158C 3A                    5211 	ld	a, (hl-)
      00158D 2B                    5212 	dec	hl
      00158E 57                    5213 	ld	d, a
      00158F 1A                    5214 	ld	a, (de)
      001590 C6 08                 5215 	add	a, #0x08
      001592 57                    5216 	ld	d, a
      001593 0A                    5217 	ld	a, (bc)
      001594 C6 08                 5218 	add	a, #0x08
      001596 5F                    5219 	ld	e, a
                                   5220 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001597 6E                    5221 	ld	l, (hl)
                                   5222 ;	spillPairReg hl
                                   5223 ;	spillPairReg hl
      001598 26 00                 5224 	ld	h, #0x00
                                   5225 ;	spillPairReg hl
                                   5226 ;	spillPairReg hl
      00159A 29                    5227 	add	hl, hl
      00159B 29                    5228 	add	hl, hl
      00159C 01r00r00              5229 	ld	bc, #_shadow_OAM
      00159F 09                    5230 	add	hl, bc
                                   5231 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0015A0 7A                    5232 	ld	a, d
      0015A1 22                    5233 	ld	(hl+), a
      0015A2 73                    5234 	ld	(hl), e
                                   5235 ;src/main.c:502: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      0015A3 18 70                 5236 	jr	00199$
      0015A5                       5237 00162$:
                                   5238 ;src/main.c:505: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015A5 F8 0A                 5239 	ldhl	sp,	#10
      0015A7 5E                    5240 	ld	e, (hl)
                                   5241 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015A8 26 00                 5242 	ld	h, #0x00
                                   5243 ;	spillPairReg hl
                                   5244 ;	spillPairReg hl
      0015AA 6B                    5245 	ld	l, e
      0015AB 29                    5246 	add	hl, hl
      0015AC 29                    5247 	add	hl, hl
      0015AD 11r00r00              5248 	ld	de, #_shadow_OAM
      0015B0 19                    5249 	add	hl, de
      0015B1 23                    5250 	inc	hl
      0015B2 23                    5251 	inc	hl
      0015B3 23                    5252 	inc	hl
      0015B4 36 20                 5253 	ld	(hl), #0x20
                                   5254 ;src/main.c:506: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      0015B6 F8 0E                 5255 	ldhl	sp,	#14
      0015B8 7E                    5256 	ld	a, (hl)
      0015B9 C6 0B                 5257 	add	a, #0x0b
      0015BB F8 0B                 5258 	ldhl	sp,	#11
      0015BD 77                    5259 	ld	(hl), a
      0015BE 5E                    5260 	ld	e, (hl)
                                   5261 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015BF 26 00                 5262 	ld	h, #0x00
                                   5263 ;	spillPairReg hl
                                   5264 ;	spillPairReg hl
      0015C1 6B                    5265 	ld	l, e
      0015C2 29                    5266 	add	hl, hl
      0015C3 29                    5267 	add	hl, hl
      0015C4 11r00r00              5268 	ld	de, #_shadow_OAM
      0015C7 19                    5269 	add	hl, de
      0015C8 23                    5270 	inc	hl
      0015C9 23                    5271 	inc	hl
      0015CA 23                    5272 	inc	hl
      0015CB 36 20                 5273 	ld	(hl), #0x20
                                   5274 ;src/main.c:507: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      0015CD 21 02 00              5275 	ld	hl, #0x0002
      0015D0 09                    5276 	add	hl, bc
      0015D1 E5                    5277 	push	hl
      0015D2 7D                    5278 	ld	a, l
      0015D3 F8 0E                 5279 	ldhl	sp,	#14
      0015D5 77                    5280 	ld	(hl), a
      0015D6 E1                    5281 	pop	hl
      0015D7 7C                    5282 	ld	a, h
      0015D8 F8 0D                 5283 	ldhl	sp,	#13
      0015DA 32                    5284 	ld	(hl-), a
      0015DB 2A                    5285 	ld	a, (hl+)
      0015DC 5F                    5286 	ld	e, a
      0015DD 2A                    5287 	ld	a, (hl+)
      0015DE 57                    5288 	ld	d, a
      0015DF 1A                    5289 	ld	a, (de)
      0015E0 C6 08                 5290 	add	a, #0x08
      0015E2 5F                    5291 	ld	e, a
      0015E3 0A                    5292 	ld	a, (bc)
      0015E4 C6 08                 5293 	add	a, #0x08
      0015E6 77                    5294 	ld	(hl), a
      0015E7 F8 0A                 5295 	ldhl	sp,	#10
      0015E9 56                    5296 	ld	d, (hl)
                                   5297 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0015EA 6A                    5298 	ld	l, d
                                   5299 ;	spillPairReg hl
                                   5300 ;	spillPairReg hl
      0015EB 26 00                 5301 	ld	h, #0x00
                                   5302 ;	spillPairReg hl
                                   5303 ;	spillPairReg hl
      0015ED 29                    5304 	add	hl, hl
      0015EE 29                    5305 	add	hl, hl
      0015EF D5                    5306 	push	de
      0015F0 11r00r00              5307 	ld	de, #_shadow_OAM
      0015F3 19                    5308 	add	hl, de
      0015F4 D1                    5309 	pop	de
                                   5310 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0015F5 7B                    5311 	ld	a, e
      0015F6 22                    5312 	ld	(hl+), a
      0015F7 5D                    5313 	ld	e, l
      0015F8 54                    5314 	ld	d, h
      0015F9 F8 0E                 5315 	ldhl	sp,	#14
                                   5316 ;src/main.c:508: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0015FB 3A                    5317 	ld	a, (hl-)
      0015FC 2B                    5318 	dec	hl
      0015FD 12                    5319 	ld	(de), a
      0015FE 2A                    5320 	ld	a, (hl+)
      0015FF 5F                    5321 	ld	e, a
      001600 3A                    5322 	ld	a, (hl-)
      001601 2B                    5323 	dec	hl
      001602 57                    5324 	ld	d, a
      001603 1A                    5325 	ld	a, (de)
      001604 C6 08                 5326 	add	a, #0x08
      001606 57                    5327 	ld	d, a
      001607 0A                    5328 	ld	a, (bc)
      001608 5F                    5329 	ld	e, a
                                   5330 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001609 6E                    5331 	ld	l, (hl)
                                   5332 ;	spillPairReg hl
                                   5333 ;	spillPairReg hl
      00160A 26 00                 5334 	ld	h, #0x00
                                   5335 ;	spillPairReg hl
                                   5336 ;	spillPairReg hl
      00160C 29                    5337 	add	hl, hl
      00160D 29                    5338 	add	hl, hl
      00160E 01r00r00              5339 	ld	bc, #_shadow_OAM
      001611 09                    5340 	add	hl, bc
                                   5341 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001612 7A                    5342 	ld	a, d
      001613 22                    5343 	ld	(hl+), a
      001614 73                    5344 	ld	(hl), e
                                   5345 ;src/main.c:508: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      001615                       5346 00199$:
                                   5347 ;src/main.c:461: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001615 F8 0F                 5348 	ldhl	sp,	#15
      001617 34                    5349 	inc	(hl)
      001618 C3r70r12              5350 	jp	00198$
      00161B                       5351 00200$:
                                   5352 ;src/main.c:514: }
      00161B E8 10                 5353 	add	sp, #16
      00161D C9                    5354 	ret
                                   5355 ;src/main.c:519: void move() {
                                   5356 ;	---------------------------------
                                   5357 ; Function move
                                   5358 ; ---------------------------------
      00161E                       5359 _move::
      00161E E8 F8                 5360 	add	sp, #-8
                                   5361 ;src/main.c:523: if (joydata & J_A) {
      001620 FArDCr00              5362 	ld	a, (#_joydata)
      001623 CB 67                 5363 	bit	4, a
      001625 28 16                 5364 	jr	Z, 00102$
                                   5365 ;src/main.c:524: xSpeed += xDir + xDir + xDir;
      001627 21r86r00              5366 	ld	hl, #_xDir
      00162A 7E                    5367 	ld	a, (hl)
      00162B 87                    5368 	add	a, a
      00162C 86                    5369 	add	a, (hl)
      00162D 21r88r00              5370 	ld	hl, #_xSpeed
      001630 86                    5371 	add	a, (hl)
      001631 77                    5372 	ld	(hl), a
                                   5373 ;src/main.c:525: ySpeed += yDir + yDir + yDir;
      001632 21r87r00              5374 	ld	hl, #_yDir
      001635 7E                    5375 	ld	a, (hl)
      001636 87                    5376 	add	a, a
      001637 86                    5377 	add	a, (hl)
      001638 21r89r00              5378 	ld	hl, #_ySpeed
      00163B 86                    5379 	add	a, (hl)
      00163C 77                    5380 	ld	(hl), a
      00163D                       5381 00102$:
                                   5382 ;src/main.c:529: xSpeed = clamp(xSpeed, -100, 100);
      00163D 21r88r00              5383 	ld	hl, #_xSpeed
      001640 4E                    5384 	ld	c, (hl)
                                   5385 ;src/main.c:287: return (value < min) ? min : (value > max) ? max : value;
      001641 79                    5386 	ld	a, c
      001642 EE 80                 5387 	xor	a, #0x80
      001644 D6 1C                 5388 	sub	a, #0x1c
      001646 30 04                 5389 	jr	NC, 00165$
      001648 0E 9C                 5390 	ld	c, #0x9c
      00164A 18 19                 5391 	jr	00166$
      00164C                       5392 00165$:
      00164C 59                    5393 	ld	e, c
      00164D 3E 64                 5394 	ld	a,#0x64
      00164F 57                    5395 	ld	d,a
      001650 91                    5396 	sub	a, c
      001651 CB 7B                 5397 	bit	7, e
      001653 28 07                 5398 	jr	Z, 00342$
      001655 CB 7A                 5399 	bit	7, d
      001657 20 08                 5400 	jr	NZ, 00343$
      001659 BF                    5401 	cp	a, a
      00165A 18 05                 5402 	jr	00343$
      00165C                       5403 00342$:
      00165C CB 7A                 5404 	bit	7, d
      00165E 28 01                 5405 	jr	Z, 00343$
      001660 37                    5406 	scf
      001661                       5407 00343$:
      001661 30 02                 5408 	jr	NC, 00167$
      001663 0E 64                 5409 	ld	c, #0x64
      001665                       5410 00167$:
      001665                       5411 00166$:
      001665 21r88r00              5412 	ld	hl, #_xSpeed
      001668 71                    5413 	ld	(hl), c
                                   5414 ;src/main.c:530: ySpeed = clamp(ySpeed, -100, 100);
      001669 21r89r00              5415 	ld	hl, #_ySpeed
      00166C 4E                    5416 	ld	c, (hl)
                                   5417 ;src/main.c:287: return (value < min) ? min : (value > max) ? max : value;
      00166D 79                    5418 	ld	a, c
      00166E EE 80                 5419 	xor	a, #0x80
      001670 D6 1C                 5420 	sub	a, #0x1c
      001672 30 04                 5421 	jr	NC, 00169$
      001674 0E 9C                 5422 	ld	c, #0x9c
      001676 18 19                 5423 	jr	00170$
      001678                       5424 00169$:
      001678 59                    5425 	ld	e, c
      001679 3E 64                 5426 	ld	a,#0x64
      00167B 57                    5427 	ld	d,a
      00167C 91                    5428 	sub	a, c
      00167D CB 7B                 5429 	bit	7, e
      00167F 28 07                 5430 	jr	Z, 00344$
      001681 CB 7A                 5431 	bit	7, d
      001683 20 08                 5432 	jr	NZ, 00345$
      001685 BF                    5433 	cp	a, a
      001686 18 05                 5434 	jr	00345$
      001688                       5435 00344$:
      001688 CB 7A                 5436 	bit	7, d
      00168A 28 01                 5437 	jr	Z, 00345$
      00168C 37                    5438 	scf
      00168D                       5439 00345$:
      00168D 30 02                 5440 	jr	NC, 00171$
      00168F 0E 64                 5441 	ld	c, #0x64
      001691                       5442 00171$:
      001691                       5443 00170$:
      001691 21r89r00              5444 	ld	hl, #_ySpeed
      001694 71                    5445 	ld	(hl), c
                                   5446 ;src/main.c:532: xOverflow = 0;
      001695 AF                    5447 	xor	a, a
      001696 21r94r00              5448 	ld	hl, #_xOverflow
      001699 22                    5449 	ld	(hl+), a
      00169A 77                    5450 	ld	(hl), a
                                   5451 ;src/main.c:533: yOverflow = 0;
      00169B AF                    5452 	xor	a, a
      00169C 21r96r00              5453 	ld	hl, #_yOverflow
      00169F 22                    5454 	ld	(hl+), a
      0016A0 77                    5455 	ld	(hl), a
                                   5456 ;src/main.c:538: uint8_t xCollisionPoint = playerDrawX; 
      0016A1 21r8Er00              5457 	ld	hl, #_playerDrawX
      0016A4 4E                    5458 	ld	c, (hl)
                                   5459 ;src/main.c:541: xCollisionPoint = playerDrawX +8; //right edge
      0016A5 46                    5460 	ld	b, (hl)
                                   5461 ;src/main.c:540: if (xSpeed > 0) {
      0016A6 21r88r00              5462 	ld	hl, #_xSpeed
      0016A9 5E                    5463 	ld	e, (hl)
      0016AA AF                    5464 	xor	a, a
      0016AB 57                    5465 	ld	d, a
      0016AC 96                    5466 	sub	a, (hl)
      0016AD CB 7B                 5467 	bit	7, e
      0016AF 28 07                 5468 	jr	Z, 00346$
      0016B1 CB 7A                 5469 	bit	7, d
      0016B3 20 08                 5470 	jr	NZ, 00347$
      0016B5 BF                    5471 	cp	a, a
      0016B6 18 05                 5472 	jr	00347$
      0016B8                       5473 00346$:
      0016B8 CB 7A                 5474 	bit	7, d
      0016BA 28 01                 5475 	jr	Z, 00347$
      0016BC 37                    5476 	scf
      0016BD                       5477 00347$:
      0016BD 30 04                 5478 	jr	NC, 00104$
                                   5479 ;src/main.c:541: xCollisionPoint = playerDrawX +8; //right edge
      0016BF 78                    5480 	ld	a, b
      0016C0 C6 08                 5481 	add	a, #0x08
      0016C2 4F                    5482 	ld	c, a
      0016C3                       5483 00104$:
                                   5484 ;src/main.c:543: if (xSpeed < 0) {
      0016C3 FAr88r00              5485 	ld	a, (#_xSpeed)
      0016C6 CB 7F                 5486 	bit	7, a
      0016C8 28 04                 5487 	jr	Z, 00106$
                                   5488 ;src/main.c:544: xCollisionPoint = playerDrawX -8; //left edge
      0016CA 78                    5489 	ld	a, b
      0016CB C6 F8                 5490 	add	a, #0xf8
      0016CD 4F                    5491 	ld	c, a
      0016CE                       5492 00106$:
                                   5493 ;src/main.c:548: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      0016CE 06 00                 5494 	ld	b, #0x00
      0016D0 79                    5495 	ld	a, c
      0016D1 21r90r00              5496 	ld	hl, #_bgX
      0016D4 86                    5497 	add	a, (hl)
      0016D5 23                    5498 	inc	hl
      0016D6 4F                    5499 	ld	c, a
      0016D7 78                    5500 	ld	a, b
      0016D8 8E                    5501 	adc	a, (hl)
      0016D9 47                    5502 	ld	b, a
      0016DA CB 28                 5503 	sra	b
      0016DC CB 19                 5504 	rr	c
      0016DE CB 28                 5505 	sra	b
      0016E0 CB 19                 5506 	rr	c
      0016E2 CB 28                 5507 	sra	b
      0016E4 CB 19                 5508 	rr	c
      0016E6 11 20 00              5509 	ld	de, #0x0020
      0016E9 D5                    5510 	push	de
      0016EA C5                    5511 	push	bc
      0016EB CDr00r00              5512 	call	__modsint
      0016EE E8 04                 5513 	add	sp, #4
                                   5514 ;src/main.c:552: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      0016F0 21r8Fr00              5515 	ld	hl, #_playerDrawY
      0016F3 4E                    5516 	ld	c, (hl)
      0016F4 06 00                 5517 	ld	b, #0x00
      0016F6 79                    5518 	ld	a, c
      0016F7 21r92r00              5519 	ld	hl, #_bgY
      0016FA 86                    5520 	add	a, (hl)
      0016FB 23                    5521 	inc	hl
      0016FC 4F                    5522 	ld	c, a
      0016FD 78                    5523 	ld	a, b
      0016FE 8E                    5524 	adc	a, (hl)
      0016FF 47                    5525 	ld	b, a
      001700 CB 28                 5526 	sra	b
      001702 CB 19                 5527 	rr	c
      001704 CB 28                 5528 	sra	b
      001706 CB 19                 5529 	rr	c
      001708 CB 28                 5530 	sra	b
      00170A CB 19                 5531 	rr	c
      00170C D5                    5532 	push	de
      00170D 21 20 00              5533 	ld	hl, #0x0020
      001710 E5                    5534 	push	hl
      001711 C5                    5535 	push	bc
      001712 CDr00r00              5536 	call	__modsint
      001715 E8 04                 5537 	add	sp, #4
      001717 6B                    5538 	ld	l, e
                                   5539 ;	spillPairReg hl
                                   5540 ;	spillPairReg hl
                                   5541 ;	spillPairReg hl
                                   5542 ;	spillPairReg hl
      001718 D1                    5543 	pop	de
                                   5544 ;src/main.c:555: uint16_t ind = 32*bgindY + bgindX;
      001719 26 00                 5545 	ld	h, #0x00
                                   5546 ;	spillPairReg hl
                                   5547 ;	spillPairReg hl
      00171B 29                    5548 	add	hl, hl
      00171C 29                    5549 	add	hl, hl
      00171D 29                    5550 	add	hl, hl
      00171E 29                    5551 	add	hl, hl
      00171F 29                    5552 	add	hl, hl
      001720 19                    5553 	add	hl, de
      001721 5D                    5554 	ld	e, l
      001722 54                    5555 	ld	d, h
                                   5556 ;src/main.c:556: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001723 0E 01                 5557 	ld	c, #0x01
                                   5558 ;src/main.c:558: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001725 21r87r00              5559 	ld	hl, #_background1
      001728 19                    5560 	add	hl, de
      001729 46                    5561 	ld	b, (hl)
      00172A 1E 00                 5562 	ld	e, #0x00
      00172C                       5563 00158$:
      00172C FAr08r08              5564 	ld	a, (#_BLANKSIZE)
      00172F F8 02                 5565 	ldhl	sp,	#2
      001731 77                    5566 	ld	(hl), a
      001732 7B                    5567 	ld	a, e
      001733 96                    5568 	sub	a, (hl)
      001734 30 11                 5569 	jr	NC, 00109$
                                   5570 ;src/main.c:559: if (background1[ind] == BLANK[i] ) {
      001736 21r09r08              5571 	ld	hl, #_BLANK
      001739 16 00                 5572 	ld	d, #0x00
      00173B 19                    5573 	add	hl, de
      00173C 56                    5574 	ld	d, (hl)
      00173D 78                    5575 	ld	a, b
                                   5576 ;src/main.c:560: result = 0;
      00173E 92                    5577 	sub	a,d
      00173F 20 03                 5578 	jr	NZ, 00159$
      001741 4F                    5579 	ld	c,a
                                   5580 ;src/main.c:561: break;
      001742 18 03                 5581 	jr	00109$
      001744                       5582 00159$:
                                   5583 ;src/main.c:558: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001744 1C                    5584 	inc	e
      001745 18 E5                 5585 	jr	00158$
      001747                       5586 00109$:
                                   5587 ;src/main.c:566: if (result == 0) {
      001747 79                    5588 	ld	a, c
      001748 B7                    5589 	or	a, a
      001749 C2r17r18              5590 	jp	NZ, 00114$
                                   5591 ;src/main.c:567: playerX+=xSpeed;
      00174C FAr88r00              5592 	ld	a, (#_xSpeed)
      00174F 4F                    5593 	ld	c, a
      001750 07                    5594 	rlca
      001751 9F                    5595 	sbc	a, a
      001752 47                    5596 	ld	b, a
      001753 21r8Ar00              5597 	ld	hl, #_playerX
      001756 6E                    5598 	ld	l, (hl)
                                   5599 ;	spillPairReg hl
                                   5600 ;	spillPairReg hl
      001757 FAr8Br00              5601 	ld	a, (_playerX + 1)
      00175A 67                    5602 	ld	h, a
                                   5603 ;	spillPairReg hl
                                   5604 ;	spillPairReg hl
      00175B 09                    5605 	add	hl, bc
      00175C 4D                    5606 	ld	c, l
      00175D 44                    5607 	ld	b, h
      00175E 21r8Ar00              5608 	ld	hl, #_playerX
      001761 79                    5609 	ld	a, c
      001762 22                    5610 	ld	(hl+), a
                                   5611 ;src/main.c:569: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001763 78                    5612 	ld	a, b
      001764 32                    5613 	ld	(hl-), a
      001765 2A                    5614 	ld	a, (hl+)
      001766 4F                    5615 	ld	c, a
      001767 46                    5616 	ld	b, (hl)
      001768 79                    5617 	ld	a, c
      001769 D6 80                 5618 	sub	a, #0x80
      00176B 78                    5619 	ld	a, b
      00176C DE 08                 5620 	sbc	a, #0x08
      00176E 30 05                 5621 	jr	NC, 00173$
      001770 01 80 08              5622 	ld	bc, #0x0880
      001773 18 0B                 5623 	jr	00174$
      001775                       5624 00173$:
      001775 3E 80                 5625 	ld	a, #0x80
      001777 B9                    5626 	cp	a, c
      001778 3E 0B                 5627 	ld	a, #0x0b
      00177A 98                    5628 	sbc	a, b
      00177B 30 03                 5629 	jr	NC, 00175$
      00177D 01 80 0B              5630 	ld	bc, #0x0b80
      001780                       5631 00175$:
      001780                       5632 00174$:
      001780 59                    5633 	ld	e,c
      001781 50                    5634 	ld	d,b
                                   5635 ;src/main.c:571: xOverflow = (playerX - limitedPlayerX);
      001782 FAr8Ar00              5636 	ld	a, (#_playerX)
      001785 93                    5637 	sub	a, e
      001786 EAr94r00              5638 	ld	(#_xOverflow),a
      001789 FAr8Br00              5639 	ld	a, (#_playerX + 1)
      00178C 9A                    5640 	sbc	a, d
      00178D 21r95r00              5641 	ld	hl, #_xOverflow + 1
                                   5642 ;src/main.c:572: if (xOverflow >= 0) {
      001790 32                    5643 	ld	(hl-), a
      001791 6E                    5644 	ld	l, (hl)
                                   5645 ;	spillPairReg hl
                                   5646 ;	spillPairReg hl
      001792 FAr95r00              5647 	ld	a, (_xOverflow + 1)
                                   5648 ;	spillPairReg hl
                                   5649 ;	spillPairReg hl
      001795 CB 7F                 5650 	bit	7,a
      001797 20 22                 5651 	jr	NZ, 00111$
                                   5652 ;src/main.c:573: xOverflow = xOverflow >> 5;
      001799 21r95r00              5653 	ld	hl, #_xOverflow + 1
      00179C CB 2E                 5654 	sra	(hl)
      00179E 2B                    5655 	dec	hl
      00179F CB 1E                 5656 	rr	(hl)
      0017A1 23                    5657 	inc	hl
      0017A2 CB 2E                 5658 	sra	(hl)
      0017A4 2B                    5659 	dec	hl
      0017A5 CB 1E                 5660 	rr	(hl)
      0017A7 23                    5661 	inc	hl
      0017A8 CB 2E                 5662 	sra	(hl)
      0017AA 2B                    5663 	dec	hl
      0017AB CB 1E                 5664 	rr	(hl)
      0017AD 23                    5665 	inc	hl
      0017AE CB 2E                 5666 	sra	(hl)
      0017B0 2B                    5667 	dec	hl
      0017B1 CB 1E                 5668 	rr	(hl)
      0017B3 23                    5669 	inc	hl
      0017B4 CB 2E                 5670 	sra	(hl)
      0017B6 2B                    5671 	dec	hl
      0017B7 CB 1E                 5672 	rr	(hl)
      0017B9 18 25                 5673 	jr	00112$
      0017BB                       5674 00111$:
                                   5675 ;src/main.c:576: xOverflow = -((-xOverflow) >> 5);
      0017BB AF                    5676 	xor	a, a
      0017BC 21r94r00              5677 	ld	hl, #_xOverflow
      0017BF 96                    5678 	sub	a, (hl)
      0017C0 23                    5679 	inc	hl
      0017C1 5F                    5680 	ld	e, a
      0017C2 9F                    5681 	sbc	a, a
      0017C3 96                    5682 	sub	a, (hl)
      0017C4 2B                    5683 	dec	hl
      0017C5 57                    5684 	ld	d, a
      0017C6 CB 2A                 5685 	sra	d
      0017C8 CB 1B                 5686 	rr	e
      0017CA CB 2A                 5687 	sra	d
      0017CC CB 1B                 5688 	rr	e
      0017CE CB 2A                 5689 	sra	d
      0017D0 CB 1B                 5690 	rr	e
      0017D2 CB 2A                 5691 	sra	d
      0017D4 CB 1B                 5692 	rr	e
      0017D6 CB 2A                 5693 	sra	d
      0017D8 CB 1B                 5694 	rr	e
      0017DA AF                    5695 	xor	a, a
      0017DB 93                    5696 	sub	a, e
      0017DC 22                    5697 	ld	(hl+), a
      0017DD 9F                    5698 	sbc	a, a
      0017DE 92                    5699 	sub	a, d
      0017DF 77                    5700 	ld	(hl), a
      0017E0                       5701 00112$:
                                   5702 ;src/main.c:578: bgX += xOverflow;
      0017E0 FAr90r00              5703 	ld	a, (#_bgX)
      0017E3 21r94r00              5704 	ld	hl, #_xOverflow
      0017E6 86                    5705 	add	a, (hl)
      0017E7 21r90r00              5706 	ld	hl, #_bgX
      0017EA 22                    5707 	ld	(hl+), a
      0017EB 7E                    5708 	ld	a, (hl)
      0017EC 21r95r00              5709 	ld	hl, #_xOverflow + 1
      0017EF 8E                    5710 	adc	a, (hl)
      0017F0 EAr91r00              5711 	ld	(#_bgX + 1),a
                                   5712 ;src/main.c:579: playerX = limitedPlayerX;
      0017F3 21r8Ar00              5713 	ld	hl, #_playerX
      0017F6 79                    5714 	ld	a, c
      0017F7 22                    5715 	ld	(hl+), a
                                   5716 ;src/main.c:580: playerDrawX=playerX >> 5;
      0017F8 78                    5717 	ld	a, b
      0017F9 32                    5718 	ld	(hl-), a
      0017FA 2A                    5719 	ld	a, (hl+)
      0017FB 4F                    5720 	ld	c, a
      0017FC 46                    5721 	ld	b, (hl)
      0017FD CB 38                 5722 	srl	b
      0017FF CB 19                 5723 	rr	c
      001801 CB 38                 5724 	srl	b
      001803 CB 19                 5725 	rr	c
      001805 CB 38                 5726 	srl	b
      001807 CB 19                 5727 	rr	c
      001809 CB 38                 5728 	srl	b
      00180B CB 19                 5729 	rr	c
      00180D CB 38                 5730 	srl	b
      00180F CB 19                 5731 	rr	c
      001811 21r8Er00              5732 	ld	hl, #_playerDrawX
      001814 71                    5733 	ld	(hl), c
      001815 18 05                 5734 	jr	00115$
      001817                       5735 00114$:
                                   5736 ;src/main.c:588: xSpeed = 0;
      001817 21r88r00              5737 	ld	hl, #_xSpeed
      00181A 36 00                 5738 	ld	(hl), #0x00
      00181C                       5739 00115$:
                                   5740 ;src/main.c:596: uint8_t yCollisionPoint = playerDrawY; 
      00181C FAr8Fr00              5741 	ld	a, (#_playerDrawY)
      00181F F8 07                 5742 	ldhl	sp,	#7
      001821 77                    5743 	ld	(hl), a
                                   5744 ;src/main.c:599: yCollisionPoint = playerDrawY +8; //bottom edge
      001822 21r8Fr00              5745 	ld	hl, #_playerDrawY
      001825 4E                    5746 	ld	c, (hl)
                                   5747 ;src/main.c:598: if (ySpeed > 0) {
      001826 21r89r00              5748 	ld	hl, #_ySpeed
      001829 5E                    5749 	ld	e, (hl)
      00182A AF                    5750 	xor	a, a
      00182B 57                    5751 	ld	d, a
      00182C 96                    5752 	sub	a, (hl)
      00182D CB 7B                 5753 	bit	7, e
      00182F 28 07                 5754 	jr	Z, 00350$
      001831 CB 7A                 5755 	bit	7, d
      001833 20 08                 5756 	jr	NZ, 00351$
      001835 BF                    5757 	cp	a, a
      001836 18 05                 5758 	jr	00351$
      001838                       5759 00350$:
      001838 CB 7A                 5760 	bit	7, d
      00183A 28 01                 5761 	jr	Z, 00351$
      00183C 37                    5762 	scf
      00183D                       5763 00351$:
      00183D 30 06                 5764 	jr	NC, 00117$
                                   5765 ;src/main.c:599: yCollisionPoint = playerDrawY +8; //bottom edge
      00183F 79                    5766 	ld	a, c
      001840 C6 08                 5767 	add	a, #0x08
      001842 F8 07                 5768 	ldhl	sp,	#7
      001844 77                    5769 	ld	(hl), a
      001845                       5770 00117$:
                                   5771 ;src/main.c:601: if (ySpeed < 0) {
      001845 FAr89r00              5772 	ld	a, (#_ySpeed)
      001848 CB 7F                 5773 	bit	7, a
      00184A 28 06                 5774 	jr	Z, 00119$
                                   5775 ;src/main.c:602: yCollisionPoint = playerDrawY -8; //top edge, 
      00184C 79                    5776 	ld	a, c
      00184D C6 F8                 5777 	add	a, #0xf8
      00184F F8 07                 5778 	ldhl	sp,	#7
      001851 77                    5779 	ld	(hl), a
      001852                       5780 00119$:
                                   5781 ;src/main.c:606: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001852 FAr8Er00              5782 	ld	a, (#_playerDrawX)
      001855 0E 00                 5783 	ld	c, #0x00
      001857 F8 03                 5784 	ldhl	sp,	#3
      001859 22                    5785 	ld	(hl+), a
      00185A 79                    5786 	ld	a, c
      00185B 32                    5787 	ld	(hl-), a
      00185C 2A                    5788 	ld	a, (hl+)
      00185D 5F                    5789 	ld	e, a
      00185E 56                    5790 	ld	d, (hl)
      00185F 21r90r00              5791 	ld	hl, #_bgX
      001862 2A                    5792 	ld	a,	(hl+)
      001863 66                    5793 	ld	h, (hl)
      001864 6F                    5794 	ld	l, a
      001865 19                    5795 	add	hl, de
      001866 E5                    5796 	push	hl
      001867 7D                    5797 	ld	a, l
      001868 F8 07                 5798 	ldhl	sp,	#7
      00186A 77                    5799 	ld	(hl), a
      00186B E1                    5800 	pop	hl
      00186C 7C                    5801 	ld	a, h
      00186D F8 06                 5802 	ldhl	sp,	#6
      00186F 77                    5803 	ld	(hl), a
      001870 CB 2E                 5804 	sra	(hl)
      001872 2B                    5805 	dec	hl
      001873 CB 1E                 5806 	rr	(hl)
      001875 23                    5807 	inc	hl
      001876 CB 2E                 5808 	sra	(hl)
      001878 2B                    5809 	dec	hl
      001879 CB 1E                 5810 	rr	(hl)
      00187B 23                    5811 	inc	hl
      00187C CB 2E                 5812 	sra	(hl)
      00187E 2B                    5813 	dec	hl
      00187F CB 1E                 5814 	rr	(hl)
      001881 11 20 00              5815 	ld	de, #0x0020
      001884 D5                    5816 	push	de
      001885 2A                    5817 	ld	a, (hl+)
      001886 5F                    5818 	ld	e, a
      001887 56                    5819 	ld	d, (hl)
      001888 D5                    5820 	push	de
      001889 CDr00r00              5821 	call	__modsint
      00188C E8 04                 5822 	add	sp, #4
      00188E F8 05                 5823 	ldhl	sp,	#5
      001890 7B                    5824 	ld	a, e
      001891 22                    5825 	ld	(hl+), a
      001892 72                    5826 	ld	(hl), d
      001893 F8 05                 5827 	ldhl	sp,	#5
      001895 7E                    5828 	ld	a, (hl)
      001896 F8 00                 5829 	ldhl	sp,	#0
      001898 77                    5830 	ld	(hl), a
      001899 F8 06                 5831 	ldhl	sp,	#6
      00189B 7E                    5832 	ld	a, (hl)
      00189C F8 01                 5833 	ldhl	sp,	#1
      00189E 77                    5834 	ld	(hl), a
                                   5835 ;src/main.c:609: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      00189F F8 07                 5836 	ldhl	sp,	#7
      0018A1 3A                    5837 	ld	a, (hl-)
      0018A2 22                    5838 	ld	(hl+), a
      0018A3 AF                    5839 	xor	a, a
      0018A4 32                    5840 	ld	(hl-), a
      0018A5 3A                    5841 	ld	a, (hl-)
      0018A6 2B                    5842 	dec	hl
      0018A7 77                    5843 	ld	(hl), a
      0018A8 F8 07                 5844 	ldhl	sp,	#7
      0018AA 3A                    5845 	ld	a, (hl-)
      0018AB 2B                    5846 	dec	hl
      0018AC 32                    5847 	ld	(hl-), a
      0018AD 2A                    5848 	ld	a, (hl+)
      0018AE 5F                    5849 	ld	e, a
      0018AF 56                    5850 	ld	d, (hl)
      0018B0 21r92r00              5851 	ld	hl, #_bgY
      0018B3 2A                    5852 	ld	a,	(hl+)
      0018B4 66                    5853 	ld	h, (hl)
      0018B5 6F                    5854 	ld	l, a
      0018B6 19                    5855 	add	hl, de
      0018B7 E5                    5856 	push	hl
      0018B8 7D                    5857 	ld	a, l
      0018B9 F8 08                 5858 	ldhl	sp,	#8
      0018BB 77                    5859 	ld	(hl), a
      0018BC E1                    5860 	pop	hl
      0018BD 7C                    5861 	ld	a, h
      0018BE F8 07                 5862 	ldhl	sp,	#7
      0018C0 77                    5863 	ld	(hl), a
      0018C1 CB 2E                 5864 	sra	(hl)
      0018C3 2B                    5865 	dec	hl
      0018C4 CB 1E                 5866 	rr	(hl)
      0018C6 23                    5867 	inc	hl
      0018C7 CB 2E                 5868 	sra	(hl)
      0018C9 2B                    5869 	dec	hl
      0018CA CB 1E                 5870 	rr	(hl)
      0018CC 23                    5871 	inc	hl
      0018CD CB 2E                 5872 	sra	(hl)
      0018CF 2B                    5873 	dec	hl
      0018D0 CB 1E                 5874 	rr	(hl)
      0018D2 11 20 00              5875 	ld	de, #0x0020
      0018D5 D5                    5876 	push	de
      0018D6 2A                    5877 	ld	a, (hl+)
      0018D7 5F                    5878 	ld	e, a
      0018D8 56                    5879 	ld	d, (hl)
      0018D9 D5                    5880 	push	de
      0018DA CDr00r00              5881 	call	__modsint
      0018DD E8 04                 5882 	add	sp, #4
      0018DF F8 06                 5883 	ldhl	sp,	#6
      0018E1 7B                    5884 	ld	a, e
      0018E2 22                    5885 	ld	(hl+), a
      0018E3 72                    5886 	ld	(hl), d
      0018E4 F8 06                 5887 	ldhl	sp,	#6
      0018E6 2A                    5888 	ld	a, (hl+)
      0018E7 77                    5889 	ld	(hl), a
                                   5890 ;src/main.c:612: ind = 32*bgindY + bgindX;
      0018E8 3A                    5891 	ld	a, (hl-)
      0018E9 22                    5892 	ld	(hl+), a
      0018EA 36 00                 5893 	ld	(hl), #0x00
      0018EC 3E 05                 5894 	ld	a, #0x05
      0018EE                       5895 00352$:
      0018EE F8 06                 5896 	ldhl	sp,	#6
      0018F0 CB 26                 5897 	sla	(hl)
      0018F2 23                    5898 	inc	hl
      0018F3 CB 16                 5899 	rl	(hl)
      0018F5 3D                    5900 	dec	a
      0018F6 20 F6                 5901 	jr	NZ, 00352$
      0018F8 2B                    5902 	dec	hl
      0018F9 3A                    5903 	ld	a, (hl-)
      0018FA 2B                    5904 	dec	hl
      0018FB 77                    5905 	ld	(hl), a
      0018FC F8 07                 5906 	ldhl	sp,	#7
      0018FE 3A                    5907 	ld	a, (hl-)
      0018FF 2B                    5908 	dec	hl
      001900 77                    5909 	ld	(hl), a
      001901 D1                    5910 	pop	de
      001902 D5                    5911 	push	de
      001903 3A                    5912 	ld	a, (hl-)
      001904 6E                    5913 	ld	l, (hl)
      001905 67                    5914 	ld	h, a
      001906 19                    5915 	add	hl, de
      001907 E5                    5916 	push	hl
      001908 7D                    5917 	ld	a, l
      001909 F8 08                 5918 	ldhl	sp,	#8
      00190B 77                    5919 	ld	(hl), a
      00190C E1                    5920 	pop	hl
      00190D 7C                    5921 	ld	a, h
      00190E F8 07                 5922 	ldhl	sp,	#7
      001910 77                    5923 	ld	(hl), a
                                   5924 ;src/main.c:613: result = 1;
      001911 F8 03                 5925 	ldhl	sp,	#3
      001913 36 01                 5926 	ld	(hl), #0x01
                                   5927 ;src/main.c:615: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001915 F8 06                 5928 	ldhl	sp,#6
      001917 2A                    5929 	ld	a, (hl+)
      001918 5F                    5930 	ld	e, a
      001919 56                    5931 	ld	d, (hl)
      00191A 21r87r00              5932 	ld	hl, #_background1
      00191D 19                    5933 	add	hl, de
      00191E 4D                    5934 	ld	c, l
      00191F 44                    5935 	ld	b, h
      001920 0A                    5936 	ld	a, (bc)
      001921 F8 04                 5937 	ldhl	sp,	#4
      001923 77                    5938 	ld	(hl), a
      001924 F8 07                 5939 	ldhl	sp,	#7
      001926 36 00                 5940 	ld	(hl), #0x00
      001928                       5941 00161$:
      001928 F8 07                 5942 	ldhl	sp,	#7
      00192A 7E                    5943 	ld	a, (hl)
      00192B F8 02                 5944 	ldhl	sp,	#2
      00192D 96                    5945 	sub	a, (hl)
      00192E 30 29                 5946 	jr	NC, 00122$
                                   5947 ;src/main.c:616: if (background1[ind] == BLANK[j] ) {
      001930 11r09r08              5948 	ld	de, #_BLANK
      001933 F8 07                 5949 	ldhl	sp,	#7
      001935 6E                    5950 	ld	l, (hl)
      001936 26 00                 5951 	ld	h, #0x00
      001938 19                    5952 	add	hl, de
      001939 E5                    5953 	push	hl
      00193A 7D                    5954 	ld	a, l
      00193B F8 07                 5955 	ldhl	sp,	#7
      00193D 77                    5956 	ld	(hl), a
      00193E E1                    5957 	pop	hl
      00193F 7C                    5958 	ld	a, h
      001940 F8 06                 5959 	ldhl	sp,	#6
      001942 32                    5960 	ld	(hl-), a
      001943 2A                    5961 	ld	a, (hl+)
      001944 5F                    5962 	ld	e, a
      001945 3A                    5963 	ld	a, (hl-)
      001946 2B                    5964 	dec	hl
      001947 57                    5965 	ld	d, a
      001948 1A                    5966 	ld	a, (de)
      001949 4F                    5967 	ld	c, a
      00194A 7E                    5968 	ld	a, (hl)
      00194B 91                    5969 	sub	a, c
      00194C 20 06                 5970 	jr	NZ, 00162$
                                   5971 ;src/main.c:617: result = 0;
      00194E F8 03                 5972 	ldhl	sp,	#3
      001950 36 00                 5973 	ld	(hl), #0x00
                                   5974 ;src/main.c:618: break;
      001952 18 05                 5975 	jr	00122$
      001954                       5976 00162$:
                                   5977 ;src/main.c:615: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001954 F8 07                 5978 	ldhl	sp,	#7
      001956 34                    5979 	inc	(hl)
      001957 18 CF                 5980 	jr	00161$
      001959                       5981 00122$:
                                   5982 ;src/main.c:623: if (result == 0) {
      001959 F8 03                 5983 	ldhl	sp,	#3
      00195B 7E                    5984 	ld	a, (hl)
      00195C B7                    5985 	or	a, a
      00195D C2r27r1A              5986 	jp	NZ, 00127$
                                   5987 ;src/main.c:624: playerY += ySpeed;
      001960 FAr89r00              5988 	ld	a, (#_ySpeed)
      001963 4F                    5989 	ld	c, a
      001964 07                    5990 	rlca
      001965 9F                    5991 	sbc	a, a
      001966 21r8Cr00              5992 	ld	hl, #_playerY
      001969 5E                    5993 	ld	e, (hl)
      00196A 23                    5994 	inc	hl
      00196B 56                    5995 	ld	d, (hl)
      00196C 2B                    5996 	dec	hl
      00196D 47                    5997 	ld	b, a
      00196E 79                    5998 	ld	a, c
      00196F 83                    5999 	add	a, e
      001970 4F                    6000 	ld	c, a
      001971 78                    6001 	ld	a, b
      001972 8A                    6002 	adc	a, d
      001973 47                    6003 	ld	b, a
      001974 79                    6004 	ld	a, c
      001975 22                    6005 	ld	(hl+), a
                                   6006 ;src/main.c:626: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001976 78                    6007 	ld	a, b
      001977 32                    6008 	ld	(hl-), a
      001978 2A                    6009 	ld	a, (hl+)
      001979 5F                    6010 	ld	e, a
      00197A 56                    6011 	ld	d, (hl)
      00197B 7A                    6012 	ld	a, d
      00197C D6 06                 6013 	sub	a, #0x06
      00197E 30 05                 6014 	jr	NC, 00177$
      001980 11 00 06              6015 	ld	de, #0x0600
      001983 18 0B                 6016 	jr	00178$
      001985                       6017 00177$:
      001985 3E C0                 6018 	ld	a, #0xc0
      001987 BB                    6019 	cp	a, e
      001988 3E 09                 6020 	ld	a, #0x09
      00198A 9A                    6021 	sbc	a, d
      00198B 30 03                 6022 	jr	NC, 00179$
      00198D 11 C0 09              6023 	ld	de, #0x09c0
      001990                       6024 00179$:
      001990                       6025 00178$:
      001990 4B                    6026 	ld	c, e
      001991 42                    6027 	ld	b, d
                                   6028 ;src/main.c:628: yOverflow = (playerY - limitedPlayerY);
      001992 FAr8Cr00              6029 	ld	a, (#_playerY)
      001995 93                    6030 	sub	a, e
      001996 EAr96r00              6031 	ld	(#_yOverflow),a
      001999 FAr8Dr00              6032 	ld	a, (#_playerY + 1)
      00199C 9A                    6033 	sbc	a, d
      00199D 21r97r00              6034 	ld	hl, #_yOverflow + 1
                                   6035 ;src/main.c:629: if (yOverflow >= 0) {
      0019A0 32                    6036 	ld	(hl-), a
      0019A1 6E                    6037 	ld	l, (hl)
                                   6038 ;	spillPairReg hl
                                   6039 ;	spillPairReg hl
      0019A2 FAr97r00              6040 	ld	a, (_yOverflow + 1)
                                   6041 ;	spillPairReg hl
                                   6042 ;	spillPairReg hl
      0019A5 CB 7F                 6043 	bit	7,a
      0019A7 20 22                 6044 	jr	NZ, 00124$
                                   6045 ;src/main.c:630: yOverflow = yOverflow >> 5;
      0019A9 21r97r00              6046 	ld	hl, #_yOverflow + 1
      0019AC CB 2E                 6047 	sra	(hl)
      0019AE 2B                    6048 	dec	hl
      0019AF CB 1E                 6049 	rr	(hl)
      0019B1 23                    6050 	inc	hl
      0019B2 CB 2E                 6051 	sra	(hl)
      0019B4 2B                    6052 	dec	hl
      0019B5 CB 1E                 6053 	rr	(hl)
      0019B7 23                    6054 	inc	hl
      0019B8 CB 2E                 6055 	sra	(hl)
      0019BA 2B                    6056 	dec	hl
      0019BB CB 1E                 6057 	rr	(hl)
      0019BD 23                    6058 	inc	hl
      0019BE CB 2E                 6059 	sra	(hl)
      0019C0 2B                    6060 	dec	hl
      0019C1 CB 1E                 6061 	rr	(hl)
      0019C3 23                    6062 	inc	hl
      0019C4 CB 2E                 6063 	sra	(hl)
      0019C6 2B                    6064 	dec	hl
      0019C7 CB 1E                 6065 	rr	(hl)
      0019C9 18 25                 6066 	jr	00125$
      0019CB                       6067 00124$:
                                   6068 ;src/main.c:633: yOverflow = -((-yOverflow) >> 5);
      0019CB AF                    6069 	xor	a, a
      0019CC 21r96r00              6070 	ld	hl, #_yOverflow
      0019CF 96                    6071 	sub	a, (hl)
      0019D0 23                    6072 	inc	hl
      0019D1 5F                    6073 	ld	e, a
      0019D2 9F                    6074 	sbc	a, a
      0019D3 96                    6075 	sub	a, (hl)
      0019D4 2B                    6076 	dec	hl
      0019D5 57                    6077 	ld	d, a
      0019D6 CB 2A                 6078 	sra	d
      0019D8 CB 1B                 6079 	rr	e
      0019DA CB 2A                 6080 	sra	d
      0019DC CB 1B                 6081 	rr	e
      0019DE CB 2A                 6082 	sra	d
      0019E0 CB 1B                 6083 	rr	e
      0019E2 CB 2A                 6084 	sra	d
      0019E4 CB 1B                 6085 	rr	e
      0019E6 CB 2A                 6086 	sra	d
      0019E8 CB 1B                 6087 	rr	e
      0019EA AF                    6088 	xor	a, a
      0019EB 93                    6089 	sub	a, e
      0019EC 22                    6090 	ld	(hl+), a
      0019ED 9F                    6091 	sbc	a, a
      0019EE 92                    6092 	sub	a, d
      0019EF 77                    6093 	ld	(hl), a
      0019F0                       6094 00125$:
                                   6095 ;src/main.c:635: bgY += yOverflow;
      0019F0 FAr92r00              6096 	ld	a, (#_bgY)
      0019F3 21r96r00              6097 	ld	hl, #_yOverflow
      0019F6 86                    6098 	add	a, (hl)
      0019F7 21r92r00              6099 	ld	hl, #_bgY
      0019FA 22                    6100 	ld	(hl+), a
      0019FB 7E                    6101 	ld	a, (hl)
      0019FC 21r97r00              6102 	ld	hl, #_yOverflow + 1
      0019FF 8E                    6103 	adc	a, (hl)
      001A00 EAr93r00              6104 	ld	(#_bgY + 1),a
                                   6105 ;src/main.c:636: playerY = limitedPlayerY;
      001A03 21r8Cr00              6106 	ld	hl, #_playerY
      001A06 79                    6107 	ld	a, c
      001A07 22                    6108 	ld	(hl+), a
                                   6109 ;src/main.c:637: playerDrawY=playerY >> 5;
      001A08 78                    6110 	ld	a, b
      001A09 32                    6111 	ld	(hl-), a
      001A0A 2A                    6112 	ld	a, (hl+)
      001A0B 4F                    6113 	ld	c, a
      001A0C 46                    6114 	ld	b, (hl)
      001A0D CB 38                 6115 	srl	b
      001A0F CB 19                 6116 	rr	c
      001A11 CB 38                 6117 	srl	b
      001A13 CB 19                 6118 	rr	c
      001A15 CB 38                 6119 	srl	b
      001A17 CB 19                 6120 	rr	c
      001A19 CB 38                 6121 	srl	b
      001A1B CB 19                 6122 	rr	c
      001A1D CB 38                 6123 	srl	b
      001A1F CB 19                 6124 	rr	c
      001A21 21r8Fr00              6125 	ld	hl, #_playerDrawY
      001A24 71                    6126 	ld	(hl), c
      001A25 18 05                 6127 	jr	00128$
      001A27                       6128 00127$:
                                   6129 ;src/main.c:642: ySpeed = 0;
      001A27 21r89r00              6130 	ld	hl, #_ySpeed
      001A2A 36 00                 6131 	ld	(hl), #0x00
      001A2C                       6132 00128$:
                                   6133 ;src/main.c:538: uint8_t xCollisionPoint = playerDrawX; 
      001A2C FAr8Er00              6134 	ld	a, (#_playerDrawX)
      001A2F F8 07                 6135 	ldhl	sp,	#7
      001A31 77                    6136 	ld	(hl), a
                                   6137 ;src/main.c:599: yCollisionPoint = playerDrawY +8; //bottom edge
      001A32 FAr8Fr00              6138 	ld	a, (#_playerDrawY)
      001A35 C6 08                 6139 	add	a, #0x08
      001A37 F8 06                 6140 	ldhl	sp,	#6
      001A39 77                    6141 	ld	(hl), a
                                   6142 ;src/main.c:645: if (xDir >= 0) {
      001A3A FAr86r00              6143 	ld	a, (#_xDir)
      001A3D CB 7F                 6144 	bit	7, a
      001A3F 20 2A                 6145 	jr	NZ, 00130$
                                   6146 ;src/main.c:646: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   6147 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6148 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001A41 11r00r00              6149 	ld	de, #_shadow_OAM
      001A44 F8 06                 6150 	ldhl	sp,	#6
      001A46 2A                    6151 	ld	a, (hl+)
      001A47 12                    6152 	ld	(de), a
      001A48 11r01r00              6153 	ld	de, #(_shadow_OAM + 1)
      001A4B 7E                    6154 	ld	a, (hl)
      001A4C 12                    6155 	ld	(de), a
                                   6156 ;src/main.c:648: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001A4D FAr8Fr00              6157 	ld	a, (#_playerDrawY)
      001A50 F8 07                 6158 	ldhl	sp,	#7
      001A52 77                    6159 	ld	(hl), a
      001A53 3A                    6160 	ld	a, (hl-)
      001A54 C6 08                 6161 	add	a, #0x08
      001A56 77                    6162 	ld	(hl), a
      001A57 FAr8Er00              6163 	ld	a, (#_playerDrawX)
      001A5A C6 08                 6164 	add	a, #0x08
      001A5C F8 07                 6165 	ldhl	sp,	#7
                                   6166 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6167 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001A5E 32                    6168 	ld	(hl-), a
      001A5F 11r04r00              6169 	ld	de, #(_shadow_OAM + 4)
      001A62 2A                    6170 	ld	a, (hl+)
      001A63 12                    6171 	ld	(de), a
      001A64 11r05r00              6172 	ld	de, #(_shadow_OAM + 5)
      001A67 7E                    6173 	ld	a, (hl)
      001A68 12                    6174 	ld	(de), a
                                   6175 ;src/main.c:648: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001A69 18 28                 6176 	jr	00131$
      001A6B                       6177 00130$:
                                   6178 ;src/main.c:651: move_sprite(1, playerDrawX , playerDrawY +8);
                                   6179 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001A6B 01r04r00              6180 	ld	bc, #(_shadow_OAM + 4)
                                   6181 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001A6E F8 06                 6182 	ldhl	sp,	#6
      001A70 2A                    6183 	ld	a, (hl+)
      001A71 02                    6184 	ld	(bc), a
      001A72 03                    6185 	inc	bc
      001A73 7E                    6186 	ld	a, (hl)
      001A74 02                    6187 	ld	(bc), a
                                   6188 ;src/main.c:653: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001A75 FAr8Fr00              6189 	ld	a, (#_playerDrawY)
      001A78 F8 07                 6190 	ldhl	sp,	#7
      001A7A 77                    6191 	ld	(hl), a
      001A7B 3A                    6192 	ld	a, (hl-)
      001A7C C6 08                 6193 	add	a, #0x08
      001A7E 77                    6194 	ld	(hl), a
      001A7F FAr8Er00              6195 	ld	a, (#_playerDrawX)
      001A82 F8 07                 6196 	ldhl	sp,	#7
      001A84 77                    6197 	ld	(hl), a
      001A85 7E                    6198 	ld	a, (hl)
      001A86 C6 08                 6199 	add	a, #0x08
                                   6200 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6201 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001A88 32                    6202 	ld	(hl-), a
      001A89 11r00r00              6203 	ld	de, #_shadow_OAM
      001A8C 2A                    6204 	ld	a, (hl+)
      001A8D 12                    6205 	ld	(de), a
      001A8E 11r01r00              6206 	ld	de, #(_shadow_OAM + 1)
      001A91 7E                    6207 	ld	a, (hl)
      001A92 12                    6208 	ld	(de), a
                                   6209 ;src/main.c:653: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001A93                       6210 00131$:
                                   6211 ;src/main.c:658: if (bgX >= 256) {
      001A93 21r90r00              6212 	ld	hl, #_bgX
      001A96 2A                    6213 	ld	a, (hl+)
      001A97 4F                    6214 	ld	c, a
      001A98 46                    6215 	ld	b, (hl)
      001A99 78                    6216 	ld	a, b
      001A9A EE 80                 6217 	xor	a, #0x80
      001A9C D6 81                 6218 	sub	a, #0x81
      001A9E 38 0F                 6219 	jr	C, 00133$
                                   6220 ;src/main.c:659: bgX = bgX % 256;
      001AA0 AF                    6221 	xor	a, a
      001AA1 3C                    6222 	inc	a
      001AA2 F5                    6223 	push	af
      001AA3 C5                    6224 	push	bc
      001AA4 CDr00r00              6225 	call	__modsint
      001AA7 E8 04                 6226 	add	sp, #4
      001AA9 21r90r00              6227 	ld	hl, #_bgX
      001AAC 7B                    6228 	ld	a, e
      001AAD 22                    6229 	ld	(hl+), a
      001AAE 72                    6230 	ld	(hl), d
      001AAF                       6231 00133$:
                                   6232 ;src/main.c:661: if (bgX < 0) {
      001AAF 21r90r00              6233 	ld	hl, #_bgX
      001AB2 2A                    6234 	ld	a, (hl+)
      001AB3 4F                    6235 	ld	c, a
      001AB4 46                    6236 	ld	b, (hl)
      001AB5 CB 78                 6237 	bit	7, b
      001AB7 28 15                 6238 	jr	Z, 00135$
                                   6239 ;src/main.c:662: bgX = 255 - (bgX % 256);
      001AB9 AF                    6240 	xor	a, a
      001ABA 3C                    6241 	inc	a
      001ABB F5                    6242 	push	af
      001ABC C5                    6243 	push	bc
      001ABD CDr00r00              6244 	call	__modsint
      001AC0 E8 04                 6245 	add	sp, #4
      001AC2 3E FF                 6246 	ld	a, #0xff
      001AC4 93                    6247 	sub	a, e
      001AC5 4F                    6248 	ld	c, a
      001AC6 9F                    6249 	sbc	a, a
      001AC7 92                    6250 	sub	a, d
      001AC8 21r90r00              6251 	ld	hl, #_bgX
      001ACB 71                    6252 	ld	(hl), c
      001ACC 23                    6253 	inc	hl
      001ACD 77                    6254 	ld	(hl), a
      001ACE                       6255 00135$:
                                   6256 ;src/main.c:664: if (bgY >= 256) {
      001ACE 21r92r00              6257 	ld	hl, #_bgY
      001AD1 2A                    6258 	ld	a, (hl+)
      001AD2 4F                    6259 	ld	c, a
      001AD3 46                    6260 	ld	b, (hl)
      001AD4 78                    6261 	ld	a, b
      001AD5 EE 80                 6262 	xor	a, #0x80
      001AD7 D6 81                 6263 	sub	a, #0x81
      001AD9 38 0F                 6264 	jr	C, 00137$
                                   6265 ;src/main.c:665: bgY = bgY % 256;
      001ADB AF                    6266 	xor	a, a
      001ADC 3C                    6267 	inc	a
      001ADD F5                    6268 	push	af
      001ADE C5                    6269 	push	bc
      001ADF CDr00r00              6270 	call	__modsint
      001AE2 E8 04                 6271 	add	sp, #4
      001AE4 21r92r00              6272 	ld	hl, #_bgY
      001AE7 7B                    6273 	ld	a, e
      001AE8 22                    6274 	ld	(hl+), a
      001AE9 72                    6275 	ld	(hl), d
      001AEA                       6276 00137$:
                                   6277 ;src/main.c:667: if (bgY < 0) {
      001AEA 21r92r00              6278 	ld	hl, #_bgY
      001AED 2A                    6279 	ld	a, (hl+)
      001AEE 4F                    6280 	ld	c, a
      001AEF 46                    6281 	ld	b, (hl)
      001AF0 CB 78                 6282 	bit	7, b
      001AF2 28 15                 6283 	jr	Z, 00139$
                                   6284 ;src/main.c:668: bgY = 255 - (bgY % 256);
      001AF4 AF                    6285 	xor	a, a
      001AF5 3C                    6286 	inc	a
      001AF6 F5                    6287 	push	af
      001AF7 C5                    6288 	push	bc
      001AF8 CDr00r00              6289 	call	__modsint
      001AFB E8 04                 6290 	add	sp, #4
      001AFD 3E FF                 6291 	ld	a, #0xff
      001AFF 93                    6292 	sub	a, e
      001B00 4F                    6293 	ld	c, a
      001B01 9F                    6294 	sbc	a, a
      001B02 92                    6295 	sub	a, d
      001B03 21r92r00              6296 	ld	hl, #_bgY
      001B06 71                    6297 	ld	(hl), c
      001B07 23                    6298 	inc	hl
      001B08 77                    6299 	ld	(hl), a
      001B09                       6300 00139$:
                                   6301 ;src/main.c:671: move_bkg(bgX, bgY);
      001B09 21r92r00              6302 	ld	hl, #_bgY
      001B0C 4E                    6303 	ld	c, (hl)
      001B0D FAr90r00              6304 	ld	a, (#_bgX)
      001B10 E0r00                 6305 	ldh	(_SCX_REG + 0), a
                                   6306 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001B12 79                    6307 	ld	a, c
      001B13 E0r00                 6308 	ldh	(_SCY_REG + 0), a
                                   6309 ;src/main.c:674: if (ySpeed > 0) ySpeed--;
      001B15 21r89r00              6310 	ld	hl, #_ySpeed
      001B18 5E                    6311 	ld	e, (hl)
      001B19 AF                    6312 	xor	a, a
      001B1A 57                    6313 	ld	d, a
      001B1B 96                    6314 	sub	a, (hl)
      001B1C CB 7B                 6315 	bit	7, e
      001B1E 28 07                 6316 	jr	Z, 00355$
      001B20 CB 7A                 6317 	bit	7, d
      001B22 20 08                 6318 	jr	NZ, 00356$
      001B24 BF                    6319 	cp	a, a
      001B25 18 05                 6320 	jr	00356$
      001B27                       6321 00355$:
      001B27 CB 7A                 6322 	bit	7, d
      001B29 28 01                 6323 	jr	Z, 00356$
      001B2B 37                    6324 	scf
      001B2C                       6325 00356$:
      001B2C 30 04                 6326 	jr	NC, 00141$
      001B2E 21r89r00              6327 	ld	hl, #_ySpeed
      001B31 35                    6328 	dec	(hl)
      001B32                       6329 00141$:
                                   6330 ;src/main.c:675: if (ySpeed < 0) ySpeed++;
      001B32 21r89r00              6331 	ld	hl, #_ySpeed
      001B35 CB 7E                 6332 	bit	7, (hl)
      001B37 28 01                 6333 	jr	Z, 00143$
      001B39 34                    6334 	inc	(hl)
      001B3A                       6335 00143$:
                                   6336 ;src/main.c:676: if (xSpeed > 0) xSpeed--;
      001B3A 21r88r00              6337 	ld	hl, #_xSpeed
      001B3D 5E                    6338 	ld	e, (hl)
      001B3E AF                    6339 	xor	a, a
      001B3F 57                    6340 	ld	d, a
      001B40 96                    6341 	sub	a, (hl)
      001B41 CB 7B                 6342 	bit	7, e
      001B43 28 07                 6343 	jr	Z, 00357$
      001B45 CB 7A                 6344 	bit	7, d
      001B47 20 08                 6345 	jr	NZ, 00358$
      001B49 BF                    6346 	cp	a, a
      001B4A 18 05                 6347 	jr	00358$
      001B4C                       6348 00357$:
      001B4C CB 7A                 6349 	bit	7, d
      001B4E 28 01                 6350 	jr	Z, 00358$
      001B50 37                    6351 	scf
      001B51                       6352 00358$:
      001B51 30 04                 6353 	jr	NC, 00145$
      001B53 21r88r00              6354 	ld	hl, #_xSpeed
      001B56 35                    6355 	dec	(hl)
      001B57                       6356 00145$:
                                   6357 ;src/main.c:677: if (xSpeed < 0) xSpeed++;
      001B57 21r88r00              6358 	ld	hl, #_xSpeed
      001B5A CB 7E                 6359 	bit	7, (hl)
      001B5C 28 01                 6360 	jr	Z, 00163$
      001B5E 34                    6361 	inc	(hl)
      001B5F                       6362 00163$:
                                   6363 ;src/main.c:681: }
      001B5F E8 08                 6364 	add	sp, #8
      001B61 C9                    6365 	ret
                                   6366 ;src/main.c:683: void takeDamage(int16_t amount) {
                                   6367 ;	---------------------------------
                                   6368 ; Function takeDamage
                                   6369 ; ---------------------------------
      001B62                       6370 _takeDamage::
      001B62 3B                    6371 	dec	sp
                                   6372 ;src/main.c:684: if (amount > shield) {
      001B63 FArDEr00              6373 	ld	a, (#_shield)
      001B66 4F                    6374 	ld	c, a
      001B67 07                    6375 	rlca
      001B68 9F                    6376 	sbc	a, a
      001B69 47                    6377 	ld	b, a
                                   6378 ;src/main.c:686: hull -= (amount - shield);
      001B6A F8 03                 6379 	ldhl	sp,	#3
      001B6C 7E                    6380 	ld	a, (hl)
      001B6D F8 00                 6381 	ldhl	sp,	#0
      001B6F 77                    6382 	ld	(hl), a
                                   6383 ;src/main.c:684: if (amount > shield) {
      001B70 F8 03                 6384 	ldhl	sp,	#3
      001B72 79                    6385 	ld	a, c
      001B73 96                    6386 	sub	a, (hl)
      001B74 23                    6387 	inc	hl
      001B75 78                    6388 	ld	a, b
      001B76 9E                    6389 	sbc	a, (hl)
      001B77 78                    6390 	ld	a, b
      001B78 57                    6391 	ld	d, a
      001B79 CB 7E                 6392 	bit	7, (hl)
      001B7B 28 07                 6393 	jr	Z, 00111$
      001B7D CB 7A                 6394 	bit	7, d
      001B7F 20 08                 6395 	jr	NZ, 00112$
      001B81 BF                    6396 	cp	a, a
      001B82 18 05                 6397 	jr	00112$
      001B84                       6398 00111$:
      001B84 CB 7A                 6399 	bit	7, d
      001B86 28 01                 6400 	jr	Z, 00112$
      001B88 37                    6401 	scf
      001B89                       6402 00112$:
      001B89 30 10                 6403 	jr	NC, 00102$
                                   6404 ;src/main.c:685: shield = 0;
      001B8B 21rDEr00              6405 	ld	hl, #_shield
      001B8E 36 00                 6406 	ld	(hl), #0x00
                                   6407 ;src/main.c:686: hull -= (amount - shield);
      001B90 FArDDr00              6408 	ld	a, (#_hull)
      001B93 F8 00                 6409 	ldhl	sp,	#0
      001B95 96                    6410 	sub	a, (hl)
      001B96 EArDDr00              6411 	ld	(#_hull),a
      001B99 18 09                 6412 	jr	00104$
      001B9B                       6413 00102$:
                                   6414 ;src/main.c:689: shield -= amount;
      001B9B FArDEr00              6415 	ld	a, (#_shield)
      001B9E F8 00                 6416 	ldhl	sp,	#0
      001BA0 96                    6417 	sub	a, (hl)
      001BA1 EArDEr00              6418 	ld	(#_shield),a
      001BA4                       6419 00104$:
                                   6420 ;src/main.c:691: }
      001BA4 33                    6421 	inc	sp
      001BA5 C9                    6422 	ret
                                   6423 ;src/main.c:693: void checkCollision() {
                                   6424 ;	---------------------------------
                                   6425 ; Function checkCollision
                                   6426 ; ---------------------------------
      001BA6                       6427 _checkCollision::
      001BA6 E8 F1                 6428 	add	sp, #-15
                                   6429 ;src/main.c:700: struct Enemy *eptr = enemies + enemyCollisionCount;
      001BA8 01r50r00              6430 	ld	bc, #_enemies+0
      001BAB 21r98r00              6431 	ld	hl, #_enemyCollisionCount
      001BAE 6E                    6432 	ld	l, (hl)
                                   6433 ;	spillPairReg hl
                                   6434 ;	spillPairReg hl
      001BAF 26 00                 6435 	ld	h, #0x00
                                   6436 ;	spillPairReg hl
                                   6437 ;	spillPairReg hl
      001BB1 29                    6438 	add	hl, hl
      001BB2 29                    6439 	add	hl, hl
      001BB3 29                    6440 	add	hl, hl
      001BB4 29                    6441 	add	hl, hl
      001BB5 09                    6442 	add	hl, bc
      001BB6 4D                    6443 	ld	c, l
      001BB7 7C                    6444 	ld	a, h
      001BB8 F8 00                 6445 	ldhl	sp,	#0
      001BBA 71                    6446 	ld	(hl), c
      001BBB 23                    6447 	inc	hl
      001BBC 77                    6448 	ld	(hl), a
                                   6449 ;src/main.c:701: uint8_t i = enemyCollisionCount;
      001BBD FAr98r00              6450 	ld	a, (#_enemyCollisionCount)
      001BC0 F8 02                 6451 	ldhl	sp,	#2
      001BC2 77                    6452 	ld	(hl), a
                                   6453 ;src/main.c:703: if (eptr->visible && eptr->alive) {
      001BC3 D1                    6454 	pop	de
      001BC4 D5                    6455 	push	de
      001BC5 21 0A 00              6456 	ld	hl, #0x000a
      001BC8 19                    6457 	add	hl, de
      001BC9 4D                    6458 	ld	c, l
      001BCA 44                    6459 	ld	b, h
      001BCB 0A                    6460 	ld	a, (bc)
      001BCC B7                    6461 	or	a, a
      001BCD CArE1r1E              6462 	jp	Z, 00127$
      001BD0 D1                    6463 	pop	de
      001BD1 D5                    6464 	push	de
      001BD2 21 09 00              6465 	ld	hl, #0x0009
      001BD5 19                    6466 	add	hl, de
      001BD6 4D                    6467 	ld	c, l
      001BD7 44                    6468 	ld	b, h
      001BD8 0A                    6469 	ld	a, (bc)
      001BD9 B7                    6470 	or	a, a
      001BDA CArE1r1E              6471 	jp	Z, 00127$
                                   6472 ;src/main.c:705: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001BDD D1                    6473 	pop	de
      001BDE D5                    6474 	push	de
      001BDF 21 08 00              6475 	ld	hl, #0x0008
      001BE2 19                    6476 	add	hl, de
      001BE3 4D                    6477 	ld	c, l
      001BE4 44                    6478 	ld	b, h
      001BE5 0A                    6479 	ld	a, (bc)
      001BE6 4F                    6480 	ld	c, a
      001BE7 3D                    6481 	dec	a
      001BE8 3E 01                 6482 	ld	a, #0x01
      001BEA 28 01                 6483 	jr	Z, 00283$
      001BEC AF                    6484 	xor	a, a
      001BED                       6485 00283$:
      001BED F8 0B                 6486 	ldhl	sp,	#11
      001BEF 77                    6487 	ld	(hl), a
      001BF0 FAr8Er00              6488 	ld	a, (#_playerDrawX)
      001BF3 F8 0C                 6489 	ldhl	sp,	#12
      001BF5 77                    6490 	ld	(hl), a
                                   6491 ;src/main.c:706: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001BF6 79                    6492 	ld	a, c
      001BF7 D6 02                 6493 	sub	a, #0x02
      001BF9 3E 01                 6494 	ld	a, #0x01
      001BFB 28 01                 6495 	jr	Z, 00285$
      001BFD AF                    6496 	xor	a, a
      001BFE                       6497 00285$:
      001BFE F8 0D                 6498 	ldhl	sp,	#13
                                   6499 ;src/main.c:705: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001C00 32                    6500 	ld	(hl-), a
      001C01 2B                    6501 	dec	hl
      001C02 7E                    6502 	ld	a, (hl)
      001C03 B7                    6503 	or	a, a
      001C04 28 2E                 6504 	jr	Z, 00110$
      001C06 D1                    6505 	pop	de
      001C07 D5                    6506 	push	de
      001C08 1A                    6507 	ld	a, (de)
      001C09 F8 0E                 6508 	ldhl	sp,	#14
      001C0B 77                    6509 	ld	(hl), a
      001C0C 3A                    6510 	ld	a, (hl-)
      001C0D 2B                    6511 	dec	hl
      001C0E 96                    6512 	sub	a, (hl)
      001C0F 23                    6513 	inc	hl
      001C10 23                    6514 	inc	hl
      001C11 77                    6515 	ld	(hl), a
                                   6516 ;src/main.c:306: if (value >= 0) return value;
      001C12 CB 7E                 6517 	bit	7, (hl)
      001C14 28 05                 6518 	jr	Z, 00135$
                                   6519 ;src/main.c:307: else return - value;
      001C16 AF                    6520 	xor	a, a
      001C17 F8 0E                 6521 	ldhl	sp,	#14
      001C19 96                    6522 	sub	a, (hl)
      001C1A 77                    6523 	ld	(hl), a
                                   6524 ;src/main.c:705: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001C1B                       6525 00135$:
      001C1B F8 0E                 6526 	ldhl	sp,	#14
      001C1D 5E                    6527 	ld	e, (hl)
      001C1E 3E 08                 6528 	ld	a,#0x08
      001C20 57                    6529 	ld	d,a
      001C21 96                    6530 	sub	a, (hl)
      001C22 CB 7B                 6531 	bit	7, e
      001C24 28 07                 6532 	jr	Z, 00286$
      001C26 CB 7A                 6533 	bit	7, d
      001C28 20 08                 6534 	jr	NZ, 00287$
      001C2A BF                    6535 	cp	a, a
      001C2B 18 05                 6536 	jr	00287$
      001C2D                       6537 00286$:
      001C2D CB 7A                 6538 	bit	7, d
      001C2F 28 01                 6539 	jr	Z, 00287$
      001C31 37                    6540 	scf
      001C32                       6541 00287$:
      001C32 30 33                 6542 	jr	NC, 00106$
      001C34                       6543 00110$:
                                   6544 ;src/main.c:706: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001C34 F8 0D                 6545 	ldhl	sp,	#13
      001C36 7E                    6546 	ld	a, (hl)
      001C37 B7                    6547 	or	a, a
      001C38 CAr1Br1D              6548 	jp	Z, 00107$
      001C3B 2B                    6549 	dec	hl
      001C3C D1                    6550 	pop	de
      001C3D D5                    6551 	push	de
      001C3E 1A                    6552 	ld	a, (de)
      001C3F 96                    6553 	sub	a, (hl)
      001C40 23                    6554 	inc	hl
      001C41 23                    6555 	inc	hl
      001C42 77                    6556 	ld	(hl), a
                                   6557 ;src/main.c:306: if (value >= 0) return value;
      001C43 CB 7E                 6558 	bit	7, (hl)
      001C45 28 06                 6559 	jr	Z, 00139$
                                   6560 ;src/main.c:307: else return - value;
      001C47 AF                    6561 	xor	a, a
      001C48 F8 0E                 6562 	ldhl	sp,	#14
      001C4A 96                    6563 	sub	a, (hl)
      001C4B 4F                    6564 	ld	c, a
      001C4C 71                    6565 	ld	(hl), c
                                   6566 ;src/main.c:706: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001C4D                       6567 00139$:
      001C4D F8 0E                 6568 	ldhl	sp,	#14
      001C4F 5E                    6569 	ld	e, (hl)
      001C50 3E 10                 6570 	ld	a,#0x10
      001C52 57                    6571 	ld	d,a
      001C53 96                    6572 	sub	a, (hl)
      001C54 CB 7B                 6573 	bit	7, e
      001C56 28 07                 6574 	jr	Z, 00288$
      001C58 CB 7A                 6575 	bit	7, d
      001C5A 20 08                 6576 	jr	NZ, 00289$
      001C5C BF                    6577 	cp	a, a
      001C5D 18 05                 6578 	jr	00289$
      001C5F                       6579 00288$:
      001C5F CB 7A                 6580 	bit	7, d
      001C61 28 01                 6581 	jr	Z, 00289$
      001C63 37                    6582 	scf
      001C64                       6583 00289$:
      001C64 DAr1Br1D              6584 	jp	C, 00107$
      001C67                       6585 00106$:
                                   6586 ;src/main.c:707: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001C67 C1                    6587 	pop	bc
      001C68 C5                    6588 	push	bc
      001C69 03                    6589 	inc	bc
      001C6A 03                    6590 	inc	bc
      001C6B FAr8Fr00              6591 	ld	a, (#_playerDrawY)
      001C6E F8 0E                 6592 	ldhl	sp,	#14
      001C70 77                    6593 	ld	(hl), a
      001C71 F8 0B                 6594 	ldhl	sp,	#11
      001C73 7E                    6595 	ld	a, (hl)
      001C74 B7                    6596 	or	a, a
      001C75 28 23                 6597 	jr	Z, 00105$
      001C77 0A                    6598 	ld	a, (bc)
      001C78 F8 0E                 6599 	ldhl	sp,	#14
      001C7A 96                    6600 	sub	a, (hl)
      001C7B 6F                    6601 	ld	l, a
                                   6602 ;	spillPairReg hl
                                   6603 ;	spillPairReg hl
                                   6604 ;src/main.c:306: if (value >= 0) return value;
      001C7C CB 7D                 6605 	bit	7, l
      001C7E 28 03                 6606 	jr	Z, 00143$
                                   6607 ;src/main.c:307: else return - value;
      001C80 AF                    6608 	xor	a, a
      001C81 95                    6609 	sub	a, l
      001C82 6F                    6610 	ld	l, a
                                   6611 ;	spillPairReg hl
                                   6612 ;	spillPairReg hl
                                   6613 ;src/main.c:707: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001C83                       6614 00143$:
      001C83 5D                    6615 	ld	e, l
      001C84 3E 08                 6616 	ld	a,#0x08
      001C86 57                    6617 	ld	d,a
      001C87 95                    6618 	sub	a, l
      001C88 CB 7B                 6619 	bit	7, e
      001C8A 28 07                 6620 	jr	Z, 00290$
      001C8C CB 7A                 6621 	bit	7, d
      001C8E 20 08                 6622 	jr	NZ, 00291$
      001C90 BF                    6623 	cp	a, a
      001C91 18 05                 6624 	jr	00291$
      001C93                       6625 00290$:
      001C93 CB 7A                 6626 	bit	7, d
      001C95 28 01                 6627 	jr	Z, 00291$
      001C97 37                    6628 	scf
      001C98                       6629 00291$:
      001C98 30 28                 6630 	jr	NC, 00101$
      001C9A                       6631 00105$:
                                   6632 ;src/main.c:708: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001C9A F8 0D                 6633 	ldhl	sp,	#13
      001C9C 7E                    6634 	ld	a, (hl)
      001C9D B7                    6635 	or	a, a
      001C9E 28 7B                 6636 	jr	Z, 00107$
      001CA0 23                    6637 	inc	hl
      001CA1 0A                    6638 	ld	a, (bc)
      001CA2 96                    6639 	sub	a, (hl)
      001CA3 4F                    6640 	ld	c, a
                                   6641 ;src/main.c:306: if (value >= 0) return value;
      001CA4 CB 79                 6642 	bit	7, c
      001CA6 28 03                 6643 	jr	Z, 00147$
                                   6644 ;src/main.c:307: else return - value;
      001CA8 AF                    6645 	xor	a, a
      001CA9 91                    6646 	sub	a, c
      001CAA 4F                    6647 	ld	c, a
                                   6648 ;src/main.c:708: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001CAB                       6649 00147$:
      001CAB 59                    6650 	ld	e, c
      001CAC 3E 10                 6651 	ld	a,#0x10
      001CAE 57                    6652 	ld	d,a
      001CAF 91                    6653 	sub	a, c
      001CB0 CB 7B                 6654 	bit	7, e
      001CB2 28 07                 6655 	jr	Z, 00292$
      001CB4 CB 7A                 6656 	bit	7, d
      001CB6 20 08                 6657 	jr	NZ, 00293$
      001CB8 BF                    6658 	cp	a, a
      001CB9 18 05                 6659 	jr	00293$
      001CBB                       6660 00292$:
      001CBB CB 7A                 6661 	bit	7, d
      001CBD 28 01                 6662 	jr	Z, 00293$
      001CBF 37                    6663 	scf
      001CC0                       6664 00293$:
      001CC0 38 59                 6665 	jr	C, 00107$
      001CC2                       6666 00101$:
                                   6667 ;src/main.c:710: set_sprite_tile(10+(i<<1), 0x7f);
      001CC2 F8 02                 6668 	ldhl	sp,	#2
      001CC4 7E                    6669 	ld	a, (hl)
      001CC5 87                    6670 	add	a, a
      001CC6 C6 0A                 6671 	add	a, #0x0a
                                   6672 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001CC8 6F                    6673 	ld	l, a
      001CC9 01r00r00              6674 	ld	bc, #_shadow_OAM+0
                                   6675 ;	spillPairReg hl
                                   6676 ;	spillPairReg hl
      001CCC 26 00                 6677 	ld	h, #0x00
                                   6678 ;	spillPairReg hl
                                   6679 ;	spillPairReg hl
      001CCE 29                    6680 	add	hl, hl
      001CCF 29                    6681 	add	hl, hl
      001CD0 09                    6682 	add	hl, bc
      001CD1 23                    6683 	inc	hl
      001CD2 23                    6684 	inc	hl
      001CD3 36 7F                 6685 	ld	(hl), #0x7f
                                   6686 ;src/main.c:711: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001CD5 F8 02                 6687 	ldhl	sp,	#2
      001CD7 7E                    6688 	ld	a, (hl)
      001CD8 87                    6689 	add	a, a
      001CD9 C6 0B                 6690 	add	a, #0x0b
                                   6691 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001CDB 6F                    6692 	ld	l, a
      001CDC 01r00r00              6693 	ld	bc, #_shadow_OAM+0
                                   6694 ;	spillPairReg hl
                                   6695 ;	spillPairReg hl
      001CDF 26 00                 6696 	ld	h, #0x00
                                   6697 ;	spillPairReg hl
                                   6698 ;	spillPairReg hl
      001CE1 29                    6699 	add	hl, hl
      001CE2 29                    6700 	add	hl, hl
      001CE3 09                    6701 	add	hl, bc
      001CE4 23                    6702 	inc	hl
      001CE5 23                    6703 	inc	hl
      001CE6 36 7F                 6704 	ld	(hl), #0x7f
                                   6705 ;src/main.c:712: eptr->alive = 0;
      001CE8 D1                    6706 	pop	de
      001CE9 D5                    6707 	push	de
      001CEA 21 09 00              6708 	ld	hl, #0x0009
      001CED 19                    6709 	add	hl, de
      001CEE 4D                    6710 	ld	c, l
      001CEF 44                    6711 	ld	b, h
      001CF0 AF                    6712 	xor	a, a
      001CF1 02                    6713 	ld	(bc), a
                                   6714 ;src/main.c:713: eptr->visible = 0;
      001CF2 D1                    6715 	pop	de
      001CF3 D5                    6716 	push	de
      001CF4 21 0A 00              6717 	ld	hl, #0x000a
      001CF7 19                    6718 	add	hl, de
      001CF8 4D                    6719 	ld	c, l
      001CF9 44                    6720 	ld	b, h
      001CFA AF                    6721 	xor	a, a
      001CFB 02                    6722 	ld	(bc), a
                                   6723 ;src/main.c:714: takeDamage(eptr->damage);
      001CFC D1                    6724 	pop	de
      001CFD D5                    6725 	push	de
      001CFE 21 0B 00              6726 	ld	hl, #0x000b
      001D01 19                    6727 	add	hl, de
      001D02 4D                    6728 	ld	c, l
      001D03 44                    6729 	ld	b, h
      001D04 0A                    6730 	ld	a, (bc)
      001D05 06 00                 6731 	ld	b, #0x00
      001D07 4F                    6732 	ld	c, a
      001D08 C5                    6733 	push	bc
      001D09 CDr62r1B              6734 	call	_takeDamage
      001D0C E1                    6735 	pop	hl
                                   6736 ;src/main.c:715: initEnemies(0);
      001D0D AF                    6737 	xor	a, a
      001D0E F5                    6738 	push	af
      001D0F 33                    6739 	inc	sp
      001D10 CDr04r0C              6740 	call	_initEnemies
      001D13 33                    6741 	inc	sp
                                   6742 ;src/main.c:716: playSound(0);
      001D14 AF                    6743 	xor	a, a
      001D15 F5                    6744 	push	af
      001D16 33                    6745 	inc	sp
      001D17 CDrA1r0B              6746 	call	_playSound
      001D1A 33                    6747 	inc	sp
      001D1B                       6748 00107$:
                                   6749 ;src/main.c:722: struct Projectile *pptr = projectiles;
      001D1B F8 0C                 6750 	ldhl	sp,	#12
      001D1D 3ErA0                 6751 	ld	a, #<(_projectiles)
      001D1F 22                    6752 	ld	(hl+), a
      001D20 36s00                 6753 	ld	(hl), #>(_projectiles)
                                   6754 ;src/main.c:724: while (j < PROJECTILECOUNT) {
      001D22 D1                    6755 	pop	de
      001D23 D5                    6756 	push	de
      001D24 21 02 00              6757 	ld	hl, #0x0002
      001D27 19                    6758 	add	hl, de
      001D28 E5                    6759 	push	hl
      001D29 7D                    6760 	ld	a, l
      001D2A F8 05                 6761 	ldhl	sp,	#5
      001D2C 77                    6762 	ld	(hl), a
      001D2D E1                    6763 	pop	hl
      001D2E 7C                    6764 	ld	a, h
      001D2F F8 04                 6765 	ldhl	sp,	#4
      001D31 77                    6766 	ld	(hl), a
      001D32 D1                    6767 	pop	de
      001D33 D5                    6768 	push	de
      001D34 21 08 00              6769 	ld	hl, #0x0008
      001D37 19                    6770 	add	hl, de
      001D38 E5                    6771 	push	hl
      001D39 7D                    6772 	ld	a, l
      001D3A F8 07                 6773 	ldhl	sp,	#7
      001D3C 77                    6774 	ld	(hl), a
      001D3D E1                    6775 	pop	hl
      001D3E 7C                    6776 	ld	a, h
      001D3F F8 06                 6777 	ldhl	sp,	#6
      001D41 77                    6778 	ld	(hl), a
      001D42 F8 03                 6779 	ldhl	sp,	#3
      001D44 7E                    6780 	ld	a, (hl)
      001D45 F8 07                 6781 	ldhl	sp,	#7
      001D47 77                    6782 	ld	(hl), a
      001D48 F8 04                 6783 	ldhl	sp,	#4
      001D4A 7E                    6784 	ld	a, (hl)
      001D4B F8 08                 6785 	ldhl	sp,	#8
      001D4D 77                    6786 	ld	(hl), a
      001D4E F8 0E                 6787 	ldhl	sp,	#14
      001D50 36 00                 6788 	ld	(hl), #0x00
      001D52                       6789 00123$:
      001D52 21r1Er08              6790 	ld	hl, #_PROJECTILECOUNT
      001D55 4E                    6791 	ld	c, (hl)
      001D56 F8 0E                 6792 	ldhl	sp,	#14
      001D58 7E                    6793 	ld	a, (hl)
      001D59 91                    6794 	sub	a, c
      001D5A D2rE1r1E              6795 	jp	NC, 00127$
                                   6796 ;src/main.c:725: if (pptr->active) {
      001D5D 2B                    6797 	dec	hl
      001D5E 2B                    6798 	dec	hl
      001D5F 2A                    6799 	ld	a, (hl+)
      001D60 5F                    6800 	ld	e, a
      001D61 56                    6801 	ld	d, (hl)
      001D62 21 09 00              6802 	ld	hl, #0x0009
      001D65 19                    6803 	add	hl, de
      001D66 4D                    6804 	ld	c, l
      001D67 44                    6805 	ld	b, h
      001D68 0A                    6806 	ld	a, (bc)
      001D69 B7                    6807 	or	a, a
      001D6A CArC8r1E              6808 	jp	Z, 00122$
                                   6809 ;src/main.c:729: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001D6D F8 05                 6810 	ldhl	sp,#5
      001D6F 2A                    6811 	ld	a, (hl+)
      001D70 5F                    6812 	ld	e, a
      001D71 56                    6813 	ld	d, (hl)
      001D72 1A                    6814 	ld	a, (de)
      001D73 4F                    6815 	ld	c, a
      001D74 3D                    6816 	dec	a
      001D75 3E 01                 6817 	ld	a, #0x01
      001D77 28 01                 6818 	jr	Z, 00295$
      001D79 AF                    6819 	xor	a, a
      001D7A                       6820 00295$:
      001D7A F8 09                 6821 	ldhl	sp,	#9
      001D7C 77                    6822 	ld	(hl), a
                                   6823 ;src/main.c:730: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001D7D 79                    6824 	ld	a, c
      001D7E D6 02                 6825 	sub	a, #0x02
      001D80 3E 01                 6826 	ld	a, #0x01
      001D82 28 01                 6827 	jr	Z, 00297$
      001D84 AF                    6828 	xor	a, a
      001D85                       6829 00297$:
      001D85 F8 0A                 6830 	ldhl	sp,	#10
                                   6831 ;src/main.c:729: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001D87 32                    6832 	ld	(hl-), a
      001D88 7E                    6833 	ld	a, (hl)
      001D89 B7                    6834 	or	a, a
      001D8A 28 2C                 6835 	jr	Z, 00120$
      001D8C D1                    6836 	pop	de
      001D8D D5                    6837 	push	de
      001D8E 1A                    6838 	ld	a, (de)
      001D8F F8 0C                 6839 	ldhl	sp,#12
      001D91 5E                    6840 	ld	e, (hl)
      001D92 23                    6841 	inc	hl
      001D93 56                    6842 	ld	d, (hl)
      001D94 F5                    6843 	push	af
      001D95 1A                    6844 	ld	a, (de)
      001D96 4F                    6845 	ld	c, a
      001D97 F1                    6846 	pop	af
      001D98 91                    6847 	sub	a, c
      001D99 4F                    6848 	ld	c, a
                                   6849 ;src/main.c:306: if (value >= 0) return value;
      001D9A CB 79                 6850 	bit	7, c
      001D9C 28 03                 6851 	jr	Z, 00153$
                                   6852 ;src/main.c:307: else return - value;
      001D9E AF                    6853 	xor	a, a
      001D9F 91                    6854 	sub	a, c
      001DA0 4F                    6855 	ld	c, a
                                   6856 ;src/main.c:729: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001DA1                       6857 00153$:
      001DA1 59                    6858 	ld	e, c
      001DA2 3E 08                 6859 	ld	a,#0x08
      001DA4 57                    6860 	ld	d,a
      001DA5 91                    6861 	sub	a, c
      001DA6 CB 7B                 6862 	bit	7, e
      001DA8 28 07                 6863 	jr	Z, 00298$
      001DAA CB 7A                 6864 	bit	7, d
      001DAC 20 08                 6865 	jr	NZ, 00299$
      001DAE BF                    6866 	cp	a, a
      001DAF 18 05                 6867 	jr	00299$
      001DB1                       6868 00298$:
      001DB1 CB 7A                 6869 	bit	7, d
      001DB3 28 01                 6870 	jr	Z, 00299$
      001DB5 37                    6871 	scf
      001DB6                       6872 00299$:
      001DB6 30 3B                 6873 	jr	NC, 00116$
      001DB8                       6874 00120$:
                                   6875 ;src/main.c:730: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001DB8 F8 0A                 6876 	ldhl	sp,	#10
      001DBA 7E                    6877 	ld	a, (hl)
      001DBB B7                    6878 	or	a, a
      001DBC CArC8r1E              6879 	jp	Z, 00122$
      001DBF D1                    6880 	pop	de
      001DC0 D5                    6881 	push	de
      001DC1 1A                    6882 	ld	a, (de)
      001DC2 F8 0C                 6883 	ldhl	sp,#12
      001DC4 5E                    6884 	ld	e, (hl)
      001DC5 23                    6885 	inc	hl
      001DC6 56                    6886 	ld	d, (hl)
      001DC7 2B                    6887 	dec	hl
      001DC8 2B                    6888 	dec	hl
      001DC9 F5                    6889 	push	af
      001DCA 1A                    6890 	ld	a, (de)
      001DCB 4F                    6891 	ld	c, a
      001DCC F1                    6892 	pop	af
      001DCD 91                    6893 	sub	a, c
      001DCE 77                    6894 	ld	(hl), a
                                   6895 ;src/main.c:306: if (value >= 0) return value;
      001DCF CB 7E                 6896 	bit	7, (hl)
      001DD1 20 03                 6897 	jr	NZ, 00155$
      001DD3 4E                    6898 	ld	c, (hl)
      001DD4 18 05                 6899 	jr	00157$
      001DD6                       6900 00155$:
                                   6901 ;src/main.c:307: else return - value;
      001DD6 AF                    6902 	xor	a, a
      001DD7 F8 0B                 6903 	ldhl	sp,	#11
      001DD9 96                    6904 	sub	a, (hl)
      001DDA 4F                    6905 	ld	c, a
                                   6906 ;src/main.c:730: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001DDB                       6907 00157$:
      001DDB 59                    6908 	ld	e, c
      001DDC 3E 10                 6909 	ld	a,#0x10
      001DDE 57                    6910 	ld	d,a
      001DDF 91                    6911 	sub	a, c
      001DE0 CB 7B                 6912 	bit	7, e
      001DE2 28 07                 6913 	jr	Z, 00300$
      001DE4 CB 7A                 6914 	bit	7, d
      001DE6 20 08                 6915 	jr	NZ, 00301$
      001DE8 BF                    6916 	cp	a, a
      001DE9 18 05                 6917 	jr	00301$
      001DEB                       6918 00300$:
      001DEB CB 7A                 6919 	bit	7, d
      001DED 28 01                 6920 	jr	Z, 00301$
      001DEF 37                    6921 	scf
      001DF0                       6922 00301$:
      001DF0 DArC8r1E              6923 	jp	C, 00122$
      001DF3                       6924 00116$:
                                   6925 ;src/main.c:731: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001DF3 F8 0C                 6926 	ldhl	sp,	#12
      001DF5 2A                    6927 	ld	a, (hl+)
      001DF6 4F                    6928 	ld	c, a
      001DF7 46                    6929 	ld	b, (hl)
      001DF8 03                    6930 	inc	bc
      001DF9 03                    6931 	inc	bc
      001DFA F8 09                 6932 	ldhl	sp,	#9
      001DFC 7E                    6933 	ld	a, (hl)
      001DFD B7                    6934 	or	a, a
      001DFE 28 2A                 6935 	jr	Z, 00115$
      001E00 2B                    6936 	dec	hl
      001E01 2B                    6937 	dec	hl
      001E02 2A                    6938 	ld	a, (hl+)
      001E03 5F                    6939 	ld	e, a
      001E04 56                    6940 	ld	d, (hl)
      001E05 1A                    6941 	ld	a, (de)
      001E06 F5                    6942 	push	af
      001E07 0A                    6943 	ld	a, (bc)
      001E08 5F                    6944 	ld	e, a
      001E09 F1                    6945 	pop	af
      001E0A 93                    6946 	sub	a, e
      001E0B 6F                    6947 	ld	l, a
                                   6948 ;	spillPairReg hl
                                   6949 ;	spillPairReg hl
                                   6950 ;src/main.c:306: if (value >= 0) return value;
      001E0C CB 7D                 6951 	bit	7, l
      001E0E 28 03                 6952 	jr	Z, 00161$
                                   6953 ;src/main.c:307: else return - value;
      001E10 AF                    6954 	xor	a, a
      001E11 95                    6955 	sub	a, l
      001E12 6F                    6956 	ld	l, a
                                   6957 ;	spillPairReg hl
                                   6958 ;	spillPairReg hl
                                   6959 ;src/main.c:731: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001E13                       6960 00161$:
      001E13 5D                    6961 	ld	e, l
      001E14 3E 08                 6962 	ld	a,#0x08
      001E16 57                    6963 	ld	d,a
      001E17 95                    6964 	sub	a, l
      001E18 CB 7B                 6965 	bit	7, e
      001E1A 28 07                 6966 	jr	Z, 00302$
      001E1C CB 7A                 6967 	bit	7, d
      001E1E 20 08                 6968 	jr	NZ, 00303$
      001E20 BF                    6969 	cp	a, a
      001E21 18 05                 6970 	jr	00303$
      001E23                       6971 00302$:
      001E23 CB 7A                 6972 	bit	7, d
      001E25 28 01                 6973 	jr	Z, 00303$
      001E27 37                    6974 	scf
      001E28                       6975 00303$:
      001E28 30 31                 6976 	jr	NC, 00111$
      001E2A                       6977 00115$:
                                   6978 ;src/main.c:732: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001E2A F8 0A                 6979 	ldhl	sp,	#10
      001E2C 7E                    6980 	ld	a, (hl)
      001E2D B7                    6981 	or	a, a
      001E2E CArC8r1E              6982 	jp	Z, 00122$
      001E31 F8 03                 6983 	ldhl	sp,#3
      001E33 2A                    6984 	ld	a, (hl+)
      001E34 5F                    6985 	ld	e, a
      001E35 56                    6986 	ld	d, (hl)
      001E36 1A                    6987 	ld	a, (de)
      001E37 F5                    6988 	push	af
      001E38 0A                    6989 	ld	a, (bc)
      001E39 4F                    6990 	ld	c, a
      001E3A F1                    6991 	pop	af
      001E3B 91                    6992 	sub	a, c
      001E3C 4F                    6993 	ld	c, a
                                   6994 ;src/main.c:306: if (value >= 0) return value;
      001E3D CB 79                 6995 	bit	7, c
      001E3F 28 03                 6996 	jr	Z, 00165$
                                   6997 ;src/main.c:307: else return - value;
      001E41 AF                    6998 	xor	a, a
      001E42 91                    6999 	sub	a, c
      001E43 4F                    7000 	ld	c, a
                                   7001 ;src/main.c:732: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001E44                       7002 00165$:
      001E44 59                    7003 	ld	e, c
      001E45 3E 10                 7004 	ld	a,#0x10
      001E47 57                    7005 	ld	d,a
      001E48 91                    7006 	sub	a, c
      001E49 CB 7B                 7007 	bit	7, e
      001E4B 28 07                 7008 	jr	Z, 00304$
      001E4D CB 7A                 7009 	bit	7, d
      001E4F 20 08                 7010 	jr	NZ, 00305$
      001E51 BF                    7011 	cp	a, a
      001E52 18 05                 7012 	jr	00305$
      001E54                       7013 00304$:
      001E54 CB 7A                 7014 	bit	7, d
      001E56 28 01                 7015 	jr	Z, 00305$
      001E58 37                    7016 	scf
      001E59                       7017 00305$:
      001E59 38 6D                 7018 	jr	C, 00122$
      001E5B                       7019 00111$:
                                   7020 ;src/main.c:735: set_sprite_tile(10+(i<<1), 0x7f);
      001E5B F8 02                 7021 	ldhl	sp,	#2
      001E5D 7E                    7022 	ld	a, (hl)
      001E5E 87                    7023 	add	a, a
      001E5F 4F                    7024 	ld	c, a
      001E60 C6 0A                 7025 	add	a, #0x0a
                                   7026 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E62 6F                    7027 	ld	l, a
                                   7028 ;	spillPairReg hl
                                   7029 ;	spillPairReg hl
      001E63 26 00                 7030 	ld	h, #0x00
                                   7031 ;	spillPairReg hl
                                   7032 ;	spillPairReg hl
      001E65 29                    7033 	add	hl, hl
      001E66 29                    7034 	add	hl, hl
      001E67 11r00r00              7035 	ld	de, #_shadow_OAM
      001E6A 19                    7036 	add	hl, de
      001E6B 23                    7037 	inc	hl
      001E6C 23                    7038 	inc	hl
      001E6D 36 7F                 7039 	ld	(hl), #0x7f
                                   7040 ;src/main.c:736: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001E6F 79                    7041 	ld	a, c
      001E70 C6 0B                 7042 	add	a, #0x0b
      001E72 4F                    7043 	ld	c, a
                                   7044 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E73 26 00                 7045 	ld	h, #0x00
                                   7046 ;	spillPairReg hl
                                   7047 ;	spillPairReg hl
      001E75 69                    7048 	ld	l, c
      001E76 29                    7049 	add	hl, hl
      001E77 29                    7050 	add	hl, hl
      001E78 11r00r00              7051 	ld	de, #_shadow_OAM
      001E7B 19                    7052 	add	hl, de
      001E7C 23                    7053 	inc	hl
      001E7D 23                    7054 	inc	hl
      001E7E 36 7F                 7055 	ld	(hl), #0x7f
                                   7056 ;src/main.c:737: eptr->alive = 0;
      001E80 D1                    7057 	pop	de
      001E81 D5                    7058 	push	de
      001E82 21 09 00              7059 	ld	hl, #0x0009
      001E85 19                    7060 	add	hl, de
      001E86 4D                    7061 	ld	c, l
      001E87 44                    7062 	ld	b, h
      001E88 AF                    7063 	xor	a, a
      001E89 02                    7064 	ld	(bc), a
                                   7065 ;src/main.c:738: eptr->visible = 0;
      001E8A D1                    7066 	pop	de
      001E8B D5                    7067 	push	de
      001E8C 21 0A 00              7068 	ld	hl, #0x000a
      001E8F 19                    7069 	add	hl, de
      001E90 4D                    7070 	ld	c, l
      001E91 44                    7071 	ld	b, h
      001E92 AF                    7072 	xor	a, a
      001E93 02                    7073 	ld	(bc), a
                                   7074 ;src/main.c:739: initEnemies(0);
      001E94 AF                    7075 	xor	a, a
      001E95 F5                    7076 	push	af
      001E96 33                    7077 	inc	sp
      001E97 CDr04r0C              7078 	call	_initEnemies
      001E9A 33                    7079 	inc	sp
                                   7080 ;src/main.c:740: set_sprite_tile(30+j, 0x7f);
      001E9B F8 0E                 7081 	ldhl	sp,	#14
      001E9D 7E                    7082 	ld	a, (hl)
      001E9E C6 1E                 7083 	add	a, #0x1e
      001EA0 4F                    7084 	ld	c, a
                                   7085 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001EA1 26 00                 7086 	ld	h, #0x00
                                   7087 ;	spillPairReg hl
                                   7088 ;	spillPairReg hl
      001EA3 69                    7089 	ld	l, c
      001EA4 29                    7090 	add	hl, hl
      001EA5 29                    7091 	add	hl, hl
      001EA6 11r00r00              7092 	ld	de, #_shadow_OAM
      001EA9 19                    7093 	add	hl, de
      001EAA 23                    7094 	inc	hl
      001EAB 23                    7095 	inc	hl
      001EAC 36 7F                 7096 	ld	(hl), #0x7f
                                   7097 ;src/main.c:741: playSound(0);
      001EAE AF                    7098 	xor	a, a
      001EAF F5                    7099 	push	af
      001EB0 33                    7100 	inc	sp
      001EB1 CDrA1r0B              7101 	call	_playSound
      001EB4 33                    7102 	inc	sp
                                   7103 ;src/main.c:742: pptr->active = 0;
      001EB5 F8 0C                 7104 	ldhl	sp,#12
      001EB7 2A                    7105 	ld	a, (hl+)
      001EB8 5F                    7106 	ld	e, a
      001EB9 56                    7107 	ld	d, (hl)
      001EBA 21 09 00              7108 	ld	hl, #0x0009
      001EBD 19                    7109 	add	hl, de
      001EBE 4D                    7110 	ld	c, l
      001EBF 44                    7111 	ld	b, h
      001EC0 AF                    7112 	xor	a, a
      001EC1 02                    7113 	ld	(bc), a
                                   7114 ;src/main.c:743: incrementScore();
      001EC2 CDr5Er09              7115 	call	_incrementScore
                                   7116 ;src/main.c:744: updateScore();
      001EC5 CDr34r09              7117 	call	_updateScore
      001EC8                       7118 00122$:
                                   7119 ;src/main.c:749: j++;
      001EC8 F8 0E                 7120 	ldhl	sp,	#14
      001ECA 34                    7121 	inc	(hl)
                                   7122 ;src/main.c:750: pptr++;
      001ECB 2B                    7123 	dec	hl
      001ECC 2B                    7124 	dec	hl
      001ECD 2A                    7125 	ld	a, (hl+)
      001ECE 5F                    7126 	ld	e, a
      001ECF 56                    7127 	ld	d, (hl)
      001ED0 21 0C 00              7128 	ld	hl, #0x000c
      001ED3 19                    7129 	add	hl, de
      001ED4 E5                    7130 	push	hl
      001ED5 7D                    7131 	ld	a, l
      001ED6 F8 0E                 7132 	ldhl	sp,	#14
      001ED8 77                    7133 	ld	(hl), a
      001ED9 E1                    7134 	pop	hl
      001EDA 7C                    7135 	ld	a, h
      001EDB F8 0D                 7136 	ldhl	sp,	#13
      001EDD 77                    7137 	ld	(hl), a
      001EDE C3r52r1D              7138 	jp	00123$
      001EE1                       7139 00127$:
                                   7140 ;src/main.c:754: if (enemyCollisionCount == 0) {
      001EE1 FAr98r00              7141 	ld	a, (#_enemyCollisionCount)
      001EE4 B7                    7142 	or	a, a
      001EE5 20 09                 7143 	jr	NZ, 00130$
                                   7144 ;src/main.c:755: enemyCollisionCount = ENEMYCOUNT - 1;
      001EE7 FAr0Dr08              7145 	ld	a, (#_ENEMYCOUNT)
      001EEA 3D                    7146 	dec	a
      001EEB EAr98r00              7147 	ld	(#_enemyCollisionCount),a
      001EEE 18 04                 7148 	jr	00169$
      001EF0                       7149 00130$:
                                   7150 ;src/main.c:758: enemyCollisionCount--;
      001EF0 21r98r00              7151 	ld	hl, #_enemyCollisionCount
      001EF3 35                    7152 	dec	(hl)
      001EF4                       7153 00169$:
                                   7154 ;src/main.c:763: }
      001EF4 E8 0F                 7155 	add	sp, #15
      001EF6 C9                    7156 	ret
                                   7157 ;src/main.c:766: void setGunIcon() {
                                   7158 ;	---------------------------------
                                   7159 ; Function setGunIcon
                                   7160 ; ---------------------------------
      001EF7                       7161 _setGunIcon::
                                   7162 ;src/main.c:769: set_win_tiles(15, 0,1,1,gunMap+currentGun);
      001EF7 01r9Br00              7163 	ld	bc, #_gunMap+0
      001EFA 79                    7164 	ld	a, c
      001EFB 21r99r00              7165 	ld	hl, #_currentGun
      001EFE 86                    7166 	add	a, (hl)
      001EFF 4F                    7167 	ld	c, a
      001F00 30 01                 7168 	jr	NC, 00103$
      001F02 04                    7169 	inc	b
      001F03                       7170 00103$:
      001F03 C5                    7171 	push	bc
      001F04 21 01 01              7172 	ld	hl, #0x101
      001F07 E5                    7173 	push	hl
      001F08 21 0F 00              7174 	ld	hl, #0x0f
      001F0B E5                    7175 	push	hl
      001F0C CDr00r00              7176 	call	_set_win_tiles
      001F0F E8 06                 7177 	add	sp, #6
                                   7178 ;src/main.c:771: }
      001F11 C9                    7179 	ret
                                   7180 ;src/main.c:781: void fire() {
                                   7181 ;	---------------------------------
                                   7182 ; Function fire
                                   7183 ; ---------------------------------
      001F12                       7184 _fire::
      001F12 E8 FA                 7185 	add	sp, #-6
                                   7186 ;src/main.c:783: oldestProjectile += 1;
      001F14 21r84r00              7187 	ld	hl, #_oldestProjectile
      001F17 34                    7188 	inc	(hl)
      001F18 7E                    7189 	ld	a, (hl)
                                   7190 ;src/main.c:784: if (oldestProjectile >= PROJECTILECOUNT) {
      001F19 21r1Er08              7191 	ld	hl, #_PROJECTILECOUNT
      001F1C 4E                    7192 	ld	c, (hl)
      001F1D 21r84r00              7193 	ld	hl, #_oldestProjectile
      001F20 7E                    7194 	ld	a, (hl)
      001F21 91                    7195 	sub	a, c
      001F22 38 02                 7196 	jr	C, 00102$
                                   7197 ;src/main.c:785: oldestProjectile = 0;
      001F24 36 00                 7198 	ld	(hl), #0x00
      001F26                       7199 00102$:
                                   7200 ;src/main.c:788: if (currentGun == 0) {
      001F26 FAr99r00              7201 	ld	a, (#_currentGun)
      001F29 B7                    7202 	or	a, a
      001F2A 20 1E                 7203 	jr	NZ, 00104$
                                   7204 ;src/main.c:789: projectiles[oldestProjectile] = singleGun;
      001F2C 21r84r00              7205 	ld	hl, #_oldestProjectile
      001F2F 4E                    7206 	ld	c, (hl)
      001F30 06 00                 7207 	ld	b, #0x00
      001F32 69                    7208 	ld	l, c
      001F33 60                    7209 	ld	h, b
      001F34 29                    7210 	add	hl, hl
      001F35 09                    7211 	add	hl, bc
      001F36 29                    7212 	add	hl, hl
      001F37 29                    7213 	add	hl, hl
      001F38 01rA0r00              7214 	ld	bc,#_projectiles
      001F3B 09                    7215 	add	hl,bc
      001F3C 11 0C 00              7216 	ld	de, #0x000c
      001F3F D5                    7217 	push	de
      001F40 11r60r00              7218 	ld	de, #_singleGun
      001F43 D5                    7219 	push	de
      001F44 E5                    7220 	push	hl
      001F45 CDr00r00              7221 	call	___memcpy
      001F48 E8 06                 7222 	add	sp, #6
      001F4A                       7223 00104$:
                                   7224 ;src/main.c:791: if (currentGun == 1) {
      001F4A FAr99r00              7225 	ld	a, (#_currentGun)
      001F4D 3D                    7226 	dec	a
      001F4E 20 1E                 7227 	jr	NZ, 00106$
                                   7228 ;src/main.c:792: projectiles[oldestProjectile] = doubleGun;
      001F50 21r84r00              7229 	ld	hl, #_oldestProjectile
      001F53 4E                    7230 	ld	c, (hl)
      001F54 06 00                 7231 	ld	b, #0x00
      001F56 69                    7232 	ld	l, c
      001F57 60                    7233 	ld	h, b
      001F58 29                    7234 	add	hl, hl
      001F59 09                    7235 	add	hl, bc
      001F5A 29                    7236 	add	hl, hl
      001F5B 29                    7237 	add	hl, hl
      001F5C 01rA0r00              7238 	ld	bc,#_projectiles
      001F5F 09                    7239 	add	hl,bc
      001F60 11 0C 00              7240 	ld	de, #0x000c
      001F63 D5                    7241 	push	de
      001F64 11r6Cr00              7242 	ld	de, #_doubleGun
      001F67 D5                    7243 	push	de
      001F68 E5                    7244 	push	hl
      001F69 CDr00r00              7245 	call	___memcpy
      001F6C E8 06                 7246 	add	sp, #6
      001F6E                       7247 00106$:
                                   7248 ;src/main.c:794: if (currentGun == 2) {
      001F6E FAr99r00              7249 	ld	a, (#_currentGun)
      001F71 D6 02                 7250 	sub	a, #0x02
      001F73 20 1E                 7251 	jr	NZ, 00108$
                                   7252 ;src/main.c:795: projectiles[oldestProjectile] = missile;
      001F75 21r84r00              7253 	ld	hl, #_oldestProjectile
      001F78 4E                    7254 	ld	c, (hl)
      001F79 06 00                 7255 	ld	b, #0x00
      001F7B 69                    7256 	ld	l, c
      001F7C 60                    7257 	ld	h, b
      001F7D 29                    7258 	add	hl, hl
      001F7E 09                    7259 	add	hl, bc
      001F7F 29                    7260 	add	hl, hl
      001F80 29                    7261 	add	hl, hl
      001F81 01rA0r00              7262 	ld	bc,#_projectiles
      001F84 09                    7263 	add	hl,bc
      001F85 11 0C 00              7264 	ld	de, #0x000c
      001F88 D5                    7265 	push	de
      001F89 11r78r00              7266 	ld	de, #_missile
      001F8C D5                    7267 	push	de
      001F8D E5                    7268 	push	hl
      001F8E CDr00r00              7269 	call	___memcpy
      001F91 E8 06                 7270 	add	sp, #6
      001F93                       7271 00108$:
                                   7272 ;src/main.c:797: projectiles[oldestProjectile].x = playerDrawX;
      001F93 21r84r00              7273 	ld	hl, #_oldestProjectile
      001F96 4E                    7274 	ld	c, (hl)
      001F97 06 00                 7275 	ld	b, #0x00
      001F99 69                    7276 	ld	l, c
      001F9A 60                    7277 	ld	h, b
      001F9B 29                    7278 	add	hl, hl
      001F9C 09                    7279 	add	hl, bc
      001F9D 29                    7280 	add	hl, hl
      001F9E 29                    7281 	add	hl, hl
      001F9F 01rA0r00              7282 	ld	bc,#_projectiles
      001FA2 09                    7283 	add	hl,bc
      001FA3 E5                    7284 	push	hl
      001FA4 FAr8Er00              7285 	ld	a, (#_playerDrawX)
      001FA7 E1                    7286 	pop	hl
      001FA8 0E 00                 7287 	ld	c, #0x00
      001FAA 22                    7288 	ld	(hl+), a
      001FAB 71                    7289 	ld	(hl), c
                                   7290 ;src/main.c:798: projectiles[oldestProjectile].y = playerDrawY;
      001FAC 21r84r00              7291 	ld	hl, #_oldestProjectile
      001FAF 4E                    7292 	ld	c, (hl)
      001FB0 06 00                 7293 	ld	b, #0x00
      001FB2 69                    7294 	ld	l, c
      001FB3 60                    7295 	ld	h, b
      001FB4 29                    7296 	add	hl, hl
      001FB5 09                    7297 	add	hl, bc
      001FB6 29                    7298 	add	hl, hl
      001FB7 29                    7299 	add	hl, hl
      001FB8 01rA0r00              7300 	ld	bc,#_projectiles
      001FBB 09                    7301 	add	hl,bc
      001FBC 23                    7302 	inc	hl
      001FBD 23                    7303 	inc	hl
      001FBE E5                    7304 	push	hl
      001FBF FAr8Fr00              7305 	ld	a, (#_playerDrawY)
      001FC2 E1                    7306 	pop	hl
      001FC3 0E 00                 7307 	ld	c, #0x00
      001FC5 22                    7308 	ld	(hl+), a
      001FC6 71                    7309 	ld	(hl), c
                                   7310 ;src/main.c:799: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      001FC7 21r84r00              7311 	ld	hl, #_oldestProjectile
      001FCA 4E                    7312 	ld	c, (hl)
      001FCB 06 00                 7313 	ld	b, #0x00
      001FCD 69                    7314 	ld	l, c
      001FCE 60                    7315 	ld	h, b
      001FCF 29                    7316 	add	hl, hl
      001FD0 09                    7317 	add	hl, bc
      001FD1 29                    7318 	add	hl, hl
      001FD2 29                    7319 	add	hl, hl
      001FD3 01rA0r00              7320 	ld	bc,#_projectiles
      001FD6 09                    7321 	add	hl,bc
      001FD7 5D                    7322 	ld	e, l
      001FD8 54                    7323 	ld	d, h
      001FD9 21 05 00              7324 	ld	hl, #0x0005
      001FDC 19                    7325 	add	hl, de
      001FDD 4D                    7326 	ld	c, l
      001FDE 44                    7327 	ld	b, h
      001FDF 21 07 00              7328 	ld	hl, #0x0007
      001FE2 19                    7329 	add	hl, de
      001FE3 7E                    7330 	ld	a, (hl)
      001FE4 C5                    7331 	push	bc
      001FE5 F5                    7332 	push	af
      001FE6 33                    7333 	inc	sp
      001FE7 FAr86r00              7334 	ld	a, (#_xDir)
      001FEA F5                    7335 	push	af
      001FEB 33                    7336 	inc	sp
      001FEC CDr00r00              7337 	call	__muluschar
      001FEF E1                    7338 	pop	hl
      001FF0 7B                    7339 	ld	a, e
      001FF1 C1                    7340 	pop	bc
      001FF2 02                    7341 	ld	(bc), a
                                   7342 ;src/main.c:800: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      001FF3 21r84r00              7343 	ld	hl, #_oldestProjectile
      001FF6 4E                    7344 	ld	c, (hl)
      001FF7 06 00                 7345 	ld	b, #0x00
      001FF9 69                    7346 	ld	l, c
      001FFA 60                    7347 	ld	h, b
      001FFB 29                    7348 	add	hl, hl
      001FFC 09                    7349 	add	hl, bc
      001FFD 29                    7350 	add	hl, hl
      001FFE 29                    7351 	add	hl, hl
      001FFF 01rA0r00              7352 	ld	bc,#_projectiles
      002002 09                    7353 	add	hl,bc
      002003 5D                    7354 	ld	e, l
      002004 54                    7355 	ld	d, h
      002005 21 06 00              7356 	ld	hl, #0x0006
      002008 19                    7357 	add	hl, de
      002009 4D                    7358 	ld	c, l
      00200A 44                    7359 	ld	b, h
      00200B 21 07 00              7360 	ld	hl, #0x0007
      00200E 19                    7361 	add	hl, de
      00200F 7E                    7362 	ld	a, (hl)
      002010 C5                    7363 	push	bc
      002011 F5                    7364 	push	af
      002012 33                    7365 	inc	sp
      002013 FAr87r00              7366 	ld	a, (#_yDir)
      002016 F5                    7367 	push	af
      002017 33                    7368 	inc	sp
      002018 CDr00r00              7369 	call	__muluschar
      00201B E1                    7370 	pop	hl
      00201C 7B                    7371 	ld	a, e
      00201D C1                    7372 	pop	bc
      00201E 02                    7373 	ld	(bc), a
                                   7374 ;src/main.c:783: oldestProjectile += 1;
      00201F FAr84r00              7375 	ld	a, (#_oldestProjectile)
      002022 F8 05                 7376 	ldhl	sp,	#5
      002024 77                    7377 	ld	(hl), a
                                   7378 ;src/main.c:789: projectiles[oldestProjectile] = singleGun;
      002025 21r84r00              7379 	ld	hl, #_oldestProjectile
      002028 4E                    7380 	ld	c, (hl)
      002029 06 00                 7381 	ld	b, #0x00
      00202B 69                    7382 	ld	l, c
      00202C 60                    7383 	ld	h, b
      00202D 29                    7384 	add	hl, hl
      00202E 09                    7385 	add	hl, bc
      00202F 29                    7386 	add	hl, hl
      002030 29                    7387 	add	hl, hl
                                   7388 ;src/main.c:805: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002031 01rA0r00              7389 	ld	bc,#_projectiles
      002034 09                    7390 	add	hl,bc
      002035 4D                    7391 	ld	c, l
      002036 44                    7392 	ld	b, h
      002037 F8 05                 7393 	ldhl	sp,	#5
      002039 7E                    7394 	ld	a, (hl)
      00203A C6 1E                 7395 	add	a, #0x1e
      00203C 77                    7396 	ld	(hl), a
      00203D 21 0B 00              7397 	ld	hl, #0x000b
      002040 09                    7398 	add	hl, bc
      002041 7E                    7399 	ld	a, (hl)
      002042 F8 04                 7400 	ldhl	sp,	#4
      002044 77                    7401 	ld	(hl), a
                                   7402 ;src/main.c:804: if (yDir != 0 && xDir == 0) {
      002045 FAr87r00              7403 	ld	a, (#_yDir)
      002048 B7                    7404 	or	a, a
      002049 CAr89r21              7405 	jp	Z, 00135$
      00204C FAr86r00              7406 	ld	a, (#_xDir)
      00204F B7                    7407 	or	a, a
      002050 C2r89r21              7408 	jp	NZ, 00135$
                                   7409 ;src/main.c:805: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
                                   7410 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002053 F8 05                 7411 	ldhl	sp,	#5
      002055 7E                    7412 	ld	a, (hl)
      002056 F8 02                 7413 	ldhl	sp,	#2
      002058 22                    7414 	ld	(hl+), a
      002059 36 00                 7415 	ld	(hl), #0x00
      00205B 3E 02                 7416 	ld	a, #0x02
      00205D                       7417 00245$:
      00205D F8 02                 7418 	ldhl	sp,	#2
      00205F CB 26                 7419 	sla	(hl)
      002061 23                    7420 	inc	hl
      002062 CB 16                 7421 	rl	(hl)
      002064 3D                    7422 	dec	a
      002065 20 F6                 7423 	jr	NZ, 00245$
      002067 2B                    7424 	dec	hl
      002068 2A                    7425 	ld	a, (hl+)
      002069 5F                    7426 	ld	e, a
      00206A 56                    7427 	ld	d, (hl)
      00206B 21r00r00              7428 	ld	hl, #_shadow_OAM
      00206E 19                    7429 	add	hl, de
      00206F 33                    7430 	inc	sp
      002070 33                    7431 	inc	sp
      002071 5D                    7432 	ld	e, l
      002072 54                    7433 	ld	d, h
      002073 D5                    7434 	push	de
      002074 21 02 00              7435 	ld	hl, #0x0002
      002077 19                    7436 	add	hl, de
      002078 E5                    7437 	push	hl
      002079 7D                    7438 	ld	a, l
      00207A F8 04                 7439 	ldhl	sp,	#4
      00207C 77                    7440 	ld	(hl), a
      00207D E1                    7441 	pop	hl
      00207E 7C                    7442 	ld	a, h
      00207F F8 03                 7443 	ldhl	sp,	#3
      002081 32                    7444 	ld	(hl-), a
      002082 2A                    7445 	ld	a, (hl+)
      002083 5F                    7446 	ld	e, a
      002084 2A                    7447 	ld	a, (hl+)
      002085 57                    7448 	ld	d, a
      002086 7E                    7449 	ld	a, (hl)
      002087 12                    7450 	ld	(de), a
                                   7451 ;src/main.c:783: oldestProjectile += 1;
      002088 FAr84r00              7452 	ld	a, (#_oldestProjectile)
                                   7453 ;src/main.c:805: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00208B C6 1E                 7454 	add	a, #0x1e
      00208D F8 05                 7455 	ldhl	sp,	#5
      00208F 77                    7456 	ld	(hl), a
                                   7457 ;src/main.c:806: if (yDir == 1) {
      002090 FAr87r00              7458 	ld	a, (#_yDir)
      002093 3D                    7459 	dec	a
      002094 20 7A                 7460 	jr	NZ, 00110$
                                   7461 ;src/main.c:807: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   7462 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002096 F8 05                 7463 	ldhl	sp,	#5
      002098 3A                    7464 	ld	a, (hl-)
      002099 22                    7465 	ld	(hl+), a
      00209A 36 00                 7466 	ld	(hl), #0x00
      00209C 3E 02                 7467 	ld	a, #0x02
      00209E                       7468 00248$:
      00209E F8 04                 7469 	ldhl	sp,	#4
      0020A0 CB 26                 7470 	sla	(hl)
      0020A2 23                    7471 	inc	hl
      0020A3 CB 16                 7472 	rl	(hl)
      0020A5 3D                    7473 	dec	a
      0020A6 20 F6                 7474 	jr	NZ, 00248$
      0020A8 2B                    7475 	dec	hl
      0020A9 2A                    7476 	ld	a, (hl+)
      0020AA 5F                    7477 	ld	e, a
      0020AB 56                    7478 	ld	d, (hl)
      0020AC 21r00r00              7479 	ld	hl, #_shadow_OAM
      0020AF 19                    7480 	add	hl, de
      0020B0 E5                    7481 	push	hl
      0020B1 7D                    7482 	ld	a, l
      0020B2 F8 04                 7483 	ldhl	sp,	#4
      0020B4 77                    7484 	ld	(hl), a
      0020B5 E1                    7485 	pop	hl
      0020B6 7C                    7486 	ld	a, h
      0020B7 F8 03                 7487 	ldhl	sp,	#3
      0020B9 32                    7488 	ld	(hl-), a
      0020BA 2A                    7489 	ld	a, (hl+)
      0020BB 5F                    7490 	ld	e, a
      0020BC 56                    7491 	ld	d, (hl)
      0020BD 21 03 00              7492 	ld	hl, #0x0003
      0020C0 19                    7493 	add	hl, de
      0020C1 E5                    7494 	push	hl
      0020C2 7D                    7495 	ld	a, l
      0020C3 F8 06                 7496 	ldhl	sp,	#6
      0020C5 77                    7497 	ld	(hl), a
      0020C6 E1                    7498 	pop	hl
      0020C7 7C                    7499 	ld	a, h
      0020C8 F8 05                 7500 	ldhl	sp,	#5
      0020CA 32                    7501 	ld	(hl-), a
      0020CB 2A                    7502 	ld	a,	(hl+)
      0020CC 66                    7503 	ld	h, (hl)
      0020CD 6F                    7504 	ld	l, a
      0020CE 36 40                 7505 	ld	(hl), #0x40
                                   7506 ;src/main.c:808: projectiles[oldestProjectile].offset = 4;
      0020D0 21r84r00              7507 	ld	hl, #_oldestProjectile
      0020D3 4E                    7508 	ld	c, (hl)
      0020D4 06 00                 7509 	ld	b, #0x00
      0020D6 69                    7510 	ld	l, c
      0020D7 60                    7511 	ld	h, b
      0020D8 29                    7512 	add	hl, hl
      0020D9 09                    7513 	add	hl, bc
      0020DA 29                    7514 	add	hl, hl
      0020DB 29                    7515 	add	hl, hl
      0020DC E5                    7516 	push	hl
      0020DD 7D                    7517 	ld	a, l
      0020DE F8 06                 7518 	ldhl	sp,	#6
      0020E0 77                    7519 	ld	(hl), a
      0020E1 E1                    7520 	pop	hl
      0020E2 7C                    7521 	ld	a, h
      0020E3 F8 05                 7522 	ldhl	sp,	#5
      0020E5 32                    7523 	ld	(hl-), a
      0020E6 2A                    7524 	ld	a, (hl+)
      0020E7 5F                    7525 	ld	e, a
      0020E8 56                    7526 	ld	d, (hl)
      0020E9 21rA0r00              7527 	ld	hl, #_projectiles
      0020EC 19                    7528 	add	hl, de
      0020ED E5                    7529 	push	hl
      0020EE 7D                    7530 	ld	a, l
      0020EF F8 04                 7531 	ldhl	sp,	#4
      0020F1 77                    7532 	ld	(hl), a
      0020F2 E1                    7533 	pop	hl
      0020F3 7C                    7534 	ld	a, h
      0020F4 F8 03                 7535 	ldhl	sp,	#3
      0020F6 32                    7536 	ld	(hl-), a
      0020F7 2A                    7537 	ld	a, (hl+)
      0020F8 5F                    7538 	ld	e, a
      0020F9 56                    7539 	ld	d, (hl)
      0020FA 21 04 00              7540 	ld	hl, #0x0004
      0020FD 19                    7541 	add	hl, de
      0020FE E5                    7542 	push	hl
      0020FF 7D                    7543 	ld	a, l
      002100 F8 06                 7544 	ldhl	sp,	#6
      002102 77                    7545 	ld	(hl), a
      002103 E1                    7546 	pop	hl
      002104 7C                    7547 	ld	a, h
      002105 F8 05                 7548 	ldhl	sp,	#5
      002107 32                    7549 	ld	(hl-), a
      002108 2A                    7550 	ld	a,	(hl+)
      002109 66                    7551 	ld	h, (hl)
      00210A 6F                    7552 	ld	l, a
      00210B 36 04                 7553 	ld	(hl), #0x04
      00210D C3rBAr24              7554 	jp	00136$
      002110                       7555 00110$:
                                   7556 ;src/main.c:811: set_sprite_prop(30+oldestProjectile, 0); 
                                   7557 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002110 F8 05                 7558 	ldhl	sp,	#5
      002112 3A                    7559 	ld	a, (hl-)
      002113 22                    7560 	ld	(hl+), a
      002114 36 00                 7561 	ld	(hl), #0x00
      002116 3E 02                 7562 	ld	a, #0x02
      002118                       7563 00249$:
      002118 F8 04                 7564 	ldhl	sp,	#4
      00211A CB 26                 7565 	sla	(hl)
      00211C 23                    7566 	inc	hl
      00211D CB 16                 7567 	rl	(hl)
      00211F 3D                    7568 	dec	a
      002120 20 F6                 7569 	jr	NZ, 00249$
      002122 11r00r00              7570 	ld	de, #_shadow_OAM
      002125 3A                    7571 	ld	a, (hl-)
      002126 6E                    7572 	ld	l, (hl)
      002127 67                    7573 	ld	h, a
      002128 19                    7574 	add	hl, de
      002129 E5                    7575 	push	hl
      00212A 7D                    7576 	ld	a, l
      00212B F8 04                 7577 	ldhl	sp,	#4
      00212D 77                    7578 	ld	(hl), a
      00212E E1                    7579 	pop	hl
      00212F 7C                    7580 	ld	a, h
      002130 F8 03                 7581 	ldhl	sp,	#3
      002132 32                    7582 	ld	(hl-), a
      002133 2A                    7583 	ld	a, (hl+)
      002134 5F                    7584 	ld	e, a
      002135 56                    7585 	ld	d, (hl)
      002136 21 03 00              7586 	ld	hl, #0x0003
      002139 19                    7587 	add	hl, de
      00213A E5                    7588 	push	hl
      00213B 7D                    7589 	ld	a, l
      00213C F8 06                 7590 	ldhl	sp,	#6
      00213E 77                    7591 	ld	(hl), a
      00213F E1                    7592 	pop	hl
      002140 7C                    7593 	ld	a, h
      002141 F8 05                 7594 	ldhl	sp,	#5
      002143 32                    7595 	ld	(hl-), a
      002144 2A                    7596 	ld	a,	(hl+)
      002145 66                    7597 	ld	h, (hl)
      002146 6F                    7598 	ld	l, a
      002147 36 00                 7599 	ld	(hl), #0x00
                                   7600 ;src/main.c:812: projectiles[oldestProjectile].offset = 12;
      002149 21r84r00              7601 	ld	hl, #_oldestProjectile
      00214C 4E                    7602 	ld	c, (hl)
      00214D 06 00                 7603 	ld	b, #0x00
      00214F 69                    7604 	ld	l, c
      002150 60                    7605 	ld	h, b
      002151 29                    7606 	add	hl, hl
      002152 09                    7607 	add	hl, bc
      002153 29                    7608 	add	hl, hl
      002154 29                    7609 	add	hl, hl
      002155 E5                    7610 	push	hl
      002156 7D                    7611 	ld	a, l
      002157 F8 06                 7612 	ldhl	sp,	#6
      002159 77                    7613 	ld	(hl), a
      00215A E1                    7614 	pop	hl
      00215B 7C                    7615 	ld	a, h
      00215C F8 05                 7616 	ldhl	sp,	#5
      00215E 32                    7617 	ld	(hl-), a
      00215F 2A                    7618 	ld	a, (hl+)
      002160 5F                    7619 	ld	e, a
      002161 56                    7620 	ld	d, (hl)
      002162 21rA0r00              7621 	ld	hl, #_projectiles
      002165 19                    7622 	add	hl, de
      002166 E5                    7623 	push	hl
      002167 7D                    7624 	ld	a, l
      002168 F8 04                 7625 	ldhl	sp,	#4
      00216A 77                    7626 	ld	(hl), a
      00216B E1                    7627 	pop	hl
      00216C 7C                    7628 	ld	a, h
      00216D F8 03                 7629 	ldhl	sp,	#3
      00216F 32                    7630 	ld	(hl-), a
      002170 2A                    7631 	ld	a, (hl+)
      002171 5F                    7632 	ld	e, a
      002172 56                    7633 	ld	d, (hl)
      002173 21 04 00              7634 	ld	hl, #0x0004
      002176 19                    7635 	add	hl, de
      002177 E5                    7636 	push	hl
      002178 7D                    7637 	ld	a, l
      002179 F8 06                 7638 	ldhl	sp,	#6
      00217B 77                    7639 	ld	(hl), a
      00217C E1                    7640 	pop	hl
      00217D 7C                    7641 	ld	a, h
      00217E F8 05                 7642 	ldhl	sp,	#5
      002180 32                    7643 	ld	(hl-), a
      002181 2A                    7644 	ld	a,	(hl+)
      002182 66                    7645 	ld	h, (hl)
      002183 6F                    7646 	ld	l, a
      002184 36 0C                 7647 	ld	(hl), #0x0c
      002186 C3rBAr24              7648 	jp	00136$
      002189                       7649 00135$:
                                   7650 ;src/main.c:816: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   7651 ;src/main.c:815: else if (xDir != 0 && yDir == 0) {
      002189 FAr86r00              7652 	ld	a, (#_xDir)
      00218C B7                    7653 	or	a, a
      00218D CArD1r22              7654 	jp	Z, 00131$
      002190 FAr87r00              7655 	ld	a, (#_yDir)
      002193 B7                    7656 	or	a, a
      002194 C2rD1r22              7657 	jp	NZ, 00131$
                                   7658 ;src/main.c:816: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      002197 F8 04                 7659 	ldhl	sp,	#4
      002199 34                    7660 	inc	(hl)
      00219A 34                    7661 	inc	(hl)
                                   7662 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00219B 23                    7663 	inc	hl
      00219C 7E                    7664 	ld	a, (hl)
      00219D F8 02                 7665 	ldhl	sp,	#2
      00219F 22                    7666 	ld	(hl+), a
      0021A0 36 00                 7667 	ld	(hl), #0x00
      0021A2 3E 02                 7668 	ld	a, #0x02
      0021A4                       7669 00250$:
      0021A4 F8 02                 7670 	ldhl	sp,	#2
      0021A6 CB 26                 7671 	sla	(hl)
      0021A8 23                    7672 	inc	hl
      0021A9 CB 16                 7673 	rl	(hl)
      0021AB 3D                    7674 	dec	a
      0021AC 20 F6                 7675 	jr	NZ, 00250$
      0021AE 2B                    7676 	dec	hl
      0021AF 2A                    7677 	ld	a, (hl+)
      0021B0 5F                    7678 	ld	e, a
      0021B1 56                    7679 	ld	d, (hl)
      0021B2 21r00r00              7680 	ld	hl, #_shadow_OAM
      0021B5 19                    7681 	add	hl, de
      0021B6 33                    7682 	inc	sp
      0021B7 33                    7683 	inc	sp
      0021B8 5D                    7684 	ld	e, l
      0021B9 54                    7685 	ld	d, h
      0021BA D5                    7686 	push	de
      0021BB 21 02 00              7687 	ld	hl, #0x0002
      0021BE 19                    7688 	add	hl, de
      0021BF E5                    7689 	push	hl
      0021C0 7D                    7690 	ld	a, l
      0021C1 F8 04                 7691 	ldhl	sp,	#4
      0021C3 77                    7692 	ld	(hl), a
      0021C4 E1                    7693 	pop	hl
      0021C5 7C                    7694 	ld	a, h
      0021C6 F8 03                 7695 	ldhl	sp,	#3
      0021C8 32                    7696 	ld	(hl-), a
      0021C9 2A                    7697 	ld	a, (hl+)
      0021CA 5F                    7698 	ld	e, a
      0021CB 2A                    7699 	ld	a, (hl+)
      0021CC 57                    7700 	ld	d, a
      0021CD 7E                    7701 	ld	a, (hl)
      0021CE 12                    7702 	ld	(de), a
                                   7703 ;src/main.c:783: oldestProjectile += 1;
      0021CF FAr84r00              7704 	ld	a, (#_oldestProjectile)
                                   7705 ;src/main.c:805: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0021D2 C6 1E                 7706 	add	a, #0x1e
      0021D4 F8 05                 7707 	ldhl	sp,	#5
      0021D6 77                    7708 	ld	(hl), a
                                   7709 ;src/main.c:817: if (xDir == 1) {
      0021D7 FAr86r00              7710 	ld	a, (#_xDir)
      0021DA 3D                    7711 	dec	a
      0021DB 20 7A                 7712 	jr	NZ, 00113$
                                   7713 ;src/main.c:818: set_sprite_prop(30+oldestProjectile, 0);
                                   7714 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0021DD F8 05                 7715 	ldhl	sp,	#5
      0021DF 3A                    7716 	ld	a, (hl-)
      0021E0 22                    7717 	ld	(hl+), a
      0021E1 36 00                 7718 	ld	(hl), #0x00
      0021E3 3E 02                 7719 	ld	a, #0x02
      0021E5                       7720 00253$:
      0021E5 F8 04                 7721 	ldhl	sp,	#4
      0021E7 CB 26                 7722 	sla	(hl)
      0021E9 23                    7723 	inc	hl
      0021EA CB 16                 7724 	rl	(hl)
      0021EC 3D                    7725 	dec	a
      0021ED 20 F6                 7726 	jr	NZ, 00253$
      0021EF 2B                    7727 	dec	hl
      0021F0 2A                    7728 	ld	a, (hl+)
      0021F1 5F                    7729 	ld	e, a
      0021F2 56                    7730 	ld	d, (hl)
      0021F3 21r00r00              7731 	ld	hl, #_shadow_OAM
      0021F6 19                    7732 	add	hl, de
      0021F7 E5                    7733 	push	hl
      0021F8 7D                    7734 	ld	a, l
      0021F9 F8 04                 7735 	ldhl	sp,	#4
      0021FB 77                    7736 	ld	(hl), a
      0021FC E1                    7737 	pop	hl
      0021FD 7C                    7738 	ld	a, h
      0021FE F8 03                 7739 	ldhl	sp,	#3
      002200 32                    7740 	ld	(hl-), a
      002201 2A                    7741 	ld	a, (hl+)
      002202 5F                    7742 	ld	e, a
      002203 56                    7743 	ld	d, (hl)
      002204 21 03 00              7744 	ld	hl, #0x0003
      002207 19                    7745 	add	hl, de
      002208 E5                    7746 	push	hl
      002209 7D                    7747 	ld	a, l
      00220A F8 06                 7748 	ldhl	sp,	#6
      00220C 77                    7749 	ld	(hl), a
      00220D E1                    7750 	pop	hl
      00220E 7C                    7751 	ld	a, h
      00220F F8 05                 7752 	ldhl	sp,	#5
      002211 32                    7753 	ld	(hl-), a
      002212 2A                    7754 	ld	a,	(hl+)
      002213 66                    7755 	ld	h, (hl)
      002214 6F                    7756 	ld	l, a
      002215 36 00                 7757 	ld	(hl), #0x00
                                   7758 ;src/main.c:819: projectiles[oldestProjectile].offset = 12;
      002217 21r84r00              7759 	ld	hl, #_oldestProjectile
      00221A 4E                    7760 	ld	c, (hl)
      00221B 06 00                 7761 	ld	b, #0x00
      00221D 69                    7762 	ld	l, c
      00221E 60                    7763 	ld	h, b
      00221F 29                    7764 	add	hl, hl
      002220 09                    7765 	add	hl, bc
      002221 29                    7766 	add	hl, hl
      002222 29                    7767 	add	hl, hl
      002223 E5                    7768 	push	hl
      002224 7D                    7769 	ld	a, l
      002225 F8 06                 7770 	ldhl	sp,	#6
      002227 77                    7771 	ld	(hl), a
      002228 E1                    7772 	pop	hl
      002229 7C                    7773 	ld	a, h
      00222A F8 05                 7774 	ldhl	sp,	#5
      00222C 32                    7775 	ld	(hl-), a
      00222D 2A                    7776 	ld	a, (hl+)
      00222E 5F                    7777 	ld	e, a
      00222F 56                    7778 	ld	d, (hl)
      002230 21rA0r00              7779 	ld	hl, #_projectiles
      002233 19                    7780 	add	hl, de
      002234 E5                    7781 	push	hl
      002235 7D                    7782 	ld	a, l
      002236 F8 04                 7783 	ldhl	sp,	#4
      002238 77                    7784 	ld	(hl), a
      002239 E1                    7785 	pop	hl
      00223A 7C                    7786 	ld	a, h
      00223B F8 03                 7787 	ldhl	sp,	#3
      00223D 32                    7788 	ld	(hl-), a
      00223E 2A                    7789 	ld	a, (hl+)
      00223F 5F                    7790 	ld	e, a
      002240 56                    7791 	ld	d, (hl)
      002241 21 04 00              7792 	ld	hl, #0x0004
      002244 19                    7793 	add	hl, de
      002245 E5                    7794 	push	hl
      002246 7D                    7795 	ld	a, l
      002247 F8 06                 7796 	ldhl	sp,	#6
      002249 77                    7797 	ld	(hl), a
      00224A E1                    7798 	pop	hl
      00224B 7C                    7799 	ld	a, h
      00224C F8 05                 7800 	ldhl	sp,	#5
      00224E 32                    7801 	ld	(hl-), a
      00224F 2A                    7802 	ld	a,	(hl+)
      002250 66                    7803 	ld	h, (hl)
      002251 6F                    7804 	ld	l, a
      002252 36 0C                 7805 	ld	(hl), #0x0c
      002254 C3rBAr24              7806 	jp	00136$
      002257                       7807 00113$:
                                   7808 ;src/main.c:822: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
                                   7809 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002257 F8 05                 7810 	ldhl	sp,	#5
      002259 3A                    7811 	ld	a, (hl-)
      00225A 22                    7812 	ld	(hl+), a
      00225B 36 00                 7813 	ld	(hl), #0x00
      00225D 3E 02                 7814 	ld	a, #0x02
      00225F                       7815 00254$:
      00225F F8 04                 7816 	ldhl	sp,	#4
      002261 CB 26                 7817 	sla	(hl)
      002263 23                    7818 	inc	hl
      002264 CB 16                 7819 	rl	(hl)
      002266 3D                    7820 	dec	a
      002267 20 F6                 7821 	jr	NZ, 00254$
      002269 2B                    7822 	dec	hl
      00226A 2A                    7823 	ld	a, (hl+)
      00226B 5F                    7824 	ld	e, a
      00226C 56                    7825 	ld	d, (hl)
      00226D 21r00r00              7826 	ld	hl, #_shadow_OAM
      002270 19                    7827 	add	hl, de
      002271 E5                    7828 	push	hl
      002272 7D                    7829 	ld	a, l
      002273 F8 04                 7830 	ldhl	sp,	#4
      002275 77                    7831 	ld	(hl), a
      002276 E1                    7832 	pop	hl
      002277 7C                    7833 	ld	a, h
      002278 F8 03                 7834 	ldhl	sp,	#3
      00227A 32                    7835 	ld	(hl-), a
      00227B 2A                    7836 	ld	a, (hl+)
      00227C 5F                    7837 	ld	e, a
      00227D 56                    7838 	ld	d, (hl)
      00227E 21 03 00              7839 	ld	hl, #0x0003
      002281 19                    7840 	add	hl, de
      002282 E5                    7841 	push	hl
      002283 7D                    7842 	ld	a, l
      002284 F8 06                 7843 	ldhl	sp,	#6
      002286 77                    7844 	ld	(hl), a
      002287 E1                    7845 	pop	hl
      002288 7C                    7846 	ld	a, h
      002289 F8 05                 7847 	ldhl	sp,	#5
      00228B 32                    7848 	ld	(hl-), a
      00228C 2A                    7849 	ld	a,	(hl+)
      00228D 66                    7850 	ld	h, (hl)
      00228E 6F                    7851 	ld	l, a
      00228F 36 20                 7852 	ld	(hl), #0x20
                                   7853 ;src/main.c:823: projectiles[oldestProjectile].offset = 12;
      002291 21r84r00              7854 	ld	hl, #_oldestProjectile
      002294 4E                    7855 	ld	c, (hl)
      002295 06 00                 7856 	ld	b, #0x00
      002297 69                    7857 	ld	l, c
      002298 60                    7858 	ld	h, b
      002299 29                    7859 	add	hl, hl
      00229A 09                    7860 	add	hl, bc
      00229B 29                    7861 	add	hl, hl
      00229C 29                    7862 	add	hl, hl
      00229D E5                    7863 	push	hl
      00229E 7D                    7864 	ld	a, l
      00229F F8 06                 7865 	ldhl	sp,	#6
      0022A1 77                    7866 	ld	(hl), a
      0022A2 E1                    7867 	pop	hl
      0022A3 7C                    7868 	ld	a, h
      0022A4 F8 05                 7869 	ldhl	sp,	#5
      0022A6 32                    7870 	ld	(hl-), a
      0022A7 2A                    7871 	ld	a, (hl+)
      0022A8 5F                    7872 	ld	e, a
      0022A9 56                    7873 	ld	d, (hl)
      0022AA 21rA0r00              7874 	ld	hl, #_projectiles
      0022AD 19                    7875 	add	hl, de
      0022AE E5                    7876 	push	hl
      0022AF 7D                    7877 	ld	a, l
      0022B0 F8 04                 7878 	ldhl	sp,	#4
      0022B2 77                    7879 	ld	(hl), a
      0022B3 E1                    7880 	pop	hl
      0022B4 7C                    7881 	ld	a, h
      0022B5 F8 03                 7882 	ldhl	sp,	#3
      0022B7 32                    7883 	ld	(hl-), a
      0022B8 2A                    7884 	ld	a, (hl+)
      0022B9 5F                    7885 	ld	e, a
      0022BA 56                    7886 	ld	d, (hl)
      0022BB 21 04 00              7887 	ld	hl, #0x0004
      0022BE 19                    7888 	add	hl, de
      0022BF E5                    7889 	push	hl
      0022C0 7D                    7890 	ld	a, l
      0022C1 F8 06                 7891 	ldhl	sp,	#6
      0022C3 77                    7892 	ld	(hl), a
      0022C4 E1                    7893 	pop	hl
      0022C5 7C                    7894 	ld	a, h
      0022C6 F8 05                 7895 	ldhl	sp,	#5
      0022C8 32                    7896 	ld	(hl-), a
      0022C9 2A                    7897 	ld	a,	(hl+)
      0022CA 66                    7898 	ld	h, (hl)
      0022CB 6F                    7899 	ld	l, a
      0022CC 36 0C                 7900 	ld	(hl), #0x0c
      0022CE C3rBAr24              7901 	jp	00136$
      0022D1                       7902 00131$:
                                   7903 ;src/main.c:827: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      0022D1 F8 04                 7904 	ldhl	sp,	#4
      0022D3 7E                    7905 	ld	a, (hl)
      0022D4 C6 04                 7906 	add	a, #0x04
      0022D6 F8 01                 7907 	ldhl	sp,	#1
      0022D8 77                    7908 	ld	(hl), a
                                   7909 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022D9 F8 05                 7910 	ldhl	sp,	#5
      0022DB 3A                    7911 	ld	a, (hl-)
      0022DC 22                    7912 	ld	(hl+), a
      0022DD 36 00                 7913 	ld	(hl), #0x00
      0022DF 3E 02                 7914 	ld	a, #0x02
      0022E1                       7915 00255$:
      0022E1 F8 04                 7916 	ldhl	sp,	#4
      0022E3 CB 26                 7917 	sla	(hl)
      0022E5 23                    7918 	inc	hl
      0022E6 CB 16                 7919 	rl	(hl)
      0022E8 3D                    7920 	dec	a
      0022E9 20 F6                 7921 	jr	NZ, 00255$
      0022EB 2B                    7922 	dec	hl
      0022EC 2A                    7923 	ld	a, (hl+)
      0022ED 5F                    7924 	ld	e, a
      0022EE 56                    7925 	ld	d, (hl)
      0022EF 21r00r00              7926 	ld	hl, #_shadow_OAM
      0022F2 19                    7927 	add	hl, de
      0022F3 E5                    7928 	push	hl
      0022F4 7D                    7929 	ld	a, l
      0022F5 F8 04                 7930 	ldhl	sp,	#4
      0022F7 77                    7931 	ld	(hl), a
      0022F8 E1                    7932 	pop	hl
      0022F9 7C                    7933 	ld	a, h
      0022FA F8 03                 7934 	ldhl	sp,	#3
      0022FC 32                    7935 	ld	(hl-), a
      0022FD 2A                    7936 	ld	a, (hl+)
      0022FE 5F                    7937 	ld	e, a
      0022FF 56                    7938 	ld	d, (hl)
      002300 21 02 00              7939 	ld	hl, #0x0002
      002303 19                    7940 	add	hl, de
      002304 E5                    7941 	push	hl
      002305 7D                    7942 	ld	a, l
      002306 F8 06                 7943 	ldhl	sp,	#6
      002308 77                    7944 	ld	(hl), a
      002309 E1                    7945 	pop	hl
      00230A 7C                    7946 	ld	a, h
      00230B F8 05                 7947 	ldhl	sp,	#5
      00230D 32                    7948 	ld	(hl-), a
      00230E 2A                    7949 	ld	a, (hl+)
      00230F 5F                    7950 	ld	e, a
      002310 56                    7951 	ld	d, (hl)
      002311 F8 01                 7952 	ldhl	sp,	#1
      002313 7E                    7953 	ld	a, (hl)
      002314 12                    7954 	ld	(de), a
                                   7955 ;src/main.c:828: if (xDir == 1 && yDir == -1) {
      002315 FAr86r00              7956 	ld	a, (#_xDir)
      002318 3D                    7957 	dec	a
      002319 3E 01                 7958 	ld	a, #0x01
      00231B 28 01                 7959 	jr	Z, 00257$
      00231D AF                    7960 	xor	a, a
      00231E                       7961 00257$:
      00231E F8 02                 7962 	ldhl	sp,	#2
      002320 77                    7963 	ld	(hl), a
                                   7964 ;src/main.c:783: oldestProjectile += 1;
      002321 FAr84r00              7965 	ld	a, (#_oldestProjectile)
      002324 F8 05                 7966 	ldhl	sp,	#5
      002326 77                    7967 	ld	(hl), a
                                   7968 ;src/main.c:828: if (xDir == 1 && yDir == -1) {
      002327 FAr87r00              7969 	ld	a, (#_yDir)
      00232A 3C                    7970 	inc	a
      00232B 3E 01                 7971 	ld	a, #0x01
      00232D 28 01                 7972 	jr	Z, 00259$
      00232F AF                    7973 	xor	a, a
      002330                       7974 00259$:
      002330 F8 03                 7975 	ldhl	sp,	#3
                                   7976 ;src/main.c:805: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002332 22                    7977 	ld	(hl+), a
      002333 23                    7978 	inc	hl
      002334 3A                    7979 	ld	a, (hl-)
      002335 C6 1E                 7980 	add	a, #0x1e
                                   7981 ;src/main.c:828: if (xDir == 1 && yDir == -1) {
      002337 32                    7982 	ld	(hl-), a
      002338 2B                    7983 	dec	hl
      002339 7E                    7984 	ld	a, (hl)
      00233A B7                    7985 	or	a, a
      00233B CArBEr23              7986 	jp	Z, 00127$
      00233E 23                    7987 	inc	hl
      00233F 7E                    7988 	ld	a, (hl)
      002340 B7                    7989 	or	a, a
      002341 28 7B                 7990 	jr	Z, 00127$
                                   7991 ;src/main.c:829: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002343 23                    7992 	inc	hl
      002344 2A                    7993 	ld	a, (hl+)
      002345 77                    7994 	ld	(hl), a
                                   7995 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002346 3A                    7996 	ld	a, (hl-)
      002347 22                    7997 	ld	(hl+), a
      002348 36 00                 7998 	ld	(hl), #0x00
      00234A 3E 02                 7999 	ld	a, #0x02
      00234C                       8000 00260$:
      00234C F8 04                 8001 	ldhl	sp,	#4
      00234E CB 26                 8002 	sla	(hl)
      002350 23                    8003 	inc	hl
      002351 CB 16                 8004 	rl	(hl)
      002353 3D                    8005 	dec	a
      002354 20 F6                 8006 	jr	NZ, 00260$
      002356 2B                    8007 	dec	hl
      002357 2A                    8008 	ld	a, (hl+)
      002358 5F                    8009 	ld	e, a
      002359 56                    8010 	ld	d, (hl)
      00235A 21r00r00              8011 	ld	hl, #_shadow_OAM
      00235D 19                    8012 	add	hl, de
      00235E E5                    8013 	push	hl
      00235F 7D                    8014 	ld	a, l
      002360 F8 04                 8015 	ldhl	sp,	#4
      002362 77                    8016 	ld	(hl), a
      002363 E1                    8017 	pop	hl
      002364 7C                    8018 	ld	a, h
      002365 F8 03                 8019 	ldhl	sp,	#3
      002367 32                    8020 	ld	(hl-), a
      002368 2A                    8021 	ld	a, (hl+)
      002369 5F                    8022 	ld	e, a
      00236A 56                    8023 	ld	d, (hl)
      00236B 21 03 00              8024 	ld	hl, #0x0003
      00236E 19                    8025 	add	hl, de
      00236F E5                    8026 	push	hl
      002370 7D                    8027 	ld	a, l
      002371 F8 06                 8028 	ldhl	sp,	#6
      002373 77                    8029 	ld	(hl), a
      002374 E1                    8030 	pop	hl
      002375 7C                    8031 	ld	a, h
      002376 F8 05                 8032 	ldhl	sp,	#5
      002378 32                    8033 	ld	(hl-), a
      002379 2A                    8034 	ld	a,	(hl+)
      00237A 66                    8035 	ld	h, (hl)
      00237B 6F                    8036 	ld	l, a
      00237C 36 00                 8037 	ld	(hl), #0x00
                                   8038 ;src/main.c:830: projectiles[oldestProjectile].offset = 12;
      00237E 21r84r00              8039 	ld	hl, #_oldestProjectile
      002381 4E                    8040 	ld	c, (hl)
      002382 06 00                 8041 	ld	b, #0x00
      002384 69                    8042 	ld	l, c
      002385 60                    8043 	ld	h, b
      002386 29                    8044 	add	hl, hl
      002387 09                    8045 	add	hl, bc
      002388 29                    8046 	add	hl, hl
      002389 29                    8047 	add	hl, hl
      00238A E5                    8048 	push	hl
      00238B 7D                    8049 	ld	a, l
      00238C F8 06                 8050 	ldhl	sp,	#6
      00238E 77                    8051 	ld	(hl), a
      00238F E1                    8052 	pop	hl
      002390 7C                    8053 	ld	a, h
      002391 F8 05                 8054 	ldhl	sp,	#5
      002393 32                    8055 	ld	(hl-), a
      002394 2A                    8056 	ld	a, (hl+)
      002395 5F                    8057 	ld	e, a
      002396 56                    8058 	ld	d, (hl)
      002397 21rA0r00              8059 	ld	hl, #_projectiles
      00239A 19                    8060 	add	hl, de
      00239B E5                    8061 	push	hl
      00239C 7D                    8062 	ld	a, l
      00239D F8 04                 8063 	ldhl	sp,	#4
      00239F 77                    8064 	ld	(hl), a
      0023A0 E1                    8065 	pop	hl
      0023A1 7C                    8066 	ld	a, h
      0023A2 F8 03                 8067 	ldhl	sp,	#3
      0023A4 32                    8068 	ld	(hl-), a
      0023A5 2A                    8069 	ld	a, (hl+)
      0023A6 5F                    8070 	ld	e, a
      0023A7 56                    8071 	ld	d, (hl)
      0023A8 21 04 00              8072 	ld	hl, #0x0004
      0023AB 19                    8073 	add	hl, de
      0023AC E5                    8074 	push	hl
      0023AD 7D                    8075 	ld	a, l
      0023AE F8 06                 8076 	ldhl	sp,	#6
      0023B0 77                    8077 	ld	(hl), a
      0023B1 E1                    8078 	pop	hl
      0023B2 7C                    8079 	ld	a, h
      0023B3 F8 05                 8080 	ldhl	sp,	#5
      0023B5 32                    8081 	ld	(hl-), a
      0023B6 2A                    8082 	ld	a,	(hl+)
      0023B7 66                    8083 	ld	h, (hl)
      0023B8 6F                    8084 	ld	l, a
      0023B9 36 0C                 8085 	ld	(hl), #0x0c
      0023BB C3rBAr24              8086 	jp	00136$
      0023BE                       8087 00127$:
                                   8088 ;src/main.c:806: if (yDir == 1) {
      0023BE FAr87r00              8089 	ld	a, (#_yDir)
      0023C1 3D                    8090 	dec	a
      0023C2 3E 01                 8091 	ld	a, #0x01
      0023C4 28 01                 8092 	jr	Z, 00262$
      0023C6 AF                    8093 	xor	a, a
      0023C7                       8094 00262$:
      0023C7 F8 05                 8095 	ldhl	sp,	#5
      0023C9 77                    8096 	ld	(hl), a
                                   8097 ;src/main.c:832: else if (xDir == 1 && yDir == 1) {
      0023CA F8 02                 8098 	ldhl	sp,	#2
      0023CC 7E                    8099 	ld	a, (hl)
      0023CD B7                    8100 	or	a, a
      0023CE CAr51r24              8101 	jp	Z, 00123$
      0023D1 F8 05                 8102 	ldhl	sp,	#5
      0023D3 7E                    8103 	ld	a, (hl)
      0023D4 B7                    8104 	or	a, a
      0023D5 28 7A                 8105 	jr	Z, 00123$
                                   8106 ;src/main.c:833: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      0023D7 2B                    8107 	dec	hl
      0023D8 2A                    8108 	ld	a, (hl+)
      0023D9 77                    8109 	ld	(hl), a
                                   8110 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0023DA 3A                    8111 	ld	a, (hl-)
      0023DB 22                    8112 	ld	(hl+), a
      0023DC 36 00                 8113 	ld	(hl), #0x00
      0023DE 3E 02                 8114 	ld	a, #0x02
      0023E0                       8115 00263$:
      0023E0 F8 04                 8116 	ldhl	sp,	#4
      0023E2 CB 26                 8117 	sla	(hl)
      0023E4 23                    8118 	inc	hl
      0023E5 CB 16                 8119 	rl	(hl)
      0023E7 3D                    8120 	dec	a
      0023E8 20 F6                 8121 	jr	NZ, 00263$
      0023EA 2B                    8122 	dec	hl
      0023EB 2A                    8123 	ld	a, (hl+)
      0023EC 5F                    8124 	ld	e, a
      0023ED 56                    8125 	ld	d, (hl)
      0023EE 21r00r00              8126 	ld	hl, #_shadow_OAM
      0023F1 19                    8127 	add	hl, de
      0023F2 E5                    8128 	push	hl
      0023F3 7D                    8129 	ld	a, l
      0023F4 F8 04                 8130 	ldhl	sp,	#4
      0023F6 77                    8131 	ld	(hl), a
      0023F7 E1                    8132 	pop	hl
      0023F8 7C                    8133 	ld	a, h
      0023F9 F8 03                 8134 	ldhl	sp,	#3
      0023FB 32                    8135 	ld	(hl-), a
      0023FC 2A                    8136 	ld	a, (hl+)
      0023FD 5F                    8137 	ld	e, a
      0023FE 56                    8138 	ld	d, (hl)
      0023FF 21 03 00              8139 	ld	hl, #0x0003
      002402 19                    8140 	add	hl, de
      002403 E5                    8141 	push	hl
      002404 7D                    8142 	ld	a, l
      002405 F8 06                 8143 	ldhl	sp,	#6
      002407 77                    8144 	ld	(hl), a
      002408 E1                    8145 	pop	hl
      002409 7C                    8146 	ld	a, h
      00240A F8 05                 8147 	ldhl	sp,	#5
      00240C 32                    8148 	ld	(hl-), a
      00240D 2A                    8149 	ld	a,	(hl+)
      00240E 66                    8150 	ld	h, (hl)
      00240F 6F                    8151 	ld	l, a
      002410 36 40                 8152 	ld	(hl), #0x40
                                   8153 ;src/main.c:834: projectiles[oldestProjectile].offset = 4;
      002412 21r84r00              8154 	ld	hl, #_oldestProjectile
      002415 4E                    8155 	ld	c, (hl)
      002416 06 00                 8156 	ld	b, #0x00
      002418 69                    8157 	ld	l, c
      002419 60                    8158 	ld	h, b
      00241A 29                    8159 	add	hl, hl
      00241B 09                    8160 	add	hl, bc
      00241C 29                    8161 	add	hl, hl
      00241D 29                    8162 	add	hl, hl
      00241E E5                    8163 	push	hl
      00241F 7D                    8164 	ld	a, l
      002420 F8 06                 8165 	ldhl	sp,	#6
      002422 77                    8166 	ld	(hl), a
      002423 E1                    8167 	pop	hl
      002424 7C                    8168 	ld	a, h
      002425 F8 05                 8169 	ldhl	sp,	#5
      002427 32                    8170 	ld	(hl-), a
      002428 2A                    8171 	ld	a, (hl+)
      002429 5F                    8172 	ld	e, a
      00242A 56                    8173 	ld	d, (hl)
      00242B 21rA0r00              8174 	ld	hl, #_projectiles
      00242E 19                    8175 	add	hl, de
      00242F E5                    8176 	push	hl
      002430 7D                    8177 	ld	a, l
      002431 F8 04                 8178 	ldhl	sp,	#4
      002433 77                    8179 	ld	(hl), a
      002434 E1                    8180 	pop	hl
      002435 7C                    8181 	ld	a, h
      002436 F8 03                 8182 	ldhl	sp,	#3
      002438 32                    8183 	ld	(hl-), a
      002439 2A                    8184 	ld	a, (hl+)
      00243A 5F                    8185 	ld	e, a
      00243B 56                    8186 	ld	d, (hl)
      00243C 21 04 00              8187 	ld	hl, #0x0004
      00243F 19                    8188 	add	hl, de
      002440 E5                    8189 	push	hl
      002441 7D                    8190 	ld	a, l
      002442 F8 06                 8191 	ldhl	sp,	#6
      002444 77                    8192 	ld	(hl), a
      002445 E1                    8193 	pop	hl
      002446 7C                    8194 	ld	a, h
      002447 F8 05                 8195 	ldhl	sp,	#5
      002449 32                    8196 	ld	(hl-), a
      00244A 2A                    8197 	ld	a,	(hl+)
      00244B 66                    8198 	ld	h, (hl)
      00244C 6F                    8199 	ld	l, a
      00244D 36 04                 8200 	ld	(hl), #0x04
      00244F 18 69                 8201 	jr	00136$
      002451                       8202 00123$:
                                   8203 ;src/main.c:836: else if (xDir == -1 && yDir == 1) {
      002451 FAr86r00              8204 	ld	a, (#_xDir)
      002454 3C                    8205 	inc	a
      002455 3E 01                 8206 	ld	a, #0x01
      002457 28 01                 8207 	jr	Z, 00265$
      002459 AF                    8208 	xor	a, a
      00245A                       8209 00265$:
      00245A 4F                    8210 	ld	c, a
      00245B B7                    8211 	or	a, a
      00245C 28 2D                 8212 	jr	Z, 00119$
      00245E F8 05                 8213 	ldhl	sp,	#5
      002460 7E                    8214 	ld	a, (hl)
      002461 B7                    8215 	or	a, a
      002462 28 27                 8216 	jr	Z, 00119$
                                   8217 ;src/main.c:837: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002464 2B                    8218 	dec	hl
                                   8219 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002465 6E                    8220 	ld	l, (hl)
      002466 01r00r00              8221 	ld	bc, #_shadow_OAM+0
                                   8222 ;	spillPairReg hl
                                   8223 ;	spillPairReg hl
      002469 26 00                 8224 	ld	h, #0x00
                                   8225 ;	spillPairReg hl
                                   8226 ;	spillPairReg hl
      00246B 29                    8227 	add	hl, hl
      00246C 29                    8228 	add	hl, hl
      00246D 09                    8229 	add	hl, bc
      00246E 23                    8230 	inc	hl
      00246F 23                    8231 	inc	hl
      002470 23                    8232 	inc	hl
      002471 36 60                 8233 	ld	(hl), #0x60
                                   8234 ;src/main.c:838: projectiles[oldestProjectile].offset = 4;
      002473 21r84r00              8235 	ld	hl, #_oldestProjectile
      002476 4E                    8236 	ld	c, (hl)
      002477 06 00                 8237 	ld	b, #0x00
      002479 69                    8238 	ld	l, c
      00247A 60                    8239 	ld	h, b
      00247B 29                    8240 	add	hl, hl
      00247C 09                    8241 	add	hl, bc
      00247D 29                    8242 	add	hl, hl
      00247E 29                    8243 	add	hl, hl
      00247F 01rA0r00              8244 	ld	bc,#_projectiles
      002482 09                    8245 	add	hl,bc
      002483 01 04 00              8246 	ld	bc, #0x0004
      002486 09                    8247 	add	hl, bc
      002487 36 04                 8248 	ld	(hl), #0x04
      002489 18 2F                 8249 	jr	00136$
      00248B                       8250 00119$:
                                   8251 ;src/main.c:840: else if (xDir == -1 && yDir == -1) {
      00248B 79                    8252 	ld	a, c
      00248C B7                    8253 	or	a, a
      00248D 28 2B                 8254 	jr	Z, 00136$
      00248F F8 03                 8255 	ldhl	sp,	#3
      002491 7E                    8256 	ld	a, (hl)
      002492 B7                    8257 	or	a, a
      002493 28 25                 8258 	jr	Z, 00136$
                                   8259 ;src/main.c:841: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002495 23                    8260 	inc	hl
                                   8261 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002496 6E                    8262 	ld	l, (hl)
      002497 01r00r00              8263 	ld	bc, #_shadow_OAM+0
                                   8264 ;	spillPairReg hl
                                   8265 ;	spillPairReg hl
      00249A 26 00                 8266 	ld	h, #0x00
                                   8267 ;	spillPairReg hl
                                   8268 ;	spillPairReg hl
      00249C 29                    8269 	add	hl, hl
      00249D 29                    8270 	add	hl, hl
      00249E 09                    8271 	add	hl, bc
      00249F 23                    8272 	inc	hl
      0024A0 23                    8273 	inc	hl
      0024A1 23                    8274 	inc	hl
      0024A2 36 20                 8275 	ld	(hl), #0x20
                                   8276 ;src/main.c:842: projectiles[oldestProjectile].offset = 12;
      0024A4 21r84r00              8277 	ld	hl, #_oldestProjectile
      0024A7 4E                    8278 	ld	c, (hl)
      0024A8 06 00                 8279 	ld	b, #0x00
      0024AA 69                    8280 	ld	l, c
      0024AB 60                    8281 	ld	h, b
      0024AC 29                    8282 	add	hl, hl
      0024AD 09                    8283 	add	hl, bc
      0024AE 29                    8284 	add	hl, hl
      0024AF 29                    8285 	add	hl, hl
      0024B0 01rA0r00              8286 	ld	bc,#_projectiles
      0024B3 09                    8287 	add	hl,bc
      0024B4 01 04 00              8288 	ld	bc, #0x0004
      0024B7 09                    8289 	add	hl, bc
      0024B8 36 0C                 8290 	ld	(hl), #0x0c
      0024BA                       8291 00136$:
                                   8292 ;src/main.c:846: fireCooldown = projectiles[oldestProjectile].delay;
      0024BA 21r84r00              8293 	ld	hl, #_oldestProjectile
      0024BD 4E                    8294 	ld	c, (hl)
      0024BE 06 00                 8295 	ld	b, #0x00
      0024C0 69                    8296 	ld	l, c
      0024C1 60                    8297 	ld	h, b
      0024C2 29                    8298 	add	hl, hl
      0024C3 09                    8299 	add	hl, bc
      0024C4 29                    8300 	add	hl, hl
      0024C5 29                    8301 	add	hl, hl
      0024C6 01rA0r00              8302 	ld	bc,#_projectiles
      0024C9 09                    8303 	add	hl,bc
      0024CA 4D                    8304 	ld	c, l
      0024CB 44                    8305 	ld	b, h
      0024CC 21 0A 00              8306 	ld	hl, #0x000a
      0024CF 09                    8307 	add	hl, bc
      0024D0 7E                    8308 	ld	a, (hl)
      0024D1 EAr85r00              8309 	ld	(#_fireCooldown),a
                                   8310 ;src/main.c:848: playSound(projectiles[oldestProjectile].type);
      0024D4 21 0B 00              8311 	ld	hl, #0x000b
      0024D7 09                    8312 	add	hl, bc
      0024D8 7E                    8313 	ld	a, (hl)
      0024D9 F5                    8314 	push	af
      0024DA 33                    8315 	inc	sp
      0024DB CDrA1r0B              8316 	call	_playSound
                                   8317 ;src/main.c:852: }
      0024DE E8 07                 8318 	add	sp, #7
      0024E0 C9                    8319 	ret
                                   8320 ;src/main.c:855: void moveProjectiles() {
                                   8321 ;	---------------------------------
                                   8322 ; Function moveProjectiles
                                   8323 ; ---------------------------------
      0024E1                       8324 _moveProjectiles::
      0024E1 E8 F9                 8325 	add	sp, #-7
                                   8326 ;src/main.c:856: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0024E3 F8 06                 8327 	ldhl	sp,	#6
      0024E5 36 00                 8328 	ld	(hl), #0x00
      0024E7                       8329 00112$:
      0024E7 21r1Er08              8330 	ld	hl, #_PROJECTILECOUNT
      0024EA 4E                    8331 	ld	c, (hl)
      0024EB F8 06                 8332 	ldhl	sp,	#6
      0024ED 7E                    8333 	ld	a, (hl)
      0024EE 91                    8334 	sub	a, c
      0024EF D2r3Dr26              8335 	jp	NC, 00114$
                                   8336 ;src/main.c:857: projectiles[i].x -= xOverflow;
      0024F2 4E                    8337 	ld	c, (hl)
      0024F3 06 00                 8338 	ld	b, #0x00
      0024F5 69                    8339 	ld	l, c
      0024F6 60                    8340 	ld	h, b
      0024F7 29                    8341 	add	hl, hl
      0024F8 09                    8342 	add	hl, bc
      0024F9 29                    8343 	add	hl, hl
      0024FA 29                    8344 	add	hl, hl
      0024FB 01rA0r00              8345 	ld	bc,#_projectiles
      0024FE 09                    8346 	add	hl,bc
      0024FF 33                    8347 	inc	sp
      002500 33                    8348 	inc	sp
      002501 5D                    8349 	ld	e, l
      002502 54                    8350 	ld	d, h
      002503 D5                    8351 	push	de
      002504 1A                    8352 	ld	a, (de)
      002505 4F                    8353 	ld	c, a
      002506 13                    8354 	inc	de
      002507 1A                    8355 	ld	a, (de)
      002508 47                    8356 	ld	b, a
      002509 79                    8357 	ld	a, c
      00250A 21r94r00              8358 	ld	hl, #_xOverflow
      00250D 96                    8359 	sub	a, (hl)
      00250E 23                    8360 	inc	hl
      00250F 4F                    8361 	ld	c, a
      002510 78                    8362 	ld	a, b
      002511 9E                    8363 	sbc	a, (hl)
      002512 47                    8364 	ld	b, a
      002513 E1                    8365 	pop	hl
      002514 E5                    8366 	push	hl
      002515 79                    8367 	ld	a, c
      002516 22                    8368 	ld	(hl+), a
      002517 70                    8369 	ld	(hl), b
                                   8370 ;src/main.c:858: projectiles[i].y -= yOverflow;
      002518 D1                    8371 	pop	de
      002519 D5                    8372 	push	de
      00251A 21 02 00              8373 	ld	hl, #0x0002
      00251D 19                    8374 	add	hl, de
      00251E E5                    8375 	push	hl
      00251F 7D                    8376 	ld	a, l
      002520 F8 04                 8377 	ldhl	sp,	#4
      002522 77                    8378 	ld	(hl), a
      002523 E1                    8379 	pop	hl
      002524 7C                    8380 	ld	a, h
      002525 F8 03                 8381 	ldhl	sp,	#3
      002527 32                    8382 	ld	(hl-), a
      002528 2A                    8383 	ld	a, (hl+)
      002529 5F                    8384 	ld	e, a
      00252A 56                    8385 	ld	d, (hl)
      00252B 1A                    8386 	ld	a, (de)
      00252C 4F                    8387 	ld	c, a
      00252D 13                    8388 	inc	de
      00252E 1A                    8389 	ld	a, (de)
      00252F 47                    8390 	ld	b, a
      002530 79                    8391 	ld	a, c
      002531 21r96r00              8392 	ld	hl, #_yOverflow
      002534 96                    8393 	sub	a, (hl)
      002535 23                    8394 	inc	hl
      002536 4F                    8395 	ld	c, a
      002537 78                    8396 	ld	a, b
      002538 9E                    8397 	sbc	a, (hl)
      002539 47                    8398 	ld	b, a
      00253A F8 02                 8399 	ldhl	sp,	#2
      00253C 2A                    8400 	ld	a,	(hl+)
      00253D 66                    8401 	ld	h, (hl)
      00253E 6F                    8402 	ld	l, a
      00253F 79                    8403 	ld	a, c
      002540 22                    8404 	ld	(hl+), a
      002541 70                    8405 	ld	(hl), b
                                   8406 ;src/main.c:860: if (projectiles[i].active) {
      002542 D1                    8407 	pop	de
      002543 D5                    8408 	push	de
      002544 21 09 00              8409 	ld	hl, #0x0009
      002547 19                    8410 	add	hl, de
      002548 4D                    8411 	ld	c, l
      002549 44                    8412 	ld	b, h
      00254A 0A                    8413 	ld	a, (bc)
      00254B B7                    8414 	or	a, a
      00254C CAr37r26              8415 	jp	Z, 00113$
                                   8416 ;src/main.c:861: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      00254F F8 02                 8417 	ldhl	sp,#2
      002551 2A                    8418 	ld	a, (hl+)
      002552 5F                    8419 	ld	e, a
      002553 56                    8420 	ld	d, (hl)
      002554 1A                    8421 	ld	a, (de)
      002555 4F                    8422 	ld	c, a
      002556 13                    8423 	inc	de
      002557 1A                    8424 	ld	a, (de)
      002558 47                    8425 	ld	b, a
      002559 D1                    8426 	pop	de
      00255A D5                    8427 	push	de
      00255B 21 06 00              8428 	ld	hl, #0x0006
      00255E 19                    8429 	add	hl, de
      00255F 5D                    8430 	ld	e, l
      002560 54                    8431 	ld	d, h
      002561 1A                    8432 	ld	a, (de)
      002562 6F                    8433 	ld	l, a
                                   8434 ;	spillPairReg hl
                                   8435 ;	spillPairReg hl
      002563 07                    8436 	rlca
      002564 9F                    8437 	sbc	a, a
      002565 67                    8438 	ld	h, a
                                   8439 ;	spillPairReg hl
                                   8440 ;	spillPairReg hl
      002566 09                    8441 	add	hl, bc
      002567 4D                    8442 	ld	c, l
      002568 44                    8443 	ld	b, h
      002569 F8 04                 8444 	ldhl	sp,	#4
      00256B 79                    8445 	ld	a, c
      00256C 22                    8446 	ld	(hl+), a
      00256D 70                    8447 	ld	(hl), b
                                   8448 ;src/main.c:862: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      00256E D1                    8449 	pop	de
      00256F D5                    8450 	push	de
      002570 1A                    8451 	ld	a, (de)
      002571 4F                    8452 	ld	c, a
      002572 13                    8453 	inc	de
      002573 1A                    8454 	ld	a, (de)
      002574 47                    8455 	ld	b, a
      002575 D1                    8456 	pop	de
      002576 D5                    8457 	push	de
      002577 21 05 00              8458 	ld	hl, #0x0005
      00257A 19                    8459 	add	hl, de
      00257B 5D                    8460 	ld	e, l
      00257C 54                    8461 	ld	d, h
      00257D 1A                    8462 	ld	a, (de)
      00257E 6F                    8463 	ld	l, a
                                   8464 ;	spillPairReg hl
                                   8465 ;	spillPairReg hl
      00257F 07                    8466 	rlca
      002580 9F                    8467 	sbc	a, a
      002581 67                    8468 	ld	h, a
                                   8469 ;	spillPairReg hl
                                   8470 ;	spillPairReg hl
      002582 09                    8471 	add	hl, bc
      002583 4D                    8472 	ld	c, l
      002584 44                    8473 	ld	b, h
                                   8474 ;src/main.c:865: projectiles[i].y = newY;
      002585 F8 02                 8475 	ldhl	sp,#2
      002587 2A                    8476 	ld	a, (hl+)
      002588 5F                    8477 	ld	e, a
      002589 2A                    8478 	ld	a, (hl+)
      00258A 57                    8479 	ld	d, a
      00258B 2A                    8480 	ld	a, (hl+)
      00258C 12                    8481 	ld	(de), a
      00258D 13                    8482 	inc	de
      00258E 7E                    8483 	ld	a, (hl)
      00258F 12                    8484 	ld	(de), a
                                   8485 ;src/main.c:866: projectiles[i].x = newX;
      002590 E1                    8486 	pop	hl
      002591 E5                    8487 	push	hl
      002592 79                    8488 	ld	a, c
      002593 22                    8489 	ld	(hl+), a
      002594 70                    8490 	ld	(hl), b
                                   8491 ;src/main.c:870: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002595 F8 04                 8492 	ldhl	sp,	#4
      002597 2A                    8493 	ld	a, (hl+)
      002598 77                    8494 	ld	(hl), a
      002599 D1                    8495 	pop	de
      00259A D5                    8496 	push	de
      00259B 21 04 00              8497 	ld	hl, #0x0004
      00259E 19                    8498 	add	hl, de
      00259F 5D                    8499 	ld	e, l
      0025A0 54                    8500 	ld	d, h
      0025A1 1A                    8501 	ld	a, (de)
      0025A2 F8 05                 8502 	ldhl	sp,	#5
      0025A4 86                    8503 	add	a, (hl)
      0025A5 2B                    8504 	dec	hl
      0025A6 5F                    8505 	ld	e, a
      0025A7 79                    8506 	ld	a, c
      0025A8 C6 04                 8507 	add	a, #0x04
      0025AA 22                    8508 	ld	(hl+), a
      0025AB 23                    8509 	inc	hl
      0025AC 3A                    8510 	ld	a, (hl-)
      0025AD C6 1E                 8511 	add	a, #0x1e
      0025AF 77                    8512 	ld	(hl), a
      0025B0 56                    8513 	ld	d, (hl)
                                   8514 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0025B1 26 00                 8515 	ld	h, #0x00
                                   8516 ;	spillPairReg hl
                                   8517 ;	spillPairReg hl
      0025B3 6A                    8518 	ld	l, d
      0025B4 29                    8519 	add	hl, hl
      0025B5 29                    8520 	add	hl, hl
      0025B6 D5                    8521 	push	de
      0025B7 11r00r00              8522 	ld	de, #_shadow_OAM
      0025BA 19                    8523 	add	hl, de
      0025BB D1                    8524 	pop	de
                                   8525 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0025BC 7B                    8526 	ld	a, e
      0025BD 22                    8527 	ld	(hl+), a
      0025BE 5D                    8528 	ld	e, l
      0025BF 54                    8529 	ld	d, h
      0025C0 F8 04                 8530 	ldhl	sp,	#4
      0025C2 7E                    8531 	ld	a, (hl)
      0025C3 12                    8532 	ld	(de), a
                                   8533 ;src/main.c:874: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0025C4 D1                    8534 	pop	de
      0025C5 D5                    8535 	push	de
      0025C6 1A                    8536 	ld	a, (de)
      0025C7 6F                    8537 	ld	l, a
                                   8538 ;	spillPairReg hl
                                   8539 ;	spillPairReg hl
      0025C8 13                    8540 	inc	de
      0025C9 1A                    8541 	ld	a, (de)
      0025CA 67                    8542 	ld	h, a
                                   8543 ;	spillPairReg hl
                                   8544 ;	spillPairReg hl
      0025CB CB 78                 8545 	bit	7, b
      0025CD 20 44                 8546 	jr	NZ, 00101$
      0025CF 5C                    8547 	ld	e, h
      0025D0 16 00                 8548 	ld	d, #0x00
      0025D2 3E AA                 8549 	ld	a, #0xaa
      0025D4 BD                    8550 	cp	a, l
      0025D5 3E 00                 8551 	ld	a, #0x00
      0025D7 9C                    8552 	sbc	a, h
      0025D8 CB 7B                 8553 	bit	7, e
      0025DA 28 07                 8554 	jr	Z, 00147$
      0025DC CB 7A                 8555 	bit	7, d
      0025DE 20 08                 8556 	jr	NZ, 00148$
      0025E0 BF                    8557 	cp	a, a
      0025E1 18 05                 8558 	jr	00148$
      0025E3                       8559 00147$:
      0025E3 CB 7A                 8560 	bit	7, d
      0025E5 28 01                 8561 	jr	Z, 00148$
      0025E7 37                    8562 	scf
      0025E8                       8563 00148$:
      0025E8 38 29                 8564 	jr	C, 00101$
                                   8565 ;src/main.c:858: projectiles[i].y -= yOverflow;
      0025EA F8 02                 8566 	ldhl	sp,#2
      0025EC 2A                    8567 	ld	a, (hl+)
      0025ED 5F                    8568 	ld	e, a
      0025EE 56                    8569 	ld	d, (hl)
      0025EF 1A                    8570 	ld	a, (de)
      0025F0 4F                    8571 	ld	c, a
      0025F1 13                    8572 	inc	de
      0025F2 1A                    8573 	ld	a, (de)
                                   8574 ;src/main.c:874: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0025F3 47                    8575 	ld	b, a
      0025F4 CB 78                 8576 	bit	7, b
      0025F6 20 1B                 8577 	jr	NZ, 00101$
      0025F8 58                    8578 	ld	e, b
      0025F9 16 00                 8579 	ld	d, #0x00
      0025FB 3E 9A                 8580 	ld	a, #0x9a
      0025FD B9                    8581 	cp	a, c
      0025FE 3E 00                 8582 	ld	a, #0x00
      002600 98                    8583 	sbc	a, b
      002601 CB 7B                 8584 	bit	7, e
      002603 28 07                 8585 	jr	Z, 00149$
      002605 CB 7A                 8586 	bit	7, d
      002607 20 08                 8587 	jr	NZ, 00150$
      002609 BF                    8588 	cp	a, a
      00260A 18 05                 8589 	jr	00150$
      00260C                       8590 00149$:
      00260C CB 7A                 8591 	bit	7, d
      00260E 28 01                 8592 	jr	Z, 00150$
      002610 37                    8593 	scf
      002611                       8594 00150$:
      002611 30 24                 8595 	jr	NC, 00113$
      002613                       8596 00101$:
                                   8597 ;src/main.c:876: projectiles[i].active = 0;
      002613 F8 06                 8598 	ldhl	sp,	#6
      002615 4E                    8599 	ld	c, (hl)
      002616 06 00                 8600 	ld	b, #0x00
      002618 69                    8601 	ld	l, c
      002619 60                    8602 	ld	h, b
      00261A 29                    8603 	add	hl, hl
      00261B 09                    8604 	add	hl, bc
      00261C 29                    8605 	add	hl, hl
      00261D 29                    8606 	add	hl, hl
      00261E 11rA0r00              8607 	ld	de, #_projectiles
      002621 19                    8608 	add	hl, de
      002622 01 09 00              8609 	ld	bc, #0x0009
      002625 09                    8610 	add	hl, bc
      002626 36 00                 8611 	ld	(hl), #0x00
                                   8612 ;src/main.c:877: set_sprite_tile(30+i, 0x7f);
      002628 F8 05                 8613 	ldhl	sp,	#5
                                   8614 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00262A 6E                    8615 	ld	l, (hl)
                                   8616 ;	spillPairReg hl
                                   8617 ;	spillPairReg hl
      00262B 26 00                 8618 	ld	h, #0x00
                                   8619 ;	spillPairReg hl
                                   8620 ;	spillPairReg hl
      00262D 29                    8621 	add	hl, hl
      00262E 29                    8622 	add	hl, hl
      00262F 11r00r00              8623 	ld	de, #_shadow_OAM
      002632 19                    8624 	add	hl, de
      002633 23                    8625 	inc	hl
      002634 23                    8626 	inc	hl
      002635 36 7F                 8627 	ld	(hl), #0x7f
                                   8628 ;src/main.c:877: set_sprite_tile(30+i, 0x7f);
      002637                       8629 00113$:
                                   8630 ;src/main.c:856: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002637 F8 06                 8631 	ldhl	sp,	#6
      002639 34                    8632 	inc	(hl)
      00263A C3rE7r24              8633 	jp	00112$
      00263D                       8634 00114$:
                                   8635 ;src/main.c:882: }
      00263D E8 07                 8636 	add	sp, #7
      00263F C9                    8637 	ret
                                   8638 ;src/main.c:884: void initEnemyOptions() {
                                   8639 ;	---------------------------------
                                   8640 ; Function initEnemyOptions
                                   8641 ; ---------------------------------
      002640                       8642 _initEnemyOptions::
                                   8643 ;src/main.c:885: enemyOptions[0] = blob;
      002640 11 10 00              8644 	ld	de, #0x0010
      002643 D5                    8645 	push	de
      002644 11r10r00              8646 	ld	de, #_blob
      002647 D5                    8647 	push	de
      002648 11r00r00              8648 	ld	de, #_enemyOptions
      00264B D5                    8649 	push	de
      00264C CDr00r00              8650 	call	___memcpy
      00264F E8 06                 8651 	add	sp, #6
                                   8652 ;src/main.c:886: enemyOptions[1] = bomb;
      002651 11 10 00              8653 	ld	de, #0x0010
      002654 D5                    8654 	push	de
      002655 11r20r00              8655 	ld	de, #_bomb
      002658 D5                    8656 	push	de
      002659 11r10r00              8657 	ld	de, #(_enemyOptions + 16)
      00265C D5                    8658 	push	de
      00265D CDr00r00              8659 	call	___memcpy
      002660 E8 06                 8660 	add	sp, #6
                                   8661 ;src/main.c:887: enemyOptions[2] = miniship;
      002662 11 10 00              8662 	ld	de, #0x0010
      002665 D5                    8663 	push	de
      002666 11r30r00              8664 	ld	de, #_miniship
      002669 D5                    8665 	push	de
      00266A 11r20r00              8666 	ld	de, #(_enemyOptions + 32)
      00266D D5                    8667 	push	de
      00266E CDr00r00              8668 	call	___memcpy
      002671 E8 06                 8669 	add	sp, #6
                                   8670 ;src/main.c:888: enemyOptions[3] = shieldship;
      002673 11 10 00              8671 	ld	de, #0x0010
      002676 D5                    8672 	push	de
      002677 11r50r00              8673 	ld	de, #_shieldship
      00267A D5                    8674 	push	de
      00267B 11r30r00              8675 	ld	de, #(_enemyOptions + 48)
      00267E D5                    8676 	push	de
      00267F CDr00r00              8677 	call	___memcpy
      002682 E8 06                 8678 	add	sp, #6
                                   8679 ;src/main.c:890: enemyOptions[4] = bigblob;
      002684 11 10 00              8680 	ld	de, #0x0010
      002687 D5                    8681 	push	de
      002688 11r40r00              8682 	ld	de, #_bigblob
      00268B D5                    8683 	push	de
      00268C 11r40r00              8684 	ld	de, #(_enemyOptions + 64)
      00268F D5                    8685 	push	de
      002690 CDr00r00              8686 	call	___memcpy
      002693 E8 06                 8687 	add	sp, #6
                                   8688 ;src/main.c:891: }
      002695 C9                    8689 	ret
                                   8690 ;src/main.c:894: void initProjectiles() {
                                   8691 ;	---------------------------------
                                   8692 ; Function initProjectiles
                                   8693 ; ---------------------------------
      002696                       8694 _initProjectiles::
                                   8695 ;src/main.c:895: set_sprite_data(0x20, 17, ProjectileTiles); //TODO NOSTA MÄÄRÄÄ
      002696 11rE8r05              8696 	ld	de, #_ProjectileTiles
      002699 D5                    8697 	push	de
      00269A 21 20 11              8698 	ld	hl, #0x1120
      00269D E5                    8699 	push	hl
      00269E CDr00r00              8700 	call	_set_sprite_data
      0026A1 E8 04                 8701 	add	sp, #4
                                   8702 ;src/main.c:897: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0026A3 AF                    8703 	xor	a, a
      0026A4                       8704 00103$:
      0026A4 21r1Er08              8705 	ld	hl, #_PROJECTILECOUNT
      0026A7 4E                    8706 	ld	c, (hl)
      0026A8 B9                    8707 	cp	a, c
      0026A9 D0                    8708 	ret	NC
      0026AA 3C                    8709 	inc	a
                                   8710 ;src/main.c:901: }
      0026AB 18 F7                 8711 	jr	00103$
                                   8712 ;src/main.c:903: void initGame() {
                                   8713 ;	---------------------------------
                                   8714 ; Function initGame
                                   8715 ; ---------------------------------
      0026AD                       8716 _initGame::
                                   8717 ;src/main.c:906: xDir = 0;
      0026AD 21r86r00              8718 	ld	hl, #_xDir
      0026B0 36 00                 8719 	ld	(hl), #0x00
                                   8720 ;src/main.c:907: yDir = -1;
      0026B2 21r87r00              8721 	ld	hl, #_yDir
      0026B5 36 FF                 8722 	ld	(hl), #0xff
                                   8723 ;src/main.c:908: xSpeed = 0;
      0026B7 21r88r00              8724 	ld	hl, #_xSpeed
      0026BA 36 00                 8725 	ld	(hl), #0x00
                                   8726 ;src/main.c:909: ySpeed = 0;
      0026BC 21r89r00              8727 	ld	hl, #_ySpeed
      0026BF 36 00                 8728 	ld	(hl), #0x00
                                   8729 ;src/main.c:912: playerX = 80<<5;
      0026C1 21r8Ar00              8730 	ld	hl, #_playerX
      0026C4 36 00                 8731 	ld	(hl), #0x00
      0026C6 23                    8732 	inc	hl
      0026C7 36 0A                 8733 	ld	(hl), #0x0a
                                   8734 ;src/main.c:913: playerY = 80<<5;
      0026C9 21r8Cr00              8735 	ld	hl, #_playerY
      0026CC 36 00                 8736 	ld	(hl), #0x00
      0026CE 23                    8737 	inc	hl
      0026CF 36 0A                 8738 	ld	(hl), #0x0a
                                   8739 ;src/main.c:915: playerDrawX = 80;
      0026D1 21r8Er00              8740 	ld	hl, #_playerDrawX
      0026D4 36 50                 8741 	ld	(hl), #0x50
                                   8742 ;src/main.c:916: playerDrawY = 80;
      0026D6 21r8Fr00              8743 	ld	hl, #_playerDrawY
      0026D9 36 50                 8744 	ld	(hl), #0x50
                                   8745 ;src/main.c:919: bgX = 0;
      0026DB AF                    8746 	xor	a, a
      0026DC 21r90r00              8747 	ld	hl, #_bgX
      0026DF 22                    8748 	ld	(hl+), a
      0026E0 77                    8749 	ld	(hl), a
                                   8750 ;src/main.c:920: bgY = 0;
      0026E1 AF                    8751 	xor	a, a
      0026E2 21r92r00              8752 	ld	hl, #_bgY
      0026E5 22                    8753 	ld	(hl+), a
      0026E6 77                    8754 	ld	(hl), a
                                   8755 ;src/main.c:922: hull = maxHull;
      0026E7 FAr20r08              8756 	ld	a, (#_maxHull)
      0026EA EArDDr00              8757 	ld	(#_hull),a
                                   8758 ;src/main.c:923: shield = maxShield;
      0026ED FAr21r08              8759 	ld	a, (#_maxShield)
      0026F0 EArDEr00              8760 	ld	(#_shield),a
                                   8761 ;src/main.c:925: DISPLAY_ON;
      0026F3 F0r00                 8762 	ldh	a, (_LCDC_REG + 0)
      0026F5 F6 80                 8763 	or	a, #0x80
      0026F7 E0r00                 8764 	ldh	(_LCDC_REG + 0), a
                                   8765 ;src/main.c:926: SPRITES_8x16;
      0026F9 F0r00                 8766 	ldh	a, (_LCDC_REG + 0)
      0026FB F6 04                 8767 	or	a, #0x04
      0026FD E0r00                 8768 	ldh	(_LCDC_REG + 0), a
                                   8769 ;src/main.c:927: set_sprite_data(0, 12, Player1);
      0026FF 11r08r07              8770 	ld	de, #_Player1
      002702 D5                    8771 	push	de
      002703 21 00 0C              8772 	ld	hl, #0xc00
      002706 E5                    8773 	push	hl
      002707 CDr00r00              8774 	call	_set_sprite_data
      00270A E8 04                 8775 	add	sp, #4
                                   8776 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00270C 21r02r00              8777 	ld	hl, #(_shadow_OAM + 2)
      00270F 36 00                 8778 	ld	(hl), #0x00
      002711 21r06r00              8779 	ld	hl, #(_shadow_OAM + 6)
      002714 36 02                 8780 	ld	(hl), #0x02
                                   8781 ;src/main.c:933: SHOW_SPRITES;
      002716 F0r00                 8782 	ldh	a, (_LCDC_REG + 0)
      002718 F6 02                 8783 	or	a, #0x02
      00271A E0r00                 8784 	ldh	(_LCDC_REG + 0), a
                                   8785 ;src/main.c:937: font_init();
      00271C CDr00r00              8786 	call	_font_init
                                   8787 ;src/main.c:939: min_font = font_load(font_min); // 36 tiles of characters
      00271F 11r00r00              8788 	ld	de, #_font_min
      002722 D5                    8789 	push	de
      002723 CDr00r00              8790 	call	_font_load
      002726 E1                    8791 	pop	hl
      002727 21rDFr00              8792 	ld	hl, #_min_font
      00272A 7B                    8793 	ld	a, e
      00272B 22                    8794 	ld	(hl+), a
                                   8795 ;src/main.c:940: font_set(min_font);
      00272C 7A                    8796 	ld	a, d
      00272D 32                    8797 	ld	(hl-), a
      00272E 2A                    8798 	ld	a, (hl+)
      00272F 5F                    8799 	ld	e, a
      002730 56                    8800 	ld	d, (hl)
      002731 D5                    8801 	push	de
      002732 CDr00r00              8802 	call	_font_set
      002735 E1                    8803 	pop	hl
                                   8804 ;src/main.c:941: set_win_tiles(1,0,4,1,hullabel);
      002736 11r00r00              8805 	ld	de, #_hullabel
      002739 D5                    8806 	push	de
      00273A 21 04 01              8807 	ld	hl, #0x104
      00273D E5                    8808 	push	hl
      00273E 21 01 00              8809 	ld	hl, #0x01
      002741 E5                    8810 	push	hl
      002742 CDr00r00              8811 	call	_set_win_tiles
      002745 E8 06                 8812 	add	sp, #6
                                   8813 ;src/main.c:942: set_win_tiles(1,1,4,1,shieldlabel);
      002747 11r04r00              8814 	ld	de, #_shieldlabel
      00274A D5                    8815 	push	de
      00274B 21 04 01              8816 	ld	hl, #0x104
      00274E E5                    8817 	push	hl
      00274F 21 01 01              8818 	ld	hl, #0x101
      002752 E5                    8819 	push	hl
      002753 CDr00r00              8820 	call	_set_win_tiles
      002756 E8 06                 8821 	add	sp, #6
                                   8822 ;src/main.c:947: set_bkg_data(0x50,1,healthblock);
      002758 11r07r05              8823 	ld	de, #_healthblock
      00275B D5                    8824 	push	de
      00275C 21 50 01              8825 	ld	hl, #0x150
      00275F E5                    8826 	push	hl
      002760 CDr00r00              8827 	call	_set_bkg_data
      002763 E8 04                 8828 	add	sp, #4
                                   8829 ;src/main.c:949: setHealthBar(0, hull);
      002765 FArDDr00              8830 	ld	a, (#_hull)
      002768 67                    8831 	ld	h, a
      002769 2E 00                 8832 	ld	l, #0x00
      00276B E5                    8833 	push	hl
      00276C CDr23r08              8834 	call	_setHealthBar
      00276F E1                    8835 	pop	hl
                                   8836 ;src/main.c:950: setHealthBar(1, shield);
      002770 FArDEr00              8837 	ld	a, (#_shield)
      002773 67                    8838 	ld	h, a
      002774 2E 01                 8839 	ld	l, #0x01
      002776 E5                    8840 	push	hl
      002777 CDr23r08              8841 	call	_setHealthBar
      00277A E1                    8842 	pop	hl
                                   8843 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      00277B 3E 07                 8844 	ld	a, #0x07
      00277D E0r00                 8845 	ldh	(_WX_REG + 0), a
      00277F 3E 7E                 8846 	ld	a, #0x7e
      002781 E0r00                 8847 	ldh	(_WY_REG + 0), a
                                   8848 ;src/main.c:957: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      002783 11r87r04              8849 	ld	de, #_backgroundtiles
      002786 D5                    8850 	push	de
      002787 21 25 08              8851 	ld	hl, #0x825
      00278A E5                    8852 	push	hl
      00278B CDr00r00              8853 	call	_set_bkg_data
      00278E E8 04                 8854 	add	sp, #4
                                   8855 ;src/main.c:958: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      002790 11r87r00              8856 	ld	de, #_background1
      002793 D5                    8857 	push	de
      002794 21 20 20              8858 	ld	hl, #0x2020
      002797 E5                    8859 	push	hl
      002798 AF                    8860 	xor	a, a
      002799 0F                    8861 	rrca
      00279A F5                    8862 	push	af
      00279B CDr00r00              8863 	call	_set_bkg_tiles
      00279E E8 06                 8864 	add	sp, #6
                                   8865 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0027A0 AF                    8866 	xor	a, a
      0027A1 E0r00                 8867 	ldh	(_SCX_REG + 0), a
      0027A3 AF                    8868 	xor	a, a
      0027A4 E0r00                 8869 	ldh	(_SCY_REG + 0), a
                                   8870 ;src/main.c:964: set_bkg_data(0x51, 18, ProjectileTiles);
      0027A6 11rE8r05              8871 	ld	de, #_ProjectileTiles
      0027A9 D5                    8872 	push	de
      0027AA 21 51 12              8873 	ld	hl, #0x1251
      0027AD E5                    8874 	push	hl
      0027AE CDr00r00              8875 	call	_set_bkg_data
      0027B1 E8 04                 8876 	add	sp, #4
                                   8877 ;src/main.c:966: set_win_tiles(10, 0,4,1,weaponlabel);
      0027B3 11r08r00              8878 	ld	de, #_weaponlabel
      0027B6 D5                    8879 	push	de
      0027B7 21 04 01              8880 	ld	hl, #0x104
      0027BA E5                    8881 	push	hl
      0027BB 21 0A 00              8882 	ld	hl, #0x0a
      0027BE E5                    8883 	push	hl
      0027BF CDr00r00              8884 	call	_set_win_tiles
      0027C2 E8 06                 8885 	add	sp, #6
                                   8886 ;src/main.c:967: set_win_tiles(10, 1,4,1,scorelabel);
      0027C4 11r0Cr00              8887 	ld	de, #_scorelabel
      0027C7 D5                    8888 	push	de
      0027C8 21 04 01              8889 	ld	hl, #0x104
      0027CB E5                    8890 	push	hl
      0027CC 21 0A 01              8891 	ld	hl, #0x10a
      0027CF E5                    8892 	push	hl
      0027D0 CDr00r00              8893 	call	_set_win_tiles
      0027D3 E8 06                 8894 	add	sp, #6
                                   8895 ;src/main.c:969: setGunIcon();
      0027D5 CDrF7r1E              8896 	call	_setGunIcon
                                   8897 ;src/main.c:970: SHOW_BKG;
      0027D8 F0r00                 8898 	ldh	a, (_LCDC_REG + 0)
      0027DA F6 01                 8899 	or	a, #0x01
      0027DC E0r00                 8900 	ldh	(_LCDC_REG + 0), a
                                   8901 ;src/main.c:971: SHOW_WIN;;
      0027DE F0r00                 8902 	ldh	a, (_LCDC_REG + 0)
      0027E0 F6 20                 8903 	or	a, #0x20
      0027E2 E0r00                 8904 	ldh	(_LCDC_REG + 0), a
                                   8905 ;src/main.c:973: bcd = MAKE_BCD(00000);
      0027E4 AF                    8906 	xor	a, a
      0027E5 21rA0r00              8907 	ld	hl, #_bcd
      0027E8 22                    8908 	ld	(hl+), a
      0027E9 22                    8909 	ld	(hl+), a
      0027EA 22                    8910 	ld	(hl+), a
      0027EB 77                    8911 	ld	(hl), a
                                   8912 ;src/main.c:974: updateScore();
                                   8913 ;src/main.c:975: }
      0027EC C3r34r09              8914 	jp	_updateScore
                                   8915 ;src/main.c:977: void main(){
                                   8916 ;	---------------------------------
                                   8917 ; Function main
                                   8918 ; ---------------------------------
      0027EF                       8919 _main::
                                   8920 ;src/main.c:980: initEnemyOptions();
      0027EF CDr40r26              8921 	call	_initEnemyOptions
                                   8922 ;src/main.c:983: STAT_REG = 0x45;
      0027F2 3E 45                 8923 	ld	a, #0x45
      0027F4 E0r00                 8924 	ldh	(_STAT_REG + 0), a
                                   8925 ;src/main.c:984: LYC_REG = 0x7e; //line 126
      0027F6 3E 7E                 8926 	ld	a, #0x7e
      0027F8 E0r00                 8927 	ldh	(_LYC_REG + 0), a
                                   8928 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0027FA F3                    8929 	di
                                   8930 ;src/main.c:986: add_LCD(interruptLCD);
      0027FB 11r00r00              8931 	ld	de, #_interruptLCD
      0027FE D5                    8932 	push	de
      0027FF CDr00r00              8933 	call	_add_LCD
      002802 33                    8934 	inc	sp
      002803 33                    8935 	inc	sp
                                   8936 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      002804 FB                    8937 	ei
                                   8938 ;src/main.c:988: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      002805 3E 03                 8939 	ld	a, #0x03
      002807 F5                    8940 	push	af
      002808 33                    8941 	inc	sp
      002809 CDr00r00              8942 	call	_set_interrupts
      00280C 33                    8943 	inc	sp
                                   8944 ;src/main.c:992: NR52_REG = 0x80; // sound on 
      00280D 3E 80                 8945 	ld	a, #0x80
      00280F E0r00                 8946 	ldh	(_NR52_REG + 0), a
                                   8947 ;src/main.c:993: NR50_REG = 0x77; // volume
      002811 3E 77                 8948 	ld	a, #0x77
      002813 E0r00                 8949 	ldh	(_NR50_REG + 0), a
                                   8950 ;src/main.c:994: NR51_REG = 0xFF; // all channels
      002815 3E FF                 8951 	ld	a, #0xff
      002817 E0r00                 8952 	ldh	(_NR51_REG + 0), a
                                   8953 ;src/main.c:998: waitpad(J_A);
      002819 3E 10                 8954 	ld	a, #0x10
      00281B F5                    8955 	push	af
      00281C 33                    8956 	inc	sp
      00281D CDr00r00              8957 	call	_waitpad
      002820 33                    8958 	inc	sp
                                   8959 ;src/main.c:999: uint16_t seed = LY_REG;
      002821 F0r00                 8960 	ldh	a, (_LY_REG + 0)
      002823 4F                    8961 	ld	c, a
      002824 06 00                 8962 	ld	b, #0x00
                                   8963 ;src/main.c:1000: seed |= (uint16_t)DIV_REG << 8;
      002826 F0r00                 8964 	ldh	a, (_DIV_REG + 0)
      002828 5F                    8965 	ld	e, a
      002829 AF                    8966 	xor	a, a
      00282A B1                    8967 	or	a, c
      00282B 4F                    8968 	ld	c, a
      00282C 7B                    8969 	ld	a, e
      00282D B0                    8970 	or	a, b
      00282E 47                    8971 	ld	b, a
                                   8972 ;src/main.c:1001: initrand(seed);
      00282F C5                    8973 	push	bc
      002830 CDr00r00              8974 	call	_initrand
      002833 E1                    8975 	pop	hl
                                   8976 ;src/main.c:1006: initGame();
      002834 CDrADr26              8977 	call	_initGame
                                   8978 ;src/main.c:1007: initEnemies(1);
      002837 3E 01                 8979 	ld	a, #0x01
      002839 F5                    8980 	push	af
      00283A 33                    8981 	inc	sp
      00283B CDr04r0C              8982 	call	_initEnemies
      00283E 33                    8983 	inc	sp
                                   8984 ;src/main.c:1008: initProjectiles();
      00283F CDr96r26              8985 	call	_initProjectiles
                                   8986 ;src/main.c:1010: while(1) {
      002842                       8987 00114$:
                                   8988 ;src/main.c:1011: SHOW_SPRITES;
      002842 F0r00                 8989 	ldh	a, (_LCDC_REG + 0)
      002844 F6 02                 8990 	or	a, #0x02
      002846 E0r00                 8991 	ldh	(_LCDC_REG + 0), a
                                   8992 ;src/main.c:1013: joydata = joypad(); // query for button states
      002848 CDr00r00              8993 	call	_joypad
      00284B 21rDCr00              8994 	ld	hl, #_joydata
      00284E 73                    8995 	ld	(hl), e
                                   8996 ;src/main.c:1015: updateDirection(); // set player direction
      00284F CDr77r09              8997 	call	_updateDirection
                                   8998 ;src/main.c:1018: move(); 
      002852 CDr1Er16              8999 	call	_move
                                   9000 ;src/main.c:1020: updateEnemyPositions();
      002855 CDrAFr0D              9001 	call	_updateEnemyPositions
                                   9002 ;src/main.c:1023: checkCollision(); 
      002858 CDrA6r1B              9003 	call	_checkCollision
                                   9004 ;src/main.c:774: if (shield < maxShield) {
      00285B 21r21r08              9005 	ld	hl, #_maxShield
      00285E 4E                    9006 	ld	c, (hl)
      00285F 59                    9007 	ld	e, c
      002860 21rDEr00              9008 	ld	hl, #_shield
      002863 56                    9009 	ld	d, (hl)
      002864 7E                    9010 	ld	a, (hl)
      002865 91                    9011 	sub	a, c
      002866 CB 7B                 9012 	bit	7, e
      002868 28 07                 9013 	jr	Z, 00171$
      00286A CB 7A                 9014 	bit	7, d
      00286C 20 08                 9015 	jr	NZ, 00172$
      00286E BF                    9016 	cp	a, a
      00286F 18 05                 9017 	jr	00172$
      002871                       9018 00171$:
      002871 CB 7A                 9019 	bit	7, d
      002873 28 01                 9020 	jr	Z, 00172$
      002875 37                    9021 	scf
      002876                       9022 00172$:
      002876 30 04                 9023 	jr	NC, 00122$
                                   9024 ;src/main.c:775: shield += 1;
      002878 21rDEr00              9025 	ld	hl, #_shield
      00287B 34                    9026 	inc	(hl)
      00287C                       9027 00122$:
                                   9028 ;src/main.c:777: setHealthBar(0, hull);
      00287C FArDDr00              9029 	ld	a, (#_hull)
      00287F 67                    9030 	ld	h, a
      002880 2E 00                 9031 	ld	l, #0x00
      002882 E5                    9032 	push	hl
      002883 CDr23r08              9033 	call	_setHealthBar
      002886 E1                    9034 	pop	hl
                                   9035 ;src/main.c:778: setHealthBar(1, shield);
      002887 FArDEr00              9036 	ld	a, (#_shield)
      00288A 67                    9037 	ld	h, a
      00288B 2E 01                 9038 	ld	l, #0x01
      00288D E5                    9039 	push	hl
      00288E CDr23r08              9040 	call	_setHealthBar
      002891 E1                    9041 	pop	hl
                                   9042 ;src/main.c:1028: if (joydata & J_B && fireCooldown == 0) {
      002892 FArDCr00              9043 	ld	a, (#_joydata)
      002895 CB 6F                 9044 	bit	5, a
      002897 28 09                 9045 	jr	Z, 00102$
      002899 FAr85r00              9046 	ld	a, (#_fireCooldown)
      00289C B7                    9047 	or	a, a
      00289D 20 03                 9048 	jr	NZ, 00102$
                                   9049 ;src/main.c:1029: fire();
      00289F CDr12r1F              9050 	call	_fire
      0028A2                       9051 00102$:
                                   9052 ;src/main.c:1031: if (fireCooldown > 0) {
      0028A2 21r85r00              9053 	ld	hl, #_fireCooldown
      0028A5 7E                    9054 	ld	a, (hl)
      0028A6 B7                    9055 	or	a, a
      0028A7 28 01                 9056 	jr	Z, 00105$
                                   9057 ;src/main.c:1032: --fireCooldown;
      0028A9 35                    9058 	dec	(hl)
      0028AA                       9059 00105$:
                                   9060 ;src/main.c:1035: if (joydata & J_SELECT && switchDelay == 0) {
      0028AA FArDCr00              9061 	ld	a, (#_joydata)
      0028AD CB 77                 9062 	bit	6, a
      0028AF 28 1F                 9063 	jr	Z, 00109$
      0028B1 FAr9Ar00              9064 	ld	a, (#_switchDelay)
      0028B4 B7                    9065 	or	a, a
      0028B5 20 19                 9066 	jr	NZ, 00109$
                                   9067 ;src/main.c:1036: currentGun++;
      0028B7 21r99r00              9068 	ld	hl, #_currentGun
      0028BA 34                    9069 	inc	(hl)
                                   9070 ;src/main.c:1037: if (currentGun >= GUNCOUNT) {
      0028BB 21r22r08              9071 	ld	hl, #_GUNCOUNT
      0028BE 4E                    9072 	ld	c, (hl)
      0028BF 21r99r00              9073 	ld	hl, #_currentGun
      0028C2 7E                    9074 	ld	a, (hl)
      0028C3 91                    9075 	sub	a, c
      0028C4 38 02                 9076 	jr	C, 00107$
                                   9077 ;src/main.c:1038: currentGun = 0;
      0028C6 36 00                 9078 	ld	(hl), #0x00
      0028C8                       9079 00107$:
                                   9080 ;src/main.c:1040: setGunIcon();
      0028C8 CDrF7r1E              9081 	call	_setGunIcon
                                   9082 ;src/main.c:1041: switchDelay = 30;
      0028CB 21r9Ar00              9083 	ld	hl, #_switchDelay
      0028CE 36 1E                 9084 	ld	(hl), #0x1e
      0028D0                       9085 00109$:
                                   9086 ;src/main.c:1043: if (switchDelay != 0) {
      0028D0 21r9Ar00              9087 	ld	hl, #_switchDelay
      0028D3 7E                    9088 	ld	a, (hl)
      0028D4 B7                    9089 	or	a, a
      0028D5 28 01                 9090 	jr	Z, 00112$
                                   9091 ;src/main.c:1044: switchDelay--;
      0028D7 35                    9092 	dec	(hl)
      0028D8                       9093 00112$:
                                   9094 ;src/main.c:1046: moveProjectiles();
      0028D8 CDrE1r24              9095 	call	_moveProjectiles
                                   9096 ;src/main.c:1058: SHOW_WIN;	
      0028DB F0r00                 9097 	ldh	a, (_LCDC_REG + 0)
      0028DD F6 20                 9098 	or	a, #0x20
      0028DF E0r00                 9099 	ldh	(_LCDC_REG + 0), a
                                   9100 ;src/main.c:1059: wait_vbl_done(); // Idle until next frame
      0028E1 CDr00r00              9101 	call	_wait_vbl_done
                                   9102 ;src/main.c:1064: }
      0028E4 C3r42r28              9103 	jp	00114$
                                   9104 	.area _CODE
                                   9105 	.area _INITIALIZER
      000000                       9106 __xinit__hullabel:
      000000 12                    9107 	.db #0x12	; 18
      000001 1F                    9108 	.db #0x1f	; 31
      000002 16                    9109 	.db #0x16	; 22
      000003 16                    9110 	.db #0x16	; 22
      000004                       9111 __xinit__shieldlabel:
      000004 1D                    9112 	.db #0x1d	; 29
      000005 12                    9113 	.db #0x12	; 18
      000006 16                    9114 	.db #0x16	; 22
      000007 0E                    9115 	.db #0x0e	; 14
      000008                       9116 __xinit__weaponlabel:
      000008 21                    9117 	.db #0x21	; 33
      000009 0F                    9118 	.db #0x0f	; 15
      00000A 1A                    9119 	.db #0x1a	; 26
      00000B 18                    9120 	.db #0x18	; 24
      00000C                       9121 __xinit__scorelabel:
      00000C 1D                    9122 	.db #0x1d	; 29
      00000D 0D                    9123 	.db #0x0d	; 13
      00000E 1C                    9124 	.db #0x1c	; 28
      00000F 0F                    9125 	.db #0x0f	; 15
      000010                       9126 __xinit__blob:
      000010 00 00                 9127 	.dw #0x0000
      000012 00 00                 9128 	.dw #0x0000
      000014 00                    9129 	.db #0x00	;  0
      000015 00                    9130 	.db #0x00	;  0
      000016 40                    9131 	.db #0x40	; 64
      000017 00                    9132 	.db #0x00	; 0
      000018 01                    9133 	.db #0x01	; 1
      000019 01                    9134 	.db #0x01	; 1
      00001A 01                    9135 	.db #0x01	; 1
      00001B 32                    9136 	.db #0x32	; 50	'2'
      00001C 03                    9137 	.db #0x03	;  3
      00001D 01                    9138 	.db #0x01	; 1
      00001E 00                    9139 	.db #0x00	;  0
      00001F 00                    9140 	.db #0x00	;  0
      000020                       9141 __xinit__bomb:
      000020 00 00                 9142 	.dw #0x0000
      000022 00 00                 9143 	.dw #0x0000
      000024 00                    9144 	.db #0x00	;  0
      000025 00                    9145 	.db #0x00	;  0
      000026 42                    9146 	.db #0x42	; 66	'B'
      000027 00                    9147 	.db #0x00	; 0
      000028 01                    9148 	.db #0x01	; 1
      000029 01                    9149 	.db #0x01	; 1
      00002A 01                    9150 	.db #0x01	; 1
      00002B 32                    9151 	.db #0x32	; 50	'2'
      00002C 05                    9152 	.db #0x05	;  5
      00002D 01                    9153 	.db #0x01	; 1
      00002E 00                    9154 	.db #0x00	;  0
      00002F 00                    9155 	.db #0x00	;  0
      000030                       9156 __xinit__miniship:
      000030 00 00                 9157 	.dw #0x0000
      000032 00 00                 9158 	.dw #0x0000
      000034 00                    9159 	.db #0x00	;  0
      000035 00                    9160 	.db #0x00	;  0
      000036 44                    9161 	.db #0x44	; 68	'D'
      000037 00                    9162 	.db #0x00	; 0
      000038 01                    9163 	.db #0x01	; 1
      000039 01                    9164 	.db #0x01	; 1
      00003A 01                    9165 	.db #0x01	; 1
      00003B 32                    9166 	.db #0x32	; 50	'2'
      00003C 05                    9167 	.db #0x05	;  5
      00003D 01                    9168 	.db #0x01	; 1
      00003E 00                    9169 	.db #0x00	;  0
      00003F 00                    9170 	.db #0x00	;  0
      000040                       9171 __xinit__bigblob:
      000040 00 00                 9172 	.dw #0x0000
      000042 00 00                 9173 	.dw #0x0000
      000044 00                    9174 	.db #0x00	;  0
      000045 00                    9175 	.db #0x00	;  0
      000046 50                    9176 	.db #0x50	; 80	'P'
      000047 52                    9177 	.db #0x52	; 82	'R'
      000048 02                    9178 	.db #0x02	; 2
      000049 01                    9179 	.db #0x01	; 1
      00004A 01                    9180 	.db #0x01	; 1
      00004B 32                    9181 	.db #0x32	; 50	'2'
      00004C 03                    9182 	.db #0x03	;  3
      00004D 01                    9183 	.db #0x01	; 1
      00004E 00                    9184 	.db #0x00	;  0
      00004F 00                    9185 	.db #0x00	;  0
      000050                       9186 __xinit__shieldship:
      000050 00 00                 9187 	.dw #0x0000
      000052 00 00                 9188 	.dw #0x0000
      000054 00                    9189 	.db #0x00	;  0
      000055 00                    9190 	.db #0x00	;  0
      000056 54                    9191 	.db #0x54	; 84	'T'
      000057 56                    9192 	.db #0x56	; 86	'V'
      000058 02                    9193 	.db #0x02	; 2
      000059 01                    9194 	.db #0x01	; 1
      00005A 01                    9195 	.db #0x01	; 1
      00005B 32                    9196 	.db #0x32	; 50	'2'
      00005C 03                    9197 	.db #0x03	;  3
      00005D 01                    9198 	.db #0x01	; 1
      00005E 00                    9199 	.db #0x00	;  0
      00005F 00                    9200 	.db #0x00	;  0
      000060                       9201 __xinit__singleGun:
      000060 00 00                 9202 	.dw #0x0000
      000062 00 00                 9203 	.dw #0x0000
      000064 00                    9204 	.db #0x00	;  0
      000065 00                    9205 	.db #0x00	;  0
      000066 FF                    9206 	.db #0xff	; -1
      000067 02                    9207 	.db #0x02	; 2
      000068 00                    9208 	.db #0x00	; 0
      000069 01                    9209 	.db #0x01	; 1
      00006A 0F                    9210 	.db #0x0f	; 15
      00006B 20                    9211 	.db #0x20	; 32
      00006C                       9212 __xinit__doubleGun:
      00006C 00 00                 9213 	.dw #0x0000
      00006E 00 00                 9214 	.dw #0x0000
      000070 00                    9215 	.db #0x00	;  0
      000071 00                    9216 	.db #0x00	;  0
      000072 FF                    9217 	.db #0xff	; -1
      000073 02                    9218 	.db #0x02	; 2
      000074 00                    9219 	.db #0x00	; 0
      000075 01                    9220 	.db #0x01	; 1
      000076 0F                    9221 	.db #0x0f	; 15
      000077 26                    9222 	.db #0x26	; 38
      000078                       9223 __xinit__missile:
      000078 00 00                 9224 	.dw #0x0000
      00007A 00 00                 9225 	.dw #0x0000
      00007C 00                    9226 	.db #0x00	;  0
      00007D 00                    9227 	.db #0x00	;  0
      00007E FF                    9228 	.db #0xff	; -1
      00007F 01                    9229 	.db #0x01	; 1
      000080 00                    9230 	.db #0x00	; 0
      000081 01                    9231 	.db #0x01	; 1
      000082 1E                    9232 	.db #0x1e	; 30
      000083 2C                    9233 	.db #0x2c	; 44
      000084                       9234 __xinit__oldestProjectile:
      000084 00                    9235 	.db #0x00	; 0
      000085                       9236 __xinit__fireCooldown:
      000085 00                    9237 	.db #0x00	; 0
      000086                       9238 __xinit__xDir:
      000086 00                    9239 	.db #0x00	;  0
      000087                       9240 __xinit__yDir:
      000087 FF                    9241 	.db #0xff	; -1
      000088                       9242 __xinit__xSpeed:
      000088 00                    9243 	.db #0x00	;  0
      000089                       9244 __xinit__ySpeed:
      000089 00                    9245 	.db #0x00	;  0
      00008A                       9246 __xinit__playerX:
      00008A 00 0A                 9247 	.dw #0x0a00
      00008C                       9248 __xinit__playerY:
      00008C 00 0A                 9249 	.dw #0x0a00
      00008E                       9250 __xinit__playerDrawX:
      00008E 50                    9251 	.db #0x50	; 80	'P'
      00008F                       9252 __xinit__playerDrawY:
      00008F 50                    9253 	.db #0x50	; 80	'P'
      000090                       9254 __xinit__bgX:
      000090 00 00                 9255 	.dw #0x0000
      000092                       9256 __xinit__bgY:
      000092 00 00                 9257 	.dw #0x0000
      000094                       9258 __xinit__xOverflow:
      000094 00 00                 9259 	.dw #0x0000
      000096                       9260 __xinit__yOverflow:
      000096 00 00                 9261 	.dw #0x0000
      000098                       9262 __xinit__enemyCollisionCount:
      000098 00                    9263 	.db #0x00	; 0
      000099                       9264 __xinit__currentGun:
      000099 00                    9265 	.db #0x00	; 0
      00009A                       9266 __xinit__switchDelay:
      00009A 00                    9267 	.db #0x00	; 0
      00009B                       9268 __xinit__gunMap:
      00009B 53                    9269 	.db #0x53	; 83	'S'
      00009C 5B                    9270 	.db #0x5b	; 91
      00009D 61                    9271 	.db #0x61	; 97	'a'
      00009E                       9272 __xinit__score:
      00009E 00 00                 9273 	.dw #0x0000
      0000A0                       9274 __xinit__bcd:
      0000A0 00 00 00 00           9275 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000A4                       9276 __xinit__INCREMENT:
      0000A4 01 00 00 00           9277 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   9278 	.area _CABS (ABS)
