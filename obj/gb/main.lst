                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickEx
                                     16 	.globl _tickPickups
                                     17 	.globl _moveProjectiles
                                     18 	.globl _fire
                                     19 	.globl _setGunIcon
                                     20 	.globl _checkCollision
                                     21 	.globl _killEnemy
                                     22 	.globl _spawnPickup
                                     23 	.globl _takeDamage
                                     24 	.globl _move
                                     25 	.globl _updateEnemyPositions
                                     26 	.globl _initEnemies
                                     27 	.globl _playSound
                                     28 	.globl _updateDirection
                                     29 	.globl _incrementScore
                                     30 	.globl _updateMissileCount
                                     31 	.globl _updateScore
                                     32 	.globl _setHealthBar
                                     33 	.globl _interruptLCD
                                     34 	.globl _bcd2text
                                     35 	.globl _bcd_sub
                                     36 	.globl _bcd_add
                                     37 	.globl _rand
                                     38 	.globl _initrand
                                     39 	.globl _font_set
                                     40 	.globl _font_load
                                     41 	.globl _font_init
                                     42 	.globl _set_sprite_data
                                     43 	.globl _set_win_tiles
                                     44 	.globl _set_bkg_tiles
                                     45 	.globl _set_bkg_data
                                     46 	.globl _wait_vbl_done
                                     47 	.globl _set_interrupts
                                     48 	.globl _waitpad
                                     49 	.globl _joypad
                                     50 	.globl _add_LCD
                                     51 	.globl _exTick
                                     52 	.globl _exTiles
                                     53 	.globl _oldestEx
                                     54 	.globl _INCREMENT
                                     55 	.globl _SCORE
                                     56 	.globl _score
                                     57 	.globl _gunMap
                                     58 	.globl _switchDelay
                                     59 	.globl _MISSILES
                                     60 	.globl _missiles
                                     61 	.globl _currentGun
                                     62 	.globl _gunLevel
                                     63 	.globl _enemyCollisionCount
                                     64 	.globl _yOverflow
                                     65 	.globl _xOverflow
                                     66 	.globl _bgY
                                     67 	.globl _bgX
                                     68 	.globl _playerDrawY
                                     69 	.globl _playerDrawX
                                     70 	.globl _playerY
                                     71 	.globl _playerX
                                     72 	.globl _ySpeed
                                     73 	.globl _xSpeed
                                     74 	.globl _yDir
                                     75 	.globl _xDir
                                     76 	.globl _fireCooldown
                                     77 	.globl _oldestProjectile
                                     78 	.globl _missile
                                     79 	.globl _doubleGun
                                     80 	.globl _singleGun
                                     81 	.globl _shieldship
                                     82 	.globl _bigblob
                                     83 	.globl _miniship
                                     84 	.globl _bomb
                                     85 	.globl _blob
                                     86 	.globl _scorelabel
                                     87 	.globl _weaponlabel
                                     88 	.globl _shieldlabel
                                     89 	.globl _hullabel
                                     90 	.globl _explosions
                                     91 	.globl _pickup
                                     92 	.globl _min_font
                                     93 	.globl _shield
                                     94 	.globl _hull
                                     95 	.globl _joydata
                                     96 	.globl _projectiles
                                     97 	.globl _enemies
                                     98 	.globl _enemyOptions
                                     99 	.globl _EXTICKFREQUENCY
                                    100 	.globl _exTileCount
                                    101 	.globl _EXPLFRAMETIME
                                    102 	.globl _exCount
                                    103 	.globl _SPLASHDROPOFF
                                    104 	.globl _MAXGUNLEVEL
                                    105 	.globl _maxShield
                                    106 	.globl _maxHull
                                    107 	.globl _PLAYERSIZE
                                    108 	.globl _PROJECTILECOUNT
                                    109 	.globl _ySpawnPositions
                                    110 	.globl _xSpawnPositions
                                    111 	.globl _ENEMYCOUNT
                                    112 	.globl _EMPTYSPRITE
                                    113 	.globl _BLANK
                                    114 	.globl _BLANKSIZE
                                    115 	.globl _Ex3
                                    116 	.globl _Ex2
                                    117 	.globl _Ex1
                                    118 	.globl _ex
                                    119 	.globl _Player1
                                    120 	.globl _Pickups
                                    121 	.globl _health
                                    122 	.globl _ammo
                                    123 	.globl _upgrade
                                    124 	.globl _ProjectileTiles
                                    125 	.globl _largeenemies
                                    126 	.globl _enemy1
                                    127 	.globl _enemyOptionCount
                                    128 	.globl _healthblock
                                    129 	.globl _backgroundtiles
                                    130 	.globl _background1
                                    131 	.globl _cross
                                    132 ;--------------------------------------------------------
                                    133 ; special function registers
                                    134 ;--------------------------------------------------------
                                    135 ;--------------------------------------------------------
                                    136 ; ram data
                                    137 ;--------------------------------------------------------
                                    138 	.area _DATA
      000000                        139 _enemyOptions::
      000000                        140 	.ds 90
      00005A                        141 _enemies::
      00005A                        142 	.ds 90
      0000B4                        143 _projectiles::
      0000B4                        144 	.ds 65
      0000F5                        145 _joydata::
      0000F5                        146 	.ds 1
      0000F6                        147 _hull::
      0000F6                        148 	.ds 1
      0000F7                        149 _shield::
      0000F7                        150 	.ds 1
      0000F8                        151 _min_font::
      0000F8                        152 	.ds 2
      0000FA                        153 _pickup::
      0000FA                        154 	.ds 9
      000103                        155 _explosions::
      000103                        156 	.ds 18
                                    157 ;--------------------------------------------------------
                                    158 ; ram data
                                    159 ;--------------------------------------------------------
                                    160 	.area _INITIALIZED
      000000                        161 _hullabel::
      000000                        162 	.ds 4
      000004                        163 _shieldlabel::
      000004                        164 	.ds 4
      000008                        165 _weaponlabel::
      000008                        166 	.ds 4
      00000C                        167 _scorelabel::
      00000C                        168 	.ds 4
      000010                        169 _blob::
      000010                        170 	.ds 18
      000022                        171 _bomb::
      000022                        172 	.ds 18
      000034                        173 _miniship::
      000034                        174 	.ds 18
      000046                        175 _bigblob::
      000046                        176 	.ds 18
      000058                        177 _shieldship::
      000058                        178 	.ds 18
      00006A                        179 _singleGun::
      00006A                        180 	.ds 13
      000077                        181 _doubleGun::
      000077                        182 	.ds 13
      000084                        183 _missile::
      000084                        184 	.ds 13
      000091                        185 _oldestProjectile::
      000091                        186 	.ds 1
      000092                        187 _fireCooldown::
      000092                        188 	.ds 1
      000093                        189 _xDir::
      000093                        190 	.ds 1
      000094                        191 _yDir::
      000094                        192 	.ds 1
      000095                        193 _xSpeed::
      000095                        194 	.ds 1
      000096                        195 _ySpeed::
      000096                        196 	.ds 1
      000097                        197 _playerX::
      000097                        198 	.ds 2
      000099                        199 _playerY::
      000099                        200 	.ds 2
      00009B                        201 _playerDrawX::
      00009B                        202 	.ds 1
      00009C                        203 _playerDrawY::
      00009C                        204 	.ds 1
      00009D                        205 _bgX::
      00009D                        206 	.ds 2
      00009F                        207 _bgY::
      00009F                        208 	.ds 2
      0000A1                        209 _xOverflow::
      0000A1                        210 	.ds 2
      0000A3                        211 _yOverflow::
      0000A3                        212 	.ds 2
      0000A5                        213 _enemyCollisionCount::
      0000A5                        214 	.ds 1
      0000A6                        215 _gunLevel::
      0000A6                        216 	.ds 1
      0000A7                        217 _currentGun::
      0000A7                        218 	.ds 1
      0000A8                        219 _missiles::
      0000A8                        220 	.ds 1
      0000A9                        221 _MISSILES::
      0000A9                        222 	.ds 4
      0000AD                        223 _switchDelay::
      0000AD                        224 	.ds 1
      0000AE                        225 _gunMap::
      0000AE                        226 	.ds 3
      0000B1                        227 _score::
      0000B1                        228 	.ds 2
      0000B3                        229 _SCORE::
      0000B3                        230 	.ds 4
      0000B7                        231 _INCREMENT::
      0000B7                        232 	.ds 4
      0000BB                        233 _oldestEx::
      0000BB                        234 	.ds 1
      0000BC                        235 _exTiles::
      0000BC                        236 	.ds 3
      0000BF                        237 _exTick::
      0000BF                        238 	.ds 1
                                    239 ;--------------------------------------------------------
                                    240 ; absolute external ram data
                                    241 ;--------------------------------------------------------
                                    242 	.area _DABS (ABS)
                                    243 ;--------------------------------------------------------
                                    244 ; global & static initialisations
                                    245 ;--------------------------------------------------------
                                    246 	.area _HOME
                                    247 	.area _GSINIT
                                    248 	.area _GSFINAL
                                    249 	.area _GSINIT
                                    250 ;--------------------------------------------------------
                                    251 ; Home
                                    252 ;--------------------------------------------------------
                                    253 	.area _HOME
                                    254 	.area _HOME
                                    255 ;--------------------------------------------------------
                                    256 ; code
                                    257 ;--------------------------------------------------------
                                    258 	.area _CODE
                                    259 ;src/main.c:153: void interruptLCD()
                                    260 ;	---------------------------------
                                    261 ; Function interruptLCD
                                    262 ; ---------------------------------
      000000                        263 _interruptLCD::
                                    264 ;src/main.c:155: HIDE_SPRITES;
      000000 F0r00                  265 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  266 	and	a, #0xfd
      000004 E0r00                  267 	ldh	(_LCDC_REG + 0), a
                                    268 ;src/main.c:156: }
      000006 C9                     269 	ret
      000007                        270 _cross:
      000007 18                     271 	.db #0x18	; 24
      000008 18                     272 	.db #0x18	; 24
      000009 18                     273 	.db #0x18	; 24
      00000A 18                     274 	.db #0x18	; 24
      00000B 3C                     275 	.db #0x3c	; 60
      00000C 3C                     276 	.db #0x3c	; 60
      00000D 3C                     277 	.db #0x3c	; 60
      00000E 3C                     278 	.db #0x3c	; 60
      00000F 7E                     279 	.db #0x7e	; 126
      000010 7E                     280 	.db #0x7e	; 126
      000011 7E                     281 	.db #0x7e	; 126
      000012 7E                     282 	.db #0x7e	; 126
      000013 FF                     283 	.db #0xff	; 255
      000014 FF                     284 	.db #0xff	; 255
      000015 FF                     285 	.db #0xff	; 255
      000016 FF                     286 	.db #0xff	; 255
      000017 0F                     287 	.db #0x0f	; 15
      000018 0F                     288 	.db #0x0f	; 15
      000019 3F                     289 	.db #0x3f	; 63
      00001A 3F                     290 	.db #0x3f	; 63
      00001B FF                     291 	.db #0xff	; 255
      00001C FF                     292 	.db #0xff	; 255
      00001D FF                     293 	.db #0xff	; 255
      00001E FF                     294 	.db #0xff	; 255
      00001F 7E                     295 	.db #0x7e	; 126
      000020 7E                     296 	.db #0x7e	; 126
      000021 3E                     297 	.db #0x3e	; 62
      000022 3E                     298 	.db #0x3e	; 62
      000023 1C                     299 	.db #0x1c	; 28
      000024 1C                     300 	.db #0x1c	; 28
      000025 0C                     301 	.db #0x0c	; 12
      000026 0C                     302 	.db #0x0c	; 12
      000027 C0                     303 	.db #0xc0	; 192
      000028 C0                     304 	.db #0xc0	; 192
      000029 F0                     305 	.db #0xf0	; 240
      00002A F0                     306 	.db #0xf0	; 240
      00002B FC                     307 	.db #0xfc	; 252
      00002C FC                     308 	.db #0xfc	; 252
      00002D FF                     309 	.db #0xff	; 255
      00002E FF                     310 	.db #0xff	; 255
      00002F FF                     311 	.db #0xff	; 255
      000030 FF                     312 	.db #0xff	; 255
      000031 FC                     313 	.db #0xfc	; 252
      000032 FC                     314 	.db #0xfc	; 252
      000033 F0                     315 	.db #0xf0	; 240
      000034 F0                     316 	.db #0xf0	; 240
      000035 C0                     317 	.db #0xc0	; 192
      000036 C0                     318 	.db #0xc0	; 192
      000037 0C                     319 	.db #0x0c	; 12
      000038 0C                     320 	.db #0x0c	; 12
      000039 1C                     321 	.db #0x1c	; 28
      00003A 1C                     322 	.db #0x1c	; 28
      00003B 3E                     323 	.db #0x3e	; 62
      00003C 3E                     324 	.db #0x3e	; 62
      00003D 7E                     325 	.db #0x7e	; 126
      00003E 7E                     326 	.db #0x7e	; 126
      00003F FF                     327 	.db #0xff	; 255
      000040 FF                     328 	.db #0xff	; 255
      000041 FF                     329 	.db #0xff	; 255
      000042 FF                     330 	.db #0xff	; 255
      000043 3F                     331 	.db #0x3f	; 63
      000044 3F                     332 	.db #0x3f	; 63
      000045 0F                     333 	.db #0x0f	; 15
      000046 0F                     334 	.db #0x0f	; 15
      000047 FF                     335 	.db #0xff	; 255
      000048 FF                     336 	.db #0xff	; 255
      000049 FF                     337 	.db #0xff	; 255
      00004A FF                     338 	.db #0xff	; 255
      00004B 7E                     339 	.db #0x7e	; 126
      00004C 7E                     340 	.db #0x7e	; 126
      00004D 7E                     341 	.db #0x7e	; 126
      00004E 7E                     342 	.db #0x7e	; 126
      00004F 3C                     343 	.db #0x3c	; 60
      000050 3C                     344 	.db #0x3c	; 60
      000051 3C                     345 	.db #0x3c	; 60
      000052 3C                     346 	.db #0x3c	; 60
      000053 18                     347 	.db #0x18	; 24
      000054 18                     348 	.db #0x18	; 24
      000055 18                     349 	.db #0x18	; 24
      000056 18                     350 	.db #0x18	; 24
      000057 30                     351 	.db #0x30	; 48	'0'
      000058 30                     352 	.db #0x30	; 48	'0'
      000059 38                     353 	.db #0x38	; 56	'8'
      00005A 38                     354 	.db #0x38	; 56	'8'
      00005B 7C                     355 	.db #0x7c	; 124
      00005C 7C                     356 	.db #0x7c	; 124
      00005D 7E                     357 	.db #0x7e	; 126
      00005E 7E                     358 	.db #0x7e	; 126
      00005F FF                     359 	.db #0xff	; 255
      000060 FF                     360 	.db #0xff	; 255
      000061 FF                     361 	.db #0xff	; 255
      000062 FF                     362 	.db #0xff	; 255
      000063 FC                     363 	.db #0xfc	; 252
      000064 FC                     364 	.db #0xfc	; 252
      000065 F0                     365 	.db #0xf0	; 240
      000066 F0                     366 	.db #0xf0	; 240
      000067 03                     367 	.db #0x03	; 3
      000068 03                     368 	.db #0x03	; 3
      000069 0F                     369 	.db #0x0f	; 15
      00006A 0F                     370 	.db #0x0f	; 15
      00006B 3F                     371 	.db #0x3f	; 63
      00006C 3F                     372 	.db #0x3f	; 63
      00006D FF                     373 	.db #0xff	; 255
      00006E FF                     374 	.db #0xff	; 255
      00006F FF                     375 	.db #0xff	; 255
      000070 FF                     376 	.db #0xff	; 255
      000071 3F                     377 	.db #0x3f	; 63
      000072 3F                     378 	.db #0x3f	; 63
      000073 0F                     379 	.db #0x0f	; 15
      000074 0F                     380 	.db #0x0f	; 15
      000075 03                     381 	.db #0x03	; 3
      000076 03                     382 	.db #0x03	; 3
      000077 F0                     383 	.db #0xf0	; 240
      000078 F0                     384 	.db #0xf0	; 240
      000079 FC                     385 	.db #0xfc	; 252
      00007A FC                     386 	.db #0xfc	; 252
      00007B FF                     387 	.db #0xff	; 255
      00007C FF                     388 	.db #0xff	; 255
      00007D FF                     389 	.db #0xff	; 255
      00007E FF                     390 	.db #0xff	; 255
      00007F 7E                     391 	.db #0x7e	; 126
      000080 7E                     392 	.db #0x7e	; 126
      000081 7C                     393 	.db #0x7c	; 124
      000082 7C                     394 	.db #0x7c	; 124
      000083 38                     395 	.db #0x38	; 56	'8'
      000084 38                     396 	.db #0x38	; 56	'8'
      000085 30                     397 	.db #0x30	; 48	'0'
      000086 30                     398 	.db #0x30	; 48	'0'
      000087                        399 _background1:
      000087 26                     400 	.db #0x26	; 38
      000088 26                     401 	.db #0x26	; 38
      000089 26                     402 	.db #0x26	; 38
      00008A 26                     403 	.db #0x26	; 38
      00008B 26                     404 	.db #0x26	; 38
      00008C 26                     405 	.db #0x26	; 38
      00008D 26                     406 	.db #0x26	; 38
      00008E 26                     407 	.db #0x26	; 38
      00008F 26                     408 	.db #0x26	; 38
      000090 26                     409 	.db #0x26	; 38
      000091 26                     410 	.db #0x26	; 38
      000092 2A                     411 	.db #0x2a	; 42
      000093 29                     412 	.db #0x29	; 41
      000094 26                     413 	.db #0x26	; 38
      000095 26                     414 	.db #0x26	; 38
      000096 26                     415 	.db #0x26	; 38
      000097 26                     416 	.db #0x26	; 38
      000098 26                     417 	.db #0x26	; 38
      000099 26                     418 	.db #0x26	; 38
      00009A 26                     419 	.db #0x26	; 38
      00009B 2C                     420 	.db #0x2c	; 44
      00009C 26                     421 	.db #0x26	; 38
      00009D 26                     422 	.db #0x26	; 38
      00009E 26                     423 	.db #0x26	; 38
      00009F 26                     424 	.db #0x26	; 38
      0000A0 26                     425 	.db #0x26	; 38
      0000A1 26                     426 	.db #0x26	; 38
      0000A2 26                     427 	.db #0x26	; 38
      0000A3 26                     428 	.db #0x26	; 38
      0000A4 26                     429 	.db #0x26	; 38
      0000A5 26                     430 	.db #0x26	; 38
      0000A6 26                     431 	.db #0x26	; 38
      0000A7 26                     432 	.db #0x26	; 38
      0000A8 2B                     433 	.db #0x2b	; 43
      0000A9 26                     434 	.db #0x26	; 38
      0000AA 26                     435 	.db #0x26	; 38
      0000AB 26                     436 	.db #0x26	; 38
      0000AC 26                     437 	.db #0x26	; 38
      0000AD 26                     438 	.db #0x26	; 38
      0000AE 26                     439 	.db #0x26	; 38
      0000AF 26                     440 	.db #0x26	; 38
      0000B0 26                     441 	.db #0x26	; 38
      0000B1 26                     442 	.db #0x26	; 38
      0000B2 26                     443 	.db #0x26	; 38
      0000B3 26                     444 	.db #0x26	; 38
      0000B4 26                     445 	.db #0x26	; 38
      0000B5 26                     446 	.db #0x26	; 38
      0000B6 26                     447 	.db #0x26	; 38
      0000B7 26                     448 	.db #0x26	; 38
      0000B8 26                     449 	.db #0x26	; 38
      0000B9 26                     450 	.db #0x26	; 38
      0000BA 26                     451 	.db #0x26	; 38
      0000BB 26                     452 	.db #0x26	; 38
      0000BC 26                     453 	.db #0x26	; 38
      0000BD 26                     454 	.db #0x26	; 38
      0000BE 26                     455 	.db #0x26	; 38
      0000BF 26                     456 	.db #0x26	; 38
      0000C0 26                     457 	.db #0x26	; 38
      0000C1 26                     458 	.db #0x26	; 38
      0000C2 26                     459 	.db #0x26	; 38
      0000C3 26                     460 	.db #0x26	; 38
      0000C4 26                     461 	.db #0x26	; 38
      0000C5 26                     462 	.db #0x26	; 38
      0000C6 26                     463 	.db #0x26	; 38
      0000C7 26                     464 	.db #0x26	; 38
      0000C8 26                     465 	.db #0x26	; 38
      0000C9 26                     466 	.db #0x26	; 38
      0000CA 26                     467 	.db #0x26	; 38
      0000CB 26                     468 	.db #0x26	; 38
      0000CC 26                     469 	.db #0x26	; 38
      0000CD 26                     470 	.db #0x26	; 38
      0000CE 26                     471 	.db #0x26	; 38
      0000CF 26                     472 	.db #0x26	; 38
      0000D0 26                     473 	.db #0x26	; 38
      0000D1 26                     474 	.db #0x26	; 38
      0000D2 26                     475 	.db #0x26	; 38
      0000D3 26                     476 	.db #0x26	; 38
      0000D4 26                     477 	.db #0x26	; 38
      0000D5 26                     478 	.db #0x26	; 38
      0000D6 26                     479 	.db #0x26	; 38
      0000D7 26                     480 	.db #0x26	; 38
      0000D8 26                     481 	.db #0x26	; 38
      0000D9 26                     482 	.db #0x26	; 38
      0000DA 26                     483 	.db #0x26	; 38
      0000DB 26                     484 	.db #0x26	; 38
      0000DC 26                     485 	.db #0x26	; 38
      0000DD 26                     486 	.db #0x26	; 38
      0000DE 26                     487 	.db #0x26	; 38
      0000DF 26                     488 	.db #0x26	; 38
      0000E0 26                     489 	.db #0x26	; 38
      0000E1 26                     490 	.db #0x26	; 38
      0000E2 26                     491 	.db #0x26	; 38
      0000E3 26                     492 	.db #0x26	; 38
      0000E4 26                     493 	.db #0x26	; 38
      0000E5 26                     494 	.db #0x26	; 38
      0000E6 26                     495 	.db #0x26	; 38
      0000E7 26                     496 	.db #0x26	; 38
      0000E8 26                     497 	.db #0x26	; 38
      0000E9 26                     498 	.db #0x26	; 38
      0000EA 26                     499 	.db #0x26	; 38
      0000EB 26                     500 	.db #0x26	; 38
      0000EC 26                     501 	.db #0x26	; 38
      0000ED 26                     502 	.db #0x26	; 38
      0000EE 26                     503 	.db #0x26	; 38
      0000EF 26                     504 	.db #0x26	; 38
      0000F0 26                     505 	.db #0x26	; 38
      0000F1 26                     506 	.db #0x26	; 38
      0000F2 26                     507 	.db #0x26	; 38
      0000F3 26                     508 	.db #0x26	; 38
      0000F4 26                     509 	.db #0x26	; 38
      0000F5 26                     510 	.db #0x26	; 38
      0000F6 26                     511 	.db #0x26	; 38
      0000F7 26                     512 	.db #0x26	; 38
      0000F8 2B                     513 	.db #0x2b	; 43
      0000F9 26                     514 	.db #0x26	; 38
      0000FA 26                     515 	.db #0x26	; 38
      0000FB 26                     516 	.db #0x26	; 38
      0000FC 26                     517 	.db #0x26	; 38
      0000FD 26                     518 	.db #0x26	; 38
      0000FE 26                     519 	.db #0x26	; 38
      0000FF 2B                     520 	.db #0x2b	; 43
      000100 26                     521 	.db #0x26	; 38
      000101 26                     522 	.db #0x26	; 38
      000102 26                     523 	.db #0x26	; 38
      000103 26                     524 	.db #0x26	; 38
      000104 26                     525 	.db #0x26	; 38
      000105 26                     526 	.db #0x26	; 38
      000106 26                     527 	.db #0x26	; 38
      000107 26                     528 	.db #0x26	; 38
      000108 26                     529 	.db #0x26	; 38
      000109 26                     530 	.db #0x26	; 38
      00010A 26                     531 	.db #0x26	; 38
      00010B 26                     532 	.db #0x26	; 38
      00010C 2B                     533 	.db #0x2b	; 43
      00010D 26                     534 	.db #0x26	; 38
      00010E 26                     535 	.db #0x26	; 38
      00010F 26                     536 	.db #0x26	; 38
      000110 26                     537 	.db #0x26	; 38
      000111 26                     538 	.db #0x26	; 38
      000112 26                     539 	.db #0x26	; 38
      000113 26                     540 	.db #0x26	; 38
      000114 2C                     541 	.db #0x2c	; 44
      000115 26                     542 	.db #0x26	; 38
      000116 26                     543 	.db #0x26	; 38
      000117 26                     544 	.db #0x26	; 38
      000118 26                     545 	.db #0x26	; 38
      000119 26                     546 	.db #0x26	; 38
      00011A 26                     547 	.db #0x26	; 38
      00011B 26                     548 	.db #0x26	; 38
      00011C 26                     549 	.db #0x26	; 38
      00011D 26                     550 	.db #0x26	; 38
      00011E 26                     551 	.db #0x26	; 38
      00011F 26                     552 	.db #0x26	; 38
      000120 26                     553 	.db #0x26	; 38
      000121 26                     554 	.db #0x26	; 38
      000122 26                     555 	.db #0x26	; 38
      000123 26                     556 	.db #0x26	; 38
      000124 26                     557 	.db #0x26	; 38
      000125 26                     558 	.db #0x26	; 38
      000126 26                     559 	.db #0x26	; 38
      000127 26                     560 	.db #0x26	; 38
      000128 26                     561 	.db #0x26	; 38
      000129 2C                     562 	.db #0x2c	; 44
      00012A 26                     563 	.db #0x26	; 38
      00012B 26                     564 	.db #0x26	; 38
      00012C 26                     565 	.db #0x26	; 38
      00012D 26                     566 	.db #0x26	; 38
      00012E 25                     567 	.db #0x25	; 37
      00012F 26                     568 	.db #0x26	; 38
      000130 26                     569 	.db #0x26	; 38
      000131 26                     570 	.db #0x26	; 38
      000132 26                     571 	.db #0x26	; 38
      000133 26                     572 	.db #0x26	; 38
      000134 26                     573 	.db #0x26	; 38
      000135 26                     574 	.db #0x26	; 38
      000136 26                     575 	.db #0x26	; 38
      000137 26                     576 	.db #0x26	; 38
      000138 26                     577 	.db #0x26	; 38
      000139 26                     578 	.db #0x26	; 38
      00013A 26                     579 	.db #0x26	; 38
      00013B 26                     580 	.db #0x26	; 38
      00013C 2C                     581 	.db #0x2c	; 44
      00013D 26                     582 	.db #0x26	; 38
      00013E 26                     583 	.db #0x26	; 38
      00013F 26                     584 	.db #0x26	; 38
      000140 26                     585 	.db #0x26	; 38
      000141 26                     586 	.db #0x26	; 38
      000142 26                     587 	.db #0x26	; 38
      000143 26                     588 	.db #0x26	; 38
      000144 2B                     589 	.db #0x2b	; 43
      000145 26                     590 	.db #0x26	; 38
      000146 26                     591 	.db #0x26	; 38
      000147 26                     592 	.db #0x26	; 38
      000148 26                     593 	.db #0x26	; 38
      000149 26                     594 	.db #0x26	; 38
      00014A 26                     595 	.db #0x26	; 38
      00014B 26                     596 	.db #0x26	; 38
      00014C 26                     597 	.db #0x26	; 38
      00014D 26                     598 	.db #0x26	; 38
      00014E 26                     599 	.db #0x26	; 38
      00014F 26                     600 	.db #0x26	; 38
      000150 26                     601 	.db #0x26	; 38
      000151 26                     602 	.db #0x26	; 38
      000152 26                     603 	.db #0x26	; 38
      000153 26                     604 	.db #0x26	; 38
      000154 26                     605 	.db #0x26	; 38
      000155 26                     606 	.db #0x26	; 38
      000156 26                     607 	.db #0x26	; 38
      000157 26                     608 	.db #0x26	; 38
      000158 26                     609 	.db #0x26	; 38
      000159 26                     610 	.db #0x26	; 38
      00015A 26                     611 	.db #0x26	; 38
      00015B 26                     612 	.db #0x26	; 38
      00015C 26                     613 	.db #0x26	; 38
      00015D 26                     614 	.db #0x26	; 38
      00015E 26                     615 	.db #0x26	; 38
      00015F 26                     616 	.db #0x26	; 38
      000160 2C                     617 	.db #0x2c	; 44
      000161 26                     618 	.db #0x26	; 38
      000162 26                     619 	.db #0x26	; 38
      000163 26                     620 	.db #0x26	; 38
      000164 26                     621 	.db #0x26	; 38
      000165 26                     622 	.db #0x26	; 38
      000166 26                     623 	.db #0x26	; 38
      000167 26                     624 	.db #0x26	; 38
      000168 26                     625 	.db #0x26	; 38
      000169 26                     626 	.db #0x26	; 38
      00016A 26                     627 	.db #0x26	; 38
      00016B 26                     628 	.db #0x26	; 38
      00016C 26                     629 	.db #0x26	; 38
      00016D 26                     630 	.db #0x26	; 38
      00016E 26                     631 	.db #0x26	; 38
      00016F 26                     632 	.db #0x26	; 38
      000170 26                     633 	.db #0x26	; 38
      000171 26                     634 	.db #0x26	; 38
      000172 26                     635 	.db #0x26	; 38
      000173 26                     636 	.db #0x26	; 38
      000174 26                     637 	.db #0x26	; 38
      000175 26                     638 	.db #0x26	; 38
      000176 26                     639 	.db #0x26	; 38
      000177 26                     640 	.db #0x26	; 38
      000178 26                     641 	.db #0x26	; 38
      000179 26                     642 	.db #0x26	; 38
      00017A 26                     643 	.db #0x26	; 38
      00017B 26                     644 	.db #0x26	; 38
      00017C 26                     645 	.db #0x26	; 38
      00017D 26                     646 	.db #0x26	; 38
      00017E 26                     647 	.db #0x26	; 38
      00017F 26                     648 	.db #0x26	; 38
      000180 26                     649 	.db #0x26	; 38
      000181 26                     650 	.db #0x26	; 38
      000182 26                     651 	.db #0x26	; 38
      000183 26                     652 	.db #0x26	; 38
      000184 26                     653 	.db #0x26	; 38
      000185 26                     654 	.db #0x26	; 38
      000186 26                     655 	.db #0x26	; 38
      000187 26                     656 	.db #0x26	; 38
      000188 26                     657 	.db #0x26	; 38
      000189 26                     658 	.db #0x26	; 38
      00018A 26                     659 	.db #0x26	; 38
      00018B 26                     660 	.db #0x26	; 38
      00018C 26                     661 	.db #0x26	; 38
      00018D 26                     662 	.db #0x26	; 38
      00018E 26                     663 	.db #0x26	; 38
      00018F 26                     664 	.db #0x26	; 38
      000190 26                     665 	.db #0x26	; 38
      000191 26                     666 	.db #0x26	; 38
      000192 26                     667 	.db #0x26	; 38
      000193 26                     668 	.db #0x26	; 38
      000194 26                     669 	.db #0x26	; 38
      000195 2B                     670 	.db #0x2b	; 43
      000196 26                     671 	.db #0x26	; 38
      000197 26                     672 	.db #0x26	; 38
      000198 26                     673 	.db #0x26	; 38
      000199 26                     674 	.db #0x26	; 38
      00019A 26                     675 	.db #0x26	; 38
      00019B 26                     676 	.db #0x26	; 38
      00019C 26                     677 	.db #0x26	; 38
      00019D 26                     678 	.db #0x26	; 38
      00019E 26                     679 	.db #0x26	; 38
      00019F 26                     680 	.db #0x26	; 38
      0001A0 26                     681 	.db #0x26	; 38
      0001A1 26                     682 	.db #0x26	; 38
      0001A2 26                     683 	.db #0x26	; 38
      0001A3 26                     684 	.db #0x26	; 38
      0001A4 26                     685 	.db #0x26	; 38
      0001A5 26                     686 	.db #0x26	; 38
      0001A6 25                     687 	.db #0x25	; 37
      0001A7 26                     688 	.db #0x26	; 38
      0001A8 26                     689 	.db #0x26	; 38
      0001A9 26                     690 	.db #0x26	; 38
      0001AA 2B                     691 	.db #0x2b	; 43
      0001AB 26                     692 	.db #0x26	; 38
      0001AC 26                     693 	.db #0x26	; 38
      0001AD 26                     694 	.db #0x26	; 38
      0001AE 26                     695 	.db #0x26	; 38
      0001AF 26                     696 	.db #0x26	; 38
      0001B0 26                     697 	.db #0x26	; 38
      0001B1 26                     698 	.db #0x26	; 38
      0001B2 26                     699 	.db #0x26	; 38
      0001B3 26                     700 	.db #0x26	; 38
      0001B4 26                     701 	.db #0x26	; 38
      0001B5 26                     702 	.db #0x26	; 38
      0001B6 26                     703 	.db #0x26	; 38
      0001B7 26                     704 	.db #0x26	; 38
      0001B8 26                     705 	.db #0x26	; 38
      0001B9 26                     706 	.db #0x26	; 38
      0001BA 26                     707 	.db #0x26	; 38
      0001BB 26                     708 	.db #0x26	; 38
      0001BC 26                     709 	.db #0x26	; 38
      0001BD 26                     710 	.db #0x26	; 38
      0001BE 26                     711 	.db #0x26	; 38
      0001BF 26                     712 	.db #0x26	; 38
      0001C0 26                     713 	.db #0x26	; 38
      0001C1 26                     714 	.db #0x26	; 38
      0001C2 26                     715 	.db #0x26	; 38
      0001C3 26                     716 	.db #0x26	; 38
      0001C4 2B                     717 	.db #0x2b	; 43
      0001C5 26                     718 	.db #0x26	; 38
      0001C6 26                     719 	.db #0x26	; 38
      0001C7 26                     720 	.db #0x26	; 38
      0001C8 26                     721 	.db #0x26	; 38
      0001C9 26                     722 	.db #0x26	; 38
      0001CA 26                     723 	.db #0x26	; 38
      0001CB 26                     724 	.db #0x26	; 38
      0001CC 26                     725 	.db #0x26	; 38
      0001CD 26                     726 	.db #0x26	; 38
      0001CE 26                     727 	.db #0x26	; 38
      0001CF 26                     728 	.db #0x26	; 38
      0001D0 26                     729 	.db #0x26	; 38
      0001D1 26                     730 	.db #0x26	; 38
      0001D2 26                     731 	.db #0x26	; 38
      0001D3 26                     732 	.db #0x26	; 38
      0001D4 26                     733 	.db #0x26	; 38
      0001D5 26                     734 	.db #0x26	; 38
      0001D6 26                     735 	.db #0x26	; 38
      0001D7 26                     736 	.db #0x26	; 38
      0001D8 26                     737 	.db #0x26	; 38
      0001D9 26                     738 	.db #0x26	; 38
      0001DA 27                     739 	.db #0x27	; 39
      0001DB 28                     740 	.db #0x28	; 40
      0001DC 26                     741 	.db #0x26	; 38
      0001DD 26                     742 	.db #0x26	; 38
      0001DE 26                     743 	.db #0x26	; 38
      0001DF 26                     744 	.db #0x26	; 38
      0001E0 26                     745 	.db #0x26	; 38
      0001E1 26                     746 	.db #0x26	; 38
      0001E2 26                     747 	.db #0x26	; 38
      0001E3 26                     748 	.db #0x26	; 38
      0001E4 26                     749 	.db #0x26	; 38
      0001E5 26                     750 	.db #0x26	; 38
      0001E6 26                     751 	.db #0x26	; 38
      0001E7 26                     752 	.db #0x26	; 38
      0001E8 26                     753 	.db #0x26	; 38
      0001E9 26                     754 	.db #0x26	; 38
      0001EA 26                     755 	.db #0x26	; 38
      0001EB 26                     756 	.db #0x26	; 38
      0001EC 26                     757 	.db #0x26	; 38
      0001ED 26                     758 	.db #0x26	; 38
      0001EE 26                     759 	.db #0x26	; 38
      0001EF 26                     760 	.db #0x26	; 38
      0001F0 26                     761 	.db #0x26	; 38
      0001F1 26                     762 	.db #0x26	; 38
      0001F2 26                     763 	.db #0x26	; 38
      0001F3 26                     764 	.db #0x26	; 38
      0001F4 26                     765 	.db #0x26	; 38
      0001F5 26                     766 	.db #0x26	; 38
      0001F6 26                     767 	.db #0x26	; 38
      0001F7 26                     768 	.db #0x26	; 38
      0001F8 26                     769 	.db #0x26	; 38
      0001F9 26                     770 	.db #0x26	; 38
      0001FA 2A                     771 	.db #0x2a	; 42
      0001FB 29                     772 	.db #0x29	; 41
      0001FC 26                     773 	.db #0x26	; 38
      0001FD 26                     774 	.db #0x26	; 38
      0001FE 26                     775 	.db #0x26	; 38
      0001FF 26                     776 	.db #0x26	; 38
      000200 26                     777 	.db #0x26	; 38
      000201 26                     778 	.db #0x26	; 38
      000202 26                     779 	.db #0x26	; 38
      000203 26                     780 	.db #0x26	; 38
      000204 26                     781 	.db #0x26	; 38
      000205 26                     782 	.db #0x26	; 38
      000206 26                     783 	.db #0x26	; 38
      000207 26                     784 	.db #0x26	; 38
      000208 26                     785 	.db #0x26	; 38
      000209 26                     786 	.db #0x26	; 38
      00020A 26                     787 	.db #0x26	; 38
      00020B 26                     788 	.db #0x26	; 38
      00020C 26                     789 	.db #0x26	; 38
      00020D 26                     790 	.db #0x26	; 38
      00020E 27                     791 	.db #0x27	; 39
      00020F 28                     792 	.db #0x28	; 40
      000210 26                     793 	.db #0x26	; 38
      000211 26                     794 	.db #0x26	; 38
      000212 26                     795 	.db #0x26	; 38
      000213 26                     796 	.db #0x26	; 38
      000214 26                     797 	.db #0x26	; 38
      000215 26                     798 	.db #0x26	; 38
      000216 26                     799 	.db #0x26	; 38
      000217 26                     800 	.db #0x26	; 38
      000218 26                     801 	.db #0x26	; 38
      000219 26                     802 	.db #0x26	; 38
      00021A 26                     803 	.db #0x26	; 38
      00021B 26                     804 	.db #0x26	; 38
      00021C 26                     805 	.db #0x26	; 38
      00021D 26                     806 	.db #0x26	; 38
      00021E 26                     807 	.db #0x26	; 38
      00021F 2C                     808 	.db #0x2c	; 44
      000220 26                     809 	.db #0x26	; 38
      000221 26                     810 	.db #0x26	; 38
      000222 26                     811 	.db #0x26	; 38
      000223 26                     812 	.db #0x26	; 38
      000224 26                     813 	.db #0x26	; 38
      000225 26                     814 	.db #0x26	; 38
      000226 26                     815 	.db #0x26	; 38
      000227 26                     816 	.db #0x26	; 38
      000228 26                     817 	.db #0x26	; 38
      000229 26                     818 	.db #0x26	; 38
      00022A 26                     819 	.db #0x26	; 38
      00022B 26                     820 	.db #0x26	; 38
      00022C 26                     821 	.db #0x26	; 38
      00022D 26                     822 	.db #0x26	; 38
      00022E 2A                     823 	.db #0x2a	; 42
      00022F 29                     824 	.db #0x29	; 41
      000230 26                     825 	.db #0x26	; 38
      000231 26                     826 	.db #0x26	; 38
      000232 26                     827 	.db #0x26	; 38
      000233 26                     828 	.db #0x26	; 38
      000234 26                     829 	.db #0x26	; 38
      000235 26                     830 	.db #0x26	; 38
      000236 26                     831 	.db #0x26	; 38
      000237 26                     832 	.db #0x26	; 38
      000238 26                     833 	.db #0x26	; 38
      000239 26                     834 	.db #0x26	; 38
      00023A 26                     835 	.db #0x26	; 38
      00023B 26                     836 	.db #0x26	; 38
      00023C 26                     837 	.db #0x26	; 38
      00023D 25                     838 	.db #0x25	; 37
      00023E 26                     839 	.db #0x26	; 38
      00023F 26                     840 	.db #0x26	; 38
      000240 26                     841 	.db #0x26	; 38
      000241 26                     842 	.db #0x26	; 38
      000242 26                     843 	.db #0x26	; 38
      000243 26                     844 	.db #0x26	; 38
      000244 2C                     845 	.db #0x2c	; 44
      000245 26                     846 	.db #0x26	; 38
      000246 26                     847 	.db #0x26	; 38
      000247 26                     848 	.db #0x26	; 38
      000248 26                     849 	.db #0x26	; 38
      000249 26                     850 	.db #0x26	; 38
      00024A 26                     851 	.db #0x26	; 38
      00024B 26                     852 	.db #0x26	; 38
      00024C 26                     853 	.db #0x26	; 38
      00024D 26                     854 	.db #0x26	; 38
      00024E 26                     855 	.db #0x26	; 38
      00024F 26                     856 	.db #0x26	; 38
      000250 26                     857 	.db #0x26	; 38
      000251 26                     858 	.db #0x26	; 38
      000252 26                     859 	.db #0x26	; 38
      000253 26                     860 	.db #0x26	; 38
      000254 26                     861 	.db #0x26	; 38
      000255 26                     862 	.db #0x26	; 38
      000256 26                     863 	.db #0x26	; 38
      000257 26                     864 	.db #0x26	; 38
      000258 26                     865 	.db #0x26	; 38
      000259 26                     866 	.db #0x26	; 38
      00025A 26                     867 	.db #0x26	; 38
      00025B 26                     868 	.db #0x26	; 38
      00025C 26                     869 	.db #0x26	; 38
      00025D 26                     870 	.db #0x26	; 38
      00025E 26                     871 	.db #0x26	; 38
      00025F 26                     872 	.db #0x26	; 38
      000260 26                     873 	.db #0x26	; 38
      000261 26                     874 	.db #0x26	; 38
      000262 26                     875 	.db #0x26	; 38
      000263 26                     876 	.db #0x26	; 38
      000264 26                     877 	.db #0x26	; 38
      000265 26                     878 	.db #0x26	; 38
      000266 26                     879 	.db #0x26	; 38
      000267 26                     880 	.db #0x26	; 38
      000268 26                     881 	.db #0x26	; 38
      000269 26                     882 	.db #0x26	; 38
      00026A 2C                     883 	.db #0x2c	; 44
      00026B 26                     884 	.db #0x26	; 38
      00026C 26                     885 	.db #0x26	; 38
      00026D 26                     886 	.db #0x26	; 38
      00026E 26                     887 	.db #0x26	; 38
      00026F 26                     888 	.db #0x26	; 38
      000270 26                     889 	.db #0x26	; 38
      000271 26                     890 	.db #0x26	; 38
      000272 26                     891 	.db #0x26	; 38
      000273 26                     892 	.db #0x26	; 38
      000274 26                     893 	.db #0x26	; 38
      000275 26                     894 	.db #0x26	; 38
      000276 26                     895 	.db #0x26	; 38
      000277 26                     896 	.db #0x26	; 38
      000278 26                     897 	.db #0x26	; 38
      000279 2C                     898 	.db #0x2c	; 44
      00027A 26                     899 	.db #0x26	; 38
      00027B 26                     900 	.db #0x26	; 38
      00027C 26                     901 	.db #0x26	; 38
      00027D 26                     902 	.db #0x26	; 38
      00027E 26                     903 	.db #0x26	; 38
      00027F 26                     904 	.db #0x26	; 38
      000280 26                     905 	.db #0x26	; 38
      000281 26                     906 	.db #0x26	; 38
      000282 26                     907 	.db #0x26	; 38
      000283 26                     908 	.db #0x26	; 38
      000284 26                     909 	.db #0x26	; 38
      000285 26                     910 	.db #0x26	; 38
      000286 26                     911 	.db #0x26	; 38
      000287 26                     912 	.db #0x26	; 38
      000288 26                     913 	.db #0x26	; 38
      000289 26                     914 	.db #0x26	; 38
      00028A 26                     915 	.db #0x26	; 38
      00028B 26                     916 	.db #0x26	; 38
      00028C 26                     917 	.db #0x26	; 38
      00028D 26                     918 	.db #0x26	; 38
      00028E 26                     919 	.db #0x26	; 38
      00028F 26                     920 	.db #0x26	; 38
      000290 26                     921 	.db #0x26	; 38
      000291 26                     922 	.db #0x26	; 38
      000292 26                     923 	.db #0x26	; 38
      000293 26                     924 	.db #0x26	; 38
      000294 26                     925 	.db #0x26	; 38
      000295 2B                     926 	.db #0x2b	; 43
      000296 26                     927 	.db #0x26	; 38
      000297 26                     928 	.db #0x26	; 38
      000298 26                     929 	.db #0x26	; 38
      000299 26                     930 	.db #0x26	; 38
      00029A 26                     931 	.db #0x26	; 38
      00029B 26                     932 	.db #0x26	; 38
      00029C 26                     933 	.db #0x26	; 38
      00029D 26                     934 	.db #0x26	; 38
      00029E 26                     935 	.db #0x26	; 38
      00029F 26                     936 	.db #0x26	; 38
      0002A0 26                     937 	.db #0x26	; 38
      0002A1 26                     938 	.db #0x26	; 38
      0002A2 26                     939 	.db #0x26	; 38
      0002A3 26                     940 	.db #0x26	; 38
      0002A4 26                     941 	.db #0x26	; 38
      0002A5 26                     942 	.db #0x26	; 38
      0002A6 26                     943 	.db #0x26	; 38
      0002A7 28                     944 	.db #0x28	; 40
      0002A8 26                     945 	.db #0x26	; 38
      0002A9 26                     946 	.db #0x26	; 38
      0002AA 26                     947 	.db #0x26	; 38
      0002AB 26                     948 	.db #0x26	; 38
      0002AC 26                     949 	.db #0x26	; 38
      0002AD 26                     950 	.db #0x26	; 38
      0002AE 26                     951 	.db #0x26	; 38
      0002AF 26                     952 	.db #0x26	; 38
      0002B0 26                     953 	.db #0x26	; 38
      0002B1 26                     954 	.db #0x26	; 38
      0002B2 26                     955 	.db #0x26	; 38
      0002B3 26                     956 	.db #0x26	; 38
      0002B4 26                     957 	.db #0x26	; 38
      0002B5 26                     958 	.db #0x26	; 38
      0002B6 26                     959 	.db #0x26	; 38
      0002B7 26                     960 	.db #0x26	; 38
      0002B8 26                     961 	.db #0x26	; 38
      0002B9 26                     962 	.db #0x26	; 38
      0002BA 26                     963 	.db #0x26	; 38
      0002BB 26                     964 	.db #0x26	; 38
      0002BC 26                     965 	.db #0x26	; 38
      0002BD 26                     966 	.db #0x26	; 38
      0002BE 26                     967 	.db #0x26	; 38
      0002BF 26                     968 	.db #0x26	; 38
      0002C0 2B                     969 	.db #0x2b	; 43
      0002C1 26                     970 	.db #0x26	; 38
      0002C2 26                     971 	.db #0x26	; 38
      0002C3 26                     972 	.db #0x26	; 38
      0002C4 26                     973 	.db #0x26	; 38
      0002C5 26                     974 	.db #0x26	; 38
      0002C6 27                     975 	.db #0x27	; 39
      0002C7 29                     976 	.db #0x29	; 41
      0002C8 26                     977 	.db #0x26	; 38
      0002C9 26                     978 	.db #0x26	; 38
      0002CA 26                     979 	.db #0x26	; 38
      0002CB 26                     980 	.db #0x26	; 38
      0002CC 26                     981 	.db #0x26	; 38
      0002CD 26                     982 	.db #0x26	; 38
      0002CE 2B                     983 	.db #0x2b	; 43
      0002CF 26                     984 	.db #0x26	; 38
      0002D0 26                     985 	.db #0x26	; 38
      0002D1 26                     986 	.db #0x26	; 38
      0002D2 26                     987 	.db #0x26	; 38
      0002D3 26                     988 	.db #0x26	; 38
      0002D4 26                     989 	.db #0x26	; 38
      0002D5 26                     990 	.db #0x26	; 38
      0002D6 26                     991 	.db #0x26	; 38
      0002D7 26                     992 	.db #0x26	; 38
      0002D8 26                     993 	.db #0x26	; 38
      0002D9 26                     994 	.db #0x26	; 38
      0002DA 26                     995 	.db #0x26	; 38
      0002DB 26                     996 	.db #0x26	; 38
      0002DC 26                     997 	.db #0x26	; 38
      0002DD 26                     998 	.db #0x26	; 38
      0002DE 26                     999 	.db #0x26	; 38
      0002DF 26                    1000 	.db #0x26	; 38
      0002E0 26                    1001 	.db #0x26	; 38
      0002E1 26                    1002 	.db #0x26	; 38
      0002E2 26                    1003 	.db #0x26	; 38
      0002E3 26                    1004 	.db #0x26	; 38
      0002E4 26                    1005 	.db #0x26	; 38
      0002E5 26                    1006 	.db #0x26	; 38
      0002E6 2A                    1007 	.db #0x2a	; 42
      0002E7 26                    1008 	.db #0x26	; 38
      0002E8 26                    1009 	.db #0x26	; 38
      0002E9 26                    1010 	.db #0x26	; 38
      0002EA 26                    1011 	.db #0x26	; 38
      0002EB 26                    1012 	.db #0x26	; 38
      0002EC 26                    1013 	.db #0x26	; 38
      0002ED 26                    1014 	.db #0x26	; 38
      0002EE 26                    1015 	.db #0x26	; 38
      0002EF 26                    1016 	.db #0x26	; 38
      0002F0 26                    1017 	.db #0x26	; 38
      0002F1 26                    1018 	.db #0x26	; 38
      0002F2 2C                    1019 	.db #0x2c	; 44
      0002F3 26                    1020 	.db #0x26	; 38
      0002F4 26                    1021 	.db #0x26	; 38
      0002F5 26                    1022 	.db #0x26	; 38
      0002F6 26                    1023 	.db #0x26	; 38
      0002F7 26                    1024 	.db #0x26	; 38
      0002F8 26                    1025 	.db #0x26	; 38
      0002F9 26                    1026 	.db #0x26	; 38
      0002FA 26                    1027 	.db #0x26	; 38
      0002FB 26                    1028 	.db #0x26	; 38
      0002FC 26                    1029 	.db #0x26	; 38
      0002FD 26                    1030 	.db #0x26	; 38
      0002FE 26                    1031 	.db #0x26	; 38
      0002FF 26                    1032 	.db #0x26	; 38
      000300 26                    1033 	.db #0x26	; 38
      000301 26                    1034 	.db #0x26	; 38
      000302 26                    1035 	.db #0x26	; 38
      000303 26                    1036 	.db #0x26	; 38
      000304 26                    1037 	.db #0x26	; 38
      000305 26                    1038 	.db #0x26	; 38
      000306 26                    1039 	.db #0x26	; 38
      000307 26                    1040 	.db #0x26	; 38
      000308 26                    1041 	.db #0x26	; 38
      000309 26                    1042 	.db #0x26	; 38
      00030A 26                    1043 	.db #0x26	; 38
      00030B 26                    1044 	.db #0x26	; 38
      00030C 26                    1045 	.db #0x26	; 38
      00030D 26                    1046 	.db #0x26	; 38
      00030E 26                    1047 	.db #0x26	; 38
      00030F 26                    1048 	.db #0x26	; 38
      000310 26                    1049 	.db #0x26	; 38
      000311 26                    1050 	.db #0x26	; 38
      000312 26                    1051 	.db #0x26	; 38
      000313 26                    1052 	.db #0x26	; 38
      000314 26                    1053 	.db #0x26	; 38
      000315 26                    1054 	.db #0x26	; 38
      000316 26                    1055 	.db #0x26	; 38
      000317 2B                    1056 	.db #0x2b	; 43
      000318 26                    1057 	.db #0x26	; 38
      000319 26                    1058 	.db #0x26	; 38
      00031A 26                    1059 	.db #0x26	; 38
      00031B 26                    1060 	.db #0x26	; 38
      00031C 26                    1061 	.db #0x26	; 38
      00031D 26                    1062 	.db #0x26	; 38
      00031E 26                    1063 	.db #0x26	; 38
      00031F 26                    1064 	.db #0x26	; 38
      000320 26                    1065 	.db #0x26	; 38
      000321 26                    1066 	.db #0x26	; 38
      000322 26                    1067 	.db #0x26	; 38
      000323 26                    1068 	.db #0x26	; 38
      000324 26                    1069 	.db #0x26	; 38
      000325 26                    1070 	.db #0x26	; 38
      000326 26                    1071 	.db #0x26	; 38
      000327 26                    1072 	.db #0x26	; 38
      000328 26                    1073 	.db #0x26	; 38
      000329 26                    1074 	.db #0x26	; 38
      00032A 26                    1075 	.db #0x26	; 38
      00032B 26                    1076 	.db #0x26	; 38
      00032C 26                    1077 	.db #0x26	; 38
      00032D 26                    1078 	.db #0x26	; 38
      00032E 26                    1079 	.db #0x26	; 38
      00032F 26                    1080 	.db #0x26	; 38
      000330 26                    1081 	.db #0x26	; 38
      000331 26                    1082 	.db #0x26	; 38
      000332 26                    1083 	.db #0x26	; 38
      000333 26                    1084 	.db #0x26	; 38
      000334 26                    1085 	.db #0x26	; 38
      000335 26                    1086 	.db #0x26	; 38
      000336 26                    1087 	.db #0x26	; 38
      000337 26                    1088 	.db #0x26	; 38
      000338 26                    1089 	.db #0x26	; 38
      000339 26                    1090 	.db #0x26	; 38
      00033A 26                    1091 	.db #0x26	; 38
      00033B 26                    1092 	.db #0x26	; 38
      00033C 26                    1093 	.db #0x26	; 38
      00033D 26                    1094 	.db #0x26	; 38
      00033E 2B                    1095 	.db #0x2b	; 43
      00033F 26                    1096 	.db #0x26	; 38
      000340 26                    1097 	.db #0x26	; 38
      000341 26                    1098 	.db #0x26	; 38
      000342 26                    1099 	.db #0x26	; 38
      000343 26                    1100 	.db #0x26	; 38
      000344 26                    1101 	.db #0x26	; 38
      000345 26                    1102 	.db #0x26	; 38
      000346 26                    1103 	.db #0x26	; 38
      000347 26                    1104 	.db #0x26	; 38
      000348 26                    1105 	.db #0x26	; 38
      000349 26                    1106 	.db #0x26	; 38
      00034A 2B                    1107 	.db #0x2b	; 43
      00034B 26                    1108 	.db #0x26	; 38
      00034C 26                    1109 	.db #0x26	; 38
      00034D 26                    1110 	.db #0x26	; 38
      00034E 26                    1111 	.db #0x26	; 38
      00034F 26                    1112 	.db #0x26	; 38
      000350 26                    1113 	.db #0x26	; 38
      000351 26                    1114 	.db #0x26	; 38
      000352 26                    1115 	.db #0x26	; 38
      000353 26                    1116 	.db #0x26	; 38
      000354 26                    1117 	.db #0x26	; 38
      000355 26                    1118 	.db #0x26	; 38
      000356 26                    1119 	.db #0x26	; 38
      000357 26                    1120 	.db #0x26	; 38
      000358 26                    1121 	.db #0x26	; 38
      000359 26                    1122 	.db #0x26	; 38
      00035A 26                    1123 	.db #0x26	; 38
      00035B 26                    1124 	.db #0x26	; 38
      00035C 26                    1125 	.db #0x26	; 38
      00035D 26                    1126 	.db #0x26	; 38
      00035E 26                    1127 	.db #0x26	; 38
      00035F 26                    1128 	.db #0x26	; 38
      000360 26                    1129 	.db #0x26	; 38
      000361 26                    1130 	.db #0x26	; 38
      000362 26                    1131 	.db #0x26	; 38
      000363 26                    1132 	.db #0x26	; 38
      000364 26                    1133 	.db #0x26	; 38
      000365 26                    1134 	.db #0x26	; 38
      000366 2C                    1135 	.db #0x2c	; 44
      000367 26                    1136 	.db #0x26	; 38
      000368 26                    1137 	.db #0x26	; 38
      000369 26                    1138 	.db #0x26	; 38
      00036A 26                    1139 	.db #0x26	; 38
      00036B 26                    1140 	.db #0x26	; 38
      00036C 26                    1141 	.db #0x26	; 38
      00036D 26                    1142 	.db #0x26	; 38
      00036E 26                    1143 	.db #0x26	; 38
      00036F 26                    1144 	.db #0x26	; 38
      000370 2B                    1145 	.db #0x2b	; 43
      000371 26                    1146 	.db #0x26	; 38
      000372 26                    1147 	.db #0x26	; 38
      000373 26                    1148 	.db #0x26	; 38
      000374 26                    1149 	.db #0x26	; 38
      000375 26                    1150 	.db #0x26	; 38
      000376 26                    1151 	.db #0x26	; 38
      000377 26                    1152 	.db #0x26	; 38
      000378 26                    1153 	.db #0x26	; 38
      000379 26                    1154 	.db #0x26	; 38
      00037A 26                    1155 	.db #0x26	; 38
      00037B 26                    1156 	.db #0x26	; 38
      00037C 26                    1157 	.db #0x26	; 38
      00037D 26                    1158 	.db #0x26	; 38
      00037E 26                    1159 	.db #0x26	; 38
      00037F 26                    1160 	.db #0x26	; 38
      000380 26                    1161 	.db #0x26	; 38
      000381 26                    1162 	.db #0x26	; 38
      000382 26                    1163 	.db #0x26	; 38
      000383 26                    1164 	.db #0x26	; 38
      000384 26                    1165 	.db #0x26	; 38
      000385 26                    1166 	.db #0x26	; 38
      000386 26                    1167 	.db #0x26	; 38
      000387 26                    1168 	.db #0x26	; 38
      000388 26                    1169 	.db #0x26	; 38
      000389 26                    1170 	.db #0x26	; 38
      00038A 26                    1171 	.db #0x26	; 38
      00038B 26                    1172 	.db #0x26	; 38
      00038C 26                    1173 	.db #0x26	; 38
      00038D 26                    1174 	.db #0x26	; 38
      00038E 26                    1175 	.db #0x26	; 38
      00038F 26                    1176 	.db #0x26	; 38
      000390 26                    1177 	.db #0x26	; 38
      000391 26                    1178 	.db #0x26	; 38
      000392 26                    1179 	.db #0x26	; 38
      000393 26                    1180 	.db #0x26	; 38
      000394 26                    1181 	.db #0x26	; 38
      000395 26                    1182 	.db #0x26	; 38
      000396 26                    1183 	.db #0x26	; 38
      000397 26                    1184 	.db #0x26	; 38
      000398 27                    1185 	.db #0x27	; 39
      000399 28                    1186 	.db #0x28	; 40
      00039A 26                    1187 	.db #0x26	; 38
      00039B 26                    1188 	.db #0x26	; 38
      00039C 26                    1189 	.db #0x26	; 38
      00039D 26                    1190 	.db #0x26	; 38
      00039E 26                    1191 	.db #0x26	; 38
      00039F 26                    1192 	.db #0x26	; 38
      0003A0 26                    1193 	.db #0x26	; 38
      0003A1 26                    1194 	.db #0x26	; 38
      0003A2 26                    1195 	.db #0x26	; 38
      0003A3 26                    1196 	.db #0x26	; 38
      0003A4 26                    1197 	.db #0x26	; 38
      0003A5 26                    1198 	.db #0x26	; 38
      0003A6 26                    1199 	.db #0x26	; 38
      0003A7 26                    1200 	.db #0x26	; 38
      0003A8 26                    1201 	.db #0x26	; 38
      0003A9 26                    1202 	.db #0x26	; 38
      0003AA 26                    1203 	.db #0x26	; 38
      0003AB 26                    1204 	.db #0x26	; 38
      0003AC 26                    1205 	.db #0x26	; 38
      0003AD 2B                    1206 	.db #0x2b	; 43
      0003AE 26                    1207 	.db #0x26	; 38
      0003AF 26                    1208 	.db #0x26	; 38
      0003B0 26                    1209 	.db #0x26	; 38
      0003B1 26                    1210 	.db #0x26	; 38
      0003B2 26                    1211 	.db #0x26	; 38
      0003B3 26                    1212 	.db #0x26	; 38
      0003B4 26                    1213 	.db #0x26	; 38
      0003B5 25                    1214 	.db #0x25	; 37
      0003B6 26                    1215 	.db #0x26	; 38
      0003B7 26                    1216 	.db #0x26	; 38
      0003B8 2A                    1217 	.db #0x2a	; 42
      0003B9 29                    1218 	.db #0x29	; 41
      0003BA 26                    1219 	.db #0x26	; 38
      0003BB 26                    1220 	.db #0x26	; 38
      0003BC 26                    1221 	.db #0x26	; 38
      0003BD 26                    1222 	.db #0x26	; 38
      0003BE 26                    1223 	.db #0x26	; 38
      0003BF 26                    1224 	.db #0x26	; 38
      0003C0 26                    1225 	.db #0x26	; 38
      0003C1 26                    1226 	.db #0x26	; 38
      0003C2 2B                    1227 	.db #0x2b	; 43
      0003C3 26                    1228 	.db #0x26	; 38
      0003C4 26                    1229 	.db #0x26	; 38
      0003C5 26                    1230 	.db #0x26	; 38
      0003C6 26                    1231 	.db #0x26	; 38
      0003C7 26                    1232 	.db #0x26	; 38
      0003C8 26                    1233 	.db #0x26	; 38
      0003C9 2C                    1234 	.db #0x2c	; 44
      0003CA 26                    1235 	.db #0x26	; 38
      0003CB 26                    1236 	.db #0x26	; 38
      0003CC 26                    1237 	.db #0x26	; 38
      0003CD 26                    1238 	.db #0x26	; 38
      0003CE 26                    1239 	.db #0x26	; 38
      0003CF 26                    1240 	.db #0x26	; 38
      0003D0 26                    1241 	.db #0x26	; 38
      0003D1 26                    1242 	.db #0x26	; 38
      0003D2 26                    1243 	.db #0x26	; 38
      0003D3 26                    1244 	.db #0x26	; 38
      0003D4 26                    1245 	.db #0x26	; 38
      0003D5 2C                    1246 	.db #0x2c	; 44
      0003D6 26                    1247 	.db #0x26	; 38
      0003D7 26                    1248 	.db #0x26	; 38
      0003D8 26                    1249 	.db #0x26	; 38
      0003D9 26                    1250 	.db #0x26	; 38
      0003DA 26                    1251 	.db #0x26	; 38
      0003DB 26                    1252 	.db #0x26	; 38
      0003DC 26                    1253 	.db #0x26	; 38
      0003DD 26                    1254 	.db #0x26	; 38
      0003DE 26                    1255 	.db #0x26	; 38
      0003DF 26                    1256 	.db #0x26	; 38
      0003E0 26                    1257 	.db #0x26	; 38
      0003E1 26                    1258 	.db #0x26	; 38
      0003E2 26                    1259 	.db #0x26	; 38
      0003E3 26                    1260 	.db #0x26	; 38
      0003E4 26                    1261 	.db #0x26	; 38
      0003E5 26                    1262 	.db #0x26	; 38
      0003E6 26                    1263 	.db #0x26	; 38
      0003E7 26                    1264 	.db #0x26	; 38
      0003E8 26                    1265 	.db #0x26	; 38
      0003E9 26                    1266 	.db #0x26	; 38
      0003EA 26                    1267 	.db #0x26	; 38
      0003EB 26                    1268 	.db #0x26	; 38
      0003EC 26                    1269 	.db #0x26	; 38
      0003ED 26                    1270 	.db #0x26	; 38
      0003EE 26                    1271 	.db #0x26	; 38
      0003EF 26                    1272 	.db #0x26	; 38
      0003F0 26                    1273 	.db #0x26	; 38
      0003F1 26                    1274 	.db #0x26	; 38
      0003F2 26                    1275 	.db #0x26	; 38
      0003F3 26                    1276 	.db #0x26	; 38
      0003F4 26                    1277 	.db #0x26	; 38
      0003F5 26                    1278 	.db #0x26	; 38
      0003F6 26                    1279 	.db #0x26	; 38
      0003F7 26                    1280 	.db #0x26	; 38
      0003F8 26                    1281 	.db #0x26	; 38
      0003F9 26                    1282 	.db #0x26	; 38
      0003FA 26                    1283 	.db #0x26	; 38
      0003FB 26                    1284 	.db #0x26	; 38
      0003FC 26                    1285 	.db #0x26	; 38
      0003FD 26                    1286 	.db #0x26	; 38
      0003FE 26                    1287 	.db #0x26	; 38
      0003FF 26                    1288 	.db #0x26	; 38
      000400 26                    1289 	.db #0x26	; 38
      000401 26                    1290 	.db #0x26	; 38
      000402 26                    1291 	.db #0x26	; 38
      000403 26                    1292 	.db #0x26	; 38
      000404 26                    1293 	.db #0x26	; 38
      000405 26                    1294 	.db #0x26	; 38
      000406 26                    1295 	.db #0x26	; 38
      000407 26                    1296 	.db #0x26	; 38
      000408 26                    1297 	.db #0x26	; 38
      000409 26                    1298 	.db #0x26	; 38
      00040A 26                    1299 	.db #0x26	; 38
      00040B 26                    1300 	.db #0x26	; 38
      00040C 26                    1301 	.db #0x26	; 38
      00040D 2B                    1302 	.db #0x2b	; 43
      00040E 26                    1303 	.db #0x26	; 38
      00040F 26                    1304 	.db #0x26	; 38
      000410 26                    1305 	.db #0x26	; 38
      000411 26                    1306 	.db #0x26	; 38
      000412 26                    1307 	.db #0x26	; 38
      000413 26                    1308 	.db #0x26	; 38
      000414 26                    1309 	.db #0x26	; 38
      000415 26                    1310 	.db #0x26	; 38
      000416 26                    1311 	.db #0x26	; 38
      000417 26                    1312 	.db #0x26	; 38
      000418 26                    1313 	.db #0x26	; 38
      000419 26                    1314 	.db #0x26	; 38
      00041A 26                    1315 	.db #0x26	; 38
      00041B 26                    1316 	.db #0x26	; 38
      00041C 26                    1317 	.db #0x26	; 38
      00041D 26                    1318 	.db #0x26	; 38
      00041E 26                    1319 	.db #0x26	; 38
      00041F 26                    1320 	.db #0x26	; 38
      000420 2B                    1321 	.db #0x2b	; 43
      000421 26                    1322 	.db #0x26	; 38
      000422 26                    1323 	.db #0x26	; 38
      000423 26                    1324 	.db #0x26	; 38
      000424 26                    1325 	.db #0x26	; 38
      000425 26                    1326 	.db #0x26	; 38
      000426 26                    1327 	.db #0x26	; 38
      000427 26                    1328 	.db #0x26	; 38
      000428 26                    1329 	.db #0x26	; 38
      000429 26                    1330 	.db #0x26	; 38
      00042A 26                    1331 	.db #0x26	; 38
      00042B 26                    1332 	.db #0x26	; 38
      00042C 26                    1333 	.db #0x26	; 38
      00042D 26                    1334 	.db #0x26	; 38
      00042E 26                    1335 	.db #0x26	; 38
      00042F 26                    1336 	.db #0x26	; 38
      000430 26                    1337 	.db #0x26	; 38
      000431 26                    1338 	.db #0x26	; 38
      000432 26                    1339 	.db #0x26	; 38
      000433 26                    1340 	.db #0x26	; 38
      000434 26                    1341 	.db #0x26	; 38
      000435 26                    1342 	.db #0x26	; 38
      000436 26                    1343 	.db #0x26	; 38
      000437 2C                    1344 	.db #0x2c	; 44
      000438 26                    1345 	.db #0x26	; 38
      000439 26                    1346 	.db #0x26	; 38
      00043A 26                    1347 	.db #0x26	; 38
      00043B 26                    1348 	.db #0x26	; 38
      00043C 26                    1349 	.db #0x26	; 38
      00043D 26                    1350 	.db #0x26	; 38
      00043E 26                    1351 	.db #0x26	; 38
      00043F 26                    1352 	.db #0x26	; 38
      000440 26                    1353 	.db #0x26	; 38
      000441 26                    1354 	.db #0x26	; 38
      000442 26                    1355 	.db #0x26	; 38
      000443 26                    1356 	.db #0x26	; 38
      000444 26                    1357 	.db #0x26	; 38
      000445 26                    1358 	.db #0x26	; 38
      000446 26                    1359 	.db #0x26	; 38
      000447 26                    1360 	.db #0x26	; 38
      000448 25                    1361 	.db #0x25	; 37
      000449 2C                    1362 	.db #0x2c	; 44
      00044A 26                    1363 	.db #0x26	; 38
      00044B 26                    1364 	.db #0x26	; 38
      00044C 26                    1365 	.db #0x26	; 38
      00044D 26                    1366 	.db #0x26	; 38
      00044E 26                    1367 	.db #0x26	; 38
      00044F 26                    1368 	.db #0x26	; 38
      000450 26                    1369 	.db #0x26	; 38
      000451 26                    1370 	.db #0x26	; 38
      000452 26                    1371 	.db #0x26	; 38
      000453 26                    1372 	.db #0x26	; 38
      000454 26                    1373 	.db #0x26	; 38
      000455 26                    1374 	.db #0x26	; 38
      000456 26                    1375 	.db #0x26	; 38
      000457 26                    1376 	.db #0x26	; 38
      000458 26                    1377 	.db #0x26	; 38
      000459 26                    1378 	.db #0x26	; 38
      00045A 2B                    1379 	.db #0x2b	; 43
      00045B 26                    1380 	.db #0x26	; 38
      00045C 26                    1381 	.db #0x26	; 38
      00045D 26                    1382 	.db #0x26	; 38
      00045E 26                    1383 	.db #0x26	; 38
      00045F 26                    1384 	.db #0x26	; 38
      000460 26                    1385 	.db #0x26	; 38
      000461 26                    1386 	.db #0x26	; 38
      000462 26                    1387 	.db #0x26	; 38
      000463 26                    1388 	.db #0x26	; 38
      000464 26                    1389 	.db #0x26	; 38
      000465 26                    1390 	.db #0x26	; 38
      000466 26                    1391 	.db #0x26	; 38
      000467 26                    1392 	.db #0x26	; 38
      000468 26                    1393 	.db #0x26	; 38
      000469 26                    1394 	.db #0x26	; 38
      00046A 26                    1395 	.db #0x26	; 38
      00046B 26                    1396 	.db #0x26	; 38
      00046C 26                    1397 	.db #0x26	; 38
      00046D 26                    1398 	.db #0x26	; 38
      00046E 26                    1399 	.db #0x26	; 38
      00046F 26                    1400 	.db #0x26	; 38
      000470 26                    1401 	.db #0x26	; 38
      000471 26                    1402 	.db #0x26	; 38
      000472 27                    1403 	.db #0x27	; 39
      000473 28                    1404 	.db #0x28	; 40
      000474 26                    1405 	.db #0x26	; 38
      000475 26                    1406 	.db #0x26	; 38
      000476 26                    1407 	.db #0x26	; 38
      000477 26                    1408 	.db #0x26	; 38
      000478 26                    1409 	.db #0x26	; 38
      000479 26                    1410 	.db #0x26	; 38
      00047A 26                    1411 	.db #0x26	; 38
      00047B 26                    1412 	.db #0x26	; 38
      00047C 26                    1413 	.db #0x26	; 38
      00047D 26                    1414 	.db #0x26	; 38
      00047E 26                    1415 	.db #0x26	; 38
      00047F 26                    1416 	.db #0x26	; 38
      000480 26                    1417 	.db #0x26	; 38
      000481 26                    1418 	.db #0x26	; 38
      000482 26                    1419 	.db #0x26	; 38
      000483 26                    1420 	.db #0x26	; 38
      000484 26                    1421 	.db #0x26	; 38
      000485 26                    1422 	.db #0x26	; 38
      000486 2B                    1423 	.db #0x2b	; 43
      000487                       1424 _backgroundtiles:
      000487 40                    1425 	.db #0x40	; 64
      000488 38                    1426 	.db #0x38	; 56	'8'
      000489 3A                    1427 	.db #0x3a	; 58
      00048A 44                    1428 	.db #0x44	; 68	'D'
      00048B 7C                    1429 	.db #0x7c	; 124
      00048C 9A                    1430 	.db #0x9a	; 154
      00048D 5E                    1431 	.db #0x5e	; 94
      00048E E9                    1432 	.db #0xe9	; 233
      00048F 7A                    1433 	.db #0x7a	; 122	'z'
      000490 87                    1434 	.db #0x87	; 135
      000491 76                    1435 	.db #0x76	; 118	'v'
      000492 B9                    1436 	.db #0xb9	; 185
      000493 3C                    1437 	.db #0x3c	; 60
      000494 72                    1438 	.db #0x72	; 114	'r'
      000495 00                    1439 	.db #0x00	; 0
      000496 3C                    1440 	.db #0x3c	; 60
      000497 00                    1441 	.db #0x00	; 0
      000498 00                    1442 	.db #0x00	; 0
      000499 00                    1443 	.db #0x00	; 0
      00049A 00                    1444 	.db #0x00	; 0
      00049B 00                    1445 	.db #0x00	; 0
      00049C 00                    1446 	.db #0x00	; 0
      00049D 00                    1447 	.db #0x00	; 0
      00049E 00                    1448 	.db #0x00	; 0
      00049F 00                    1449 	.db #0x00	; 0
      0004A0 00                    1450 	.db #0x00	; 0
      0004A1 00                    1451 	.db #0x00	; 0
      0004A2 00                    1452 	.db #0x00	; 0
      0004A3 00                    1453 	.db #0x00	; 0
      0004A4 00                    1454 	.db #0x00	; 0
      0004A5 00                    1455 	.db #0x00	; 0
      0004A6 00                    1456 	.db #0x00	; 0
      0004A7 00                    1457 	.db #0x00	; 0
      0004A8 0F                    1458 	.db #0x0f	; 15
      0004A9 08                    1459 	.db #0x08	; 8
      0004AA 17                    1460 	.db #0x17	; 23
      0004AB 1C                    1461 	.db #0x1c	; 28
      0004AC 23                    1462 	.db #0x23	; 35
      0004AD 3E                    1463 	.db #0x3e	; 62
      0004AE 41                    1464 	.db #0x41	; 65	'A'
      0004AF 1B                    1465 	.db #0x1b	; 27
      0004B0 64                    1466 	.db #0x64	; 100	'd'
      0004B1 31                    1467 	.db #0x31	; 49	'1'
      0004B2 4E                    1468 	.db #0x4e	; 78	'N'
      0004B3 B1                    1469 	.db #0xb1	; 177
      0004B4 CE                    1470 	.db #0xce	; 206
      0004B5 BB                    1471 	.db #0xbb	; 187
      0004B6 C4                    1472 	.db #0xc4	; 196
      0004B7 00                    1473 	.db #0x00	; 0
      0004B8 F8                    1474 	.db #0xf8	; 248
      0004B9 00                    1475 	.db #0x00	; 0
      0004BA FC                    1476 	.db #0xfc	; 252
      0004BB E0                    1477 	.db #0xe0	; 224
      0004BC 1E                    1478 	.db #0x1e	; 30
      0004BD F0                    1479 	.db #0xf0	; 240
      0004BE 0F                    1480 	.db #0x0f	; 15
      0004BF BE                    1481 	.db #0xbe	; 190
      0004C0 01                    1482 	.db #0x01	; 1
      0004C1 BC                    1483 	.db #0xbc	; 188
      0004C2 02                    1484 	.db #0x02	; 2
      0004C3 CE                    1485 	.db #0xce	; 206
      0004C4 01                    1486 	.db #0x01	; 1
      0004C5 F6                    1487 	.db #0xf6	; 246
      0004C6 61                    1488 	.db #0x61	; 97	'a'
      0004C7 F4                    1489 	.db #0xf4	; 244
      0004C8 02                    1490 	.db #0x02	; 2
      0004C9 94                    1491 	.db #0x94	; 148
      0004CA 62                    1492 	.db #0x62	; 98	'b'
      0004CB E4                    1493 	.db #0xe4	; 228
      0004CC 02                    1494 	.db #0x02	; 2
      0004CD 6C                    1495 	.db #0x6c	; 108	'l'
      0004CE 82                    1496 	.db #0x82	; 130
      0004CF 70                    1497 	.db #0x70	; 112	'p'
      0004D0 8C                    1498 	.db #0x8c	; 140
      0004D1 60                    1499 	.db #0x60	; 96
      0004D2 90                    1500 	.db #0x90	; 144
      0004D3 00                    1501 	.db #0x00	; 0
      0004D4 E0                    1502 	.db #0xe0	; 224
      0004D5 80                    1503 	.db #0x80	; 128
      0004D6 80                    1504 	.db #0x80	; 128
      0004D7 8E                    1505 	.db #0x8e	; 142
      0004D8 F7                    1506 	.db #0xf7	; 247
      0004D9 8F                    1507 	.db #0x8f	; 143
      0004DA F3                    1508 	.db #0xf3	; 243
      0004DB 86                    1509 	.db #0x86	; 134
      0004DC F9                    1510 	.db #0xf9	; 249
      0004DD 42                    1511 	.db #0x42	; 66	'B'
      0004DE 7D                    1512 	.db #0x7d	; 125
      0004DF 80                    1513 	.db #0x80	; 128
      0004E0 FF                    1514 	.db #0xff	; 255
      0004E1 44                    1515 	.db #0x44	; 68	'D'
      0004E2 7F                    1516 	.db #0x7f	; 127
      0004E3 28                    1517 	.db #0x28	; 40
      0004E4 3F                    1518 	.db #0x3f	; 63
      0004E5 07                    1519 	.db #0x07	; 7
      0004E6 07                    1520 	.db #0x07	; 7
      0004E7 00                    1521 	.db #0x00	; 0
      0004E8 00                    1522 	.db #0x00	; 0
      0004E9 08                    1523 	.db #0x08	; 8
      0004EA 00                    1524 	.db #0x00	; 0
      0004EB 08                    1525 	.db #0x08	; 8
      0004EC 00                    1526 	.db #0x00	; 0
      0004ED 1C                    1527 	.db #0x1c	; 28
      0004EE 00                    1528 	.db #0x00	; 0
      0004EF 7F                    1529 	.db #0x7f	; 127
      0004F0 00                    1530 	.db #0x00	; 0
      0004F1 1C                    1531 	.db #0x1c	; 28
      0004F2 00                    1532 	.db #0x00	; 0
      0004F3 08                    1533 	.db #0x08	; 8
      0004F4 00                    1534 	.db #0x00	; 0
      0004F5 08                    1535 	.db #0x08	; 8
      0004F6 00                    1536 	.db #0x00	; 0
      0004F7 00                    1537 	.db #0x00	; 0
      0004F8 00                    1538 	.db #0x00	; 0
      0004F9 00                    1539 	.db #0x00	; 0
      0004FA 00                    1540 	.db #0x00	; 0
      0004FB 00                    1541 	.db #0x00	; 0
      0004FC 00                    1542 	.db #0x00	; 0
      0004FD 10                    1543 	.db #0x10	; 16
      0004FE 00                    1544 	.db #0x00	; 0
      0004FF 00                    1545 	.db #0x00	; 0
      000500 00                    1546 	.db #0x00	; 0
      000501 00                    1547 	.db #0x00	; 0
      000502 00                    1548 	.db #0x00	; 0
      000503 00                    1549 	.db #0x00	; 0
      000504 00                    1550 	.db #0x00	; 0
      000505 00                    1551 	.db #0x00	; 0
      000506 00                    1552 	.db #0x00	; 0
      000507                       1553 _healthblock:
      000507 FE                    1554 	.db #0xfe	; 254
      000508 FE                    1555 	.db #0xfe	; 254
      000509 FE                    1556 	.db #0xfe	; 254
      00050A FE                    1557 	.db #0xfe	; 254
      00050B FE                    1558 	.db #0xfe	; 254
      00050C FE                    1559 	.db #0xfe	; 254
      00050D FE                    1560 	.db #0xfe	; 254
      00050E FE                    1561 	.db #0xfe	; 254
      00050F FE                    1562 	.db #0xfe	; 254
      000510 FE                    1563 	.db #0xfe	; 254
      000511 FE                    1564 	.db #0xfe	; 254
      000512 FE                    1565 	.db #0xfe	; 254
      000513 FE                    1566 	.db #0xfe	; 254
      000514 FE                    1567 	.db #0xfe	; 254
      000515 00                    1568 	.db #0x00	; 0
      000516 00                    1569 	.db #0x00	; 0
      000517                       1570 _enemyOptionCount:
      000517 05                    1571 	.db #0x05	; 5
      000518                       1572 _enemy1:
      000518 66                    1573 	.db #0x66	; 102	'f'
      000519 24                    1574 	.db #0x24	; 36
      00051A E7                    1575 	.db #0xe7	; 231
      00051B 66                    1576 	.db #0x66	; 102	'f'
      00051C F7                    1577 	.db #0xf7	; 247
      00051D E7                    1578 	.db #0xe7	; 231
      00051E 1C                    1579 	.db #0x1c	; 28
      00051F 18                    1580 	.db #0x18	; 24
      000520 38                    1581 	.db #0x38	; 56	'8'
      000521 18                    1582 	.db #0x18	; 24
      000522 EF                    1583 	.db #0xef	; 239
      000523 E7                    1584 	.db #0xe7	; 231
      000524 E7                    1585 	.db #0xe7	; 231
      000525 66                    1586 	.db #0x66	; 102	'f'
      000526 66                    1587 	.db #0x66	; 102	'f'
      000527 24                    1588 	.db #0x24	; 36
      000528 00                    1589 	.db #0x00	; 0
      000529 00                    1590 	.db #0x00	; 0
      00052A 00                    1591 	.db #0x00	; 0
      00052B 00                    1592 	.db #0x00	; 0
      00052C 00                    1593 	.db #0x00	; 0
      00052D 00                    1594 	.db #0x00	; 0
      00052E 00                    1595 	.db #0x00	; 0
      00052F 00                    1596 	.db #0x00	; 0
      000530 00                    1597 	.db #0x00	; 0
      000531 00                    1598 	.db #0x00	; 0
      000532 00                    1599 	.db #0x00	; 0
      000533 00                    1600 	.db #0x00	; 0
      000534 00                    1601 	.db #0x00	; 0
      000535 00                    1602 	.db #0x00	; 0
      000536 00                    1603 	.db #0x00	; 0
      000537 00                    1604 	.db #0x00	; 0
      000538 3C                    1605 	.db #0x3c	; 60
      000539 3C                    1606 	.db #0x3c	; 60
      00053A 5E                    1607 	.db #0x5e	; 94
      00053B 62                    1608 	.db #0x62	; 98	'b'
      00053C 8F                    1609 	.db #0x8f	; 143
      00053D F1                    1610 	.db #0xf1	; 241
      00053E C7                    1611 	.db #0xc7	; 199
      00053F F9                    1612 	.db #0xf9	; 249
      000540 C3                    1613 	.db #0xc3	; 195
      000541 FD                    1614 	.db #0xfd	; 253
      000542 E1                    1615 	.db #0xe1	; 225
      000543 FF                    1616 	.db #0xff	; 255
      000544 7A                    1617 	.db #0x7a	; 122	'z'
      000545 7E                    1618 	.db #0x7e	; 126
      000546 3C                    1619 	.db #0x3c	; 60
      000547 3C                    1620 	.db #0x3c	; 60
      000548 00                    1621 	.db #0x00	; 0
      000549 00                    1622 	.db #0x00	; 0
      00054A 00                    1623 	.db #0x00	; 0
      00054B 00                    1624 	.db #0x00	; 0
      00054C 00                    1625 	.db #0x00	; 0
      00054D 00                    1626 	.db #0x00	; 0
      00054E 00                    1627 	.db #0x00	; 0
      00054F 00                    1628 	.db #0x00	; 0
      000550 00                    1629 	.db #0x00	; 0
      000551 00                    1630 	.db #0x00	; 0
      000552 00                    1631 	.db #0x00	; 0
      000553 00                    1632 	.db #0x00	; 0
      000554 00                    1633 	.db #0x00	; 0
      000555 00                    1634 	.db #0x00	; 0
      000556 00                    1635 	.db #0x00	; 0
      000557 00                    1636 	.db #0x00	; 0
      000558 3C                    1637 	.db #0x3c	; 60
      000559 3E                    1638 	.db #0x3e	; 62
      00055A 20                    1639 	.db #0x20	; 32
      00055B 38                    1640 	.db #0x38	; 56	'8'
      00055C 44                    1641 	.db #0x44	; 68	'D'
      00055D 78                    1642 	.db #0x78	; 120	'x'
      00055E BA                    1643 	.db #0xba	; 186
      00055F C4                    1644 	.db #0xc4	; 196
      000560 BA                    1645 	.db #0xba	; 186
      000561 C4                    1646 	.db #0xc4	; 196
      000562 44                    1647 	.db #0x44	; 68	'D'
      000563 78                    1648 	.db #0x78	; 120	'x'
      000564 20                    1649 	.db #0x20	; 32
      000565 38                    1650 	.db #0x38	; 56	'8'
      000566 3C                    1651 	.db #0x3c	; 60
      000567 3E                    1652 	.db #0x3e	; 62
      000568                       1653 _largeenemies:
      000568 00                    1654 	.db #0x00	; 0
      000569 00                    1655 	.db #0x00	; 0
      00056A 00                    1656 	.db #0x00	; 0
      00056B 00                    1657 	.db #0x00	; 0
      00056C 00                    1658 	.db #0x00	; 0
      00056D 00                    1659 	.db #0x00	; 0
      00056E 00                    1660 	.db #0x00	; 0
      00056F 00                    1661 	.db #0x00	; 0
      000570 00                    1662 	.db #0x00	; 0
      000571 00                    1663 	.db #0x00	; 0
      000572 00                    1664 	.db #0x00	; 0
      000573 00                    1665 	.db #0x00	; 0
      000574 00                    1666 	.db #0x00	; 0
      000575 00                    1667 	.db #0x00	; 0
      000576 7F                    1668 	.db #0x7f	; 127
      000577 7F                    1669 	.db #0x7f	; 127
      000578 7F                    1670 	.db #0x7f	; 127
      000579 7F                    1671 	.db #0x7f	; 127
      00057A 00                    1672 	.db #0x00	; 0
      00057B 00                    1673 	.db #0x00	; 0
      00057C 00                    1674 	.db #0x00	; 0
      00057D 00                    1675 	.db #0x00	; 0
      00057E 00                    1676 	.db #0x00	; 0
      00057F 00                    1677 	.db #0x00	; 0
      000580 00                    1678 	.db #0x00	; 0
      000581 00                    1679 	.db #0x00	; 0
      000582 00                    1680 	.db #0x00	; 0
      000583 00                    1681 	.db #0x00	; 0
      000584 00                    1682 	.db #0x00	; 0
      000585 00                    1683 	.db #0x00	; 0
      000586 00                    1684 	.db #0x00	; 0
      000587 00                    1685 	.db #0x00	; 0
      000588 00                    1686 	.db #0x00	; 0
      000589 00                    1687 	.db #0x00	; 0
      00058A 40                    1688 	.db #0x40	; 64
      00058B 40                    1689 	.db #0x40	; 64
      00058C 60                    1690 	.db #0x60	; 96
      00058D 60                    1691 	.db #0x60	; 96
      00058E 70                    1692 	.db #0x70	; 112	'p'
      00058F 70                    1693 	.db #0x70	; 112	'p'
      000590 78                    1694 	.db #0x78	; 120	'x'
      000591 78                    1695 	.db #0x78	; 120	'x'
      000592 7C                    1696 	.db #0x7c	; 124
      000593 7C                    1697 	.db #0x7c	; 124
      000594 7E                    1698 	.db #0x7e	; 126
      000595 7E                    1699 	.db #0x7e	; 126
      000596 FF                    1700 	.db #0xff	; 255
      000597 FF                    1701 	.db #0xff	; 255
      000598 FF                    1702 	.db #0xff	; 255
      000599 FF                    1703 	.db #0xff	; 255
      00059A 7E                    1704 	.db #0x7e	; 126
      00059B 7E                    1705 	.db #0x7e	; 126
      00059C 7C                    1706 	.db #0x7c	; 124
      00059D 7C                    1707 	.db #0x7c	; 124
      00059E 78                    1708 	.db #0x78	; 120	'x'
      00059F 78                    1709 	.db #0x78	; 120	'x'
      0005A0 70                    1710 	.db #0x70	; 112	'p'
      0005A1 70                    1711 	.db #0x70	; 112	'p'
      0005A2 60                    1712 	.db #0x60	; 96
      0005A3 60                    1713 	.db #0x60	; 96
      0005A4 40                    1714 	.db #0x40	; 64
      0005A5 40                    1715 	.db #0x40	; 64
      0005A6 00                    1716 	.db #0x00	; 0
      0005A7 00                    1717 	.db #0x00	; 0
      0005A8 07                    1718 	.db #0x07	; 7
      0005A9 00                    1719 	.db #0x00	; 0
      0005AA 18                    1720 	.db #0x18	; 24
      0005AB 00                    1721 	.db #0x00	; 0
      0005AC 20                    1722 	.db #0x20	; 32
      0005AD 00                    1723 	.db #0x00	; 0
      0005AE 4C                    1724 	.db #0x4c	; 76	'L'
      0005AF 0C                    1725 	.db #0x0c	; 12
      0005B0 43                    1726 	.db #0x43	; 67	'C'
      0005B1 0F                    1727 	.db #0x0f	; 15
      0005B2 84                    1728 	.db #0x84	; 132
      0005B3 27                    1729 	.db #0x27	; 39
      0005B4 80                    1730 	.db #0x80	; 128
      0005B5 13                    1731 	.db #0x13	; 19
      0005B6 83                    1732 	.db #0x83	; 131
      0005B7 2A                    1733 	.db #0x2a	; 42
      0005B8 83                    1734 	.db #0x83	; 131
      0005B9 16                    1735 	.db #0x16	; 22
      0005BA 80                    1736 	.db #0x80	; 128
      0005BB 23                    1737 	.db #0x23	; 35
      0005BC 84                    1738 	.db #0x84	; 132
      0005BD 07                    1739 	.db #0x07	; 7
      0005BE 43                    1740 	.db #0x43	; 67	'C'
      0005BF 0F                    1741 	.db #0x0f	; 15
      0005C0 4C                    1742 	.db #0x4c	; 76	'L'
      0005C1 0C                    1743 	.db #0x0c	; 12
      0005C2 20                    1744 	.db #0x20	; 32
      0005C3 00                    1745 	.db #0x00	; 0
      0005C4 18                    1746 	.db #0x18	; 24
      0005C5 00                    1747 	.db #0x00	; 0
      0005C6 07                    1748 	.db #0x07	; 7
      0005C7 00                    1749 	.db #0x00	; 0
      0005C8 E0                    1750 	.db #0xe0	; 224
      0005C9 00                    1751 	.db #0x00	; 0
      0005CA 18                    1752 	.db #0x18	; 24
      0005CB 00                    1753 	.db #0x00	; 0
      0005CC 04                    1754 	.db #0x04	; 4
      0005CD 00                    1755 	.db #0x00	; 0
      0005CE 02                    1756 	.db #0x02	; 2
      0005CF 00                    1757 	.db #0x00	; 0
      0005D0 02                    1758 	.db #0x02	; 2
      0005D1 00                    1759 	.db #0x00	; 0
      0005D2 C1                    1760 	.db #0xc1	; 193
      0005D3 C0                    1761 	.db #0xc0	; 192
      0005D4 11                    1762 	.db #0x11	; 17
      0005D5 F0                    1763 	.db #0xf0	; 240
      0005D6 E5                    1764 	.db #0xe5	; 229
      0005D7 1C                    1765 	.db #0x1c	; 28
      0005D8 E5                    1766 	.db #0xe5	; 229
      0005D9 1C                    1767 	.db #0x1c	; 28
      0005DA 11                    1768 	.db #0x11	; 17
      0005DB F0                    1769 	.db #0xf0	; 240
      0005DC C1                    1770 	.db #0xc1	; 193
      0005DD C0                    1771 	.db #0xc0	; 192
      0005DE 02                    1772 	.db #0x02	; 2
      0005DF 00                    1773 	.db #0x00	; 0
      0005E0 02                    1774 	.db #0x02	; 2
      0005E1 00                    1775 	.db #0x00	; 0
      0005E2 04                    1776 	.db #0x04	; 4
      0005E3 00                    1777 	.db #0x00	; 0
      0005E4 18                    1778 	.db #0x18	; 24
      0005E5 00                    1779 	.db #0x00	; 0
      0005E6 E0                    1780 	.db #0xe0	; 224
      0005E7 00                    1781 	.db #0x00	; 0
      0005E8                       1782 _ProjectileTiles:
      0005E8 24                    1783 	.db #0x24	; 36
      0005E9 18                    1784 	.db #0x18	; 24
      0005EA 18                    1785 	.db #0x18	; 24
      0005EB 3C                    1786 	.db #0x3c	; 60
      0005EC 18                    1787 	.db #0x18	; 24
      0005ED 3C                    1788 	.db #0x3c	; 60
      0005EE 24                    1789 	.db #0x24	; 36
      0005EF 18                    1790 	.db #0x18	; 24
      0005F0 00                    1791 	.db #0x00	; 0
      0005F1 00                    1792 	.db #0x00	; 0
      0005F2 00                    1793 	.db #0x00	; 0
      0005F3 00                    1794 	.db #0x00	; 0
      0005F4 00                    1795 	.db #0x00	; 0
      0005F5 00                    1796 	.db #0x00	; 0
      0005F6 00                    1797 	.db #0x00	; 0
      0005F7 00                    1798 	.db #0x00	; 0
      0005F8 00                    1799 	.db #0x00	; 0
      0005F9 00                    1800 	.db #0x00	; 0
      0005FA 00                    1801 	.db #0x00	; 0
      0005FB 00                    1802 	.db #0x00	; 0
      0005FC 00                    1803 	.db #0x00	; 0
      0005FD 00                    1804 	.db #0x00	; 0
      0005FE 00                    1805 	.db #0x00	; 0
      0005FF 00                    1806 	.db #0x00	; 0
      000600 00                    1807 	.db #0x00	; 0
      000601 00                    1808 	.db #0x00	; 0
      000602 00                    1809 	.db #0x00	; 0
      000603 00                    1810 	.db #0x00	; 0
      000604 00                    1811 	.db #0x00	; 0
      000605 00                    1812 	.db #0x00	; 0
      000606 00                    1813 	.db #0x00	; 0
      000607 00                    1814 	.db #0x00	; 0
      000608 00                    1815 	.db #0x00	; 0
      000609 00                    1816 	.db #0x00	; 0
      00060A 00                    1817 	.db #0x00	; 0
      00060B 00                    1818 	.db #0x00	; 0
      00060C 09                    1819 	.db #0x09	; 9
      00060D 06                    1820 	.db #0x06	; 6
      00060E 06                    1821 	.db #0x06	; 6
      00060F 0F                    1822 	.db #0x0f	; 15
      000610 06                    1823 	.db #0x06	; 6
      000611 0F                    1824 	.db #0x0f	; 15
      000612 09                    1825 	.db #0x09	; 9
      000613 06                    1826 	.db #0x06	; 6
      000614 00                    1827 	.db #0x00	; 0
      000615 00                    1828 	.db #0x00	; 0
      000616 00                    1829 	.db #0x00	; 0
      000617 00                    1830 	.db #0x00	; 0
      000618 00                    1831 	.db #0x00	; 0
      000619 00                    1832 	.db #0x00	; 0
      00061A 00                    1833 	.db #0x00	; 0
      00061B 00                    1834 	.db #0x00	; 0
      00061C 00                    1835 	.db #0x00	; 0
      00061D 00                    1836 	.db #0x00	; 0
      00061E 00                    1837 	.db #0x00	; 0
      00061F 00                    1838 	.db #0x00	; 0
      000620 00                    1839 	.db #0x00	; 0
      000621 00                    1840 	.db #0x00	; 0
      000622 00                    1841 	.db #0x00	; 0
      000623 00                    1842 	.db #0x00	; 0
      000624 00                    1843 	.db #0x00	; 0
      000625 00                    1844 	.db #0x00	; 0
      000626 00                    1845 	.db #0x00	; 0
      000627 00                    1846 	.db #0x00	; 0
      000628 09                    1847 	.db #0x09	; 9
      000629 06                    1848 	.db #0x06	; 6
      00062A 06                    1849 	.db #0x06	; 6
      00062B 0F                    1850 	.db #0x0f	; 15
      00062C 06                    1851 	.db #0x06	; 6
      00062D 0F                    1852 	.db #0x0f	; 15
      00062E 09                    1853 	.db #0x09	; 9
      00062F 06                    1854 	.db #0x06	; 6
      000630 00                    1855 	.db #0x00	; 0
      000631 00                    1856 	.db #0x00	; 0
      000632 00                    1857 	.db #0x00	; 0
      000633 00                    1858 	.db #0x00	; 0
      000634 00                    1859 	.db #0x00	; 0
      000635 00                    1860 	.db #0x00	; 0
      000636 00                    1861 	.db #0x00	; 0
      000637 00                    1862 	.db #0x00	; 0
      000638 00                    1863 	.db #0x00	; 0
      000639 00                    1864 	.db #0x00	; 0
      00063A 00                    1865 	.db #0x00	; 0
      00063B 00                    1866 	.db #0x00	; 0
      00063C 00                    1867 	.db #0x00	; 0
      00063D 00                    1868 	.db #0x00	; 0
      00063E 00                    1869 	.db #0x00	; 0
      00063F 00                    1870 	.db #0x00	; 0
      000640 00                    1871 	.db #0x00	; 0
      000641 00                    1872 	.db #0x00	; 0
      000642 00                    1873 	.db #0x00	; 0
      000643 00                    1874 	.db #0x00	; 0
      000644 00                    1875 	.db #0x00	; 0
      000645 00                    1876 	.db #0x00	; 0
      000646 00                    1877 	.db #0x00	; 0
      000647 00                    1878 	.db #0x00	; 0
      000648 99                    1879 	.db #0x99	; 153
      000649 66                    1880 	.db #0x66	; 102	'f'
      00064A 66                    1881 	.db #0x66	; 102	'f'
      00064B FF                    1882 	.db #0xff	; 255
      00064C 66                    1883 	.db #0x66	; 102	'f'
      00064D FF                    1884 	.db #0xff	; 255
      00064E 99                    1885 	.db #0x99	; 153
      00064F 66                    1886 	.db #0x66	; 102	'f'
      000650 00                    1887 	.db #0x00	; 0
      000651 00                    1888 	.db #0x00	; 0
      000652 00                    1889 	.db #0x00	; 0
      000653 00                    1890 	.db #0x00	; 0
      000654 00                    1891 	.db #0x00	; 0
      000655 00                    1892 	.db #0x00	; 0
      000656 00                    1893 	.db #0x00	; 0
      000657 00                    1894 	.db #0x00	; 0
      000658 00                    1895 	.db #0x00	; 0
      000659 00                    1896 	.db #0x00	; 0
      00065A 00                    1897 	.db #0x00	; 0
      00065B 00                    1898 	.db #0x00	; 0
      00065C 00                    1899 	.db #0x00	; 0
      00065D 00                    1900 	.db #0x00	; 0
      00065E 00                    1901 	.db #0x00	; 0
      00065F 00                    1902 	.db #0x00	; 0
      000660 00                    1903 	.db #0x00	; 0
      000661 00                    1904 	.db #0x00	; 0
      000662 00                    1905 	.db #0x00	; 0
      000663 00                    1906 	.db #0x00	; 0
      000664 00                    1907 	.db #0x00	; 0
      000665 00                    1908 	.db #0x00	; 0
      000666 00                    1909 	.db #0x00	; 0
      000667 00                    1910 	.db #0x00	; 0
      000668 09                    1911 	.db #0x09	; 9
      000669 06                    1912 	.db #0x06	; 6
      00066A 06                    1913 	.db #0x06	; 6
      00066B 0F                    1914 	.db #0x0f	; 15
      00066C 06                    1915 	.db #0x06	; 6
      00066D 0F                    1916 	.db #0x0f	; 15
      00066E 09                    1917 	.db #0x09	; 9
      00066F 06                    1918 	.db #0x06	; 6
      000670 09                    1919 	.db #0x09	; 9
      000671 06                    1920 	.db #0x06	; 6
      000672 06                    1921 	.db #0x06	; 6
      000673 0F                    1922 	.db #0x0f	; 15
      000674 06                    1923 	.db #0x06	; 6
      000675 0F                    1924 	.db #0x0f	; 15
      000676 09                    1925 	.db #0x09	; 9
      000677 06                    1926 	.db #0x06	; 6
      000678 00                    1927 	.db #0x00	; 0
      000679 00                    1928 	.db #0x00	; 0
      00067A 00                    1929 	.db #0x00	; 0
      00067B 00                    1930 	.db #0x00	; 0
      00067C 00                    1931 	.db #0x00	; 0
      00067D 00                    1932 	.db #0x00	; 0
      00067E 00                    1933 	.db #0x00	; 0
      00067F 00                    1934 	.db #0x00	; 0
      000680 00                    1935 	.db #0x00	; 0
      000681 00                    1936 	.db #0x00	; 0
      000682 00                    1937 	.db #0x00	; 0
      000683 00                    1938 	.db #0x00	; 0
      000684 00                    1939 	.db #0x00	; 0
      000685 00                    1940 	.db #0x00	; 0
      000686 00                    1941 	.db #0x00	; 0
      000687 00                    1942 	.db #0x00	; 0
      000688 90                    1943 	.db #0x90	; 144
      000689 60                    1944 	.db #0x60	; 96
      00068A 60                    1945 	.db #0x60	; 96
      00068B F0                    1946 	.db #0xf0	; 240
      00068C 60                    1947 	.db #0x60	; 96
      00068D F0                    1948 	.db #0xf0	; 240
      00068E 90                    1949 	.db #0x90	; 144
      00068F 60                    1950 	.db #0x60	; 96
      000690 09                    1951 	.db #0x09	; 9
      000691 06                    1952 	.db #0x06	; 6
      000692 06                    1953 	.db #0x06	; 6
      000693 0F                    1954 	.db #0x0f	; 15
      000694 06                    1955 	.db #0x06	; 6
      000695 0F                    1956 	.db #0x0f	; 15
      000696 09                    1957 	.db #0x09	; 9
      000697 06                    1958 	.db #0x06	; 6
      000698 00                    1959 	.db #0x00	; 0
      000699 00                    1960 	.db #0x00	; 0
      00069A 00                    1961 	.db #0x00	; 0
      00069B 00                    1962 	.db #0x00	; 0
      00069C 00                    1963 	.db #0x00	; 0
      00069D 00                    1964 	.db #0x00	; 0
      00069E 00                    1965 	.db #0x00	; 0
      00069F 00                    1966 	.db #0x00	; 0
      0006A0 00                    1967 	.db #0x00	; 0
      0006A1 00                    1968 	.db #0x00	; 0
      0006A2 00                    1969 	.db #0x00	; 0
      0006A3 00                    1970 	.db #0x00	; 0
      0006A4 00                    1971 	.db #0x00	; 0
      0006A5 00                    1972 	.db #0x00	; 0
      0006A6 00                    1973 	.db #0x00	; 0
      0006A7 00                    1974 	.db #0x00	; 0
      0006A8 18                    1975 	.db #0x18	; 24
      0006A9 00                    1976 	.db #0x00	; 0
      0006AA 18                    1977 	.db #0x18	; 24
      0006AB 18                    1978 	.db #0x18	; 24
      0006AC 18                    1979 	.db #0x18	; 24
      0006AD 18                    1980 	.db #0x18	; 24
      0006AE 3C                    1981 	.db #0x3c	; 60
      0006AF 18                    1982 	.db #0x18	; 24
      0006B0 3C                    1983 	.db #0x3c	; 60
      0006B1 18                    1984 	.db #0x18	; 24
      0006B2 3C                    1985 	.db #0x3c	; 60
      0006B3 3C                    1986 	.db #0x3c	; 60
      0006B4 7E                    1987 	.db #0x7e	; 126
      0006B5 3C                    1988 	.db #0x3c	; 60
      0006B6 7E                    1989 	.db #0x7e	; 126
      0006B7 24                    1990 	.db #0x24	; 36
      0006B8 00                    1991 	.db #0x00	; 0
      0006B9 00                    1992 	.db #0x00	; 0
      0006BA 00                    1993 	.db #0x00	; 0
      0006BB 00                    1994 	.db #0x00	; 0
      0006BC 00                    1995 	.db #0x00	; 0
      0006BD 00                    1996 	.db #0x00	; 0
      0006BE 00                    1997 	.db #0x00	; 0
      0006BF 00                    1998 	.db #0x00	; 0
      0006C0 00                    1999 	.db #0x00	; 0
      0006C1 00                    2000 	.db #0x00	; 0
      0006C2 00                    2001 	.db #0x00	; 0
      0006C3 00                    2002 	.db #0x00	; 0
      0006C4 00                    2003 	.db #0x00	; 0
      0006C5 00                    2004 	.db #0x00	; 0
      0006C6 00                    2005 	.db #0x00	; 0
      0006C7 00                    2006 	.db #0x00	; 0
      0006C8 C0                    2007 	.db #0xc0	; 192
      0006C9 00                    2008 	.db #0x00	; 0
      0006CA F8                    2009 	.db #0xf8	; 248
      0006CB E0                    2010 	.db #0xe0	; 224
      0006CC FF                    2011 	.db #0xff	; 255
      0006CD 7E                    2012 	.db #0x7e	; 126
      0006CE FF                    2013 	.db #0xff	; 255
      0006CF 7E                    2014 	.db #0x7e	; 126
      0006D0 F8                    2015 	.db #0xf8	; 248
      0006D1 E0                    2016 	.db #0xe0	; 224
      0006D2 C0                    2017 	.db #0xc0	; 192
      0006D3 00                    2018 	.db #0x00	; 0
      0006D4 00                    2019 	.db #0x00	; 0
      0006D5 00                    2020 	.db #0x00	; 0
      0006D6 00                    2021 	.db #0x00	; 0
      0006D7 00                    2022 	.db #0x00	; 0
      0006D8 00                    2023 	.db #0x00	; 0
      0006D9 00                    2024 	.db #0x00	; 0
      0006DA 00                    2025 	.db #0x00	; 0
      0006DB 00                    2026 	.db #0x00	; 0
      0006DC 00                    2027 	.db #0x00	; 0
      0006DD 00                    2028 	.db #0x00	; 0
      0006DE 00                    2029 	.db #0x00	; 0
      0006DF 00                    2030 	.db #0x00	; 0
      0006E0 00                    2031 	.db #0x00	; 0
      0006E1 00                    2032 	.db #0x00	; 0
      0006E2 00                    2033 	.db #0x00	; 0
      0006E3 00                    2034 	.db #0x00	; 0
      0006E4 00                    2035 	.db #0x00	; 0
      0006E5 00                    2036 	.db #0x00	; 0
      0006E6 00                    2037 	.db #0x00	; 0
      0006E7 00                    2038 	.db #0x00	; 0
      0006E8 06                    2039 	.db #0x06	; 6
      0006E9 00                    2040 	.db #0x00	; 0
      0006EA 0F                    2041 	.db #0x0f	; 15
      0006EB 06                    2042 	.db #0x06	; 6
      0006EC 1F                    2043 	.db #0x1f	; 31
      0006ED 0E                    2044 	.db #0x0e	; 14
      0006EE 7E                    2045 	.db #0x7e	; 126
      0006EF 1C                    2046 	.db #0x1c	; 28
      0006F0 FC                    2047 	.db #0xfc	; 252
      0006F1 78                    2048 	.db #0x78	; 120	'x'
      0006F2 F8                    2049 	.db #0xf8	; 248
      0006F3 F0                    2050 	.db #0xf0	; 240
      0006F4 F8                    2051 	.db #0xf8	; 248
      0006F5 70                    2052 	.db #0x70	; 112	'p'
      0006F6 70                    2053 	.db #0x70	; 112	'p'
      0006F7 20                    2054 	.db #0x20	; 32
      0006F8 00                    2055 	.db #0x00	; 0
      0006F9 00                    2056 	.db #0x00	; 0
      0006FA 00                    2057 	.db #0x00	; 0
      0006FB 00                    2058 	.db #0x00	; 0
      0006FC 00                    2059 	.db #0x00	; 0
      0006FD 00                    2060 	.db #0x00	; 0
      0006FE 00                    2061 	.db #0x00	; 0
      0006FF 00                    2062 	.db #0x00	; 0
      000700 00                    2063 	.db #0x00	; 0
      000701 00                    2064 	.db #0x00	; 0
      000702 00                    2065 	.db #0x00	; 0
      000703 00                    2066 	.db #0x00	; 0
      000704 00                    2067 	.db #0x00	; 0
      000705 00                    2068 	.db #0x00	; 0
      000706 00                    2069 	.db #0x00	; 0
      000707 00                    2070 	.db #0x00	; 0
      000708                       2071 _upgrade:
      000708 01                    2072 	.db #0x01	; 1
      000709 00 00                 2073 	.dw #0x0000
      00070B 00 00                 2074 	.dw #0x0000
      00070D 00                    2075 	.db #0x00	; 0
      00070E 00                    2076 	.db #0x00	; 0
      00070F 00                    2077 	.db #0x00	; 0
      000710 70                    2078 	.db #0x70	; 112	'p'
      000711                       2079 _ammo:
      000711 01                    2080 	.db #0x01	; 1
      000712 00 00                 2081 	.dw #0x0000
      000714 00 00                 2082 	.dw #0x0000
      000716 00                    2083 	.db #0x00	; 0
      000717 01                    2084 	.db #0x01	; 1
      000718 05                    2085 	.db #0x05	; 5
      000719 72                    2086 	.db #0x72	; 114	'r'
      00071A                       2087 _health:
      00071A 01                    2088 	.db #0x01	; 1
      00071B 00 00                 2089 	.dw #0x0000
      00071D 00 00                 2090 	.dw #0x0000
      00071F 00                    2091 	.db #0x00	; 0
      000720 02                    2092 	.db #0x02	; 2
      000721 32                    2093 	.db #0x32	; 50	'2'
      000722 74                    2094 	.db #0x74	; 116	't'
      000723                       2095 _Pickups:
      000723 7E                    2096 	.db #0x7e	; 126
      000724 00                    2097 	.db #0x00	; 0
      000725 81                    2098 	.db #0x81	; 129
      000726 00                    2099 	.db #0x00	; 0
      000727 D7                    2100 	.db #0xd7	; 215
      000728 56                    2101 	.db #0x56	; 86	'V'
      000729 D7                    2102 	.db #0xd7	; 215
      00072A 56                    2103 	.db #0x56	; 86	'V'
      00072B D5                    2104 	.db #0xd5	; 213
      00072C 54                    2105 	.db #0x54	; 84	'T'
      00072D F5                    2106 	.db #0xf5	; 245
      00072E 74                    2107 	.db #0x74	; 116	't'
      00072F 81                    2108 	.db #0x81	; 129
      000730 00                    2109 	.db #0x00	; 0
      000731 7E                    2110 	.db #0x7e	; 126
      000732 00                    2111 	.db #0x00	; 0
      000733 00                    2112 	.db #0x00	; 0
      000734 00                    2113 	.db #0x00	; 0
      000735 00                    2114 	.db #0x00	; 0
      000736 00                    2115 	.db #0x00	; 0
      000737 00                    2116 	.db #0x00	; 0
      000738 00                    2117 	.db #0x00	; 0
      000739 00                    2118 	.db #0x00	; 0
      00073A 00                    2119 	.db #0x00	; 0
      00073B 00                    2120 	.db #0x00	; 0
      00073C 00                    2121 	.db #0x00	; 0
      00073D 00                    2122 	.db #0x00	; 0
      00073E 00                    2123 	.db #0x00	; 0
      00073F 00                    2124 	.db #0x00	; 0
      000740 00                    2125 	.db #0x00	; 0
      000741 00                    2126 	.db #0x00	; 0
      000742 00                    2127 	.db #0x00	; 0
      000743 7E                    2128 	.db #0x7e	; 126
      000744 00                    2129 	.db #0x00	; 0
      000745 8F                    2130 	.db #0x8f	; 143
      000746 06                    2131 	.db #0x06	; 6
      000747 9F                    2132 	.db #0x9f	; 159
      000748 0E                    2133 	.db #0x0e	; 14
      000749 FF                    2134 	.db #0xff	; 255
      00074A 1C                    2135 	.db #0x1c	; 28
      00074B FD                    2136 	.db #0xfd	; 253
      00074C 78                    2137 	.db #0x78	; 120	'x'
      00074D F9                    2138 	.db #0xf9	; 249
      00074E 70                    2139 	.db #0x70	; 112	'p'
      00074F F9                    2140 	.db #0xf9	; 249
      000750 70                    2141 	.db #0x70	; 112	'p'
      000751 7E                    2142 	.db #0x7e	; 126
      000752 00                    2143 	.db #0x00	; 0
      000753 00                    2144 	.db #0x00	; 0
      000754 00                    2145 	.db #0x00	; 0
      000755 00                    2146 	.db #0x00	; 0
      000756 00                    2147 	.db #0x00	; 0
      000757 00                    2148 	.db #0x00	; 0
      000758 00                    2149 	.db #0x00	; 0
      000759 00                    2150 	.db #0x00	; 0
      00075A 00                    2151 	.db #0x00	; 0
      00075B 00                    2152 	.db #0x00	; 0
      00075C 00                    2153 	.db #0x00	; 0
      00075D 00                    2154 	.db #0x00	; 0
      00075E 00                    2155 	.db #0x00	; 0
      00075F 00                    2156 	.db #0x00	; 0
      000760 00                    2157 	.db #0x00	; 0
      000761 00                    2158 	.db #0x00	; 0
      000762 00                    2159 	.db #0x00	; 0
      000763 7E                    2160 	.db #0x7e	; 126
      000764 00                    2161 	.db #0x00	; 0
      000765 99                    2162 	.db #0x99	; 153
      000766 18                    2163 	.db #0x18	; 24
      000767 99                    2164 	.db #0x99	; 153
      000768 18                    2165 	.db #0x18	; 24
      000769 FF                    2166 	.db #0xff	; 255
      00076A 7E                    2167 	.db #0x7e	; 126
      00076B FF                    2168 	.db #0xff	; 255
      00076C 7E                    2169 	.db #0x7e	; 126
      00076D 99                    2170 	.db #0x99	; 153
      00076E 18                    2171 	.db #0x18	; 24
      00076F 99                    2172 	.db #0x99	; 153
      000770 18                    2173 	.db #0x18	; 24
      000771 7E                    2174 	.db #0x7e	; 126
      000772 00                    2175 	.db #0x00	; 0
      000773 00                    2176 	.db #0x00	; 0
      000774 00                    2177 	.db #0x00	; 0
      000775 00                    2178 	.db #0x00	; 0
      000776 00                    2179 	.db #0x00	; 0
      000777 00                    2180 	.db #0x00	; 0
      000778 00                    2181 	.db #0x00	; 0
      000779 00                    2182 	.db #0x00	; 0
      00077A 00                    2183 	.db #0x00	; 0
      00077B 00                    2184 	.db #0x00	; 0
      00077C 00                    2185 	.db #0x00	; 0
      00077D 00                    2186 	.db #0x00	; 0
      00077E 00                    2187 	.db #0x00	; 0
      00077F 00                    2188 	.db #0x00	; 0
      000780 00                    2189 	.db #0x00	; 0
      000781 00                    2190 	.db #0x00	; 0
      000782 00                    2191 	.db #0x00	; 0
      000783                       2192 _Player1:
      000783 08                    2193 	.db #0x08	; 8
      000784 08                    2194 	.db #0x08	; 8
      000785 1C                    2195 	.db #0x1c	; 28
      000786 14                    2196 	.db #0x14	; 20
      000787 38                    2197 	.db #0x38	; 56	'8'
      000788 28                    2198 	.db #0x28	; 40
      000789 68                    2199 	.db #0x68	; 104	'h'
      00078A 58                    2200 	.db #0x58	; 88	'X'
      00078B 50                    2201 	.db #0x50	; 80	'P'
      00078C 71                    2202 	.db #0x71	; 113	'q'
      00078D D0                    2203 	.db #0xd0	; 208
      00078E B2                    2204 	.db #0xb2	; 178
      00078F D5                    2205 	.db #0xd5	; 213
      000790 B6                    2206 	.db #0xb6	; 182
      000791 D5                    2207 	.db #0xd5	; 213
      000792 B6                    2208 	.db #0xb6	; 182
      000793 D5                    2209 	.db #0xd5	; 213
      000794 B6                    2210 	.db #0xb6	; 182
      000795 CD                    2211 	.db #0xcd	; 205
      000796 BE                    2212 	.db #0xbe	; 190
      000797 C5                    2213 	.db #0xc5	; 197
      000798 BE                    2214 	.db #0xbe	; 190
      000799 65                    2215 	.db #0x65	; 101	'e'
      00079A 5E                    2216 	.db #0x5e	; 94
      00079B 3E                    2217 	.db #0x3e	; 62
      00079C 2F                    2218 	.db #0x2f	; 47
      00079D 13                    2219 	.db #0x13	; 19
      00079E 13                    2220 	.db #0x13	; 19
      00079F 06                    2221 	.db #0x06	; 6
      0007A0 07                    2222 	.db #0x07	; 7
      0007A1 07                    2223 	.db #0x07	; 7
      0007A2 05                    2224 	.db #0x05	; 5
      0007A3 10                    2225 	.db #0x10	; 16
      0007A4 10                    2226 	.db #0x10	; 16
      0007A5 38                    2227 	.db #0x38	; 56	'8'
      0007A6 28                    2228 	.db #0x28	; 40
      0007A7 1C                    2229 	.db #0x1c	; 28
      0007A8 14                    2230 	.db #0x14	; 20
      0007A9 16                    2231 	.db #0x16	; 22
      0007AA 1A                    2232 	.db #0x1a	; 26
      0007AB 0A                    2233 	.db #0x0a	; 10
      0007AC 8E                    2234 	.db #0x8e	; 142
      0007AD 0B                    2235 	.db #0x0b	; 11
      0007AE 4D                    2236 	.db #0x4d	; 77	'M'
      0007AF AB                    2237 	.db #0xab	; 171
      0007B0 6D                    2238 	.db #0x6d	; 109	'm'
      0007B1 AB                    2239 	.db #0xab	; 171
      0007B2 6D                    2240 	.db #0x6d	; 109	'm'
      0007B3 AB                    2241 	.db #0xab	; 171
      0007B4 6D                    2242 	.db #0x6d	; 109	'm'
      0007B5 B3                    2243 	.db #0xb3	; 179
      0007B6 7D                    2244 	.db #0x7d	; 125
      0007B7 A3                    2245 	.db #0xa3	; 163
      0007B8 7D                    2246 	.db #0x7d	; 125
      0007B9 A6                    2247 	.db #0xa6	; 166
      0007BA 7A                    2248 	.db #0x7a	; 122	'z'
      0007BB 7C                    2249 	.db #0x7c	; 124
      0007BC F4                    2250 	.db #0xf4	; 244
      0007BD C8                    2251 	.db #0xc8	; 200
      0007BE C8                    2252 	.db #0xc8	; 200
      0007BF 60                    2253 	.db #0x60	; 96
      0007C0 E0                    2254 	.db #0xe0	; 224
      0007C1 E0                    2255 	.db #0xe0	; 224
      0007C2 A0                    2256 	.db #0xa0	; 160
      0007C3 07                    2257 	.db #0x07	; 7
      0007C4 07                    2258 	.db #0x07	; 7
      0007C5 0F                    2259 	.db #0x0f	; 15
      0007C6 08                    2260 	.db #0x08	; 8
      0007C7 18                    2261 	.db #0x18	; 24
      0007C8 17                    2262 	.db #0x17	; 23
      0007C9 31                    2263 	.db #0x31	; 49	'1'
      0007CA 2F                    2264 	.db #0x2f	; 47
      0007CB 12                    2265 	.db #0x12	; 18
      0007CC 1E                    2266 	.db #0x1e	; 30
      0007CD DF                    2267 	.db #0xdf	; 223
      0007CE DF                    2268 	.db #0xdf	; 223
      0007CF F0                    2269 	.db #0xf0	; 240
      0007D0 7F                    2270 	.db #0x7f	; 127
      0007D1 AF                    2271 	.db #0xaf	; 175
      0007D2 F0                    2272 	.db #0xf0	; 240
      0007D3 AF                    2273 	.db #0xaf	; 175
      0007D4 F0                    2274 	.db #0xf0	; 240
      0007D5 F0                    2275 	.db #0xf0	; 240
      0007D6 7F                    2276 	.db #0x7f	; 127
      0007D7 DF                    2277 	.db #0xdf	; 223
      0007D8 DF                    2278 	.db #0xdf	; 223
      0007D9 12                    2279 	.db #0x12	; 18
      0007DA 1E                    2280 	.db #0x1e	; 30
      0007DB 31                    2281 	.db #0x31	; 49	'1'
      0007DC 2F                    2282 	.db #0x2f	; 47
      0007DD 18                    2283 	.db #0x18	; 24
      0007DE 17                    2284 	.db #0x17	; 23
      0007DF 0F                    2285 	.db #0x0f	; 15
      0007E0 08                    2286 	.db #0x08	; 8
      0007E1 07                    2287 	.db #0x07	; 7
      0007E2 07                    2288 	.db #0x07	; 7
      0007E3 E0                    2289 	.db #0xe0	; 224
      0007E4 E0                    2290 	.db #0xe0	; 224
      0007E5 F8                    2291 	.db #0xf8	; 248
      0007E6 18                    2292 	.db #0x18	; 24
      0007E7 0C                    2293 	.db #0x0c	; 12
      0007E8 F4                    2294 	.db #0xf4	; 244
      0007E9 F6                    2295 	.db #0xf6	; 246
      0007EA FA                    2296 	.db #0xfa	; 250
      0007EB 0F                    2297 	.db #0x0f	; 15
      0007EC 0D                    2298 	.db #0x0d	; 13
      0007ED C2                    2299 	.db #0xc2	; 194
      0007EE C2                    2300 	.db #0xc2	; 194
      0007EF 00                    2301 	.db #0x00	; 0
      0007F0 E0                    2302 	.db #0xe0	; 224
      0007F1 C0                    2303 	.db #0xc0	; 192
      0007F2 10                    2304 	.db #0x10	; 16
      0007F3 C0                    2305 	.db #0xc0	; 192
      0007F4 10                    2306 	.db #0x10	; 16
      0007F5 00                    2307 	.db #0x00	; 0
      0007F6 E0                    2308 	.db #0xe0	; 224
      0007F7 C2                    2309 	.db #0xc2	; 194
      0007F8 C2                    2310 	.db #0xc2	; 194
      0007F9 0F                    2311 	.db #0x0f	; 15
      0007FA 0D                    2312 	.db #0x0d	; 13
      0007FB F6                    2313 	.db #0xf6	; 246
      0007FC FA                    2314 	.db #0xfa	; 250
      0007FD 0C                    2315 	.db #0x0c	; 12
      0007FE F4                    2316 	.db #0xf4	; 244
      0007FF F8                    2317 	.db #0xf8	; 248
      000800 18                    2318 	.db #0x18	; 24
      000801 E0                    2319 	.db #0xe0	; 224
      000802 E0                    2320 	.db #0xe0	; 224
      000803 07                    2321 	.db #0x07	; 7
      000804 07                    2322 	.db #0x07	; 7
      000805 1B                    2323 	.db #0x1b	; 27
      000806 1C                    2324 	.db #0x1c	; 28
      000807 38                    2325 	.db #0x38	; 56	'8'
      000808 27                    2326 	.db #0x27	; 39
      000809 60                    2327 	.db #0x60	; 96
      00080A 5E                    2328 	.db #0x5e	; 94
      00080B 60                    2329 	.db #0x60	; 96
      00080C 5C                    2330 	.db #0x5c	; 92
      00080D 41                    2331 	.db #0x41	; 65	'A'
      00080E 79                    2332 	.db #0x79	; 121	'y'
      00080F C4                    2333 	.db #0xc4	; 196
      000810 B7                    2334 	.db #0xb7	; 183
      000811 99                    2335 	.db #0x99	; 153
      000812 FE                    2336 	.db #0xfe	; 254
      000813 B3                    2337 	.db #0xb3	; 179
      000814 EC                    2338 	.db #0xec	; 236
      000815 67                    2339 	.db #0x67	; 103	'g'
      000816 58                    2340 	.db #0x58	; 88	'X'
      000817 2E                    2341 	.db #0x2e	; 46
      000818 31                    2342 	.db #0x31	; 49	'1'
      000819 5C                    2343 	.db #0x5c	; 92
      00081A 73                    2344 	.db #0x73	; 115	's'
      00081B 69                    2345 	.db #0x69	; 105	'i'
      00081C 5E                    2346 	.db #0x5e	; 94
      00081D 37                    2347 	.db #0x37	; 55	'7'
      00081E 2D                    2348 	.db #0x2d	; 45
      00081F 1A                    2349 	.db #0x1a	; 26
      000820 1B                    2350 	.db #0x1b	; 27
      000821 01                    2351 	.db #0x01	; 1
      000822 01                    2352 	.db #0x01	; 1
      000823 E0                    2353 	.db #0xe0	; 224
      000824 E0                    2354 	.db #0xe0	; 224
      000825 90                    2355 	.db #0x90	; 144
      000826 70                    2356 	.db #0x70	; 112	'p'
      000827 C0                    2357 	.db #0xc0	; 192
      000828 C0                    2358 	.db #0xc0	; 192
      000829 00                    2359 	.db #0x00	; 0
      00082A 00                    2360 	.db #0x00	; 0
      00082B 02                    2361 	.db #0x02	; 2
      00082C 02                    2362 	.db #0x02	; 2
      00082D C1                    2363 	.db #0xc1	; 193
      00082E C3                    2364 	.db #0xc3	; 195
      00082F 65                    2365 	.db #0x65	; 101	'e'
      000830 A7                    2366 	.db #0xa7	; 167
      000831 A7                    2367 	.db #0xa7	; 167
      000832 65                    2368 	.db #0x65	; 101	'e'
      000833 A3                    2369 	.db #0xa3	; 163
      000834 65                    2370 	.db #0x65	; 101	'e'
      000835 03                    2371 	.db #0x03	; 3
      000836 CD                    2372 	.db #0xcd	; 205
      000837 41                    2373 	.db #0x41	; 65	'A'
      000838 DF                    2374 	.db #0xdf	; 223
      000839 86                    2375 	.db #0x86	; 134
      00083A BA                    2376 	.db #0xba	; 186
      00083B 86                    2377 	.db #0x86	; 134
      00083C FA                    2378 	.db #0xfa	; 250
      00083D 1C                    2379 	.db #0x1c	; 28
      00083E E4                    2380 	.db #0xe4	; 228
      00083F 78                    2381 	.db #0x78	; 120	'x'
      000840 B8                    2382 	.db #0xb8	; 184
      000841 C0                    2383 	.db #0xc0	; 192
      000842 C0                    2384 	.db #0xc0	; 192
      000843 00                    2385 	.db #0x00	; 0
      000844 00                    2386 	.db #0x00	; 0
      000845 00                    2387 	.db #0x00	; 0
      000846 00                    2388 	.db #0x00	; 0
      000847 00                    2389 	.db #0x00	; 0
      000848 00                    2390 	.db #0x00	; 0
      000849 00                    2391 	.db #0x00	; 0
      00084A 00                    2392 	.db #0x00	; 0
      00084B 00                    2393 	.db #0x00	; 0
      00084C 00                    2394 	.db #0x00	; 0
      00084D 00                    2395 	.db #0x00	; 0
      00084E 00                    2396 	.db #0x00	; 0
      00084F 00                    2397 	.db #0x00	; 0
      000850 00                    2398 	.db #0x00	; 0
      000851 00                    2399 	.db #0x00	; 0
      000852 00                    2400 	.db #0x00	; 0
      000853 00                    2401 	.db #0x00	; 0
      000854 00                    2402 	.db #0x00	; 0
      000855 00                    2403 	.db #0x00	; 0
      000856 00                    2404 	.db #0x00	; 0
      000857 00                    2405 	.db #0x00	; 0
      000858 00                    2406 	.db #0x00	; 0
      000859 00                    2407 	.db #0x00	; 0
      00085A 00                    2408 	.db #0x00	; 0
      00085B 00                    2409 	.db #0x00	; 0
      00085C 00                    2410 	.db #0x00	; 0
      00085D 00                    2411 	.db #0x00	; 0
      00085E 00                    2412 	.db #0x00	; 0
      00085F 00                    2413 	.db #0x00	; 0
      000860 00                    2414 	.db #0x00	; 0
      000861 00                    2415 	.db #0x00	; 0
      000862 00                    2416 	.db #0x00	; 0
      000863 00                    2417 	.db #0x00	; 0
      000864 00                    2418 	.db #0x00	; 0
      000865 00                    2419 	.db #0x00	; 0
      000866 00                    2420 	.db #0x00	; 0
      000867 00                    2421 	.db #0x00	; 0
      000868 00                    2422 	.db #0x00	; 0
      000869 00                    2423 	.db #0x00	; 0
      00086A 00                    2424 	.db #0x00	; 0
      00086B 00                    2425 	.db #0x00	; 0
      00086C 00                    2426 	.db #0x00	; 0
      00086D 00                    2427 	.db #0x00	; 0
      00086E 00                    2428 	.db #0x00	; 0
      00086F 00                    2429 	.db #0x00	; 0
      000870 00                    2430 	.db #0x00	; 0
      000871 00                    2431 	.db #0x00	; 0
      000872 00                    2432 	.db #0x00	; 0
      000873 00                    2433 	.db #0x00	; 0
      000874 00                    2434 	.db #0x00	; 0
      000875 00                    2435 	.db #0x00	; 0
      000876 00                    2436 	.db #0x00	; 0
      000877 00                    2437 	.db #0x00	; 0
      000878 00                    2438 	.db #0x00	; 0
      000879 00                    2439 	.db #0x00	; 0
      00087A 00                    2440 	.db #0x00	; 0
      00087B 00                    2441 	.db #0x00	; 0
      00087C 00                    2442 	.db #0x00	; 0
      00087D 00                    2443 	.db #0x00	; 0
      00087E 00                    2444 	.db #0x00	; 0
      00087F 00                    2445 	.db #0x00	; 0
      000880 00                    2446 	.db #0x00	; 0
      000881 00                    2447 	.db #0x00	; 0
      000882 00                    2448 	.db #0x00	; 0
      000883                       2449 _ex:
      000883 00                    2450 	.db #0x00	; 0
      000884 00                    2451 	.db #0x00	; 0
      000885 00                    2452 	.db #0x00	; 0
      000886 00                    2453 	.db #0x00	; 0
      000887 00                    2454 	.db #0x00	; 0
      000888 00                    2455 	.db #0x00	; 0
      000889                       2456 _Ex1:
      000889 00                    2457 	.db #0x00	; 0
      00088A 00                    2458 	.db #0x00	; 0
      00088B 00                    2459 	.db #0x00	; 0
      00088C 00                    2460 	.db #0x00	; 0
      00088D 00                    2461 	.db #0x00	; 0
      00088E 00                    2462 	.db #0x00	; 0
      00088F 00                    2463 	.db #0x00	; 0
      000890 00                    2464 	.db #0x00	; 0
      000891 00                    2465 	.db #0x00	; 0
      000892 00                    2466 	.db #0x00	; 0
      000893 04                    2467 	.db #0x04	; 4
      000894 04                    2468 	.db #0x04	; 4
      000895 06                    2469 	.db #0x06	; 6
      000896 06                    2470 	.db #0x06	; 6
      000897 06                    2471 	.db #0x06	; 6
      000898 06                    2472 	.db #0x06	; 6
      000899 00                    2473 	.db #0x00	; 0
      00089A 00                    2474 	.db #0x00	; 0
      00089B 00                    2475 	.db #0x00	; 0
      00089C 00                    2476 	.db #0x00	; 0
      00089D 03                    2477 	.db #0x03	; 3
      00089E 03                    2478 	.db #0x03	; 3
      00089F 07                    2479 	.db #0x07	; 7
      0008A0 07                    2480 	.db #0x07	; 7
      0008A1 02                    2481 	.db #0x02	; 2
      0008A2 02                    2482 	.db #0x02	; 2
      0008A3 00                    2483 	.db #0x00	; 0
      0008A4 00                    2484 	.db #0x00	; 0
      0008A5 00                    2485 	.db #0x00	; 0
      0008A6 00                    2486 	.db #0x00	; 0
      0008A7 00                    2487 	.db #0x00	; 0
      0008A8 00                    2488 	.db #0x00	; 0
      0008A9 00                    2489 	.db #0x00	; 0
      0008AA 00                    2490 	.db #0x00	; 0
      0008AB 00                    2491 	.db #0x00	; 0
      0008AC 00                    2492 	.db #0x00	; 0
      0008AD 00                    2493 	.db #0x00	; 0
      0008AE 00                    2494 	.db #0x00	; 0
      0008AF 00                    2495 	.db #0x00	; 0
      0008B0 00                    2496 	.db #0x00	; 0
      0008B1 00                    2497 	.db #0x00	; 0
      0008B2 00                    2498 	.db #0x00	; 0
      0008B3 00                    2499 	.db #0x00	; 0
      0008B4 00                    2500 	.db #0x00	; 0
      0008B5 00                    2501 	.db #0x00	; 0
      0008B6 00                    2502 	.db #0x00	; 0
      0008B7 38                    2503 	.db #0x38	; 56	'8'
      0008B8 38                    2504 	.db #0x38	; 56	'8'
      0008B9 38                    2505 	.db #0x38	; 56	'8'
      0008BA 38                    2506 	.db #0x38	; 56	'8'
      0008BB 30                    2507 	.db #0x30	; 48	'0'
      0008BC 30                    2508 	.db #0x30	; 48	'0'
      0008BD 00                    2509 	.db #0x00	; 0
      0008BE 00                    2510 	.db #0x00	; 0
      0008BF 00                    2511 	.db #0x00	; 0
      0008C0 00                    2512 	.db #0x00	; 0
      0008C1 00                    2513 	.db #0x00	; 0
      0008C2 00                    2514 	.db #0x00	; 0
      0008C3 00                    2515 	.db #0x00	; 0
      0008C4 00                    2516 	.db #0x00	; 0
      0008C5 00                    2517 	.db #0x00	; 0
      0008C6 00                    2518 	.db #0x00	; 0
      0008C7 00                    2519 	.db #0x00	; 0
      0008C8 00                    2520 	.db #0x00	; 0
      0008C9 00                    2521 	.db #0x00	; 0
      0008CA 00                    2522 	.db #0x00	; 0
      0008CB 00                    2523 	.db #0x00	; 0
      0008CC 00                    2524 	.db #0x00	; 0
      0008CD 00                    2525 	.db #0x00	; 0
      0008CE 00                    2526 	.db #0x00	; 0
      0008CF 18                    2527 	.db #0x18	; 24
      0008D0 18                    2528 	.db #0x18	; 24
      0008D1 3E                    2529 	.db #0x3e	; 62
      0008D2 3E                    2530 	.db #0x3e	; 62
      0008D3 3E                    2531 	.db #0x3e	; 62
      0008D4 3E                    2532 	.db #0x3e	; 62
      0008D5 1C                    2533 	.db #0x1c	; 28
      0008D6 1C                    2534 	.db #0x1c	; 28
      0008D7 08                    2535 	.db #0x08	; 8
      0008D8 08                    2536 	.db #0x08	; 8
      0008D9 00                    2537 	.db #0x00	; 0
      0008DA 00                    2538 	.db #0x00	; 0
      0008DB 00                    2539 	.db #0x00	; 0
      0008DC 00                    2540 	.db #0x00	; 0
      0008DD 07                    2541 	.db #0x07	; 7
      0008DE 07                    2542 	.db #0x07	; 7
      0008DF 07                    2543 	.db #0x07	; 7
      0008E0 07                    2544 	.db #0x07	; 7
      0008E1 07                    2545 	.db #0x07	; 7
      0008E2 07                    2546 	.db #0x07	; 7
      0008E3 03                    2547 	.db #0x03	; 3
      0008E4 03                    2548 	.db #0x03	; 3
      0008E5 03                    2549 	.db #0x03	; 3
      0008E6 03                    2550 	.db #0x03	; 3
      0008E7 00                    2551 	.db #0x00	; 0
      0008E8 00                    2552 	.db #0x00	; 0
      0008E9 00                    2553 	.db #0x00	; 0
      0008EA 00                    2554 	.db #0x00	; 0
      0008EB 00                    2555 	.db #0x00	; 0
      0008EC 00                    2556 	.db #0x00	; 0
      0008ED 04                    2557 	.db #0x04	; 4
      0008EE 04                    2558 	.db #0x04	; 4
      0008EF 1E                    2559 	.db #0x1e	; 30
      0008F0 1E                    2560 	.db #0x1e	; 30
      0008F1 3E                    2561 	.db #0x3e	; 62
      0008F2 3E                    2562 	.db #0x3e	; 62
      0008F3 3E                    2563 	.db #0x3e	; 62
      0008F4 3E                    2564 	.db #0x3e	; 62
      0008F5 1E                    2565 	.db #0x1e	; 30
      0008F6 1E                    2566 	.db #0x1e	; 30
      0008F7 0C                    2567 	.db #0x0c	; 12
      0008F8 0C                    2568 	.db #0x0c	; 12
      0008F9 00                    2569 	.db #0x00	; 0
      0008FA 00                    2570 	.db #0x00	; 0
      0008FB 00                    2571 	.db #0x00	; 0
      0008FC 00                    2572 	.db #0x00	; 0
      0008FD 00                    2573 	.db #0x00	; 0
      0008FE 00                    2574 	.db #0x00	; 0
      0008FF 80                    2575 	.db #0x80	; 128
      000900 80                    2576 	.db #0x80	; 128
      000901 C0                    2577 	.db #0xc0	; 192
      000902 C0                    2578 	.db #0xc0	; 192
      000903 80                    2579 	.db #0x80	; 128
      000904 80                    2580 	.db #0x80	; 128
      000905 00                    2581 	.db #0x00	; 0
      000906 00                    2582 	.db #0x00	; 0
      000907 00                    2583 	.db #0x00	; 0
      000908 00                    2584 	.db #0x00	; 0
      000909 00                    2585 	.db #0x00	; 0
      00090A 00                    2586 	.db #0x00	; 0
      00090B 20                    2587 	.db #0x20	; 32
      00090C 20                    2588 	.db #0x20	; 32
      00090D 70                    2589 	.db #0x70	; 112	'p'
      00090E 70                    2590 	.db #0x70	; 112	'p'
      00090F 70                    2591 	.db #0x70	; 112	'p'
      000910 70                    2592 	.db #0x70	; 112	'p'
      000911 60                    2593 	.db #0x60	; 96
      000912 60                    2594 	.db #0x60	; 96
      000913 00                    2595 	.db #0x00	; 0
      000914 00                    2596 	.db #0x00	; 0
      000915 00                    2597 	.db #0x00	; 0
      000916 00                    2598 	.db #0x00	; 0
      000917 00                    2599 	.db #0x00	; 0
      000918 00                    2600 	.db #0x00	; 0
      000919 00                    2601 	.db #0x00	; 0
      00091A 00                    2602 	.db #0x00	; 0
      00091B 00                    2603 	.db #0x00	; 0
      00091C 00                    2604 	.db #0x00	; 0
      00091D 00                    2605 	.db #0x00	; 0
      00091E 00                    2606 	.db #0x00	; 0
      00091F 00                    2607 	.db #0x00	; 0
      000920 00                    2608 	.db #0x00	; 0
      000921 00                    2609 	.db #0x00	; 0
      000922 00                    2610 	.db #0x00	; 0
      000923 07                    2611 	.db #0x07	; 7
      000924 07                    2612 	.db #0x07	; 7
      000925 07                    2613 	.db #0x07	; 7
      000926 07                    2614 	.db #0x07	; 7
      000927 06                    2615 	.db #0x06	; 6
      000928 06                    2616 	.db #0x06	; 6
      000929 00                    2617 	.db #0x00	; 0
      00092A 00                    2618 	.db #0x00	; 0
      00092B 04                    2619 	.db #0x04	; 4
      00092C 04                    2620 	.db #0x04	; 4
      00092D 0E                    2621 	.db #0x0e	; 14
      00092E 0E                    2622 	.db #0x0e	; 14
      00092F 0E                    2623 	.db #0x0e	; 14
      000930 0E                    2624 	.db #0x0e	; 14
      000931 00                    2625 	.db #0x00	; 0
      000932 00                    2626 	.db #0x00	; 0
      000933 00                    2627 	.db #0x00	; 0
      000934 00                    2628 	.db #0x00	; 0
      000935 00                    2629 	.db #0x00	; 0
      000936 00                    2630 	.db #0x00	; 0
      000937 00                    2631 	.db #0x00	; 0
      000938 00                    2632 	.db #0x00	; 0
      000939 00                    2633 	.db #0x00	; 0
      00093A 00                    2634 	.db #0x00	; 0
      00093B 00                    2635 	.db #0x00	; 0
      00093C 00                    2636 	.db #0x00	; 0
      00093D 00                    2637 	.db #0x00	; 0
      00093E 00                    2638 	.db #0x00	; 0
      00093F 00                    2639 	.db #0x00	; 0
      000940 00                    2640 	.db #0x00	; 0
      000941 00                    2641 	.db #0x00	; 0
      000942 00                    2642 	.db #0x00	; 0
      000943 00                    2643 	.db #0x00	; 0
      000944 00                    2644 	.db #0x00	; 0
      000945 00                    2645 	.db #0x00	; 0
      000946 00                    2646 	.db #0x00	; 0
      000947 00                    2647 	.db #0x00	; 0
      000948 00                    2648 	.db #0x00	; 0
      000949 00                    2649 	.db #0x00	; 0
      00094A 00                    2650 	.db #0x00	; 0
      00094B 40                    2651 	.db #0x40	; 64
      00094C 40                    2652 	.db #0x40	; 64
      00094D 60                    2653 	.db #0x60	; 96
      00094E 60                    2654 	.db #0x60	; 96
      00094F 00                    2655 	.db #0x00	; 0
      000950 00                    2656 	.db #0x00	; 0
      000951 00                    2657 	.db #0x00	; 0
      000952 00                    2658 	.db #0x00	; 0
      000953 00                    2659 	.db #0x00	; 0
      000954 00                    2660 	.db #0x00	; 0
      000955 00                    2661 	.db #0x00	; 0
      000956 00                    2662 	.db #0x00	; 0
      000957 00                    2663 	.db #0x00	; 0
      000958 00                    2664 	.db #0x00	; 0
      000959 00                    2665 	.db #0x00	; 0
      00095A 00                    2666 	.db #0x00	; 0
      00095B 00                    2667 	.db #0x00	; 0
      00095C 00                    2668 	.db #0x00	; 0
      00095D 00                    2669 	.db #0x00	; 0
      00095E 00                    2670 	.db #0x00	; 0
      00095F 00                    2671 	.db #0x00	; 0
      000960 00                    2672 	.db #0x00	; 0
      000961 00                    2673 	.db #0x00	; 0
      000962 00                    2674 	.db #0x00	; 0
      000963 00                    2675 	.db #0x00	; 0
      000964 00                    2676 	.db #0x00	; 0
      000965 04                    2677 	.db #0x04	; 4
      000966 04                    2678 	.db #0x04	; 4
      000967 06                    2679 	.db #0x06	; 6
      000968 06                    2680 	.db #0x06	; 6
      000969 00                    2681 	.db #0x00	; 0
      00096A 00                    2682 	.db #0x00	; 0
      00096B 02                    2683 	.db #0x02	; 2
      00096C 02                    2684 	.db #0x02	; 2
      00096D 02                    2685 	.db #0x02	; 2
      00096E 02                    2686 	.db #0x02	; 2
      00096F 00                    2687 	.db #0x00	; 0
      000970 00                    2688 	.db #0x00	; 0
      000971 00                    2689 	.db #0x00	; 0
      000972 00                    2690 	.db #0x00	; 0
      000973 00                    2691 	.db #0x00	; 0
      000974 00                    2692 	.db #0x00	; 0
      000975 00                    2693 	.db #0x00	; 0
      000976 00                    2694 	.db #0x00	; 0
      000977 00                    2695 	.db #0x00	; 0
      000978 00                    2696 	.db #0x00	; 0
      000979 00                    2697 	.db #0x00	; 0
      00097A 00                    2698 	.db #0x00	; 0
      00097B 00                    2699 	.db #0x00	; 0
      00097C 00                    2700 	.db #0x00	; 0
      00097D 00                    2701 	.db #0x00	; 0
      00097E 00                    2702 	.db #0x00	; 0
      00097F 00                    2703 	.db #0x00	; 0
      000980 00                    2704 	.db #0x00	; 0
      000981 00                    2705 	.db #0x00	; 0
      000982 00                    2706 	.db #0x00	; 0
      000983 00                    2707 	.db #0x00	; 0
      000984 00                    2708 	.db #0x00	; 0
      000985 00                    2709 	.db #0x00	; 0
      000986 00                    2710 	.db #0x00	; 0
      000987 00                    2711 	.db #0x00	; 0
      000988 00                    2712 	.db #0x00	; 0
      000989                       2713 _Ex2:
      000989 00                    2714 	.db #0x00	; 0
      00098A 00                    2715 	.db #0x00	; 0
      00098B 00                    2716 	.db #0x00	; 0
      00098C 00                    2717 	.db #0x00	; 0
      00098D 00                    2718 	.db #0x00	; 0
      00098E 00                    2719 	.db #0x00	; 0
      00098F 01                    2720 	.db #0x01	; 1
      000990 01                    2721 	.db #0x01	; 1
      000991 03                    2722 	.db #0x03	; 3
      000992 03                    2723 	.db #0x03	; 3
      000993 03                    2724 	.db #0x03	; 3
      000994 03                    2725 	.db #0x03	; 3
      000995 00                    2726 	.db #0x00	; 0
      000996 00                    2727 	.db #0x00	; 0
      000997 06                    2728 	.db #0x06	; 6
      000998 06                    2729 	.db #0x06	; 6
      000999 0E                    2730 	.db #0x0e	; 14
      00099A 0E                    2731 	.db #0x0e	; 14
      00099B 0E                    2732 	.db #0x0e	; 14
      00099C 0E                    2733 	.db #0x0e	; 14
      00099D 00                    2734 	.db #0x00	; 0
      00099E 00                    2735 	.db #0x00	; 0
      00099F 00                    2736 	.db #0x00	; 0
      0009A0 00                    2737 	.db #0x00	; 0
      0009A1 00                    2738 	.db #0x00	; 0
      0009A2 00                    2739 	.db #0x00	; 0
      0009A3 00                    2740 	.db #0x00	; 0
      0009A4 00                    2741 	.db #0x00	; 0
      0009A5 00                    2742 	.db #0x00	; 0
      0009A6 00                    2743 	.db #0x00	; 0
      0009A7 00                    2744 	.db #0x00	; 0
      0009A8 00                    2745 	.db #0x00	; 0
      0009A9 00                    2746 	.db #0x00	; 0
      0009AA 00                    2747 	.db #0x00	; 0
      0009AB 00                    2748 	.db #0x00	; 0
      0009AC 00                    2749 	.db #0x00	; 0
      0009AD 00                    2750 	.db #0x00	; 0
      0009AE 00                    2751 	.db #0x00	; 0
      0009AF 80                    2752 	.db #0x80	; 128
      0009B0 80                    2753 	.db #0x80	; 128
      0009B1 80                    2754 	.db #0x80	; 128
      0009B2 80                    2755 	.db #0x80	; 128
      0009B3 00                    2756 	.db #0x00	; 0
      0009B4 00                    2757 	.db #0x00	; 0
      0009B5 60                    2758 	.db #0x60	; 96
      0009B6 60                    2759 	.db #0x60	; 96
      0009B7 60                    2760 	.db #0x60	; 96
      0009B8 60                    2761 	.db #0x60	; 96
      0009B9 00                    2762 	.db #0x00	; 0
      0009BA 00                    2763 	.db #0x00	; 0
      0009BB C0                    2764 	.db #0xc0	; 192
      0009BC C0                    2765 	.db #0xc0	; 192
      0009BD C0                    2766 	.db #0xc0	; 192
      0009BE C0                    2767 	.db #0xc0	; 192
      0009BF C0                    2768 	.db #0xc0	; 192
      0009C0 C0                    2769 	.db #0xc0	; 192
      0009C1 00                    2770 	.db #0x00	; 0
      0009C2 00                    2771 	.db #0x00	; 0
      0009C3 00                    2772 	.db #0x00	; 0
      0009C4 00                    2773 	.db #0x00	; 0
      0009C5 00                    2774 	.db #0x00	; 0
      0009C6 00                    2775 	.db #0x00	; 0
      0009C7 00                    2776 	.db #0x00	; 0
      0009C8 00                    2777 	.db #0x00	; 0
      0009C9 00                    2778 	.db #0x00	; 0
      0009CA 00                    2779 	.db #0x00	; 0
      0009CB 00                    2780 	.db #0x00	; 0
      0009CC 00                    2781 	.db #0x00	; 0
      0009CD 03                    2782 	.db #0x03	; 3
      0009CE 03                    2783 	.db #0x03	; 3
      0009CF 03                    2784 	.db #0x03	; 3
      0009D0 03                    2785 	.db #0x03	; 3
      0009D1 03                    2786 	.db #0x03	; 3
      0009D2 03                    2787 	.db #0x03	; 3
      0009D3 01                    2788 	.db #0x01	; 1
      0009D4 01                    2789 	.db #0x01	; 1
      0009D5 00                    2790 	.db #0x00	; 0
      0009D6 00                    2791 	.db #0x00	; 0
      0009D7 00                    2792 	.db #0x00	; 0
      0009D8 00                    2793 	.db #0x00	; 0
      0009D9 00                    2794 	.db #0x00	; 0
      0009DA 00                    2795 	.db #0x00	; 0
      0009DB 1C                    2796 	.db #0x1c	; 28
      0009DC 1C                    2797 	.db #0x1c	; 28
      0009DD 3C                    2798 	.db #0x3c	; 60
      0009DE 3C                    2799 	.db #0x3c	; 60
      0009DF 3C                    2800 	.db #0x3c	; 60
      0009E0 3C                    2801 	.db #0x3c	; 60
      0009E1 30                    2802 	.db #0x30	; 48	'0'
      0009E2 30                    2803 	.db #0x30	; 48	'0'
      0009E3 00                    2804 	.db #0x00	; 0
      0009E4 00                    2805 	.db #0x00	; 0
      0009E5 00                    2806 	.db #0x00	; 0
      0009E6 00                    2807 	.db #0x00	; 0
      0009E7 00                    2808 	.db #0x00	; 0
      0009E8 00                    2809 	.db #0x00	; 0
      0009E9 00                    2810 	.db #0x00	; 0
      0009EA 00                    2811 	.db #0x00	; 0
      0009EB 00                    2812 	.db #0x00	; 0
      0009EC 00                    2813 	.db #0x00	; 0
      0009ED 80                    2814 	.db #0x80	; 128
      0009EE 80                    2815 	.db #0x80	; 128
      0009EF C0                    2816 	.db #0xc0	; 192
      0009F0 C0                    2817 	.db #0xc0	; 192
      0009F1 C0                    2818 	.db #0xc0	; 192
      0009F2 C0                    2819 	.db #0xc0	; 192
      0009F3 DE                    2820 	.db #0xde	; 222
      0009F4 DE                    2821 	.db #0xde	; 222
      0009F5 9E                    2822 	.db #0x9e	; 158
      0009F6 9E                    2823 	.db #0x9e	; 158
      0009F7 0E                    2824 	.db #0x0e	; 14
      0009F8 0E                    2825 	.db #0x0e	; 14
      0009F9 00                    2826 	.db #0x00	; 0
      0009FA 00                    2827 	.db #0x00	; 0
      0009FB 00                    2828 	.db #0x00	; 0
      0009FC 00                    2829 	.db #0x00	; 0
      0009FD 38                    2830 	.db #0x38	; 56	'8'
      0009FE 38                    2831 	.db #0x38	; 56	'8'
      0009FF 3C                    2832 	.db #0x3c	; 60
      000A00 3C                    2833 	.db #0x3c	; 60
      000A01 3C                    2834 	.db #0x3c	; 60
      000A02 3C                    2835 	.db #0x3c	; 60
      000A03 3C                    2836 	.db #0x3c	; 60
      000A04 3C                    2837 	.db #0x3c	; 60
      000A05 1C                    2838 	.db #0x1c	; 28
      000A06 1C                    2839 	.db #0x1c	; 28
      000A07 00                    2840 	.db #0x00	; 0
      000A08 00                    2841 	.db #0x00	; 0
      000A09 00                    2842 	.db #0x00	; 0
      000A0A 00                    2843 	.db #0x00	; 0
      000A0B 04                    2844 	.db #0x04	; 4
      000A0C 04                    2845 	.db #0x04	; 4
      000A0D 07                    2846 	.db #0x07	; 7
      000A0E 07                    2847 	.db #0x07	; 7
      000A0F 07                    2848 	.db #0x07	; 7
      000A10 07                    2849 	.db #0x07	; 7
      000A11 00                    2850 	.db #0x00	; 0
      000A12 00                    2851 	.db #0x00	; 0
      000A13 00                    2852 	.db #0x00	; 0
      000A14 00                    2853 	.db #0x00	; 0
      000A15 00                    2854 	.db #0x00	; 0
      000A16 00                    2855 	.db #0x00	; 0
      000A17 00                    2856 	.db #0x00	; 0
      000A18 00                    2857 	.db #0x00	; 0
      000A19 00                    2858 	.db #0x00	; 0
      000A1A 00                    2859 	.db #0x00	; 0
      000A1B 00                    2860 	.db #0x00	; 0
      000A1C 00                    2861 	.db #0x00	; 0
      000A1D 00                    2862 	.db #0x00	; 0
      000A1E 00                    2863 	.db #0x00	; 0
      000A1F 00                    2864 	.db #0x00	; 0
      000A20 00                    2865 	.db #0x00	; 0
      000A21 38                    2866 	.db #0x38	; 56	'8'
      000A22 38                    2867 	.db #0x38	; 56	'8'
      000A23 18                    2868 	.db #0x18	; 24
      000A24 18                    2869 	.db #0x18	; 24
      000A25 00                    2870 	.db #0x00	; 0
      000A26 00                    2871 	.db #0x00	; 0
      000A27 00                    2872 	.db #0x00	; 0
      000A28 00                    2873 	.db #0x00	; 0
      000A29 00                    2874 	.db #0x00	; 0
      000A2A 00                    2875 	.db #0x00	; 0
      000A2B 00                    2876 	.db #0x00	; 0
      000A2C 00                    2877 	.db #0x00	; 0
      000A2D 00                    2878 	.db #0x00	; 0
      000A2E 00                    2879 	.db #0x00	; 0
      000A2F 00                    2880 	.db #0x00	; 0
      000A30 00                    2881 	.db #0x00	; 0
      000A31 00                    2882 	.db #0x00	; 0
      000A32 00                    2883 	.db #0x00	; 0
      000A33 0C                    2884 	.db #0x0c	; 12
      000A34 0C                    2885 	.db #0x0c	; 12
      000A35 0E                    2886 	.db #0x0e	; 14
      000A36 0E                    2887 	.db #0x0e	; 14
      000A37 06                    2888 	.db #0x06	; 6
      000A38 06                    2889 	.db #0x06	; 6
      000A39 00                    2890 	.db #0x00	; 0
      000A3A 00                    2891 	.db #0x00	; 0
      000A3B 00                    2892 	.db #0x00	; 0
      000A3C 00                    2893 	.db #0x00	; 0
      000A3D 00                    2894 	.db #0x00	; 0
      000A3E 00                    2895 	.db #0x00	; 0
      000A3F 00                    2896 	.db #0x00	; 0
      000A40 00                    2897 	.db #0x00	; 0
      000A41 06                    2898 	.db #0x06	; 6
      000A42 06                    2899 	.db #0x06	; 6
      000A43 0E                    2900 	.db #0x0e	; 14
      000A44 0E                    2901 	.db #0x0e	; 14
      000A45 04                    2902 	.db #0x04	; 4
      000A46 04                    2903 	.db #0x04	; 4
      000A47 00                    2904 	.db #0x00	; 0
      000A48 00                    2905 	.db #0x00	; 0
      000A49 0E                    2906 	.db #0x0e	; 14
      000A4A 0E                    2907 	.db #0x0e	; 14
      000A4B 04                    2908 	.db #0x04	; 4
      000A4C 04                    2909 	.db #0x04	; 4
      000A4D 00                    2910 	.db #0x00	; 0
      000A4E 00                    2911 	.db #0x00	; 0
      000A4F 00                    2912 	.db #0x00	; 0
      000A50 00                    2913 	.db #0x00	; 0
      000A51 00                    2914 	.db #0x00	; 0
      000A52 00                    2915 	.db #0x00	; 0
      000A53 00                    2916 	.db #0x00	; 0
      000A54 00                    2917 	.db #0x00	; 0
      000A55 00                    2918 	.db #0x00	; 0
      000A56 00                    2919 	.db #0x00	; 0
      000A57 00                    2920 	.db #0x00	; 0
      000A58 00                    2921 	.db #0x00	; 0
      000A59 00                    2922 	.db #0x00	; 0
      000A5A 00                    2923 	.db #0x00	; 0
      000A5B 00                    2924 	.db #0x00	; 0
      000A5C 00                    2925 	.db #0x00	; 0
      000A5D 00                    2926 	.db #0x00	; 0
      000A5E 00                    2927 	.db #0x00	; 0
      000A5F 00                    2928 	.db #0x00	; 0
      000A60 00                    2929 	.db #0x00	; 0
      000A61 20                    2930 	.db #0x20	; 32
      000A62 20                    2931 	.db #0x20	; 32
      000A63 30                    2932 	.db #0x30	; 48	'0'
      000A64 30                    2933 	.db #0x30	; 48	'0'
      000A65 00                    2934 	.db #0x00	; 0
      000A66 00                    2935 	.db #0x00	; 0
      000A67 00                    2936 	.db #0x00	; 0
      000A68 00                    2937 	.db #0x00	; 0
      000A69 00                    2938 	.db #0x00	; 0
      000A6A 00                    2939 	.db #0x00	; 0
      000A6B 00                    2940 	.db #0x00	; 0
      000A6C 00                    2941 	.db #0x00	; 0
      000A6D 00                    2942 	.db #0x00	; 0
      000A6E 00                    2943 	.db #0x00	; 0
      000A6F 00                    2944 	.db #0x00	; 0
      000A70 00                    2945 	.db #0x00	; 0
      000A71 00                    2946 	.db #0x00	; 0
      000A72 00                    2947 	.db #0x00	; 0
      000A73 00                    2948 	.db #0x00	; 0
      000A74 00                    2949 	.db #0x00	; 0
      000A75 04                    2950 	.db #0x04	; 4
      000A76 04                    2951 	.db #0x04	; 4
      000A77 03                    2952 	.db #0x03	; 3
      000A78 03                    2953 	.db #0x03	; 3
      000A79 00                    2954 	.db #0x00	; 0
      000A7A 00                    2955 	.db #0x00	; 0
      000A7B 00                    2956 	.db #0x00	; 0
      000A7C 00                    2957 	.db #0x00	; 0
      000A7D 00                    2958 	.db #0x00	; 0
      000A7E 00                    2959 	.db #0x00	; 0
      000A7F 00                    2960 	.db #0x00	; 0
      000A80 00                    2961 	.db #0x00	; 0
      000A81 00                    2962 	.db #0x00	; 0
      000A82 00                    2963 	.db #0x00	; 0
      000A83 02                    2964 	.db #0x02	; 2
      000A84 02                    2965 	.db #0x02	; 2
      000A85 02                    2966 	.db #0x02	; 2
      000A86 02                    2967 	.db #0x02	; 2
      000A87 00                    2968 	.db #0x00	; 0
      000A88 00                    2969 	.db #0x00	; 0
      000A89                       2970 _Ex3:
      000A89 00                    2971 	.db #0x00	; 0
      000A8A 00                    2972 	.db #0x00	; 0
      000A8B 00                    2973 	.db #0x00	; 0
      000A8C 00                    2974 	.db #0x00	; 0
      000A8D 00                    2975 	.db #0x00	; 0
      000A8E 00                    2976 	.db #0x00	; 0
      000A8F 00                    2977 	.db #0x00	; 0
      000A90 00                    2978 	.db #0x00	; 0
      000A91 00                    2979 	.db #0x00	; 0
      000A92 00                    2980 	.db #0x00	; 0
      000A93 00                    2981 	.db #0x00	; 0
      000A94 00                    2982 	.db #0x00	; 0
      000A95 02                    2983 	.db #0x02	; 2
      000A96 02                    2984 	.db #0x02	; 2
      000A97 07                    2985 	.db #0x07	; 7
      000A98 07                    2986 	.db #0x07	; 7
      000A99 02                    2987 	.db #0x02	; 2
      000A9A 02                    2988 	.db #0x02	; 2
      000A9B 00                    2989 	.db #0x00	; 0
      000A9C 00                    2990 	.db #0x00	; 0
      000A9D 00                    2991 	.db #0x00	; 0
      000A9E 00                    2992 	.db #0x00	; 0
      000A9F 00                    2993 	.db #0x00	; 0
      000AA0 00                    2994 	.db #0x00	; 0
      000AA1 00                    2995 	.db #0x00	; 0
      000AA2 00                    2996 	.db #0x00	; 0
      000AA3 00                    2997 	.db #0x00	; 0
      000AA4 00                    2998 	.db #0x00	; 0
      000AA5 00                    2999 	.db #0x00	; 0
      000AA6 00                    3000 	.db #0x00	; 0
      000AA7 00                    3001 	.db #0x00	; 0
      000AA8 00                    3002 	.db #0x00	; 0
      000AA9 00                    3003 	.db #0x00	; 0
      000AAA 00                    3004 	.db #0x00	; 0
      000AAB 00                    3005 	.db #0x00	; 0
      000AAC 00                    3006 	.db #0x00	; 0
      000AAD 00                    3007 	.db #0x00	; 0
      000AAE 00                    3008 	.db #0x00	; 0
      000AAF 00                    3009 	.db #0x00	; 0
      000AB0 00                    3010 	.db #0x00	; 0
      000AB1 00                    3011 	.db #0x00	; 0
      000AB2 00                    3012 	.db #0x00	; 0
      000AB3 00                    3013 	.db #0x00	; 0
      000AB4 00                    3014 	.db #0x00	; 0
      000AB5 20                    3015 	.db #0x20	; 32
      000AB6 20                    3016 	.db #0x20	; 32
      000AB7 70                    3017 	.db #0x70	; 112	'p'
      000AB8 70                    3018 	.db #0x70	; 112	'p'
      000AB9 20                    3019 	.db #0x20	; 32
      000ABA 20                    3020 	.db #0x20	; 32
      000ABB 00                    3021 	.db #0x00	; 0
      000ABC 00                    3022 	.db #0x00	; 0
      000ABD 00                    3023 	.db #0x00	; 0
      000ABE 00                    3024 	.db #0x00	; 0
      000ABF 00                    3025 	.db #0x00	; 0
      000AC0 00                    3026 	.db #0x00	; 0
      000AC1 00                    3027 	.db #0x00	; 0
      000AC2 00                    3028 	.db #0x00	; 0
      000AC3 00                    3029 	.db #0x00	; 0
      000AC4 00                    3030 	.db #0x00	; 0
      000AC5 00                    3031 	.db #0x00	; 0
      000AC6 00                    3032 	.db #0x00	; 0
      000AC7 00                    3033 	.db #0x00	; 0
      000AC8 00                    3034 	.db #0x00	; 0
      000AC9 00                    3035 	.db #0x00	; 0
      000ACA 00                    3036 	.db #0x00	; 0
      000ACB 00                    3037 	.db #0x00	; 0
      000ACC 00                    3038 	.db #0x00	; 0
      000ACD 00                    3039 	.db #0x00	; 0
      000ACE 00                    3040 	.db #0x00	; 0
      000ACF 00                    3041 	.db #0x00	; 0
      000AD0 00                    3042 	.db #0x00	; 0
      000AD1 00                    3043 	.db #0x00	; 0
      000AD2 00                    3044 	.db #0x00	; 0
      000AD3 10                    3045 	.db #0x10	; 16
      000AD4 10                    3046 	.db #0x10	; 16
      000AD5 38                    3047 	.db #0x38	; 56	'8'
      000AD6 38                    3048 	.db #0x38	; 56	'8'
      000AD7 3E                    3049 	.db #0x3e	; 62
      000AD8 3E                    3050 	.db #0x3e	; 62
      000AD9 18                    3051 	.db #0x18	; 24
      000ADA 18                    3052 	.db #0x18	; 24
      000ADB 00                    3053 	.db #0x00	; 0
      000ADC 00                    3054 	.db #0x00	; 0
      000ADD 00                    3055 	.db #0x00	; 0
      000ADE 00                    3056 	.db #0x00	; 0
      000ADF 00                    3057 	.db #0x00	; 0
      000AE0 00                    3058 	.db #0x00	; 0
      000AE1 00                    3059 	.db #0x00	; 0
      000AE2 00                    3060 	.db #0x00	; 0
      000AE3 00                    3061 	.db #0x00	; 0
      000AE4 00                    3062 	.db #0x00	; 0
      000AE5 00                    3063 	.db #0x00	; 0
      000AE6 00                    3064 	.db #0x00	; 0
      000AE7 00                    3065 	.db #0x00	; 0
      000AE8 00                    3066 	.db #0x00	; 0
      000AE9 00                    3067 	.db #0x00	; 0
      000AEA 00                    3068 	.db #0x00	; 0
      000AEB 00                    3069 	.db #0x00	; 0
      000AEC 00                    3070 	.db #0x00	; 0
      000AED 00                    3071 	.db #0x00	; 0
      000AEE 00                    3072 	.db #0x00	; 0
      000AEF 00                    3073 	.db #0x00	; 0
      000AF0 00                    3074 	.db #0x00	; 0
      000AF1 00                    3075 	.db #0x00	; 0
      000AF2 00                    3076 	.db #0x00	; 0
      000AF3 00                    3077 	.db #0x00	; 0
      000AF4 00                    3078 	.db #0x00	; 0
      000AF5 1C                    3079 	.db #0x1c	; 28
      000AF6 1C                    3080 	.db #0x1c	; 28
      000AF7 7C                    3081 	.db #0x7c	; 124
      000AF8 7C                    3082 	.db #0x7c	; 124
      000AF9 1C                    3083 	.db #0x1c	; 28
      000AFA 1C                    3084 	.db #0x1c	; 28
      000AFB 08                    3085 	.db #0x08	; 8
      000AFC 08                    3086 	.db #0x08	; 8
      000AFD 00                    3087 	.db #0x00	; 0
      000AFE 00                    3088 	.db #0x00	; 0
      000AFF 00                    3089 	.db #0x00	; 0
      000B00 00                    3090 	.db #0x00	; 0
      000B01 00                    3091 	.db #0x00	; 0
      000B02 00                    3092 	.db #0x00	; 0
      000B03 00                    3093 	.db #0x00	; 0
      000B04 00                    3094 	.db #0x00	; 0
      000B05 00                    3095 	.db #0x00	; 0
      000B06 00                    3096 	.db #0x00	; 0
      000B07 00                    3097 	.db #0x00	; 0
      000B08 00                    3098 	.db #0x00	; 0
      000B09 00                    3099 	.db #0x00	; 0
      000B0A 00                    3100 	.db #0x00	; 0
      000B0B 00                    3101 	.db #0x00	; 0
      000B0C 00                    3102 	.db #0x00	; 0
      000B0D 00                    3103 	.db #0x00	; 0
      000B0E 00                    3104 	.db #0x00	; 0
      000B0F 00                    3105 	.db #0x00	; 0
      000B10 00                    3106 	.db #0x00	; 0
      000B11 00                    3107 	.db #0x00	; 0
      000B12 00                    3108 	.db #0x00	; 0
      000B13 00                    3109 	.db #0x00	; 0
      000B14 00                    3110 	.db #0x00	; 0
      000B15 28                    3111 	.db #0x28	; 40
      000B16 28                    3112 	.db #0x28	; 40
      000B17 30                    3113 	.db #0x30	; 48	'0'
      000B18 30                    3114 	.db #0x30	; 48	'0'
      000B19 38                    3115 	.db #0x38	; 56	'8'
      000B1A 38                    3116 	.db #0x38	; 56	'8'
      000B1B 10                    3117 	.db #0x10	; 16
      000B1C 10                    3118 	.db #0x10	; 16
      000B1D 00                    3119 	.db #0x00	; 0
      000B1E 00                    3120 	.db #0x00	; 0
      000B1F 00                    3121 	.db #0x00	; 0
      000B20 00                    3122 	.db #0x00	; 0
      000B21 00                    3123 	.db #0x00	; 0
      000B22 00                    3124 	.db #0x00	; 0
      000B23 00                    3125 	.db #0x00	; 0
      000B24 00                    3126 	.db #0x00	; 0
      000B25 00                    3127 	.db #0x00	; 0
      000B26 00                    3128 	.db #0x00	; 0
      000B27 00                    3129 	.db #0x00	; 0
      000B28 00                    3130 	.db #0x00	; 0
      000B29 00                    3131 	.db #0x00	; 0
      000B2A 00                    3132 	.db #0x00	; 0
      000B2B 00                    3133 	.db #0x00	; 0
      000B2C 00                    3134 	.db #0x00	; 0
      000B2D 00                    3135 	.db #0x00	; 0
      000B2E 00                    3136 	.db #0x00	; 0
      000B2F 00                    3137 	.db #0x00	; 0
      000B30 00                    3138 	.db #0x00	; 0
      000B31 00                    3139 	.db #0x00	; 0
      000B32 00                    3140 	.db #0x00	; 0
      000B33 00                    3141 	.db #0x00	; 0
      000B34 00                    3142 	.db #0x00	; 0
      000B35 04                    3143 	.db #0x04	; 4
      000B36 04                    3144 	.db #0x04	; 4
      000B37 0E                    3145 	.db #0x0e	; 14
      000B38 0E                    3146 	.db #0x0e	; 14
      000B39 0E                    3147 	.db #0x0e	; 14
      000B3A 0E                    3148 	.db #0x0e	; 14
      000B3B 00                    3149 	.db #0x00	; 0
      000B3C 00                    3150 	.db #0x00	; 0
      000B3D 00                    3151 	.db #0x00	; 0
      000B3E 00                    3152 	.db #0x00	; 0
      000B3F 00                    3153 	.db #0x00	; 0
      000B40 00                    3154 	.db #0x00	; 0
      000B41 00                    3155 	.db #0x00	; 0
      000B42 00                    3156 	.db #0x00	; 0
      000B43 00                    3157 	.db #0x00	; 0
      000B44 00                    3158 	.db #0x00	; 0
      000B45 00                    3159 	.db #0x00	; 0
      000B46 00                    3160 	.db #0x00	; 0
      000B47 00                    3161 	.db #0x00	; 0
      000B48 00                    3162 	.db #0x00	; 0
      000B49 00                    3163 	.db #0x00	; 0
      000B4A 00                    3164 	.db #0x00	; 0
      000B4B 00                    3165 	.db #0x00	; 0
      000B4C 00                    3166 	.db #0x00	; 0
      000B4D 00                    3167 	.db #0x00	; 0
      000B4E 00                    3168 	.db #0x00	; 0
      000B4F 00                    3169 	.db #0x00	; 0
      000B50 00                    3170 	.db #0x00	; 0
      000B51 00                    3171 	.db #0x00	; 0
      000B52 00                    3172 	.db #0x00	; 0
      000B53 00                    3173 	.db #0x00	; 0
      000B54 00                    3174 	.db #0x00	; 0
      000B55 00                    3175 	.db #0x00	; 0
      000B56 00                    3176 	.db #0x00	; 0
      000B57 60                    3177 	.db #0x60	; 96
      000B58 60                    3178 	.db #0x60	; 96
      000B59 40                    3179 	.db #0x40	; 64
      000B5A 40                    3180 	.db #0x40	; 64
      000B5B 00                    3181 	.db #0x00	; 0
      000B5C 00                    3182 	.db #0x00	; 0
      000B5D 00                    3183 	.db #0x00	; 0
      000B5E 00                    3184 	.db #0x00	; 0
      000B5F 00                    3185 	.db #0x00	; 0
      000B60 00                    3186 	.db #0x00	; 0
      000B61 00                    3187 	.db #0x00	; 0
      000B62 00                    3188 	.db #0x00	; 0
      000B63 00                    3189 	.db #0x00	; 0
      000B64 00                    3190 	.db #0x00	; 0
      000B65 00                    3191 	.db #0x00	; 0
      000B66 00                    3192 	.db #0x00	; 0
      000B67 00                    3193 	.db #0x00	; 0
      000B68 00                    3194 	.db #0x00	; 0
      000B69 00                    3195 	.db #0x00	; 0
      000B6A 00                    3196 	.db #0x00	; 0
      000B6B 00                    3197 	.db #0x00	; 0
      000B6C 00                    3198 	.db #0x00	; 0
      000B6D 00                    3199 	.db #0x00	; 0
      000B6E 00                    3200 	.db #0x00	; 0
      000B6F 00                    3201 	.db #0x00	; 0
      000B70 00                    3202 	.db #0x00	; 0
      000B71 00                    3203 	.db #0x00	; 0
      000B72 00                    3204 	.db #0x00	; 0
      000B73 00                    3205 	.db #0x00	; 0
      000B74 00                    3206 	.db #0x00	; 0
      000B75 00                    3207 	.db #0x00	; 0
      000B76 00                    3208 	.db #0x00	; 0
      000B77 02                    3209 	.db #0x02	; 2
      000B78 02                    3210 	.db #0x02	; 2
      000B79 02                    3211 	.db #0x02	; 2
      000B7A 02                    3212 	.db #0x02	; 2
      000B7B 00                    3213 	.db #0x00	; 0
      000B7C 00                    3214 	.db #0x00	; 0
      000B7D 00                    3215 	.db #0x00	; 0
      000B7E 00                    3216 	.db #0x00	; 0
      000B7F 00                    3217 	.db #0x00	; 0
      000B80 00                    3218 	.db #0x00	; 0
      000B81 00                    3219 	.db #0x00	; 0
      000B82 00                    3220 	.db #0x00	; 0
      000B83 00                    3221 	.db #0x00	; 0
      000B84 00                    3222 	.db #0x00	; 0
      000B85 00                    3223 	.db #0x00	; 0
      000B86 00                    3224 	.db #0x00	; 0
      000B87 00                    3225 	.db #0x00	; 0
      000B88 00                    3226 	.db #0x00	; 0
      000B89                       3227 _BLANKSIZE:
      000B89 03                    3228 	.db #0x03	; 3
      000B8A                       3229 _BLANK:
      000B8A 26                    3230 	.db #0x26	; 38
      000B8B 2B                    3231 	.db #0x2b	; 43
      000B8C 2C                    3232 	.db #0x2c	; 44
      000B8D                       3233 _EMPTYSPRITE:
      000B8D 50                    3234 	.db #0x50	; 80	'P'
      000B8E                       3235 _ENEMYCOUNT:
      000B8E 05                    3236 	.db #0x05	; 5
      000B8F                       3237 _xSpawnPositions:
      000B8F 00                    3238 	.db #0x00	; 0
      000B90 60                    3239 	.db #0x60	; 96
      000B91 B0                    3240 	.db #0xb0	; 176
      000B92 00                    3241 	.db #0x00	; 0
      000B93 B0                    3242 	.db #0xb0	; 176
      000B94 00                    3243 	.db #0x00	; 0
      000B95 60                    3244 	.db #0x60	; 96
      000B96 B0                    3245 	.db #0xb0	; 176
      000B97                       3246 _ySpawnPositions:
      000B97 00                    3247 	.db #0x00	; 0
      000B98 00                    3248 	.db #0x00	; 0
      000B99 00                    3249 	.db #0x00	; 0
      000B9A 5C                    3250 	.db #0x5c	; 92
      000B9B 5C                    3251 	.db #0x5c	; 92
      000B9C A0                    3252 	.db #0xa0	; 160
      000B9D A0                    3253 	.db #0xa0	; 160
      000B9E A0                    3254 	.db #0xa0	; 160
      000B9F                       3255 _PROJECTILECOUNT:
      000B9F 05                    3256 	.db #0x05	; 5
      000BA0                       3257 _PLAYERSIZE:
      000BA0 10                    3258 	.db #0x10	; 16
      000BA1                       3259 _maxHull:
      000BA1 64                    3260 	.db #0x64	;  100	'd'
      000BA2                       3261 _maxShield:
      000BA2 64                    3262 	.db #0x64	;  100	'd'
      000BA3                       3263 _MAXGUNLEVEL:
      000BA3 01                    3264 	.db #0x01	; 1
      000BA4                       3265 _SPLASHDROPOFF:
      000BA4 01                    3266 	.db #0x01	; 1
      000BA5                       3267 _exCount:
      000BA5 03                    3268 	.db #0x03	; 3
      000BA6                       3269 _EXPLFRAMETIME:
      000BA6 03                    3270 	.db #0x03	; 3
      000BA7                       3271 _exTileCount:
      000BA7 03                    3272 	.db #0x03	; 3
      000BA8                       3273 _EXTICKFREQUENCY:
      000BA8 01                    3274 	.db #0x01	; 1
                                   3275 ;src/main.c:159: void setHealthBar(uint8_t row, uint8_t hp) {
                                   3276 ;	---------------------------------
                                   3277 ; Function setHealthBar
                                   3278 ; ---------------------------------
      000BA9                       3279 _setHealthBar::
      000BA9 E8 FB                 3280 	add	sp, #-5
                                   3281 ;src/main.c:161: if (hp >= 80) {
      000BAB F8 08                 3282 	ldhl	sp,	#8
      000BAD 7E                    3283 	ld	a, (hl)
      000BAE D6 50                 3284 	sub	a, #0x50
      000BB0 38 31                 3285 	jr	C, 00102$
                                   3286 ;src/main.c:162: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000BB2 F8 00                 3287 	ldhl	sp,	#0
      000BB4 4D                    3288 	ld	c, l
      000BB5 44                    3289 	ld	b, h
      000BB6 36 50                 3290 	ld	(hl), #0x50
      000BB8 69                    3291 	ld	l, c
                                   3292 ;	spillPairReg hl
                                   3293 ;	spillPairReg hl
      000BB9 60                    3294 	ld	h, b
                                   3295 ;	spillPairReg hl
                                   3296 ;	spillPairReg hl
      000BBA 23                    3297 	inc	hl
      000BBB 36 50                 3298 	ld	(hl), #0x50
      000BBD 69                    3299 	ld	l, c
                                   3300 ;	spillPairReg hl
                                   3301 ;	spillPairReg hl
      000BBE 60                    3302 	ld	h, b
                                   3303 ;	spillPairReg hl
                                   3304 ;	spillPairReg hl
      000BBF 23                    3305 	inc	hl
      000BC0 23                    3306 	inc	hl
      000BC1 36 50                 3307 	ld	(hl), #0x50
      000BC3 69                    3308 	ld	l, c
                                   3309 ;	spillPairReg hl
                                   3310 ;	spillPairReg hl
      000BC4 60                    3311 	ld	h, b
                                   3312 ;	spillPairReg hl
                                   3313 ;	spillPairReg hl
      000BC5 23                    3314 	inc	hl
      000BC6 23                    3315 	inc	hl
      000BC7 23                    3316 	inc	hl
      000BC8 36 50                 3317 	ld	(hl), #0x50
      000BCA 21 04 00              3318 	ld	hl, #0x0004
      000BCD 09                    3319 	add	hl, bc
      000BCE 36 50                 3320 	ld	(hl), #0x50
                                   3321 ;src/main.c:163: set_win_tiles(5,row,5,1,blockmap);
      000BD0 C5                    3322 	push	bc
      000BD1 21 05 01              3323 	ld	hl, #0x105
      000BD4 E5                    3324 	push	hl
      000BD5 F8 0B                 3325 	ldhl	sp,	#11
      000BD7 66                    3326 	ld	h, (hl)
      000BD8 2E 05                 3327 	ld	l, #0x05
      000BDA E5                    3328 	push	hl
      000BDB CDr00r00              3329 	call	_set_win_tiles
      000BDE E8 06                 3330 	add	sp, #6
                                   3331 ;src/main.c:164: return;
      000BE0 C3rB7r0C              3332 	jp	00109$
      000BE3                       3333 00102$:
                                   3334 ;src/main.c:166: if (hp >= 60) {
      000BE3 F8 08                 3335 	ldhl	sp,	#8
      000BE5 7E                    3336 	ld	a, (hl)
      000BE6 D6 3C                 3337 	sub	a, #0x3c
      000BE8 38 31                 3338 	jr	C, 00104$
                                   3339 ;src/main.c:167: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000BEA F8 00                 3340 	ldhl	sp,	#0
      000BEC 4D                    3341 	ld	c, l
      000BED 44                    3342 	ld	b, h
      000BEE 36 50                 3343 	ld	(hl), #0x50
      000BF0 69                    3344 	ld	l, c
                                   3345 ;	spillPairReg hl
                                   3346 ;	spillPairReg hl
      000BF1 60                    3347 	ld	h, b
                                   3348 ;	spillPairReg hl
                                   3349 ;	spillPairReg hl
      000BF2 23                    3350 	inc	hl
      000BF3 36 50                 3351 	ld	(hl), #0x50
      000BF5 69                    3352 	ld	l, c
                                   3353 ;	spillPairReg hl
                                   3354 ;	spillPairReg hl
      000BF6 60                    3355 	ld	h, b
                                   3356 ;	spillPairReg hl
                                   3357 ;	spillPairReg hl
      000BF7 23                    3358 	inc	hl
      000BF8 23                    3359 	inc	hl
      000BF9 36 50                 3360 	ld	(hl), #0x50
      000BFB 69                    3361 	ld	l, c
                                   3362 ;	spillPairReg hl
                                   3363 ;	spillPairReg hl
      000BFC 60                    3364 	ld	h, b
                                   3365 ;	spillPairReg hl
                                   3366 ;	spillPairReg hl
      000BFD 23                    3367 	inc	hl
      000BFE 23                    3368 	inc	hl
      000BFF 23                    3369 	inc	hl
      000C00 36 50                 3370 	ld	(hl), #0x50
      000C02 21 04 00              3371 	ld	hl, #0x0004
      000C05 09                    3372 	add	hl, bc
      000C06 36 00                 3373 	ld	(hl), #0x00
                                   3374 ;src/main.c:168: set_win_tiles(5,row,5,1,blockmap);
      000C08 C5                    3375 	push	bc
      000C09 21 05 01              3376 	ld	hl, #0x105
      000C0C E5                    3377 	push	hl
      000C0D F8 0B                 3378 	ldhl	sp,	#11
      000C0F 66                    3379 	ld	h, (hl)
      000C10 2E 05                 3380 	ld	l, #0x05
      000C12 E5                    3381 	push	hl
      000C13 CDr00r00              3382 	call	_set_win_tiles
      000C16 E8 06                 3383 	add	sp, #6
                                   3384 ;src/main.c:169: return;
      000C18 C3rB7r0C              3385 	jp	00109$
      000C1B                       3386 00104$:
                                   3387 ;src/main.c:171: if (hp >= 40) {
      000C1B F8 08                 3388 	ldhl	sp,	#8
      000C1D 7E                    3389 	ld	a, (hl)
      000C1E D6 28                 3390 	sub	a, #0x28
      000C20 38 30                 3391 	jr	C, 00106$
                                   3392 ;src/main.c:172: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000C22 F8 00                 3393 	ldhl	sp,	#0
      000C24 4D                    3394 	ld	c, l
      000C25 44                    3395 	ld	b, h
      000C26 36 50                 3396 	ld	(hl), #0x50
      000C28 69                    3397 	ld	l, c
                                   3398 ;	spillPairReg hl
                                   3399 ;	spillPairReg hl
      000C29 60                    3400 	ld	h, b
                                   3401 ;	spillPairReg hl
                                   3402 ;	spillPairReg hl
      000C2A 23                    3403 	inc	hl
      000C2B 36 50                 3404 	ld	(hl), #0x50
      000C2D 69                    3405 	ld	l, c
                                   3406 ;	spillPairReg hl
                                   3407 ;	spillPairReg hl
      000C2E 60                    3408 	ld	h, b
                                   3409 ;	spillPairReg hl
                                   3410 ;	spillPairReg hl
      000C2F 23                    3411 	inc	hl
      000C30 23                    3412 	inc	hl
      000C31 36 50                 3413 	ld	(hl), #0x50
      000C33 59                    3414 	ld	e, c
      000C34 50                    3415 	ld	d, b
      000C35 13                    3416 	inc	de
      000C36 13                    3417 	inc	de
      000C37 13                    3418 	inc	de
      000C38 AF                    3419 	xor	a, a
      000C39 12                    3420 	ld	(de), a
      000C3A 21 04 00              3421 	ld	hl, #0x0004
      000C3D 09                    3422 	add	hl, bc
      000C3E 36 00                 3423 	ld	(hl), #0x00
                                   3424 ;src/main.c:173: set_win_tiles(5,row,5,1,blockmap);
      000C40 C5                    3425 	push	bc
      000C41 21 05 01              3426 	ld	hl, #0x105
      000C44 E5                    3427 	push	hl
      000C45 F8 0B                 3428 	ldhl	sp,	#11
      000C47 66                    3429 	ld	h, (hl)
      000C48 2E 05                 3430 	ld	l, #0x05
      000C4A E5                    3431 	push	hl
      000C4B CDr00r00              3432 	call	_set_win_tiles
      000C4E E8 06                 3433 	add	sp, #6
                                   3434 ;src/main.c:174: return;
      000C50 18 65                 3435 	jr	00109$
      000C52                       3436 00106$:
                                   3437 ;src/main.c:176: if (hp >= 20) {
      000C52 F8 08                 3438 	ldhl	sp,	#8
      000C54 7E                    3439 	ld	a, (hl)
      000C55 D6 14                 3440 	sub	a, #0x14
      000C57 38 30                 3441 	jr	C, 00108$
                                   3442 ;src/main.c:177: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000C59 F8 00                 3443 	ldhl	sp,	#0
      000C5B 4D                    3444 	ld	c, l
      000C5C 44                    3445 	ld	b, h
      000C5D 36 50                 3446 	ld	(hl), #0x50
      000C5F 69                    3447 	ld	l, c
                                   3448 ;	spillPairReg hl
                                   3449 ;	spillPairReg hl
      000C60 60                    3450 	ld	h, b
                                   3451 ;	spillPairReg hl
                                   3452 ;	spillPairReg hl
      000C61 23                    3453 	inc	hl
      000C62 36 50                 3454 	ld	(hl), #0x50
      000C64 59                    3455 	ld	e, c
      000C65 50                    3456 	ld	d, b
      000C66 13                    3457 	inc	de
      000C67 13                    3458 	inc	de
      000C68 AF                    3459 	xor	a, a
      000C69 12                    3460 	ld	(de), a
      000C6A 59                    3461 	ld	e, c
      000C6B 50                    3462 	ld	d, b
      000C6C 13                    3463 	inc	de
      000C6D 13                    3464 	inc	de
      000C6E 13                    3465 	inc	de
      000C6F AF                    3466 	xor	a, a
      000C70 12                    3467 	ld	(de), a
      000C71 21 04 00              3468 	ld	hl, #0x0004
      000C74 09                    3469 	add	hl, bc
      000C75 36 00                 3470 	ld	(hl), #0x00
                                   3471 ;src/main.c:178: set_win_tiles(5,row,5,1,blockmap);
      000C77 C5                    3472 	push	bc
      000C78 21 05 01              3473 	ld	hl, #0x105
      000C7B E5                    3474 	push	hl
      000C7C F8 0B                 3475 	ldhl	sp,	#11
      000C7E 66                    3476 	ld	h, (hl)
      000C7F 2E 05                 3477 	ld	l, #0x05
      000C81 E5                    3478 	push	hl
      000C82 CDr00r00              3479 	call	_set_win_tiles
      000C85 E8 06                 3480 	add	sp, #6
                                   3481 ;src/main.c:179: return;
      000C87 18 2E                 3482 	jr	00109$
      000C89                       3483 00108$:
                                   3484 ;src/main.c:181: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000C89 F8 00                 3485 	ldhl	sp,	#0
      000C8B 4D                    3486 	ld	c, l
      000C8C 44                    3487 	ld	b, h
      000C8D 36 50                 3488 	ld	(hl), #0x50
      000C8F 59                    3489 	ld	e, c
      000C90 50                    3490 	ld	d, b
      000C91 13                    3491 	inc	de
      000C92 AF                    3492 	xor	a, a
      000C93 12                    3493 	ld	(de), a
      000C94 59                    3494 	ld	e, c
      000C95 50                    3495 	ld	d, b
      000C96 13                    3496 	inc	de
      000C97 13                    3497 	inc	de
      000C98 AF                    3498 	xor	a, a
      000C99 12                    3499 	ld	(de), a
      000C9A 59                    3500 	ld	e, c
      000C9B 50                    3501 	ld	d, b
      000C9C 13                    3502 	inc	de
      000C9D 13                    3503 	inc	de
      000C9E 13                    3504 	inc	de
      000C9F AF                    3505 	xor	a, a
      000CA0 12                    3506 	ld	(de), a
      000CA1 21 04 00              3507 	ld	hl, #0x0004
      000CA4 09                    3508 	add	hl, bc
      000CA5 36 00                 3509 	ld	(hl), #0x00
                                   3510 ;src/main.c:182: set_win_tiles(5,row,5,1,blockmap);
      000CA7 C5                    3511 	push	bc
      000CA8 21 05 01              3512 	ld	hl, #0x105
      000CAB E5                    3513 	push	hl
      000CAC F8 0B                 3514 	ldhl	sp,	#11
      000CAE 66                    3515 	ld	h, (hl)
      000CAF 2E 05                 3516 	ld	l, #0x05
      000CB1 E5                    3517 	push	hl
      000CB2 CDr00r00              3518 	call	_set_win_tiles
      000CB5 E8 06                 3519 	add	sp, #6
                                   3520 ;src/main.c:183: return;
      000CB7                       3521 00109$:
                                   3522 ;src/main.c:185: }
      000CB7 E8 05                 3523 	add	sp, #5
      000CB9 C9                    3524 	ret
                                   3525 ;src/main.c:187: void updateScore() {
                                   3526 ;	---------------------------------
                                   3527 ; Function updateScore
                                   3528 ; ---------------------------------
      000CBA                       3529 _updateScore::
      000CBA E8 F6                 3530 	add	sp, #-10
                                   3531 ;src/main.c:191: len = bcd2text(&SCORE, 0x01, buf);
      000CBC F8 00                 3532 	ldhl	sp,	#0
      000CBE 4D                    3533 	ld	c, l
      000CBF 44                    3534 	ld	b, h
      000CC0 59                    3535 	ld	e, c
      000CC1 50                    3536 	ld	d, b
      000CC2 C5                    3537 	push	bc
      000CC3 D5                    3538 	push	de
      000CC4 3E 01                 3539 	ld	a, #0x01
      000CC6 F5                    3540 	push	af
      000CC7 33                    3541 	inc	sp
      000CC8 11rB3r00              3542 	ld	de, #_SCORE
      000CCB D5                    3543 	push	de
      000CCC CDr00r00              3544 	call	_bcd2text
      000CCF E8 05                 3545 	add	sp, #5
      000CD1 C1                    3546 	pop	bc
                                   3547 ;src/main.c:192: set_win_tiles(15, 1, 5, 1, buf+3);
      000CD2 03                    3548 	inc	bc
      000CD3 03                    3549 	inc	bc
      000CD4 03                    3550 	inc	bc
      000CD5 C5                    3551 	push	bc
      000CD6 21 05 01              3552 	ld	hl, #0x105
      000CD9 E5                    3553 	push	hl
      000CDA 21 0F 01              3554 	ld	hl, #0x10f
      000CDD E5                    3555 	push	hl
      000CDE CDr00r00              3556 	call	_set_win_tiles
                                   3557 ;src/main.c:193: }
      000CE1 E8 10                 3558 	add	sp, #16
      000CE3 C9                    3559 	ret
                                   3560 ;src/main.c:195: void updateMissileCount(int8_t amount) {
                                   3561 ;	---------------------------------
                                   3562 ; Function updateMissileCount
                                   3563 ; ---------------------------------
      000CE4                       3564 _updateMissileCount::
      000CE4 E8 F6                 3565 	add	sp, #-10
                                   3566 ;src/main.c:196: if (amount == -1) {
      000CE6 F8 0C                 3567 	ldhl	sp,	#12
      000CE8 7E                    3568 	ld	a, (hl)
      000CE9 3C                    3569 	inc	a
      000CEA 20 13                 3570 	jr	NZ, 00112$
                                   3571 ;src/main.c:197: missiles--;
      000CEC 21rA8r00              3572 	ld	hl, #_missiles
      000CEF 35                    3573 	dec	(hl)
                                   3574 ;src/main.c:198: bcd_sub(&MISSILES, &INCREMENT);
      000CF0 11rB7r00              3575 	ld	de, #_INCREMENT
      000CF3 D5                    3576 	push	de
      000CF4 11rA9r00              3577 	ld	de, #_MISSILES
      000CF7 D5                    3578 	push	de
      000CF8 CDr00r00              3579 	call	_bcd_sub
      000CFB E8 04                 3580 	add	sp, #4
      000CFD 18 30                 3581 	jr	00104$
                                   3582 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000CFF                       3583 00112$:
      000CFF 0E 00                 3584 	ld	c, #0x00
      000D01                       3585 00106$:
      000D01 F8 0C                 3586 	ldhl	sp,	#12
      000D03 5E                    3587 	ld	e, (hl)
      000D04 79                    3588 	ld	a,c
      000D05 57                    3589 	ld	d,a
      000D06 96                    3590 	sub	a, (hl)
      000D07 CB 7B                 3591 	bit	7, e
      000D09 28 07                 3592 	jr	Z, 00128$
      000D0B CB 7A                 3593 	bit	7, d
      000D0D 20 08                 3594 	jr	NZ, 00129$
      000D0F BF                    3595 	cp	a, a
      000D10 18 05                 3596 	jr	00129$
      000D12                       3597 00128$:
      000D12 CB 7A                 3598 	bit	7, d
      000D14 28 01                 3599 	jr	Z, 00129$
      000D16 37                    3600 	scf
      000D17                       3601 00129$:
      000D17 30 16                 3602 	jr	NC, 00104$
                                   3603 ;src/main.c:202: ++missiles;
      000D19 21rA8r00              3604 	ld	hl, #_missiles
      000D1C 34                    3605 	inc	(hl)
                                   3606 ;src/main.c:203: bcd_add(&MISSILES, &INCREMENT);
      000D1D C5                    3607 	push	bc
      000D1E 11rB7r00              3608 	ld	de, #_INCREMENT
      000D21 D5                    3609 	push	de
      000D22 11rA9r00              3610 	ld	de, #_MISSILES
      000D25 D5                    3611 	push	de
      000D26 CDr00r00              3612 	call	_bcd_add
      000D29 E8 04                 3613 	add	sp, #4
      000D2B C1                    3614 	pop	bc
                                   3615 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000D2C 0C                    3616 	inc	c
      000D2D 18 D2                 3617 	jr	00106$
      000D2F                       3618 00104$:
                                   3619 ;src/main.c:208: len = bcd2text(&MISSILES, 0x01, buf);
      000D2F F8 00                 3620 	ldhl	sp,	#0
      000D31 4D                    3621 	ld	c, l
      000D32 44                    3622 	ld	b, h
      000D33 59                    3623 	ld	e, c
      000D34 50                    3624 	ld	d, b
      000D35 C5                    3625 	push	bc
      000D36 D5                    3626 	push	de
      000D37 3E 01                 3627 	ld	a, #0x01
      000D39 F5                    3628 	push	af
      000D3A 33                    3629 	inc	sp
      000D3B 11rA9r00              3630 	ld	de, #_MISSILES
      000D3E D5                    3631 	push	de
      000D3F CDr00r00              3632 	call	_bcd2text
      000D42 E8 05                 3633 	add	sp, #5
      000D44 C1                    3634 	pop	bc
                                   3635 ;src/main.c:209: set_win_tiles(18, 0, 2, 1, buf+6);
      000D45 21 06 00              3636 	ld	hl, #0x0006
      000D48 09                    3637 	add	hl, bc
      000D49 E5                    3638 	push	hl
      000D4A 21 02 01              3639 	ld	hl, #0x102
      000D4D E5                    3640 	push	hl
      000D4E 21 12 00              3641 	ld	hl, #0x12
      000D51 E5                    3642 	push	hl
      000D52 CDr00r00              3643 	call	_set_win_tiles
                                   3644 ;src/main.c:211: }
      000D55 E8 10                 3645 	add	sp, #16
      000D57 C9                    3646 	ret
                                   3647 ;src/main.c:213: void incrementScore() {
                                   3648 ;	---------------------------------
                                   3649 ; Function incrementScore
                                   3650 ; ---------------------------------
      000D58                       3651 _incrementScore::
                                   3652 ;src/main.c:214: score += 1;
      000D58 21rB1r00              3653 	ld	hl, #_score
      000D5B 2A                    3654 	ld	a, (hl+)
      000D5C 4F                    3655 	ld	c, a
      000D5D 3A                    3656 	ld	a, (hl-)
      000D5E 47                    3657 	ld	b, a
      000D5F 03                    3658 	inc	bc
      000D60 79                    3659 	ld	a, c
      000D61 22                    3660 	ld	(hl+), a
      000D62 70                    3661 	ld	(hl), b
                                   3662 ;src/main.c:215: bcd_add(&SCORE, &INCREMENT);
      000D63 11rB7r00              3663 	ld	de, #_INCREMENT
      000D66 D5                    3664 	push	de
      000D67 11rB3r00              3665 	ld	de, #_SCORE
      000D6A D5                    3666 	push	de
      000D6B CDr00r00              3667 	call	_bcd_add
      000D6E E8 04                 3668 	add	sp, #4
                                   3669 ;src/main.c:216: }
      000D70 C9                    3670 	ret
                                   3671 ;src/main.c:218: void updateDirection() {
                                   3672 ;	---------------------------------
                                   3673 ; Function updateDirection
                                   3674 ; ---------------------------------
      000D71                       3675 _updateDirection::
      000D71 E8 FC                 3676 	add	sp, #-4
                                   3677 ;src/main.c:222: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000D73 21rF5r00              3678 	ld	hl, #_joydata
      000D76 5E                    3679 	ld	e, (hl)
      000D77 7B                    3680 	ld	a, e
      000D78 E6 01                 3681 	and	a, #0x01
      000D7A F8 00                 3682 	ldhl	sp,	#0
      000D7C 22                    3683 	ld	(hl+), a
      000D7D AF                    3684 	xor	a, a
      000D7E 22                    3685 	ld	(hl+), a
      000D7F 7B                    3686 	ld	a, e
      000D80 E6 04                 3687 	and	a, #0x04
      000D82 22                    3688 	ld	(hl+), a
      000D83 AF                    3689 	xor	a, a
      000D84 32                    3690 	ld	(hl-), a
      000D85 2B                    3691 	dec	hl
      000D86 7B                    3692 	ld	a, e
      000D87 E6 08                 3693 	and	a, #0x08
      000D89 4F                    3694 	ld	c, a
      000D8A 06 00                 3695 	ld	b, #0x00
      000D8C 3A                    3696 	ld	a, (hl-)
      000D8D B6                    3697 	or	a, (hl)
      000D8E 28 14                 3698 	jr	Z, 00102$
      000D90 F8 03                 3699 	ldhl	sp,	#3
      000D92 3A                    3700 	ld	a, (hl-)
      000D93 B6                    3701 	or	a, (hl)
      000D94 20 0E                 3702 	jr	NZ, 00102$
      000D96 78                    3703 	ld	a, b
      000D97 B1                    3704 	or	a, c
      000D98 20 0A                 3705 	jr	NZ, 00102$
                                   3706 ;src/main.c:223: xDir = 1;
      000D9A 21r93r00              3707 	ld	hl, #_xDir
      000D9D 36 01                 3708 	ld	(hl), #0x01
                                   3709 ;src/main.c:224: yDir = 0;
      000D9F 21r94r00              3710 	ld	hl, #_yDir
      000DA2 36 00                 3711 	ld	(hl), #0x00
      000DA4                       3712 00102$:
                                   3713 ;src/main.c:226: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000DA4 7B                    3714 	ld	a, e
      000DA5 E6 02                 3715 	and	a, #0x02
      000DA7 5F                    3716 	ld	e, a
      000DA8 16 00                 3717 	ld	d, #0x00
      000DAA 7A                    3718 	ld	a, d
      000DAB B3                    3719 	or	a, e
      000DAC 28 14                 3720 	jr	Z, 00106$
      000DAE F8 03                 3721 	ldhl	sp,	#3
      000DB0 3A                    3722 	ld	a, (hl-)
      000DB1 B6                    3723 	or	a, (hl)
      000DB2 20 0E                 3724 	jr	NZ, 00106$
      000DB4 78                    3725 	ld	a, b
      000DB5 B1                    3726 	or	a, c
      000DB6 20 0A                 3727 	jr	NZ, 00106$
                                   3728 ;src/main.c:227: xDir = -1;
      000DB8 21r93r00              3729 	ld	hl, #_xDir
      000DBB 36 FF                 3730 	ld	(hl), #0xff
                                   3731 ;src/main.c:228: yDir = 0;
      000DBD 21r94r00              3732 	ld	hl, #_yDir
      000DC0 36 00                 3733 	ld	(hl), #0x00
      000DC2                       3734 00106$:
                                   3735 ;src/main.c:230: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DC2 F8 03                 3736 	ldhl	sp,	#3
      000DC4 3A                    3737 	ld	a, (hl-)
      000DC5 B6                    3738 	or	a, (hl)
      000DC6 28 13                 3739 	jr	Z, 00110$
      000DC8 7A                    3740 	ld	a, d
      000DC9 B3                    3741 	or	a, e
      000DCA 20 0F                 3742 	jr	NZ, 00110$
      000DCC 2B                    3743 	dec	hl
      000DCD 3A                    3744 	ld	a, (hl-)
      000DCE B6                    3745 	or	a, (hl)
      000DCF 20 0A                 3746 	jr	NZ, 00110$
                                   3747 ;src/main.c:231: xDir = 0;
      000DD1 21r93r00              3748 	ld	hl, #_xDir
      000DD4 36 00                 3749 	ld	(hl), #0x00
                                   3750 ;src/main.c:232: yDir = -1;
      000DD6 21r94r00              3751 	ld	hl, #_yDir
      000DD9 36 FF                 3752 	ld	(hl), #0xff
      000DDB                       3753 00110$:
                                   3754 ;src/main.c:234: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DDB 78                    3755 	ld	a, b
      000DDC B1                    3756 	or	a, c
      000DDD 28 14                 3757 	jr	Z, 00114$
      000DDF 7A                    3758 	ld	a, d
      000DE0 B3                    3759 	or	a, e
      000DE1 20 10                 3760 	jr	NZ, 00114$
      000DE3 F8 01                 3761 	ldhl	sp,	#1
      000DE5 3A                    3762 	ld	a, (hl-)
      000DE6 B6                    3763 	or	a, (hl)
      000DE7 20 0A                 3764 	jr	NZ, 00114$
                                   3765 ;src/main.c:235: xDir = 0;
      000DE9 21r93r00              3766 	ld	hl, #_xDir
      000DEC 36 00                 3767 	ld	(hl), #0x00
                                   3768 ;src/main.c:236: yDir = 1;
      000DEE 21r94r00              3769 	ld	hl, #_yDir
      000DF1 36 01                 3770 	ld	(hl), #0x01
      000DF3                       3771 00114$:
                                   3772 ;src/main.c:240: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000DF3 F8 03                 3773 	ldhl	sp,	#3
      000DF5 3A                    3774 	ld	a, (hl-)
      000DF6 B6                    3775 	or	a, (hl)
      000DF7 28 0F                 3776 	jr	Z, 00118$
      000DF9 2B                    3777 	dec	hl
      000DFA 3A                    3778 	ld	a, (hl-)
      000DFB B6                    3779 	or	a, (hl)
      000DFC 28 0A                 3780 	jr	Z, 00118$
                                   3781 ;src/main.c:241: xDir = 1;
      000DFE 21r93r00              3782 	ld	hl, #_xDir
      000E01 36 01                 3783 	ld	(hl), #0x01
                                   3784 ;src/main.c:242: yDir = -1;
      000E03 21r94r00              3785 	ld	hl, #_yDir
      000E06 36 FF                 3786 	ld	(hl), #0xff
      000E08                       3787 00118$:
                                   3788 ;src/main.c:244: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000E08 F8 03                 3789 	ldhl	sp,	#3
      000E0A 3A                    3790 	ld	a, (hl-)
      000E0B B6                    3791 	or	a, (hl)
      000E0C 28 0E                 3792 	jr	Z, 00121$
      000E0E 7A                    3793 	ld	a, d
      000E0F B3                    3794 	or	a, e
      000E10 28 0A                 3795 	jr	Z, 00121$
                                   3796 ;src/main.c:245: xDir = -1;
      000E12 21r93r00              3797 	ld	hl, #_xDir
      000E15 36 FF                 3798 	ld	(hl), #0xff
                                   3799 ;src/main.c:246: yDir = -1;
      000E17 21r94r00              3800 	ld	hl, #_yDir
      000E1A 36 FF                 3801 	ld	(hl), #0xff
      000E1C                       3802 00121$:
                                   3803 ;src/main.c:248: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000E1C 78                    3804 	ld	a, b
      000E1D B1                    3805 	or	a, c
      000E1E 28 10                 3806 	jr	Z, 00124$
      000E20 F8 01                 3807 	ldhl	sp,	#1
      000E22 3A                    3808 	ld	a, (hl-)
      000E23 B6                    3809 	or	a, (hl)
      000E24 28 0A                 3810 	jr	Z, 00124$
                                   3811 ;src/main.c:249: xDir = 1;
      000E26 21r93r00              3812 	ld	hl, #_xDir
      000E29 36 01                 3813 	ld	(hl), #0x01
                                   3814 ;src/main.c:250: yDir = 1;
      000E2B 21r94r00              3815 	ld	hl, #_yDir
      000E2E 36 01                 3816 	ld	(hl), #0x01
      000E30                       3817 00124$:
                                   3818 ;src/main.c:252: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000E30 78                    3819 	ld	a, b
      000E31 B1                    3820 	or	a, c
      000E32 28 0E                 3821 	jr	Z, 00127$
      000E34 7A                    3822 	ld	a, d
      000E35 B3                    3823 	or	a, e
      000E36 28 0A                 3824 	jr	Z, 00127$
                                   3825 ;src/main.c:253: xDir = -1;
      000E38 21r93r00              3826 	ld	hl, #_xDir
      000E3B 36 FF                 3827 	ld	(hl), #0xff
                                   3828 ;src/main.c:254: yDir = 1;
      000E3D 21r94r00              3829 	ld	hl, #_yDir
      000E40 36 01                 3830 	ld	(hl), #0x01
      000E42                       3831 00127$:
                                   3832 ;src/main.c:259: if (xDir == 0 && yDir == 0) {
      000E42 FAr93r00              3833 	ld	a, (#_xDir)
      000E45 B7                    3834 	or	a, a
      000E46 20 07                 3835 	jr	NZ, 00130$
      000E48 FAr94r00              3836 	ld	a, (#_yDir)
      000E4B B7                    3837 	or	a, a
                                   3838 ;src/main.c:260: return;
      000E4C CAr98r0F              3839 	jp	Z,00195$
      000E4F                       3840 00130$:
                                   3841 ;src/main.c:292: if (xDir == 0 && yDir > 0) {
      000E4F 21r94r00              3842 	ld	hl, #_yDir
      000E52 5E                    3843 	ld	e, (hl)
      000E53 AF                    3844 	xor	a, a
      000E54 57                    3845 	ld	d, a
      000E55 96                    3846 	sub	a, (hl)
      000E56 CB 7B                 3847 	bit	7, e
      000E58 28 07                 3848 	jr	Z, 00387$
      000E5A CB 7A                 3849 	bit	7, d
      000E5C 20 08                 3850 	jr	NZ, 00388$
      000E5E BF                    3851 	cp	a, a
      000E5F 18 05                 3852 	jr	00388$
      000E61                       3853 00387$:
      000E61 CB 7A                 3854 	bit	7, d
      000E63 28 01                 3855 	jr	Z, 00388$
      000E65 37                    3856 	scf
      000E66                       3857 00388$:
      000E66 3E 00                 3858 	ld	a, #0x00
      000E68 17                    3859 	rla
      000E69 4F                    3860 	ld	c, a
      000E6A FAr93r00              3861 	ld	a, (#_xDir)
      000E6D B7                    3862 	or	a,a
      000E6E 20 1A                 3863 	jr	NZ, 00160$
      000E70 B1                    3864 	or	a,c
      000E71 28 17                 3865 	jr	Z, 00160$
                                   3866 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E73 21r02r00              3867 	ld	hl, #(_shadow_OAM + 2)
      000E76 36 00                 3868 	ld	(hl), #0x00
      000E78 21r06r00              3869 	ld	hl, #(_shadow_OAM + 6)
      000E7B 36 02                 3870 	ld	(hl), #0x02
                                   3871 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000E7D 21r03r00              3872 	ld	hl, #(_shadow_OAM + 3)
      000E80 36 40                 3873 	ld	(hl), #0x40
      000E82 21r07r00              3874 	ld	hl, #(_shadow_OAM + 7)
      000E85 36 40                 3875 	ld	(hl), #0x40
                                   3876 ;src/main.c:296: set_sprite_prop(1, S_FLIPY); 
      000E87 C3r98r0F              3877 	jp	00195$
      000E8A                       3878 00160$:
                                   3879 ;src/main.c:298: else if (xDir == 0 && yDir < 0) {
      000E8A FAr94r00              3880 	ld	a, (#_yDir)
      000E8D 07                    3881 	rlca
      000E8E E6 01                 3882 	and	a,#0x01
      000E90 F8 02                 3883 	ldhl	sp,	#2
      000E92 77                    3884 	ld	(hl), a
      000E93 FAr93r00              3885 	ld	a, (#_xDir)
      000E96 B7                    3886 	or	a, a
      000E97 20 1D                 3887 	jr	NZ, 00156$
      000E99 F8 02                 3888 	ldhl	sp,	#2
      000E9B 7E                    3889 	ld	a, (hl)
      000E9C B7                    3890 	or	a, a
      000E9D 28 17                 3891 	jr	Z, 00156$
                                   3892 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E9F 21r02r00              3893 	ld	hl, #(_shadow_OAM + 2)
      000EA2 36 00                 3894 	ld	(hl), #0x00
      000EA4 21r06r00              3895 	ld	hl, #(_shadow_OAM + 6)
      000EA7 36 02                 3896 	ld	(hl), #0x02
                                   3897 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EA9 21r03r00              3898 	ld	hl, #(_shadow_OAM + 3)
      000EAC 36 00                 3899 	ld	(hl), #0x00
      000EAE 21r07r00              3900 	ld	hl, #(_shadow_OAM + 7)
      000EB1 36 00                 3901 	ld	(hl), #0x00
                                   3902 ;src/main.c:302: set_sprite_prop(1, 0); 
      000EB3 C3r98r0F              3903 	jp	00195$
      000EB6                       3904 00156$:
                                   3905 ;src/main.c:304: else if (xDir > 0 && yDir == 0) {
      000EB6 21r93r00              3906 	ld	hl, #_xDir
      000EB9 5E                    3907 	ld	e, (hl)
      000EBA AF                    3908 	xor	a, a
      000EBB 57                    3909 	ld	d, a
      000EBC 96                    3910 	sub	a, (hl)
      000EBD CB 7B                 3911 	bit	7, e
      000EBF 28 07                 3912 	jr	Z, 00389$
      000EC1 CB 7A                 3913 	bit	7, d
      000EC3 20 08                 3914 	jr	NZ, 00390$
      000EC5 BF                    3915 	cp	a, a
      000EC6 18 05                 3916 	jr	00390$
      000EC8                       3917 00389$:
      000EC8 CB 7A                 3918 	bit	7, d
      000ECA 28 01                 3919 	jr	Z, 00390$
      000ECC 37                    3920 	scf
      000ECD                       3921 00390$:
      000ECD 3E 00                 3922 	ld	a, #0x00
      000ECF 17                    3923 	rla
      000ED0 47                    3924 	ld	b, a
      000ED1 B7                    3925 	or	a, a
      000ED2 28 1D                 3926 	jr	Z, 00152$
      000ED4 FAr94r00              3927 	ld	a, (#_yDir)
      000ED7 B7                    3928 	or	a, a
      000ED8 20 17                 3929 	jr	NZ, 00152$
                                   3930 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000EDA 21r02r00              3931 	ld	hl, #(_shadow_OAM + 2)
      000EDD 36 04                 3932 	ld	(hl), #0x04
      000EDF 21r06r00              3933 	ld	hl, #(_shadow_OAM + 6)
      000EE2 36 06                 3934 	ld	(hl), #0x06
                                   3935 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EE4 21r03r00              3936 	ld	hl, #(_shadow_OAM + 3)
      000EE7 36 00                 3937 	ld	(hl), #0x00
      000EE9 21r07r00              3938 	ld	hl, #(_shadow_OAM + 7)
      000EEC 36 00                 3939 	ld	(hl), #0x00
                                   3940 ;src/main.c:308: set_sprite_prop(1, 0); 
      000EEE C3r98r0F              3941 	jp	00195$
      000EF1                       3942 00152$:
                                   3943 ;src/main.c:310: else if (xDir < 0 && yDir == 0) {
      000EF1 FAr93r00              3944 	ld	a, (#_xDir)
      000EF4 07                    3945 	rlca
      000EF5 E6 01                 3946 	and	a,#0x01
      000EF7 F8 03                 3947 	ldhl	sp,	#3
      000EF9 77                    3948 	ld	(hl), a
      000EFA 7E                    3949 	ld	a, (hl)
      000EFB B7                    3950 	or	a, a
      000EFC 28 1D                 3951 	jr	Z, 00148$
      000EFE FAr94r00              3952 	ld	a, (#_yDir)
      000F01 B7                    3953 	or	a, a
      000F02 20 17                 3954 	jr	NZ, 00148$
                                   3955 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F04 21r02r00              3956 	ld	hl, #(_shadow_OAM + 2)
      000F07 36 04                 3957 	ld	(hl), #0x04
      000F09 21r06r00              3958 	ld	hl, #(_shadow_OAM + 6)
      000F0C 36 06                 3959 	ld	(hl), #0x06
                                   3960 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F0E 21r03r00              3961 	ld	hl, #(_shadow_OAM + 3)
      000F11 36 20                 3962 	ld	(hl), #0x20
      000F13 21r07r00              3963 	ld	hl, #(_shadow_OAM + 7)
      000F16 36 20                 3964 	ld	(hl), #0x20
                                   3965 ;src/main.c:314: set_sprite_prop(1, S_FLIPX); 
      000F18 C3r98r0F              3966 	jp	00195$
      000F1B                       3967 00148$:
                                   3968 ;src/main.c:316: else if (xDir > 0 && yDir < 0) {
      000F1B 78                    3969 	ld	a, b
      000F1C B7                    3970 	or	a, a
      000F1D 28 1C                 3971 	jr	Z, 00144$
      000F1F F8 02                 3972 	ldhl	sp,	#2
      000F21 7E                    3973 	ld	a, (hl)
      000F22 B7                    3974 	or	a, a
      000F23 28 16                 3975 	jr	Z, 00144$
                                   3976 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F25 21r02r00              3977 	ld	hl, #(_shadow_OAM + 2)
      000F28 36 08                 3978 	ld	(hl), #0x08
      000F2A 21r06r00              3979 	ld	hl, #(_shadow_OAM + 6)
      000F2D 36 0A                 3980 	ld	(hl), #0x0a
                                   3981 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F2F 21r03r00              3982 	ld	hl, #(_shadow_OAM + 3)
      000F32 36 00                 3983 	ld	(hl), #0x00
      000F34 21r07r00              3984 	ld	hl, #(_shadow_OAM + 7)
      000F37 36 00                 3985 	ld	(hl), #0x00
                                   3986 ;src/main.c:320: set_sprite_prop(1, 0); 
      000F39 18 5D                 3987 	jr	00195$
      000F3B                       3988 00144$:
                                   3989 ;src/main.c:322: else if (xDir > 0 && yDir > 0) {
      000F3B 78                    3990 	ld	a, b
      000F3C B7                    3991 	or	a, a
      000F3D 28 1A                 3992 	jr	Z, 00140$
      000F3F 79                    3993 	ld	a, c
      000F40 B7                    3994 	or	a, a
      000F41 28 16                 3995 	jr	Z, 00140$
                                   3996 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F43 21r02r00              3997 	ld	hl, #(_shadow_OAM + 2)
      000F46 36 08                 3998 	ld	(hl), #0x08
      000F48 21r06r00              3999 	ld	hl, #(_shadow_OAM + 6)
      000F4B 36 0A                 4000 	ld	(hl), #0x0a
                                   4001 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F4D 21r03r00              4002 	ld	hl, #(_shadow_OAM + 3)
      000F50 36 40                 4003 	ld	(hl), #0x40
      000F52 21r07r00              4004 	ld	hl, #(_shadow_OAM + 7)
      000F55 36 40                 4005 	ld	(hl), #0x40
                                   4006 ;src/main.c:326: set_sprite_prop(1, S_FLIPY); 
      000F57 18 3F                 4007 	jr	00195$
      000F59                       4008 00140$:
                                   4009 ;src/main.c:328: else if (xDir < 0 && yDir > 0) {
      000F59 F8 03                 4010 	ldhl	sp,	#3
      000F5B 7E                    4011 	ld	a, (hl)
      000F5C B7                    4012 	or	a, a
      000F5D 28 1A                 4013 	jr	Z, 00136$
      000F5F 79                    4014 	ld	a, c
      000F60 B7                    4015 	or	a, a
      000F61 28 16                 4016 	jr	Z, 00136$
                                   4017 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F63 21r02r00              4018 	ld	hl, #(_shadow_OAM + 2)
      000F66 36 08                 4019 	ld	(hl), #0x08
      000F68 21r06r00              4020 	ld	hl, #(_shadow_OAM + 6)
      000F6B 36 0A                 4021 	ld	(hl), #0x0a
                                   4022 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F6D 21r03r00              4023 	ld	hl, #(_shadow_OAM + 3)
      000F70 36 60                 4024 	ld	(hl), #0x60
      000F72 21r07r00              4025 	ld	hl, #(_shadow_OAM + 7)
      000F75 36 60                 4026 	ld	(hl), #0x60
                                   4027 ;src/main.c:332: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000F77 18 1F                 4028 	jr	00195$
      000F79                       4029 00136$:
                                   4030 ;src/main.c:334: else if (xDir < 0 && yDir < 0) {
      000F79 F8 03                 4031 	ldhl	sp,	#3
      000F7B 7E                    4032 	ld	a, (hl)
      000F7C B7                    4033 	or	a, a
      000F7D 28 19                 4034 	jr	Z, 00195$
      000F7F 2B                    4035 	dec	hl
      000F80 7E                    4036 	ld	a, (hl)
      000F81 B7                    4037 	or	a, a
      000F82 28 14                 4038 	jr	Z, 00195$
                                   4039 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F84 21r02r00              4040 	ld	hl, #(_shadow_OAM + 2)
      000F87 36 08                 4041 	ld	(hl), #0x08
      000F89 21r06r00              4042 	ld	hl, #(_shadow_OAM + 6)
      000F8C 36 0A                 4043 	ld	(hl), #0x0a
                                   4044 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F8E 21r03r00              4045 	ld	hl, #(_shadow_OAM + 3)
      000F91 36 20                 4046 	ld	(hl), #0x20
      000F93 21r07r00              4047 	ld	hl, #(_shadow_OAM + 7)
      000F96 36 20                 4048 	ld	(hl), #0x20
                                   4049 ;src/main.c:338: set_sprite_prop(1, S_FLIPX); 
      000F98                       4050 00195$:
                                   4051 ;src/main.c:340: }
      000F98 E8 04                 4052 	add	sp, #4
      000F9A C9                    4053 	ret
                                   4054 ;src/main.c:374: void playSound(uint8_t type) {
                                   4055 ;	---------------------------------
                                   4056 ; Function playSound
                                   4057 ; ---------------------------------
      000F9B                       4058 _playSound::
                                   4059 ;src/main.c:375: if (type == 20) { //singlegun
      000F9B F8 02                 4060 	ldhl	sp,	#2
      000F9D 7E                    4061 	ld	a, (hl)
      000F9E D6 14                 4062 	sub	a, #0x14
      000FA0 20 13                 4063 	jr	NZ, 00102$
                                   4064 ;src/main.c:376: NR10_REG = 0x00;
      000FA2 AF                    4065 	xor	a, a
      000FA3 E0r00                 4066 	ldh	(_NR10_REG + 0), a
                                   4067 ;src/main.c:377: NR11_REG = 0x81;
      000FA5 3E 81                 4068 	ld	a, #0x81
      000FA7 E0r00                 4069 	ldh	(_NR11_REG + 0), a
                                   4070 ;src/main.c:378: NR12_REG = 0x43;
      000FA9 3E 43                 4071 	ld	a, #0x43
      000FAB E0r00                 4072 	ldh	(_NR12_REG + 0), a
                                   4073 ;src/main.c:379: NR13_REG = 0X00;//0x6D;
      000FAD AF                    4074 	xor	a, a
      000FAE E0r00                 4075 	ldh	(_NR13_REG + 0), a
                                   4076 ;src/main.c:380: NR14_REG = 0x86;
      000FB0 3E 86                 4077 	ld	a, #0x86
      000FB2 E0r00                 4078 	ldh	(_NR14_REG + 0), a
                                   4079 ;src/main.c:381: return;
      000FB4 C9                    4080 	ret
      000FB5                       4081 00102$:
                                   4082 ;src/main.c:383: if (type == 23) {
      000FB5 F8 02                 4083 	ldhl	sp,	#2
      000FB7 7E                    4084 	ld	a, (hl)
      000FB8 D6 17                 4085 	sub	a, #0x17
      000FBA 20 12                 4086 	jr	NZ, 00104$
                                   4087 ;src/main.c:384: NR10_REG = 0x00;
      000FBC AF                    4088 	xor	a, a
      000FBD E0r00                 4089 	ldh	(_NR10_REG + 0), a
                                   4090 ;src/main.c:385: NR11_REG = 0x81;
      000FBF 3E 81                 4091 	ld	a, #0x81
      000FC1 E0r00                 4092 	ldh	(_NR11_REG + 0), a
                                   4093 ;src/main.c:386: NR12_REG = 0x53;
      000FC3 3E 53                 4094 	ld	a, #0x53
      000FC5 E0r00                 4095 	ldh	(_NR12_REG + 0), a
                                   4096 ;src/main.c:387: NR13_REG = 0X00;//0x6D;
      000FC7 AF                    4097 	xor	a, a
      000FC8 E0r00                 4098 	ldh	(_NR13_REG + 0), a
                                   4099 ;src/main.c:388: NR14_REG = 0x86;
      000FCA 3E 86                 4100 	ld	a, #0x86
      000FCC E0r00                 4101 	ldh	(_NR14_REG + 0), a
      000FCE                       4102 00104$:
                                   4103 ;src/main.c:390: if (type == 26) {
      000FCE F8 02                 4104 	ldhl	sp,	#2
      000FD0 7E                    4105 	ld	a, (hl)
      000FD1 D6 1A                 4106 	sub	a, #0x1a
      000FD3 20 13                 4107 	jr	NZ, 00106$
                                   4108 ;src/main.c:391: NR10_REG = 0x00;
      000FD5 AF                    4109 	xor	a, a
      000FD6 E0r00                 4110 	ldh	(_NR10_REG + 0), a
                                   4111 ;src/main.c:392: NR11_REG = 0x89;
      000FD8 3E 89                 4112 	ld	a, #0x89
      000FDA E0r00                 4113 	ldh	(_NR11_REG + 0), a
                                   4114 ;src/main.c:393: NR12_REG = 0x55;
      000FDC 3E 55                 4115 	ld	a, #0x55
      000FDE E0r00                 4116 	ldh	(_NR12_REG + 0), a
                                   4117 ;src/main.c:394: NR13_REG = 0x70;//0Xbe;//0x6D;
      000FE0 3E 70                 4118 	ld	a, #0x70
      000FE2 E0r00                 4119 	ldh	(_NR13_REG + 0), a
                                   4120 ;src/main.c:395: NR14_REG = 0x84;
      000FE4 3E 84                 4121 	ld	a, #0x84
      000FE6 E0r00                 4122 	ldh	(_NR14_REG + 0), a
      000FE8                       4123 00106$:
                                   4124 ;src/main.c:397: if (type == 0) {  // explosion
      000FE8 F8 02                 4125 	ldhl	sp,	#2
      000FEA 7E                    4126 	ld	a, (hl)
      000FEB B7                    4127 	or	a, a
      000FEC C0                    4128 	ret	NZ
                                   4129 ;src/main.c:398: NR41_REG = 0x20;  
      000FED 3E 20                 4130 	ld	a, #0x20
      000FEF E0r00                 4131 	ldh	(_NR41_REG + 0), a
                                   4132 ;src/main.c:399: NR42_REG = 0xa2;//0xa3;  
      000FF1 3E A2                 4133 	ld	a, #0xa2
      000FF3 E0r00                 4134 	ldh	(_NR42_REG + 0), a
                                   4135 ;src/main.c:400: NR43_REG = 0x57;  
      000FF5 3E 57                 4136 	ld	a, #0x57
      000FF7 E0r00                 4137 	ldh	(_NR43_REG + 0), a
                                   4138 ;src/main.c:401: NR44_REG = 0x80;  
      000FF9 3E 80                 4139 	ld	a, #0x80
      000FFB E0r00                 4140 	ldh	(_NR44_REG + 0), a
                                   4141 ;src/main.c:407: }
      000FFD C9                    4142 	ret
                                   4143 ;src/main.c:409: void initEnemies(uint8_t loadSprites) {
                                   4144 ;	---------------------------------
                                   4145 ; Function initEnemies
                                   4146 ; ---------------------------------
      000FFE                       4147 _initEnemies::
      000FFE E8 F9                 4148 	add	sp, #-7
                                   4149 ;src/main.c:411: if (loadSprites) {
      001000 F8 09                 4150 	ldhl	sp,	#9
      001002 7E                    4151 	ld	a, (hl)
      001003 B7                    4152 	or	a, a
      001004 28 1A                 4153 	jr	Z, 00102$
                                   4154 ;src/main.c:413: set_sprite_data(0x40, 5, enemy1);
      001006 11r18r05              4155 	ld	de, #_enemy1
      001009 D5                    4156 	push	de
      00100A 21 40 05              4157 	ld	hl, #0x540
      00100D E5                    4158 	push	hl
      00100E CDr00r00              4159 	call	_set_sprite_data
      001011 E8 04                 4160 	add	sp, #4
                                   4161 ;src/main.c:414: set_sprite_data(0x50, 8, largeenemies);
      001013 11r68r05              4162 	ld	de, #_largeenemies
      001016 D5                    4163 	push	de
      001017 21 50 08              4164 	ld	hl, #0x850
      00101A E5                    4165 	push	hl
      00101B CDr00r00              4166 	call	_set_sprite_data
      00101E E8 04                 4167 	add	sp, #4
      001020                       4168 00102$:
                                   4169 ;src/main.c:417: struct Enemy *eptr = enemies;
      001020 01r5Ar00              4170 	ld	bc, #_enemies+0
                                   4171 ;src/main.c:419: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001023 F8 06                 4172 	ldhl	sp,	#6
      001025 36 00                 4173 	ld	(hl), #0x00
      001027                       4174 00116$:
      001027 21r8Er0B              4175 	ld	hl, #_ENEMYCOUNT
      00102A 5E                    4176 	ld	e, (hl)
      00102B F8 06                 4177 	ldhl	sp,	#6
      00102D 7E                    4178 	ld	a, (hl)
      00102E 93                    4179 	sub	a, e
      00102F D2r66r11              4180 	jp	NC, 00118$
                                   4181 ;src/main.c:420: if (eptr->alive == 0) {
      001032 21 09 00              4182 	ld	hl, #0x0009
      001035 09                    4183 	add	hl, bc
      001036 7E                    4184 	ld	a, (hl)
      001037 B7                    4185 	or	a, a
      001038 C2r5Ar11              4186 	jp	NZ, 00107$
                                   4187 ;src/main.c:422: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      00103B C5                    4188 	push	bc
      00103C CDr00r00              4189 	call	_rand
      00103F 7B                    4190 	ld	a, e
      001040 C1                    4191 	pop	bc
      001041 21r17r05              4192 	ld	hl, #_enemyOptionCount
      001044 56                    4193 	ld	d, (hl)
      001045 C5                    4194 	push	bc
      001046 D5                    4195 	push	de
      001047 33                    4196 	inc	sp
      001048 F5                    4197 	push	af
      001049 33                    4198 	inc	sp
      00104A CDr00r00              4199 	call	__moduchar
      00104D E1                    4200 	pop	hl
      00104E 7B                    4201 	ld	a, e
      00104F C1                    4202 	pop	bc
                                   4203 ;src/main.c:424: (*eptr) = enemyOptions[enemyInd];
      001050 5F                    4204 	ld	e, a
      001051 16 00                 4205 	ld	d, #0x00
      001053 6B                    4206 	ld	l, e
      001054 62                    4207 	ld	h, d
      001055 29                    4208 	add	hl, hl
      001056 29                    4209 	add	hl, hl
      001057 29                    4210 	add	hl, hl
      001058 19                    4211 	add	hl, de
      001059 29                    4212 	add	hl, hl
      00105A 11r00r00              4213 	ld	de, #_enemyOptions
      00105D 19                    4214 	add	hl, de
      00105E 59                    4215 	ld	e, c
      00105F 50                    4216 	ld	d, b
      001060 C5                    4217 	push	bc
      001061 01 12 00              4218 	ld	bc, #0x12
      001064 C5                    4219 	push	bc
      001065 E5                    4220 	push	hl
      001066 D5                    4221 	push	de
      001067 CDr00r00              4222 	call	___memcpy
      00106A E8 06                 4223 	add	sp, #6
      00106C CDr00r00              4224 	call	_rand
      00106F 7B                    4225 	ld	a, e
      001070 C1                    4226 	pop	bc
      001071 E6 07                 4227 	and	a, #0x07
      001073 F8 05                 4228 	ldhl	sp,	#5
      001075 77                    4229 	ld	(hl), a
                                   4230 ;src/main.c:427: eptr->x = xSpawnPositions[posIndex];
      001076 11r8Fr0B              4231 	ld	de, #_xSpawnPositions
      001079 6E                    4232 	ld	l, (hl)
      00107A 26 00                 4233 	ld	h, #0x00
      00107C 19                    4234 	add	hl, de
      00107D 5D                    4235 	ld	e, l
      00107E 54                    4236 	ld	d, h
      00107F 1A                    4237 	ld	a, (de)
      001080 5F                    4238 	ld	e, a
      001081 16 00                 4239 	ld	d, #0x00
      001083 69                    4240 	ld	l, c
      001084 60                    4241 	ld	h, b
      001085 7B                    4242 	ld	a, e
      001086 22                    4243 	ld	(hl+), a
      001087 72                    4244 	ld	(hl), d
                                   4245 ;src/main.c:428: eptr->y = ySpawnPositions[posIndex];
      001088 21 02 00              4246 	ld	hl, #0x0002
      00108B 09                    4247 	add	hl, bc
      00108C 33                    4248 	inc	sp
      00108D 33                    4249 	inc	sp
      00108E E5                    4250 	push	hl
      00108F 11r97r0B              4251 	ld	de, #_ySpawnPositions
      001092 F8 05                 4252 	ldhl	sp,	#5
      001094 6E                    4253 	ld	l, (hl)
      001095 26 00                 4254 	ld	h, #0x00
      001097 19                    4255 	add	hl, de
      001098 5D                    4256 	ld	e, l
      001099 54                    4257 	ld	d, h
      00109A 1A                    4258 	ld	a, (de)
      00109B F8 04                 4259 	ldhl	sp,	#4
      00109D 22                    4260 	ld	(hl+), a
      00109E AF                    4261 	xor	a, a
      00109F 32                    4262 	ld	(hl-), a
      0010A0 D1                    4263 	pop	de
      0010A1 D5                    4264 	push	de
      0010A2 2A                    4265 	ld	a, (hl+)
      0010A3 12                    4266 	ld	(de), a
      0010A4 13                    4267 	inc	de
      0010A5 7E                    4268 	ld	a, (hl)
      0010A6 12                    4269 	ld	(de), a
                                   4270 ;src/main.c:430: if (eptr->spriteCount == 1) {
      0010A7 21 08 00              4271 	ld	hl, #0x0008
      0010AA 09                    4272 	add	hl, bc
      0010AB 7E                    4273 	ld	a, (hl)
      0010AC F8 05                 4274 	ldhl	sp,	#5
      0010AE 77                    4275 	ld	(hl), a
                                   4276 ;src/main.c:431: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010AF 21 06 00              4277 	ld	hl, #0x0006
      0010B2 09                    4278 	add	hl, bc
      0010B3 5D                    4279 	ld	e, l
      0010B4 54                    4280 	ld	d, h
      0010B5 F8 06                 4281 	ldhl	sp,	#6
      0010B7 6E                    4282 	ld	l, (hl)
                                   4283 ;	spillPairReg hl
                                   4284 ;	spillPairReg hl
      0010B8 1A                    4285 	ld	a, (de)
      0010B9 5F                    4286 	ld	e, a
      0010BA 7D                    4287 	ld	a, l
      0010BB 87                    4288 	add	a, a
      0010BC F8 02                 4289 	ldhl	sp,	#2
      0010BE 77                    4290 	ld	(hl), a
      0010BF 2A                    4291 	ld	a, (hl+)
      0010C0 C6 0A                 4292 	add	a, #0x0a
                                   4293 ;src/main.c:430: if (eptr->spriteCount == 1) {
      0010C2 22                    4294 	ld	(hl+), a
      0010C3 23                    4295 	inc	hl
      0010C4 7E                    4296 	ld	a, (hl)
      0010C5 3D                    4297 	dec	a
      0010C6 20 2D                 4298 	jr	NZ, 00104$
                                   4299 ;src/main.c:431: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010C8 F8 03                 4300 	ldhl	sp,	#3
      0010CA 56                    4301 	ld	d, (hl)
                                   4302 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010CB 6A                    4303 	ld	l, d
                                   4304 ;	spillPairReg hl
                                   4305 ;	spillPairReg hl
      0010CC 26 00                 4306 	ld	h, #0x00
                                   4307 ;	spillPairReg hl
                                   4308 ;	spillPairReg hl
      0010CE 29                    4309 	add	hl, hl
      0010CF 29                    4310 	add	hl, hl
      0010D0 D5                    4311 	push	de
      0010D1 11r00r00              4312 	ld	de, #_shadow_OAM
      0010D4 19                    4313 	add	hl, de
      0010D5 23                    4314 	inc	hl
      0010D6 23                    4315 	inc	hl
      0010D7 D1                    4316 	pop	de
      0010D8 73                    4317 	ld	(hl), e
                                   4318 ;src/main.c:432: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010D9 D1                    4319 	pop	de
      0010DA D5                    4320 	push	de
      0010DB 1A                    4321 	ld	a, (de)
      0010DC F8 05                 4322 	ldhl	sp,	#5
      0010DE 32                    4323 	ld	(hl-), a
      0010DF 0A                    4324 	ld	a, (bc)
      0010E0 32                    4325 	ld	(hl-), a
                                   4326 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0010E1 6E                    4327 	ld	l, (hl)
                                   4328 ;	spillPairReg hl
                                   4329 ;	spillPairReg hl
      0010E2 26 00                 4330 	ld	h, #0x00
                                   4331 ;	spillPairReg hl
                                   4332 ;	spillPairReg hl
      0010E4 29                    4333 	add	hl, hl
      0010E5 29                    4334 	add	hl, hl
      0010E6 11r00r00              4335 	ld	de, #_shadow_OAM
      0010E9 19                    4336 	add	hl, de
      0010EA 5D                    4337 	ld	e, l
      0010EB 54                    4338 	ld	d, h
                                   4339 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0010EC F8 05                 4340 	ldhl	sp,	#5
      0010EE 3A                    4341 	ld	a, (hl-)
      0010EF 12                    4342 	ld	(de), a
      0010F0 13                    4343 	inc	de
      0010F1 7E                    4344 	ld	a, (hl)
      0010F2 12                    4345 	ld	(de), a
                                   4346 ;src/main.c:432: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010F3 18 65                 4347 	jr	00107$
      0010F5                       4348 00104$:
                                   4349 ;src/main.c:435: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010F5 F8 03                 4350 	ldhl	sp,	#3
      0010F7 56                    4351 	ld	d, (hl)
                                   4352 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010F8 6A                    4353 	ld	l, d
                                   4354 ;	spillPairReg hl
                                   4355 ;	spillPairReg hl
      0010F9 26 00                 4356 	ld	h, #0x00
                                   4357 ;	spillPairReg hl
                                   4358 ;	spillPairReg hl
      0010FB 29                    4359 	add	hl, hl
      0010FC 29                    4360 	add	hl, hl
      0010FD D5                    4361 	push	de
      0010FE 11r00r00              4362 	ld	de, #_shadow_OAM
      001101 19                    4363 	add	hl, de
      001102 23                    4364 	inc	hl
      001103 23                    4365 	inc	hl
      001104 D1                    4366 	pop	de
      001105 73                    4367 	ld	(hl), e
                                   4368 ;src/main.c:436: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001106 D1                    4369 	pop	de
      001107 D5                    4370 	push	de
      001108 1A                    4371 	ld	a, (de)
      001109 F8 04                 4372 	ldhl	sp,	#4
      00110B 22                    4373 	ld	(hl+), a
      00110C 0A                    4374 	ld	a, (bc)
      00110D 32                    4375 	ld	(hl-), a
      00110E 2B                    4376 	dec	hl
      00110F 5E                    4377 	ld	e, (hl)
                                   4378 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001110 26 00                 4379 	ld	h, #0x00
                                   4380 ;	spillPairReg hl
                                   4381 ;	spillPairReg hl
      001112 6B                    4382 	ld	l, e
      001113 29                    4383 	add	hl, hl
      001114 29                    4384 	add	hl, hl
      001115 11r00r00              4385 	ld	de, #_shadow_OAM
      001118 19                    4386 	add	hl, de
      001119 5D                    4387 	ld	e, l
      00111A 54                    4388 	ld	d, h
                                   4389 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00111B F8 04                 4390 	ldhl	sp,	#4
      00111D 2A                    4391 	ld	a, (hl+)
      00111E 12                    4392 	ld	(de), a
      00111F 13                    4393 	inc	de
      001120 7E                    4394 	ld	a, (hl)
      001121 12                    4395 	ld	(de), a
                                   4396 ;src/main.c:438: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      001122 21 07 00              4397 	ld	hl, #0x0007
      001125 09                    4398 	add	hl, bc
      001126 5E                    4399 	ld	e, (hl)
      001127 F8 02                 4400 	ldhl	sp,	#2
      001129 7E                    4401 	ld	a, (hl)
      00112A C6 0B                 4402 	add	a, #0x0b
      00112C F8 05                 4403 	ldhl	sp,	#5
      00112E 77                    4404 	ld	(hl), a
      00112F 56                    4405 	ld	d, (hl)
                                   4406 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001130 6A                    4407 	ld	l, d
                                   4408 ;	spillPairReg hl
                                   4409 ;	spillPairReg hl
      001131 26 00                 4410 	ld	h, #0x00
                                   4411 ;	spillPairReg hl
                                   4412 ;	spillPairReg hl
      001133 29                    4413 	add	hl, hl
      001134 29                    4414 	add	hl, hl
      001135 D5                    4415 	push	de
      001136 11r00r00              4416 	ld	de, #_shadow_OAM
      001139 19                    4417 	add	hl, de
      00113A 23                    4418 	inc	hl
      00113B 23                    4419 	inc	hl
      00113C D1                    4420 	pop	de
      00113D 73                    4421 	ld	(hl), e
                                   4422 ;src/main.c:439: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      00113E D1                    4423 	pop	de
      00113F D5                    4424 	push	de
      001140 1A                    4425 	ld	a, (de)
      001141 F8 04                 4426 	ldhl	sp,	#4
      001143 32                    4427 	ld	(hl-), a
      001144 0A                    4428 	ld	a, (bc)
      001145 22                    4429 	ld	(hl+), a
      001146 23                    4430 	inc	hl
      001147 5E                    4431 	ld	e, (hl)
                                   4432 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001148 26 00                 4433 	ld	h, #0x00
                                   4434 ;	spillPairReg hl
                                   4435 ;	spillPairReg hl
      00114A 6B                    4436 	ld	l, e
      00114B 29                    4437 	add	hl, hl
      00114C 29                    4438 	add	hl, hl
      00114D 11r00r00              4439 	ld	de, #_shadow_OAM
      001150 19                    4440 	add	hl, de
      001151 5D                    4441 	ld	e, l
      001152 54                    4442 	ld	d, h
                                   4443 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001153 F8 04                 4444 	ldhl	sp,	#4
      001155 3A                    4445 	ld	a, (hl-)
      001156 12                    4446 	ld	(de), a
      001157 13                    4447 	inc	de
      001158 7E                    4448 	ld	a, (hl)
      001159 12                    4449 	ld	(de), a
                                   4450 ;src/main.c:439: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      00115A                       4451 00107$:
                                   4452 ;src/main.c:444: eptr++;
      00115A 21 12 00              4453 	ld	hl, #0x0012
      00115D 09                    4454 	add	hl, bc
      00115E 4D                    4455 	ld	c, l
      00115F 44                    4456 	ld	b, h
                                   4457 ;src/main.c:419: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001160 F8 06                 4458 	ldhl	sp,	#6
      001162 34                    4459 	inc	(hl)
      001163 C3r27r10              4460 	jp	00116$
      001166                       4461 00118$:
                                   4462 ;src/main.c:447: }
      001166 E8 07                 4463 	add	sp, #7
      001168 C9                    4464 	ret
                                   4465 ;src/main.c:450: void updateEnemyPositions() {
                                   4466 ;	---------------------------------
                                   4467 ; Function updateEnemyPositions
                                   4468 ; ---------------------------------
      001169                       4469 _updateEnemyPositions::
      001169 E8 F0                 4470 	add	sp, #-16
                                   4471 ;src/main.c:453: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00116B F8 0F                 4472 	ldhl	sp,	#15
      00116D 36 00                 4473 	ld	(hl), #0x00
      00116F                       4474 00196$:
      00116F 21r8Er0B              4475 	ld	hl, #_ENEMYCOUNT
      001172 4E                    4476 	ld	c, (hl)
      001173 F8 0F                 4477 	ldhl	sp,	#15
      001175 7E                    4478 	ld	a, (hl)
      001176 91                    4479 	sub	a, c
      001177 D2r1Br16              4480 	jp	NC, 00134$
                                   4481 ;src/main.c:454: if (!enemies[i].alive) {
      00117A 4E                    4482 	ld	c, (hl)
      00117B 06 00                 4483 	ld	b, #0x00
      00117D 69                    4484 	ld	l, c
      00117E 60                    4485 	ld	h, b
      00117F 29                    4486 	add	hl, hl
      001180 29                    4487 	add	hl, hl
      001181 29                    4488 	add	hl, hl
      001182 09                    4489 	add	hl, bc
      001183 29                    4490 	add	hl, hl
                                   4491 ;src/main.c:462: if (enemies[i].x < playerDrawX) {
      001184 01r5Ar00              4492 	ld	bc,#_enemies
      001187 09                    4493 	add	hl,bc
      001188 E5                    4494 	push	hl
      001189 7D                    4495 	ld	a, l
      00118A F8 04                 4496 	ldhl	sp,	#4
      00118C 77                    4497 	ld	(hl), a
      00118D E1                    4498 	pop	hl
      00118E 7C                    4499 	ld	a, h
      00118F F8 03                 4500 	ldhl	sp,	#3
                                   4501 ;src/main.c:454: if (!enemies[i].alive) {
      001191 32                    4502 	ld	(hl-), a
      001192 2A                    4503 	ld	a, (hl+)
      001193 5F                    4504 	ld	e, a
      001194 56                    4505 	ld	d, (hl)
      001195 21 09 00              4506 	ld	hl, #0x0009
      001198 19                    4507 	add	hl, de
      001199 4D                    4508 	ld	c, l
      00119A 44                    4509 	ld	b, h
      00119B 0A                    4510 	ld	a, (bc)
      00119C B7                    4511 	or	a, a
      00119D CAr15r16              4512 	jp	Z, 00133$
                                   4513 ;src/main.c:457: enemies[i].x -= xOverflow;
      0011A0 F8 02                 4514 	ldhl	sp,#2
      0011A2 2A                    4515 	ld	a, (hl+)
      0011A3 5F                    4516 	ld	e, a
      0011A4 56                    4517 	ld	d, (hl)
      0011A5 1A                    4518 	ld	a, (de)
      0011A6 4F                    4519 	ld	c, a
      0011A7 13                    4520 	inc	de
      0011A8 1A                    4521 	ld	a, (de)
      0011A9 47                    4522 	ld	b, a
      0011AA 21rA1r00              4523 	ld	hl, #_xOverflow
      0011AD 2A                    4524 	ld	a, (hl+)
      0011AE 5F                    4525 	ld	e, a
      0011AF 56                    4526 	ld	d, (hl)
      0011B0 79                    4527 	ld	a, c
      0011B1 93                    4528 	sub	a, e
      0011B2 5F                    4529 	ld	e, a
      0011B3 78                    4530 	ld	a, b
      0011B4 9A                    4531 	sbc	a, d
      0011B5 F8 0E                 4532 	ldhl	sp,	#14
      0011B7 32                    4533 	ld	(hl-), a
      0011B8 73                    4534 	ld	(hl), e
      0011B9 F8 02                 4535 	ldhl	sp,#2
      0011BB 2A                    4536 	ld	a, (hl+)
      0011BC 5F                    4537 	ld	e, a
      0011BD 56                    4538 	ld	d, (hl)
      0011BE F8 0D                 4539 	ldhl	sp,	#13
      0011C0 2A                    4540 	ld	a, (hl+)
      0011C1 12                    4541 	ld	(de), a
      0011C2 13                    4542 	inc	de
      0011C3 7E                    4543 	ld	a, (hl)
      0011C4 12                    4544 	ld	(de), a
                                   4545 ;src/main.c:458: enemies[i].y -= yOverflow;
      0011C5 F8 02                 4546 	ldhl	sp,#2
      0011C7 2A                    4547 	ld	a, (hl+)
      0011C8 5F                    4548 	ld	e, a
      0011C9 56                    4549 	ld	d, (hl)
      0011CA 21 02 00              4550 	ld	hl, #0x0002
      0011CD 19                    4551 	add	hl, de
      0011CE E5                    4552 	push	hl
      0011CF 7D                    4553 	ld	a, l
      0011D0 F8 06                 4554 	ldhl	sp,	#6
      0011D2 77                    4555 	ld	(hl), a
      0011D3 E1                    4556 	pop	hl
      0011D4 7C                    4557 	ld	a, h
      0011D5 F8 05                 4558 	ldhl	sp,	#5
      0011D7 32                    4559 	ld	(hl-), a
      0011D8 2A                    4560 	ld	a, (hl+)
      0011D9 5F                    4561 	ld	e, a
      0011DA 56                    4562 	ld	d, (hl)
      0011DB 1A                    4563 	ld	a, (de)
      0011DC 4F                    4564 	ld	c, a
      0011DD 13                    4565 	inc	de
      0011DE 1A                    4566 	ld	a, (de)
      0011DF 47                    4567 	ld	b, a
      0011E0 79                    4568 	ld	a, c
      0011E1 21rA3r00              4569 	ld	hl, #_yOverflow
      0011E4 96                    4570 	sub	a, (hl)
      0011E5 23                    4571 	inc	hl
      0011E6 4F                    4572 	ld	c, a
      0011E7 78                    4573 	ld	a, b
      0011E8 9E                    4574 	sbc	a, (hl)
      0011E9 47                    4575 	ld	b, a
      0011EA F8 04                 4576 	ldhl	sp,	#4
      0011EC 2A                    4577 	ld	a,	(hl+)
      0011ED 66                    4578 	ld	h, (hl)
      0011EE 6F                    4579 	ld	l, a
      0011EF 79                    4580 	ld	a, c
      0011F0 22                    4581 	ld	(hl+), a
      0011F1 70                    4582 	ld	(hl), b
                                   4583 ;src/main.c:461: if (abs(enemies[i].x - playerDrawX) > 8) {
      0011F2 F8 0D                 4584 	ldhl	sp,	#13
      0011F4 7E                    4585 	ld	a, (hl)
      0011F5 21r9Br00              4586 	ld	hl, #_playerDrawX
      0011F8 4E                    4587 	ld	c, (hl)
      0011F9 91                    4588 	sub	a, c
      0011FA 4F                    4589 	ld	c, a
                                   4590 ;src/main.c:364: if (value >= 0) return value;
      0011FB CB 79                 4591 	bit	7, c
      0011FD 20 03                 4592 	jr	NZ, 00169$
      0011FF 41                    4593 	ld	b, c
      001200 18 03                 4594 	jr	00171$
      001202                       4595 00169$:
                                   4596 ;src/main.c:365: else return - value;
      001202 AF                    4597 	xor	a, a
      001203 91                    4598 	sub	a, c
      001204 47                    4599 	ld	b, a
                                   4600 ;src/main.c:461: if (abs(enemies[i].x - playerDrawX) > 8) {
      001205                       4601 00171$:
                                   4602 ;src/main.c:476: enemies[i].ySpeed += enemies[i].accel;
      001205 F8 02                 4603 	ldhl	sp,#2
      001207 2A                    4604 	ld	a, (hl+)
      001208 5F                    4605 	ld	e, a
      001209 56                    4606 	ld	d, (hl)
      00120A 21 0D 00              4607 	ld	hl, #0x000d
      00120D 19                    4608 	add	hl, de
      00120E 33                    4609 	inc	sp
      00120F 33                    4610 	inc	sp
      001210 E5                    4611 	push	hl
                                   4612 ;src/main.c:463: enemies[i].xSpeed += enemies[i].accel;
      001211 F8 02                 4613 	ldhl	sp,#2
      001213 2A                    4614 	ld	a, (hl+)
      001214 5F                    4615 	ld	e, a
      001215 56                    4616 	ld	d, (hl)
      001216 21 0E 00              4617 	ld	hl, #0x000e
      001219 19                    4618 	add	hl, de
      00121A E5                    4619 	push	hl
      00121B 7D                    4620 	ld	a, l
      00121C F8 08                 4621 	ldhl	sp,	#8
      00121E 77                    4622 	ld	(hl), a
      00121F E1                    4623 	pop	hl
      001220 7C                    4624 	ld	a, h
      001221 F8 07                 4625 	ldhl	sp,	#7
                                   4626 ;src/main.c:470: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      001223 32                    4627 	ld	(hl-), a
      001224 2A                    4628 	ld	a, (hl+)
      001225 5F                    4629 	ld	e, a
      001226 56                    4630 	ld	d, (hl)
      001227 1A                    4631 	ld	a, (de)
      001228 4F                    4632 	ld	c, a
                                   4633 ;src/main.c:461: if (abs(enemies[i].x - playerDrawX) > 8) {
      001229 58                    4634 	ld	e, b
      00122A 3E 08                 4635 	ld	a,#0x08
      00122C 57                    4636 	ld	d,a
      00122D 90                    4637 	sub	a, b
      00122E CB 7B                 4638 	bit	7, e
      001230 28 07                 4639 	jr	Z, 00407$
      001232 CB 7A                 4640 	bit	7, d
      001234 20 08                 4641 	jr	NZ, 00408$
      001236 BF                    4642 	cp	a, a
      001237 18 05                 4643 	jr	00408$
      001239                       4644 00407$:
      001239 CB 7A                 4645 	bit	7, d
      00123B 28 01                 4646 	jr	Z, 00408$
      00123D 37                    4647 	scf
      00123E                       4648 00408$:
      00123E 30 4E                 4649 	jr	NC, 00111$
                                   4650 ;src/main.c:462: if (enemies[i].x < playerDrawX) {
      001240 F8 02                 4651 	ldhl	sp,#2
      001242 2A                    4652 	ld	a, (hl+)
      001243 5F                    4653 	ld	e, a
      001244 56                    4654 	ld	d, (hl)
      001245 1A                    4655 	ld	a, (de)
      001246 F8 0B                 4656 	ldhl	sp,	#11
      001248 22                    4657 	ld	(hl+), a
      001249 13                    4658 	inc	de
      00124A 1A                    4659 	ld	a, (de)
      00124B 77                    4660 	ld	(hl), a
      00124C FAr9Br00              4661 	ld	a, (#_playerDrawX)
      00124F F8 0D                 4662 	ldhl	sp,	#13
      001251 22                    4663 	ld	(hl+), a
      001252 36 00                 4664 	ld	(hl), #0x00
                                   4665 ;src/main.c:463: enemies[i].xSpeed += enemies[i].accel;
      001254 D1                    4666 	pop	de
      001255 D5                    4667 	push	de
      001256 1A                    4668 	ld	a, (de)
      001257 47                    4669 	ld	b, a
                                   4670 ;src/main.c:462: if (enemies[i].x < playerDrawX) {
      001258 F8 0B                 4671 	ldhl	sp,	#11
      00125A 5D                    4672 	ld	e, l
      00125B 54                    4673 	ld	d, h
      00125C F8 0D                 4674 	ldhl	sp,	#13
      00125E 1A                    4675 	ld	a, (de)
      00125F 13                    4676 	inc	de
      001260 96                    4677 	sub	a, (hl)
      001261 23                    4678 	inc	hl
      001262 1A                    4679 	ld	a, (de)
      001263 9E                    4680 	sbc	a, (hl)
      001264 1A                    4681 	ld	a, (de)
      001265 57                    4682 	ld	d, a
      001266 CB 7E                 4683 	bit	7, (hl)
      001268 28 07                 4684 	jr	Z, 00409$
      00126A CB 7A                 4685 	bit	7, d
      00126C 20 08                 4686 	jr	NZ, 00410$
      00126E BF                    4687 	cp	a, a
      00126F 18 05                 4688 	jr	00410$
      001271                       4689 00409$:
      001271 CB 7A                 4690 	bit	7, d
      001273 28 01                 4691 	jr	Z, 00410$
      001275 37                    4692 	scf
      001276                       4693 00410$:
      001276 30 0B                 4694 	jr	NC, 00104$
                                   4695 ;src/main.c:463: enemies[i].xSpeed += enemies[i].accel;
      001278 79                    4696 	ld	a, c
      001279 80                    4697 	add	a, b
      00127A 4F                    4698 	ld	c, a
      00127B F8 06                 4699 	ldhl	sp,	#6
      00127D 2A                    4700 	ld	a,	(hl+)
      00127E 66                    4701 	ld	h, (hl)
      00127F 6F                    4702 	ld	l, a
      001280 71                    4703 	ld	(hl), c
      001281 18 38                 4704 	jr	00112$
      001283                       4705 00104$:
                                   4706 ;src/main.c:466: enemies[i].xSpeed -= enemies[i].accel;
      001283 79                    4707 	ld	a, c
      001284 90                    4708 	sub	a, b
      001285 4F                    4709 	ld	c, a
      001286 F8 06                 4710 	ldhl	sp,	#6
      001288 2A                    4711 	ld	a,	(hl+)
      001289 66                    4712 	ld	h, (hl)
      00128A 6F                    4713 	ld	l, a
      00128B 71                    4714 	ld	(hl), c
      00128C 18 2D                 4715 	jr	00112$
      00128E                       4716 00111$:
                                   4717 ;src/main.c:470: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      00128E 59                    4718 	ld	e, c
      00128F AF                    4719 	xor	a, a
      001290 57                    4720 	ld	d, a
      001291 91                    4721 	sub	a, c
      001292 CB 7B                 4722 	bit	7, e
      001294 28 07                 4723 	jr	Z, 00411$
      001296 CB 7A                 4724 	bit	7, d
      001298 20 08                 4725 	jr	NZ, 00412$
      00129A BF                    4726 	cp	a, a
      00129B 18 05                 4727 	jr	00412$
      00129D                       4728 00411$:
      00129D CB 7A                 4729 	bit	7, d
      00129F 28 01                 4730 	jr	Z, 00412$
      0012A1 37                    4731 	scf
      0012A2                       4732 00412$:
      0012A2 30 07                 4733 	jr	NC, 00107$
      0012A4 0D                    4734 	dec	c
      0012A5 F8 06                 4735 	ldhl	sp,	#6
      0012A7 2A                    4736 	ld	a,	(hl+)
      0012A8 66                    4737 	ld	h, (hl)
      0012A9 6F                    4738 	ld	l, a
      0012AA 71                    4739 	ld	(hl), c
      0012AB                       4740 00107$:
      0012AB F8 06                 4741 	ldhl	sp,#6
      0012AD 2A                    4742 	ld	a, (hl+)
      0012AE 5F                    4743 	ld	e, a
      0012AF 56                    4744 	ld	d, (hl)
      0012B0 1A                    4745 	ld	a, (de)
      0012B1 4F                    4746 	ld	c, a
                                   4747 ;src/main.c:471: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      0012B2 CB 79                 4748 	bit	7, c
      0012B4 28 05                 4749 	jr	Z, 00112$
      0012B6 0C                    4750 	inc	c
      0012B7 3A                    4751 	ld	a, (hl-)
      0012B8 6E                    4752 	ld	l, (hl)
      0012B9 67                    4753 	ld	h, a
      0012BA 71                    4754 	ld	(hl), c
      0012BB                       4755 00112$:
                                   4756 ;src/main.c:474: if (abs(enemies[i].y - playerDrawY) > 8) {
      0012BB F8 04                 4757 	ldhl	sp,#4
      0012BD 2A                    4758 	ld	a, (hl+)
      0012BE 5F                    4759 	ld	e, a
      0012BF 56                    4760 	ld	d, (hl)
      0012C0 1A                    4761 	ld	a, (de)
      0012C1 4F                    4762 	ld	c, a
      0012C2 13                    4763 	inc	de
      0012C3 1A                    4764 	ld	a, (de)
      0012C4 47                    4765 	ld	b, a
      0012C5 79                    4766 	ld	a, c
      0012C6 21r9Cr00              4767 	ld	hl, #_playerDrawY
      0012C9 5E                    4768 	ld	e, (hl)
      0012CA 93                    4769 	sub	a, e
      0012CB 6F                    4770 	ld	l, a
                                   4771 ;	spillPairReg hl
                                   4772 ;	spillPairReg hl
                                   4773 ;src/main.c:364: if (value >= 0) return value;
      0012CC CB 7D                 4774 	bit	7, l
      0012CE 20 06                 4775 	jr	NZ, 00173$
      0012D0 7D                    4776 	ld	a, l
      0012D1 F8 0E                 4777 	ldhl	sp,	#14
      0012D3 77                    4778 	ld	(hl), a
      0012D4 18 06                 4779 	jr	00175$
      0012D6                       4780 00173$:
                                   4781 ;src/main.c:365: else return - value;
      0012D6 AF                    4782 	xor	a, a
      0012D7 95                    4783 	sub	a, l
      0012D8 5F                    4784 	ld	e, a
      0012D9 F8 0E                 4785 	ldhl	sp,	#14
      0012DB 73                    4786 	ld	(hl), e
                                   4787 ;src/main.c:474: if (abs(enemies[i].y - playerDrawY) > 8) {
      0012DC                       4788 00175$:
                                   4789 ;src/main.c:476: enemies[i].ySpeed += enemies[i].accel;
      0012DC F8 02                 4790 	ldhl	sp,#2
      0012DE 2A                    4791 	ld	a, (hl+)
      0012DF 5F                    4792 	ld	e, a
      0012E0 56                    4793 	ld	d, (hl)
      0012E1 21 0F 00              4794 	ld	hl, #0x000f
      0012E4 19                    4795 	add	hl, de
      0012E5 E5                    4796 	push	hl
      0012E6 7D                    4797 	ld	a, l
      0012E7 F8 0A                 4798 	ldhl	sp,	#10
      0012E9 77                    4799 	ld	(hl), a
      0012EA E1                    4800 	pop	hl
      0012EB 7C                    4801 	ld	a, h
      0012EC F8 09                 4802 	ldhl	sp,	#9
                                   4803 ;src/main.c:483: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      0012EE 32                    4804 	ld	(hl-), a
      0012EF 2A                    4805 	ld	a, (hl+)
      0012F0 5F                    4806 	ld	e, a
      0012F1 2A                    4807 	ld	a, (hl+)
      0012F2 23                    4808 	inc	hl
      0012F3 57                    4809 	ld	d, a
      0012F4 1A                    4810 	ld	a, (de)
      0012F5 77                    4811 	ld	(hl), a
                                   4812 ;src/main.c:474: if (abs(enemies[i].y - playerDrawY) > 8) {
      0012F6 F8 0E                 4813 	ldhl	sp,	#14
      0012F8 5E                    4814 	ld	e, (hl)
      0012F9 3E 08                 4815 	ld	a,#0x08
      0012FB 57                    4816 	ld	d,a
      0012FC 96                    4817 	sub	a, (hl)
      0012FD CB 7B                 4818 	bit	7, e
      0012FF 28 07                 4819 	jr	Z, 00413$
      001301 CB 7A                 4820 	bit	7, d
      001303 20 08                 4821 	jr	NZ, 00414$
      001305 BF                    4822 	cp	a, a
      001306 18 05                 4823 	jr	00414$
      001308                       4824 00413$:
      001308 CB 7A                 4825 	bit	7, d
      00130A 28 01                 4826 	jr	Z, 00414$
      00130C 37                    4827 	scf
      00130D                       4828 00414$:
      00130D 30 44                 4829 	jr	NC, 00121$
                                   4830 ;src/main.c:475: if (enemies[i].y < playerDrawY) {
      00130F FAr9Cr00              4831 	ld	a, (#_playerDrawY)
      001312 F8 0C                 4832 	ldhl	sp,	#12
      001314 22                    4833 	ld	(hl+), a
                                   4834 ;src/main.c:463: enemies[i].xSpeed += enemies[i].accel;
      001315 AF                    4835 	xor	a, a
      001316 22                    4836 	ld	(hl+), a
      001317 D1                    4837 	pop	de
      001318 D5                    4838 	push	de
      001319 1A                    4839 	ld	a, (de)
                                   4840 ;src/main.c:475: if (enemies[i].y < playerDrawY) {
      00131A 32                    4841 	ld	(hl-), a
      00131B 2B                    4842 	dec	hl
      00131C 79                    4843 	ld	a, c
      00131D 96                    4844 	sub	a, (hl)
      00131E 23                    4845 	inc	hl
      00131F 78                    4846 	ld	a, b
      001320 9E                    4847 	sbc	a, (hl)
      001321 78                    4848 	ld	a, b
      001322 57                    4849 	ld	d, a
      001323 CB 7E                 4850 	bit	7, (hl)
      001325 28 07                 4851 	jr	Z, 00415$
      001327 CB 7A                 4852 	bit	7, d
      001329 20 08                 4853 	jr	NZ, 00416$
      00132B BF                    4854 	cp	a, a
      00132C 18 05                 4855 	jr	00416$
      00132E                       4856 00415$:
      00132E CB 7A                 4857 	bit	7, d
      001330 28 01                 4858 	jr	Z, 00416$
      001332 37                    4859 	scf
      001333                       4860 00416$:
      001333 30 0F                 4861 	jr	NC, 00114$
                                   4862 ;src/main.c:476: enemies[i].ySpeed += enemies[i].accel;
      001335 F8 0B                 4863 	ldhl	sp,	#11
      001337 7E                    4864 	ld	a, (hl)
      001338 F8 0E                 4865 	ldhl	sp,	#14
      00133A 86                    4866 	add	a, (hl)
      00133B 4F                    4867 	ld	c, a
      00133C F8 08                 4868 	ldhl	sp,	#8
      00133E 2A                    4869 	ld	a,	(hl+)
      00133F 66                    4870 	ld	h, (hl)
      001340 6F                    4871 	ld	l, a
      001341 71                    4872 	ld	(hl), c
      001342 18 41                 4873 	jr	00122$
      001344                       4874 00114$:
                                   4875 ;src/main.c:479: enemies[i].ySpeed -= enemies[i].accel;
      001344 F8 0B                 4876 	ldhl	sp,	#11
      001346 7E                    4877 	ld	a, (hl)
      001347 F8 0E                 4878 	ldhl	sp,	#14
      001349 96                    4879 	sub	a, (hl)
      00134A 4F                    4880 	ld	c, a
      00134B F8 08                 4881 	ldhl	sp,	#8
      00134D 2A                    4882 	ld	a,	(hl+)
      00134E 66                    4883 	ld	h, (hl)
      00134F 6F                    4884 	ld	l, a
      001350 71                    4885 	ld	(hl), c
      001351 18 32                 4886 	jr	00122$
      001353                       4887 00121$:
                                   4888 ;src/main.c:483: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001353 F8 0B                 4889 	ldhl	sp,	#11
      001355 5E                    4890 	ld	e, (hl)
      001356 AF                    4891 	xor	a, a
      001357 57                    4892 	ld	d, a
      001358 96                    4893 	sub	a, (hl)
      001359 CB 7B                 4894 	bit	7, e
      00135B 28 07                 4895 	jr	Z, 00417$
      00135D CB 7A                 4896 	bit	7, d
      00135F 20 08                 4897 	jr	NZ, 00418$
      001361 BF                    4898 	cp	a, a
      001362 18 05                 4899 	jr	00418$
      001364                       4900 00417$:
      001364 CB 7A                 4901 	bit	7, d
      001366 28 01                 4902 	jr	Z, 00418$
      001368 37                    4903 	scf
      001369                       4904 00418$:
      001369 30 0A                 4905 	jr	NC, 00117$
      00136B F8 0B                 4906 	ldhl	sp,	#11
      00136D 4E                    4907 	ld	c, (hl)
      00136E 0D                    4908 	dec	c
      00136F F8 08                 4909 	ldhl	sp,	#8
      001371 2A                    4910 	ld	a,	(hl+)
      001372 66                    4911 	ld	h, (hl)
      001373 6F                    4912 	ld	l, a
      001374 71                    4913 	ld	(hl), c
      001375                       4914 00117$:
      001375 F8 08                 4915 	ldhl	sp,#8
      001377 2A                    4916 	ld	a, (hl+)
      001378 5F                    4917 	ld	e, a
      001379 56                    4918 	ld	d, (hl)
      00137A 1A                    4919 	ld	a, (de)
      00137B 4F                    4920 	ld	c, a
                                   4921 ;src/main.c:484: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      00137C CB 79                 4922 	bit	7, c
      00137E 28 05                 4923 	jr	Z, 00122$
      001380 0C                    4924 	inc	c
      001381 3A                    4925 	ld	a, (hl-)
      001382 6E                    4926 	ld	l, (hl)
      001383 67                    4927 	ld	h, a
      001384 71                    4928 	ld	(hl), c
      001385                       4929 00122$:
                                   4930 ;src/main.c:488: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001385 F8 02                 4931 	ldhl	sp,#2
      001387 2A                    4932 	ld	a, (hl+)
      001388 5F                    4933 	ld	e, a
      001389 56                    4934 	ld	d, (hl)
      00138A 21 0C 00              4935 	ld	hl, #0x000c
      00138D 19                    4936 	add	hl, de
      00138E E5                    4937 	push	hl
      00138F 7D                    4938 	ld	a, l
      001390 F8 0C                 4939 	ldhl	sp,	#12
      001392 77                    4940 	ld	(hl), a
      001393 E1                    4941 	pop	hl
      001394 7C                    4942 	ld	a, h
      001395 F8 0B                 4943 	ldhl	sp,	#11
      001397 32                    4944 	ld	(hl-), a
      001398 2A                    4945 	ld	a, (hl+)
      001399 5F                    4946 	ld	e, a
      00139A 2A                    4947 	ld	a, (hl+)
      00139B 57                    4948 	ld	d, a
      00139C 1A                    4949 	ld	a, (de)
      00139D 4F                    4950 	ld	c, a
      00139E 22                    4951 	ld	(hl+), a
      00139F AF                    4952 	xor	a, a
      0013A0 91                    4953 	sub	a, c
      0013A1 77                    4954 	ld	(hl), a
      0013A2 F8 06                 4955 	ldhl	sp,#6
      0013A4 2A                    4956 	ld	a, (hl+)
      0013A5 5F                    4957 	ld	e, a
      0013A6 56                    4958 	ld	d, (hl)
      0013A7 1A                    4959 	ld	a, (de)
      0013A8 F8 0E                 4960 	ldhl	sp,	#14
                                   4961 ;src/main.c:345: return (value < min) ? min : (value > max) ? max : value;
      0013AA 32                    4962 	ld	(hl-), a
      0013AB 2A                    4963 	ld	a, (hl+)
      0013AC 5F                    4964 	ld	e, a
      0013AD 56                    4965 	ld	d, (hl)
      0013AE 3A                    4966 	ld	a, (hl-)
      0013AF 96                    4967 	sub	a, (hl)
      0013B0 CB 7B                 4968 	bit	7, e
      0013B2 28 07                 4969 	jr	Z, 00419$
      0013B4 CB 7A                 4970 	bit	7, d
      0013B6 20 08                 4971 	jr	NZ, 00420$
      0013B8 BF                    4972 	cp	a, a
      0013B9 18 05                 4973 	jr	00420$
      0013BB                       4974 00419$:
      0013BB CB 7A                 4975 	bit	7, d
      0013BD 28 01                 4976 	jr	Z, 00420$
      0013BF 37                    4977 	scf
      0013C0                       4978 00420$:
      0013C0 30 06                 4979 	jr	NC, 00202$
      0013C2 F8 0D                 4980 	ldhl	sp,	#13
      0013C4 2A                    4981 	ld	a, (hl+)
      0013C5 77                    4982 	ld	(hl), a
      0013C6 18 26                 4983 	jr	00203$
      0013C8                       4984 00202$:
      0013C8 F8 0E                 4985 	ldhl	sp,	#14
      0013CA 3A                    4986 	ld	a, (hl-)
      0013CB 2B                    4987 	dec	hl
      0013CC 5F                    4988 	ld	e, a
      0013CD 56                    4989 	ld	d, (hl)
      0013CE 2A                    4990 	ld	a, (hl+)
      0013CF 23                    4991 	inc	hl
      0013D0 96                    4992 	sub	a, (hl)
      0013D1 CB 7B                 4993 	bit	7, e
      0013D3 28 07                 4994 	jr	Z, 00421$
      0013D5 CB 7A                 4995 	bit	7, d
      0013D7 20 08                 4996 	jr	NZ, 00422$
      0013D9 BF                    4997 	cp	a, a
      0013DA 18 05                 4998 	jr	00422$
      0013DC                       4999 00421$:
      0013DC CB 7A                 5000 	bit	7, d
      0013DE 28 01                 5001 	jr	Z, 00422$
      0013E0 37                    5002 	scf
      0013E1                       5003 00422$:
      0013E1 30 05                 5004 	jr	NC, 00204$
      0013E3 F8 0C                 5005 	ldhl	sp,	#12
      0013E5 5E                    5006 	ld	e, (hl)
      0013E6 18 03                 5007 	jr	00205$
      0013E8                       5008 00204$:
      0013E8 F8 0E                 5009 	ldhl	sp,	#14
      0013EA 5E                    5010 	ld	e, (hl)
      0013EB                       5011 00205$:
      0013EB F8 0E                 5012 	ldhl	sp,	#14
      0013ED 73                    5013 	ld	(hl), e
      0013EE                       5014 00203$:
      0013EE F8 0E                 5015 	ldhl	sp,	#14
      0013F0 4E                    5016 	ld	c, (hl)
                                   5017 ;src/main.c:488: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0013F1 F8 06                 5018 	ldhl	sp,	#6
      0013F3 2A                    5019 	ld	a,	(hl+)
      0013F4 66                    5020 	ld	h, (hl)
      0013F5 6F                    5021 	ld	l, a
      0013F6 71                    5022 	ld	(hl), c
                                   5023 ;src/main.c:489: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0013F7 F8 0A                 5024 	ldhl	sp,#10
      0013F9 2A                    5025 	ld	a, (hl+)
      0013FA 5F                    5026 	ld	e, a
      0013FB 3A                    5027 	ld	a, (hl-)
      0013FC 2B                    5028 	dec	hl
      0013FD 2B                    5029 	dec	hl
      0013FE 57                    5030 	ld	d, a
      0013FF 1A                    5031 	ld	a, (de)
      001400 47                    5032 	ld	b, a
      001401 48                    5033 	ld	c, b
      001402 AF                    5034 	xor	a, a
      001403 90                    5035 	sub	a, b
      001404 47                    5036 	ld	b, a
      001405 2A                    5037 	ld	a, (hl+)
      001406 5F                    5038 	ld	e, a
      001407 56                    5039 	ld	d, (hl)
      001408 1A                    5040 	ld	a, (de)
      001409 6F                    5041 	ld	l, a
                                   5042 ;	spillPairReg hl
                                   5043 ;	spillPairReg hl
                                   5044 ;src/main.c:345: return (value < min) ? min : (value > max) ? max : value;
      00140A 58                    5045 	ld	e, b
      00140B 7D                    5046 	ld	a,l
      00140C 57                    5047 	ld	d,a
      00140D 90                    5048 	sub	a, b
      00140E CB 7B                 5049 	bit	7, e
      001410 28 07                 5050 	jr	Z, 00423$
      001412 CB 7A                 5051 	bit	7, d
      001414 20 08                 5052 	jr	NZ, 00424$
      001416 BF                    5053 	cp	a, a
      001417 18 05                 5054 	jr	00424$
      001419                       5055 00423$:
      001419 CB 7A                 5056 	bit	7, d
      00141B 28 01                 5057 	jr	Z, 00424$
      00141D 37                    5058 	scf
      00141E                       5059 00424$:
      00141E 30 03                 5060 	jr	NC, 00206$
      001420 48                    5061 	ld	c, b
      001421 18 17                 5062 	jr	00207$
      001423                       5063 00206$:
      001423 5D                    5064 	ld	e, l
      001424 79                    5065 	ld	a,c
      001425 57                    5066 	ld	d,a
      001426 95                    5067 	sub	a, l
      001427 CB 7B                 5068 	bit	7, e
      001429 28 07                 5069 	jr	Z, 00425$
      00142B CB 7A                 5070 	bit	7, d
      00142D 20 08                 5071 	jr	NZ, 00426$
      00142F BF                    5072 	cp	a, a
      001430 18 05                 5073 	jr	00426$
      001432                       5074 00425$:
      001432 CB 7A                 5075 	bit	7, d
      001434 28 01                 5076 	jr	Z, 00426$
      001436 37                    5077 	scf
      001437                       5078 00426$:
      001437 38 01                 5079 	jr	C, 00209$
      001439 4D                    5080 	ld	c, l
      00143A                       5081 00209$:
      00143A                       5082 00207$:
                                   5083 ;src/main.c:489: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      00143A F8 08                 5084 	ldhl	sp,	#8
      00143C 2A                    5085 	ld	a,	(hl+)
      00143D 66                    5086 	ld	h, (hl)
      00143E 6F                    5087 	ld	l, a
      00143F 71                    5088 	ld	(hl), c
                                   5089 ;src/main.c:492: enemies[i].xReserve += enemies[i].xSpeed;
      001440 F8 02                 5090 	ldhl	sp,#2
      001442 2A                    5091 	ld	a, (hl+)
      001443 5F                    5092 	ld	e, a
      001444 56                    5093 	ld	d, (hl)
      001445 21 04 00              5094 	ld	hl, #0x0004
      001448 19                    5095 	add	hl, de
      001449 E5                    5096 	push	hl
      00144A 7D                    5097 	ld	a, l
      00144B F8 0F                 5098 	ldhl	sp,	#15
      00144D 77                    5099 	ld	(hl), a
      00144E E1                    5100 	pop	hl
      00144F 7C                    5101 	ld	a, h
      001450 F8 0E                 5102 	ldhl	sp,	#14
      001452 32                    5103 	ld	(hl-), a
      001453 2A                    5104 	ld	a, (hl+)
      001454 5F                    5105 	ld	e, a
      001455 56                    5106 	ld	d, (hl)
      001456 1A                    5107 	ld	a, (de)
      001457 47                    5108 	ld	b, a
      001458 F8 06                 5109 	ldhl	sp,#6
      00145A 2A                    5110 	ld	a, (hl+)
      00145B 5F                    5111 	ld	e, a
      00145C 56                    5112 	ld	d, (hl)
      00145D 1A                    5113 	ld	a, (de)
      00145E 80                    5114 	add	a, b
      00145F 47                    5115 	ld	b, a
      001460 F8 0D                 5116 	ldhl	sp,	#13
      001462 2A                    5117 	ld	a,	(hl+)
      001463 66                    5118 	ld	h, (hl)
      001464 6F                    5119 	ld	l, a
      001465 70                    5120 	ld	(hl), b
                                   5121 ;src/main.c:493: enemies[i].yReserve += enemies[i].ySpeed;
      001466 F8 02                 5122 	ldhl	sp,#2
      001468 2A                    5123 	ld	a, (hl+)
      001469 5F                    5124 	ld	e, a
      00146A 56                    5125 	ld	d, (hl)
      00146B 21 05 00              5126 	ld	hl, #0x0005
      00146E 19                    5127 	add	hl, de
      00146F E5                    5128 	push	hl
      001470 7D                    5129 	ld	a, l
      001471 F8 0C                 5130 	ldhl	sp,	#12
      001473 77                    5131 	ld	(hl), a
      001474 E1                    5132 	pop	hl
      001475 7C                    5133 	ld	a, h
      001476 F8 0B                 5134 	ldhl	sp,	#11
      001478 32                    5135 	ld	(hl-), a
      001479 2A                    5136 	ld	a, (hl+)
      00147A 5F                    5137 	ld	e, a
      00147B 56                    5138 	ld	d, (hl)
      00147C 1A                    5139 	ld	a, (de)
      00147D 81                    5140 	add	a, c
      00147E 4F                    5141 	ld	c, a
      00147F 3A                    5142 	ld	a, (hl-)
      001480 6E                    5143 	ld	l, (hl)
      001481 67                    5144 	ld	h, a
      001482 71                    5145 	ld	(hl), c
                                   5146 ;src/main.c:497: if (enemies[i].xReserve >> 3 > 0) {
      001483 F8 0D                 5147 	ldhl	sp,#13
      001485 2A                    5148 	ld	a, (hl+)
      001486 5F                    5149 	ld	e, a
      001487 3A                    5150 	ld	a, (hl-)
      001488 2B                    5151 	dec	hl
      001489 57                    5152 	ld	d, a
      00148A 1A                    5153 	ld	a, (de)
      00148B 77                    5154 	ld	(hl), a
      00148C CB 28                 5155 	sra	b
      00148E CB 28                 5156 	sra	b
      001490 CB 28                 5157 	sra	b
      001492 58                    5158 	ld	e, b
      001493 AF                    5159 	xor	a, a
      001494 57                    5160 	ld	d, a
      001495 90                    5161 	sub	a, b
      001496 CB 7B                 5162 	bit	7, e
      001498 28 07                 5163 	jr	Z, 00427$
      00149A CB 7A                 5164 	bit	7, d
      00149C 20 08                 5165 	jr	NZ, 00428$
      00149E BF                    5166 	cp	a, a
      00149F 18 05                 5167 	jr	00428$
      0014A1                       5168 00427$:
      0014A1 CB 7A                 5169 	bit	7, d
      0014A3 28 01                 5170 	jr	Z, 00428$
      0014A5 37                    5171 	scf
      0014A6                       5172 00428$:
      0014A6 30 3F                 5173 	jr	NC, 00126$
                                   5174 ;src/main.c:498: int8_t xMovement = enemies[i].xReserve >> 3;
      0014A8 F8 0C                 5175 	ldhl	sp,	#12
      0014AA 7E                    5176 	ld	a, (hl)
      0014AB CB 2F                 5177 	sra	a
      0014AD CB 2F                 5178 	sra	a
      0014AF CB 2F                 5179 	sra	a
      0014B1 77                    5180 	ld	(hl), a
                                   5181 ;src/main.c:499: enemies[i].x += xMovement;
      0014B2 F8 02                 5182 	ldhl	sp,#2
      0014B4 2A                    5183 	ld	a, (hl+)
      0014B5 5F                    5184 	ld	e, a
      0014B6 56                    5185 	ld	d, (hl)
      0014B7 1A                    5186 	ld	a, (de)
      0014B8 4F                    5187 	ld	c, a
      0014B9 13                    5188 	inc	de
      0014BA 1A                    5189 	ld	a, (de)
      0014BB 47                    5190 	ld	b, a
      0014BC F8 0C                 5191 	ldhl	sp,	#12
      0014BE 7E                    5192 	ld	a, (hl)
      0014BF 5F                    5193 	ld	e, a
      0014C0 07                    5194 	rlca
      0014C1 9F                    5195 	sbc	a, a
      0014C2 57                    5196 	ld	d, a
      0014C3 69                    5197 	ld	l, c
                                   5198 ;	spillPairReg hl
                                   5199 ;	spillPairReg hl
      0014C4 60                    5200 	ld	h, b
                                   5201 ;	spillPairReg hl
                                   5202 ;	spillPairReg hl
      0014C5 19                    5203 	add	hl, de
      0014C6 4D                    5204 	ld	c, l
      0014C7 44                    5205 	ld	b, h
      0014C8 F8 02                 5206 	ldhl	sp,	#2
      0014CA 2A                    5207 	ld	a,	(hl+)
      0014CB 66                    5208 	ld	h, (hl)
      0014CC 6F                    5209 	ld	l, a
      0014CD 79                    5210 	ld	a, c
      0014CE 22                    5211 	ld	(hl+), a
      0014CF 70                    5212 	ld	(hl), b
                                   5213 ;src/main.c:500: enemies[i].xReserve -=  xMovement << 3;
      0014D0 F8 0D                 5214 	ldhl	sp,#13
      0014D2 2A                    5215 	ld	a, (hl+)
      0014D3 5F                    5216 	ld	e, a
      0014D4 3A                    5217 	ld	a, (hl-)
      0014D5 2B                    5218 	dec	hl
      0014D6 57                    5219 	ld	d, a
      0014D7 1A                    5220 	ld	a, (de)
      0014D8 F5                    5221 	push	af
      0014D9 2A                    5222 	ld	a, (hl+)
      0014DA 87                    5223 	add	a, a
      0014DB 87                    5224 	add	a, a
      0014DC 87                    5225 	add	a, a
      0014DD 4F                    5226 	ld	c, a
      0014DE F1                    5227 	pop	af
      0014DF 91                    5228 	sub	a, c
      0014E0 4F                    5229 	ld	c, a
      0014E1 2A                    5230 	ld	a,	(hl+)
      0014E2 66                    5231 	ld	h, (hl)
      0014E3 6F                    5232 	ld	l, a
      0014E4 71                    5233 	ld	(hl), c
      0014E5 18 69                 5234 	jr	00127$
      0014E7                       5235 00126$:
                                   5236 ;src/main.c:503: else if ((-enemies[i].xReserve) >> 3 > 0){
      0014E7 F8 0C                 5237 	ldhl	sp,	#12
      0014E9 7E                    5238 	ld	a, (hl)
      0014EA 4F                    5239 	ld	c, a
      0014EB 07                    5240 	rlca
      0014EC 9F                    5241 	sbc	a, a
      0014ED 47                    5242 	ld	b, a
      0014EE AF                    5243 	xor	a, a
      0014EF 91                    5244 	sub	a, c
      0014F0 4F                    5245 	ld	c, a
      0014F1 9F                    5246 	sbc	a, a
      0014F2 90                    5247 	sub	a, b
      0014F3 47                    5248 	ld	b, a
      0014F4 CB 28                 5249 	sra	b
      0014F6 CB 19                 5250 	rr	c
      0014F8 CB 28                 5251 	sra	b
      0014FA CB 19                 5252 	rr	c
      0014FC CB 28                 5253 	sra	b
      0014FE CB 19                 5254 	rr	c
      001500 58                    5255 	ld	e, b
      001501 AF                    5256 	xor	a, a
      001502 57                    5257 	ld	d, a
      001503 B9                    5258 	cp	a, c
      001504 98                    5259 	sbc	a, b
      001505 CB 7B                 5260 	bit	7, e
      001507 28 07                 5261 	jr	Z, 00429$
      001509 CB 7A                 5262 	bit	7, d
      00150B 20 08                 5263 	jr	NZ, 00430$
      00150D BF                    5264 	cp	a, a
      00150E 18 05                 5265 	jr	00430$
      001510                       5266 00429$:
      001510 CB 7A                 5267 	bit	7, d
      001512 28 01                 5268 	jr	Z, 00430$
      001514 37                    5269 	scf
      001515                       5270 00430$:
      001515 30 39                 5271 	jr	NC, 00127$
                                   5272 ;src/main.c:504: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      001517 AF                    5273 	xor	a, a
      001518 91                    5274 	sub	a, c
      001519 4F                    5275 	ld	c, a
      00151A F8 0C                 5276 	ldhl	sp,	#12
      00151C 71                    5277 	ld	(hl), c
                                   5278 ;src/main.c:505: enemies[i].x += xMovement;
      00151D F8 02                 5279 	ldhl	sp,#2
      00151F 2A                    5280 	ld	a, (hl+)
      001520 5F                    5281 	ld	e, a
      001521 56                    5282 	ld	d, (hl)
      001522 1A                    5283 	ld	a, (de)
      001523 4F                    5284 	ld	c, a
      001524 13                    5285 	inc	de
      001525 1A                    5286 	ld	a, (de)
      001526 47                    5287 	ld	b, a
      001527 F8 0C                 5288 	ldhl	sp,	#12
      001529 7E                    5289 	ld	a, (hl)
      00152A 5F                    5290 	ld	e, a
      00152B 07                    5291 	rlca
      00152C 9F                    5292 	sbc	a, a
      00152D 57                    5293 	ld	d, a
      00152E 69                    5294 	ld	l, c
                                   5295 ;	spillPairReg hl
                                   5296 ;	spillPairReg hl
      00152F 60                    5297 	ld	h, b
                                   5298 ;	spillPairReg hl
                                   5299 ;	spillPairReg hl
      001530 19                    5300 	add	hl, de
      001531 4D                    5301 	ld	c, l
      001532 44                    5302 	ld	b, h
      001533 F8 02                 5303 	ldhl	sp,	#2
      001535 2A                    5304 	ld	a,	(hl+)
      001536 66                    5305 	ld	h, (hl)
      001537 6F                    5306 	ld	l, a
      001538 79                    5307 	ld	a, c
      001539 22                    5308 	ld	(hl+), a
      00153A 70                    5309 	ld	(hl), b
                                   5310 ;src/main.c:506: enemies[i].xReserve +=  (-xMovement) << 3;
      00153B F8 0D                 5311 	ldhl	sp,#13
      00153D 2A                    5312 	ld	a, (hl+)
      00153E 5F                    5313 	ld	e, a
      00153F 3A                    5314 	ld	a, (hl-)
      001540 2B                    5315 	dec	hl
      001541 57                    5316 	ld	d, a
      001542 1A                    5317 	ld	a, (de)
      001543 4F                    5318 	ld	c, a
      001544 AF                    5319 	xor	a, a
      001545 96                    5320 	sub	a, (hl)
      001546 23                    5321 	inc	hl
      001547 87                    5322 	add	a, a
      001548 87                    5323 	add	a, a
      001549 87                    5324 	add	a, a
      00154A 81                    5325 	add	a, c
      00154B 4F                    5326 	ld	c, a
      00154C 2A                    5327 	ld	a,	(hl+)
      00154D 66                    5328 	ld	h, (hl)
      00154E 6F                    5329 	ld	l, a
      00154F 71                    5330 	ld	(hl), c
      001550                       5331 00127$:
                                   5332 ;src/main.c:493: enemies[i].yReserve += enemies[i].ySpeed;
      001550 F8 0A                 5333 	ldhl	sp,#10
      001552 2A                    5334 	ld	a, (hl+)
      001553 5F                    5335 	ld	e, a
      001554 56                    5336 	ld	d, (hl)
      001555 1A                    5337 	ld	a, (de)
      001556 4F                    5338 	ld	c, a
                                   5339 ;src/main.c:509: if (enemies[i].yReserve >> 3 > 0) {
      001557 41                    5340 	ld	b, c
      001558 CB 28                 5341 	sra	b
      00155A CB 28                 5342 	sra	b
      00155C CB 28                 5343 	sra	b
      00155E 58                    5344 	ld	e, b
      00155F AF                    5345 	xor	a, a
      001560 57                    5346 	ld	d, a
      001561 90                    5347 	sub	a, b
      001562 CB 7B                 5348 	bit	7, e
      001564 28 07                 5349 	jr	Z, 00431$
      001566 CB 7A                 5350 	bit	7, d
      001568 20 08                 5351 	jr	NZ, 00432$
      00156A BF                    5352 	cp	a, a
      00156B 18 05                 5353 	jr	00432$
      00156D                       5354 00431$:
      00156D CB 7A                 5355 	bit	7, d
      00156F 28 01                 5356 	jr	Z, 00432$
      001571 37                    5357 	scf
      001572                       5358 00432$:
      001572 30 3A                 5359 	jr	NC, 00131$
                                   5360 ;src/main.c:510: int8_t yMovement = enemies[i].yReserve >> 3;
      001574 F8 0E                 5361 	ldhl	sp,	#14
      001576 70                    5362 	ld	(hl), b
                                   5363 ;src/main.c:511: enemies[i].y += yMovement;
      001577 F8 04                 5364 	ldhl	sp,#4
      001579 2A                    5365 	ld	a, (hl+)
      00157A 5F                    5366 	ld	e, a
      00157B 56                    5367 	ld	d, (hl)
      00157C 1A                    5368 	ld	a, (de)
      00157D 4F                    5369 	ld	c, a
      00157E 13                    5370 	inc	de
      00157F 1A                    5371 	ld	a, (de)
      001580 47                    5372 	ld	b, a
      001581 F8 0E                 5373 	ldhl	sp,	#14
      001583 7E                    5374 	ld	a, (hl)
      001584 5F                    5375 	ld	e, a
      001585 07                    5376 	rlca
      001586 9F                    5377 	sbc	a, a
      001587 57                    5378 	ld	d, a
      001588 69                    5379 	ld	l, c
                                   5380 ;	spillPairReg hl
                                   5381 ;	spillPairReg hl
      001589 60                    5382 	ld	h, b
                                   5383 ;	spillPairReg hl
                                   5384 ;	spillPairReg hl
      00158A 19                    5385 	add	hl, de
      00158B 4D                    5386 	ld	c, l
      00158C 44                    5387 	ld	b, h
      00158D F8 04                 5388 	ldhl	sp,	#4
      00158F 2A                    5389 	ld	a,	(hl+)
      001590 66                    5390 	ld	h, (hl)
      001591 6F                    5391 	ld	l, a
      001592 79                    5392 	ld	a, c
      001593 22                    5393 	ld	(hl+), a
      001594 70                    5394 	ld	(hl), b
                                   5395 ;src/main.c:512: enemies[i].yReserve -=  yMovement << 3;
      001595 F8 0A                 5396 	ldhl	sp,#10
      001597 2A                    5397 	ld	a, (hl+)
      001598 5F                    5398 	ld	e, a
      001599 56                    5399 	ld	d, (hl)
      00159A 1A                    5400 	ld	a, (de)
      00159B F5                    5401 	push	af
      00159C F8 10                 5402 	ldhl	sp,	#16
      00159E 7E                    5403 	ld	a, (hl)
      00159F 87                    5404 	add	a, a
      0015A0 87                    5405 	add	a, a
      0015A1 87                    5406 	add	a, a
      0015A2 4F                    5407 	ld	c, a
      0015A3 F1                    5408 	pop	af
      0015A4 91                    5409 	sub	a, c
      0015A5 4F                    5410 	ld	c, a
      0015A6 F8 0A                 5411 	ldhl	sp,	#10
      0015A8 2A                    5412 	ld	a,	(hl+)
      0015A9 66                    5413 	ld	h, (hl)
      0015AA 6F                    5414 	ld	l, a
      0015AB 71                    5415 	ld	(hl), c
      0015AC 18 67                 5416 	jr	00133$
      0015AE                       5417 00131$:
                                   5418 ;src/main.c:514: else if ((-enemies[i].yReserve) >> 3 > 0){
      0015AE 79                    5419 	ld	a, c
      0015AF 07                    5420 	rlca
      0015B0 9F                    5421 	sbc	a, a
      0015B1 47                    5422 	ld	b, a
      0015B2 AF                    5423 	xor	a, a
      0015B3 91                    5424 	sub	a, c
      0015B4 4F                    5425 	ld	c, a
      0015B5 9F                    5426 	sbc	a, a
      0015B6 90                    5427 	sub	a, b
      0015B7 47                    5428 	ld	b, a
      0015B8 CB 28                 5429 	sra	b
      0015BA CB 19                 5430 	rr	c
      0015BC CB 28                 5431 	sra	b
      0015BE CB 19                 5432 	rr	c
      0015C0 CB 28                 5433 	sra	b
      0015C2 CB 19                 5434 	rr	c
      0015C4 58                    5435 	ld	e, b
      0015C5 AF                    5436 	xor	a, a
      0015C6 57                    5437 	ld	d, a
      0015C7 B9                    5438 	cp	a, c
      0015C8 98                    5439 	sbc	a, b
      0015C9 CB 7B                 5440 	bit	7, e
      0015CB 28 07                 5441 	jr	Z, 00433$
      0015CD CB 7A                 5442 	bit	7, d
      0015CF 20 08                 5443 	jr	NZ, 00434$
      0015D1 BF                    5444 	cp	a, a
      0015D2 18 05                 5445 	jr	00434$
      0015D4                       5446 00433$:
      0015D4 CB 7A                 5447 	bit	7, d
      0015D6 28 01                 5448 	jr	Z, 00434$
      0015D8 37                    5449 	scf
      0015D9                       5450 00434$:
      0015D9 30 3A                 5451 	jr	NC, 00133$
                                   5452 ;src/main.c:515: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0015DB AF                    5453 	xor	a, a
      0015DC 91                    5454 	sub	a, c
      0015DD 4F                    5455 	ld	c, a
      0015DE F8 0E                 5456 	ldhl	sp,	#14
      0015E0 71                    5457 	ld	(hl), c
                                   5458 ;src/main.c:516: enemies[i].y += yMovement;
      0015E1 F8 04                 5459 	ldhl	sp,#4
      0015E3 2A                    5460 	ld	a, (hl+)
      0015E4 5F                    5461 	ld	e, a
      0015E5 56                    5462 	ld	d, (hl)
      0015E6 1A                    5463 	ld	a, (de)
      0015E7 4F                    5464 	ld	c, a
      0015E8 13                    5465 	inc	de
      0015E9 1A                    5466 	ld	a, (de)
      0015EA 47                    5467 	ld	b, a
      0015EB F8 0E                 5468 	ldhl	sp,	#14
      0015ED 7E                    5469 	ld	a, (hl)
      0015EE 5F                    5470 	ld	e, a
      0015EF 07                    5471 	rlca
      0015F0 9F                    5472 	sbc	a, a
      0015F1 57                    5473 	ld	d, a
      0015F2 69                    5474 	ld	l, c
      0015F3 60                    5475 	ld	h, b
      0015F4 19                    5476 	add	hl, de
      0015F5 4D                    5477 	ld	c, l
      0015F6 44                    5478 	ld	b, h
      0015F7 F8 04                 5479 	ldhl	sp,	#4
      0015F9 2A                    5480 	ld	a,	(hl+)
      0015FA 66                    5481 	ld	h, (hl)
      0015FB 6F                    5482 	ld	l, a
      0015FC 79                    5483 	ld	a, c
      0015FD 22                    5484 	ld	(hl+), a
      0015FE 70                    5485 	ld	(hl), b
                                   5486 ;src/main.c:517: enemies[i].yReserve +=  (-yMovement) << 3;
      0015FF F8 0A                 5487 	ldhl	sp,#10
      001601 2A                    5488 	ld	a, (hl+)
      001602 5F                    5489 	ld	e, a
      001603 56                    5490 	ld	d, (hl)
      001604 1A                    5491 	ld	a, (de)
      001605 4F                    5492 	ld	c, a
      001606 AF                    5493 	xor	a, a
      001607 F8 0E                 5494 	ldhl	sp,	#14
      001609 96                    5495 	sub	a, (hl)
      00160A 87                    5496 	add	a, a
      00160B 87                    5497 	add	a, a
      00160C 87                    5498 	add	a, a
      00160D 81                    5499 	add	a, c
      00160E 4F                    5500 	ld	c, a
      00160F F8 0A                 5501 	ldhl	sp,	#10
      001611 2A                    5502 	ld	a,	(hl+)
      001612 66                    5503 	ld	h, (hl)
      001613 6F                    5504 	ld	l, a
      001614 71                    5505 	ld	(hl), c
      001615                       5506 00133$:
                                   5507 ;src/main.c:453: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001615 F8 0F                 5508 	ldhl	sp,	#15
      001617 34                    5509 	inc	(hl)
      001618 C3r6Fr11              5510 	jp	00196$
      00161B                       5511 00134$:
                                   5512 ;src/main.c:524: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00161B F8 0F                 5513 	ldhl	sp,	#15
      00161D 36 00                 5514 	ld	(hl), #0x00
      00161F                       5515 00198$:
      00161F 21r8Er0B              5516 	ld	hl, #_ENEMYCOUNT
      001622 4E                    5517 	ld	c, (hl)
      001623 F8 0F                 5518 	ldhl	sp,	#15
      001625 7E                    5519 	ld	a, (hl)
      001626 91                    5520 	sub	a, c
      001627 D2rC5r19              5521 	jp	NC, 00200$
                                   5522 ;src/main.c:526: if (enemies[i].alive) {
      00162A 4E                    5523 	ld	c, (hl)
      00162B 06 00                 5524 	ld	b, #0x00
      00162D 69                    5525 	ld	l, c
      00162E 60                    5526 	ld	h, b
      00162F 29                    5527 	add	hl, hl
      001630 29                    5528 	add	hl, hl
      001631 29                    5529 	add	hl, hl
      001632 09                    5530 	add	hl, bc
      001633 29                    5531 	add	hl, hl
                                   5532 ;src/main.c:542: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001634 01r5Ar00              5533 	ld	bc,#_enemies
      001637 09                    5534 	add	hl,bc
      001638 E5                    5535 	push	hl
      001639 7D                    5536 	ld	a, l
      00163A F8 03                 5537 	ldhl	sp,	#3
      00163C 77                    5538 	ld	(hl), a
      00163D E1                    5539 	pop	hl
      00163E 7C                    5540 	ld	a, h
      00163F F8 02                 5541 	ldhl	sp,	#2
                                   5542 ;src/main.c:526: if (enemies[i].alive) {
      001641 32                    5543 	ld	(hl-), a
      001642 2A                    5544 	ld	a, (hl+)
      001643 5F                    5545 	ld	e, a
      001644 56                    5546 	ld	d, (hl)
      001645 21 09 00              5547 	ld	hl, #0x0009
      001648 19                    5548 	add	hl, de
      001649 E5                    5549 	push	hl
      00164A 7D                    5550 	ld	a, l
      00164B F8 05                 5551 	ldhl	sp,	#5
      00164D 77                    5552 	ld	(hl), a
      00164E E1                    5553 	pop	hl
      00164F 7C                    5554 	ld	a, h
      001650 F8 04                 5555 	ldhl	sp,	#4
      001652 32                    5556 	ld	(hl-), a
      001653 2A                    5557 	ld	a, (hl+)
      001654 5F                    5558 	ld	e, a
      001655 56                    5559 	ld	d, (hl)
      001656 1A                    5560 	ld	a, (de)
      001657 F8 0E                 5561 	ldhl	sp,	#14
      001659 77                    5562 	ld	(hl), a
      00165A 7E                    5563 	ld	a, (hl)
      00165B B7                    5564 	or	a, a
      00165C CAr52r18              5565 	jp	Z, 00157$
                                   5566 ;src/main.c:527: if (enemies[i].visible == 1) {
      00165F F8 01                 5567 	ldhl	sp,#1
      001661 2A                    5568 	ld	a, (hl+)
      001662 5F                    5569 	ld	e, a
      001663 56                    5570 	ld	d, (hl)
      001664 21 0A 00              5571 	ld	hl, #0x000a
      001667 19                    5572 	add	hl, de
      001668 E5                    5573 	push	hl
      001669 7D                    5574 	ld	a, l
      00166A F8 07                 5575 	ldhl	sp,	#7
      00166C 77                    5576 	ld	(hl), a
      00166D E1                    5577 	pop	hl
      00166E 7C                    5578 	ld	a, h
      00166F F8 06                 5579 	ldhl	sp,	#6
      001671 32                    5580 	ld	(hl-), a
      001672 2A                    5581 	ld	a, (hl+)
      001673 5F                    5582 	ld	e, a
      001674 2A                    5583 	ld	a, (hl+)
      001675 57                    5584 	ld	d, a
      001676 1A                    5585 	ld	a, (de)
      001677 77                    5586 	ld	(hl), a
                                   5587 ;src/main.c:528: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001678 F8 01                 5588 	ldhl	sp,#1
      00167A 2A                    5589 	ld	a, (hl+)
      00167B 5F                    5590 	ld	e, a
      00167C 56                    5591 	ld	d, (hl)
      00167D 1A                    5592 	ld	a, (de)
      00167E F8 08                 5593 	ldhl	sp,	#8
      001680 22                    5594 	ld	(hl+), a
      001681 13                    5595 	inc	de
      001682 1A                    5596 	ld	a, (de)
      001683 77                    5597 	ld	(hl), a
      001684 F8 01                 5598 	ldhl	sp,	#1
      001686 2A                    5599 	ld	a, (hl+)
      001687 4F                    5600 	ld	c, a
      001688 46                    5601 	ld	b, (hl)
      001689 03                    5602 	inc	bc
      00168A 03                    5603 	inc	bc
                                   5604 ;src/main.c:530: set_sprite_tile(10+(i<<1), 0x7f);
      00168B F8 0F                 5605 	ldhl	sp,	#15
      00168D 5E                    5606 	ld	e, (hl)
                                   5607 ;src/main.c:528: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00168E F8 08                 5608 	ldhl	sp,	#8
      001690 2A                    5609 	ld	a, (hl+)
      001691 23                    5610 	inc	hl
      001692 32                    5611 	ld	(hl-), a
      001693 2A                    5612 	ld	a, (hl+)
      001694 23                    5613 	inc	hl
                                   5614 ;src/main.c:530: set_sprite_tile(10+(i<<1), 0x7f);
      001695 22                    5615 	ld	(hl+), a
      001696 7B                    5616 	ld	a, e
      001697 87                    5617 	add	a, a
                                   5618 ;src/main.c:528: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001698 32                    5619 	ld	(hl-), a
      001699 2A                    5620 	ld	a, (hl+)
      00169A 23                    5621 	inc	hl
      00169B 07                    5622 	rlca
      00169C E6 01                 5623 	and	a,#0x01
                                   5624 ;src/main.c:530: set_sprite_tile(10+(i<<1), 0x7f);
      00169E 32                    5625 	ld	(hl-), a
      00169F 2A                    5626 	ld	a, (hl+)
      0016A0 23                    5627 	inc	hl
      0016A1 C6 0A                 5628 	add	a, #0x0a
      0016A3 77                    5629 	ld	(hl), a
                                   5630 ;src/main.c:527: if (enemies[i].visible == 1) {
      0016A4 F8 07                 5631 	ldhl	sp,	#7
      0016A6 7E                    5632 	ld	a, (hl)
      0016A7 3D                    5633 	dec	a
      0016A8 20 74                 5634 	jr	NZ, 00154$
                                   5635 ;src/main.c:528: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0016AA F8 0D                 5636 	ldhl	sp,	#13
      0016AC 7E                    5637 	ld	a, (hl)
      0016AD B7                    5638 	or	a, a
      0016AE 20 43                 5639 	jr	NZ, 00135$
      0016B0 F8 0A                 5640 	ldhl	sp,	#10
      0016B2 3E AC                 5641 	ld	a, #0xac
      0016B4 96                    5642 	sub	a, (hl)
      0016B5 23                    5643 	inc	hl
      0016B6 3E 00                 5644 	ld	a, #0x00
      0016B8 9E                    5645 	sbc	a, (hl)
      0016B9 3E 00                 5646 	ld	a, #0x00
      0016BB 57                    5647 	ld	d, a
      0016BC CB 7E                 5648 	bit	7, (hl)
      0016BE 28 07                 5649 	jr	Z, 00437$
      0016C0 CB 7A                 5650 	bit	7, d
      0016C2 20 08                 5651 	jr	NZ, 00438$
      0016C4 BF                    5652 	cp	a, a
      0016C5 18 05                 5653 	jr	00438$
      0016C7                       5654 00437$:
      0016C7 CB 7A                 5655 	bit	7, d
      0016C9 28 01                 5656 	jr	Z, 00438$
      0016CB 37                    5657 	scf
      0016CC                       5658 00438$:
      0016CC 38 25                 5659 	jr	C, 00135$
      0016CE 69                    5660 	ld	l, c
      0016CF 60                    5661 	ld	h, b
      0016D0 2A                    5662 	ld	a, (hl+)
      0016D1 4F                    5663 	ld	c, a
      0016D2 46                    5664 	ld	b, (hl)
      0016D3 CB 78                 5665 	bit	7, b
      0016D5 20 1C                 5666 	jr	NZ, 00135$
      0016D7 58                    5667 	ld	e, b
      0016D8 16 00                 5668 	ld	d, #0x00
      0016DA 3E 98                 5669 	ld	a, #0x98
      0016DC B9                    5670 	cp	a, c
      0016DD 3E 00                 5671 	ld	a, #0x00
      0016DF 98                    5672 	sbc	a, b
      0016E0 CB 7B                 5673 	bit	7, e
      0016E2 28 07                 5674 	jr	Z, 00439$
      0016E4 CB 7A                 5675 	bit	7, d
      0016E6 20 08                 5676 	jr	NZ, 00440$
      0016E8 BF                    5677 	cp	a, a
      0016E9 18 05                 5678 	jr	00440$
      0016EB                       5679 00439$:
      0016EB CB 7A                 5680 	bit	7, d
      0016ED 28 01                 5681 	jr	Z, 00440$
      0016EF 37                    5682 	scf
      0016F0                       5683 00440$:
      0016F0 D2r52r18              5684 	jp	NC, 00157$
      0016F3                       5685 00135$:
                                   5686 ;src/main.c:529: enemies[i].visible = 0;
      0016F3 F8 05                 5687 	ldhl	sp,	#5
      0016F5 2A                    5688 	ld	a,	(hl+)
      0016F6 66                    5689 	ld	h, (hl)
      0016F7 6F                    5690 	ld	l, a
      0016F8 36 00                 5691 	ld	(hl), #0x00
                                   5692 ;src/main.c:530: set_sprite_tile(10+(i<<1), 0x7f);
      0016FA F8 0E                 5693 	ldhl	sp,	#14
                                   5694 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0016FC 6E                    5695 	ld	l, (hl)
      0016FD 01r00r00              5696 	ld	bc, #_shadow_OAM+0
                                   5697 ;	spillPairReg hl
                                   5698 ;	spillPairReg hl
      001700 26 00                 5699 	ld	h, #0x00
                                   5700 ;	spillPairReg hl
                                   5701 ;	spillPairReg hl
      001702 29                    5702 	add	hl, hl
      001703 29                    5703 	add	hl, hl
      001704 09                    5704 	add	hl, bc
      001705 23                    5705 	inc	hl
      001706 23                    5706 	inc	hl
      001707 36 7F                 5707 	ld	(hl), #0x7f
                                   5708 ;src/main.c:531: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001709 F8 0C                 5709 	ldhl	sp,	#12
      00170B 7E                    5710 	ld	a, (hl)
      00170C C6 0B                 5711 	add	a, #0x0b
                                   5712 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00170E 6F                    5713 	ld	l, a
      00170F 01r00r00              5714 	ld	bc, #_shadow_OAM+0
                                   5715 ;	spillPairReg hl
                                   5716 ;	spillPairReg hl
      001712 26 00                 5717 	ld	h, #0x00
                                   5718 ;	spillPairReg hl
                                   5719 ;	spillPairReg hl
      001714 29                    5720 	add	hl, hl
      001715 29                    5721 	add	hl, hl
      001716 09                    5722 	add	hl, bc
      001717 23                    5723 	inc	hl
      001718 23                    5724 	inc	hl
      001719 36 7F                 5725 	ld	(hl), #0x7f
                                   5726 ;src/main.c:531: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00171B C3r52r18              5727 	jp	00157$
      00171E                       5728 00154$:
                                   5729 ;src/main.c:535: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      00171E F8 0D                 5730 	ldhl	sp,	#13
      001720 CB 46                 5731 	bit	0, (hl)
      001722 C2rBDr17              5732 	jp	NZ, 00148$
      001725 F8 0A                 5733 	ldhl	sp,	#10
      001727 2A                    5734 	ld	a, (hl+)
      001728 D6 AC                 5735 	sub	a, #0xac
      00172A 7E                    5736 	ld	a, (hl)
      00172B DE 00                 5737 	sbc	a, #0x00
      00172D 56                    5738 	ld	d, (hl)
      00172E 3E 00                 5739 	ld	a, #0x00
      001730 CB 7F                 5740 	bit	7,a
      001732 28 07                 5741 	jr	Z, 00441$
      001734 CB 7A                 5742 	bit	7, d
      001736 20 08                 5743 	jr	NZ, 00442$
      001738 BF                    5744 	cp	a, a
      001739 18 05                 5745 	jr	00442$
      00173B                       5746 00441$:
      00173B CB 7A                 5747 	bit	7, d
      00173D 28 01                 5748 	jr	Z, 00442$
      00173F 37                    5749 	scf
      001740                       5750 00442$:
      001740 30 7B                 5751 	jr	NC, 00148$
      001742 69                    5752 	ld	l, c
      001743 60                    5753 	ld	h, b
      001744 2A                    5754 	ld	a,	(hl+)
      001745 66                    5755 	ld	h, (hl)
                                   5756 ;	spillPairReg hl
      001746 6F                    5757 	ld	l, a
                                   5758 ;	spillPairReg hl
                                   5759 ;	spillPairReg hl
      001747 5C                    5760 	ld	e, h
      001748 AF                    5761 	xor	a, a
      001749 57                    5762 	ld	d, a
      00174A BD                    5763 	cp	a, l
      00174B 9C                    5764 	sbc	a, h
      00174C CB 7B                 5765 	bit	7, e
      00174E 28 07                 5766 	jr	Z, 00443$
      001750 CB 7A                 5767 	bit	7, d
      001752 20 08                 5768 	jr	NZ, 00444$
      001754 BF                    5769 	cp	a, a
      001755 18 05                 5770 	jr	00444$
      001757                       5771 00443$:
      001757 CB 7A                 5772 	bit	7, d
      001759 28 01                 5773 	jr	Z, 00444$
      00175B 37                    5774 	scf
      00175C                       5775 00444$:
      00175C 30 5F                 5776 	jr	NC, 00148$
      00175E 7D                    5777 	ld	a, l
      00175F D6 98                 5778 	sub	a, #0x98
      001761 7C                    5779 	ld	a, h
      001762 17                    5780 	rla
      001763 3F                    5781 	ccf
      001764 1F                    5782 	rra
      001765 DE 80                 5783 	sbc	a, #0x80
      001767 30 54                 5784 	jr	NC, 00148$
                                   5785 ;src/main.c:536: enemies[i].visible = 1;
      001769 F8 05                 5786 	ldhl	sp,	#5
      00176B 2A                    5787 	ld	a,	(hl+)
      00176C 66                    5788 	ld	h, (hl)
      00176D 6F                    5789 	ld	l, a
      00176E 36 01                 5790 	ld	(hl), #0x01
                                   5791 ;src/main.c:537: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      001770 F8 01                 5792 	ldhl	sp,#1
      001772 2A                    5793 	ld	a, (hl+)
      001773 5F                    5794 	ld	e, a
      001774 56                    5795 	ld	d, (hl)
      001775 21 06 00              5796 	ld	hl, #0x0006
      001778 19                    5797 	add	hl, de
      001779 4D                    5798 	ld	c, l
      00177A 44                    5799 	ld	b, h
      00177B 0A                    5800 	ld	a, (bc)
      00177C 4F                    5801 	ld	c, a
      00177D F8 0E                 5802 	ldhl	sp,	#14
                                   5803 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00177F 6E                    5804 	ld	l, (hl)
                                   5805 ;	spillPairReg hl
                                   5806 ;	spillPairReg hl
      001780 26 00                 5807 	ld	h, #0x00
                                   5808 ;	spillPairReg hl
                                   5809 ;	spillPairReg hl
      001782 29                    5810 	add	hl, hl
      001783 29                    5811 	add	hl, hl
      001784 11r00r00              5812 	ld	de, #_shadow_OAM
      001787 19                    5813 	add	hl, de
      001788 23                    5814 	inc	hl
      001789 23                    5815 	inc	hl
      00178A 71                    5816 	ld	(hl), c
                                   5817 ;src/main.c:538: if (enemies[i].spriteCount == 2) {
      00178B F8 01                 5818 	ldhl	sp,#1
      00178D 2A                    5819 	ld	a, (hl+)
      00178E 5F                    5820 	ld	e, a
      00178F 56                    5821 	ld	d, (hl)
      001790 21 08 00              5822 	ld	hl, #0x0008
      001793 19                    5823 	add	hl, de
      001794 4D                    5824 	ld	c, l
      001795 44                    5825 	ld	b, h
      001796 0A                    5826 	ld	a, (bc)
      001797 D6 02                 5827 	sub	a, #0x02
      001799 C2r52r18              5828 	jp	NZ,00157$
                                   5829 ;src/main.c:539: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      00179C F8 01                 5830 	ldhl	sp,#1
      00179E 2A                    5831 	ld	a, (hl+)
      00179F 5F                    5832 	ld	e, a
      0017A0 56                    5833 	ld	d, (hl)
      0017A1 21 07 00              5834 	ld	hl, #0x0007
      0017A4 19                    5835 	add	hl, de
      0017A5 4D                    5836 	ld	c, l
      0017A6 44                    5837 	ld	b, h
      0017A7 0A                    5838 	ld	a, (bc)
      0017A8 4F                    5839 	ld	c, a
      0017A9 F8 0C                 5840 	ldhl	sp,	#12
      0017AB 7E                    5841 	ld	a, (hl)
      0017AC C6 0B                 5842 	add	a, #0x0b
                                   5843 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0017AE 6F                    5844 	ld	l, a
                                   5845 ;	spillPairReg hl
                                   5846 ;	spillPairReg hl
      0017AF 26 00                 5847 	ld	h, #0x00
                                   5848 ;	spillPairReg hl
                                   5849 ;	spillPairReg hl
      0017B1 29                    5850 	add	hl, hl
      0017B2 29                    5851 	add	hl, hl
      0017B3 11r00r00              5852 	ld	de, #_shadow_OAM
      0017B6 19                    5853 	add	hl, de
      0017B7 23                    5854 	inc	hl
      0017B8 23                    5855 	inc	hl
      0017B9 71                    5856 	ld	(hl), c
                                   5857 ;src/main.c:539: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0017BA C3r52r18              5858 	jp	00157$
      0017BD                       5859 00148$:
                                   5860 ;src/main.c:542: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      0017BD F8 08                 5861 	ldhl	sp,	#8
      0017BF 2A                    5862 	ld	a, (hl+)
      0017C0 D6 9C                 5863 	sub	a, #0x9c
      0017C2 7E                    5864 	ld	a, (hl)
      0017C3 DE FF                 5865 	sbc	a, #0xff
      0017C5 56                    5866 	ld	d, (hl)
      0017C6 3E FF                 5867 	ld	a, #0xff
      0017C8 CB 7F                 5868 	bit	7,a
      0017CA 28 07                 5869 	jr	Z, 00447$
      0017CC CB 7A                 5870 	bit	7, d
      0017CE 20 08                 5871 	jr	NZ, 00448$
      0017D0 BF                    5872 	cp	a, a
      0017D1 18 05                 5873 	jr	00448$
      0017D3                       5874 00447$:
      0017D3 CB 7A                 5875 	bit	7, d
      0017D5 28 01                 5876 	jr	Z, 00448$
      0017D7 37                    5877 	scf
      0017D8                       5878 00448$:
      0017D8 38 49                 5879 	jr	C, 00142$
      0017DA F8 0A                 5880 	ldhl	sp,	#10
      0017DC 3E 10                 5881 	ld	a, #0x10
      0017DE 96                    5882 	sub	a, (hl)
      0017DF 23                    5883 	inc	hl
      0017E0 3E 01                 5884 	ld	a, #0x01
      0017E2 9E                    5885 	sbc	a, (hl)
      0017E3 3E 01                 5886 	ld	a, #0x01
      0017E5 57                    5887 	ld	d, a
      0017E6 CB 7E                 5888 	bit	7, (hl)
      0017E8 28 07                 5889 	jr	Z, 00449$
      0017EA CB 7A                 5890 	bit	7, d
      0017EC 20 08                 5891 	jr	NZ, 00450$
      0017EE BF                    5892 	cp	a, a
      0017EF 18 05                 5893 	jr	00450$
      0017F1                       5894 00449$:
      0017F1 CB 7A                 5895 	bit	7, d
      0017F3 28 01                 5896 	jr	Z, 00450$
      0017F5 37                    5897 	scf
      0017F6                       5898 00450$:
      0017F6 38 2B                 5899 	jr	C, 00142$
      0017F8 69                    5900 	ld	l, c
      0017F9 60                    5901 	ld	h, b
      0017FA 2A                    5902 	ld	a, (hl+)
      0017FB 4F                    5903 	ld	c, a
      0017FC 46                    5904 	ld	b, (hl)
      0017FD 79                    5905 	ld	a, c
      0017FE D6 9C                 5906 	sub	a, #0x9c
      001800 78                    5907 	ld	a, b
      001801 17                    5908 	rla
      001802 3F                    5909 	ccf
      001803 1F                    5910 	rra
      001804 DE 7F                 5911 	sbc	a, #0x7f
      001806 38 1B                 5912 	jr	C, 00142$
      001808 58                    5913 	ld	e, b
      001809 16 00                 5914 	ld	d, #0x00
      00180B 3E FC                 5915 	ld	a, #0xfc
      00180D B9                    5916 	cp	a, c
      00180E 3E 00                 5917 	ld	a, #0x00
      001810 98                    5918 	sbc	a, b
      001811 CB 7B                 5919 	bit	7, e
      001813 28 07                 5920 	jr	Z, 00451$
      001815 CB 7A                 5921 	bit	7, d
      001817 20 08                 5922 	jr	NZ, 00452$
      001819 BF                    5923 	cp	a, a
      00181A 18 05                 5924 	jr	00452$
      00181C                       5925 00451$:
      00181C CB 7A                 5926 	bit	7, d
      00181E 28 01                 5927 	jr	Z, 00452$
      001820 37                    5928 	scf
      001821                       5929 00452$:
      001821 30 2F                 5930 	jr	NC, 00157$
      001823                       5931 00142$:
                                   5932 ;src/main.c:543: enemies[i].alive = 0;
      001823 F8 03                 5933 	ldhl	sp,	#3
      001825 2A                    5934 	ld	a,	(hl+)
      001826 66                    5935 	ld	h, (hl)
      001827 6F                    5936 	ld	l, a
      001828 36 00                 5937 	ld	(hl), #0x00
                                   5938 ;src/main.c:544: set_sprite_tile(10+(i<<1), 0x7f);
      00182A F8 0E                 5939 	ldhl	sp,	#14
                                   5940 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00182C 6E                    5941 	ld	l, (hl)
      00182D 01r00r00              5942 	ld	bc, #_shadow_OAM+0
                                   5943 ;	spillPairReg hl
                                   5944 ;	spillPairReg hl
      001830 26 00                 5945 	ld	h, #0x00
                                   5946 ;	spillPairReg hl
                                   5947 ;	spillPairReg hl
      001832 29                    5948 	add	hl, hl
      001833 29                    5949 	add	hl, hl
      001834 09                    5950 	add	hl, bc
      001835 23                    5951 	inc	hl
      001836 23                    5952 	inc	hl
      001837 36 7F                 5953 	ld	(hl), #0x7f
                                   5954 ;src/main.c:545: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001839 F8 0C                 5955 	ldhl	sp,	#12
      00183B 7E                    5956 	ld	a, (hl)
      00183C C6 0B                 5957 	add	a, #0x0b
                                   5958 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00183E 6F                    5959 	ld	l, a
      00183F 01r00r00              5960 	ld	bc, #_shadow_OAM+0
                                   5961 ;	spillPairReg hl
                                   5962 ;	spillPairReg hl
      001842 26 00                 5963 	ld	h, #0x00
                                   5964 ;	spillPairReg hl
                                   5965 ;	spillPairReg hl
      001844 29                    5966 	add	hl, hl
      001845 29                    5967 	add	hl, hl
      001846 09                    5968 	add	hl, bc
      001847 23                    5969 	inc	hl
      001848 23                    5970 	inc	hl
      001849 36 7F                 5971 	ld	(hl), #0x7f
                                   5972 ;src/main.c:546: initEnemies(0);
      00184B AF                    5973 	xor	a, a
      00184C F5                    5974 	push	af
      00184D 33                    5975 	inc	sp
      00184E CDrFEr0F              5976 	call	_initEnemies
      001851 33                    5977 	inc	sp
      001852                       5978 00157$:
                                   5979 ;src/main.c:550: if (enemies[i].spriteCount == 1) {
      001852 F8 0F                 5980 	ldhl	sp,	#15
      001854 4E                    5981 	ld	c, (hl)
      001855 06 00                 5982 	ld	b, #0x00
      001857 69                    5983 	ld	l, c
      001858 60                    5984 	ld	h, b
      001859 29                    5985 	add	hl, hl
      00185A 29                    5986 	add	hl, hl
      00185B 29                    5987 	add	hl, hl
      00185C 09                    5988 	add	hl, bc
      00185D 29                    5989 	add	hl, hl
      00185E 01r5Ar00              5990 	ld	bc,#_enemies
      001861 09                    5991 	add	hl,bc
      001862 4D                    5992 	ld	c, l
      001863 44                    5993 	ld	b, h
      001864 21 08 00              5994 	ld	hl, #0x0008
      001867 09                    5995 	add	hl, bc
      001868 5E                    5996 	ld	e, (hl)
                                   5997 ;src/main.c:530: set_sprite_tile(10+(i<<1), 0x7f);
      001869 F8 0F                 5998 	ldhl	sp,	#15
      00186B 3A                    5999 	ld	a, (hl-)
      00186C 87                    6000 	add	a, a
      00186D 77                    6001 	ld	(hl), a
      00186E 7E                    6002 	ld	a, (hl)
      00186F C6 0A                 6003 	add	a, #0x0a
      001871 F8 0A                 6004 	ldhl	sp,	#10
      001873 77                    6005 	ld	(hl), a
                                   6006 ;src/main.c:550: if (enemies[i].spriteCount == 1) {
      001874 1D                    6007 	dec	e
      001875 20 52                 6008 	jr	NZ, 00165$
                                   6009 ;src/main.c:551: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001877 59                    6010 	ld	e, c
      001878 50                    6011 	ld	d, b
      001879 13                    6012 	inc	de
      00187A 13                    6013 	inc	de
      00187B 1A                    6014 	ld	a, (de)
      00187C C6 0C                 6015 	add	a, #0x0c
      00187E 5F                    6016 	ld	e, a
      00187F 0A                    6017 	ld	a, (bc)
      001880 C6 04                 6018 	add	a, #0x04
      001882 F8 0E                 6019 	ldhl	sp,	#14
      001884 77                    6020 	ld	(hl), a
      001885 F8 0A                 6021 	ldhl	sp,	#10
      001887 56                    6022 	ld	d, (hl)
                                   6023 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001888 6A                    6024 	ld	l, d
                                   6025 ;	spillPairReg hl
                                   6026 ;	spillPairReg hl
      001889 26 00                 6027 	ld	h, #0x00
                                   6028 ;	spillPairReg hl
                                   6029 ;	spillPairReg hl
      00188B 29                    6030 	add	hl, hl
      00188C 29                    6031 	add	hl, hl
      00188D D5                    6032 	push	de
      00188E 11r00r00              6033 	ld	de, #_shadow_OAM
      001891 19                    6034 	add	hl, de
      001892 D1                    6035 	pop	de
                                   6036 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001893 7B                    6037 	ld	a, e
      001894 22                    6038 	ld	(hl+), a
      001895 5D                    6039 	ld	e, l
      001896 54                    6040 	ld	d, h
      001897 F8 0E                 6041 	ldhl	sp,	#14
      001899 7E                    6042 	ld	a, (hl)
      00189A 12                    6043 	ld	(de), a
                                   6044 ;src/main.c:552: if (enemies[i].xSpeed >= 0) {
      00189B 21 0E 00              6045 	ld	hl, #0x000e
      00189E 09                    6046 	add	hl, bc
      00189F CB 7E                 6047 	bit	7, (hl)
      0018A1 20 13                 6048 	jr	NZ, 00159$
                                   6049 ;src/main.c:553: set_sprite_prop(10+(i<<1), 0);
      0018A3 F8 0A                 6050 	ldhl	sp,	#10
                                   6051 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018A5 6E                    6052 	ld	l, (hl)
      0018A6 01r00r00              6053 	ld	bc, #_shadow_OAM+0
                                   6054 ;	spillPairReg hl
                                   6055 ;	spillPairReg hl
      0018A9 26 00                 6056 	ld	h, #0x00
                                   6057 ;	spillPairReg hl
                                   6058 ;	spillPairReg hl
      0018AB 29                    6059 	add	hl, hl
      0018AC 29                    6060 	add	hl, hl
      0018AD 09                    6061 	add	hl, bc
      0018AE 23                    6062 	inc	hl
      0018AF 23                    6063 	inc	hl
      0018B0 23                    6064 	inc	hl
      0018B1 36 00                 6065 	ld	(hl), #0x00
                                   6066 ;src/main.c:553: set_sprite_prop(10+(i<<1), 0);
      0018B3 C3rBFr19              6067 	jp	00199$
      0018B6                       6068 00159$:
                                   6069 ;src/main.c:556: set_sprite_prop(10+(i<<1), S_FLIPX);
      0018B6 F8 0A                 6070 	ldhl	sp,	#10
                                   6071 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018B8 6E                    6072 	ld	l, (hl)
      0018B9 01r00r00              6073 	ld	bc, #_shadow_OAM+0
                                   6074 ;	spillPairReg hl
                                   6075 ;	spillPairReg hl
      0018BC 26 00                 6076 	ld	h, #0x00
                                   6077 ;	spillPairReg hl
                                   6078 ;	spillPairReg hl
      0018BE 29                    6079 	add	hl, hl
      0018BF 29                    6080 	add	hl, hl
      0018C0 09                    6081 	add	hl, bc
      0018C1 23                    6082 	inc	hl
      0018C2 23                    6083 	inc	hl
      0018C3 23                    6084 	inc	hl
      0018C4 36 20                 6085 	ld	(hl), #0x20
                                   6086 ;src/main.c:556: set_sprite_prop(10+(i<<1), S_FLIPX);
      0018C6 C3rBFr19              6087 	jp	00199$
      0018C9                       6088 00165$:
                                   6089 ;src/main.c:561: if (enemies[i].xSpeed >= 0) {
      0018C9 21 0E 00              6090 	ld	hl, #0x000e
      0018CC 09                    6091 	add	hl, bc
      0018CD E5                    6092 	push	hl
      0018CE 7D                    6093 	ld	a, l
      0018CF F8 0E                 6094 	ldhl	sp,	#14
      0018D1 77                    6095 	ld	(hl), a
      0018D2 E1                    6096 	pop	hl
      0018D3 7C                    6097 	ld	a, h
      0018D4 F8 0D                 6098 	ldhl	sp,	#13
      0018D6 32                    6099 	ld	(hl-), a
      0018D7 2A                    6100 	ld	a, (hl+)
      0018D8 5F                    6101 	ld	e, a
      0018D9 56                    6102 	ld	d, (hl)
      0018DA 1A                    6103 	ld	a, (de)
                                   6104 ;	spillPairReg hl
                                   6105 ;	spillPairReg hl
      0018DB CB 7F                 6106 	bit	7,a
      0018DD 20 70                 6107 	jr	NZ, 00162$
                                   6108 ;src/main.c:562: set_sprite_prop(10+(i<<1), 0);
      0018DF F8 0A                 6109 	ldhl	sp,	#10
                                   6110 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018E1 6E                    6111 	ld	l, (hl)
                                   6112 ;	spillPairReg hl
                                   6113 ;	spillPairReg hl
      0018E2 26 00                 6114 	ld	h, #0x00
                                   6115 ;	spillPairReg hl
                                   6116 ;	spillPairReg hl
      0018E4 29                    6117 	add	hl, hl
      0018E5 29                    6118 	add	hl, hl
      0018E6 11r00r00              6119 	ld	de, #_shadow_OAM
      0018E9 19                    6120 	add	hl, de
      0018EA 23                    6121 	inc	hl
      0018EB 23                    6122 	inc	hl
      0018EC 23                    6123 	inc	hl
      0018ED 36 00                 6124 	ld	(hl), #0x00
                                   6125 ;src/main.c:563: set_sprite_prop(10+(i<<1)+1, 0);
      0018EF F8 0E                 6126 	ldhl	sp,	#14
      0018F1 7E                    6127 	ld	a, (hl)
      0018F2 C6 0B                 6128 	add	a, #0x0b
      0018F4 F8 0B                 6129 	ldhl	sp,	#11
      0018F6 77                    6130 	ld	(hl), a
                                   6131 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018F7 6E                    6132 	ld	l, (hl)
                                   6133 ;	spillPairReg hl
                                   6134 ;	spillPairReg hl
      0018F8 26 00                 6135 	ld	h, #0x00
                                   6136 ;	spillPairReg hl
                                   6137 ;	spillPairReg hl
      0018FA 29                    6138 	add	hl, hl
      0018FB 29                    6139 	add	hl, hl
      0018FC 11r00r00              6140 	ld	de, #_shadow_OAM
      0018FF 19                    6141 	add	hl, de
      001900 23                    6142 	inc	hl
      001901 23                    6143 	inc	hl
      001902 23                    6144 	inc	hl
      001903 36 00                 6145 	ld	(hl), #0x00
                                   6146 ;src/main.c:564: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      001905 21 02 00              6147 	ld	hl, #0x0002
      001908 09                    6148 	add	hl, bc
      001909 E5                    6149 	push	hl
      00190A 7D                    6150 	ld	a, l
      00190B F8 0E                 6151 	ldhl	sp,	#14
      00190D 77                    6152 	ld	(hl), a
      00190E E1                    6153 	pop	hl
      00190F 7C                    6154 	ld	a, h
      001910 F8 0D                 6155 	ldhl	sp,	#13
      001912 32                    6156 	ld	(hl-), a
      001913 2A                    6157 	ld	a, (hl+)
      001914 5F                    6158 	ld	e, a
      001915 2A                    6159 	ld	a, (hl+)
      001916 57                    6160 	ld	d, a
      001917 1A                    6161 	ld	a, (de)
      001918 C6 08                 6162 	add	a, #0x08
      00191A 5F                    6163 	ld	e, a
      00191B 0A                    6164 	ld	a, (bc)
      00191C 77                    6165 	ld	(hl), a
      00191D F8 0A                 6166 	ldhl	sp,	#10
      00191F 56                    6167 	ld	d, (hl)
                                   6168 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001920 6A                    6169 	ld	l, d
                                   6170 ;	spillPairReg hl
                                   6171 ;	spillPairReg hl
      001921 26 00                 6172 	ld	h, #0x00
                                   6173 ;	spillPairReg hl
                                   6174 ;	spillPairReg hl
      001923 29                    6175 	add	hl, hl
      001924 29                    6176 	add	hl, hl
      001925 D5                    6177 	push	de
      001926 11r00r00              6178 	ld	de, #_shadow_OAM
      001929 19                    6179 	add	hl, de
      00192A D1                    6180 	pop	de
                                   6181 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00192B 7B                    6182 	ld	a, e
      00192C 22                    6183 	ld	(hl+), a
      00192D 5D                    6184 	ld	e, l
      00192E 54                    6185 	ld	d, h
      00192F F8 0E                 6186 	ldhl	sp,	#14
                                   6187 ;src/main.c:565: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001931 3A                    6188 	ld	a, (hl-)
      001932 2B                    6189 	dec	hl
      001933 12                    6190 	ld	(de), a
      001934 2A                    6191 	ld	a, (hl+)
      001935 5F                    6192 	ld	e, a
      001936 3A                    6193 	ld	a, (hl-)
      001937 2B                    6194 	dec	hl
      001938 57                    6195 	ld	d, a
      001939 1A                    6196 	ld	a, (de)
      00193A C6 08                 6197 	add	a, #0x08
      00193C 57                    6198 	ld	d, a
      00193D 0A                    6199 	ld	a, (bc)
      00193E C6 08                 6200 	add	a, #0x08
      001940 5F                    6201 	ld	e, a
                                   6202 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001941 6E                    6203 	ld	l, (hl)
                                   6204 ;	spillPairReg hl
                                   6205 ;	spillPairReg hl
      001942 26 00                 6206 	ld	h, #0x00
                                   6207 ;	spillPairReg hl
                                   6208 ;	spillPairReg hl
      001944 29                    6209 	add	hl, hl
      001945 29                    6210 	add	hl, hl
      001946 01r00r00              6211 	ld	bc, #_shadow_OAM
      001949 09                    6212 	add	hl, bc
                                   6213 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00194A 7A                    6214 	ld	a, d
      00194B 22                    6215 	ld	(hl+), a
      00194C 73                    6216 	ld	(hl), e
                                   6217 ;src/main.c:565: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      00194D 18 70                 6218 	jr	00199$
      00194F                       6219 00162$:
                                   6220 ;src/main.c:568: set_sprite_prop(10+(i<<1), S_FLIPX);
      00194F F8 0A                 6221 	ldhl	sp,	#10
      001951 5E                    6222 	ld	e, (hl)
                                   6223 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001952 26 00                 6224 	ld	h, #0x00
                                   6225 ;	spillPairReg hl
                                   6226 ;	spillPairReg hl
      001954 6B                    6227 	ld	l, e
      001955 29                    6228 	add	hl, hl
      001956 29                    6229 	add	hl, hl
      001957 11r00r00              6230 	ld	de, #_shadow_OAM
      00195A 19                    6231 	add	hl, de
      00195B 23                    6232 	inc	hl
      00195C 23                    6233 	inc	hl
      00195D 23                    6234 	inc	hl
      00195E 36 20                 6235 	ld	(hl), #0x20
                                   6236 ;src/main.c:569: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001960 F8 0E                 6237 	ldhl	sp,	#14
      001962 7E                    6238 	ld	a, (hl)
      001963 C6 0B                 6239 	add	a, #0x0b
      001965 F8 0B                 6240 	ldhl	sp,	#11
      001967 77                    6241 	ld	(hl), a
      001968 5E                    6242 	ld	e, (hl)
                                   6243 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001969 26 00                 6244 	ld	h, #0x00
                                   6245 ;	spillPairReg hl
                                   6246 ;	spillPairReg hl
      00196B 6B                    6247 	ld	l, e
      00196C 29                    6248 	add	hl, hl
      00196D 29                    6249 	add	hl, hl
      00196E 11r00r00              6250 	ld	de, #_shadow_OAM
      001971 19                    6251 	add	hl, de
      001972 23                    6252 	inc	hl
      001973 23                    6253 	inc	hl
      001974 23                    6254 	inc	hl
      001975 36 20                 6255 	ld	(hl), #0x20
                                   6256 ;src/main.c:570: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      001977 21 02 00              6257 	ld	hl, #0x0002
      00197A 09                    6258 	add	hl, bc
      00197B E5                    6259 	push	hl
      00197C 7D                    6260 	ld	a, l
      00197D F8 0E                 6261 	ldhl	sp,	#14
      00197F 77                    6262 	ld	(hl), a
      001980 E1                    6263 	pop	hl
      001981 7C                    6264 	ld	a, h
      001982 F8 0D                 6265 	ldhl	sp,	#13
      001984 32                    6266 	ld	(hl-), a
      001985 2A                    6267 	ld	a, (hl+)
      001986 5F                    6268 	ld	e, a
      001987 2A                    6269 	ld	a, (hl+)
      001988 57                    6270 	ld	d, a
      001989 1A                    6271 	ld	a, (de)
      00198A C6 08                 6272 	add	a, #0x08
      00198C 5F                    6273 	ld	e, a
      00198D 0A                    6274 	ld	a, (bc)
      00198E C6 08                 6275 	add	a, #0x08
      001990 77                    6276 	ld	(hl), a
      001991 F8 0A                 6277 	ldhl	sp,	#10
      001993 56                    6278 	ld	d, (hl)
                                   6279 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001994 6A                    6280 	ld	l, d
                                   6281 ;	spillPairReg hl
                                   6282 ;	spillPairReg hl
      001995 26 00                 6283 	ld	h, #0x00
                                   6284 ;	spillPairReg hl
                                   6285 ;	spillPairReg hl
      001997 29                    6286 	add	hl, hl
      001998 29                    6287 	add	hl, hl
      001999 D5                    6288 	push	de
      00199A 11r00r00              6289 	ld	de, #_shadow_OAM
      00199D 19                    6290 	add	hl, de
      00199E D1                    6291 	pop	de
                                   6292 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00199F 7B                    6293 	ld	a, e
      0019A0 22                    6294 	ld	(hl+), a
      0019A1 5D                    6295 	ld	e, l
      0019A2 54                    6296 	ld	d, h
      0019A3 F8 0E                 6297 	ldhl	sp,	#14
                                   6298 ;src/main.c:571: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0019A5 3A                    6299 	ld	a, (hl-)
      0019A6 2B                    6300 	dec	hl
      0019A7 12                    6301 	ld	(de), a
      0019A8 2A                    6302 	ld	a, (hl+)
      0019A9 5F                    6303 	ld	e, a
      0019AA 3A                    6304 	ld	a, (hl-)
      0019AB 2B                    6305 	dec	hl
      0019AC 57                    6306 	ld	d, a
      0019AD 1A                    6307 	ld	a, (de)
      0019AE C6 08                 6308 	add	a, #0x08
      0019B0 57                    6309 	ld	d, a
      0019B1 0A                    6310 	ld	a, (bc)
      0019B2 5F                    6311 	ld	e, a
                                   6312 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0019B3 6E                    6313 	ld	l, (hl)
                                   6314 ;	spillPairReg hl
                                   6315 ;	spillPairReg hl
      0019B4 26 00                 6316 	ld	h, #0x00
                                   6317 ;	spillPairReg hl
                                   6318 ;	spillPairReg hl
      0019B6 29                    6319 	add	hl, hl
      0019B7 29                    6320 	add	hl, hl
      0019B8 01r00r00              6321 	ld	bc, #_shadow_OAM
      0019BB 09                    6322 	add	hl, bc
                                   6323 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0019BC 7A                    6324 	ld	a, d
      0019BD 22                    6325 	ld	(hl+), a
      0019BE 73                    6326 	ld	(hl), e
                                   6327 ;src/main.c:571: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0019BF                       6328 00199$:
                                   6329 ;src/main.c:524: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0019BF F8 0F                 6330 	ldhl	sp,	#15
      0019C1 34                    6331 	inc	(hl)
      0019C2 C3r1Fr16              6332 	jp	00198$
      0019C5                       6333 00200$:
                                   6334 ;src/main.c:577: }
      0019C5 E8 10                 6335 	add	sp, #16
      0019C7 C9                    6336 	ret
                                   6337 ;src/main.c:582: void move() {
                                   6338 ;	---------------------------------
                                   6339 ; Function move
                                   6340 ; ---------------------------------
      0019C8                       6341 _move::
      0019C8 E8 F8                 6342 	add	sp, #-8
                                   6343 ;src/main.c:586: if (joydata & J_A) {
      0019CA FArF5r00              6344 	ld	a, (#_joydata)
      0019CD CB 67                 6345 	bit	4, a
      0019CF 28 16                 6346 	jr	Z, 00102$
                                   6347 ;src/main.c:587: xSpeed += xDir + xDir + xDir;
      0019D1 21r93r00              6348 	ld	hl, #_xDir
      0019D4 7E                    6349 	ld	a, (hl)
      0019D5 87                    6350 	add	a, a
      0019D6 86                    6351 	add	a, (hl)
      0019D7 21r95r00              6352 	ld	hl, #_xSpeed
      0019DA 86                    6353 	add	a, (hl)
      0019DB 77                    6354 	ld	(hl), a
                                   6355 ;src/main.c:588: ySpeed += yDir + yDir + yDir;
      0019DC 21r94r00              6356 	ld	hl, #_yDir
      0019DF 7E                    6357 	ld	a, (hl)
      0019E0 87                    6358 	add	a, a
      0019E1 86                    6359 	add	a, (hl)
      0019E2 21r96r00              6360 	ld	hl, #_ySpeed
      0019E5 86                    6361 	add	a, (hl)
      0019E6 77                    6362 	ld	(hl), a
      0019E7                       6363 00102$:
                                   6364 ;src/main.c:592: xSpeed = clamp(xSpeed, -100, 100);
      0019E7 21r95r00              6365 	ld	hl, #_xSpeed
      0019EA 4E                    6366 	ld	c, (hl)
                                   6367 ;src/main.c:345: return (value < min) ? min : (value > max) ? max : value;
      0019EB 79                    6368 	ld	a, c
      0019EC EE 80                 6369 	xor	a, #0x80
      0019EE D6 1C                 6370 	sub	a, #0x1c
      0019F0 30 04                 6371 	jr	NC, 00165$
      0019F2 0E 9C                 6372 	ld	c, #0x9c
      0019F4 18 19                 6373 	jr	00166$
      0019F6                       6374 00165$:
      0019F6 59                    6375 	ld	e, c
      0019F7 3E 64                 6376 	ld	a,#0x64
      0019F9 57                    6377 	ld	d,a
      0019FA 91                    6378 	sub	a, c
      0019FB CB 7B                 6379 	bit	7, e
      0019FD 28 07                 6380 	jr	Z, 00342$
      0019FF CB 7A                 6381 	bit	7, d
      001A01 20 08                 6382 	jr	NZ, 00343$
      001A03 BF                    6383 	cp	a, a
      001A04 18 05                 6384 	jr	00343$
      001A06                       6385 00342$:
      001A06 CB 7A                 6386 	bit	7, d
      001A08 28 01                 6387 	jr	Z, 00343$
      001A0A 37                    6388 	scf
      001A0B                       6389 00343$:
      001A0B 30 02                 6390 	jr	NC, 00167$
      001A0D 0E 64                 6391 	ld	c, #0x64
      001A0F                       6392 00167$:
      001A0F                       6393 00166$:
      001A0F 21r95r00              6394 	ld	hl, #_xSpeed
      001A12 71                    6395 	ld	(hl), c
                                   6396 ;src/main.c:593: ySpeed = clamp(ySpeed, -100, 100);
      001A13 21r96r00              6397 	ld	hl, #_ySpeed
      001A16 4E                    6398 	ld	c, (hl)
                                   6399 ;src/main.c:345: return (value < min) ? min : (value > max) ? max : value;
      001A17 79                    6400 	ld	a, c
      001A18 EE 80                 6401 	xor	a, #0x80
      001A1A D6 1C                 6402 	sub	a, #0x1c
      001A1C 30 04                 6403 	jr	NC, 00169$
      001A1E 0E 9C                 6404 	ld	c, #0x9c
      001A20 18 19                 6405 	jr	00170$
      001A22                       6406 00169$:
      001A22 59                    6407 	ld	e, c
      001A23 3E 64                 6408 	ld	a,#0x64
      001A25 57                    6409 	ld	d,a
      001A26 91                    6410 	sub	a, c
      001A27 CB 7B                 6411 	bit	7, e
      001A29 28 07                 6412 	jr	Z, 00344$
      001A2B CB 7A                 6413 	bit	7, d
      001A2D 20 08                 6414 	jr	NZ, 00345$
      001A2F BF                    6415 	cp	a, a
      001A30 18 05                 6416 	jr	00345$
      001A32                       6417 00344$:
      001A32 CB 7A                 6418 	bit	7, d
      001A34 28 01                 6419 	jr	Z, 00345$
      001A36 37                    6420 	scf
      001A37                       6421 00345$:
      001A37 30 02                 6422 	jr	NC, 00171$
      001A39 0E 64                 6423 	ld	c, #0x64
      001A3B                       6424 00171$:
      001A3B                       6425 00170$:
      001A3B 21r96r00              6426 	ld	hl, #_ySpeed
      001A3E 71                    6427 	ld	(hl), c
                                   6428 ;src/main.c:595: xOverflow = 0;
      001A3F AF                    6429 	xor	a, a
      001A40 21rA1r00              6430 	ld	hl, #_xOverflow
      001A43 22                    6431 	ld	(hl+), a
      001A44 77                    6432 	ld	(hl), a
                                   6433 ;src/main.c:596: yOverflow = 0;
      001A45 AF                    6434 	xor	a, a
      001A46 21rA3r00              6435 	ld	hl, #_yOverflow
      001A49 22                    6436 	ld	(hl+), a
      001A4A 77                    6437 	ld	(hl), a
                                   6438 ;src/main.c:601: uint8_t xCollisionPoint = playerDrawX; 
      001A4B 21r9Br00              6439 	ld	hl, #_playerDrawX
      001A4E 4E                    6440 	ld	c, (hl)
                                   6441 ;src/main.c:604: xCollisionPoint = playerDrawX +8; //right edge
      001A4F 46                    6442 	ld	b, (hl)
                                   6443 ;src/main.c:603: if (xSpeed > 0) {
      001A50 21r95r00              6444 	ld	hl, #_xSpeed
      001A53 5E                    6445 	ld	e, (hl)
      001A54 AF                    6446 	xor	a, a
      001A55 57                    6447 	ld	d, a
      001A56 96                    6448 	sub	a, (hl)
      001A57 CB 7B                 6449 	bit	7, e
      001A59 28 07                 6450 	jr	Z, 00346$
      001A5B CB 7A                 6451 	bit	7, d
      001A5D 20 08                 6452 	jr	NZ, 00347$
      001A5F BF                    6453 	cp	a, a
      001A60 18 05                 6454 	jr	00347$
      001A62                       6455 00346$:
      001A62 CB 7A                 6456 	bit	7, d
      001A64 28 01                 6457 	jr	Z, 00347$
      001A66 37                    6458 	scf
      001A67                       6459 00347$:
      001A67 30 04                 6460 	jr	NC, 00104$
                                   6461 ;src/main.c:604: xCollisionPoint = playerDrawX +8; //right edge
      001A69 78                    6462 	ld	a, b
      001A6A C6 08                 6463 	add	a, #0x08
      001A6C 4F                    6464 	ld	c, a
      001A6D                       6465 00104$:
                                   6466 ;src/main.c:606: if (xSpeed < 0) {
      001A6D FAr95r00              6467 	ld	a, (#_xSpeed)
      001A70 CB 7F                 6468 	bit	7, a
      001A72 28 04                 6469 	jr	Z, 00106$
                                   6470 ;src/main.c:607: xCollisionPoint = playerDrawX -8; //left edge
      001A74 78                    6471 	ld	a, b
      001A75 C6 F8                 6472 	add	a, #0xf8
      001A77 4F                    6473 	ld	c, a
      001A78                       6474 00106$:
                                   6475 ;src/main.c:611: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001A78 06 00                 6476 	ld	b, #0x00
      001A7A 79                    6477 	ld	a, c
      001A7B 21r9Dr00              6478 	ld	hl, #_bgX
      001A7E 86                    6479 	add	a, (hl)
      001A7F 23                    6480 	inc	hl
      001A80 4F                    6481 	ld	c, a
      001A81 78                    6482 	ld	a, b
      001A82 8E                    6483 	adc	a, (hl)
      001A83 47                    6484 	ld	b, a
      001A84 CB 28                 6485 	sra	b
      001A86 CB 19                 6486 	rr	c
      001A88 CB 28                 6487 	sra	b
      001A8A CB 19                 6488 	rr	c
      001A8C CB 28                 6489 	sra	b
      001A8E CB 19                 6490 	rr	c
      001A90 11 20 00              6491 	ld	de, #0x0020
      001A93 D5                    6492 	push	de
      001A94 C5                    6493 	push	bc
      001A95 CDr00r00              6494 	call	__modsint
      001A98 E8 04                 6495 	add	sp, #4
                                   6496 ;src/main.c:615: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001A9A 21r9Cr00              6497 	ld	hl, #_playerDrawY
      001A9D 4E                    6498 	ld	c, (hl)
      001A9E 06 00                 6499 	ld	b, #0x00
      001AA0 79                    6500 	ld	a, c
      001AA1 21r9Fr00              6501 	ld	hl, #_bgY
      001AA4 86                    6502 	add	a, (hl)
      001AA5 23                    6503 	inc	hl
      001AA6 4F                    6504 	ld	c, a
      001AA7 78                    6505 	ld	a, b
      001AA8 8E                    6506 	adc	a, (hl)
      001AA9 47                    6507 	ld	b, a
      001AAA CB 28                 6508 	sra	b
      001AAC CB 19                 6509 	rr	c
      001AAE CB 28                 6510 	sra	b
      001AB0 CB 19                 6511 	rr	c
      001AB2 CB 28                 6512 	sra	b
      001AB4 CB 19                 6513 	rr	c
      001AB6 D5                    6514 	push	de
      001AB7 21 20 00              6515 	ld	hl, #0x0020
      001ABA E5                    6516 	push	hl
      001ABB C5                    6517 	push	bc
      001ABC CDr00r00              6518 	call	__modsint
      001ABF E8 04                 6519 	add	sp, #4
      001AC1 6B                    6520 	ld	l, e
                                   6521 ;	spillPairReg hl
                                   6522 ;	spillPairReg hl
                                   6523 ;	spillPairReg hl
                                   6524 ;	spillPairReg hl
      001AC2 D1                    6525 	pop	de
                                   6526 ;src/main.c:618: uint16_t ind = 32*bgindY + bgindX;
      001AC3 26 00                 6527 	ld	h, #0x00
                                   6528 ;	spillPairReg hl
                                   6529 ;	spillPairReg hl
      001AC5 29                    6530 	add	hl, hl
      001AC6 29                    6531 	add	hl, hl
      001AC7 29                    6532 	add	hl, hl
      001AC8 29                    6533 	add	hl, hl
      001AC9 29                    6534 	add	hl, hl
      001ACA 19                    6535 	add	hl, de
      001ACB 5D                    6536 	ld	e, l
      001ACC 54                    6537 	ld	d, h
                                   6538 ;src/main.c:619: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001ACD 0E 01                 6539 	ld	c, #0x01
                                   6540 ;src/main.c:620: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001ACF 21r87r00              6541 	ld	hl, #_background1
      001AD2 19                    6542 	add	hl, de
      001AD3 46                    6543 	ld	b, (hl)
      001AD4 1E 00                 6544 	ld	e, #0x00
      001AD6                       6545 00158$:
      001AD6 FAr89r0B              6546 	ld	a, (#_BLANKSIZE)
      001AD9 F8 02                 6547 	ldhl	sp,	#2
      001ADB 77                    6548 	ld	(hl), a
      001ADC 7B                    6549 	ld	a, e
      001ADD 96                    6550 	sub	a, (hl)
      001ADE 30 11                 6551 	jr	NC, 00109$
                                   6552 ;src/main.c:621: if (background1[ind] == BLANK[i] ) {
      001AE0 21r8Ar0B              6553 	ld	hl, #_BLANK
      001AE3 16 00                 6554 	ld	d, #0x00
      001AE5 19                    6555 	add	hl, de
      001AE6 56                    6556 	ld	d, (hl)
      001AE7 78                    6557 	ld	a, b
                                   6558 ;src/main.c:622: result = 0;
      001AE8 92                    6559 	sub	a,d
      001AE9 20 03                 6560 	jr	NZ, 00159$
      001AEB 4F                    6561 	ld	c,a
                                   6562 ;src/main.c:623: break;
      001AEC 18 03                 6563 	jr	00109$
      001AEE                       6564 00159$:
                                   6565 ;src/main.c:620: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001AEE 1C                    6566 	inc	e
      001AEF 18 E5                 6567 	jr	00158$
      001AF1                       6568 00109$:
                                   6569 ;src/main.c:627: if (result == 0) {
      001AF1 79                    6570 	ld	a, c
      001AF2 B7                    6571 	or	a, a
      001AF3 C2rC1r1B              6572 	jp	NZ, 00114$
                                   6573 ;src/main.c:628: playerX+=xSpeed;
      001AF6 FAr95r00              6574 	ld	a, (#_xSpeed)
      001AF9 4F                    6575 	ld	c, a
      001AFA 07                    6576 	rlca
      001AFB 9F                    6577 	sbc	a, a
      001AFC 47                    6578 	ld	b, a
      001AFD 21r97r00              6579 	ld	hl, #_playerX
      001B00 6E                    6580 	ld	l, (hl)
                                   6581 ;	spillPairReg hl
                                   6582 ;	spillPairReg hl
      001B01 FAr98r00              6583 	ld	a, (_playerX + 1)
      001B04 67                    6584 	ld	h, a
                                   6585 ;	spillPairReg hl
                                   6586 ;	spillPairReg hl
      001B05 09                    6587 	add	hl, bc
      001B06 4D                    6588 	ld	c, l
      001B07 44                    6589 	ld	b, h
      001B08 21r97r00              6590 	ld	hl, #_playerX
      001B0B 79                    6591 	ld	a, c
      001B0C 22                    6592 	ld	(hl+), a
                                   6593 ;src/main.c:630: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001B0D 78                    6594 	ld	a, b
      001B0E 32                    6595 	ld	(hl-), a
      001B0F 2A                    6596 	ld	a, (hl+)
      001B10 4F                    6597 	ld	c, a
      001B11 46                    6598 	ld	b, (hl)
      001B12 79                    6599 	ld	a, c
      001B13 D6 80                 6600 	sub	a, #0x80
      001B15 78                    6601 	ld	a, b
      001B16 DE 08                 6602 	sbc	a, #0x08
      001B18 30 05                 6603 	jr	NC, 00173$
      001B1A 01 80 08              6604 	ld	bc, #0x0880
      001B1D 18 0B                 6605 	jr	00174$
      001B1F                       6606 00173$:
      001B1F 3E 80                 6607 	ld	a, #0x80
      001B21 B9                    6608 	cp	a, c
      001B22 3E 0B                 6609 	ld	a, #0x0b
      001B24 98                    6610 	sbc	a, b
      001B25 30 03                 6611 	jr	NC, 00175$
      001B27 01 80 0B              6612 	ld	bc, #0x0b80
      001B2A                       6613 00175$:
      001B2A                       6614 00174$:
      001B2A 59                    6615 	ld	e,c
      001B2B 50                    6616 	ld	d,b
                                   6617 ;src/main.c:632: xOverflow = (playerX - limitedPlayerX);
      001B2C FAr97r00              6618 	ld	a, (#_playerX)
      001B2F 93                    6619 	sub	a, e
      001B30 EArA1r00              6620 	ld	(#_xOverflow),a
      001B33 FAr98r00              6621 	ld	a, (#_playerX + 1)
      001B36 9A                    6622 	sbc	a, d
      001B37 21rA2r00              6623 	ld	hl, #_xOverflow + 1
                                   6624 ;src/main.c:633: if (xOverflow >= 0) {
      001B3A 32                    6625 	ld	(hl-), a
      001B3B 6E                    6626 	ld	l, (hl)
                                   6627 ;	spillPairReg hl
                                   6628 ;	spillPairReg hl
      001B3C FArA2r00              6629 	ld	a, (_xOverflow + 1)
                                   6630 ;	spillPairReg hl
                                   6631 ;	spillPairReg hl
      001B3F CB 7F                 6632 	bit	7,a
      001B41 20 22                 6633 	jr	NZ, 00111$
                                   6634 ;src/main.c:634: xOverflow = xOverflow >> 5;
      001B43 21rA2r00              6635 	ld	hl, #_xOverflow + 1
      001B46 CB 2E                 6636 	sra	(hl)
      001B48 2B                    6637 	dec	hl
      001B49 CB 1E                 6638 	rr	(hl)
      001B4B 23                    6639 	inc	hl
      001B4C CB 2E                 6640 	sra	(hl)
      001B4E 2B                    6641 	dec	hl
      001B4F CB 1E                 6642 	rr	(hl)
      001B51 23                    6643 	inc	hl
      001B52 CB 2E                 6644 	sra	(hl)
      001B54 2B                    6645 	dec	hl
      001B55 CB 1E                 6646 	rr	(hl)
      001B57 23                    6647 	inc	hl
      001B58 CB 2E                 6648 	sra	(hl)
      001B5A 2B                    6649 	dec	hl
      001B5B CB 1E                 6650 	rr	(hl)
      001B5D 23                    6651 	inc	hl
      001B5E CB 2E                 6652 	sra	(hl)
      001B60 2B                    6653 	dec	hl
      001B61 CB 1E                 6654 	rr	(hl)
      001B63 18 25                 6655 	jr	00112$
      001B65                       6656 00111$:
                                   6657 ;src/main.c:637: xOverflow = -((-xOverflow) >> 5);
      001B65 AF                    6658 	xor	a, a
      001B66 21rA1r00              6659 	ld	hl, #_xOverflow
      001B69 96                    6660 	sub	a, (hl)
      001B6A 23                    6661 	inc	hl
      001B6B 5F                    6662 	ld	e, a
      001B6C 9F                    6663 	sbc	a, a
      001B6D 96                    6664 	sub	a, (hl)
      001B6E 2B                    6665 	dec	hl
      001B6F 57                    6666 	ld	d, a
      001B70 CB 2A                 6667 	sra	d
      001B72 CB 1B                 6668 	rr	e
      001B74 CB 2A                 6669 	sra	d
      001B76 CB 1B                 6670 	rr	e
      001B78 CB 2A                 6671 	sra	d
      001B7A CB 1B                 6672 	rr	e
      001B7C CB 2A                 6673 	sra	d
      001B7E CB 1B                 6674 	rr	e
      001B80 CB 2A                 6675 	sra	d
      001B82 CB 1B                 6676 	rr	e
      001B84 AF                    6677 	xor	a, a
      001B85 93                    6678 	sub	a, e
      001B86 22                    6679 	ld	(hl+), a
      001B87 9F                    6680 	sbc	a, a
      001B88 92                    6681 	sub	a, d
      001B89 77                    6682 	ld	(hl), a
      001B8A                       6683 00112$:
                                   6684 ;src/main.c:639: bgX += xOverflow;
      001B8A FAr9Dr00              6685 	ld	a, (#_bgX)
      001B8D 21rA1r00              6686 	ld	hl, #_xOverflow
      001B90 86                    6687 	add	a, (hl)
      001B91 21r9Dr00              6688 	ld	hl, #_bgX
      001B94 22                    6689 	ld	(hl+), a
      001B95 7E                    6690 	ld	a, (hl)
      001B96 21rA2r00              6691 	ld	hl, #_xOverflow + 1
      001B99 8E                    6692 	adc	a, (hl)
      001B9A EAr9Er00              6693 	ld	(#_bgX + 1),a
                                   6694 ;src/main.c:640: playerX = limitedPlayerX;
      001B9D 21r97r00              6695 	ld	hl, #_playerX
      001BA0 79                    6696 	ld	a, c
      001BA1 22                    6697 	ld	(hl+), a
                                   6698 ;src/main.c:641: playerDrawX=playerX >> 5;
      001BA2 78                    6699 	ld	a, b
      001BA3 32                    6700 	ld	(hl-), a
      001BA4 2A                    6701 	ld	a, (hl+)
      001BA5 4F                    6702 	ld	c, a
      001BA6 46                    6703 	ld	b, (hl)
      001BA7 CB 38                 6704 	srl	b
      001BA9 CB 19                 6705 	rr	c
      001BAB CB 38                 6706 	srl	b
      001BAD CB 19                 6707 	rr	c
      001BAF CB 38                 6708 	srl	b
      001BB1 CB 19                 6709 	rr	c
      001BB3 CB 38                 6710 	srl	b
      001BB5 CB 19                 6711 	rr	c
      001BB7 CB 38                 6712 	srl	b
      001BB9 CB 19                 6713 	rr	c
      001BBB 21r9Br00              6714 	ld	hl, #_playerDrawX
      001BBE 71                    6715 	ld	(hl), c
      001BBF 18 05                 6716 	jr	00115$
      001BC1                       6717 00114$:
                                   6718 ;src/main.c:649: xSpeed = 0;
      001BC1 21r95r00              6719 	ld	hl, #_xSpeed
      001BC4 36 00                 6720 	ld	(hl), #0x00
      001BC6                       6721 00115$:
                                   6722 ;src/main.c:657: uint8_t yCollisionPoint = playerDrawY; 
      001BC6 FAr9Cr00              6723 	ld	a, (#_playerDrawY)
      001BC9 F8 07                 6724 	ldhl	sp,	#7
      001BCB 77                    6725 	ld	(hl), a
                                   6726 ;src/main.c:660: yCollisionPoint = playerDrawY +8; //bottom edge
      001BCC 21r9Cr00              6727 	ld	hl, #_playerDrawY
      001BCF 4E                    6728 	ld	c, (hl)
                                   6729 ;src/main.c:659: if (ySpeed > 0) {
      001BD0 21r96r00              6730 	ld	hl, #_ySpeed
      001BD3 5E                    6731 	ld	e, (hl)
      001BD4 AF                    6732 	xor	a, a
      001BD5 57                    6733 	ld	d, a
      001BD6 96                    6734 	sub	a, (hl)
      001BD7 CB 7B                 6735 	bit	7, e
      001BD9 28 07                 6736 	jr	Z, 00350$
      001BDB CB 7A                 6737 	bit	7, d
      001BDD 20 08                 6738 	jr	NZ, 00351$
      001BDF BF                    6739 	cp	a, a
      001BE0 18 05                 6740 	jr	00351$
      001BE2                       6741 00350$:
      001BE2 CB 7A                 6742 	bit	7, d
      001BE4 28 01                 6743 	jr	Z, 00351$
      001BE6 37                    6744 	scf
      001BE7                       6745 00351$:
      001BE7 30 06                 6746 	jr	NC, 00117$
                                   6747 ;src/main.c:660: yCollisionPoint = playerDrawY +8; //bottom edge
      001BE9 79                    6748 	ld	a, c
      001BEA C6 08                 6749 	add	a, #0x08
      001BEC F8 07                 6750 	ldhl	sp,	#7
      001BEE 77                    6751 	ld	(hl), a
      001BEF                       6752 00117$:
                                   6753 ;src/main.c:662: if (ySpeed < 0) {
      001BEF FAr96r00              6754 	ld	a, (#_ySpeed)
      001BF2 CB 7F                 6755 	bit	7, a
      001BF4 28 06                 6756 	jr	Z, 00119$
                                   6757 ;src/main.c:663: yCollisionPoint = playerDrawY -8; //top edge, 
      001BF6 79                    6758 	ld	a, c
      001BF7 C6 F8                 6759 	add	a, #0xf8
      001BF9 F8 07                 6760 	ldhl	sp,	#7
      001BFB 77                    6761 	ld	(hl), a
      001BFC                       6762 00119$:
                                   6763 ;src/main.c:667: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001BFC FAr9Br00              6764 	ld	a, (#_playerDrawX)
      001BFF 0E 00                 6765 	ld	c, #0x00
      001C01 F8 03                 6766 	ldhl	sp,	#3
      001C03 22                    6767 	ld	(hl+), a
      001C04 79                    6768 	ld	a, c
      001C05 32                    6769 	ld	(hl-), a
      001C06 2A                    6770 	ld	a, (hl+)
      001C07 5F                    6771 	ld	e, a
      001C08 56                    6772 	ld	d, (hl)
      001C09 21r9Dr00              6773 	ld	hl, #_bgX
      001C0C 2A                    6774 	ld	a,	(hl+)
      001C0D 66                    6775 	ld	h, (hl)
      001C0E 6F                    6776 	ld	l, a
      001C0F 19                    6777 	add	hl, de
      001C10 E5                    6778 	push	hl
      001C11 7D                    6779 	ld	a, l
      001C12 F8 07                 6780 	ldhl	sp,	#7
      001C14 77                    6781 	ld	(hl), a
      001C15 E1                    6782 	pop	hl
      001C16 7C                    6783 	ld	a, h
      001C17 F8 06                 6784 	ldhl	sp,	#6
      001C19 77                    6785 	ld	(hl), a
      001C1A CB 2E                 6786 	sra	(hl)
      001C1C 2B                    6787 	dec	hl
      001C1D CB 1E                 6788 	rr	(hl)
      001C1F 23                    6789 	inc	hl
      001C20 CB 2E                 6790 	sra	(hl)
      001C22 2B                    6791 	dec	hl
      001C23 CB 1E                 6792 	rr	(hl)
      001C25 23                    6793 	inc	hl
      001C26 CB 2E                 6794 	sra	(hl)
      001C28 2B                    6795 	dec	hl
      001C29 CB 1E                 6796 	rr	(hl)
      001C2B 11 20 00              6797 	ld	de, #0x0020
      001C2E D5                    6798 	push	de
      001C2F 2A                    6799 	ld	a, (hl+)
      001C30 5F                    6800 	ld	e, a
      001C31 56                    6801 	ld	d, (hl)
      001C32 D5                    6802 	push	de
      001C33 CDr00r00              6803 	call	__modsint
      001C36 E8 04                 6804 	add	sp, #4
      001C38 F8 05                 6805 	ldhl	sp,	#5
      001C3A 7B                    6806 	ld	a, e
      001C3B 22                    6807 	ld	(hl+), a
      001C3C 72                    6808 	ld	(hl), d
      001C3D F8 05                 6809 	ldhl	sp,	#5
      001C3F 7E                    6810 	ld	a, (hl)
      001C40 F8 00                 6811 	ldhl	sp,	#0
      001C42 77                    6812 	ld	(hl), a
      001C43 F8 06                 6813 	ldhl	sp,	#6
      001C45 7E                    6814 	ld	a, (hl)
      001C46 F8 01                 6815 	ldhl	sp,	#1
      001C48 77                    6816 	ld	(hl), a
                                   6817 ;src/main.c:670: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001C49 F8 07                 6818 	ldhl	sp,	#7
      001C4B 3A                    6819 	ld	a, (hl-)
      001C4C 22                    6820 	ld	(hl+), a
      001C4D AF                    6821 	xor	a, a
      001C4E 32                    6822 	ld	(hl-), a
      001C4F 3A                    6823 	ld	a, (hl-)
      001C50 2B                    6824 	dec	hl
      001C51 77                    6825 	ld	(hl), a
      001C52 F8 07                 6826 	ldhl	sp,	#7
      001C54 3A                    6827 	ld	a, (hl-)
      001C55 2B                    6828 	dec	hl
      001C56 32                    6829 	ld	(hl-), a
      001C57 2A                    6830 	ld	a, (hl+)
      001C58 5F                    6831 	ld	e, a
      001C59 56                    6832 	ld	d, (hl)
      001C5A 21r9Fr00              6833 	ld	hl, #_bgY
      001C5D 2A                    6834 	ld	a,	(hl+)
      001C5E 66                    6835 	ld	h, (hl)
      001C5F 6F                    6836 	ld	l, a
      001C60 19                    6837 	add	hl, de
      001C61 E5                    6838 	push	hl
      001C62 7D                    6839 	ld	a, l
      001C63 F8 08                 6840 	ldhl	sp,	#8
      001C65 77                    6841 	ld	(hl), a
      001C66 E1                    6842 	pop	hl
      001C67 7C                    6843 	ld	a, h
      001C68 F8 07                 6844 	ldhl	sp,	#7
      001C6A 77                    6845 	ld	(hl), a
      001C6B CB 2E                 6846 	sra	(hl)
      001C6D 2B                    6847 	dec	hl
      001C6E CB 1E                 6848 	rr	(hl)
      001C70 23                    6849 	inc	hl
      001C71 CB 2E                 6850 	sra	(hl)
      001C73 2B                    6851 	dec	hl
      001C74 CB 1E                 6852 	rr	(hl)
      001C76 23                    6853 	inc	hl
      001C77 CB 2E                 6854 	sra	(hl)
      001C79 2B                    6855 	dec	hl
      001C7A CB 1E                 6856 	rr	(hl)
      001C7C 11 20 00              6857 	ld	de, #0x0020
      001C7F D5                    6858 	push	de
      001C80 2A                    6859 	ld	a, (hl+)
      001C81 5F                    6860 	ld	e, a
      001C82 56                    6861 	ld	d, (hl)
      001C83 D5                    6862 	push	de
      001C84 CDr00r00              6863 	call	__modsint
      001C87 E8 04                 6864 	add	sp, #4
      001C89 F8 06                 6865 	ldhl	sp,	#6
      001C8B 7B                    6866 	ld	a, e
      001C8C 22                    6867 	ld	(hl+), a
      001C8D 72                    6868 	ld	(hl), d
      001C8E F8 06                 6869 	ldhl	sp,	#6
      001C90 2A                    6870 	ld	a, (hl+)
      001C91 77                    6871 	ld	(hl), a
                                   6872 ;src/main.c:673: ind = 32*bgindY + bgindX;
      001C92 3A                    6873 	ld	a, (hl-)
      001C93 22                    6874 	ld	(hl+), a
      001C94 36 00                 6875 	ld	(hl), #0x00
      001C96 3E 05                 6876 	ld	a, #0x05
      001C98                       6877 00352$:
      001C98 F8 06                 6878 	ldhl	sp,	#6
      001C9A CB 26                 6879 	sla	(hl)
      001C9C 23                    6880 	inc	hl
      001C9D CB 16                 6881 	rl	(hl)
      001C9F 3D                    6882 	dec	a
      001CA0 20 F6                 6883 	jr	NZ, 00352$
      001CA2 2B                    6884 	dec	hl
      001CA3 3A                    6885 	ld	a, (hl-)
      001CA4 2B                    6886 	dec	hl
      001CA5 77                    6887 	ld	(hl), a
      001CA6 F8 07                 6888 	ldhl	sp,	#7
      001CA8 3A                    6889 	ld	a, (hl-)
      001CA9 2B                    6890 	dec	hl
      001CAA 77                    6891 	ld	(hl), a
      001CAB D1                    6892 	pop	de
      001CAC D5                    6893 	push	de
      001CAD 3A                    6894 	ld	a, (hl-)
      001CAE 6E                    6895 	ld	l, (hl)
      001CAF 67                    6896 	ld	h, a
      001CB0 19                    6897 	add	hl, de
      001CB1 E5                    6898 	push	hl
      001CB2 7D                    6899 	ld	a, l
      001CB3 F8 08                 6900 	ldhl	sp,	#8
      001CB5 77                    6901 	ld	(hl), a
      001CB6 E1                    6902 	pop	hl
      001CB7 7C                    6903 	ld	a, h
      001CB8 F8 07                 6904 	ldhl	sp,	#7
      001CBA 77                    6905 	ld	(hl), a
                                   6906 ;src/main.c:674: result = 1;
      001CBB F8 03                 6907 	ldhl	sp,	#3
      001CBD 36 01                 6908 	ld	(hl), #0x01
                                   6909 ;src/main.c:675: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001CBF F8 06                 6910 	ldhl	sp,#6
      001CC1 2A                    6911 	ld	a, (hl+)
      001CC2 5F                    6912 	ld	e, a
      001CC3 56                    6913 	ld	d, (hl)
      001CC4 21r87r00              6914 	ld	hl, #_background1
      001CC7 19                    6915 	add	hl, de
      001CC8 4D                    6916 	ld	c, l
      001CC9 44                    6917 	ld	b, h
      001CCA 0A                    6918 	ld	a, (bc)
      001CCB F8 04                 6919 	ldhl	sp,	#4
      001CCD 77                    6920 	ld	(hl), a
      001CCE F8 07                 6921 	ldhl	sp,	#7
      001CD0 36 00                 6922 	ld	(hl), #0x00
      001CD2                       6923 00161$:
      001CD2 F8 07                 6924 	ldhl	sp,	#7
      001CD4 7E                    6925 	ld	a, (hl)
      001CD5 F8 02                 6926 	ldhl	sp,	#2
      001CD7 96                    6927 	sub	a, (hl)
      001CD8 30 29                 6928 	jr	NC, 00122$
                                   6929 ;src/main.c:676: if (background1[ind] == BLANK[j] ) {
      001CDA 11r8Ar0B              6930 	ld	de, #_BLANK
      001CDD F8 07                 6931 	ldhl	sp,	#7
      001CDF 6E                    6932 	ld	l, (hl)
      001CE0 26 00                 6933 	ld	h, #0x00
      001CE2 19                    6934 	add	hl, de
      001CE3 E5                    6935 	push	hl
      001CE4 7D                    6936 	ld	a, l
      001CE5 F8 07                 6937 	ldhl	sp,	#7
      001CE7 77                    6938 	ld	(hl), a
      001CE8 E1                    6939 	pop	hl
      001CE9 7C                    6940 	ld	a, h
      001CEA F8 06                 6941 	ldhl	sp,	#6
      001CEC 32                    6942 	ld	(hl-), a
      001CED 2A                    6943 	ld	a, (hl+)
      001CEE 5F                    6944 	ld	e, a
      001CEF 3A                    6945 	ld	a, (hl-)
      001CF0 2B                    6946 	dec	hl
      001CF1 57                    6947 	ld	d, a
      001CF2 1A                    6948 	ld	a, (de)
      001CF3 4F                    6949 	ld	c, a
      001CF4 7E                    6950 	ld	a, (hl)
      001CF5 91                    6951 	sub	a, c
      001CF6 20 06                 6952 	jr	NZ, 00162$
                                   6953 ;src/main.c:677: result = 0;
      001CF8 F8 03                 6954 	ldhl	sp,	#3
      001CFA 36 00                 6955 	ld	(hl), #0x00
                                   6956 ;src/main.c:678: break;
      001CFC 18 05                 6957 	jr	00122$
      001CFE                       6958 00162$:
                                   6959 ;src/main.c:675: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001CFE F8 07                 6960 	ldhl	sp,	#7
      001D00 34                    6961 	inc	(hl)
      001D01 18 CF                 6962 	jr	00161$
      001D03                       6963 00122$:
                                   6964 ;src/main.c:682: if (result == 0) {
      001D03 F8 03                 6965 	ldhl	sp,	#3
      001D05 7E                    6966 	ld	a, (hl)
      001D06 B7                    6967 	or	a, a
      001D07 C2rD1r1D              6968 	jp	NZ, 00127$
                                   6969 ;src/main.c:683: playerY += ySpeed;
      001D0A FAr96r00              6970 	ld	a, (#_ySpeed)
      001D0D 4F                    6971 	ld	c, a
      001D0E 07                    6972 	rlca
      001D0F 9F                    6973 	sbc	a, a
      001D10 21r99r00              6974 	ld	hl, #_playerY
      001D13 5E                    6975 	ld	e, (hl)
      001D14 23                    6976 	inc	hl
      001D15 56                    6977 	ld	d, (hl)
      001D16 2B                    6978 	dec	hl
      001D17 47                    6979 	ld	b, a
      001D18 79                    6980 	ld	a, c
      001D19 83                    6981 	add	a, e
      001D1A 4F                    6982 	ld	c, a
      001D1B 78                    6983 	ld	a, b
      001D1C 8A                    6984 	adc	a, d
      001D1D 47                    6985 	ld	b, a
      001D1E 79                    6986 	ld	a, c
      001D1F 22                    6987 	ld	(hl+), a
                                   6988 ;src/main.c:685: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001D20 78                    6989 	ld	a, b
      001D21 32                    6990 	ld	(hl-), a
      001D22 2A                    6991 	ld	a, (hl+)
      001D23 5F                    6992 	ld	e, a
      001D24 56                    6993 	ld	d, (hl)
      001D25 7A                    6994 	ld	a, d
      001D26 D6 06                 6995 	sub	a, #0x06
      001D28 30 05                 6996 	jr	NC, 00177$
      001D2A 11 00 06              6997 	ld	de, #0x0600
      001D2D 18 0B                 6998 	jr	00178$
      001D2F                       6999 00177$:
      001D2F 3E C0                 7000 	ld	a, #0xc0
      001D31 BB                    7001 	cp	a, e
      001D32 3E 09                 7002 	ld	a, #0x09
      001D34 9A                    7003 	sbc	a, d
      001D35 30 03                 7004 	jr	NC, 00179$
      001D37 11 C0 09              7005 	ld	de, #0x09c0
      001D3A                       7006 00179$:
      001D3A                       7007 00178$:
      001D3A 4B                    7008 	ld	c, e
      001D3B 42                    7009 	ld	b, d
                                   7010 ;src/main.c:687: yOverflow = (playerY - limitedPlayerY);
      001D3C FAr99r00              7011 	ld	a, (#_playerY)
      001D3F 93                    7012 	sub	a, e
      001D40 EArA3r00              7013 	ld	(#_yOverflow),a
      001D43 FAr9Ar00              7014 	ld	a, (#_playerY + 1)
      001D46 9A                    7015 	sbc	a, d
      001D47 21rA4r00              7016 	ld	hl, #_yOverflow + 1
                                   7017 ;src/main.c:688: if (yOverflow >= 0) {
      001D4A 32                    7018 	ld	(hl-), a
      001D4B 6E                    7019 	ld	l, (hl)
                                   7020 ;	spillPairReg hl
                                   7021 ;	spillPairReg hl
      001D4C FArA4r00              7022 	ld	a, (_yOverflow + 1)
                                   7023 ;	spillPairReg hl
                                   7024 ;	spillPairReg hl
      001D4F CB 7F                 7025 	bit	7,a
      001D51 20 22                 7026 	jr	NZ, 00124$
                                   7027 ;src/main.c:689: yOverflow = yOverflow >> 5;
      001D53 21rA4r00              7028 	ld	hl, #_yOverflow + 1
      001D56 CB 2E                 7029 	sra	(hl)
      001D58 2B                    7030 	dec	hl
      001D59 CB 1E                 7031 	rr	(hl)
      001D5B 23                    7032 	inc	hl
      001D5C CB 2E                 7033 	sra	(hl)
      001D5E 2B                    7034 	dec	hl
      001D5F CB 1E                 7035 	rr	(hl)
      001D61 23                    7036 	inc	hl
      001D62 CB 2E                 7037 	sra	(hl)
      001D64 2B                    7038 	dec	hl
      001D65 CB 1E                 7039 	rr	(hl)
      001D67 23                    7040 	inc	hl
      001D68 CB 2E                 7041 	sra	(hl)
      001D6A 2B                    7042 	dec	hl
      001D6B CB 1E                 7043 	rr	(hl)
      001D6D 23                    7044 	inc	hl
      001D6E CB 2E                 7045 	sra	(hl)
      001D70 2B                    7046 	dec	hl
      001D71 CB 1E                 7047 	rr	(hl)
      001D73 18 25                 7048 	jr	00125$
      001D75                       7049 00124$:
                                   7050 ;src/main.c:692: yOverflow = -((-yOverflow) >> 5);
      001D75 AF                    7051 	xor	a, a
      001D76 21rA3r00              7052 	ld	hl, #_yOverflow
      001D79 96                    7053 	sub	a, (hl)
      001D7A 23                    7054 	inc	hl
      001D7B 5F                    7055 	ld	e, a
      001D7C 9F                    7056 	sbc	a, a
      001D7D 96                    7057 	sub	a, (hl)
      001D7E 2B                    7058 	dec	hl
      001D7F 57                    7059 	ld	d, a
      001D80 CB 2A                 7060 	sra	d
      001D82 CB 1B                 7061 	rr	e
      001D84 CB 2A                 7062 	sra	d
      001D86 CB 1B                 7063 	rr	e
      001D88 CB 2A                 7064 	sra	d
      001D8A CB 1B                 7065 	rr	e
      001D8C CB 2A                 7066 	sra	d
      001D8E CB 1B                 7067 	rr	e
      001D90 CB 2A                 7068 	sra	d
      001D92 CB 1B                 7069 	rr	e
      001D94 AF                    7070 	xor	a, a
      001D95 93                    7071 	sub	a, e
      001D96 22                    7072 	ld	(hl+), a
      001D97 9F                    7073 	sbc	a, a
      001D98 92                    7074 	sub	a, d
      001D99 77                    7075 	ld	(hl), a
      001D9A                       7076 00125$:
                                   7077 ;src/main.c:694: bgY += yOverflow;
      001D9A FAr9Fr00              7078 	ld	a, (#_bgY)
      001D9D 21rA3r00              7079 	ld	hl, #_yOverflow
      001DA0 86                    7080 	add	a, (hl)
      001DA1 21r9Fr00              7081 	ld	hl, #_bgY
      001DA4 22                    7082 	ld	(hl+), a
      001DA5 7E                    7083 	ld	a, (hl)
      001DA6 21rA4r00              7084 	ld	hl, #_yOverflow + 1
      001DA9 8E                    7085 	adc	a, (hl)
      001DAA EArA0r00              7086 	ld	(#_bgY + 1),a
                                   7087 ;src/main.c:695: playerY = limitedPlayerY;
      001DAD 21r99r00              7088 	ld	hl, #_playerY
      001DB0 79                    7089 	ld	a, c
      001DB1 22                    7090 	ld	(hl+), a
                                   7091 ;src/main.c:696: playerDrawY=playerY >> 5;
      001DB2 78                    7092 	ld	a, b
      001DB3 32                    7093 	ld	(hl-), a
      001DB4 2A                    7094 	ld	a, (hl+)
      001DB5 4F                    7095 	ld	c, a
      001DB6 46                    7096 	ld	b, (hl)
      001DB7 CB 38                 7097 	srl	b
      001DB9 CB 19                 7098 	rr	c
      001DBB CB 38                 7099 	srl	b
      001DBD CB 19                 7100 	rr	c
      001DBF CB 38                 7101 	srl	b
      001DC1 CB 19                 7102 	rr	c
      001DC3 CB 38                 7103 	srl	b
      001DC5 CB 19                 7104 	rr	c
      001DC7 CB 38                 7105 	srl	b
      001DC9 CB 19                 7106 	rr	c
      001DCB 21r9Cr00              7107 	ld	hl, #_playerDrawY
      001DCE 71                    7108 	ld	(hl), c
      001DCF 18 05                 7109 	jr	00128$
      001DD1                       7110 00127$:
                                   7111 ;src/main.c:701: ySpeed = 0;
      001DD1 21r96r00              7112 	ld	hl, #_ySpeed
      001DD4 36 00                 7113 	ld	(hl), #0x00
      001DD6                       7114 00128$:
                                   7115 ;src/main.c:601: uint8_t xCollisionPoint = playerDrawX; 
      001DD6 FAr9Br00              7116 	ld	a, (#_playerDrawX)
      001DD9 F8 07                 7117 	ldhl	sp,	#7
      001DDB 77                    7118 	ld	(hl), a
                                   7119 ;src/main.c:660: yCollisionPoint = playerDrawY +8; //bottom edge
      001DDC FAr9Cr00              7120 	ld	a, (#_playerDrawY)
      001DDF C6 08                 7121 	add	a, #0x08
      001DE1 F8 06                 7122 	ldhl	sp,	#6
      001DE3 77                    7123 	ld	(hl), a
                                   7124 ;src/main.c:704: if (xDir >= 0) {
      001DE4 FAr93r00              7125 	ld	a, (#_xDir)
      001DE7 CB 7F                 7126 	bit	7, a
      001DE9 20 2A                 7127 	jr	NZ, 00130$
                                   7128 ;src/main.c:705: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   7129 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7130 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001DEB 11r00r00              7131 	ld	de, #_shadow_OAM
      001DEE F8 06                 7132 	ldhl	sp,	#6
      001DF0 2A                    7133 	ld	a, (hl+)
      001DF1 12                    7134 	ld	(de), a
      001DF2 11r01r00              7135 	ld	de, #(_shadow_OAM + 1)
      001DF5 7E                    7136 	ld	a, (hl)
      001DF6 12                    7137 	ld	(de), a
                                   7138 ;src/main.c:707: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001DF7 FAr9Cr00              7139 	ld	a, (#_playerDrawY)
      001DFA F8 07                 7140 	ldhl	sp,	#7
      001DFC 77                    7141 	ld	(hl), a
      001DFD 3A                    7142 	ld	a, (hl-)
      001DFE C6 08                 7143 	add	a, #0x08
      001E00 77                    7144 	ld	(hl), a
      001E01 FAr9Br00              7145 	ld	a, (#_playerDrawX)
      001E04 C6 08                 7146 	add	a, #0x08
      001E06 F8 07                 7147 	ldhl	sp,	#7
                                   7148 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7149 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001E08 32                    7150 	ld	(hl-), a
      001E09 11r04r00              7151 	ld	de, #(_shadow_OAM + 4)
      001E0C 2A                    7152 	ld	a, (hl+)
      001E0D 12                    7153 	ld	(de), a
      001E0E 11r05r00              7154 	ld	de, #(_shadow_OAM + 5)
      001E11 7E                    7155 	ld	a, (hl)
      001E12 12                    7156 	ld	(de), a
                                   7157 ;src/main.c:707: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001E13 18 28                 7158 	jr	00131$
      001E15                       7159 00130$:
                                   7160 ;src/main.c:710: move_sprite(1, playerDrawX , playerDrawY +8);
                                   7161 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001E15 01r04r00              7162 	ld	bc, #(_shadow_OAM + 4)
                                   7163 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001E18 F8 06                 7164 	ldhl	sp,	#6
      001E1A 2A                    7165 	ld	a, (hl+)
      001E1B 02                    7166 	ld	(bc), a
      001E1C 03                    7167 	inc	bc
      001E1D 7E                    7168 	ld	a, (hl)
      001E1E 02                    7169 	ld	(bc), a
                                   7170 ;src/main.c:712: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001E1F FAr9Cr00              7171 	ld	a, (#_playerDrawY)
      001E22 F8 07                 7172 	ldhl	sp,	#7
      001E24 77                    7173 	ld	(hl), a
      001E25 3A                    7174 	ld	a, (hl-)
      001E26 C6 08                 7175 	add	a, #0x08
      001E28 77                    7176 	ld	(hl), a
      001E29 FAr9Br00              7177 	ld	a, (#_playerDrawX)
      001E2C F8 07                 7178 	ldhl	sp,	#7
      001E2E 77                    7179 	ld	(hl), a
      001E2F 7E                    7180 	ld	a, (hl)
      001E30 C6 08                 7181 	add	a, #0x08
                                   7182 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7183 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001E32 32                    7184 	ld	(hl-), a
      001E33 11r00r00              7185 	ld	de, #_shadow_OAM
      001E36 2A                    7186 	ld	a, (hl+)
      001E37 12                    7187 	ld	(de), a
      001E38 11r01r00              7188 	ld	de, #(_shadow_OAM + 1)
      001E3B 7E                    7189 	ld	a, (hl)
      001E3C 12                    7190 	ld	(de), a
                                   7191 ;src/main.c:712: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001E3D                       7192 00131$:
                                   7193 ;src/main.c:717: if (bgX >= 256) {
      001E3D 21r9Dr00              7194 	ld	hl, #_bgX
      001E40 2A                    7195 	ld	a, (hl+)
      001E41 4F                    7196 	ld	c, a
      001E42 46                    7197 	ld	b, (hl)
      001E43 78                    7198 	ld	a, b
      001E44 EE 80                 7199 	xor	a, #0x80
      001E46 D6 81                 7200 	sub	a, #0x81
      001E48 38 0F                 7201 	jr	C, 00133$
                                   7202 ;src/main.c:718: bgX = bgX % 256;
      001E4A AF                    7203 	xor	a, a
      001E4B 3C                    7204 	inc	a
      001E4C F5                    7205 	push	af
      001E4D C5                    7206 	push	bc
      001E4E CDr00r00              7207 	call	__modsint
      001E51 E8 04                 7208 	add	sp, #4
      001E53 21r9Dr00              7209 	ld	hl, #_bgX
      001E56 7B                    7210 	ld	a, e
      001E57 22                    7211 	ld	(hl+), a
      001E58 72                    7212 	ld	(hl), d
      001E59                       7213 00133$:
                                   7214 ;src/main.c:720: if (bgX < 0) {
      001E59 21r9Dr00              7215 	ld	hl, #_bgX
      001E5C 2A                    7216 	ld	a, (hl+)
      001E5D 4F                    7217 	ld	c, a
      001E5E 46                    7218 	ld	b, (hl)
      001E5F CB 78                 7219 	bit	7, b
      001E61 28 15                 7220 	jr	Z, 00135$
                                   7221 ;src/main.c:721: bgX = 255 - (bgX % 256);
      001E63 AF                    7222 	xor	a, a
      001E64 3C                    7223 	inc	a
      001E65 F5                    7224 	push	af
      001E66 C5                    7225 	push	bc
      001E67 CDr00r00              7226 	call	__modsint
      001E6A E8 04                 7227 	add	sp, #4
      001E6C 3E FF                 7228 	ld	a, #0xff
      001E6E 93                    7229 	sub	a, e
      001E6F 4F                    7230 	ld	c, a
      001E70 9F                    7231 	sbc	a, a
      001E71 92                    7232 	sub	a, d
      001E72 21r9Dr00              7233 	ld	hl, #_bgX
      001E75 71                    7234 	ld	(hl), c
      001E76 23                    7235 	inc	hl
      001E77 77                    7236 	ld	(hl), a
      001E78                       7237 00135$:
                                   7238 ;src/main.c:723: if (bgY >= 256) {
      001E78 21r9Fr00              7239 	ld	hl, #_bgY
      001E7B 2A                    7240 	ld	a, (hl+)
      001E7C 4F                    7241 	ld	c, a
      001E7D 46                    7242 	ld	b, (hl)
      001E7E 78                    7243 	ld	a, b
      001E7F EE 80                 7244 	xor	a, #0x80
      001E81 D6 81                 7245 	sub	a, #0x81
      001E83 38 0F                 7246 	jr	C, 00137$
                                   7247 ;src/main.c:724: bgY = bgY % 256;
      001E85 AF                    7248 	xor	a, a
      001E86 3C                    7249 	inc	a
      001E87 F5                    7250 	push	af
      001E88 C5                    7251 	push	bc
      001E89 CDr00r00              7252 	call	__modsint
      001E8C E8 04                 7253 	add	sp, #4
      001E8E 21r9Fr00              7254 	ld	hl, #_bgY
      001E91 7B                    7255 	ld	a, e
      001E92 22                    7256 	ld	(hl+), a
      001E93 72                    7257 	ld	(hl), d
      001E94                       7258 00137$:
                                   7259 ;src/main.c:726: if (bgY < 0) {
      001E94 21r9Fr00              7260 	ld	hl, #_bgY
      001E97 2A                    7261 	ld	a, (hl+)
      001E98 4F                    7262 	ld	c, a
      001E99 46                    7263 	ld	b, (hl)
      001E9A CB 78                 7264 	bit	7, b
      001E9C 28 15                 7265 	jr	Z, 00139$
                                   7266 ;src/main.c:727: bgY = 255 - (bgY % 256);
      001E9E AF                    7267 	xor	a, a
      001E9F 3C                    7268 	inc	a
      001EA0 F5                    7269 	push	af
      001EA1 C5                    7270 	push	bc
      001EA2 CDr00r00              7271 	call	__modsint
      001EA5 E8 04                 7272 	add	sp, #4
      001EA7 3E FF                 7273 	ld	a, #0xff
      001EA9 93                    7274 	sub	a, e
      001EAA 4F                    7275 	ld	c, a
      001EAB 9F                    7276 	sbc	a, a
      001EAC 92                    7277 	sub	a, d
      001EAD 21r9Fr00              7278 	ld	hl, #_bgY
      001EB0 71                    7279 	ld	(hl), c
      001EB1 23                    7280 	inc	hl
      001EB2 77                    7281 	ld	(hl), a
      001EB3                       7282 00139$:
                                   7283 ;src/main.c:730: move_bkg(bgX, bgY);
      001EB3 21r9Fr00              7284 	ld	hl, #_bgY
      001EB6 4E                    7285 	ld	c, (hl)
      001EB7 FAr9Dr00              7286 	ld	a, (#_bgX)
      001EBA E0r00                 7287 	ldh	(_SCX_REG + 0), a
                                   7288 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001EBC 79                    7289 	ld	a, c
      001EBD E0r00                 7290 	ldh	(_SCY_REG + 0), a
                                   7291 ;src/main.c:733: if (ySpeed > 0) ySpeed--;
      001EBF 21r96r00              7292 	ld	hl, #_ySpeed
      001EC2 5E                    7293 	ld	e, (hl)
      001EC3 AF                    7294 	xor	a, a
      001EC4 57                    7295 	ld	d, a
      001EC5 96                    7296 	sub	a, (hl)
      001EC6 CB 7B                 7297 	bit	7, e
      001EC8 28 07                 7298 	jr	Z, 00355$
      001ECA CB 7A                 7299 	bit	7, d
      001ECC 20 08                 7300 	jr	NZ, 00356$
      001ECE BF                    7301 	cp	a, a
      001ECF 18 05                 7302 	jr	00356$
      001ED1                       7303 00355$:
      001ED1 CB 7A                 7304 	bit	7, d
      001ED3 28 01                 7305 	jr	Z, 00356$
      001ED5 37                    7306 	scf
      001ED6                       7307 00356$:
      001ED6 30 04                 7308 	jr	NC, 00141$
      001ED8 21r96r00              7309 	ld	hl, #_ySpeed
      001EDB 35                    7310 	dec	(hl)
      001EDC                       7311 00141$:
                                   7312 ;src/main.c:734: if (ySpeed < 0) ySpeed++;
      001EDC 21r96r00              7313 	ld	hl, #_ySpeed
      001EDF CB 7E                 7314 	bit	7, (hl)
      001EE1 28 01                 7315 	jr	Z, 00143$
      001EE3 34                    7316 	inc	(hl)
      001EE4                       7317 00143$:
                                   7318 ;src/main.c:735: if (xSpeed > 0) xSpeed--;
      001EE4 21r95r00              7319 	ld	hl, #_xSpeed
      001EE7 5E                    7320 	ld	e, (hl)
      001EE8 AF                    7321 	xor	a, a
      001EE9 57                    7322 	ld	d, a
      001EEA 96                    7323 	sub	a, (hl)
      001EEB CB 7B                 7324 	bit	7, e
      001EED 28 07                 7325 	jr	Z, 00357$
      001EEF CB 7A                 7326 	bit	7, d
      001EF1 20 08                 7327 	jr	NZ, 00358$
      001EF3 BF                    7328 	cp	a, a
      001EF4 18 05                 7329 	jr	00358$
      001EF6                       7330 00357$:
      001EF6 CB 7A                 7331 	bit	7, d
      001EF8 28 01                 7332 	jr	Z, 00358$
      001EFA 37                    7333 	scf
      001EFB                       7334 00358$:
      001EFB 30 04                 7335 	jr	NC, 00145$
      001EFD 21r95r00              7336 	ld	hl, #_xSpeed
      001F00 35                    7337 	dec	(hl)
      001F01                       7338 00145$:
                                   7339 ;src/main.c:736: if (xSpeed < 0) xSpeed++;
      001F01 21r95r00              7340 	ld	hl, #_xSpeed
      001F04 CB 7E                 7341 	bit	7, (hl)
      001F06 28 01                 7342 	jr	Z, 00163$
      001F08 34                    7343 	inc	(hl)
      001F09                       7344 00163$:
                                   7345 ;src/main.c:740: }
      001F09 E8 08                 7346 	add	sp, #8
      001F0B C9                    7347 	ret
                                   7348 ;src/main.c:742: void takeDamage(int16_t amount) {
                                   7349 ;	---------------------------------
                                   7350 ; Function takeDamage
                                   7351 ; ---------------------------------
      001F0C                       7352 _takeDamage::
      001F0C 3B                    7353 	dec	sp
                                   7354 ;src/main.c:743: if (amount > shield) {
      001F0D FArF7r00              7355 	ld	a, (#_shield)
      001F10 4F                    7356 	ld	c, a
      001F11 07                    7357 	rlca
      001F12 9F                    7358 	sbc	a, a
      001F13 47                    7359 	ld	b, a
                                   7360 ;src/main.c:745: hull -= (amount - shield);
      001F14 F8 03                 7361 	ldhl	sp,	#3
      001F16 7E                    7362 	ld	a, (hl)
      001F17 F8 00                 7363 	ldhl	sp,	#0
      001F19 77                    7364 	ld	(hl), a
                                   7365 ;src/main.c:743: if (amount > shield) {
      001F1A F8 03                 7366 	ldhl	sp,	#3
      001F1C 79                    7367 	ld	a, c
      001F1D 96                    7368 	sub	a, (hl)
      001F1E 23                    7369 	inc	hl
      001F1F 78                    7370 	ld	a, b
      001F20 9E                    7371 	sbc	a, (hl)
      001F21 78                    7372 	ld	a, b
      001F22 57                    7373 	ld	d, a
      001F23 CB 7E                 7374 	bit	7, (hl)
      001F25 28 07                 7375 	jr	Z, 00111$
      001F27 CB 7A                 7376 	bit	7, d
      001F29 20 08                 7377 	jr	NZ, 00112$
      001F2B BF                    7378 	cp	a, a
      001F2C 18 05                 7379 	jr	00112$
      001F2E                       7380 00111$:
      001F2E CB 7A                 7381 	bit	7, d
      001F30 28 01                 7382 	jr	Z, 00112$
      001F32 37                    7383 	scf
      001F33                       7384 00112$:
      001F33 30 10                 7385 	jr	NC, 00102$
                                   7386 ;src/main.c:744: shield = 0;
      001F35 21rF7r00              7387 	ld	hl, #_shield
      001F38 36 00                 7388 	ld	(hl), #0x00
                                   7389 ;src/main.c:745: hull -= (amount - shield);
      001F3A FArF6r00              7390 	ld	a, (#_hull)
      001F3D F8 00                 7391 	ldhl	sp,	#0
      001F3F 96                    7392 	sub	a, (hl)
      001F40 EArF6r00              7393 	ld	(#_hull),a
      001F43 18 09                 7394 	jr	00104$
      001F45                       7395 00102$:
                                   7396 ;src/main.c:748: shield -= amount;
      001F45 FArF7r00              7397 	ld	a, (#_shield)
      001F48 F8 00                 7398 	ldhl	sp,	#0
      001F4A 96                    7399 	sub	a, (hl)
      001F4B EArF7r00              7400 	ld	(#_shield),a
      001F4E                       7401 00104$:
                                   7402 ;src/main.c:750: }
      001F4E 33                    7403 	inc	sp
      001F4F C9                    7404 	ret
                                   7405 ;src/main.c:752: void spawnPickup(int16_t x, int16_t y) {
                                   7406 ;	---------------------------------
                                   7407 ; Function spawnPickup
                                   7408 ; ---------------------------------
      001F50                       7409 _spawnPickup::
                                   7410 ;src/main.c:753: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      001F50 CDr00r00              7411 	call	_rand
      001F53 7B                    7412 	ld	a, e
      001F54 E6 0F                 7413 	and	a, #0x0f
      001F56 C0                    7414 	ret	NZ
                                   7415 ;src/main.c:754: if (spawn == 0) {
                                   7416 ;src/main.c:755: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      001F57 CDr00r00              7417 	call	_rand
      001F5A 7B                    7418 	ld	a, e
      001F5B E6 03                 7419 	and	a, #0x03
                                   7420 ;src/main.c:756: if (type == 0) {
      001F5D 5F                    7421 	ld	e,a
      001F5E B7                    7422 	or	a, a
      001F5F 20 13                 7423 	jr	NZ, 00106$
                                   7424 ;src/main.c:757: pickup = health;
      001F61 11 09 00              7425 	ld	de, #0x0009
      001F64 D5                    7426 	push	de
      001F65 11r1Ar07              7427 	ld	de, #_health
      001F68 D5                    7428 	push	de
      001F69 11rFAr00              7429 	ld	de, #_pickup
      001F6C D5                    7430 	push	de
      001F6D CDr00r00              7431 	call	___memcpy
      001F70 E8 06                 7432 	add	sp, #6
      001F72 18 31                 7433 	jr	00107$
      001F74                       7434 00106$:
                                   7435 ;src/main.c:759: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      001F74 1D                    7436 	dec	e
      001F75 20 1D                 7437 	jr	NZ, 00102$
      001F77 21rA3r0B              7438 	ld	hl, #_MAXGUNLEVEL
      001F7A 4E                    7439 	ld	c, (hl)
      001F7B FArA6r00              7440 	ld	a, (#_gunLevel)
      001F7E 91                    7441 	sub	a, c
      001F7F 30 13                 7442 	jr	NC, 00102$
                                   7443 ;src/main.c:760: pickup = upgrade;
      001F81 11 09 00              7444 	ld	de, #0x0009
      001F84 D5                    7445 	push	de
      001F85 11r08r07              7446 	ld	de, #_upgrade
      001F88 D5                    7447 	push	de
      001F89 11rFAr00              7448 	ld	de, #_pickup
      001F8C D5                    7449 	push	de
      001F8D CDr00r00              7450 	call	___memcpy
      001F90 E8 06                 7451 	add	sp, #6
      001F92 18 11                 7452 	jr	00107$
      001F94                       7453 00102$:
                                   7454 ;src/main.c:763: pickup = ammo;
      001F94 01r11r07              7455 	ld	bc, #_ammo
      001F97 11rFAr00              7456 	ld	de, #_pickup
      001F9A 21 09 00              7457 	ld	hl, #0x0009
      001F9D E5                    7458 	push	hl
      001F9E C5                    7459 	push	bc
      001F9F D5                    7460 	push	de
      001FA0 CDr00r00              7461 	call	___memcpy
      001FA3 E8 06                 7462 	add	sp, #6
      001FA5                       7463 00107$:
                                   7464 ;src/main.c:765: pickup.active = 1;
      001FA5 21rFFr00              7465 	ld	hl, #(_pickup + 5)
      001FA8 36 01                 7466 	ld	(hl), #0x01
                                   7467 ;src/main.c:767: pickup.x = x;
      001FAA 11rFBr00              7468 	ld	de, #(_pickup + 1)
      001FAD F8 02                 7469 	ldhl	sp,	#2
      001FAF 2A                    7470 	ld	a, (hl+)
      001FB0 12                    7471 	ld	(de), a
      001FB1 13                    7472 	inc	de
                                   7473 ;src/main.c:768: pickup.y = y;
      001FB2 2A                    7474 	ld	a, (hl+)
      001FB3 12                    7475 	ld	(de), a
      001FB4 11rFDr00              7476 	ld	de, #(_pickup + 3)
      001FB7 2A                    7477 	ld	a, (hl+)
      001FB8 12                    7478 	ld	(de), a
      001FB9 13                    7479 	inc	de
      001FBA 7E                    7480 	ld	a, (hl)
      001FBB 12                    7481 	ld	(de), a
                                   7482 ;src/main.c:770: set_sprite_tile(3, pickup.tile); //0x7f
      001FBC 21r02r01              7483 	ld	hl, #(_pickup + 8)
      001FBF 4E                    7484 	ld	c, (hl)
                                   7485 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FC0 21r0Er00              7486 	ld	hl, #(_shadow_OAM + 14)
      001FC3 71                    7487 	ld	(hl), c
                                   7488 ;src/main.c:770: set_sprite_tile(3, pickup.tile); //0x7f
                                   7489 ;src/main.c:776: }
      001FC4 C9                    7490 	ret
                                   7491 ;src/main.c:778: void killEnemy(uint8_t i) {
                                   7492 ;	---------------------------------
                                   7493 ; Function killEnemy
                                   7494 ; ---------------------------------
      001FC5                       7495 _killEnemy::
      001FC5 E8 FC                 7496 	add	sp, #-4
                                   7497 ;src/main.c:779: set_sprite_tile(10+(i<<1), 0x7f);
      001FC7 F8 06                 7498 	ldhl	sp,	#6
      001FC9 7E                    7499 	ld	a, (hl)
      001FCA 87                    7500 	add	a, a
      001FCB 4F                    7501 	ld	c, a
      001FCC C6 0A                 7502 	add	a, #0x0a
                                   7503 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FCE 6F                    7504 	ld	l, a
      001FCF 11r00r00              7505 	ld	de, #_shadow_OAM+0
                                   7506 ;	spillPairReg hl
                                   7507 ;	spillPairReg hl
      001FD2 26 00                 7508 	ld	h, #0x00
                                   7509 ;	spillPairReg hl
                                   7510 ;	spillPairReg hl
      001FD4 29                    7511 	add	hl, hl
      001FD5 29                    7512 	add	hl, hl
      001FD6 19                    7513 	add	hl, de
      001FD7 23                    7514 	inc	hl
      001FD8 23                    7515 	inc	hl
      001FD9 36 7F                 7516 	ld	(hl), #0x7f
                                   7517 ;src/main.c:780: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001FDB 79                    7518 	ld	a, c
      001FDC C6 0B                 7519 	add	a, #0x0b
                                   7520 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FDE 6F                    7521 	ld	l, a
      001FDF 01r00r00              7522 	ld	bc, #_shadow_OAM+0
                                   7523 ;	spillPairReg hl
                                   7524 ;	spillPairReg hl
      001FE2 26 00                 7525 	ld	h, #0x00
                                   7526 ;	spillPairReg hl
                                   7527 ;	spillPairReg hl
      001FE4 29                    7528 	add	hl, hl
      001FE5 29                    7529 	add	hl, hl
      001FE6 09                    7530 	add	hl, bc
      001FE7 23                    7531 	inc	hl
      001FE8 23                    7532 	inc	hl
      001FE9 36 7F                 7533 	ld	(hl), #0x7f
                                   7534 ;src/main.c:782: spawnPickup(enemies[i].x, enemies[i].y);
      001FEB F8 06                 7535 	ldhl	sp,	#6
      001FED 4E                    7536 	ld	c, (hl)
      001FEE 06 00                 7537 	ld	b, #0x00
      001FF0 69                    7538 	ld	l, c
      001FF1 60                    7539 	ld	h, b
      001FF2 29                    7540 	add	hl, hl
      001FF3 29                    7541 	add	hl, hl
      001FF4 29                    7542 	add	hl, hl
      001FF5 09                    7543 	add	hl, bc
      001FF6 29                    7544 	add	hl, hl
      001FF7 01r5Ar00              7545 	ld	bc,#_enemies
      001FFA 09                    7546 	add	hl,bc
      001FFB 33                    7547 	inc	sp
      001FFC 33                    7548 	inc	sp
      001FFD 5D                    7549 	ld	e, l
      001FFE 54                    7550 	ld	d, h
      001FFF D5                    7551 	push	de
      002000 21 02 00              7552 	ld	hl, #0x0002
      002003 19                    7553 	add	hl, de
      002004 E5                    7554 	push	hl
      002005 7D                    7555 	ld	a, l
      002006 F8 04                 7556 	ldhl	sp,	#4
      002008 77                    7557 	ld	(hl), a
      002009 E1                    7558 	pop	hl
      00200A 7C                    7559 	ld	a, h
      00200B F8 03                 7560 	ldhl	sp,	#3
      00200D 32                    7561 	ld	(hl-), a
      00200E 2A                    7562 	ld	a, (hl+)
      00200F 5F                    7563 	ld	e, a
      002010 56                    7564 	ld	d, (hl)
      002011 1A                    7565 	ld	a, (de)
      002012 4F                    7566 	ld	c, a
      002013 13                    7567 	inc	de
      002014 1A                    7568 	ld	a, (de)
      002015 47                    7569 	ld	b, a
      002016 D1                    7570 	pop	de
      002017 D5                    7571 	push	de
      002018 1A                    7572 	ld	a, (de)
      002019 6F                    7573 	ld	l, a
                                   7574 ;	spillPairReg hl
                                   7575 ;	spillPairReg hl
      00201A 13                    7576 	inc	de
      00201B 1A                    7577 	ld	a, (de)
      00201C 67                    7578 	ld	h, a
                                   7579 ;	spillPairReg hl
                                   7580 ;	spillPairReg hl
      00201D C5                    7581 	push	bc
      00201E E5                    7582 	push	hl
      00201F CDr50r1F              7583 	call	_spawnPickup
      002022 E8 04                 7584 	add	sp, #4
                                   7585 ;src/main.c:784: enemies[i].alive = 0;
      002024 D1                    7586 	pop	de
      002025 D5                    7587 	push	de
      002026 21 09 00              7588 	ld	hl, #0x0009
      002029 19                    7589 	add	hl, de
      00202A 4D                    7590 	ld	c, l
      00202B 44                    7591 	ld	b, h
      00202C AF                    7592 	xor	a, a
      00202D 02                    7593 	ld	(bc), a
                                   7594 ;src/main.c:785: enemies[i].visible = 0;
      00202E D1                    7595 	pop	de
      00202F D5                    7596 	push	de
      002030 21 0A 00              7597 	ld	hl, #0x000a
      002033 19                    7598 	add	hl, de
      002034 4D                    7599 	ld	c, l
      002035 44                    7600 	ld	b, h
      002036 AF                    7601 	xor	a, a
      002037 02                    7602 	ld	(bc), a
                                   7603 ;src/main.c:786: playSound(0);
      002038 AF                    7604 	xor	a, a
      002039 F5                    7605 	push	af
      00203A 33                    7606 	inc	sp
      00203B CDr9Br0F              7607 	call	_playSound
      00203E 33                    7608 	inc	sp
                                   7609 ;src/main.c:787: incrementScore();
      00203F CDr58r0D              7610 	call	_incrementScore
                                   7611 ;src/main.c:788: updateScore();
      002042 CDrBAr0C              7612 	call	_updateScore
                                   7613 ;src/main.c:794: explosions[oldestEx].visible = 1;
      002045 21rBBr00              7614 	ld	hl, #_oldestEx
      002048 4E                    7615 	ld	c, (hl)
      002049 06 00                 7616 	ld	b, #0x00
      00204B 69                    7617 	ld	l, c
      00204C 60                    7618 	ld	h, b
      00204D 29                    7619 	add	hl, hl
      00204E 09                    7620 	add	hl, bc
      00204F 29                    7621 	add	hl, hl
      002050 01r03r01              7622 	ld	bc,#_explosions
      002053 09                    7623 	add	hl,bc
      002054 36 01                 7624 	ld	(hl), #0x01
                                   7625 ;src/main.c:795: explosions[oldestEx].x = enemies[i].x;
      002056 21rBBr00              7626 	ld	hl, #_oldestEx
      002059 4E                    7627 	ld	c, (hl)
      00205A 06 00                 7628 	ld	b, #0x00
      00205C 69                    7629 	ld	l, c
      00205D 60                    7630 	ld	h, b
      00205E 29                    7631 	add	hl, hl
      00205F 09                    7632 	add	hl, bc
      002060 29                    7633 	add	hl, hl
      002061 01r03r01              7634 	ld	bc,#_explosions
      002064 09                    7635 	add	hl,bc
      002065 23                    7636 	inc	hl
      002066 4D                    7637 	ld	c, l
      002067 44                    7638 	ld	b, h
      002068 D1                    7639 	pop	de
      002069 D5                    7640 	push	de
      00206A 1A                    7641 	ld	a, (de)
      00206B 02                    7642 	ld	(bc), a
                                   7643 ;src/main.c:796: explosions[oldestEx].y = enemies[i].y;
      00206C 21rBBr00              7644 	ld	hl, #_oldestEx
      00206F 4E                    7645 	ld	c, (hl)
      002070 06 00                 7646 	ld	b, #0x00
      002072 69                    7647 	ld	l, c
      002073 60                    7648 	ld	h, b
      002074 29                    7649 	add	hl, hl
      002075 09                    7650 	add	hl, bc
      002076 29                    7651 	add	hl, hl
      002077 01r03r01              7652 	ld	bc,#_explosions
      00207A 09                    7653 	add	hl,bc
      00207B 23                    7654 	inc	hl
      00207C 23                    7655 	inc	hl
      00207D 4D                    7656 	ld	c, l
      00207E 44                    7657 	ld	b, h
      00207F F8 02                 7658 	ldhl	sp,#2
      002081 2A                    7659 	ld	a, (hl+)
      002082 5F                    7660 	ld	e, a
      002083 56                    7661 	ld	d, (hl)
      002084 1A                    7662 	ld	a, (de)
      002085 02                    7663 	ld	(bc), a
                                   7664 ;src/main.c:799: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      002086 CDr00r00              7665 	call	_rand
      002089 7B                    7666 	ld	a, e
      00208A 21rA7r0B              7667 	ld	hl, #_exTileCount
      00208D 46                    7668 	ld	b, (hl)
      00208E C5                    7669 	push	bc
      00208F 33                    7670 	inc	sp
      002090 F5                    7671 	push	af
      002091 33                    7672 	inc	sp
      002092 CDr00r00              7673 	call	__moduchar
      002095 E1                    7674 	pop	hl
      002096 F8 03                 7675 	ldhl	sp,	#3
      002098 73                    7676 	ld	(hl), e
                                   7677 ;src/main.c:801: explosions[oldestEx].tile = exTiles[tileNum];
      002099 21rBBr00              7678 	ld	hl, #_oldestEx
      00209C 4E                    7679 	ld	c, (hl)
      00209D 06 00                 7680 	ld	b, #0x00
      00209F 69                    7681 	ld	l, c
      0020A0 60                    7682 	ld	h, b
      0020A1 29                    7683 	add	hl, hl
      0020A2 09                    7684 	add	hl, bc
      0020A3 29                    7685 	add	hl, hl
      0020A4 01r03r01              7686 	ld	bc,#_explosions
      0020A7 09                    7687 	add	hl,bc
      0020A8 23                    7688 	inc	hl
      0020A9 23                    7689 	inc	hl
      0020AA 23                    7690 	inc	hl
      0020AB 23                    7691 	inc	hl
      0020AC 23                    7692 	inc	hl
      0020AD 4D                    7693 	ld	c, l
      0020AE 44                    7694 	ld	b, h
      0020AF 11rBCr00              7695 	ld	de, #_exTiles+0
      0020B2 F8 03                 7696 	ldhl	sp,	#3
      0020B4 6E                    7697 	ld	l, (hl)
      0020B5 26 00                 7698 	ld	h, #0x00
      0020B7 19                    7699 	add	hl, de
      0020B8 5D                    7700 	ld	e, l
      0020B9 54                    7701 	ld	d, h
      0020BA 1A                    7702 	ld	a, (de)
      0020BB 02                    7703 	ld	(bc), a
                                   7704 ;src/main.c:802: explosions[oldestEx].frame = 0;
      0020BC 21rBBr00              7705 	ld	hl, #_oldestEx
      0020BF 4E                    7706 	ld	c, (hl)
      0020C0 06 00                 7707 	ld	b, #0x00
      0020C2 69                    7708 	ld	l, c
      0020C3 60                    7709 	ld	h, b
      0020C4 29                    7710 	add	hl, hl
      0020C5 09                    7711 	add	hl, bc
      0020C6 29                    7712 	add	hl, hl
      0020C7 01r03r01              7713 	ld	bc,#_explosions
      0020CA 09                    7714 	add	hl,bc
      0020CB 23                    7715 	inc	hl
      0020CC 23                    7716 	inc	hl
      0020CD 23                    7717 	inc	hl
      0020CE 36 00                 7718 	ld	(hl), #0x00
                                   7719 ;src/main.c:803: explosions[oldestEx].frameCounter = 0;
      0020D0 21rBBr00              7720 	ld	hl, #_oldestEx
      0020D3 4E                    7721 	ld	c, (hl)
      0020D4 06 00                 7722 	ld	b, #0x00
      0020D6 69                    7723 	ld	l, c
      0020D7 60                    7724 	ld	h, b
      0020D8 29                    7725 	add	hl, hl
      0020D9 09                    7726 	add	hl, bc
      0020DA 29                    7727 	add	hl, hl
      0020DB 01r03r01              7728 	ld	bc,#_explosions
      0020DE 09                    7729 	add	hl,bc
      0020DF 01 04 00              7730 	ld	bc, #0x0004
      0020E2 09                    7731 	add	hl, bc
      0020E3 36 00                 7732 	ld	(hl), #0x00
                                   7733 ;src/main.c:805: set_sprite_tile(20 + 2*oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      0020E5 21rBBr00              7734 	ld	hl, #_oldestEx
      0020E8 4E                    7735 	ld	c, (hl)
      0020E9 06 00                 7736 	ld	b, #0x00
      0020EB 69                    7737 	ld	l, c
      0020EC 60                    7738 	ld	h, b
      0020ED 29                    7739 	add	hl, hl
      0020EE 09                    7740 	add	hl, bc
      0020EF 29                    7741 	add	hl, hl
      0020F0 01r03r01              7742 	ld	bc,#_explosions
      0020F3 09                    7743 	add	hl,bc
      0020F4 5D                    7744 	ld	e, l
      0020F5 54                    7745 	ld	d, h
      0020F6 21 05 00              7746 	ld	hl, #0x0005
      0020F9 19                    7747 	add	hl, de
      0020FA 4E                    7748 	ld	c, (hl)
      0020FB 13                    7749 	inc	de
      0020FC 13                    7750 	inc	de
      0020FD 13                    7751 	inc	de
      0020FE 1A                    7752 	ld	a, (de)
      0020FF 87                    7753 	add	a, a
      002100 81                    7754 	add	a, c
      002101 4F                    7755 	ld	c, a
      002102 FArBBr00              7756 	ld	a, (#_oldestEx)
      002105 87                    7757 	add	a, a
      002106 C6 14                 7758 	add	a, #0x14
                                   7759 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002108 6F                    7760 	ld	l, a
      002109 11r00r00              7761 	ld	de, #_shadow_OAM+0
                                   7762 ;	spillPairReg hl
                                   7763 ;	spillPairReg hl
      00210C 26 00                 7764 	ld	h, #0x00
                                   7765 ;	spillPairReg hl
                                   7766 ;	spillPairReg hl
      00210E 29                    7767 	add	hl, hl
      00210F 29                    7768 	add	hl, hl
      002110 19                    7769 	add	hl, de
      002111 23                    7770 	inc	hl
      002112 23                    7771 	inc	hl
      002113 71                    7772 	ld	(hl), c
                                   7773 ;src/main.c:806: set_sprite_tile(21 + 2*oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      002114 21rBBr00              7774 	ld	hl, #_oldestEx
      002117 4E                    7775 	ld	c, (hl)
      002118 06 00                 7776 	ld	b, #0x00
      00211A 69                    7777 	ld	l, c
      00211B 60                    7778 	ld	h, b
      00211C 29                    7779 	add	hl, hl
      00211D 09                    7780 	add	hl, bc
      00211E 29                    7781 	add	hl, hl
      00211F 01r03r01              7782 	ld	bc,#_explosions
      002122 09                    7783 	add	hl,bc
      002123 5D                    7784 	ld	e, l
      002124 54                    7785 	ld	d, h
      002125 21 05 00              7786 	ld	hl, #0x0005
      002128 19                    7787 	add	hl, de
      002129 4E                    7788 	ld	c, (hl)
      00212A 13                    7789 	inc	de
      00212B 13                    7790 	inc	de
      00212C 13                    7791 	inc	de
      00212D 1A                    7792 	ld	a, (de)
      00212E 87                    7793 	add	a, a
      00212F 81                    7794 	add	a, c
      002130 C6 02                 7795 	add	a, #0x02
      002132 4F                    7796 	ld	c, a
      002133 FArBBr00              7797 	ld	a, (#_oldestEx)
      002136 87                    7798 	add	a, a
      002137 C6 15                 7799 	add	a, #0x15
                                   7800 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002139 6F                    7801 	ld	l, a
      00213A 11r00r00              7802 	ld	de, #_shadow_OAM+0
                                   7803 ;	spillPairReg hl
                                   7804 ;	spillPairReg hl
      00213D 26 00                 7805 	ld	h, #0x00
                                   7806 ;	spillPairReg hl
                                   7807 ;	spillPairReg hl
      00213F 29                    7808 	add	hl, hl
      002140 29                    7809 	add	hl, hl
      002141 19                    7810 	add	hl, de
      002142 23                    7811 	inc	hl
      002143 23                    7812 	inc	hl
      002144 71                    7813 	ld	(hl), c
                                   7814 ;src/main.c:807: move_sprite(20 + 2*oldestEx, explosions[oldestEx].x, explosions[oldestEx].y+8);
      002145 21rBBr00              7815 	ld	hl, #_oldestEx
      002148 4E                    7816 	ld	c, (hl)
      002149 06 00                 7817 	ld	b, #0x00
      00214B 69                    7818 	ld	l, c
      00214C 60                    7819 	ld	h, b
      00214D 29                    7820 	add	hl, hl
      00214E 09                    7821 	add	hl, bc
      00214F 29                    7822 	add	hl, hl
      002150 01r03r01              7823 	ld	bc,#_explosions
      002153 09                    7824 	add	hl,bc
      002154 4D                    7825 	ld	c, l
      002155 44                    7826 	ld	b, h
      002156 23                    7827 	inc	hl
      002157 03                    7828 	inc	bc
      002158 03                    7829 	inc	bc
      002159 0A                    7830 	ld	a, (bc)
      00215A C6 08                 7831 	add	a, #0x08
      00215C 47                    7832 	ld	b, a
      00215D 4E                    7833 	ld	c, (hl)
      00215E FArBBr00              7834 	ld	a, (#_oldestEx)
      002161 87                    7835 	add	a, a
      002162 C6 14                 7836 	add	a, #0x14
                                   7837 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002164 6F                    7838 	ld	l, a
                                   7839 ;	spillPairReg hl
                                   7840 ;	spillPairReg hl
      002165 26 00                 7841 	ld	h, #0x00
                                   7842 ;	spillPairReg hl
                                   7843 ;	spillPairReg hl
      002167 29                    7844 	add	hl, hl
      002168 29                    7845 	add	hl, hl
      002169 11r00r00              7846 	ld	de, #_shadow_OAM
      00216C 19                    7847 	add	hl, de
                                   7848 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00216D 78                    7849 	ld	a, b
      00216E 22                    7850 	ld	(hl+), a
      00216F 71                    7851 	ld	(hl), c
                                   7852 ;src/main.c:808: move_sprite(21 + 2*oldestEx, explosions[oldestEx].x+8, explosions[oldestEx].y+8);
      002170 21rBBr00              7853 	ld	hl, #_oldestEx
      002173 4E                    7854 	ld	c, (hl)
      002174 06 00                 7855 	ld	b, #0x00
      002176 69                    7856 	ld	l, c
      002177 60                    7857 	ld	h, b
      002178 29                    7858 	add	hl, hl
      002179 09                    7859 	add	hl, bc
      00217A 29                    7860 	add	hl, hl
      00217B 01r03r01              7861 	ld	bc,#_explosions
      00217E 09                    7862 	add	hl,bc
      00217F 4D                    7863 	ld	c, l
      002180 44                    7864 	ld	b, h
      002181 23                    7865 	inc	hl
      002182 03                    7866 	inc	bc
      002183 03                    7867 	inc	bc
      002184 0A                    7868 	ld	a, (bc)
      002185 C6 08                 7869 	add	a, #0x08
      002187 47                    7870 	ld	b, a
      002188 7E                    7871 	ld	a, (hl)
      002189 C6 08                 7872 	add	a, #0x08
      00218B 4F                    7873 	ld	c, a
      00218C FArBBr00              7874 	ld	a, (#_oldestEx)
      00218F 87                    7875 	add	a, a
      002190 C6 15                 7876 	add	a, #0x15
                                   7877 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002192 6F                    7878 	ld	l, a
                                   7879 ;	spillPairReg hl
                                   7880 ;	spillPairReg hl
      002193 26 00                 7881 	ld	h, #0x00
                                   7882 ;	spillPairReg hl
                                   7883 ;	spillPairReg hl
      002195 29                    7884 	add	hl, hl
      002196 29                    7885 	add	hl, hl
      002197 11r00r00              7886 	ld	de, #_shadow_OAM
      00219A 19                    7887 	add	hl, de
                                   7888 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00219B 78                    7889 	ld	a, b
      00219C 22                    7890 	ld	(hl+), a
      00219D 71                    7891 	ld	(hl), c
                                   7892 ;src/main.c:810: oldestEx++;
      00219E 21rBBr00              7893 	ld	hl, #_oldestEx
      0021A1 34                    7894 	inc	(hl)
                                   7895 ;src/main.c:811: if (oldestEx >= exCount) {
      0021A2 21rA5r0B              7896 	ld	hl, #_exCount
      0021A5 4E                    7897 	ld	c, (hl)
      0021A6 21rBBr00              7898 	ld	hl, #_oldestEx
      0021A9 7E                    7899 	ld	a, (hl)
      0021AA 91                    7900 	sub	a, c
      0021AB 38 02                 7901 	jr	C, 00109$
                                   7902 ;src/main.c:812: oldestEx = 0;
      0021AD 36 00                 7903 	ld	(hl), #0x00
      0021AF                       7904 00109$:
                                   7905 ;src/main.c:816: }
      0021AF E8 04                 7906 	add	sp, #4
      0021B1 C9                    7907 	ret
                                   7908 ;src/main.c:818: void checkCollision() {
                                   7909 ;	---------------------------------
                                   7910 ; Function checkCollision
                                   7911 ; ---------------------------------
      0021B2                       7912 _checkCollision::
      0021B2 E8 E7                 7913 	add	sp, #-25
                                   7914 ;src/main.c:825: struct Enemy *eptr = enemies + enemyCollisionCount;
      0021B4 21rA5r00              7915 	ld	hl, #_enemyCollisionCount
      0021B7 4E                    7916 	ld	c, (hl)
      0021B8 06 00                 7917 	ld	b, #0x00
      0021BA 69                    7918 	ld	l, c
      0021BB 60                    7919 	ld	h, b
      0021BC 29                    7920 	add	hl, hl
      0021BD 29                    7921 	add	hl, hl
      0021BE 29                    7922 	add	hl, hl
      0021BF 09                    7923 	add	hl, bc
      0021C0 29                    7924 	add	hl, hl
      0021C1 01r5Ar00              7925 	ld	bc,#_enemies
      0021C4 09                    7926 	add	hl,bc
      0021C5 4D                    7927 	ld	c, l
      0021C6 7C                    7928 	ld	a, h
      0021C7 F8 00                 7929 	ldhl	sp,	#0
      0021C9 71                    7930 	ld	(hl), c
      0021CA 23                    7931 	inc	hl
      0021CB 77                    7932 	ld	(hl), a
                                   7933 ;src/main.c:826: uint8_t i = enemyCollisionCount;
      0021CC FArA5r00              7934 	ld	a, (#_enemyCollisionCount)
      0021CF F8 02                 7935 	ldhl	sp,	#2
      0021D1 77                    7936 	ld	(hl), a
                                   7937 ;src/main.c:828: if (eptr->visible && eptr->alive) {
      0021D2 D1                    7938 	pop	de
      0021D3 D5                    7939 	push	de
      0021D4 21 0A 00              7940 	ld	hl, #0x000a
      0021D7 19                    7941 	add	hl, de
      0021D8 4D                    7942 	ld	c, l
      0021D9 44                    7943 	ld	b, h
      0021DA 0A                    7944 	ld	a, (bc)
      0021DB B7                    7945 	or	a, a
      0021DC CAr6Cr26              7946 	jp	Z, 00137$
      0021DF D1                    7947 	pop	de
      0021E0 D5                    7948 	push	de
      0021E1 21 09 00              7949 	ld	hl, #0x0009
      0021E4 19                    7950 	add	hl, de
      0021E5 4D                    7951 	ld	c, l
      0021E6 44                    7952 	ld	b, h
      0021E7 0A                    7953 	ld	a, (bc)
      0021E8 B7                    7954 	or	a, a
      0021E9 CAr6Cr26              7955 	jp	Z, 00137$
                                   7956 ;src/main.c:830: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      0021EC D1                    7957 	pop	de
      0021ED D5                    7958 	push	de
      0021EE 21 08 00              7959 	ld	hl, #0x0008
      0021F1 19                    7960 	add	hl, de
      0021F2 4D                    7961 	ld	c, l
      0021F3 44                    7962 	ld	b, h
      0021F4 0A                    7963 	ld	a, (bc)
      0021F5 4F                    7964 	ld	c, a
      0021F6 3D                    7965 	dec	a
      0021F7 3E 01                 7966 	ld	a, #0x01
      0021F9 28 01                 7967 	jr	Z, 00343$
      0021FB AF                    7968 	xor	a, a
      0021FC                       7969 00343$:
      0021FC F8 15                 7970 	ldhl	sp,	#21
      0021FE 77                    7971 	ld	(hl), a
      0021FF FAr9Br00              7972 	ld	a, (#_playerDrawX)
      002202 F8 16                 7973 	ldhl	sp,	#22
      002204 77                    7974 	ld	(hl), a
                                   7975 ;src/main.c:831: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002205 79                    7976 	ld	a, c
      002206 D6 02                 7977 	sub	a, #0x02
      002208 3E 01                 7978 	ld	a, #0x01
      00220A 28 01                 7979 	jr	Z, 00345$
      00220C AF                    7980 	xor	a, a
      00220D                       7981 00345$:
      00220D F8 17                 7982 	ldhl	sp,	#23
                                   7983 ;src/main.c:830: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00220F 32                    7984 	ld	(hl-), a
      002210 2B                    7985 	dec	hl
      002211 7E                    7986 	ld	a, (hl)
      002212 B7                    7987 	or	a, a
      002213 28 2E                 7988 	jr	Z, 00110$
      002215 D1                    7989 	pop	de
      002216 D5                    7990 	push	de
      002217 1A                    7991 	ld	a, (de)
      002218 F8 18                 7992 	ldhl	sp,	#24
      00221A 77                    7993 	ld	(hl), a
      00221B 3A                    7994 	ld	a, (hl-)
      00221C 2B                    7995 	dec	hl
      00221D 96                    7996 	sub	a, (hl)
      00221E 23                    7997 	inc	hl
      00221F 23                    7998 	inc	hl
      002220 77                    7999 	ld	(hl), a
                                   8000 ;src/main.c:364: if (value >= 0) return value;
      002221 CB 7E                 8001 	bit	7, (hl)
      002223 28 05                 8002 	jr	Z, 00145$
                                   8003 ;src/main.c:365: else return - value;
      002225 AF                    8004 	xor	a, a
      002226 F8 18                 8005 	ldhl	sp,	#24
      002228 96                    8006 	sub	a, (hl)
      002229 77                    8007 	ld	(hl), a
                                   8008 ;src/main.c:830: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00222A                       8009 00145$:
      00222A F8 18                 8010 	ldhl	sp,	#24
      00222C 5E                    8011 	ld	e, (hl)
      00222D 3E 08                 8012 	ld	a,#0x08
      00222F 57                    8013 	ld	d,a
      002230 96                    8014 	sub	a, (hl)
      002231 CB 7B                 8015 	bit	7, e
      002233 28 07                 8016 	jr	Z, 00346$
      002235 CB 7A                 8017 	bit	7, d
      002237 20 08                 8018 	jr	NZ, 00347$
      002239 BF                    8019 	cp	a, a
      00223A 18 05                 8020 	jr	00347$
      00223C                       8021 00346$:
      00223C CB 7A                 8022 	bit	7, d
      00223E 28 01                 8023 	jr	Z, 00347$
      002240 37                    8024 	scf
      002241                       8025 00347$:
      002241 30 33                 8026 	jr	NC, 00106$
      002243                       8027 00110$:
                                   8028 ;src/main.c:831: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002243 F8 17                 8029 	ldhl	sp,	#23
      002245 7E                    8030 	ld	a, (hl)
      002246 B7                    8031 	or	a, a
      002247 CAr2Ar23              8032 	jp	Z, 00107$
      00224A 2B                    8033 	dec	hl
      00224B D1                    8034 	pop	de
      00224C D5                    8035 	push	de
      00224D 1A                    8036 	ld	a, (de)
      00224E 96                    8037 	sub	a, (hl)
      00224F 23                    8038 	inc	hl
      002250 23                    8039 	inc	hl
      002251 77                    8040 	ld	(hl), a
                                   8041 ;src/main.c:364: if (value >= 0) return value;
      002252 CB 7E                 8042 	bit	7, (hl)
      002254 28 06                 8043 	jr	Z, 00149$
                                   8044 ;src/main.c:365: else return - value;
      002256 AF                    8045 	xor	a, a
      002257 F8 18                 8046 	ldhl	sp,	#24
      002259 96                    8047 	sub	a, (hl)
      00225A 4F                    8048 	ld	c, a
      00225B 71                    8049 	ld	(hl), c
                                   8050 ;src/main.c:831: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      00225C                       8051 00149$:
      00225C F8 18                 8052 	ldhl	sp,	#24
      00225E 5E                    8053 	ld	e, (hl)
      00225F 3E 10                 8054 	ld	a,#0x10
      002261 57                    8055 	ld	d,a
      002262 96                    8056 	sub	a, (hl)
      002263 CB 7B                 8057 	bit	7, e
      002265 28 07                 8058 	jr	Z, 00348$
      002267 CB 7A                 8059 	bit	7, d
      002269 20 08                 8060 	jr	NZ, 00349$
      00226B BF                    8061 	cp	a, a
      00226C 18 05                 8062 	jr	00349$
      00226E                       8063 00348$:
      00226E CB 7A                 8064 	bit	7, d
      002270 28 01                 8065 	jr	Z, 00349$
      002272 37                    8066 	scf
      002273                       8067 00349$:
      002273 DAr2Ar23              8068 	jp	C, 00107$
      002276                       8069 00106$:
                                   8070 ;src/main.c:832: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      002276 C1                    8071 	pop	bc
      002277 C5                    8072 	push	bc
      002278 03                    8073 	inc	bc
      002279 03                    8074 	inc	bc
      00227A FAr9Cr00              8075 	ld	a, (#_playerDrawY)
      00227D F8 18                 8076 	ldhl	sp,	#24
      00227F 77                    8077 	ld	(hl), a
      002280 F8 15                 8078 	ldhl	sp,	#21
      002282 7E                    8079 	ld	a, (hl)
      002283 B7                    8080 	or	a, a
      002284 28 23                 8081 	jr	Z, 00105$
      002286 0A                    8082 	ld	a, (bc)
      002287 F8 18                 8083 	ldhl	sp,	#24
      002289 96                    8084 	sub	a, (hl)
      00228A 6F                    8085 	ld	l, a
                                   8086 ;	spillPairReg hl
                                   8087 ;	spillPairReg hl
                                   8088 ;src/main.c:364: if (value >= 0) return value;
      00228B CB 7D                 8089 	bit	7, l
      00228D 28 03                 8090 	jr	Z, 00153$
                                   8091 ;src/main.c:365: else return - value;
      00228F AF                    8092 	xor	a, a
      002290 95                    8093 	sub	a, l
      002291 6F                    8094 	ld	l, a
                                   8095 ;	spillPairReg hl
                                   8096 ;	spillPairReg hl
                                   8097 ;src/main.c:832: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      002292                       8098 00153$:
      002292 5D                    8099 	ld	e, l
      002293 3E 08                 8100 	ld	a,#0x08
      002295 57                    8101 	ld	d,a
      002296 95                    8102 	sub	a, l
      002297 CB 7B                 8103 	bit	7, e
      002299 28 07                 8104 	jr	Z, 00350$
      00229B CB 7A                 8105 	bit	7, d
      00229D 20 08                 8106 	jr	NZ, 00351$
      00229F BF                    8107 	cp	a, a
      0022A0 18 05                 8108 	jr	00351$
      0022A2                       8109 00350$:
      0022A2 CB 7A                 8110 	bit	7, d
      0022A4 28 01                 8111 	jr	Z, 00351$
      0022A6 37                    8112 	scf
      0022A7                       8113 00351$:
      0022A7 30 28                 8114 	jr	NC, 00101$
      0022A9                       8115 00105$:
                                   8116 ;src/main.c:833: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      0022A9 F8 17                 8117 	ldhl	sp,	#23
      0022AB 7E                    8118 	ld	a, (hl)
      0022AC B7                    8119 	or	a, a
      0022AD 28 7B                 8120 	jr	Z, 00107$
      0022AF 23                    8121 	inc	hl
      0022B0 0A                    8122 	ld	a, (bc)
      0022B1 96                    8123 	sub	a, (hl)
      0022B2 4F                    8124 	ld	c, a
                                   8125 ;src/main.c:364: if (value >= 0) return value;
      0022B3 CB 79                 8126 	bit	7, c
      0022B5 28 03                 8127 	jr	Z, 00157$
                                   8128 ;src/main.c:365: else return - value;
      0022B7 AF                    8129 	xor	a, a
      0022B8 91                    8130 	sub	a, c
      0022B9 4F                    8131 	ld	c, a
                                   8132 ;src/main.c:833: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      0022BA                       8133 00157$:
      0022BA 59                    8134 	ld	e, c
      0022BB 3E 10                 8135 	ld	a,#0x10
      0022BD 57                    8136 	ld	d,a
      0022BE 91                    8137 	sub	a, c
      0022BF CB 7B                 8138 	bit	7, e
      0022C1 28 07                 8139 	jr	Z, 00352$
      0022C3 CB 7A                 8140 	bit	7, d
      0022C5 20 08                 8141 	jr	NZ, 00353$
      0022C7 BF                    8142 	cp	a, a
      0022C8 18 05                 8143 	jr	00353$
      0022CA                       8144 00352$:
      0022CA CB 7A                 8145 	bit	7, d
      0022CC 28 01                 8146 	jr	Z, 00353$
      0022CE 37                    8147 	scf
      0022CF                       8148 00353$:
      0022CF 38 59                 8149 	jr	C, 00107$
      0022D1                       8150 00101$:
                                   8151 ;src/main.c:835: set_sprite_tile(10+(i<<1), 0x7f);
      0022D1 F8 02                 8152 	ldhl	sp,	#2
      0022D3 7E                    8153 	ld	a, (hl)
      0022D4 87                    8154 	add	a, a
      0022D5 C6 0A                 8155 	add	a, #0x0a
                                   8156 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022D7 6F                    8157 	ld	l, a
      0022D8 01r00r00              8158 	ld	bc, #_shadow_OAM+0
                                   8159 ;	spillPairReg hl
                                   8160 ;	spillPairReg hl
      0022DB 26 00                 8161 	ld	h, #0x00
                                   8162 ;	spillPairReg hl
                                   8163 ;	spillPairReg hl
      0022DD 29                    8164 	add	hl, hl
      0022DE 29                    8165 	add	hl, hl
      0022DF 09                    8166 	add	hl, bc
      0022E0 23                    8167 	inc	hl
      0022E1 23                    8168 	inc	hl
      0022E2 36 7F                 8169 	ld	(hl), #0x7f
                                   8170 ;src/main.c:836: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0022E4 F8 02                 8171 	ldhl	sp,	#2
      0022E6 7E                    8172 	ld	a, (hl)
      0022E7 87                    8173 	add	a, a
      0022E8 C6 0B                 8174 	add	a, #0x0b
                                   8175 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022EA 6F                    8176 	ld	l, a
      0022EB 01r00r00              8177 	ld	bc, #_shadow_OAM+0
                                   8178 ;	spillPairReg hl
                                   8179 ;	spillPairReg hl
      0022EE 26 00                 8180 	ld	h, #0x00
                                   8181 ;	spillPairReg hl
                                   8182 ;	spillPairReg hl
      0022F0 29                    8183 	add	hl, hl
      0022F1 29                    8184 	add	hl, hl
      0022F2 09                    8185 	add	hl, bc
      0022F3 23                    8186 	inc	hl
      0022F4 23                    8187 	inc	hl
      0022F5 36 7F                 8188 	ld	(hl), #0x7f
                                   8189 ;src/main.c:837: eptr->alive = 0;
      0022F7 D1                    8190 	pop	de
      0022F8 D5                    8191 	push	de
      0022F9 21 09 00              8192 	ld	hl, #0x0009
      0022FC 19                    8193 	add	hl, de
      0022FD 4D                    8194 	ld	c, l
      0022FE 44                    8195 	ld	b, h
      0022FF AF                    8196 	xor	a, a
      002300 02                    8197 	ld	(bc), a
                                   8198 ;src/main.c:838: eptr->visible = 0;
      002301 D1                    8199 	pop	de
      002302 D5                    8200 	push	de
      002303 21 0A 00              8201 	ld	hl, #0x000a
      002306 19                    8202 	add	hl, de
      002307 4D                    8203 	ld	c, l
      002308 44                    8204 	ld	b, h
      002309 AF                    8205 	xor	a, a
      00230A 02                    8206 	ld	(bc), a
                                   8207 ;src/main.c:839: takeDamage(eptr->damage);
      00230B D1                    8208 	pop	de
      00230C D5                    8209 	push	de
      00230D 21 0B 00              8210 	ld	hl, #0x000b
      002310 19                    8211 	add	hl, de
      002311 4D                    8212 	ld	c, l
      002312 44                    8213 	ld	b, h
      002313 0A                    8214 	ld	a, (bc)
      002314 06 00                 8215 	ld	b, #0x00
      002316 4F                    8216 	ld	c, a
      002317 C5                    8217 	push	bc
      002318 CDr0Cr1F              8218 	call	_takeDamage
      00231B E1                    8219 	pop	hl
                                   8220 ;src/main.c:840: initEnemies(0);
      00231C AF                    8221 	xor	a, a
      00231D F5                    8222 	push	af
      00231E 33                    8223 	inc	sp
      00231F CDrFEr0F              8224 	call	_initEnemies
      002322 33                    8225 	inc	sp
                                   8226 ;src/main.c:841: playSound(0);
      002323 AF                    8227 	xor	a, a
      002324 F5                    8228 	push	af
      002325 33                    8229 	inc	sp
      002326 CDr9Br0F              8230 	call	_playSound
      002329 33                    8231 	inc	sp
      00232A                       8232 00107$:
                                   8233 ;src/main.c:847: struct Projectile *pptr = projectiles;
      00232A F8 15                 8234 	ldhl	sp,	#21
      00232C 3ErB4                 8235 	ld	a, #<(_projectiles)
      00232E 22                    8236 	ld	(hl+), a
      00232F 36s00                 8237 	ld	(hl), #>(_projectiles)
                                   8238 ;src/main.c:849: while (j < PROJECTILECOUNT) {
      002331 D1                    8239 	pop	de
      002332 D5                    8240 	push	de
      002333 21 02 00              8241 	ld	hl, #0x0002
      002336 19                    8242 	add	hl, de
      002337 E5                    8243 	push	hl
      002338 7D                    8244 	ld	a, l
      002339 F8 05                 8245 	ldhl	sp,	#5
      00233B 77                    8246 	ld	(hl), a
      00233C E1                    8247 	pop	hl
      00233D 7C                    8248 	ld	a, h
      00233E F8 04                 8249 	ldhl	sp,	#4
      002340 32                    8250 	ld	(hl-), a
      002341 2A                    8251 	ld	a, (hl+)
      002342 23                    8252 	inc	hl
      002343 32                    8253 	ld	(hl-), a
      002344 2A                    8254 	ld	a, (hl+)
      002345 23                    8255 	inc	hl
      002346 77                    8256 	ld	(hl), a
      002347 D1                    8257 	pop	de
      002348 D5                    8258 	push	de
      002349 21 08 00              8259 	ld	hl, #0x0008
      00234C 19                    8260 	add	hl, de
      00234D E5                    8261 	push	hl
      00234E 7D                    8262 	ld	a, l
      00234F F8 09                 8263 	ldhl	sp,	#9
      002351 77                    8264 	ld	(hl), a
      002352 E1                    8265 	pop	hl
      002353 7C                    8266 	ld	a, h
      002354 F8 08                 8267 	ldhl	sp,	#8
      002356 77                    8268 	ld	(hl), a
      002357 F8 03                 8269 	ldhl	sp,	#3
      002359 7E                    8270 	ld	a, (hl)
      00235A F8 09                 8271 	ldhl	sp,	#9
      00235C 77                    8272 	ld	(hl), a
      00235D F8 04                 8273 	ldhl	sp,	#4
      00235F 7E                    8274 	ld	a, (hl)
      002360 F8 0A                 8275 	ldhl	sp,	#10
      002362 77                    8276 	ld	(hl), a
      002363 F8 17                 8277 	ldhl	sp,	#23
      002365 36 00                 8278 	ld	(hl), #0x00
      002367                       8279 00133$:
      002367 21r9Fr0B              8280 	ld	hl, #_PROJECTILECOUNT
      00236A 4E                    8281 	ld	c, (hl)
      00236B F8 17                 8282 	ldhl	sp,	#23
      00236D 7E                    8283 	ld	a, (hl)
      00236E 91                    8284 	sub	a, c
      00236F D2r6Cr26              8285 	jp	NC, 00137$
                                   8286 ;src/main.c:850: if (pptr->active) {
      002372 2B                    8287 	dec	hl
      002373 2B                    8288 	dec	hl
      002374 2A                    8289 	ld	a, (hl+)
      002375 5F                    8290 	ld	e, a
      002376 56                    8291 	ld	d, (hl)
      002377 21 0A 00              8292 	ld	hl, #0x000a
      00237A 19                    8293 	add	hl, de
      00237B 4D                    8294 	ld	c, l
      00237C 44                    8295 	ld	b, h
      00237D 0A                    8296 	ld	a, (bc)
      00237E B7                    8297 	or	a, a
      00237F CAr53r26              8298 	jp	Z, 00132$
                                   8299 ;src/main.c:854: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002382 F8 07                 8300 	ldhl	sp,#7
      002384 2A                    8301 	ld	a, (hl+)
      002385 5F                    8302 	ld	e, a
      002386 56                    8303 	ld	d, (hl)
      002387 1A                    8304 	ld	a, (de)
      002388 4F                    8305 	ld	c, a
      002389 3D                    8306 	dec	a
      00238A 3E 01                 8307 	ld	a, #0x01
      00238C 28 01                 8308 	jr	Z, 00355$
      00238E AF                    8309 	xor	a, a
      00238F                       8310 00355$:
      00238F F8 13                 8311 	ldhl	sp,	#19
      002391 77                    8312 	ld	(hl), a
                                   8313 ;src/main.c:855: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002392 79                    8314 	ld	a, c
      002393 D6 02                 8315 	sub	a, #0x02
      002395 3E 01                 8316 	ld	a, #0x01
      002397 28 01                 8317 	jr	Z, 00357$
      002399 AF                    8318 	xor	a, a
      00239A                       8319 00357$:
      00239A F8 14                 8320 	ldhl	sp,	#20
                                   8321 ;src/main.c:854: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      00239C 32                    8322 	ld	(hl-), a
      00239D 7E                    8323 	ld	a, (hl)
      00239E B7                    8324 	or	a, a
      00239F 28 2C                 8325 	jr	Z, 00130$
      0023A1 D1                    8326 	pop	de
      0023A2 D5                    8327 	push	de
      0023A3 1A                    8328 	ld	a, (de)
      0023A4 F8 15                 8329 	ldhl	sp,#21
      0023A6 5E                    8330 	ld	e, (hl)
      0023A7 23                    8331 	inc	hl
      0023A8 56                    8332 	ld	d, (hl)
      0023A9 F5                    8333 	push	af
      0023AA 1A                    8334 	ld	a, (de)
      0023AB 4F                    8335 	ld	c, a
      0023AC F1                    8336 	pop	af
      0023AD 91                    8337 	sub	a, c
      0023AE 4F                    8338 	ld	c, a
                                   8339 ;src/main.c:364: if (value >= 0) return value;
      0023AF CB 79                 8340 	bit	7, c
      0023B1 28 03                 8341 	jr	Z, 00163$
                                   8342 ;src/main.c:365: else return - value;
      0023B3 AF                    8343 	xor	a, a
      0023B4 91                    8344 	sub	a, c
      0023B5 4F                    8345 	ld	c, a
                                   8346 ;src/main.c:854: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0023B6                       8347 00163$:
      0023B6 59                    8348 	ld	e, c
      0023B7 3E 08                 8349 	ld	a,#0x08
      0023B9 57                    8350 	ld	d,a
      0023BA 91                    8351 	sub	a, c
      0023BB CB 7B                 8352 	bit	7, e
      0023BD 28 07                 8353 	jr	Z, 00358$
      0023BF CB 7A                 8354 	bit	7, d
      0023C1 20 08                 8355 	jr	NZ, 00359$
      0023C3 BF                    8356 	cp	a, a
      0023C4 18 05                 8357 	jr	00359$
      0023C6                       8358 00358$:
      0023C6 CB 7A                 8359 	bit	7, d
      0023C8 28 01                 8360 	jr	Z, 00359$
      0023CA 37                    8361 	scf
      0023CB                       8362 00359$:
      0023CB 30 3A                 8363 	jr	NC, 00126$
      0023CD                       8364 00130$:
                                   8365 ;src/main.c:855: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      0023CD F8 14                 8366 	ldhl	sp,	#20
      0023CF 7E                    8367 	ld	a, (hl)
      0023D0 B7                    8368 	or	a, a
      0023D1 CAr53r26              8369 	jp	Z, 00132$
      0023D4 23                    8370 	inc	hl
      0023D5 D1                    8371 	pop	de
      0023D6 D5                    8372 	push	de
      0023D7 1A                    8373 	ld	a, (de)
      0023D8 5E                    8374 	ld	e, (hl)
      0023D9 23                    8375 	inc	hl
      0023DA 56                    8376 	ld	d, (hl)
      0023DB 23                    8377 	inc	hl
      0023DC 23                    8378 	inc	hl
      0023DD F5                    8379 	push	af
      0023DE 1A                    8380 	ld	a, (de)
      0023DF 4F                    8381 	ld	c, a
      0023E0 F1                    8382 	pop	af
      0023E1 91                    8383 	sub	a, c
      0023E2 77                    8384 	ld	(hl), a
                                   8385 ;src/main.c:364: if (value >= 0) return value;
      0023E3 CB 7E                 8386 	bit	7, (hl)
      0023E5 20 03                 8387 	jr	NZ, 00165$
      0023E7 4E                    8388 	ld	c, (hl)
      0023E8 18 05                 8389 	jr	00167$
      0023EA                       8390 00165$:
                                   8391 ;src/main.c:365: else return - value;
      0023EA AF                    8392 	xor	a, a
      0023EB F8 18                 8393 	ldhl	sp,	#24
      0023ED 96                    8394 	sub	a, (hl)
      0023EE 4F                    8395 	ld	c, a
                                   8396 ;src/main.c:855: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      0023EF                       8397 00167$:
      0023EF 59                    8398 	ld	e, c
      0023F0 3E 10                 8399 	ld	a,#0x10
      0023F2 57                    8400 	ld	d,a
      0023F3 91                    8401 	sub	a, c
      0023F4 CB 7B                 8402 	bit	7, e
      0023F6 28 07                 8403 	jr	Z, 00360$
      0023F8 CB 7A                 8404 	bit	7, d
      0023FA 20 08                 8405 	jr	NZ, 00361$
      0023FC BF                    8406 	cp	a, a
      0023FD 18 05                 8407 	jr	00361$
      0023FF                       8408 00360$:
      0023FF CB 7A                 8409 	bit	7, d
      002401 28 01                 8410 	jr	Z, 00361$
      002403 37                    8411 	scf
      002404                       8412 00361$:
      002404 DAr53r26              8413 	jp	C, 00132$
      002407                       8414 00126$:
                                   8415 ;src/main.c:856: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002407 F8 15                 8416 	ldhl	sp,	#21
      002409 2A                    8417 	ld	a, (hl+)
      00240A 4F                    8418 	ld	c, a
      00240B 46                    8419 	ld	b, (hl)
      00240C 03                    8420 	inc	bc
      00240D 03                    8421 	inc	bc
      00240E F8 13                 8422 	ldhl	sp,	#19
      002410 7E                    8423 	ld	a, (hl)
      002411 B7                    8424 	or	a, a
      002412 28 2A                 8425 	jr	Z, 00125$
      002414 F8 09                 8426 	ldhl	sp,#9
      002416 2A                    8427 	ld	a, (hl+)
      002417 5F                    8428 	ld	e, a
      002418 56                    8429 	ld	d, (hl)
      002419 1A                    8430 	ld	a, (de)
      00241A F5                    8431 	push	af
      00241B 0A                    8432 	ld	a, (bc)
      00241C 5F                    8433 	ld	e, a
      00241D F1                    8434 	pop	af
      00241E 93                    8435 	sub	a, e
      00241F 6F                    8436 	ld	l, a
                                   8437 ;	spillPairReg hl
                                   8438 ;	spillPairReg hl
                                   8439 ;src/main.c:364: if (value >= 0) return value;
      002420 CB 7D                 8440 	bit	7, l
      002422 28 03                 8441 	jr	Z, 00171$
                                   8442 ;src/main.c:365: else return - value;
      002424 AF                    8443 	xor	a, a
      002425 95                    8444 	sub	a, l
      002426 6F                    8445 	ld	l, a
                                   8446 ;	spillPairReg hl
                                   8447 ;	spillPairReg hl
                                   8448 ;src/main.c:856: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002427                       8449 00171$:
      002427 5D                    8450 	ld	e, l
      002428 3E 08                 8451 	ld	a,#0x08
      00242A 57                    8452 	ld	d,a
      00242B 95                    8453 	sub	a, l
      00242C CB 7B                 8454 	bit	7, e
      00242E 28 07                 8455 	jr	Z, 00362$
      002430 CB 7A                 8456 	bit	7, d
      002432 20 08                 8457 	jr	NZ, 00363$
      002434 BF                    8458 	cp	a, a
      002435 18 05                 8459 	jr	00363$
      002437                       8460 00362$:
      002437 CB 7A                 8461 	bit	7, d
      002439 28 01                 8462 	jr	Z, 00363$
      00243B 37                    8463 	scf
      00243C                       8464 00363$:
      00243C 30 32                 8465 	jr	NC, 00121$
      00243E                       8466 00125$:
                                   8467 ;src/main.c:857: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      00243E F8 14                 8468 	ldhl	sp,	#20
      002440 7E                    8469 	ld	a, (hl)
      002441 B7                    8470 	or	a, a
      002442 CAr53r26              8471 	jp	Z, 00132$
      002445 F8 03                 8472 	ldhl	sp,#3
      002447 2A                    8473 	ld	a, (hl+)
      002448 5F                    8474 	ld	e, a
      002449 56                    8475 	ld	d, (hl)
      00244A 1A                    8476 	ld	a, (de)
      00244B F5                    8477 	push	af
      00244C 0A                    8478 	ld	a, (bc)
      00244D 4F                    8479 	ld	c, a
      00244E F1                    8480 	pop	af
      00244F 91                    8481 	sub	a, c
      002450 4F                    8482 	ld	c, a
                                   8483 ;src/main.c:364: if (value >= 0) return value;
      002451 CB 79                 8484 	bit	7, c
      002453 28 03                 8485 	jr	Z, 00175$
                                   8486 ;src/main.c:365: else return - value;
      002455 AF                    8487 	xor	a, a
      002456 91                    8488 	sub	a, c
      002457 4F                    8489 	ld	c, a
                                   8490 ;src/main.c:857: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      002458                       8491 00175$:
      002458 59                    8492 	ld	e, c
      002459 3E 10                 8493 	ld	a,#0x10
      00245B 57                    8494 	ld	d,a
      00245C 91                    8495 	sub	a, c
      00245D CB 7B                 8496 	bit	7, e
      00245F 28 07                 8497 	jr	Z, 00364$
      002461 CB 7A                 8498 	bit	7, d
      002463 20 08                 8499 	jr	NZ, 00365$
      002465 BF                    8500 	cp	a, a
      002466 18 05                 8501 	jr	00365$
      002468                       8502 00364$:
      002468 CB 7A                 8503 	bit	7, d
      00246A 28 01                 8504 	jr	Z, 00365$
      00246C 37                    8505 	scf
      00246D                       8506 00365$:
      00246D DAr53r26              8507 	jp	C, 00132$
      002470                       8508 00121$:
                                   8509 ;src/main.c:859: set_sprite_tile(30+j, 0x7f);
      002470 F8 17                 8510 	ldhl	sp,	#23
      002472 7E                    8511 	ld	a, (hl)
      002473 C6 1E                 8512 	add	a, #0x1e
                                   8513 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002475 6F                    8514 	ld	l, a
      002476 01r00r00              8515 	ld	bc, #_shadow_OAM+0
                                   8516 ;	spillPairReg hl
                                   8517 ;	spillPairReg hl
      002479 26 00                 8518 	ld	h, #0x00
                                   8519 ;	spillPairReg hl
                                   8520 ;	spillPairReg hl
      00247B 29                    8521 	add	hl, hl
      00247C 29                    8522 	add	hl, hl
      00247D 09                    8523 	add	hl, bc
      00247E 23                    8524 	inc	hl
      00247F 23                    8525 	inc	hl
      002480 36 7F                 8526 	ld	(hl), #0x7f
                                   8527 ;src/main.c:860: pptr->active = 0;
      002482 F8 15                 8528 	ldhl	sp,#21
      002484 2A                    8529 	ld	a, (hl+)
      002485 5F                    8530 	ld	e, a
      002486 56                    8531 	ld	d, (hl)
      002487 21 0A 00              8532 	ld	hl, #0x000a
      00248A 19                    8533 	add	hl, de
      00248B 4D                    8534 	ld	c, l
      00248C 44                    8535 	ld	b, h
      00248D AF                    8536 	xor	a, a
      00248E 02                    8537 	ld	(bc), a
                                   8538 ;src/main.c:862: if (pptr->type == 0x2c) { //missile
      00248F F8 15                 8539 	ldhl	sp,#21
      002491 2A                    8540 	ld	a, (hl+)
      002492 5F                    8541 	ld	e, a
      002493 56                    8542 	ld	d, (hl)
      002494 21 0C 00              8543 	ld	hl, #0x000c
      002497 19                    8544 	add	hl, de
      002498 4D                    8545 	ld	c, l
      002499 44                    8546 	ld	b, h
      00249A 0A                    8547 	ld	a, (bc)
      00249B 4F                    8548 	ld	c, a
                                   8549 ;src/main.c:867: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      00249C F8 15                 8550 	ldhl	sp,#21
      00249E 2A                    8551 	ld	a, (hl+)
      00249F 5F                    8552 	ld	e, a
      0024A0 56                    8553 	ld	d, (hl)
      0024A1 21 08 00              8554 	ld	hl, #0x0008
      0024A4 19                    8555 	add	hl, de
      0024A5 E5                    8556 	push	hl
      0024A6 7D                    8557 	ld	a, l
      0024A7 F8 15                 8558 	ldhl	sp,	#21
      0024A9 77                    8559 	ld	(hl), a
      0024AA E1                    8560 	pop	hl
      0024AB 7C                    8561 	ld	a, h
      0024AC F8 14                 8562 	ldhl	sp,	#20
      0024AE 77                    8563 	ld	(hl), a
                                   8564 ;src/main.c:862: if (pptr->type == 0x2c) { //missile
      0024AF 79                    8565 	ld	a, c
      0024B0 D6 2C                 8566 	sub	a, #0x2c
      0024B2 C2rFDr25              8567 	jp	NZ,00119$
                                   8568 ;src/main.c:867: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      0024B5 2B                    8569 	dec	hl
      0024B6 7E                    8570 	ld	a, (hl)
      0024B7 F8 0B                 8571 	ldhl	sp,	#11
      0024B9 77                    8572 	ld	(hl), a
      0024BA F8 14                 8573 	ldhl	sp,	#20
      0024BC 7E                    8574 	ld	a, (hl)
      0024BD F8 0C                 8575 	ldhl	sp,	#12
      0024BF 77                    8576 	ld	(hl), a
      0024C0 F8 18                 8577 	ldhl	sp,	#24
      0024C2 36 00                 8578 	ld	(hl), #0x00
      0024C4                       8579 00186$:
      0024C4 21r8Er0B              8580 	ld	hl, #_ENEMYCOUNT
      0024C7 4E                    8581 	ld	c, (hl)
      0024C8 F8 18                 8582 	ldhl	sp,	#24
      0024CA 7E                    8583 	ld	a, (hl)
      0024CB 91                    8584 	sub	a, c
      0024CC D2r4Cr26              8585 	jp	NC, 00120$
                                   8586 ;src/main.c:868: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      0024CF D1                    8587 	pop	de
      0024D0 D5                    8588 	push	de
      0024D1 1A                    8589 	ld	a, (de)
      0024D2 F8 13                 8590 	ldhl	sp,	#19
      0024D4 22                    8591 	ld	(hl+), a
      0024D5 13                    8592 	inc	de
      0024D6 1A                    8593 	ld	a, (de)
      0024D7 77                    8594 	ld	(hl), a
      0024D8 F8 18                 8595 	ldhl	sp,	#24
      0024DA 4E                    8596 	ld	c, (hl)
      0024DB 06 00                 8597 	ld	b, #0x00
      0024DD 69                    8598 	ld	l, c
      0024DE 60                    8599 	ld	h, b
      0024DF 29                    8600 	add	hl, hl
      0024E0 29                    8601 	add	hl, hl
      0024E1 29                    8602 	add	hl, hl
      0024E2 09                    8603 	add	hl, bc
      0024E3 29                    8604 	add	hl, hl
      0024E4 01r5Ar00              8605 	ld	bc,#_enemies
      0024E7 09                    8606 	add	hl,bc
      0024E8 E5                    8607 	push	hl
      0024E9 7D                    8608 	ld	a, l
      0024EA F8 0F                 8609 	ldhl	sp,	#15
      0024EC 77                    8610 	ld	(hl), a
      0024ED E1                    8611 	pop	hl
      0024EE 7C                    8612 	ld	a, h
      0024EF F8 0E                 8613 	ldhl	sp,	#14
      0024F1 32                    8614 	ld	(hl-), a
      0024F2 2A                    8615 	ld	a, (hl+)
      0024F3 5F                    8616 	ld	e, a
      0024F4 56                    8617 	ld	d, (hl)
      0024F5 1A                    8618 	ld	a, (de)
      0024F6 4F                    8619 	ld	c, a
      0024F7 13                    8620 	inc	de
      0024F8 1A                    8621 	ld	a, (de)
      0024F9 47                    8622 	ld	b, a
      0024FA F8 13                 8623 	ldhl	sp,#19
      0024FC 2A                    8624 	ld	a, (hl+)
      0024FD 5F                    8625 	ld	e, a
      0024FE 56                    8626 	ld	d, (hl)
      0024FF 7B                    8627 	ld	a, e
      002500 91                    8628 	sub	a, c
      002501 5F                    8629 	ld	e, a
      002502 7A                    8630 	ld	a, d
      002503 98                    8631 	sbc	a, b
      002504 4B                    8632 	ld	c, e
      002505 47                    8633 	ld	b, a
                                   8634 ;	spillPairReg hl
                                   8635 ;	spillPairReg hl
      002506 60                    8636 	ld	h, b
                                   8637 ;	spillPairReg hl
                                   8638 ;	spillPairReg hl
      002507 CB 7C                 8639 	bit	7, h
      002509 28 06                 8640 	jr	Z, 00180$
      00250B AF                    8641 	xor	a, a
      00250C 91                    8642 	sub	a, c
      00250D 4F                    8643 	ld	c, a
      00250E 9F                    8644 	sbc	a, a
      00250F 90                    8645 	sub	a, b
      002510 47                    8646 	ld	b, a
      002511                       8647 00180$:
      002511 F8 05                 8648 	ldhl	sp,#5
      002513 2A                    8649 	ld	a, (hl+)
      002514 5F                    8650 	ld	e, a
      002515 56                    8651 	ld	d, (hl)
      002516 1A                    8652 	ld	a, (de)
      002517 F8 0F                 8653 	ldhl	sp,	#15
      002519 22                    8654 	ld	(hl+), a
      00251A 13                    8655 	inc	de
      00251B 1A                    8656 	ld	a, (de)
      00251C 77                    8657 	ld	(hl), a
      00251D F8 0D                 8658 	ldhl	sp,	#13
      00251F 2A                    8659 	ld	a, (hl+)
      002520 66                    8660 	ld	h, (hl)
                                   8661 ;	spillPairReg hl
                                   8662 ;	spillPairReg hl
      002521 6F                    8663 	ld	l, a
                                   8664 ;	spillPairReg hl
                                   8665 ;	spillPairReg hl
      002522 23                    8666 	inc	hl
      002523 23                    8667 	inc	hl
      002524 5D                    8668 	ld	e, l
      002525 54                    8669 	ld	d, h
      002526 1A                    8670 	ld	a, (de)
      002527 F8 11                 8671 	ldhl	sp,	#17
      002529 22                    8672 	ld	(hl+), a
      00252A 13                    8673 	inc	de
      00252B 1A                    8674 	ld	a, (de)
      00252C 77                    8675 	ld	(hl), a
      00252D F8 0F                 8676 	ldhl	sp,#15
      00252F 2A                    8677 	ld	a, (hl+)
      002530 5F                    8678 	ld	e, a
      002531 2A                    8679 	ld	a, (hl+)
      002532 57                    8680 	ld	d, a
      002533 2A                    8681 	ld	a,	(hl+)
      002534 66                    8682 	ld	h, (hl)
      002535 6F                    8683 	ld	l, a
      002536 7B                    8684 	ld	a, e
      002537 95                    8685 	sub	a, l
      002538 5F                    8686 	ld	e, a
      002539 7A                    8687 	ld	a, d
      00253A 9C                    8688 	sbc	a, h
      00253B F8 14                 8689 	ldhl	sp,	#20
      00253D 32                    8690 	ld	(hl-), a
      00253E 73                    8691 	ld	(hl), e
      00253F 3A                    8692 	ld	a, (hl-)
      002540 2B                    8693 	dec	hl
      002541 77                    8694 	ld	(hl), a
      002542 F8 14                 8695 	ldhl	sp,	#20
      002544 3A                    8696 	ld	a, (hl-)
      002545 2B                    8697 	dec	hl
      002546 77                    8698 	ld	(hl), a
      002547 CB 7E                 8699 	bit	7, (hl)
      002549 20 05                 8700 	jr	NZ, 00182$
      00254B 23                    8701 	inc	hl
      00254C 2A                    8702 	ld	a, (hl+)
      00254D 5E                    8703 	ld	e, (hl)
      00254E 18 13                 8704 	jr	00184$
      002550                       8705 00182$:
      002550 11 00 00              8706 	ld	de, #0x0000
      002553 F8 13                 8707 	ldhl	sp,	#19
      002555 2A                    8708 	ld	a,	(hl+)
      002556 66                    8709 	ld	h, (hl)
      002557 6F                    8710 	ld	l, a
      002558 7B                    8711 	ld	a, e
      002559 95                    8712 	sub	a, l
      00255A 5F                    8713 	ld	e, a
      00255B 7A                    8714 	ld	a, d
      00255C 9C                    8715 	sbc	a, h
      00255D F8 12                 8716 	ldhl	sp,	#18
      00255F 32                    8717 	ld	(hl-), a
      002560 73                    8718 	ld	(hl), e
      002561 2A                    8719 	ld	a, (hl+)
      002562 5E                    8720 	ld	e, (hl)
      002563                       8721 00184$:
      002563 81                    8722 	add	a, c
      002564 4F                    8723 	ld	c, a
      002565 7B                    8724 	ld	a, e
      002566 88                    8725 	adc	a, b
      002567 47                    8726 	ld	b, a
      002568 21rA4r0B              8727 	ld	hl, #_SPLASHDROPOFF
      00256B 5E                    8728 	ld	e, (hl)
      00256C 1C                    8729 	inc	e
      00256D 18 04                 8730 	jr	00369$
      00256F                       8731 00368$:
      00256F CB 21                 8732 	sla	c
      002571 CB 10                 8733 	rl	b
      002573                       8734 00369$:
      002573 1D                    8735 	dec	e
      002574 20 F9                 8736 	jr	NZ,00368$
                                   8737 ;src/main.c:869: int16_t dmg = pptr->damage - dmgDropOff;
      002576 F8 0B                 8738 	ldhl	sp,#11
      002578 2A                    8739 	ld	a, (hl+)
      002579 5F                    8740 	ld	e, a
      00257A 56                    8741 	ld	d, (hl)
      00257B 1A                    8742 	ld	a, (de)
      00257C 6F                    8743 	ld	l, a
                                   8744 ;	spillPairReg hl
                                   8745 ;	spillPairReg hl
      00257D 13                    8746 	inc	de
      00257E 1A                    8747 	ld	a, (de)
      00257F 67                    8748 	ld	h, a
                                   8749 ;	spillPairReg hl
                                   8750 ;	spillPairReg hl
      002580 7D                    8751 	ld	a, l
      002581 91                    8752 	sub	a, c
      002582 4F                    8753 	ld	c, a
      002583 7C                    8754 	ld	a, h
      002584 98                    8755 	sbc	a, b
      002585 F8 11                 8756 	ldhl	sp,	#17
      002587 71                    8757 	ld	(hl), c
      002588 23                    8758 	inc	hl
                                   8759 ;src/main.c:870: if (dmg > 0) {
      002589 32                    8760 	ld	(hl-), a
      00258A 2A                    8761 	ld	a, (hl+)
      00258B 4F                    8762 	ld	c, a
      00258C 46                    8763 	ld	b, (hl)
      00258D 58                    8764 	ld	e, b
      00258E AF                    8765 	xor	a, a
      00258F 57                    8766 	ld	d, a
      002590 B9                    8767 	cp	a, c
      002591 98                    8768 	sbc	a, b
      002592 CB 7B                 8769 	bit	7, e
      002594 28 07                 8770 	jr	Z, 00370$
      002596 CB 7A                 8771 	bit	7, d
      002598 20 08                 8772 	jr	NZ, 00371$
      00259A BF                    8773 	cp	a, a
      00259B 18 05                 8774 	jr	00371$
      00259D                       8775 00370$:
      00259D CB 7A                 8776 	bit	7, d
      00259F 28 01                 8777 	jr	Z, 00371$
      0025A1 37                    8778 	scf
      0025A2                       8779 00371$:
      0025A2 30 53                 8780 	jr	NC, 00187$
                                   8781 ;src/main.c:871: enemies[k].hp -= dmg;
      0025A4 F8 0D                 8782 	ldhl	sp,#13
      0025A6 2A                    8783 	ld	a, (hl+)
      0025A7 5F                    8784 	ld	e, a
      0025A8 56                    8785 	ld	d, (hl)
      0025A9 21 10 00              8786 	ld	hl, #0x0010
      0025AC 19                    8787 	add	hl, de
      0025AD E5                    8788 	push	hl
      0025AE 7D                    8789 	ld	a, l
      0025AF F8 15                 8790 	ldhl	sp,	#21
      0025B1 77                    8791 	ld	(hl), a
      0025B2 E1                    8792 	pop	hl
      0025B3 7C                    8793 	ld	a, h
      0025B4 F8 14                 8794 	ldhl	sp,	#20
      0025B6 32                    8795 	ld	(hl-), a
      0025B7 2A                    8796 	ld	a, (hl+)
      0025B8 5F                    8797 	ld	e, a
      0025B9 56                    8798 	ld	d, (hl)
      0025BA 1A                    8799 	ld	a, (de)
      0025BB F8 0F                 8800 	ldhl	sp,	#15
      0025BD 22                    8801 	ld	(hl+), a
      0025BE 13                    8802 	inc	de
      0025BF 1A                    8803 	ld	a, (de)
      0025C0 32                    8804 	ld	(hl-), a
      0025C1 2A                    8805 	ld	a, (hl+)
      0025C2 5F                    8806 	ld	e, a
      0025C3 2A                    8807 	ld	a, (hl+)
      0025C4 57                    8808 	ld	d, a
      0025C5 2A                    8809 	ld	a,	(hl+)
      0025C6 66                    8810 	ld	h, (hl)
      0025C7 6F                    8811 	ld	l, a
      0025C8 7B                    8812 	ld	a, e
      0025C9 95                    8813 	sub	a, l
      0025CA 5F                    8814 	ld	e, a
      0025CB 7A                    8815 	ld	a, d
      0025CC 9C                    8816 	sbc	a, h
      0025CD 47                    8817 	ld	b, a
      0025CE 4B                    8818 	ld	c, e
      0025CF F8 13                 8819 	ldhl	sp,	#19
      0025D1 2A                    8820 	ld	a,	(hl+)
      0025D2 66                    8821 	ld	h, (hl)
      0025D3 6F                    8822 	ld	l, a
      0025D4 79                    8823 	ld	a, c
      0025D5 22                    8824 	ld	(hl+), a
      0025D6 70                    8825 	ld	(hl), b
                                   8826 ;src/main.c:872: if (enemies[k].hp <= 0) {
      0025D7 58                    8827 	ld	e, b
      0025D8 AF                    8828 	xor	a, a
      0025D9 57                    8829 	ld	d, a
      0025DA B9                    8830 	cp	a, c
      0025DB 98                    8831 	sbc	a, b
      0025DC CB 7B                 8832 	bit	7, e
      0025DE 28 07                 8833 	jr	Z, 00372$
      0025E0 CB 7A                 8834 	bit	7, d
      0025E2 20 08                 8835 	jr	NZ, 00373$
      0025E4 BF                    8836 	cp	a, a
      0025E5 18 05                 8837 	jr	00373$
      0025E7                       8838 00372$:
      0025E7 CB 7A                 8839 	bit	7, d
      0025E9 28 01                 8840 	jr	Z, 00373$
      0025EB 37                    8841 	scf
      0025EC                       8842 00373$:
      0025EC 38 09                 8843 	jr	C, 00187$
                                   8844 ;src/main.c:873: killEnemy(k);
      0025EE F8 18                 8845 	ldhl	sp,	#24
      0025F0 7E                    8846 	ld	a, (hl)
      0025F1 F5                    8847 	push	af
      0025F2 33                    8848 	inc	sp
      0025F3 CDrC5r1F              8849 	call	_killEnemy
      0025F6 33                    8850 	inc	sp
      0025F7                       8851 00187$:
                                   8852 ;src/main.c:867: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      0025F7 F8 18                 8853 	ldhl	sp,	#24
      0025F9 34                    8854 	inc	(hl)
      0025FA C3rC4r24              8855 	jp	00186$
      0025FD                       8856 00119$:
                                   8857 ;src/main.c:881: eptr->hp -= pptr->damage;
      0025FD D1                    8858 	pop	de
      0025FE D5                    8859 	push	de
      0025FF 21 10 00              8860 	ld	hl, #0x0010
      002602 19                    8861 	add	hl, de
      002603 E5                    8862 	push	hl
      002604 7D                    8863 	ld	a, l
      002605 F8 13                 8864 	ldhl	sp,	#19
      002607 77                    8865 	ld	(hl), a
      002608 E1                    8866 	pop	hl
      002609 7C                    8867 	ld	a, h
      00260A F8 12                 8868 	ldhl	sp,	#18
      00260C 32                    8869 	ld	(hl-), a
      00260D 2A                    8870 	ld	a, (hl+)
      00260E 5F                    8871 	ld	e, a
      00260F 2A                    8872 	ld	a, (hl+)
      002610 57                    8873 	ld	d, a
      002611 1A                    8874 	ld	a, (de)
      002612 4F                    8875 	ld	c, a
      002613 13                    8876 	inc	de
      002614 1A                    8877 	ld	a, (de)
      002615 47                    8878 	ld	b, a
      002616 2A                    8879 	ld	a, (hl+)
      002617 5F                    8880 	ld	e, a
      002618 56                    8881 	ld	d, (hl)
      002619 1A                    8882 	ld	a, (de)
      00261A 6F                    8883 	ld	l, a
                                   8884 ;	spillPairReg hl
                                   8885 ;	spillPairReg hl
      00261B 13                    8886 	inc	de
      00261C 1A                    8887 	ld	a, (de)
      00261D 67                    8888 	ld	h, a
                                   8889 ;	spillPairReg hl
                                   8890 ;	spillPairReg hl
      00261E 79                    8891 	ld	a, c
      00261F 95                    8892 	sub	a, l
      002620 4F                    8893 	ld	c, a
      002621 78                    8894 	ld	a, b
      002622 9C                    8895 	sbc	a, h
      002623 47                    8896 	ld	b, a
      002624 F8 11                 8897 	ldhl	sp,	#17
      002626 2A                    8898 	ld	a,	(hl+)
      002627 66                    8899 	ld	h, (hl)
      002628 6F                    8900 	ld	l, a
      002629 79                    8901 	ld	a, c
      00262A 22                    8902 	ld	(hl+), a
      00262B 70                    8903 	ld	(hl), b
                                   8904 ;src/main.c:883: if (eptr->hp <= 0) {
      00262C 58                    8905 	ld	e, b
      00262D AF                    8906 	xor	a, a
      00262E 57                    8907 	ld	d, a
      00262F B9                    8908 	cp	a, c
      002630 98                    8909 	sbc	a, b
      002631 CB 7B                 8910 	bit	7, e
      002633 28 07                 8911 	jr	Z, 00374$
      002635 CB 7A                 8912 	bit	7, d
      002637 20 08                 8913 	jr	NZ, 00375$
      002639 BF                    8914 	cp	a, a
      00263A 18 05                 8915 	jr	00375$
      00263C                       8916 00374$:
      00263C CB 7A                 8917 	bit	7, d
      00263E 28 01                 8918 	jr	Z, 00375$
      002640 37                    8919 	scf
      002641                       8920 00375$:
      002641 38 09                 8921 	jr	C, 00120$
                                   8922 ;src/main.c:885: killEnemy(i);
      002643 F8 02                 8923 	ldhl	sp,	#2
      002645 7E                    8924 	ld	a, (hl)
      002646 F5                    8925 	push	af
      002647 33                    8926 	inc	sp
      002648 CDrC5r1F              8927 	call	_killEnemy
      00264B 33                    8928 	inc	sp
      00264C                       8929 00120$:
                                   8930 ;src/main.c:890: initEnemies(0);
      00264C AF                    8931 	xor	a, a
      00264D F5                    8932 	push	af
      00264E 33                    8933 	inc	sp
      00264F CDrFEr0F              8934 	call	_initEnemies
      002652 33                    8935 	inc	sp
      002653                       8936 00132$:
                                   8937 ;src/main.c:897: j++;
      002653 F8 17                 8938 	ldhl	sp,	#23
      002655 34                    8939 	inc	(hl)
                                   8940 ;src/main.c:898: pptr++;
      002656 2B                    8941 	dec	hl
      002657 2B                    8942 	dec	hl
      002658 2A                    8943 	ld	a, (hl+)
      002659 5F                    8944 	ld	e, a
      00265A 56                    8945 	ld	d, (hl)
      00265B 21 0D 00              8946 	ld	hl, #0x000d
      00265E 19                    8947 	add	hl, de
      00265F E5                    8948 	push	hl
      002660 7D                    8949 	ld	a, l
      002661 F8 17                 8950 	ldhl	sp,	#23
      002663 77                    8951 	ld	(hl), a
      002664 E1                    8952 	pop	hl
      002665 7C                    8953 	ld	a, h
      002666 F8 16                 8954 	ldhl	sp,	#22
      002668 77                    8955 	ld	(hl), a
      002669 C3r67r23              8956 	jp	00133$
      00266C                       8957 00137$:
                                   8958 ;src/main.c:902: if (enemyCollisionCount == 0) {
      00266C FArA5r00              8959 	ld	a, (#_enemyCollisionCount)
      00266F B7                    8960 	or	a, a
      002670 20 09                 8961 	jr	NZ, 00140$
                                   8962 ;src/main.c:903: enemyCollisionCount = ENEMYCOUNT - 1;
      002672 FAr8Er0B              8963 	ld	a, (#_ENEMYCOUNT)
      002675 3D                    8964 	dec	a
      002676 EArA5r00              8965 	ld	(#_enemyCollisionCount),a
      002679 18 04                 8966 	jr	00188$
      00267B                       8967 00140$:
                                   8968 ;src/main.c:906: enemyCollisionCount--;
      00267B 21rA5r00              8969 	ld	hl, #_enemyCollisionCount
      00267E 35                    8970 	dec	(hl)
      00267F                       8971 00188$:
                                   8972 ;src/main.c:911: }
      00267F E8 19                 8973 	add	sp, #25
      002681 C9                    8974 	ret
                                   8975 ;src/main.c:914: void setGunIcon() {
                                   8976 ;	---------------------------------
                                   8977 ; Function setGunIcon
                                   8978 ; ---------------------------------
      002682                       8979 _setGunIcon::
                                   8980 ;src/main.c:916: if (currentGun == 0) {
      002682 FArA7r00              8981 	ld	a, (#_currentGun)
      002685 B7                    8982 	or	a, a
      002686 20 1B                 8983 	jr	NZ, 00102$
                                   8984 ;src/main.c:917: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      002688 01rAEr00              8985 	ld	bc, #_gunMap+0
      00268B 79                    8986 	ld	a, c
      00268C 21rA6r00              8987 	ld	hl, #_gunLevel
      00268F 86                    8988 	add	a, (hl)
      002690 4F                    8989 	ld	c, a
      002691 30 01                 8990 	jr	NC, 00111$
      002693 04                    8991 	inc	b
      002694                       8992 00111$:
      002694 C5                    8993 	push	bc
      002695 21 01 01              8994 	ld	hl, #0x101
      002698 E5                    8995 	push	hl
      002699 21 0F 00              8996 	ld	hl, #0x0f
      00269C E5                    8997 	push	hl
      00269D CDr00r00              8998 	call	_set_win_tiles
      0026A0 E8 06                 8999 	add	sp, #6
      0026A2 C9                    9000 	ret
      0026A3                       9001 00102$:
                                   9002 ;src/main.c:920: set_win_tiles(15, 0,1,1,gunMap+2);
      0026A3 11rB0r00              9003 	ld	de, #(_gunMap + 2)
      0026A6 D5                    9004 	push	de
      0026A7 21 01 01              9005 	ld	hl, #0x101
      0026AA E5                    9006 	push	hl
      0026AB 21 0F 00              9007 	ld	hl, #0x0f
      0026AE E5                    9008 	push	hl
      0026AF CDr00r00              9009 	call	_set_win_tiles
      0026B2 E8 06                 9010 	add	sp, #6
                                   9011 ;src/main.c:922: }
      0026B4 C9                    9012 	ret
                                   9013 ;src/main.c:932: void fire() {
                                   9014 ;	---------------------------------
                                   9015 ; Function fire
                                   9016 ; ---------------------------------
      0026B5                       9017 _fire::
      0026B5 E8 FB                 9018 	add	sp, #-5
                                   9019 ;src/main.c:934: oldestProjectile += 1;
      0026B7 21r91r00              9020 	ld	hl, #_oldestProjectile
      0026BA 34                    9021 	inc	(hl)
      0026BB 7E                    9022 	ld	a, (hl)
                                   9023 ;src/main.c:935: if (oldestProjectile >= PROJECTILECOUNT) {
      0026BC 21r9Fr0B              9024 	ld	hl, #_PROJECTILECOUNT
      0026BF 4E                    9025 	ld	c, (hl)
      0026C0 21r91r00              9026 	ld	hl, #_oldestProjectile
      0026C3 7E                    9027 	ld	a, (hl)
      0026C4 91                    9028 	sub	a, c
      0026C5 38 02                 9029 	jr	C, 00102$
                                   9030 ;src/main.c:936: oldestProjectile = 0;
      0026C7 36 00                 9031 	ld	(hl), #0x00
      0026C9                       9032 00102$:
                                   9033 ;src/main.c:939: if (currentGun == 0) {
      0026C9 FArA7r00              9034 	ld	a, (#_currentGun)
      0026CC B7                    9035 	or	a, a
      0026CD 20 3B                 9036 	jr	NZ, 00107$
                                   9037 ;src/main.c:941: projectiles[oldestProjectile] = singleGun;
      0026CF 21r91r00              9038 	ld	hl, #_oldestProjectile
      0026D2 4E                    9039 	ld	c, (hl)
      0026D3 06 00                 9040 	ld	b, #0x00
      0026D5 69                    9041 	ld	l, c
      0026D6 60                    9042 	ld	h, b
      0026D7 29                    9043 	add	hl, hl
      0026D8 09                    9044 	add	hl, bc
      0026D9 29                    9045 	add	hl, hl
      0026DA 29                    9046 	add	hl, hl
      0026DB 09                    9047 	add	hl, bc
      0026DC 4D                    9048 	ld	c, l
      0026DD 44                    9049 	ld	b, h
                                   9050 ;src/main.c:940: if (gunLevel == 0) {
      0026DE FArA6r00              9051 	ld	a, (#_gunLevel)
      0026E1 B7                    9052 	or	a, a
      0026E2 20 14                 9053 	jr	NZ, 00104$
                                   9054 ;src/main.c:941: projectiles[oldestProjectile] = singleGun;
      0026E4 11r6Ar00              9055 	ld	de, #_singleGun+0
      0026E7 21rB4r00              9056 	ld	hl, #_projectiles
      0026EA 09                    9057 	add	hl, bc
      0026EB 01 0D 00              9058 	ld	bc, #0x000d
      0026EE C5                    9059 	push	bc
      0026EF D5                    9060 	push	de
      0026F0 E5                    9061 	push	hl
      0026F1 CDr00r00              9062 	call	___memcpy
      0026F4 E8 06                 9063 	add	sp, #6
      0026F6 18 12                 9064 	jr	00107$
      0026F8                       9065 00104$:
                                   9066 ;src/main.c:944: projectiles[oldestProjectile] = doubleGun;
      0026F8 11r77r00              9067 	ld	de, #_doubleGun+0
      0026FB 21rB4r00              9068 	ld	hl, #_projectiles
      0026FE 09                    9069 	add	hl, bc
      0026FF 01 0D 00              9070 	ld	bc, #0x000d
      002702 C5                    9071 	push	bc
      002703 D5                    9072 	push	de
      002704 E5                    9073 	push	hl
      002705 CDr00r00              9074 	call	___memcpy
      002708 E8 06                 9075 	add	sp, #6
      00270A                       9076 00107$:
                                   9077 ;src/main.c:947: if (currentGun == 1) {
      00270A FArA7r00              9078 	ld	a, (#_currentGun)
      00270D 3D                    9079 	dec	a
      00270E 20 46                 9080 	jr	NZ, 00113$
                                   9081 ;src/main.c:948: if (missiles == 0) {
      002710 FArA8r00              9082 	ld	a, (#_missiles)
      002713 B7                    9083 	or	a, a
      002714 20 0B                 9084 	jr	NZ, 00109$
                                   9085 ;src/main.c:949: currentGun = 0;
      002716 21rA7r00              9086 	ld	hl, #_currentGun
      002719 36 00                 9087 	ld	(hl), #0x00
                                   9088 ;src/main.c:950: setGunIcon();
      00271B CDr82r26              9089 	call	_setGunIcon
                                   9090 ;src/main.c:951: return;
      00271E C3r5Br2C              9091 	jp	00154$
      002721                       9092 00109$:
                                   9093 ;src/main.c:954: projectiles[oldestProjectile] = missile;
      002721 21r91r00              9094 	ld	hl, #_oldestProjectile
      002724 4E                    9095 	ld	c, (hl)
      002725 06 00                 9096 	ld	b, #0x00
      002727 69                    9097 	ld	l, c
      002728 60                    9098 	ld	h, b
      002729 29                    9099 	add	hl, hl
      00272A 09                    9100 	add	hl, bc
      00272B 29                    9101 	add	hl, hl
      00272C 29                    9102 	add	hl, hl
      00272D 09                    9103 	add	hl, bc
      00272E 01rB4r00              9104 	ld	bc,#_projectiles
      002731 09                    9105 	add	hl,bc
      002732 11 0D 00              9106 	ld	de, #0x000d
      002735 D5                    9107 	push	de
      002736 11r84r00              9108 	ld	de, #_missile
      002739 D5                    9109 	push	de
      00273A E5                    9110 	push	hl
      00273B CDr00r00              9111 	call	___memcpy
      00273E E8 06                 9112 	add	sp, #6
                                   9113 ;src/main.c:955: updateMissileCount(-1);
      002740 3E FF                 9114 	ld	a, #0xff
      002742 F5                    9115 	push	af
      002743 33                    9116 	inc	sp
      002744 CDrE4r0C              9117 	call	_updateMissileCount
      002747 33                    9118 	inc	sp
                                   9119 ;src/main.c:957: if (missiles == 0) {
      002748 FArA8r00              9120 	ld	a, (#_missiles)
      00274B B7                    9121 	or	a, a
      00274C 20 08                 9122 	jr	NZ, 00113$
                                   9123 ;src/main.c:958: currentGun = 0;
      00274E 21rA7r00              9124 	ld	hl, #_currentGun
      002751 36 00                 9125 	ld	(hl), #0x00
                                   9126 ;src/main.c:959: setGunIcon();
      002753 CDr82r26              9127 	call	_setGunIcon
      002756                       9128 00113$:
                                   9129 ;src/main.c:962: projectiles[oldestProjectile].x = playerDrawX;
      002756 21r91r00              9130 	ld	hl, #_oldestProjectile
      002759 4E                    9131 	ld	c, (hl)
      00275A 06 00                 9132 	ld	b, #0x00
      00275C 69                    9133 	ld	l, c
      00275D 60                    9134 	ld	h, b
      00275E 29                    9135 	add	hl, hl
      00275F 09                    9136 	add	hl, bc
      002760 29                    9137 	add	hl, hl
      002761 29                    9138 	add	hl, hl
      002762 09                    9139 	add	hl, bc
      002763 01rB4r00              9140 	ld	bc,#_projectiles
      002766 09                    9141 	add	hl,bc
      002767 E5                    9142 	push	hl
      002768 FAr9Br00              9143 	ld	a, (#_playerDrawX)
      00276B E1                    9144 	pop	hl
      00276C 0E 00                 9145 	ld	c, #0x00
      00276E 22                    9146 	ld	(hl+), a
      00276F 71                    9147 	ld	(hl), c
                                   9148 ;src/main.c:963: projectiles[oldestProjectile].y = playerDrawY;
      002770 21r91r00              9149 	ld	hl, #_oldestProjectile
      002773 4E                    9150 	ld	c, (hl)
      002774 06 00                 9151 	ld	b, #0x00
      002776 69                    9152 	ld	l, c
      002777 60                    9153 	ld	h, b
      002778 29                    9154 	add	hl, hl
      002779 09                    9155 	add	hl, bc
      00277A 29                    9156 	add	hl, hl
      00277B 29                    9157 	add	hl, hl
      00277C 09                    9158 	add	hl, bc
      00277D 01rB4r00              9159 	ld	bc,#_projectiles
      002780 09                    9160 	add	hl,bc
      002781 23                    9161 	inc	hl
      002782 23                    9162 	inc	hl
      002783 E5                    9163 	push	hl
      002784 FAr9Cr00              9164 	ld	a, (#_playerDrawY)
      002787 E1                    9165 	pop	hl
      002788 0E 00                 9166 	ld	c, #0x00
      00278A 22                    9167 	ld	(hl+), a
      00278B 71                    9168 	ld	(hl), c
                                   9169 ;src/main.c:964: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      00278C 21r91r00              9170 	ld	hl, #_oldestProjectile
      00278F 4E                    9171 	ld	c, (hl)
      002790 06 00                 9172 	ld	b, #0x00
      002792 69                    9173 	ld	l, c
      002793 60                    9174 	ld	h, b
      002794 29                    9175 	add	hl, hl
      002795 09                    9176 	add	hl, bc
      002796 29                    9177 	add	hl, hl
      002797 29                    9178 	add	hl, hl
      002798 09                    9179 	add	hl, bc
      002799 01rB4r00              9180 	ld	bc,#_projectiles
      00279C 09                    9181 	add	hl,bc
      00279D 5D                    9182 	ld	e, l
      00279E 54                    9183 	ld	d, h
      00279F 21 05 00              9184 	ld	hl, #0x0005
      0027A2 19                    9185 	add	hl, de
      0027A3 4D                    9186 	ld	c, l
      0027A4 44                    9187 	ld	b, h
      0027A5 21 07 00              9188 	ld	hl, #0x0007
      0027A8 19                    9189 	add	hl, de
      0027A9 7E                    9190 	ld	a, (hl)
      0027AA C5                    9191 	push	bc
      0027AB F5                    9192 	push	af
      0027AC 33                    9193 	inc	sp
      0027AD FAr93r00              9194 	ld	a, (#_xDir)
      0027B0 F5                    9195 	push	af
      0027B1 33                    9196 	inc	sp
      0027B2 CDr00r00              9197 	call	__muluschar
      0027B5 E1                    9198 	pop	hl
      0027B6 7B                    9199 	ld	a, e
      0027B7 C1                    9200 	pop	bc
      0027B8 02                    9201 	ld	(bc), a
                                   9202 ;src/main.c:965: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      0027B9 21r91r00              9203 	ld	hl, #_oldestProjectile
      0027BC 4E                    9204 	ld	c, (hl)
      0027BD 06 00                 9205 	ld	b, #0x00
      0027BF 69                    9206 	ld	l, c
      0027C0 60                    9207 	ld	h, b
      0027C1 29                    9208 	add	hl, hl
      0027C2 09                    9209 	add	hl, bc
      0027C3 29                    9210 	add	hl, hl
      0027C4 29                    9211 	add	hl, hl
      0027C5 09                    9212 	add	hl, bc
      0027C6 01rB4r00              9213 	ld	bc,#_projectiles
      0027C9 09                    9214 	add	hl,bc
      0027CA 5D                    9215 	ld	e, l
      0027CB 54                    9216 	ld	d, h
      0027CC 21 06 00              9217 	ld	hl, #0x0006
      0027CF 19                    9218 	add	hl, de
      0027D0 4D                    9219 	ld	c, l
      0027D1 44                    9220 	ld	b, h
      0027D2 21 07 00              9221 	ld	hl, #0x0007
      0027D5 19                    9222 	add	hl, de
      0027D6 7E                    9223 	ld	a, (hl)
      0027D7 C5                    9224 	push	bc
      0027D8 F5                    9225 	push	af
      0027D9 33                    9226 	inc	sp
      0027DA FAr94r00              9227 	ld	a, (#_yDir)
      0027DD F5                    9228 	push	af
      0027DE 33                    9229 	inc	sp
      0027DF CDr00r00              9230 	call	__muluschar
      0027E2 E1                    9231 	pop	hl
      0027E3 7B                    9232 	ld	a, e
      0027E4 C1                    9233 	pop	bc
      0027E5 02                    9234 	ld	(bc), a
                                   9235 ;src/main.c:934: oldestProjectile += 1;
      0027E6 FAr91r00              9236 	ld	a, (#_oldestProjectile)
      0027E9 F8 04                 9237 	ldhl	sp,	#4
      0027EB 77                    9238 	ld	(hl), a
                                   9239 ;src/main.c:941: projectiles[oldestProjectile] = singleGun;
      0027EC 21r91r00              9240 	ld	hl, #_oldestProjectile
      0027EF 4E                    9241 	ld	c, (hl)
      0027F0 06 00                 9242 	ld	b, #0x00
      0027F2 69                    9243 	ld	l, c
      0027F3 60                    9244 	ld	h, b
      0027F4 29                    9245 	add	hl, hl
      0027F5 09                    9246 	add	hl, bc
      0027F6 29                    9247 	add	hl, hl
      0027F7 29                    9248 	add	hl, hl
      0027F8 09                    9249 	add	hl, bc
                                   9250 ;src/main.c:970: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0027F9 01rB4r00              9251 	ld	bc,#_projectiles
      0027FC 09                    9252 	add	hl,bc
      0027FD 4D                    9253 	ld	c, l
      0027FE 44                    9254 	ld	b, h
      0027FF F8 04                 9255 	ldhl	sp,	#4
      002801 3A                    9256 	ld	a, (hl-)
      002802 C6 1E                 9257 	add	a, #0x1e
      002804 77                    9258 	ld	(hl), a
      002805 21 0C 00              9259 	ld	hl, #0x000c
      002808 09                    9260 	add	hl, bc
      002809 7E                    9261 	ld	a, (hl)
      00280A F8 04                 9262 	ldhl	sp,	#4
      00280C 77                    9263 	ld	(hl), a
                                   9264 ;src/main.c:969: if (yDir != 0 && xDir == 0) {
      00280D FAr94r00              9265 	ld	a, (#_yDir)
      002810 B7                    9266 	or	a, a
      002811 28 71                 9267 	jr	Z, 00140$
      002813 FAr93r00              9268 	ld	a, (#_xDir)
      002816 B7                    9269 	or	a, a
      002817 20 6B                 9270 	jr	NZ, 00140$
                                   9271 ;src/main.c:970: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002819 F8 04                 9272 	ldhl	sp,	#4
      00281B 3A                    9273 	ld	a, (hl-)
      00281C 4F                    9274 	ld	c, a
                                   9275 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00281D 6E                    9276 	ld	l, (hl)
                                   9277 ;	spillPairReg hl
                                   9278 ;	spillPairReg hl
      00281E 26 00                 9279 	ld	h, #0x00
                                   9280 ;	spillPairReg hl
                                   9281 ;	spillPairReg hl
      002820 29                    9282 	add	hl, hl
      002821 29                    9283 	add	hl, hl
      002822 11r00r00              9284 	ld	de, #_shadow_OAM
      002825 19                    9285 	add	hl, de
      002826 23                    9286 	inc	hl
      002827 23                    9287 	inc	hl
      002828 71                    9288 	ld	(hl), c
                                   9289 ;src/main.c:934: oldestProjectile += 1;
      002829 FAr91r00              9290 	ld	a, (#_oldestProjectile)
                                   9291 ;src/main.c:970: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00282C C6 1E                 9292 	add	a, #0x1e
      00282E 4F                    9293 	ld	c, a
                                   9294 ;src/main.c:971: if (yDir == 1) {
      00282F FAr94r00              9295 	ld	a, (#_yDir)
                                   9296 ;src/main.c:972: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   9297 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002832 3D                    9298 	dec	a
      002833 20 27                 9299 	jr	NZ, 00115$
      002835 67                    9300 	ld	h,a
                                   9301 ;	spillPairReg hl
                                   9302 ;	spillPairReg hl
      002836 69                    9303 	ld	l, c
      002837 29                    9304 	add	hl, hl
      002838 29                    9305 	add	hl, hl
      002839 11r00r00              9306 	ld	de, #_shadow_OAM
      00283C 19                    9307 	add	hl, de
      00283D 23                    9308 	inc	hl
      00283E 23                    9309 	inc	hl
      00283F 23                    9310 	inc	hl
      002840 36 40                 9311 	ld	(hl), #0x40
                                   9312 ;src/main.c:973: projectiles[oldestProjectile].offset = 4;
      002842 21r91r00              9313 	ld	hl, #_oldestProjectile
      002845 4E                    9314 	ld	c, (hl)
      002846 06 00                 9315 	ld	b, #0x00
      002848 69                    9316 	ld	l, c
      002849 60                    9317 	ld	h, b
      00284A 29                    9318 	add	hl, hl
      00284B 09                    9319 	add	hl, bc
      00284C 29                    9320 	add	hl, hl
      00284D 29                    9321 	add	hl, hl
      00284E 09                    9322 	add	hl, bc
      00284F 01rB4r00              9323 	ld	bc,#_projectiles
      002852 09                    9324 	add	hl,bc
      002853 01 04 00              9325 	ld	bc, #0x0004
      002856 09                    9326 	add	hl, bc
      002857 36 04                 9327 	ld	(hl), #0x04
      002859 C3r35r2C              9328 	jp	00141$
      00285C                       9329 00115$:
                                   9330 ;src/main.c:976: set_sprite_prop(30+oldestProjectile, 0); 
                                   9331 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00285C 26 00                 9332 	ld	h, #0x00
                                   9333 ;	spillPairReg hl
                                   9334 ;	spillPairReg hl
      00285E 69                    9335 	ld	l, c
      00285F 29                    9336 	add	hl, hl
      002860 29                    9337 	add	hl, hl
      002861 11r00r00              9338 	ld	de, #_shadow_OAM
      002864 19                    9339 	add	hl, de
      002865 23                    9340 	inc	hl
      002866 23                    9341 	inc	hl
      002867 23                    9342 	inc	hl
      002868 36 00                 9343 	ld	(hl), #0x00
                                   9344 ;src/main.c:977: projectiles[oldestProjectile].offset = 12;
      00286A 21r91r00              9345 	ld	hl, #_oldestProjectile
      00286D 4E                    9346 	ld	c, (hl)
      00286E 06 00                 9347 	ld	b, #0x00
      002870 69                    9348 	ld	l, c
      002871 60                    9349 	ld	h, b
      002872 29                    9350 	add	hl, hl
      002873 09                    9351 	add	hl, bc
      002874 29                    9352 	add	hl, hl
      002875 29                    9353 	add	hl, hl
      002876 09                    9354 	add	hl, bc
      002877 01rB4r00              9355 	ld	bc,#_projectiles
      00287A 09                    9356 	add	hl,bc
      00287B 01 04 00              9357 	ld	bc, #0x0004
      00287E 09                    9358 	add	hl, bc
      00287F 36 0C                 9359 	ld	(hl), #0x0c
      002881 C3r35r2C              9360 	jp	00141$
      002884                       9361 00140$:
                                   9362 ;src/main.c:981: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   9363 ;src/main.c:980: else if (xDir != 0 && yDir == 0) {
      002884 FAr93r00              9364 	ld	a, (#_xDir)
      002887 B7                    9365 	or	a, a
      002888 CArCEr29              9366 	jp	Z, 00136$
      00288B FAr94r00              9367 	ld	a, (#_yDir)
      00288E B7                    9368 	or	a, a
      00288F C2rCEr29              9369 	jp	NZ, 00136$
                                   9370 ;src/main.c:981: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      002892 F8 04                 9371 	ldhl	sp,	#4
      002894 34                    9372 	inc	(hl)
      002895 34                    9373 	inc	(hl)
      002896 2B                    9374 	dec	hl
                                   9375 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002897 3A                    9376 	ld	a, (hl-)
      002898 22                    9377 	ld	(hl+), a
      002899 36 00                 9378 	ld	(hl), #0x00
      00289B 3E 02                 9379 	ld	a, #0x02
      00289D                       9380 00260$:
      00289D F8 02                 9381 	ldhl	sp,	#2
      00289F CB 26                 9382 	sla	(hl)
      0028A1 23                    9383 	inc	hl
      0028A2 CB 16                 9384 	rl	(hl)
      0028A4 3D                    9385 	dec	a
      0028A5 20 F6                 9386 	jr	NZ, 00260$
      0028A7 2B                    9387 	dec	hl
      0028A8 2A                    9388 	ld	a, (hl+)
      0028A9 5F                    9389 	ld	e, a
      0028AA 56                    9390 	ld	d, (hl)
      0028AB 21r00r00              9391 	ld	hl, #_shadow_OAM
      0028AE 19                    9392 	add	hl, de
      0028AF 33                    9393 	inc	sp
      0028B0 33                    9394 	inc	sp
      0028B1 5D                    9395 	ld	e, l
      0028B2 54                    9396 	ld	d, h
      0028B3 D5                    9397 	push	de
      0028B4 21 02 00              9398 	ld	hl, #0x0002
      0028B7 19                    9399 	add	hl, de
      0028B8 E5                    9400 	push	hl
      0028B9 7D                    9401 	ld	a, l
      0028BA F8 04                 9402 	ldhl	sp,	#4
      0028BC 77                    9403 	ld	(hl), a
      0028BD E1                    9404 	pop	hl
      0028BE 7C                    9405 	ld	a, h
      0028BF F8 03                 9406 	ldhl	sp,	#3
      0028C1 32                    9407 	ld	(hl-), a
      0028C2 2A                    9408 	ld	a, (hl+)
      0028C3 5F                    9409 	ld	e, a
      0028C4 2A                    9410 	ld	a, (hl+)
      0028C5 57                    9411 	ld	d, a
      0028C6 7E                    9412 	ld	a, (hl)
      0028C7 12                    9413 	ld	(de), a
                                   9414 ;src/main.c:934: oldestProjectile += 1;
      0028C8 FAr91r00              9415 	ld	a, (#_oldestProjectile)
      0028CB F8 04                 9416 	ldhl	sp,	#4
      0028CD 77                    9417 	ld	(hl), a
                                   9418 ;src/main.c:970: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0028CE 7E                    9419 	ld	a, (hl)
      0028CF C6 1E                 9420 	add	a, #0x1e
      0028D1 77                    9421 	ld	(hl), a
                                   9422 ;src/main.c:982: if (xDir == 1) {
      0028D2 FAr93r00              9423 	ld	a, (#_xDir)
      0028D5 3D                    9424 	dec	a
      0028D6 20 7B                 9425 	jr	NZ, 00118$
                                   9426 ;src/main.c:983: set_sprite_prop(30+oldestProjectile, 0);
      0028D8 F8 04                 9427 	ldhl	sp,	#4
                                   9428 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0028DA 3A                    9429 	ld	a, (hl-)
      0028DB 22                    9430 	ld	(hl+), a
      0028DC 36 00                 9431 	ld	(hl), #0x00
      0028DE 3E 02                 9432 	ld	a, #0x02
      0028E0                       9433 00263$:
      0028E0 F8 03                 9434 	ldhl	sp,	#3
      0028E2 CB 26                 9435 	sla	(hl)
      0028E4 23                    9436 	inc	hl
      0028E5 CB 16                 9437 	rl	(hl)
      0028E7 3D                    9438 	dec	a
      0028E8 20 F6                 9439 	jr	NZ, 00263$
      0028EA 2B                    9440 	dec	hl
      0028EB 2A                    9441 	ld	a, (hl+)
      0028EC 5F                    9442 	ld	e, a
      0028ED 56                    9443 	ld	d, (hl)
      0028EE 21r00r00              9444 	ld	hl, #_shadow_OAM
      0028F1 19                    9445 	add	hl, de
      0028F2 E5                    9446 	push	hl
      0028F3 7D                    9447 	ld	a, l
      0028F4 F8 03                 9448 	ldhl	sp,	#3
      0028F6 77                    9449 	ld	(hl), a
      0028F7 E1                    9450 	pop	hl
      0028F8 7C                    9451 	ld	a, h
      0028F9 F8 02                 9452 	ldhl	sp,	#2
      0028FB 32                    9453 	ld	(hl-), a
      0028FC 2A                    9454 	ld	a, (hl+)
      0028FD 5F                    9455 	ld	e, a
      0028FE 56                    9456 	ld	d, (hl)
      0028FF 21 03 00              9457 	ld	hl, #0x0003
      002902 19                    9458 	add	hl, de
      002903 E5                    9459 	push	hl
      002904 7D                    9460 	ld	a, l
      002905 F8 05                 9461 	ldhl	sp,	#5
      002907 77                    9462 	ld	(hl), a
      002908 E1                    9463 	pop	hl
      002909 7C                    9464 	ld	a, h
      00290A F8 04                 9465 	ldhl	sp,	#4
      00290C 32                    9466 	ld	(hl-), a
      00290D 2A                    9467 	ld	a,	(hl+)
      00290E 66                    9468 	ld	h, (hl)
      00290F 6F                    9469 	ld	l, a
      002910 36 00                 9470 	ld	(hl), #0x00
                                   9471 ;src/main.c:984: projectiles[oldestProjectile].offset = 12;
      002912 21r91r00              9472 	ld	hl, #_oldestProjectile
      002915 4E                    9473 	ld	c, (hl)
      002916 06 00                 9474 	ld	b, #0x00
      002918 69                    9475 	ld	l, c
      002919 60                    9476 	ld	h, b
      00291A 29                    9477 	add	hl, hl
      00291B 09                    9478 	add	hl, bc
      00291C 29                    9479 	add	hl, hl
      00291D 29                    9480 	add	hl, hl
      00291E 09                    9481 	add	hl, bc
      00291F E5                    9482 	push	hl
      002920 7D                    9483 	ld	a, l
      002921 F8 05                 9484 	ldhl	sp,	#5
      002923 77                    9485 	ld	(hl), a
      002924 E1                    9486 	pop	hl
      002925 7C                    9487 	ld	a, h
      002926 F8 04                 9488 	ldhl	sp,	#4
      002928 32                    9489 	ld	(hl-), a
      002929 2A                    9490 	ld	a, (hl+)
      00292A 5F                    9491 	ld	e, a
      00292B 56                    9492 	ld	d, (hl)
      00292C 21rB4r00              9493 	ld	hl, #_projectiles
      00292F 19                    9494 	add	hl, de
      002930 E5                    9495 	push	hl
      002931 7D                    9496 	ld	a, l
      002932 F8 03                 9497 	ldhl	sp,	#3
      002934 77                    9498 	ld	(hl), a
      002935 E1                    9499 	pop	hl
      002936 7C                    9500 	ld	a, h
      002937 F8 02                 9501 	ldhl	sp,	#2
      002939 32                    9502 	ld	(hl-), a
      00293A 2A                    9503 	ld	a, (hl+)
      00293B 5F                    9504 	ld	e, a
      00293C 56                    9505 	ld	d, (hl)
      00293D 21 04 00              9506 	ld	hl, #0x0004
      002940 19                    9507 	add	hl, de
      002941 E5                    9508 	push	hl
      002942 7D                    9509 	ld	a, l
      002943 F8 05                 9510 	ldhl	sp,	#5
      002945 77                    9511 	ld	(hl), a
      002946 E1                    9512 	pop	hl
      002947 7C                    9513 	ld	a, h
      002948 F8 04                 9514 	ldhl	sp,	#4
      00294A 32                    9515 	ld	(hl-), a
      00294B 2A                    9516 	ld	a,	(hl+)
      00294C 66                    9517 	ld	h, (hl)
      00294D 6F                    9518 	ld	l, a
      00294E 36 0C                 9519 	ld	(hl), #0x0c
      002950 C3r35r2C              9520 	jp	00141$
      002953                       9521 00118$:
                                   9522 ;src/main.c:987: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002953 F8 04                 9523 	ldhl	sp,	#4
                                   9524 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002955 3A                    9525 	ld	a, (hl-)
      002956 22                    9526 	ld	(hl+), a
      002957 36 00                 9527 	ld	(hl), #0x00
      002959 3E 02                 9528 	ld	a, #0x02
      00295B                       9529 00264$:
      00295B F8 03                 9530 	ldhl	sp,	#3
      00295D CB 26                 9531 	sla	(hl)
      00295F 23                    9532 	inc	hl
      002960 CB 16                 9533 	rl	(hl)
      002962 3D                    9534 	dec	a
      002963 20 F6                 9535 	jr	NZ, 00264$
      002965 2B                    9536 	dec	hl
      002966 2A                    9537 	ld	a, (hl+)
      002967 5F                    9538 	ld	e, a
      002968 56                    9539 	ld	d, (hl)
      002969 21r00r00              9540 	ld	hl, #_shadow_OAM
      00296C 19                    9541 	add	hl, de
      00296D E5                    9542 	push	hl
      00296E 7D                    9543 	ld	a, l
      00296F F8 03                 9544 	ldhl	sp,	#3
      002971 77                    9545 	ld	(hl), a
      002972 E1                    9546 	pop	hl
      002973 7C                    9547 	ld	a, h
      002974 F8 02                 9548 	ldhl	sp,	#2
      002976 32                    9549 	ld	(hl-), a
      002977 2A                    9550 	ld	a, (hl+)
      002978 5F                    9551 	ld	e, a
      002979 56                    9552 	ld	d, (hl)
      00297A 21 03 00              9553 	ld	hl, #0x0003
      00297D 19                    9554 	add	hl, de
      00297E E5                    9555 	push	hl
      00297F 7D                    9556 	ld	a, l
      002980 F8 05                 9557 	ldhl	sp,	#5
      002982 77                    9558 	ld	(hl), a
      002983 E1                    9559 	pop	hl
      002984 7C                    9560 	ld	a, h
      002985 F8 04                 9561 	ldhl	sp,	#4
      002987 32                    9562 	ld	(hl-), a
      002988 2A                    9563 	ld	a,	(hl+)
      002989 66                    9564 	ld	h, (hl)
      00298A 6F                    9565 	ld	l, a
      00298B 36 20                 9566 	ld	(hl), #0x20
                                   9567 ;src/main.c:988: projectiles[oldestProjectile].offset = 12;
      00298D 21r91r00              9568 	ld	hl, #_oldestProjectile
      002990 4E                    9569 	ld	c, (hl)
      002991 06 00                 9570 	ld	b, #0x00
      002993 69                    9571 	ld	l, c
      002994 60                    9572 	ld	h, b
      002995 29                    9573 	add	hl, hl
      002996 09                    9574 	add	hl, bc
      002997 29                    9575 	add	hl, hl
      002998 29                    9576 	add	hl, hl
      002999 09                    9577 	add	hl, bc
      00299A E5                    9578 	push	hl
      00299B 7D                    9579 	ld	a, l
      00299C F8 05                 9580 	ldhl	sp,	#5
      00299E 77                    9581 	ld	(hl), a
      00299F E1                    9582 	pop	hl
      0029A0 7C                    9583 	ld	a, h
      0029A1 F8 04                 9584 	ldhl	sp,	#4
      0029A3 32                    9585 	ld	(hl-), a
      0029A4 2A                    9586 	ld	a, (hl+)
      0029A5 5F                    9587 	ld	e, a
      0029A6 56                    9588 	ld	d, (hl)
      0029A7 21rB4r00              9589 	ld	hl, #_projectiles
      0029AA 19                    9590 	add	hl, de
      0029AB E5                    9591 	push	hl
      0029AC 7D                    9592 	ld	a, l
      0029AD F8 03                 9593 	ldhl	sp,	#3
      0029AF 77                    9594 	ld	(hl), a
      0029B0 E1                    9595 	pop	hl
      0029B1 7C                    9596 	ld	a, h
      0029B2 F8 02                 9597 	ldhl	sp,	#2
      0029B4 32                    9598 	ld	(hl-), a
      0029B5 2A                    9599 	ld	a, (hl+)
      0029B6 5F                    9600 	ld	e, a
      0029B7 56                    9601 	ld	d, (hl)
      0029B8 21 04 00              9602 	ld	hl, #0x0004
      0029BB 19                    9603 	add	hl, de
      0029BC E5                    9604 	push	hl
      0029BD 7D                    9605 	ld	a, l
      0029BE F8 05                 9606 	ldhl	sp,	#5
      0029C0 77                    9607 	ld	(hl), a
      0029C1 E1                    9608 	pop	hl
      0029C2 7C                    9609 	ld	a, h
      0029C3 F8 04                 9610 	ldhl	sp,	#4
      0029C5 32                    9611 	ld	(hl-), a
      0029C6 2A                    9612 	ld	a,	(hl+)
      0029C7 66                    9613 	ld	h, (hl)
      0029C8 6F                    9614 	ld	l, a
      0029C9 36 0C                 9615 	ld	(hl), #0x0c
      0029CB C3r35r2C              9616 	jp	00141$
      0029CE                       9617 00136$:
                                   9618 ;src/main.c:992: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      0029CE F8 04                 9619 	ldhl	sp,	#4
      0029D0 7E                    9620 	ld	a, (hl)
      0029D1 C6 04                 9621 	add	a, #0x04
      0029D3 F8 00                 9622 	ldhl	sp,	#0
      0029D5 77                    9623 	ld	(hl), a
      0029D6 F8 03                 9624 	ldhl	sp,	#3
                                   9625 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0029D8 7E                    9626 	ld	a, (hl)
      0029D9 22                    9627 	ld	(hl+), a
      0029DA 36 00                 9628 	ld	(hl), #0x00
      0029DC 3E 02                 9629 	ld	a, #0x02
      0029DE                       9630 00265$:
      0029DE F8 03                 9631 	ldhl	sp,	#3
      0029E0 CB 26                 9632 	sla	(hl)
      0029E2 23                    9633 	inc	hl
      0029E3 CB 16                 9634 	rl	(hl)
      0029E5 3D                    9635 	dec	a
      0029E6 20 F6                 9636 	jr	NZ, 00265$
      0029E8 2B                    9637 	dec	hl
      0029E9 2A                    9638 	ld	a, (hl+)
      0029EA 5F                    9639 	ld	e, a
      0029EB 56                    9640 	ld	d, (hl)
      0029EC 21r00r00              9641 	ld	hl, #_shadow_OAM
      0029EF 19                    9642 	add	hl, de
      0029F0 E5                    9643 	push	hl
      0029F1 7D                    9644 	ld	a, l
      0029F2 F8 03                 9645 	ldhl	sp,	#3
      0029F4 77                    9646 	ld	(hl), a
      0029F5 E1                    9647 	pop	hl
      0029F6 7C                    9648 	ld	a, h
      0029F7 F8 02                 9649 	ldhl	sp,	#2
      0029F9 32                    9650 	ld	(hl-), a
      0029FA 2A                    9651 	ld	a, (hl+)
      0029FB 5F                    9652 	ld	e, a
      0029FC 56                    9653 	ld	d, (hl)
      0029FD 21 02 00              9654 	ld	hl, #0x0002
      002A00 19                    9655 	add	hl, de
      002A01 E5                    9656 	push	hl
      002A02 7D                    9657 	ld	a, l
      002A03 F8 05                 9658 	ldhl	sp,	#5
      002A05 77                    9659 	ld	(hl), a
      002A06 E1                    9660 	pop	hl
      002A07 7C                    9661 	ld	a, h
      002A08 F8 04                 9662 	ldhl	sp,	#4
      002A0A 32                    9663 	ld	(hl-), a
      002A0B 2A                    9664 	ld	a, (hl+)
      002A0C 5F                    9665 	ld	e, a
      002A0D 56                    9666 	ld	d, (hl)
      002A0E F8 00                 9667 	ldhl	sp,	#0
      002A10 7E                    9668 	ld	a, (hl)
      002A11 12                    9669 	ld	(de), a
                                   9670 ;src/main.c:993: if (xDir == 1 && yDir == -1) {
      002A12 FAr93r00              9671 	ld	a, (#_xDir)
      002A15 3D                    9672 	dec	a
      002A16 3E 01                 9673 	ld	a, #0x01
      002A18 28 01                 9674 	jr	Z, 00267$
      002A1A AF                    9675 	xor	a, a
      002A1B                       9676 00267$:
      002A1B F8 04                 9677 	ldhl	sp,	#4
      002A1D 77                    9678 	ld	(hl), a
                                   9679 ;src/main.c:934: oldestProjectile += 1;
      002A1E 21r91r00              9680 	ld	hl, #_oldestProjectile
      002A21 4E                    9681 	ld	c, (hl)
                                   9682 ;src/main.c:993: if (xDir == 1 && yDir == -1) {
      002A22 FAr94r00              9683 	ld	a, (#_yDir)
      002A25 3C                    9684 	inc	a
      002A26 3E 01                 9685 	ld	a, #0x01
      002A28 28 01                 9686 	jr	Z, 00269$
      002A2A AF                    9687 	xor	a, a
      002A2B                       9688 00269$:
      002A2B F8 01                 9689 	ldhl	sp,	#1
                                   9690 ;src/main.c:970: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002A2D 22                    9691 	ld	(hl+), a
      002A2E 79                    9692 	ld	a, c
      002A2F C6 1E                 9693 	add	a, #0x1e
                                   9694 ;src/main.c:993: if (xDir == 1 && yDir == -1) {
      002A31 22                    9695 	ld	(hl+), a
      002A32 23                    9696 	inc	hl
      002A33 7E                    9697 	ld	a, (hl)
      002A34 B7                    9698 	or	a, a
      002A35 CArB8r2A              9699 	jp	Z, 00132$
      002A38 F8 01                 9700 	ldhl	sp,	#1
      002A3A 7E                    9701 	ld	a, (hl)
      002A3B B7                    9702 	or	a, a
      002A3C 28 7A                 9703 	jr	Z, 00132$
                                   9704 ;src/main.c:994: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002A3E 23                    9705 	inc	hl
                                   9706 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002A3F 2A                    9707 	ld	a, (hl+)
      002A40 22                    9708 	ld	(hl+), a
      002A41 36 00                 9709 	ld	(hl), #0x00
      002A43 3E 02                 9710 	ld	a, #0x02
      002A45                       9711 00270$:
      002A45 F8 03                 9712 	ldhl	sp,	#3
      002A47 CB 26                 9713 	sla	(hl)
      002A49 23                    9714 	inc	hl
      002A4A CB 16                 9715 	rl	(hl)
      002A4C 3D                    9716 	dec	a
      002A4D 20 F6                 9717 	jr	NZ, 00270$
      002A4F 2B                    9718 	dec	hl
      002A50 2A                    9719 	ld	a, (hl+)
      002A51 5F                    9720 	ld	e, a
      002A52 56                    9721 	ld	d, (hl)
      002A53 21r00r00              9722 	ld	hl, #_shadow_OAM
      002A56 19                    9723 	add	hl, de
      002A57 E5                    9724 	push	hl
      002A58 7D                    9725 	ld	a, l
      002A59 F8 03                 9726 	ldhl	sp,	#3
      002A5B 77                    9727 	ld	(hl), a
      002A5C E1                    9728 	pop	hl
      002A5D 7C                    9729 	ld	a, h
      002A5E F8 02                 9730 	ldhl	sp,	#2
      002A60 32                    9731 	ld	(hl-), a
      002A61 2A                    9732 	ld	a, (hl+)
      002A62 5F                    9733 	ld	e, a
      002A63 56                    9734 	ld	d, (hl)
      002A64 21 03 00              9735 	ld	hl, #0x0003
      002A67 19                    9736 	add	hl, de
      002A68 E5                    9737 	push	hl
      002A69 7D                    9738 	ld	a, l
      002A6A F8 05                 9739 	ldhl	sp,	#5
      002A6C 77                    9740 	ld	(hl), a
      002A6D E1                    9741 	pop	hl
      002A6E 7C                    9742 	ld	a, h
      002A6F F8 04                 9743 	ldhl	sp,	#4
      002A71 32                    9744 	ld	(hl-), a
      002A72 2A                    9745 	ld	a,	(hl+)
      002A73 66                    9746 	ld	h, (hl)
      002A74 6F                    9747 	ld	l, a
      002A75 36 00                 9748 	ld	(hl), #0x00
                                   9749 ;src/main.c:995: projectiles[oldestProjectile].offset = 12;
      002A77 21r91r00              9750 	ld	hl, #_oldestProjectile
      002A7A 4E                    9751 	ld	c, (hl)
      002A7B 06 00                 9752 	ld	b, #0x00
      002A7D 69                    9753 	ld	l, c
      002A7E 60                    9754 	ld	h, b
      002A7F 29                    9755 	add	hl, hl
      002A80 09                    9756 	add	hl, bc
      002A81 29                    9757 	add	hl, hl
      002A82 29                    9758 	add	hl, hl
      002A83 09                    9759 	add	hl, bc
      002A84 E5                    9760 	push	hl
      002A85 7D                    9761 	ld	a, l
      002A86 F8 05                 9762 	ldhl	sp,	#5
      002A88 77                    9763 	ld	(hl), a
      002A89 E1                    9764 	pop	hl
      002A8A 7C                    9765 	ld	a, h
      002A8B F8 04                 9766 	ldhl	sp,	#4
      002A8D 32                    9767 	ld	(hl-), a
      002A8E 2A                    9768 	ld	a, (hl+)
      002A8F 5F                    9769 	ld	e, a
      002A90 56                    9770 	ld	d, (hl)
      002A91 21rB4r00              9771 	ld	hl, #_projectiles
      002A94 19                    9772 	add	hl, de
      002A95 E5                    9773 	push	hl
      002A96 7D                    9774 	ld	a, l
      002A97 F8 03                 9775 	ldhl	sp,	#3
      002A99 77                    9776 	ld	(hl), a
      002A9A E1                    9777 	pop	hl
      002A9B 7C                    9778 	ld	a, h
      002A9C F8 02                 9779 	ldhl	sp,	#2
      002A9E 32                    9780 	ld	(hl-), a
      002A9F 2A                    9781 	ld	a, (hl+)
      002AA0 5F                    9782 	ld	e, a
      002AA1 56                    9783 	ld	d, (hl)
      002AA2 21 04 00              9784 	ld	hl, #0x0004
      002AA5 19                    9785 	add	hl, de
      002AA6 E5                    9786 	push	hl
      002AA7 7D                    9787 	ld	a, l
      002AA8 F8 05                 9788 	ldhl	sp,	#5
      002AAA 77                    9789 	ld	(hl), a
      002AAB E1                    9790 	pop	hl
      002AAC 7C                    9791 	ld	a, h
      002AAD F8 04                 9792 	ldhl	sp,	#4
      002AAF 32                    9793 	ld	(hl-), a
      002AB0 2A                    9794 	ld	a,	(hl+)
      002AB1 66                    9795 	ld	h, (hl)
      002AB2 6F                    9796 	ld	l, a
      002AB3 36 0C                 9797 	ld	(hl), #0x0c
      002AB5 C3r35r2C              9798 	jp	00141$
      002AB8                       9799 00132$:
                                   9800 ;src/main.c:971: if (yDir == 1) {
      002AB8 FAr94r00              9801 	ld	a, (#_yDir)
      002ABB 3D                    9802 	dec	a
      002ABC 3E 01                 9803 	ld	a, #0x01
      002ABE 28 01                 9804 	jr	Z, 00272$
      002AC0 AF                    9805 	xor	a, a
      002AC1                       9806 00272$:
      002AC1 F8 03                 9807 	ldhl	sp,	#3
                                   9808 ;src/main.c:997: else if (xDir == 1 && yDir == 1) {
      002AC3 22                    9809 	ld	(hl+), a
      002AC4 7E                    9810 	ld	a, (hl)
      002AC5 B7                    9811 	or	a, a
      002AC6 CAr48r2B              9812 	jp	Z, 00128$
      002AC9 2B                    9813 	dec	hl
      002ACA 7E                    9814 	ld	a, (hl)
      002ACB B7                    9815 	or	a, a
      002ACC 28 7A                 9816 	jr	Z, 00128$
                                   9817 ;src/main.c:998: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      002ACE 2B                    9818 	dec	hl
                                   9819 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002ACF 2A                    9820 	ld	a, (hl+)
      002AD0 22                    9821 	ld	(hl+), a
      002AD1 36 00                 9822 	ld	(hl), #0x00
      002AD3 3E 02                 9823 	ld	a, #0x02
      002AD5                       9824 00273$:
      002AD5 F8 03                 9825 	ldhl	sp,	#3
      002AD7 CB 26                 9826 	sla	(hl)
      002AD9 23                    9827 	inc	hl
      002ADA CB 16                 9828 	rl	(hl)
      002ADC 3D                    9829 	dec	a
      002ADD 20 F6                 9830 	jr	NZ, 00273$
      002ADF 2B                    9831 	dec	hl
      002AE0 2A                    9832 	ld	a, (hl+)
      002AE1 5F                    9833 	ld	e, a
      002AE2 56                    9834 	ld	d, (hl)
      002AE3 21r00r00              9835 	ld	hl, #_shadow_OAM
      002AE6 19                    9836 	add	hl, de
      002AE7 E5                    9837 	push	hl
      002AE8 7D                    9838 	ld	a, l
      002AE9 F8 03                 9839 	ldhl	sp,	#3
      002AEB 77                    9840 	ld	(hl), a
      002AEC E1                    9841 	pop	hl
      002AED 7C                    9842 	ld	a, h
      002AEE F8 02                 9843 	ldhl	sp,	#2
      002AF0 32                    9844 	ld	(hl-), a
      002AF1 2A                    9845 	ld	a, (hl+)
      002AF2 5F                    9846 	ld	e, a
      002AF3 56                    9847 	ld	d, (hl)
      002AF4 21 03 00              9848 	ld	hl, #0x0003
      002AF7 19                    9849 	add	hl, de
      002AF8 E5                    9850 	push	hl
      002AF9 7D                    9851 	ld	a, l
      002AFA F8 05                 9852 	ldhl	sp,	#5
      002AFC 77                    9853 	ld	(hl), a
      002AFD E1                    9854 	pop	hl
      002AFE 7C                    9855 	ld	a, h
      002AFF F8 04                 9856 	ldhl	sp,	#4
      002B01 32                    9857 	ld	(hl-), a
      002B02 2A                    9858 	ld	a,	(hl+)
      002B03 66                    9859 	ld	h, (hl)
      002B04 6F                    9860 	ld	l, a
      002B05 36 40                 9861 	ld	(hl), #0x40
                                   9862 ;src/main.c:999: projectiles[oldestProjectile].offset = 4;
      002B07 21r91r00              9863 	ld	hl, #_oldestProjectile
      002B0A 4E                    9864 	ld	c, (hl)
      002B0B 06 00                 9865 	ld	b, #0x00
      002B0D 69                    9866 	ld	l, c
      002B0E 60                    9867 	ld	h, b
      002B0F 29                    9868 	add	hl, hl
      002B10 09                    9869 	add	hl, bc
      002B11 29                    9870 	add	hl, hl
      002B12 29                    9871 	add	hl, hl
      002B13 09                    9872 	add	hl, bc
      002B14 E5                    9873 	push	hl
      002B15 7D                    9874 	ld	a, l
      002B16 F8 05                 9875 	ldhl	sp,	#5
      002B18 77                    9876 	ld	(hl), a
      002B19 E1                    9877 	pop	hl
      002B1A 7C                    9878 	ld	a, h
      002B1B F8 04                 9879 	ldhl	sp,	#4
      002B1D 32                    9880 	ld	(hl-), a
      002B1E 2A                    9881 	ld	a, (hl+)
      002B1F 5F                    9882 	ld	e, a
      002B20 56                    9883 	ld	d, (hl)
      002B21 21rB4r00              9884 	ld	hl, #_projectiles
      002B24 19                    9885 	add	hl, de
      002B25 E5                    9886 	push	hl
      002B26 7D                    9887 	ld	a, l
      002B27 F8 03                 9888 	ldhl	sp,	#3
      002B29 77                    9889 	ld	(hl), a
      002B2A E1                    9890 	pop	hl
      002B2B 7C                    9891 	ld	a, h
      002B2C F8 02                 9892 	ldhl	sp,	#2
      002B2E 32                    9893 	ld	(hl-), a
      002B2F 2A                    9894 	ld	a, (hl+)
      002B30 5F                    9895 	ld	e, a
      002B31 56                    9896 	ld	d, (hl)
      002B32 21 04 00              9897 	ld	hl, #0x0004
      002B35 19                    9898 	add	hl, de
      002B36 E5                    9899 	push	hl
      002B37 7D                    9900 	ld	a, l
      002B38 F8 05                 9901 	ldhl	sp,	#5
      002B3A 77                    9902 	ld	(hl), a
      002B3B E1                    9903 	pop	hl
      002B3C 7C                    9904 	ld	a, h
      002B3D F8 04                 9905 	ldhl	sp,	#4
      002B3F 32                    9906 	ld	(hl-), a
      002B40 2A                    9907 	ld	a,	(hl+)
      002B41 66                    9908 	ld	h, (hl)
      002B42 6F                    9909 	ld	l, a
      002B43 36 04                 9910 	ld	(hl), #0x04
      002B45 C3r35r2C              9911 	jp	00141$
      002B48                       9912 00128$:
                                   9913 ;src/main.c:1001: else if (xDir == -1 && yDir == 1) {
      002B48 FAr93r00              9914 	ld	a, (#_xDir)
      002B4B 3C                    9915 	inc	a
      002B4C 3E 01                 9916 	ld	a, #0x01
      002B4E 28 01                 9917 	jr	Z, 00275$
      002B50 AF                    9918 	xor	a, a
      002B51                       9919 00275$:
      002B51 F8 04                 9920 	ldhl	sp,	#4
      002B53 77                    9921 	ld	(hl), a
      002B54 7E                    9922 	ld	a, (hl)
      002B55 B7                    9923 	or	a, a
      002B56 CArD7r2B              9924 	jp	Z, 00124$
      002B59 2B                    9925 	dec	hl
      002B5A 7E                    9926 	ld	a, (hl)
      002B5B B7                    9927 	or	a, a
      002B5C 28 79                 9928 	jr	Z, 00124$
                                   9929 ;src/main.c:1002: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002B5E 2B                    9930 	dec	hl
                                   9931 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002B5F 2A                    9932 	ld	a, (hl+)
      002B60 22                    9933 	ld	(hl+), a
      002B61 36 00                 9934 	ld	(hl), #0x00
      002B63 3E 02                 9935 	ld	a, #0x02
      002B65                       9936 00276$:
      002B65 F8 03                 9937 	ldhl	sp,	#3
      002B67 CB 26                 9938 	sla	(hl)
      002B69 23                    9939 	inc	hl
      002B6A CB 16                 9940 	rl	(hl)
      002B6C 3D                    9941 	dec	a
      002B6D 20 F6                 9942 	jr	NZ, 00276$
      002B6F 2B                    9943 	dec	hl
      002B70 2A                    9944 	ld	a, (hl+)
      002B71 5F                    9945 	ld	e, a
      002B72 56                    9946 	ld	d, (hl)
      002B73 21r00r00              9947 	ld	hl, #_shadow_OAM
      002B76 19                    9948 	add	hl, de
      002B77 E5                    9949 	push	hl
      002B78 7D                    9950 	ld	a, l
      002B79 F8 03                 9951 	ldhl	sp,	#3
      002B7B 77                    9952 	ld	(hl), a
      002B7C E1                    9953 	pop	hl
      002B7D 7C                    9954 	ld	a, h
      002B7E F8 02                 9955 	ldhl	sp,	#2
      002B80 32                    9956 	ld	(hl-), a
      002B81 2A                    9957 	ld	a, (hl+)
      002B82 5F                    9958 	ld	e, a
      002B83 56                    9959 	ld	d, (hl)
      002B84 21 03 00              9960 	ld	hl, #0x0003
      002B87 19                    9961 	add	hl, de
      002B88 E5                    9962 	push	hl
      002B89 7D                    9963 	ld	a, l
      002B8A F8 05                 9964 	ldhl	sp,	#5
      002B8C 77                    9965 	ld	(hl), a
      002B8D E1                    9966 	pop	hl
      002B8E 7C                    9967 	ld	a, h
      002B8F F8 04                 9968 	ldhl	sp,	#4
      002B91 32                    9969 	ld	(hl-), a
      002B92 2A                    9970 	ld	a,	(hl+)
      002B93 66                    9971 	ld	h, (hl)
      002B94 6F                    9972 	ld	l, a
      002B95 36 60                 9973 	ld	(hl), #0x60
                                   9974 ;src/main.c:1003: projectiles[oldestProjectile].offset = 4;
      002B97 21r91r00              9975 	ld	hl, #_oldestProjectile
      002B9A 4E                    9976 	ld	c, (hl)
      002B9B 06 00                 9977 	ld	b, #0x00
      002B9D 69                    9978 	ld	l, c
      002B9E 60                    9979 	ld	h, b
      002B9F 29                    9980 	add	hl, hl
      002BA0 09                    9981 	add	hl, bc
      002BA1 29                    9982 	add	hl, hl
      002BA2 29                    9983 	add	hl, hl
      002BA3 09                    9984 	add	hl, bc
      002BA4 E5                    9985 	push	hl
      002BA5 7D                    9986 	ld	a, l
      002BA6 F8 05                 9987 	ldhl	sp,	#5
      002BA8 77                    9988 	ld	(hl), a
      002BA9 E1                    9989 	pop	hl
      002BAA 7C                    9990 	ld	a, h
      002BAB F8 04                 9991 	ldhl	sp,	#4
      002BAD 32                    9992 	ld	(hl-), a
      002BAE 2A                    9993 	ld	a, (hl+)
      002BAF 5F                    9994 	ld	e, a
      002BB0 56                    9995 	ld	d, (hl)
      002BB1 21rB4r00              9996 	ld	hl, #_projectiles
      002BB4 19                    9997 	add	hl, de
      002BB5 E5                    9998 	push	hl
      002BB6 7D                    9999 	ld	a, l
      002BB7 F8 03                10000 	ldhl	sp,	#3
      002BB9 77                   10001 	ld	(hl), a
      002BBA E1                   10002 	pop	hl
      002BBB 7C                   10003 	ld	a, h
      002BBC F8 02                10004 	ldhl	sp,	#2
      002BBE 32                   10005 	ld	(hl-), a
      002BBF 2A                   10006 	ld	a, (hl+)
      002BC0 5F                   10007 	ld	e, a
      002BC1 56                   10008 	ld	d, (hl)
      002BC2 21 04 00             10009 	ld	hl, #0x0004
      002BC5 19                   10010 	add	hl, de
      002BC6 E5                   10011 	push	hl
      002BC7 7D                   10012 	ld	a, l
      002BC8 F8 05                10013 	ldhl	sp,	#5
      002BCA 77                   10014 	ld	(hl), a
      002BCB E1                   10015 	pop	hl
      002BCC 7C                   10016 	ld	a, h
      002BCD F8 04                10017 	ldhl	sp,	#4
      002BCF 32                   10018 	ld	(hl-), a
      002BD0 2A                   10019 	ld	a,	(hl+)
      002BD1 66                   10020 	ld	h, (hl)
      002BD2 6F                   10021 	ld	l, a
      002BD3 36 04                10022 	ld	(hl), #0x04
      002BD5 18 5E                10023 	jr	00141$
      002BD7                      10024 00124$:
                                  10025 ;src/main.c:1005: else if (xDir == -1 && yDir == -1) {
      002BD7 F8 04                10026 	ldhl	sp,	#4
      002BD9 7E                   10027 	ld	a, (hl)
      002BDA B7                   10028 	or	a, a
      002BDB 28 58                10029 	jr	Z, 00141$
      002BDD F8 01                10030 	ldhl	sp,	#1
      002BDF 7E                   10031 	ld	a, (hl)
      002BE0 B7                   10032 	or	a, a
      002BE1 28 52                10033 	jr	Z, 00141$
                                  10034 ;src/main.c:1006: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002BE3 23                   10035 	inc	hl
                                  10036 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002BE4 2A                   10037 	ld	a, (hl+)
      002BE5 22                   10038 	ld	(hl+), a
      002BE6 36 00                10039 	ld	(hl), #0x00
      002BE8 3E 02                10040 	ld	a, #0x02
      002BEA                      10041 00277$:
      002BEA F8 03                10042 	ldhl	sp,	#3
      002BEC CB 26                10043 	sla	(hl)
      002BEE 23                   10044 	inc	hl
      002BEF CB 16                10045 	rl	(hl)
      002BF1 3D                   10046 	dec	a
      002BF2 20 F6                10047 	jr	NZ, 00277$
      002BF4 2B                   10048 	dec	hl
      002BF5 2A                   10049 	ld	a, (hl+)
      002BF6 5F                   10050 	ld	e, a
      002BF7 56                   10051 	ld	d, (hl)
      002BF8 21r00r00             10052 	ld	hl, #_shadow_OAM
      002BFB 19                   10053 	add	hl, de
      002BFC E5                   10054 	push	hl
      002BFD 7D                   10055 	ld	a, l
      002BFE F8 03                10056 	ldhl	sp,	#3
      002C00 77                   10057 	ld	(hl), a
      002C01 E1                   10058 	pop	hl
      002C02 7C                   10059 	ld	a, h
      002C03 F8 02                10060 	ldhl	sp,	#2
      002C05 32                   10061 	ld	(hl-), a
      002C06 2A                   10062 	ld	a, (hl+)
      002C07 5F                   10063 	ld	e, a
      002C08 56                   10064 	ld	d, (hl)
      002C09 21 03 00             10065 	ld	hl, #0x0003
      002C0C 19                   10066 	add	hl, de
      002C0D E5                   10067 	push	hl
      002C0E 7D                   10068 	ld	a, l
      002C0F F8 05                10069 	ldhl	sp,	#5
      002C11 77                   10070 	ld	(hl), a
      002C12 E1                   10071 	pop	hl
      002C13 7C                   10072 	ld	a, h
      002C14 F8 04                10073 	ldhl	sp,	#4
      002C16 32                   10074 	ld	(hl-), a
      002C17 2A                   10075 	ld	a,	(hl+)
      002C18 66                   10076 	ld	h, (hl)
      002C19 6F                   10077 	ld	l, a
      002C1A 36 20                10078 	ld	(hl), #0x20
                                  10079 ;src/main.c:1007: projectiles[oldestProjectile].offset = 12;
      002C1C 21r91r00             10080 	ld	hl, #_oldestProjectile
      002C1F 4E                   10081 	ld	c, (hl)
      002C20 06 00                10082 	ld	b, #0x00
      002C22 69                   10083 	ld	l, c
      002C23 60                   10084 	ld	h, b
      002C24 29                   10085 	add	hl, hl
      002C25 09                   10086 	add	hl, bc
      002C26 29                   10087 	add	hl, hl
      002C27 29                   10088 	add	hl, hl
      002C28 09                   10089 	add	hl, bc
      002C29 01rB4r00             10090 	ld	bc,#_projectiles
      002C2C 09                   10091 	add	hl,bc
      002C2D 4D                   10092 	ld	c, l
      002C2E 44                   10093 	ld	b, h
      002C2F 21 04 00             10094 	ld	hl, #0x0004
      002C32 09                   10095 	add	hl, bc
      002C33 36 0C                10096 	ld	(hl), #0x0c
      002C35                      10097 00141$:
                                  10098 ;src/main.c:1011: fireCooldown = projectiles[oldestProjectile].delay;
      002C35 21r91r00             10099 	ld	hl, #_oldestProjectile
      002C38 4E                   10100 	ld	c, (hl)
      002C39 06 00                10101 	ld	b, #0x00
      002C3B 69                   10102 	ld	l, c
      002C3C 60                   10103 	ld	h, b
      002C3D 29                   10104 	add	hl, hl
      002C3E 09                   10105 	add	hl, bc
      002C3F 29                   10106 	add	hl, hl
      002C40 29                   10107 	add	hl, hl
      002C41 09                   10108 	add	hl, bc
      002C42 01rB4r00             10109 	ld	bc,#_projectiles
      002C45 09                   10110 	add	hl,bc
      002C46 4D                   10111 	ld	c, l
      002C47 44                   10112 	ld	b, h
      002C48 21 0B 00             10113 	ld	hl, #0x000b
      002C4B 09                   10114 	add	hl, bc
      002C4C 7E                   10115 	ld	a, (hl)
      002C4D EAr92r00             10116 	ld	(#_fireCooldown),a
                                  10117 ;src/main.c:1013: playSound(projectiles[oldestProjectile].type);
      002C50 21 0C 00             10118 	ld	hl, #0x000c
      002C53 09                   10119 	add	hl, bc
      002C54 7E                   10120 	ld	a, (hl)
      002C55 F5                   10121 	push	af
      002C56 33                   10122 	inc	sp
      002C57 CDr9Br0F             10123 	call	_playSound
      002C5A 33                   10124 	inc	sp
      002C5B                      10125 00154$:
                                  10126 ;src/main.c:1017: }
      002C5B E8 05                10127 	add	sp, #5
      002C5D C9                   10128 	ret
                                  10129 ;src/main.c:1020: void moveProjectiles() {
                                  10130 ;	---------------------------------
                                  10131 ; Function moveProjectiles
                                  10132 ; ---------------------------------
      002C5E                      10133 _moveProjectiles::
      002C5E E8 F6                10134 	add	sp, #-10
                                  10135 ;src/main.c:1021: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002C60 F8 09                10136 	ldhl	sp,	#9
      002C62 36 00                10137 	ld	(hl), #0x00
      002C64                      10138 00112$:
      002C64 21r9Fr0B             10139 	ld	hl, #_PROJECTILECOUNT
      002C67 4E                   10140 	ld	c, (hl)
      002C68 F8 09                10141 	ldhl	sp,	#9
      002C6A 7E                   10142 	ld	a, (hl)
      002C6B 91                   10143 	sub	a, c
      002C6C D2r3Er2E             10144 	jp	NC, 00114$
                                  10145 ;src/main.c:1022: if (projectiles[i].active) {
      002C6F 4E                   10146 	ld	c, (hl)
      002C70 06 00                10147 	ld	b, #0x00
      002C72 69                   10148 	ld	l, c
      002C73 60                   10149 	ld	h, b
      002C74 29                   10150 	add	hl, hl
      002C75 09                   10151 	add	hl, bc
      002C76 29                   10152 	add	hl, hl
      002C77 29                   10153 	add	hl, hl
      002C78 09                   10154 	add	hl, bc
      002C79 01rB4r00             10155 	ld	bc,#_projectiles
      002C7C 09                   10156 	add	hl,bc
      002C7D E5                   10157 	push	hl
      002C7E 7D                   10158 	ld	a, l
      002C7F F8 07                10159 	ldhl	sp,	#7
      002C81 77                   10160 	ld	(hl), a
      002C82 E1                   10161 	pop	hl
      002C83 7C                   10162 	ld	a, h
      002C84 F8 06                10163 	ldhl	sp,	#6
      002C86 32                   10164 	ld	(hl-), a
      002C87 2A                   10165 	ld	a, (hl+)
      002C88 5F                   10166 	ld	e, a
      002C89 56                   10167 	ld	d, (hl)
      002C8A 21 0A 00             10168 	ld	hl, #0x000a
      002C8D 19                   10169 	add	hl, de
      002C8E 4D                   10170 	ld	c, l
      002C8F 44                   10171 	ld	b, h
      002C90 0A                   10172 	ld	a, (bc)
      002C91 F8 08                10173 	ldhl	sp,	#8
      002C93 77                   10174 	ld	(hl), a
      002C94 7E                   10175 	ld	a, (hl)
      002C95 B7                   10176 	or	a, a
      002C96 CAr38r2E             10177 	jp	Z, 00113$
                                  10178 ;src/main.c:1023: projectiles[i].x -= xOverflow;
      002C99 2B                   10179 	dec	hl
      002C9A 2B                   10180 	dec	hl
      002C9B 2B                   10181 	dec	hl
      002C9C 2A                   10182 	ld	a, (hl+)
      002C9D 5F                   10183 	ld	e, a
      002C9E 56                   10184 	ld	d, (hl)
      002C9F 1A                   10185 	ld	a, (de)
      002CA0 47                   10186 	ld	b, a
      002CA1 13                   10187 	inc	de
      002CA2 1A                   10188 	ld	a, (de)
      002CA3 4F                   10189 	ld	c, a
      002CA4 58                   10190 	ld	e, b
      002CA5 51                   10191 	ld	d, c
      002CA6 21rA1r00             10192 	ld	hl, #_xOverflow
      002CA9 2A                   10193 	ld	a,	(hl+)
      002CAA 66                   10194 	ld	h, (hl)
      002CAB 6F                   10195 	ld	l, a
      002CAC 7B                   10196 	ld	a, e
      002CAD 95                   10197 	sub	a, l
      002CAE 5F                   10198 	ld	e, a
      002CAF 7A                   10199 	ld	a, d
      002CB0 9C                   10200 	sbc	a, h
      002CB1 F8 01                10201 	ldhl	sp,	#1
      002CB3 32                   10202 	ld	(hl-), a
      002CB4 73                   10203 	ld	(hl), e
      002CB5 F8 05                10204 	ldhl	sp,#5
      002CB7 2A                   10205 	ld	a, (hl+)
      002CB8 5F                   10206 	ld	e, a
      002CB9 56                   10207 	ld	d, (hl)
      002CBA F8 00                10208 	ldhl	sp,	#0
      002CBC 2A                   10209 	ld	a, (hl+)
      002CBD 12                   10210 	ld	(de), a
      002CBE 13                   10211 	inc	de
      002CBF 7E                   10212 	ld	a, (hl)
      002CC0 12                   10213 	ld	(de), a
                                  10214 ;src/main.c:1024: projectiles[i].y -= yOverflow;
      002CC1 F8 05                10215 	ldhl	sp,#5
      002CC3 2A                   10216 	ld	a, (hl+)
      002CC4 5F                   10217 	ld	e, a
      002CC5 56                   10218 	ld	d, (hl)
      002CC6 21 02 00             10219 	ld	hl, #0x0002
      002CC9 19                   10220 	add	hl, de
      002CCA E5                   10221 	push	hl
      002CCB 7D                   10222 	ld	a, l
      002CCC F8 04                10223 	ldhl	sp,	#4
      002CCE 77                   10224 	ld	(hl), a
      002CCF E1                   10225 	pop	hl
      002CD0 7C                   10226 	ld	a, h
      002CD1 F8 03                10227 	ldhl	sp,	#3
      002CD3 32                   10228 	ld	(hl-), a
      002CD4 2A                   10229 	ld	a, (hl+)
      002CD5 5F                   10230 	ld	e, a
      002CD6 56                   10231 	ld	d, (hl)
      002CD7 1A                   10232 	ld	a, (de)
      002CD8 4F                   10233 	ld	c, a
      002CD9 13                   10234 	inc	de
      002CDA 1A                   10235 	ld	a, (de)
      002CDB 47                   10236 	ld	b, a
      002CDC 79                   10237 	ld	a, c
      002CDD 21rA3r00             10238 	ld	hl, #_yOverflow
      002CE0 96                   10239 	sub	a, (hl)
      002CE1 23                   10240 	inc	hl
      002CE2 4F                   10241 	ld	c, a
      002CE3 78                   10242 	ld	a, b
      002CE4 9E                   10243 	sbc	a, (hl)
      002CE5 47                   10244 	ld	b, a
      002CE6 F8 02                10245 	ldhl	sp,	#2
      002CE8 2A                   10246 	ld	a,	(hl+)
      002CE9 66                   10247 	ld	h, (hl)
      002CEA 6F                   10248 	ld	l, a
      002CEB 79                   10249 	ld	a, c
      002CEC 22                   10250 	ld	(hl+), a
      002CED 70                   10251 	ld	(hl), b
                                  10252 ;src/main.c:1026: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002CEE F8 05                10253 	ldhl	sp,#5
      002CF0 2A                   10254 	ld	a, (hl+)
      002CF1 5F                   10255 	ld	e, a
      002CF2 56                   10256 	ld	d, (hl)
      002CF3 21 06 00             10257 	ld	hl, #0x0006
      002CF6 19                   10258 	add	hl, de
      002CF7 5D                   10259 	ld	e, l
      002CF8 54                   10260 	ld	d, h
      002CF9 1A                   10261 	ld	a, (de)
      002CFA 6F                   10262 	ld	l, a
                                  10263 ;	spillPairReg hl
                                  10264 ;	spillPairReg hl
      002CFB 07                   10265 	rlca
      002CFC 9F                   10266 	sbc	a, a
      002CFD 67                   10267 	ld	h, a
                                  10268 ;	spillPairReg hl
                                  10269 ;	spillPairReg hl
      002CFE 09                   10270 	add	hl, bc
      002CFF 4D                   10271 	ld	c, l
      002D00 44                   10272 	ld	b, h
                                  10273 ;src/main.c:1027: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002D01 F8 05                10274 	ldhl	sp,#5
      002D03 2A                   10275 	ld	a, (hl+)
      002D04 5F                   10276 	ld	e, a
      002D05 56                   10277 	ld	d, (hl)
      002D06 21 05 00             10278 	ld	hl, #0x0005
      002D09 19                   10279 	add	hl, de
      002D0A 5D                   10280 	ld	e, l
      002D0B 54                   10281 	ld	d, h
      002D0C 1A                   10282 	ld	a, (de)
      002D0D F8 07                10283 	ldhl	sp,	#7
      002D0F 22                   10284 	ld	(hl+), a
      002D10 07                   10285 	rlca
      002D11 9F                   10286 	sbc	a, a
      002D12 77                   10287 	ld	(hl), a
      002D13 D1                   10288 	pop	de
      002D14 D5                   10289 	push	de
      002D15 3A                   10290 	ld	a, (hl-)
      002D16 6E                   10291 	ld	l, (hl)
      002D17 67                   10292 	ld	h, a
      002D18 19                   10293 	add	hl, de
      002D19 5D                   10294 	ld	e, l
      002D1A 7C                   10295 	ld	a, h
      002D1B F8 07                10296 	ldhl	sp,	#7
      002D1D 73                   10297 	ld	(hl), e
      002D1E 23                   10298 	inc	hl
      002D1F 77                   10299 	ld	(hl), a
                                  10300 ;src/main.c:1030: projectiles[i].y = newY;
      002D20 F8 02                10301 	ldhl	sp,	#2
      002D22 2A                   10302 	ld	a,	(hl+)
      002D23 66                   10303 	ld	h, (hl)
      002D24 6F                   10304 	ld	l, a
      002D25 79                   10305 	ld	a, c
      002D26 22                   10306 	ld	(hl+), a
      002D27 70                   10307 	ld	(hl), b
                                  10308 ;src/main.c:1031: projectiles[i].x = newX;
      002D28 F8 05                10309 	ldhl	sp,#5
      002D2A 2A                   10310 	ld	a, (hl+)
      002D2B 5F                   10311 	ld	e, a
      002D2C 2A                   10312 	ld	a, (hl+)
      002D2D 57                   10313 	ld	d, a
      002D2E 2A                   10314 	ld	a, (hl+)
      002D2F 12                   10315 	ld	(de), a
      002D30 13                   10316 	inc	de
                                  10317 ;src/main.c:1035: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002D31 3A                   10318 	ld	a, (hl-)
      002D32 2B                   10319 	dec	hl
      002D33 2B                   10320 	dec	hl
      002D34 12                   10321 	ld	(de), a
      002D35 2A                   10322 	ld	a, (hl+)
      002D36 5F                   10323 	ld	e, a
      002D37 56                   10324 	ld	d, (hl)
      002D38 21 04 00             10325 	ld	hl, #0x0004
      002D3B 19                   10326 	add	hl, de
      002D3C 5D                   10327 	ld	e, l
      002D3D 54                   10328 	ld	d, h
      002D3E 1A                   10329 	ld	a, (de)
      002D3F 81                   10330 	add	a, c
      002D40 4F                   10331 	ld	c, a
      002D41 F8 07                10332 	ldhl	sp,	#7
      002D43 2A                   10333 	ld	a, (hl+)
      002D44 23                   10334 	inc	hl
      002D45 C6 04                10335 	add	a, #0x04
      002D47 5F                   10336 	ld	e, a
      002D48 7E                   10337 	ld	a, (hl)
      002D49 C6 1E                10338 	add	a, #0x1e
      002D4B F8 04                10339 	ldhl	sp,	#4
      002D4D 77                   10340 	ld	(hl), a
                                  10341 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002D4E 6E                   10342 	ld	l, (hl)
                                  10343 ;	spillPairReg hl
                                  10344 ;	spillPairReg hl
      002D4F 26 00                10345 	ld	h, #0x00
                                  10346 ;	spillPairReg hl
                                  10347 ;	spillPairReg hl
      002D51 29                   10348 	add	hl, hl
      002D52 29                   10349 	add	hl, hl
      002D53 D5                   10350 	push	de
      002D54 11r00r00             10351 	ld	de, #_shadow_OAM
      002D57 19                   10352 	add	hl, de
      002D58 D1                   10353 	pop	de
                                  10354 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002D59 79                   10355 	ld	a, c
      002D5A 22                   10356 	ld	(hl+), a
      002D5B 73                   10357 	ld	(hl), e
                                  10358 ;src/main.c:1039: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002D5C F8 05                10359 	ldhl	sp,#5
      002D5E 2A                   10360 	ld	a, (hl+)
      002D5F 5F                   10361 	ld	e, a
      002D60 3A                   10362 	ld	a, (hl-)
      002D61 57                   10363 	ld	d, a
      002D62 1A                   10364 	ld	a, (de)
      002D63 22                   10365 	ld	(hl+), a
      002D64 13                   10366 	inc	de
      002D65 1A                   10367 	ld	a, (de)
      002D66 22                   10368 	ld	(hl+), a
      002D67 23                   10369 	inc	hl
      002D68 CB 7E                10370 	bit	7, (hl)
      002D6A 20 51                10371 	jr	NZ, 00101$
      002D6C F8 05                10372 	ldhl	sp,	#5
      002D6E 2A                   10373 	ld	a, (hl+)
      002D6F 23                   10374 	inc	hl
      002D70 32                   10375 	ld	(hl-), a
      002D71 2A                   10376 	ld	a, (hl+)
      002D72 23                   10377 	inc	hl
      002D73 32                   10378 	ld	(hl-), a
      002D74 3E AA                10379 	ld	a, #0xaa
      002D76 96                   10380 	sub	a, (hl)
      002D77 23                   10381 	inc	hl
      002D78 3E 00                10382 	ld	a, #0x00
      002D7A 9E                   10383 	sbc	a, (hl)
      002D7B 3E 00                10384 	ld	a, #0x00
      002D7D 57                   10385 	ld	d, a
      002D7E CB 7E                10386 	bit	7, (hl)
      002D80 28 07                10387 	jr	Z, 00147$
      002D82 CB 7A                10388 	bit	7, d
      002D84 20 08                10389 	jr	NZ, 00148$
      002D86 BF                   10390 	cp	a, a
      002D87 18 05                10391 	jr	00148$
      002D89                      10392 00147$:
      002D89 CB 7A                10393 	bit	7, d
      002D8B 28 01                10394 	jr	Z, 00148$
      002D8D 37                   10395 	scf
      002D8E                      10396 00148$:
      002D8E 38 2D                10397 	jr	C, 00101$
      002D90 F8 02                10398 	ldhl	sp,#2
      002D92 2A                   10399 	ld	a, (hl+)
      002D93 5F                   10400 	ld	e, a
      002D94 56                   10401 	ld	d, (hl)
      002D95 1A                   10402 	ld	a, (de)
      002D96 F8 07                10403 	ldhl	sp,	#7
      002D98 22                   10404 	ld	(hl+), a
      002D99 13                   10405 	inc	de
      002D9A 1A                   10406 	ld	a, (de)
      002D9B 77                   10407 	ld	(hl), a
      002D9C CB 7E                10408 	bit	7, (hl)
      002D9E 20 1D                10409 	jr	NZ, 00101$
      002DA0 2B                   10410 	dec	hl
      002DA1 3E 9A                10411 	ld	a, #0x9a
      002DA3 96                   10412 	sub	a, (hl)
      002DA4 23                   10413 	inc	hl
      002DA5 3E 00                10414 	ld	a, #0x00
      002DA7 9E                   10415 	sbc	a, (hl)
      002DA8 3E 00                10416 	ld	a, #0x00
      002DAA 57                   10417 	ld	d, a
      002DAB CB 7E                10418 	bit	7, (hl)
      002DAD 28 07                10419 	jr	Z, 00149$
      002DAF CB 7A                10420 	bit	7, d
      002DB1 20 08                10421 	jr	NZ, 00150$
      002DB3 BF                   10422 	cp	a, a
      002DB4 18 05                10423 	jr	00150$
      002DB6                      10424 00149$:
      002DB6 CB 7A                10425 	bit	7, d
      002DB8 28 01                10426 	jr	Z, 00150$
      002DBA 37                   10427 	scf
      002DBB                      10428 00150$:
      002DBB 30 7B                10429 	jr	NC, 00113$
      002DBD                      10430 00101$:
                                  10431 ;src/main.c:1040: projectiles[i].active = 0;
      002DBD F8 09                10432 	ldhl	sp,	#9
      002DBF 4E                   10433 	ld	c, (hl)
      002DC0 06 00                10434 	ld	b, #0x00
      002DC2 69                   10435 	ld	l, c
      002DC3 60                   10436 	ld	h, b
      002DC4 29                   10437 	add	hl, hl
      002DC5 09                   10438 	add	hl, bc
      002DC6 29                   10439 	add	hl, hl
      002DC7 29                   10440 	add	hl, hl
      002DC8 09                   10441 	add	hl, bc
      002DC9 E5                   10442 	push	hl
      002DCA 7D                   10443 	ld	a, l
      002DCB F8 09                10444 	ldhl	sp,	#9
      002DCD 77                   10445 	ld	(hl), a
      002DCE E1                   10446 	pop	hl
      002DCF 7C                   10447 	ld	a, h
      002DD0 F8 08                10448 	ldhl	sp,	#8
      002DD2 32                   10449 	ld	(hl-), a
      002DD3 2A                   10450 	ld	a, (hl+)
      002DD4 5F                   10451 	ld	e, a
      002DD5 56                   10452 	ld	d, (hl)
      002DD6 21rB4r00             10453 	ld	hl, #_projectiles
      002DD9 19                   10454 	add	hl, de
      002DDA E5                   10455 	push	hl
      002DDB 7D                   10456 	ld	a, l
      002DDC F8 07                10457 	ldhl	sp,	#7
      002DDE 77                   10458 	ld	(hl), a
      002DDF E1                   10459 	pop	hl
      002DE0 7C                   10460 	ld	a, h
      002DE1 F8 06                10461 	ldhl	sp,	#6
      002DE3 32                   10462 	ld	(hl-), a
      002DE4 2A                   10463 	ld	a, (hl+)
      002DE5 5F                   10464 	ld	e, a
      002DE6 56                   10465 	ld	d, (hl)
      002DE7 21 0A 00             10466 	ld	hl, #0x000a
      002DEA 19                   10467 	add	hl, de
      002DEB E5                   10468 	push	hl
      002DEC 7D                   10469 	ld	a, l
      002DED F8 09                10470 	ldhl	sp,	#9
      002DEF 77                   10471 	ld	(hl), a
      002DF0 E1                   10472 	pop	hl
      002DF1 7C                   10473 	ld	a, h
      002DF2 F8 08                10474 	ldhl	sp,	#8
      002DF4 32                   10475 	ld	(hl-), a
      002DF5 2A                   10476 	ld	a,	(hl+)
      002DF6 66                   10477 	ld	h, (hl)
      002DF7 6F                   10478 	ld	l, a
      002DF8 36 00                10479 	ld	(hl), #0x00
                                  10480 ;src/main.c:1041: set_sprite_tile(30+i, 0x7f);
      002DFA F8 04                10481 	ldhl	sp,	#4
      002DFC 7E                   10482 	ld	a, (hl)
      002DFD F8 08                10483 	ldhl	sp,	#8
      002DFF 77                   10484 	ld	(hl), a
                                  10485 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002E00 3A                   10486 	ld	a, (hl-)
      002E01 22                   10487 	ld	(hl+), a
      002E02 36 00                10488 	ld	(hl), #0x00
      002E04 3E 02                10489 	ld	a, #0x02
      002E06                      10490 00151$:
      002E06 F8 07                10491 	ldhl	sp,	#7
      002E08 CB 26                10492 	sla	(hl)
      002E0A 23                   10493 	inc	hl
      002E0B CB 16                10494 	rl	(hl)
      002E0D 3D                   10495 	dec	a
      002E0E 20 F6                10496 	jr	NZ, 00151$
      002E10 2B                   10497 	dec	hl
      002E11 2A                   10498 	ld	a, (hl+)
      002E12 5F                   10499 	ld	e, a
      002E13 56                   10500 	ld	d, (hl)
      002E14 21r00r00             10501 	ld	hl, #_shadow_OAM
      002E17 19                   10502 	add	hl, de
      002E18 E5                   10503 	push	hl
      002E19 7D                   10504 	ld	a, l
      002E1A F8 07                10505 	ldhl	sp,	#7
      002E1C 77                   10506 	ld	(hl), a
      002E1D E1                   10507 	pop	hl
      002E1E 7C                   10508 	ld	a, h
      002E1F F8 06                10509 	ldhl	sp,	#6
      002E21 32                   10510 	ld	(hl-), a
      002E22 2A                   10511 	ld	a, (hl+)
      002E23 5F                   10512 	ld	e, a
      002E24 56                   10513 	ld	d, (hl)
      002E25 21 02 00             10514 	ld	hl, #0x0002
      002E28 19                   10515 	add	hl, de
      002E29 E5                   10516 	push	hl
      002E2A 7D                   10517 	ld	a, l
      002E2B F8 09                10518 	ldhl	sp,	#9
      002E2D 77                   10519 	ld	(hl), a
      002E2E E1                   10520 	pop	hl
      002E2F 7C                   10521 	ld	a, h
      002E30 F8 08                10522 	ldhl	sp,	#8
      002E32 32                   10523 	ld	(hl-), a
      002E33 2A                   10524 	ld	a,	(hl+)
      002E34 66                   10525 	ld	h, (hl)
      002E35 6F                   10526 	ld	l, a
      002E36 36 7F                10527 	ld	(hl), #0x7f
                                  10528 ;src/main.c:1041: set_sprite_tile(30+i, 0x7f);
      002E38                      10529 00113$:
                                  10530 ;src/main.c:1021: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002E38 F8 09                10531 	ldhl	sp,	#9
      002E3A 34                   10532 	inc	(hl)
      002E3B C3r64r2C             10533 	jp	00112$
      002E3E                      10534 00114$:
                                  10535 ;src/main.c:1046: }
      002E3E E8 0A                10536 	add	sp, #10
      002E40 C9                   10537 	ret
                                  10538 ;src/main.c:1048: void tickPickups() {
                                  10539 ;	---------------------------------
                                  10540 ; Function tickPickups
                                  10541 ; ---------------------------------
      002E41                      10542 _tickPickups::
      002E41 3B                   10543 	dec	sp
      002E42 3B                   10544 	dec	sp
                                  10545 ;src/main.c:1050: if (pickup.active) {
      002E43 FArFFr00             10546 	ld	a, (#(_pickup + 5) + 0)
      002E46 B7                   10547 	or	a, a
      002E47 CAr0Er30             10548 	jp	Z, 00143$
                                  10549 ;src/main.c:1051: pickup.x -= xOverflow;
      002E4A 21rFBr00             10550 	ld	hl, #(_pickup + 1)
      002E4D 2A                   10551 	ld	a, (hl+)
      002E4E 47                   10552 	ld	b, a
      002E4F 4E                   10553 	ld	c, (hl)
      002E50 58                   10554 	ld	e, b
      002E51 51                   10555 	ld	d, c
      002E52 21rA1r00             10556 	ld	hl, #_xOverflow
      002E55 2A                   10557 	ld	a,	(hl+)
      002E56 66                   10558 	ld	h, (hl)
      002E57 6F                   10559 	ld	l, a
      002E58 7B                   10560 	ld	a, e
      002E59 95                   10561 	sub	a, l
      002E5A 5F                   10562 	ld	e, a
      002E5B 7A                   10563 	ld	a, d
      002E5C 9C                   10564 	sbc	a, h
      002E5D F8 01                10565 	ldhl	sp,	#1
      002E5F 32                   10566 	ld	(hl-), a
      002E60 73                   10567 	ld	(hl), e
      002E61 11rFBr00             10568 	ld	de, #(_pickup + 1)
      002E64 2A                   10569 	ld	a, (hl+)
      002E65 12                   10570 	ld	(de), a
      002E66 13                   10571 	inc	de
      002E67 7E                   10572 	ld	a, (hl)
      002E68 12                   10573 	ld	(de), a
                                  10574 ;src/main.c:1052: pickup.y -= yOverflow;
      002E69 21rFDr00             10575 	ld	hl, #(_pickup + 3)
      002E6C 2A                   10576 	ld	a, (hl+)
      002E6D 4F                   10577 	ld	c, a
      002E6E 46                   10578 	ld	b, (hl)
      002E6F 79                   10579 	ld	a, c
      002E70 21rA3r00             10580 	ld	hl, #_yOverflow
      002E73 96                   10581 	sub	a, (hl)
      002E74 23                   10582 	inc	hl
      002E75 4F                   10583 	ld	c, a
      002E76 78                   10584 	ld	a, b
      002E77 9E                   10585 	sbc	a, (hl)
      002E78 47                   10586 	ld	b, a
      002E79 21rFDr00             10587 	ld	hl, #(_pickup + 3)
      002E7C 79                   10588 	ld	a, c
      002E7D 22                   10589 	ld	(hl+), a
      002E7E 70                   10590 	ld	(hl), b
                                  10591 ;src/main.c:1053: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002E7F 79                   10592 	ld	a, c
      002E80 C6 0C                10593 	add	a, #0x0c
      002E82 47                   10594 	ld	b, a
      002E83 F8 00                10595 	ldhl	sp,	#0
      002E85 7E                   10596 	ld	a, (hl)
      002E86 C6 04                10597 	add	a, #0x04
      002E88 4F                   10598 	ld	c, a
                                  10599 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002E89 21r0Cr00             10600 	ld	hl, #(_shadow_OAM + 12)
                                  10601 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002E8C 78                   10602 	ld	a, b
      002E8D 22                   10603 	ld	(hl+), a
      002E8E 71                   10604 	ld	(hl), c
                                  10605 ;src/main.c:1054: if (pickup.visible) {
      002E8F 21rFAr00             10606 	ld	hl, #_pickup
      002E92 4E                   10607 	ld	c, (hl)
                                  10608 ;src/main.c:1051: pickup.x -= xOverflow;
      002E93 11rFBr00             10609 	ld	de, #(_pickup + 1)
      002E96 1A                   10610 	ld	a, (de)
      002E97 F8 00                10611 	ldhl	sp,	#0
      002E99 22                   10612 	ld	(hl+), a
      002E9A 13                   10613 	inc	de
      002E9B 1A                   10614 	ld	a, (de)
      002E9C 77                   10615 	ld	(hl), a
                                  10616 ;src/main.c:1054: if (pickup.visible) {
      002E9D 79                   10617 	ld	a, c
      002E9E B7                   10618 	or	a, a
      002E9F CArA2r2F             10619 	jp	Z, 00127$
                                  10620 ;src/main.c:1056: if (abs(pickup.x - playerDrawX) < 10) {
      002EA2 2B                   10621 	dec	hl
      002EA3 7E                   10622 	ld	a, (hl)
      002EA4 21r9Br00             10623 	ld	hl, #_playerDrawX
      002EA7 4E                   10624 	ld	c, (hl)
      002EA8 91                   10625 	sub	a, c
      002EA9 4F                   10626 	ld	c, a
                                  10627 ;src/main.c:364: if (value >= 0) return value;
      002EAA CB 79                10628 	bit	7, c
      002EAC 28 03                10629 	jr	Z, 00135$
                                  10630 ;src/main.c:365: else return - value;
      002EAE AF                   10631 	xor	a, a
      002EAF 91                   10632 	sub	a, c
      002EB0 4F                   10633 	ld	c, a
                                  10634 ;src/main.c:1056: if (abs(pickup.x - playerDrawX) < 10) {
      002EB1                      10635 00135$:
      002EB1 79                   10636 	ld	a, c
      002EB2 EE 80                10637 	xor	a, #0x80
      002EB4 D6 8A                10638 	sub	a, #0x8a
      002EB6 D2r45r2F             10639 	jp	NC, 00115$
                                  10640 ;src/main.c:1057: if (abs(pickup.y - playerDrawY) < 10) {
      002EB9 FArFDr00             10641 	ld	a, (#(_pickup + 3) + 0)
      002EBC F8 01                10642 	ldhl	sp,	#1
      002EBE 77                   10643 	ld	(hl), a
      002EBF 21r9Cr00             10644 	ld	hl, #_playerDrawY
      002EC2 4E                   10645 	ld	c, (hl)
      002EC3 F8 01                10646 	ldhl	sp,	#1
      002EC5 7E                   10647 	ld	a, (hl)
      002EC6 91                   10648 	sub	a, c
      002EC7 77                   10649 	ld	(hl), a
                                  10650 ;src/main.c:364: if (value >= 0) return value;
      002EC8 CB 7E                10651 	bit	7, (hl)
      002ECA 28 05                10652 	jr	Z, 00139$
                                  10653 ;src/main.c:365: else return - value;
      002ECC AF                   10654 	xor	a, a
      002ECD F8 01                10655 	ldhl	sp,	#1
      002ECF 96                   10656 	sub	a, (hl)
      002ED0 77                   10657 	ld	(hl), a
                                  10658 ;src/main.c:1057: if (abs(pickup.y - playerDrawY) < 10) {
      002ED1                      10659 00139$:
      002ED1 F8 01                10660 	ldhl	sp,	#1
      002ED3 7E                   10661 	ld	a, (hl)
      002ED4 EE 80                10662 	xor	a, #0x80
      002ED6 D6 8A                10663 	sub	a, #0x8a
      002ED8 30 6B                10664 	jr	NC, 00115$
                                  10665 ;src/main.c:1058: if (pickup.type == 0) { //upgrade
      002EDA FAr00r01             10666 	ld	a, (#(_pickup + 6) + 0)
      002EDD B7                   10667 	or	a, a
      002EDE 20 0D                10668 	jr	NZ, 00104$
                                  10669 ;src/main.c:1059: if (gunLevel < 1) {
      002EE0 21rA6r00             10670 	ld	hl, #_gunLevel
      002EE3 7E                   10671 	ld	a, (hl)
      002EE4 D6 01                10672 	sub	a, #0x01
      002EE6 30 05                10673 	jr	NC, 00104$
                                  10674 ;src/main.c:1060: gunLevel += 1;
      002EE8 34                   10675 	inc	(hl)
      002EE9 7E                   10676 	ld	a, (hl)
                                  10677 ;src/main.c:1061: setGunIcon();
      002EEA CDr82r26             10678 	call	_setGunIcon
      002EED                      10679 00104$:
                                  10680 ;src/main.c:1064: if (pickup.type == 1) { //missile ammo
      002EED 21r00r01             10681 	ld	hl, #(_pickup + 6)
      002EF0 6E                   10682 	ld	l, (hl)
                                  10683 ;	spillPairReg hl
                                  10684 ;src/main.c:1065: updateMissileCount(pickup.amount);
      002EF1 01r01r01             10685 	ld	bc, #_pickup + 7
                                  10686 ;src/main.c:1064: if (pickup.type == 1) { //missile ammo
      002EF4 2D                   10687 	dec	l
      002EF5 20 09                10688 	jr	NZ, 00106$
                                  10689 ;src/main.c:1065: updateMissileCount(pickup.amount);
      002EF7 0A                   10690 	ld	a, (bc)
      002EF8 C5                   10691 	push	bc
      002EF9 F5                   10692 	push	af
      002EFA 33                   10693 	inc	sp
      002EFB CDrE4r0C             10694 	call	_updateMissileCount
      002EFE 33                   10695 	inc	sp
      002EFF C1                   10696 	pop	bc
      002F00                      10697 00106$:
                                  10698 ;src/main.c:1067: if (pickup.type == 2) {
      002F00 FAr00r01             10699 	ld	a, (#(_pickup + 6) + 0)
      002F03 D6 02                10700 	sub	a, #0x02
      002F05 20 34                10701 	jr	NZ, 00111$
                                  10702 ;src/main.c:1068: if (hull + pickup.amount <= 100) {
      002F07 21rF6r00             10703 	ld	hl, #_hull
      002F0A 5E                   10704 	ld	e, (hl)
      002F0B 16 00                10705 	ld	d, #0x00
      002F0D 0A                   10706 	ld	a, (bc)
      002F0E 4F                   10707 	ld	c, a
      002F0F 69                   10708 	ld	l, c
                                  10709 ;	spillPairReg hl
                                  10710 ;	spillPairReg hl
      002F10 26 00                10711 	ld	h, #0x00
                                  10712 ;	spillPairReg hl
                                  10713 ;	spillPairReg hl
      002F12 19                   10714 	add	hl, de
      002F13 5C                   10715 	ld	e, h
      002F14 16 00                10716 	ld	d, #0x00
      002F16 3E 64                10717 	ld	a, #0x64
      002F18 BD                   10718 	cp	a, l
      002F19 3E 00                10719 	ld	a, #0x00
      002F1B 9C                   10720 	sbc	a, h
      002F1C CB 7B                10721 	bit	7, e
      002F1E 28 07                10722 	jr	Z, 00239$
      002F20 CB 7A                10723 	bit	7, d
      002F22 20 08                10724 	jr	NZ, 00240$
      002F24 BF                   10725 	cp	a, a
      002F25 18 05                10726 	jr	00240$
      002F27                      10727 00239$:
      002F27 CB 7A                10728 	bit	7, d
      002F29 28 01                10729 	jr	Z, 00240$
      002F2B 37                   10730 	scf
      002F2C                      10731 00240$:
      002F2C 38 08                10732 	jr	C, 00108$
                                  10733 ;src/main.c:1069: hull += pickup.amount;
      002F2E 79                   10734 	ld	a, c
      002F2F 21rF6r00             10735 	ld	hl, #_hull
      002F32 86                   10736 	add	a, (hl)
      002F33 77                   10737 	ld	(hl), a
      002F34 18 05                10738 	jr	00111$
      002F36                      10739 00108$:
                                  10740 ;src/main.c:1072: hull = 100;
      002F36 21rF6r00             10741 	ld	hl, #_hull
      002F39 36 64                10742 	ld	(hl), #0x64
      002F3B                      10743 00111$:
                                  10744 ;src/main.c:1075: pickup.active = 0;
      002F3B 21rFFr00             10745 	ld	hl, #(_pickup + 5)
      002F3E 36 00                10746 	ld	(hl), #0x00
                                  10747 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002F40 21r0Er00             10748 	ld	hl, #(_shadow_OAM + 14)
      002F43 36 7F                10749 	ld	(hl), #0x7f
                                  10750 ;src/main.c:1076: set_sprite_tile(3, 0x7f);
      002F45                      10751 00115$:
                                  10752 ;src/main.c:1051: pickup.x -= xOverflow;
      002F45 21rFBr00             10753 	ld	hl, #(_pickup + 1)
      002F48 2A                   10754 	ld	a, (hl+)
      002F49 4F                   10755 	ld	c, a
      002F4A 46                   10756 	ld	b, (hl)
                                  10757 ;src/main.c:1079: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      002F4B 79                   10758 	ld	a, c
      002F4C D6 F6                10759 	sub	a, #0xf6
      002F4E 78                   10760 	ld	a, b
      002F4F 17                   10761 	rla
      002F50 3F                   10762 	ccf
      002F51 1F                   10763 	rra
      002F52 DE 7F                10764 	sbc	a, #0x7f
      002F54 38 40                10765 	jr	C, 00116$
      002F56 58                   10766 	ld	e, b
      002F57 16 00                10767 	ld	d, #0x00
      002F59 3E AA                10768 	ld	a, #0xaa
      002F5B B9                   10769 	cp	a, c
      002F5C 3E 00                10770 	ld	a, #0x00
      002F5E 98                   10771 	sbc	a, b
      002F5F CB 7B                10772 	bit	7, e
      002F61 28 07                10773 	jr	Z, 00241$
      002F63 CB 7A                10774 	bit	7, d
      002F65 20 08                10775 	jr	NZ, 00242$
      002F67 BF                   10776 	cp	a, a
      002F68 18 05                10777 	jr	00242$
      002F6A                      10778 00241$:
      002F6A CB 7A                10779 	bit	7, d
      002F6C 28 01                10780 	jr	Z, 00242$
      002F6E 37                   10781 	scf
      002F6F                      10782 00242$:
      002F6F 38 25                10783 	jr	C, 00116$
                                  10784 ;src/main.c:1052: pickup.y -= yOverflow;
      002F71 21rFDr00             10785 	ld	hl, #(_pickup + 3)
      002F74 2A                   10786 	ld	a, (hl+)
      002F75 4F                   10787 	ld	c, a
      002F76 46                   10788 	ld	b, (hl)
                                  10789 ;src/main.c:1079: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      002F77 CB 78                10790 	bit	7, b
      002F79 20 1B                10791 	jr	NZ, 00116$
      002F7B 58                   10792 	ld	e, b
      002F7C 16 00                10793 	ld	d, #0x00
      002F7E 3E 9B                10794 	ld	a, #0x9b
      002F80 B9                   10795 	cp	a, c
      002F81 3E 00                10796 	ld	a, #0x00
      002F83 98                   10797 	sbc	a, b
      002F84 CB 7B                10798 	bit	7, e
      002F86 28 07                10799 	jr	Z, 00243$
      002F88 CB 7A                10800 	bit	7, d
      002F8A 20 08                10801 	jr	NZ, 00244$
      002F8C BF                   10802 	cp	a, a
      002F8D 18 05                10803 	jr	00244$
      002F8F                      10804 00243$:
      002F8F CB 7A                10805 	bit	7, d
      002F91 28 01                10806 	jr	Z, 00244$
      002F93 37                   10807 	scf
      002F94                      10808 00244$:
      002F94 30 78                10809 	jr	NC, 00143$
      002F96                      10810 00116$:
                                  10811 ;src/main.c:1080: pickup.visible = 0;
      002F96 21rFAr00             10812 	ld	hl, #_pickup
      002F99 36 00                10813 	ld	(hl), #0x00
                                  10814 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002F9B 21r0Er00             10815 	ld	hl, #(_shadow_OAM + 14)
      002F9E 36 7F                10816 	ld	(hl), #0x7f
                                  10817 ;src/main.c:1081: set_sprite_tile(3, 0x7f);
      002FA0 18 6C                10818 	jr	00143$
      002FA2                      10819 00127$:
                                  10820 ;src/main.c:1085: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      002FA2 F8 00                10821 	ldhl	sp,	#0
      002FA4 2A                   10822 	ld	a, (hl+)
      002FA5 D6 F6                10823 	sub	a, #0xf6
      002FA7 7E                   10824 	ld	a, (hl)
      002FA8 DE FF                10825 	sbc	a, #0xff
      002FAA 56                   10826 	ld	d, (hl)
      002FAB 3E FF                10827 	ld	a, #0xff
      002FAD CB 7F                10828 	bit	7,a
      002FAF 28 07                10829 	jr	Z, 00245$
      002FB1 CB 7A                10830 	bit	7, d
      002FB3 20 08                10831 	jr	NZ, 00246$
      002FB5 BF                   10832 	cp	a, a
      002FB6 18 05                10833 	jr	00246$
      002FB8                      10834 00245$:
      002FB8 CB 7A                10835 	bit	7, d
      002FBA 28 01                10836 	jr	Z, 00246$
      002FBC 37                   10837 	scf
      002FBD                      10838 00246$:
      002FBD 38 4F                10839 	jr	C, 00143$
      002FBF C1                   10840 	pop	bc
      002FC0 C5                   10841 	push	bc
      002FC1 58                   10842 	ld	e, b
      002FC2 16 00                10843 	ld	d, #0x00
      002FC4 3E AA                10844 	ld	a, #0xaa
      002FC6 B9                   10845 	cp	a, c
      002FC7 3E 00                10846 	ld	a, #0x00
      002FC9 98                   10847 	sbc	a, b
      002FCA CB 7B                10848 	bit	7, e
      002FCC 28 07                10849 	jr	Z, 00247$
      002FCE CB 7A                10850 	bit	7, d
      002FD0 20 08                10851 	jr	NZ, 00248$
      002FD2 BF                   10852 	cp	a, a
      002FD3 18 05                10853 	jr	00248$
      002FD5                      10854 00247$:
      002FD5 CB 7A                10855 	bit	7, d
      002FD7 28 01                10856 	jr	Z, 00248$
      002FD9 37                   10857 	scf
      002FDA                      10858 00248$:
      002FDA 38 32                10859 	jr	C, 00143$
      002FDC 21rFDr00             10860 	ld	hl, #(_pickup + 3)
      002FDF 2A                   10861 	ld	a, (hl+)
      002FE0 4F                   10862 	ld	c, a
      002FE1 46                   10863 	ld	b, (hl)
      002FE2 CB 78                10864 	bit	7, b
      002FE4 20 28                10865 	jr	NZ, 00143$
      002FE6 58                   10866 	ld	e, b
      002FE7 16 00                10867 	ld	d, #0x00
      002FE9 3E 9B                10868 	ld	a, #0x9b
      002FEB B9                   10869 	cp	a, c
      002FEC 3E 00                10870 	ld	a, #0x00
      002FEE 98                   10871 	sbc	a, b
      002FEF CB 7B                10872 	bit	7, e
      002FF1 28 07                10873 	jr	Z, 00249$
      002FF3 CB 7A                10874 	bit	7, d
      002FF5 20 08                10875 	jr	NZ, 00250$
      002FF7 BF                   10876 	cp	a, a
      002FF8 18 05                10877 	jr	00250$
      002FFA                      10878 00249$:
      002FFA CB 7A                10879 	bit	7, d
      002FFC 28 01                10880 	jr	Z, 00250$
      002FFE 37                   10881 	scf
      002FFF                      10882 00250$:
      002FFF 38 0D                10883 	jr	C, 00143$
                                  10884 ;src/main.c:1086: pickup.visible = 1;
      003001 21rFAr00             10885 	ld	hl, #_pickup
      003004 36 01                10886 	ld	(hl), #0x01
                                  10887 ;src/main.c:1087: set_sprite_tile(3, pickup.tile);
      003006 21r02r01             10888 	ld	hl, #(_pickup + 8)
      003009 4E                   10889 	ld	c, (hl)
                                  10890 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00300A 21r0Er00             10891 	ld	hl, #(_shadow_OAM + 14)
      00300D 71                   10892 	ld	(hl), c
                                  10893 ;src/main.c:1087: set_sprite_tile(3, pickup.tile);
      00300E                      10894 00143$:
                                  10895 ;src/main.c:1092: }
      00300E 33                   10896 	inc	sp
      00300F 33                   10897 	inc	sp
      003010 C9                   10898 	ret
                                  10899 ;src/main.c:1094: void tickEx() {
                                  10900 ;	---------------------------------
                                  10901 ; Function tickEx
                                  10902 ; ---------------------------------
      003011                      10903 _tickEx::
      003011 E8 F4                10904 	add	sp, #-12
                                  10905 ;src/main.c:1095: for (uint8_t i = 0; i < exCount; ++i) {
      003013 F8 0B                10906 	ldhl	sp,	#11
      003015 36 00                10907 	ld	(hl), #0x00
      003017                      10908 00116$:
      003017 21rA5r0B             10909 	ld	hl, #_exCount
      00301A 4E                   10910 	ld	c, (hl)
      00301B F8 0B                10911 	ldhl	sp,	#11
      00301D 7E                   10912 	ld	a, (hl)
      00301E 91                   10913 	sub	a, c
      00301F D2rE5r31             10914 	jp	NC, 00118$
                                  10915 ;src/main.c:1096: if (explosions[i].visible) {
      003022 4E                   10916 	ld	c, (hl)
      003023 06 00                10917 	ld	b, #0x00
      003025 69                   10918 	ld	l, c
      003026 60                   10919 	ld	h, b
      003027 29                   10920 	add	hl, hl
      003028 09                   10921 	add	hl, bc
      003029 29                   10922 	add	hl, hl
      00302A 01r03r01             10923 	ld	bc,#_explosions
      00302D 09                   10924 	add	hl,bc
      00302E E5                   10925 	push	hl
      00302F 7D                   10926 	ld	a, l
      003030 F8 03                10927 	ldhl	sp,	#3
      003032 77                   10928 	ld	(hl), a
      003033 E1                   10929 	pop	hl
      003034 7C                   10930 	ld	a, h
      003035 F8 02                10931 	ldhl	sp,	#2
      003037 32                   10932 	ld	(hl-), a
      003038 2A                   10933 	ld	a, (hl+)
      003039 5F                   10934 	ld	e, a
      00303A 56                   10935 	ld	d, (hl)
      00303B 1A                   10936 	ld	a, (de)
      00303C F8 0A                10937 	ldhl	sp,	#10
      00303E 77                   10938 	ld	(hl), a
      00303F 7E                   10939 	ld	a, (hl)
      003040 B7                   10940 	or	a, a
      003041 CArDFr31             10941 	jp	Z, 00117$
                                  10942 ;src/main.c:1098: explosions[i].x -= xOverflow;
      003044 F8 01                10943 	ldhl	sp,	#1
      003046 2A                   10944 	ld	a, (hl+)
      003047 4F                   10945 	ld	c, a
      003048 46                   10946 	ld	b, (hl)
      003049 03                   10947 	inc	bc
      00304A 0A                   10948 	ld	a, (bc)
      00304B 21rA1r00             10949 	ld	hl, #_xOverflow
      00304E 5E                   10950 	ld	e, (hl)
      00304F 93                   10951 	sub	a, e
      003050 02                   10952 	ld	(bc), a
                                  10953 ;src/main.c:1099: explosions[i].y -= yOverflow;
      003051 F8 01                10954 	ldhl	sp,#1
      003053 2A                   10955 	ld	a, (hl+)
      003054 5F                   10956 	ld	e, a
      003055 56                   10957 	ld	d, (hl)
      003056 21 02 00             10958 	ld	hl, #0x0002
      003059 19                   10959 	add	hl, de
      00305A E5                   10960 	push	hl
      00305B 7D                   10961 	ld	a, l
      00305C F8 09                10962 	ldhl	sp,	#9
      00305E 77                   10963 	ld	(hl), a
      00305F E1                   10964 	pop	hl
      003060 7C                   10965 	ld	a, h
      003061 F8 08                10966 	ldhl	sp,	#8
      003063 32                   10967 	ld	(hl-), a
      003064 2A                   10968 	ld	a, (hl+)
      003065 5F                   10969 	ld	e, a
      003066 56                   10970 	ld	d, (hl)
      003067 1A                   10971 	ld	a, (de)
      003068 21rA3r00             10972 	ld	hl, #_yOverflow
      00306B 5E                   10973 	ld	e, (hl)
      00306C 93                   10974 	sub	a, e
      00306D F8 07                10975 	ldhl	sp,	#7
      00306F F5                   10976 	push	af
      003070 2A                   10977 	ld	a,	(hl+)
      003071 66                   10978 	ld	h, (hl)
      003072 6F                   10979 	ld	l, a
      003073 F1                   10980 	pop	af
      003074 77                   10981 	ld	(hl), a
                                  10982 ;src/main.c:1100: move_sprite(20 + 2*i, explosions[i].x, explosions[i].y+8);
      003075 F8 07                10983 	ldhl	sp,#7
      003077 2A                   10984 	ld	a, (hl+)
      003078 5F                   10985 	ld	e, a
      003079 2A                   10986 	ld	a, (hl+)
      00307A 57                   10987 	ld	d, a
      00307B 1A                   10988 	ld	a, (de)
      00307C C6 08                10989 	add	a, #0x08
      00307E 5F                   10990 	ld	e, a
      00307F 0A                   10991 	ld	a, (bc)
      003080 22                   10992 	ld	(hl+), a
      003081 23                   10993 	inc	hl
      003082 3A                   10994 	ld	a, (hl-)
      003083 87                   10995 	add	a, a
      003084 77                   10996 	ld	(hl), a
      003085 7E                   10997 	ld	a, (hl)
      003086 C6 14                10998 	add	a, #0x14
      003088 F8 03                10999 	ldhl	sp,	#3
      00308A 77                   11000 	ld	(hl), a
      00308B 56                   11001 	ld	d, (hl)
                                  11002 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00308C 26 00                11003 	ld	h, #0x00
                                  11004 ;	spillPairReg hl
                                  11005 ;	spillPairReg hl
      00308E 6A                   11006 	ld	l, d
      00308F 29                   11007 	add	hl, hl
      003090 29                   11008 	add	hl, hl
      003091 D5                   11009 	push	de
      003092 11r00r00             11010 	ld	de, #_shadow_OAM
      003095 19                   11011 	add	hl, de
      003096 D1                   11012 	pop	de
                                  11013 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003097 7B                   11014 	ld	a, e
      003098 22                   11015 	ld	(hl+), a
      003099 5D                   11016 	ld	e, l
      00309A 54                   11017 	ld	d, h
      00309B F8 09                11018 	ldhl	sp,	#9
                                  11019 ;src/main.c:1101: move_sprite(21 + 2*i, explosions[i].x+8, explosions[i].y+8);
      00309D 3A                   11020 	ld	a, (hl-)
      00309E 2B                   11021 	dec	hl
      00309F 12                   11022 	ld	(de), a
      0030A0 2A                   11023 	ld	a, (hl+)
      0030A1 5F                   11024 	ld	e, a
      0030A2 2A                   11025 	ld	a, (hl+)
      0030A3 23                   11026 	inc	hl
      0030A4 57                   11027 	ld	d, a
      0030A5 1A                   11028 	ld	a, (de)
      0030A6 C6 08                11029 	add	a, #0x08
      0030A8 5F                   11030 	ld	e, a
      0030A9 0A                   11031 	ld	a, (bc)
      0030AA C6 08                11032 	add	a, #0x08
      0030AC 4F                   11033 	ld	c, a
      0030AD 3A                   11034 	ld	a, (hl-)
      0030AE C6 15                11035 	add	a, #0x15
      0030B0 77                   11036 	ld	(hl), a
                                  11037 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0030B1 6E                   11038 	ld	l, (hl)
                                  11039 ;	spillPairReg hl
                                  11040 ;	spillPairReg hl
      0030B2 26 00                11041 	ld	h, #0x00
                                  11042 ;	spillPairReg hl
                                  11043 ;	spillPairReg hl
      0030B4 29                   11044 	add	hl, hl
      0030B5 29                   11045 	add	hl, hl
      0030B6 D5                   11046 	push	de
      0030B7 11r00r00             11047 	ld	de, #_shadow_OAM
      0030BA 19                   11048 	add	hl, de
      0030BB D1                   11049 	pop	de
                                  11050 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0030BC 7B                   11051 	ld	a, e
      0030BD 22                   11052 	ld	(hl+), a
      0030BE 71                   11053 	ld	(hl), c
                                  11054 ;src/main.c:1103: explosions[i].frameCounter++;
      0030BF F8 01                11055 	ldhl	sp,#1
      0030C1 2A                   11056 	ld	a, (hl+)
      0030C2 5F                   11057 	ld	e, a
      0030C3 56                   11058 	ld	d, (hl)
      0030C4 21 04 00             11059 	ld	hl, #0x0004
      0030C7 19                   11060 	add	hl, de
      0030C8 4D                   11061 	ld	c, l
      0030C9 44                   11062 	ld	b, h
      0030CA 0A                   11063 	ld	a, (bc)
      0030CB 3C                   11064 	inc	a
      0030CC 5F                   11065 	ld	e, a
      0030CD 02                   11066 	ld	(bc), a
                                  11067 ;src/main.c:1104: if (explosions[i].frameCounter > EXPLFRAMETIME) {
      0030CE FArA6r0B             11068 	ld	a, (#_EXPLFRAMETIME)
      0030D1 93                   11069 	sub	a, e
      0030D2 D2rDFr31             11070 	jp	NC, 00117$
                                  11071 ;src/main.c:1105: explosions[i].frameCounter = 0;
      0030D5 AF                   11072 	xor	a, a
      0030D6 02                   11073 	ld	(bc), a
                                  11074 ;src/main.c:1106: explosions[i].frame += 1; 
      0030D7 F8 01                11075 	ldhl	sp,#1
      0030D9 2A                   11076 	ld	a, (hl+)
      0030DA 5F                   11077 	ld	e, a
      0030DB 56                   11078 	ld	d, (hl)
      0030DC 21 03 00             11079 	ld	hl, #0x0003
      0030DF 19                   11080 	add	hl, de
      0030E0 E5                   11081 	push	hl
      0030E1 7D                   11082 	ld	a, l
      0030E2 F8 06                11083 	ldhl	sp,	#6
      0030E4 77                   11084 	ld	(hl), a
      0030E5 E1                   11085 	pop	hl
      0030E6 7C                   11086 	ld	a, h
      0030E7 F8 05                11087 	ldhl	sp,	#5
      0030E9 32                   11088 	ld	(hl-), a
      0030EA 2A                   11089 	ld	a, (hl+)
      0030EB 5F                   11090 	ld	e, a
      0030EC 56                   11091 	ld	d, (hl)
      0030ED 1A                   11092 	ld	a, (de)
      0030EE 4F                   11093 	ld	c, a
      0030EF 0C                   11094 	inc	c
      0030F0 3A                   11095 	ld	a, (hl-)
      0030F1 6E                   11096 	ld	l, (hl)
      0030F2 67                   11097 	ld	h, a
      0030F3 71                   11098 	ld	(hl), c
                                  11099 ;src/main.c:1107: if (explosions[i].frame > 3) {
      0030F4 F8 04                11100 	ldhl	sp,#4
      0030F6 2A                   11101 	ld	a, (hl+)
      0030F7 5F                   11102 	ld	e, a
      0030F8 56                   11103 	ld	d, (hl)
      0030F9 1A                   11104 	ld	a, (de)
      0030FA 4F                   11105 	ld	c, a
      0030FB 3E 03                11106 	ld	a, #0x03
      0030FD 91                   11107 	sub	a, c
      0030FE 30 2A                11108 	jr	NC, 00102$
                                  11109 ;src/main.c:1108: explosions[i].visible = 0;
      003100 F8 01                11110 	ldhl	sp,	#1
      003102 2A                   11111 	ld	a,	(hl+)
      003103 66                   11112 	ld	h, (hl)
      003104 6F                   11113 	ld	l, a
      003105 36 00                11114 	ld	(hl), #0x00
                                  11115 ;src/main.c:1109: set_sprite_tile(20 + 2*i, 0x7f);
      003107 F8 03                11116 	ldhl	sp,	#3
      003109 4E                   11117 	ld	c, (hl)
                                  11118 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00310A 26 00                11119 	ld	h, #0x00
                                  11120 ;	spillPairReg hl
                                  11121 ;	spillPairReg hl
      00310C 69                   11122 	ld	l, c
      00310D 29                   11123 	add	hl, hl
      00310E 29                   11124 	add	hl, hl
      00310F 11r00r00             11125 	ld	de, #_shadow_OAM
      003112 19                   11126 	add	hl, de
      003113 23                   11127 	inc	hl
      003114 23                   11128 	inc	hl
      003115 36 7F                11129 	ld	(hl), #0x7f
                                  11130 ;src/main.c:1110: set_sprite_tile(21 + 2*i, 0x7f);
      003117 F8 09                11131 	ldhl	sp,	#9
      003119 4E                   11132 	ld	c, (hl)
                                  11133 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00311A 26 00                11134 	ld	h, #0x00
                                  11135 ;	spillPairReg hl
                                  11136 ;	spillPairReg hl
      00311C 69                   11137 	ld	l, c
      00311D 29                   11138 	add	hl, hl
      00311E 29                   11139 	add	hl, hl
      00311F 11r00r00             11140 	ld	de, #_shadow_OAM
      003122 19                   11141 	add	hl, de
      003123 23                   11142 	inc	hl
      003124 23                   11143 	inc	hl
      003125 36 7F                11144 	ld	(hl), #0x7f
                                  11145 ;src/main.c:1110: set_sprite_tile(21 + 2*i, 0x7f);
      003127 C3rDFr31             11146 	jp	00117$
      00312A                      11147 00102$:
                                  11148 ;src/main.c:1113: set_sprite_tile(20 + 2*i, explosions[i].tile + (explosions[i].frame *4));
      00312A F8 01                11149 	ldhl	sp,#1
      00312C 2A                   11150 	ld	a, (hl+)
      00312D 5F                   11151 	ld	e, a
      00312E 56                   11152 	ld	d, (hl)
      00312F 21 05 00             11153 	ld	hl, #0x0005
      003132 19                   11154 	add	hl, de
      003133 E5                   11155 	push	hl
      003134 7D                   11156 	ld	a, l
      003135 F8 08                11157 	ldhl	sp,	#8
      003137 77                   11158 	ld	(hl), a
      003138 E1                   11159 	pop	hl
      003139 7C                   11160 	ld	a, h
      00313A F8 07                11161 	ldhl	sp,	#7
      00313C 32                   11162 	ld	(hl-), a
      00313D 2A                   11163 	ld	a, (hl+)
      00313E 5F                   11164 	ld	e, a
      00313F 56                   11165 	ld	d, (hl)
      003140 1A                   11166 	ld	a, (de)
      003141 F8 0A                11167 	ldhl	sp,	#10
      003143 32                   11168 	ld	(hl-), a
      003144 2B                   11169 	dec	hl
      003145 71                   11170 	ld	(hl), c
      003146 CB 26                11171 	sla	(hl)
      003148 CB 26                11172 	sla	(hl)
      00314A 23                   11173 	inc	hl
      00314B 23                   11174 	inc	hl
      00314C 3A                   11175 	ld	a, (hl-)
      00314D 2B                   11176 	dec	hl
      00314E 86                   11177 	add	a, (hl)
      00314F 23                   11178 	inc	hl
      003150 23                   11179 	inc	hl
      003151 77                   11180 	ld	(hl), a
      003152 F8 03                11181 	ldhl	sp,	#3
                                  11182 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003154 3A                   11183 	ld	a, (hl-)
      003155 22                   11184 	ld	(hl+), a
      003156 36 00                11185 	ld	(hl), #0x00
      003158 3E 02                11186 	ld	a, #0x02
      00315A                      11187 00146$:
      00315A F8 02                11188 	ldhl	sp,	#2
      00315C CB 26                11189 	sla	(hl)
      00315E 23                   11190 	inc	hl
      00315F CB 16                11191 	rl	(hl)
      003161 3D                   11192 	dec	a
      003162 20 F6                11193 	jr	NZ, 00146$
      003164 11r00r00             11194 	ld	de, #_shadow_OAM
      003167 3A                   11195 	ld	a, (hl-)
      003168 6E                   11196 	ld	l, (hl)
      003169 67                   11197 	ld	h, a
      00316A 19                   11198 	add	hl, de
      00316B 33                   11199 	inc	sp
      00316C 33                   11200 	inc	sp
      00316D 5D                   11201 	ld	e, l
      00316E 54                   11202 	ld	d, h
      00316F D5                   11203 	push	de
      003170 21 02 00             11204 	ld	hl, #0x0002
      003173 19                   11205 	add	hl, de
      003174 E5                   11206 	push	hl
      003175 7D                   11207 	ld	a, l
      003176 F8 04                11208 	ldhl	sp,	#4
      003178 77                   11209 	ld	(hl), a
      003179 E1                   11210 	pop	hl
      00317A 7C                   11211 	ld	a, h
      00317B F8 03                11212 	ldhl	sp,	#3
      00317D 32                   11213 	ld	(hl-), a
      00317E 2A                   11214 	ld	a, (hl+)
      00317F 5F                   11215 	ld	e, a
      003180 56                   11216 	ld	d, (hl)
      003181 F8 0A                11217 	ldhl	sp,	#10
      003183 7E                   11218 	ld	a, (hl)
      003184 12                   11219 	ld	(de), a
                                  11220 ;src/main.c:1114: set_sprite_tile(21 + 2*i, explosions[i].tile+(explosions[i].frame *4) +2);
      003185 F8 06                11221 	ldhl	sp,#6
      003187 2A                   11222 	ld	a, (hl+)
      003188 5F                   11223 	ld	e, a
      003189 56                   11224 	ld	d, (hl)
      00318A 1A                   11225 	ld	a, (de)
      00318B F8 0A                11226 	ldhl	sp,	#10
      00318D 77                   11227 	ld	(hl), a
      00318E F8 04                11228 	ldhl	sp,#4
      003190 2A                   11229 	ld	a, (hl+)
      003191 5F                   11230 	ld	e, a
      003192 56                   11231 	ld	d, (hl)
      003193 1A                   11232 	ld	a, (de)
      003194 F8 08                11233 	ldhl	sp,	#8
      003196 77                   11234 	ld	(hl), a
      003197 CB 26                11235 	sla	(hl)
      003199 CB 26                11236 	sla	(hl)
      00319B 23                   11237 	inc	hl
      00319C 23                   11238 	inc	hl
      00319D 3A                   11239 	ld	a, (hl-)
      00319E 2B                   11240 	dec	hl
      00319F 86                   11241 	add	a, (hl)
      0031A0 23                   11242 	inc	hl
      0031A1 23                   11243 	inc	hl
      0031A2 77                   11244 	ld	(hl), a
      0031A3 34                   11245 	inc	(hl)
      0031A4 34                   11246 	inc	(hl)
      0031A5 2B                   11247 	dec	hl
                                  11248 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0031A6 3A                   11249 	ld	a, (hl-)
      0031A7 22                   11250 	ld	(hl+), a
      0031A8 36 00                11251 	ld	(hl), #0x00
      0031AA 3E 02                11252 	ld	a, #0x02
      0031AC                      11253 00147$:
      0031AC F8 08                11254 	ldhl	sp,	#8
      0031AE CB 26                11255 	sla	(hl)
      0031B0 23                   11256 	inc	hl
      0031B1 CB 16                11257 	rl	(hl)
      0031B3 3D                   11258 	dec	a
      0031B4 20 F6                11259 	jr	NZ, 00147$
      0031B6 2B                   11260 	dec	hl
      0031B7 2A                   11261 	ld	a, (hl+)
      0031B8 5F                   11262 	ld	e, a
      0031B9 56                   11263 	ld	d, (hl)
      0031BA 21r00r00             11264 	ld	hl, #_shadow_OAM
      0031BD 19                   11265 	add	hl, de
      0031BE E5                   11266 	push	hl
      0031BF 7D                   11267 	ld	a, l
      0031C0 F8 08                11268 	ldhl	sp,	#8
      0031C2 77                   11269 	ld	(hl), a
      0031C3 E1                   11270 	pop	hl
      0031C4 7C                   11271 	ld	a, h
      0031C5 F8 07                11272 	ldhl	sp,	#7
      0031C7 32                   11273 	ld	(hl-), a
      0031C8 2A                   11274 	ld	a, (hl+)
      0031C9 5F                   11275 	ld	e, a
      0031CA 56                   11276 	ld	d, (hl)
      0031CB 21 02 00             11277 	ld	hl, #0x0002
      0031CE 19                   11278 	add	hl, de
      0031CF E5                   11279 	push	hl
      0031D0 7D                   11280 	ld	a, l
      0031D1 F8 0A                11281 	ldhl	sp,	#10
      0031D3 77                   11282 	ld	(hl), a
      0031D4 E1                   11283 	pop	hl
      0031D5 7C                   11284 	ld	a, h
      0031D6 F8 09                11285 	ldhl	sp,	#9
      0031D8 32                   11286 	ld	(hl-), a
      0031D9 2A                   11287 	ld	a, (hl+)
      0031DA 5F                   11288 	ld	e, a
      0031DB 2A                   11289 	ld	a, (hl+)
      0031DC 57                   11290 	ld	d, a
      0031DD 7E                   11291 	ld	a, (hl)
      0031DE 12                   11292 	ld	(de), a
                                  11293 ;src/main.c:1114: set_sprite_tile(21 + 2*i, explosions[i].tile+(explosions[i].frame *4) +2);
      0031DF                      11294 00117$:
                                  11295 ;src/main.c:1095: for (uint8_t i = 0; i < exCount; ++i) {
      0031DF F8 0B                11296 	ldhl	sp,	#11
      0031E1 34                   11297 	inc	(hl)
      0031E2 C3r17r30             11298 	jp	00116$
      0031E5                      11299 00118$:
                                  11300 ;src/main.c:1119: }
      0031E5 E8 0C                11301 	add	sp, #12
      0031E7 C9                   11302 	ret
                                  11303 ;src/main.c:1121: void initEnemyOptions() {
                                  11304 ;	---------------------------------
                                  11305 ; Function initEnemyOptions
                                  11306 ; ---------------------------------
      0031E8                      11307 _initEnemyOptions::
                                  11308 ;src/main.c:1122: enemyOptions[0] = blob;
      0031E8 11 12 00             11309 	ld	de, #0x0012
      0031EB D5                   11310 	push	de
      0031EC 11r10r00             11311 	ld	de, #_blob
      0031EF D5                   11312 	push	de
      0031F0 11r00r00             11313 	ld	de, #_enemyOptions
      0031F3 D5                   11314 	push	de
      0031F4 CDr00r00             11315 	call	___memcpy
      0031F7 E8 06                11316 	add	sp, #6
                                  11317 ;src/main.c:1123: enemyOptions[1] = bomb;
      0031F9 11 12 00             11318 	ld	de, #0x0012
      0031FC D5                   11319 	push	de
      0031FD 11r22r00             11320 	ld	de, #_bomb
      003200 D5                   11321 	push	de
      003201 11r12r00             11322 	ld	de, #(_enemyOptions + 18)
      003204 D5                   11323 	push	de
      003205 CDr00r00             11324 	call	___memcpy
      003208 E8 06                11325 	add	sp, #6
                                  11326 ;src/main.c:1124: enemyOptions[2] = miniship;
      00320A 11 12 00             11327 	ld	de, #0x0012
      00320D D5                   11328 	push	de
      00320E 11r34r00             11329 	ld	de, #_miniship
      003211 D5                   11330 	push	de
      003212 11r24r00             11331 	ld	de, #(_enemyOptions + 36)
      003215 D5                   11332 	push	de
      003216 CDr00r00             11333 	call	___memcpy
      003219 E8 06                11334 	add	sp, #6
                                  11335 ;src/main.c:1125: enemyOptions[3] = shieldship;
      00321B 11 12 00             11336 	ld	de, #0x0012
      00321E D5                   11337 	push	de
      00321F 11r58r00             11338 	ld	de, #_shieldship
      003222 D5                   11339 	push	de
      003223 11r36r00             11340 	ld	de, #(_enemyOptions + 54)
      003226 D5                   11341 	push	de
      003227 CDr00r00             11342 	call	___memcpy
      00322A E8 06                11343 	add	sp, #6
                                  11344 ;src/main.c:1127: enemyOptions[4] = bigblob;
      00322C 11 12 00             11345 	ld	de, #0x0012
      00322F D5                   11346 	push	de
      003230 11r46r00             11347 	ld	de, #_bigblob
      003233 D5                   11348 	push	de
      003234 11r48r00             11349 	ld	de, #(_enemyOptions + 72)
      003237 D5                   11350 	push	de
      003238 CDr00r00             11351 	call	___memcpy
      00323B E8 06                11352 	add	sp, #6
                                  11353 ;src/main.c:1128: }
      00323D C9                   11354 	ret
                                  11355 ;src/main.c:1131: void initProjectiles() {
                                  11356 ;	---------------------------------
                                  11357 ; Function initProjectiles
                                  11358 ; ---------------------------------
      00323E                      11359 _initProjectiles::
                                  11360 ;src/main.c:1132: set_sprite_data(0x20, 17, ProjectileTiles); 
      00323E 11rE8r05             11361 	ld	de, #_ProjectileTiles
      003241 D5                   11362 	push	de
      003242 21 20 11             11363 	ld	hl, #0x1120
      003245 E5                   11364 	push	hl
      003246 CDr00r00             11365 	call	_set_sprite_data
      003249 E8 04                11366 	add	sp, #4
                                  11367 ;src/main.c:1134: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00324B AF                   11368 	xor	a, a
      00324C                      11369 00103$:
      00324C 21r9Fr0B             11370 	ld	hl, #_PROJECTILECOUNT
      00324F 4E                   11371 	ld	c, (hl)
      003250 B9                   11372 	cp	a, c
      003251 D0                   11373 	ret	NC
      003252 3C                   11374 	inc	a
                                  11375 ;src/main.c:1138: }
      003253 18 F7                11376 	jr	00103$
                                  11377 ;src/main.c:1140: void initGame() {
                                  11378 ;	---------------------------------
                                  11379 ; Function initGame
                                  11380 ; ---------------------------------
      003255                      11381 _initGame::
                                  11382 ;src/main.c:1143: xDir = 0;
      003255 21r93r00             11383 	ld	hl, #_xDir
      003258 36 00                11384 	ld	(hl), #0x00
                                  11385 ;src/main.c:1144: yDir = -1;
      00325A 21r94r00             11386 	ld	hl, #_yDir
      00325D 36 FF                11387 	ld	(hl), #0xff
                                  11388 ;src/main.c:1145: xSpeed = 0;
      00325F 21r95r00             11389 	ld	hl, #_xSpeed
      003262 36 00                11390 	ld	(hl), #0x00
                                  11391 ;src/main.c:1146: ySpeed = 0;
      003264 21r96r00             11392 	ld	hl, #_ySpeed
      003267 36 00                11393 	ld	(hl), #0x00
                                  11394 ;src/main.c:1149: playerX = 80<<5;
      003269 21r97r00             11395 	ld	hl, #_playerX
      00326C 36 00                11396 	ld	(hl), #0x00
      00326E 23                   11397 	inc	hl
      00326F 36 0A                11398 	ld	(hl), #0x0a
                                  11399 ;src/main.c:1150: playerY = 80<<5;
      003271 21r99r00             11400 	ld	hl, #_playerY
      003274 36 00                11401 	ld	(hl), #0x00
      003276 23                   11402 	inc	hl
      003277 36 0A                11403 	ld	(hl), #0x0a
                                  11404 ;src/main.c:1152: playerDrawX = 80;
      003279 21r9Br00             11405 	ld	hl, #_playerDrawX
      00327C 36 50                11406 	ld	(hl), #0x50
                                  11407 ;src/main.c:1153: playerDrawY = 80;
      00327E 21r9Cr00             11408 	ld	hl, #_playerDrawY
      003281 36 50                11409 	ld	(hl), #0x50
                                  11410 ;src/main.c:1156: bgX = 0;
      003283 AF                   11411 	xor	a, a
      003284 21r9Dr00             11412 	ld	hl, #_bgX
      003287 22                   11413 	ld	(hl+), a
      003288 77                   11414 	ld	(hl), a
                                  11415 ;src/main.c:1157: bgY = 0;
      003289 AF                   11416 	xor	a, a
      00328A 21r9Fr00             11417 	ld	hl, #_bgY
      00328D 22                   11418 	ld	(hl+), a
      00328E 77                   11419 	ld	(hl), a
                                  11420 ;src/main.c:1159: hull = maxHull;
      00328F FArA1r0B             11421 	ld	a, (#_maxHull)
      003292 EArF6r00             11422 	ld	(#_hull),a
                                  11423 ;src/main.c:1160: shield = maxShield;
      003295 FArA2r0B             11424 	ld	a, (#_maxShield)
      003298 EArF7r00             11425 	ld	(#_shield),a
                                  11426 ;src/main.c:1162: DISPLAY_ON;
      00329B F0r00                11427 	ldh	a, (_LCDC_REG + 0)
      00329D F6 80                11428 	or	a, #0x80
      00329F E0r00                11429 	ldh	(_LCDC_REG + 0), a
                                  11430 ;src/main.c:1163: SPRITES_8x16;
      0032A1 F0r00                11431 	ldh	a, (_LCDC_REG + 0)
      0032A3 F6 04                11432 	or	a, #0x04
      0032A5 E0r00                11433 	ldh	(_LCDC_REG + 0), a
                                  11434 ;src/main.c:1164: set_sprite_data(0, 12, Player1);
      0032A7 11r83r07             11435 	ld	de, #_Player1
      0032AA D5                   11436 	push	de
      0032AB 21 00 0C             11437 	ld	hl, #0xc00
      0032AE E5                   11438 	push	hl
      0032AF CDr00r00             11439 	call	_set_sprite_data
      0032B2 E8 04                11440 	add	sp, #4
                                  11441 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0032B4 21r02r00             11442 	ld	hl, #(_shadow_OAM + 2)
      0032B7 36 00                11443 	ld	(hl), #0x00
      0032B9 21r06r00             11444 	ld	hl, #(_shadow_OAM + 6)
      0032BC 36 02                11445 	ld	(hl), #0x02
                                  11446 ;src/main.c:1170: SHOW_SPRITES;
      0032BE F0r00                11447 	ldh	a, (_LCDC_REG + 0)
      0032C0 F6 02                11448 	or	a, #0x02
      0032C2 E0r00                11449 	ldh	(_LCDC_REG + 0), a
                                  11450 ;src/main.c:1174: font_init();
      0032C4 CDr00r00             11451 	call	_font_init
                                  11452 ;src/main.c:1176: min_font = font_load(font_min); // 36 tiles of characters
      0032C7 11r00r00             11453 	ld	de, #_font_min
      0032CA D5                   11454 	push	de
      0032CB CDr00r00             11455 	call	_font_load
      0032CE E1                   11456 	pop	hl
      0032CF 21rF8r00             11457 	ld	hl, #_min_font
      0032D2 7B                   11458 	ld	a, e
      0032D3 22                   11459 	ld	(hl+), a
                                  11460 ;src/main.c:1177: font_set(min_font);
      0032D4 7A                   11461 	ld	a, d
      0032D5 32                   11462 	ld	(hl-), a
      0032D6 2A                   11463 	ld	a, (hl+)
      0032D7 5F                   11464 	ld	e, a
      0032D8 56                   11465 	ld	d, (hl)
      0032D9 D5                   11466 	push	de
      0032DA CDr00r00             11467 	call	_font_set
      0032DD E1                   11468 	pop	hl
                                  11469 ;src/main.c:1178: set_win_tiles(1,0,4,1,hullabel);
      0032DE 11r00r00             11470 	ld	de, #_hullabel
      0032E1 D5                   11471 	push	de
      0032E2 21 04 01             11472 	ld	hl, #0x104
      0032E5 E5                   11473 	push	hl
      0032E6 21 01 00             11474 	ld	hl, #0x01
      0032E9 E5                   11475 	push	hl
      0032EA CDr00r00             11476 	call	_set_win_tiles
      0032ED E8 06                11477 	add	sp, #6
                                  11478 ;src/main.c:1179: set_win_tiles(1,1,4,1,shieldlabel);
      0032EF 11r04r00             11479 	ld	de, #_shieldlabel
      0032F2 D5                   11480 	push	de
      0032F3 21 04 01             11481 	ld	hl, #0x104
      0032F6 E5                   11482 	push	hl
      0032F7 21 01 01             11483 	ld	hl, #0x101
      0032FA E5                   11484 	push	hl
      0032FB CDr00r00             11485 	call	_set_win_tiles
      0032FE E8 06                11486 	add	sp, #6
                                  11487 ;src/main.c:1184: set_bkg_data(0x50,1,healthblock);
      003300 11r07r05             11488 	ld	de, #_healthblock
      003303 D5                   11489 	push	de
      003304 21 50 01             11490 	ld	hl, #0x150
      003307 E5                   11491 	push	hl
      003308 CDr00r00             11492 	call	_set_bkg_data
      00330B E8 04                11493 	add	sp, #4
                                  11494 ;src/main.c:1186: setHealthBar(0, hull);
      00330D FArF6r00             11495 	ld	a, (#_hull)
      003310 67                   11496 	ld	h, a
      003311 2E 00                11497 	ld	l, #0x00
      003313 E5                   11498 	push	hl
      003314 CDrA9r0B             11499 	call	_setHealthBar
      003317 E1                   11500 	pop	hl
                                  11501 ;src/main.c:1187: setHealthBar(1, shield);
      003318 FArF7r00             11502 	ld	a, (#_shield)
      00331B 67                   11503 	ld	h, a
      00331C 2E 01                11504 	ld	l, #0x01
      00331E E5                   11505 	push	hl
      00331F CDrA9r0B             11506 	call	_setHealthBar
      003322 E1                   11507 	pop	hl
                                  11508 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003323 3E 07                11509 	ld	a, #0x07
      003325 E0r00                11510 	ldh	(_WX_REG + 0), a
      003327 3E 7E                11511 	ld	a, #0x7e
      003329 E0r00                11512 	ldh	(_WY_REG + 0), a
                                  11513 ;src/main.c:1194: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      00332B 11r87r04             11514 	ld	de, #_backgroundtiles
      00332E D5                   11515 	push	de
      00332F 21 25 08             11516 	ld	hl, #0x825
      003332 E5                   11517 	push	hl
      003333 CDr00r00             11518 	call	_set_bkg_data
      003336 E8 04                11519 	add	sp, #4
                                  11520 ;src/main.c:1195: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      003338 11r87r00             11521 	ld	de, #_background1
      00333B D5                   11522 	push	de
      00333C 21 20 20             11523 	ld	hl, #0x2020
      00333F E5                   11524 	push	hl
      003340 AF                   11525 	xor	a, a
      003341 0F                   11526 	rrca
      003342 F5                   11527 	push	af
      003343 CDr00r00             11528 	call	_set_bkg_tiles
      003346 E8 06                11529 	add	sp, #6
                                  11530 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      003348 AF                   11531 	xor	a, a
      003349 E0r00                11532 	ldh	(_SCX_REG + 0), a
      00334B AF                   11533 	xor	a, a
      00334C E0r00                11534 	ldh	(_SCY_REG + 0), a
                                  11535 ;src/main.c:1201: set_bkg_data(0x51, 18, ProjectileTiles);
      00334E 11rE8r05             11536 	ld	de, #_ProjectileTiles
      003351 D5                   11537 	push	de
      003352 21 51 12             11538 	ld	hl, #0x1251
      003355 E5                   11539 	push	hl
      003356 CDr00r00             11540 	call	_set_bkg_data
      003359 E8 04                11541 	add	sp, #4
                                  11542 ;src/main.c:1203: set_win_tiles(10, 0,4,1,weaponlabel);
      00335B 11r08r00             11543 	ld	de, #_weaponlabel
      00335E D5                   11544 	push	de
      00335F 21 04 01             11545 	ld	hl, #0x104
      003362 E5                   11546 	push	hl
      003363 21 0A 00             11547 	ld	hl, #0x0a
      003366 E5                   11548 	push	hl
      003367 CDr00r00             11549 	call	_set_win_tiles
      00336A E8 06                11550 	add	sp, #6
                                  11551 ;src/main.c:1204: set_win_tiles(10, 1,4,1,scorelabel);
      00336C 11r0Cr00             11552 	ld	de, #_scorelabel
      00336F D5                   11553 	push	de
      003370 21 04 01             11554 	ld	hl, #0x104
      003373 E5                   11555 	push	hl
      003374 21 0A 01             11556 	ld	hl, #0x10a
      003377 E5                   11557 	push	hl
      003378 CDr00r00             11558 	call	_set_win_tiles
      00337B E8 06                11559 	add	sp, #6
                                  11560 ;src/main.c:1206: setGunIcon();
      00337D CDr82r26             11561 	call	_setGunIcon
                                  11562 ;src/main.c:1207: SHOW_BKG;
      003380 F0r00                11563 	ldh	a, (_LCDC_REG + 0)
      003382 F6 01                11564 	or	a, #0x01
      003384 E0r00                11565 	ldh	(_LCDC_REG + 0), a
                                  11566 ;src/main.c:1208: SHOW_WIN;;
      003386 F0r00                11567 	ldh	a, (_LCDC_REG + 0)
      003388 F6 20                11568 	or	a, #0x20
      00338A E0r00                11569 	ldh	(_LCDC_REG + 0), a
                                  11570 ;src/main.c:1210: SCORE = MAKE_BCD(00000);
      00338C AF                   11571 	xor	a, a
      00338D 21rB3r00             11572 	ld	hl, #_SCORE
      003390 22                   11573 	ld	(hl+), a
      003391 22                   11574 	ld	(hl+), a
      003392 22                   11575 	ld	(hl+), a
      003393 77                   11576 	ld	(hl), a
                                  11577 ;src/main.c:1211: updateScore();
      003394 CDrBAr0C             11578 	call	_updateScore
                                  11579 ;src/main.c:1212: missiles = 0;
      003397 21rA8r00             11580 	ld	hl, #_missiles
      00339A 36 00                11581 	ld	(hl), #0x00
                                  11582 ;src/main.c:1213: MISSILES = MAKE_BCD(0);
      00339C AF                   11583 	xor	a, a
      00339D 21rA9r00             11584 	ld	hl, #_MISSILES
      0033A0 22                   11585 	ld	(hl+), a
      0033A1 22                   11586 	ld	(hl+), a
      0033A2 22                   11587 	ld	(hl+), a
      0033A3 77                   11588 	ld	(hl), a
                                  11589 ;src/main.c:1214: updateMissileCount(0);
      0033A4 AF                   11590 	xor	a, a
      0033A5 F5                   11591 	push	af
      0033A6 33                   11592 	inc	sp
      0033A7 CDrE4r0C             11593 	call	_updateMissileCount
      0033AA 33                   11594 	inc	sp
                                  11595 ;src/main.c:1215: set_win_tiles(17, 0,1,1,gunMap+2);
      0033AB 11rB0r00             11596 	ld	de, #(_gunMap + 2)
      0033AE D5                   11597 	push	de
      0033AF 21 01 01             11598 	ld	hl, #0x101
      0033B2 E5                   11599 	push	hl
      0033B3 21 11 00             11600 	ld	hl, #0x11
      0033B6 E5                   11601 	push	hl
      0033B7 CDr00r00             11602 	call	_set_win_tiles
      0033BA E8 06                11603 	add	sp, #6
                                  11604 ;src/main.c:1219: pickup = upgrade;//upgrade;
      0033BC 11 09 00             11605 	ld	de, #0x0009
      0033BF D5                   11606 	push	de
      0033C0 11r08r07             11607 	ld	de, #_upgrade
      0033C3 D5                   11608 	push	de
      0033C4 11rFAr00             11609 	ld	de, #_pickup
      0033C7 D5                   11610 	push	de
      0033C8 CDr00r00             11611 	call	___memcpy
      0033CB E8 06                11612 	add	sp, #6
                                  11613 ;src/main.c:1221: set_sprite_data(0x70, 6, Pickups);
      0033CD 11r23r07             11614 	ld	de, #_Pickups
      0033D0 D5                   11615 	push	de
      0033D1 21 70 06             11616 	ld	hl, #0x670
      0033D4 E5                   11617 	push	hl
      0033D5 CDr00r00             11618 	call	_set_sprite_data
      0033D8 E8 04                11619 	add	sp, #4
                                  11620 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0033DA 21r0Er00             11621 	ld	hl, #(_shadow_OAM + 14)
      0033DD 36 7F                11622 	ld	(hl), #0x7f
                                  11623 ;src/main.c:1225: move_sprite(3, pickup.x + 4, pickup.y + 12);
      0033DF FArFDr00             11624 	ld	a, (#(_pickup + 3) + 0)
      0033E2 C6 0C                11625 	add	a, #0x0c
      0033E4 47                   11626 	ld	b, a
      0033E5 FArFBr00             11627 	ld	a, (#(_pickup + 1) + 0)
      0033E8 C6 04                11628 	add	a, #0x04
      0033EA 4F                   11629 	ld	c, a
                                  11630 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0033EB 21r0Cr00             11631 	ld	hl, #(_shadow_OAM + 12)
                                  11632 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0033EE 78                   11633 	ld	a, b
      0033EF 22                   11634 	ld	(hl+), a
      0033F0 71                   11635 	ld	(hl), c
                                  11636 ;src/main.c:1227: for (uint8_t i = 0; i<exCount; ++i) {
      0033F1 0E 00                11637 	ld	c, #0x00
      0033F3                      11638 00109$:
      0033F3 21rA5r0B             11639 	ld	hl, #_exCount
      0033F6 46                   11640 	ld	b, (hl)
      0033F7 79                   11641 	ld	a, c
      0033F8 90                   11642 	sub	a, b
      0033F9 30 1E                11643 	jr	NC, 00101$
                                  11644 ;src/main.c:1228: explosions[i] = ex;
      0033FB 06 00                11645 	ld	b, #0x00
      0033FD 69                   11646 	ld	l, c
      0033FE 60                   11647 	ld	h, b
      0033FF 29                   11648 	add	hl, hl
      003400 09                   11649 	add	hl, bc
      003401 29                   11650 	add	hl, hl
      003402 11r03r01             11651 	ld	de, #_explosions
      003405 19                   11652 	add	hl, de
      003406 C5                   11653 	push	bc
      003407 11 06 00             11654 	ld	de, #0x0006
      00340A D5                   11655 	push	de
      00340B 11r83r08             11656 	ld	de, #_ex
      00340E D5                   11657 	push	de
      00340F E5                   11658 	push	hl
      003410 CDr00r00             11659 	call	___memcpy
      003413 E8 06                11660 	add	sp, #6
      003415 C1                   11661 	pop	bc
                                  11662 ;src/main.c:1227: for (uint8_t i = 0; i<exCount; ++i) {
      003416 0C                   11663 	inc	c
      003417 18 DA                11664 	jr	00109$
      003419                      11665 00101$:
                                  11666 ;src/main.c:1230: set_sprite_data(exTiles[0], 16, Ex1);
      003419 FArBCr00             11667 	ld	a, (#_exTiles + 0)
      00341C 11r89r08             11668 	ld	de, #_Ex1
      00341F D5                   11669 	push	de
      003420 26 10                11670 	ld	h, #0x10
                                  11671 ;	spillPairReg hl
                                  11672 ;	spillPairReg hl
      003422 E5                   11673 	push	hl
      003423 33                   11674 	inc	sp
      003424 F5                   11675 	push	af
      003425 33                   11676 	inc	sp
      003426 CDr00r00             11677 	call	_set_sprite_data
      003429 E8 04                11678 	add	sp, #4
                                  11679 ;src/main.c:1231: set_sprite_data(exTiles[1], 16, Ex2);
      00342B FArBDr00             11680 	ld	a, (#(_exTiles + 1) + 0)
      00342E 11r89r09             11681 	ld	de, #_Ex2
      003431 D5                   11682 	push	de
      003432 26 10                11683 	ld	h, #0x10
                                  11684 ;	spillPairReg hl
                                  11685 ;	spillPairReg hl
      003434 E5                   11686 	push	hl
      003435 33                   11687 	inc	sp
      003436 F5                   11688 	push	af
      003437 33                   11689 	inc	sp
      003438 CDr00r00             11690 	call	_set_sprite_data
      00343B E8 04                11691 	add	sp, #4
                                  11692 ;src/main.c:1232: set_sprite_data(exTiles[2], 16, Ex3);
      00343D FArBEr00             11693 	ld	a, (#(_exTiles + 2) + 0)
      003440 11r89r0A             11694 	ld	de, #_Ex3
      003443 D5                   11695 	push	de
      003444 26 10                11696 	ld	h, #0x10
                                  11697 ;	spillPairReg hl
                                  11698 ;	spillPairReg hl
      003446 E5                   11699 	push	hl
      003447 33                   11700 	inc	sp
      003448 F5                   11701 	push	af
      003449 33                   11702 	inc	sp
      00344A CDr00r00             11703 	call	_set_sprite_data
      00344D E8 04                11704 	add	sp, #4
                                  11705 ;src/main.c:1236: }
      00344F C9                   11706 	ret
                                  11707 ;src/main.c:1238: void main(){
                                  11708 ;	---------------------------------
                                  11709 ; Function main
                                  11710 ; ---------------------------------
      003450                      11711 _main::
                                  11712 ;src/main.c:1241: initEnemyOptions();
      003450 CDrE8r31             11713 	call	_initEnemyOptions
                                  11714 ;src/main.c:1244: STAT_REG = 0x45;
      003453 3E 45                11715 	ld	a, #0x45
      003455 E0r00                11716 	ldh	(_STAT_REG + 0), a
                                  11717 ;src/main.c:1245: LYC_REG = 0x7e; //line 126
      003457 3E 7E                11718 	ld	a, #0x7e
      003459 E0r00                11719 	ldh	(_LYC_REG + 0), a
                                  11720 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      00345B F3                   11721 	di
                                  11722 ;src/main.c:1247: add_LCD(interruptLCD);
      00345C 11r00r00             11723 	ld	de, #_interruptLCD
      00345F D5                   11724 	push	de
      003460 CDr00r00             11725 	call	_add_LCD
      003463 33                   11726 	inc	sp
      003464 33                   11727 	inc	sp
                                  11728 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      003465 FB                   11729 	ei
                                  11730 ;src/main.c:1249: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      003466 3E 03                11731 	ld	a, #0x03
      003468 F5                   11732 	push	af
      003469 33                   11733 	inc	sp
      00346A CDr00r00             11734 	call	_set_interrupts
      00346D 33                   11735 	inc	sp
                                  11736 ;src/main.c:1253: NR52_REG = 0x80; // sound on 
      00346E 3E 80                11737 	ld	a, #0x80
      003470 E0r00                11738 	ldh	(_NR52_REG + 0), a
                                  11739 ;src/main.c:1254: NR50_REG = 0x77; // volume
      003472 3E 77                11740 	ld	a, #0x77
      003474 E0r00                11741 	ldh	(_NR50_REG + 0), a
                                  11742 ;src/main.c:1255: NR51_REG = 0xFF; // all channels
      003476 3E FF                11743 	ld	a, #0xff
      003478 E0r00                11744 	ldh	(_NR51_REG + 0), a
                                  11745 ;src/main.c:1259: waitpad(J_A);
      00347A 3E 10                11746 	ld	a, #0x10
      00347C F5                   11747 	push	af
      00347D 33                   11748 	inc	sp
      00347E CDr00r00             11749 	call	_waitpad
      003481 33                   11750 	inc	sp
                                  11751 ;src/main.c:1260: uint16_t seed = LY_REG;
      003482 F0r00                11752 	ldh	a, (_LY_REG + 0)
      003484 4F                   11753 	ld	c, a
      003485 06 00                11754 	ld	b, #0x00
                                  11755 ;src/main.c:1261: seed |= (uint16_t)DIV_REG << 8;
      003487 F0r00                11756 	ldh	a, (_DIV_REG + 0)
      003489 5F                   11757 	ld	e, a
      00348A AF                   11758 	xor	a, a
      00348B B1                   11759 	or	a, c
      00348C 4F                   11760 	ld	c, a
      00348D 7B                   11761 	ld	a, e
      00348E B0                   11762 	or	a, b
      00348F 47                   11763 	ld	b, a
                                  11764 ;src/main.c:1262: initrand(seed);
      003490 C5                   11765 	push	bc
      003491 CDr00r00             11766 	call	_initrand
      003494 E1                   11767 	pop	hl
                                  11768 ;src/main.c:1267: initGame();
      003495 CDr55r32             11769 	call	_initGame
                                  11770 ;src/main.c:1268: initEnemies(1);
      003498 3E 01                11771 	ld	a, #0x01
      00349A F5                   11772 	push	af
      00349B 33                   11773 	inc	sp
      00349C CDrFEr0F             11774 	call	_initEnemies
      00349F 33                   11775 	inc	sp
                                  11776 ;src/main.c:1269: initProjectiles();
      0034A0 CDr3Er32             11777 	call	_initProjectiles
                                  11778 ;src/main.c:1271: while(1) {
      0034A3                      11779 00122$:
                                  11780 ;src/main.c:1272: SHOW_SPRITES;
      0034A3 F0r00                11781 	ldh	a, (_LCDC_REG + 0)
      0034A5 F6 02                11782 	or	a, #0x02
      0034A7 E0r00                11783 	ldh	(_LCDC_REG + 0), a
                                  11784 ;src/main.c:1274: joydata = joypad(); // query for button states
      0034A9 CDr00r00             11785 	call	_joypad
      0034AC 21rF5r00             11786 	ld	hl, #_joydata
      0034AF 73                   11787 	ld	(hl), e
                                  11788 ;src/main.c:1276: updateDirection(); // set player direction
      0034B0 CDr71r0D             11789 	call	_updateDirection
                                  11790 ;src/main.c:1279: move(); 
      0034B3 CDrC8r19             11791 	call	_move
                                  11792 ;src/main.c:1281: updateEnemyPositions();
      0034B6 CDr69r11             11793 	call	_updateEnemyPositions
                                  11794 ;src/main.c:1284: checkCollision(); 
      0034B9 CDrB2r21             11795 	call	_checkCollision
                                  11796 ;src/main.c:925: if (shield < maxShield) {
      0034BC 21rA2r0B             11797 	ld	hl, #_maxShield
      0034BF 4E                   11798 	ld	c, (hl)
      0034C0 59                   11799 	ld	e, c
      0034C1 21rF7r00             11800 	ld	hl, #_shield
      0034C4 56                   11801 	ld	d, (hl)
      0034C5 7E                   11802 	ld	a, (hl)
      0034C6 91                   11803 	sub	a, c
      0034C7 CB 7B                11804 	bit	7, e
      0034C9 28 07                11805 	jr	Z, 00194$
      0034CB CB 7A                11806 	bit	7, d
      0034CD 20 08                11807 	jr	NZ, 00195$
      0034CF BF                   11808 	cp	a, a
      0034D0 18 05                11809 	jr	00195$
      0034D2                      11810 00194$:
      0034D2 CB 7A                11811 	bit	7, d
      0034D4 28 01                11812 	jr	Z, 00195$
      0034D6 37                   11813 	scf
      0034D7                      11814 00195$:
      0034D7 30 04                11815 	jr	NC, 00130$
                                  11816 ;src/main.c:926: shield += 1;
      0034D9 21rF7r00             11817 	ld	hl, #_shield
      0034DC 34                   11818 	inc	(hl)
      0034DD                      11819 00130$:
                                  11820 ;src/main.c:928: setHealthBar(0, hull);
      0034DD FArF6r00             11821 	ld	a, (#_hull)
      0034E0 67                   11822 	ld	h, a
      0034E1 2E 00                11823 	ld	l, #0x00
      0034E3 E5                   11824 	push	hl
      0034E4 CDrA9r0B             11825 	call	_setHealthBar
      0034E7 E1                   11826 	pop	hl
                                  11827 ;src/main.c:929: setHealthBar(1, shield);
      0034E8 FArF7r00             11828 	ld	a, (#_shield)
      0034EB 67                   11829 	ld	h, a
      0034EC 2E 01                11830 	ld	l, #0x01
      0034EE E5                   11831 	push	hl
      0034EF CDrA9r0B             11832 	call	_setHealthBar
      0034F2 E1                   11833 	pop	hl
                                  11834 ;src/main.c:1289: if (joydata & J_B && fireCooldown == 0) {
      0034F3 FArF5r00             11835 	ld	a, (#_joydata)
      0034F6 CB 6F                11836 	bit	5, a
      0034F8 28 09                11837 	jr	Z, 00102$
      0034FA FAr92r00             11838 	ld	a, (#_fireCooldown)
      0034FD B7                   11839 	or	a, a
      0034FE 20 03                11840 	jr	NZ, 00102$
                                  11841 ;src/main.c:1290: fire();
      003500 CDrB5r26             11842 	call	_fire
      003503                      11843 00102$:
                                  11844 ;src/main.c:1292: if (fireCooldown > 0) {
      003503 21r92r00             11845 	ld	hl, #_fireCooldown
      003506 7E                   11846 	ld	a, (hl)
      003507 B7                   11847 	or	a, a
      003508 28 01                11848 	jr	Z, 00105$
                                  11849 ;src/main.c:1293: --fireCooldown;
      00350A 35                   11850 	dec	(hl)
      00350B                      11851 00105$:
                                  11852 ;src/main.c:1296: if (joydata & J_SELECT && switchDelay == 0) {
      00350B FArF5r00             11853 	ld	a, (#_joydata)
      00350E CB 77                11854 	bit	6, a
      003510 28 24                11855 	jr	Z, 00112$
      003512 FArADr00             11856 	ld	a, (#_switchDelay)
      003515 B7                   11857 	or	a, a
      003516 20 1E                11858 	jr	NZ, 00112$
                                  11859 ;src/main.c:1297: if (currentGun == 0) {
      003518 21rA7r00             11860 	ld	hl, #_currentGun
      00351B 7E                   11861 	ld	a, (hl)
      00351C B7                   11862 	or	a, a
      00351D 20 04                11863 	jr	NZ, 00109$
                                  11864 ;src/main.c:1298: currentGun = 1;
      00351F 36 01                11865 	ld	(hl), #0x01
      003521 18 0B                11866 	jr	00110$
      003523                      11867 00109$:
                                  11868 ;src/main.c:1300: else if (currentGun == 1) {
      003523 FArA7r00             11869 	ld	a, (#_currentGun)
      003526 3D                   11870 	dec	a
      003527 20 05                11871 	jr	NZ, 00110$
                                  11872 ;src/main.c:1301: currentGun = 0;
      003529 21rA7r00             11873 	ld	hl, #_currentGun
      00352C 36 00                11874 	ld	(hl), #0x00
      00352E                      11875 00110$:
                                  11876 ;src/main.c:1303: setGunIcon();
      00352E CDr82r26             11877 	call	_setGunIcon
                                  11878 ;src/main.c:1304: switchDelay = 30;
      003531 21rADr00             11879 	ld	hl, #_switchDelay
      003534 36 1E                11880 	ld	(hl), #0x1e
      003536                      11881 00112$:
                                  11882 ;src/main.c:1306: if (switchDelay != 0) {
      003536 21rADr00             11883 	ld	hl, #_switchDelay
      003539 7E                   11884 	ld	a, (hl)
      00353A B7                   11885 	or	a, a
      00353B 28 01                11886 	jr	Z, 00115$
                                  11887 ;src/main.c:1307: switchDelay--;
      00353D 35                   11888 	dec	(hl)
      00353E                      11889 00115$:
                                  11890 ;src/main.c:1309: moveProjectiles();
      00353E CDr5Er2C             11891 	call	_moveProjectiles
                                  11892 ;src/main.c:1310: tickPickups();
      003541 CDr41r2E             11893 	call	_tickPickups
                                  11894 ;src/main.c:1312: if (exTick == 0) {
      003544 FArBFr00             11895 	ld	a, (#_exTick)
      003547 B7                   11896 	or	a, a
      003548 20 0B                11897 	jr	NZ, 00117$
                                  11898 ;src/main.c:1313: tickEx();
      00354A CDr11r30             11899 	call	_tickEx
                                  11900 ;src/main.c:1314: exTick = EXTICKFREQUENCY;
      00354D FArA8r0B             11901 	ld	a, (#_EXTICKFREQUENCY)
      003550 EArBFr00             11902 	ld	(#_exTick),a
      003553 18 04                11903 	jr	00118$
      003555                      11904 00117$:
                                  11905 ;src/main.c:1317: exTick--;
      003555 21rBFr00             11906 	ld	hl, #_exTick
      003558 35                   11907 	dec	(hl)
      003559                      11908 00118$:
                                  11909 ;src/main.c:1322: if (hull > 100) {
      003559 3E 64                11910 	ld	a, #0x64
      00355B 21rF6r00             11911 	ld	hl, #_hull
      00355E 96                   11912 	sub	a, (hl)
      00355F 30 02                11913 	jr	NC, 00120$
                                  11914 ;src/main.c:1323: hull = 0;
      003561 36 00                11915 	ld	(hl), #0x00
      003563                      11916 00120$:
                                  11917 ;src/main.c:1326: SHOW_WIN;	
      003563 F0r00                11918 	ldh	a, (_LCDC_REG + 0)
      003565 F6 20                11919 	or	a, #0x20
      003567 E0r00                11920 	ldh	(_LCDC_REG + 0), a
                                  11921 ;src/main.c:1327: wait_vbl_done(); // Idle until next frame
      003569 CDr00r00             11922 	call	_wait_vbl_done
                                  11923 ;src/main.c:1332: }
      00356C C3rA3r34             11924 	jp	00122$
                                  11925 	.area _CODE
                                  11926 	.area _INITIALIZER
      000000                      11927 __xinit__hullabel:
      000000 12                   11928 	.db #0x12	; 18
      000001 1F                   11929 	.db #0x1f	; 31
      000002 16                   11930 	.db #0x16	; 22
      000003 16                   11931 	.db #0x16	; 22
      000004                      11932 __xinit__shieldlabel:
      000004 1D                   11933 	.db #0x1d	; 29
      000005 12                   11934 	.db #0x12	; 18
      000006 16                   11935 	.db #0x16	; 22
      000007 0E                   11936 	.db #0x0e	; 14
      000008                      11937 __xinit__weaponlabel:
      000008 21                   11938 	.db #0x21	; 33
      000009 0F                   11939 	.db #0x0f	; 15
      00000A 1A                   11940 	.db #0x1a	; 26
      00000B 18                   11941 	.db #0x18	; 24
      00000C                      11942 __xinit__scorelabel:
      00000C 1D                   11943 	.db #0x1d	; 29
      00000D 0D                   11944 	.db #0x0d	; 13
      00000E 1C                   11945 	.db #0x1c	; 28
      00000F 0F                   11946 	.db #0x0f	; 15
      000010                      11947 __xinit__blob:
      000010 00 00                11948 	.dw #0x0000
      000012 00 00                11949 	.dw #0x0000
      000014 00                   11950 	.db #0x00	;  0
      000015 00                   11951 	.db #0x00	;  0
      000016 40                   11952 	.db #0x40	; 64
      000017 00                   11953 	.db #0x00	; 0
      000018 01                   11954 	.db #0x01	; 1
      000019 01                   11955 	.db #0x01	; 1
      00001A 01                   11956 	.db #0x01	; 1
      00001B 32                   11957 	.db #0x32	; 50	'2'
      00001C 03                   11958 	.db #0x03	;  3
      00001D 01                   11959 	.db #0x01	; 1
      00001E 00                   11960 	.db #0x00	;  0
      00001F 00                   11961 	.db #0x00	;  0
      000020 32 00                11962 	.dw #0x0032
      000022                      11963 __xinit__bomb:
      000022 00 00                11964 	.dw #0x0000
      000024 00 00                11965 	.dw #0x0000
      000026 00                   11966 	.db #0x00	;  0
      000027 00                   11967 	.db #0x00	;  0
      000028 42                   11968 	.db #0x42	; 66	'B'
      000029 00                   11969 	.db #0x00	; 0
      00002A 01                   11970 	.db #0x01	; 1
      00002B 01                   11971 	.db #0x01	; 1
      00002C 01                   11972 	.db #0x01	; 1
      00002D 32                   11973 	.db #0x32	; 50	'2'
      00002E 05                   11974 	.db #0x05	;  5
      00002F 01                   11975 	.db #0x01	; 1
      000030 00                   11976 	.db #0x00	;  0
      000031 00                   11977 	.db #0x00	;  0
      000032 32 00                11978 	.dw #0x0032
      000034                      11979 __xinit__miniship:
      000034 00 00                11980 	.dw #0x0000
      000036 00 00                11981 	.dw #0x0000
      000038 00                   11982 	.db #0x00	;  0
      000039 00                   11983 	.db #0x00	;  0
      00003A 44                   11984 	.db #0x44	; 68	'D'
      00003B 00                   11985 	.db #0x00	; 0
      00003C 01                   11986 	.db #0x01	; 1
      00003D 01                   11987 	.db #0x01	; 1
      00003E 01                   11988 	.db #0x01	; 1
      00003F 32                   11989 	.db #0x32	; 50	'2'
      000040 05                   11990 	.db #0x05	;  5
      000041 01                   11991 	.db #0x01	; 1
      000042 00                   11992 	.db #0x00	;  0
      000043 00                   11993 	.db #0x00	;  0
      000044 32 00                11994 	.dw #0x0032
      000046                      11995 __xinit__bigblob:
      000046 00 00                11996 	.dw #0x0000
      000048 00 00                11997 	.dw #0x0000
      00004A 00                   11998 	.db #0x00	;  0
      00004B 00                   11999 	.db #0x00	;  0
      00004C 50                   12000 	.db #0x50	; 80	'P'
      00004D 52                   12001 	.db #0x52	; 82	'R'
      00004E 02                   12002 	.db #0x02	; 2
      00004F 01                   12003 	.db #0x01	; 1
      000050 01                   12004 	.db #0x01	; 1
      000051 32                   12005 	.db #0x32	; 50	'2'
      000052 03                   12006 	.db #0x03	;  3
      000053 01                   12007 	.db #0x01	; 1
      000054 00                   12008 	.db #0x00	;  0
      000055 00                   12009 	.db #0x00	;  0
      000056 64 00                12010 	.dw #0x0064
      000058                      12011 __xinit__shieldship:
      000058 00 00                12012 	.dw #0x0000
      00005A 00 00                12013 	.dw #0x0000
      00005C 00                   12014 	.db #0x00	;  0
      00005D 00                   12015 	.db #0x00	;  0
      00005E 54                   12016 	.db #0x54	; 84	'T'
      00005F 56                   12017 	.db #0x56	; 86	'V'
      000060 02                   12018 	.db #0x02	; 2
      000061 01                   12019 	.db #0x01	; 1
      000062 01                   12020 	.db #0x01	; 1
      000063 32                   12021 	.db #0x32	; 50	'2'
      000064 03                   12022 	.db #0x03	;  3
      000065 01                   12023 	.db #0x01	; 1
      000066 00                   12024 	.db #0x00	;  0
      000067 00                   12025 	.db #0x00	;  0
      000068 46 00                12026 	.dw #0x0046
      00006A                      12027 __xinit__singleGun:
      00006A 00 00                12028 	.dw #0x0000
      00006C 00 00                12029 	.dw #0x0000
      00006E 00                   12030 	.db #0x00	;  0
      00006F 00                   12031 	.db #0x00	;  0
      000070 FF                   12032 	.db #0xff	; -1
      000071 02                   12033 	.db #0x02	; 2
      000072 32 00                12034 	.dw #0x0032
      000074 01                   12035 	.db #0x01	; 1
      000075 0F                   12036 	.db #0x0f	; 15
      000076 20                   12037 	.db #0x20	; 32
      000077                      12038 __xinit__doubleGun:
      000077 00 00                12039 	.dw #0x0000
      000079 00 00                12040 	.dw #0x0000
      00007B 00                   12041 	.db #0x00	;  0
      00007C 00                   12042 	.db #0x00	;  0
      00007D FF                   12043 	.db #0xff	; -1
      00007E 02                   12044 	.db #0x02	; 2
      00007F 46 00                12045 	.dw #0x0046
      000081 01                   12046 	.db #0x01	; 1
      000082 0F                   12047 	.db #0x0f	; 15
      000083 26                   12048 	.db #0x26	; 38
      000084                      12049 __xinit__missile:
      000084 00 00                12050 	.dw #0x0000
      000086 00 00                12051 	.dw #0x0000
      000088 00                   12052 	.db #0x00	;  0
      000089 00                   12053 	.db #0x00	;  0
      00008A FF                   12054 	.db #0xff	; -1
      00008B 01                   12055 	.db #0x01	; 1
      00008C 64 00                12056 	.dw #0x0064
      00008E 01                   12057 	.db #0x01	; 1
      00008F 1E                   12058 	.db #0x1e	; 30
      000090 2C                   12059 	.db #0x2c	; 44
      000091                      12060 __xinit__oldestProjectile:
      000091 00                   12061 	.db #0x00	; 0
      000092                      12062 __xinit__fireCooldown:
      000092 00                   12063 	.db #0x00	; 0
      000093                      12064 __xinit__xDir:
      000093 00                   12065 	.db #0x00	;  0
      000094                      12066 __xinit__yDir:
      000094 FF                   12067 	.db #0xff	; -1
      000095                      12068 __xinit__xSpeed:
      000095 00                   12069 	.db #0x00	;  0
      000096                      12070 __xinit__ySpeed:
      000096 00                   12071 	.db #0x00	;  0
      000097                      12072 __xinit__playerX:
      000097 00 0A                12073 	.dw #0x0a00
      000099                      12074 __xinit__playerY:
      000099 00 0A                12075 	.dw #0x0a00
      00009B                      12076 __xinit__playerDrawX:
      00009B 50                   12077 	.db #0x50	; 80	'P'
      00009C                      12078 __xinit__playerDrawY:
      00009C 50                   12079 	.db #0x50	; 80	'P'
      00009D                      12080 __xinit__bgX:
      00009D 00 00                12081 	.dw #0x0000
      00009F                      12082 __xinit__bgY:
      00009F 00 00                12083 	.dw #0x0000
      0000A1                      12084 __xinit__xOverflow:
      0000A1 00 00                12085 	.dw #0x0000
      0000A3                      12086 __xinit__yOverflow:
      0000A3 00 00                12087 	.dw #0x0000
      0000A5                      12088 __xinit__enemyCollisionCount:
      0000A5 00                   12089 	.db #0x00	; 0
      0000A6                      12090 __xinit__gunLevel:
      0000A6 00                   12091 	.db #0x00	; 0
      0000A7                      12092 __xinit__currentGun:
      0000A7 00                   12093 	.db #0x00	; 0
      0000A8                      12094 __xinit__missiles:
      0000A8 00                   12095 	.db #0x00	; 0
      0000A9                      12096 __xinit__MISSILES:
      0000A9 00 00 00 00          12097 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000AD                      12098 __xinit__switchDelay:
      0000AD 00                   12099 	.db #0x00	; 0
      0000AE                      12100 __xinit__gunMap:
      0000AE 53                   12101 	.db #0x53	; 83	'S'
      0000AF 5B                   12102 	.db #0x5b	; 91
      0000B0 61                   12103 	.db #0x61	; 97	'a'
      0000B1                      12104 __xinit__score:
      0000B1 00 00                12105 	.dw #0x0000
      0000B3                      12106 __xinit__SCORE:
      0000B3 00 00 00 00          12107 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B7                      12108 __xinit__INCREMENT:
      0000B7 01 00 00 00          12109 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000BB                      12110 __xinit__oldestEx:
      0000BB 00                   12111 	.db #0x00	; 0
      0000BC                      12112 __xinit__exTiles:
      0000BC 80                   12113 	.db #0x80	; 128
      0000BD 90                   12114 	.db #0x90	; 144
      0000BE A0                   12115 	.db #0xa0	; 160
      0000BF                      12116 __xinit__exTick:
      0000BF 01                   12117 	.db #0x01	; 1
                                  12118 	.area _CABS (ABS)
