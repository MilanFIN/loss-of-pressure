                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickEx
                                     16 	.globl _tickPickups
                                     17 	.globl _moveProjectiles
                                     18 	.globl _fire
                                     19 	.globl _setGunIcon
                                     20 	.globl _checkCollision
                                     21 	.globl _killEnemy
                                     22 	.globl _spawnPickup
                                     23 	.globl _takeDamage
                                     24 	.globl _move
                                     25 	.globl _updateEnemyPositions
                                     26 	.globl _initEnemies
                                     27 	.globl _playSound
                                     28 	.globl _updateDirection
                                     29 	.globl _incrementScore
                                     30 	.globl _updateMissileCount
                                     31 	.globl _updateScore
                                     32 	.globl _setHealthBar
                                     33 	.globl _interruptLCD
                                     34 	.globl _bcd2text
                                     35 	.globl _bcd_sub
                                     36 	.globl _bcd_add
                                     37 	.globl _rand
                                     38 	.globl _initrand
                                     39 	.globl _font_set
                                     40 	.globl _font_load
                                     41 	.globl _font_init
                                     42 	.globl _set_sprite_data
                                     43 	.globl _set_win_tiles
                                     44 	.globl _set_bkg_tiles
                                     45 	.globl _set_bkg_data
                                     46 	.globl _wait_vbl_done
                                     47 	.globl _set_interrupts
                                     48 	.globl _waitpad
                                     49 	.globl _joypad
                                     50 	.globl _add_LCD
                                     51 	.globl _oldestEx
                                     52 	.globl _exCount
                                     53 	.globl _INCREMENT
                                     54 	.globl _SCORE
                                     55 	.globl _score
                                     56 	.globl _gunMap
                                     57 	.globl _switchDelay
                                     58 	.globl _MISSILES
                                     59 	.globl _missiles
                                     60 	.globl _currentGun
                                     61 	.globl _gunLevel
                                     62 	.globl _enemyCollisionCount
                                     63 	.globl _yOverflow
                                     64 	.globl _xOverflow
                                     65 	.globl _bgY
                                     66 	.globl _bgX
                                     67 	.globl _playerDrawY
                                     68 	.globl _playerDrawX
                                     69 	.globl _playerY
                                     70 	.globl _playerX
                                     71 	.globl _ySpeed
                                     72 	.globl _xSpeed
                                     73 	.globl _yDir
                                     74 	.globl _xDir
                                     75 	.globl _fireCooldown
                                     76 	.globl _oldestProjectile
                                     77 	.globl _missile
                                     78 	.globl _doubleGun
                                     79 	.globl _singleGun
                                     80 	.globl _shieldship
                                     81 	.globl _bigblob
                                     82 	.globl _miniship
                                     83 	.globl _bomb
                                     84 	.globl _blob
                                     85 	.globl _scorelabel
                                     86 	.globl _weaponlabel
                                     87 	.globl _shieldlabel
                                     88 	.globl _hullabel
                                     89 	.globl _explosions
                                     90 	.globl _pickup
                                     91 	.globl _min_font
                                     92 	.globl _shield
                                     93 	.globl _hull
                                     94 	.globl _joydata
                                     95 	.globl _projectiles
                                     96 	.globl _enemies
                                     97 	.globl _enemyOptions
                                     98 	.globl _EXPLFRAMETIME
                                     99 	.globl _SPLASHDROPOFF
                                    100 	.globl _MAXGUNLEVEL
                                    101 	.globl _maxShield
                                    102 	.globl _maxHull
                                    103 	.globl _PLAYERSIZE
                                    104 	.globl _PROJECTILECOUNT
                                    105 	.globl _ySpawnPositions
                                    106 	.globl _xSpawnPositions
                                    107 	.globl _ENEMYCOUNT
                                    108 	.globl _EMPTYSPRITE
                                    109 	.globl _BLANK
                                    110 	.globl _BLANKSIZE
                                    111 	.globl _Ex3
                                    112 	.globl _Ex2
                                    113 	.globl _Ex1
                                    114 	.globl _ex
                                    115 	.globl _Player1
                                    116 	.globl _Pickups
                                    117 	.globl _health
                                    118 	.globl _ammo
                                    119 	.globl _upgrade
                                    120 	.globl _ProjectileTiles
                                    121 	.globl _largeenemies
                                    122 	.globl _enemy1
                                    123 	.globl _enemyOptionCount
                                    124 	.globl _healthblock
                                    125 	.globl _backgroundtiles
                                    126 	.globl _background1
                                    127 	.globl _cross
                                    128 ;--------------------------------------------------------
                                    129 ; special function registers
                                    130 ;--------------------------------------------------------
                                    131 ;--------------------------------------------------------
                                    132 ; ram data
                                    133 ;--------------------------------------------------------
                                    134 	.area _DATA
      000000                        135 _enemyOptions::
      000000                        136 	.ds 90
      00005A                        137 _enemies::
      00005A                        138 	.ds 90
      0000B4                        139 _projectiles::
      0000B4                        140 	.ds 65
      0000F5                        141 _joydata::
      0000F5                        142 	.ds 1
      0000F6                        143 _hull::
      0000F6                        144 	.ds 1
      0000F7                        145 _shield::
      0000F7                        146 	.ds 1
      0000F8                        147 _min_font::
      0000F8                        148 	.ds 2
      0000FA                        149 _pickup::
      0000FA                        150 	.ds 9
      000103                        151 _explosions::
      000103                        152 	.ds 18
                                    153 ;--------------------------------------------------------
                                    154 ; ram data
                                    155 ;--------------------------------------------------------
                                    156 	.area _INITIALIZED
      000000                        157 _hullabel::
      000000                        158 	.ds 4
      000004                        159 _shieldlabel::
      000004                        160 	.ds 4
      000008                        161 _weaponlabel::
      000008                        162 	.ds 4
      00000C                        163 _scorelabel::
      00000C                        164 	.ds 4
      000010                        165 _blob::
      000010                        166 	.ds 18
      000022                        167 _bomb::
      000022                        168 	.ds 18
      000034                        169 _miniship::
      000034                        170 	.ds 18
      000046                        171 _bigblob::
      000046                        172 	.ds 18
      000058                        173 _shieldship::
      000058                        174 	.ds 18
      00006A                        175 _singleGun::
      00006A                        176 	.ds 13
      000077                        177 _doubleGun::
      000077                        178 	.ds 13
      000084                        179 _missile::
      000084                        180 	.ds 13
      000091                        181 _oldestProjectile::
      000091                        182 	.ds 1
      000092                        183 _fireCooldown::
      000092                        184 	.ds 1
      000093                        185 _xDir::
      000093                        186 	.ds 1
      000094                        187 _yDir::
      000094                        188 	.ds 1
      000095                        189 _xSpeed::
      000095                        190 	.ds 1
      000096                        191 _ySpeed::
      000096                        192 	.ds 1
      000097                        193 _playerX::
      000097                        194 	.ds 2
      000099                        195 _playerY::
      000099                        196 	.ds 2
      00009B                        197 _playerDrawX::
      00009B                        198 	.ds 1
      00009C                        199 _playerDrawY::
      00009C                        200 	.ds 1
      00009D                        201 _bgX::
      00009D                        202 	.ds 2
      00009F                        203 _bgY::
      00009F                        204 	.ds 2
      0000A1                        205 _xOverflow::
      0000A1                        206 	.ds 2
      0000A3                        207 _yOverflow::
      0000A3                        208 	.ds 2
      0000A5                        209 _enemyCollisionCount::
      0000A5                        210 	.ds 1
      0000A6                        211 _gunLevel::
      0000A6                        212 	.ds 1
      0000A7                        213 _currentGun::
      0000A7                        214 	.ds 1
      0000A8                        215 _missiles::
      0000A8                        216 	.ds 1
      0000A9                        217 _MISSILES::
      0000A9                        218 	.ds 4
      0000AD                        219 _switchDelay::
      0000AD                        220 	.ds 1
      0000AE                        221 _gunMap::
      0000AE                        222 	.ds 3
      0000B1                        223 _score::
      0000B1                        224 	.ds 2
      0000B3                        225 _SCORE::
      0000B3                        226 	.ds 4
      0000B7                        227 _INCREMENT::
      0000B7                        228 	.ds 4
      0000BB                        229 _exCount::
      0000BB                        230 	.ds 1
      0000BC                        231 _oldestEx::
      0000BC                        232 	.ds 1
                                    233 ;--------------------------------------------------------
                                    234 ; absolute external ram data
                                    235 ;--------------------------------------------------------
                                    236 	.area _DABS (ABS)
                                    237 ;--------------------------------------------------------
                                    238 ; global & static initialisations
                                    239 ;--------------------------------------------------------
                                    240 	.area _HOME
                                    241 	.area _GSINIT
                                    242 	.area _GSFINAL
                                    243 	.area _GSINIT
                                    244 ;--------------------------------------------------------
                                    245 ; Home
                                    246 ;--------------------------------------------------------
                                    247 	.area _HOME
                                    248 	.area _HOME
                                    249 ;--------------------------------------------------------
                                    250 ; code
                                    251 ;--------------------------------------------------------
                                    252 	.area _CODE
                                    253 ;src/main.c:148: void interruptLCD()
                                    254 ;	---------------------------------
                                    255 ; Function interruptLCD
                                    256 ; ---------------------------------
      000000                        257 _interruptLCD::
                                    258 ;src/main.c:150: HIDE_SPRITES;
      000000 F0r00                  259 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  260 	and	a, #0xfd
      000004 E0r00                  261 	ldh	(_LCDC_REG + 0), a
                                    262 ;src/main.c:151: }
      000006 C9                     263 	ret
      000007                        264 _cross:
      000007 18                     265 	.db #0x18	; 24
      000008 18                     266 	.db #0x18	; 24
      000009 18                     267 	.db #0x18	; 24
      00000A 18                     268 	.db #0x18	; 24
      00000B 3C                     269 	.db #0x3c	; 60
      00000C 3C                     270 	.db #0x3c	; 60
      00000D 3C                     271 	.db #0x3c	; 60
      00000E 3C                     272 	.db #0x3c	; 60
      00000F 7E                     273 	.db #0x7e	; 126
      000010 7E                     274 	.db #0x7e	; 126
      000011 7E                     275 	.db #0x7e	; 126
      000012 7E                     276 	.db #0x7e	; 126
      000013 FF                     277 	.db #0xff	; 255
      000014 FF                     278 	.db #0xff	; 255
      000015 FF                     279 	.db #0xff	; 255
      000016 FF                     280 	.db #0xff	; 255
      000017 0F                     281 	.db #0x0f	; 15
      000018 0F                     282 	.db #0x0f	; 15
      000019 3F                     283 	.db #0x3f	; 63
      00001A 3F                     284 	.db #0x3f	; 63
      00001B FF                     285 	.db #0xff	; 255
      00001C FF                     286 	.db #0xff	; 255
      00001D FF                     287 	.db #0xff	; 255
      00001E FF                     288 	.db #0xff	; 255
      00001F 7E                     289 	.db #0x7e	; 126
      000020 7E                     290 	.db #0x7e	; 126
      000021 3E                     291 	.db #0x3e	; 62
      000022 3E                     292 	.db #0x3e	; 62
      000023 1C                     293 	.db #0x1c	; 28
      000024 1C                     294 	.db #0x1c	; 28
      000025 0C                     295 	.db #0x0c	; 12
      000026 0C                     296 	.db #0x0c	; 12
      000027 C0                     297 	.db #0xc0	; 192
      000028 C0                     298 	.db #0xc0	; 192
      000029 F0                     299 	.db #0xf0	; 240
      00002A F0                     300 	.db #0xf0	; 240
      00002B FC                     301 	.db #0xfc	; 252
      00002C FC                     302 	.db #0xfc	; 252
      00002D FF                     303 	.db #0xff	; 255
      00002E FF                     304 	.db #0xff	; 255
      00002F FF                     305 	.db #0xff	; 255
      000030 FF                     306 	.db #0xff	; 255
      000031 FC                     307 	.db #0xfc	; 252
      000032 FC                     308 	.db #0xfc	; 252
      000033 F0                     309 	.db #0xf0	; 240
      000034 F0                     310 	.db #0xf0	; 240
      000035 C0                     311 	.db #0xc0	; 192
      000036 C0                     312 	.db #0xc0	; 192
      000037 0C                     313 	.db #0x0c	; 12
      000038 0C                     314 	.db #0x0c	; 12
      000039 1C                     315 	.db #0x1c	; 28
      00003A 1C                     316 	.db #0x1c	; 28
      00003B 3E                     317 	.db #0x3e	; 62
      00003C 3E                     318 	.db #0x3e	; 62
      00003D 7E                     319 	.db #0x7e	; 126
      00003E 7E                     320 	.db #0x7e	; 126
      00003F FF                     321 	.db #0xff	; 255
      000040 FF                     322 	.db #0xff	; 255
      000041 FF                     323 	.db #0xff	; 255
      000042 FF                     324 	.db #0xff	; 255
      000043 3F                     325 	.db #0x3f	; 63
      000044 3F                     326 	.db #0x3f	; 63
      000045 0F                     327 	.db #0x0f	; 15
      000046 0F                     328 	.db #0x0f	; 15
      000047 FF                     329 	.db #0xff	; 255
      000048 FF                     330 	.db #0xff	; 255
      000049 FF                     331 	.db #0xff	; 255
      00004A FF                     332 	.db #0xff	; 255
      00004B 7E                     333 	.db #0x7e	; 126
      00004C 7E                     334 	.db #0x7e	; 126
      00004D 7E                     335 	.db #0x7e	; 126
      00004E 7E                     336 	.db #0x7e	; 126
      00004F 3C                     337 	.db #0x3c	; 60
      000050 3C                     338 	.db #0x3c	; 60
      000051 3C                     339 	.db #0x3c	; 60
      000052 3C                     340 	.db #0x3c	; 60
      000053 18                     341 	.db #0x18	; 24
      000054 18                     342 	.db #0x18	; 24
      000055 18                     343 	.db #0x18	; 24
      000056 18                     344 	.db #0x18	; 24
      000057 30                     345 	.db #0x30	; 48	'0'
      000058 30                     346 	.db #0x30	; 48	'0'
      000059 38                     347 	.db #0x38	; 56	'8'
      00005A 38                     348 	.db #0x38	; 56	'8'
      00005B 7C                     349 	.db #0x7c	; 124
      00005C 7C                     350 	.db #0x7c	; 124
      00005D 7E                     351 	.db #0x7e	; 126
      00005E 7E                     352 	.db #0x7e	; 126
      00005F FF                     353 	.db #0xff	; 255
      000060 FF                     354 	.db #0xff	; 255
      000061 FF                     355 	.db #0xff	; 255
      000062 FF                     356 	.db #0xff	; 255
      000063 FC                     357 	.db #0xfc	; 252
      000064 FC                     358 	.db #0xfc	; 252
      000065 F0                     359 	.db #0xf0	; 240
      000066 F0                     360 	.db #0xf0	; 240
      000067 03                     361 	.db #0x03	; 3
      000068 03                     362 	.db #0x03	; 3
      000069 0F                     363 	.db #0x0f	; 15
      00006A 0F                     364 	.db #0x0f	; 15
      00006B 3F                     365 	.db #0x3f	; 63
      00006C 3F                     366 	.db #0x3f	; 63
      00006D FF                     367 	.db #0xff	; 255
      00006E FF                     368 	.db #0xff	; 255
      00006F FF                     369 	.db #0xff	; 255
      000070 FF                     370 	.db #0xff	; 255
      000071 3F                     371 	.db #0x3f	; 63
      000072 3F                     372 	.db #0x3f	; 63
      000073 0F                     373 	.db #0x0f	; 15
      000074 0F                     374 	.db #0x0f	; 15
      000075 03                     375 	.db #0x03	; 3
      000076 03                     376 	.db #0x03	; 3
      000077 F0                     377 	.db #0xf0	; 240
      000078 F0                     378 	.db #0xf0	; 240
      000079 FC                     379 	.db #0xfc	; 252
      00007A FC                     380 	.db #0xfc	; 252
      00007B FF                     381 	.db #0xff	; 255
      00007C FF                     382 	.db #0xff	; 255
      00007D FF                     383 	.db #0xff	; 255
      00007E FF                     384 	.db #0xff	; 255
      00007F 7E                     385 	.db #0x7e	; 126
      000080 7E                     386 	.db #0x7e	; 126
      000081 7C                     387 	.db #0x7c	; 124
      000082 7C                     388 	.db #0x7c	; 124
      000083 38                     389 	.db #0x38	; 56	'8'
      000084 38                     390 	.db #0x38	; 56	'8'
      000085 30                     391 	.db #0x30	; 48	'0'
      000086 30                     392 	.db #0x30	; 48	'0'
      000087                        393 _background1:
      000087 26                     394 	.db #0x26	; 38
      000088 26                     395 	.db #0x26	; 38
      000089 26                     396 	.db #0x26	; 38
      00008A 26                     397 	.db #0x26	; 38
      00008B 26                     398 	.db #0x26	; 38
      00008C 26                     399 	.db #0x26	; 38
      00008D 26                     400 	.db #0x26	; 38
      00008E 26                     401 	.db #0x26	; 38
      00008F 26                     402 	.db #0x26	; 38
      000090 26                     403 	.db #0x26	; 38
      000091 26                     404 	.db #0x26	; 38
      000092 2A                     405 	.db #0x2a	; 42
      000093 29                     406 	.db #0x29	; 41
      000094 26                     407 	.db #0x26	; 38
      000095 26                     408 	.db #0x26	; 38
      000096 26                     409 	.db #0x26	; 38
      000097 26                     410 	.db #0x26	; 38
      000098 26                     411 	.db #0x26	; 38
      000099 26                     412 	.db #0x26	; 38
      00009A 26                     413 	.db #0x26	; 38
      00009B 2C                     414 	.db #0x2c	; 44
      00009C 26                     415 	.db #0x26	; 38
      00009D 26                     416 	.db #0x26	; 38
      00009E 26                     417 	.db #0x26	; 38
      00009F 26                     418 	.db #0x26	; 38
      0000A0 26                     419 	.db #0x26	; 38
      0000A1 26                     420 	.db #0x26	; 38
      0000A2 26                     421 	.db #0x26	; 38
      0000A3 26                     422 	.db #0x26	; 38
      0000A4 26                     423 	.db #0x26	; 38
      0000A5 26                     424 	.db #0x26	; 38
      0000A6 26                     425 	.db #0x26	; 38
      0000A7 26                     426 	.db #0x26	; 38
      0000A8 2B                     427 	.db #0x2b	; 43
      0000A9 26                     428 	.db #0x26	; 38
      0000AA 26                     429 	.db #0x26	; 38
      0000AB 26                     430 	.db #0x26	; 38
      0000AC 26                     431 	.db #0x26	; 38
      0000AD 26                     432 	.db #0x26	; 38
      0000AE 26                     433 	.db #0x26	; 38
      0000AF 26                     434 	.db #0x26	; 38
      0000B0 26                     435 	.db #0x26	; 38
      0000B1 26                     436 	.db #0x26	; 38
      0000B2 26                     437 	.db #0x26	; 38
      0000B3 26                     438 	.db #0x26	; 38
      0000B4 26                     439 	.db #0x26	; 38
      0000B5 26                     440 	.db #0x26	; 38
      0000B6 26                     441 	.db #0x26	; 38
      0000B7 26                     442 	.db #0x26	; 38
      0000B8 26                     443 	.db #0x26	; 38
      0000B9 26                     444 	.db #0x26	; 38
      0000BA 26                     445 	.db #0x26	; 38
      0000BB 26                     446 	.db #0x26	; 38
      0000BC 26                     447 	.db #0x26	; 38
      0000BD 26                     448 	.db #0x26	; 38
      0000BE 26                     449 	.db #0x26	; 38
      0000BF 26                     450 	.db #0x26	; 38
      0000C0 26                     451 	.db #0x26	; 38
      0000C1 26                     452 	.db #0x26	; 38
      0000C2 26                     453 	.db #0x26	; 38
      0000C3 26                     454 	.db #0x26	; 38
      0000C4 26                     455 	.db #0x26	; 38
      0000C5 26                     456 	.db #0x26	; 38
      0000C6 26                     457 	.db #0x26	; 38
      0000C7 26                     458 	.db #0x26	; 38
      0000C8 26                     459 	.db #0x26	; 38
      0000C9 26                     460 	.db #0x26	; 38
      0000CA 26                     461 	.db #0x26	; 38
      0000CB 26                     462 	.db #0x26	; 38
      0000CC 26                     463 	.db #0x26	; 38
      0000CD 26                     464 	.db #0x26	; 38
      0000CE 26                     465 	.db #0x26	; 38
      0000CF 26                     466 	.db #0x26	; 38
      0000D0 26                     467 	.db #0x26	; 38
      0000D1 26                     468 	.db #0x26	; 38
      0000D2 26                     469 	.db #0x26	; 38
      0000D3 26                     470 	.db #0x26	; 38
      0000D4 26                     471 	.db #0x26	; 38
      0000D5 26                     472 	.db #0x26	; 38
      0000D6 26                     473 	.db #0x26	; 38
      0000D7 26                     474 	.db #0x26	; 38
      0000D8 26                     475 	.db #0x26	; 38
      0000D9 26                     476 	.db #0x26	; 38
      0000DA 26                     477 	.db #0x26	; 38
      0000DB 26                     478 	.db #0x26	; 38
      0000DC 26                     479 	.db #0x26	; 38
      0000DD 26                     480 	.db #0x26	; 38
      0000DE 26                     481 	.db #0x26	; 38
      0000DF 26                     482 	.db #0x26	; 38
      0000E0 26                     483 	.db #0x26	; 38
      0000E1 26                     484 	.db #0x26	; 38
      0000E2 26                     485 	.db #0x26	; 38
      0000E3 26                     486 	.db #0x26	; 38
      0000E4 26                     487 	.db #0x26	; 38
      0000E5 26                     488 	.db #0x26	; 38
      0000E6 26                     489 	.db #0x26	; 38
      0000E7 26                     490 	.db #0x26	; 38
      0000E8 26                     491 	.db #0x26	; 38
      0000E9 26                     492 	.db #0x26	; 38
      0000EA 26                     493 	.db #0x26	; 38
      0000EB 26                     494 	.db #0x26	; 38
      0000EC 26                     495 	.db #0x26	; 38
      0000ED 26                     496 	.db #0x26	; 38
      0000EE 26                     497 	.db #0x26	; 38
      0000EF 26                     498 	.db #0x26	; 38
      0000F0 26                     499 	.db #0x26	; 38
      0000F1 26                     500 	.db #0x26	; 38
      0000F2 26                     501 	.db #0x26	; 38
      0000F3 26                     502 	.db #0x26	; 38
      0000F4 26                     503 	.db #0x26	; 38
      0000F5 26                     504 	.db #0x26	; 38
      0000F6 26                     505 	.db #0x26	; 38
      0000F7 26                     506 	.db #0x26	; 38
      0000F8 2B                     507 	.db #0x2b	; 43
      0000F9 26                     508 	.db #0x26	; 38
      0000FA 26                     509 	.db #0x26	; 38
      0000FB 26                     510 	.db #0x26	; 38
      0000FC 26                     511 	.db #0x26	; 38
      0000FD 26                     512 	.db #0x26	; 38
      0000FE 26                     513 	.db #0x26	; 38
      0000FF 2B                     514 	.db #0x2b	; 43
      000100 26                     515 	.db #0x26	; 38
      000101 26                     516 	.db #0x26	; 38
      000102 26                     517 	.db #0x26	; 38
      000103 26                     518 	.db #0x26	; 38
      000104 26                     519 	.db #0x26	; 38
      000105 26                     520 	.db #0x26	; 38
      000106 26                     521 	.db #0x26	; 38
      000107 26                     522 	.db #0x26	; 38
      000108 26                     523 	.db #0x26	; 38
      000109 26                     524 	.db #0x26	; 38
      00010A 26                     525 	.db #0x26	; 38
      00010B 26                     526 	.db #0x26	; 38
      00010C 2B                     527 	.db #0x2b	; 43
      00010D 26                     528 	.db #0x26	; 38
      00010E 26                     529 	.db #0x26	; 38
      00010F 26                     530 	.db #0x26	; 38
      000110 26                     531 	.db #0x26	; 38
      000111 26                     532 	.db #0x26	; 38
      000112 26                     533 	.db #0x26	; 38
      000113 26                     534 	.db #0x26	; 38
      000114 2C                     535 	.db #0x2c	; 44
      000115 26                     536 	.db #0x26	; 38
      000116 26                     537 	.db #0x26	; 38
      000117 26                     538 	.db #0x26	; 38
      000118 26                     539 	.db #0x26	; 38
      000119 26                     540 	.db #0x26	; 38
      00011A 26                     541 	.db #0x26	; 38
      00011B 26                     542 	.db #0x26	; 38
      00011C 26                     543 	.db #0x26	; 38
      00011D 26                     544 	.db #0x26	; 38
      00011E 26                     545 	.db #0x26	; 38
      00011F 26                     546 	.db #0x26	; 38
      000120 26                     547 	.db #0x26	; 38
      000121 26                     548 	.db #0x26	; 38
      000122 26                     549 	.db #0x26	; 38
      000123 26                     550 	.db #0x26	; 38
      000124 26                     551 	.db #0x26	; 38
      000125 26                     552 	.db #0x26	; 38
      000126 26                     553 	.db #0x26	; 38
      000127 26                     554 	.db #0x26	; 38
      000128 26                     555 	.db #0x26	; 38
      000129 2C                     556 	.db #0x2c	; 44
      00012A 26                     557 	.db #0x26	; 38
      00012B 26                     558 	.db #0x26	; 38
      00012C 26                     559 	.db #0x26	; 38
      00012D 26                     560 	.db #0x26	; 38
      00012E 25                     561 	.db #0x25	; 37
      00012F 26                     562 	.db #0x26	; 38
      000130 26                     563 	.db #0x26	; 38
      000131 26                     564 	.db #0x26	; 38
      000132 26                     565 	.db #0x26	; 38
      000133 26                     566 	.db #0x26	; 38
      000134 26                     567 	.db #0x26	; 38
      000135 26                     568 	.db #0x26	; 38
      000136 26                     569 	.db #0x26	; 38
      000137 26                     570 	.db #0x26	; 38
      000138 26                     571 	.db #0x26	; 38
      000139 26                     572 	.db #0x26	; 38
      00013A 26                     573 	.db #0x26	; 38
      00013B 26                     574 	.db #0x26	; 38
      00013C 2C                     575 	.db #0x2c	; 44
      00013D 26                     576 	.db #0x26	; 38
      00013E 26                     577 	.db #0x26	; 38
      00013F 26                     578 	.db #0x26	; 38
      000140 26                     579 	.db #0x26	; 38
      000141 26                     580 	.db #0x26	; 38
      000142 26                     581 	.db #0x26	; 38
      000143 26                     582 	.db #0x26	; 38
      000144 2B                     583 	.db #0x2b	; 43
      000145 26                     584 	.db #0x26	; 38
      000146 26                     585 	.db #0x26	; 38
      000147 26                     586 	.db #0x26	; 38
      000148 26                     587 	.db #0x26	; 38
      000149 26                     588 	.db #0x26	; 38
      00014A 26                     589 	.db #0x26	; 38
      00014B 26                     590 	.db #0x26	; 38
      00014C 26                     591 	.db #0x26	; 38
      00014D 26                     592 	.db #0x26	; 38
      00014E 26                     593 	.db #0x26	; 38
      00014F 26                     594 	.db #0x26	; 38
      000150 26                     595 	.db #0x26	; 38
      000151 26                     596 	.db #0x26	; 38
      000152 26                     597 	.db #0x26	; 38
      000153 26                     598 	.db #0x26	; 38
      000154 26                     599 	.db #0x26	; 38
      000155 26                     600 	.db #0x26	; 38
      000156 26                     601 	.db #0x26	; 38
      000157 26                     602 	.db #0x26	; 38
      000158 26                     603 	.db #0x26	; 38
      000159 26                     604 	.db #0x26	; 38
      00015A 26                     605 	.db #0x26	; 38
      00015B 26                     606 	.db #0x26	; 38
      00015C 26                     607 	.db #0x26	; 38
      00015D 26                     608 	.db #0x26	; 38
      00015E 26                     609 	.db #0x26	; 38
      00015F 26                     610 	.db #0x26	; 38
      000160 2C                     611 	.db #0x2c	; 44
      000161 26                     612 	.db #0x26	; 38
      000162 26                     613 	.db #0x26	; 38
      000163 26                     614 	.db #0x26	; 38
      000164 26                     615 	.db #0x26	; 38
      000165 26                     616 	.db #0x26	; 38
      000166 26                     617 	.db #0x26	; 38
      000167 26                     618 	.db #0x26	; 38
      000168 26                     619 	.db #0x26	; 38
      000169 26                     620 	.db #0x26	; 38
      00016A 26                     621 	.db #0x26	; 38
      00016B 26                     622 	.db #0x26	; 38
      00016C 26                     623 	.db #0x26	; 38
      00016D 26                     624 	.db #0x26	; 38
      00016E 26                     625 	.db #0x26	; 38
      00016F 26                     626 	.db #0x26	; 38
      000170 26                     627 	.db #0x26	; 38
      000171 26                     628 	.db #0x26	; 38
      000172 26                     629 	.db #0x26	; 38
      000173 26                     630 	.db #0x26	; 38
      000174 26                     631 	.db #0x26	; 38
      000175 26                     632 	.db #0x26	; 38
      000176 26                     633 	.db #0x26	; 38
      000177 26                     634 	.db #0x26	; 38
      000178 26                     635 	.db #0x26	; 38
      000179 26                     636 	.db #0x26	; 38
      00017A 26                     637 	.db #0x26	; 38
      00017B 26                     638 	.db #0x26	; 38
      00017C 26                     639 	.db #0x26	; 38
      00017D 26                     640 	.db #0x26	; 38
      00017E 26                     641 	.db #0x26	; 38
      00017F 26                     642 	.db #0x26	; 38
      000180 26                     643 	.db #0x26	; 38
      000181 26                     644 	.db #0x26	; 38
      000182 26                     645 	.db #0x26	; 38
      000183 26                     646 	.db #0x26	; 38
      000184 26                     647 	.db #0x26	; 38
      000185 26                     648 	.db #0x26	; 38
      000186 26                     649 	.db #0x26	; 38
      000187 26                     650 	.db #0x26	; 38
      000188 26                     651 	.db #0x26	; 38
      000189 26                     652 	.db #0x26	; 38
      00018A 26                     653 	.db #0x26	; 38
      00018B 26                     654 	.db #0x26	; 38
      00018C 26                     655 	.db #0x26	; 38
      00018D 26                     656 	.db #0x26	; 38
      00018E 26                     657 	.db #0x26	; 38
      00018F 26                     658 	.db #0x26	; 38
      000190 26                     659 	.db #0x26	; 38
      000191 26                     660 	.db #0x26	; 38
      000192 26                     661 	.db #0x26	; 38
      000193 26                     662 	.db #0x26	; 38
      000194 26                     663 	.db #0x26	; 38
      000195 2B                     664 	.db #0x2b	; 43
      000196 26                     665 	.db #0x26	; 38
      000197 26                     666 	.db #0x26	; 38
      000198 26                     667 	.db #0x26	; 38
      000199 26                     668 	.db #0x26	; 38
      00019A 26                     669 	.db #0x26	; 38
      00019B 26                     670 	.db #0x26	; 38
      00019C 26                     671 	.db #0x26	; 38
      00019D 26                     672 	.db #0x26	; 38
      00019E 26                     673 	.db #0x26	; 38
      00019F 26                     674 	.db #0x26	; 38
      0001A0 26                     675 	.db #0x26	; 38
      0001A1 26                     676 	.db #0x26	; 38
      0001A2 26                     677 	.db #0x26	; 38
      0001A3 26                     678 	.db #0x26	; 38
      0001A4 26                     679 	.db #0x26	; 38
      0001A5 26                     680 	.db #0x26	; 38
      0001A6 25                     681 	.db #0x25	; 37
      0001A7 26                     682 	.db #0x26	; 38
      0001A8 26                     683 	.db #0x26	; 38
      0001A9 26                     684 	.db #0x26	; 38
      0001AA 2B                     685 	.db #0x2b	; 43
      0001AB 26                     686 	.db #0x26	; 38
      0001AC 26                     687 	.db #0x26	; 38
      0001AD 26                     688 	.db #0x26	; 38
      0001AE 26                     689 	.db #0x26	; 38
      0001AF 26                     690 	.db #0x26	; 38
      0001B0 26                     691 	.db #0x26	; 38
      0001B1 26                     692 	.db #0x26	; 38
      0001B2 26                     693 	.db #0x26	; 38
      0001B3 26                     694 	.db #0x26	; 38
      0001B4 26                     695 	.db #0x26	; 38
      0001B5 26                     696 	.db #0x26	; 38
      0001B6 26                     697 	.db #0x26	; 38
      0001B7 26                     698 	.db #0x26	; 38
      0001B8 26                     699 	.db #0x26	; 38
      0001B9 26                     700 	.db #0x26	; 38
      0001BA 26                     701 	.db #0x26	; 38
      0001BB 26                     702 	.db #0x26	; 38
      0001BC 26                     703 	.db #0x26	; 38
      0001BD 26                     704 	.db #0x26	; 38
      0001BE 26                     705 	.db #0x26	; 38
      0001BF 26                     706 	.db #0x26	; 38
      0001C0 26                     707 	.db #0x26	; 38
      0001C1 26                     708 	.db #0x26	; 38
      0001C2 26                     709 	.db #0x26	; 38
      0001C3 26                     710 	.db #0x26	; 38
      0001C4 2B                     711 	.db #0x2b	; 43
      0001C5 26                     712 	.db #0x26	; 38
      0001C6 26                     713 	.db #0x26	; 38
      0001C7 26                     714 	.db #0x26	; 38
      0001C8 26                     715 	.db #0x26	; 38
      0001C9 26                     716 	.db #0x26	; 38
      0001CA 26                     717 	.db #0x26	; 38
      0001CB 26                     718 	.db #0x26	; 38
      0001CC 26                     719 	.db #0x26	; 38
      0001CD 26                     720 	.db #0x26	; 38
      0001CE 26                     721 	.db #0x26	; 38
      0001CF 26                     722 	.db #0x26	; 38
      0001D0 26                     723 	.db #0x26	; 38
      0001D1 26                     724 	.db #0x26	; 38
      0001D2 26                     725 	.db #0x26	; 38
      0001D3 26                     726 	.db #0x26	; 38
      0001D4 26                     727 	.db #0x26	; 38
      0001D5 26                     728 	.db #0x26	; 38
      0001D6 26                     729 	.db #0x26	; 38
      0001D7 26                     730 	.db #0x26	; 38
      0001D8 26                     731 	.db #0x26	; 38
      0001D9 26                     732 	.db #0x26	; 38
      0001DA 27                     733 	.db #0x27	; 39
      0001DB 28                     734 	.db #0x28	; 40
      0001DC 26                     735 	.db #0x26	; 38
      0001DD 26                     736 	.db #0x26	; 38
      0001DE 26                     737 	.db #0x26	; 38
      0001DF 26                     738 	.db #0x26	; 38
      0001E0 26                     739 	.db #0x26	; 38
      0001E1 26                     740 	.db #0x26	; 38
      0001E2 26                     741 	.db #0x26	; 38
      0001E3 26                     742 	.db #0x26	; 38
      0001E4 26                     743 	.db #0x26	; 38
      0001E5 26                     744 	.db #0x26	; 38
      0001E6 26                     745 	.db #0x26	; 38
      0001E7 26                     746 	.db #0x26	; 38
      0001E8 26                     747 	.db #0x26	; 38
      0001E9 26                     748 	.db #0x26	; 38
      0001EA 26                     749 	.db #0x26	; 38
      0001EB 26                     750 	.db #0x26	; 38
      0001EC 26                     751 	.db #0x26	; 38
      0001ED 26                     752 	.db #0x26	; 38
      0001EE 26                     753 	.db #0x26	; 38
      0001EF 26                     754 	.db #0x26	; 38
      0001F0 26                     755 	.db #0x26	; 38
      0001F1 26                     756 	.db #0x26	; 38
      0001F2 26                     757 	.db #0x26	; 38
      0001F3 26                     758 	.db #0x26	; 38
      0001F4 26                     759 	.db #0x26	; 38
      0001F5 26                     760 	.db #0x26	; 38
      0001F6 26                     761 	.db #0x26	; 38
      0001F7 26                     762 	.db #0x26	; 38
      0001F8 26                     763 	.db #0x26	; 38
      0001F9 26                     764 	.db #0x26	; 38
      0001FA 2A                     765 	.db #0x2a	; 42
      0001FB 29                     766 	.db #0x29	; 41
      0001FC 26                     767 	.db #0x26	; 38
      0001FD 26                     768 	.db #0x26	; 38
      0001FE 26                     769 	.db #0x26	; 38
      0001FF 26                     770 	.db #0x26	; 38
      000200 26                     771 	.db #0x26	; 38
      000201 26                     772 	.db #0x26	; 38
      000202 26                     773 	.db #0x26	; 38
      000203 26                     774 	.db #0x26	; 38
      000204 26                     775 	.db #0x26	; 38
      000205 26                     776 	.db #0x26	; 38
      000206 26                     777 	.db #0x26	; 38
      000207 26                     778 	.db #0x26	; 38
      000208 26                     779 	.db #0x26	; 38
      000209 26                     780 	.db #0x26	; 38
      00020A 26                     781 	.db #0x26	; 38
      00020B 26                     782 	.db #0x26	; 38
      00020C 26                     783 	.db #0x26	; 38
      00020D 26                     784 	.db #0x26	; 38
      00020E 27                     785 	.db #0x27	; 39
      00020F 28                     786 	.db #0x28	; 40
      000210 26                     787 	.db #0x26	; 38
      000211 26                     788 	.db #0x26	; 38
      000212 26                     789 	.db #0x26	; 38
      000213 26                     790 	.db #0x26	; 38
      000214 26                     791 	.db #0x26	; 38
      000215 26                     792 	.db #0x26	; 38
      000216 26                     793 	.db #0x26	; 38
      000217 26                     794 	.db #0x26	; 38
      000218 26                     795 	.db #0x26	; 38
      000219 26                     796 	.db #0x26	; 38
      00021A 26                     797 	.db #0x26	; 38
      00021B 26                     798 	.db #0x26	; 38
      00021C 26                     799 	.db #0x26	; 38
      00021D 26                     800 	.db #0x26	; 38
      00021E 26                     801 	.db #0x26	; 38
      00021F 2C                     802 	.db #0x2c	; 44
      000220 26                     803 	.db #0x26	; 38
      000221 26                     804 	.db #0x26	; 38
      000222 26                     805 	.db #0x26	; 38
      000223 26                     806 	.db #0x26	; 38
      000224 26                     807 	.db #0x26	; 38
      000225 26                     808 	.db #0x26	; 38
      000226 26                     809 	.db #0x26	; 38
      000227 26                     810 	.db #0x26	; 38
      000228 26                     811 	.db #0x26	; 38
      000229 26                     812 	.db #0x26	; 38
      00022A 26                     813 	.db #0x26	; 38
      00022B 26                     814 	.db #0x26	; 38
      00022C 26                     815 	.db #0x26	; 38
      00022D 26                     816 	.db #0x26	; 38
      00022E 2A                     817 	.db #0x2a	; 42
      00022F 29                     818 	.db #0x29	; 41
      000230 26                     819 	.db #0x26	; 38
      000231 26                     820 	.db #0x26	; 38
      000232 26                     821 	.db #0x26	; 38
      000233 26                     822 	.db #0x26	; 38
      000234 26                     823 	.db #0x26	; 38
      000235 26                     824 	.db #0x26	; 38
      000236 26                     825 	.db #0x26	; 38
      000237 26                     826 	.db #0x26	; 38
      000238 26                     827 	.db #0x26	; 38
      000239 26                     828 	.db #0x26	; 38
      00023A 26                     829 	.db #0x26	; 38
      00023B 26                     830 	.db #0x26	; 38
      00023C 26                     831 	.db #0x26	; 38
      00023D 25                     832 	.db #0x25	; 37
      00023E 26                     833 	.db #0x26	; 38
      00023F 26                     834 	.db #0x26	; 38
      000240 26                     835 	.db #0x26	; 38
      000241 26                     836 	.db #0x26	; 38
      000242 26                     837 	.db #0x26	; 38
      000243 26                     838 	.db #0x26	; 38
      000244 2C                     839 	.db #0x2c	; 44
      000245 26                     840 	.db #0x26	; 38
      000246 26                     841 	.db #0x26	; 38
      000247 26                     842 	.db #0x26	; 38
      000248 26                     843 	.db #0x26	; 38
      000249 26                     844 	.db #0x26	; 38
      00024A 26                     845 	.db #0x26	; 38
      00024B 26                     846 	.db #0x26	; 38
      00024C 26                     847 	.db #0x26	; 38
      00024D 26                     848 	.db #0x26	; 38
      00024E 26                     849 	.db #0x26	; 38
      00024F 26                     850 	.db #0x26	; 38
      000250 26                     851 	.db #0x26	; 38
      000251 26                     852 	.db #0x26	; 38
      000252 26                     853 	.db #0x26	; 38
      000253 26                     854 	.db #0x26	; 38
      000254 26                     855 	.db #0x26	; 38
      000255 26                     856 	.db #0x26	; 38
      000256 26                     857 	.db #0x26	; 38
      000257 26                     858 	.db #0x26	; 38
      000258 26                     859 	.db #0x26	; 38
      000259 26                     860 	.db #0x26	; 38
      00025A 26                     861 	.db #0x26	; 38
      00025B 26                     862 	.db #0x26	; 38
      00025C 26                     863 	.db #0x26	; 38
      00025D 26                     864 	.db #0x26	; 38
      00025E 26                     865 	.db #0x26	; 38
      00025F 26                     866 	.db #0x26	; 38
      000260 26                     867 	.db #0x26	; 38
      000261 26                     868 	.db #0x26	; 38
      000262 26                     869 	.db #0x26	; 38
      000263 26                     870 	.db #0x26	; 38
      000264 26                     871 	.db #0x26	; 38
      000265 26                     872 	.db #0x26	; 38
      000266 26                     873 	.db #0x26	; 38
      000267 26                     874 	.db #0x26	; 38
      000268 26                     875 	.db #0x26	; 38
      000269 26                     876 	.db #0x26	; 38
      00026A 2C                     877 	.db #0x2c	; 44
      00026B 26                     878 	.db #0x26	; 38
      00026C 26                     879 	.db #0x26	; 38
      00026D 26                     880 	.db #0x26	; 38
      00026E 26                     881 	.db #0x26	; 38
      00026F 26                     882 	.db #0x26	; 38
      000270 26                     883 	.db #0x26	; 38
      000271 26                     884 	.db #0x26	; 38
      000272 26                     885 	.db #0x26	; 38
      000273 26                     886 	.db #0x26	; 38
      000274 26                     887 	.db #0x26	; 38
      000275 26                     888 	.db #0x26	; 38
      000276 26                     889 	.db #0x26	; 38
      000277 26                     890 	.db #0x26	; 38
      000278 26                     891 	.db #0x26	; 38
      000279 2C                     892 	.db #0x2c	; 44
      00027A 26                     893 	.db #0x26	; 38
      00027B 26                     894 	.db #0x26	; 38
      00027C 26                     895 	.db #0x26	; 38
      00027D 26                     896 	.db #0x26	; 38
      00027E 26                     897 	.db #0x26	; 38
      00027F 26                     898 	.db #0x26	; 38
      000280 26                     899 	.db #0x26	; 38
      000281 26                     900 	.db #0x26	; 38
      000282 26                     901 	.db #0x26	; 38
      000283 26                     902 	.db #0x26	; 38
      000284 26                     903 	.db #0x26	; 38
      000285 26                     904 	.db #0x26	; 38
      000286 26                     905 	.db #0x26	; 38
      000287 26                     906 	.db #0x26	; 38
      000288 26                     907 	.db #0x26	; 38
      000289 26                     908 	.db #0x26	; 38
      00028A 26                     909 	.db #0x26	; 38
      00028B 26                     910 	.db #0x26	; 38
      00028C 26                     911 	.db #0x26	; 38
      00028D 26                     912 	.db #0x26	; 38
      00028E 26                     913 	.db #0x26	; 38
      00028F 26                     914 	.db #0x26	; 38
      000290 26                     915 	.db #0x26	; 38
      000291 26                     916 	.db #0x26	; 38
      000292 26                     917 	.db #0x26	; 38
      000293 26                     918 	.db #0x26	; 38
      000294 26                     919 	.db #0x26	; 38
      000295 2B                     920 	.db #0x2b	; 43
      000296 26                     921 	.db #0x26	; 38
      000297 26                     922 	.db #0x26	; 38
      000298 26                     923 	.db #0x26	; 38
      000299 26                     924 	.db #0x26	; 38
      00029A 26                     925 	.db #0x26	; 38
      00029B 26                     926 	.db #0x26	; 38
      00029C 26                     927 	.db #0x26	; 38
      00029D 26                     928 	.db #0x26	; 38
      00029E 26                     929 	.db #0x26	; 38
      00029F 26                     930 	.db #0x26	; 38
      0002A0 26                     931 	.db #0x26	; 38
      0002A1 26                     932 	.db #0x26	; 38
      0002A2 26                     933 	.db #0x26	; 38
      0002A3 26                     934 	.db #0x26	; 38
      0002A4 26                     935 	.db #0x26	; 38
      0002A5 26                     936 	.db #0x26	; 38
      0002A6 26                     937 	.db #0x26	; 38
      0002A7 28                     938 	.db #0x28	; 40
      0002A8 26                     939 	.db #0x26	; 38
      0002A9 26                     940 	.db #0x26	; 38
      0002AA 26                     941 	.db #0x26	; 38
      0002AB 26                     942 	.db #0x26	; 38
      0002AC 26                     943 	.db #0x26	; 38
      0002AD 26                     944 	.db #0x26	; 38
      0002AE 26                     945 	.db #0x26	; 38
      0002AF 26                     946 	.db #0x26	; 38
      0002B0 26                     947 	.db #0x26	; 38
      0002B1 26                     948 	.db #0x26	; 38
      0002B2 26                     949 	.db #0x26	; 38
      0002B3 26                     950 	.db #0x26	; 38
      0002B4 26                     951 	.db #0x26	; 38
      0002B5 26                     952 	.db #0x26	; 38
      0002B6 26                     953 	.db #0x26	; 38
      0002B7 26                     954 	.db #0x26	; 38
      0002B8 26                     955 	.db #0x26	; 38
      0002B9 26                     956 	.db #0x26	; 38
      0002BA 26                     957 	.db #0x26	; 38
      0002BB 26                     958 	.db #0x26	; 38
      0002BC 26                     959 	.db #0x26	; 38
      0002BD 26                     960 	.db #0x26	; 38
      0002BE 26                     961 	.db #0x26	; 38
      0002BF 26                     962 	.db #0x26	; 38
      0002C0 2B                     963 	.db #0x2b	; 43
      0002C1 26                     964 	.db #0x26	; 38
      0002C2 26                     965 	.db #0x26	; 38
      0002C3 26                     966 	.db #0x26	; 38
      0002C4 26                     967 	.db #0x26	; 38
      0002C5 26                     968 	.db #0x26	; 38
      0002C6 27                     969 	.db #0x27	; 39
      0002C7 29                     970 	.db #0x29	; 41
      0002C8 26                     971 	.db #0x26	; 38
      0002C9 26                     972 	.db #0x26	; 38
      0002CA 26                     973 	.db #0x26	; 38
      0002CB 26                     974 	.db #0x26	; 38
      0002CC 26                     975 	.db #0x26	; 38
      0002CD 26                     976 	.db #0x26	; 38
      0002CE 2B                     977 	.db #0x2b	; 43
      0002CF 26                     978 	.db #0x26	; 38
      0002D0 26                     979 	.db #0x26	; 38
      0002D1 26                     980 	.db #0x26	; 38
      0002D2 26                     981 	.db #0x26	; 38
      0002D3 26                     982 	.db #0x26	; 38
      0002D4 26                     983 	.db #0x26	; 38
      0002D5 26                     984 	.db #0x26	; 38
      0002D6 26                     985 	.db #0x26	; 38
      0002D7 26                     986 	.db #0x26	; 38
      0002D8 26                     987 	.db #0x26	; 38
      0002D9 26                     988 	.db #0x26	; 38
      0002DA 26                     989 	.db #0x26	; 38
      0002DB 26                     990 	.db #0x26	; 38
      0002DC 26                     991 	.db #0x26	; 38
      0002DD 26                     992 	.db #0x26	; 38
      0002DE 26                     993 	.db #0x26	; 38
      0002DF 26                     994 	.db #0x26	; 38
      0002E0 26                     995 	.db #0x26	; 38
      0002E1 26                     996 	.db #0x26	; 38
      0002E2 26                     997 	.db #0x26	; 38
      0002E3 26                     998 	.db #0x26	; 38
      0002E4 26                     999 	.db #0x26	; 38
      0002E5 26                    1000 	.db #0x26	; 38
      0002E6 2A                    1001 	.db #0x2a	; 42
      0002E7 26                    1002 	.db #0x26	; 38
      0002E8 26                    1003 	.db #0x26	; 38
      0002E9 26                    1004 	.db #0x26	; 38
      0002EA 26                    1005 	.db #0x26	; 38
      0002EB 26                    1006 	.db #0x26	; 38
      0002EC 26                    1007 	.db #0x26	; 38
      0002ED 26                    1008 	.db #0x26	; 38
      0002EE 26                    1009 	.db #0x26	; 38
      0002EF 26                    1010 	.db #0x26	; 38
      0002F0 26                    1011 	.db #0x26	; 38
      0002F1 26                    1012 	.db #0x26	; 38
      0002F2 2C                    1013 	.db #0x2c	; 44
      0002F3 26                    1014 	.db #0x26	; 38
      0002F4 26                    1015 	.db #0x26	; 38
      0002F5 26                    1016 	.db #0x26	; 38
      0002F6 26                    1017 	.db #0x26	; 38
      0002F7 26                    1018 	.db #0x26	; 38
      0002F8 26                    1019 	.db #0x26	; 38
      0002F9 26                    1020 	.db #0x26	; 38
      0002FA 26                    1021 	.db #0x26	; 38
      0002FB 26                    1022 	.db #0x26	; 38
      0002FC 26                    1023 	.db #0x26	; 38
      0002FD 26                    1024 	.db #0x26	; 38
      0002FE 26                    1025 	.db #0x26	; 38
      0002FF 26                    1026 	.db #0x26	; 38
      000300 26                    1027 	.db #0x26	; 38
      000301 26                    1028 	.db #0x26	; 38
      000302 26                    1029 	.db #0x26	; 38
      000303 26                    1030 	.db #0x26	; 38
      000304 26                    1031 	.db #0x26	; 38
      000305 26                    1032 	.db #0x26	; 38
      000306 26                    1033 	.db #0x26	; 38
      000307 26                    1034 	.db #0x26	; 38
      000308 26                    1035 	.db #0x26	; 38
      000309 26                    1036 	.db #0x26	; 38
      00030A 26                    1037 	.db #0x26	; 38
      00030B 26                    1038 	.db #0x26	; 38
      00030C 26                    1039 	.db #0x26	; 38
      00030D 26                    1040 	.db #0x26	; 38
      00030E 26                    1041 	.db #0x26	; 38
      00030F 26                    1042 	.db #0x26	; 38
      000310 26                    1043 	.db #0x26	; 38
      000311 26                    1044 	.db #0x26	; 38
      000312 26                    1045 	.db #0x26	; 38
      000313 26                    1046 	.db #0x26	; 38
      000314 26                    1047 	.db #0x26	; 38
      000315 26                    1048 	.db #0x26	; 38
      000316 26                    1049 	.db #0x26	; 38
      000317 2B                    1050 	.db #0x2b	; 43
      000318 26                    1051 	.db #0x26	; 38
      000319 26                    1052 	.db #0x26	; 38
      00031A 26                    1053 	.db #0x26	; 38
      00031B 26                    1054 	.db #0x26	; 38
      00031C 26                    1055 	.db #0x26	; 38
      00031D 26                    1056 	.db #0x26	; 38
      00031E 26                    1057 	.db #0x26	; 38
      00031F 26                    1058 	.db #0x26	; 38
      000320 26                    1059 	.db #0x26	; 38
      000321 26                    1060 	.db #0x26	; 38
      000322 26                    1061 	.db #0x26	; 38
      000323 26                    1062 	.db #0x26	; 38
      000324 26                    1063 	.db #0x26	; 38
      000325 26                    1064 	.db #0x26	; 38
      000326 26                    1065 	.db #0x26	; 38
      000327 26                    1066 	.db #0x26	; 38
      000328 26                    1067 	.db #0x26	; 38
      000329 26                    1068 	.db #0x26	; 38
      00032A 26                    1069 	.db #0x26	; 38
      00032B 26                    1070 	.db #0x26	; 38
      00032C 26                    1071 	.db #0x26	; 38
      00032D 26                    1072 	.db #0x26	; 38
      00032E 26                    1073 	.db #0x26	; 38
      00032F 26                    1074 	.db #0x26	; 38
      000330 26                    1075 	.db #0x26	; 38
      000331 26                    1076 	.db #0x26	; 38
      000332 26                    1077 	.db #0x26	; 38
      000333 26                    1078 	.db #0x26	; 38
      000334 26                    1079 	.db #0x26	; 38
      000335 26                    1080 	.db #0x26	; 38
      000336 26                    1081 	.db #0x26	; 38
      000337 26                    1082 	.db #0x26	; 38
      000338 26                    1083 	.db #0x26	; 38
      000339 26                    1084 	.db #0x26	; 38
      00033A 26                    1085 	.db #0x26	; 38
      00033B 26                    1086 	.db #0x26	; 38
      00033C 26                    1087 	.db #0x26	; 38
      00033D 26                    1088 	.db #0x26	; 38
      00033E 2B                    1089 	.db #0x2b	; 43
      00033F 26                    1090 	.db #0x26	; 38
      000340 26                    1091 	.db #0x26	; 38
      000341 26                    1092 	.db #0x26	; 38
      000342 26                    1093 	.db #0x26	; 38
      000343 26                    1094 	.db #0x26	; 38
      000344 26                    1095 	.db #0x26	; 38
      000345 26                    1096 	.db #0x26	; 38
      000346 26                    1097 	.db #0x26	; 38
      000347 26                    1098 	.db #0x26	; 38
      000348 26                    1099 	.db #0x26	; 38
      000349 26                    1100 	.db #0x26	; 38
      00034A 2B                    1101 	.db #0x2b	; 43
      00034B 26                    1102 	.db #0x26	; 38
      00034C 26                    1103 	.db #0x26	; 38
      00034D 26                    1104 	.db #0x26	; 38
      00034E 26                    1105 	.db #0x26	; 38
      00034F 26                    1106 	.db #0x26	; 38
      000350 26                    1107 	.db #0x26	; 38
      000351 26                    1108 	.db #0x26	; 38
      000352 26                    1109 	.db #0x26	; 38
      000353 26                    1110 	.db #0x26	; 38
      000354 26                    1111 	.db #0x26	; 38
      000355 26                    1112 	.db #0x26	; 38
      000356 26                    1113 	.db #0x26	; 38
      000357 26                    1114 	.db #0x26	; 38
      000358 26                    1115 	.db #0x26	; 38
      000359 26                    1116 	.db #0x26	; 38
      00035A 26                    1117 	.db #0x26	; 38
      00035B 26                    1118 	.db #0x26	; 38
      00035C 26                    1119 	.db #0x26	; 38
      00035D 26                    1120 	.db #0x26	; 38
      00035E 26                    1121 	.db #0x26	; 38
      00035F 26                    1122 	.db #0x26	; 38
      000360 26                    1123 	.db #0x26	; 38
      000361 26                    1124 	.db #0x26	; 38
      000362 26                    1125 	.db #0x26	; 38
      000363 26                    1126 	.db #0x26	; 38
      000364 26                    1127 	.db #0x26	; 38
      000365 26                    1128 	.db #0x26	; 38
      000366 2C                    1129 	.db #0x2c	; 44
      000367 26                    1130 	.db #0x26	; 38
      000368 26                    1131 	.db #0x26	; 38
      000369 26                    1132 	.db #0x26	; 38
      00036A 26                    1133 	.db #0x26	; 38
      00036B 26                    1134 	.db #0x26	; 38
      00036C 26                    1135 	.db #0x26	; 38
      00036D 26                    1136 	.db #0x26	; 38
      00036E 26                    1137 	.db #0x26	; 38
      00036F 26                    1138 	.db #0x26	; 38
      000370 2B                    1139 	.db #0x2b	; 43
      000371 26                    1140 	.db #0x26	; 38
      000372 26                    1141 	.db #0x26	; 38
      000373 26                    1142 	.db #0x26	; 38
      000374 26                    1143 	.db #0x26	; 38
      000375 26                    1144 	.db #0x26	; 38
      000376 26                    1145 	.db #0x26	; 38
      000377 26                    1146 	.db #0x26	; 38
      000378 26                    1147 	.db #0x26	; 38
      000379 26                    1148 	.db #0x26	; 38
      00037A 26                    1149 	.db #0x26	; 38
      00037B 26                    1150 	.db #0x26	; 38
      00037C 26                    1151 	.db #0x26	; 38
      00037D 26                    1152 	.db #0x26	; 38
      00037E 26                    1153 	.db #0x26	; 38
      00037F 26                    1154 	.db #0x26	; 38
      000380 26                    1155 	.db #0x26	; 38
      000381 26                    1156 	.db #0x26	; 38
      000382 26                    1157 	.db #0x26	; 38
      000383 26                    1158 	.db #0x26	; 38
      000384 26                    1159 	.db #0x26	; 38
      000385 26                    1160 	.db #0x26	; 38
      000386 26                    1161 	.db #0x26	; 38
      000387 26                    1162 	.db #0x26	; 38
      000388 26                    1163 	.db #0x26	; 38
      000389 26                    1164 	.db #0x26	; 38
      00038A 26                    1165 	.db #0x26	; 38
      00038B 26                    1166 	.db #0x26	; 38
      00038C 26                    1167 	.db #0x26	; 38
      00038D 26                    1168 	.db #0x26	; 38
      00038E 26                    1169 	.db #0x26	; 38
      00038F 26                    1170 	.db #0x26	; 38
      000390 26                    1171 	.db #0x26	; 38
      000391 26                    1172 	.db #0x26	; 38
      000392 26                    1173 	.db #0x26	; 38
      000393 26                    1174 	.db #0x26	; 38
      000394 26                    1175 	.db #0x26	; 38
      000395 26                    1176 	.db #0x26	; 38
      000396 26                    1177 	.db #0x26	; 38
      000397 26                    1178 	.db #0x26	; 38
      000398 27                    1179 	.db #0x27	; 39
      000399 28                    1180 	.db #0x28	; 40
      00039A 26                    1181 	.db #0x26	; 38
      00039B 26                    1182 	.db #0x26	; 38
      00039C 26                    1183 	.db #0x26	; 38
      00039D 26                    1184 	.db #0x26	; 38
      00039E 26                    1185 	.db #0x26	; 38
      00039F 26                    1186 	.db #0x26	; 38
      0003A0 26                    1187 	.db #0x26	; 38
      0003A1 26                    1188 	.db #0x26	; 38
      0003A2 26                    1189 	.db #0x26	; 38
      0003A3 26                    1190 	.db #0x26	; 38
      0003A4 26                    1191 	.db #0x26	; 38
      0003A5 26                    1192 	.db #0x26	; 38
      0003A6 26                    1193 	.db #0x26	; 38
      0003A7 26                    1194 	.db #0x26	; 38
      0003A8 26                    1195 	.db #0x26	; 38
      0003A9 26                    1196 	.db #0x26	; 38
      0003AA 26                    1197 	.db #0x26	; 38
      0003AB 26                    1198 	.db #0x26	; 38
      0003AC 26                    1199 	.db #0x26	; 38
      0003AD 2B                    1200 	.db #0x2b	; 43
      0003AE 26                    1201 	.db #0x26	; 38
      0003AF 26                    1202 	.db #0x26	; 38
      0003B0 26                    1203 	.db #0x26	; 38
      0003B1 26                    1204 	.db #0x26	; 38
      0003B2 26                    1205 	.db #0x26	; 38
      0003B3 26                    1206 	.db #0x26	; 38
      0003B4 26                    1207 	.db #0x26	; 38
      0003B5 25                    1208 	.db #0x25	; 37
      0003B6 26                    1209 	.db #0x26	; 38
      0003B7 26                    1210 	.db #0x26	; 38
      0003B8 2A                    1211 	.db #0x2a	; 42
      0003B9 29                    1212 	.db #0x29	; 41
      0003BA 26                    1213 	.db #0x26	; 38
      0003BB 26                    1214 	.db #0x26	; 38
      0003BC 26                    1215 	.db #0x26	; 38
      0003BD 26                    1216 	.db #0x26	; 38
      0003BE 26                    1217 	.db #0x26	; 38
      0003BF 26                    1218 	.db #0x26	; 38
      0003C0 26                    1219 	.db #0x26	; 38
      0003C1 26                    1220 	.db #0x26	; 38
      0003C2 2B                    1221 	.db #0x2b	; 43
      0003C3 26                    1222 	.db #0x26	; 38
      0003C4 26                    1223 	.db #0x26	; 38
      0003C5 26                    1224 	.db #0x26	; 38
      0003C6 26                    1225 	.db #0x26	; 38
      0003C7 26                    1226 	.db #0x26	; 38
      0003C8 26                    1227 	.db #0x26	; 38
      0003C9 2C                    1228 	.db #0x2c	; 44
      0003CA 26                    1229 	.db #0x26	; 38
      0003CB 26                    1230 	.db #0x26	; 38
      0003CC 26                    1231 	.db #0x26	; 38
      0003CD 26                    1232 	.db #0x26	; 38
      0003CE 26                    1233 	.db #0x26	; 38
      0003CF 26                    1234 	.db #0x26	; 38
      0003D0 26                    1235 	.db #0x26	; 38
      0003D1 26                    1236 	.db #0x26	; 38
      0003D2 26                    1237 	.db #0x26	; 38
      0003D3 26                    1238 	.db #0x26	; 38
      0003D4 26                    1239 	.db #0x26	; 38
      0003D5 2C                    1240 	.db #0x2c	; 44
      0003D6 26                    1241 	.db #0x26	; 38
      0003D7 26                    1242 	.db #0x26	; 38
      0003D8 26                    1243 	.db #0x26	; 38
      0003D9 26                    1244 	.db #0x26	; 38
      0003DA 26                    1245 	.db #0x26	; 38
      0003DB 26                    1246 	.db #0x26	; 38
      0003DC 26                    1247 	.db #0x26	; 38
      0003DD 26                    1248 	.db #0x26	; 38
      0003DE 26                    1249 	.db #0x26	; 38
      0003DF 26                    1250 	.db #0x26	; 38
      0003E0 26                    1251 	.db #0x26	; 38
      0003E1 26                    1252 	.db #0x26	; 38
      0003E2 26                    1253 	.db #0x26	; 38
      0003E3 26                    1254 	.db #0x26	; 38
      0003E4 26                    1255 	.db #0x26	; 38
      0003E5 26                    1256 	.db #0x26	; 38
      0003E6 26                    1257 	.db #0x26	; 38
      0003E7 26                    1258 	.db #0x26	; 38
      0003E8 26                    1259 	.db #0x26	; 38
      0003E9 26                    1260 	.db #0x26	; 38
      0003EA 26                    1261 	.db #0x26	; 38
      0003EB 26                    1262 	.db #0x26	; 38
      0003EC 26                    1263 	.db #0x26	; 38
      0003ED 26                    1264 	.db #0x26	; 38
      0003EE 26                    1265 	.db #0x26	; 38
      0003EF 26                    1266 	.db #0x26	; 38
      0003F0 26                    1267 	.db #0x26	; 38
      0003F1 26                    1268 	.db #0x26	; 38
      0003F2 26                    1269 	.db #0x26	; 38
      0003F3 26                    1270 	.db #0x26	; 38
      0003F4 26                    1271 	.db #0x26	; 38
      0003F5 26                    1272 	.db #0x26	; 38
      0003F6 26                    1273 	.db #0x26	; 38
      0003F7 26                    1274 	.db #0x26	; 38
      0003F8 26                    1275 	.db #0x26	; 38
      0003F9 26                    1276 	.db #0x26	; 38
      0003FA 26                    1277 	.db #0x26	; 38
      0003FB 26                    1278 	.db #0x26	; 38
      0003FC 26                    1279 	.db #0x26	; 38
      0003FD 26                    1280 	.db #0x26	; 38
      0003FE 26                    1281 	.db #0x26	; 38
      0003FF 26                    1282 	.db #0x26	; 38
      000400 26                    1283 	.db #0x26	; 38
      000401 26                    1284 	.db #0x26	; 38
      000402 26                    1285 	.db #0x26	; 38
      000403 26                    1286 	.db #0x26	; 38
      000404 26                    1287 	.db #0x26	; 38
      000405 26                    1288 	.db #0x26	; 38
      000406 26                    1289 	.db #0x26	; 38
      000407 26                    1290 	.db #0x26	; 38
      000408 26                    1291 	.db #0x26	; 38
      000409 26                    1292 	.db #0x26	; 38
      00040A 26                    1293 	.db #0x26	; 38
      00040B 26                    1294 	.db #0x26	; 38
      00040C 26                    1295 	.db #0x26	; 38
      00040D 2B                    1296 	.db #0x2b	; 43
      00040E 26                    1297 	.db #0x26	; 38
      00040F 26                    1298 	.db #0x26	; 38
      000410 26                    1299 	.db #0x26	; 38
      000411 26                    1300 	.db #0x26	; 38
      000412 26                    1301 	.db #0x26	; 38
      000413 26                    1302 	.db #0x26	; 38
      000414 26                    1303 	.db #0x26	; 38
      000415 26                    1304 	.db #0x26	; 38
      000416 26                    1305 	.db #0x26	; 38
      000417 26                    1306 	.db #0x26	; 38
      000418 26                    1307 	.db #0x26	; 38
      000419 26                    1308 	.db #0x26	; 38
      00041A 26                    1309 	.db #0x26	; 38
      00041B 26                    1310 	.db #0x26	; 38
      00041C 26                    1311 	.db #0x26	; 38
      00041D 26                    1312 	.db #0x26	; 38
      00041E 26                    1313 	.db #0x26	; 38
      00041F 26                    1314 	.db #0x26	; 38
      000420 2B                    1315 	.db #0x2b	; 43
      000421 26                    1316 	.db #0x26	; 38
      000422 26                    1317 	.db #0x26	; 38
      000423 26                    1318 	.db #0x26	; 38
      000424 26                    1319 	.db #0x26	; 38
      000425 26                    1320 	.db #0x26	; 38
      000426 26                    1321 	.db #0x26	; 38
      000427 26                    1322 	.db #0x26	; 38
      000428 26                    1323 	.db #0x26	; 38
      000429 26                    1324 	.db #0x26	; 38
      00042A 26                    1325 	.db #0x26	; 38
      00042B 26                    1326 	.db #0x26	; 38
      00042C 26                    1327 	.db #0x26	; 38
      00042D 26                    1328 	.db #0x26	; 38
      00042E 26                    1329 	.db #0x26	; 38
      00042F 26                    1330 	.db #0x26	; 38
      000430 26                    1331 	.db #0x26	; 38
      000431 26                    1332 	.db #0x26	; 38
      000432 26                    1333 	.db #0x26	; 38
      000433 26                    1334 	.db #0x26	; 38
      000434 26                    1335 	.db #0x26	; 38
      000435 26                    1336 	.db #0x26	; 38
      000436 26                    1337 	.db #0x26	; 38
      000437 2C                    1338 	.db #0x2c	; 44
      000438 26                    1339 	.db #0x26	; 38
      000439 26                    1340 	.db #0x26	; 38
      00043A 26                    1341 	.db #0x26	; 38
      00043B 26                    1342 	.db #0x26	; 38
      00043C 26                    1343 	.db #0x26	; 38
      00043D 26                    1344 	.db #0x26	; 38
      00043E 26                    1345 	.db #0x26	; 38
      00043F 26                    1346 	.db #0x26	; 38
      000440 26                    1347 	.db #0x26	; 38
      000441 26                    1348 	.db #0x26	; 38
      000442 26                    1349 	.db #0x26	; 38
      000443 26                    1350 	.db #0x26	; 38
      000444 26                    1351 	.db #0x26	; 38
      000445 26                    1352 	.db #0x26	; 38
      000446 26                    1353 	.db #0x26	; 38
      000447 26                    1354 	.db #0x26	; 38
      000448 25                    1355 	.db #0x25	; 37
      000449 2C                    1356 	.db #0x2c	; 44
      00044A 26                    1357 	.db #0x26	; 38
      00044B 26                    1358 	.db #0x26	; 38
      00044C 26                    1359 	.db #0x26	; 38
      00044D 26                    1360 	.db #0x26	; 38
      00044E 26                    1361 	.db #0x26	; 38
      00044F 26                    1362 	.db #0x26	; 38
      000450 26                    1363 	.db #0x26	; 38
      000451 26                    1364 	.db #0x26	; 38
      000452 26                    1365 	.db #0x26	; 38
      000453 26                    1366 	.db #0x26	; 38
      000454 26                    1367 	.db #0x26	; 38
      000455 26                    1368 	.db #0x26	; 38
      000456 26                    1369 	.db #0x26	; 38
      000457 26                    1370 	.db #0x26	; 38
      000458 26                    1371 	.db #0x26	; 38
      000459 26                    1372 	.db #0x26	; 38
      00045A 2B                    1373 	.db #0x2b	; 43
      00045B 26                    1374 	.db #0x26	; 38
      00045C 26                    1375 	.db #0x26	; 38
      00045D 26                    1376 	.db #0x26	; 38
      00045E 26                    1377 	.db #0x26	; 38
      00045F 26                    1378 	.db #0x26	; 38
      000460 26                    1379 	.db #0x26	; 38
      000461 26                    1380 	.db #0x26	; 38
      000462 26                    1381 	.db #0x26	; 38
      000463 26                    1382 	.db #0x26	; 38
      000464 26                    1383 	.db #0x26	; 38
      000465 26                    1384 	.db #0x26	; 38
      000466 26                    1385 	.db #0x26	; 38
      000467 26                    1386 	.db #0x26	; 38
      000468 26                    1387 	.db #0x26	; 38
      000469 26                    1388 	.db #0x26	; 38
      00046A 26                    1389 	.db #0x26	; 38
      00046B 26                    1390 	.db #0x26	; 38
      00046C 26                    1391 	.db #0x26	; 38
      00046D 26                    1392 	.db #0x26	; 38
      00046E 26                    1393 	.db #0x26	; 38
      00046F 26                    1394 	.db #0x26	; 38
      000470 26                    1395 	.db #0x26	; 38
      000471 26                    1396 	.db #0x26	; 38
      000472 27                    1397 	.db #0x27	; 39
      000473 28                    1398 	.db #0x28	; 40
      000474 26                    1399 	.db #0x26	; 38
      000475 26                    1400 	.db #0x26	; 38
      000476 26                    1401 	.db #0x26	; 38
      000477 26                    1402 	.db #0x26	; 38
      000478 26                    1403 	.db #0x26	; 38
      000479 26                    1404 	.db #0x26	; 38
      00047A 26                    1405 	.db #0x26	; 38
      00047B 26                    1406 	.db #0x26	; 38
      00047C 26                    1407 	.db #0x26	; 38
      00047D 26                    1408 	.db #0x26	; 38
      00047E 26                    1409 	.db #0x26	; 38
      00047F 26                    1410 	.db #0x26	; 38
      000480 26                    1411 	.db #0x26	; 38
      000481 26                    1412 	.db #0x26	; 38
      000482 26                    1413 	.db #0x26	; 38
      000483 26                    1414 	.db #0x26	; 38
      000484 26                    1415 	.db #0x26	; 38
      000485 26                    1416 	.db #0x26	; 38
      000486 2B                    1417 	.db #0x2b	; 43
      000487                       1418 _backgroundtiles:
      000487 40                    1419 	.db #0x40	; 64
      000488 38                    1420 	.db #0x38	; 56	'8'
      000489 3A                    1421 	.db #0x3a	; 58
      00048A 44                    1422 	.db #0x44	; 68	'D'
      00048B 7C                    1423 	.db #0x7c	; 124
      00048C 9A                    1424 	.db #0x9a	; 154
      00048D 5E                    1425 	.db #0x5e	; 94
      00048E E9                    1426 	.db #0xe9	; 233
      00048F 7A                    1427 	.db #0x7a	; 122	'z'
      000490 87                    1428 	.db #0x87	; 135
      000491 76                    1429 	.db #0x76	; 118	'v'
      000492 B9                    1430 	.db #0xb9	; 185
      000493 3C                    1431 	.db #0x3c	; 60
      000494 72                    1432 	.db #0x72	; 114	'r'
      000495 00                    1433 	.db #0x00	; 0
      000496 3C                    1434 	.db #0x3c	; 60
      000497 00                    1435 	.db #0x00	; 0
      000498 00                    1436 	.db #0x00	; 0
      000499 00                    1437 	.db #0x00	; 0
      00049A 00                    1438 	.db #0x00	; 0
      00049B 00                    1439 	.db #0x00	; 0
      00049C 00                    1440 	.db #0x00	; 0
      00049D 00                    1441 	.db #0x00	; 0
      00049E 00                    1442 	.db #0x00	; 0
      00049F 00                    1443 	.db #0x00	; 0
      0004A0 00                    1444 	.db #0x00	; 0
      0004A1 00                    1445 	.db #0x00	; 0
      0004A2 00                    1446 	.db #0x00	; 0
      0004A3 00                    1447 	.db #0x00	; 0
      0004A4 00                    1448 	.db #0x00	; 0
      0004A5 00                    1449 	.db #0x00	; 0
      0004A6 00                    1450 	.db #0x00	; 0
      0004A7 00                    1451 	.db #0x00	; 0
      0004A8 0F                    1452 	.db #0x0f	; 15
      0004A9 08                    1453 	.db #0x08	; 8
      0004AA 17                    1454 	.db #0x17	; 23
      0004AB 1C                    1455 	.db #0x1c	; 28
      0004AC 23                    1456 	.db #0x23	; 35
      0004AD 3E                    1457 	.db #0x3e	; 62
      0004AE 41                    1458 	.db #0x41	; 65	'A'
      0004AF 1B                    1459 	.db #0x1b	; 27
      0004B0 64                    1460 	.db #0x64	; 100	'd'
      0004B1 31                    1461 	.db #0x31	; 49	'1'
      0004B2 4E                    1462 	.db #0x4e	; 78	'N'
      0004B3 B1                    1463 	.db #0xb1	; 177
      0004B4 CE                    1464 	.db #0xce	; 206
      0004B5 BB                    1465 	.db #0xbb	; 187
      0004B6 C4                    1466 	.db #0xc4	; 196
      0004B7 00                    1467 	.db #0x00	; 0
      0004B8 F8                    1468 	.db #0xf8	; 248
      0004B9 00                    1469 	.db #0x00	; 0
      0004BA FC                    1470 	.db #0xfc	; 252
      0004BB E0                    1471 	.db #0xe0	; 224
      0004BC 1E                    1472 	.db #0x1e	; 30
      0004BD F0                    1473 	.db #0xf0	; 240
      0004BE 0F                    1474 	.db #0x0f	; 15
      0004BF BE                    1475 	.db #0xbe	; 190
      0004C0 01                    1476 	.db #0x01	; 1
      0004C1 BC                    1477 	.db #0xbc	; 188
      0004C2 02                    1478 	.db #0x02	; 2
      0004C3 CE                    1479 	.db #0xce	; 206
      0004C4 01                    1480 	.db #0x01	; 1
      0004C5 F6                    1481 	.db #0xf6	; 246
      0004C6 61                    1482 	.db #0x61	; 97	'a'
      0004C7 F4                    1483 	.db #0xf4	; 244
      0004C8 02                    1484 	.db #0x02	; 2
      0004C9 94                    1485 	.db #0x94	; 148
      0004CA 62                    1486 	.db #0x62	; 98	'b'
      0004CB E4                    1487 	.db #0xe4	; 228
      0004CC 02                    1488 	.db #0x02	; 2
      0004CD 6C                    1489 	.db #0x6c	; 108	'l'
      0004CE 82                    1490 	.db #0x82	; 130
      0004CF 70                    1491 	.db #0x70	; 112	'p'
      0004D0 8C                    1492 	.db #0x8c	; 140
      0004D1 60                    1493 	.db #0x60	; 96
      0004D2 90                    1494 	.db #0x90	; 144
      0004D3 00                    1495 	.db #0x00	; 0
      0004D4 E0                    1496 	.db #0xe0	; 224
      0004D5 80                    1497 	.db #0x80	; 128
      0004D6 80                    1498 	.db #0x80	; 128
      0004D7 8E                    1499 	.db #0x8e	; 142
      0004D8 F7                    1500 	.db #0xf7	; 247
      0004D9 8F                    1501 	.db #0x8f	; 143
      0004DA F3                    1502 	.db #0xf3	; 243
      0004DB 86                    1503 	.db #0x86	; 134
      0004DC F9                    1504 	.db #0xf9	; 249
      0004DD 42                    1505 	.db #0x42	; 66	'B'
      0004DE 7D                    1506 	.db #0x7d	; 125
      0004DF 80                    1507 	.db #0x80	; 128
      0004E0 FF                    1508 	.db #0xff	; 255
      0004E1 44                    1509 	.db #0x44	; 68	'D'
      0004E2 7F                    1510 	.db #0x7f	; 127
      0004E3 28                    1511 	.db #0x28	; 40
      0004E4 3F                    1512 	.db #0x3f	; 63
      0004E5 07                    1513 	.db #0x07	; 7
      0004E6 07                    1514 	.db #0x07	; 7
      0004E7 00                    1515 	.db #0x00	; 0
      0004E8 00                    1516 	.db #0x00	; 0
      0004E9 08                    1517 	.db #0x08	; 8
      0004EA 00                    1518 	.db #0x00	; 0
      0004EB 08                    1519 	.db #0x08	; 8
      0004EC 00                    1520 	.db #0x00	; 0
      0004ED 1C                    1521 	.db #0x1c	; 28
      0004EE 00                    1522 	.db #0x00	; 0
      0004EF 7F                    1523 	.db #0x7f	; 127
      0004F0 00                    1524 	.db #0x00	; 0
      0004F1 1C                    1525 	.db #0x1c	; 28
      0004F2 00                    1526 	.db #0x00	; 0
      0004F3 08                    1527 	.db #0x08	; 8
      0004F4 00                    1528 	.db #0x00	; 0
      0004F5 08                    1529 	.db #0x08	; 8
      0004F6 00                    1530 	.db #0x00	; 0
      0004F7 00                    1531 	.db #0x00	; 0
      0004F8 00                    1532 	.db #0x00	; 0
      0004F9 00                    1533 	.db #0x00	; 0
      0004FA 00                    1534 	.db #0x00	; 0
      0004FB 00                    1535 	.db #0x00	; 0
      0004FC 00                    1536 	.db #0x00	; 0
      0004FD 10                    1537 	.db #0x10	; 16
      0004FE 00                    1538 	.db #0x00	; 0
      0004FF 00                    1539 	.db #0x00	; 0
      000500 00                    1540 	.db #0x00	; 0
      000501 00                    1541 	.db #0x00	; 0
      000502 00                    1542 	.db #0x00	; 0
      000503 00                    1543 	.db #0x00	; 0
      000504 00                    1544 	.db #0x00	; 0
      000505 00                    1545 	.db #0x00	; 0
      000506 00                    1546 	.db #0x00	; 0
      000507                       1547 _healthblock:
      000507 FE                    1548 	.db #0xfe	; 254
      000508 FE                    1549 	.db #0xfe	; 254
      000509 FE                    1550 	.db #0xfe	; 254
      00050A FE                    1551 	.db #0xfe	; 254
      00050B FE                    1552 	.db #0xfe	; 254
      00050C FE                    1553 	.db #0xfe	; 254
      00050D FE                    1554 	.db #0xfe	; 254
      00050E FE                    1555 	.db #0xfe	; 254
      00050F FE                    1556 	.db #0xfe	; 254
      000510 FE                    1557 	.db #0xfe	; 254
      000511 FE                    1558 	.db #0xfe	; 254
      000512 FE                    1559 	.db #0xfe	; 254
      000513 FE                    1560 	.db #0xfe	; 254
      000514 FE                    1561 	.db #0xfe	; 254
      000515 00                    1562 	.db #0x00	; 0
      000516 00                    1563 	.db #0x00	; 0
      000517                       1564 _enemyOptionCount:
      000517 05                    1565 	.db #0x05	; 5
      000518                       1566 _enemy1:
      000518 66                    1567 	.db #0x66	; 102	'f'
      000519 24                    1568 	.db #0x24	; 36
      00051A E7                    1569 	.db #0xe7	; 231
      00051B 66                    1570 	.db #0x66	; 102	'f'
      00051C F7                    1571 	.db #0xf7	; 247
      00051D E7                    1572 	.db #0xe7	; 231
      00051E 1C                    1573 	.db #0x1c	; 28
      00051F 18                    1574 	.db #0x18	; 24
      000520 38                    1575 	.db #0x38	; 56	'8'
      000521 18                    1576 	.db #0x18	; 24
      000522 EF                    1577 	.db #0xef	; 239
      000523 E7                    1578 	.db #0xe7	; 231
      000524 E7                    1579 	.db #0xe7	; 231
      000525 66                    1580 	.db #0x66	; 102	'f'
      000526 66                    1581 	.db #0x66	; 102	'f'
      000527 24                    1582 	.db #0x24	; 36
      000528 00                    1583 	.db #0x00	; 0
      000529 00                    1584 	.db #0x00	; 0
      00052A 00                    1585 	.db #0x00	; 0
      00052B 00                    1586 	.db #0x00	; 0
      00052C 00                    1587 	.db #0x00	; 0
      00052D 00                    1588 	.db #0x00	; 0
      00052E 00                    1589 	.db #0x00	; 0
      00052F 00                    1590 	.db #0x00	; 0
      000530 00                    1591 	.db #0x00	; 0
      000531 00                    1592 	.db #0x00	; 0
      000532 00                    1593 	.db #0x00	; 0
      000533 00                    1594 	.db #0x00	; 0
      000534 00                    1595 	.db #0x00	; 0
      000535 00                    1596 	.db #0x00	; 0
      000536 00                    1597 	.db #0x00	; 0
      000537 00                    1598 	.db #0x00	; 0
      000538 3C                    1599 	.db #0x3c	; 60
      000539 3C                    1600 	.db #0x3c	; 60
      00053A 5E                    1601 	.db #0x5e	; 94
      00053B 62                    1602 	.db #0x62	; 98	'b'
      00053C 8F                    1603 	.db #0x8f	; 143
      00053D F1                    1604 	.db #0xf1	; 241
      00053E C7                    1605 	.db #0xc7	; 199
      00053F F9                    1606 	.db #0xf9	; 249
      000540 C3                    1607 	.db #0xc3	; 195
      000541 FD                    1608 	.db #0xfd	; 253
      000542 E1                    1609 	.db #0xe1	; 225
      000543 FF                    1610 	.db #0xff	; 255
      000544 7A                    1611 	.db #0x7a	; 122	'z'
      000545 7E                    1612 	.db #0x7e	; 126
      000546 3C                    1613 	.db #0x3c	; 60
      000547 3C                    1614 	.db #0x3c	; 60
      000548 00                    1615 	.db #0x00	; 0
      000549 00                    1616 	.db #0x00	; 0
      00054A 00                    1617 	.db #0x00	; 0
      00054B 00                    1618 	.db #0x00	; 0
      00054C 00                    1619 	.db #0x00	; 0
      00054D 00                    1620 	.db #0x00	; 0
      00054E 00                    1621 	.db #0x00	; 0
      00054F 00                    1622 	.db #0x00	; 0
      000550 00                    1623 	.db #0x00	; 0
      000551 00                    1624 	.db #0x00	; 0
      000552 00                    1625 	.db #0x00	; 0
      000553 00                    1626 	.db #0x00	; 0
      000554 00                    1627 	.db #0x00	; 0
      000555 00                    1628 	.db #0x00	; 0
      000556 00                    1629 	.db #0x00	; 0
      000557 00                    1630 	.db #0x00	; 0
      000558 3C                    1631 	.db #0x3c	; 60
      000559 3E                    1632 	.db #0x3e	; 62
      00055A 20                    1633 	.db #0x20	; 32
      00055B 38                    1634 	.db #0x38	; 56	'8'
      00055C 44                    1635 	.db #0x44	; 68	'D'
      00055D 78                    1636 	.db #0x78	; 120	'x'
      00055E BA                    1637 	.db #0xba	; 186
      00055F C4                    1638 	.db #0xc4	; 196
      000560 BA                    1639 	.db #0xba	; 186
      000561 C4                    1640 	.db #0xc4	; 196
      000562 44                    1641 	.db #0x44	; 68	'D'
      000563 78                    1642 	.db #0x78	; 120	'x'
      000564 20                    1643 	.db #0x20	; 32
      000565 38                    1644 	.db #0x38	; 56	'8'
      000566 3C                    1645 	.db #0x3c	; 60
      000567 3E                    1646 	.db #0x3e	; 62
      000568                       1647 _largeenemies:
      000568 00                    1648 	.db #0x00	; 0
      000569 00                    1649 	.db #0x00	; 0
      00056A 00                    1650 	.db #0x00	; 0
      00056B 00                    1651 	.db #0x00	; 0
      00056C 00                    1652 	.db #0x00	; 0
      00056D 00                    1653 	.db #0x00	; 0
      00056E 00                    1654 	.db #0x00	; 0
      00056F 00                    1655 	.db #0x00	; 0
      000570 00                    1656 	.db #0x00	; 0
      000571 00                    1657 	.db #0x00	; 0
      000572 00                    1658 	.db #0x00	; 0
      000573 00                    1659 	.db #0x00	; 0
      000574 00                    1660 	.db #0x00	; 0
      000575 00                    1661 	.db #0x00	; 0
      000576 7F                    1662 	.db #0x7f	; 127
      000577 7F                    1663 	.db #0x7f	; 127
      000578 7F                    1664 	.db #0x7f	; 127
      000579 7F                    1665 	.db #0x7f	; 127
      00057A 00                    1666 	.db #0x00	; 0
      00057B 00                    1667 	.db #0x00	; 0
      00057C 00                    1668 	.db #0x00	; 0
      00057D 00                    1669 	.db #0x00	; 0
      00057E 00                    1670 	.db #0x00	; 0
      00057F 00                    1671 	.db #0x00	; 0
      000580 00                    1672 	.db #0x00	; 0
      000581 00                    1673 	.db #0x00	; 0
      000582 00                    1674 	.db #0x00	; 0
      000583 00                    1675 	.db #0x00	; 0
      000584 00                    1676 	.db #0x00	; 0
      000585 00                    1677 	.db #0x00	; 0
      000586 00                    1678 	.db #0x00	; 0
      000587 00                    1679 	.db #0x00	; 0
      000588 00                    1680 	.db #0x00	; 0
      000589 00                    1681 	.db #0x00	; 0
      00058A 40                    1682 	.db #0x40	; 64
      00058B 40                    1683 	.db #0x40	; 64
      00058C 60                    1684 	.db #0x60	; 96
      00058D 60                    1685 	.db #0x60	; 96
      00058E 70                    1686 	.db #0x70	; 112	'p'
      00058F 70                    1687 	.db #0x70	; 112	'p'
      000590 78                    1688 	.db #0x78	; 120	'x'
      000591 78                    1689 	.db #0x78	; 120	'x'
      000592 7C                    1690 	.db #0x7c	; 124
      000593 7C                    1691 	.db #0x7c	; 124
      000594 7E                    1692 	.db #0x7e	; 126
      000595 7E                    1693 	.db #0x7e	; 126
      000596 FF                    1694 	.db #0xff	; 255
      000597 FF                    1695 	.db #0xff	; 255
      000598 FF                    1696 	.db #0xff	; 255
      000599 FF                    1697 	.db #0xff	; 255
      00059A 7E                    1698 	.db #0x7e	; 126
      00059B 7E                    1699 	.db #0x7e	; 126
      00059C 7C                    1700 	.db #0x7c	; 124
      00059D 7C                    1701 	.db #0x7c	; 124
      00059E 78                    1702 	.db #0x78	; 120	'x'
      00059F 78                    1703 	.db #0x78	; 120	'x'
      0005A0 70                    1704 	.db #0x70	; 112	'p'
      0005A1 70                    1705 	.db #0x70	; 112	'p'
      0005A2 60                    1706 	.db #0x60	; 96
      0005A3 60                    1707 	.db #0x60	; 96
      0005A4 40                    1708 	.db #0x40	; 64
      0005A5 40                    1709 	.db #0x40	; 64
      0005A6 00                    1710 	.db #0x00	; 0
      0005A7 00                    1711 	.db #0x00	; 0
      0005A8 07                    1712 	.db #0x07	; 7
      0005A9 00                    1713 	.db #0x00	; 0
      0005AA 18                    1714 	.db #0x18	; 24
      0005AB 00                    1715 	.db #0x00	; 0
      0005AC 20                    1716 	.db #0x20	; 32
      0005AD 00                    1717 	.db #0x00	; 0
      0005AE 4C                    1718 	.db #0x4c	; 76	'L'
      0005AF 0C                    1719 	.db #0x0c	; 12
      0005B0 43                    1720 	.db #0x43	; 67	'C'
      0005B1 0F                    1721 	.db #0x0f	; 15
      0005B2 84                    1722 	.db #0x84	; 132
      0005B3 27                    1723 	.db #0x27	; 39
      0005B4 80                    1724 	.db #0x80	; 128
      0005B5 13                    1725 	.db #0x13	; 19
      0005B6 83                    1726 	.db #0x83	; 131
      0005B7 2A                    1727 	.db #0x2a	; 42
      0005B8 83                    1728 	.db #0x83	; 131
      0005B9 16                    1729 	.db #0x16	; 22
      0005BA 80                    1730 	.db #0x80	; 128
      0005BB 23                    1731 	.db #0x23	; 35
      0005BC 84                    1732 	.db #0x84	; 132
      0005BD 07                    1733 	.db #0x07	; 7
      0005BE 43                    1734 	.db #0x43	; 67	'C'
      0005BF 0F                    1735 	.db #0x0f	; 15
      0005C0 4C                    1736 	.db #0x4c	; 76	'L'
      0005C1 0C                    1737 	.db #0x0c	; 12
      0005C2 20                    1738 	.db #0x20	; 32
      0005C3 00                    1739 	.db #0x00	; 0
      0005C4 18                    1740 	.db #0x18	; 24
      0005C5 00                    1741 	.db #0x00	; 0
      0005C6 07                    1742 	.db #0x07	; 7
      0005C7 00                    1743 	.db #0x00	; 0
      0005C8 E0                    1744 	.db #0xe0	; 224
      0005C9 00                    1745 	.db #0x00	; 0
      0005CA 18                    1746 	.db #0x18	; 24
      0005CB 00                    1747 	.db #0x00	; 0
      0005CC 04                    1748 	.db #0x04	; 4
      0005CD 00                    1749 	.db #0x00	; 0
      0005CE 02                    1750 	.db #0x02	; 2
      0005CF 00                    1751 	.db #0x00	; 0
      0005D0 02                    1752 	.db #0x02	; 2
      0005D1 00                    1753 	.db #0x00	; 0
      0005D2 C1                    1754 	.db #0xc1	; 193
      0005D3 C0                    1755 	.db #0xc0	; 192
      0005D4 11                    1756 	.db #0x11	; 17
      0005D5 F0                    1757 	.db #0xf0	; 240
      0005D6 E5                    1758 	.db #0xe5	; 229
      0005D7 1C                    1759 	.db #0x1c	; 28
      0005D8 E5                    1760 	.db #0xe5	; 229
      0005D9 1C                    1761 	.db #0x1c	; 28
      0005DA 11                    1762 	.db #0x11	; 17
      0005DB F0                    1763 	.db #0xf0	; 240
      0005DC C1                    1764 	.db #0xc1	; 193
      0005DD C0                    1765 	.db #0xc0	; 192
      0005DE 02                    1766 	.db #0x02	; 2
      0005DF 00                    1767 	.db #0x00	; 0
      0005E0 02                    1768 	.db #0x02	; 2
      0005E1 00                    1769 	.db #0x00	; 0
      0005E2 04                    1770 	.db #0x04	; 4
      0005E3 00                    1771 	.db #0x00	; 0
      0005E4 18                    1772 	.db #0x18	; 24
      0005E5 00                    1773 	.db #0x00	; 0
      0005E6 E0                    1774 	.db #0xe0	; 224
      0005E7 00                    1775 	.db #0x00	; 0
      0005E8                       1776 _ProjectileTiles:
      0005E8 24                    1777 	.db #0x24	; 36
      0005E9 18                    1778 	.db #0x18	; 24
      0005EA 18                    1779 	.db #0x18	; 24
      0005EB 3C                    1780 	.db #0x3c	; 60
      0005EC 18                    1781 	.db #0x18	; 24
      0005ED 3C                    1782 	.db #0x3c	; 60
      0005EE 24                    1783 	.db #0x24	; 36
      0005EF 18                    1784 	.db #0x18	; 24
      0005F0 00                    1785 	.db #0x00	; 0
      0005F1 00                    1786 	.db #0x00	; 0
      0005F2 00                    1787 	.db #0x00	; 0
      0005F3 00                    1788 	.db #0x00	; 0
      0005F4 00                    1789 	.db #0x00	; 0
      0005F5 00                    1790 	.db #0x00	; 0
      0005F6 00                    1791 	.db #0x00	; 0
      0005F7 00                    1792 	.db #0x00	; 0
      0005F8 00                    1793 	.db #0x00	; 0
      0005F9 00                    1794 	.db #0x00	; 0
      0005FA 00                    1795 	.db #0x00	; 0
      0005FB 00                    1796 	.db #0x00	; 0
      0005FC 00                    1797 	.db #0x00	; 0
      0005FD 00                    1798 	.db #0x00	; 0
      0005FE 00                    1799 	.db #0x00	; 0
      0005FF 00                    1800 	.db #0x00	; 0
      000600 00                    1801 	.db #0x00	; 0
      000601 00                    1802 	.db #0x00	; 0
      000602 00                    1803 	.db #0x00	; 0
      000603 00                    1804 	.db #0x00	; 0
      000604 00                    1805 	.db #0x00	; 0
      000605 00                    1806 	.db #0x00	; 0
      000606 00                    1807 	.db #0x00	; 0
      000607 00                    1808 	.db #0x00	; 0
      000608 00                    1809 	.db #0x00	; 0
      000609 00                    1810 	.db #0x00	; 0
      00060A 00                    1811 	.db #0x00	; 0
      00060B 00                    1812 	.db #0x00	; 0
      00060C 09                    1813 	.db #0x09	; 9
      00060D 06                    1814 	.db #0x06	; 6
      00060E 06                    1815 	.db #0x06	; 6
      00060F 0F                    1816 	.db #0x0f	; 15
      000610 06                    1817 	.db #0x06	; 6
      000611 0F                    1818 	.db #0x0f	; 15
      000612 09                    1819 	.db #0x09	; 9
      000613 06                    1820 	.db #0x06	; 6
      000614 00                    1821 	.db #0x00	; 0
      000615 00                    1822 	.db #0x00	; 0
      000616 00                    1823 	.db #0x00	; 0
      000617 00                    1824 	.db #0x00	; 0
      000618 00                    1825 	.db #0x00	; 0
      000619 00                    1826 	.db #0x00	; 0
      00061A 00                    1827 	.db #0x00	; 0
      00061B 00                    1828 	.db #0x00	; 0
      00061C 00                    1829 	.db #0x00	; 0
      00061D 00                    1830 	.db #0x00	; 0
      00061E 00                    1831 	.db #0x00	; 0
      00061F 00                    1832 	.db #0x00	; 0
      000620 00                    1833 	.db #0x00	; 0
      000621 00                    1834 	.db #0x00	; 0
      000622 00                    1835 	.db #0x00	; 0
      000623 00                    1836 	.db #0x00	; 0
      000624 00                    1837 	.db #0x00	; 0
      000625 00                    1838 	.db #0x00	; 0
      000626 00                    1839 	.db #0x00	; 0
      000627 00                    1840 	.db #0x00	; 0
      000628 09                    1841 	.db #0x09	; 9
      000629 06                    1842 	.db #0x06	; 6
      00062A 06                    1843 	.db #0x06	; 6
      00062B 0F                    1844 	.db #0x0f	; 15
      00062C 06                    1845 	.db #0x06	; 6
      00062D 0F                    1846 	.db #0x0f	; 15
      00062E 09                    1847 	.db #0x09	; 9
      00062F 06                    1848 	.db #0x06	; 6
      000630 00                    1849 	.db #0x00	; 0
      000631 00                    1850 	.db #0x00	; 0
      000632 00                    1851 	.db #0x00	; 0
      000633 00                    1852 	.db #0x00	; 0
      000634 00                    1853 	.db #0x00	; 0
      000635 00                    1854 	.db #0x00	; 0
      000636 00                    1855 	.db #0x00	; 0
      000637 00                    1856 	.db #0x00	; 0
      000638 00                    1857 	.db #0x00	; 0
      000639 00                    1858 	.db #0x00	; 0
      00063A 00                    1859 	.db #0x00	; 0
      00063B 00                    1860 	.db #0x00	; 0
      00063C 00                    1861 	.db #0x00	; 0
      00063D 00                    1862 	.db #0x00	; 0
      00063E 00                    1863 	.db #0x00	; 0
      00063F 00                    1864 	.db #0x00	; 0
      000640 00                    1865 	.db #0x00	; 0
      000641 00                    1866 	.db #0x00	; 0
      000642 00                    1867 	.db #0x00	; 0
      000643 00                    1868 	.db #0x00	; 0
      000644 00                    1869 	.db #0x00	; 0
      000645 00                    1870 	.db #0x00	; 0
      000646 00                    1871 	.db #0x00	; 0
      000647 00                    1872 	.db #0x00	; 0
      000648 99                    1873 	.db #0x99	; 153
      000649 66                    1874 	.db #0x66	; 102	'f'
      00064A 66                    1875 	.db #0x66	; 102	'f'
      00064B FF                    1876 	.db #0xff	; 255
      00064C 66                    1877 	.db #0x66	; 102	'f'
      00064D FF                    1878 	.db #0xff	; 255
      00064E 99                    1879 	.db #0x99	; 153
      00064F 66                    1880 	.db #0x66	; 102	'f'
      000650 00                    1881 	.db #0x00	; 0
      000651 00                    1882 	.db #0x00	; 0
      000652 00                    1883 	.db #0x00	; 0
      000653 00                    1884 	.db #0x00	; 0
      000654 00                    1885 	.db #0x00	; 0
      000655 00                    1886 	.db #0x00	; 0
      000656 00                    1887 	.db #0x00	; 0
      000657 00                    1888 	.db #0x00	; 0
      000658 00                    1889 	.db #0x00	; 0
      000659 00                    1890 	.db #0x00	; 0
      00065A 00                    1891 	.db #0x00	; 0
      00065B 00                    1892 	.db #0x00	; 0
      00065C 00                    1893 	.db #0x00	; 0
      00065D 00                    1894 	.db #0x00	; 0
      00065E 00                    1895 	.db #0x00	; 0
      00065F 00                    1896 	.db #0x00	; 0
      000660 00                    1897 	.db #0x00	; 0
      000661 00                    1898 	.db #0x00	; 0
      000662 00                    1899 	.db #0x00	; 0
      000663 00                    1900 	.db #0x00	; 0
      000664 00                    1901 	.db #0x00	; 0
      000665 00                    1902 	.db #0x00	; 0
      000666 00                    1903 	.db #0x00	; 0
      000667 00                    1904 	.db #0x00	; 0
      000668 09                    1905 	.db #0x09	; 9
      000669 06                    1906 	.db #0x06	; 6
      00066A 06                    1907 	.db #0x06	; 6
      00066B 0F                    1908 	.db #0x0f	; 15
      00066C 06                    1909 	.db #0x06	; 6
      00066D 0F                    1910 	.db #0x0f	; 15
      00066E 09                    1911 	.db #0x09	; 9
      00066F 06                    1912 	.db #0x06	; 6
      000670 09                    1913 	.db #0x09	; 9
      000671 06                    1914 	.db #0x06	; 6
      000672 06                    1915 	.db #0x06	; 6
      000673 0F                    1916 	.db #0x0f	; 15
      000674 06                    1917 	.db #0x06	; 6
      000675 0F                    1918 	.db #0x0f	; 15
      000676 09                    1919 	.db #0x09	; 9
      000677 06                    1920 	.db #0x06	; 6
      000678 00                    1921 	.db #0x00	; 0
      000679 00                    1922 	.db #0x00	; 0
      00067A 00                    1923 	.db #0x00	; 0
      00067B 00                    1924 	.db #0x00	; 0
      00067C 00                    1925 	.db #0x00	; 0
      00067D 00                    1926 	.db #0x00	; 0
      00067E 00                    1927 	.db #0x00	; 0
      00067F 00                    1928 	.db #0x00	; 0
      000680 00                    1929 	.db #0x00	; 0
      000681 00                    1930 	.db #0x00	; 0
      000682 00                    1931 	.db #0x00	; 0
      000683 00                    1932 	.db #0x00	; 0
      000684 00                    1933 	.db #0x00	; 0
      000685 00                    1934 	.db #0x00	; 0
      000686 00                    1935 	.db #0x00	; 0
      000687 00                    1936 	.db #0x00	; 0
      000688 90                    1937 	.db #0x90	; 144
      000689 60                    1938 	.db #0x60	; 96
      00068A 60                    1939 	.db #0x60	; 96
      00068B F0                    1940 	.db #0xf0	; 240
      00068C 60                    1941 	.db #0x60	; 96
      00068D F0                    1942 	.db #0xf0	; 240
      00068E 90                    1943 	.db #0x90	; 144
      00068F 60                    1944 	.db #0x60	; 96
      000690 09                    1945 	.db #0x09	; 9
      000691 06                    1946 	.db #0x06	; 6
      000692 06                    1947 	.db #0x06	; 6
      000693 0F                    1948 	.db #0x0f	; 15
      000694 06                    1949 	.db #0x06	; 6
      000695 0F                    1950 	.db #0x0f	; 15
      000696 09                    1951 	.db #0x09	; 9
      000697 06                    1952 	.db #0x06	; 6
      000698 00                    1953 	.db #0x00	; 0
      000699 00                    1954 	.db #0x00	; 0
      00069A 00                    1955 	.db #0x00	; 0
      00069B 00                    1956 	.db #0x00	; 0
      00069C 00                    1957 	.db #0x00	; 0
      00069D 00                    1958 	.db #0x00	; 0
      00069E 00                    1959 	.db #0x00	; 0
      00069F 00                    1960 	.db #0x00	; 0
      0006A0 00                    1961 	.db #0x00	; 0
      0006A1 00                    1962 	.db #0x00	; 0
      0006A2 00                    1963 	.db #0x00	; 0
      0006A3 00                    1964 	.db #0x00	; 0
      0006A4 00                    1965 	.db #0x00	; 0
      0006A5 00                    1966 	.db #0x00	; 0
      0006A6 00                    1967 	.db #0x00	; 0
      0006A7 00                    1968 	.db #0x00	; 0
      0006A8 18                    1969 	.db #0x18	; 24
      0006A9 00                    1970 	.db #0x00	; 0
      0006AA 18                    1971 	.db #0x18	; 24
      0006AB 18                    1972 	.db #0x18	; 24
      0006AC 18                    1973 	.db #0x18	; 24
      0006AD 18                    1974 	.db #0x18	; 24
      0006AE 3C                    1975 	.db #0x3c	; 60
      0006AF 18                    1976 	.db #0x18	; 24
      0006B0 3C                    1977 	.db #0x3c	; 60
      0006B1 18                    1978 	.db #0x18	; 24
      0006B2 3C                    1979 	.db #0x3c	; 60
      0006B3 3C                    1980 	.db #0x3c	; 60
      0006B4 7E                    1981 	.db #0x7e	; 126
      0006B5 3C                    1982 	.db #0x3c	; 60
      0006B6 7E                    1983 	.db #0x7e	; 126
      0006B7 24                    1984 	.db #0x24	; 36
      0006B8 00                    1985 	.db #0x00	; 0
      0006B9 00                    1986 	.db #0x00	; 0
      0006BA 00                    1987 	.db #0x00	; 0
      0006BB 00                    1988 	.db #0x00	; 0
      0006BC 00                    1989 	.db #0x00	; 0
      0006BD 00                    1990 	.db #0x00	; 0
      0006BE 00                    1991 	.db #0x00	; 0
      0006BF 00                    1992 	.db #0x00	; 0
      0006C0 00                    1993 	.db #0x00	; 0
      0006C1 00                    1994 	.db #0x00	; 0
      0006C2 00                    1995 	.db #0x00	; 0
      0006C3 00                    1996 	.db #0x00	; 0
      0006C4 00                    1997 	.db #0x00	; 0
      0006C5 00                    1998 	.db #0x00	; 0
      0006C6 00                    1999 	.db #0x00	; 0
      0006C7 00                    2000 	.db #0x00	; 0
      0006C8 C0                    2001 	.db #0xc0	; 192
      0006C9 00                    2002 	.db #0x00	; 0
      0006CA F8                    2003 	.db #0xf8	; 248
      0006CB E0                    2004 	.db #0xe0	; 224
      0006CC FF                    2005 	.db #0xff	; 255
      0006CD 7E                    2006 	.db #0x7e	; 126
      0006CE FF                    2007 	.db #0xff	; 255
      0006CF 7E                    2008 	.db #0x7e	; 126
      0006D0 F8                    2009 	.db #0xf8	; 248
      0006D1 E0                    2010 	.db #0xe0	; 224
      0006D2 C0                    2011 	.db #0xc0	; 192
      0006D3 00                    2012 	.db #0x00	; 0
      0006D4 00                    2013 	.db #0x00	; 0
      0006D5 00                    2014 	.db #0x00	; 0
      0006D6 00                    2015 	.db #0x00	; 0
      0006D7 00                    2016 	.db #0x00	; 0
      0006D8 00                    2017 	.db #0x00	; 0
      0006D9 00                    2018 	.db #0x00	; 0
      0006DA 00                    2019 	.db #0x00	; 0
      0006DB 00                    2020 	.db #0x00	; 0
      0006DC 00                    2021 	.db #0x00	; 0
      0006DD 00                    2022 	.db #0x00	; 0
      0006DE 00                    2023 	.db #0x00	; 0
      0006DF 00                    2024 	.db #0x00	; 0
      0006E0 00                    2025 	.db #0x00	; 0
      0006E1 00                    2026 	.db #0x00	; 0
      0006E2 00                    2027 	.db #0x00	; 0
      0006E3 00                    2028 	.db #0x00	; 0
      0006E4 00                    2029 	.db #0x00	; 0
      0006E5 00                    2030 	.db #0x00	; 0
      0006E6 00                    2031 	.db #0x00	; 0
      0006E7 00                    2032 	.db #0x00	; 0
      0006E8 06                    2033 	.db #0x06	; 6
      0006E9 00                    2034 	.db #0x00	; 0
      0006EA 0F                    2035 	.db #0x0f	; 15
      0006EB 06                    2036 	.db #0x06	; 6
      0006EC 1F                    2037 	.db #0x1f	; 31
      0006ED 0E                    2038 	.db #0x0e	; 14
      0006EE 7E                    2039 	.db #0x7e	; 126
      0006EF 1C                    2040 	.db #0x1c	; 28
      0006F0 FC                    2041 	.db #0xfc	; 252
      0006F1 78                    2042 	.db #0x78	; 120	'x'
      0006F2 F8                    2043 	.db #0xf8	; 248
      0006F3 F0                    2044 	.db #0xf0	; 240
      0006F4 F8                    2045 	.db #0xf8	; 248
      0006F5 70                    2046 	.db #0x70	; 112	'p'
      0006F6 70                    2047 	.db #0x70	; 112	'p'
      0006F7 20                    2048 	.db #0x20	; 32
      0006F8 00                    2049 	.db #0x00	; 0
      0006F9 00                    2050 	.db #0x00	; 0
      0006FA 00                    2051 	.db #0x00	; 0
      0006FB 00                    2052 	.db #0x00	; 0
      0006FC 00                    2053 	.db #0x00	; 0
      0006FD 00                    2054 	.db #0x00	; 0
      0006FE 00                    2055 	.db #0x00	; 0
      0006FF 00                    2056 	.db #0x00	; 0
      000700 00                    2057 	.db #0x00	; 0
      000701 00                    2058 	.db #0x00	; 0
      000702 00                    2059 	.db #0x00	; 0
      000703 00                    2060 	.db #0x00	; 0
      000704 00                    2061 	.db #0x00	; 0
      000705 00                    2062 	.db #0x00	; 0
      000706 00                    2063 	.db #0x00	; 0
      000707 00                    2064 	.db #0x00	; 0
      000708                       2065 _upgrade:
      000708 01                    2066 	.db #0x01	; 1
      000709 00 00                 2067 	.dw #0x0000
      00070B 00 00                 2068 	.dw #0x0000
      00070D 00                    2069 	.db #0x00	; 0
      00070E 00                    2070 	.db #0x00	; 0
      00070F 00                    2071 	.db #0x00	; 0
      000710 70                    2072 	.db #0x70	; 112	'p'
      000711                       2073 _ammo:
      000711 01                    2074 	.db #0x01	; 1
      000712 00 00                 2075 	.dw #0x0000
      000714 00 00                 2076 	.dw #0x0000
      000716 00                    2077 	.db #0x00	; 0
      000717 01                    2078 	.db #0x01	; 1
      000718 05                    2079 	.db #0x05	; 5
      000719 72                    2080 	.db #0x72	; 114	'r'
      00071A                       2081 _health:
      00071A 01                    2082 	.db #0x01	; 1
      00071B 00 00                 2083 	.dw #0x0000
      00071D 00 00                 2084 	.dw #0x0000
      00071F 00                    2085 	.db #0x00	; 0
      000720 02                    2086 	.db #0x02	; 2
      000721 32                    2087 	.db #0x32	; 50	'2'
      000722 74                    2088 	.db #0x74	; 116	't'
      000723                       2089 _Pickups:
      000723 7E                    2090 	.db #0x7e	; 126
      000724 00                    2091 	.db #0x00	; 0
      000725 81                    2092 	.db #0x81	; 129
      000726 00                    2093 	.db #0x00	; 0
      000727 D7                    2094 	.db #0xd7	; 215
      000728 56                    2095 	.db #0x56	; 86	'V'
      000729 D7                    2096 	.db #0xd7	; 215
      00072A 56                    2097 	.db #0x56	; 86	'V'
      00072B D5                    2098 	.db #0xd5	; 213
      00072C 54                    2099 	.db #0x54	; 84	'T'
      00072D F5                    2100 	.db #0xf5	; 245
      00072E 74                    2101 	.db #0x74	; 116	't'
      00072F 81                    2102 	.db #0x81	; 129
      000730 00                    2103 	.db #0x00	; 0
      000731 7E                    2104 	.db #0x7e	; 126
      000732 00                    2105 	.db #0x00	; 0
      000733 00                    2106 	.db #0x00	; 0
      000734 00                    2107 	.db #0x00	; 0
      000735 00                    2108 	.db #0x00	; 0
      000736 00                    2109 	.db #0x00	; 0
      000737 00                    2110 	.db #0x00	; 0
      000738 00                    2111 	.db #0x00	; 0
      000739 00                    2112 	.db #0x00	; 0
      00073A 00                    2113 	.db #0x00	; 0
      00073B 00                    2114 	.db #0x00	; 0
      00073C 00                    2115 	.db #0x00	; 0
      00073D 00                    2116 	.db #0x00	; 0
      00073E 00                    2117 	.db #0x00	; 0
      00073F 00                    2118 	.db #0x00	; 0
      000740 00                    2119 	.db #0x00	; 0
      000741 00                    2120 	.db #0x00	; 0
      000742 00                    2121 	.db #0x00	; 0
      000743 7E                    2122 	.db #0x7e	; 126
      000744 00                    2123 	.db #0x00	; 0
      000745 8F                    2124 	.db #0x8f	; 143
      000746 06                    2125 	.db #0x06	; 6
      000747 9F                    2126 	.db #0x9f	; 159
      000748 0E                    2127 	.db #0x0e	; 14
      000749 FF                    2128 	.db #0xff	; 255
      00074A 1C                    2129 	.db #0x1c	; 28
      00074B FD                    2130 	.db #0xfd	; 253
      00074C 78                    2131 	.db #0x78	; 120	'x'
      00074D F9                    2132 	.db #0xf9	; 249
      00074E 70                    2133 	.db #0x70	; 112	'p'
      00074F F9                    2134 	.db #0xf9	; 249
      000750 70                    2135 	.db #0x70	; 112	'p'
      000751 7E                    2136 	.db #0x7e	; 126
      000752 00                    2137 	.db #0x00	; 0
      000753 00                    2138 	.db #0x00	; 0
      000754 00                    2139 	.db #0x00	; 0
      000755 00                    2140 	.db #0x00	; 0
      000756 00                    2141 	.db #0x00	; 0
      000757 00                    2142 	.db #0x00	; 0
      000758 00                    2143 	.db #0x00	; 0
      000759 00                    2144 	.db #0x00	; 0
      00075A 00                    2145 	.db #0x00	; 0
      00075B 00                    2146 	.db #0x00	; 0
      00075C 00                    2147 	.db #0x00	; 0
      00075D 00                    2148 	.db #0x00	; 0
      00075E 00                    2149 	.db #0x00	; 0
      00075F 00                    2150 	.db #0x00	; 0
      000760 00                    2151 	.db #0x00	; 0
      000761 00                    2152 	.db #0x00	; 0
      000762 00                    2153 	.db #0x00	; 0
      000763 7E                    2154 	.db #0x7e	; 126
      000764 00                    2155 	.db #0x00	; 0
      000765 99                    2156 	.db #0x99	; 153
      000766 18                    2157 	.db #0x18	; 24
      000767 99                    2158 	.db #0x99	; 153
      000768 18                    2159 	.db #0x18	; 24
      000769 FF                    2160 	.db #0xff	; 255
      00076A 7E                    2161 	.db #0x7e	; 126
      00076B FF                    2162 	.db #0xff	; 255
      00076C 7E                    2163 	.db #0x7e	; 126
      00076D 99                    2164 	.db #0x99	; 153
      00076E 18                    2165 	.db #0x18	; 24
      00076F 99                    2166 	.db #0x99	; 153
      000770 18                    2167 	.db #0x18	; 24
      000771 7E                    2168 	.db #0x7e	; 126
      000772 00                    2169 	.db #0x00	; 0
      000773 00                    2170 	.db #0x00	; 0
      000774 00                    2171 	.db #0x00	; 0
      000775 00                    2172 	.db #0x00	; 0
      000776 00                    2173 	.db #0x00	; 0
      000777 00                    2174 	.db #0x00	; 0
      000778 00                    2175 	.db #0x00	; 0
      000779 00                    2176 	.db #0x00	; 0
      00077A 00                    2177 	.db #0x00	; 0
      00077B 00                    2178 	.db #0x00	; 0
      00077C 00                    2179 	.db #0x00	; 0
      00077D 00                    2180 	.db #0x00	; 0
      00077E 00                    2181 	.db #0x00	; 0
      00077F 00                    2182 	.db #0x00	; 0
      000780 00                    2183 	.db #0x00	; 0
      000781 00                    2184 	.db #0x00	; 0
      000782 00                    2185 	.db #0x00	; 0
      000783                       2186 _Player1:
      000783 08                    2187 	.db #0x08	; 8
      000784 08                    2188 	.db #0x08	; 8
      000785 1C                    2189 	.db #0x1c	; 28
      000786 14                    2190 	.db #0x14	; 20
      000787 38                    2191 	.db #0x38	; 56	'8'
      000788 28                    2192 	.db #0x28	; 40
      000789 68                    2193 	.db #0x68	; 104	'h'
      00078A 58                    2194 	.db #0x58	; 88	'X'
      00078B 50                    2195 	.db #0x50	; 80	'P'
      00078C 71                    2196 	.db #0x71	; 113	'q'
      00078D D0                    2197 	.db #0xd0	; 208
      00078E B2                    2198 	.db #0xb2	; 178
      00078F D5                    2199 	.db #0xd5	; 213
      000790 B6                    2200 	.db #0xb6	; 182
      000791 D5                    2201 	.db #0xd5	; 213
      000792 B6                    2202 	.db #0xb6	; 182
      000793 D5                    2203 	.db #0xd5	; 213
      000794 B6                    2204 	.db #0xb6	; 182
      000795 CD                    2205 	.db #0xcd	; 205
      000796 BE                    2206 	.db #0xbe	; 190
      000797 C5                    2207 	.db #0xc5	; 197
      000798 BE                    2208 	.db #0xbe	; 190
      000799 65                    2209 	.db #0x65	; 101	'e'
      00079A 5E                    2210 	.db #0x5e	; 94
      00079B 3E                    2211 	.db #0x3e	; 62
      00079C 2F                    2212 	.db #0x2f	; 47
      00079D 13                    2213 	.db #0x13	; 19
      00079E 13                    2214 	.db #0x13	; 19
      00079F 06                    2215 	.db #0x06	; 6
      0007A0 07                    2216 	.db #0x07	; 7
      0007A1 07                    2217 	.db #0x07	; 7
      0007A2 05                    2218 	.db #0x05	; 5
      0007A3 10                    2219 	.db #0x10	; 16
      0007A4 10                    2220 	.db #0x10	; 16
      0007A5 38                    2221 	.db #0x38	; 56	'8'
      0007A6 28                    2222 	.db #0x28	; 40
      0007A7 1C                    2223 	.db #0x1c	; 28
      0007A8 14                    2224 	.db #0x14	; 20
      0007A9 16                    2225 	.db #0x16	; 22
      0007AA 1A                    2226 	.db #0x1a	; 26
      0007AB 0A                    2227 	.db #0x0a	; 10
      0007AC 8E                    2228 	.db #0x8e	; 142
      0007AD 0B                    2229 	.db #0x0b	; 11
      0007AE 4D                    2230 	.db #0x4d	; 77	'M'
      0007AF AB                    2231 	.db #0xab	; 171
      0007B0 6D                    2232 	.db #0x6d	; 109	'm'
      0007B1 AB                    2233 	.db #0xab	; 171
      0007B2 6D                    2234 	.db #0x6d	; 109	'm'
      0007B3 AB                    2235 	.db #0xab	; 171
      0007B4 6D                    2236 	.db #0x6d	; 109	'm'
      0007B5 B3                    2237 	.db #0xb3	; 179
      0007B6 7D                    2238 	.db #0x7d	; 125
      0007B7 A3                    2239 	.db #0xa3	; 163
      0007B8 7D                    2240 	.db #0x7d	; 125
      0007B9 A6                    2241 	.db #0xa6	; 166
      0007BA 7A                    2242 	.db #0x7a	; 122	'z'
      0007BB 7C                    2243 	.db #0x7c	; 124
      0007BC F4                    2244 	.db #0xf4	; 244
      0007BD C8                    2245 	.db #0xc8	; 200
      0007BE C8                    2246 	.db #0xc8	; 200
      0007BF 60                    2247 	.db #0x60	; 96
      0007C0 E0                    2248 	.db #0xe0	; 224
      0007C1 E0                    2249 	.db #0xe0	; 224
      0007C2 A0                    2250 	.db #0xa0	; 160
      0007C3 07                    2251 	.db #0x07	; 7
      0007C4 07                    2252 	.db #0x07	; 7
      0007C5 0F                    2253 	.db #0x0f	; 15
      0007C6 08                    2254 	.db #0x08	; 8
      0007C7 18                    2255 	.db #0x18	; 24
      0007C8 17                    2256 	.db #0x17	; 23
      0007C9 31                    2257 	.db #0x31	; 49	'1'
      0007CA 2F                    2258 	.db #0x2f	; 47
      0007CB 12                    2259 	.db #0x12	; 18
      0007CC 1E                    2260 	.db #0x1e	; 30
      0007CD DF                    2261 	.db #0xdf	; 223
      0007CE DF                    2262 	.db #0xdf	; 223
      0007CF F0                    2263 	.db #0xf0	; 240
      0007D0 7F                    2264 	.db #0x7f	; 127
      0007D1 AF                    2265 	.db #0xaf	; 175
      0007D2 F0                    2266 	.db #0xf0	; 240
      0007D3 AF                    2267 	.db #0xaf	; 175
      0007D4 F0                    2268 	.db #0xf0	; 240
      0007D5 F0                    2269 	.db #0xf0	; 240
      0007D6 7F                    2270 	.db #0x7f	; 127
      0007D7 DF                    2271 	.db #0xdf	; 223
      0007D8 DF                    2272 	.db #0xdf	; 223
      0007D9 12                    2273 	.db #0x12	; 18
      0007DA 1E                    2274 	.db #0x1e	; 30
      0007DB 31                    2275 	.db #0x31	; 49	'1'
      0007DC 2F                    2276 	.db #0x2f	; 47
      0007DD 18                    2277 	.db #0x18	; 24
      0007DE 17                    2278 	.db #0x17	; 23
      0007DF 0F                    2279 	.db #0x0f	; 15
      0007E0 08                    2280 	.db #0x08	; 8
      0007E1 07                    2281 	.db #0x07	; 7
      0007E2 07                    2282 	.db #0x07	; 7
      0007E3 E0                    2283 	.db #0xe0	; 224
      0007E4 E0                    2284 	.db #0xe0	; 224
      0007E5 F8                    2285 	.db #0xf8	; 248
      0007E6 18                    2286 	.db #0x18	; 24
      0007E7 0C                    2287 	.db #0x0c	; 12
      0007E8 F4                    2288 	.db #0xf4	; 244
      0007E9 F6                    2289 	.db #0xf6	; 246
      0007EA FA                    2290 	.db #0xfa	; 250
      0007EB 0F                    2291 	.db #0x0f	; 15
      0007EC 0D                    2292 	.db #0x0d	; 13
      0007ED C2                    2293 	.db #0xc2	; 194
      0007EE C2                    2294 	.db #0xc2	; 194
      0007EF 00                    2295 	.db #0x00	; 0
      0007F0 E0                    2296 	.db #0xe0	; 224
      0007F1 C0                    2297 	.db #0xc0	; 192
      0007F2 10                    2298 	.db #0x10	; 16
      0007F3 C0                    2299 	.db #0xc0	; 192
      0007F4 10                    2300 	.db #0x10	; 16
      0007F5 00                    2301 	.db #0x00	; 0
      0007F6 E0                    2302 	.db #0xe0	; 224
      0007F7 C2                    2303 	.db #0xc2	; 194
      0007F8 C2                    2304 	.db #0xc2	; 194
      0007F9 0F                    2305 	.db #0x0f	; 15
      0007FA 0D                    2306 	.db #0x0d	; 13
      0007FB F6                    2307 	.db #0xf6	; 246
      0007FC FA                    2308 	.db #0xfa	; 250
      0007FD 0C                    2309 	.db #0x0c	; 12
      0007FE F4                    2310 	.db #0xf4	; 244
      0007FF F8                    2311 	.db #0xf8	; 248
      000800 18                    2312 	.db #0x18	; 24
      000801 E0                    2313 	.db #0xe0	; 224
      000802 E0                    2314 	.db #0xe0	; 224
      000803 07                    2315 	.db #0x07	; 7
      000804 07                    2316 	.db #0x07	; 7
      000805 1B                    2317 	.db #0x1b	; 27
      000806 1C                    2318 	.db #0x1c	; 28
      000807 38                    2319 	.db #0x38	; 56	'8'
      000808 27                    2320 	.db #0x27	; 39
      000809 60                    2321 	.db #0x60	; 96
      00080A 5E                    2322 	.db #0x5e	; 94
      00080B 60                    2323 	.db #0x60	; 96
      00080C 5C                    2324 	.db #0x5c	; 92
      00080D 41                    2325 	.db #0x41	; 65	'A'
      00080E 79                    2326 	.db #0x79	; 121	'y'
      00080F C4                    2327 	.db #0xc4	; 196
      000810 B7                    2328 	.db #0xb7	; 183
      000811 99                    2329 	.db #0x99	; 153
      000812 FE                    2330 	.db #0xfe	; 254
      000813 B3                    2331 	.db #0xb3	; 179
      000814 EC                    2332 	.db #0xec	; 236
      000815 67                    2333 	.db #0x67	; 103	'g'
      000816 58                    2334 	.db #0x58	; 88	'X'
      000817 2E                    2335 	.db #0x2e	; 46
      000818 31                    2336 	.db #0x31	; 49	'1'
      000819 5C                    2337 	.db #0x5c	; 92
      00081A 73                    2338 	.db #0x73	; 115	's'
      00081B 69                    2339 	.db #0x69	; 105	'i'
      00081C 5E                    2340 	.db #0x5e	; 94
      00081D 37                    2341 	.db #0x37	; 55	'7'
      00081E 2D                    2342 	.db #0x2d	; 45
      00081F 1A                    2343 	.db #0x1a	; 26
      000820 1B                    2344 	.db #0x1b	; 27
      000821 01                    2345 	.db #0x01	; 1
      000822 01                    2346 	.db #0x01	; 1
      000823 E0                    2347 	.db #0xe0	; 224
      000824 E0                    2348 	.db #0xe0	; 224
      000825 90                    2349 	.db #0x90	; 144
      000826 70                    2350 	.db #0x70	; 112	'p'
      000827 C0                    2351 	.db #0xc0	; 192
      000828 C0                    2352 	.db #0xc0	; 192
      000829 00                    2353 	.db #0x00	; 0
      00082A 00                    2354 	.db #0x00	; 0
      00082B 02                    2355 	.db #0x02	; 2
      00082C 02                    2356 	.db #0x02	; 2
      00082D C1                    2357 	.db #0xc1	; 193
      00082E C3                    2358 	.db #0xc3	; 195
      00082F 65                    2359 	.db #0x65	; 101	'e'
      000830 A7                    2360 	.db #0xa7	; 167
      000831 A7                    2361 	.db #0xa7	; 167
      000832 65                    2362 	.db #0x65	; 101	'e'
      000833 A3                    2363 	.db #0xa3	; 163
      000834 65                    2364 	.db #0x65	; 101	'e'
      000835 03                    2365 	.db #0x03	; 3
      000836 CD                    2366 	.db #0xcd	; 205
      000837 41                    2367 	.db #0x41	; 65	'A'
      000838 DF                    2368 	.db #0xdf	; 223
      000839 86                    2369 	.db #0x86	; 134
      00083A BA                    2370 	.db #0xba	; 186
      00083B 86                    2371 	.db #0x86	; 134
      00083C FA                    2372 	.db #0xfa	; 250
      00083D 1C                    2373 	.db #0x1c	; 28
      00083E E4                    2374 	.db #0xe4	; 228
      00083F 78                    2375 	.db #0x78	; 120	'x'
      000840 B8                    2376 	.db #0xb8	; 184
      000841 C0                    2377 	.db #0xc0	; 192
      000842 C0                    2378 	.db #0xc0	; 192
      000843 00                    2379 	.db #0x00	; 0
      000844 00                    2380 	.db #0x00	; 0
      000845 00                    2381 	.db #0x00	; 0
      000846 00                    2382 	.db #0x00	; 0
      000847 00                    2383 	.db #0x00	; 0
      000848 00                    2384 	.db #0x00	; 0
      000849 00                    2385 	.db #0x00	; 0
      00084A 00                    2386 	.db #0x00	; 0
      00084B 00                    2387 	.db #0x00	; 0
      00084C 00                    2388 	.db #0x00	; 0
      00084D 00                    2389 	.db #0x00	; 0
      00084E 00                    2390 	.db #0x00	; 0
      00084F 00                    2391 	.db #0x00	; 0
      000850 00                    2392 	.db #0x00	; 0
      000851 00                    2393 	.db #0x00	; 0
      000852 00                    2394 	.db #0x00	; 0
      000853 00                    2395 	.db #0x00	; 0
      000854 00                    2396 	.db #0x00	; 0
      000855 00                    2397 	.db #0x00	; 0
      000856 00                    2398 	.db #0x00	; 0
      000857 00                    2399 	.db #0x00	; 0
      000858 00                    2400 	.db #0x00	; 0
      000859 00                    2401 	.db #0x00	; 0
      00085A 00                    2402 	.db #0x00	; 0
      00085B 00                    2403 	.db #0x00	; 0
      00085C 00                    2404 	.db #0x00	; 0
      00085D 00                    2405 	.db #0x00	; 0
      00085E 00                    2406 	.db #0x00	; 0
      00085F 00                    2407 	.db #0x00	; 0
      000860 00                    2408 	.db #0x00	; 0
      000861 00                    2409 	.db #0x00	; 0
      000862 00                    2410 	.db #0x00	; 0
      000863 00                    2411 	.db #0x00	; 0
      000864 00                    2412 	.db #0x00	; 0
      000865 00                    2413 	.db #0x00	; 0
      000866 00                    2414 	.db #0x00	; 0
      000867 00                    2415 	.db #0x00	; 0
      000868 00                    2416 	.db #0x00	; 0
      000869 00                    2417 	.db #0x00	; 0
      00086A 00                    2418 	.db #0x00	; 0
      00086B 00                    2419 	.db #0x00	; 0
      00086C 00                    2420 	.db #0x00	; 0
      00086D 00                    2421 	.db #0x00	; 0
      00086E 00                    2422 	.db #0x00	; 0
      00086F 00                    2423 	.db #0x00	; 0
      000870 00                    2424 	.db #0x00	; 0
      000871 00                    2425 	.db #0x00	; 0
      000872 00                    2426 	.db #0x00	; 0
      000873 00                    2427 	.db #0x00	; 0
      000874 00                    2428 	.db #0x00	; 0
      000875 00                    2429 	.db #0x00	; 0
      000876 00                    2430 	.db #0x00	; 0
      000877 00                    2431 	.db #0x00	; 0
      000878 00                    2432 	.db #0x00	; 0
      000879 00                    2433 	.db #0x00	; 0
      00087A 00                    2434 	.db #0x00	; 0
      00087B 00                    2435 	.db #0x00	; 0
      00087C 00                    2436 	.db #0x00	; 0
      00087D 00                    2437 	.db #0x00	; 0
      00087E 00                    2438 	.db #0x00	; 0
      00087F 00                    2439 	.db #0x00	; 0
      000880 00                    2440 	.db #0x00	; 0
      000881 00                    2441 	.db #0x00	; 0
      000882 00                    2442 	.db #0x00	; 0
      000883                       2443 _ex:
      000883 00                    2444 	.db #0x00	; 0
      000884 00                    2445 	.db #0x00	; 0
      000885 00                    2446 	.db #0x00	; 0
      000886 00                    2447 	.db #0x00	; 0
      000887 00                    2448 	.db #0x00	; 0
      000888 00                    2449 	.db #0x00	; 0
      000889                       2450 _Ex1:
      000889 00                    2451 	.db #0x00	; 0
      00088A 00                    2452 	.db #0x00	; 0
      00088B 00                    2453 	.db #0x00	; 0
      00088C 00                    2454 	.db #0x00	; 0
      00088D 00                    2455 	.db #0x00	; 0
      00088E 00                    2456 	.db #0x00	; 0
      00088F 00                    2457 	.db #0x00	; 0
      000890 00                    2458 	.db #0x00	; 0
      000891 00                    2459 	.db #0x00	; 0
      000892 00                    2460 	.db #0x00	; 0
      000893 04                    2461 	.db #0x04	; 4
      000894 04                    2462 	.db #0x04	; 4
      000895 06                    2463 	.db #0x06	; 6
      000896 06                    2464 	.db #0x06	; 6
      000897 06                    2465 	.db #0x06	; 6
      000898 06                    2466 	.db #0x06	; 6
      000899 00                    2467 	.db #0x00	; 0
      00089A 00                    2468 	.db #0x00	; 0
      00089B 00                    2469 	.db #0x00	; 0
      00089C 00                    2470 	.db #0x00	; 0
      00089D 03                    2471 	.db #0x03	; 3
      00089E 03                    2472 	.db #0x03	; 3
      00089F 07                    2473 	.db #0x07	; 7
      0008A0 07                    2474 	.db #0x07	; 7
      0008A1 02                    2475 	.db #0x02	; 2
      0008A2 02                    2476 	.db #0x02	; 2
      0008A3 00                    2477 	.db #0x00	; 0
      0008A4 00                    2478 	.db #0x00	; 0
      0008A5 00                    2479 	.db #0x00	; 0
      0008A6 00                    2480 	.db #0x00	; 0
      0008A7 00                    2481 	.db #0x00	; 0
      0008A8 00                    2482 	.db #0x00	; 0
      0008A9 00                    2483 	.db #0x00	; 0
      0008AA 00                    2484 	.db #0x00	; 0
      0008AB 00                    2485 	.db #0x00	; 0
      0008AC 00                    2486 	.db #0x00	; 0
      0008AD 00                    2487 	.db #0x00	; 0
      0008AE 00                    2488 	.db #0x00	; 0
      0008AF 00                    2489 	.db #0x00	; 0
      0008B0 00                    2490 	.db #0x00	; 0
      0008B1 00                    2491 	.db #0x00	; 0
      0008B2 00                    2492 	.db #0x00	; 0
      0008B3 00                    2493 	.db #0x00	; 0
      0008B4 00                    2494 	.db #0x00	; 0
      0008B5 00                    2495 	.db #0x00	; 0
      0008B6 00                    2496 	.db #0x00	; 0
      0008B7 38                    2497 	.db #0x38	; 56	'8'
      0008B8 38                    2498 	.db #0x38	; 56	'8'
      0008B9 38                    2499 	.db #0x38	; 56	'8'
      0008BA 38                    2500 	.db #0x38	; 56	'8'
      0008BB 30                    2501 	.db #0x30	; 48	'0'
      0008BC 30                    2502 	.db #0x30	; 48	'0'
      0008BD 00                    2503 	.db #0x00	; 0
      0008BE 00                    2504 	.db #0x00	; 0
      0008BF 00                    2505 	.db #0x00	; 0
      0008C0 00                    2506 	.db #0x00	; 0
      0008C1 00                    2507 	.db #0x00	; 0
      0008C2 00                    2508 	.db #0x00	; 0
      0008C3 00                    2509 	.db #0x00	; 0
      0008C4 00                    2510 	.db #0x00	; 0
      0008C5 00                    2511 	.db #0x00	; 0
      0008C6 00                    2512 	.db #0x00	; 0
      0008C7 00                    2513 	.db #0x00	; 0
      0008C8 00                    2514 	.db #0x00	; 0
      0008C9 00                    2515 	.db #0x00	; 0
      0008CA 00                    2516 	.db #0x00	; 0
      0008CB 00                    2517 	.db #0x00	; 0
      0008CC 00                    2518 	.db #0x00	; 0
      0008CD 00                    2519 	.db #0x00	; 0
      0008CE 00                    2520 	.db #0x00	; 0
      0008CF 18                    2521 	.db #0x18	; 24
      0008D0 18                    2522 	.db #0x18	; 24
      0008D1 3E                    2523 	.db #0x3e	; 62
      0008D2 3E                    2524 	.db #0x3e	; 62
      0008D3 3E                    2525 	.db #0x3e	; 62
      0008D4 3E                    2526 	.db #0x3e	; 62
      0008D5 1C                    2527 	.db #0x1c	; 28
      0008D6 1C                    2528 	.db #0x1c	; 28
      0008D7 08                    2529 	.db #0x08	; 8
      0008D8 08                    2530 	.db #0x08	; 8
      0008D9 00                    2531 	.db #0x00	; 0
      0008DA 00                    2532 	.db #0x00	; 0
      0008DB 00                    2533 	.db #0x00	; 0
      0008DC 00                    2534 	.db #0x00	; 0
      0008DD 07                    2535 	.db #0x07	; 7
      0008DE 07                    2536 	.db #0x07	; 7
      0008DF 07                    2537 	.db #0x07	; 7
      0008E0 07                    2538 	.db #0x07	; 7
      0008E1 07                    2539 	.db #0x07	; 7
      0008E2 07                    2540 	.db #0x07	; 7
      0008E3 03                    2541 	.db #0x03	; 3
      0008E4 03                    2542 	.db #0x03	; 3
      0008E5 03                    2543 	.db #0x03	; 3
      0008E6 03                    2544 	.db #0x03	; 3
      0008E7 00                    2545 	.db #0x00	; 0
      0008E8 00                    2546 	.db #0x00	; 0
      0008E9 00                    2547 	.db #0x00	; 0
      0008EA 00                    2548 	.db #0x00	; 0
      0008EB 00                    2549 	.db #0x00	; 0
      0008EC 00                    2550 	.db #0x00	; 0
      0008ED 04                    2551 	.db #0x04	; 4
      0008EE 04                    2552 	.db #0x04	; 4
      0008EF 1E                    2553 	.db #0x1e	; 30
      0008F0 1E                    2554 	.db #0x1e	; 30
      0008F1 3E                    2555 	.db #0x3e	; 62
      0008F2 3E                    2556 	.db #0x3e	; 62
      0008F3 3E                    2557 	.db #0x3e	; 62
      0008F4 3E                    2558 	.db #0x3e	; 62
      0008F5 1E                    2559 	.db #0x1e	; 30
      0008F6 1E                    2560 	.db #0x1e	; 30
      0008F7 0C                    2561 	.db #0x0c	; 12
      0008F8 0C                    2562 	.db #0x0c	; 12
      0008F9 00                    2563 	.db #0x00	; 0
      0008FA 00                    2564 	.db #0x00	; 0
      0008FB 00                    2565 	.db #0x00	; 0
      0008FC 00                    2566 	.db #0x00	; 0
      0008FD 00                    2567 	.db #0x00	; 0
      0008FE 00                    2568 	.db #0x00	; 0
      0008FF 80                    2569 	.db #0x80	; 128
      000900 80                    2570 	.db #0x80	; 128
      000901 C0                    2571 	.db #0xc0	; 192
      000902 C0                    2572 	.db #0xc0	; 192
      000903 80                    2573 	.db #0x80	; 128
      000904 80                    2574 	.db #0x80	; 128
      000905 00                    2575 	.db #0x00	; 0
      000906 00                    2576 	.db #0x00	; 0
      000907 00                    2577 	.db #0x00	; 0
      000908 00                    2578 	.db #0x00	; 0
      000909 00                    2579 	.db #0x00	; 0
      00090A 00                    2580 	.db #0x00	; 0
      00090B 20                    2581 	.db #0x20	; 32
      00090C 20                    2582 	.db #0x20	; 32
      00090D 70                    2583 	.db #0x70	; 112	'p'
      00090E 70                    2584 	.db #0x70	; 112	'p'
      00090F 70                    2585 	.db #0x70	; 112	'p'
      000910 70                    2586 	.db #0x70	; 112	'p'
      000911 60                    2587 	.db #0x60	; 96
      000912 60                    2588 	.db #0x60	; 96
      000913 00                    2589 	.db #0x00	; 0
      000914 00                    2590 	.db #0x00	; 0
      000915 00                    2591 	.db #0x00	; 0
      000916 00                    2592 	.db #0x00	; 0
      000917 00                    2593 	.db #0x00	; 0
      000918 00                    2594 	.db #0x00	; 0
      000919 00                    2595 	.db #0x00	; 0
      00091A 00                    2596 	.db #0x00	; 0
      00091B 00                    2597 	.db #0x00	; 0
      00091C 00                    2598 	.db #0x00	; 0
      00091D 00                    2599 	.db #0x00	; 0
      00091E 00                    2600 	.db #0x00	; 0
      00091F 00                    2601 	.db #0x00	; 0
      000920 00                    2602 	.db #0x00	; 0
      000921 00                    2603 	.db #0x00	; 0
      000922 00                    2604 	.db #0x00	; 0
      000923 07                    2605 	.db #0x07	; 7
      000924 07                    2606 	.db #0x07	; 7
      000925 07                    2607 	.db #0x07	; 7
      000926 07                    2608 	.db #0x07	; 7
      000927 06                    2609 	.db #0x06	; 6
      000928 06                    2610 	.db #0x06	; 6
      000929 00                    2611 	.db #0x00	; 0
      00092A 00                    2612 	.db #0x00	; 0
      00092B 04                    2613 	.db #0x04	; 4
      00092C 04                    2614 	.db #0x04	; 4
      00092D 0E                    2615 	.db #0x0e	; 14
      00092E 0E                    2616 	.db #0x0e	; 14
      00092F 0E                    2617 	.db #0x0e	; 14
      000930 0E                    2618 	.db #0x0e	; 14
      000931 00                    2619 	.db #0x00	; 0
      000932 00                    2620 	.db #0x00	; 0
      000933 00                    2621 	.db #0x00	; 0
      000934 00                    2622 	.db #0x00	; 0
      000935 00                    2623 	.db #0x00	; 0
      000936 00                    2624 	.db #0x00	; 0
      000937 00                    2625 	.db #0x00	; 0
      000938 00                    2626 	.db #0x00	; 0
      000939 00                    2627 	.db #0x00	; 0
      00093A 00                    2628 	.db #0x00	; 0
      00093B 00                    2629 	.db #0x00	; 0
      00093C 00                    2630 	.db #0x00	; 0
      00093D 00                    2631 	.db #0x00	; 0
      00093E 00                    2632 	.db #0x00	; 0
      00093F 00                    2633 	.db #0x00	; 0
      000940 00                    2634 	.db #0x00	; 0
      000941 00                    2635 	.db #0x00	; 0
      000942 00                    2636 	.db #0x00	; 0
      000943 00                    2637 	.db #0x00	; 0
      000944 00                    2638 	.db #0x00	; 0
      000945 00                    2639 	.db #0x00	; 0
      000946 00                    2640 	.db #0x00	; 0
      000947 00                    2641 	.db #0x00	; 0
      000948 00                    2642 	.db #0x00	; 0
      000949 00                    2643 	.db #0x00	; 0
      00094A 00                    2644 	.db #0x00	; 0
      00094B 40                    2645 	.db #0x40	; 64
      00094C 40                    2646 	.db #0x40	; 64
      00094D 60                    2647 	.db #0x60	; 96
      00094E 60                    2648 	.db #0x60	; 96
      00094F 00                    2649 	.db #0x00	; 0
      000950 00                    2650 	.db #0x00	; 0
      000951 00                    2651 	.db #0x00	; 0
      000952 00                    2652 	.db #0x00	; 0
      000953 00                    2653 	.db #0x00	; 0
      000954 00                    2654 	.db #0x00	; 0
      000955 00                    2655 	.db #0x00	; 0
      000956 00                    2656 	.db #0x00	; 0
      000957 00                    2657 	.db #0x00	; 0
      000958 00                    2658 	.db #0x00	; 0
      000959 00                    2659 	.db #0x00	; 0
      00095A 00                    2660 	.db #0x00	; 0
      00095B 00                    2661 	.db #0x00	; 0
      00095C 00                    2662 	.db #0x00	; 0
      00095D 00                    2663 	.db #0x00	; 0
      00095E 00                    2664 	.db #0x00	; 0
      00095F 00                    2665 	.db #0x00	; 0
      000960 00                    2666 	.db #0x00	; 0
      000961 00                    2667 	.db #0x00	; 0
      000962 00                    2668 	.db #0x00	; 0
      000963 00                    2669 	.db #0x00	; 0
      000964 00                    2670 	.db #0x00	; 0
      000965 04                    2671 	.db #0x04	; 4
      000966 04                    2672 	.db #0x04	; 4
      000967 06                    2673 	.db #0x06	; 6
      000968 06                    2674 	.db #0x06	; 6
      000969 00                    2675 	.db #0x00	; 0
      00096A 00                    2676 	.db #0x00	; 0
      00096B 02                    2677 	.db #0x02	; 2
      00096C 02                    2678 	.db #0x02	; 2
      00096D 02                    2679 	.db #0x02	; 2
      00096E 02                    2680 	.db #0x02	; 2
      00096F 00                    2681 	.db #0x00	; 0
      000970 00                    2682 	.db #0x00	; 0
      000971 00                    2683 	.db #0x00	; 0
      000972 00                    2684 	.db #0x00	; 0
      000973 00                    2685 	.db #0x00	; 0
      000974 00                    2686 	.db #0x00	; 0
      000975 00                    2687 	.db #0x00	; 0
      000976 00                    2688 	.db #0x00	; 0
      000977 00                    2689 	.db #0x00	; 0
      000978 00                    2690 	.db #0x00	; 0
      000979 00                    2691 	.db #0x00	; 0
      00097A 00                    2692 	.db #0x00	; 0
      00097B 00                    2693 	.db #0x00	; 0
      00097C 00                    2694 	.db #0x00	; 0
      00097D 00                    2695 	.db #0x00	; 0
      00097E 00                    2696 	.db #0x00	; 0
      00097F 00                    2697 	.db #0x00	; 0
      000980 00                    2698 	.db #0x00	; 0
      000981 00                    2699 	.db #0x00	; 0
      000982 00                    2700 	.db #0x00	; 0
      000983 00                    2701 	.db #0x00	; 0
      000984 00                    2702 	.db #0x00	; 0
      000985 00                    2703 	.db #0x00	; 0
      000986 00                    2704 	.db #0x00	; 0
      000987 00                    2705 	.db #0x00	; 0
      000988 00                    2706 	.db #0x00	; 0
      000989                       2707 _Ex2:
      000989 00                    2708 	.db #0x00	; 0
      00098A 00                    2709 	.db #0x00	; 0
      00098B 00                    2710 	.db #0x00	; 0
      00098C 00                    2711 	.db #0x00	; 0
      00098D 00                    2712 	.db #0x00	; 0
      00098E 00                    2713 	.db #0x00	; 0
      00098F 01                    2714 	.db #0x01	; 1
      000990 01                    2715 	.db #0x01	; 1
      000991 03                    2716 	.db #0x03	; 3
      000992 03                    2717 	.db #0x03	; 3
      000993 03                    2718 	.db #0x03	; 3
      000994 03                    2719 	.db #0x03	; 3
      000995 00                    2720 	.db #0x00	; 0
      000996 00                    2721 	.db #0x00	; 0
      000997 06                    2722 	.db #0x06	; 6
      000998 06                    2723 	.db #0x06	; 6
      000999 0E                    2724 	.db #0x0e	; 14
      00099A 0E                    2725 	.db #0x0e	; 14
      00099B 0E                    2726 	.db #0x0e	; 14
      00099C 0E                    2727 	.db #0x0e	; 14
      00099D 00                    2728 	.db #0x00	; 0
      00099E 00                    2729 	.db #0x00	; 0
      00099F 00                    2730 	.db #0x00	; 0
      0009A0 00                    2731 	.db #0x00	; 0
      0009A1 00                    2732 	.db #0x00	; 0
      0009A2 00                    2733 	.db #0x00	; 0
      0009A3 00                    2734 	.db #0x00	; 0
      0009A4 00                    2735 	.db #0x00	; 0
      0009A5 00                    2736 	.db #0x00	; 0
      0009A6 00                    2737 	.db #0x00	; 0
      0009A7 00                    2738 	.db #0x00	; 0
      0009A8 00                    2739 	.db #0x00	; 0
      0009A9 00                    2740 	.db #0x00	; 0
      0009AA 00                    2741 	.db #0x00	; 0
      0009AB 00                    2742 	.db #0x00	; 0
      0009AC 00                    2743 	.db #0x00	; 0
      0009AD 00                    2744 	.db #0x00	; 0
      0009AE 00                    2745 	.db #0x00	; 0
      0009AF 80                    2746 	.db #0x80	; 128
      0009B0 80                    2747 	.db #0x80	; 128
      0009B1 80                    2748 	.db #0x80	; 128
      0009B2 80                    2749 	.db #0x80	; 128
      0009B3 00                    2750 	.db #0x00	; 0
      0009B4 00                    2751 	.db #0x00	; 0
      0009B5 60                    2752 	.db #0x60	; 96
      0009B6 60                    2753 	.db #0x60	; 96
      0009B7 60                    2754 	.db #0x60	; 96
      0009B8 60                    2755 	.db #0x60	; 96
      0009B9 00                    2756 	.db #0x00	; 0
      0009BA 00                    2757 	.db #0x00	; 0
      0009BB C0                    2758 	.db #0xc0	; 192
      0009BC C0                    2759 	.db #0xc0	; 192
      0009BD C0                    2760 	.db #0xc0	; 192
      0009BE C0                    2761 	.db #0xc0	; 192
      0009BF C0                    2762 	.db #0xc0	; 192
      0009C0 C0                    2763 	.db #0xc0	; 192
      0009C1 00                    2764 	.db #0x00	; 0
      0009C2 00                    2765 	.db #0x00	; 0
      0009C3 00                    2766 	.db #0x00	; 0
      0009C4 00                    2767 	.db #0x00	; 0
      0009C5 00                    2768 	.db #0x00	; 0
      0009C6 00                    2769 	.db #0x00	; 0
      0009C7 00                    2770 	.db #0x00	; 0
      0009C8 00                    2771 	.db #0x00	; 0
      0009C9 00                    2772 	.db #0x00	; 0
      0009CA 00                    2773 	.db #0x00	; 0
      0009CB 00                    2774 	.db #0x00	; 0
      0009CC 00                    2775 	.db #0x00	; 0
      0009CD 03                    2776 	.db #0x03	; 3
      0009CE 03                    2777 	.db #0x03	; 3
      0009CF 03                    2778 	.db #0x03	; 3
      0009D0 03                    2779 	.db #0x03	; 3
      0009D1 03                    2780 	.db #0x03	; 3
      0009D2 03                    2781 	.db #0x03	; 3
      0009D3 01                    2782 	.db #0x01	; 1
      0009D4 01                    2783 	.db #0x01	; 1
      0009D5 00                    2784 	.db #0x00	; 0
      0009D6 00                    2785 	.db #0x00	; 0
      0009D7 00                    2786 	.db #0x00	; 0
      0009D8 00                    2787 	.db #0x00	; 0
      0009D9 00                    2788 	.db #0x00	; 0
      0009DA 00                    2789 	.db #0x00	; 0
      0009DB 1C                    2790 	.db #0x1c	; 28
      0009DC 1C                    2791 	.db #0x1c	; 28
      0009DD 3C                    2792 	.db #0x3c	; 60
      0009DE 3C                    2793 	.db #0x3c	; 60
      0009DF 3C                    2794 	.db #0x3c	; 60
      0009E0 3C                    2795 	.db #0x3c	; 60
      0009E1 30                    2796 	.db #0x30	; 48	'0'
      0009E2 30                    2797 	.db #0x30	; 48	'0'
      0009E3 00                    2798 	.db #0x00	; 0
      0009E4 00                    2799 	.db #0x00	; 0
      0009E5 00                    2800 	.db #0x00	; 0
      0009E6 00                    2801 	.db #0x00	; 0
      0009E7 00                    2802 	.db #0x00	; 0
      0009E8 00                    2803 	.db #0x00	; 0
      0009E9 00                    2804 	.db #0x00	; 0
      0009EA 00                    2805 	.db #0x00	; 0
      0009EB 00                    2806 	.db #0x00	; 0
      0009EC 00                    2807 	.db #0x00	; 0
      0009ED 80                    2808 	.db #0x80	; 128
      0009EE 80                    2809 	.db #0x80	; 128
      0009EF C0                    2810 	.db #0xc0	; 192
      0009F0 C0                    2811 	.db #0xc0	; 192
      0009F1 C0                    2812 	.db #0xc0	; 192
      0009F2 C0                    2813 	.db #0xc0	; 192
      0009F3 DE                    2814 	.db #0xde	; 222
      0009F4 DE                    2815 	.db #0xde	; 222
      0009F5 9E                    2816 	.db #0x9e	; 158
      0009F6 9E                    2817 	.db #0x9e	; 158
      0009F7 0E                    2818 	.db #0x0e	; 14
      0009F8 0E                    2819 	.db #0x0e	; 14
      0009F9 00                    2820 	.db #0x00	; 0
      0009FA 00                    2821 	.db #0x00	; 0
      0009FB 00                    2822 	.db #0x00	; 0
      0009FC 00                    2823 	.db #0x00	; 0
      0009FD 38                    2824 	.db #0x38	; 56	'8'
      0009FE 38                    2825 	.db #0x38	; 56	'8'
      0009FF 3C                    2826 	.db #0x3c	; 60
      000A00 3C                    2827 	.db #0x3c	; 60
      000A01 3C                    2828 	.db #0x3c	; 60
      000A02 3C                    2829 	.db #0x3c	; 60
      000A03 3C                    2830 	.db #0x3c	; 60
      000A04 3C                    2831 	.db #0x3c	; 60
      000A05 1C                    2832 	.db #0x1c	; 28
      000A06 1C                    2833 	.db #0x1c	; 28
      000A07 00                    2834 	.db #0x00	; 0
      000A08 00                    2835 	.db #0x00	; 0
      000A09 00                    2836 	.db #0x00	; 0
      000A0A 00                    2837 	.db #0x00	; 0
      000A0B 04                    2838 	.db #0x04	; 4
      000A0C 04                    2839 	.db #0x04	; 4
      000A0D 07                    2840 	.db #0x07	; 7
      000A0E 07                    2841 	.db #0x07	; 7
      000A0F 07                    2842 	.db #0x07	; 7
      000A10 07                    2843 	.db #0x07	; 7
      000A11 00                    2844 	.db #0x00	; 0
      000A12 00                    2845 	.db #0x00	; 0
      000A13 00                    2846 	.db #0x00	; 0
      000A14 00                    2847 	.db #0x00	; 0
      000A15 00                    2848 	.db #0x00	; 0
      000A16 00                    2849 	.db #0x00	; 0
      000A17 00                    2850 	.db #0x00	; 0
      000A18 00                    2851 	.db #0x00	; 0
      000A19 00                    2852 	.db #0x00	; 0
      000A1A 00                    2853 	.db #0x00	; 0
      000A1B 00                    2854 	.db #0x00	; 0
      000A1C 00                    2855 	.db #0x00	; 0
      000A1D 00                    2856 	.db #0x00	; 0
      000A1E 00                    2857 	.db #0x00	; 0
      000A1F 00                    2858 	.db #0x00	; 0
      000A20 00                    2859 	.db #0x00	; 0
      000A21 38                    2860 	.db #0x38	; 56	'8'
      000A22 38                    2861 	.db #0x38	; 56	'8'
      000A23 18                    2862 	.db #0x18	; 24
      000A24 18                    2863 	.db #0x18	; 24
      000A25 00                    2864 	.db #0x00	; 0
      000A26 00                    2865 	.db #0x00	; 0
      000A27 00                    2866 	.db #0x00	; 0
      000A28 00                    2867 	.db #0x00	; 0
      000A29 00                    2868 	.db #0x00	; 0
      000A2A 00                    2869 	.db #0x00	; 0
      000A2B 00                    2870 	.db #0x00	; 0
      000A2C 00                    2871 	.db #0x00	; 0
      000A2D 00                    2872 	.db #0x00	; 0
      000A2E 00                    2873 	.db #0x00	; 0
      000A2F 00                    2874 	.db #0x00	; 0
      000A30 00                    2875 	.db #0x00	; 0
      000A31 00                    2876 	.db #0x00	; 0
      000A32 00                    2877 	.db #0x00	; 0
      000A33 0C                    2878 	.db #0x0c	; 12
      000A34 0C                    2879 	.db #0x0c	; 12
      000A35 0E                    2880 	.db #0x0e	; 14
      000A36 0E                    2881 	.db #0x0e	; 14
      000A37 06                    2882 	.db #0x06	; 6
      000A38 06                    2883 	.db #0x06	; 6
      000A39 00                    2884 	.db #0x00	; 0
      000A3A 00                    2885 	.db #0x00	; 0
      000A3B 00                    2886 	.db #0x00	; 0
      000A3C 00                    2887 	.db #0x00	; 0
      000A3D 00                    2888 	.db #0x00	; 0
      000A3E 00                    2889 	.db #0x00	; 0
      000A3F 00                    2890 	.db #0x00	; 0
      000A40 00                    2891 	.db #0x00	; 0
      000A41 06                    2892 	.db #0x06	; 6
      000A42 06                    2893 	.db #0x06	; 6
      000A43 0E                    2894 	.db #0x0e	; 14
      000A44 0E                    2895 	.db #0x0e	; 14
      000A45 04                    2896 	.db #0x04	; 4
      000A46 04                    2897 	.db #0x04	; 4
      000A47 00                    2898 	.db #0x00	; 0
      000A48 00                    2899 	.db #0x00	; 0
      000A49 0E                    2900 	.db #0x0e	; 14
      000A4A 0E                    2901 	.db #0x0e	; 14
      000A4B 04                    2902 	.db #0x04	; 4
      000A4C 04                    2903 	.db #0x04	; 4
      000A4D 00                    2904 	.db #0x00	; 0
      000A4E 00                    2905 	.db #0x00	; 0
      000A4F 00                    2906 	.db #0x00	; 0
      000A50 00                    2907 	.db #0x00	; 0
      000A51 00                    2908 	.db #0x00	; 0
      000A52 00                    2909 	.db #0x00	; 0
      000A53 00                    2910 	.db #0x00	; 0
      000A54 00                    2911 	.db #0x00	; 0
      000A55 00                    2912 	.db #0x00	; 0
      000A56 00                    2913 	.db #0x00	; 0
      000A57 00                    2914 	.db #0x00	; 0
      000A58 00                    2915 	.db #0x00	; 0
      000A59 00                    2916 	.db #0x00	; 0
      000A5A 00                    2917 	.db #0x00	; 0
      000A5B 00                    2918 	.db #0x00	; 0
      000A5C 00                    2919 	.db #0x00	; 0
      000A5D 00                    2920 	.db #0x00	; 0
      000A5E 00                    2921 	.db #0x00	; 0
      000A5F 00                    2922 	.db #0x00	; 0
      000A60 00                    2923 	.db #0x00	; 0
      000A61 20                    2924 	.db #0x20	; 32
      000A62 20                    2925 	.db #0x20	; 32
      000A63 30                    2926 	.db #0x30	; 48	'0'
      000A64 30                    2927 	.db #0x30	; 48	'0'
      000A65 00                    2928 	.db #0x00	; 0
      000A66 00                    2929 	.db #0x00	; 0
      000A67 00                    2930 	.db #0x00	; 0
      000A68 00                    2931 	.db #0x00	; 0
      000A69 00                    2932 	.db #0x00	; 0
      000A6A 00                    2933 	.db #0x00	; 0
      000A6B 00                    2934 	.db #0x00	; 0
      000A6C 00                    2935 	.db #0x00	; 0
      000A6D 00                    2936 	.db #0x00	; 0
      000A6E 00                    2937 	.db #0x00	; 0
      000A6F 00                    2938 	.db #0x00	; 0
      000A70 00                    2939 	.db #0x00	; 0
      000A71 00                    2940 	.db #0x00	; 0
      000A72 00                    2941 	.db #0x00	; 0
      000A73 00                    2942 	.db #0x00	; 0
      000A74 00                    2943 	.db #0x00	; 0
      000A75 04                    2944 	.db #0x04	; 4
      000A76 04                    2945 	.db #0x04	; 4
      000A77 03                    2946 	.db #0x03	; 3
      000A78 03                    2947 	.db #0x03	; 3
      000A79 00                    2948 	.db #0x00	; 0
      000A7A 00                    2949 	.db #0x00	; 0
      000A7B 00                    2950 	.db #0x00	; 0
      000A7C 00                    2951 	.db #0x00	; 0
      000A7D 00                    2952 	.db #0x00	; 0
      000A7E 00                    2953 	.db #0x00	; 0
      000A7F 00                    2954 	.db #0x00	; 0
      000A80 00                    2955 	.db #0x00	; 0
      000A81 00                    2956 	.db #0x00	; 0
      000A82 00                    2957 	.db #0x00	; 0
      000A83 02                    2958 	.db #0x02	; 2
      000A84 02                    2959 	.db #0x02	; 2
      000A85 02                    2960 	.db #0x02	; 2
      000A86 02                    2961 	.db #0x02	; 2
      000A87 00                    2962 	.db #0x00	; 0
      000A88 00                    2963 	.db #0x00	; 0
      000A89                       2964 _Ex3:
      000A89 00                    2965 	.db #0x00	; 0
      000A8A 00                    2966 	.db #0x00	; 0
      000A8B 00                    2967 	.db #0x00	; 0
      000A8C 00                    2968 	.db #0x00	; 0
      000A8D 00                    2969 	.db #0x00	; 0
      000A8E 00                    2970 	.db #0x00	; 0
      000A8F 00                    2971 	.db #0x00	; 0
      000A90 00                    2972 	.db #0x00	; 0
      000A91 00                    2973 	.db #0x00	; 0
      000A92 00                    2974 	.db #0x00	; 0
      000A93 00                    2975 	.db #0x00	; 0
      000A94 00                    2976 	.db #0x00	; 0
      000A95 02                    2977 	.db #0x02	; 2
      000A96 02                    2978 	.db #0x02	; 2
      000A97 07                    2979 	.db #0x07	; 7
      000A98 07                    2980 	.db #0x07	; 7
      000A99 02                    2981 	.db #0x02	; 2
      000A9A 02                    2982 	.db #0x02	; 2
      000A9B 00                    2983 	.db #0x00	; 0
      000A9C 00                    2984 	.db #0x00	; 0
      000A9D 00                    2985 	.db #0x00	; 0
      000A9E 00                    2986 	.db #0x00	; 0
      000A9F 00                    2987 	.db #0x00	; 0
      000AA0 00                    2988 	.db #0x00	; 0
      000AA1 00                    2989 	.db #0x00	; 0
      000AA2 00                    2990 	.db #0x00	; 0
      000AA3 00                    2991 	.db #0x00	; 0
      000AA4 00                    2992 	.db #0x00	; 0
      000AA5 00                    2993 	.db #0x00	; 0
      000AA6 00                    2994 	.db #0x00	; 0
      000AA7 00                    2995 	.db #0x00	; 0
      000AA8 00                    2996 	.db #0x00	; 0
      000AA9 00                    2997 	.db #0x00	; 0
      000AAA 00                    2998 	.db #0x00	; 0
      000AAB 00                    2999 	.db #0x00	; 0
      000AAC 00                    3000 	.db #0x00	; 0
      000AAD 00                    3001 	.db #0x00	; 0
      000AAE 00                    3002 	.db #0x00	; 0
      000AAF 00                    3003 	.db #0x00	; 0
      000AB0 00                    3004 	.db #0x00	; 0
      000AB1 00                    3005 	.db #0x00	; 0
      000AB2 00                    3006 	.db #0x00	; 0
      000AB3 00                    3007 	.db #0x00	; 0
      000AB4 00                    3008 	.db #0x00	; 0
      000AB5 20                    3009 	.db #0x20	; 32
      000AB6 20                    3010 	.db #0x20	; 32
      000AB7 70                    3011 	.db #0x70	; 112	'p'
      000AB8 70                    3012 	.db #0x70	; 112	'p'
      000AB9 20                    3013 	.db #0x20	; 32
      000ABA 20                    3014 	.db #0x20	; 32
      000ABB 00                    3015 	.db #0x00	; 0
      000ABC 00                    3016 	.db #0x00	; 0
      000ABD 00                    3017 	.db #0x00	; 0
      000ABE 00                    3018 	.db #0x00	; 0
      000ABF 00                    3019 	.db #0x00	; 0
      000AC0 00                    3020 	.db #0x00	; 0
      000AC1 00                    3021 	.db #0x00	; 0
      000AC2 00                    3022 	.db #0x00	; 0
      000AC3 00                    3023 	.db #0x00	; 0
      000AC4 00                    3024 	.db #0x00	; 0
      000AC5 00                    3025 	.db #0x00	; 0
      000AC6 00                    3026 	.db #0x00	; 0
      000AC7 00                    3027 	.db #0x00	; 0
      000AC8 00                    3028 	.db #0x00	; 0
      000AC9 00                    3029 	.db #0x00	; 0
      000ACA 00                    3030 	.db #0x00	; 0
      000ACB 00                    3031 	.db #0x00	; 0
      000ACC 00                    3032 	.db #0x00	; 0
      000ACD 00                    3033 	.db #0x00	; 0
      000ACE 00                    3034 	.db #0x00	; 0
      000ACF 00                    3035 	.db #0x00	; 0
      000AD0 00                    3036 	.db #0x00	; 0
      000AD1 00                    3037 	.db #0x00	; 0
      000AD2 00                    3038 	.db #0x00	; 0
      000AD3 10                    3039 	.db #0x10	; 16
      000AD4 10                    3040 	.db #0x10	; 16
      000AD5 38                    3041 	.db #0x38	; 56	'8'
      000AD6 38                    3042 	.db #0x38	; 56	'8'
      000AD7 3E                    3043 	.db #0x3e	; 62
      000AD8 3E                    3044 	.db #0x3e	; 62
      000AD9 18                    3045 	.db #0x18	; 24
      000ADA 18                    3046 	.db #0x18	; 24
      000ADB 00                    3047 	.db #0x00	; 0
      000ADC 00                    3048 	.db #0x00	; 0
      000ADD 00                    3049 	.db #0x00	; 0
      000ADE 00                    3050 	.db #0x00	; 0
      000ADF 00                    3051 	.db #0x00	; 0
      000AE0 00                    3052 	.db #0x00	; 0
      000AE1 00                    3053 	.db #0x00	; 0
      000AE2 00                    3054 	.db #0x00	; 0
      000AE3 00                    3055 	.db #0x00	; 0
      000AE4 00                    3056 	.db #0x00	; 0
      000AE5 00                    3057 	.db #0x00	; 0
      000AE6 00                    3058 	.db #0x00	; 0
      000AE7 00                    3059 	.db #0x00	; 0
      000AE8 00                    3060 	.db #0x00	; 0
      000AE9 00                    3061 	.db #0x00	; 0
      000AEA 00                    3062 	.db #0x00	; 0
      000AEB 00                    3063 	.db #0x00	; 0
      000AEC 00                    3064 	.db #0x00	; 0
      000AED 00                    3065 	.db #0x00	; 0
      000AEE 00                    3066 	.db #0x00	; 0
      000AEF 00                    3067 	.db #0x00	; 0
      000AF0 00                    3068 	.db #0x00	; 0
      000AF1 00                    3069 	.db #0x00	; 0
      000AF2 00                    3070 	.db #0x00	; 0
      000AF3 00                    3071 	.db #0x00	; 0
      000AF4 00                    3072 	.db #0x00	; 0
      000AF5 1C                    3073 	.db #0x1c	; 28
      000AF6 1C                    3074 	.db #0x1c	; 28
      000AF7 7C                    3075 	.db #0x7c	; 124
      000AF8 7C                    3076 	.db #0x7c	; 124
      000AF9 1C                    3077 	.db #0x1c	; 28
      000AFA 1C                    3078 	.db #0x1c	; 28
      000AFB 08                    3079 	.db #0x08	; 8
      000AFC 08                    3080 	.db #0x08	; 8
      000AFD 00                    3081 	.db #0x00	; 0
      000AFE 00                    3082 	.db #0x00	; 0
      000AFF 00                    3083 	.db #0x00	; 0
      000B00 00                    3084 	.db #0x00	; 0
      000B01 00                    3085 	.db #0x00	; 0
      000B02 00                    3086 	.db #0x00	; 0
      000B03 00                    3087 	.db #0x00	; 0
      000B04 00                    3088 	.db #0x00	; 0
      000B05 00                    3089 	.db #0x00	; 0
      000B06 00                    3090 	.db #0x00	; 0
      000B07 00                    3091 	.db #0x00	; 0
      000B08 00                    3092 	.db #0x00	; 0
      000B09 00                    3093 	.db #0x00	; 0
      000B0A 00                    3094 	.db #0x00	; 0
      000B0B 00                    3095 	.db #0x00	; 0
      000B0C 00                    3096 	.db #0x00	; 0
      000B0D 00                    3097 	.db #0x00	; 0
      000B0E 00                    3098 	.db #0x00	; 0
      000B0F 00                    3099 	.db #0x00	; 0
      000B10 00                    3100 	.db #0x00	; 0
      000B11 00                    3101 	.db #0x00	; 0
      000B12 00                    3102 	.db #0x00	; 0
      000B13 00                    3103 	.db #0x00	; 0
      000B14 00                    3104 	.db #0x00	; 0
      000B15 28                    3105 	.db #0x28	; 40
      000B16 28                    3106 	.db #0x28	; 40
      000B17 30                    3107 	.db #0x30	; 48	'0'
      000B18 30                    3108 	.db #0x30	; 48	'0'
      000B19 38                    3109 	.db #0x38	; 56	'8'
      000B1A 38                    3110 	.db #0x38	; 56	'8'
      000B1B 10                    3111 	.db #0x10	; 16
      000B1C 10                    3112 	.db #0x10	; 16
      000B1D 00                    3113 	.db #0x00	; 0
      000B1E 00                    3114 	.db #0x00	; 0
      000B1F 00                    3115 	.db #0x00	; 0
      000B20 00                    3116 	.db #0x00	; 0
      000B21 00                    3117 	.db #0x00	; 0
      000B22 00                    3118 	.db #0x00	; 0
      000B23 00                    3119 	.db #0x00	; 0
      000B24 00                    3120 	.db #0x00	; 0
      000B25 00                    3121 	.db #0x00	; 0
      000B26 00                    3122 	.db #0x00	; 0
      000B27 00                    3123 	.db #0x00	; 0
      000B28 00                    3124 	.db #0x00	; 0
      000B29 00                    3125 	.db #0x00	; 0
      000B2A 00                    3126 	.db #0x00	; 0
      000B2B 00                    3127 	.db #0x00	; 0
      000B2C 00                    3128 	.db #0x00	; 0
      000B2D 00                    3129 	.db #0x00	; 0
      000B2E 00                    3130 	.db #0x00	; 0
      000B2F 00                    3131 	.db #0x00	; 0
      000B30 00                    3132 	.db #0x00	; 0
      000B31 00                    3133 	.db #0x00	; 0
      000B32 00                    3134 	.db #0x00	; 0
      000B33 00                    3135 	.db #0x00	; 0
      000B34 00                    3136 	.db #0x00	; 0
      000B35 04                    3137 	.db #0x04	; 4
      000B36 04                    3138 	.db #0x04	; 4
      000B37 0E                    3139 	.db #0x0e	; 14
      000B38 0E                    3140 	.db #0x0e	; 14
      000B39 0E                    3141 	.db #0x0e	; 14
      000B3A 0E                    3142 	.db #0x0e	; 14
      000B3B 00                    3143 	.db #0x00	; 0
      000B3C 00                    3144 	.db #0x00	; 0
      000B3D 00                    3145 	.db #0x00	; 0
      000B3E 00                    3146 	.db #0x00	; 0
      000B3F 00                    3147 	.db #0x00	; 0
      000B40 00                    3148 	.db #0x00	; 0
      000B41 00                    3149 	.db #0x00	; 0
      000B42 00                    3150 	.db #0x00	; 0
      000B43 00                    3151 	.db #0x00	; 0
      000B44 00                    3152 	.db #0x00	; 0
      000B45 00                    3153 	.db #0x00	; 0
      000B46 00                    3154 	.db #0x00	; 0
      000B47 00                    3155 	.db #0x00	; 0
      000B48 00                    3156 	.db #0x00	; 0
      000B49 00                    3157 	.db #0x00	; 0
      000B4A 00                    3158 	.db #0x00	; 0
      000B4B 00                    3159 	.db #0x00	; 0
      000B4C 00                    3160 	.db #0x00	; 0
      000B4D 00                    3161 	.db #0x00	; 0
      000B4E 00                    3162 	.db #0x00	; 0
      000B4F 00                    3163 	.db #0x00	; 0
      000B50 00                    3164 	.db #0x00	; 0
      000B51 00                    3165 	.db #0x00	; 0
      000B52 00                    3166 	.db #0x00	; 0
      000B53 00                    3167 	.db #0x00	; 0
      000B54 00                    3168 	.db #0x00	; 0
      000B55 00                    3169 	.db #0x00	; 0
      000B56 00                    3170 	.db #0x00	; 0
      000B57 60                    3171 	.db #0x60	; 96
      000B58 60                    3172 	.db #0x60	; 96
      000B59 40                    3173 	.db #0x40	; 64
      000B5A 40                    3174 	.db #0x40	; 64
      000B5B 00                    3175 	.db #0x00	; 0
      000B5C 00                    3176 	.db #0x00	; 0
      000B5D 00                    3177 	.db #0x00	; 0
      000B5E 00                    3178 	.db #0x00	; 0
      000B5F 00                    3179 	.db #0x00	; 0
      000B60 00                    3180 	.db #0x00	; 0
      000B61 00                    3181 	.db #0x00	; 0
      000B62 00                    3182 	.db #0x00	; 0
      000B63 00                    3183 	.db #0x00	; 0
      000B64 00                    3184 	.db #0x00	; 0
      000B65 00                    3185 	.db #0x00	; 0
      000B66 00                    3186 	.db #0x00	; 0
      000B67 00                    3187 	.db #0x00	; 0
      000B68 00                    3188 	.db #0x00	; 0
      000B69 00                    3189 	.db #0x00	; 0
      000B6A 00                    3190 	.db #0x00	; 0
      000B6B 00                    3191 	.db #0x00	; 0
      000B6C 00                    3192 	.db #0x00	; 0
      000B6D 00                    3193 	.db #0x00	; 0
      000B6E 00                    3194 	.db #0x00	; 0
      000B6F 00                    3195 	.db #0x00	; 0
      000B70 00                    3196 	.db #0x00	; 0
      000B71 00                    3197 	.db #0x00	; 0
      000B72 00                    3198 	.db #0x00	; 0
      000B73 00                    3199 	.db #0x00	; 0
      000B74 00                    3200 	.db #0x00	; 0
      000B75 00                    3201 	.db #0x00	; 0
      000B76 00                    3202 	.db #0x00	; 0
      000B77 02                    3203 	.db #0x02	; 2
      000B78 02                    3204 	.db #0x02	; 2
      000B79 02                    3205 	.db #0x02	; 2
      000B7A 02                    3206 	.db #0x02	; 2
      000B7B 00                    3207 	.db #0x00	; 0
      000B7C 00                    3208 	.db #0x00	; 0
      000B7D 00                    3209 	.db #0x00	; 0
      000B7E 00                    3210 	.db #0x00	; 0
      000B7F 00                    3211 	.db #0x00	; 0
      000B80 00                    3212 	.db #0x00	; 0
      000B81 00                    3213 	.db #0x00	; 0
      000B82 00                    3214 	.db #0x00	; 0
      000B83 00                    3215 	.db #0x00	; 0
      000B84 00                    3216 	.db #0x00	; 0
      000B85 00                    3217 	.db #0x00	; 0
      000B86 00                    3218 	.db #0x00	; 0
      000B87 00                    3219 	.db #0x00	; 0
      000B88 00                    3220 	.db #0x00	; 0
      000B89                       3221 _BLANKSIZE:
      000B89 03                    3222 	.db #0x03	; 3
      000B8A                       3223 _BLANK:
      000B8A 26                    3224 	.db #0x26	; 38
      000B8B 2B                    3225 	.db #0x2b	; 43
      000B8C 2C                    3226 	.db #0x2c	; 44
      000B8D                       3227 _EMPTYSPRITE:
      000B8D 50                    3228 	.db #0x50	; 80	'P'
      000B8E                       3229 _ENEMYCOUNT:
      000B8E 05                    3230 	.db #0x05	; 5
      000B8F                       3231 _xSpawnPositions:
      000B8F 00                    3232 	.db #0x00	; 0
      000B90 60                    3233 	.db #0x60	; 96
      000B91 B0                    3234 	.db #0xb0	; 176
      000B92 00                    3235 	.db #0x00	; 0
      000B93 B0                    3236 	.db #0xb0	; 176
      000B94 00                    3237 	.db #0x00	; 0
      000B95 60                    3238 	.db #0x60	; 96
      000B96 B0                    3239 	.db #0xb0	; 176
      000B97                       3240 _ySpawnPositions:
      000B97 00                    3241 	.db #0x00	; 0
      000B98 00                    3242 	.db #0x00	; 0
      000B99 00                    3243 	.db #0x00	; 0
      000B9A 5C                    3244 	.db #0x5c	; 92
      000B9B 5C                    3245 	.db #0x5c	; 92
      000B9C A0                    3246 	.db #0xa0	; 160
      000B9D A0                    3247 	.db #0xa0	; 160
      000B9E A0                    3248 	.db #0xa0	; 160
      000B9F                       3249 _PROJECTILECOUNT:
      000B9F 05                    3250 	.db #0x05	; 5
      000BA0                       3251 _PLAYERSIZE:
      000BA0 10                    3252 	.db #0x10	; 16
      000BA1                       3253 _maxHull:
      000BA1 64                    3254 	.db #0x64	;  100	'd'
      000BA2                       3255 _maxShield:
      000BA2 64                    3256 	.db #0x64	;  100	'd'
      000BA3                       3257 _MAXGUNLEVEL:
      000BA3 01                    3258 	.db #0x01	; 1
      000BA4                       3259 _SPLASHDROPOFF:
      000BA4 01                    3260 	.db #0x01	; 1
      000BA5                       3261 _EXPLFRAMETIME:
      000BA5 0A                    3262 	.db #0x0a	; 10
                                   3263 ;src/main.c:154: void setHealthBar(uint8_t row, uint8_t hp) {
                                   3264 ;	---------------------------------
                                   3265 ; Function setHealthBar
                                   3266 ; ---------------------------------
      000BA6                       3267 _setHealthBar::
      000BA6 E8 FB                 3268 	add	sp, #-5
                                   3269 ;src/main.c:156: if (hp >= 80) {
      000BA8 F8 08                 3270 	ldhl	sp,	#8
      000BAA 7E                    3271 	ld	a, (hl)
      000BAB D6 50                 3272 	sub	a, #0x50
      000BAD 38 31                 3273 	jr	C, 00102$
                                   3274 ;src/main.c:157: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000BAF F8 00                 3275 	ldhl	sp,	#0
      000BB1 4D                    3276 	ld	c, l
      000BB2 44                    3277 	ld	b, h
      000BB3 36 50                 3278 	ld	(hl), #0x50
      000BB5 69                    3279 	ld	l, c
                                   3280 ;	spillPairReg hl
                                   3281 ;	spillPairReg hl
      000BB6 60                    3282 	ld	h, b
                                   3283 ;	spillPairReg hl
                                   3284 ;	spillPairReg hl
      000BB7 23                    3285 	inc	hl
      000BB8 36 50                 3286 	ld	(hl), #0x50
      000BBA 69                    3287 	ld	l, c
                                   3288 ;	spillPairReg hl
                                   3289 ;	spillPairReg hl
      000BBB 60                    3290 	ld	h, b
                                   3291 ;	spillPairReg hl
                                   3292 ;	spillPairReg hl
      000BBC 23                    3293 	inc	hl
      000BBD 23                    3294 	inc	hl
      000BBE 36 50                 3295 	ld	(hl), #0x50
      000BC0 69                    3296 	ld	l, c
                                   3297 ;	spillPairReg hl
                                   3298 ;	spillPairReg hl
      000BC1 60                    3299 	ld	h, b
                                   3300 ;	spillPairReg hl
                                   3301 ;	spillPairReg hl
      000BC2 23                    3302 	inc	hl
      000BC3 23                    3303 	inc	hl
      000BC4 23                    3304 	inc	hl
      000BC5 36 50                 3305 	ld	(hl), #0x50
      000BC7 21 04 00              3306 	ld	hl, #0x0004
      000BCA 09                    3307 	add	hl, bc
      000BCB 36 50                 3308 	ld	(hl), #0x50
                                   3309 ;src/main.c:158: set_win_tiles(5,row,5,1,blockmap);
      000BCD C5                    3310 	push	bc
      000BCE 21 05 01              3311 	ld	hl, #0x105
      000BD1 E5                    3312 	push	hl
      000BD2 F8 0B                 3313 	ldhl	sp,	#11
      000BD4 66                    3314 	ld	h, (hl)
      000BD5 2E 05                 3315 	ld	l, #0x05
      000BD7 E5                    3316 	push	hl
      000BD8 CDr00r00              3317 	call	_set_win_tiles
      000BDB E8 06                 3318 	add	sp, #6
                                   3319 ;src/main.c:159: return;
      000BDD C3rB4r0C              3320 	jp	00109$
      000BE0                       3321 00102$:
                                   3322 ;src/main.c:161: if (hp >= 60) {
      000BE0 F8 08                 3323 	ldhl	sp,	#8
      000BE2 7E                    3324 	ld	a, (hl)
      000BE3 D6 3C                 3325 	sub	a, #0x3c
      000BE5 38 31                 3326 	jr	C, 00104$
                                   3327 ;src/main.c:162: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000BE7 F8 00                 3328 	ldhl	sp,	#0
      000BE9 4D                    3329 	ld	c, l
      000BEA 44                    3330 	ld	b, h
      000BEB 36 50                 3331 	ld	(hl), #0x50
      000BED 69                    3332 	ld	l, c
                                   3333 ;	spillPairReg hl
                                   3334 ;	spillPairReg hl
      000BEE 60                    3335 	ld	h, b
                                   3336 ;	spillPairReg hl
                                   3337 ;	spillPairReg hl
      000BEF 23                    3338 	inc	hl
      000BF0 36 50                 3339 	ld	(hl), #0x50
      000BF2 69                    3340 	ld	l, c
                                   3341 ;	spillPairReg hl
                                   3342 ;	spillPairReg hl
      000BF3 60                    3343 	ld	h, b
                                   3344 ;	spillPairReg hl
                                   3345 ;	spillPairReg hl
      000BF4 23                    3346 	inc	hl
      000BF5 23                    3347 	inc	hl
      000BF6 36 50                 3348 	ld	(hl), #0x50
      000BF8 69                    3349 	ld	l, c
                                   3350 ;	spillPairReg hl
                                   3351 ;	spillPairReg hl
      000BF9 60                    3352 	ld	h, b
                                   3353 ;	spillPairReg hl
                                   3354 ;	spillPairReg hl
      000BFA 23                    3355 	inc	hl
      000BFB 23                    3356 	inc	hl
      000BFC 23                    3357 	inc	hl
      000BFD 36 50                 3358 	ld	(hl), #0x50
      000BFF 21 04 00              3359 	ld	hl, #0x0004
      000C02 09                    3360 	add	hl, bc
      000C03 36 00                 3361 	ld	(hl), #0x00
                                   3362 ;src/main.c:163: set_win_tiles(5,row,5,1,blockmap);
      000C05 C5                    3363 	push	bc
      000C06 21 05 01              3364 	ld	hl, #0x105
      000C09 E5                    3365 	push	hl
      000C0A F8 0B                 3366 	ldhl	sp,	#11
      000C0C 66                    3367 	ld	h, (hl)
      000C0D 2E 05                 3368 	ld	l, #0x05
      000C0F E5                    3369 	push	hl
      000C10 CDr00r00              3370 	call	_set_win_tiles
      000C13 E8 06                 3371 	add	sp, #6
                                   3372 ;src/main.c:164: return;
      000C15 C3rB4r0C              3373 	jp	00109$
      000C18                       3374 00104$:
                                   3375 ;src/main.c:166: if (hp >= 40) {
      000C18 F8 08                 3376 	ldhl	sp,	#8
      000C1A 7E                    3377 	ld	a, (hl)
      000C1B D6 28                 3378 	sub	a, #0x28
      000C1D 38 30                 3379 	jr	C, 00106$
                                   3380 ;src/main.c:167: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000C1F F8 00                 3381 	ldhl	sp,	#0
      000C21 4D                    3382 	ld	c, l
      000C22 44                    3383 	ld	b, h
      000C23 36 50                 3384 	ld	(hl), #0x50
      000C25 69                    3385 	ld	l, c
                                   3386 ;	spillPairReg hl
                                   3387 ;	spillPairReg hl
      000C26 60                    3388 	ld	h, b
                                   3389 ;	spillPairReg hl
                                   3390 ;	spillPairReg hl
      000C27 23                    3391 	inc	hl
      000C28 36 50                 3392 	ld	(hl), #0x50
      000C2A 69                    3393 	ld	l, c
                                   3394 ;	spillPairReg hl
                                   3395 ;	spillPairReg hl
      000C2B 60                    3396 	ld	h, b
                                   3397 ;	spillPairReg hl
                                   3398 ;	spillPairReg hl
      000C2C 23                    3399 	inc	hl
      000C2D 23                    3400 	inc	hl
      000C2E 36 50                 3401 	ld	(hl), #0x50
      000C30 59                    3402 	ld	e, c
      000C31 50                    3403 	ld	d, b
      000C32 13                    3404 	inc	de
      000C33 13                    3405 	inc	de
      000C34 13                    3406 	inc	de
      000C35 AF                    3407 	xor	a, a
      000C36 12                    3408 	ld	(de), a
      000C37 21 04 00              3409 	ld	hl, #0x0004
      000C3A 09                    3410 	add	hl, bc
      000C3B 36 00                 3411 	ld	(hl), #0x00
                                   3412 ;src/main.c:168: set_win_tiles(5,row,5,1,blockmap);
      000C3D C5                    3413 	push	bc
      000C3E 21 05 01              3414 	ld	hl, #0x105
      000C41 E5                    3415 	push	hl
      000C42 F8 0B                 3416 	ldhl	sp,	#11
      000C44 66                    3417 	ld	h, (hl)
      000C45 2E 05                 3418 	ld	l, #0x05
      000C47 E5                    3419 	push	hl
      000C48 CDr00r00              3420 	call	_set_win_tiles
      000C4B E8 06                 3421 	add	sp, #6
                                   3422 ;src/main.c:169: return;
      000C4D 18 65                 3423 	jr	00109$
      000C4F                       3424 00106$:
                                   3425 ;src/main.c:171: if (hp >= 20) {
      000C4F F8 08                 3426 	ldhl	sp,	#8
      000C51 7E                    3427 	ld	a, (hl)
      000C52 D6 14                 3428 	sub	a, #0x14
      000C54 38 30                 3429 	jr	C, 00108$
                                   3430 ;src/main.c:172: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000C56 F8 00                 3431 	ldhl	sp,	#0
      000C58 4D                    3432 	ld	c, l
      000C59 44                    3433 	ld	b, h
      000C5A 36 50                 3434 	ld	(hl), #0x50
      000C5C 69                    3435 	ld	l, c
                                   3436 ;	spillPairReg hl
                                   3437 ;	spillPairReg hl
      000C5D 60                    3438 	ld	h, b
                                   3439 ;	spillPairReg hl
                                   3440 ;	spillPairReg hl
      000C5E 23                    3441 	inc	hl
      000C5F 36 50                 3442 	ld	(hl), #0x50
      000C61 59                    3443 	ld	e, c
      000C62 50                    3444 	ld	d, b
      000C63 13                    3445 	inc	de
      000C64 13                    3446 	inc	de
      000C65 AF                    3447 	xor	a, a
      000C66 12                    3448 	ld	(de), a
      000C67 59                    3449 	ld	e, c
      000C68 50                    3450 	ld	d, b
      000C69 13                    3451 	inc	de
      000C6A 13                    3452 	inc	de
      000C6B 13                    3453 	inc	de
      000C6C AF                    3454 	xor	a, a
      000C6D 12                    3455 	ld	(de), a
      000C6E 21 04 00              3456 	ld	hl, #0x0004
      000C71 09                    3457 	add	hl, bc
      000C72 36 00                 3458 	ld	(hl), #0x00
                                   3459 ;src/main.c:173: set_win_tiles(5,row,5,1,blockmap);
      000C74 C5                    3460 	push	bc
      000C75 21 05 01              3461 	ld	hl, #0x105
      000C78 E5                    3462 	push	hl
      000C79 F8 0B                 3463 	ldhl	sp,	#11
      000C7B 66                    3464 	ld	h, (hl)
      000C7C 2E 05                 3465 	ld	l, #0x05
      000C7E E5                    3466 	push	hl
      000C7F CDr00r00              3467 	call	_set_win_tiles
      000C82 E8 06                 3468 	add	sp, #6
                                   3469 ;src/main.c:174: return;
      000C84 18 2E                 3470 	jr	00109$
      000C86                       3471 00108$:
                                   3472 ;src/main.c:176: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000C86 F8 00                 3473 	ldhl	sp,	#0
      000C88 4D                    3474 	ld	c, l
      000C89 44                    3475 	ld	b, h
      000C8A 36 50                 3476 	ld	(hl), #0x50
      000C8C 59                    3477 	ld	e, c
      000C8D 50                    3478 	ld	d, b
      000C8E 13                    3479 	inc	de
      000C8F AF                    3480 	xor	a, a
      000C90 12                    3481 	ld	(de), a
      000C91 59                    3482 	ld	e, c
      000C92 50                    3483 	ld	d, b
      000C93 13                    3484 	inc	de
      000C94 13                    3485 	inc	de
      000C95 AF                    3486 	xor	a, a
      000C96 12                    3487 	ld	(de), a
      000C97 59                    3488 	ld	e, c
      000C98 50                    3489 	ld	d, b
      000C99 13                    3490 	inc	de
      000C9A 13                    3491 	inc	de
      000C9B 13                    3492 	inc	de
      000C9C AF                    3493 	xor	a, a
      000C9D 12                    3494 	ld	(de), a
      000C9E 21 04 00              3495 	ld	hl, #0x0004
      000CA1 09                    3496 	add	hl, bc
      000CA2 36 00                 3497 	ld	(hl), #0x00
                                   3498 ;src/main.c:177: set_win_tiles(5,row,5,1,blockmap);
      000CA4 C5                    3499 	push	bc
      000CA5 21 05 01              3500 	ld	hl, #0x105
      000CA8 E5                    3501 	push	hl
      000CA9 F8 0B                 3502 	ldhl	sp,	#11
      000CAB 66                    3503 	ld	h, (hl)
      000CAC 2E 05                 3504 	ld	l, #0x05
      000CAE E5                    3505 	push	hl
      000CAF CDr00r00              3506 	call	_set_win_tiles
      000CB2 E8 06                 3507 	add	sp, #6
                                   3508 ;src/main.c:178: return;
      000CB4                       3509 00109$:
                                   3510 ;src/main.c:180: }
      000CB4 E8 05                 3511 	add	sp, #5
      000CB6 C9                    3512 	ret
                                   3513 ;src/main.c:182: void updateScore() {
                                   3514 ;	---------------------------------
                                   3515 ; Function updateScore
                                   3516 ; ---------------------------------
      000CB7                       3517 _updateScore::
      000CB7 E8 F6                 3518 	add	sp, #-10
                                   3519 ;src/main.c:186: len = bcd2text(&SCORE, 0x01, buf);
      000CB9 F8 00                 3520 	ldhl	sp,	#0
      000CBB 4D                    3521 	ld	c, l
      000CBC 44                    3522 	ld	b, h
      000CBD 59                    3523 	ld	e, c
      000CBE 50                    3524 	ld	d, b
      000CBF C5                    3525 	push	bc
      000CC0 D5                    3526 	push	de
      000CC1 3E 01                 3527 	ld	a, #0x01
      000CC3 F5                    3528 	push	af
      000CC4 33                    3529 	inc	sp
      000CC5 11rB3r00              3530 	ld	de, #_SCORE
      000CC8 D5                    3531 	push	de
      000CC9 CDr00r00              3532 	call	_bcd2text
      000CCC E8 05                 3533 	add	sp, #5
      000CCE C1                    3534 	pop	bc
                                   3535 ;src/main.c:187: set_win_tiles(15, 1, 5, 1, buf+3);
      000CCF 03                    3536 	inc	bc
      000CD0 03                    3537 	inc	bc
      000CD1 03                    3538 	inc	bc
      000CD2 C5                    3539 	push	bc
      000CD3 21 05 01              3540 	ld	hl, #0x105
      000CD6 E5                    3541 	push	hl
      000CD7 21 0F 01              3542 	ld	hl, #0x10f
      000CDA E5                    3543 	push	hl
      000CDB CDr00r00              3544 	call	_set_win_tiles
                                   3545 ;src/main.c:188: }
      000CDE E8 10                 3546 	add	sp, #16
      000CE0 C9                    3547 	ret
                                   3548 ;src/main.c:190: void updateMissileCount(int8_t amount) {
                                   3549 ;	---------------------------------
                                   3550 ; Function updateMissileCount
                                   3551 ; ---------------------------------
      000CE1                       3552 _updateMissileCount::
      000CE1 E8 F6                 3553 	add	sp, #-10
                                   3554 ;src/main.c:191: if (amount == -1) {
      000CE3 F8 0C                 3555 	ldhl	sp,	#12
      000CE5 7E                    3556 	ld	a, (hl)
      000CE6 3C                    3557 	inc	a
      000CE7 20 13                 3558 	jr	NZ, 00112$
                                   3559 ;src/main.c:192: missiles--;
      000CE9 21rA8r00              3560 	ld	hl, #_missiles
      000CEC 35                    3561 	dec	(hl)
                                   3562 ;src/main.c:193: bcd_sub(&MISSILES, &INCREMENT);
      000CED 11rB7r00              3563 	ld	de, #_INCREMENT
      000CF0 D5                    3564 	push	de
      000CF1 11rA9r00              3565 	ld	de, #_MISSILES
      000CF4 D5                    3566 	push	de
      000CF5 CDr00r00              3567 	call	_bcd_sub
      000CF8 E8 04                 3568 	add	sp, #4
      000CFA 18 30                 3569 	jr	00104$
                                   3570 ;src/main.c:196: for(int8_t i=0; i<amount;i++) {
      000CFC                       3571 00112$:
      000CFC 0E 00                 3572 	ld	c, #0x00
      000CFE                       3573 00106$:
      000CFE F8 0C                 3574 	ldhl	sp,	#12
      000D00 5E                    3575 	ld	e, (hl)
      000D01 79                    3576 	ld	a,c
      000D02 57                    3577 	ld	d,a
      000D03 96                    3578 	sub	a, (hl)
      000D04 CB 7B                 3579 	bit	7, e
      000D06 28 07                 3580 	jr	Z, 00128$
      000D08 CB 7A                 3581 	bit	7, d
      000D0A 20 08                 3582 	jr	NZ, 00129$
      000D0C BF                    3583 	cp	a, a
      000D0D 18 05                 3584 	jr	00129$
      000D0F                       3585 00128$:
      000D0F CB 7A                 3586 	bit	7, d
      000D11 28 01                 3587 	jr	Z, 00129$
      000D13 37                    3588 	scf
      000D14                       3589 00129$:
      000D14 30 16                 3590 	jr	NC, 00104$
                                   3591 ;src/main.c:197: ++missiles;
      000D16 21rA8r00              3592 	ld	hl, #_missiles
      000D19 34                    3593 	inc	(hl)
                                   3594 ;src/main.c:198: bcd_add(&MISSILES, &INCREMENT);
      000D1A C5                    3595 	push	bc
      000D1B 11rB7r00              3596 	ld	de, #_INCREMENT
      000D1E D5                    3597 	push	de
      000D1F 11rA9r00              3598 	ld	de, #_MISSILES
      000D22 D5                    3599 	push	de
      000D23 CDr00r00              3600 	call	_bcd_add
      000D26 E8 04                 3601 	add	sp, #4
      000D28 C1                    3602 	pop	bc
                                   3603 ;src/main.c:196: for(int8_t i=0; i<amount;i++) {
      000D29 0C                    3604 	inc	c
      000D2A 18 D2                 3605 	jr	00106$
      000D2C                       3606 00104$:
                                   3607 ;src/main.c:203: len = bcd2text(&MISSILES, 0x01, buf);
      000D2C F8 00                 3608 	ldhl	sp,	#0
      000D2E 4D                    3609 	ld	c, l
      000D2F 44                    3610 	ld	b, h
      000D30 59                    3611 	ld	e, c
      000D31 50                    3612 	ld	d, b
      000D32 C5                    3613 	push	bc
      000D33 D5                    3614 	push	de
      000D34 3E 01                 3615 	ld	a, #0x01
      000D36 F5                    3616 	push	af
      000D37 33                    3617 	inc	sp
      000D38 11rA9r00              3618 	ld	de, #_MISSILES
      000D3B D5                    3619 	push	de
      000D3C CDr00r00              3620 	call	_bcd2text
      000D3F E8 05                 3621 	add	sp, #5
      000D41 C1                    3622 	pop	bc
                                   3623 ;src/main.c:204: set_win_tiles(18, 0, 2, 1, buf+6);
      000D42 21 06 00              3624 	ld	hl, #0x0006
      000D45 09                    3625 	add	hl, bc
      000D46 E5                    3626 	push	hl
      000D47 21 02 01              3627 	ld	hl, #0x102
      000D4A E5                    3628 	push	hl
      000D4B 21 12 00              3629 	ld	hl, #0x12
      000D4E E5                    3630 	push	hl
      000D4F CDr00r00              3631 	call	_set_win_tiles
                                   3632 ;src/main.c:206: }
      000D52 E8 10                 3633 	add	sp, #16
      000D54 C9                    3634 	ret
                                   3635 ;src/main.c:208: void incrementScore() {
                                   3636 ;	---------------------------------
                                   3637 ; Function incrementScore
                                   3638 ; ---------------------------------
      000D55                       3639 _incrementScore::
                                   3640 ;src/main.c:209: score += 1;
      000D55 21rB1r00              3641 	ld	hl, #_score
      000D58 2A                    3642 	ld	a, (hl+)
      000D59 4F                    3643 	ld	c, a
      000D5A 3A                    3644 	ld	a, (hl-)
      000D5B 47                    3645 	ld	b, a
      000D5C 03                    3646 	inc	bc
      000D5D 79                    3647 	ld	a, c
      000D5E 22                    3648 	ld	(hl+), a
      000D5F 70                    3649 	ld	(hl), b
                                   3650 ;src/main.c:210: bcd_add(&SCORE, &INCREMENT);
      000D60 11rB7r00              3651 	ld	de, #_INCREMENT
      000D63 D5                    3652 	push	de
      000D64 11rB3r00              3653 	ld	de, #_SCORE
      000D67 D5                    3654 	push	de
      000D68 CDr00r00              3655 	call	_bcd_add
      000D6B E8 04                 3656 	add	sp, #4
                                   3657 ;src/main.c:211: }
      000D6D C9                    3658 	ret
                                   3659 ;src/main.c:213: void updateDirection() {
                                   3660 ;	---------------------------------
                                   3661 ; Function updateDirection
                                   3662 ; ---------------------------------
      000D6E                       3663 _updateDirection::
      000D6E E8 FC                 3664 	add	sp, #-4
                                   3665 ;src/main.c:217: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000D70 21rF5r00              3666 	ld	hl, #_joydata
      000D73 5E                    3667 	ld	e, (hl)
      000D74 7B                    3668 	ld	a, e
      000D75 E6 01                 3669 	and	a, #0x01
      000D77 F8 00                 3670 	ldhl	sp,	#0
      000D79 22                    3671 	ld	(hl+), a
      000D7A AF                    3672 	xor	a, a
      000D7B 22                    3673 	ld	(hl+), a
      000D7C 7B                    3674 	ld	a, e
      000D7D E6 04                 3675 	and	a, #0x04
      000D7F 22                    3676 	ld	(hl+), a
      000D80 AF                    3677 	xor	a, a
      000D81 32                    3678 	ld	(hl-), a
      000D82 2B                    3679 	dec	hl
      000D83 7B                    3680 	ld	a, e
      000D84 E6 08                 3681 	and	a, #0x08
      000D86 4F                    3682 	ld	c, a
      000D87 06 00                 3683 	ld	b, #0x00
      000D89 3A                    3684 	ld	a, (hl-)
      000D8A B6                    3685 	or	a, (hl)
      000D8B 28 14                 3686 	jr	Z, 00102$
      000D8D F8 03                 3687 	ldhl	sp,	#3
      000D8F 3A                    3688 	ld	a, (hl-)
      000D90 B6                    3689 	or	a, (hl)
      000D91 20 0E                 3690 	jr	NZ, 00102$
      000D93 78                    3691 	ld	a, b
      000D94 B1                    3692 	or	a, c
      000D95 20 0A                 3693 	jr	NZ, 00102$
                                   3694 ;src/main.c:218: xDir = 1;
      000D97 21r93r00              3695 	ld	hl, #_xDir
      000D9A 36 01                 3696 	ld	(hl), #0x01
                                   3697 ;src/main.c:219: yDir = 0;
      000D9C 21r94r00              3698 	ld	hl, #_yDir
      000D9F 36 00                 3699 	ld	(hl), #0x00
      000DA1                       3700 00102$:
                                   3701 ;src/main.c:221: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000DA1 7B                    3702 	ld	a, e
      000DA2 E6 02                 3703 	and	a, #0x02
      000DA4 5F                    3704 	ld	e, a
      000DA5 16 00                 3705 	ld	d, #0x00
      000DA7 7A                    3706 	ld	a, d
      000DA8 B3                    3707 	or	a, e
      000DA9 28 14                 3708 	jr	Z, 00106$
      000DAB F8 03                 3709 	ldhl	sp,	#3
      000DAD 3A                    3710 	ld	a, (hl-)
      000DAE B6                    3711 	or	a, (hl)
      000DAF 20 0E                 3712 	jr	NZ, 00106$
      000DB1 78                    3713 	ld	a, b
      000DB2 B1                    3714 	or	a, c
      000DB3 20 0A                 3715 	jr	NZ, 00106$
                                   3716 ;src/main.c:222: xDir = -1;
      000DB5 21r93r00              3717 	ld	hl, #_xDir
      000DB8 36 FF                 3718 	ld	(hl), #0xff
                                   3719 ;src/main.c:223: yDir = 0;
      000DBA 21r94r00              3720 	ld	hl, #_yDir
      000DBD 36 00                 3721 	ld	(hl), #0x00
      000DBF                       3722 00106$:
                                   3723 ;src/main.c:225: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DBF F8 03                 3724 	ldhl	sp,	#3
      000DC1 3A                    3725 	ld	a, (hl-)
      000DC2 B6                    3726 	or	a, (hl)
      000DC3 28 13                 3727 	jr	Z, 00110$
      000DC5 7A                    3728 	ld	a, d
      000DC6 B3                    3729 	or	a, e
      000DC7 20 0F                 3730 	jr	NZ, 00110$
      000DC9 2B                    3731 	dec	hl
      000DCA 3A                    3732 	ld	a, (hl-)
      000DCB B6                    3733 	or	a, (hl)
      000DCC 20 0A                 3734 	jr	NZ, 00110$
                                   3735 ;src/main.c:226: xDir = 0;
      000DCE 21r93r00              3736 	ld	hl, #_xDir
      000DD1 36 00                 3737 	ld	(hl), #0x00
                                   3738 ;src/main.c:227: yDir = -1;
      000DD3 21r94r00              3739 	ld	hl, #_yDir
      000DD6 36 FF                 3740 	ld	(hl), #0xff
      000DD8                       3741 00110$:
                                   3742 ;src/main.c:229: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DD8 78                    3743 	ld	a, b
      000DD9 B1                    3744 	or	a, c
      000DDA 28 14                 3745 	jr	Z, 00114$
      000DDC 7A                    3746 	ld	a, d
      000DDD B3                    3747 	or	a, e
      000DDE 20 10                 3748 	jr	NZ, 00114$
      000DE0 F8 01                 3749 	ldhl	sp,	#1
      000DE2 3A                    3750 	ld	a, (hl-)
      000DE3 B6                    3751 	or	a, (hl)
      000DE4 20 0A                 3752 	jr	NZ, 00114$
                                   3753 ;src/main.c:230: xDir = 0;
      000DE6 21r93r00              3754 	ld	hl, #_xDir
      000DE9 36 00                 3755 	ld	(hl), #0x00
                                   3756 ;src/main.c:231: yDir = 1;
      000DEB 21r94r00              3757 	ld	hl, #_yDir
      000DEE 36 01                 3758 	ld	(hl), #0x01
      000DF0                       3759 00114$:
                                   3760 ;src/main.c:235: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000DF0 F8 03                 3761 	ldhl	sp,	#3
      000DF2 3A                    3762 	ld	a, (hl-)
      000DF3 B6                    3763 	or	a, (hl)
      000DF4 28 0F                 3764 	jr	Z, 00118$
      000DF6 2B                    3765 	dec	hl
      000DF7 3A                    3766 	ld	a, (hl-)
      000DF8 B6                    3767 	or	a, (hl)
      000DF9 28 0A                 3768 	jr	Z, 00118$
                                   3769 ;src/main.c:236: xDir = 1;
      000DFB 21r93r00              3770 	ld	hl, #_xDir
      000DFE 36 01                 3771 	ld	(hl), #0x01
                                   3772 ;src/main.c:237: yDir = -1;
      000E00 21r94r00              3773 	ld	hl, #_yDir
      000E03 36 FF                 3774 	ld	(hl), #0xff
      000E05                       3775 00118$:
                                   3776 ;src/main.c:239: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000E05 F8 03                 3777 	ldhl	sp,	#3
      000E07 3A                    3778 	ld	a, (hl-)
      000E08 B6                    3779 	or	a, (hl)
      000E09 28 0E                 3780 	jr	Z, 00121$
      000E0B 7A                    3781 	ld	a, d
      000E0C B3                    3782 	or	a, e
      000E0D 28 0A                 3783 	jr	Z, 00121$
                                   3784 ;src/main.c:240: xDir = -1;
      000E0F 21r93r00              3785 	ld	hl, #_xDir
      000E12 36 FF                 3786 	ld	(hl), #0xff
                                   3787 ;src/main.c:241: yDir = -1;
      000E14 21r94r00              3788 	ld	hl, #_yDir
      000E17 36 FF                 3789 	ld	(hl), #0xff
      000E19                       3790 00121$:
                                   3791 ;src/main.c:243: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000E19 78                    3792 	ld	a, b
      000E1A B1                    3793 	or	a, c
      000E1B 28 10                 3794 	jr	Z, 00124$
      000E1D F8 01                 3795 	ldhl	sp,	#1
      000E1F 3A                    3796 	ld	a, (hl-)
      000E20 B6                    3797 	or	a, (hl)
      000E21 28 0A                 3798 	jr	Z, 00124$
                                   3799 ;src/main.c:244: xDir = 1;
      000E23 21r93r00              3800 	ld	hl, #_xDir
      000E26 36 01                 3801 	ld	(hl), #0x01
                                   3802 ;src/main.c:245: yDir = 1;
      000E28 21r94r00              3803 	ld	hl, #_yDir
      000E2B 36 01                 3804 	ld	(hl), #0x01
      000E2D                       3805 00124$:
                                   3806 ;src/main.c:247: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000E2D 78                    3807 	ld	a, b
      000E2E B1                    3808 	or	a, c
      000E2F 28 0E                 3809 	jr	Z, 00127$
      000E31 7A                    3810 	ld	a, d
      000E32 B3                    3811 	or	a, e
      000E33 28 0A                 3812 	jr	Z, 00127$
                                   3813 ;src/main.c:248: xDir = -1;
      000E35 21r93r00              3814 	ld	hl, #_xDir
      000E38 36 FF                 3815 	ld	(hl), #0xff
                                   3816 ;src/main.c:249: yDir = 1;
      000E3A 21r94r00              3817 	ld	hl, #_yDir
      000E3D 36 01                 3818 	ld	(hl), #0x01
      000E3F                       3819 00127$:
                                   3820 ;src/main.c:254: if (xDir == 0 && yDir == 0) {
      000E3F FAr93r00              3821 	ld	a, (#_xDir)
      000E42 B7                    3822 	or	a, a
      000E43 20 07                 3823 	jr	NZ, 00130$
      000E45 FAr94r00              3824 	ld	a, (#_yDir)
      000E48 B7                    3825 	or	a, a
                                   3826 ;src/main.c:255: return;
      000E49 CAr95r0F              3827 	jp	Z,00195$
      000E4C                       3828 00130$:
                                   3829 ;src/main.c:287: if (xDir == 0 && yDir > 0) {
      000E4C 21r94r00              3830 	ld	hl, #_yDir
      000E4F 5E                    3831 	ld	e, (hl)
      000E50 AF                    3832 	xor	a, a
      000E51 57                    3833 	ld	d, a
      000E52 96                    3834 	sub	a, (hl)
      000E53 CB 7B                 3835 	bit	7, e
      000E55 28 07                 3836 	jr	Z, 00387$
      000E57 CB 7A                 3837 	bit	7, d
      000E59 20 08                 3838 	jr	NZ, 00388$
      000E5B BF                    3839 	cp	a, a
      000E5C 18 05                 3840 	jr	00388$
      000E5E                       3841 00387$:
      000E5E CB 7A                 3842 	bit	7, d
      000E60 28 01                 3843 	jr	Z, 00388$
      000E62 37                    3844 	scf
      000E63                       3845 00388$:
      000E63 3E 00                 3846 	ld	a, #0x00
      000E65 17                    3847 	rla
      000E66 4F                    3848 	ld	c, a
      000E67 FAr93r00              3849 	ld	a, (#_xDir)
      000E6A B7                    3850 	or	a,a
      000E6B 20 1A                 3851 	jr	NZ, 00160$
      000E6D B1                    3852 	or	a,c
      000E6E 28 17                 3853 	jr	Z, 00160$
                                   3854 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E70 21r02r00              3855 	ld	hl, #(_shadow_OAM + 2)
      000E73 36 00                 3856 	ld	(hl), #0x00
      000E75 21r06r00              3857 	ld	hl, #(_shadow_OAM + 6)
      000E78 36 02                 3858 	ld	(hl), #0x02
                                   3859 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000E7A 21r03r00              3860 	ld	hl, #(_shadow_OAM + 3)
      000E7D 36 40                 3861 	ld	(hl), #0x40
      000E7F 21r07r00              3862 	ld	hl, #(_shadow_OAM + 7)
      000E82 36 40                 3863 	ld	(hl), #0x40
                                   3864 ;src/main.c:291: set_sprite_prop(1, S_FLIPY); 
      000E84 C3r95r0F              3865 	jp	00195$
      000E87                       3866 00160$:
                                   3867 ;src/main.c:293: else if (xDir == 0 && yDir < 0) {
      000E87 FAr94r00              3868 	ld	a, (#_yDir)
      000E8A 07                    3869 	rlca
      000E8B E6 01                 3870 	and	a,#0x01
      000E8D F8 02                 3871 	ldhl	sp,	#2
      000E8F 77                    3872 	ld	(hl), a
      000E90 FAr93r00              3873 	ld	a, (#_xDir)
      000E93 B7                    3874 	or	a, a
      000E94 20 1D                 3875 	jr	NZ, 00156$
      000E96 F8 02                 3876 	ldhl	sp,	#2
      000E98 7E                    3877 	ld	a, (hl)
      000E99 B7                    3878 	or	a, a
      000E9A 28 17                 3879 	jr	Z, 00156$
                                   3880 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E9C 21r02r00              3881 	ld	hl, #(_shadow_OAM + 2)
      000E9F 36 00                 3882 	ld	(hl), #0x00
      000EA1 21r06r00              3883 	ld	hl, #(_shadow_OAM + 6)
      000EA4 36 02                 3884 	ld	(hl), #0x02
                                   3885 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EA6 21r03r00              3886 	ld	hl, #(_shadow_OAM + 3)
      000EA9 36 00                 3887 	ld	(hl), #0x00
      000EAB 21r07r00              3888 	ld	hl, #(_shadow_OAM + 7)
      000EAE 36 00                 3889 	ld	(hl), #0x00
                                   3890 ;src/main.c:297: set_sprite_prop(1, 0); 
      000EB0 C3r95r0F              3891 	jp	00195$
      000EB3                       3892 00156$:
                                   3893 ;src/main.c:299: else if (xDir > 0 && yDir == 0) {
      000EB3 21r93r00              3894 	ld	hl, #_xDir
      000EB6 5E                    3895 	ld	e, (hl)
      000EB7 AF                    3896 	xor	a, a
      000EB8 57                    3897 	ld	d, a
      000EB9 96                    3898 	sub	a, (hl)
      000EBA CB 7B                 3899 	bit	7, e
      000EBC 28 07                 3900 	jr	Z, 00389$
      000EBE CB 7A                 3901 	bit	7, d
      000EC0 20 08                 3902 	jr	NZ, 00390$
      000EC2 BF                    3903 	cp	a, a
      000EC3 18 05                 3904 	jr	00390$
      000EC5                       3905 00389$:
      000EC5 CB 7A                 3906 	bit	7, d
      000EC7 28 01                 3907 	jr	Z, 00390$
      000EC9 37                    3908 	scf
      000ECA                       3909 00390$:
      000ECA 3E 00                 3910 	ld	a, #0x00
      000ECC 17                    3911 	rla
      000ECD 47                    3912 	ld	b, a
      000ECE B7                    3913 	or	a, a
      000ECF 28 1D                 3914 	jr	Z, 00152$
      000ED1 FAr94r00              3915 	ld	a, (#_yDir)
      000ED4 B7                    3916 	or	a, a
      000ED5 20 17                 3917 	jr	NZ, 00152$
                                   3918 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000ED7 21r02r00              3919 	ld	hl, #(_shadow_OAM + 2)
      000EDA 36 04                 3920 	ld	(hl), #0x04
      000EDC 21r06r00              3921 	ld	hl, #(_shadow_OAM + 6)
      000EDF 36 06                 3922 	ld	(hl), #0x06
                                   3923 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EE1 21r03r00              3924 	ld	hl, #(_shadow_OAM + 3)
      000EE4 36 00                 3925 	ld	(hl), #0x00
      000EE6 21r07r00              3926 	ld	hl, #(_shadow_OAM + 7)
      000EE9 36 00                 3927 	ld	(hl), #0x00
                                   3928 ;src/main.c:303: set_sprite_prop(1, 0); 
      000EEB C3r95r0F              3929 	jp	00195$
      000EEE                       3930 00152$:
                                   3931 ;src/main.c:305: else if (xDir < 0 && yDir == 0) {
      000EEE FAr93r00              3932 	ld	a, (#_xDir)
      000EF1 07                    3933 	rlca
      000EF2 E6 01                 3934 	and	a,#0x01
      000EF4 F8 03                 3935 	ldhl	sp,	#3
      000EF6 77                    3936 	ld	(hl), a
      000EF7 7E                    3937 	ld	a, (hl)
      000EF8 B7                    3938 	or	a, a
      000EF9 28 1D                 3939 	jr	Z, 00148$
      000EFB FAr94r00              3940 	ld	a, (#_yDir)
      000EFE B7                    3941 	or	a, a
      000EFF 20 17                 3942 	jr	NZ, 00148$
                                   3943 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F01 21r02r00              3944 	ld	hl, #(_shadow_OAM + 2)
      000F04 36 04                 3945 	ld	(hl), #0x04
      000F06 21r06r00              3946 	ld	hl, #(_shadow_OAM + 6)
      000F09 36 06                 3947 	ld	(hl), #0x06
                                   3948 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F0B 21r03r00              3949 	ld	hl, #(_shadow_OAM + 3)
      000F0E 36 20                 3950 	ld	(hl), #0x20
      000F10 21r07r00              3951 	ld	hl, #(_shadow_OAM + 7)
      000F13 36 20                 3952 	ld	(hl), #0x20
                                   3953 ;src/main.c:309: set_sprite_prop(1, S_FLIPX); 
      000F15 C3r95r0F              3954 	jp	00195$
      000F18                       3955 00148$:
                                   3956 ;src/main.c:311: else if (xDir > 0 && yDir < 0) {
      000F18 78                    3957 	ld	a, b
      000F19 B7                    3958 	or	a, a
      000F1A 28 1C                 3959 	jr	Z, 00144$
      000F1C F8 02                 3960 	ldhl	sp,	#2
      000F1E 7E                    3961 	ld	a, (hl)
      000F1F B7                    3962 	or	a, a
      000F20 28 16                 3963 	jr	Z, 00144$
                                   3964 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F22 21r02r00              3965 	ld	hl, #(_shadow_OAM + 2)
      000F25 36 08                 3966 	ld	(hl), #0x08
      000F27 21r06r00              3967 	ld	hl, #(_shadow_OAM + 6)
      000F2A 36 0A                 3968 	ld	(hl), #0x0a
                                   3969 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F2C 21r03r00              3970 	ld	hl, #(_shadow_OAM + 3)
      000F2F 36 00                 3971 	ld	(hl), #0x00
      000F31 21r07r00              3972 	ld	hl, #(_shadow_OAM + 7)
      000F34 36 00                 3973 	ld	(hl), #0x00
                                   3974 ;src/main.c:315: set_sprite_prop(1, 0); 
      000F36 18 5D                 3975 	jr	00195$
      000F38                       3976 00144$:
                                   3977 ;src/main.c:317: else if (xDir > 0 && yDir > 0) {
      000F38 78                    3978 	ld	a, b
      000F39 B7                    3979 	or	a, a
      000F3A 28 1A                 3980 	jr	Z, 00140$
      000F3C 79                    3981 	ld	a, c
      000F3D B7                    3982 	or	a, a
      000F3E 28 16                 3983 	jr	Z, 00140$
                                   3984 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F40 21r02r00              3985 	ld	hl, #(_shadow_OAM + 2)
      000F43 36 08                 3986 	ld	(hl), #0x08
      000F45 21r06r00              3987 	ld	hl, #(_shadow_OAM + 6)
      000F48 36 0A                 3988 	ld	(hl), #0x0a
                                   3989 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F4A 21r03r00              3990 	ld	hl, #(_shadow_OAM + 3)
      000F4D 36 40                 3991 	ld	(hl), #0x40
      000F4F 21r07r00              3992 	ld	hl, #(_shadow_OAM + 7)
      000F52 36 40                 3993 	ld	(hl), #0x40
                                   3994 ;src/main.c:321: set_sprite_prop(1, S_FLIPY); 
      000F54 18 3F                 3995 	jr	00195$
      000F56                       3996 00140$:
                                   3997 ;src/main.c:323: else if (xDir < 0 && yDir > 0) {
      000F56 F8 03                 3998 	ldhl	sp,	#3
      000F58 7E                    3999 	ld	a, (hl)
      000F59 B7                    4000 	or	a, a
      000F5A 28 1A                 4001 	jr	Z, 00136$
      000F5C 79                    4002 	ld	a, c
      000F5D B7                    4003 	or	a, a
      000F5E 28 16                 4004 	jr	Z, 00136$
                                   4005 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F60 21r02r00              4006 	ld	hl, #(_shadow_OAM + 2)
      000F63 36 08                 4007 	ld	(hl), #0x08
      000F65 21r06r00              4008 	ld	hl, #(_shadow_OAM + 6)
      000F68 36 0A                 4009 	ld	(hl), #0x0a
                                   4010 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F6A 21r03r00              4011 	ld	hl, #(_shadow_OAM + 3)
      000F6D 36 60                 4012 	ld	(hl), #0x60
      000F6F 21r07r00              4013 	ld	hl, #(_shadow_OAM + 7)
      000F72 36 60                 4014 	ld	(hl), #0x60
                                   4015 ;src/main.c:327: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000F74 18 1F                 4016 	jr	00195$
      000F76                       4017 00136$:
                                   4018 ;src/main.c:329: else if (xDir < 0 && yDir < 0) {
      000F76 F8 03                 4019 	ldhl	sp,	#3
      000F78 7E                    4020 	ld	a, (hl)
      000F79 B7                    4021 	or	a, a
      000F7A 28 19                 4022 	jr	Z, 00195$
      000F7C 2B                    4023 	dec	hl
      000F7D 7E                    4024 	ld	a, (hl)
      000F7E B7                    4025 	or	a, a
      000F7F 28 14                 4026 	jr	Z, 00195$
                                   4027 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F81 21r02r00              4028 	ld	hl, #(_shadow_OAM + 2)
      000F84 36 08                 4029 	ld	(hl), #0x08
      000F86 21r06r00              4030 	ld	hl, #(_shadow_OAM + 6)
      000F89 36 0A                 4031 	ld	(hl), #0x0a
                                   4032 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F8B 21r03r00              4033 	ld	hl, #(_shadow_OAM + 3)
      000F8E 36 20                 4034 	ld	(hl), #0x20
      000F90 21r07r00              4035 	ld	hl, #(_shadow_OAM + 7)
      000F93 36 20                 4036 	ld	(hl), #0x20
                                   4037 ;src/main.c:333: set_sprite_prop(1, S_FLIPX); 
      000F95                       4038 00195$:
                                   4039 ;src/main.c:335: }
      000F95 E8 04                 4040 	add	sp, #4
      000F97 C9                    4041 	ret
                                   4042 ;src/main.c:369: void playSound(uint8_t type) {
                                   4043 ;	---------------------------------
                                   4044 ; Function playSound
                                   4045 ; ---------------------------------
      000F98                       4046 _playSound::
                                   4047 ;src/main.c:370: if (type == 20) { //singlegun
      000F98 F8 02                 4048 	ldhl	sp,	#2
      000F9A 7E                    4049 	ld	a, (hl)
      000F9B D6 14                 4050 	sub	a, #0x14
      000F9D 20 13                 4051 	jr	NZ, 00102$
                                   4052 ;src/main.c:371: NR10_REG = 0x00;
      000F9F AF                    4053 	xor	a, a
      000FA0 E0r00                 4054 	ldh	(_NR10_REG + 0), a
                                   4055 ;src/main.c:372: NR11_REG = 0x81;
      000FA2 3E 81                 4056 	ld	a, #0x81
      000FA4 E0r00                 4057 	ldh	(_NR11_REG + 0), a
                                   4058 ;src/main.c:373: NR12_REG = 0x43;
      000FA6 3E 43                 4059 	ld	a, #0x43
      000FA8 E0r00                 4060 	ldh	(_NR12_REG + 0), a
                                   4061 ;src/main.c:374: NR13_REG = 0X00;//0x6D;
      000FAA AF                    4062 	xor	a, a
      000FAB E0r00                 4063 	ldh	(_NR13_REG + 0), a
                                   4064 ;src/main.c:375: NR14_REG = 0x86;
      000FAD 3E 86                 4065 	ld	a, #0x86
      000FAF E0r00                 4066 	ldh	(_NR14_REG + 0), a
                                   4067 ;src/main.c:376: return;
      000FB1 C9                    4068 	ret
      000FB2                       4069 00102$:
                                   4070 ;src/main.c:378: if (type == 23) {
      000FB2 F8 02                 4071 	ldhl	sp,	#2
      000FB4 7E                    4072 	ld	a, (hl)
      000FB5 D6 17                 4073 	sub	a, #0x17
      000FB7 20 12                 4074 	jr	NZ, 00104$
                                   4075 ;src/main.c:379: NR10_REG = 0x00;
      000FB9 AF                    4076 	xor	a, a
      000FBA E0r00                 4077 	ldh	(_NR10_REG + 0), a
                                   4078 ;src/main.c:380: NR11_REG = 0x81;
      000FBC 3E 81                 4079 	ld	a, #0x81
      000FBE E0r00                 4080 	ldh	(_NR11_REG + 0), a
                                   4081 ;src/main.c:381: NR12_REG = 0x53;
      000FC0 3E 53                 4082 	ld	a, #0x53
      000FC2 E0r00                 4083 	ldh	(_NR12_REG + 0), a
                                   4084 ;src/main.c:382: NR13_REG = 0X00;//0x6D;
      000FC4 AF                    4085 	xor	a, a
      000FC5 E0r00                 4086 	ldh	(_NR13_REG + 0), a
                                   4087 ;src/main.c:383: NR14_REG = 0x86;
      000FC7 3E 86                 4088 	ld	a, #0x86
      000FC9 E0r00                 4089 	ldh	(_NR14_REG + 0), a
      000FCB                       4090 00104$:
                                   4091 ;src/main.c:385: if (type == 26) {
      000FCB F8 02                 4092 	ldhl	sp,	#2
      000FCD 7E                    4093 	ld	a, (hl)
      000FCE D6 1A                 4094 	sub	a, #0x1a
      000FD0 20 13                 4095 	jr	NZ, 00106$
                                   4096 ;src/main.c:386: NR10_REG = 0x00;
      000FD2 AF                    4097 	xor	a, a
      000FD3 E0r00                 4098 	ldh	(_NR10_REG + 0), a
                                   4099 ;src/main.c:387: NR11_REG = 0x89;
      000FD5 3E 89                 4100 	ld	a, #0x89
      000FD7 E0r00                 4101 	ldh	(_NR11_REG + 0), a
                                   4102 ;src/main.c:388: NR12_REG = 0x55;
      000FD9 3E 55                 4103 	ld	a, #0x55
      000FDB E0r00                 4104 	ldh	(_NR12_REG + 0), a
                                   4105 ;src/main.c:389: NR13_REG = 0x70;//0Xbe;//0x6D;
      000FDD 3E 70                 4106 	ld	a, #0x70
      000FDF E0r00                 4107 	ldh	(_NR13_REG + 0), a
                                   4108 ;src/main.c:390: NR14_REG = 0x84;
      000FE1 3E 84                 4109 	ld	a, #0x84
      000FE3 E0r00                 4110 	ldh	(_NR14_REG + 0), a
      000FE5                       4111 00106$:
                                   4112 ;src/main.c:392: if (type == 0) {  // explosion
      000FE5 F8 02                 4113 	ldhl	sp,	#2
      000FE7 7E                    4114 	ld	a, (hl)
      000FE8 B7                    4115 	or	a, a
      000FE9 C0                    4116 	ret	NZ
                                   4117 ;src/main.c:393: NR41_REG = 0x20;  
      000FEA 3E 20                 4118 	ld	a, #0x20
      000FEC E0r00                 4119 	ldh	(_NR41_REG + 0), a
                                   4120 ;src/main.c:394: NR42_REG = 0xa2;//0xa3;  
      000FEE 3E A2                 4121 	ld	a, #0xa2
      000FF0 E0r00                 4122 	ldh	(_NR42_REG + 0), a
                                   4123 ;src/main.c:395: NR43_REG = 0x57;  
      000FF2 3E 57                 4124 	ld	a, #0x57
      000FF4 E0r00                 4125 	ldh	(_NR43_REG + 0), a
                                   4126 ;src/main.c:396: NR44_REG = 0x80;  
      000FF6 3E 80                 4127 	ld	a, #0x80
      000FF8 E0r00                 4128 	ldh	(_NR44_REG + 0), a
                                   4129 ;src/main.c:402: }
      000FFA C9                    4130 	ret
                                   4131 ;src/main.c:404: void initEnemies(uint8_t loadSprites) {
                                   4132 ;	---------------------------------
                                   4133 ; Function initEnemies
                                   4134 ; ---------------------------------
      000FFB                       4135 _initEnemies::
      000FFB E8 F9                 4136 	add	sp, #-7
                                   4137 ;src/main.c:406: if (loadSprites) {
      000FFD F8 09                 4138 	ldhl	sp,	#9
      000FFF 7E                    4139 	ld	a, (hl)
      001000 B7                    4140 	or	a, a
      001001 28 1A                 4141 	jr	Z, 00102$
                                   4142 ;src/main.c:408: set_sprite_data(0x40, 5, enemy1);
      001003 11r18r05              4143 	ld	de, #_enemy1
      001006 D5                    4144 	push	de
      001007 21 40 05              4145 	ld	hl, #0x540
      00100A E5                    4146 	push	hl
      00100B CDr00r00              4147 	call	_set_sprite_data
      00100E E8 04                 4148 	add	sp, #4
                                   4149 ;src/main.c:409: set_sprite_data(0x50, 8, largeenemies);
      001010 11r68r05              4150 	ld	de, #_largeenemies
      001013 D5                    4151 	push	de
      001014 21 50 08              4152 	ld	hl, #0x850
      001017 E5                    4153 	push	hl
      001018 CDr00r00              4154 	call	_set_sprite_data
      00101B E8 04                 4155 	add	sp, #4
      00101D                       4156 00102$:
                                   4157 ;src/main.c:412: struct Enemy *eptr = enemies;
      00101D 01r5Ar00              4158 	ld	bc, #_enemies+0
                                   4159 ;src/main.c:414: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001020 F8 06                 4160 	ldhl	sp,	#6
      001022 36 00                 4161 	ld	(hl), #0x00
      001024                       4162 00116$:
      001024 21r8Er0B              4163 	ld	hl, #_ENEMYCOUNT
      001027 5E                    4164 	ld	e, (hl)
      001028 F8 06                 4165 	ldhl	sp,	#6
      00102A 7E                    4166 	ld	a, (hl)
      00102B 93                    4167 	sub	a, e
      00102C D2r63r11              4168 	jp	NC, 00118$
                                   4169 ;src/main.c:415: if (eptr->alive == 0) {
      00102F 21 09 00              4170 	ld	hl, #0x0009
      001032 09                    4171 	add	hl, bc
      001033 7E                    4172 	ld	a, (hl)
      001034 B7                    4173 	or	a, a
      001035 C2r57r11              4174 	jp	NZ, 00107$
                                   4175 ;src/main.c:417: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001038 C5                    4176 	push	bc
      001039 CDr00r00              4177 	call	_rand
      00103C 7B                    4178 	ld	a, e
      00103D C1                    4179 	pop	bc
      00103E 21r17r05              4180 	ld	hl, #_enemyOptionCount
      001041 56                    4181 	ld	d, (hl)
      001042 C5                    4182 	push	bc
      001043 D5                    4183 	push	de
      001044 33                    4184 	inc	sp
      001045 F5                    4185 	push	af
      001046 33                    4186 	inc	sp
      001047 CDr00r00              4187 	call	__moduchar
      00104A E1                    4188 	pop	hl
      00104B 7B                    4189 	ld	a, e
      00104C C1                    4190 	pop	bc
                                   4191 ;src/main.c:419: (*eptr) = enemyOptions[enemyInd];
      00104D 5F                    4192 	ld	e, a
      00104E 16 00                 4193 	ld	d, #0x00
      001050 6B                    4194 	ld	l, e
      001051 62                    4195 	ld	h, d
      001052 29                    4196 	add	hl, hl
      001053 29                    4197 	add	hl, hl
      001054 29                    4198 	add	hl, hl
      001055 19                    4199 	add	hl, de
      001056 29                    4200 	add	hl, hl
      001057 11r00r00              4201 	ld	de, #_enemyOptions
      00105A 19                    4202 	add	hl, de
      00105B 59                    4203 	ld	e, c
      00105C 50                    4204 	ld	d, b
      00105D C5                    4205 	push	bc
      00105E 01 12 00              4206 	ld	bc, #0x12
      001061 C5                    4207 	push	bc
      001062 E5                    4208 	push	hl
      001063 D5                    4209 	push	de
      001064 CDr00r00              4210 	call	___memcpy
      001067 E8 06                 4211 	add	sp, #6
      001069 CDr00r00              4212 	call	_rand
      00106C 7B                    4213 	ld	a, e
      00106D C1                    4214 	pop	bc
      00106E E6 07                 4215 	and	a, #0x07
      001070 F8 05                 4216 	ldhl	sp,	#5
      001072 77                    4217 	ld	(hl), a
                                   4218 ;src/main.c:422: eptr->x = xSpawnPositions[posIndex];
      001073 11r8Fr0B              4219 	ld	de, #_xSpawnPositions
      001076 6E                    4220 	ld	l, (hl)
      001077 26 00                 4221 	ld	h, #0x00
      001079 19                    4222 	add	hl, de
      00107A 5D                    4223 	ld	e, l
      00107B 54                    4224 	ld	d, h
      00107C 1A                    4225 	ld	a, (de)
      00107D 5F                    4226 	ld	e, a
      00107E 16 00                 4227 	ld	d, #0x00
      001080 69                    4228 	ld	l, c
      001081 60                    4229 	ld	h, b
      001082 7B                    4230 	ld	a, e
      001083 22                    4231 	ld	(hl+), a
      001084 72                    4232 	ld	(hl), d
                                   4233 ;src/main.c:423: eptr->y = ySpawnPositions[posIndex];
      001085 21 02 00              4234 	ld	hl, #0x0002
      001088 09                    4235 	add	hl, bc
      001089 33                    4236 	inc	sp
      00108A 33                    4237 	inc	sp
      00108B E5                    4238 	push	hl
      00108C 11r97r0B              4239 	ld	de, #_ySpawnPositions
      00108F F8 05                 4240 	ldhl	sp,	#5
      001091 6E                    4241 	ld	l, (hl)
      001092 26 00                 4242 	ld	h, #0x00
      001094 19                    4243 	add	hl, de
      001095 5D                    4244 	ld	e, l
      001096 54                    4245 	ld	d, h
      001097 1A                    4246 	ld	a, (de)
      001098 F8 04                 4247 	ldhl	sp,	#4
      00109A 22                    4248 	ld	(hl+), a
      00109B AF                    4249 	xor	a, a
      00109C 32                    4250 	ld	(hl-), a
      00109D D1                    4251 	pop	de
      00109E D5                    4252 	push	de
      00109F 2A                    4253 	ld	a, (hl+)
      0010A0 12                    4254 	ld	(de), a
      0010A1 13                    4255 	inc	de
      0010A2 7E                    4256 	ld	a, (hl)
      0010A3 12                    4257 	ld	(de), a
                                   4258 ;src/main.c:425: if (eptr->spriteCount == 1) {
      0010A4 21 08 00              4259 	ld	hl, #0x0008
      0010A7 09                    4260 	add	hl, bc
      0010A8 7E                    4261 	ld	a, (hl)
      0010A9 F8 05                 4262 	ldhl	sp,	#5
      0010AB 77                    4263 	ld	(hl), a
                                   4264 ;src/main.c:426: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010AC 21 06 00              4265 	ld	hl, #0x0006
      0010AF 09                    4266 	add	hl, bc
      0010B0 5D                    4267 	ld	e, l
      0010B1 54                    4268 	ld	d, h
      0010B2 F8 06                 4269 	ldhl	sp,	#6
      0010B4 6E                    4270 	ld	l, (hl)
                                   4271 ;	spillPairReg hl
                                   4272 ;	spillPairReg hl
      0010B5 1A                    4273 	ld	a, (de)
      0010B6 5F                    4274 	ld	e, a
      0010B7 7D                    4275 	ld	a, l
      0010B8 87                    4276 	add	a, a
      0010B9 F8 02                 4277 	ldhl	sp,	#2
      0010BB 77                    4278 	ld	(hl), a
      0010BC 2A                    4279 	ld	a, (hl+)
      0010BD C6 0A                 4280 	add	a, #0x0a
                                   4281 ;src/main.c:425: if (eptr->spriteCount == 1) {
      0010BF 22                    4282 	ld	(hl+), a
      0010C0 23                    4283 	inc	hl
      0010C1 7E                    4284 	ld	a, (hl)
      0010C2 3D                    4285 	dec	a
      0010C3 20 2D                 4286 	jr	NZ, 00104$
                                   4287 ;src/main.c:426: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010C5 F8 03                 4288 	ldhl	sp,	#3
      0010C7 56                    4289 	ld	d, (hl)
                                   4290 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010C8 6A                    4291 	ld	l, d
                                   4292 ;	spillPairReg hl
                                   4293 ;	spillPairReg hl
      0010C9 26 00                 4294 	ld	h, #0x00
                                   4295 ;	spillPairReg hl
                                   4296 ;	spillPairReg hl
      0010CB 29                    4297 	add	hl, hl
      0010CC 29                    4298 	add	hl, hl
      0010CD D5                    4299 	push	de
      0010CE 11r00r00              4300 	ld	de, #_shadow_OAM
      0010D1 19                    4301 	add	hl, de
      0010D2 23                    4302 	inc	hl
      0010D3 23                    4303 	inc	hl
      0010D4 D1                    4304 	pop	de
      0010D5 73                    4305 	ld	(hl), e
                                   4306 ;src/main.c:427: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010D6 D1                    4307 	pop	de
      0010D7 D5                    4308 	push	de
      0010D8 1A                    4309 	ld	a, (de)
      0010D9 F8 05                 4310 	ldhl	sp,	#5
      0010DB 32                    4311 	ld	(hl-), a
      0010DC 0A                    4312 	ld	a, (bc)
      0010DD 32                    4313 	ld	(hl-), a
                                   4314 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0010DE 6E                    4315 	ld	l, (hl)
                                   4316 ;	spillPairReg hl
                                   4317 ;	spillPairReg hl
      0010DF 26 00                 4318 	ld	h, #0x00
                                   4319 ;	spillPairReg hl
                                   4320 ;	spillPairReg hl
      0010E1 29                    4321 	add	hl, hl
      0010E2 29                    4322 	add	hl, hl
      0010E3 11r00r00              4323 	ld	de, #_shadow_OAM
      0010E6 19                    4324 	add	hl, de
      0010E7 5D                    4325 	ld	e, l
      0010E8 54                    4326 	ld	d, h
                                   4327 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0010E9 F8 05                 4328 	ldhl	sp,	#5
      0010EB 3A                    4329 	ld	a, (hl-)
      0010EC 12                    4330 	ld	(de), a
      0010ED 13                    4331 	inc	de
      0010EE 7E                    4332 	ld	a, (hl)
      0010EF 12                    4333 	ld	(de), a
                                   4334 ;src/main.c:427: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010F0 18 65                 4335 	jr	00107$
      0010F2                       4336 00104$:
                                   4337 ;src/main.c:430: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010F2 F8 03                 4338 	ldhl	sp,	#3
      0010F4 56                    4339 	ld	d, (hl)
                                   4340 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010F5 6A                    4341 	ld	l, d
                                   4342 ;	spillPairReg hl
                                   4343 ;	spillPairReg hl
      0010F6 26 00                 4344 	ld	h, #0x00
                                   4345 ;	spillPairReg hl
                                   4346 ;	spillPairReg hl
      0010F8 29                    4347 	add	hl, hl
      0010F9 29                    4348 	add	hl, hl
      0010FA D5                    4349 	push	de
      0010FB 11r00r00              4350 	ld	de, #_shadow_OAM
      0010FE 19                    4351 	add	hl, de
      0010FF 23                    4352 	inc	hl
      001100 23                    4353 	inc	hl
      001101 D1                    4354 	pop	de
      001102 73                    4355 	ld	(hl), e
                                   4356 ;src/main.c:431: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001103 D1                    4357 	pop	de
      001104 D5                    4358 	push	de
      001105 1A                    4359 	ld	a, (de)
      001106 F8 04                 4360 	ldhl	sp,	#4
      001108 22                    4361 	ld	(hl+), a
      001109 0A                    4362 	ld	a, (bc)
      00110A 32                    4363 	ld	(hl-), a
      00110B 2B                    4364 	dec	hl
      00110C 5E                    4365 	ld	e, (hl)
                                   4366 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00110D 26 00                 4367 	ld	h, #0x00
                                   4368 ;	spillPairReg hl
                                   4369 ;	spillPairReg hl
      00110F 6B                    4370 	ld	l, e
      001110 29                    4371 	add	hl, hl
      001111 29                    4372 	add	hl, hl
      001112 11r00r00              4373 	ld	de, #_shadow_OAM
      001115 19                    4374 	add	hl, de
      001116 5D                    4375 	ld	e, l
      001117 54                    4376 	ld	d, h
                                   4377 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001118 F8 04                 4378 	ldhl	sp,	#4
      00111A 2A                    4379 	ld	a, (hl+)
      00111B 12                    4380 	ld	(de), a
      00111C 13                    4381 	inc	de
      00111D 7E                    4382 	ld	a, (hl)
      00111E 12                    4383 	ld	(de), a
                                   4384 ;src/main.c:433: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      00111F 21 07 00              4385 	ld	hl, #0x0007
      001122 09                    4386 	add	hl, bc
      001123 5E                    4387 	ld	e, (hl)
      001124 F8 02                 4388 	ldhl	sp,	#2
      001126 7E                    4389 	ld	a, (hl)
      001127 C6 0B                 4390 	add	a, #0x0b
      001129 F8 05                 4391 	ldhl	sp,	#5
      00112B 77                    4392 	ld	(hl), a
      00112C 56                    4393 	ld	d, (hl)
                                   4394 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00112D 6A                    4395 	ld	l, d
                                   4396 ;	spillPairReg hl
                                   4397 ;	spillPairReg hl
      00112E 26 00                 4398 	ld	h, #0x00
                                   4399 ;	spillPairReg hl
                                   4400 ;	spillPairReg hl
      001130 29                    4401 	add	hl, hl
      001131 29                    4402 	add	hl, hl
      001132 D5                    4403 	push	de
      001133 11r00r00              4404 	ld	de, #_shadow_OAM
      001136 19                    4405 	add	hl, de
      001137 23                    4406 	inc	hl
      001138 23                    4407 	inc	hl
      001139 D1                    4408 	pop	de
      00113A 73                    4409 	ld	(hl), e
                                   4410 ;src/main.c:434: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      00113B D1                    4411 	pop	de
      00113C D5                    4412 	push	de
      00113D 1A                    4413 	ld	a, (de)
      00113E F8 04                 4414 	ldhl	sp,	#4
      001140 32                    4415 	ld	(hl-), a
      001141 0A                    4416 	ld	a, (bc)
      001142 22                    4417 	ld	(hl+), a
      001143 23                    4418 	inc	hl
      001144 5E                    4419 	ld	e, (hl)
                                   4420 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001145 26 00                 4421 	ld	h, #0x00
                                   4422 ;	spillPairReg hl
                                   4423 ;	spillPairReg hl
      001147 6B                    4424 	ld	l, e
      001148 29                    4425 	add	hl, hl
      001149 29                    4426 	add	hl, hl
      00114A 11r00r00              4427 	ld	de, #_shadow_OAM
      00114D 19                    4428 	add	hl, de
      00114E 5D                    4429 	ld	e, l
      00114F 54                    4430 	ld	d, h
                                   4431 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001150 F8 04                 4432 	ldhl	sp,	#4
      001152 3A                    4433 	ld	a, (hl-)
      001153 12                    4434 	ld	(de), a
      001154 13                    4435 	inc	de
      001155 7E                    4436 	ld	a, (hl)
      001156 12                    4437 	ld	(de), a
                                   4438 ;src/main.c:434: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001157                       4439 00107$:
                                   4440 ;src/main.c:439: eptr++;
      001157 21 12 00              4441 	ld	hl, #0x0012
      00115A 09                    4442 	add	hl, bc
      00115B 4D                    4443 	ld	c, l
      00115C 44                    4444 	ld	b, h
                                   4445 ;src/main.c:414: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00115D F8 06                 4446 	ldhl	sp,	#6
      00115F 34                    4447 	inc	(hl)
      001160 C3r24r10              4448 	jp	00116$
      001163                       4449 00118$:
                                   4450 ;src/main.c:442: }
      001163 E8 07                 4451 	add	sp, #7
      001165 C9                    4452 	ret
                                   4453 ;src/main.c:445: void updateEnemyPositions() {
                                   4454 ;	---------------------------------
                                   4455 ; Function updateEnemyPositions
                                   4456 ; ---------------------------------
      001166                       4457 _updateEnemyPositions::
      001166 E8 F0                 4458 	add	sp, #-16
                                   4459 ;src/main.c:448: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001168 F8 0F                 4460 	ldhl	sp,	#15
      00116A 36 00                 4461 	ld	(hl), #0x00
      00116C                       4462 00196$:
      00116C 21r8Er0B              4463 	ld	hl, #_ENEMYCOUNT
      00116F 4E                    4464 	ld	c, (hl)
      001170 F8 0F                 4465 	ldhl	sp,	#15
      001172 7E                    4466 	ld	a, (hl)
      001173 91                    4467 	sub	a, c
      001174 D2r18r16              4468 	jp	NC, 00134$
                                   4469 ;src/main.c:449: if (!enemies[i].alive) {
      001177 4E                    4470 	ld	c, (hl)
      001178 06 00                 4471 	ld	b, #0x00
      00117A 69                    4472 	ld	l, c
      00117B 60                    4473 	ld	h, b
      00117C 29                    4474 	add	hl, hl
      00117D 29                    4475 	add	hl, hl
      00117E 29                    4476 	add	hl, hl
      00117F 09                    4477 	add	hl, bc
      001180 29                    4478 	add	hl, hl
                                   4479 ;src/main.c:457: if (enemies[i].x < playerDrawX) {
      001181 01r5Ar00              4480 	ld	bc,#_enemies
      001184 09                    4481 	add	hl,bc
      001185 E5                    4482 	push	hl
      001186 7D                    4483 	ld	a, l
      001187 F8 04                 4484 	ldhl	sp,	#4
      001189 77                    4485 	ld	(hl), a
      00118A E1                    4486 	pop	hl
      00118B 7C                    4487 	ld	a, h
      00118C F8 03                 4488 	ldhl	sp,	#3
                                   4489 ;src/main.c:449: if (!enemies[i].alive) {
      00118E 32                    4490 	ld	(hl-), a
      00118F 2A                    4491 	ld	a, (hl+)
      001190 5F                    4492 	ld	e, a
      001191 56                    4493 	ld	d, (hl)
      001192 21 09 00              4494 	ld	hl, #0x0009
      001195 19                    4495 	add	hl, de
      001196 4D                    4496 	ld	c, l
      001197 44                    4497 	ld	b, h
      001198 0A                    4498 	ld	a, (bc)
      001199 B7                    4499 	or	a, a
      00119A CAr12r16              4500 	jp	Z, 00133$
                                   4501 ;src/main.c:452: enemies[i].x -= xOverflow;
      00119D F8 02                 4502 	ldhl	sp,#2
      00119F 2A                    4503 	ld	a, (hl+)
      0011A0 5F                    4504 	ld	e, a
      0011A1 56                    4505 	ld	d, (hl)
      0011A2 1A                    4506 	ld	a, (de)
      0011A3 4F                    4507 	ld	c, a
      0011A4 13                    4508 	inc	de
      0011A5 1A                    4509 	ld	a, (de)
      0011A6 47                    4510 	ld	b, a
      0011A7 21rA1r00              4511 	ld	hl, #_xOverflow
      0011AA 2A                    4512 	ld	a, (hl+)
      0011AB 5F                    4513 	ld	e, a
      0011AC 56                    4514 	ld	d, (hl)
      0011AD 79                    4515 	ld	a, c
      0011AE 93                    4516 	sub	a, e
      0011AF 5F                    4517 	ld	e, a
      0011B0 78                    4518 	ld	a, b
      0011B1 9A                    4519 	sbc	a, d
      0011B2 F8 0E                 4520 	ldhl	sp,	#14
      0011B4 32                    4521 	ld	(hl-), a
      0011B5 73                    4522 	ld	(hl), e
      0011B6 F8 02                 4523 	ldhl	sp,#2
      0011B8 2A                    4524 	ld	a, (hl+)
      0011B9 5F                    4525 	ld	e, a
      0011BA 56                    4526 	ld	d, (hl)
      0011BB F8 0D                 4527 	ldhl	sp,	#13
      0011BD 2A                    4528 	ld	a, (hl+)
      0011BE 12                    4529 	ld	(de), a
      0011BF 13                    4530 	inc	de
      0011C0 7E                    4531 	ld	a, (hl)
      0011C1 12                    4532 	ld	(de), a
                                   4533 ;src/main.c:453: enemies[i].y -= yOverflow;
      0011C2 F8 02                 4534 	ldhl	sp,#2
      0011C4 2A                    4535 	ld	a, (hl+)
      0011C5 5F                    4536 	ld	e, a
      0011C6 56                    4537 	ld	d, (hl)
      0011C7 21 02 00              4538 	ld	hl, #0x0002
      0011CA 19                    4539 	add	hl, de
      0011CB E5                    4540 	push	hl
      0011CC 7D                    4541 	ld	a, l
      0011CD F8 06                 4542 	ldhl	sp,	#6
      0011CF 77                    4543 	ld	(hl), a
      0011D0 E1                    4544 	pop	hl
      0011D1 7C                    4545 	ld	a, h
      0011D2 F8 05                 4546 	ldhl	sp,	#5
      0011D4 32                    4547 	ld	(hl-), a
      0011D5 2A                    4548 	ld	a, (hl+)
      0011D6 5F                    4549 	ld	e, a
      0011D7 56                    4550 	ld	d, (hl)
      0011D8 1A                    4551 	ld	a, (de)
      0011D9 4F                    4552 	ld	c, a
      0011DA 13                    4553 	inc	de
      0011DB 1A                    4554 	ld	a, (de)
      0011DC 47                    4555 	ld	b, a
      0011DD 79                    4556 	ld	a, c
      0011DE 21rA3r00              4557 	ld	hl, #_yOverflow
      0011E1 96                    4558 	sub	a, (hl)
      0011E2 23                    4559 	inc	hl
      0011E3 4F                    4560 	ld	c, a
      0011E4 78                    4561 	ld	a, b
      0011E5 9E                    4562 	sbc	a, (hl)
      0011E6 47                    4563 	ld	b, a
      0011E7 F8 04                 4564 	ldhl	sp,	#4
      0011E9 2A                    4565 	ld	a,	(hl+)
      0011EA 66                    4566 	ld	h, (hl)
      0011EB 6F                    4567 	ld	l, a
      0011EC 79                    4568 	ld	a, c
      0011ED 22                    4569 	ld	(hl+), a
      0011EE 70                    4570 	ld	(hl), b
                                   4571 ;src/main.c:456: if (abs(enemies[i].x - playerDrawX) > 8) {
      0011EF F8 0D                 4572 	ldhl	sp,	#13
      0011F1 7E                    4573 	ld	a, (hl)
      0011F2 21r9Br00              4574 	ld	hl, #_playerDrawX
      0011F5 4E                    4575 	ld	c, (hl)
      0011F6 91                    4576 	sub	a, c
      0011F7 4F                    4577 	ld	c, a
                                   4578 ;src/main.c:359: if (value >= 0) return value;
      0011F8 CB 79                 4579 	bit	7, c
      0011FA 20 03                 4580 	jr	NZ, 00169$
      0011FC 41                    4581 	ld	b, c
      0011FD 18 03                 4582 	jr	00171$
      0011FF                       4583 00169$:
                                   4584 ;src/main.c:360: else return - value;
      0011FF AF                    4585 	xor	a, a
      001200 91                    4586 	sub	a, c
      001201 47                    4587 	ld	b, a
                                   4588 ;src/main.c:456: if (abs(enemies[i].x - playerDrawX) > 8) {
      001202                       4589 00171$:
                                   4590 ;src/main.c:471: enemies[i].ySpeed += enemies[i].accel;
      001202 F8 02                 4591 	ldhl	sp,#2
      001204 2A                    4592 	ld	a, (hl+)
      001205 5F                    4593 	ld	e, a
      001206 56                    4594 	ld	d, (hl)
      001207 21 0D 00              4595 	ld	hl, #0x000d
      00120A 19                    4596 	add	hl, de
      00120B 33                    4597 	inc	sp
      00120C 33                    4598 	inc	sp
      00120D E5                    4599 	push	hl
                                   4600 ;src/main.c:458: enemies[i].xSpeed += enemies[i].accel;
      00120E F8 02                 4601 	ldhl	sp,#2
      001210 2A                    4602 	ld	a, (hl+)
      001211 5F                    4603 	ld	e, a
      001212 56                    4604 	ld	d, (hl)
      001213 21 0E 00              4605 	ld	hl, #0x000e
      001216 19                    4606 	add	hl, de
      001217 E5                    4607 	push	hl
      001218 7D                    4608 	ld	a, l
      001219 F8 08                 4609 	ldhl	sp,	#8
      00121B 77                    4610 	ld	(hl), a
      00121C E1                    4611 	pop	hl
      00121D 7C                    4612 	ld	a, h
      00121E F8 07                 4613 	ldhl	sp,	#7
                                   4614 ;src/main.c:465: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      001220 32                    4615 	ld	(hl-), a
      001221 2A                    4616 	ld	a, (hl+)
      001222 5F                    4617 	ld	e, a
      001223 56                    4618 	ld	d, (hl)
      001224 1A                    4619 	ld	a, (de)
      001225 4F                    4620 	ld	c, a
                                   4621 ;src/main.c:456: if (abs(enemies[i].x - playerDrawX) > 8) {
      001226 58                    4622 	ld	e, b
      001227 3E 08                 4623 	ld	a,#0x08
      001229 57                    4624 	ld	d,a
      00122A 90                    4625 	sub	a, b
      00122B CB 7B                 4626 	bit	7, e
      00122D 28 07                 4627 	jr	Z, 00407$
      00122F CB 7A                 4628 	bit	7, d
      001231 20 08                 4629 	jr	NZ, 00408$
      001233 BF                    4630 	cp	a, a
      001234 18 05                 4631 	jr	00408$
      001236                       4632 00407$:
      001236 CB 7A                 4633 	bit	7, d
      001238 28 01                 4634 	jr	Z, 00408$
      00123A 37                    4635 	scf
      00123B                       4636 00408$:
      00123B 30 4E                 4637 	jr	NC, 00111$
                                   4638 ;src/main.c:457: if (enemies[i].x < playerDrawX) {
      00123D F8 02                 4639 	ldhl	sp,#2
      00123F 2A                    4640 	ld	a, (hl+)
      001240 5F                    4641 	ld	e, a
      001241 56                    4642 	ld	d, (hl)
      001242 1A                    4643 	ld	a, (de)
      001243 F8 0B                 4644 	ldhl	sp,	#11
      001245 22                    4645 	ld	(hl+), a
      001246 13                    4646 	inc	de
      001247 1A                    4647 	ld	a, (de)
      001248 77                    4648 	ld	(hl), a
      001249 FAr9Br00              4649 	ld	a, (#_playerDrawX)
      00124C F8 0D                 4650 	ldhl	sp,	#13
      00124E 22                    4651 	ld	(hl+), a
      00124F 36 00                 4652 	ld	(hl), #0x00
                                   4653 ;src/main.c:458: enemies[i].xSpeed += enemies[i].accel;
      001251 D1                    4654 	pop	de
      001252 D5                    4655 	push	de
      001253 1A                    4656 	ld	a, (de)
      001254 47                    4657 	ld	b, a
                                   4658 ;src/main.c:457: if (enemies[i].x < playerDrawX) {
      001255 F8 0B                 4659 	ldhl	sp,	#11
      001257 5D                    4660 	ld	e, l
      001258 54                    4661 	ld	d, h
      001259 F8 0D                 4662 	ldhl	sp,	#13
      00125B 1A                    4663 	ld	a, (de)
      00125C 13                    4664 	inc	de
      00125D 96                    4665 	sub	a, (hl)
      00125E 23                    4666 	inc	hl
      00125F 1A                    4667 	ld	a, (de)
      001260 9E                    4668 	sbc	a, (hl)
      001261 1A                    4669 	ld	a, (de)
      001262 57                    4670 	ld	d, a
      001263 CB 7E                 4671 	bit	7, (hl)
      001265 28 07                 4672 	jr	Z, 00409$
      001267 CB 7A                 4673 	bit	7, d
      001269 20 08                 4674 	jr	NZ, 00410$
      00126B BF                    4675 	cp	a, a
      00126C 18 05                 4676 	jr	00410$
      00126E                       4677 00409$:
      00126E CB 7A                 4678 	bit	7, d
      001270 28 01                 4679 	jr	Z, 00410$
      001272 37                    4680 	scf
      001273                       4681 00410$:
      001273 30 0B                 4682 	jr	NC, 00104$
                                   4683 ;src/main.c:458: enemies[i].xSpeed += enemies[i].accel;
      001275 79                    4684 	ld	a, c
      001276 80                    4685 	add	a, b
      001277 4F                    4686 	ld	c, a
      001278 F8 06                 4687 	ldhl	sp,	#6
      00127A 2A                    4688 	ld	a,	(hl+)
      00127B 66                    4689 	ld	h, (hl)
      00127C 6F                    4690 	ld	l, a
      00127D 71                    4691 	ld	(hl), c
      00127E 18 38                 4692 	jr	00112$
      001280                       4693 00104$:
                                   4694 ;src/main.c:461: enemies[i].xSpeed -= enemies[i].accel;
      001280 79                    4695 	ld	a, c
      001281 90                    4696 	sub	a, b
      001282 4F                    4697 	ld	c, a
      001283 F8 06                 4698 	ldhl	sp,	#6
      001285 2A                    4699 	ld	a,	(hl+)
      001286 66                    4700 	ld	h, (hl)
      001287 6F                    4701 	ld	l, a
      001288 71                    4702 	ld	(hl), c
      001289 18 2D                 4703 	jr	00112$
      00128B                       4704 00111$:
                                   4705 ;src/main.c:465: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      00128B 59                    4706 	ld	e, c
      00128C AF                    4707 	xor	a, a
      00128D 57                    4708 	ld	d, a
      00128E 91                    4709 	sub	a, c
      00128F CB 7B                 4710 	bit	7, e
      001291 28 07                 4711 	jr	Z, 00411$
      001293 CB 7A                 4712 	bit	7, d
      001295 20 08                 4713 	jr	NZ, 00412$
      001297 BF                    4714 	cp	a, a
      001298 18 05                 4715 	jr	00412$
      00129A                       4716 00411$:
      00129A CB 7A                 4717 	bit	7, d
      00129C 28 01                 4718 	jr	Z, 00412$
      00129E 37                    4719 	scf
      00129F                       4720 00412$:
      00129F 30 07                 4721 	jr	NC, 00107$
      0012A1 0D                    4722 	dec	c
      0012A2 F8 06                 4723 	ldhl	sp,	#6
      0012A4 2A                    4724 	ld	a,	(hl+)
      0012A5 66                    4725 	ld	h, (hl)
      0012A6 6F                    4726 	ld	l, a
      0012A7 71                    4727 	ld	(hl), c
      0012A8                       4728 00107$:
      0012A8 F8 06                 4729 	ldhl	sp,#6
      0012AA 2A                    4730 	ld	a, (hl+)
      0012AB 5F                    4731 	ld	e, a
      0012AC 56                    4732 	ld	d, (hl)
      0012AD 1A                    4733 	ld	a, (de)
      0012AE 4F                    4734 	ld	c, a
                                   4735 ;src/main.c:466: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      0012AF CB 79                 4736 	bit	7, c
      0012B1 28 05                 4737 	jr	Z, 00112$
      0012B3 0C                    4738 	inc	c
      0012B4 3A                    4739 	ld	a, (hl-)
      0012B5 6E                    4740 	ld	l, (hl)
      0012B6 67                    4741 	ld	h, a
      0012B7 71                    4742 	ld	(hl), c
      0012B8                       4743 00112$:
                                   4744 ;src/main.c:469: if (abs(enemies[i].y - playerDrawY) > 8) {
      0012B8 F8 04                 4745 	ldhl	sp,#4
      0012BA 2A                    4746 	ld	a, (hl+)
      0012BB 5F                    4747 	ld	e, a
      0012BC 56                    4748 	ld	d, (hl)
      0012BD 1A                    4749 	ld	a, (de)
      0012BE 4F                    4750 	ld	c, a
      0012BF 13                    4751 	inc	de
      0012C0 1A                    4752 	ld	a, (de)
      0012C1 47                    4753 	ld	b, a
      0012C2 79                    4754 	ld	a, c
      0012C3 21r9Cr00              4755 	ld	hl, #_playerDrawY
      0012C6 5E                    4756 	ld	e, (hl)
      0012C7 93                    4757 	sub	a, e
      0012C8 6F                    4758 	ld	l, a
                                   4759 ;	spillPairReg hl
                                   4760 ;	spillPairReg hl
                                   4761 ;src/main.c:359: if (value >= 0) return value;
      0012C9 CB 7D                 4762 	bit	7, l
      0012CB 20 06                 4763 	jr	NZ, 00173$
      0012CD 7D                    4764 	ld	a, l
      0012CE F8 0E                 4765 	ldhl	sp,	#14
      0012D0 77                    4766 	ld	(hl), a
      0012D1 18 06                 4767 	jr	00175$
      0012D3                       4768 00173$:
                                   4769 ;src/main.c:360: else return - value;
      0012D3 AF                    4770 	xor	a, a
      0012D4 95                    4771 	sub	a, l
      0012D5 5F                    4772 	ld	e, a
      0012D6 F8 0E                 4773 	ldhl	sp,	#14
      0012D8 73                    4774 	ld	(hl), e
                                   4775 ;src/main.c:469: if (abs(enemies[i].y - playerDrawY) > 8) {
      0012D9                       4776 00175$:
                                   4777 ;src/main.c:471: enemies[i].ySpeed += enemies[i].accel;
      0012D9 F8 02                 4778 	ldhl	sp,#2
      0012DB 2A                    4779 	ld	a, (hl+)
      0012DC 5F                    4780 	ld	e, a
      0012DD 56                    4781 	ld	d, (hl)
      0012DE 21 0F 00              4782 	ld	hl, #0x000f
      0012E1 19                    4783 	add	hl, de
      0012E2 E5                    4784 	push	hl
      0012E3 7D                    4785 	ld	a, l
      0012E4 F8 0A                 4786 	ldhl	sp,	#10
      0012E6 77                    4787 	ld	(hl), a
      0012E7 E1                    4788 	pop	hl
      0012E8 7C                    4789 	ld	a, h
      0012E9 F8 09                 4790 	ldhl	sp,	#9
                                   4791 ;src/main.c:478: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      0012EB 32                    4792 	ld	(hl-), a
      0012EC 2A                    4793 	ld	a, (hl+)
      0012ED 5F                    4794 	ld	e, a
      0012EE 2A                    4795 	ld	a, (hl+)
      0012EF 23                    4796 	inc	hl
      0012F0 57                    4797 	ld	d, a
      0012F1 1A                    4798 	ld	a, (de)
      0012F2 77                    4799 	ld	(hl), a
                                   4800 ;src/main.c:469: if (abs(enemies[i].y - playerDrawY) > 8) {
      0012F3 F8 0E                 4801 	ldhl	sp,	#14
      0012F5 5E                    4802 	ld	e, (hl)
      0012F6 3E 08                 4803 	ld	a,#0x08
      0012F8 57                    4804 	ld	d,a
      0012F9 96                    4805 	sub	a, (hl)
      0012FA CB 7B                 4806 	bit	7, e
      0012FC 28 07                 4807 	jr	Z, 00413$
      0012FE CB 7A                 4808 	bit	7, d
      001300 20 08                 4809 	jr	NZ, 00414$
      001302 BF                    4810 	cp	a, a
      001303 18 05                 4811 	jr	00414$
      001305                       4812 00413$:
      001305 CB 7A                 4813 	bit	7, d
      001307 28 01                 4814 	jr	Z, 00414$
      001309 37                    4815 	scf
      00130A                       4816 00414$:
      00130A 30 44                 4817 	jr	NC, 00121$
                                   4818 ;src/main.c:470: if (enemies[i].y < playerDrawY) {
      00130C FAr9Cr00              4819 	ld	a, (#_playerDrawY)
      00130F F8 0C                 4820 	ldhl	sp,	#12
      001311 22                    4821 	ld	(hl+), a
                                   4822 ;src/main.c:458: enemies[i].xSpeed += enemies[i].accel;
      001312 AF                    4823 	xor	a, a
      001313 22                    4824 	ld	(hl+), a
      001314 D1                    4825 	pop	de
      001315 D5                    4826 	push	de
      001316 1A                    4827 	ld	a, (de)
                                   4828 ;src/main.c:470: if (enemies[i].y < playerDrawY) {
      001317 32                    4829 	ld	(hl-), a
      001318 2B                    4830 	dec	hl
      001319 79                    4831 	ld	a, c
      00131A 96                    4832 	sub	a, (hl)
      00131B 23                    4833 	inc	hl
      00131C 78                    4834 	ld	a, b
      00131D 9E                    4835 	sbc	a, (hl)
      00131E 78                    4836 	ld	a, b
      00131F 57                    4837 	ld	d, a
      001320 CB 7E                 4838 	bit	7, (hl)
      001322 28 07                 4839 	jr	Z, 00415$
      001324 CB 7A                 4840 	bit	7, d
      001326 20 08                 4841 	jr	NZ, 00416$
      001328 BF                    4842 	cp	a, a
      001329 18 05                 4843 	jr	00416$
      00132B                       4844 00415$:
      00132B CB 7A                 4845 	bit	7, d
      00132D 28 01                 4846 	jr	Z, 00416$
      00132F 37                    4847 	scf
      001330                       4848 00416$:
      001330 30 0F                 4849 	jr	NC, 00114$
                                   4850 ;src/main.c:471: enemies[i].ySpeed += enemies[i].accel;
      001332 F8 0B                 4851 	ldhl	sp,	#11
      001334 7E                    4852 	ld	a, (hl)
      001335 F8 0E                 4853 	ldhl	sp,	#14
      001337 86                    4854 	add	a, (hl)
      001338 4F                    4855 	ld	c, a
      001339 F8 08                 4856 	ldhl	sp,	#8
      00133B 2A                    4857 	ld	a,	(hl+)
      00133C 66                    4858 	ld	h, (hl)
      00133D 6F                    4859 	ld	l, a
      00133E 71                    4860 	ld	(hl), c
      00133F 18 41                 4861 	jr	00122$
      001341                       4862 00114$:
                                   4863 ;src/main.c:474: enemies[i].ySpeed -= enemies[i].accel;
      001341 F8 0B                 4864 	ldhl	sp,	#11
      001343 7E                    4865 	ld	a, (hl)
      001344 F8 0E                 4866 	ldhl	sp,	#14
      001346 96                    4867 	sub	a, (hl)
      001347 4F                    4868 	ld	c, a
      001348 F8 08                 4869 	ldhl	sp,	#8
      00134A 2A                    4870 	ld	a,	(hl+)
      00134B 66                    4871 	ld	h, (hl)
      00134C 6F                    4872 	ld	l, a
      00134D 71                    4873 	ld	(hl), c
      00134E 18 32                 4874 	jr	00122$
      001350                       4875 00121$:
                                   4876 ;src/main.c:478: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001350 F8 0B                 4877 	ldhl	sp,	#11
      001352 5E                    4878 	ld	e, (hl)
      001353 AF                    4879 	xor	a, a
      001354 57                    4880 	ld	d, a
      001355 96                    4881 	sub	a, (hl)
      001356 CB 7B                 4882 	bit	7, e
      001358 28 07                 4883 	jr	Z, 00417$
      00135A CB 7A                 4884 	bit	7, d
      00135C 20 08                 4885 	jr	NZ, 00418$
      00135E BF                    4886 	cp	a, a
      00135F 18 05                 4887 	jr	00418$
      001361                       4888 00417$:
      001361 CB 7A                 4889 	bit	7, d
      001363 28 01                 4890 	jr	Z, 00418$
      001365 37                    4891 	scf
      001366                       4892 00418$:
      001366 30 0A                 4893 	jr	NC, 00117$
      001368 F8 0B                 4894 	ldhl	sp,	#11
      00136A 4E                    4895 	ld	c, (hl)
      00136B 0D                    4896 	dec	c
      00136C F8 08                 4897 	ldhl	sp,	#8
      00136E 2A                    4898 	ld	a,	(hl+)
      00136F 66                    4899 	ld	h, (hl)
      001370 6F                    4900 	ld	l, a
      001371 71                    4901 	ld	(hl), c
      001372                       4902 00117$:
      001372 F8 08                 4903 	ldhl	sp,#8
      001374 2A                    4904 	ld	a, (hl+)
      001375 5F                    4905 	ld	e, a
      001376 56                    4906 	ld	d, (hl)
      001377 1A                    4907 	ld	a, (de)
      001378 4F                    4908 	ld	c, a
                                   4909 ;src/main.c:479: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      001379 CB 79                 4910 	bit	7, c
      00137B 28 05                 4911 	jr	Z, 00122$
      00137D 0C                    4912 	inc	c
      00137E 3A                    4913 	ld	a, (hl-)
      00137F 6E                    4914 	ld	l, (hl)
      001380 67                    4915 	ld	h, a
      001381 71                    4916 	ld	(hl), c
      001382                       4917 00122$:
                                   4918 ;src/main.c:483: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001382 F8 02                 4919 	ldhl	sp,#2
      001384 2A                    4920 	ld	a, (hl+)
      001385 5F                    4921 	ld	e, a
      001386 56                    4922 	ld	d, (hl)
      001387 21 0C 00              4923 	ld	hl, #0x000c
      00138A 19                    4924 	add	hl, de
      00138B E5                    4925 	push	hl
      00138C 7D                    4926 	ld	a, l
      00138D F8 0C                 4927 	ldhl	sp,	#12
      00138F 77                    4928 	ld	(hl), a
      001390 E1                    4929 	pop	hl
      001391 7C                    4930 	ld	a, h
      001392 F8 0B                 4931 	ldhl	sp,	#11
      001394 32                    4932 	ld	(hl-), a
      001395 2A                    4933 	ld	a, (hl+)
      001396 5F                    4934 	ld	e, a
      001397 2A                    4935 	ld	a, (hl+)
      001398 57                    4936 	ld	d, a
      001399 1A                    4937 	ld	a, (de)
      00139A 4F                    4938 	ld	c, a
      00139B 22                    4939 	ld	(hl+), a
      00139C AF                    4940 	xor	a, a
      00139D 91                    4941 	sub	a, c
      00139E 77                    4942 	ld	(hl), a
      00139F F8 06                 4943 	ldhl	sp,#6
      0013A1 2A                    4944 	ld	a, (hl+)
      0013A2 5F                    4945 	ld	e, a
      0013A3 56                    4946 	ld	d, (hl)
      0013A4 1A                    4947 	ld	a, (de)
      0013A5 F8 0E                 4948 	ldhl	sp,	#14
                                   4949 ;src/main.c:340: return (value < min) ? min : (value > max) ? max : value;
      0013A7 32                    4950 	ld	(hl-), a
      0013A8 2A                    4951 	ld	a, (hl+)
      0013A9 5F                    4952 	ld	e, a
      0013AA 56                    4953 	ld	d, (hl)
      0013AB 3A                    4954 	ld	a, (hl-)
      0013AC 96                    4955 	sub	a, (hl)
      0013AD CB 7B                 4956 	bit	7, e
      0013AF 28 07                 4957 	jr	Z, 00419$
      0013B1 CB 7A                 4958 	bit	7, d
      0013B3 20 08                 4959 	jr	NZ, 00420$
      0013B5 BF                    4960 	cp	a, a
      0013B6 18 05                 4961 	jr	00420$
      0013B8                       4962 00419$:
      0013B8 CB 7A                 4963 	bit	7, d
      0013BA 28 01                 4964 	jr	Z, 00420$
      0013BC 37                    4965 	scf
      0013BD                       4966 00420$:
      0013BD 30 06                 4967 	jr	NC, 00202$
      0013BF F8 0D                 4968 	ldhl	sp,	#13
      0013C1 2A                    4969 	ld	a, (hl+)
      0013C2 77                    4970 	ld	(hl), a
      0013C3 18 26                 4971 	jr	00203$
      0013C5                       4972 00202$:
      0013C5 F8 0E                 4973 	ldhl	sp,	#14
      0013C7 3A                    4974 	ld	a, (hl-)
      0013C8 2B                    4975 	dec	hl
      0013C9 5F                    4976 	ld	e, a
      0013CA 56                    4977 	ld	d, (hl)
      0013CB 2A                    4978 	ld	a, (hl+)
      0013CC 23                    4979 	inc	hl
      0013CD 96                    4980 	sub	a, (hl)
      0013CE CB 7B                 4981 	bit	7, e
      0013D0 28 07                 4982 	jr	Z, 00421$
      0013D2 CB 7A                 4983 	bit	7, d
      0013D4 20 08                 4984 	jr	NZ, 00422$
      0013D6 BF                    4985 	cp	a, a
      0013D7 18 05                 4986 	jr	00422$
      0013D9                       4987 00421$:
      0013D9 CB 7A                 4988 	bit	7, d
      0013DB 28 01                 4989 	jr	Z, 00422$
      0013DD 37                    4990 	scf
      0013DE                       4991 00422$:
      0013DE 30 05                 4992 	jr	NC, 00204$
      0013E0 F8 0C                 4993 	ldhl	sp,	#12
      0013E2 5E                    4994 	ld	e, (hl)
      0013E3 18 03                 4995 	jr	00205$
      0013E5                       4996 00204$:
      0013E5 F8 0E                 4997 	ldhl	sp,	#14
      0013E7 5E                    4998 	ld	e, (hl)
      0013E8                       4999 00205$:
      0013E8 F8 0E                 5000 	ldhl	sp,	#14
      0013EA 73                    5001 	ld	(hl), e
      0013EB                       5002 00203$:
      0013EB F8 0E                 5003 	ldhl	sp,	#14
      0013ED 4E                    5004 	ld	c, (hl)
                                   5005 ;src/main.c:483: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0013EE F8 06                 5006 	ldhl	sp,	#6
      0013F0 2A                    5007 	ld	a,	(hl+)
      0013F1 66                    5008 	ld	h, (hl)
      0013F2 6F                    5009 	ld	l, a
      0013F3 71                    5010 	ld	(hl), c
                                   5011 ;src/main.c:484: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0013F4 F8 0A                 5012 	ldhl	sp,#10
      0013F6 2A                    5013 	ld	a, (hl+)
      0013F7 5F                    5014 	ld	e, a
      0013F8 3A                    5015 	ld	a, (hl-)
      0013F9 2B                    5016 	dec	hl
      0013FA 2B                    5017 	dec	hl
      0013FB 57                    5018 	ld	d, a
      0013FC 1A                    5019 	ld	a, (de)
      0013FD 47                    5020 	ld	b, a
      0013FE 48                    5021 	ld	c, b
      0013FF AF                    5022 	xor	a, a
      001400 90                    5023 	sub	a, b
      001401 47                    5024 	ld	b, a
      001402 2A                    5025 	ld	a, (hl+)
      001403 5F                    5026 	ld	e, a
      001404 56                    5027 	ld	d, (hl)
      001405 1A                    5028 	ld	a, (de)
      001406 6F                    5029 	ld	l, a
                                   5030 ;	spillPairReg hl
                                   5031 ;	spillPairReg hl
                                   5032 ;src/main.c:340: return (value < min) ? min : (value > max) ? max : value;
      001407 58                    5033 	ld	e, b
      001408 7D                    5034 	ld	a,l
      001409 57                    5035 	ld	d,a
      00140A 90                    5036 	sub	a, b
      00140B CB 7B                 5037 	bit	7, e
      00140D 28 07                 5038 	jr	Z, 00423$
      00140F CB 7A                 5039 	bit	7, d
      001411 20 08                 5040 	jr	NZ, 00424$
      001413 BF                    5041 	cp	a, a
      001414 18 05                 5042 	jr	00424$
      001416                       5043 00423$:
      001416 CB 7A                 5044 	bit	7, d
      001418 28 01                 5045 	jr	Z, 00424$
      00141A 37                    5046 	scf
      00141B                       5047 00424$:
      00141B 30 03                 5048 	jr	NC, 00206$
      00141D 48                    5049 	ld	c, b
      00141E 18 17                 5050 	jr	00207$
      001420                       5051 00206$:
      001420 5D                    5052 	ld	e, l
      001421 79                    5053 	ld	a,c
      001422 57                    5054 	ld	d,a
      001423 95                    5055 	sub	a, l
      001424 CB 7B                 5056 	bit	7, e
      001426 28 07                 5057 	jr	Z, 00425$
      001428 CB 7A                 5058 	bit	7, d
      00142A 20 08                 5059 	jr	NZ, 00426$
      00142C BF                    5060 	cp	a, a
      00142D 18 05                 5061 	jr	00426$
      00142F                       5062 00425$:
      00142F CB 7A                 5063 	bit	7, d
      001431 28 01                 5064 	jr	Z, 00426$
      001433 37                    5065 	scf
      001434                       5066 00426$:
      001434 38 01                 5067 	jr	C, 00209$
      001436 4D                    5068 	ld	c, l
      001437                       5069 00209$:
      001437                       5070 00207$:
                                   5071 ;src/main.c:484: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001437 F8 08                 5072 	ldhl	sp,	#8
      001439 2A                    5073 	ld	a,	(hl+)
      00143A 66                    5074 	ld	h, (hl)
      00143B 6F                    5075 	ld	l, a
      00143C 71                    5076 	ld	(hl), c
                                   5077 ;src/main.c:487: enemies[i].xReserve += enemies[i].xSpeed;
      00143D F8 02                 5078 	ldhl	sp,#2
      00143F 2A                    5079 	ld	a, (hl+)
      001440 5F                    5080 	ld	e, a
      001441 56                    5081 	ld	d, (hl)
      001442 21 04 00              5082 	ld	hl, #0x0004
      001445 19                    5083 	add	hl, de
      001446 E5                    5084 	push	hl
      001447 7D                    5085 	ld	a, l
      001448 F8 0F                 5086 	ldhl	sp,	#15
      00144A 77                    5087 	ld	(hl), a
      00144B E1                    5088 	pop	hl
      00144C 7C                    5089 	ld	a, h
      00144D F8 0E                 5090 	ldhl	sp,	#14
      00144F 32                    5091 	ld	(hl-), a
      001450 2A                    5092 	ld	a, (hl+)
      001451 5F                    5093 	ld	e, a
      001452 56                    5094 	ld	d, (hl)
      001453 1A                    5095 	ld	a, (de)
      001454 47                    5096 	ld	b, a
      001455 F8 06                 5097 	ldhl	sp,#6
      001457 2A                    5098 	ld	a, (hl+)
      001458 5F                    5099 	ld	e, a
      001459 56                    5100 	ld	d, (hl)
      00145A 1A                    5101 	ld	a, (de)
      00145B 80                    5102 	add	a, b
      00145C 47                    5103 	ld	b, a
      00145D F8 0D                 5104 	ldhl	sp,	#13
      00145F 2A                    5105 	ld	a,	(hl+)
      001460 66                    5106 	ld	h, (hl)
      001461 6F                    5107 	ld	l, a
      001462 70                    5108 	ld	(hl), b
                                   5109 ;src/main.c:488: enemies[i].yReserve += enemies[i].ySpeed;
      001463 F8 02                 5110 	ldhl	sp,#2
      001465 2A                    5111 	ld	a, (hl+)
      001466 5F                    5112 	ld	e, a
      001467 56                    5113 	ld	d, (hl)
      001468 21 05 00              5114 	ld	hl, #0x0005
      00146B 19                    5115 	add	hl, de
      00146C E5                    5116 	push	hl
      00146D 7D                    5117 	ld	a, l
      00146E F8 0C                 5118 	ldhl	sp,	#12
      001470 77                    5119 	ld	(hl), a
      001471 E1                    5120 	pop	hl
      001472 7C                    5121 	ld	a, h
      001473 F8 0B                 5122 	ldhl	sp,	#11
      001475 32                    5123 	ld	(hl-), a
      001476 2A                    5124 	ld	a, (hl+)
      001477 5F                    5125 	ld	e, a
      001478 56                    5126 	ld	d, (hl)
      001479 1A                    5127 	ld	a, (de)
      00147A 81                    5128 	add	a, c
      00147B 4F                    5129 	ld	c, a
      00147C 3A                    5130 	ld	a, (hl-)
      00147D 6E                    5131 	ld	l, (hl)
      00147E 67                    5132 	ld	h, a
      00147F 71                    5133 	ld	(hl), c
                                   5134 ;src/main.c:492: if (enemies[i].xReserve >> 3 > 0) {
      001480 F8 0D                 5135 	ldhl	sp,#13
      001482 2A                    5136 	ld	a, (hl+)
      001483 5F                    5137 	ld	e, a
      001484 3A                    5138 	ld	a, (hl-)
      001485 2B                    5139 	dec	hl
      001486 57                    5140 	ld	d, a
      001487 1A                    5141 	ld	a, (de)
      001488 77                    5142 	ld	(hl), a
      001489 CB 28                 5143 	sra	b
      00148B CB 28                 5144 	sra	b
      00148D CB 28                 5145 	sra	b
      00148F 58                    5146 	ld	e, b
      001490 AF                    5147 	xor	a, a
      001491 57                    5148 	ld	d, a
      001492 90                    5149 	sub	a, b
      001493 CB 7B                 5150 	bit	7, e
      001495 28 07                 5151 	jr	Z, 00427$
      001497 CB 7A                 5152 	bit	7, d
      001499 20 08                 5153 	jr	NZ, 00428$
      00149B BF                    5154 	cp	a, a
      00149C 18 05                 5155 	jr	00428$
      00149E                       5156 00427$:
      00149E CB 7A                 5157 	bit	7, d
      0014A0 28 01                 5158 	jr	Z, 00428$
      0014A2 37                    5159 	scf
      0014A3                       5160 00428$:
      0014A3 30 3F                 5161 	jr	NC, 00126$
                                   5162 ;src/main.c:493: int8_t xMovement = enemies[i].xReserve >> 3;
      0014A5 F8 0C                 5163 	ldhl	sp,	#12
      0014A7 7E                    5164 	ld	a, (hl)
      0014A8 CB 2F                 5165 	sra	a
      0014AA CB 2F                 5166 	sra	a
      0014AC CB 2F                 5167 	sra	a
      0014AE 77                    5168 	ld	(hl), a
                                   5169 ;src/main.c:494: enemies[i].x += xMovement;
      0014AF F8 02                 5170 	ldhl	sp,#2
      0014B1 2A                    5171 	ld	a, (hl+)
      0014B2 5F                    5172 	ld	e, a
      0014B3 56                    5173 	ld	d, (hl)
      0014B4 1A                    5174 	ld	a, (de)
      0014B5 4F                    5175 	ld	c, a
      0014B6 13                    5176 	inc	de
      0014B7 1A                    5177 	ld	a, (de)
      0014B8 47                    5178 	ld	b, a
      0014B9 F8 0C                 5179 	ldhl	sp,	#12
      0014BB 7E                    5180 	ld	a, (hl)
      0014BC 5F                    5181 	ld	e, a
      0014BD 07                    5182 	rlca
      0014BE 9F                    5183 	sbc	a, a
      0014BF 57                    5184 	ld	d, a
      0014C0 69                    5185 	ld	l, c
                                   5186 ;	spillPairReg hl
                                   5187 ;	spillPairReg hl
      0014C1 60                    5188 	ld	h, b
                                   5189 ;	spillPairReg hl
                                   5190 ;	spillPairReg hl
      0014C2 19                    5191 	add	hl, de
      0014C3 4D                    5192 	ld	c, l
      0014C4 44                    5193 	ld	b, h
      0014C5 F8 02                 5194 	ldhl	sp,	#2
      0014C7 2A                    5195 	ld	a,	(hl+)
      0014C8 66                    5196 	ld	h, (hl)
      0014C9 6F                    5197 	ld	l, a
      0014CA 79                    5198 	ld	a, c
      0014CB 22                    5199 	ld	(hl+), a
      0014CC 70                    5200 	ld	(hl), b
                                   5201 ;src/main.c:495: enemies[i].xReserve -=  xMovement << 3;
      0014CD F8 0D                 5202 	ldhl	sp,#13
      0014CF 2A                    5203 	ld	a, (hl+)
      0014D0 5F                    5204 	ld	e, a
      0014D1 3A                    5205 	ld	a, (hl-)
      0014D2 2B                    5206 	dec	hl
      0014D3 57                    5207 	ld	d, a
      0014D4 1A                    5208 	ld	a, (de)
      0014D5 F5                    5209 	push	af
      0014D6 2A                    5210 	ld	a, (hl+)
      0014D7 87                    5211 	add	a, a
      0014D8 87                    5212 	add	a, a
      0014D9 87                    5213 	add	a, a
      0014DA 4F                    5214 	ld	c, a
      0014DB F1                    5215 	pop	af
      0014DC 91                    5216 	sub	a, c
      0014DD 4F                    5217 	ld	c, a
      0014DE 2A                    5218 	ld	a,	(hl+)
      0014DF 66                    5219 	ld	h, (hl)
      0014E0 6F                    5220 	ld	l, a
      0014E1 71                    5221 	ld	(hl), c
      0014E2 18 69                 5222 	jr	00127$
      0014E4                       5223 00126$:
                                   5224 ;src/main.c:498: else if ((-enemies[i].xReserve) >> 3 > 0){
      0014E4 F8 0C                 5225 	ldhl	sp,	#12
      0014E6 7E                    5226 	ld	a, (hl)
      0014E7 4F                    5227 	ld	c, a
      0014E8 07                    5228 	rlca
      0014E9 9F                    5229 	sbc	a, a
      0014EA 47                    5230 	ld	b, a
      0014EB AF                    5231 	xor	a, a
      0014EC 91                    5232 	sub	a, c
      0014ED 4F                    5233 	ld	c, a
      0014EE 9F                    5234 	sbc	a, a
      0014EF 90                    5235 	sub	a, b
      0014F0 47                    5236 	ld	b, a
      0014F1 CB 28                 5237 	sra	b
      0014F3 CB 19                 5238 	rr	c
      0014F5 CB 28                 5239 	sra	b
      0014F7 CB 19                 5240 	rr	c
      0014F9 CB 28                 5241 	sra	b
      0014FB CB 19                 5242 	rr	c
      0014FD 58                    5243 	ld	e, b
      0014FE AF                    5244 	xor	a, a
      0014FF 57                    5245 	ld	d, a
      001500 B9                    5246 	cp	a, c
      001501 98                    5247 	sbc	a, b
      001502 CB 7B                 5248 	bit	7, e
      001504 28 07                 5249 	jr	Z, 00429$
      001506 CB 7A                 5250 	bit	7, d
      001508 20 08                 5251 	jr	NZ, 00430$
      00150A BF                    5252 	cp	a, a
      00150B 18 05                 5253 	jr	00430$
      00150D                       5254 00429$:
      00150D CB 7A                 5255 	bit	7, d
      00150F 28 01                 5256 	jr	Z, 00430$
      001511 37                    5257 	scf
      001512                       5258 00430$:
      001512 30 39                 5259 	jr	NC, 00127$
                                   5260 ;src/main.c:499: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      001514 AF                    5261 	xor	a, a
      001515 91                    5262 	sub	a, c
      001516 4F                    5263 	ld	c, a
      001517 F8 0C                 5264 	ldhl	sp,	#12
      001519 71                    5265 	ld	(hl), c
                                   5266 ;src/main.c:500: enemies[i].x += xMovement;
      00151A F8 02                 5267 	ldhl	sp,#2
      00151C 2A                    5268 	ld	a, (hl+)
      00151D 5F                    5269 	ld	e, a
      00151E 56                    5270 	ld	d, (hl)
      00151F 1A                    5271 	ld	a, (de)
      001520 4F                    5272 	ld	c, a
      001521 13                    5273 	inc	de
      001522 1A                    5274 	ld	a, (de)
      001523 47                    5275 	ld	b, a
      001524 F8 0C                 5276 	ldhl	sp,	#12
      001526 7E                    5277 	ld	a, (hl)
      001527 5F                    5278 	ld	e, a
      001528 07                    5279 	rlca
      001529 9F                    5280 	sbc	a, a
      00152A 57                    5281 	ld	d, a
      00152B 69                    5282 	ld	l, c
                                   5283 ;	spillPairReg hl
                                   5284 ;	spillPairReg hl
      00152C 60                    5285 	ld	h, b
                                   5286 ;	spillPairReg hl
                                   5287 ;	spillPairReg hl
      00152D 19                    5288 	add	hl, de
      00152E 4D                    5289 	ld	c, l
      00152F 44                    5290 	ld	b, h
      001530 F8 02                 5291 	ldhl	sp,	#2
      001532 2A                    5292 	ld	a,	(hl+)
      001533 66                    5293 	ld	h, (hl)
      001534 6F                    5294 	ld	l, a
      001535 79                    5295 	ld	a, c
      001536 22                    5296 	ld	(hl+), a
      001537 70                    5297 	ld	(hl), b
                                   5298 ;src/main.c:501: enemies[i].xReserve +=  (-xMovement) << 3;
      001538 F8 0D                 5299 	ldhl	sp,#13
      00153A 2A                    5300 	ld	a, (hl+)
      00153B 5F                    5301 	ld	e, a
      00153C 3A                    5302 	ld	a, (hl-)
      00153D 2B                    5303 	dec	hl
      00153E 57                    5304 	ld	d, a
      00153F 1A                    5305 	ld	a, (de)
      001540 4F                    5306 	ld	c, a
      001541 AF                    5307 	xor	a, a
      001542 96                    5308 	sub	a, (hl)
      001543 23                    5309 	inc	hl
      001544 87                    5310 	add	a, a
      001545 87                    5311 	add	a, a
      001546 87                    5312 	add	a, a
      001547 81                    5313 	add	a, c
      001548 4F                    5314 	ld	c, a
      001549 2A                    5315 	ld	a,	(hl+)
      00154A 66                    5316 	ld	h, (hl)
      00154B 6F                    5317 	ld	l, a
      00154C 71                    5318 	ld	(hl), c
      00154D                       5319 00127$:
                                   5320 ;src/main.c:488: enemies[i].yReserve += enemies[i].ySpeed;
      00154D F8 0A                 5321 	ldhl	sp,#10
      00154F 2A                    5322 	ld	a, (hl+)
      001550 5F                    5323 	ld	e, a
      001551 56                    5324 	ld	d, (hl)
      001552 1A                    5325 	ld	a, (de)
      001553 4F                    5326 	ld	c, a
                                   5327 ;src/main.c:504: if (enemies[i].yReserve >> 3 > 0) {
      001554 41                    5328 	ld	b, c
      001555 CB 28                 5329 	sra	b
      001557 CB 28                 5330 	sra	b
      001559 CB 28                 5331 	sra	b
      00155B 58                    5332 	ld	e, b
      00155C AF                    5333 	xor	a, a
      00155D 57                    5334 	ld	d, a
      00155E 90                    5335 	sub	a, b
      00155F CB 7B                 5336 	bit	7, e
      001561 28 07                 5337 	jr	Z, 00431$
      001563 CB 7A                 5338 	bit	7, d
      001565 20 08                 5339 	jr	NZ, 00432$
      001567 BF                    5340 	cp	a, a
      001568 18 05                 5341 	jr	00432$
      00156A                       5342 00431$:
      00156A CB 7A                 5343 	bit	7, d
      00156C 28 01                 5344 	jr	Z, 00432$
      00156E 37                    5345 	scf
      00156F                       5346 00432$:
      00156F 30 3A                 5347 	jr	NC, 00131$
                                   5348 ;src/main.c:505: int8_t yMovement = enemies[i].yReserve >> 3;
      001571 F8 0E                 5349 	ldhl	sp,	#14
      001573 70                    5350 	ld	(hl), b
                                   5351 ;src/main.c:506: enemies[i].y += yMovement;
      001574 F8 04                 5352 	ldhl	sp,#4
      001576 2A                    5353 	ld	a, (hl+)
      001577 5F                    5354 	ld	e, a
      001578 56                    5355 	ld	d, (hl)
      001579 1A                    5356 	ld	a, (de)
      00157A 4F                    5357 	ld	c, a
      00157B 13                    5358 	inc	de
      00157C 1A                    5359 	ld	a, (de)
      00157D 47                    5360 	ld	b, a
      00157E F8 0E                 5361 	ldhl	sp,	#14
      001580 7E                    5362 	ld	a, (hl)
      001581 5F                    5363 	ld	e, a
      001582 07                    5364 	rlca
      001583 9F                    5365 	sbc	a, a
      001584 57                    5366 	ld	d, a
      001585 69                    5367 	ld	l, c
                                   5368 ;	spillPairReg hl
                                   5369 ;	spillPairReg hl
      001586 60                    5370 	ld	h, b
                                   5371 ;	spillPairReg hl
                                   5372 ;	spillPairReg hl
      001587 19                    5373 	add	hl, de
      001588 4D                    5374 	ld	c, l
      001589 44                    5375 	ld	b, h
      00158A F8 04                 5376 	ldhl	sp,	#4
      00158C 2A                    5377 	ld	a,	(hl+)
      00158D 66                    5378 	ld	h, (hl)
      00158E 6F                    5379 	ld	l, a
      00158F 79                    5380 	ld	a, c
      001590 22                    5381 	ld	(hl+), a
      001591 70                    5382 	ld	(hl), b
                                   5383 ;src/main.c:507: enemies[i].yReserve -=  yMovement << 3;
      001592 F8 0A                 5384 	ldhl	sp,#10
      001594 2A                    5385 	ld	a, (hl+)
      001595 5F                    5386 	ld	e, a
      001596 56                    5387 	ld	d, (hl)
      001597 1A                    5388 	ld	a, (de)
      001598 F5                    5389 	push	af
      001599 F8 10                 5390 	ldhl	sp,	#16
      00159B 7E                    5391 	ld	a, (hl)
      00159C 87                    5392 	add	a, a
      00159D 87                    5393 	add	a, a
      00159E 87                    5394 	add	a, a
      00159F 4F                    5395 	ld	c, a
      0015A0 F1                    5396 	pop	af
      0015A1 91                    5397 	sub	a, c
      0015A2 4F                    5398 	ld	c, a
      0015A3 F8 0A                 5399 	ldhl	sp,	#10
      0015A5 2A                    5400 	ld	a,	(hl+)
      0015A6 66                    5401 	ld	h, (hl)
      0015A7 6F                    5402 	ld	l, a
      0015A8 71                    5403 	ld	(hl), c
      0015A9 18 67                 5404 	jr	00133$
      0015AB                       5405 00131$:
                                   5406 ;src/main.c:509: else if ((-enemies[i].yReserve) >> 3 > 0){
      0015AB 79                    5407 	ld	a, c
      0015AC 07                    5408 	rlca
      0015AD 9F                    5409 	sbc	a, a
      0015AE 47                    5410 	ld	b, a
      0015AF AF                    5411 	xor	a, a
      0015B0 91                    5412 	sub	a, c
      0015B1 4F                    5413 	ld	c, a
      0015B2 9F                    5414 	sbc	a, a
      0015B3 90                    5415 	sub	a, b
      0015B4 47                    5416 	ld	b, a
      0015B5 CB 28                 5417 	sra	b
      0015B7 CB 19                 5418 	rr	c
      0015B9 CB 28                 5419 	sra	b
      0015BB CB 19                 5420 	rr	c
      0015BD CB 28                 5421 	sra	b
      0015BF CB 19                 5422 	rr	c
      0015C1 58                    5423 	ld	e, b
      0015C2 AF                    5424 	xor	a, a
      0015C3 57                    5425 	ld	d, a
      0015C4 B9                    5426 	cp	a, c
      0015C5 98                    5427 	sbc	a, b
      0015C6 CB 7B                 5428 	bit	7, e
      0015C8 28 07                 5429 	jr	Z, 00433$
      0015CA CB 7A                 5430 	bit	7, d
      0015CC 20 08                 5431 	jr	NZ, 00434$
      0015CE BF                    5432 	cp	a, a
      0015CF 18 05                 5433 	jr	00434$
      0015D1                       5434 00433$:
      0015D1 CB 7A                 5435 	bit	7, d
      0015D3 28 01                 5436 	jr	Z, 00434$
      0015D5 37                    5437 	scf
      0015D6                       5438 00434$:
      0015D6 30 3A                 5439 	jr	NC, 00133$
                                   5440 ;src/main.c:510: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0015D8 AF                    5441 	xor	a, a
      0015D9 91                    5442 	sub	a, c
      0015DA 4F                    5443 	ld	c, a
      0015DB F8 0E                 5444 	ldhl	sp,	#14
      0015DD 71                    5445 	ld	(hl), c
                                   5446 ;src/main.c:511: enemies[i].y += yMovement;
      0015DE F8 04                 5447 	ldhl	sp,#4
      0015E0 2A                    5448 	ld	a, (hl+)
      0015E1 5F                    5449 	ld	e, a
      0015E2 56                    5450 	ld	d, (hl)
      0015E3 1A                    5451 	ld	a, (de)
      0015E4 4F                    5452 	ld	c, a
      0015E5 13                    5453 	inc	de
      0015E6 1A                    5454 	ld	a, (de)
      0015E7 47                    5455 	ld	b, a
      0015E8 F8 0E                 5456 	ldhl	sp,	#14
      0015EA 7E                    5457 	ld	a, (hl)
      0015EB 5F                    5458 	ld	e, a
      0015EC 07                    5459 	rlca
      0015ED 9F                    5460 	sbc	a, a
      0015EE 57                    5461 	ld	d, a
      0015EF 69                    5462 	ld	l, c
      0015F0 60                    5463 	ld	h, b
      0015F1 19                    5464 	add	hl, de
      0015F2 4D                    5465 	ld	c, l
      0015F3 44                    5466 	ld	b, h
      0015F4 F8 04                 5467 	ldhl	sp,	#4
      0015F6 2A                    5468 	ld	a,	(hl+)
      0015F7 66                    5469 	ld	h, (hl)
      0015F8 6F                    5470 	ld	l, a
      0015F9 79                    5471 	ld	a, c
      0015FA 22                    5472 	ld	(hl+), a
      0015FB 70                    5473 	ld	(hl), b
                                   5474 ;src/main.c:512: enemies[i].yReserve +=  (-yMovement) << 3;
      0015FC F8 0A                 5475 	ldhl	sp,#10
      0015FE 2A                    5476 	ld	a, (hl+)
      0015FF 5F                    5477 	ld	e, a
      001600 56                    5478 	ld	d, (hl)
      001601 1A                    5479 	ld	a, (de)
      001602 4F                    5480 	ld	c, a
      001603 AF                    5481 	xor	a, a
      001604 F8 0E                 5482 	ldhl	sp,	#14
      001606 96                    5483 	sub	a, (hl)
      001607 87                    5484 	add	a, a
      001608 87                    5485 	add	a, a
      001609 87                    5486 	add	a, a
      00160A 81                    5487 	add	a, c
      00160B 4F                    5488 	ld	c, a
      00160C F8 0A                 5489 	ldhl	sp,	#10
      00160E 2A                    5490 	ld	a,	(hl+)
      00160F 66                    5491 	ld	h, (hl)
      001610 6F                    5492 	ld	l, a
      001611 71                    5493 	ld	(hl), c
      001612                       5494 00133$:
                                   5495 ;src/main.c:448: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001612 F8 0F                 5496 	ldhl	sp,	#15
      001614 34                    5497 	inc	(hl)
      001615 C3r6Cr11              5498 	jp	00196$
      001618                       5499 00134$:
                                   5500 ;src/main.c:519: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001618 F8 0F                 5501 	ldhl	sp,	#15
      00161A 36 00                 5502 	ld	(hl), #0x00
      00161C                       5503 00198$:
      00161C 21r8Er0B              5504 	ld	hl, #_ENEMYCOUNT
      00161F 4E                    5505 	ld	c, (hl)
      001620 F8 0F                 5506 	ldhl	sp,	#15
      001622 7E                    5507 	ld	a, (hl)
      001623 91                    5508 	sub	a, c
      001624 D2rC2r19              5509 	jp	NC, 00200$
                                   5510 ;src/main.c:521: if (enemies[i].alive) {
      001627 4E                    5511 	ld	c, (hl)
      001628 06 00                 5512 	ld	b, #0x00
      00162A 69                    5513 	ld	l, c
      00162B 60                    5514 	ld	h, b
      00162C 29                    5515 	add	hl, hl
      00162D 29                    5516 	add	hl, hl
      00162E 29                    5517 	add	hl, hl
      00162F 09                    5518 	add	hl, bc
      001630 29                    5519 	add	hl, hl
                                   5520 ;src/main.c:537: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001631 01r5Ar00              5521 	ld	bc,#_enemies
      001634 09                    5522 	add	hl,bc
      001635 E5                    5523 	push	hl
      001636 7D                    5524 	ld	a, l
      001637 F8 03                 5525 	ldhl	sp,	#3
      001639 77                    5526 	ld	(hl), a
      00163A E1                    5527 	pop	hl
      00163B 7C                    5528 	ld	a, h
      00163C F8 02                 5529 	ldhl	sp,	#2
                                   5530 ;src/main.c:521: if (enemies[i].alive) {
      00163E 32                    5531 	ld	(hl-), a
      00163F 2A                    5532 	ld	a, (hl+)
      001640 5F                    5533 	ld	e, a
      001641 56                    5534 	ld	d, (hl)
      001642 21 09 00              5535 	ld	hl, #0x0009
      001645 19                    5536 	add	hl, de
      001646 E5                    5537 	push	hl
      001647 7D                    5538 	ld	a, l
      001648 F8 05                 5539 	ldhl	sp,	#5
      00164A 77                    5540 	ld	(hl), a
      00164B E1                    5541 	pop	hl
      00164C 7C                    5542 	ld	a, h
      00164D F8 04                 5543 	ldhl	sp,	#4
      00164F 32                    5544 	ld	(hl-), a
      001650 2A                    5545 	ld	a, (hl+)
      001651 5F                    5546 	ld	e, a
      001652 56                    5547 	ld	d, (hl)
      001653 1A                    5548 	ld	a, (de)
      001654 F8 0E                 5549 	ldhl	sp,	#14
      001656 77                    5550 	ld	(hl), a
      001657 7E                    5551 	ld	a, (hl)
      001658 B7                    5552 	or	a, a
      001659 CAr4Fr18              5553 	jp	Z, 00157$
                                   5554 ;src/main.c:522: if (enemies[i].visible == 1) {
      00165C F8 01                 5555 	ldhl	sp,#1
      00165E 2A                    5556 	ld	a, (hl+)
      00165F 5F                    5557 	ld	e, a
      001660 56                    5558 	ld	d, (hl)
      001661 21 0A 00              5559 	ld	hl, #0x000a
      001664 19                    5560 	add	hl, de
      001665 E5                    5561 	push	hl
      001666 7D                    5562 	ld	a, l
      001667 F8 07                 5563 	ldhl	sp,	#7
      001669 77                    5564 	ld	(hl), a
      00166A E1                    5565 	pop	hl
      00166B 7C                    5566 	ld	a, h
      00166C F8 06                 5567 	ldhl	sp,	#6
      00166E 32                    5568 	ld	(hl-), a
      00166F 2A                    5569 	ld	a, (hl+)
      001670 5F                    5570 	ld	e, a
      001671 2A                    5571 	ld	a, (hl+)
      001672 57                    5572 	ld	d, a
      001673 1A                    5573 	ld	a, (de)
      001674 77                    5574 	ld	(hl), a
                                   5575 ;src/main.c:523: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001675 F8 01                 5576 	ldhl	sp,#1
      001677 2A                    5577 	ld	a, (hl+)
      001678 5F                    5578 	ld	e, a
      001679 56                    5579 	ld	d, (hl)
      00167A 1A                    5580 	ld	a, (de)
      00167B F8 08                 5581 	ldhl	sp,	#8
      00167D 22                    5582 	ld	(hl+), a
      00167E 13                    5583 	inc	de
      00167F 1A                    5584 	ld	a, (de)
      001680 77                    5585 	ld	(hl), a
      001681 F8 01                 5586 	ldhl	sp,	#1
      001683 2A                    5587 	ld	a, (hl+)
      001684 4F                    5588 	ld	c, a
      001685 46                    5589 	ld	b, (hl)
      001686 03                    5590 	inc	bc
      001687 03                    5591 	inc	bc
                                   5592 ;src/main.c:525: set_sprite_tile(10+(i<<1), 0x7f);
      001688 F8 0F                 5593 	ldhl	sp,	#15
      00168A 5E                    5594 	ld	e, (hl)
                                   5595 ;src/main.c:523: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00168B F8 08                 5596 	ldhl	sp,	#8
      00168D 2A                    5597 	ld	a, (hl+)
      00168E 23                    5598 	inc	hl
      00168F 32                    5599 	ld	(hl-), a
      001690 2A                    5600 	ld	a, (hl+)
      001691 23                    5601 	inc	hl
                                   5602 ;src/main.c:525: set_sprite_tile(10+(i<<1), 0x7f);
      001692 22                    5603 	ld	(hl+), a
      001693 7B                    5604 	ld	a, e
      001694 87                    5605 	add	a, a
                                   5606 ;src/main.c:523: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001695 32                    5607 	ld	(hl-), a
      001696 2A                    5608 	ld	a, (hl+)
      001697 23                    5609 	inc	hl
      001698 07                    5610 	rlca
      001699 E6 01                 5611 	and	a,#0x01
                                   5612 ;src/main.c:525: set_sprite_tile(10+(i<<1), 0x7f);
      00169B 32                    5613 	ld	(hl-), a
      00169C 2A                    5614 	ld	a, (hl+)
      00169D 23                    5615 	inc	hl
      00169E C6 0A                 5616 	add	a, #0x0a
      0016A0 77                    5617 	ld	(hl), a
                                   5618 ;src/main.c:522: if (enemies[i].visible == 1) {
      0016A1 F8 07                 5619 	ldhl	sp,	#7
      0016A3 7E                    5620 	ld	a, (hl)
      0016A4 3D                    5621 	dec	a
      0016A5 20 74                 5622 	jr	NZ, 00154$
                                   5623 ;src/main.c:523: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0016A7 F8 0D                 5624 	ldhl	sp,	#13
      0016A9 7E                    5625 	ld	a, (hl)
      0016AA B7                    5626 	or	a, a
      0016AB 20 43                 5627 	jr	NZ, 00135$
      0016AD F8 0A                 5628 	ldhl	sp,	#10
      0016AF 3E AC                 5629 	ld	a, #0xac
      0016B1 96                    5630 	sub	a, (hl)
      0016B2 23                    5631 	inc	hl
      0016B3 3E 00                 5632 	ld	a, #0x00
      0016B5 9E                    5633 	sbc	a, (hl)
      0016B6 3E 00                 5634 	ld	a, #0x00
      0016B8 57                    5635 	ld	d, a
      0016B9 CB 7E                 5636 	bit	7, (hl)
      0016BB 28 07                 5637 	jr	Z, 00437$
      0016BD CB 7A                 5638 	bit	7, d
      0016BF 20 08                 5639 	jr	NZ, 00438$
      0016C1 BF                    5640 	cp	a, a
      0016C2 18 05                 5641 	jr	00438$
      0016C4                       5642 00437$:
      0016C4 CB 7A                 5643 	bit	7, d
      0016C6 28 01                 5644 	jr	Z, 00438$
      0016C8 37                    5645 	scf
      0016C9                       5646 00438$:
      0016C9 38 25                 5647 	jr	C, 00135$
      0016CB 69                    5648 	ld	l, c
      0016CC 60                    5649 	ld	h, b
      0016CD 2A                    5650 	ld	a, (hl+)
      0016CE 4F                    5651 	ld	c, a
      0016CF 46                    5652 	ld	b, (hl)
      0016D0 CB 78                 5653 	bit	7, b
      0016D2 20 1C                 5654 	jr	NZ, 00135$
      0016D4 58                    5655 	ld	e, b
      0016D5 16 00                 5656 	ld	d, #0x00
      0016D7 3E 98                 5657 	ld	a, #0x98
      0016D9 B9                    5658 	cp	a, c
      0016DA 3E 00                 5659 	ld	a, #0x00
      0016DC 98                    5660 	sbc	a, b
      0016DD CB 7B                 5661 	bit	7, e
      0016DF 28 07                 5662 	jr	Z, 00439$
      0016E1 CB 7A                 5663 	bit	7, d
      0016E3 20 08                 5664 	jr	NZ, 00440$
      0016E5 BF                    5665 	cp	a, a
      0016E6 18 05                 5666 	jr	00440$
      0016E8                       5667 00439$:
      0016E8 CB 7A                 5668 	bit	7, d
      0016EA 28 01                 5669 	jr	Z, 00440$
      0016EC 37                    5670 	scf
      0016ED                       5671 00440$:
      0016ED D2r4Fr18              5672 	jp	NC, 00157$
      0016F0                       5673 00135$:
                                   5674 ;src/main.c:524: enemies[i].visible = 0;
      0016F0 F8 05                 5675 	ldhl	sp,	#5
      0016F2 2A                    5676 	ld	a,	(hl+)
      0016F3 66                    5677 	ld	h, (hl)
      0016F4 6F                    5678 	ld	l, a
      0016F5 36 00                 5679 	ld	(hl), #0x00
                                   5680 ;src/main.c:525: set_sprite_tile(10+(i<<1), 0x7f);
      0016F7 F8 0E                 5681 	ldhl	sp,	#14
                                   5682 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0016F9 6E                    5683 	ld	l, (hl)
      0016FA 01r00r00              5684 	ld	bc, #_shadow_OAM+0
                                   5685 ;	spillPairReg hl
                                   5686 ;	spillPairReg hl
      0016FD 26 00                 5687 	ld	h, #0x00
                                   5688 ;	spillPairReg hl
                                   5689 ;	spillPairReg hl
      0016FF 29                    5690 	add	hl, hl
      001700 29                    5691 	add	hl, hl
      001701 09                    5692 	add	hl, bc
      001702 23                    5693 	inc	hl
      001703 23                    5694 	inc	hl
      001704 36 7F                 5695 	ld	(hl), #0x7f
                                   5696 ;src/main.c:526: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001706 F8 0C                 5697 	ldhl	sp,	#12
      001708 7E                    5698 	ld	a, (hl)
      001709 C6 0B                 5699 	add	a, #0x0b
                                   5700 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00170B 6F                    5701 	ld	l, a
      00170C 01r00r00              5702 	ld	bc, #_shadow_OAM+0
                                   5703 ;	spillPairReg hl
                                   5704 ;	spillPairReg hl
      00170F 26 00                 5705 	ld	h, #0x00
                                   5706 ;	spillPairReg hl
                                   5707 ;	spillPairReg hl
      001711 29                    5708 	add	hl, hl
      001712 29                    5709 	add	hl, hl
      001713 09                    5710 	add	hl, bc
      001714 23                    5711 	inc	hl
      001715 23                    5712 	inc	hl
      001716 36 7F                 5713 	ld	(hl), #0x7f
                                   5714 ;src/main.c:526: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001718 C3r4Fr18              5715 	jp	00157$
      00171B                       5716 00154$:
                                   5717 ;src/main.c:530: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      00171B F8 0D                 5718 	ldhl	sp,	#13
      00171D CB 46                 5719 	bit	0, (hl)
      00171F C2rBAr17              5720 	jp	NZ, 00148$
      001722 F8 0A                 5721 	ldhl	sp,	#10
      001724 2A                    5722 	ld	a, (hl+)
      001725 D6 AC                 5723 	sub	a, #0xac
      001727 7E                    5724 	ld	a, (hl)
      001728 DE 00                 5725 	sbc	a, #0x00
      00172A 56                    5726 	ld	d, (hl)
      00172B 3E 00                 5727 	ld	a, #0x00
      00172D CB 7F                 5728 	bit	7,a
      00172F 28 07                 5729 	jr	Z, 00441$
      001731 CB 7A                 5730 	bit	7, d
      001733 20 08                 5731 	jr	NZ, 00442$
      001735 BF                    5732 	cp	a, a
      001736 18 05                 5733 	jr	00442$
      001738                       5734 00441$:
      001738 CB 7A                 5735 	bit	7, d
      00173A 28 01                 5736 	jr	Z, 00442$
      00173C 37                    5737 	scf
      00173D                       5738 00442$:
      00173D 30 7B                 5739 	jr	NC, 00148$
      00173F 69                    5740 	ld	l, c
      001740 60                    5741 	ld	h, b
      001741 2A                    5742 	ld	a,	(hl+)
      001742 66                    5743 	ld	h, (hl)
                                   5744 ;	spillPairReg hl
      001743 6F                    5745 	ld	l, a
                                   5746 ;	spillPairReg hl
                                   5747 ;	spillPairReg hl
      001744 5C                    5748 	ld	e, h
      001745 AF                    5749 	xor	a, a
      001746 57                    5750 	ld	d, a
      001747 BD                    5751 	cp	a, l
      001748 9C                    5752 	sbc	a, h
      001749 CB 7B                 5753 	bit	7, e
      00174B 28 07                 5754 	jr	Z, 00443$
      00174D CB 7A                 5755 	bit	7, d
      00174F 20 08                 5756 	jr	NZ, 00444$
      001751 BF                    5757 	cp	a, a
      001752 18 05                 5758 	jr	00444$
      001754                       5759 00443$:
      001754 CB 7A                 5760 	bit	7, d
      001756 28 01                 5761 	jr	Z, 00444$
      001758 37                    5762 	scf
      001759                       5763 00444$:
      001759 30 5F                 5764 	jr	NC, 00148$
      00175B 7D                    5765 	ld	a, l
      00175C D6 98                 5766 	sub	a, #0x98
      00175E 7C                    5767 	ld	a, h
      00175F 17                    5768 	rla
      001760 3F                    5769 	ccf
      001761 1F                    5770 	rra
      001762 DE 80                 5771 	sbc	a, #0x80
      001764 30 54                 5772 	jr	NC, 00148$
                                   5773 ;src/main.c:531: enemies[i].visible = 1;
      001766 F8 05                 5774 	ldhl	sp,	#5
      001768 2A                    5775 	ld	a,	(hl+)
      001769 66                    5776 	ld	h, (hl)
      00176A 6F                    5777 	ld	l, a
      00176B 36 01                 5778 	ld	(hl), #0x01
                                   5779 ;src/main.c:532: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      00176D F8 01                 5780 	ldhl	sp,#1
      00176F 2A                    5781 	ld	a, (hl+)
      001770 5F                    5782 	ld	e, a
      001771 56                    5783 	ld	d, (hl)
      001772 21 06 00              5784 	ld	hl, #0x0006
      001775 19                    5785 	add	hl, de
      001776 4D                    5786 	ld	c, l
      001777 44                    5787 	ld	b, h
      001778 0A                    5788 	ld	a, (bc)
      001779 4F                    5789 	ld	c, a
      00177A F8 0E                 5790 	ldhl	sp,	#14
                                   5791 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00177C 6E                    5792 	ld	l, (hl)
                                   5793 ;	spillPairReg hl
                                   5794 ;	spillPairReg hl
      00177D 26 00                 5795 	ld	h, #0x00
                                   5796 ;	spillPairReg hl
                                   5797 ;	spillPairReg hl
      00177F 29                    5798 	add	hl, hl
      001780 29                    5799 	add	hl, hl
      001781 11r00r00              5800 	ld	de, #_shadow_OAM
      001784 19                    5801 	add	hl, de
      001785 23                    5802 	inc	hl
      001786 23                    5803 	inc	hl
      001787 71                    5804 	ld	(hl), c
                                   5805 ;src/main.c:533: if (enemies[i].spriteCount == 2) {
      001788 F8 01                 5806 	ldhl	sp,#1
      00178A 2A                    5807 	ld	a, (hl+)
      00178B 5F                    5808 	ld	e, a
      00178C 56                    5809 	ld	d, (hl)
      00178D 21 08 00              5810 	ld	hl, #0x0008
      001790 19                    5811 	add	hl, de
      001791 4D                    5812 	ld	c, l
      001792 44                    5813 	ld	b, h
      001793 0A                    5814 	ld	a, (bc)
      001794 D6 02                 5815 	sub	a, #0x02
      001796 C2r4Fr18              5816 	jp	NZ,00157$
                                   5817 ;src/main.c:534: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001799 F8 01                 5818 	ldhl	sp,#1
      00179B 2A                    5819 	ld	a, (hl+)
      00179C 5F                    5820 	ld	e, a
      00179D 56                    5821 	ld	d, (hl)
      00179E 21 07 00              5822 	ld	hl, #0x0007
      0017A1 19                    5823 	add	hl, de
      0017A2 4D                    5824 	ld	c, l
      0017A3 44                    5825 	ld	b, h
      0017A4 0A                    5826 	ld	a, (bc)
      0017A5 4F                    5827 	ld	c, a
      0017A6 F8 0C                 5828 	ldhl	sp,	#12
      0017A8 7E                    5829 	ld	a, (hl)
      0017A9 C6 0B                 5830 	add	a, #0x0b
                                   5831 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0017AB 6F                    5832 	ld	l, a
                                   5833 ;	spillPairReg hl
                                   5834 ;	spillPairReg hl
      0017AC 26 00                 5835 	ld	h, #0x00
                                   5836 ;	spillPairReg hl
                                   5837 ;	spillPairReg hl
      0017AE 29                    5838 	add	hl, hl
      0017AF 29                    5839 	add	hl, hl
      0017B0 11r00r00              5840 	ld	de, #_shadow_OAM
      0017B3 19                    5841 	add	hl, de
      0017B4 23                    5842 	inc	hl
      0017B5 23                    5843 	inc	hl
      0017B6 71                    5844 	ld	(hl), c
                                   5845 ;src/main.c:534: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0017B7 C3r4Fr18              5846 	jp	00157$
      0017BA                       5847 00148$:
                                   5848 ;src/main.c:537: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      0017BA F8 08                 5849 	ldhl	sp,	#8
      0017BC 2A                    5850 	ld	a, (hl+)
      0017BD D6 9C                 5851 	sub	a, #0x9c
      0017BF 7E                    5852 	ld	a, (hl)
      0017C0 DE FF                 5853 	sbc	a, #0xff
      0017C2 56                    5854 	ld	d, (hl)
      0017C3 3E FF                 5855 	ld	a, #0xff
      0017C5 CB 7F                 5856 	bit	7,a
      0017C7 28 07                 5857 	jr	Z, 00447$
      0017C9 CB 7A                 5858 	bit	7, d
      0017CB 20 08                 5859 	jr	NZ, 00448$
      0017CD BF                    5860 	cp	a, a
      0017CE 18 05                 5861 	jr	00448$
      0017D0                       5862 00447$:
      0017D0 CB 7A                 5863 	bit	7, d
      0017D2 28 01                 5864 	jr	Z, 00448$
      0017D4 37                    5865 	scf
      0017D5                       5866 00448$:
      0017D5 38 49                 5867 	jr	C, 00142$
      0017D7 F8 0A                 5868 	ldhl	sp,	#10
      0017D9 3E 10                 5869 	ld	a, #0x10
      0017DB 96                    5870 	sub	a, (hl)
      0017DC 23                    5871 	inc	hl
      0017DD 3E 01                 5872 	ld	a, #0x01
      0017DF 9E                    5873 	sbc	a, (hl)
      0017E0 3E 01                 5874 	ld	a, #0x01
      0017E2 57                    5875 	ld	d, a
      0017E3 CB 7E                 5876 	bit	7, (hl)
      0017E5 28 07                 5877 	jr	Z, 00449$
      0017E7 CB 7A                 5878 	bit	7, d
      0017E9 20 08                 5879 	jr	NZ, 00450$
      0017EB BF                    5880 	cp	a, a
      0017EC 18 05                 5881 	jr	00450$
      0017EE                       5882 00449$:
      0017EE CB 7A                 5883 	bit	7, d
      0017F0 28 01                 5884 	jr	Z, 00450$
      0017F2 37                    5885 	scf
      0017F3                       5886 00450$:
      0017F3 38 2B                 5887 	jr	C, 00142$
      0017F5 69                    5888 	ld	l, c
      0017F6 60                    5889 	ld	h, b
      0017F7 2A                    5890 	ld	a, (hl+)
      0017F8 4F                    5891 	ld	c, a
      0017F9 46                    5892 	ld	b, (hl)
      0017FA 79                    5893 	ld	a, c
      0017FB D6 9C                 5894 	sub	a, #0x9c
      0017FD 78                    5895 	ld	a, b
      0017FE 17                    5896 	rla
      0017FF 3F                    5897 	ccf
      001800 1F                    5898 	rra
      001801 DE 7F                 5899 	sbc	a, #0x7f
      001803 38 1B                 5900 	jr	C, 00142$
      001805 58                    5901 	ld	e, b
      001806 16 00                 5902 	ld	d, #0x00
      001808 3E FC                 5903 	ld	a, #0xfc
      00180A B9                    5904 	cp	a, c
      00180B 3E 00                 5905 	ld	a, #0x00
      00180D 98                    5906 	sbc	a, b
      00180E CB 7B                 5907 	bit	7, e
      001810 28 07                 5908 	jr	Z, 00451$
      001812 CB 7A                 5909 	bit	7, d
      001814 20 08                 5910 	jr	NZ, 00452$
      001816 BF                    5911 	cp	a, a
      001817 18 05                 5912 	jr	00452$
      001819                       5913 00451$:
      001819 CB 7A                 5914 	bit	7, d
      00181B 28 01                 5915 	jr	Z, 00452$
      00181D 37                    5916 	scf
      00181E                       5917 00452$:
      00181E 30 2F                 5918 	jr	NC, 00157$
      001820                       5919 00142$:
                                   5920 ;src/main.c:538: enemies[i].alive = 0;
      001820 F8 03                 5921 	ldhl	sp,	#3
      001822 2A                    5922 	ld	a,	(hl+)
      001823 66                    5923 	ld	h, (hl)
      001824 6F                    5924 	ld	l, a
      001825 36 00                 5925 	ld	(hl), #0x00
                                   5926 ;src/main.c:539: set_sprite_tile(10+(i<<1), 0x7f);
      001827 F8 0E                 5927 	ldhl	sp,	#14
                                   5928 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001829 6E                    5929 	ld	l, (hl)
      00182A 01r00r00              5930 	ld	bc, #_shadow_OAM+0
                                   5931 ;	spillPairReg hl
                                   5932 ;	spillPairReg hl
      00182D 26 00                 5933 	ld	h, #0x00
                                   5934 ;	spillPairReg hl
                                   5935 ;	spillPairReg hl
      00182F 29                    5936 	add	hl, hl
      001830 29                    5937 	add	hl, hl
      001831 09                    5938 	add	hl, bc
      001832 23                    5939 	inc	hl
      001833 23                    5940 	inc	hl
      001834 36 7F                 5941 	ld	(hl), #0x7f
                                   5942 ;src/main.c:540: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001836 F8 0C                 5943 	ldhl	sp,	#12
      001838 7E                    5944 	ld	a, (hl)
      001839 C6 0B                 5945 	add	a, #0x0b
                                   5946 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00183B 6F                    5947 	ld	l, a
      00183C 01r00r00              5948 	ld	bc, #_shadow_OAM+0
                                   5949 ;	spillPairReg hl
                                   5950 ;	spillPairReg hl
      00183F 26 00                 5951 	ld	h, #0x00
                                   5952 ;	spillPairReg hl
                                   5953 ;	spillPairReg hl
      001841 29                    5954 	add	hl, hl
      001842 29                    5955 	add	hl, hl
      001843 09                    5956 	add	hl, bc
      001844 23                    5957 	inc	hl
      001845 23                    5958 	inc	hl
      001846 36 7F                 5959 	ld	(hl), #0x7f
                                   5960 ;src/main.c:541: initEnemies(0);
      001848 AF                    5961 	xor	a, a
      001849 F5                    5962 	push	af
      00184A 33                    5963 	inc	sp
      00184B CDrFBr0F              5964 	call	_initEnemies
      00184E 33                    5965 	inc	sp
      00184F                       5966 00157$:
                                   5967 ;src/main.c:545: if (enemies[i].spriteCount == 1) {
      00184F F8 0F                 5968 	ldhl	sp,	#15
      001851 4E                    5969 	ld	c, (hl)
      001852 06 00                 5970 	ld	b, #0x00
      001854 69                    5971 	ld	l, c
      001855 60                    5972 	ld	h, b
      001856 29                    5973 	add	hl, hl
      001857 29                    5974 	add	hl, hl
      001858 29                    5975 	add	hl, hl
      001859 09                    5976 	add	hl, bc
      00185A 29                    5977 	add	hl, hl
      00185B 01r5Ar00              5978 	ld	bc,#_enemies
      00185E 09                    5979 	add	hl,bc
      00185F 4D                    5980 	ld	c, l
      001860 44                    5981 	ld	b, h
      001861 21 08 00              5982 	ld	hl, #0x0008
      001864 09                    5983 	add	hl, bc
      001865 5E                    5984 	ld	e, (hl)
                                   5985 ;src/main.c:525: set_sprite_tile(10+(i<<1), 0x7f);
      001866 F8 0F                 5986 	ldhl	sp,	#15
      001868 3A                    5987 	ld	a, (hl-)
      001869 87                    5988 	add	a, a
      00186A 77                    5989 	ld	(hl), a
      00186B 7E                    5990 	ld	a, (hl)
      00186C C6 0A                 5991 	add	a, #0x0a
      00186E F8 0A                 5992 	ldhl	sp,	#10
      001870 77                    5993 	ld	(hl), a
                                   5994 ;src/main.c:545: if (enemies[i].spriteCount == 1) {
      001871 1D                    5995 	dec	e
      001872 20 52                 5996 	jr	NZ, 00165$
                                   5997 ;src/main.c:546: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001874 59                    5998 	ld	e, c
      001875 50                    5999 	ld	d, b
      001876 13                    6000 	inc	de
      001877 13                    6001 	inc	de
      001878 1A                    6002 	ld	a, (de)
      001879 C6 0C                 6003 	add	a, #0x0c
      00187B 5F                    6004 	ld	e, a
      00187C 0A                    6005 	ld	a, (bc)
      00187D C6 04                 6006 	add	a, #0x04
      00187F F8 0E                 6007 	ldhl	sp,	#14
      001881 77                    6008 	ld	(hl), a
      001882 F8 0A                 6009 	ldhl	sp,	#10
      001884 56                    6010 	ld	d, (hl)
                                   6011 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001885 6A                    6012 	ld	l, d
                                   6013 ;	spillPairReg hl
                                   6014 ;	spillPairReg hl
      001886 26 00                 6015 	ld	h, #0x00
                                   6016 ;	spillPairReg hl
                                   6017 ;	spillPairReg hl
      001888 29                    6018 	add	hl, hl
      001889 29                    6019 	add	hl, hl
      00188A D5                    6020 	push	de
      00188B 11r00r00              6021 	ld	de, #_shadow_OAM
      00188E 19                    6022 	add	hl, de
      00188F D1                    6023 	pop	de
                                   6024 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001890 7B                    6025 	ld	a, e
      001891 22                    6026 	ld	(hl+), a
      001892 5D                    6027 	ld	e, l
      001893 54                    6028 	ld	d, h
      001894 F8 0E                 6029 	ldhl	sp,	#14
      001896 7E                    6030 	ld	a, (hl)
      001897 12                    6031 	ld	(de), a
                                   6032 ;src/main.c:547: if (enemies[i].xSpeed >= 0) {
      001898 21 0E 00              6033 	ld	hl, #0x000e
      00189B 09                    6034 	add	hl, bc
      00189C CB 7E                 6035 	bit	7, (hl)
      00189E 20 13                 6036 	jr	NZ, 00159$
                                   6037 ;src/main.c:548: set_sprite_prop(10+(i<<1), 0);
      0018A0 F8 0A                 6038 	ldhl	sp,	#10
                                   6039 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018A2 6E                    6040 	ld	l, (hl)
      0018A3 01r00r00              6041 	ld	bc, #_shadow_OAM+0
                                   6042 ;	spillPairReg hl
                                   6043 ;	spillPairReg hl
      0018A6 26 00                 6044 	ld	h, #0x00
                                   6045 ;	spillPairReg hl
                                   6046 ;	spillPairReg hl
      0018A8 29                    6047 	add	hl, hl
      0018A9 29                    6048 	add	hl, hl
      0018AA 09                    6049 	add	hl, bc
      0018AB 23                    6050 	inc	hl
      0018AC 23                    6051 	inc	hl
      0018AD 23                    6052 	inc	hl
      0018AE 36 00                 6053 	ld	(hl), #0x00
                                   6054 ;src/main.c:548: set_sprite_prop(10+(i<<1), 0);
      0018B0 C3rBCr19              6055 	jp	00199$
      0018B3                       6056 00159$:
                                   6057 ;src/main.c:551: set_sprite_prop(10+(i<<1), S_FLIPX);
      0018B3 F8 0A                 6058 	ldhl	sp,	#10
                                   6059 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018B5 6E                    6060 	ld	l, (hl)
      0018B6 01r00r00              6061 	ld	bc, #_shadow_OAM+0
                                   6062 ;	spillPairReg hl
                                   6063 ;	spillPairReg hl
      0018B9 26 00                 6064 	ld	h, #0x00
                                   6065 ;	spillPairReg hl
                                   6066 ;	spillPairReg hl
      0018BB 29                    6067 	add	hl, hl
      0018BC 29                    6068 	add	hl, hl
      0018BD 09                    6069 	add	hl, bc
      0018BE 23                    6070 	inc	hl
      0018BF 23                    6071 	inc	hl
      0018C0 23                    6072 	inc	hl
      0018C1 36 20                 6073 	ld	(hl), #0x20
                                   6074 ;src/main.c:551: set_sprite_prop(10+(i<<1), S_FLIPX);
      0018C3 C3rBCr19              6075 	jp	00199$
      0018C6                       6076 00165$:
                                   6077 ;src/main.c:556: if (enemies[i].xSpeed >= 0) {
      0018C6 21 0E 00              6078 	ld	hl, #0x000e
      0018C9 09                    6079 	add	hl, bc
      0018CA E5                    6080 	push	hl
      0018CB 7D                    6081 	ld	a, l
      0018CC F8 0E                 6082 	ldhl	sp,	#14
      0018CE 77                    6083 	ld	(hl), a
      0018CF E1                    6084 	pop	hl
      0018D0 7C                    6085 	ld	a, h
      0018D1 F8 0D                 6086 	ldhl	sp,	#13
      0018D3 32                    6087 	ld	(hl-), a
      0018D4 2A                    6088 	ld	a, (hl+)
      0018D5 5F                    6089 	ld	e, a
      0018D6 56                    6090 	ld	d, (hl)
      0018D7 1A                    6091 	ld	a, (de)
                                   6092 ;	spillPairReg hl
                                   6093 ;	spillPairReg hl
      0018D8 CB 7F                 6094 	bit	7,a
      0018DA 20 70                 6095 	jr	NZ, 00162$
                                   6096 ;src/main.c:557: set_sprite_prop(10+(i<<1), 0);
      0018DC F8 0A                 6097 	ldhl	sp,	#10
                                   6098 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018DE 6E                    6099 	ld	l, (hl)
                                   6100 ;	spillPairReg hl
                                   6101 ;	spillPairReg hl
      0018DF 26 00                 6102 	ld	h, #0x00
                                   6103 ;	spillPairReg hl
                                   6104 ;	spillPairReg hl
      0018E1 29                    6105 	add	hl, hl
      0018E2 29                    6106 	add	hl, hl
      0018E3 11r00r00              6107 	ld	de, #_shadow_OAM
      0018E6 19                    6108 	add	hl, de
      0018E7 23                    6109 	inc	hl
      0018E8 23                    6110 	inc	hl
      0018E9 23                    6111 	inc	hl
      0018EA 36 00                 6112 	ld	(hl), #0x00
                                   6113 ;src/main.c:558: set_sprite_prop(10+(i<<1)+1, 0);
      0018EC F8 0E                 6114 	ldhl	sp,	#14
      0018EE 7E                    6115 	ld	a, (hl)
      0018EF C6 0B                 6116 	add	a, #0x0b
      0018F1 F8 0B                 6117 	ldhl	sp,	#11
      0018F3 77                    6118 	ld	(hl), a
                                   6119 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0018F4 6E                    6120 	ld	l, (hl)
                                   6121 ;	spillPairReg hl
                                   6122 ;	spillPairReg hl
      0018F5 26 00                 6123 	ld	h, #0x00
                                   6124 ;	spillPairReg hl
                                   6125 ;	spillPairReg hl
      0018F7 29                    6126 	add	hl, hl
      0018F8 29                    6127 	add	hl, hl
      0018F9 11r00r00              6128 	ld	de, #_shadow_OAM
      0018FC 19                    6129 	add	hl, de
      0018FD 23                    6130 	inc	hl
      0018FE 23                    6131 	inc	hl
      0018FF 23                    6132 	inc	hl
      001900 36 00                 6133 	ld	(hl), #0x00
                                   6134 ;src/main.c:559: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      001902 21 02 00              6135 	ld	hl, #0x0002
      001905 09                    6136 	add	hl, bc
      001906 E5                    6137 	push	hl
      001907 7D                    6138 	ld	a, l
      001908 F8 0E                 6139 	ldhl	sp,	#14
      00190A 77                    6140 	ld	(hl), a
      00190B E1                    6141 	pop	hl
      00190C 7C                    6142 	ld	a, h
      00190D F8 0D                 6143 	ldhl	sp,	#13
      00190F 32                    6144 	ld	(hl-), a
      001910 2A                    6145 	ld	a, (hl+)
      001911 5F                    6146 	ld	e, a
      001912 2A                    6147 	ld	a, (hl+)
      001913 57                    6148 	ld	d, a
      001914 1A                    6149 	ld	a, (de)
      001915 C6 08                 6150 	add	a, #0x08
      001917 5F                    6151 	ld	e, a
      001918 0A                    6152 	ld	a, (bc)
      001919 77                    6153 	ld	(hl), a
      00191A F8 0A                 6154 	ldhl	sp,	#10
      00191C 56                    6155 	ld	d, (hl)
                                   6156 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00191D 6A                    6157 	ld	l, d
                                   6158 ;	spillPairReg hl
                                   6159 ;	spillPairReg hl
      00191E 26 00                 6160 	ld	h, #0x00
                                   6161 ;	spillPairReg hl
                                   6162 ;	spillPairReg hl
      001920 29                    6163 	add	hl, hl
      001921 29                    6164 	add	hl, hl
      001922 D5                    6165 	push	de
      001923 11r00r00              6166 	ld	de, #_shadow_OAM
      001926 19                    6167 	add	hl, de
      001927 D1                    6168 	pop	de
                                   6169 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001928 7B                    6170 	ld	a, e
      001929 22                    6171 	ld	(hl+), a
      00192A 5D                    6172 	ld	e, l
      00192B 54                    6173 	ld	d, h
      00192C F8 0E                 6174 	ldhl	sp,	#14
                                   6175 ;src/main.c:560: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      00192E 3A                    6176 	ld	a, (hl-)
      00192F 2B                    6177 	dec	hl
      001930 12                    6178 	ld	(de), a
      001931 2A                    6179 	ld	a, (hl+)
      001932 5F                    6180 	ld	e, a
      001933 3A                    6181 	ld	a, (hl-)
      001934 2B                    6182 	dec	hl
      001935 57                    6183 	ld	d, a
      001936 1A                    6184 	ld	a, (de)
      001937 C6 08                 6185 	add	a, #0x08
      001939 57                    6186 	ld	d, a
      00193A 0A                    6187 	ld	a, (bc)
      00193B C6 08                 6188 	add	a, #0x08
      00193D 5F                    6189 	ld	e, a
                                   6190 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00193E 6E                    6191 	ld	l, (hl)
                                   6192 ;	spillPairReg hl
                                   6193 ;	spillPairReg hl
      00193F 26 00                 6194 	ld	h, #0x00
                                   6195 ;	spillPairReg hl
                                   6196 ;	spillPairReg hl
      001941 29                    6197 	add	hl, hl
      001942 29                    6198 	add	hl, hl
      001943 01r00r00              6199 	ld	bc, #_shadow_OAM
      001946 09                    6200 	add	hl, bc
                                   6201 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001947 7A                    6202 	ld	a, d
      001948 22                    6203 	ld	(hl+), a
      001949 73                    6204 	ld	(hl), e
                                   6205 ;src/main.c:560: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      00194A 18 70                 6206 	jr	00199$
      00194C                       6207 00162$:
                                   6208 ;src/main.c:563: set_sprite_prop(10+(i<<1), S_FLIPX);
      00194C F8 0A                 6209 	ldhl	sp,	#10
      00194E 5E                    6210 	ld	e, (hl)
                                   6211 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00194F 26 00                 6212 	ld	h, #0x00
                                   6213 ;	spillPairReg hl
                                   6214 ;	spillPairReg hl
      001951 6B                    6215 	ld	l, e
      001952 29                    6216 	add	hl, hl
      001953 29                    6217 	add	hl, hl
      001954 11r00r00              6218 	ld	de, #_shadow_OAM
      001957 19                    6219 	add	hl, de
      001958 23                    6220 	inc	hl
      001959 23                    6221 	inc	hl
      00195A 23                    6222 	inc	hl
      00195B 36 20                 6223 	ld	(hl), #0x20
                                   6224 ;src/main.c:564: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      00195D F8 0E                 6225 	ldhl	sp,	#14
      00195F 7E                    6226 	ld	a, (hl)
      001960 C6 0B                 6227 	add	a, #0x0b
      001962 F8 0B                 6228 	ldhl	sp,	#11
      001964 77                    6229 	ld	(hl), a
      001965 5E                    6230 	ld	e, (hl)
                                   6231 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001966 26 00                 6232 	ld	h, #0x00
                                   6233 ;	spillPairReg hl
                                   6234 ;	spillPairReg hl
      001968 6B                    6235 	ld	l, e
      001969 29                    6236 	add	hl, hl
      00196A 29                    6237 	add	hl, hl
      00196B 11r00r00              6238 	ld	de, #_shadow_OAM
      00196E 19                    6239 	add	hl, de
      00196F 23                    6240 	inc	hl
      001970 23                    6241 	inc	hl
      001971 23                    6242 	inc	hl
      001972 36 20                 6243 	ld	(hl), #0x20
                                   6244 ;src/main.c:565: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      001974 21 02 00              6245 	ld	hl, #0x0002
      001977 09                    6246 	add	hl, bc
      001978 E5                    6247 	push	hl
      001979 7D                    6248 	ld	a, l
      00197A F8 0E                 6249 	ldhl	sp,	#14
      00197C 77                    6250 	ld	(hl), a
      00197D E1                    6251 	pop	hl
      00197E 7C                    6252 	ld	a, h
      00197F F8 0D                 6253 	ldhl	sp,	#13
      001981 32                    6254 	ld	(hl-), a
      001982 2A                    6255 	ld	a, (hl+)
      001983 5F                    6256 	ld	e, a
      001984 2A                    6257 	ld	a, (hl+)
      001985 57                    6258 	ld	d, a
      001986 1A                    6259 	ld	a, (de)
      001987 C6 08                 6260 	add	a, #0x08
      001989 5F                    6261 	ld	e, a
      00198A 0A                    6262 	ld	a, (bc)
      00198B C6 08                 6263 	add	a, #0x08
      00198D 77                    6264 	ld	(hl), a
      00198E F8 0A                 6265 	ldhl	sp,	#10
      001990 56                    6266 	ld	d, (hl)
                                   6267 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001991 6A                    6268 	ld	l, d
                                   6269 ;	spillPairReg hl
                                   6270 ;	spillPairReg hl
      001992 26 00                 6271 	ld	h, #0x00
                                   6272 ;	spillPairReg hl
                                   6273 ;	spillPairReg hl
      001994 29                    6274 	add	hl, hl
      001995 29                    6275 	add	hl, hl
      001996 D5                    6276 	push	de
      001997 11r00r00              6277 	ld	de, #_shadow_OAM
      00199A 19                    6278 	add	hl, de
      00199B D1                    6279 	pop	de
                                   6280 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00199C 7B                    6281 	ld	a, e
      00199D 22                    6282 	ld	(hl+), a
      00199E 5D                    6283 	ld	e, l
      00199F 54                    6284 	ld	d, h
      0019A0 F8 0E                 6285 	ldhl	sp,	#14
                                   6286 ;src/main.c:566: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0019A2 3A                    6287 	ld	a, (hl-)
      0019A3 2B                    6288 	dec	hl
      0019A4 12                    6289 	ld	(de), a
      0019A5 2A                    6290 	ld	a, (hl+)
      0019A6 5F                    6291 	ld	e, a
      0019A7 3A                    6292 	ld	a, (hl-)
      0019A8 2B                    6293 	dec	hl
      0019A9 57                    6294 	ld	d, a
      0019AA 1A                    6295 	ld	a, (de)
      0019AB C6 08                 6296 	add	a, #0x08
      0019AD 57                    6297 	ld	d, a
      0019AE 0A                    6298 	ld	a, (bc)
      0019AF 5F                    6299 	ld	e, a
                                   6300 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0019B0 6E                    6301 	ld	l, (hl)
                                   6302 ;	spillPairReg hl
                                   6303 ;	spillPairReg hl
      0019B1 26 00                 6304 	ld	h, #0x00
                                   6305 ;	spillPairReg hl
                                   6306 ;	spillPairReg hl
      0019B3 29                    6307 	add	hl, hl
      0019B4 29                    6308 	add	hl, hl
      0019B5 01r00r00              6309 	ld	bc, #_shadow_OAM
      0019B8 09                    6310 	add	hl, bc
                                   6311 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0019B9 7A                    6312 	ld	a, d
      0019BA 22                    6313 	ld	(hl+), a
      0019BB 73                    6314 	ld	(hl), e
                                   6315 ;src/main.c:566: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0019BC                       6316 00199$:
                                   6317 ;src/main.c:519: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0019BC F8 0F                 6318 	ldhl	sp,	#15
      0019BE 34                    6319 	inc	(hl)
      0019BF C3r1Cr16              6320 	jp	00198$
      0019C2                       6321 00200$:
                                   6322 ;src/main.c:572: }
      0019C2 E8 10                 6323 	add	sp, #16
      0019C4 C9                    6324 	ret
                                   6325 ;src/main.c:577: void move() {
                                   6326 ;	---------------------------------
                                   6327 ; Function move
                                   6328 ; ---------------------------------
      0019C5                       6329 _move::
      0019C5 E8 F8                 6330 	add	sp, #-8
                                   6331 ;src/main.c:581: if (joydata & J_A) {
      0019C7 FArF5r00              6332 	ld	a, (#_joydata)
      0019CA CB 67                 6333 	bit	4, a
      0019CC 28 16                 6334 	jr	Z, 00102$
                                   6335 ;src/main.c:582: xSpeed += xDir + xDir + xDir;
      0019CE 21r93r00              6336 	ld	hl, #_xDir
      0019D1 7E                    6337 	ld	a, (hl)
      0019D2 87                    6338 	add	a, a
      0019D3 86                    6339 	add	a, (hl)
      0019D4 21r95r00              6340 	ld	hl, #_xSpeed
      0019D7 86                    6341 	add	a, (hl)
      0019D8 77                    6342 	ld	(hl), a
                                   6343 ;src/main.c:583: ySpeed += yDir + yDir + yDir;
      0019D9 21r94r00              6344 	ld	hl, #_yDir
      0019DC 7E                    6345 	ld	a, (hl)
      0019DD 87                    6346 	add	a, a
      0019DE 86                    6347 	add	a, (hl)
      0019DF 21r96r00              6348 	ld	hl, #_ySpeed
      0019E2 86                    6349 	add	a, (hl)
      0019E3 77                    6350 	ld	(hl), a
      0019E4                       6351 00102$:
                                   6352 ;src/main.c:587: xSpeed = clamp(xSpeed, -100, 100);
      0019E4 21r95r00              6353 	ld	hl, #_xSpeed
      0019E7 4E                    6354 	ld	c, (hl)
                                   6355 ;src/main.c:340: return (value < min) ? min : (value > max) ? max : value;
      0019E8 79                    6356 	ld	a, c
      0019E9 EE 80                 6357 	xor	a, #0x80
      0019EB D6 1C                 6358 	sub	a, #0x1c
      0019ED 30 04                 6359 	jr	NC, 00165$
      0019EF 0E 9C                 6360 	ld	c, #0x9c
      0019F1 18 19                 6361 	jr	00166$
      0019F3                       6362 00165$:
      0019F3 59                    6363 	ld	e, c
      0019F4 3E 64                 6364 	ld	a,#0x64
      0019F6 57                    6365 	ld	d,a
      0019F7 91                    6366 	sub	a, c
      0019F8 CB 7B                 6367 	bit	7, e
      0019FA 28 07                 6368 	jr	Z, 00342$
      0019FC CB 7A                 6369 	bit	7, d
      0019FE 20 08                 6370 	jr	NZ, 00343$
      001A00 BF                    6371 	cp	a, a
      001A01 18 05                 6372 	jr	00343$
      001A03                       6373 00342$:
      001A03 CB 7A                 6374 	bit	7, d
      001A05 28 01                 6375 	jr	Z, 00343$
      001A07 37                    6376 	scf
      001A08                       6377 00343$:
      001A08 30 02                 6378 	jr	NC, 00167$
      001A0A 0E 64                 6379 	ld	c, #0x64
      001A0C                       6380 00167$:
      001A0C                       6381 00166$:
      001A0C 21r95r00              6382 	ld	hl, #_xSpeed
      001A0F 71                    6383 	ld	(hl), c
                                   6384 ;src/main.c:588: ySpeed = clamp(ySpeed, -100, 100);
      001A10 21r96r00              6385 	ld	hl, #_ySpeed
      001A13 4E                    6386 	ld	c, (hl)
                                   6387 ;src/main.c:340: return (value < min) ? min : (value > max) ? max : value;
      001A14 79                    6388 	ld	a, c
      001A15 EE 80                 6389 	xor	a, #0x80
      001A17 D6 1C                 6390 	sub	a, #0x1c
      001A19 30 04                 6391 	jr	NC, 00169$
      001A1B 0E 9C                 6392 	ld	c, #0x9c
      001A1D 18 19                 6393 	jr	00170$
      001A1F                       6394 00169$:
      001A1F 59                    6395 	ld	e, c
      001A20 3E 64                 6396 	ld	a,#0x64
      001A22 57                    6397 	ld	d,a
      001A23 91                    6398 	sub	a, c
      001A24 CB 7B                 6399 	bit	7, e
      001A26 28 07                 6400 	jr	Z, 00344$
      001A28 CB 7A                 6401 	bit	7, d
      001A2A 20 08                 6402 	jr	NZ, 00345$
      001A2C BF                    6403 	cp	a, a
      001A2D 18 05                 6404 	jr	00345$
      001A2F                       6405 00344$:
      001A2F CB 7A                 6406 	bit	7, d
      001A31 28 01                 6407 	jr	Z, 00345$
      001A33 37                    6408 	scf
      001A34                       6409 00345$:
      001A34 30 02                 6410 	jr	NC, 00171$
      001A36 0E 64                 6411 	ld	c, #0x64
      001A38                       6412 00171$:
      001A38                       6413 00170$:
      001A38 21r96r00              6414 	ld	hl, #_ySpeed
      001A3B 71                    6415 	ld	(hl), c
                                   6416 ;src/main.c:590: xOverflow = 0;
      001A3C AF                    6417 	xor	a, a
      001A3D 21rA1r00              6418 	ld	hl, #_xOverflow
      001A40 22                    6419 	ld	(hl+), a
      001A41 77                    6420 	ld	(hl), a
                                   6421 ;src/main.c:591: yOverflow = 0;
      001A42 AF                    6422 	xor	a, a
      001A43 21rA3r00              6423 	ld	hl, #_yOverflow
      001A46 22                    6424 	ld	(hl+), a
      001A47 77                    6425 	ld	(hl), a
                                   6426 ;src/main.c:596: uint8_t xCollisionPoint = playerDrawX; 
      001A48 21r9Br00              6427 	ld	hl, #_playerDrawX
      001A4B 4E                    6428 	ld	c, (hl)
                                   6429 ;src/main.c:599: xCollisionPoint = playerDrawX +8; //right edge
      001A4C 46                    6430 	ld	b, (hl)
                                   6431 ;src/main.c:598: if (xSpeed > 0) {
      001A4D 21r95r00              6432 	ld	hl, #_xSpeed
      001A50 5E                    6433 	ld	e, (hl)
      001A51 AF                    6434 	xor	a, a
      001A52 57                    6435 	ld	d, a
      001A53 96                    6436 	sub	a, (hl)
      001A54 CB 7B                 6437 	bit	7, e
      001A56 28 07                 6438 	jr	Z, 00346$
      001A58 CB 7A                 6439 	bit	7, d
      001A5A 20 08                 6440 	jr	NZ, 00347$
      001A5C BF                    6441 	cp	a, a
      001A5D 18 05                 6442 	jr	00347$
      001A5F                       6443 00346$:
      001A5F CB 7A                 6444 	bit	7, d
      001A61 28 01                 6445 	jr	Z, 00347$
      001A63 37                    6446 	scf
      001A64                       6447 00347$:
      001A64 30 04                 6448 	jr	NC, 00104$
                                   6449 ;src/main.c:599: xCollisionPoint = playerDrawX +8; //right edge
      001A66 78                    6450 	ld	a, b
      001A67 C6 08                 6451 	add	a, #0x08
      001A69 4F                    6452 	ld	c, a
      001A6A                       6453 00104$:
                                   6454 ;src/main.c:601: if (xSpeed < 0) {
      001A6A FAr95r00              6455 	ld	a, (#_xSpeed)
      001A6D CB 7F                 6456 	bit	7, a
      001A6F 28 04                 6457 	jr	Z, 00106$
                                   6458 ;src/main.c:602: xCollisionPoint = playerDrawX -8; //left edge
      001A71 78                    6459 	ld	a, b
      001A72 C6 F8                 6460 	add	a, #0xf8
      001A74 4F                    6461 	ld	c, a
      001A75                       6462 00106$:
                                   6463 ;src/main.c:606: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001A75 06 00                 6464 	ld	b, #0x00
      001A77 79                    6465 	ld	a, c
      001A78 21r9Dr00              6466 	ld	hl, #_bgX
      001A7B 86                    6467 	add	a, (hl)
      001A7C 23                    6468 	inc	hl
      001A7D 4F                    6469 	ld	c, a
      001A7E 78                    6470 	ld	a, b
      001A7F 8E                    6471 	adc	a, (hl)
      001A80 47                    6472 	ld	b, a
      001A81 CB 28                 6473 	sra	b
      001A83 CB 19                 6474 	rr	c
      001A85 CB 28                 6475 	sra	b
      001A87 CB 19                 6476 	rr	c
      001A89 CB 28                 6477 	sra	b
      001A8B CB 19                 6478 	rr	c
      001A8D 11 20 00              6479 	ld	de, #0x0020
      001A90 D5                    6480 	push	de
      001A91 C5                    6481 	push	bc
      001A92 CDr00r00              6482 	call	__modsint
      001A95 E8 04                 6483 	add	sp, #4
                                   6484 ;src/main.c:610: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001A97 21r9Cr00              6485 	ld	hl, #_playerDrawY
      001A9A 4E                    6486 	ld	c, (hl)
      001A9B 06 00                 6487 	ld	b, #0x00
      001A9D 79                    6488 	ld	a, c
      001A9E 21r9Fr00              6489 	ld	hl, #_bgY
      001AA1 86                    6490 	add	a, (hl)
      001AA2 23                    6491 	inc	hl
      001AA3 4F                    6492 	ld	c, a
      001AA4 78                    6493 	ld	a, b
      001AA5 8E                    6494 	adc	a, (hl)
      001AA6 47                    6495 	ld	b, a
      001AA7 CB 28                 6496 	sra	b
      001AA9 CB 19                 6497 	rr	c
      001AAB CB 28                 6498 	sra	b
      001AAD CB 19                 6499 	rr	c
      001AAF CB 28                 6500 	sra	b
      001AB1 CB 19                 6501 	rr	c
      001AB3 D5                    6502 	push	de
      001AB4 21 20 00              6503 	ld	hl, #0x0020
      001AB7 E5                    6504 	push	hl
      001AB8 C5                    6505 	push	bc
      001AB9 CDr00r00              6506 	call	__modsint
      001ABC E8 04                 6507 	add	sp, #4
      001ABE 6B                    6508 	ld	l, e
                                   6509 ;	spillPairReg hl
                                   6510 ;	spillPairReg hl
                                   6511 ;	spillPairReg hl
                                   6512 ;	spillPairReg hl
      001ABF D1                    6513 	pop	de
                                   6514 ;src/main.c:613: uint16_t ind = 32*bgindY + bgindX;
      001AC0 26 00                 6515 	ld	h, #0x00
                                   6516 ;	spillPairReg hl
                                   6517 ;	spillPairReg hl
      001AC2 29                    6518 	add	hl, hl
      001AC3 29                    6519 	add	hl, hl
      001AC4 29                    6520 	add	hl, hl
      001AC5 29                    6521 	add	hl, hl
      001AC6 29                    6522 	add	hl, hl
      001AC7 19                    6523 	add	hl, de
      001AC8 5D                    6524 	ld	e, l
      001AC9 54                    6525 	ld	d, h
                                   6526 ;src/main.c:614: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001ACA 0E 01                 6527 	ld	c, #0x01
                                   6528 ;src/main.c:615: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001ACC 21r87r00              6529 	ld	hl, #_background1
      001ACF 19                    6530 	add	hl, de
      001AD0 46                    6531 	ld	b, (hl)
      001AD1 1E 00                 6532 	ld	e, #0x00
      001AD3                       6533 00158$:
      001AD3 FAr89r0B              6534 	ld	a, (#_BLANKSIZE)
      001AD6 F8 02                 6535 	ldhl	sp,	#2
      001AD8 77                    6536 	ld	(hl), a
      001AD9 7B                    6537 	ld	a, e
      001ADA 96                    6538 	sub	a, (hl)
      001ADB 30 11                 6539 	jr	NC, 00109$
                                   6540 ;src/main.c:616: if (background1[ind] == BLANK[i] ) {
      001ADD 21r8Ar0B              6541 	ld	hl, #_BLANK
      001AE0 16 00                 6542 	ld	d, #0x00
      001AE2 19                    6543 	add	hl, de
      001AE3 56                    6544 	ld	d, (hl)
      001AE4 78                    6545 	ld	a, b
                                   6546 ;src/main.c:617: result = 0;
      001AE5 92                    6547 	sub	a,d
      001AE6 20 03                 6548 	jr	NZ, 00159$
      001AE8 4F                    6549 	ld	c,a
                                   6550 ;src/main.c:618: break;
      001AE9 18 03                 6551 	jr	00109$
      001AEB                       6552 00159$:
                                   6553 ;src/main.c:615: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001AEB 1C                    6554 	inc	e
      001AEC 18 E5                 6555 	jr	00158$
      001AEE                       6556 00109$:
                                   6557 ;src/main.c:622: if (result == 0) {
      001AEE 79                    6558 	ld	a, c
      001AEF B7                    6559 	or	a, a
      001AF0 C2rBEr1B              6560 	jp	NZ, 00114$
                                   6561 ;src/main.c:623: playerX+=xSpeed;
      001AF3 FAr95r00              6562 	ld	a, (#_xSpeed)
      001AF6 4F                    6563 	ld	c, a
      001AF7 07                    6564 	rlca
      001AF8 9F                    6565 	sbc	a, a
      001AF9 47                    6566 	ld	b, a
      001AFA 21r97r00              6567 	ld	hl, #_playerX
      001AFD 6E                    6568 	ld	l, (hl)
                                   6569 ;	spillPairReg hl
                                   6570 ;	spillPairReg hl
      001AFE FAr98r00              6571 	ld	a, (_playerX + 1)
      001B01 67                    6572 	ld	h, a
                                   6573 ;	spillPairReg hl
                                   6574 ;	spillPairReg hl
      001B02 09                    6575 	add	hl, bc
      001B03 4D                    6576 	ld	c, l
      001B04 44                    6577 	ld	b, h
      001B05 21r97r00              6578 	ld	hl, #_playerX
      001B08 79                    6579 	ld	a, c
      001B09 22                    6580 	ld	(hl+), a
                                   6581 ;src/main.c:625: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001B0A 78                    6582 	ld	a, b
      001B0B 32                    6583 	ld	(hl-), a
      001B0C 2A                    6584 	ld	a, (hl+)
      001B0D 4F                    6585 	ld	c, a
      001B0E 46                    6586 	ld	b, (hl)
      001B0F 79                    6587 	ld	a, c
      001B10 D6 80                 6588 	sub	a, #0x80
      001B12 78                    6589 	ld	a, b
      001B13 DE 08                 6590 	sbc	a, #0x08
      001B15 30 05                 6591 	jr	NC, 00173$
      001B17 01 80 08              6592 	ld	bc, #0x0880
      001B1A 18 0B                 6593 	jr	00174$
      001B1C                       6594 00173$:
      001B1C 3E 80                 6595 	ld	a, #0x80
      001B1E B9                    6596 	cp	a, c
      001B1F 3E 0B                 6597 	ld	a, #0x0b
      001B21 98                    6598 	sbc	a, b
      001B22 30 03                 6599 	jr	NC, 00175$
      001B24 01 80 0B              6600 	ld	bc, #0x0b80
      001B27                       6601 00175$:
      001B27                       6602 00174$:
      001B27 59                    6603 	ld	e,c
      001B28 50                    6604 	ld	d,b
                                   6605 ;src/main.c:627: xOverflow = (playerX - limitedPlayerX);
      001B29 FAr97r00              6606 	ld	a, (#_playerX)
      001B2C 93                    6607 	sub	a, e
      001B2D EArA1r00              6608 	ld	(#_xOverflow),a
      001B30 FAr98r00              6609 	ld	a, (#_playerX + 1)
      001B33 9A                    6610 	sbc	a, d
      001B34 21rA2r00              6611 	ld	hl, #_xOverflow + 1
                                   6612 ;src/main.c:628: if (xOverflow >= 0) {
      001B37 32                    6613 	ld	(hl-), a
      001B38 6E                    6614 	ld	l, (hl)
                                   6615 ;	spillPairReg hl
                                   6616 ;	spillPairReg hl
      001B39 FArA2r00              6617 	ld	a, (_xOverflow + 1)
                                   6618 ;	spillPairReg hl
                                   6619 ;	spillPairReg hl
      001B3C CB 7F                 6620 	bit	7,a
      001B3E 20 22                 6621 	jr	NZ, 00111$
                                   6622 ;src/main.c:629: xOverflow = xOverflow >> 5;
      001B40 21rA2r00              6623 	ld	hl, #_xOverflow + 1
      001B43 CB 2E                 6624 	sra	(hl)
      001B45 2B                    6625 	dec	hl
      001B46 CB 1E                 6626 	rr	(hl)
      001B48 23                    6627 	inc	hl
      001B49 CB 2E                 6628 	sra	(hl)
      001B4B 2B                    6629 	dec	hl
      001B4C CB 1E                 6630 	rr	(hl)
      001B4E 23                    6631 	inc	hl
      001B4F CB 2E                 6632 	sra	(hl)
      001B51 2B                    6633 	dec	hl
      001B52 CB 1E                 6634 	rr	(hl)
      001B54 23                    6635 	inc	hl
      001B55 CB 2E                 6636 	sra	(hl)
      001B57 2B                    6637 	dec	hl
      001B58 CB 1E                 6638 	rr	(hl)
      001B5A 23                    6639 	inc	hl
      001B5B CB 2E                 6640 	sra	(hl)
      001B5D 2B                    6641 	dec	hl
      001B5E CB 1E                 6642 	rr	(hl)
      001B60 18 25                 6643 	jr	00112$
      001B62                       6644 00111$:
                                   6645 ;src/main.c:632: xOverflow = -((-xOverflow) >> 5);
      001B62 AF                    6646 	xor	a, a
      001B63 21rA1r00              6647 	ld	hl, #_xOverflow
      001B66 96                    6648 	sub	a, (hl)
      001B67 23                    6649 	inc	hl
      001B68 5F                    6650 	ld	e, a
      001B69 9F                    6651 	sbc	a, a
      001B6A 96                    6652 	sub	a, (hl)
      001B6B 2B                    6653 	dec	hl
      001B6C 57                    6654 	ld	d, a
      001B6D CB 2A                 6655 	sra	d
      001B6F CB 1B                 6656 	rr	e
      001B71 CB 2A                 6657 	sra	d
      001B73 CB 1B                 6658 	rr	e
      001B75 CB 2A                 6659 	sra	d
      001B77 CB 1B                 6660 	rr	e
      001B79 CB 2A                 6661 	sra	d
      001B7B CB 1B                 6662 	rr	e
      001B7D CB 2A                 6663 	sra	d
      001B7F CB 1B                 6664 	rr	e
      001B81 AF                    6665 	xor	a, a
      001B82 93                    6666 	sub	a, e
      001B83 22                    6667 	ld	(hl+), a
      001B84 9F                    6668 	sbc	a, a
      001B85 92                    6669 	sub	a, d
      001B86 77                    6670 	ld	(hl), a
      001B87                       6671 00112$:
                                   6672 ;src/main.c:634: bgX += xOverflow;
      001B87 FAr9Dr00              6673 	ld	a, (#_bgX)
      001B8A 21rA1r00              6674 	ld	hl, #_xOverflow
      001B8D 86                    6675 	add	a, (hl)
      001B8E 21r9Dr00              6676 	ld	hl, #_bgX
      001B91 22                    6677 	ld	(hl+), a
      001B92 7E                    6678 	ld	a, (hl)
      001B93 21rA2r00              6679 	ld	hl, #_xOverflow + 1
      001B96 8E                    6680 	adc	a, (hl)
      001B97 EAr9Er00              6681 	ld	(#_bgX + 1),a
                                   6682 ;src/main.c:635: playerX = limitedPlayerX;
      001B9A 21r97r00              6683 	ld	hl, #_playerX
      001B9D 79                    6684 	ld	a, c
      001B9E 22                    6685 	ld	(hl+), a
                                   6686 ;src/main.c:636: playerDrawX=playerX >> 5;
      001B9F 78                    6687 	ld	a, b
      001BA0 32                    6688 	ld	(hl-), a
      001BA1 2A                    6689 	ld	a, (hl+)
      001BA2 4F                    6690 	ld	c, a
      001BA3 46                    6691 	ld	b, (hl)
      001BA4 CB 38                 6692 	srl	b
      001BA6 CB 19                 6693 	rr	c
      001BA8 CB 38                 6694 	srl	b
      001BAA CB 19                 6695 	rr	c
      001BAC CB 38                 6696 	srl	b
      001BAE CB 19                 6697 	rr	c
      001BB0 CB 38                 6698 	srl	b
      001BB2 CB 19                 6699 	rr	c
      001BB4 CB 38                 6700 	srl	b
      001BB6 CB 19                 6701 	rr	c
      001BB8 21r9Br00              6702 	ld	hl, #_playerDrawX
      001BBB 71                    6703 	ld	(hl), c
      001BBC 18 05                 6704 	jr	00115$
      001BBE                       6705 00114$:
                                   6706 ;src/main.c:644: xSpeed = 0;
      001BBE 21r95r00              6707 	ld	hl, #_xSpeed
      001BC1 36 00                 6708 	ld	(hl), #0x00
      001BC3                       6709 00115$:
                                   6710 ;src/main.c:652: uint8_t yCollisionPoint = playerDrawY; 
      001BC3 FAr9Cr00              6711 	ld	a, (#_playerDrawY)
      001BC6 F8 07                 6712 	ldhl	sp,	#7
      001BC8 77                    6713 	ld	(hl), a
                                   6714 ;src/main.c:655: yCollisionPoint = playerDrawY +8; //bottom edge
      001BC9 21r9Cr00              6715 	ld	hl, #_playerDrawY
      001BCC 4E                    6716 	ld	c, (hl)
                                   6717 ;src/main.c:654: if (ySpeed > 0) {
      001BCD 21r96r00              6718 	ld	hl, #_ySpeed
      001BD0 5E                    6719 	ld	e, (hl)
      001BD1 AF                    6720 	xor	a, a
      001BD2 57                    6721 	ld	d, a
      001BD3 96                    6722 	sub	a, (hl)
      001BD4 CB 7B                 6723 	bit	7, e
      001BD6 28 07                 6724 	jr	Z, 00350$
      001BD8 CB 7A                 6725 	bit	7, d
      001BDA 20 08                 6726 	jr	NZ, 00351$
      001BDC BF                    6727 	cp	a, a
      001BDD 18 05                 6728 	jr	00351$
      001BDF                       6729 00350$:
      001BDF CB 7A                 6730 	bit	7, d
      001BE1 28 01                 6731 	jr	Z, 00351$
      001BE3 37                    6732 	scf
      001BE4                       6733 00351$:
      001BE4 30 06                 6734 	jr	NC, 00117$
                                   6735 ;src/main.c:655: yCollisionPoint = playerDrawY +8; //bottom edge
      001BE6 79                    6736 	ld	a, c
      001BE7 C6 08                 6737 	add	a, #0x08
      001BE9 F8 07                 6738 	ldhl	sp,	#7
      001BEB 77                    6739 	ld	(hl), a
      001BEC                       6740 00117$:
                                   6741 ;src/main.c:657: if (ySpeed < 0) {
      001BEC FAr96r00              6742 	ld	a, (#_ySpeed)
      001BEF CB 7F                 6743 	bit	7, a
      001BF1 28 06                 6744 	jr	Z, 00119$
                                   6745 ;src/main.c:658: yCollisionPoint = playerDrawY -8; //top edge, 
      001BF3 79                    6746 	ld	a, c
      001BF4 C6 F8                 6747 	add	a, #0xf8
      001BF6 F8 07                 6748 	ldhl	sp,	#7
      001BF8 77                    6749 	ld	(hl), a
      001BF9                       6750 00119$:
                                   6751 ;src/main.c:662: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001BF9 FAr9Br00              6752 	ld	a, (#_playerDrawX)
      001BFC 0E 00                 6753 	ld	c, #0x00
      001BFE F8 03                 6754 	ldhl	sp,	#3
      001C00 22                    6755 	ld	(hl+), a
      001C01 79                    6756 	ld	a, c
      001C02 32                    6757 	ld	(hl-), a
      001C03 2A                    6758 	ld	a, (hl+)
      001C04 5F                    6759 	ld	e, a
      001C05 56                    6760 	ld	d, (hl)
      001C06 21r9Dr00              6761 	ld	hl, #_bgX
      001C09 2A                    6762 	ld	a,	(hl+)
      001C0A 66                    6763 	ld	h, (hl)
      001C0B 6F                    6764 	ld	l, a
      001C0C 19                    6765 	add	hl, de
      001C0D E5                    6766 	push	hl
      001C0E 7D                    6767 	ld	a, l
      001C0F F8 07                 6768 	ldhl	sp,	#7
      001C11 77                    6769 	ld	(hl), a
      001C12 E1                    6770 	pop	hl
      001C13 7C                    6771 	ld	a, h
      001C14 F8 06                 6772 	ldhl	sp,	#6
      001C16 77                    6773 	ld	(hl), a
      001C17 CB 2E                 6774 	sra	(hl)
      001C19 2B                    6775 	dec	hl
      001C1A CB 1E                 6776 	rr	(hl)
      001C1C 23                    6777 	inc	hl
      001C1D CB 2E                 6778 	sra	(hl)
      001C1F 2B                    6779 	dec	hl
      001C20 CB 1E                 6780 	rr	(hl)
      001C22 23                    6781 	inc	hl
      001C23 CB 2E                 6782 	sra	(hl)
      001C25 2B                    6783 	dec	hl
      001C26 CB 1E                 6784 	rr	(hl)
      001C28 11 20 00              6785 	ld	de, #0x0020
      001C2B D5                    6786 	push	de
      001C2C 2A                    6787 	ld	a, (hl+)
      001C2D 5F                    6788 	ld	e, a
      001C2E 56                    6789 	ld	d, (hl)
      001C2F D5                    6790 	push	de
      001C30 CDr00r00              6791 	call	__modsint
      001C33 E8 04                 6792 	add	sp, #4
      001C35 F8 05                 6793 	ldhl	sp,	#5
      001C37 7B                    6794 	ld	a, e
      001C38 22                    6795 	ld	(hl+), a
      001C39 72                    6796 	ld	(hl), d
      001C3A F8 05                 6797 	ldhl	sp,	#5
      001C3C 7E                    6798 	ld	a, (hl)
      001C3D F8 00                 6799 	ldhl	sp,	#0
      001C3F 77                    6800 	ld	(hl), a
      001C40 F8 06                 6801 	ldhl	sp,	#6
      001C42 7E                    6802 	ld	a, (hl)
      001C43 F8 01                 6803 	ldhl	sp,	#1
      001C45 77                    6804 	ld	(hl), a
                                   6805 ;src/main.c:665: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001C46 F8 07                 6806 	ldhl	sp,	#7
      001C48 3A                    6807 	ld	a, (hl-)
      001C49 22                    6808 	ld	(hl+), a
      001C4A AF                    6809 	xor	a, a
      001C4B 32                    6810 	ld	(hl-), a
      001C4C 3A                    6811 	ld	a, (hl-)
      001C4D 2B                    6812 	dec	hl
      001C4E 77                    6813 	ld	(hl), a
      001C4F F8 07                 6814 	ldhl	sp,	#7
      001C51 3A                    6815 	ld	a, (hl-)
      001C52 2B                    6816 	dec	hl
      001C53 32                    6817 	ld	(hl-), a
      001C54 2A                    6818 	ld	a, (hl+)
      001C55 5F                    6819 	ld	e, a
      001C56 56                    6820 	ld	d, (hl)
      001C57 21r9Fr00              6821 	ld	hl, #_bgY
      001C5A 2A                    6822 	ld	a,	(hl+)
      001C5B 66                    6823 	ld	h, (hl)
      001C5C 6F                    6824 	ld	l, a
      001C5D 19                    6825 	add	hl, de
      001C5E E5                    6826 	push	hl
      001C5F 7D                    6827 	ld	a, l
      001C60 F8 08                 6828 	ldhl	sp,	#8
      001C62 77                    6829 	ld	(hl), a
      001C63 E1                    6830 	pop	hl
      001C64 7C                    6831 	ld	a, h
      001C65 F8 07                 6832 	ldhl	sp,	#7
      001C67 77                    6833 	ld	(hl), a
      001C68 CB 2E                 6834 	sra	(hl)
      001C6A 2B                    6835 	dec	hl
      001C6B CB 1E                 6836 	rr	(hl)
      001C6D 23                    6837 	inc	hl
      001C6E CB 2E                 6838 	sra	(hl)
      001C70 2B                    6839 	dec	hl
      001C71 CB 1E                 6840 	rr	(hl)
      001C73 23                    6841 	inc	hl
      001C74 CB 2E                 6842 	sra	(hl)
      001C76 2B                    6843 	dec	hl
      001C77 CB 1E                 6844 	rr	(hl)
      001C79 11 20 00              6845 	ld	de, #0x0020
      001C7C D5                    6846 	push	de
      001C7D 2A                    6847 	ld	a, (hl+)
      001C7E 5F                    6848 	ld	e, a
      001C7F 56                    6849 	ld	d, (hl)
      001C80 D5                    6850 	push	de
      001C81 CDr00r00              6851 	call	__modsint
      001C84 E8 04                 6852 	add	sp, #4
      001C86 F8 06                 6853 	ldhl	sp,	#6
      001C88 7B                    6854 	ld	a, e
      001C89 22                    6855 	ld	(hl+), a
      001C8A 72                    6856 	ld	(hl), d
      001C8B F8 06                 6857 	ldhl	sp,	#6
      001C8D 2A                    6858 	ld	a, (hl+)
      001C8E 77                    6859 	ld	(hl), a
                                   6860 ;src/main.c:668: ind = 32*bgindY + bgindX;
      001C8F 3A                    6861 	ld	a, (hl-)
      001C90 22                    6862 	ld	(hl+), a
      001C91 36 00                 6863 	ld	(hl), #0x00
      001C93 3E 05                 6864 	ld	a, #0x05
      001C95                       6865 00352$:
      001C95 F8 06                 6866 	ldhl	sp,	#6
      001C97 CB 26                 6867 	sla	(hl)
      001C99 23                    6868 	inc	hl
      001C9A CB 16                 6869 	rl	(hl)
      001C9C 3D                    6870 	dec	a
      001C9D 20 F6                 6871 	jr	NZ, 00352$
      001C9F 2B                    6872 	dec	hl
      001CA0 3A                    6873 	ld	a, (hl-)
      001CA1 2B                    6874 	dec	hl
      001CA2 77                    6875 	ld	(hl), a
      001CA3 F8 07                 6876 	ldhl	sp,	#7
      001CA5 3A                    6877 	ld	a, (hl-)
      001CA6 2B                    6878 	dec	hl
      001CA7 77                    6879 	ld	(hl), a
      001CA8 D1                    6880 	pop	de
      001CA9 D5                    6881 	push	de
      001CAA 3A                    6882 	ld	a, (hl-)
      001CAB 6E                    6883 	ld	l, (hl)
      001CAC 67                    6884 	ld	h, a
      001CAD 19                    6885 	add	hl, de
      001CAE E5                    6886 	push	hl
      001CAF 7D                    6887 	ld	a, l
      001CB0 F8 08                 6888 	ldhl	sp,	#8
      001CB2 77                    6889 	ld	(hl), a
      001CB3 E1                    6890 	pop	hl
      001CB4 7C                    6891 	ld	a, h
      001CB5 F8 07                 6892 	ldhl	sp,	#7
      001CB7 77                    6893 	ld	(hl), a
                                   6894 ;src/main.c:669: result = 1;
      001CB8 F8 03                 6895 	ldhl	sp,	#3
      001CBA 36 01                 6896 	ld	(hl), #0x01
                                   6897 ;src/main.c:670: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001CBC F8 06                 6898 	ldhl	sp,#6
      001CBE 2A                    6899 	ld	a, (hl+)
      001CBF 5F                    6900 	ld	e, a
      001CC0 56                    6901 	ld	d, (hl)
      001CC1 21r87r00              6902 	ld	hl, #_background1
      001CC4 19                    6903 	add	hl, de
      001CC5 4D                    6904 	ld	c, l
      001CC6 44                    6905 	ld	b, h
      001CC7 0A                    6906 	ld	a, (bc)
      001CC8 F8 04                 6907 	ldhl	sp,	#4
      001CCA 77                    6908 	ld	(hl), a
      001CCB F8 07                 6909 	ldhl	sp,	#7
      001CCD 36 00                 6910 	ld	(hl), #0x00
      001CCF                       6911 00161$:
      001CCF F8 07                 6912 	ldhl	sp,	#7
      001CD1 7E                    6913 	ld	a, (hl)
      001CD2 F8 02                 6914 	ldhl	sp,	#2
      001CD4 96                    6915 	sub	a, (hl)
      001CD5 30 29                 6916 	jr	NC, 00122$
                                   6917 ;src/main.c:671: if (background1[ind] == BLANK[j] ) {
      001CD7 11r8Ar0B              6918 	ld	de, #_BLANK
      001CDA F8 07                 6919 	ldhl	sp,	#7
      001CDC 6E                    6920 	ld	l, (hl)
      001CDD 26 00                 6921 	ld	h, #0x00
      001CDF 19                    6922 	add	hl, de
      001CE0 E5                    6923 	push	hl
      001CE1 7D                    6924 	ld	a, l
      001CE2 F8 07                 6925 	ldhl	sp,	#7
      001CE4 77                    6926 	ld	(hl), a
      001CE5 E1                    6927 	pop	hl
      001CE6 7C                    6928 	ld	a, h
      001CE7 F8 06                 6929 	ldhl	sp,	#6
      001CE9 32                    6930 	ld	(hl-), a
      001CEA 2A                    6931 	ld	a, (hl+)
      001CEB 5F                    6932 	ld	e, a
      001CEC 3A                    6933 	ld	a, (hl-)
      001CED 2B                    6934 	dec	hl
      001CEE 57                    6935 	ld	d, a
      001CEF 1A                    6936 	ld	a, (de)
      001CF0 4F                    6937 	ld	c, a
      001CF1 7E                    6938 	ld	a, (hl)
      001CF2 91                    6939 	sub	a, c
      001CF3 20 06                 6940 	jr	NZ, 00162$
                                   6941 ;src/main.c:672: result = 0;
      001CF5 F8 03                 6942 	ldhl	sp,	#3
      001CF7 36 00                 6943 	ld	(hl), #0x00
                                   6944 ;src/main.c:673: break;
      001CF9 18 05                 6945 	jr	00122$
      001CFB                       6946 00162$:
                                   6947 ;src/main.c:670: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001CFB F8 07                 6948 	ldhl	sp,	#7
      001CFD 34                    6949 	inc	(hl)
      001CFE 18 CF                 6950 	jr	00161$
      001D00                       6951 00122$:
                                   6952 ;src/main.c:677: if (result == 0) {
      001D00 F8 03                 6953 	ldhl	sp,	#3
      001D02 7E                    6954 	ld	a, (hl)
      001D03 B7                    6955 	or	a, a
      001D04 C2rCEr1D              6956 	jp	NZ, 00127$
                                   6957 ;src/main.c:678: playerY += ySpeed;
      001D07 FAr96r00              6958 	ld	a, (#_ySpeed)
      001D0A 4F                    6959 	ld	c, a
      001D0B 07                    6960 	rlca
      001D0C 9F                    6961 	sbc	a, a
      001D0D 21r99r00              6962 	ld	hl, #_playerY
      001D10 5E                    6963 	ld	e, (hl)
      001D11 23                    6964 	inc	hl
      001D12 56                    6965 	ld	d, (hl)
      001D13 2B                    6966 	dec	hl
      001D14 47                    6967 	ld	b, a
      001D15 79                    6968 	ld	a, c
      001D16 83                    6969 	add	a, e
      001D17 4F                    6970 	ld	c, a
      001D18 78                    6971 	ld	a, b
      001D19 8A                    6972 	adc	a, d
      001D1A 47                    6973 	ld	b, a
      001D1B 79                    6974 	ld	a, c
      001D1C 22                    6975 	ld	(hl+), a
                                   6976 ;src/main.c:680: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001D1D 78                    6977 	ld	a, b
      001D1E 32                    6978 	ld	(hl-), a
      001D1F 2A                    6979 	ld	a, (hl+)
      001D20 5F                    6980 	ld	e, a
      001D21 56                    6981 	ld	d, (hl)
      001D22 7A                    6982 	ld	a, d
      001D23 D6 06                 6983 	sub	a, #0x06
      001D25 30 05                 6984 	jr	NC, 00177$
      001D27 11 00 06              6985 	ld	de, #0x0600
      001D2A 18 0B                 6986 	jr	00178$
      001D2C                       6987 00177$:
      001D2C 3E C0                 6988 	ld	a, #0xc0
      001D2E BB                    6989 	cp	a, e
      001D2F 3E 09                 6990 	ld	a, #0x09
      001D31 9A                    6991 	sbc	a, d
      001D32 30 03                 6992 	jr	NC, 00179$
      001D34 11 C0 09              6993 	ld	de, #0x09c0
      001D37                       6994 00179$:
      001D37                       6995 00178$:
      001D37 4B                    6996 	ld	c, e
      001D38 42                    6997 	ld	b, d
                                   6998 ;src/main.c:682: yOverflow = (playerY - limitedPlayerY);
      001D39 FAr99r00              6999 	ld	a, (#_playerY)
      001D3C 93                    7000 	sub	a, e
      001D3D EArA3r00              7001 	ld	(#_yOverflow),a
      001D40 FAr9Ar00              7002 	ld	a, (#_playerY + 1)
      001D43 9A                    7003 	sbc	a, d
      001D44 21rA4r00              7004 	ld	hl, #_yOverflow + 1
                                   7005 ;src/main.c:683: if (yOverflow >= 0) {
      001D47 32                    7006 	ld	(hl-), a
      001D48 6E                    7007 	ld	l, (hl)
                                   7008 ;	spillPairReg hl
                                   7009 ;	spillPairReg hl
      001D49 FArA4r00              7010 	ld	a, (_yOverflow + 1)
                                   7011 ;	spillPairReg hl
                                   7012 ;	spillPairReg hl
      001D4C CB 7F                 7013 	bit	7,a
      001D4E 20 22                 7014 	jr	NZ, 00124$
                                   7015 ;src/main.c:684: yOverflow = yOverflow >> 5;
      001D50 21rA4r00              7016 	ld	hl, #_yOverflow + 1
      001D53 CB 2E                 7017 	sra	(hl)
      001D55 2B                    7018 	dec	hl
      001D56 CB 1E                 7019 	rr	(hl)
      001D58 23                    7020 	inc	hl
      001D59 CB 2E                 7021 	sra	(hl)
      001D5B 2B                    7022 	dec	hl
      001D5C CB 1E                 7023 	rr	(hl)
      001D5E 23                    7024 	inc	hl
      001D5F CB 2E                 7025 	sra	(hl)
      001D61 2B                    7026 	dec	hl
      001D62 CB 1E                 7027 	rr	(hl)
      001D64 23                    7028 	inc	hl
      001D65 CB 2E                 7029 	sra	(hl)
      001D67 2B                    7030 	dec	hl
      001D68 CB 1E                 7031 	rr	(hl)
      001D6A 23                    7032 	inc	hl
      001D6B CB 2E                 7033 	sra	(hl)
      001D6D 2B                    7034 	dec	hl
      001D6E CB 1E                 7035 	rr	(hl)
      001D70 18 25                 7036 	jr	00125$
      001D72                       7037 00124$:
                                   7038 ;src/main.c:687: yOverflow = -((-yOverflow) >> 5);
      001D72 AF                    7039 	xor	a, a
      001D73 21rA3r00              7040 	ld	hl, #_yOverflow
      001D76 96                    7041 	sub	a, (hl)
      001D77 23                    7042 	inc	hl
      001D78 5F                    7043 	ld	e, a
      001D79 9F                    7044 	sbc	a, a
      001D7A 96                    7045 	sub	a, (hl)
      001D7B 2B                    7046 	dec	hl
      001D7C 57                    7047 	ld	d, a
      001D7D CB 2A                 7048 	sra	d
      001D7F CB 1B                 7049 	rr	e
      001D81 CB 2A                 7050 	sra	d
      001D83 CB 1B                 7051 	rr	e
      001D85 CB 2A                 7052 	sra	d
      001D87 CB 1B                 7053 	rr	e
      001D89 CB 2A                 7054 	sra	d
      001D8B CB 1B                 7055 	rr	e
      001D8D CB 2A                 7056 	sra	d
      001D8F CB 1B                 7057 	rr	e
      001D91 AF                    7058 	xor	a, a
      001D92 93                    7059 	sub	a, e
      001D93 22                    7060 	ld	(hl+), a
      001D94 9F                    7061 	sbc	a, a
      001D95 92                    7062 	sub	a, d
      001D96 77                    7063 	ld	(hl), a
      001D97                       7064 00125$:
                                   7065 ;src/main.c:689: bgY += yOverflow;
      001D97 FAr9Fr00              7066 	ld	a, (#_bgY)
      001D9A 21rA3r00              7067 	ld	hl, #_yOverflow
      001D9D 86                    7068 	add	a, (hl)
      001D9E 21r9Fr00              7069 	ld	hl, #_bgY
      001DA1 22                    7070 	ld	(hl+), a
      001DA2 7E                    7071 	ld	a, (hl)
      001DA3 21rA4r00              7072 	ld	hl, #_yOverflow + 1
      001DA6 8E                    7073 	adc	a, (hl)
      001DA7 EArA0r00              7074 	ld	(#_bgY + 1),a
                                   7075 ;src/main.c:690: playerY = limitedPlayerY;
      001DAA 21r99r00              7076 	ld	hl, #_playerY
      001DAD 79                    7077 	ld	a, c
      001DAE 22                    7078 	ld	(hl+), a
                                   7079 ;src/main.c:691: playerDrawY=playerY >> 5;
      001DAF 78                    7080 	ld	a, b
      001DB0 32                    7081 	ld	(hl-), a
      001DB1 2A                    7082 	ld	a, (hl+)
      001DB2 4F                    7083 	ld	c, a
      001DB3 46                    7084 	ld	b, (hl)
      001DB4 CB 38                 7085 	srl	b
      001DB6 CB 19                 7086 	rr	c
      001DB8 CB 38                 7087 	srl	b
      001DBA CB 19                 7088 	rr	c
      001DBC CB 38                 7089 	srl	b
      001DBE CB 19                 7090 	rr	c
      001DC0 CB 38                 7091 	srl	b
      001DC2 CB 19                 7092 	rr	c
      001DC4 CB 38                 7093 	srl	b
      001DC6 CB 19                 7094 	rr	c
      001DC8 21r9Cr00              7095 	ld	hl, #_playerDrawY
      001DCB 71                    7096 	ld	(hl), c
      001DCC 18 05                 7097 	jr	00128$
      001DCE                       7098 00127$:
                                   7099 ;src/main.c:696: ySpeed = 0;
      001DCE 21r96r00              7100 	ld	hl, #_ySpeed
      001DD1 36 00                 7101 	ld	(hl), #0x00
      001DD3                       7102 00128$:
                                   7103 ;src/main.c:596: uint8_t xCollisionPoint = playerDrawX; 
      001DD3 FAr9Br00              7104 	ld	a, (#_playerDrawX)
      001DD6 F8 07                 7105 	ldhl	sp,	#7
      001DD8 77                    7106 	ld	(hl), a
                                   7107 ;src/main.c:655: yCollisionPoint = playerDrawY +8; //bottom edge
      001DD9 FAr9Cr00              7108 	ld	a, (#_playerDrawY)
      001DDC C6 08                 7109 	add	a, #0x08
      001DDE F8 06                 7110 	ldhl	sp,	#6
      001DE0 77                    7111 	ld	(hl), a
                                   7112 ;src/main.c:699: if (xDir >= 0) {
      001DE1 FAr93r00              7113 	ld	a, (#_xDir)
      001DE4 CB 7F                 7114 	bit	7, a
      001DE6 20 2A                 7115 	jr	NZ, 00130$
                                   7116 ;src/main.c:700: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   7117 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7118 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001DE8 11r00r00              7119 	ld	de, #_shadow_OAM
      001DEB F8 06                 7120 	ldhl	sp,	#6
      001DED 2A                    7121 	ld	a, (hl+)
      001DEE 12                    7122 	ld	(de), a
      001DEF 11r01r00              7123 	ld	de, #(_shadow_OAM + 1)
      001DF2 7E                    7124 	ld	a, (hl)
      001DF3 12                    7125 	ld	(de), a
                                   7126 ;src/main.c:702: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001DF4 FAr9Cr00              7127 	ld	a, (#_playerDrawY)
      001DF7 F8 07                 7128 	ldhl	sp,	#7
      001DF9 77                    7129 	ld	(hl), a
      001DFA 3A                    7130 	ld	a, (hl-)
      001DFB C6 08                 7131 	add	a, #0x08
      001DFD 77                    7132 	ld	(hl), a
      001DFE FAr9Br00              7133 	ld	a, (#_playerDrawX)
      001E01 C6 08                 7134 	add	a, #0x08
      001E03 F8 07                 7135 	ldhl	sp,	#7
                                   7136 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7137 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001E05 32                    7138 	ld	(hl-), a
      001E06 11r04r00              7139 	ld	de, #(_shadow_OAM + 4)
      001E09 2A                    7140 	ld	a, (hl+)
      001E0A 12                    7141 	ld	(de), a
      001E0B 11r05r00              7142 	ld	de, #(_shadow_OAM + 5)
      001E0E 7E                    7143 	ld	a, (hl)
      001E0F 12                    7144 	ld	(de), a
                                   7145 ;src/main.c:702: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001E10 18 28                 7146 	jr	00131$
      001E12                       7147 00130$:
                                   7148 ;src/main.c:705: move_sprite(1, playerDrawX , playerDrawY +8);
                                   7149 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001E12 01r04r00              7150 	ld	bc, #(_shadow_OAM + 4)
                                   7151 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001E15 F8 06                 7152 	ldhl	sp,	#6
      001E17 2A                    7153 	ld	a, (hl+)
      001E18 02                    7154 	ld	(bc), a
      001E19 03                    7155 	inc	bc
      001E1A 7E                    7156 	ld	a, (hl)
      001E1B 02                    7157 	ld	(bc), a
                                   7158 ;src/main.c:707: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001E1C FAr9Cr00              7159 	ld	a, (#_playerDrawY)
      001E1F F8 07                 7160 	ldhl	sp,	#7
      001E21 77                    7161 	ld	(hl), a
      001E22 3A                    7162 	ld	a, (hl-)
      001E23 C6 08                 7163 	add	a, #0x08
      001E25 77                    7164 	ld	(hl), a
      001E26 FAr9Br00              7165 	ld	a, (#_playerDrawX)
      001E29 F8 07                 7166 	ldhl	sp,	#7
      001E2B 77                    7167 	ld	(hl), a
      001E2C 7E                    7168 	ld	a, (hl)
      001E2D C6 08                 7169 	add	a, #0x08
                                   7170 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7171 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001E2F 32                    7172 	ld	(hl-), a
      001E30 11r00r00              7173 	ld	de, #_shadow_OAM
      001E33 2A                    7174 	ld	a, (hl+)
      001E34 12                    7175 	ld	(de), a
      001E35 11r01r00              7176 	ld	de, #(_shadow_OAM + 1)
      001E38 7E                    7177 	ld	a, (hl)
      001E39 12                    7178 	ld	(de), a
                                   7179 ;src/main.c:707: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001E3A                       7180 00131$:
                                   7181 ;src/main.c:712: if (bgX >= 256) {
      001E3A 21r9Dr00              7182 	ld	hl, #_bgX
      001E3D 2A                    7183 	ld	a, (hl+)
      001E3E 4F                    7184 	ld	c, a
      001E3F 46                    7185 	ld	b, (hl)
      001E40 78                    7186 	ld	a, b
      001E41 EE 80                 7187 	xor	a, #0x80
      001E43 D6 81                 7188 	sub	a, #0x81
      001E45 38 0F                 7189 	jr	C, 00133$
                                   7190 ;src/main.c:713: bgX = bgX % 256;
      001E47 AF                    7191 	xor	a, a
      001E48 3C                    7192 	inc	a
      001E49 F5                    7193 	push	af
      001E4A C5                    7194 	push	bc
      001E4B CDr00r00              7195 	call	__modsint
      001E4E E8 04                 7196 	add	sp, #4
      001E50 21r9Dr00              7197 	ld	hl, #_bgX
      001E53 7B                    7198 	ld	a, e
      001E54 22                    7199 	ld	(hl+), a
      001E55 72                    7200 	ld	(hl), d
      001E56                       7201 00133$:
                                   7202 ;src/main.c:715: if (bgX < 0) {
      001E56 21r9Dr00              7203 	ld	hl, #_bgX
      001E59 2A                    7204 	ld	a, (hl+)
      001E5A 4F                    7205 	ld	c, a
      001E5B 46                    7206 	ld	b, (hl)
      001E5C CB 78                 7207 	bit	7, b
      001E5E 28 15                 7208 	jr	Z, 00135$
                                   7209 ;src/main.c:716: bgX = 255 - (bgX % 256);
      001E60 AF                    7210 	xor	a, a
      001E61 3C                    7211 	inc	a
      001E62 F5                    7212 	push	af
      001E63 C5                    7213 	push	bc
      001E64 CDr00r00              7214 	call	__modsint
      001E67 E8 04                 7215 	add	sp, #4
      001E69 3E FF                 7216 	ld	a, #0xff
      001E6B 93                    7217 	sub	a, e
      001E6C 4F                    7218 	ld	c, a
      001E6D 9F                    7219 	sbc	a, a
      001E6E 92                    7220 	sub	a, d
      001E6F 21r9Dr00              7221 	ld	hl, #_bgX
      001E72 71                    7222 	ld	(hl), c
      001E73 23                    7223 	inc	hl
      001E74 77                    7224 	ld	(hl), a
      001E75                       7225 00135$:
                                   7226 ;src/main.c:718: if (bgY >= 256) {
      001E75 21r9Fr00              7227 	ld	hl, #_bgY
      001E78 2A                    7228 	ld	a, (hl+)
      001E79 4F                    7229 	ld	c, a
      001E7A 46                    7230 	ld	b, (hl)
      001E7B 78                    7231 	ld	a, b
      001E7C EE 80                 7232 	xor	a, #0x80
      001E7E D6 81                 7233 	sub	a, #0x81
      001E80 38 0F                 7234 	jr	C, 00137$
                                   7235 ;src/main.c:719: bgY = bgY % 256;
      001E82 AF                    7236 	xor	a, a
      001E83 3C                    7237 	inc	a
      001E84 F5                    7238 	push	af
      001E85 C5                    7239 	push	bc
      001E86 CDr00r00              7240 	call	__modsint
      001E89 E8 04                 7241 	add	sp, #4
      001E8B 21r9Fr00              7242 	ld	hl, #_bgY
      001E8E 7B                    7243 	ld	a, e
      001E8F 22                    7244 	ld	(hl+), a
      001E90 72                    7245 	ld	(hl), d
      001E91                       7246 00137$:
                                   7247 ;src/main.c:721: if (bgY < 0) {
      001E91 21r9Fr00              7248 	ld	hl, #_bgY
      001E94 2A                    7249 	ld	a, (hl+)
      001E95 4F                    7250 	ld	c, a
      001E96 46                    7251 	ld	b, (hl)
      001E97 CB 78                 7252 	bit	7, b
      001E99 28 15                 7253 	jr	Z, 00139$
                                   7254 ;src/main.c:722: bgY = 255 - (bgY % 256);
      001E9B AF                    7255 	xor	a, a
      001E9C 3C                    7256 	inc	a
      001E9D F5                    7257 	push	af
      001E9E C5                    7258 	push	bc
      001E9F CDr00r00              7259 	call	__modsint
      001EA2 E8 04                 7260 	add	sp, #4
      001EA4 3E FF                 7261 	ld	a, #0xff
      001EA6 93                    7262 	sub	a, e
      001EA7 4F                    7263 	ld	c, a
      001EA8 9F                    7264 	sbc	a, a
      001EA9 92                    7265 	sub	a, d
      001EAA 21r9Fr00              7266 	ld	hl, #_bgY
      001EAD 71                    7267 	ld	(hl), c
      001EAE 23                    7268 	inc	hl
      001EAF 77                    7269 	ld	(hl), a
      001EB0                       7270 00139$:
                                   7271 ;src/main.c:725: move_bkg(bgX, bgY);
      001EB0 21r9Fr00              7272 	ld	hl, #_bgY
      001EB3 4E                    7273 	ld	c, (hl)
      001EB4 FAr9Dr00              7274 	ld	a, (#_bgX)
      001EB7 E0r00                 7275 	ldh	(_SCX_REG + 0), a
                                   7276 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001EB9 79                    7277 	ld	a, c
      001EBA E0r00                 7278 	ldh	(_SCY_REG + 0), a
                                   7279 ;src/main.c:728: if (ySpeed > 0) ySpeed--;
      001EBC 21r96r00              7280 	ld	hl, #_ySpeed
      001EBF 5E                    7281 	ld	e, (hl)
      001EC0 AF                    7282 	xor	a, a
      001EC1 57                    7283 	ld	d, a
      001EC2 96                    7284 	sub	a, (hl)
      001EC3 CB 7B                 7285 	bit	7, e
      001EC5 28 07                 7286 	jr	Z, 00355$
      001EC7 CB 7A                 7287 	bit	7, d
      001EC9 20 08                 7288 	jr	NZ, 00356$
      001ECB BF                    7289 	cp	a, a
      001ECC 18 05                 7290 	jr	00356$
      001ECE                       7291 00355$:
      001ECE CB 7A                 7292 	bit	7, d
      001ED0 28 01                 7293 	jr	Z, 00356$
      001ED2 37                    7294 	scf
      001ED3                       7295 00356$:
      001ED3 30 04                 7296 	jr	NC, 00141$
      001ED5 21r96r00              7297 	ld	hl, #_ySpeed
      001ED8 35                    7298 	dec	(hl)
      001ED9                       7299 00141$:
                                   7300 ;src/main.c:729: if (ySpeed < 0) ySpeed++;
      001ED9 21r96r00              7301 	ld	hl, #_ySpeed
      001EDC CB 7E                 7302 	bit	7, (hl)
      001EDE 28 01                 7303 	jr	Z, 00143$
      001EE0 34                    7304 	inc	(hl)
      001EE1                       7305 00143$:
                                   7306 ;src/main.c:730: if (xSpeed > 0) xSpeed--;
      001EE1 21r95r00              7307 	ld	hl, #_xSpeed
      001EE4 5E                    7308 	ld	e, (hl)
      001EE5 AF                    7309 	xor	a, a
      001EE6 57                    7310 	ld	d, a
      001EE7 96                    7311 	sub	a, (hl)
      001EE8 CB 7B                 7312 	bit	7, e
      001EEA 28 07                 7313 	jr	Z, 00357$
      001EEC CB 7A                 7314 	bit	7, d
      001EEE 20 08                 7315 	jr	NZ, 00358$
      001EF0 BF                    7316 	cp	a, a
      001EF1 18 05                 7317 	jr	00358$
      001EF3                       7318 00357$:
      001EF3 CB 7A                 7319 	bit	7, d
      001EF5 28 01                 7320 	jr	Z, 00358$
      001EF7 37                    7321 	scf
      001EF8                       7322 00358$:
      001EF8 30 04                 7323 	jr	NC, 00145$
      001EFA 21r95r00              7324 	ld	hl, #_xSpeed
      001EFD 35                    7325 	dec	(hl)
      001EFE                       7326 00145$:
                                   7327 ;src/main.c:731: if (xSpeed < 0) xSpeed++;
      001EFE 21r95r00              7328 	ld	hl, #_xSpeed
      001F01 CB 7E                 7329 	bit	7, (hl)
      001F03 28 01                 7330 	jr	Z, 00163$
      001F05 34                    7331 	inc	(hl)
      001F06                       7332 00163$:
                                   7333 ;src/main.c:735: }
      001F06 E8 08                 7334 	add	sp, #8
      001F08 C9                    7335 	ret
                                   7336 ;src/main.c:737: void takeDamage(int16_t amount) {
                                   7337 ;	---------------------------------
                                   7338 ; Function takeDamage
                                   7339 ; ---------------------------------
      001F09                       7340 _takeDamage::
      001F09 3B                    7341 	dec	sp
                                   7342 ;src/main.c:738: if (amount > shield) {
      001F0A FArF7r00              7343 	ld	a, (#_shield)
      001F0D 4F                    7344 	ld	c, a
      001F0E 07                    7345 	rlca
      001F0F 9F                    7346 	sbc	a, a
      001F10 47                    7347 	ld	b, a
                                   7348 ;src/main.c:740: hull -= (amount - shield);
      001F11 F8 03                 7349 	ldhl	sp,	#3
      001F13 7E                    7350 	ld	a, (hl)
      001F14 F8 00                 7351 	ldhl	sp,	#0
      001F16 77                    7352 	ld	(hl), a
                                   7353 ;src/main.c:738: if (amount > shield) {
      001F17 F8 03                 7354 	ldhl	sp,	#3
      001F19 79                    7355 	ld	a, c
      001F1A 96                    7356 	sub	a, (hl)
      001F1B 23                    7357 	inc	hl
      001F1C 78                    7358 	ld	a, b
      001F1D 9E                    7359 	sbc	a, (hl)
      001F1E 78                    7360 	ld	a, b
      001F1F 57                    7361 	ld	d, a
      001F20 CB 7E                 7362 	bit	7, (hl)
      001F22 28 07                 7363 	jr	Z, 00111$
      001F24 CB 7A                 7364 	bit	7, d
      001F26 20 08                 7365 	jr	NZ, 00112$
      001F28 BF                    7366 	cp	a, a
      001F29 18 05                 7367 	jr	00112$
      001F2B                       7368 00111$:
      001F2B CB 7A                 7369 	bit	7, d
      001F2D 28 01                 7370 	jr	Z, 00112$
      001F2F 37                    7371 	scf
      001F30                       7372 00112$:
      001F30 30 10                 7373 	jr	NC, 00102$
                                   7374 ;src/main.c:739: shield = 0;
      001F32 21rF7r00              7375 	ld	hl, #_shield
      001F35 36 00                 7376 	ld	(hl), #0x00
                                   7377 ;src/main.c:740: hull -= (amount - shield);
      001F37 FArF6r00              7378 	ld	a, (#_hull)
      001F3A F8 00                 7379 	ldhl	sp,	#0
      001F3C 96                    7380 	sub	a, (hl)
      001F3D EArF6r00              7381 	ld	(#_hull),a
      001F40 18 09                 7382 	jr	00104$
      001F42                       7383 00102$:
                                   7384 ;src/main.c:743: shield -= amount;
      001F42 FArF7r00              7385 	ld	a, (#_shield)
      001F45 F8 00                 7386 	ldhl	sp,	#0
      001F47 96                    7387 	sub	a, (hl)
      001F48 EArF7r00              7388 	ld	(#_shield),a
      001F4B                       7389 00104$:
                                   7390 ;src/main.c:745: }
      001F4B 33                    7391 	inc	sp
      001F4C C9                    7392 	ret
                                   7393 ;src/main.c:747: void spawnPickup(int16_t x, int16_t y) {
                                   7394 ;	---------------------------------
                                   7395 ; Function spawnPickup
                                   7396 ; ---------------------------------
      001F4D                       7397 _spawnPickup::
                                   7398 ;src/main.c:748: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      001F4D CDr00r00              7399 	call	_rand
      001F50 7B                    7400 	ld	a, e
      001F51 E6 0F                 7401 	and	a, #0x0f
      001F53 C0                    7402 	ret	NZ
                                   7403 ;src/main.c:749: if (spawn == 0) {
                                   7404 ;src/main.c:750: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      001F54 CDr00r00              7405 	call	_rand
      001F57 7B                    7406 	ld	a, e
      001F58 E6 03                 7407 	and	a, #0x03
                                   7408 ;src/main.c:751: if (type == 0) {
      001F5A 5F                    7409 	ld	e,a
      001F5B B7                    7410 	or	a, a
      001F5C 20 13                 7411 	jr	NZ, 00106$
                                   7412 ;src/main.c:752: pickup = health;
      001F5E 11 09 00              7413 	ld	de, #0x0009
      001F61 D5                    7414 	push	de
      001F62 11r1Ar07              7415 	ld	de, #_health
      001F65 D5                    7416 	push	de
      001F66 11rFAr00              7417 	ld	de, #_pickup
      001F69 D5                    7418 	push	de
      001F6A CDr00r00              7419 	call	___memcpy
      001F6D E8 06                 7420 	add	sp, #6
      001F6F 18 31                 7421 	jr	00107$
      001F71                       7422 00106$:
                                   7423 ;src/main.c:754: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      001F71 1D                    7424 	dec	e
      001F72 20 1D                 7425 	jr	NZ, 00102$
      001F74 21rA3r0B              7426 	ld	hl, #_MAXGUNLEVEL
      001F77 4E                    7427 	ld	c, (hl)
      001F78 FArA6r00              7428 	ld	a, (#_gunLevel)
      001F7B 91                    7429 	sub	a, c
      001F7C 30 13                 7430 	jr	NC, 00102$
                                   7431 ;src/main.c:755: pickup = upgrade;
      001F7E 11 09 00              7432 	ld	de, #0x0009
      001F81 D5                    7433 	push	de
      001F82 11r08r07              7434 	ld	de, #_upgrade
      001F85 D5                    7435 	push	de
      001F86 11rFAr00              7436 	ld	de, #_pickup
      001F89 D5                    7437 	push	de
      001F8A CDr00r00              7438 	call	___memcpy
      001F8D E8 06                 7439 	add	sp, #6
      001F8F 18 11                 7440 	jr	00107$
      001F91                       7441 00102$:
                                   7442 ;src/main.c:758: pickup = ammo;
      001F91 01r11r07              7443 	ld	bc, #_ammo
      001F94 11rFAr00              7444 	ld	de, #_pickup
      001F97 21 09 00              7445 	ld	hl, #0x0009
      001F9A E5                    7446 	push	hl
      001F9B C5                    7447 	push	bc
      001F9C D5                    7448 	push	de
      001F9D CDr00r00              7449 	call	___memcpy
      001FA0 E8 06                 7450 	add	sp, #6
      001FA2                       7451 00107$:
                                   7452 ;src/main.c:760: pickup.active = 1;
      001FA2 21rFFr00              7453 	ld	hl, #(_pickup + 5)
      001FA5 36 01                 7454 	ld	(hl), #0x01
                                   7455 ;src/main.c:762: pickup.x = x;
      001FA7 11rFBr00              7456 	ld	de, #(_pickup + 1)
      001FAA F8 02                 7457 	ldhl	sp,	#2
      001FAC 2A                    7458 	ld	a, (hl+)
      001FAD 12                    7459 	ld	(de), a
      001FAE 13                    7460 	inc	de
                                   7461 ;src/main.c:763: pickup.y = y;
      001FAF 2A                    7462 	ld	a, (hl+)
      001FB0 12                    7463 	ld	(de), a
      001FB1 11rFDr00              7464 	ld	de, #(_pickup + 3)
      001FB4 2A                    7465 	ld	a, (hl+)
      001FB5 12                    7466 	ld	(de), a
      001FB6 13                    7467 	inc	de
      001FB7 7E                    7468 	ld	a, (hl)
      001FB8 12                    7469 	ld	(de), a
                                   7470 ;src/main.c:765: set_sprite_tile(3, pickup.tile); //0x7f
      001FB9 21r02r01              7471 	ld	hl, #(_pickup + 8)
      001FBC 4E                    7472 	ld	c, (hl)
                                   7473 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FBD 21r0Er00              7474 	ld	hl, #(_shadow_OAM + 14)
      001FC0 71                    7475 	ld	(hl), c
                                   7476 ;src/main.c:765: set_sprite_tile(3, pickup.tile); //0x7f
                                   7477 ;src/main.c:771: }
      001FC1 C9                    7478 	ret
                                   7479 ;src/main.c:773: void killEnemy(uint8_t i) {
                                   7480 ;	---------------------------------
                                   7481 ; Function killEnemy
                                   7482 ; ---------------------------------
      001FC2                       7483 _killEnemy::
      001FC2 E8 FC                 7484 	add	sp, #-4
                                   7485 ;src/main.c:774: set_sprite_tile(10+(i<<1), 0x7f);
      001FC4 F8 06                 7486 	ldhl	sp,	#6
      001FC6 7E                    7487 	ld	a, (hl)
      001FC7 87                    7488 	add	a, a
      001FC8 4F                    7489 	ld	c, a
      001FC9 C6 0A                 7490 	add	a, #0x0a
                                   7491 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FCB 6F                    7492 	ld	l, a
      001FCC 11r00r00              7493 	ld	de, #_shadow_OAM+0
                                   7494 ;	spillPairReg hl
                                   7495 ;	spillPairReg hl
      001FCF 26 00                 7496 	ld	h, #0x00
                                   7497 ;	spillPairReg hl
                                   7498 ;	spillPairReg hl
      001FD1 29                    7499 	add	hl, hl
      001FD2 29                    7500 	add	hl, hl
      001FD3 19                    7501 	add	hl, de
      001FD4 23                    7502 	inc	hl
      001FD5 23                    7503 	inc	hl
      001FD6 36 7F                 7504 	ld	(hl), #0x7f
                                   7505 ;src/main.c:775: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001FD8 79                    7506 	ld	a, c
      001FD9 C6 0B                 7507 	add	a, #0x0b
                                   7508 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FDB 6F                    7509 	ld	l, a
      001FDC 01r00r00              7510 	ld	bc, #_shadow_OAM+0
                                   7511 ;	spillPairReg hl
                                   7512 ;	spillPairReg hl
      001FDF 26 00                 7513 	ld	h, #0x00
                                   7514 ;	spillPairReg hl
                                   7515 ;	spillPairReg hl
      001FE1 29                    7516 	add	hl, hl
      001FE2 29                    7517 	add	hl, hl
      001FE3 09                    7518 	add	hl, bc
      001FE4 23                    7519 	inc	hl
      001FE5 23                    7520 	inc	hl
      001FE6 36 7F                 7521 	ld	(hl), #0x7f
                                   7522 ;src/main.c:777: spawnPickup(enemies[i].x, enemies[i].y);
      001FE8 F8 06                 7523 	ldhl	sp,	#6
      001FEA 4E                    7524 	ld	c, (hl)
      001FEB 06 00                 7525 	ld	b, #0x00
      001FED 69                    7526 	ld	l, c
      001FEE 60                    7527 	ld	h, b
      001FEF 29                    7528 	add	hl, hl
      001FF0 29                    7529 	add	hl, hl
      001FF1 29                    7530 	add	hl, hl
      001FF2 09                    7531 	add	hl, bc
      001FF3 29                    7532 	add	hl, hl
      001FF4 01r5Ar00              7533 	ld	bc,#_enemies
      001FF7 09                    7534 	add	hl,bc
                                   7535 ;	spillPairReg hl
                                   7536 ;	spillPairReg hl
      001FF8 4D                    7537 	ld	c,l
      001FF9 44                    7538 	ld	b,h
                                   7539 ;	spillPairReg hl
                                   7540 ;	spillPairReg hl
      001FFA 23                    7541 	inc	hl
      001FFB 23                    7542 	inc	hl
      001FFC 5D                    7543 	ld	e, l
      001FFD 54                    7544 	ld	d, h
      001FFE 1A                    7545 	ld	a, (de)
      001FFF F8 00                 7546 	ldhl	sp,	#0
      002001 22                    7547 	ld	(hl+), a
      002002 13                    7548 	inc	de
      002003 1A                    7549 	ld	a, (de)
      002004 77                    7550 	ld	(hl), a
      002005 59                    7551 	ld	e, c
      002006 50                    7552 	ld	d, b
      002007 1A                    7553 	ld	a, (de)
      002008 F8 02                 7554 	ldhl	sp,	#2
      00200A 22                    7555 	ld	(hl+), a
      00200B 13                    7556 	inc	de
      00200C 1A                    7557 	ld	a, (de)
      00200D 77                    7558 	ld	(hl), a
      00200E C5                    7559 	push	bc
      00200F F8 02                 7560 	ldhl	sp,	#2
      002011 2A                    7561 	ld	a, (hl+)
      002012 5F                    7562 	ld	e, a
      002013 2A                    7563 	ld	a, (hl+)
      002014 57                    7564 	ld	d, a
      002015 D5                    7565 	push	de
      002016 2A                    7566 	ld	a, (hl+)
      002017 5F                    7567 	ld	e, a
      002018 56                    7568 	ld	d, (hl)
      002019 D5                    7569 	push	de
      00201A CDr4Dr1F              7570 	call	_spawnPickup
      00201D E8 04                 7571 	add	sp, #4
      00201F C1                    7572 	pop	bc
                                   7573 ;src/main.c:779: enemies[i].alive = 0;
      002020 21 09 00              7574 	ld	hl, #0x0009
      002023 09                    7575 	add	hl, bc
      002024 36 00                 7576 	ld	(hl), #0x00
                                   7577 ;src/main.c:780: enemies[i].visible = 0;
      002026 21 0A 00              7578 	ld	hl, #0x000a
      002029 09                    7579 	add	hl, bc
      00202A 36 00                 7580 	ld	(hl), #0x00
                                   7581 ;src/main.c:781: playSound(0);
      00202C AF                    7582 	xor	a, a
      00202D F5                    7583 	push	af
      00202E 33                    7584 	inc	sp
      00202F CDr98r0F              7585 	call	_playSound
      002032 33                    7586 	inc	sp
                                   7587 ;src/main.c:782: incrementScore();
      002033 CDr55r0D              7588 	call	_incrementScore
                                   7589 ;src/main.c:783: updateScore();
      002036 CDrB7r0C              7590 	call	_updateScore
                                   7591 ;src/main.c:788: }
      002039 E8 04                 7592 	add	sp, #4
      00203B C9                    7593 	ret
                                   7594 ;src/main.c:790: void checkCollision() {
                                   7595 ;	---------------------------------
                                   7596 ; Function checkCollision
                                   7597 ; ---------------------------------
      00203C                       7598 _checkCollision::
      00203C E8 E7                 7599 	add	sp, #-25
                                   7600 ;src/main.c:797: struct Enemy *eptr = enemies + enemyCollisionCount;
      00203E 21rA5r00              7601 	ld	hl, #_enemyCollisionCount
      002041 4E                    7602 	ld	c, (hl)
      002042 06 00                 7603 	ld	b, #0x00
      002044 69                    7604 	ld	l, c
      002045 60                    7605 	ld	h, b
      002046 29                    7606 	add	hl, hl
      002047 29                    7607 	add	hl, hl
      002048 29                    7608 	add	hl, hl
      002049 09                    7609 	add	hl, bc
      00204A 29                    7610 	add	hl, hl
      00204B 01r5Ar00              7611 	ld	bc,#_enemies
      00204E 09                    7612 	add	hl,bc
      00204F 4D                    7613 	ld	c, l
      002050 7C                    7614 	ld	a, h
      002051 F8 00                 7615 	ldhl	sp,	#0
      002053 71                    7616 	ld	(hl), c
      002054 23                    7617 	inc	hl
      002055 77                    7618 	ld	(hl), a
                                   7619 ;src/main.c:798: uint8_t i = enemyCollisionCount;
      002056 FArA5r00              7620 	ld	a, (#_enemyCollisionCount)
      002059 F8 02                 7621 	ldhl	sp,	#2
      00205B 77                    7622 	ld	(hl), a
                                   7623 ;src/main.c:800: if (eptr->visible && eptr->alive) {
      00205C D1                    7624 	pop	de
      00205D D5                    7625 	push	de
      00205E 21 0A 00              7626 	ld	hl, #0x000a
      002061 19                    7627 	add	hl, de
      002062 4D                    7628 	ld	c, l
      002063 44                    7629 	ld	b, h
      002064 0A                    7630 	ld	a, (bc)
      002065 B7                    7631 	or	a, a
      002066 CArF6r24              7632 	jp	Z, 00137$
      002069 D1                    7633 	pop	de
      00206A D5                    7634 	push	de
      00206B 21 09 00              7635 	ld	hl, #0x0009
      00206E 19                    7636 	add	hl, de
      00206F 4D                    7637 	ld	c, l
      002070 44                    7638 	ld	b, h
      002071 0A                    7639 	ld	a, (bc)
      002072 B7                    7640 	or	a, a
      002073 CArF6r24              7641 	jp	Z, 00137$
                                   7642 ;src/main.c:802: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      002076 D1                    7643 	pop	de
      002077 D5                    7644 	push	de
      002078 21 08 00              7645 	ld	hl, #0x0008
      00207B 19                    7646 	add	hl, de
      00207C 4D                    7647 	ld	c, l
      00207D 44                    7648 	ld	b, h
      00207E 0A                    7649 	ld	a, (bc)
      00207F 4F                    7650 	ld	c, a
      002080 3D                    7651 	dec	a
      002081 3E 01                 7652 	ld	a, #0x01
      002083 28 01                 7653 	jr	Z, 00343$
      002085 AF                    7654 	xor	a, a
      002086                       7655 00343$:
      002086 F8 15                 7656 	ldhl	sp,	#21
      002088 77                    7657 	ld	(hl), a
      002089 FAr9Br00              7658 	ld	a, (#_playerDrawX)
      00208C F8 16                 7659 	ldhl	sp,	#22
      00208E 77                    7660 	ld	(hl), a
                                   7661 ;src/main.c:803: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      00208F 79                    7662 	ld	a, c
      002090 D6 02                 7663 	sub	a, #0x02
      002092 3E 01                 7664 	ld	a, #0x01
      002094 28 01                 7665 	jr	Z, 00345$
      002096 AF                    7666 	xor	a, a
      002097                       7667 00345$:
      002097 F8 17                 7668 	ldhl	sp,	#23
                                   7669 ;src/main.c:802: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      002099 32                    7670 	ld	(hl-), a
      00209A 2B                    7671 	dec	hl
      00209B 7E                    7672 	ld	a, (hl)
      00209C B7                    7673 	or	a, a
      00209D 28 2E                 7674 	jr	Z, 00110$
      00209F D1                    7675 	pop	de
      0020A0 D5                    7676 	push	de
      0020A1 1A                    7677 	ld	a, (de)
      0020A2 F8 18                 7678 	ldhl	sp,	#24
      0020A4 77                    7679 	ld	(hl), a
      0020A5 3A                    7680 	ld	a, (hl-)
      0020A6 2B                    7681 	dec	hl
      0020A7 96                    7682 	sub	a, (hl)
      0020A8 23                    7683 	inc	hl
      0020A9 23                    7684 	inc	hl
      0020AA 77                    7685 	ld	(hl), a
                                   7686 ;src/main.c:359: if (value >= 0) return value;
      0020AB CB 7E                 7687 	bit	7, (hl)
      0020AD 28 05                 7688 	jr	Z, 00145$
                                   7689 ;src/main.c:360: else return - value;
      0020AF AF                    7690 	xor	a, a
      0020B0 F8 18                 7691 	ldhl	sp,	#24
      0020B2 96                    7692 	sub	a, (hl)
      0020B3 77                    7693 	ld	(hl), a
                                   7694 ;src/main.c:802: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      0020B4                       7695 00145$:
      0020B4 F8 18                 7696 	ldhl	sp,	#24
      0020B6 5E                    7697 	ld	e, (hl)
      0020B7 3E 08                 7698 	ld	a,#0x08
      0020B9 57                    7699 	ld	d,a
      0020BA 96                    7700 	sub	a, (hl)
      0020BB CB 7B                 7701 	bit	7, e
      0020BD 28 07                 7702 	jr	Z, 00346$
      0020BF CB 7A                 7703 	bit	7, d
      0020C1 20 08                 7704 	jr	NZ, 00347$
      0020C3 BF                    7705 	cp	a, a
      0020C4 18 05                 7706 	jr	00347$
      0020C6                       7707 00346$:
      0020C6 CB 7A                 7708 	bit	7, d
      0020C8 28 01                 7709 	jr	Z, 00347$
      0020CA 37                    7710 	scf
      0020CB                       7711 00347$:
      0020CB 30 33                 7712 	jr	NC, 00106$
      0020CD                       7713 00110$:
                                   7714 ;src/main.c:803: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0020CD F8 17                 7715 	ldhl	sp,	#23
      0020CF 7E                    7716 	ld	a, (hl)
      0020D0 B7                    7717 	or	a, a
      0020D1 CArB4r21              7718 	jp	Z, 00107$
      0020D4 2B                    7719 	dec	hl
      0020D5 D1                    7720 	pop	de
      0020D6 D5                    7721 	push	de
      0020D7 1A                    7722 	ld	a, (de)
      0020D8 96                    7723 	sub	a, (hl)
      0020D9 23                    7724 	inc	hl
      0020DA 23                    7725 	inc	hl
      0020DB 77                    7726 	ld	(hl), a
                                   7727 ;src/main.c:359: if (value >= 0) return value;
      0020DC CB 7E                 7728 	bit	7, (hl)
      0020DE 28 06                 7729 	jr	Z, 00149$
                                   7730 ;src/main.c:360: else return - value;
      0020E0 AF                    7731 	xor	a, a
      0020E1 F8 18                 7732 	ldhl	sp,	#24
      0020E3 96                    7733 	sub	a, (hl)
      0020E4 4F                    7734 	ld	c, a
      0020E5 71                    7735 	ld	(hl), c
                                   7736 ;src/main.c:803: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0020E6                       7737 00149$:
      0020E6 F8 18                 7738 	ldhl	sp,	#24
      0020E8 5E                    7739 	ld	e, (hl)
      0020E9 3E 10                 7740 	ld	a,#0x10
      0020EB 57                    7741 	ld	d,a
      0020EC 96                    7742 	sub	a, (hl)
      0020ED CB 7B                 7743 	bit	7, e
      0020EF 28 07                 7744 	jr	Z, 00348$
      0020F1 CB 7A                 7745 	bit	7, d
      0020F3 20 08                 7746 	jr	NZ, 00349$
      0020F5 BF                    7747 	cp	a, a
      0020F6 18 05                 7748 	jr	00349$
      0020F8                       7749 00348$:
      0020F8 CB 7A                 7750 	bit	7, d
      0020FA 28 01                 7751 	jr	Z, 00349$
      0020FC 37                    7752 	scf
      0020FD                       7753 00349$:
      0020FD DArB4r21              7754 	jp	C, 00107$
      002100                       7755 00106$:
                                   7756 ;src/main.c:804: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      002100 C1                    7757 	pop	bc
      002101 C5                    7758 	push	bc
      002102 03                    7759 	inc	bc
      002103 03                    7760 	inc	bc
      002104 FAr9Cr00              7761 	ld	a, (#_playerDrawY)
      002107 F8 18                 7762 	ldhl	sp,	#24
      002109 77                    7763 	ld	(hl), a
      00210A F8 15                 7764 	ldhl	sp,	#21
      00210C 7E                    7765 	ld	a, (hl)
      00210D B7                    7766 	or	a, a
      00210E 28 23                 7767 	jr	Z, 00105$
      002110 0A                    7768 	ld	a, (bc)
      002111 F8 18                 7769 	ldhl	sp,	#24
      002113 96                    7770 	sub	a, (hl)
      002114 6F                    7771 	ld	l, a
                                   7772 ;	spillPairReg hl
                                   7773 ;	spillPairReg hl
                                   7774 ;src/main.c:359: if (value >= 0) return value;
      002115 CB 7D                 7775 	bit	7, l
      002117 28 03                 7776 	jr	Z, 00153$
                                   7777 ;src/main.c:360: else return - value;
      002119 AF                    7778 	xor	a, a
      00211A 95                    7779 	sub	a, l
      00211B 6F                    7780 	ld	l, a
                                   7781 ;	spillPairReg hl
                                   7782 ;	spillPairReg hl
                                   7783 ;src/main.c:804: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      00211C                       7784 00153$:
      00211C 5D                    7785 	ld	e, l
      00211D 3E 08                 7786 	ld	a,#0x08
      00211F 57                    7787 	ld	d,a
      002120 95                    7788 	sub	a, l
      002121 CB 7B                 7789 	bit	7, e
      002123 28 07                 7790 	jr	Z, 00350$
      002125 CB 7A                 7791 	bit	7, d
      002127 20 08                 7792 	jr	NZ, 00351$
      002129 BF                    7793 	cp	a, a
      00212A 18 05                 7794 	jr	00351$
      00212C                       7795 00350$:
      00212C CB 7A                 7796 	bit	7, d
      00212E 28 01                 7797 	jr	Z, 00351$
      002130 37                    7798 	scf
      002131                       7799 00351$:
      002131 30 28                 7800 	jr	NC, 00101$
      002133                       7801 00105$:
                                   7802 ;src/main.c:805: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002133 F8 17                 7803 	ldhl	sp,	#23
      002135 7E                    7804 	ld	a, (hl)
      002136 B7                    7805 	or	a, a
      002137 28 7B                 7806 	jr	Z, 00107$
      002139 23                    7807 	inc	hl
      00213A 0A                    7808 	ld	a, (bc)
      00213B 96                    7809 	sub	a, (hl)
      00213C 4F                    7810 	ld	c, a
                                   7811 ;src/main.c:359: if (value >= 0) return value;
      00213D CB 79                 7812 	bit	7, c
      00213F 28 03                 7813 	jr	Z, 00157$
                                   7814 ;src/main.c:360: else return - value;
      002141 AF                    7815 	xor	a, a
      002142 91                    7816 	sub	a, c
      002143 4F                    7817 	ld	c, a
                                   7818 ;src/main.c:805: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002144                       7819 00157$:
      002144 59                    7820 	ld	e, c
      002145 3E 10                 7821 	ld	a,#0x10
      002147 57                    7822 	ld	d,a
      002148 91                    7823 	sub	a, c
      002149 CB 7B                 7824 	bit	7, e
      00214B 28 07                 7825 	jr	Z, 00352$
      00214D CB 7A                 7826 	bit	7, d
      00214F 20 08                 7827 	jr	NZ, 00353$
      002151 BF                    7828 	cp	a, a
      002152 18 05                 7829 	jr	00353$
      002154                       7830 00352$:
      002154 CB 7A                 7831 	bit	7, d
      002156 28 01                 7832 	jr	Z, 00353$
      002158 37                    7833 	scf
      002159                       7834 00353$:
      002159 38 59                 7835 	jr	C, 00107$
      00215B                       7836 00101$:
                                   7837 ;src/main.c:807: set_sprite_tile(10+(i<<1), 0x7f);
      00215B F8 02                 7838 	ldhl	sp,	#2
      00215D 7E                    7839 	ld	a, (hl)
      00215E 87                    7840 	add	a, a
      00215F C6 0A                 7841 	add	a, #0x0a
                                   7842 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002161 6F                    7843 	ld	l, a
      002162 01r00r00              7844 	ld	bc, #_shadow_OAM+0
                                   7845 ;	spillPairReg hl
                                   7846 ;	spillPairReg hl
      002165 26 00                 7847 	ld	h, #0x00
                                   7848 ;	spillPairReg hl
                                   7849 ;	spillPairReg hl
      002167 29                    7850 	add	hl, hl
      002168 29                    7851 	add	hl, hl
      002169 09                    7852 	add	hl, bc
      00216A 23                    7853 	inc	hl
      00216B 23                    7854 	inc	hl
      00216C 36 7F                 7855 	ld	(hl), #0x7f
                                   7856 ;src/main.c:808: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00216E F8 02                 7857 	ldhl	sp,	#2
      002170 7E                    7858 	ld	a, (hl)
      002171 87                    7859 	add	a, a
      002172 C6 0B                 7860 	add	a, #0x0b
                                   7861 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002174 6F                    7862 	ld	l, a
      002175 01r00r00              7863 	ld	bc, #_shadow_OAM+0
                                   7864 ;	spillPairReg hl
                                   7865 ;	spillPairReg hl
      002178 26 00                 7866 	ld	h, #0x00
                                   7867 ;	spillPairReg hl
                                   7868 ;	spillPairReg hl
      00217A 29                    7869 	add	hl, hl
      00217B 29                    7870 	add	hl, hl
      00217C 09                    7871 	add	hl, bc
      00217D 23                    7872 	inc	hl
      00217E 23                    7873 	inc	hl
      00217F 36 7F                 7874 	ld	(hl), #0x7f
                                   7875 ;src/main.c:809: eptr->alive = 0;
      002181 D1                    7876 	pop	de
      002182 D5                    7877 	push	de
      002183 21 09 00              7878 	ld	hl, #0x0009
      002186 19                    7879 	add	hl, de
      002187 4D                    7880 	ld	c, l
      002188 44                    7881 	ld	b, h
      002189 AF                    7882 	xor	a, a
      00218A 02                    7883 	ld	(bc), a
                                   7884 ;src/main.c:810: eptr->visible = 0;
      00218B D1                    7885 	pop	de
      00218C D5                    7886 	push	de
      00218D 21 0A 00              7887 	ld	hl, #0x000a
      002190 19                    7888 	add	hl, de
      002191 4D                    7889 	ld	c, l
      002192 44                    7890 	ld	b, h
      002193 AF                    7891 	xor	a, a
      002194 02                    7892 	ld	(bc), a
                                   7893 ;src/main.c:811: takeDamage(eptr->damage);
      002195 D1                    7894 	pop	de
      002196 D5                    7895 	push	de
      002197 21 0B 00              7896 	ld	hl, #0x000b
      00219A 19                    7897 	add	hl, de
      00219B 4D                    7898 	ld	c, l
      00219C 44                    7899 	ld	b, h
      00219D 0A                    7900 	ld	a, (bc)
      00219E 06 00                 7901 	ld	b, #0x00
      0021A0 4F                    7902 	ld	c, a
      0021A1 C5                    7903 	push	bc
      0021A2 CDr09r1F              7904 	call	_takeDamage
      0021A5 E1                    7905 	pop	hl
                                   7906 ;src/main.c:812: initEnemies(0);
      0021A6 AF                    7907 	xor	a, a
      0021A7 F5                    7908 	push	af
      0021A8 33                    7909 	inc	sp
      0021A9 CDrFBr0F              7910 	call	_initEnemies
      0021AC 33                    7911 	inc	sp
                                   7912 ;src/main.c:813: playSound(0);
      0021AD AF                    7913 	xor	a, a
      0021AE F5                    7914 	push	af
      0021AF 33                    7915 	inc	sp
      0021B0 CDr98r0F              7916 	call	_playSound
      0021B3 33                    7917 	inc	sp
      0021B4                       7918 00107$:
                                   7919 ;src/main.c:819: struct Projectile *pptr = projectiles;
      0021B4 F8 15                 7920 	ldhl	sp,	#21
      0021B6 3ErB4                 7921 	ld	a, #<(_projectiles)
      0021B8 22                    7922 	ld	(hl+), a
      0021B9 36s00                 7923 	ld	(hl), #>(_projectiles)
                                   7924 ;src/main.c:821: while (j < PROJECTILECOUNT) {
      0021BB D1                    7925 	pop	de
      0021BC D5                    7926 	push	de
      0021BD 21 02 00              7927 	ld	hl, #0x0002
      0021C0 19                    7928 	add	hl, de
      0021C1 E5                    7929 	push	hl
      0021C2 7D                    7930 	ld	a, l
      0021C3 F8 05                 7931 	ldhl	sp,	#5
      0021C5 77                    7932 	ld	(hl), a
      0021C6 E1                    7933 	pop	hl
      0021C7 7C                    7934 	ld	a, h
      0021C8 F8 04                 7935 	ldhl	sp,	#4
      0021CA 32                    7936 	ld	(hl-), a
      0021CB 2A                    7937 	ld	a, (hl+)
      0021CC 23                    7938 	inc	hl
      0021CD 32                    7939 	ld	(hl-), a
      0021CE 2A                    7940 	ld	a, (hl+)
      0021CF 23                    7941 	inc	hl
      0021D0 77                    7942 	ld	(hl), a
      0021D1 D1                    7943 	pop	de
      0021D2 D5                    7944 	push	de
      0021D3 21 08 00              7945 	ld	hl, #0x0008
      0021D6 19                    7946 	add	hl, de
      0021D7 E5                    7947 	push	hl
      0021D8 7D                    7948 	ld	a, l
      0021D9 F8 09                 7949 	ldhl	sp,	#9
      0021DB 77                    7950 	ld	(hl), a
      0021DC E1                    7951 	pop	hl
      0021DD 7C                    7952 	ld	a, h
      0021DE F8 08                 7953 	ldhl	sp,	#8
      0021E0 77                    7954 	ld	(hl), a
      0021E1 F8 03                 7955 	ldhl	sp,	#3
      0021E3 7E                    7956 	ld	a, (hl)
      0021E4 F8 09                 7957 	ldhl	sp,	#9
      0021E6 77                    7958 	ld	(hl), a
      0021E7 F8 04                 7959 	ldhl	sp,	#4
      0021E9 7E                    7960 	ld	a, (hl)
      0021EA F8 0A                 7961 	ldhl	sp,	#10
      0021EC 77                    7962 	ld	(hl), a
      0021ED F8 17                 7963 	ldhl	sp,	#23
      0021EF 36 00                 7964 	ld	(hl), #0x00
      0021F1                       7965 00133$:
      0021F1 21r9Fr0B              7966 	ld	hl, #_PROJECTILECOUNT
      0021F4 4E                    7967 	ld	c, (hl)
      0021F5 F8 17                 7968 	ldhl	sp,	#23
      0021F7 7E                    7969 	ld	a, (hl)
      0021F8 91                    7970 	sub	a, c
      0021F9 D2rF6r24              7971 	jp	NC, 00137$
                                   7972 ;src/main.c:822: if (pptr->active) {
      0021FC 2B                    7973 	dec	hl
      0021FD 2B                    7974 	dec	hl
      0021FE 2A                    7975 	ld	a, (hl+)
      0021FF 5F                    7976 	ld	e, a
      002200 56                    7977 	ld	d, (hl)
      002201 21 0A 00              7978 	ld	hl, #0x000a
      002204 19                    7979 	add	hl, de
      002205 4D                    7980 	ld	c, l
      002206 44                    7981 	ld	b, h
      002207 0A                    7982 	ld	a, (bc)
      002208 B7                    7983 	or	a, a
      002209 CArDDr24              7984 	jp	Z, 00132$
                                   7985 ;src/main.c:826: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      00220C F8 07                 7986 	ldhl	sp,#7
      00220E 2A                    7987 	ld	a, (hl+)
      00220F 5F                    7988 	ld	e, a
      002210 56                    7989 	ld	d, (hl)
      002211 1A                    7990 	ld	a, (de)
      002212 4F                    7991 	ld	c, a
      002213 3D                    7992 	dec	a
      002214 3E 01                 7993 	ld	a, #0x01
      002216 28 01                 7994 	jr	Z, 00355$
      002218 AF                    7995 	xor	a, a
      002219                       7996 00355$:
      002219 F8 13                 7997 	ldhl	sp,	#19
      00221B 77                    7998 	ld	(hl), a
                                   7999 ;src/main.c:827: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      00221C 79                    8000 	ld	a, c
      00221D D6 02                 8001 	sub	a, #0x02
      00221F 3E 01                 8002 	ld	a, #0x01
      002221 28 01                 8003 	jr	Z, 00357$
      002223 AF                    8004 	xor	a, a
      002224                       8005 00357$:
      002224 F8 14                 8006 	ldhl	sp,	#20
                                   8007 ;src/main.c:826: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002226 32                    8008 	ld	(hl-), a
      002227 7E                    8009 	ld	a, (hl)
      002228 B7                    8010 	or	a, a
      002229 28 2C                 8011 	jr	Z, 00130$
      00222B D1                    8012 	pop	de
      00222C D5                    8013 	push	de
      00222D 1A                    8014 	ld	a, (de)
      00222E F8 15                 8015 	ldhl	sp,#21
      002230 5E                    8016 	ld	e, (hl)
      002231 23                    8017 	inc	hl
      002232 56                    8018 	ld	d, (hl)
      002233 F5                    8019 	push	af
      002234 1A                    8020 	ld	a, (de)
      002235 4F                    8021 	ld	c, a
      002236 F1                    8022 	pop	af
      002237 91                    8023 	sub	a, c
      002238 4F                    8024 	ld	c, a
                                   8025 ;src/main.c:359: if (value >= 0) return value;
      002239 CB 79                 8026 	bit	7, c
      00223B 28 03                 8027 	jr	Z, 00163$
                                   8028 ;src/main.c:360: else return - value;
      00223D AF                    8029 	xor	a, a
      00223E 91                    8030 	sub	a, c
      00223F 4F                    8031 	ld	c, a
                                   8032 ;src/main.c:826: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002240                       8033 00163$:
      002240 59                    8034 	ld	e, c
      002241 3E 08                 8035 	ld	a,#0x08
      002243 57                    8036 	ld	d,a
      002244 91                    8037 	sub	a, c
      002245 CB 7B                 8038 	bit	7, e
      002247 28 07                 8039 	jr	Z, 00358$
      002249 CB 7A                 8040 	bit	7, d
      00224B 20 08                 8041 	jr	NZ, 00359$
      00224D BF                    8042 	cp	a, a
      00224E 18 05                 8043 	jr	00359$
      002250                       8044 00358$:
      002250 CB 7A                 8045 	bit	7, d
      002252 28 01                 8046 	jr	Z, 00359$
      002254 37                    8047 	scf
      002255                       8048 00359$:
      002255 30 3A                 8049 	jr	NC, 00126$
      002257                       8050 00130$:
                                   8051 ;src/main.c:827: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002257 F8 14                 8052 	ldhl	sp,	#20
      002259 7E                    8053 	ld	a, (hl)
      00225A B7                    8054 	or	a, a
      00225B CArDDr24              8055 	jp	Z, 00132$
      00225E 23                    8056 	inc	hl
      00225F D1                    8057 	pop	de
      002260 D5                    8058 	push	de
      002261 1A                    8059 	ld	a, (de)
      002262 5E                    8060 	ld	e, (hl)
      002263 23                    8061 	inc	hl
      002264 56                    8062 	ld	d, (hl)
      002265 23                    8063 	inc	hl
      002266 23                    8064 	inc	hl
      002267 F5                    8065 	push	af
      002268 1A                    8066 	ld	a, (de)
      002269 4F                    8067 	ld	c, a
      00226A F1                    8068 	pop	af
      00226B 91                    8069 	sub	a, c
      00226C 77                    8070 	ld	(hl), a
                                   8071 ;src/main.c:359: if (value >= 0) return value;
      00226D CB 7E                 8072 	bit	7, (hl)
      00226F 20 03                 8073 	jr	NZ, 00165$
      002271 4E                    8074 	ld	c, (hl)
      002272 18 05                 8075 	jr	00167$
      002274                       8076 00165$:
                                   8077 ;src/main.c:360: else return - value;
      002274 AF                    8078 	xor	a, a
      002275 F8 18                 8079 	ldhl	sp,	#24
      002277 96                    8080 	sub	a, (hl)
      002278 4F                    8081 	ld	c, a
                                   8082 ;src/main.c:827: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002279                       8083 00167$:
      002279 59                    8084 	ld	e, c
      00227A 3E 10                 8085 	ld	a,#0x10
      00227C 57                    8086 	ld	d,a
      00227D 91                    8087 	sub	a, c
      00227E CB 7B                 8088 	bit	7, e
      002280 28 07                 8089 	jr	Z, 00360$
      002282 CB 7A                 8090 	bit	7, d
      002284 20 08                 8091 	jr	NZ, 00361$
      002286 BF                    8092 	cp	a, a
      002287 18 05                 8093 	jr	00361$
      002289                       8094 00360$:
      002289 CB 7A                 8095 	bit	7, d
      00228B 28 01                 8096 	jr	Z, 00361$
      00228D 37                    8097 	scf
      00228E                       8098 00361$:
      00228E DArDDr24              8099 	jp	C, 00132$
      002291                       8100 00126$:
                                   8101 ;src/main.c:828: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002291 F8 15                 8102 	ldhl	sp,	#21
      002293 2A                    8103 	ld	a, (hl+)
      002294 4F                    8104 	ld	c, a
      002295 46                    8105 	ld	b, (hl)
      002296 03                    8106 	inc	bc
      002297 03                    8107 	inc	bc
      002298 F8 13                 8108 	ldhl	sp,	#19
      00229A 7E                    8109 	ld	a, (hl)
      00229B B7                    8110 	or	a, a
      00229C 28 2A                 8111 	jr	Z, 00125$
      00229E F8 09                 8112 	ldhl	sp,#9
      0022A0 2A                    8113 	ld	a, (hl+)
      0022A1 5F                    8114 	ld	e, a
      0022A2 56                    8115 	ld	d, (hl)
      0022A3 1A                    8116 	ld	a, (de)
      0022A4 F5                    8117 	push	af
      0022A5 0A                    8118 	ld	a, (bc)
      0022A6 5F                    8119 	ld	e, a
      0022A7 F1                    8120 	pop	af
      0022A8 93                    8121 	sub	a, e
      0022A9 6F                    8122 	ld	l, a
                                   8123 ;	spillPairReg hl
                                   8124 ;	spillPairReg hl
                                   8125 ;src/main.c:359: if (value >= 0) return value;
      0022AA CB 7D                 8126 	bit	7, l
      0022AC 28 03                 8127 	jr	Z, 00171$
                                   8128 ;src/main.c:360: else return - value;
      0022AE AF                    8129 	xor	a, a
      0022AF 95                    8130 	sub	a, l
      0022B0 6F                    8131 	ld	l, a
                                   8132 ;	spillPairReg hl
                                   8133 ;	spillPairReg hl
                                   8134 ;src/main.c:828: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      0022B1                       8135 00171$:
      0022B1 5D                    8136 	ld	e, l
      0022B2 3E 08                 8137 	ld	a,#0x08
      0022B4 57                    8138 	ld	d,a
      0022B5 95                    8139 	sub	a, l
      0022B6 CB 7B                 8140 	bit	7, e
      0022B8 28 07                 8141 	jr	Z, 00362$
      0022BA CB 7A                 8142 	bit	7, d
      0022BC 20 08                 8143 	jr	NZ, 00363$
      0022BE BF                    8144 	cp	a, a
      0022BF 18 05                 8145 	jr	00363$
      0022C1                       8146 00362$:
      0022C1 CB 7A                 8147 	bit	7, d
      0022C3 28 01                 8148 	jr	Z, 00363$
      0022C5 37                    8149 	scf
      0022C6                       8150 00363$:
      0022C6 30 32                 8151 	jr	NC, 00121$
      0022C8                       8152 00125$:
                                   8153 ;src/main.c:829: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      0022C8 F8 14                 8154 	ldhl	sp,	#20
      0022CA 7E                    8155 	ld	a, (hl)
      0022CB B7                    8156 	or	a, a
      0022CC CArDDr24              8157 	jp	Z, 00132$
      0022CF F8 03                 8158 	ldhl	sp,#3
      0022D1 2A                    8159 	ld	a, (hl+)
      0022D2 5F                    8160 	ld	e, a
      0022D3 56                    8161 	ld	d, (hl)
      0022D4 1A                    8162 	ld	a, (de)
      0022D5 F5                    8163 	push	af
      0022D6 0A                    8164 	ld	a, (bc)
      0022D7 4F                    8165 	ld	c, a
      0022D8 F1                    8166 	pop	af
      0022D9 91                    8167 	sub	a, c
      0022DA 4F                    8168 	ld	c, a
                                   8169 ;src/main.c:359: if (value >= 0) return value;
      0022DB CB 79                 8170 	bit	7, c
      0022DD 28 03                 8171 	jr	Z, 00175$
                                   8172 ;src/main.c:360: else return - value;
      0022DF AF                    8173 	xor	a, a
      0022E0 91                    8174 	sub	a, c
      0022E1 4F                    8175 	ld	c, a
                                   8176 ;src/main.c:829: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      0022E2                       8177 00175$:
      0022E2 59                    8178 	ld	e, c
      0022E3 3E 10                 8179 	ld	a,#0x10
      0022E5 57                    8180 	ld	d,a
      0022E6 91                    8181 	sub	a, c
      0022E7 CB 7B                 8182 	bit	7, e
      0022E9 28 07                 8183 	jr	Z, 00364$
      0022EB CB 7A                 8184 	bit	7, d
      0022ED 20 08                 8185 	jr	NZ, 00365$
      0022EF BF                    8186 	cp	a, a
      0022F0 18 05                 8187 	jr	00365$
      0022F2                       8188 00364$:
      0022F2 CB 7A                 8189 	bit	7, d
      0022F4 28 01                 8190 	jr	Z, 00365$
      0022F6 37                    8191 	scf
      0022F7                       8192 00365$:
      0022F7 DArDDr24              8193 	jp	C, 00132$
      0022FA                       8194 00121$:
                                   8195 ;src/main.c:831: set_sprite_tile(30+j, 0x7f);
      0022FA F8 17                 8196 	ldhl	sp,	#23
      0022FC 7E                    8197 	ld	a, (hl)
      0022FD C6 1E                 8198 	add	a, #0x1e
                                   8199 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022FF 6F                    8200 	ld	l, a
      002300 01r00r00              8201 	ld	bc, #_shadow_OAM+0
                                   8202 ;	spillPairReg hl
                                   8203 ;	spillPairReg hl
      002303 26 00                 8204 	ld	h, #0x00
                                   8205 ;	spillPairReg hl
                                   8206 ;	spillPairReg hl
      002305 29                    8207 	add	hl, hl
      002306 29                    8208 	add	hl, hl
      002307 09                    8209 	add	hl, bc
      002308 23                    8210 	inc	hl
      002309 23                    8211 	inc	hl
      00230A 36 7F                 8212 	ld	(hl), #0x7f
                                   8213 ;src/main.c:832: pptr->active = 0;
      00230C F8 15                 8214 	ldhl	sp,#21
      00230E 2A                    8215 	ld	a, (hl+)
      00230F 5F                    8216 	ld	e, a
      002310 56                    8217 	ld	d, (hl)
      002311 21 0A 00              8218 	ld	hl, #0x000a
      002314 19                    8219 	add	hl, de
      002315 4D                    8220 	ld	c, l
      002316 44                    8221 	ld	b, h
      002317 AF                    8222 	xor	a, a
      002318 02                    8223 	ld	(bc), a
                                   8224 ;src/main.c:834: if (pptr->type == 0x2c) { //missile
      002319 F8 15                 8225 	ldhl	sp,#21
      00231B 2A                    8226 	ld	a, (hl+)
      00231C 5F                    8227 	ld	e, a
      00231D 56                    8228 	ld	d, (hl)
      00231E 21 0C 00              8229 	ld	hl, #0x000c
      002321 19                    8230 	add	hl, de
      002322 4D                    8231 	ld	c, l
      002323 44                    8232 	ld	b, h
      002324 0A                    8233 	ld	a, (bc)
      002325 4F                    8234 	ld	c, a
                                   8235 ;src/main.c:839: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002326 F8 15                 8236 	ldhl	sp,#21
      002328 2A                    8237 	ld	a, (hl+)
      002329 5F                    8238 	ld	e, a
      00232A 56                    8239 	ld	d, (hl)
      00232B 21 08 00              8240 	ld	hl, #0x0008
      00232E 19                    8241 	add	hl, de
      00232F E5                    8242 	push	hl
      002330 7D                    8243 	ld	a, l
      002331 F8 15                 8244 	ldhl	sp,	#21
      002333 77                    8245 	ld	(hl), a
      002334 E1                    8246 	pop	hl
      002335 7C                    8247 	ld	a, h
      002336 F8 14                 8248 	ldhl	sp,	#20
      002338 77                    8249 	ld	(hl), a
                                   8250 ;src/main.c:834: if (pptr->type == 0x2c) { //missile
      002339 79                    8251 	ld	a, c
      00233A D6 2C                 8252 	sub	a, #0x2c
      00233C C2r87r24              8253 	jp	NZ,00119$
                                   8254 ;src/main.c:839: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      00233F 2B                    8255 	dec	hl
      002340 7E                    8256 	ld	a, (hl)
      002341 F8 0B                 8257 	ldhl	sp,	#11
      002343 77                    8258 	ld	(hl), a
      002344 F8 14                 8259 	ldhl	sp,	#20
      002346 7E                    8260 	ld	a, (hl)
      002347 F8 0C                 8261 	ldhl	sp,	#12
      002349 77                    8262 	ld	(hl), a
      00234A F8 18                 8263 	ldhl	sp,	#24
      00234C 36 00                 8264 	ld	(hl), #0x00
      00234E                       8265 00186$:
      00234E 21r8Er0B              8266 	ld	hl, #_ENEMYCOUNT
      002351 4E                    8267 	ld	c, (hl)
      002352 F8 18                 8268 	ldhl	sp,	#24
      002354 7E                    8269 	ld	a, (hl)
      002355 91                    8270 	sub	a, c
      002356 D2rD6r24              8271 	jp	NC, 00120$
                                   8272 ;src/main.c:840: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      002359 D1                    8273 	pop	de
      00235A D5                    8274 	push	de
      00235B 1A                    8275 	ld	a, (de)
      00235C F8 13                 8276 	ldhl	sp,	#19
      00235E 22                    8277 	ld	(hl+), a
      00235F 13                    8278 	inc	de
      002360 1A                    8279 	ld	a, (de)
      002361 77                    8280 	ld	(hl), a
      002362 F8 18                 8281 	ldhl	sp,	#24
      002364 4E                    8282 	ld	c, (hl)
      002365 06 00                 8283 	ld	b, #0x00
      002367 69                    8284 	ld	l, c
      002368 60                    8285 	ld	h, b
      002369 29                    8286 	add	hl, hl
      00236A 29                    8287 	add	hl, hl
      00236B 29                    8288 	add	hl, hl
      00236C 09                    8289 	add	hl, bc
      00236D 29                    8290 	add	hl, hl
      00236E 01r5Ar00              8291 	ld	bc,#_enemies
      002371 09                    8292 	add	hl,bc
      002372 E5                    8293 	push	hl
      002373 7D                    8294 	ld	a, l
      002374 F8 0F                 8295 	ldhl	sp,	#15
      002376 77                    8296 	ld	(hl), a
      002377 E1                    8297 	pop	hl
      002378 7C                    8298 	ld	a, h
      002379 F8 0E                 8299 	ldhl	sp,	#14
      00237B 32                    8300 	ld	(hl-), a
      00237C 2A                    8301 	ld	a, (hl+)
      00237D 5F                    8302 	ld	e, a
      00237E 56                    8303 	ld	d, (hl)
      00237F 1A                    8304 	ld	a, (de)
      002380 4F                    8305 	ld	c, a
      002381 13                    8306 	inc	de
      002382 1A                    8307 	ld	a, (de)
      002383 47                    8308 	ld	b, a
      002384 F8 13                 8309 	ldhl	sp,#19
      002386 2A                    8310 	ld	a, (hl+)
      002387 5F                    8311 	ld	e, a
      002388 56                    8312 	ld	d, (hl)
      002389 7B                    8313 	ld	a, e
      00238A 91                    8314 	sub	a, c
      00238B 5F                    8315 	ld	e, a
      00238C 7A                    8316 	ld	a, d
      00238D 98                    8317 	sbc	a, b
      00238E 4B                    8318 	ld	c, e
      00238F 47                    8319 	ld	b, a
                                   8320 ;	spillPairReg hl
                                   8321 ;	spillPairReg hl
      002390 60                    8322 	ld	h, b
                                   8323 ;	spillPairReg hl
                                   8324 ;	spillPairReg hl
      002391 CB 7C                 8325 	bit	7, h
      002393 28 06                 8326 	jr	Z, 00180$
      002395 AF                    8327 	xor	a, a
      002396 91                    8328 	sub	a, c
      002397 4F                    8329 	ld	c, a
      002398 9F                    8330 	sbc	a, a
      002399 90                    8331 	sub	a, b
      00239A 47                    8332 	ld	b, a
      00239B                       8333 00180$:
      00239B F8 05                 8334 	ldhl	sp,#5
      00239D 2A                    8335 	ld	a, (hl+)
      00239E 5F                    8336 	ld	e, a
      00239F 56                    8337 	ld	d, (hl)
      0023A0 1A                    8338 	ld	a, (de)
      0023A1 F8 0F                 8339 	ldhl	sp,	#15
      0023A3 22                    8340 	ld	(hl+), a
      0023A4 13                    8341 	inc	de
      0023A5 1A                    8342 	ld	a, (de)
      0023A6 77                    8343 	ld	(hl), a
      0023A7 F8 0D                 8344 	ldhl	sp,	#13
      0023A9 2A                    8345 	ld	a, (hl+)
      0023AA 66                    8346 	ld	h, (hl)
                                   8347 ;	spillPairReg hl
                                   8348 ;	spillPairReg hl
      0023AB 6F                    8349 	ld	l, a
                                   8350 ;	spillPairReg hl
                                   8351 ;	spillPairReg hl
      0023AC 23                    8352 	inc	hl
      0023AD 23                    8353 	inc	hl
      0023AE 5D                    8354 	ld	e, l
      0023AF 54                    8355 	ld	d, h
      0023B0 1A                    8356 	ld	a, (de)
      0023B1 F8 11                 8357 	ldhl	sp,	#17
      0023B3 22                    8358 	ld	(hl+), a
      0023B4 13                    8359 	inc	de
      0023B5 1A                    8360 	ld	a, (de)
      0023B6 77                    8361 	ld	(hl), a
      0023B7 F8 0F                 8362 	ldhl	sp,#15
      0023B9 2A                    8363 	ld	a, (hl+)
      0023BA 5F                    8364 	ld	e, a
      0023BB 2A                    8365 	ld	a, (hl+)
      0023BC 57                    8366 	ld	d, a
      0023BD 2A                    8367 	ld	a,	(hl+)
      0023BE 66                    8368 	ld	h, (hl)
      0023BF 6F                    8369 	ld	l, a
      0023C0 7B                    8370 	ld	a, e
      0023C1 95                    8371 	sub	a, l
      0023C2 5F                    8372 	ld	e, a
      0023C3 7A                    8373 	ld	a, d
      0023C4 9C                    8374 	sbc	a, h
      0023C5 F8 14                 8375 	ldhl	sp,	#20
      0023C7 32                    8376 	ld	(hl-), a
      0023C8 73                    8377 	ld	(hl), e
      0023C9 3A                    8378 	ld	a, (hl-)
      0023CA 2B                    8379 	dec	hl
      0023CB 77                    8380 	ld	(hl), a
      0023CC F8 14                 8381 	ldhl	sp,	#20
      0023CE 3A                    8382 	ld	a, (hl-)
      0023CF 2B                    8383 	dec	hl
      0023D0 77                    8384 	ld	(hl), a
      0023D1 CB 7E                 8385 	bit	7, (hl)
      0023D3 20 05                 8386 	jr	NZ, 00182$
      0023D5 23                    8387 	inc	hl
      0023D6 2A                    8388 	ld	a, (hl+)
      0023D7 5E                    8389 	ld	e, (hl)
      0023D8 18 13                 8390 	jr	00184$
      0023DA                       8391 00182$:
      0023DA 11 00 00              8392 	ld	de, #0x0000
      0023DD F8 13                 8393 	ldhl	sp,	#19
      0023DF 2A                    8394 	ld	a,	(hl+)
      0023E0 66                    8395 	ld	h, (hl)
      0023E1 6F                    8396 	ld	l, a
      0023E2 7B                    8397 	ld	a, e
      0023E3 95                    8398 	sub	a, l
      0023E4 5F                    8399 	ld	e, a
      0023E5 7A                    8400 	ld	a, d
      0023E6 9C                    8401 	sbc	a, h
      0023E7 F8 12                 8402 	ldhl	sp,	#18
      0023E9 32                    8403 	ld	(hl-), a
      0023EA 73                    8404 	ld	(hl), e
      0023EB 2A                    8405 	ld	a, (hl+)
      0023EC 5E                    8406 	ld	e, (hl)
      0023ED                       8407 00184$:
      0023ED 81                    8408 	add	a, c
      0023EE 4F                    8409 	ld	c, a
      0023EF 7B                    8410 	ld	a, e
      0023F0 88                    8411 	adc	a, b
      0023F1 47                    8412 	ld	b, a
      0023F2 21rA4r0B              8413 	ld	hl, #_SPLASHDROPOFF
      0023F5 5E                    8414 	ld	e, (hl)
      0023F6 1C                    8415 	inc	e
      0023F7 18 04                 8416 	jr	00369$
      0023F9                       8417 00368$:
      0023F9 CB 21                 8418 	sla	c
      0023FB CB 10                 8419 	rl	b
      0023FD                       8420 00369$:
      0023FD 1D                    8421 	dec	e
      0023FE 20 F9                 8422 	jr	NZ,00368$
                                   8423 ;src/main.c:841: int16_t dmg = pptr->damage - dmgDropOff;
      002400 F8 0B                 8424 	ldhl	sp,#11
      002402 2A                    8425 	ld	a, (hl+)
      002403 5F                    8426 	ld	e, a
      002404 56                    8427 	ld	d, (hl)
      002405 1A                    8428 	ld	a, (de)
      002406 6F                    8429 	ld	l, a
                                   8430 ;	spillPairReg hl
                                   8431 ;	spillPairReg hl
      002407 13                    8432 	inc	de
      002408 1A                    8433 	ld	a, (de)
      002409 67                    8434 	ld	h, a
                                   8435 ;	spillPairReg hl
                                   8436 ;	spillPairReg hl
      00240A 7D                    8437 	ld	a, l
      00240B 91                    8438 	sub	a, c
      00240C 4F                    8439 	ld	c, a
      00240D 7C                    8440 	ld	a, h
      00240E 98                    8441 	sbc	a, b
      00240F F8 11                 8442 	ldhl	sp,	#17
      002411 71                    8443 	ld	(hl), c
      002412 23                    8444 	inc	hl
                                   8445 ;src/main.c:842: if (dmg > 0) {
      002413 32                    8446 	ld	(hl-), a
      002414 2A                    8447 	ld	a, (hl+)
      002415 4F                    8448 	ld	c, a
      002416 46                    8449 	ld	b, (hl)
      002417 58                    8450 	ld	e, b
      002418 AF                    8451 	xor	a, a
      002419 57                    8452 	ld	d, a
      00241A B9                    8453 	cp	a, c
      00241B 98                    8454 	sbc	a, b
      00241C CB 7B                 8455 	bit	7, e
      00241E 28 07                 8456 	jr	Z, 00370$
      002420 CB 7A                 8457 	bit	7, d
      002422 20 08                 8458 	jr	NZ, 00371$
      002424 BF                    8459 	cp	a, a
      002425 18 05                 8460 	jr	00371$
      002427                       8461 00370$:
      002427 CB 7A                 8462 	bit	7, d
      002429 28 01                 8463 	jr	Z, 00371$
      00242B 37                    8464 	scf
      00242C                       8465 00371$:
      00242C 30 53                 8466 	jr	NC, 00187$
                                   8467 ;src/main.c:843: enemies[k].hp -= dmg;
      00242E F8 0D                 8468 	ldhl	sp,#13
      002430 2A                    8469 	ld	a, (hl+)
      002431 5F                    8470 	ld	e, a
      002432 56                    8471 	ld	d, (hl)
      002433 21 10 00              8472 	ld	hl, #0x0010
      002436 19                    8473 	add	hl, de
      002437 E5                    8474 	push	hl
      002438 7D                    8475 	ld	a, l
      002439 F8 15                 8476 	ldhl	sp,	#21
      00243B 77                    8477 	ld	(hl), a
      00243C E1                    8478 	pop	hl
      00243D 7C                    8479 	ld	a, h
      00243E F8 14                 8480 	ldhl	sp,	#20
      002440 32                    8481 	ld	(hl-), a
      002441 2A                    8482 	ld	a, (hl+)
      002442 5F                    8483 	ld	e, a
      002443 56                    8484 	ld	d, (hl)
      002444 1A                    8485 	ld	a, (de)
      002445 F8 0F                 8486 	ldhl	sp,	#15
      002447 22                    8487 	ld	(hl+), a
      002448 13                    8488 	inc	de
      002449 1A                    8489 	ld	a, (de)
      00244A 32                    8490 	ld	(hl-), a
      00244B 2A                    8491 	ld	a, (hl+)
      00244C 5F                    8492 	ld	e, a
      00244D 2A                    8493 	ld	a, (hl+)
      00244E 57                    8494 	ld	d, a
      00244F 2A                    8495 	ld	a,	(hl+)
      002450 66                    8496 	ld	h, (hl)
      002451 6F                    8497 	ld	l, a
      002452 7B                    8498 	ld	a, e
      002453 95                    8499 	sub	a, l
      002454 5F                    8500 	ld	e, a
      002455 7A                    8501 	ld	a, d
      002456 9C                    8502 	sbc	a, h
      002457 47                    8503 	ld	b, a
      002458 4B                    8504 	ld	c, e
      002459 F8 13                 8505 	ldhl	sp,	#19
      00245B 2A                    8506 	ld	a,	(hl+)
      00245C 66                    8507 	ld	h, (hl)
      00245D 6F                    8508 	ld	l, a
      00245E 79                    8509 	ld	a, c
      00245F 22                    8510 	ld	(hl+), a
      002460 70                    8511 	ld	(hl), b
                                   8512 ;src/main.c:844: if (enemies[k].hp <= 0) {
      002461 58                    8513 	ld	e, b
      002462 AF                    8514 	xor	a, a
      002463 57                    8515 	ld	d, a
      002464 B9                    8516 	cp	a, c
      002465 98                    8517 	sbc	a, b
      002466 CB 7B                 8518 	bit	7, e
      002468 28 07                 8519 	jr	Z, 00372$
      00246A CB 7A                 8520 	bit	7, d
      00246C 20 08                 8521 	jr	NZ, 00373$
      00246E BF                    8522 	cp	a, a
      00246F 18 05                 8523 	jr	00373$
      002471                       8524 00372$:
      002471 CB 7A                 8525 	bit	7, d
      002473 28 01                 8526 	jr	Z, 00373$
      002475 37                    8527 	scf
      002476                       8528 00373$:
      002476 38 09                 8529 	jr	C, 00187$
                                   8530 ;src/main.c:845: killEnemy(k);
      002478 F8 18                 8531 	ldhl	sp,	#24
      00247A 7E                    8532 	ld	a, (hl)
      00247B F5                    8533 	push	af
      00247C 33                    8534 	inc	sp
      00247D CDrC2r1F              8535 	call	_killEnemy
      002480 33                    8536 	inc	sp
      002481                       8537 00187$:
                                   8538 ;src/main.c:839: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002481 F8 18                 8539 	ldhl	sp,	#24
      002483 34                    8540 	inc	(hl)
      002484 C3r4Er23              8541 	jp	00186$
      002487                       8542 00119$:
                                   8543 ;src/main.c:853: eptr->hp -= pptr->damage;
      002487 D1                    8544 	pop	de
      002488 D5                    8545 	push	de
      002489 21 10 00              8546 	ld	hl, #0x0010
      00248C 19                    8547 	add	hl, de
      00248D E5                    8548 	push	hl
      00248E 7D                    8549 	ld	a, l
      00248F F8 13                 8550 	ldhl	sp,	#19
      002491 77                    8551 	ld	(hl), a
      002492 E1                    8552 	pop	hl
      002493 7C                    8553 	ld	a, h
      002494 F8 12                 8554 	ldhl	sp,	#18
      002496 32                    8555 	ld	(hl-), a
      002497 2A                    8556 	ld	a, (hl+)
      002498 5F                    8557 	ld	e, a
      002499 2A                    8558 	ld	a, (hl+)
      00249A 57                    8559 	ld	d, a
      00249B 1A                    8560 	ld	a, (de)
      00249C 4F                    8561 	ld	c, a
      00249D 13                    8562 	inc	de
      00249E 1A                    8563 	ld	a, (de)
      00249F 47                    8564 	ld	b, a
      0024A0 2A                    8565 	ld	a, (hl+)
      0024A1 5F                    8566 	ld	e, a
      0024A2 56                    8567 	ld	d, (hl)
      0024A3 1A                    8568 	ld	a, (de)
      0024A4 6F                    8569 	ld	l, a
                                   8570 ;	spillPairReg hl
                                   8571 ;	spillPairReg hl
      0024A5 13                    8572 	inc	de
      0024A6 1A                    8573 	ld	a, (de)
      0024A7 67                    8574 	ld	h, a
                                   8575 ;	spillPairReg hl
                                   8576 ;	spillPairReg hl
      0024A8 79                    8577 	ld	a, c
      0024A9 95                    8578 	sub	a, l
      0024AA 4F                    8579 	ld	c, a
      0024AB 78                    8580 	ld	a, b
      0024AC 9C                    8581 	sbc	a, h
      0024AD 47                    8582 	ld	b, a
      0024AE F8 11                 8583 	ldhl	sp,	#17
      0024B0 2A                    8584 	ld	a,	(hl+)
      0024B1 66                    8585 	ld	h, (hl)
      0024B2 6F                    8586 	ld	l, a
      0024B3 79                    8587 	ld	a, c
      0024B4 22                    8588 	ld	(hl+), a
      0024B5 70                    8589 	ld	(hl), b
                                   8590 ;src/main.c:855: if (eptr->hp <= 0) {
      0024B6 58                    8591 	ld	e, b
      0024B7 AF                    8592 	xor	a, a
      0024B8 57                    8593 	ld	d, a
      0024B9 B9                    8594 	cp	a, c
      0024BA 98                    8595 	sbc	a, b
      0024BB CB 7B                 8596 	bit	7, e
      0024BD 28 07                 8597 	jr	Z, 00374$
      0024BF CB 7A                 8598 	bit	7, d
      0024C1 20 08                 8599 	jr	NZ, 00375$
      0024C3 BF                    8600 	cp	a, a
      0024C4 18 05                 8601 	jr	00375$
      0024C6                       8602 00374$:
      0024C6 CB 7A                 8603 	bit	7, d
      0024C8 28 01                 8604 	jr	Z, 00375$
      0024CA 37                    8605 	scf
      0024CB                       8606 00375$:
      0024CB 38 09                 8607 	jr	C, 00120$
                                   8608 ;src/main.c:857: killEnemy(i);
      0024CD F8 02                 8609 	ldhl	sp,	#2
      0024CF 7E                    8610 	ld	a, (hl)
      0024D0 F5                    8611 	push	af
      0024D1 33                    8612 	inc	sp
      0024D2 CDrC2r1F              8613 	call	_killEnemy
      0024D5 33                    8614 	inc	sp
      0024D6                       8615 00120$:
                                   8616 ;src/main.c:862: initEnemies(0);
      0024D6 AF                    8617 	xor	a, a
      0024D7 F5                    8618 	push	af
      0024D8 33                    8619 	inc	sp
      0024D9 CDrFBr0F              8620 	call	_initEnemies
      0024DC 33                    8621 	inc	sp
      0024DD                       8622 00132$:
                                   8623 ;src/main.c:869: j++;
      0024DD F8 17                 8624 	ldhl	sp,	#23
      0024DF 34                    8625 	inc	(hl)
                                   8626 ;src/main.c:870: pptr++;
      0024E0 2B                    8627 	dec	hl
      0024E1 2B                    8628 	dec	hl
      0024E2 2A                    8629 	ld	a, (hl+)
      0024E3 5F                    8630 	ld	e, a
      0024E4 56                    8631 	ld	d, (hl)
      0024E5 21 0D 00              8632 	ld	hl, #0x000d
      0024E8 19                    8633 	add	hl, de
      0024E9 E5                    8634 	push	hl
      0024EA 7D                    8635 	ld	a, l
      0024EB F8 17                 8636 	ldhl	sp,	#23
      0024ED 77                    8637 	ld	(hl), a
      0024EE E1                    8638 	pop	hl
      0024EF 7C                    8639 	ld	a, h
      0024F0 F8 16                 8640 	ldhl	sp,	#22
      0024F2 77                    8641 	ld	(hl), a
      0024F3 C3rF1r21              8642 	jp	00133$
      0024F6                       8643 00137$:
                                   8644 ;src/main.c:874: if (enemyCollisionCount == 0) {
      0024F6 FArA5r00              8645 	ld	a, (#_enemyCollisionCount)
      0024F9 B7                    8646 	or	a, a
      0024FA 20 09                 8647 	jr	NZ, 00140$
                                   8648 ;src/main.c:875: enemyCollisionCount = ENEMYCOUNT - 1;
      0024FC FAr8Er0B              8649 	ld	a, (#_ENEMYCOUNT)
      0024FF 3D                    8650 	dec	a
      002500 EArA5r00              8651 	ld	(#_enemyCollisionCount),a
      002503 18 04                 8652 	jr	00188$
      002505                       8653 00140$:
                                   8654 ;src/main.c:878: enemyCollisionCount--;
      002505 21rA5r00              8655 	ld	hl, #_enemyCollisionCount
      002508 35                    8656 	dec	(hl)
      002509                       8657 00188$:
                                   8658 ;src/main.c:883: }
      002509 E8 19                 8659 	add	sp, #25
      00250B C9                    8660 	ret
                                   8661 ;src/main.c:886: void setGunIcon() {
                                   8662 ;	---------------------------------
                                   8663 ; Function setGunIcon
                                   8664 ; ---------------------------------
      00250C                       8665 _setGunIcon::
                                   8666 ;src/main.c:888: if (currentGun == 0) {
      00250C FArA7r00              8667 	ld	a, (#_currentGun)
      00250F B7                    8668 	or	a, a
      002510 20 1B                 8669 	jr	NZ, 00102$
                                   8670 ;src/main.c:889: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      002512 01rAEr00              8671 	ld	bc, #_gunMap+0
      002515 79                    8672 	ld	a, c
      002516 21rA6r00              8673 	ld	hl, #_gunLevel
      002519 86                    8674 	add	a, (hl)
      00251A 4F                    8675 	ld	c, a
      00251B 30 01                 8676 	jr	NC, 00111$
      00251D 04                    8677 	inc	b
      00251E                       8678 00111$:
      00251E C5                    8679 	push	bc
      00251F 21 01 01              8680 	ld	hl, #0x101
      002522 E5                    8681 	push	hl
      002523 21 0F 00              8682 	ld	hl, #0x0f
      002526 E5                    8683 	push	hl
      002527 CDr00r00              8684 	call	_set_win_tiles
      00252A E8 06                 8685 	add	sp, #6
      00252C C9                    8686 	ret
      00252D                       8687 00102$:
                                   8688 ;src/main.c:892: set_win_tiles(15, 0,1,1,gunMap+2);
      00252D 11rB0r00              8689 	ld	de, #(_gunMap + 2)
      002530 D5                    8690 	push	de
      002531 21 01 01              8691 	ld	hl, #0x101
      002534 E5                    8692 	push	hl
      002535 21 0F 00              8693 	ld	hl, #0x0f
      002538 E5                    8694 	push	hl
      002539 CDr00r00              8695 	call	_set_win_tiles
      00253C E8 06                 8696 	add	sp, #6
                                   8697 ;src/main.c:894: }
      00253E C9                    8698 	ret
                                   8699 ;src/main.c:904: void fire() {
                                   8700 ;	---------------------------------
                                   8701 ; Function fire
                                   8702 ; ---------------------------------
      00253F                       8703 _fire::
      00253F E8 FB                 8704 	add	sp, #-5
                                   8705 ;src/main.c:906: oldestProjectile += 1;
      002541 21r91r00              8706 	ld	hl, #_oldestProjectile
      002544 34                    8707 	inc	(hl)
      002545 7E                    8708 	ld	a, (hl)
                                   8709 ;src/main.c:907: if (oldestProjectile >= PROJECTILECOUNT) {
      002546 21r9Fr0B              8710 	ld	hl, #_PROJECTILECOUNT
      002549 4E                    8711 	ld	c, (hl)
      00254A 21r91r00              8712 	ld	hl, #_oldestProjectile
      00254D 7E                    8713 	ld	a, (hl)
      00254E 91                    8714 	sub	a, c
      00254F 38 02                 8715 	jr	C, 00102$
                                   8716 ;src/main.c:908: oldestProjectile = 0;
      002551 36 00                 8717 	ld	(hl), #0x00
      002553                       8718 00102$:
                                   8719 ;src/main.c:911: if (currentGun == 0) {
      002553 FArA7r00              8720 	ld	a, (#_currentGun)
      002556 B7                    8721 	or	a, a
      002557 20 3B                 8722 	jr	NZ, 00107$
                                   8723 ;src/main.c:913: projectiles[oldestProjectile] = singleGun;
      002559 21r91r00              8724 	ld	hl, #_oldestProjectile
      00255C 4E                    8725 	ld	c, (hl)
      00255D 06 00                 8726 	ld	b, #0x00
      00255F 69                    8727 	ld	l, c
      002560 60                    8728 	ld	h, b
      002561 29                    8729 	add	hl, hl
      002562 09                    8730 	add	hl, bc
      002563 29                    8731 	add	hl, hl
      002564 29                    8732 	add	hl, hl
      002565 09                    8733 	add	hl, bc
      002566 4D                    8734 	ld	c, l
      002567 44                    8735 	ld	b, h
                                   8736 ;src/main.c:912: if (gunLevel == 0) {
      002568 FArA6r00              8737 	ld	a, (#_gunLevel)
      00256B B7                    8738 	or	a, a
      00256C 20 14                 8739 	jr	NZ, 00104$
                                   8740 ;src/main.c:913: projectiles[oldestProjectile] = singleGun;
      00256E 11r6Ar00              8741 	ld	de, #_singleGun+0
      002571 21rB4r00              8742 	ld	hl, #_projectiles
      002574 09                    8743 	add	hl, bc
      002575 01 0D 00              8744 	ld	bc, #0x000d
      002578 C5                    8745 	push	bc
      002579 D5                    8746 	push	de
      00257A E5                    8747 	push	hl
      00257B CDr00r00              8748 	call	___memcpy
      00257E E8 06                 8749 	add	sp, #6
      002580 18 12                 8750 	jr	00107$
      002582                       8751 00104$:
                                   8752 ;src/main.c:916: projectiles[oldestProjectile] = doubleGun;
      002582 11r77r00              8753 	ld	de, #_doubleGun+0
      002585 21rB4r00              8754 	ld	hl, #_projectiles
      002588 09                    8755 	add	hl, bc
      002589 01 0D 00              8756 	ld	bc, #0x000d
      00258C C5                    8757 	push	bc
      00258D D5                    8758 	push	de
      00258E E5                    8759 	push	hl
      00258F CDr00r00              8760 	call	___memcpy
      002592 E8 06                 8761 	add	sp, #6
      002594                       8762 00107$:
                                   8763 ;src/main.c:919: if (currentGun == 1) {
      002594 FArA7r00              8764 	ld	a, (#_currentGun)
      002597 3D                    8765 	dec	a
      002598 20 46                 8766 	jr	NZ, 00113$
                                   8767 ;src/main.c:920: if (missiles == 0) {
      00259A FArA8r00              8768 	ld	a, (#_missiles)
      00259D B7                    8769 	or	a, a
      00259E 20 0B                 8770 	jr	NZ, 00109$
                                   8771 ;src/main.c:921: currentGun = 0;
      0025A0 21rA7r00              8772 	ld	hl, #_currentGun
      0025A3 36 00                 8773 	ld	(hl), #0x00
                                   8774 ;src/main.c:922: setGunIcon();
      0025A5 CDr0Cr25              8775 	call	_setGunIcon
                                   8776 ;src/main.c:923: return;
      0025A8 C3rE5r2A              8777 	jp	00154$
      0025AB                       8778 00109$:
                                   8779 ;src/main.c:926: projectiles[oldestProjectile] = missile;
      0025AB 21r91r00              8780 	ld	hl, #_oldestProjectile
      0025AE 4E                    8781 	ld	c, (hl)
      0025AF 06 00                 8782 	ld	b, #0x00
      0025B1 69                    8783 	ld	l, c
      0025B2 60                    8784 	ld	h, b
      0025B3 29                    8785 	add	hl, hl
      0025B4 09                    8786 	add	hl, bc
      0025B5 29                    8787 	add	hl, hl
      0025B6 29                    8788 	add	hl, hl
      0025B7 09                    8789 	add	hl, bc
      0025B8 01rB4r00              8790 	ld	bc,#_projectiles
      0025BB 09                    8791 	add	hl,bc
      0025BC 11 0D 00              8792 	ld	de, #0x000d
      0025BF D5                    8793 	push	de
      0025C0 11r84r00              8794 	ld	de, #_missile
      0025C3 D5                    8795 	push	de
      0025C4 E5                    8796 	push	hl
      0025C5 CDr00r00              8797 	call	___memcpy
      0025C8 E8 06                 8798 	add	sp, #6
                                   8799 ;src/main.c:927: updateMissileCount(-1);
      0025CA 3E FF                 8800 	ld	a, #0xff
      0025CC F5                    8801 	push	af
      0025CD 33                    8802 	inc	sp
      0025CE CDrE1r0C              8803 	call	_updateMissileCount
      0025D1 33                    8804 	inc	sp
                                   8805 ;src/main.c:929: if (missiles == 0) {
      0025D2 FArA8r00              8806 	ld	a, (#_missiles)
      0025D5 B7                    8807 	or	a, a
      0025D6 20 08                 8808 	jr	NZ, 00113$
                                   8809 ;src/main.c:930: currentGun = 0;
      0025D8 21rA7r00              8810 	ld	hl, #_currentGun
      0025DB 36 00                 8811 	ld	(hl), #0x00
                                   8812 ;src/main.c:931: setGunIcon();
      0025DD CDr0Cr25              8813 	call	_setGunIcon
      0025E0                       8814 00113$:
                                   8815 ;src/main.c:934: projectiles[oldestProjectile].x = playerDrawX;
      0025E0 21r91r00              8816 	ld	hl, #_oldestProjectile
      0025E3 4E                    8817 	ld	c, (hl)
      0025E4 06 00                 8818 	ld	b, #0x00
      0025E6 69                    8819 	ld	l, c
      0025E7 60                    8820 	ld	h, b
      0025E8 29                    8821 	add	hl, hl
      0025E9 09                    8822 	add	hl, bc
      0025EA 29                    8823 	add	hl, hl
      0025EB 29                    8824 	add	hl, hl
      0025EC 09                    8825 	add	hl, bc
      0025ED 01rB4r00              8826 	ld	bc,#_projectiles
      0025F0 09                    8827 	add	hl,bc
      0025F1 E5                    8828 	push	hl
      0025F2 FAr9Br00              8829 	ld	a, (#_playerDrawX)
      0025F5 E1                    8830 	pop	hl
      0025F6 0E 00                 8831 	ld	c, #0x00
      0025F8 22                    8832 	ld	(hl+), a
      0025F9 71                    8833 	ld	(hl), c
                                   8834 ;src/main.c:935: projectiles[oldestProjectile].y = playerDrawY;
      0025FA 21r91r00              8835 	ld	hl, #_oldestProjectile
      0025FD 4E                    8836 	ld	c, (hl)
      0025FE 06 00                 8837 	ld	b, #0x00
      002600 69                    8838 	ld	l, c
      002601 60                    8839 	ld	h, b
      002602 29                    8840 	add	hl, hl
      002603 09                    8841 	add	hl, bc
      002604 29                    8842 	add	hl, hl
      002605 29                    8843 	add	hl, hl
      002606 09                    8844 	add	hl, bc
      002607 01rB4r00              8845 	ld	bc,#_projectiles
      00260A 09                    8846 	add	hl,bc
      00260B 23                    8847 	inc	hl
      00260C 23                    8848 	inc	hl
      00260D E5                    8849 	push	hl
      00260E FAr9Cr00              8850 	ld	a, (#_playerDrawY)
      002611 E1                    8851 	pop	hl
      002612 0E 00                 8852 	ld	c, #0x00
      002614 22                    8853 	ld	(hl+), a
      002615 71                    8854 	ld	(hl), c
                                   8855 ;src/main.c:936: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      002616 21r91r00              8856 	ld	hl, #_oldestProjectile
      002619 4E                    8857 	ld	c, (hl)
      00261A 06 00                 8858 	ld	b, #0x00
      00261C 69                    8859 	ld	l, c
      00261D 60                    8860 	ld	h, b
      00261E 29                    8861 	add	hl, hl
      00261F 09                    8862 	add	hl, bc
      002620 29                    8863 	add	hl, hl
      002621 29                    8864 	add	hl, hl
      002622 09                    8865 	add	hl, bc
      002623 01rB4r00              8866 	ld	bc,#_projectiles
      002626 09                    8867 	add	hl,bc
      002627 5D                    8868 	ld	e, l
      002628 54                    8869 	ld	d, h
      002629 21 05 00              8870 	ld	hl, #0x0005
      00262C 19                    8871 	add	hl, de
      00262D 4D                    8872 	ld	c, l
      00262E 44                    8873 	ld	b, h
      00262F 21 07 00              8874 	ld	hl, #0x0007
      002632 19                    8875 	add	hl, de
      002633 7E                    8876 	ld	a, (hl)
      002634 C5                    8877 	push	bc
      002635 F5                    8878 	push	af
      002636 33                    8879 	inc	sp
      002637 FAr93r00              8880 	ld	a, (#_xDir)
      00263A F5                    8881 	push	af
      00263B 33                    8882 	inc	sp
      00263C CDr00r00              8883 	call	__muluschar
      00263F E1                    8884 	pop	hl
      002640 7B                    8885 	ld	a, e
      002641 C1                    8886 	pop	bc
      002642 02                    8887 	ld	(bc), a
                                   8888 ;src/main.c:937: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      002643 21r91r00              8889 	ld	hl, #_oldestProjectile
      002646 4E                    8890 	ld	c, (hl)
      002647 06 00                 8891 	ld	b, #0x00
      002649 69                    8892 	ld	l, c
      00264A 60                    8893 	ld	h, b
      00264B 29                    8894 	add	hl, hl
      00264C 09                    8895 	add	hl, bc
      00264D 29                    8896 	add	hl, hl
      00264E 29                    8897 	add	hl, hl
      00264F 09                    8898 	add	hl, bc
      002650 01rB4r00              8899 	ld	bc,#_projectiles
      002653 09                    8900 	add	hl,bc
      002654 5D                    8901 	ld	e, l
      002655 54                    8902 	ld	d, h
      002656 21 06 00              8903 	ld	hl, #0x0006
      002659 19                    8904 	add	hl, de
      00265A 4D                    8905 	ld	c, l
      00265B 44                    8906 	ld	b, h
      00265C 21 07 00              8907 	ld	hl, #0x0007
      00265F 19                    8908 	add	hl, de
      002660 7E                    8909 	ld	a, (hl)
      002661 C5                    8910 	push	bc
      002662 F5                    8911 	push	af
      002663 33                    8912 	inc	sp
      002664 FAr94r00              8913 	ld	a, (#_yDir)
      002667 F5                    8914 	push	af
      002668 33                    8915 	inc	sp
      002669 CDr00r00              8916 	call	__muluschar
      00266C E1                    8917 	pop	hl
      00266D 7B                    8918 	ld	a, e
      00266E C1                    8919 	pop	bc
      00266F 02                    8920 	ld	(bc), a
                                   8921 ;src/main.c:906: oldestProjectile += 1;
      002670 FAr91r00              8922 	ld	a, (#_oldestProjectile)
      002673 F8 04                 8923 	ldhl	sp,	#4
      002675 77                    8924 	ld	(hl), a
                                   8925 ;src/main.c:913: projectiles[oldestProjectile] = singleGun;
      002676 21r91r00              8926 	ld	hl, #_oldestProjectile
      002679 4E                    8927 	ld	c, (hl)
      00267A 06 00                 8928 	ld	b, #0x00
      00267C 69                    8929 	ld	l, c
      00267D 60                    8930 	ld	h, b
      00267E 29                    8931 	add	hl, hl
      00267F 09                    8932 	add	hl, bc
      002680 29                    8933 	add	hl, hl
      002681 29                    8934 	add	hl, hl
      002682 09                    8935 	add	hl, bc
                                   8936 ;src/main.c:942: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002683 01rB4r00              8937 	ld	bc,#_projectiles
      002686 09                    8938 	add	hl,bc
      002687 4D                    8939 	ld	c, l
      002688 44                    8940 	ld	b, h
      002689 F8 04                 8941 	ldhl	sp,	#4
      00268B 3A                    8942 	ld	a, (hl-)
      00268C C6 1E                 8943 	add	a, #0x1e
      00268E 77                    8944 	ld	(hl), a
      00268F 21 0C 00              8945 	ld	hl, #0x000c
      002692 09                    8946 	add	hl, bc
      002693 7E                    8947 	ld	a, (hl)
      002694 F8 04                 8948 	ldhl	sp,	#4
      002696 77                    8949 	ld	(hl), a
                                   8950 ;src/main.c:941: if (yDir != 0 && xDir == 0) {
      002697 FAr94r00              8951 	ld	a, (#_yDir)
      00269A B7                    8952 	or	a, a
      00269B 28 71                 8953 	jr	Z, 00140$
      00269D FAr93r00              8954 	ld	a, (#_xDir)
      0026A0 B7                    8955 	or	a, a
      0026A1 20 6B                 8956 	jr	NZ, 00140$
                                   8957 ;src/main.c:942: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0026A3 F8 04                 8958 	ldhl	sp,	#4
      0026A5 3A                    8959 	ld	a, (hl-)
      0026A6 4F                    8960 	ld	c, a
                                   8961 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0026A7 6E                    8962 	ld	l, (hl)
                                   8963 ;	spillPairReg hl
                                   8964 ;	spillPairReg hl
      0026A8 26 00                 8965 	ld	h, #0x00
                                   8966 ;	spillPairReg hl
                                   8967 ;	spillPairReg hl
      0026AA 29                    8968 	add	hl, hl
      0026AB 29                    8969 	add	hl, hl
      0026AC 11r00r00              8970 	ld	de, #_shadow_OAM
      0026AF 19                    8971 	add	hl, de
      0026B0 23                    8972 	inc	hl
      0026B1 23                    8973 	inc	hl
      0026B2 71                    8974 	ld	(hl), c
                                   8975 ;src/main.c:906: oldestProjectile += 1;
      0026B3 FAr91r00              8976 	ld	a, (#_oldestProjectile)
                                   8977 ;src/main.c:942: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0026B6 C6 1E                 8978 	add	a, #0x1e
      0026B8 4F                    8979 	ld	c, a
                                   8980 ;src/main.c:943: if (yDir == 1) {
      0026B9 FAr94r00              8981 	ld	a, (#_yDir)
                                   8982 ;src/main.c:944: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   8983 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0026BC 3D                    8984 	dec	a
      0026BD 20 27                 8985 	jr	NZ, 00115$
      0026BF 67                    8986 	ld	h,a
                                   8987 ;	spillPairReg hl
                                   8988 ;	spillPairReg hl
      0026C0 69                    8989 	ld	l, c
      0026C1 29                    8990 	add	hl, hl
      0026C2 29                    8991 	add	hl, hl
      0026C3 11r00r00              8992 	ld	de, #_shadow_OAM
      0026C6 19                    8993 	add	hl, de
      0026C7 23                    8994 	inc	hl
      0026C8 23                    8995 	inc	hl
      0026C9 23                    8996 	inc	hl
      0026CA 36 40                 8997 	ld	(hl), #0x40
                                   8998 ;src/main.c:945: projectiles[oldestProjectile].offset = 4;
      0026CC 21r91r00              8999 	ld	hl, #_oldestProjectile
      0026CF 4E                    9000 	ld	c, (hl)
      0026D0 06 00                 9001 	ld	b, #0x00
      0026D2 69                    9002 	ld	l, c
      0026D3 60                    9003 	ld	h, b
      0026D4 29                    9004 	add	hl, hl
      0026D5 09                    9005 	add	hl, bc
      0026D6 29                    9006 	add	hl, hl
      0026D7 29                    9007 	add	hl, hl
      0026D8 09                    9008 	add	hl, bc
      0026D9 01rB4r00              9009 	ld	bc,#_projectiles
      0026DC 09                    9010 	add	hl,bc
      0026DD 01 04 00              9011 	ld	bc, #0x0004
      0026E0 09                    9012 	add	hl, bc
      0026E1 36 04                 9013 	ld	(hl), #0x04
      0026E3 C3rBFr2A              9014 	jp	00141$
      0026E6                       9015 00115$:
                                   9016 ;src/main.c:948: set_sprite_prop(30+oldestProjectile, 0); 
                                   9017 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0026E6 26 00                 9018 	ld	h, #0x00
                                   9019 ;	spillPairReg hl
                                   9020 ;	spillPairReg hl
      0026E8 69                    9021 	ld	l, c
      0026E9 29                    9022 	add	hl, hl
      0026EA 29                    9023 	add	hl, hl
      0026EB 11r00r00              9024 	ld	de, #_shadow_OAM
      0026EE 19                    9025 	add	hl, de
      0026EF 23                    9026 	inc	hl
      0026F0 23                    9027 	inc	hl
      0026F1 23                    9028 	inc	hl
      0026F2 36 00                 9029 	ld	(hl), #0x00
                                   9030 ;src/main.c:949: projectiles[oldestProjectile].offset = 12;
      0026F4 21r91r00              9031 	ld	hl, #_oldestProjectile
      0026F7 4E                    9032 	ld	c, (hl)
      0026F8 06 00                 9033 	ld	b, #0x00
      0026FA 69                    9034 	ld	l, c
      0026FB 60                    9035 	ld	h, b
      0026FC 29                    9036 	add	hl, hl
      0026FD 09                    9037 	add	hl, bc
      0026FE 29                    9038 	add	hl, hl
      0026FF 29                    9039 	add	hl, hl
      002700 09                    9040 	add	hl, bc
      002701 01rB4r00              9041 	ld	bc,#_projectiles
      002704 09                    9042 	add	hl,bc
      002705 01 04 00              9043 	ld	bc, #0x0004
      002708 09                    9044 	add	hl, bc
      002709 36 0C                 9045 	ld	(hl), #0x0c
      00270B C3rBFr2A              9046 	jp	00141$
      00270E                       9047 00140$:
                                   9048 ;src/main.c:953: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   9049 ;src/main.c:952: else if (xDir != 0 && yDir == 0) {
      00270E FAr93r00              9050 	ld	a, (#_xDir)
      002711 B7                    9051 	or	a, a
      002712 CAr58r28              9052 	jp	Z, 00136$
      002715 FAr94r00              9053 	ld	a, (#_yDir)
      002718 B7                    9054 	or	a, a
      002719 C2r58r28              9055 	jp	NZ, 00136$
                                   9056 ;src/main.c:953: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      00271C F8 04                 9057 	ldhl	sp,	#4
      00271E 34                    9058 	inc	(hl)
      00271F 34                    9059 	inc	(hl)
      002720 2B                    9060 	dec	hl
                                   9061 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002721 3A                    9062 	ld	a, (hl-)
      002722 22                    9063 	ld	(hl+), a
      002723 36 00                 9064 	ld	(hl), #0x00
      002725 3E 02                 9065 	ld	a, #0x02
      002727                       9066 00260$:
      002727 F8 02                 9067 	ldhl	sp,	#2
      002729 CB 26                 9068 	sla	(hl)
      00272B 23                    9069 	inc	hl
      00272C CB 16                 9070 	rl	(hl)
      00272E 3D                    9071 	dec	a
      00272F 20 F6                 9072 	jr	NZ, 00260$
      002731 2B                    9073 	dec	hl
      002732 2A                    9074 	ld	a, (hl+)
      002733 5F                    9075 	ld	e, a
      002734 56                    9076 	ld	d, (hl)
      002735 21r00r00              9077 	ld	hl, #_shadow_OAM
      002738 19                    9078 	add	hl, de
      002739 33                    9079 	inc	sp
      00273A 33                    9080 	inc	sp
      00273B 5D                    9081 	ld	e, l
      00273C 54                    9082 	ld	d, h
      00273D D5                    9083 	push	de
      00273E 21 02 00              9084 	ld	hl, #0x0002
      002741 19                    9085 	add	hl, de
      002742 E5                    9086 	push	hl
      002743 7D                    9087 	ld	a, l
      002744 F8 04                 9088 	ldhl	sp,	#4
      002746 77                    9089 	ld	(hl), a
      002747 E1                    9090 	pop	hl
      002748 7C                    9091 	ld	a, h
      002749 F8 03                 9092 	ldhl	sp,	#3
      00274B 32                    9093 	ld	(hl-), a
      00274C 2A                    9094 	ld	a, (hl+)
      00274D 5F                    9095 	ld	e, a
      00274E 2A                    9096 	ld	a, (hl+)
      00274F 57                    9097 	ld	d, a
      002750 7E                    9098 	ld	a, (hl)
      002751 12                    9099 	ld	(de), a
                                   9100 ;src/main.c:906: oldestProjectile += 1;
      002752 FAr91r00              9101 	ld	a, (#_oldestProjectile)
      002755 F8 04                 9102 	ldhl	sp,	#4
      002757 77                    9103 	ld	(hl), a
                                   9104 ;src/main.c:942: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002758 7E                    9105 	ld	a, (hl)
      002759 C6 1E                 9106 	add	a, #0x1e
      00275B 77                    9107 	ld	(hl), a
                                   9108 ;src/main.c:954: if (xDir == 1) {
      00275C FAr93r00              9109 	ld	a, (#_xDir)
      00275F 3D                    9110 	dec	a
      002760 20 7B                 9111 	jr	NZ, 00118$
                                   9112 ;src/main.c:955: set_sprite_prop(30+oldestProjectile, 0);
      002762 F8 04                 9113 	ldhl	sp,	#4
                                   9114 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002764 3A                    9115 	ld	a, (hl-)
      002765 22                    9116 	ld	(hl+), a
      002766 36 00                 9117 	ld	(hl), #0x00
      002768 3E 02                 9118 	ld	a, #0x02
      00276A                       9119 00263$:
      00276A F8 03                 9120 	ldhl	sp,	#3
      00276C CB 26                 9121 	sla	(hl)
      00276E 23                    9122 	inc	hl
      00276F CB 16                 9123 	rl	(hl)
      002771 3D                    9124 	dec	a
      002772 20 F6                 9125 	jr	NZ, 00263$
      002774 2B                    9126 	dec	hl
      002775 2A                    9127 	ld	a, (hl+)
      002776 5F                    9128 	ld	e, a
      002777 56                    9129 	ld	d, (hl)
      002778 21r00r00              9130 	ld	hl, #_shadow_OAM
      00277B 19                    9131 	add	hl, de
      00277C E5                    9132 	push	hl
      00277D 7D                    9133 	ld	a, l
      00277E F8 03                 9134 	ldhl	sp,	#3
      002780 77                    9135 	ld	(hl), a
      002781 E1                    9136 	pop	hl
      002782 7C                    9137 	ld	a, h
      002783 F8 02                 9138 	ldhl	sp,	#2
      002785 32                    9139 	ld	(hl-), a
      002786 2A                    9140 	ld	a, (hl+)
      002787 5F                    9141 	ld	e, a
      002788 56                    9142 	ld	d, (hl)
      002789 21 03 00              9143 	ld	hl, #0x0003
      00278C 19                    9144 	add	hl, de
      00278D E5                    9145 	push	hl
      00278E 7D                    9146 	ld	a, l
      00278F F8 05                 9147 	ldhl	sp,	#5
      002791 77                    9148 	ld	(hl), a
      002792 E1                    9149 	pop	hl
      002793 7C                    9150 	ld	a, h
      002794 F8 04                 9151 	ldhl	sp,	#4
      002796 32                    9152 	ld	(hl-), a
      002797 2A                    9153 	ld	a,	(hl+)
      002798 66                    9154 	ld	h, (hl)
      002799 6F                    9155 	ld	l, a
      00279A 36 00                 9156 	ld	(hl), #0x00
                                   9157 ;src/main.c:956: projectiles[oldestProjectile].offset = 12;
      00279C 21r91r00              9158 	ld	hl, #_oldestProjectile
      00279F 4E                    9159 	ld	c, (hl)
      0027A0 06 00                 9160 	ld	b, #0x00
      0027A2 69                    9161 	ld	l, c
      0027A3 60                    9162 	ld	h, b
      0027A4 29                    9163 	add	hl, hl
      0027A5 09                    9164 	add	hl, bc
      0027A6 29                    9165 	add	hl, hl
      0027A7 29                    9166 	add	hl, hl
      0027A8 09                    9167 	add	hl, bc
      0027A9 E5                    9168 	push	hl
      0027AA 7D                    9169 	ld	a, l
      0027AB F8 05                 9170 	ldhl	sp,	#5
      0027AD 77                    9171 	ld	(hl), a
      0027AE E1                    9172 	pop	hl
      0027AF 7C                    9173 	ld	a, h
      0027B0 F8 04                 9174 	ldhl	sp,	#4
      0027B2 32                    9175 	ld	(hl-), a
      0027B3 2A                    9176 	ld	a, (hl+)
      0027B4 5F                    9177 	ld	e, a
      0027B5 56                    9178 	ld	d, (hl)
      0027B6 21rB4r00              9179 	ld	hl, #_projectiles
      0027B9 19                    9180 	add	hl, de
      0027BA E5                    9181 	push	hl
      0027BB 7D                    9182 	ld	a, l
      0027BC F8 03                 9183 	ldhl	sp,	#3
      0027BE 77                    9184 	ld	(hl), a
      0027BF E1                    9185 	pop	hl
      0027C0 7C                    9186 	ld	a, h
      0027C1 F8 02                 9187 	ldhl	sp,	#2
      0027C3 32                    9188 	ld	(hl-), a
      0027C4 2A                    9189 	ld	a, (hl+)
      0027C5 5F                    9190 	ld	e, a
      0027C6 56                    9191 	ld	d, (hl)
      0027C7 21 04 00              9192 	ld	hl, #0x0004
      0027CA 19                    9193 	add	hl, de
      0027CB E5                    9194 	push	hl
      0027CC 7D                    9195 	ld	a, l
      0027CD F8 05                 9196 	ldhl	sp,	#5
      0027CF 77                    9197 	ld	(hl), a
      0027D0 E1                    9198 	pop	hl
      0027D1 7C                    9199 	ld	a, h
      0027D2 F8 04                 9200 	ldhl	sp,	#4
      0027D4 32                    9201 	ld	(hl-), a
      0027D5 2A                    9202 	ld	a,	(hl+)
      0027D6 66                    9203 	ld	h, (hl)
      0027D7 6F                    9204 	ld	l, a
      0027D8 36 0C                 9205 	ld	(hl), #0x0c
      0027DA C3rBFr2A              9206 	jp	00141$
      0027DD                       9207 00118$:
                                   9208 ;src/main.c:959: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      0027DD F8 04                 9209 	ldhl	sp,	#4
                                   9210 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0027DF 3A                    9211 	ld	a, (hl-)
      0027E0 22                    9212 	ld	(hl+), a
      0027E1 36 00                 9213 	ld	(hl), #0x00
      0027E3 3E 02                 9214 	ld	a, #0x02
      0027E5                       9215 00264$:
      0027E5 F8 03                 9216 	ldhl	sp,	#3
      0027E7 CB 26                 9217 	sla	(hl)
      0027E9 23                    9218 	inc	hl
      0027EA CB 16                 9219 	rl	(hl)
      0027EC 3D                    9220 	dec	a
      0027ED 20 F6                 9221 	jr	NZ, 00264$
      0027EF 2B                    9222 	dec	hl
      0027F0 2A                    9223 	ld	a, (hl+)
      0027F1 5F                    9224 	ld	e, a
      0027F2 56                    9225 	ld	d, (hl)
      0027F3 21r00r00              9226 	ld	hl, #_shadow_OAM
      0027F6 19                    9227 	add	hl, de
      0027F7 E5                    9228 	push	hl
      0027F8 7D                    9229 	ld	a, l
      0027F9 F8 03                 9230 	ldhl	sp,	#3
      0027FB 77                    9231 	ld	(hl), a
      0027FC E1                    9232 	pop	hl
      0027FD 7C                    9233 	ld	a, h
      0027FE F8 02                 9234 	ldhl	sp,	#2
      002800 32                    9235 	ld	(hl-), a
      002801 2A                    9236 	ld	a, (hl+)
      002802 5F                    9237 	ld	e, a
      002803 56                    9238 	ld	d, (hl)
      002804 21 03 00              9239 	ld	hl, #0x0003
      002807 19                    9240 	add	hl, de
      002808 E5                    9241 	push	hl
      002809 7D                    9242 	ld	a, l
      00280A F8 05                 9243 	ldhl	sp,	#5
      00280C 77                    9244 	ld	(hl), a
      00280D E1                    9245 	pop	hl
      00280E 7C                    9246 	ld	a, h
      00280F F8 04                 9247 	ldhl	sp,	#4
      002811 32                    9248 	ld	(hl-), a
      002812 2A                    9249 	ld	a,	(hl+)
      002813 66                    9250 	ld	h, (hl)
      002814 6F                    9251 	ld	l, a
      002815 36 20                 9252 	ld	(hl), #0x20
                                   9253 ;src/main.c:960: projectiles[oldestProjectile].offset = 12;
      002817 21r91r00              9254 	ld	hl, #_oldestProjectile
      00281A 4E                    9255 	ld	c, (hl)
      00281B 06 00                 9256 	ld	b, #0x00
      00281D 69                    9257 	ld	l, c
      00281E 60                    9258 	ld	h, b
      00281F 29                    9259 	add	hl, hl
      002820 09                    9260 	add	hl, bc
      002821 29                    9261 	add	hl, hl
      002822 29                    9262 	add	hl, hl
      002823 09                    9263 	add	hl, bc
      002824 E5                    9264 	push	hl
      002825 7D                    9265 	ld	a, l
      002826 F8 05                 9266 	ldhl	sp,	#5
      002828 77                    9267 	ld	(hl), a
      002829 E1                    9268 	pop	hl
      00282A 7C                    9269 	ld	a, h
      00282B F8 04                 9270 	ldhl	sp,	#4
      00282D 32                    9271 	ld	(hl-), a
      00282E 2A                    9272 	ld	a, (hl+)
      00282F 5F                    9273 	ld	e, a
      002830 56                    9274 	ld	d, (hl)
      002831 21rB4r00              9275 	ld	hl, #_projectiles
      002834 19                    9276 	add	hl, de
      002835 E5                    9277 	push	hl
      002836 7D                    9278 	ld	a, l
      002837 F8 03                 9279 	ldhl	sp,	#3
      002839 77                    9280 	ld	(hl), a
      00283A E1                    9281 	pop	hl
      00283B 7C                    9282 	ld	a, h
      00283C F8 02                 9283 	ldhl	sp,	#2
      00283E 32                    9284 	ld	(hl-), a
      00283F 2A                    9285 	ld	a, (hl+)
      002840 5F                    9286 	ld	e, a
      002841 56                    9287 	ld	d, (hl)
      002842 21 04 00              9288 	ld	hl, #0x0004
      002845 19                    9289 	add	hl, de
      002846 E5                    9290 	push	hl
      002847 7D                    9291 	ld	a, l
      002848 F8 05                 9292 	ldhl	sp,	#5
      00284A 77                    9293 	ld	(hl), a
      00284B E1                    9294 	pop	hl
      00284C 7C                    9295 	ld	a, h
      00284D F8 04                 9296 	ldhl	sp,	#4
      00284F 32                    9297 	ld	(hl-), a
      002850 2A                    9298 	ld	a,	(hl+)
      002851 66                    9299 	ld	h, (hl)
      002852 6F                    9300 	ld	l, a
      002853 36 0C                 9301 	ld	(hl), #0x0c
      002855 C3rBFr2A              9302 	jp	00141$
      002858                       9303 00136$:
                                   9304 ;src/main.c:964: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      002858 F8 04                 9305 	ldhl	sp,	#4
      00285A 7E                    9306 	ld	a, (hl)
      00285B C6 04                 9307 	add	a, #0x04
      00285D F8 00                 9308 	ldhl	sp,	#0
      00285F 77                    9309 	ld	(hl), a
      002860 F8 03                 9310 	ldhl	sp,	#3
                                   9311 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002862 7E                    9312 	ld	a, (hl)
      002863 22                    9313 	ld	(hl+), a
      002864 36 00                 9314 	ld	(hl), #0x00
      002866 3E 02                 9315 	ld	a, #0x02
      002868                       9316 00265$:
      002868 F8 03                 9317 	ldhl	sp,	#3
      00286A CB 26                 9318 	sla	(hl)
      00286C 23                    9319 	inc	hl
      00286D CB 16                 9320 	rl	(hl)
      00286F 3D                    9321 	dec	a
      002870 20 F6                 9322 	jr	NZ, 00265$
      002872 2B                    9323 	dec	hl
      002873 2A                    9324 	ld	a, (hl+)
      002874 5F                    9325 	ld	e, a
      002875 56                    9326 	ld	d, (hl)
      002876 21r00r00              9327 	ld	hl, #_shadow_OAM
      002879 19                    9328 	add	hl, de
      00287A E5                    9329 	push	hl
      00287B 7D                    9330 	ld	a, l
      00287C F8 03                 9331 	ldhl	sp,	#3
      00287E 77                    9332 	ld	(hl), a
      00287F E1                    9333 	pop	hl
      002880 7C                    9334 	ld	a, h
      002881 F8 02                 9335 	ldhl	sp,	#2
      002883 32                    9336 	ld	(hl-), a
      002884 2A                    9337 	ld	a, (hl+)
      002885 5F                    9338 	ld	e, a
      002886 56                    9339 	ld	d, (hl)
      002887 21 02 00              9340 	ld	hl, #0x0002
      00288A 19                    9341 	add	hl, de
      00288B E5                    9342 	push	hl
      00288C 7D                    9343 	ld	a, l
      00288D F8 05                 9344 	ldhl	sp,	#5
      00288F 77                    9345 	ld	(hl), a
      002890 E1                    9346 	pop	hl
      002891 7C                    9347 	ld	a, h
      002892 F8 04                 9348 	ldhl	sp,	#4
      002894 32                    9349 	ld	(hl-), a
      002895 2A                    9350 	ld	a, (hl+)
      002896 5F                    9351 	ld	e, a
      002897 56                    9352 	ld	d, (hl)
      002898 F8 00                 9353 	ldhl	sp,	#0
      00289A 7E                    9354 	ld	a, (hl)
      00289B 12                    9355 	ld	(de), a
                                   9356 ;src/main.c:965: if (xDir == 1 && yDir == -1) {
      00289C FAr93r00              9357 	ld	a, (#_xDir)
      00289F 3D                    9358 	dec	a
      0028A0 3E 01                 9359 	ld	a, #0x01
      0028A2 28 01                 9360 	jr	Z, 00267$
      0028A4 AF                    9361 	xor	a, a
      0028A5                       9362 00267$:
      0028A5 F8 04                 9363 	ldhl	sp,	#4
      0028A7 77                    9364 	ld	(hl), a
                                   9365 ;src/main.c:906: oldestProjectile += 1;
      0028A8 21r91r00              9366 	ld	hl, #_oldestProjectile
      0028AB 4E                    9367 	ld	c, (hl)
                                   9368 ;src/main.c:965: if (xDir == 1 && yDir == -1) {
      0028AC FAr94r00              9369 	ld	a, (#_yDir)
      0028AF 3C                    9370 	inc	a
      0028B0 3E 01                 9371 	ld	a, #0x01
      0028B2 28 01                 9372 	jr	Z, 00269$
      0028B4 AF                    9373 	xor	a, a
      0028B5                       9374 00269$:
      0028B5 F8 01                 9375 	ldhl	sp,	#1
                                   9376 ;src/main.c:942: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0028B7 22                    9377 	ld	(hl+), a
      0028B8 79                    9378 	ld	a, c
      0028B9 C6 1E                 9379 	add	a, #0x1e
                                   9380 ;src/main.c:965: if (xDir == 1 && yDir == -1) {
      0028BB 22                    9381 	ld	(hl+), a
      0028BC 23                    9382 	inc	hl
      0028BD 7E                    9383 	ld	a, (hl)
      0028BE B7                    9384 	or	a, a
      0028BF CAr42r29              9385 	jp	Z, 00132$
      0028C2 F8 01                 9386 	ldhl	sp,	#1
      0028C4 7E                    9387 	ld	a, (hl)
      0028C5 B7                    9388 	or	a, a
      0028C6 28 7A                 9389 	jr	Z, 00132$
                                   9390 ;src/main.c:966: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      0028C8 23                    9391 	inc	hl
                                   9392 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0028C9 2A                    9393 	ld	a, (hl+)
      0028CA 22                    9394 	ld	(hl+), a
      0028CB 36 00                 9395 	ld	(hl), #0x00
      0028CD 3E 02                 9396 	ld	a, #0x02
      0028CF                       9397 00270$:
      0028CF F8 03                 9398 	ldhl	sp,	#3
      0028D1 CB 26                 9399 	sla	(hl)
      0028D3 23                    9400 	inc	hl
      0028D4 CB 16                 9401 	rl	(hl)
      0028D6 3D                    9402 	dec	a
      0028D7 20 F6                 9403 	jr	NZ, 00270$
      0028D9 2B                    9404 	dec	hl
      0028DA 2A                    9405 	ld	a, (hl+)
      0028DB 5F                    9406 	ld	e, a
      0028DC 56                    9407 	ld	d, (hl)
      0028DD 21r00r00              9408 	ld	hl, #_shadow_OAM
      0028E0 19                    9409 	add	hl, de
      0028E1 E5                    9410 	push	hl
      0028E2 7D                    9411 	ld	a, l
      0028E3 F8 03                 9412 	ldhl	sp,	#3
      0028E5 77                    9413 	ld	(hl), a
      0028E6 E1                    9414 	pop	hl
      0028E7 7C                    9415 	ld	a, h
      0028E8 F8 02                 9416 	ldhl	sp,	#2
      0028EA 32                    9417 	ld	(hl-), a
      0028EB 2A                    9418 	ld	a, (hl+)
      0028EC 5F                    9419 	ld	e, a
      0028ED 56                    9420 	ld	d, (hl)
      0028EE 21 03 00              9421 	ld	hl, #0x0003
      0028F1 19                    9422 	add	hl, de
      0028F2 E5                    9423 	push	hl
      0028F3 7D                    9424 	ld	a, l
      0028F4 F8 05                 9425 	ldhl	sp,	#5
      0028F6 77                    9426 	ld	(hl), a
      0028F7 E1                    9427 	pop	hl
      0028F8 7C                    9428 	ld	a, h
      0028F9 F8 04                 9429 	ldhl	sp,	#4
      0028FB 32                    9430 	ld	(hl-), a
      0028FC 2A                    9431 	ld	a,	(hl+)
      0028FD 66                    9432 	ld	h, (hl)
      0028FE 6F                    9433 	ld	l, a
      0028FF 36 00                 9434 	ld	(hl), #0x00
                                   9435 ;src/main.c:967: projectiles[oldestProjectile].offset = 12;
      002901 21r91r00              9436 	ld	hl, #_oldestProjectile
      002904 4E                    9437 	ld	c, (hl)
      002905 06 00                 9438 	ld	b, #0x00
      002907 69                    9439 	ld	l, c
      002908 60                    9440 	ld	h, b
      002909 29                    9441 	add	hl, hl
      00290A 09                    9442 	add	hl, bc
      00290B 29                    9443 	add	hl, hl
      00290C 29                    9444 	add	hl, hl
      00290D 09                    9445 	add	hl, bc
      00290E E5                    9446 	push	hl
      00290F 7D                    9447 	ld	a, l
      002910 F8 05                 9448 	ldhl	sp,	#5
      002912 77                    9449 	ld	(hl), a
      002913 E1                    9450 	pop	hl
      002914 7C                    9451 	ld	a, h
      002915 F8 04                 9452 	ldhl	sp,	#4
      002917 32                    9453 	ld	(hl-), a
      002918 2A                    9454 	ld	a, (hl+)
      002919 5F                    9455 	ld	e, a
      00291A 56                    9456 	ld	d, (hl)
      00291B 21rB4r00              9457 	ld	hl, #_projectiles
      00291E 19                    9458 	add	hl, de
      00291F E5                    9459 	push	hl
      002920 7D                    9460 	ld	a, l
      002921 F8 03                 9461 	ldhl	sp,	#3
      002923 77                    9462 	ld	(hl), a
      002924 E1                    9463 	pop	hl
      002925 7C                    9464 	ld	a, h
      002926 F8 02                 9465 	ldhl	sp,	#2
      002928 32                    9466 	ld	(hl-), a
      002929 2A                    9467 	ld	a, (hl+)
      00292A 5F                    9468 	ld	e, a
      00292B 56                    9469 	ld	d, (hl)
      00292C 21 04 00              9470 	ld	hl, #0x0004
      00292F 19                    9471 	add	hl, de
      002930 E5                    9472 	push	hl
      002931 7D                    9473 	ld	a, l
      002932 F8 05                 9474 	ldhl	sp,	#5
      002934 77                    9475 	ld	(hl), a
      002935 E1                    9476 	pop	hl
      002936 7C                    9477 	ld	a, h
      002937 F8 04                 9478 	ldhl	sp,	#4
      002939 32                    9479 	ld	(hl-), a
      00293A 2A                    9480 	ld	a,	(hl+)
      00293B 66                    9481 	ld	h, (hl)
      00293C 6F                    9482 	ld	l, a
      00293D 36 0C                 9483 	ld	(hl), #0x0c
      00293F C3rBFr2A              9484 	jp	00141$
      002942                       9485 00132$:
                                   9486 ;src/main.c:943: if (yDir == 1) {
      002942 FAr94r00              9487 	ld	a, (#_yDir)
      002945 3D                    9488 	dec	a
      002946 3E 01                 9489 	ld	a, #0x01
      002948 28 01                 9490 	jr	Z, 00272$
      00294A AF                    9491 	xor	a, a
      00294B                       9492 00272$:
      00294B F8 03                 9493 	ldhl	sp,	#3
                                   9494 ;src/main.c:969: else if (xDir == 1 && yDir == 1) {
      00294D 22                    9495 	ld	(hl+), a
      00294E 7E                    9496 	ld	a, (hl)
      00294F B7                    9497 	or	a, a
      002950 CArD2r29              9498 	jp	Z, 00128$
      002953 2B                    9499 	dec	hl
      002954 7E                    9500 	ld	a, (hl)
      002955 B7                    9501 	or	a, a
      002956 28 7A                 9502 	jr	Z, 00128$
                                   9503 ;src/main.c:970: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      002958 2B                    9504 	dec	hl
                                   9505 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002959 2A                    9506 	ld	a, (hl+)
      00295A 22                    9507 	ld	(hl+), a
      00295B 36 00                 9508 	ld	(hl), #0x00
      00295D 3E 02                 9509 	ld	a, #0x02
      00295F                       9510 00273$:
      00295F F8 03                 9511 	ldhl	sp,	#3
      002961 CB 26                 9512 	sla	(hl)
      002963 23                    9513 	inc	hl
      002964 CB 16                 9514 	rl	(hl)
      002966 3D                    9515 	dec	a
      002967 20 F6                 9516 	jr	NZ, 00273$
      002969 2B                    9517 	dec	hl
      00296A 2A                    9518 	ld	a, (hl+)
      00296B 5F                    9519 	ld	e, a
      00296C 56                    9520 	ld	d, (hl)
      00296D 21r00r00              9521 	ld	hl, #_shadow_OAM
      002970 19                    9522 	add	hl, de
      002971 E5                    9523 	push	hl
      002972 7D                    9524 	ld	a, l
      002973 F8 03                 9525 	ldhl	sp,	#3
      002975 77                    9526 	ld	(hl), a
      002976 E1                    9527 	pop	hl
      002977 7C                    9528 	ld	a, h
      002978 F8 02                 9529 	ldhl	sp,	#2
      00297A 32                    9530 	ld	(hl-), a
      00297B 2A                    9531 	ld	a, (hl+)
      00297C 5F                    9532 	ld	e, a
      00297D 56                    9533 	ld	d, (hl)
      00297E 21 03 00              9534 	ld	hl, #0x0003
      002981 19                    9535 	add	hl, de
      002982 E5                    9536 	push	hl
      002983 7D                    9537 	ld	a, l
      002984 F8 05                 9538 	ldhl	sp,	#5
      002986 77                    9539 	ld	(hl), a
      002987 E1                    9540 	pop	hl
      002988 7C                    9541 	ld	a, h
      002989 F8 04                 9542 	ldhl	sp,	#4
      00298B 32                    9543 	ld	(hl-), a
      00298C 2A                    9544 	ld	a,	(hl+)
      00298D 66                    9545 	ld	h, (hl)
      00298E 6F                    9546 	ld	l, a
      00298F 36 40                 9547 	ld	(hl), #0x40
                                   9548 ;src/main.c:971: projectiles[oldestProjectile].offset = 4;
      002991 21r91r00              9549 	ld	hl, #_oldestProjectile
      002994 4E                    9550 	ld	c, (hl)
      002995 06 00                 9551 	ld	b, #0x00
      002997 69                    9552 	ld	l, c
      002998 60                    9553 	ld	h, b
      002999 29                    9554 	add	hl, hl
      00299A 09                    9555 	add	hl, bc
      00299B 29                    9556 	add	hl, hl
      00299C 29                    9557 	add	hl, hl
      00299D 09                    9558 	add	hl, bc
      00299E E5                    9559 	push	hl
      00299F 7D                    9560 	ld	a, l
      0029A0 F8 05                 9561 	ldhl	sp,	#5
      0029A2 77                    9562 	ld	(hl), a
      0029A3 E1                    9563 	pop	hl
      0029A4 7C                    9564 	ld	a, h
      0029A5 F8 04                 9565 	ldhl	sp,	#4
      0029A7 32                    9566 	ld	(hl-), a
      0029A8 2A                    9567 	ld	a, (hl+)
      0029A9 5F                    9568 	ld	e, a
      0029AA 56                    9569 	ld	d, (hl)
      0029AB 21rB4r00              9570 	ld	hl, #_projectiles
      0029AE 19                    9571 	add	hl, de
      0029AF E5                    9572 	push	hl
      0029B0 7D                    9573 	ld	a, l
      0029B1 F8 03                 9574 	ldhl	sp,	#3
      0029B3 77                    9575 	ld	(hl), a
      0029B4 E1                    9576 	pop	hl
      0029B5 7C                    9577 	ld	a, h
      0029B6 F8 02                 9578 	ldhl	sp,	#2
      0029B8 32                    9579 	ld	(hl-), a
      0029B9 2A                    9580 	ld	a, (hl+)
      0029BA 5F                    9581 	ld	e, a
      0029BB 56                    9582 	ld	d, (hl)
      0029BC 21 04 00              9583 	ld	hl, #0x0004
      0029BF 19                    9584 	add	hl, de
      0029C0 E5                    9585 	push	hl
      0029C1 7D                    9586 	ld	a, l
      0029C2 F8 05                 9587 	ldhl	sp,	#5
      0029C4 77                    9588 	ld	(hl), a
      0029C5 E1                    9589 	pop	hl
      0029C6 7C                    9590 	ld	a, h
      0029C7 F8 04                 9591 	ldhl	sp,	#4
      0029C9 32                    9592 	ld	(hl-), a
      0029CA 2A                    9593 	ld	a,	(hl+)
      0029CB 66                    9594 	ld	h, (hl)
      0029CC 6F                    9595 	ld	l, a
      0029CD 36 04                 9596 	ld	(hl), #0x04
      0029CF C3rBFr2A              9597 	jp	00141$
      0029D2                       9598 00128$:
                                   9599 ;src/main.c:973: else if (xDir == -1 && yDir == 1) {
      0029D2 FAr93r00              9600 	ld	a, (#_xDir)
      0029D5 3C                    9601 	inc	a
      0029D6 3E 01                 9602 	ld	a, #0x01
      0029D8 28 01                 9603 	jr	Z, 00275$
      0029DA AF                    9604 	xor	a, a
      0029DB                       9605 00275$:
      0029DB F8 04                 9606 	ldhl	sp,	#4
      0029DD 77                    9607 	ld	(hl), a
      0029DE 7E                    9608 	ld	a, (hl)
      0029DF B7                    9609 	or	a, a
      0029E0 CAr61r2A              9610 	jp	Z, 00124$
      0029E3 2B                    9611 	dec	hl
      0029E4 7E                    9612 	ld	a, (hl)
      0029E5 B7                    9613 	or	a, a
      0029E6 28 79                 9614 	jr	Z, 00124$
                                   9615 ;src/main.c:974: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      0029E8 2B                    9616 	dec	hl
                                   9617 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0029E9 2A                    9618 	ld	a, (hl+)
      0029EA 22                    9619 	ld	(hl+), a
      0029EB 36 00                 9620 	ld	(hl), #0x00
      0029ED 3E 02                 9621 	ld	a, #0x02
      0029EF                       9622 00276$:
      0029EF F8 03                 9623 	ldhl	sp,	#3
      0029F1 CB 26                 9624 	sla	(hl)
      0029F3 23                    9625 	inc	hl
      0029F4 CB 16                 9626 	rl	(hl)
      0029F6 3D                    9627 	dec	a
      0029F7 20 F6                 9628 	jr	NZ, 00276$
      0029F9 2B                    9629 	dec	hl
      0029FA 2A                    9630 	ld	a, (hl+)
      0029FB 5F                    9631 	ld	e, a
      0029FC 56                    9632 	ld	d, (hl)
      0029FD 21r00r00              9633 	ld	hl, #_shadow_OAM
      002A00 19                    9634 	add	hl, de
      002A01 E5                    9635 	push	hl
      002A02 7D                    9636 	ld	a, l
      002A03 F8 03                 9637 	ldhl	sp,	#3
      002A05 77                    9638 	ld	(hl), a
      002A06 E1                    9639 	pop	hl
      002A07 7C                    9640 	ld	a, h
      002A08 F8 02                 9641 	ldhl	sp,	#2
      002A0A 32                    9642 	ld	(hl-), a
      002A0B 2A                    9643 	ld	a, (hl+)
      002A0C 5F                    9644 	ld	e, a
      002A0D 56                    9645 	ld	d, (hl)
      002A0E 21 03 00              9646 	ld	hl, #0x0003
      002A11 19                    9647 	add	hl, de
      002A12 E5                    9648 	push	hl
      002A13 7D                    9649 	ld	a, l
      002A14 F8 05                 9650 	ldhl	sp,	#5
      002A16 77                    9651 	ld	(hl), a
      002A17 E1                    9652 	pop	hl
      002A18 7C                    9653 	ld	a, h
      002A19 F8 04                 9654 	ldhl	sp,	#4
      002A1B 32                    9655 	ld	(hl-), a
      002A1C 2A                    9656 	ld	a,	(hl+)
      002A1D 66                    9657 	ld	h, (hl)
      002A1E 6F                    9658 	ld	l, a
      002A1F 36 60                 9659 	ld	(hl), #0x60
                                   9660 ;src/main.c:975: projectiles[oldestProjectile].offset = 4;
      002A21 21r91r00              9661 	ld	hl, #_oldestProjectile
      002A24 4E                    9662 	ld	c, (hl)
      002A25 06 00                 9663 	ld	b, #0x00
      002A27 69                    9664 	ld	l, c
      002A28 60                    9665 	ld	h, b
      002A29 29                    9666 	add	hl, hl
      002A2A 09                    9667 	add	hl, bc
      002A2B 29                    9668 	add	hl, hl
      002A2C 29                    9669 	add	hl, hl
      002A2D 09                    9670 	add	hl, bc
      002A2E E5                    9671 	push	hl
      002A2F 7D                    9672 	ld	a, l
      002A30 F8 05                 9673 	ldhl	sp,	#5
      002A32 77                    9674 	ld	(hl), a
      002A33 E1                    9675 	pop	hl
      002A34 7C                    9676 	ld	a, h
      002A35 F8 04                 9677 	ldhl	sp,	#4
      002A37 32                    9678 	ld	(hl-), a
      002A38 2A                    9679 	ld	a, (hl+)
      002A39 5F                    9680 	ld	e, a
      002A3A 56                    9681 	ld	d, (hl)
      002A3B 21rB4r00              9682 	ld	hl, #_projectiles
      002A3E 19                    9683 	add	hl, de
      002A3F E5                    9684 	push	hl
      002A40 7D                    9685 	ld	a, l
      002A41 F8 03                 9686 	ldhl	sp,	#3
      002A43 77                    9687 	ld	(hl), a
      002A44 E1                    9688 	pop	hl
      002A45 7C                    9689 	ld	a, h
      002A46 F8 02                 9690 	ldhl	sp,	#2
      002A48 32                    9691 	ld	(hl-), a
      002A49 2A                    9692 	ld	a, (hl+)
      002A4A 5F                    9693 	ld	e, a
      002A4B 56                    9694 	ld	d, (hl)
      002A4C 21 04 00              9695 	ld	hl, #0x0004
      002A4F 19                    9696 	add	hl, de
      002A50 E5                    9697 	push	hl
      002A51 7D                    9698 	ld	a, l
      002A52 F8 05                 9699 	ldhl	sp,	#5
      002A54 77                    9700 	ld	(hl), a
      002A55 E1                    9701 	pop	hl
      002A56 7C                    9702 	ld	a, h
      002A57 F8 04                 9703 	ldhl	sp,	#4
      002A59 32                    9704 	ld	(hl-), a
      002A5A 2A                    9705 	ld	a,	(hl+)
      002A5B 66                    9706 	ld	h, (hl)
      002A5C 6F                    9707 	ld	l, a
      002A5D 36 04                 9708 	ld	(hl), #0x04
      002A5F 18 5E                 9709 	jr	00141$
      002A61                       9710 00124$:
                                   9711 ;src/main.c:977: else if (xDir == -1 && yDir == -1) {
      002A61 F8 04                 9712 	ldhl	sp,	#4
      002A63 7E                    9713 	ld	a, (hl)
      002A64 B7                    9714 	or	a, a
      002A65 28 58                 9715 	jr	Z, 00141$
      002A67 F8 01                 9716 	ldhl	sp,	#1
      002A69 7E                    9717 	ld	a, (hl)
      002A6A B7                    9718 	or	a, a
      002A6B 28 52                 9719 	jr	Z, 00141$
                                   9720 ;src/main.c:978: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002A6D 23                    9721 	inc	hl
                                   9722 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002A6E 2A                    9723 	ld	a, (hl+)
      002A6F 22                    9724 	ld	(hl+), a
      002A70 36 00                 9725 	ld	(hl), #0x00
      002A72 3E 02                 9726 	ld	a, #0x02
      002A74                       9727 00277$:
      002A74 F8 03                 9728 	ldhl	sp,	#3
      002A76 CB 26                 9729 	sla	(hl)
      002A78 23                    9730 	inc	hl
      002A79 CB 16                 9731 	rl	(hl)
      002A7B 3D                    9732 	dec	a
      002A7C 20 F6                 9733 	jr	NZ, 00277$
      002A7E 2B                    9734 	dec	hl
      002A7F 2A                    9735 	ld	a, (hl+)
      002A80 5F                    9736 	ld	e, a
      002A81 56                    9737 	ld	d, (hl)
      002A82 21r00r00              9738 	ld	hl, #_shadow_OAM
      002A85 19                    9739 	add	hl, de
      002A86 E5                    9740 	push	hl
      002A87 7D                    9741 	ld	a, l
      002A88 F8 03                 9742 	ldhl	sp,	#3
      002A8A 77                    9743 	ld	(hl), a
      002A8B E1                    9744 	pop	hl
      002A8C 7C                    9745 	ld	a, h
      002A8D F8 02                 9746 	ldhl	sp,	#2
      002A8F 32                    9747 	ld	(hl-), a
      002A90 2A                    9748 	ld	a, (hl+)
      002A91 5F                    9749 	ld	e, a
      002A92 56                    9750 	ld	d, (hl)
      002A93 21 03 00              9751 	ld	hl, #0x0003
      002A96 19                    9752 	add	hl, de
      002A97 E5                    9753 	push	hl
      002A98 7D                    9754 	ld	a, l
      002A99 F8 05                 9755 	ldhl	sp,	#5
      002A9B 77                    9756 	ld	(hl), a
      002A9C E1                    9757 	pop	hl
      002A9D 7C                    9758 	ld	a, h
      002A9E F8 04                 9759 	ldhl	sp,	#4
      002AA0 32                    9760 	ld	(hl-), a
      002AA1 2A                    9761 	ld	a,	(hl+)
      002AA2 66                    9762 	ld	h, (hl)
      002AA3 6F                    9763 	ld	l, a
      002AA4 36 20                 9764 	ld	(hl), #0x20
                                   9765 ;src/main.c:979: projectiles[oldestProjectile].offset = 12;
      002AA6 21r91r00              9766 	ld	hl, #_oldestProjectile
      002AA9 4E                    9767 	ld	c, (hl)
      002AAA 06 00                 9768 	ld	b, #0x00
      002AAC 69                    9769 	ld	l, c
      002AAD 60                    9770 	ld	h, b
      002AAE 29                    9771 	add	hl, hl
      002AAF 09                    9772 	add	hl, bc
      002AB0 29                    9773 	add	hl, hl
      002AB1 29                    9774 	add	hl, hl
      002AB2 09                    9775 	add	hl, bc
      002AB3 01rB4r00              9776 	ld	bc,#_projectiles
      002AB6 09                    9777 	add	hl,bc
      002AB7 4D                    9778 	ld	c, l
      002AB8 44                    9779 	ld	b, h
      002AB9 21 04 00              9780 	ld	hl, #0x0004
      002ABC 09                    9781 	add	hl, bc
      002ABD 36 0C                 9782 	ld	(hl), #0x0c
      002ABF                       9783 00141$:
                                   9784 ;src/main.c:983: fireCooldown = projectiles[oldestProjectile].delay;
      002ABF 21r91r00              9785 	ld	hl, #_oldestProjectile
      002AC2 4E                    9786 	ld	c, (hl)
      002AC3 06 00                 9787 	ld	b, #0x00
      002AC5 69                    9788 	ld	l, c
      002AC6 60                    9789 	ld	h, b
      002AC7 29                    9790 	add	hl, hl
      002AC8 09                    9791 	add	hl, bc
      002AC9 29                    9792 	add	hl, hl
      002ACA 29                    9793 	add	hl, hl
      002ACB 09                    9794 	add	hl, bc
      002ACC 01rB4r00              9795 	ld	bc,#_projectiles
      002ACF 09                    9796 	add	hl,bc
      002AD0 4D                    9797 	ld	c, l
      002AD1 44                    9798 	ld	b, h
      002AD2 21 0B 00              9799 	ld	hl, #0x000b
      002AD5 09                    9800 	add	hl, bc
      002AD6 7E                    9801 	ld	a, (hl)
      002AD7 EAr92r00              9802 	ld	(#_fireCooldown),a
                                   9803 ;src/main.c:985: playSound(projectiles[oldestProjectile].type);
      002ADA 21 0C 00              9804 	ld	hl, #0x000c
      002ADD 09                    9805 	add	hl, bc
      002ADE 7E                    9806 	ld	a, (hl)
      002ADF F5                    9807 	push	af
      002AE0 33                    9808 	inc	sp
      002AE1 CDr98r0F              9809 	call	_playSound
      002AE4 33                    9810 	inc	sp
      002AE5                       9811 00154$:
                                   9812 ;src/main.c:989: }
      002AE5 E8 05                 9813 	add	sp, #5
      002AE7 C9                    9814 	ret
                                   9815 ;src/main.c:992: void moveProjectiles() {
                                   9816 ;	---------------------------------
                                   9817 ; Function moveProjectiles
                                   9818 ; ---------------------------------
      002AE8                       9819 _moveProjectiles::
      002AE8 E8 F9                 9820 	add	sp, #-7
                                   9821 ;src/main.c:993: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002AEA F8 06                 9822 	ldhl	sp,	#6
      002AEC 36 00                 9823 	ld	(hl), #0x00
      002AEE                       9824 00112$:
      002AEE 21r9Fr0B              9825 	ld	hl, #_PROJECTILECOUNT
      002AF1 4E                    9826 	ld	c, (hl)
      002AF2 F8 06                 9827 	ldhl	sp,	#6
      002AF4 7E                    9828 	ld	a, (hl)
      002AF5 91                    9829 	sub	a, c
      002AF6 D2r46r2C              9830 	jp	NC, 00114$
                                   9831 ;src/main.c:994: projectiles[i].x -= xOverflow;
      002AF9 4E                    9832 	ld	c, (hl)
      002AFA 06 00                 9833 	ld	b, #0x00
      002AFC 69                    9834 	ld	l, c
      002AFD 60                    9835 	ld	h, b
      002AFE 29                    9836 	add	hl, hl
      002AFF 09                    9837 	add	hl, bc
      002B00 29                    9838 	add	hl, hl
      002B01 29                    9839 	add	hl, hl
      002B02 09                    9840 	add	hl, bc
      002B03 01rB4r00              9841 	ld	bc,#_projectiles
      002B06 09                    9842 	add	hl,bc
      002B07 33                    9843 	inc	sp
      002B08 33                    9844 	inc	sp
      002B09 5D                    9845 	ld	e, l
      002B0A 54                    9846 	ld	d, h
      002B0B D5                    9847 	push	de
      002B0C 1A                    9848 	ld	a, (de)
      002B0D 4F                    9849 	ld	c, a
      002B0E 13                    9850 	inc	de
      002B0F 1A                    9851 	ld	a, (de)
      002B10 47                    9852 	ld	b, a
      002B11 79                    9853 	ld	a, c
      002B12 21rA1r00              9854 	ld	hl, #_xOverflow
      002B15 96                    9855 	sub	a, (hl)
      002B16 23                    9856 	inc	hl
      002B17 4F                    9857 	ld	c, a
      002B18 78                    9858 	ld	a, b
      002B19 9E                    9859 	sbc	a, (hl)
      002B1A 47                    9860 	ld	b, a
      002B1B E1                    9861 	pop	hl
      002B1C E5                    9862 	push	hl
      002B1D 79                    9863 	ld	a, c
      002B1E 22                    9864 	ld	(hl+), a
      002B1F 70                    9865 	ld	(hl), b
                                   9866 ;src/main.c:995: projectiles[i].y -= yOverflow;
      002B20 D1                    9867 	pop	de
      002B21 D5                    9868 	push	de
      002B22 21 02 00              9869 	ld	hl, #0x0002
      002B25 19                    9870 	add	hl, de
      002B26 E5                    9871 	push	hl
      002B27 7D                    9872 	ld	a, l
      002B28 F8 04                 9873 	ldhl	sp,	#4
      002B2A 77                    9874 	ld	(hl), a
      002B2B E1                    9875 	pop	hl
      002B2C 7C                    9876 	ld	a, h
      002B2D F8 03                 9877 	ldhl	sp,	#3
      002B2F 32                    9878 	ld	(hl-), a
      002B30 2A                    9879 	ld	a, (hl+)
      002B31 5F                    9880 	ld	e, a
      002B32 56                    9881 	ld	d, (hl)
      002B33 1A                    9882 	ld	a, (de)
      002B34 4F                    9883 	ld	c, a
      002B35 13                    9884 	inc	de
      002B36 1A                    9885 	ld	a, (de)
      002B37 47                    9886 	ld	b, a
      002B38 79                    9887 	ld	a, c
      002B39 21rA3r00              9888 	ld	hl, #_yOverflow
      002B3C 96                    9889 	sub	a, (hl)
      002B3D 23                    9890 	inc	hl
      002B3E 4F                    9891 	ld	c, a
      002B3F 78                    9892 	ld	a, b
      002B40 9E                    9893 	sbc	a, (hl)
      002B41 47                    9894 	ld	b, a
      002B42 F8 02                 9895 	ldhl	sp,	#2
      002B44 2A                    9896 	ld	a,	(hl+)
      002B45 66                    9897 	ld	h, (hl)
      002B46 6F                    9898 	ld	l, a
      002B47 79                    9899 	ld	a, c
      002B48 22                    9900 	ld	(hl+), a
      002B49 70                    9901 	ld	(hl), b
                                   9902 ;src/main.c:997: if (projectiles[i].active) {
      002B4A D1                    9903 	pop	de
      002B4B D5                    9904 	push	de
      002B4C 21 0A 00              9905 	ld	hl, #0x000a
      002B4F 19                    9906 	add	hl, de
      002B50 4D                    9907 	ld	c, l
      002B51 44                    9908 	ld	b, h
      002B52 0A                    9909 	ld	a, (bc)
      002B53 B7                    9910 	or	a, a
      002B54 CAr40r2C              9911 	jp	Z, 00113$
                                   9912 ;src/main.c:998: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002B57 F8 02                 9913 	ldhl	sp,#2
      002B59 2A                    9914 	ld	a, (hl+)
      002B5A 5F                    9915 	ld	e, a
      002B5B 56                    9916 	ld	d, (hl)
      002B5C 1A                    9917 	ld	a, (de)
      002B5D 4F                    9918 	ld	c, a
      002B5E 13                    9919 	inc	de
      002B5F 1A                    9920 	ld	a, (de)
      002B60 47                    9921 	ld	b, a
      002B61 D1                    9922 	pop	de
      002B62 D5                    9923 	push	de
      002B63 21 06 00              9924 	ld	hl, #0x0006
      002B66 19                    9925 	add	hl, de
      002B67 5D                    9926 	ld	e, l
      002B68 54                    9927 	ld	d, h
      002B69 1A                    9928 	ld	a, (de)
      002B6A 6F                    9929 	ld	l, a
                                   9930 ;	spillPairReg hl
                                   9931 ;	spillPairReg hl
      002B6B 07                    9932 	rlca
      002B6C 9F                    9933 	sbc	a, a
      002B6D 67                    9934 	ld	h, a
                                   9935 ;	spillPairReg hl
                                   9936 ;	spillPairReg hl
      002B6E 09                    9937 	add	hl, bc
      002B6F 4D                    9938 	ld	c, l
      002B70 44                    9939 	ld	b, h
      002B71 F8 04                 9940 	ldhl	sp,	#4
      002B73 79                    9941 	ld	a, c
      002B74 22                    9942 	ld	(hl+), a
      002B75 70                    9943 	ld	(hl), b
                                   9944 ;src/main.c:999: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002B76 D1                    9945 	pop	de
      002B77 D5                    9946 	push	de
      002B78 1A                    9947 	ld	a, (de)
      002B79 4F                    9948 	ld	c, a
      002B7A 13                    9949 	inc	de
      002B7B 1A                    9950 	ld	a, (de)
      002B7C 47                    9951 	ld	b, a
      002B7D D1                    9952 	pop	de
      002B7E D5                    9953 	push	de
      002B7F 21 05 00              9954 	ld	hl, #0x0005
      002B82 19                    9955 	add	hl, de
      002B83 5D                    9956 	ld	e, l
      002B84 54                    9957 	ld	d, h
      002B85 1A                    9958 	ld	a, (de)
      002B86 6F                    9959 	ld	l, a
                                   9960 ;	spillPairReg hl
                                   9961 ;	spillPairReg hl
      002B87 07                    9962 	rlca
      002B88 9F                    9963 	sbc	a, a
      002B89 67                    9964 	ld	h, a
                                   9965 ;	spillPairReg hl
                                   9966 ;	spillPairReg hl
      002B8A 09                    9967 	add	hl, bc
      002B8B 4D                    9968 	ld	c, l
      002B8C 44                    9969 	ld	b, h
                                   9970 ;src/main.c:1002: projectiles[i].y = newY;
      002B8D F8 02                 9971 	ldhl	sp,#2
      002B8F 2A                    9972 	ld	a, (hl+)
      002B90 5F                    9973 	ld	e, a
      002B91 2A                    9974 	ld	a, (hl+)
      002B92 57                    9975 	ld	d, a
      002B93 2A                    9976 	ld	a, (hl+)
      002B94 12                    9977 	ld	(de), a
      002B95 13                    9978 	inc	de
      002B96 7E                    9979 	ld	a, (hl)
      002B97 12                    9980 	ld	(de), a
                                   9981 ;src/main.c:1003: projectiles[i].x = newX;
      002B98 E1                    9982 	pop	hl
      002B99 E5                    9983 	push	hl
      002B9A 79                    9984 	ld	a, c
      002B9B 22                    9985 	ld	(hl+), a
      002B9C 70                    9986 	ld	(hl), b
                                   9987 ;src/main.c:1007: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002B9D F8 04                 9988 	ldhl	sp,	#4
      002B9F 2A                    9989 	ld	a, (hl+)
      002BA0 77                    9990 	ld	(hl), a
      002BA1 D1                    9991 	pop	de
      002BA2 D5                    9992 	push	de
      002BA3 21 04 00              9993 	ld	hl, #0x0004
      002BA6 19                    9994 	add	hl, de
      002BA7 5D                    9995 	ld	e, l
      002BA8 54                    9996 	ld	d, h
      002BA9 1A                    9997 	ld	a, (de)
      002BAA F8 05                 9998 	ldhl	sp,	#5
      002BAC 86                    9999 	add	a, (hl)
      002BAD 2B                   10000 	dec	hl
      002BAE 5F                   10001 	ld	e, a
      002BAF 79                   10002 	ld	a, c
      002BB0 C6 04                10003 	add	a, #0x04
      002BB2 22                   10004 	ld	(hl+), a
      002BB3 23                   10005 	inc	hl
      002BB4 3A                   10006 	ld	a, (hl-)
      002BB5 C6 1E                10007 	add	a, #0x1e
      002BB7 77                   10008 	ld	(hl), a
      002BB8 56                   10009 	ld	d, (hl)
                                  10010 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002BB9 26 00                10011 	ld	h, #0x00
                                  10012 ;	spillPairReg hl
                                  10013 ;	spillPairReg hl
      002BBB 6A                   10014 	ld	l, d
      002BBC 29                   10015 	add	hl, hl
      002BBD 29                   10016 	add	hl, hl
      002BBE D5                   10017 	push	de
      002BBF 11r00r00             10018 	ld	de, #_shadow_OAM
      002BC2 19                   10019 	add	hl, de
      002BC3 D1                   10020 	pop	de
                                  10021 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002BC4 7B                   10022 	ld	a, e
      002BC5 22                   10023 	ld	(hl+), a
      002BC6 5D                   10024 	ld	e, l
      002BC7 54                   10025 	ld	d, h
      002BC8 F8 04                10026 	ldhl	sp,	#4
      002BCA 7E                   10027 	ld	a, (hl)
      002BCB 12                   10028 	ld	(de), a
                                  10029 ;src/main.c:1011: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002BCC D1                   10030 	pop	de
      002BCD D5                   10031 	push	de
      002BCE 1A                   10032 	ld	a, (de)
      002BCF 6F                   10033 	ld	l, a
                                  10034 ;	spillPairReg hl
                                  10035 ;	spillPairReg hl
      002BD0 13                   10036 	inc	de
      002BD1 1A                   10037 	ld	a, (de)
      002BD2 67                   10038 	ld	h, a
                                  10039 ;	spillPairReg hl
                                  10040 ;	spillPairReg hl
      002BD3 CB 78                10041 	bit	7, b
      002BD5 20 44                10042 	jr	NZ, 00101$
      002BD7 5C                   10043 	ld	e, h
      002BD8 16 00                10044 	ld	d, #0x00
      002BDA 3E AA                10045 	ld	a, #0xaa
      002BDC BD                   10046 	cp	a, l
      002BDD 3E 00                10047 	ld	a, #0x00
      002BDF 9C                   10048 	sbc	a, h
      002BE0 CB 7B                10049 	bit	7, e
      002BE2 28 07                10050 	jr	Z, 00147$
      002BE4 CB 7A                10051 	bit	7, d
      002BE6 20 08                10052 	jr	NZ, 00148$
      002BE8 BF                   10053 	cp	a, a
      002BE9 18 05                10054 	jr	00148$
      002BEB                      10055 00147$:
      002BEB CB 7A                10056 	bit	7, d
      002BED 28 01                10057 	jr	Z, 00148$
      002BEF 37                   10058 	scf
      002BF0                      10059 00148$:
      002BF0 38 29                10060 	jr	C, 00101$
                                  10061 ;src/main.c:995: projectiles[i].y -= yOverflow;
      002BF2 F8 02                10062 	ldhl	sp,#2
      002BF4 2A                   10063 	ld	a, (hl+)
      002BF5 5F                   10064 	ld	e, a
      002BF6 56                   10065 	ld	d, (hl)
      002BF7 1A                   10066 	ld	a, (de)
      002BF8 4F                   10067 	ld	c, a
      002BF9 13                   10068 	inc	de
      002BFA 1A                   10069 	ld	a, (de)
                                  10070 ;src/main.c:1011: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002BFB 47                   10071 	ld	b, a
      002BFC CB 78                10072 	bit	7, b
      002BFE 20 1B                10073 	jr	NZ, 00101$
      002C00 58                   10074 	ld	e, b
      002C01 16 00                10075 	ld	d, #0x00
      002C03 3E 9A                10076 	ld	a, #0x9a
      002C05 B9                   10077 	cp	a, c
      002C06 3E 00                10078 	ld	a, #0x00
      002C08 98                   10079 	sbc	a, b
      002C09 CB 7B                10080 	bit	7, e
      002C0B 28 07                10081 	jr	Z, 00149$
      002C0D CB 7A                10082 	bit	7, d
      002C0F 20 08                10083 	jr	NZ, 00150$
      002C11 BF                   10084 	cp	a, a
      002C12 18 05                10085 	jr	00150$
      002C14                      10086 00149$:
      002C14 CB 7A                10087 	bit	7, d
      002C16 28 01                10088 	jr	Z, 00150$
      002C18 37                   10089 	scf
      002C19                      10090 00150$:
      002C19 30 25                10091 	jr	NC, 00113$
      002C1B                      10092 00101$:
                                  10093 ;src/main.c:1012: projectiles[i].active = 0;
      002C1B F8 06                10094 	ldhl	sp,	#6
      002C1D 4E                   10095 	ld	c, (hl)
      002C1E 06 00                10096 	ld	b, #0x00
      002C20 69                   10097 	ld	l, c
      002C21 60                   10098 	ld	h, b
      002C22 29                   10099 	add	hl, hl
      002C23 09                   10100 	add	hl, bc
      002C24 29                   10101 	add	hl, hl
      002C25 29                   10102 	add	hl, hl
      002C26 09                   10103 	add	hl, bc
      002C27 11rB4r00             10104 	ld	de, #_projectiles
      002C2A 19                   10105 	add	hl, de
      002C2B 01 0A 00             10106 	ld	bc, #0x000a
      002C2E 09                   10107 	add	hl, bc
      002C2F 36 00                10108 	ld	(hl), #0x00
                                  10109 ;src/main.c:1013: set_sprite_tile(30+i, 0x7f);
      002C31 F8 05                10110 	ldhl	sp,	#5
                                  10111 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002C33 6E                   10112 	ld	l, (hl)
                                  10113 ;	spillPairReg hl
                                  10114 ;	spillPairReg hl
      002C34 26 00                10115 	ld	h, #0x00
                                  10116 ;	spillPairReg hl
                                  10117 ;	spillPairReg hl
      002C36 29                   10118 	add	hl, hl
      002C37 29                   10119 	add	hl, hl
      002C38 11r00r00             10120 	ld	de, #_shadow_OAM
      002C3B 19                   10121 	add	hl, de
      002C3C 23                   10122 	inc	hl
      002C3D 23                   10123 	inc	hl
      002C3E 36 7F                10124 	ld	(hl), #0x7f
                                  10125 ;src/main.c:1013: set_sprite_tile(30+i, 0x7f);
      002C40                      10126 00113$:
                                  10127 ;src/main.c:993: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002C40 F8 06                10128 	ldhl	sp,	#6
      002C42 34                   10129 	inc	(hl)
      002C43 C3rEEr2A             10130 	jp	00112$
      002C46                      10131 00114$:
                                  10132 ;src/main.c:1017: }
      002C46 E8 07                10133 	add	sp, #7
      002C48 C9                   10134 	ret
                                  10135 ;src/main.c:1019: void tickPickups() {
                                  10136 ;	---------------------------------
                                  10137 ; Function tickPickups
                                  10138 ; ---------------------------------
      002C49                      10139 _tickPickups::
      002C49 3B                   10140 	dec	sp
      002C4A 3B                   10141 	dec	sp
                                  10142 ;src/main.c:1020: pickup.x -= xOverflow;
      002C4B 21rFBr00             10143 	ld	hl, #(_pickup + 1)
      002C4E 2A                   10144 	ld	a, (hl+)
      002C4F 47                   10145 	ld	b, a
      002C50 4E                   10146 	ld	c, (hl)
      002C51 58                   10147 	ld	e, b
      002C52 51                   10148 	ld	d, c
      002C53 21rA1r00             10149 	ld	hl, #_xOverflow
      002C56 2A                   10150 	ld	a,	(hl+)
      002C57 66                   10151 	ld	h, (hl)
      002C58 6F                   10152 	ld	l, a
      002C59 7B                   10153 	ld	a, e
      002C5A 95                   10154 	sub	a, l
      002C5B 5F                   10155 	ld	e, a
      002C5C 7A                   10156 	ld	a, d
      002C5D 9C                   10157 	sbc	a, h
      002C5E F8 01                10158 	ldhl	sp,	#1
      002C60 32                   10159 	ld	(hl-), a
      002C61 73                   10160 	ld	(hl), e
      002C62 11rFBr00             10161 	ld	de, #(_pickup + 1)
      002C65 2A                   10162 	ld	a, (hl+)
      002C66 12                   10163 	ld	(de), a
      002C67 13                   10164 	inc	de
      002C68 7E                   10165 	ld	a, (hl)
      002C69 12                   10166 	ld	(de), a
                                  10167 ;src/main.c:1021: pickup.y -= yOverflow;
      002C6A 21rFDr00             10168 	ld	hl, #(_pickup + 3)
      002C6D 2A                   10169 	ld	a, (hl+)
      002C6E 4F                   10170 	ld	c, a
      002C6F 46                   10171 	ld	b, (hl)
      002C70 79                   10172 	ld	a, c
      002C71 21rA3r00             10173 	ld	hl, #_yOverflow
      002C74 96                   10174 	sub	a, (hl)
      002C75 23                   10175 	inc	hl
      002C76 4F                   10176 	ld	c, a
      002C77 78                   10177 	ld	a, b
      002C78 9E                   10178 	sbc	a, (hl)
      002C79 47                   10179 	ld	b, a
      002C7A 21rFDr00             10180 	ld	hl, #(_pickup + 3)
      002C7D 79                   10181 	ld	a, c
      002C7E 22                   10182 	ld	(hl+), a
      002C7F 70                   10183 	ld	(hl), b
                                  10184 ;src/main.c:1023: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002C80 79                   10185 	ld	a, c
      002C81 C6 0C                10186 	add	a, #0x0c
      002C83 47                   10187 	ld	b, a
      002C84 F8 00                10188 	ldhl	sp,	#0
      002C86 7E                   10189 	ld	a, (hl)
      002C87 C6 04                10190 	add	a, #0x04
      002C89 4F                   10191 	ld	c, a
                                  10192 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002C8A 21r0Cr00             10193 	ld	hl, #(_shadow_OAM + 12)
                                  10194 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002C8D 78                   10195 	ld	a, b
      002C8E 22                   10196 	ld	(hl+), a
      002C8F 71                   10197 	ld	(hl), c
                                  10198 ;src/main.c:1024: if (pickup.active) {
      002C90 FArFFr00             10199 	ld	a, (#(_pickup + 5) + 0)
      002C93 B7                   10200 	or	a, a
      002C94 CAr16r2E             10201 	jp	Z, 00143$
                                  10202 ;src/main.c:1025: if (pickup.visible) {
      002C97 21rFAr00             10203 	ld	hl, #_pickup
      002C9A 4E                   10204 	ld	c, (hl)
                                  10205 ;src/main.c:1020: pickup.x -= xOverflow;
      002C9B 11rFBr00             10206 	ld	de, #(_pickup + 1)
      002C9E 1A                   10207 	ld	a, (de)
      002C9F F8 00                10208 	ldhl	sp,	#0
      002CA1 22                   10209 	ld	(hl+), a
      002CA2 13                   10210 	inc	de
      002CA3 1A                   10211 	ld	a, (de)
      002CA4 77                   10212 	ld	(hl), a
                                  10213 ;src/main.c:1025: if (pickup.visible) {
      002CA5 79                   10214 	ld	a, c
      002CA6 B7                   10215 	or	a, a
      002CA7 CArAAr2D             10216 	jp	Z, 00127$
                                  10217 ;src/main.c:1026: if (abs(pickup.x - playerDrawX) < 10) {
      002CAA 2B                   10218 	dec	hl
      002CAB 7E                   10219 	ld	a, (hl)
      002CAC 21r9Br00             10220 	ld	hl, #_playerDrawX
      002CAF 4E                   10221 	ld	c, (hl)
      002CB0 91                   10222 	sub	a, c
      002CB1 4F                   10223 	ld	c, a
                                  10224 ;src/main.c:359: if (value >= 0) return value;
      002CB2 CB 79                10225 	bit	7, c
      002CB4 28 03                10226 	jr	Z, 00135$
                                  10227 ;src/main.c:360: else return - value;
      002CB6 AF                   10228 	xor	a, a
      002CB7 91                   10229 	sub	a, c
      002CB8 4F                   10230 	ld	c, a
                                  10231 ;src/main.c:1026: if (abs(pickup.x - playerDrawX) < 10) {
      002CB9                      10232 00135$:
      002CB9 79                   10233 	ld	a, c
      002CBA EE 80                10234 	xor	a, #0x80
      002CBC D6 8A                10235 	sub	a, #0x8a
      002CBE D2r4Dr2D             10236 	jp	NC, 00115$
                                  10237 ;src/main.c:1027: if (abs(pickup.y - playerDrawY) < 10) {
      002CC1 FArFDr00             10238 	ld	a, (#(_pickup + 3) + 0)
      002CC4 F8 01                10239 	ldhl	sp,	#1
      002CC6 77                   10240 	ld	(hl), a
      002CC7 21r9Cr00             10241 	ld	hl, #_playerDrawY
      002CCA 4E                   10242 	ld	c, (hl)
      002CCB F8 01                10243 	ldhl	sp,	#1
      002CCD 7E                   10244 	ld	a, (hl)
      002CCE 91                   10245 	sub	a, c
      002CCF 77                   10246 	ld	(hl), a
                                  10247 ;src/main.c:359: if (value >= 0) return value;
      002CD0 CB 7E                10248 	bit	7, (hl)
      002CD2 28 05                10249 	jr	Z, 00139$
                                  10250 ;src/main.c:360: else return - value;
      002CD4 AF                   10251 	xor	a, a
      002CD5 F8 01                10252 	ldhl	sp,	#1
      002CD7 96                   10253 	sub	a, (hl)
      002CD8 77                   10254 	ld	(hl), a
                                  10255 ;src/main.c:1027: if (abs(pickup.y - playerDrawY) < 10) {
      002CD9                      10256 00139$:
      002CD9 F8 01                10257 	ldhl	sp,	#1
      002CDB 7E                   10258 	ld	a, (hl)
      002CDC EE 80                10259 	xor	a, #0x80
      002CDE D6 8A                10260 	sub	a, #0x8a
      002CE0 30 6B                10261 	jr	NC, 00115$
                                  10262 ;src/main.c:1028: if (pickup.type == 0) { //upgrade
      002CE2 FAr00r01             10263 	ld	a, (#(_pickup + 6) + 0)
      002CE5 B7                   10264 	or	a, a
      002CE6 20 0D                10265 	jr	NZ, 00104$
                                  10266 ;src/main.c:1029: if (gunLevel < 1) {
      002CE8 21rA6r00             10267 	ld	hl, #_gunLevel
      002CEB 7E                   10268 	ld	a, (hl)
      002CEC D6 01                10269 	sub	a, #0x01
      002CEE 30 05                10270 	jr	NC, 00104$
                                  10271 ;src/main.c:1030: gunLevel += 1;
      002CF0 34                   10272 	inc	(hl)
      002CF1 7E                   10273 	ld	a, (hl)
                                  10274 ;src/main.c:1031: setGunIcon();
      002CF2 CDr0Cr25             10275 	call	_setGunIcon
      002CF5                      10276 00104$:
                                  10277 ;src/main.c:1034: if (pickup.type == 1) { //missile ammo
      002CF5 21r00r01             10278 	ld	hl, #(_pickup + 6)
      002CF8 6E                   10279 	ld	l, (hl)
                                  10280 ;	spillPairReg hl
                                  10281 ;src/main.c:1035: updateMissileCount(pickup.amount);
      002CF9 01r01r01             10282 	ld	bc, #_pickup + 7
                                  10283 ;src/main.c:1034: if (pickup.type == 1) { //missile ammo
      002CFC 2D                   10284 	dec	l
      002CFD 20 09                10285 	jr	NZ, 00106$
                                  10286 ;src/main.c:1035: updateMissileCount(pickup.amount);
      002CFF 0A                   10287 	ld	a, (bc)
      002D00 C5                   10288 	push	bc
      002D01 F5                   10289 	push	af
      002D02 33                   10290 	inc	sp
      002D03 CDrE1r0C             10291 	call	_updateMissileCount
      002D06 33                   10292 	inc	sp
      002D07 C1                   10293 	pop	bc
      002D08                      10294 00106$:
                                  10295 ;src/main.c:1037: if (pickup.type == 2) {
      002D08 FAr00r01             10296 	ld	a, (#(_pickup + 6) + 0)
      002D0B D6 02                10297 	sub	a, #0x02
      002D0D 20 34                10298 	jr	NZ, 00111$
                                  10299 ;src/main.c:1038: if (hull + pickup.amount <= 100) {
      002D0F 21rF6r00             10300 	ld	hl, #_hull
      002D12 5E                   10301 	ld	e, (hl)
      002D13 16 00                10302 	ld	d, #0x00
      002D15 0A                   10303 	ld	a, (bc)
      002D16 4F                   10304 	ld	c, a
      002D17 69                   10305 	ld	l, c
                                  10306 ;	spillPairReg hl
                                  10307 ;	spillPairReg hl
      002D18 26 00                10308 	ld	h, #0x00
                                  10309 ;	spillPairReg hl
                                  10310 ;	spillPairReg hl
      002D1A 19                   10311 	add	hl, de
      002D1B 5C                   10312 	ld	e, h
      002D1C 16 00                10313 	ld	d, #0x00
      002D1E 3E 64                10314 	ld	a, #0x64
      002D20 BD                   10315 	cp	a, l
      002D21 3E 00                10316 	ld	a, #0x00
      002D23 9C                   10317 	sbc	a, h
      002D24 CB 7B                10318 	bit	7, e
      002D26 28 07                10319 	jr	Z, 00239$
      002D28 CB 7A                10320 	bit	7, d
      002D2A 20 08                10321 	jr	NZ, 00240$
      002D2C BF                   10322 	cp	a, a
      002D2D 18 05                10323 	jr	00240$
      002D2F                      10324 00239$:
      002D2F CB 7A                10325 	bit	7, d
      002D31 28 01                10326 	jr	Z, 00240$
      002D33 37                   10327 	scf
      002D34                      10328 00240$:
      002D34 38 08                10329 	jr	C, 00108$
                                  10330 ;src/main.c:1039: hull += pickup.amount;
      002D36 79                   10331 	ld	a, c
      002D37 21rF6r00             10332 	ld	hl, #_hull
      002D3A 86                   10333 	add	a, (hl)
      002D3B 77                   10334 	ld	(hl), a
      002D3C 18 05                10335 	jr	00111$
      002D3E                      10336 00108$:
                                  10337 ;src/main.c:1042: hull = 100;
      002D3E 21rF6r00             10338 	ld	hl, #_hull
      002D41 36 64                10339 	ld	(hl), #0x64
      002D43                      10340 00111$:
                                  10341 ;src/main.c:1045: pickup.active = 0;
      002D43 21rFFr00             10342 	ld	hl, #(_pickup + 5)
      002D46 36 00                10343 	ld	(hl), #0x00
                                  10344 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002D48 21r0Er00             10345 	ld	hl, #(_shadow_OAM + 14)
      002D4B 36 7F                10346 	ld	(hl), #0x7f
                                  10347 ;src/main.c:1046: set_sprite_tile(3, 0x7f);
      002D4D                      10348 00115$:
                                  10349 ;src/main.c:1020: pickup.x -= xOverflow;
      002D4D 21rFBr00             10350 	ld	hl, #(_pickup + 1)
      002D50 2A                   10351 	ld	a, (hl+)
      002D51 4F                   10352 	ld	c, a
      002D52 46                   10353 	ld	b, (hl)
                                  10354 ;src/main.c:1049: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      002D53 79                   10355 	ld	a, c
      002D54 D6 F6                10356 	sub	a, #0xf6
      002D56 78                   10357 	ld	a, b
      002D57 17                   10358 	rla
      002D58 3F                   10359 	ccf
      002D59 1F                   10360 	rra
      002D5A DE 7F                10361 	sbc	a, #0x7f
      002D5C 38 40                10362 	jr	C, 00116$
      002D5E 58                   10363 	ld	e, b
      002D5F 16 00                10364 	ld	d, #0x00
      002D61 3E AA                10365 	ld	a, #0xaa
      002D63 B9                   10366 	cp	a, c
      002D64 3E 00                10367 	ld	a, #0x00
      002D66 98                   10368 	sbc	a, b
      002D67 CB 7B                10369 	bit	7, e
      002D69 28 07                10370 	jr	Z, 00241$
      002D6B CB 7A                10371 	bit	7, d
      002D6D 20 08                10372 	jr	NZ, 00242$
      002D6F BF                   10373 	cp	a, a
      002D70 18 05                10374 	jr	00242$
      002D72                      10375 00241$:
      002D72 CB 7A                10376 	bit	7, d
      002D74 28 01                10377 	jr	Z, 00242$
      002D76 37                   10378 	scf
      002D77                      10379 00242$:
      002D77 38 25                10380 	jr	C, 00116$
                                  10381 ;src/main.c:1021: pickup.y -= yOverflow;
      002D79 21rFDr00             10382 	ld	hl, #(_pickup + 3)
      002D7C 2A                   10383 	ld	a, (hl+)
      002D7D 4F                   10384 	ld	c, a
      002D7E 46                   10385 	ld	b, (hl)
                                  10386 ;src/main.c:1049: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      002D7F CB 78                10387 	bit	7, b
      002D81 20 1B                10388 	jr	NZ, 00116$
      002D83 58                   10389 	ld	e, b
      002D84 16 00                10390 	ld	d, #0x00
      002D86 3E 9B                10391 	ld	a, #0x9b
      002D88 B9                   10392 	cp	a, c
      002D89 3E 00                10393 	ld	a, #0x00
      002D8B 98                   10394 	sbc	a, b
      002D8C CB 7B                10395 	bit	7, e
      002D8E 28 07                10396 	jr	Z, 00243$
      002D90 CB 7A                10397 	bit	7, d
      002D92 20 08                10398 	jr	NZ, 00244$
      002D94 BF                   10399 	cp	a, a
      002D95 18 05                10400 	jr	00244$
      002D97                      10401 00243$:
      002D97 CB 7A                10402 	bit	7, d
      002D99 28 01                10403 	jr	Z, 00244$
      002D9B 37                   10404 	scf
      002D9C                      10405 00244$:
      002D9C 30 78                10406 	jr	NC, 00143$
      002D9E                      10407 00116$:
                                  10408 ;src/main.c:1050: pickup.visible = 0;
      002D9E 21rFAr00             10409 	ld	hl, #_pickup
      002DA1 36 00                10410 	ld	(hl), #0x00
                                  10411 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002DA3 21r0Er00             10412 	ld	hl, #(_shadow_OAM + 14)
      002DA6 36 7F                10413 	ld	(hl), #0x7f
                                  10414 ;src/main.c:1051: set_sprite_tile(3, 0x7f);
      002DA8 18 6C                10415 	jr	00143$
      002DAA                      10416 00127$:
                                  10417 ;src/main.c:1055: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      002DAA F8 00                10418 	ldhl	sp,	#0
      002DAC 2A                   10419 	ld	a, (hl+)
      002DAD D6 F6                10420 	sub	a, #0xf6
      002DAF 7E                   10421 	ld	a, (hl)
      002DB0 DE FF                10422 	sbc	a, #0xff
      002DB2 56                   10423 	ld	d, (hl)
      002DB3 3E FF                10424 	ld	a, #0xff
      002DB5 CB 7F                10425 	bit	7,a
      002DB7 28 07                10426 	jr	Z, 00245$
      002DB9 CB 7A                10427 	bit	7, d
      002DBB 20 08                10428 	jr	NZ, 00246$
      002DBD BF                   10429 	cp	a, a
      002DBE 18 05                10430 	jr	00246$
      002DC0                      10431 00245$:
      002DC0 CB 7A                10432 	bit	7, d
      002DC2 28 01                10433 	jr	Z, 00246$
      002DC4 37                   10434 	scf
      002DC5                      10435 00246$:
      002DC5 38 4F                10436 	jr	C, 00143$
      002DC7 C1                   10437 	pop	bc
      002DC8 C5                   10438 	push	bc
      002DC9 58                   10439 	ld	e, b
      002DCA 16 00                10440 	ld	d, #0x00
      002DCC 3E AA                10441 	ld	a, #0xaa
      002DCE B9                   10442 	cp	a, c
      002DCF 3E 00                10443 	ld	a, #0x00
      002DD1 98                   10444 	sbc	a, b
      002DD2 CB 7B                10445 	bit	7, e
      002DD4 28 07                10446 	jr	Z, 00247$
      002DD6 CB 7A                10447 	bit	7, d
      002DD8 20 08                10448 	jr	NZ, 00248$
      002DDA BF                   10449 	cp	a, a
      002DDB 18 05                10450 	jr	00248$
      002DDD                      10451 00247$:
      002DDD CB 7A                10452 	bit	7, d
      002DDF 28 01                10453 	jr	Z, 00248$
      002DE1 37                   10454 	scf
      002DE2                      10455 00248$:
      002DE2 38 32                10456 	jr	C, 00143$
      002DE4 21rFDr00             10457 	ld	hl, #(_pickup + 3)
      002DE7 2A                   10458 	ld	a, (hl+)
      002DE8 4F                   10459 	ld	c, a
      002DE9 46                   10460 	ld	b, (hl)
      002DEA CB 78                10461 	bit	7, b
      002DEC 20 28                10462 	jr	NZ, 00143$
      002DEE 58                   10463 	ld	e, b
      002DEF 16 00                10464 	ld	d, #0x00
      002DF1 3E 9B                10465 	ld	a, #0x9b
      002DF3 B9                   10466 	cp	a, c
      002DF4 3E 00                10467 	ld	a, #0x00
      002DF6 98                   10468 	sbc	a, b
      002DF7 CB 7B                10469 	bit	7, e
      002DF9 28 07                10470 	jr	Z, 00249$
      002DFB CB 7A                10471 	bit	7, d
      002DFD 20 08                10472 	jr	NZ, 00250$
      002DFF BF                   10473 	cp	a, a
      002E00 18 05                10474 	jr	00250$
      002E02                      10475 00249$:
      002E02 CB 7A                10476 	bit	7, d
      002E04 28 01                10477 	jr	Z, 00250$
      002E06 37                   10478 	scf
      002E07                      10479 00250$:
      002E07 38 0D                10480 	jr	C, 00143$
                                  10481 ;src/main.c:1056: pickup.visible = 1;
      002E09 21rFAr00             10482 	ld	hl, #_pickup
      002E0C 36 01                10483 	ld	(hl), #0x01
                                  10484 ;src/main.c:1057: set_sprite_tile(3, pickup.tile);
      002E0E 21r02r01             10485 	ld	hl, #(_pickup + 8)
      002E11 4E                   10486 	ld	c, (hl)
                                  10487 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002E12 21r0Er00             10488 	ld	hl, #(_shadow_OAM + 14)
      002E15 71                   10489 	ld	(hl), c
                                  10490 ;src/main.c:1057: set_sprite_tile(3, pickup.tile);
      002E16                      10491 00143$:
                                  10492 ;src/main.c:1062: }
      002E16 33                   10493 	inc	sp
      002E17 33                   10494 	inc	sp
      002E18 C9                   10495 	ret
                                  10496 ;src/main.c:1064: void tickEx() {
                                  10497 ;	---------------------------------
                                  10498 ; Function tickEx
                                  10499 ; ---------------------------------
      002E19                      10500 _tickEx::
      002E19 3B                   10501 	dec	sp
      002E1A 3B                   10502 	dec	sp
                                  10503 ;src/main.c:1065: explosions[oldestEx].frameCounter++;
      002E1B 21rBCr00             10504 	ld	hl, #_oldestEx
      002E1E 4E                   10505 	ld	c, (hl)
      002E1F 06 00                10506 	ld	b, #0x00
      002E21 69                   10507 	ld	l, c
      002E22 60                   10508 	ld	h, b
      002E23 29                   10509 	add	hl, hl
      002E24 09                   10510 	add	hl, bc
      002E25 29                   10511 	add	hl, hl
      002E26 01r03r01             10512 	ld	bc,#_explosions
      002E29 09                   10513 	add	hl,bc
      002E2A 01 04 00             10514 	ld	bc, #0x0004
      002E2D 09                   10515 	add	hl, bc
      002E2E 34                   10516 	inc	(hl)
      002E2F 7E                   10517 	ld	a, (hl)
                                  10518 ;src/main.c:1066: if (explosions[oldestEx].frameCounter > EXPLFRAMETIME) {
      002E30 21rBCr00             10519 	ld	hl, #_oldestEx
      002E33 4E                   10520 	ld	c, (hl)
      002E34 06 00                10521 	ld	b, #0x00
      002E36 69                   10522 	ld	l, c
      002E37 60                   10523 	ld	h, b
      002E38 29                   10524 	add	hl, hl
      002E39 09                   10525 	add	hl, bc
      002E3A 29                   10526 	add	hl, hl
      002E3B 01r03r01             10527 	ld	bc,#_explosions
      002E3E 09                   10528 	add	hl,bc
      002E3F 01 04 00             10529 	ld	bc,#0x0004
      002E42 09                   10530 	add	hl,bc
      002E43 33                   10531 	inc	sp
      002E44 33                   10532 	inc	sp
      002E45 5D                   10533 	ld	e, l
      002E46 54                   10534 	ld	d, h
      002E47 D5                   10535 	push	de
      002E48 1A                   10536 	ld	a, (de)
      002E49 4F                   10537 	ld	c, a
      002E4A FArA5r0B             10538 	ld	a, (#_EXPLFRAMETIME)
      002E4D 91                   10539 	sub	a, c
      002E4E 30 78                10540 	jr	NC, 00107$
                                  10541 ;src/main.c:1067: explosions[oldestEx].frameCounter = 0;
      002E50 E1                   10542 	pop	hl
      002E51 E5                   10543 	push	hl
      002E52 36 00                10544 	ld	(hl), #0x00
                                  10545 ;src/main.c:1068: explosions[oldestEx].frame += 1; 
      002E54 21rBCr00             10546 	ld	hl, #_oldestEx
      002E57 4E                   10547 	ld	c, (hl)
      002E58 06 00                10548 	ld	b, #0x00
      002E5A 69                   10549 	ld	l, c
      002E5B 60                   10550 	ld	h, b
      002E5C 29                   10551 	add	hl, hl
      002E5D 09                   10552 	add	hl, bc
      002E5E 29                   10553 	add	hl, hl
      002E5F 01r03r01             10554 	ld	bc,#_explosions
      002E62 09                   10555 	add	hl,bc
      002E63 23                   10556 	inc	hl
      002E64 23                   10557 	inc	hl
      002E65 23                   10558 	inc	hl
      002E66 34                   10559 	inc	(hl)
      002E67 7E                   10560 	ld	a, (hl)
                                  10561 ;src/main.c:1069: if (explosions[oldestEx].frame > 3) {
      002E68 21rBCr00             10562 	ld	hl, #_oldestEx
      002E6B 4E                   10563 	ld	c, (hl)
      002E6C 06 00                10564 	ld	b, #0x00
      002E6E 69                   10565 	ld	l, c
      002E6F 60                   10566 	ld	h, b
      002E70 29                   10567 	add	hl, hl
      002E71 09                   10568 	add	hl, bc
      002E72 29                   10569 	add	hl, hl
      002E73 01r03r01             10570 	ld	bc,#_explosions
      002E76 09                   10571 	add	hl,bc
      002E77 23                   10572 	inc	hl
      002E78 23                   10573 	inc	hl
      002E79 23                   10574 	inc	hl
      002E7A 4E                   10575 	ld	c, (hl)
      002E7B 3E 03                10576 	ld	a, #0x03
      002E7D 91                   10577 	sub	a, c
      002E7E 30 02                10578 	jr	NC, 00102$
                                  10579 ;src/main.c:1070: explosions[oldestEx].frame = 0;
      002E80 36 00                10580 	ld	(hl), #0x00
      002E82                      10581 00102$:
                                  10582 ;src/main.c:1072: set_sprite_tile(20, explosions[oldestEx].tile + (explosions[oldestEx].frame *4));
      002E82 21rBCr00             10583 	ld	hl, #_oldestEx
      002E85 4E                   10584 	ld	c, (hl)
      002E86 06 00                10585 	ld	b, #0x00
      002E88 69                   10586 	ld	l, c
      002E89 60                   10587 	ld	h, b
      002E8A 29                   10588 	add	hl, hl
      002E8B 09                   10589 	add	hl, bc
      002E8C 29                   10590 	add	hl, hl
      002E8D 01r03r01             10591 	ld	bc,#_explosions
      002E90 09                   10592 	add	hl,bc
      002E91 5D                   10593 	ld	e, l
      002E92 54                   10594 	ld	d, h
      002E93 21 05 00             10595 	ld	hl, #0x0005
      002E96 19                   10596 	add	hl, de
      002E97 4E                   10597 	ld	c, (hl)
      002E98 13                   10598 	inc	de
      002E99 13                   10599 	inc	de
      002E9A 13                   10600 	inc	de
      002E9B 1A                   10601 	ld	a, (de)
      002E9C 87                   10602 	add	a, a
      002E9D 87                   10603 	add	a, a
      002E9E 81                   10604 	add	a, c
      002E9F 4F                   10605 	ld	c, a
                                  10606 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002EA0 21r52r00             10607 	ld	hl, #(_shadow_OAM + 82)
      002EA3 71                   10608 	ld	(hl), c
                                  10609 ;src/main.c:1073: set_sprite_tile(21, explosions[oldestEx].tile+(explosions[oldestEx].frame *4) +2);
      002EA4 21rBCr00             10610 	ld	hl, #_oldestEx
      002EA7 4E                   10611 	ld	c, (hl)
      002EA8 06 00                10612 	ld	b, #0x00
      002EAA 69                   10613 	ld	l, c
      002EAB 60                   10614 	ld	h, b
      002EAC 29                   10615 	add	hl, hl
      002EAD 09                   10616 	add	hl, bc
      002EAE 29                   10617 	add	hl, hl
      002EAF 01r03r01             10618 	ld	bc,#_explosions
      002EB2 09                   10619 	add	hl,bc
      002EB3 5D                   10620 	ld	e, l
      002EB4 54                   10621 	ld	d, h
      002EB5 21 05 00             10622 	ld	hl, #0x0005
      002EB8 19                   10623 	add	hl, de
      002EB9 4E                   10624 	ld	c, (hl)
      002EBA 13                   10625 	inc	de
      002EBB 13                   10626 	inc	de
      002EBC 13                   10627 	inc	de
      002EBD 1A                   10628 	ld	a, (de)
      002EBE 87                   10629 	add	a, a
      002EBF 87                   10630 	add	a, a
      002EC0 81                   10631 	add	a, c
      002EC1 C6 02                10632 	add	a, #0x02
      002EC3 4F                   10633 	ld	c, a
                                  10634 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002EC4 21r56r00             10635 	ld	hl, #(_shadow_OAM + 86)
      002EC7 71                   10636 	ld	(hl), c
                                  10637 ;src/main.c:1073: set_sprite_tile(21, explosions[oldestEx].tile+(explosions[oldestEx].frame *4) +2);
      002EC8                      10638 00107$:
                                  10639 ;src/main.c:1076: }
      002EC8 33                   10640 	inc	sp
      002EC9 33                   10641 	inc	sp
      002ECA C9                   10642 	ret
                                  10643 ;src/main.c:1078: void initEnemyOptions() {
                                  10644 ;	---------------------------------
                                  10645 ; Function initEnemyOptions
                                  10646 ; ---------------------------------
      002ECB                      10647 _initEnemyOptions::
                                  10648 ;src/main.c:1079: enemyOptions[0] = blob;
      002ECB 11 12 00             10649 	ld	de, #0x0012
      002ECE D5                   10650 	push	de
      002ECF 11r10r00             10651 	ld	de, #_blob
      002ED2 D5                   10652 	push	de
      002ED3 11r00r00             10653 	ld	de, #_enemyOptions
      002ED6 D5                   10654 	push	de
      002ED7 CDr00r00             10655 	call	___memcpy
      002EDA E8 06                10656 	add	sp, #6
                                  10657 ;src/main.c:1080: enemyOptions[1] = bomb;
      002EDC 11 12 00             10658 	ld	de, #0x0012
      002EDF D5                   10659 	push	de
      002EE0 11r22r00             10660 	ld	de, #_bomb
      002EE3 D5                   10661 	push	de
      002EE4 11r12r00             10662 	ld	de, #(_enemyOptions + 18)
      002EE7 D5                   10663 	push	de
      002EE8 CDr00r00             10664 	call	___memcpy
      002EEB E8 06                10665 	add	sp, #6
                                  10666 ;src/main.c:1081: enemyOptions[2] = miniship;
      002EED 11 12 00             10667 	ld	de, #0x0012
      002EF0 D5                   10668 	push	de
      002EF1 11r34r00             10669 	ld	de, #_miniship
      002EF4 D5                   10670 	push	de
      002EF5 11r24r00             10671 	ld	de, #(_enemyOptions + 36)
      002EF8 D5                   10672 	push	de
      002EF9 CDr00r00             10673 	call	___memcpy
      002EFC E8 06                10674 	add	sp, #6
                                  10675 ;src/main.c:1082: enemyOptions[3] = shieldship;
      002EFE 11 12 00             10676 	ld	de, #0x0012
      002F01 D5                   10677 	push	de
      002F02 11r58r00             10678 	ld	de, #_shieldship
      002F05 D5                   10679 	push	de
      002F06 11r36r00             10680 	ld	de, #(_enemyOptions + 54)
      002F09 D5                   10681 	push	de
      002F0A CDr00r00             10682 	call	___memcpy
      002F0D E8 06                10683 	add	sp, #6
                                  10684 ;src/main.c:1084: enemyOptions[4] = bigblob;
      002F0F 11 12 00             10685 	ld	de, #0x0012
      002F12 D5                   10686 	push	de
      002F13 11r46r00             10687 	ld	de, #_bigblob
      002F16 D5                   10688 	push	de
      002F17 11r48r00             10689 	ld	de, #(_enemyOptions + 72)
      002F1A D5                   10690 	push	de
      002F1B CDr00r00             10691 	call	___memcpy
      002F1E E8 06                10692 	add	sp, #6
                                  10693 ;src/main.c:1085: }
      002F20 C9                   10694 	ret
                                  10695 ;src/main.c:1088: void initProjectiles() {
                                  10696 ;	---------------------------------
                                  10697 ; Function initProjectiles
                                  10698 ; ---------------------------------
      002F21                      10699 _initProjectiles::
                                  10700 ;src/main.c:1089: set_sprite_data(0x20, 17, ProjectileTiles); 
      002F21 11rE8r05             10701 	ld	de, #_ProjectileTiles
      002F24 D5                   10702 	push	de
      002F25 21 20 11             10703 	ld	hl, #0x1120
      002F28 E5                   10704 	push	hl
      002F29 CDr00r00             10705 	call	_set_sprite_data
      002F2C E8 04                10706 	add	sp, #4
                                  10707 ;src/main.c:1091: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002F2E AF                   10708 	xor	a, a
      002F2F                      10709 00103$:
      002F2F 21r9Fr0B             10710 	ld	hl, #_PROJECTILECOUNT
      002F32 4E                   10711 	ld	c, (hl)
      002F33 B9                   10712 	cp	a, c
      002F34 D0                   10713 	ret	NC
      002F35 3C                   10714 	inc	a
                                  10715 ;src/main.c:1095: }
      002F36 18 F7                10716 	jr	00103$
                                  10717 ;src/main.c:1097: void initGame() {
                                  10718 ;	---------------------------------
                                  10719 ; Function initGame
                                  10720 ; ---------------------------------
      002F38                      10721 _initGame::
                                  10722 ;src/main.c:1100: xDir = 0;
      002F38 21r93r00             10723 	ld	hl, #_xDir
      002F3B 36 00                10724 	ld	(hl), #0x00
                                  10725 ;src/main.c:1101: yDir = -1;
      002F3D 21r94r00             10726 	ld	hl, #_yDir
      002F40 36 FF                10727 	ld	(hl), #0xff
                                  10728 ;src/main.c:1102: xSpeed = 0;
      002F42 21r95r00             10729 	ld	hl, #_xSpeed
      002F45 36 00                10730 	ld	(hl), #0x00
                                  10731 ;src/main.c:1103: ySpeed = 0;
      002F47 21r96r00             10732 	ld	hl, #_ySpeed
      002F4A 36 00                10733 	ld	(hl), #0x00
                                  10734 ;src/main.c:1106: playerX = 80<<5;
      002F4C 21r97r00             10735 	ld	hl, #_playerX
      002F4F 36 00                10736 	ld	(hl), #0x00
      002F51 23                   10737 	inc	hl
      002F52 36 0A                10738 	ld	(hl), #0x0a
                                  10739 ;src/main.c:1107: playerY = 80<<5;
      002F54 21r99r00             10740 	ld	hl, #_playerY
      002F57 36 00                10741 	ld	(hl), #0x00
      002F59 23                   10742 	inc	hl
      002F5A 36 0A                10743 	ld	(hl), #0x0a
                                  10744 ;src/main.c:1109: playerDrawX = 80;
      002F5C 21r9Br00             10745 	ld	hl, #_playerDrawX
      002F5F 36 50                10746 	ld	(hl), #0x50
                                  10747 ;src/main.c:1110: playerDrawY = 80;
      002F61 21r9Cr00             10748 	ld	hl, #_playerDrawY
      002F64 36 50                10749 	ld	(hl), #0x50
                                  10750 ;src/main.c:1113: bgX = 0;
      002F66 AF                   10751 	xor	a, a
      002F67 21r9Dr00             10752 	ld	hl, #_bgX
      002F6A 22                   10753 	ld	(hl+), a
      002F6B 77                   10754 	ld	(hl), a
                                  10755 ;src/main.c:1114: bgY = 0;
      002F6C AF                   10756 	xor	a, a
      002F6D 21r9Fr00             10757 	ld	hl, #_bgY
      002F70 22                   10758 	ld	(hl+), a
      002F71 77                   10759 	ld	(hl), a
                                  10760 ;src/main.c:1116: hull = maxHull;
      002F72 FArA1r0B             10761 	ld	a, (#_maxHull)
      002F75 EArF6r00             10762 	ld	(#_hull),a
                                  10763 ;src/main.c:1117: shield = maxShield;
      002F78 FArA2r0B             10764 	ld	a, (#_maxShield)
      002F7B EArF7r00             10765 	ld	(#_shield),a
                                  10766 ;src/main.c:1119: DISPLAY_ON;
      002F7E F0r00                10767 	ldh	a, (_LCDC_REG + 0)
      002F80 F6 80                10768 	or	a, #0x80
      002F82 E0r00                10769 	ldh	(_LCDC_REG + 0), a
                                  10770 ;src/main.c:1120: SPRITES_8x16;
      002F84 F0r00                10771 	ldh	a, (_LCDC_REG + 0)
      002F86 F6 04                10772 	or	a, #0x04
      002F88 E0r00                10773 	ldh	(_LCDC_REG + 0), a
                                  10774 ;src/main.c:1121: set_sprite_data(0, 12, Player1);
      002F8A 11r83r07             10775 	ld	de, #_Player1
      002F8D D5                   10776 	push	de
      002F8E 21 00 0C             10777 	ld	hl, #0xc00
      002F91 E5                   10778 	push	hl
      002F92 CDr00r00             10779 	call	_set_sprite_data
      002F95 E8 04                10780 	add	sp, #4
                                  10781 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002F97 21r02r00             10782 	ld	hl, #(_shadow_OAM + 2)
      002F9A 36 00                10783 	ld	(hl), #0x00
      002F9C 21r06r00             10784 	ld	hl, #(_shadow_OAM + 6)
      002F9F 36 02                10785 	ld	(hl), #0x02
                                  10786 ;src/main.c:1127: SHOW_SPRITES;
      002FA1 F0r00                10787 	ldh	a, (_LCDC_REG + 0)
      002FA3 F6 02                10788 	or	a, #0x02
      002FA5 E0r00                10789 	ldh	(_LCDC_REG + 0), a
                                  10790 ;src/main.c:1131: font_init();
      002FA7 CDr00r00             10791 	call	_font_init
                                  10792 ;src/main.c:1133: min_font = font_load(font_min); // 36 tiles of characters
      002FAA 11r00r00             10793 	ld	de, #_font_min
      002FAD D5                   10794 	push	de
      002FAE CDr00r00             10795 	call	_font_load
      002FB1 E1                   10796 	pop	hl
      002FB2 21rF8r00             10797 	ld	hl, #_min_font
      002FB5 7B                   10798 	ld	a, e
      002FB6 22                   10799 	ld	(hl+), a
                                  10800 ;src/main.c:1134: font_set(min_font);
      002FB7 7A                   10801 	ld	a, d
      002FB8 32                   10802 	ld	(hl-), a
      002FB9 2A                   10803 	ld	a, (hl+)
      002FBA 5F                   10804 	ld	e, a
      002FBB 56                   10805 	ld	d, (hl)
      002FBC D5                   10806 	push	de
      002FBD CDr00r00             10807 	call	_font_set
      002FC0 E1                   10808 	pop	hl
                                  10809 ;src/main.c:1135: set_win_tiles(1,0,4,1,hullabel);
      002FC1 11r00r00             10810 	ld	de, #_hullabel
      002FC4 D5                   10811 	push	de
      002FC5 21 04 01             10812 	ld	hl, #0x104
      002FC8 E5                   10813 	push	hl
      002FC9 21 01 00             10814 	ld	hl, #0x01
      002FCC E5                   10815 	push	hl
      002FCD CDr00r00             10816 	call	_set_win_tiles
      002FD0 E8 06                10817 	add	sp, #6
                                  10818 ;src/main.c:1136: set_win_tiles(1,1,4,1,shieldlabel);
      002FD2 11r04r00             10819 	ld	de, #_shieldlabel
      002FD5 D5                   10820 	push	de
      002FD6 21 04 01             10821 	ld	hl, #0x104
      002FD9 E5                   10822 	push	hl
      002FDA 21 01 01             10823 	ld	hl, #0x101
      002FDD E5                   10824 	push	hl
      002FDE CDr00r00             10825 	call	_set_win_tiles
      002FE1 E8 06                10826 	add	sp, #6
                                  10827 ;src/main.c:1141: set_bkg_data(0x50,1,healthblock);
      002FE3 11r07r05             10828 	ld	de, #_healthblock
      002FE6 D5                   10829 	push	de
      002FE7 21 50 01             10830 	ld	hl, #0x150
      002FEA E5                   10831 	push	hl
      002FEB CDr00r00             10832 	call	_set_bkg_data
      002FEE E8 04                10833 	add	sp, #4
                                  10834 ;src/main.c:1143: setHealthBar(0, hull);
      002FF0 FArF6r00             10835 	ld	a, (#_hull)
      002FF3 67                   10836 	ld	h, a
      002FF4 2E 00                10837 	ld	l, #0x00
      002FF6 E5                   10838 	push	hl
      002FF7 CDrA6r0B             10839 	call	_setHealthBar
      002FFA E1                   10840 	pop	hl
                                  10841 ;src/main.c:1144: setHealthBar(1, shield);
      002FFB FArF7r00             10842 	ld	a, (#_shield)
      002FFE 67                   10843 	ld	h, a
      002FFF 2E 01                10844 	ld	l, #0x01
      003001 E5                   10845 	push	hl
      003002 CDrA6r0B             10846 	call	_setHealthBar
      003005 E1                   10847 	pop	hl
                                  10848 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003006 3E 07                10849 	ld	a, #0x07
      003008 E0r00                10850 	ldh	(_WX_REG + 0), a
      00300A 3E 7E                10851 	ld	a, #0x7e
      00300C E0r00                10852 	ldh	(_WY_REG + 0), a
                                  10853 ;src/main.c:1151: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      00300E 11r87r04             10854 	ld	de, #_backgroundtiles
      003011 D5                   10855 	push	de
      003012 21 25 08             10856 	ld	hl, #0x825
      003015 E5                   10857 	push	hl
      003016 CDr00r00             10858 	call	_set_bkg_data
      003019 E8 04                10859 	add	sp, #4
                                  10860 ;src/main.c:1152: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      00301B 11r87r00             10861 	ld	de, #_background1
      00301E D5                   10862 	push	de
      00301F 21 20 20             10863 	ld	hl, #0x2020
      003022 E5                   10864 	push	hl
      003023 AF                   10865 	xor	a, a
      003024 0F                   10866 	rrca
      003025 F5                   10867 	push	af
      003026 CDr00r00             10868 	call	_set_bkg_tiles
      003029 E8 06                10869 	add	sp, #6
                                  10870 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00302B AF                   10871 	xor	a, a
      00302C E0r00                10872 	ldh	(_SCX_REG + 0), a
      00302E AF                   10873 	xor	a, a
      00302F E0r00                10874 	ldh	(_SCY_REG + 0), a
                                  10875 ;src/main.c:1158: set_bkg_data(0x51, 18, ProjectileTiles);
      003031 11rE8r05             10876 	ld	de, #_ProjectileTiles
      003034 D5                   10877 	push	de
      003035 21 51 12             10878 	ld	hl, #0x1251
      003038 E5                   10879 	push	hl
      003039 CDr00r00             10880 	call	_set_bkg_data
      00303C E8 04                10881 	add	sp, #4
                                  10882 ;src/main.c:1160: set_win_tiles(10, 0,4,1,weaponlabel);
      00303E 11r08r00             10883 	ld	de, #_weaponlabel
      003041 D5                   10884 	push	de
      003042 21 04 01             10885 	ld	hl, #0x104
      003045 E5                   10886 	push	hl
      003046 21 0A 00             10887 	ld	hl, #0x0a
      003049 E5                   10888 	push	hl
      00304A CDr00r00             10889 	call	_set_win_tiles
      00304D E8 06                10890 	add	sp, #6
                                  10891 ;src/main.c:1161: set_win_tiles(10, 1,4,1,scorelabel);
      00304F 11r0Cr00             10892 	ld	de, #_scorelabel
      003052 D5                   10893 	push	de
      003053 21 04 01             10894 	ld	hl, #0x104
      003056 E5                   10895 	push	hl
      003057 21 0A 01             10896 	ld	hl, #0x10a
      00305A E5                   10897 	push	hl
      00305B CDr00r00             10898 	call	_set_win_tiles
      00305E E8 06                10899 	add	sp, #6
                                  10900 ;src/main.c:1163: setGunIcon();
      003060 CDr0Cr25             10901 	call	_setGunIcon
                                  10902 ;src/main.c:1164: SHOW_BKG;
      003063 F0r00                10903 	ldh	a, (_LCDC_REG + 0)
      003065 F6 01                10904 	or	a, #0x01
      003067 E0r00                10905 	ldh	(_LCDC_REG + 0), a
                                  10906 ;src/main.c:1165: SHOW_WIN;;
      003069 F0r00                10907 	ldh	a, (_LCDC_REG + 0)
      00306B F6 20                10908 	or	a, #0x20
      00306D E0r00                10909 	ldh	(_LCDC_REG + 0), a
                                  10910 ;src/main.c:1167: SCORE = MAKE_BCD(00000);
      00306F AF                   10911 	xor	a, a
      003070 21rB3r00             10912 	ld	hl, #_SCORE
      003073 22                   10913 	ld	(hl+), a
      003074 22                   10914 	ld	(hl+), a
      003075 22                   10915 	ld	(hl+), a
      003076 77                   10916 	ld	(hl), a
                                  10917 ;src/main.c:1168: updateScore();
      003077 CDrB7r0C             10918 	call	_updateScore
                                  10919 ;src/main.c:1169: MISSILES = MAKE_BCD(1);
      00307A 21rA9r00             10920 	ld	hl, #_MISSILES
      00307D 3E 01                10921 	ld	a, #0x01
      00307F 22                   10922 	ld	(hl+), a
      003080 AF                   10923 	xor	a, a
      003081 22                   10924 	ld	(hl+), a
      003082 22                   10925 	ld	(hl+), a
      003083 77                   10926 	ld	(hl), a
                                  10927 ;src/main.c:1170: updateMissileCount(0);
      003084 AF                   10928 	xor	a, a
      003085 F5                   10929 	push	af
      003086 33                   10930 	inc	sp
      003087 CDrE1r0C             10931 	call	_updateMissileCount
      00308A 33                   10932 	inc	sp
                                  10933 ;src/main.c:1171: set_win_tiles(17, 0,1,1,gunMap+2);
      00308B 11rB0r00             10934 	ld	de, #(_gunMap + 2)
      00308E D5                   10935 	push	de
      00308F 21 01 01             10936 	ld	hl, #0x101
      003092 E5                   10937 	push	hl
      003093 21 11 00             10938 	ld	hl, #0x11
      003096 E5                   10939 	push	hl
      003097 CDr00r00             10940 	call	_set_win_tiles
      00309A E8 06                10941 	add	sp, #6
                                  10942 ;src/main.c:1175: pickup = upgrade;//upgrade;
      00309C 11 09 00             10943 	ld	de, #0x0009
      00309F D5                   10944 	push	de
      0030A0 11r08r07             10945 	ld	de, #_upgrade
      0030A3 D5                   10946 	push	de
      0030A4 11rFAr00             10947 	ld	de, #_pickup
      0030A7 D5                   10948 	push	de
      0030A8 CDr00r00             10949 	call	___memcpy
      0030AB E8 06                10950 	add	sp, #6
                                  10951 ;src/main.c:1177: set_sprite_data(0x70, 6, Pickups);
      0030AD 11r23r07             10952 	ld	de, #_Pickups
      0030B0 D5                   10953 	push	de
      0030B1 21 70 06             10954 	ld	hl, #0x670
      0030B4 E5                   10955 	push	hl
      0030B5 CDr00r00             10956 	call	_set_sprite_data
      0030B8 E8 04                10957 	add	sp, #4
                                  10958 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0030BA 21r0Er00             10959 	ld	hl, #(_shadow_OAM + 14)
      0030BD 36 7F                10960 	ld	(hl), #0x7f
                                  10961 ;src/main.c:1181: move_sprite(3, pickup.x + 4, pickup.y + 12);
      0030BF FArFDr00             10962 	ld	a, (#(_pickup + 3) + 0)
      0030C2 C6 0C                10963 	add	a, #0x0c
      0030C4 47                   10964 	ld	b, a
      0030C5 FArFBr00             10965 	ld	a, (#(_pickup + 1) + 0)
      0030C8 C6 04                10966 	add	a, #0x04
      0030CA 4F                   10967 	ld	c, a
                                  10968 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0030CB 21r0Cr00             10969 	ld	hl, #(_shadow_OAM + 12)
                                  10970 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0030CE 78                   10971 	ld	a, b
      0030CF 22                   10972 	ld	(hl+), a
      0030D0 71                   10973 	ld	(hl), c
                                  10974 ;src/main.c:1183: for (uint8_t i = 0; i<exCount; ++i) {
      0030D1 0E 00                10975 	ld	c, #0x00
      0030D3                      10976 00113$:
      0030D3 79                   10977 	ld	a, c
      0030D4 21rBBr00             10978 	ld	hl, #_exCount
      0030D7 96                   10979 	sub	a, (hl)
      0030D8 30 1E                10980 	jr	NC, 00101$
                                  10981 ;src/main.c:1184: explosions[i] = ex;
      0030DA 06 00                10982 	ld	b, #0x00
      0030DC 69                   10983 	ld	l, c
      0030DD 60                   10984 	ld	h, b
      0030DE 29                   10985 	add	hl, hl
      0030DF 09                   10986 	add	hl, bc
      0030E0 29                   10987 	add	hl, hl
      0030E1 11r03r01             10988 	ld	de, #_explosions
      0030E4 19                   10989 	add	hl, de
      0030E5 C5                   10990 	push	bc
      0030E6 11 06 00             10991 	ld	de, #0x0006
      0030E9 D5                   10992 	push	de
      0030EA 11r83r08             10993 	ld	de, #_ex
      0030ED D5                   10994 	push	de
      0030EE E5                   10995 	push	hl
      0030EF CDr00r00             10996 	call	___memcpy
      0030F2 E8 06                10997 	add	sp, #6
      0030F4 C1                   10998 	pop	bc
                                  10999 ;src/main.c:1183: for (uint8_t i = 0; i<exCount; ++i) {
      0030F5 0C                   11000 	inc	c
      0030F6 18 DB                11001 	jr	00113$
      0030F8                      11002 00101$:
                                  11003 ;src/main.c:1186: set_sprite_data(0x80, 16, Ex1);
      0030F8 11r89r08             11004 	ld	de, #_Ex1
      0030FB D5                   11005 	push	de
      0030FC 21 80 10             11006 	ld	hl, #0x1080
      0030FF E5                   11007 	push	hl
      003100 CDr00r00             11008 	call	_set_sprite_data
      003103 E8 04                11009 	add	sp, #4
                                  11010 ;src/main.c:1187: set_sprite_data(0x90, 16, Ex2);
      003105 11r89r09             11011 	ld	de, #_Ex2
      003108 D5                   11012 	push	de
      003109 21 90 10             11013 	ld	hl, #0x1090
      00310C E5                   11014 	push	hl
      00310D CDr00r00             11015 	call	_set_sprite_data
      003110 E8 04                11016 	add	sp, #4
                                  11017 ;src/main.c:1188: set_sprite_data(0xa0, 16, Ex3);
      003112 11r89r0A             11018 	ld	de, #_Ex3
      003115 D5                   11019 	push	de
      003116 21 A0 10             11020 	ld	hl, #0x10a0
      003119 E5                   11021 	push	hl
      00311A CDr00r00             11022 	call	_set_sprite_data
      00311D E8 04                11023 	add	sp, #4
                                  11024 ;src/main.c:1191: explosions[oldestEx].visible = 1;
      00311F 21rBCr00             11025 	ld	hl, #_oldestEx
      003122 4E                   11026 	ld	c, (hl)
      003123 06 00                11027 	ld	b, #0x00
      003125 69                   11028 	ld	l, c
      003126 60                   11029 	ld	h, b
      003127 29                   11030 	add	hl, hl
      003128 09                   11031 	add	hl, bc
      003129 29                   11032 	add	hl, hl
      00312A 01r03r01             11033 	ld	bc,#_explosions
      00312D 09                   11034 	add	hl,bc
      00312E 36 01                11035 	ld	(hl), #0x01
                                  11036 ;src/main.c:1192: explosions[oldestEx].x = playerDrawX;
      003130 21rBCr00             11037 	ld	hl, #_oldestEx
      003133 4E                   11038 	ld	c, (hl)
      003134 06 00                11039 	ld	b, #0x00
      003136 69                   11040 	ld	l, c
      003137 60                   11041 	ld	h, b
      003138 29                   11042 	add	hl, hl
      003139 09                   11043 	add	hl, bc
      00313A 29                   11044 	add	hl, hl
      00313B 01r03r01             11045 	ld	bc,#_explosions
      00313E 09                   11046 	add	hl,bc
      00313F 23                   11047 	inc	hl
      003140 4D                   11048 	ld	c, l
      003141 44                   11049 	ld	b, h
      003142 FAr9Br00             11050 	ld	a, (#_playerDrawX)
      003145 02                   11051 	ld	(bc), a
                                  11052 ;src/main.c:1193: explosions[oldestEx].y = playerDrawY;
      003146 21rBCr00             11053 	ld	hl, #_oldestEx
      003149 4E                   11054 	ld	c, (hl)
      00314A 06 00                11055 	ld	b, #0x00
      00314C 69                   11056 	ld	l, c
      00314D 60                   11057 	ld	h, b
      00314E 29                   11058 	add	hl, hl
      00314F 09                   11059 	add	hl, bc
      003150 29                   11060 	add	hl, hl
      003151 01r03r01             11061 	ld	bc,#_explosions
      003154 09                   11062 	add	hl,bc
      003155 23                   11063 	inc	hl
      003156 23                   11064 	inc	hl
      003157 4D                   11065 	ld	c, l
      003158 44                   11066 	ld	b, h
      003159 FAr9Cr00             11067 	ld	a, (#_playerDrawY)
      00315C 02                   11068 	ld	(bc), a
                                  11069 ;src/main.c:1194: explosions[oldestEx].tile = 0x80;
      00315D 21rBCr00             11070 	ld	hl, #_oldestEx
      003160 4E                   11071 	ld	c, (hl)
      003161 06 00                11072 	ld	b, #0x00
      003163 69                   11073 	ld	l, c
      003164 60                   11074 	ld	h, b
      003165 29                   11075 	add	hl, hl
      003166 09                   11076 	add	hl, bc
      003167 29                   11077 	add	hl, hl
      003168 01r03r01             11078 	ld	bc,#_explosions
      00316B 09                   11079 	add	hl,bc
      00316C 01 05 00             11080 	ld	bc, #0x0005
      00316F 09                   11081 	add	hl, bc
      003170 36 80                11082 	ld	(hl), #0x80
                                  11083 ;src/main.c:1195: explosions[oldestEx].frame = 0;
      003172 21rBCr00             11084 	ld	hl, #_oldestEx
      003175 4E                   11085 	ld	c, (hl)
      003176 06 00                11086 	ld	b, #0x00
      003178 69                   11087 	ld	l, c
      003179 60                   11088 	ld	h, b
      00317A 29                   11089 	add	hl, hl
      00317B 09                   11090 	add	hl, bc
      00317C 29                   11091 	add	hl, hl
      00317D 01r03r01             11092 	ld	bc,#_explosions
      003180 09                   11093 	add	hl,bc
      003181 23                   11094 	inc	hl
      003182 23                   11095 	inc	hl
      003183 23                   11096 	inc	hl
      003184 36 00                11097 	ld	(hl), #0x00
                                  11098 ;src/main.c:1196: set_sprite_tile(20, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      003186 21rBCr00             11099 	ld	hl, #_oldestEx
      003189 4E                   11100 	ld	c, (hl)
      00318A 06 00                11101 	ld	b, #0x00
      00318C 69                   11102 	ld	l, c
      00318D 60                   11103 	ld	h, b
      00318E 29                   11104 	add	hl, hl
      00318F 09                   11105 	add	hl, bc
      003190 29                   11106 	add	hl, hl
      003191 01r03r01             11107 	ld	bc,#_explosions
      003194 09                   11108 	add	hl,bc
      003195 4D                   11109 	ld	c, l
      003196 44                   11110 	ld	b, h
      003197 21 05 00             11111 	ld	hl, #0x0005
      00319A 09                   11112 	add	hl, bc
      00319B 5E                   11113 	ld	e, (hl)
      00319C 03                   11114 	inc	bc
      00319D 03                   11115 	inc	bc
      00319E 03                   11116 	inc	bc
      00319F 0A                   11117 	ld	a, (bc)
      0031A0 87                   11118 	add	a, a
      0031A1 83                   11119 	add	a, e
      0031A2 4F                   11120 	ld	c, a
                                  11121 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0031A3 21r52r00             11122 	ld	hl, #(_shadow_OAM + 82)
      0031A6 71                   11123 	ld	(hl), c
                                  11124 ;src/main.c:1197: set_sprite_tile(21, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      0031A7 21rBCr00             11125 	ld	hl, #_oldestEx
      0031AA 4E                   11126 	ld	c, (hl)
      0031AB 06 00                11127 	ld	b, #0x00
      0031AD 69                   11128 	ld	l, c
      0031AE 60                   11129 	ld	h, b
      0031AF 29                   11130 	add	hl, hl
      0031B0 09                   11131 	add	hl, bc
      0031B1 29                   11132 	add	hl, hl
      0031B2 01r03r01             11133 	ld	bc,#_explosions
      0031B5 09                   11134 	add	hl,bc
      0031B6 4D                   11135 	ld	c, l
      0031B7 44                   11136 	ld	b, h
      0031B8 21 05 00             11137 	ld	hl, #0x0005
      0031BB 09                   11138 	add	hl, bc
      0031BC 5E                   11139 	ld	e, (hl)
      0031BD 03                   11140 	inc	bc
      0031BE 03                   11141 	inc	bc
      0031BF 03                   11142 	inc	bc
      0031C0 0A                   11143 	ld	a, (bc)
      0031C1 87                   11144 	add	a, a
      0031C2 83                   11145 	add	a, e
      0031C3 C6 02                11146 	add	a, #0x02
      0031C5 4F                   11147 	ld	c, a
                                  11148 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0031C6 21r56r00             11149 	ld	hl, #(_shadow_OAM + 86)
      0031C9 71                   11150 	ld	(hl), c
                                  11151 ;src/main.c:1199: move_sprite(20, explosions[oldestEx].x, explosions[oldestEx].y+8);
      0031CA 21rBCr00             11152 	ld	hl, #_oldestEx
      0031CD 4E                   11153 	ld	c, (hl)
      0031CE 06 00                11154 	ld	b, #0x00
      0031D0 69                   11155 	ld	l, c
      0031D1 60                   11156 	ld	h, b
      0031D2 29                   11157 	add	hl, hl
      0031D3 09                   11158 	add	hl, bc
      0031D4 29                   11159 	add	hl, hl
      0031D5 01r03r01             11160 	ld	bc,#_explosions
      0031D8 09                   11161 	add	hl,bc
      0031D9 4D                   11162 	ld	c, l
      0031DA 44                   11163 	ld	b, h
      0031DB 23                   11164 	inc	hl
      0031DC 03                   11165 	inc	bc
      0031DD 03                   11166 	inc	bc
      0031DE 0A                   11167 	ld	a, (bc)
      0031DF C6 08                11168 	add	a, #0x08
      0031E1 4F                   11169 	ld	c, a
      0031E2 46                   11170 	ld	b, (hl)
                                  11171 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0031E3 21r50r00             11172 	ld	hl, #(_shadow_OAM + 80)
                                  11173 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0031E6 79                   11174 	ld	a, c
      0031E7 22                   11175 	ld	(hl+), a
      0031E8 70                   11176 	ld	(hl), b
                                  11177 ;src/main.c:1200: move_sprite(21, explosions[oldestEx].x+8, explosions[oldestEx].y+8);
      0031E9 21rBCr00             11178 	ld	hl, #_oldestEx
      0031EC 4E                   11179 	ld	c, (hl)
      0031ED 06 00                11180 	ld	b, #0x00
      0031EF 69                   11181 	ld	l, c
      0031F0 60                   11182 	ld	h, b
      0031F1 29                   11183 	add	hl, hl
      0031F2 09                   11184 	add	hl, bc
      0031F3 29                   11185 	add	hl, hl
      0031F4 01r03r01             11186 	ld	bc,#_explosions
      0031F7 09                   11187 	add	hl,bc
      0031F8 4D                   11188 	ld	c, l
      0031F9 44                   11189 	ld	b, h
      0031FA 23                   11190 	inc	hl
      0031FB 03                   11191 	inc	bc
      0031FC 03                   11192 	inc	bc
      0031FD 0A                   11193 	ld	a, (bc)
      0031FE C6 08                11194 	add	a, #0x08
      003200 4F                   11195 	ld	c, a
      003201 7E                   11196 	ld	a, (hl)
      003202 C6 08                11197 	add	a, #0x08
      003204 47                   11198 	ld	b, a
                                  11199 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003205 21r54r00             11200 	ld	hl, #(_shadow_OAM + 84)
                                  11201 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003208 79                   11202 	ld	a, c
      003209 22                   11203 	ld	(hl+), a
      00320A 70                   11204 	ld	(hl), b
                                  11205 ;src/main.c:1200: move_sprite(21, explosions[oldestEx].x+8, explosions[oldestEx].y+8);
                                  11206 ;src/main.c:1203: }
      00320B C9                   11207 	ret
                                  11208 ;src/main.c:1205: void main(){
                                  11209 ;	---------------------------------
                                  11210 ; Function main
                                  11211 ; ---------------------------------
      00320C                      11212 _main::
                                  11213 ;src/main.c:1208: initEnemyOptions();
      00320C CDrCBr2E             11214 	call	_initEnemyOptions
                                  11215 ;src/main.c:1211: STAT_REG = 0x45;
      00320F 3E 45                11216 	ld	a, #0x45
      003211 E0r00                11217 	ldh	(_STAT_REG + 0), a
                                  11218 ;src/main.c:1212: LYC_REG = 0x7e; //line 126
      003213 3E 7E                11219 	ld	a, #0x7e
      003215 E0r00                11220 	ldh	(_LYC_REG + 0), a
                                  11221 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      003217 F3                   11222 	di
                                  11223 ;src/main.c:1214: add_LCD(interruptLCD);
      003218 11r00r00             11224 	ld	de, #_interruptLCD
      00321B D5                   11225 	push	de
      00321C CDr00r00             11226 	call	_add_LCD
      00321F 33                   11227 	inc	sp
      003220 33                   11228 	inc	sp
                                  11229 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      003221 FB                   11230 	ei
                                  11231 ;src/main.c:1216: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      003222 3E 03                11232 	ld	a, #0x03
      003224 F5                   11233 	push	af
      003225 33                   11234 	inc	sp
      003226 CDr00r00             11235 	call	_set_interrupts
      003229 33                   11236 	inc	sp
                                  11237 ;src/main.c:1220: NR52_REG = 0x80; // sound on 
      00322A 3E 80                11238 	ld	a, #0x80
      00322C E0r00                11239 	ldh	(_NR52_REG + 0), a
                                  11240 ;src/main.c:1221: NR50_REG = 0x77; // volume
      00322E 3E 77                11241 	ld	a, #0x77
      003230 E0r00                11242 	ldh	(_NR50_REG + 0), a
                                  11243 ;src/main.c:1222: NR51_REG = 0xFF; // all channels
      003232 3E FF                11244 	ld	a, #0xff
      003234 E0r00                11245 	ldh	(_NR51_REG + 0), a
                                  11246 ;src/main.c:1226: waitpad(J_A);
      003236 3E 10                11247 	ld	a, #0x10
      003238 F5                   11248 	push	af
      003239 33                   11249 	inc	sp
      00323A CDr00r00             11250 	call	_waitpad
      00323D 33                   11251 	inc	sp
                                  11252 ;src/main.c:1227: uint16_t seed = LY_REG;
      00323E F0r00                11253 	ldh	a, (_LY_REG + 0)
      003240 4F                   11254 	ld	c, a
      003241 06 00                11255 	ld	b, #0x00
                                  11256 ;src/main.c:1228: seed |= (uint16_t)DIV_REG << 8;
      003243 F0r00                11257 	ldh	a, (_DIV_REG + 0)
      003245 5F                   11258 	ld	e, a
      003246 AF                   11259 	xor	a, a
      003247 B1                   11260 	or	a, c
      003248 4F                   11261 	ld	c, a
      003249 7B                   11262 	ld	a, e
      00324A B0                   11263 	or	a, b
      00324B 47                   11264 	ld	b, a
                                  11265 ;src/main.c:1229: initrand(seed);
      00324C C5                   11266 	push	bc
      00324D CDr00r00             11267 	call	_initrand
      003250 E1                   11268 	pop	hl
                                  11269 ;src/main.c:1234: initGame();
      003251 CDr38r2F             11270 	call	_initGame
                                  11271 ;src/main.c:1235: initEnemies(1);
      003254 3E 01                11272 	ld	a, #0x01
      003256 F5                   11273 	push	af
      003257 33                   11274 	inc	sp
      003258 CDrFBr0F             11275 	call	_initEnemies
      00325B 33                   11276 	inc	sp
                                  11277 ;src/main.c:1236: initProjectiles();
      00325C CDr21r2F             11278 	call	_initProjectiles
                                  11279 ;src/main.c:1238: while(1) {
      00325F                      11280 00119$:
                                  11281 ;src/main.c:1239: SHOW_SPRITES;
      00325F F0r00                11282 	ldh	a, (_LCDC_REG + 0)
      003261 F6 02                11283 	or	a, #0x02
      003263 E0r00                11284 	ldh	(_LCDC_REG + 0), a
                                  11285 ;src/main.c:1241: joydata = joypad(); // query for button states
      003265 CDr00r00             11286 	call	_joypad
      003268 21rF5r00             11287 	ld	hl, #_joydata
      00326B 73                   11288 	ld	(hl), e
                                  11289 ;src/main.c:1243: updateDirection(); // set player direction
      00326C CDr6Er0D             11290 	call	_updateDirection
                                  11291 ;src/main.c:1246: move(); 
      00326F CDrC5r19             11292 	call	_move
                                  11293 ;src/main.c:1248: updateEnemyPositions();
      003272 CDr66r11             11294 	call	_updateEnemyPositions
                                  11295 ;src/main.c:1251: checkCollision(); 
      003275 CDr3Cr20             11296 	call	_checkCollision
                                  11297 ;src/main.c:897: if (shield < maxShield) {
      003278 21rA2r0B             11298 	ld	hl, #_maxShield
      00327B 4E                   11299 	ld	c, (hl)
      00327C 59                   11300 	ld	e, c
      00327D 21rF7r00             11301 	ld	hl, #_shield
      003280 56                   11302 	ld	d, (hl)
      003281 7E                   11303 	ld	a, (hl)
      003282 91                   11304 	sub	a, c
      003283 CB 7B                11305 	bit	7, e
      003285 28 07                11306 	jr	Z, 00186$
      003287 CB 7A                11307 	bit	7, d
      003289 20 08                11308 	jr	NZ, 00187$
      00328B BF                   11309 	cp	a, a
      00328C 18 05                11310 	jr	00187$
      00328E                      11311 00186$:
      00328E CB 7A                11312 	bit	7, d
      003290 28 01                11313 	jr	Z, 00187$
      003292 37                   11314 	scf
      003293                      11315 00187$:
      003293 30 04                11316 	jr	NC, 00127$
                                  11317 ;src/main.c:898: shield += 1;
      003295 21rF7r00             11318 	ld	hl, #_shield
      003298 34                   11319 	inc	(hl)
      003299                      11320 00127$:
                                  11321 ;src/main.c:900: setHealthBar(0, hull);
      003299 FArF6r00             11322 	ld	a, (#_hull)
      00329C 67                   11323 	ld	h, a
      00329D 2E 00                11324 	ld	l, #0x00
      00329F E5                   11325 	push	hl
      0032A0 CDrA6r0B             11326 	call	_setHealthBar
      0032A3 E1                   11327 	pop	hl
                                  11328 ;src/main.c:901: setHealthBar(1, shield);
      0032A4 FArF7r00             11329 	ld	a, (#_shield)
      0032A7 67                   11330 	ld	h, a
      0032A8 2E 01                11331 	ld	l, #0x01
      0032AA E5                   11332 	push	hl
      0032AB CDrA6r0B             11333 	call	_setHealthBar
      0032AE E1                   11334 	pop	hl
                                  11335 ;src/main.c:1256: if (joydata & J_B && fireCooldown == 0) {
      0032AF FArF5r00             11336 	ld	a, (#_joydata)
      0032B2 CB 6F                11337 	bit	5, a
      0032B4 28 09                11338 	jr	Z, 00102$
      0032B6 FAr92r00             11339 	ld	a, (#_fireCooldown)
      0032B9 B7                   11340 	or	a, a
      0032BA 20 03                11341 	jr	NZ, 00102$
                                  11342 ;src/main.c:1257: fire();
      0032BC CDr3Fr25             11343 	call	_fire
      0032BF                      11344 00102$:
                                  11345 ;src/main.c:1259: if (fireCooldown > 0) {
      0032BF 21r92r00             11346 	ld	hl, #_fireCooldown
      0032C2 7E                   11347 	ld	a, (hl)
      0032C3 B7                   11348 	or	a, a
      0032C4 28 01                11349 	jr	Z, 00105$
                                  11350 ;src/main.c:1260: --fireCooldown;
      0032C6 35                   11351 	dec	(hl)
      0032C7                      11352 00105$:
                                  11353 ;src/main.c:1263: if (joydata & J_SELECT && switchDelay == 0) {
      0032C7 FArF5r00             11354 	ld	a, (#_joydata)
      0032CA CB 77                11355 	bit	6, a
      0032CC 28 24                11356 	jr	Z, 00112$
      0032CE FArADr00             11357 	ld	a, (#_switchDelay)
      0032D1 B7                   11358 	or	a, a
      0032D2 20 1E                11359 	jr	NZ, 00112$
                                  11360 ;src/main.c:1264: if (currentGun == 0) {
      0032D4 21rA7r00             11361 	ld	hl, #_currentGun
      0032D7 7E                   11362 	ld	a, (hl)
      0032D8 B7                   11363 	or	a, a
      0032D9 20 04                11364 	jr	NZ, 00109$
                                  11365 ;src/main.c:1265: currentGun = 1;
      0032DB 36 01                11366 	ld	(hl), #0x01
      0032DD 18 0B                11367 	jr	00110$
      0032DF                      11368 00109$:
                                  11369 ;src/main.c:1267: else if (currentGun == 1) {
      0032DF FArA7r00             11370 	ld	a, (#_currentGun)
      0032E2 3D                   11371 	dec	a
      0032E3 20 05                11372 	jr	NZ, 00110$
                                  11373 ;src/main.c:1268: currentGun = 0;
      0032E5 21rA7r00             11374 	ld	hl, #_currentGun
      0032E8 36 00                11375 	ld	(hl), #0x00
      0032EA                      11376 00110$:
                                  11377 ;src/main.c:1270: setGunIcon();
      0032EA CDr0Cr25             11378 	call	_setGunIcon
                                  11379 ;src/main.c:1271: switchDelay = 30;
      0032ED 21rADr00             11380 	ld	hl, #_switchDelay
      0032F0 36 1E                11381 	ld	(hl), #0x1e
      0032F2                      11382 00112$:
                                  11383 ;src/main.c:1273: if (switchDelay != 0) {
      0032F2 21rADr00             11384 	ld	hl, #_switchDelay
      0032F5 7E                   11385 	ld	a, (hl)
      0032F6 B7                   11386 	or	a, a
      0032F7 28 01                11387 	jr	Z, 00115$
                                  11388 ;src/main.c:1274: switchDelay--;
      0032F9 35                   11389 	dec	(hl)
      0032FA                      11390 00115$:
                                  11391 ;src/main.c:1276: moveProjectiles();
      0032FA CDrE8r2A             11392 	call	_moveProjectiles
                                  11393 ;src/main.c:1277: tickPickups();
      0032FD CDr49r2C             11394 	call	_tickPickups
                                  11395 ;src/main.c:1278: tickEx();
      003300 CDr19r2E             11396 	call	_tickEx
                                  11397 ;src/main.c:1282: if (hull > 100) {
      003303 3E 64                11398 	ld	a, #0x64
      003305 21rF6r00             11399 	ld	hl, #_hull
      003308 96                   11400 	sub	a, (hl)
      003309 30 02                11401 	jr	NC, 00117$
                                  11402 ;src/main.c:1283: hull = 0;
      00330B 36 00                11403 	ld	(hl), #0x00
      00330D                      11404 00117$:
                                  11405 ;src/main.c:1286: SHOW_WIN;	
      00330D F0r00                11406 	ldh	a, (_LCDC_REG + 0)
      00330F F6 20                11407 	or	a, #0x20
      003311 E0r00                11408 	ldh	(_LCDC_REG + 0), a
                                  11409 ;src/main.c:1287: wait_vbl_done(); // Idle until next frame
      003313 CDr00r00             11410 	call	_wait_vbl_done
                                  11411 ;src/main.c:1292: }
      003316 C3r5Fr32             11412 	jp	00119$
                                  11413 	.area _CODE
                                  11414 	.area _INITIALIZER
      000000                      11415 __xinit__hullabel:
      000000 12                   11416 	.db #0x12	; 18
      000001 1F                   11417 	.db #0x1f	; 31
      000002 16                   11418 	.db #0x16	; 22
      000003 16                   11419 	.db #0x16	; 22
      000004                      11420 __xinit__shieldlabel:
      000004 1D                   11421 	.db #0x1d	; 29
      000005 12                   11422 	.db #0x12	; 18
      000006 16                   11423 	.db #0x16	; 22
      000007 0E                   11424 	.db #0x0e	; 14
      000008                      11425 __xinit__weaponlabel:
      000008 21                   11426 	.db #0x21	; 33
      000009 0F                   11427 	.db #0x0f	; 15
      00000A 1A                   11428 	.db #0x1a	; 26
      00000B 18                   11429 	.db #0x18	; 24
      00000C                      11430 __xinit__scorelabel:
      00000C 1D                   11431 	.db #0x1d	; 29
      00000D 0D                   11432 	.db #0x0d	; 13
      00000E 1C                   11433 	.db #0x1c	; 28
      00000F 0F                   11434 	.db #0x0f	; 15
      000010                      11435 __xinit__blob:
      000010 00 00                11436 	.dw #0x0000
      000012 00 00                11437 	.dw #0x0000
      000014 00                   11438 	.db #0x00	;  0
      000015 00                   11439 	.db #0x00	;  0
      000016 40                   11440 	.db #0x40	; 64
      000017 00                   11441 	.db #0x00	; 0
      000018 01                   11442 	.db #0x01	; 1
      000019 01                   11443 	.db #0x01	; 1
      00001A 01                   11444 	.db #0x01	; 1
      00001B 32                   11445 	.db #0x32	; 50	'2'
      00001C 03                   11446 	.db #0x03	;  3
      00001D 01                   11447 	.db #0x01	; 1
      00001E 00                   11448 	.db #0x00	;  0
      00001F 00                   11449 	.db #0x00	;  0
      000020 32 00                11450 	.dw #0x0032
      000022                      11451 __xinit__bomb:
      000022 00 00                11452 	.dw #0x0000
      000024 00 00                11453 	.dw #0x0000
      000026 00                   11454 	.db #0x00	;  0
      000027 00                   11455 	.db #0x00	;  0
      000028 42                   11456 	.db #0x42	; 66	'B'
      000029 00                   11457 	.db #0x00	; 0
      00002A 01                   11458 	.db #0x01	; 1
      00002B 01                   11459 	.db #0x01	; 1
      00002C 01                   11460 	.db #0x01	; 1
      00002D 32                   11461 	.db #0x32	; 50	'2'
      00002E 05                   11462 	.db #0x05	;  5
      00002F 01                   11463 	.db #0x01	; 1
      000030 00                   11464 	.db #0x00	;  0
      000031 00                   11465 	.db #0x00	;  0
      000032 32 00                11466 	.dw #0x0032
      000034                      11467 __xinit__miniship:
      000034 00 00                11468 	.dw #0x0000
      000036 00 00                11469 	.dw #0x0000
      000038 00                   11470 	.db #0x00	;  0
      000039 00                   11471 	.db #0x00	;  0
      00003A 44                   11472 	.db #0x44	; 68	'D'
      00003B 00                   11473 	.db #0x00	; 0
      00003C 01                   11474 	.db #0x01	; 1
      00003D 01                   11475 	.db #0x01	; 1
      00003E 01                   11476 	.db #0x01	; 1
      00003F 32                   11477 	.db #0x32	; 50	'2'
      000040 05                   11478 	.db #0x05	;  5
      000041 01                   11479 	.db #0x01	; 1
      000042 00                   11480 	.db #0x00	;  0
      000043 00                   11481 	.db #0x00	;  0
      000044 32 00                11482 	.dw #0x0032
      000046                      11483 __xinit__bigblob:
      000046 00 00                11484 	.dw #0x0000
      000048 00 00                11485 	.dw #0x0000
      00004A 00                   11486 	.db #0x00	;  0
      00004B 00                   11487 	.db #0x00	;  0
      00004C 50                   11488 	.db #0x50	; 80	'P'
      00004D 52                   11489 	.db #0x52	; 82	'R'
      00004E 02                   11490 	.db #0x02	; 2
      00004F 01                   11491 	.db #0x01	; 1
      000050 01                   11492 	.db #0x01	; 1
      000051 32                   11493 	.db #0x32	; 50	'2'
      000052 03                   11494 	.db #0x03	;  3
      000053 01                   11495 	.db #0x01	; 1
      000054 00                   11496 	.db #0x00	;  0
      000055 00                   11497 	.db #0x00	;  0
      000056 64 00                11498 	.dw #0x0064
      000058                      11499 __xinit__shieldship:
      000058 00 00                11500 	.dw #0x0000
      00005A 00 00                11501 	.dw #0x0000
      00005C 00                   11502 	.db #0x00	;  0
      00005D 00                   11503 	.db #0x00	;  0
      00005E 54                   11504 	.db #0x54	; 84	'T'
      00005F 56                   11505 	.db #0x56	; 86	'V'
      000060 02                   11506 	.db #0x02	; 2
      000061 01                   11507 	.db #0x01	; 1
      000062 01                   11508 	.db #0x01	; 1
      000063 32                   11509 	.db #0x32	; 50	'2'
      000064 03                   11510 	.db #0x03	;  3
      000065 01                   11511 	.db #0x01	; 1
      000066 00                   11512 	.db #0x00	;  0
      000067 00                   11513 	.db #0x00	;  0
      000068 46 00                11514 	.dw #0x0046
      00006A                      11515 __xinit__singleGun:
      00006A 00 00                11516 	.dw #0x0000
      00006C 00 00                11517 	.dw #0x0000
      00006E 00                   11518 	.db #0x00	;  0
      00006F 00                   11519 	.db #0x00	;  0
      000070 FF                   11520 	.db #0xff	; -1
      000071 02                   11521 	.db #0x02	; 2
      000072 32 00                11522 	.dw #0x0032
      000074 01                   11523 	.db #0x01	; 1
      000075 0F                   11524 	.db #0x0f	; 15
      000076 20                   11525 	.db #0x20	; 32
      000077                      11526 __xinit__doubleGun:
      000077 00 00                11527 	.dw #0x0000
      000079 00 00                11528 	.dw #0x0000
      00007B 00                   11529 	.db #0x00	;  0
      00007C 00                   11530 	.db #0x00	;  0
      00007D FF                   11531 	.db #0xff	; -1
      00007E 02                   11532 	.db #0x02	; 2
      00007F 46 00                11533 	.dw #0x0046
      000081 01                   11534 	.db #0x01	; 1
      000082 0F                   11535 	.db #0x0f	; 15
      000083 26                   11536 	.db #0x26	; 38
      000084                      11537 __xinit__missile:
      000084 00 00                11538 	.dw #0x0000
      000086 00 00                11539 	.dw #0x0000
      000088 00                   11540 	.db #0x00	;  0
      000089 00                   11541 	.db #0x00	;  0
      00008A FF                   11542 	.db #0xff	; -1
      00008B 01                   11543 	.db #0x01	; 1
      00008C 64 00                11544 	.dw #0x0064
      00008E 01                   11545 	.db #0x01	; 1
      00008F 1E                   11546 	.db #0x1e	; 30
      000090 2C                   11547 	.db #0x2c	; 44
      000091                      11548 __xinit__oldestProjectile:
      000091 00                   11549 	.db #0x00	; 0
      000092                      11550 __xinit__fireCooldown:
      000092 00                   11551 	.db #0x00	; 0
      000093                      11552 __xinit__xDir:
      000093 00                   11553 	.db #0x00	;  0
      000094                      11554 __xinit__yDir:
      000094 FF                   11555 	.db #0xff	; -1
      000095                      11556 __xinit__xSpeed:
      000095 00                   11557 	.db #0x00	;  0
      000096                      11558 __xinit__ySpeed:
      000096 00                   11559 	.db #0x00	;  0
      000097                      11560 __xinit__playerX:
      000097 00 0A                11561 	.dw #0x0a00
      000099                      11562 __xinit__playerY:
      000099 00 0A                11563 	.dw #0x0a00
      00009B                      11564 __xinit__playerDrawX:
      00009B 50                   11565 	.db #0x50	; 80	'P'
      00009C                      11566 __xinit__playerDrawY:
      00009C 50                   11567 	.db #0x50	; 80	'P'
      00009D                      11568 __xinit__bgX:
      00009D 00 00                11569 	.dw #0x0000
      00009F                      11570 __xinit__bgY:
      00009F 00 00                11571 	.dw #0x0000
      0000A1                      11572 __xinit__xOverflow:
      0000A1 00 00                11573 	.dw #0x0000
      0000A3                      11574 __xinit__yOverflow:
      0000A3 00 00                11575 	.dw #0x0000
      0000A5                      11576 __xinit__enemyCollisionCount:
      0000A5 00                   11577 	.db #0x00	; 0
      0000A6                      11578 __xinit__gunLevel:
      0000A6 00                   11579 	.db #0x00	; 0
      0000A7                      11580 __xinit__currentGun:
      0000A7 00                   11581 	.db #0x00	; 0
      0000A8                      11582 __xinit__missiles:
      0000A8 00                   11583 	.db #0x00	; 0
      0000A9                      11584 __xinit__MISSILES:
      0000A9 00 00 00 00          11585 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000AD                      11586 __xinit__switchDelay:
      0000AD 00                   11587 	.db #0x00	; 0
      0000AE                      11588 __xinit__gunMap:
      0000AE 53                   11589 	.db #0x53	; 83	'S'
      0000AF 5B                   11590 	.db #0x5b	; 91
      0000B0 61                   11591 	.db #0x61	; 97	'a'
      0000B1                      11592 __xinit__score:
      0000B1 00 00                11593 	.dw #0x0000
      0000B3                      11594 __xinit__SCORE:
      0000B3 00 00 00 00          11595 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B7                      11596 __xinit__INCREMENT:
      0000B7 01 00 00 00          11597 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000BB                      11598 __xinit__exCount:
      0000BB 03                   11599 	.db #0x03	; 3
      0000BC                      11600 __xinit__oldestEx:
      0000BC 00                   11601 	.db #0x00	; 0
                                  11602 	.area _CABS (ABS)
