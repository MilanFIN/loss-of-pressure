                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _updateMenu
                                     13 	.globl _showMenu
                                     14 	.globl _showStartScreen
                                     15 	.globl _initFont
                                     16 	.globl _showScoreScreen
                                     17 	.globl _initGame
                                     18 	.globl _initProjectiles
                                     19 	.globl _initEnemyOptions
                                     20 	.globl _tickEx
                                     21 	.globl _tickPickups
                                     22 	.globl _moveProjectiles
                                     23 	.globl _fire
                                     24 	.globl _setGunIcon
                                     25 	.globl _checkCollision
                                     26 	.globl _killEnemy
                                     27 	.globl _spawnPickup
                                     28 	.globl _takeDamage
                                     29 	.globl _move
                                     30 	.globl _updateEnemyPositions
                                     31 	.globl _initEnemy
                                     32 	.globl _initEnemies
                                     33 	.globl _playSound
                                     34 	.globl _updateDirection
                                     35 	.globl _incrementScore
                                     36 	.globl _updateMissileCount
                                     37 	.globl _updateScore
                                     38 	.globl _setHealthBar
                                     39 	.globl _interruptLCD
                                     40 	.globl _bcd2text
                                     41 	.globl _bcd_sub
                                     42 	.globl _bcd_add
                                     43 	.globl _rand
                                     44 	.globl _initrand
                                     45 	.globl _font_set
                                     46 	.globl _font_load
                                     47 	.globl _font_init
                                     48 	.globl _set_sprite_data
                                     49 	.globl _set_win_tiles
                                     50 	.globl _set_bkg_tiles
                                     51 	.globl _set_bkg_data
                                     52 	.globl _wait_vbl_done
                                     53 	.globl _set_interrupts
                                     54 	.globl _waitpadup
                                     55 	.globl _waitpad
                                     56 	.globl _joypad
                                     57 	.globl _add_LCD
                                     58 	.globl _auxTick
                                     59 	.globl _exTiles
                                     60 	.globl _oldestEx
                                     61 	.globl _INCREMENT
                                     62 	.globl _SCORE
                                     63 	.globl _score
                                     64 	.globl _gunMap
                                     65 	.globl _switchDelay
                                     66 	.globl _MISSILES
                                     67 	.globl _missiles
                                     68 	.globl _currentGun
                                     69 	.globl _gunLevel
                                     70 	.globl _enemyCollisionCount
                                     71 	.globl _yOverflow
                                     72 	.globl _xOverflow
                                     73 	.globl _bgY
                                     74 	.globl _bgX
                                     75 	.globl _playerDrawY
                                     76 	.globl _playerDrawX
                                     77 	.globl _playerY
                                     78 	.globl _playerX
                                     79 	.globl _ySpeed
                                     80 	.globl _xSpeed
                                     81 	.globl _yDir
                                     82 	.globl _xDir
                                     83 	.globl _fireCooldown
                                     84 	.globl _oldestProjectile
                                     85 	.globl _missile
                                     86 	.globl _doubleGun
                                     87 	.globl _singleGun
                                     88 	.globl _shieldship
                                     89 	.globl _bigblob
                                     90 	.globl _miniship
                                     91 	.globl _bomb
                                     92 	.globl _blob
                                     93 	.globl _controlsLabel
                                     94 	.globl _playLabel
                                     95 	.globl _pressStartLabel
                                     96 	.globl _emptyRow
                                     97 	.globl _toContinueLabel
                                     98 	.globl _pressAnyKeyLabel
                                     99 	.globl _endScoreLabel
                                    100 	.globl _scorelabel
                                    101 	.globl _weaponlabel
                                    102 	.globl _shieldlabel
                                    103 	.globl _hullabel
                                    104 	.globl _explosions
                                    105 	.globl _pickup
                                    106 	.globl _min_font
                                    107 	.globl _shield
                                    108 	.globl _hull
                                    109 	.globl _joydata
                                    110 	.globl _projectiles
                                    111 	.globl _enemies
                                    112 	.globl _enemyOptions
                                    113 	.globl _AUXTICKFREQUENCY
                                    114 	.globl _exTileCount
                                    115 	.globl _EXPLFRAMETIME
                                    116 	.globl _exCount
                                    117 	.globl _SPLASHDROPOFF
                                    118 	.globl _MAXGUNLEVEL
                                    119 	.globl _maxShield
                                    120 	.globl _maxHull
                                    121 	.globl _PLAYERSIZE
                                    122 	.globl _PROJECTILECOUNT
                                    123 	.globl _ySpawnPositions
                                    124 	.globl _xSpawnPositions
                                    125 	.globl _ENEMYCOUNT
                                    126 	.globl _EMPTYSPRITE
                                    127 	.globl _BLANK
                                    128 	.globl _BLANKSIZE
                                    129 	.globl _MenuPicker
                                    130 	.globl _Ex3
                                    131 	.globl _Ex2
                                    132 	.globl _Ex1
                                    133 	.globl _ex
                                    134 	.globl _Player1
                                    135 	.globl _Pickups
                                    136 	.globl _health
                                    137 	.globl _ammo
                                    138 	.globl _upgrade
                                    139 	.globl _ProjectileTiles
                                    140 	.globl _largeenemies
                                    141 	.globl _enemy1
                                    142 	.globl _enemyOptionCount
                                    143 	.globl _healthblock
                                    144 	.globl _backgroundtiles
                                    145 	.globl _background1
                                    146 	.globl _cross
                                    147 ;--------------------------------------------------------
                                    148 ; special function registers
                                    149 ;--------------------------------------------------------
                                    150 ;--------------------------------------------------------
                                    151 ; ram data
                                    152 ;--------------------------------------------------------
                                    153 	.area _DATA
      000000                        154 _enemyOptions::
      000000                        155 	.ds 90
      00005A                        156 _enemies::
      00005A                        157 	.ds 90
      0000B4                        158 _projectiles::
      0000B4                        159 	.ds 65
      0000F5                        160 _joydata::
      0000F5                        161 	.ds 1
      0000F6                        162 _hull::
      0000F6                        163 	.ds 1
      0000F7                        164 _shield::
      0000F7                        165 	.ds 1
      0000F8                        166 _min_font::
      0000F8                        167 	.ds 2
      0000FA                        168 _pickup::
      0000FA                        169 	.ds 9
      000103                        170 _explosions::
      000103                        171 	.ds 24
                                    172 ;--------------------------------------------------------
                                    173 ; ram data
                                    174 ;--------------------------------------------------------
                                    175 	.area _INITIALIZED
      000000                        176 _hullabel::
      000000                        177 	.ds 4
      000004                        178 _shieldlabel::
      000004                        179 	.ds 4
      000008                        180 _weaponlabel::
      000008                        181 	.ds 4
      00000C                        182 _scorelabel::
      00000C                        183 	.ds 4
      000010                        184 _endScoreLabel::
      000010                        185 	.ds 5
      000015                        186 _pressAnyKeyLabel::
      000015                        187 	.ds 13
      000022                        188 _toContinueLabel::
      000022                        189 	.ds 11
      00002D                        190 _emptyRow::
      00002D                        191 	.ds 20
      000041                        192 _pressStartLabel::
      000041                        193 	.ds 11
      00004C                        194 _playLabel::
      00004C                        195 	.ds 4
      000050                        196 _controlsLabel::
      000050                        197 	.ds 8
      000058                        198 _blob::
      000058                        199 	.ds 18
      00006A                        200 _bomb::
      00006A                        201 	.ds 18
      00007C                        202 _miniship::
      00007C                        203 	.ds 18
      00008E                        204 _bigblob::
      00008E                        205 	.ds 18
      0000A0                        206 _shieldship::
      0000A0                        207 	.ds 18
      0000B2                        208 _singleGun::
      0000B2                        209 	.ds 13
      0000BF                        210 _doubleGun::
      0000BF                        211 	.ds 13
      0000CC                        212 _missile::
      0000CC                        213 	.ds 13
      0000D9                        214 _oldestProjectile::
      0000D9                        215 	.ds 1
      0000DA                        216 _fireCooldown::
      0000DA                        217 	.ds 1
      0000DB                        218 _xDir::
      0000DB                        219 	.ds 1
      0000DC                        220 _yDir::
      0000DC                        221 	.ds 1
      0000DD                        222 _xSpeed::
      0000DD                        223 	.ds 1
      0000DE                        224 _ySpeed::
      0000DE                        225 	.ds 1
      0000DF                        226 _playerX::
      0000DF                        227 	.ds 2
      0000E1                        228 _playerY::
      0000E1                        229 	.ds 2
      0000E3                        230 _playerDrawX::
      0000E3                        231 	.ds 1
      0000E4                        232 _playerDrawY::
      0000E4                        233 	.ds 1
      0000E5                        234 _bgX::
      0000E5                        235 	.ds 2
      0000E7                        236 _bgY::
      0000E7                        237 	.ds 2
      0000E9                        238 _xOverflow::
      0000E9                        239 	.ds 2
      0000EB                        240 _yOverflow::
      0000EB                        241 	.ds 2
      0000ED                        242 _enemyCollisionCount::
      0000ED                        243 	.ds 1
      0000EE                        244 _gunLevel::
      0000EE                        245 	.ds 1
      0000EF                        246 _currentGun::
      0000EF                        247 	.ds 1
      0000F0                        248 _missiles::
      0000F0                        249 	.ds 1
      0000F1                        250 _MISSILES::
      0000F1                        251 	.ds 4
      0000F5                        252 _switchDelay::
      0000F5                        253 	.ds 1
      0000F6                        254 _gunMap::
      0000F6                        255 	.ds 3
      0000F9                        256 _score::
      0000F9                        257 	.ds 2
      0000FB                        258 _SCORE::
      0000FB                        259 	.ds 4
      0000FF                        260 _INCREMENT::
      0000FF                        261 	.ds 4
      000103                        262 _oldestEx::
      000103                        263 	.ds 1
      000104                        264 _exTiles::
      000104                        265 	.ds 3
      000107                        266 _auxTick::
      000107                        267 	.ds 1
                                    268 ;--------------------------------------------------------
                                    269 ; absolute external ram data
                                    270 ;--------------------------------------------------------
                                    271 	.area _DABS (ABS)
                                    272 ;--------------------------------------------------------
                                    273 ; global & static initialisations
                                    274 ;--------------------------------------------------------
                                    275 	.area _HOME
                                    276 	.area _GSINIT
                                    277 	.area _GSFINAL
                                    278 	.area _GSINIT
                                    279 ;--------------------------------------------------------
                                    280 ; Home
                                    281 ;--------------------------------------------------------
                                    282 	.area _HOME
                                    283 	.area _HOME
                                    284 ;--------------------------------------------------------
                                    285 ; code
                                    286 ;--------------------------------------------------------
                                    287 	.area _CODE
                                    288 ;src/main.c:152: void interruptLCD()
                                    289 ;	---------------------------------
                                    290 ; Function interruptLCD
                                    291 ; ---------------------------------
      000000                        292 _interruptLCD::
                                    293 ;src/main.c:154: HIDE_SPRITES;
      000000 F0r00                  294 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  295 	and	a, #0xfd
      000004 E0r00                  296 	ldh	(_LCDC_REG + 0), a
                                    297 ;src/main.c:155: }
      000006 C9                     298 	ret
      000007                        299 _cross:
      000007 18                     300 	.db #0x18	; 24
      000008 18                     301 	.db #0x18	; 24
      000009 18                     302 	.db #0x18	; 24
      00000A 18                     303 	.db #0x18	; 24
      00000B 3C                     304 	.db #0x3c	; 60
      00000C 3C                     305 	.db #0x3c	; 60
      00000D 3C                     306 	.db #0x3c	; 60
      00000E 3C                     307 	.db #0x3c	; 60
      00000F 7E                     308 	.db #0x7e	; 126
      000010 7E                     309 	.db #0x7e	; 126
      000011 7E                     310 	.db #0x7e	; 126
      000012 7E                     311 	.db #0x7e	; 126
      000013 FF                     312 	.db #0xff	; 255
      000014 FF                     313 	.db #0xff	; 255
      000015 FF                     314 	.db #0xff	; 255
      000016 FF                     315 	.db #0xff	; 255
      000017 0F                     316 	.db #0x0f	; 15
      000018 0F                     317 	.db #0x0f	; 15
      000019 3F                     318 	.db #0x3f	; 63
      00001A 3F                     319 	.db #0x3f	; 63
      00001B FF                     320 	.db #0xff	; 255
      00001C FF                     321 	.db #0xff	; 255
      00001D FF                     322 	.db #0xff	; 255
      00001E FF                     323 	.db #0xff	; 255
      00001F 7E                     324 	.db #0x7e	; 126
      000020 7E                     325 	.db #0x7e	; 126
      000021 3E                     326 	.db #0x3e	; 62
      000022 3E                     327 	.db #0x3e	; 62
      000023 1C                     328 	.db #0x1c	; 28
      000024 1C                     329 	.db #0x1c	; 28
      000025 0C                     330 	.db #0x0c	; 12
      000026 0C                     331 	.db #0x0c	; 12
      000027 C0                     332 	.db #0xc0	; 192
      000028 C0                     333 	.db #0xc0	; 192
      000029 F0                     334 	.db #0xf0	; 240
      00002A F0                     335 	.db #0xf0	; 240
      00002B FC                     336 	.db #0xfc	; 252
      00002C FC                     337 	.db #0xfc	; 252
      00002D FF                     338 	.db #0xff	; 255
      00002E FF                     339 	.db #0xff	; 255
      00002F FF                     340 	.db #0xff	; 255
      000030 FF                     341 	.db #0xff	; 255
      000031 FC                     342 	.db #0xfc	; 252
      000032 FC                     343 	.db #0xfc	; 252
      000033 F0                     344 	.db #0xf0	; 240
      000034 F0                     345 	.db #0xf0	; 240
      000035 C0                     346 	.db #0xc0	; 192
      000036 C0                     347 	.db #0xc0	; 192
      000037 0C                     348 	.db #0x0c	; 12
      000038 0C                     349 	.db #0x0c	; 12
      000039 1C                     350 	.db #0x1c	; 28
      00003A 1C                     351 	.db #0x1c	; 28
      00003B 3E                     352 	.db #0x3e	; 62
      00003C 3E                     353 	.db #0x3e	; 62
      00003D 7E                     354 	.db #0x7e	; 126
      00003E 7E                     355 	.db #0x7e	; 126
      00003F FF                     356 	.db #0xff	; 255
      000040 FF                     357 	.db #0xff	; 255
      000041 FF                     358 	.db #0xff	; 255
      000042 FF                     359 	.db #0xff	; 255
      000043 3F                     360 	.db #0x3f	; 63
      000044 3F                     361 	.db #0x3f	; 63
      000045 0F                     362 	.db #0x0f	; 15
      000046 0F                     363 	.db #0x0f	; 15
      000047 FF                     364 	.db #0xff	; 255
      000048 FF                     365 	.db #0xff	; 255
      000049 FF                     366 	.db #0xff	; 255
      00004A FF                     367 	.db #0xff	; 255
      00004B 7E                     368 	.db #0x7e	; 126
      00004C 7E                     369 	.db #0x7e	; 126
      00004D 7E                     370 	.db #0x7e	; 126
      00004E 7E                     371 	.db #0x7e	; 126
      00004F 3C                     372 	.db #0x3c	; 60
      000050 3C                     373 	.db #0x3c	; 60
      000051 3C                     374 	.db #0x3c	; 60
      000052 3C                     375 	.db #0x3c	; 60
      000053 18                     376 	.db #0x18	; 24
      000054 18                     377 	.db #0x18	; 24
      000055 18                     378 	.db #0x18	; 24
      000056 18                     379 	.db #0x18	; 24
      000057 30                     380 	.db #0x30	; 48	'0'
      000058 30                     381 	.db #0x30	; 48	'0'
      000059 38                     382 	.db #0x38	; 56	'8'
      00005A 38                     383 	.db #0x38	; 56	'8'
      00005B 7C                     384 	.db #0x7c	; 124
      00005C 7C                     385 	.db #0x7c	; 124
      00005D 7E                     386 	.db #0x7e	; 126
      00005E 7E                     387 	.db #0x7e	; 126
      00005F FF                     388 	.db #0xff	; 255
      000060 FF                     389 	.db #0xff	; 255
      000061 FF                     390 	.db #0xff	; 255
      000062 FF                     391 	.db #0xff	; 255
      000063 FC                     392 	.db #0xfc	; 252
      000064 FC                     393 	.db #0xfc	; 252
      000065 F0                     394 	.db #0xf0	; 240
      000066 F0                     395 	.db #0xf0	; 240
      000067 03                     396 	.db #0x03	; 3
      000068 03                     397 	.db #0x03	; 3
      000069 0F                     398 	.db #0x0f	; 15
      00006A 0F                     399 	.db #0x0f	; 15
      00006B 3F                     400 	.db #0x3f	; 63
      00006C 3F                     401 	.db #0x3f	; 63
      00006D FF                     402 	.db #0xff	; 255
      00006E FF                     403 	.db #0xff	; 255
      00006F FF                     404 	.db #0xff	; 255
      000070 FF                     405 	.db #0xff	; 255
      000071 3F                     406 	.db #0x3f	; 63
      000072 3F                     407 	.db #0x3f	; 63
      000073 0F                     408 	.db #0x0f	; 15
      000074 0F                     409 	.db #0x0f	; 15
      000075 03                     410 	.db #0x03	; 3
      000076 03                     411 	.db #0x03	; 3
      000077 F0                     412 	.db #0xf0	; 240
      000078 F0                     413 	.db #0xf0	; 240
      000079 FC                     414 	.db #0xfc	; 252
      00007A FC                     415 	.db #0xfc	; 252
      00007B FF                     416 	.db #0xff	; 255
      00007C FF                     417 	.db #0xff	; 255
      00007D FF                     418 	.db #0xff	; 255
      00007E FF                     419 	.db #0xff	; 255
      00007F 7E                     420 	.db #0x7e	; 126
      000080 7E                     421 	.db #0x7e	; 126
      000081 7C                     422 	.db #0x7c	; 124
      000082 7C                     423 	.db #0x7c	; 124
      000083 38                     424 	.db #0x38	; 56	'8'
      000084 38                     425 	.db #0x38	; 56	'8'
      000085 30                     426 	.db #0x30	; 48	'0'
      000086 30                     427 	.db #0x30	; 48	'0'
      000087                        428 _background1:
      000087 26                     429 	.db #0x26	; 38
      000088 26                     430 	.db #0x26	; 38
      000089 26                     431 	.db #0x26	; 38
      00008A 26                     432 	.db #0x26	; 38
      00008B 26                     433 	.db #0x26	; 38
      00008C 26                     434 	.db #0x26	; 38
      00008D 26                     435 	.db #0x26	; 38
      00008E 26                     436 	.db #0x26	; 38
      00008F 26                     437 	.db #0x26	; 38
      000090 26                     438 	.db #0x26	; 38
      000091 26                     439 	.db #0x26	; 38
      000092 2A                     440 	.db #0x2a	; 42
      000093 29                     441 	.db #0x29	; 41
      000094 26                     442 	.db #0x26	; 38
      000095 26                     443 	.db #0x26	; 38
      000096 26                     444 	.db #0x26	; 38
      000097 26                     445 	.db #0x26	; 38
      000098 26                     446 	.db #0x26	; 38
      000099 26                     447 	.db #0x26	; 38
      00009A 26                     448 	.db #0x26	; 38
      00009B 2C                     449 	.db #0x2c	; 44
      00009C 26                     450 	.db #0x26	; 38
      00009D 26                     451 	.db #0x26	; 38
      00009E 26                     452 	.db #0x26	; 38
      00009F 26                     453 	.db #0x26	; 38
      0000A0 26                     454 	.db #0x26	; 38
      0000A1 26                     455 	.db #0x26	; 38
      0000A2 26                     456 	.db #0x26	; 38
      0000A3 26                     457 	.db #0x26	; 38
      0000A4 26                     458 	.db #0x26	; 38
      0000A5 26                     459 	.db #0x26	; 38
      0000A6 26                     460 	.db #0x26	; 38
      0000A7 26                     461 	.db #0x26	; 38
      0000A8 2B                     462 	.db #0x2b	; 43
      0000A9 26                     463 	.db #0x26	; 38
      0000AA 26                     464 	.db #0x26	; 38
      0000AB 26                     465 	.db #0x26	; 38
      0000AC 26                     466 	.db #0x26	; 38
      0000AD 26                     467 	.db #0x26	; 38
      0000AE 26                     468 	.db #0x26	; 38
      0000AF 26                     469 	.db #0x26	; 38
      0000B0 26                     470 	.db #0x26	; 38
      0000B1 26                     471 	.db #0x26	; 38
      0000B2 26                     472 	.db #0x26	; 38
      0000B3 26                     473 	.db #0x26	; 38
      0000B4 26                     474 	.db #0x26	; 38
      0000B5 26                     475 	.db #0x26	; 38
      0000B6 26                     476 	.db #0x26	; 38
      0000B7 26                     477 	.db #0x26	; 38
      0000B8 26                     478 	.db #0x26	; 38
      0000B9 26                     479 	.db #0x26	; 38
      0000BA 26                     480 	.db #0x26	; 38
      0000BB 26                     481 	.db #0x26	; 38
      0000BC 26                     482 	.db #0x26	; 38
      0000BD 26                     483 	.db #0x26	; 38
      0000BE 26                     484 	.db #0x26	; 38
      0000BF 26                     485 	.db #0x26	; 38
      0000C0 26                     486 	.db #0x26	; 38
      0000C1 26                     487 	.db #0x26	; 38
      0000C2 26                     488 	.db #0x26	; 38
      0000C3 26                     489 	.db #0x26	; 38
      0000C4 26                     490 	.db #0x26	; 38
      0000C5 26                     491 	.db #0x26	; 38
      0000C6 26                     492 	.db #0x26	; 38
      0000C7 26                     493 	.db #0x26	; 38
      0000C8 26                     494 	.db #0x26	; 38
      0000C9 26                     495 	.db #0x26	; 38
      0000CA 26                     496 	.db #0x26	; 38
      0000CB 26                     497 	.db #0x26	; 38
      0000CC 26                     498 	.db #0x26	; 38
      0000CD 26                     499 	.db #0x26	; 38
      0000CE 26                     500 	.db #0x26	; 38
      0000CF 26                     501 	.db #0x26	; 38
      0000D0 26                     502 	.db #0x26	; 38
      0000D1 26                     503 	.db #0x26	; 38
      0000D2 26                     504 	.db #0x26	; 38
      0000D3 26                     505 	.db #0x26	; 38
      0000D4 26                     506 	.db #0x26	; 38
      0000D5 26                     507 	.db #0x26	; 38
      0000D6 26                     508 	.db #0x26	; 38
      0000D7 26                     509 	.db #0x26	; 38
      0000D8 26                     510 	.db #0x26	; 38
      0000D9 26                     511 	.db #0x26	; 38
      0000DA 26                     512 	.db #0x26	; 38
      0000DB 26                     513 	.db #0x26	; 38
      0000DC 26                     514 	.db #0x26	; 38
      0000DD 26                     515 	.db #0x26	; 38
      0000DE 26                     516 	.db #0x26	; 38
      0000DF 26                     517 	.db #0x26	; 38
      0000E0 26                     518 	.db #0x26	; 38
      0000E1 26                     519 	.db #0x26	; 38
      0000E2 26                     520 	.db #0x26	; 38
      0000E3 26                     521 	.db #0x26	; 38
      0000E4 26                     522 	.db #0x26	; 38
      0000E5 26                     523 	.db #0x26	; 38
      0000E6 26                     524 	.db #0x26	; 38
      0000E7 26                     525 	.db #0x26	; 38
      0000E8 26                     526 	.db #0x26	; 38
      0000E9 26                     527 	.db #0x26	; 38
      0000EA 26                     528 	.db #0x26	; 38
      0000EB 26                     529 	.db #0x26	; 38
      0000EC 26                     530 	.db #0x26	; 38
      0000ED 26                     531 	.db #0x26	; 38
      0000EE 26                     532 	.db #0x26	; 38
      0000EF 26                     533 	.db #0x26	; 38
      0000F0 26                     534 	.db #0x26	; 38
      0000F1 26                     535 	.db #0x26	; 38
      0000F2 26                     536 	.db #0x26	; 38
      0000F3 26                     537 	.db #0x26	; 38
      0000F4 26                     538 	.db #0x26	; 38
      0000F5 26                     539 	.db #0x26	; 38
      0000F6 26                     540 	.db #0x26	; 38
      0000F7 26                     541 	.db #0x26	; 38
      0000F8 2B                     542 	.db #0x2b	; 43
      0000F9 26                     543 	.db #0x26	; 38
      0000FA 26                     544 	.db #0x26	; 38
      0000FB 26                     545 	.db #0x26	; 38
      0000FC 26                     546 	.db #0x26	; 38
      0000FD 26                     547 	.db #0x26	; 38
      0000FE 26                     548 	.db #0x26	; 38
      0000FF 2B                     549 	.db #0x2b	; 43
      000100 26                     550 	.db #0x26	; 38
      000101 26                     551 	.db #0x26	; 38
      000102 26                     552 	.db #0x26	; 38
      000103 26                     553 	.db #0x26	; 38
      000104 26                     554 	.db #0x26	; 38
      000105 26                     555 	.db #0x26	; 38
      000106 26                     556 	.db #0x26	; 38
      000107 26                     557 	.db #0x26	; 38
      000108 26                     558 	.db #0x26	; 38
      000109 26                     559 	.db #0x26	; 38
      00010A 26                     560 	.db #0x26	; 38
      00010B 26                     561 	.db #0x26	; 38
      00010C 2B                     562 	.db #0x2b	; 43
      00010D 26                     563 	.db #0x26	; 38
      00010E 26                     564 	.db #0x26	; 38
      00010F 26                     565 	.db #0x26	; 38
      000110 26                     566 	.db #0x26	; 38
      000111 26                     567 	.db #0x26	; 38
      000112 26                     568 	.db #0x26	; 38
      000113 26                     569 	.db #0x26	; 38
      000114 2C                     570 	.db #0x2c	; 44
      000115 26                     571 	.db #0x26	; 38
      000116 26                     572 	.db #0x26	; 38
      000117 26                     573 	.db #0x26	; 38
      000118 26                     574 	.db #0x26	; 38
      000119 26                     575 	.db #0x26	; 38
      00011A 26                     576 	.db #0x26	; 38
      00011B 26                     577 	.db #0x26	; 38
      00011C 26                     578 	.db #0x26	; 38
      00011D 26                     579 	.db #0x26	; 38
      00011E 26                     580 	.db #0x26	; 38
      00011F 26                     581 	.db #0x26	; 38
      000120 26                     582 	.db #0x26	; 38
      000121 26                     583 	.db #0x26	; 38
      000122 26                     584 	.db #0x26	; 38
      000123 26                     585 	.db #0x26	; 38
      000124 26                     586 	.db #0x26	; 38
      000125 26                     587 	.db #0x26	; 38
      000126 26                     588 	.db #0x26	; 38
      000127 26                     589 	.db #0x26	; 38
      000128 26                     590 	.db #0x26	; 38
      000129 2C                     591 	.db #0x2c	; 44
      00012A 26                     592 	.db #0x26	; 38
      00012B 26                     593 	.db #0x26	; 38
      00012C 26                     594 	.db #0x26	; 38
      00012D 26                     595 	.db #0x26	; 38
      00012E 25                     596 	.db #0x25	; 37
      00012F 26                     597 	.db #0x26	; 38
      000130 26                     598 	.db #0x26	; 38
      000131 26                     599 	.db #0x26	; 38
      000132 26                     600 	.db #0x26	; 38
      000133 26                     601 	.db #0x26	; 38
      000134 26                     602 	.db #0x26	; 38
      000135 26                     603 	.db #0x26	; 38
      000136 26                     604 	.db #0x26	; 38
      000137 26                     605 	.db #0x26	; 38
      000138 26                     606 	.db #0x26	; 38
      000139 26                     607 	.db #0x26	; 38
      00013A 26                     608 	.db #0x26	; 38
      00013B 26                     609 	.db #0x26	; 38
      00013C 2C                     610 	.db #0x2c	; 44
      00013D 26                     611 	.db #0x26	; 38
      00013E 26                     612 	.db #0x26	; 38
      00013F 26                     613 	.db #0x26	; 38
      000140 26                     614 	.db #0x26	; 38
      000141 26                     615 	.db #0x26	; 38
      000142 26                     616 	.db #0x26	; 38
      000143 26                     617 	.db #0x26	; 38
      000144 2B                     618 	.db #0x2b	; 43
      000145 26                     619 	.db #0x26	; 38
      000146 26                     620 	.db #0x26	; 38
      000147 26                     621 	.db #0x26	; 38
      000148 26                     622 	.db #0x26	; 38
      000149 26                     623 	.db #0x26	; 38
      00014A 26                     624 	.db #0x26	; 38
      00014B 26                     625 	.db #0x26	; 38
      00014C 26                     626 	.db #0x26	; 38
      00014D 26                     627 	.db #0x26	; 38
      00014E 26                     628 	.db #0x26	; 38
      00014F 26                     629 	.db #0x26	; 38
      000150 26                     630 	.db #0x26	; 38
      000151 26                     631 	.db #0x26	; 38
      000152 26                     632 	.db #0x26	; 38
      000153 26                     633 	.db #0x26	; 38
      000154 26                     634 	.db #0x26	; 38
      000155 26                     635 	.db #0x26	; 38
      000156 26                     636 	.db #0x26	; 38
      000157 26                     637 	.db #0x26	; 38
      000158 26                     638 	.db #0x26	; 38
      000159 26                     639 	.db #0x26	; 38
      00015A 26                     640 	.db #0x26	; 38
      00015B 26                     641 	.db #0x26	; 38
      00015C 26                     642 	.db #0x26	; 38
      00015D 26                     643 	.db #0x26	; 38
      00015E 26                     644 	.db #0x26	; 38
      00015F 26                     645 	.db #0x26	; 38
      000160 2C                     646 	.db #0x2c	; 44
      000161 26                     647 	.db #0x26	; 38
      000162 26                     648 	.db #0x26	; 38
      000163 26                     649 	.db #0x26	; 38
      000164 26                     650 	.db #0x26	; 38
      000165 26                     651 	.db #0x26	; 38
      000166 26                     652 	.db #0x26	; 38
      000167 26                     653 	.db #0x26	; 38
      000168 26                     654 	.db #0x26	; 38
      000169 26                     655 	.db #0x26	; 38
      00016A 26                     656 	.db #0x26	; 38
      00016B 26                     657 	.db #0x26	; 38
      00016C 26                     658 	.db #0x26	; 38
      00016D 26                     659 	.db #0x26	; 38
      00016E 26                     660 	.db #0x26	; 38
      00016F 26                     661 	.db #0x26	; 38
      000170 26                     662 	.db #0x26	; 38
      000171 26                     663 	.db #0x26	; 38
      000172 26                     664 	.db #0x26	; 38
      000173 26                     665 	.db #0x26	; 38
      000174 26                     666 	.db #0x26	; 38
      000175 26                     667 	.db #0x26	; 38
      000176 26                     668 	.db #0x26	; 38
      000177 26                     669 	.db #0x26	; 38
      000178 26                     670 	.db #0x26	; 38
      000179 26                     671 	.db #0x26	; 38
      00017A 26                     672 	.db #0x26	; 38
      00017B 26                     673 	.db #0x26	; 38
      00017C 26                     674 	.db #0x26	; 38
      00017D 26                     675 	.db #0x26	; 38
      00017E 26                     676 	.db #0x26	; 38
      00017F 26                     677 	.db #0x26	; 38
      000180 26                     678 	.db #0x26	; 38
      000181 26                     679 	.db #0x26	; 38
      000182 26                     680 	.db #0x26	; 38
      000183 26                     681 	.db #0x26	; 38
      000184 26                     682 	.db #0x26	; 38
      000185 26                     683 	.db #0x26	; 38
      000186 26                     684 	.db #0x26	; 38
      000187 26                     685 	.db #0x26	; 38
      000188 26                     686 	.db #0x26	; 38
      000189 26                     687 	.db #0x26	; 38
      00018A 26                     688 	.db #0x26	; 38
      00018B 26                     689 	.db #0x26	; 38
      00018C 26                     690 	.db #0x26	; 38
      00018D 26                     691 	.db #0x26	; 38
      00018E 26                     692 	.db #0x26	; 38
      00018F 26                     693 	.db #0x26	; 38
      000190 26                     694 	.db #0x26	; 38
      000191 26                     695 	.db #0x26	; 38
      000192 26                     696 	.db #0x26	; 38
      000193 26                     697 	.db #0x26	; 38
      000194 26                     698 	.db #0x26	; 38
      000195 2B                     699 	.db #0x2b	; 43
      000196 26                     700 	.db #0x26	; 38
      000197 26                     701 	.db #0x26	; 38
      000198 26                     702 	.db #0x26	; 38
      000199 26                     703 	.db #0x26	; 38
      00019A 26                     704 	.db #0x26	; 38
      00019B 26                     705 	.db #0x26	; 38
      00019C 26                     706 	.db #0x26	; 38
      00019D 26                     707 	.db #0x26	; 38
      00019E 26                     708 	.db #0x26	; 38
      00019F 26                     709 	.db #0x26	; 38
      0001A0 26                     710 	.db #0x26	; 38
      0001A1 26                     711 	.db #0x26	; 38
      0001A2 26                     712 	.db #0x26	; 38
      0001A3 26                     713 	.db #0x26	; 38
      0001A4 26                     714 	.db #0x26	; 38
      0001A5 26                     715 	.db #0x26	; 38
      0001A6 25                     716 	.db #0x25	; 37
      0001A7 26                     717 	.db #0x26	; 38
      0001A8 26                     718 	.db #0x26	; 38
      0001A9 26                     719 	.db #0x26	; 38
      0001AA 2B                     720 	.db #0x2b	; 43
      0001AB 26                     721 	.db #0x26	; 38
      0001AC 26                     722 	.db #0x26	; 38
      0001AD 26                     723 	.db #0x26	; 38
      0001AE 26                     724 	.db #0x26	; 38
      0001AF 26                     725 	.db #0x26	; 38
      0001B0 26                     726 	.db #0x26	; 38
      0001B1 26                     727 	.db #0x26	; 38
      0001B2 26                     728 	.db #0x26	; 38
      0001B3 26                     729 	.db #0x26	; 38
      0001B4 26                     730 	.db #0x26	; 38
      0001B5 26                     731 	.db #0x26	; 38
      0001B6 26                     732 	.db #0x26	; 38
      0001B7 26                     733 	.db #0x26	; 38
      0001B8 26                     734 	.db #0x26	; 38
      0001B9 26                     735 	.db #0x26	; 38
      0001BA 26                     736 	.db #0x26	; 38
      0001BB 26                     737 	.db #0x26	; 38
      0001BC 26                     738 	.db #0x26	; 38
      0001BD 26                     739 	.db #0x26	; 38
      0001BE 26                     740 	.db #0x26	; 38
      0001BF 26                     741 	.db #0x26	; 38
      0001C0 26                     742 	.db #0x26	; 38
      0001C1 26                     743 	.db #0x26	; 38
      0001C2 26                     744 	.db #0x26	; 38
      0001C3 26                     745 	.db #0x26	; 38
      0001C4 2B                     746 	.db #0x2b	; 43
      0001C5 26                     747 	.db #0x26	; 38
      0001C6 26                     748 	.db #0x26	; 38
      0001C7 26                     749 	.db #0x26	; 38
      0001C8 26                     750 	.db #0x26	; 38
      0001C9 26                     751 	.db #0x26	; 38
      0001CA 26                     752 	.db #0x26	; 38
      0001CB 26                     753 	.db #0x26	; 38
      0001CC 26                     754 	.db #0x26	; 38
      0001CD 26                     755 	.db #0x26	; 38
      0001CE 26                     756 	.db #0x26	; 38
      0001CF 26                     757 	.db #0x26	; 38
      0001D0 26                     758 	.db #0x26	; 38
      0001D1 26                     759 	.db #0x26	; 38
      0001D2 26                     760 	.db #0x26	; 38
      0001D3 26                     761 	.db #0x26	; 38
      0001D4 26                     762 	.db #0x26	; 38
      0001D5 26                     763 	.db #0x26	; 38
      0001D6 26                     764 	.db #0x26	; 38
      0001D7 26                     765 	.db #0x26	; 38
      0001D8 26                     766 	.db #0x26	; 38
      0001D9 26                     767 	.db #0x26	; 38
      0001DA 27                     768 	.db #0x27	; 39
      0001DB 28                     769 	.db #0x28	; 40
      0001DC 26                     770 	.db #0x26	; 38
      0001DD 26                     771 	.db #0x26	; 38
      0001DE 26                     772 	.db #0x26	; 38
      0001DF 26                     773 	.db #0x26	; 38
      0001E0 26                     774 	.db #0x26	; 38
      0001E1 26                     775 	.db #0x26	; 38
      0001E2 26                     776 	.db #0x26	; 38
      0001E3 26                     777 	.db #0x26	; 38
      0001E4 26                     778 	.db #0x26	; 38
      0001E5 26                     779 	.db #0x26	; 38
      0001E6 26                     780 	.db #0x26	; 38
      0001E7 26                     781 	.db #0x26	; 38
      0001E8 26                     782 	.db #0x26	; 38
      0001E9 26                     783 	.db #0x26	; 38
      0001EA 26                     784 	.db #0x26	; 38
      0001EB 26                     785 	.db #0x26	; 38
      0001EC 26                     786 	.db #0x26	; 38
      0001ED 26                     787 	.db #0x26	; 38
      0001EE 26                     788 	.db #0x26	; 38
      0001EF 26                     789 	.db #0x26	; 38
      0001F0 26                     790 	.db #0x26	; 38
      0001F1 26                     791 	.db #0x26	; 38
      0001F2 26                     792 	.db #0x26	; 38
      0001F3 26                     793 	.db #0x26	; 38
      0001F4 26                     794 	.db #0x26	; 38
      0001F5 26                     795 	.db #0x26	; 38
      0001F6 26                     796 	.db #0x26	; 38
      0001F7 26                     797 	.db #0x26	; 38
      0001F8 26                     798 	.db #0x26	; 38
      0001F9 26                     799 	.db #0x26	; 38
      0001FA 2A                     800 	.db #0x2a	; 42
      0001FB 29                     801 	.db #0x29	; 41
      0001FC 26                     802 	.db #0x26	; 38
      0001FD 26                     803 	.db #0x26	; 38
      0001FE 26                     804 	.db #0x26	; 38
      0001FF 26                     805 	.db #0x26	; 38
      000200 26                     806 	.db #0x26	; 38
      000201 26                     807 	.db #0x26	; 38
      000202 26                     808 	.db #0x26	; 38
      000203 26                     809 	.db #0x26	; 38
      000204 26                     810 	.db #0x26	; 38
      000205 26                     811 	.db #0x26	; 38
      000206 26                     812 	.db #0x26	; 38
      000207 26                     813 	.db #0x26	; 38
      000208 26                     814 	.db #0x26	; 38
      000209 26                     815 	.db #0x26	; 38
      00020A 26                     816 	.db #0x26	; 38
      00020B 26                     817 	.db #0x26	; 38
      00020C 26                     818 	.db #0x26	; 38
      00020D 26                     819 	.db #0x26	; 38
      00020E 27                     820 	.db #0x27	; 39
      00020F 28                     821 	.db #0x28	; 40
      000210 26                     822 	.db #0x26	; 38
      000211 26                     823 	.db #0x26	; 38
      000212 26                     824 	.db #0x26	; 38
      000213 26                     825 	.db #0x26	; 38
      000214 26                     826 	.db #0x26	; 38
      000215 26                     827 	.db #0x26	; 38
      000216 26                     828 	.db #0x26	; 38
      000217 26                     829 	.db #0x26	; 38
      000218 26                     830 	.db #0x26	; 38
      000219 26                     831 	.db #0x26	; 38
      00021A 26                     832 	.db #0x26	; 38
      00021B 26                     833 	.db #0x26	; 38
      00021C 26                     834 	.db #0x26	; 38
      00021D 26                     835 	.db #0x26	; 38
      00021E 26                     836 	.db #0x26	; 38
      00021F 2C                     837 	.db #0x2c	; 44
      000220 26                     838 	.db #0x26	; 38
      000221 26                     839 	.db #0x26	; 38
      000222 26                     840 	.db #0x26	; 38
      000223 26                     841 	.db #0x26	; 38
      000224 26                     842 	.db #0x26	; 38
      000225 26                     843 	.db #0x26	; 38
      000226 26                     844 	.db #0x26	; 38
      000227 26                     845 	.db #0x26	; 38
      000228 26                     846 	.db #0x26	; 38
      000229 26                     847 	.db #0x26	; 38
      00022A 26                     848 	.db #0x26	; 38
      00022B 26                     849 	.db #0x26	; 38
      00022C 26                     850 	.db #0x26	; 38
      00022D 26                     851 	.db #0x26	; 38
      00022E 2A                     852 	.db #0x2a	; 42
      00022F 29                     853 	.db #0x29	; 41
      000230 26                     854 	.db #0x26	; 38
      000231 26                     855 	.db #0x26	; 38
      000232 26                     856 	.db #0x26	; 38
      000233 26                     857 	.db #0x26	; 38
      000234 26                     858 	.db #0x26	; 38
      000235 26                     859 	.db #0x26	; 38
      000236 26                     860 	.db #0x26	; 38
      000237 26                     861 	.db #0x26	; 38
      000238 26                     862 	.db #0x26	; 38
      000239 26                     863 	.db #0x26	; 38
      00023A 26                     864 	.db #0x26	; 38
      00023B 26                     865 	.db #0x26	; 38
      00023C 26                     866 	.db #0x26	; 38
      00023D 25                     867 	.db #0x25	; 37
      00023E 26                     868 	.db #0x26	; 38
      00023F 26                     869 	.db #0x26	; 38
      000240 26                     870 	.db #0x26	; 38
      000241 26                     871 	.db #0x26	; 38
      000242 26                     872 	.db #0x26	; 38
      000243 26                     873 	.db #0x26	; 38
      000244 2C                     874 	.db #0x2c	; 44
      000245 26                     875 	.db #0x26	; 38
      000246 26                     876 	.db #0x26	; 38
      000247 26                     877 	.db #0x26	; 38
      000248 26                     878 	.db #0x26	; 38
      000249 26                     879 	.db #0x26	; 38
      00024A 26                     880 	.db #0x26	; 38
      00024B 26                     881 	.db #0x26	; 38
      00024C 26                     882 	.db #0x26	; 38
      00024D 26                     883 	.db #0x26	; 38
      00024E 26                     884 	.db #0x26	; 38
      00024F 26                     885 	.db #0x26	; 38
      000250 26                     886 	.db #0x26	; 38
      000251 26                     887 	.db #0x26	; 38
      000252 26                     888 	.db #0x26	; 38
      000253 26                     889 	.db #0x26	; 38
      000254 26                     890 	.db #0x26	; 38
      000255 26                     891 	.db #0x26	; 38
      000256 26                     892 	.db #0x26	; 38
      000257 26                     893 	.db #0x26	; 38
      000258 26                     894 	.db #0x26	; 38
      000259 26                     895 	.db #0x26	; 38
      00025A 26                     896 	.db #0x26	; 38
      00025B 26                     897 	.db #0x26	; 38
      00025C 26                     898 	.db #0x26	; 38
      00025D 26                     899 	.db #0x26	; 38
      00025E 26                     900 	.db #0x26	; 38
      00025F 26                     901 	.db #0x26	; 38
      000260 26                     902 	.db #0x26	; 38
      000261 26                     903 	.db #0x26	; 38
      000262 26                     904 	.db #0x26	; 38
      000263 26                     905 	.db #0x26	; 38
      000264 26                     906 	.db #0x26	; 38
      000265 26                     907 	.db #0x26	; 38
      000266 26                     908 	.db #0x26	; 38
      000267 26                     909 	.db #0x26	; 38
      000268 26                     910 	.db #0x26	; 38
      000269 26                     911 	.db #0x26	; 38
      00026A 2C                     912 	.db #0x2c	; 44
      00026B 26                     913 	.db #0x26	; 38
      00026C 26                     914 	.db #0x26	; 38
      00026D 26                     915 	.db #0x26	; 38
      00026E 26                     916 	.db #0x26	; 38
      00026F 26                     917 	.db #0x26	; 38
      000270 26                     918 	.db #0x26	; 38
      000271 26                     919 	.db #0x26	; 38
      000272 26                     920 	.db #0x26	; 38
      000273 26                     921 	.db #0x26	; 38
      000274 26                     922 	.db #0x26	; 38
      000275 26                     923 	.db #0x26	; 38
      000276 26                     924 	.db #0x26	; 38
      000277 26                     925 	.db #0x26	; 38
      000278 26                     926 	.db #0x26	; 38
      000279 2C                     927 	.db #0x2c	; 44
      00027A 26                     928 	.db #0x26	; 38
      00027B 26                     929 	.db #0x26	; 38
      00027C 26                     930 	.db #0x26	; 38
      00027D 26                     931 	.db #0x26	; 38
      00027E 26                     932 	.db #0x26	; 38
      00027F 26                     933 	.db #0x26	; 38
      000280 26                     934 	.db #0x26	; 38
      000281 26                     935 	.db #0x26	; 38
      000282 26                     936 	.db #0x26	; 38
      000283 26                     937 	.db #0x26	; 38
      000284 26                     938 	.db #0x26	; 38
      000285 26                     939 	.db #0x26	; 38
      000286 26                     940 	.db #0x26	; 38
      000287 26                     941 	.db #0x26	; 38
      000288 26                     942 	.db #0x26	; 38
      000289 26                     943 	.db #0x26	; 38
      00028A 26                     944 	.db #0x26	; 38
      00028B 26                     945 	.db #0x26	; 38
      00028C 26                     946 	.db #0x26	; 38
      00028D 26                     947 	.db #0x26	; 38
      00028E 26                     948 	.db #0x26	; 38
      00028F 26                     949 	.db #0x26	; 38
      000290 26                     950 	.db #0x26	; 38
      000291 26                     951 	.db #0x26	; 38
      000292 26                     952 	.db #0x26	; 38
      000293 26                     953 	.db #0x26	; 38
      000294 26                     954 	.db #0x26	; 38
      000295 2B                     955 	.db #0x2b	; 43
      000296 26                     956 	.db #0x26	; 38
      000297 26                     957 	.db #0x26	; 38
      000298 26                     958 	.db #0x26	; 38
      000299 26                     959 	.db #0x26	; 38
      00029A 26                     960 	.db #0x26	; 38
      00029B 26                     961 	.db #0x26	; 38
      00029C 26                     962 	.db #0x26	; 38
      00029D 26                     963 	.db #0x26	; 38
      00029E 26                     964 	.db #0x26	; 38
      00029F 26                     965 	.db #0x26	; 38
      0002A0 26                     966 	.db #0x26	; 38
      0002A1 26                     967 	.db #0x26	; 38
      0002A2 26                     968 	.db #0x26	; 38
      0002A3 26                     969 	.db #0x26	; 38
      0002A4 26                     970 	.db #0x26	; 38
      0002A5 26                     971 	.db #0x26	; 38
      0002A6 26                     972 	.db #0x26	; 38
      0002A7 28                     973 	.db #0x28	; 40
      0002A8 26                     974 	.db #0x26	; 38
      0002A9 26                     975 	.db #0x26	; 38
      0002AA 26                     976 	.db #0x26	; 38
      0002AB 26                     977 	.db #0x26	; 38
      0002AC 26                     978 	.db #0x26	; 38
      0002AD 26                     979 	.db #0x26	; 38
      0002AE 26                     980 	.db #0x26	; 38
      0002AF 26                     981 	.db #0x26	; 38
      0002B0 26                     982 	.db #0x26	; 38
      0002B1 26                     983 	.db #0x26	; 38
      0002B2 26                     984 	.db #0x26	; 38
      0002B3 26                     985 	.db #0x26	; 38
      0002B4 26                     986 	.db #0x26	; 38
      0002B5 26                     987 	.db #0x26	; 38
      0002B6 26                     988 	.db #0x26	; 38
      0002B7 26                     989 	.db #0x26	; 38
      0002B8 26                     990 	.db #0x26	; 38
      0002B9 26                     991 	.db #0x26	; 38
      0002BA 26                     992 	.db #0x26	; 38
      0002BB 26                     993 	.db #0x26	; 38
      0002BC 26                     994 	.db #0x26	; 38
      0002BD 26                     995 	.db #0x26	; 38
      0002BE 26                     996 	.db #0x26	; 38
      0002BF 26                     997 	.db #0x26	; 38
      0002C0 2B                     998 	.db #0x2b	; 43
      0002C1 26                     999 	.db #0x26	; 38
      0002C2 26                    1000 	.db #0x26	; 38
      0002C3 26                    1001 	.db #0x26	; 38
      0002C4 26                    1002 	.db #0x26	; 38
      0002C5 26                    1003 	.db #0x26	; 38
      0002C6 27                    1004 	.db #0x27	; 39
      0002C7 29                    1005 	.db #0x29	; 41
      0002C8 26                    1006 	.db #0x26	; 38
      0002C9 26                    1007 	.db #0x26	; 38
      0002CA 26                    1008 	.db #0x26	; 38
      0002CB 26                    1009 	.db #0x26	; 38
      0002CC 26                    1010 	.db #0x26	; 38
      0002CD 26                    1011 	.db #0x26	; 38
      0002CE 2B                    1012 	.db #0x2b	; 43
      0002CF 26                    1013 	.db #0x26	; 38
      0002D0 26                    1014 	.db #0x26	; 38
      0002D1 26                    1015 	.db #0x26	; 38
      0002D2 26                    1016 	.db #0x26	; 38
      0002D3 26                    1017 	.db #0x26	; 38
      0002D4 26                    1018 	.db #0x26	; 38
      0002D5 26                    1019 	.db #0x26	; 38
      0002D6 26                    1020 	.db #0x26	; 38
      0002D7 26                    1021 	.db #0x26	; 38
      0002D8 26                    1022 	.db #0x26	; 38
      0002D9 26                    1023 	.db #0x26	; 38
      0002DA 26                    1024 	.db #0x26	; 38
      0002DB 26                    1025 	.db #0x26	; 38
      0002DC 26                    1026 	.db #0x26	; 38
      0002DD 26                    1027 	.db #0x26	; 38
      0002DE 26                    1028 	.db #0x26	; 38
      0002DF 26                    1029 	.db #0x26	; 38
      0002E0 26                    1030 	.db #0x26	; 38
      0002E1 26                    1031 	.db #0x26	; 38
      0002E2 26                    1032 	.db #0x26	; 38
      0002E3 26                    1033 	.db #0x26	; 38
      0002E4 26                    1034 	.db #0x26	; 38
      0002E5 26                    1035 	.db #0x26	; 38
      0002E6 2A                    1036 	.db #0x2a	; 42
      0002E7 26                    1037 	.db #0x26	; 38
      0002E8 26                    1038 	.db #0x26	; 38
      0002E9 26                    1039 	.db #0x26	; 38
      0002EA 26                    1040 	.db #0x26	; 38
      0002EB 26                    1041 	.db #0x26	; 38
      0002EC 26                    1042 	.db #0x26	; 38
      0002ED 26                    1043 	.db #0x26	; 38
      0002EE 26                    1044 	.db #0x26	; 38
      0002EF 26                    1045 	.db #0x26	; 38
      0002F0 26                    1046 	.db #0x26	; 38
      0002F1 26                    1047 	.db #0x26	; 38
      0002F2 2C                    1048 	.db #0x2c	; 44
      0002F3 26                    1049 	.db #0x26	; 38
      0002F4 26                    1050 	.db #0x26	; 38
      0002F5 26                    1051 	.db #0x26	; 38
      0002F6 26                    1052 	.db #0x26	; 38
      0002F7 26                    1053 	.db #0x26	; 38
      0002F8 26                    1054 	.db #0x26	; 38
      0002F9 26                    1055 	.db #0x26	; 38
      0002FA 26                    1056 	.db #0x26	; 38
      0002FB 26                    1057 	.db #0x26	; 38
      0002FC 26                    1058 	.db #0x26	; 38
      0002FD 26                    1059 	.db #0x26	; 38
      0002FE 26                    1060 	.db #0x26	; 38
      0002FF 26                    1061 	.db #0x26	; 38
      000300 26                    1062 	.db #0x26	; 38
      000301 26                    1063 	.db #0x26	; 38
      000302 26                    1064 	.db #0x26	; 38
      000303 26                    1065 	.db #0x26	; 38
      000304 26                    1066 	.db #0x26	; 38
      000305 26                    1067 	.db #0x26	; 38
      000306 26                    1068 	.db #0x26	; 38
      000307 26                    1069 	.db #0x26	; 38
      000308 26                    1070 	.db #0x26	; 38
      000309 26                    1071 	.db #0x26	; 38
      00030A 26                    1072 	.db #0x26	; 38
      00030B 26                    1073 	.db #0x26	; 38
      00030C 26                    1074 	.db #0x26	; 38
      00030D 26                    1075 	.db #0x26	; 38
      00030E 26                    1076 	.db #0x26	; 38
      00030F 26                    1077 	.db #0x26	; 38
      000310 26                    1078 	.db #0x26	; 38
      000311 26                    1079 	.db #0x26	; 38
      000312 26                    1080 	.db #0x26	; 38
      000313 26                    1081 	.db #0x26	; 38
      000314 26                    1082 	.db #0x26	; 38
      000315 26                    1083 	.db #0x26	; 38
      000316 26                    1084 	.db #0x26	; 38
      000317 2B                    1085 	.db #0x2b	; 43
      000318 26                    1086 	.db #0x26	; 38
      000319 26                    1087 	.db #0x26	; 38
      00031A 26                    1088 	.db #0x26	; 38
      00031B 26                    1089 	.db #0x26	; 38
      00031C 26                    1090 	.db #0x26	; 38
      00031D 26                    1091 	.db #0x26	; 38
      00031E 26                    1092 	.db #0x26	; 38
      00031F 26                    1093 	.db #0x26	; 38
      000320 26                    1094 	.db #0x26	; 38
      000321 26                    1095 	.db #0x26	; 38
      000322 26                    1096 	.db #0x26	; 38
      000323 26                    1097 	.db #0x26	; 38
      000324 26                    1098 	.db #0x26	; 38
      000325 26                    1099 	.db #0x26	; 38
      000326 26                    1100 	.db #0x26	; 38
      000327 26                    1101 	.db #0x26	; 38
      000328 26                    1102 	.db #0x26	; 38
      000329 26                    1103 	.db #0x26	; 38
      00032A 26                    1104 	.db #0x26	; 38
      00032B 26                    1105 	.db #0x26	; 38
      00032C 26                    1106 	.db #0x26	; 38
      00032D 26                    1107 	.db #0x26	; 38
      00032E 26                    1108 	.db #0x26	; 38
      00032F 26                    1109 	.db #0x26	; 38
      000330 26                    1110 	.db #0x26	; 38
      000331 26                    1111 	.db #0x26	; 38
      000332 26                    1112 	.db #0x26	; 38
      000333 26                    1113 	.db #0x26	; 38
      000334 26                    1114 	.db #0x26	; 38
      000335 26                    1115 	.db #0x26	; 38
      000336 26                    1116 	.db #0x26	; 38
      000337 26                    1117 	.db #0x26	; 38
      000338 26                    1118 	.db #0x26	; 38
      000339 26                    1119 	.db #0x26	; 38
      00033A 26                    1120 	.db #0x26	; 38
      00033B 26                    1121 	.db #0x26	; 38
      00033C 26                    1122 	.db #0x26	; 38
      00033D 26                    1123 	.db #0x26	; 38
      00033E 2B                    1124 	.db #0x2b	; 43
      00033F 26                    1125 	.db #0x26	; 38
      000340 26                    1126 	.db #0x26	; 38
      000341 26                    1127 	.db #0x26	; 38
      000342 26                    1128 	.db #0x26	; 38
      000343 26                    1129 	.db #0x26	; 38
      000344 26                    1130 	.db #0x26	; 38
      000345 26                    1131 	.db #0x26	; 38
      000346 26                    1132 	.db #0x26	; 38
      000347 26                    1133 	.db #0x26	; 38
      000348 26                    1134 	.db #0x26	; 38
      000349 26                    1135 	.db #0x26	; 38
      00034A 2B                    1136 	.db #0x2b	; 43
      00034B 26                    1137 	.db #0x26	; 38
      00034C 26                    1138 	.db #0x26	; 38
      00034D 26                    1139 	.db #0x26	; 38
      00034E 26                    1140 	.db #0x26	; 38
      00034F 26                    1141 	.db #0x26	; 38
      000350 26                    1142 	.db #0x26	; 38
      000351 26                    1143 	.db #0x26	; 38
      000352 26                    1144 	.db #0x26	; 38
      000353 26                    1145 	.db #0x26	; 38
      000354 26                    1146 	.db #0x26	; 38
      000355 26                    1147 	.db #0x26	; 38
      000356 26                    1148 	.db #0x26	; 38
      000357 26                    1149 	.db #0x26	; 38
      000358 26                    1150 	.db #0x26	; 38
      000359 26                    1151 	.db #0x26	; 38
      00035A 26                    1152 	.db #0x26	; 38
      00035B 26                    1153 	.db #0x26	; 38
      00035C 26                    1154 	.db #0x26	; 38
      00035D 26                    1155 	.db #0x26	; 38
      00035E 26                    1156 	.db #0x26	; 38
      00035F 26                    1157 	.db #0x26	; 38
      000360 26                    1158 	.db #0x26	; 38
      000361 26                    1159 	.db #0x26	; 38
      000362 26                    1160 	.db #0x26	; 38
      000363 26                    1161 	.db #0x26	; 38
      000364 26                    1162 	.db #0x26	; 38
      000365 26                    1163 	.db #0x26	; 38
      000366 2C                    1164 	.db #0x2c	; 44
      000367 26                    1165 	.db #0x26	; 38
      000368 26                    1166 	.db #0x26	; 38
      000369 26                    1167 	.db #0x26	; 38
      00036A 26                    1168 	.db #0x26	; 38
      00036B 26                    1169 	.db #0x26	; 38
      00036C 26                    1170 	.db #0x26	; 38
      00036D 26                    1171 	.db #0x26	; 38
      00036E 26                    1172 	.db #0x26	; 38
      00036F 26                    1173 	.db #0x26	; 38
      000370 2B                    1174 	.db #0x2b	; 43
      000371 26                    1175 	.db #0x26	; 38
      000372 26                    1176 	.db #0x26	; 38
      000373 26                    1177 	.db #0x26	; 38
      000374 26                    1178 	.db #0x26	; 38
      000375 26                    1179 	.db #0x26	; 38
      000376 26                    1180 	.db #0x26	; 38
      000377 26                    1181 	.db #0x26	; 38
      000378 26                    1182 	.db #0x26	; 38
      000379 26                    1183 	.db #0x26	; 38
      00037A 26                    1184 	.db #0x26	; 38
      00037B 26                    1185 	.db #0x26	; 38
      00037C 26                    1186 	.db #0x26	; 38
      00037D 26                    1187 	.db #0x26	; 38
      00037E 26                    1188 	.db #0x26	; 38
      00037F 26                    1189 	.db #0x26	; 38
      000380 26                    1190 	.db #0x26	; 38
      000381 26                    1191 	.db #0x26	; 38
      000382 26                    1192 	.db #0x26	; 38
      000383 26                    1193 	.db #0x26	; 38
      000384 26                    1194 	.db #0x26	; 38
      000385 26                    1195 	.db #0x26	; 38
      000386 26                    1196 	.db #0x26	; 38
      000387 26                    1197 	.db #0x26	; 38
      000388 26                    1198 	.db #0x26	; 38
      000389 26                    1199 	.db #0x26	; 38
      00038A 26                    1200 	.db #0x26	; 38
      00038B 26                    1201 	.db #0x26	; 38
      00038C 26                    1202 	.db #0x26	; 38
      00038D 26                    1203 	.db #0x26	; 38
      00038E 26                    1204 	.db #0x26	; 38
      00038F 26                    1205 	.db #0x26	; 38
      000390 26                    1206 	.db #0x26	; 38
      000391 26                    1207 	.db #0x26	; 38
      000392 26                    1208 	.db #0x26	; 38
      000393 26                    1209 	.db #0x26	; 38
      000394 26                    1210 	.db #0x26	; 38
      000395 26                    1211 	.db #0x26	; 38
      000396 26                    1212 	.db #0x26	; 38
      000397 26                    1213 	.db #0x26	; 38
      000398 27                    1214 	.db #0x27	; 39
      000399 28                    1215 	.db #0x28	; 40
      00039A 26                    1216 	.db #0x26	; 38
      00039B 26                    1217 	.db #0x26	; 38
      00039C 26                    1218 	.db #0x26	; 38
      00039D 26                    1219 	.db #0x26	; 38
      00039E 26                    1220 	.db #0x26	; 38
      00039F 26                    1221 	.db #0x26	; 38
      0003A0 26                    1222 	.db #0x26	; 38
      0003A1 26                    1223 	.db #0x26	; 38
      0003A2 26                    1224 	.db #0x26	; 38
      0003A3 26                    1225 	.db #0x26	; 38
      0003A4 26                    1226 	.db #0x26	; 38
      0003A5 26                    1227 	.db #0x26	; 38
      0003A6 26                    1228 	.db #0x26	; 38
      0003A7 26                    1229 	.db #0x26	; 38
      0003A8 26                    1230 	.db #0x26	; 38
      0003A9 26                    1231 	.db #0x26	; 38
      0003AA 26                    1232 	.db #0x26	; 38
      0003AB 26                    1233 	.db #0x26	; 38
      0003AC 26                    1234 	.db #0x26	; 38
      0003AD 2B                    1235 	.db #0x2b	; 43
      0003AE 26                    1236 	.db #0x26	; 38
      0003AF 26                    1237 	.db #0x26	; 38
      0003B0 26                    1238 	.db #0x26	; 38
      0003B1 26                    1239 	.db #0x26	; 38
      0003B2 26                    1240 	.db #0x26	; 38
      0003B3 26                    1241 	.db #0x26	; 38
      0003B4 26                    1242 	.db #0x26	; 38
      0003B5 25                    1243 	.db #0x25	; 37
      0003B6 26                    1244 	.db #0x26	; 38
      0003B7 26                    1245 	.db #0x26	; 38
      0003B8 2A                    1246 	.db #0x2a	; 42
      0003B9 29                    1247 	.db #0x29	; 41
      0003BA 26                    1248 	.db #0x26	; 38
      0003BB 26                    1249 	.db #0x26	; 38
      0003BC 26                    1250 	.db #0x26	; 38
      0003BD 26                    1251 	.db #0x26	; 38
      0003BE 26                    1252 	.db #0x26	; 38
      0003BF 26                    1253 	.db #0x26	; 38
      0003C0 26                    1254 	.db #0x26	; 38
      0003C1 26                    1255 	.db #0x26	; 38
      0003C2 2B                    1256 	.db #0x2b	; 43
      0003C3 26                    1257 	.db #0x26	; 38
      0003C4 26                    1258 	.db #0x26	; 38
      0003C5 26                    1259 	.db #0x26	; 38
      0003C6 26                    1260 	.db #0x26	; 38
      0003C7 26                    1261 	.db #0x26	; 38
      0003C8 26                    1262 	.db #0x26	; 38
      0003C9 2C                    1263 	.db #0x2c	; 44
      0003CA 26                    1264 	.db #0x26	; 38
      0003CB 26                    1265 	.db #0x26	; 38
      0003CC 26                    1266 	.db #0x26	; 38
      0003CD 26                    1267 	.db #0x26	; 38
      0003CE 26                    1268 	.db #0x26	; 38
      0003CF 26                    1269 	.db #0x26	; 38
      0003D0 26                    1270 	.db #0x26	; 38
      0003D1 26                    1271 	.db #0x26	; 38
      0003D2 26                    1272 	.db #0x26	; 38
      0003D3 26                    1273 	.db #0x26	; 38
      0003D4 26                    1274 	.db #0x26	; 38
      0003D5 2C                    1275 	.db #0x2c	; 44
      0003D6 26                    1276 	.db #0x26	; 38
      0003D7 26                    1277 	.db #0x26	; 38
      0003D8 26                    1278 	.db #0x26	; 38
      0003D9 26                    1279 	.db #0x26	; 38
      0003DA 26                    1280 	.db #0x26	; 38
      0003DB 26                    1281 	.db #0x26	; 38
      0003DC 26                    1282 	.db #0x26	; 38
      0003DD 26                    1283 	.db #0x26	; 38
      0003DE 26                    1284 	.db #0x26	; 38
      0003DF 26                    1285 	.db #0x26	; 38
      0003E0 26                    1286 	.db #0x26	; 38
      0003E1 26                    1287 	.db #0x26	; 38
      0003E2 26                    1288 	.db #0x26	; 38
      0003E3 26                    1289 	.db #0x26	; 38
      0003E4 26                    1290 	.db #0x26	; 38
      0003E5 26                    1291 	.db #0x26	; 38
      0003E6 26                    1292 	.db #0x26	; 38
      0003E7 26                    1293 	.db #0x26	; 38
      0003E8 26                    1294 	.db #0x26	; 38
      0003E9 26                    1295 	.db #0x26	; 38
      0003EA 26                    1296 	.db #0x26	; 38
      0003EB 26                    1297 	.db #0x26	; 38
      0003EC 26                    1298 	.db #0x26	; 38
      0003ED 26                    1299 	.db #0x26	; 38
      0003EE 26                    1300 	.db #0x26	; 38
      0003EF 26                    1301 	.db #0x26	; 38
      0003F0 26                    1302 	.db #0x26	; 38
      0003F1 26                    1303 	.db #0x26	; 38
      0003F2 26                    1304 	.db #0x26	; 38
      0003F3 26                    1305 	.db #0x26	; 38
      0003F4 26                    1306 	.db #0x26	; 38
      0003F5 26                    1307 	.db #0x26	; 38
      0003F6 26                    1308 	.db #0x26	; 38
      0003F7 26                    1309 	.db #0x26	; 38
      0003F8 26                    1310 	.db #0x26	; 38
      0003F9 26                    1311 	.db #0x26	; 38
      0003FA 26                    1312 	.db #0x26	; 38
      0003FB 26                    1313 	.db #0x26	; 38
      0003FC 26                    1314 	.db #0x26	; 38
      0003FD 26                    1315 	.db #0x26	; 38
      0003FE 26                    1316 	.db #0x26	; 38
      0003FF 26                    1317 	.db #0x26	; 38
      000400 26                    1318 	.db #0x26	; 38
      000401 26                    1319 	.db #0x26	; 38
      000402 26                    1320 	.db #0x26	; 38
      000403 26                    1321 	.db #0x26	; 38
      000404 26                    1322 	.db #0x26	; 38
      000405 26                    1323 	.db #0x26	; 38
      000406 26                    1324 	.db #0x26	; 38
      000407 26                    1325 	.db #0x26	; 38
      000408 26                    1326 	.db #0x26	; 38
      000409 26                    1327 	.db #0x26	; 38
      00040A 26                    1328 	.db #0x26	; 38
      00040B 26                    1329 	.db #0x26	; 38
      00040C 26                    1330 	.db #0x26	; 38
      00040D 2B                    1331 	.db #0x2b	; 43
      00040E 26                    1332 	.db #0x26	; 38
      00040F 26                    1333 	.db #0x26	; 38
      000410 26                    1334 	.db #0x26	; 38
      000411 26                    1335 	.db #0x26	; 38
      000412 26                    1336 	.db #0x26	; 38
      000413 26                    1337 	.db #0x26	; 38
      000414 26                    1338 	.db #0x26	; 38
      000415 26                    1339 	.db #0x26	; 38
      000416 26                    1340 	.db #0x26	; 38
      000417 26                    1341 	.db #0x26	; 38
      000418 26                    1342 	.db #0x26	; 38
      000419 26                    1343 	.db #0x26	; 38
      00041A 26                    1344 	.db #0x26	; 38
      00041B 26                    1345 	.db #0x26	; 38
      00041C 26                    1346 	.db #0x26	; 38
      00041D 26                    1347 	.db #0x26	; 38
      00041E 26                    1348 	.db #0x26	; 38
      00041F 26                    1349 	.db #0x26	; 38
      000420 2B                    1350 	.db #0x2b	; 43
      000421 26                    1351 	.db #0x26	; 38
      000422 26                    1352 	.db #0x26	; 38
      000423 26                    1353 	.db #0x26	; 38
      000424 26                    1354 	.db #0x26	; 38
      000425 26                    1355 	.db #0x26	; 38
      000426 26                    1356 	.db #0x26	; 38
      000427 26                    1357 	.db #0x26	; 38
      000428 26                    1358 	.db #0x26	; 38
      000429 26                    1359 	.db #0x26	; 38
      00042A 26                    1360 	.db #0x26	; 38
      00042B 26                    1361 	.db #0x26	; 38
      00042C 26                    1362 	.db #0x26	; 38
      00042D 26                    1363 	.db #0x26	; 38
      00042E 26                    1364 	.db #0x26	; 38
      00042F 26                    1365 	.db #0x26	; 38
      000430 26                    1366 	.db #0x26	; 38
      000431 26                    1367 	.db #0x26	; 38
      000432 26                    1368 	.db #0x26	; 38
      000433 26                    1369 	.db #0x26	; 38
      000434 26                    1370 	.db #0x26	; 38
      000435 26                    1371 	.db #0x26	; 38
      000436 26                    1372 	.db #0x26	; 38
      000437 2C                    1373 	.db #0x2c	; 44
      000438 26                    1374 	.db #0x26	; 38
      000439 26                    1375 	.db #0x26	; 38
      00043A 26                    1376 	.db #0x26	; 38
      00043B 26                    1377 	.db #0x26	; 38
      00043C 26                    1378 	.db #0x26	; 38
      00043D 26                    1379 	.db #0x26	; 38
      00043E 26                    1380 	.db #0x26	; 38
      00043F 26                    1381 	.db #0x26	; 38
      000440 26                    1382 	.db #0x26	; 38
      000441 26                    1383 	.db #0x26	; 38
      000442 26                    1384 	.db #0x26	; 38
      000443 26                    1385 	.db #0x26	; 38
      000444 26                    1386 	.db #0x26	; 38
      000445 26                    1387 	.db #0x26	; 38
      000446 26                    1388 	.db #0x26	; 38
      000447 26                    1389 	.db #0x26	; 38
      000448 25                    1390 	.db #0x25	; 37
      000449 2C                    1391 	.db #0x2c	; 44
      00044A 26                    1392 	.db #0x26	; 38
      00044B 26                    1393 	.db #0x26	; 38
      00044C 26                    1394 	.db #0x26	; 38
      00044D 26                    1395 	.db #0x26	; 38
      00044E 26                    1396 	.db #0x26	; 38
      00044F 26                    1397 	.db #0x26	; 38
      000450 26                    1398 	.db #0x26	; 38
      000451 26                    1399 	.db #0x26	; 38
      000452 26                    1400 	.db #0x26	; 38
      000453 26                    1401 	.db #0x26	; 38
      000454 26                    1402 	.db #0x26	; 38
      000455 26                    1403 	.db #0x26	; 38
      000456 26                    1404 	.db #0x26	; 38
      000457 26                    1405 	.db #0x26	; 38
      000458 26                    1406 	.db #0x26	; 38
      000459 26                    1407 	.db #0x26	; 38
      00045A 2B                    1408 	.db #0x2b	; 43
      00045B 26                    1409 	.db #0x26	; 38
      00045C 26                    1410 	.db #0x26	; 38
      00045D 26                    1411 	.db #0x26	; 38
      00045E 26                    1412 	.db #0x26	; 38
      00045F 26                    1413 	.db #0x26	; 38
      000460 26                    1414 	.db #0x26	; 38
      000461 26                    1415 	.db #0x26	; 38
      000462 26                    1416 	.db #0x26	; 38
      000463 26                    1417 	.db #0x26	; 38
      000464 26                    1418 	.db #0x26	; 38
      000465 26                    1419 	.db #0x26	; 38
      000466 26                    1420 	.db #0x26	; 38
      000467 26                    1421 	.db #0x26	; 38
      000468 26                    1422 	.db #0x26	; 38
      000469 26                    1423 	.db #0x26	; 38
      00046A 26                    1424 	.db #0x26	; 38
      00046B 26                    1425 	.db #0x26	; 38
      00046C 26                    1426 	.db #0x26	; 38
      00046D 26                    1427 	.db #0x26	; 38
      00046E 26                    1428 	.db #0x26	; 38
      00046F 26                    1429 	.db #0x26	; 38
      000470 26                    1430 	.db #0x26	; 38
      000471 26                    1431 	.db #0x26	; 38
      000472 27                    1432 	.db #0x27	; 39
      000473 28                    1433 	.db #0x28	; 40
      000474 26                    1434 	.db #0x26	; 38
      000475 26                    1435 	.db #0x26	; 38
      000476 26                    1436 	.db #0x26	; 38
      000477 26                    1437 	.db #0x26	; 38
      000478 26                    1438 	.db #0x26	; 38
      000479 26                    1439 	.db #0x26	; 38
      00047A 26                    1440 	.db #0x26	; 38
      00047B 26                    1441 	.db #0x26	; 38
      00047C 26                    1442 	.db #0x26	; 38
      00047D 26                    1443 	.db #0x26	; 38
      00047E 26                    1444 	.db #0x26	; 38
      00047F 26                    1445 	.db #0x26	; 38
      000480 26                    1446 	.db #0x26	; 38
      000481 26                    1447 	.db #0x26	; 38
      000482 26                    1448 	.db #0x26	; 38
      000483 26                    1449 	.db #0x26	; 38
      000484 26                    1450 	.db #0x26	; 38
      000485 26                    1451 	.db #0x26	; 38
      000486 2B                    1452 	.db #0x2b	; 43
      000487                       1453 _backgroundtiles:
      000487 40                    1454 	.db #0x40	; 64
      000488 38                    1455 	.db #0x38	; 56	'8'
      000489 3A                    1456 	.db #0x3a	; 58
      00048A 44                    1457 	.db #0x44	; 68	'D'
      00048B 7C                    1458 	.db #0x7c	; 124
      00048C 9A                    1459 	.db #0x9a	; 154
      00048D 5E                    1460 	.db #0x5e	; 94
      00048E E9                    1461 	.db #0xe9	; 233
      00048F 7A                    1462 	.db #0x7a	; 122	'z'
      000490 87                    1463 	.db #0x87	; 135
      000491 76                    1464 	.db #0x76	; 118	'v'
      000492 B9                    1465 	.db #0xb9	; 185
      000493 3C                    1466 	.db #0x3c	; 60
      000494 72                    1467 	.db #0x72	; 114	'r'
      000495 00                    1468 	.db #0x00	; 0
      000496 3C                    1469 	.db #0x3c	; 60
      000497 00                    1470 	.db #0x00	; 0
      000498 00                    1471 	.db #0x00	; 0
      000499 00                    1472 	.db #0x00	; 0
      00049A 00                    1473 	.db #0x00	; 0
      00049B 00                    1474 	.db #0x00	; 0
      00049C 00                    1475 	.db #0x00	; 0
      00049D 00                    1476 	.db #0x00	; 0
      00049E 00                    1477 	.db #0x00	; 0
      00049F 00                    1478 	.db #0x00	; 0
      0004A0 00                    1479 	.db #0x00	; 0
      0004A1 00                    1480 	.db #0x00	; 0
      0004A2 00                    1481 	.db #0x00	; 0
      0004A3 00                    1482 	.db #0x00	; 0
      0004A4 00                    1483 	.db #0x00	; 0
      0004A5 00                    1484 	.db #0x00	; 0
      0004A6 00                    1485 	.db #0x00	; 0
      0004A7 00                    1486 	.db #0x00	; 0
      0004A8 0F                    1487 	.db #0x0f	; 15
      0004A9 08                    1488 	.db #0x08	; 8
      0004AA 17                    1489 	.db #0x17	; 23
      0004AB 1C                    1490 	.db #0x1c	; 28
      0004AC 23                    1491 	.db #0x23	; 35
      0004AD 3E                    1492 	.db #0x3e	; 62
      0004AE 41                    1493 	.db #0x41	; 65	'A'
      0004AF 1B                    1494 	.db #0x1b	; 27
      0004B0 64                    1495 	.db #0x64	; 100	'd'
      0004B1 31                    1496 	.db #0x31	; 49	'1'
      0004B2 4E                    1497 	.db #0x4e	; 78	'N'
      0004B3 B1                    1498 	.db #0xb1	; 177
      0004B4 CE                    1499 	.db #0xce	; 206
      0004B5 BB                    1500 	.db #0xbb	; 187
      0004B6 C4                    1501 	.db #0xc4	; 196
      0004B7 00                    1502 	.db #0x00	; 0
      0004B8 F8                    1503 	.db #0xf8	; 248
      0004B9 00                    1504 	.db #0x00	; 0
      0004BA FC                    1505 	.db #0xfc	; 252
      0004BB E0                    1506 	.db #0xe0	; 224
      0004BC 1E                    1507 	.db #0x1e	; 30
      0004BD F0                    1508 	.db #0xf0	; 240
      0004BE 0F                    1509 	.db #0x0f	; 15
      0004BF BE                    1510 	.db #0xbe	; 190
      0004C0 01                    1511 	.db #0x01	; 1
      0004C1 BC                    1512 	.db #0xbc	; 188
      0004C2 02                    1513 	.db #0x02	; 2
      0004C3 CE                    1514 	.db #0xce	; 206
      0004C4 01                    1515 	.db #0x01	; 1
      0004C5 F6                    1516 	.db #0xf6	; 246
      0004C6 61                    1517 	.db #0x61	; 97	'a'
      0004C7 F4                    1518 	.db #0xf4	; 244
      0004C8 02                    1519 	.db #0x02	; 2
      0004C9 94                    1520 	.db #0x94	; 148
      0004CA 62                    1521 	.db #0x62	; 98	'b'
      0004CB E4                    1522 	.db #0xe4	; 228
      0004CC 02                    1523 	.db #0x02	; 2
      0004CD 6C                    1524 	.db #0x6c	; 108	'l'
      0004CE 82                    1525 	.db #0x82	; 130
      0004CF 70                    1526 	.db #0x70	; 112	'p'
      0004D0 8C                    1527 	.db #0x8c	; 140
      0004D1 60                    1528 	.db #0x60	; 96
      0004D2 90                    1529 	.db #0x90	; 144
      0004D3 00                    1530 	.db #0x00	; 0
      0004D4 E0                    1531 	.db #0xe0	; 224
      0004D5 80                    1532 	.db #0x80	; 128
      0004D6 80                    1533 	.db #0x80	; 128
      0004D7 8E                    1534 	.db #0x8e	; 142
      0004D8 F7                    1535 	.db #0xf7	; 247
      0004D9 8F                    1536 	.db #0x8f	; 143
      0004DA F3                    1537 	.db #0xf3	; 243
      0004DB 86                    1538 	.db #0x86	; 134
      0004DC F9                    1539 	.db #0xf9	; 249
      0004DD 42                    1540 	.db #0x42	; 66	'B'
      0004DE 7D                    1541 	.db #0x7d	; 125
      0004DF 80                    1542 	.db #0x80	; 128
      0004E0 FF                    1543 	.db #0xff	; 255
      0004E1 44                    1544 	.db #0x44	; 68	'D'
      0004E2 7F                    1545 	.db #0x7f	; 127
      0004E3 28                    1546 	.db #0x28	; 40
      0004E4 3F                    1547 	.db #0x3f	; 63
      0004E5 07                    1548 	.db #0x07	; 7
      0004E6 07                    1549 	.db #0x07	; 7
      0004E7 00                    1550 	.db #0x00	; 0
      0004E8 00                    1551 	.db #0x00	; 0
      0004E9 08                    1552 	.db #0x08	; 8
      0004EA 00                    1553 	.db #0x00	; 0
      0004EB 08                    1554 	.db #0x08	; 8
      0004EC 00                    1555 	.db #0x00	; 0
      0004ED 1C                    1556 	.db #0x1c	; 28
      0004EE 00                    1557 	.db #0x00	; 0
      0004EF 7F                    1558 	.db #0x7f	; 127
      0004F0 00                    1559 	.db #0x00	; 0
      0004F1 1C                    1560 	.db #0x1c	; 28
      0004F2 00                    1561 	.db #0x00	; 0
      0004F3 08                    1562 	.db #0x08	; 8
      0004F4 00                    1563 	.db #0x00	; 0
      0004F5 08                    1564 	.db #0x08	; 8
      0004F6 00                    1565 	.db #0x00	; 0
      0004F7 00                    1566 	.db #0x00	; 0
      0004F8 00                    1567 	.db #0x00	; 0
      0004F9 00                    1568 	.db #0x00	; 0
      0004FA 00                    1569 	.db #0x00	; 0
      0004FB 00                    1570 	.db #0x00	; 0
      0004FC 00                    1571 	.db #0x00	; 0
      0004FD 10                    1572 	.db #0x10	; 16
      0004FE 00                    1573 	.db #0x00	; 0
      0004FF 00                    1574 	.db #0x00	; 0
      000500 00                    1575 	.db #0x00	; 0
      000501 00                    1576 	.db #0x00	; 0
      000502 00                    1577 	.db #0x00	; 0
      000503 00                    1578 	.db #0x00	; 0
      000504 00                    1579 	.db #0x00	; 0
      000505 00                    1580 	.db #0x00	; 0
      000506 00                    1581 	.db #0x00	; 0
      000507                       1582 _healthblock:
      000507 FE                    1583 	.db #0xfe	; 254
      000508 FE                    1584 	.db #0xfe	; 254
      000509 FE                    1585 	.db #0xfe	; 254
      00050A FE                    1586 	.db #0xfe	; 254
      00050B FE                    1587 	.db #0xfe	; 254
      00050C FE                    1588 	.db #0xfe	; 254
      00050D FE                    1589 	.db #0xfe	; 254
      00050E FE                    1590 	.db #0xfe	; 254
      00050F FE                    1591 	.db #0xfe	; 254
      000510 FE                    1592 	.db #0xfe	; 254
      000511 FE                    1593 	.db #0xfe	; 254
      000512 FE                    1594 	.db #0xfe	; 254
      000513 FE                    1595 	.db #0xfe	; 254
      000514 FE                    1596 	.db #0xfe	; 254
      000515 00                    1597 	.db #0x00	; 0
      000516 00                    1598 	.db #0x00	; 0
      000517                       1599 _enemyOptionCount:
      000517 05                    1600 	.db #0x05	; 5
      000518                       1601 _enemy1:
      000518 66                    1602 	.db #0x66	; 102	'f'
      000519 24                    1603 	.db #0x24	; 36
      00051A E7                    1604 	.db #0xe7	; 231
      00051B 66                    1605 	.db #0x66	; 102	'f'
      00051C F7                    1606 	.db #0xf7	; 247
      00051D E7                    1607 	.db #0xe7	; 231
      00051E 1C                    1608 	.db #0x1c	; 28
      00051F 18                    1609 	.db #0x18	; 24
      000520 38                    1610 	.db #0x38	; 56	'8'
      000521 18                    1611 	.db #0x18	; 24
      000522 EF                    1612 	.db #0xef	; 239
      000523 E7                    1613 	.db #0xe7	; 231
      000524 E7                    1614 	.db #0xe7	; 231
      000525 66                    1615 	.db #0x66	; 102	'f'
      000526 66                    1616 	.db #0x66	; 102	'f'
      000527 24                    1617 	.db #0x24	; 36
      000528 00                    1618 	.db #0x00	; 0
      000529 00                    1619 	.db #0x00	; 0
      00052A 00                    1620 	.db #0x00	; 0
      00052B 00                    1621 	.db #0x00	; 0
      00052C 00                    1622 	.db #0x00	; 0
      00052D 00                    1623 	.db #0x00	; 0
      00052E 00                    1624 	.db #0x00	; 0
      00052F 00                    1625 	.db #0x00	; 0
      000530 00                    1626 	.db #0x00	; 0
      000531 00                    1627 	.db #0x00	; 0
      000532 00                    1628 	.db #0x00	; 0
      000533 00                    1629 	.db #0x00	; 0
      000534 00                    1630 	.db #0x00	; 0
      000535 00                    1631 	.db #0x00	; 0
      000536 00                    1632 	.db #0x00	; 0
      000537 00                    1633 	.db #0x00	; 0
      000538 3C                    1634 	.db #0x3c	; 60
      000539 3C                    1635 	.db #0x3c	; 60
      00053A 5E                    1636 	.db #0x5e	; 94
      00053B 62                    1637 	.db #0x62	; 98	'b'
      00053C 8F                    1638 	.db #0x8f	; 143
      00053D F1                    1639 	.db #0xf1	; 241
      00053E C7                    1640 	.db #0xc7	; 199
      00053F F9                    1641 	.db #0xf9	; 249
      000540 C3                    1642 	.db #0xc3	; 195
      000541 FD                    1643 	.db #0xfd	; 253
      000542 E1                    1644 	.db #0xe1	; 225
      000543 FF                    1645 	.db #0xff	; 255
      000544 7A                    1646 	.db #0x7a	; 122	'z'
      000545 7E                    1647 	.db #0x7e	; 126
      000546 3C                    1648 	.db #0x3c	; 60
      000547 3C                    1649 	.db #0x3c	; 60
      000548 00                    1650 	.db #0x00	; 0
      000549 00                    1651 	.db #0x00	; 0
      00054A 00                    1652 	.db #0x00	; 0
      00054B 00                    1653 	.db #0x00	; 0
      00054C 00                    1654 	.db #0x00	; 0
      00054D 00                    1655 	.db #0x00	; 0
      00054E 00                    1656 	.db #0x00	; 0
      00054F 00                    1657 	.db #0x00	; 0
      000550 00                    1658 	.db #0x00	; 0
      000551 00                    1659 	.db #0x00	; 0
      000552 00                    1660 	.db #0x00	; 0
      000553 00                    1661 	.db #0x00	; 0
      000554 00                    1662 	.db #0x00	; 0
      000555 00                    1663 	.db #0x00	; 0
      000556 00                    1664 	.db #0x00	; 0
      000557 00                    1665 	.db #0x00	; 0
      000558 3C                    1666 	.db #0x3c	; 60
      000559 3E                    1667 	.db #0x3e	; 62
      00055A 20                    1668 	.db #0x20	; 32
      00055B 38                    1669 	.db #0x38	; 56	'8'
      00055C 44                    1670 	.db #0x44	; 68	'D'
      00055D 78                    1671 	.db #0x78	; 120	'x'
      00055E BA                    1672 	.db #0xba	; 186
      00055F C4                    1673 	.db #0xc4	; 196
      000560 BA                    1674 	.db #0xba	; 186
      000561 C4                    1675 	.db #0xc4	; 196
      000562 44                    1676 	.db #0x44	; 68	'D'
      000563 78                    1677 	.db #0x78	; 120	'x'
      000564 20                    1678 	.db #0x20	; 32
      000565 38                    1679 	.db #0x38	; 56	'8'
      000566 3C                    1680 	.db #0x3c	; 60
      000567 3E                    1681 	.db #0x3e	; 62
      000568                       1682 _largeenemies:
      000568 00                    1683 	.db #0x00	; 0
      000569 00                    1684 	.db #0x00	; 0
      00056A 00                    1685 	.db #0x00	; 0
      00056B 00                    1686 	.db #0x00	; 0
      00056C 00                    1687 	.db #0x00	; 0
      00056D 00                    1688 	.db #0x00	; 0
      00056E 00                    1689 	.db #0x00	; 0
      00056F 00                    1690 	.db #0x00	; 0
      000570 00                    1691 	.db #0x00	; 0
      000571 00                    1692 	.db #0x00	; 0
      000572 00                    1693 	.db #0x00	; 0
      000573 00                    1694 	.db #0x00	; 0
      000574 00                    1695 	.db #0x00	; 0
      000575 00                    1696 	.db #0x00	; 0
      000576 7F                    1697 	.db #0x7f	; 127
      000577 7F                    1698 	.db #0x7f	; 127
      000578 7F                    1699 	.db #0x7f	; 127
      000579 7F                    1700 	.db #0x7f	; 127
      00057A 00                    1701 	.db #0x00	; 0
      00057B 00                    1702 	.db #0x00	; 0
      00057C 00                    1703 	.db #0x00	; 0
      00057D 00                    1704 	.db #0x00	; 0
      00057E 00                    1705 	.db #0x00	; 0
      00057F 00                    1706 	.db #0x00	; 0
      000580 00                    1707 	.db #0x00	; 0
      000581 00                    1708 	.db #0x00	; 0
      000582 00                    1709 	.db #0x00	; 0
      000583 00                    1710 	.db #0x00	; 0
      000584 00                    1711 	.db #0x00	; 0
      000585 00                    1712 	.db #0x00	; 0
      000586 00                    1713 	.db #0x00	; 0
      000587 00                    1714 	.db #0x00	; 0
      000588 00                    1715 	.db #0x00	; 0
      000589 00                    1716 	.db #0x00	; 0
      00058A 40                    1717 	.db #0x40	; 64
      00058B 40                    1718 	.db #0x40	; 64
      00058C 60                    1719 	.db #0x60	; 96
      00058D 60                    1720 	.db #0x60	; 96
      00058E 70                    1721 	.db #0x70	; 112	'p'
      00058F 70                    1722 	.db #0x70	; 112	'p'
      000590 78                    1723 	.db #0x78	; 120	'x'
      000591 78                    1724 	.db #0x78	; 120	'x'
      000592 7C                    1725 	.db #0x7c	; 124
      000593 7C                    1726 	.db #0x7c	; 124
      000594 7E                    1727 	.db #0x7e	; 126
      000595 7E                    1728 	.db #0x7e	; 126
      000596 FF                    1729 	.db #0xff	; 255
      000597 FF                    1730 	.db #0xff	; 255
      000598 FF                    1731 	.db #0xff	; 255
      000599 FF                    1732 	.db #0xff	; 255
      00059A 7E                    1733 	.db #0x7e	; 126
      00059B 7E                    1734 	.db #0x7e	; 126
      00059C 7C                    1735 	.db #0x7c	; 124
      00059D 7C                    1736 	.db #0x7c	; 124
      00059E 78                    1737 	.db #0x78	; 120	'x'
      00059F 78                    1738 	.db #0x78	; 120	'x'
      0005A0 70                    1739 	.db #0x70	; 112	'p'
      0005A1 70                    1740 	.db #0x70	; 112	'p'
      0005A2 60                    1741 	.db #0x60	; 96
      0005A3 60                    1742 	.db #0x60	; 96
      0005A4 40                    1743 	.db #0x40	; 64
      0005A5 40                    1744 	.db #0x40	; 64
      0005A6 00                    1745 	.db #0x00	; 0
      0005A7 00                    1746 	.db #0x00	; 0
      0005A8 07                    1747 	.db #0x07	; 7
      0005A9 00                    1748 	.db #0x00	; 0
      0005AA 18                    1749 	.db #0x18	; 24
      0005AB 00                    1750 	.db #0x00	; 0
      0005AC 20                    1751 	.db #0x20	; 32
      0005AD 00                    1752 	.db #0x00	; 0
      0005AE 4C                    1753 	.db #0x4c	; 76	'L'
      0005AF 0C                    1754 	.db #0x0c	; 12
      0005B0 43                    1755 	.db #0x43	; 67	'C'
      0005B1 0F                    1756 	.db #0x0f	; 15
      0005B2 84                    1757 	.db #0x84	; 132
      0005B3 27                    1758 	.db #0x27	; 39
      0005B4 80                    1759 	.db #0x80	; 128
      0005B5 13                    1760 	.db #0x13	; 19
      0005B6 83                    1761 	.db #0x83	; 131
      0005B7 2A                    1762 	.db #0x2a	; 42
      0005B8 83                    1763 	.db #0x83	; 131
      0005B9 16                    1764 	.db #0x16	; 22
      0005BA 80                    1765 	.db #0x80	; 128
      0005BB 23                    1766 	.db #0x23	; 35
      0005BC 84                    1767 	.db #0x84	; 132
      0005BD 07                    1768 	.db #0x07	; 7
      0005BE 43                    1769 	.db #0x43	; 67	'C'
      0005BF 0F                    1770 	.db #0x0f	; 15
      0005C0 4C                    1771 	.db #0x4c	; 76	'L'
      0005C1 0C                    1772 	.db #0x0c	; 12
      0005C2 20                    1773 	.db #0x20	; 32
      0005C3 00                    1774 	.db #0x00	; 0
      0005C4 18                    1775 	.db #0x18	; 24
      0005C5 00                    1776 	.db #0x00	; 0
      0005C6 07                    1777 	.db #0x07	; 7
      0005C7 00                    1778 	.db #0x00	; 0
      0005C8 E0                    1779 	.db #0xe0	; 224
      0005C9 00                    1780 	.db #0x00	; 0
      0005CA 18                    1781 	.db #0x18	; 24
      0005CB 00                    1782 	.db #0x00	; 0
      0005CC 04                    1783 	.db #0x04	; 4
      0005CD 00                    1784 	.db #0x00	; 0
      0005CE 02                    1785 	.db #0x02	; 2
      0005CF 00                    1786 	.db #0x00	; 0
      0005D0 02                    1787 	.db #0x02	; 2
      0005D1 00                    1788 	.db #0x00	; 0
      0005D2 C1                    1789 	.db #0xc1	; 193
      0005D3 C0                    1790 	.db #0xc0	; 192
      0005D4 11                    1791 	.db #0x11	; 17
      0005D5 F0                    1792 	.db #0xf0	; 240
      0005D6 E5                    1793 	.db #0xe5	; 229
      0005D7 1C                    1794 	.db #0x1c	; 28
      0005D8 E5                    1795 	.db #0xe5	; 229
      0005D9 1C                    1796 	.db #0x1c	; 28
      0005DA 11                    1797 	.db #0x11	; 17
      0005DB F0                    1798 	.db #0xf0	; 240
      0005DC C1                    1799 	.db #0xc1	; 193
      0005DD C0                    1800 	.db #0xc0	; 192
      0005DE 02                    1801 	.db #0x02	; 2
      0005DF 00                    1802 	.db #0x00	; 0
      0005E0 02                    1803 	.db #0x02	; 2
      0005E1 00                    1804 	.db #0x00	; 0
      0005E2 04                    1805 	.db #0x04	; 4
      0005E3 00                    1806 	.db #0x00	; 0
      0005E4 18                    1807 	.db #0x18	; 24
      0005E5 00                    1808 	.db #0x00	; 0
      0005E6 E0                    1809 	.db #0xe0	; 224
      0005E7 00                    1810 	.db #0x00	; 0
      0005E8                       1811 _ProjectileTiles:
      0005E8 24                    1812 	.db #0x24	; 36
      0005E9 18                    1813 	.db #0x18	; 24
      0005EA 18                    1814 	.db #0x18	; 24
      0005EB 3C                    1815 	.db #0x3c	; 60
      0005EC 18                    1816 	.db #0x18	; 24
      0005ED 3C                    1817 	.db #0x3c	; 60
      0005EE 24                    1818 	.db #0x24	; 36
      0005EF 18                    1819 	.db #0x18	; 24
      0005F0 00                    1820 	.db #0x00	; 0
      0005F1 00                    1821 	.db #0x00	; 0
      0005F2 00                    1822 	.db #0x00	; 0
      0005F3 00                    1823 	.db #0x00	; 0
      0005F4 00                    1824 	.db #0x00	; 0
      0005F5 00                    1825 	.db #0x00	; 0
      0005F6 00                    1826 	.db #0x00	; 0
      0005F7 00                    1827 	.db #0x00	; 0
      0005F8 00                    1828 	.db #0x00	; 0
      0005F9 00                    1829 	.db #0x00	; 0
      0005FA 00                    1830 	.db #0x00	; 0
      0005FB 00                    1831 	.db #0x00	; 0
      0005FC 00                    1832 	.db #0x00	; 0
      0005FD 00                    1833 	.db #0x00	; 0
      0005FE 00                    1834 	.db #0x00	; 0
      0005FF 00                    1835 	.db #0x00	; 0
      000600 00                    1836 	.db #0x00	; 0
      000601 00                    1837 	.db #0x00	; 0
      000602 00                    1838 	.db #0x00	; 0
      000603 00                    1839 	.db #0x00	; 0
      000604 00                    1840 	.db #0x00	; 0
      000605 00                    1841 	.db #0x00	; 0
      000606 00                    1842 	.db #0x00	; 0
      000607 00                    1843 	.db #0x00	; 0
      000608 00                    1844 	.db #0x00	; 0
      000609 00                    1845 	.db #0x00	; 0
      00060A 00                    1846 	.db #0x00	; 0
      00060B 00                    1847 	.db #0x00	; 0
      00060C 09                    1848 	.db #0x09	; 9
      00060D 06                    1849 	.db #0x06	; 6
      00060E 06                    1850 	.db #0x06	; 6
      00060F 0F                    1851 	.db #0x0f	; 15
      000610 06                    1852 	.db #0x06	; 6
      000611 0F                    1853 	.db #0x0f	; 15
      000612 09                    1854 	.db #0x09	; 9
      000613 06                    1855 	.db #0x06	; 6
      000614 00                    1856 	.db #0x00	; 0
      000615 00                    1857 	.db #0x00	; 0
      000616 00                    1858 	.db #0x00	; 0
      000617 00                    1859 	.db #0x00	; 0
      000618 00                    1860 	.db #0x00	; 0
      000619 00                    1861 	.db #0x00	; 0
      00061A 00                    1862 	.db #0x00	; 0
      00061B 00                    1863 	.db #0x00	; 0
      00061C 00                    1864 	.db #0x00	; 0
      00061D 00                    1865 	.db #0x00	; 0
      00061E 00                    1866 	.db #0x00	; 0
      00061F 00                    1867 	.db #0x00	; 0
      000620 00                    1868 	.db #0x00	; 0
      000621 00                    1869 	.db #0x00	; 0
      000622 00                    1870 	.db #0x00	; 0
      000623 00                    1871 	.db #0x00	; 0
      000624 00                    1872 	.db #0x00	; 0
      000625 00                    1873 	.db #0x00	; 0
      000626 00                    1874 	.db #0x00	; 0
      000627 00                    1875 	.db #0x00	; 0
      000628 09                    1876 	.db #0x09	; 9
      000629 06                    1877 	.db #0x06	; 6
      00062A 06                    1878 	.db #0x06	; 6
      00062B 0F                    1879 	.db #0x0f	; 15
      00062C 06                    1880 	.db #0x06	; 6
      00062D 0F                    1881 	.db #0x0f	; 15
      00062E 09                    1882 	.db #0x09	; 9
      00062F 06                    1883 	.db #0x06	; 6
      000630 00                    1884 	.db #0x00	; 0
      000631 00                    1885 	.db #0x00	; 0
      000632 00                    1886 	.db #0x00	; 0
      000633 00                    1887 	.db #0x00	; 0
      000634 00                    1888 	.db #0x00	; 0
      000635 00                    1889 	.db #0x00	; 0
      000636 00                    1890 	.db #0x00	; 0
      000637 00                    1891 	.db #0x00	; 0
      000638 00                    1892 	.db #0x00	; 0
      000639 00                    1893 	.db #0x00	; 0
      00063A 00                    1894 	.db #0x00	; 0
      00063B 00                    1895 	.db #0x00	; 0
      00063C 00                    1896 	.db #0x00	; 0
      00063D 00                    1897 	.db #0x00	; 0
      00063E 00                    1898 	.db #0x00	; 0
      00063F 00                    1899 	.db #0x00	; 0
      000640 00                    1900 	.db #0x00	; 0
      000641 00                    1901 	.db #0x00	; 0
      000642 00                    1902 	.db #0x00	; 0
      000643 00                    1903 	.db #0x00	; 0
      000644 00                    1904 	.db #0x00	; 0
      000645 00                    1905 	.db #0x00	; 0
      000646 00                    1906 	.db #0x00	; 0
      000647 00                    1907 	.db #0x00	; 0
      000648 99                    1908 	.db #0x99	; 153
      000649 66                    1909 	.db #0x66	; 102	'f'
      00064A 66                    1910 	.db #0x66	; 102	'f'
      00064B FF                    1911 	.db #0xff	; 255
      00064C 66                    1912 	.db #0x66	; 102	'f'
      00064D FF                    1913 	.db #0xff	; 255
      00064E 99                    1914 	.db #0x99	; 153
      00064F 66                    1915 	.db #0x66	; 102	'f'
      000650 00                    1916 	.db #0x00	; 0
      000651 00                    1917 	.db #0x00	; 0
      000652 00                    1918 	.db #0x00	; 0
      000653 00                    1919 	.db #0x00	; 0
      000654 00                    1920 	.db #0x00	; 0
      000655 00                    1921 	.db #0x00	; 0
      000656 00                    1922 	.db #0x00	; 0
      000657 00                    1923 	.db #0x00	; 0
      000658 00                    1924 	.db #0x00	; 0
      000659 00                    1925 	.db #0x00	; 0
      00065A 00                    1926 	.db #0x00	; 0
      00065B 00                    1927 	.db #0x00	; 0
      00065C 00                    1928 	.db #0x00	; 0
      00065D 00                    1929 	.db #0x00	; 0
      00065E 00                    1930 	.db #0x00	; 0
      00065F 00                    1931 	.db #0x00	; 0
      000660 00                    1932 	.db #0x00	; 0
      000661 00                    1933 	.db #0x00	; 0
      000662 00                    1934 	.db #0x00	; 0
      000663 00                    1935 	.db #0x00	; 0
      000664 00                    1936 	.db #0x00	; 0
      000665 00                    1937 	.db #0x00	; 0
      000666 00                    1938 	.db #0x00	; 0
      000667 00                    1939 	.db #0x00	; 0
      000668 09                    1940 	.db #0x09	; 9
      000669 06                    1941 	.db #0x06	; 6
      00066A 06                    1942 	.db #0x06	; 6
      00066B 0F                    1943 	.db #0x0f	; 15
      00066C 06                    1944 	.db #0x06	; 6
      00066D 0F                    1945 	.db #0x0f	; 15
      00066E 09                    1946 	.db #0x09	; 9
      00066F 06                    1947 	.db #0x06	; 6
      000670 09                    1948 	.db #0x09	; 9
      000671 06                    1949 	.db #0x06	; 6
      000672 06                    1950 	.db #0x06	; 6
      000673 0F                    1951 	.db #0x0f	; 15
      000674 06                    1952 	.db #0x06	; 6
      000675 0F                    1953 	.db #0x0f	; 15
      000676 09                    1954 	.db #0x09	; 9
      000677 06                    1955 	.db #0x06	; 6
      000678 00                    1956 	.db #0x00	; 0
      000679 00                    1957 	.db #0x00	; 0
      00067A 00                    1958 	.db #0x00	; 0
      00067B 00                    1959 	.db #0x00	; 0
      00067C 00                    1960 	.db #0x00	; 0
      00067D 00                    1961 	.db #0x00	; 0
      00067E 00                    1962 	.db #0x00	; 0
      00067F 00                    1963 	.db #0x00	; 0
      000680 00                    1964 	.db #0x00	; 0
      000681 00                    1965 	.db #0x00	; 0
      000682 00                    1966 	.db #0x00	; 0
      000683 00                    1967 	.db #0x00	; 0
      000684 00                    1968 	.db #0x00	; 0
      000685 00                    1969 	.db #0x00	; 0
      000686 00                    1970 	.db #0x00	; 0
      000687 00                    1971 	.db #0x00	; 0
      000688 90                    1972 	.db #0x90	; 144
      000689 60                    1973 	.db #0x60	; 96
      00068A 60                    1974 	.db #0x60	; 96
      00068B F0                    1975 	.db #0xf0	; 240
      00068C 60                    1976 	.db #0x60	; 96
      00068D F0                    1977 	.db #0xf0	; 240
      00068E 90                    1978 	.db #0x90	; 144
      00068F 60                    1979 	.db #0x60	; 96
      000690 09                    1980 	.db #0x09	; 9
      000691 06                    1981 	.db #0x06	; 6
      000692 06                    1982 	.db #0x06	; 6
      000693 0F                    1983 	.db #0x0f	; 15
      000694 06                    1984 	.db #0x06	; 6
      000695 0F                    1985 	.db #0x0f	; 15
      000696 09                    1986 	.db #0x09	; 9
      000697 06                    1987 	.db #0x06	; 6
      000698 00                    1988 	.db #0x00	; 0
      000699 00                    1989 	.db #0x00	; 0
      00069A 00                    1990 	.db #0x00	; 0
      00069B 00                    1991 	.db #0x00	; 0
      00069C 00                    1992 	.db #0x00	; 0
      00069D 00                    1993 	.db #0x00	; 0
      00069E 00                    1994 	.db #0x00	; 0
      00069F 00                    1995 	.db #0x00	; 0
      0006A0 00                    1996 	.db #0x00	; 0
      0006A1 00                    1997 	.db #0x00	; 0
      0006A2 00                    1998 	.db #0x00	; 0
      0006A3 00                    1999 	.db #0x00	; 0
      0006A4 00                    2000 	.db #0x00	; 0
      0006A5 00                    2001 	.db #0x00	; 0
      0006A6 00                    2002 	.db #0x00	; 0
      0006A7 00                    2003 	.db #0x00	; 0
      0006A8 18                    2004 	.db #0x18	; 24
      0006A9 00                    2005 	.db #0x00	; 0
      0006AA 18                    2006 	.db #0x18	; 24
      0006AB 18                    2007 	.db #0x18	; 24
      0006AC 18                    2008 	.db #0x18	; 24
      0006AD 18                    2009 	.db #0x18	; 24
      0006AE 3C                    2010 	.db #0x3c	; 60
      0006AF 18                    2011 	.db #0x18	; 24
      0006B0 3C                    2012 	.db #0x3c	; 60
      0006B1 18                    2013 	.db #0x18	; 24
      0006B2 3C                    2014 	.db #0x3c	; 60
      0006B3 3C                    2015 	.db #0x3c	; 60
      0006B4 7E                    2016 	.db #0x7e	; 126
      0006B5 3C                    2017 	.db #0x3c	; 60
      0006B6 7E                    2018 	.db #0x7e	; 126
      0006B7 24                    2019 	.db #0x24	; 36
      0006B8 00                    2020 	.db #0x00	; 0
      0006B9 00                    2021 	.db #0x00	; 0
      0006BA 00                    2022 	.db #0x00	; 0
      0006BB 00                    2023 	.db #0x00	; 0
      0006BC 00                    2024 	.db #0x00	; 0
      0006BD 00                    2025 	.db #0x00	; 0
      0006BE 00                    2026 	.db #0x00	; 0
      0006BF 00                    2027 	.db #0x00	; 0
      0006C0 00                    2028 	.db #0x00	; 0
      0006C1 00                    2029 	.db #0x00	; 0
      0006C2 00                    2030 	.db #0x00	; 0
      0006C3 00                    2031 	.db #0x00	; 0
      0006C4 00                    2032 	.db #0x00	; 0
      0006C5 00                    2033 	.db #0x00	; 0
      0006C6 00                    2034 	.db #0x00	; 0
      0006C7 00                    2035 	.db #0x00	; 0
      0006C8 C0                    2036 	.db #0xc0	; 192
      0006C9 00                    2037 	.db #0x00	; 0
      0006CA F8                    2038 	.db #0xf8	; 248
      0006CB E0                    2039 	.db #0xe0	; 224
      0006CC FF                    2040 	.db #0xff	; 255
      0006CD 7E                    2041 	.db #0x7e	; 126
      0006CE FF                    2042 	.db #0xff	; 255
      0006CF 7E                    2043 	.db #0x7e	; 126
      0006D0 F8                    2044 	.db #0xf8	; 248
      0006D1 E0                    2045 	.db #0xe0	; 224
      0006D2 C0                    2046 	.db #0xc0	; 192
      0006D3 00                    2047 	.db #0x00	; 0
      0006D4 00                    2048 	.db #0x00	; 0
      0006D5 00                    2049 	.db #0x00	; 0
      0006D6 00                    2050 	.db #0x00	; 0
      0006D7 00                    2051 	.db #0x00	; 0
      0006D8 00                    2052 	.db #0x00	; 0
      0006D9 00                    2053 	.db #0x00	; 0
      0006DA 00                    2054 	.db #0x00	; 0
      0006DB 00                    2055 	.db #0x00	; 0
      0006DC 00                    2056 	.db #0x00	; 0
      0006DD 00                    2057 	.db #0x00	; 0
      0006DE 00                    2058 	.db #0x00	; 0
      0006DF 00                    2059 	.db #0x00	; 0
      0006E0 00                    2060 	.db #0x00	; 0
      0006E1 00                    2061 	.db #0x00	; 0
      0006E2 00                    2062 	.db #0x00	; 0
      0006E3 00                    2063 	.db #0x00	; 0
      0006E4 00                    2064 	.db #0x00	; 0
      0006E5 00                    2065 	.db #0x00	; 0
      0006E6 00                    2066 	.db #0x00	; 0
      0006E7 00                    2067 	.db #0x00	; 0
      0006E8 06                    2068 	.db #0x06	; 6
      0006E9 00                    2069 	.db #0x00	; 0
      0006EA 0F                    2070 	.db #0x0f	; 15
      0006EB 06                    2071 	.db #0x06	; 6
      0006EC 1F                    2072 	.db #0x1f	; 31
      0006ED 0E                    2073 	.db #0x0e	; 14
      0006EE 7E                    2074 	.db #0x7e	; 126
      0006EF 1C                    2075 	.db #0x1c	; 28
      0006F0 FC                    2076 	.db #0xfc	; 252
      0006F1 78                    2077 	.db #0x78	; 120	'x'
      0006F2 F8                    2078 	.db #0xf8	; 248
      0006F3 F0                    2079 	.db #0xf0	; 240
      0006F4 F8                    2080 	.db #0xf8	; 248
      0006F5 70                    2081 	.db #0x70	; 112	'p'
      0006F6 70                    2082 	.db #0x70	; 112	'p'
      0006F7 20                    2083 	.db #0x20	; 32
      0006F8 00                    2084 	.db #0x00	; 0
      0006F9 00                    2085 	.db #0x00	; 0
      0006FA 00                    2086 	.db #0x00	; 0
      0006FB 00                    2087 	.db #0x00	; 0
      0006FC 00                    2088 	.db #0x00	; 0
      0006FD 00                    2089 	.db #0x00	; 0
      0006FE 00                    2090 	.db #0x00	; 0
      0006FF 00                    2091 	.db #0x00	; 0
      000700 00                    2092 	.db #0x00	; 0
      000701 00                    2093 	.db #0x00	; 0
      000702 00                    2094 	.db #0x00	; 0
      000703 00                    2095 	.db #0x00	; 0
      000704 00                    2096 	.db #0x00	; 0
      000705 00                    2097 	.db #0x00	; 0
      000706 00                    2098 	.db #0x00	; 0
      000707 00                    2099 	.db #0x00	; 0
      000708                       2100 _upgrade:
      000708 01                    2101 	.db #0x01	; 1
      000709 00 00                 2102 	.dw #0x0000
      00070B 00 00                 2103 	.dw #0x0000
      00070D 00                    2104 	.db #0x00	; 0
      00070E 00                    2105 	.db #0x00	; 0
      00070F 00                    2106 	.db #0x00	; 0
      000710 70                    2107 	.db #0x70	; 112	'p'
      000711                       2108 _ammo:
      000711 01                    2109 	.db #0x01	; 1
      000712 00 00                 2110 	.dw #0x0000
      000714 00 00                 2111 	.dw #0x0000
      000716 00                    2112 	.db #0x00	; 0
      000717 01                    2113 	.db #0x01	; 1
      000718 05                    2114 	.db #0x05	; 5
      000719 72                    2115 	.db #0x72	; 114	'r'
      00071A                       2116 _health:
      00071A 01                    2117 	.db #0x01	; 1
      00071B 00 00                 2118 	.dw #0x0000
      00071D 00 00                 2119 	.dw #0x0000
      00071F 00                    2120 	.db #0x00	; 0
      000720 02                    2121 	.db #0x02	; 2
      000721 32                    2122 	.db #0x32	; 50	'2'
      000722 74                    2123 	.db #0x74	; 116	't'
      000723                       2124 _Pickups:
      000723 7E                    2125 	.db #0x7e	; 126
      000724 00                    2126 	.db #0x00	; 0
      000725 81                    2127 	.db #0x81	; 129
      000726 00                    2128 	.db #0x00	; 0
      000727 D7                    2129 	.db #0xd7	; 215
      000728 56                    2130 	.db #0x56	; 86	'V'
      000729 D7                    2131 	.db #0xd7	; 215
      00072A 56                    2132 	.db #0x56	; 86	'V'
      00072B D5                    2133 	.db #0xd5	; 213
      00072C 54                    2134 	.db #0x54	; 84	'T'
      00072D F5                    2135 	.db #0xf5	; 245
      00072E 74                    2136 	.db #0x74	; 116	't'
      00072F 81                    2137 	.db #0x81	; 129
      000730 00                    2138 	.db #0x00	; 0
      000731 7E                    2139 	.db #0x7e	; 126
      000732 00                    2140 	.db #0x00	; 0
      000733 00                    2141 	.db #0x00	; 0
      000734 00                    2142 	.db #0x00	; 0
      000735 00                    2143 	.db #0x00	; 0
      000736 00                    2144 	.db #0x00	; 0
      000737 00                    2145 	.db #0x00	; 0
      000738 00                    2146 	.db #0x00	; 0
      000739 00                    2147 	.db #0x00	; 0
      00073A 00                    2148 	.db #0x00	; 0
      00073B 00                    2149 	.db #0x00	; 0
      00073C 00                    2150 	.db #0x00	; 0
      00073D 00                    2151 	.db #0x00	; 0
      00073E 00                    2152 	.db #0x00	; 0
      00073F 00                    2153 	.db #0x00	; 0
      000740 00                    2154 	.db #0x00	; 0
      000741 00                    2155 	.db #0x00	; 0
      000742 00                    2156 	.db #0x00	; 0
      000743 7E                    2157 	.db #0x7e	; 126
      000744 00                    2158 	.db #0x00	; 0
      000745 8F                    2159 	.db #0x8f	; 143
      000746 06                    2160 	.db #0x06	; 6
      000747 9F                    2161 	.db #0x9f	; 159
      000748 0E                    2162 	.db #0x0e	; 14
      000749 FF                    2163 	.db #0xff	; 255
      00074A 1C                    2164 	.db #0x1c	; 28
      00074B FD                    2165 	.db #0xfd	; 253
      00074C 78                    2166 	.db #0x78	; 120	'x'
      00074D F9                    2167 	.db #0xf9	; 249
      00074E 70                    2168 	.db #0x70	; 112	'p'
      00074F F9                    2169 	.db #0xf9	; 249
      000750 70                    2170 	.db #0x70	; 112	'p'
      000751 7E                    2171 	.db #0x7e	; 126
      000752 00                    2172 	.db #0x00	; 0
      000753 00                    2173 	.db #0x00	; 0
      000754 00                    2174 	.db #0x00	; 0
      000755 00                    2175 	.db #0x00	; 0
      000756 00                    2176 	.db #0x00	; 0
      000757 00                    2177 	.db #0x00	; 0
      000758 00                    2178 	.db #0x00	; 0
      000759 00                    2179 	.db #0x00	; 0
      00075A 00                    2180 	.db #0x00	; 0
      00075B 00                    2181 	.db #0x00	; 0
      00075C 00                    2182 	.db #0x00	; 0
      00075D 00                    2183 	.db #0x00	; 0
      00075E 00                    2184 	.db #0x00	; 0
      00075F 00                    2185 	.db #0x00	; 0
      000760 00                    2186 	.db #0x00	; 0
      000761 00                    2187 	.db #0x00	; 0
      000762 00                    2188 	.db #0x00	; 0
      000763 7E                    2189 	.db #0x7e	; 126
      000764 00                    2190 	.db #0x00	; 0
      000765 99                    2191 	.db #0x99	; 153
      000766 18                    2192 	.db #0x18	; 24
      000767 99                    2193 	.db #0x99	; 153
      000768 18                    2194 	.db #0x18	; 24
      000769 FF                    2195 	.db #0xff	; 255
      00076A 7E                    2196 	.db #0x7e	; 126
      00076B FF                    2197 	.db #0xff	; 255
      00076C 7E                    2198 	.db #0x7e	; 126
      00076D 99                    2199 	.db #0x99	; 153
      00076E 18                    2200 	.db #0x18	; 24
      00076F 99                    2201 	.db #0x99	; 153
      000770 18                    2202 	.db #0x18	; 24
      000771 7E                    2203 	.db #0x7e	; 126
      000772 00                    2204 	.db #0x00	; 0
      000773 00                    2205 	.db #0x00	; 0
      000774 00                    2206 	.db #0x00	; 0
      000775 00                    2207 	.db #0x00	; 0
      000776 00                    2208 	.db #0x00	; 0
      000777 00                    2209 	.db #0x00	; 0
      000778 00                    2210 	.db #0x00	; 0
      000779 00                    2211 	.db #0x00	; 0
      00077A 00                    2212 	.db #0x00	; 0
      00077B 00                    2213 	.db #0x00	; 0
      00077C 00                    2214 	.db #0x00	; 0
      00077D 00                    2215 	.db #0x00	; 0
      00077E 00                    2216 	.db #0x00	; 0
      00077F 00                    2217 	.db #0x00	; 0
      000780 00                    2218 	.db #0x00	; 0
      000781 00                    2219 	.db #0x00	; 0
      000782 00                    2220 	.db #0x00	; 0
      000783                       2221 _Player1:
      000783 08                    2222 	.db #0x08	; 8
      000784 08                    2223 	.db #0x08	; 8
      000785 1C                    2224 	.db #0x1c	; 28
      000786 14                    2225 	.db #0x14	; 20
      000787 38                    2226 	.db #0x38	; 56	'8'
      000788 28                    2227 	.db #0x28	; 40
      000789 68                    2228 	.db #0x68	; 104	'h'
      00078A 58                    2229 	.db #0x58	; 88	'X'
      00078B 50                    2230 	.db #0x50	; 80	'P'
      00078C 71                    2231 	.db #0x71	; 113	'q'
      00078D D0                    2232 	.db #0xd0	; 208
      00078E B2                    2233 	.db #0xb2	; 178
      00078F D5                    2234 	.db #0xd5	; 213
      000790 B6                    2235 	.db #0xb6	; 182
      000791 D5                    2236 	.db #0xd5	; 213
      000792 B6                    2237 	.db #0xb6	; 182
      000793 D5                    2238 	.db #0xd5	; 213
      000794 B6                    2239 	.db #0xb6	; 182
      000795 CD                    2240 	.db #0xcd	; 205
      000796 BE                    2241 	.db #0xbe	; 190
      000797 C5                    2242 	.db #0xc5	; 197
      000798 BE                    2243 	.db #0xbe	; 190
      000799 65                    2244 	.db #0x65	; 101	'e'
      00079A 5E                    2245 	.db #0x5e	; 94
      00079B 3E                    2246 	.db #0x3e	; 62
      00079C 2F                    2247 	.db #0x2f	; 47
      00079D 13                    2248 	.db #0x13	; 19
      00079E 13                    2249 	.db #0x13	; 19
      00079F 06                    2250 	.db #0x06	; 6
      0007A0 07                    2251 	.db #0x07	; 7
      0007A1 07                    2252 	.db #0x07	; 7
      0007A2 05                    2253 	.db #0x05	; 5
      0007A3 10                    2254 	.db #0x10	; 16
      0007A4 10                    2255 	.db #0x10	; 16
      0007A5 38                    2256 	.db #0x38	; 56	'8'
      0007A6 28                    2257 	.db #0x28	; 40
      0007A7 1C                    2258 	.db #0x1c	; 28
      0007A8 14                    2259 	.db #0x14	; 20
      0007A9 16                    2260 	.db #0x16	; 22
      0007AA 1A                    2261 	.db #0x1a	; 26
      0007AB 0A                    2262 	.db #0x0a	; 10
      0007AC 8E                    2263 	.db #0x8e	; 142
      0007AD 0B                    2264 	.db #0x0b	; 11
      0007AE 4D                    2265 	.db #0x4d	; 77	'M'
      0007AF AB                    2266 	.db #0xab	; 171
      0007B0 6D                    2267 	.db #0x6d	; 109	'm'
      0007B1 AB                    2268 	.db #0xab	; 171
      0007B2 6D                    2269 	.db #0x6d	; 109	'm'
      0007B3 AB                    2270 	.db #0xab	; 171
      0007B4 6D                    2271 	.db #0x6d	; 109	'm'
      0007B5 B3                    2272 	.db #0xb3	; 179
      0007B6 7D                    2273 	.db #0x7d	; 125
      0007B7 A3                    2274 	.db #0xa3	; 163
      0007B8 7D                    2275 	.db #0x7d	; 125
      0007B9 A6                    2276 	.db #0xa6	; 166
      0007BA 7A                    2277 	.db #0x7a	; 122	'z'
      0007BB 7C                    2278 	.db #0x7c	; 124
      0007BC F4                    2279 	.db #0xf4	; 244
      0007BD C8                    2280 	.db #0xc8	; 200
      0007BE C8                    2281 	.db #0xc8	; 200
      0007BF 60                    2282 	.db #0x60	; 96
      0007C0 E0                    2283 	.db #0xe0	; 224
      0007C1 E0                    2284 	.db #0xe0	; 224
      0007C2 A0                    2285 	.db #0xa0	; 160
      0007C3 07                    2286 	.db #0x07	; 7
      0007C4 07                    2287 	.db #0x07	; 7
      0007C5 0F                    2288 	.db #0x0f	; 15
      0007C6 08                    2289 	.db #0x08	; 8
      0007C7 18                    2290 	.db #0x18	; 24
      0007C8 17                    2291 	.db #0x17	; 23
      0007C9 31                    2292 	.db #0x31	; 49	'1'
      0007CA 2F                    2293 	.db #0x2f	; 47
      0007CB 12                    2294 	.db #0x12	; 18
      0007CC 1E                    2295 	.db #0x1e	; 30
      0007CD DF                    2296 	.db #0xdf	; 223
      0007CE DF                    2297 	.db #0xdf	; 223
      0007CF F0                    2298 	.db #0xf0	; 240
      0007D0 7F                    2299 	.db #0x7f	; 127
      0007D1 AF                    2300 	.db #0xaf	; 175
      0007D2 F0                    2301 	.db #0xf0	; 240
      0007D3 AF                    2302 	.db #0xaf	; 175
      0007D4 F0                    2303 	.db #0xf0	; 240
      0007D5 F0                    2304 	.db #0xf0	; 240
      0007D6 7F                    2305 	.db #0x7f	; 127
      0007D7 DF                    2306 	.db #0xdf	; 223
      0007D8 DF                    2307 	.db #0xdf	; 223
      0007D9 12                    2308 	.db #0x12	; 18
      0007DA 1E                    2309 	.db #0x1e	; 30
      0007DB 31                    2310 	.db #0x31	; 49	'1'
      0007DC 2F                    2311 	.db #0x2f	; 47
      0007DD 18                    2312 	.db #0x18	; 24
      0007DE 17                    2313 	.db #0x17	; 23
      0007DF 0F                    2314 	.db #0x0f	; 15
      0007E0 08                    2315 	.db #0x08	; 8
      0007E1 07                    2316 	.db #0x07	; 7
      0007E2 07                    2317 	.db #0x07	; 7
      0007E3 E0                    2318 	.db #0xe0	; 224
      0007E4 E0                    2319 	.db #0xe0	; 224
      0007E5 F8                    2320 	.db #0xf8	; 248
      0007E6 18                    2321 	.db #0x18	; 24
      0007E7 0C                    2322 	.db #0x0c	; 12
      0007E8 F4                    2323 	.db #0xf4	; 244
      0007E9 F6                    2324 	.db #0xf6	; 246
      0007EA FA                    2325 	.db #0xfa	; 250
      0007EB 0F                    2326 	.db #0x0f	; 15
      0007EC 0D                    2327 	.db #0x0d	; 13
      0007ED C2                    2328 	.db #0xc2	; 194
      0007EE C2                    2329 	.db #0xc2	; 194
      0007EF 00                    2330 	.db #0x00	; 0
      0007F0 E0                    2331 	.db #0xe0	; 224
      0007F1 C0                    2332 	.db #0xc0	; 192
      0007F2 10                    2333 	.db #0x10	; 16
      0007F3 C0                    2334 	.db #0xc0	; 192
      0007F4 10                    2335 	.db #0x10	; 16
      0007F5 00                    2336 	.db #0x00	; 0
      0007F6 E0                    2337 	.db #0xe0	; 224
      0007F7 C2                    2338 	.db #0xc2	; 194
      0007F8 C2                    2339 	.db #0xc2	; 194
      0007F9 0F                    2340 	.db #0x0f	; 15
      0007FA 0D                    2341 	.db #0x0d	; 13
      0007FB F6                    2342 	.db #0xf6	; 246
      0007FC FA                    2343 	.db #0xfa	; 250
      0007FD 0C                    2344 	.db #0x0c	; 12
      0007FE F4                    2345 	.db #0xf4	; 244
      0007FF F8                    2346 	.db #0xf8	; 248
      000800 18                    2347 	.db #0x18	; 24
      000801 E0                    2348 	.db #0xe0	; 224
      000802 E0                    2349 	.db #0xe0	; 224
      000803 07                    2350 	.db #0x07	; 7
      000804 07                    2351 	.db #0x07	; 7
      000805 1B                    2352 	.db #0x1b	; 27
      000806 1C                    2353 	.db #0x1c	; 28
      000807 38                    2354 	.db #0x38	; 56	'8'
      000808 27                    2355 	.db #0x27	; 39
      000809 60                    2356 	.db #0x60	; 96
      00080A 5E                    2357 	.db #0x5e	; 94
      00080B 60                    2358 	.db #0x60	; 96
      00080C 5C                    2359 	.db #0x5c	; 92
      00080D 41                    2360 	.db #0x41	; 65	'A'
      00080E 79                    2361 	.db #0x79	; 121	'y'
      00080F C4                    2362 	.db #0xc4	; 196
      000810 B7                    2363 	.db #0xb7	; 183
      000811 99                    2364 	.db #0x99	; 153
      000812 FE                    2365 	.db #0xfe	; 254
      000813 B3                    2366 	.db #0xb3	; 179
      000814 EC                    2367 	.db #0xec	; 236
      000815 67                    2368 	.db #0x67	; 103	'g'
      000816 58                    2369 	.db #0x58	; 88	'X'
      000817 2E                    2370 	.db #0x2e	; 46
      000818 31                    2371 	.db #0x31	; 49	'1'
      000819 5C                    2372 	.db #0x5c	; 92
      00081A 73                    2373 	.db #0x73	; 115	's'
      00081B 69                    2374 	.db #0x69	; 105	'i'
      00081C 5E                    2375 	.db #0x5e	; 94
      00081D 37                    2376 	.db #0x37	; 55	'7'
      00081E 2D                    2377 	.db #0x2d	; 45
      00081F 1A                    2378 	.db #0x1a	; 26
      000820 1B                    2379 	.db #0x1b	; 27
      000821 01                    2380 	.db #0x01	; 1
      000822 01                    2381 	.db #0x01	; 1
      000823 E0                    2382 	.db #0xe0	; 224
      000824 E0                    2383 	.db #0xe0	; 224
      000825 90                    2384 	.db #0x90	; 144
      000826 70                    2385 	.db #0x70	; 112	'p'
      000827 C0                    2386 	.db #0xc0	; 192
      000828 C0                    2387 	.db #0xc0	; 192
      000829 00                    2388 	.db #0x00	; 0
      00082A 00                    2389 	.db #0x00	; 0
      00082B 02                    2390 	.db #0x02	; 2
      00082C 02                    2391 	.db #0x02	; 2
      00082D C1                    2392 	.db #0xc1	; 193
      00082E C3                    2393 	.db #0xc3	; 195
      00082F 65                    2394 	.db #0x65	; 101	'e'
      000830 A7                    2395 	.db #0xa7	; 167
      000831 A7                    2396 	.db #0xa7	; 167
      000832 65                    2397 	.db #0x65	; 101	'e'
      000833 A3                    2398 	.db #0xa3	; 163
      000834 65                    2399 	.db #0x65	; 101	'e'
      000835 03                    2400 	.db #0x03	; 3
      000836 CD                    2401 	.db #0xcd	; 205
      000837 41                    2402 	.db #0x41	; 65	'A'
      000838 DF                    2403 	.db #0xdf	; 223
      000839 86                    2404 	.db #0x86	; 134
      00083A BA                    2405 	.db #0xba	; 186
      00083B 86                    2406 	.db #0x86	; 134
      00083C FA                    2407 	.db #0xfa	; 250
      00083D 1C                    2408 	.db #0x1c	; 28
      00083E E4                    2409 	.db #0xe4	; 228
      00083F 78                    2410 	.db #0x78	; 120	'x'
      000840 B8                    2411 	.db #0xb8	; 184
      000841 C0                    2412 	.db #0xc0	; 192
      000842 C0                    2413 	.db #0xc0	; 192
      000843 00                    2414 	.db #0x00	; 0
      000844 00                    2415 	.db #0x00	; 0
      000845 00                    2416 	.db #0x00	; 0
      000846 00                    2417 	.db #0x00	; 0
      000847 00                    2418 	.db #0x00	; 0
      000848 00                    2419 	.db #0x00	; 0
      000849 00                    2420 	.db #0x00	; 0
      00084A 00                    2421 	.db #0x00	; 0
      00084B 00                    2422 	.db #0x00	; 0
      00084C 00                    2423 	.db #0x00	; 0
      00084D 00                    2424 	.db #0x00	; 0
      00084E 00                    2425 	.db #0x00	; 0
      00084F 00                    2426 	.db #0x00	; 0
      000850 00                    2427 	.db #0x00	; 0
      000851 00                    2428 	.db #0x00	; 0
      000852 00                    2429 	.db #0x00	; 0
      000853 00                    2430 	.db #0x00	; 0
      000854 00                    2431 	.db #0x00	; 0
      000855 00                    2432 	.db #0x00	; 0
      000856 00                    2433 	.db #0x00	; 0
      000857 00                    2434 	.db #0x00	; 0
      000858 00                    2435 	.db #0x00	; 0
      000859 00                    2436 	.db #0x00	; 0
      00085A 00                    2437 	.db #0x00	; 0
      00085B 00                    2438 	.db #0x00	; 0
      00085C 00                    2439 	.db #0x00	; 0
      00085D 00                    2440 	.db #0x00	; 0
      00085E 00                    2441 	.db #0x00	; 0
      00085F 00                    2442 	.db #0x00	; 0
      000860 00                    2443 	.db #0x00	; 0
      000861 00                    2444 	.db #0x00	; 0
      000862 00                    2445 	.db #0x00	; 0
      000863 00                    2446 	.db #0x00	; 0
      000864 00                    2447 	.db #0x00	; 0
      000865 00                    2448 	.db #0x00	; 0
      000866 00                    2449 	.db #0x00	; 0
      000867 00                    2450 	.db #0x00	; 0
      000868 00                    2451 	.db #0x00	; 0
      000869 00                    2452 	.db #0x00	; 0
      00086A 00                    2453 	.db #0x00	; 0
      00086B 00                    2454 	.db #0x00	; 0
      00086C 00                    2455 	.db #0x00	; 0
      00086D 00                    2456 	.db #0x00	; 0
      00086E 00                    2457 	.db #0x00	; 0
      00086F 00                    2458 	.db #0x00	; 0
      000870 00                    2459 	.db #0x00	; 0
      000871 00                    2460 	.db #0x00	; 0
      000872 00                    2461 	.db #0x00	; 0
      000873 00                    2462 	.db #0x00	; 0
      000874 00                    2463 	.db #0x00	; 0
      000875 00                    2464 	.db #0x00	; 0
      000876 00                    2465 	.db #0x00	; 0
      000877 00                    2466 	.db #0x00	; 0
      000878 00                    2467 	.db #0x00	; 0
      000879 00                    2468 	.db #0x00	; 0
      00087A 00                    2469 	.db #0x00	; 0
      00087B 00                    2470 	.db #0x00	; 0
      00087C 00                    2471 	.db #0x00	; 0
      00087D 00                    2472 	.db #0x00	; 0
      00087E 00                    2473 	.db #0x00	; 0
      00087F 00                    2474 	.db #0x00	; 0
      000880 00                    2475 	.db #0x00	; 0
      000881 00                    2476 	.db #0x00	; 0
      000882 00                    2477 	.db #0x00	; 0
      000883                       2478 _ex:
      000883 00                    2479 	.db #0x00	; 0
      000884 00                    2480 	.db #0x00	; 0
      000885 00                    2481 	.db #0x00	; 0
      000886 00                    2482 	.db #0x00	; 0
      000887 00                    2483 	.db #0x00	; 0
      000888 00                    2484 	.db #0x00	; 0
      000889                       2485 _Ex1:
      000889 00                    2486 	.db #0x00	; 0
      00088A 00                    2487 	.db #0x00	; 0
      00088B 00                    2488 	.db #0x00	; 0
      00088C 00                    2489 	.db #0x00	; 0
      00088D 00                    2490 	.db #0x00	; 0
      00088E 00                    2491 	.db #0x00	; 0
      00088F 00                    2492 	.db #0x00	; 0
      000890 00                    2493 	.db #0x00	; 0
      000891 00                    2494 	.db #0x00	; 0
      000892 00                    2495 	.db #0x00	; 0
      000893 04                    2496 	.db #0x04	; 4
      000894 04                    2497 	.db #0x04	; 4
      000895 06                    2498 	.db #0x06	; 6
      000896 06                    2499 	.db #0x06	; 6
      000897 06                    2500 	.db #0x06	; 6
      000898 06                    2501 	.db #0x06	; 6
      000899 00                    2502 	.db #0x00	; 0
      00089A 00                    2503 	.db #0x00	; 0
      00089B 00                    2504 	.db #0x00	; 0
      00089C 00                    2505 	.db #0x00	; 0
      00089D 03                    2506 	.db #0x03	; 3
      00089E 03                    2507 	.db #0x03	; 3
      00089F 07                    2508 	.db #0x07	; 7
      0008A0 07                    2509 	.db #0x07	; 7
      0008A1 02                    2510 	.db #0x02	; 2
      0008A2 02                    2511 	.db #0x02	; 2
      0008A3 00                    2512 	.db #0x00	; 0
      0008A4 00                    2513 	.db #0x00	; 0
      0008A5 00                    2514 	.db #0x00	; 0
      0008A6 00                    2515 	.db #0x00	; 0
      0008A7 00                    2516 	.db #0x00	; 0
      0008A8 00                    2517 	.db #0x00	; 0
      0008A9 00                    2518 	.db #0x00	; 0
      0008AA 00                    2519 	.db #0x00	; 0
      0008AB 00                    2520 	.db #0x00	; 0
      0008AC 00                    2521 	.db #0x00	; 0
      0008AD 00                    2522 	.db #0x00	; 0
      0008AE 00                    2523 	.db #0x00	; 0
      0008AF 00                    2524 	.db #0x00	; 0
      0008B0 00                    2525 	.db #0x00	; 0
      0008B1 00                    2526 	.db #0x00	; 0
      0008B2 00                    2527 	.db #0x00	; 0
      0008B3 00                    2528 	.db #0x00	; 0
      0008B4 00                    2529 	.db #0x00	; 0
      0008B5 00                    2530 	.db #0x00	; 0
      0008B6 00                    2531 	.db #0x00	; 0
      0008B7 38                    2532 	.db #0x38	; 56	'8'
      0008B8 38                    2533 	.db #0x38	; 56	'8'
      0008B9 38                    2534 	.db #0x38	; 56	'8'
      0008BA 38                    2535 	.db #0x38	; 56	'8'
      0008BB 30                    2536 	.db #0x30	; 48	'0'
      0008BC 30                    2537 	.db #0x30	; 48	'0'
      0008BD 00                    2538 	.db #0x00	; 0
      0008BE 00                    2539 	.db #0x00	; 0
      0008BF 00                    2540 	.db #0x00	; 0
      0008C0 00                    2541 	.db #0x00	; 0
      0008C1 00                    2542 	.db #0x00	; 0
      0008C2 00                    2543 	.db #0x00	; 0
      0008C3 00                    2544 	.db #0x00	; 0
      0008C4 00                    2545 	.db #0x00	; 0
      0008C5 00                    2546 	.db #0x00	; 0
      0008C6 00                    2547 	.db #0x00	; 0
      0008C7 00                    2548 	.db #0x00	; 0
      0008C8 00                    2549 	.db #0x00	; 0
      0008C9 00                    2550 	.db #0x00	; 0
      0008CA 00                    2551 	.db #0x00	; 0
      0008CB 00                    2552 	.db #0x00	; 0
      0008CC 00                    2553 	.db #0x00	; 0
      0008CD 00                    2554 	.db #0x00	; 0
      0008CE 00                    2555 	.db #0x00	; 0
      0008CF 18                    2556 	.db #0x18	; 24
      0008D0 18                    2557 	.db #0x18	; 24
      0008D1 3E                    2558 	.db #0x3e	; 62
      0008D2 3E                    2559 	.db #0x3e	; 62
      0008D3 3E                    2560 	.db #0x3e	; 62
      0008D4 3E                    2561 	.db #0x3e	; 62
      0008D5 1C                    2562 	.db #0x1c	; 28
      0008D6 1C                    2563 	.db #0x1c	; 28
      0008D7 08                    2564 	.db #0x08	; 8
      0008D8 08                    2565 	.db #0x08	; 8
      0008D9 00                    2566 	.db #0x00	; 0
      0008DA 00                    2567 	.db #0x00	; 0
      0008DB 00                    2568 	.db #0x00	; 0
      0008DC 00                    2569 	.db #0x00	; 0
      0008DD 07                    2570 	.db #0x07	; 7
      0008DE 07                    2571 	.db #0x07	; 7
      0008DF 07                    2572 	.db #0x07	; 7
      0008E0 07                    2573 	.db #0x07	; 7
      0008E1 07                    2574 	.db #0x07	; 7
      0008E2 07                    2575 	.db #0x07	; 7
      0008E3 03                    2576 	.db #0x03	; 3
      0008E4 03                    2577 	.db #0x03	; 3
      0008E5 03                    2578 	.db #0x03	; 3
      0008E6 03                    2579 	.db #0x03	; 3
      0008E7 00                    2580 	.db #0x00	; 0
      0008E8 00                    2581 	.db #0x00	; 0
      0008E9 00                    2582 	.db #0x00	; 0
      0008EA 00                    2583 	.db #0x00	; 0
      0008EB 00                    2584 	.db #0x00	; 0
      0008EC 00                    2585 	.db #0x00	; 0
      0008ED 04                    2586 	.db #0x04	; 4
      0008EE 04                    2587 	.db #0x04	; 4
      0008EF 1E                    2588 	.db #0x1e	; 30
      0008F0 1E                    2589 	.db #0x1e	; 30
      0008F1 3E                    2590 	.db #0x3e	; 62
      0008F2 3E                    2591 	.db #0x3e	; 62
      0008F3 3E                    2592 	.db #0x3e	; 62
      0008F4 3E                    2593 	.db #0x3e	; 62
      0008F5 1E                    2594 	.db #0x1e	; 30
      0008F6 1E                    2595 	.db #0x1e	; 30
      0008F7 0C                    2596 	.db #0x0c	; 12
      0008F8 0C                    2597 	.db #0x0c	; 12
      0008F9 00                    2598 	.db #0x00	; 0
      0008FA 00                    2599 	.db #0x00	; 0
      0008FB 00                    2600 	.db #0x00	; 0
      0008FC 00                    2601 	.db #0x00	; 0
      0008FD 00                    2602 	.db #0x00	; 0
      0008FE 00                    2603 	.db #0x00	; 0
      0008FF 80                    2604 	.db #0x80	; 128
      000900 80                    2605 	.db #0x80	; 128
      000901 C0                    2606 	.db #0xc0	; 192
      000902 C0                    2607 	.db #0xc0	; 192
      000903 80                    2608 	.db #0x80	; 128
      000904 80                    2609 	.db #0x80	; 128
      000905 00                    2610 	.db #0x00	; 0
      000906 00                    2611 	.db #0x00	; 0
      000907 00                    2612 	.db #0x00	; 0
      000908 00                    2613 	.db #0x00	; 0
      000909 00                    2614 	.db #0x00	; 0
      00090A 00                    2615 	.db #0x00	; 0
      00090B 20                    2616 	.db #0x20	; 32
      00090C 20                    2617 	.db #0x20	; 32
      00090D 70                    2618 	.db #0x70	; 112	'p'
      00090E 70                    2619 	.db #0x70	; 112	'p'
      00090F 70                    2620 	.db #0x70	; 112	'p'
      000910 70                    2621 	.db #0x70	; 112	'p'
      000911 60                    2622 	.db #0x60	; 96
      000912 60                    2623 	.db #0x60	; 96
      000913 00                    2624 	.db #0x00	; 0
      000914 00                    2625 	.db #0x00	; 0
      000915 00                    2626 	.db #0x00	; 0
      000916 00                    2627 	.db #0x00	; 0
      000917 00                    2628 	.db #0x00	; 0
      000918 00                    2629 	.db #0x00	; 0
      000919 00                    2630 	.db #0x00	; 0
      00091A 00                    2631 	.db #0x00	; 0
      00091B 00                    2632 	.db #0x00	; 0
      00091C 00                    2633 	.db #0x00	; 0
      00091D 00                    2634 	.db #0x00	; 0
      00091E 00                    2635 	.db #0x00	; 0
      00091F 00                    2636 	.db #0x00	; 0
      000920 00                    2637 	.db #0x00	; 0
      000921 00                    2638 	.db #0x00	; 0
      000922 00                    2639 	.db #0x00	; 0
      000923 07                    2640 	.db #0x07	; 7
      000924 07                    2641 	.db #0x07	; 7
      000925 07                    2642 	.db #0x07	; 7
      000926 07                    2643 	.db #0x07	; 7
      000927 06                    2644 	.db #0x06	; 6
      000928 06                    2645 	.db #0x06	; 6
      000929 00                    2646 	.db #0x00	; 0
      00092A 00                    2647 	.db #0x00	; 0
      00092B 04                    2648 	.db #0x04	; 4
      00092C 04                    2649 	.db #0x04	; 4
      00092D 0E                    2650 	.db #0x0e	; 14
      00092E 0E                    2651 	.db #0x0e	; 14
      00092F 0E                    2652 	.db #0x0e	; 14
      000930 0E                    2653 	.db #0x0e	; 14
      000931 00                    2654 	.db #0x00	; 0
      000932 00                    2655 	.db #0x00	; 0
      000933 00                    2656 	.db #0x00	; 0
      000934 00                    2657 	.db #0x00	; 0
      000935 00                    2658 	.db #0x00	; 0
      000936 00                    2659 	.db #0x00	; 0
      000937 00                    2660 	.db #0x00	; 0
      000938 00                    2661 	.db #0x00	; 0
      000939 00                    2662 	.db #0x00	; 0
      00093A 00                    2663 	.db #0x00	; 0
      00093B 00                    2664 	.db #0x00	; 0
      00093C 00                    2665 	.db #0x00	; 0
      00093D 00                    2666 	.db #0x00	; 0
      00093E 00                    2667 	.db #0x00	; 0
      00093F 00                    2668 	.db #0x00	; 0
      000940 00                    2669 	.db #0x00	; 0
      000941 00                    2670 	.db #0x00	; 0
      000942 00                    2671 	.db #0x00	; 0
      000943 00                    2672 	.db #0x00	; 0
      000944 00                    2673 	.db #0x00	; 0
      000945 00                    2674 	.db #0x00	; 0
      000946 00                    2675 	.db #0x00	; 0
      000947 00                    2676 	.db #0x00	; 0
      000948 00                    2677 	.db #0x00	; 0
      000949 00                    2678 	.db #0x00	; 0
      00094A 00                    2679 	.db #0x00	; 0
      00094B 40                    2680 	.db #0x40	; 64
      00094C 40                    2681 	.db #0x40	; 64
      00094D 60                    2682 	.db #0x60	; 96
      00094E 60                    2683 	.db #0x60	; 96
      00094F 00                    2684 	.db #0x00	; 0
      000950 00                    2685 	.db #0x00	; 0
      000951 00                    2686 	.db #0x00	; 0
      000952 00                    2687 	.db #0x00	; 0
      000953 00                    2688 	.db #0x00	; 0
      000954 00                    2689 	.db #0x00	; 0
      000955 00                    2690 	.db #0x00	; 0
      000956 00                    2691 	.db #0x00	; 0
      000957 00                    2692 	.db #0x00	; 0
      000958 00                    2693 	.db #0x00	; 0
      000959 00                    2694 	.db #0x00	; 0
      00095A 00                    2695 	.db #0x00	; 0
      00095B 00                    2696 	.db #0x00	; 0
      00095C 00                    2697 	.db #0x00	; 0
      00095D 00                    2698 	.db #0x00	; 0
      00095E 00                    2699 	.db #0x00	; 0
      00095F 00                    2700 	.db #0x00	; 0
      000960 00                    2701 	.db #0x00	; 0
      000961 00                    2702 	.db #0x00	; 0
      000962 00                    2703 	.db #0x00	; 0
      000963 00                    2704 	.db #0x00	; 0
      000964 00                    2705 	.db #0x00	; 0
      000965 04                    2706 	.db #0x04	; 4
      000966 04                    2707 	.db #0x04	; 4
      000967 06                    2708 	.db #0x06	; 6
      000968 06                    2709 	.db #0x06	; 6
      000969 00                    2710 	.db #0x00	; 0
      00096A 00                    2711 	.db #0x00	; 0
      00096B 02                    2712 	.db #0x02	; 2
      00096C 02                    2713 	.db #0x02	; 2
      00096D 02                    2714 	.db #0x02	; 2
      00096E 02                    2715 	.db #0x02	; 2
      00096F 00                    2716 	.db #0x00	; 0
      000970 00                    2717 	.db #0x00	; 0
      000971 00                    2718 	.db #0x00	; 0
      000972 00                    2719 	.db #0x00	; 0
      000973 00                    2720 	.db #0x00	; 0
      000974 00                    2721 	.db #0x00	; 0
      000975 00                    2722 	.db #0x00	; 0
      000976 00                    2723 	.db #0x00	; 0
      000977 00                    2724 	.db #0x00	; 0
      000978 00                    2725 	.db #0x00	; 0
      000979 00                    2726 	.db #0x00	; 0
      00097A 00                    2727 	.db #0x00	; 0
      00097B 00                    2728 	.db #0x00	; 0
      00097C 00                    2729 	.db #0x00	; 0
      00097D 00                    2730 	.db #0x00	; 0
      00097E 00                    2731 	.db #0x00	; 0
      00097F 00                    2732 	.db #0x00	; 0
      000980 00                    2733 	.db #0x00	; 0
      000981 00                    2734 	.db #0x00	; 0
      000982 00                    2735 	.db #0x00	; 0
      000983 00                    2736 	.db #0x00	; 0
      000984 00                    2737 	.db #0x00	; 0
      000985 00                    2738 	.db #0x00	; 0
      000986 00                    2739 	.db #0x00	; 0
      000987 00                    2740 	.db #0x00	; 0
      000988 00                    2741 	.db #0x00	; 0
      000989                       2742 _Ex2:
      000989 00                    2743 	.db #0x00	; 0
      00098A 00                    2744 	.db #0x00	; 0
      00098B 00                    2745 	.db #0x00	; 0
      00098C 00                    2746 	.db #0x00	; 0
      00098D 00                    2747 	.db #0x00	; 0
      00098E 00                    2748 	.db #0x00	; 0
      00098F 01                    2749 	.db #0x01	; 1
      000990 01                    2750 	.db #0x01	; 1
      000991 03                    2751 	.db #0x03	; 3
      000992 03                    2752 	.db #0x03	; 3
      000993 03                    2753 	.db #0x03	; 3
      000994 03                    2754 	.db #0x03	; 3
      000995 00                    2755 	.db #0x00	; 0
      000996 00                    2756 	.db #0x00	; 0
      000997 06                    2757 	.db #0x06	; 6
      000998 06                    2758 	.db #0x06	; 6
      000999 0E                    2759 	.db #0x0e	; 14
      00099A 0E                    2760 	.db #0x0e	; 14
      00099B 0E                    2761 	.db #0x0e	; 14
      00099C 0E                    2762 	.db #0x0e	; 14
      00099D 00                    2763 	.db #0x00	; 0
      00099E 00                    2764 	.db #0x00	; 0
      00099F 00                    2765 	.db #0x00	; 0
      0009A0 00                    2766 	.db #0x00	; 0
      0009A1 00                    2767 	.db #0x00	; 0
      0009A2 00                    2768 	.db #0x00	; 0
      0009A3 00                    2769 	.db #0x00	; 0
      0009A4 00                    2770 	.db #0x00	; 0
      0009A5 00                    2771 	.db #0x00	; 0
      0009A6 00                    2772 	.db #0x00	; 0
      0009A7 00                    2773 	.db #0x00	; 0
      0009A8 00                    2774 	.db #0x00	; 0
      0009A9 00                    2775 	.db #0x00	; 0
      0009AA 00                    2776 	.db #0x00	; 0
      0009AB 00                    2777 	.db #0x00	; 0
      0009AC 00                    2778 	.db #0x00	; 0
      0009AD 00                    2779 	.db #0x00	; 0
      0009AE 00                    2780 	.db #0x00	; 0
      0009AF 80                    2781 	.db #0x80	; 128
      0009B0 80                    2782 	.db #0x80	; 128
      0009B1 80                    2783 	.db #0x80	; 128
      0009B2 80                    2784 	.db #0x80	; 128
      0009B3 00                    2785 	.db #0x00	; 0
      0009B4 00                    2786 	.db #0x00	; 0
      0009B5 60                    2787 	.db #0x60	; 96
      0009B6 60                    2788 	.db #0x60	; 96
      0009B7 60                    2789 	.db #0x60	; 96
      0009B8 60                    2790 	.db #0x60	; 96
      0009B9 00                    2791 	.db #0x00	; 0
      0009BA 00                    2792 	.db #0x00	; 0
      0009BB C0                    2793 	.db #0xc0	; 192
      0009BC C0                    2794 	.db #0xc0	; 192
      0009BD C0                    2795 	.db #0xc0	; 192
      0009BE C0                    2796 	.db #0xc0	; 192
      0009BF C0                    2797 	.db #0xc0	; 192
      0009C0 C0                    2798 	.db #0xc0	; 192
      0009C1 00                    2799 	.db #0x00	; 0
      0009C2 00                    2800 	.db #0x00	; 0
      0009C3 00                    2801 	.db #0x00	; 0
      0009C4 00                    2802 	.db #0x00	; 0
      0009C5 00                    2803 	.db #0x00	; 0
      0009C6 00                    2804 	.db #0x00	; 0
      0009C7 00                    2805 	.db #0x00	; 0
      0009C8 00                    2806 	.db #0x00	; 0
      0009C9 00                    2807 	.db #0x00	; 0
      0009CA 00                    2808 	.db #0x00	; 0
      0009CB 00                    2809 	.db #0x00	; 0
      0009CC 00                    2810 	.db #0x00	; 0
      0009CD 03                    2811 	.db #0x03	; 3
      0009CE 03                    2812 	.db #0x03	; 3
      0009CF 03                    2813 	.db #0x03	; 3
      0009D0 03                    2814 	.db #0x03	; 3
      0009D1 03                    2815 	.db #0x03	; 3
      0009D2 03                    2816 	.db #0x03	; 3
      0009D3 01                    2817 	.db #0x01	; 1
      0009D4 01                    2818 	.db #0x01	; 1
      0009D5 00                    2819 	.db #0x00	; 0
      0009D6 00                    2820 	.db #0x00	; 0
      0009D7 00                    2821 	.db #0x00	; 0
      0009D8 00                    2822 	.db #0x00	; 0
      0009D9 00                    2823 	.db #0x00	; 0
      0009DA 00                    2824 	.db #0x00	; 0
      0009DB 1C                    2825 	.db #0x1c	; 28
      0009DC 1C                    2826 	.db #0x1c	; 28
      0009DD 3C                    2827 	.db #0x3c	; 60
      0009DE 3C                    2828 	.db #0x3c	; 60
      0009DF 3C                    2829 	.db #0x3c	; 60
      0009E0 3C                    2830 	.db #0x3c	; 60
      0009E1 30                    2831 	.db #0x30	; 48	'0'
      0009E2 30                    2832 	.db #0x30	; 48	'0'
      0009E3 00                    2833 	.db #0x00	; 0
      0009E4 00                    2834 	.db #0x00	; 0
      0009E5 00                    2835 	.db #0x00	; 0
      0009E6 00                    2836 	.db #0x00	; 0
      0009E7 00                    2837 	.db #0x00	; 0
      0009E8 00                    2838 	.db #0x00	; 0
      0009E9 00                    2839 	.db #0x00	; 0
      0009EA 00                    2840 	.db #0x00	; 0
      0009EB 00                    2841 	.db #0x00	; 0
      0009EC 00                    2842 	.db #0x00	; 0
      0009ED 80                    2843 	.db #0x80	; 128
      0009EE 80                    2844 	.db #0x80	; 128
      0009EF C0                    2845 	.db #0xc0	; 192
      0009F0 C0                    2846 	.db #0xc0	; 192
      0009F1 C0                    2847 	.db #0xc0	; 192
      0009F2 C0                    2848 	.db #0xc0	; 192
      0009F3 DE                    2849 	.db #0xde	; 222
      0009F4 DE                    2850 	.db #0xde	; 222
      0009F5 9E                    2851 	.db #0x9e	; 158
      0009F6 9E                    2852 	.db #0x9e	; 158
      0009F7 0E                    2853 	.db #0x0e	; 14
      0009F8 0E                    2854 	.db #0x0e	; 14
      0009F9 00                    2855 	.db #0x00	; 0
      0009FA 00                    2856 	.db #0x00	; 0
      0009FB 00                    2857 	.db #0x00	; 0
      0009FC 00                    2858 	.db #0x00	; 0
      0009FD 38                    2859 	.db #0x38	; 56	'8'
      0009FE 38                    2860 	.db #0x38	; 56	'8'
      0009FF 3C                    2861 	.db #0x3c	; 60
      000A00 3C                    2862 	.db #0x3c	; 60
      000A01 3C                    2863 	.db #0x3c	; 60
      000A02 3C                    2864 	.db #0x3c	; 60
      000A03 3C                    2865 	.db #0x3c	; 60
      000A04 3C                    2866 	.db #0x3c	; 60
      000A05 1C                    2867 	.db #0x1c	; 28
      000A06 1C                    2868 	.db #0x1c	; 28
      000A07 00                    2869 	.db #0x00	; 0
      000A08 00                    2870 	.db #0x00	; 0
      000A09 00                    2871 	.db #0x00	; 0
      000A0A 00                    2872 	.db #0x00	; 0
      000A0B 04                    2873 	.db #0x04	; 4
      000A0C 04                    2874 	.db #0x04	; 4
      000A0D 07                    2875 	.db #0x07	; 7
      000A0E 07                    2876 	.db #0x07	; 7
      000A0F 07                    2877 	.db #0x07	; 7
      000A10 07                    2878 	.db #0x07	; 7
      000A11 00                    2879 	.db #0x00	; 0
      000A12 00                    2880 	.db #0x00	; 0
      000A13 00                    2881 	.db #0x00	; 0
      000A14 00                    2882 	.db #0x00	; 0
      000A15 00                    2883 	.db #0x00	; 0
      000A16 00                    2884 	.db #0x00	; 0
      000A17 00                    2885 	.db #0x00	; 0
      000A18 00                    2886 	.db #0x00	; 0
      000A19 00                    2887 	.db #0x00	; 0
      000A1A 00                    2888 	.db #0x00	; 0
      000A1B 00                    2889 	.db #0x00	; 0
      000A1C 00                    2890 	.db #0x00	; 0
      000A1D 00                    2891 	.db #0x00	; 0
      000A1E 00                    2892 	.db #0x00	; 0
      000A1F 00                    2893 	.db #0x00	; 0
      000A20 00                    2894 	.db #0x00	; 0
      000A21 38                    2895 	.db #0x38	; 56	'8'
      000A22 38                    2896 	.db #0x38	; 56	'8'
      000A23 18                    2897 	.db #0x18	; 24
      000A24 18                    2898 	.db #0x18	; 24
      000A25 00                    2899 	.db #0x00	; 0
      000A26 00                    2900 	.db #0x00	; 0
      000A27 00                    2901 	.db #0x00	; 0
      000A28 00                    2902 	.db #0x00	; 0
      000A29 00                    2903 	.db #0x00	; 0
      000A2A 00                    2904 	.db #0x00	; 0
      000A2B 00                    2905 	.db #0x00	; 0
      000A2C 00                    2906 	.db #0x00	; 0
      000A2D 00                    2907 	.db #0x00	; 0
      000A2E 00                    2908 	.db #0x00	; 0
      000A2F 00                    2909 	.db #0x00	; 0
      000A30 00                    2910 	.db #0x00	; 0
      000A31 00                    2911 	.db #0x00	; 0
      000A32 00                    2912 	.db #0x00	; 0
      000A33 0C                    2913 	.db #0x0c	; 12
      000A34 0C                    2914 	.db #0x0c	; 12
      000A35 0E                    2915 	.db #0x0e	; 14
      000A36 0E                    2916 	.db #0x0e	; 14
      000A37 06                    2917 	.db #0x06	; 6
      000A38 06                    2918 	.db #0x06	; 6
      000A39 00                    2919 	.db #0x00	; 0
      000A3A 00                    2920 	.db #0x00	; 0
      000A3B 00                    2921 	.db #0x00	; 0
      000A3C 00                    2922 	.db #0x00	; 0
      000A3D 00                    2923 	.db #0x00	; 0
      000A3E 00                    2924 	.db #0x00	; 0
      000A3F 00                    2925 	.db #0x00	; 0
      000A40 00                    2926 	.db #0x00	; 0
      000A41 06                    2927 	.db #0x06	; 6
      000A42 06                    2928 	.db #0x06	; 6
      000A43 0E                    2929 	.db #0x0e	; 14
      000A44 0E                    2930 	.db #0x0e	; 14
      000A45 04                    2931 	.db #0x04	; 4
      000A46 04                    2932 	.db #0x04	; 4
      000A47 00                    2933 	.db #0x00	; 0
      000A48 00                    2934 	.db #0x00	; 0
      000A49 0E                    2935 	.db #0x0e	; 14
      000A4A 0E                    2936 	.db #0x0e	; 14
      000A4B 04                    2937 	.db #0x04	; 4
      000A4C 04                    2938 	.db #0x04	; 4
      000A4D 00                    2939 	.db #0x00	; 0
      000A4E 00                    2940 	.db #0x00	; 0
      000A4F 00                    2941 	.db #0x00	; 0
      000A50 00                    2942 	.db #0x00	; 0
      000A51 00                    2943 	.db #0x00	; 0
      000A52 00                    2944 	.db #0x00	; 0
      000A53 00                    2945 	.db #0x00	; 0
      000A54 00                    2946 	.db #0x00	; 0
      000A55 00                    2947 	.db #0x00	; 0
      000A56 00                    2948 	.db #0x00	; 0
      000A57 00                    2949 	.db #0x00	; 0
      000A58 00                    2950 	.db #0x00	; 0
      000A59 00                    2951 	.db #0x00	; 0
      000A5A 00                    2952 	.db #0x00	; 0
      000A5B 00                    2953 	.db #0x00	; 0
      000A5C 00                    2954 	.db #0x00	; 0
      000A5D 00                    2955 	.db #0x00	; 0
      000A5E 00                    2956 	.db #0x00	; 0
      000A5F 00                    2957 	.db #0x00	; 0
      000A60 00                    2958 	.db #0x00	; 0
      000A61 20                    2959 	.db #0x20	; 32
      000A62 20                    2960 	.db #0x20	; 32
      000A63 30                    2961 	.db #0x30	; 48	'0'
      000A64 30                    2962 	.db #0x30	; 48	'0'
      000A65 00                    2963 	.db #0x00	; 0
      000A66 00                    2964 	.db #0x00	; 0
      000A67 00                    2965 	.db #0x00	; 0
      000A68 00                    2966 	.db #0x00	; 0
      000A69 00                    2967 	.db #0x00	; 0
      000A6A 00                    2968 	.db #0x00	; 0
      000A6B 00                    2969 	.db #0x00	; 0
      000A6C 00                    2970 	.db #0x00	; 0
      000A6D 00                    2971 	.db #0x00	; 0
      000A6E 00                    2972 	.db #0x00	; 0
      000A6F 00                    2973 	.db #0x00	; 0
      000A70 00                    2974 	.db #0x00	; 0
      000A71 00                    2975 	.db #0x00	; 0
      000A72 00                    2976 	.db #0x00	; 0
      000A73 00                    2977 	.db #0x00	; 0
      000A74 00                    2978 	.db #0x00	; 0
      000A75 04                    2979 	.db #0x04	; 4
      000A76 04                    2980 	.db #0x04	; 4
      000A77 03                    2981 	.db #0x03	; 3
      000A78 03                    2982 	.db #0x03	; 3
      000A79 00                    2983 	.db #0x00	; 0
      000A7A 00                    2984 	.db #0x00	; 0
      000A7B 00                    2985 	.db #0x00	; 0
      000A7C 00                    2986 	.db #0x00	; 0
      000A7D 00                    2987 	.db #0x00	; 0
      000A7E 00                    2988 	.db #0x00	; 0
      000A7F 00                    2989 	.db #0x00	; 0
      000A80 00                    2990 	.db #0x00	; 0
      000A81 00                    2991 	.db #0x00	; 0
      000A82 00                    2992 	.db #0x00	; 0
      000A83 02                    2993 	.db #0x02	; 2
      000A84 02                    2994 	.db #0x02	; 2
      000A85 02                    2995 	.db #0x02	; 2
      000A86 02                    2996 	.db #0x02	; 2
      000A87 00                    2997 	.db #0x00	; 0
      000A88 00                    2998 	.db #0x00	; 0
      000A89                       2999 _Ex3:
      000A89 00                    3000 	.db #0x00	; 0
      000A8A 00                    3001 	.db #0x00	; 0
      000A8B 00                    3002 	.db #0x00	; 0
      000A8C 00                    3003 	.db #0x00	; 0
      000A8D 00                    3004 	.db #0x00	; 0
      000A8E 00                    3005 	.db #0x00	; 0
      000A8F 00                    3006 	.db #0x00	; 0
      000A90 00                    3007 	.db #0x00	; 0
      000A91 00                    3008 	.db #0x00	; 0
      000A92 00                    3009 	.db #0x00	; 0
      000A93 00                    3010 	.db #0x00	; 0
      000A94 00                    3011 	.db #0x00	; 0
      000A95 02                    3012 	.db #0x02	; 2
      000A96 02                    3013 	.db #0x02	; 2
      000A97 07                    3014 	.db #0x07	; 7
      000A98 07                    3015 	.db #0x07	; 7
      000A99 02                    3016 	.db #0x02	; 2
      000A9A 02                    3017 	.db #0x02	; 2
      000A9B 00                    3018 	.db #0x00	; 0
      000A9C 00                    3019 	.db #0x00	; 0
      000A9D 00                    3020 	.db #0x00	; 0
      000A9E 00                    3021 	.db #0x00	; 0
      000A9F 00                    3022 	.db #0x00	; 0
      000AA0 00                    3023 	.db #0x00	; 0
      000AA1 00                    3024 	.db #0x00	; 0
      000AA2 00                    3025 	.db #0x00	; 0
      000AA3 00                    3026 	.db #0x00	; 0
      000AA4 00                    3027 	.db #0x00	; 0
      000AA5 00                    3028 	.db #0x00	; 0
      000AA6 00                    3029 	.db #0x00	; 0
      000AA7 00                    3030 	.db #0x00	; 0
      000AA8 00                    3031 	.db #0x00	; 0
      000AA9 00                    3032 	.db #0x00	; 0
      000AAA 00                    3033 	.db #0x00	; 0
      000AAB 00                    3034 	.db #0x00	; 0
      000AAC 00                    3035 	.db #0x00	; 0
      000AAD 00                    3036 	.db #0x00	; 0
      000AAE 00                    3037 	.db #0x00	; 0
      000AAF 00                    3038 	.db #0x00	; 0
      000AB0 00                    3039 	.db #0x00	; 0
      000AB1 00                    3040 	.db #0x00	; 0
      000AB2 00                    3041 	.db #0x00	; 0
      000AB3 00                    3042 	.db #0x00	; 0
      000AB4 00                    3043 	.db #0x00	; 0
      000AB5 20                    3044 	.db #0x20	; 32
      000AB6 20                    3045 	.db #0x20	; 32
      000AB7 70                    3046 	.db #0x70	; 112	'p'
      000AB8 70                    3047 	.db #0x70	; 112	'p'
      000AB9 20                    3048 	.db #0x20	; 32
      000ABA 20                    3049 	.db #0x20	; 32
      000ABB 00                    3050 	.db #0x00	; 0
      000ABC 00                    3051 	.db #0x00	; 0
      000ABD 00                    3052 	.db #0x00	; 0
      000ABE 00                    3053 	.db #0x00	; 0
      000ABF 00                    3054 	.db #0x00	; 0
      000AC0 00                    3055 	.db #0x00	; 0
      000AC1 00                    3056 	.db #0x00	; 0
      000AC2 00                    3057 	.db #0x00	; 0
      000AC3 00                    3058 	.db #0x00	; 0
      000AC4 00                    3059 	.db #0x00	; 0
      000AC5 00                    3060 	.db #0x00	; 0
      000AC6 00                    3061 	.db #0x00	; 0
      000AC7 00                    3062 	.db #0x00	; 0
      000AC8 00                    3063 	.db #0x00	; 0
      000AC9 00                    3064 	.db #0x00	; 0
      000ACA 00                    3065 	.db #0x00	; 0
      000ACB 00                    3066 	.db #0x00	; 0
      000ACC 00                    3067 	.db #0x00	; 0
      000ACD 00                    3068 	.db #0x00	; 0
      000ACE 00                    3069 	.db #0x00	; 0
      000ACF 00                    3070 	.db #0x00	; 0
      000AD0 00                    3071 	.db #0x00	; 0
      000AD1 00                    3072 	.db #0x00	; 0
      000AD2 00                    3073 	.db #0x00	; 0
      000AD3 10                    3074 	.db #0x10	; 16
      000AD4 10                    3075 	.db #0x10	; 16
      000AD5 38                    3076 	.db #0x38	; 56	'8'
      000AD6 38                    3077 	.db #0x38	; 56	'8'
      000AD7 3E                    3078 	.db #0x3e	; 62
      000AD8 3E                    3079 	.db #0x3e	; 62
      000AD9 18                    3080 	.db #0x18	; 24
      000ADA 18                    3081 	.db #0x18	; 24
      000ADB 00                    3082 	.db #0x00	; 0
      000ADC 00                    3083 	.db #0x00	; 0
      000ADD 00                    3084 	.db #0x00	; 0
      000ADE 00                    3085 	.db #0x00	; 0
      000ADF 00                    3086 	.db #0x00	; 0
      000AE0 00                    3087 	.db #0x00	; 0
      000AE1 00                    3088 	.db #0x00	; 0
      000AE2 00                    3089 	.db #0x00	; 0
      000AE3 00                    3090 	.db #0x00	; 0
      000AE4 00                    3091 	.db #0x00	; 0
      000AE5 00                    3092 	.db #0x00	; 0
      000AE6 00                    3093 	.db #0x00	; 0
      000AE7 00                    3094 	.db #0x00	; 0
      000AE8 00                    3095 	.db #0x00	; 0
      000AE9 00                    3096 	.db #0x00	; 0
      000AEA 00                    3097 	.db #0x00	; 0
      000AEB 00                    3098 	.db #0x00	; 0
      000AEC 00                    3099 	.db #0x00	; 0
      000AED 00                    3100 	.db #0x00	; 0
      000AEE 00                    3101 	.db #0x00	; 0
      000AEF 00                    3102 	.db #0x00	; 0
      000AF0 00                    3103 	.db #0x00	; 0
      000AF1 00                    3104 	.db #0x00	; 0
      000AF2 00                    3105 	.db #0x00	; 0
      000AF3 00                    3106 	.db #0x00	; 0
      000AF4 00                    3107 	.db #0x00	; 0
      000AF5 1C                    3108 	.db #0x1c	; 28
      000AF6 1C                    3109 	.db #0x1c	; 28
      000AF7 7C                    3110 	.db #0x7c	; 124
      000AF8 7C                    3111 	.db #0x7c	; 124
      000AF9 1C                    3112 	.db #0x1c	; 28
      000AFA 1C                    3113 	.db #0x1c	; 28
      000AFB 08                    3114 	.db #0x08	; 8
      000AFC 08                    3115 	.db #0x08	; 8
      000AFD 00                    3116 	.db #0x00	; 0
      000AFE 00                    3117 	.db #0x00	; 0
      000AFF 00                    3118 	.db #0x00	; 0
      000B00 00                    3119 	.db #0x00	; 0
      000B01 00                    3120 	.db #0x00	; 0
      000B02 00                    3121 	.db #0x00	; 0
      000B03 00                    3122 	.db #0x00	; 0
      000B04 00                    3123 	.db #0x00	; 0
      000B05 00                    3124 	.db #0x00	; 0
      000B06 00                    3125 	.db #0x00	; 0
      000B07 00                    3126 	.db #0x00	; 0
      000B08 00                    3127 	.db #0x00	; 0
      000B09 00                    3128 	.db #0x00	; 0
      000B0A 00                    3129 	.db #0x00	; 0
      000B0B 00                    3130 	.db #0x00	; 0
      000B0C 00                    3131 	.db #0x00	; 0
      000B0D 00                    3132 	.db #0x00	; 0
      000B0E 00                    3133 	.db #0x00	; 0
      000B0F 00                    3134 	.db #0x00	; 0
      000B10 00                    3135 	.db #0x00	; 0
      000B11 00                    3136 	.db #0x00	; 0
      000B12 00                    3137 	.db #0x00	; 0
      000B13 00                    3138 	.db #0x00	; 0
      000B14 00                    3139 	.db #0x00	; 0
      000B15 28                    3140 	.db #0x28	; 40
      000B16 28                    3141 	.db #0x28	; 40
      000B17 30                    3142 	.db #0x30	; 48	'0'
      000B18 30                    3143 	.db #0x30	; 48	'0'
      000B19 38                    3144 	.db #0x38	; 56	'8'
      000B1A 38                    3145 	.db #0x38	; 56	'8'
      000B1B 10                    3146 	.db #0x10	; 16
      000B1C 10                    3147 	.db #0x10	; 16
      000B1D 00                    3148 	.db #0x00	; 0
      000B1E 00                    3149 	.db #0x00	; 0
      000B1F 00                    3150 	.db #0x00	; 0
      000B20 00                    3151 	.db #0x00	; 0
      000B21 00                    3152 	.db #0x00	; 0
      000B22 00                    3153 	.db #0x00	; 0
      000B23 00                    3154 	.db #0x00	; 0
      000B24 00                    3155 	.db #0x00	; 0
      000B25 00                    3156 	.db #0x00	; 0
      000B26 00                    3157 	.db #0x00	; 0
      000B27 00                    3158 	.db #0x00	; 0
      000B28 00                    3159 	.db #0x00	; 0
      000B29 00                    3160 	.db #0x00	; 0
      000B2A 00                    3161 	.db #0x00	; 0
      000B2B 00                    3162 	.db #0x00	; 0
      000B2C 00                    3163 	.db #0x00	; 0
      000B2D 00                    3164 	.db #0x00	; 0
      000B2E 00                    3165 	.db #0x00	; 0
      000B2F 00                    3166 	.db #0x00	; 0
      000B30 00                    3167 	.db #0x00	; 0
      000B31 00                    3168 	.db #0x00	; 0
      000B32 00                    3169 	.db #0x00	; 0
      000B33 00                    3170 	.db #0x00	; 0
      000B34 00                    3171 	.db #0x00	; 0
      000B35 04                    3172 	.db #0x04	; 4
      000B36 04                    3173 	.db #0x04	; 4
      000B37 0E                    3174 	.db #0x0e	; 14
      000B38 0E                    3175 	.db #0x0e	; 14
      000B39 0E                    3176 	.db #0x0e	; 14
      000B3A 0E                    3177 	.db #0x0e	; 14
      000B3B 00                    3178 	.db #0x00	; 0
      000B3C 00                    3179 	.db #0x00	; 0
      000B3D 00                    3180 	.db #0x00	; 0
      000B3E 00                    3181 	.db #0x00	; 0
      000B3F 00                    3182 	.db #0x00	; 0
      000B40 00                    3183 	.db #0x00	; 0
      000B41 00                    3184 	.db #0x00	; 0
      000B42 00                    3185 	.db #0x00	; 0
      000B43 00                    3186 	.db #0x00	; 0
      000B44 00                    3187 	.db #0x00	; 0
      000B45 00                    3188 	.db #0x00	; 0
      000B46 00                    3189 	.db #0x00	; 0
      000B47 00                    3190 	.db #0x00	; 0
      000B48 00                    3191 	.db #0x00	; 0
      000B49 00                    3192 	.db #0x00	; 0
      000B4A 00                    3193 	.db #0x00	; 0
      000B4B 00                    3194 	.db #0x00	; 0
      000B4C 00                    3195 	.db #0x00	; 0
      000B4D 00                    3196 	.db #0x00	; 0
      000B4E 00                    3197 	.db #0x00	; 0
      000B4F 00                    3198 	.db #0x00	; 0
      000B50 00                    3199 	.db #0x00	; 0
      000B51 00                    3200 	.db #0x00	; 0
      000B52 00                    3201 	.db #0x00	; 0
      000B53 00                    3202 	.db #0x00	; 0
      000B54 00                    3203 	.db #0x00	; 0
      000B55 00                    3204 	.db #0x00	; 0
      000B56 00                    3205 	.db #0x00	; 0
      000B57 60                    3206 	.db #0x60	; 96
      000B58 60                    3207 	.db #0x60	; 96
      000B59 40                    3208 	.db #0x40	; 64
      000B5A 40                    3209 	.db #0x40	; 64
      000B5B 00                    3210 	.db #0x00	; 0
      000B5C 00                    3211 	.db #0x00	; 0
      000B5D 00                    3212 	.db #0x00	; 0
      000B5E 00                    3213 	.db #0x00	; 0
      000B5F 00                    3214 	.db #0x00	; 0
      000B60 00                    3215 	.db #0x00	; 0
      000B61 00                    3216 	.db #0x00	; 0
      000B62 00                    3217 	.db #0x00	; 0
      000B63 00                    3218 	.db #0x00	; 0
      000B64 00                    3219 	.db #0x00	; 0
      000B65 00                    3220 	.db #0x00	; 0
      000B66 00                    3221 	.db #0x00	; 0
      000B67 00                    3222 	.db #0x00	; 0
      000B68 00                    3223 	.db #0x00	; 0
      000B69 00                    3224 	.db #0x00	; 0
      000B6A 00                    3225 	.db #0x00	; 0
      000B6B 00                    3226 	.db #0x00	; 0
      000B6C 00                    3227 	.db #0x00	; 0
      000B6D 00                    3228 	.db #0x00	; 0
      000B6E 00                    3229 	.db #0x00	; 0
      000B6F 00                    3230 	.db #0x00	; 0
      000B70 00                    3231 	.db #0x00	; 0
      000B71 00                    3232 	.db #0x00	; 0
      000B72 00                    3233 	.db #0x00	; 0
      000B73 00                    3234 	.db #0x00	; 0
      000B74 00                    3235 	.db #0x00	; 0
      000B75 00                    3236 	.db #0x00	; 0
      000B76 00                    3237 	.db #0x00	; 0
      000B77 02                    3238 	.db #0x02	; 2
      000B78 02                    3239 	.db #0x02	; 2
      000B79 02                    3240 	.db #0x02	; 2
      000B7A 02                    3241 	.db #0x02	; 2
      000B7B 00                    3242 	.db #0x00	; 0
      000B7C 00                    3243 	.db #0x00	; 0
      000B7D 00                    3244 	.db #0x00	; 0
      000B7E 00                    3245 	.db #0x00	; 0
      000B7F 00                    3246 	.db #0x00	; 0
      000B80 00                    3247 	.db #0x00	; 0
      000B81 00                    3248 	.db #0x00	; 0
      000B82 00                    3249 	.db #0x00	; 0
      000B83 00                    3250 	.db #0x00	; 0
      000B84 00                    3251 	.db #0x00	; 0
      000B85 00                    3252 	.db #0x00	; 0
      000B86 00                    3253 	.db #0x00	; 0
      000B87 00                    3254 	.db #0x00	; 0
      000B88 00                    3255 	.db #0x00	; 0
      000B89                       3256 _MenuPicker:
      000B89 3C                    3257 	.db #0x3c	; 60
      000B8A 3C                    3258 	.db #0x3c	; 60
      000B8B 7E                    3259 	.db #0x7e	; 126
      000B8C 7E                    3260 	.db #0x7e	; 126
      000B8D FF                    3261 	.db #0xff	; 255
      000B8E FF                    3262 	.db #0xff	; 255
      000B8F FF                    3263 	.db #0xff	; 255
      000B90 FF                    3264 	.db #0xff	; 255
      000B91 FF                    3265 	.db #0xff	; 255
      000B92 FF                    3266 	.db #0xff	; 255
      000B93 FF                    3267 	.db #0xff	; 255
      000B94 FF                    3268 	.db #0xff	; 255
      000B95 7E                    3269 	.db #0x7e	; 126
      000B96 7E                    3270 	.db #0x7e	; 126
      000B97 3C                    3271 	.db #0x3c	; 60
      000B98 3C                    3272 	.db #0x3c	; 60
      000B99 00                    3273 	.db #0x00	; 0
      000B9A 00                    3274 	.db #0x00	; 0
      000B9B 00                    3275 	.db #0x00	; 0
      000B9C 00                    3276 	.db #0x00	; 0
      000B9D 00                    3277 	.db #0x00	; 0
      000B9E 00                    3278 	.db #0x00	; 0
      000B9F 00                    3279 	.db #0x00	; 0
      000BA0 00                    3280 	.db #0x00	; 0
      000BA1 00                    3281 	.db #0x00	; 0
      000BA2 00                    3282 	.db #0x00	; 0
      000BA3 00                    3283 	.db #0x00	; 0
      000BA4 00                    3284 	.db #0x00	; 0
      000BA5 00                    3285 	.db #0x00	; 0
      000BA6 00                    3286 	.db #0x00	; 0
      000BA7 00                    3287 	.db #0x00	; 0
      000BA8 00                    3288 	.db #0x00	; 0
      000BA9                       3289 _BLANKSIZE:
      000BA9 03                    3290 	.db #0x03	; 3
      000BAA                       3291 _BLANK:
      000BAA 26                    3292 	.db #0x26	; 38
      000BAB 2B                    3293 	.db #0x2b	; 43
      000BAC 2C                    3294 	.db #0x2c	; 44
      000BAD                       3295 _EMPTYSPRITE:
      000BAD 50                    3296 	.db #0x50	; 80	'P'
      000BAE                       3297 _ENEMYCOUNT:
      000BAE 05                    3298 	.db #0x05	; 5
      000BAF                       3299 _xSpawnPositions:
      000BAF 00                    3300 	.db #0x00	; 0
      000BB0 60                    3301 	.db #0x60	; 96
      000BB1 B0                    3302 	.db #0xb0	; 176
      000BB2 00                    3303 	.db #0x00	; 0
      000BB3 B0                    3304 	.db #0xb0	; 176
      000BB4 00                    3305 	.db #0x00	; 0
      000BB5 60                    3306 	.db #0x60	; 96
      000BB6 B0                    3307 	.db #0xb0	; 176
      000BB7                       3308 _ySpawnPositions:
      000BB7 00                    3309 	.db #0x00	; 0
      000BB8 00                    3310 	.db #0x00	; 0
      000BB9 00                    3311 	.db #0x00	; 0
      000BBA 5C                    3312 	.db #0x5c	; 92
      000BBB 5C                    3313 	.db #0x5c	; 92
      000BBC A0                    3314 	.db #0xa0	; 160
      000BBD A0                    3315 	.db #0xa0	; 160
      000BBE A0                    3316 	.db #0xa0	; 160
      000BBF                       3317 _PROJECTILECOUNT:
      000BBF 05                    3318 	.db #0x05	; 5
      000BC0                       3319 _PLAYERSIZE:
      000BC0 10                    3320 	.db #0x10	; 16
      000BC1                       3321 _maxHull:
      000BC1 64                    3322 	.db #0x64	;  100	'd'
      000BC2                       3323 _maxShield:
      000BC2 64                    3324 	.db #0x64	;  100	'd'
      000BC3                       3325 _MAXGUNLEVEL:
      000BC3 01                    3326 	.db #0x01	; 1
      000BC4                       3327 _SPLASHDROPOFF:
      000BC4 01                    3328 	.db #0x01	; 1
      000BC5                       3329 _exCount:
      000BC5 04                    3330 	.db #0x04	; 4
      000BC6                       3331 _EXPLFRAMETIME:
      000BC6 04                    3332 	.db #0x04	; 4
      000BC7                       3333 _exTileCount:
      000BC7 03                    3334 	.db #0x03	; 3
      000BC8                       3335 _AUXTICKFREQUENCY:
      000BC8 01                    3336 	.db #0x01	; 1
                                   3337 ;src/main.c:158: void setHealthBar(uint8_t row, uint8_t hp) {
                                   3338 ;	---------------------------------
                                   3339 ; Function setHealthBar
                                   3340 ; ---------------------------------
      000BC9                       3341 _setHealthBar::
      000BC9 E8 FB                 3342 	add	sp, #-5
                                   3343 ;src/main.c:160: if (hp >= 80) {
      000BCB F8 08                 3344 	ldhl	sp,	#8
      000BCD 7E                    3345 	ld	a, (hl)
      000BCE D6 50                 3346 	sub	a, #0x50
      000BD0 38 31                 3347 	jr	C, 00102$
                                   3348 ;src/main.c:161: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000BD2 F8 00                 3349 	ldhl	sp,	#0
      000BD4 4D                    3350 	ld	c, l
      000BD5 44                    3351 	ld	b, h
      000BD6 36 50                 3352 	ld	(hl), #0x50
      000BD8 69                    3353 	ld	l, c
                                   3354 ;	spillPairReg hl
                                   3355 ;	spillPairReg hl
      000BD9 60                    3356 	ld	h, b
                                   3357 ;	spillPairReg hl
                                   3358 ;	spillPairReg hl
      000BDA 23                    3359 	inc	hl
      000BDB 36 50                 3360 	ld	(hl), #0x50
      000BDD 69                    3361 	ld	l, c
                                   3362 ;	spillPairReg hl
                                   3363 ;	spillPairReg hl
      000BDE 60                    3364 	ld	h, b
                                   3365 ;	spillPairReg hl
                                   3366 ;	spillPairReg hl
      000BDF 23                    3367 	inc	hl
      000BE0 23                    3368 	inc	hl
      000BE1 36 50                 3369 	ld	(hl), #0x50
      000BE3 69                    3370 	ld	l, c
                                   3371 ;	spillPairReg hl
                                   3372 ;	spillPairReg hl
      000BE4 60                    3373 	ld	h, b
                                   3374 ;	spillPairReg hl
                                   3375 ;	spillPairReg hl
      000BE5 23                    3376 	inc	hl
      000BE6 23                    3377 	inc	hl
      000BE7 23                    3378 	inc	hl
      000BE8 36 50                 3379 	ld	(hl), #0x50
      000BEA 21 04 00              3380 	ld	hl, #0x0004
      000BED 09                    3381 	add	hl, bc
      000BEE 36 50                 3382 	ld	(hl), #0x50
                                   3383 ;src/main.c:162: set_win_tiles(5,row,5,1,blockmap);
      000BF0 C5                    3384 	push	bc
      000BF1 21 05 01              3385 	ld	hl, #0x105
      000BF4 E5                    3386 	push	hl
      000BF5 F8 0B                 3387 	ldhl	sp,	#11
      000BF7 66                    3388 	ld	h, (hl)
      000BF8 2E 05                 3389 	ld	l, #0x05
      000BFA E5                    3390 	push	hl
      000BFB CDr00r00              3391 	call	_set_win_tiles
      000BFE E8 06                 3392 	add	sp, #6
                                   3393 ;src/main.c:163: return;
      000C00 C3rD7r0C              3394 	jp	00109$
      000C03                       3395 00102$:
                                   3396 ;src/main.c:165: if (hp >= 60) {
      000C03 F8 08                 3397 	ldhl	sp,	#8
      000C05 7E                    3398 	ld	a, (hl)
      000C06 D6 3C                 3399 	sub	a, #0x3c
      000C08 38 31                 3400 	jr	C, 00104$
                                   3401 ;src/main.c:166: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000C0A F8 00                 3402 	ldhl	sp,	#0
      000C0C 4D                    3403 	ld	c, l
      000C0D 44                    3404 	ld	b, h
      000C0E 36 50                 3405 	ld	(hl), #0x50
      000C10 69                    3406 	ld	l, c
                                   3407 ;	spillPairReg hl
                                   3408 ;	spillPairReg hl
      000C11 60                    3409 	ld	h, b
                                   3410 ;	spillPairReg hl
                                   3411 ;	spillPairReg hl
      000C12 23                    3412 	inc	hl
      000C13 36 50                 3413 	ld	(hl), #0x50
      000C15 69                    3414 	ld	l, c
                                   3415 ;	spillPairReg hl
                                   3416 ;	spillPairReg hl
      000C16 60                    3417 	ld	h, b
                                   3418 ;	spillPairReg hl
                                   3419 ;	spillPairReg hl
      000C17 23                    3420 	inc	hl
      000C18 23                    3421 	inc	hl
      000C19 36 50                 3422 	ld	(hl), #0x50
      000C1B 69                    3423 	ld	l, c
                                   3424 ;	spillPairReg hl
                                   3425 ;	spillPairReg hl
      000C1C 60                    3426 	ld	h, b
                                   3427 ;	spillPairReg hl
                                   3428 ;	spillPairReg hl
      000C1D 23                    3429 	inc	hl
      000C1E 23                    3430 	inc	hl
      000C1F 23                    3431 	inc	hl
      000C20 36 50                 3432 	ld	(hl), #0x50
      000C22 21 04 00              3433 	ld	hl, #0x0004
      000C25 09                    3434 	add	hl, bc
      000C26 36 00                 3435 	ld	(hl), #0x00
                                   3436 ;src/main.c:167: set_win_tiles(5,row,5,1,blockmap);
      000C28 C5                    3437 	push	bc
      000C29 21 05 01              3438 	ld	hl, #0x105
      000C2C E5                    3439 	push	hl
      000C2D F8 0B                 3440 	ldhl	sp,	#11
      000C2F 66                    3441 	ld	h, (hl)
      000C30 2E 05                 3442 	ld	l, #0x05
      000C32 E5                    3443 	push	hl
      000C33 CDr00r00              3444 	call	_set_win_tiles
      000C36 E8 06                 3445 	add	sp, #6
                                   3446 ;src/main.c:168: return;
      000C38 C3rD7r0C              3447 	jp	00109$
      000C3B                       3448 00104$:
                                   3449 ;src/main.c:170: if (hp >= 40) {
      000C3B F8 08                 3450 	ldhl	sp,	#8
      000C3D 7E                    3451 	ld	a, (hl)
      000C3E D6 28                 3452 	sub	a, #0x28
      000C40 38 30                 3453 	jr	C, 00106$
                                   3454 ;src/main.c:171: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000C42 F8 00                 3455 	ldhl	sp,	#0
      000C44 4D                    3456 	ld	c, l
      000C45 44                    3457 	ld	b, h
      000C46 36 50                 3458 	ld	(hl), #0x50
      000C48 69                    3459 	ld	l, c
                                   3460 ;	spillPairReg hl
                                   3461 ;	spillPairReg hl
      000C49 60                    3462 	ld	h, b
                                   3463 ;	spillPairReg hl
                                   3464 ;	spillPairReg hl
      000C4A 23                    3465 	inc	hl
      000C4B 36 50                 3466 	ld	(hl), #0x50
      000C4D 69                    3467 	ld	l, c
                                   3468 ;	spillPairReg hl
                                   3469 ;	spillPairReg hl
      000C4E 60                    3470 	ld	h, b
                                   3471 ;	spillPairReg hl
                                   3472 ;	spillPairReg hl
      000C4F 23                    3473 	inc	hl
      000C50 23                    3474 	inc	hl
      000C51 36 50                 3475 	ld	(hl), #0x50
      000C53 59                    3476 	ld	e, c
      000C54 50                    3477 	ld	d, b
      000C55 13                    3478 	inc	de
      000C56 13                    3479 	inc	de
      000C57 13                    3480 	inc	de
      000C58 AF                    3481 	xor	a, a
      000C59 12                    3482 	ld	(de), a
      000C5A 21 04 00              3483 	ld	hl, #0x0004
      000C5D 09                    3484 	add	hl, bc
      000C5E 36 00                 3485 	ld	(hl), #0x00
                                   3486 ;src/main.c:172: set_win_tiles(5,row,5,1,blockmap);
      000C60 C5                    3487 	push	bc
      000C61 21 05 01              3488 	ld	hl, #0x105
      000C64 E5                    3489 	push	hl
      000C65 F8 0B                 3490 	ldhl	sp,	#11
      000C67 66                    3491 	ld	h, (hl)
      000C68 2E 05                 3492 	ld	l, #0x05
      000C6A E5                    3493 	push	hl
      000C6B CDr00r00              3494 	call	_set_win_tiles
      000C6E E8 06                 3495 	add	sp, #6
                                   3496 ;src/main.c:173: return;
      000C70 18 65                 3497 	jr	00109$
      000C72                       3498 00106$:
                                   3499 ;src/main.c:175: if (hp >= 20) {
      000C72 F8 08                 3500 	ldhl	sp,	#8
      000C74 7E                    3501 	ld	a, (hl)
      000C75 D6 14                 3502 	sub	a, #0x14
      000C77 38 30                 3503 	jr	C, 00108$
                                   3504 ;src/main.c:176: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000C79 F8 00                 3505 	ldhl	sp,	#0
      000C7B 4D                    3506 	ld	c, l
      000C7C 44                    3507 	ld	b, h
      000C7D 36 50                 3508 	ld	(hl), #0x50
      000C7F 69                    3509 	ld	l, c
                                   3510 ;	spillPairReg hl
                                   3511 ;	spillPairReg hl
      000C80 60                    3512 	ld	h, b
                                   3513 ;	spillPairReg hl
                                   3514 ;	spillPairReg hl
      000C81 23                    3515 	inc	hl
      000C82 36 50                 3516 	ld	(hl), #0x50
      000C84 59                    3517 	ld	e, c
      000C85 50                    3518 	ld	d, b
      000C86 13                    3519 	inc	de
      000C87 13                    3520 	inc	de
      000C88 AF                    3521 	xor	a, a
      000C89 12                    3522 	ld	(de), a
      000C8A 59                    3523 	ld	e, c
      000C8B 50                    3524 	ld	d, b
      000C8C 13                    3525 	inc	de
      000C8D 13                    3526 	inc	de
      000C8E 13                    3527 	inc	de
      000C8F AF                    3528 	xor	a, a
      000C90 12                    3529 	ld	(de), a
      000C91 21 04 00              3530 	ld	hl, #0x0004
      000C94 09                    3531 	add	hl, bc
      000C95 36 00                 3532 	ld	(hl), #0x00
                                   3533 ;src/main.c:177: set_win_tiles(5,row,5,1,blockmap);
      000C97 C5                    3534 	push	bc
      000C98 21 05 01              3535 	ld	hl, #0x105
      000C9B E5                    3536 	push	hl
      000C9C F8 0B                 3537 	ldhl	sp,	#11
      000C9E 66                    3538 	ld	h, (hl)
      000C9F 2E 05                 3539 	ld	l, #0x05
      000CA1 E5                    3540 	push	hl
      000CA2 CDr00r00              3541 	call	_set_win_tiles
      000CA5 E8 06                 3542 	add	sp, #6
                                   3543 ;src/main.c:178: return;
      000CA7 18 2E                 3544 	jr	00109$
      000CA9                       3545 00108$:
                                   3546 ;src/main.c:180: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000CA9 F8 00                 3547 	ldhl	sp,	#0
      000CAB 4D                    3548 	ld	c, l
      000CAC 44                    3549 	ld	b, h
      000CAD 36 50                 3550 	ld	(hl), #0x50
      000CAF 59                    3551 	ld	e, c
      000CB0 50                    3552 	ld	d, b
      000CB1 13                    3553 	inc	de
      000CB2 AF                    3554 	xor	a, a
      000CB3 12                    3555 	ld	(de), a
      000CB4 59                    3556 	ld	e, c
      000CB5 50                    3557 	ld	d, b
      000CB6 13                    3558 	inc	de
      000CB7 13                    3559 	inc	de
      000CB8 AF                    3560 	xor	a, a
      000CB9 12                    3561 	ld	(de), a
      000CBA 59                    3562 	ld	e, c
      000CBB 50                    3563 	ld	d, b
      000CBC 13                    3564 	inc	de
      000CBD 13                    3565 	inc	de
      000CBE 13                    3566 	inc	de
      000CBF AF                    3567 	xor	a, a
      000CC0 12                    3568 	ld	(de), a
      000CC1 21 04 00              3569 	ld	hl, #0x0004
      000CC4 09                    3570 	add	hl, bc
      000CC5 36 00                 3571 	ld	(hl), #0x00
                                   3572 ;src/main.c:181: set_win_tiles(5,row,5,1,blockmap);
      000CC7 C5                    3573 	push	bc
      000CC8 21 05 01              3574 	ld	hl, #0x105
      000CCB E5                    3575 	push	hl
      000CCC F8 0B                 3576 	ldhl	sp,	#11
      000CCE 66                    3577 	ld	h, (hl)
      000CCF 2E 05                 3578 	ld	l, #0x05
      000CD1 E5                    3579 	push	hl
      000CD2 CDr00r00              3580 	call	_set_win_tiles
      000CD5 E8 06                 3581 	add	sp, #6
                                   3582 ;src/main.c:182: return;
      000CD7                       3583 00109$:
                                   3584 ;src/main.c:184: }
      000CD7 E8 05                 3585 	add	sp, #5
      000CD9 C9                    3586 	ret
                                   3587 ;src/main.c:186: void updateScore() {
                                   3588 ;	---------------------------------
                                   3589 ; Function updateScore
                                   3590 ; ---------------------------------
      000CDA                       3591 _updateScore::
      000CDA E8 F6                 3592 	add	sp, #-10
                                   3593 ;src/main.c:190: len = bcd2text(&SCORE, 0x01, buf);
      000CDC F8 00                 3594 	ldhl	sp,	#0
      000CDE 4D                    3595 	ld	c, l
      000CDF 44                    3596 	ld	b, h
      000CE0 59                    3597 	ld	e, c
      000CE1 50                    3598 	ld	d, b
      000CE2 C5                    3599 	push	bc
      000CE3 D5                    3600 	push	de
      000CE4 3E 01                 3601 	ld	a, #0x01
      000CE6 F5                    3602 	push	af
      000CE7 33                    3603 	inc	sp
      000CE8 11rFBr00              3604 	ld	de, #_SCORE
      000CEB D5                    3605 	push	de
      000CEC CDr00r00              3606 	call	_bcd2text
      000CEF E8 05                 3607 	add	sp, #5
      000CF1 C1                    3608 	pop	bc
                                   3609 ;src/main.c:191: set_win_tiles(15, 1, 5, 1, buf+3);
      000CF2 03                    3610 	inc	bc
      000CF3 03                    3611 	inc	bc
      000CF4 03                    3612 	inc	bc
      000CF5 C5                    3613 	push	bc
      000CF6 21 05 01              3614 	ld	hl, #0x105
      000CF9 E5                    3615 	push	hl
      000CFA 21 0F 01              3616 	ld	hl, #0x10f
      000CFD E5                    3617 	push	hl
      000CFE CDr00r00              3618 	call	_set_win_tiles
                                   3619 ;src/main.c:192: }
      000D01 E8 10                 3620 	add	sp, #16
      000D03 C9                    3621 	ret
                                   3622 ;src/main.c:194: void updateMissileCount(int8_t amount) {
                                   3623 ;	---------------------------------
                                   3624 ; Function updateMissileCount
                                   3625 ; ---------------------------------
      000D04                       3626 _updateMissileCount::
      000D04 E8 F6                 3627 	add	sp, #-10
                                   3628 ;src/main.c:195: if (amount == -1) {
      000D06 F8 0C                 3629 	ldhl	sp,	#12
      000D08 7E                    3630 	ld	a, (hl)
      000D09 3C                    3631 	inc	a
      000D0A 20 13                 3632 	jr	NZ, 00112$
                                   3633 ;src/main.c:196: missiles--;
      000D0C 21rF0r00              3634 	ld	hl, #_missiles
      000D0F 35                    3635 	dec	(hl)
                                   3636 ;src/main.c:197: bcd_sub(&MISSILES, &INCREMENT);
      000D10 11rFFr00              3637 	ld	de, #_INCREMENT
      000D13 D5                    3638 	push	de
      000D14 11rF1r00              3639 	ld	de, #_MISSILES
      000D17 D5                    3640 	push	de
      000D18 CDr00r00              3641 	call	_bcd_sub
      000D1B E8 04                 3642 	add	sp, #4
      000D1D 18 30                 3643 	jr	00104$
                                   3644 ;src/main.c:200: for(int8_t i=0; i<amount;i++) {
      000D1F                       3645 00112$:
      000D1F 0E 00                 3646 	ld	c, #0x00
      000D21                       3647 00106$:
      000D21 F8 0C                 3648 	ldhl	sp,	#12
      000D23 5E                    3649 	ld	e, (hl)
      000D24 79                    3650 	ld	a,c
      000D25 57                    3651 	ld	d,a
      000D26 96                    3652 	sub	a, (hl)
      000D27 CB 7B                 3653 	bit	7, e
      000D29 28 07                 3654 	jr	Z, 00128$
      000D2B CB 7A                 3655 	bit	7, d
      000D2D 20 08                 3656 	jr	NZ, 00129$
      000D2F BF                    3657 	cp	a, a
      000D30 18 05                 3658 	jr	00129$
      000D32                       3659 00128$:
      000D32 CB 7A                 3660 	bit	7, d
      000D34 28 01                 3661 	jr	Z, 00129$
      000D36 37                    3662 	scf
      000D37                       3663 00129$:
      000D37 30 16                 3664 	jr	NC, 00104$
                                   3665 ;src/main.c:201: ++missiles;
      000D39 21rF0r00              3666 	ld	hl, #_missiles
      000D3C 34                    3667 	inc	(hl)
                                   3668 ;src/main.c:202: bcd_add(&MISSILES, &INCREMENT);
      000D3D C5                    3669 	push	bc
      000D3E 11rFFr00              3670 	ld	de, #_INCREMENT
      000D41 D5                    3671 	push	de
      000D42 11rF1r00              3672 	ld	de, #_MISSILES
      000D45 D5                    3673 	push	de
      000D46 CDr00r00              3674 	call	_bcd_add
      000D49 E8 04                 3675 	add	sp, #4
      000D4B C1                    3676 	pop	bc
                                   3677 ;src/main.c:200: for(int8_t i=0; i<amount;i++) {
      000D4C 0C                    3678 	inc	c
      000D4D 18 D2                 3679 	jr	00106$
      000D4F                       3680 00104$:
                                   3681 ;src/main.c:207: len = bcd2text(&MISSILES, 0x01, buf);
      000D4F F8 00                 3682 	ldhl	sp,	#0
      000D51 4D                    3683 	ld	c, l
      000D52 44                    3684 	ld	b, h
      000D53 59                    3685 	ld	e, c
      000D54 50                    3686 	ld	d, b
      000D55 C5                    3687 	push	bc
      000D56 D5                    3688 	push	de
      000D57 3E 01                 3689 	ld	a, #0x01
      000D59 F5                    3690 	push	af
      000D5A 33                    3691 	inc	sp
      000D5B 11rF1r00              3692 	ld	de, #_MISSILES
      000D5E D5                    3693 	push	de
      000D5F CDr00r00              3694 	call	_bcd2text
      000D62 E8 05                 3695 	add	sp, #5
      000D64 C1                    3696 	pop	bc
                                   3697 ;src/main.c:208: set_win_tiles(18, 0, 2, 1, buf+6);
      000D65 21 06 00              3698 	ld	hl, #0x0006
      000D68 09                    3699 	add	hl, bc
      000D69 E5                    3700 	push	hl
      000D6A 21 02 01              3701 	ld	hl, #0x102
      000D6D E5                    3702 	push	hl
      000D6E 21 12 00              3703 	ld	hl, #0x12
      000D71 E5                    3704 	push	hl
      000D72 CDr00r00              3705 	call	_set_win_tiles
                                   3706 ;src/main.c:210: }
      000D75 E8 10                 3707 	add	sp, #16
      000D77 C9                    3708 	ret
                                   3709 ;src/main.c:212: void incrementScore() {
                                   3710 ;	---------------------------------
                                   3711 ; Function incrementScore
                                   3712 ; ---------------------------------
      000D78                       3713 _incrementScore::
                                   3714 ;src/main.c:213: score += 1;
      000D78 21rF9r00              3715 	ld	hl, #_score
      000D7B 2A                    3716 	ld	a, (hl+)
      000D7C 4F                    3717 	ld	c, a
      000D7D 3A                    3718 	ld	a, (hl-)
      000D7E 47                    3719 	ld	b, a
      000D7F 03                    3720 	inc	bc
      000D80 79                    3721 	ld	a, c
      000D81 22                    3722 	ld	(hl+), a
      000D82 70                    3723 	ld	(hl), b
                                   3724 ;src/main.c:214: bcd_add(&SCORE, &INCREMENT);
      000D83 11rFFr00              3725 	ld	de, #_INCREMENT
      000D86 D5                    3726 	push	de
      000D87 11rFBr00              3727 	ld	de, #_SCORE
      000D8A D5                    3728 	push	de
      000D8B CDr00r00              3729 	call	_bcd_add
      000D8E E8 04                 3730 	add	sp, #4
                                   3731 ;src/main.c:215: }
      000D90 C9                    3732 	ret
                                   3733 ;src/main.c:217: void updateDirection() {
                                   3734 ;	---------------------------------
                                   3735 ; Function updateDirection
                                   3736 ; ---------------------------------
      000D91                       3737 _updateDirection::
      000D91 E8 FC                 3738 	add	sp, #-4
                                   3739 ;src/main.c:221: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000D93 21rF5r00              3740 	ld	hl, #_joydata
      000D96 5E                    3741 	ld	e, (hl)
      000D97 7B                    3742 	ld	a, e
      000D98 E6 01                 3743 	and	a, #0x01
      000D9A F8 00                 3744 	ldhl	sp,	#0
      000D9C 22                    3745 	ld	(hl+), a
      000D9D AF                    3746 	xor	a, a
      000D9E 22                    3747 	ld	(hl+), a
      000D9F 7B                    3748 	ld	a, e
      000DA0 E6 04                 3749 	and	a, #0x04
      000DA2 22                    3750 	ld	(hl+), a
      000DA3 AF                    3751 	xor	a, a
      000DA4 32                    3752 	ld	(hl-), a
      000DA5 2B                    3753 	dec	hl
      000DA6 7B                    3754 	ld	a, e
      000DA7 E6 08                 3755 	and	a, #0x08
      000DA9 4F                    3756 	ld	c, a
      000DAA 06 00                 3757 	ld	b, #0x00
      000DAC 3A                    3758 	ld	a, (hl-)
      000DAD B6                    3759 	or	a, (hl)
      000DAE 28 14                 3760 	jr	Z, 00102$
      000DB0 F8 03                 3761 	ldhl	sp,	#3
      000DB2 3A                    3762 	ld	a, (hl-)
      000DB3 B6                    3763 	or	a, (hl)
      000DB4 20 0E                 3764 	jr	NZ, 00102$
      000DB6 78                    3765 	ld	a, b
      000DB7 B1                    3766 	or	a, c
      000DB8 20 0A                 3767 	jr	NZ, 00102$
                                   3768 ;src/main.c:222: xDir = 1;
      000DBA 21rDBr00              3769 	ld	hl, #_xDir
      000DBD 36 01                 3770 	ld	(hl), #0x01
                                   3771 ;src/main.c:223: yDir = 0;
      000DBF 21rDCr00              3772 	ld	hl, #_yDir
      000DC2 36 00                 3773 	ld	(hl), #0x00
      000DC4                       3774 00102$:
                                   3775 ;src/main.c:225: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000DC4 7B                    3776 	ld	a, e
      000DC5 E6 02                 3777 	and	a, #0x02
      000DC7 5F                    3778 	ld	e, a
      000DC8 16 00                 3779 	ld	d, #0x00
      000DCA 7A                    3780 	ld	a, d
      000DCB B3                    3781 	or	a, e
      000DCC 28 14                 3782 	jr	Z, 00106$
      000DCE F8 03                 3783 	ldhl	sp,	#3
      000DD0 3A                    3784 	ld	a, (hl-)
      000DD1 B6                    3785 	or	a, (hl)
      000DD2 20 0E                 3786 	jr	NZ, 00106$
      000DD4 78                    3787 	ld	a, b
      000DD5 B1                    3788 	or	a, c
      000DD6 20 0A                 3789 	jr	NZ, 00106$
                                   3790 ;src/main.c:226: xDir = -1;
      000DD8 21rDBr00              3791 	ld	hl, #_xDir
      000DDB 36 FF                 3792 	ld	(hl), #0xff
                                   3793 ;src/main.c:227: yDir = 0;
      000DDD 21rDCr00              3794 	ld	hl, #_yDir
      000DE0 36 00                 3795 	ld	(hl), #0x00
      000DE2                       3796 00106$:
                                   3797 ;src/main.c:229: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DE2 F8 03                 3798 	ldhl	sp,	#3
      000DE4 3A                    3799 	ld	a, (hl-)
      000DE5 B6                    3800 	or	a, (hl)
      000DE6 28 13                 3801 	jr	Z, 00110$
      000DE8 7A                    3802 	ld	a, d
      000DE9 B3                    3803 	or	a, e
      000DEA 20 0F                 3804 	jr	NZ, 00110$
      000DEC 2B                    3805 	dec	hl
      000DED 3A                    3806 	ld	a, (hl-)
      000DEE B6                    3807 	or	a, (hl)
      000DEF 20 0A                 3808 	jr	NZ, 00110$
                                   3809 ;src/main.c:230: xDir = 0;
      000DF1 21rDBr00              3810 	ld	hl, #_xDir
      000DF4 36 00                 3811 	ld	(hl), #0x00
                                   3812 ;src/main.c:231: yDir = -1;
      000DF6 21rDCr00              3813 	ld	hl, #_yDir
      000DF9 36 FF                 3814 	ld	(hl), #0xff
      000DFB                       3815 00110$:
                                   3816 ;src/main.c:233: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DFB 78                    3817 	ld	a, b
      000DFC B1                    3818 	or	a, c
      000DFD 28 14                 3819 	jr	Z, 00114$
      000DFF 7A                    3820 	ld	a, d
      000E00 B3                    3821 	or	a, e
      000E01 20 10                 3822 	jr	NZ, 00114$
      000E03 F8 01                 3823 	ldhl	sp,	#1
      000E05 3A                    3824 	ld	a, (hl-)
      000E06 B6                    3825 	or	a, (hl)
      000E07 20 0A                 3826 	jr	NZ, 00114$
                                   3827 ;src/main.c:234: xDir = 0;
      000E09 21rDBr00              3828 	ld	hl, #_xDir
      000E0C 36 00                 3829 	ld	(hl), #0x00
                                   3830 ;src/main.c:235: yDir = 1;
      000E0E 21rDCr00              3831 	ld	hl, #_yDir
      000E11 36 01                 3832 	ld	(hl), #0x01
      000E13                       3833 00114$:
                                   3834 ;src/main.c:239: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000E13 F8 03                 3835 	ldhl	sp,	#3
      000E15 3A                    3836 	ld	a, (hl-)
      000E16 B6                    3837 	or	a, (hl)
      000E17 28 0F                 3838 	jr	Z, 00118$
      000E19 2B                    3839 	dec	hl
      000E1A 3A                    3840 	ld	a, (hl-)
      000E1B B6                    3841 	or	a, (hl)
      000E1C 28 0A                 3842 	jr	Z, 00118$
                                   3843 ;src/main.c:240: xDir = 1;
      000E1E 21rDBr00              3844 	ld	hl, #_xDir
      000E21 36 01                 3845 	ld	(hl), #0x01
                                   3846 ;src/main.c:241: yDir = -1;
      000E23 21rDCr00              3847 	ld	hl, #_yDir
      000E26 36 FF                 3848 	ld	(hl), #0xff
      000E28                       3849 00118$:
                                   3850 ;src/main.c:243: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000E28 F8 03                 3851 	ldhl	sp,	#3
      000E2A 3A                    3852 	ld	a, (hl-)
      000E2B B6                    3853 	or	a, (hl)
      000E2C 28 0E                 3854 	jr	Z, 00121$
      000E2E 7A                    3855 	ld	a, d
      000E2F B3                    3856 	or	a, e
      000E30 28 0A                 3857 	jr	Z, 00121$
                                   3858 ;src/main.c:244: xDir = -1;
      000E32 21rDBr00              3859 	ld	hl, #_xDir
      000E35 36 FF                 3860 	ld	(hl), #0xff
                                   3861 ;src/main.c:245: yDir = -1;
      000E37 21rDCr00              3862 	ld	hl, #_yDir
      000E3A 36 FF                 3863 	ld	(hl), #0xff
      000E3C                       3864 00121$:
                                   3865 ;src/main.c:247: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000E3C 78                    3866 	ld	a, b
      000E3D B1                    3867 	or	a, c
      000E3E 28 10                 3868 	jr	Z, 00124$
      000E40 F8 01                 3869 	ldhl	sp,	#1
      000E42 3A                    3870 	ld	a, (hl-)
      000E43 B6                    3871 	or	a, (hl)
      000E44 28 0A                 3872 	jr	Z, 00124$
                                   3873 ;src/main.c:248: xDir = 1;
      000E46 21rDBr00              3874 	ld	hl, #_xDir
      000E49 36 01                 3875 	ld	(hl), #0x01
                                   3876 ;src/main.c:249: yDir = 1;
      000E4B 21rDCr00              3877 	ld	hl, #_yDir
      000E4E 36 01                 3878 	ld	(hl), #0x01
      000E50                       3879 00124$:
                                   3880 ;src/main.c:251: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000E50 78                    3881 	ld	a, b
      000E51 B1                    3882 	or	a, c
      000E52 28 0E                 3883 	jr	Z, 00127$
      000E54 7A                    3884 	ld	a, d
      000E55 B3                    3885 	or	a, e
      000E56 28 0A                 3886 	jr	Z, 00127$
                                   3887 ;src/main.c:252: xDir = -1;
      000E58 21rDBr00              3888 	ld	hl, #_xDir
      000E5B 36 FF                 3889 	ld	(hl), #0xff
                                   3890 ;src/main.c:253: yDir = 1;
      000E5D 21rDCr00              3891 	ld	hl, #_yDir
      000E60 36 01                 3892 	ld	(hl), #0x01
      000E62                       3893 00127$:
                                   3894 ;src/main.c:258: if (xDir == 0 && yDir == 0) {
      000E62 FArDBr00              3895 	ld	a, (#_xDir)
      000E65 B7                    3896 	or	a, a
      000E66 20 07                 3897 	jr	NZ, 00130$
      000E68 FArDCr00              3898 	ld	a, (#_yDir)
      000E6B B7                    3899 	or	a, a
                                   3900 ;src/main.c:259: return;
      000E6C CArB3r0F              3901 	jp	Z,00194$
      000E6F                       3902 00130$:
                                   3903 ;src/main.c:291: if (auxTick == 0) {
      000E6F FAr07r01              3904 	ld	a, (#_auxTick)
      000E72 B7                    3905 	or	a, a
      000E73 C2rB3r0F              3906 	jp	NZ, 00194$
                                   3907 ;src/main.c:292: if (xDir == 0 && yDir > 0) {
      000E76 21rDCr00              3908 	ld	hl, #_yDir
      000E79 5E                    3909 	ld	e, (hl)
      000E7A AF                    3910 	xor	a, a
      000E7B 57                    3911 	ld	d, a
      000E7C 96                    3912 	sub	a, (hl)
      000E7D CB 7B                 3913 	bit	7, e
      000E7F 28 07                 3914 	jr	Z, 00381$
      000E81 CB 7A                 3915 	bit	7, d
      000E83 20 08                 3916 	jr	NZ, 00382$
      000E85 BF                    3917 	cp	a, a
      000E86 18 05                 3918 	jr	00382$
      000E88                       3919 00381$:
      000E88 CB 7A                 3920 	bit	7, d
      000E8A 28 01                 3921 	jr	Z, 00382$
      000E8C 37                    3922 	scf
      000E8D                       3923 00382$:
      000E8D 3E 00                 3924 	ld	a, #0x00
      000E8F 17                    3925 	rla
      000E90 4F                    3926 	ld	c, a
      000E91 FArDBr00              3927 	ld	a, (#_xDir)
      000E94 B7                    3928 	or	a,a
      000E95 20 1A                 3929 	jr	NZ, 00157$
      000E97 B1                    3930 	or	a,c
      000E98 28 17                 3931 	jr	Z, 00157$
                                   3932 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E9A 21r02r00              3933 	ld	hl, #(_shadow_OAM + 2)
      000E9D 36 00                 3934 	ld	(hl), #0x00
      000E9F 21r06r00              3935 	ld	hl, #(_shadow_OAM + 6)
      000EA2 36 02                 3936 	ld	(hl), #0x02
                                   3937 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EA4 21r03r00              3938 	ld	hl, #(_shadow_OAM + 3)
      000EA7 36 40                 3939 	ld	(hl), #0x40
      000EA9 21r07r00              3940 	ld	hl, #(_shadow_OAM + 7)
      000EAC 36 40                 3941 	ld	(hl), #0x40
                                   3942 ;src/main.c:296: set_sprite_prop(1, S_FLIPY); 
      000EAE C3rB3r0F              3943 	jp	00194$
      000EB1                       3944 00157$:
                                   3945 ;src/main.c:298: else if (xDir == 0 && yDir < 0) {
      000EB1 FArDCr00              3946 	ld	a, (#_yDir)
      000EB4 07                    3947 	rlca
      000EB5 E6 01                 3948 	and	a,#0x01
      000EB7 F8 02                 3949 	ldhl	sp,	#2
      000EB9 77                    3950 	ld	(hl), a
      000EBA FArDBr00              3951 	ld	a, (#_xDir)
      000EBD B7                    3952 	or	a, a
      000EBE 20 1D                 3953 	jr	NZ, 00153$
      000EC0 F8 02                 3954 	ldhl	sp,	#2
      000EC2 7E                    3955 	ld	a, (hl)
      000EC3 B7                    3956 	or	a, a
      000EC4 28 17                 3957 	jr	Z, 00153$
                                   3958 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000EC6 21r02r00              3959 	ld	hl, #(_shadow_OAM + 2)
      000EC9 36 00                 3960 	ld	(hl), #0x00
      000ECB 21r06r00              3961 	ld	hl, #(_shadow_OAM + 6)
      000ECE 36 02                 3962 	ld	(hl), #0x02
                                   3963 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000ED0 21r03r00              3964 	ld	hl, #(_shadow_OAM + 3)
      000ED3 36 00                 3965 	ld	(hl), #0x00
      000ED5 21r07r00              3966 	ld	hl, #(_shadow_OAM + 7)
      000ED8 36 00                 3967 	ld	(hl), #0x00
                                   3968 ;src/main.c:302: set_sprite_prop(1, 0); 
      000EDA C3rB3r0F              3969 	jp	00194$
      000EDD                       3970 00153$:
                                   3971 ;src/main.c:304: else if (xDir > 0 && yDir == 0) {
      000EDD 21rDBr00              3972 	ld	hl, #_xDir
      000EE0 5E                    3973 	ld	e, (hl)
      000EE1 AF                    3974 	xor	a, a
      000EE2 57                    3975 	ld	d, a
      000EE3 96                    3976 	sub	a, (hl)
      000EE4 CB 7B                 3977 	bit	7, e
      000EE6 28 07                 3978 	jr	Z, 00383$
      000EE8 CB 7A                 3979 	bit	7, d
      000EEA 20 08                 3980 	jr	NZ, 00384$
      000EEC BF                    3981 	cp	a, a
      000EED 18 05                 3982 	jr	00384$
      000EEF                       3983 00383$:
      000EEF CB 7A                 3984 	bit	7, d
      000EF1 28 01                 3985 	jr	Z, 00384$
      000EF3 37                    3986 	scf
      000EF4                       3987 00384$:
      000EF4 3E 00                 3988 	ld	a, #0x00
      000EF6 17                    3989 	rla
      000EF7 47                    3990 	ld	b, a
      000EF8 B7                    3991 	or	a, a
      000EF9 28 1D                 3992 	jr	Z, 00149$
      000EFB FArDCr00              3993 	ld	a, (#_yDir)
      000EFE B7                    3994 	or	a, a
      000EFF 20 17                 3995 	jr	NZ, 00149$
                                   3996 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F01 21r02r00              3997 	ld	hl, #(_shadow_OAM + 2)
      000F04 36 04                 3998 	ld	(hl), #0x04
      000F06 21r06r00              3999 	ld	hl, #(_shadow_OAM + 6)
      000F09 36 06                 4000 	ld	(hl), #0x06
                                   4001 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F0B 21r03r00              4002 	ld	hl, #(_shadow_OAM + 3)
      000F0E 36 00                 4003 	ld	(hl), #0x00
      000F10 21r07r00              4004 	ld	hl, #(_shadow_OAM + 7)
      000F13 36 00                 4005 	ld	(hl), #0x00
                                   4006 ;src/main.c:308: set_sprite_prop(1, 0); 
      000F15 C3rB3r0F              4007 	jp	00194$
      000F18                       4008 00149$:
                                   4009 ;src/main.c:310: else if (xDir < 0 && yDir == 0) {
      000F18 FArDBr00              4010 	ld	a, (#_xDir)
      000F1B 07                    4011 	rlca
      000F1C E6 01                 4012 	and	a,#0x01
      000F1E F8 03                 4013 	ldhl	sp,	#3
      000F20 77                    4014 	ld	(hl), a
      000F21 7E                    4015 	ld	a, (hl)
      000F22 B7                    4016 	or	a, a
      000F23 28 1C                 4017 	jr	Z, 00145$
      000F25 FArDCr00              4018 	ld	a, (#_yDir)
      000F28 B7                    4019 	or	a, a
      000F29 20 16                 4020 	jr	NZ, 00145$
                                   4021 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F2B 21r02r00              4022 	ld	hl, #(_shadow_OAM + 2)
      000F2E 36 04                 4023 	ld	(hl), #0x04
      000F30 21r06r00              4024 	ld	hl, #(_shadow_OAM + 6)
      000F33 36 06                 4025 	ld	(hl), #0x06
                                   4026 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F35 21r03r00              4027 	ld	hl, #(_shadow_OAM + 3)
      000F38 36 20                 4028 	ld	(hl), #0x20
      000F3A 21r07r00              4029 	ld	hl, #(_shadow_OAM + 7)
      000F3D 36 20                 4030 	ld	(hl), #0x20
                                   4031 ;src/main.c:314: set_sprite_prop(1, S_FLIPX); 
      000F3F 18 72                 4032 	jr	00194$
      000F41                       4033 00145$:
                                   4034 ;src/main.c:316: else if (xDir > 0 && yDir < 0) {
      000F41 78                    4035 	ld	a, b
      000F42 B7                    4036 	or	a, a
      000F43 28 1C                 4037 	jr	Z, 00141$
      000F45 F8 02                 4038 	ldhl	sp,	#2
      000F47 7E                    4039 	ld	a, (hl)
      000F48 B7                    4040 	or	a, a
      000F49 28 16                 4041 	jr	Z, 00141$
                                   4042 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F4B 21r02r00              4043 	ld	hl, #(_shadow_OAM + 2)
      000F4E 36 08                 4044 	ld	(hl), #0x08
      000F50 21r06r00              4045 	ld	hl, #(_shadow_OAM + 6)
      000F53 36 0A                 4046 	ld	(hl), #0x0a
                                   4047 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F55 21r03r00              4048 	ld	hl, #(_shadow_OAM + 3)
      000F58 36 00                 4049 	ld	(hl), #0x00
      000F5A 21r07r00              4050 	ld	hl, #(_shadow_OAM + 7)
      000F5D 36 00                 4051 	ld	(hl), #0x00
                                   4052 ;src/main.c:320: set_sprite_prop(1, 0); 
      000F5F 18 52                 4053 	jr	00194$
      000F61                       4054 00141$:
                                   4055 ;src/main.c:322: else if (xDir > 0 && yDir > 0) {
      000F61 78                    4056 	ld	a, b
      000F62 B7                    4057 	or	a, a
      000F63 28 1A                 4058 	jr	Z, 00137$
      000F65 79                    4059 	ld	a, c
      000F66 B7                    4060 	or	a, a
      000F67 28 16                 4061 	jr	Z, 00137$
                                   4062 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F69 21r02r00              4063 	ld	hl, #(_shadow_OAM + 2)
      000F6C 36 08                 4064 	ld	(hl), #0x08
      000F6E 21r06r00              4065 	ld	hl, #(_shadow_OAM + 6)
      000F71 36 0A                 4066 	ld	(hl), #0x0a
                                   4067 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F73 21r03r00              4068 	ld	hl, #(_shadow_OAM + 3)
      000F76 36 40                 4069 	ld	(hl), #0x40
      000F78 21r07r00              4070 	ld	hl, #(_shadow_OAM + 7)
      000F7B 36 40                 4071 	ld	(hl), #0x40
                                   4072 ;src/main.c:326: set_sprite_prop(1, S_FLIPY); 
      000F7D 18 34                 4073 	jr	00194$
      000F7F                       4074 00137$:
                                   4075 ;src/main.c:328: else if (xDir < 0 && yDir > 0) {
      000F7F F8 03                 4076 	ldhl	sp,	#3
      000F81 7E                    4077 	ld	a, (hl)
      000F82 B7                    4078 	or	a, a
      000F83 28 1A                 4079 	jr	Z, 00133$
      000F85 79                    4080 	ld	a, c
      000F86 B7                    4081 	or	a, a
      000F87 28 16                 4082 	jr	Z, 00133$
                                   4083 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F89 21r02r00              4084 	ld	hl, #(_shadow_OAM + 2)
      000F8C 36 08                 4085 	ld	(hl), #0x08
      000F8E 21r06r00              4086 	ld	hl, #(_shadow_OAM + 6)
      000F91 36 0A                 4087 	ld	(hl), #0x0a
                                   4088 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F93 21r03r00              4089 	ld	hl, #(_shadow_OAM + 3)
      000F96 36 60                 4090 	ld	(hl), #0x60
      000F98 21r07r00              4091 	ld	hl, #(_shadow_OAM + 7)
      000F9B 36 60                 4092 	ld	(hl), #0x60
                                   4093 ;src/main.c:332: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000F9D 18 14                 4094 	jr	00194$
      000F9F                       4095 00133$:
                                   4096 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F9F 21r02r00              4097 	ld	hl, #(_shadow_OAM + 2)
      000FA2 36 08                 4098 	ld	(hl), #0x08
      000FA4 21r06r00              4099 	ld	hl, #(_shadow_OAM + 6)
      000FA7 36 0A                 4100 	ld	(hl), #0x0a
                                   4101 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000FA9 21r03r00              4102 	ld	hl, #(_shadow_OAM + 3)
      000FAC 36 20                 4103 	ld	(hl), #0x20
      000FAE 21r07r00              4104 	ld	hl, #(_shadow_OAM + 7)
      000FB1 36 20                 4105 	ld	(hl), #0x20
                                   4106 ;src/main.c:338: set_sprite_prop(1, S_FLIPX); 
      000FB3                       4107 00194$:
                                   4108 ;src/main.c:343: }
      000FB3 E8 04                 4109 	add	sp, #4
      000FB5 C9                    4110 	ret
                                   4111 ;src/main.c:377: void playSound(uint8_t type) {
                                   4112 ;	---------------------------------
                                   4113 ; Function playSound
                                   4114 ; ---------------------------------
      000FB6                       4115 _playSound::
                                   4116 ;src/main.c:378: if (type == 20) { //singlegun
      000FB6 F8 02                 4117 	ldhl	sp,	#2
      000FB8 7E                    4118 	ld	a, (hl)
      000FB9 D6 14                 4119 	sub	a, #0x14
      000FBB 20 13                 4120 	jr	NZ, 00102$
                                   4121 ;src/main.c:379: NR10_REG = 0x00;
      000FBD AF                    4122 	xor	a, a
      000FBE E0r00                 4123 	ldh	(_NR10_REG + 0), a
                                   4124 ;src/main.c:380: NR11_REG = 0x81;
      000FC0 3E 81                 4125 	ld	a, #0x81
      000FC2 E0r00                 4126 	ldh	(_NR11_REG + 0), a
                                   4127 ;src/main.c:381: NR12_REG = 0x43;
      000FC4 3E 43                 4128 	ld	a, #0x43
      000FC6 E0r00                 4129 	ldh	(_NR12_REG + 0), a
                                   4130 ;src/main.c:382: NR13_REG = 0X00;//0x6D;
      000FC8 AF                    4131 	xor	a, a
      000FC9 E0r00                 4132 	ldh	(_NR13_REG + 0), a
                                   4133 ;src/main.c:383: NR14_REG = 0x86;
      000FCB 3E 86                 4134 	ld	a, #0x86
      000FCD E0r00                 4135 	ldh	(_NR14_REG + 0), a
                                   4136 ;src/main.c:384: return;
      000FCF C9                    4137 	ret
      000FD0                       4138 00102$:
                                   4139 ;src/main.c:386: if (type == 23) {
      000FD0 F8 02                 4140 	ldhl	sp,	#2
      000FD2 7E                    4141 	ld	a, (hl)
      000FD3 D6 17                 4142 	sub	a, #0x17
      000FD5 20 12                 4143 	jr	NZ, 00104$
                                   4144 ;src/main.c:387: NR10_REG = 0x00;
      000FD7 AF                    4145 	xor	a, a
      000FD8 E0r00                 4146 	ldh	(_NR10_REG + 0), a
                                   4147 ;src/main.c:388: NR11_REG = 0x81;
      000FDA 3E 81                 4148 	ld	a, #0x81
      000FDC E0r00                 4149 	ldh	(_NR11_REG + 0), a
                                   4150 ;src/main.c:389: NR12_REG = 0x53;
      000FDE 3E 53                 4151 	ld	a, #0x53
      000FE0 E0r00                 4152 	ldh	(_NR12_REG + 0), a
                                   4153 ;src/main.c:390: NR13_REG = 0X00;//0x6D;
      000FE2 AF                    4154 	xor	a, a
      000FE3 E0r00                 4155 	ldh	(_NR13_REG + 0), a
                                   4156 ;src/main.c:391: NR14_REG = 0x86;
      000FE5 3E 86                 4157 	ld	a, #0x86
      000FE7 E0r00                 4158 	ldh	(_NR14_REG + 0), a
      000FE9                       4159 00104$:
                                   4160 ;src/main.c:393: if (type == 26) {
      000FE9 F8 02                 4161 	ldhl	sp,	#2
      000FEB 7E                    4162 	ld	a, (hl)
      000FEC D6 1A                 4163 	sub	a, #0x1a
      000FEE 20 13                 4164 	jr	NZ, 00106$
                                   4165 ;src/main.c:394: NR10_REG = 0x00;
      000FF0 AF                    4166 	xor	a, a
      000FF1 E0r00                 4167 	ldh	(_NR10_REG + 0), a
                                   4168 ;src/main.c:395: NR11_REG = 0x89;
      000FF3 3E 89                 4169 	ld	a, #0x89
      000FF5 E0r00                 4170 	ldh	(_NR11_REG + 0), a
                                   4171 ;src/main.c:396: NR12_REG = 0x55;
      000FF7 3E 55                 4172 	ld	a, #0x55
      000FF9 E0r00                 4173 	ldh	(_NR12_REG + 0), a
                                   4174 ;src/main.c:397: NR13_REG = 0x70;//0Xbe;//0x6D;
      000FFB 3E 70                 4175 	ld	a, #0x70
      000FFD E0r00                 4176 	ldh	(_NR13_REG + 0), a
                                   4177 ;src/main.c:398: NR14_REG = 0x84;
      000FFF 3E 84                 4178 	ld	a, #0x84
      001001 E0r00                 4179 	ldh	(_NR14_REG + 0), a
      001003                       4180 00106$:
                                   4181 ;src/main.c:400: if (type == 0) {  // explosion
      001003 F8 02                 4182 	ldhl	sp,	#2
      001005 7E                    4183 	ld	a, (hl)
      001006 B7                    4184 	or	a, a
      001007 C0                    4185 	ret	NZ
                                   4186 ;src/main.c:401: NR41_REG = 0x20;  
      001008 3E 20                 4187 	ld	a, #0x20
      00100A E0r00                 4188 	ldh	(_NR41_REG + 0), a
                                   4189 ;src/main.c:402: NR42_REG = 0xa2;//0xa3;  
      00100C 3E A2                 4190 	ld	a, #0xa2
      00100E E0r00                 4191 	ldh	(_NR42_REG + 0), a
                                   4192 ;src/main.c:403: NR43_REG = 0x57;  
      001010 3E 57                 4193 	ld	a, #0x57
      001012 E0r00                 4194 	ldh	(_NR43_REG + 0), a
                                   4195 ;src/main.c:404: NR44_REG = 0x80;  
      001014 3E 80                 4196 	ld	a, #0x80
      001016 E0r00                 4197 	ldh	(_NR44_REG + 0), a
                                   4198 ;src/main.c:410: }
      001018 C9                    4199 	ret
                                   4200 ;src/main.c:412: void initEnemies(uint8_t loadSprites) {
                                   4201 ;	---------------------------------
                                   4202 ; Function initEnemies
                                   4203 ; ---------------------------------
      001019                       4204 _initEnemies::
      001019 E8 F9                 4205 	add	sp, #-7
                                   4206 ;src/main.c:414: if (loadSprites) {
      00101B F8 09                 4207 	ldhl	sp,	#9
      00101D 7E                    4208 	ld	a, (hl)
      00101E B7                    4209 	or	a, a
      00101F 28 1A                 4210 	jr	Z, 00102$
                                   4211 ;src/main.c:416: set_sprite_data(0x40, 5, enemy1);
      001021 11r18r05              4212 	ld	de, #_enemy1
      001024 D5                    4213 	push	de
      001025 21 40 05              4214 	ld	hl, #0x540
      001028 E5                    4215 	push	hl
      001029 CDr00r00              4216 	call	_set_sprite_data
      00102C E8 04                 4217 	add	sp, #4
                                   4218 ;src/main.c:417: set_sprite_data(0x50, 8, largeenemies);
      00102E 11r68r05              4219 	ld	de, #_largeenemies
      001031 D5                    4220 	push	de
      001032 21 50 08              4221 	ld	hl, #0x850
      001035 E5                    4222 	push	hl
      001036 CDr00r00              4223 	call	_set_sprite_data
      001039 E8 04                 4224 	add	sp, #4
      00103B                       4225 00102$:
                                   4226 ;src/main.c:420: struct Enemy *eptr = enemies;
      00103B 01r5Ar00              4227 	ld	bc, #_enemies+0
                                   4228 ;src/main.c:422: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00103E F8 06                 4229 	ldhl	sp,	#6
      001040 36 00                 4230 	ld	(hl), #0x00
      001042                       4231 00116$:
      001042 21rAEr0B              4232 	ld	hl, #_ENEMYCOUNT
      001045 5E                    4233 	ld	e, (hl)
      001046 F8 06                 4234 	ldhl	sp,	#6
      001048 7E                    4235 	ld	a, (hl)
      001049 93                    4236 	sub	a, e
      00104A D2r81r11              4237 	jp	NC, 00118$
                                   4238 ;src/main.c:423: if (eptr->alive == 0) {
      00104D 21 09 00              4239 	ld	hl, #0x0009
      001050 09                    4240 	add	hl, bc
      001051 7E                    4241 	ld	a, (hl)
      001052 B7                    4242 	or	a, a
      001053 C2r75r11              4243 	jp	NZ, 00107$
                                   4244 ;src/main.c:425: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001056 C5                    4245 	push	bc
      001057 CDr00r00              4246 	call	_rand
      00105A 7B                    4247 	ld	a, e
      00105B C1                    4248 	pop	bc
      00105C 21r17r05              4249 	ld	hl, #_enemyOptionCount
      00105F 56                    4250 	ld	d, (hl)
      001060 C5                    4251 	push	bc
      001061 D5                    4252 	push	de
      001062 33                    4253 	inc	sp
      001063 F5                    4254 	push	af
      001064 33                    4255 	inc	sp
      001065 CDr00r00              4256 	call	__moduchar
      001068 E1                    4257 	pop	hl
      001069 7B                    4258 	ld	a, e
      00106A C1                    4259 	pop	bc
                                   4260 ;src/main.c:427: (*eptr) = enemyOptions[enemyInd];
      00106B 5F                    4261 	ld	e, a
      00106C 16 00                 4262 	ld	d, #0x00
      00106E 6B                    4263 	ld	l, e
      00106F 62                    4264 	ld	h, d
      001070 29                    4265 	add	hl, hl
      001071 29                    4266 	add	hl, hl
      001072 29                    4267 	add	hl, hl
      001073 19                    4268 	add	hl, de
      001074 29                    4269 	add	hl, hl
      001075 11r00r00              4270 	ld	de, #_enemyOptions
      001078 19                    4271 	add	hl, de
      001079 59                    4272 	ld	e, c
      00107A 50                    4273 	ld	d, b
      00107B C5                    4274 	push	bc
      00107C 01 12 00              4275 	ld	bc, #0x12
      00107F C5                    4276 	push	bc
      001080 E5                    4277 	push	hl
      001081 D5                    4278 	push	de
      001082 CDr00r00              4279 	call	___memcpy
      001085 E8 06                 4280 	add	sp, #6
      001087 CDr00r00              4281 	call	_rand
      00108A 7B                    4282 	ld	a, e
      00108B C1                    4283 	pop	bc
      00108C E6 07                 4284 	and	a, #0x07
      00108E F8 05                 4285 	ldhl	sp,	#5
      001090 77                    4286 	ld	(hl), a
                                   4287 ;src/main.c:430: eptr->x = xSpawnPositions[posIndex];
      001091 11rAFr0B              4288 	ld	de, #_xSpawnPositions
      001094 6E                    4289 	ld	l, (hl)
      001095 26 00                 4290 	ld	h, #0x00
      001097 19                    4291 	add	hl, de
      001098 5D                    4292 	ld	e, l
      001099 54                    4293 	ld	d, h
      00109A 1A                    4294 	ld	a, (de)
      00109B 5F                    4295 	ld	e, a
      00109C 16 00                 4296 	ld	d, #0x00
      00109E 69                    4297 	ld	l, c
      00109F 60                    4298 	ld	h, b
      0010A0 7B                    4299 	ld	a, e
      0010A1 22                    4300 	ld	(hl+), a
      0010A2 72                    4301 	ld	(hl), d
                                   4302 ;src/main.c:431: eptr->y = ySpawnPositions[posIndex];
      0010A3 21 02 00              4303 	ld	hl, #0x0002
      0010A6 09                    4304 	add	hl, bc
      0010A7 33                    4305 	inc	sp
      0010A8 33                    4306 	inc	sp
      0010A9 E5                    4307 	push	hl
      0010AA 11rB7r0B              4308 	ld	de, #_ySpawnPositions
      0010AD F8 05                 4309 	ldhl	sp,	#5
      0010AF 6E                    4310 	ld	l, (hl)
      0010B0 26 00                 4311 	ld	h, #0x00
      0010B2 19                    4312 	add	hl, de
      0010B3 5D                    4313 	ld	e, l
      0010B4 54                    4314 	ld	d, h
      0010B5 1A                    4315 	ld	a, (de)
      0010B6 F8 04                 4316 	ldhl	sp,	#4
      0010B8 22                    4317 	ld	(hl+), a
      0010B9 AF                    4318 	xor	a, a
      0010BA 32                    4319 	ld	(hl-), a
      0010BB D1                    4320 	pop	de
      0010BC D5                    4321 	push	de
      0010BD 2A                    4322 	ld	a, (hl+)
      0010BE 12                    4323 	ld	(de), a
      0010BF 13                    4324 	inc	de
      0010C0 7E                    4325 	ld	a, (hl)
      0010C1 12                    4326 	ld	(de), a
                                   4327 ;src/main.c:433: if (eptr->spriteCount == 1) {
      0010C2 21 08 00              4328 	ld	hl, #0x0008
      0010C5 09                    4329 	add	hl, bc
      0010C6 7E                    4330 	ld	a, (hl)
      0010C7 F8 05                 4331 	ldhl	sp,	#5
      0010C9 77                    4332 	ld	(hl), a
                                   4333 ;src/main.c:434: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010CA 21 06 00              4334 	ld	hl, #0x0006
      0010CD 09                    4335 	add	hl, bc
      0010CE 5D                    4336 	ld	e, l
      0010CF 54                    4337 	ld	d, h
      0010D0 F8 06                 4338 	ldhl	sp,	#6
      0010D2 6E                    4339 	ld	l, (hl)
                                   4340 ;	spillPairReg hl
                                   4341 ;	spillPairReg hl
      0010D3 1A                    4342 	ld	a, (de)
      0010D4 5F                    4343 	ld	e, a
      0010D5 7D                    4344 	ld	a, l
      0010D6 87                    4345 	add	a, a
      0010D7 F8 02                 4346 	ldhl	sp,	#2
      0010D9 77                    4347 	ld	(hl), a
      0010DA 2A                    4348 	ld	a, (hl+)
      0010DB C6 0A                 4349 	add	a, #0x0a
                                   4350 ;src/main.c:433: if (eptr->spriteCount == 1) {
      0010DD 22                    4351 	ld	(hl+), a
      0010DE 23                    4352 	inc	hl
      0010DF 7E                    4353 	ld	a, (hl)
      0010E0 3D                    4354 	dec	a
      0010E1 20 2D                 4355 	jr	NZ, 00104$
                                   4356 ;src/main.c:434: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010E3 F8 03                 4357 	ldhl	sp,	#3
      0010E5 56                    4358 	ld	d, (hl)
                                   4359 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010E6 6A                    4360 	ld	l, d
                                   4361 ;	spillPairReg hl
                                   4362 ;	spillPairReg hl
      0010E7 26 00                 4363 	ld	h, #0x00
                                   4364 ;	spillPairReg hl
                                   4365 ;	spillPairReg hl
      0010E9 29                    4366 	add	hl, hl
      0010EA 29                    4367 	add	hl, hl
      0010EB D5                    4368 	push	de
      0010EC 11r00r00              4369 	ld	de, #_shadow_OAM
      0010EF 19                    4370 	add	hl, de
      0010F0 23                    4371 	inc	hl
      0010F1 23                    4372 	inc	hl
      0010F2 D1                    4373 	pop	de
      0010F3 73                    4374 	ld	(hl), e
                                   4375 ;src/main.c:435: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010F4 D1                    4376 	pop	de
      0010F5 D5                    4377 	push	de
      0010F6 1A                    4378 	ld	a, (de)
      0010F7 F8 05                 4379 	ldhl	sp,	#5
      0010F9 32                    4380 	ld	(hl-), a
      0010FA 0A                    4381 	ld	a, (bc)
      0010FB 32                    4382 	ld	(hl-), a
                                   4383 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0010FC 6E                    4384 	ld	l, (hl)
                                   4385 ;	spillPairReg hl
                                   4386 ;	spillPairReg hl
      0010FD 26 00                 4387 	ld	h, #0x00
                                   4388 ;	spillPairReg hl
                                   4389 ;	spillPairReg hl
      0010FF 29                    4390 	add	hl, hl
      001100 29                    4391 	add	hl, hl
      001101 11r00r00              4392 	ld	de, #_shadow_OAM
      001104 19                    4393 	add	hl, de
      001105 5D                    4394 	ld	e, l
      001106 54                    4395 	ld	d, h
                                   4396 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001107 F8 05                 4397 	ldhl	sp,	#5
      001109 3A                    4398 	ld	a, (hl-)
      00110A 12                    4399 	ld	(de), a
      00110B 13                    4400 	inc	de
      00110C 7E                    4401 	ld	a, (hl)
      00110D 12                    4402 	ld	(de), a
                                   4403 ;src/main.c:435: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      00110E 18 65                 4404 	jr	00107$
      001110                       4405 00104$:
                                   4406 ;src/main.c:438: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      001110 F8 03                 4407 	ldhl	sp,	#3
      001112 56                    4408 	ld	d, (hl)
                                   4409 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001113 6A                    4410 	ld	l, d
                                   4411 ;	spillPairReg hl
                                   4412 ;	spillPairReg hl
      001114 26 00                 4413 	ld	h, #0x00
                                   4414 ;	spillPairReg hl
                                   4415 ;	spillPairReg hl
      001116 29                    4416 	add	hl, hl
      001117 29                    4417 	add	hl, hl
      001118 D5                    4418 	push	de
      001119 11r00r00              4419 	ld	de, #_shadow_OAM
      00111C 19                    4420 	add	hl, de
      00111D 23                    4421 	inc	hl
      00111E 23                    4422 	inc	hl
      00111F D1                    4423 	pop	de
      001120 73                    4424 	ld	(hl), e
                                   4425 ;src/main.c:439: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001121 D1                    4426 	pop	de
      001122 D5                    4427 	push	de
      001123 1A                    4428 	ld	a, (de)
      001124 F8 04                 4429 	ldhl	sp,	#4
      001126 22                    4430 	ld	(hl+), a
      001127 0A                    4431 	ld	a, (bc)
      001128 32                    4432 	ld	(hl-), a
      001129 2B                    4433 	dec	hl
      00112A 5E                    4434 	ld	e, (hl)
                                   4435 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00112B 26 00                 4436 	ld	h, #0x00
                                   4437 ;	spillPairReg hl
                                   4438 ;	spillPairReg hl
      00112D 6B                    4439 	ld	l, e
      00112E 29                    4440 	add	hl, hl
      00112F 29                    4441 	add	hl, hl
      001130 11r00r00              4442 	ld	de, #_shadow_OAM
      001133 19                    4443 	add	hl, de
      001134 5D                    4444 	ld	e, l
      001135 54                    4445 	ld	d, h
                                   4446 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001136 F8 04                 4447 	ldhl	sp,	#4
      001138 2A                    4448 	ld	a, (hl+)
      001139 12                    4449 	ld	(de), a
      00113A 13                    4450 	inc	de
      00113B 7E                    4451 	ld	a, (hl)
      00113C 12                    4452 	ld	(de), a
                                   4453 ;src/main.c:441: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      00113D 21 07 00              4454 	ld	hl, #0x0007
      001140 09                    4455 	add	hl, bc
      001141 5E                    4456 	ld	e, (hl)
      001142 F8 02                 4457 	ldhl	sp,	#2
      001144 7E                    4458 	ld	a, (hl)
      001145 C6 0B                 4459 	add	a, #0x0b
      001147 F8 05                 4460 	ldhl	sp,	#5
      001149 77                    4461 	ld	(hl), a
      00114A 56                    4462 	ld	d, (hl)
                                   4463 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00114B 6A                    4464 	ld	l, d
                                   4465 ;	spillPairReg hl
                                   4466 ;	spillPairReg hl
      00114C 26 00                 4467 	ld	h, #0x00
                                   4468 ;	spillPairReg hl
                                   4469 ;	spillPairReg hl
      00114E 29                    4470 	add	hl, hl
      00114F 29                    4471 	add	hl, hl
      001150 D5                    4472 	push	de
      001151 11r00r00              4473 	ld	de, #_shadow_OAM
      001154 19                    4474 	add	hl, de
      001155 23                    4475 	inc	hl
      001156 23                    4476 	inc	hl
      001157 D1                    4477 	pop	de
      001158 73                    4478 	ld	(hl), e
                                   4479 ;src/main.c:442: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001159 D1                    4480 	pop	de
      00115A D5                    4481 	push	de
      00115B 1A                    4482 	ld	a, (de)
      00115C F8 04                 4483 	ldhl	sp,	#4
      00115E 32                    4484 	ld	(hl-), a
      00115F 0A                    4485 	ld	a, (bc)
      001160 22                    4486 	ld	(hl+), a
      001161 23                    4487 	inc	hl
      001162 5E                    4488 	ld	e, (hl)
                                   4489 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001163 26 00                 4490 	ld	h, #0x00
                                   4491 ;	spillPairReg hl
                                   4492 ;	spillPairReg hl
      001165 6B                    4493 	ld	l, e
      001166 29                    4494 	add	hl, hl
      001167 29                    4495 	add	hl, hl
      001168 11r00r00              4496 	ld	de, #_shadow_OAM
      00116B 19                    4497 	add	hl, de
      00116C 5D                    4498 	ld	e, l
      00116D 54                    4499 	ld	d, h
                                   4500 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00116E F8 04                 4501 	ldhl	sp,	#4
      001170 3A                    4502 	ld	a, (hl-)
      001171 12                    4503 	ld	(de), a
      001172 13                    4504 	inc	de
      001173 7E                    4505 	ld	a, (hl)
      001174 12                    4506 	ld	(de), a
                                   4507 ;src/main.c:442: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001175                       4508 00107$:
                                   4509 ;src/main.c:447: eptr++;
      001175 21 12 00              4510 	ld	hl, #0x0012
      001178 09                    4511 	add	hl, bc
      001179 4D                    4512 	ld	c, l
      00117A 44                    4513 	ld	b, h
                                   4514 ;src/main.c:422: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00117B F8 06                 4515 	ldhl	sp,	#6
      00117D 34                    4516 	inc	(hl)
      00117E C3r42r10              4517 	jp	00116$
      001181                       4518 00118$:
                                   4519 ;src/main.c:450: }
      001181 E8 07                 4520 	add	sp, #7
      001183 C9                    4521 	ret
                                   4522 ;src/main.c:452: void initEnemy(uint8_t i) {
                                   4523 ;	---------------------------------
                                   4524 ; Function initEnemy
                                   4525 ; ---------------------------------
      001184                       4526 _initEnemy::
      001184 E8 FC                 4527 	add	sp, #-4
                                   4528 ;src/main.c:455: if (enemies[i].alive == 0) {
      001186 F8 06                 4529 	ldhl	sp,	#6
      001188 4E                    4530 	ld	c, (hl)
      001189 06 00                 4531 	ld	b, #0x00
      00118B 69                    4532 	ld	l, c
      00118C 60                    4533 	ld	h, b
      00118D 29                    4534 	add	hl, hl
      00118E 29                    4535 	add	hl, hl
      00118F 29                    4536 	add	hl, hl
      001190 09                    4537 	add	hl, bc
      001191 29                    4538 	add	hl, hl
      001192 01r5Ar00              4539 	ld	bc,#_enemies
      001195 09                    4540 	add	hl,bc
      001196 4D                    4541 	ld	c, l
      001197 44                    4542 	ld	b, h
      001198 21 09 00              4543 	ld	hl, #0x0009
      00119B 09                    4544 	add	hl, bc
      00119C 7E                    4545 	ld	a, (hl)
      00119D B7                    4546 	or	a, a
      00119E C2r65r12              4547 	jp	NZ, 00109$
                                   4548 ;src/main.c:457: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      0011A1 C5                    4549 	push	bc
      0011A2 CDr00r00              4550 	call	_rand
      0011A5 7B                    4551 	ld	a, e
      0011A6 C1                    4552 	pop	bc
      0011A7 21r17r05              4553 	ld	hl, #_enemyOptionCount
      0011AA 56                    4554 	ld	d, (hl)
      0011AB C5                    4555 	push	bc
      0011AC D5                    4556 	push	de
      0011AD 33                    4557 	inc	sp
      0011AE F5                    4558 	push	af
      0011AF 33                    4559 	inc	sp
      0011B0 CDr00r00              4560 	call	__moduchar
      0011B3 E1                    4561 	pop	hl
      0011B4 C1                    4562 	pop	bc
      0011B5 F8 03                 4563 	ldhl	sp,	#3
      0011B7 73                    4564 	ld	(hl), e
                                   4565 ;src/main.c:458: enemies[i] = enemyOptions[enemyInd];
      0011B8 5E                    4566 	ld	e, (hl)
      0011B9 16 00                 4567 	ld	d, #0x00
      0011BB 6B                    4568 	ld	l, e
      0011BC 62                    4569 	ld	h, d
      0011BD 29                    4570 	add	hl, hl
      0011BE 29                    4571 	add	hl, hl
      0011BF 29                    4572 	add	hl, hl
      0011C0 19                    4573 	add	hl, de
      0011C1 29                    4574 	add	hl, hl
      0011C2 11r00r00              4575 	ld	de, #_enemyOptions
      0011C5 19                    4576 	add	hl, de
      0011C6 59                    4577 	ld	e, c
      0011C7 50                    4578 	ld	d, b
      0011C8 C5                    4579 	push	bc
      0011C9 01 12 00              4580 	ld	bc, #0x12
      0011CC C5                    4581 	push	bc
      0011CD E5                    4582 	push	hl
      0011CE D5                    4583 	push	de
      0011CF CDr00r00              4584 	call	___memcpy
      0011D2 E8 06                 4585 	add	sp, #6
      0011D4 CDr00r00              4586 	call	_rand
      0011D7 7B                    4587 	ld	a, e
      0011D8 C1                    4588 	pop	bc
      0011D9 E6 07                 4589 	and	a, #0x07
      0011DB F8 03                 4590 	ldhl	sp,	#3
      0011DD 77                    4591 	ld	(hl), a
                                   4592 ;src/main.c:461: enemies[i].x = xSpawnPositions[posIndex];
      0011DE 11rAFr0B              4593 	ld	de, #_xSpawnPositions+0
      0011E1 6E                    4594 	ld	l, (hl)
      0011E2 26 00                 4595 	ld	h, #0x00
      0011E4 19                    4596 	add	hl, de
      0011E5 5D                    4597 	ld	e, l
      0011E6 54                    4598 	ld	d, h
      0011E7 1A                    4599 	ld	a, (de)
      0011E8 5F                    4600 	ld	e, a
      0011E9 16 00                 4601 	ld	d, #0x00
      0011EB 69                    4602 	ld	l, c
      0011EC 60                    4603 	ld	h, b
      0011ED 7B                    4604 	ld	a, e
      0011EE 22                    4605 	ld	(hl+), a
      0011EF 72                    4606 	ld	(hl), d
                                   4607 ;src/main.c:462: enemies[i].y = ySpawnPositions[posIndex];
      0011F0 21 02 00              4608 	ld	hl, #0x0002
      0011F3 09                    4609 	add	hl, bc
      0011F4 33                    4610 	inc	sp
      0011F5 33                    4611 	inc	sp
      0011F6 E5                    4612 	push	hl
      0011F7 11rB7r0B              4613 	ld	de, #_ySpawnPositions+0
      0011FA F8 03                 4614 	ldhl	sp,	#3
      0011FC 6E                    4615 	ld	l, (hl)
      0011FD 26 00                 4616 	ld	h, #0x00
      0011FF 19                    4617 	add	hl, de
      001200 5D                    4618 	ld	e, l
      001201 54                    4619 	ld	d, h
      001202 1A                    4620 	ld	a, (de)
      001203 F8 02                 4621 	ldhl	sp,	#2
      001205 22                    4622 	ld	(hl+), a
      001206 AF                    4623 	xor	a, a
      001207 32                    4624 	ld	(hl-), a
      001208 D1                    4625 	pop	de
      001209 D5                    4626 	push	de
      00120A 2A                    4627 	ld	a, (hl+)
      00120B 12                    4628 	ld	(de), a
      00120C 13                    4629 	inc	de
      00120D 7E                    4630 	ld	a, (hl)
      00120E 12                    4631 	ld	(de), a
                                   4632 ;src/main.c:464: if (enemies[i].spriteCount == 1) {
      00120F 21 08 00              4633 	ld	hl, #0x0008
      001212 09                    4634 	add	hl, bc
      001213 7E                    4635 	ld	a, (hl)
      001214 F8 02                 4636 	ldhl	sp,	#2
      001216 77                    4637 	ld	(hl), a
                                   4638 ;src/main.c:465: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      001217 21 06 00              4639 	ld	hl, #0x0006
      00121A 09                    4640 	add	hl, bc
      00121B 5D                    4641 	ld	e, l
      00121C 54                    4642 	ld	d, h
      00121D F8 06                 4643 	ldhl	sp,	#6
      00121F 7E                    4644 	ld	a, (hl)
      001220 F5                    4645 	push	af
      001221 1A                    4646 	ld	a, (de)
      001222 5F                    4647 	ld	e, a
      001223 F1                    4648 	pop	af
      001224 87                    4649 	add	a, a
      001225 F8 03                 4650 	ldhl	sp,	#3
      001227 77                    4651 	ld	(hl), a
      001228 7E                    4652 	ld	a, (hl)
      001229 C6 0A                 4653 	add	a, #0x0a
      00122B 6F                    4654 	ld	l, a
                                   4655 ;	spillPairReg hl
                                   4656 ;	spillPairReg hl
                                   4657 ;src/main.c:464: if (enemies[i].spriteCount == 1) {
      00122C E5                    4658 	push	hl
      00122D F8 04                 4659 	ldhl	sp,	#4
      00122F 7E                    4660 	ld	a, (hl)
      001230 3D                    4661 	dec	a
      001231 E1                    4662 	pop	hl
      001232 20 0D                 4663 	jr	NZ, 00102$
                                   4664 ;src/main.c:465: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   4665 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
                                   4666 ;	spillPairReg hl
                                   4667 ;	spillPairReg hl
      001234 26 00                 4668 	ld	h, #0x00
                                   4669 ;	spillPairReg hl
                                   4670 ;	spillPairReg hl
      001236 29                    4671 	add	hl, hl
      001237 29                    4672 	add	hl, hl
      001238 01r00r00              4673 	ld	bc, #_shadow_OAM
      00123B 09                    4674 	add	hl, bc
      00123C 23                    4675 	inc	hl
      00123D 23                    4676 	inc	hl
      00123E 73                    4677 	ld	(hl), e
                                   4678 ;src/main.c:465: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      00123F 18 24                 4679 	jr	00109$
      001241                       4680 00102$:
                                   4681 ;src/main.c:469: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   4682 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001241 55                    4683 	ld	d,l
                                   4684 ;	spillPairReg hl
                                   4685 ;	spillPairReg hl
      001242 26 00                 4686 	ld	h, #0x00
                                   4687 ;	spillPairReg hl
                                   4688 ;	spillPairReg hl
      001244 29                    4689 	add	hl, hl
      001245 29                    4690 	add	hl, hl
      001246 D5                    4691 	push	de
      001247 11r00r00              4692 	ld	de, #_shadow_OAM
      00124A 19                    4693 	add	hl, de
      00124B 23                    4694 	inc	hl
      00124C 23                    4695 	inc	hl
      00124D D1                    4696 	pop	de
      00124E 73                    4697 	ld	(hl), e
                                   4698 ;src/main.c:472: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      00124F 21 07 00              4699 	ld	hl, #0x0007
      001252 09                    4700 	add	hl, bc
      001253 4E                    4701 	ld	c, (hl)
      001254 F8 03                 4702 	ldhl	sp,	#3
      001256 7E                    4703 	ld	a, (hl)
      001257 C6 0B                 4704 	add	a, #0x0b
                                   4705 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001259 6F                    4706 	ld	l, a
      00125A 11r00r00              4707 	ld	de, #_shadow_OAM+0
                                   4708 ;	spillPairReg hl
                                   4709 ;	spillPairReg hl
      00125D 26 00                 4710 	ld	h, #0x00
                                   4711 ;	spillPairReg hl
                                   4712 ;	spillPairReg hl
      00125F 29                    4713 	add	hl, hl
      001260 29                    4714 	add	hl, hl
      001261 19                    4715 	add	hl, de
      001262 23                    4716 	inc	hl
      001263 23                    4717 	inc	hl
      001264 71                    4718 	ld	(hl), c
                                   4719 ;src/main.c:472: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      001265                       4720 00109$:
                                   4721 ;src/main.c:481: }
      001265 E8 04                 4722 	add	sp, #4
      001267 C9                    4723 	ret
                                   4724 ;src/main.c:484: void updateEnemyPositions() {
                                   4725 ;	---------------------------------
                                   4726 ; Function updateEnemyPositions
                                   4727 ; ---------------------------------
      001268                       4728 _updateEnemyPositions::
      001268 E8 F0                 4729 	add	sp, #-16
                                   4730 ;src/main.c:487: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00126A F8 0F                 4731 	ldhl	sp,	#15
      00126C 36 00                 4732 	ld	(hl), #0x00
      00126E                       4733 00197$:
      00126E 21rAEr0B              4734 	ld	hl, #_ENEMYCOUNT
      001271 4E                    4735 	ld	c, (hl)
      001272 F8 0F                 4736 	ldhl	sp,	#15
      001274 7E                    4737 	ld	a, (hl)
      001275 91                    4738 	sub	a, c
      001276 D2r90r18              4739 	jp	NC, 00145$
                                   4740 ;src/main.c:488: if (!enemies[i].alive) {
      001279 4E                    4741 	ld	c, (hl)
      00127A 06 00                 4742 	ld	b, #0x00
      00127C 69                    4743 	ld	l, c
      00127D 60                    4744 	ld	h, b
      00127E 29                    4745 	add	hl, hl
      00127F 29                    4746 	add	hl, hl
      001280 29                    4747 	add	hl, hl
      001281 09                    4748 	add	hl, bc
      001282 29                    4749 	add	hl, hl
                                   4750 ;src/main.c:496: if (enemies[i].x < playerDrawX) {
      001283 01r5Ar00              4751 	ld	bc,#_enemies
      001286 09                    4752 	add	hl,bc
      001287 33                    4753 	inc	sp
      001288 33                    4754 	inc	sp
                                   4755 ;src/main.c:488: if (!enemies[i].alive) {
      001289 5D                    4756 	ld	e, l
      00128A 54                    4757 	ld	d, h
      00128B D5                    4758 	push	de
      00128C 21 09 00              4759 	ld	hl, #0x0009
      00128F 19                    4760 	add	hl, de
      001290 4D                    4761 	ld	c, l
      001291 44                    4762 	ld	b, h
      001292 0A                    4763 	ld	a, (bc)
      001293 B7                    4764 	or	a, a
      001294 CAr8Ar18              4765 	jp	Z, 00144$
                                   4766 ;src/main.c:491: enemies[i].x -= xOverflow;
      001297 D1                    4767 	pop	de
      001298 D5                    4768 	push	de
      001299 1A                    4769 	ld	a, (de)
      00129A 4F                    4770 	ld	c, a
      00129B 13                    4771 	inc	de
      00129C 1A                    4772 	ld	a, (de)
      00129D 47                    4773 	ld	b, a
      00129E 21rE9r00              4774 	ld	hl, #_xOverflow
      0012A1 2A                    4775 	ld	a, (hl+)
      0012A2 5F                    4776 	ld	e, a
      0012A3 56                    4777 	ld	d, (hl)
      0012A4 79                    4778 	ld	a, c
      0012A5 93                    4779 	sub	a, e
      0012A6 5F                    4780 	ld	e, a
      0012A7 78                    4781 	ld	a, b
      0012A8 9A                    4782 	sbc	a, d
      0012A9 F8 0E                 4783 	ldhl	sp,	#14
      0012AB 32                    4784 	ld	(hl-), a
      0012AC 73                    4785 	ld	(hl), e
      0012AD D1                    4786 	pop	de
      0012AE D5                    4787 	push	de
      0012AF 2A                    4788 	ld	a, (hl+)
      0012B0 12                    4789 	ld	(de), a
      0012B1 13                    4790 	inc	de
      0012B2 7E                    4791 	ld	a, (hl)
      0012B3 12                    4792 	ld	(de), a
                                   4793 ;src/main.c:492: enemies[i].y -= yOverflow;
      0012B4 D1                    4794 	pop	de
      0012B5 D5                    4795 	push	de
      0012B6 21 02 00              4796 	ld	hl, #0x0002
      0012B9 19                    4797 	add	hl, de
      0012BA E5                    4798 	push	hl
      0012BB 7D                    4799 	ld	a, l
      0012BC F8 04                 4800 	ldhl	sp,	#4
      0012BE 77                    4801 	ld	(hl), a
      0012BF E1                    4802 	pop	hl
      0012C0 7C                    4803 	ld	a, h
      0012C1 F8 03                 4804 	ldhl	sp,	#3
      0012C3 32                    4805 	ld	(hl-), a
      0012C4 2A                    4806 	ld	a, (hl+)
      0012C5 5F                    4807 	ld	e, a
      0012C6 56                    4808 	ld	d, (hl)
      0012C7 1A                    4809 	ld	a, (de)
      0012C8 4F                    4810 	ld	c, a
      0012C9 13                    4811 	inc	de
      0012CA 1A                    4812 	ld	a, (de)
      0012CB 47                    4813 	ld	b, a
      0012CC 79                    4814 	ld	a, c
      0012CD 21rEBr00              4815 	ld	hl, #_yOverflow
      0012D0 96                    4816 	sub	a, (hl)
      0012D1 23                    4817 	inc	hl
      0012D2 4F                    4818 	ld	c, a
      0012D3 78                    4819 	ld	a, b
      0012D4 9E                    4820 	sbc	a, (hl)
      0012D5 47                    4821 	ld	b, a
      0012D6 F8 02                 4822 	ldhl	sp,	#2
      0012D8 2A                    4823 	ld	a,	(hl+)
      0012D9 66                    4824 	ld	h, (hl)
      0012DA 6F                    4825 	ld	l, a
      0012DB 79                    4826 	ld	a, c
      0012DC 22                    4827 	ld	(hl+), a
      0012DD 70                    4828 	ld	(hl), b
                                   4829 ;src/main.c:495: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012DE F8 0D                 4830 	ldhl	sp,	#13
      0012E0 7E                    4831 	ld	a, (hl)
      0012E1 21rE3r00              4832 	ld	hl, #_playerDrawX
      0012E4 4E                    4833 	ld	c, (hl)
      0012E5 91                    4834 	sub	a, c
      0012E6 4F                    4835 	ld	c, a
                                   4836 ;src/main.c:367: if (value >= 0) return value;
      0012E7 CB 79                 4837 	bit	7, c
      0012E9 20 03                 4838 	jr	NZ, 00170$
      0012EB 41                    4839 	ld	b, c
      0012EC 18 03                 4840 	jr	00172$
      0012EE                       4841 00170$:
                                   4842 ;src/main.c:368: else return - value;
      0012EE AF                    4843 	xor	a, a
      0012EF 91                    4844 	sub	a, c
      0012F0 47                    4845 	ld	b, a
                                   4846 ;src/main.c:495: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012F1                       4847 00172$:
                                   4848 ;src/main.c:510: enemies[i].ySpeed += enemies[i].accel;
      0012F1 D1                    4849 	pop	de
      0012F2 D5                    4850 	push	de
      0012F3 21 0D 00              4851 	ld	hl, #0x000d
      0012F6 19                    4852 	add	hl, de
      0012F7 E5                    4853 	push	hl
      0012F8 7D                    4854 	ld	a, l
      0012F9 F8 08                 4855 	ldhl	sp,	#8
      0012FB 77                    4856 	ld	(hl), a
      0012FC E1                    4857 	pop	hl
      0012FD 7C                    4858 	ld	a, h
      0012FE F8 07                 4859 	ldhl	sp,	#7
      001300 77                    4860 	ld	(hl), a
                                   4861 ;src/main.c:497: enemies[i].xSpeed += enemies[i].accel;
      001301 D1                    4862 	pop	de
      001302 D5                    4863 	push	de
      001303 21 0E 00              4864 	ld	hl, #0x000e
      001306 19                    4865 	add	hl, de
      001307 E5                    4866 	push	hl
      001308 7D                    4867 	ld	a, l
      001309 F8 06                 4868 	ldhl	sp,	#6
      00130B 77                    4869 	ld	(hl), a
      00130C E1                    4870 	pop	hl
      00130D 7C                    4871 	ld	a, h
      00130E F8 05                 4872 	ldhl	sp,	#5
                                   4873 ;src/main.c:504: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      001310 32                    4874 	ld	(hl-), a
      001311 2A                    4875 	ld	a, (hl+)
      001312 5F                    4876 	ld	e, a
      001313 56                    4877 	ld	d, (hl)
      001314 1A                    4878 	ld	a, (de)
      001315 4F                    4879 	ld	c, a
                                   4880 ;src/main.c:495: if (abs(enemies[i].x - playerDrawX) > 8) {
      001316 58                    4881 	ld	e, b
      001317 3E 08                 4882 	ld	a,#0x08
      001319 57                    4883 	ld	d,a
      00131A 90                    4884 	sub	a, b
      00131B CB 7B                 4885 	bit	7, e
      00131D 28 07                 4886 	jr	Z, 00399$
      00131F CB 7A                 4887 	bit	7, d
      001321 20 08                 4888 	jr	NZ, 00400$
      001323 BF                    4889 	cp	a, a
      001324 18 05                 4890 	jr	00400$
      001326                       4891 00399$:
      001326 CB 7A                 4892 	bit	7, d
      001328 28 01                 4893 	jr	Z, 00400$
      00132A 37                    4894 	scf
      00132B                       4895 00400$:
      00132B 30 4E                 4896 	jr	NC, 00111$
                                   4897 ;src/main.c:496: if (enemies[i].x < playerDrawX) {
      00132D D1                    4898 	pop	de
      00132E D5                    4899 	push	de
      00132F 1A                    4900 	ld	a, (de)
      001330 F8 0B                 4901 	ldhl	sp,	#11
      001332 22                    4902 	ld	(hl+), a
      001333 13                    4903 	inc	de
      001334 1A                    4904 	ld	a, (de)
      001335 77                    4905 	ld	(hl), a
      001336 FArE3r00              4906 	ld	a, (#_playerDrawX)
      001339 F8 0D                 4907 	ldhl	sp,	#13
      00133B 22                    4908 	ld	(hl+), a
      00133C 36 00                 4909 	ld	(hl), #0x00
                                   4910 ;src/main.c:497: enemies[i].xSpeed += enemies[i].accel;
      00133E F8 06                 4911 	ldhl	sp,#6
      001340 2A                    4912 	ld	a, (hl+)
      001341 5F                    4913 	ld	e, a
      001342 56                    4914 	ld	d, (hl)
      001343 1A                    4915 	ld	a, (de)
      001344 47                    4916 	ld	b, a
                                   4917 ;src/main.c:496: if (enemies[i].x < playerDrawX) {
      001345 F8 0B                 4918 	ldhl	sp,	#11
      001347 5D                    4919 	ld	e, l
      001348 54                    4920 	ld	d, h
      001349 F8 0D                 4921 	ldhl	sp,	#13
      00134B 1A                    4922 	ld	a, (de)
      00134C 13                    4923 	inc	de
      00134D 96                    4924 	sub	a, (hl)
      00134E 23                    4925 	inc	hl
      00134F 1A                    4926 	ld	a, (de)
      001350 9E                    4927 	sbc	a, (hl)
      001351 1A                    4928 	ld	a, (de)
      001352 57                    4929 	ld	d, a
      001353 CB 7E                 4930 	bit	7, (hl)
      001355 28 07                 4931 	jr	Z, 00401$
      001357 CB 7A                 4932 	bit	7, d
      001359 20 08                 4933 	jr	NZ, 00402$
      00135B BF                    4934 	cp	a, a
      00135C 18 05                 4935 	jr	00402$
      00135E                       4936 00401$:
      00135E CB 7A                 4937 	bit	7, d
      001360 28 01                 4938 	jr	Z, 00402$
      001362 37                    4939 	scf
      001363                       4940 00402$:
      001363 30 0B                 4941 	jr	NC, 00104$
                                   4942 ;src/main.c:497: enemies[i].xSpeed += enemies[i].accel;
      001365 79                    4943 	ld	a, c
      001366 80                    4944 	add	a, b
      001367 4F                    4945 	ld	c, a
      001368 F8 04                 4946 	ldhl	sp,	#4
      00136A 2A                    4947 	ld	a,	(hl+)
      00136B 66                    4948 	ld	h, (hl)
      00136C 6F                    4949 	ld	l, a
      00136D 71                    4950 	ld	(hl), c
      00136E 18 38                 4951 	jr	00112$
      001370                       4952 00104$:
                                   4953 ;src/main.c:500: enemies[i].xSpeed -= enemies[i].accel;
      001370 79                    4954 	ld	a, c
      001371 90                    4955 	sub	a, b
      001372 4F                    4956 	ld	c, a
      001373 F8 04                 4957 	ldhl	sp,	#4
      001375 2A                    4958 	ld	a,	(hl+)
      001376 66                    4959 	ld	h, (hl)
      001377 6F                    4960 	ld	l, a
      001378 71                    4961 	ld	(hl), c
      001379 18 2D                 4962 	jr	00112$
      00137B                       4963 00111$:
                                   4964 ;src/main.c:504: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      00137B 59                    4965 	ld	e, c
      00137C AF                    4966 	xor	a, a
      00137D 57                    4967 	ld	d, a
      00137E 91                    4968 	sub	a, c
      00137F CB 7B                 4969 	bit	7, e
      001381 28 07                 4970 	jr	Z, 00403$
      001383 CB 7A                 4971 	bit	7, d
      001385 20 08                 4972 	jr	NZ, 00404$
      001387 BF                    4973 	cp	a, a
      001388 18 05                 4974 	jr	00404$
      00138A                       4975 00403$:
      00138A CB 7A                 4976 	bit	7, d
      00138C 28 01                 4977 	jr	Z, 00404$
      00138E 37                    4978 	scf
      00138F                       4979 00404$:
      00138F 30 07                 4980 	jr	NC, 00107$
      001391 0D                    4981 	dec	c
      001392 F8 04                 4982 	ldhl	sp,	#4
      001394 2A                    4983 	ld	a,	(hl+)
      001395 66                    4984 	ld	h, (hl)
      001396 6F                    4985 	ld	l, a
      001397 71                    4986 	ld	(hl), c
      001398                       4987 00107$:
      001398 F8 04                 4988 	ldhl	sp,#4
      00139A 2A                    4989 	ld	a, (hl+)
      00139B 5F                    4990 	ld	e, a
      00139C 56                    4991 	ld	d, (hl)
      00139D 1A                    4992 	ld	a, (de)
      00139E 4F                    4993 	ld	c, a
                                   4994 ;src/main.c:505: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      00139F CB 79                 4995 	bit	7, c
      0013A1 28 05                 4996 	jr	Z, 00112$
      0013A3 0C                    4997 	inc	c
      0013A4 3A                    4998 	ld	a, (hl-)
      0013A5 6E                    4999 	ld	l, (hl)
      0013A6 67                    5000 	ld	h, a
      0013A7 71                    5001 	ld	(hl), c
      0013A8                       5002 00112$:
                                   5003 ;src/main.c:508: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013A8 F8 02                 5004 	ldhl	sp,#2
      0013AA 2A                    5005 	ld	a, (hl+)
      0013AB 5F                    5006 	ld	e, a
      0013AC 56                    5007 	ld	d, (hl)
      0013AD 1A                    5008 	ld	a, (de)
      0013AE 4F                    5009 	ld	c, a
      0013AF 13                    5010 	inc	de
      0013B0 1A                    5011 	ld	a, (de)
      0013B1 47                    5012 	ld	b, a
      0013B2 79                    5013 	ld	a, c
      0013B3 21rE4r00              5014 	ld	hl, #_playerDrawY
      0013B6 5E                    5015 	ld	e, (hl)
      0013B7 93                    5016 	sub	a, e
      0013B8 6F                    5017 	ld	l, a
                                   5018 ;	spillPairReg hl
                                   5019 ;	spillPairReg hl
                                   5020 ;src/main.c:367: if (value >= 0) return value;
      0013B9 CB 7D                 5021 	bit	7, l
      0013BB 20 06                 5022 	jr	NZ, 00174$
      0013BD 7D                    5023 	ld	a, l
      0013BE F8 0E                 5024 	ldhl	sp,	#14
      0013C0 77                    5025 	ld	(hl), a
      0013C1 18 06                 5026 	jr	00176$
      0013C3                       5027 00174$:
                                   5028 ;src/main.c:368: else return - value;
      0013C3 AF                    5029 	xor	a, a
      0013C4 95                    5030 	sub	a, l
      0013C5 5F                    5031 	ld	e, a
      0013C6 F8 0E                 5032 	ldhl	sp,	#14
      0013C8 73                    5033 	ld	(hl), e
                                   5034 ;src/main.c:508: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013C9                       5035 00176$:
                                   5036 ;src/main.c:510: enemies[i].ySpeed += enemies[i].accel;
      0013C9 D1                    5037 	pop	de
      0013CA D5                    5038 	push	de
      0013CB 21 0F 00              5039 	ld	hl, #0x000f
      0013CE 19                    5040 	add	hl, de
      0013CF E5                    5041 	push	hl
      0013D0 7D                    5042 	ld	a, l
      0013D1 F8 0A                 5043 	ldhl	sp,	#10
      0013D3 77                    5044 	ld	(hl), a
      0013D4 E1                    5045 	pop	hl
      0013D5 7C                    5046 	ld	a, h
      0013D6 F8 09                 5047 	ldhl	sp,	#9
                                   5048 ;src/main.c:517: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      0013D8 32                    5049 	ld	(hl-), a
      0013D9 2A                    5050 	ld	a, (hl+)
      0013DA 5F                    5051 	ld	e, a
      0013DB 2A                    5052 	ld	a, (hl+)
      0013DC 23                    5053 	inc	hl
      0013DD 57                    5054 	ld	d, a
      0013DE 1A                    5055 	ld	a, (de)
      0013DF 77                    5056 	ld	(hl), a
                                   5057 ;src/main.c:508: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013E0 F8 0E                 5058 	ldhl	sp,	#14
      0013E2 5E                    5059 	ld	e, (hl)
      0013E3 3E 08                 5060 	ld	a,#0x08
      0013E5 57                    5061 	ld	d,a
      0013E6 96                    5062 	sub	a, (hl)
      0013E7 CB 7B                 5063 	bit	7, e
      0013E9 28 07                 5064 	jr	Z, 00405$
      0013EB CB 7A                 5065 	bit	7, d
      0013ED 20 08                 5066 	jr	NZ, 00406$
      0013EF BF                    5067 	cp	a, a
      0013F0 18 05                 5068 	jr	00406$
      0013F2                       5069 00405$:
      0013F2 CB 7A                 5070 	bit	7, d
      0013F4 28 01                 5071 	jr	Z, 00406$
      0013F6 37                    5072 	scf
      0013F7                       5073 00406$:
      0013F7 30 49                 5074 	jr	NC, 00121$
                                   5075 ;src/main.c:509: if (enemies[i].y < playerDrawY) {
      0013F9 FArE4r00              5076 	ld	a, (#_playerDrawY)
      0013FC F8 0C                 5077 	ldhl	sp,	#12
      0013FE 22                    5078 	ld	(hl+), a
      0013FF 36 00                 5079 	ld	(hl), #0x00
                                   5080 ;src/main.c:497: enemies[i].xSpeed += enemies[i].accel;
      001401 F8 06                 5081 	ldhl	sp,#6
      001403 2A                    5082 	ld	a, (hl+)
      001404 5F                    5083 	ld	e, a
      001405 56                    5084 	ld	d, (hl)
      001406 1A                    5085 	ld	a, (de)
      001407 F8 0E                 5086 	ldhl	sp,	#14
                                   5087 ;src/main.c:509: if (enemies[i].y < playerDrawY) {
      001409 32                    5088 	ld	(hl-), a
      00140A 2B                    5089 	dec	hl
      00140B 79                    5090 	ld	a, c
      00140C 96                    5091 	sub	a, (hl)
      00140D 23                    5092 	inc	hl
      00140E 78                    5093 	ld	a, b
      00140F 9E                    5094 	sbc	a, (hl)
      001410 78                    5095 	ld	a, b
      001411 57                    5096 	ld	d, a
      001412 CB 7E                 5097 	bit	7, (hl)
      001414 28 07                 5098 	jr	Z, 00407$
      001416 CB 7A                 5099 	bit	7, d
      001418 20 08                 5100 	jr	NZ, 00408$
      00141A BF                    5101 	cp	a, a
      00141B 18 05                 5102 	jr	00408$
      00141D                       5103 00407$:
      00141D CB 7A                 5104 	bit	7, d
      00141F 28 01                 5105 	jr	Z, 00408$
      001421 37                    5106 	scf
      001422                       5107 00408$:
      001422 30 0F                 5108 	jr	NC, 00114$
                                   5109 ;src/main.c:510: enemies[i].ySpeed += enemies[i].accel;
      001424 F8 0B                 5110 	ldhl	sp,	#11
      001426 7E                    5111 	ld	a, (hl)
      001427 F8 0E                 5112 	ldhl	sp,	#14
      001429 86                    5113 	add	a, (hl)
      00142A 4F                    5114 	ld	c, a
      00142B F8 08                 5115 	ldhl	sp,	#8
      00142D 2A                    5116 	ld	a,	(hl+)
      00142E 66                    5117 	ld	h, (hl)
      00142F 6F                    5118 	ld	l, a
      001430 71                    5119 	ld	(hl), c
      001431 18 41                 5120 	jr	00122$
      001433                       5121 00114$:
                                   5122 ;src/main.c:513: enemies[i].ySpeed -= enemies[i].accel;
      001433 F8 0B                 5123 	ldhl	sp,	#11
      001435 7E                    5124 	ld	a, (hl)
      001436 F8 0E                 5125 	ldhl	sp,	#14
      001438 96                    5126 	sub	a, (hl)
      001439 4F                    5127 	ld	c, a
      00143A F8 08                 5128 	ldhl	sp,	#8
      00143C 2A                    5129 	ld	a,	(hl+)
      00143D 66                    5130 	ld	h, (hl)
      00143E 6F                    5131 	ld	l, a
      00143F 71                    5132 	ld	(hl), c
      001440 18 32                 5133 	jr	00122$
      001442                       5134 00121$:
                                   5135 ;src/main.c:517: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001442 F8 0B                 5136 	ldhl	sp,	#11
      001444 5E                    5137 	ld	e, (hl)
      001445 AF                    5138 	xor	a, a
      001446 57                    5139 	ld	d, a
      001447 96                    5140 	sub	a, (hl)
      001448 CB 7B                 5141 	bit	7, e
      00144A 28 07                 5142 	jr	Z, 00409$
      00144C CB 7A                 5143 	bit	7, d
      00144E 20 08                 5144 	jr	NZ, 00410$
      001450 BF                    5145 	cp	a, a
      001451 18 05                 5146 	jr	00410$
      001453                       5147 00409$:
      001453 CB 7A                 5148 	bit	7, d
      001455 28 01                 5149 	jr	Z, 00410$
      001457 37                    5150 	scf
      001458                       5151 00410$:
      001458 30 0A                 5152 	jr	NC, 00117$
      00145A F8 0B                 5153 	ldhl	sp,	#11
      00145C 4E                    5154 	ld	c, (hl)
      00145D 0D                    5155 	dec	c
      00145E F8 08                 5156 	ldhl	sp,	#8
      001460 2A                    5157 	ld	a,	(hl+)
      001461 66                    5158 	ld	h, (hl)
      001462 6F                    5159 	ld	l, a
      001463 71                    5160 	ld	(hl), c
      001464                       5161 00117$:
      001464 F8 08                 5162 	ldhl	sp,#8
      001466 2A                    5163 	ld	a, (hl+)
      001467 5F                    5164 	ld	e, a
      001468 56                    5165 	ld	d, (hl)
      001469 1A                    5166 	ld	a, (de)
      00146A 4F                    5167 	ld	c, a
                                   5168 ;src/main.c:518: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      00146B CB 79                 5169 	bit	7, c
      00146D 28 05                 5170 	jr	Z, 00122$
      00146F 0C                    5171 	inc	c
      001470 3A                    5172 	ld	a, (hl-)
      001471 6E                    5173 	ld	l, (hl)
      001472 67                    5174 	ld	h, a
      001473 71                    5175 	ld	(hl), c
      001474                       5176 00122$:
                                   5177 ;src/main.c:522: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001474 D1                    5178 	pop	de
      001475 D5                    5179 	push	de
      001476 21 0C 00              5180 	ld	hl, #0x000c
      001479 19                    5181 	add	hl, de
      00147A E5                    5182 	push	hl
      00147B 7D                    5183 	ld	a, l
      00147C F8 0C                 5184 	ldhl	sp,	#12
      00147E 77                    5185 	ld	(hl), a
      00147F E1                    5186 	pop	hl
      001480 7C                    5187 	ld	a, h
      001481 F8 0B                 5188 	ldhl	sp,	#11
      001483 32                    5189 	ld	(hl-), a
      001484 2A                    5190 	ld	a, (hl+)
      001485 5F                    5191 	ld	e, a
      001486 2A                    5192 	ld	a, (hl+)
      001487 57                    5193 	ld	d, a
      001488 1A                    5194 	ld	a, (de)
      001489 4F                    5195 	ld	c, a
      00148A 22                    5196 	ld	(hl+), a
      00148B AF                    5197 	xor	a, a
      00148C 91                    5198 	sub	a, c
      00148D 77                    5199 	ld	(hl), a
      00148E F8 04                 5200 	ldhl	sp,#4
      001490 2A                    5201 	ld	a, (hl+)
      001491 5F                    5202 	ld	e, a
      001492 56                    5203 	ld	d, (hl)
      001493 1A                    5204 	ld	a, (de)
      001494 F8 0E                 5205 	ldhl	sp,	#14
                                   5206 ;src/main.c:348: return (value < min) ? min : (value > max) ? max : value;
      001496 32                    5207 	ld	(hl-), a
      001497 2A                    5208 	ld	a, (hl+)
      001498 5F                    5209 	ld	e, a
      001499 56                    5210 	ld	d, (hl)
      00149A 3A                    5211 	ld	a, (hl-)
      00149B 96                    5212 	sub	a, (hl)
      00149C CB 7B                 5213 	bit	7, e
      00149E 28 07                 5214 	jr	Z, 00411$
      0014A0 CB 7A                 5215 	bit	7, d
      0014A2 20 08                 5216 	jr	NZ, 00412$
      0014A4 BF                    5217 	cp	a, a
      0014A5 18 05                 5218 	jr	00412$
      0014A7                       5219 00411$:
      0014A7 CB 7A                 5220 	bit	7, d
      0014A9 28 01                 5221 	jr	Z, 00412$
      0014AB 37                    5222 	scf
      0014AC                       5223 00412$:
      0014AC 30 06                 5224 	jr	NC, 00200$
      0014AE F8 0D                 5225 	ldhl	sp,	#13
      0014B0 2A                    5226 	ld	a, (hl+)
      0014B1 77                    5227 	ld	(hl), a
      0014B2 18 26                 5228 	jr	00201$
      0014B4                       5229 00200$:
      0014B4 F8 0E                 5230 	ldhl	sp,	#14
      0014B6 3A                    5231 	ld	a, (hl-)
      0014B7 2B                    5232 	dec	hl
      0014B8 5F                    5233 	ld	e, a
      0014B9 56                    5234 	ld	d, (hl)
      0014BA 2A                    5235 	ld	a, (hl+)
      0014BB 23                    5236 	inc	hl
      0014BC 96                    5237 	sub	a, (hl)
      0014BD CB 7B                 5238 	bit	7, e
      0014BF 28 07                 5239 	jr	Z, 00413$
      0014C1 CB 7A                 5240 	bit	7, d
      0014C3 20 08                 5241 	jr	NZ, 00414$
      0014C5 BF                    5242 	cp	a, a
      0014C6 18 05                 5243 	jr	00414$
      0014C8                       5244 00413$:
      0014C8 CB 7A                 5245 	bit	7, d
      0014CA 28 01                 5246 	jr	Z, 00414$
      0014CC 37                    5247 	scf
      0014CD                       5248 00414$:
      0014CD 30 05                 5249 	jr	NC, 00202$
      0014CF F8 0C                 5250 	ldhl	sp,	#12
      0014D1 5E                    5251 	ld	e, (hl)
      0014D2 18 03                 5252 	jr	00203$
      0014D4                       5253 00202$:
      0014D4 F8 0E                 5254 	ldhl	sp,	#14
      0014D6 5E                    5255 	ld	e, (hl)
      0014D7                       5256 00203$:
      0014D7 F8 0E                 5257 	ldhl	sp,	#14
      0014D9 73                    5258 	ld	(hl), e
      0014DA                       5259 00201$:
      0014DA F8 0E                 5260 	ldhl	sp,	#14
      0014DC 4E                    5261 	ld	c, (hl)
                                   5262 ;src/main.c:522: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0014DD F8 04                 5263 	ldhl	sp,	#4
      0014DF 2A                    5264 	ld	a,	(hl+)
      0014E0 66                    5265 	ld	h, (hl)
      0014E1 6F                    5266 	ld	l, a
      0014E2 71                    5267 	ld	(hl), c
                                   5268 ;src/main.c:523: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0014E3 F8 0A                 5269 	ldhl	sp,#10
      0014E5 2A                    5270 	ld	a, (hl+)
      0014E6 5F                    5271 	ld	e, a
      0014E7 3A                    5272 	ld	a, (hl-)
      0014E8 2B                    5273 	dec	hl
      0014E9 2B                    5274 	dec	hl
      0014EA 57                    5275 	ld	d, a
      0014EB 1A                    5276 	ld	a, (de)
      0014EC 47                    5277 	ld	b, a
      0014ED 48                    5278 	ld	c, b
      0014EE AF                    5279 	xor	a, a
      0014EF 90                    5280 	sub	a, b
      0014F0 47                    5281 	ld	b, a
      0014F1 2A                    5282 	ld	a, (hl+)
      0014F2 5F                    5283 	ld	e, a
      0014F3 56                    5284 	ld	d, (hl)
      0014F4 1A                    5285 	ld	a, (de)
      0014F5 6F                    5286 	ld	l, a
                                   5287 ;	spillPairReg hl
                                   5288 ;	spillPairReg hl
                                   5289 ;src/main.c:348: return (value < min) ? min : (value > max) ? max : value;
      0014F6 58                    5290 	ld	e, b
      0014F7 7D                    5291 	ld	a,l
      0014F8 57                    5292 	ld	d,a
      0014F9 90                    5293 	sub	a, b
      0014FA CB 7B                 5294 	bit	7, e
      0014FC 28 07                 5295 	jr	Z, 00415$
      0014FE CB 7A                 5296 	bit	7, d
      001500 20 08                 5297 	jr	NZ, 00416$
      001502 BF                    5298 	cp	a, a
      001503 18 05                 5299 	jr	00416$
      001505                       5300 00415$:
      001505 CB 7A                 5301 	bit	7, d
      001507 28 01                 5302 	jr	Z, 00416$
      001509 37                    5303 	scf
      00150A                       5304 00416$:
      00150A 30 03                 5305 	jr	NC, 00204$
      00150C 48                    5306 	ld	c, b
      00150D 18 17                 5307 	jr	00205$
      00150F                       5308 00204$:
      00150F 5D                    5309 	ld	e, l
      001510 79                    5310 	ld	a,c
      001511 57                    5311 	ld	d,a
      001512 95                    5312 	sub	a, l
      001513 CB 7B                 5313 	bit	7, e
      001515 28 07                 5314 	jr	Z, 00417$
      001517 CB 7A                 5315 	bit	7, d
      001519 20 08                 5316 	jr	NZ, 00418$
      00151B BF                    5317 	cp	a, a
      00151C 18 05                 5318 	jr	00418$
      00151E                       5319 00417$:
      00151E CB 7A                 5320 	bit	7, d
      001520 28 01                 5321 	jr	Z, 00418$
      001522 37                    5322 	scf
      001523                       5323 00418$:
      001523 38 01                 5324 	jr	C, 00207$
      001525 4D                    5325 	ld	c, l
      001526                       5326 00207$:
      001526                       5327 00205$:
                                   5328 ;src/main.c:523: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001526 F8 08                 5329 	ldhl	sp,	#8
      001528 2A                    5330 	ld	a,	(hl+)
      001529 66                    5331 	ld	h, (hl)
      00152A 6F                    5332 	ld	l, a
      00152B 71                    5333 	ld	(hl), c
                                   5334 ;src/main.c:526: enemies[i].xReserve += enemies[i].xSpeed;
      00152C D1                    5335 	pop	de
      00152D D5                    5336 	push	de
      00152E 21 04 00              5337 	ld	hl, #0x0004
      001531 19                    5338 	add	hl, de
      001532 E5                    5339 	push	hl
      001533 7D                    5340 	ld	a, l
      001534 F8 0E                 5341 	ldhl	sp,	#14
      001536 77                    5342 	ld	(hl), a
      001537 E1                    5343 	pop	hl
      001538 7C                    5344 	ld	a, h
      001539 F8 0D                 5345 	ldhl	sp,	#13
      00153B 32                    5346 	ld	(hl-), a
      00153C 2A                    5347 	ld	a, (hl+)
      00153D 5F                    5348 	ld	e, a
      00153E 56                    5349 	ld	d, (hl)
      00153F 1A                    5350 	ld	a, (de)
      001540 47                    5351 	ld	b, a
      001541 F8 04                 5352 	ldhl	sp,#4
      001543 2A                    5353 	ld	a, (hl+)
      001544 5F                    5354 	ld	e, a
      001545 56                    5355 	ld	d, (hl)
      001546 1A                    5356 	ld	a, (de)
      001547 80                    5357 	add	a, b
      001548 47                    5358 	ld	b, a
      001549 F8 0C                 5359 	ldhl	sp,	#12
      00154B 2A                    5360 	ld	a,	(hl+)
      00154C 66                    5361 	ld	h, (hl)
      00154D 6F                    5362 	ld	l, a
      00154E 70                    5363 	ld	(hl), b
                                   5364 ;src/main.c:527: enemies[i].yReserve += enemies[i].ySpeed;
      00154F D1                    5365 	pop	de
      001550 D5                    5366 	push	de
      001551 21 05 00              5367 	ld	hl, #0x0005
      001554 19                    5368 	add	hl, de
      001555 E5                    5369 	push	hl
      001556 7D                    5370 	ld	a, l
      001557 F8 08                 5371 	ldhl	sp,	#8
      001559 77                    5372 	ld	(hl), a
      00155A E1                    5373 	pop	hl
      00155B 7C                    5374 	ld	a, h
      00155C F8 07                 5375 	ldhl	sp,	#7
      00155E 32                    5376 	ld	(hl-), a
      00155F 2A                    5377 	ld	a, (hl+)
      001560 5F                    5378 	ld	e, a
      001561 56                    5379 	ld	d, (hl)
      001562 1A                    5380 	ld	a, (de)
      001563 81                    5381 	add	a, c
      001564 4F                    5382 	ld	c, a
      001565 3A                    5383 	ld	a, (hl-)
      001566 6E                    5384 	ld	l, (hl)
      001567 67                    5385 	ld	h, a
      001568 71                    5386 	ld	(hl), c
                                   5387 ;src/main.c:531: if (enemies[i].xReserve >> 3 > 0) {
      001569 F8 0C                 5388 	ldhl	sp,#12
      00156B 2A                    5389 	ld	a, (hl+)
      00156C 5F                    5390 	ld	e, a
      00156D 2A                    5391 	ld	a, (hl+)
      00156E 57                    5392 	ld	d, a
      00156F 1A                    5393 	ld	a, (de)
      001570 77                    5394 	ld	(hl), a
      001571 CB 28                 5395 	sra	b
      001573 CB 28                 5396 	sra	b
      001575 CB 28                 5397 	sra	b
      001577 58                    5398 	ld	e, b
      001578 AF                    5399 	xor	a, a
      001579 57                    5400 	ld	d, a
      00157A 90                    5401 	sub	a, b
      00157B CB 7B                 5402 	bit	7, e
      00157D 28 07                 5403 	jr	Z, 00419$
      00157F CB 7A                 5404 	bit	7, d
      001581 20 08                 5405 	jr	NZ, 00420$
      001583 BF                    5406 	cp	a, a
      001584 18 05                 5407 	jr	00420$
      001586                       5408 00419$:
      001586 CB 7A                 5409 	bit	7, d
      001588 28 01                 5410 	jr	Z, 00420$
      00158A 37                    5411 	scf
      00158B                       5412 00420$:
      00158B 30 36                 5413 	jr	NC, 00126$
                                   5414 ;src/main.c:532: int8_t xMovement = enemies[i].xReserve >> 3;
      00158D F8 0E                 5415 	ldhl	sp,	#14
      00158F 7E                    5416 	ld	a, (hl)
      001590 CB 2F                 5417 	sra	a
      001592 CB 2F                 5418 	sra	a
      001594 CB 2F                 5419 	sra	a
      001596 77                    5420 	ld	(hl), a
                                   5421 ;src/main.c:533: enemies[i].x += xMovement;
      001597 D1                    5422 	pop	de
      001598 D5                    5423 	push	de
      001599 1A                    5424 	ld	a, (de)
      00159A 4F                    5425 	ld	c, a
      00159B 13                    5426 	inc	de
      00159C 1A                    5427 	ld	a, (de)
      00159D 47                    5428 	ld	b, a
      00159E 7E                    5429 	ld	a, (hl)
      00159F 5F                    5430 	ld	e, a
      0015A0 07                    5431 	rlca
      0015A1 9F                    5432 	sbc	a, a
      0015A2 57                    5433 	ld	d, a
      0015A3 69                    5434 	ld	l, c
                                   5435 ;	spillPairReg hl
                                   5436 ;	spillPairReg hl
      0015A4 60                    5437 	ld	h, b
                                   5438 ;	spillPairReg hl
                                   5439 ;	spillPairReg hl
      0015A5 19                    5440 	add	hl, de
      0015A6 4D                    5441 	ld	c, l
      0015A7 44                    5442 	ld	b, h
      0015A8 E1                    5443 	pop	hl
      0015A9 E5                    5444 	push	hl
      0015AA 79                    5445 	ld	a, c
      0015AB 22                    5446 	ld	(hl+), a
      0015AC 70                    5447 	ld	(hl), b
                                   5448 ;src/main.c:534: enemies[i].xReserve -=  xMovement << 3;
      0015AD F8 0C                 5449 	ldhl	sp,#12
      0015AF 2A                    5450 	ld	a, (hl+)
      0015B0 5F                    5451 	ld	e, a
      0015B1 2A                    5452 	ld	a, (hl+)
      0015B2 57                    5453 	ld	d, a
      0015B3 1A                    5454 	ld	a, (de)
      0015B4 F5                    5455 	push	af
      0015B5 3A                    5456 	ld	a, (hl-)
      0015B6 87                    5457 	add	a, a
      0015B7 87                    5458 	add	a, a
      0015B8 87                    5459 	add	a, a
      0015B9 4F                    5460 	ld	c, a
      0015BA F1                    5461 	pop	af
      0015BB 91                    5462 	sub	a, c
      0015BC 4F                    5463 	ld	c, a
      0015BD 3A                    5464 	ld	a, (hl-)
      0015BE 6E                    5465 	ld	l, (hl)
      0015BF 67                    5466 	ld	h, a
      0015C0 71                    5467 	ld	(hl), c
      0015C1 18 60                 5468 	jr	00127$
      0015C3                       5469 00126$:
                                   5470 ;src/main.c:537: else if ((-enemies[i].xReserve) >> 3 > 0){
      0015C3 F8 0E                 5471 	ldhl	sp,	#14
      0015C5 7E                    5472 	ld	a, (hl)
      0015C6 4F                    5473 	ld	c, a
      0015C7 07                    5474 	rlca
      0015C8 9F                    5475 	sbc	a, a
      0015C9 47                    5476 	ld	b, a
      0015CA AF                    5477 	xor	a, a
      0015CB 91                    5478 	sub	a, c
      0015CC 4F                    5479 	ld	c, a
      0015CD 9F                    5480 	sbc	a, a
      0015CE 90                    5481 	sub	a, b
      0015CF 47                    5482 	ld	b, a
      0015D0 CB 28                 5483 	sra	b
      0015D2 CB 19                 5484 	rr	c
      0015D4 CB 28                 5485 	sra	b
      0015D6 CB 19                 5486 	rr	c
      0015D8 CB 28                 5487 	sra	b
      0015DA CB 19                 5488 	rr	c
      0015DC 58                    5489 	ld	e, b
      0015DD AF                    5490 	xor	a, a
      0015DE 57                    5491 	ld	d, a
      0015DF B9                    5492 	cp	a, c
      0015E0 98                    5493 	sbc	a, b
      0015E1 CB 7B                 5494 	bit	7, e
      0015E3 28 07                 5495 	jr	Z, 00421$
      0015E5 CB 7A                 5496 	bit	7, d
      0015E7 20 08                 5497 	jr	NZ, 00422$
      0015E9 BF                    5498 	cp	a, a
      0015EA 18 05                 5499 	jr	00422$
      0015EC                       5500 00421$:
      0015EC CB 7A                 5501 	bit	7, d
      0015EE 28 01                 5502 	jr	Z, 00422$
      0015F0 37                    5503 	scf
      0015F1                       5504 00422$:
      0015F1 30 30                 5505 	jr	NC, 00127$
                                   5506 ;src/main.c:538: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      0015F3 AF                    5507 	xor	a, a
      0015F4 91                    5508 	sub	a, c
      0015F5 4F                    5509 	ld	c, a
      0015F6 F8 0E                 5510 	ldhl	sp,	#14
      0015F8 71                    5511 	ld	(hl), c
                                   5512 ;src/main.c:539: enemies[i].x += xMovement;
      0015F9 D1                    5513 	pop	de
      0015FA D5                    5514 	push	de
      0015FB 1A                    5515 	ld	a, (de)
      0015FC 4F                    5516 	ld	c, a
      0015FD 13                    5517 	inc	de
      0015FE 1A                    5518 	ld	a, (de)
      0015FF 47                    5519 	ld	b, a
      001600 7E                    5520 	ld	a, (hl)
      001601 5F                    5521 	ld	e, a
      001602 07                    5522 	rlca
      001603 9F                    5523 	sbc	a, a
      001604 57                    5524 	ld	d, a
      001605 69                    5525 	ld	l, c
                                   5526 ;	spillPairReg hl
                                   5527 ;	spillPairReg hl
      001606 60                    5528 	ld	h, b
                                   5529 ;	spillPairReg hl
                                   5530 ;	spillPairReg hl
      001607 19                    5531 	add	hl, de
      001608 4D                    5532 	ld	c, l
      001609 44                    5533 	ld	b, h
      00160A E1                    5534 	pop	hl
      00160B E5                    5535 	push	hl
      00160C 79                    5536 	ld	a, c
      00160D 22                    5537 	ld	(hl+), a
      00160E 70                    5538 	ld	(hl), b
                                   5539 ;src/main.c:540: enemies[i].xReserve +=  (-xMovement) << 3;
      00160F F8 0C                 5540 	ldhl	sp,#12
      001611 2A                    5541 	ld	a, (hl+)
      001612 5F                    5542 	ld	e, a
      001613 2A                    5543 	ld	a, (hl+)
      001614 57                    5544 	ld	d, a
      001615 1A                    5545 	ld	a, (de)
      001616 4F                    5546 	ld	c, a
      001617 AF                    5547 	xor	a, a
      001618 96                    5548 	sub	a, (hl)
      001619 2B                    5549 	dec	hl
      00161A 87                    5550 	add	a, a
      00161B 87                    5551 	add	a, a
      00161C 87                    5552 	add	a, a
      00161D 81                    5553 	add	a, c
      00161E 4F                    5554 	ld	c, a
      00161F 3A                    5555 	ld	a, (hl-)
      001620 6E                    5556 	ld	l, (hl)
      001621 67                    5557 	ld	h, a
      001622 71                    5558 	ld	(hl), c
      001623                       5559 00127$:
                                   5560 ;src/main.c:527: enemies[i].yReserve += enemies[i].ySpeed;
      001623 F8 06                 5561 	ldhl	sp,#6
      001625 2A                    5562 	ld	a, (hl+)
      001626 5F                    5563 	ld	e, a
      001627 56                    5564 	ld	d, (hl)
      001628 1A                    5565 	ld	a, (de)
      001629 F8 0D                 5566 	ldhl	sp,	#13
      00162B 77                    5567 	ld	(hl), a
                                   5568 ;src/main.c:543: if (enemies[i].yReserve >> 3 > 0) {
      00162C 2A                    5569 	ld	a, (hl+)
      00162D CB 2F                 5570 	sra	a
      00162F CB 2F                 5571 	sra	a
      001631 CB 2F                 5572 	sra	a
      001633 77                    5573 	ld	(hl), a
      001634 5E                    5574 	ld	e, (hl)
      001635 AF                    5575 	xor	a, a
      001636 57                    5576 	ld	d, a
      001637 96                    5577 	sub	a, (hl)
      001638 CB 7B                 5578 	bit	7, e
      00163A 28 07                 5579 	jr	Z, 00423$
      00163C CB 7A                 5580 	bit	7, d
      00163E 20 08                 5581 	jr	NZ, 00424$
      001640 BF                    5582 	cp	a, a
      001641 18 05                 5583 	jr	00424$
      001643                       5584 00423$:
      001643 CB 7A                 5585 	bit	7, d
      001645 28 01                 5586 	jr	Z, 00424$
      001647 37                    5587 	scf
      001648                       5588 00424$:
      001648 30 59                 5589 	jr	NC, 00131$
                                   5590 ;src/main.c:544: int8_t yMovement = enemies[i].yReserve >> 3;
      00164A F8 0E                 5591 	ldhl	sp,	#14
      00164C 7E                    5592 	ld	a, (hl)
      00164D F8 08                 5593 	ldhl	sp,	#8
      00164F 77                    5594 	ld	(hl), a
                                   5595 ;src/main.c:545: enemies[i].y += yMovement;
      001650 F8 02                 5596 	ldhl	sp,#2
      001652 2A                    5597 	ld	a, (hl+)
      001653 5F                    5598 	ld	e, a
      001654 56                    5599 	ld	d, (hl)
      001655 1A                    5600 	ld	a, (de)
      001656 F8 0D                 5601 	ldhl	sp,	#13
      001658 22                    5602 	ld	(hl+), a
      001659 13                    5603 	inc	de
      00165A 1A                    5604 	ld	a, (de)
      00165B 77                    5605 	ld	(hl), a
      00165C F8 08                 5606 	ldhl	sp,	#8
      00165E 2A                    5607 	ld	a, (hl+)
      00165F 22                    5608 	ld	(hl+), a
      001660 07                    5609 	rlca
      001661 9F                    5610 	sbc	a, a
      001662 77                    5611 	ld	(hl), a
      001663 F8 0D                 5612 	ldhl	sp,	#13
      001665 3A                    5613 	ld	a, (hl-)
      001666 2B                    5614 	dec	hl
      001667 77                    5615 	ld	(hl), a
      001668 F8 0E                 5616 	ldhl	sp,	#14
      00166A 3A                    5617 	ld	a, (hl-)
      00166B 2B                    5618 	dec	hl
      00166C 32                    5619 	ld	(hl-), a
      00166D 2A                    5620 	ld	a, (hl+)
      00166E 5F                    5621 	ld	e, a
      00166F 56                    5622 	ld	d, (hl)
      001670 F8 09                 5623 	ldhl	sp,	#9
      001672 2A                    5624 	ld	a,	(hl+)
      001673 66                    5625 	ld	h, (hl)
      001674 6F                    5626 	ld	l, a
      001675 19                    5627 	add	hl, de
      001676 E5                    5628 	push	hl
      001677 7D                    5629 	ld	a, l
      001678 F8 0F                 5630 	ldhl	sp,	#15
      00167A 77                    5631 	ld	(hl), a
      00167B E1                    5632 	pop	hl
      00167C 7C                    5633 	ld	a, h
      00167D F8 0E                 5634 	ldhl	sp,	#14
      00167F 77                    5635 	ld	(hl), a
      001680 F8 02                 5636 	ldhl	sp,#2
      001682 2A                    5637 	ld	a, (hl+)
      001683 5F                    5638 	ld	e, a
      001684 56                    5639 	ld	d, (hl)
      001685 F8 0D                 5640 	ldhl	sp,	#13
      001687 2A                    5641 	ld	a, (hl+)
      001688 12                    5642 	ld	(de), a
      001689 13                    5643 	inc	de
      00168A 7E                    5644 	ld	a, (hl)
      00168B 12                    5645 	ld	(de), a
                                   5646 ;src/main.c:546: enemies[i].yReserve -=  yMovement << 3;
      00168C F8 06                 5647 	ldhl	sp,#6
      00168E 2A                    5648 	ld	a, (hl+)
      00168F 5F                    5649 	ld	e, a
      001690 2A                    5650 	ld	a, (hl+)
      001691 57                    5651 	ld	d, a
      001692 1A                    5652 	ld	a, (de)
      001693 F5                    5653 	push	af
      001694 3A                    5654 	ld	a, (hl-)
      001695 87                    5655 	add	a, a
      001696 87                    5656 	add	a, a
      001697 87                    5657 	add	a, a
      001698 4F                    5658 	ld	c, a
      001699 F1                    5659 	pop	af
      00169A 91                    5660 	sub	a, c
      00169B 4F                    5661 	ld	c, a
      00169C 3A                    5662 	ld	a, (hl-)
      00169D 6E                    5663 	ld	l, (hl)
      00169E 67                    5664 	ld	h, a
      00169F 71                    5665 	ld	(hl), c
      0016A0 C3r43r17              5666 	jp	00132$
      0016A3                       5667 00131$:
                                   5668 ;src/main.c:548: else if ((-enemies[i].yReserve) >> 3 > 0){
      0016A3 F8 0D                 5669 	ldhl	sp,	#13
      0016A5 7E                    5670 	ld	a, (hl)
      0016A6 F8 0A                 5671 	ldhl	sp,	#10
      0016A8 22                    5672 	ld	(hl+), a
      0016A9 07                    5673 	rlca
      0016AA 9F                    5674 	sbc	a, a
      0016AB 77                    5675 	ld	(hl), a
      0016AC 11 00 00              5676 	ld	de, #0x0000
      0016AF 3A                    5677 	ld	a, (hl-)
      0016B0 6E                    5678 	ld	l, (hl)
      0016B1 67                    5679 	ld	h, a
      0016B2 7B                    5680 	ld	a, e
      0016B3 95                    5681 	sub	a, l
      0016B4 5F                    5682 	ld	e, a
      0016B5 7A                    5683 	ld	a, d
      0016B6 9C                    5684 	sbc	a, h
      0016B7 F8 0E                 5685 	ldhl	sp,	#14
      0016B9 32                    5686 	ld	(hl-), a
      0016BA 7B                    5687 	ld	a, e
      0016BB 22                    5688 	ld	(hl+), a
      0016BC CB 2E                 5689 	sra	(hl)
      0016BE 2B                    5690 	dec	hl
      0016BF CB 1E                 5691 	rr	(hl)
      0016C1 23                    5692 	inc	hl
      0016C2 CB 2E                 5693 	sra	(hl)
      0016C4 2B                    5694 	dec	hl
      0016C5 CB 1E                 5695 	rr	(hl)
      0016C7 23                    5696 	inc	hl
      0016C8 CB 2E                 5697 	sra	(hl)
      0016CA 2B                    5698 	dec	hl
      0016CB CB 1E                 5699 	rr	(hl)
      0016CD AF                    5700 	xor	a, a
      0016CE 96                    5701 	sub	a, (hl)
      0016CF 23                    5702 	inc	hl
      0016D0 3E 00                 5703 	ld	a, #0x00
      0016D2 9E                    5704 	sbc	a, (hl)
      0016D3 3E 00                 5705 	ld	a, #0x00
      0016D5 57                    5706 	ld	d, a
      0016D6 CB 7E                 5707 	bit	7, (hl)
      0016D8 28 07                 5708 	jr	Z, 00425$
      0016DA CB 7A                 5709 	bit	7, d
      0016DC 20 08                 5710 	jr	NZ, 00426$
      0016DE BF                    5711 	cp	a, a
      0016DF 18 05                 5712 	jr	00426$
      0016E1                       5713 00425$:
      0016E1 CB 7A                 5714 	bit	7, d
      0016E3 28 01                 5715 	jr	Z, 00426$
      0016E5 37                    5716 	scf
      0016E6                       5717 00426$:
      0016E6 30 5B                 5718 	jr	NC, 00132$
                                   5719 ;src/main.c:549: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0016E8 F8 0D                 5720 	ldhl	sp,	#13
      0016EA 2A                    5721 	ld	a, (hl+)
      0016EB 4F                    5722 	ld	c, a
      0016EC AF                    5723 	xor	a, a
      0016ED 91                    5724 	sub	a, c
      0016EE 77                    5725 	ld	(hl), a
      0016EF 7E                    5726 	ld	a, (hl)
      0016F0 F8 08                 5727 	ldhl	sp,	#8
      0016F2 77                    5728 	ld	(hl), a
                                   5729 ;src/main.c:550: enemies[i].y += yMovement;
      0016F3 F8 02                 5730 	ldhl	sp,#2
      0016F5 2A                    5731 	ld	a, (hl+)
      0016F6 5F                    5732 	ld	e, a
      0016F7 56                    5733 	ld	d, (hl)
      0016F8 1A                    5734 	ld	a, (de)
      0016F9 F8 0D                 5735 	ldhl	sp,	#13
      0016FB 22                    5736 	ld	(hl+), a
      0016FC 13                    5737 	inc	de
      0016FD 1A                    5738 	ld	a, (de)
      0016FE 77                    5739 	ld	(hl), a
      0016FF F8 08                 5740 	ldhl	sp,	#8
      001701 2A                    5741 	ld	a, (hl+)
      001702 22                    5742 	ld	(hl+), a
      001703 07                    5743 	rlca
      001704 9F                    5744 	sbc	a, a
      001705 77                    5745 	ld	(hl), a
      001706 F8 0D                 5746 	ldhl	sp,	#13
      001708 3A                    5747 	ld	a, (hl-)
      001709 2B                    5748 	dec	hl
      00170A 77                    5749 	ld	(hl), a
      00170B F8 0E                 5750 	ldhl	sp,	#14
      00170D 3A                    5751 	ld	a, (hl-)
      00170E 2B                    5752 	dec	hl
      00170F 32                    5753 	ld	(hl-), a
      001710 2A                    5754 	ld	a, (hl+)
      001711 5F                    5755 	ld	e, a
      001712 56                    5756 	ld	d, (hl)
      001713 F8 09                 5757 	ldhl	sp,	#9
      001715 2A                    5758 	ld	a,	(hl+)
      001716 66                    5759 	ld	h, (hl)
      001717 6F                    5760 	ld	l, a
      001718 19                    5761 	add	hl, de
      001719 E5                    5762 	push	hl
      00171A 7D                    5763 	ld	a, l
      00171B F8 0F                 5764 	ldhl	sp,	#15
      00171D 77                    5765 	ld	(hl), a
      00171E E1                    5766 	pop	hl
      00171F 7C                    5767 	ld	a, h
      001720 F8 0E                 5768 	ldhl	sp,	#14
      001722 77                    5769 	ld	(hl), a
      001723 F8 02                 5770 	ldhl	sp,#2
      001725 2A                    5771 	ld	a, (hl+)
      001726 5F                    5772 	ld	e, a
      001727 56                    5773 	ld	d, (hl)
      001728 F8 0D                 5774 	ldhl	sp,	#13
      00172A 2A                    5775 	ld	a, (hl+)
      00172B 12                    5776 	ld	(de), a
      00172C 13                    5777 	inc	de
      00172D 7E                    5778 	ld	a, (hl)
      00172E 12                    5779 	ld	(de), a
                                   5780 ;src/main.c:551: enemies[i].yReserve +=  (-yMovement) << 3;
      00172F F8 06                 5781 	ldhl	sp,#6
      001731 2A                    5782 	ld	a, (hl+)
      001732 5F                    5783 	ld	e, a
      001733 2A                    5784 	ld	a, (hl+)
      001734 57                    5785 	ld	d, a
      001735 1A                    5786 	ld	a, (de)
      001736 4F                    5787 	ld	c, a
      001737 AF                    5788 	xor	a, a
      001738 96                    5789 	sub	a, (hl)
      001739 2B                    5790 	dec	hl
      00173A 87                    5791 	add	a, a
      00173B 87                    5792 	add	a, a
      00173C 87                    5793 	add	a, a
      00173D 81                    5794 	add	a, c
      00173E 4F                    5795 	ld	c, a
      00173F 3A                    5796 	ld	a, (hl-)
      001740 6E                    5797 	ld	l, (hl)
      001741 67                    5798 	ld	h, a
      001742 71                    5799 	ld	(hl), c
      001743                       5800 00132$:
                                   5801 ;src/main.c:556: if (auxTick == 1) {
      001743 FAr07r01              5802 	ld	a, (#_auxTick)
      001746 3D                    5803 	dec	a
      001747 C2r8Ar18              5804 	jp	NZ,00144$
                                   5805 ;src/main.c:558: if (enemies[i].spriteCount == 1) {
      00174A D1                    5806 	pop	de
      00174B D5                    5807 	push	de
      00174C 21 08 00              5808 	ld	hl, #0x0008
      00174F 19                    5809 	add	hl, de
      001750 4D                    5810 	ld	c, l
      001751 44                    5811 	ld	b, h
      001752 0A                    5812 	ld	a, (bc)
      001753 47                    5813 	ld	b, a
                                   5814 ;src/main.c:559: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001754 F8 0F                 5815 	ldhl	sp,	#15
      001756 3A                    5816 	ld	a, (hl-)
      001757 87                    5817 	add	a, a
      001758 4F                    5818 	ld	c, a
      001759 C6 0A                 5819 	add	a, #0x0a
      00175B 77                    5820 	ld	(hl), a
                                   5821 ;src/main.c:558: if (enemies[i].spriteCount == 1) {
      00175C 05                    5822 	dec	b
      00175D 20 51                 5823 	jr	NZ, 00140$
                                   5824 ;src/main.c:559: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00175F F8 02                 5825 	ldhl	sp,#2
      001761 2A                    5826 	ld	a, (hl+)
      001762 5F                    5827 	ld	e, a
      001763 56                    5828 	ld	d, (hl)
      001764 1A                    5829 	ld	a, (de)
      001765 C6 0C                 5830 	add	a, #0x0c
      001767 4F                    5831 	ld	c, a
      001768 D1                    5832 	pop	de
      001769 D5                    5833 	push	de
      00176A 1A                    5834 	ld	a, (de)
      00176B C6 04                 5835 	add	a, #0x04
      00176D 5F                    5836 	ld	e, a
      00176E F8 0E                 5837 	ldhl	sp,	#14
                                   5838 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001770 6E                    5839 	ld	l, (hl)
                                   5840 ;	spillPairReg hl
                                   5841 ;	spillPairReg hl
      001771 26 00                 5842 	ld	h, #0x00
                                   5843 ;	spillPairReg hl
                                   5844 ;	spillPairReg hl
      001773 29                    5845 	add	hl, hl
      001774 29                    5846 	add	hl, hl
      001775 D5                    5847 	push	de
      001776 11r00r00              5848 	ld	de, #_shadow_OAM
      001779 19                    5849 	add	hl, de
      00177A D1                    5850 	pop	de
                                   5851 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00177B 79                    5852 	ld	a, c
      00177C 22                    5853 	ld	(hl+), a
      00177D 73                    5854 	ld	(hl), e
                                   5855 ;src/main.c:560: if (enemies[i].xSpeed >= 0) {
      00177E F8 04                 5856 	ldhl	sp,#4
      001780 2A                    5857 	ld	a, (hl+)
      001781 5F                    5858 	ld	e, a
      001782 56                    5859 	ld	d, (hl)
      001783 1A                    5860 	ld	a, (de)
      001784 CB 7F                 5861 	bit	7,a
      001786 20 14                 5862 	jr	NZ, 00134$
                                   5863 ;src/main.c:561: set_sprite_prop(10+(i<<1), 0);
      001788 F8 0E                 5864 	ldhl	sp,	#14
      00178A 4E                    5865 	ld	c, (hl)
                                   5866 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00178B 26 00                 5867 	ld	h, #0x00
                                   5868 ;	spillPairReg hl
                                   5869 ;	spillPairReg hl
      00178D 69                    5870 	ld	l, c
      00178E 29                    5871 	add	hl, hl
      00178F 29                    5872 	add	hl, hl
      001790 11r00r00              5873 	ld	de, #_shadow_OAM
      001793 19                    5874 	add	hl, de
      001794 23                    5875 	inc	hl
      001795 23                    5876 	inc	hl
      001796 23                    5877 	inc	hl
      001797 36 00                 5878 	ld	(hl), #0x00
                                   5879 ;src/main.c:561: set_sprite_prop(10+(i<<1), 0);
      001799 C3r8Ar18              5880 	jp	00144$
      00179C                       5881 00134$:
                                   5882 ;src/main.c:564: set_sprite_prop(10+(i<<1), S_FLIPX);
      00179C F8 0E                 5883 	ldhl	sp,	#14
      00179E 4E                    5884 	ld	c, (hl)
                                   5885 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00179F 26 00                 5886 	ld	h, #0x00
                                   5887 ;	spillPairReg hl
                                   5888 ;	spillPairReg hl
      0017A1 69                    5889 	ld	l, c
      0017A2 29                    5890 	add	hl, hl
      0017A3 29                    5891 	add	hl, hl
      0017A4 11r00r00              5892 	ld	de, #_shadow_OAM
      0017A7 19                    5893 	add	hl, de
      0017A8 23                    5894 	inc	hl
      0017A9 23                    5895 	inc	hl
      0017AA 23                    5896 	inc	hl
      0017AB 36 20                 5897 	ld	(hl), #0x20
                                   5898 ;src/main.c:564: set_sprite_prop(10+(i<<1), S_FLIPX);
      0017AD C3r8Ar18              5899 	jp	00144$
      0017B0                       5900 00140$:
                                   5901 ;src/main.c:569: if (enemies[i].xSpeed >= 0) {
      0017B0 F8 04                 5902 	ldhl	sp,#4
      0017B2 2A                    5903 	ld	a, (hl+)
      0017B3 5F                    5904 	ld	e, a
      0017B4 56                    5905 	ld	d, (hl)
      0017B5 1A                    5906 	ld	a, (de)
      0017B6 CB 7F                 5907 	bit	7,a
      0017B8 20 6C                 5908 	jr	NZ, 00137$
                                   5909 ;src/main.c:570: set_sprite_prop(10+(i<<1), 0);
      0017BA F8 0E                 5910 	ldhl	sp,	#14
      0017BC 46                    5911 	ld	b, (hl)
                                   5912 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017BD 26 00                 5913 	ld	h, #0x00
                                   5914 ;	spillPairReg hl
                                   5915 ;	spillPairReg hl
      0017BF 68                    5916 	ld	l, b
      0017C0 29                    5917 	add	hl, hl
      0017C1 29                    5918 	add	hl, hl
      0017C2 11r00r00              5919 	ld	de, #_shadow_OAM
      0017C5 19                    5920 	add	hl, de
      0017C6 23                    5921 	inc	hl
      0017C7 23                    5922 	inc	hl
      0017C8 23                    5923 	inc	hl
      0017C9 36 00                 5924 	ld	(hl), #0x00
                                   5925 ;src/main.c:571: set_sprite_prop(10+(i<<1)+1, 0);
      0017CB 79                    5926 	ld	a, c
      0017CC C6 0B                 5927 	add	a, #0x0b
      0017CE 4F                    5928 	ld	c, a
                                   5929 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017CF 69                    5930 	ld	l, c
                                   5931 ;	spillPairReg hl
                                   5932 ;	spillPairReg hl
      0017D0 26 00                 5933 	ld	h, #0x00
                                   5934 ;	spillPairReg hl
                                   5935 ;	spillPairReg hl
      0017D2 29                    5936 	add	hl, hl
      0017D3 29                    5937 	add	hl, hl
      0017D4 11r00r00              5938 	ld	de, #_shadow_OAM
      0017D7 19                    5939 	add	hl, de
      0017D8 23                    5940 	inc	hl
      0017D9 23                    5941 	inc	hl
      0017DA 23                    5942 	inc	hl
      0017DB 36 00                 5943 	ld	(hl), #0x00
                                   5944 ;src/main.c:572: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      0017DD F8 02                 5945 	ldhl	sp,#2
      0017DF 2A                    5946 	ld	a, (hl+)
      0017E0 5F                    5947 	ld	e, a
      0017E1 56                    5948 	ld	d, (hl)
      0017E2 1A                    5949 	ld	a, (de)
      0017E3 C6 08                 5950 	add	a, #0x08
      0017E5 F8 0C                 5951 	ldhl	sp,	#12
      0017E7 22                    5952 	ld	(hl+), a
      0017E8 D1                    5953 	pop	de
      0017E9 D5                    5954 	push	de
      0017EA 1A                    5955 	ld	a, (de)
      0017EB 22                    5956 	ld	(hl+), a
      0017EC 46                    5957 	ld	b, (hl)
                                   5958 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017ED 11r00r00              5959 	ld	de, #_shadow_OAM+0
      0017F0 26 00                 5960 	ld	h, #0x00
                                   5961 ;	spillPairReg hl
                                   5962 ;	spillPairReg hl
      0017F2 68                    5963 	ld	l, b
      0017F3 29                    5964 	add	hl, hl
      0017F4 29                    5965 	add	hl, hl
      0017F5 19                    5966 	add	hl, de
      0017F6 5D                    5967 	ld	e, l
      0017F7 54                    5968 	ld	d, h
                                   5969 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017F8 F8 0C                 5970 	ldhl	sp,	#12
      0017FA 2A                    5971 	ld	a, (hl+)
      0017FB 12                    5972 	ld	(de), a
      0017FC 13                    5973 	inc	de
      0017FD 7E                    5974 	ld	a, (hl)
      0017FE 12                    5975 	ld	(de), a
                                   5976 ;src/main.c:573: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      0017FF F8 02                 5977 	ldhl	sp,#2
      001801 2A                    5978 	ld	a, (hl+)
      001802 5F                    5979 	ld	e, a
      001803 56                    5980 	ld	d, (hl)
      001804 1A                    5981 	ld	a, (de)
      001805 C6 08                 5982 	add	a, #0x08
      001807 F8 0E                 5983 	ldhl	sp,	#14
      001809 77                    5984 	ld	(hl), a
      00180A D1                    5985 	pop	de
      00180B D5                    5986 	push	de
      00180C 1A                    5987 	ld	a, (de)
      00180D C6 08                 5988 	add	a, #0x08
      00180F 5F                    5989 	ld	e, a
                                   5990 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001810 26 00                 5991 	ld	h, #0x00
                                   5992 ;	spillPairReg hl
                                   5993 ;	spillPairReg hl
      001812 69                    5994 	ld	l, c
      001813 29                    5995 	add	hl, hl
      001814 29                    5996 	add	hl, hl
      001815 7D                    5997 	ld	a, l
      001816 C6r00                 5998 	add	a, #<(_shadow_OAM)
      001818 4F                    5999 	ld	c, a
      001819 7C                    6000 	ld	a, h
      00181A CEs00                 6001 	adc	a, #>(_shadow_OAM)
      00181C 47                    6002 	ld	b, a
                                   6003 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00181D F8 0E                 6004 	ldhl	sp,	#14
      00181F 7E                    6005 	ld	a, (hl)
      001820 02                    6006 	ld	(bc), a
      001821 03                    6007 	inc	bc
      001822 7B                    6008 	ld	a, e
      001823 02                    6009 	ld	(bc), a
                                   6010 ;src/main.c:573: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001824 18 64                 6011 	jr	00144$
      001826                       6012 00137$:
                                   6013 ;src/main.c:576: set_sprite_prop(10+(i<<1), S_FLIPX);
      001826 F8 0E                 6014 	ldhl	sp,	#14
                                   6015 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001828 6E                    6016 	ld	l, (hl)
                                   6017 ;	spillPairReg hl
                                   6018 ;	spillPairReg hl
      001829 26 00                 6019 	ld	h, #0x00
                                   6020 ;	spillPairReg hl
                                   6021 ;	spillPairReg hl
      00182B 29                    6022 	add	hl, hl
      00182C 29                    6023 	add	hl, hl
      00182D 11r00r00              6024 	ld	de, #_shadow_OAM
      001830 19                    6025 	add	hl, de
      001831 23                    6026 	inc	hl
      001832 23                    6027 	inc	hl
      001833 23                    6028 	inc	hl
      001834 36 20                 6029 	ld	(hl), #0x20
                                   6030 ;src/main.c:577: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001836 79                    6031 	ld	a, c
      001837 C6 0B                 6032 	add	a, #0x0b
      001839 F8 0D                 6033 	ldhl	sp,	#13
      00183B 77                    6034 	ld	(hl), a
      00183C 4E                    6035 	ld	c, (hl)
                                   6036 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00183D 26 00                 6037 	ld	h, #0x00
                                   6038 ;	spillPairReg hl
                                   6039 ;	spillPairReg hl
      00183F 69                    6040 	ld	l, c
      001840 29                    6041 	add	hl, hl
      001841 29                    6042 	add	hl, hl
      001842 11r00r00              6043 	ld	de, #_shadow_OAM
      001845 19                    6044 	add	hl, de
      001846 23                    6045 	inc	hl
      001847 23                    6046 	inc	hl
      001848 23                    6047 	inc	hl
      001849 36 20                 6048 	ld	(hl), #0x20
                                   6049 ;src/main.c:578: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      00184B F8 02                 6050 	ldhl	sp,#2
      00184D 2A                    6051 	ld	a, (hl+)
      00184E 5F                    6052 	ld	e, a
      00184F 56                    6053 	ld	d, (hl)
      001850 1A                    6054 	ld	a, (de)
      001851 C6 08                 6055 	add	a, #0x08
      001853 4F                    6056 	ld	c, a
      001854 D1                    6057 	pop	de
      001855 D5                    6058 	push	de
      001856 1A                    6059 	ld	a, (de)
      001857 C6 08                 6060 	add	a, #0x08
      001859 5F                    6061 	ld	e, a
      00185A F8 0E                 6062 	ldhl	sp,	#14
                                   6063 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00185C 6E                    6064 	ld	l, (hl)
                                   6065 ;	spillPairReg hl
                                   6066 ;	spillPairReg hl
      00185D 26 00                 6067 	ld	h, #0x00
                                   6068 ;	spillPairReg hl
                                   6069 ;	spillPairReg hl
      00185F 29                    6070 	add	hl, hl
      001860 29                    6071 	add	hl, hl
      001861 D5                    6072 	push	de
      001862 11r00r00              6073 	ld	de, #_shadow_OAM
      001865 19                    6074 	add	hl, de
      001866 D1                    6075 	pop	de
                                   6076 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001867 79                    6077 	ld	a, c
      001868 22                    6078 	ld	(hl+), a
      001869 73                    6079 	ld	(hl), e
                                   6080 ;src/main.c:579: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00186A F8 02                 6081 	ldhl	sp,#2
      00186C 2A                    6082 	ld	a, (hl+)
      00186D 5F                    6083 	ld	e, a
      00186E 56                    6084 	ld	d, (hl)
      00186F 1A                    6085 	ld	a, (de)
      001870 C6 08                 6086 	add	a, #0x08
      001872 4F                    6087 	ld	c, a
      001873 D1                    6088 	pop	de
      001874 D5                    6089 	push	de
      001875 1A                    6090 	ld	a, (de)
      001876 F8 0E                 6091 	ldhl	sp,	#14
      001878 32                    6092 	ld	(hl-), a
                                   6093 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001879 6E                    6094 	ld	l, (hl)
                                   6095 ;	spillPairReg hl
                                   6096 ;	spillPairReg hl
      00187A 26 00                 6097 	ld	h, #0x00
                                   6098 ;	spillPairReg hl
                                   6099 ;	spillPairReg hl
      00187C 29                    6100 	add	hl, hl
      00187D 29                    6101 	add	hl, hl
      00187E 11r00r00              6102 	ld	de, #_shadow_OAM
      001881 19                    6103 	add	hl, de
                                   6104 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001882 79                    6105 	ld	a, c
      001883 22                    6106 	ld	(hl+), a
      001884 4D                    6107 	ld	c, l
      001885 44                    6108 	ld	b, h
      001886 F8 0E                 6109 	ldhl	sp,	#14
      001888 7E                    6110 	ld	a, (hl)
      001889 02                    6111 	ld	(bc), a
                                   6112 ;src/main.c:579: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00188A                       6113 00144$:
                                   6114 ;src/main.c:487: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00188A F8 0F                 6115 	ldhl	sp,	#15
      00188C 34                    6116 	inc	(hl)
      00188D C3r6Er12              6117 	jp	00197$
      001890                       6118 00145$:
                                   6119 ;src/main.c:589: uint8_t i = enemyCollisionCount;
      001890 FArEDr00              6120 	ld	a, (#_enemyCollisionCount)
      001893 F8 01                 6121 	ldhl	sp,	#1
      001895 77                    6122 	ld	(hl), a
                                   6123 ;src/main.c:591: if (enemies[i].alive) {
      001896 4E                    6124 	ld	c, (hl)
      001897 06 00                 6125 	ld	b, #0x00
      001899 69                    6126 	ld	l, c
      00189A 60                    6127 	ld	h, b
      00189B 29                    6128 	add	hl, hl
      00189C 29                    6129 	add	hl, hl
      00189D 29                    6130 	add	hl, hl
      00189E 09                    6131 	add	hl, bc
      00189F 29                    6132 	add	hl, hl
      0018A0 01r5Ar00              6133 	ld	bc,#_enemies
      0018A3 09                    6134 	add	hl,bc
      0018A4 E5                    6135 	push	hl
      0018A5 7D                    6136 	ld	a, l
      0018A6 F8 04                 6137 	ldhl	sp,	#4
      0018A8 77                    6138 	ld	(hl), a
      0018A9 E1                    6139 	pop	hl
      0018AA 7C                    6140 	ld	a, h
      0018AB F8 03                 6141 	ldhl	sp,	#3
      0018AD 32                    6142 	ld	(hl-), a
      0018AE 2A                    6143 	ld	a, (hl+)
      0018AF 5F                    6144 	ld	e, a
      0018B0 56                    6145 	ld	d, (hl)
      0018B1 21 09 00              6146 	ld	hl, #0x0009
      0018B4 19                    6147 	add	hl, de
      0018B5 E5                    6148 	push	hl
      0018B6 7D                    6149 	ld	a, l
      0018B7 F8 06                 6150 	ldhl	sp,	#6
      0018B9 77                    6151 	ld	(hl), a
      0018BA E1                    6152 	pop	hl
      0018BB 7C                    6153 	ld	a, h
      0018BC F8 05                 6154 	ldhl	sp,	#5
      0018BE 32                    6155 	ld	(hl-), a
      0018BF 2A                    6156 	ld	a, (hl+)
      0018C0 5F                    6157 	ld	e, a
      0018C1 56                    6158 	ld	d, (hl)
      0018C2 1A                    6159 	ld	a, (de)
      0018C3 F8 0F                 6160 	ldhl	sp,	#15
      0018C5 77                    6161 	ld	(hl), a
      0018C6 7E                    6162 	ld	a, (hl)
      0018C7 B7                    6163 	or	a, a
      0018C8 CAr86r1B              6164 	jp	Z, 00198$
                                   6165 ;src/main.c:592: if (enemies[i].visible == 1) {
      0018CB F8 02                 6166 	ldhl	sp,#2
      0018CD 2A                    6167 	ld	a, (hl+)
      0018CE 5F                    6168 	ld	e, a
      0018CF 56                    6169 	ld	d, (hl)
      0018D0 21 0A 00              6170 	ld	hl, #0x000a
      0018D3 19                    6171 	add	hl, de
      0018D4 4D                    6172 	ld	c, l
      0018D5 44                    6173 	ld	b, h
      0018D6 0A                    6174 	ld	a, (bc)
      0018D7 F8 06                 6175 	ldhl	sp,	#6
      0018D9 77                    6176 	ld	(hl), a
                                   6177 ;src/main.c:593: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018DA F8 02                 6178 	ldhl	sp,#2
      0018DC 2A                    6179 	ld	a, (hl+)
      0018DD 5F                    6180 	ld	e, a
      0018DE 56                    6181 	ld	d, (hl)
      0018DF 1A                    6182 	ld	a, (de)
      0018E0 F8 07                 6183 	ldhl	sp,	#7
      0018E2 22                    6184 	ld	(hl+), a
      0018E3 13                    6185 	inc	de
      0018E4 1A                    6186 	ld	a, (de)
      0018E5 77                    6187 	ld	(hl), a
      0018E6 F8 02                 6188 	ldhl	sp,#2
      0018E8 2A                    6189 	ld	a, (hl+)
      0018E9 5F                    6190 	ld	e, a
      0018EA 56                    6191 	ld	d, (hl)
      0018EB 21 02 00              6192 	ld	hl, #0x0002
      0018EE 19                    6193 	add	hl, de
      0018EF E5                    6194 	push	hl
      0018F0 7D                    6195 	ld	a, l
      0018F1 F8 0B                 6196 	ldhl	sp,	#11
      0018F3 77                    6197 	ld	(hl), a
      0018F4 E1                    6198 	pop	hl
      0018F5 7C                    6199 	ld	a, h
      0018F6 F8 0A                 6200 	ldhl	sp,	#10
      0018F8 77                    6201 	ld	(hl), a
                                   6202 ;src/main.c:595: set_sprite_tile(10+(i<<1), 0x7f);
      0018F9 F8 01                 6203 	ldhl	sp,	#1
      0018FB 5E                    6204 	ld	e, (hl)
                                   6205 ;src/main.c:593: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018FC F8 07                 6206 	ldhl	sp,	#7
      0018FE 7E                    6207 	ld	a, (hl)
      0018FF F8 0B                 6208 	ldhl	sp,	#11
      001901 77                    6209 	ld	(hl), a
      001902 F8 08                 6210 	ldhl	sp,	#8
      001904 7E                    6211 	ld	a, (hl)
      001905 F8 0C                 6212 	ldhl	sp,	#12
                                   6213 ;src/main.c:595: set_sprite_tile(10+(i<<1), 0x7f);
      001907 22                    6214 	ld	(hl+), a
      001908 7B                    6215 	ld	a, e
      001909 87                    6216 	add	a, a
                                   6217 ;src/main.c:593: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00190A 32                    6218 	ld	(hl-), a
      00190B 2A                    6219 	ld	a, (hl+)
      00190C 23                    6220 	inc	hl
      00190D 07                    6221 	rlca
      00190E E6 01                 6222 	and	a,#0x01
                                   6223 ;src/main.c:595: set_sprite_tile(10+(i<<1), 0x7f);
      001910 32                    6224 	ld	(hl-), a
      001911 2A                    6225 	ld	a, (hl+)
      001912 23                    6226 	inc	hl
      001913 C6 0A                 6227 	add	a, #0x0a
      001915 77                    6228 	ld	(hl), a
                                   6229 ;src/main.c:592: if (enemies[i].visible == 1) {
      001916 F8 06                 6230 	ldhl	sp,	#6
      001918 7E                    6231 	ld	a, (hl)
      001919 3D                    6232 	dec	a
      00191A 20 74                 6233 	jr	NZ, 00165$
                                   6234 ;src/main.c:593: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00191C F8 0E                 6235 	ldhl	sp,	#14
      00191E 7E                    6236 	ld	a, (hl)
      00191F B7                    6237 	or	a, a
      001920 20 48                 6238 	jr	NZ, 00146$
      001922 F8 0B                 6239 	ldhl	sp,	#11
      001924 3E AC                 6240 	ld	a, #0xac
      001926 96                    6241 	sub	a, (hl)
      001927 23                    6242 	inc	hl
      001928 3E 00                 6243 	ld	a, #0x00
      00192A 9E                    6244 	sbc	a, (hl)
      00192B 3E 00                 6245 	ld	a, #0x00
      00192D 57                    6246 	ld	d, a
      00192E CB 7E                 6247 	bit	7, (hl)
      001930 28 07                 6248 	jr	Z, 00433$
      001932 CB 7A                 6249 	bit	7, d
      001934 20 08                 6250 	jr	NZ, 00434$
      001936 BF                    6251 	cp	a, a
      001937 18 05                 6252 	jr	00434$
      001939                       6253 00433$:
      001939 CB 7A                 6254 	bit	7, d
      00193B 28 01                 6255 	jr	Z, 00434$
      00193D 37                    6256 	scf
      00193E                       6257 00434$:
      00193E 38 2A                 6258 	jr	C, 00146$
      001940 F8 09                 6259 	ldhl	sp,#9
      001942 2A                    6260 	ld	a, (hl+)
      001943 5F                    6261 	ld	e, a
      001944 56                    6262 	ld	d, (hl)
      001945 1A                    6263 	ld	a, (de)
      001946 6F                    6264 	ld	l, a
                                   6265 ;	spillPairReg hl
                                   6266 ;	spillPairReg hl
      001947 13                    6267 	inc	de
      001948 1A                    6268 	ld	a, (de)
      001949 67                    6269 	ld	h, a
                                   6270 ;	spillPairReg hl
                                   6271 ;	spillPairReg hl
      00194A CB 7C                 6272 	bit	7, h
      00194C 20 1C                 6273 	jr	NZ, 00146$
      00194E 5C                    6274 	ld	e, h
      00194F 16 00                 6275 	ld	d, #0x00
      001951 3E 98                 6276 	ld	a, #0x98
      001953 BD                    6277 	cp	a, l
      001954 3E 00                 6278 	ld	a, #0x00
      001956 9C                    6279 	sbc	a, h
      001957 CB 7B                 6280 	bit	7, e
      001959 28 07                 6281 	jr	Z, 00435$
      00195B CB 7A                 6282 	bit	7, d
      00195D 20 08                 6283 	jr	NZ, 00436$
      00195F BF                    6284 	cp	a, a
      001960 18 05                 6285 	jr	00436$
      001962                       6286 00435$:
      001962 CB 7A                 6287 	bit	7, d
      001964 28 01                 6288 	jr	Z, 00436$
      001966 37                    6289 	scf
      001967                       6290 00436$:
      001967 D2r86r1B              6291 	jp	NC, 00198$
      00196A                       6292 00146$:
                                   6293 ;src/main.c:594: enemies[i].visible = 0;
      00196A AF                    6294 	xor	a, a
      00196B 02                    6295 	ld	(bc), a
                                   6296 ;src/main.c:595: set_sprite_tile(10+(i<<1), 0x7f);
      00196C F8 0F                 6297 	ldhl	sp,	#15
                                   6298 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00196E 6E                    6299 	ld	l, (hl)
      00196F 11r00r00              6300 	ld	de, #_shadow_OAM+0
                                   6301 ;	spillPairReg hl
                                   6302 ;	spillPairReg hl
      001972 26 00                 6303 	ld	h, #0x00
                                   6304 ;	spillPairReg hl
                                   6305 ;	spillPairReg hl
      001974 29                    6306 	add	hl, hl
      001975 29                    6307 	add	hl, hl
      001976 19                    6308 	add	hl, de
      001977 23                    6309 	inc	hl
      001978 23                    6310 	inc	hl
      001979 36 7F                 6311 	ld	(hl), #0x7f
                                   6312 ;src/main.c:596: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00197B F8 0D                 6313 	ldhl	sp,	#13
      00197D 7E                    6314 	ld	a, (hl)
      00197E C6 0B                 6315 	add	a, #0x0b
                                   6316 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001980 6F                    6317 	ld	l, a
      001981 11r00r00              6318 	ld	de, #_shadow_OAM+0
                                   6319 ;	spillPairReg hl
                                   6320 ;	spillPairReg hl
      001984 26 00                 6321 	ld	h, #0x00
                                   6322 ;	spillPairReg hl
                                   6323 ;	spillPairReg hl
      001986 29                    6324 	add	hl, hl
      001987 29                    6325 	add	hl, hl
      001988 19                    6326 	add	hl, de
      001989 23                    6327 	inc	hl
      00198A 23                    6328 	inc	hl
      00198B 36 7F                 6329 	ld	(hl), #0x7f
                                   6330 ;src/main.c:596: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00198D C3r86r1B              6331 	jp	00198$
      001990                       6332 00165$:
                                   6333 ;src/main.c:600: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001990 F8 0E                 6334 	ldhl	sp,	#14
      001992 CB 46                 6335 	bit	0, (hl)
      001994 C2r91r1A              6336 	jp	NZ, 00159$
      001997 F8 0B                 6337 	ldhl	sp,	#11
      001999 2A                    6338 	ld	a, (hl+)
      00199A D6 AC                 6339 	sub	a, #0xac
      00199C 7E                    6340 	ld	a, (hl)
      00199D DE 00                 6341 	sbc	a, #0x00
      00199F 56                    6342 	ld	d, (hl)
      0019A0 3E 00                 6343 	ld	a, #0x00
      0019A2 CB 7F                 6344 	bit	7,a
      0019A4 28 07                 6345 	jr	Z, 00437$
      0019A6 CB 7A                 6346 	bit	7, d
      0019A8 20 08                 6347 	jr	NZ, 00438$
      0019AA BF                    6348 	cp	a, a
      0019AB 18 05                 6349 	jr	00438$
      0019AD                       6350 00437$:
      0019AD CB 7A                 6351 	bit	7, d
      0019AF 28 01                 6352 	jr	Z, 00438$
      0019B1 37                    6353 	scf
      0019B2                       6354 00438$:
      0019B2 D2r91r1A              6355 	jp	NC, 00159$
      0019B5 F8 09                 6356 	ldhl	sp,#9
      0019B7 2A                    6357 	ld	a, (hl+)
      0019B8 5F                    6358 	ld	e, a
      0019B9 56                    6359 	ld	d, (hl)
      0019BA 1A                    6360 	ld	a, (de)
      0019BB 6F                    6361 	ld	l, a
                                   6362 ;	spillPairReg hl
                                   6363 ;	spillPairReg hl
      0019BC 13                    6364 	inc	de
      0019BD 1A                    6365 	ld	a, (de)
      0019BE 67                    6366 	ld	h, a
                                   6367 ;	spillPairReg hl
                                   6368 ;	spillPairReg hl
      0019BF 5C                    6369 	ld	e, h
      0019C0 AF                    6370 	xor	a, a
      0019C1 57                    6371 	ld	d, a
      0019C2 BD                    6372 	cp	a, l
      0019C3 9C                    6373 	sbc	a, h
      0019C4 CB 7B                 6374 	bit	7, e
      0019C6 28 07                 6375 	jr	Z, 00439$
      0019C8 CB 7A                 6376 	bit	7, d
      0019CA 20 08                 6377 	jr	NZ, 00440$
      0019CC BF                    6378 	cp	a, a
      0019CD 18 05                 6379 	jr	00440$
      0019CF                       6380 00439$:
      0019CF CB 7A                 6381 	bit	7, d
      0019D1 28 01                 6382 	jr	Z, 00440$
      0019D3 37                    6383 	scf
      0019D4                       6384 00440$:
      0019D4 D2r91r1A              6385 	jp	NC, 00159$
      0019D7 7D                    6386 	ld	a, l
      0019D8 D6 98                 6387 	sub	a, #0x98
      0019DA 7C                    6388 	ld	a, h
      0019DB 17                    6389 	rla
      0019DC 3F                    6390 	ccf
      0019DD 1F                    6391 	rra
      0019DE DE 80                 6392 	sbc	a, #0x80
      0019E0 D2r91r1A              6393 	jp	NC, 00159$
                                   6394 ;src/main.c:601: enemies[i].visible = 1;
      0019E3 3E 01                 6395 	ld	a, #0x01
      0019E5 02                    6396 	ld	(bc), a
                                   6397 ;src/main.c:602: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      0019E6 F8 02                 6398 	ldhl	sp,#2
      0019E8 2A                    6399 	ld	a, (hl+)
      0019E9 5F                    6400 	ld	e, a
      0019EA 56                    6401 	ld	d, (hl)
      0019EB 21 06 00              6402 	ld	hl, #0x0006
      0019EE 19                    6403 	add	hl, de
      0019EF 4D                    6404 	ld	c, l
      0019F0 44                    6405 	ld	b, h
      0019F1 0A                    6406 	ld	a, (bc)
      0019F2 F8 0E                 6407 	ldhl	sp,	#14
      0019F4 22                    6408 	ld	(hl+), a
      0019F5 4E                    6409 	ld	c, (hl)
                                   6410 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0019F6 F8 0B                 6411 	ldhl	sp,	#11
      0019F8 79                    6412 	ld	a, c
      0019F9 22                    6413 	ld	(hl+), a
      0019FA 36 00                 6414 	ld	(hl), #0x00
      0019FC 3E 02                 6415 	ld	a, #0x02
      0019FE                       6416 00441$:
      0019FE F8 0B                 6417 	ldhl	sp,	#11
      001A00 CB 26                 6418 	sla	(hl)
      001A02 23                    6419 	inc	hl
      001A03 CB 16                 6420 	rl	(hl)
      001A05 3D                    6421 	dec	a
      001A06 20 F6                 6422 	jr	NZ, 00441$
      001A08 2B                    6423 	dec	hl
      001A09 2A                    6424 	ld	a, (hl+)
      001A0A 5F                    6425 	ld	e, a
      001A0B 56                    6426 	ld	d, (hl)
      001A0C 21r00r00              6427 	ld	hl, #_shadow_OAM
      001A0F 19                    6428 	add	hl, de
      001A10 E5                    6429 	push	hl
      001A11 7D                    6430 	ld	a, l
      001A12 F8 0B                 6431 	ldhl	sp,	#11
      001A14 77                    6432 	ld	(hl), a
      001A15 E1                    6433 	pop	hl
      001A16 7C                    6434 	ld	a, h
      001A17 F8 0A                 6435 	ldhl	sp,	#10
      001A19 32                    6436 	ld	(hl-), a
      001A1A 2A                    6437 	ld	a, (hl+)
      001A1B 5F                    6438 	ld	e, a
      001A1C 56                    6439 	ld	d, (hl)
      001A1D 21 02 00              6440 	ld	hl, #0x0002
      001A20 19                    6441 	add	hl, de
      001A21 E5                    6442 	push	hl
      001A22 7D                    6443 	ld	a, l
      001A23 F8 0D                 6444 	ldhl	sp,	#13
      001A25 77                    6445 	ld	(hl), a
      001A26 E1                    6446 	pop	hl
      001A27 7C                    6447 	ld	a, h
      001A28 F8 0C                 6448 	ldhl	sp,	#12
      001A2A 32                    6449 	ld	(hl-), a
      001A2B 2A                    6450 	ld	a, (hl+)
      001A2C 5F                    6451 	ld	e, a
      001A2D 2A                    6452 	ld	a, (hl+)
      001A2E 23                    6453 	inc	hl
      001A2F 57                    6454 	ld	d, a
      001A30 7E                    6455 	ld	a, (hl)
      001A31 12                    6456 	ld	(de), a
                                   6457 ;src/main.c:603: if (enemies[i].spriteCount == 2) {
      001A32 F8 02                 6458 	ldhl	sp,#2
      001A34 2A                    6459 	ld	a, (hl+)
      001A35 5F                    6460 	ld	e, a
      001A36 56                    6461 	ld	d, (hl)
      001A37 21 08 00              6462 	ld	hl, #0x0008
      001A3A 19                    6463 	add	hl, de
      001A3B 4D                    6464 	ld	c, l
      001A3C 44                    6465 	ld	b, h
      001A3D 0A                    6466 	ld	a, (bc)
      001A3E D6 02                 6467 	sub	a, #0x02
      001A40 C2r86r1B              6468 	jp	NZ,00198$
                                   6469 ;src/main.c:604: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001A43 F8 02                 6470 	ldhl	sp,#2
      001A45 2A                    6471 	ld	a, (hl+)
      001A46 5F                    6472 	ld	e, a
      001A47 56                    6473 	ld	d, (hl)
      001A48 21 07 00              6474 	ld	hl, #0x0007
      001A4B 19                    6475 	add	hl, de
      001A4C 4D                    6476 	ld	c, l
      001A4D 44                    6477 	ld	b, h
      001A4E 0A                    6478 	ld	a, (bc)
      001A4F F8 0F                 6479 	ldhl	sp,	#15
      001A51 32                    6480 	ld	(hl-), a
      001A52 2B                    6481 	dec	hl
      001A53 7E                    6482 	ld	a, (hl)
      001A54 C6 0B                 6483 	add	a, #0x0b
                                   6484 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A56 22                    6485 	ld	(hl+), a
      001A57 36 00                 6486 	ld	(hl), #0x00
      001A59 3E 02                 6487 	ld	a, #0x02
      001A5B                       6488 00444$:
      001A5B F8 0D                 6489 	ldhl	sp,	#13
      001A5D CB 26                 6490 	sla	(hl)
      001A5F 23                    6491 	inc	hl
      001A60 CB 16                 6492 	rl	(hl)
      001A62 3D                    6493 	dec	a
      001A63 20 F6                 6494 	jr	NZ, 00444$
      001A65 2B                    6495 	dec	hl
      001A66 2A                    6496 	ld	a, (hl+)
      001A67 5F                    6497 	ld	e, a
      001A68 56                    6498 	ld	d, (hl)
      001A69 21r00r00              6499 	ld	hl, #_shadow_OAM
      001A6C 19                    6500 	add	hl, de
      001A6D E5                    6501 	push	hl
      001A6E 7D                    6502 	ld	a, l
      001A6F F8 0D                 6503 	ldhl	sp,	#13
      001A71 77                    6504 	ld	(hl), a
      001A72 E1                    6505 	pop	hl
      001A73 7C                    6506 	ld	a, h
      001A74 F8 0C                 6507 	ldhl	sp,	#12
      001A76 32                    6508 	ld	(hl-), a
      001A77 2A                    6509 	ld	a, (hl+)
      001A78 5F                    6510 	ld	e, a
      001A79 56                    6511 	ld	d, (hl)
      001A7A 21 02 00              6512 	ld	hl, #0x0002
      001A7D 19                    6513 	add	hl, de
      001A7E E5                    6514 	push	hl
      001A7F 7D                    6515 	ld	a, l
      001A80 F8 0F                 6516 	ldhl	sp,	#15
      001A82 77                    6517 	ld	(hl), a
      001A83 E1                    6518 	pop	hl
      001A84 7C                    6519 	ld	a, h
      001A85 F8 0E                 6520 	ldhl	sp,	#14
      001A87 32                    6521 	ld	(hl-), a
      001A88 2A                    6522 	ld	a, (hl+)
      001A89 5F                    6523 	ld	e, a
      001A8A 2A                    6524 	ld	a, (hl+)
      001A8B 57                    6525 	ld	d, a
      001A8C 7E                    6526 	ld	a, (hl)
      001A8D 12                    6527 	ld	(de), a
                                   6528 ;src/main.c:604: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001A8E C3r86r1B              6529 	jp	00198$
      001A91                       6530 00159$:
                                   6531 ;src/main.c:607: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001A91 F8 07                 6532 	ldhl	sp,	#7
      001A93 2A                    6533 	ld	a, (hl+)
      001A94 D6 9C                 6534 	sub	a, #0x9c
      001A96 7E                    6535 	ld	a, (hl)
      001A97 DE FF                 6536 	sbc	a, #0xff
      001A99 56                    6537 	ld	d, (hl)
      001A9A 3E FF                 6538 	ld	a, #0xff
      001A9C CB 7F                 6539 	bit	7,a
      001A9E 28 07                 6540 	jr	Z, 00445$
      001AA0 CB 7A                 6541 	bit	7, d
      001AA2 20 08                 6542 	jr	NZ, 00446$
      001AA4 BF                    6543 	cp	a, a
      001AA5 18 05                 6544 	jr	00446$
      001AA7                       6545 00445$:
      001AA7 CB 7A                 6546 	bit	7, d
      001AA9 28 01                 6547 	jr	Z, 00446$
      001AAB 37                    6548 	scf
      001AAC                       6549 00446$:
      001AAC 38 4F                 6550 	jr	C, 00153$
      001AAE F8 0B                 6551 	ldhl	sp,	#11
      001AB0 3E 10                 6552 	ld	a, #0x10
      001AB2 96                    6553 	sub	a, (hl)
      001AB3 23                    6554 	inc	hl
      001AB4 3E 01                 6555 	ld	a, #0x01
      001AB6 9E                    6556 	sbc	a, (hl)
      001AB7 3E 01                 6557 	ld	a, #0x01
      001AB9 57                    6558 	ld	d, a
      001ABA CB 7E                 6559 	bit	7, (hl)
      001ABC 28 07                 6560 	jr	Z, 00447$
      001ABE CB 7A                 6561 	bit	7, d
      001AC0 20 08                 6562 	jr	NZ, 00448$
      001AC2 BF                    6563 	cp	a, a
      001AC3 18 05                 6564 	jr	00448$
      001AC5                       6565 00447$:
      001AC5 CB 7A                 6566 	bit	7, d
      001AC7 28 01                 6567 	jr	Z, 00448$
      001AC9 37                    6568 	scf
      001ACA                       6569 00448$:
      001ACA 38 31                 6570 	jr	C, 00153$
      001ACC F8 09                 6571 	ldhl	sp,#9
      001ACE 2A                    6572 	ld	a, (hl+)
      001ACF 5F                    6573 	ld	e, a
      001AD0 56                    6574 	ld	d, (hl)
      001AD1 1A                    6575 	ld	a, (de)
      001AD2 4F                    6576 	ld	c, a
      001AD3 13                    6577 	inc	de
      001AD4 1A                    6578 	ld	a, (de)
      001AD5 47                    6579 	ld	b, a
      001AD6 79                    6580 	ld	a, c
      001AD7 D6 9C                 6581 	sub	a, #0x9c
      001AD9 78                    6582 	ld	a, b
      001ADA 17                    6583 	rla
      001ADB 3F                    6584 	ccf
      001ADC 1F                    6585 	rra
      001ADD DE 7F                 6586 	sbc	a, #0x7f
      001ADF 38 1C                 6587 	jr	C, 00153$
      001AE1 58                    6588 	ld	e, b
      001AE2 16 00                 6589 	ld	d, #0x00
      001AE4 3E FC                 6590 	ld	a, #0xfc
      001AE6 B9                    6591 	cp	a, c
      001AE7 3E 00                 6592 	ld	a, #0x00
      001AE9 98                    6593 	sbc	a, b
      001AEA CB 7B                 6594 	bit	7, e
      001AEC 28 07                 6595 	jr	Z, 00449$
      001AEE CB 7A                 6596 	bit	7, d
      001AF0 20 08                 6597 	jr	NZ, 00450$
      001AF2 BF                    6598 	cp	a, a
      001AF3 18 05                 6599 	jr	00450$
      001AF5                       6600 00449$:
      001AF5 CB 7A                 6601 	bit	7, d
      001AF7 28 01                 6602 	jr	Z, 00450$
      001AF9 37                    6603 	scf
      001AFA                       6604 00450$:
      001AFA D2r86r1B              6605 	jp	NC, 00198$
      001AFD                       6606 00153$:
                                   6607 ;src/main.c:608: enemies[i].alive = 0;
      001AFD F8 04                 6608 	ldhl	sp,	#4
      001AFF 2A                    6609 	ld	a,	(hl+)
      001B00 66                    6610 	ld	h, (hl)
      001B01 6F                    6611 	ld	l, a
      001B02 36 00                 6612 	ld	(hl), #0x00
                                   6613 ;src/main.c:609: set_sprite_tile(10+(i<<1), 0x7f);
      001B04 F8 0F                 6614 	ldhl	sp,	#15
                                   6615 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B06 3A                    6616 	ld	a, (hl-)
      001B07 22                    6617 	ld	(hl+), a
      001B08 36 00                 6618 	ld	(hl), #0x00
      001B0A 3E 02                 6619 	ld	a, #0x02
      001B0C                       6620 00451$:
      001B0C F8 0E                 6621 	ldhl	sp,	#14
      001B0E CB 26                 6622 	sla	(hl)
      001B10 23                    6623 	inc	hl
      001B11 CB 16                 6624 	rl	(hl)
      001B13 3D                    6625 	dec	a
      001B14 20 F6                 6626 	jr	NZ, 00451$
      001B16 2B                    6627 	dec	hl
      001B17 2A                    6628 	ld	a, (hl+)
      001B18 5F                    6629 	ld	e, a
      001B19 56                    6630 	ld	d, (hl)
      001B1A 21r00r00              6631 	ld	hl, #_shadow_OAM
      001B1D 19                    6632 	add	hl, de
      001B1E E5                    6633 	push	hl
      001B1F 7D                    6634 	ld	a, l
      001B20 F8 0D                 6635 	ldhl	sp,	#13
      001B22 77                    6636 	ld	(hl), a
      001B23 E1                    6637 	pop	hl
      001B24 7C                    6638 	ld	a, h
      001B25 F8 0C                 6639 	ldhl	sp,	#12
      001B27 32                    6640 	ld	(hl-), a
      001B28 2A                    6641 	ld	a, (hl+)
      001B29 5F                    6642 	ld	e, a
      001B2A 56                    6643 	ld	d, (hl)
      001B2B 21 02 00              6644 	ld	hl, #0x0002
      001B2E 19                    6645 	add	hl, de
      001B2F E5                    6646 	push	hl
      001B30 7D                    6647 	ld	a, l
      001B31 F8 10                 6648 	ldhl	sp,	#16
      001B33 77                    6649 	ld	(hl), a
      001B34 E1                    6650 	pop	hl
      001B35 7C                    6651 	ld	a, h
      001B36 F8 0F                 6652 	ldhl	sp,	#15
      001B38 32                    6653 	ld	(hl-), a
      001B39 2A                    6654 	ld	a,	(hl+)
      001B3A 66                    6655 	ld	h, (hl)
      001B3B 6F                    6656 	ld	l, a
      001B3C 36 7F                 6657 	ld	(hl), #0x7f
                                   6658 ;src/main.c:610: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001B3E F8 0D                 6659 	ldhl	sp,	#13
      001B40 2A                    6660 	ld	a, (hl+)
      001B41 23                    6661 	inc	hl
      001B42 C6 0B                 6662 	add	a, #0x0b
      001B44 77                    6663 	ld	(hl), a
                                   6664 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B45 3A                    6665 	ld	a, (hl-)
      001B46 22                    6666 	ld	(hl+), a
      001B47 36 00                 6667 	ld	(hl), #0x00
      001B49 3E 02                 6668 	ld	a, #0x02
      001B4B                       6669 00452$:
      001B4B F8 0E                 6670 	ldhl	sp,	#14
      001B4D CB 26                 6671 	sla	(hl)
      001B4F 23                    6672 	inc	hl
      001B50 CB 16                 6673 	rl	(hl)
      001B52 3D                    6674 	dec	a
      001B53 20 F6                 6675 	jr	NZ, 00452$
      001B55 2B                    6676 	dec	hl
      001B56 2A                    6677 	ld	a, (hl+)
      001B57 5F                    6678 	ld	e, a
      001B58 56                    6679 	ld	d, (hl)
      001B59 21r00r00              6680 	ld	hl, #_shadow_OAM
      001B5C 19                    6681 	add	hl, de
      001B5D E5                    6682 	push	hl
      001B5E 7D                    6683 	ld	a, l
      001B5F F8 0E                 6684 	ldhl	sp,	#14
      001B61 77                    6685 	ld	(hl), a
      001B62 E1                    6686 	pop	hl
      001B63 7C                    6687 	ld	a, h
      001B64 F8 0D                 6688 	ldhl	sp,	#13
      001B66 32                    6689 	ld	(hl-), a
      001B67 2A                    6690 	ld	a, (hl+)
      001B68 5F                    6691 	ld	e, a
      001B69 56                    6692 	ld	d, (hl)
      001B6A 21 02 00              6693 	ld	hl, #0x0002
      001B6D 19                    6694 	add	hl, de
      001B6E E5                    6695 	push	hl
      001B6F 7D                    6696 	ld	a, l
      001B70 F8 10                 6697 	ldhl	sp,	#16
      001B72 77                    6698 	ld	(hl), a
      001B73 E1                    6699 	pop	hl
      001B74 7C                    6700 	ld	a, h
      001B75 F8 0F                 6701 	ldhl	sp,	#15
      001B77 32                    6702 	ld	(hl-), a
      001B78 2A                    6703 	ld	a,	(hl+)
      001B79 66                    6704 	ld	h, (hl)
      001B7A 6F                    6705 	ld	l, a
      001B7B 36 7F                 6706 	ld	(hl), #0x7f
                                   6707 ;src/main.c:611: initEnemy(i);
      001B7D F8 01                 6708 	ldhl	sp,	#1
      001B7F 7E                    6709 	ld	a, (hl)
      001B80 F5                    6710 	push	af
      001B81 33                    6711 	inc	sp
      001B82 CDr84r11              6712 	call	_initEnemy
      001B85 33                    6713 	inc	sp
      001B86                       6714 00198$:
                                   6715 ;src/main.c:617: }
      001B86 E8 10                 6716 	add	sp, #16
      001B88 C9                    6717 	ret
                                   6718 ;src/main.c:622: void move() {
                                   6719 ;	---------------------------------
                                   6720 ; Function move
                                   6721 ; ---------------------------------
      001B89                       6722 _move::
      001B89 E8 F8                 6723 	add	sp, #-8
                                   6724 ;src/main.c:625: if (joydata & J_A) {
      001B8B FArF5r00              6725 	ld	a, (#_joydata)
      001B8E CB 67                 6726 	bit	4, a
      001B90 28 16                 6727 	jr	Z, 00102$
                                   6728 ;src/main.c:626: xSpeed += xDir + xDir + xDir;
      001B92 21rDBr00              6729 	ld	hl, #_xDir
      001B95 7E                    6730 	ld	a, (hl)
      001B96 87                    6731 	add	a, a
      001B97 86                    6732 	add	a, (hl)
      001B98 21rDDr00              6733 	ld	hl, #_xSpeed
      001B9B 86                    6734 	add	a, (hl)
      001B9C 77                    6735 	ld	(hl), a
                                   6736 ;src/main.c:627: ySpeed += yDir + yDir + yDir;
      001B9D 21rDCr00              6737 	ld	hl, #_yDir
      001BA0 7E                    6738 	ld	a, (hl)
      001BA1 87                    6739 	add	a, a
      001BA2 86                    6740 	add	a, (hl)
      001BA3 21rDEr00              6741 	ld	hl, #_ySpeed
      001BA6 86                    6742 	add	a, (hl)
      001BA7 77                    6743 	ld	(hl), a
      001BA8                       6744 00102$:
                                   6745 ;src/main.c:631: xSpeed = clamp(xSpeed, -100, 100);
      001BA8 21rDDr00              6746 	ld	hl, #_xSpeed
      001BAB 4E                    6747 	ld	c, (hl)
                                   6748 ;src/main.c:348: return (value < min) ? min : (value > max) ? max : value;
      001BAC 79                    6749 	ld	a, c
      001BAD EE 80                 6750 	xor	a, #0x80
      001BAF D6 1C                 6751 	sub	a, #0x1c
      001BB1 30 04                 6752 	jr	NC, 00165$
      001BB3 0E 9C                 6753 	ld	c, #0x9c
      001BB5 18 19                 6754 	jr	00166$
      001BB7                       6755 00165$:
      001BB7 59                    6756 	ld	e, c
      001BB8 3E 64                 6757 	ld	a,#0x64
      001BBA 57                    6758 	ld	d,a
      001BBB 91                    6759 	sub	a, c
      001BBC CB 7B                 6760 	bit	7, e
      001BBE 28 07                 6761 	jr	Z, 00342$
      001BC0 CB 7A                 6762 	bit	7, d
      001BC2 20 08                 6763 	jr	NZ, 00343$
      001BC4 BF                    6764 	cp	a, a
      001BC5 18 05                 6765 	jr	00343$
      001BC7                       6766 00342$:
      001BC7 CB 7A                 6767 	bit	7, d
      001BC9 28 01                 6768 	jr	Z, 00343$
      001BCB 37                    6769 	scf
      001BCC                       6770 00343$:
      001BCC 30 02                 6771 	jr	NC, 00167$
      001BCE 0E 64                 6772 	ld	c, #0x64
      001BD0                       6773 00167$:
      001BD0                       6774 00166$:
      001BD0 21rDDr00              6775 	ld	hl, #_xSpeed
      001BD3 71                    6776 	ld	(hl), c
                                   6777 ;src/main.c:632: ySpeed = clamp(ySpeed, -100, 100);
      001BD4 21rDEr00              6778 	ld	hl, #_ySpeed
      001BD7 4E                    6779 	ld	c, (hl)
                                   6780 ;src/main.c:348: return (value < min) ? min : (value > max) ? max : value;
      001BD8 79                    6781 	ld	a, c
      001BD9 EE 80                 6782 	xor	a, #0x80
      001BDB D6 1C                 6783 	sub	a, #0x1c
      001BDD 30 04                 6784 	jr	NC, 00169$
      001BDF 0E 9C                 6785 	ld	c, #0x9c
      001BE1 18 19                 6786 	jr	00170$
      001BE3                       6787 00169$:
      001BE3 59                    6788 	ld	e, c
      001BE4 3E 64                 6789 	ld	a,#0x64
      001BE6 57                    6790 	ld	d,a
      001BE7 91                    6791 	sub	a, c
      001BE8 CB 7B                 6792 	bit	7, e
      001BEA 28 07                 6793 	jr	Z, 00344$
      001BEC CB 7A                 6794 	bit	7, d
      001BEE 20 08                 6795 	jr	NZ, 00345$
      001BF0 BF                    6796 	cp	a, a
      001BF1 18 05                 6797 	jr	00345$
      001BF3                       6798 00344$:
      001BF3 CB 7A                 6799 	bit	7, d
      001BF5 28 01                 6800 	jr	Z, 00345$
      001BF7 37                    6801 	scf
      001BF8                       6802 00345$:
      001BF8 30 02                 6803 	jr	NC, 00171$
      001BFA 0E 64                 6804 	ld	c, #0x64
      001BFC                       6805 00171$:
      001BFC                       6806 00170$:
      001BFC 21rDEr00              6807 	ld	hl, #_ySpeed
      001BFF 71                    6808 	ld	(hl), c
                                   6809 ;src/main.c:634: xOverflow = 0;
      001C00 AF                    6810 	xor	a, a
      001C01 21rE9r00              6811 	ld	hl, #_xOverflow
      001C04 22                    6812 	ld	(hl+), a
      001C05 77                    6813 	ld	(hl), a
                                   6814 ;src/main.c:635: yOverflow = 0;
      001C06 AF                    6815 	xor	a, a
      001C07 21rEBr00              6816 	ld	hl, #_yOverflow
      001C0A 22                    6817 	ld	(hl+), a
      001C0B 77                    6818 	ld	(hl), a
                                   6819 ;src/main.c:640: uint8_t xCollisionPoint = playerDrawX; 
      001C0C 21rE3r00              6820 	ld	hl, #_playerDrawX
      001C0F 4E                    6821 	ld	c, (hl)
                                   6822 ;src/main.c:643: xCollisionPoint = playerDrawX +8; //right edge
      001C10 46                    6823 	ld	b, (hl)
                                   6824 ;src/main.c:642: if (xSpeed > 0) {
      001C11 21rDDr00              6825 	ld	hl, #_xSpeed
      001C14 5E                    6826 	ld	e, (hl)
      001C15 AF                    6827 	xor	a, a
      001C16 57                    6828 	ld	d, a
      001C17 96                    6829 	sub	a, (hl)
      001C18 CB 7B                 6830 	bit	7, e
      001C1A 28 07                 6831 	jr	Z, 00346$
      001C1C CB 7A                 6832 	bit	7, d
      001C1E 20 08                 6833 	jr	NZ, 00347$
      001C20 BF                    6834 	cp	a, a
      001C21 18 05                 6835 	jr	00347$
      001C23                       6836 00346$:
      001C23 CB 7A                 6837 	bit	7, d
      001C25 28 01                 6838 	jr	Z, 00347$
      001C27 37                    6839 	scf
      001C28                       6840 00347$:
      001C28 30 04                 6841 	jr	NC, 00104$
                                   6842 ;src/main.c:643: xCollisionPoint = playerDrawX +8; //right edge
      001C2A 78                    6843 	ld	a, b
      001C2B C6 08                 6844 	add	a, #0x08
      001C2D 4F                    6845 	ld	c, a
      001C2E                       6846 00104$:
                                   6847 ;src/main.c:645: if (xSpeed < 0) {
      001C2E FArDDr00              6848 	ld	a, (#_xSpeed)
      001C31 CB 7F                 6849 	bit	7, a
      001C33 28 04                 6850 	jr	Z, 00106$
                                   6851 ;src/main.c:646: xCollisionPoint = playerDrawX -8; //left edge
      001C35 78                    6852 	ld	a, b
      001C36 C6 F8                 6853 	add	a, #0xf8
      001C38 4F                    6854 	ld	c, a
      001C39                       6855 00106$:
                                   6856 ;src/main.c:650: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001C39 06 00                 6857 	ld	b, #0x00
      001C3B 79                    6858 	ld	a, c
      001C3C 21rE5r00              6859 	ld	hl, #_bgX
      001C3F 86                    6860 	add	a, (hl)
      001C40 23                    6861 	inc	hl
      001C41 4F                    6862 	ld	c, a
      001C42 78                    6863 	ld	a, b
      001C43 8E                    6864 	adc	a, (hl)
      001C44 47                    6865 	ld	b, a
      001C45 CB 28                 6866 	sra	b
      001C47 CB 19                 6867 	rr	c
      001C49 CB 28                 6868 	sra	b
      001C4B CB 19                 6869 	rr	c
      001C4D CB 28                 6870 	sra	b
      001C4F CB 19                 6871 	rr	c
      001C51 11 20 00              6872 	ld	de, #0x0020
      001C54 D5                    6873 	push	de
      001C55 C5                    6874 	push	bc
      001C56 CDr00r00              6875 	call	__modsint
      001C59 E8 04                 6876 	add	sp, #4
                                   6877 ;src/main.c:654: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001C5B 21rE4r00              6878 	ld	hl, #_playerDrawY
      001C5E 4E                    6879 	ld	c, (hl)
      001C5F 06 00                 6880 	ld	b, #0x00
      001C61 79                    6881 	ld	a, c
      001C62 21rE7r00              6882 	ld	hl, #_bgY
      001C65 86                    6883 	add	a, (hl)
      001C66 23                    6884 	inc	hl
      001C67 4F                    6885 	ld	c, a
      001C68 78                    6886 	ld	a, b
      001C69 8E                    6887 	adc	a, (hl)
      001C6A 47                    6888 	ld	b, a
      001C6B CB 28                 6889 	sra	b
      001C6D CB 19                 6890 	rr	c
      001C6F CB 28                 6891 	sra	b
      001C71 CB 19                 6892 	rr	c
      001C73 CB 28                 6893 	sra	b
      001C75 CB 19                 6894 	rr	c
      001C77 D5                    6895 	push	de
      001C78 21 20 00              6896 	ld	hl, #0x0020
      001C7B E5                    6897 	push	hl
      001C7C C5                    6898 	push	bc
      001C7D CDr00r00              6899 	call	__modsint
      001C80 E8 04                 6900 	add	sp, #4
      001C82 6B                    6901 	ld	l, e
                                   6902 ;	spillPairReg hl
                                   6903 ;	spillPairReg hl
                                   6904 ;	spillPairReg hl
                                   6905 ;	spillPairReg hl
      001C83 D1                    6906 	pop	de
                                   6907 ;src/main.c:657: uint16_t ind = 32*bgindY + bgindX;
      001C84 26 00                 6908 	ld	h, #0x00
                                   6909 ;	spillPairReg hl
                                   6910 ;	spillPairReg hl
      001C86 29                    6911 	add	hl, hl
      001C87 29                    6912 	add	hl, hl
      001C88 29                    6913 	add	hl, hl
      001C89 29                    6914 	add	hl, hl
      001C8A 29                    6915 	add	hl, hl
      001C8B 19                    6916 	add	hl, de
      001C8C 5D                    6917 	ld	e, l
      001C8D 54                    6918 	ld	d, h
                                   6919 ;src/main.c:658: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001C8E 0E 01                 6920 	ld	c, #0x01
                                   6921 ;src/main.c:659: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001C90 21r87r00              6922 	ld	hl, #_background1
      001C93 19                    6923 	add	hl, de
      001C94 46                    6924 	ld	b, (hl)
      001C95 1E 00                 6925 	ld	e, #0x00
      001C97                       6926 00158$:
      001C97 FArA9r0B              6927 	ld	a, (#_BLANKSIZE)
      001C9A F8 02                 6928 	ldhl	sp,	#2
      001C9C 77                    6929 	ld	(hl), a
      001C9D 7B                    6930 	ld	a, e
      001C9E 96                    6931 	sub	a, (hl)
      001C9F 30 11                 6932 	jr	NC, 00109$
                                   6933 ;src/main.c:660: if (background1[ind] == BLANK[i] ) {
      001CA1 21rAAr0B              6934 	ld	hl, #_BLANK
      001CA4 16 00                 6935 	ld	d, #0x00
      001CA6 19                    6936 	add	hl, de
      001CA7 56                    6937 	ld	d, (hl)
      001CA8 78                    6938 	ld	a, b
                                   6939 ;src/main.c:661: result = 0;
      001CA9 92                    6940 	sub	a,d
      001CAA 20 03                 6941 	jr	NZ, 00159$
      001CAC 4F                    6942 	ld	c,a
                                   6943 ;src/main.c:662: break;
      001CAD 18 03                 6944 	jr	00109$
      001CAF                       6945 00159$:
                                   6946 ;src/main.c:659: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001CAF 1C                    6947 	inc	e
      001CB0 18 E5                 6948 	jr	00158$
      001CB2                       6949 00109$:
                                   6950 ;src/main.c:666: if (result == 0) {
      001CB2 79                    6951 	ld	a, c
      001CB3 B7                    6952 	or	a, a
      001CB4 C2r82r1D              6953 	jp	NZ, 00114$
                                   6954 ;src/main.c:667: playerX+=xSpeed;
      001CB7 FArDDr00              6955 	ld	a, (#_xSpeed)
      001CBA 4F                    6956 	ld	c, a
      001CBB 07                    6957 	rlca
      001CBC 9F                    6958 	sbc	a, a
      001CBD 47                    6959 	ld	b, a
      001CBE 21rDFr00              6960 	ld	hl, #_playerX
      001CC1 6E                    6961 	ld	l, (hl)
                                   6962 ;	spillPairReg hl
                                   6963 ;	spillPairReg hl
      001CC2 FArE0r00              6964 	ld	a, (_playerX + 1)
      001CC5 67                    6965 	ld	h, a
                                   6966 ;	spillPairReg hl
                                   6967 ;	spillPairReg hl
      001CC6 09                    6968 	add	hl, bc
      001CC7 4D                    6969 	ld	c, l
      001CC8 44                    6970 	ld	b, h
      001CC9 21rDFr00              6971 	ld	hl, #_playerX
      001CCC 79                    6972 	ld	a, c
      001CCD 22                    6973 	ld	(hl+), a
                                   6974 ;src/main.c:669: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001CCE 78                    6975 	ld	a, b
      001CCF 32                    6976 	ld	(hl-), a
      001CD0 2A                    6977 	ld	a, (hl+)
      001CD1 4F                    6978 	ld	c, a
      001CD2 46                    6979 	ld	b, (hl)
      001CD3 79                    6980 	ld	a, c
      001CD4 D6 80                 6981 	sub	a, #0x80
      001CD6 78                    6982 	ld	a, b
      001CD7 DE 08                 6983 	sbc	a, #0x08
      001CD9 30 05                 6984 	jr	NC, 00173$
      001CDB 01 80 08              6985 	ld	bc, #0x0880
      001CDE 18 0B                 6986 	jr	00174$
      001CE0                       6987 00173$:
      001CE0 3E 80                 6988 	ld	a, #0x80
      001CE2 B9                    6989 	cp	a, c
      001CE3 3E 0B                 6990 	ld	a, #0x0b
      001CE5 98                    6991 	sbc	a, b
      001CE6 30 03                 6992 	jr	NC, 00175$
      001CE8 01 80 0B              6993 	ld	bc, #0x0b80
      001CEB                       6994 00175$:
      001CEB                       6995 00174$:
      001CEB 59                    6996 	ld	e,c
      001CEC 50                    6997 	ld	d,b
                                   6998 ;src/main.c:671: xOverflow = (playerX - limitedPlayerX);
      001CED FArDFr00              6999 	ld	a, (#_playerX)
      001CF0 93                    7000 	sub	a, e
      001CF1 EArE9r00              7001 	ld	(#_xOverflow),a
      001CF4 FArE0r00              7002 	ld	a, (#_playerX + 1)
      001CF7 9A                    7003 	sbc	a, d
      001CF8 21rEAr00              7004 	ld	hl, #_xOverflow + 1
                                   7005 ;src/main.c:672: if (xOverflow >= 0) {
      001CFB 32                    7006 	ld	(hl-), a
      001CFC 6E                    7007 	ld	l, (hl)
                                   7008 ;	spillPairReg hl
                                   7009 ;	spillPairReg hl
      001CFD FArEAr00              7010 	ld	a, (_xOverflow + 1)
                                   7011 ;	spillPairReg hl
                                   7012 ;	spillPairReg hl
      001D00 CB 7F                 7013 	bit	7,a
      001D02 20 22                 7014 	jr	NZ, 00111$
                                   7015 ;src/main.c:673: xOverflow = xOverflow >> 5;
      001D04 21rEAr00              7016 	ld	hl, #_xOverflow + 1
      001D07 CB 2E                 7017 	sra	(hl)
      001D09 2B                    7018 	dec	hl
      001D0A CB 1E                 7019 	rr	(hl)
      001D0C 23                    7020 	inc	hl
      001D0D CB 2E                 7021 	sra	(hl)
      001D0F 2B                    7022 	dec	hl
      001D10 CB 1E                 7023 	rr	(hl)
      001D12 23                    7024 	inc	hl
      001D13 CB 2E                 7025 	sra	(hl)
      001D15 2B                    7026 	dec	hl
      001D16 CB 1E                 7027 	rr	(hl)
      001D18 23                    7028 	inc	hl
      001D19 CB 2E                 7029 	sra	(hl)
      001D1B 2B                    7030 	dec	hl
      001D1C CB 1E                 7031 	rr	(hl)
      001D1E 23                    7032 	inc	hl
      001D1F CB 2E                 7033 	sra	(hl)
      001D21 2B                    7034 	dec	hl
      001D22 CB 1E                 7035 	rr	(hl)
      001D24 18 25                 7036 	jr	00112$
      001D26                       7037 00111$:
                                   7038 ;src/main.c:676: xOverflow = -((-xOverflow) >> 5);
      001D26 AF                    7039 	xor	a, a
      001D27 21rE9r00              7040 	ld	hl, #_xOverflow
      001D2A 96                    7041 	sub	a, (hl)
      001D2B 23                    7042 	inc	hl
      001D2C 5F                    7043 	ld	e, a
      001D2D 9F                    7044 	sbc	a, a
      001D2E 96                    7045 	sub	a, (hl)
      001D2F 2B                    7046 	dec	hl
      001D30 57                    7047 	ld	d, a
      001D31 CB 2A                 7048 	sra	d
      001D33 CB 1B                 7049 	rr	e
      001D35 CB 2A                 7050 	sra	d
      001D37 CB 1B                 7051 	rr	e
      001D39 CB 2A                 7052 	sra	d
      001D3B CB 1B                 7053 	rr	e
      001D3D CB 2A                 7054 	sra	d
      001D3F CB 1B                 7055 	rr	e
      001D41 CB 2A                 7056 	sra	d
      001D43 CB 1B                 7057 	rr	e
      001D45 AF                    7058 	xor	a, a
      001D46 93                    7059 	sub	a, e
      001D47 22                    7060 	ld	(hl+), a
      001D48 9F                    7061 	sbc	a, a
      001D49 92                    7062 	sub	a, d
      001D4A 77                    7063 	ld	(hl), a
      001D4B                       7064 00112$:
                                   7065 ;src/main.c:678: bgX += xOverflow;
      001D4B FArE5r00              7066 	ld	a, (#_bgX)
      001D4E 21rE9r00              7067 	ld	hl, #_xOverflow
      001D51 86                    7068 	add	a, (hl)
      001D52 21rE5r00              7069 	ld	hl, #_bgX
      001D55 22                    7070 	ld	(hl+), a
      001D56 7E                    7071 	ld	a, (hl)
      001D57 21rEAr00              7072 	ld	hl, #_xOverflow + 1
      001D5A 8E                    7073 	adc	a, (hl)
      001D5B EArE6r00              7074 	ld	(#_bgX + 1),a
                                   7075 ;src/main.c:679: playerX = limitedPlayerX;
      001D5E 21rDFr00              7076 	ld	hl, #_playerX
      001D61 79                    7077 	ld	a, c
      001D62 22                    7078 	ld	(hl+), a
                                   7079 ;src/main.c:680: playerDrawX=playerX >> 5;
      001D63 78                    7080 	ld	a, b
      001D64 32                    7081 	ld	(hl-), a
      001D65 2A                    7082 	ld	a, (hl+)
      001D66 4F                    7083 	ld	c, a
      001D67 46                    7084 	ld	b, (hl)
      001D68 CB 38                 7085 	srl	b
      001D6A CB 19                 7086 	rr	c
      001D6C CB 38                 7087 	srl	b
      001D6E CB 19                 7088 	rr	c
      001D70 CB 38                 7089 	srl	b
      001D72 CB 19                 7090 	rr	c
      001D74 CB 38                 7091 	srl	b
      001D76 CB 19                 7092 	rr	c
      001D78 CB 38                 7093 	srl	b
      001D7A CB 19                 7094 	rr	c
      001D7C 21rE3r00              7095 	ld	hl, #_playerDrawX
      001D7F 71                    7096 	ld	(hl), c
      001D80 18 05                 7097 	jr	00115$
      001D82                       7098 00114$:
                                   7099 ;src/main.c:688: xSpeed = 0;
      001D82 21rDDr00              7100 	ld	hl, #_xSpeed
      001D85 36 00                 7101 	ld	(hl), #0x00
      001D87                       7102 00115$:
                                   7103 ;src/main.c:696: uint8_t yCollisionPoint = playerDrawY; 
      001D87 FArE4r00              7104 	ld	a, (#_playerDrawY)
      001D8A F8 07                 7105 	ldhl	sp,	#7
      001D8C 77                    7106 	ld	(hl), a
                                   7107 ;src/main.c:699: yCollisionPoint = playerDrawY +8; //bottom edge
      001D8D 21rE4r00              7108 	ld	hl, #_playerDrawY
      001D90 4E                    7109 	ld	c, (hl)
                                   7110 ;src/main.c:698: if (ySpeed > 0) {
      001D91 21rDEr00              7111 	ld	hl, #_ySpeed
      001D94 5E                    7112 	ld	e, (hl)
      001D95 AF                    7113 	xor	a, a
      001D96 57                    7114 	ld	d, a
      001D97 96                    7115 	sub	a, (hl)
      001D98 CB 7B                 7116 	bit	7, e
      001D9A 28 07                 7117 	jr	Z, 00350$
      001D9C CB 7A                 7118 	bit	7, d
      001D9E 20 08                 7119 	jr	NZ, 00351$
      001DA0 BF                    7120 	cp	a, a
      001DA1 18 05                 7121 	jr	00351$
      001DA3                       7122 00350$:
      001DA3 CB 7A                 7123 	bit	7, d
      001DA5 28 01                 7124 	jr	Z, 00351$
      001DA7 37                    7125 	scf
      001DA8                       7126 00351$:
      001DA8 30 06                 7127 	jr	NC, 00117$
                                   7128 ;src/main.c:699: yCollisionPoint = playerDrawY +8; //bottom edge
      001DAA 79                    7129 	ld	a, c
      001DAB C6 08                 7130 	add	a, #0x08
      001DAD F8 07                 7131 	ldhl	sp,	#7
      001DAF 77                    7132 	ld	(hl), a
      001DB0                       7133 00117$:
                                   7134 ;src/main.c:701: if (ySpeed < 0) {
      001DB0 FArDEr00              7135 	ld	a, (#_ySpeed)
      001DB3 CB 7F                 7136 	bit	7, a
      001DB5 28 06                 7137 	jr	Z, 00119$
                                   7138 ;src/main.c:702: yCollisionPoint = playerDrawY -8; //top edge, 
      001DB7 79                    7139 	ld	a, c
      001DB8 C6 F8                 7140 	add	a, #0xf8
      001DBA F8 07                 7141 	ldhl	sp,	#7
      001DBC 77                    7142 	ld	(hl), a
      001DBD                       7143 00119$:
                                   7144 ;src/main.c:706: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001DBD FArE3r00              7145 	ld	a, (#_playerDrawX)
      001DC0 0E 00                 7146 	ld	c, #0x00
      001DC2 F8 03                 7147 	ldhl	sp,	#3
      001DC4 22                    7148 	ld	(hl+), a
      001DC5 79                    7149 	ld	a, c
      001DC6 32                    7150 	ld	(hl-), a
      001DC7 2A                    7151 	ld	a, (hl+)
      001DC8 5F                    7152 	ld	e, a
      001DC9 56                    7153 	ld	d, (hl)
      001DCA 21rE5r00              7154 	ld	hl, #_bgX
      001DCD 2A                    7155 	ld	a,	(hl+)
      001DCE 66                    7156 	ld	h, (hl)
      001DCF 6F                    7157 	ld	l, a
      001DD0 19                    7158 	add	hl, de
      001DD1 E5                    7159 	push	hl
      001DD2 7D                    7160 	ld	a, l
      001DD3 F8 07                 7161 	ldhl	sp,	#7
      001DD5 77                    7162 	ld	(hl), a
      001DD6 E1                    7163 	pop	hl
      001DD7 7C                    7164 	ld	a, h
      001DD8 F8 06                 7165 	ldhl	sp,	#6
      001DDA 77                    7166 	ld	(hl), a
      001DDB CB 2E                 7167 	sra	(hl)
      001DDD 2B                    7168 	dec	hl
      001DDE CB 1E                 7169 	rr	(hl)
      001DE0 23                    7170 	inc	hl
      001DE1 CB 2E                 7171 	sra	(hl)
      001DE3 2B                    7172 	dec	hl
      001DE4 CB 1E                 7173 	rr	(hl)
      001DE6 23                    7174 	inc	hl
      001DE7 CB 2E                 7175 	sra	(hl)
      001DE9 2B                    7176 	dec	hl
      001DEA CB 1E                 7177 	rr	(hl)
      001DEC 11 20 00              7178 	ld	de, #0x0020
      001DEF D5                    7179 	push	de
      001DF0 2A                    7180 	ld	a, (hl+)
      001DF1 5F                    7181 	ld	e, a
      001DF2 56                    7182 	ld	d, (hl)
      001DF3 D5                    7183 	push	de
      001DF4 CDr00r00              7184 	call	__modsint
      001DF7 E8 04                 7185 	add	sp, #4
      001DF9 F8 05                 7186 	ldhl	sp,	#5
      001DFB 7B                    7187 	ld	a, e
      001DFC 22                    7188 	ld	(hl+), a
      001DFD 72                    7189 	ld	(hl), d
      001DFE F8 05                 7190 	ldhl	sp,	#5
      001E00 7E                    7191 	ld	a, (hl)
      001E01 F8 00                 7192 	ldhl	sp,	#0
      001E03 77                    7193 	ld	(hl), a
      001E04 F8 06                 7194 	ldhl	sp,	#6
      001E06 7E                    7195 	ld	a, (hl)
      001E07 F8 01                 7196 	ldhl	sp,	#1
      001E09 77                    7197 	ld	(hl), a
                                   7198 ;src/main.c:709: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001E0A F8 07                 7199 	ldhl	sp,	#7
      001E0C 3A                    7200 	ld	a, (hl-)
      001E0D 22                    7201 	ld	(hl+), a
      001E0E AF                    7202 	xor	a, a
      001E0F 32                    7203 	ld	(hl-), a
      001E10 3A                    7204 	ld	a, (hl-)
      001E11 2B                    7205 	dec	hl
      001E12 77                    7206 	ld	(hl), a
      001E13 F8 07                 7207 	ldhl	sp,	#7
      001E15 3A                    7208 	ld	a, (hl-)
      001E16 2B                    7209 	dec	hl
      001E17 32                    7210 	ld	(hl-), a
      001E18 2A                    7211 	ld	a, (hl+)
      001E19 5F                    7212 	ld	e, a
      001E1A 56                    7213 	ld	d, (hl)
      001E1B 21rE7r00              7214 	ld	hl, #_bgY
      001E1E 2A                    7215 	ld	a,	(hl+)
      001E1F 66                    7216 	ld	h, (hl)
      001E20 6F                    7217 	ld	l, a
      001E21 19                    7218 	add	hl, de
      001E22 E5                    7219 	push	hl
      001E23 7D                    7220 	ld	a, l
      001E24 F8 08                 7221 	ldhl	sp,	#8
      001E26 77                    7222 	ld	(hl), a
      001E27 E1                    7223 	pop	hl
      001E28 7C                    7224 	ld	a, h
      001E29 F8 07                 7225 	ldhl	sp,	#7
      001E2B 77                    7226 	ld	(hl), a
      001E2C CB 2E                 7227 	sra	(hl)
      001E2E 2B                    7228 	dec	hl
      001E2F CB 1E                 7229 	rr	(hl)
      001E31 23                    7230 	inc	hl
      001E32 CB 2E                 7231 	sra	(hl)
      001E34 2B                    7232 	dec	hl
      001E35 CB 1E                 7233 	rr	(hl)
      001E37 23                    7234 	inc	hl
      001E38 CB 2E                 7235 	sra	(hl)
      001E3A 2B                    7236 	dec	hl
      001E3B CB 1E                 7237 	rr	(hl)
      001E3D 11 20 00              7238 	ld	de, #0x0020
      001E40 D5                    7239 	push	de
      001E41 2A                    7240 	ld	a, (hl+)
      001E42 5F                    7241 	ld	e, a
      001E43 56                    7242 	ld	d, (hl)
      001E44 D5                    7243 	push	de
      001E45 CDr00r00              7244 	call	__modsint
      001E48 E8 04                 7245 	add	sp, #4
      001E4A F8 06                 7246 	ldhl	sp,	#6
      001E4C 7B                    7247 	ld	a, e
      001E4D 22                    7248 	ld	(hl+), a
      001E4E 72                    7249 	ld	(hl), d
      001E4F F8 06                 7250 	ldhl	sp,	#6
      001E51 2A                    7251 	ld	a, (hl+)
      001E52 77                    7252 	ld	(hl), a
                                   7253 ;src/main.c:712: ind = 32*bgindY + bgindX;
      001E53 3A                    7254 	ld	a, (hl-)
      001E54 22                    7255 	ld	(hl+), a
      001E55 36 00                 7256 	ld	(hl), #0x00
      001E57 3E 05                 7257 	ld	a, #0x05
      001E59                       7258 00352$:
      001E59 F8 06                 7259 	ldhl	sp,	#6
      001E5B CB 26                 7260 	sla	(hl)
      001E5D 23                    7261 	inc	hl
      001E5E CB 16                 7262 	rl	(hl)
      001E60 3D                    7263 	dec	a
      001E61 20 F6                 7264 	jr	NZ, 00352$
      001E63 2B                    7265 	dec	hl
      001E64 3A                    7266 	ld	a, (hl-)
      001E65 2B                    7267 	dec	hl
      001E66 77                    7268 	ld	(hl), a
      001E67 F8 07                 7269 	ldhl	sp,	#7
      001E69 3A                    7270 	ld	a, (hl-)
      001E6A 2B                    7271 	dec	hl
      001E6B 77                    7272 	ld	(hl), a
      001E6C D1                    7273 	pop	de
      001E6D D5                    7274 	push	de
      001E6E 3A                    7275 	ld	a, (hl-)
      001E6F 6E                    7276 	ld	l, (hl)
      001E70 67                    7277 	ld	h, a
      001E71 19                    7278 	add	hl, de
      001E72 E5                    7279 	push	hl
      001E73 7D                    7280 	ld	a, l
      001E74 F8 08                 7281 	ldhl	sp,	#8
      001E76 77                    7282 	ld	(hl), a
      001E77 E1                    7283 	pop	hl
      001E78 7C                    7284 	ld	a, h
      001E79 F8 07                 7285 	ldhl	sp,	#7
      001E7B 77                    7286 	ld	(hl), a
                                   7287 ;src/main.c:713: result = 1;
      001E7C F8 03                 7288 	ldhl	sp,	#3
      001E7E 36 01                 7289 	ld	(hl), #0x01
                                   7290 ;src/main.c:714: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001E80 F8 06                 7291 	ldhl	sp,#6
      001E82 2A                    7292 	ld	a, (hl+)
      001E83 5F                    7293 	ld	e, a
      001E84 56                    7294 	ld	d, (hl)
      001E85 21r87r00              7295 	ld	hl, #_background1
      001E88 19                    7296 	add	hl, de
      001E89 4D                    7297 	ld	c, l
      001E8A 44                    7298 	ld	b, h
      001E8B 0A                    7299 	ld	a, (bc)
      001E8C F8 04                 7300 	ldhl	sp,	#4
      001E8E 77                    7301 	ld	(hl), a
      001E8F F8 07                 7302 	ldhl	sp,	#7
      001E91 36 00                 7303 	ld	(hl), #0x00
      001E93                       7304 00161$:
      001E93 F8 07                 7305 	ldhl	sp,	#7
      001E95 7E                    7306 	ld	a, (hl)
      001E96 F8 02                 7307 	ldhl	sp,	#2
      001E98 96                    7308 	sub	a, (hl)
      001E99 30 29                 7309 	jr	NC, 00122$
                                   7310 ;src/main.c:715: if (background1[ind] == BLANK[j] ) {
      001E9B 11rAAr0B              7311 	ld	de, #_BLANK
      001E9E F8 07                 7312 	ldhl	sp,	#7
      001EA0 6E                    7313 	ld	l, (hl)
      001EA1 26 00                 7314 	ld	h, #0x00
      001EA3 19                    7315 	add	hl, de
      001EA4 E5                    7316 	push	hl
      001EA5 7D                    7317 	ld	a, l
      001EA6 F8 07                 7318 	ldhl	sp,	#7
      001EA8 77                    7319 	ld	(hl), a
      001EA9 E1                    7320 	pop	hl
      001EAA 7C                    7321 	ld	a, h
      001EAB F8 06                 7322 	ldhl	sp,	#6
      001EAD 32                    7323 	ld	(hl-), a
      001EAE 2A                    7324 	ld	a, (hl+)
      001EAF 5F                    7325 	ld	e, a
      001EB0 3A                    7326 	ld	a, (hl-)
      001EB1 2B                    7327 	dec	hl
      001EB2 57                    7328 	ld	d, a
      001EB3 1A                    7329 	ld	a, (de)
      001EB4 4F                    7330 	ld	c, a
      001EB5 7E                    7331 	ld	a, (hl)
      001EB6 91                    7332 	sub	a, c
      001EB7 20 06                 7333 	jr	NZ, 00162$
                                   7334 ;src/main.c:716: result = 0;
      001EB9 F8 03                 7335 	ldhl	sp,	#3
      001EBB 36 00                 7336 	ld	(hl), #0x00
                                   7337 ;src/main.c:717: break;
      001EBD 18 05                 7338 	jr	00122$
      001EBF                       7339 00162$:
                                   7340 ;src/main.c:714: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001EBF F8 07                 7341 	ldhl	sp,	#7
      001EC1 34                    7342 	inc	(hl)
      001EC2 18 CF                 7343 	jr	00161$
      001EC4                       7344 00122$:
                                   7345 ;src/main.c:721: if (result == 0) {
      001EC4 F8 03                 7346 	ldhl	sp,	#3
      001EC6 7E                    7347 	ld	a, (hl)
      001EC7 B7                    7348 	or	a, a
      001EC8 C2r92r1F              7349 	jp	NZ, 00127$
                                   7350 ;src/main.c:722: playerY += ySpeed;
      001ECB FArDEr00              7351 	ld	a, (#_ySpeed)
      001ECE 4F                    7352 	ld	c, a
      001ECF 07                    7353 	rlca
      001ED0 9F                    7354 	sbc	a, a
      001ED1 21rE1r00              7355 	ld	hl, #_playerY
      001ED4 5E                    7356 	ld	e, (hl)
      001ED5 23                    7357 	inc	hl
      001ED6 56                    7358 	ld	d, (hl)
      001ED7 2B                    7359 	dec	hl
      001ED8 47                    7360 	ld	b, a
      001ED9 79                    7361 	ld	a, c
      001EDA 83                    7362 	add	a, e
      001EDB 4F                    7363 	ld	c, a
      001EDC 78                    7364 	ld	a, b
      001EDD 8A                    7365 	adc	a, d
      001EDE 47                    7366 	ld	b, a
      001EDF 79                    7367 	ld	a, c
      001EE0 22                    7368 	ld	(hl+), a
                                   7369 ;src/main.c:724: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001EE1 78                    7370 	ld	a, b
      001EE2 32                    7371 	ld	(hl-), a
      001EE3 2A                    7372 	ld	a, (hl+)
      001EE4 5F                    7373 	ld	e, a
      001EE5 56                    7374 	ld	d, (hl)
      001EE6 7A                    7375 	ld	a, d
      001EE7 D6 06                 7376 	sub	a, #0x06
      001EE9 30 05                 7377 	jr	NC, 00177$
      001EEB 11 00 06              7378 	ld	de, #0x0600
      001EEE 18 0B                 7379 	jr	00178$
      001EF0                       7380 00177$:
      001EF0 3E C0                 7381 	ld	a, #0xc0
      001EF2 BB                    7382 	cp	a, e
      001EF3 3E 09                 7383 	ld	a, #0x09
      001EF5 9A                    7384 	sbc	a, d
      001EF6 30 03                 7385 	jr	NC, 00179$
      001EF8 11 C0 09              7386 	ld	de, #0x09c0
      001EFB                       7387 00179$:
      001EFB                       7388 00178$:
      001EFB 4B                    7389 	ld	c, e
      001EFC 42                    7390 	ld	b, d
                                   7391 ;src/main.c:726: yOverflow = (playerY - limitedPlayerY);
      001EFD FArE1r00              7392 	ld	a, (#_playerY)
      001F00 93                    7393 	sub	a, e
      001F01 EArEBr00              7394 	ld	(#_yOverflow),a
      001F04 FArE2r00              7395 	ld	a, (#_playerY + 1)
      001F07 9A                    7396 	sbc	a, d
      001F08 21rECr00              7397 	ld	hl, #_yOverflow + 1
                                   7398 ;src/main.c:727: if (yOverflow >= 0) {
      001F0B 32                    7399 	ld	(hl-), a
      001F0C 6E                    7400 	ld	l, (hl)
                                   7401 ;	spillPairReg hl
                                   7402 ;	spillPairReg hl
      001F0D FArECr00              7403 	ld	a, (_yOverflow + 1)
                                   7404 ;	spillPairReg hl
                                   7405 ;	spillPairReg hl
      001F10 CB 7F                 7406 	bit	7,a
      001F12 20 22                 7407 	jr	NZ, 00124$
                                   7408 ;src/main.c:728: yOverflow = yOverflow >> 5;
      001F14 21rECr00              7409 	ld	hl, #_yOverflow + 1
      001F17 CB 2E                 7410 	sra	(hl)
      001F19 2B                    7411 	dec	hl
      001F1A CB 1E                 7412 	rr	(hl)
      001F1C 23                    7413 	inc	hl
      001F1D CB 2E                 7414 	sra	(hl)
      001F1F 2B                    7415 	dec	hl
      001F20 CB 1E                 7416 	rr	(hl)
      001F22 23                    7417 	inc	hl
      001F23 CB 2E                 7418 	sra	(hl)
      001F25 2B                    7419 	dec	hl
      001F26 CB 1E                 7420 	rr	(hl)
      001F28 23                    7421 	inc	hl
      001F29 CB 2E                 7422 	sra	(hl)
      001F2B 2B                    7423 	dec	hl
      001F2C CB 1E                 7424 	rr	(hl)
      001F2E 23                    7425 	inc	hl
      001F2F CB 2E                 7426 	sra	(hl)
      001F31 2B                    7427 	dec	hl
      001F32 CB 1E                 7428 	rr	(hl)
      001F34 18 25                 7429 	jr	00125$
      001F36                       7430 00124$:
                                   7431 ;src/main.c:731: yOverflow = -((-yOverflow) >> 5);
      001F36 AF                    7432 	xor	a, a
      001F37 21rEBr00              7433 	ld	hl, #_yOverflow
      001F3A 96                    7434 	sub	a, (hl)
      001F3B 23                    7435 	inc	hl
      001F3C 5F                    7436 	ld	e, a
      001F3D 9F                    7437 	sbc	a, a
      001F3E 96                    7438 	sub	a, (hl)
      001F3F 2B                    7439 	dec	hl
      001F40 57                    7440 	ld	d, a
      001F41 CB 2A                 7441 	sra	d
      001F43 CB 1B                 7442 	rr	e
      001F45 CB 2A                 7443 	sra	d
      001F47 CB 1B                 7444 	rr	e
      001F49 CB 2A                 7445 	sra	d
      001F4B CB 1B                 7446 	rr	e
      001F4D CB 2A                 7447 	sra	d
      001F4F CB 1B                 7448 	rr	e
      001F51 CB 2A                 7449 	sra	d
      001F53 CB 1B                 7450 	rr	e
      001F55 AF                    7451 	xor	a, a
      001F56 93                    7452 	sub	a, e
      001F57 22                    7453 	ld	(hl+), a
      001F58 9F                    7454 	sbc	a, a
      001F59 92                    7455 	sub	a, d
      001F5A 77                    7456 	ld	(hl), a
      001F5B                       7457 00125$:
                                   7458 ;src/main.c:733: bgY += yOverflow;
      001F5B FArE7r00              7459 	ld	a, (#_bgY)
      001F5E 21rEBr00              7460 	ld	hl, #_yOverflow
      001F61 86                    7461 	add	a, (hl)
      001F62 21rE7r00              7462 	ld	hl, #_bgY
      001F65 22                    7463 	ld	(hl+), a
      001F66 7E                    7464 	ld	a, (hl)
      001F67 21rECr00              7465 	ld	hl, #_yOverflow + 1
      001F6A 8E                    7466 	adc	a, (hl)
      001F6B EArE8r00              7467 	ld	(#_bgY + 1),a
                                   7468 ;src/main.c:734: playerY = limitedPlayerY;
      001F6E 21rE1r00              7469 	ld	hl, #_playerY
      001F71 79                    7470 	ld	a, c
      001F72 22                    7471 	ld	(hl+), a
                                   7472 ;src/main.c:735: playerDrawY=playerY >> 5;
      001F73 78                    7473 	ld	a, b
      001F74 32                    7474 	ld	(hl-), a
      001F75 2A                    7475 	ld	a, (hl+)
      001F76 4F                    7476 	ld	c, a
      001F77 46                    7477 	ld	b, (hl)
      001F78 CB 38                 7478 	srl	b
      001F7A CB 19                 7479 	rr	c
      001F7C CB 38                 7480 	srl	b
      001F7E CB 19                 7481 	rr	c
      001F80 CB 38                 7482 	srl	b
      001F82 CB 19                 7483 	rr	c
      001F84 CB 38                 7484 	srl	b
      001F86 CB 19                 7485 	rr	c
      001F88 CB 38                 7486 	srl	b
      001F8A CB 19                 7487 	rr	c
      001F8C 21rE4r00              7488 	ld	hl, #_playerDrawY
      001F8F 71                    7489 	ld	(hl), c
      001F90 18 05                 7490 	jr	00128$
      001F92                       7491 00127$:
                                   7492 ;src/main.c:740: ySpeed = 0;
      001F92 21rDEr00              7493 	ld	hl, #_ySpeed
      001F95 36 00                 7494 	ld	(hl), #0x00
      001F97                       7495 00128$:
                                   7496 ;src/main.c:640: uint8_t xCollisionPoint = playerDrawX; 
      001F97 FArE3r00              7497 	ld	a, (#_playerDrawX)
      001F9A F8 07                 7498 	ldhl	sp,	#7
      001F9C 77                    7499 	ld	(hl), a
                                   7500 ;src/main.c:699: yCollisionPoint = playerDrawY +8; //bottom edge
      001F9D FArE4r00              7501 	ld	a, (#_playerDrawY)
      001FA0 C6 08                 7502 	add	a, #0x08
      001FA2 F8 06                 7503 	ldhl	sp,	#6
      001FA4 77                    7504 	ld	(hl), a
                                   7505 ;src/main.c:743: if (xDir >= 0) {
      001FA5 FArDBr00              7506 	ld	a, (#_xDir)
      001FA8 CB 7F                 7507 	bit	7, a
      001FAA 20 2A                 7508 	jr	NZ, 00130$
                                   7509 ;src/main.c:744: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   7510 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7511 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FAC 11r00r00              7512 	ld	de, #_shadow_OAM
      001FAF F8 06                 7513 	ldhl	sp,	#6
      001FB1 2A                    7514 	ld	a, (hl+)
      001FB2 12                    7515 	ld	(de), a
      001FB3 11r01r00              7516 	ld	de, #(_shadow_OAM + 1)
      001FB6 7E                    7517 	ld	a, (hl)
      001FB7 12                    7518 	ld	(de), a
                                   7519 ;src/main.c:746: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001FB8 FArE4r00              7520 	ld	a, (#_playerDrawY)
      001FBB F8 07                 7521 	ldhl	sp,	#7
      001FBD 77                    7522 	ld	(hl), a
      001FBE 3A                    7523 	ld	a, (hl-)
      001FBF C6 08                 7524 	add	a, #0x08
      001FC1 77                    7525 	ld	(hl), a
      001FC2 FArE3r00              7526 	ld	a, (#_playerDrawX)
      001FC5 C6 08                 7527 	add	a, #0x08
      001FC7 F8 07                 7528 	ldhl	sp,	#7
                                   7529 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7530 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FC9 32                    7531 	ld	(hl-), a
      001FCA 11r04r00              7532 	ld	de, #(_shadow_OAM + 4)
      001FCD 2A                    7533 	ld	a, (hl+)
      001FCE 12                    7534 	ld	(de), a
      001FCF 11r05r00              7535 	ld	de, #(_shadow_OAM + 5)
      001FD2 7E                    7536 	ld	a, (hl)
      001FD3 12                    7537 	ld	(de), a
                                   7538 ;src/main.c:746: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001FD4 18 28                 7539 	jr	00131$
      001FD6                       7540 00130$:
                                   7541 ;src/main.c:749: move_sprite(1, playerDrawX , playerDrawY +8);
                                   7542 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001FD6 01r04r00              7543 	ld	bc, #(_shadow_OAM + 4)
                                   7544 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FD9 F8 06                 7545 	ldhl	sp,	#6
      001FDB 2A                    7546 	ld	a, (hl+)
      001FDC 02                    7547 	ld	(bc), a
      001FDD 03                    7548 	inc	bc
      001FDE 7E                    7549 	ld	a, (hl)
      001FDF 02                    7550 	ld	(bc), a
                                   7551 ;src/main.c:751: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001FE0 FArE4r00              7552 	ld	a, (#_playerDrawY)
      001FE3 F8 07                 7553 	ldhl	sp,	#7
      001FE5 77                    7554 	ld	(hl), a
      001FE6 3A                    7555 	ld	a, (hl-)
      001FE7 C6 08                 7556 	add	a, #0x08
      001FE9 77                    7557 	ld	(hl), a
      001FEA FArE3r00              7558 	ld	a, (#_playerDrawX)
      001FED F8 07                 7559 	ldhl	sp,	#7
      001FEF 77                    7560 	ld	(hl), a
      001FF0 7E                    7561 	ld	a, (hl)
      001FF1 C6 08                 7562 	add	a, #0x08
                                   7563 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7564 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FF3 32                    7565 	ld	(hl-), a
      001FF4 11r00r00              7566 	ld	de, #_shadow_OAM
      001FF7 2A                    7567 	ld	a, (hl+)
      001FF8 12                    7568 	ld	(de), a
      001FF9 11r01r00              7569 	ld	de, #(_shadow_OAM + 1)
      001FFC 7E                    7570 	ld	a, (hl)
      001FFD 12                    7571 	ld	(de), a
                                   7572 ;src/main.c:751: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001FFE                       7573 00131$:
                                   7574 ;src/main.c:756: if (bgX >= 256) {
      001FFE 21rE5r00              7575 	ld	hl, #_bgX
      002001 2A                    7576 	ld	a, (hl+)
      002002 4F                    7577 	ld	c, a
      002003 46                    7578 	ld	b, (hl)
      002004 78                    7579 	ld	a, b
      002005 EE 80                 7580 	xor	a, #0x80
      002007 D6 81                 7581 	sub	a, #0x81
      002009 38 0F                 7582 	jr	C, 00133$
                                   7583 ;src/main.c:757: bgX = bgX % 256;
      00200B AF                    7584 	xor	a, a
      00200C 3C                    7585 	inc	a
      00200D F5                    7586 	push	af
      00200E C5                    7587 	push	bc
      00200F CDr00r00              7588 	call	__modsint
      002012 E8 04                 7589 	add	sp, #4
      002014 21rE5r00              7590 	ld	hl, #_bgX
      002017 7B                    7591 	ld	a, e
      002018 22                    7592 	ld	(hl+), a
      002019 72                    7593 	ld	(hl), d
      00201A                       7594 00133$:
                                   7595 ;src/main.c:759: if (bgX < 0) {
      00201A 21rE5r00              7596 	ld	hl, #_bgX
      00201D 2A                    7597 	ld	a, (hl+)
      00201E 4F                    7598 	ld	c, a
      00201F 46                    7599 	ld	b, (hl)
      002020 CB 78                 7600 	bit	7, b
      002022 28 15                 7601 	jr	Z, 00135$
                                   7602 ;src/main.c:760: bgX = 255 - (bgX % 256);
      002024 AF                    7603 	xor	a, a
      002025 3C                    7604 	inc	a
      002026 F5                    7605 	push	af
      002027 C5                    7606 	push	bc
      002028 CDr00r00              7607 	call	__modsint
      00202B E8 04                 7608 	add	sp, #4
      00202D 3E FF                 7609 	ld	a, #0xff
      00202F 93                    7610 	sub	a, e
      002030 4F                    7611 	ld	c, a
      002031 9F                    7612 	sbc	a, a
      002032 92                    7613 	sub	a, d
      002033 21rE5r00              7614 	ld	hl, #_bgX
      002036 71                    7615 	ld	(hl), c
      002037 23                    7616 	inc	hl
      002038 77                    7617 	ld	(hl), a
      002039                       7618 00135$:
                                   7619 ;src/main.c:762: if (bgY >= 256) {
      002039 21rE7r00              7620 	ld	hl, #_bgY
      00203C 2A                    7621 	ld	a, (hl+)
      00203D 4F                    7622 	ld	c, a
      00203E 46                    7623 	ld	b, (hl)
      00203F 78                    7624 	ld	a, b
      002040 EE 80                 7625 	xor	a, #0x80
      002042 D6 81                 7626 	sub	a, #0x81
      002044 38 0F                 7627 	jr	C, 00137$
                                   7628 ;src/main.c:763: bgY = bgY % 256;
      002046 AF                    7629 	xor	a, a
      002047 3C                    7630 	inc	a
      002048 F5                    7631 	push	af
      002049 C5                    7632 	push	bc
      00204A CDr00r00              7633 	call	__modsint
      00204D E8 04                 7634 	add	sp, #4
      00204F 21rE7r00              7635 	ld	hl, #_bgY
      002052 7B                    7636 	ld	a, e
      002053 22                    7637 	ld	(hl+), a
      002054 72                    7638 	ld	(hl), d
      002055                       7639 00137$:
                                   7640 ;src/main.c:765: if (bgY < 0) {
      002055 21rE7r00              7641 	ld	hl, #_bgY
      002058 2A                    7642 	ld	a, (hl+)
      002059 4F                    7643 	ld	c, a
      00205A 46                    7644 	ld	b, (hl)
      00205B CB 78                 7645 	bit	7, b
      00205D 28 15                 7646 	jr	Z, 00139$
                                   7647 ;src/main.c:766: bgY = 255 - (bgY % 256);
      00205F AF                    7648 	xor	a, a
      002060 3C                    7649 	inc	a
      002061 F5                    7650 	push	af
      002062 C5                    7651 	push	bc
      002063 CDr00r00              7652 	call	__modsint
      002066 E8 04                 7653 	add	sp, #4
      002068 3E FF                 7654 	ld	a, #0xff
      00206A 93                    7655 	sub	a, e
      00206B 4F                    7656 	ld	c, a
      00206C 9F                    7657 	sbc	a, a
      00206D 92                    7658 	sub	a, d
      00206E 21rE7r00              7659 	ld	hl, #_bgY
      002071 71                    7660 	ld	(hl), c
      002072 23                    7661 	inc	hl
      002073 77                    7662 	ld	(hl), a
      002074                       7663 00139$:
                                   7664 ;src/main.c:769: move_bkg(bgX, bgY);
      002074 21rE7r00              7665 	ld	hl, #_bgY
      002077 4E                    7666 	ld	c, (hl)
      002078 FArE5r00              7667 	ld	a, (#_bgX)
      00207B E0r00                 7668 	ldh	(_SCX_REG + 0), a
                                   7669 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00207D 79                    7670 	ld	a, c
      00207E E0r00                 7671 	ldh	(_SCY_REG + 0), a
                                   7672 ;src/main.c:772: if (ySpeed > 0) ySpeed--;
      002080 21rDEr00              7673 	ld	hl, #_ySpeed
      002083 5E                    7674 	ld	e, (hl)
      002084 AF                    7675 	xor	a, a
      002085 57                    7676 	ld	d, a
      002086 96                    7677 	sub	a, (hl)
      002087 CB 7B                 7678 	bit	7, e
      002089 28 07                 7679 	jr	Z, 00355$
      00208B CB 7A                 7680 	bit	7, d
      00208D 20 08                 7681 	jr	NZ, 00356$
      00208F BF                    7682 	cp	a, a
      002090 18 05                 7683 	jr	00356$
      002092                       7684 00355$:
      002092 CB 7A                 7685 	bit	7, d
      002094 28 01                 7686 	jr	Z, 00356$
      002096 37                    7687 	scf
      002097                       7688 00356$:
      002097 30 04                 7689 	jr	NC, 00141$
      002099 21rDEr00              7690 	ld	hl, #_ySpeed
      00209C 35                    7691 	dec	(hl)
      00209D                       7692 00141$:
                                   7693 ;src/main.c:773: if (ySpeed < 0) ySpeed++;
      00209D 21rDEr00              7694 	ld	hl, #_ySpeed
      0020A0 CB 7E                 7695 	bit	7, (hl)
      0020A2 28 01                 7696 	jr	Z, 00143$
      0020A4 34                    7697 	inc	(hl)
      0020A5                       7698 00143$:
                                   7699 ;src/main.c:774: if (xSpeed > 0) xSpeed--;
      0020A5 21rDDr00              7700 	ld	hl, #_xSpeed
      0020A8 5E                    7701 	ld	e, (hl)
      0020A9 AF                    7702 	xor	a, a
      0020AA 57                    7703 	ld	d, a
      0020AB 96                    7704 	sub	a, (hl)
      0020AC CB 7B                 7705 	bit	7, e
      0020AE 28 07                 7706 	jr	Z, 00357$
      0020B0 CB 7A                 7707 	bit	7, d
      0020B2 20 08                 7708 	jr	NZ, 00358$
      0020B4 BF                    7709 	cp	a, a
      0020B5 18 05                 7710 	jr	00358$
      0020B7                       7711 00357$:
      0020B7 CB 7A                 7712 	bit	7, d
      0020B9 28 01                 7713 	jr	Z, 00358$
      0020BB 37                    7714 	scf
      0020BC                       7715 00358$:
      0020BC 30 04                 7716 	jr	NC, 00145$
      0020BE 21rDDr00              7717 	ld	hl, #_xSpeed
      0020C1 35                    7718 	dec	(hl)
      0020C2                       7719 00145$:
                                   7720 ;src/main.c:775: if (xSpeed < 0) xSpeed++;
      0020C2 21rDDr00              7721 	ld	hl, #_xSpeed
      0020C5 CB 7E                 7722 	bit	7, (hl)
      0020C7 28 01                 7723 	jr	Z, 00163$
      0020C9 34                    7724 	inc	(hl)
      0020CA                       7725 00163$:
                                   7726 ;src/main.c:779: }
      0020CA E8 08                 7727 	add	sp, #8
      0020CC C9                    7728 	ret
                                   7729 ;src/main.c:781: void takeDamage(int16_t amount) {
                                   7730 ;	---------------------------------
                                   7731 ; Function takeDamage
                                   7732 ; ---------------------------------
      0020CD                       7733 _takeDamage::
      0020CD 3B                    7734 	dec	sp
                                   7735 ;src/main.c:782: if (amount > shield) {
      0020CE FArF7r00              7736 	ld	a, (#_shield)
      0020D1 4F                    7737 	ld	c, a
      0020D2 07                    7738 	rlca
      0020D3 9F                    7739 	sbc	a, a
      0020D4 47                    7740 	ld	b, a
                                   7741 ;src/main.c:784: hull -= (amount - shield);
      0020D5 F8 03                 7742 	ldhl	sp,	#3
      0020D7 7E                    7743 	ld	a, (hl)
      0020D8 F8 00                 7744 	ldhl	sp,	#0
      0020DA 77                    7745 	ld	(hl), a
                                   7746 ;src/main.c:782: if (amount > shield) {
      0020DB F8 03                 7747 	ldhl	sp,	#3
      0020DD 79                    7748 	ld	a, c
      0020DE 96                    7749 	sub	a, (hl)
      0020DF 23                    7750 	inc	hl
      0020E0 78                    7751 	ld	a, b
      0020E1 9E                    7752 	sbc	a, (hl)
      0020E2 78                    7753 	ld	a, b
      0020E3 57                    7754 	ld	d, a
      0020E4 CB 7E                 7755 	bit	7, (hl)
      0020E6 28 07                 7756 	jr	Z, 00111$
      0020E8 CB 7A                 7757 	bit	7, d
      0020EA 20 08                 7758 	jr	NZ, 00112$
      0020EC BF                    7759 	cp	a, a
      0020ED 18 05                 7760 	jr	00112$
      0020EF                       7761 00111$:
      0020EF CB 7A                 7762 	bit	7, d
      0020F1 28 01                 7763 	jr	Z, 00112$
      0020F3 37                    7764 	scf
      0020F4                       7765 00112$:
      0020F4 30 10                 7766 	jr	NC, 00102$
                                   7767 ;src/main.c:783: shield = 0;
      0020F6 21rF7r00              7768 	ld	hl, #_shield
      0020F9 36 00                 7769 	ld	(hl), #0x00
                                   7770 ;src/main.c:784: hull -= (amount - shield);
      0020FB FArF6r00              7771 	ld	a, (#_hull)
      0020FE F8 00                 7772 	ldhl	sp,	#0
      002100 96                    7773 	sub	a, (hl)
      002101 EArF6r00              7774 	ld	(#_hull),a
      002104 18 09                 7775 	jr	00104$
      002106                       7776 00102$:
                                   7777 ;src/main.c:787: shield -= amount;
      002106 FArF7r00              7778 	ld	a, (#_shield)
      002109 F8 00                 7779 	ldhl	sp,	#0
      00210B 96                    7780 	sub	a, (hl)
      00210C EArF7r00              7781 	ld	(#_shield),a
      00210F                       7782 00104$:
                                   7783 ;src/main.c:789: }
      00210F 33                    7784 	inc	sp
      002110 C9                    7785 	ret
                                   7786 ;src/main.c:791: void spawnPickup(int16_t x, int16_t y) {
                                   7787 ;	---------------------------------
                                   7788 ; Function spawnPickup
                                   7789 ; ---------------------------------
      002111                       7790 _spawnPickup::
                                   7791 ;src/main.c:792: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      002111 CDr00r00              7792 	call	_rand
      002114 7B                    7793 	ld	a, e
      002115 E6 0F                 7794 	and	a, #0x0f
      002117 C0                    7795 	ret	NZ
                                   7796 ;src/main.c:793: if (spawn == 0) {
                                   7797 ;src/main.c:794: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      002118 CDr00r00              7798 	call	_rand
      00211B 7B                    7799 	ld	a, e
      00211C E6 03                 7800 	and	a, #0x03
                                   7801 ;src/main.c:795: if (type == 0) {
      00211E 5F                    7802 	ld	e,a
      00211F B7                    7803 	or	a, a
      002120 20 13                 7804 	jr	NZ, 00106$
                                   7805 ;src/main.c:796: pickup = health;
      002122 11 09 00              7806 	ld	de, #0x0009
      002125 D5                    7807 	push	de
      002126 11r1Ar07              7808 	ld	de, #_health
      002129 D5                    7809 	push	de
      00212A 11rFAr00              7810 	ld	de, #_pickup
      00212D D5                    7811 	push	de
      00212E CDr00r00              7812 	call	___memcpy
      002131 E8 06                 7813 	add	sp, #6
      002133 18 31                 7814 	jr	00107$
      002135                       7815 00106$:
                                   7816 ;src/main.c:798: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      002135 1D                    7817 	dec	e
      002136 20 1D                 7818 	jr	NZ, 00102$
      002138 21rC3r0B              7819 	ld	hl, #_MAXGUNLEVEL
      00213B 4E                    7820 	ld	c, (hl)
      00213C FArEEr00              7821 	ld	a, (#_gunLevel)
      00213F 91                    7822 	sub	a, c
      002140 30 13                 7823 	jr	NC, 00102$
                                   7824 ;src/main.c:799: pickup = upgrade;
      002142 11 09 00              7825 	ld	de, #0x0009
      002145 D5                    7826 	push	de
      002146 11r08r07              7827 	ld	de, #_upgrade
      002149 D5                    7828 	push	de
      00214A 11rFAr00              7829 	ld	de, #_pickup
      00214D D5                    7830 	push	de
      00214E CDr00r00              7831 	call	___memcpy
      002151 E8 06                 7832 	add	sp, #6
      002153 18 11                 7833 	jr	00107$
      002155                       7834 00102$:
                                   7835 ;src/main.c:802: pickup = ammo;
      002155 01r11r07              7836 	ld	bc, #_ammo
      002158 11rFAr00              7837 	ld	de, #_pickup
      00215B 21 09 00              7838 	ld	hl, #0x0009
      00215E E5                    7839 	push	hl
      00215F C5                    7840 	push	bc
      002160 D5                    7841 	push	de
      002161 CDr00r00              7842 	call	___memcpy
      002164 E8 06                 7843 	add	sp, #6
      002166                       7844 00107$:
                                   7845 ;src/main.c:804: pickup.active = 1;
      002166 21rFFr00              7846 	ld	hl, #(_pickup + 5)
      002169 36 01                 7847 	ld	(hl), #0x01
                                   7848 ;src/main.c:806: pickup.x = x;
      00216B 11rFBr00              7849 	ld	de, #(_pickup + 1)
      00216E F8 02                 7850 	ldhl	sp,	#2
      002170 2A                    7851 	ld	a, (hl+)
      002171 12                    7852 	ld	(de), a
      002172 13                    7853 	inc	de
                                   7854 ;src/main.c:807: pickup.y = y;
      002173 2A                    7855 	ld	a, (hl+)
      002174 12                    7856 	ld	(de), a
      002175 11rFDr00              7857 	ld	de, #(_pickup + 3)
      002178 2A                    7858 	ld	a, (hl+)
      002179 12                    7859 	ld	(de), a
      00217A 13                    7860 	inc	de
      00217B 7E                    7861 	ld	a, (hl)
      00217C 12                    7862 	ld	(de), a
                                   7863 ;src/main.c:809: set_sprite_tile(3, pickup.tile); //0x7f
      00217D 21r02r01              7864 	ld	hl, #(_pickup + 8)
      002180 4E                    7865 	ld	c, (hl)
                                   7866 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002181 21r0Er00              7867 	ld	hl, #(_shadow_OAM + 14)
      002184 71                    7868 	ld	(hl), c
                                   7869 ;src/main.c:809: set_sprite_tile(3, pickup.tile); //0x7f
                                   7870 ;src/main.c:815: }
      002185 C9                    7871 	ret
                                   7872 ;src/main.c:817: void killEnemy(uint8_t i) {
                                   7873 ;	---------------------------------
                                   7874 ; Function killEnemy
                                   7875 ; ---------------------------------
      002186                       7876 _killEnemy::
      002186 E8 FC                 7877 	add	sp, #-4
                                   7878 ;src/main.c:818: set_sprite_tile(10+(i<<1), 0x7f);
      002188 F8 06                 7879 	ldhl	sp,	#6
      00218A 7E                    7880 	ld	a, (hl)
      00218B 87                    7881 	add	a, a
      00218C 4F                    7882 	ld	c, a
      00218D C6 0A                 7883 	add	a, #0x0a
                                   7884 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00218F 6F                    7885 	ld	l, a
      002190 11r00r00              7886 	ld	de, #_shadow_OAM+0
                                   7887 ;	spillPairReg hl
                                   7888 ;	spillPairReg hl
      002193 26 00                 7889 	ld	h, #0x00
                                   7890 ;	spillPairReg hl
                                   7891 ;	spillPairReg hl
      002195 29                    7892 	add	hl, hl
      002196 29                    7893 	add	hl, hl
      002197 19                    7894 	add	hl, de
      002198 23                    7895 	inc	hl
      002199 23                    7896 	inc	hl
      00219A 36 7F                 7897 	ld	(hl), #0x7f
                                   7898 ;src/main.c:819: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00219C 79                    7899 	ld	a, c
      00219D C6 0B                 7900 	add	a, #0x0b
                                   7901 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00219F 6F                    7902 	ld	l, a
      0021A0 01r00r00              7903 	ld	bc, #_shadow_OAM+0
                                   7904 ;	spillPairReg hl
                                   7905 ;	spillPairReg hl
      0021A3 26 00                 7906 	ld	h, #0x00
                                   7907 ;	spillPairReg hl
                                   7908 ;	spillPairReg hl
      0021A5 29                    7909 	add	hl, hl
      0021A6 29                    7910 	add	hl, hl
      0021A7 09                    7911 	add	hl, bc
      0021A8 23                    7912 	inc	hl
      0021A9 23                    7913 	inc	hl
      0021AA 36 7F                 7914 	ld	(hl), #0x7f
                                   7915 ;src/main.c:821: spawnPickup(enemies[i].x, enemies[i].y);
      0021AC F8 06                 7916 	ldhl	sp,	#6
      0021AE 4E                    7917 	ld	c, (hl)
      0021AF 06 00                 7918 	ld	b, #0x00
      0021B1 69                    7919 	ld	l, c
      0021B2 60                    7920 	ld	h, b
      0021B3 29                    7921 	add	hl, hl
      0021B4 29                    7922 	add	hl, hl
      0021B5 29                    7923 	add	hl, hl
      0021B6 09                    7924 	add	hl, bc
      0021B7 29                    7925 	add	hl, hl
      0021B8 01r5Ar00              7926 	ld	bc,#_enemies
      0021BB 09                    7927 	add	hl,bc
      0021BC 33                    7928 	inc	sp
      0021BD 33                    7929 	inc	sp
      0021BE 5D                    7930 	ld	e, l
      0021BF 54                    7931 	ld	d, h
      0021C0 D5                    7932 	push	de
      0021C1 21 02 00              7933 	ld	hl, #0x0002
      0021C4 19                    7934 	add	hl, de
      0021C5 E5                    7935 	push	hl
      0021C6 7D                    7936 	ld	a, l
      0021C7 F8 04                 7937 	ldhl	sp,	#4
      0021C9 77                    7938 	ld	(hl), a
      0021CA E1                    7939 	pop	hl
      0021CB 7C                    7940 	ld	a, h
      0021CC F8 03                 7941 	ldhl	sp,	#3
      0021CE 32                    7942 	ld	(hl-), a
      0021CF 2A                    7943 	ld	a, (hl+)
      0021D0 5F                    7944 	ld	e, a
      0021D1 56                    7945 	ld	d, (hl)
      0021D2 1A                    7946 	ld	a, (de)
      0021D3 4F                    7947 	ld	c, a
      0021D4 13                    7948 	inc	de
      0021D5 1A                    7949 	ld	a, (de)
      0021D6 47                    7950 	ld	b, a
      0021D7 D1                    7951 	pop	de
      0021D8 D5                    7952 	push	de
      0021D9 1A                    7953 	ld	a, (de)
      0021DA 6F                    7954 	ld	l, a
                                   7955 ;	spillPairReg hl
                                   7956 ;	spillPairReg hl
      0021DB 13                    7957 	inc	de
      0021DC 1A                    7958 	ld	a, (de)
      0021DD 67                    7959 	ld	h, a
                                   7960 ;	spillPairReg hl
                                   7961 ;	spillPairReg hl
      0021DE C5                    7962 	push	bc
      0021DF E5                    7963 	push	hl
      0021E0 CDr11r21              7964 	call	_spawnPickup
      0021E3 E8 04                 7965 	add	sp, #4
                                   7966 ;src/main.c:823: enemies[i].alive = 0;
      0021E5 D1                    7967 	pop	de
      0021E6 D5                    7968 	push	de
      0021E7 21 09 00              7969 	ld	hl, #0x0009
      0021EA 19                    7970 	add	hl, de
      0021EB 4D                    7971 	ld	c, l
      0021EC 44                    7972 	ld	b, h
      0021ED AF                    7973 	xor	a, a
      0021EE 02                    7974 	ld	(bc), a
                                   7975 ;src/main.c:824: enemies[i].visible = 0;
      0021EF D1                    7976 	pop	de
      0021F0 D5                    7977 	push	de
      0021F1 21 0A 00              7978 	ld	hl, #0x000a
      0021F4 19                    7979 	add	hl, de
      0021F5 4D                    7980 	ld	c, l
      0021F6 44                    7981 	ld	b, h
      0021F7 AF                    7982 	xor	a, a
      0021F8 02                    7983 	ld	(bc), a
                                   7984 ;src/main.c:826: playSound(0);
      0021F9 AF                    7985 	xor	a, a
      0021FA F5                    7986 	push	af
      0021FB 33                    7987 	inc	sp
      0021FC CDrB6r0F              7988 	call	_playSound
      0021FF 33                    7989 	inc	sp
                                   7990 ;src/main.c:827: incrementScore();
      002200 CDr78r0D              7991 	call	_incrementScore
                                   7992 ;src/main.c:828: updateScore();
      002203 CDrDAr0C              7993 	call	_updateScore
                                   7994 ;src/main.c:830: explosions[oldestEx].visible = 1;
      002206 21r03r01              7995 	ld	hl, #_oldestEx
      002209 4E                    7996 	ld	c, (hl)
      00220A 06 00                 7997 	ld	b, #0x00
      00220C 69                    7998 	ld	l, c
      00220D 60                    7999 	ld	h, b
      00220E 29                    8000 	add	hl, hl
      00220F 09                    8001 	add	hl, bc
      002210 29                    8002 	add	hl, hl
      002211 01r03r01              8003 	ld	bc,#_explosions
      002214 09                    8004 	add	hl,bc
      002215 36 01                 8005 	ld	(hl), #0x01
                                   8006 ;src/main.c:831: explosions[oldestEx].x = enemies[i].x;
      002217 21r03r01              8007 	ld	hl, #_oldestEx
      00221A 4E                    8008 	ld	c, (hl)
      00221B 06 00                 8009 	ld	b, #0x00
      00221D 69                    8010 	ld	l, c
      00221E 60                    8011 	ld	h, b
      00221F 29                    8012 	add	hl, hl
      002220 09                    8013 	add	hl, bc
      002221 29                    8014 	add	hl, hl
      002222 01r03r01              8015 	ld	bc,#_explosions
      002225 09                    8016 	add	hl,bc
      002226 23                    8017 	inc	hl
      002227 4D                    8018 	ld	c, l
      002228 44                    8019 	ld	b, h
      002229 D1                    8020 	pop	de
      00222A D5                    8021 	push	de
      00222B 1A                    8022 	ld	a, (de)
      00222C 02                    8023 	ld	(bc), a
                                   8024 ;src/main.c:832: explosions[oldestEx].y = enemies[i].y;
      00222D 21r03r01              8025 	ld	hl, #_oldestEx
      002230 4E                    8026 	ld	c, (hl)
      002231 06 00                 8027 	ld	b, #0x00
      002233 69                    8028 	ld	l, c
      002234 60                    8029 	ld	h, b
      002235 29                    8030 	add	hl, hl
      002236 09                    8031 	add	hl, bc
      002237 29                    8032 	add	hl, hl
      002238 01r03r01              8033 	ld	bc,#_explosions
      00223B 09                    8034 	add	hl,bc
      00223C 23                    8035 	inc	hl
      00223D 23                    8036 	inc	hl
      00223E 4D                    8037 	ld	c, l
      00223F 44                    8038 	ld	b, h
      002240 F8 02                 8039 	ldhl	sp,#2
      002242 2A                    8040 	ld	a, (hl+)
      002243 5F                    8041 	ld	e, a
      002244 56                    8042 	ld	d, (hl)
      002245 1A                    8043 	ld	a, (de)
      002246 02                    8044 	ld	(bc), a
                                   8045 ;src/main.c:835: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      002247 CDr00r00              8046 	call	_rand
      00224A 7B                    8047 	ld	a, e
      00224B 21rC7r0B              8048 	ld	hl, #_exTileCount
      00224E 46                    8049 	ld	b, (hl)
      00224F C5                    8050 	push	bc
      002250 33                    8051 	inc	sp
      002251 F5                    8052 	push	af
      002252 33                    8053 	inc	sp
      002253 CDr00r00              8054 	call	__moduchar
      002256 E1                    8055 	pop	hl
      002257 F8 03                 8056 	ldhl	sp,	#3
      002259 73                    8057 	ld	(hl), e
                                   8058 ;src/main.c:837: explosions[oldestEx].tile = exTiles[tileNum];
      00225A 21r03r01              8059 	ld	hl, #_oldestEx
      00225D 4E                    8060 	ld	c, (hl)
      00225E 06 00                 8061 	ld	b, #0x00
      002260 69                    8062 	ld	l, c
      002261 60                    8063 	ld	h, b
      002262 29                    8064 	add	hl, hl
      002263 09                    8065 	add	hl, bc
      002264 29                    8066 	add	hl, hl
      002265 01r03r01              8067 	ld	bc,#_explosions
      002268 09                    8068 	add	hl,bc
      002269 23                    8069 	inc	hl
      00226A 23                    8070 	inc	hl
      00226B 23                    8071 	inc	hl
      00226C 23                    8072 	inc	hl
      00226D 23                    8073 	inc	hl
      00226E 4D                    8074 	ld	c, l
      00226F 44                    8075 	ld	b, h
      002270 11r04r01              8076 	ld	de, #_exTiles+0
      002273 F8 03                 8077 	ldhl	sp,	#3
      002275 6E                    8078 	ld	l, (hl)
      002276 26 00                 8079 	ld	h, #0x00
      002278 19                    8080 	add	hl, de
      002279 5D                    8081 	ld	e, l
      00227A 54                    8082 	ld	d, h
      00227B 1A                    8083 	ld	a, (de)
      00227C 02                    8084 	ld	(bc), a
                                   8085 ;src/main.c:838: explosions[oldestEx].frame = 0;
      00227D 21r03r01              8086 	ld	hl, #_oldestEx
      002280 4E                    8087 	ld	c, (hl)
      002281 06 00                 8088 	ld	b, #0x00
      002283 69                    8089 	ld	l, c
      002284 60                    8090 	ld	h, b
      002285 29                    8091 	add	hl, hl
      002286 09                    8092 	add	hl, bc
      002287 29                    8093 	add	hl, hl
      002288 01r03r01              8094 	ld	bc,#_explosions
      00228B 09                    8095 	add	hl,bc
      00228C 23                    8096 	inc	hl
      00228D 23                    8097 	inc	hl
      00228E 23                    8098 	inc	hl
      00228F 36 00                 8099 	ld	(hl), #0x00
                                   8100 ;src/main.c:839: explosions[oldestEx].frameCounter = 0;
      002291 21r03r01              8101 	ld	hl, #_oldestEx
      002294 4E                    8102 	ld	c, (hl)
      002295 06 00                 8103 	ld	b, #0x00
      002297 69                    8104 	ld	l, c
      002298 60                    8105 	ld	h, b
      002299 29                    8106 	add	hl, hl
      00229A 09                    8107 	add	hl, bc
      00229B 29                    8108 	add	hl, hl
      00229C 01r03r01              8109 	ld	bc,#_explosions
      00229F 09                    8110 	add	hl,bc
      0022A0 01 04 00              8111 	ld	bc, #0x0004
      0022A3 09                    8112 	add	hl, bc
      0022A4 36 00                 8113 	ld	(hl), #0x00
                                   8114 ;src/main.c:841: set_sprite_tile(20 + oldestEx+oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      0022A6 21r03r01              8115 	ld	hl, #_oldestEx
      0022A9 4E                    8116 	ld	c, (hl)
      0022AA 06 00                 8117 	ld	b, #0x00
      0022AC 69                    8118 	ld	l, c
      0022AD 60                    8119 	ld	h, b
      0022AE 29                    8120 	add	hl, hl
      0022AF 09                    8121 	add	hl, bc
      0022B0 29                    8122 	add	hl, hl
      0022B1 01r03r01              8123 	ld	bc,#_explosions
      0022B4 09                    8124 	add	hl,bc
      0022B5 5D                    8125 	ld	e, l
      0022B6 54                    8126 	ld	d, h
      0022B7 21 05 00              8127 	ld	hl, #0x0005
      0022BA 19                    8128 	add	hl, de
      0022BB 4E                    8129 	ld	c, (hl)
      0022BC 13                    8130 	inc	de
      0022BD 13                    8131 	inc	de
      0022BE 13                    8132 	inc	de
      0022BF 1A                    8133 	ld	a, (de)
      0022C0 87                    8134 	add	a, a
      0022C1 81                    8135 	add	a, c
      0022C2 4F                    8136 	ld	c, a
      0022C3 21r03r01              8137 	ld	hl, #_oldestEx
      0022C6 46                    8138 	ld	b, (hl)
      0022C7 78                    8139 	ld	a, b
      0022C8 C6 14                 8140 	add	a, #0x14
      0022CA 80                    8141 	add	a, b
                                   8142 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022CB 6F                    8143 	ld	l, a
      0022CC 11r00r00              8144 	ld	de, #_shadow_OAM+0
                                   8145 ;	spillPairReg hl
                                   8146 ;	spillPairReg hl
      0022CF 26 00                 8147 	ld	h, #0x00
                                   8148 ;	spillPairReg hl
                                   8149 ;	spillPairReg hl
      0022D1 29                    8150 	add	hl, hl
      0022D2 29                    8151 	add	hl, hl
      0022D3 19                    8152 	add	hl, de
      0022D4 23                    8153 	inc	hl
      0022D5 23                    8154 	inc	hl
      0022D6 71                    8155 	ld	(hl), c
                                   8156 ;src/main.c:842: set_sprite_tile(21 + oldestEx+oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      0022D7 21r03r01              8157 	ld	hl, #_oldestEx
      0022DA 4E                    8158 	ld	c, (hl)
      0022DB 06 00                 8159 	ld	b, #0x00
      0022DD 69                    8160 	ld	l, c
      0022DE 60                    8161 	ld	h, b
      0022DF 29                    8162 	add	hl, hl
      0022E0 09                    8163 	add	hl, bc
      0022E1 29                    8164 	add	hl, hl
      0022E2 01r03r01              8165 	ld	bc,#_explosions
      0022E5 09                    8166 	add	hl,bc
      0022E6 5D                    8167 	ld	e, l
      0022E7 54                    8168 	ld	d, h
      0022E8 21 05 00              8169 	ld	hl, #0x0005
      0022EB 19                    8170 	add	hl, de
      0022EC 4E                    8171 	ld	c, (hl)
      0022ED 13                    8172 	inc	de
      0022EE 13                    8173 	inc	de
      0022EF 13                    8174 	inc	de
      0022F0 1A                    8175 	ld	a, (de)
      0022F1 87                    8176 	add	a, a
      0022F2 81                    8177 	add	a, c
      0022F3 C6 02                 8178 	add	a, #0x02
      0022F5 4F                    8179 	ld	c, a
      0022F6 21r03r01              8180 	ld	hl, #_oldestEx
      0022F9 46                    8181 	ld	b, (hl)
      0022FA 78                    8182 	ld	a, b
      0022FB C6 15                 8183 	add	a, #0x15
      0022FD 80                    8184 	add	a, b
                                   8185 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022FE 6F                    8186 	ld	l, a
      0022FF 11r00r00              8187 	ld	de, #_shadow_OAM+0
                                   8188 ;	spillPairReg hl
                                   8189 ;	spillPairReg hl
      002302 26 00                 8190 	ld	h, #0x00
                                   8191 ;	spillPairReg hl
                                   8192 ;	spillPairReg hl
      002304 29                    8193 	add	hl, hl
      002305 29                    8194 	add	hl, hl
      002306 19                    8195 	add	hl, de
      002307 23                    8196 	inc	hl
      002308 23                    8197 	inc	hl
      002309 71                    8198 	ld	(hl), c
                                   8199 ;src/main.c:847: oldestEx++;
      00230A 21r03r01              8200 	ld	hl, #_oldestEx
      00230D 34                    8201 	inc	(hl)
                                   8202 ;src/main.c:848: if (oldestEx >= exCount) {
      00230E 21rC5r0B              8203 	ld	hl, #_exCount
      002311 4E                    8204 	ld	c, (hl)
      002312 21r03r01              8205 	ld	hl, #_oldestEx
      002315 7E                    8206 	ld	a, (hl)
      002316 91                    8207 	sub	a, c
      002317 38 02                 8208 	jr	C, 00107$
                                   8209 ;src/main.c:849: oldestEx = 0;
      002319 36 00                 8210 	ld	(hl), #0x00
      00231B                       8211 00107$:
                                   8212 ;src/main.c:853: }
      00231B E8 04                 8213 	add	sp, #4
      00231D C9                    8214 	ret
                                   8215 ;src/main.c:855: void checkCollision() {
                                   8216 ;	---------------------------------
                                   8217 ; Function checkCollision
                                   8218 ; ---------------------------------
      00231E                       8219 _checkCollision::
      00231E E8 E9                 8220 	add	sp, #-23
                                   8221 ;src/main.c:862: struct Enemy *eptr = enemies + enemyCollisionCount;
      002320 21rEDr00              8222 	ld	hl, #_enemyCollisionCount
      002323 4E                    8223 	ld	c, (hl)
      002324 06 00                 8224 	ld	b, #0x00
      002326 69                    8225 	ld	l, c
      002327 60                    8226 	ld	h, b
      002328 29                    8227 	add	hl, hl
      002329 29                    8228 	add	hl, hl
      00232A 29                    8229 	add	hl, hl
      00232B 09                    8230 	add	hl, bc
      00232C 29                    8231 	add	hl, hl
      00232D 01r5Ar00              8232 	ld	bc,#_enemies
      002330 09                    8233 	add	hl,bc
      002331 4D                    8234 	ld	c, l
      002332 7C                    8235 	ld	a, h
      002333 F8 00                 8236 	ldhl	sp,	#0
      002335 71                    8237 	ld	(hl), c
      002336 23                    8238 	inc	hl
      002337 77                    8239 	ld	(hl), a
                                   8240 ;src/main.c:863: uint8_t i = enemyCollisionCount;
      002338 FArEDr00              8241 	ld	a, (#_enemyCollisionCount)
      00233B F8 02                 8242 	ldhl	sp,	#2
      00233D 77                    8243 	ld	(hl), a
                                   8244 ;src/main.c:865: if (eptr->visible && eptr->alive) {
      00233E D1                    8245 	pop	de
      00233F D5                    8246 	push	de
      002340 21 0A 00              8247 	ld	hl, #0x000a
      002343 19                    8248 	add	hl, de
      002344 4D                    8249 	ld	c, l
      002345 44                    8250 	ld	b, h
      002346 0A                    8251 	ld	a, (bc)
      002347 B7                    8252 	or	a, a
      002348 CArCBr27              8253 	jp	Z, 00139$
      00234B D1                    8254 	pop	de
      00234C D5                    8255 	push	de
      00234D 21 09 00              8256 	ld	hl, #0x0009
      002350 19                    8257 	add	hl, de
      002351 4D                    8258 	ld	c, l
      002352 44                    8259 	ld	b, h
      002353 0A                    8260 	ld	a, (bc)
      002354 B7                    8261 	or	a, a
      002355 CArCBr27              8262 	jp	Z, 00139$
                                   8263 ;src/main.c:867: uint8_t alive = 1;
      002358 F8 12                 8264 	ldhl	sp,	#18
      00235A 36 01                 8265 	ld	(hl), #0x01
                                   8266 ;src/main.c:870: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00235C D1                    8267 	pop	de
      00235D D5                    8268 	push	de
      00235E 21 08 00              8269 	ld	hl, #0x0008
      002361 19                    8270 	add	hl, de
      002362 4D                    8271 	ld	c, l
      002363 44                    8272 	ld	b, h
      002364 0A                    8273 	ld	a, (bc)
      002365 4F                    8274 	ld	c, a
      002366 3D                    8275 	dec	a
      002367 3E 01                 8276 	ld	a, #0x01
      002369 28 01                 8277 	jr	Z, 00350$
      00236B AF                    8278 	xor	a, a
      00236C                       8279 00350$:
      00236C F8 13                 8280 	ldhl	sp,	#19
      00236E 77                    8281 	ld	(hl), a
      00236F FArE3r00              8282 	ld	a, (#_playerDrawX)
      002372 F8 14                 8283 	ldhl	sp,	#20
      002374 77                    8284 	ld	(hl), a
                                   8285 ;src/main.c:871: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002375 79                    8286 	ld	a, c
      002376 D6 02                 8287 	sub	a, #0x02
      002378 3E 01                 8288 	ld	a, #0x01
      00237A 28 01                 8289 	jr	Z, 00352$
      00237C AF                    8290 	xor	a, a
      00237D                       8291 00352$:
      00237D F8 15                 8292 	ldhl	sp,	#21
                                   8293 ;src/main.c:870: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00237F 32                    8294 	ld	(hl-), a
      002380 2B                    8295 	dec	hl
      002381 7E                    8296 	ld	a, (hl)
      002382 B7                    8297 	or	a, a
      002383 28 2F                 8298 	jr	Z, 00110$
      002385 D1                    8299 	pop	de
      002386 D5                    8300 	push	de
      002387 1A                    8301 	ld	a, (de)
      002388 F8 16                 8302 	ldhl	sp,	#22
      00238A 77                    8303 	ld	(hl), a
      00238B 3A                    8304 	ld	a, (hl-)
      00238C 2B                    8305 	dec	hl
      00238D 96                    8306 	sub	a, (hl)
      00238E 23                    8307 	inc	hl
      00238F 23                    8308 	inc	hl
      002390 77                    8309 	ld	(hl), a
                                   8310 ;src/main.c:367: if (value >= 0) return value;
      002391 CB 7E                 8311 	bit	7, (hl)
      002393 28 06                 8312 	jr	Z, 00147$
                                   8313 ;src/main.c:368: else return - value;
      002395 AF                    8314 	xor	a, a
      002396 F8 16                 8315 	ldhl	sp,	#22
      002398 96                    8316 	sub	a, (hl)
      002399 4F                    8317 	ld	c, a
      00239A 71                    8318 	ld	(hl), c
                                   8319 ;src/main.c:870: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00239B                       8320 00147$:
      00239B F8 16                 8321 	ldhl	sp,	#22
      00239D 5E                    8322 	ld	e, (hl)
      00239E 3E 08                 8323 	ld	a,#0x08
      0023A0 57                    8324 	ld	d,a
      0023A1 96                    8325 	sub	a, (hl)
      0023A2 CB 7B                 8326 	bit	7, e
      0023A4 28 07                 8327 	jr	Z, 00353$
      0023A6 CB 7A                 8328 	bit	7, d
      0023A8 20 08                 8329 	jr	NZ, 00354$
      0023AA BF                    8330 	cp	a, a
      0023AB 18 05                 8331 	jr	00354$
      0023AD                       8332 00353$:
      0023AD CB 7A                 8333 	bit	7, d
      0023AF 28 01                 8334 	jr	Z, 00354$
      0023B1 37                    8335 	scf
      0023B2                       8336 00354$:
      0023B2 30 2F                 8337 	jr	NC, 00106$
      0023B4                       8338 00110$:
                                   8339 ;src/main.c:871: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0023B4 F8 15                 8340 	ldhl	sp,	#21
      0023B6 7E                    8341 	ld	a, (hl)
      0023B7 B7                    8342 	or	a, a
      0023B8 CAr9Er24              8343 	jp	Z, 00107$
      0023BB 2B                    8344 	dec	hl
      0023BC D1                    8345 	pop	de
      0023BD D5                    8346 	push	de
      0023BE 1A                    8347 	ld	a, (de)
      0023BF 96                    8348 	sub	a, (hl)
      0023C0 4F                    8349 	ld	c, a
                                   8350 ;src/main.c:367: if (value >= 0) return value;
      0023C1 CB 79                 8351 	bit	7, c
      0023C3 20 03                 8352 	jr	NZ, 00149$
      0023C5 41                    8353 	ld	b, c
      0023C6 18 03                 8354 	jr	00151$
      0023C8                       8355 00149$:
                                   8356 ;src/main.c:368: else return - value;
      0023C8 AF                    8357 	xor	a, a
      0023C9 91                    8358 	sub	a, c
      0023CA 47                    8359 	ld	b, a
                                   8360 ;src/main.c:871: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0023CB                       8361 00151$:
      0023CB 58                    8362 	ld	e, b
      0023CC 3E 10                 8363 	ld	a,#0x10
      0023CE 57                    8364 	ld	d,a
      0023CF 90                    8365 	sub	a, b
      0023D0 CB 7B                 8366 	bit	7, e
      0023D2 28 07                 8367 	jr	Z, 00355$
      0023D4 CB 7A                 8368 	bit	7, d
      0023D6 20 08                 8369 	jr	NZ, 00356$
      0023D8 BF                    8370 	cp	a, a
      0023D9 18 05                 8371 	jr	00356$
      0023DB                       8372 00355$:
      0023DB CB 7A                 8373 	bit	7, d
      0023DD 28 01                 8374 	jr	Z, 00356$
      0023DF 37                    8375 	scf
      0023E0                       8376 00356$:
      0023E0 DAr9Er24              8377 	jp	C, 00107$
      0023E3                       8378 00106$:
                                   8379 ;src/main.c:872: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0023E3 C1                    8380 	pop	bc
      0023E4 C5                    8381 	push	bc
      0023E5 03                    8382 	inc	bc
      0023E6 03                    8383 	inc	bc
      0023E7 FArE4r00              8384 	ld	a, (#_playerDrawY)
      0023EA F8 16                 8385 	ldhl	sp,	#22
      0023EC 77                    8386 	ld	(hl), a
      0023ED F8 13                 8387 	ldhl	sp,	#19
      0023EF 7E                    8388 	ld	a, (hl)
      0023F0 B7                    8389 	or	a, a
      0023F1 28 23                 8390 	jr	Z, 00105$
      0023F3 0A                    8391 	ld	a, (bc)
      0023F4 F8 16                 8392 	ldhl	sp,	#22
      0023F6 96                    8393 	sub	a, (hl)
      0023F7 6F                    8394 	ld	l, a
                                   8395 ;	spillPairReg hl
                                   8396 ;	spillPairReg hl
                                   8397 ;src/main.c:367: if (value >= 0) return value;
      0023F8 CB 7D                 8398 	bit	7, l
      0023FA 28 03                 8399 	jr	Z, 00155$
                                   8400 ;src/main.c:368: else return - value;
      0023FC AF                    8401 	xor	a, a
      0023FD 95                    8402 	sub	a, l
      0023FE 6F                    8403 	ld	l, a
                                   8404 ;	spillPairReg hl
                                   8405 ;	spillPairReg hl
                                   8406 ;src/main.c:872: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0023FF                       8407 00155$:
      0023FF 5D                    8408 	ld	e, l
      002400 3E 08                 8409 	ld	a,#0x08
      002402 57                    8410 	ld	d,a
      002403 95                    8411 	sub	a, l
      002404 CB 7B                 8412 	bit	7, e
      002406 28 07                 8413 	jr	Z, 00357$
      002408 CB 7A                 8414 	bit	7, d
      00240A 20 08                 8415 	jr	NZ, 00358$
      00240C BF                    8416 	cp	a, a
      00240D 18 05                 8417 	jr	00358$
      00240F                       8418 00357$:
      00240F CB 7A                 8419 	bit	7, d
      002411 28 01                 8420 	jr	Z, 00358$
      002413 37                    8421 	scf
      002414                       8422 00358$:
      002414 30 29                 8423 	jr	NC, 00101$
      002416                       8424 00105$:
                                   8425 ;src/main.c:873: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002416 F8 15                 8426 	ldhl	sp,	#21
      002418 7E                    8427 	ld	a, (hl)
      002419 B7                    8428 	or	a, a
      00241A CAr9Er24              8429 	jp	Z, 00107$
      00241D 23                    8430 	inc	hl
      00241E 0A                    8431 	ld	a, (bc)
      00241F 96                    8432 	sub	a, (hl)
      002420 4F                    8433 	ld	c, a
                                   8434 ;src/main.c:367: if (value >= 0) return value;
      002421 CB 79                 8435 	bit	7, c
      002423 28 03                 8436 	jr	Z, 00159$
                                   8437 ;src/main.c:368: else return - value;
      002425 AF                    8438 	xor	a, a
      002426 91                    8439 	sub	a, c
      002427 4F                    8440 	ld	c, a
                                   8441 ;src/main.c:873: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002428                       8442 00159$:
      002428 59                    8443 	ld	e, c
      002429 3E 10                 8444 	ld	a,#0x10
      00242B 57                    8445 	ld	d,a
      00242C 91                    8446 	sub	a, c
      00242D CB 7B                 8447 	bit	7, e
      00242F 28 07                 8448 	jr	Z, 00359$
      002431 CB 7A                 8449 	bit	7, d
      002433 20 08                 8450 	jr	NZ, 00360$
      002435 BF                    8451 	cp	a, a
      002436 18 05                 8452 	jr	00360$
      002438                       8453 00359$:
      002438 CB 7A                 8454 	bit	7, d
      00243A 28 01                 8455 	jr	Z, 00360$
      00243C 37                    8456 	scf
      00243D                       8457 00360$:
      00243D 38 5F                 8458 	jr	C, 00107$
      00243F                       8459 00101$:
                                   8460 ;src/main.c:875: set_sprite_tile(10+(i<<1), 0x7f);
      00243F F8 02                 8461 	ldhl	sp,	#2
      002441 7E                    8462 	ld	a, (hl)
      002442 87                    8463 	add	a, a
      002443 C6 0A                 8464 	add	a, #0x0a
                                   8465 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002445 6F                    8466 	ld	l, a
      002446 01r00r00              8467 	ld	bc, #_shadow_OAM+0
                                   8468 ;	spillPairReg hl
                                   8469 ;	spillPairReg hl
      002449 26 00                 8470 	ld	h, #0x00
                                   8471 ;	spillPairReg hl
                                   8472 ;	spillPairReg hl
      00244B 29                    8473 	add	hl, hl
      00244C 29                    8474 	add	hl, hl
      00244D 09                    8475 	add	hl, bc
      00244E 23                    8476 	inc	hl
      00244F 23                    8477 	inc	hl
      002450 36 7F                 8478 	ld	(hl), #0x7f
                                   8479 ;src/main.c:876: set_sprite_tile(10+(i<<1)+1, 0x7f);
      002452 F8 02                 8480 	ldhl	sp,	#2
      002454 7E                    8481 	ld	a, (hl)
      002455 87                    8482 	add	a, a
      002456 C6 0B                 8483 	add	a, #0x0b
                                   8484 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002458 6F                    8485 	ld	l, a
      002459 01r00r00              8486 	ld	bc, #_shadow_OAM+0
                                   8487 ;	spillPairReg hl
                                   8488 ;	spillPairReg hl
      00245C 26 00                 8489 	ld	h, #0x00
                                   8490 ;	spillPairReg hl
                                   8491 ;	spillPairReg hl
      00245E 29                    8492 	add	hl, hl
      00245F 29                    8493 	add	hl, hl
      002460 09                    8494 	add	hl, bc
      002461 23                    8495 	inc	hl
      002462 23                    8496 	inc	hl
      002463 36 7F                 8497 	ld	(hl), #0x7f
                                   8498 ;src/main.c:877: eptr->alive = 0;
      002465 D1                    8499 	pop	de
      002466 D5                    8500 	push	de
      002467 21 09 00              8501 	ld	hl, #0x0009
      00246A 19                    8502 	add	hl, de
      00246B 4D                    8503 	ld	c, l
      00246C 44                    8504 	ld	b, h
      00246D AF                    8505 	xor	a, a
      00246E 02                    8506 	ld	(bc), a
                                   8507 ;src/main.c:878: eptr->visible = 0;
      00246F D1                    8508 	pop	de
      002470 D5                    8509 	push	de
      002471 21 0A 00              8510 	ld	hl, #0x000a
      002474 19                    8511 	add	hl, de
      002475 4D                    8512 	ld	c, l
      002476 44                    8513 	ld	b, h
      002477 AF                    8514 	xor	a, a
      002478 02                    8515 	ld	(bc), a
                                   8516 ;src/main.c:879: takeDamage(eptr->damage);
      002479 D1                    8517 	pop	de
      00247A D5                    8518 	push	de
      00247B 21 0B 00              8519 	ld	hl, #0x000b
      00247E 19                    8520 	add	hl, de
      00247F 4D                    8521 	ld	c, l
      002480 44                    8522 	ld	b, h
      002481 0A                    8523 	ld	a, (bc)
      002482 06 00                 8524 	ld	b, #0x00
      002484 4F                    8525 	ld	c, a
      002485 C5                    8526 	push	bc
      002486 CDrCDr20              8527 	call	_takeDamage
      002489 E1                    8528 	pop	hl
                                   8529 ;src/main.c:880: initEnemy(i);
      00248A F8 02                 8530 	ldhl	sp,	#2
      00248C 7E                    8531 	ld	a, (hl)
      00248D F5                    8532 	push	af
      00248E 33                    8533 	inc	sp
      00248F CDr84r11              8534 	call	_initEnemy
      002492 33                    8535 	inc	sp
                                   8536 ;src/main.c:881: playSound(0);
      002493 AF                    8537 	xor	a, a
      002494 F5                    8538 	push	af
      002495 33                    8539 	inc	sp
      002496 CDrB6r0F              8540 	call	_playSound
      002499 33                    8541 	inc	sp
                                   8542 ;src/main.c:883: alive = 0;
      00249A F8 12                 8543 	ldhl	sp,	#18
      00249C 36 00                 8544 	ld	(hl), #0x00
      00249E                       8545 00107$:
                                   8546 ;src/main.c:889: if (alive) {
      00249E F8 12                 8547 	ldhl	sp,	#18
      0024A0 7E                    8548 	ld	a, (hl)
      0024A1 B7                    8549 	or	a, a
      0024A2 CArCBr27              8550 	jp	Z, 00139$
                                   8551 ;src/main.c:890: struct Projectile *pptr = projectiles;
      0024A5 23                    8552 	inc	hl
      0024A6 3ErB4                 8553 	ld	a, #<(_projectiles)
      0024A8 22                    8554 	ld	(hl+), a
      0024A9 36s00                 8555 	ld	(hl), #>(_projectiles)
                                   8556 ;src/main.c:892: while (j < PROJECTILECOUNT) {
      0024AB D1                    8557 	pop	de
      0024AC D5                    8558 	push	de
      0024AD 21 02 00              8559 	ld	hl, #0x0002
      0024B0 19                    8560 	add	hl, de
      0024B1 E5                    8561 	push	hl
      0024B2 7D                    8562 	ld	a, l
      0024B3 F8 05                 8563 	ldhl	sp,	#5
      0024B5 77                    8564 	ld	(hl), a
      0024B6 E1                    8565 	pop	hl
      0024B7 7C                    8566 	ld	a, h
      0024B8 F8 04                 8567 	ldhl	sp,	#4
      0024BA 32                    8568 	ld	(hl-), a
      0024BB 2A                    8569 	ld	a, (hl+)
      0024BC 23                    8570 	inc	hl
      0024BD 32                    8571 	ld	(hl-), a
      0024BE 2A                    8572 	ld	a, (hl+)
      0024BF 23                    8573 	inc	hl
      0024C0 77                    8574 	ld	(hl), a
      0024C1 D1                    8575 	pop	de
      0024C2 D5                    8576 	push	de
      0024C3 21 08 00              8577 	ld	hl, #0x0008
      0024C6 19                    8578 	add	hl, de
      0024C7 E5                    8579 	push	hl
      0024C8 7D                    8580 	ld	a, l
      0024C9 F8 09                 8581 	ldhl	sp,	#9
      0024CB 77                    8582 	ld	(hl), a
      0024CC E1                    8583 	pop	hl
      0024CD 7C                    8584 	ld	a, h
      0024CE F8 08                 8585 	ldhl	sp,	#8
      0024D0 77                    8586 	ld	(hl), a
      0024D1 F8 03                 8587 	ldhl	sp,	#3
      0024D3 7E                    8588 	ld	a, (hl)
      0024D4 F8 09                 8589 	ldhl	sp,	#9
      0024D6 77                    8590 	ld	(hl), a
      0024D7 F8 04                 8591 	ldhl	sp,	#4
      0024D9 7E                    8592 	ld	a, (hl)
      0024DA F8 0A                 8593 	ldhl	sp,	#10
      0024DC 77                    8594 	ld	(hl), a
      0024DD F8 15                 8595 	ldhl	sp,	#21
      0024DF 36 00                 8596 	ld	(hl), #0x00
      0024E1                       8597 00133$:
      0024E1 21rBFr0B              8598 	ld	hl, #_PROJECTILECOUNT
      0024E4 4E                    8599 	ld	c, (hl)
      0024E5 F8 15                 8600 	ldhl	sp,	#21
      0024E7 7E                    8601 	ld	a, (hl)
      0024E8 91                    8602 	sub	a, c
      0024E9 D2rCBr27              8603 	jp	NC, 00139$
                                   8604 ;src/main.c:893: if (pptr->active) {
      0024EC 2B                    8605 	dec	hl
      0024ED 2B                    8606 	dec	hl
      0024EE 2A                    8607 	ld	a, (hl+)
      0024EF 5F                    8608 	ld	e, a
      0024F0 56                    8609 	ld	d, (hl)
      0024F1 21 0A 00              8610 	ld	hl, #0x000a
      0024F4 19                    8611 	add	hl, de
      0024F5 4D                    8612 	ld	c, l
      0024F6 44                    8613 	ld	b, h
      0024F7 0A                    8614 	ld	a, (bc)
      0024F8 B7                    8615 	or	a, a
      0024F9 CArB2r27              8616 	jp	Z, 00132$
                                   8617 ;src/main.c:895: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0024FC F8 07                 8618 	ldhl	sp,#7
      0024FE 2A                    8619 	ld	a, (hl+)
      0024FF 5F                    8620 	ld	e, a
      002500 56                    8621 	ld	d, (hl)
      002501 1A                    8622 	ld	a, (de)
      002502 4F                    8623 	ld	c, a
      002503 3D                    8624 	dec	a
      002504 3E 01                 8625 	ld	a, #0x01
      002506 28 01                 8626 	jr	Z, 00362$
      002508 AF                    8627 	xor	a, a
      002509                       8628 00362$:
      002509 F8 11                 8629 	ldhl	sp,	#17
      00250B 77                    8630 	ld	(hl), a
                                   8631 ;src/main.c:896: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      00250C 79                    8632 	ld	a, c
      00250D D6 02                 8633 	sub	a, #0x02
      00250F 3E 01                 8634 	ld	a, #0x01
      002511 28 01                 8635 	jr	Z, 00364$
      002513 AF                    8636 	xor	a, a
      002514                       8637 00364$:
      002514 F8 12                 8638 	ldhl	sp,	#18
                                   8639 ;src/main.c:895: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002516 32                    8640 	ld	(hl-), a
      002517 7E                    8641 	ld	a, (hl)
      002518 B7                    8642 	or	a, a
      002519 28 2C                 8643 	jr	Z, 00130$
      00251B D1                    8644 	pop	de
      00251C D5                    8645 	push	de
      00251D 1A                    8646 	ld	a, (de)
      00251E F8 13                 8647 	ldhl	sp,#19
      002520 5E                    8648 	ld	e, (hl)
      002521 23                    8649 	inc	hl
      002522 56                    8650 	ld	d, (hl)
      002523 F5                    8651 	push	af
      002524 1A                    8652 	ld	a, (de)
      002525 4F                    8653 	ld	c, a
      002526 F1                    8654 	pop	af
      002527 91                    8655 	sub	a, c
      002528 4F                    8656 	ld	c, a
                                   8657 ;src/main.c:367: if (value >= 0) return value;
      002529 CB 79                 8658 	bit	7, c
      00252B 28 03                 8659 	jr	Z, 00165$
                                   8660 ;src/main.c:368: else return - value;
      00252D AF                    8661 	xor	a, a
      00252E 91                    8662 	sub	a, c
      00252F 4F                    8663 	ld	c, a
                                   8664 ;src/main.c:895: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002530                       8665 00165$:
      002530 59                    8666 	ld	e, c
      002531 3E 08                 8667 	ld	a,#0x08
      002533 57                    8668 	ld	d,a
      002534 91                    8669 	sub	a, c
      002535 CB 7B                 8670 	bit	7, e
      002537 28 07                 8671 	jr	Z, 00365$
      002539 CB 7A                 8672 	bit	7, d
      00253B 20 08                 8673 	jr	NZ, 00366$
      00253D BF                    8674 	cp	a, a
      00253E 18 05                 8675 	jr	00366$
      002540                       8676 00365$:
      002540 CB 7A                 8677 	bit	7, d
      002542 28 01                 8678 	jr	Z, 00366$
      002544 37                    8679 	scf
      002545                       8680 00366$:
      002545 30 3A                 8681 	jr	NC, 00126$
      002547                       8682 00130$:
                                   8683 ;src/main.c:896: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002547 F8 12                 8684 	ldhl	sp,	#18
      002549 7E                    8685 	ld	a, (hl)
      00254A B7                    8686 	or	a, a
      00254B CArB2r27              8687 	jp	Z, 00132$
      00254E 23                    8688 	inc	hl
      00254F D1                    8689 	pop	de
      002550 D5                    8690 	push	de
      002551 1A                    8691 	ld	a, (de)
      002552 5E                    8692 	ld	e, (hl)
      002553 23                    8693 	inc	hl
      002554 56                    8694 	ld	d, (hl)
      002555 23                    8695 	inc	hl
      002556 23                    8696 	inc	hl
      002557 F5                    8697 	push	af
      002558 1A                    8698 	ld	a, (de)
      002559 4F                    8699 	ld	c, a
      00255A F1                    8700 	pop	af
      00255B 91                    8701 	sub	a, c
      00255C 77                    8702 	ld	(hl), a
                                   8703 ;src/main.c:367: if (value >= 0) return value;
      00255D CB 7E                 8704 	bit	7, (hl)
      00255F 20 03                 8705 	jr	NZ, 00167$
      002561 4E                    8706 	ld	c, (hl)
      002562 18 05                 8707 	jr	00169$
      002564                       8708 00167$:
                                   8709 ;src/main.c:368: else return - value;
      002564 AF                    8710 	xor	a, a
      002565 F8 16                 8711 	ldhl	sp,	#22
      002567 96                    8712 	sub	a, (hl)
      002568 4F                    8713 	ld	c, a
                                   8714 ;src/main.c:896: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002569                       8715 00169$:
      002569 59                    8716 	ld	e, c
      00256A 3E 10                 8717 	ld	a,#0x10
      00256C 57                    8718 	ld	d,a
      00256D 91                    8719 	sub	a, c
      00256E CB 7B                 8720 	bit	7, e
      002570 28 07                 8721 	jr	Z, 00367$
      002572 CB 7A                 8722 	bit	7, d
      002574 20 08                 8723 	jr	NZ, 00368$
      002576 BF                    8724 	cp	a, a
      002577 18 05                 8725 	jr	00368$
      002579                       8726 00367$:
      002579 CB 7A                 8727 	bit	7, d
      00257B 28 01                 8728 	jr	Z, 00368$
      00257D 37                    8729 	scf
      00257E                       8730 00368$:
      00257E DArB2r27              8731 	jp	C, 00132$
      002581                       8732 00126$:
                                   8733 ;src/main.c:897: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002581 F8 13                 8734 	ldhl	sp,	#19
      002583 2A                    8735 	ld	a, (hl+)
      002584 4F                    8736 	ld	c, a
      002585 46                    8737 	ld	b, (hl)
      002586 03                    8738 	inc	bc
      002587 03                    8739 	inc	bc
      002588 F8 11                 8740 	ldhl	sp,	#17
      00258A 7E                    8741 	ld	a, (hl)
      00258B B7                    8742 	or	a, a
      00258C 28 2A                 8743 	jr	Z, 00125$
      00258E F8 09                 8744 	ldhl	sp,#9
      002590 2A                    8745 	ld	a, (hl+)
      002591 5F                    8746 	ld	e, a
      002592 56                    8747 	ld	d, (hl)
      002593 1A                    8748 	ld	a, (de)
      002594 F5                    8749 	push	af
      002595 0A                    8750 	ld	a, (bc)
      002596 5F                    8751 	ld	e, a
      002597 F1                    8752 	pop	af
      002598 93                    8753 	sub	a, e
      002599 6F                    8754 	ld	l, a
                                   8755 ;	spillPairReg hl
                                   8756 ;	spillPairReg hl
                                   8757 ;src/main.c:367: if (value >= 0) return value;
      00259A CB 7D                 8758 	bit	7, l
      00259C 28 03                 8759 	jr	Z, 00173$
                                   8760 ;src/main.c:368: else return - value;
      00259E AF                    8761 	xor	a, a
      00259F 95                    8762 	sub	a, l
      0025A0 6F                    8763 	ld	l, a
                                   8764 ;	spillPairReg hl
                                   8765 ;	spillPairReg hl
                                   8766 ;src/main.c:897: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      0025A1                       8767 00173$:
      0025A1 5D                    8768 	ld	e, l
      0025A2 3E 08                 8769 	ld	a,#0x08
      0025A4 57                    8770 	ld	d,a
      0025A5 95                    8771 	sub	a, l
      0025A6 CB 7B                 8772 	bit	7, e
      0025A8 28 07                 8773 	jr	Z, 00369$
      0025AA CB 7A                 8774 	bit	7, d
      0025AC 20 08                 8775 	jr	NZ, 00370$
      0025AE BF                    8776 	cp	a, a
      0025AF 18 05                 8777 	jr	00370$
      0025B1                       8778 00369$:
      0025B1 CB 7A                 8779 	bit	7, d
      0025B3 28 01                 8780 	jr	Z, 00370$
      0025B5 37                    8781 	scf
      0025B6                       8782 00370$:
      0025B6 30 32                 8783 	jr	NC, 00121$
      0025B8                       8784 00125$:
                                   8785 ;src/main.c:898: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      0025B8 F8 12                 8786 	ldhl	sp,	#18
      0025BA 7E                    8787 	ld	a, (hl)
      0025BB B7                    8788 	or	a, a
      0025BC CArB2r27              8789 	jp	Z, 00132$
      0025BF F8 03                 8790 	ldhl	sp,#3
      0025C1 2A                    8791 	ld	a, (hl+)
      0025C2 5F                    8792 	ld	e, a
      0025C3 56                    8793 	ld	d, (hl)
      0025C4 1A                    8794 	ld	a, (de)
      0025C5 F5                    8795 	push	af
      0025C6 0A                    8796 	ld	a, (bc)
      0025C7 4F                    8797 	ld	c, a
      0025C8 F1                    8798 	pop	af
      0025C9 91                    8799 	sub	a, c
      0025CA 4F                    8800 	ld	c, a
                                   8801 ;src/main.c:367: if (value >= 0) return value;
      0025CB CB 79                 8802 	bit	7, c
      0025CD 28 03                 8803 	jr	Z, 00177$
                                   8804 ;src/main.c:368: else return - value;
      0025CF AF                    8805 	xor	a, a
      0025D0 91                    8806 	sub	a, c
      0025D1 4F                    8807 	ld	c, a
                                   8808 ;src/main.c:898: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      0025D2                       8809 00177$:
      0025D2 59                    8810 	ld	e, c
      0025D3 3E 10                 8811 	ld	a,#0x10
      0025D5 57                    8812 	ld	d,a
      0025D6 91                    8813 	sub	a, c
      0025D7 CB 7B                 8814 	bit	7, e
      0025D9 28 07                 8815 	jr	Z, 00371$
      0025DB CB 7A                 8816 	bit	7, d
      0025DD 20 08                 8817 	jr	NZ, 00372$
      0025DF BF                    8818 	cp	a, a
      0025E0 18 05                 8819 	jr	00372$
      0025E2                       8820 00371$:
      0025E2 CB 7A                 8821 	bit	7, d
      0025E4 28 01                 8822 	jr	Z, 00372$
      0025E6 37                    8823 	scf
      0025E7                       8824 00372$:
      0025E7 DArB2r27              8825 	jp	C, 00132$
      0025EA                       8826 00121$:
                                   8827 ;src/main.c:900: set_sprite_tile(30+j, 0x7f);
      0025EA F8 15                 8828 	ldhl	sp,	#21
      0025EC 7E                    8829 	ld	a, (hl)
      0025ED C6 1E                 8830 	add	a, #0x1e
                                   8831 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0025EF 6F                    8832 	ld	l, a
      0025F0 01r00r00              8833 	ld	bc, #_shadow_OAM+0
                                   8834 ;	spillPairReg hl
                                   8835 ;	spillPairReg hl
      0025F3 26 00                 8836 	ld	h, #0x00
                                   8837 ;	spillPairReg hl
                                   8838 ;	spillPairReg hl
      0025F5 29                    8839 	add	hl, hl
      0025F6 29                    8840 	add	hl, hl
      0025F7 09                    8841 	add	hl, bc
      0025F8 23                    8842 	inc	hl
      0025F9 23                    8843 	inc	hl
      0025FA 36 7F                 8844 	ld	(hl), #0x7f
                                   8845 ;src/main.c:901: pptr->active = 0;
      0025FC F8 13                 8846 	ldhl	sp,#19
      0025FE 2A                    8847 	ld	a, (hl+)
      0025FF 5F                    8848 	ld	e, a
      002600 56                    8849 	ld	d, (hl)
      002601 21 0A 00              8850 	ld	hl, #0x000a
      002604 19                    8851 	add	hl, de
      002605 4D                    8852 	ld	c, l
      002606 44                    8853 	ld	b, h
      002607 AF                    8854 	xor	a, a
      002608 02                    8855 	ld	(bc), a
                                   8856 ;src/main.c:903: if (pptr->type == 0x2c) { //missile
      002609 F8 13                 8857 	ldhl	sp,#19
      00260B 2A                    8858 	ld	a, (hl+)
      00260C 5F                    8859 	ld	e, a
      00260D 56                    8860 	ld	d, (hl)
      00260E 21 0C 00              8861 	ld	hl, #0x000c
      002611 19                    8862 	add	hl, de
      002612 4D                    8863 	ld	c, l
      002613 44                    8864 	ld	b, h
      002614 0A                    8865 	ld	a, (bc)
      002615 5F                    8866 	ld	e, a
                                   8867 ;src/main.c:908: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002616 D5                    8868 	push	de
      002617 F8 15                 8869 	ldhl	sp,#21
      002619 2A                    8870 	ld	a, (hl+)
      00261A 5F                    8871 	ld	e, a
      00261B 56                    8872 	ld	d, (hl)
      00261C 21 08 00              8873 	ld	hl, #0x0008
      00261F 19                    8874 	add	hl, de
      002620 D1                    8875 	pop	de
      002621 4D                    8876 	ld	c, l
      002622 44                    8877 	ld	b, h
                                   8878 ;src/main.c:903: if (pptr->type == 0x2c) { //missile
      002623 7B                    8879 	ld	a, e
      002624 D6 2C                 8880 	sub	a, #0x2c
      002626 C2r57r27              8881 	jp	NZ,00119$
                                   8882 ;src/main.c:908: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002629 F8 0B                 8883 	ldhl	sp,	#11
      00262B 79                    8884 	ld	a, c
      00262C 22                    8885 	ld	(hl+), a
      00262D 70                    8886 	ld	(hl), b
      00262E F8 16                 8887 	ldhl	sp,	#22
      002630 36 00                 8888 	ld	(hl), #0x00
      002632                       8889 00188$:
      002632 21rAEr0B              8890 	ld	hl, #_ENEMYCOUNT
      002635 4E                    8891 	ld	c, (hl)
      002636 F8 16                 8892 	ldhl	sp,	#22
      002638 7E                    8893 	ld	a, (hl)
      002639 91                    8894 	sub	a, c
      00263A D2rB2r27              8895 	jp	NC, 00132$
                                   8896 ;src/main.c:909: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      00263D D1                    8897 	pop	de
      00263E D5                    8898 	push	de
      00263F 1A                    8899 	ld	a, (de)
      002640 F8 0F                 8900 	ldhl	sp,	#15
      002642 22                    8901 	ld	(hl+), a
      002643 13                    8902 	inc	de
      002644 1A                    8903 	ld	a, (de)
      002645 77                    8904 	ld	(hl), a
      002646 F8 16                 8905 	ldhl	sp,	#22
      002648 4E                    8906 	ld	c, (hl)
      002649 06 00                 8907 	ld	b, #0x00
      00264B 69                    8908 	ld	l, c
      00264C 60                    8909 	ld	h, b
      00264D 29                    8910 	add	hl, hl
      00264E 29                    8911 	add	hl, hl
      00264F 29                    8912 	add	hl, hl
      002650 09                    8913 	add	hl, bc
      002651 29                    8914 	add	hl, hl
      002652 01r5Ar00              8915 	ld	bc,#_enemies
      002655 09                    8916 	add	hl,bc
      002656 E5                    8917 	push	hl
      002657 7D                    8918 	ld	a, l
      002658 F8 13                 8919 	ldhl	sp,	#19
      00265A 77                    8920 	ld	(hl), a
      00265B E1                    8921 	pop	hl
      00265C 7C                    8922 	ld	a, h
      00265D F8 12                 8923 	ldhl	sp,	#18
      00265F 32                    8924 	ld	(hl-), a
      002660 2A                    8925 	ld	a, (hl+)
      002661 5F                    8926 	ld	e, a
      002662 3A                    8927 	ld	a, (hl-)
      002663 2B                    8928 	dec	hl
      002664 2B                    8929 	dec	hl
      002665 57                    8930 	ld	d, a
      002666 1A                    8931 	ld	a, (de)
      002667 4F                    8932 	ld	c, a
      002668 13                    8933 	inc	de
      002669 1A                    8934 	ld	a, (de)
      00266A 47                    8935 	ld	b, a
      00266B 2A                    8936 	ld	a, (hl+)
      00266C 5F                    8937 	ld	e, a
      00266D 56                    8938 	ld	d, (hl)
      00266E 7B                    8939 	ld	a, e
      00266F 91                    8940 	sub	a, c
      002670 5F                    8941 	ld	e, a
      002671 7A                    8942 	ld	a, d
      002672 98                    8943 	sbc	a, b
      002673 4B                    8944 	ld	c, e
      002674 47                    8945 	ld	b, a
                                   8946 ;	spillPairReg hl
                                   8947 ;	spillPairReg hl
      002675 60                    8948 	ld	h, b
                                   8949 ;	spillPairReg hl
                                   8950 ;	spillPairReg hl
      002676 CB 7C                 8951 	bit	7, h
      002678 20 07                 8952 	jr	NZ, 00180$
      00267A F8 0F                 8953 	ldhl	sp,	#15
      00267C 79                    8954 	ld	a, c
      00267D 22                    8955 	ld	(hl+), a
      00267E 70                    8956 	ld	(hl), b
      00267F 18 0B                 8957 	jr	00182$
      002681                       8958 00180$:
      002681 AF                    8959 	xor	a, a
      002682 91                    8960 	sub	a, c
      002683 4F                    8961 	ld	c, a
      002684 9F                    8962 	sbc	a, a
      002685 90                    8963 	sub	a, b
      002686 47                    8964 	ld	b, a
      002687 F8 0F                 8965 	ldhl	sp,	#15
      002689 79                    8966 	ld	a, c
      00268A 22                    8967 	ld	(hl+), a
      00268B 70                    8968 	ld	(hl), b
      00268C                       8969 00182$:
      00268C F8 05                 8970 	ldhl	sp,#5
      00268E 2A                    8971 	ld	a, (hl+)
      00268F 5F                    8972 	ld	e, a
      002690 56                    8973 	ld	d, (hl)
      002691 1A                    8974 	ld	a, (de)
      002692 4F                    8975 	ld	c, a
      002693 13                    8976 	inc	de
      002694 1A                    8977 	ld	a, (de)
      002695 47                    8978 	ld	b, a
      002696 F8 11                 8979 	ldhl	sp,	#17
      002698 2A                    8980 	ld	a, (hl+)
      002699 66                    8981 	ld	h, (hl)
                                   8982 ;	spillPairReg hl
                                   8983 ;	spillPairReg hl
      00269A 6F                    8984 	ld	l, a
                                   8985 ;	spillPairReg hl
                                   8986 ;	spillPairReg hl
      00269B 23                    8987 	inc	hl
      00269C 23                    8988 	inc	hl
      00269D 2A                    8989 	ld	a,	(hl+)
      00269E 66                    8990 	ld	h, (hl)
                                   8991 ;	spillPairReg hl
      00269F 6F                    8992 	ld	l, a
                                   8993 ;	spillPairReg hl
                                   8994 ;	spillPairReg hl
      0026A0 79                    8995 	ld	a, c
      0026A1 95                    8996 	sub	a, l
      0026A2 4F                    8997 	ld	c, a
      0026A3 78                    8998 	ld	a, b
      0026A4 9C                    8999 	sbc	a, h
      0026A5 47                    9000 	ld	b, a
                                   9001 ;	spillPairReg hl
                                   9002 ;	spillPairReg hl
      0026A6 60                    9003 	ld	h, b
                                   9004 ;	spillPairReg hl
                                   9005 ;	spillPairReg hl
      0026A7 CB 7C                 9006 	bit	7, h
      0026A9 28 06                 9007 	jr	Z, 00186$
      0026AB AF                    9008 	xor	a, a
      0026AC 91                    9009 	sub	a, c
      0026AD 4F                    9010 	ld	c, a
      0026AE 9F                    9011 	sbc	a, a
      0026AF 90                    9012 	sub	a, b
      0026B0 47                    9013 	ld	b, a
      0026B1                       9014 00186$:
      0026B1 F8 0F                 9015 	ldhl	sp,	#15
      0026B3 2A                    9016 	ld	a,	(hl+)
      0026B4 66                    9017 	ld	h, (hl)
      0026B5 6F                    9018 	ld	l, a
      0026B6 09                    9019 	add	hl, bc
      0026B7 4D                    9020 	ld	c, l
      0026B8 44                    9021 	ld	b, h
      0026B9 21rC4r0B              9022 	ld	hl, #_SPLASHDROPOFF
      0026BC 5E                    9023 	ld	e, (hl)
      0026BD 1C                    9024 	inc	e
      0026BE 18 04                 9025 	jr	00376$
      0026C0                       9026 00375$:
      0026C0 CB 21                 9027 	sla	c
      0026C2 CB 10                 9028 	rl	b
      0026C4                       9029 00376$:
      0026C4 1D                    9030 	dec	e
      0026C5 20 F9                 9031 	jr	NZ,00375$
                                   9032 ;src/main.c:910: int16_t dmg = pptr->damage - dmgDropOff;
      0026C7 F8 0B                 9033 	ldhl	sp,#11
      0026C9 2A                    9034 	ld	a, (hl+)
      0026CA 5F                    9035 	ld	e, a
      0026CB 56                    9036 	ld	d, (hl)
      0026CC 1A                    9037 	ld	a, (de)
      0026CD 6F                    9038 	ld	l, a
                                   9039 ;	spillPairReg hl
                                   9040 ;	spillPairReg hl
      0026CE 13                    9041 	inc	de
      0026CF 1A                    9042 	ld	a, (de)
      0026D0 67                    9043 	ld	h, a
                                   9044 ;	spillPairReg hl
                                   9045 ;	spillPairReg hl
      0026D1 7D                    9046 	ld	a, l
      0026D2 91                    9047 	sub	a, c
      0026D3 5F                    9048 	ld	e, a
      0026D4 7C                    9049 	ld	a, h
      0026D5 98                    9050 	sbc	a, b
      0026D6 F8 0D                 9051 	ldhl	sp,	#13
      0026D8 73                    9052 	ld	(hl), e
      0026D9 23                    9053 	inc	hl
                                   9054 ;src/main.c:911: if (dmg > 0) {
      0026DA 32                    9055 	ld	(hl-), a
      0026DB 2A                    9056 	ld	a, (hl+)
      0026DC 4F                    9057 	ld	c, a
      0026DD 46                    9058 	ld	b, (hl)
      0026DE 58                    9059 	ld	e, b
      0026DF AF                    9060 	xor	a, a
      0026E0 57                    9061 	ld	d, a
      0026E1 B9                    9062 	cp	a, c
      0026E2 98                    9063 	sbc	a, b
      0026E3 CB 7B                 9064 	bit	7, e
      0026E5 28 07                 9065 	jr	Z, 00377$
      0026E7 CB 7A                 9066 	bit	7, d
      0026E9 20 08                 9067 	jr	NZ, 00378$
      0026EB BF                    9068 	cp	a, a
      0026EC 18 05                 9069 	jr	00378$
      0026EE                       9070 00377$:
      0026EE CB 7A                 9071 	bit	7, d
      0026F0 28 01                 9072 	jr	Z, 00378$
      0026F2 37                    9073 	scf
      0026F3                       9074 00378$:
      0026F3 30 5C                 9075 	jr	NC, 00189$
                                   9076 ;src/main.c:912: enemies[k].hp -= dmg;
      0026F5 F8 11                 9077 	ldhl	sp,#17
      0026F7 2A                    9078 	ld	a, (hl+)
      0026F8 5F                    9079 	ld	e, a
      0026F9 56                    9080 	ld	d, (hl)
      0026FA 21 10 00              9081 	ld	hl, #0x0010
      0026FD 19                    9082 	add	hl, de
      0026FE E5                    9083 	push	hl
      0026FF 7D                    9084 	ld	a, l
      002700 F8 11                 9085 	ldhl	sp,	#17
      002702 77                    9086 	ld	(hl), a
      002703 E1                    9087 	pop	hl
      002704 7C                    9088 	ld	a, h
      002705 F8 10                 9089 	ldhl	sp,	#16
      002707 32                    9090 	ld	(hl-), a
      002708 2A                    9091 	ld	a, (hl+)
      002709 5F                    9092 	ld	e, a
      00270A 2A                    9093 	ld	a, (hl+)
      00270B 57                    9094 	ld	d, a
      00270C 1A                    9095 	ld	a, (de)
      00270D 22                    9096 	ld	(hl+), a
      00270E 13                    9097 	inc	de
      00270F 1A                    9098 	ld	a, (de)
      002710 32                    9099 	ld	(hl-), a
      002711 2A                    9100 	ld	a, (hl+)
      002712 5F                    9101 	ld	e, a
      002713 56                    9102 	ld	d, (hl)
      002714 F8 0D                 9103 	ldhl	sp,	#13
      002716 2A                    9104 	ld	a,	(hl+)
      002717 66                    9105 	ld	h, (hl)
      002718 6F                    9106 	ld	l, a
      002719 7B                    9107 	ld	a, e
      00271A 95                    9108 	sub	a, l
      00271B 5F                    9109 	ld	e, a
      00271C 7A                    9110 	ld	a, d
      00271D 9C                    9111 	sbc	a, h
      00271E 47                    9112 	ld	b, a
      00271F 4B                    9113 	ld	c, e
      002720 F8 0F                 9114 	ldhl	sp,	#15
      002722 2A                    9115 	ld	a,	(hl+)
      002723 66                    9116 	ld	h, (hl)
      002724 6F                    9117 	ld	l, a
      002725 79                    9118 	ld	a, c
      002726 22                    9119 	ld	(hl+), a
      002727 70                    9120 	ld	(hl), b
                                   9121 ;src/main.c:913: if (enemies[k].hp <= 0) {
      002728 58                    9122 	ld	e, b
      002729 AF                    9123 	xor	a, a
      00272A 57                    9124 	ld	d, a
      00272B B9                    9125 	cp	a, c
      00272C 98                    9126 	sbc	a, b
      00272D CB 7B                 9127 	bit	7, e
      00272F 28 07                 9128 	jr	Z, 00379$
      002731 CB 7A                 9129 	bit	7, d
      002733 20 08                 9130 	jr	NZ, 00380$
      002735 BF                    9131 	cp	a, a
      002736 18 05                 9132 	jr	00380$
      002738                       9133 00379$:
      002738 CB 7A                 9134 	bit	7, d
      00273A 28 01                 9135 	jr	Z, 00380$
      00273C 37                    9136 	scf
      00273D                       9137 00380$:
      00273D 38 12                 9138 	jr	C, 00189$
                                   9139 ;src/main.c:914: killEnemy(k);
      00273F F8 16                 9140 	ldhl	sp,	#22
      002741 7E                    9141 	ld	a, (hl)
      002742 F5                    9142 	push	af
      002743 33                    9143 	inc	sp
      002744 CDr86r21              9144 	call	_killEnemy
      002747 33                    9145 	inc	sp
                                   9146 ;src/main.c:915: initEnemy(k);
      002748 F8 16                 9147 	ldhl	sp,	#22
      00274A 7E                    9148 	ld	a, (hl)
      00274B F5                    9149 	push	af
      00274C 33                    9150 	inc	sp
      00274D CDr84r11              9151 	call	_initEnemy
      002750 33                    9152 	inc	sp
      002751                       9153 00189$:
                                   9154 ;src/main.c:908: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002751 F8 16                 9155 	ldhl	sp,	#22
      002753 34                    9156 	inc	(hl)
      002754 C3r32r26              9157 	jp	00188$
      002757                       9158 00119$:
                                   9159 ;src/main.c:923: eptr->hp -= pptr->damage;
      002757 D1                    9160 	pop	de
      002758 D5                    9161 	push	de
      002759 21 10 00              9162 	ld	hl, #0x0010
      00275C 19                    9163 	add	hl, de
      00275D E5                    9164 	push	hl
      00275E 7D                    9165 	ld	a, l
      00275F F8 11                 9166 	ldhl	sp,	#17
      002761 77                    9167 	ld	(hl), a
      002762 E1                    9168 	pop	hl
      002763 7C                    9169 	ld	a, h
      002764 F8 10                 9170 	ldhl	sp,	#16
      002766 32                    9171 	ld	(hl-), a
      002767 2A                    9172 	ld	a, (hl+)
      002768 5F                    9173 	ld	e, a
      002769 2A                    9174 	ld	a, (hl+)
      00276A 57                    9175 	ld	d, a
      00276B 1A                    9176 	ld	a, (de)
      00276C 22                    9177 	ld	(hl+), a
      00276D 13                    9178 	inc	de
      00276E 1A                    9179 	ld	a, (de)
      00276F 77                    9180 	ld	(hl), a
      002770 69                    9181 	ld	l, c
      002771 60                    9182 	ld	h, b
      002772 2A                    9183 	ld	a, (hl+)
      002773 4F                    9184 	ld	c, a
      002774 46                    9185 	ld	b, (hl)
      002775 F8 11                 9186 	ldhl	sp,#17
      002777 2A                    9187 	ld	a, (hl+)
      002778 5F                    9188 	ld	e, a
      002779 56                    9189 	ld	d, (hl)
      00277A 7B                    9190 	ld	a, e
      00277B 91                    9191 	sub	a, c
      00277C 5F                    9192 	ld	e, a
      00277D 7A                    9193 	ld	a, d
      00277E 98                    9194 	sbc	a, b
      00277F 47                    9195 	ld	b, a
      002780 4B                    9196 	ld	c, e
      002781 F8 0F                 9197 	ldhl	sp,	#15
      002783 2A                    9198 	ld	a,	(hl+)
      002784 66                    9199 	ld	h, (hl)
      002785 6F                    9200 	ld	l, a
      002786 79                    9201 	ld	a, c
      002787 22                    9202 	ld	(hl+), a
      002788 70                    9203 	ld	(hl), b
                                   9204 ;src/main.c:925: if (eptr->hp <= 0) {
      002789 58                    9205 	ld	e, b
      00278A AF                    9206 	xor	a, a
      00278B 57                    9207 	ld	d, a
      00278C B9                    9208 	cp	a, c
      00278D 98                    9209 	sbc	a, b
      00278E CB 7B                 9210 	bit	7, e
      002790 28 07                 9211 	jr	Z, 00381$
      002792 CB 7A                 9212 	bit	7, d
      002794 20 08                 9213 	jr	NZ, 00382$
      002796 BF                    9214 	cp	a, a
      002797 18 05                 9215 	jr	00382$
      002799                       9216 00381$:
      002799 CB 7A                 9217 	bit	7, d
      00279B 28 01                 9218 	jr	Z, 00382$
      00279D 37                    9219 	scf
      00279E                       9220 00382$:
      00279E 38 12                 9221 	jr	C, 00132$
                                   9222 ;src/main.c:927: killEnemy(i);
      0027A0 F8 02                 9223 	ldhl	sp,	#2
      0027A2 7E                    9224 	ld	a, (hl)
      0027A3 F5                    9225 	push	af
      0027A4 33                    9226 	inc	sp
      0027A5 CDr86r21              9227 	call	_killEnemy
      0027A8 33                    9228 	inc	sp
                                   9229 ;src/main.c:928: initEnemy(i);
      0027A9 F8 02                 9230 	ldhl	sp,	#2
      0027AB 7E                    9231 	ld	a, (hl)
      0027AC F5                    9232 	push	af
      0027AD 33                    9233 	inc	sp
      0027AE CDr84r11              9234 	call	_initEnemy
      0027B1 33                    9235 	inc	sp
      0027B2                       9236 00132$:
                                   9237 ;src/main.c:940: j++;
      0027B2 F8 15                 9238 	ldhl	sp,	#21
      0027B4 34                    9239 	inc	(hl)
                                   9240 ;src/main.c:941: pptr++;
      0027B5 2B                    9241 	dec	hl
      0027B6 2B                    9242 	dec	hl
      0027B7 2A                    9243 	ld	a, (hl+)
      0027B8 5F                    9244 	ld	e, a
      0027B9 56                    9245 	ld	d, (hl)
      0027BA 21 0D 00              9246 	ld	hl, #0x000d
      0027BD 19                    9247 	add	hl, de
      0027BE E5                    9248 	push	hl
      0027BF 7D                    9249 	ld	a, l
      0027C0 F8 15                 9250 	ldhl	sp,	#21
      0027C2 77                    9251 	ld	(hl), a
      0027C3 E1                    9252 	pop	hl
      0027C4 7C                    9253 	ld	a, h
      0027C5 F8 14                 9254 	ldhl	sp,	#20
      0027C7 77                    9255 	ld	(hl), a
      0027C8 C3rE1r24              9256 	jp	00133$
      0027CB                       9257 00139$:
                                   9258 ;src/main.c:947: if (enemyCollisionCount == 0) {
      0027CB FArEDr00              9259 	ld	a, (#_enemyCollisionCount)
      0027CE B7                    9260 	or	a, a
      0027CF 20 09                 9261 	jr	NZ, 00142$
                                   9262 ;src/main.c:948: enemyCollisionCount = ENEMYCOUNT - 1;
      0027D1 FArAEr0B              9263 	ld	a, (#_ENEMYCOUNT)
      0027D4 3D                    9264 	dec	a
      0027D5 EArEDr00              9265 	ld	(#_enemyCollisionCount),a
      0027D8 18 04                 9266 	jr	00190$
      0027DA                       9267 00142$:
                                   9268 ;src/main.c:951: enemyCollisionCount--;
      0027DA 21rEDr00              9269 	ld	hl, #_enemyCollisionCount
      0027DD 35                    9270 	dec	(hl)
      0027DE                       9271 00190$:
                                   9272 ;src/main.c:956: }
      0027DE E8 17                 9273 	add	sp, #23
      0027E0 C9                    9274 	ret
                                   9275 ;src/main.c:959: void setGunIcon() {
                                   9276 ;	---------------------------------
                                   9277 ; Function setGunIcon
                                   9278 ; ---------------------------------
      0027E1                       9279 _setGunIcon::
                                   9280 ;src/main.c:961: if (currentGun == 0) {
      0027E1 FArEFr00              9281 	ld	a, (#_currentGun)
      0027E4 B7                    9282 	or	a, a
      0027E5 20 1B                 9283 	jr	NZ, 00102$
                                   9284 ;src/main.c:962: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      0027E7 01rF6r00              9285 	ld	bc, #_gunMap+0
      0027EA 79                    9286 	ld	a, c
      0027EB 21rEEr00              9287 	ld	hl, #_gunLevel
      0027EE 86                    9288 	add	a, (hl)
      0027EF 4F                    9289 	ld	c, a
      0027F0 30 01                 9290 	jr	NC, 00111$
      0027F2 04                    9291 	inc	b
      0027F3                       9292 00111$:
      0027F3 C5                    9293 	push	bc
      0027F4 21 01 01              9294 	ld	hl, #0x101
      0027F7 E5                    9295 	push	hl
      0027F8 21 0F 00              9296 	ld	hl, #0x0f
      0027FB E5                    9297 	push	hl
      0027FC CDr00r00              9298 	call	_set_win_tiles
      0027FF E8 06                 9299 	add	sp, #6
      002801 C9                    9300 	ret
      002802                       9301 00102$:
                                   9302 ;src/main.c:965: set_win_tiles(15, 0,1,1,gunMap+2);
      002802 11rF8r00              9303 	ld	de, #(_gunMap + 2)
      002805 D5                    9304 	push	de
      002806 21 01 01              9305 	ld	hl, #0x101
      002809 E5                    9306 	push	hl
      00280A 21 0F 00              9307 	ld	hl, #0x0f
      00280D E5                    9308 	push	hl
      00280E CDr00r00              9309 	call	_set_win_tiles
      002811 E8 06                 9310 	add	sp, #6
                                   9311 ;src/main.c:967: }
      002813 C9                    9312 	ret
                                   9313 ;src/main.c:977: void fire() {
                                   9314 ;	---------------------------------
                                   9315 ; Function fire
                                   9316 ; ---------------------------------
      002814                       9317 _fire::
      002814 E8 FB                 9318 	add	sp, #-5
                                   9319 ;src/main.c:979: oldestProjectile += 1;
      002816 21rD9r00              9320 	ld	hl, #_oldestProjectile
      002819 34                    9321 	inc	(hl)
      00281A 7E                    9322 	ld	a, (hl)
                                   9323 ;src/main.c:980: if (oldestProjectile >= PROJECTILECOUNT) {
      00281B 21rBFr0B              9324 	ld	hl, #_PROJECTILECOUNT
      00281E 4E                    9325 	ld	c, (hl)
      00281F 21rD9r00              9326 	ld	hl, #_oldestProjectile
      002822 7E                    9327 	ld	a, (hl)
      002823 91                    9328 	sub	a, c
      002824 38 02                 9329 	jr	C, 00102$
                                   9330 ;src/main.c:981: oldestProjectile = 0;
      002826 36 00                 9331 	ld	(hl), #0x00
      002828                       9332 00102$:
                                   9333 ;src/main.c:986: projectiles[oldestProjectile] = singleGun;
      002828 21rD9r00              9334 	ld	hl, #_oldestProjectile
      00282B 4E                    9335 	ld	c, (hl)
      00282C 06 00                 9336 	ld	b, #0x00
      00282E 69                    9337 	ld	l, c
      00282F 60                    9338 	ld	h, b
      002830 29                    9339 	add	hl, hl
      002831 09                    9340 	add	hl, bc
      002832 29                    9341 	add	hl, hl
      002833 29                    9342 	add	hl, hl
      002834 09                    9343 	add	hl, bc
      002835 E5                    9344 	push	hl
      002836 7D                    9345 	ld	a, l
      002837 F8 05                 9346 	ldhl	sp,	#5
      002839 77                    9347 	ld	(hl), a
      00283A E1                    9348 	pop	hl
      00283B 7C                    9349 	ld	a, h
      00283C F8 04                 9350 	ldhl	sp,	#4
      00283E 77                    9351 	ld	(hl), a
                                   9352 ;src/main.c:984: if (currentGun == 0) {
      00283F FArEFr00              9353 	ld	a, (#_currentGun)
      002842 B7                    9354 	or	a, a
      002843 20 3C                 9355 	jr	NZ, 00113$
                                   9356 ;src/main.c:985: if (gunLevel == 0) {
      002845 FArEEr00              9357 	ld	a, (#_gunLevel)
      002848 B7                    9358 	or	a, a
      002849 20 1B                 9359 	jr	NZ, 00104$
                                   9360 ;src/main.c:986: projectiles[oldestProjectile] = singleGun;
      00284B 11rB2r00              9361 	ld	de, #_singleGun+0
      00284E 01rB4r00              9362 	ld	bc, #_projectiles+0
      002851 F8 03                 9363 	ldhl	sp,	#3
      002853 2A                    9364 	ld	a,	(hl+)
      002854 66                    9365 	ld	h, (hl)
      002855 6F                    9366 	ld	l, a
      002856 09                    9367 	add	hl, bc
      002857 4D                    9368 	ld	c, l
      002858 44                    9369 	ld	b, h
      002859 21 0D 00              9370 	ld	hl, #0x000d
      00285C E5                    9371 	push	hl
      00285D D5                    9372 	push	de
      00285E C5                    9373 	push	bc
      00285F CDr00r00              9374 	call	___memcpy
      002862 E8 06                 9375 	add	sp, #6
      002864 18 61                 9376 	jr	00114$
      002866                       9377 00104$:
                                   9378 ;src/main.c:989: projectiles[oldestProjectile] = doubleGun;
      002866 11rBFr00              9379 	ld	de, #_doubleGun+0
      002869 01rB4r00              9380 	ld	bc, #_projectiles+0
      00286C F8 03                 9381 	ldhl	sp,	#3
      00286E 2A                    9382 	ld	a,	(hl+)
      00286F 66                    9383 	ld	h, (hl)
      002870 6F                    9384 	ld	l, a
      002871 09                    9385 	add	hl, bc
      002872 4D                    9386 	ld	c, l
      002873 44                    9387 	ld	b, h
      002874 21 0D 00              9388 	ld	hl, #0x000d
      002877 E5                    9389 	push	hl
      002878 D5                    9390 	push	de
      002879 C5                    9391 	push	bc
      00287A CDr00r00              9392 	call	___memcpy
      00287D E8 06                 9393 	add	sp, #6
      00287F 18 46                 9394 	jr	00114$
      002881                       9395 00113$:
                                   9396 ;src/main.c:992: else if (currentGun == 1) {
      002881 FArEFr00              9397 	ld	a, (#_currentGun)
      002884 3D                    9398 	dec	a
      002885 20 40                 9399 	jr	NZ, 00114$
                                   9400 ;src/main.c:993: if (missiles == 0) {
      002887 FArF0r00              9401 	ld	a, (#_missiles)
      00288A B7                    9402 	or	a, a
      00288B 20 0B                 9403 	jr	NZ, 00107$
                                   9404 ;src/main.c:994: currentGun = 0;
      00288D 21rEFr00              9405 	ld	hl, #_currentGun
      002890 36 00                 9406 	ld	(hl), #0x00
                                   9407 ;src/main.c:995: setGunIcon();
      002892 CDrE1r27              9408 	call	_setGunIcon
                                   9409 ;src/main.c:996: return;
      002895 C3rBFr2D              9410 	jp	00155$
      002898                       9411 00107$:
                                   9412 ;src/main.c:999: projectiles[oldestProjectile] = missile;
      002898 11rCCr00              9413 	ld	de, #_missile+0
      00289B 01rB4r00              9414 	ld	bc, #_projectiles+0
      00289E F8 03                 9415 	ldhl	sp,	#3
      0028A0 2A                    9416 	ld	a,	(hl+)
      0028A1 66                    9417 	ld	h, (hl)
      0028A2 6F                    9418 	ld	l, a
      0028A3 09                    9419 	add	hl, bc
      0028A4 4D                    9420 	ld	c, l
      0028A5 44                    9421 	ld	b, h
      0028A6 21 0D 00              9422 	ld	hl, #0x000d
      0028A9 E5                    9423 	push	hl
      0028AA D5                    9424 	push	de
      0028AB C5                    9425 	push	bc
      0028AC CDr00r00              9426 	call	___memcpy
      0028AF E8 06                 9427 	add	sp, #6
                                   9428 ;src/main.c:1000: updateMissileCount(-1);
      0028B1 3E FF                 9429 	ld	a, #0xff
      0028B3 F5                    9430 	push	af
      0028B4 33                    9431 	inc	sp
      0028B5 CDr04r0D              9432 	call	_updateMissileCount
      0028B8 33                    9433 	inc	sp
                                   9434 ;src/main.c:1002: if (missiles == 0) {
      0028B9 FArF0r00              9435 	ld	a, (#_missiles)
      0028BC B7                    9436 	or	a, a
      0028BD 20 08                 9437 	jr	NZ, 00114$
                                   9438 ;src/main.c:1003: currentGun = 0;
      0028BF 21rEFr00              9439 	ld	hl, #_currentGun
      0028C2 36 00                 9440 	ld	(hl), #0x00
                                   9441 ;src/main.c:1004: setGunIcon();
      0028C4 CDrE1r27              9442 	call	_setGunIcon
      0028C7                       9443 00114$:
                                   9444 ;src/main.c:1007: projectiles[oldestProjectile].x = playerDrawX;
      0028C7 21rD9r00              9445 	ld	hl, #_oldestProjectile
      0028CA 4E                    9446 	ld	c, (hl)
      0028CB 06 00                 9447 	ld	b, #0x00
      0028CD 69                    9448 	ld	l, c
      0028CE 60                    9449 	ld	h, b
      0028CF 29                    9450 	add	hl, hl
      0028D0 09                    9451 	add	hl, bc
      0028D1 29                    9452 	add	hl, hl
      0028D2 29                    9453 	add	hl, hl
      0028D3 09                    9454 	add	hl, bc
      0028D4 01rB4r00              9455 	ld	bc,#_projectiles
      0028D7 09                    9456 	add	hl,bc
      0028D8 E5                    9457 	push	hl
      0028D9 FArE3r00              9458 	ld	a, (#_playerDrawX)
      0028DC E1                    9459 	pop	hl
      0028DD 0E 00                 9460 	ld	c, #0x00
      0028DF 22                    9461 	ld	(hl+), a
      0028E0 71                    9462 	ld	(hl), c
                                   9463 ;src/main.c:1008: projectiles[oldestProjectile].y = playerDrawY;
      0028E1 21rD9r00              9464 	ld	hl, #_oldestProjectile
      0028E4 4E                    9465 	ld	c, (hl)
      0028E5 06 00                 9466 	ld	b, #0x00
      0028E7 69                    9467 	ld	l, c
      0028E8 60                    9468 	ld	h, b
      0028E9 29                    9469 	add	hl, hl
      0028EA 09                    9470 	add	hl, bc
      0028EB 29                    9471 	add	hl, hl
      0028EC 29                    9472 	add	hl, hl
      0028ED 09                    9473 	add	hl, bc
      0028EE 01rB4r00              9474 	ld	bc,#_projectiles
      0028F1 09                    9475 	add	hl,bc
      0028F2 23                    9476 	inc	hl
      0028F3 23                    9477 	inc	hl
      0028F4 E5                    9478 	push	hl
      0028F5 FArE4r00              9479 	ld	a, (#_playerDrawY)
      0028F8 E1                    9480 	pop	hl
      0028F9 0E 00                 9481 	ld	c, #0x00
      0028FB 22                    9482 	ld	(hl+), a
      0028FC 71                    9483 	ld	(hl), c
                                   9484 ;src/main.c:1009: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      0028FD 21rD9r00              9485 	ld	hl, #_oldestProjectile
      002900 4E                    9486 	ld	c, (hl)
      002901 06 00                 9487 	ld	b, #0x00
      002903 69                    9488 	ld	l, c
      002904 60                    9489 	ld	h, b
      002905 29                    9490 	add	hl, hl
      002906 09                    9491 	add	hl, bc
      002907 29                    9492 	add	hl, hl
      002908 29                    9493 	add	hl, hl
      002909 09                    9494 	add	hl, bc
      00290A 01rB4r00              9495 	ld	bc,#_projectiles
      00290D 09                    9496 	add	hl,bc
      00290E 5D                    9497 	ld	e, l
      00290F 54                    9498 	ld	d, h
      002910 21 05 00              9499 	ld	hl, #0x0005
      002913 19                    9500 	add	hl, de
      002914 4D                    9501 	ld	c, l
      002915 44                    9502 	ld	b, h
      002916 21 07 00              9503 	ld	hl, #0x0007
      002919 19                    9504 	add	hl, de
      00291A 7E                    9505 	ld	a, (hl)
      00291B C5                    9506 	push	bc
      00291C F5                    9507 	push	af
      00291D 33                    9508 	inc	sp
      00291E FArDBr00              9509 	ld	a, (#_xDir)
      002921 F5                    9510 	push	af
      002922 33                    9511 	inc	sp
      002923 CDr00r00              9512 	call	__muluschar
      002926 E1                    9513 	pop	hl
      002927 7B                    9514 	ld	a, e
      002928 C1                    9515 	pop	bc
      002929 02                    9516 	ld	(bc), a
                                   9517 ;src/main.c:1010: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      00292A 21rD9r00              9518 	ld	hl, #_oldestProjectile
      00292D 4E                    9519 	ld	c, (hl)
      00292E 06 00                 9520 	ld	b, #0x00
      002930 69                    9521 	ld	l, c
      002931 60                    9522 	ld	h, b
      002932 29                    9523 	add	hl, hl
      002933 09                    9524 	add	hl, bc
      002934 29                    9525 	add	hl, hl
      002935 29                    9526 	add	hl, hl
      002936 09                    9527 	add	hl, bc
      002937 01rB4r00              9528 	ld	bc,#_projectiles
      00293A 09                    9529 	add	hl,bc
      00293B 5D                    9530 	ld	e, l
      00293C 54                    9531 	ld	d, h
      00293D 21 06 00              9532 	ld	hl, #0x0006
      002940 19                    9533 	add	hl, de
      002941 4D                    9534 	ld	c, l
      002942 44                    9535 	ld	b, h
      002943 21 07 00              9536 	ld	hl, #0x0007
      002946 19                    9537 	add	hl, de
      002947 7E                    9538 	ld	a, (hl)
      002948 C5                    9539 	push	bc
      002949 F5                    9540 	push	af
      00294A 33                    9541 	inc	sp
      00294B FArDCr00              9542 	ld	a, (#_yDir)
      00294E F5                    9543 	push	af
      00294F 33                    9544 	inc	sp
      002950 CDr00r00              9545 	call	__muluschar
      002953 E1                    9546 	pop	hl
      002954 7B                    9547 	ld	a, e
      002955 C1                    9548 	pop	bc
      002956 02                    9549 	ld	(bc), a
                                   9550 ;src/main.c:979: oldestProjectile += 1;
      002957 FArD9r00              9551 	ld	a, (#_oldestProjectile)
      00295A F8 04                 9552 	ldhl	sp,	#4
      00295C 77                    9553 	ld	(hl), a
                                   9554 ;src/main.c:986: projectiles[oldestProjectile] = singleGun;
      00295D 21rD9r00              9555 	ld	hl, #_oldestProjectile
      002960 4E                    9556 	ld	c, (hl)
      002961 06 00                 9557 	ld	b, #0x00
      002963 69                    9558 	ld	l, c
      002964 60                    9559 	ld	h, b
      002965 29                    9560 	add	hl, hl
      002966 09                    9561 	add	hl, bc
      002967 29                    9562 	add	hl, hl
      002968 29                    9563 	add	hl, hl
      002969 09                    9564 	add	hl, bc
                                   9565 ;src/main.c:1015: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00296A 01rB4r00              9566 	ld	bc,#_projectiles
      00296D 09                    9567 	add	hl,bc
      00296E 4D                    9568 	ld	c, l
      00296F 44                    9569 	ld	b, h
      002970 F8 04                 9570 	ldhl	sp,	#4
      002972 3A                    9571 	ld	a, (hl-)
      002973 C6 1E                 9572 	add	a, #0x1e
      002975 77                    9573 	ld	(hl), a
      002976 21 0C 00              9574 	ld	hl, #0x000c
      002979 09                    9575 	add	hl, bc
      00297A 7E                    9576 	ld	a, (hl)
      00297B F8 04                 9577 	ldhl	sp,	#4
      00297D 77                    9578 	ld	(hl), a
                                   9579 ;src/main.c:1014: if (yDir != 0 && xDir == 0) {
      00297E FArDCr00              9580 	ld	a, (#_yDir)
      002981 B7                    9581 	or	a, a
      002982 28 71                 9582 	jr	Z, 00141$
      002984 FArDBr00              9583 	ld	a, (#_xDir)
      002987 B7                    9584 	or	a, a
      002988 20 6B                 9585 	jr	NZ, 00141$
                                   9586 ;src/main.c:1015: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00298A F8 04                 9587 	ldhl	sp,	#4
      00298C 3A                    9588 	ld	a, (hl-)
      00298D 4F                    9589 	ld	c, a
                                   9590 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00298E 6E                    9591 	ld	l, (hl)
                                   9592 ;	spillPairReg hl
                                   9593 ;	spillPairReg hl
      00298F 26 00                 9594 	ld	h, #0x00
                                   9595 ;	spillPairReg hl
                                   9596 ;	spillPairReg hl
      002991 29                    9597 	add	hl, hl
      002992 29                    9598 	add	hl, hl
      002993 11r00r00              9599 	ld	de, #_shadow_OAM
      002996 19                    9600 	add	hl, de
      002997 23                    9601 	inc	hl
      002998 23                    9602 	inc	hl
      002999 71                    9603 	ld	(hl), c
                                   9604 ;src/main.c:979: oldestProjectile += 1;
      00299A FArD9r00              9605 	ld	a, (#_oldestProjectile)
                                   9606 ;src/main.c:1015: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00299D C6 1E                 9607 	add	a, #0x1e
      00299F 4F                    9608 	ld	c, a
                                   9609 ;src/main.c:1016: if (yDir == 1) {
      0029A0 FArDCr00              9610 	ld	a, (#_yDir)
                                   9611 ;src/main.c:1017: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   9612 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0029A3 3D                    9613 	dec	a
      0029A4 20 27                 9614 	jr	NZ, 00116$
      0029A6 67                    9615 	ld	h,a
                                   9616 ;	spillPairReg hl
                                   9617 ;	spillPairReg hl
      0029A7 69                    9618 	ld	l, c
      0029A8 29                    9619 	add	hl, hl
      0029A9 29                    9620 	add	hl, hl
      0029AA 11r00r00              9621 	ld	de, #_shadow_OAM
      0029AD 19                    9622 	add	hl, de
      0029AE 23                    9623 	inc	hl
      0029AF 23                    9624 	inc	hl
      0029B0 23                    9625 	inc	hl
      0029B1 36 40                 9626 	ld	(hl), #0x40
                                   9627 ;src/main.c:1018: projectiles[oldestProjectile].offset = 4;
      0029B3 21rD9r00              9628 	ld	hl, #_oldestProjectile
      0029B6 4E                    9629 	ld	c, (hl)
      0029B7 06 00                 9630 	ld	b, #0x00
      0029B9 69                    9631 	ld	l, c
      0029BA 60                    9632 	ld	h, b
      0029BB 29                    9633 	add	hl, hl
      0029BC 09                    9634 	add	hl, bc
      0029BD 29                    9635 	add	hl, hl
      0029BE 29                    9636 	add	hl, hl
      0029BF 09                    9637 	add	hl, bc
      0029C0 01rB4r00              9638 	ld	bc,#_projectiles
      0029C3 09                    9639 	add	hl,bc
      0029C4 01 04 00              9640 	ld	bc, #0x0004
      0029C7 09                    9641 	add	hl, bc
      0029C8 36 04                 9642 	ld	(hl), #0x04
      0029CA C3rA6r2D              9643 	jp	00142$
      0029CD                       9644 00116$:
                                   9645 ;src/main.c:1021: set_sprite_prop(30+oldestProjectile, 0); 
                                   9646 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0029CD 26 00                 9647 	ld	h, #0x00
                                   9648 ;	spillPairReg hl
                                   9649 ;	spillPairReg hl
      0029CF 69                    9650 	ld	l, c
      0029D0 29                    9651 	add	hl, hl
      0029D1 29                    9652 	add	hl, hl
      0029D2 11r00r00              9653 	ld	de, #_shadow_OAM
      0029D5 19                    9654 	add	hl, de
      0029D6 23                    9655 	inc	hl
      0029D7 23                    9656 	inc	hl
      0029D8 23                    9657 	inc	hl
      0029D9 36 00                 9658 	ld	(hl), #0x00
                                   9659 ;src/main.c:1022: projectiles[oldestProjectile].offset = 12;
      0029DB 21rD9r00              9660 	ld	hl, #_oldestProjectile
      0029DE 4E                    9661 	ld	c, (hl)
      0029DF 06 00                 9662 	ld	b, #0x00
      0029E1 69                    9663 	ld	l, c
      0029E2 60                    9664 	ld	h, b
      0029E3 29                    9665 	add	hl, hl
      0029E4 09                    9666 	add	hl, bc
      0029E5 29                    9667 	add	hl, hl
      0029E6 29                    9668 	add	hl, hl
      0029E7 09                    9669 	add	hl, bc
      0029E8 01rB4r00              9670 	ld	bc,#_projectiles
      0029EB 09                    9671 	add	hl,bc
      0029EC 01 04 00              9672 	ld	bc, #0x0004
      0029EF 09                    9673 	add	hl, bc
      0029F0 36 0C                 9674 	ld	(hl), #0x0c
      0029F2 C3rA6r2D              9675 	jp	00142$
      0029F5                       9676 00141$:
                                   9677 ;src/main.c:1026: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   9678 ;src/main.c:1025: else if (xDir != 0 && yDir == 0) {
      0029F5 FArDBr00              9679 	ld	a, (#_xDir)
      0029F8 B7                    9680 	or	a, a
      0029F9 CAr3Fr2B              9681 	jp	Z, 00137$
      0029FC FArDCr00              9682 	ld	a, (#_yDir)
      0029FF B7                    9683 	or	a, a
      002A00 C2r3Fr2B              9684 	jp	NZ, 00137$
                                   9685 ;src/main.c:1026: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      002A03 F8 04                 9686 	ldhl	sp,	#4
      002A05 34                    9687 	inc	(hl)
      002A06 34                    9688 	inc	(hl)
      002A07 2B                    9689 	dec	hl
                                   9690 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002A08 3A                    9691 	ld	a, (hl-)
      002A09 22                    9692 	ld	(hl+), a
      002A0A 36 00                 9693 	ld	(hl), #0x00
      002A0C 3E 02                 9694 	ld	a, #0x02
      002A0E                       9695 00261$:
      002A0E F8 02                 9696 	ldhl	sp,	#2
      002A10 CB 26                 9697 	sla	(hl)
      002A12 23                    9698 	inc	hl
      002A13 CB 16                 9699 	rl	(hl)
      002A15 3D                    9700 	dec	a
      002A16 20 F6                 9701 	jr	NZ, 00261$
      002A18 2B                    9702 	dec	hl
      002A19 2A                    9703 	ld	a, (hl+)
      002A1A 5F                    9704 	ld	e, a
      002A1B 56                    9705 	ld	d, (hl)
      002A1C 21r00r00              9706 	ld	hl, #_shadow_OAM
      002A1F 19                    9707 	add	hl, de
      002A20 33                    9708 	inc	sp
      002A21 33                    9709 	inc	sp
      002A22 5D                    9710 	ld	e, l
      002A23 54                    9711 	ld	d, h
      002A24 D5                    9712 	push	de
      002A25 21 02 00              9713 	ld	hl, #0x0002
      002A28 19                    9714 	add	hl, de
      002A29 E5                    9715 	push	hl
      002A2A 7D                    9716 	ld	a, l
      002A2B F8 04                 9717 	ldhl	sp,	#4
      002A2D 77                    9718 	ld	(hl), a
      002A2E E1                    9719 	pop	hl
      002A2F 7C                    9720 	ld	a, h
      002A30 F8 03                 9721 	ldhl	sp,	#3
      002A32 32                    9722 	ld	(hl-), a
      002A33 2A                    9723 	ld	a, (hl+)
      002A34 5F                    9724 	ld	e, a
      002A35 2A                    9725 	ld	a, (hl+)
      002A36 57                    9726 	ld	d, a
      002A37 7E                    9727 	ld	a, (hl)
      002A38 12                    9728 	ld	(de), a
                                   9729 ;src/main.c:979: oldestProjectile += 1;
      002A39 FArD9r00              9730 	ld	a, (#_oldestProjectile)
      002A3C F8 04                 9731 	ldhl	sp,	#4
      002A3E 77                    9732 	ld	(hl), a
                                   9733 ;src/main.c:1015: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002A3F 7E                    9734 	ld	a, (hl)
      002A40 C6 1E                 9735 	add	a, #0x1e
      002A42 77                    9736 	ld	(hl), a
                                   9737 ;src/main.c:1027: if (xDir == 1) {
      002A43 FArDBr00              9738 	ld	a, (#_xDir)
      002A46 3D                    9739 	dec	a
      002A47 20 7B                 9740 	jr	NZ, 00119$
                                   9741 ;src/main.c:1028: set_sprite_prop(30+oldestProjectile, 0);
      002A49 F8 04                 9742 	ldhl	sp,	#4
                                   9743 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002A4B 3A                    9744 	ld	a, (hl-)
      002A4C 22                    9745 	ld	(hl+), a
      002A4D 36 00                 9746 	ld	(hl), #0x00
      002A4F 3E 02                 9747 	ld	a, #0x02
      002A51                       9748 00264$:
      002A51 F8 03                 9749 	ldhl	sp,	#3
      002A53 CB 26                 9750 	sla	(hl)
      002A55 23                    9751 	inc	hl
      002A56 CB 16                 9752 	rl	(hl)
      002A58 3D                    9753 	dec	a
      002A59 20 F6                 9754 	jr	NZ, 00264$
      002A5B 2B                    9755 	dec	hl
      002A5C 2A                    9756 	ld	a, (hl+)
      002A5D 5F                    9757 	ld	e, a
      002A5E 56                    9758 	ld	d, (hl)
      002A5F 21r00r00              9759 	ld	hl, #_shadow_OAM
      002A62 19                    9760 	add	hl, de
      002A63 E5                    9761 	push	hl
      002A64 7D                    9762 	ld	a, l
      002A65 F8 03                 9763 	ldhl	sp,	#3
      002A67 77                    9764 	ld	(hl), a
      002A68 E1                    9765 	pop	hl
      002A69 7C                    9766 	ld	a, h
      002A6A F8 02                 9767 	ldhl	sp,	#2
      002A6C 32                    9768 	ld	(hl-), a
      002A6D 2A                    9769 	ld	a, (hl+)
      002A6E 5F                    9770 	ld	e, a
      002A6F 56                    9771 	ld	d, (hl)
      002A70 21 03 00              9772 	ld	hl, #0x0003
      002A73 19                    9773 	add	hl, de
      002A74 E5                    9774 	push	hl
      002A75 7D                    9775 	ld	a, l
      002A76 F8 05                 9776 	ldhl	sp,	#5
      002A78 77                    9777 	ld	(hl), a
      002A79 E1                    9778 	pop	hl
      002A7A 7C                    9779 	ld	a, h
      002A7B F8 04                 9780 	ldhl	sp,	#4
      002A7D 32                    9781 	ld	(hl-), a
      002A7E 2A                    9782 	ld	a,	(hl+)
      002A7F 66                    9783 	ld	h, (hl)
      002A80 6F                    9784 	ld	l, a
      002A81 36 00                 9785 	ld	(hl), #0x00
                                   9786 ;src/main.c:1029: projectiles[oldestProjectile].offset = 12;
      002A83 21rD9r00              9787 	ld	hl, #_oldestProjectile
      002A86 4E                    9788 	ld	c, (hl)
      002A87 06 00                 9789 	ld	b, #0x00
      002A89 69                    9790 	ld	l, c
      002A8A 60                    9791 	ld	h, b
      002A8B 29                    9792 	add	hl, hl
      002A8C 09                    9793 	add	hl, bc
      002A8D 29                    9794 	add	hl, hl
      002A8E 29                    9795 	add	hl, hl
      002A8F 09                    9796 	add	hl, bc
      002A90 E5                    9797 	push	hl
      002A91 7D                    9798 	ld	a, l
      002A92 F8 05                 9799 	ldhl	sp,	#5
      002A94 77                    9800 	ld	(hl), a
      002A95 E1                    9801 	pop	hl
      002A96 7C                    9802 	ld	a, h
      002A97 F8 04                 9803 	ldhl	sp,	#4
      002A99 32                    9804 	ld	(hl-), a
      002A9A 2A                    9805 	ld	a, (hl+)
      002A9B 5F                    9806 	ld	e, a
      002A9C 56                    9807 	ld	d, (hl)
      002A9D 21rB4r00              9808 	ld	hl, #_projectiles
      002AA0 19                    9809 	add	hl, de
      002AA1 E5                    9810 	push	hl
      002AA2 7D                    9811 	ld	a, l
      002AA3 F8 03                 9812 	ldhl	sp,	#3
      002AA5 77                    9813 	ld	(hl), a
      002AA6 E1                    9814 	pop	hl
      002AA7 7C                    9815 	ld	a, h
      002AA8 F8 02                 9816 	ldhl	sp,	#2
      002AAA 32                    9817 	ld	(hl-), a
      002AAB 2A                    9818 	ld	a, (hl+)
      002AAC 5F                    9819 	ld	e, a
      002AAD 56                    9820 	ld	d, (hl)
      002AAE 21 04 00              9821 	ld	hl, #0x0004
      002AB1 19                    9822 	add	hl, de
      002AB2 E5                    9823 	push	hl
      002AB3 7D                    9824 	ld	a, l
      002AB4 F8 05                 9825 	ldhl	sp,	#5
      002AB6 77                    9826 	ld	(hl), a
      002AB7 E1                    9827 	pop	hl
      002AB8 7C                    9828 	ld	a, h
      002AB9 F8 04                 9829 	ldhl	sp,	#4
      002ABB 32                    9830 	ld	(hl-), a
      002ABC 2A                    9831 	ld	a,	(hl+)
      002ABD 66                    9832 	ld	h, (hl)
      002ABE 6F                    9833 	ld	l, a
      002ABF 36 0C                 9834 	ld	(hl), #0x0c
      002AC1 C3rA6r2D              9835 	jp	00142$
      002AC4                       9836 00119$:
                                   9837 ;src/main.c:1032: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002AC4 F8 04                 9838 	ldhl	sp,	#4
                                   9839 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002AC6 3A                    9840 	ld	a, (hl-)
      002AC7 22                    9841 	ld	(hl+), a
      002AC8 36 00                 9842 	ld	(hl), #0x00
      002ACA 3E 02                 9843 	ld	a, #0x02
      002ACC                       9844 00265$:
      002ACC F8 03                 9845 	ldhl	sp,	#3
      002ACE CB 26                 9846 	sla	(hl)
      002AD0 23                    9847 	inc	hl
      002AD1 CB 16                 9848 	rl	(hl)
      002AD3 3D                    9849 	dec	a
      002AD4 20 F6                 9850 	jr	NZ, 00265$
      002AD6 2B                    9851 	dec	hl
      002AD7 2A                    9852 	ld	a, (hl+)
      002AD8 5F                    9853 	ld	e, a
      002AD9 56                    9854 	ld	d, (hl)
      002ADA 21r00r00              9855 	ld	hl, #_shadow_OAM
      002ADD 19                    9856 	add	hl, de
      002ADE E5                    9857 	push	hl
      002ADF 7D                    9858 	ld	a, l
      002AE0 F8 03                 9859 	ldhl	sp,	#3
      002AE2 77                    9860 	ld	(hl), a
      002AE3 E1                    9861 	pop	hl
      002AE4 7C                    9862 	ld	a, h
      002AE5 F8 02                 9863 	ldhl	sp,	#2
      002AE7 32                    9864 	ld	(hl-), a
      002AE8 2A                    9865 	ld	a, (hl+)
      002AE9 5F                    9866 	ld	e, a
      002AEA 56                    9867 	ld	d, (hl)
      002AEB 21 03 00              9868 	ld	hl, #0x0003
      002AEE 19                    9869 	add	hl, de
      002AEF E5                    9870 	push	hl
      002AF0 7D                    9871 	ld	a, l
      002AF1 F8 05                 9872 	ldhl	sp,	#5
      002AF3 77                    9873 	ld	(hl), a
      002AF4 E1                    9874 	pop	hl
      002AF5 7C                    9875 	ld	a, h
      002AF6 F8 04                 9876 	ldhl	sp,	#4
      002AF8 32                    9877 	ld	(hl-), a
      002AF9 2A                    9878 	ld	a,	(hl+)
      002AFA 66                    9879 	ld	h, (hl)
      002AFB 6F                    9880 	ld	l, a
      002AFC 36 20                 9881 	ld	(hl), #0x20
                                   9882 ;src/main.c:1033: projectiles[oldestProjectile].offset = 12;
      002AFE 21rD9r00              9883 	ld	hl, #_oldestProjectile
      002B01 4E                    9884 	ld	c, (hl)
      002B02 06 00                 9885 	ld	b, #0x00
      002B04 69                    9886 	ld	l, c
      002B05 60                    9887 	ld	h, b
      002B06 29                    9888 	add	hl, hl
      002B07 09                    9889 	add	hl, bc
      002B08 29                    9890 	add	hl, hl
      002B09 29                    9891 	add	hl, hl
      002B0A 09                    9892 	add	hl, bc
      002B0B E5                    9893 	push	hl
      002B0C 7D                    9894 	ld	a, l
      002B0D F8 05                 9895 	ldhl	sp,	#5
      002B0F 77                    9896 	ld	(hl), a
      002B10 E1                    9897 	pop	hl
      002B11 7C                    9898 	ld	a, h
      002B12 F8 04                 9899 	ldhl	sp,	#4
      002B14 32                    9900 	ld	(hl-), a
      002B15 2A                    9901 	ld	a, (hl+)
      002B16 5F                    9902 	ld	e, a
      002B17 56                    9903 	ld	d, (hl)
      002B18 21rB4r00              9904 	ld	hl, #_projectiles
      002B1B 19                    9905 	add	hl, de
      002B1C E5                    9906 	push	hl
      002B1D 7D                    9907 	ld	a, l
      002B1E F8 03                 9908 	ldhl	sp,	#3
      002B20 77                    9909 	ld	(hl), a
      002B21 E1                    9910 	pop	hl
      002B22 7C                    9911 	ld	a, h
      002B23 F8 02                 9912 	ldhl	sp,	#2
      002B25 32                    9913 	ld	(hl-), a
      002B26 2A                    9914 	ld	a, (hl+)
      002B27 5F                    9915 	ld	e, a
      002B28 56                    9916 	ld	d, (hl)
      002B29 21 04 00              9917 	ld	hl, #0x0004
      002B2C 19                    9918 	add	hl, de
      002B2D E5                    9919 	push	hl
      002B2E 7D                    9920 	ld	a, l
      002B2F F8 05                 9921 	ldhl	sp,	#5
      002B31 77                    9922 	ld	(hl), a
      002B32 E1                    9923 	pop	hl
      002B33 7C                    9924 	ld	a, h
      002B34 F8 04                 9925 	ldhl	sp,	#4
      002B36 32                    9926 	ld	(hl-), a
      002B37 2A                    9927 	ld	a,	(hl+)
      002B38 66                    9928 	ld	h, (hl)
      002B39 6F                    9929 	ld	l, a
      002B3A 36 0C                 9930 	ld	(hl), #0x0c
      002B3C C3rA6r2D              9931 	jp	00142$
      002B3F                       9932 00137$:
                                   9933 ;src/main.c:1037: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      002B3F F8 04                 9934 	ldhl	sp,	#4
      002B41 7E                    9935 	ld	a, (hl)
      002B42 C6 04                 9936 	add	a, #0x04
      002B44 F8 00                 9937 	ldhl	sp,	#0
      002B46 77                    9938 	ld	(hl), a
      002B47 F8 03                 9939 	ldhl	sp,	#3
                                   9940 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002B49 7E                    9941 	ld	a, (hl)
      002B4A 22                    9942 	ld	(hl+), a
      002B4B 36 00                 9943 	ld	(hl), #0x00
      002B4D 3E 02                 9944 	ld	a, #0x02
      002B4F                       9945 00266$:
      002B4F F8 03                 9946 	ldhl	sp,	#3
      002B51 CB 26                 9947 	sla	(hl)
      002B53 23                    9948 	inc	hl
      002B54 CB 16                 9949 	rl	(hl)
      002B56 3D                    9950 	dec	a
      002B57 20 F6                 9951 	jr	NZ, 00266$
      002B59 2B                    9952 	dec	hl
      002B5A 2A                    9953 	ld	a, (hl+)
      002B5B 5F                    9954 	ld	e, a
      002B5C 56                    9955 	ld	d, (hl)
      002B5D 21r00r00              9956 	ld	hl, #_shadow_OAM
      002B60 19                    9957 	add	hl, de
      002B61 E5                    9958 	push	hl
      002B62 7D                    9959 	ld	a, l
      002B63 F8 03                 9960 	ldhl	sp,	#3
      002B65 77                    9961 	ld	(hl), a
      002B66 E1                    9962 	pop	hl
      002B67 7C                    9963 	ld	a, h
      002B68 F8 02                 9964 	ldhl	sp,	#2
      002B6A 32                    9965 	ld	(hl-), a
      002B6B 2A                    9966 	ld	a, (hl+)
      002B6C 5F                    9967 	ld	e, a
      002B6D 56                    9968 	ld	d, (hl)
      002B6E 21 02 00              9969 	ld	hl, #0x0002
      002B71 19                    9970 	add	hl, de
      002B72 E5                    9971 	push	hl
      002B73 7D                    9972 	ld	a, l
      002B74 F8 05                 9973 	ldhl	sp,	#5
      002B76 77                    9974 	ld	(hl), a
      002B77 E1                    9975 	pop	hl
      002B78 7C                    9976 	ld	a, h
      002B79 F8 04                 9977 	ldhl	sp,	#4
      002B7B 32                    9978 	ld	(hl-), a
      002B7C 2A                    9979 	ld	a, (hl+)
      002B7D 5F                    9980 	ld	e, a
      002B7E 56                    9981 	ld	d, (hl)
      002B7F F8 00                 9982 	ldhl	sp,	#0
      002B81 7E                    9983 	ld	a, (hl)
      002B82 12                    9984 	ld	(de), a
                                   9985 ;src/main.c:1038: if (xDir == 1 && yDir == -1) {
      002B83 FArDBr00              9986 	ld	a, (#_xDir)
      002B86 3D                    9987 	dec	a
      002B87 3E 01                 9988 	ld	a, #0x01
      002B89 28 01                 9989 	jr	Z, 00268$
      002B8B AF                    9990 	xor	a, a
      002B8C                       9991 00268$:
      002B8C F8 04                 9992 	ldhl	sp,	#4
      002B8E 77                    9993 	ld	(hl), a
                                   9994 ;src/main.c:979: oldestProjectile += 1;
      002B8F 21rD9r00              9995 	ld	hl, #_oldestProjectile
      002B92 4E                    9996 	ld	c, (hl)
                                   9997 ;src/main.c:1038: if (xDir == 1 && yDir == -1) {
      002B93 FArDCr00              9998 	ld	a, (#_yDir)
      002B96 3C                    9999 	inc	a
      002B97 3E 01                10000 	ld	a, #0x01
      002B99 28 01                10001 	jr	Z, 00270$
      002B9B AF                   10002 	xor	a, a
      002B9C                      10003 00270$:
      002B9C F8 01                10004 	ldhl	sp,	#1
                                  10005 ;src/main.c:1015: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002B9E 22                   10006 	ld	(hl+), a
      002B9F 79                   10007 	ld	a, c
      002BA0 C6 1E                10008 	add	a, #0x1e
                                  10009 ;src/main.c:1038: if (xDir == 1 && yDir == -1) {
      002BA2 22                   10010 	ld	(hl+), a
      002BA3 23                   10011 	inc	hl
      002BA4 7E                   10012 	ld	a, (hl)
      002BA5 B7                   10013 	or	a, a
      002BA6 CAr29r2C             10014 	jp	Z, 00133$
      002BA9 F8 01                10015 	ldhl	sp,	#1
      002BAB 7E                   10016 	ld	a, (hl)
      002BAC B7                   10017 	or	a, a
      002BAD 28 7A                10018 	jr	Z, 00133$
                                  10019 ;src/main.c:1039: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002BAF 23                   10020 	inc	hl
                                  10021 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002BB0 2A                   10022 	ld	a, (hl+)
      002BB1 22                   10023 	ld	(hl+), a
      002BB2 36 00                10024 	ld	(hl), #0x00
      002BB4 3E 02                10025 	ld	a, #0x02
      002BB6                      10026 00271$:
      002BB6 F8 03                10027 	ldhl	sp,	#3
      002BB8 CB 26                10028 	sla	(hl)
      002BBA 23                   10029 	inc	hl
      002BBB CB 16                10030 	rl	(hl)
      002BBD 3D                   10031 	dec	a
      002BBE 20 F6                10032 	jr	NZ, 00271$
      002BC0 2B                   10033 	dec	hl
      002BC1 2A                   10034 	ld	a, (hl+)
      002BC2 5F                   10035 	ld	e, a
      002BC3 56                   10036 	ld	d, (hl)
      002BC4 21r00r00             10037 	ld	hl, #_shadow_OAM
      002BC7 19                   10038 	add	hl, de
      002BC8 E5                   10039 	push	hl
      002BC9 7D                   10040 	ld	a, l
      002BCA F8 03                10041 	ldhl	sp,	#3
      002BCC 77                   10042 	ld	(hl), a
      002BCD E1                   10043 	pop	hl
      002BCE 7C                   10044 	ld	a, h
      002BCF F8 02                10045 	ldhl	sp,	#2
      002BD1 32                   10046 	ld	(hl-), a
      002BD2 2A                   10047 	ld	a, (hl+)
      002BD3 5F                   10048 	ld	e, a
      002BD4 56                   10049 	ld	d, (hl)
      002BD5 21 03 00             10050 	ld	hl, #0x0003
      002BD8 19                   10051 	add	hl, de
      002BD9 E5                   10052 	push	hl
      002BDA 7D                   10053 	ld	a, l
      002BDB F8 05                10054 	ldhl	sp,	#5
      002BDD 77                   10055 	ld	(hl), a
      002BDE E1                   10056 	pop	hl
      002BDF 7C                   10057 	ld	a, h
      002BE0 F8 04                10058 	ldhl	sp,	#4
      002BE2 32                   10059 	ld	(hl-), a
      002BE3 2A                   10060 	ld	a,	(hl+)
      002BE4 66                   10061 	ld	h, (hl)
      002BE5 6F                   10062 	ld	l, a
      002BE6 36 00                10063 	ld	(hl), #0x00
                                  10064 ;src/main.c:1040: projectiles[oldestProjectile].offset = 12;
      002BE8 21rD9r00             10065 	ld	hl, #_oldestProjectile
      002BEB 4E                   10066 	ld	c, (hl)
      002BEC 06 00                10067 	ld	b, #0x00
      002BEE 69                   10068 	ld	l, c
      002BEF 60                   10069 	ld	h, b
      002BF0 29                   10070 	add	hl, hl
      002BF1 09                   10071 	add	hl, bc
      002BF2 29                   10072 	add	hl, hl
      002BF3 29                   10073 	add	hl, hl
      002BF4 09                   10074 	add	hl, bc
      002BF5 E5                   10075 	push	hl
      002BF6 7D                   10076 	ld	a, l
      002BF7 F8 05                10077 	ldhl	sp,	#5
      002BF9 77                   10078 	ld	(hl), a
      002BFA E1                   10079 	pop	hl
      002BFB 7C                   10080 	ld	a, h
      002BFC F8 04                10081 	ldhl	sp,	#4
      002BFE 32                   10082 	ld	(hl-), a
      002BFF 2A                   10083 	ld	a, (hl+)
      002C00 5F                   10084 	ld	e, a
      002C01 56                   10085 	ld	d, (hl)
      002C02 21rB4r00             10086 	ld	hl, #_projectiles
      002C05 19                   10087 	add	hl, de
      002C06 E5                   10088 	push	hl
      002C07 7D                   10089 	ld	a, l
      002C08 F8 03                10090 	ldhl	sp,	#3
      002C0A 77                   10091 	ld	(hl), a
      002C0B E1                   10092 	pop	hl
      002C0C 7C                   10093 	ld	a, h
      002C0D F8 02                10094 	ldhl	sp,	#2
      002C0F 32                   10095 	ld	(hl-), a
      002C10 2A                   10096 	ld	a, (hl+)
      002C11 5F                   10097 	ld	e, a
      002C12 56                   10098 	ld	d, (hl)
      002C13 21 04 00             10099 	ld	hl, #0x0004
      002C16 19                   10100 	add	hl, de
      002C17 E5                   10101 	push	hl
      002C18 7D                   10102 	ld	a, l
      002C19 F8 05                10103 	ldhl	sp,	#5
      002C1B 77                   10104 	ld	(hl), a
      002C1C E1                   10105 	pop	hl
      002C1D 7C                   10106 	ld	a, h
      002C1E F8 04                10107 	ldhl	sp,	#4
      002C20 32                   10108 	ld	(hl-), a
      002C21 2A                   10109 	ld	a,	(hl+)
      002C22 66                   10110 	ld	h, (hl)
      002C23 6F                   10111 	ld	l, a
      002C24 36 0C                10112 	ld	(hl), #0x0c
      002C26 C3rA6r2D             10113 	jp	00142$
      002C29                      10114 00133$:
                                  10115 ;src/main.c:1016: if (yDir == 1) {
      002C29 FArDCr00             10116 	ld	a, (#_yDir)
      002C2C 3D                   10117 	dec	a
      002C2D 3E 01                10118 	ld	a, #0x01
      002C2F 28 01                10119 	jr	Z, 00273$
      002C31 AF                   10120 	xor	a, a
      002C32                      10121 00273$:
      002C32 F8 03                10122 	ldhl	sp,	#3
                                  10123 ;src/main.c:1042: else if (xDir == 1 && yDir == 1) {
      002C34 22                   10124 	ld	(hl+), a
      002C35 7E                   10125 	ld	a, (hl)
      002C36 B7                   10126 	or	a, a
      002C37 CArB9r2C             10127 	jp	Z, 00129$
      002C3A 2B                   10128 	dec	hl
      002C3B 7E                   10129 	ld	a, (hl)
      002C3C B7                   10130 	or	a, a
      002C3D 28 7A                10131 	jr	Z, 00129$
                                  10132 ;src/main.c:1043: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      002C3F 2B                   10133 	dec	hl
                                  10134 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002C40 2A                   10135 	ld	a, (hl+)
      002C41 22                   10136 	ld	(hl+), a
      002C42 36 00                10137 	ld	(hl), #0x00
      002C44 3E 02                10138 	ld	a, #0x02
      002C46                      10139 00274$:
      002C46 F8 03                10140 	ldhl	sp,	#3
      002C48 CB 26                10141 	sla	(hl)
      002C4A 23                   10142 	inc	hl
      002C4B CB 16                10143 	rl	(hl)
      002C4D 3D                   10144 	dec	a
      002C4E 20 F6                10145 	jr	NZ, 00274$
      002C50 2B                   10146 	dec	hl
      002C51 2A                   10147 	ld	a, (hl+)
      002C52 5F                   10148 	ld	e, a
      002C53 56                   10149 	ld	d, (hl)
      002C54 21r00r00             10150 	ld	hl, #_shadow_OAM
      002C57 19                   10151 	add	hl, de
      002C58 E5                   10152 	push	hl
      002C59 7D                   10153 	ld	a, l
      002C5A F8 03                10154 	ldhl	sp,	#3
      002C5C 77                   10155 	ld	(hl), a
      002C5D E1                   10156 	pop	hl
      002C5E 7C                   10157 	ld	a, h
      002C5F F8 02                10158 	ldhl	sp,	#2
      002C61 32                   10159 	ld	(hl-), a
      002C62 2A                   10160 	ld	a, (hl+)
      002C63 5F                   10161 	ld	e, a
      002C64 56                   10162 	ld	d, (hl)
      002C65 21 03 00             10163 	ld	hl, #0x0003
      002C68 19                   10164 	add	hl, de
      002C69 E5                   10165 	push	hl
      002C6A 7D                   10166 	ld	a, l
      002C6B F8 05                10167 	ldhl	sp,	#5
      002C6D 77                   10168 	ld	(hl), a
      002C6E E1                   10169 	pop	hl
      002C6F 7C                   10170 	ld	a, h
      002C70 F8 04                10171 	ldhl	sp,	#4
      002C72 32                   10172 	ld	(hl-), a
      002C73 2A                   10173 	ld	a,	(hl+)
      002C74 66                   10174 	ld	h, (hl)
      002C75 6F                   10175 	ld	l, a
      002C76 36 40                10176 	ld	(hl), #0x40
                                  10177 ;src/main.c:1044: projectiles[oldestProjectile].offset = 4;
      002C78 21rD9r00             10178 	ld	hl, #_oldestProjectile
      002C7B 4E                   10179 	ld	c, (hl)
      002C7C 06 00                10180 	ld	b, #0x00
      002C7E 69                   10181 	ld	l, c
      002C7F 60                   10182 	ld	h, b
      002C80 29                   10183 	add	hl, hl
      002C81 09                   10184 	add	hl, bc
      002C82 29                   10185 	add	hl, hl
      002C83 29                   10186 	add	hl, hl
      002C84 09                   10187 	add	hl, bc
      002C85 E5                   10188 	push	hl
      002C86 7D                   10189 	ld	a, l
      002C87 F8 05                10190 	ldhl	sp,	#5
      002C89 77                   10191 	ld	(hl), a
      002C8A E1                   10192 	pop	hl
      002C8B 7C                   10193 	ld	a, h
      002C8C F8 04                10194 	ldhl	sp,	#4
      002C8E 32                   10195 	ld	(hl-), a
      002C8F 2A                   10196 	ld	a, (hl+)
      002C90 5F                   10197 	ld	e, a
      002C91 56                   10198 	ld	d, (hl)
      002C92 21rB4r00             10199 	ld	hl, #_projectiles
      002C95 19                   10200 	add	hl, de
      002C96 E5                   10201 	push	hl
      002C97 7D                   10202 	ld	a, l
      002C98 F8 03                10203 	ldhl	sp,	#3
      002C9A 77                   10204 	ld	(hl), a
      002C9B E1                   10205 	pop	hl
      002C9C 7C                   10206 	ld	a, h
      002C9D F8 02                10207 	ldhl	sp,	#2
      002C9F 32                   10208 	ld	(hl-), a
      002CA0 2A                   10209 	ld	a, (hl+)
      002CA1 5F                   10210 	ld	e, a
      002CA2 56                   10211 	ld	d, (hl)
      002CA3 21 04 00             10212 	ld	hl, #0x0004
      002CA6 19                   10213 	add	hl, de
      002CA7 E5                   10214 	push	hl
      002CA8 7D                   10215 	ld	a, l
      002CA9 F8 05                10216 	ldhl	sp,	#5
      002CAB 77                   10217 	ld	(hl), a
      002CAC E1                   10218 	pop	hl
      002CAD 7C                   10219 	ld	a, h
      002CAE F8 04                10220 	ldhl	sp,	#4
      002CB0 32                   10221 	ld	(hl-), a
      002CB1 2A                   10222 	ld	a,	(hl+)
      002CB2 66                   10223 	ld	h, (hl)
      002CB3 6F                   10224 	ld	l, a
      002CB4 36 04                10225 	ld	(hl), #0x04
      002CB6 C3rA6r2D             10226 	jp	00142$
      002CB9                      10227 00129$:
                                  10228 ;src/main.c:1046: else if (xDir == -1 && yDir == 1) {
      002CB9 FArDBr00             10229 	ld	a, (#_xDir)
      002CBC 3C                   10230 	inc	a
      002CBD 3E 01                10231 	ld	a, #0x01
      002CBF 28 01                10232 	jr	Z, 00276$
      002CC1 AF                   10233 	xor	a, a
      002CC2                      10234 00276$:
      002CC2 F8 04                10235 	ldhl	sp,	#4
      002CC4 77                   10236 	ld	(hl), a
      002CC5 7E                   10237 	ld	a, (hl)
      002CC6 B7                   10238 	or	a, a
      002CC7 CAr48r2D             10239 	jp	Z, 00125$
      002CCA 2B                   10240 	dec	hl
      002CCB 7E                   10241 	ld	a, (hl)
      002CCC B7                   10242 	or	a, a
      002CCD 28 79                10243 	jr	Z, 00125$
                                  10244 ;src/main.c:1047: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002CCF 2B                   10245 	dec	hl
                                  10246 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002CD0 2A                   10247 	ld	a, (hl+)
      002CD1 22                   10248 	ld	(hl+), a
      002CD2 36 00                10249 	ld	(hl), #0x00
      002CD4 3E 02                10250 	ld	a, #0x02
      002CD6                      10251 00277$:
      002CD6 F8 03                10252 	ldhl	sp,	#3
      002CD8 CB 26                10253 	sla	(hl)
      002CDA 23                   10254 	inc	hl
      002CDB CB 16                10255 	rl	(hl)
      002CDD 3D                   10256 	dec	a
      002CDE 20 F6                10257 	jr	NZ, 00277$
      002CE0 2B                   10258 	dec	hl
      002CE1 2A                   10259 	ld	a, (hl+)
      002CE2 5F                   10260 	ld	e, a
      002CE3 56                   10261 	ld	d, (hl)
      002CE4 21r00r00             10262 	ld	hl, #_shadow_OAM
      002CE7 19                   10263 	add	hl, de
      002CE8 E5                   10264 	push	hl
      002CE9 7D                   10265 	ld	a, l
      002CEA F8 03                10266 	ldhl	sp,	#3
      002CEC 77                   10267 	ld	(hl), a
      002CED E1                   10268 	pop	hl
      002CEE 7C                   10269 	ld	a, h
      002CEF F8 02                10270 	ldhl	sp,	#2
      002CF1 32                   10271 	ld	(hl-), a
      002CF2 2A                   10272 	ld	a, (hl+)
      002CF3 5F                   10273 	ld	e, a
      002CF4 56                   10274 	ld	d, (hl)
      002CF5 21 03 00             10275 	ld	hl, #0x0003
      002CF8 19                   10276 	add	hl, de
      002CF9 E5                   10277 	push	hl
      002CFA 7D                   10278 	ld	a, l
      002CFB F8 05                10279 	ldhl	sp,	#5
      002CFD 77                   10280 	ld	(hl), a
      002CFE E1                   10281 	pop	hl
      002CFF 7C                   10282 	ld	a, h
      002D00 F8 04                10283 	ldhl	sp,	#4
      002D02 32                   10284 	ld	(hl-), a
      002D03 2A                   10285 	ld	a,	(hl+)
      002D04 66                   10286 	ld	h, (hl)
      002D05 6F                   10287 	ld	l, a
      002D06 36 60                10288 	ld	(hl), #0x60
                                  10289 ;src/main.c:1048: projectiles[oldestProjectile].offset = 4;
      002D08 21rD9r00             10290 	ld	hl, #_oldestProjectile
      002D0B 4E                   10291 	ld	c, (hl)
      002D0C 06 00                10292 	ld	b, #0x00
      002D0E 69                   10293 	ld	l, c
      002D0F 60                   10294 	ld	h, b
      002D10 29                   10295 	add	hl, hl
      002D11 09                   10296 	add	hl, bc
      002D12 29                   10297 	add	hl, hl
      002D13 29                   10298 	add	hl, hl
      002D14 09                   10299 	add	hl, bc
      002D15 E5                   10300 	push	hl
      002D16 7D                   10301 	ld	a, l
      002D17 F8 05                10302 	ldhl	sp,	#5
      002D19 77                   10303 	ld	(hl), a
      002D1A E1                   10304 	pop	hl
      002D1B 7C                   10305 	ld	a, h
      002D1C F8 04                10306 	ldhl	sp,	#4
      002D1E 32                   10307 	ld	(hl-), a
      002D1F 2A                   10308 	ld	a, (hl+)
      002D20 5F                   10309 	ld	e, a
      002D21 56                   10310 	ld	d, (hl)
      002D22 21rB4r00             10311 	ld	hl, #_projectiles
      002D25 19                   10312 	add	hl, de
      002D26 E5                   10313 	push	hl
      002D27 7D                   10314 	ld	a, l
      002D28 F8 03                10315 	ldhl	sp,	#3
      002D2A 77                   10316 	ld	(hl), a
      002D2B E1                   10317 	pop	hl
      002D2C 7C                   10318 	ld	a, h
      002D2D F8 02                10319 	ldhl	sp,	#2
      002D2F 32                   10320 	ld	(hl-), a
      002D30 2A                   10321 	ld	a, (hl+)
      002D31 5F                   10322 	ld	e, a
      002D32 56                   10323 	ld	d, (hl)
      002D33 21 04 00             10324 	ld	hl, #0x0004
      002D36 19                   10325 	add	hl, de
      002D37 E5                   10326 	push	hl
      002D38 7D                   10327 	ld	a, l
      002D39 F8 05                10328 	ldhl	sp,	#5
      002D3B 77                   10329 	ld	(hl), a
      002D3C E1                   10330 	pop	hl
      002D3D 7C                   10331 	ld	a, h
      002D3E F8 04                10332 	ldhl	sp,	#4
      002D40 32                   10333 	ld	(hl-), a
      002D41 2A                   10334 	ld	a,	(hl+)
      002D42 66                   10335 	ld	h, (hl)
      002D43 6F                   10336 	ld	l, a
      002D44 36 04                10337 	ld	(hl), #0x04
      002D46 18 5E                10338 	jr	00142$
      002D48                      10339 00125$:
                                  10340 ;src/main.c:1050: else if (xDir == -1 && yDir == -1) {
      002D48 F8 04                10341 	ldhl	sp,	#4
      002D4A 7E                   10342 	ld	a, (hl)
      002D4B B7                   10343 	or	a, a
      002D4C 28 58                10344 	jr	Z, 00142$
      002D4E F8 01                10345 	ldhl	sp,	#1
      002D50 7E                   10346 	ld	a, (hl)
      002D51 B7                   10347 	or	a, a
      002D52 28 52                10348 	jr	Z, 00142$
                                  10349 ;src/main.c:1051: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002D54 23                   10350 	inc	hl
                                  10351 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002D55 2A                   10352 	ld	a, (hl+)
      002D56 22                   10353 	ld	(hl+), a
      002D57 36 00                10354 	ld	(hl), #0x00
      002D59 3E 02                10355 	ld	a, #0x02
      002D5B                      10356 00278$:
      002D5B F8 03                10357 	ldhl	sp,	#3
      002D5D CB 26                10358 	sla	(hl)
      002D5F 23                   10359 	inc	hl
      002D60 CB 16                10360 	rl	(hl)
      002D62 3D                   10361 	dec	a
      002D63 20 F6                10362 	jr	NZ, 00278$
      002D65 2B                   10363 	dec	hl
      002D66 2A                   10364 	ld	a, (hl+)
      002D67 5F                   10365 	ld	e, a
      002D68 56                   10366 	ld	d, (hl)
      002D69 21r00r00             10367 	ld	hl, #_shadow_OAM
      002D6C 19                   10368 	add	hl, de
      002D6D E5                   10369 	push	hl
      002D6E 7D                   10370 	ld	a, l
      002D6F F8 03                10371 	ldhl	sp,	#3
      002D71 77                   10372 	ld	(hl), a
      002D72 E1                   10373 	pop	hl
      002D73 7C                   10374 	ld	a, h
      002D74 F8 02                10375 	ldhl	sp,	#2
      002D76 32                   10376 	ld	(hl-), a
      002D77 2A                   10377 	ld	a, (hl+)
      002D78 5F                   10378 	ld	e, a
      002D79 56                   10379 	ld	d, (hl)
      002D7A 21 03 00             10380 	ld	hl, #0x0003
      002D7D 19                   10381 	add	hl, de
      002D7E E5                   10382 	push	hl
      002D7F 7D                   10383 	ld	a, l
      002D80 F8 05                10384 	ldhl	sp,	#5
      002D82 77                   10385 	ld	(hl), a
      002D83 E1                   10386 	pop	hl
      002D84 7C                   10387 	ld	a, h
      002D85 F8 04                10388 	ldhl	sp,	#4
      002D87 32                   10389 	ld	(hl-), a
      002D88 2A                   10390 	ld	a,	(hl+)
      002D89 66                   10391 	ld	h, (hl)
      002D8A 6F                   10392 	ld	l, a
      002D8B 36 20                10393 	ld	(hl), #0x20
                                  10394 ;src/main.c:1052: projectiles[oldestProjectile].offset = 12;
      002D8D 21rD9r00             10395 	ld	hl, #_oldestProjectile
      002D90 4E                   10396 	ld	c, (hl)
      002D91 06 00                10397 	ld	b, #0x00
      002D93 69                   10398 	ld	l, c
      002D94 60                   10399 	ld	h, b
      002D95 29                   10400 	add	hl, hl
      002D96 09                   10401 	add	hl, bc
      002D97 29                   10402 	add	hl, hl
      002D98 29                   10403 	add	hl, hl
      002D99 09                   10404 	add	hl, bc
      002D9A 01rB4r00             10405 	ld	bc,#_projectiles
      002D9D 09                   10406 	add	hl,bc
      002D9E 4D                   10407 	ld	c, l
      002D9F 44                   10408 	ld	b, h
      002DA0 21 04 00             10409 	ld	hl, #0x0004
      002DA3 09                   10410 	add	hl, bc
      002DA4 36 0C                10411 	ld	(hl), #0x0c
      002DA6                      10412 00142$:
                                  10413 ;src/main.c:1056: fireCooldown = projectiles[oldestProjectile].delay;
      002DA6 21rD9r00             10414 	ld	hl, #_oldestProjectile
      002DA9 4E                   10415 	ld	c, (hl)
      002DAA 06 00                10416 	ld	b, #0x00
      002DAC 69                   10417 	ld	l, c
      002DAD 60                   10418 	ld	h, b
      002DAE 29                   10419 	add	hl, hl
      002DAF 09                   10420 	add	hl, bc
      002DB0 29                   10421 	add	hl, hl
      002DB1 29                   10422 	add	hl, hl
      002DB2 09                   10423 	add	hl, bc
      002DB3 01rB4r00             10424 	ld	bc,#_projectiles
      002DB6 09                   10425 	add	hl,bc
      002DB7 01 0B 00             10426 	ld	bc, #0x000b
      002DBA 09                   10427 	add	hl, bc
      002DBB 7E                   10428 	ld	a, (hl)
      002DBC EArDAr00             10429 	ld	(#_fireCooldown),a
      002DBF                      10430 00155$:
                                  10431 ;src/main.c:1062: }
      002DBF E8 05                10432 	add	sp, #5
      002DC1 C9                   10433 	ret
                                  10434 ;src/main.c:1065: void moveProjectiles() {
                                  10435 ;	---------------------------------
                                  10436 ; Function moveProjectiles
                                  10437 ; ---------------------------------
      002DC2                      10438 _moveProjectiles::
      002DC2 E8 F6                10439 	add	sp, #-10
                                  10440 ;src/main.c:1066: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002DC4 F8 09                10441 	ldhl	sp,	#9
      002DC6 36 00                10442 	ld	(hl), #0x00
      002DC8                      10443 00112$:
      002DC8 21rBFr0B             10444 	ld	hl, #_PROJECTILECOUNT
      002DCB 4E                   10445 	ld	c, (hl)
      002DCC F8 09                10446 	ldhl	sp,	#9
      002DCE 7E                   10447 	ld	a, (hl)
      002DCF 91                   10448 	sub	a, c
      002DD0 D2rA2r2F             10449 	jp	NC, 00114$
                                  10450 ;src/main.c:1067: if (projectiles[i].active) {
      002DD3 4E                   10451 	ld	c, (hl)
      002DD4 06 00                10452 	ld	b, #0x00
      002DD6 69                   10453 	ld	l, c
      002DD7 60                   10454 	ld	h, b
      002DD8 29                   10455 	add	hl, hl
      002DD9 09                   10456 	add	hl, bc
      002DDA 29                   10457 	add	hl, hl
      002DDB 29                   10458 	add	hl, hl
      002DDC 09                   10459 	add	hl, bc
      002DDD 01rB4r00             10460 	ld	bc,#_projectiles
      002DE0 09                   10461 	add	hl,bc
      002DE1 E5                   10462 	push	hl
      002DE2 7D                   10463 	ld	a, l
      002DE3 F8 07                10464 	ldhl	sp,	#7
      002DE5 77                   10465 	ld	(hl), a
      002DE6 E1                   10466 	pop	hl
      002DE7 7C                   10467 	ld	a, h
      002DE8 F8 06                10468 	ldhl	sp,	#6
      002DEA 32                   10469 	ld	(hl-), a
      002DEB 2A                   10470 	ld	a, (hl+)
      002DEC 5F                   10471 	ld	e, a
      002DED 56                   10472 	ld	d, (hl)
      002DEE 21 0A 00             10473 	ld	hl, #0x000a
      002DF1 19                   10474 	add	hl, de
      002DF2 4D                   10475 	ld	c, l
      002DF3 44                   10476 	ld	b, h
      002DF4 0A                   10477 	ld	a, (bc)
      002DF5 F8 08                10478 	ldhl	sp,	#8
      002DF7 77                   10479 	ld	(hl), a
      002DF8 7E                   10480 	ld	a, (hl)
      002DF9 B7                   10481 	or	a, a
      002DFA CAr9Cr2F             10482 	jp	Z, 00113$
                                  10483 ;src/main.c:1068: projectiles[i].x -= xOverflow;
      002DFD 2B                   10484 	dec	hl
      002DFE 2B                   10485 	dec	hl
      002DFF 2B                   10486 	dec	hl
      002E00 2A                   10487 	ld	a, (hl+)
      002E01 5F                   10488 	ld	e, a
      002E02 56                   10489 	ld	d, (hl)
      002E03 1A                   10490 	ld	a, (de)
      002E04 47                   10491 	ld	b, a
      002E05 13                   10492 	inc	de
      002E06 1A                   10493 	ld	a, (de)
      002E07 4F                   10494 	ld	c, a
      002E08 58                   10495 	ld	e, b
      002E09 51                   10496 	ld	d, c
      002E0A 21rE9r00             10497 	ld	hl, #_xOverflow
      002E0D 2A                   10498 	ld	a,	(hl+)
      002E0E 66                   10499 	ld	h, (hl)
      002E0F 6F                   10500 	ld	l, a
      002E10 7B                   10501 	ld	a, e
      002E11 95                   10502 	sub	a, l
      002E12 5F                   10503 	ld	e, a
      002E13 7A                   10504 	ld	a, d
      002E14 9C                   10505 	sbc	a, h
      002E15 F8 01                10506 	ldhl	sp,	#1
      002E17 32                   10507 	ld	(hl-), a
      002E18 73                   10508 	ld	(hl), e
      002E19 F8 05                10509 	ldhl	sp,#5
      002E1B 2A                   10510 	ld	a, (hl+)
      002E1C 5F                   10511 	ld	e, a
      002E1D 56                   10512 	ld	d, (hl)
      002E1E F8 00                10513 	ldhl	sp,	#0
      002E20 2A                   10514 	ld	a, (hl+)
      002E21 12                   10515 	ld	(de), a
      002E22 13                   10516 	inc	de
      002E23 7E                   10517 	ld	a, (hl)
      002E24 12                   10518 	ld	(de), a
                                  10519 ;src/main.c:1069: projectiles[i].y -= yOverflow;
      002E25 F8 05                10520 	ldhl	sp,#5
      002E27 2A                   10521 	ld	a, (hl+)
      002E28 5F                   10522 	ld	e, a
      002E29 56                   10523 	ld	d, (hl)
      002E2A 21 02 00             10524 	ld	hl, #0x0002
      002E2D 19                   10525 	add	hl, de
      002E2E E5                   10526 	push	hl
      002E2F 7D                   10527 	ld	a, l
      002E30 F8 04                10528 	ldhl	sp,	#4
      002E32 77                   10529 	ld	(hl), a
      002E33 E1                   10530 	pop	hl
      002E34 7C                   10531 	ld	a, h
      002E35 F8 03                10532 	ldhl	sp,	#3
      002E37 32                   10533 	ld	(hl-), a
      002E38 2A                   10534 	ld	a, (hl+)
      002E39 5F                   10535 	ld	e, a
      002E3A 56                   10536 	ld	d, (hl)
      002E3B 1A                   10537 	ld	a, (de)
      002E3C 4F                   10538 	ld	c, a
      002E3D 13                   10539 	inc	de
      002E3E 1A                   10540 	ld	a, (de)
      002E3F 47                   10541 	ld	b, a
      002E40 79                   10542 	ld	a, c
      002E41 21rEBr00             10543 	ld	hl, #_yOverflow
      002E44 96                   10544 	sub	a, (hl)
      002E45 23                   10545 	inc	hl
      002E46 4F                   10546 	ld	c, a
      002E47 78                   10547 	ld	a, b
      002E48 9E                   10548 	sbc	a, (hl)
      002E49 47                   10549 	ld	b, a
      002E4A F8 02                10550 	ldhl	sp,	#2
      002E4C 2A                   10551 	ld	a,	(hl+)
      002E4D 66                   10552 	ld	h, (hl)
      002E4E 6F                   10553 	ld	l, a
      002E4F 79                   10554 	ld	a, c
      002E50 22                   10555 	ld	(hl+), a
      002E51 70                   10556 	ld	(hl), b
                                  10557 ;src/main.c:1071: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002E52 F8 05                10558 	ldhl	sp,#5
      002E54 2A                   10559 	ld	a, (hl+)
      002E55 5F                   10560 	ld	e, a
      002E56 56                   10561 	ld	d, (hl)
      002E57 21 06 00             10562 	ld	hl, #0x0006
      002E5A 19                   10563 	add	hl, de
      002E5B 5D                   10564 	ld	e, l
      002E5C 54                   10565 	ld	d, h
      002E5D 1A                   10566 	ld	a, (de)
      002E5E 6F                   10567 	ld	l, a
                                  10568 ;	spillPairReg hl
                                  10569 ;	spillPairReg hl
      002E5F 07                   10570 	rlca
      002E60 9F                   10571 	sbc	a, a
      002E61 67                   10572 	ld	h, a
                                  10573 ;	spillPairReg hl
                                  10574 ;	spillPairReg hl
      002E62 09                   10575 	add	hl, bc
      002E63 4D                   10576 	ld	c, l
      002E64 44                   10577 	ld	b, h
                                  10578 ;src/main.c:1072: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002E65 F8 05                10579 	ldhl	sp,#5
      002E67 2A                   10580 	ld	a, (hl+)
      002E68 5F                   10581 	ld	e, a
      002E69 56                   10582 	ld	d, (hl)
      002E6A 21 05 00             10583 	ld	hl, #0x0005
      002E6D 19                   10584 	add	hl, de
      002E6E 5D                   10585 	ld	e, l
      002E6F 54                   10586 	ld	d, h
      002E70 1A                   10587 	ld	a, (de)
      002E71 F8 07                10588 	ldhl	sp,	#7
      002E73 22                   10589 	ld	(hl+), a
      002E74 07                   10590 	rlca
      002E75 9F                   10591 	sbc	a, a
      002E76 77                   10592 	ld	(hl), a
      002E77 D1                   10593 	pop	de
      002E78 D5                   10594 	push	de
      002E79 3A                   10595 	ld	a, (hl-)
      002E7A 6E                   10596 	ld	l, (hl)
      002E7B 67                   10597 	ld	h, a
      002E7C 19                   10598 	add	hl, de
      002E7D 5D                   10599 	ld	e, l
      002E7E 7C                   10600 	ld	a, h
      002E7F F8 07                10601 	ldhl	sp,	#7
      002E81 73                   10602 	ld	(hl), e
      002E82 23                   10603 	inc	hl
      002E83 77                   10604 	ld	(hl), a
                                  10605 ;src/main.c:1075: projectiles[i].y = newY;
      002E84 F8 02                10606 	ldhl	sp,	#2
      002E86 2A                   10607 	ld	a,	(hl+)
      002E87 66                   10608 	ld	h, (hl)
      002E88 6F                   10609 	ld	l, a
      002E89 79                   10610 	ld	a, c
      002E8A 22                   10611 	ld	(hl+), a
      002E8B 70                   10612 	ld	(hl), b
                                  10613 ;src/main.c:1076: projectiles[i].x = newX;
      002E8C F8 05                10614 	ldhl	sp,#5
      002E8E 2A                   10615 	ld	a, (hl+)
      002E8F 5F                   10616 	ld	e, a
      002E90 2A                   10617 	ld	a, (hl+)
      002E91 57                   10618 	ld	d, a
      002E92 2A                   10619 	ld	a, (hl+)
      002E93 12                   10620 	ld	(de), a
      002E94 13                   10621 	inc	de
                                  10622 ;src/main.c:1080: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002E95 3A                   10623 	ld	a, (hl-)
      002E96 2B                   10624 	dec	hl
      002E97 2B                   10625 	dec	hl
      002E98 12                   10626 	ld	(de), a
      002E99 2A                   10627 	ld	a, (hl+)
      002E9A 5F                   10628 	ld	e, a
      002E9B 56                   10629 	ld	d, (hl)
      002E9C 21 04 00             10630 	ld	hl, #0x0004
      002E9F 19                   10631 	add	hl, de
      002EA0 5D                   10632 	ld	e, l
      002EA1 54                   10633 	ld	d, h
      002EA2 1A                   10634 	ld	a, (de)
      002EA3 81                   10635 	add	a, c
      002EA4 4F                   10636 	ld	c, a
      002EA5 F8 07                10637 	ldhl	sp,	#7
      002EA7 2A                   10638 	ld	a, (hl+)
      002EA8 23                   10639 	inc	hl
      002EA9 C6 04                10640 	add	a, #0x04
      002EAB 5F                   10641 	ld	e, a
      002EAC 7E                   10642 	ld	a, (hl)
      002EAD C6 1E                10643 	add	a, #0x1e
      002EAF F8 04                10644 	ldhl	sp,	#4
      002EB1 77                   10645 	ld	(hl), a
                                  10646 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002EB2 6E                   10647 	ld	l, (hl)
                                  10648 ;	spillPairReg hl
                                  10649 ;	spillPairReg hl
      002EB3 26 00                10650 	ld	h, #0x00
                                  10651 ;	spillPairReg hl
                                  10652 ;	spillPairReg hl
      002EB5 29                   10653 	add	hl, hl
      002EB6 29                   10654 	add	hl, hl
      002EB7 D5                   10655 	push	de
      002EB8 11r00r00             10656 	ld	de, #_shadow_OAM
      002EBB 19                   10657 	add	hl, de
      002EBC D1                   10658 	pop	de
                                  10659 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002EBD 79                   10660 	ld	a, c
      002EBE 22                   10661 	ld	(hl+), a
      002EBF 73                   10662 	ld	(hl), e
                                  10663 ;src/main.c:1084: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002EC0 F8 05                10664 	ldhl	sp,#5
      002EC2 2A                   10665 	ld	a, (hl+)
      002EC3 5F                   10666 	ld	e, a
      002EC4 3A                   10667 	ld	a, (hl-)
      002EC5 57                   10668 	ld	d, a
      002EC6 1A                   10669 	ld	a, (de)
      002EC7 22                   10670 	ld	(hl+), a
      002EC8 13                   10671 	inc	de
      002EC9 1A                   10672 	ld	a, (de)
      002ECA 22                   10673 	ld	(hl+), a
      002ECB 23                   10674 	inc	hl
      002ECC CB 7E                10675 	bit	7, (hl)
      002ECE 20 51                10676 	jr	NZ, 00101$
      002ED0 F8 05                10677 	ldhl	sp,	#5
      002ED2 2A                   10678 	ld	a, (hl+)
      002ED3 23                   10679 	inc	hl
      002ED4 32                   10680 	ld	(hl-), a
      002ED5 2A                   10681 	ld	a, (hl+)
      002ED6 23                   10682 	inc	hl
      002ED7 32                   10683 	ld	(hl-), a
      002ED8 3E AA                10684 	ld	a, #0xaa
      002EDA 96                   10685 	sub	a, (hl)
      002EDB 23                   10686 	inc	hl
      002EDC 3E 00                10687 	ld	a, #0x00
      002EDE 9E                   10688 	sbc	a, (hl)
      002EDF 3E 00                10689 	ld	a, #0x00
      002EE1 57                   10690 	ld	d, a
      002EE2 CB 7E                10691 	bit	7, (hl)
      002EE4 28 07                10692 	jr	Z, 00147$
      002EE6 CB 7A                10693 	bit	7, d
      002EE8 20 08                10694 	jr	NZ, 00148$
      002EEA BF                   10695 	cp	a, a
      002EEB 18 05                10696 	jr	00148$
      002EED                      10697 00147$:
      002EED CB 7A                10698 	bit	7, d
      002EEF 28 01                10699 	jr	Z, 00148$
      002EF1 37                   10700 	scf
      002EF2                      10701 00148$:
      002EF2 38 2D                10702 	jr	C, 00101$
      002EF4 F8 02                10703 	ldhl	sp,#2
      002EF6 2A                   10704 	ld	a, (hl+)
      002EF7 5F                   10705 	ld	e, a
      002EF8 56                   10706 	ld	d, (hl)
      002EF9 1A                   10707 	ld	a, (de)
      002EFA F8 07                10708 	ldhl	sp,	#7
      002EFC 22                   10709 	ld	(hl+), a
      002EFD 13                   10710 	inc	de
      002EFE 1A                   10711 	ld	a, (de)
      002EFF 77                   10712 	ld	(hl), a
      002F00 CB 7E                10713 	bit	7, (hl)
      002F02 20 1D                10714 	jr	NZ, 00101$
      002F04 2B                   10715 	dec	hl
      002F05 3E 9A                10716 	ld	a, #0x9a
      002F07 96                   10717 	sub	a, (hl)
      002F08 23                   10718 	inc	hl
      002F09 3E 00                10719 	ld	a, #0x00
      002F0B 9E                   10720 	sbc	a, (hl)
      002F0C 3E 00                10721 	ld	a, #0x00
      002F0E 57                   10722 	ld	d, a
      002F0F CB 7E                10723 	bit	7, (hl)
      002F11 28 07                10724 	jr	Z, 00149$
      002F13 CB 7A                10725 	bit	7, d
      002F15 20 08                10726 	jr	NZ, 00150$
      002F17 BF                   10727 	cp	a, a
      002F18 18 05                10728 	jr	00150$
      002F1A                      10729 00149$:
      002F1A CB 7A                10730 	bit	7, d
      002F1C 28 01                10731 	jr	Z, 00150$
      002F1E 37                   10732 	scf
      002F1F                      10733 00150$:
      002F1F 30 7B                10734 	jr	NC, 00113$
      002F21                      10735 00101$:
                                  10736 ;src/main.c:1085: projectiles[i].active = 0;
      002F21 F8 09                10737 	ldhl	sp,	#9
      002F23 4E                   10738 	ld	c, (hl)
      002F24 06 00                10739 	ld	b, #0x00
      002F26 69                   10740 	ld	l, c
      002F27 60                   10741 	ld	h, b
      002F28 29                   10742 	add	hl, hl
      002F29 09                   10743 	add	hl, bc
      002F2A 29                   10744 	add	hl, hl
      002F2B 29                   10745 	add	hl, hl
      002F2C 09                   10746 	add	hl, bc
      002F2D E5                   10747 	push	hl
      002F2E 7D                   10748 	ld	a, l
      002F2F F8 09                10749 	ldhl	sp,	#9
      002F31 77                   10750 	ld	(hl), a
      002F32 E1                   10751 	pop	hl
      002F33 7C                   10752 	ld	a, h
      002F34 F8 08                10753 	ldhl	sp,	#8
      002F36 32                   10754 	ld	(hl-), a
      002F37 2A                   10755 	ld	a, (hl+)
      002F38 5F                   10756 	ld	e, a
      002F39 56                   10757 	ld	d, (hl)
      002F3A 21rB4r00             10758 	ld	hl, #_projectiles
      002F3D 19                   10759 	add	hl, de
      002F3E E5                   10760 	push	hl
      002F3F 7D                   10761 	ld	a, l
      002F40 F8 07                10762 	ldhl	sp,	#7
      002F42 77                   10763 	ld	(hl), a
      002F43 E1                   10764 	pop	hl
      002F44 7C                   10765 	ld	a, h
      002F45 F8 06                10766 	ldhl	sp,	#6
      002F47 32                   10767 	ld	(hl-), a
      002F48 2A                   10768 	ld	a, (hl+)
      002F49 5F                   10769 	ld	e, a
      002F4A 56                   10770 	ld	d, (hl)
      002F4B 21 0A 00             10771 	ld	hl, #0x000a
      002F4E 19                   10772 	add	hl, de
      002F4F E5                   10773 	push	hl
      002F50 7D                   10774 	ld	a, l
      002F51 F8 09                10775 	ldhl	sp,	#9
      002F53 77                   10776 	ld	(hl), a
      002F54 E1                   10777 	pop	hl
      002F55 7C                   10778 	ld	a, h
      002F56 F8 08                10779 	ldhl	sp,	#8
      002F58 32                   10780 	ld	(hl-), a
      002F59 2A                   10781 	ld	a,	(hl+)
      002F5A 66                   10782 	ld	h, (hl)
      002F5B 6F                   10783 	ld	l, a
      002F5C 36 00                10784 	ld	(hl), #0x00
                                  10785 ;src/main.c:1086: set_sprite_tile(30+i, 0x7f);
      002F5E F8 04                10786 	ldhl	sp,	#4
      002F60 7E                   10787 	ld	a, (hl)
      002F61 F8 08                10788 	ldhl	sp,	#8
      002F63 77                   10789 	ld	(hl), a
                                  10790 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002F64 3A                   10791 	ld	a, (hl-)
      002F65 22                   10792 	ld	(hl+), a
      002F66 36 00                10793 	ld	(hl), #0x00
      002F68 3E 02                10794 	ld	a, #0x02
      002F6A                      10795 00151$:
      002F6A F8 07                10796 	ldhl	sp,	#7
      002F6C CB 26                10797 	sla	(hl)
      002F6E 23                   10798 	inc	hl
      002F6F CB 16                10799 	rl	(hl)
      002F71 3D                   10800 	dec	a
      002F72 20 F6                10801 	jr	NZ, 00151$
      002F74 2B                   10802 	dec	hl
      002F75 2A                   10803 	ld	a, (hl+)
      002F76 5F                   10804 	ld	e, a
      002F77 56                   10805 	ld	d, (hl)
      002F78 21r00r00             10806 	ld	hl, #_shadow_OAM
      002F7B 19                   10807 	add	hl, de
      002F7C E5                   10808 	push	hl
      002F7D 7D                   10809 	ld	a, l
      002F7E F8 07                10810 	ldhl	sp,	#7
      002F80 77                   10811 	ld	(hl), a
      002F81 E1                   10812 	pop	hl
      002F82 7C                   10813 	ld	a, h
      002F83 F8 06                10814 	ldhl	sp,	#6
      002F85 32                   10815 	ld	(hl-), a
      002F86 2A                   10816 	ld	a, (hl+)
      002F87 5F                   10817 	ld	e, a
      002F88 56                   10818 	ld	d, (hl)
      002F89 21 02 00             10819 	ld	hl, #0x0002
      002F8C 19                   10820 	add	hl, de
      002F8D E5                   10821 	push	hl
      002F8E 7D                   10822 	ld	a, l
      002F8F F8 09                10823 	ldhl	sp,	#9
      002F91 77                   10824 	ld	(hl), a
      002F92 E1                   10825 	pop	hl
      002F93 7C                   10826 	ld	a, h
      002F94 F8 08                10827 	ldhl	sp,	#8
      002F96 32                   10828 	ld	(hl-), a
      002F97 2A                   10829 	ld	a,	(hl+)
      002F98 66                   10830 	ld	h, (hl)
      002F99 6F                   10831 	ld	l, a
      002F9A 36 7F                10832 	ld	(hl), #0x7f
                                  10833 ;src/main.c:1086: set_sprite_tile(30+i, 0x7f);
      002F9C                      10834 00113$:
                                  10835 ;src/main.c:1066: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002F9C F8 09                10836 	ldhl	sp,	#9
      002F9E 34                   10837 	inc	(hl)
      002F9F C3rC8r2D             10838 	jp	00112$
      002FA2                      10839 00114$:
                                  10840 ;src/main.c:1091: }
      002FA2 E8 0A                10841 	add	sp, #10
      002FA4 C9                   10842 	ret
                                  10843 ;src/main.c:1093: void tickPickups() {
                                  10844 ;	---------------------------------
                                  10845 ; Function tickPickups
                                  10846 ; ---------------------------------
      002FA5                      10847 _tickPickups::
      002FA5 3B                   10848 	dec	sp
      002FA6 3B                   10849 	dec	sp
                                  10850 ;src/main.c:1095: if (pickup.active) {
      002FA7 FArFFr00             10851 	ld	a, (#(_pickup + 5) + 0)
      002FAA B7                   10852 	or	a, a
      002FAB CAr7Ar31             10853 	jp	Z, 00144$
                                  10854 ;src/main.c:1096: pickup.x -= xOverflow;
      002FAE 21rFBr00             10855 	ld	hl, #(_pickup + 1)
      002FB1 2A                   10856 	ld	a, (hl+)
      002FB2 47                   10857 	ld	b, a
      002FB3 4E                   10858 	ld	c, (hl)
      002FB4 58                   10859 	ld	e, b
      002FB5 51                   10860 	ld	d, c
      002FB6 21rE9r00             10861 	ld	hl, #_xOverflow
      002FB9 2A                   10862 	ld	a,	(hl+)
      002FBA 66                   10863 	ld	h, (hl)
      002FBB 6F                   10864 	ld	l, a
      002FBC 7B                   10865 	ld	a, e
      002FBD 95                   10866 	sub	a, l
      002FBE 5F                   10867 	ld	e, a
      002FBF 7A                   10868 	ld	a, d
      002FC0 9C                   10869 	sbc	a, h
      002FC1 F8 01                10870 	ldhl	sp,	#1
      002FC3 32                   10871 	ld	(hl-), a
      002FC4 73                   10872 	ld	(hl), e
      002FC5 11rFBr00             10873 	ld	de, #(_pickup + 1)
      002FC8 2A                   10874 	ld	a, (hl+)
      002FC9 12                   10875 	ld	(de), a
      002FCA 13                   10876 	inc	de
      002FCB 7E                   10877 	ld	a, (hl)
      002FCC 12                   10878 	ld	(de), a
                                  10879 ;src/main.c:1097: pickup.y -= yOverflow;
      002FCD 21rFDr00             10880 	ld	hl, #(_pickup + 3)
      002FD0 2A                   10881 	ld	a, (hl+)
      002FD1 4F                   10882 	ld	c, a
      002FD2 46                   10883 	ld	b, (hl)
      002FD3 79                   10884 	ld	a, c
      002FD4 21rEBr00             10885 	ld	hl, #_yOverflow
      002FD7 96                   10886 	sub	a, (hl)
      002FD8 23                   10887 	inc	hl
      002FD9 4F                   10888 	ld	c, a
      002FDA 78                   10889 	ld	a, b
      002FDB 9E                   10890 	sbc	a, (hl)
      002FDC 47                   10891 	ld	b, a
      002FDD 21rFDr00             10892 	ld	hl, #(_pickup + 3)
      002FE0 79                   10893 	ld	a, c
      002FE1 22                   10894 	ld	(hl+), a
      002FE2 70                   10895 	ld	(hl), b
                                  10896 ;src/main.c:1098: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002FE3 79                   10897 	ld	a, c
      002FE4 C6 0C                10898 	add	a, #0x0c
      002FE6 47                   10899 	ld	b, a
      002FE7 F8 00                10900 	ldhl	sp,	#0
      002FE9 7E                   10901 	ld	a, (hl)
      002FEA C6 04                10902 	add	a, #0x04
      002FEC 4F                   10903 	ld	c, a
                                  10904 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002FED 21r0Cr00             10905 	ld	hl, #(_shadow_OAM + 12)
                                  10906 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002FF0 78                   10907 	ld	a, b
      002FF1 22                   10908 	ld	(hl+), a
      002FF2 71                   10909 	ld	(hl), c
                                  10910 ;src/main.c:1099: if (pickup.visible && auxTick == 1) {
      002FF3 21rFAr00             10911 	ld	hl, #_pickup
      002FF6 4E                   10912 	ld	c, (hl)
                                  10913 ;src/main.c:1096: pickup.x -= xOverflow;
      002FF7 11rFBr00             10914 	ld	de, #(_pickup + 1)
      002FFA 1A                   10915 	ld	a, (de)
      002FFB F8 00                10916 	ldhl	sp,	#0
      002FFD 22                   10917 	ld	(hl+), a
      002FFE 13                   10918 	inc	de
      002FFF 1A                   10919 	ld	a, (de)
      003000 77                   10920 	ld	(hl), a
                                  10921 ;src/main.c:1099: if (pickup.visible && auxTick == 1) {
      003001 79                   10922 	ld	a, c
      003002 B7                   10923 	or	a, a
      003003 CAr0Er31             10924 	jp	Z, 00127$
      003006 FAr07r01             10925 	ld	a, (#_auxTick)
      003009 3D                   10926 	dec	a
      00300A C2r0Er31             10927 	jp	NZ,00127$
                                  10928 ;src/main.c:1101: if (abs(pickup.x - playerDrawX) < 10) {
      00300D F8 00                10929 	ldhl	sp,	#0
      00300F 7E                   10930 	ld	a, (hl)
      003010 21rE3r00             10931 	ld	hl, #_playerDrawX
      003013 4E                   10932 	ld	c, (hl)
      003014 91                   10933 	sub	a, c
      003015 4F                   10934 	ld	c, a
                                  10935 ;src/main.c:367: if (value >= 0) return value;
      003016 CB 79                10936 	bit	7, c
      003018 28 03                10937 	jr	Z, 00136$
                                  10938 ;src/main.c:368: else return - value;
      00301A AF                   10939 	xor	a, a
      00301B 91                   10940 	sub	a, c
      00301C 4F                   10941 	ld	c, a
                                  10942 ;src/main.c:1101: if (abs(pickup.x - playerDrawX) < 10) {
      00301D                      10943 00136$:
      00301D 79                   10944 	ld	a, c
      00301E EE 80                10945 	xor	a, #0x80
      003020 D6 8A                10946 	sub	a, #0x8a
      003022 D2rB1r30             10947 	jp	NC, 00115$
                                  10948 ;src/main.c:1102: if (abs(pickup.y - playerDrawY) < 10) {
      003025 FArFDr00             10949 	ld	a, (#(_pickup + 3) + 0)
      003028 F8 01                10950 	ldhl	sp,	#1
      00302A 77                   10951 	ld	(hl), a
      00302B 21rE4r00             10952 	ld	hl, #_playerDrawY
      00302E 4E                   10953 	ld	c, (hl)
      00302F F8 01                10954 	ldhl	sp,	#1
      003031 7E                   10955 	ld	a, (hl)
      003032 91                   10956 	sub	a, c
      003033 77                   10957 	ld	(hl), a
                                  10958 ;src/main.c:367: if (value >= 0) return value;
      003034 CB 7E                10959 	bit	7, (hl)
      003036 28 05                10960 	jr	Z, 00140$
                                  10961 ;src/main.c:368: else return - value;
      003038 AF                   10962 	xor	a, a
      003039 F8 01                10963 	ldhl	sp,	#1
      00303B 96                   10964 	sub	a, (hl)
      00303C 77                   10965 	ld	(hl), a
                                  10966 ;src/main.c:1102: if (abs(pickup.y - playerDrawY) < 10) {
      00303D                      10967 00140$:
      00303D F8 01                10968 	ldhl	sp,	#1
      00303F 7E                   10969 	ld	a, (hl)
      003040 EE 80                10970 	xor	a, #0x80
      003042 D6 8A                10971 	sub	a, #0x8a
      003044 30 6B                10972 	jr	NC, 00115$
                                  10973 ;src/main.c:1103: if (pickup.type == 0) { //upgrade
      003046 FAr00r01             10974 	ld	a, (#(_pickup + 6) + 0)
      003049 B7                   10975 	or	a, a
      00304A 20 0D                10976 	jr	NZ, 00104$
                                  10977 ;src/main.c:1104: if (gunLevel < 1) {
      00304C 21rEEr00             10978 	ld	hl, #_gunLevel
      00304F 7E                   10979 	ld	a, (hl)
      003050 D6 01                10980 	sub	a, #0x01
      003052 30 05                10981 	jr	NC, 00104$
                                  10982 ;src/main.c:1105: gunLevel += 1;
      003054 34                   10983 	inc	(hl)
      003055 7E                   10984 	ld	a, (hl)
                                  10985 ;src/main.c:1106: setGunIcon();
      003056 CDrE1r27             10986 	call	_setGunIcon
      003059                      10987 00104$:
                                  10988 ;src/main.c:1109: if (pickup.type == 1) { //missile ammo
      003059 21r00r01             10989 	ld	hl, #(_pickup + 6)
      00305C 6E                   10990 	ld	l, (hl)
                                  10991 ;	spillPairReg hl
                                  10992 ;src/main.c:1110: updateMissileCount(pickup.amount);
      00305D 01r01r01             10993 	ld	bc, #_pickup + 7
                                  10994 ;src/main.c:1109: if (pickup.type == 1) { //missile ammo
      003060 2D                   10995 	dec	l
      003061 20 09                10996 	jr	NZ, 00106$
                                  10997 ;src/main.c:1110: updateMissileCount(pickup.amount);
      003063 0A                   10998 	ld	a, (bc)
      003064 C5                   10999 	push	bc
      003065 F5                   11000 	push	af
      003066 33                   11001 	inc	sp
      003067 CDr04r0D             11002 	call	_updateMissileCount
      00306A 33                   11003 	inc	sp
      00306B C1                   11004 	pop	bc
      00306C                      11005 00106$:
                                  11006 ;src/main.c:1112: if (pickup.type == 2) {
      00306C FAr00r01             11007 	ld	a, (#(_pickup + 6) + 0)
      00306F D6 02                11008 	sub	a, #0x02
      003071 20 34                11009 	jr	NZ, 00111$
                                  11010 ;src/main.c:1113: if (hull + pickup.amount <= 100) {
      003073 21rF6r00             11011 	ld	hl, #_hull
      003076 5E                   11012 	ld	e, (hl)
      003077 16 00                11013 	ld	d, #0x00
      003079 0A                   11014 	ld	a, (bc)
      00307A 4F                   11015 	ld	c, a
      00307B 69                   11016 	ld	l, c
                                  11017 ;	spillPairReg hl
                                  11018 ;	spillPairReg hl
      00307C 26 00                11019 	ld	h, #0x00
                                  11020 ;	spillPairReg hl
                                  11021 ;	spillPairReg hl
      00307E 19                   11022 	add	hl, de
      00307F 5C                   11023 	ld	e, h
      003080 16 00                11024 	ld	d, #0x00
      003082 3E 64                11025 	ld	a, #0x64
      003084 BD                   11026 	cp	a, l
      003085 3E 00                11027 	ld	a, #0x00
      003087 9C                   11028 	sbc	a, h
      003088 CB 7B                11029 	bit	7, e
      00308A 28 07                11030 	jr	Z, 00247$
      00308C CB 7A                11031 	bit	7, d
      00308E 20 08                11032 	jr	NZ, 00248$
      003090 BF                   11033 	cp	a, a
      003091 18 05                11034 	jr	00248$
      003093                      11035 00247$:
      003093 CB 7A                11036 	bit	7, d
      003095 28 01                11037 	jr	Z, 00248$
      003097 37                   11038 	scf
      003098                      11039 00248$:
      003098 38 08                11040 	jr	C, 00108$
                                  11041 ;src/main.c:1114: hull += pickup.amount;
      00309A 79                   11042 	ld	a, c
      00309B 21rF6r00             11043 	ld	hl, #_hull
      00309E 86                   11044 	add	a, (hl)
      00309F 77                   11045 	ld	(hl), a
      0030A0 18 05                11046 	jr	00111$
      0030A2                      11047 00108$:
                                  11048 ;src/main.c:1117: hull = 100;
      0030A2 21rF6r00             11049 	ld	hl, #_hull
      0030A5 36 64                11050 	ld	(hl), #0x64
      0030A7                      11051 00111$:
                                  11052 ;src/main.c:1120: pickup.active = 0;
      0030A7 21rFFr00             11053 	ld	hl, #(_pickup + 5)
      0030AA 36 00                11054 	ld	(hl), #0x00
                                  11055 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0030AC 21r0Er00             11056 	ld	hl, #(_shadow_OAM + 14)
      0030AF 36 7F                11057 	ld	(hl), #0x7f
                                  11058 ;src/main.c:1121: set_sprite_tile(3, 0x7f);
      0030B1                      11059 00115$:
                                  11060 ;src/main.c:1096: pickup.x -= xOverflow;
      0030B1 21rFBr00             11061 	ld	hl, #(_pickup + 1)
      0030B4 2A                   11062 	ld	a, (hl+)
      0030B5 4F                   11063 	ld	c, a
      0030B6 46                   11064 	ld	b, (hl)
                                  11065 ;src/main.c:1124: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0030B7 79                   11066 	ld	a, c
      0030B8 D6 F6                11067 	sub	a, #0xf6
      0030BA 78                   11068 	ld	a, b
      0030BB 17                   11069 	rla
      0030BC 3F                   11070 	ccf
      0030BD 1F                   11071 	rra
      0030BE DE 7F                11072 	sbc	a, #0x7f
      0030C0 38 40                11073 	jr	C, 00116$
      0030C2 58                   11074 	ld	e, b
      0030C3 16 00                11075 	ld	d, #0x00
      0030C5 3E AA                11076 	ld	a, #0xaa
      0030C7 B9                   11077 	cp	a, c
      0030C8 3E 00                11078 	ld	a, #0x00
      0030CA 98                   11079 	sbc	a, b
      0030CB CB 7B                11080 	bit	7, e
      0030CD 28 07                11081 	jr	Z, 00249$
      0030CF CB 7A                11082 	bit	7, d
      0030D1 20 08                11083 	jr	NZ, 00250$
      0030D3 BF                   11084 	cp	a, a
      0030D4 18 05                11085 	jr	00250$
      0030D6                      11086 00249$:
      0030D6 CB 7A                11087 	bit	7, d
      0030D8 28 01                11088 	jr	Z, 00250$
      0030DA 37                   11089 	scf
      0030DB                      11090 00250$:
      0030DB 38 25                11091 	jr	C, 00116$
                                  11092 ;src/main.c:1097: pickup.y -= yOverflow;
      0030DD 21rFDr00             11093 	ld	hl, #(_pickup + 3)
      0030E0 2A                   11094 	ld	a, (hl+)
      0030E1 4F                   11095 	ld	c, a
      0030E2 46                   11096 	ld	b, (hl)
                                  11097 ;src/main.c:1124: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0030E3 CB 78                11098 	bit	7, b
      0030E5 20 1B                11099 	jr	NZ, 00116$
      0030E7 58                   11100 	ld	e, b
      0030E8 16 00                11101 	ld	d, #0x00
      0030EA 3E 9B                11102 	ld	a, #0x9b
      0030EC B9                   11103 	cp	a, c
      0030ED 3E 00                11104 	ld	a, #0x00
      0030EF 98                   11105 	sbc	a, b
      0030F0 CB 7B                11106 	bit	7, e
      0030F2 28 07                11107 	jr	Z, 00251$
      0030F4 CB 7A                11108 	bit	7, d
      0030F6 20 08                11109 	jr	NZ, 00252$
      0030F8 BF                   11110 	cp	a, a
      0030F9 18 05                11111 	jr	00252$
      0030FB                      11112 00251$:
      0030FB CB 7A                11113 	bit	7, d
      0030FD 28 01                11114 	jr	Z, 00252$
      0030FF 37                   11115 	scf
      003100                      11116 00252$:
      003100 30 78                11117 	jr	NC, 00144$
      003102                      11118 00116$:
                                  11119 ;src/main.c:1125: pickup.visible = 0;
      003102 21rFAr00             11120 	ld	hl, #_pickup
      003105 36 00                11121 	ld	(hl), #0x00
                                  11122 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003107 21r0Er00             11123 	ld	hl, #(_shadow_OAM + 14)
      00310A 36 7F                11124 	ld	(hl), #0x7f
                                  11125 ;src/main.c:1126: set_sprite_tile(3, 0x7f);
      00310C 18 6C                11126 	jr	00144$
      00310E                      11127 00127$:
                                  11128 ;src/main.c:1130: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      00310E F8 00                11129 	ldhl	sp,	#0
      003110 2A                   11130 	ld	a, (hl+)
      003111 D6 F6                11131 	sub	a, #0xf6
      003113 7E                   11132 	ld	a, (hl)
      003114 DE FF                11133 	sbc	a, #0xff
      003116 56                   11134 	ld	d, (hl)
      003117 3E FF                11135 	ld	a, #0xff
      003119 CB 7F                11136 	bit	7,a
      00311B 28 07                11137 	jr	Z, 00253$
      00311D CB 7A                11138 	bit	7, d
      00311F 20 08                11139 	jr	NZ, 00254$
      003121 BF                   11140 	cp	a, a
      003122 18 05                11141 	jr	00254$
      003124                      11142 00253$:
      003124 CB 7A                11143 	bit	7, d
      003126 28 01                11144 	jr	Z, 00254$
      003128 37                   11145 	scf
      003129                      11146 00254$:
      003129 38 4F                11147 	jr	C, 00144$
      00312B C1                   11148 	pop	bc
      00312C C5                   11149 	push	bc
      00312D 58                   11150 	ld	e, b
      00312E 16 00                11151 	ld	d, #0x00
      003130 3E AA                11152 	ld	a, #0xaa
      003132 B9                   11153 	cp	a, c
      003133 3E 00                11154 	ld	a, #0x00
      003135 98                   11155 	sbc	a, b
      003136 CB 7B                11156 	bit	7, e
      003138 28 07                11157 	jr	Z, 00255$
      00313A CB 7A                11158 	bit	7, d
      00313C 20 08                11159 	jr	NZ, 00256$
      00313E BF                   11160 	cp	a, a
      00313F 18 05                11161 	jr	00256$
      003141                      11162 00255$:
      003141 CB 7A                11163 	bit	7, d
      003143 28 01                11164 	jr	Z, 00256$
      003145 37                   11165 	scf
      003146                      11166 00256$:
      003146 38 32                11167 	jr	C, 00144$
                                  11168 ;src/main.c:1097: pickup.y -= yOverflow;
      003148 21rFDr00             11169 	ld	hl, #(_pickup + 3)
      00314B 2A                   11170 	ld	a, (hl+)
      00314C 4F                   11171 	ld	c, a
      00314D 46                   11172 	ld	b, (hl)
                                  11173 ;src/main.c:1124: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
                                  11174 ;src/main.c:1130: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      00314E CB 78                11175 	bit	7, b
      003150 20 28                11176 	jr	NZ, 00144$
      003152 58                   11177 	ld	e, b
      003153 16 00                11178 	ld	d, #0x00
      003155 3E 9B                11179 	ld	a, #0x9b
      003157 B9                   11180 	cp	a, c
      003158 3E 00                11181 	ld	a, #0x00
      00315A 98                   11182 	sbc	a, b
      00315B CB 7B                11183 	bit	7, e
      00315D 28 07                11184 	jr	Z, 00257$
      00315F CB 7A                11185 	bit	7, d
      003161 20 08                11186 	jr	NZ, 00258$
      003163 BF                   11187 	cp	a, a
      003164 18 05                11188 	jr	00258$
      003166                      11189 00257$:
      003166 CB 7A                11190 	bit	7, d
      003168 28 01                11191 	jr	Z, 00258$
      00316A 37                   11192 	scf
      00316B                      11193 00258$:
      00316B 38 0D                11194 	jr	C, 00144$
                                  11195 ;src/main.c:1131: pickup.visible = 1;
      00316D 21rFAr00             11196 	ld	hl, #_pickup
      003170 36 01                11197 	ld	(hl), #0x01
                                  11198 ;src/main.c:1132: set_sprite_tile(3, pickup.tile);
      003172 21r02r01             11199 	ld	hl, #(_pickup + 8)
      003175 4E                   11200 	ld	c, (hl)
                                  11201 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003176 21r0Er00             11202 	ld	hl, #(_shadow_OAM + 14)
      003179 71                   11203 	ld	(hl), c
                                  11204 ;src/main.c:1132: set_sprite_tile(3, pickup.tile);
      00317A                      11205 00144$:
                                  11206 ;src/main.c:1137: }
      00317A 33                   11207 	inc	sp
      00317B 33                   11208 	inc	sp
      00317C C9                   11209 	ret
                                  11210 ;src/main.c:1139: void tickEx() {
                                  11211 ;	---------------------------------
                                  11212 ; Function tickEx
                                  11213 ; ---------------------------------
      00317D                      11214 _tickEx::
      00317D E8 F4                11215 	add	sp, #-12
                                  11216 ;src/main.c:1140: for (uint8_t i = 0; i < exCount; ++i) {
      00317F F8 0B                11217 	ldhl	sp,	#11
      003181 36 00                11218 	ld	(hl), #0x00
      003183                      11219 00118$:
      003183 21rC5r0B             11220 	ld	hl, #_exCount
      003186 4E                   11221 	ld	c, (hl)
      003187 F8 0B                11222 	ldhl	sp,	#11
      003189 7E                   11223 	ld	a, (hl)
      00318A 91                   11224 	sub	a, c
      00318B D2r5Br33             11225 	jp	NC, 00120$
                                  11226 ;src/main.c:1141: if (explosions[i].visible) {
      00318E 4E                   11227 	ld	c, (hl)
      00318F 06 00                11228 	ld	b, #0x00
      003191 69                   11229 	ld	l, c
      003192 60                   11230 	ld	h, b
      003193 29                   11231 	add	hl, hl
      003194 09                   11232 	add	hl, bc
      003195 29                   11233 	add	hl, hl
      003196 01r03r01             11234 	ld	bc,#_explosions
      003199 09                   11235 	add	hl,bc
      00319A E5                   11236 	push	hl
      00319B 7D                   11237 	ld	a, l
      00319C F8 03                11238 	ldhl	sp,	#3
      00319E 77                   11239 	ld	(hl), a
      00319F E1                   11240 	pop	hl
      0031A0 7C                   11241 	ld	a, h
      0031A1 F8 02                11242 	ldhl	sp,	#2
      0031A3 32                   11243 	ld	(hl-), a
      0031A4 2A                   11244 	ld	a, (hl+)
      0031A5 5F                   11245 	ld	e, a
      0031A6 56                   11246 	ld	d, (hl)
      0031A7 1A                   11247 	ld	a, (de)
      0031A8 F8 0A                11248 	ldhl	sp,	#10
      0031AA 77                   11249 	ld	(hl), a
      0031AB 7E                   11250 	ld	a, (hl)
      0031AC B7                   11251 	or	a, a
      0031AD CAr55r33             11252 	jp	Z, 00119$
                                  11253 ;src/main.c:1143: explosions[i].x -= xOverflow;
      0031B0 F8 01                11254 	ldhl	sp,	#1
      0031B2 2A                   11255 	ld	a, (hl+)
      0031B3 4F                   11256 	ld	c, a
      0031B4 46                   11257 	ld	b, (hl)
      0031B5 03                   11258 	inc	bc
      0031B6 0A                   11259 	ld	a, (bc)
      0031B7 21rE9r00             11260 	ld	hl, #_xOverflow
      0031BA 5E                   11261 	ld	e, (hl)
      0031BB 93                   11262 	sub	a, e
      0031BC 02                   11263 	ld	(bc), a
                                  11264 ;src/main.c:1144: explosions[i].y -= yOverflow;
      0031BD F8 01                11265 	ldhl	sp,#1
      0031BF 2A                   11266 	ld	a, (hl+)
      0031C0 5F                   11267 	ld	e, a
      0031C1 56                   11268 	ld	d, (hl)
      0031C2 21 02 00             11269 	ld	hl, #0x0002
      0031C5 19                   11270 	add	hl, de
      0031C6 E5                   11271 	push	hl
      0031C7 7D                   11272 	ld	a, l
      0031C8 F8 09                11273 	ldhl	sp,	#9
      0031CA 77                   11274 	ld	(hl), a
      0031CB E1                   11275 	pop	hl
      0031CC 7C                   11276 	ld	a, h
      0031CD F8 08                11277 	ldhl	sp,	#8
      0031CF 32                   11278 	ld	(hl-), a
      0031D0 2A                   11279 	ld	a, (hl+)
      0031D1 5F                   11280 	ld	e, a
      0031D2 56                   11281 	ld	d, (hl)
      0031D3 1A                   11282 	ld	a, (de)
      0031D4 21rEBr00             11283 	ld	hl, #_yOverflow
      0031D7 5E                   11284 	ld	e, (hl)
      0031D8 93                   11285 	sub	a, e
      0031D9 F8 07                11286 	ldhl	sp,	#7
      0031DB F5                   11287 	push	af
      0031DC 2A                   11288 	ld	a,	(hl+)
      0031DD 66                   11289 	ld	h, (hl)
      0031DE 6F                   11290 	ld	l, a
      0031DF F1                   11291 	pop	af
      0031E0 77                   11292 	ld	(hl), a
                                  11293 ;src/main.c:1145: move_sprite(20 +i+i, explosions[i].x, explosions[i].y+8);
      0031E1 F8 07                11294 	ldhl	sp,#7
      0031E3 2A                   11295 	ld	a, (hl+)
      0031E4 5F                   11296 	ld	e, a
      0031E5 2A                   11297 	ld	a, (hl+)
      0031E6 57                   11298 	ld	d, a
      0031E7 1A                   11299 	ld	a, (de)
      0031E8 C6 08                11300 	add	a, #0x08
      0031EA 5F                   11301 	ld	e, a
      0031EB 0A                   11302 	ld	a, (bc)
      0031EC 22                   11303 	ld	(hl+), a
      0031ED 23                   11304 	inc	hl
      0031EE 3A                   11305 	ld	a, (hl-)
      0031EF 77                   11306 	ld	(hl), a
      0031F0 7E                   11307 	ld	a, (hl)
      0031F1 C6 14                11308 	add	a, #0x14
      0031F3 86                   11309 	add	a, (hl)
      0031F4 F8 03                11310 	ldhl	sp,	#3
      0031F6 77                   11311 	ld	(hl), a
      0031F7 56                   11312 	ld	d, (hl)
                                  11313 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0031F8 26 00                11314 	ld	h, #0x00
                                  11315 ;	spillPairReg hl
                                  11316 ;	spillPairReg hl
      0031FA 6A                   11317 	ld	l, d
      0031FB 29                   11318 	add	hl, hl
      0031FC 29                   11319 	add	hl, hl
      0031FD D5                   11320 	push	de
      0031FE 11r00r00             11321 	ld	de, #_shadow_OAM
      003201 19                   11322 	add	hl, de
      003202 D1                   11323 	pop	de
                                  11324 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003203 7B                   11325 	ld	a, e
      003204 22                   11326 	ld	(hl+), a
      003205 5D                   11327 	ld	e, l
      003206 54                   11328 	ld	d, h
      003207 F8 09                11329 	ldhl	sp,	#9
                                  11330 ;src/main.c:1146: move_sprite(21 +i+i, explosions[i].x+8, explosions[i].y+8);
      003209 3A                   11331 	ld	a, (hl-)
      00320A 2B                   11332 	dec	hl
      00320B 12                   11333 	ld	(de), a
      00320C 2A                   11334 	ld	a, (hl+)
      00320D 5F                   11335 	ld	e, a
      00320E 2A                   11336 	ld	a, (hl+)
      00320F 23                   11337 	inc	hl
      003210 57                   11338 	ld	d, a
      003211 1A                   11339 	ld	a, (de)
      003212 C6 08                11340 	add	a, #0x08
      003214 5F                   11341 	ld	e, a
      003215 0A                   11342 	ld	a, (bc)
      003216 C6 08                11343 	add	a, #0x08
      003218 4F                   11344 	ld	c, a
      003219 7E                   11345 	ld	a, (hl)
      00321A C6 15                11346 	add	a, #0x15
      00321C 86                   11347 	add	a, (hl)
      00321D 2B                   11348 	dec	hl
      00321E 77                   11349 	ld	(hl), a
                                  11350 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00321F 6E                   11351 	ld	l, (hl)
                                  11352 ;	spillPairReg hl
                                  11353 ;	spillPairReg hl
      003220 26 00                11354 	ld	h, #0x00
                                  11355 ;	spillPairReg hl
                                  11356 ;	spillPairReg hl
      003222 29                   11357 	add	hl, hl
      003223 29                   11358 	add	hl, hl
      003224 D5                   11359 	push	de
      003225 11r00r00             11360 	ld	de, #_shadow_OAM
      003228 19                   11361 	add	hl, de
      003229 D1                   11362 	pop	de
                                  11363 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00322A 7B                   11364 	ld	a, e
      00322B 22                   11365 	ld	(hl+), a
      00322C 71                   11366 	ld	(hl), c
                                  11367 ;src/main.c:1148: explosions[i].frameCounter++;
      00322D F8 01                11368 	ldhl	sp,#1
      00322F 2A                   11369 	ld	a, (hl+)
      003230 5F                   11370 	ld	e, a
      003231 56                   11371 	ld	d, (hl)
      003232 21 04 00             11372 	ld	hl, #0x0004
      003235 19                   11373 	add	hl, de
      003236 4D                   11374 	ld	c, l
      003237 44                   11375 	ld	b, h
      003238 0A                   11376 	ld	a, (bc)
      003239 3C                   11377 	inc	a
      00323A 02                   11378 	ld	(bc), a
                                  11379 ;src/main.c:1149: if (auxTick == 0) {
      00323B FAr07r01             11380 	ld	a, (#_auxTick)
      00323E B7                   11381 	or	a, a
      00323F C2r55r33             11382 	jp	NZ, 00119$
                                  11383 ;src/main.c:1150: if (explosions[i].frameCounter > EXPLFRAMETIME) {
      003242 0A                   11384 	ld	a, (bc)
      003243 5F                   11385 	ld	e, a
      003244 FArC6r0B             11386 	ld	a, (#_EXPLFRAMETIME)
      003247 93                   11387 	sub	a, e
      003248 D2r55r33             11388 	jp	NC, 00119$
                                  11389 ;src/main.c:1151: explosions[i].frameCounter = 0;
      00324B AF                   11390 	xor	a, a
      00324C 02                   11391 	ld	(bc), a
                                  11392 ;src/main.c:1152: explosions[i].frame += 1; 
      00324D F8 01                11393 	ldhl	sp,#1
      00324F 2A                   11394 	ld	a, (hl+)
      003250 5F                   11395 	ld	e, a
      003251 56                   11396 	ld	d, (hl)
      003252 21 03 00             11397 	ld	hl, #0x0003
      003255 19                   11398 	add	hl, de
      003256 E5                   11399 	push	hl
      003257 7D                   11400 	ld	a, l
      003258 F8 06                11401 	ldhl	sp,	#6
      00325A 77                   11402 	ld	(hl), a
      00325B E1                   11403 	pop	hl
      00325C 7C                   11404 	ld	a, h
      00325D F8 05                11405 	ldhl	sp,	#5
      00325F 32                   11406 	ld	(hl-), a
      003260 2A                   11407 	ld	a, (hl+)
      003261 5F                   11408 	ld	e, a
      003262 56                   11409 	ld	d, (hl)
      003263 1A                   11410 	ld	a, (de)
      003264 4F                   11411 	ld	c, a
      003265 0C                   11412 	inc	c
      003266 3A                   11413 	ld	a, (hl-)
      003267 6E                   11414 	ld	l, (hl)
      003268 67                   11415 	ld	h, a
      003269 71                   11416 	ld	(hl), c
                                  11417 ;src/main.c:1153: if (explosions[i].frame > 3) {
      00326A F8 04                11418 	ldhl	sp,#4
      00326C 2A                   11419 	ld	a, (hl+)
      00326D 5F                   11420 	ld	e, a
      00326E 56                   11421 	ld	d, (hl)
      00326F 1A                   11422 	ld	a, (de)
      003270 4F                   11423 	ld	c, a
      003271 3E 03                11424 	ld	a, #0x03
      003273 91                   11425 	sub	a, c
      003274 30 2A                11426 	jr	NC, 00102$
                                  11427 ;src/main.c:1154: explosions[i].visible = 0;
      003276 F8 01                11428 	ldhl	sp,	#1
      003278 2A                   11429 	ld	a,	(hl+)
      003279 66                   11430 	ld	h, (hl)
      00327A 6F                   11431 	ld	l, a
      00327B 36 00                11432 	ld	(hl), #0x00
                                  11433 ;src/main.c:1155: set_sprite_tile(20 + i+i, 0x7f);
      00327D F8 03                11434 	ldhl	sp,	#3
      00327F 4E                   11435 	ld	c, (hl)
                                  11436 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003280 26 00                11437 	ld	h, #0x00
                                  11438 ;	spillPairReg hl
                                  11439 ;	spillPairReg hl
      003282 69                   11440 	ld	l, c
      003283 29                   11441 	add	hl, hl
      003284 29                   11442 	add	hl, hl
      003285 11r00r00             11443 	ld	de, #_shadow_OAM
      003288 19                   11444 	add	hl, de
      003289 23                   11445 	inc	hl
      00328A 23                   11446 	inc	hl
      00328B 36 7F                11447 	ld	(hl), #0x7f
                                  11448 ;src/main.c:1156: set_sprite_tile(21 + i+i, 0x7f);
      00328D F8 09                11449 	ldhl	sp,	#9
      00328F 4E                   11450 	ld	c, (hl)
                                  11451 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003290 26 00                11452 	ld	h, #0x00
                                  11453 ;	spillPairReg hl
                                  11454 ;	spillPairReg hl
      003292 69                   11455 	ld	l, c
      003293 29                   11456 	add	hl, hl
      003294 29                   11457 	add	hl, hl
      003295 11r00r00             11458 	ld	de, #_shadow_OAM
      003298 19                   11459 	add	hl, de
      003299 23                   11460 	inc	hl
      00329A 23                   11461 	inc	hl
      00329B 36 7F                11462 	ld	(hl), #0x7f
                                  11463 ;src/main.c:1156: set_sprite_tile(21 + i+i, 0x7f);
      00329D C3r55r33             11464 	jp	00119$
      0032A0                      11465 00102$:
                                  11466 ;src/main.c:1159: set_sprite_tile(20 + i+i, explosions[i].tile + (explosions[i].frame *4));
      0032A0 F8 01                11467 	ldhl	sp,#1
      0032A2 2A                   11468 	ld	a, (hl+)
      0032A3 5F                   11469 	ld	e, a
      0032A4 56                   11470 	ld	d, (hl)
      0032A5 21 05 00             11471 	ld	hl, #0x0005
      0032A8 19                   11472 	add	hl, de
      0032A9 E5                   11473 	push	hl
      0032AA 7D                   11474 	ld	a, l
      0032AB F8 08                11475 	ldhl	sp,	#8
      0032AD 77                   11476 	ld	(hl), a
      0032AE E1                   11477 	pop	hl
      0032AF 7C                   11478 	ld	a, h
      0032B0 F8 07                11479 	ldhl	sp,	#7
      0032B2 32                   11480 	ld	(hl-), a
      0032B3 2A                   11481 	ld	a, (hl+)
      0032B4 5F                   11482 	ld	e, a
      0032B5 56                   11483 	ld	d, (hl)
      0032B6 1A                   11484 	ld	a, (de)
      0032B7 F8 0A                11485 	ldhl	sp,	#10
      0032B9 32                   11486 	ld	(hl-), a
      0032BA 2B                   11487 	dec	hl
      0032BB 71                   11488 	ld	(hl), c
      0032BC CB 26                11489 	sla	(hl)
      0032BE CB 26                11490 	sla	(hl)
      0032C0 23                   11491 	inc	hl
      0032C1 23                   11492 	inc	hl
      0032C2 3A                   11493 	ld	a, (hl-)
      0032C3 2B                   11494 	dec	hl
      0032C4 86                   11495 	add	a, (hl)
      0032C5 23                   11496 	inc	hl
      0032C6 23                   11497 	inc	hl
      0032C7 77                   11498 	ld	(hl), a
      0032C8 F8 03                11499 	ldhl	sp,	#3
                                  11500 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0032CA 3A                   11501 	ld	a, (hl-)
      0032CB 22                   11502 	ld	(hl+), a
      0032CC 36 00                11503 	ld	(hl), #0x00
      0032CE 3E 02                11504 	ld	a, #0x02
      0032D0                      11505 00153$:
      0032D0 F8 02                11506 	ldhl	sp,	#2
      0032D2 CB 26                11507 	sla	(hl)
      0032D4 23                   11508 	inc	hl
      0032D5 CB 16                11509 	rl	(hl)
      0032D7 3D                   11510 	dec	a
      0032D8 20 F6                11511 	jr	NZ, 00153$
      0032DA 11r00r00             11512 	ld	de, #_shadow_OAM
      0032DD 3A                   11513 	ld	a, (hl-)
      0032DE 6E                   11514 	ld	l, (hl)
      0032DF 67                   11515 	ld	h, a
      0032E0 19                   11516 	add	hl, de
      0032E1 33                   11517 	inc	sp
      0032E2 33                   11518 	inc	sp
      0032E3 5D                   11519 	ld	e, l
      0032E4 54                   11520 	ld	d, h
      0032E5 D5                   11521 	push	de
      0032E6 21 02 00             11522 	ld	hl, #0x0002
      0032E9 19                   11523 	add	hl, de
      0032EA E5                   11524 	push	hl
      0032EB 7D                   11525 	ld	a, l
      0032EC F8 04                11526 	ldhl	sp,	#4
      0032EE 77                   11527 	ld	(hl), a
      0032EF E1                   11528 	pop	hl
      0032F0 7C                   11529 	ld	a, h
      0032F1 F8 03                11530 	ldhl	sp,	#3
      0032F3 32                   11531 	ld	(hl-), a
      0032F4 2A                   11532 	ld	a, (hl+)
      0032F5 5F                   11533 	ld	e, a
      0032F6 56                   11534 	ld	d, (hl)
      0032F7 F8 0A                11535 	ldhl	sp,	#10
      0032F9 7E                   11536 	ld	a, (hl)
      0032FA 12                   11537 	ld	(de), a
                                  11538 ;src/main.c:1160: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      0032FB F8 06                11539 	ldhl	sp,#6
      0032FD 2A                   11540 	ld	a, (hl+)
      0032FE 5F                   11541 	ld	e, a
      0032FF 56                   11542 	ld	d, (hl)
      003300 1A                   11543 	ld	a, (de)
      003301 F8 0A                11544 	ldhl	sp,	#10
      003303 77                   11545 	ld	(hl), a
      003304 F8 04                11546 	ldhl	sp,#4
      003306 2A                   11547 	ld	a, (hl+)
      003307 5F                   11548 	ld	e, a
      003308 56                   11549 	ld	d, (hl)
      003309 1A                   11550 	ld	a, (de)
      00330A F8 08                11551 	ldhl	sp,	#8
      00330C 77                   11552 	ld	(hl), a
      00330D CB 26                11553 	sla	(hl)
      00330F CB 26                11554 	sla	(hl)
      003311 23                   11555 	inc	hl
      003312 23                   11556 	inc	hl
      003313 3A                   11557 	ld	a, (hl-)
      003314 2B                   11558 	dec	hl
      003315 86                   11559 	add	a, (hl)
      003316 23                   11560 	inc	hl
      003317 23                   11561 	inc	hl
      003318 77                   11562 	ld	(hl), a
      003319 34                   11563 	inc	(hl)
      00331A 34                   11564 	inc	(hl)
      00331B 2B                   11565 	dec	hl
                                  11566 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00331C 3A                   11567 	ld	a, (hl-)
      00331D 22                   11568 	ld	(hl+), a
      00331E 36 00                11569 	ld	(hl), #0x00
      003320 3E 02                11570 	ld	a, #0x02
      003322                      11571 00154$:
      003322 F8 08                11572 	ldhl	sp,	#8
      003324 CB 26                11573 	sla	(hl)
      003326 23                   11574 	inc	hl
      003327 CB 16                11575 	rl	(hl)
      003329 3D                   11576 	dec	a
      00332A 20 F6                11577 	jr	NZ, 00154$
      00332C 2B                   11578 	dec	hl
      00332D 2A                   11579 	ld	a, (hl+)
      00332E 5F                   11580 	ld	e, a
      00332F 56                   11581 	ld	d, (hl)
      003330 21r00r00             11582 	ld	hl, #_shadow_OAM
      003333 19                   11583 	add	hl, de
      003334 E5                   11584 	push	hl
      003335 7D                   11585 	ld	a, l
      003336 F8 08                11586 	ldhl	sp,	#8
      003338 77                   11587 	ld	(hl), a
      003339 E1                   11588 	pop	hl
      00333A 7C                   11589 	ld	a, h
      00333B F8 07                11590 	ldhl	sp,	#7
      00333D 32                   11591 	ld	(hl-), a
      00333E 2A                   11592 	ld	a, (hl+)
      00333F 5F                   11593 	ld	e, a
      003340 56                   11594 	ld	d, (hl)
      003341 21 02 00             11595 	ld	hl, #0x0002
      003344 19                   11596 	add	hl, de
      003345 E5                   11597 	push	hl
      003346 7D                   11598 	ld	a, l
      003347 F8 0A                11599 	ldhl	sp,	#10
      003349 77                   11600 	ld	(hl), a
      00334A E1                   11601 	pop	hl
      00334B 7C                   11602 	ld	a, h
      00334C F8 09                11603 	ldhl	sp,	#9
      00334E 32                   11604 	ld	(hl-), a
      00334F 2A                   11605 	ld	a, (hl+)
      003350 5F                   11606 	ld	e, a
      003351 2A                   11607 	ld	a, (hl+)
      003352 57                   11608 	ld	d, a
      003353 7E                   11609 	ld	a, (hl)
      003354 12                   11610 	ld	(de), a
                                  11611 ;src/main.c:1160: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      003355                      11612 00119$:
                                  11613 ;src/main.c:1140: for (uint8_t i = 0; i < exCount; ++i) {
      003355 F8 0B                11614 	ldhl	sp,	#11
      003357 34                   11615 	inc	(hl)
      003358 C3r83r31             11616 	jp	00118$
      00335B                      11617 00120$:
                                  11618 ;src/main.c:1166: }
      00335B E8 0C                11619 	add	sp, #12
      00335D C9                   11620 	ret
                                  11621 ;src/main.c:1168: void initEnemyOptions() {
                                  11622 ;	---------------------------------
                                  11623 ; Function initEnemyOptions
                                  11624 ; ---------------------------------
      00335E                      11625 _initEnemyOptions::
                                  11626 ;src/main.c:1169: enemyOptions[0] = blob;
      00335E 11 12 00             11627 	ld	de, #0x0012
      003361 D5                   11628 	push	de
      003362 11r58r00             11629 	ld	de, #_blob
      003365 D5                   11630 	push	de
      003366 11r00r00             11631 	ld	de, #_enemyOptions
      003369 D5                   11632 	push	de
      00336A CDr00r00             11633 	call	___memcpy
      00336D E8 06                11634 	add	sp, #6
                                  11635 ;src/main.c:1170: enemyOptions[1] = bomb;
      00336F 11 12 00             11636 	ld	de, #0x0012
      003372 D5                   11637 	push	de
      003373 11r6Ar00             11638 	ld	de, #_bomb
      003376 D5                   11639 	push	de
      003377 11r12r00             11640 	ld	de, #(_enemyOptions + 18)
      00337A D5                   11641 	push	de
      00337B CDr00r00             11642 	call	___memcpy
      00337E E8 06                11643 	add	sp, #6
                                  11644 ;src/main.c:1171: enemyOptions[2] = miniship;
      003380 11 12 00             11645 	ld	de, #0x0012
      003383 D5                   11646 	push	de
      003384 11r7Cr00             11647 	ld	de, #_miniship
      003387 D5                   11648 	push	de
      003388 11r24r00             11649 	ld	de, #(_enemyOptions + 36)
      00338B D5                   11650 	push	de
      00338C CDr00r00             11651 	call	___memcpy
      00338F E8 06                11652 	add	sp, #6
                                  11653 ;src/main.c:1172: enemyOptions[3] = shieldship;
      003391 11 12 00             11654 	ld	de, #0x0012
      003394 D5                   11655 	push	de
      003395 11rA0r00             11656 	ld	de, #_shieldship
      003398 D5                   11657 	push	de
      003399 11r36r00             11658 	ld	de, #(_enemyOptions + 54)
      00339C D5                   11659 	push	de
      00339D CDr00r00             11660 	call	___memcpy
      0033A0 E8 06                11661 	add	sp, #6
                                  11662 ;src/main.c:1174: enemyOptions[4] = bigblob;
      0033A2 11 12 00             11663 	ld	de, #0x0012
      0033A5 D5                   11664 	push	de
      0033A6 11r8Er00             11665 	ld	de, #_bigblob
      0033A9 D5                   11666 	push	de
      0033AA 11r48r00             11667 	ld	de, #(_enemyOptions + 72)
      0033AD D5                   11668 	push	de
      0033AE CDr00r00             11669 	call	___memcpy
      0033B1 E8 06                11670 	add	sp, #6
                                  11671 ;src/main.c:1175: }
      0033B3 C9                   11672 	ret
                                  11673 ;src/main.c:1178: void initProjectiles() {
                                  11674 ;	---------------------------------
                                  11675 ; Function initProjectiles
                                  11676 ; ---------------------------------
      0033B4                      11677 _initProjectiles::
                                  11678 ;src/main.c:1179: set_sprite_data(0x20, 17, ProjectileTiles); 
      0033B4 11rE8r05             11679 	ld	de, #_ProjectileTiles
      0033B7 D5                   11680 	push	de
      0033B8 21 20 11             11681 	ld	hl, #0x1120
      0033BB E5                   11682 	push	hl
      0033BC CDr00r00             11683 	call	_set_sprite_data
      0033BF E8 04                11684 	add	sp, #4
                                  11685 ;src/main.c:1181: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0033C1 AF                   11686 	xor	a, a
      0033C2                      11687 00103$:
      0033C2 21rBFr0B             11688 	ld	hl, #_PROJECTILECOUNT
      0033C5 4E                   11689 	ld	c, (hl)
      0033C6 B9                   11690 	cp	a, c
      0033C7 D0                   11691 	ret	NC
      0033C8 3C                   11692 	inc	a
                                  11693 ;src/main.c:1185: }
      0033C9 18 F7                11694 	jr	00103$
                                  11695 ;src/main.c:1187: void initGame() {
                                  11696 ;	---------------------------------
                                  11697 ; Function initGame
                                  11698 ; ---------------------------------
      0033CB                      11699 _initGame::
                                  11700 ;src/main.c:1188: HIDE_SPRITES;
      0033CB F0r00                11701 	ldh	a, (_LCDC_REG + 0)
      0033CD E6 FD                11702 	and	a, #0xfd
      0033CF E0r00                11703 	ldh	(_LCDC_REG + 0), a
                                  11704 ;src/main.c:1189: HIDE_WIN;
      0033D1 F0r00                11705 	ldh	a, (_LCDC_REG + 0)
      0033D3 E6 DF                11706 	and	a, #0xdf
      0033D5 E0r00                11707 	ldh	(_LCDC_REG + 0), a
                                  11708 ;src/main.c:1190: HIDE_BKG;
      0033D7 F0r00                11709 	ldh	a, (_LCDC_REG + 0)
      0033D9 E6 FE                11710 	and	a, #0xfe
      0033DB E0r00                11711 	ldh	(_LCDC_REG + 0), a
                                  11712 ;src/main.c:1193: STAT_REG = 0x45;
      0033DD 3E 45                11713 	ld	a, #0x45
      0033DF E0r00                11714 	ldh	(_STAT_REG + 0), a
                                  11715 ;src/main.c:1194: LYC_REG = 0x7e; //line 126
      0033E1 3E 7E                11716 	ld	a, #0x7e
      0033E3 E0r00                11717 	ldh	(_LYC_REG + 0), a
                                  11718 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0033E5 F3                   11719 	di
                                  11720 ;src/main.c:1196: add_LCD(interruptLCD);
      0033E6 11r00r00             11721 	ld	de, #_interruptLCD
      0033E9 D5                   11722 	push	de
      0033EA CDr00r00             11723 	call	_add_LCD
      0033ED 33                   11724 	inc	sp
      0033EE 33                   11725 	inc	sp
                                  11726 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      0033EF FB                   11727 	ei
                                  11728 ;src/main.c:1198: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      0033F0 3E 03                11729 	ld	a, #0x03
      0033F2 F5                   11730 	push	af
      0033F3 33                   11731 	inc	sp
      0033F4 CDr00r00             11732 	call	_set_interrupts
      0033F7 33                   11733 	inc	sp
                                  11734 ;src/main.c:1200: xDir = 0;
      0033F8 21rDBr00             11735 	ld	hl, #_xDir
      0033FB 36 00                11736 	ld	(hl), #0x00
                                  11737 ;src/main.c:1201: yDir = -1;
      0033FD 21rDCr00             11738 	ld	hl, #_yDir
      003400 36 FF                11739 	ld	(hl), #0xff
                                  11740 ;src/main.c:1202: xSpeed = 0;
      003402 21rDDr00             11741 	ld	hl, #_xSpeed
      003405 36 00                11742 	ld	(hl), #0x00
                                  11743 ;src/main.c:1203: ySpeed = 0;
      003407 21rDEr00             11744 	ld	hl, #_ySpeed
      00340A 36 00                11745 	ld	(hl), #0x00
                                  11746 ;src/main.c:1206: playerX = 80<<5;
      00340C 21rDFr00             11747 	ld	hl, #_playerX
      00340F 36 00                11748 	ld	(hl), #0x00
      003411 23                   11749 	inc	hl
      003412 36 0A                11750 	ld	(hl), #0x0a
                                  11751 ;src/main.c:1207: playerY = 80<<5;
      003414 21rE1r00             11752 	ld	hl, #_playerY
      003417 36 00                11753 	ld	(hl), #0x00
      003419 23                   11754 	inc	hl
      00341A 36 0A                11755 	ld	(hl), #0x0a
                                  11756 ;src/main.c:1209: playerDrawX = 80;
      00341C 21rE3r00             11757 	ld	hl, #_playerDrawX
      00341F 36 50                11758 	ld	(hl), #0x50
                                  11759 ;src/main.c:1210: playerDrawY = 80;
      003421 21rE4r00             11760 	ld	hl, #_playerDrawY
      003424 36 50                11761 	ld	(hl), #0x50
                                  11762 ;src/main.c:1213: bgX = 0;
      003426 AF                   11763 	xor	a, a
      003427 21rE5r00             11764 	ld	hl, #_bgX
      00342A 22                   11765 	ld	(hl+), a
      00342B 77                   11766 	ld	(hl), a
                                  11767 ;src/main.c:1214: bgY = 0;
      00342C AF                   11768 	xor	a, a
      00342D 21rE7r00             11769 	ld	hl, #_bgY
      003430 22                   11770 	ld	(hl+), a
      003431 77                   11771 	ld	(hl), a
                                  11772 ;src/main.c:1216: hull = maxHull;
      003432 FArC1r0B             11773 	ld	a, (#_maxHull)
      003435 EArF6r00             11774 	ld	(#_hull),a
                                  11775 ;src/main.c:1217: shield = maxShield;
      003438 FArC2r0B             11776 	ld	a, (#_maxShield)
      00343B EArF7r00             11777 	ld	(#_shield),a
                                  11778 ;src/main.c:1219: DISPLAY_ON;
      00343E F0r00                11779 	ldh	a, (_LCDC_REG + 0)
      003440 F6 80                11780 	or	a, #0x80
      003442 E0r00                11781 	ldh	(_LCDC_REG + 0), a
                                  11782 ;src/main.c:1220: SPRITES_8x16;
      003444 F0r00                11783 	ldh	a, (_LCDC_REG + 0)
      003446 F6 04                11784 	or	a, #0x04
      003448 E0r00                11785 	ldh	(_LCDC_REG + 0), a
                                  11786 ;src/main.c:1221: set_sprite_data(0, 12, Player1);
      00344A 11r83r07             11787 	ld	de, #_Player1
      00344D D5                   11788 	push	de
      00344E 21 00 0C             11789 	ld	hl, #0xc00
      003451 E5                   11790 	push	hl
      003452 CDr00r00             11791 	call	_set_sprite_data
      003455 E8 04                11792 	add	sp, #4
                                  11793 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003457 21r02r00             11794 	ld	hl, #(_shadow_OAM + 2)
      00345A 36 00                11795 	ld	(hl), #0x00
      00345C 21r06r00             11796 	ld	hl, #(_shadow_OAM + 6)
      00345F 36 02                11797 	ld	(hl), #0x02
                                  11798 ;src/main.c:1229: set_win_tiles(1,0,4,1,hullabel);
      003461 11r00r00             11799 	ld	de, #_hullabel
      003464 D5                   11800 	push	de
      003465 21 04 01             11801 	ld	hl, #0x104
      003468 E5                   11802 	push	hl
      003469 21 01 00             11803 	ld	hl, #0x01
      00346C E5                   11804 	push	hl
      00346D CDr00r00             11805 	call	_set_win_tiles
      003470 E8 06                11806 	add	sp, #6
                                  11807 ;src/main.c:1230: set_win_tiles(1,1,4,1,shieldlabel);
      003472 11r04r00             11808 	ld	de, #_shieldlabel
      003475 D5                   11809 	push	de
      003476 21 04 01             11810 	ld	hl, #0x104
      003479 E5                   11811 	push	hl
      00347A 21 01 01             11812 	ld	hl, #0x101
      00347D E5                   11813 	push	hl
      00347E CDr00r00             11814 	call	_set_win_tiles
      003481 E8 06                11815 	add	sp, #6
                                  11816 ;src/main.c:1235: set_bkg_data(0x50,1,healthblock);
      003483 11r07r05             11817 	ld	de, #_healthblock
      003486 D5                   11818 	push	de
      003487 21 50 01             11819 	ld	hl, #0x150
      00348A E5                   11820 	push	hl
      00348B CDr00r00             11821 	call	_set_bkg_data
      00348E E8 04                11822 	add	sp, #4
                                  11823 ;src/main.c:1237: setHealthBar(0, hull);
      003490 FArF6r00             11824 	ld	a, (#_hull)
      003493 67                   11825 	ld	h, a
      003494 2E 00                11826 	ld	l, #0x00
      003496 E5                   11827 	push	hl
      003497 CDrC9r0B             11828 	call	_setHealthBar
      00349A E1                   11829 	pop	hl
                                  11830 ;src/main.c:1238: setHealthBar(1, shield);
      00349B FArF7r00             11831 	ld	a, (#_shield)
      00349E 67                   11832 	ld	h, a
      00349F 2E 01                11833 	ld	l, #0x01
      0034A1 E5                   11834 	push	hl
      0034A2 CDrC9r0B             11835 	call	_setHealthBar
      0034A5 E1                   11836 	pop	hl
                                  11837 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      0034A6 3E 07                11838 	ld	a, #0x07
      0034A8 E0r00                11839 	ldh	(_WX_REG + 0), a
      0034AA 3E 7E                11840 	ld	a, #0x7e
      0034AC E0r00                11841 	ldh	(_WY_REG + 0), a
                                  11842 ;src/main.c:1245: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      0034AE 11r87r04             11843 	ld	de, #_backgroundtiles
      0034B1 D5                   11844 	push	de
      0034B2 21 25 08             11845 	ld	hl, #0x825
      0034B5 E5                   11846 	push	hl
      0034B6 CDr00r00             11847 	call	_set_bkg_data
      0034B9 E8 04                11848 	add	sp, #4
                                  11849 ;src/main.c:1246: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      0034BB 11r87r00             11850 	ld	de, #_background1
      0034BE D5                   11851 	push	de
      0034BF 21 20 20             11852 	ld	hl, #0x2020
      0034C2 E5                   11853 	push	hl
      0034C3 AF                   11854 	xor	a, a
      0034C4 0F                   11855 	rrca
      0034C5 F5                   11856 	push	af
      0034C6 CDr00r00             11857 	call	_set_bkg_tiles
      0034C9 E8 06                11858 	add	sp, #6
                                  11859 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0034CB AF                   11860 	xor	a, a
      0034CC E0r00                11861 	ldh	(_SCX_REG + 0), a
      0034CE AF                   11862 	xor	a, a
      0034CF E0r00                11863 	ldh	(_SCY_REG + 0), a
                                  11864 ;src/main.c:1252: set_bkg_data(0x51, 18, ProjectileTiles);
      0034D1 11rE8r05             11865 	ld	de, #_ProjectileTiles
      0034D4 D5                   11866 	push	de
      0034D5 21 51 12             11867 	ld	hl, #0x1251
      0034D8 E5                   11868 	push	hl
      0034D9 CDr00r00             11869 	call	_set_bkg_data
      0034DC E8 04                11870 	add	sp, #4
                                  11871 ;src/main.c:1254: set_win_tiles(10, 0,4,1,weaponlabel);
      0034DE 11r08r00             11872 	ld	de, #_weaponlabel
      0034E1 D5                   11873 	push	de
      0034E2 21 04 01             11874 	ld	hl, #0x104
      0034E5 E5                   11875 	push	hl
      0034E6 21 0A 00             11876 	ld	hl, #0x0a
      0034E9 E5                   11877 	push	hl
      0034EA CDr00r00             11878 	call	_set_win_tiles
      0034ED E8 06                11879 	add	sp, #6
                                  11880 ;src/main.c:1255: set_win_tiles(10, 1,4,1,scorelabel);
      0034EF 11r0Cr00             11881 	ld	de, #_scorelabel
      0034F2 D5                   11882 	push	de
      0034F3 21 04 01             11883 	ld	hl, #0x104
      0034F6 E5                   11884 	push	hl
      0034F7 21 0A 01             11885 	ld	hl, #0x10a
      0034FA E5                   11886 	push	hl
      0034FB CDr00r00             11887 	call	_set_win_tiles
      0034FE E8 06                11888 	add	sp, #6
                                  11889 ;src/main.c:1257: setGunIcon();
      003500 CDrE1r27             11890 	call	_setGunIcon
                                  11891 ;src/main.c:1259: SCORE = MAKE_BCD(00000);
      003503 AF                   11892 	xor	a, a
      003504 21rFBr00             11893 	ld	hl, #_SCORE
      003507 22                   11894 	ld	(hl+), a
      003508 22                   11895 	ld	(hl+), a
      003509 22                   11896 	ld	(hl+), a
      00350A 77                   11897 	ld	(hl), a
                                  11898 ;src/main.c:1260: updateScore();
      00350B CDrDAr0C             11899 	call	_updateScore
                                  11900 ;src/main.c:1261: missiles = 0;
      00350E 21rF0r00             11901 	ld	hl, #_missiles
      003511 36 00                11902 	ld	(hl), #0x00
                                  11903 ;src/main.c:1262: MISSILES = MAKE_BCD(0);
      003513 AF                   11904 	xor	a, a
      003514 21rF1r00             11905 	ld	hl, #_MISSILES
      003517 22                   11906 	ld	(hl+), a
      003518 22                   11907 	ld	(hl+), a
      003519 22                   11908 	ld	(hl+), a
      00351A 77                   11909 	ld	(hl), a
                                  11910 ;src/main.c:1263: updateMissileCount(0);
      00351B AF                   11911 	xor	a, a
      00351C F5                   11912 	push	af
      00351D 33                   11913 	inc	sp
      00351E CDr04r0D             11914 	call	_updateMissileCount
      003521 33                   11915 	inc	sp
                                  11916 ;src/main.c:1264: set_win_tiles(17, 0,1,1,gunMap+2);
      003522 11rF8r00             11917 	ld	de, #(_gunMap + 2)
      003525 D5                   11918 	push	de
      003526 21 01 01             11919 	ld	hl, #0x101
      003529 E5                   11920 	push	hl
      00352A 21 11 00             11921 	ld	hl, #0x11
      00352D E5                   11922 	push	hl
      00352E CDr00r00             11923 	call	_set_win_tiles
      003531 E8 06                11924 	add	sp, #6
                                  11925 ;src/main.c:1268: pickup = upgrade;//upgrade;
      003533 11 09 00             11926 	ld	de, #0x0009
      003536 D5                   11927 	push	de
      003537 11r08r07             11928 	ld	de, #_upgrade
      00353A D5                   11929 	push	de
      00353B 11rFAr00             11930 	ld	de, #_pickup
      00353E D5                   11931 	push	de
      00353F CDr00r00             11932 	call	___memcpy
      003542 E8 06                11933 	add	sp, #6
                                  11934 ;src/main.c:1270: set_sprite_data(0x70, 6, Pickups);
      003544 11r23r07             11935 	ld	de, #_Pickups
      003547 D5                   11936 	push	de
      003548 21 70 06             11937 	ld	hl, #0x670
      00354B E5                   11938 	push	hl
      00354C CDr00r00             11939 	call	_set_sprite_data
      00354F E8 04                11940 	add	sp, #4
                                  11941 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003551 21r0Er00             11942 	ld	hl, #(_shadow_OAM + 14)
      003554 36 7F                11943 	ld	(hl), #0x7f
                                  11944 ;src/main.c:1272: move_sprite(3, pickup.x + 4, pickup.y + 12);
      003556 FArFDr00             11945 	ld	a, (#(_pickup + 3) + 0)
      003559 C6 0C                11946 	add	a, #0x0c
      00355B 47                   11947 	ld	b, a
      00355C FArFBr00             11948 	ld	a, (#(_pickup + 1) + 0)
      00355F C6 04                11949 	add	a, #0x04
      003561 4F                   11950 	ld	c, a
                                  11951 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003562 21r0Cr00             11952 	ld	hl, #(_shadow_OAM + 12)
                                  11953 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003565 78                   11954 	ld	a, b
      003566 22                   11955 	ld	(hl+), a
      003567 71                   11956 	ld	(hl), c
                                  11957 ;src/main.c:1274: for (uint8_t i = 0; i<exCount; ++i) {
      003568 0E 00                11958 	ld	c, #0x00
      00356A                      11959 00111$:
      00356A 21rC5r0B             11960 	ld	hl, #_exCount
      00356D 46                   11961 	ld	b, (hl)
      00356E 79                   11962 	ld	a, c
      00356F 90                   11963 	sub	a, b
      003570 30 1E                11964 	jr	NC, 00101$
                                  11965 ;src/main.c:1275: explosions[i] = ex;
      003572 06 00                11966 	ld	b, #0x00
      003574 69                   11967 	ld	l, c
      003575 60                   11968 	ld	h, b
      003576 29                   11969 	add	hl, hl
      003577 09                   11970 	add	hl, bc
      003578 29                   11971 	add	hl, hl
      003579 11r03r01             11972 	ld	de, #_explosions
      00357C 19                   11973 	add	hl, de
      00357D C5                   11974 	push	bc
      00357E 11 06 00             11975 	ld	de, #0x0006
      003581 D5                   11976 	push	de
      003582 11r83r08             11977 	ld	de, #_ex
      003585 D5                   11978 	push	de
      003586 E5                   11979 	push	hl
      003587 CDr00r00             11980 	call	___memcpy
      00358A E8 06                11981 	add	sp, #6
      00358C C1                   11982 	pop	bc
                                  11983 ;src/main.c:1274: for (uint8_t i = 0; i<exCount; ++i) {
      00358D 0C                   11984 	inc	c
      00358E 18 DA                11985 	jr	00111$
      003590                      11986 00101$:
                                  11987 ;src/main.c:1277: set_sprite_data(exTiles[0], 16, Ex1);
      003590 FAr04r01             11988 	ld	a, (#_exTiles + 0)
      003593 11r89r08             11989 	ld	de, #_Ex1
      003596 D5                   11990 	push	de
      003597 26 10                11991 	ld	h, #0x10
                                  11992 ;	spillPairReg hl
                                  11993 ;	spillPairReg hl
      003599 E5                   11994 	push	hl
      00359A 33                   11995 	inc	sp
      00359B F5                   11996 	push	af
      00359C 33                   11997 	inc	sp
      00359D CDr00r00             11998 	call	_set_sprite_data
      0035A0 E8 04                11999 	add	sp, #4
                                  12000 ;src/main.c:1278: set_sprite_data(exTiles[1], 16, Ex2);
      0035A2 FAr05r01             12001 	ld	a, (#(_exTiles + 1) + 0)
      0035A5 11r89r09             12002 	ld	de, #_Ex2
      0035A8 D5                   12003 	push	de
      0035A9 26 10                12004 	ld	h, #0x10
                                  12005 ;	spillPairReg hl
                                  12006 ;	spillPairReg hl
      0035AB E5                   12007 	push	hl
      0035AC 33                   12008 	inc	sp
      0035AD F5                   12009 	push	af
      0035AE 33                   12010 	inc	sp
      0035AF CDr00r00             12011 	call	_set_sprite_data
      0035B2 E8 04                12012 	add	sp, #4
                                  12013 ;src/main.c:1279: set_sprite_data(exTiles[2], 16, Ex3);
      0035B4 FAr06r01             12014 	ld	a, (#(_exTiles + 2) + 0)
      0035B7 11r89r0A             12015 	ld	de, #_Ex3
      0035BA D5                   12016 	push	de
      0035BB 26 10                12017 	ld	h, #0x10
                                  12018 ;	spillPairReg hl
                                  12019 ;	spillPairReg hl
      0035BD E5                   12020 	push	hl
      0035BE 33                   12021 	inc	sp
      0035BF F5                   12022 	push	af
      0035C0 33                   12023 	inc	sp
      0035C1 CDr00r00             12024 	call	_set_sprite_data
      0035C4 E8 04                12025 	add	sp, #4
                                  12026 ;src/main.c:1282: SHOW_SPRITES;
      0035C6 F0r00                12027 	ldh	a, (_LCDC_REG + 0)
      0035C8 F6 02                12028 	or	a, #0x02
      0035CA E0r00                12029 	ldh	(_LCDC_REG + 0), a
                                  12030 ;src/main.c:1283: SHOW_WIN;
      0035CC F0r00                12031 	ldh	a, (_LCDC_REG + 0)
      0035CE F6 20                12032 	or	a, #0x20
      0035D0 E0r00                12033 	ldh	(_LCDC_REG + 0), a
                                  12034 ;src/main.c:1284: SHOW_BKG;
      0035D2 F0r00                12035 	ldh	a, (_LCDC_REG + 0)
      0035D4 F6 01                12036 	or	a, #0x01
      0035D6 E0r00                12037 	ldh	(_LCDC_REG + 0), a
                                  12038 ;src/main.c:1286: }
      0035D8 C9                   12039 	ret
                                  12040 ;src/main.c:1291: void showScoreScreen() {
                                  12041 ;	---------------------------------
                                  12042 ; Function showScoreScreen
                                  12043 ; ---------------------------------
      0035D9                      12044 _showScoreScreen::
      0035D9 E8 F6                12045 	add	sp, #-10
                                  12046 ;src/main.c:1292: HIDE_WIN;
      0035DB F0r00                12047 	ldh	a, (_LCDC_REG + 0)
      0035DD E6 DF                12048 	and	a, #0xdf
      0035DF E0r00                12049 	ldh	(_LCDC_REG + 0), a
                                  12050 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      0035E1 AF                   12051 	xor	a, a
      0035E2 E0r00                12052 	ldh	(_WX_REG + 0), a
      0035E4 AF                   12053 	xor	a, a
      0035E5 E0r00                12054 	ldh	(_WY_REG + 0), a
                                  12055 ;src/main.c:1296: for (uint8_t i=0; i < 18; ++i) {
      0035E7 06 00                12056 	ld	b, #0x00
      0035E9                      12057 00105$:
      0035E9 78                   12058 	ld	a, b
      0035EA D6 12                12059 	sub	a, #0x12
      0035EC 30 16                12060 	jr	NC, 00101$
                                  12061 ;src/main.c:1297: set_win_tiles(1,i,20,1,emptyRow);
      0035EE 11r2Dr00             12062 	ld	de, #_emptyRow
      0035F1 D5                   12063 	push	de
      0035F2 21 14 01             12064 	ld	hl, #0x114
      0035F5 E5                   12065 	push	hl
      0035F6 C5                   12066 	push	bc
      0035F7 33                   12067 	inc	sp
      0035F8 3E 01                12068 	ld	a, #0x01
      0035FA F5                   12069 	push	af
      0035FB 33                   12070 	inc	sp
      0035FC CDr00r00             12071 	call	_set_win_tiles
      0035FF E8 06                12072 	add	sp, #6
                                  12073 ;src/main.c:1296: for (uint8_t i=0; i < 18; ++i) {
      003601 04                   12074 	inc	b
      003602 18 E5                12075 	jr	00105$
      003604                      12076 00101$:
                                  12077 ;src/main.c:1300: set_win_tiles(8, 5, 5, 1, endScoreLabel);
      003604 11r10r00             12078 	ld	de, #_endScoreLabel
      003607 D5                   12079 	push	de
      003608 21 05 01             12080 	ld	hl, #0x105
      00360B E5                   12081 	push	hl
      00360C 21 08 05             12082 	ld	hl, #0x508
      00360F E5                   12083 	push	hl
      003610 CDr00r00             12084 	call	_set_win_tiles
      003613 E8 06                12085 	add	sp, #6
                                  12086 ;src/main.c:1304: for (uint16_t j=0; j<1234; ++j) {
      003615 01 00 00             12087 	ld	bc, #0x0000
      003618                      12088 00108$:
      003618 59                   12089 	ld	e, c
      003619 50                   12090 	ld	d, b
      00361A 7B                   12091 	ld	a, e
      00361B D6 D2                12092 	sub	a, #0xd2
      00361D 7A                   12093 	ld	a, d
      00361E DE 04                12094 	sbc	a, #0x04
      003620 30 08                12095 	jr	NC, 00102$
                                  12096 ;src/main.c:1305: incrementScore();
      003622 C5                   12097 	push	bc
      003623 CDr78r0D             12098 	call	_incrementScore
      003626 C1                   12099 	pop	bc
                                  12100 ;src/main.c:1304: for (uint16_t j=0; j<1234; ++j) {
      003627 03                   12101 	inc	bc
      003628 18 EE                12102 	jr	00108$
      00362A                      12103 00102$:
                                  12104 ;src/main.c:1307: bcd2text(&SCORE, 0x01, buf);
      00362A F8 00                12105 	ldhl	sp,	#0
      00362C 4D                   12106 	ld	c, l
      00362D 44                   12107 	ld	b, h
      00362E 59                   12108 	ld	e, c
      00362F 50                   12109 	ld	d, b
      003630 C5                   12110 	push	bc
      003631 D5                   12111 	push	de
      003632 3E 01                12112 	ld	a, #0x01
      003634 F5                   12113 	push	af
      003635 33                   12114 	inc	sp
      003636 11rFBr00             12115 	ld	de, #_SCORE
      003639 D5                   12116 	push	de
      00363A CDr00r00             12117 	call	_bcd2text
      00363D E8 05                12118 	add	sp, #5
      00363F C1                   12119 	pop	bc
                                  12120 ;src/main.c:1308: set_win_tiles(7, 8, 7, 1, buf+1);
      003640 03                   12121 	inc	bc
      003641 C5                   12122 	push	bc
      003642 21 07 01             12123 	ld	hl, #0x107
      003645 E5                   12124 	push	hl
      003646 21 07 08             12125 	ld	hl, #0x807
      003649 E5                   12126 	push	hl
      00364A CDr00r00             12127 	call	_set_win_tiles
      00364D E8 06                12128 	add	sp, #6
                                  12129 ;src/main.c:1312: set_win_tiles(4, 11, 13, 1, pressAnyKeyLabel);
      00364F 11r15r00             12130 	ld	de, #_pressAnyKeyLabel
      003652 D5                   12131 	push	de
      003653 21 0D 01             12132 	ld	hl, #0x10d
      003656 E5                   12133 	push	hl
      003657 21 04 0B             12134 	ld	hl, #0xb04
      00365A E5                   12135 	push	hl
      00365B CDr00r00             12136 	call	_set_win_tiles
      00365E E8 06                12137 	add	sp, #6
                                  12138 ;src/main.c:1314: set_win_tiles(5, 12, 11, 1, toContinueLabel);
      003660 11r22r00             12139 	ld	de, #_toContinueLabel
      003663 D5                   12140 	push	de
      003664 21 0B 01             12141 	ld	hl, #0x10b
      003667 E5                   12142 	push	hl
      003668 21 05 0C             12143 	ld	hl, #0xc05
      00366B E5                   12144 	push	hl
      00366C CDr00r00             12145 	call	_set_win_tiles
      00366F E8 06                12146 	add	sp, #6
                                  12147 ;src/main.c:1318: SHOW_WIN;
      003671 F0r00                12148 	ldh	a, (_LCDC_REG + 0)
      003673 F6 20                12149 	or	a, #0x20
      003675 E0r00                12150 	ldh	(_LCDC_REG + 0), a
                                  12151 ;src/main.c:1320: }
      003677 E8 0A                12152 	add	sp, #10
      003679 C9                   12153 	ret
                                  12154 ;src/main.c:1322: void initFont() {
                                  12155 ;	---------------------------------
                                  12156 ; Function initFont
                                  12157 ; ---------------------------------
      00367A                      12158 _initFont::
                                  12159 ;src/main.c:1323: font_init();
      00367A CDr00r00             12160 	call	_font_init
                                  12161 ;src/main.c:1325: min_font = font_load(font_min); // 36 tiles of characters
      00367D 11r00r00             12162 	ld	de, #_font_min
      003680 D5                   12163 	push	de
      003681 CDr00r00             12164 	call	_font_load
      003684 E1                   12165 	pop	hl
      003685 21rF8r00             12166 	ld	hl, #_min_font
      003688 7B                   12167 	ld	a, e
      003689 22                   12168 	ld	(hl+), a
                                  12169 ;src/main.c:1326: font_set(min_font);
      00368A 7A                   12170 	ld	a, d
      00368B 32                   12171 	ld	(hl-), a
      00368C 2A                   12172 	ld	a, (hl+)
      00368D 5F                   12173 	ld	e, a
      00368E 56                   12174 	ld	d, (hl)
      00368F D5                   12175 	push	de
      003690 CDr00r00             12176 	call	_font_set
      003693 E1                   12177 	pop	hl
                                  12178 ;src/main.c:1328: }
      003694 C9                   12179 	ret
                                  12180 ;src/main.c:1330: void showStartScreen() {
                                  12181 ;	---------------------------------
                                  12182 ; Function showStartScreen
                                  12183 ; ---------------------------------
      003695                      12184 _showStartScreen::
                                  12185 ;src/main.c:1331: HIDE_WIN;
      003695 F0r00                12186 	ldh	a, (_LCDC_REG + 0)
      003697 E6 DF                12187 	and	a, #0xdf
      003699 E0r00                12188 	ldh	(_LCDC_REG + 0), a
                                  12189 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      00369B AF                   12190 	xor	a, a
      00369C E0r00                12191 	ldh	(_WX_REG + 0), a
      00369E AF                   12192 	xor	a, a
      00369F E0r00                12193 	ldh	(_WY_REG + 0), a
                                  12194 ;src/main.c:1335: for (uint8_t i=0; i < 18; ++i) {
      0036A1 06 00                12195 	ld	b, #0x00
      0036A3                      12196 00104$:
      0036A3 78                   12197 	ld	a, b
      0036A4 D6 12                12198 	sub	a, #0x12
      0036A6 30 16                12199 	jr	NC, 00101$
                                  12200 ;src/main.c:1336: set_win_tiles(1,i,20,1,emptyRow);
      0036A8 11r2Dr00             12201 	ld	de, #_emptyRow
      0036AB D5                   12202 	push	de
      0036AC 21 14 01             12203 	ld	hl, #0x114
      0036AF E5                   12204 	push	hl
      0036B0 C5                   12205 	push	bc
      0036B1 33                   12206 	inc	sp
      0036B2 3E 01                12207 	ld	a, #0x01
      0036B4 F5                   12208 	push	af
      0036B5 33                   12209 	inc	sp
      0036B6 CDr00r00             12210 	call	_set_win_tiles
      0036B9 E8 06                12211 	add	sp, #6
                                  12212 ;src/main.c:1335: for (uint8_t i=0; i < 18; ++i) {
      0036BB 04                   12213 	inc	b
      0036BC 18 E5                12214 	jr	00104$
      0036BE                      12215 00101$:
                                  12216 ;src/main.c:1339: set_win_tiles(5, 9, 11, 1, pressStartLabel);
      0036BE 11r41r00             12217 	ld	de, #_pressStartLabel
      0036C1 D5                   12218 	push	de
      0036C2 21 0B 01             12219 	ld	hl, #0x10b
      0036C5 E5                   12220 	push	hl
      0036C6 21 05 09             12221 	ld	hl, #0x905
      0036C9 E5                   12222 	push	hl
      0036CA CDr00r00             12223 	call	_set_win_tiles
      0036CD E8 06                12224 	add	sp, #6
                                  12225 ;src/main.c:1341: SHOW_WIN;
      0036CF F0r00                12226 	ldh	a, (_LCDC_REG + 0)
      0036D1 F6 20                12227 	or	a, #0x20
      0036D3 E0r00                12228 	ldh	(_LCDC_REG + 0), a
                                  12229 ;src/main.c:1342: }
      0036D5 C9                   12230 	ret
                                  12231 ;src/main.c:1344: void showMenu() {
                                  12232 ;	---------------------------------
                                  12233 ; Function showMenu
                                  12234 ; ---------------------------------
      0036D6                      12235 _showMenu::
                                  12236 ;src/main.c:1345: HIDE_WIN;
      0036D6 F0r00                12237 	ldh	a, (_LCDC_REG + 0)
      0036D8 E6 DF                12238 	and	a, #0xdf
      0036DA E0r00                12239 	ldh	(_LCDC_REG + 0), a
                                  12240 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      0036DC AF                   12241 	xor	a, a
      0036DD E0r00                12242 	ldh	(_WX_REG + 0), a
      0036DF AF                   12243 	xor	a, a
      0036E0 E0r00                12244 	ldh	(_WY_REG + 0), a
                                  12245 ;src/main.c:1349: for (uint8_t i=0; i < 18; ++i) {
      0036E2 06 00                12246 	ld	b, #0x00
      0036E4                      12247 00106$:
      0036E4 78                   12248 	ld	a, b
      0036E5 D6 12                12249 	sub	a, #0x12
      0036E7 30 29                12250 	jr	NC, 00101$
                                  12251 ;src/main.c:1350: set_win_tiles(1,i,20,1,emptyRow);
      0036E9 11r2Dr00             12252 	ld	de, #_emptyRow
      0036EC D5                   12253 	push	de
      0036ED 21 14 01             12254 	ld	hl, #0x114
      0036F0 E5                   12255 	push	hl
      0036F1 C5                   12256 	push	bc
      0036F2 33                   12257 	inc	sp
      0036F3 3E 01                12258 	ld	a, #0x01
      0036F5 F5                   12259 	push	af
      0036F6 33                   12260 	inc	sp
      0036F7 CDr00r00             12261 	call	_set_win_tiles
      0036FA E8 06                12262 	add	sp, #6
                                  12263 ;src/main.c:1351: set_bkg_tiles(1,i,20,1,emptyRow);
      0036FC 11r2Dr00             12264 	ld	de, #_emptyRow
      0036FF D5                   12265 	push	de
      003700 21 14 01             12266 	ld	hl, #0x114
      003703 E5                   12267 	push	hl
      003704 C5                   12268 	push	bc
      003705 33                   12269 	inc	sp
      003706 3E 01                12270 	ld	a, #0x01
      003708 F5                   12271 	push	af
      003709 33                   12272 	inc	sp
      00370A CDr00r00             12273 	call	_set_bkg_tiles
      00370D E8 06                12274 	add	sp, #6
                                  12275 ;src/main.c:1349: for (uint8_t i=0; i < 18; ++i) {
      00370F 04                   12276 	inc	b
      003710 18 D2                12277 	jr	00106$
      003712                      12278 00101$:
                                  12279 ;src/main.c:1355: set_win_tiles(9,7, 4, 1, playLabel);
      003712 11r4Cr00             12280 	ld	de, #_playLabel
      003715 D5                   12281 	push	de
      003716 21 04 01             12282 	ld	hl, #0x104
      003719 E5                   12283 	push	hl
      00371A 21 09 07             12284 	ld	hl, #0x709
      00371D E5                   12285 	push	hl
      00371E CDr00r00             12286 	call	_set_win_tiles
      003721 E8 06                12287 	add	sp, #6
                                  12288 ;src/main.c:1356: set_win_tiles(7, 8, 8, 1, controlsLabel);
      003723 11r50r00             12289 	ld	de, #_controlsLabel
      003726 D5                   12290 	push	de
      003727 21 08 01             12291 	ld	hl, #0x108
      00372A E5                   12292 	push	hl
      00372B 21 07 08             12293 	ld	hl, #0x807
      00372E E5                   12294 	push	hl
      00372F CDr00r00             12295 	call	_set_win_tiles
      003732 E8 06                12296 	add	sp, #6
                                  12297 ;src/main.c:1359: SHOW_WIN;
      003734 F0r00                12298 	ldh	a, (_LCDC_REG + 0)
      003736 F6 20                12299 	or	a, #0x20
      003738 E0r00                12300 	ldh	(_LCDC_REG + 0), a
                                  12301 ;src/main.c:1360: SHOW_SPRITES;
      00373A F0r00                12302 	ldh	a, (_LCDC_REG + 0)
      00373C F6 02                12303 	or	a, #0x02
      00373E E0r00                12304 	ldh	(_LCDC_REG + 0), a
                                  12305 ;src/main.c:1362: set_sprite_data(0, 1, MenuPicker);
      003740 11r89r0B             12306 	ld	de, #_MenuPicker
      003743 D5                   12307 	push	de
      003744 AF                   12308 	xor	a, a
      003745 3C                   12309 	inc	a
      003746 F5                   12310 	push	af
      003747 CDr00r00             12311 	call	_set_sprite_data
      00374A E8 04                12312 	add	sp, #4
                                  12313 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00374C 21r02r00             12314 	ld	hl, #(_shadow_OAM + 2)
      00374F 36 00                12315 	ld	(hl), #0x00
      003751 21r06r00             12316 	ld	hl, #(_shadow_OAM + 6)
      003754 36 00                12317 	ld	(hl), #0x00
                                  12318 ;src/main.c:1364: set_sprite_tile(1, 0);
                                  12319 ;src/main.c:1366: }
      003756 C9                   12320 	ret
                                  12321 ;src/main.c:1368: void updateMenu(int8_t menuitem) {
                                  12322 ;	---------------------------------
                                  12323 ; Function updateMenu
                                  12324 ; ---------------------------------
      003757                      12325 _updateMenu::
                                  12326 ;src/main.c:1369: move_sprite(0, 47, 72+ (menuitem<<3));
      003757 F8 02                12327 	ldhl	sp,	#2
      003759 7E                   12328 	ld	a, (hl)
      00375A 87                   12329 	add	a, a
      00375B 87                   12330 	add	a, a
      00375C 87                   12331 	add	a, a
      00375D C6 48                12332 	add	a, #0x48
      00375F 4F                   12333 	ld	c, a
      003760 41                   12334 	ld	b, c
                                  12335 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003761 21r00r00             12336 	ld	hl, #_shadow_OAM
                                  12337 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003764 78                   12338 	ld	a, b
      003765 22                   12339 	ld	(hl+), a
      003766 36 2F                12340 	ld	(hl), #0x2f
                                  12341 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003768 21r04r00             12342 	ld	hl, #(_shadow_OAM + 4)
                                  12343 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00376B 79                   12344 	ld	a, c
      00376C 22                   12345 	ld	(hl+), a
      00376D 36 7B                12346 	ld	(hl), #0x7b
                                  12347 ;src/main.c:1370: move_sprite(1, 123, 72+ (menuitem<<3));
                                  12348 ;src/main.c:1372: }
      00376F C9                   12349 	ret
                                  12350 ;src/main.c:1374: void main(){
                                  12351 ;	---------------------------------
                                  12352 ; Function main
                                  12353 ; ---------------------------------
      003770                      12354 _main::
      003770 E8 FC                12355 	add	sp, #-4
                                  12356 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      003772 F3                   12357 	di
                                  12358 ;src/main.c:1378: initEnemyOptions();
      003773 CDr5Er33             12359 	call	_initEnemyOptions
                                  12360 ;src/main.c:1380: initFont();
      003776 CDr7Ar36             12361 	call	_initFont
                                  12362 ;src/main.c:1382: showStartScreen();
      003779 CDr95r36             12363 	call	_showStartScreen
                                  12364 ;src/main.c:1383: waitpad(J_START | J_A);
      00377C 3E 90                12365 	ld	a, #0x90
      00377E F5                   12366 	push	af
      00377F 33                   12367 	inc	sp
      003780 CDr00r00             12368 	call	_waitpad
      003783 33                   12369 	inc	sp
                                  12370 ;src/main.c:1384: waitpadup();
      003784 CDr00r00             12371 	call	_waitpadup
                                  12372 ;src/main.c:1388: NR52_REG = 0x80; // sound on 
      003787 3E 80                12373 	ld	a, #0x80
      003789 E0r00                12374 	ldh	(_NR52_REG + 0), a
                                  12375 ;src/main.c:1389: NR50_REG = 0x77; // volume
      00378B 3E 77                12376 	ld	a, #0x77
      00378D E0r00                12377 	ldh	(_NR50_REG + 0), a
                                  12378 ;src/main.c:1390: NR51_REG = 0xFF; // all channels
      00378F 3E FF                12379 	ld	a, #0xff
      003791 E0r00                12380 	ldh	(_NR51_REG + 0), a
                                  12381 ;src/main.c:1393: uint16_t seed = LY_REG;
      003793 F0r00                12382 	ldh	a, (_LY_REG + 0)
      003795 4F                   12383 	ld	c, a
      003796 06 00                12384 	ld	b, #0x00
                                  12385 ;src/main.c:1394: seed |= (uint16_t)DIV_REG << 8;
      003798 F0r00                12386 	ldh	a, (_DIV_REG + 0)
      00379A 5F                   12387 	ld	e, a
      00379B AF                   12388 	xor	a, a
      00379C B1                   12389 	or	a, c
      00379D 4F                   12390 	ld	c, a
      00379E 7B                   12391 	ld	a, e
      00379F B0                   12392 	or	a, b
      0037A0 47                   12393 	ld	b, a
                                  12394 ;src/main.c:1395: initrand(seed);
      0037A1 C5                   12395 	push	bc
      0037A2 CDr00r00             12396 	call	_initrand
      0037A5 E1                   12397 	pop	hl
                                  12398 ;src/main.c:1400: while(1) {
      0037A6                      12399 00149$:
                                  12400 ;src/main.c:1404: showMenu();
      0037A6 CDrD6r36             12401 	call	_showMenu
                                  12402 ;src/main.c:1405: int8_t menuitem = 0;
      0037A9 0E 00                12403 	ld	c, #0x00
                                  12404 ;src/main.c:1407: while (1) {
      0037AB                      12405 00110$:
                                  12406 ;src/main.c:1408: joydata = joypad(); // query for button states
      0037AB CDr00r00             12407 	call	_joypad
      0037AE 21rF5r00             12408 	ld	hl, #_joydata
      0037B1 73                   12409 	ld	(hl), e
                                  12410 ;src/main.c:1410: if (joydata & J_DOWN) {
      0037B2 7E                   12411 	ld	a, (hl)
      0037B3 CB 5F                12412 	bit	3, a
      0037B5 28 03                12413 	jr	Z, 00104$
                                  12414 ;src/main.c:1411: menuitem++;
      0037B7 0C                   12415 	inc	c
      0037B8 18 05                12416 	jr	00105$
      0037BA                      12417 00104$:
                                  12418 ;src/main.c:1413: else if (joydata & J_UP) {
      0037BA CB 57                12419 	bit	2, a
      0037BC 28 01                12420 	jr	Z, 00105$
                                  12421 ;src/main.c:1414: menuitem--;
      0037BE 0D                   12422 	dec	c
      0037BF                      12423 00105$:
                                  12424 ;src/main.c:348: return (value < min) ? min : (value > max) ? max : value;
      0037BF CB 79                12425 	bit	7, c
      0037C1 28 04                12426 	jr	Z, 00172$
      0037C3 0E 00                12427 	ld	c, #0x00
      0037C5 18 19                12428 	jr	00173$
      0037C7                      12429 00172$:
      0037C7 59                   12430 	ld	e, c
      0037C8 3E 01                12431 	ld	a,#0x01
      0037CA 57                   12432 	ld	d,a
      0037CB 91                   12433 	sub	a, c
      0037CC CB 7B                12434 	bit	7, e
      0037CE 28 07                12435 	jr	Z, 00374$
      0037D0 CB 7A                12436 	bit	7, d
      0037D2 20 08                12437 	jr	NZ, 00375$
      0037D4 BF                   12438 	cp	a, a
      0037D5 18 05                12439 	jr	00375$
      0037D7                      12440 00374$:
      0037D7 CB 7A                12441 	bit	7, d
      0037D9 28 01                12442 	jr	Z, 00375$
      0037DB 37                   12443 	scf
      0037DC                      12444 00375$:
      0037DC 30 02                12445 	jr	NC, 00174$
      0037DE 0E 01                12446 	ld	c, #0x01
      0037E0                      12447 00174$:
      0037E0                      12448 00173$:
                                  12449 ;src/main.c:1416: menuitem = clamp(menuitem, 0, 1);
      0037E0 41                   12450 	ld	b,c
                                  12451 ;src/main.c:1417: updateMenu(menuitem);
      0037E1 C5                   12452 	push	bc
      0037E2 C5                   12453 	push	bc
      0037E3 33                   12454 	inc	sp
      0037E4 CDr57r37             12455 	call	_updateMenu
      0037E7 33                   12456 	inc	sp
      0037E8 C1                   12457 	pop	bc
                                  12458 ;src/main.c:1419: if ((joydata & J_A) && menuitem == 0) {
      0037E9 FArF5r00             12459 	ld	a, (#_joydata)
      0037EC CB 67                12460 	bit	4, a
      0037EE 28 10                12461 	jr	Z, 00107$
      0037F0 78                   12462 	ld	a, b
      0037F1 B7                   12463 	or	a, a
      0037F2 20 0C                12464 	jr	NZ, 00107$
                                  12465 ;src/main.c:1420: waitpadup();
      0037F4 CDr00r00             12466 	call	_waitpadup
                                  12467 ;src/main.c:1421: playSound(0);
      0037F7 AF                   12468 	xor	a, a
      0037F8 F5                   12469 	push	af
      0037F9 33                   12470 	inc	sp
      0037FA CDrB6r0F             12471 	call	_playSound
      0037FD 33                   12472 	inc	sp
                                  12473 ;src/main.c:1422: break;
      0037FE 18 05                12474 	jr	00111$
      003800                      12475 00107$:
                                  12476 ;src/main.c:1425: wait_vbl_done();
      003800 CDr00r00             12477 	call	_wait_vbl_done
      003803 18 A6                12478 	jr	00110$
      003805                      12479 00111$:
                                  12480 ;src/main.c:1430: initGame();
      003805 CDrCBr33             12481 	call	_initGame
                                  12482 ;src/main.c:1431: initEnemies(1);
      003808 3E 01                12483 	ld	a, #0x01
      00380A F5                   12484 	push	af
      00380B 33                   12485 	inc	sp
      00380C CDr19r10             12486 	call	_initEnemies
      00380F 33                   12487 	inc	sp
                                  12488 ;src/main.c:1432: initProjectiles();
      003810 CDrB4r33             12489 	call	_initProjectiles
                                  12490 ;src/main.c:1435: while(hull > 0) {
      003813                      12491 00132$:
      003813 FArF6r00             12492 	ld	a, (#_hull)
      003816 B7                   12493 	or	a, a
      003817 CArECr38             12494 	jp	Z, 00197$
                                  12495 ;src/main.c:1436: SHOW_SPRITES;
      00381A F0r00                12496 	ldh	a, (_LCDC_REG + 0)
      00381C F6 02                12497 	or	a, #0x02
      00381E E0r00                12498 	ldh	(_LCDC_REG + 0), a
                                  12499 ;src/main.c:1438: joydata = joypad(); // query for button states
      003820 CDr00r00             12500 	call	_joypad
      003823 21rF5r00             12501 	ld	hl, #_joydata
      003826 73                   12502 	ld	(hl), e
                                  12503 ;src/main.c:1440: updateDirection(); // set player direction
      003827 CDr91r0D             12504 	call	_updateDirection
                                  12505 ;src/main.c:1443: move(); 
      00382A CDr89r1B             12506 	call	_move
                                  12507 ;src/main.c:1445: moveProjectiles();
      00382D CDrC2r2D             12508 	call	_moveProjectiles
                                  12509 ;src/main.c:1446: tickPickups();
      003830 CDrA5r2F             12510 	call	_tickPickups
                                  12511 ;src/main.c:1447: tickEx();
      003833 CDr7Dr31             12512 	call	_tickEx
                                  12513 ;src/main.c:1451: updateEnemyPositions();
      003836 CDr68r12             12514 	call	_updateEnemyPositions
                                  12515 ;src/main.c:1454: checkCollision(); 
      003839 CDr1Er23             12516 	call	_checkCollision
                                  12517 ;src/main.c:970: if (shield < maxShield) {
      00383C 21rC2r0B             12518 	ld	hl, #_maxShield
      00383F 4E                   12519 	ld	c, (hl)
      003840 59                   12520 	ld	e, c
      003841 21rF7r00             12521 	ld	hl, #_shield
      003844 56                   12522 	ld	d, (hl)
      003845 7E                   12523 	ld	a, (hl)
      003846 91                   12524 	sub	a, c
      003847 CB 7B                12525 	bit	7, e
      003849 28 07                12526 	jr	Z, 00377$
      00384B CB 7A                12527 	bit	7, d
      00384D 20 08                12528 	jr	NZ, 00378$
      00384F BF                   12529 	cp	a, a
      003850 18 05                12530 	jr	00378$
      003852                      12531 00377$:
      003852 CB 7A                12532 	bit	7, d
      003854 28 01                12533 	jr	Z, 00378$
      003856 37                   12534 	scf
      003857                      12535 00378$:
      003857 30 04                12536 	jr	NC, 00154$
                                  12537 ;src/main.c:971: shield += 1;
      003859 21rF7r00             12538 	ld	hl, #_shield
      00385C 34                   12539 	inc	(hl)
      00385D                      12540 00154$:
                                  12541 ;src/main.c:973: setHealthBar(0, hull);
      00385D FArF6r00             12542 	ld	a, (#_hull)
      003860 67                   12543 	ld	h, a
      003861 2E 00                12544 	ld	l, #0x00
      003863 E5                   12545 	push	hl
      003864 CDrC9r0B             12546 	call	_setHealthBar
      003867 E1                   12547 	pop	hl
                                  12548 ;src/main.c:974: setHealthBar(1, shield);
      003868 FArF7r00             12549 	ld	a, (#_shield)
      00386B 67                   12550 	ld	h, a
      00386C 2E 01                12551 	ld	l, #0x01
      00386E E5                   12552 	push	hl
      00386F CDrC9r0B             12553 	call	_setHealthBar
      003872 E1                   12554 	pop	hl
                                  12555 ;src/main.c:1459: if (joydata & J_B && fireCooldown == 0) {
      003873 FArF5r00             12556 	ld	a, (#_joydata)
      003876 CB 6F                12557 	bit	5, a
      003878 28 09                12558 	jr	Z, 00113$
      00387A FArDAr00             12559 	ld	a, (#_fireCooldown)
      00387D B7                   12560 	or	a, a
      00387E 20 03                12561 	jr	NZ, 00113$
                                  12562 ;src/main.c:1460: fire();
      003880 CDr14r28             12563 	call	_fire
      003883                      12564 00113$:
                                  12565 ;src/main.c:1462: if (fireCooldown > 0) {
      003883 21rDAr00             12566 	ld	hl, #_fireCooldown
      003886 7E                   12567 	ld	a, (hl)
      003887 B7                   12568 	or	a, a
      003888 28 01                12569 	jr	Z, 00116$
                                  12570 ;src/main.c:1463: --fireCooldown;
      00388A 35                   12571 	dec	(hl)
      00388B                      12572 00116$:
                                  12573 ;src/main.c:1466: if (joydata & J_SELECT && switchDelay == 0) {
      00388B FArF5r00             12574 	ld	a, (#_joydata)
      00388E CB 77                12575 	bit	6, a
      003890 28 24                12576 	jr	Z, 00123$
      003892 FArF5r00             12577 	ld	a, (#_switchDelay)
      003895 B7                   12578 	or	a, a
      003896 20 1E                12579 	jr	NZ, 00123$
                                  12580 ;src/main.c:1467: if (currentGun == 0) {
      003898 21rEFr00             12581 	ld	hl, #_currentGun
      00389B 7E                   12582 	ld	a, (hl)
      00389C B7                   12583 	or	a, a
      00389D 20 04                12584 	jr	NZ, 00120$
                                  12585 ;src/main.c:1468: currentGun = 1;
      00389F 36 01                12586 	ld	(hl), #0x01
      0038A1 18 0B                12587 	jr	00121$
      0038A3                      12588 00120$:
                                  12589 ;src/main.c:1470: else if (currentGun == 1) {
      0038A3 FArEFr00             12590 	ld	a, (#_currentGun)
      0038A6 3D                   12591 	dec	a
      0038A7 20 05                12592 	jr	NZ, 00121$
                                  12593 ;src/main.c:1471: currentGun = 0;
      0038A9 21rEFr00             12594 	ld	hl, #_currentGun
      0038AC 36 00                12595 	ld	(hl), #0x00
      0038AE                      12596 00121$:
                                  12597 ;src/main.c:1473: setGunIcon();
      0038AE CDrE1r27             12598 	call	_setGunIcon
                                  12599 ;src/main.c:1474: switchDelay = 30;
      0038B1 21rF5r00             12600 	ld	hl, #_switchDelay
      0038B4 36 1E                12601 	ld	(hl), #0x1e
      0038B6                      12602 00123$:
                                  12603 ;src/main.c:1476: if (switchDelay != 0) {
      0038B6 21rF5r00             12604 	ld	hl, #_switchDelay
      0038B9 7E                   12605 	ld	a, (hl)
      0038BA B7                   12606 	or	a, a
      0038BB 28 01                12607 	jr	Z, 00126$
                                  12608 ;src/main.c:1477: switchDelay--;
      0038BD 35                   12609 	dec	(hl)
      0038BE                      12610 00126$:
                                  12611 ;src/main.c:1480: if (auxTick == 0) {
      0038BE FAr07r01             12612 	ld	a, (#_auxTick)
      0038C1 B7                   12613 	or	a, a
      0038C2 20 08                12614 	jr	NZ, 00128$
                                  12615 ;src/main.c:1481: auxTick = AUXTICKFREQUENCY;
      0038C4 FArC8r0B             12616 	ld	a, (#_AUXTICKFREQUENCY)
      0038C7 EAr07r01             12617 	ld	(#_auxTick),a
      0038CA 18 04                12618 	jr	00129$
      0038CC                      12619 00128$:
                                  12620 ;src/main.c:1484: auxTick--;
      0038CC 21r07r01             12621 	ld	hl, #_auxTick
      0038CF 35                   12622 	dec	(hl)
      0038D0                      12623 00129$:
                                  12624 ;src/main.c:1489: if (hull > 100) {
      0038D0 3E 64                12625 	ld	a, #0x64
      0038D2 21rF6r00             12626 	ld	hl, #_hull
      0038D5 96                   12627 	sub	a, (hl)
      0038D6 30 02                12628 	jr	NC, 00131$
                                  12629 ;src/main.c:1490: hull = 0;
      0038D8 36 00                12630 	ld	(hl), #0x00
      0038DA                      12631 00131$:
                                  12632 ;src/main.c:1492: SHOW_SPRITES;
      0038DA F0r00                12633 	ldh	a, (_LCDC_REG + 0)
      0038DC F6 02                12634 	or	a, #0x02
      0038DE E0r00                12635 	ldh	(_LCDC_REG + 0), a
                                  12636 ;src/main.c:1494: SHOW_WIN;	
      0038E0 F0r00                12637 	ldh	a, (_LCDC_REG + 0)
      0038E2 F6 20                12638 	or	a, #0x20
      0038E4 E0r00                12639 	ldh	(_LCDC_REG + 0), a
                                  12640 ;src/main.c:1495: wait_vbl_done(); // Idle until next frame
      0038E6 CDr00r00             12641 	call	_wait_vbl_done
      0038E9 C3r13r38             12642 	jp	00132$
                                  12643 ;src/main.c:1500: for (uint8_t i=0; i<exCount; ++i) {
      0038EC                      12644 00197$:
      0038EC F8 03                12645 	ldhl	sp,	#3
      0038EE 36 00                12646 	ld	(hl), #0x00
      0038F0                      12647 00162$:
      0038F0 21rC5r0B             12648 	ld	hl, #_exCount
      0038F3 4E                   12649 	ld	c, (hl)
      0038F4 F8 03                12650 	ldhl	sp,	#3
      0038F6 7E                   12651 	ld	a, (hl)
      0038F7 91                   12652 	sub	a, c
      0038F8 30 48                12653 	jr	NC, 00135$
                                  12654 ;src/main.c:1501: explosions[i].x = 200;
      0038FA 4E                   12655 	ld	c, (hl)
      0038FB 06 00                12656 	ld	b, #0x00
      0038FD 69                   12657 	ld	l, c
      0038FE 60                   12658 	ld	h, b
      0038FF 29                   12659 	add	hl, hl
      003900 09                   12660 	add	hl, bc
      003901 29                   12661 	add	hl, hl
      003902 01r03r01             12662 	ld	bc,#_explosions
      003905 09                   12663 	add	hl,bc
                                  12664 ;	spillPairReg hl
                                  12665 ;	spillPairReg hl
      003906 4D                   12666 	ld	c,l
      003907 44                   12667 	ld	b,h
                                  12668 ;	spillPairReg hl
                                  12669 ;	spillPairReg hl
      003908 23                   12670 	inc	hl
      003909 36 C8                12671 	ld	(hl), #0xc8
                                  12672 ;src/main.c:1502: explosions[i].y = 200;
      00390B 69                   12673 	ld	l, c
                                  12674 ;	spillPairReg hl
                                  12675 ;	spillPairReg hl
      00390C 60                   12676 	ld	h, b
                                  12677 ;	spillPairReg hl
                                  12678 ;	spillPairReg hl
      00390D 23                   12679 	inc	hl
      00390E 23                   12680 	inc	hl
      00390F 36 C8                12681 	ld	(hl), #0xc8
                                  12682 ;src/main.c:1504: explosions[i].tile = exTiles[0];
      003911 21 05 00             12683 	ld	hl, #0x0005
      003914 09                   12684 	add	hl, bc
      003915 E5                   12685 	push	hl
      003916 7D                   12686 	ld	a, l
      003917 F8 03                12687 	ldhl	sp,	#3
      003919 77                   12688 	ld	(hl), a
      00391A E1                   12689 	pop	hl
      00391B 7C                   12690 	ld	a, h
      00391C F8 02                12691 	ldhl	sp,	#2
      00391E 32                   12692 	ld	(hl-), a
      00391F FAr04r01             12693 	ld	a, (#_exTiles + 0)
      003922 F5                   12694 	push	af
      003923 2A                   12695 	ld	a,	(hl+)
      003924 66                   12696 	ld	h, (hl)
      003925 6F                   12697 	ld	l, a
      003926 F1                   12698 	pop	af
      003927 77                   12699 	ld	(hl), a
                                  12700 ;src/main.c:1505: explosions[i].frameCounter = 0;
      003928 21 04 00             12701 	ld	hl, #0x0004
      00392B 09                   12702 	add	hl, bc
      00392C 36 00                12703 	ld	(hl), #0x00
                                  12704 ;src/main.c:1506: explosions[i].frame = 2-i;
      00392E 59                   12705 	ld	e, c
      00392F 50                   12706 	ld	d, b
      003930 13                   12707 	inc	de
      003931 13                   12708 	inc	de
      003932 13                   12709 	inc	de
      003933 F8 03                12710 	ldhl	sp,	#3
      003935 6E                   12711 	ld	l, (hl)
                                  12712 ;	spillPairReg hl
                                  12713 ;	spillPairReg hl
      003936 3E 02                12714 	ld	a, #0x02
      003938 95                   12715 	sub	a, l
      003939 12                   12716 	ld	(de), a
                                  12717 ;src/main.c:1507: explosions[i].visible = 1;
      00393A 3E 01                12718 	ld	a, #0x01
      00393C 02                   12719 	ld	(bc), a
                                  12720 ;src/main.c:1500: for (uint8_t i=0; i<exCount; ++i) {
      00393D F8 03                12721 	ldhl	sp,	#3
      00393F 34                   12722 	inc	(hl)
      003940 18 AE                12723 	jr	00162$
      003942                      12724 00135$:
                                  12725 ;src/main.c:1509: xOverflow = 0;
      003942 AF                   12726 	xor	a, a
      003943 21rE9r00             12727 	ld	hl, #_xOverflow
      003946 22                   12728 	ld	(hl+), a
      003947 77                   12729 	ld	(hl), a
                                  12730 ;src/main.c:1510: yOverflow = 0;
      003948 AF                   12731 	xor	a, a
      003949 21rEBr00             12732 	ld	hl, #_yOverflow
      00394C 22                   12733 	ld	(hl+), a
      00394D 77                   12734 	ld	(hl), a
                                  12735 ;src/main.c:1512: while(endExCount < 12) {
      00394E F8 03                12736 	ldhl	sp,	#3
      003950 36 00                12737 	ld	(hl), #0x00
      003952                      12738 00143$:
      003952 F8 03                12739 	ldhl	sp,	#3
      003954 7E                   12740 	ld	a, (hl)
      003955 D6 0C                12741 	sub	a, #0x0c
      003957 D2rC9r3A             12742 	jp	NC, 00145$
                                  12743 ;src/main.c:1514: SHOW_SPRITES;
      00395A F0r00                12744 	ldh	a, (_LCDC_REG + 0)
      00395C F6 02                12745 	or	a, #0x02
      00395E E0r00                12746 	ldh	(_LCDC_REG + 0), a
                                  12747 ;src/main.c:1515: tickEx();
      003960 CDr7Dr31             12748 	call	_tickEx
                                  12749 ;src/main.c:1516: if (auxTick == 0) {
      003963 FAr07r01             12750 	ld	a, (#_auxTick)
      003966 B7                   12751 	or	a, a
      003967 20 08                12752 	jr	NZ, 00137$
                                  12753 ;src/main.c:1517: auxTick = AUXTICKFREQUENCY;
      003969 FArC8r0B             12754 	ld	a, (#_AUXTICKFREQUENCY)
      00396C EAr07r01             12755 	ld	(#_auxTick),a
      00396F 18 04                12756 	jr	00138$
      003971                      12757 00137$:
                                  12758 ;src/main.c:1520: auxTick--;
      003971 21r07r01             12759 	ld	hl, #_auxTick
      003974 35                   12760 	dec	(hl)
      003975                      12761 00138$:
                                  12762 ;src/main.c:1522: if (!explosions[oldestEx].visible) {
      003975 21r03r01             12763 	ld	hl, #_oldestEx
      003978 4E                   12764 	ld	c, (hl)
      003979 06 00                12765 	ld	b, #0x00
      00397B 69                   12766 	ld	l, c
      00397C 60                   12767 	ld	h, b
      00397D 29                   12768 	add	hl, hl
      00397E 09                   12769 	add	hl, bc
      00397F 29                   12770 	add	hl, hl
      003980 01r03r01             12771 	ld	bc,#_explosions
      003983 09                   12772 	add	hl,bc
      003984 E5                   12773 	push	hl
      003985 7D                   12774 	ld	a, l
      003986 F8 03                12775 	ldhl	sp,	#3
      003988 77                   12776 	ld	(hl), a
      003989 E1                   12777 	pop	hl
      00398A 7C                   12778 	ld	a, h
      00398B F8 02                12779 	ldhl	sp,	#2
      00398D 32                   12780 	ld	(hl-), a
      00398E 2A                   12781 	ld	a, (hl+)
      00398F 5F                   12782 	ld	e, a
      003990 56                   12783 	ld	d, (hl)
      003991 1A                   12784 	ld	a, (de)
      003992 B7                   12785 	or	a, a
      003993 C2rBDr3A             12786 	jp	NZ, 00142$
                                  12787 ;src/main.c:1523: explosions[oldestEx].visible = 1;
      003996 3A                   12788 	ld	a, (hl-)
      003997 6E                   12789 	ld	l, (hl)
      003998 67                   12790 	ld	h, a
      003999 36 01                12791 	ld	(hl), #0x01
                                  12792 ;src/main.c:1526: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      00399B CDr00r00             12793 	call	_rand
      00399E 7B                   12794 	ld	a, e
      00399F 21rC7r0B             12795 	ld	hl, #_exTileCount
      0039A2 46                   12796 	ld	b, (hl)
      0039A3 C5                   12797 	push	bc
      0039A4 33                   12798 	inc	sp
      0039A5 F5                   12799 	push	af
      0039A6 33                   12800 	inc	sp
      0039A7 CDr00r00             12801 	call	__moduchar
      0039AA E1                   12802 	pop	hl
      0039AB F8 00                12803 	ldhl	sp,	#0
      0039AD 73                   12804 	ld	(hl), e
                                  12805 ;src/main.c:1527: uint8_t xOff = ((uint8_t)rand()) % 32;
      0039AE CDr00r00             12806 	call	_rand
      0039B1 7B                   12807 	ld	a, e
      0039B2 E6 1F                12808 	and	a, #0x1f
      0039B4 F8 01                12809 	ldhl	sp,	#1
      0039B6 77                   12810 	ld	(hl), a
                                  12811 ;src/main.c:1528: uint8_t yOff = ((uint8_t)rand()) % 32;
      0039B7 CDr00r00             12812 	call	_rand
      0039BA 7B                   12813 	ld	a, e
      0039BB E6 1F                12814 	and	a, #0x1f
      0039BD F8 02                12815 	ldhl	sp,	#2
      0039BF 77                   12816 	ld	(hl), a
                                  12817 ;src/main.c:1530: explosions[oldestEx].x = playerDrawX -16 + xOff;
      0039C0 21r03r01             12818 	ld	hl, #_oldestEx
      0039C3 4E                   12819 	ld	c, (hl)
      0039C4 06 00                12820 	ld	b, #0x00
      0039C6 69                   12821 	ld	l, c
      0039C7 60                   12822 	ld	h, b
      0039C8 29                   12823 	add	hl, hl
      0039C9 09                   12824 	add	hl, bc
      0039CA 29                   12825 	add	hl, hl
      0039CB 01r03r01             12826 	ld	bc,#_explosions
      0039CE 09                   12827 	add	hl,bc
      0039CF 23                   12828 	inc	hl
      0039D0 4D                   12829 	ld	c, l
      0039D1 44                   12830 	ld	b, h
      0039D2 FArE3r00             12831 	ld	a, (#_playerDrawX)
      0039D5 C6 F0                12832 	add	a, #0xf0
      0039D7 F8 01                12833 	ldhl	sp,	#1
      0039D9 5E                   12834 	ld	e, (hl)
      0039DA 83                   12835 	add	a, e
      0039DB 02                   12836 	ld	(bc), a
                                  12837 ;src/main.c:1531: explosions[oldestEx].y = playerDrawY -16 + yOff;
      0039DC 21r03r01             12838 	ld	hl, #_oldestEx
      0039DF 4E                   12839 	ld	c, (hl)
      0039E0 06 00                12840 	ld	b, #0x00
      0039E2 69                   12841 	ld	l, c
      0039E3 60                   12842 	ld	h, b
      0039E4 29                   12843 	add	hl, hl
      0039E5 09                   12844 	add	hl, bc
      0039E6 29                   12845 	add	hl, hl
      0039E7 01r03r01             12846 	ld	bc,#_explosions
      0039EA 09                   12847 	add	hl,bc
      0039EB 23                   12848 	inc	hl
      0039EC 23                   12849 	inc	hl
      0039ED 4D                   12850 	ld	c, l
      0039EE 44                   12851 	ld	b, h
      0039EF FArE4r00             12852 	ld	a, (#_playerDrawY)
      0039F2 C6 F0                12853 	add	a, #0xf0
      0039F4 F8 02                12854 	ldhl	sp,	#2
      0039F6 5E                   12855 	ld	e, (hl)
      0039F7 83                   12856 	add	a, e
      0039F8 02                   12857 	ld	(bc), a
                                  12858 ;src/main.c:1532: explosions[oldestEx].tile = exTiles[tileNum];
      0039F9 21r03r01             12859 	ld	hl, #_oldestEx
      0039FC 4E                   12860 	ld	c, (hl)
      0039FD 06 00                12861 	ld	b, #0x00
      0039FF 69                   12862 	ld	l, c
      003A00 60                   12863 	ld	h, b
      003A01 29                   12864 	add	hl, hl
      003A02 09                   12865 	add	hl, bc
      003A03 29                   12866 	add	hl, hl
      003A04 01r03r01             12867 	ld	bc,#_explosions
      003A07 09                   12868 	add	hl,bc
      003A08 23                   12869 	inc	hl
      003A09 23                   12870 	inc	hl
      003A0A 23                   12871 	inc	hl
      003A0B 23                   12872 	inc	hl
      003A0C 23                   12873 	inc	hl
      003A0D 4D                   12874 	ld	c, l
      003A0E 44                   12875 	ld	b, h
      003A0F 11r04r01             12876 	ld	de, #_exTiles
      003A12 F8 00                12877 	ldhl	sp,	#0
      003A14 6E                   12878 	ld	l, (hl)
      003A15 26 00                12879 	ld	h, #0x00
      003A17 19                   12880 	add	hl, de
      003A18 5D                   12881 	ld	e, l
      003A19 54                   12882 	ld	d, h
      003A1A 1A                   12883 	ld	a, (de)
      003A1B 02                   12884 	ld	(bc), a
                                  12885 ;src/main.c:1533: explosions[oldestEx].frame = 0;
      003A1C 21r03r01             12886 	ld	hl, #_oldestEx
      003A1F 4E                   12887 	ld	c, (hl)
      003A20 06 00                12888 	ld	b, #0x00
      003A22 69                   12889 	ld	l, c
      003A23 60                   12890 	ld	h, b
      003A24 29                   12891 	add	hl, hl
      003A25 09                   12892 	add	hl, bc
      003A26 29                   12893 	add	hl, hl
      003A27 01r03r01             12894 	ld	bc,#_explosions
      003A2A 09                   12895 	add	hl,bc
      003A2B 23                   12896 	inc	hl
      003A2C 23                   12897 	inc	hl
      003A2D 23                   12898 	inc	hl
      003A2E 36 00                12899 	ld	(hl), #0x00
                                  12900 ;src/main.c:1534: explosions[oldestEx].frameCounter = 0;
      003A30 21r03r01             12901 	ld	hl, #_oldestEx
      003A33 4E                   12902 	ld	c, (hl)
      003A34 06 00                12903 	ld	b, #0x00
      003A36 69                   12904 	ld	l, c
      003A37 60                   12905 	ld	h, b
      003A38 29                   12906 	add	hl, hl
      003A39 09                   12907 	add	hl, bc
      003A3A 29                   12908 	add	hl, hl
      003A3B 01r03r01             12909 	ld	bc,#_explosions
      003A3E 09                   12910 	add	hl,bc
      003A3F 01 04 00             12911 	ld	bc, #0x0004
      003A42 09                   12912 	add	hl, bc
      003A43 36 00                12913 	ld	(hl), #0x00
                                  12914 ;src/main.c:1536: set_sprite_tile(20 + oldestEx+oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      003A45 21r03r01             12915 	ld	hl, #_oldestEx
      003A48 4E                   12916 	ld	c, (hl)
      003A49 06 00                12917 	ld	b, #0x00
      003A4B 69                   12918 	ld	l, c
      003A4C 60                   12919 	ld	h, b
      003A4D 29                   12920 	add	hl, hl
      003A4E 09                   12921 	add	hl, bc
      003A4F 29                   12922 	add	hl, hl
      003A50 01r03r01             12923 	ld	bc,#_explosions
      003A53 09                   12924 	add	hl,bc
      003A54 5D                   12925 	ld	e, l
      003A55 54                   12926 	ld	d, h
      003A56 21 05 00             12927 	ld	hl, #0x0005
      003A59 19                   12928 	add	hl, de
      003A5A 4E                   12929 	ld	c, (hl)
      003A5B 13                   12930 	inc	de
      003A5C 13                   12931 	inc	de
      003A5D 13                   12932 	inc	de
      003A5E 1A                   12933 	ld	a, (de)
      003A5F 87                   12934 	add	a, a
      003A60 81                   12935 	add	a, c
      003A61 4F                   12936 	ld	c, a
      003A62 21r03r01             12937 	ld	hl, #_oldestEx
      003A65 46                   12938 	ld	b, (hl)
      003A66 78                   12939 	ld	a, b
      003A67 C6 14                12940 	add	a, #0x14
      003A69 80                   12941 	add	a, b
                                  12942 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003A6A 6F                   12943 	ld	l, a
      003A6B 11r00r00             12944 	ld	de, #_shadow_OAM+0
                                  12945 ;	spillPairReg hl
                                  12946 ;	spillPairReg hl
      003A6E 26 00                12947 	ld	h, #0x00
                                  12948 ;	spillPairReg hl
                                  12949 ;	spillPairReg hl
      003A70 29                   12950 	add	hl, hl
      003A71 29                   12951 	add	hl, hl
      003A72 19                   12952 	add	hl, de
      003A73 23                   12953 	inc	hl
      003A74 23                   12954 	inc	hl
      003A75 71                   12955 	ld	(hl), c
                                  12956 ;src/main.c:1537: set_sprite_tile(21 + oldestEx+oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      003A76 21r03r01             12957 	ld	hl, #_oldestEx
      003A79 4E                   12958 	ld	c, (hl)
      003A7A 06 00                12959 	ld	b, #0x00
      003A7C 69                   12960 	ld	l, c
      003A7D 60                   12961 	ld	h, b
      003A7E 29                   12962 	add	hl, hl
      003A7F 09                   12963 	add	hl, bc
      003A80 29                   12964 	add	hl, hl
      003A81 01r03r01             12965 	ld	bc,#_explosions
      003A84 09                   12966 	add	hl,bc
      003A85 5D                   12967 	ld	e, l
      003A86 54                   12968 	ld	d, h
      003A87 21 05 00             12969 	ld	hl, #0x0005
      003A8A 19                   12970 	add	hl, de
      003A8B 4E                   12971 	ld	c, (hl)
      003A8C 13                   12972 	inc	de
      003A8D 13                   12973 	inc	de
      003A8E 13                   12974 	inc	de
      003A8F 1A                   12975 	ld	a, (de)
      003A90 87                   12976 	add	a, a
      003A91 81                   12977 	add	a, c
      003A92 C6 02                12978 	add	a, #0x02
      003A94 4F                   12979 	ld	c, a
      003A95 21r03r01             12980 	ld	hl, #_oldestEx
      003A98 46                   12981 	ld	b, (hl)
      003A99 78                   12982 	ld	a, b
      003A9A C6 15                12983 	add	a, #0x15
      003A9C 80                   12984 	add	a, b
                                  12985 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003A9D 6F                   12986 	ld	l, a
      003A9E 11r00r00             12987 	ld	de, #_shadow_OAM+0
                                  12988 ;	spillPairReg hl
                                  12989 ;	spillPairReg hl
      003AA1 26 00                12990 	ld	h, #0x00
                                  12991 ;	spillPairReg hl
                                  12992 ;	spillPairReg hl
      003AA3 29                   12993 	add	hl, hl
      003AA4 29                   12994 	add	hl, hl
      003AA5 19                   12995 	add	hl, de
      003AA6 23                   12996 	inc	hl
      003AA7 23                   12997 	inc	hl
      003AA8 71                   12998 	ld	(hl), c
                                  12999 ;src/main.c:1539: oldestEx++;
      003AA9 21r03r01             13000 	ld	hl, #_oldestEx
      003AAC 34                   13001 	inc	(hl)
                                  13002 ;src/main.c:1540: if (oldestEx >= exCount) {
      003AAD 21rC5r0B             13003 	ld	hl, #_exCount
      003AB0 4E                   13004 	ld	c, (hl)
      003AB1 21r03r01             13005 	ld	hl, #_oldestEx
      003AB4 7E                   13006 	ld	a, (hl)
      003AB5 91                   13007 	sub	a, c
      003AB6 38 02                13008 	jr	C, 00140$
                                  13009 ;src/main.c:1541: oldestEx = 0;
      003AB8 36 00                13010 	ld	(hl), #0x00
      003ABA                      13011 00140$:
                                  13012 ;src/main.c:1543: endExCount++;
      003ABA F8 03                13013 	ldhl	sp,	#3
      003ABC 34                   13014 	inc	(hl)
      003ABD                      13015 00142$:
                                  13016 ;src/main.c:1546: SHOW_WIN;	
      003ABD F0r00                13017 	ldh	a, (_LCDC_REG + 0)
      003ABF F6 20                13018 	or	a, #0x20
      003AC1 E0r00                13019 	ldh	(_LCDC_REG + 0), a
                                  13020 ;src/main.c:1548: wait_vbl_done();
      003AC3 CDr00r00             13021 	call	_wait_vbl_done
      003AC6 C3r52r39             13022 	jp	00143$
      003AC9                      13023 00145$:
                                  13024 ;src/main.c:1551: for (uint8_t j=0; j<exCount; ++j) {
      003AC9 0E 00                13025 	ld	c, #0x00
      003ACB                      13026 00165$:
      003ACB 21rC5r0B             13027 	ld	hl, #_exCount
      003ACE 46                   13028 	ld	b, (hl)
      003ACF 79                   13029 	ld	a, c
      003AD0 90                   13030 	sub	a, b
      003AD1 30 28                13031 	jr	NC, 00146$
                                  13032 ;src/main.c:1553: move_sprite(20 +j+j, 200, 200);
      003AD3 41                   13033 	ld	b, c
      003AD4 78                   13034 	ld	a, b
      003AD5 C6 14                13035 	add	a, #0x14
      003AD7 80                   13036 	add	a, b
                                  13037 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003AD8 6F                   13038 	ld	l, a
                                  13039 ;	spillPairReg hl
                                  13040 ;	spillPairReg hl
      003AD9 26 00                13041 	ld	h, #0x00
                                  13042 ;	spillPairReg hl
                                  13043 ;	spillPairReg hl
      003ADB 29                   13044 	add	hl, hl
      003ADC 29                   13045 	add	hl, hl
      003ADD 11r00r00             13046 	ld	de, #_shadow_OAM
      003AE0 19                   13047 	add	hl, de
                                  13048 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003AE1 3E C8                13049 	ld	a, #0xc8
      003AE3 22                   13050 	ld	(hl+), a
      003AE4 36 C8                13051 	ld	(hl), #0xc8
                                  13052 ;src/main.c:1554: move_sprite(21 +j+j, 200, 200);
      003AE6 78                   13053 	ld	a, b
      003AE7 C6 15                13054 	add	a, #0x15
      003AE9 80                   13055 	add	a, b
                                  13056 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003AEA 6F                   13057 	ld	l, a
      003AEB 11r00r00             13058 	ld	de, #_shadow_OAM+0
                                  13059 ;	spillPairReg hl
                                  13060 ;	spillPairReg hl
      003AEE 26 00                13061 	ld	h, #0x00
                                  13062 ;	spillPairReg hl
                                  13063 ;	spillPairReg hl
      003AF0 29                   13064 	add	hl, hl
      003AF1 29                   13065 	add	hl, hl
      003AF2 19                   13066 	add	hl, de
                                  13067 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003AF3 3E C8                13068 	ld	a, #0xc8
      003AF5 22                   13069 	ld	(hl+), a
      003AF6 36 C8                13070 	ld	(hl), #0xc8
                                  13071 ;src/main.c:1551: for (uint8_t j=0; j<exCount; ++j) {
      003AF8 0C                   13072 	inc	c
      003AF9 18 D0                13073 	jr	00165$
      003AFB                      13074 00146$:
                                  13075 ;src/main.c:1556: for (uint16_t k=0; k<180; ++k) {
      003AFB 01 00 00             13076 	ld	bc, #0x0000
      003AFE                      13077 00168$:
      003AFE 59                   13078 	ld	e, c
      003AFF 50                   13079 	ld	d, b
      003B00 7B                   13080 	ld	a, e
      003B01 D6 B4                13081 	sub	a, #0xb4
      003B03 7A                   13082 	ld	a, d
      003B04 DE 00                13083 	sbc	a, #0x00
      003B06 30 12                13084 	jr	NC, 00147$
                                  13085 ;src/main.c:1557: SHOW_SPRITES;
      003B08 F0r00                13086 	ldh	a, (_LCDC_REG + 0)
      003B0A F6 02                13087 	or	a, #0x02
      003B0C E0r00                13088 	ldh	(_LCDC_REG + 0), a
                                  13089 ;src/main.c:1558: SHOW_WIN;
      003B0E F0r00                13090 	ldh	a, (_LCDC_REG + 0)
      003B10 F6 20                13091 	or	a, #0x20
      003B12 E0r00                13092 	ldh	(_LCDC_REG + 0), a
                                  13093 ;src/main.c:1559: wait_vbl_done();
      003B14 CDr00r00             13094 	call	_wait_vbl_done
                                  13095 ;src/main.c:1556: for (uint16_t k=0; k<180; ++k) {
      003B17 03                   13096 	inc	bc
      003B18 18 E4                13097 	jr	00168$
      003B1A                      13098 00147$:
                                  13099 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      003B1A F3                   13100 	di
                                  13101 ;src/main.c:1563: showScoreScreen();
      003B1B CDrD9r35             13102 	call	_showScoreScreen
                                  13103 ;src/main.c:1564: waitpad(J_A | J_B | J_DOWN | J_LEFT | J_RIGHT | J_UP | J_SELECT | J_START);
      003B1E 3E FF                13104 	ld	a, #0xff
      003B20 F5                   13105 	push	af
      003B21 33                   13106 	inc	sp
      003B22 CDr00r00             13107 	call	_waitpad
      003B25 33                   13108 	inc	sp
                                  13109 ;src/main.c:1565: waitpadup();
      003B26 CDr00r00             13110 	call	_waitpadup
      003B29 C3rA6r37             13111 	jp	00149$
                                  13112 ;src/main.c:1569: }
      003B2C E8 04                13113 	add	sp, #4
      003B2E C9                   13114 	ret
                                  13115 	.area _CODE
                                  13116 	.area _INITIALIZER
      000000                      13117 __xinit__hullabel:
      000000 12                   13118 	.db #0x12	; 18
      000001 1F                   13119 	.db #0x1f	; 31
      000002 16                   13120 	.db #0x16	; 22
      000003 16                   13121 	.db #0x16	; 22
      000004                      13122 __xinit__shieldlabel:
      000004 1D                   13123 	.db #0x1d	; 29
      000005 12                   13124 	.db #0x12	; 18
      000006 16                   13125 	.db #0x16	; 22
      000007 0E                   13126 	.db #0x0e	; 14
      000008                      13127 __xinit__weaponlabel:
      000008 21                   13128 	.db #0x21	; 33
      000009 0F                   13129 	.db #0x0f	; 15
      00000A 1A                   13130 	.db #0x1a	; 26
      00000B 18                   13131 	.db #0x18	; 24
      00000C                      13132 __xinit__scorelabel:
      00000C 1D                   13133 	.db #0x1d	; 29
      00000D 0D                   13134 	.db #0x0d	; 13
      00000E 1C                   13135 	.db #0x1c	; 28
      00000F 0F                   13136 	.db #0x0f	; 15
      000010                      13137 __xinit__endScoreLabel:
      000010 1D                   13138 	.db #0x1d	; 29
      000011 0D                   13139 	.db #0x0d	; 13
      000012 19                   13140 	.db #0x19	; 25
      000013 1C                   13141 	.db #0x1c	; 28
      000014 0F                   13142 	.db #0x0f	; 15
      000015                      13143 __xinit__pressAnyKeyLabel:
      000015 1A                   13144 	.db #0x1a	; 26
      000016 1C                   13145 	.db #0x1c	; 28
      000017 0F                   13146 	.db #0x0f	; 15
      000018 1D                   13147 	.db #0x1d	; 29
      000019 1D                   13148 	.db #0x1d	; 29
      00001A 00                   13149 	.db #0x00	; 0
      00001B 0B                   13150 	.db #0x0b	; 11
      00001C 18                   13151 	.db #0x18	; 24
      00001D 23                   13152 	.db #0x23	; 35
      00001E 00                   13153 	.db #0x00	; 0
      00001F 15                   13154 	.db #0x15	; 21
      000020 0F                   13155 	.db #0x0f	; 15
      000021 23                   13156 	.db #0x23	; 35
      000022                      13157 __xinit__toContinueLabel:
      000022 1E                   13158 	.db #0x1e	; 30
      000023 19                   13159 	.db #0x19	; 25
      000024 00                   13160 	.db #0x00	; 0
      000025 0D                   13161 	.db #0x0d	; 13
      000026 19                   13162 	.db #0x19	; 25
      000027 18                   13163 	.db #0x18	; 24
      000028 1E                   13164 	.db #0x1e	; 30
      000029 13                   13165 	.db #0x13	; 19
      00002A 18                   13166 	.db #0x18	; 24
      00002B 1F                   13167 	.db #0x1f	; 31
      00002C 0F                   13168 	.db #0x0f	; 15
      00002D                      13169 __xinit__emptyRow:
      00002D 00                   13170 	.db #0x00	; 0
      00002E 00                   13171 	.db #0x00	; 0
      00002F 00                   13172 	.db #0x00	; 0
      000030 00                   13173 	.db #0x00	; 0
      000031 00                   13174 	.db #0x00	; 0
      000032 00                   13175 	.db #0x00	; 0
      000033 00                   13176 	.db #0x00	; 0
      000034 00                   13177 	.db #0x00	; 0
      000035 00                   13178 	.db #0x00	; 0
      000036 00                   13179 	.db #0x00	; 0
      000037 00                   13180 	.db #0x00	; 0
      000038 00                   13181 	.db #0x00	; 0
      000039 00                   13182 	.db #0x00	; 0
      00003A 00                   13183 	.db #0x00	; 0
      00003B 00                   13184 	.db #0x00	; 0
      00003C 00                   13185 	.db #0x00	; 0
      00003D 00                   13186 	.db #0x00	; 0
      00003E 00                   13187 	.db #0x00	; 0
      00003F 00                   13188 	.db #0x00	; 0
      000040 00                   13189 	.db #0x00	; 0
      000041                      13190 __xinit__pressStartLabel:
      000041 1A                   13191 	.db #0x1a	; 26
      000042 1C                   13192 	.db #0x1c	; 28
      000043 0F                   13193 	.db #0x0f	; 15
      000044 1D                   13194 	.db #0x1d	; 29
      000045 1D                   13195 	.db #0x1d	; 29
      000046 00                   13196 	.db #0x00	; 0
      000047 1D                   13197 	.db #0x1d	; 29
      000048 1E                   13198 	.db #0x1e	; 30
      000049 0B                   13199 	.db #0x0b	; 11
      00004A 1C                   13200 	.db #0x1c	; 28
      00004B 1E                   13201 	.db #0x1e	; 30
      00004C                      13202 __xinit__playLabel:
      00004C 1A                   13203 	.db #0x1a	; 26
      00004D 16                   13204 	.db #0x16	; 22
      00004E 0B                   13205 	.db #0x0b	; 11
      00004F 23                   13206 	.db #0x23	; 35
      000050                      13207 __xinit__controlsLabel:
      000050 0D                   13208 	.db #0x0d	; 13
      000051 19                   13209 	.db #0x19	; 25
      000052 18                   13210 	.db #0x18	; 24
      000053 1E                   13211 	.db #0x1e	; 30
      000054 1C                   13212 	.db #0x1c	; 28
      000055 19                   13213 	.db #0x19	; 25
      000056 16                   13214 	.db #0x16	; 22
      000057 1D                   13215 	.db #0x1d	; 29
      000058                      13216 __xinit__blob:
      000058 00 00                13217 	.dw #0x0000
      00005A 00 00                13218 	.dw #0x0000
      00005C 00                   13219 	.db #0x00	;  0
      00005D 00                   13220 	.db #0x00	;  0
      00005E 40                   13221 	.db #0x40	; 64
      00005F 00                   13222 	.db #0x00	; 0
      000060 01                   13223 	.db #0x01	; 1
      000061 01                   13224 	.db #0x01	; 1
      000062 01                   13225 	.db #0x01	; 1
      000063 32                   13226 	.db #0x32	; 50	'2'
      000064 03                   13227 	.db #0x03	;  3
      000065 01                   13228 	.db #0x01	; 1
      000066 00                   13229 	.db #0x00	;  0
      000067 00                   13230 	.db #0x00	;  0
      000068 32 00                13231 	.dw #0x0032
      00006A                      13232 __xinit__bomb:
      00006A 00 00                13233 	.dw #0x0000
      00006C 00 00                13234 	.dw #0x0000
      00006E 00                   13235 	.db #0x00	;  0
      00006F 00                   13236 	.db #0x00	;  0
      000070 42                   13237 	.db #0x42	; 66	'B'
      000071 00                   13238 	.db #0x00	; 0
      000072 01                   13239 	.db #0x01	; 1
      000073 01                   13240 	.db #0x01	; 1
      000074 01                   13241 	.db #0x01	; 1
      000075 32                   13242 	.db #0x32	; 50	'2'
      000076 05                   13243 	.db #0x05	;  5
      000077 01                   13244 	.db #0x01	; 1
      000078 00                   13245 	.db #0x00	;  0
      000079 00                   13246 	.db #0x00	;  0
      00007A 32 00                13247 	.dw #0x0032
      00007C                      13248 __xinit__miniship:
      00007C 00 00                13249 	.dw #0x0000
      00007E 00 00                13250 	.dw #0x0000
      000080 00                   13251 	.db #0x00	;  0
      000081 00                   13252 	.db #0x00	;  0
      000082 44                   13253 	.db #0x44	; 68	'D'
      000083 00                   13254 	.db #0x00	; 0
      000084 01                   13255 	.db #0x01	; 1
      000085 01                   13256 	.db #0x01	; 1
      000086 01                   13257 	.db #0x01	; 1
      000087 32                   13258 	.db #0x32	; 50	'2'
      000088 05                   13259 	.db #0x05	;  5
      000089 01                   13260 	.db #0x01	; 1
      00008A 00                   13261 	.db #0x00	;  0
      00008B 00                   13262 	.db #0x00	;  0
      00008C 32 00                13263 	.dw #0x0032
      00008E                      13264 __xinit__bigblob:
      00008E 00 00                13265 	.dw #0x0000
      000090 00 00                13266 	.dw #0x0000
      000092 00                   13267 	.db #0x00	;  0
      000093 00                   13268 	.db #0x00	;  0
      000094 50                   13269 	.db #0x50	; 80	'P'
      000095 52                   13270 	.db #0x52	; 82	'R'
      000096 02                   13271 	.db #0x02	; 2
      000097 01                   13272 	.db #0x01	; 1
      000098 01                   13273 	.db #0x01	; 1
      000099 32                   13274 	.db #0x32	; 50	'2'
      00009A 03                   13275 	.db #0x03	;  3
      00009B 01                   13276 	.db #0x01	; 1
      00009C 00                   13277 	.db #0x00	;  0
      00009D 00                   13278 	.db #0x00	;  0
      00009E 64 00                13279 	.dw #0x0064
      0000A0                      13280 __xinit__shieldship:
      0000A0 00 00                13281 	.dw #0x0000
      0000A2 00 00                13282 	.dw #0x0000
      0000A4 00                   13283 	.db #0x00	;  0
      0000A5 00                   13284 	.db #0x00	;  0
      0000A6 54                   13285 	.db #0x54	; 84	'T'
      0000A7 56                   13286 	.db #0x56	; 86	'V'
      0000A8 02                   13287 	.db #0x02	; 2
      0000A9 01                   13288 	.db #0x01	; 1
      0000AA 01                   13289 	.db #0x01	; 1
      0000AB 32                   13290 	.db #0x32	; 50	'2'
      0000AC 03                   13291 	.db #0x03	;  3
      0000AD 01                   13292 	.db #0x01	; 1
      0000AE 00                   13293 	.db #0x00	;  0
      0000AF 00                   13294 	.db #0x00	;  0
      0000B0 46 00                13295 	.dw #0x0046
      0000B2                      13296 __xinit__singleGun:
      0000B2 00 00                13297 	.dw #0x0000
      0000B4 00 00                13298 	.dw #0x0000
      0000B6 00                   13299 	.db #0x00	;  0
      0000B7 00                   13300 	.db #0x00	;  0
      0000B8 FF                   13301 	.db #0xff	; -1
      0000B9 02                   13302 	.db #0x02	; 2
      0000BA 32 00                13303 	.dw #0x0032
      0000BC 01                   13304 	.db #0x01	; 1
      0000BD 0F                   13305 	.db #0x0f	; 15
      0000BE 20                   13306 	.db #0x20	; 32
      0000BF                      13307 __xinit__doubleGun:
      0000BF 00 00                13308 	.dw #0x0000
      0000C1 00 00                13309 	.dw #0x0000
      0000C3 00                   13310 	.db #0x00	;  0
      0000C4 00                   13311 	.db #0x00	;  0
      0000C5 FF                   13312 	.db #0xff	; -1
      0000C6 02                   13313 	.db #0x02	; 2
      0000C7 46 00                13314 	.dw #0x0046
      0000C9 01                   13315 	.db #0x01	; 1
      0000CA 0F                   13316 	.db #0x0f	; 15
      0000CB 26                   13317 	.db #0x26	; 38
      0000CC                      13318 __xinit__missile:
      0000CC 00 00                13319 	.dw #0x0000
      0000CE 00 00                13320 	.dw #0x0000
      0000D0 00                   13321 	.db #0x00	;  0
      0000D1 00                   13322 	.db #0x00	;  0
      0000D2 FF                   13323 	.db #0xff	; -1
      0000D3 01                   13324 	.db #0x01	; 1
      0000D4 64 00                13325 	.dw #0x0064
      0000D6 01                   13326 	.db #0x01	; 1
      0000D7 1E                   13327 	.db #0x1e	; 30
      0000D8 2C                   13328 	.db #0x2c	; 44
      0000D9                      13329 __xinit__oldestProjectile:
      0000D9 00                   13330 	.db #0x00	; 0
      0000DA                      13331 __xinit__fireCooldown:
      0000DA 00                   13332 	.db #0x00	; 0
      0000DB                      13333 __xinit__xDir:
      0000DB 00                   13334 	.db #0x00	;  0
      0000DC                      13335 __xinit__yDir:
      0000DC FF                   13336 	.db #0xff	; -1
      0000DD                      13337 __xinit__xSpeed:
      0000DD 00                   13338 	.db #0x00	;  0
      0000DE                      13339 __xinit__ySpeed:
      0000DE 00                   13340 	.db #0x00	;  0
      0000DF                      13341 __xinit__playerX:
      0000DF 00 0A                13342 	.dw #0x0a00
      0000E1                      13343 __xinit__playerY:
      0000E1 00 0A                13344 	.dw #0x0a00
      0000E3                      13345 __xinit__playerDrawX:
      0000E3 50                   13346 	.db #0x50	; 80	'P'
      0000E4                      13347 __xinit__playerDrawY:
      0000E4 50                   13348 	.db #0x50	; 80	'P'
      0000E5                      13349 __xinit__bgX:
      0000E5 00 00                13350 	.dw #0x0000
      0000E7                      13351 __xinit__bgY:
      0000E7 00 00                13352 	.dw #0x0000
      0000E9                      13353 __xinit__xOverflow:
      0000E9 00 00                13354 	.dw #0x0000
      0000EB                      13355 __xinit__yOverflow:
      0000EB 00 00                13356 	.dw #0x0000
      0000ED                      13357 __xinit__enemyCollisionCount:
      0000ED 00                   13358 	.db #0x00	; 0
      0000EE                      13359 __xinit__gunLevel:
      0000EE 00                   13360 	.db #0x00	; 0
      0000EF                      13361 __xinit__currentGun:
      0000EF 00                   13362 	.db #0x00	; 0
      0000F0                      13363 __xinit__missiles:
      0000F0 00                   13364 	.db #0x00	; 0
      0000F1                      13365 __xinit__MISSILES:
      0000F1 00 00 00 00          13366 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000F5                      13367 __xinit__switchDelay:
      0000F5 00                   13368 	.db #0x00	; 0
      0000F6                      13369 __xinit__gunMap:
      0000F6 53                   13370 	.db #0x53	; 83	'S'
      0000F7 5B                   13371 	.db #0x5b	; 91
      0000F8 61                   13372 	.db #0x61	; 97	'a'
      0000F9                      13373 __xinit__score:
      0000F9 00 00                13374 	.dw #0x0000
      0000FB                      13375 __xinit__SCORE:
      0000FB 00 00 00 00          13376 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000FF                      13377 __xinit__INCREMENT:
      0000FF 01 00 00 00          13378 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      000103                      13379 __xinit__oldestEx:
      000103 00                   13380 	.db #0x00	; 0
      000104                      13381 __xinit__exTiles:
      000104 80                   13382 	.db #0x80	; 128
      000105 90                   13383 	.db #0x90	; 144
      000106 A0                   13384 	.db #0xa0	; 160
      000107                      13385 __xinit__auxTick:
      000107 01                   13386 	.db #0x01	; 1
                                  13387 	.area _CABS (ABS)
