                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _showScoreScreen
                                     13 	.globl _initGame
                                     14 	.globl _initProjectiles
                                     15 	.globl _initEnemyOptions
                                     16 	.globl _tickEx
                                     17 	.globl _tickPickups
                                     18 	.globl _moveProjectiles
                                     19 	.globl _fire
                                     20 	.globl _setGunIcon
                                     21 	.globl _checkCollision
                                     22 	.globl _killEnemy
                                     23 	.globl _spawnPickup
                                     24 	.globl _takeDamage
                                     25 	.globl _move
                                     26 	.globl _updateEnemyPositions
                                     27 	.globl _initEnemy
                                     28 	.globl _initEnemies
                                     29 	.globl _playSound
                                     30 	.globl _updateDirection
                                     31 	.globl _incrementScore
                                     32 	.globl _updateMissileCount
                                     33 	.globl _updateScore
                                     34 	.globl _setHealthBar
                                     35 	.globl _interruptLCD
                                     36 	.globl _bcd2text
                                     37 	.globl _bcd_sub
                                     38 	.globl _bcd_add
                                     39 	.globl _rand
                                     40 	.globl _initrand
                                     41 	.globl _font_set
                                     42 	.globl _font_load
                                     43 	.globl _font_init
                                     44 	.globl _printf
                                     45 	.globl _set_sprite_data
                                     46 	.globl _set_win_tiles
                                     47 	.globl _set_bkg_tiles
                                     48 	.globl _set_bkg_data
                                     49 	.globl _wait_vbl_done
                                     50 	.globl _set_interrupts
                                     51 	.globl _waitpad
                                     52 	.globl _joypad
                                     53 	.globl _add_LCD
                                     54 	.globl _auxTick
                                     55 	.globl _exTiles
                                     56 	.globl _oldestEx
                                     57 	.globl _INCREMENT
                                     58 	.globl _SCORE
                                     59 	.globl _score
                                     60 	.globl _gunMap
                                     61 	.globl _switchDelay
                                     62 	.globl _MISSILES
                                     63 	.globl _missiles
                                     64 	.globl _currentGun
                                     65 	.globl _gunLevel
                                     66 	.globl _enemyCollisionCount
                                     67 	.globl _yOverflow
                                     68 	.globl _xOverflow
                                     69 	.globl _bgY
                                     70 	.globl _bgX
                                     71 	.globl _playerDrawY
                                     72 	.globl _playerDrawX
                                     73 	.globl _playerY
                                     74 	.globl _playerX
                                     75 	.globl _ySpeed
                                     76 	.globl _xSpeed
                                     77 	.globl _yDir
                                     78 	.globl _xDir
                                     79 	.globl _fireCooldown
                                     80 	.globl _oldestProjectile
                                     81 	.globl _missile
                                     82 	.globl _doubleGun
                                     83 	.globl _singleGun
                                     84 	.globl _shieldship
                                     85 	.globl _bigblob
                                     86 	.globl _miniship
                                     87 	.globl _bomb
                                     88 	.globl _blob
                                     89 	.globl _emptyRow
                                     90 	.globl _toContinueLabel
                                     91 	.globl _pressAnyKeyLabel
                                     92 	.globl _endScoreLabel
                                     93 	.globl _scorelabel
                                     94 	.globl _weaponlabel
                                     95 	.globl _shieldlabel
                                     96 	.globl _hullabel
                                     97 	.globl _explosions
                                     98 	.globl _pickup
                                     99 	.globl _min_font
                                    100 	.globl _shield
                                    101 	.globl _hull
                                    102 	.globl _joydata
                                    103 	.globl _projectiles
                                    104 	.globl _enemies
                                    105 	.globl _enemyOptions
                                    106 	.globl _AUXTICKFREQUENCY
                                    107 	.globl _exTileCount
                                    108 	.globl _EXPLFRAMETIME
                                    109 	.globl _exCount
                                    110 	.globl _SPLASHDROPOFF
                                    111 	.globl _MAXGUNLEVEL
                                    112 	.globl _maxShield
                                    113 	.globl _maxHull
                                    114 	.globl _PLAYERSIZE
                                    115 	.globl _PROJECTILECOUNT
                                    116 	.globl _ySpawnPositions
                                    117 	.globl _xSpawnPositions
                                    118 	.globl _ENEMYCOUNT
                                    119 	.globl _EMPTYSPRITE
                                    120 	.globl _BLANK
                                    121 	.globl _BLANKSIZE
                                    122 	.globl _Ex3
                                    123 	.globl _Ex2
                                    124 	.globl _Ex1
                                    125 	.globl _ex
                                    126 	.globl _Player1
                                    127 	.globl _Pickups
                                    128 	.globl _health
                                    129 	.globl _ammo
                                    130 	.globl _upgrade
                                    131 	.globl _ProjectileTiles
                                    132 	.globl _largeenemies
                                    133 	.globl _enemy1
                                    134 	.globl _enemyOptionCount
                                    135 	.globl _healthblock
                                    136 	.globl _backgroundtiles
                                    137 	.globl _background1
                                    138 	.globl _cross
                                    139 ;--------------------------------------------------------
                                    140 ; special function registers
                                    141 ;--------------------------------------------------------
                                    142 ;--------------------------------------------------------
                                    143 ; ram data
                                    144 ;--------------------------------------------------------
                                    145 	.area _DATA
      000000                        146 _enemyOptions::
      000000                        147 	.ds 90
      00005A                        148 _enemies::
      00005A                        149 	.ds 90
      0000B4                        150 _projectiles::
      0000B4                        151 	.ds 65
      0000F5                        152 _joydata::
      0000F5                        153 	.ds 1
      0000F6                        154 _hull::
      0000F6                        155 	.ds 1
      0000F7                        156 _shield::
      0000F7                        157 	.ds 1
      0000F8                        158 _min_font::
      0000F8                        159 	.ds 2
      0000FA                        160 _pickup::
      0000FA                        161 	.ds 9
      000103                        162 _explosions::
      000103                        163 	.ds 24
                                    164 ;--------------------------------------------------------
                                    165 ; ram data
                                    166 ;--------------------------------------------------------
                                    167 	.area _INITIALIZED
      000000                        168 _hullabel::
      000000                        169 	.ds 4
      000004                        170 _shieldlabel::
      000004                        171 	.ds 4
      000008                        172 _weaponlabel::
      000008                        173 	.ds 4
      00000C                        174 _scorelabel::
      00000C                        175 	.ds 4
      000010                        176 _endScoreLabel::
      000010                        177 	.ds 5
      000015                        178 _pressAnyKeyLabel::
      000015                        179 	.ds 13
      000022                        180 _toContinueLabel::
      000022                        181 	.ds 11
      00002D                        182 _emptyRow::
      00002D                        183 	.ds 20
      000041                        184 _blob::
      000041                        185 	.ds 18
      000053                        186 _bomb::
      000053                        187 	.ds 18
      000065                        188 _miniship::
      000065                        189 	.ds 18
      000077                        190 _bigblob::
      000077                        191 	.ds 18
      000089                        192 _shieldship::
      000089                        193 	.ds 18
      00009B                        194 _singleGun::
      00009B                        195 	.ds 13
      0000A8                        196 _doubleGun::
      0000A8                        197 	.ds 13
      0000B5                        198 _missile::
      0000B5                        199 	.ds 13
      0000C2                        200 _oldestProjectile::
      0000C2                        201 	.ds 1
      0000C3                        202 _fireCooldown::
      0000C3                        203 	.ds 1
      0000C4                        204 _xDir::
      0000C4                        205 	.ds 1
      0000C5                        206 _yDir::
      0000C5                        207 	.ds 1
      0000C6                        208 _xSpeed::
      0000C6                        209 	.ds 1
      0000C7                        210 _ySpeed::
      0000C7                        211 	.ds 1
      0000C8                        212 _playerX::
      0000C8                        213 	.ds 2
      0000CA                        214 _playerY::
      0000CA                        215 	.ds 2
      0000CC                        216 _playerDrawX::
      0000CC                        217 	.ds 1
      0000CD                        218 _playerDrawY::
      0000CD                        219 	.ds 1
      0000CE                        220 _bgX::
      0000CE                        221 	.ds 2
      0000D0                        222 _bgY::
      0000D0                        223 	.ds 2
      0000D2                        224 _xOverflow::
      0000D2                        225 	.ds 2
      0000D4                        226 _yOverflow::
      0000D4                        227 	.ds 2
      0000D6                        228 _enemyCollisionCount::
      0000D6                        229 	.ds 1
      0000D7                        230 _gunLevel::
      0000D7                        231 	.ds 1
      0000D8                        232 _currentGun::
      0000D8                        233 	.ds 1
      0000D9                        234 _missiles::
      0000D9                        235 	.ds 1
      0000DA                        236 _MISSILES::
      0000DA                        237 	.ds 4
      0000DE                        238 _switchDelay::
      0000DE                        239 	.ds 1
      0000DF                        240 _gunMap::
      0000DF                        241 	.ds 3
      0000E2                        242 _score::
      0000E2                        243 	.ds 2
      0000E4                        244 _SCORE::
      0000E4                        245 	.ds 4
      0000E8                        246 _INCREMENT::
      0000E8                        247 	.ds 4
      0000EC                        248 _oldestEx::
      0000EC                        249 	.ds 1
      0000ED                        250 _exTiles::
      0000ED                        251 	.ds 3
      0000F0                        252 _auxTick::
      0000F0                        253 	.ds 1
                                    254 ;--------------------------------------------------------
                                    255 ; absolute external ram data
                                    256 ;--------------------------------------------------------
                                    257 	.area _DABS (ABS)
                                    258 ;--------------------------------------------------------
                                    259 ; global & static initialisations
                                    260 ;--------------------------------------------------------
                                    261 	.area _HOME
                                    262 	.area _GSINIT
                                    263 	.area _GSFINAL
                                    264 	.area _GSINIT
                                    265 ;--------------------------------------------------------
                                    266 ; Home
                                    267 ;--------------------------------------------------------
                                    268 	.area _HOME
                                    269 	.area _HOME
                                    270 ;--------------------------------------------------------
                                    271 ; code
                                    272 ;--------------------------------------------------------
                                    273 	.area _CODE
                                    274 ;src/main.c:153: void interruptLCD()
                                    275 ;	---------------------------------
                                    276 ; Function interruptLCD
                                    277 ; ---------------------------------
      000000                        278 _interruptLCD::
                                    279 ;src/main.c:155: HIDE_SPRITES;
      000000 F0r00                  280 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  281 	and	a, #0xfd
      000004 E0r00                  282 	ldh	(_LCDC_REG + 0), a
                                    283 ;src/main.c:156: }
      000006 C9                     284 	ret
      000007                        285 _cross:
      000007 18                     286 	.db #0x18	; 24
      000008 18                     287 	.db #0x18	; 24
      000009 18                     288 	.db #0x18	; 24
      00000A 18                     289 	.db #0x18	; 24
      00000B 3C                     290 	.db #0x3c	; 60
      00000C 3C                     291 	.db #0x3c	; 60
      00000D 3C                     292 	.db #0x3c	; 60
      00000E 3C                     293 	.db #0x3c	; 60
      00000F 7E                     294 	.db #0x7e	; 126
      000010 7E                     295 	.db #0x7e	; 126
      000011 7E                     296 	.db #0x7e	; 126
      000012 7E                     297 	.db #0x7e	; 126
      000013 FF                     298 	.db #0xff	; 255
      000014 FF                     299 	.db #0xff	; 255
      000015 FF                     300 	.db #0xff	; 255
      000016 FF                     301 	.db #0xff	; 255
      000017 0F                     302 	.db #0x0f	; 15
      000018 0F                     303 	.db #0x0f	; 15
      000019 3F                     304 	.db #0x3f	; 63
      00001A 3F                     305 	.db #0x3f	; 63
      00001B FF                     306 	.db #0xff	; 255
      00001C FF                     307 	.db #0xff	; 255
      00001D FF                     308 	.db #0xff	; 255
      00001E FF                     309 	.db #0xff	; 255
      00001F 7E                     310 	.db #0x7e	; 126
      000020 7E                     311 	.db #0x7e	; 126
      000021 3E                     312 	.db #0x3e	; 62
      000022 3E                     313 	.db #0x3e	; 62
      000023 1C                     314 	.db #0x1c	; 28
      000024 1C                     315 	.db #0x1c	; 28
      000025 0C                     316 	.db #0x0c	; 12
      000026 0C                     317 	.db #0x0c	; 12
      000027 C0                     318 	.db #0xc0	; 192
      000028 C0                     319 	.db #0xc0	; 192
      000029 F0                     320 	.db #0xf0	; 240
      00002A F0                     321 	.db #0xf0	; 240
      00002B FC                     322 	.db #0xfc	; 252
      00002C FC                     323 	.db #0xfc	; 252
      00002D FF                     324 	.db #0xff	; 255
      00002E FF                     325 	.db #0xff	; 255
      00002F FF                     326 	.db #0xff	; 255
      000030 FF                     327 	.db #0xff	; 255
      000031 FC                     328 	.db #0xfc	; 252
      000032 FC                     329 	.db #0xfc	; 252
      000033 F0                     330 	.db #0xf0	; 240
      000034 F0                     331 	.db #0xf0	; 240
      000035 C0                     332 	.db #0xc0	; 192
      000036 C0                     333 	.db #0xc0	; 192
      000037 0C                     334 	.db #0x0c	; 12
      000038 0C                     335 	.db #0x0c	; 12
      000039 1C                     336 	.db #0x1c	; 28
      00003A 1C                     337 	.db #0x1c	; 28
      00003B 3E                     338 	.db #0x3e	; 62
      00003C 3E                     339 	.db #0x3e	; 62
      00003D 7E                     340 	.db #0x7e	; 126
      00003E 7E                     341 	.db #0x7e	; 126
      00003F FF                     342 	.db #0xff	; 255
      000040 FF                     343 	.db #0xff	; 255
      000041 FF                     344 	.db #0xff	; 255
      000042 FF                     345 	.db #0xff	; 255
      000043 3F                     346 	.db #0x3f	; 63
      000044 3F                     347 	.db #0x3f	; 63
      000045 0F                     348 	.db #0x0f	; 15
      000046 0F                     349 	.db #0x0f	; 15
      000047 FF                     350 	.db #0xff	; 255
      000048 FF                     351 	.db #0xff	; 255
      000049 FF                     352 	.db #0xff	; 255
      00004A FF                     353 	.db #0xff	; 255
      00004B 7E                     354 	.db #0x7e	; 126
      00004C 7E                     355 	.db #0x7e	; 126
      00004D 7E                     356 	.db #0x7e	; 126
      00004E 7E                     357 	.db #0x7e	; 126
      00004F 3C                     358 	.db #0x3c	; 60
      000050 3C                     359 	.db #0x3c	; 60
      000051 3C                     360 	.db #0x3c	; 60
      000052 3C                     361 	.db #0x3c	; 60
      000053 18                     362 	.db #0x18	; 24
      000054 18                     363 	.db #0x18	; 24
      000055 18                     364 	.db #0x18	; 24
      000056 18                     365 	.db #0x18	; 24
      000057 30                     366 	.db #0x30	; 48	'0'
      000058 30                     367 	.db #0x30	; 48	'0'
      000059 38                     368 	.db #0x38	; 56	'8'
      00005A 38                     369 	.db #0x38	; 56	'8'
      00005B 7C                     370 	.db #0x7c	; 124
      00005C 7C                     371 	.db #0x7c	; 124
      00005D 7E                     372 	.db #0x7e	; 126
      00005E 7E                     373 	.db #0x7e	; 126
      00005F FF                     374 	.db #0xff	; 255
      000060 FF                     375 	.db #0xff	; 255
      000061 FF                     376 	.db #0xff	; 255
      000062 FF                     377 	.db #0xff	; 255
      000063 FC                     378 	.db #0xfc	; 252
      000064 FC                     379 	.db #0xfc	; 252
      000065 F0                     380 	.db #0xf0	; 240
      000066 F0                     381 	.db #0xf0	; 240
      000067 03                     382 	.db #0x03	; 3
      000068 03                     383 	.db #0x03	; 3
      000069 0F                     384 	.db #0x0f	; 15
      00006A 0F                     385 	.db #0x0f	; 15
      00006B 3F                     386 	.db #0x3f	; 63
      00006C 3F                     387 	.db #0x3f	; 63
      00006D FF                     388 	.db #0xff	; 255
      00006E FF                     389 	.db #0xff	; 255
      00006F FF                     390 	.db #0xff	; 255
      000070 FF                     391 	.db #0xff	; 255
      000071 3F                     392 	.db #0x3f	; 63
      000072 3F                     393 	.db #0x3f	; 63
      000073 0F                     394 	.db #0x0f	; 15
      000074 0F                     395 	.db #0x0f	; 15
      000075 03                     396 	.db #0x03	; 3
      000076 03                     397 	.db #0x03	; 3
      000077 F0                     398 	.db #0xf0	; 240
      000078 F0                     399 	.db #0xf0	; 240
      000079 FC                     400 	.db #0xfc	; 252
      00007A FC                     401 	.db #0xfc	; 252
      00007B FF                     402 	.db #0xff	; 255
      00007C FF                     403 	.db #0xff	; 255
      00007D FF                     404 	.db #0xff	; 255
      00007E FF                     405 	.db #0xff	; 255
      00007F 7E                     406 	.db #0x7e	; 126
      000080 7E                     407 	.db #0x7e	; 126
      000081 7C                     408 	.db #0x7c	; 124
      000082 7C                     409 	.db #0x7c	; 124
      000083 38                     410 	.db #0x38	; 56	'8'
      000084 38                     411 	.db #0x38	; 56	'8'
      000085 30                     412 	.db #0x30	; 48	'0'
      000086 30                     413 	.db #0x30	; 48	'0'
      000087                        414 _background1:
      000087 26                     415 	.db #0x26	; 38
      000088 26                     416 	.db #0x26	; 38
      000089 26                     417 	.db #0x26	; 38
      00008A 26                     418 	.db #0x26	; 38
      00008B 26                     419 	.db #0x26	; 38
      00008C 26                     420 	.db #0x26	; 38
      00008D 26                     421 	.db #0x26	; 38
      00008E 26                     422 	.db #0x26	; 38
      00008F 26                     423 	.db #0x26	; 38
      000090 26                     424 	.db #0x26	; 38
      000091 26                     425 	.db #0x26	; 38
      000092 2A                     426 	.db #0x2a	; 42
      000093 29                     427 	.db #0x29	; 41
      000094 26                     428 	.db #0x26	; 38
      000095 26                     429 	.db #0x26	; 38
      000096 26                     430 	.db #0x26	; 38
      000097 26                     431 	.db #0x26	; 38
      000098 26                     432 	.db #0x26	; 38
      000099 26                     433 	.db #0x26	; 38
      00009A 26                     434 	.db #0x26	; 38
      00009B 2C                     435 	.db #0x2c	; 44
      00009C 26                     436 	.db #0x26	; 38
      00009D 26                     437 	.db #0x26	; 38
      00009E 26                     438 	.db #0x26	; 38
      00009F 26                     439 	.db #0x26	; 38
      0000A0 26                     440 	.db #0x26	; 38
      0000A1 26                     441 	.db #0x26	; 38
      0000A2 26                     442 	.db #0x26	; 38
      0000A3 26                     443 	.db #0x26	; 38
      0000A4 26                     444 	.db #0x26	; 38
      0000A5 26                     445 	.db #0x26	; 38
      0000A6 26                     446 	.db #0x26	; 38
      0000A7 26                     447 	.db #0x26	; 38
      0000A8 2B                     448 	.db #0x2b	; 43
      0000A9 26                     449 	.db #0x26	; 38
      0000AA 26                     450 	.db #0x26	; 38
      0000AB 26                     451 	.db #0x26	; 38
      0000AC 26                     452 	.db #0x26	; 38
      0000AD 26                     453 	.db #0x26	; 38
      0000AE 26                     454 	.db #0x26	; 38
      0000AF 26                     455 	.db #0x26	; 38
      0000B0 26                     456 	.db #0x26	; 38
      0000B1 26                     457 	.db #0x26	; 38
      0000B2 26                     458 	.db #0x26	; 38
      0000B3 26                     459 	.db #0x26	; 38
      0000B4 26                     460 	.db #0x26	; 38
      0000B5 26                     461 	.db #0x26	; 38
      0000B6 26                     462 	.db #0x26	; 38
      0000B7 26                     463 	.db #0x26	; 38
      0000B8 26                     464 	.db #0x26	; 38
      0000B9 26                     465 	.db #0x26	; 38
      0000BA 26                     466 	.db #0x26	; 38
      0000BB 26                     467 	.db #0x26	; 38
      0000BC 26                     468 	.db #0x26	; 38
      0000BD 26                     469 	.db #0x26	; 38
      0000BE 26                     470 	.db #0x26	; 38
      0000BF 26                     471 	.db #0x26	; 38
      0000C0 26                     472 	.db #0x26	; 38
      0000C1 26                     473 	.db #0x26	; 38
      0000C2 26                     474 	.db #0x26	; 38
      0000C3 26                     475 	.db #0x26	; 38
      0000C4 26                     476 	.db #0x26	; 38
      0000C5 26                     477 	.db #0x26	; 38
      0000C6 26                     478 	.db #0x26	; 38
      0000C7 26                     479 	.db #0x26	; 38
      0000C8 26                     480 	.db #0x26	; 38
      0000C9 26                     481 	.db #0x26	; 38
      0000CA 26                     482 	.db #0x26	; 38
      0000CB 26                     483 	.db #0x26	; 38
      0000CC 26                     484 	.db #0x26	; 38
      0000CD 26                     485 	.db #0x26	; 38
      0000CE 26                     486 	.db #0x26	; 38
      0000CF 26                     487 	.db #0x26	; 38
      0000D0 26                     488 	.db #0x26	; 38
      0000D1 26                     489 	.db #0x26	; 38
      0000D2 26                     490 	.db #0x26	; 38
      0000D3 26                     491 	.db #0x26	; 38
      0000D4 26                     492 	.db #0x26	; 38
      0000D5 26                     493 	.db #0x26	; 38
      0000D6 26                     494 	.db #0x26	; 38
      0000D7 26                     495 	.db #0x26	; 38
      0000D8 26                     496 	.db #0x26	; 38
      0000D9 26                     497 	.db #0x26	; 38
      0000DA 26                     498 	.db #0x26	; 38
      0000DB 26                     499 	.db #0x26	; 38
      0000DC 26                     500 	.db #0x26	; 38
      0000DD 26                     501 	.db #0x26	; 38
      0000DE 26                     502 	.db #0x26	; 38
      0000DF 26                     503 	.db #0x26	; 38
      0000E0 26                     504 	.db #0x26	; 38
      0000E1 26                     505 	.db #0x26	; 38
      0000E2 26                     506 	.db #0x26	; 38
      0000E3 26                     507 	.db #0x26	; 38
      0000E4 26                     508 	.db #0x26	; 38
      0000E5 26                     509 	.db #0x26	; 38
      0000E6 26                     510 	.db #0x26	; 38
      0000E7 26                     511 	.db #0x26	; 38
      0000E8 26                     512 	.db #0x26	; 38
      0000E9 26                     513 	.db #0x26	; 38
      0000EA 26                     514 	.db #0x26	; 38
      0000EB 26                     515 	.db #0x26	; 38
      0000EC 26                     516 	.db #0x26	; 38
      0000ED 26                     517 	.db #0x26	; 38
      0000EE 26                     518 	.db #0x26	; 38
      0000EF 26                     519 	.db #0x26	; 38
      0000F0 26                     520 	.db #0x26	; 38
      0000F1 26                     521 	.db #0x26	; 38
      0000F2 26                     522 	.db #0x26	; 38
      0000F3 26                     523 	.db #0x26	; 38
      0000F4 26                     524 	.db #0x26	; 38
      0000F5 26                     525 	.db #0x26	; 38
      0000F6 26                     526 	.db #0x26	; 38
      0000F7 26                     527 	.db #0x26	; 38
      0000F8 2B                     528 	.db #0x2b	; 43
      0000F9 26                     529 	.db #0x26	; 38
      0000FA 26                     530 	.db #0x26	; 38
      0000FB 26                     531 	.db #0x26	; 38
      0000FC 26                     532 	.db #0x26	; 38
      0000FD 26                     533 	.db #0x26	; 38
      0000FE 26                     534 	.db #0x26	; 38
      0000FF 2B                     535 	.db #0x2b	; 43
      000100 26                     536 	.db #0x26	; 38
      000101 26                     537 	.db #0x26	; 38
      000102 26                     538 	.db #0x26	; 38
      000103 26                     539 	.db #0x26	; 38
      000104 26                     540 	.db #0x26	; 38
      000105 26                     541 	.db #0x26	; 38
      000106 26                     542 	.db #0x26	; 38
      000107 26                     543 	.db #0x26	; 38
      000108 26                     544 	.db #0x26	; 38
      000109 26                     545 	.db #0x26	; 38
      00010A 26                     546 	.db #0x26	; 38
      00010B 26                     547 	.db #0x26	; 38
      00010C 2B                     548 	.db #0x2b	; 43
      00010D 26                     549 	.db #0x26	; 38
      00010E 26                     550 	.db #0x26	; 38
      00010F 26                     551 	.db #0x26	; 38
      000110 26                     552 	.db #0x26	; 38
      000111 26                     553 	.db #0x26	; 38
      000112 26                     554 	.db #0x26	; 38
      000113 26                     555 	.db #0x26	; 38
      000114 2C                     556 	.db #0x2c	; 44
      000115 26                     557 	.db #0x26	; 38
      000116 26                     558 	.db #0x26	; 38
      000117 26                     559 	.db #0x26	; 38
      000118 26                     560 	.db #0x26	; 38
      000119 26                     561 	.db #0x26	; 38
      00011A 26                     562 	.db #0x26	; 38
      00011B 26                     563 	.db #0x26	; 38
      00011C 26                     564 	.db #0x26	; 38
      00011D 26                     565 	.db #0x26	; 38
      00011E 26                     566 	.db #0x26	; 38
      00011F 26                     567 	.db #0x26	; 38
      000120 26                     568 	.db #0x26	; 38
      000121 26                     569 	.db #0x26	; 38
      000122 26                     570 	.db #0x26	; 38
      000123 26                     571 	.db #0x26	; 38
      000124 26                     572 	.db #0x26	; 38
      000125 26                     573 	.db #0x26	; 38
      000126 26                     574 	.db #0x26	; 38
      000127 26                     575 	.db #0x26	; 38
      000128 26                     576 	.db #0x26	; 38
      000129 2C                     577 	.db #0x2c	; 44
      00012A 26                     578 	.db #0x26	; 38
      00012B 26                     579 	.db #0x26	; 38
      00012C 26                     580 	.db #0x26	; 38
      00012D 26                     581 	.db #0x26	; 38
      00012E 25                     582 	.db #0x25	; 37
      00012F 26                     583 	.db #0x26	; 38
      000130 26                     584 	.db #0x26	; 38
      000131 26                     585 	.db #0x26	; 38
      000132 26                     586 	.db #0x26	; 38
      000133 26                     587 	.db #0x26	; 38
      000134 26                     588 	.db #0x26	; 38
      000135 26                     589 	.db #0x26	; 38
      000136 26                     590 	.db #0x26	; 38
      000137 26                     591 	.db #0x26	; 38
      000138 26                     592 	.db #0x26	; 38
      000139 26                     593 	.db #0x26	; 38
      00013A 26                     594 	.db #0x26	; 38
      00013B 26                     595 	.db #0x26	; 38
      00013C 2C                     596 	.db #0x2c	; 44
      00013D 26                     597 	.db #0x26	; 38
      00013E 26                     598 	.db #0x26	; 38
      00013F 26                     599 	.db #0x26	; 38
      000140 26                     600 	.db #0x26	; 38
      000141 26                     601 	.db #0x26	; 38
      000142 26                     602 	.db #0x26	; 38
      000143 26                     603 	.db #0x26	; 38
      000144 2B                     604 	.db #0x2b	; 43
      000145 26                     605 	.db #0x26	; 38
      000146 26                     606 	.db #0x26	; 38
      000147 26                     607 	.db #0x26	; 38
      000148 26                     608 	.db #0x26	; 38
      000149 26                     609 	.db #0x26	; 38
      00014A 26                     610 	.db #0x26	; 38
      00014B 26                     611 	.db #0x26	; 38
      00014C 26                     612 	.db #0x26	; 38
      00014D 26                     613 	.db #0x26	; 38
      00014E 26                     614 	.db #0x26	; 38
      00014F 26                     615 	.db #0x26	; 38
      000150 26                     616 	.db #0x26	; 38
      000151 26                     617 	.db #0x26	; 38
      000152 26                     618 	.db #0x26	; 38
      000153 26                     619 	.db #0x26	; 38
      000154 26                     620 	.db #0x26	; 38
      000155 26                     621 	.db #0x26	; 38
      000156 26                     622 	.db #0x26	; 38
      000157 26                     623 	.db #0x26	; 38
      000158 26                     624 	.db #0x26	; 38
      000159 26                     625 	.db #0x26	; 38
      00015A 26                     626 	.db #0x26	; 38
      00015B 26                     627 	.db #0x26	; 38
      00015C 26                     628 	.db #0x26	; 38
      00015D 26                     629 	.db #0x26	; 38
      00015E 26                     630 	.db #0x26	; 38
      00015F 26                     631 	.db #0x26	; 38
      000160 2C                     632 	.db #0x2c	; 44
      000161 26                     633 	.db #0x26	; 38
      000162 26                     634 	.db #0x26	; 38
      000163 26                     635 	.db #0x26	; 38
      000164 26                     636 	.db #0x26	; 38
      000165 26                     637 	.db #0x26	; 38
      000166 26                     638 	.db #0x26	; 38
      000167 26                     639 	.db #0x26	; 38
      000168 26                     640 	.db #0x26	; 38
      000169 26                     641 	.db #0x26	; 38
      00016A 26                     642 	.db #0x26	; 38
      00016B 26                     643 	.db #0x26	; 38
      00016C 26                     644 	.db #0x26	; 38
      00016D 26                     645 	.db #0x26	; 38
      00016E 26                     646 	.db #0x26	; 38
      00016F 26                     647 	.db #0x26	; 38
      000170 26                     648 	.db #0x26	; 38
      000171 26                     649 	.db #0x26	; 38
      000172 26                     650 	.db #0x26	; 38
      000173 26                     651 	.db #0x26	; 38
      000174 26                     652 	.db #0x26	; 38
      000175 26                     653 	.db #0x26	; 38
      000176 26                     654 	.db #0x26	; 38
      000177 26                     655 	.db #0x26	; 38
      000178 26                     656 	.db #0x26	; 38
      000179 26                     657 	.db #0x26	; 38
      00017A 26                     658 	.db #0x26	; 38
      00017B 26                     659 	.db #0x26	; 38
      00017C 26                     660 	.db #0x26	; 38
      00017D 26                     661 	.db #0x26	; 38
      00017E 26                     662 	.db #0x26	; 38
      00017F 26                     663 	.db #0x26	; 38
      000180 26                     664 	.db #0x26	; 38
      000181 26                     665 	.db #0x26	; 38
      000182 26                     666 	.db #0x26	; 38
      000183 26                     667 	.db #0x26	; 38
      000184 26                     668 	.db #0x26	; 38
      000185 26                     669 	.db #0x26	; 38
      000186 26                     670 	.db #0x26	; 38
      000187 26                     671 	.db #0x26	; 38
      000188 26                     672 	.db #0x26	; 38
      000189 26                     673 	.db #0x26	; 38
      00018A 26                     674 	.db #0x26	; 38
      00018B 26                     675 	.db #0x26	; 38
      00018C 26                     676 	.db #0x26	; 38
      00018D 26                     677 	.db #0x26	; 38
      00018E 26                     678 	.db #0x26	; 38
      00018F 26                     679 	.db #0x26	; 38
      000190 26                     680 	.db #0x26	; 38
      000191 26                     681 	.db #0x26	; 38
      000192 26                     682 	.db #0x26	; 38
      000193 26                     683 	.db #0x26	; 38
      000194 26                     684 	.db #0x26	; 38
      000195 2B                     685 	.db #0x2b	; 43
      000196 26                     686 	.db #0x26	; 38
      000197 26                     687 	.db #0x26	; 38
      000198 26                     688 	.db #0x26	; 38
      000199 26                     689 	.db #0x26	; 38
      00019A 26                     690 	.db #0x26	; 38
      00019B 26                     691 	.db #0x26	; 38
      00019C 26                     692 	.db #0x26	; 38
      00019D 26                     693 	.db #0x26	; 38
      00019E 26                     694 	.db #0x26	; 38
      00019F 26                     695 	.db #0x26	; 38
      0001A0 26                     696 	.db #0x26	; 38
      0001A1 26                     697 	.db #0x26	; 38
      0001A2 26                     698 	.db #0x26	; 38
      0001A3 26                     699 	.db #0x26	; 38
      0001A4 26                     700 	.db #0x26	; 38
      0001A5 26                     701 	.db #0x26	; 38
      0001A6 25                     702 	.db #0x25	; 37
      0001A7 26                     703 	.db #0x26	; 38
      0001A8 26                     704 	.db #0x26	; 38
      0001A9 26                     705 	.db #0x26	; 38
      0001AA 2B                     706 	.db #0x2b	; 43
      0001AB 26                     707 	.db #0x26	; 38
      0001AC 26                     708 	.db #0x26	; 38
      0001AD 26                     709 	.db #0x26	; 38
      0001AE 26                     710 	.db #0x26	; 38
      0001AF 26                     711 	.db #0x26	; 38
      0001B0 26                     712 	.db #0x26	; 38
      0001B1 26                     713 	.db #0x26	; 38
      0001B2 26                     714 	.db #0x26	; 38
      0001B3 26                     715 	.db #0x26	; 38
      0001B4 26                     716 	.db #0x26	; 38
      0001B5 26                     717 	.db #0x26	; 38
      0001B6 26                     718 	.db #0x26	; 38
      0001B7 26                     719 	.db #0x26	; 38
      0001B8 26                     720 	.db #0x26	; 38
      0001B9 26                     721 	.db #0x26	; 38
      0001BA 26                     722 	.db #0x26	; 38
      0001BB 26                     723 	.db #0x26	; 38
      0001BC 26                     724 	.db #0x26	; 38
      0001BD 26                     725 	.db #0x26	; 38
      0001BE 26                     726 	.db #0x26	; 38
      0001BF 26                     727 	.db #0x26	; 38
      0001C0 26                     728 	.db #0x26	; 38
      0001C1 26                     729 	.db #0x26	; 38
      0001C2 26                     730 	.db #0x26	; 38
      0001C3 26                     731 	.db #0x26	; 38
      0001C4 2B                     732 	.db #0x2b	; 43
      0001C5 26                     733 	.db #0x26	; 38
      0001C6 26                     734 	.db #0x26	; 38
      0001C7 26                     735 	.db #0x26	; 38
      0001C8 26                     736 	.db #0x26	; 38
      0001C9 26                     737 	.db #0x26	; 38
      0001CA 26                     738 	.db #0x26	; 38
      0001CB 26                     739 	.db #0x26	; 38
      0001CC 26                     740 	.db #0x26	; 38
      0001CD 26                     741 	.db #0x26	; 38
      0001CE 26                     742 	.db #0x26	; 38
      0001CF 26                     743 	.db #0x26	; 38
      0001D0 26                     744 	.db #0x26	; 38
      0001D1 26                     745 	.db #0x26	; 38
      0001D2 26                     746 	.db #0x26	; 38
      0001D3 26                     747 	.db #0x26	; 38
      0001D4 26                     748 	.db #0x26	; 38
      0001D5 26                     749 	.db #0x26	; 38
      0001D6 26                     750 	.db #0x26	; 38
      0001D7 26                     751 	.db #0x26	; 38
      0001D8 26                     752 	.db #0x26	; 38
      0001D9 26                     753 	.db #0x26	; 38
      0001DA 27                     754 	.db #0x27	; 39
      0001DB 28                     755 	.db #0x28	; 40
      0001DC 26                     756 	.db #0x26	; 38
      0001DD 26                     757 	.db #0x26	; 38
      0001DE 26                     758 	.db #0x26	; 38
      0001DF 26                     759 	.db #0x26	; 38
      0001E0 26                     760 	.db #0x26	; 38
      0001E1 26                     761 	.db #0x26	; 38
      0001E2 26                     762 	.db #0x26	; 38
      0001E3 26                     763 	.db #0x26	; 38
      0001E4 26                     764 	.db #0x26	; 38
      0001E5 26                     765 	.db #0x26	; 38
      0001E6 26                     766 	.db #0x26	; 38
      0001E7 26                     767 	.db #0x26	; 38
      0001E8 26                     768 	.db #0x26	; 38
      0001E9 26                     769 	.db #0x26	; 38
      0001EA 26                     770 	.db #0x26	; 38
      0001EB 26                     771 	.db #0x26	; 38
      0001EC 26                     772 	.db #0x26	; 38
      0001ED 26                     773 	.db #0x26	; 38
      0001EE 26                     774 	.db #0x26	; 38
      0001EF 26                     775 	.db #0x26	; 38
      0001F0 26                     776 	.db #0x26	; 38
      0001F1 26                     777 	.db #0x26	; 38
      0001F2 26                     778 	.db #0x26	; 38
      0001F3 26                     779 	.db #0x26	; 38
      0001F4 26                     780 	.db #0x26	; 38
      0001F5 26                     781 	.db #0x26	; 38
      0001F6 26                     782 	.db #0x26	; 38
      0001F7 26                     783 	.db #0x26	; 38
      0001F8 26                     784 	.db #0x26	; 38
      0001F9 26                     785 	.db #0x26	; 38
      0001FA 2A                     786 	.db #0x2a	; 42
      0001FB 29                     787 	.db #0x29	; 41
      0001FC 26                     788 	.db #0x26	; 38
      0001FD 26                     789 	.db #0x26	; 38
      0001FE 26                     790 	.db #0x26	; 38
      0001FF 26                     791 	.db #0x26	; 38
      000200 26                     792 	.db #0x26	; 38
      000201 26                     793 	.db #0x26	; 38
      000202 26                     794 	.db #0x26	; 38
      000203 26                     795 	.db #0x26	; 38
      000204 26                     796 	.db #0x26	; 38
      000205 26                     797 	.db #0x26	; 38
      000206 26                     798 	.db #0x26	; 38
      000207 26                     799 	.db #0x26	; 38
      000208 26                     800 	.db #0x26	; 38
      000209 26                     801 	.db #0x26	; 38
      00020A 26                     802 	.db #0x26	; 38
      00020B 26                     803 	.db #0x26	; 38
      00020C 26                     804 	.db #0x26	; 38
      00020D 26                     805 	.db #0x26	; 38
      00020E 27                     806 	.db #0x27	; 39
      00020F 28                     807 	.db #0x28	; 40
      000210 26                     808 	.db #0x26	; 38
      000211 26                     809 	.db #0x26	; 38
      000212 26                     810 	.db #0x26	; 38
      000213 26                     811 	.db #0x26	; 38
      000214 26                     812 	.db #0x26	; 38
      000215 26                     813 	.db #0x26	; 38
      000216 26                     814 	.db #0x26	; 38
      000217 26                     815 	.db #0x26	; 38
      000218 26                     816 	.db #0x26	; 38
      000219 26                     817 	.db #0x26	; 38
      00021A 26                     818 	.db #0x26	; 38
      00021B 26                     819 	.db #0x26	; 38
      00021C 26                     820 	.db #0x26	; 38
      00021D 26                     821 	.db #0x26	; 38
      00021E 26                     822 	.db #0x26	; 38
      00021F 2C                     823 	.db #0x2c	; 44
      000220 26                     824 	.db #0x26	; 38
      000221 26                     825 	.db #0x26	; 38
      000222 26                     826 	.db #0x26	; 38
      000223 26                     827 	.db #0x26	; 38
      000224 26                     828 	.db #0x26	; 38
      000225 26                     829 	.db #0x26	; 38
      000226 26                     830 	.db #0x26	; 38
      000227 26                     831 	.db #0x26	; 38
      000228 26                     832 	.db #0x26	; 38
      000229 26                     833 	.db #0x26	; 38
      00022A 26                     834 	.db #0x26	; 38
      00022B 26                     835 	.db #0x26	; 38
      00022C 26                     836 	.db #0x26	; 38
      00022D 26                     837 	.db #0x26	; 38
      00022E 2A                     838 	.db #0x2a	; 42
      00022F 29                     839 	.db #0x29	; 41
      000230 26                     840 	.db #0x26	; 38
      000231 26                     841 	.db #0x26	; 38
      000232 26                     842 	.db #0x26	; 38
      000233 26                     843 	.db #0x26	; 38
      000234 26                     844 	.db #0x26	; 38
      000235 26                     845 	.db #0x26	; 38
      000236 26                     846 	.db #0x26	; 38
      000237 26                     847 	.db #0x26	; 38
      000238 26                     848 	.db #0x26	; 38
      000239 26                     849 	.db #0x26	; 38
      00023A 26                     850 	.db #0x26	; 38
      00023B 26                     851 	.db #0x26	; 38
      00023C 26                     852 	.db #0x26	; 38
      00023D 25                     853 	.db #0x25	; 37
      00023E 26                     854 	.db #0x26	; 38
      00023F 26                     855 	.db #0x26	; 38
      000240 26                     856 	.db #0x26	; 38
      000241 26                     857 	.db #0x26	; 38
      000242 26                     858 	.db #0x26	; 38
      000243 26                     859 	.db #0x26	; 38
      000244 2C                     860 	.db #0x2c	; 44
      000245 26                     861 	.db #0x26	; 38
      000246 26                     862 	.db #0x26	; 38
      000247 26                     863 	.db #0x26	; 38
      000248 26                     864 	.db #0x26	; 38
      000249 26                     865 	.db #0x26	; 38
      00024A 26                     866 	.db #0x26	; 38
      00024B 26                     867 	.db #0x26	; 38
      00024C 26                     868 	.db #0x26	; 38
      00024D 26                     869 	.db #0x26	; 38
      00024E 26                     870 	.db #0x26	; 38
      00024F 26                     871 	.db #0x26	; 38
      000250 26                     872 	.db #0x26	; 38
      000251 26                     873 	.db #0x26	; 38
      000252 26                     874 	.db #0x26	; 38
      000253 26                     875 	.db #0x26	; 38
      000254 26                     876 	.db #0x26	; 38
      000255 26                     877 	.db #0x26	; 38
      000256 26                     878 	.db #0x26	; 38
      000257 26                     879 	.db #0x26	; 38
      000258 26                     880 	.db #0x26	; 38
      000259 26                     881 	.db #0x26	; 38
      00025A 26                     882 	.db #0x26	; 38
      00025B 26                     883 	.db #0x26	; 38
      00025C 26                     884 	.db #0x26	; 38
      00025D 26                     885 	.db #0x26	; 38
      00025E 26                     886 	.db #0x26	; 38
      00025F 26                     887 	.db #0x26	; 38
      000260 26                     888 	.db #0x26	; 38
      000261 26                     889 	.db #0x26	; 38
      000262 26                     890 	.db #0x26	; 38
      000263 26                     891 	.db #0x26	; 38
      000264 26                     892 	.db #0x26	; 38
      000265 26                     893 	.db #0x26	; 38
      000266 26                     894 	.db #0x26	; 38
      000267 26                     895 	.db #0x26	; 38
      000268 26                     896 	.db #0x26	; 38
      000269 26                     897 	.db #0x26	; 38
      00026A 2C                     898 	.db #0x2c	; 44
      00026B 26                     899 	.db #0x26	; 38
      00026C 26                     900 	.db #0x26	; 38
      00026D 26                     901 	.db #0x26	; 38
      00026E 26                     902 	.db #0x26	; 38
      00026F 26                     903 	.db #0x26	; 38
      000270 26                     904 	.db #0x26	; 38
      000271 26                     905 	.db #0x26	; 38
      000272 26                     906 	.db #0x26	; 38
      000273 26                     907 	.db #0x26	; 38
      000274 26                     908 	.db #0x26	; 38
      000275 26                     909 	.db #0x26	; 38
      000276 26                     910 	.db #0x26	; 38
      000277 26                     911 	.db #0x26	; 38
      000278 26                     912 	.db #0x26	; 38
      000279 2C                     913 	.db #0x2c	; 44
      00027A 26                     914 	.db #0x26	; 38
      00027B 26                     915 	.db #0x26	; 38
      00027C 26                     916 	.db #0x26	; 38
      00027D 26                     917 	.db #0x26	; 38
      00027E 26                     918 	.db #0x26	; 38
      00027F 26                     919 	.db #0x26	; 38
      000280 26                     920 	.db #0x26	; 38
      000281 26                     921 	.db #0x26	; 38
      000282 26                     922 	.db #0x26	; 38
      000283 26                     923 	.db #0x26	; 38
      000284 26                     924 	.db #0x26	; 38
      000285 26                     925 	.db #0x26	; 38
      000286 26                     926 	.db #0x26	; 38
      000287 26                     927 	.db #0x26	; 38
      000288 26                     928 	.db #0x26	; 38
      000289 26                     929 	.db #0x26	; 38
      00028A 26                     930 	.db #0x26	; 38
      00028B 26                     931 	.db #0x26	; 38
      00028C 26                     932 	.db #0x26	; 38
      00028D 26                     933 	.db #0x26	; 38
      00028E 26                     934 	.db #0x26	; 38
      00028F 26                     935 	.db #0x26	; 38
      000290 26                     936 	.db #0x26	; 38
      000291 26                     937 	.db #0x26	; 38
      000292 26                     938 	.db #0x26	; 38
      000293 26                     939 	.db #0x26	; 38
      000294 26                     940 	.db #0x26	; 38
      000295 2B                     941 	.db #0x2b	; 43
      000296 26                     942 	.db #0x26	; 38
      000297 26                     943 	.db #0x26	; 38
      000298 26                     944 	.db #0x26	; 38
      000299 26                     945 	.db #0x26	; 38
      00029A 26                     946 	.db #0x26	; 38
      00029B 26                     947 	.db #0x26	; 38
      00029C 26                     948 	.db #0x26	; 38
      00029D 26                     949 	.db #0x26	; 38
      00029E 26                     950 	.db #0x26	; 38
      00029F 26                     951 	.db #0x26	; 38
      0002A0 26                     952 	.db #0x26	; 38
      0002A1 26                     953 	.db #0x26	; 38
      0002A2 26                     954 	.db #0x26	; 38
      0002A3 26                     955 	.db #0x26	; 38
      0002A4 26                     956 	.db #0x26	; 38
      0002A5 26                     957 	.db #0x26	; 38
      0002A6 26                     958 	.db #0x26	; 38
      0002A7 28                     959 	.db #0x28	; 40
      0002A8 26                     960 	.db #0x26	; 38
      0002A9 26                     961 	.db #0x26	; 38
      0002AA 26                     962 	.db #0x26	; 38
      0002AB 26                     963 	.db #0x26	; 38
      0002AC 26                     964 	.db #0x26	; 38
      0002AD 26                     965 	.db #0x26	; 38
      0002AE 26                     966 	.db #0x26	; 38
      0002AF 26                     967 	.db #0x26	; 38
      0002B0 26                     968 	.db #0x26	; 38
      0002B1 26                     969 	.db #0x26	; 38
      0002B2 26                     970 	.db #0x26	; 38
      0002B3 26                     971 	.db #0x26	; 38
      0002B4 26                     972 	.db #0x26	; 38
      0002B5 26                     973 	.db #0x26	; 38
      0002B6 26                     974 	.db #0x26	; 38
      0002B7 26                     975 	.db #0x26	; 38
      0002B8 26                     976 	.db #0x26	; 38
      0002B9 26                     977 	.db #0x26	; 38
      0002BA 26                     978 	.db #0x26	; 38
      0002BB 26                     979 	.db #0x26	; 38
      0002BC 26                     980 	.db #0x26	; 38
      0002BD 26                     981 	.db #0x26	; 38
      0002BE 26                     982 	.db #0x26	; 38
      0002BF 26                     983 	.db #0x26	; 38
      0002C0 2B                     984 	.db #0x2b	; 43
      0002C1 26                     985 	.db #0x26	; 38
      0002C2 26                     986 	.db #0x26	; 38
      0002C3 26                     987 	.db #0x26	; 38
      0002C4 26                     988 	.db #0x26	; 38
      0002C5 26                     989 	.db #0x26	; 38
      0002C6 27                     990 	.db #0x27	; 39
      0002C7 29                     991 	.db #0x29	; 41
      0002C8 26                     992 	.db #0x26	; 38
      0002C9 26                     993 	.db #0x26	; 38
      0002CA 26                     994 	.db #0x26	; 38
      0002CB 26                     995 	.db #0x26	; 38
      0002CC 26                     996 	.db #0x26	; 38
      0002CD 26                     997 	.db #0x26	; 38
      0002CE 2B                     998 	.db #0x2b	; 43
      0002CF 26                     999 	.db #0x26	; 38
      0002D0 26                    1000 	.db #0x26	; 38
      0002D1 26                    1001 	.db #0x26	; 38
      0002D2 26                    1002 	.db #0x26	; 38
      0002D3 26                    1003 	.db #0x26	; 38
      0002D4 26                    1004 	.db #0x26	; 38
      0002D5 26                    1005 	.db #0x26	; 38
      0002D6 26                    1006 	.db #0x26	; 38
      0002D7 26                    1007 	.db #0x26	; 38
      0002D8 26                    1008 	.db #0x26	; 38
      0002D9 26                    1009 	.db #0x26	; 38
      0002DA 26                    1010 	.db #0x26	; 38
      0002DB 26                    1011 	.db #0x26	; 38
      0002DC 26                    1012 	.db #0x26	; 38
      0002DD 26                    1013 	.db #0x26	; 38
      0002DE 26                    1014 	.db #0x26	; 38
      0002DF 26                    1015 	.db #0x26	; 38
      0002E0 26                    1016 	.db #0x26	; 38
      0002E1 26                    1017 	.db #0x26	; 38
      0002E2 26                    1018 	.db #0x26	; 38
      0002E3 26                    1019 	.db #0x26	; 38
      0002E4 26                    1020 	.db #0x26	; 38
      0002E5 26                    1021 	.db #0x26	; 38
      0002E6 2A                    1022 	.db #0x2a	; 42
      0002E7 26                    1023 	.db #0x26	; 38
      0002E8 26                    1024 	.db #0x26	; 38
      0002E9 26                    1025 	.db #0x26	; 38
      0002EA 26                    1026 	.db #0x26	; 38
      0002EB 26                    1027 	.db #0x26	; 38
      0002EC 26                    1028 	.db #0x26	; 38
      0002ED 26                    1029 	.db #0x26	; 38
      0002EE 26                    1030 	.db #0x26	; 38
      0002EF 26                    1031 	.db #0x26	; 38
      0002F0 26                    1032 	.db #0x26	; 38
      0002F1 26                    1033 	.db #0x26	; 38
      0002F2 2C                    1034 	.db #0x2c	; 44
      0002F3 26                    1035 	.db #0x26	; 38
      0002F4 26                    1036 	.db #0x26	; 38
      0002F5 26                    1037 	.db #0x26	; 38
      0002F6 26                    1038 	.db #0x26	; 38
      0002F7 26                    1039 	.db #0x26	; 38
      0002F8 26                    1040 	.db #0x26	; 38
      0002F9 26                    1041 	.db #0x26	; 38
      0002FA 26                    1042 	.db #0x26	; 38
      0002FB 26                    1043 	.db #0x26	; 38
      0002FC 26                    1044 	.db #0x26	; 38
      0002FD 26                    1045 	.db #0x26	; 38
      0002FE 26                    1046 	.db #0x26	; 38
      0002FF 26                    1047 	.db #0x26	; 38
      000300 26                    1048 	.db #0x26	; 38
      000301 26                    1049 	.db #0x26	; 38
      000302 26                    1050 	.db #0x26	; 38
      000303 26                    1051 	.db #0x26	; 38
      000304 26                    1052 	.db #0x26	; 38
      000305 26                    1053 	.db #0x26	; 38
      000306 26                    1054 	.db #0x26	; 38
      000307 26                    1055 	.db #0x26	; 38
      000308 26                    1056 	.db #0x26	; 38
      000309 26                    1057 	.db #0x26	; 38
      00030A 26                    1058 	.db #0x26	; 38
      00030B 26                    1059 	.db #0x26	; 38
      00030C 26                    1060 	.db #0x26	; 38
      00030D 26                    1061 	.db #0x26	; 38
      00030E 26                    1062 	.db #0x26	; 38
      00030F 26                    1063 	.db #0x26	; 38
      000310 26                    1064 	.db #0x26	; 38
      000311 26                    1065 	.db #0x26	; 38
      000312 26                    1066 	.db #0x26	; 38
      000313 26                    1067 	.db #0x26	; 38
      000314 26                    1068 	.db #0x26	; 38
      000315 26                    1069 	.db #0x26	; 38
      000316 26                    1070 	.db #0x26	; 38
      000317 2B                    1071 	.db #0x2b	; 43
      000318 26                    1072 	.db #0x26	; 38
      000319 26                    1073 	.db #0x26	; 38
      00031A 26                    1074 	.db #0x26	; 38
      00031B 26                    1075 	.db #0x26	; 38
      00031C 26                    1076 	.db #0x26	; 38
      00031D 26                    1077 	.db #0x26	; 38
      00031E 26                    1078 	.db #0x26	; 38
      00031F 26                    1079 	.db #0x26	; 38
      000320 26                    1080 	.db #0x26	; 38
      000321 26                    1081 	.db #0x26	; 38
      000322 26                    1082 	.db #0x26	; 38
      000323 26                    1083 	.db #0x26	; 38
      000324 26                    1084 	.db #0x26	; 38
      000325 26                    1085 	.db #0x26	; 38
      000326 26                    1086 	.db #0x26	; 38
      000327 26                    1087 	.db #0x26	; 38
      000328 26                    1088 	.db #0x26	; 38
      000329 26                    1089 	.db #0x26	; 38
      00032A 26                    1090 	.db #0x26	; 38
      00032B 26                    1091 	.db #0x26	; 38
      00032C 26                    1092 	.db #0x26	; 38
      00032D 26                    1093 	.db #0x26	; 38
      00032E 26                    1094 	.db #0x26	; 38
      00032F 26                    1095 	.db #0x26	; 38
      000330 26                    1096 	.db #0x26	; 38
      000331 26                    1097 	.db #0x26	; 38
      000332 26                    1098 	.db #0x26	; 38
      000333 26                    1099 	.db #0x26	; 38
      000334 26                    1100 	.db #0x26	; 38
      000335 26                    1101 	.db #0x26	; 38
      000336 26                    1102 	.db #0x26	; 38
      000337 26                    1103 	.db #0x26	; 38
      000338 26                    1104 	.db #0x26	; 38
      000339 26                    1105 	.db #0x26	; 38
      00033A 26                    1106 	.db #0x26	; 38
      00033B 26                    1107 	.db #0x26	; 38
      00033C 26                    1108 	.db #0x26	; 38
      00033D 26                    1109 	.db #0x26	; 38
      00033E 2B                    1110 	.db #0x2b	; 43
      00033F 26                    1111 	.db #0x26	; 38
      000340 26                    1112 	.db #0x26	; 38
      000341 26                    1113 	.db #0x26	; 38
      000342 26                    1114 	.db #0x26	; 38
      000343 26                    1115 	.db #0x26	; 38
      000344 26                    1116 	.db #0x26	; 38
      000345 26                    1117 	.db #0x26	; 38
      000346 26                    1118 	.db #0x26	; 38
      000347 26                    1119 	.db #0x26	; 38
      000348 26                    1120 	.db #0x26	; 38
      000349 26                    1121 	.db #0x26	; 38
      00034A 2B                    1122 	.db #0x2b	; 43
      00034B 26                    1123 	.db #0x26	; 38
      00034C 26                    1124 	.db #0x26	; 38
      00034D 26                    1125 	.db #0x26	; 38
      00034E 26                    1126 	.db #0x26	; 38
      00034F 26                    1127 	.db #0x26	; 38
      000350 26                    1128 	.db #0x26	; 38
      000351 26                    1129 	.db #0x26	; 38
      000352 26                    1130 	.db #0x26	; 38
      000353 26                    1131 	.db #0x26	; 38
      000354 26                    1132 	.db #0x26	; 38
      000355 26                    1133 	.db #0x26	; 38
      000356 26                    1134 	.db #0x26	; 38
      000357 26                    1135 	.db #0x26	; 38
      000358 26                    1136 	.db #0x26	; 38
      000359 26                    1137 	.db #0x26	; 38
      00035A 26                    1138 	.db #0x26	; 38
      00035B 26                    1139 	.db #0x26	; 38
      00035C 26                    1140 	.db #0x26	; 38
      00035D 26                    1141 	.db #0x26	; 38
      00035E 26                    1142 	.db #0x26	; 38
      00035F 26                    1143 	.db #0x26	; 38
      000360 26                    1144 	.db #0x26	; 38
      000361 26                    1145 	.db #0x26	; 38
      000362 26                    1146 	.db #0x26	; 38
      000363 26                    1147 	.db #0x26	; 38
      000364 26                    1148 	.db #0x26	; 38
      000365 26                    1149 	.db #0x26	; 38
      000366 2C                    1150 	.db #0x2c	; 44
      000367 26                    1151 	.db #0x26	; 38
      000368 26                    1152 	.db #0x26	; 38
      000369 26                    1153 	.db #0x26	; 38
      00036A 26                    1154 	.db #0x26	; 38
      00036B 26                    1155 	.db #0x26	; 38
      00036C 26                    1156 	.db #0x26	; 38
      00036D 26                    1157 	.db #0x26	; 38
      00036E 26                    1158 	.db #0x26	; 38
      00036F 26                    1159 	.db #0x26	; 38
      000370 2B                    1160 	.db #0x2b	; 43
      000371 26                    1161 	.db #0x26	; 38
      000372 26                    1162 	.db #0x26	; 38
      000373 26                    1163 	.db #0x26	; 38
      000374 26                    1164 	.db #0x26	; 38
      000375 26                    1165 	.db #0x26	; 38
      000376 26                    1166 	.db #0x26	; 38
      000377 26                    1167 	.db #0x26	; 38
      000378 26                    1168 	.db #0x26	; 38
      000379 26                    1169 	.db #0x26	; 38
      00037A 26                    1170 	.db #0x26	; 38
      00037B 26                    1171 	.db #0x26	; 38
      00037C 26                    1172 	.db #0x26	; 38
      00037D 26                    1173 	.db #0x26	; 38
      00037E 26                    1174 	.db #0x26	; 38
      00037F 26                    1175 	.db #0x26	; 38
      000380 26                    1176 	.db #0x26	; 38
      000381 26                    1177 	.db #0x26	; 38
      000382 26                    1178 	.db #0x26	; 38
      000383 26                    1179 	.db #0x26	; 38
      000384 26                    1180 	.db #0x26	; 38
      000385 26                    1181 	.db #0x26	; 38
      000386 26                    1182 	.db #0x26	; 38
      000387 26                    1183 	.db #0x26	; 38
      000388 26                    1184 	.db #0x26	; 38
      000389 26                    1185 	.db #0x26	; 38
      00038A 26                    1186 	.db #0x26	; 38
      00038B 26                    1187 	.db #0x26	; 38
      00038C 26                    1188 	.db #0x26	; 38
      00038D 26                    1189 	.db #0x26	; 38
      00038E 26                    1190 	.db #0x26	; 38
      00038F 26                    1191 	.db #0x26	; 38
      000390 26                    1192 	.db #0x26	; 38
      000391 26                    1193 	.db #0x26	; 38
      000392 26                    1194 	.db #0x26	; 38
      000393 26                    1195 	.db #0x26	; 38
      000394 26                    1196 	.db #0x26	; 38
      000395 26                    1197 	.db #0x26	; 38
      000396 26                    1198 	.db #0x26	; 38
      000397 26                    1199 	.db #0x26	; 38
      000398 27                    1200 	.db #0x27	; 39
      000399 28                    1201 	.db #0x28	; 40
      00039A 26                    1202 	.db #0x26	; 38
      00039B 26                    1203 	.db #0x26	; 38
      00039C 26                    1204 	.db #0x26	; 38
      00039D 26                    1205 	.db #0x26	; 38
      00039E 26                    1206 	.db #0x26	; 38
      00039F 26                    1207 	.db #0x26	; 38
      0003A0 26                    1208 	.db #0x26	; 38
      0003A1 26                    1209 	.db #0x26	; 38
      0003A2 26                    1210 	.db #0x26	; 38
      0003A3 26                    1211 	.db #0x26	; 38
      0003A4 26                    1212 	.db #0x26	; 38
      0003A5 26                    1213 	.db #0x26	; 38
      0003A6 26                    1214 	.db #0x26	; 38
      0003A7 26                    1215 	.db #0x26	; 38
      0003A8 26                    1216 	.db #0x26	; 38
      0003A9 26                    1217 	.db #0x26	; 38
      0003AA 26                    1218 	.db #0x26	; 38
      0003AB 26                    1219 	.db #0x26	; 38
      0003AC 26                    1220 	.db #0x26	; 38
      0003AD 2B                    1221 	.db #0x2b	; 43
      0003AE 26                    1222 	.db #0x26	; 38
      0003AF 26                    1223 	.db #0x26	; 38
      0003B0 26                    1224 	.db #0x26	; 38
      0003B1 26                    1225 	.db #0x26	; 38
      0003B2 26                    1226 	.db #0x26	; 38
      0003B3 26                    1227 	.db #0x26	; 38
      0003B4 26                    1228 	.db #0x26	; 38
      0003B5 25                    1229 	.db #0x25	; 37
      0003B6 26                    1230 	.db #0x26	; 38
      0003B7 26                    1231 	.db #0x26	; 38
      0003B8 2A                    1232 	.db #0x2a	; 42
      0003B9 29                    1233 	.db #0x29	; 41
      0003BA 26                    1234 	.db #0x26	; 38
      0003BB 26                    1235 	.db #0x26	; 38
      0003BC 26                    1236 	.db #0x26	; 38
      0003BD 26                    1237 	.db #0x26	; 38
      0003BE 26                    1238 	.db #0x26	; 38
      0003BF 26                    1239 	.db #0x26	; 38
      0003C0 26                    1240 	.db #0x26	; 38
      0003C1 26                    1241 	.db #0x26	; 38
      0003C2 2B                    1242 	.db #0x2b	; 43
      0003C3 26                    1243 	.db #0x26	; 38
      0003C4 26                    1244 	.db #0x26	; 38
      0003C5 26                    1245 	.db #0x26	; 38
      0003C6 26                    1246 	.db #0x26	; 38
      0003C7 26                    1247 	.db #0x26	; 38
      0003C8 26                    1248 	.db #0x26	; 38
      0003C9 2C                    1249 	.db #0x2c	; 44
      0003CA 26                    1250 	.db #0x26	; 38
      0003CB 26                    1251 	.db #0x26	; 38
      0003CC 26                    1252 	.db #0x26	; 38
      0003CD 26                    1253 	.db #0x26	; 38
      0003CE 26                    1254 	.db #0x26	; 38
      0003CF 26                    1255 	.db #0x26	; 38
      0003D0 26                    1256 	.db #0x26	; 38
      0003D1 26                    1257 	.db #0x26	; 38
      0003D2 26                    1258 	.db #0x26	; 38
      0003D3 26                    1259 	.db #0x26	; 38
      0003D4 26                    1260 	.db #0x26	; 38
      0003D5 2C                    1261 	.db #0x2c	; 44
      0003D6 26                    1262 	.db #0x26	; 38
      0003D7 26                    1263 	.db #0x26	; 38
      0003D8 26                    1264 	.db #0x26	; 38
      0003D9 26                    1265 	.db #0x26	; 38
      0003DA 26                    1266 	.db #0x26	; 38
      0003DB 26                    1267 	.db #0x26	; 38
      0003DC 26                    1268 	.db #0x26	; 38
      0003DD 26                    1269 	.db #0x26	; 38
      0003DE 26                    1270 	.db #0x26	; 38
      0003DF 26                    1271 	.db #0x26	; 38
      0003E0 26                    1272 	.db #0x26	; 38
      0003E1 26                    1273 	.db #0x26	; 38
      0003E2 26                    1274 	.db #0x26	; 38
      0003E3 26                    1275 	.db #0x26	; 38
      0003E4 26                    1276 	.db #0x26	; 38
      0003E5 26                    1277 	.db #0x26	; 38
      0003E6 26                    1278 	.db #0x26	; 38
      0003E7 26                    1279 	.db #0x26	; 38
      0003E8 26                    1280 	.db #0x26	; 38
      0003E9 26                    1281 	.db #0x26	; 38
      0003EA 26                    1282 	.db #0x26	; 38
      0003EB 26                    1283 	.db #0x26	; 38
      0003EC 26                    1284 	.db #0x26	; 38
      0003ED 26                    1285 	.db #0x26	; 38
      0003EE 26                    1286 	.db #0x26	; 38
      0003EF 26                    1287 	.db #0x26	; 38
      0003F0 26                    1288 	.db #0x26	; 38
      0003F1 26                    1289 	.db #0x26	; 38
      0003F2 26                    1290 	.db #0x26	; 38
      0003F3 26                    1291 	.db #0x26	; 38
      0003F4 26                    1292 	.db #0x26	; 38
      0003F5 26                    1293 	.db #0x26	; 38
      0003F6 26                    1294 	.db #0x26	; 38
      0003F7 26                    1295 	.db #0x26	; 38
      0003F8 26                    1296 	.db #0x26	; 38
      0003F9 26                    1297 	.db #0x26	; 38
      0003FA 26                    1298 	.db #0x26	; 38
      0003FB 26                    1299 	.db #0x26	; 38
      0003FC 26                    1300 	.db #0x26	; 38
      0003FD 26                    1301 	.db #0x26	; 38
      0003FE 26                    1302 	.db #0x26	; 38
      0003FF 26                    1303 	.db #0x26	; 38
      000400 26                    1304 	.db #0x26	; 38
      000401 26                    1305 	.db #0x26	; 38
      000402 26                    1306 	.db #0x26	; 38
      000403 26                    1307 	.db #0x26	; 38
      000404 26                    1308 	.db #0x26	; 38
      000405 26                    1309 	.db #0x26	; 38
      000406 26                    1310 	.db #0x26	; 38
      000407 26                    1311 	.db #0x26	; 38
      000408 26                    1312 	.db #0x26	; 38
      000409 26                    1313 	.db #0x26	; 38
      00040A 26                    1314 	.db #0x26	; 38
      00040B 26                    1315 	.db #0x26	; 38
      00040C 26                    1316 	.db #0x26	; 38
      00040D 2B                    1317 	.db #0x2b	; 43
      00040E 26                    1318 	.db #0x26	; 38
      00040F 26                    1319 	.db #0x26	; 38
      000410 26                    1320 	.db #0x26	; 38
      000411 26                    1321 	.db #0x26	; 38
      000412 26                    1322 	.db #0x26	; 38
      000413 26                    1323 	.db #0x26	; 38
      000414 26                    1324 	.db #0x26	; 38
      000415 26                    1325 	.db #0x26	; 38
      000416 26                    1326 	.db #0x26	; 38
      000417 26                    1327 	.db #0x26	; 38
      000418 26                    1328 	.db #0x26	; 38
      000419 26                    1329 	.db #0x26	; 38
      00041A 26                    1330 	.db #0x26	; 38
      00041B 26                    1331 	.db #0x26	; 38
      00041C 26                    1332 	.db #0x26	; 38
      00041D 26                    1333 	.db #0x26	; 38
      00041E 26                    1334 	.db #0x26	; 38
      00041F 26                    1335 	.db #0x26	; 38
      000420 2B                    1336 	.db #0x2b	; 43
      000421 26                    1337 	.db #0x26	; 38
      000422 26                    1338 	.db #0x26	; 38
      000423 26                    1339 	.db #0x26	; 38
      000424 26                    1340 	.db #0x26	; 38
      000425 26                    1341 	.db #0x26	; 38
      000426 26                    1342 	.db #0x26	; 38
      000427 26                    1343 	.db #0x26	; 38
      000428 26                    1344 	.db #0x26	; 38
      000429 26                    1345 	.db #0x26	; 38
      00042A 26                    1346 	.db #0x26	; 38
      00042B 26                    1347 	.db #0x26	; 38
      00042C 26                    1348 	.db #0x26	; 38
      00042D 26                    1349 	.db #0x26	; 38
      00042E 26                    1350 	.db #0x26	; 38
      00042F 26                    1351 	.db #0x26	; 38
      000430 26                    1352 	.db #0x26	; 38
      000431 26                    1353 	.db #0x26	; 38
      000432 26                    1354 	.db #0x26	; 38
      000433 26                    1355 	.db #0x26	; 38
      000434 26                    1356 	.db #0x26	; 38
      000435 26                    1357 	.db #0x26	; 38
      000436 26                    1358 	.db #0x26	; 38
      000437 2C                    1359 	.db #0x2c	; 44
      000438 26                    1360 	.db #0x26	; 38
      000439 26                    1361 	.db #0x26	; 38
      00043A 26                    1362 	.db #0x26	; 38
      00043B 26                    1363 	.db #0x26	; 38
      00043C 26                    1364 	.db #0x26	; 38
      00043D 26                    1365 	.db #0x26	; 38
      00043E 26                    1366 	.db #0x26	; 38
      00043F 26                    1367 	.db #0x26	; 38
      000440 26                    1368 	.db #0x26	; 38
      000441 26                    1369 	.db #0x26	; 38
      000442 26                    1370 	.db #0x26	; 38
      000443 26                    1371 	.db #0x26	; 38
      000444 26                    1372 	.db #0x26	; 38
      000445 26                    1373 	.db #0x26	; 38
      000446 26                    1374 	.db #0x26	; 38
      000447 26                    1375 	.db #0x26	; 38
      000448 25                    1376 	.db #0x25	; 37
      000449 2C                    1377 	.db #0x2c	; 44
      00044A 26                    1378 	.db #0x26	; 38
      00044B 26                    1379 	.db #0x26	; 38
      00044C 26                    1380 	.db #0x26	; 38
      00044D 26                    1381 	.db #0x26	; 38
      00044E 26                    1382 	.db #0x26	; 38
      00044F 26                    1383 	.db #0x26	; 38
      000450 26                    1384 	.db #0x26	; 38
      000451 26                    1385 	.db #0x26	; 38
      000452 26                    1386 	.db #0x26	; 38
      000453 26                    1387 	.db #0x26	; 38
      000454 26                    1388 	.db #0x26	; 38
      000455 26                    1389 	.db #0x26	; 38
      000456 26                    1390 	.db #0x26	; 38
      000457 26                    1391 	.db #0x26	; 38
      000458 26                    1392 	.db #0x26	; 38
      000459 26                    1393 	.db #0x26	; 38
      00045A 2B                    1394 	.db #0x2b	; 43
      00045B 26                    1395 	.db #0x26	; 38
      00045C 26                    1396 	.db #0x26	; 38
      00045D 26                    1397 	.db #0x26	; 38
      00045E 26                    1398 	.db #0x26	; 38
      00045F 26                    1399 	.db #0x26	; 38
      000460 26                    1400 	.db #0x26	; 38
      000461 26                    1401 	.db #0x26	; 38
      000462 26                    1402 	.db #0x26	; 38
      000463 26                    1403 	.db #0x26	; 38
      000464 26                    1404 	.db #0x26	; 38
      000465 26                    1405 	.db #0x26	; 38
      000466 26                    1406 	.db #0x26	; 38
      000467 26                    1407 	.db #0x26	; 38
      000468 26                    1408 	.db #0x26	; 38
      000469 26                    1409 	.db #0x26	; 38
      00046A 26                    1410 	.db #0x26	; 38
      00046B 26                    1411 	.db #0x26	; 38
      00046C 26                    1412 	.db #0x26	; 38
      00046D 26                    1413 	.db #0x26	; 38
      00046E 26                    1414 	.db #0x26	; 38
      00046F 26                    1415 	.db #0x26	; 38
      000470 26                    1416 	.db #0x26	; 38
      000471 26                    1417 	.db #0x26	; 38
      000472 27                    1418 	.db #0x27	; 39
      000473 28                    1419 	.db #0x28	; 40
      000474 26                    1420 	.db #0x26	; 38
      000475 26                    1421 	.db #0x26	; 38
      000476 26                    1422 	.db #0x26	; 38
      000477 26                    1423 	.db #0x26	; 38
      000478 26                    1424 	.db #0x26	; 38
      000479 26                    1425 	.db #0x26	; 38
      00047A 26                    1426 	.db #0x26	; 38
      00047B 26                    1427 	.db #0x26	; 38
      00047C 26                    1428 	.db #0x26	; 38
      00047D 26                    1429 	.db #0x26	; 38
      00047E 26                    1430 	.db #0x26	; 38
      00047F 26                    1431 	.db #0x26	; 38
      000480 26                    1432 	.db #0x26	; 38
      000481 26                    1433 	.db #0x26	; 38
      000482 26                    1434 	.db #0x26	; 38
      000483 26                    1435 	.db #0x26	; 38
      000484 26                    1436 	.db #0x26	; 38
      000485 26                    1437 	.db #0x26	; 38
      000486 2B                    1438 	.db #0x2b	; 43
      000487                       1439 _backgroundtiles:
      000487 40                    1440 	.db #0x40	; 64
      000488 38                    1441 	.db #0x38	; 56	'8'
      000489 3A                    1442 	.db #0x3a	; 58
      00048A 44                    1443 	.db #0x44	; 68	'D'
      00048B 7C                    1444 	.db #0x7c	; 124
      00048C 9A                    1445 	.db #0x9a	; 154
      00048D 5E                    1446 	.db #0x5e	; 94
      00048E E9                    1447 	.db #0xe9	; 233
      00048F 7A                    1448 	.db #0x7a	; 122	'z'
      000490 87                    1449 	.db #0x87	; 135
      000491 76                    1450 	.db #0x76	; 118	'v'
      000492 B9                    1451 	.db #0xb9	; 185
      000493 3C                    1452 	.db #0x3c	; 60
      000494 72                    1453 	.db #0x72	; 114	'r'
      000495 00                    1454 	.db #0x00	; 0
      000496 3C                    1455 	.db #0x3c	; 60
      000497 00                    1456 	.db #0x00	; 0
      000498 00                    1457 	.db #0x00	; 0
      000499 00                    1458 	.db #0x00	; 0
      00049A 00                    1459 	.db #0x00	; 0
      00049B 00                    1460 	.db #0x00	; 0
      00049C 00                    1461 	.db #0x00	; 0
      00049D 00                    1462 	.db #0x00	; 0
      00049E 00                    1463 	.db #0x00	; 0
      00049F 00                    1464 	.db #0x00	; 0
      0004A0 00                    1465 	.db #0x00	; 0
      0004A1 00                    1466 	.db #0x00	; 0
      0004A2 00                    1467 	.db #0x00	; 0
      0004A3 00                    1468 	.db #0x00	; 0
      0004A4 00                    1469 	.db #0x00	; 0
      0004A5 00                    1470 	.db #0x00	; 0
      0004A6 00                    1471 	.db #0x00	; 0
      0004A7 00                    1472 	.db #0x00	; 0
      0004A8 0F                    1473 	.db #0x0f	; 15
      0004A9 08                    1474 	.db #0x08	; 8
      0004AA 17                    1475 	.db #0x17	; 23
      0004AB 1C                    1476 	.db #0x1c	; 28
      0004AC 23                    1477 	.db #0x23	; 35
      0004AD 3E                    1478 	.db #0x3e	; 62
      0004AE 41                    1479 	.db #0x41	; 65	'A'
      0004AF 1B                    1480 	.db #0x1b	; 27
      0004B0 64                    1481 	.db #0x64	; 100	'd'
      0004B1 31                    1482 	.db #0x31	; 49	'1'
      0004B2 4E                    1483 	.db #0x4e	; 78	'N'
      0004B3 B1                    1484 	.db #0xb1	; 177
      0004B4 CE                    1485 	.db #0xce	; 206
      0004B5 BB                    1486 	.db #0xbb	; 187
      0004B6 C4                    1487 	.db #0xc4	; 196
      0004B7 00                    1488 	.db #0x00	; 0
      0004B8 F8                    1489 	.db #0xf8	; 248
      0004B9 00                    1490 	.db #0x00	; 0
      0004BA FC                    1491 	.db #0xfc	; 252
      0004BB E0                    1492 	.db #0xe0	; 224
      0004BC 1E                    1493 	.db #0x1e	; 30
      0004BD F0                    1494 	.db #0xf0	; 240
      0004BE 0F                    1495 	.db #0x0f	; 15
      0004BF BE                    1496 	.db #0xbe	; 190
      0004C0 01                    1497 	.db #0x01	; 1
      0004C1 BC                    1498 	.db #0xbc	; 188
      0004C2 02                    1499 	.db #0x02	; 2
      0004C3 CE                    1500 	.db #0xce	; 206
      0004C4 01                    1501 	.db #0x01	; 1
      0004C5 F6                    1502 	.db #0xf6	; 246
      0004C6 61                    1503 	.db #0x61	; 97	'a'
      0004C7 F4                    1504 	.db #0xf4	; 244
      0004C8 02                    1505 	.db #0x02	; 2
      0004C9 94                    1506 	.db #0x94	; 148
      0004CA 62                    1507 	.db #0x62	; 98	'b'
      0004CB E4                    1508 	.db #0xe4	; 228
      0004CC 02                    1509 	.db #0x02	; 2
      0004CD 6C                    1510 	.db #0x6c	; 108	'l'
      0004CE 82                    1511 	.db #0x82	; 130
      0004CF 70                    1512 	.db #0x70	; 112	'p'
      0004D0 8C                    1513 	.db #0x8c	; 140
      0004D1 60                    1514 	.db #0x60	; 96
      0004D2 90                    1515 	.db #0x90	; 144
      0004D3 00                    1516 	.db #0x00	; 0
      0004D4 E0                    1517 	.db #0xe0	; 224
      0004D5 80                    1518 	.db #0x80	; 128
      0004D6 80                    1519 	.db #0x80	; 128
      0004D7 8E                    1520 	.db #0x8e	; 142
      0004D8 F7                    1521 	.db #0xf7	; 247
      0004D9 8F                    1522 	.db #0x8f	; 143
      0004DA F3                    1523 	.db #0xf3	; 243
      0004DB 86                    1524 	.db #0x86	; 134
      0004DC F9                    1525 	.db #0xf9	; 249
      0004DD 42                    1526 	.db #0x42	; 66	'B'
      0004DE 7D                    1527 	.db #0x7d	; 125
      0004DF 80                    1528 	.db #0x80	; 128
      0004E0 FF                    1529 	.db #0xff	; 255
      0004E1 44                    1530 	.db #0x44	; 68	'D'
      0004E2 7F                    1531 	.db #0x7f	; 127
      0004E3 28                    1532 	.db #0x28	; 40
      0004E4 3F                    1533 	.db #0x3f	; 63
      0004E5 07                    1534 	.db #0x07	; 7
      0004E6 07                    1535 	.db #0x07	; 7
      0004E7 00                    1536 	.db #0x00	; 0
      0004E8 00                    1537 	.db #0x00	; 0
      0004E9 08                    1538 	.db #0x08	; 8
      0004EA 00                    1539 	.db #0x00	; 0
      0004EB 08                    1540 	.db #0x08	; 8
      0004EC 00                    1541 	.db #0x00	; 0
      0004ED 1C                    1542 	.db #0x1c	; 28
      0004EE 00                    1543 	.db #0x00	; 0
      0004EF 7F                    1544 	.db #0x7f	; 127
      0004F0 00                    1545 	.db #0x00	; 0
      0004F1 1C                    1546 	.db #0x1c	; 28
      0004F2 00                    1547 	.db #0x00	; 0
      0004F3 08                    1548 	.db #0x08	; 8
      0004F4 00                    1549 	.db #0x00	; 0
      0004F5 08                    1550 	.db #0x08	; 8
      0004F6 00                    1551 	.db #0x00	; 0
      0004F7 00                    1552 	.db #0x00	; 0
      0004F8 00                    1553 	.db #0x00	; 0
      0004F9 00                    1554 	.db #0x00	; 0
      0004FA 00                    1555 	.db #0x00	; 0
      0004FB 00                    1556 	.db #0x00	; 0
      0004FC 00                    1557 	.db #0x00	; 0
      0004FD 10                    1558 	.db #0x10	; 16
      0004FE 00                    1559 	.db #0x00	; 0
      0004FF 00                    1560 	.db #0x00	; 0
      000500 00                    1561 	.db #0x00	; 0
      000501 00                    1562 	.db #0x00	; 0
      000502 00                    1563 	.db #0x00	; 0
      000503 00                    1564 	.db #0x00	; 0
      000504 00                    1565 	.db #0x00	; 0
      000505 00                    1566 	.db #0x00	; 0
      000506 00                    1567 	.db #0x00	; 0
      000507                       1568 _healthblock:
      000507 FE                    1569 	.db #0xfe	; 254
      000508 FE                    1570 	.db #0xfe	; 254
      000509 FE                    1571 	.db #0xfe	; 254
      00050A FE                    1572 	.db #0xfe	; 254
      00050B FE                    1573 	.db #0xfe	; 254
      00050C FE                    1574 	.db #0xfe	; 254
      00050D FE                    1575 	.db #0xfe	; 254
      00050E FE                    1576 	.db #0xfe	; 254
      00050F FE                    1577 	.db #0xfe	; 254
      000510 FE                    1578 	.db #0xfe	; 254
      000511 FE                    1579 	.db #0xfe	; 254
      000512 FE                    1580 	.db #0xfe	; 254
      000513 FE                    1581 	.db #0xfe	; 254
      000514 FE                    1582 	.db #0xfe	; 254
      000515 00                    1583 	.db #0x00	; 0
      000516 00                    1584 	.db #0x00	; 0
      000517                       1585 _enemyOptionCount:
      000517 05                    1586 	.db #0x05	; 5
      000518                       1587 _enemy1:
      000518 66                    1588 	.db #0x66	; 102	'f'
      000519 24                    1589 	.db #0x24	; 36
      00051A E7                    1590 	.db #0xe7	; 231
      00051B 66                    1591 	.db #0x66	; 102	'f'
      00051C F7                    1592 	.db #0xf7	; 247
      00051D E7                    1593 	.db #0xe7	; 231
      00051E 1C                    1594 	.db #0x1c	; 28
      00051F 18                    1595 	.db #0x18	; 24
      000520 38                    1596 	.db #0x38	; 56	'8'
      000521 18                    1597 	.db #0x18	; 24
      000522 EF                    1598 	.db #0xef	; 239
      000523 E7                    1599 	.db #0xe7	; 231
      000524 E7                    1600 	.db #0xe7	; 231
      000525 66                    1601 	.db #0x66	; 102	'f'
      000526 66                    1602 	.db #0x66	; 102	'f'
      000527 24                    1603 	.db #0x24	; 36
      000528 00                    1604 	.db #0x00	; 0
      000529 00                    1605 	.db #0x00	; 0
      00052A 00                    1606 	.db #0x00	; 0
      00052B 00                    1607 	.db #0x00	; 0
      00052C 00                    1608 	.db #0x00	; 0
      00052D 00                    1609 	.db #0x00	; 0
      00052E 00                    1610 	.db #0x00	; 0
      00052F 00                    1611 	.db #0x00	; 0
      000530 00                    1612 	.db #0x00	; 0
      000531 00                    1613 	.db #0x00	; 0
      000532 00                    1614 	.db #0x00	; 0
      000533 00                    1615 	.db #0x00	; 0
      000534 00                    1616 	.db #0x00	; 0
      000535 00                    1617 	.db #0x00	; 0
      000536 00                    1618 	.db #0x00	; 0
      000537 00                    1619 	.db #0x00	; 0
      000538 3C                    1620 	.db #0x3c	; 60
      000539 3C                    1621 	.db #0x3c	; 60
      00053A 5E                    1622 	.db #0x5e	; 94
      00053B 62                    1623 	.db #0x62	; 98	'b'
      00053C 8F                    1624 	.db #0x8f	; 143
      00053D F1                    1625 	.db #0xf1	; 241
      00053E C7                    1626 	.db #0xc7	; 199
      00053F F9                    1627 	.db #0xf9	; 249
      000540 C3                    1628 	.db #0xc3	; 195
      000541 FD                    1629 	.db #0xfd	; 253
      000542 E1                    1630 	.db #0xe1	; 225
      000543 FF                    1631 	.db #0xff	; 255
      000544 7A                    1632 	.db #0x7a	; 122	'z'
      000545 7E                    1633 	.db #0x7e	; 126
      000546 3C                    1634 	.db #0x3c	; 60
      000547 3C                    1635 	.db #0x3c	; 60
      000548 00                    1636 	.db #0x00	; 0
      000549 00                    1637 	.db #0x00	; 0
      00054A 00                    1638 	.db #0x00	; 0
      00054B 00                    1639 	.db #0x00	; 0
      00054C 00                    1640 	.db #0x00	; 0
      00054D 00                    1641 	.db #0x00	; 0
      00054E 00                    1642 	.db #0x00	; 0
      00054F 00                    1643 	.db #0x00	; 0
      000550 00                    1644 	.db #0x00	; 0
      000551 00                    1645 	.db #0x00	; 0
      000552 00                    1646 	.db #0x00	; 0
      000553 00                    1647 	.db #0x00	; 0
      000554 00                    1648 	.db #0x00	; 0
      000555 00                    1649 	.db #0x00	; 0
      000556 00                    1650 	.db #0x00	; 0
      000557 00                    1651 	.db #0x00	; 0
      000558 3C                    1652 	.db #0x3c	; 60
      000559 3E                    1653 	.db #0x3e	; 62
      00055A 20                    1654 	.db #0x20	; 32
      00055B 38                    1655 	.db #0x38	; 56	'8'
      00055C 44                    1656 	.db #0x44	; 68	'D'
      00055D 78                    1657 	.db #0x78	; 120	'x'
      00055E BA                    1658 	.db #0xba	; 186
      00055F C4                    1659 	.db #0xc4	; 196
      000560 BA                    1660 	.db #0xba	; 186
      000561 C4                    1661 	.db #0xc4	; 196
      000562 44                    1662 	.db #0x44	; 68	'D'
      000563 78                    1663 	.db #0x78	; 120	'x'
      000564 20                    1664 	.db #0x20	; 32
      000565 38                    1665 	.db #0x38	; 56	'8'
      000566 3C                    1666 	.db #0x3c	; 60
      000567 3E                    1667 	.db #0x3e	; 62
      000568                       1668 _largeenemies:
      000568 00                    1669 	.db #0x00	; 0
      000569 00                    1670 	.db #0x00	; 0
      00056A 00                    1671 	.db #0x00	; 0
      00056B 00                    1672 	.db #0x00	; 0
      00056C 00                    1673 	.db #0x00	; 0
      00056D 00                    1674 	.db #0x00	; 0
      00056E 00                    1675 	.db #0x00	; 0
      00056F 00                    1676 	.db #0x00	; 0
      000570 00                    1677 	.db #0x00	; 0
      000571 00                    1678 	.db #0x00	; 0
      000572 00                    1679 	.db #0x00	; 0
      000573 00                    1680 	.db #0x00	; 0
      000574 00                    1681 	.db #0x00	; 0
      000575 00                    1682 	.db #0x00	; 0
      000576 7F                    1683 	.db #0x7f	; 127
      000577 7F                    1684 	.db #0x7f	; 127
      000578 7F                    1685 	.db #0x7f	; 127
      000579 7F                    1686 	.db #0x7f	; 127
      00057A 00                    1687 	.db #0x00	; 0
      00057B 00                    1688 	.db #0x00	; 0
      00057C 00                    1689 	.db #0x00	; 0
      00057D 00                    1690 	.db #0x00	; 0
      00057E 00                    1691 	.db #0x00	; 0
      00057F 00                    1692 	.db #0x00	; 0
      000580 00                    1693 	.db #0x00	; 0
      000581 00                    1694 	.db #0x00	; 0
      000582 00                    1695 	.db #0x00	; 0
      000583 00                    1696 	.db #0x00	; 0
      000584 00                    1697 	.db #0x00	; 0
      000585 00                    1698 	.db #0x00	; 0
      000586 00                    1699 	.db #0x00	; 0
      000587 00                    1700 	.db #0x00	; 0
      000588 00                    1701 	.db #0x00	; 0
      000589 00                    1702 	.db #0x00	; 0
      00058A 40                    1703 	.db #0x40	; 64
      00058B 40                    1704 	.db #0x40	; 64
      00058C 60                    1705 	.db #0x60	; 96
      00058D 60                    1706 	.db #0x60	; 96
      00058E 70                    1707 	.db #0x70	; 112	'p'
      00058F 70                    1708 	.db #0x70	; 112	'p'
      000590 78                    1709 	.db #0x78	; 120	'x'
      000591 78                    1710 	.db #0x78	; 120	'x'
      000592 7C                    1711 	.db #0x7c	; 124
      000593 7C                    1712 	.db #0x7c	; 124
      000594 7E                    1713 	.db #0x7e	; 126
      000595 7E                    1714 	.db #0x7e	; 126
      000596 FF                    1715 	.db #0xff	; 255
      000597 FF                    1716 	.db #0xff	; 255
      000598 FF                    1717 	.db #0xff	; 255
      000599 FF                    1718 	.db #0xff	; 255
      00059A 7E                    1719 	.db #0x7e	; 126
      00059B 7E                    1720 	.db #0x7e	; 126
      00059C 7C                    1721 	.db #0x7c	; 124
      00059D 7C                    1722 	.db #0x7c	; 124
      00059E 78                    1723 	.db #0x78	; 120	'x'
      00059F 78                    1724 	.db #0x78	; 120	'x'
      0005A0 70                    1725 	.db #0x70	; 112	'p'
      0005A1 70                    1726 	.db #0x70	; 112	'p'
      0005A2 60                    1727 	.db #0x60	; 96
      0005A3 60                    1728 	.db #0x60	; 96
      0005A4 40                    1729 	.db #0x40	; 64
      0005A5 40                    1730 	.db #0x40	; 64
      0005A6 00                    1731 	.db #0x00	; 0
      0005A7 00                    1732 	.db #0x00	; 0
      0005A8 07                    1733 	.db #0x07	; 7
      0005A9 00                    1734 	.db #0x00	; 0
      0005AA 18                    1735 	.db #0x18	; 24
      0005AB 00                    1736 	.db #0x00	; 0
      0005AC 20                    1737 	.db #0x20	; 32
      0005AD 00                    1738 	.db #0x00	; 0
      0005AE 4C                    1739 	.db #0x4c	; 76	'L'
      0005AF 0C                    1740 	.db #0x0c	; 12
      0005B0 43                    1741 	.db #0x43	; 67	'C'
      0005B1 0F                    1742 	.db #0x0f	; 15
      0005B2 84                    1743 	.db #0x84	; 132
      0005B3 27                    1744 	.db #0x27	; 39
      0005B4 80                    1745 	.db #0x80	; 128
      0005B5 13                    1746 	.db #0x13	; 19
      0005B6 83                    1747 	.db #0x83	; 131
      0005B7 2A                    1748 	.db #0x2a	; 42
      0005B8 83                    1749 	.db #0x83	; 131
      0005B9 16                    1750 	.db #0x16	; 22
      0005BA 80                    1751 	.db #0x80	; 128
      0005BB 23                    1752 	.db #0x23	; 35
      0005BC 84                    1753 	.db #0x84	; 132
      0005BD 07                    1754 	.db #0x07	; 7
      0005BE 43                    1755 	.db #0x43	; 67	'C'
      0005BF 0F                    1756 	.db #0x0f	; 15
      0005C0 4C                    1757 	.db #0x4c	; 76	'L'
      0005C1 0C                    1758 	.db #0x0c	; 12
      0005C2 20                    1759 	.db #0x20	; 32
      0005C3 00                    1760 	.db #0x00	; 0
      0005C4 18                    1761 	.db #0x18	; 24
      0005C5 00                    1762 	.db #0x00	; 0
      0005C6 07                    1763 	.db #0x07	; 7
      0005C7 00                    1764 	.db #0x00	; 0
      0005C8 E0                    1765 	.db #0xe0	; 224
      0005C9 00                    1766 	.db #0x00	; 0
      0005CA 18                    1767 	.db #0x18	; 24
      0005CB 00                    1768 	.db #0x00	; 0
      0005CC 04                    1769 	.db #0x04	; 4
      0005CD 00                    1770 	.db #0x00	; 0
      0005CE 02                    1771 	.db #0x02	; 2
      0005CF 00                    1772 	.db #0x00	; 0
      0005D0 02                    1773 	.db #0x02	; 2
      0005D1 00                    1774 	.db #0x00	; 0
      0005D2 C1                    1775 	.db #0xc1	; 193
      0005D3 C0                    1776 	.db #0xc0	; 192
      0005D4 11                    1777 	.db #0x11	; 17
      0005D5 F0                    1778 	.db #0xf0	; 240
      0005D6 E5                    1779 	.db #0xe5	; 229
      0005D7 1C                    1780 	.db #0x1c	; 28
      0005D8 E5                    1781 	.db #0xe5	; 229
      0005D9 1C                    1782 	.db #0x1c	; 28
      0005DA 11                    1783 	.db #0x11	; 17
      0005DB F0                    1784 	.db #0xf0	; 240
      0005DC C1                    1785 	.db #0xc1	; 193
      0005DD C0                    1786 	.db #0xc0	; 192
      0005DE 02                    1787 	.db #0x02	; 2
      0005DF 00                    1788 	.db #0x00	; 0
      0005E0 02                    1789 	.db #0x02	; 2
      0005E1 00                    1790 	.db #0x00	; 0
      0005E2 04                    1791 	.db #0x04	; 4
      0005E3 00                    1792 	.db #0x00	; 0
      0005E4 18                    1793 	.db #0x18	; 24
      0005E5 00                    1794 	.db #0x00	; 0
      0005E6 E0                    1795 	.db #0xe0	; 224
      0005E7 00                    1796 	.db #0x00	; 0
      0005E8                       1797 _ProjectileTiles:
      0005E8 24                    1798 	.db #0x24	; 36
      0005E9 18                    1799 	.db #0x18	; 24
      0005EA 18                    1800 	.db #0x18	; 24
      0005EB 3C                    1801 	.db #0x3c	; 60
      0005EC 18                    1802 	.db #0x18	; 24
      0005ED 3C                    1803 	.db #0x3c	; 60
      0005EE 24                    1804 	.db #0x24	; 36
      0005EF 18                    1805 	.db #0x18	; 24
      0005F0 00                    1806 	.db #0x00	; 0
      0005F1 00                    1807 	.db #0x00	; 0
      0005F2 00                    1808 	.db #0x00	; 0
      0005F3 00                    1809 	.db #0x00	; 0
      0005F4 00                    1810 	.db #0x00	; 0
      0005F5 00                    1811 	.db #0x00	; 0
      0005F6 00                    1812 	.db #0x00	; 0
      0005F7 00                    1813 	.db #0x00	; 0
      0005F8 00                    1814 	.db #0x00	; 0
      0005F9 00                    1815 	.db #0x00	; 0
      0005FA 00                    1816 	.db #0x00	; 0
      0005FB 00                    1817 	.db #0x00	; 0
      0005FC 00                    1818 	.db #0x00	; 0
      0005FD 00                    1819 	.db #0x00	; 0
      0005FE 00                    1820 	.db #0x00	; 0
      0005FF 00                    1821 	.db #0x00	; 0
      000600 00                    1822 	.db #0x00	; 0
      000601 00                    1823 	.db #0x00	; 0
      000602 00                    1824 	.db #0x00	; 0
      000603 00                    1825 	.db #0x00	; 0
      000604 00                    1826 	.db #0x00	; 0
      000605 00                    1827 	.db #0x00	; 0
      000606 00                    1828 	.db #0x00	; 0
      000607 00                    1829 	.db #0x00	; 0
      000608 00                    1830 	.db #0x00	; 0
      000609 00                    1831 	.db #0x00	; 0
      00060A 00                    1832 	.db #0x00	; 0
      00060B 00                    1833 	.db #0x00	; 0
      00060C 09                    1834 	.db #0x09	; 9
      00060D 06                    1835 	.db #0x06	; 6
      00060E 06                    1836 	.db #0x06	; 6
      00060F 0F                    1837 	.db #0x0f	; 15
      000610 06                    1838 	.db #0x06	; 6
      000611 0F                    1839 	.db #0x0f	; 15
      000612 09                    1840 	.db #0x09	; 9
      000613 06                    1841 	.db #0x06	; 6
      000614 00                    1842 	.db #0x00	; 0
      000615 00                    1843 	.db #0x00	; 0
      000616 00                    1844 	.db #0x00	; 0
      000617 00                    1845 	.db #0x00	; 0
      000618 00                    1846 	.db #0x00	; 0
      000619 00                    1847 	.db #0x00	; 0
      00061A 00                    1848 	.db #0x00	; 0
      00061B 00                    1849 	.db #0x00	; 0
      00061C 00                    1850 	.db #0x00	; 0
      00061D 00                    1851 	.db #0x00	; 0
      00061E 00                    1852 	.db #0x00	; 0
      00061F 00                    1853 	.db #0x00	; 0
      000620 00                    1854 	.db #0x00	; 0
      000621 00                    1855 	.db #0x00	; 0
      000622 00                    1856 	.db #0x00	; 0
      000623 00                    1857 	.db #0x00	; 0
      000624 00                    1858 	.db #0x00	; 0
      000625 00                    1859 	.db #0x00	; 0
      000626 00                    1860 	.db #0x00	; 0
      000627 00                    1861 	.db #0x00	; 0
      000628 09                    1862 	.db #0x09	; 9
      000629 06                    1863 	.db #0x06	; 6
      00062A 06                    1864 	.db #0x06	; 6
      00062B 0F                    1865 	.db #0x0f	; 15
      00062C 06                    1866 	.db #0x06	; 6
      00062D 0F                    1867 	.db #0x0f	; 15
      00062E 09                    1868 	.db #0x09	; 9
      00062F 06                    1869 	.db #0x06	; 6
      000630 00                    1870 	.db #0x00	; 0
      000631 00                    1871 	.db #0x00	; 0
      000632 00                    1872 	.db #0x00	; 0
      000633 00                    1873 	.db #0x00	; 0
      000634 00                    1874 	.db #0x00	; 0
      000635 00                    1875 	.db #0x00	; 0
      000636 00                    1876 	.db #0x00	; 0
      000637 00                    1877 	.db #0x00	; 0
      000638 00                    1878 	.db #0x00	; 0
      000639 00                    1879 	.db #0x00	; 0
      00063A 00                    1880 	.db #0x00	; 0
      00063B 00                    1881 	.db #0x00	; 0
      00063C 00                    1882 	.db #0x00	; 0
      00063D 00                    1883 	.db #0x00	; 0
      00063E 00                    1884 	.db #0x00	; 0
      00063F 00                    1885 	.db #0x00	; 0
      000640 00                    1886 	.db #0x00	; 0
      000641 00                    1887 	.db #0x00	; 0
      000642 00                    1888 	.db #0x00	; 0
      000643 00                    1889 	.db #0x00	; 0
      000644 00                    1890 	.db #0x00	; 0
      000645 00                    1891 	.db #0x00	; 0
      000646 00                    1892 	.db #0x00	; 0
      000647 00                    1893 	.db #0x00	; 0
      000648 99                    1894 	.db #0x99	; 153
      000649 66                    1895 	.db #0x66	; 102	'f'
      00064A 66                    1896 	.db #0x66	; 102	'f'
      00064B FF                    1897 	.db #0xff	; 255
      00064C 66                    1898 	.db #0x66	; 102	'f'
      00064D FF                    1899 	.db #0xff	; 255
      00064E 99                    1900 	.db #0x99	; 153
      00064F 66                    1901 	.db #0x66	; 102	'f'
      000650 00                    1902 	.db #0x00	; 0
      000651 00                    1903 	.db #0x00	; 0
      000652 00                    1904 	.db #0x00	; 0
      000653 00                    1905 	.db #0x00	; 0
      000654 00                    1906 	.db #0x00	; 0
      000655 00                    1907 	.db #0x00	; 0
      000656 00                    1908 	.db #0x00	; 0
      000657 00                    1909 	.db #0x00	; 0
      000658 00                    1910 	.db #0x00	; 0
      000659 00                    1911 	.db #0x00	; 0
      00065A 00                    1912 	.db #0x00	; 0
      00065B 00                    1913 	.db #0x00	; 0
      00065C 00                    1914 	.db #0x00	; 0
      00065D 00                    1915 	.db #0x00	; 0
      00065E 00                    1916 	.db #0x00	; 0
      00065F 00                    1917 	.db #0x00	; 0
      000660 00                    1918 	.db #0x00	; 0
      000661 00                    1919 	.db #0x00	; 0
      000662 00                    1920 	.db #0x00	; 0
      000663 00                    1921 	.db #0x00	; 0
      000664 00                    1922 	.db #0x00	; 0
      000665 00                    1923 	.db #0x00	; 0
      000666 00                    1924 	.db #0x00	; 0
      000667 00                    1925 	.db #0x00	; 0
      000668 09                    1926 	.db #0x09	; 9
      000669 06                    1927 	.db #0x06	; 6
      00066A 06                    1928 	.db #0x06	; 6
      00066B 0F                    1929 	.db #0x0f	; 15
      00066C 06                    1930 	.db #0x06	; 6
      00066D 0F                    1931 	.db #0x0f	; 15
      00066E 09                    1932 	.db #0x09	; 9
      00066F 06                    1933 	.db #0x06	; 6
      000670 09                    1934 	.db #0x09	; 9
      000671 06                    1935 	.db #0x06	; 6
      000672 06                    1936 	.db #0x06	; 6
      000673 0F                    1937 	.db #0x0f	; 15
      000674 06                    1938 	.db #0x06	; 6
      000675 0F                    1939 	.db #0x0f	; 15
      000676 09                    1940 	.db #0x09	; 9
      000677 06                    1941 	.db #0x06	; 6
      000678 00                    1942 	.db #0x00	; 0
      000679 00                    1943 	.db #0x00	; 0
      00067A 00                    1944 	.db #0x00	; 0
      00067B 00                    1945 	.db #0x00	; 0
      00067C 00                    1946 	.db #0x00	; 0
      00067D 00                    1947 	.db #0x00	; 0
      00067E 00                    1948 	.db #0x00	; 0
      00067F 00                    1949 	.db #0x00	; 0
      000680 00                    1950 	.db #0x00	; 0
      000681 00                    1951 	.db #0x00	; 0
      000682 00                    1952 	.db #0x00	; 0
      000683 00                    1953 	.db #0x00	; 0
      000684 00                    1954 	.db #0x00	; 0
      000685 00                    1955 	.db #0x00	; 0
      000686 00                    1956 	.db #0x00	; 0
      000687 00                    1957 	.db #0x00	; 0
      000688 90                    1958 	.db #0x90	; 144
      000689 60                    1959 	.db #0x60	; 96
      00068A 60                    1960 	.db #0x60	; 96
      00068B F0                    1961 	.db #0xf0	; 240
      00068C 60                    1962 	.db #0x60	; 96
      00068D F0                    1963 	.db #0xf0	; 240
      00068E 90                    1964 	.db #0x90	; 144
      00068F 60                    1965 	.db #0x60	; 96
      000690 09                    1966 	.db #0x09	; 9
      000691 06                    1967 	.db #0x06	; 6
      000692 06                    1968 	.db #0x06	; 6
      000693 0F                    1969 	.db #0x0f	; 15
      000694 06                    1970 	.db #0x06	; 6
      000695 0F                    1971 	.db #0x0f	; 15
      000696 09                    1972 	.db #0x09	; 9
      000697 06                    1973 	.db #0x06	; 6
      000698 00                    1974 	.db #0x00	; 0
      000699 00                    1975 	.db #0x00	; 0
      00069A 00                    1976 	.db #0x00	; 0
      00069B 00                    1977 	.db #0x00	; 0
      00069C 00                    1978 	.db #0x00	; 0
      00069D 00                    1979 	.db #0x00	; 0
      00069E 00                    1980 	.db #0x00	; 0
      00069F 00                    1981 	.db #0x00	; 0
      0006A0 00                    1982 	.db #0x00	; 0
      0006A1 00                    1983 	.db #0x00	; 0
      0006A2 00                    1984 	.db #0x00	; 0
      0006A3 00                    1985 	.db #0x00	; 0
      0006A4 00                    1986 	.db #0x00	; 0
      0006A5 00                    1987 	.db #0x00	; 0
      0006A6 00                    1988 	.db #0x00	; 0
      0006A7 00                    1989 	.db #0x00	; 0
      0006A8 18                    1990 	.db #0x18	; 24
      0006A9 00                    1991 	.db #0x00	; 0
      0006AA 18                    1992 	.db #0x18	; 24
      0006AB 18                    1993 	.db #0x18	; 24
      0006AC 18                    1994 	.db #0x18	; 24
      0006AD 18                    1995 	.db #0x18	; 24
      0006AE 3C                    1996 	.db #0x3c	; 60
      0006AF 18                    1997 	.db #0x18	; 24
      0006B0 3C                    1998 	.db #0x3c	; 60
      0006B1 18                    1999 	.db #0x18	; 24
      0006B2 3C                    2000 	.db #0x3c	; 60
      0006B3 3C                    2001 	.db #0x3c	; 60
      0006B4 7E                    2002 	.db #0x7e	; 126
      0006B5 3C                    2003 	.db #0x3c	; 60
      0006B6 7E                    2004 	.db #0x7e	; 126
      0006B7 24                    2005 	.db #0x24	; 36
      0006B8 00                    2006 	.db #0x00	; 0
      0006B9 00                    2007 	.db #0x00	; 0
      0006BA 00                    2008 	.db #0x00	; 0
      0006BB 00                    2009 	.db #0x00	; 0
      0006BC 00                    2010 	.db #0x00	; 0
      0006BD 00                    2011 	.db #0x00	; 0
      0006BE 00                    2012 	.db #0x00	; 0
      0006BF 00                    2013 	.db #0x00	; 0
      0006C0 00                    2014 	.db #0x00	; 0
      0006C1 00                    2015 	.db #0x00	; 0
      0006C2 00                    2016 	.db #0x00	; 0
      0006C3 00                    2017 	.db #0x00	; 0
      0006C4 00                    2018 	.db #0x00	; 0
      0006C5 00                    2019 	.db #0x00	; 0
      0006C6 00                    2020 	.db #0x00	; 0
      0006C7 00                    2021 	.db #0x00	; 0
      0006C8 C0                    2022 	.db #0xc0	; 192
      0006C9 00                    2023 	.db #0x00	; 0
      0006CA F8                    2024 	.db #0xf8	; 248
      0006CB E0                    2025 	.db #0xe0	; 224
      0006CC FF                    2026 	.db #0xff	; 255
      0006CD 7E                    2027 	.db #0x7e	; 126
      0006CE FF                    2028 	.db #0xff	; 255
      0006CF 7E                    2029 	.db #0x7e	; 126
      0006D0 F8                    2030 	.db #0xf8	; 248
      0006D1 E0                    2031 	.db #0xe0	; 224
      0006D2 C0                    2032 	.db #0xc0	; 192
      0006D3 00                    2033 	.db #0x00	; 0
      0006D4 00                    2034 	.db #0x00	; 0
      0006D5 00                    2035 	.db #0x00	; 0
      0006D6 00                    2036 	.db #0x00	; 0
      0006D7 00                    2037 	.db #0x00	; 0
      0006D8 00                    2038 	.db #0x00	; 0
      0006D9 00                    2039 	.db #0x00	; 0
      0006DA 00                    2040 	.db #0x00	; 0
      0006DB 00                    2041 	.db #0x00	; 0
      0006DC 00                    2042 	.db #0x00	; 0
      0006DD 00                    2043 	.db #0x00	; 0
      0006DE 00                    2044 	.db #0x00	; 0
      0006DF 00                    2045 	.db #0x00	; 0
      0006E0 00                    2046 	.db #0x00	; 0
      0006E1 00                    2047 	.db #0x00	; 0
      0006E2 00                    2048 	.db #0x00	; 0
      0006E3 00                    2049 	.db #0x00	; 0
      0006E4 00                    2050 	.db #0x00	; 0
      0006E5 00                    2051 	.db #0x00	; 0
      0006E6 00                    2052 	.db #0x00	; 0
      0006E7 00                    2053 	.db #0x00	; 0
      0006E8 06                    2054 	.db #0x06	; 6
      0006E9 00                    2055 	.db #0x00	; 0
      0006EA 0F                    2056 	.db #0x0f	; 15
      0006EB 06                    2057 	.db #0x06	; 6
      0006EC 1F                    2058 	.db #0x1f	; 31
      0006ED 0E                    2059 	.db #0x0e	; 14
      0006EE 7E                    2060 	.db #0x7e	; 126
      0006EF 1C                    2061 	.db #0x1c	; 28
      0006F0 FC                    2062 	.db #0xfc	; 252
      0006F1 78                    2063 	.db #0x78	; 120	'x'
      0006F2 F8                    2064 	.db #0xf8	; 248
      0006F3 F0                    2065 	.db #0xf0	; 240
      0006F4 F8                    2066 	.db #0xf8	; 248
      0006F5 70                    2067 	.db #0x70	; 112	'p'
      0006F6 70                    2068 	.db #0x70	; 112	'p'
      0006F7 20                    2069 	.db #0x20	; 32
      0006F8 00                    2070 	.db #0x00	; 0
      0006F9 00                    2071 	.db #0x00	; 0
      0006FA 00                    2072 	.db #0x00	; 0
      0006FB 00                    2073 	.db #0x00	; 0
      0006FC 00                    2074 	.db #0x00	; 0
      0006FD 00                    2075 	.db #0x00	; 0
      0006FE 00                    2076 	.db #0x00	; 0
      0006FF 00                    2077 	.db #0x00	; 0
      000700 00                    2078 	.db #0x00	; 0
      000701 00                    2079 	.db #0x00	; 0
      000702 00                    2080 	.db #0x00	; 0
      000703 00                    2081 	.db #0x00	; 0
      000704 00                    2082 	.db #0x00	; 0
      000705 00                    2083 	.db #0x00	; 0
      000706 00                    2084 	.db #0x00	; 0
      000707 00                    2085 	.db #0x00	; 0
      000708                       2086 _upgrade:
      000708 01                    2087 	.db #0x01	; 1
      000709 00 00                 2088 	.dw #0x0000
      00070B 00 00                 2089 	.dw #0x0000
      00070D 00                    2090 	.db #0x00	; 0
      00070E 00                    2091 	.db #0x00	; 0
      00070F 00                    2092 	.db #0x00	; 0
      000710 70                    2093 	.db #0x70	; 112	'p'
      000711                       2094 _ammo:
      000711 01                    2095 	.db #0x01	; 1
      000712 00 00                 2096 	.dw #0x0000
      000714 00 00                 2097 	.dw #0x0000
      000716 00                    2098 	.db #0x00	; 0
      000717 01                    2099 	.db #0x01	; 1
      000718 05                    2100 	.db #0x05	; 5
      000719 72                    2101 	.db #0x72	; 114	'r'
      00071A                       2102 _health:
      00071A 01                    2103 	.db #0x01	; 1
      00071B 00 00                 2104 	.dw #0x0000
      00071D 00 00                 2105 	.dw #0x0000
      00071F 00                    2106 	.db #0x00	; 0
      000720 02                    2107 	.db #0x02	; 2
      000721 32                    2108 	.db #0x32	; 50	'2'
      000722 74                    2109 	.db #0x74	; 116	't'
      000723                       2110 _Pickups:
      000723 7E                    2111 	.db #0x7e	; 126
      000724 00                    2112 	.db #0x00	; 0
      000725 81                    2113 	.db #0x81	; 129
      000726 00                    2114 	.db #0x00	; 0
      000727 D7                    2115 	.db #0xd7	; 215
      000728 56                    2116 	.db #0x56	; 86	'V'
      000729 D7                    2117 	.db #0xd7	; 215
      00072A 56                    2118 	.db #0x56	; 86	'V'
      00072B D5                    2119 	.db #0xd5	; 213
      00072C 54                    2120 	.db #0x54	; 84	'T'
      00072D F5                    2121 	.db #0xf5	; 245
      00072E 74                    2122 	.db #0x74	; 116	't'
      00072F 81                    2123 	.db #0x81	; 129
      000730 00                    2124 	.db #0x00	; 0
      000731 7E                    2125 	.db #0x7e	; 126
      000732 00                    2126 	.db #0x00	; 0
      000733 00                    2127 	.db #0x00	; 0
      000734 00                    2128 	.db #0x00	; 0
      000735 00                    2129 	.db #0x00	; 0
      000736 00                    2130 	.db #0x00	; 0
      000737 00                    2131 	.db #0x00	; 0
      000738 00                    2132 	.db #0x00	; 0
      000739 00                    2133 	.db #0x00	; 0
      00073A 00                    2134 	.db #0x00	; 0
      00073B 00                    2135 	.db #0x00	; 0
      00073C 00                    2136 	.db #0x00	; 0
      00073D 00                    2137 	.db #0x00	; 0
      00073E 00                    2138 	.db #0x00	; 0
      00073F 00                    2139 	.db #0x00	; 0
      000740 00                    2140 	.db #0x00	; 0
      000741 00                    2141 	.db #0x00	; 0
      000742 00                    2142 	.db #0x00	; 0
      000743 7E                    2143 	.db #0x7e	; 126
      000744 00                    2144 	.db #0x00	; 0
      000745 8F                    2145 	.db #0x8f	; 143
      000746 06                    2146 	.db #0x06	; 6
      000747 9F                    2147 	.db #0x9f	; 159
      000748 0E                    2148 	.db #0x0e	; 14
      000749 FF                    2149 	.db #0xff	; 255
      00074A 1C                    2150 	.db #0x1c	; 28
      00074B FD                    2151 	.db #0xfd	; 253
      00074C 78                    2152 	.db #0x78	; 120	'x'
      00074D F9                    2153 	.db #0xf9	; 249
      00074E 70                    2154 	.db #0x70	; 112	'p'
      00074F F9                    2155 	.db #0xf9	; 249
      000750 70                    2156 	.db #0x70	; 112	'p'
      000751 7E                    2157 	.db #0x7e	; 126
      000752 00                    2158 	.db #0x00	; 0
      000753 00                    2159 	.db #0x00	; 0
      000754 00                    2160 	.db #0x00	; 0
      000755 00                    2161 	.db #0x00	; 0
      000756 00                    2162 	.db #0x00	; 0
      000757 00                    2163 	.db #0x00	; 0
      000758 00                    2164 	.db #0x00	; 0
      000759 00                    2165 	.db #0x00	; 0
      00075A 00                    2166 	.db #0x00	; 0
      00075B 00                    2167 	.db #0x00	; 0
      00075C 00                    2168 	.db #0x00	; 0
      00075D 00                    2169 	.db #0x00	; 0
      00075E 00                    2170 	.db #0x00	; 0
      00075F 00                    2171 	.db #0x00	; 0
      000760 00                    2172 	.db #0x00	; 0
      000761 00                    2173 	.db #0x00	; 0
      000762 00                    2174 	.db #0x00	; 0
      000763 7E                    2175 	.db #0x7e	; 126
      000764 00                    2176 	.db #0x00	; 0
      000765 99                    2177 	.db #0x99	; 153
      000766 18                    2178 	.db #0x18	; 24
      000767 99                    2179 	.db #0x99	; 153
      000768 18                    2180 	.db #0x18	; 24
      000769 FF                    2181 	.db #0xff	; 255
      00076A 7E                    2182 	.db #0x7e	; 126
      00076B FF                    2183 	.db #0xff	; 255
      00076C 7E                    2184 	.db #0x7e	; 126
      00076D 99                    2185 	.db #0x99	; 153
      00076E 18                    2186 	.db #0x18	; 24
      00076F 99                    2187 	.db #0x99	; 153
      000770 18                    2188 	.db #0x18	; 24
      000771 7E                    2189 	.db #0x7e	; 126
      000772 00                    2190 	.db #0x00	; 0
      000773 00                    2191 	.db #0x00	; 0
      000774 00                    2192 	.db #0x00	; 0
      000775 00                    2193 	.db #0x00	; 0
      000776 00                    2194 	.db #0x00	; 0
      000777 00                    2195 	.db #0x00	; 0
      000778 00                    2196 	.db #0x00	; 0
      000779 00                    2197 	.db #0x00	; 0
      00077A 00                    2198 	.db #0x00	; 0
      00077B 00                    2199 	.db #0x00	; 0
      00077C 00                    2200 	.db #0x00	; 0
      00077D 00                    2201 	.db #0x00	; 0
      00077E 00                    2202 	.db #0x00	; 0
      00077F 00                    2203 	.db #0x00	; 0
      000780 00                    2204 	.db #0x00	; 0
      000781 00                    2205 	.db #0x00	; 0
      000782 00                    2206 	.db #0x00	; 0
      000783                       2207 _Player1:
      000783 08                    2208 	.db #0x08	; 8
      000784 08                    2209 	.db #0x08	; 8
      000785 1C                    2210 	.db #0x1c	; 28
      000786 14                    2211 	.db #0x14	; 20
      000787 38                    2212 	.db #0x38	; 56	'8'
      000788 28                    2213 	.db #0x28	; 40
      000789 68                    2214 	.db #0x68	; 104	'h'
      00078A 58                    2215 	.db #0x58	; 88	'X'
      00078B 50                    2216 	.db #0x50	; 80	'P'
      00078C 71                    2217 	.db #0x71	; 113	'q'
      00078D D0                    2218 	.db #0xd0	; 208
      00078E B2                    2219 	.db #0xb2	; 178
      00078F D5                    2220 	.db #0xd5	; 213
      000790 B6                    2221 	.db #0xb6	; 182
      000791 D5                    2222 	.db #0xd5	; 213
      000792 B6                    2223 	.db #0xb6	; 182
      000793 D5                    2224 	.db #0xd5	; 213
      000794 B6                    2225 	.db #0xb6	; 182
      000795 CD                    2226 	.db #0xcd	; 205
      000796 BE                    2227 	.db #0xbe	; 190
      000797 C5                    2228 	.db #0xc5	; 197
      000798 BE                    2229 	.db #0xbe	; 190
      000799 65                    2230 	.db #0x65	; 101	'e'
      00079A 5E                    2231 	.db #0x5e	; 94
      00079B 3E                    2232 	.db #0x3e	; 62
      00079C 2F                    2233 	.db #0x2f	; 47
      00079D 13                    2234 	.db #0x13	; 19
      00079E 13                    2235 	.db #0x13	; 19
      00079F 06                    2236 	.db #0x06	; 6
      0007A0 07                    2237 	.db #0x07	; 7
      0007A1 07                    2238 	.db #0x07	; 7
      0007A2 05                    2239 	.db #0x05	; 5
      0007A3 10                    2240 	.db #0x10	; 16
      0007A4 10                    2241 	.db #0x10	; 16
      0007A5 38                    2242 	.db #0x38	; 56	'8'
      0007A6 28                    2243 	.db #0x28	; 40
      0007A7 1C                    2244 	.db #0x1c	; 28
      0007A8 14                    2245 	.db #0x14	; 20
      0007A9 16                    2246 	.db #0x16	; 22
      0007AA 1A                    2247 	.db #0x1a	; 26
      0007AB 0A                    2248 	.db #0x0a	; 10
      0007AC 8E                    2249 	.db #0x8e	; 142
      0007AD 0B                    2250 	.db #0x0b	; 11
      0007AE 4D                    2251 	.db #0x4d	; 77	'M'
      0007AF AB                    2252 	.db #0xab	; 171
      0007B0 6D                    2253 	.db #0x6d	; 109	'm'
      0007B1 AB                    2254 	.db #0xab	; 171
      0007B2 6D                    2255 	.db #0x6d	; 109	'm'
      0007B3 AB                    2256 	.db #0xab	; 171
      0007B4 6D                    2257 	.db #0x6d	; 109	'm'
      0007B5 B3                    2258 	.db #0xb3	; 179
      0007B6 7D                    2259 	.db #0x7d	; 125
      0007B7 A3                    2260 	.db #0xa3	; 163
      0007B8 7D                    2261 	.db #0x7d	; 125
      0007B9 A6                    2262 	.db #0xa6	; 166
      0007BA 7A                    2263 	.db #0x7a	; 122	'z'
      0007BB 7C                    2264 	.db #0x7c	; 124
      0007BC F4                    2265 	.db #0xf4	; 244
      0007BD C8                    2266 	.db #0xc8	; 200
      0007BE C8                    2267 	.db #0xc8	; 200
      0007BF 60                    2268 	.db #0x60	; 96
      0007C0 E0                    2269 	.db #0xe0	; 224
      0007C1 E0                    2270 	.db #0xe0	; 224
      0007C2 A0                    2271 	.db #0xa0	; 160
      0007C3 07                    2272 	.db #0x07	; 7
      0007C4 07                    2273 	.db #0x07	; 7
      0007C5 0F                    2274 	.db #0x0f	; 15
      0007C6 08                    2275 	.db #0x08	; 8
      0007C7 18                    2276 	.db #0x18	; 24
      0007C8 17                    2277 	.db #0x17	; 23
      0007C9 31                    2278 	.db #0x31	; 49	'1'
      0007CA 2F                    2279 	.db #0x2f	; 47
      0007CB 12                    2280 	.db #0x12	; 18
      0007CC 1E                    2281 	.db #0x1e	; 30
      0007CD DF                    2282 	.db #0xdf	; 223
      0007CE DF                    2283 	.db #0xdf	; 223
      0007CF F0                    2284 	.db #0xf0	; 240
      0007D0 7F                    2285 	.db #0x7f	; 127
      0007D1 AF                    2286 	.db #0xaf	; 175
      0007D2 F0                    2287 	.db #0xf0	; 240
      0007D3 AF                    2288 	.db #0xaf	; 175
      0007D4 F0                    2289 	.db #0xf0	; 240
      0007D5 F0                    2290 	.db #0xf0	; 240
      0007D6 7F                    2291 	.db #0x7f	; 127
      0007D7 DF                    2292 	.db #0xdf	; 223
      0007D8 DF                    2293 	.db #0xdf	; 223
      0007D9 12                    2294 	.db #0x12	; 18
      0007DA 1E                    2295 	.db #0x1e	; 30
      0007DB 31                    2296 	.db #0x31	; 49	'1'
      0007DC 2F                    2297 	.db #0x2f	; 47
      0007DD 18                    2298 	.db #0x18	; 24
      0007DE 17                    2299 	.db #0x17	; 23
      0007DF 0F                    2300 	.db #0x0f	; 15
      0007E0 08                    2301 	.db #0x08	; 8
      0007E1 07                    2302 	.db #0x07	; 7
      0007E2 07                    2303 	.db #0x07	; 7
      0007E3 E0                    2304 	.db #0xe0	; 224
      0007E4 E0                    2305 	.db #0xe0	; 224
      0007E5 F8                    2306 	.db #0xf8	; 248
      0007E6 18                    2307 	.db #0x18	; 24
      0007E7 0C                    2308 	.db #0x0c	; 12
      0007E8 F4                    2309 	.db #0xf4	; 244
      0007E9 F6                    2310 	.db #0xf6	; 246
      0007EA FA                    2311 	.db #0xfa	; 250
      0007EB 0F                    2312 	.db #0x0f	; 15
      0007EC 0D                    2313 	.db #0x0d	; 13
      0007ED C2                    2314 	.db #0xc2	; 194
      0007EE C2                    2315 	.db #0xc2	; 194
      0007EF 00                    2316 	.db #0x00	; 0
      0007F0 E0                    2317 	.db #0xe0	; 224
      0007F1 C0                    2318 	.db #0xc0	; 192
      0007F2 10                    2319 	.db #0x10	; 16
      0007F3 C0                    2320 	.db #0xc0	; 192
      0007F4 10                    2321 	.db #0x10	; 16
      0007F5 00                    2322 	.db #0x00	; 0
      0007F6 E0                    2323 	.db #0xe0	; 224
      0007F7 C2                    2324 	.db #0xc2	; 194
      0007F8 C2                    2325 	.db #0xc2	; 194
      0007F9 0F                    2326 	.db #0x0f	; 15
      0007FA 0D                    2327 	.db #0x0d	; 13
      0007FB F6                    2328 	.db #0xf6	; 246
      0007FC FA                    2329 	.db #0xfa	; 250
      0007FD 0C                    2330 	.db #0x0c	; 12
      0007FE F4                    2331 	.db #0xf4	; 244
      0007FF F8                    2332 	.db #0xf8	; 248
      000800 18                    2333 	.db #0x18	; 24
      000801 E0                    2334 	.db #0xe0	; 224
      000802 E0                    2335 	.db #0xe0	; 224
      000803 07                    2336 	.db #0x07	; 7
      000804 07                    2337 	.db #0x07	; 7
      000805 1B                    2338 	.db #0x1b	; 27
      000806 1C                    2339 	.db #0x1c	; 28
      000807 38                    2340 	.db #0x38	; 56	'8'
      000808 27                    2341 	.db #0x27	; 39
      000809 60                    2342 	.db #0x60	; 96
      00080A 5E                    2343 	.db #0x5e	; 94
      00080B 60                    2344 	.db #0x60	; 96
      00080C 5C                    2345 	.db #0x5c	; 92
      00080D 41                    2346 	.db #0x41	; 65	'A'
      00080E 79                    2347 	.db #0x79	; 121	'y'
      00080F C4                    2348 	.db #0xc4	; 196
      000810 B7                    2349 	.db #0xb7	; 183
      000811 99                    2350 	.db #0x99	; 153
      000812 FE                    2351 	.db #0xfe	; 254
      000813 B3                    2352 	.db #0xb3	; 179
      000814 EC                    2353 	.db #0xec	; 236
      000815 67                    2354 	.db #0x67	; 103	'g'
      000816 58                    2355 	.db #0x58	; 88	'X'
      000817 2E                    2356 	.db #0x2e	; 46
      000818 31                    2357 	.db #0x31	; 49	'1'
      000819 5C                    2358 	.db #0x5c	; 92
      00081A 73                    2359 	.db #0x73	; 115	's'
      00081B 69                    2360 	.db #0x69	; 105	'i'
      00081C 5E                    2361 	.db #0x5e	; 94
      00081D 37                    2362 	.db #0x37	; 55	'7'
      00081E 2D                    2363 	.db #0x2d	; 45
      00081F 1A                    2364 	.db #0x1a	; 26
      000820 1B                    2365 	.db #0x1b	; 27
      000821 01                    2366 	.db #0x01	; 1
      000822 01                    2367 	.db #0x01	; 1
      000823 E0                    2368 	.db #0xe0	; 224
      000824 E0                    2369 	.db #0xe0	; 224
      000825 90                    2370 	.db #0x90	; 144
      000826 70                    2371 	.db #0x70	; 112	'p'
      000827 C0                    2372 	.db #0xc0	; 192
      000828 C0                    2373 	.db #0xc0	; 192
      000829 00                    2374 	.db #0x00	; 0
      00082A 00                    2375 	.db #0x00	; 0
      00082B 02                    2376 	.db #0x02	; 2
      00082C 02                    2377 	.db #0x02	; 2
      00082D C1                    2378 	.db #0xc1	; 193
      00082E C3                    2379 	.db #0xc3	; 195
      00082F 65                    2380 	.db #0x65	; 101	'e'
      000830 A7                    2381 	.db #0xa7	; 167
      000831 A7                    2382 	.db #0xa7	; 167
      000832 65                    2383 	.db #0x65	; 101	'e'
      000833 A3                    2384 	.db #0xa3	; 163
      000834 65                    2385 	.db #0x65	; 101	'e'
      000835 03                    2386 	.db #0x03	; 3
      000836 CD                    2387 	.db #0xcd	; 205
      000837 41                    2388 	.db #0x41	; 65	'A'
      000838 DF                    2389 	.db #0xdf	; 223
      000839 86                    2390 	.db #0x86	; 134
      00083A BA                    2391 	.db #0xba	; 186
      00083B 86                    2392 	.db #0x86	; 134
      00083C FA                    2393 	.db #0xfa	; 250
      00083D 1C                    2394 	.db #0x1c	; 28
      00083E E4                    2395 	.db #0xe4	; 228
      00083F 78                    2396 	.db #0x78	; 120	'x'
      000840 B8                    2397 	.db #0xb8	; 184
      000841 C0                    2398 	.db #0xc0	; 192
      000842 C0                    2399 	.db #0xc0	; 192
      000843 00                    2400 	.db #0x00	; 0
      000844 00                    2401 	.db #0x00	; 0
      000845 00                    2402 	.db #0x00	; 0
      000846 00                    2403 	.db #0x00	; 0
      000847 00                    2404 	.db #0x00	; 0
      000848 00                    2405 	.db #0x00	; 0
      000849 00                    2406 	.db #0x00	; 0
      00084A 00                    2407 	.db #0x00	; 0
      00084B 00                    2408 	.db #0x00	; 0
      00084C 00                    2409 	.db #0x00	; 0
      00084D 00                    2410 	.db #0x00	; 0
      00084E 00                    2411 	.db #0x00	; 0
      00084F 00                    2412 	.db #0x00	; 0
      000850 00                    2413 	.db #0x00	; 0
      000851 00                    2414 	.db #0x00	; 0
      000852 00                    2415 	.db #0x00	; 0
      000853 00                    2416 	.db #0x00	; 0
      000854 00                    2417 	.db #0x00	; 0
      000855 00                    2418 	.db #0x00	; 0
      000856 00                    2419 	.db #0x00	; 0
      000857 00                    2420 	.db #0x00	; 0
      000858 00                    2421 	.db #0x00	; 0
      000859 00                    2422 	.db #0x00	; 0
      00085A 00                    2423 	.db #0x00	; 0
      00085B 00                    2424 	.db #0x00	; 0
      00085C 00                    2425 	.db #0x00	; 0
      00085D 00                    2426 	.db #0x00	; 0
      00085E 00                    2427 	.db #0x00	; 0
      00085F 00                    2428 	.db #0x00	; 0
      000860 00                    2429 	.db #0x00	; 0
      000861 00                    2430 	.db #0x00	; 0
      000862 00                    2431 	.db #0x00	; 0
      000863 00                    2432 	.db #0x00	; 0
      000864 00                    2433 	.db #0x00	; 0
      000865 00                    2434 	.db #0x00	; 0
      000866 00                    2435 	.db #0x00	; 0
      000867 00                    2436 	.db #0x00	; 0
      000868 00                    2437 	.db #0x00	; 0
      000869 00                    2438 	.db #0x00	; 0
      00086A 00                    2439 	.db #0x00	; 0
      00086B 00                    2440 	.db #0x00	; 0
      00086C 00                    2441 	.db #0x00	; 0
      00086D 00                    2442 	.db #0x00	; 0
      00086E 00                    2443 	.db #0x00	; 0
      00086F 00                    2444 	.db #0x00	; 0
      000870 00                    2445 	.db #0x00	; 0
      000871 00                    2446 	.db #0x00	; 0
      000872 00                    2447 	.db #0x00	; 0
      000873 00                    2448 	.db #0x00	; 0
      000874 00                    2449 	.db #0x00	; 0
      000875 00                    2450 	.db #0x00	; 0
      000876 00                    2451 	.db #0x00	; 0
      000877 00                    2452 	.db #0x00	; 0
      000878 00                    2453 	.db #0x00	; 0
      000879 00                    2454 	.db #0x00	; 0
      00087A 00                    2455 	.db #0x00	; 0
      00087B 00                    2456 	.db #0x00	; 0
      00087C 00                    2457 	.db #0x00	; 0
      00087D 00                    2458 	.db #0x00	; 0
      00087E 00                    2459 	.db #0x00	; 0
      00087F 00                    2460 	.db #0x00	; 0
      000880 00                    2461 	.db #0x00	; 0
      000881 00                    2462 	.db #0x00	; 0
      000882 00                    2463 	.db #0x00	; 0
      000883                       2464 _ex:
      000883 00                    2465 	.db #0x00	; 0
      000884 00                    2466 	.db #0x00	; 0
      000885 00                    2467 	.db #0x00	; 0
      000886 00                    2468 	.db #0x00	; 0
      000887 00                    2469 	.db #0x00	; 0
      000888 00                    2470 	.db #0x00	; 0
      000889                       2471 _Ex1:
      000889 00                    2472 	.db #0x00	; 0
      00088A 00                    2473 	.db #0x00	; 0
      00088B 00                    2474 	.db #0x00	; 0
      00088C 00                    2475 	.db #0x00	; 0
      00088D 00                    2476 	.db #0x00	; 0
      00088E 00                    2477 	.db #0x00	; 0
      00088F 00                    2478 	.db #0x00	; 0
      000890 00                    2479 	.db #0x00	; 0
      000891 00                    2480 	.db #0x00	; 0
      000892 00                    2481 	.db #0x00	; 0
      000893 04                    2482 	.db #0x04	; 4
      000894 04                    2483 	.db #0x04	; 4
      000895 06                    2484 	.db #0x06	; 6
      000896 06                    2485 	.db #0x06	; 6
      000897 06                    2486 	.db #0x06	; 6
      000898 06                    2487 	.db #0x06	; 6
      000899 00                    2488 	.db #0x00	; 0
      00089A 00                    2489 	.db #0x00	; 0
      00089B 00                    2490 	.db #0x00	; 0
      00089C 00                    2491 	.db #0x00	; 0
      00089D 03                    2492 	.db #0x03	; 3
      00089E 03                    2493 	.db #0x03	; 3
      00089F 07                    2494 	.db #0x07	; 7
      0008A0 07                    2495 	.db #0x07	; 7
      0008A1 02                    2496 	.db #0x02	; 2
      0008A2 02                    2497 	.db #0x02	; 2
      0008A3 00                    2498 	.db #0x00	; 0
      0008A4 00                    2499 	.db #0x00	; 0
      0008A5 00                    2500 	.db #0x00	; 0
      0008A6 00                    2501 	.db #0x00	; 0
      0008A7 00                    2502 	.db #0x00	; 0
      0008A8 00                    2503 	.db #0x00	; 0
      0008A9 00                    2504 	.db #0x00	; 0
      0008AA 00                    2505 	.db #0x00	; 0
      0008AB 00                    2506 	.db #0x00	; 0
      0008AC 00                    2507 	.db #0x00	; 0
      0008AD 00                    2508 	.db #0x00	; 0
      0008AE 00                    2509 	.db #0x00	; 0
      0008AF 00                    2510 	.db #0x00	; 0
      0008B0 00                    2511 	.db #0x00	; 0
      0008B1 00                    2512 	.db #0x00	; 0
      0008B2 00                    2513 	.db #0x00	; 0
      0008B3 00                    2514 	.db #0x00	; 0
      0008B4 00                    2515 	.db #0x00	; 0
      0008B5 00                    2516 	.db #0x00	; 0
      0008B6 00                    2517 	.db #0x00	; 0
      0008B7 38                    2518 	.db #0x38	; 56	'8'
      0008B8 38                    2519 	.db #0x38	; 56	'8'
      0008B9 38                    2520 	.db #0x38	; 56	'8'
      0008BA 38                    2521 	.db #0x38	; 56	'8'
      0008BB 30                    2522 	.db #0x30	; 48	'0'
      0008BC 30                    2523 	.db #0x30	; 48	'0'
      0008BD 00                    2524 	.db #0x00	; 0
      0008BE 00                    2525 	.db #0x00	; 0
      0008BF 00                    2526 	.db #0x00	; 0
      0008C0 00                    2527 	.db #0x00	; 0
      0008C1 00                    2528 	.db #0x00	; 0
      0008C2 00                    2529 	.db #0x00	; 0
      0008C3 00                    2530 	.db #0x00	; 0
      0008C4 00                    2531 	.db #0x00	; 0
      0008C5 00                    2532 	.db #0x00	; 0
      0008C6 00                    2533 	.db #0x00	; 0
      0008C7 00                    2534 	.db #0x00	; 0
      0008C8 00                    2535 	.db #0x00	; 0
      0008C9 00                    2536 	.db #0x00	; 0
      0008CA 00                    2537 	.db #0x00	; 0
      0008CB 00                    2538 	.db #0x00	; 0
      0008CC 00                    2539 	.db #0x00	; 0
      0008CD 00                    2540 	.db #0x00	; 0
      0008CE 00                    2541 	.db #0x00	; 0
      0008CF 18                    2542 	.db #0x18	; 24
      0008D0 18                    2543 	.db #0x18	; 24
      0008D1 3E                    2544 	.db #0x3e	; 62
      0008D2 3E                    2545 	.db #0x3e	; 62
      0008D3 3E                    2546 	.db #0x3e	; 62
      0008D4 3E                    2547 	.db #0x3e	; 62
      0008D5 1C                    2548 	.db #0x1c	; 28
      0008D6 1C                    2549 	.db #0x1c	; 28
      0008D7 08                    2550 	.db #0x08	; 8
      0008D8 08                    2551 	.db #0x08	; 8
      0008D9 00                    2552 	.db #0x00	; 0
      0008DA 00                    2553 	.db #0x00	; 0
      0008DB 00                    2554 	.db #0x00	; 0
      0008DC 00                    2555 	.db #0x00	; 0
      0008DD 07                    2556 	.db #0x07	; 7
      0008DE 07                    2557 	.db #0x07	; 7
      0008DF 07                    2558 	.db #0x07	; 7
      0008E0 07                    2559 	.db #0x07	; 7
      0008E1 07                    2560 	.db #0x07	; 7
      0008E2 07                    2561 	.db #0x07	; 7
      0008E3 03                    2562 	.db #0x03	; 3
      0008E4 03                    2563 	.db #0x03	; 3
      0008E5 03                    2564 	.db #0x03	; 3
      0008E6 03                    2565 	.db #0x03	; 3
      0008E7 00                    2566 	.db #0x00	; 0
      0008E8 00                    2567 	.db #0x00	; 0
      0008E9 00                    2568 	.db #0x00	; 0
      0008EA 00                    2569 	.db #0x00	; 0
      0008EB 00                    2570 	.db #0x00	; 0
      0008EC 00                    2571 	.db #0x00	; 0
      0008ED 04                    2572 	.db #0x04	; 4
      0008EE 04                    2573 	.db #0x04	; 4
      0008EF 1E                    2574 	.db #0x1e	; 30
      0008F0 1E                    2575 	.db #0x1e	; 30
      0008F1 3E                    2576 	.db #0x3e	; 62
      0008F2 3E                    2577 	.db #0x3e	; 62
      0008F3 3E                    2578 	.db #0x3e	; 62
      0008F4 3E                    2579 	.db #0x3e	; 62
      0008F5 1E                    2580 	.db #0x1e	; 30
      0008F6 1E                    2581 	.db #0x1e	; 30
      0008F7 0C                    2582 	.db #0x0c	; 12
      0008F8 0C                    2583 	.db #0x0c	; 12
      0008F9 00                    2584 	.db #0x00	; 0
      0008FA 00                    2585 	.db #0x00	; 0
      0008FB 00                    2586 	.db #0x00	; 0
      0008FC 00                    2587 	.db #0x00	; 0
      0008FD 00                    2588 	.db #0x00	; 0
      0008FE 00                    2589 	.db #0x00	; 0
      0008FF 80                    2590 	.db #0x80	; 128
      000900 80                    2591 	.db #0x80	; 128
      000901 C0                    2592 	.db #0xc0	; 192
      000902 C0                    2593 	.db #0xc0	; 192
      000903 80                    2594 	.db #0x80	; 128
      000904 80                    2595 	.db #0x80	; 128
      000905 00                    2596 	.db #0x00	; 0
      000906 00                    2597 	.db #0x00	; 0
      000907 00                    2598 	.db #0x00	; 0
      000908 00                    2599 	.db #0x00	; 0
      000909 00                    2600 	.db #0x00	; 0
      00090A 00                    2601 	.db #0x00	; 0
      00090B 20                    2602 	.db #0x20	; 32
      00090C 20                    2603 	.db #0x20	; 32
      00090D 70                    2604 	.db #0x70	; 112	'p'
      00090E 70                    2605 	.db #0x70	; 112	'p'
      00090F 70                    2606 	.db #0x70	; 112	'p'
      000910 70                    2607 	.db #0x70	; 112	'p'
      000911 60                    2608 	.db #0x60	; 96
      000912 60                    2609 	.db #0x60	; 96
      000913 00                    2610 	.db #0x00	; 0
      000914 00                    2611 	.db #0x00	; 0
      000915 00                    2612 	.db #0x00	; 0
      000916 00                    2613 	.db #0x00	; 0
      000917 00                    2614 	.db #0x00	; 0
      000918 00                    2615 	.db #0x00	; 0
      000919 00                    2616 	.db #0x00	; 0
      00091A 00                    2617 	.db #0x00	; 0
      00091B 00                    2618 	.db #0x00	; 0
      00091C 00                    2619 	.db #0x00	; 0
      00091D 00                    2620 	.db #0x00	; 0
      00091E 00                    2621 	.db #0x00	; 0
      00091F 00                    2622 	.db #0x00	; 0
      000920 00                    2623 	.db #0x00	; 0
      000921 00                    2624 	.db #0x00	; 0
      000922 00                    2625 	.db #0x00	; 0
      000923 07                    2626 	.db #0x07	; 7
      000924 07                    2627 	.db #0x07	; 7
      000925 07                    2628 	.db #0x07	; 7
      000926 07                    2629 	.db #0x07	; 7
      000927 06                    2630 	.db #0x06	; 6
      000928 06                    2631 	.db #0x06	; 6
      000929 00                    2632 	.db #0x00	; 0
      00092A 00                    2633 	.db #0x00	; 0
      00092B 04                    2634 	.db #0x04	; 4
      00092C 04                    2635 	.db #0x04	; 4
      00092D 0E                    2636 	.db #0x0e	; 14
      00092E 0E                    2637 	.db #0x0e	; 14
      00092F 0E                    2638 	.db #0x0e	; 14
      000930 0E                    2639 	.db #0x0e	; 14
      000931 00                    2640 	.db #0x00	; 0
      000932 00                    2641 	.db #0x00	; 0
      000933 00                    2642 	.db #0x00	; 0
      000934 00                    2643 	.db #0x00	; 0
      000935 00                    2644 	.db #0x00	; 0
      000936 00                    2645 	.db #0x00	; 0
      000937 00                    2646 	.db #0x00	; 0
      000938 00                    2647 	.db #0x00	; 0
      000939 00                    2648 	.db #0x00	; 0
      00093A 00                    2649 	.db #0x00	; 0
      00093B 00                    2650 	.db #0x00	; 0
      00093C 00                    2651 	.db #0x00	; 0
      00093D 00                    2652 	.db #0x00	; 0
      00093E 00                    2653 	.db #0x00	; 0
      00093F 00                    2654 	.db #0x00	; 0
      000940 00                    2655 	.db #0x00	; 0
      000941 00                    2656 	.db #0x00	; 0
      000942 00                    2657 	.db #0x00	; 0
      000943 00                    2658 	.db #0x00	; 0
      000944 00                    2659 	.db #0x00	; 0
      000945 00                    2660 	.db #0x00	; 0
      000946 00                    2661 	.db #0x00	; 0
      000947 00                    2662 	.db #0x00	; 0
      000948 00                    2663 	.db #0x00	; 0
      000949 00                    2664 	.db #0x00	; 0
      00094A 00                    2665 	.db #0x00	; 0
      00094B 40                    2666 	.db #0x40	; 64
      00094C 40                    2667 	.db #0x40	; 64
      00094D 60                    2668 	.db #0x60	; 96
      00094E 60                    2669 	.db #0x60	; 96
      00094F 00                    2670 	.db #0x00	; 0
      000950 00                    2671 	.db #0x00	; 0
      000951 00                    2672 	.db #0x00	; 0
      000952 00                    2673 	.db #0x00	; 0
      000953 00                    2674 	.db #0x00	; 0
      000954 00                    2675 	.db #0x00	; 0
      000955 00                    2676 	.db #0x00	; 0
      000956 00                    2677 	.db #0x00	; 0
      000957 00                    2678 	.db #0x00	; 0
      000958 00                    2679 	.db #0x00	; 0
      000959 00                    2680 	.db #0x00	; 0
      00095A 00                    2681 	.db #0x00	; 0
      00095B 00                    2682 	.db #0x00	; 0
      00095C 00                    2683 	.db #0x00	; 0
      00095D 00                    2684 	.db #0x00	; 0
      00095E 00                    2685 	.db #0x00	; 0
      00095F 00                    2686 	.db #0x00	; 0
      000960 00                    2687 	.db #0x00	; 0
      000961 00                    2688 	.db #0x00	; 0
      000962 00                    2689 	.db #0x00	; 0
      000963 00                    2690 	.db #0x00	; 0
      000964 00                    2691 	.db #0x00	; 0
      000965 04                    2692 	.db #0x04	; 4
      000966 04                    2693 	.db #0x04	; 4
      000967 06                    2694 	.db #0x06	; 6
      000968 06                    2695 	.db #0x06	; 6
      000969 00                    2696 	.db #0x00	; 0
      00096A 00                    2697 	.db #0x00	; 0
      00096B 02                    2698 	.db #0x02	; 2
      00096C 02                    2699 	.db #0x02	; 2
      00096D 02                    2700 	.db #0x02	; 2
      00096E 02                    2701 	.db #0x02	; 2
      00096F 00                    2702 	.db #0x00	; 0
      000970 00                    2703 	.db #0x00	; 0
      000971 00                    2704 	.db #0x00	; 0
      000972 00                    2705 	.db #0x00	; 0
      000973 00                    2706 	.db #0x00	; 0
      000974 00                    2707 	.db #0x00	; 0
      000975 00                    2708 	.db #0x00	; 0
      000976 00                    2709 	.db #0x00	; 0
      000977 00                    2710 	.db #0x00	; 0
      000978 00                    2711 	.db #0x00	; 0
      000979 00                    2712 	.db #0x00	; 0
      00097A 00                    2713 	.db #0x00	; 0
      00097B 00                    2714 	.db #0x00	; 0
      00097C 00                    2715 	.db #0x00	; 0
      00097D 00                    2716 	.db #0x00	; 0
      00097E 00                    2717 	.db #0x00	; 0
      00097F 00                    2718 	.db #0x00	; 0
      000980 00                    2719 	.db #0x00	; 0
      000981 00                    2720 	.db #0x00	; 0
      000982 00                    2721 	.db #0x00	; 0
      000983 00                    2722 	.db #0x00	; 0
      000984 00                    2723 	.db #0x00	; 0
      000985 00                    2724 	.db #0x00	; 0
      000986 00                    2725 	.db #0x00	; 0
      000987 00                    2726 	.db #0x00	; 0
      000988 00                    2727 	.db #0x00	; 0
      000989                       2728 _Ex2:
      000989 00                    2729 	.db #0x00	; 0
      00098A 00                    2730 	.db #0x00	; 0
      00098B 00                    2731 	.db #0x00	; 0
      00098C 00                    2732 	.db #0x00	; 0
      00098D 00                    2733 	.db #0x00	; 0
      00098E 00                    2734 	.db #0x00	; 0
      00098F 01                    2735 	.db #0x01	; 1
      000990 01                    2736 	.db #0x01	; 1
      000991 03                    2737 	.db #0x03	; 3
      000992 03                    2738 	.db #0x03	; 3
      000993 03                    2739 	.db #0x03	; 3
      000994 03                    2740 	.db #0x03	; 3
      000995 00                    2741 	.db #0x00	; 0
      000996 00                    2742 	.db #0x00	; 0
      000997 06                    2743 	.db #0x06	; 6
      000998 06                    2744 	.db #0x06	; 6
      000999 0E                    2745 	.db #0x0e	; 14
      00099A 0E                    2746 	.db #0x0e	; 14
      00099B 0E                    2747 	.db #0x0e	; 14
      00099C 0E                    2748 	.db #0x0e	; 14
      00099D 00                    2749 	.db #0x00	; 0
      00099E 00                    2750 	.db #0x00	; 0
      00099F 00                    2751 	.db #0x00	; 0
      0009A0 00                    2752 	.db #0x00	; 0
      0009A1 00                    2753 	.db #0x00	; 0
      0009A2 00                    2754 	.db #0x00	; 0
      0009A3 00                    2755 	.db #0x00	; 0
      0009A4 00                    2756 	.db #0x00	; 0
      0009A5 00                    2757 	.db #0x00	; 0
      0009A6 00                    2758 	.db #0x00	; 0
      0009A7 00                    2759 	.db #0x00	; 0
      0009A8 00                    2760 	.db #0x00	; 0
      0009A9 00                    2761 	.db #0x00	; 0
      0009AA 00                    2762 	.db #0x00	; 0
      0009AB 00                    2763 	.db #0x00	; 0
      0009AC 00                    2764 	.db #0x00	; 0
      0009AD 00                    2765 	.db #0x00	; 0
      0009AE 00                    2766 	.db #0x00	; 0
      0009AF 80                    2767 	.db #0x80	; 128
      0009B0 80                    2768 	.db #0x80	; 128
      0009B1 80                    2769 	.db #0x80	; 128
      0009B2 80                    2770 	.db #0x80	; 128
      0009B3 00                    2771 	.db #0x00	; 0
      0009B4 00                    2772 	.db #0x00	; 0
      0009B5 60                    2773 	.db #0x60	; 96
      0009B6 60                    2774 	.db #0x60	; 96
      0009B7 60                    2775 	.db #0x60	; 96
      0009B8 60                    2776 	.db #0x60	; 96
      0009B9 00                    2777 	.db #0x00	; 0
      0009BA 00                    2778 	.db #0x00	; 0
      0009BB C0                    2779 	.db #0xc0	; 192
      0009BC C0                    2780 	.db #0xc0	; 192
      0009BD C0                    2781 	.db #0xc0	; 192
      0009BE C0                    2782 	.db #0xc0	; 192
      0009BF C0                    2783 	.db #0xc0	; 192
      0009C0 C0                    2784 	.db #0xc0	; 192
      0009C1 00                    2785 	.db #0x00	; 0
      0009C2 00                    2786 	.db #0x00	; 0
      0009C3 00                    2787 	.db #0x00	; 0
      0009C4 00                    2788 	.db #0x00	; 0
      0009C5 00                    2789 	.db #0x00	; 0
      0009C6 00                    2790 	.db #0x00	; 0
      0009C7 00                    2791 	.db #0x00	; 0
      0009C8 00                    2792 	.db #0x00	; 0
      0009C9 00                    2793 	.db #0x00	; 0
      0009CA 00                    2794 	.db #0x00	; 0
      0009CB 00                    2795 	.db #0x00	; 0
      0009CC 00                    2796 	.db #0x00	; 0
      0009CD 03                    2797 	.db #0x03	; 3
      0009CE 03                    2798 	.db #0x03	; 3
      0009CF 03                    2799 	.db #0x03	; 3
      0009D0 03                    2800 	.db #0x03	; 3
      0009D1 03                    2801 	.db #0x03	; 3
      0009D2 03                    2802 	.db #0x03	; 3
      0009D3 01                    2803 	.db #0x01	; 1
      0009D4 01                    2804 	.db #0x01	; 1
      0009D5 00                    2805 	.db #0x00	; 0
      0009D6 00                    2806 	.db #0x00	; 0
      0009D7 00                    2807 	.db #0x00	; 0
      0009D8 00                    2808 	.db #0x00	; 0
      0009D9 00                    2809 	.db #0x00	; 0
      0009DA 00                    2810 	.db #0x00	; 0
      0009DB 1C                    2811 	.db #0x1c	; 28
      0009DC 1C                    2812 	.db #0x1c	; 28
      0009DD 3C                    2813 	.db #0x3c	; 60
      0009DE 3C                    2814 	.db #0x3c	; 60
      0009DF 3C                    2815 	.db #0x3c	; 60
      0009E0 3C                    2816 	.db #0x3c	; 60
      0009E1 30                    2817 	.db #0x30	; 48	'0'
      0009E2 30                    2818 	.db #0x30	; 48	'0'
      0009E3 00                    2819 	.db #0x00	; 0
      0009E4 00                    2820 	.db #0x00	; 0
      0009E5 00                    2821 	.db #0x00	; 0
      0009E6 00                    2822 	.db #0x00	; 0
      0009E7 00                    2823 	.db #0x00	; 0
      0009E8 00                    2824 	.db #0x00	; 0
      0009E9 00                    2825 	.db #0x00	; 0
      0009EA 00                    2826 	.db #0x00	; 0
      0009EB 00                    2827 	.db #0x00	; 0
      0009EC 00                    2828 	.db #0x00	; 0
      0009ED 80                    2829 	.db #0x80	; 128
      0009EE 80                    2830 	.db #0x80	; 128
      0009EF C0                    2831 	.db #0xc0	; 192
      0009F0 C0                    2832 	.db #0xc0	; 192
      0009F1 C0                    2833 	.db #0xc0	; 192
      0009F2 C0                    2834 	.db #0xc0	; 192
      0009F3 DE                    2835 	.db #0xde	; 222
      0009F4 DE                    2836 	.db #0xde	; 222
      0009F5 9E                    2837 	.db #0x9e	; 158
      0009F6 9E                    2838 	.db #0x9e	; 158
      0009F7 0E                    2839 	.db #0x0e	; 14
      0009F8 0E                    2840 	.db #0x0e	; 14
      0009F9 00                    2841 	.db #0x00	; 0
      0009FA 00                    2842 	.db #0x00	; 0
      0009FB 00                    2843 	.db #0x00	; 0
      0009FC 00                    2844 	.db #0x00	; 0
      0009FD 38                    2845 	.db #0x38	; 56	'8'
      0009FE 38                    2846 	.db #0x38	; 56	'8'
      0009FF 3C                    2847 	.db #0x3c	; 60
      000A00 3C                    2848 	.db #0x3c	; 60
      000A01 3C                    2849 	.db #0x3c	; 60
      000A02 3C                    2850 	.db #0x3c	; 60
      000A03 3C                    2851 	.db #0x3c	; 60
      000A04 3C                    2852 	.db #0x3c	; 60
      000A05 1C                    2853 	.db #0x1c	; 28
      000A06 1C                    2854 	.db #0x1c	; 28
      000A07 00                    2855 	.db #0x00	; 0
      000A08 00                    2856 	.db #0x00	; 0
      000A09 00                    2857 	.db #0x00	; 0
      000A0A 00                    2858 	.db #0x00	; 0
      000A0B 04                    2859 	.db #0x04	; 4
      000A0C 04                    2860 	.db #0x04	; 4
      000A0D 07                    2861 	.db #0x07	; 7
      000A0E 07                    2862 	.db #0x07	; 7
      000A0F 07                    2863 	.db #0x07	; 7
      000A10 07                    2864 	.db #0x07	; 7
      000A11 00                    2865 	.db #0x00	; 0
      000A12 00                    2866 	.db #0x00	; 0
      000A13 00                    2867 	.db #0x00	; 0
      000A14 00                    2868 	.db #0x00	; 0
      000A15 00                    2869 	.db #0x00	; 0
      000A16 00                    2870 	.db #0x00	; 0
      000A17 00                    2871 	.db #0x00	; 0
      000A18 00                    2872 	.db #0x00	; 0
      000A19 00                    2873 	.db #0x00	; 0
      000A1A 00                    2874 	.db #0x00	; 0
      000A1B 00                    2875 	.db #0x00	; 0
      000A1C 00                    2876 	.db #0x00	; 0
      000A1D 00                    2877 	.db #0x00	; 0
      000A1E 00                    2878 	.db #0x00	; 0
      000A1F 00                    2879 	.db #0x00	; 0
      000A20 00                    2880 	.db #0x00	; 0
      000A21 38                    2881 	.db #0x38	; 56	'8'
      000A22 38                    2882 	.db #0x38	; 56	'8'
      000A23 18                    2883 	.db #0x18	; 24
      000A24 18                    2884 	.db #0x18	; 24
      000A25 00                    2885 	.db #0x00	; 0
      000A26 00                    2886 	.db #0x00	; 0
      000A27 00                    2887 	.db #0x00	; 0
      000A28 00                    2888 	.db #0x00	; 0
      000A29 00                    2889 	.db #0x00	; 0
      000A2A 00                    2890 	.db #0x00	; 0
      000A2B 00                    2891 	.db #0x00	; 0
      000A2C 00                    2892 	.db #0x00	; 0
      000A2D 00                    2893 	.db #0x00	; 0
      000A2E 00                    2894 	.db #0x00	; 0
      000A2F 00                    2895 	.db #0x00	; 0
      000A30 00                    2896 	.db #0x00	; 0
      000A31 00                    2897 	.db #0x00	; 0
      000A32 00                    2898 	.db #0x00	; 0
      000A33 0C                    2899 	.db #0x0c	; 12
      000A34 0C                    2900 	.db #0x0c	; 12
      000A35 0E                    2901 	.db #0x0e	; 14
      000A36 0E                    2902 	.db #0x0e	; 14
      000A37 06                    2903 	.db #0x06	; 6
      000A38 06                    2904 	.db #0x06	; 6
      000A39 00                    2905 	.db #0x00	; 0
      000A3A 00                    2906 	.db #0x00	; 0
      000A3B 00                    2907 	.db #0x00	; 0
      000A3C 00                    2908 	.db #0x00	; 0
      000A3D 00                    2909 	.db #0x00	; 0
      000A3E 00                    2910 	.db #0x00	; 0
      000A3F 00                    2911 	.db #0x00	; 0
      000A40 00                    2912 	.db #0x00	; 0
      000A41 06                    2913 	.db #0x06	; 6
      000A42 06                    2914 	.db #0x06	; 6
      000A43 0E                    2915 	.db #0x0e	; 14
      000A44 0E                    2916 	.db #0x0e	; 14
      000A45 04                    2917 	.db #0x04	; 4
      000A46 04                    2918 	.db #0x04	; 4
      000A47 00                    2919 	.db #0x00	; 0
      000A48 00                    2920 	.db #0x00	; 0
      000A49 0E                    2921 	.db #0x0e	; 14
      000A4A 0E                    2922 	.db #0x0e	; 14
      000A4B 04                    2923 	.db #0x04	; 4
      000A4C 04                    2924 	.db #0x04	; 4
      000A4D 00                    2925 	.db #0x00	; 0
      000A4E 00                    2926 	.db #0x00	; 0
      000A4F 00                    2927 	.db #0x00	; 0
      000A50 00                    2928 	.db #0x00	; 0
      000A51 00                    2929 	.db #0x00	; 0
      000A52 00                    2930 	.db #0x00	; 0
      000A53 00                    2931 	.db #0x00	; 0
      000A54 00                    2932 	.db #0x00	; 0
      000A55 00                    2933 	.db #0x00	; 0
      000A56 00                    2934 	.db #0x00	; 0
      000A57 00                    2935 	.db #0x00	; 0
      000A58 00                    2936 	.db #0x00	; 0
      000A59 00                    2937 	.db #0x00	; 0
      000A5A 00                    2938 	.db #0x00	; 0
      000A5B 00                    2939 	.db #0x00	; 0
      000A5C 00                    2940 	.db #0x00	; 0
      000A5D 00                    2941 	.db #0x00	; 0
      000A5E 00                    2942 	.db #0x00	; 0
      000A5F 00                    2943 	.db #0x00	; 0
      000A60 00                    2944 	.db #0x00	; 0
      000A61 20                    2945 	.db #0x20	; 32
      000A62 20                    2946 	.db #0x20	; 32
      000A63 30                    2947 	.db #0x30	; 48	'0'
      000A64 30                    2948 	.db #0x30	; 48	'0'
      000A65 00                    2949 	.db #0x00	; 0
      000A66 00                    2950 	.db #0x00	; 0
      000A67 00                    2951 	.db #0x00	; 0
      000A68 00                    2952 	.db #0x00	; 0
      000A69 00                    2953 	.db #0x00	; 0
      000A6A 00                    2954 	.db #0x00	; 0
      000A6B 00                    2955 	.db #0x00	; 0
      000A6C 00                    2956 	.db #0x00	; 0
      000A6D 00                    2957 	.db #0x00	; 0
      000A6E 00                    2958 	.db #0x00	; 0
      000A6F 00                    2959 	.db #0x00	; 0
      000A70 00                    2960 	.db #0x00	; 0
      000A71 00                    2961 	.db #0x00	; 0
      000A72 00                    2962 	.db #0x00	; 0
      000A73 00                    2963 	.db #0x00	; 0
      000A74 00                    2964 	.db #0x00	; 0
      000A75 04                    2965 	.db #0x04	; 4
      000A76 04                    2966 	.db #0x04	; 4
      000A77 03                    2967 	.db #0x03	; 3
      000A78 03                    2968 	.db #0x03	; 3
      000A79 00                    2969 	.db #0x00	; 0
      000A7A 00                    2970 	.db #0x00	; 0
      000A7B 00                    2971 	.db #0x00	; 0
      000A7C 00                    2972 	.db #0x00	; 0
      000A7D 00                    2973 	.db #0x00	; 0
      000A7E 00                    2974 	.db #0x00	; 0
      000A7F 00                    2975 	.db #0x00	; 0
      000A80 00                    2976 	.db #0x00	; 0
      000A81 00                    2977 	.db #0x00	; 0
      000A82 00                    2978 	.db #0x00	; 0
      000A83 02                    2979 	.db #0x02	; 2
      000A84 02                    2980 	.db #0x02	; 2
      000A85 02                    2981 	.db #0x02	; 2
      000A86 02                    2982 	.db #0x02	; 2
      000A87 00                    2983 	.db #0x00	; 0
      000A88 00                    2984 	.db #0x00	; 0
      000A89                       2985 _Ex3:
      000A89 00                    2986 	.db #0x00	; 0
      000A8A 00                    2987 	.db #0x00	; 0
      000A8B 00                    2988 	.db #0x00	; 0
      000A8C 00                    2989 	.db #0x00	; 0
      000A8D 00                    2990 	.db #0x00	; 0
      000A8E 00                    2991 	.db #0x00	; 0
      000A8F 00                    2992 	.db #0x00	; 0
      000A90 00                    2993 	.db #0x00	; 0
      000A91 00                    2994 	.db #0x00	; 0
      000A92 00                    2995 	.db #0x00	; 0
      000A93 00                    2996 	.db #0x00	; 0
      000A94 00                    2997 	.db #0x00	; 0
      000A95 02                    2998 	.db #0x02	; 2
      000A96 02                    2999 	.db #0x02	; 2
      000A97 07                    3000 	.db #0x07	; 7
      000A98 07                    3001 	.db #0x07	; 7
      000A99 02                    3002 	.db #0x02	; 2
      000A9A 02                    3003 	.db #0x02	; 2
      000A9B 00                    3004 	.db #0x00	; 0
      000A9C 00                    3005 	.db #0x00	; 0
      000A9D 00                    3006 	.db #0x00	; 0
      000A9E 00                    3007 	.db #0x00	; 0
      000A9F 00                    3008 	.db #0x00	; 0
      000AA0 00                    3009 	.db #0x00	; 0
      000AA1 00                    3010 	.db #0x00	; 0
      000AA2 00                    3011 	.db #0x00	; 0
      000AA3 00                    3012 	.db #0x00	; 0
      000AA4 00                    3013 	.db #0x00	; 0
      000AA5 00                    3014 	.db #0x00	; 0
      000AA6 00                    3015 	.db #0x00	; 0
      000AA7 00                    3016 	.db #0x00	; 0
      000AA8 00                    3017 	.db #0x00	; 0
      000AA9 00                    3018 	.db #0x00	; 0
      000AAA 00                    3019 	.db #0x00	; 0
      000AAB 00                    3020 	.db #0x00	; 0
      000AAC 00                    3021 	.db #0x00	; 0
      000AAD 00                    3022 	.db #0x00	; 0
      000AAE 00                    3023 	.db #0x00	; 0
      000AAF 00                    3024 	.db #0x00	; 0
      000AB0 00                    3025 	.db #0x00	; 0
      000AB1 00                    3026 	.db #0x00	; 0
      000AB2 00                    3027 	.db #0x00	; 0
      000AB3 00                    3028 	.db #0x00	; 0
      000AB4 00                    3029 	.db #0x00	; 0
      000AB5 20                    3030 	.db #0x20	; 32
      000AB6 20                    3031 	.db #0x20	; 32
      000AB7 70                    3032 	.db #0x70	; 112	'p'
      000AB8 70                    3033 	.db #0x70	; 112	'p'
      000AB9 20                    3034 	.db #0x20	; 32
      000ABA 20                    3035 	.db #0x20	; 32
      000ABB 00                    3036 	.db #0x00	; 0
      000ABC 00                    3037 	.db #0x00	; 0
      000ABD 00                    3038 	.db #0x00	; 0
      000ABE 00                    3039 	.db #0x00	; 0
      000ABF 00                    3040 	.db #0x00	; 0
      000AC0 00                    3041 	.db #0x00	; 0
      000AC1 00                    3042 	.db #0x00	; 0
      000AC2 00                    3043 	.db #0x00	; 0
      000AC3 00                    3044 	.db #0x00	; 0
      000AC4 00                    3045 	.db #0x00	; 0
      000AC5 00                    3046 	.db #0x00	; 0
      000AC6 00                    3047 	.db #0x00	; 0
      000AC7 00                    3048 	.db #0x00	; 0
      000AC8 00                    3049 	.db #0x00	; 0
      000AC9 00                    3050 	.db #0x00	; 0
      000ACA 00                    3051 	.db #0x00	; 0
      000ACB 00                    3052 	.db #0x00	; 0
      000ACC 00                    3053 	.db #0x00	; 0
      000ACD 00                    3054 	.db #0x00	; 0
      000ACE 00                    3055 	.db #0x00	; 0
      000ACF 00                    3056 	.db #0x00	; 0
      000AD0 00                    3057 	.db #0x00	; 0
      000AD1 00                    3058 	.db #0x00	; 0
      000AD2 00                    3059 	.db #0x00	; 0
      000AD3 10                    3060 	.db #0x10	; 16
      000AD4 10                    3061 	.db #0x10	; 16
      000AD5 38                    3062 	.db #0x38	; 56	'8'
      000AD6 38                    3063 	.db #0x38	; 56	'8'
      000AD7 3E                    3064 	.db #0x3e	; 62
      000AD8 3E                    3065 	.db #0x3e	; 62
      000AD9 18                    3066 	.db #0x18	; 24
      000ADA 18                    3067 	.db #0x18	; 24
      000ADB 00                    3068 	.db #0x00	; 0
      000ADC 00                    3069 	.db #0x00	; 0
      000ADD 00                    3070 	.db #0x00	; 0
      000ADE 00                    3071 	.db #0x00	; 0
      000ADF 00                    3072 	.db #0x00	; 0
      000AE0 00                    3073 	.db #0x00	; 0
      000AE1 00                    3074 	.db #0x00	; 0
      000AE2 00                    3075 	.db #0x00	; 0
      000AE3 00                    3076 	.db #0x00	; 0
      000AE4 00                    3077 	.db #0x00	; 0
      000AE5 00                    3078 	.db #0x00	; 0
      000AE6 00                    3079 	.db #0x00	; 0
      000AE7 00                    3080 	.db #0x00	; 0
      000AE8 00                    3081 	.db #0x00	; 0
      000AE9 00                    3082 	.db #0x00	; 0
      000AEA 00                    3083 	.db #0x00	; 0
      000AEB 00                    3084 	.db #0x00	; 0
      000AEC 00                    3085 	.db #0x00	; 0
      000AED 00                    3086 	.db #0x00	; 0
      000AEE 00                    3087 	.db #0x00	; 0
      000AEF 00                    3088 	.db #0x00	; 0
      000AF0 00                    3089 	.db #0x00	; 0
      000AF1 00                    3090 	.db #0x00	; 0
      000AF2 00                    3091 	.db #0x00	; 0
      000AF3 00                    3092 	.db #0x00	; 0
      000AF4 00                    3093 	.db #0x00	; 0
      000AF5 1C                    3094 	.db #0x1c	; 28
      000AF6 1C                    3095 	.db #0x1c	; 28
      000AF7 7C                    3096 	.db #0x7c	; 124
      000AF8 7C                    3097 	.db #0x7c	; 124
      000AF9 1C                    3098 	.db #0x1c	; 28
      000AFA 1C                    3099 	.db #0x1c	; 28
      000AFB 08                    3100 	.db #0x08	; 8
      000AFC 08                    3101 	.db #0x08	; 8
      000AFD 00                    3102 	.db #0x00	; 0
      000AFE 00                    3103 	.db #0x00	; 0
      000AFF 00                    3104 	.db #0x00	; 0
      000B00 00                    3105 	.db #0x00	; 0
      000B01 00                    3106 	.db #0x00	; 0
      000B02 00                    3107 	.db #0x00	; 0
      000B03 00                    3108 	.db #0x00	; 0
      000B04 00                    3109 	.db #0x00	; 0
      000B05 00                    3110 	.db #0x00	; 0
      000B06 00                    3111 	.db #0x00	; 0
      000B07 00                    3112 	.db #0x00	; 0
      000B08 00                    3113 	.db #0x00	; 0
      000B09 00                    3114 	.db #0x00	; 0
      000B0A 00                    3115 	.db #0x00	; 0
      000B0B 00                    3116 	.db #0x00	; 0
      000B0C 00                    3117 	.db #0x00	; 0
      000B0D 00                    3118 	.db #0x00	; 0
      000B0E 00                    3119 	.db #0x00	; 0
      000B0F 00                    3120 	.db #0x00	; 0
      000B10 00                    3121 	.db #0x00	; 0
      000B11 00                    3122 	.db #0x00	; 0
      000B12 00                    3123 	.db #0x00	; 0
      000B13 00                    3124 	.db #0x00	; 0
      000B14 00                    3125 	.db #0x00	; 0
      000B15 28                    3126 	.db #0x28	; 40
      000B16 28                    3127 	.db #0x28	; 40
      000B17 30                    3128 	.db #0x30	; 48	'0'
      000B18 30                    3129 	.db #0x30	; 48	'0'
      000B19 38                    3130 	.db #0x38	; 56	'8'
      000B1A 38                    3131 	.db #0x38	; 56	'8'
      000B1B 10                    3132 	.db #0x10	; 16
      000B1C 10                    3133 	.db #0x10	; 16
      000B1D 00                    3134 	.db #0x00	; 0
      000B1E 00                    3135 	.db #0x00	; 0
      000B1F 00                    3136 	.db #0x00	; 0
      000B20 00                    3137 	.db #0x00	; 0
      000B21 00                    3138 	.db #0x00	; 0
      000B22 00                    3139 	.db #0x00	; 0
      000B23 00                    3140 	.db #0x00	; 0
      000B24 00                    3141 	.db #0x00	; 0
      000B25 00                    3142 	.db #0x00	; 0
      000B26 00                    3143 	.db #0x00	; 0
      000B27 00                    3144 	.db #0x00	; 0
      000B28 00                    3145 	.db #0x00	; 0
      000B29 00                    3146 	.db #0x00	; 0
      000B2A 00                    3147 	.db #0x00	; 0
      000B2B 00                    3148 	.db #0x00	; 0
      000B2C 00                    3149 	.db #0x00	; 0
      000B2D 00                    3150 	.db #0x00	; 0
      000B2E 00                    3151 	.db #0x00	; 0
      000B2F 00                    3152 	.db #0x00	; 0
      000B30 00                    3153 	.db #0x00	; 0
      000B31 00                    3154 	.db #0x00	; 0
      000B32 00                    3155 	.db #0x00	; 0
      000B33 00                    3156 	.db #0x00	; 0
      000B34 00                    3157 	.db #0x00	; 0
      000B35 04                    3158 	.db #0x04	; 4
      000B36 04                    3159 	.db #0x04	; 4
      000B37 0E                    3160 	.db #0x0e	; 14
      000B38 0E                    3161 	.db #0x0e	; 14
      000B39 0E                    3162 	.db #0x0e	; 14
      000B3A 0E                    3163 	.db #0x0e	; 14
      000B3B 00                    3164 	.db #0x00	; 0
      000B3C 00                    3165 	.db #0x00	; 0
      000B3D 00                    3166 	.db #0x00	; 0
      000B3E 00                    3167 	.db #0x00	; 0
      000B3F 00                    3168 	.db #0x00	; 0
      000B40 00                    3169 	.db #0x00	; 0
      000B41 00                    3170 	.db #0x00	; 0
      000B42 00                    3171 	.db #0x00	; 0
      000B43 00                    3172 	.db #0x00	; 0
      000B44 00                    3173 	.db #0x00	; 0
      000B45 00                    3174 	.db #0x00	; 0
      000B46 00                    3175 	.db #0x00	; 0
      000B47 00                    3176 	.db #0x00	; 0
      000B48 00                    3177 	.db #0x00	; 0
      000B49 00                    3178 	.db #0x00	; 0
      000B4A 00                    3179 	.db #0x00	; 0
      000B4B 00                    3180 	.db #0x00	; 0
      000B4C 00                    3181 	.db #0x00	; 0
      000B4D 00                    3182 	.db #0x00	; 0
      000B4E 00                    3183 	.db #0x00	; 0
      000B4F 00                    3184 	.db #0x00	; 0
      000B50 00                    3185 	.db #0x00	; 0
      000B51 00                    3186 	.db #0x00	; 0
      000B52 00                    3187 	.db #0x00	; 0
      000B53 00                    3188 	.db #0x00	; 0
      000B54 00                    3189 	.db #0x00	; 0
      000B55 00                    3190 	.db #0x00	; 0
      000B56 00                    3191 	.db #0x00	; 0
      000B57 60                    3192 	.db #0x60	; 96
      000B58 60                    3193 	.db #0x60	; 96
      000B59 40                    3194 	.db #0x40	; 64
      000B5A 40                    3195 	.db #0x40	; 64
      000B5B 00                    3196 	.db #0x00	; 0
      000B5C 00                    3197 	.db #0x00	; 0
      000B5D 00                    3198 	.db #0x00	; 0
      000B5E 00                    3199 	.db #0x00	; 0
      000B5F 00                    3200 	.db #0x00	; 0
      000B60 00                    3201 	.db #0x00	; 0
      000B61 00                    3202 	.db #0x00	; 0
      000B62 00                    3203 	.db #0x00	; 0
      000B63 00                    3204 	.db #0x00	; 0
      000B64 00                    3205 	.db #0x00	; 0
      000B65 00                    3206 	.db #0x00	; 0
      000B66 00                    3207 	.db #0x00	; 0
      000B67 00                    3208 	.db #0x00	; 0
      000B68 00                    3209 	.db #0x00	; 0
      000B69 00                    3210 	.db #0x00	; 0
      000B6A 00                    3211 	.db #0x00	; 0
      000B6B 00                    3212 	.db #0x00	; 0
      000B6C 00                    3213 	.db #0x00	; 0
      000B6D 00                    3214 	.db #0x00	; 0
      000B6E 00                    3215 	.db #0x00	; 0
      000B6F 00                    3216 	.db #0x00	; 0
      000B70 00                    3217 	.db #0x00	; 0
      000B71 00                    3218 	.db #0x00	; 0
      000B72 00                    3219 	.db #0x00	; 0
      000B73 00                    3220 	.db #0x00	; 0
      000B74 00                    3221 	.db #0x00	; 0
      000B75 00                    3222 	.db #0x00	; 0
      000B76 00                    3223 	.db #0x00	; 0
      000B77 02                    3224 	.db #0x02	; 2
      000B78 02                    3225 	.db #0x02	; 2
      000B79 02                    3226 	.db #0x02	; 2
      000B7A 02                    3227 	.db #0x02	; 2
      000B7B 00                    3228 	.db #0x00	; 0
      000B7C 00                    3229 	.db #0x00	; 0
      000B7D 00                    3230 	.db #0x00	; 0
      000B7E 00                    3231 	.db #0x00	; 0
      000B7F 00                    3232 	.db #0x00	; 0
      000B80 00                    3233 	.db #0x00	; 0
      000B81 00                    3234 	.db #0x00	; 0
      000B82 00                    3235 	.db #0x00	; 0
      000B83 00                    3236 	.db #0x00	; 0
      000B84 00                    3237 	.db #0x00	; 0
      000B85 00                    3238 	.db #0x00	; 0
      000B86 00                    3239 	.db #0x00	; 0
      000B87 00                    3240 	.db #0x00	; 0
      000B88 00                    3241 	.db #0x00	; 0
      000B89                       3242 _BLANKSIZE:
      000B89 03                    3243 	.db #0x03	; 3
      000B8A                       3244 _BLANK:
      000B8A 26                    3245 	.db #0x26	; 38
      000B8B 2B                    3246 	.db #0x2b	; 43
      000B8C 2C                    3247 	.db #0x2c	; 44
      000B8D                       3248 _EMPTYSPRITE:
      000B8D 50                    3249 	.db #0x50	; 80	'P'
      000B8E                       3250 _ENEMYCOUNT:
      000B8E 05                    3251 	.db #0x05	; 5
      000B8F                       3252 _xSpawnPositions:
      000B8F 00                    3253 	.db #0x00	; 0
      000B90 60                    3254 	.db #0x60	; 96
      000B91 B0                    3255 	.db #0xb0	; 176
      000B92 00                    3256 	.db #0x00	; 0
      000B93 B0                    3257 	.db #0xb0	; 176
      000B94 00                    3258 	.db #0x00	; 0
      000B95 60                    3259 	.db #0x60	; 96
      000B96 B0                    3260 	.db #0xb0	; 176
      000B97                       3261 _ySpawnPositions:
      000B97 00                    3262 	.db #0x00	; 0
      000B98 00                    3263 	.db #0x00	; 0
      000B99 00                    3264 	.db #0x00	; 0
      000B9A 5C                    3265 	.db #0x5c	; 92
      000B9B 5C                    3266 	.db #0x5c	; 92
      000B9C A0                    3267 	.db #0xa0	; 160
      000B9D A0                    3268 	.db #0xa0	; 160
      000B9E A0                    3269 	.db #0xa0	; 160
      000B9F                       3270 _PROJECTILECOUNT:
      000B9F 05                    3271 	.db #0x05	; 5
      000BA0                       3272 _PLAYERSIZE:
      000BA0 10                    3273 	.db #0x10	; 16
      000BA1                       3274 _maxHull:
      000BA1 64                    3275 	.db #0x64	;  100	'd'
      000BA2                       3276 _maxShield:
      000BA2 64                    3277 	.db #0x64	;  100	'd'
      000BA3                       3278 _MAXGUNLEVEL:
      000BA3 01                    3279 	.db #0x01	; 1
      000BA4                       3280 _SPLASHDROPOFF:
      000BA4 01                    3281 	.db #0x01	; 1
      000BA5                       3282 _exCount:
      000BA5 04                    3283 	.db #0x04	; 4
      000BA6                       3284 _EXPLFRAMETIME:
      000BA6 04                    3285 	.db #0x04	; 4
      000BA7                       3286 _exTileCount:
      000BA7 03                    3287 	.db #0x03	; 3
      000BA8                       3288 _AUXTICKFREQUENCY:
      000BA8 01                    3289 	.db #0x01	; 1
                                   3290 ;src/main.c:159: void setHealthBar(uint8_t row, uint8_t hp) {
                                   3291 ;	---------------------------------
                                   3292 ; Function setHealthBar
                                   3293 ; ---------------------------------
      000BA9                       3294 _setHealthBar::
      000BA9 E8 FB                 3295 	add	sp, #-5
                                   3296 ;src/main.c:161: if (hp >= 80) {
      000BAB F8 08                 3297 	ldhl	sp,	#8
      000BAD 7E                    3298 	ld	a, (hl)
      000BAE D6 50                 3299 	sub	a, #0x50
      000BB0 38 31                 3300 	jr	C, 00102$
                                   3301 ;src/main.c:162: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      000BB2 F8 00                 3302 	ldhl	sp,	#0
      000BB4 4D                    3303 	ld	c, l
      000BB5 44                    3304 	ld	b, h
      000BB6 36 50                 3305 	ld	(hl), #0x50
      000BB8 69                    3306 	ld	l, c
                                   3307 ;	spillPairReg hl
                                   3308 ;	spillPairReg hl
      000BB9 60                    3309 	ld	h, b
                                   3310 ;	spillPairReg hl
                                   3311 ;	spillPairReg hl
      000BBA 23                    3312 	inc	hl
      000BBB 36 50                 3313 	ld	(hl), #0x50
      000BBD 69                    3314 	ld	l, c
                                   3315 ;	spillPairReg hl
                                   3316 ;	spillPairReg hl
      000BBE 60                    3317 	ld	h, b
                                   3318 ;	spillPairReg hl
                                   3319 ;	spillPairReg hl
      000BBF 23                    3320 	inc	hl
      000BC0 23                    3321 	inc	hl
      000BC1 36 50                 3322 	ld	(hl), #0x50
      000BC3 69                    3323 	ld	l, c
                                   3324 ;	spillPairReg hl
                                   3325 ;	spillPairReg hl
      000BC4 60                    3326 	ld	h, b
                                   3327 ;	spillPairReg hl
                                   3328 ;	spillPairReg hl
      000BC5 23                    3329 	inc	hl
      000BC6 23                    3330 	inc	hl
      000BC7 23                    3331 	inc	hl
      000BC8 36 50                 3332 	ld	(hl), #0x50
      000BCA 21 04 00              3333 	ld	hl, #0x0004
      000BCD 09                    3334 	add	hl, bc
      000BCE 36 50                 3335 	ld	(hl), #0x50
                                   3336 ;src/main.c:163: set_win_tiles(5,row,5,1,blockmap);
      000BD0 C5                    3337 	push	bc
      000BD1 21 05 01              3338 	ld	hl, #0x105
      000BD4 E5                    3339 	push	hl
      000BD5 F8 0B                 3340 	ldhl	sp,	#11
      000BD7 66                    3341 	ld	h, (hl)
      000BD8 2E 05                 3342 	ld	l, #0x05
      000BDA E5                    3343 	push	hl
      000BDB CDr00r00              3344 	call	_set_win_tiles
      000BDE E8 06                 3345 	add	sp, #6
                                   3346 ;src/main.c:164: return;
      000BE0 C3rB7r0C              3347 	jp	00109$
      000BE3                       3348 00102$:
                                   3349 ;src/main.c:166: if (hp >= 60) {
      000BE3 F8 08                 3350 	ldhl	sp,	#8
      000BE5 7E                    3351 	ld	a, (hl)
      000BE6 D6 3C                 3352 	sub	a, #0x3c
      000BE8 38 31                 3353 	jr	C, 00104$
                                   3354 ;src/main.c:167: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      000BEA F8 00                 3355 	ldhl	sp,	#0
      000BEC 4D                    3356 	ld	c, l
      000BED 44                    3357 	ld	b, h
      000BEE 36 50                 3358 	ld	(hl), #0x50
      000BF0 69                    3359 	ld	l, c
                                   3360 ;	spillPairReg hl
                                   3361 ;	spillPairReg hl
      000BF1 60                    3362 	ld	h, b
                                   3363 ;	spillPairReg hl
                                   3364 ;	spillPairReg hl
      000BF2 23                    3365 	inc	hl
      000BF3 36 50                 3366 	ld	(hl), #0x50
      000BF5 69                    3367 	ld	l, c
                                   3368 ;	spillPairReg hl
                                   3369 ;	spillPairReg hl
      000BF6 60                    3370 	ld	h, b
                                   3371 ;	spillPairReg hl
                                   3372 ;	spillPairReg hl
      000BF7 23                    3373 	inc	hl
      000BF8 23                    3374 	inc	hl
      000BF9 36 50                 3375 	ld	(hl), #0x50
      000BFB 69                    3376 	ld	l, c
                                   3377 ;	spillPairReg hl
                                   3378 ;	spillPairReg hl
      000BFC 60                    3379 	ld	h, b
                                   3380 ;	spillPairReg hl
                                   3381 ;	spillPairReg hl
      000BFD 23                    3382 	inc	hl
      000BFE 23                    3383 	inc	hl
      000BFF 23                    3384 	inc	hl
      000C00 36 50                 3385 	ld	(hl), #0x50
      000C02 21 04 00              3386 	ld	hl, #0x0004
      000C05 09                    3387 	add	hl, bc
      000C06 36 00                 3388 	ld	(hl), #0x00
                                   3389 ;src/main.c:168: set_win_tiles(5,row,5,1,blockmap);
      000C08 C5                    3390 	push	bc
      000C09 21 05 01              3391 	ld	hl, #0x105
      000C0C E5                    3392 	push	hl
      000C0D F8 0B                 3393 	ldhl	sp,	#11
      000C0F 66                    3394 	ld	h, (hl)
      000C10 2E 05                 3395 	ld	l, #0x05
      000C12 E5                    3396 	push	hl
      000C13 CDr00r00              3397 	call	_set_win_tiles
      000C16 E8 06                 3398 	add	sp, #6
                                   3399 ;src/main.c:169: return;
      000C18 C3rB7r0C              3400 	jp	00109$
      000C1B                       3401 00104$:
                                   3402 ;src/main.c:171: if (hp >= 40) {
      000C1B F8 08                 3403 	ldhl	sp,	#8
      000C1D 7E                    3404 	ld	a, (hl)
      000C1E D6 28                 3405 	sub	a, #0x28
      000C20 38 30                 3406 	jr	C, 00106$
                                   3407 ;src/main.c:172: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000C22 F8 00                 3408 	ldhl	sp,	#0
      000C24 4D                    3409 	ld	c, l
      000C25 44                    3410 	ld	b, h
      000C26 36 50                 3411 	ld	(hl), #0x50
      000C28 69                    3412 	ld	l, c
                                   3413 ;	spillPairReg hl
                                   3414 ;	spillPairReg hl
      000C29 60                    3415 	ld	h, b
                                   3416 ;	spillPairReg hl
                                   3417 ;	spillPairReg hl
      000C2A 23                    3418 	inc	hl
      000C2B 36 50                 3419 	ld	(hl), #0x50
      000C2D 69                    3420 	ld	l, c
                                   3421 ;	spillPairReg hl
                                   3422 ;	spillPairReg hl
      000C2E 60                    3423 	ld	h, b
                                   3424 ;	spillPairReg hl
                                   3425 ;	spillPairReg hl
      000C2F 23                    3426 	inc	hl
      000C30 23                    3427 	inc	hl
      000C31 36 50                 3428 	ld	(hl), #0x50
      000C33 59                    3429 	ld	e, c
      000C34 50                    3430 	ld	d, b
      000C35 13                    3431 	inc	de
      000C36 13                    3432 	inc	de
      000C37 13                    3433 	inc	de
      000C38 AF                    3434 	xor	a, a
      000C39 12                    3435 	ld	(de), a
      000C3A 21 04 00              3436 	ld	hl, #0x0004
      000C3D 09                    3437 	add	hl, bc
      000C3E 36 00                 3438 	ld	(hl), #0x00
                                   3439 ;src/main.c:173: set_win_tiles(5,row,5,1,blockmap);
      000C40 C5                    3440 	push	bc
      000C41 21 05 01              3441 	ld	hl, #0x105
      000C44 E5                    3442 	push	hl
      000C45 F8 0B                 3443 	ldhl	sp,	#11
      000C47 66                    3444 	ld	h, (hl)
      000C48 2E 05                 3445 	ld	l, #0x05
      000C4A E5                    3446 	push	hl
      000C4B CDr00r00              3447 	call	_set_win_tiles
      000C4E E8 06                 3448 	add	sp, #6
                                   3449 ;src/main.c:174: return;
      000C50 18 65                 3450 	jr	00109$
      000C52                       3451 00106$:
                                   3452 ;src/main.c:176: if (hp >= 20) {
      000C52 F8 08                 3453 	ldhl	sp,	#8
      000C54 7E                    3454 	ld	a, (hl)
      000C55 D6 14                 3455 	sub	a, #0x14
      000C57 38 30                 3456 	jr	C, 00108$
                                   3457 ;src/main.c:177: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000C59 F8 00                 3458 	ldhl	sp,	#0
      000C5B 4D                    3459 	ld	c, l
      000C5C 44                    3460 	ld	b, h
      000C5D 36 50                 3461 	ld	(hl), #0x50
      000C5F 69                    3462 	ld	l, c
                                   3463 ;	spillPairReg hl
                                   3464 ;	spillPairReg hl
      000C60 60                    3465 	ld	h, b
                                   3466 ;	spillPairReg hl
                                   3467 ;	spillPairReg hl
      000C61 23                    3468 	inc	hl
      000C62 36 50                 3469 	ld	(hl), #0x50
      000C64 59                    3470 	ld	e, c
      000C65 50                    3471 	ld	d, b
      000C66 13                    3472 	inc	de
      000C67 13                    3473 	inc	de
      000C68 AF                    3474 	xor	a, a
      000C69 12                    3475 	ld	(de), a
      000C6A 59                    3476 	ld	e, c
      000C6B 50                    3477 	ld	d, b
      000C6C 13                    3478 	inc	de
      000C6D 13                    3479 	inc	de
      000C6E 13                    3480 	inc	de
      000C6F AF                    3481 	xor	a, a
      000C70 12                    3482 	ld	(de), a
      000C71 21 04 00              3483 	ld	hl, #0x0004
      000C74 09                    3484 	add	hl, bc
      000C75 36 00                 3485 	ld	(hl), #0x00
                                   3486 ;src/main.c:178: set_win_tiles(5,row,5,1,blockmap);
      000C77 C5                    3487 	push	bc
      000C78 21 05 01              3488 	ld	hl, #0x105
      000C7B E5                    3489 	push	hl
      000C7C F8 0B                 3490 	ldhl	sp,	#11
      000C7E 66                    3491 	ld	h, (hl)
      000C7F 2E 05                 3492 	ld	l, #0x05
      000C81 E5                    3493 	push	hl
      000C82 CDr00r00              3494 	call	_set_win_tiles
      000C85 E8 06                 3495 	add	sp, #6
                                   3496 ;src/main.c:179: return;
      000C87 18 2E                 3497 	jr	00109$
      000C89                       3498 00108$:
                                   3499 ;src/main.c:181: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000C89 F8 00                 3500 	ldhl	sp,	#0
      000C8B 4D                    3501 	ld	c, l
      000C8C 44                    3502 	ld	b, h
      000C8D 36 50                 3503 	ld	(hl), #0x50
      000C8F 59                    3504 	ld	e, c
      000C90 50                    3505 	ld	d, b
      000C91 13                    3506 	inc	de
      000C92 AF                    3507 	xor	a, a
      000C93 12                    3508 	ld	(de), a
      000C94 59                    3509 	ld	e, c
      000C95 50                    3510 	ld	d, b
      000C96 13                    3511 	inc	de
      000C97 13                    3512 	inc	de
      000C98 AF                    3513 	xor	a, a
      000C99 12                    3514 	ld	(de), a
      000C9A 59                    3515 	ld	e, c
      000C9B 50                    3516 	ld	d, b
      000C9C 13                    3517 	inc	de
      000C9D 13                    3518 	inc	de
      000C9E 13                    3519 	inc	de
      000C9F AF                    3520 	xor	a, a
      000CA0 12                    3521 	ld	(de), a
      000CA1 21 04 00              3522 	ld	hl, #0x0004
      000CA4 09                    3523 	add	hl, bc
      000CA5 36 00                 3524 	ld	(hl), #0x00
                                   3525 ;src/main.c:182: set_win_tiles(5,row,5,1,blockmap);
      000CA7 C5                    3526 	push	bc
      000CA8 21 05 01              3527 	ld	hl, #0x105
      000CAB E5                    3528 	push	hl
      000CAC F8 0B                 3529 	ldhl	sp,	#11
      000CAE 66                    3530 	ld	h, (hl)
      000CAF 2E 05                 3531 	ld	l, #0x05
      000CB1 E5                    3532 	push	hl
      000CB2 CDr00r00              3533 	call	_set_win_tiles
      000CB5 E8 06                 3534 	add	sp, #6
                                   3535 ;src/main.c:183: return;
      000CB7                       3536 00109$:
                                   3537 ;src/main.c:185: }
      000CB7 E8 05                 3538 	add	sp, #5
      000CB9 C9                    3539 	ret
                                   3540 ;src/main.c:187: void updateScore() {
                                   3541 ;	---------------------------------
                                   3542 ; Function updateScore
                                   3543 ; ---------------------------------
      000CBA                       3544 _updateScore::
      000CBA E8 F6                 3545 	add	sp, #-10
                                   3546 ;src/main.c:191: len = bcd2text(&SCORE, 0x01, buf);
      000CBC F8 00                 3547 	ldhl	sp,	#0
      000CBE 4D                    3548 	ld	c, l
      000CBF 44                    3549 	ld	b, h
      000CC0 59                    3550 	ld	e, c
      000CC1 50                    3551 	ld	d, b
      000CC2 C5                    3552 	push	bc
      000CC3 D5                    3553 	push	de
      000CC4 3E 01                 3554 	ld	a, #0x01
      000CC6 F5                    3555 	push	af
      000CC7 33                    3556 	inc	sp
      000CC8 11rE4r00              3557 	ld	de, #_SCORE
      000CCB D5                    3558 	push	de
      000CCC CDr00r00              3559 	call	_bcd2text
      000CCF E8 05                 3560 	add	sp, #5
      000CD1 C1                    3561 	pop	bc
                                   3562 ;src/main.c:192: set_win_tiles(15, 1, 5, 1, buf+3);
      000CD2 03                    3563 	inc	bc
      000CD3 03                    3564 	inc	bc
      000CD4 03                    3565 	inc	bc
      000CD5 C5                    3566 	push	bc
      000CD6 21 05 01              3567 	ld	hl, #0x105
      000CD9 E5                    3568 	push	hl
      000CDA 21 0F 01              3569 	ld	hl, #0x10f
      000CDD E5                    3570 	push	hl
      000CDE CDr00r00              3571 	call	_set_win_tiles
                                   3572 ;src/main.c:193: }
      000CE1 E8 10                 3573 	add	sp, #16
      000CE3 C9                    3574 	ret
                                   3575 ;src/main.c:195: void updateMissileCount(int8_t amount) {
                                   3576 ;	---------------------------------
                                   3577 ; Function updateMissileCount
                                   3578 ; ---------------------------------
      000CE4                       3579 _updateMissileCount::
      000CE4 E8 F6                 3580 	add	sp, #-10
                                   3581 ;src/main.c:196: if (amount == -1) {
      000CE6 F8 0C                 3582 	ldhl	sp,	#12
      000CE8 7E                    3583 	ld	a, (hl)
      000CE9 3C                    3584 	inc	a
      000CEA 20 13                 3585 	jr	NZ, 00112$
                                   3586 ;src/main.c:197: missiles--;
      000CEC 21rD9r00              3587 	ld	hl, #_missiles
      000CEF 35                    3588 	dec	(hl)
                                   3589 ;src/main.c:198: bcd_sub(&MISSILES, &INCREMENT);
      000CF0 11rE8r00              3590 	ld	de, #_INCREMENT
      000CF3 D5                    3591 	push	de
      000CF4 11rDAr00              3592 	ld	de, #_MISSILES
      000CF7 D5                    3593 	push	de
      000CF8 CDr00r00              3594 	call	_bcd_sub
      000CFB E8 04                 3595 	add	sp, #4
      000CFD 18 30                 3596 	jr	00104$
                                   3597 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000CFF                       3598 00112$:
      000CFF 0E 00                 3599 	ld	c, #0x00
      000D01                       3600 00106$:
      000D01 F8 0C                 3601 	ldhl	sp,	#12
      000D03 5E                    3602 	ld	e, (hl)
      000D04 79                    3603 	ld	a,c
      000D05 57                    3604 	ld	d,a
      000D06 96                    3605 	sub	a, (hl)
      000D07 CB 7B                 3606 	bit	7, e
      000D09 28 07                 3607 	jr	Z, 00128$
      000D0B CB 7A                 3608 	bit	7, d
      000D0D 20 08                 3609 	jr	NZ, 00129$
      000D0F BF                    3610 	cp	a, a
      000D10 18 05                 3611 	jr	00129$
      000D12                       3612 00128$:
      000D12 CB 7A                 3613 	bit	7, d
      000D14 28 01                 3614 	jr	Z, 00129$
      000D16 37                    3615 	scf
      000D17                       3616 00129$:
      000D17 30 16                 3617 	jr	NC, 00104$
                                   3618 ;src/main.c:202: ++missiles;
      000D19 21rD9r00              3619 	ld	hl, #_missiles
      000D1C 34                    3620 	inc	(hl)
                                   3621 ;src/main.c:203: bcd_add(&MISSILES, &INCREMENT);
      000D1D C5                    3622 	push	bc
      000D1E 11rE8r00              3623 	ld	de, #_INCREMENT
      000D21 D5                    3624 	push	de
      000D22 11rDAr00              3625 	ld	de, #_MISSILES
      000D25 D5                    3626 	push	de
      000D26 CDr00r00              3627 	call	_bcd_add
      000D29 E8 04                 3628 	add	sp, #4
      000D2B C1                    3629 	pop	bc
                                   3630 ;src/main.c:201: for(int8_t i=0; i<amount;i++) {
      000D2C 0C                    3631 	inc	c
      000D2D 18 D2                 3632 	jr	00106$
      000D2F                       3633 00104$:
                                   3634 ;src/main.c:208: len = bcd2text(&MISSILES, 0x01, buf);
      000D2F F8 00                 3635 	ldhl	sp,	#0
      000D31 4D                    3636 	ld	c, l
      000D32 44                    3637 	ld	b, h
      000D33 59                    3638 	ld	e, c
      000D34 50                    3639 	ld	d, b
      000D35 C5                    3640 	push	bc
      000D36 D5                    3641 	push	de
      000D37 3E 01                 3642 	ld	a, #0x01
      000D39 F5                    3643 	push	af
      000D3A 33                    3644 	inc	sp
      000D3B 11rDAr00              3645 	ld	de, #_MISSILES
      000D3E D5                    3646 	push	de
      000D3F CDr00r00              3647 	call	_bcd2text
      000D42 E8 05                 3648 	add	sp, #5
      000D44 C1                    3649 	pop	bc
                                   3650 ;src/main.c:209: set_win_tiles(18, 0, 2, 1, buf+6);
      000D45 21 06 00              3651 	ld	hl, #0x0006
      000D48 09                    3652 	add	hl, bc
      000D49 E5                    3653 	push	hl
      000D4A 21 02 01              3654 	ld	hl, #0x102
      000D4D E5                    3655 	push	hl
      000D4E 21 12 00              3656 	ld	hl, #0x12
      000D51 E5                    3657 	push	hl
      000D52 CDr00r00              3658 	call	_set_win_tiles
                                   3659 ;src/main.c:211: }
      000D55 E8 10                 3660 	add	sp, #16
      000D57 C9                    3661 	ret
                                   3662 ;src/main.c:213: void incrementScore() {
                                   3663 ;	---------------------------------
                                   3664 ; Function incrementScore
                                   3665 ; ---------------------------------
      000D58                       3666 _incrementScore::
                                   3667 ;src/main.c:214: score += 1;
      000D58 21rE2r00              3668 	ld	hl, #_score
      000D5B 2A                    3669 	ld	a, (hl+)
      000D5C 4F                    3670 	ld	c, a
      000D5D 3A                    3671 	ld	a, (hl-)
      000D5E 47                    3672 	ld	b, a
      000D5F 03                    3673 	inc	bc
      000D60 79                    3674 	ld	a, c
      000D61 22                    3675 	ld	(hl+), a
      000D62 70                    3676 	ld	(hl), b
                                   3677 ;src/main.c:215: bcd_add(&SCORE, &INCREMENT);
      000D63 11rE8r00              3678 	ld	de, #_INCREMENT
      000D66 D5                    3679 	push	de
      000D67 11rE4r00              3680 	ld	de, #_SCORE
      000D6A D5                    3681 	push	de
      000D6B CDr00r00              3682 	call	_bcd_add
      000D6E E8 04                 3683 	add	sp, #4
                                   3684 ;src/main.c:216: }
      000D70 C9                    3685 	ret
                                   3686 ;src/main.c:218: void updateDirection() {
                                   3687 ;	---------------------------------
                                   3688 ; Function updateDirection
                                   3689 ; ---------------------------------
      000D71                       3690 _updateDirection::
      000D71 E8 FC                 3691 	add	sp, #-4
                                   3692 ;src/main.c:222: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000D73 21rF5r00              3693 	ld	hl, #_joydata
      000D76 5E                    3694 	ld	e, (hl)
      000D77 7B                    3695 	ld	a, e
      000D78 E6 01                 3696 	and	a, #0x01
      000D7A F8 00                 3697 	ldhl	sp,	#0
      000D7C 22                    3698 	ld	(hl+), a
      000D7D AF                    3699 	xor	a, a
      000D7E 22                    3700 	ld	(hl+), a
      000D7F 7B                    3701 	ld	a, e
      000D80 E6 04                 3702 	and	a, #0x04
      000D82 22                    3703 	ld	(hl+), a
      000D83 AF                    3704 	xor	a, a
      000D84 32                    3705 	ld	(hl-), a
      000D85 2B                    3706 	dec	hl
      000D86 7B                    3707 	ld	a, e
      000D87 E6 08                 3708 	and	a, #0x08
      000D89 4F                    3709 	ld	c, a
      000D8A 06 00                 3710 	ld	b, #0x00
      000D8C 3A                    3711 	ld	a, (hl-)
      000D8D B6                    3712 	or	a, (hl)
      000D8E 28 14                 3713 	jr	Z, 00102$
      000D90 F8 03                 3714 	ldhl	sp,	#3
      000D92 3A                    3715 	ld	a, (hl-)
      000D93 B6                    3716 	or	a, (hl)
      000D94 20 0E                 3717 	jr	NZ, 00102$
      000D96 78                    3718 	ld	a, b
      000D97 B1                    3719 	or	a, c
      000D98 20 0A                 3720 	jr	NZ, 00102$
                                   3721 ;src/main.c:223: xDir = 1;
      000D9A 21rC4r00              3722 	ld	hl, #_xDir
      000D9D 36 01                 3723 	ld	(hl), #0x01
                                   3724 ;src/main.c:224: yDir = 0;
      000D9F 21rC5r00              3725 	ld	hl, #_yDir
      000DA2 36 00                 3726 	ld	(hl), #0x00
      000DA4                       3727 00102$:
                                   3728 ;src/main.c:226: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000DA4 7B                    3729 	ld	a, e
      000DA5 E6 02                 3730 	and	a, #0x02
      000DA7 5F                    3731 	ld	e, a
      000DA8 16 00                 3732 	ld	d, #0x00
      000DAA 7A                    3733 	ld	a, d
      000DAB B3                    3734 	or	a, e
      000DAC 28 14                 3735 	jr	Z, 00106$
      000DAE F8 03                 3736 	ldhl	sp,	#3
      000DB0 3A                    3737 	ld	a, (hl-)
      000DB1 B6                    3738 	or	a, (hl)
      000DB2 20 0E                 3739 	jr	NZ, 00106$
      000DB4 78                    3740 	ld	a, b
      000DB5 B1                    3741 	or	a, c
      000DB6 20 0A                 3742 	jr	NZ, 00106$
                                   3743 ;src/main.c:227: xDir = -1;
      000DB8 21rC4r00              3744 	ld	hl, #_xDir
      000DBB 36 FF                 3745 	ld	(hl), #0xff
                                   3746 ;src/main.c:228: yDir = 0;
      000DBD 21rC5r00              3747 	ld	hl, #_yDir
      000DC0 36 00                 3748 	ld	(hl), #0x00
      000DC2                       3749 00106$:
                                   3750 ;src/main.c:230: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DC2 F8 03                 3751 	ldhl	sp,	#3
      000DC4 3A                    3752 	ld	a, (hl-)
      000DC5 B6                    3753 	or	a, (hl)
      000DC6 28 13                 3754 	jr	Z, 00110$
      000DC8 7A                    3755 	ld	a, d
      000DC9 B3                    3756 	or	a, e
      000DCA 20 0F                 3757 	jr	NZ, 00110$
      000DCC 2B                    3758 	dec	hl
      000DCD 3A                    3759 	ld	a, (hl-)
      000DCE B6                    3760 	or	a, (hl)
      000DCF 20 0A                 3761 	jr	NZ, 00110$
                                   3762 ;src/main.c:231: xDir = 0;
      000DD1 21rC4r00              3763 	ld	hl, #_xDir
      000DD4 36 00                 3764 	ld	(hl), #0x00
                                   3765 ;src/main.c:232: yDir = -1;
      000DD6 21rC5r00              3766 	ld	hl, #_yDir
      000DD9 36 FF                 3767 	ld	(hl), #0xff
      000DDB                       3768 00110$:
                                   3769 ;src/main.c:234: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000DDB 78                    3770 	ld	a, b
      000DDC B1                    3771 	or	a, c
      000DDD 28 14                 3772 	jr	Z, 00114$
      000DDF 7A                    3773 	ld	a, d
      000DE0 B3                    3774 	or	a, e
      000DE1 20 10                 3775 	jr	NZ, 00114$
      000DE3 F8 01                 3776 	ldhl	sp,	#1
      000DE5 3A                    3777 	ld	a, (hl-)
      000DE6 B6                    3778 	or	a, (hl)
      000DE7 20 0A                 3779 	jr	NZ, 00114$
                                   3780 ;src/main.c:235: xDir = 0;
      000DE9 21rC4r00              3781 	ld	hl, #_xDir
      000DEC 36 00                 3782 	ld	(hl), #0x00
                                   3783 ;src/main.c:236: yDir = 1;
      000DEE 21rC5r00              3784 	ld	hl, #_yDir
      000DF1 36 01                 3785 	ld	(hl), #0x01
      000DF3                       3786 00114$:
                                   3787 ;src/main.c:240: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000DF3 F8 03                 3788 	ldhl	sp,	#3
      000DF5 3A                    3789 	ld	a, (hl-)
      000DF6 B6                    3790 	or	a, (hl)
      000DF7 28 0F                 3791 	jr	Z, 00118$
      000DF9 2B                    3792 	dec	hl
      000DFA 3A                    3793 	ld	a, (hl-)
      000DFB B6                    3794 	or	a, (hl)
      000DFC 28 0A                 3795 	jr	Z, 00118$
                                   3796 ;src/main.c:241: xDir = 1;
      000DFE 21rC4r00              3797 	ld	hl, #_xDir
      000E01 36 01                 3798 	ld	(hl), #0x01
                                   3799 ;src/main.c:242: yDir = -1;
      000E03 21rC5r00              3800 	ld	hl, #_yDir
      000E06 36 FF                 3801 	ld	(hl), #0xff
      000E08                       3802 00118$:
                                   3803 ;src/main.c:244: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000E08 F8 03                 3804 	ldhl	sp,	#3
      000E0A 3A                    3805 	ld	a, (hl-)
      000E0B B6                    3806 	or	a, (hl)
      000E0C 28 0E                 3807 	jr	Z, 00121$
      000E0E 7A                    3808 	ld	a, d
      000E0F B3                    3809 	or	a, e
      000E10 28 0A                 3810 	jr	Z, 00121$
                                   3811 ;src/main.c:245: xDir = -1;
      000E12 21rC4r00              3812 	ld	hl, #_xDir
      000E15 36 FF                 3813 	ld	(hl), #0xff
                                   3814 ;src/main.c:246: yDir = -1;
      000E17 21rC5r00              3815 	ld	hl, #_yDir
      000E1A 36 FF                 3816 	ld	(hl), #0xff
      000E1C                       3817 00121$:
                                   3818 ;src/main.c:248: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000E1C 78                    3819 	ld	a, b
      000E1D B1                    3820 	or	a, c
      000E1E 28 10                 3821 	jr	Z, 00124$
      000E20 F8 01                 3822 	ldhl	sp,	#1
      000E22 3A                    3823 	ld	a, (hl-)
      000E23 B6                    3824 	or	a, (hl)
      000E24 28 0A                 3825 	jr	Z, 00124$
                                   3826 ;src/main.c:249: xDir = 1;
      000E26 21rC4r00              3827 	ld	hl, #_xDir
      000E29 36 01                 3828 	ld	(hl), #0x01
                                   3829 ;src/main.c:250: yDir = 1;
      000E2B 21rC5r00              3830 	ld	hl, #_yDir
      000E2E 36 01                 3831 	ld	(hl), #0x01
      000E30                       3832 00124$:
                                   3833 ;src/main.c:252: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000E30 78                    3834 	ld	a, b
      000E31 B1                    3835 	or	a, c
      000E32 28 0E                 3836 	jr	Z, 00127$
      000E34 7A                    3837 	ld	a, d
      000E35 B3                    3838 	or	a, e
      000E36 28 0A                 3839 	jr	Z, 00127$
                                   3840 ;src/main.c:253: xDir = -1;
      000E38 21rC4r00              3841 	ld	hl, #_xDir
      000E3B 36 FF                 3842 	ld	(hl), #0xff
                                   3843 ;src/main.c:254: yDir = 1;
      000E3D 21rC5r00              3844 	ld	hl, #_yDir
      000E40 36 01                 3845 	ld	(hl), #0x01
      000E42                       3846 00127$:
                                   3847 ;src/main.c:259: if (xDir == 0 && yDir == 0) {
      000E42 FArC4r00              3848 	ld	a, (#_xDir)
      000E45 B7                    3849 	or	a, a
      000E46 20 07                 3850 	jr	NZ, 00130$
      000E48 FArC5r00              3851 	ld	a, (#_yDir)
      000E4B B7                    3852 	or	a, a
                                   3853 ;src/main.c:260: return;
      000E4C CAr93r0F              3854 	jp	Z,00194$
      000E4F                       3855 00130$:
                                   3856 ;src/main.c:292: if (auxTick == 0) {
      000E4F FArF0r00              3857 	ld	a, (#_auxTick)
      000E52 B7                    3858 	or	a, a
      000E53 C2r93r0F              3859 	jp	NZ, 00194$
                                   3860 ;src/main.c:293: if (xDir == 0 && yDir > 0) {
      000E56 21rC5r00              3861 	ld	hl, #_yDir
      000E59 5E                    3862 	ld	e, (hl)
      000E5A AF                    3863 	xor	a, a
      000E5B 57                    3864 	ld	d, a
      000E5C 96                    3865 	sub	a, (hl)
      000E5D CB 7B                 3866 	bit	7, e
      000E5F 28 07                 3867 	jr	Z, 00381$
      000E61 CB 7A                 3868 	bit	7, d
      000E63 20 08                 3869 	jr	NZ, 00382$
      000E65 BF                    3870 	cp	a, a
      000E66 18 05                 3871 	jr	00382$
      000E68                       3872 00381$:
      000E68 CB 7A                 3873 	bit	7, d
      000E6A 28 01                 3874 	jr	Z, 00382$
      000E6C 37                    3875 	scf
      000E6D                       3876 00382$:
      000E6D 3E 00                 3877 	ld	a, #0x00
      000E6F 17                    3878 	rla
      000E70 4F                    3879 	ld	c, a
      000E71 FArC4r00              3880 	ld	a, (#_xDir)
      000E74 B7                    3881 	or	a,a
      000E75 20 1A                 3882 	jr	NZ, 00157$
      000E77 B1                    3883 	or	a,c
      000E78 28 17                 3884 	jr	Z, 00157$
                                   3885 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E7A 21r02r00              3886 	ld	hl, #(_shadow_OAM + 2)
      000E7D 36 00                 3887 	ld	(hl), #0x00
      000E7F 21r06r00              3888 	ld	hl, #(_shadow_OAM + 6)
      000E82 36 02                 3889 	ld	(hl), #0x02
                                   3890 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000E84 21r03r00              3891 	ld	hl, #(_shadow_OAM + 3)
      000E87 36 40                 3892 	ld	(hl), #0x40
      000E89 21r07r00              3893 	ld	hl, #(_shadow_OAM + 7)
      000E8C 36 40                 3894 	ld	(hl), #0x40
                                   3895 ;src/main.c:297: set_sprite_prop(1, S_FLIPY); 
      000E8E C3r93r0F              3896 	jp	00194$
      000E91                       3897 00157$:
                                   3898 ;src/main.c:299: else if (xDir == 0 && yDir < 0) {
      000E91 FArC5r00              3899 	ld	a, (#_yDir)
      000E94 07                    3900 	rlca
      000E95 E6 01                 3901 	and	a,#0x01
      000E97 F8 02                 3902 	ldhl	sp,	#2
      000E99 77                    3903 	ld	(hl), a
      000E9A FArC4r00              3904 	ld	a, (#_xDir)
      000E9D B7                    3905 	or	a, a
      000E9E 20 1D                 3906 	jr	NZ, 00153$
      000EA0 F8 02                 3907 	ldhl	sp,	#2
      000EA2 7E                    3908 	ld	a, (hl)
      000EA3 B7                    3909 	or	a, a
      000EA4 28 17                 3910 	jr	Z, 00153$
                                   3911 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000EA6 21r02r00              3912 	ld	hl, #(_shadow_OAM + 2)
      000EA9 36 00                 3913 	ld	(hl), #0x00
      000EAB 21r06r00              3914 	ld	hl, #(_shadow_OAM + 6)
      000EAE 36 02                 3915 	ld	(hl), #0x02
                                   3916 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EB0 21r03r00              3917 	ld	hl, #(_shadow_OAM + 3)
      000EB3 36 00                 3918 	ld	(hl), #0x00
      000EB5 21r07r00              3919 	ld	hl, #(_shadow_OAM + 7)
      000EB8 36 00                 3920 	ld	(hl), #0x00
                                   3921 ;src/main.c:303: set_sprite_prop(1, 0); 
      000EBA C3r93r0F              3922 	jp	00194$
      000EBD                       3923 00153$:
                                   3924 ;src/main.c:305: else if (xDir > 0 && yDir == 0) {
      000EBD 21rC4r00              3925 	ld	hl, #_xDir
      000EC0 5E                    3926 	ld	e, (hl)
      000EC1 AF                    3927 	xor	a, a
      000EC2 57                    3928 	ld	d, a
      000EC3 96                    3929 	sub	a, (hl)
      000EC4 CB 7B                 3930 	bit	7, e
      000EC6 28 07                 3931 	jr	Z, 00383$
      000EC8 CB 7A                 3932 	bit	7, d
      000ECA 20 08                 3933 	jr	NZ, 00384$
      000ECC BF                    3934 	cp	a, a
      000ECD 18 05                 3935 	jr	00384$
      000ECF                       3936 00383$:
      000ECF CB 7A                 3937 	bit	7, d
      000ED1 28 01                 3938 	jr	Z, 00384$
      000ED3 37                    3939 	scf
      000ED4                       3940 00384$:
      000ED4 3E 00                 3941 	ld	a, #0x00
      000ED6 17                    3942 	rla
      000ED7 47                    3943 	ld	b, a
      000ED8 B7                    3944 	or	a, a
      000ED9 28 1D                 3945 	jr	Z, 00149$
      000EDB FArC5r00              3946 	ld	a, (#_yDir)
      000EDE B7                    3947 	or	a, a
      000EDF 20 17                 3948 	jr	NZ, 00149$
                                   3949 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000EE1 21r02r00              3950 	ld	hl, #(_shadow_OAM + 2)
      000EE4 36 04                 3951 	ld	(hl), #0x04
      000EE6 21r06r00              3952 	ld	hl, #(_shadow_OAM + 6)
      000EE9 36 06                 3953 	ld	(hl), #0x06
                                   3954 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000EEB 21r03r00              3955 	ld	hl, #(_shadow_OAM + 3)
      000EEE 36 00                 3956 	ld	(hl), #0x00
      000EF0 21r07r00              3957 	ld	hl, #(_shadow_OAM + 7)
      000EF3 36 00                 3958 	ld	(hl), #0x00
                                   3959 ;src/main.c:309: set_sprite_prop(1, 0); 
      000EF5 C3r93r0F              3960 	jp	00194$
      000EF8                       3961 00149$:
                                   3962 ;src/main.c:311: else if (xDir < 0 && yDir == 0) {
      000EF8 FArC4r00              3963 	ld	a, (#_xDir)
      000EFB 07                    3964 	rlca
      000EFC E6 01                 3965 	and	a,#0x01
      000EFE F8 03                 3966 	ldhl	sp,	#3
      000F00 77                    3967 	ld	(hl), a
      000F01 7E                    3968 	ld	a, (hl)
      000F02 B7                    3969 	or	a, a
      000F03 28 1C                 3970 	jr	Z, 00145$
      000F05 FArC5r00              3971 	ld	a, (#_yDir)
      000F08 B7                    3972 	or	a, a
      000F09 20 16                 3973 	jr	NZ, 00145$
                                   3974 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F0B 21r02r00              3975 	ld	hl, #(_shadow_OAM + 2)
      000F0E 36 04                 3976 	ld	(hl), #0x04
      000F10 21r06r00              3977 	ld	hl, #(_shadow_OAM + 6)
      000F13 36 06                 3978 	ld	(hl), #0x06
                                   3979 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F15 21r03r00              3980 	ld	hl, #(_shadow_OAM + 3)
      000F18 36 20                 3981 	ld	(hl), #0x20
      000F1A 21r07r00              3982 	ld	hl, #(_shadow_OAM + 7)
      000F1D 36 20                 3983 	ld	(hl), #0x20
                                   3984 ;src/main.c:315: set_sprite_prop(1, S_FLIPX); 
      000F1F 18 72                 3985 	jr	00194$
      000F21                       3986 00145$:
                                   3987 ;src/main.c:317: else if (xDir > 0 && yDir < 0) {
      000F21 78                    3988 	ld	a, b
      000F22 B7                    3989 	or	a, a
      000F23 28 1C                 3990 	jr	Z, 00141$
      000F25 F8 02                 3991 	ldhl	sp,	#2
      000F27 7E                    3992 	ld	a, (hl)
      000F28 B7                    3993 	or	a, a
      000F29 28 16                 3994 	jr	Z, 00141$
                                   3995 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F2B 21r02r00              3996 	ld	hl, #(_shadow_OAM + 2)
      000F2E 36 08                 3997 	ld	(hl), #0x08
      000F30 21r06r00              3998 	ld	hl, #(_shadow_OAM + 6)
      000F33 36 0A                 3999 	ld	(hl), #0x0a
                                   4000 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F35 21r03r00              4001 	ld	hl, #(_shadow_OAM + 3)
      000F38 36 00                 4002 	ld	(hl), #0x00
      000F3A 21r07r00              4003 	ld	hl, #(_shadow_OAM + 7)
      000F3D 36 00                 4004 	ld	(hl), #0x00
                                   4005 ;src/main.c:321: set_sprite_prop(1, 0); 
      000F3F 18 52                 4006 	jr	00194$
      000F41                       4007 00141$:
                                   4008 ;src/main.c:323: else if (xDir > 0 && yDir > 0) {
      000F41 78                    4009 	ld	a, b
      000F42 B7                    4010 	or	a, a
      000F43 28 1A                 4011 	jr	Z, 00137$
      000F45 79                    4012 	ld	a, c
      000F46 B7                    4013 	or	a, a
      000F47 28 16                 4014 	jr	Z, 00137$
                                   4015 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F49 21r02r00              4016 	ld	hl, #(_shadow_OAM + 2)
      000F4C 36 08                 4017 	ld	(hl), #0x08
      000F4E 21r06r00              4018 	ld	hl, #(_shadow_OAM + 6)
      000F51 36 0A                 4019 	ld	(hl), #0x0a
                                   4020 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F53 21r03r00              4021 	ld	hl, #(_shadow_OAM + 3)
      000F56 36 40                 4022 	ld	(hl), #0x40
      000F58 21r07r00              4023 	ld	hl, #(_shadow_OAM + 7)
      000F5B 36 40                 4024 	ld	(hl), #0x40
                                   4025 ;src/main.c:327: set_sprite_prop(1, S_FLIPY); 
      000F5D 18 34                 4026 	jr	00194$
      000F5F                       4027 00137$:
                                   4028 ;src/main.c:329: else if (xDir < 0 && yDir > 0) {
      000F5F F8 03                 4029 	ldhl	sp,	#3
      000F61 7E                    4030 	ld	a, (hl)
      000F62 B7                    4031 	or	a, a
      000F63 28 1A                 4032 	jr	Z, 00133$
      000F65 79                    4033 	ld	a, c
      000F66 B7                    4034 	or	a, a
      000F67 28 16                 4035 	jr	Z, 00133$
                                   4036 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F69 21r02r00              4037 	ld	hl, #(_shadow_OAM + 2)
      000F6C 36 08                 4038 	ld	(hl), #0x08
      000F6E 21r06r00              4039 	ld	hl, #(_shadow_OAM + 6)
      000F71 36 0A                 4040 	ld	(hl), #0x0a
                                   4041 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F73 21r03r00              4042 	ld	hl, #(_shadow_OAM + 3)
      000F76 36 60                 4043 	ld	(hl), #0x60
      000F78 21r07r00              4044 	ld	hl, #(_shadow_OAM + 7)
      000F7B 36 60                 4045 	ld	(hl), #0x60
                                   4046 ;src/main.c:333: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000F7D 18 14                 4047 	jr	00194$
      000F7F                       4048 00133$:
                                   4049 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000F7F 21r02r00              4050 	ld	hl, #(_shadow_OAM + 2)
      000F82 36 08                 4051 	ld	(hl), #0x08
      000F84 21r06r00              4052 	ld	hl, #(_shadow_OAM + 6)
      000F87 36 0A                 4053 	ld	(hl), #0x0a
                                   4054 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000F89 21r03r00              4055 	ld	hl, #(_shadow_OAM + 3)
      000F8C 36 20                 4056 	ld	(hl), #0x20
      000F8E 21r07r00              4057 	ld	hl, #(_shadow_OAM + 7)
      000F91 36 20                 4058 	ld	(hl), #0x20
                                   4059 ;src/main.c:339: set_sprite_prop(1, S_FLIPX); 
      000F93                       4060 00194$:
                                   4061 ;src/main.c:344: }
      000F93 E8 04                 4062 	add	sp, #4
      000F95 C9                    4063 	ret
                                   4064 ;src/main.c:378: void playSound(uint8_t type) {
                                   4065 ;	---------------------------------
                                   4066 ; Function playSound
                                   4067 ; ---------------------------------
      000F96                       4068 _playSound::
                                   4069 ;src/main.c:379: if (type == 20) { //singlegun
      000F96 F8 02                 4070 	ldhl	sp,	#2
      000F98 7E                    4071 	ld	a, (hl)
      000F99 D6 14                 4072 	sub	a, #0x14
      000F9B 20 13                 4073 	jr	NZ, 00102$
                                   4074 ;src/main.c:380: NR10_REG = 0x00;
      000F9D AF                    4075 	xor	a, a
      000F9E E0r00                 4076 	ldh	(_NR10_REG + 0), a
                                   4077 ;src/main.c:381: NR11_REG = 0x81;
      000FA0 3E 81                 4078 	ld	a, #0x81
      000FA2 E0r00                 4079 	ldh	(_NR11_REG + 0), a
                                   4080 ;src/main.c:382: NR12_REG = 0x43;
      000FA4 3E 43                 4081 	ld	a, #0x43
      000FA6 E0r00                 4082 	ldh	(_NR12_REG + 0), a
                                   4083 ;src/main.c:383: NR13_REG = 0X00;//0x6D;
      000FA8 AF                    4084 	xor	a, a
      000FA9 E0r00                 4085 	ldh	(_NR13_REG + 0), a
                                   4086 ;src/main.c:384: NR14_REG = 0x86;
      000FAB 3E 86                 4087 	ld	a, #0x86
      000FAD E0r00                 4088 	ldh	(_NR14_REG + 0), a
                                   4089 ;src/main.c:385: return;
      000FAF C9                    4090 	ret
      000FB0                       4091 00102$:
                                   4092 ;src/main.c:387: if (type == 23) {
      000FB0 F8 02                 4093 	ldhl	sp,	#2
      000FB2 7E                    4094 	ld	a, (hl)
      000FB3 D6 17                 4095 	sub	a, #0x17
      000FB5 20 12                 4096 	jr	NZ, 00104$
                                   4097 ;src/main.c:388: NR10_REG = 0x00;
      000FB7 AF                    4098 	xor	a, a
      000FB8 E0r00                 4099 	ldh	(_NR10_REG + 0), a
                                   4100 ;src/main.c:389: NR11_REG = 0x81;
      000FBA 3E 81                 4101 	ld	a, #0x81
      000FBC E0r00                 4102 	ldh	(_NR11_REG + 0), a
                                   4103 ;src/main.c:390: NR12_REG = 0x53;
      000FBE 3E 53                 4104 	ld	a, #0x53
      000FC0 E0r00                 4105 	ldh	(_NR12_REG + 0), a
                                   4106 ;src/main.c:391: NR13_REG = 0X00;//0x6D;
      000FC2 AF                    4107 	xor	a, a
      000FC3 E0r00                 4108 	ldh	(_NR13_REG + 0), a
                                   4109 ;src/main.c:392: NR14_REG = 0x86;
      000FC5 3E 86                 4110 	ld	a, #0x86
      000FC7 E0r00                 4111 	ldh	(_NR14_REG + 0), a
      000FC9                       4112 00104$:
                                   4113 ;src/main.c:394: if (type == 26) {
      000FC9 F8 02                 4114 	ldhl	sp,	#2
      000FCB 7E                    4115 	ld	a, (hl)
      000FCC D6 1A                 4116 	sub	a, #0x1a
      000FCE 20 13                 4117 	jr	NZ, 00106$
                                   4118 ;src/main.c:395: NR10_REG = 0x00;
      000FD0 AF                    4119 	xor	a, a
      000FD1 E0r00                 4120 	ldh	(_NR10_REG + 0), a
                                   4121 ;src/main.c:396: NR11_REG = 0x89;
      000FD3 3E 89                 4122 	ld	a, #0x89
      000FD5 E0r00                 4123 	ldh	(_NR11_REG + 0), a
                                   4124 ;src/main.c:397: NR12_REG = 0x55;
      000FD7 3E 55                 4125 	ld	a, #0x55
      000FD9 E0r00                 4126 	ldh	(_NR12_REG + 0), a
                                   4127 ;src/main.c:398: NR13_REG = 0x70;//0Xbe;//0x6D;
      000FDB 3E 70                 4128 	ld	a, #0x70
      000FDD E0r00                 4129 	ldh	(_NR13_REG + 0), a
                                   4130 ;src/main.c:399: NR14_REG = 0x84;
      000FDF 3E 84                 4131 	ld	a, #0x84
      000FE1 E0r00                 4132 	ldh	(_NR14_REG + 0), a
      000FE3                       4133 00106$:
                                   4134 ;src/main.c:401: if (type == 0) {  // explosion
      000FE3 F8 02                 4135 	ldhl	sp,	#2
      000FE5 7E                    4136 	ld	a, (hl)
      000FE6 B7                    4137 	or	a, a
      000FE7 C0                    4138 	ret	NZ
                                   4139 ;src/main.c:402: NR41_REG = 0x20;  
      000FE8 3E 20                 4140 	ld	a, #0x20
      000FEA E0r00                 4141 	ldh	(_NR41_REG + 0), a
                                   4142 ;src/main.c:403: NR42_REG = 0xa2;//0xa3;  
      000FEC 3E A2                 4143 	ld	a, #0xa2
      000FEE E0r00                 4144 	ldh	(_NR42_REG + 0), a
                                   4145 ;src/main.c:404: NR43_REG = 0x57;  
      000FF0 3E 57                 4146 	ld	a, #0x57
      000FF2 E0r00                 4147 	ldh	(_NR43_REG + 0), a
                                   4148 ;src/main.c:405: NR44_REG = 0x80;  
      000FF4 3E 80                 4149 	ld	a, #0x80
      000FF6 E0r00                 4150 	ldh	(_NR44_REG + 0), a
                                   4151 ;src/main.c:411: }
      000FF8 C9                    4152 	ret
                                   4153 ;src/main.c:413: void initEnemies(uint8_t loadSprites) {
                                   4154 ;	---------------------------------
                                   4155 ; Function initEnemies
                                   4156 ; ---------------------------------
      000FF9                       4157 _initEnemies::
      000FF9 E8 F9                 4158 	add	sp, #-7
                                   4159 ;src/main.c:415: if (loadSprites) {
      000FFB F8 09                 4160 	ldhl	sp,	#9
      000FFD 7E                    4161 	ld	a, (hl)
      000FFE B7                    4162 	or	a, a
      000FFF 28 1A                 4163 	jr	Z, 00102$
                                   4164 ;src/main.c:417: set_sprite_data(0x40, 5, enemy1);
      001001 11r18r05              4165 	ld	de, #_enemy1
      001004 D5                    4166 	push	de
      001005 21 40 05              4167 	ld	hl, #0x540
      001008 E5                    4168 	push	hl
      001009 CDr00r00              4169 	call	_set_sprite_data
      00100C E8 04                 4170 	add	sp, #4
                                   4171 ;src/main.c:418: set_sprite_data(0x50, 8, largeenemies);
      00100E 11r68r05              4172 	ld	de, #_largeenemies
      001011 D5                    4173 	push	de
      001012 21 50 08              4174 	ld	hl, #0x850
      001015 E5                    4175 	push	hl
      001016 CDr00r00              4176 	call	_set_sprite_data
      001019 E8 04                 4177 	add	sp, #4
      00101B                       4178 00102$:
                                   4179 ;src/main.c:421: struct Enemy *eptr = enemies;
      00101B 01r5Ar00              4180 	ld	bc, #_enemies+0
                                   4181 ;src/main.c:423: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00101E F8 06                 4182 	ldhl	sp,	#6
      001020 36 00                 4183 	ld	(hl), #0x00
      001022                       4184 00116$:
      001022 21r8Er0B              4185 	ld	hl, #_ENEMYCOUNT
      001025 5E                    4186 	ld	e, (hl)
      001026 F8 06                 4187 	ldhl	sp,	#6
      001028 7E                    4188 	ld	a, (hl)
      001029 93                    4189 	sub	a, e
      00102A D2r61r11              4190 	jp	NC, 00118$
                                   4191 ;src/main.c:424: if (eptr->alive == 0) {
      00102D 21 09 00              4192 	ld	hl, #0x0009
      001030 09                    4193 	add	hl, bc
      001031 7E                    4194 	ld	a, (hl)
      001032 B7                    4195 	or	a, a
      001033 C2r55r11              4196 	jp	NZ, 00107$
                                   4197 ;src/main.c:426: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001036 C5                    4198 	push	bc
      001037 CDr00r00              4199 	call	_rand
      00103A 7B                    4200 	ld	a, e
      00103B C1                    4201 	pop	bc
      00103C 21r17r05              4202 	ld	hl, #_enemyOptionCount
      00103F 56                    4203 	ld	d, (hl)
      001040 C5                    4204 	push	bc
      001041 D5                    4205 	push	de
      001042 33                    4206 	inc	sp
      001043 F5                    4207 	push	af
      001044 33                    4208 	inc	sp
      001045 CDr00r00              4209 	call	__moduchar
      001048 E1                    4210 	pop	hl
      001049 7B                    4211 	ld	a, e
      00104A C1                    4212 	pop	bc
                                   4213 ;src/main.c:428: (*eptr) = enemyOptions[enemyInd];
      00104B 5F                    4214 	ld	e, a
      00104C 16 00                 4215 	ld	d, #0x00
      00104E 6B                    4216 	ld	l, e
      00104F 62                    4217 	ld	h, d
      001050 29                    4218 	add	hl, hl
      001051 29                    4219 	add	hl, hl
      001052 29                    4220 	add	hl, hl
      001053 19                    4221 	add	hl, de
      001054 29                    4222 	add	hl, hl
      001055 11r00r00              4223 	ld	de, #_enemyOptions
      001058 19                    4224 	add	hl, de
      001059 59                    4225 	ld	e, c
      00105A 50                    4226 	ld	d, b
      00105B C5                    4227 	push	bc
      00105C 01 12 00              4228 	ld	bc, #0x12
      00105F C5                    4229 	push	bc
      001060 E5                    4230 	push	hl
      001061 D5                    4231 	push	de
      001062 CDr00r00              4232 	call	___memcpy
      001065 E8 06                 4233 	add	sp, #6
      001067 CDr00r00              4234 	call	_rand
      00106A 7B                    4235 	ld	a, e
      00106B C1                    4236 	pop	bc
      00106C E6 07                 4237 	and	a, #0x07
      00106E F8 05                 4238 	ldhl	sp,	#5
      001070 77                    4239 	ld	(hl), a
                                   4240 ;src/main.c:431: eptr->x = xSpawnPositions[posIndex];
      001071 11r8Fr0B              4241 	ld	de, #_xSpawnPositions
      001074 6E                    4242 	ld	l, (hl)
      001075 26 00                 4243 	ld	h, #0x00
      001077 19                    4244 	add	hl, de
      001078 5D                    4245 	ld	e, l
      001079 54                    4246 	ld	d, h
      00107A 1A                    4247 	ld	a, (de)
      00107B 5F                    4248 	ld	e, a
      00107C 16 00                 4249 	ld	d, #0x00
      00107E 69                    4250 	ld	l, c
      00107F 60                    4251 	ld	h, b
      001080 7B                    4252 	ld	a, e
      001081 22                    4253 	ld	(hl+), a
      001082 72                    4254 	ld	(hl), d
                                   4255 ;src/main.c:432: eptr->y = ySpawnPositions[posIndex];
      001083 21 02 00              4256 	ld	hl, #0x0002
      001086 09                    4257 	add	hl, bc
      001087 33                    4258 	inc	sp
      001088 33                    4259 	inc	sp
      001089 E5                    4260 	push	hl
      00108A 11r97r0B              4261 	ld	de, #_ySpawnPositions
      00108D F8 05                 4262 	ldhl	sp,	#5
      00108F 6E                    4263 	ld	l, (hl)
      001090 26 00                 4264 	ld	h, #0x00
      001092 19                    4265 	add	hl, de
      001093 5D                    4266 	ld	e, l
      001094 54                    4267 	ld	d, h
      001095 1A                    4268 	ld	a, (de)
      001096 F8 04                 4269 	ldhl	sp,	#4
      001098 22                    4270 	ld	(hl+), a
      001099 AF                    4271 	xor	a, a
      00109A 32                    4272 	ld	(hl-), a
      00109B D1                    4273 	pop	de
      00109C D5                    4274 	push	de
      00109D 2A                    4275 	ld	a, (hl+)
      00109E 12                    4276 	ld	(de), a
      00109F 13                    4277 	inc	de
      0010A0 7E                    4278 	ld	a, (hl)
      0010A1 12                    4279 	ld	(de), a
                                   4280 ;src/main.c:434: if (eptr->spriteCount == 1) {
      0010A2 21 08 00              4281 	ld	hl, #0x0008
      0010A5 09                    4282 	add	hl, bc
      0010A6 7E                    4283 	ld	a, (hl)
      0010A7 F8 05                 4284 	ldhl	sp,	#5
      0010A9 77                    4285 	ld	(hl), a
                                   4286 ;src/main.c:435: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010AA 21 06 00              4287 	ld	hl, #0x0006
      0010AD 09                    4288 	add	hl, bc
      0010AE 5D                    4289 	ld	e, l
      0010AF 54                    4290 	ld	d, h
      0010B0 F8 06                 4291 	ldhl	sp,	#6
      0010B2 6E                    4292 	ld	l, (hl)
                                   4293 ;	spillPairReg hl
                                   4294 ;	spillPairReg hl
      0010B3 1A                    4295 	ld	a, (de)
      0010B4 5F                    4296 	ld	e, a
      0010B5 7D                    4297 	ld	a, l
      0010B6 87                    4298 	add	a, a
      0010B7 F8 02                 4299 	ldhl	sp,	#2
      0010B9 77                    4300 	ld	(hl), a
      0010BA 2A                    4301 	ld	a, (hl+)
      0010BB C6 0A                 4302 	add	a, #0x0a
                                   4303 ;src/main.c:434: if (eptr->spriteCount == 1) {
      0010BD 22                    4304 	ld	(hl+), a
      0010BE 23                    4305 	inc	hl
      0010BF 7E                    4306 	ld	a, (hl)
      0010C0 3D                    4307 	dec	a
      0010C1 20 2D                 4308 	jr	NZ, 00104$
                                   4309 ;src/main.c:435: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010C3 F8 03                 4310 	ldhl	sp,	#3
      0010C5 56                    4311 	ld	d, (hl)
                                   4312 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010C6 6A                    4313 	ld	l, d
                                   4314 ;	spillPairReg hl
                                   4315 ;	spillPairReg hl
      0010C7 26 00                 4316 	ld	h, #0x00
                                   4317 ;	spillPairReg hl
                                   4318 ;	spillPairReg hl
      0010C9 29                    4319 	add	hl, hl
      0010CA 29                    4320 	add	hl, hl
      0010CB D5                    4321 	push	de
      0010CC 11r00r00              4322 	ld	de, #_shadow_OAM
      0010CF 19                    4323 	add	hl, de
      0010D0 23                    4324 	inc	hl
      0010D1 23                    4325 	inc	hl
      0010D2 D1                    4326 	pop	de
      0010D3 73                    4327 	ld	(hl), e
                                   4328 ;src/main.c:436: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010D4 D1                    4329 	pop	de
      0010D5 D5                    4330 	push	de
      0010D6 1A                    4331 	ld	a, (de)
      0010D7 F8 05                 4332 	ldhl	sp,	#5
      0010D9 32                    4333 	ld	(hl-), a
      0010DA 0A                    4334 	ld	a, (bc)
      0010DB 32                    4335 	ld	(hl-), a
                                   4336 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0010DC 6E                    4337 	ld	l, (hl)
                                   4338 ;	spillPairReg hl
                                   4339 ;	spillPairReg hl
      0010DD 26 00                 4340 	ld	h, #0x00
                                   4341 ;	spillPairReg hl
                                   4342 ;	spillPairReg hl
      0010DF 29                    4343 	add	hl, hl
      0010E0 29                    4344 	add	hl, hl
      0010E1 11r00r00              4345 	ld	de, #_shadow_OAM
      0010E4 19                    4346 	add	hl, de
      0010E5 5D                    4347 	ld	e, l
      0010E6 54                    4348 	ld	d, h
                                   4349 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0010E7 F8 05                 4350 	ldhl	sp,	#5
      0010E9 3A                    4351 	ld	a, (hl-)
      0010EA 12                    4352 	ld	(de), a
      0010EB 13                    4353 	inc	de
      0010EC 7E                    4354 	ld	a, (hl)
      0010ED 12                    4355 	ld	(de), a
                                   4356 ;src/main.c:436: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      0010EE 18 65                 4357 	jr	00107$
      0010F0                       4358 00104$:
                                   4359 ;src/main.c:439: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      0010F0 F8 03                 4360 	ldhl	sp,	#3
      0010F2 56                    4361 	ld	d, (hl)
                                   4362 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0010F3 6A                    4363 	ld	l, d
                                   4364 ;	spillPairReg hl
                                   4365 ;	spillPairReg hl
      0010F4 26 00                 4366 	ld	h, #0x00
                                   4367 ;	spillPairReg hl
                                   4368 ;	spillPairReg hl
      0010F6 29                    4369 	add	hl, hl
      0010F7 29                    4370 	add	hl, hl
      0010F8 D5                    4371 	push	de
      0010F9 11r00r00              4372 	ld	de, #_shadow_OAM
      0010FC 19                    4373 	add	hl, de
      0010FD 23                    4374 	inc	hl
      0010FE 23                    4375 	inc	hl
      0010FF D1                    4376 	pop	de
      001100 73                    4377 	ld	(hl), e
                                   4378 ;src/main.c:440: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      001101 D1                    4379 	pop	de
      001102 D5                    4380 	push	de
      001103 1A                    4381 	ld	a, (de)
      001104 F8 04                 4382 	ldhl	sp,	#4
      001106 22                    4383 	ld	(hl+), a
      001107 0A                    4384 	ld	a, (bc)
      001108 32                    4385 	ld	(hl-), a
      001109 2B                    4386 	dec	hl
      00110A 5E                    4387 	ld	e, (hl)
                                   4388 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00110B 26 00                 4389 	ld	h, #0x00
                                   4390 ;	spillPairReg hl
                                   4391 ;	spillPairReg hl
      00110D 6B                    4392 	ld	l, e
      00110E 29                    4393 	add	hl, hl
      00110F 29                    4394 	add	hl, hl
      001110 11r00r00              4395 	ld	de, #_shadow_OAM
      001113 19                    4396 	add	hl, de
      001114 5D                    4397 	ld	e, l
      001115 54                    4398 	ld	d, h
                                   4399 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001116 F8 04                 4400 	ldhl	sp,	#4
      001118 2A                    4401 	ld	a, (hl+)
      001119 12                    4402 	ld	(de), a
      00111A 13                    4403 	inc	de
      00111B 7E                    4404 	ld	a, (hl)
      00111C 12                    4405 	ld	(de), a
                                   4406 ;src/main.c:442: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      00111D 21 07 00              4407 	ld	hl, #0x0007
      001120 09                    4408 	add	hl, bc
      001121 5E                    4409 	ld	e, (hl)
      001122 F8 02                 4410 	ldhl	sp,	#2
      001124 7E                    4411 	ld	a, (hl)
      001125 C6 0B                 4412 	add	a, #0x0b
      001127 F8 05                 4413 	ldhl	sp,	#5
      001129 77                    4414 	ld	(hl), a
      00112A 56                    4415 	ld	d, (hl)
                                   4416 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00112B 6A                    4417 	ld	l, d
                                   4418 ;	spillPairReg hl
                                   4419 ;	spillPairReg hl
      00112C 26 00                 4420 	ld	h, #0x00
                                   4421 ;	spillPairReg hl
                                   4422 ;	spillPairReg hl
      00112E 29                    4423 	add	hl, hl
      00112F 29                    4424 	add	hl, hl
      001130 D5                    4425 	push	de
      001131 11r00r00              4426 	ld	de, #_shadow_OAM
      001134 19                    4427 	add	hl, de
      001135 23                    4428 	inc	hl
      001136 23                    4429 	inc	hl
      001137 D1                    4430 	pop	de
      001138 73                    4431 	ld	(hl), e
                                   4432 ;src/main.c:443: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001139 D1                    4433 	pop	de
      00113A D5                    4434 	push	de
      00113B 1A                    4435 	ld	a, (de)
      00113C F8 04                 4436 	ldhl	sp,	#4
      00113E 32                    4437 	ld	(hl-), a
      00113F 0A                    4438 	ld	a, (bc)
      001140 22                    4439 	ld	(hl+), a
      001141 23                    4440 	inc	hl
      001142 5E                    4441 	ld	e, (hl)
                                   4442 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001143 26 00                 4443 	ld	h, #0x00
                                   4444 ;	spillPairReg hl
                                   4445 ;	spillPairReg hl
      001145 6B                    4446 	ld	l, e
      001146 29                    4447 	add	hl, hl
      001147 29                    4448 	add	hl, hl
      001148 11r00r00              4449 	ld	de, #_shadow_OAM
      00114B 19                    4450 	add	hl, de
      00114C 5D                    4451 	ld	e, l
      00114D 54                    4452 	ld	d, h
                                   4453 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00114E F8 04                 4454 	ldhl	sp,	#4
      001150 3A                    4455 	ld	a, (hl-)
      001151 12                    4456 	ld	(de), a
      001152 13                    4457 	inc	de
      001153 7E                    4458 	ld	a, (hl)
      001154 12                    4459 	ld	(de), a
                                   4460 ;src/main.c:443: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      001155                       4461 00107$:
                                   4462 ;src/main.c:448: eptr++;
      001155 21 12 00              4463 	ld	hl, #0x0012
      001158 09                    4464 	add	hl, bc
      001159 4D                    4465 	ld	c, l
      00115A 44                    4466 	ld	b, h
                                   4467 ;src/main.c:423: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00115B F8 06                 4468 	ldhl	sp,	#6
      00115D 34                    4469 	inc	(hl)
      00115E C3r22r10              4470 	jp	00116$
      001161                       4471 00118$:
                                   4472 ;src/main.c:451: }
      001161 E8 07                 4473 	add	sp, #7
      001163 C9                    4474 	ret
                                   4475 ;src/main.c:453: void initEnemy(uint8_t i) {
                                   4476 ;	---------------------------------
                                   4477 ; Function initEnemy
                                   4478 ; ---------------------------------
      001164                       4479 _initEnemy::
      001164 E8 FC                 4480 	add	sp, #-4
                                   4481 ;src/main.c:456: if (enemies[i].alive == 0) {
      001166 F8 06                 4482 	ldhl	sp,	#6
      001168 4E                    4483 	ld	c, (hl)
      001169 06 00                 4484 	ld	b, #0x00
      00116B 69                    4485 	ld	l, c
      00116C 60                    4486 	ld	h, b
      00116D 29                    4487 	add	hl, hl
      00116E 29                    4488 	add	hl, hl
      00116F 29                    4489 	add	hl, hl
      001170 09                    4490 	add	hl, bc
      001171 29                    4491 	add	hl, hl
      001172 01r5Ar00              4492 	ld	bc,#_enemies
      001175 09                    4493 	add	hl,bc
      001176 4D                    4494 	ld	c, l
      001177 44                    4495 	ld	b, h
      001178 21 09 00              4496 	ld	hl, #0x0009
      00117B 09                    4497 	add	hl, bc
      00117C 7E                    4498 	ld	a, (hl)
      00117D B7                    4499 	or	a, a
      00117E C2r45r12              4500 	jp	NZ, 00109$
                                   4501 ;src/main.c:458: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      001181 C5                    4502 	push	bc
      001182 CDr00r00              4503 	call	_rand
      001185 7B                    4504 	ld	a, e
      001186 C1                    4505 	pop	bc
      001187 21r17r05              4506 	ld	hl, #_enemyOptionCount
      00118A 56                    4507 	ld	d, (hl)
      00118B C5                    4508 	push	bc
      00118C D5                    4509 	push	de
      00118D 33                    4510 	inc	sp
      00118E F5                    4511 	push	af
      00118F 33                    4512 	inc	sp
      001190 CDr00r00              4513 	call	__moduchar
      001193 E1                    4514 	pop	hl
      001194 C1                    4515 	pop	bc
      001195 F8 03                 4516 	ldhl	sp,	#3
      001197 73                    4517 	ld	(hl), e
                                   4518 ;src/main.c:459: enemies[i] = enemyOptions[enemyInd];
      001198 5E                    4519 	ld	e, (hl)
      001199 16 00                 4520 	ld	d, #0x00
      00119B 6B                    4521 	ld	l, e
      00119C 62                    4522 	ld	h, d
      00119D 29                    4523 	add	hl, hl
      00119E 29                    4524 	add	hl, hl
      00119F 29                    4525 	add	hl, hl
      0011A0 19                    4526 	add	hl, de
      0011A1 29                    4527 	add	hl, hl
      0011A2 11r00r00              4528 	ld	de, #_enemyOptions
      0011A5 19                    4529 	add	hl, de
      0011A6 59                    4530 	ld	e, c
      0011A7 50                    4531 	ld	d, b
      0011A8 C5                    4532 	push	bc
      0011A9 01 12 00              4533 	ld	bc, #0x12
      0011AC C5                    4534 	push	bc
      0011AD E5                    4535 	push	hl
      0011AE D5                    4536 	push	de
      0011AF CDr00r00              4537 	call	___memcpy
      0011B2 E8 06                 4538 	add	sp, #6
      0011B4 CDr00r00              4539 	call	_rand
      0011B7 7B                    4540 	ld	a, e
      0011B8 C1                    4541 	pop	bc
      0011B9 E6 07                 4542 	and	a, #0x07
      0011BB F8 03                 4543 	ldhl	sp,	#3
      0011BD 77                    4544 	ld	(hl), a
                                   4545 ;src/main.c:462: enemies[i].x = xSpawnPositions[posIndex];
      0011BE 11r8Fr0B              4546 	ld	de, #_xSpawnPositions+0
      0011C1 6E                    4547 	ld	l, (hl)
      0011C2 26 00                 4548 	ld	h, #0x00
      0011C4 19                    4549 	add	hl, de
      0011C5 5D                    4550 	ld	e, l
      0011C6 54                    4551 	ld	d, h
      0011C7 1A                    4552 	ld	a, (de)
      0011C8 5F                    4553 	ld	e, a
      0011C9 16 00                 4554 	ld	d, #0x00
      0011CB 69                    4555 	ld	l, c
      0011CC 60                    4556 	ld	h, b
      0011CD 7B                    4557 	ld	a, e
      0011CE 22                    4558 	ld	(hl+), a
      0011CF 72                    4559 	ld	(hl), d
                                   4560 ;src/main.c:463: enemies[i].y = ySpawnPositions[posIndex];
      0011D0 21 02 00              4561 	ld	hl, #0x0002
      0011D3 09                    4562 	add	hl, bc
      0011D4 33                    4563 	inc	sp
      0011D5 33                    4564 	inc	sp
      0011D6 E5                    4565 	push	hl
      0011D7 11r97r0B              4566 	ld	de, #_ySpawnPositions+0
      0011DA F8 03                 4567 	ldhl	sp,	#3
      0011DC 6E                    4568 	ld	l, (hl)
      0011DD 26 00                 4569 	ld	h, #0x00
      0011DF 19                    4570 	add	hl, de
      0011E0 5D                    4571 	ld	e, l
      0011E1 54                    4572 	ld	d, h
      0011E2 1A                    4573 	ld	a, (de)
      0011E3 F8 02                 4574 	ldhl	sp,	#2
      0011E5 22                    4575 	ld	(hl+), a
      0011E6 AF                    4576 	xor	a, a
      0011E7 32                    4577 	ld	(hl-), a
      0011E8 D1                    4578 	pop	de
      0011E9 D5                    4579 	push	de
      0011EA 2A                    4580 	ld	a, (hl+)
      0011EB 12                    4581 	ld	(de), a
      0011EC 13                    4582 	inc	de
      0011ED 7E                    4583 	ld	a, (hl)
      0011EE 12                    4584 	ld	(de), a
                                   4585 ;src/main.c:465: if (enemies[i].spriteCount == 1) {
      0011EF 21 08 00              4586 	ld	hl, #0x0008
      0011F2 09                    4587 	add	hl, bc
      0011F3 7E                    4588 	ld	a, (hl)
      0011F4 F8 02                 4589 	ldhl	sp,	#2
      0011F6 77                    4590 	ld	(hl), a
                                   4591 ;src/main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      0011F7 21 06 00              4592 	ld	hl, #0x0006
      0011FA 09                    4593 	add	hl, bc
      0011FB 5D                    4594 	ld	e, l
      0011FC 54                    4595 	ld	d, h
      0011FD F8 06                 4596 	ldhl	sp,	#6
      0011FF 7E                    4597 	ld	a, (hl)
      001200 F5                    4598 	push	af
      001201 1A                    4599 	ld	a, (de)
      001202 5F                    4600 	ld	e, a
      001203 F1                    4601 	pop	af
      001204 87                    4602 	add	a, a
      001205 F8 03                 4603 	ldhl	sp,	#3
      001207 77                    4604 	ld	(hl), a
      001208 7E                    4605 	ld	a, (hl)
      001209 C6 0A                 4606 	add	a, #0x0a
      00120B 6F                    4607 	ld	l, a
                                   4608 ;	spillPairReg hl
                                   4609 ;	spillPairReg hl
                                   4610 ;src/main.c:465: if (enemies[i].spriteCount == 1) {
      00120C E5                    4611 	push	hl
      00120D F8 04                 4612 	ldhl	sp,	#4
      00120F 7E                    4613 	ld	a, (hl)
      001210 3D                    4614 	dec	a
      001211 E1                    4615 	pop	hl
      001212 20 0D                 4616 	jr	NZ, 00102$
                                   4617 ;src/main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   4618 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
                                   4619 ;	spillPairReg hl
                                   4620 ;	spillPairReg hl
      001214 26 00                 4621 	ld	h, #0x00
                                   4622 ;	spillPairReg hl
                                   4623 ;	spillPairReg hl
      001216 29                    4624 	add	hl, hl
      001217 29                    4625 	add	hl, hl
      001218 01r00r00              4626 	ld	bc, #_shadow_OAM
      00121B 09                    4627 	add	hl, bc
      00121C 23                    4628 	inc	hl
      00121D 23                    4629 	inc	hl
      00121E 73                    4630 	ld	(hl), e
                                   4631 ;src/main.c:466: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
      00121F 18 24                 4632 	jr	00109$
      001221                       4633 00102$:
                                   4634 ;src/main.c:470: set_sprite_tile(10+ (i<<1), enemies[i].sprite0);
                                   4635 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001221 55                    4636 	ld	d,l
                                   4637 ;	spillPairReg hl
                                   4638 ;	spillPairReg hl
      001222 26 00                 4639 	ld	h, #0x00
                                   4640 ;	spillPairReg hl
                                   4641 ;	spillPairReg hl
      001224 29                    4642 	add	hl, hl
      001225 29                    4643 	add	hl, hl
      001226 D5                    4644 	push	de
      001227 11r00r00              4645 	ld	de, #_shadow_OAM
      00122A 19                    4646 	add	hl, de
      00122B 23                    4647 	inc	hl
      00122C 23                    4648 	inc	hl
      00122D D1                    4649 	pop	de
      00122E 73                    4650 	ld	(hl), e
                                   4651 ;src/main.c:473: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      00122F 21 07 00              4652 	ld	hl, #0x0007
      001232 09                    4653 	add	hl, bc
      001233 4E                    4654 	ld	c, (hl)
      001234 F8 03                 4655 	ldhl	sp,	#3
      001236 7E                    4656 	ld	a, (hl)
      001237 C6 0B                 4657 	add	a, #0x0b
                                   4658 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001239 6F                    4659 	ld	l, a
      00123A 11r00r00              4660 	ld	de, #_shadow_OAM+0
                                   4661 ;	spillPairReg hl
                                   4662 ;	spillPairReg hl
      00123D 26 00                 4663 	ld	h, #0x00
                                   4664 ;	spillPairReg hl
                                   4665 ;	spillPairReg hl
      00123F 29                    4666 	add	hl, hl
      001240 29                    4667 	add	hl, hl
      001241 19                    4668 	add	hl, de
      001242 23                    4669 	inc	hl
      001243 23                    4670 	inc	hl
      001244 71                    4671 	ld	(hl), c
                                   4672 ;src/main.c:473: set_sprite_tile(10+ (i<<1) +1, enemies[i].sprite1);
      001245                       4673 00109$:
                                   4674 ;src/main.c:482: }
      001245 E8 04                 4675 	add	sp, #4
      001247 C9                    4676 	ret
                                   4677 ;src/main.c:485: void updateEnemyPositions() {
                                   4678 ;	---------------------------------
                                   4679 ; Function updateEnemyPositions
                                   4680 ; ---------------------------------
      001248                       4681 _updateEnemyPositions::
      001248 E8 F0                 4682 	add	sp, #-16
                                   4683 ;src/main.c:488: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00124A F8 0F                 4684 	ldhl	sp,	#15
      00124C 36 00                 4685 	ld	(hl), #0x00
      00124E                       4686 00197$:
      00124E 21r8Er0B              4687 	ld	hl, #_ENEMYCOUNT
      001251 4E                    4688 	ld	c, (hl)
      001252 F8 0F                 4689 	ldhl	sp,	#15
      001254 7E                    4690 	ld	a, (hl)
      001255 91                    4691 	sub	a, c
      001256 D2r70r18              4692 	jp	NC, 00145$
                                   4693 ;src/main.c:489: if (!enemies[i].alive) {
      001259 4E                    4694 	ld	c, (hl)
      00125A 06 00                 4695 	ld	b, #0x00
      00125C 69                    4696 	ld	l, c
      00125D 60                    4697 	ld	h, b
      00125E 29                    4698 	add	hl, hl
      00125F 29                    4699 	add	hl, hl
      001260 29                    4700 	add	hl, hl
      001261 09                    4701 	add	hl, bc
      001262 29                    4702 	add	hl, hl
                                   4703 ;src/main.c:497: if (enemies[i].x < playerDrawX) {
      001263 01r5Ar00              4704 	ld	bc,#_enemies
      001266 09                    4705 	add	hl,bc
      001267 33                    4706 	inc	sp
      001268 33                    4707 	inc	sp
                                   4708 ;src/main.c:489: if (!enemies[i].alive) {
      001269 5D                    4709 	ld	e, l
      00126A 54                    4710 	ld	d, h
      00126B D5                    4711 	push	de
      00126C 21 09 00              4712 	ld	hl, #0x0009
      00126F 19                    4713 	add	hl, de
      001270 4D                    4714 	ld	c, l
      001271 44                    4715 	ld	b, h
      001272 0A                    4716 	ld	a, (bc)
      001273 B7                    4717 	or	a, a
      001274 CAr6Ar18              4718 	jp	Z, 00144$
                                   4719 ;src/main.c:492: enemies[i].x -= xOverflow;
      001277 D1                    4720 	pop	de
      001278 D5                    4721 	push	de
      001279 1A                    4722 	ld	a, (de)
      00127A 4F                    4723 	ld	c, a
      00127B 13                    4724 	inc	de
      00127C 1A                    4725 	ld	a, (de)
      00127D 47                    4726 	ld	b, a
      00127E 21rD2r00              4727 	ld	hl, #_xOverflow
      001281 2A                    4728 	ld	a, (hl+)
      001282 5F                    4729 	ld	e, a
      001283 56                    4730 	ld	d, (hl)
      001284 79                    4731 	ld	a, c
      001285 93                    4732 	sub	a, e
      001286 5F                    4733 	ld	e, a
      001287 78                    4734 	ld	a, b
      001288 9A                    4735 	sbc	a, d
      001289 F8 0E                 4736 	ldhl	sp,	#14
      00128B 32                    4737 	ld	(hl-), a
      00128C 73                    4738 	ld	(hl), e
      00128D D1                    4739 	pop	de
      00128E D5                    4740 	push	de
      00128F 2A                    4741 	ld	a, (hl+)
      001290 12                    4742 	ld	(de), a
      001291 13                    4743 	inc	de
      001292 7E                    4744 	ld	a, (hl)
      001293 12                    4745 	ld	(de), a
                                   4746 ;src/main.c:493: enemies[i].y -= yOverflow;
      001294 D1                    4747 	pop	de
      001295 D5                    4748 	push	de
      001296 21 02 00              4749 	ld	hl, #0x0002
      001299 19                    4750 	add	hl, de
      00129A E5                    4751 	push	hl
      00129B 7D                    4752 	ld	a, l
      00129C F8 04                 4753 	ldhl	sp,	#4
      00129E 77                    4754 	ld	(hl), a
      00129F E1                    4755 	pop	hl
      0012A0 7C                    4756 	ld	a, h
      0012A1 F8 03                 4757 	ldhl	sp,	#3
      0012A3 32                    4758 	ld	(hl-), a
      0012A4 2A                    4759 	ld	a, (hl+)
      0012A5 5F                    4760 	ld	e, a
      0012A6 56                    4761 	ld	d, (hl)
      0012A7 1A                    4762 	ld	a, (de)
      0012A8 4F                    4763 	ld	c, a
      0012A9 13                    4764 	inc	de
      0012AA 1A                    4765 	ld	a, (de)
      0012AB 47                    4766 	ld	b, a
      0012AC 79                    4767 	ld	a, c
      0012AD 21rD4r00              4768 	ld	hl, #_yOverflow
      0012B0 96                    4769 	sub	a, (hl)
      0012B1 23                    4770 	inc	hl
      0012B2 4F                    4771 	ld	c, a
      0012B3 78                    4772 	ld	a, b
      0012B4 9E                    4773 	sbc	a, (hl)
      0012B5 47                    4774 	ld	b, a
      0012B6 F8 02                 4775 	ldhl	sp,	#2
      0012B8 2A                    4776 	ld	a,	(hl+)
      0012B9 66                    4777 	ld	h, (hl)
      0012BA 6F                    4778 	ld	l, a
      0012BB 79                    4779 	ld	a, c
      0012BC 22                    4780 	ld	(hl+), a
      0012BD 70                    4781 	ld	(hl), b
                                   4782 ;src/main.c:496: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012BE F8 0D                 4783 	ldhl	sp,	#13
      0012C0 7E                    4784 	ld	a, (hl)
      0012C1 21rCCr00              4785 	ld	hl, #_playerDrawX
      0012C4 4E                    4786 	ld	c, (hl)
      0012C5 91                    4787 	sub	a, c
      0012C6 4F                    4788 	ld	c, a
                                   4789 ;src/main.c:368: if (value >= 0) return value;
      0012C7 CB 79                 4790 	bit	7, c
      0012C9 20 03                 4791 	jr	NZ, 00170$
      0012CB 41                    4792 	ld	b, c
      0012CC 18 03                 4793 	jr	00172$
      0012CE                       4794 00170$:
                                   4795 ;src/main.c:369: else return - value;
      0012CE AF                    4796 	xor	a, a
      0012CF 91                    4797 	sub	a, c
      0012D0 47                    4798 	ld	b, a
                                   4799 ;src/main.c:496: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012D1                       4800 00172$:
                                   4801 ;src/main.c:511: enemies[i].ySpeed += enemies[i].accel;
      0012D1 D1                    4802 	pop	de
      0012D2 D5                    4803 	push	de
      0012D3 21 0D 00              4804 	ld	hl, #0x000d
      0012D6 19                    4805 	add	hl, de
      0012D7 E5                    4806 	push	hl
      0012D8 7D                    4807 	ld	a, l
      0012D9 F8 08                 4808 	ldhl	sp,	#8
      0012DB 77                    4809 	ld	(hl), a
      0012DC E1                    4810 	pop	hl
      0012DD 7C                    4811 	ld	a, h
      0012DE F8 07                 4812 	ldhl	sp,	#7
      0012E0 77                    4813 	ld	(hl), a
                                   4814 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      0012E1 D1                    4815 	pop	de
      0012E2 D5                    4816 	push	de
      0012E3 21 0E 00              4817 	ld	hl, #0x000e
      0012E6 19                    4818 	add	hl, de
      0012E7 E5                    4819 	push	hl
      0012E8 7D                    4820 	ld	a, l
      0012E9 F8 06                 4821 	ldhl	sp,	#6
      0012EB 77                    4822 	ld	(hl), a
      0012EC E1                    4823 	pop	hl
      0012ED 7C                    4824 	ld	a, h
      0012EE F8 05                 4825 	ldhl	sp,	#5
                                   4826 ;src/main.c:505: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      0012F0 32                    4827 	ld	(hl-), a
      0012F1 2A                    4828 	ld	a, (hl+)
      0012F2 5F                    4829 	ld	e, a
      0012F3 56                    4830 	ld	d, (hl)
      0012F4 1A                    4831 	ld	a, (de)
      0012F5 4F                    4832 	ld	c, a
                                   4833 ;src/main.c:496: if (abs(enemies[i].x - playerDrawX) > 8) {
      0012F6 58                    4834 	ld	e, b
      0012F7 3E 08                 4835 	ld	a,#0x08
      0012F9 57                    4836 	ld	d,a
      0012FA 90                    4837 	sub	a, b
      0012FB CB 7B                 4838 	bit	7, e
      0012FD 28 07                 4839 	jr	Z, 00399$
      0012FF CB 7A                 4840 	bit	7, d
      001301 20 08                 4841 	jr	NZ, 00400$
      001303 BF                    4842 	cp	a, a
      001304 18 05                 4843 	jr	00400$
      001306                       4844 00399$:
      001306 CB 7A                 4845 	bit	7, d
      001308 28 01                 4846 	jr	Z, 00400$
      00130A 37                    4847 	scf
      00130B                       4848 00400$:
      00130B 30 4E                 4849 	jr	NC, 00111$
                                   4850 ;src/main.c:497: if (enemies[i].x < playerDrawX) {
      00130D D1                    4851 	pop	de
      00130E D5                    4852 	push	de
      00130F 1A                    4853 	ld	a, (de)
      001310 F8 0B                 4854 	ldhl	sp,	#11
      001312 22                    4855 	ld	(hl+), a
      001313 13                    4856 	inc	de
      001314 1A                    4857 	ld	a, (de)
      001315 77                    4858 	ld	(hl), a
      001316 FArCCr00              4859 	ld	a, (#_playerDrawX)
      001319 F8 0D                 4860 	ldhl	sp,	#13
      00131B 22                    4861 	ld	(hl+), a
      00131C 36 00                 4862 	ld	(hl), #0x00
                                   4863 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      00131E F8 06                 4864 	ldhl	sp,#6
      001320 2A                    4865 	ld	a, (hl+)
      001321 5F                    4866 	ld	e, a
      001322 56                    4867 	ld	d, (hl)
      001323 1A                    4868 	ld	a, (de)
      001324 47                    4869 	ld	b, a
                                   4870 ;src/main.c:497: if (enemies[i].x < playerDrawX) {
      001325 F8 0B                 4871 	ldhl	sp,	#11
      001327 5D                    4872 	ld	e, l
      001328 54                    4873 	ld	d, h
      001329 F8 0D                 4874 	ldhl	sp,	#13
      00132B 1A                    4875 	ld	a, (de)
      00132C 13                    4876 	inc	de
      00132D 96                    4877 	sub	a, (hl)
      00132E 23                    4878 	inc	hl
      00132F 1A                    4879 	ld	a, (de)
      001330 9E                    4880 	sbc	a, (hl)
      001331 1A                    4881 	ld	a, (de)
      001332 57                    4882 	ld	d, a
      001333 CB 7E                 4883 	bit	7, (hl)
      001335 28 07                 4884 	jr	Z, 00401$
      001337 CB 7A                 4885 	bit	7, d
      001339 20 08                 4886 	jr	NZ, 00402$
      00133B BF                    4887 	cp	a, a
      00133C 18 05                 4888 	jr	00402$
      00133E                       4889 00401$:
      00133E CB 7A                 4890 	bit	7, d
      001340 28 01                 4891 	jr	Z, 00402$
      001342 37                    4892 	scf
      001343                       4893 00402$:
      001343 30 0B                 4894 	jr	NC, 00104$
                                   4895 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      001345 79                    4896 	ld	a, c
      001346 80                    4897 	add	a, b
      001347 4F                    4898 	ld	c, a
      001348 F8 04                 4899 	ldhl	sp,	#4
      00134A 2A                    4900 	ld	a,	(hl+)
      00134B 66                    4901 	ld	h, (hl)
      00134C 6F                    4902 	ld	l, a
      00134D 71                    4903 	ld	(hl), c
      00134E 18 38                 4904 	jr	00112$
      001350                       4905 00104$:
                                   4906 ;src/main.c:501: enemies[i].xSpeed -= enemies[i].accel;
      001350 79                    4907 	ld	a, c
      001351 90                    4908 	sub	a, b
      001352 4F                    4909 	ld	c, a
      001353 F8 04                 4910 	ldhl	sp,	#4
      001355 2A                    4911 	ld	a,	(hl+)
      001356 66                    4912 	ld	h, (hl)
      001357 6F                    4913 	ld	l, a
      001358 71                    4914 	ld	(hl), c
      001359 18 2D                 4915 	jr	00112$
      00135B                       4916 00111$:
                                   4917 ;src/main.c:505: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      00135B 59                    4918 	ld	e, c
      00135C AF                    4919 	xor	a, a
      00135D 57                    4920 	ld	d, a
      00135E 91                    4921 	sub	a, c
      00135F CB 7B                 4922 	bit	7, e
      001361 28 07                 4923 	jr	Z, 00403$
      001363 CB 7A                 4924 	bit	7, d
      001365 20 08                 4925 	jr	NZ, 00404$
      001367 BF                    4926 	cp	a, a
      001368 18 05                 4927 	jr	00404$
      00136A                       4928 00403$:
      00136A CB 7A                 4929 	bit	7, d
      00136C 28 01                 4930 	jr	Z, 00404$
      00136E 37                    4931 	scf
      00136F                       4932 00404$:
      00136F 30 07                 4933 	jr	NC, 00107$
      001371 0D                    4934 	dec	c
      001372 F8 04                 4935 	ldhl	sp,	#4
      001374 2A                    4936 	ld	a,	(hl+)
      001375 66                    4937 	ld	h, (hl)
      001376 6F                    4938 	ld	l, a
      001377 71                    4939 	ld	(hl), c
      001378                       4940 00107$:
      001378 F8 04                 4941 	ldhl	sp,#4
      00137A 2A                    4942 	ld	a, (hl+)
      00137B 5F                    4943 	ld	e, a
      00137C 56                    4944 	ld	d, (hl)
      00137D 1A                    4945 	ld	a, (de)
      00137E 4F                    4946 	ld	c, a
                                   4947 ;src/main.c:506: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      00137F CB 79                 4948 	bit	7, c
      001381 28 05                 4949 	jr	Z, 00112$
      001383 0C                    4950 	inc	c
      001384 3A                    4951 	ld	a, (hl-)
      001385 6E                    4952 	ld	l, (hl)
      001386 67                    4953 	ld	h, a
      001387 71                    4954 	ld	(hl), c
      001388                       4955 00112$:
                                   4956 ;src/main.c:509: if (abs(enemies[i].y - playerDrawY) > 8) {
      001388 F8 02                 4957 	ldhl	sp,#2
      00138A 2A                    4958 	ld	a, (hl+)
      00138B 5F                    4959 	ld	e, a
      00138C 56                    4960 	ld	d, (hl)
      00138D 1A                    4961 	ld	a, (de)
      00138E 4F                    4962 	ld	c, a
      00138F 13                    4963 	inc	de
      001390 1A                    4964 	ld	a, (de)
      001391 47                    4965 	ld	b, a
      001392 79                    4966 	ld	a, c
      001393 21rCDr00              4967 	ld	hl, #_playerDrawY
      001396 5E                    4968 	ld	e, (hl)
      001397 93                    4969 	sub	a, e
      001398 6F                    4970 	ld	l, a
                                   4971 ;	spillPairReg hl
                                   4972 ;	spillPairReg hl
                                   4973 ;src/main.c:368: if (value >= 0) return value;
      001399 CB 7D                 4974 	bit	7, l
      00139B 20 06                 4975 	jr	NZ, 00174$
      00139D 7D                    4976 	ld	a, l
      00139E F8 0E                 4977 	ldhl	sp,	#14
      0013A0 77                    4978 	ld	(hl), a
      0013A1 18 06                 4979 	jr	00176$
      0013A3                       4980 00174$:
                                   4981 ;src/main.c:369: else return - value;
      0013A3 AF                    4982 	xor	a, a
      0013A4 95                    4983 	sub	a, l
      0013A5 5F                    4984 	ld	e, a
      0013A6 F8 0E                 4985 	ldhl	sp,	#14
      0013A8 73                    4986 	ld	(hl), e
                                   4987 ;src/main.c:509: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013A9                       4988 00176$:
                                   4989 ;src/main.c:511: enemies[i].ySpeed += enemies[i].accel;
      0013A9 D1                    4990 	pop	de
      0013AA D5                    4991 	push	de
      0013AB 21 0F 00              4992 	ld	hl, #0x000f
      0013AE 19                    4993 	add	hl, de
      0013AF E5                    4994 	push	hl
      0013B0 7D                    4995 	ld	a, l
      0013B1 F8 0A                 4996 	ldhl	sp,	#10
      0013B3 77                    4997 	ld	(hl), a
      0013B4 E1                    4998 	pop	hl
      0013B5 7C                    4999 	ld	a, h
      0013B6 F8 09                 5000 	ldhl	sp,	#9
                                   5001 ;src/main.c:518: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      0013B8 32                    5002 	ld	(hl-), a
      0013B9 2A                    5003 	ld	a, (hl+)
      0013BA 5F                    5004 	ld	e, a
      0013BB 2A                    5005 	ld	a, (hl+)
      0013BC 23                    5006 	inc	hl
      0013BD 57                    5007 	ld	d, a
      0013BE 1A                    5008 	ld	a, (de)
      0013BF 77                    5009 	ld	(hl), a
                                   5010 ;src/main.c:509: if (abs(enemies[i].y - playerDrawY) > 8) {
      0013C0 F8 0E                 5011 	ldhl	sp,	#14
      0013C2 5E                    5012 	ld	e, (hl)
      0013C3 3E 08                 5013 	ld	a,#0x08
      0013C5 57                    5014 	ld	d,a
      0013C6 96                    5015 	sub	a, (hl)
      0013C7 CB 7B                 5016 	bit	7, e
      0013C9 28 07                 5017 	jr	Z, 00405$
      0013CB CB 7A                 5018 	bit	7, d
      0013CD 20 08                 5019 	jr	NZ, 00406$
      0013CF BF                    5020 	cp	a, a
      0013D0 18 05                 5021 	jr	00406$
      0013D2                       5022 00405$:
      0013D2 CB 7A                 5023 	bit	7, d
      0013D4 28 01                 5024 	jr	Z, 00406$
      0013D6 37                    5025 	scf
      0013D7                       5026 00406$:
      0013D7 30 49                 5027 	jr	NC, 00121$
                                   5028 ;src/main.c:510: if (enemies[i].y < playerDrawY) {
      0013D9 FArCDr00              5029 	ld	a, (#_playerDrawY)
      0013DC F8 0C                 5030 	ldhl	sp,	#12
      0013DE 22                    5031 	ld	(hl+), a
      0013DF 36 00                 5032 	ld	(hl), #0x00
                                   5033 ;src/main.c:498: enemies[i].xSpeed += enemies[i].accel;
      0013E1 F8 06                 5034 	ldhl	sp,#6
      0013E3 2A                    5035 	ld	a, (hl+)
      0013E4 5F                    5036 	ld	e, a
      0013E5 56                    5037 	ld	d, (hl)
      0013E6 1A                    5038 	ld	a, (de)
      0013E7 F8 0E                 5039 	ldhl	sp,	#14
                                   5040 ;src/main.c:510: if (enemies[i].y < playerDrawY) {
      0013E9 32                    5041 	ld	(hl-), a
      0013EA 2B                    5042 	dec	hl
      0013EB 79                    5043 	ld	a, c
      0013EC 96                    5044 	sub	a, (hl)
      0013ED 23                    5045 	inc	hl
      0013EE 78                    5046 	ld	a, b
      0013EF 9E                    5047 	sbc	a, (hl)
      0013F0 78                    5048 	ld	a, b
      0013F1 57                    5049 	ld	d, a
      0013F2 CB 7E                 5050 	bit	7, (hl)
      0013F4 28 07                 5051 	jr	Z, 00407$
      0013F6 CB 7A                 5052 	bit	7, d
      0013F8 20 08                 5053 	jr	NZ, 00408$
      0013FA BF                    5054 	cp	a, a
      0013FB 18 05                 5055 	jr	00408$
      0013FD                       5056 00407$:
      0013FD CB 7A                 5057 	bit	7, d
      0013FF 28 01                 5058 	jr	Z, 00408$
      001401 37                    5059 	scf
      001402                       5060 00408$:
      001402 30 0F                 5061 	jr	NC, 00114$
                                   5062 ;src/main.c:511: enemies[i].ySpeed += enemies[i].accel;
      001404 F8 0B                 5063 	ldhl	sp,	#11
      001406 7E                    5064 	ld	a, (hl)
      001407 F8 0E                 5065 	ldhl	sp,	#14
      001409 86                    5066 	add	a, (hl)
      00140A 4F                    5067 	ld	c, a
      00140B F8 08                 5068 	ldhl	sp,	#8
      00140D 2A                    5069 	ld	a,	(hl+)
      00140E 66                    5070 	ld	h, (hl)
      00140F 6F                    5071 	ld	l, a
      001410 71                    5072 	ld	(hl), c
      001411 18 41                 5073 	jr	00122$
      001413                       5074 00114$:
                                   5075 ;src/main.c:514: enemies[i].ySpeed -= enemies[i].accel;
      001413 F8 0B                 5076 	ldhl	sp,	#11
      001415 7E                    5077 	ld	a, (hl)
      001416 F8 0E                 5078 	ldhl	sp,	#14
      001418 96                    5079 	sub	a, (hl)
      001419 4F                    5080 	ld	c, a
      00141A F8 08                 5081 	ldhl	sp,	#8
      00141C 2A                    5082 	ld	a,	(hl+)
      00141D 66                    5083 	ld	h, (hl)
      00141E 6F                    5084 	ld	l, a
      00141F 71                    5085 	ld	(hl), c
      001420 18 32                 5086 	jr	00122$
      001422                       5087 00121$:
                                   5088 ;src/main.c:518: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001422 F8 0B                 5089 	ldhl	sp,	#11
      001424 5E                    5090 	ld	e, (hl)
      001425 AF                    5091 	xor	a, a
      001426 57                    5092 	ld	d, a
      001427 96                    5093 	sub	a, (hl)
      001428 CB 7B                 5094 	bit	7, e
      00142A 28 07                 5095 	jr	Z, 00409$
      00142C CB 7A                 5096 	bit	7, d
      00142E 20 08                 5097 	jr	NZ, 00410$
      001430 BF                    5098 	cp	a, a
      001431 18 05                 5099 	jr	00410$
      001433                       5100 00409$:
      001433 CB 7A                 5101 	bit	7, d
      001435 28 01                 5102 	jr	Z, 00410$
      001437 37                    5103 	scf
      001438                       5104 00410$:
      001438 30 0A                 5105 	jr	NC, 00117$
      00143A F8 0B                 5106 	ldhl	sp,	#11
      00143C 4E                    5107 	ld	c, (hl)
      00143D 0D                    5108 	dec	c
      00143E F8 08                 5109 	ldhl	sp,	#8
      001440 2A                    5110 	ld	a,	(hl+)
      001441 66                    5111 	ld	h, (hl)
      001442 6F                    5112 	ld	l, a
      001443 71                    5113 	ld	(hl), c
      001444                       5114 00117$:
      001444 F8 08                 5115 	ldhl	sp,#8
      001446 2A                    5116 	ld	a, (hl+)
      001447 5F                    5117 	ld	e, a
      001448 56                    5118 	ld	d, (hl)
      001449 1A                    5119 	ld	a, (de)
      00144A 4F                    5120 	ld	c, a
                                   5121 ;src/main.c:519: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      00144B CB 79                 5122 	bit	7, c
      00144D 28 05                 5123 	jr	Z, 00122$
      00144F 0C                    5124 	inc	c
      001450 3A                    5125 	ld	a, (hl-)
      001451 6E                    5126 	ld	l, (hl)
      001452 67                    5127 	ld	h, a
      001453 71                    5128 	ld	(hl), c
      001454                       5129 00122$:
                                   5130 ;src/main.c:523: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001454 D1                    5131 	pop	de
      001455 D5                    5132 	push	de
      001456 21 0C 00              5133 	ld	hl, #0x000c
      001459 19                    5134 	add	hl, de
      00145A E5                    5135 	push	hl
      00145B 7D                    5136 	ld	a, l
      00145C F8 0C                 5137 	ldhl	sp,	#12
      00145E 77                    5138 	ld	(hl), a
      00145F E1                    5139 	pop	hl
      001460 7C                    5140 	ld	a, h
      001461 F8 0B                 5141 	ldhl	sp,	#11
      001463 32                    5142 	ld	(hl-), a
      001464 2A                    5143 	ld	a, (hl+)
      001465 5F                    5144 	ld	e, a
      001466 2A                    5145 	ld	a, (hl+)
      001467 57                    5146 	ld	d, a
      001468 1A                    5147 	ld	a, (de)
      001469 4F                    5148 	ld	c, a
      00146A 22                    5149 	ld	(hl+), a
      00146B AF                    5150 	xor	a, a
      00146C 91                    5151 	sub	a, c
      00146D 77                    5152 	ld	(hl), a
      00146E F8 04                 5153 	ldhl	sp,#4
      001470 2A                    5154 	ld	a, (hl+)
      001471 5F                    5155 	ld	e, a
      001472 56                    5156 	ld	d, (hl)
      001473 1A                    5157 	ld	a, (de)
      001474 F8 0E                 5158 	ldhl	sp,	#14
                                   5159 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      001476 32                    5160 	ld	(hl-), a
      001477 2A                    5161 	ld	a, (hl+)
      001478 5F                    5162 	ld	e, a
      001479 56                    5163 	ld	d, (hl)
      00147A 3A                    5164 	ld	a, (hl-)
      00147B 96                    5165 	sub	a, (hl)
      00147C CB 7B                 5166 	bit	7, e
      00147E 28 07                 5167 	jr	Z, 00411$
      001480 CB 7A                 5168 	bit	7, d
      001482 20 08                 5169 	jr	NZ, 00412$
      001484 BF                    5170 	cp	a, a
      001485 18 05                 5171 	jr	00412$
      001487                       5172 00411$:
      001487 CB 7A                 5173 	bit	7, d
      001489 28 01                 5174 	jr	Z, 00412$
      00148B 37                    5175 	scf
      00148C                       5176 00412$:
      00148C 30 06                 5177 	jr	NC, 00200$
      00148E F8 0D                 5178 	ldhl	sp,	#13
      001490 2A                    5179 	ld	a, (hl+)
      001491 77                    5180 	ld	(hl), a
      001492 18 26                 5181 	jr	00201$
      001494                       5182 00200$:
      001494 F8 0E                 5183 	ldhl	sp,	#14
      001496 3A                    5184 	ld	a, (hl-)
      001497 2B                    5185 	dec	hl
      001498 5F                    5186 	ld	e, a
      001499 56                    5187 	ld	d, (hl)
      00149A 2A                    5188 	ld	a, (hl+)
      00149B 23                    5189 	inc	hl
      00149C 96                    5190 	sub	a, (hl)
      00149D CB 7B                 5191 	bit	7, e
      00149F 28 07                 5192 	jr	Z, 00413$
      0014A1 CB 7A                 5193 	bit	7, d
      0014A3 20 08                 5194 	jr	NZ, 00414$
      0014A5 BF                    5195 	cp	a, a
      0014A6 18 05                 5196 	jr	00414$
      0014A8                       5197 00413$:
      0014A8 CB 7A                 5198 	bit	7, d
      0014AA 28 01                 5199 	jr	Z, 00414$
      0014AC 37                    5200 	scf
      0014AD                       5201 00414$:
      0014AD 30 05                 5202 	jr	NC, 00202$
      0014AF F8 0C                 5203 	ldhl	sp,	#12
      0014B1 5E                    5204 	ld	e, (hl)
      0014B2 18 03                 5205 	jr	00203$
      0014B4                       5206 00202$:
      0014B4 F8 0E                 5207 	ldhl	sp,	#14
      0014B6 5E                    5208 	ld	e, (hl)
      0014B7                       5209 00203$:
      0014B7 F8 0E                 5210 	ldhl	sp,	#14
      0014B9 73                    5211 	ld	(hl), e
      0014BA                       5212 00201$:
      0014BA F8 0E                 5213 	ldhl	sp,	#14
      0014BC 4E                    5214 	ld	c, (hl)
                                   5215 ;src/main.c:523: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0014BD F8 04                 5216 	ldhl	sp,	#4
      0014BF 2A                    5217 	ld	a,	(hl+)
      0014C0 66                    5218 	ld	h, (hl)
      0014C1 6F                    5219 	ld	l, a
      0014C2 71                    5220 	ld	(hl), c
                                   5221 ;src/main.c:524: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0014C3 F8 0A                 5222 	ldhl	sp,#10
      0014C5 2A                    5223 	ld	a, (hl+)
      0014C6 5F                    5224 	ld	e, a
      0014C7 3A                    5225 	ld	a, (hl-)
      0014C8 2B                    5226 	dec	hl
      0014C9 2B                    5227 	dec	hl
      0014CA 57                    5228 	ld	d, a
      0014CB 1A                    5229 	ld	a, (de)
      0014CC 47                    5230 	ld	b, a
      0014CD 48                    5231 	ld	c, b
      0014CE AF                    5232 	xor	a, a
      0014CF 90                    5233 	sub	a, b
      0014D0 47                    5234 	ld	b, a
      0014D1 2A                    5235 	ld	a, (hl+)
      0014D2 5F                    5236 	ld	e, a
      0014D3 56                    5237 	ld	d, (hl)
      0014D4 1A                    5238 	ld	a, (de)
      0014D5 6F                    5239 	ld	l, a
                                   5240 ;	spillPairReg hl
                                   5241 ;	spillPairReg hl
                                   5242 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      0014D6 58                    5243 	ld	e, b
      0014D7 7D                    5244 	ld	a,l
      0014D8 57                    5245 	ld	d,a
      0014D9 90                    5246 	sub	a, b
      0014DA CB 7B                 5247 	bit	7, e
      0014DC 28 07                 5248 	jr	Z, 00415$
      0014DE CB 7A                 5249 	bit	7, d
      0014E0 20 08                 5250 	jr	NZ, 00416$
      0014E2 BF                    5251 	cp	a, a
      0014E3 18 05                 5252 	jr	00416$
      0014E5                       5253 00415$:
      0014E5 CB 7A                 5254 	bit	7, d
      0014E7 28 01                 5255 	jr	Z, 00416$
      0014E9 37                    5256 	scf
      0014EA                       5257 00416$:
      0014EA 30 03                 5258 	jr	NC, 00204$
      0014EC 48                    5259 	ld	c, b
      0014ED 18 17                 5260 	jr	00205$
      0014EF                       5261 00204$:
      0014EF 5D                    5262 	ld	e, l
      0014F0 79                    5263 	ld	a,c
      0014F1 57                    5264 	ld	d,a
      0014F2 95                    5265 	sub	a, l
      0014F3 CB 7B                 5266 	bit	7, e
      0014F5 28 07                 5267 	jr	Z, 00417$
      0014F7 CB 7A                 5268 	bit	7, d
      0014F9 20 08                 5269 	jr	NZ, 00418$
      0014FB BF                    5270 	cp	a, a
      0014FC 18 05                 5271 	jr	00418$
      0014FE                       5272 00417$:
      0014FE CB 7A                 5273 	bit	7, d
      001500 28 01                 5274 	jr	Z, 00418$
      001502 37                    5275 	scf
      001503                       5276 00418$:
      001503 38 01                 5277 	jr	C, 00207$
      001505 4D                    5278 	ld	c, l
      001506                       5279 00207$:
      001506                       5280 00205$:
                                   5281 ;src/main.c:524: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001506 F8 08                 5282 	ldhl	sp,	#8
      001508 2A                    5283 	ld	a,	(hl+)
      001509 66                    5284 	ld	h, (hl)
      00150A 6F                    5285 	ld	l, a
      00150B 71                    5286 	ld	(hl), c
                                   5287 ;src/main.c:527: enemies[i].xReserve += enemies[i].xSpeed;
      00150C D1                    5288 	pop	de
      00150D D5                    5289 	push	de
      00150E 21 04 00              5290 	ld	hl, #0x0004
      001511 19                    5291 	add	hl, de
      001512 E5                    5292 	push	hl
      001513 7D                    5293 	ld	a, l
      001514 F8 0E                 5294 	ldhl	sp,	#14
      001516 77                    5295 	ld	(hl), a
      001517 E1                    5296 	pop	hl
      001518 7C                    5297 	ld	a, h
      001519 F8 0D                 5298 	ldhl	sp,	#13
      00151B 32                    5299 	ld	(hl-), a
      00151C 2A                    5300 	ld	a, (hl+)
      00151D 5F                    5301 	ld	e, a
      00151E 56                    5302 	ld	d, (hl)
      00151F 1A                    5303 	ld	a, (de)
      001520 47                    5304 	ld	b, a
      001521 F8 04                 5305 	ldhl	sp,#4
      001523 2A                    5306 	ld	a, (hl+)
      001524 5F                    5307 	ld	e, a
      001525 56                    5308 	ld	d, (hl)
      001526 1A                    5309 	ld	a, (de)
      001527 80                    5310 	add	a, b
      001528 47                    5311 	ld	b, a
      001529 F8 0C                 5312 	ldhl	sp,	#12
      00152B 2A                    5313 	ld	a,	(hl+)
      00152C 66                    5314 	ld	h, (hl)
      00152D 6F                    5315 	ld	l, a
      00152E 70                    5316 	ld	(hl), b
                                   5317 ;src/main.c:528: enemies[i].yReserve += enemies[i].ySpeed;
      00152F D1                    5318 	pop	de
      001530 D5                    5319 	push	de
      001531 21 05 00              5320 	ld	hl, #0x0005
      001534 19                    5321 	add	hl, de
      001535 E5                    5322 	push	hl
      001536 7D                    5323 	ld	a, l
      001537 F8 08                 5324 	ldhl	sp,	#8
      001539 77                    5325 	ld	(hl), a
      00153A E1                    5326 	pop	hl
      00153B 7C                    5327 	ld	a, h
      00153C F8 07                 5328 	ldhl	sp,	#7
      00153E 32                    5329 	ld	(hl-), a
      00153F 2A                    5330 	ld	a, (hl+)
      001540 5F                    5331 	ld	e, a
      001541 56                    5332 	ld	d, (hl)
      001542 1A                    5333 	ld	a, (de)
      001543 81                    5334 	add	a, c
      001544 4F                    5335 	ld	c, a
      001545 3A                    5336 	ld	a, (hl-)
      001546 6E                    5337 	ld	l, (hl)
      001547 67                    5338 	ld	h, a
      001548 71                    5339 	ld	(hl), c
                                   5340 ;src/main.c:532: if (enemies[i].xReserve >> 3 > 0) {
      001549 F8 0C                 5341 	ldhl	sp,#12
      00154B 2A                    5342 	ld	a, (hl+)
      00154C 5F                    5343 	ld	e, a
      00154D 2A                    5344 	ld	a, (hl+)
      00154E 57                    5345 	ld	d, a
      00154F 1A                    5346 	ld	a, (de)
      001550 77                    5347 	ld	(hl), a
      001551 CB 28                 5348 	sra	b
      001553 CB 28                 5349 	sra	b
      001555 CB 28                 5350 	sra	b
      001557 58                    5351 	ld	e, b
      001558 AF                    5352 	xor	a, a
      001559 57                    5353 	ld	d, a
      00155A 90                    5354 	sub	a, b
      00155B CB 7B                 5355 	bit	7, e
      00155D 28 07                 5356 	jr	Z, 00419$
      00155F CB 7A                 5357 	bit	7, d
      001561 20 08                 5358 	jr	NZ, 00420$
      001563 BF                    5359 	cp	a, a
      001564 18 05                 5360 	jr	00420$
      001566                       5361 00419$:
      001566 CB 7A                 5362 	bit	7, d
      001568 28 01                 5363 	jr	Z, 00420$
      00156A 37                    5364 	scf
      00156B                       5365 00420$:
      00156B 30 36                 5366 	jr	NC, 00126$
                                   5367 ;src/main.c:533: int8_t xMovement = enemies[i].xReserve >> 3;
      00156D F8 0E                 5368 	ldhl	sp,	#14
      00156F 7E                    5369 	ld	a, (hl)
      001570 CB 2F                 5370 	sra	a
      001572 CB 2F                 5371 	sra	a
      001574 CB 2F                 5372 	sra	a
      001576 77                    5373 	ld	(hl), a
                                   5374 ;src/main.c:534: enemies[i].x += xMovement;
      001577 D1                    5375 	pop	de
      001578 D5                    5376 	push	de
      001579 1A                    5377 	ld	a, (de)
      00157A 4F                    5378 	ld	c, a
      00157B 13                    5379 	inc	de
      00157C 1A                    5380 	ld	a, (de)
      00157D 47                    5381 	ld	b, a
      00157E 7E                    5382 	ld	a, (hl)
      00157F 5F                    5383 	ld	e, a
      001580 07                    5384 	rlca
      001581 9F                    5385 	sbc	a, a
      001582 57                    5386 	ld	d, a
      001583 69                    5387 	ld	l, c
                                   5388 ;	spillPairReg hl
                                   5389 ;	spillPairReg hl
      001584 60                    5390 	ld	h, b
                                   5391 ;	spillPairReg hl
                                   5392 ;	spillPairReg hl
      001585 19                    5393 	add	hl, de
      001586 4D                    5394 	ld	c, l
      001587 44                    5395 	ld	b, h
      001588 E1                    5396 	pop	hl
      001589 E5                    5397 	push	hl
      00158A 79                    5398 	ld	a, c
      00158B 22                    5399 	ld	(hl+), a
      00158C 70                    5400 	ld	(hl), b
                                   5401 ;src/main.c:535: enemies[i].xReserve -=  xMovement << 3;
      00158D F8 0C                 5402 	ldhl	sp,#12
      00158F 2A                    5403 	ld	a, (hl+)
      001590 5F                    5404 	ld	e, a
      001591 2A                    5405 	ld	a, (hl+)
      001592 57                    5406 	ld	d, a
      001593 1A                    5407 	ld	a, (de)
      001594 F5                    5408 	push	af
      001595 3A                    5409 	ld	a, (hl-)
      001596 87                    5410 	add	a, a
      001597 87                    5411 	add	a, a
      001598 87                    5412 	add	a, a
      001599 4F                    5413 	ld	c, a
      00159A F1                    5414 	pop	af
      00159B 91                    5415 	sub	a, c
      00159C 4F                    5416 	ld	c, a
      00159D 3A                    5417 	ld	a, (hl-)
      00159E 6E                    5418 	ld	l, (hl)
      00159F 67                    5419 	ld	h, a
      0015A0 71                    5420 	ld	(hl), c
      0015A1 18 60                 5421 	jr	00127$
      0015A3                       5422 00126$:
                                   5423 ;src/main.c:538: else if ((-enemies[i].xReserve) >> 3 > 0){
      0015A3 F8 0E                 5424 	ldhl	sp,	#14
      0015A5 7E                    5425 	ld	a, (hl)
      0015A6 4F                    5426 	ld	c, a
      0015A7 07                    5427 	rlca
      0015A8 9F                    5428 	sbc	a, a
      0015A9 47                    5429 	ld	b, a
      0015AA AF                    5430 	xor	a, a
      0015AB 91                    5431 	sub	a, c
      0015AC 4F                    5432 	ld	c, a
      0015AD 9F                    5433 	sbc	a, a
      0015AE 90                    5434 	sub	a, b
      0015AF 47                    5435 	ld	b, a
      0015B0 CB 28                 5436 	sra	b
      0015B2 CB 19                 5437 	rr	c
      0015B4 CB 28                 5438 	sra	b
      0015B6 CB 19                 5439 	rr	c
      0015B8 CB 28                 5440 	sra	b
      0015BA CB 19                 5441 	rr	c
      0015BC 58                    5442 	ld	e, b
      0015BD AF                    5443 	xor	a, a
      0015BE 57                    5444 	ld	d, a
      0015BF B9                    5445 	cp	a, c
      0015C0 98                    5446 	sbc	a, b
      0015C1 CB 7B                 5447 	bit	7, e
      0015C3 28 07                 5448 	jr	Z, 00421$
      0015C5 CB 7A                 5449 	bit	7, d
      0015C7 20 08                 5450 	jr	NZ, 00422$
      0015C9 BF                    5451 	cp	a, a
      0015CA 18 05                 5452 	jr	00422$
      0015CC                       5453 00421$:
      0015CC CB 7A                 5454 	bit	7, d
      0015CE 28 01                 5455 	jr	Z, 00422$
      0015D0 37                    5456 	scf
      0015D1                       5457 00422$:
      0015D1 30 30                 5458 	jr	NC, 00127$
                                   5459 ;src/main.c:539: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      0015D3 AF                    5460 	xor	a, a
      0015D4 91                    5461 	sub	a, c
      0015D5 4F                    5462 	ld	c, a
      0015D6 F8 0E                 5463 	ldhl	sp,	#14
      0015D8 71                    5464 	ld	(hl), c
                                   5465 ;src/main.c:540: enemies[i].x += xMovement;
      0015D9 D1                    5466 	pop	de
      0015DA D5                    5467 	push	de
      0015DB 1A                    5468 	ld	a, (de)
      0015DC 4F                    5469 	ld	c, a
      0015DD 13                    5470 	inc	de
      0015DE 1A                    5471 	ld	a, (de)
      0015DF 47                    5472 	ld	b, a
      0015E0 7E                    5473 	ld	a, (hl)
      0015E1 5F                    5474 	ld	e, a
      0015E2 07                    5475 	rlca
      0015E3 9F                    5476 	sbc	a, a
      0015E4 57                    5477 	ld	d, a
      0015E5 69                    5478 	ld	l, c
                                   5479 ;	spillPairReg hl
                                   5480 ;	spillPairReg hl
      0015E6 60                    5481 	ld	h, b
                                   5482 ;	spillPairReg hl
                                   5483 ;	spillPairReg hl
      0015E7 19                    5484 	add	hl, de
      0015E8 4D                    5485 	ld	c, l
      0015E9 44                    5486 	ld	b, h
      0015EA E1                    5487 	pop	hl
      0015EB E5                    5488 	push	hl
      0015EC 79                    5489 	ld	a, c
      0015ED 22                    5490 	ld	(hl+), a
      0015EE 70                    5491 	ld	(hl), b
                                   5492 ;src/main.c:541: enemies[i].xReserve +=  (-xMovement) << 3;
      0015EF F8 0C                 5493 	ldhl	sp,#12
      0015F1 2A                    5494 	ld	a, (hl+)
      0015F2 5F                    5495 	ld	e, a
      0015F3 2A                    5496 	ld	a, (hl+)
      0015F4 57                    5497 	ld	d, a
      0015F5 1A                    5498 	ld	a, (de)
      0015F6 4F                    5499 	ld	c, a
      0015F7 AF                    5500 	xor	a, a
      0015F8 96                    5501 	sub	a, (hl)
      0015F9 2B                    5502 	dec	hl
      0015FA 87                    5503 	add	a, a
      0015FB 87                    5504 	add	a, a
      0015FC 87                    5505 	add	a, a
      0015FD 81                    5506 	add	a, c
      0015FE 4F                    5507 	ld	c, a
      0015FF 3A                    5508 	ld	a, (hl-)
      001600 6E                    5509 	ld	l, (hl)
      001601 67                    5510 	ld	h, a
      001602 71                    5511 	ld	(hl), c
      001603                       5512 00127$:
                                   5513 ;src/main.c:528: enemies[i].yReserve += enemies[i].ySpeed;
      001603 F8 06                 5514 	ldhl	sp,#6
      001605 2A                    5515 	ld	a, (hl+)
      001606 5F                    5516 	ld	e, a
      001607 56                    5517 	ld	d, (hl)
      001608 1A                    5518 	ld	a, (de)
      001609 F8 0D                 5519 	ldhl	sp,	#13
      00160B 77                    5520 	ld	(hl), a
                                   5521 ;src/main.c:544: if (enemies[i].yReserve >> 3 > 0) {
      00160C 2A                    5522 	ld	a, (hl+)
      00160D CB 2F                 5523 	sra	a
      00160F CB 2F                 5524 	sra	a
      001611 CB 2F                 5525 	sra	a
      001613 77                    5526 	ld	(hl), a
      001614 5E                    5527 	ld	e, (hl)
      001615 AF                    5528 	xor	a, a
      001616 57                    5529 	ld	d, a
      001617 96                    5530 	sub	a, (hl)
      001618 CB 7B                 5531 	bit	7, e
      00161A 28 07                 5532 	jr	Z, 00423$
      00161C CB 7A                 5533 	bit	7, d
      00161E 20 08                 5534 	jr	NZ, 00424$
      001620 BF                    5535 	cp	a, a
      001621 18 05                 5536 	jr	00424$
      001623                       5537 00423$:
      001623 CB 7A                 5538 	bit	7, d
      001625 28 01                 5539 	jr	Z, 00424$
      001627 37                    5540 	scf
      001628                       5541 00424$:
      001628 30 59                 5542 	jr	NC, 00131$
                                   5543 ;src/main.c:545: int8_t yMovement = enemies[i].yReserve >> 3;
      00162A F8 0E                 5544 	ldhl	sp,	#14
      00162C 7E                    5545 	ld	a, (hl)
      00162D F8 08                 5546 	ldhl	sp,	#8
      00162F 77                    5547 	ld	(hl), a
                                   5548 ;src/main.c:546: enemies[i].y += yMovement;
      001630 F8 02                 5549 	ldhl	sp,#2
      001632 2A                    5550 	ld	a, (hl+)
      001633 5F                    5551 	ld	e, a
      001634 56                    5552 	ld	d, (hl)
      001635 1A                    5553 	ld	a, (de)
      001636 F8 0D                 5554 	ldhl	sp,	#13
      001638 22                    5555 	ld	(hl+), a
      001639 13                    5556 	inc	de
      00163A 1A                    5557 	ld	a, (de)
      00163B 77                    5558 	ld	(hl), a
      00163C F8 08                 5559 	ldhl	sp,	#8
      00163E 2A                    5560 	ld	a, (hl+)
      00163F 22                    5561 	ld	(hl+), a
      001640 07                    5562 	rlca
      001641 9F                    5563 	sbc	a, a
      001642 77                    5564 	ld	(hl), a
      001643 F8 0D                 5565 	ldhl	sp,	#13
      001645 3A                    5566 	ld	a, (hl-)
      001646 2B                    5567 	dec	hl
      001647 77                    5568 	ld	(hl), a
      001648 F8 0E                 5569 	ldhl	sp,	#14
      00164A 3A                    5570 	ld	a, (hl-)
      00164B 2B                    5571 	dec	hl
      00164C 32                    5572 	ld	(hl-), a
      00164D 2A                    5573 	ld	a, (hl+)
      00164E 5F                    5574 	ld	e, a
      00164F 56                    5575 	ld	d, (hl)
      001650 F8 09                 5576 	ldhl	sp,	#9
      001652 2A                    5577 	ld	a,	(hl+)
      001653 66                    5578 	ld	h, (hl)
      001654 6F                    5579 	ld	l, a
      001655 19                    5580 	add	hl, de
      001656 E5                    5581 	push	hl
      001657 7D                    5582 	ld	a, l
      001658 F8 0F                 5583 	ldhl	sp,	#15
      00165A 77                    5584 	ld	(hl), a
      00165B E1                    5585 	pop	hl
      00165C 7C                    5586 	ld	a, h
      00165D F8 0E                 5587 	ldhl	sp,	#14
      00165F 77                    5588 	ld	(hl), a
      001660 F8 02                 5589 	ldhl	sp,#2
      001662 2A                    5590 	ld	a, (hl+)
      001663 5F                    5591 	ld	e, a
      001664 56                    5592 	ld	d, (hl)
      001665 F8 0D                 5593 	ldhl	sp,	#13
      001667 2A                    5594 	ld	a, (hl+)
      001668 12                    5595 	ld	(de), a
      001669 13                    5596 	inc	de
      00166A 7E                    5597 	ld	a, (hl)
      00166B 12                    5598 	ld	(de), a
                                   5599 ;src/main.c:547: enemies[i].yReserve -=  yMovement << 3;
      00166C F8 06                 5600 	ldhl	sp,#6
      00166E 2A                    5601 	ld	a, (hl+)
      00166F 5F                    5602 	ld	e, a
      001670 2A                    5603 	ld	a, (hl+)
      001671 57                    5604 	ld	d, a
      001672 1A                    5605 	ld	a, (de)
      001673 F5                    5606 	push	af
      001674 3A                    5607 	ld	a, (hl-)
      001675 87                    5608 	add	a, a
      001676 87                    5609 	add	a, a
      001677 87                    5610 	add	a, a
      001678 4F                    5611 	ld	c, a
      001679 F1                    5612 	pop	af
      00167A 91                    5613 	sub	a, c
      00167B 4F                    5614 	ld	c, a
      00167C 3A                    5615 	ld	a, (hl-)
      00167D 6E                    5616 	ld	l, (hl)
      00167E 67                    5617 	ld	h, a
      00167F 71                    5618 	ld	(hl), c
      001680 C3r23r17              5619 	jp	00132$
      001683                       5620 00131$:
                                   5621 ;src/main.c:549: else if ((-enemies[i].yReserve) >> 3 > 0){
      001683 F8 0D                 5622 	ldhl	sp,	#13
      001685 7E                    5623 	ld	a, (hl)
      001686 F8 0A                 5624 	ldhl	sp,	#10
      001688 22                    5625 	ld	(hl+), a
      001689 07                    5626 	rlca
      00168A 9F                    5627 	sbc	a, a
      00168B 77                    5628 	ld	(hl), a
      00168C 11 00 00              5629 	ld	de, #0x0000
      00168F 3A                    5630 	ld	a, (hl-)
      001690 6E                    5631 	ld	l, (hl)
      001691 67                    5632 	ld	h, a
      001692 7B                    5633 	ld	a, e
      001693 95                    5634 	sub	a, l
      001694 5F                    5635 	ld	e, a
      001695 7A                    5636 	ld	a, d
      001696 9C                    5637 	sbc	a, h
      001697 F8 0E                 5638 	ldhl	sp,	#14
      001699 32                    5639 	ld	(hl-), a
      00169A 7B                    5640 	ld	a, e
      00169B 22                    5641 	ld	(hl+), a
      00169C CB 2E                 5642 	sra	(hl)
      00169E 2B                    5643 	dec	hl
      00169F CB 1E                 5644 	rr	(hl)
      0016A1 23                    5645 	inc	hl
      0016A2 CB 2E                 5646 	sra	(hl)
      0016A4 2B                    5647 	dec	hl
      0016A5 CB 1E                 5648 	rr	(hl)
      0016A7 23                    5649 	inc	hl
      0016A8 CB 2E                 5650 	sra	(hl)
      0016AA 2B                    5651 	dec	hl
      0016AB CB 1E                 5652 	rr	(hl)
      0016AD AF                    5653 	xor	a, a
      0016AE 96                    5654 	sub	a, (hl)
      0016AF 23                    5655 	inc	hl
      0016B0 3E 00                 5656 	ld	a, #0x00
      0016B2 9E                    5657 	sbc	a, (hl)
      0016B3 3E 00                 5658 	ld	a, #0x00
      0016B5 57                    5659 	ld	d, a
      0016B6 CB 7E                 5660 	bit	7, (hl)
      0016B8 28 07                 5661 	jr	Z, 00425$
      0016BA CB 7A                 5662 	bit	7, d
      0016BC 20 08                 5663 	jr	NZ, 00426$
      0016BE BF                    5664 	cp	a, a
      0016BF 18 05                 5665 	jr	00426$
      0016C1                       5666 00425$:
      0016C1 CB 7A                 5667 	bit	7, d
      0016C3 28 01                 5668 	jr	Z, 00426$
      0016C5 37                    5669 	scf
      0016C6                       5670 00426$:
      0016C6 30 5B                 5671 	jr	NC, 00132$
                                   5672 ;src/main.c:550: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0016C8 F8 0D                 5673 	ldhl	sp,	#13
      0016CA 2A                    5674 	ld	a, (hl+)
      0016CB 4F                    5675 	ld	c, a
      0016CC AF                    5676 	xor	a, a
      0016CD 91                    5677 	sub	a, c
      0016CE 77                    5678 	ld	(hl), a
      0016CF 7E                    5679 	ld	a, (hl)
      0016D0 F8 08                 5680 	ldhl	sp,	#8
      0016D2 77                    5681 	ld	(hl), a
                                   5682 ;src/main.c:551: enemies[i].y += yMovement;
      0016D3 F8 02                 5683 	ldhl	sp,#2
      0016D5 2A                    5684 	ld	a, (hl+)
      0016D6 5F                    5685 	ld	e, a
      0016D7 56                    5686 	ld	d, (hl)
      0016D8 1A                    5687 	ld	a, (de)
      0016D9 F8 0D                 5688 	ldhl	sp,	#13
      0016DB 22                    5689 	ld	(hl+), a
      0016DC 13                    5690 	inc	de
      0016DD 1A                    5691 	ld	a, (de)
      0016DE 77                    5692 	ld	(hl), a
      0016DF F8 08                 5693 	ldhl	sp,	#8
      0016E1 2A                    5694 	ld	a, (hl+)
      0016E2 22                    5695 	ld	(hl+), a
      0016E3 07                    5696 	rlca
      0016E4 9F                    5697 	sbc	a, a
      0016E5 77                    5698 	ld	(hl), a
      0016E6 F8 0D                 5699 	ldhl	sp,	#13
      0016E8 3A                    5700 	ld	a, (hl-)
      0016E9 2B                    5701 	dec	hl
      0016EA 77                    5702 	ld	(hl), a
      0016EB F8 0E                 5703 	ldhl	sp,	#14
      0016ED 3A                    5704 	ld	a, (hl-)
      0016EE 2B                    5705 	dec	hl
      0016EF 32                    5706 	ld	(hl-), a
      0016F0 2A                    5707 	ld	a, (hl+)
      0016F1 5F                    5708 	ld	e, a
      0016F2 56                    5709 	ld	d, (hl)
      0016F3 F8 09                 5710 	ldhl	sp,	#9
      0016F5 2A                    5711 	ld	a,	(hl+)
      0016F6 66                    5712 	ld	h, (hl)
      0016F7 6F                    5713 	ld	l, a
      0016F8 19                    5714 	add	hl, de
      0016F9 E5                    5715 	push	hl
      0016FA 7D                    5716 	ld	a, l
      0016FB F8 0F                 5717 	ldhl	sp,	#15
      0016FD 77                    5718 	ld	(hl), a
      0016FE E1                    5719 	pop	hl
      0016FF 7C                    5720 	ld	a, h
      001700 F8 0E                 5721 	ldhl	sp,	#14
      001702 77                    5722 	ld	(hl), a
      001703 F8 02                 5723 	ldhl	sp,#2
      001705 2A                    5724 	ld	a, (hl+)
      001706 5F                    5725 	ld	e, a
      001707 56                    5726 	ld	d, (hl)
      001708 F8 0D                 5727 	ldhl	sp,	#13
      00170A 2A                    5728 	ld	a, (hl+)
      00170B 12                    5729 	ld	(de), a
      00170C 13                    5730 	inc	de
      00170D 7E                    5731 	ld	a, (hl)
      00170E 12                    5732 	ld	(de), a
                                   5733 ;src/main.c:552: enemies[i].yReserve +=  (-yMovement) << 3;
      00170F F8 06                 5734 	ldhl	sp,#6
      001711 2A                    5735 	ld	a, (hl+)
      001712 5F                    5736 	ld	e, a
      001713 2A                    5737 	ld	a, (hl+)
      001714 57                    5738 	ld	d, a
      001715 1A                    5739 	ld	a, (de)
      001716 4F                    5740 	ld	c, a
      001717 AF                    5741 	xor	a, a
      001718 96                    5742 	sub	a, (hl)
      001719 2B                    5743 	dec	hl
      00171A 87                    5744 	add	a, a
      00171B 87                    5745 	add	a, a
      00171C 87                    5746 	add	a, a
      00171D 81                    5747 	add	a, c
      00171E 4F                    5748 	ld	c, a
      00171F 3A                    5749 	ld	a, (hl-)
      001720 6E                    5750 	ld	l, (hl)
      001721 67                    5751 	ld	h, a
      001722 71                    5752 	ld	(hl), c
      001723                       5753 00132$:
                                   5754 ;src/main.c:557: if (auxTick == 1) {
      001723 FArF0r00              5755 	ld	a, (#_auxTick)
      001726 3D                    5756 	dec	a
      001727 C2r6Ar18              5757 	jp	NZ,00144$
                                   5758 ;src/main.c:559: if (enemies[i].spriteCount == 1) {
      00172A D1                    5759 	pop	de
      00172B D5                    5760 	push	de
      00172C 21 08 00              5761 	ld	hl, #0x0008
      00172F 19                    5762 	add	hl, de
      001730 4D                    5763 	ld	c, l
      001731 44                    5764 	ld	b, h
      001732 0A                    5765 	ld	a, (bc)
      001733 47                    5766 	ld	b, a
                                   5767 ;src/main.c:560: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      001734 F8 0F                 5768 	ldhl	sp,	#15
      001736 3A                    5769 	ld	a, (hl-)
      001737 87                    5770 	add	a, a
      001738 4F                    5771 	ld	c, a
      001739 C6 0A                 5772 	add	a, #0x0a
      00173B 77                    5773 	ld	(hl), a
                                   5774 ;src/main.c:559: if (enemies[i].spriteCount == 1) {
      00173C 05                    5775 	dec	b
      00173D 20 51                 5776 	jr	NZ, 00140$
                                   5777 ;src/main.c:560: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00173F F8 02                 5778 	ldhl	sp,#2
      001741 2A                    5779 	ld	a, (hl+)
      001742 5F                    5780 	ld	e, a
      001743 56                    5781 	ld	d, (hl)
      001744 1A                    5782 	ld	a, (de)
      001745 C6 0C                 5783 	add	a, #0x0c
      001747 4F                    5784 	ld	c, a
      001748 D1                    5785 	pop	de
      001749 D5                    5786 	push	de
      00174A 1A                    5787 	ld	a, (de)
      00174B C6 04                 5788 	add	a, #0x04
      00174D 5F                    5789 	ld	e, a
      00174E F8 0E                 5790 	ldhl	sp,	#14
                                   5791 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001750 6E                    5792 	ld	l, (hl)
                                   5793 ;	spillPairReg hl
                                   5794 ;	spillPairReg hl
      001751 26 00                 5795 	ld	h, #0x00
                                   5796 ;	spillPairReg hl
                                   5797 ;	spillPairReg hl
      001753 29                    5798 	add	hl, hl
      001754 29                    5799 	add	hl, hl
      001755 D5                    5800 	push	de
      001756 11r00r00              5801 	ld	de, #_shadow_OAM
      001759 19                    5802 	add	hl, de
      00175A D1                    5803 	pop	de
                                   5804 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00175B 79                    5805 	ld	a, c
      00175C 22                    5806 	ld	(hl+), a
      00175D 73                    5807 	ld	(hl), e
                                   5808 ;src/main.c:561: if (enemies[i].xSpeed >= 0) {
      00175E F8 04                 5809 	ldhl	sp,#4
      001760 2A                    5810 	ld	a, (hl+)
      001761 5F                    5811 	ld	e, a
      001762 56                    5812 	ld	d, (hl)
      001763 1A                    5813 	ld	a, (de)
      001764 CB 7F                 5814 	bit	7,a
      001766 20 14                 5815 	jr	NZ, 00134$
                                   5816 ;src/main.c:562: set_sprite_prop(10+(i<<1), 0);
      001768 F8 0E                 5817 	ldhl	sp,	#14
      00176A 4E                    5818 	ld	c, (hl)
                                   5819 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00176B 26 00                 5820 	ld	h, #0x00
                                   5821 ;	spillPairReg hl
                                   5822 ;	spillPairReg hl
      00176D 69                    5823 	ld	l, c
      00176E 29                    5824 	add	hl, hl
      00176F 29                    5825 	add	hl, hl
      001770 11r00r00              5826 	ld	de, #_shadow_OAM
      001773 19                    5827 	add	hl, de
      001774 23                    5828 	inc	hl
      001775 23                    5829 	inc	hl
      001776 23                    5830 	inc	hl
      001777 36 00                 5831 	ld	(hl), #0x00
                                   5832 ;src/main.c:562: set_sprite_prop(10+(i<<1), 0);
      001779 C3r6Ar18              5833 	jp	00144$
      00177C                       5834 00134$:
                                   5835 ;src/main.c:565: set_sprite_prop(10+(i<<1), S_FLIPX);
      00177C F8 0E                 5836 	ldhl	sp,	#14
      00177E 4E                    5837 	ld	c, (hl)
                                   5838 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00177F 26 00                 5839 	ld	h, #0x00
                                   5840 ;	spillPairReg hl
                                   5841 ;	spillPairReg hl
      001781 69                    5842 	ld	l, c
      001782 29                    5843 	add	hl, hl
      001783 29                    5844 	add	hl, hl
      001784 11r00r00              5845 	ld	de, #_shadow_OAM
      001787 19                    5846 	add	hl, de
      001788 23                    5847 	inc	hl
      001789 23                    5848 	inc	hl
      00178A 23                    5849 	inc	hl
      00178B 36 20                 5850 	ld	(hl), #0x20
                                   5851 ;src/main.c:565: set_sprite_prop(10+(i<<1), S_FLIPX);
      00178D C3r6Ar18              5852 	jp	00144$
      001790                       5853 00140$:
                                   5854 ;src/main.c:570: if (enemies[i].xSpeed >= 0) {
      001790 F8 04                 5855 	ldhl	sp,#4
      001792 2A                    5856 	ld	a, (hl+)
      001793 5F                    5857 	ld	e, a
      001794 56                    5858 	ld	d, (hl)
      001795 1A                    5859 	ld	a, (de)
      001796 CB 7F                 5860 	bit	7,a
      001798 20 6C                 5861 	jr	NZ, 00137$
                                   5862 ;src/main.c:571: set_sprite_prop(10+(i<<1), 0);
      00179A F8 0E                 5863 	ldhl	sp,	#14
      00179C 46                    5864 	ld	b, (hl)
                                   5865 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00179D 26 00                 5866 	ld	h, #0x00
                                   5867 ;	spillPairReg hl
                                   5868 ;	spillPairReg hl
      00179F 68                    5869 	ld	l, b
      0017A0 29                    5870 	add	hl, hl
      0017A1 29                    5871 	add	hl, hl
      0017A2 11r00r00              5872 	ld	de, #_shadow_OAM
      0017A5 19                    5873 	add	hl, de
      0017A6 23                    5874 	inc	hl
      0017A7 23                    5875 	inc	hl
      0017A8 23                    5876 	inc	hl
      0017A9 36 00                 5877 	ld	(hl), #0x00
                                   5878 ;src/main.c:572: set_sprite_prop(10+(i<<1)+1, 0);
      0017AB 79                    5879 	ld	a, c
      0017AC C6 0B                 5880 	add	a, #0x0b
      0017AE 4F                    5881 	ld	c, a
                                   5882 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0017AF 69                    5883 	ld	l, c
                                   5884 ;	spillPairReg hl
                                   5885 ;	spillPairReg hl
      0017B0 26 00                 5886 	ld	h, #0x00
                                   5887 ;	spillPairReg hl
                                   5888 ;	spillPairReg hl
      0017B2 29                    5889 	add	hl, hl
      0017B3 29                    5890 	add	hl, hl
      0017B4 11r00r00              5891 	ld	de, #_shadow_OAM
      0017B7 19                    5892 	add	hl, de
      0017B8 23                    5893 	inc	hl
      0017B9 23                    5894 	inc	hl
      0017BA 23                    5895 	inc	hl
      0017BB 36 00                 5896 	ld	(hl), #0x00
                                   5897 ;src/main.c:573: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      0017BD F8 02                 5898 	ldhl	sp,#2
      0017BF 2A                    5899 	ld	a, (hl+)
      0017C0 5F                    5900 	ld	e, a
      0017C1 56                    5901 	ld	d, (hl)
      0017C2 1A                    5902 	ld	a, (de)
      0017C3 C6 08                 5903 	add	a, #0x08
      0017C5 F8 0C                 5904 	ldhl	sp,	#12
      0017C7 22                    5905 	ld	(hl+), a
      0017C8 D1                    5906 	pop	de
      0017C9 D5                    5907 	push	de
      0017CA 1A                    5908 	ld	a, (de)
      0017CB 22                    5909 	ld	(hl+), a
      0017CC 46                    5910 	ld	b, (hl)
                                   5911 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017CD 11r00r00              5912 	ld	de, #_shadow_OAM+0
      0017D0 26 00                 5913 	ld	h, #0x00
                                   5914 ;	spillPairReg hl
                                   5915 ;	spillPairReg hl
      0017D2 68                    5916 	ld	l, b
      0017D3 29                    5917 	add	hl, hl
      0017D4 29                    5918 	add	hl, hl
      0017D5 19                    5919 	add	hl, de
      0017D6 5D                    5920 	ld	e, l
      0017D7 54                    5921 	ld	d, h
                                   5922 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017D8 F8 0C                 5923 	ldhl	sp,	#12
      0017DA 2A                    5924 	ld	a, (hl+)
      0017DB 12                    5925 	ld	(de), a
      0017DC 13                    5926 	inc	de
      0017DD 7E                    5927 	ld	a, (hl)
      0017DE 12                    5928 	ld	(de), a
                                   5929 ;src/main.c:574: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      0017DF F8 02                 5930 	ldhl	sp,#2
      0017E1 2A                    5931 	ld	a, (hl+)
      0017E2 5F                    5932 	ld	e, a
      0017E3 56                    5933 	ld	d, (hl)
      0017E4 1A                    5934 	ld	a, (de)
      0017E5 C6 08                 5935 	add	a, #0x08
      0017E7 F8 0E                 5936 	ldhl	sp,	#14
      0017E9 77                    5937 	ld	(hl), a
      0017EA D1                    5938 	pop	de
      0017EB D5                    5939 	push	de
      0017EC 1A                    5940 	ld	a, (de)
      0017ED C6 08                 5941 	add	a, #0x08
      0017EF 5F                    5942 	ld	e, a
                                   5943 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0017F0 26 00                 5944 	ld	h, #0x00
                                   5945 ;	spillPairReg hl
                                   5946 ;	spillPairReg hl
      0017F2 69                    5947 	ld	l, c
      0017F3 29                    5948 	add	hl, hl
      0017F4 29                    5949 	add	hl, hl
      0017F5 7D                    5950 	ld	a, l
      0017F6 C6r00                 5951 	add	a, #<(_shadow_OAM)
      0017F8 4F                    5952 	ld	c, a
      0017F9 7C                    5953 	ld	a, h
      0017FA CEs00                 5954 	adc	a, #>(_shadow_OAM)
      0017FC 47                    5955 	ld	b, a
                                   5956 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0017FD F8 0E                 5957 	ldhl	sp,	#14
      0017FF 7E                    5958 	ld	a, (hl)
      001800 02                    5959 	ld	(bc), a
      001801 03                    5960 	inc	bc
      001802 7B                    5961 	ld	a, e
      001803 02                    5962 	ld	(bc), a
                                   5963 ;src/main.c:574: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001804 18 64                 5964 	jr	00144$
      001806                       5965 00137$:
                                   5966 ;src/main.c:577: set_sprite_prop(10+(i<<1), S_FLIPX);
      001806 F8 0E                 5967 	ldhl	sp,	#14
                                   5968 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001808 6E                    5969 	ld	l, (hl)
                                   5970 ;	spillPairReg hl
                                   5971 ;	spillPairReg hl
      001809 26 00                 5972 	ld	h, #0x00
                                   5973 ;	spillPairReg hl
                                   5974 ;	spillPairReg hl
      00180B 29                    5975 	add	hl, hl
      00180C 29                    5976 	add	hl, hl
      00180D 11r00r00              5977 	ld	de, #_shadow_OAM
      001810 19                    5978 	add	hl, de
      001811 23                    5979 	inc	hl
      001812 23                    5980 	inc	hl
      001813 23                    5981 	inc	hl
      001814 36 20                 5982 	ld	(hl), #0x20
                                   5983 ;src/main.c:578: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001816 79                    5984 	ld	a, c
      001817 C6 0B                 5985 	add	a, #0x0b
      001819 F8 0D                 5986 	ldhl	sp,	#13
      00181B 77                    5987 	ld	(hl), a
      00181C 4E                    5988 	ld	c, (hl)
                                   5989 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00181D 26 00                 5990 	ld	h, #0x00
                                   5991 ;	spillPairReg hl
                                   5992 ;	spillPairReg hl
      00181F 69                    5993 	ld	l, c
      001820 29                    5994 	add	hl, hl
      001821 29                    5995 	add	hl, hl
      001822 11r00r00              5996 	ld	de, #_shadow_OAM
      001825 19                    5997 	add	hl, de
      001826 23                    5998 	inc	hl
      001827 23                    5999 	inc	hl
      001828 23                    6000 	inc	hl
      001829 36 20                 6001 	ld	(hl), #0x20
                                   6002 ;src/main.c:579: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      00182B F8 02                 6003 	ldhl	sp,#2
      00182D 2A                    6004 	ld	a, (hl+)
      00182E 5F                    6005 	ld	e, a
      00182F 56                    6006 	ld	d, (hl)
      001830 1A                    6007 	ld	a, (de)
      001831 C6 08                 6008 	add	a, #0x08
      001833 4F                    6009 	ld	c, a
      001834 D1                    6010 	pop	de
      001835 D5                    6011 	push	de
      001836 1A                    6012 	ld	a, (de)
      001837 C6 08                 6013 	add	a, #0x08
      001839 5F                    6014 	ld	e, a
      00183A F8 0E                 6015 	ldhl	sp,	#14
                                   6016 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00183C 6E                    6017 	ld	l, (hl)
                                   6018 ;	spillPairReg hl
                                   6019 ;	spillPairReg hl
      00183D 26 00                 6020 	ld	h, #0x00
                                   6021 ;	spillPairReg hl
                                   6022 ;	spillPairReg hl
      00183F 29                    6023 	add	hl, hl
      001840 29                    6024 	add	hl, hl
      001841 D5                    6025 	push	de
      001842 11r00r00              6026 	ld	de, #_shadow_OAM
      001845 19                    6027 	add	hl, de
      001846 D1                    6028 	pop	de
                                   6029 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001847 79                    6030 	ld	a, c
      001848 22                    6031 	ld	(hl+), a
      001849 73                    6032 	ld	(hl), e
                                   6033 ;src/main.c:580: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00184A F8 02                 6034 	ldhl	sp,#2
      00184C 2A                    6035 	ld	a, (hl+)
      00184D 5F                    6036 	ld	e, a
      00184E 56                    6037 	ld	d, (hl)
      00184F 1A                    6038 	ld	a, (de)
      001850 C6 08                 6039 	add	a, #0x08
      001852 4F                    6040 	ld	c, a
      001853 D1                    6041 	pop	de
      001854 D5                    6042 	push	de
      001855 1A                    6043 	ld	a, (de)
      001856 F8 0E                 6044 	ldhl	sp,	#14
      001858 32                    6045 	ld	(hl-), a
                                   6046 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001859 6E                    6047 	ld	l, (hl)
                                   6048 ;	spillPairReg hl
                                   6049 ;	spillPairReg hl
      00185A 26 00                 6050 	ld	h, #0x00
                                   6051 ;	spillPairReg hl
                                   6052 ;	spillPairReg hl
      00185C 29                    6053 	add	hl, hl
      00185D 29                    6054 	add	hl, hl
      00185E 11r00r00              6055 	ld	de, #_shadow_OAM
      001861 19                    6056 	add	hl, de
                                   6057 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001862 79                    6058 	ld	a, c
      001863 22                    6059 	ld	(hl+), a
      001864 4D                    6060 	ld	c, l
      001865 44                    6061 	ld	b, h
      001866 F8 0E                 6062 	ldhl	sp,	#14
      001868 7E                    6063 	ld	a, (hl)
      001869 02                    6064 	ld	(bc), a
                                   6065 ;src/main.c:580: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00186A                       6066 00144$:
                                   6067 ;src/main.c:488: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00186A F8 0F                 6068 	ldhl	sp,	#15
      00186C 34                    6069 	inc	(hl)
      00186D C3r4Er12              6070 	jp	00197$
      001870                       6071 00145$:
                                   6072 ;src/main.c:590: uint8_t i = enemyCollisionCount;
      001870 FArD6r00              6073 	ld	a, (#_enemyCollisionCount)
      001873 F8 01                 6074 	ldhl	sp,	#1
      001875 77                    6075 	ld	(hl), a
                                   6076 ;src/main.c:592: if (enemies[i].alive) {
      001876 4E                    6077 	ld	c, (hl)
      001877 06 00                 6078 	ld	b, #0x00
      001879 69                    6079 	ld	l, c
      00187A 60                    6080 	ld	h, b
      00187B 29                    6081 	add	hl, hl
      00187C 29                    6082 	add	hl, hl
      00187D 29                    6083 	add	hl, hl
      00187E 09                    6084 	add	hl, bc
      00187F 29                    6085 	add	hl, hl
      001880 01r5Ar00              6086 	ld	bc,#_enemies
      001883 09                    6087 	add	hl,bc
      001884 E5                    6088 	push	hl
      001885 7D                    6089 	ld	a, l
      001886 F8 04                 6090 	ldhl	sp,	#4
      001888 77                    6091 	ld	(hl), a
      001889 E1                    6092 	pop	hl
      00188A 7C                    6093 	ld	a, h
      00188B F8 03                 6094 	ldhl	sp,	#3
      00188D 32                    6095 	ld	(hl-), a
      00188E 2A                    6096 	ld	a, (hl+)
      00188F 5F                    6097 	ld	e, a
      001890 56                    6098 	ld	d, (hl)
      001891 21 09 00              6099 	ld	hl, #0x0009
      001894 19                    6100 	add	hl, de
      001895 E5                    6101 	push	hl
      001896 7D                    6102 	ld	a, l
      001897 F8 06                 6103 	ldhl	sp,	#6
      001899 77                    6104 	ld	(hl), a
      00189A E1                    6105 	pop	hl
      00189B 7C                    6106 	ld	a, h
      00189C F8 05                 6107 	ldhl	sp,	#5
      00189E 32                    6108 	ld	(hl-), a
      00189F 2A                    6109 	ld	a, (hl+)
      0018A0 5F                    6110 	ld	e, a
      0018A1 56                    6111 	ld	d, (hl)
      0018A2 1A                    6112 	ld	a, (de)
      0018A3 F8 0F                 6113 	ldhl	sp,	#15
      0018A5 77                    6114 	ld	(hl), a
      0018A6 7E                    6115 	ld	a, (hl)
      0018A7 B7                    6116 	or	a, a
      0018A8 CAr66r1B              6117 	jp	Z, 00198$
                                   6118 ;src/main.c:593: if (enemies[i].visible == 1) {
      0018AB F8 02                 6119 	ldhl	sp,#2
      0018AD 2A                    6120 	ld	a, (hl+)
      0018AE 5F                    6121 	ld	e, a
      0018AF 56                    6122 	ld	d, (hl)
      0018B0 21 0A 00              6123 	ld	hl, #0x000a
      0018B3 19                    6124 	add	hl, de
      0018B4 4D                    6125 	ld	c, l
      0018B5 44                    6126 	ld	b, h
      0018B6 0A                    6127 	ld	a, (bc)
      0018B7 F8 06                 6128 	ldhl	sp,	#6
      0018B9 77                    6129 	ld	(hl), a
                                   6130 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018BA F8 02                 6131 	ldhl	sp,#2
      0018BC 2A                    6132 	ld	a, (hl+)
      0018BD 5F                    6133 	ld	e, a
      0018BE 56                    6134 	ld	d, (hl)
      0018BF 1A                    6135 	ld	a, (de)
      0018C0 F8 07                 6136 	ldhl	sp,	#7
      0018C2 22                    6137 	ld	(hl+), a
      0018C3 13                    6138 	inc	de
      0018C4 1A                    6139 	ld	a, (de)
      0018C5 77                    6140 	ld	(hl), a
      0018C6 F8 02                 6141 	ldhl	sp,#2
      0018C8 2A                    6142 	ld	a, (hl+)
      0018C9 5F                    6143 	ld	e, a
      0018CA 56                    6144 	ld	d, (hl)
      0018CB 21 02 00              6145 	ld	hl, #0x0002
      0018CE 19                    6146 	add	hl, de
      0018CF E5                    6147 	push	hl
      0018D0 7D                    6148 	ld	a, l
      0018D1 F8 0B                 6149 	ldhl	sp,	#11
      0018D3 77                    6150 	ld	(hl), a
      0018D4 E1                    6151 	pop	hl
      0018D5 7C                    6152 	ld	a, h
      0018D6 F8 0A                 6153 	ldhl	sp,	#10
      0018D8 77                    6154 	ld	(hl), a
                                   6155 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      0018D9 F8 01                 6156 	ldhl	sp,	#1
      0018DB 5E                    6157 	ld	e, (hl)
                                   6158 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018DC F8 07                 6159 	ldhl	sp,	#7
      0018DE 7E                    6160 	ld	a, (hl)
      0018DF F8 0B                 6161 	ldhl	sp,	#11
      0018E1 77                    6162 	ld	(hl), a
      0018E2 F8 08                 6163 	ldhl	sp,	#8
      0018E4 7E                    6164 	ld	a, (hl)
      0018E5 F8 0C                 6165 	ldhl	sp,	#12
                                   6166 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      0018E7 22                    6167 	ld	(hl+), a
      0018E8 7B                    6168 	ld	a, e
      0018E9 87                    6169 	add	a, a
                                   6170 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018EA 32                    6171 	ld	(hl-), a
      0018EB 2A                    6172 	ld	a, (hl+)
      0018EC 23                    6173 	inc	hl
      0018ED 07                    6174 	rlca
      0018EE E6 01                 6175 	and	a,#0x01
                                   6176 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      0018F0 32                    6177 	ld	(hl-), a
      0018F1 2A                    6178 	ld	a, (hl+)
      0018F2 23                    6179 	inc	hl
      0018F3 C6 0A                 6180 	add	a, #0x0a
      0018F5 77                    6181 	ld	(hl), a
                                   6182 ;src/main.c:593: if (enemies[i].visible == 1) {
      0018F6 F8 06                 6183 	ldhl	sp,	#6
      0018F8 7E                    6184 	ld	a, (hl)
      0018F9 3D                    6185 	dec	a
      0018FA 20 74                 6186 	jr	NZ, 00165$
                                   6187 ;src/main.c:594: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0018FC F8 0E                 6188 	ldhl	sp,	#14
      0018FE 7E                    6189 	ld	a, (hl)
      0018FF B7                    6190 	or	a, a
      001900 20 48                 6191 	jr	NZ, 00146$
      001902 F8 0B                 6192 	ldhl	sp,	#11
      001904 3E AC                 6193 	ld	a, #0xac
      001906 96                    6194 	sub	a, (hl)
      001907 23                    6195 	inc	hl
      001908 3E 00                 6196 	ld	a, #0x00
      00190A 9E                    6197 	sbc	a, (hl)
      00190B 3E 00                 6198 	ld	a, #0x00
      00190D 57                    6199 	ld	d, a
      00190E CB 7E                 6200 	bit	7, (hl)
      001910 28 07                 6201 	jr	Z, 00433$
      001912 CB 7A                 6202 	bit	7, d
      001914 20 08                 6203 	jr	NZ, 00434$
      001916 BF                    6204 	cp	a, a
      001917 18 05                 6205 	jr	00434$
      001919                       6206 00433$:
      001919 CB 7A                 6207 	bit	7, d
      00191B 28 01                 6208 	jr	Z, 00434$
      00191D 37                    6209 	scf
      00191E                       6210 00434$:
      00191E 38 2A                 6211 	jr	C, 00146$
      001920 F8 09                 6212 	ldhl	sp,#9
      001922 2A                    6213 	ld	a, (hl+)
      001923 5F                    6214 	ld	e, a
      001924 56                    6215 	ld	d, (hl)
      001925 1A                    6216 	ld	a, (de)
      001926 6F                    6217 	ld	l, a
                                   6218 ;	spillPairReg hl
                                   6219 ;	spillPairReg hl
      001927 13                    6220 	inc	de
      001928 1A                    6221 	ld	a, (de)
      001929 67                    6222 	ld	h, a
                                   6223 ;	spillPairReg hl
                                   6224 ;	spillPairReg hl
      00192A CB 7C                 6225 	bit	7, h
      00192C 20 1C                 6226 	jr	NZ, 00146$
      00192E 5C                    6227 	ld	e, h
      00192F 16 00                 6228 	ld	d, #0x00
      001931 3E 98                 6229 	ld	a, #0x98
      001933 BD                    6230 	cp	a, l
      001934 3E 00                 6231 	ld	a, #0x00
      001936 9C                    6232 	sbc	a, h
      001937 CB 7B                 6233 	bit	7, e
      001939 28 07                 6234 	jr	Z, 00435$
      00193B CB 7A                 6235 	bit	7, d
      00193D 20 08                 6236 	jr	NZ, 00436$
      00193F BF                    6237 	cp	a, a
      001940 18 05                 6238 	jr	00436$
      001942                       6239 00435$:
      001942 CB 7A                 6240 	bit	7, d
      001944 28 01                 6241 	jr	Z, 00436$
      001946 37                    6242 	scf
      001947                       6243 00436$:
      001947 D2r66r1B              6244 	jp	NC, 00198$
      00194A                       6245 00146$:
                                   6246 ;src/main.c:595: enemies[i].visible = 0;
      00194A AF                    6247 	xor	a, a
      00194B 02                    6248 	ld	(bc), a
                                   6249 ;src/main.c:596: set_sprite_tile(10+(i<<1), 0x7f);
      00194C F8 0F                 6250 	ldhl	sp,	#15
                                   6251 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00194E 6E                    6252 	ld	l, (hl)
      00194F 11r00r00              6253 	ld	de, #_shadow_OAM+0
                                   6254 ;	spillPairReg hl
                                   6255 ;	spillPairReg hl
      001952 26 00                 6256 	ld	h, #0x00
                                   6257 ;	spillPairReg hl
                                   6258 ;	spillPairReg hl
      001954 29                    6259 	add	hl, hl
      001955 29                    6260 	add	hl, hl
      001956 19                    6261 	add	hl, de
      001957 23                    6262 	inc	hl
      001958 23                    6263 	inc	hl
      001959 36 7F                 6264 	ld	(hl), #0x7f
                                   6265 ;src/main.c:597: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00195B F8 0D                 6266 	ldhl	sp,	#13
      00195D 7E                    6267 	ld	a, (hl)
      00195E C6 0B                 6268 	add	a, #0x0b
                                   6269 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001960 6F                    6270 	ld	l, a
      001961 11r00r00              6271 	ld	de, #_shadow_OAM+0
                                   6272 ;	spillPairReg hl
                                   6273 ;	spillPairReg hl
      001964 26 00                 6274 	ld	h, #0x00
                                   6275 ;	spillPairReg hl
                                   6276 ;	spillPairReg hl
      001966 29                    6277 	add	hl, hl
      001967 29                    6278 	add	hl, hl
      001968 19                    6279 	add	hl, de
      001969 23                    6280 	inc	hl
      00196A 23                    6281 	inc	hl
      00196B 36 7F                 6282 	ld	(hl), #0x7f
                                   6283 ;src/main.c:597: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00196D C3r66r1B              6284 	jp	00198$
      001970                       6285 00165$:
                                   6286 ;src/main.c:601: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001970 F8 0E                 6287 	ldhl	sp,	#14
      001972 CB 46                 6288 	bit	0, (hl)
      001974 C2r71r1A              6289 	jp	NZ, 00159$
      001977 F8 0B                 6290 	ldhl	sp,	#11
      001979 2A                    6291 	ld	a, (hl+)
      00197A D6 AC                 6292 	sub	a, #0xac
      00197C 7E                    6293 	ld	a, (hl)
      00197D DE 00                 6294 	sbc	a, #0x00
      00197F 56                    6295 	ld	d, (hl)
      001980 3E 00                 6296 	ld	a, #0x00
      001982 CB 7F                 6297 	bit	7,a
      001984 28 07                 6298 	jr	Z, 00437$
      001986 CB 7A                 6299 	bit	7, d
      001988 20 08                 6300 	jr	NZ, 00438$
      00198A BF                    6301 	cp	a, a
      00198B 18 05                 6302 	jr	00438$
      00198D                       6303 00437$:
      00198D CB 7A                 6304 	bit	7, d
      00198F 28 01                 6305 	jr	Z, 00438$
      001991 37                    6306 	scf
      001992                       6307 00438$:
      001992 D2r71r1A              6308 	jp	NC, 00159$
      001995 F8 09                 6309 	ldhl	sp,#9
      001997 2A                    6310 	ld	a, (hl+)
      001998 5F                    6311 	ld	e, a
      001999 56                    6312 	ld	d, (hl)
      00199A 1A                    6313 	ld	a, (de)
      00199B 6F                    6314 	ld	l, a
                                   6315 ;	spillPairReg hl
                                   6316 ;	spillPairReg hl
      00199C 13                    6317 	inc	de
      00199D 1A                    6318 	ld	a, (de)
      00199E 67                    6319 	ld	h, a
                                   6320 ;	spillPairReg hl
                                   6321 ;	spillPairReg hl
      00199F 5C                    6322 	ld	e, h
      0019A0 AF                    6323 	xor	a, a
      0019A1 57                    6324 	ld	d, a
      0019A2 BD                    6325 	cp	a, l
      0019A3 9C                    6326 	sbc	a, h
      0019A4 CB 7B                 6327 	bit	7, e
      0019A6 28 07                 6328 	jr	Z, 00439$
      0019A8 CB 7A                 6329 	bit	7, d
      0019AA 20 08                 6330 	jr	NZ, 00440$
      0019AC BF                    6331 	cp	a, a
      0019AD 18 05                 6332 	jr	00440$
      0019AF                       6333 00439$:
      0019AF CB 7A                 6334 	bit	7, d
      0019B1 28 01                 6335 	jr	Z, 00440$
      0019B3 37                    6336 	scf
      0019B4                       6337 00440$:
      0019B4 D2r71r1A              6338 	jp	NC, 00159$
      0019B7 7D                    6339 	ld	a, l
      0019B8 D6 98                 6340 	sub	a, #0x98
      0019BA 7C                    6341 	ld	a, h
      0019BB 17                    6342 	rla
      0019BC 3F                    6343 	ccf
      0019BD 1F                    6344 	rra
      0019BE DE 80                 6345 	sbc	a, #0x80
      0019C0 D2r71r1A              6346 	jp	NC, 00159$
                                   6347 ;src/main.c:602: enemies[i].visible = 1;
      0019C3 3E 01                 6348 	ld	a, #0x01
      0019C5 02                    6349 	ld	(bc), a
                                   6350 ;src/main.c:603: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      0019C6 F8 02                 6351 	ldhl	sp,#2
      0019C8 2A                    6352 	ld	a, (hl+)
      0019C9 5F                    6353 	ld	e, a
      0019CA 56                    6354 	ld	d, (hl)
      0019CB 21 06 00              6355 	ld	hl, #0x0006
      0019CE 19                    6356 	add	hl, de
      0019CF 4D                    6357 	ld	c, l
      0019D0 44                    6358 	ld	b, h
      0019D1 0A                    6359 	ld	a, (bc)
      0019D2 F8 0E                 6360 	ldhl	sp,	#14
      0019D4 22                    6361 	ld	(hl+), a
      0019D5 4E                    6362 	ld	c, (hl)
                                   6363 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0019D6 F8 0B                 6364 	ldhl	sp,	#11
      0019D8 79                    6365 	ld	a, c
      0019D9 22                    6366 	ld	(hl+), a
      0019DA 36 00                 6367 	ld	(hl), #0x00
      0019DC 3E 02                 6368 	ld	a, #0x02
      0019DE                       6369 00441$:
      0019DE F8 0B                 6370 	ldhl	sp,	#11
      0019E0 CB 26                 6371 	sla	(hl)
      0019E2 23                    6372 	inc	hl
      0019E3 CB 16                 6373 	rl	(hl)
      0019E5 3D                    6374 	dec	a
      0019E6 20 F6                 6375 	jr	NZ, 00441$
      0019E8 2B                    6376 	dec	hl
      0019E9 2A                    6377 	ld	a, (hl+)
      0019EA 5F                    6378 	ld	e, a
      0019EB 56                    6379 	ld	d, (hl)
      0019EC 21r00r00              6380 	ld	hl, #_shadow_OAM
      0019EF 19                    6381 	add	hl, de
      0019F0 E5                    6382 	push	hl
      0019F1 7D                    6383 	ld	a, l
      0019F2 F8 0B                 6384 	ldhl	sp,	#11
      0019F4 77                    6385 	ld	(hl), a
      0019F5 E1                    6386 	pop	hl
      0019F6 7C                    6387 	ld	a, h
      0019F7 F8 0A                 6388 	ldhl	sp,	#10
      0019F9 32                    6389 	ld	(hl-), a
      0019FA 2A                    6390 	ld	a, (hl+)
      0019FB 5F                    6391 	ld	e, a
      0019FC 56                    6392 	ld	d, (hl)
      0019FD 21 02 00              6393 	ld	hl, #0x0002
      001A00 19                    6394 	add	hl, de
      001A01 E5                    6395 	push	hl
      001A02 7D                    6396 	ld	a, l
      001A03 F8 0D                 6397 	ldhl	sp,	#13
      001A05 77                    6398 	ld	(hl), a
      001A06 E1                    6399 	pop	hl
      001A07 7C                    6400 	ld	a, h
      001A08 F8 0C                 6401 	ldhl	sp,	#12
      001A0A 32                    6402 	ld	(hl-), a
      001A0B 2A                    6403 	ld	a, (hl+)
      001A0C 5F                    6404 	ld	e, a
      001A0D 2A                    6405 	ld	a, (hl+)
      001A0E 23                    6406 	inc	hl
      001A0F 57                    6407 	ld	d, a
      001A10 7E                    6408 	ld	a, (hl)
      001A11 12                    6409 	ld	(de), a
                                   6410 ;src/main.c:604: if (enemies[i].spriteCount == 2) {
      001A12 F8 02                 6411 	ldhl	sp,#2
      001A14 2A                    6412 	ld	a, (hl+)
      001A15 5F                    6413 	ld	e, a
      001A16 56                    6414 	ld	d, (hl)
      001A17 21 08 00              6415 	ld	hl, #0x0008
      001A1A 19                    6416 	add	hl, de
      001A1B 4D                    6417 	ld	c, l
      001A1C 44                    6418 	ld	b, h
      001A1D 0A                    6419 	ld	a, (bc)
      001A1E D6 02                 6420 	sub	a, #0x02
      001A20 C2r66r1B              6421 	jp	NZ,00198$
                                   6422 ;src/main.c:605: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001A23 F8 02                 6423 	ldhl	sp,#2
      001A25 2A                    6424 	ld	a, (hl+)
      001A26 5F                    6425 	ld	e, a
      001A27 56                    6426 	ld	d, (hl)
      001A28 21 07 00              6427 	ld	hl, #0x0007
      001A2B 19                    6428 	add	hl, de
      001A2C 4D                    6429 	ld	c, l
      001A2D 44                    6430 	ld	b, h
      001A2E 0A                    6431 	ld	a, (bc)
      001A2F F8 0F                 6432 	ldhl	sp,	#15
      001A31 32                    6433 	ld	(hl-), a
      001A32 2B                    6434 	dec	hl
      001A33 7E                    6435 	ld	a, (hl)
      001A34 C6 0B                 6436 	add	a, #0x0b
                                   6437 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001A36 22                    6438 	ld	(hl+), a
      001A37 36 00                 6439 	ld	(hl), #0x00
      001A39 3E 02                 6440 	ld	a, #0x02
      001A3B                       6441 00444$:
      001A3B F8 0D                 6442 	ldhl	sp,	#13
      001A3D CB 26                 6443 	sla	(hl)
      001A3F 23                    6444 	inc	hl
      001A40 CB 16                 6445 	rl	(hl)
      001A42 3D                    6446 	dec	a
      001A43 20 F6                 6447 	jr	NZ, 00444$
      001A45 2B                    6448 	dec	hl
      001A46 2A                    6449 	ld	a, (hl+)
      001A47 5F                    6450 	ld	e, a
      001A48 56                    6451 	ld	d, (hl)
      001A49 21r00r00              6452 	ld	hl, #_shadow_OAM
      001A4C 19                    6453 	add	hl, de
      001A4D E5                    6454 	push	hl
      001A4E 7D                    6455 	ld	a, l
      001A4F F8 0D                 6456 	ldhl	sp,	#13
      001A51 77                    6457 	ld	(hl), a
      001A52 E1                    6458 	pop	hl
      001A53 7C                    6459 	ld	a, h
      001A54 F8 0C                 6460 	ldhl	sp,	#12
      001A56 32                    6461 	ld	(hl-), a
      001A57 2A                    6462 	ld	a, (hl+)
      001A58 5F                    6463 	ld	e, a
      001A59 56                    6464 	ld	d, (hl)
      001A5A 21 02 00              6465 	ld	hl, #0x0002
      001A5D 19                    6466 	add	hl, de
      001A5E E5                    6467 	push	hl
      001A5F 7D                    6468 	ld	a, l
      001A60 F8 0F                 6469 	ldhl	sp,	#15
      001A62 77                    6470 	ld	(hl), a
      001A63 E1                    6471 	pop	hl
      001A64 7C                    6472 	ld	a, h
      001A65 F8 0E                 6473 	ldhl	sp,	#14
      001A67 32                    6474 	ld	(hl-), a
      001A68 2A                    6475 	ld	a, (hl+)
      001A69 5F                    6476 	ld	e, a
      001A6A 2A                    6477 	ld	a, (hl+)
      001A6B 57                    6478 	ld	d, a
      001A6C 7E                    6479 	ld	a, (hl)
      001A6D 12                    6480 	ld	(de), a
                                   6481 ;src/main.c:605: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001A6E C3r66r1B              6482 	jp	00198$
      001A71                       6483 00159$:
                                   6484 ;src/main.c:608: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001A71 F8 07                 6485 	ldhl	sp,	#7
      001A73 2A                    6486 	ld	a, (hl+)
      001A74 D6 9C                 6487 	sub	a, #0x9c
      001A76 7E                    6488 	ld	a, (hl)
      001A77 DE FF                 6489 	sbc	a, #0xff
      001A79 56                    6490 	ld	d, (hl)
      001A7A 3E FF                 6491 	ld	a, #0xff
      001A7C CB 7F                 6492 	bit	7,a
      001A7E 28 07                 6493 	jr	Z, 00445$
      001A80 CB 7A                 6494 	bit	7, d
      001A82 20 08                 6495 	jr	NZ, 00446$
      001A84 BF                    6496 	cp	a, a
      001A85 18 05                 6497 	jr	00446$
      001A87                       6498 00445$:
      001A87 CB 7A                 6499 	bit	7, d
      001A89 28 01                 6500 	jr	Z, 00446$
      001A8B 37                    6501 	scf
      001A8C                       6502 00446$:
      001A8C 38 4F                 6503 	jr	C, 00153$
      001A8E F8 0B                 6504 	ldhl	sp,	#11
      001A90 3E 10                 6505 	ld	a, #0x10
      001A92 96                    6506 	sub	a, (hl)
      001A93 23                    6507 	inc	hl
      001A94 3E 01                 6508 	ld	a, #0x01
      001A96 9E                    6509 	sbc	a, (hl)
      001A97 3E 01                 6510 	ld	a, #0x01
      001A99 57                    6511 	ld	d, a
      001A9A CB 7E                 6512 	bit	7, (hl)
      001A9C 28 07                 6513 	jr	Z, 00447$
      001A9E CB 7A                 6514 	bit	7, d
      001AA0 20 08                 6515 	jr	NZ, 00448$
      001AA2 BF                    6516 	cp	a, a
      001AA3 18 05                 6517 	jr	00448$
      001AA5                       6518 00447$:
      001AA5 CB 7A                 6519 	bit	7, d
      001AA7 28 01                 6520 	jr	Z, 00448$
      001AA9 37                    6521 	scf
      001AAA                       6522 00448$:
      001AAA 38 31                 6523 	jr	C, 00153$
      001AAC F8 09                 6524 	ldhl	sp,#9
      001AAE 2A                    6525 	ld	a, (hl+)
      001AAF 5F                    6526 	ld	e, a
      001AB0 56                    6527 	ld	d, (hl)
      001AB1 1A                    6528 	ld	a, (de)
      001AB2 4F                    6529 	ld	c, a
      001AB3 13                    6530 	inc	de
      001AB4 1A                    6531 	ld	a, (de)
      001AB5 47                    6532 	ld	b, a
      001AB6 79                    6533 	ld	a, c
      001AB7 D6 9C                 6534 	sub	a, #0x9c
      001AB9 78                    6535 	ld	a, b
      001ABA 17                    6536 	rla
      001ABB 3F                    6537 	ccf
      001ABC 1F                    6538 	rra
      001ABD DE 7F                 6539 	sbc	a, #0x7f
      001ABF 38 1C                 6540 	jr	C, 00153$
      001AC1 58                    6541 	ld	e, b
      001AC2 16 00                 6542 	ld	d, #0x00
      001AC4 3E FC                 6543 	ld	a, #0xfc
      001AC6 B9                    6544 	cp	a, c
      001AC7 3E 00                 6545 	ld	a, #0x00
      001AC9 98                    6546 	sbc	a, b
      001ACA CB 7B                 6547 	bit	7, e
      001ACC 28 07                 6548 	jr	Z, 00449$
      001ACE CB 7A                 6549 	bit	7, d
      001AD0 20 08                 6550 	jr	NZ, 00450$
      001AD2 BF                    6551 	cp	a, a
      001AD3 18 05                 6552 	jr	00450$
      001AD5                       6553 00449$:
      001AD5 CB 7A                 6554 	bit	7, d
      001AD7 28 01                 6555 	jr	Z, 00450$
      001AD9 37                    6556 	scf
      001ADA                       6557 00450$:
      001ADA D2r66r1B              6558 	jp	NC, 00198$
      001ADD                       6559 00153$:
                                   6560 ;src/main.c:609: enemies[i].alive = 0;
      001ADD F8 04                 6561 	ldhl	sp,	#4
      001ADF 2A                    6562 	ld	a,	(hl+)
      001AE0 66                    6563 	ld	h, (hl)
      001AE1 6F                    6564 	ld	l, a
      001AE2 36 00                 6565 	ld	(hl), #0x00
                                   6566 ;src/main.c:610: set_sprite_tile(10+(i<<1), 0x7f);
      001AE4 F8 0F                 6567 	ldhl	sp,	#15
                                   6568 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001AE6 3A                    6569 	ld	a, (hl-)
      001AE7 22                    6570 	ld	(hl+), a
      001AE8 36 00                 6571 	ld	(hl), #0x00
      001AEA 3E 02                 6572 	ld	a, #0x02
      001AEC                       6573 00451$:
      001AEC F8 0E                 6574 	ldhl	sp,	#14
      001AEE CB 26                 6575 	sla	(hl)
      001AF0 23                    6576 	inc	hl
      001AF1 CB 16                 6577 	rl	(hl)
      001AF3 3D                    6578 	dec	a
      001AF4 20 F6                 6579 	jr	NZ, 00451$
      001AF6 2B                    6580 	dec	hl
      001AF7 2A                    6581 	ld	a, (hl+)
      001AF8 5F                    6582 	ld	e, a
      001AF9 56                    6583 	ld	d, (hl)
      001AFA 21r00r00              6584 	ld	hl, #_shadow_OAM
      001AFD 19                    6585 	add	hl, de
      001AFE E5                    6586 	push	hl
      001AFF 7D                    6587 	ld	a, l
      001B00 F8 0D                 6588 	ldhl	sp,	#13
      001B02 77                    6589 	ld	(hl), a
      001B03 E1                    6590 	pop	hl
      001B04 7C                    6591 	ld	a, h
      001B05 F8 0C                 6592 	ldhl	sp,	#12
      001B07 32                    6593 	ld	(hl-), a
      001B08 2A                    6594 	ld	a, (hl+)
      001B09 5F                    6595 	ld	e, a
      001B0A 56                    6596 	ld	d, (hl)
      001B0B 21 02 00              6597 	ld	hl, #0x0002
      001B0E 19                    6598 	add	hl, de
      001B0F E5                    6599 	push	hl
      001B10 7D                    6600 	ld	a, l
      001B11 F8 10                 6601 	ldhl	sp,	#16
      001B13 77                    6602 	ld	(hl), a
      001B14 E1                    6603 	pop	hl
      001B15 7C                    6604 	ld	a, h
      001B16 F8 0F                 6605 	ldhl	sp,	#15
      001B18 32                    6606 	ld	(hl-), a
      001B19 2A                    6607 	ld	a,	(hl+)
      001B1A 66                    6608 	ld	h, (hl)
      001B1B 6F                    6609 	ld	l, a
      001B1C 36 7F                 6610 	ld	(hl), #0x7f
                                   6611 ;src/main.c:611: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001B1E F8 0D                 6612 	ldhl	sp,	#13
      001B20 2A                    6613 	ld	a, (hl+)
      001B21 23                    6614 	inc	hl
      001B22 C6 0B                 6615 	add	a, #0x0b
      001B24 77                    6616 	ld	(hl), a
                                   6617 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001B25 3A                    6618 	ld	a, (hl-)
      001B26 22                    6619 	ld	(hl+), a
      001B27 36 00                 6620 	ld	(hl), #0x00
      001B29 3E 02                 6621 	ld	a, #0x02
      001B2B                       6622 00452$:
      001B2B F8 0E                 6623 	ldhl	sp,	#14
      001B2D CB 26                 6624 	sla	(hl)
      001B2F 23                    6625 	inc	hl
      001B30 CB 16                 6626 	rl	(hl)
      001B32 3D                    6627 	dec	a
      001B33 20 F6                 6628 	jr	NZ, 00452$
      001B35 2B                    6629 	dec	hl
      001B36 2A                    6630 	ld	a, (hl+)
      001B37 5F                    6631 	ld	e, a
      001B38 56                    6632 	ld	d, (hl)
      001B39 21r00r00              6633 	ld	hl, #_shadow_OAM
      001B3C 19                    6634 	add	hl, de
      001B3D E5                    6635 	push	hl
      001B3E 7D                    6636 	ld	a, l
      001B3F F8 0E                 6637 	ldhl	sp,	#14
      001B41 77                    6638 	ld	(hl), a
      001B42 E1                    6639 	pop	hl
      001B43 7C                    6640 	ld	a, h
      001B44 F8 0D                 6641 	ldhl	sp,	#13
      001B46 32                    6642 	ld	(hl-), a
      001B47 2A                    6643 	ld	a, (hl+)
      001B48 5F                    6644 	ld	e, a
      001B49 56                    6645 	ld	d, (hl)
      001B4A 21 02 00              6646 	ld	hl, #0x0002
      001B4D 19                    6647 	add	hl, de
      001B4E E5                    6648 	push	hl
      001B4F 7D                    6649 	ld	a, l
      001B50 F8 10                 6650 	ldhl	sp,	#16
      001B52 77                    6651 	ld	(hl), a
      001B53 E1                    6652 	pop	hl
      001B54 7C                    6653 	ld	a, h
      001B55 F8 0F                 6654 	ldhl	sp,	#15
      001B57 32                    6655 	ld	(hl-), a
      001B58 2A                    6656 	ld	a,	(hl+)
      001B59 66                    6657 	ld	h, (hl)
      001B5A 6F                    6658 	ld	l, a
      001B5B 36 7F                 6659 	ld	(hl), #0x7f
                                   6660 ;src/main.c:612: initEnemy(i);
      001B5D F8 01                 6661 	ldhl	sp,	#1
      001B5F 7E                    6662 	ld	a, (hl)
      001B60 F5                    6663 	push	af
      001B61 33                    6664 	inc	sp
      001B62 CDr64r11              6665 	call	_initEnemy
      001B65 33                    6666 	inc	sp
      001B66                       6667 00198$:
                                   6668 ;src/main.c:618: }
      001B66 E8 10                 6669 	add	sp, #16
      001B68 C9                    6670 	ret
                                   6671 ;src/main.c:623: void move() {
                                   6672 ;	---------------------------------
                                   6673 ; Function move
                                   6674 ; ---------------------------------
      001B69                       6675 _move::
      001B69 E8 F8                 6676 	add	sp, #-8
                                   6677 ;src/main.c:626: if (joydata & J_A) {
      001B6B FArF5r00              6678 	ld	a, (#_joydata)
      001B6E CB 67                 6679 	bit	4, a
      001B70 28 16                 6680 	jr	Z, 00102$
                                   6681 ;src/main.c:627: xSpeed += xDir + xDir + xDir;
      001B72 21rC4r00              6682 	ld	hl, #_xDir
      001B75 7E                    6683 	ld	a, (hl)
      001B76 87                    6684 	add	a, a
      001B77 86                    6685 	add	a, (hl)
      001B78 21rC6r00              6686 	ld	hl, #_xSpeed
      001B7B 86                    6687 	add	a, (hl)
      001B7C 77                    6688 	ld	(hl), a
                                   6689 ;src/main.c:628: ySpeed += yDir + yDir + yDir;
      001B7D 21rC5r00              6690 	ld	hl, #_yDir
      001B80 7E                    6691 	ld	a, (hl)
      001B81 87                    6692 	add	a, a
      001B82 86                    6693 	add	a, (hl)
      001B83 21rC7r00              6694 	ld	hl, #_ySpeed
      001B86 86                    6695 	add	a, (hl)
      001B87 77                    6696 	ld	(hl), a
      001B88                       6697 00102$:
                                   6698 ;src/main.c:632: xSpeed = clamp(xSpeed, -100, 100);
      001B88 21rC6r00              6699 	ld	hl, #_xSpeed
      001B8B 4E                    6700 	ld	c, (hl)
                                   6701 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      001B8C 79                    6702 	ld	a, c
      001B8D EE 80                 6703 	xor	a, #0x80
      001B8F D6 1C                 6704 	sub	a, #0x1c
      001B91 30 04                 6705 	jr	NC, 00165$
      001B93 0E 9C                 6706 	ld	c, #0x9c
      001B95 18 19                 6707 	jr	00166$
      001B97                       6708 00165$:
      001B97 59                    6709 	ld	e, c
      001B98 3E 64                 6710 	ld	a,#0x64
      001B9A 57                    6711 	ld	d,a
      001B9B 91                    6712 	sub	a, c
      001B9C CB 7B                 6713 	bit	7, e
      001B9E 28 07                 6714 	jr	Z, 00342$
      001BA0 CB 7A                 6715 	bit	7, d
      001BA2 20 08                 6716 	jr	NZ, 00343$
      001BA4 BF                    6717 	cp	a, a
      001BA5 18 05                 6718 	jr	00343$
      001BA7                       6719 00342$:
      001BA7 CB 7A                 6720 	bit	7, d
      001BA9 28 01                 6721 	jr	Z, 00343$
      001BAB 37                    6722 	scf
      001BAC                       6723 00343$:
      001BAC 30 02                 6724 	jr	NC, 00167$
      001BAE 0E 64                 6725 	ld	c, #0x64
      001BB0                       6726 00167$:
      001BB0                       6727 00166$:
      001BB0 21rC6r00              6728 	ld	hl, #_xSpeed
      001BB3 71                    6729 	ld	(hl), c
                                   6730 ;src/main.c:633: ySpeed = clamp(ySpeed, -100, 100);
      001BB4 21rC7r00              6731 	ld	hl, #_ySpeed
      001BB7 4E                    6732 	ld	c, (hl)
                                   6733 ;src/main.c:349: return (value < min) ? min : (value > max) ? max : value;
      001BB8 79                    6734 	ld	a, c
      001BB9 EE 80                 6735 	xor	a, #0x80
      001BBB D6 1C                 6736 	sub	a, #0x1c
      001BBD 30 04                 6737 	jr	NC, 00169$
      001BBF 0E 9C                 6738 	ld	c, #0x9c
      001BC1 18 19                 6739 	jr	00170$
      001BC3                       6740 00169$:
      001BC3 59                    6741 	ld	e, c
      001BC4 3E 64                 6742 	ld	a,#0x64
      001BC6 57                    6743 	ld	d,a
      001BC7 91                    6744 	sub	a, c
      001BC8 CB 7B                 6745 	bit	7, e
      001BCA 28 07                 6746 	jr	Z, 00344$
      001BCC CB 7A                 6747 	bit	7, d
      001BCE 20 08                 6748 	jr	NZ, 00345$
      001BD0 BF                    6749 	cp	a, a
      001BD1 18 05                 6750 	jr	00345$
      001BD3                       6751 00344$:
      001BD3 CB 7A                 6752 	bit	7, d
      001BD5 28 01                 6753 	jr	Z, 00345$
      001BD7 37                    6754 	scf
      001BD8                       6755 00345$:
      001BD8 30 02                 6756 	jr	NC, 00171$
      001BDA 0E 64                 6757 	ld	c, #0x64
      001BDC                       6758 00171$:
      001BDC                       6759 00170$:
      001BDC 21rC7r00              6760 	ld	hl, #_ySpeed
      001BDF 71                    6761 	ld	(hl), c
                                   6762 ;src/main.c:635: xOverflow = 0;
      001BE0 AF                    6763 	xor	a, a
      001BE1 21rD2r00              6764 	ld	hl, #_xOverflow
      001BE4 22                    6765 	ld	(hl+), a
      001BE5 77                    6766 	ld	(hl), a
                                   6767 ;src/main.c:636: yOverflow = 0;
      001BE6 AF                    6768 	xor	a, a
      001BE7 21rD4r00              6769 	ld	hl, #_yOverflow
      001BEA 22                    6770 	ld	(hl+), a
      001BEB 77                    6771 	ld	(hl), a
                                   6772 ;src/main.c:641: uint8_t xCollisionPoint = playerDrawX; 
      001BEC 21rCCr00              6773 	ld	hl, #_playerDrawX
      001BEF 4E                    6774 	ld	c, (hl)
                                   6775 ;src/main.c:644: xCollisionPoint = playerDrawX +8; //right edge
      001BF0 46                    6776 	ld	b, (hl)
                                   6777 ;src/main.c:643: if (xSpeed > 0) {
      001BF1 21rC6r00              6778 	ld	hl, #_xSpeed
      001BF4 5E                    6779 	ld	e, (hl)
      001BF5 AF                    6780 	xor	a, a
      001BF6 57                    6781 	ld	d, a
      001BF7 96                    6782 	sub	a, (hl)
      001BF8 CB 7B                 6783 	bit	7, e
      001BFA 28 07                 6784 	jr	Z, 00346$
      001BFC CB 7A                 6785 	bit	7, d
      001BFE 20 08                 6786 	jr	NZ, 00347$
      001C00 BF                    6787 	cp	a, a
      001C01 18 05                 6788 	jr	00347$
      001C03                       6789 00346$:
      001C03 CB 7A                 6790 	bit	7, d
      001C05 28 01                 6791 	jr	Z, 00347$
      001C07 37                    6792 	scf
      001C08                       6793 00347$:
      001C08 30 04                 6794 	jr	NC, 00104$
                                   6795 ;src/main.c:644: xCollisionPoint = playerDrawX +8; //right edge
      001C0A 78                    6796 	ld	a, b
      001C0B C6 08                 6797 	add	a, #0x08
      001C0D 4F                    6798 	ld	c, a
      001C0E                       6799 00104$:
                                   6800 ;src/main.c:646: if (xSpeed < 0) {
      001C0E FArC6r00              6801 	ld	a, (#_xSpeed)
      001C11 CB 7F                 6802 	bit	7, a
      001C13 28 04                 6803 	jr	Z, 00106$
                                   6804 ;src/main.c:647: xCollisionPoint = playerDrawX -8; //left edge
      001C15 78                    6805 	ld	a, b
      001C16 C6 F8                 6806 	add	a, #0xf8
      001C18 4F                    6807 	ld	c, a
      001C19                       6808 00106$:
                                   6809 ;src/main.c:651: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      001C19 06 00                 6810 	ld	b, #0x00
      001C1B 79                    6811 	ld	a, c
      001C1C 21rCEr00              6812 	ld	hl, #_bgX
      001C1F 86                    6813 	add	a, (hl)
      001C20 23                    6814 	inc	hl
      001C21 4F                    6815 	ld	c, a
      001C22 78                    6816 	ld	a, b
      001C23 8E                    6817 	adc	a, (hl)
      001C24 47                    6818 	ld	b, a
      001C25 CB 28                 6819 	sra	b
      001C27 CB 19                 6820 	rr	c
      001C29 CB 28                 6821 	sra	b
      001C2B CB 19                 6822 	rr	c
      001C2D CB 28                 6823 	sra	b
      001C2F CB 19                 6824 	rr	c
      001C31 11 20 00              6825 	ld	de, #0x0020
      001C34 D5                    6826 	push	de
      001C35 C5                    6827 	push	bc
      001C36 CDr00r00              6828 	call	__modsint
      001C39 E8 04                 6829 	add	sp, #4
                                   6830 ;src/main.c:655: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001C3B 21rCDr00              6831 	ld	hl, #_playerDrawY
      001C3E 4E                    6832 	ld	c, (hl)
      001C3F 06 00                 6833 	ld	b, #0x00
      001C41 79                    6834 	ld	a, c
      001C42 21rD0r00              6835 	ld	hl, #_bgY
      001C45 86                    6836 	add	a, (hl)
      001C46 23                    6837 	inc	hl
      001C47 4F                    6838 	ld	c, a
      001C48 78                    6839 	ld	a, b
      001C49 8E                    6840 	adc	a, (hl)
      001C4A 47                    6841 	ld	b, a
      001C4B CB 28                 6842 	sra	b
      001C4D CB 19                 6843 	rr	c
      001C4F CB 28                 6844 	sra	b
      001C51 CB 19                 6845 	rr	c
      001C53 CB 28                 6846 	sra	b
      001C55 CB 19                 6847 	rr	c
      001C57 D5                    6848 	push	de
      001C58 21 20 00              6849 	ld	hl, #0x0020
      001C5B E5                    6850 	push	hl
      001C5C C5                    6851 	push	bc
      001C5D CDr00r00              6852 	call	__modsint
      001C60 E8 04                 6853 	add	sp, #4
      001C62 6B                    6854 	ld	l, e
                                   6855 ;	spillPairReg hl
                                   6856 ;	spillPairReg hl
                                   6857 ;	spillPairReg hl
                                   6858 ;	spillPairReg hl
      001C63 D1                    6859 	pop	de
                                   6860 ;src/main.c:658: uint16_t ind = 32*bgindY + bgindX;
      001C64 26 00                 6861 	ld	h, #0x00
                                   6862 ;	spillPairReg hl
                                   6863 ;	spillPairReg hl
      001C66 29                    6864 	add	hl, hl
      001C67 29                    6865 	add	hl, hl
      001C68 29                    6866 	add	hl, hl
      001C69 29                    6867 	add	hl, hl
      001C6A 29                    6868 	add	hl, hl
      001C6B 19                    6869 	add	hl, de
      001C6C 5D                    6870 	ld	e, l
      001C6D 54                    6871 	ld	d, h
                                   6872 ;src/main.c:659: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      001C6E 0E 01                 6873 	ld	c, #0x01
                                   6874 ;src/main.c:660: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001C70 21r87r00              6875 	ld	hl, #_background1
      001C73 19                    6876 	add	hl, de
      001C74 46                    6877 	ld	b, (hl)
      001C75 1E 00                 6878 	ld	e, #0x00
      001C77                       6879 00158$:
      001C77 FAr89r0B              6880 	ld	a, (#_BLANKSIZE)
      001C7A F8 02                 6881 	ldhl	sp,	#2
      001C7C 77                    6882 	ld	(hl), a
      001C7D 7B                    6883 	ld	a, e
      001C7E 96                    6884 	sub	a, (hl)
      001C7F 30 11                 6885 	jr	NC, 00109$
                                   6886 ;src/main.c:661: if (background1[ind] == BLANK[i] ) {
      001C81 21r8Ar0B              6887 	ld	hl, #_BLANK
      001C84 16 00                 6888 	ld	d, #0x00
      001C86 19                    6889 	add	hl, de
      001C87 56                    6890 	ld	d, (hl)
      001C88 78                    6891 	ld	a, b
                                   6892 ;src/main.c:662: result = 0;
      001C89 92                    6893 	sub	a,d
      001C8A 20 03                 6894 	jr	NZ, 00159$
      001C8C 4F                    6895 	ld	c,a
                                   6896 ;src/main.c:663: break;
      001C8D 18 03                 6897 	jr	00109$
      001C8F                       6898 00159$:
                                   6899 ;src/main.c:660: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001C8F 1C                    6900 	inc	e
      001C90 18 E5                 6901 	jr	00158$
      001C92                       6902 00109$:
                                   6903 ;src/main.c:667: if (result == 0) {
      001C92 79                    6904 	ld	a, c
      001C93 B7                    6905 	or	a, a
      001C94 C2r62r1D              6906 	jp	NZ, 00114$
                                   6907 ;src/main.c:668: playerX+=xSpeed;
      001C97 FArC6r00              6908 	ld	a, (#_xSpeed)
      001C9A 4F                    6909 	ld	c, a
      001C9B 07                    6910 	rlca
      001C9C 9F                    6911 	sbc	a, a
      001C9D 47                    6912 	ld	b, a
      001C9E 21rC8r00              6913 	ld	hl, #_playerX
      001CA1 6E                    6914 	ld	l, (hl)
                                   6915 ;	spillPairReg hl
                                   6916 ;	spillPairReg hl
      001CA2 FArC9r00              6917 	ld	a, (_playerX + 1)
      001CA5 67                    6918 	ld	h, a
                                   6919 ;	spillPairReg hl
                                   6920 ;	spillPairReg hl
      001CA6 09                    6921 	add	hl, bc
      001CA7 4D                    6922 	ld	c, l
      001CA8 44                    6923 	ld	b, h
      001CA9 21rC8r00              6924 	ld	hl, #_playerX
      001CAC 79                    6925 	ld	a, c
      001CAD 22                    6926 	ld	(hl+), a
                                   6927 ;src/main.c:670: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001CAE 78                    6928 	ld	a, b
      001CAF 32                    6929 	ld	(hl-), a
      001CB0 2A                    6930 	ld	a, (hl+)
      001CB1 4F                    6931 	ld	c, a
      001CB2 46                    6932 	ld	b, (hl)
      001CB3 79                    6933 	ld	a, c
      001CB4 D6 80                 6934 	sub	a, #0x80
      001CB6 78                    6935 	ld	a, b
      001CB7 DE 08                 6936 	sbc	a, #0x08
      001CB9 30 05                 6937 	jr	NC, 00173$
      001CBB 01 80 08              6938 	ld	bc, #0x0880
      001CBE 18 0B                 6939 	jr	00174$
      001CC0                       6940 00173$:
      001CC0 3E 80                 6941 	ld	a, #0x80
      001CC2 B9                    6942 	cp	a, c
      001CC3 3E 0B                 6943 	ld	a, #0x0b
      001CC5 98                    6944 	sbc	a, b
      001CC6 30 03                 6945 	jr	NC, 00175$
      001CC8 01 80 0B              6946 	ld	bc, #0x0b80
      001CCB                       6947 00175$:
      001CCB                       6948 00174$:
      001CCB 59                    6949 	ld	e,c
      001CCC 50                    6950 	ld	d,b
                                   6951 ;src/main.c:672: xOverflow = (playerX - limitedPlayerX);
      001CCD FArC8r00              6952 	ld	a, (#_playerX)
      001CD0 93                    6953 	sub	a, e
      001CD1 EArD2r00              6954 	ld	(#_xOverflow),a
      001CD4 FArC9r00              6955 	ld	a, (#_playerX + 1)
      001CD7 9A                    6956 	sbc	a, d
      001CD8 21rD3r00              6957 	ld	hl, #_xOverflow + 1
                                   6958 ;src/main.c:673: if (xOverflow >= 0) {
      001CDB 32                    6959 	ld	(hl-), a
      001CDC 6E                    6960 	ld	l, (hl)
                                   6961 ;	spillPairReg hl
                                   6962 ;	spillPairReg hl
      001CDD FArD3r00              6963 	ld	a, (_xOverflow + 1)
                                   6964 ;	spillPairReg hl
                                   6965 ;	spillPairReg hl
      001CE0 CB 7F                 6966 	bit	7,a
      001CE2 20 22                 6967 	jr	NZ, 00111$
                                   6968 ;src/main.c:674: xOverflow = xOverflow >> 5;
      001CE4 21rD3r00              6969 	ld	hl, #_xOverflow + 1
      001CE7 CB 2E                 6970 	sra	(hl)
      001CE9 2B                    6971 	dec	hl
      001CEA CB 1E                 6972 	rr	(hl)
      001CEC 23                    6973 	inc	hl
      001CED CB 2E                 6974 	sra	(hl)
      001CEF 2B                    6975 	dec	hl
      001CF0 CB 1E                 6976 	rr	(hl)
      001CF2 23                    6977 	inc	hl
      001CF3 CB 2E                 6978 	sra	(hl)
      001CF5 2B                    6979 	dec	hl
      001CF6 CB 1E                 6980 	rr	(hl)
      001CF8 23                    6981 	inc	hl
      001CF9 CB 2E                 6982 	sra	(hl)
      001CFB 2B                    6983 	dec	hl
      001CFC CB 1E                 6984 	rr	(hl)
      001CFE 23                    6985 	inc	hl
      001CFF CB 2E                 6986 	sra	(hl)
      001D01 2B                    6987 	dec	hl
      001D02 CB 1E                 6988 	rr	(hl)
      001D04 18 25                 6989 	jr	00112$
      001D06                       6990 00111$:
                                   6991 ;src/main.c:677: xOverflow = -((-xOverflow) >> 5);
      001D06 AF                    6992 	xor	a, a
      001D07 21rD2r00              6993 	ld	hl, #_xOverflow
      001D0A 96                    6994 	sub	a, (hl)
      001D0B 23                    6995 	inc	hl
      001D0C 5F                    6996 	ld	e, a
      001D0D 9F                    6997 	sbc	a, a
      001D0E 96                    6998 	sub	a, (hl)
      001D0F 2B                    6999 	dec	hl
      001D10 57                    7000 	ld	d, a
      001D11 CB 2A                 7001 	sra	d
      001D13 CB 1B                 7002 	rr	e
      001D15 CB 2A                 7003 	sra	d
      001D17 CB 1B                 7004 	rr	e
      001D19 CB 2A                 7005 	sra	d
      001D1B CB 1B                 7006 	rr	e
      001D1D CB 2A                 7007 	sra	d
      001D1F CB 1B                 7008 	rr	e
      001D21 CB 2A                 7009 	sra	d
      001D23 CB 1B                 7010 	rr	e
      001D25 AF                    7011 	xor	a, a
      001D26 93                    7012 	sub	a, e
      001D27 22                    7013 	ld	(hl+), a
      001D28 9F                    7014 	sbc	a, a
      001D29 92                    7015 	sub	a, d
      001D2A 77                    7016 	ld	(hl), a
      001D2B                       7017 00112$:
                                   7018 ;src/main.c:679: bgX += xOverflow;
      001D2B FArCEr00              7019 	ld	a, (#_bgX)
      001D2E 21rD2r00              7020 	ld	hl, #_xOverflow
      001D31 86                    7021 	add	a, (hl)
      001D32 21rCEr00              7022 	ld	hl, #_bgX
      001D35 22                    7023 	ld	(hl+), a
      001D36 7E                    7024 	ld	a, (hl)
      001D37 21rD3r00              7025 	ld	hl, #_xOverflow + 1
      001D3A 8E                    7026 	adc	a, (hl)
      001D3B EArCFr00              7027 	ld	(#_bgX + 1),a
                                   7028 ;src/main.c:680: playerX = limitedPlayerX;
      001D3E 21rC8r00              7029 	ld	hl, #_playerX
      001D41 79                    7030 	ld	a, c
      001D42 22                    7031 	ld	(hl+), a
                                   7032 ;src/main.c:681: playerDrawX=playerX >> 5;
      001D43 78                    7033 	ld	a, b
      001D44 32                    7034 	ld	(hl-), a
      001D45 2A                    7035 	ld	a, (hl+)
      001D46 4F                    7036 	ld	c, a
      001D47 46                    7037 	ld	b, (hl)
      001D48 CB 38                 7038 	srl	b
      001D4A CB 19                 7039 	rr	c
      001D4C CB 38                 7040 	srl	b
      001D4E CB 19                 7041 	rr	c
      001D50 CB 38                 7042 	srl	b
      001D52 CB 19                 7043 	rr	c
      001D54 CB 38                 7044 	srl	b
      001D56 CB 19                 7045 	rr	c
      001D58 CB 38                 7046 	srl	b
      001D5A CB 19                 7047 	rr	c
      001D5C 21rCCr00              7048 	ld	hl, #_playerDrawX
      001D5F 71                    7049 	ld	(hl), c
      001D60 18 05                 7050 	jr	00115$
      001D62                       7051 00114$:
                                   7052 ;src/main.c:689: xSpeed = 0;
      001D62 21rC6r00              7053 	ld	hl, #_xSpeed
      001D65 36 00                 7054 	ld	(hl), #0x00
      001D67                       7055 00115$:
                                   7056 ;src/main.c:697: uint8_t yCollisionPoint = playerDrawY; 
      001D67 FArCDr00              7057 	ld	a, (#_playerDrawY)
      001D6A F8 07                 7058 	ldhl	sp,	#7
      001D6C 77                    7059 	ld	(hl), a
                                   7060 ;src/main.c:700: yCollisionPoint = playerDrawY +8; //bottom edge
      001D6D 21rCDr00              7061 	ld	hl, #_playerDrawY
      001D70 4E                    7062 	ld	c, (hl)
                                   7063 ;src/main.c:699: if (ySpeed > 0) {
      001D71 21rC7r00              7064 	ld	hl, #_ySpeed
      001D74 5E                    7065 	ld	e, (hl)
      001D75 AF                    7066 	xor	a, a
      001D76 57                    7067 	ld	d, a
      001D77 96                    7068 	sub	a, (hl)
      001D78 CB 7B                 7069 	bit	7, e
      001D7A 28 07                 7070 	jr	Z, 00350$
      001D7C CB 7A                 7071 	bit	7, d
      001D7E 20 08                 7072 	jr	NZ, 00351$
      001D80 BF                    7073 	cp	a, a
      001D81 18 05                 7074 	jr	00351$
      001D83                       7075 00350$:
      001D83 CB 7A                 7076 	bit	7, d
      001D85 28 01                 7077 	jr	Z, 00351$
      001D87 37                    7078 	scf
      001D88                       7079 00351$:
      001D88 30 06                 7080 	jr	NC, 00117$
                                   7081 ;src/main.c:700: yCollisionPoint = playerDrawY +8; //bottom edge
      001D8A 79                    7082 	ld	a, c
      001D8B C6 08                 7083 	add	a, #0x08
      001D8D F8 07                 7084 	ldhl	sp,	#7
      001D8F 77                    7085 	ld	(hl), a
      001D90                       7086 00117$:
                                   7087 ;src/main.c:702: if (ySpeed < 0) {
      001D90 FArC7r00              7088 	ld	a, (#_ySpeed)
      001D93 CB 7F                 7089 	bit	7, a
      001D95 28 06                 7090 	jr	Z, 00119$
                                   7091 ;src/main.c:703: yCollisionPoint = playerDrawY -8; //top edge, 
      001D97 79                    7092 	ld	a, c
      001D98 C6 F8                 7093 	add	a, #0xf8
      001D9A F8 07                 7094 	ldhl	sp,	#7
      001D9C 77                    7095 	ld	(hl), a
      001D9D                       7096 00119$:
                                   7097 ;src/main.c:707: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001D9D FArCCr00              7098 	ld	a, (#_playerDrawX)
      001DA0 0E 00                 7099 	ld	c, #0x00
      001DA2 F8 03                 7100 	ldhl	sp,	#3
      001DA4 22                    7101 	ld	(hl+), a
      001DA5 79                    7102 	ld	a, c
      001DA6 32                    7103 	ld	(hl-), a
      001DA7 2A                    7104 	ld	a, (hl+)
      001DA8 5F                    7105 	ld	e, a
      001DA9 56                    7106 	ld	d, (hl)
      001DAA 21rCEr00              7107 	ld	hl, #_bgX
      001DAD 2A                    7108 	ld	a,	(hl+)
      001DAE 66                    7109 	ld	h, (hl)
      001DAF 6F                    7110 	ld	l, a
      001DB0 19                    7111 	add	hl, de
      001DB1 E5                    7112 	push	hl
      001DB2 7D                    7113 	ld	a, l
      001DB3 F8 07                 7114 	ldhl	sp,	#7
      001DB5 77                    7115 	ld	(hl), a
      001DB6 E1                    7116 	pop	hl
      001DB7 7C                    7117 	ld	a, h
      001DB8 F8 06                 7118 	ldhl	sp,	#6
      001DBA 77                    7119 	ld	(hl), a
      001DBB CB 2E                 7120 	sra	(hl)
      001DBD 2B                    7121 	dec	hl
      001DBE CB 1E                 7122 	rr	(hl)
      001DC0 23                    7123 	inc	hl
      001DC1 CB 2E                 7124 	sra	(hl)
      001DC3 2B                    7125 	dec	hl
      001DC4 CB 1E                 7126 	rr	(hl)
      001DC6 23                    7127 	inc	hl
      001DC7 CB 2E                 7128 	sra	(hl)
      001DC9 2B                    7129 	dec	hl
      001DCA CB 1E                 7130 	rr	(hl)
      001DCC 11 20 00              7131 	ld	de, #0x0020
      001DCF D5                    7132 	push	de
      001DD0 2A                    7133 	ld	a, (hl+)
      001DD1 5F                    7134 	ld	e, a
      001DD2 56                    7135 	ld	d, (hl)
      001DD3 D5                    7136 	push	de
      001DD4 CDr00r00              7137 	call	__modsint
      001DD7 E8 04                 7138 	add	sp, #4
      001DD9 F8 05                 7139 	ldhl	sp,	#5
      001DDB 7B                    7140 	ld	a, e
      001DDC 22                    7141 	ld	(hl+), a
      001DDD 72                    7142 	ld	(hl), d
      001DDE F8 05                 7143 	ldhl	sp,	#5
      001DE0 7E                    7144 	ld	a, (hl)
      001DE1 F8 00                 7145 	ldhl	sp,	#0
      001DE3 77                    7146 	ld	(hl), a
      001DE4 F8 06                 7147 	ldhl	sp,	#6
      001DE6 7E                    7148 	ld	a, (hl)
      001DE7 F8 01                 7149 	ldhl	sp,	#1
      001DE9 77                    7150 	ld	(hl), a
                                   7151 ;src/main.c:710: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001DEA F8 07                 7152 	ldhl	sp,	#7
      001DEC 3A                    7153 	ld	a, (hl-)
      001DED 22                    7154 	ld	(hl+), a
      001DEE AF                    7155 	xor	a, a
      001DEF 32                    7156 	ld	(hl-), a
      001DF0 3A                    7157 	ld	a, (hl-)
      001DF1 2B                    7158 	dec	hl
      001DF2 77                    7159 	ld	(hl), a
      001DF3 F8 07                 7160 	ldhl	sp,	#7
      001DF5 3A                    7161 	ld	a, (hl-)
      001DF6 2B                    7162 	dec	hl
      001DF7 32                    7163 	ld	(hl-), a
      001DF8 2A                    7164 	ld	a, (hl+)
      001DF9 5F                    7165 	ld	e, a
      001DFA 56                    7166 	ld	d, (hl)
      001DFB 21rD0r00              7167 	ld	hl, #_bgY
      001DFE 2A                    7168 	ld	a,	(hl+)
      001DFF 66                    7169 	ld	h, (hl)
      001E00 6F                    7170 	ld	l, a
      001E01 19                    7171 	add	hl, de
      001E02 E5                    7172 	push	hl
      001E03 7D                    7173 	ld	a, l
      001E04 F8 08                 7174 	ldhl	sp,	#8
      001E06 77                    7175 	ld	(hl), a
      001E07 E1                    7176 	pop	hl
      001E08 7C                    7177 	ld	a, h
      001E09 F8 07                 7178 	ldhl	sp,	#7
      001E0B 77                    7179 	ld	(hl), a
      001E0C CB 2E                 7180 	sra	(hl)
      001E0E 2B                    7181 	dec	hl
      001E0F CB 1E                 7182 	rr	(hl)
      001E11 23                    7183 	inc	hl
      001E12 CB 2E                 7184 	sra	(hl)
      001E14 2B                    7185 	dec	hl
      001E15 CB 1E                 7186 	rr	(hl)
      001E17 23                    7187 	inc	hl
      001E18 CB 2E                 7188 	sra	(hl)
      001E1A 2B                    7189 	dec	hl
      001E1B CB 1E                 7190 	rr	(hl)
      001E1D 11 20 00              7191 	ld	de, #0x0020
      001E20 D5                    7192 	push	de
      001E21 2A                    7193 	ld	a, (hl+)
      001E22 5F                    7194 	ld	e, a
      001E23 56                    7195 	ld	d, (hl)
      001E24 D5                    7196 	push	de
      001E25 CDr00r00              7197 	call	__modsint
      001E28 E8 04                 7198 	add	sp, #4
      001E2A F8 06                 7199 	ldhl	sp,	#6
      001E2C 7B                    7200 	ld	a, e
      001E2D 22                    7201 	ld	(hl+), a
      001E2E 72                    7202 	ld	(hl), d
      001E2F F8 06                 7203 	ldhl	sp,	#6
      001E31 2A                    7204 	ld	a, (hl+)
      001E32 77                    7205 	ld	(hl), a
                                   7206 ;src/main.c:713: ind = 32*bgindY + bgindX;
      001E33 3A                    7207 	ld	a, (hl-)
      001E34 22                    7208 	ld	(hl+), a
      001E35 36 00                 7209 	ld	(hl), #0x00
      001E37 3E 05                 7210 	ld	a, #0x05
      001E39                       7211 00352$:
      001E39 F8 06                 7212 	ldhl	sp,	#6
      001E3B CB 26                 7213 	sla	(hl)
      001E3D 23                    7214 	inc	hl
      001E3E CB 16                 7215 	rl	(hl)
      001E40 3D                    7216 	dec	a
      001E41 20 F6                 7217 	jr	NZ, 00352$
      001E43 2B                    7218 	dec	hl
      001E44 3A                    7219 	ld	a, (hl-)
      001E45 2B                    7220 	dec	hl
      001E46 77                    7221 	ld	(hl), a
      001E47 F8 07                 7222 	ldhl	sp,	#7
      001E49 3A                    7223 	ld	a, (hl-)
      001E4A 2B                    7224 	dec	hl
      001E4B 77                    7225 	ld	(hl), a
      001E4C D1                    7226 	pop	de
      001E4D D5                    7227 	push	de
      001E4E 3A                    7228 	ld	a, (hl-)
      001E4F 6E                    7229 	ld	l, (hl)
      001E50 67                    7230 	ld	h, a
      001E51 19                    7231 	add	hl, de
      001E52 E5                    7232 	push	hl
      001E53 7D                    7233 	ld	a, l
      001E54 F8 08                 7234 	ldhl	sp,	#8
      001E56 77                    7235 	ld	(hl), a
      001E57 E1                    7236 	pop	hl
      001E58 7C                    7237 	ld	a, h
      001E59 F8 07                 7238 	ldhl	sp,	#7
      001E5B 77                    7239 	ld	(hl), a
                                   7240 ;src/main.c:714: result = 1;
      001E5C F8 03                 7241 	ldhl	sp,	#3
      001E5E 36 01                 7242 	ld	(hl), #0x01
                                   7243 ;src/main.c:715: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001E60 F8 06                 7244 	ldhl	sp,#6
      001E62 2A                    7245 	ld	a, (hl+)
      001E63 5F                    7246 	ld	e, a
      001E64 56                    7247 	ld	d, (hl)
      001E65 21r87r00              7248 	ld	hl, #_background1
      001E68 19                    7249 	add	hl, de
      001E69 4D                    7250 	ld	c, l
      001E6A 44                    7251 	ld	b, h
      001E6B 0A                    7252 	ld	a, (bc)
      001E6C F8 04                 7253 	ldhl	sp,	#4
      001E6E 77                    7254 	ld	(hl), a
      001E6F F8 07                 7255 	ldhl	sp,	#7
      001E71 36 00                 7256 	ld	(hl), #0x00
      001E73                       7257 00161$:
      001E73 F8 07                 7258 	ldhl	sp,	#7
      001E75 7E                    7259 	ld	a, (hl)
      001E76 F8 02                 7260 	ldhl	sp,	#2
      001E78 96                    7261 	sub	a, (hl)
      001E79 30 29                 7262 	jr	NC, 00122$
                                   7263 ;src/main.c:716: if (background1[ind] == BLANK[j] ) {
      001E7B 11r8Ar0B              7264 	ld	de, #_BLANK
      001E7E F8 07                 7265 	ldhl	sp,	#7
      001E80 6E                    7266 	ld	l, (hl)
      001E81 26 00                 7267 	ld	h, #0x00
      001E83 19                    7268 	add	hl, de
      001E84 E5                    7269 	push	hl
      001E85 7D                    7270 	ld	a, l
      001E86 F8 07                 7271 	ldhl	sp,	#7
      001E88 77                    7272 	ld	(hl), a
      001E89 E1                    7273 	pop	hl
      001E8A 7C                    7274 	ld	a, h
      001E8B F8 06                 7275 	ldhl	sp,	#6
      001E8D 32                    7276 	ld	(hl-), a
      001E8E 2A                    7277 	ld	a, (hl+)
      001E8F 5F                    7278 	ld	e, a
      001E90 3A                    7279 	ld	a, (hl-)
      001E91 2B                    7280 	dec	hl
      001E92 57                    7281 	ld	d, a
      001E93 1A                    7282 	ld	a, (de)
      001E94 4F                    7283 	ld	c, a
      001E95 7E                    7284 	ld	a, (hl)
      001E96 91                    7285 	sub	a, c
      001E97 20 06                 7286 	jr	NZ, 00162$
                                   7287 ;src/main.c:717: result = 0;
      001E99 F8 03                 7288 	ldhl	sp,	#3
      001E9B 36 00                 7289 	ld	(hl), #0x00
                                   7290 ;src/main.c:718: break;
      001E9D 18 05                 7291 	jr	00122$
      001E9F                       7292 00162$:
                                   7293 ;src/main.c:715: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001E9F F8 07                 7294 	ldhl	sp,	#7
      001EA1 34                    7295 	inc	(hl)
      001EA2 18 CF                 7296 	jr	00161$
      001EA4                       7297 00122$:
                                   7298 ;src/main.c:722: if (result == 0) {
      001EA4 F8 03                 7299 	ldhl	sp,	#3
      001EA6 7E                    7300 	ld	a, (hl)
      001EA7 B7                    7301 	or	a, a
      001EA8 C2r72r1F              7302 	jp	NZ, 00127$
                                   7303 ;src/main.c:723: playerY += ySpeed;
      001EAB FArC7r00              7304 	ld	a, (#_ySpeed)
      001EAE 4F                    7305 	ld	c, a
      001EAF 07                    7306 	rlca
      001EB0 9F                    7307 	sbc	a, a
      001EB1 21rCAr00              7308 	ld	hl, #_playerY
      001EB4 5E                    7309 	ld	e, (hl)
      001EB5 23                    7310 	inc	hl
      001EB6 56                    7311 	ld	d, (hl)
      001EB7 2B                    7312 	dec	hl
      001EB8 47                    7313 	ld	b, a
      001EB9 79                    7314 	ld	a, c
      001EBA 83                    7315 	add	a, e
      001EBB 4F                    7316 	ld	c, a
      001EBC 78                    7317 	ld	a, b
      001EBD 8A                    7318 	adc	a, d
      001EBE 47                    7319 	ld	b, a
      001EBF 79                    7320 	ld	a, c
      001EC0 22                    7321 	ld	(hl+), a
                                   7322 ;src/main.c:725: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001EC1 78                    7323 	ld	a, b
      001EC2 32                    7324 	ld	(hl-), a
      001EC3 2A                    7325 	ld	a, (hl+)
      001EC4 5F                    7326 	ld	e, a
      001EC5 56                    7327 	ld	d, (hl)
      001EC6 7A                    7328 	ld	a, d
      001EC7 D6 06                 7329 	sub	a, #0x06
      001EC9 30 05                 7330 	jr	NC, 00177$
      001ECB 11 00 06              7331 	ld	de, #0x0600
      001ECE 18 0B                 7332 	jr	00178$
      001ED0                       7333 00177$:
      001ED0 3E C0                 7334 	ld	a, #0xc0
      001ED2 BB                    7335 	cp	a, e
      001ED3 3E 09                 7336 	ld	a, #0x09
      001ED5 9A                    7337 	sbc	a, d
      001ED6 30 03                 7338 	jr	NC, 00179$
      001ED8 11 C0 09              7339 	ld	de, #0x09c0
      001EDB                       7340 00179$:
      001EDB                       7341 00178$:
      001EDB 4B                    7342 	ld	c, e
      001EDC 42                    7343 	ld	b, d
                                   7344 ;src/main.c:727: yOverflow = (playerY - limitedPlayerY);
      001EDD FArCAr00              7345 	ld	a, (#_playerY)
      001EE0 93                    7346 	sub	a, e
      001EE1 EArD4r00              7347 	ld	(#_yOverflow),a
      001EE4 FArCBr00              7348 	ld	a, (#_playerY + 1)
      001EE7 9A                    7349 	sbc	a, d
      001EE8 21rD5r00              7350 	ld	hl, #_yOverflow + 1
                                   7351 ;src/main.c:728: if (yOverflow >= 0) {
      001EEB 32                    7352 	ld	(hl-), a
      001EEC 6E                    7353 	ld	l, (hl)
                                   7354 ;	spillPairReg hl
                                   7355 ;	spillPairReg hl
      001EED FArD5r00              7356 	ld	a, (_yOverflow + 1)
                                   7357 ;	spillPairReg hl
                                   7358 ;	spillPairReg hl
      001EF0 CB 7F                 7359 	bit	7,a
      001EF2 20 22                 7360 	jr	NZ, 00124$
                                   7361 ;src/main.c:729: yOverflow = yOverflow >> 5;
      001EF4 21rD5r00              7362 	ld	hl, #_yOverflow + 1
      001EF7 CB 2E                 7363 	sra	(hl)
      001EF9 2B                    7364 	dec	hl
      001EFA CB 1E                 7365 	rr	(hl)
      001EFC 23                    7366 	inc	hl
      001EFD CB 2E                 7367 	sra	(hl)
      001EFF 2B                    7368 	dec	hl
      001F00 CB 1E                 7369 	rr	(hl)
      001F02 23                    7370 	inc	hl
      001F03 CB 2E                 7371 	sra	(hl)
      001F05 2B                    7372 	dec	hl
      001F06 CB 1E                 7373 	rr	(hl)
      001F08 23                    7374 	inc	hl
      001F09 CB 2E                 7375 	sra	(hl)
      001F0B 2B                    7376 	dec	hl
      001F0C CB 1E                 7377 	rr	(hl)
      001F0E 23                    7378 	inc	hl
      001F0F CB 2E                 7379 	sra	(hl)
      001F11 2B                    7380 	dec	hl
      001F12 CB 1E                 7381 	rr	(hl)
      001F14 18 25                 7382 	jr	00125$
      001F16                       7383 00124$:
                                   7384 ;src/main.c:732: yOverflow = -((-yOverflow) >> 5);
      001F16 AF                    7385 	xor	a, a
      001F17 21rD4r00              7386 	ld	hl, #_yOverflow
      001F1A 96                    7387 	sub	a, (hl)
      001F1B 23                    7388 	inc	hl
      001F1C 5F                    7389 	ld	e, a
      001F1D 9F                    7390 	sbc	a, a
      001F1E 96                    7391 	sub	a, (hl)
      001F1F 2B                    7392 	dec	hl
      001F20 57                    7393 	ld	d, a
      001F21 CB 2A                 7394 	sra	d
      001F23 CB 1B                 7395 	rr	e
      001F25 CB 2A                 7396 	sra	d
      001F27 CB 1B                 7397 	rr	e
      001F29 CB 2A                 7398 	sra	d
      001F2B CB 1B                 7399 	rr	e
      001F2D CB 2A                 7400 	sra	d
      001F2F CB 1B                 7401 	rr	e
      001F31 CB 2A                 7402 	sra	d
      001F33 CB 1B                 7403 	rr	e
      001F35 AF                    7404 	xor	a, a
      001F36 93                    7405 	sub	a, e
      001F37 22                    7406 	ld	(hl+), a
      001F38 9F                    7407 	sbc	a, a
      001F39 92                    7408 	sub	a, d
      001F3A 77                    7409 	ld	(hl), a
      001F3B                       7410 00125$:
                                   7411 ;src/main.c:734: bgY += yOverflow;
      001F3B FArD0r00              7412 	ld	a, (#_bgY)
      001F3E 21rD4r00              7413 	ld	hl, #_yOverflow
      001F41 86                    7414 	add	a, (hl)
      001F42 21rD0r00              7415 	ld	hl, #_bgY
      001F45 22                    7416 	ld	(hl+), a
      001F46 7E                    7417 	ld	a, (hl)
      001F47 21rD5r00              7418 	ld	hl, #_yOverflow + 1
      001F4A 8E                    7419 	adc	a, (hl)
      001F4B EArD1r00              7420 	ld	(#_bgY + 1),a
                                   7421 ;src/main.c:735: playerY = limitedPlayerY;
      001F4E 21rCAr00              7422 	ld	hl, #_playerY
      001F51 79                    7423 	ld	a, c
      001F52 22                    7424 	ld	(hl+), a
                                   7425 ;src/main.c:736: playerDrawY=playerY >> 5;
      001F53 78                    7426 	ld	a, b
      001F54 32                    7427 	ld	(hl-), a
      001F55 2A                    7428 	ld	a, (hl+)
      001F56 4F                    7429 	ld	c, a
      001F57 46                    7430 	ld	b, (hl)
      001F58 CB 38                 7431 	srl	b
      001F5A CB 19                 7432 	rr	c
      001F5C CB 38                 7433 	srl	b
      001F5E CB 19                 7434 	rr	c
      001F60 CB 38                 7435 	srl	b
      001F62 CB 19                 7436 	rr	c
      001F64 CB 38                 7437 	srl	b
      001F66 CB 19                 7438 	rr	c
      001F68 CB 38                 7439 	srl	b
      001F6A CB 19                 7440 	rr	c
      001F6C 21rCDr00              7441 	ld	hl, #_playerDrawY
      001F6F 71                    7442 	ld	(hl), c
      001F70 18 05                 7443 	jr	00128$
      001F72                       7444 00127$:
                                   7445 ;src/main.c:741: ySpeed = 0;
      001F72 21rC7r00              7446 	ld	hl, #_ySpeed
      001F75 36 00                 7447 	ld	(hl), #0x00
      001F77                       7448 00128$:
                                   7449 ;src/main.c:641: uint8_t xCollisionPoint = playerDrawX; 
      001F77 FArCCr00              7450 	ld	a, (#_playerDrawX)
      001F7A F8 07                 7451 	ldhl	sp,	#7
      001F7C 77                    7452 	ld	(hl), a
                                   7453 ;src/main.c:700: yCollisionPoint = playerDrawY +8; //bottom edge
      001F7D FArCDr00              7454 	ld	a, (#_playerDrawY)
      001F80 C6 08                 7455 	add	a, #0x08
      001F82 F8 06                 7456 	ldhl	sp,	#6
      001F84 77                    7457 	ld	(hl), a
                                   7458 ;src/main.c:744: if (xDir >= 0) {
      001F85 FArC4r00              7459 	ld	a, (#_xDir)
      001F88 CB 7F                 7460 	bit	7, a
      001F8A 20 2A                 7461 	jr	NZ, 00130$
                                   7462 ;src/main.c:745: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   7463 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7464 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001F8C 11r00r00              7465 	ld	de, #_shadow_OAM
      001F8F F8 06                 7466 	ldhl	sp,	#6
      001F91 2A                    7467 	ld	a, (hl+)
      001F92 12                    7468 	ld	(de), a
      001F93 11r01r00              7469 	ld	de, #(_shadow_OAM + 1)
      001F96 7E                    7470 	ld	a, (hl)
      001F97 12                    7471 	ld	(de), a
                                   7472 ;src/main.c:747: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001F98 FArCDr00              7473 	ld	a, (#_playerDrawY)
      001F9B F8 07                 7474 	ldhl	sp,	#7
      001F9D 77                    7475 	ld	(hl), a
      001F9E 3A                    7476 	ld	a, (hl-)
      001F9F C6 08                 7477 	add	a, #0x08
      001FA1 77                    7478 	ld	(hl), a
      001FA2 FArCCr00              7479 	ld	a, (#_playerDrawX)
      001FA5 C6 08                 7480 	add	a, #0x08
      001FA7 F8 07                 7481 	ldhl	sp,	#7
                                   7482 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7483 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FA9 32                    7484 	ld	(hl-), a
      001FAA 11r04r00              7485 	ld	de, #(_shadow_OAM + 4)
      001FAD 2A                    7486 	ld	a, (hl+)
      001FAE 12                    7487 	ld	(de), a
      001FAF 11r05r00              7488 	ld	de, #(_shadow_OAM + 5)
      001FB2 7E                    7489 	ld	a, (hl)
      001FB3 12                    7490 	ld	(de), a
                                   7491 ;src/main.c:747: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001FB4 18 28                 7492 	jr	00131$
      001FB6                       7493 00130$:
                                   7494 ;src/main.c:750: move_sprite(1, playerDrawX , playerDrawY +8);
                                   7495 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001FB6 01r04r00              7496 	ld	bc, #(_shadow_OAM + 4)
                                   7497 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FB9 F8 06                 7498 	ldhl	sp,	#6
      001FBB 2A                    7499 	ld	a, (hl+)
      001FBC 02                    7500 	ld	(bc), a
      001FBD 03                    7501 	inc	bc
      001FBE 7E                    7502 	ld	a, (hl)
      001FBF 02                    7503 	ld	(bc), a
                                   7504 ;src/main.c:752: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001FC0 FArCDr00              7505 	ld	a, (#_playerDrawY)
      001FC3 F8 07                 7506 	ldhl	sp,	#7
      001FC5 77                    7507 	ld	(hl), a
      001FC6 3A                    7508 	ld	a, (hl-)
      001FC7 C6 08                 7509 	add	a, #0x08
      001FC9 77                    7510 	ld	(hl), a
      001FCA FArCCr00              7511 	ld	a, (#_playerDrawX)
      001FCD F8 07                 7512 	ldhl	sp,	#7
      001FCF 77                    7513 	ld	(hl), a
      001FD0 7E                    7514 	ld	a, (hl)
      001FD1 C6 08                 7515 	add	a, #0x08
                                   7516 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   7517 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001FD3 32                    7518 	ld	(hl-), a
      001FD4 11r00r00              7519 	ld	de, #_shadow_OAM
      001FD7 2A                    7520 	ld	a, (hl+)
      001FD8 12                    7521 	ld	(de), a
      001FD9 11r01r00              7522 	ld	de, #(_shadow_OAM + 1)
      001FDC 7E                    7523 	ld	a, (hl)
      001FDD 12                    7524 	ld	(de), a
                                   7525 ;src/main.c:752: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001FDE                       7526 00131$:
                                   7527 ;src/main.c:757: if (bgX >= 256) {
      001FDE 21rCEr00              7528 	ld	hl, #_bgX
      001FE1 2A                    7529 	ld	a, (hl+)
      001FE2 4F                    7530 	ld	c, a
      001FE3 46                    7531 	ld	b, (hl)
      001FE4 78                    7532 	ld	a, b
      001FE5 EE 80                 7533 	xor	a, #0x80
      001FE7 D6 81                 7534 	sub	a, #0x81
      001FE9 38 0F                 7535 	jr	C, 00133$
                                   7536 ;src/main.c:758: bgX = bgX % 256;
      001FEB AF                    7537 	xor	a, a
      001FEC 3C                    7538 	inc	a
      001FED F5                    7539 	push	af
      001FEE C5                    7540 	push	bc
      001FEF CDr00r00              7541 	call	__modsint
      001FF2 E8 04                 7542 	add	sp, #4
      001FF4 21rCEr00              7543 	ld	hl, #_bgX
      001FF7 7B                    7544 	ld	a, e
      001FF8 22                    7545 	ld	(hl+), a
      001FF9 72                    7546 	ld	(hl), d
      001FFA                       7547 00133$:
                                   7548 ;src/main.c:760: if (bgX < 0) {
      001FFA 21rCEr00              7549 	ld	hl, #_bgX
      001FFD 2A                    7550 	ld	a, (hl+)
      001FFE 4F                    7551 	ld	c, a
      001FFF 46                    7552 	ld	b, (hl)
      002000 CB 78                 7553 	bit	7, b
      002002 28 15                 7554 	jr	Z, 00135$
                                   7555 ;src/main.c:761: bgX = 255 - (bgX % 256);
      002004 AF                    7556 	xor	a, a
      002005 3C                    7557 	inc	a
      002006 F5                    7558 	push	af
      002007 C5                    7559 	push	bc
      002008 CDr00r00              7560 	call	__modsint
      00200B E8 04                 7561 	add	sp, #4
      00200D 3E FF                 7562 	ld	a, #0xff
      00200F 93                    7563 	sub	a, e
      002010 4F                    7564 	ld	c, a
      002011 9F                    7565 	sbc	a, a
      002012 92                    7566 	sub	a, d
      002013 21rCEr00              7567 	ld	hl, #_bgX
      002016 71                    7568 	ld	(hl), c
      002017 23                    7569 	inc	hl
      002018 77                    7570 	ld	(hl), a
      002019                       7571 00135$:
                                   7572 ;src/main.c:763: if (bgY >= 256) {
      002019 21rD0r00              7573 	ld	hl, #_bgY
      00201C 2A                    7574 	ld	a, (hl+)
      00201D 4F                    7575 	ld	c, a
      00201E 46                    7576 	ld	b, (hl)
      00201F 78                    7577 	ld	a, b
      002020 EE 80                 7578 	xor	a, #0x80
      002022 D6 81                 7579 	sub	a, #0x81
      002024 38 0F                 7580 	jr	C, 00137$
                                   7581 ;src/main.c:764: bgY = bgY % 256;
      002026 AF                    7582 	xor	a, a
      002027 3C                    7583 	inc	a
      002028 F5                    7584 	push	af
      002029 C5                    7585 	push	bc
      00202A CDr00r00              7586 	call	__modsint
      00202D E8 04                 7587 	add	sp, #4
      00202F 21rD0r00              7588 	ld	hl, #_bgY
      002032 7B                    7589 	ld	a, e
      002033 22                    7590 	ld	(hl+), a
      002034 72                    7591 	ld	(hl), d
      002035                       7592 00137$:
                                   7593 ;src/main.c:766: if (bgY < 0) {
      002035 21rD0r00              7594 	ld	hl, #_bgY
      002038 2A                    7595 	ld	a, (hl+)
      002039 4F                    7596 	ld	c, a
      00203A 46                    7597 	ld	b, (hl)
      00203B CB 78                 7598 	bit	7, b
      00203D 28 15                 7599 	jr	Z, 00139$
                                   7600 ;src/main.c:767: bgY = 255 - (bgY % 256);
      00203F AF                    7601 	xor	a, a
      002040 3C                    7602 	inc	a
      002041 F5                    7603 	push	af
      002042 C5                    7604 	push	bc
      002043 CDr00r00              7605 	call	__modsint
      002046 E8 04                 7606 	add	sp, #4
      002048 3E FF                 7607 	ld	a, #0xff
      00204A 93                    7608 	sub	a, e
      00204B 4F                    7609 	ld	c, a
      00204C 9F                    7610 	sbc	a, a
      00204D 92                    7611 	sub	a, d
      00204E 21rD0r00              7612 	ld	hl, #_bgY
      002051 71                    7613 	ld	(hl), c
      002052 23                    7614 	inc	hl
      002053 77                    7615 	ld	(hl), a
      002054                       7616 00139$:
                                   7617 ;src/main.c:770: move_bkg(bgX, bgY);
      002054 21rD0r00              7618 	ld	hl, #_bgY
      002057 4E                    7619 	ld	c, (hl)
      002058 FArCEr00              7620 	ld	a, (#_bgX)
      00205B E0r00                 7621 	ldh	(_SCX_REG + 0), a
                                   7622 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00205D 79                    7623 	ld	a, c
      00205E E0r00                 7624 	ldh	(_SCY_REG + 0), a
                                   7625 ;src/main.c:773: if (ySpeed > 0) ySpeed--;
      002060 21rC7r00              7626 	ld	hl, #_ySpeed
      002063 5E                    7627 	ld	e, (hl)
      002064 AF                    7628 	xor	a, a
      002065 57                    7629 	ld	d, a
      002066 96                    7630 	sub	a, (hl)
      002067 CB 7B                 7631 	bit	7, e
      002069 28 07                 7632 	jr	Z, 00355$
      00206B CB 7A                 7633 	bit	7, d
      00206D 20 08                 7634 	jr	NZ, 00356$
      00206F BF                    7635 	cp	a, a
      002070 18 05                 7636 	jr	00356$
      002072                       7637 00355$:
      002072 CB 7A                 7638 	bit	7, d
      002074 28 01                 7639 	jr	Z, 00356$
      002076 37                    7640 	scf
      002077                       7641 00356$:
      002077 30 04                 7642 	jr	NC, 00141$
      002079 21rC7r00              7643 	ld	hl, #_ySpeed
      00207C 35                    7644 	dec	(hl)
      00207D                       7645 00141$:
                                   7646 ;src/main.c:774: if (ySpeed < 0) ySpeed++;
      00207D 21rC7r00              7647 	ld	hl, #_ySpeed
      002080 CB 7E                 7648 	bit	7, (hl)
      002082 28 01                 7649 	jr	Z, 00143$
      002084 34                    7650 	inc	(hl)
      002085                       7651 00143$:
                                   7652 ;src/main.c:775: if (xSpeed > 0) xSpeed--;
      002085 21rC6r00              7653 	ld	hl, #_xSpeed
      002088 5E                    7654 	ld	e, (hl)
      002089 AF                    7655 	xor	a, a
      00208A 57                    7656 	ld	d, a
      00208B 96                    7657 	sub	a, (hl)
      00208C CB 7B                 7658 	bit	7, e
      00208E 28 07                 7659 	jr	Z, 00357$
      002090 CB 7A                 7660 	bit	7, d
      002092 20 08                 7661 	jr	NZ, 00358$
      002094 BF                    7662 	cp	a, a
      002095 18 05                 7663 	jr	00358$
      002097                       7664 00357$:
      002097 CB 7A                 7665 	bit	7, d
      002099 28 01                 7666 	jr	Z, 00358$
      00209B 37                    7667 	scf
      00209C                       7668 00358$:
      00209C 30 04                 7669 	jr	NC, 00145$
      00209E 21rC6r00              7670 	ld	hl, #_xSpeed
      0020A1 35                    7671 	dec	(hl)
      0020A2                       7672 00145$:
                                   7673 ;src/main.c:776: if (xSpeed < 0) xSpeed++;
      0020A2 21rC6r00              7674 	ld	hl, #_xSpeed
      0020A5 CB 7E                 7675 	bit	7, (hl)
      0020A7 28 01                 7676 	jr	Z, 00163$
      0020A9 34                    7677 	inc	(hl)
      0020AA                       7678 00163$:
                                   7679 ;src/main.c:780: }
      0020AA E8 08                 7680 	add	sp, #8
      0020AC C9                    7681 	ret
                                   7682 ;src/main.c:782: void takeDamage(int16_t amount) {
                                   7683 ;	---------------------------------
                                   7684 ; Function takeDamage
                                   7685 ; ---------------------------------
      0020AD                       7686 _takeDamage::
      0020AD 3B                    7687 	dec	sp
                                   7688 ;src/main.c:783: if (amount > shield) {
      0020AE FArF7r00              7689 	ld	a, (#_shield)
      0020B1 4F                    7690 	ld	c, a
      0020B2 07                    7691 	rlca
      0020B3 9F                    7692 	sbc	a, a
      0020B4 47                    7693 	ld	b, a
                                   7694 ;src/main.c:785: hull -= (amount - shield);
      0020B5 F8 03                 7695 	ldhl	sp,	#3
      0020B7 7E                    7696 	ld	a, (hl)
      0020B8 F8 00                 7697 	ldhl	sp,	#0
      0020BA 77                    7698 	ld	(hl), a
                                   7699 ;src/main.c:783: if (amount > shield) {
      0020BB F8 03                 7700 	ldhl	sp,	#3
      0020BD 79                    7701 	ld	a, c
      0020BE 96                    7702 	sub	a, (hl)
      0020BF 23                    7703 	inc	hl
      0020C0 78                    7704 	ld	a, b
      0020C1 9E                    7705 	sbc	a, (hl)
      0020C2 78                    7706 	ld	a, b
      0020C3 57                    7707 	ld	d, a
      0020C4 CB 7E                 7708 	bit	7, (hl)
      0020C6 28 07                 7709 	jr	Z, 00111$
      0020C8 CB 7A                 7710 	bit	7, d
      0020CA 20 08                 7711 	jr	NZ, 00112$
      0020CC BF                    7712 	cp	a, a
      0020CD 18 05                 7713 	jr	00112$
      0020CF                       7714 00111$:
      0020CF CB 7A                 7715 	bit	7, d
      0020D1 28 01                 7716 	jr	Z, 00112$
      0020D3 37                    7717 	scf
      0020D4                       7718 00112$:
      0020D4 30 10                 7719 	jr	NC, 00102$
                                   7720 ;src/main.c:784: shield = 0;
      0020D6 21rF7r00              7721 	ld	hl, #_shield
      0020D9 36 00                 7722 	ld	(hl), #0x00
                                   7723 ;src/main.c:785: hull -= (amount - shield);
      0020DB FArF6r00              7724 	ld	a, (#_hull)
      0020DE F8 00                 7725 	ldhl	sp,	#0
      0020E0 96                    7726 	sub	a, (hl)
      0020E1 EArF6r00              7727 	ld	(#_hull),a
      0020E4 18 09                 7728 	jr	00104$
      0020E6                       7729 00102$:
                                   7730 ;src/main.c:788: shield -= amount;
      0020E6 FArF7r00              7731 	ld	a, (#_shield)
      0020E9 F8 00                 7732 	ldhl	sp,	#0
      0020EB 96                    7733 	sub	a, (hl)
      0020EC EArF7r00              7734 	ld	(#_shield),a
      0020EF                       7735 00104$:
                                   7736 ;src/main.c:790: }
      0020EF 33                    7737 	inc	sp
      0020F0 C9                    7738 	ret
                                   7739 ;src/main.c:792: void spawnPickup(int16_t x, int16_t y) {
                                   7740 ;	---------------------------------
                                   7741 ; Function spawnPickup
                                   7742 ; ---------------------------------
      0020F1                       7743 _spawnPickup::
                                   7744 ;src/main.c:793: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      0020F1 CDr00r00              7745 	call	_rand
      0020F4 7B                    7746 	ld	a, e
      0020F5 E6 0F                 7747 	and	a, #0x0f
      0020F7 C0                    7748 	ret	NZ
                                   7749 ;src/main.c:794: if (spawn == 0) {
                                   7750 ;src/main.c:795: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      0020F8 CDr00r00              7751 	call	_rand
      0020FB 7B                    7752 	ld	a, e
      0020FC E6 03                 7753 	and	a, #0x03
                                   7754 ;src/main.c:796: if (type == 0) {
      0020FE 5F                    7755 	ld	e,a
      0020FF B7                    7756 	or	a, a
      002100 20 13                 7757 	jr	NZ, 00106$
                                   7758 ;src/main.c:797: pickup = health;
      002102 11 09 00              7759 	ld	de, #0x0009
      002105 D5                    7760 	push	de
      002106 11r1Ar07              7761 	ld	de, #_health
      002109 D5                    7762 	push	de
      00210A 11rFAr00              7763 	ld	de, #_pickup
      00210D D5                    7764 	push	de
      00210E CDr00r00              7765 	call	___memcpy
      002111 E8 06                 7766 	add	sp, #6
      002113 18 31                 7767 	jr	00107$
      002115                       7768 00106$:
                                   7769 ;src/main.c:799: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      002115 1D                    7770 	dec	e
      002116 20 1D                 7771 	jr	NZ, 00102$
      002118 21rA3r0B              7772 	ld	hl, #_MAXGUNLEVEL
      00211B 4E                    7773 	ld	c, (hl)
      00211C FArD7r00              7774 	ld	a, (#_gunLevel)
      00211F 91                    7775 	sub	a, c
      002120 30 13                 7776 	jr	NC, 00102$
                                   7777 ;src/main.c:800: pickup = upgrade;
      002122 11 09 00              7778 	ld	de, #0x0009
      002125 D5                    7779 	push	de
      002126 11r08r07              7780 	ld	de, #_upgrade
      002129 D5                    7781 	push	de
      00212A 11rFAr00              7782 	ld	de, #_pickup
      00212D D5                    7783 	push	de
      00212E CDr00r00              7784 	call	___memcpy
      002131 E8 06                 7785 	add	sp, #6
      002133 18 11                 7786 	jr	00107$
      002135                       7787 00102$:
                                   7788 ;src/main.c:803: pickup = ammo;
      002135 01r11r07              7789 	ld	bc, #_ammo
      002138 11rFAr00              7790 	ld	de, #_pickup
      00213B 21 09 00              7791 	ld	hl, #0x0009
      00213E E5                    7792 	push	hl
      00213F C5                    7793 	push	bc
      002140 D5                    7794 	push	de
      002141 CDr00r00              7795 	call	___memcpy
      002144 E8 06                 7796 	add	sp, #6
      002146                       7797 00107$:
                                   7798 ;src/main.c:805: pickup.active = 1;
      002146 21rFFr00              7799 	ld	hl, #(_pickup + 5)
      002149 36 01                 7800 	ld	(hl), #0x01
                                   7801 ;src/main.c:807: pickup.x = x;
      00214B 11rFBr00              7802 	ld	de, #(_pickup + 1)
      00214E F8 02                 7803 	ldhl	sp,	#2
      002150 2A                    7804 	ld	a, (hl+)
      002151 12                    7805 	ld	(de), a
      002152 13                    7806 	inc	de
                                   7807 ;src/main.c:808: pickup.y = y;
      002153 2A                    7808 	ld	a, (hl+)
      002154 12                    7809 	ld	(de), a
      002155 11rFDr00              7810 	ld	de, #(_pickup + 3)
      002158 2A                    7811 	ld	a, (hl+)
      002159 12                    7812 	ld	(de), a
      00215A 13                    7813 	inc	de
      00215B 7E                    7814 	ld	a, (hl)
      00215C 12                    7815 	ld	(de), a
                                   7816 ;src/main.c:810: set_sprite_tile(3, pickup.tile); //0x7f
      00215D 21r02r01              7817 	ld	hl, #(_pickup + 8)
      002160 4E                    7818 	ld	c, (hl)
                                   7819 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002161 21r0Er00              7820 	ld	hl, #(_shadow_OAM + 14)
      002164 71                    7821 	ld	(hl), c
                                   7822 ;src/main.c:810: set_sprite_tile(3, pickup.tile); //0x7f
                                   7823 ;src/main.c:816: }
      002165 C9                    7824 	ret
                                   7825 ;src/main.c:818: void killEnemy(uint8_t i) {
                                   7826 ;	---------------------------------
                                   7827 ; Function killEnemy
                                   7828 ; ---------------------------------
      002166                       7829 _killEnemy::
      002166 E8 FC                 7830 	add	sp, #-4
                                   7831 ;src/main.c:819: set_sprite_tile(10+(i<<1), 0x7f);
      002168 F8 06                 7832 	ldhl	sp,	#6
      00216A 7E                    7833 	ld	a, (hl)
      00216B 87                    7834 	add	a, a
      00216C 4F                    7835 	ld	c, a
      00216D C6 0A                 7836 	add	a, #0x0a
                                   7837 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00216F 6F                    7838 	ld	l, a
      002170 11r00r00              7839 	ld	de, #_shadow_OAM+0
                                   7840 ;	spillPairReg hl
                                   7841 ;	spillPairReg hl
      002173 26 00                 7842 	ld	h, #0x00
                                   7843 ;	spillPairReg hl
                                   7844 ;	spillPairReg hl
      002175 29                    7845 	add	hl, hl
      002176 29                    7846 	add	hl, hl
      002177 19                    7847 	add	hl, de
      002178 23                    7848 	inc	hl
      002179 23                    7849 	inc	hl
      00217A 36 7F                 7850 	ld	(hl), #0x7f
                                   7851 ;src/main.c:820: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00217C 79                    7852 	ld	a, c
      00217D C6 0B                 7853 	add	a, #0x0b
                                   7854 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00217F 6F                    7855 	ld	l, a
      002180 01r00r00              7856 	ld	bc, #_shadow_OAM+0
                                   7857 ;	spillPairReg hl
                                   7858 ;	spillPairReg hl
      002183 26 00                 7859 	ld	h, #0x00
                                   7860 ;	spillPairReg hl
                                   7861 ;	spillPairReg hl
      002185 29                    7862 	add	hl, hl
      002186 29                    7863 	add	hl, hl
      002187 09                    7864 	add	hl, bc
      002188 23                    7865 	inc	hl
      002189 23                    7866 	inc	hl
      00218A 36 7F                 7867 	ld	(hl), #0x7f
                                   7868 ;src/main.c:822: spawnPickup(enemies[i].x, enemies[i].y);
      00218C F8 06                 7869 	ldhl	sp,	#6
      00218E 4E                    7870 	ld	c, (hl)
      00218F 06 00                 7871 	ld	b, #0x00
      002191 69                    7872 	ld	l, c
      002192 60                    7873 	ld	h, b
      002193 29                    7874 	add	hl, hl
      002194 29                    7875 	add	hl, hl
      002195 29                    7876 	add	hl, hl
      002196 09                    7877 	add	hl, bc
      002197 29                    7878 	add	hl, hl
      002198 01r5Ar00              7879 	ld	bc,#_enemies
      00219B 09                    7880 	add	hl,bc
      00219C 33                    7881 	inc	sp
      00219D 33                    7882 	inc	sp
      00219E 5D                    7883 	ld	e, l
      00219F 54                    7884 	ld	d, h
      0021A0 D5                    7885 	push	de
      0021A1 21 02 00              7886 	ld	hl, #0x0002
      0021A4 19                    7887 	add	hl, de
      0021A5 E5                    7888 	push	hl
      0021A6 7D                    7889 	ld	a, l
      0021A7 F8 04                 7890 	ldhl	sp,	#4
      0021A9 77                    7891 	ld	(hl), a
      0021AA E1                    7892 	pop	hl
      0021AB 7C                    7893 	ld	a, h
      0021AC F8 03                 7894 	ldhl	sp,	#3
      0021AE 32                    7895 	ld	(hl-), a
      0021AF 2A                    7896 	ld	a, (hl+)
      0021B0 5F                    7897 	ld	e, a
      0021B1 56                    7898 	ld	d, (hl)
      0021B2 1A                    7899 	ld	a, (de)
      0021B3 4F                    7900 	ld	c, a
      0021B4 13                    7901 	inc	de
      0021B5 1A                    7902 	ld	a, (de)
      0021B6 47                    7903 	ld	b, a
      0021B7 D1                    7904 	pop	de
      0021B8 D5                    7905 	push	de
      0021B9 1A                    7906 	ld	a, (de)
      0021BA 6F                    7907 	ld	l, a
                                   7908 ;	spillPairReg hl
                                   7909 ;	spillPairReg hl
      0021BB 13                    7910 	inc	de
      0021BC 1A                    7911 	ld	a, (de)
      0021BD 67                    7912 	ld	h, a
                                   7913 ;	spillPairReg hl
                                   7914 ;	spillPairReg hl
      0021BE C5                    7915 	push	bc
      0021BF E5                    7916 	push	hl
      0021C0 CDrF1r20              7917 	call	_spawnPickup
      0021C3 E8 04                 7918 	add	sp, #4
                                   7919 ;src/main.c:824: enemies[i].alive = 0;
      0021C5 D1                    7920 	pop	de
      0021C6 D5                    7921 	push	de
      0021C7 21 09 00              7922 	ld	hl, #0x0009
      0021CA 19                    7923 	add	hl, de
      0021CB 4D                    7924 	ld	c, l
      0021CC 44                    7925 	ld	b, h
      0021CD AF                    7926 	xor	a, a
      0021CE 02                    7927 	ld	(bc), a
                                   7928 ;src/main.c:825: enemies[i].visible = 0;
      0021CF D1                    7929 	pop	de
      0021D0 D5                    7930 	push	de
      0021D1 21 0A 00              7931 	ld	hl, #0x000a
      0021D4 19                    7932 	add	hl, de
      0021D5 4D                    7933 	ld	c, l
      0021D6 44                    7934 	ld	b, h
      0021D7 AF                    7935 	xor	a, a
      0021D8 02                    7936 	ld	(bc), a
                                   7937 ;src/main.c:827: playSound(0);
      0021D9 AF                    7938 	xor	a, a
      0021DA F5                    7939 	push	af
      0021DB 33                    7940 	inc	sp
      0021DC CDr96r0F              7941 	call	_playSound
      0021DF 33                    7942 	inc	sp
                                   7943 ;src/main.c:828: incrementScore();
      0021E0 CDr58r0D              7944 	call	_incrementScore
                                   7945 ;src/main.c:829: updateScore();
      0021E3 CDrBAr0C              7946 	call	_updateScore
                                   7947 ;src/main.c:831: explosions[oldestEx].visible = 1;
      0021E6 21rECr00              7948 	ld	hl, #_oldestEx
      0021E9 4E                    7949 	ld	c, (hl)
      0021EA 06 00                 7950 	ld	b, #0x00
      0021EC 69                    7951 	ld	l, c
      0021ED 60                    7952 	ld	h, b
      0021EE 29                    7953 	add	hl, hl
      0021EF 09                    7954 	add	hl, bc
      0021F0 29                    7955 	add	hl, hl
      0021F1 01r03r01              7956 	ld	bc,#_explosions
      0021F4 09                    7957 	add	hl,bc
      0021F5 36 01                 7958 	ld	(hl), #0x01
                                   7959 ;src/main.c:832: explosions[oldestEx].x = enemies[i].x;
      0021F7 21rECr00              7960 	ld	hl, #_oldestEx
      0021FA 4E                    7961 	ld	c, (hl)
      0021FB 06 00                 7962 	ld	b, #0x00
      0021FD 69                    7963 	ld	l, c
      0021FE 60                    7964 	ld	h, b
      0021FF 29                    7965 	add	hl, hl
      002200 09                    7966 	add	hl, bc
      002201 29                    7967 	add	hl, hl
      002202 01r03r01              7968 	ld	bc,#_explosions
      002205 09                    7969 	add	hl,bc
      002206 23                    7970 	inc	hl
      002207 4D                    7971 	ld	c, l
      002208 44                    7972 	ld	b, h
      002209 D1                    7973 	pop	de
      00220A D5                    7974 	push	de
      00220B 1A                    7975 	ld	a, (de)
      00220C 02                    7976 	ld	(bc), a
                                   7977 ;src/main.c:833: explosions[oldestEx].y = enemies[i].y;
      00220D 21rECr00              7978 	ld	hl, #_oldestEx
      002210 4E                    7979 	ld	c, (hl)
      002211 06 00                 7980 	ld	b, #0x00
      002213 69                    7981 	ld	l, c
      002214 60                    7982 	ld	h, b
      002215 29                    7983 	add	hl, hl
      002216 09                    7984 	add	hl, bc
      002217 29                    7985 	add	hl, hl
      002218 01r03r01              7986 	ld	bc,#_explosions
      00221B 09                    7987 	add	hl,bc
      00221C 23                    7988 	inc	hl
      00221D 23                    7989 	inc	hl
      00221E 4D                    7990 	ld	c, l
      00221F 44                    7991 	ld	b, h
      002220 F8 02                 7992 	ldhl	sp,#2
      002222 2A                    7993 	ld	a, (hl+)
      002223 5F                    7994 	ld	e, a
      002224 56                    7995 	ld	d, (hl)
      002225 1A                    7996 	ld	a, (de)
      002226 02                    7997 	ld	(bc), a
                                   7998 ;src/main.c:836: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      002227 CDr00r00              7999 	call	_rand
      00222A 7B                    8000 	ld	a, e
      00222B 21rA7r0B              8001 	ld	hl, #_exTileCount
      00222E 46                    8002 	ld	b, (hl)
      00222F C5                    8003 	push	bc
      002230 33                    8004 	inc	sp
      002231 F5                    8005 	push	af
      002232 33                    8006 	inc	sp
      002233 CDr00r00              8007 	call	__moduchar
      002236 E1                    8008 	pop	hl
      002237 F8 03                 8009 	ldhl	sp,	#3
      002239 73                    8010 	ld	(hl), e
                                   8011 ;src/main.c:838: explosions[oldestEx].tile = exTiles[tileNum];
      00223A 21rECr00              8012 	ld	hl, #_oldestEx
      00223D 4E                    8013 	ld	c, (hl)
      00223E 06 00                 8014 	ld	b, #0x00
      002240 69                    8015 	ld	l, c
      002241 60                    8016 	ld	h, b
      002242 29                    8017 	add	hl, hl
      002243 09                    8018 	add	hl, bc
      002244 29                    8019 	add	hl, hl
      002245 01r03r01              8020 	ld	bc,#_explosions
      002248 09                    8021 	add	hl,bc
      002249 23                    8022 	inc	hl
      00224A 23                    8023 	inc	hl
      00224B 23                    8024 	inc	hl
      00224C 23                    8025 	inc	hl
      00224D 23                    8026 	inc	hl
      00224E 4D                    8027 	ld	c, l
      00224F 44                    8028 	ld	b, h
      002250 11rEDr00              8029 	ld	de, #_exTiles+0
      002253 F8 03                 8030 	ldhl	sp,	#3
      002255 6E                    8031 	ld	l, (hl)
      002256 26 00                 8032 	ld	h, #0x00
      002258 19                    8033 	add	hl, de
      002259 5D                    8034 	ld	e, l
      00225A 54                    8035 	ld	d, h
      00225B 1A                    8036 	ld	a, (de)
      00225C 02                    8037 	ld	(bc), a
                                   8038 ;src/main.c:839: explosions[oldestEx].frame = 0;
      00225D 21rECr00              8039 	ld	hl, #_oldestEx
      002260 4E                    8040 	ld	c, (hl)
      002261 06 00                 8041 	ld	b, #0x00
      002263 69                    8042 	ld	l, c
      002264 60                    8043 	ld	h, b
      002265 29                    8044 	add	hl, hl
      002266 09                    8045 	add	hl, bc
      002267 29                    8046 	add	hl, hl
      002268 01r03r01              8047 	ld	bc,#_explosions
      00226B 09                    8048 	add	hl,bc
      00226C 23                    8049 	inc	hl
      00226D 23                    8050 	inc	hl
      00226E 23                    8051 	inc	hl
      00226F 36 00                 8052 	ld	(hl), #0x00
                                   8053 ;src/main.c:840: explosions[oldestEx].frameCounter = 0;
      002271 21rECr00              8054 	ld	hl, #_oldestEx
      002274 4E                    8055 	ld	c, (hl)
      002275 06 00                 8056 	ld	b, #0x00
      002277 69                    8057 	ld	l, c
      002278 60                    8058 	ld	h, b
      002279 29                    8059 	add	hl, hl
      00227A 09                    8060 	add	hl, bc
      00227B 29                    8061 	add	hl, hl
      00227C 01r03r01              8062 	ld	bc,#_explosions
      00227F 09                    8063 	add	hl,bc
      002280 01 04 00              8064 	ld	bc, #0x0004
      002283 09                    8065 	add	hl, bc
      002284 36 00                 8066 	ld	(hl), #0x00
                                   8067 ;src/main.c:842: set_sprite_tile(20 + oldestEx+oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      002286 21rECr00              8068 	ld	hl, #_oldestEx
      002289 4E                    8069 	ld	c, (hl)
      00228A 06 00                 8070 	ld	b, #0x00
      00228C 69                    8071 	ld	l, c
      00228D 60                    8072 	ld	h, b
      00228E 29                    8073 	add	hl, hl
      00228F 09                    8074 	add	hl, bc
      002290 29                    8075 	add	hl, hl
      002291 01r03r01              8076 	ld	bc,#_explosions
      002294 09                    8077 	add	hl,bc
      002295 5D                    8078 	ld	e, l
      002296 54                    8079 	ld	d, h
      002297 21 05 00              8080 	ld	hl, #0x0005
      00229A 19                    8081 	add	hl, de
      00229B 4E                    8082 	ld	c, (hl)
      00229C 13                    8083 	inc	de
      00229D 13                    8084 	inc	de
      00229E 13                    8085 	inc	de
      00229F 1A                    8086 	ld	a, (de)
      0022A0 87                    8087 	add	a, a
      0022A1 81                    8088 	add	a, c
      0022A2 4F                    8089 	ld	c, a
      0022A3 21rECr00              8090 	ld	hl, #_oldestEx
      0022A6 46                    8091 	ld	b, (hl)
      0022A7 78                    8092 	ld	a, b
      0022A8 C6 14                 8093 	add	a, #0x14
      0022AA 80                    8094 	add	a, b
                                   8095 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022AB 6F                    8096 	ld	l, a
      0022AC 11r00r00              8097 	ld	de, #_shadow_OAM+0
                                   8098 ;	spillPairReg hl
                                   8099 ;	spillPairReg hl
      0022AF 26 00                 8100 	ld	h, #0x00
                                   8101 ;	spillPairReg hl
                                   8102 ;	spillPairReg hl
      0022B1 29                    8103 	add	hl, hl
      0022B2 29                    8104 	add	hl, hl
      0022B3 19                    8105 	add	hl, de
      0022B4 23                    8106 	inc	hl
      0022B5 23                    8107 	inc	hl
      0022B6 71                    8108 	ld	(hl), c
                                   8109 ;src/main.c:843: set_sprite_tile(21 + oldestEx+oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      0022B7 21rECr00              8110 	ld	hl, #_oldestEx
      0022BA 4E                    8111 	ld	c, (hl)
      0022BB 06 00                 8112 	ld	b, #0x00
      0022BD 69                    8113 	ld	l, c
      0022BE 60                    8114 	ld	h, b
      0022BF 29                    8115 	add	hl, hl
      0022C0 09                    8116 	add	hl, bc
      0022C1 29                    8117 	add	hl, hl
      0022C2 01r03r01              8118 	ld	bc,#_explosions
      0022C5 09                    8119 	add	hl,bc
      0022C6 5D                    8120 	ld	e, l
      0022C7 54                    8121 	ld	d, h
      0022C8 21 05 00              8122 	ld	hl, #0x0005
      0022CB 19                    8123 	add	hl, de
      0022CC 4E                    8124 	ld	c, (hl)
      0022CD 13                    8125 	inc	de
      0022CE 13                    8126 	inc	de
      0022CF 13                    8127 	inc	de
      0022D0 1A                    8128 	ld	a, (de)
      0022D1 87                    8129 	add	a, a
      0022D2 81                    8130 	add	a, c
      0022D3 C6 02                 8131 	add	a, #0x02
      0022D5 4F                    8132 	ld	c, a
      0022D6 21rECr00              8133 	ld	hl, #_oldestEx
      0022D9 46                    8134 	ld	b, (hl)
      0022DA 78                    8135 	ld	a, b
      0022DB C6 15                 8136 	add	a, #0x15
      0022DD 80                    8137 	add	a, b
                                   8138 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022DE 6F                    8139 	ld	l, a
      0022DF 11r00r00              8140 	ld	de, #_shadow_OAM+0
                                   8141 ;	spillPairReg hl
                                   8142 ;	spillPairReg hl
      0022E2 26 00                 8143 	ld	h, #0x00
                                   8144 ;	spillPairReg hl
                                   8145 ;	spillPairReg hl
      0022E4 29                    8146 	add	hl, hl
      0022E5 29                    8147 	add	hl, hl
      0022E6 19                    8148 	add	hl, de
      0022E7 23                    8149 	inc	hl
      0022E8 23                    8150 	inc	hl
      0022E9 71                    8151 	ld	(hl), c
                                   8152 ;src/main.c:848: oldestEx++;
      0022EA 21rECr00              8153 	ld	hl, #_oldestEx
      0022ED 34                    8154 	inc	(hl)
                                   8155 ;src/main.c:849: if (oldestEx >= exCount) {
      0022EE 21rA5r0B              8156 	ld	hl, #_exCount
      0022F1 4E                    8157 	ld	c, (hl)
      0022F2 21rECr00              8158 	ld	hl, #_oldestEx
      0022F5 7E                    8159 	ld	a, (hl)
      0022F6 91                    8160 	sub	a, c
      0022F7 38 02                 8161 	jr	C, 00107$
                                   8162 ;src/main.c:850: oldestEx = 0;
      0022F9 36 00                 8163 	ld	(hl), #0x00
      0022FB                       8164 00107$:
                                   8165 ;src/main.c:854: }
      0022FB E8 04                 8166 	add	sp, #4
      0022FD C9                    8167 	ret
                                   8168 ;src/main.c:856: void checkCollision() {
                                   8169 ;	---------------------------------
                                   8170 ; Function checkCollision
                                   8171 ; ---------------------------------
      0022FE                       8172 _checkCollision::
      0022FE E8 E9                 8173 	add	sp, #-23
                                   8174 ;src/main.c:863: struct Enemy *eptr = enemies + enemyCollisionCount;
      002300 21rD6r00              8175 	ld	hl, #_enemyCollisionCount
      002303 4E                    8176 	ld	c, (hl)
      002304 06 00                 8177 	ld	b, #0x00
      002306 69                    8178 	ld	l, c
      002307 60                    8179 	ld	h, b
      002308 29                    8180 	add	hl, hl
      002309 29                    8181 	add	hl, hl
      00230A 29                    8182 	add	hl, hl
      00230B 09                    8183 	add	hl, bc
      00230C 29                    8184 	add	hl, hl
      00230D 01r5Ar00              8185 	ld	bc,#_enemies
      002310 09                    8186 	add	hl,bc
      002311 4D                    8187 	ld	c, l
      002312 7C                    8188 	ld	a, h
      002313 F8 00                 8189 	ldhl	sp,	#0
      002315 71                    8190 	ld	(hl), c
      002316 23                    8191 	inc	hl
      002317 77                    8192 	ld	(hl), a
                                   8193 ;src/main.c:864: uint8_t i = enemyCollisionCount;
      002318 FArD6r00              8194 	ld	a, (#_enemyCollisionCount)
      00231B F8 02                 8195 	ldhl	sp,	#2
      00231D 77                    8196 	ld	(hl), a
                                   8197 ;src/main.c:866: if (eptr->visible && eptr->alive) {
      00231E D1                    8198 	pop	de
      00231F D5                    8199 	push	de
      002320 21 0A 00              8200 	ld	hl, #0x000a
      002323 19                    8201 	add	hl, de
      002324 4D                    8202 	ld	c, l
      002325 44                    8203 	ld	b, h
      002326 0A                    8204 	ld	a, (bc)
      002327 B7                    8205 	or	a, a
      002328 CArABr27              8206 	jp	Z, 00139$
      00232B D1                    8207 	pop	de
      00232C D5                    8208 	push	de
      00232D 21 09 00              8209 	ld	hl, #0x0009
      002330 19                    8210 	add	hl, de
      002331 4D                    8211 	ld	c, l
      002332 44                    8212 	ld	b, h
      002333 0A                    8213 	ld	a, (bc)
      002334 B7                    8214 	or	a, a
      002335 CArABr27              8215 	jp	Z, 00139$
                                   8216 ;src/main.c:868: uint8_t alive = 1;
      002338 F8 12                 8217 	ldhl	sp,	#18
      00233A 36 01                 8218 	ld	(hl), #0x01
                                   8219 ;src/main.c:871: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00233C D1                    8220 	pop	de
      00233D D5                    8221 	push	de
      00233E 21 08 00              8222 	ld	hl, #0x0008
      002341 19                    8223 	add	hl, de
      002342 4D                    8224 	ld	c, l
      002343 44                    8225 	ld	b, h
      002344 0A                    8226 	ld	a, (bc)
      002345 4F                    8227 	ld	c, a
      002346 3D                    8228 	dec	a
      002347 3E 01                 8229 	ld	a, #0x01
      002349 28 01                 8230 	jr	Z, 00350$
      00234B AF                    8231 	xor	a, a
      00234C                       8232 00350$:
      00234C F8 13                 8233 	ldhl	sp,	#19
      00234E 77                    8234 	ld	(hl), a
      00234F FArCCr00              8235 	ld	a, (#_playerDrawX)
      002352 F8 14                 8236 	ldhl	sp,	#20
      002354 77                    8237 	ld	(hl), a
                                   8238 ;src/main.c:872: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002355 79                    8239 	ld	a, c
      002356 D6 02                 8240 	sub	a, #0x02
      002358 3E 01                 8241 	ld	a, #0x01
      00235A 28 01                 8242 	jr	Z, 00352$
      00235C AF                    8243 	xor	a, a
      00235D                       8244 00352$:
      00235D F8 15                 8245 	ldhl	sp,	#21
                                   8246 ;src/main.c:871: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00235F 32                    8247 	ld	(hl-), a
      002360 2B                    8248 	dec	hl
      002361 7E                    8249 	ld	a, (hl)
      002362 B7                    8250 	or	a, a
      002363 28 2F                 8251 	jr	Z, 00110$
      002365 D1                    8252 	pop	de
      002366 D5                    8253 	push	de
      002367 1A                    8254 	ld	a, (de)
      002368 F8 16                 8255 	ldhl	sp,	#22
      00236A 77                    8256 	ld	(hl), a
      00236B 3A                    8257 	ld	a, (hl-)
      00236C 2B                    8258 	dec	hl
      00236D 96                    8259 	sub	a, (hl)
      00236E 23                    8260 	inc	hl
      00236F 23                    8261 	inc	hl
      002370 77                    8262 	ld	(hl), a
                                   8263 ;src/main.c:368: if (value >= 0) return value;
      002371 CB 7E                 8264 	bit	7, (hl)
      002373 28 06                 8265 	jr	Z, 00147$
                                   8266 ;src/main.c:369: else return - value;
      002375 AF                    8267 	xor	a, a
      002376 F8 16                 8268 	ldhl	sp,	#22
      002378 96                    8269 	sub	a, (hl)
      002379 4F                    8270 	ld	c, a
      00237A 71                    8271 	ld	(hl), c
                                   8272 ;src/main.c:871: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      00237B                       8273 00147$:
      00237B F8 16                 8274 	ldhl	sp,	#22
      00237D 5E                    8275 	ld	e, (hl)
      00237E 3E 08                 8276 	ld	a,#0x08
      002380 57                    8277 	ld	d,a
      002381 96                    8278 	sub	a, (hl)
      002382 CB 7B                 8279 	bit	7, e
      002384 28 07                 8280 	jr	Z, 00353$
      002386 CB 7A                 8281 	bit	7, d
      002388 20 08                 8282 	jr	NZ, 00354$
      00238A BF                    8283 	cp	a, a
      00238B 18 05                 8284 	jr	00354$
      00238D                       8285 00353$:
      00238D CB 7A                 8286 	bit	7, d
      00238F 28 01                 8287 	jr	Z, 00354$
      002391 37                    8288 	scf
      002392                       8289 00354$:
      002392 30 2F                 8290 	jr	NC, 00106$
      002394                       8291 00110$:
                                   8292 ;src/main.c:872: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      002394 F8 15                 8293 	ldhl	sp,	#21
      002396 7E                    8294 	ld	a, (hl)
      002397 B7                    8295 	or	a, a
      002398 CAr7Er24              8296 	jp	Z, 00107$
      00239B 2B                    8297 	dec	hl
      00239C D1                    8298 	pop	de
      00239D D5                    8299 	push	de
      00239E 1A                    8300 	ld	a, (de)
      00239F 96                    8301 	sub	a, (hl)
      0023A0 4F                    8302 	ld	c, a
                                   8303 ;src/main.c:368: if (value >= 0) return value;
      0023A1 CB 79                 8304 	bit	7, c
      0023A3 20 03                 8305 	jr	NZ, 00149$
      0023A5 41                    8306 	ld	b, c
      0023A6 18 03                 8307 	jr	00151$
      0023A8                       8308 00149$:
                                   8309 ;src/main.c:369: else return - value;
      0023A8 AF                    8310 	xor	a, a
      0023A9 91                    8311 	sub	a, c
      0023AA 47                    8312 	ld	b, a
                                   8313 ;src/main.c:872: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      0023AB                       8314 00151$:
      0023AB 58                    8315 	ld	e, b
      0023AC 3E 10                 8316 	ld	a,#0x10
      0023AE 57                    8317 	ld	d,a
      0023AF 90                    8318 	sub	a, b
      0023B0 CB 7B                 8319 	bit	7, e
      0023B2 28 07                 8320 	jr	Z, 00355$
      0023B4 CB 7A                 8321 	bit	7, d
      0023B6 20 08                 8322 	jr	NZ, 00356$
      0023B8 BF                    8323 	cp	a, a
      0023B9 18 05                 8324 	jr	00356$
      0023BB                       8325 00355$:
      0023BB CB 7A                 8326 	bit	7, d
      0023BD 28 01                 8327 	jr	Z, 00356$
      0023BF 37                    8328 	scf
      0023C0                       8329 00356$:
      0023C0 DAr7Er24              8330 	jp	C, 00107$
      0023C3                       8331 00106$:
                                   8332 ;src/main.c:873: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0023C3 C1                    8333 	pop	bc
      0023C4 C5                    8334 	push	bc
      0023C5 03                    8335 	inc	bc
      0023C6 03                    8336 	inc	bc
      0023C7 FArCDr00              8337 	ld	a, (#_playerDrawY)
      0023CA F8 16                 8338 	ldhl	sp,	#22
      0023CC 77                    8339 	ld	(hl), a
      0023CD F8 13                 8340 	ldhl	sp,	#19
      0023CF 7E                    8341 	ld	a, (hl)
      0023D0 B7                    8342 	or	a, a
      0023D1 28 23                 8343 	jr	Z, 00105$
      0023D3 0A                    8344 	ld	a, (bc)
      0023D4 F8 16                 8345 	ldhl	sp,	#22
      0023D6 96                    8346 	sub	a, (hl)
      0023D7 6F                    8347 	ld	l, a
                                   8348 ;	spillPairReg hl
                                   8349 ;	spillPairReg hl
                                   8350 ;src/main.c:368: if (value >= 0) return value;
      0023D8 CB 7D                 8351 	bit	7, l
      0023DA 28 03                 8352 	jr	Z, 00155$
                                   8353 ;src/main.c:369: else return - value;
      0023DC AF                    8354 	xor	a, a
      0023DD 95                    8355 	sub	a, l
      0023DE 6F                    8356 	ld	l, a
                                   8357 ;	spillPairReg hl
                                   8358 ;	spillPairReg hl
                                   8359 ;src/main.c:873: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      0023DF                       8360 00155$:
      0023DF 5D                    8361 	ld	e, l
      0023E0 3E 08                 8362 	ld	a,#0x08
      0023E2 57                    8363 	ld	d,a
      0023E3 95                    8364 	sub	a, l
      0023E4 CB 7B                 8365 	bit	7, e
      0023E6 28 07                 8366 	jr	Z, 00357$
      0023E8 CB 7A                 8367 	bit	7, d
      0023EA 20 08                 8368 	jr	NZ, 00358$
      0023EC BF                    8369 	cp	a, a
      0023ED 18 05                 8370 	jr	00358$
      0023EF                       8371 00357$:
      0023EF CB 7A                 8372 	bit	7, d
      0023F1 28 01                 8373 	jr	Z, 00358$
      0023F3 37                    8374 	scf
      0023F4                       8375 00358$:
      0023F4 30 29                 8376 	jr	NC, 00101$
      0023F6                       8377 00105$:
                                   8378 ;src/main.c:874: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      0023F6 F8 15                 8379 	ldhl	sp,	#21
      0023F8 7E                    8380 	ld	a, (hl)
      0023F9 B7                    8381 	or	a, a
      0023FA CAr7Er24              8382 	jp	Z, 00107$
      0023FD 23                    8383 	inc	hl
      0023FE 0A                    8384 	ld	a, (bc)
      0023FF 96                    8385 	sub	a, (hl)
      002400 4F                    8386 	ld	c, a
                                   8387 ;src/main.c:368: if (value >= 0) return value;
      002401 CB 79                 8388 	bit	7, c
      002403 28 03                 8389 	jr	Z, 00159$
                                   8390 ;src/main.c:369: else return - value;
      002405 AF                    8391 	xor	a, a
      002406 91                    8392 	sub	a, c
      002407 4F                    8393 	ld	c, a
                                   8394 ;src/main.c:874: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      002408                       8395 00159$:
      002408 59                    8396 	ld	e, c
      002409 3E 10                 8397 	ld	a,#0x10
      00240B 57                    8398 	ld	d,a
      00240C 91                    8399 	sub	a, c
      00240D CB 7B                 8400 	bit	7, e
      00240F 28 07                 8401 	jr	Z, 00359$
      002411 CB 7A                 8402 	bit	7, d
      002413 20 08                 8403 	jr	NZ, 00360$
      002415 BF                    8404 	cp	a, a
      002416 18 05                 8405 	jr	00360$
      002418                       8406 00359$:
      002418 CB 7A                 8407 	bit	7, d
      00241A 28 01                 8408 	jr	Z, 00360$
      00241C 37                    8409 	scf
      00241D                       8410 00360$:
      00241D 38 5F                 8411 	jr	C, 00107$
      00241F                       8412 00101$:
                                   8413 ;src/main.c:876: set_sprite_tile(10+(i<<1), 0x7f);
      00241F F8 02                 8414 	ldhl	sp,	#2
      002421 7E                    8415 	ld	a, (hl)
      002422 87                    8416 	add	a, a
      002423 C6 0A                 8417 	add	a, #0x0a
                                   8418 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002425 6F                    8419 	ld	l, a
      002426 01r00r00              8420 	ld	bc, #_shadow_OAM+0
                                   8421 ;	spillPairReg hl
                                   8422 ;	spillPairReg hl
      002429 26 00                 8423 	ld	h, #0x00
                                   8424 ;	spillPairReg hl
                                   8425 ;	spillPairReg hl
      00242B 29                    8426 	add	hl, hl
      00242C 29                    8427 	add	hl, hl
      00242D 09                    8428 	add	hl, bc
      00242E 23                    8429 	inc	hl
      00242F 23                    8430 	inc	hl
      002430 36 7F                 8431 	ld	(hl), #0x7f
                                   8432 ;src/main.c:877: set_sprite_tile(10+(i<<1)+1, 0x7f);
      002432 F8 02                 8433 	ldhl	sp,	#2
      002434 7E                    8434 	ld	a, (hl)
      002435 87                    8435 	add	a, a
      002436 C6 0B                 8436 	add	a, #0x0b
                                   8437 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002438 6F                    8438 	ld	l, a
      002439 01r00r00              8439 	ld	bc, #_shadow_OAM+0
                                   8440 ;	spillPairReg hl
                                   8441 ;	spillPairReg hl
      00243C 26 00                 8442 	ld	h, #0x00
                                   8443 ;	spillPairReg hl
                                   8444 ;	spillPairReg hl
      00243E 29                    8445 	add	hl, hl
      00243F 29                    8446 	add	hl, hl
      002440 09                    8447 	add	hl, bc
      002441 23                    8448 	inc	hl
      002442 23                    8449 	inc	hl
      002443 36 7F                 8450 	ld	(hl), #0x7f
                                   8451 ;src/main.c:878: eptr->alive = 0;
      002445 D1                    8452 	pop	de
      002446 D5                    8453 	push	de
      002447 21 09 00              8454 	ld	hl, #0x0009
      00244A 19                    8455 	add	hl, de
      00244B 4D                    8456 	ld	c, l
      00244C 44                    8457 	ld	b, h
      00244D AF                    8458 	xor	a, a
      00244E 02                    8459 	ld	(bc), a
                                   8460 ;src/main.c:879: eptr->visible = 0;
      00244F D1                    8461 	pop	de
      002450 D5                    8462 	push	de
      002451 21 0A 00              8463 	ld	hl, #0x000a
      002454 19                    8464 	add	hl, de
      002455 4D                    8465 	ld	c, l
      002456 44                    8466 	ld	b, h
      002457 AF                    8467 	xor	a, a
      002458 02                    8468 	ld	(bc), a
                                   8469 ;src/main.c:880: takeDamage(eptr->damage);
      002459 D1                    8470 	pop	de
      00245A D5                    8471 	push	de
      00245B 21 0B 00              8472 	ld	hl, #0x000b
      00245E 19                    8473 	add	hl, de
      00245F 4D                    8474 	ld	c, l
      002460 44                    8475 	ld	b, h
      002461 0A                    8476 	ld	a, (bc)
      002462 06 00                 8477 	ld	b, #0x00
      002464 4F                    8478 	ld	c, a
      002465 C5                    8479 	push	bc
      002466 CDrADr20              8480 	call	_takeDamage
      002469 E1                    8481 	pop	hl
                                   8482 ;src/main.c:881: initEnemy(i);
      00246A F8 02                 8483 	ldhl	sp,	#2
      00246C 7E                    8484 	ld	a, (hl)
      00246D F5                    8485 	push	af
      00246E 33                    8486 	inc	sp
      00246F CDr64r11              8487 	call	_initEnemy
      002472 33                    8488 	inc	sp
                                   8489 ;src/main.c:882: playSound(0);
      002473 AF                    8490 	xor	a, a
      002474 F5                    8491 	push	af
      002475 33                    8492 	inc	sp
      002476 CDr96r0F              8493 	call	_playSound
      002479 33                    8494 	inc	sp
                                   8495 ;src/main.c:884: alive = 0;
      00247A F8 12                 8496 	ldhl	sp,	#18
      00247C 36 00                 8497 	ld	(hl), #0x00
      00247E                       8498 00107$:
                                   8499 ;src/main.c:890: if (alive) {
      00247E F8 12                 8500 	ldhl	sp,	#18
      002480 7E                    8501 	ld	a, (hl)
      002481 B7                    8502 	or	a, a
      002482 CArABr27              8503 	jp	Z, 00139$
                                   8504 ;src/main.c:891: struct Projectile *pptr = projectiles;
      002485 23                    8505 	inc	hl
      002486 3ErB4                 8506 	ld	a, #<(_projectiles)
      002488 22                    8507 	ld	(hl+), a
      002489 36s00                 8508 	ld	(hl), #>(_projectiles)
                                   8509 ;src/main.c:893: while (j < PROJECTILECOUNT) {
      00248B D1                    8510 	pop	de
      00248C D5                    8511 	push	de
      00248D 21 02 00              8512 	ld	hl, #0x0002
      002490 19                    8513 	add	hl, de
      002491 E5                    8514 	push	hl
      002492 7D                    8515 	ld	a, l
      002493 F8 05                 8516 	ldhl	sp,	#5
      002495 77                    8517 	ld	(hl), a
      002496 E1                    8518 	pop	hl
      002497 7C                    8519 	ld	a, h
      002498 F8 04                 8520 	ldhl	sp,	#4
      00249A 32                    8521 	ld	(hl-), a
      00249B 2A                    8522 	ld	a, (hl+)
      00249C 23                    8523 	inc	hl
      00249D 32                    8524 	ld	(hl-), a
      00249E 2A                    8525 	ld	a, (hl+)
      00249F 23                    8526 	inc	hl
      0024A0 77                    8527 	ld	(hl), a
      0024A1 D1                    8528 	pop	de
      0024A2 D5                    8529 	push	de
      0024A3 21 08 00              8530 	ld	hl, #0x0008
      0024A6 19                    8531 	add	hl, de
      0024A7 E5                    8532 	push	hl
      0024A8 7D                    8533 	ld	a, l
      0024A9 F8 09                 8534 	ldhl	sp,	#9
      0024AB 77                    8535 	ld	(hl), a
      0024AC E1                    8536 	pop	hl
      0024AD 7C                    8537 	ld	a, h
      0024AE F8 08                 8538 	ldhl	sp,	#8
      0024B0 77                    8539 	ld	(hl), a
      0024B1 F8 03                 8540 	ldhl	sp,	#3
      0024B3 7E                    8541 	ld	a, (hl)
      0024B4 F8 09                 8542 	ldhl	sp,	#9
      0024B6 77                    8543 	ld	(hl), a
      0024B7 F8 04                 8544 	ldhl	sp,	#4
      0024B9 7E                    8545 	ld	a, (hl)
      0024BA F8 0A                 8546 	ldhl	sp,	#10
      0024BC 77                    8547 	ld	(hl), a
      0024BD F8 15                 8548 	ldhl	sp,	#21
      0024BF 36 00                 8549 	ld	(hl), #0x00
      0024C1                       8550 00133$:
      0024C1 21r9Fr0B              8551 	ld	hl, #_PROJECTILECOUNT
      0024C4 4E                    8552 	ld	c, (hl)
      0024C5 F8 15                 8553 	ldhl	sp,	#21
      0024C7 7E                    8554 	ld	a, (hl)
      0024C8 91                    8555 	sub	a, c
      0024C9 D2rABr27              8556 	jp	NC, 00139$
                                   8557 ;src/main.c:894: if (pptr->active) {
      0024CC 2B                    8558 	dec	hl
      0024CD 2B                    8559 	dec	hl
      0024CE 2A                    8560 	ld	a, (hl+)
      0024CF 5F                    8561 	ld	e, a
      0024D0 56                    8562 	ld	d, (hl)
      0024D1 21 0A 00              8563 	ld	hl, #0x000a
      0024D4 19                    8564 	add	hl, de
      0024D5 4D                    8565 	ld	c, l
      0024D6 44                    8566 	ld	b, h
      0024D7 0A                    8567 	ld	a, (bc)
      0024D8 B7                    8568 	or	a, a
      0024D9 CAr92r27              8569 	jp	Z, 00132$
                                   8570 ;src/main.c:896: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0024DC F8 07                 8571 	ldhl	sp,#7
      0024DE 2A                    8572 	ld	a, (hl+)
      0024DF 5F                    8573 	ld	e, a
      0024E0 56                    8574 	ld	d, (hl)
      0024E1 1A                    8575 	ld	a, (de)
      0024E2 4F                    8576 	ld	c, a
      0024E3 3D                    8577 	dec	a
      0024E4 3E 01                 8578 	ld	a, #0x01
      0024E6 28 01                 8579 	jr	Z, 00362$
      0024E8 AF                    8580 	xor	a, a
      0024E9                       8581 00362$:
      0024E9 F8 11                 8582 	ldhl	sp,	#17
      0024EB 77                    8583 	ld	(hl), a
                                   8584 ;src/main.c:897: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      0024EC 79                    8585 	ld	a, c
      0024ED D6 02                 8586 	sub	a, #0x02
      0024EF 3E 01                 8587 	ld	a, #0x01
      0024F1 28 01                 8588 	jr	Z, 00364$
      0024F3 AF                    8589 	xor	a, a
      0024F4                       8590 00364$:
      0024F4 F8 12                 8591 	ldhl	sp,	#18
                                   8592 ;src/main.c:896: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      0024F6 32                    8593 	ld	(hl-), a
      0024F7 7E                    8594 	ld	a, (hl)
      0024F8 B7                    8595 	or	a, a
      0024F9 28 2C                 8596 	jr	Z, 00130$
      0024FB D1                    8597 	pop	de
      0024FC D5                    8598 	push	de
      0024FD 1A                    8599 	ld	a, (de)
      0024FE F8 13                 8600 	ldhl	sp,#19
      002500 5E                    8601 	ld	e, (hl)
      002501 23                    8602 	inc	hl
      002502 56                    8603 	ld	d, (hl)
      002503 F5                    8604 	push	af
      002504 1A                    8605 	ld	a, (de)
      002505 4F                    8606 	ld	c, a
      002506 F1                    8607 	pop	af
      002507 91                    8608 	sub	a, c
      002508 4F                    8609 	ld	c, a
                                   8610 ;src/main.c:368: if (value >= 0) return value;
      002509 CB 79                 8611 	bit	7, c
      00250B 28 03                 8612 	jr	Z, 00165$
                                   8613 ;src/main.c:369: else return - value;
      00250D AF                    8614 	xor	a, a
      00250E 91                    8615 	sub	a, c
      00250F 4F                    8616 	ld	c, a
                                   8617 ;src/main.c:896: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      002510                       8618 00165$:
      002510 59                    8619 	ld	e, c
      002511 3E 08                 8620 	ld	a,#0x08
      002513 57                    8621 	ld	d,a
      002514 91                    8622 	sub	a, c
      002515 CB 7B                 8623 	bit	7, e
      002517 28 07                 8624 	jr	Z, 00365$
      002519 CB 7A                 8625 	bit	7, d
      00251B 20 08                 8626 	jr	NZ, 00366$
      00251D BF                    8627 	cp	a, a
      00251E 18 05                 8628 	jr	00366$
      002520                       8629 00365$:
      002520 CB 7A                 8630 	bit	7, d
      002522 28 01                 8631 	jr	Z, 00366$
      002524 37                    8632 	scf
      002525                       8633 00366$:
      002525 30 3A                 8634 	jr	NC, 00126$
      002527                       8635 00130$:
                                   8636 ;src/main.c:897: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002527 F8 12                 8637 	ldhl	sp,	#18
      002529 7E                    8638 	ld	a, (hl)
      00252A B7                    8639 	or	a, a
      00252B CAr92r27              8640 	jp	Z, 00132$
      00252E 23                    8641 	inc	hl
      00252F D1                    8642 	pop	de
      002530 D5                    8643 	push	de
      002531 1A                    8644 	ld	a, (de)
      002532 5E                    8645 	ld	e, (hl)
      002533 23                    8646 	inc	hl
      002534 56                    8647 	ld	d, (hl)
      002535 23                    8648 	inc	hl
      002536 23                    8649 	inc	hl
      002537 F5                    8650 	push	af
      002538 1A                    8651 	ld	a, (de)
      002539 4F                    8652 	ld	c, a
      00253A F1                    8653 	pop	af
      00253B 91                    8654 	sub	a, c
      00253C 77                    8655 	ld	(hl), a
                                   8656 ;src/main.c:368: if (value >= 0) return value;
      00253D CB 7E                 8657 	bit	7, (hl)
      00253F 20 03                 8658 	jr	NZ, 00167$
      002541 4E                    8659 	ld	c, (hl)
      002542 18 05                 8660 	jr	00169$
      002544                       8661 00167$:
                                   8662 ;src/main.c:369: else return - value;
      002544 AF                    8663 	xor	a, a
      002545 F8 16                 8664 	ldhl	sp,	#22
      002547 96                    8665 	sub	a, (hl)
      002548 4F                    8666 	ld	c, a
                                   8667 ;src/main.c:897: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      002549                       8668 00169$:
      002549 59                    8669 	ld	e, c
      00254A 3E 10                 8670 	ld	a,#0x10
      00254C 57                    8671 	ld	d,a
      00254D 91                    8672 	sub	a, c
      00254E CB 7B                 8673 	bit	7, e
      002550 28 07                 8674 	jr	Z, 00367$
      002552 CB 7A                 8675 	bit	7, d
      002554 20 08                 8676 	jr	NZ, 00368$
      002556 BF                    8677 	cp	a, a
      002557 18 05                 8678 	jr	00368$
      002559                       8679 00367$:
      002559 CB 7A                 8680 	bit	7, d
      00255B 28 01                 8681 	jr	Z, 00368$
      00255D 37                    8682 	scf
      00255E                       8683 00368$:
      00255E DAr92r27              8684 	jp	C, 00132$
      002561                       8685 00126$:
                                   8686 ;src/main.c:898: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002561 F8 13                 8687 	ldhl	sp,	#19
      002563 2A                    8688 	ld	a, (hl+)
      002564 4F                    8689 	ld	c, a
      002565 46                    8690 	ld	b, (hl)
      002566 03                    8691 	inc	bc
      002567 03                    8692 	inc	bc
      002568 F8 11                 8693 	ldhl	sp,	#17
      00256A 7E                    8694 	ld	a, (hl)
      00256B B7                    8695 	or	a, a
      00256C 28 2A                 8696 	jr	Z, 00125$
      00256E F8 09                 8697 	ldhl	sp,#9
      002570 2A                    8698 	ld	a, (hl+)
      002571 5F                    8699 	ld	e, a
      002572 56                    8700 	ld	d, (hl)
      002573 1A                    8701 	ld	a, (de)
      002574 F5                    8702 	push	af
      002575 0A                    8703 	ld	a, (bc)
      002576 5F                    8704 	ld	e, a
      002577 F1                    8705 	pop	af
      002578 93                    8706 	sub	a, e
      002579 6F                    8707 	ld	l, a
                                   8708 ;	spillPairReg hl
                                   8709 ;	spillPairReg hl
                                   8710 ;src/main.c:368: if (value >= 0) return value;
      00257A CB 7D                 8711 	bit	7, l
      00257C 28 03                 8712 	jr	Z, 00173$
                                   8713 ;src/main.c:369: else return - value;
      00257E AF                    8714 	xor	a, a
      00257F 95                    8715 	sub	a, l
      002580 6F                    8716 	ld	l, a
                                   8717 ;	spillPairReg hl
                                   8718 ;	spillPairReg hl
                                   8719 ;src/main.c:898: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      002581                       8720 00173$:
      002581 5D                    8721 	ld	e, l
      002582 3E 08                 8722 	ld	a,#0x08
      002584 57                    8723 	ld	d,a
      002585 95                    8724 	sub	a, l
      002586 CB 7B                 8725 	bit	7, e
      002588 28 07                 8726 	jr	Z, 00369$
      00258A CB 7A                 8727 	bit	7, d
      00258C 20 08                 8728 	jr	NZ, 00370$
      00258E BF                    8729 	cp	a, a
      00258F 18 05                 8730 	jr	00370$
      002591                       8731 00369$:
      002591 CB 7A                 8732 	bit	7, d
      002593 28 01                 8733 	jr	Z, 00370$
      002595 37                    8734 	scf
      002596                       8735 00370$:
      002596 30 32                 8736 	jr	NC, 00121$
      002598                       8737 00125$:
                                   8738 ;src/main.c:899: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      002598 F8 12                 8739 	ldhl	sp,	#18
      00259A 7E                    8740 	ld	a, (hl)
      00259B B7                    8741 	or	a, a
      00259C CAr92r27              8742 	jp	Z, 00132$
      00259F F8 03                 8743 	ldhl	sp,#3
      0025A1 2A                    8744 	ld	a, (hl+)
      0025A2 5F                    8745 	ld	e, a
      0025A3 56                    8746 	ld	d, (hl)
      0025A4 1A                    8747 	ld	a, (de)
      0025A5 F5                    8748 	push	af
      0025A6 0A                    8749 	ld	a, (bc)
      0025A7 4F                    8750 	ld	c, a
      0025A8 F1                    8751 	pop	af
      0025A9 91                    8752 	sub	a, c
      0025AA 4F                    8753 	ld	c, a
                                   8754 ;src/main.c:368: if (value >= 0) return value;
      0025AB CB 79                 8755 	bit	7, c
      0025AD 28 03                 8756 	jr	Z, 00177$
                                   8757 ;src/main.c:369: else return - value;
      0025AF AF                    8758 	xor	a, a
      0025B0 91                    8759 	sub	a, c
      0025B1 4F                    8760 	ld	c, a
                                   8761 ;src/main.c:899: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      0025B2                       8762 00177$:
      0025B2 59                    8763 	ld	e, c
      0025B3 3E 10                 8764 	ld	a,#0x10
      0025B5 57                    8765 	ld	d,a
      0025B6 91                    8766 	sub	a, c
      0025B7 CB 7B                 8767 	bit	7, e
      0025B9 28 07                 8768 	jr	Z, 00371$
      0025BB CB 7A                 8769 	bit	7, d
      0025BD 20 08                 8770 	jr	NZ, 00372$
      0025BF BF                    8771 	cp	a, a
      0025C0 18 05                 8772 	jr	00372$
      0025C2                       8773 00371$:
      0025C2 CB 7A                 8774 	bit	7, d
      0025C4 28 01                 8775 	jr	Z, 00372$
      0025C6 37                    8776 	scf
      0025C7                       8777 00372$:
      0025C7 DAr92r27              8778 	jp	C, 00132$
      0025CA                       8779 00121$:
                                   8780 ;src/main.c:901: set_sprite_tile(30+j, 0x7f);
      0025CA F8 15                 8781 	ldhl	sp,	#21
      0025CC 7E                    8782 	ld	a, (hl)
      0025CD C6 1E                 8783 	add	a, #0x1e
                                   8784 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0025CF 6F                    8785 	ld	l, a
      0025D0 01r00r00              8786 	ld	bc, #_shadow_OAM+0
                                   8787 ;	spillPairReg hl
                                   8788 ;	spillPairReg hl
      0025D3 26 00                 8789 	ld	h, #0x00
                                   8790 ;	spillPairReg hl
                                   8791 ;	spillPairReg hl
      0025D5 29                    8792 	add	hl, hl
      0025D6 29                    8793 	add	hl, hl
      0025D7 09                    8794 	add	hl, bc
      0025D8 23                    8795 	inc	hl
      0025D9 23                    8796 	inc	hl
      0025DA 36 7F                 8797 	ld	(hl), #0x7f
                                   8798 ;src/main.c:902: pptr->active = 0;
      0025DC F8 13                 8799 	ldhl	sp,#19
      0025DE 2A                    8800 	ld	a, (hl+)
      0025DF 5F                    8801 	ld	e, a
      0025E0 56                    8802 	ld	d, (hl)
      0025E1 21 0A 00              8803 	ld	hl, #0x000a
      0025E4 19                    8804 	add	hl, de
      0025E5 4D                    8805 	ld	c, l
      0025E6 44                    8806 	ld	b, h
      0025E7 AF                    8807 	xor	a, a
      0025E8 02                    8808 	ld	(bc), a
                                   8809 ;src/main.c:904: if (pptr->type == 0x2c) { //missile
      0025E9 F8 13                 8810 	ldhl	sp,#19
      0025EB 2A                    8811 	ld	a, (hl+)
      0025EC 5F                    8812 	ld	e, a
      0025ED 56                    8813 	ld	d, (hl)
      0025EE 21 0C 00              8814 	ld	hl, #0x000c
      0025F1 19                    8815 	add	hl, de
      0025F2 4D                    8816 	ld	c, l
      0025F3 44                    8817 	ld	b, h
      0025F4 0A                    8818 	ld	a, (bc)
      0025F5 5F                    8819 	ld	e, a
                                   8820 ;src/main.c:909: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      0025F6 D5                    8821 	push	de
      0025F7 F8 15                 8822 	ldhl	sp,#21
      0025F9 2A                    8823 	ld	a, (hl+)
      0025FA 5F                    8824 	ld	e, a
      0025FB 56                    8825 	ld	d, (hl)
      0025FC 21 08 00              8826 	ld	hl, #0x0008
      0025FF 19                    8827 	add	hl, de
      002600 D1                    8828 	pop	de
      002601 4D                    8829 	ld	c, l
      002602 44                    8830 	ld	b, h
                                   8831 ;src/main.c:904: if (pptr->type == 0x2c) { //missile
      002603 7B                    8832 	ld	a, e
      002604 D6 2C                 8833 	sub	a, #0x2c
      002606 C2r37r27              8834 	jp	NZ,00119$
                                   8835 ;src/main.c:909: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002609 F8 0B                 8836 	ldhl	sp,	#11
      00260B 79                    8837 	ld	a, c
      00260C 22                    8838 	ld	(hl+), a
      00260D 70                    8839 	ld	(hl), b
      00260E F8 16                 8840 	ldhl	sp,	#22
      002610 36 00                 8841 	ld	(hl), #0x00
      002612                       8842 00188$:
      002612 21r8Er0B              8843 	ld	hl, #_ENEMYCOUNT
      002615 4E                    8844 	ld	c, (hl)
      002616 F8 16                 8845 	ldhl	sp,	#22
      002618 7E                    8846 	ld	a, (hl)
      002619 91                    8847 	sub	a, c
      00261A D2r92r27              8848 	jp	NC, 00132$
                                   8849 ;src/main.c:910: int16_t dmgDropOff = ((i16abs(eptr->x - enemies[k].x) + i16abs(eptr->y - enemies[k].y))<<SPLASHDROPOFF);
      00261D D1                    8850 	pop	de
      00261E D5                    8851 	push	de
      00261F 1A                    8852 	ld	a, (de)
      002620 F8 0F                 8853 	ldhl	sp,	#15
      002622 22                    8854 	ld	(hl+), a
      002623 13                    8855 	inc	de
      002624 1A                    8856 	ld	a, (de)
      002625 77                    8857 	ld	(hl), a
      002626 F8 16                 8858 	ldhl	sp,	#22
      002628 4E                    8859 	ld	c, (hl)
      002629 06 00                 8860 	ld	b, #0x00
      00262B 69                    8861 	ld	l, c
      00262C 60                    8862 	ld	h, b
      00262D 29                    8863 	add	hl, hl
      00262E 29                    8864 	add	hl, hl
      00262F 29                    8865 	add	hl, hl
      002630 09                    8866 	add	hl, bc
      002631 29                    8867 	add	hl, hl
      002632 01r5Ar00              8868 	ld	bc,#_enemies
      002635 09                    8869 	add	hl,bc
      002636 E5                    8870 	push	hl
      002637 7D                    8871 	ld	a, l
      002638 F8 13                 8872 	ldhl	sp,	#19
      00263A 77                    8873 	ld	(hl), a
      00263B E1                    8874 	pop	hl
      00263C 7C                    8875 	ld	a, h
      00263D F8 12                 8876 	ldhl	sp,	#18
      00263F 32                    8877 	ld	(hl-), a
      002640 2A                    8878 	ld	a, (hl+)
      002641 5F                    8879 	ld	e, a
      002642 3A                    8880 	ld	a, (hl-)
      002643 2B                    8881 	dec	hl
      002644 2B                    8882 	dec	hl
      002645 57                    8883 	ld	d, a
      002646 1A                    8884 	ld	a, (de)
      002647 4F                    8885 	ld	c, a
      002648 13                    8886 	inc	de
      002649 1A                    8887 	ld	a, (de)
      00264A 47                    8888 	ld	b, a
      00264B 2A                    8889 	ld	a, (hl+)
      00264C 5F                    8890 	ld	e, a
      00264D 56                    8891 	ld	d, (hl)
      00264E 7B                    8892 	ld	a, e
      00264F 91                    8893 	sub	a, c
      002650 5F                    8894 	ld	e, a
      002651 7A                    8895 	ld	a, d
      002652 98                    8896 	sbc	a, b
      002653 4B                    8897 	ld	c, e
      002654 47                    8898 	ld	b, a
                                   8899 ;	spillPairReg hl
                                   8900 ;	spillPairReg hl
      002655 60                    8901 	ld	h, b
                                   8902 ;	spillPairReg hl
                                   8903 ;	spillPairReg hl
      002656 CB 7C                 8904 	bit	7, h
      002658 20 07                 8905 	jr	NZ, 00180$
      00265A F8 0F                 8906 	ldhl	sp,	#15
      00265C 79                    8907 	ld	a, c
      00265D 22                    8908 	ld	(hl+), a
      00265E 70                    8909 	ld	(hl), b
      00265F 18 0B                 8910 	jr	00182$
      002661                       8911 00180$:
      002661 AF                    8912 	xor	a, a
      002662 91                    8913 	sub	a, c
      002663 4F                    8914 	ld	c, a
      002664 9F                    8915 	sbc	a, a
      002665 90                    8916 	sub	a, b
      002666 47                    8917 	ld	b, a
      002667 F8 0F                 8918 	ldhl	sp,	#15
      002669 79                    8919 	ld	a, c
      00266A 22                    8920 	ld	(hl+), a
      00266B 70                    8921 	ld	(hl), b
      00266C                       8922 00182$:
      00266C F8 05                 8923 	ldhl	sp,#5
      00266E 2A                    8924 	ld	a, (hl+)
      00266F 5F                    8925 	ld	e, a
      002670 56                    8926 	ld	d, (hl)
      002671 1A                    8927 	ld	a, (de)
      002672 4F                    8928 	ld	c, a
      002673 13                    8929 	inc	de
      002674 1A                    8930 	ld	a, (de)
      002675 47                    8931 	ld	b, a
      002676 F8 11                 8932 	ldhl	sp,	#17
      002678 2A                    8933 	ld	a, (hl+)
      002679 66                    8934 	ld	h, (hl)
                                   8935 ;	spillPairReg hl
                                   8936 ;	spillPairReg hl
      00267A 6F                    8937 	ld	l, a
                                   8938 ;	spillPairReg hl
                                   8939 ;	spillPairReg hl
      00267B 23                    8940 	inc	hl
      00267C 23                    8941 	inc	hl
      00267D 2A                    8942 	ld	a,	(hl+)
      00267E 66                    8943 	ld	h, (hl)
                                   8944 ;	spillPairReg hl
      00267F 6F                    8945 	ld	l, a
                                   8946 ;	spillPairReg hl
                                   8947 ;	spillPairReg hl
      002680 79                    8948 	ld	a, c
      002681 95                    8949 	sub	a, l
      002682 4F                    8950 	ld	c, a
      002683 78                    8951 	ld	a, b
      002684 9C                    8952 	sbc	a, h
      002685 47                    8953 	ld	b, a
                                   8954 ;	spillPairReg hl
                                   8955 ;	spillPairReg hl
      002686 60                    8956 	ld	h, b
                                   8957 ;	spillPairReg hl
                                   8958 ;	spillPairReg hl
      002687 CB 7C                 8959 	bit	7, h
      002689 28 06                 8960 	jr	Z, 00186$
      00268B AF                    8961 	xor	a, a
      00268C 91                    8962 	sub	a, c
      00268D 4F                    8963 	ld	c, a
      00268E 9F                    8964 	sbc	a, a
      00268F 90                    8965 	sub	a, b
      002690 47                    8966 	ld	b, a
      002691                       8967 00186$:
      002691 F8 0F                 8968 	ldhl	sp,	#15
      002693 2A                    8969 	ld	a,	(hl+)
      002694 66                    8970 	ld	h, (hl)
      002695 6F                    8971 	ld	l, a
      002696 09                    8972 	add	hl, bc
      002697 4D                    8973 	ld	c, l
      002698 44                    8974 	ld	b, h
      002699 21rA4r0B              8975 	ld	hl, #_SPLASHDROPOFF
      00269C 5E                    8976 	ld	e, (hl)
      00269D 1C                    8977 	inc	e
      00269E 18 04                 8978 	jr	00376$
      0026A0                       8979 00375$:
      0026A0 CB 21                 8980 	sla	c
      0026A2 CB 10                 8981 	rl	b
      0026A4                       8982 00376$:
      0026A4 1D                    8983 	dec	e
      0026A5 20 F9                 8984 	jr	NZ,00375$
                                   8985 ;src/main.c:911: int16_t dmg = pptr->damage - dmgDropOff;
      0026A7 F8 0B                 8986 	ldhl	sp,#11
      0026A9 2A                    8987 	ld	a, (hl+)
      0026AA 5F                    8988 	ld	e, a
      0026AB 56                    8989 	ld	d, (hl)
      0026AC 1A                    8990 	ld	a, (de)
      0026AD 6F                    8991 	ld	l, a
                                   8992 ;	spillPairReg hl
                                   8993 ;	spillPairReg hl
      0026AE 13                    8994 	inc	de
      0026AF 1A                    8995 	ld	a, (de)
      0026B0 67                    8996 	ld	h, a
                                   8997 ;	spillPairReg hl
                                   8998 ;	spillPairReg hl
      0026B1 7D                    8999 	ld	a, l
      0026B2 91                    9000 	sub	a, c
      0026B3 5F                    9001 	ld	e, a
      0026B4 7C                    9002 	ld	a, h
      0026B5 98                    9003 	sbc	a, b
      0026B6 F8 0D                 9004 	ldhl	sp,	#13
      0026B8 73                    9005 	ld	(hl), e
      0026B9 23                    9006 	inc	hl
                                   9007 ;src/main.c:912: if (dmg > 0) {
      0026BA 32                    9008 	ld	(hl-), a
      0026BB 2A                    9009 	ld	a, (hl+)
      0026BC 4F                    9010 	ld	c, a
      0026BD 46                    9011 	ld	b, (hl)
      0026BE 58                    9012 	ld	e, b
      0026BF AF                    9013 	xor	a, a
      0026C0 57                    9014 	ld	d, a
      0026C1 B9                    9015 	cp	a, c
      0026C2 98                    9016 	sbc	a, b
      0026C3 CB 7B                 9017 	bit	7, e
      0026C5 28 07                 9018 	jr	Z, 00377$
      0026C7 CB 7A                 9019 	bit	7, d
      0026C9 20 08                 9020 	jr	NZ, 00378$
      0026CB BF                    9021 	cp	a, a
      0026CC 18 05                 9022 	jr	00378$
      0026CE                       9023 00377$:
      0026CE CB 7A                 9024 	bit	7, d
      0026D0 28 01                 9025 	jr	Z, 00378$
      0026D2 37                    9026 	scf
      0026D3                       9027 00378$:
      0026D3 30 5C                 9028 	jr	NC, 00189$
                                   9029 ;src/main.c:913: enemies[k].hp -= dmg;
      0026D5 F8 11                 9030 	ldhl	sp,#17
      0026D7 2A                    9031 	ld	a, (hl+)
      0026D8 5F                    9032 	ld	e, a
      0026D9 56                    9033 	ld	d, (hl)
      0026DA 21 10 00              9034 	ld	hl, #0x0010
      0026DD 19                    9035 	add	hl, de
      0026DE E5                    9036 	push	hl
      0026DF 7D                    9037 	ld	a, l
      0026E0 F8 11                 9038 	ldhl	sp,	#17
      0026E2 77                    9039 	ld	(hl), a
      0026E3 E1                    9040 	pop	hl
      0026E4 7C                    9041 	ld	a, h
      0026E5 F8 10                 9042 	ldhl	sp,	#16
      0026E7 32                    9043 	ld	(hl-), a
      0026E8 2A                    9044 	ld	a, (hl+)
      0026E9 5F                    9045 	ld	e, a
      0026EA 2A                    9046 	ld	a, (hl+)
      0026EB 57                    9047 	ld	d, a
      0026EC 1A                    9048 	ld	a, (de)
      0026ED 22                    9049 	ld	(hl+), a
      0026EE 13                    9050 	inc	de
      0026EF 1A                    9051 	ld	a, (de)
      0026F0 32                    9052 	ld	(hl-), a
      0026F1 2A                    9053 	ld	a, (hl+)
      0026F2 5F                    9054 	ld	e, a
      0026F3 56                    9055 	ld	d, (hl)
      0026F4 F8 0D                 9056 	ldhl	sp,	#13
      0026F6 2A                    9057 	ld	a,	(hl+)
      0026F7 66                    9058 	ld	h, (hl)
      0026F8 6F                    9059 	ld	l, a
      0026F9 7B                    9060 	ld	a, e
      0026FA 95                    9061 	sub	a, l
      0026FB 5F                    9062 	ld	e, a
      0026FC 7A                    9063 	ld	a, d
      0026FD 9C                    9064 	sbc	a, h
      0026FE 47                    9065 	ld	b, a
      0026FF 4B                    9066 	ld	c, e
      002700 F8 0F                 9067 	ldhl	sp,	#15
      002702 2A                    9068 	ld	a,	(hl+)
      002703 66                    9069 	ld	h, (hl)
      002704 6F                    9070 	ld	l, a
      002705 79                    9071 	ld	a, c
      002706 22                    9072 	ld	(hl+), a
      002707 70                    9073 	ld	(hl), b
                                   9074 ;src/main.c:914: if (enemies[k].hp <= 0) {
      002708 58                    9075 	ld	e, b
      002709 AF                    9076 	xor	a, a
      00270A 57                    9077 	ld	d, a
      00270B B9                    9078 	cp	a, c
      00270C 98                    9079 	sbc	a, b
      00270D CB 7B                 9080 	bit	7, e
      00270F 28 07                 9081 	jr	Z, 00379$
      002711 CB 7A                 9082 	bit	7, d
      002713 20 08                 9083 	jr	NZ, 00380$
      002715 BF                    9084 	cp	a, a
      002716 18 05                 9085 	jr	00380$
      002718                       9086 00379$:
      002718 CB 7A                 9087 	bit	7, d
      00271A 28 01                 9088 	jr	Z, 00380$
      00271C 37                    9089 	scf
      00271D                       9090 00380$:
      00271D 38 12                 9091 	jr	C, 00189$
                                   9092 ;src/main.c:915: killEnemy(k);
      00271F F8 16                 9093 	ldhl	sp,	#22
      002721 7E                    9094 	ld	a, (hl)
      002722 F5                    9095 	push	af
      002723 33                    9096 	inc	sp
      002724 CDr66r21              9097 	call	_killEnemy
      002727 33                    9098 	inc	sp
                                   9099 ;src/main.c:916: initEnemy(k);
      002728 F8 16                 9100 	ldhl	sp,	#22
      00272A 7E                    9101 	ld	a, (hl)
      00272B F5                    9102 	push	af
      00272C 33                    9103 	inc	sp
      00272D CDr64r11              9104 	call	_initEnemy
      002730 33                    9105 	inc	sp
      002731                       9106 00189$:
                                   9107 ;src/main.c:909: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      002731 F8 16                 9108 	ldhl	sp,	#22
      002733 34                    9109 	inc	(hl)
      002734 C3r12r26              9110 	jp	00188$
      002737                       9111 00119$:
                                   9112 ;src/main.c:924: eptr->hp -= pptr->damage;
      002737 D1                    9113 	pop	de
      002738 D5                    9114 	push	de
      002739 21 10 00              9115 	ld	hl, #0x0010
      00273C 19                    9116 	add	hl, de
      00273D E5                    9117 	push	hl
      00273E 7D                    9118 	ld	a, l
      00273F F8 11                 9119 	ldhl	sp,	#17
      002741 77                    9120 	ld	(hl), a
      002742 E1                    9121 	pop	hl
      002743 7C                    9122 	ld	a, h
      002744 F8 10                 9123 	ldhl	sp,	#16
      002746 32                    9124 	ld	(hl-), a
      002747 2A                    9125 	ld	a, (hl+)
      002748 5F                    9126 	ld	e, a
      002749 2A                    9127 	ld	a, (hl+)
      00274A 57                    9128 	ld	d, a
      00274B 1A                    9129 	ld	a, (de)
      00274C 22                    9130 	ld	(hl+), a
      00274D 13                    9131 	inc	de
      00274E 1A                    9132 	ld	a, (de)
      00274F 77                    9133 	ld	(hl), a
      002750 69                    9134 	ld	l, c
      002751 60                    9135 	ld	h, b
      002752 2A                    9136 	ld	a, (hl+)
      002753 4F                    9137 	ld	c, a
      002754 46                    9138 	ld	b, (hl)
      002755 F8 11                 9139 	ldhl	sp,#17
      002757 2A                    9140 	ld	a, (hl+)
      002758 5F                    9141 	ld	e, a
      002759 56                    9142 	ld	d, (hl)
      00275A 7B                    9143 	ld	a, e
      00275B 91                    9144 	sub	a, c
      00275C 5F                    9145 	ld	e, a
      00275D 7A                    9146 	ld	a, d
      00275E 98                    9147 	sbc	a, b
      00275F 47                    9148 	ld	b, a
      002760 4B                    9149 	ld	c, e
      002761 F8 0F                 9150 	ldhl	sp,	#15
      002763 2A                    9151 	ld	a,	(hl+)
      002764 66                    9152 	ld	h, (hl)
      002765 6F                    9153 	ld	l, a
      002766 79                    9154 	ld	a, c
      002767 22                    9155 	ld	(hl+), a
      002768 70                    9156 	ld	(hl), b
                                   9157 ;src/main.c:926: if (eptr->hp <= 0) {
      002769 58                    9158 	ld	e, b
      00276A AF                    9159 	xor	a, a
      00276B 57                    9160 	ld	d, a
      00276C B9                    9161 	cp	a, c
      00276D 98                    9162 	sbc	a, b
      00276E CB 7B                 9163 	bit	7, e
      002770 28 07                 9164 	jr	Z, 00381$
      002772 CB 7A                 9165 	bit	7, d
      002774 20 08                 9166 	jr	NZ, 00382$
      002776 BF                    9167 	cp	a, a
      002777 18 05                 9168 	jr	00382$
      002779                       9169 00381$:
      002779 CB 7A                 9170 	bit	7, d
      00277B 28 01                 9171 	jr	Z, 00382$
      00277D 37                    9172 	scf
      00277E                       9173 00382$:
      00277E 38 12                 9174 	jr	C, 00132$
                                   9175 ;src/main.c:928: killEnemy(i);
      002780 F8 02                 9176 	ldhl	sp,	#2
      002782 7E                    9177 	ld	a, (hl)
      002783 F5                    9178 	push	af
      002784 33                    9179 	inc	sp
      002785 CDr66r21              9180 	call	_killEnemy
      002788 33                    9181 	inc	sp
                                   9182 ;src/main.c:929: initEnemy(i);
      002789 F8 02                 9183 	ldhl	sp,	#2
      00278B 7E                    9184 	ld	a, (hl)
      00278C F5                    9185 	push	af
      00278D 33                    9186 	inc	sp
      00278E CDr64r11              9187 	call	_initEnemy
      002791 33                    9188 	inc	sp
      002792                       9189 00132$:
                                   9190 ;src/main.c:941: j++;
      002792 F8 15                 9191 	ldhl	sp,	#21
      002794 34                    9192 	inc	(hl)
                                   9193 ;src/main.c:942: pptr++;
      002795 2B                    9194 	dec	hl
      002796 2B                    9195 	dec	hl
      002797 2A                    9196 	ld	a, (hl+)
      002798 5F                    9197 	ld	e, a
      002799 56                    9198 	ld	d, (hl)
      00279A 21 0D 00              9199 	ld	hl, #0x000d
      00279D 19                    9200 	add	hl, de
      00279E E5                    9201 	push	hl
      00279F 7D                    9202 	ld	a, l
      0027A0 F8 15                 9203 	ldhl	sp,	#21
      0027A2 77                    9204 	ld	(hl), a
      0027A3 E1                    9205 	pop	hl
      0027A4 7C                    9206 	ld	a, h
      0027A5 F8 14                 9207 	ldhl	sp,	#20
      0027A7 77                    9208 	ld	(hl), a
      0027A8 C3rC1r24              9209 	jp	00133$
      0027AB                       9210 00139$:
                                   9211 ;src/main.c:948: if (enemyCollisionCount == 0) {
      0027AB FArD6r00              9212 	ld	a, (#_enemyCollisionCount)
      0027AE B7                    9213 	or	a, a
      0027AF 20 09                 9214 	jr	NZ, 00142$
                                   9215 ;src/main.c:949: enemyCollisionCount = ENEMYCOUNT - 1;
      0027B1 FAr8Er0B              9216 	ld	a, (#_ENEMYCOUNT)
      0027B4 3D                    9217 	dec	a
      0027B5 EArD6r00              9218 	ld	(#_enemyCollisionCount),a
      0027B8 18 04                 9219 	jr	00190$
      0027BA                       9220 00142$:
                                   9221 ;src/main.c:952: enemyCollisionCount--;
      0027BA 21rD6r00              9222 	ld	hl, #_enemyCollisionCount
      0027BD 35                    9223 	dec	(hl)
      0027BE                       9224 00190$:
                                   9225 ;src/main.c:957: }
      0027BE E8 17                 9226 	add	sp, #23
      0027C0 C9                    9227 	ret
                                   9228 ;src/main.c:960: void setGunIcon() {
                                   9229 ;	---------------------------------
                                   9230 ; Function setGunIcon
                                   9231 ; ---------------------------------
      0027C1                       9232 _setGunIcon::
                                   9233 ;src/main.c:962: if (currentGun == 0) {
      0027C1 FArD8r00              9234 	ld	a, (#_currentGun)
      0027C4 B7                    9235 	or	a, a
      0027C5 20 1B                 9236 	jr	NZ, 00102$
                                   9237 ;src/main.c:963: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      0027C7 01rDFr00              9238 	ld	bc, #_gunMap+0
      0027CA 79                    9239 	ld	a, c
      0027CB 21rD7r00              9240 	ld	hl, #_gunLevel
      0027CE 86                    9241 	add	a, (hl)
      0027CF 4F                    9242 	ld	c, a
      0027D0 30 01                 9243 	jr	NC, 00111$
      0027D2 04                    9244 	inc	b
      0027D3                       9245 00111$:
      0027D3 C5                    9246 	push	bc
      0027D4 21 01 01              9247 	ld	hl, #0x101
      0027D7 E5                    9248 	push	hl
      0027D8 21 0F 00              9249 	ld	hl, #0x0f
      0027DB E5                    9250 	push	hl
      0027DC CDr00r00              9251 	call	_set_win_tiles
      0027DF E8 06                 9252 	add	sp, #6
      0027E1 C9                    9253 	ret
      0027E2                       9254 00102$:
                                   9255 ;src/main.c:966: set_win_tiles(15, 0,1,1,gunMap+2);
      0027E2 11rE1r00              9256 	ld	de, #(_gunMap + 2)
      0027E5 D5                    9257 	push	de
      0027E6 21 01 01              9258 	ld	hl, #0x101
      0027E9 E5                    9259 	push	hl
      0027EA 21 0F 00              9260 	ld	hl, #0x0f
      0027ED E5                    9261 	push	hl
      0027EE CDr00r00              9262 	call	_set_win_tiles
      0027F1 E8 06                 9263 	add	sp, #6
                                   9264 ;src/main.c:968: }
      0027F3 C9                    9265 	ret
                                   9266 ;src/main.c:978: void fire() {
                                   9267 ;	---------------------------------
                                   9268 ; Function fire
                                   9269 ; ---------------------------------
      0027F4                       9270 _fire::
      0027F4 E8 FB                 9271 	add	sp, #-5
                                   9272 ;src/main.c:980: oldestProjectile += 1;
      0027F6 21rC2r00              9273 	ld	hl, #_oldestProjectile
      0027F9 34                    9274 	inc	(hl)
      0027FA 7E                    9275 	ld	a, (hl)
                                   9276 ;src/main.c:981: if (oldestProjectile >= PROJECTILECOUNT) {
      0027FB 21r9Fr0B              9277 	ld	hl, #_PROJECTILECOUNT
      0027FE 4E                    9278 	ld	c, (hl)
      0027FF 21rC2r00              9279 	ld	hl, #_oldestProjectile
      002802 7E                    9280 	ld	a, (hl)
      002803 91                    9281 	sub	a, c
      002804 38 02                 9282 	jr	C, 00102$
                                   9283 ;src/main.c:982: oldestProjectile = 0;
      002806 36 00                 9284 	ld	(hl), #0x00
      002808                       9285 00102$:
                                   9286 ;src/main.c:987: projectiles[oldestProjectile] = singleGun;
      002808 21rC2r00              9287 	ld	hl, #_oldestProjectile
      00280B 4E                    9288 	ld	c, (hl)
      00280C 06 00                 9289 	ld	b, #0x00
      00280E 69                    9290 	ld	l, c
      00280F 60                    9291 	ld	h, b
      002810 29                    9292 	add	hl, hl
      002811 09                    9293 	add	hl, bc
      002812 29                    9294 	add	hl, hl
      002813 29                    9295 	add	hl, hl
      002814 09                    9296 	add	hl, bc
      002815 E5                    9297 	push	hl
      002816 7D                    9298 	ld	a, l
      002817 F8 05                 9299 	ldhl	sp,	#5
      002819 77                    9300 	ld	(hl), a
      00281A E1                    9301 	pop	hl
      00281B 7C                    9302 	ld	a, h
      00281C F8 04                 9303 	ldhl	sp,	#4
      00281E 77                    9304 	ld	(hl), a
                                   9305 ;src/main.c:985: if (currentGun == 0) {
      00281F FArD8r00              9306 	ld	a, (#_currentGun)
      002822 B7                    9307 	or	a, a
      002823 20 3C                 9308 	jr	NZ, 00113$
                                   9309 ;src/main.c:986: if (gunLevel == 0) {
      002825 FArD7r00              9310 	ld	a, (#_gunLevel)
      002828 B7                    9311 	or	a, a
      002829 20 1B                 9312 	jr	NZ, 00104$
                                   9313 ;src/main.c:987: projectiles[oldestProjectile] = singleGun;
      00282B 11r9Br00              9314 	ld	de, #_singleGun+0
      00282E 01rB4r00              9315 	ld	bc, #_projectiles+0
      002831 F8 03                 9316 	ldhl	sp,	#3
      002833 2A                    9317 	ld	a,	(hl+)
      002834 66                    9318 	ld	h, (hl)
      002835 6F                    9319 	ld	l, a
      002836 09                    9320 	add	hl, bc
      002837 4D                    9321 	ld	c, l
      002838 44                    9322 	ld	b, h
      002839 21 0D 00              9323 	ld	hl, #0x000d
      00283C E5                    9324 	push	hl
      00283D D5                    9325 	push	de
      00283E C5                    9326 	push	bc
      00283F CDr00r00              9327 	call	___memcpy
      002842 E8 06                 9328 	add	sp, #6
      002844 18 61                 9329 	jr	00114$
      002846                       9330 00104$:
                                   9331 ;src/main.c:990: projectiles[oldestProjectile] = doubleGun;
      002846 11rA8r00              9332 	ld	de, #_doubleGun+0
      002849 01rB4r00              9333 	ld	bc, #_projectiles+0
      00284C F8 03                 9334 	ldhl	sp,	#3
      00284E 2A                    9335 	ld	a,	(hl+)
      00284F 66                    9336 	ld	h, (hl)
      002850 6F                    9337 	ld	l, a
      002851 09                    9338 	add	hl, bc
      002852 4D                    9339 	ld	c, l
      002853 44                    9340 	ld	b, h
      002854 21 0D 00              9341 	ld	hl, #0x000d
      002857 E5                    9342 	push	hl
      002858 D5                    9343 	push	de
      002859 C5                    9344 	push	bc
      00285A CDr00r00              9345 	call	___memcpy
      00285D E8 06                 9346 	add	sp, #6
      00285F 18 46                 9347 	jr	00114$
      002861                       9348 00113$:
                                   9349 ;src/main.c:993: else if (currentGun == 1) {
      002861 FArD8r00              9350 	ld	a, (#_currentGun)
      002864 3D                    9351 	dec	a
      002865 20 40                 9352 	jr	NZ, 00114$
                                   9353 ;src/main.c:994: if (missiles == 0) {
      002867 FArD9r00              9354 	ld	a, (#_missiles)
      00286A B7                    9355 	or	a, a
      00286B 20 0B                 9356 	jr	NZ, 00107$
                                   9357 ;src/main.c:995: currentGun = 0;
      00286D 21rD8r00              9358 	ld	hl, #_currentGun
      002870 36 00                 9359 	ld	(hl), #0x00
                                   9360 ;src/main.c:996: setGunIcon();
      002872 CDrC1r27              9361 	call	_setGunIcon
                                   9362 ;src/main.c:997: return;
      002875 C3r9Fr2D              9363 	jp	00155$
      002878                       9364 00107$:
                                   9365 ;src/main.c:1000: projectiles[oldestProjectile] = missile;
      002878 11rB5r00              9366 	ld	de, #_missile+0
      00287B 01rB4r00              9367 	ld	bc, #_projectiles+0
      00287E F8 03                 9368 	ldhl	sp,	#3
      002880 2A                    9369 	ld	a,	(hl+)
      002881 66                    9370 	ld	h, (hl)
      002882 6F                    9371 	ld	l, a
      002883 09                    9372 	add	hl, bc
      002884 4D                    9373 	ld	c, l
      002885 44                    9374 	ld	b, h
      002886 21 0D 00              9375 	ld	hl, #0x000d
      002889 E5                    9376 	push	hl
      00288A D5                    9377 	push	de
      00288B C5                    9378 	push	bc
      00288C CDr00r00              9379 	call	___memcpy
      00288F E8 06                 9380 	add	sp, #6
                                   9381 ;src/main.c:1001: updateMissileCount(-1);
      002891 3E FF                 9382 	ld	a, #0xff
      002893 F5                    9383 	push	af
      002894 33                    9384 	inc	sp
      002895 CDrE4r0C              9385 	call	_updateMissileCount
      002898 33                    9386 	inc	sp
                                   9387 ;src/main.c:1003: if (missiles == 0) {
      002899 FArD9r00              9388 	ld	a, (#_missiles)
      00289C B7                    9389 	or	a, a
      00289D 20 08                 9390 	jr	NZ, 00114$
                                   9391 ;src/main.c:1004: currentGun = 0;
      00289F 21rD8r00              9392 	ld	hl, #_currentGun
      0028A2 36 00                 9393 	ld	(hl), #0x00
                                   9394 ;src/main.c:1005: setGunIcon();
      0028A4 CDrC1r27              9395 	call	_setGunIcon
      0028A7                       9396 00114$:
                                   9397 ;src/main.c:1008: projectiles[oldestProjectile].x = playerDrawX;
      0028A7 21rC2r00              9398 	ld	hl, #_oldestProjectile
      0028AA 4E                    9399 	ld	c, (hl)
      0028AB 06 00                 9400 	ld	b, #0x00
      0028AD 69                    9401 	ld	l, c
      0028AE 60                    9402 	ld	h, b
      0028AF 29                    9403 	add	hl, hl
      0028B0 09                    9404 	add	hl, bc
      0028B1 29                    9405 	add	hl, hl
      0028B2 29                    9406 	add	hl, hl
      0028B3 09                    9407 	add	hl, bc
      0028B4 01rB4r00              9408 	ld	bc,#_projectiles
      0028B7 09                    9409 	add	hl,bc
      0028B8 E5                    9410 	push	hl
      0028B9 FArCCr00              9411 	ld	a, (#_playerDrawX)
      0028BC E1                    9412 	pop	hl
      0028BD 0E 00                 9413 	ld	c, #0x00
      0028BF 22                    9414 	ld	(hl+), a
      0028C0 71                    9415 	ld	(hl), c
                                   9416 ;src/main.c:1009: projectiles[oldestProjectile].y = playerDrawY;
      0028C1 21rC2r00              9417 	ld	hl, #_oldestProjectile
      0028C4 4E                    9418 	ld	c, (hl)
      0028C5 06 00                 9419 	ld	b, #0x00
      0028C7 69                    9420 	ld	l, c
      0028C8 60                    9421 	ld	h, b
      0028C9 29                    9422 	add	hl, hl
      0028CA 09                    9423 	add	hl, bc
      0028CB 29                    9424 	add	hl, hl
      0028CC 29                    9425 	add	hl, hl
      0028CD 09                    9426 	add	hl, bc
      0028CE 01rB4r00              9427 	ld	bc,#_projectiles
      0028D1 09                    9428 	add	hl,bc
      0028D2 23                    9429 	inc	hl
      0028D3 23                    9430 	inc	hl
      0028D4 E5                    9431 	push	hl
      0028D5 FArCDr00              9432 	ld	a, (#_playerDrawY)
      0028D8 E1                    9433 	pop	hl
      0028D9 0E 00                 9434 	ld	c, #0x00
      0028DB 22                    9435 	ld	(hl+), a
      0028DC 71                    9436 	ld	(hl), c
                                   9437 ;src/main.c:1010: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      0028DD 21rC2r00              9438 	ld	hl, #_oldestProjectile
      0028E0 4E                    9439 	ld	c, (hl)
      0028E1 06 00                 9440 	ld	b, #0x00
      0028E3 69                    9441 	ld	l, c
      0028E4 60                    9442 	ld	h, b
      0028E5 29                    9443 	add	hl, hl
      0028E6 09                    9444 	add	hl, bc
      0028E7 29                    9445 	add	hl, hl
      0028E8 29                    9446 	add	hl, hl
      0028E9 09                    9447 	add	hl, bc
      0028EA 01rB4r00              9448 	ld	bc,#_projectiles
      0028ED 09                    9449 	add	hl,bc
      0028EE 5D                    9450 	ld	e, l
      0028EF 54                    9451 	ld	d, h
      0028F0 21 05 00              9452 	ld	hl, #0x0005
      0028F3 19                    9453 	add	hl, de
      0028F4 4D                    9454 	ld	c, l
      0028F5 44                    9455 	ld	b, h
      0028F6 21 07 00              9456 	ld	hl, #0x0007
      0028F9 19                    9457 	add	hl, de
      0028FA 7E                    9458 	ld	a, (hl)
      0028FB C5                    9459 	push	bc
      0028FC F5                    9460 	push	af
      0028FD 33                    9461 	inc	sp
      0028FE FArC4r00              9462 	ld	a, (#_xDir)
      002901 F5                    9463 	push	af
      002902 33                    9464 	inc	sp
      002903 CDr00r00              9465 	call	__muluschar
      002906 E1                    9466 	pop	hl
      002907 7B                    9467 	ld	a, e
      002908 C1                    9468 	pop	bc
      002909 02                    9469 	ld	(bc), a
                                   9470 ;src/main.c:1011: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      00290A 21rC2r00              9471 	ld	hl, #_oldestProjectile
      00290D 4E                    9472 	ld	c, (hl)
      00290E 06 00                 9473 	ld	b, #0x00
      002910 69                    9474 	ld	l, c
      002911 60                    9475 	ld	h, b
      002912 29                    9476 	add	hl, hl
      002913 09                    9477 	add	hl, bc
      002914 29                    9478 	add	hl, hl
      002915 29                    9479 	add	hl, hl
      002916 09                    9480 	add	hl, bc
      002917 01rB4r00              9481 	ld	bc,#_projectiles
      00291A 09                    9482 	add	hl,bc
      00291B 5D                    9483 	ld	e, l
      00291C 54                    9484 	ld	d, h
      00291D 21 06 00              9485 	ld	hl, #0x0006
      002920 19                    9486 	add	hl, de
      002921 4D                    9487 	ld	c, l
      002922 44                    9488 	ld	b, h
      002923 21 07 00              9489 	ld	hl, #0x0007
      002926 19                    9490 	add	hl, de
      002927 7E                    9491 	ld	a, (hl)
      002928 C5                    9492 	push	bc
      002929 F5                    9493 	push	af
      00292A 33                    9494 	inc	sp
      00292B FArC5r00              9495 	ld	a, (#_yDir)
      00292E F5                    9496 	push	af
      00292F 33                    9497 	inc	sp
      002930 CDr00r00              9498 	call	__muluschar
      002933 E1                    9499 	pop	hl
      002934 7B                    9500 	ld	a, e
      002935 C1                    9501 	pop	bc
      002936 02                    9502 	ld	(bc), a
                                   9503 ;src/main.c:980: oldestProjectile += 1;
      002937 FArC2r00              9504 	ld	a, (#_oldestProjectile)
      00293A F8 04                 9505 	ldhl	sp,	#4
      00293C 77                    9506 	ld	(hl), a
                                   9507 ;src/main.c:987: projectiles[oldestProjectile] = singleGun;
      00293D 21rC2r00              9508 	ld	hl, #_oldestProjectile
      002940 4E                    9509 	ld	c, (hl)
      002941 06 00                 9510 	ld	b, #0x00
      002943 69                    9511 	ld	l, c
      002944 60                    9512 	ld	h, b
      002945 29                    9513 	add	hl, hl
      002946 09                    9514 	add	hl, bc
      002947 29                    9515 	add	hl, hl
      002948 29                    9516 	add	hl, hl
      002949 09                    9517 	add	hl, bc
                                   9518 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00294A 01rB4r00              9519 	ld	bc,#_projectiles
      00294D 09                    9520 	add	hl,bc
      00294E 4D                    9521 	ld	c, l
      00294F 44                    9522 	ld	b, h
      002950 F8 04                 9523 	ldhl	sp,	#4
      002952 3A                    9524 	ld	a, (hl-)
      002953 C6 1E                 9525 	add	a, #0x1e
      002955 77                    9526 	ld	(hl), a
      002956 21 0C 00              9527 	ld	hl, #0x000c
      002959 09                    9528 	add	hl, bc
      00295A 7E                    9529 	ld	a, (hl)
      00295B F8 04                 9530 	ldhl	sp,	#4
      00295D 77                    9531 	ld	(hl), a
                                   9532 ;src/main.c:1015: if (yDir != 0 && xDir == 0) {
      00295E FArC5r00              9533 	ld	a, (#_yDir)
      002961 B7                    9534 	or	a, a
      002962 28 71                 9535 	jr	Z, 00141$
      002964 FArC4r00              9536 	ld	a, (#_xDir)
      002967 B7                    9537 	or	a, a
      002968 20 6B                 9538 	jr	NZ, 00141$
                                   9539 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00296A F8 04                 9540 	ldhl	sp,	#4
      00296C 3A                    9541 	ld	a, (hl-)
      00296D 4F                    9542 	ld	c, a
                                   9543 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00296E 6E                    9544 	ld	l, (hl)
                                   9545 ;	spillPairReg hl
                                   9546 ;	spillPairReg hl
      00296F 26 00                 9547 	ld	h, #0x00
                                   9548 ;	spillPairReg hl
                                   9549 ;	spillPairReg hl
      002971 29                    9550 	add	hl, hl
      002972 29                    9551 	add	hl, hl
      002973 11r00r00              9552 	ld	de, #_shadow_OAM
      002976 19                    9553 	add	hl, de
      002977 23                    9554 	inc	hl
      002978 23                    9555 	inc	hl
      002979 71                    9556 	ld	(hl), c
                                   9557 ;src/main.c:980: oldestProjectile += 1;
      00297A FArC2r00              9558 	ld	a, (#_oldestProjectile)
                                   9559 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00297D C6 1E                 9560 	add	a, #0x1e
      00297F 4F                    9561 	ld	c, a
                                   9562 ;src/main.c:1017: if (yDir == 1) {
      002980 FArC5r00              9563 	ld	a, (#_yDir)
                                   9564 ;src/main.c:1018: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   9565 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002983 3D                    9566 	dec	a
      002984 20 27                 9567 	jr	NZ, 00116$
      002986 67                    9568 	ld	h,a
                                   9569 ;	spillPairReg hl
                                   9570 ;	spillPairReg hl
      002987 69                    9571 	ld	l, c
      002988 29                    9572 	add	hl, hl
      002989 29                    9573 	add	hl, hl
      00298A 11r00r00              9574 	ld	de, #_shadow_OAM
      00298D 19                    9575 	add	hl, de
      00298E 23                    9576 	inc	hl
      00298F 23                    9577 	inc	hl
      002990 23                    9578 	inc	hl
      002991 36 40                 9579 	ld	(hl), #0x40
                                   9580 ;src/main.c:1019: projectiles[oldestProjectile].offset = 4;
      002993 21rC2r00              9581 	ld	hl, #_oldestProjectile
      002996 4E                    9582 	ld	c, (hl)
      002997 06 00                 9583 	ld	b, #0x00
      002999 69                    9584 	ld	l, c
      00299A 60                    9585 	ld	h, b
      00299B 29                    9586 	add	hl, hl
      00299C 09                    9587 	add	hl, bc
      00299D 29                    9588 	add	hl, hl
      00299E 29                    9589 	add	hl, hl
      00299F 09                    9590 	add	hl, bc
      0029A0 01rB4r00              9591 	ld	bc,#_projectiles
      0029A3 09                    9592 	add	hl,bc
      0029A4 01 04 00              9593 	ld	bc, #0x0004
      0029A7 09                    9594 	add	hl, bc
      0029A8 36 04                 9595 	ld	(hl), #0x04
      0029AA C3r86r2D              9596 	jp	00142$
      0029AD                       9597 00116$:
                                   9598 ;src/main.c:1022: set_sprite_prop(30+oldestProjectile, 0); 
                                   9599 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0029AD 26 00                 9600 	ld	h, #0x00
                                   9601 ;	spillPairReg hl
                                   9602 ;	spillPairReg hl
      0029AF 69                    9603 	ld	l, c
      0029B0 29                    9604 	add	hl, hl
      0029B1 29                    9605 	add	hl, hl
      0029B2 11r00r00              9606 	ld	de, #_shadow_OAM
      0029B5 19                    9607 	add	hl, de
      0029B6 23                    9608 	inc	hl
      0029B7 23                    9609 	inc	hl
      0029B8 23                    9610 	inc	hl
      0029B9 36 00                 9611 	ld	(hl), #0x00
                                   9612 ;src/main.c:1023: projectiles[oldestProjectile].offset = 12;
      0029BB 21rC2r00              9613 	ld	hl, #_oldestProjectile
      0029BE 4E                    9614 	ld	c, (hl)
      0029BF 06 00                 9615 	ld	b, #0x00
      0029C1 69                    9616 	ld	l, c
      0029C2 60                    9617 	ld	h, b
      0029C3 29                    9618 	add	hl, hl
      0029C4 09                    9619 	add	hl, bc
      0029C5 29                    9620 	add	hl, hl
      0029C6 29                    9621 	add	hl, hl
      0029C7 09                    9622 	add	hl, bc
      0029C8 01rB4r00              9623 	ld	bc,#_projectiles
      0029CB 09                    9624 	add	hl,bc
      0029CC 01 04 00              9625 	ld	bc, #0x0004
      0029CF 09                    9626 	add	hl, bc
      0029D0 36 0C                 9627 	ld	(hl), #0x0c
      0029D2 C3r86r2D              9628 	jp	00142$
      0029D5                       9629 00141$:
                                   9630 ;src/main.c:1027: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   9631 ;src/main.c:1026: else if (xDir != 0 && yDir == 0) {
      0029D5 FArC4r00              9632 	ld	a, (#_xDir)
      0029D8 B7                    9633 	or	a, a
      0029D9 CAr1Fr2B              9634 	jp	Z, 00137$
      0029DC FArC5r00              9635 	ld	a, (#_yDir)
      0029DF B7                    9636 	or	a, a
      0029E0 C2r1Fr2B              9637 	jp	NZ, 00137$
                                   9638 ;src/main.c:1027: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      0029E3 F8 04                 9639 	ldhl	sp,	#4
      0029E5 34                    9640 	inc	(hl)
      0029E6 34                    9641 	inc	(hl)
      0029E7 2B                    9642 	dec	hl
                                   9643 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0029E8 3A                    9644 	ld	a, (hl-)
      0029E9 22                    9645 	ld	(hl+), a
      0029EA 36 00                 9646 	ld	(hl), #0x00
      0029EC 3E 02                 9647 	ld	a, #0x02
      0029EE                       9648 00261$:
      0029EE F8 02                 9649 	ldhl	sp,	#2
      0029F0 CB 26                 9650 	sla	(hl)
      0029F2 23                    9651 	inc	hl
      0029F3 CB 16                 9652 	rl	(hl)
      0029F5 3D                    9653 	dec	a
      0029F6 20 F6                 9654 	jr	NZ, 00261$
      0029F8 2B                    9655 	dec	hl
      0029F9 2A                    9656 	ld	a, (hl+)
      0029FA 5F                    9657 	ld	e, a
      0029FB 56                    9658 	ld	d, (hl)
      0029FC 21r00r00              9659 	ld	hl, #_shadow_OAM
      0029FF 19                    9660 	add	hl, de
      002A00 33                    9661 	inc	sp
      002A01 33                    9662 	inc	sp
      002A02 5D                    9663 	ld	e, l
      002A03 54                    9664 	ld	d, h
      002A04 D5                    9665 	push	de
      002A05 21 02 00              9666 	ld	hl, #0x0002
      002A08 19                    9667 	add	hl, de
      002A09 E5                    9668 	push	hl
      002A0A 7D                    9669 	ld	a, l
      002A0B F8 04                 9670 	ldhl	sp,	#4
      002A0D 77                    9671 	ld	(hl), a
      002A0E E1                    9672 	pop	hl
      002A0F 7C                    9673 	ld	a, h
      002A10 F8 03                 9674 	ldhl	sp,	#3
      002A12 32                    9675 	ld	(hl-), a
      002A13 2A                    9676 	ld	a, (hl+)
      002A14 5F                    9677 	ld	e, a
      002A15 2A                    9678 	ld	a, (hl+)
      002A16 57                    9679 	ld	d, a
      002A17 7E                    9680 	ld	a, (hl)
      002A18 12                    9681 	ld	(de), a
                                   9682 ;src/main.c:980: oldestProjectile += 1;
      002A19 FArC2r00              9683 	ld	a, (#_oldestProjectile)
      002A1C F8 04                 9684 	ldhl	sp,	#4
      002A1E 77                    9685 	ld	(hl), a
                                   9686 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002A1F 7E                    9687 	ld	a, (hl)
      002A20 C6 1E                 9688 	add	a, #0x1e
      002A22 77                    9689 	ld	(hl), a
                                   9690 ;src/main.c:1028: if (xDir == 1) {
      002A23 FArC4r00              9691 	ld	a, (#_xDir)
      002A26 3D                    9692 	dec	a
      002A27 20 7B                 9693 	jr	NZ, 00119$
                                   9694 ;src/main.c:1029: set_sprite_prop(30+oldestProjectile, 0);
      002A29 F8 04                 9695 	ldhl	sp,	#4
                                   9696 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002A2B 3A                    9697 	ld	a, (hl-)
      002A2C 22                    9698 	ld	(hl+), a
      002A2D 36 00                 9699 	ld	(hl), #0x00
      002A2F 3E 02                 9700 	ld	a, #0x02
      002A31                       9701 00264$:
      002A31 F8 03                 9702 	ldhl	sp,	#3
      002A33 CB 26                 9703 	sla	(hl)
      002A35 23                    9704 	inc	hl
      002A36 CB 16                 9705 	rl	(hl)
      002A38 3D                    9706 	dec	a
      002A39 20 F6                 9707 	jr	NZ, 00264$
      002A3B 2B                    9708 	dec	hl
      002A3C 2A                    9709 	ld	a, (hl+)
      002A3D 5F                    9710 	ld	e, a
      002A3E 56                    9711 	ld	d, (hl)
      002A3F 21r00r00              9712 	ld	hl, #_shadow_OAM
      002A42 19                    9713 	add	hl, de
      002A43 E5                    9714 	push	hl
      002A44 7D                    9715 	ld	a, l
      002A45 F8 03                 9716 	ldhl	sp,	#3
      002A47 77                    9717 	ld	(hl), a
      002A48 E1                    9718 	pop	hl
      002A49 7C                    9719 	ld	a, h
      002A4A F8 02                 9720 	ldhl	sp,	#2
      002A4C 32                    9721 	ld	(hl-), a
      002A4D 2A                    9722 	ld	a, (hl+)
      002A4E 5F                    9723 	ld	e, a
      002A4F 56                    9724 	ld	d, (hl)
      002A50 21 03 00              9725 	ld	hl, #0x0003
      002A53 19                    9726 	add	hl, de
      002A54 E5                    9727 	push	hl
      002A55 7D                    9728 	ld	a, l
      002A56 F8 05                 9729 	ldhl	sp,	#5
      002A58 77                    9730 	ld	(hl), a
      002A59 E1                    9731 	pop	hl
      002A5A 7C                    9732 	ld	a, h
      002A5B F8 04                 9733 	ldhl	sp,	#4
      002A5D 32                    9734 	ld	(hl-), a
      002A5E 2A                    9735 	ld	a,	(hl+)
      002A5F 66                    9736 	ld	h, (hl)
      002A60 6F                    9737 	ld	l, a
      002A61 36 00                 9738 	ld	(hl), #0x00
                                   9739 ;src/main.c:1030: projectiles[oldestProjectile].offset = 12;
      002A63 21rC2r00              9740 	ld	hl, #_oldestProjectile
      002A66 4E                    9741 	ld	c, (hl)
      002A67 06 00                 9742 	ld	b, #0x00
      002A69 69                    9743 	ld	l, c
      002A6A 60                    9744 	ld	h, b
      002A6B 29                    9745 	add	hl, hl
      002A6C 09                    9746 	add	hl, bc
      002A6D 29                    9747 	add	hl, hl
      002A6E 29                    9748 	add	hl, hl
      002A6F 09                    9749 	add	hl, bc
      002A70 E5                    9750 	push	hl
      002A71 7D                    9751 	ld	a, l
      002A72 F8 05                 9752 	ldhl	sp,	#5
      002A74 77                    9753 	ld	(hl), a
      002A75 E1                    9754 	pop	hl
      002A76 7C                    9755 	ld	a, h
      002A77 F8 04                 9756 	ldhl	sp,	#4
      002A79 32                    9757 	ld	(hl-), a
      002A7A 2A                    9758 	ld	a, (hl+)
      002A7B 5F                    9759 	ld	e, a
      002A7C 56                    9760 	ld	d, (hl)
      002A7D 21rB4r00              9761 	ld	hl, #_projectiles
      002A80 19                    9762 	add	hl, de
      002A81 E5                    9763 	push	hl
      002A82 7D                    9764 	ld	a, l
      002A83 F8 03                 9765 	ldhl	sp,	#3
      002A85 77                    9766 	ld	(hl), a
      002A86 E1                    9767 	pop	hl
      002A87 7C                    9768 	ld	a, h
      002A88 F8 02                 9769 	ldhl	sp,	#2
      002A8A 32                    9770 	ld	(hl-), a
      002A8B 2A                    9771 	ld	a, (hl+)
      002A8C 5F                    9772 	ld	e, a
      002A8D 56                    9773 	ld	d, (hl)
      002A8E 21 04 00              9774 	ld	hl, #0x0004
      002A91 19                    9775 	add	hl, de
      002A92 E5                    9776 	push	hl
      002A93 7D                    9777 	ld	a, l
      002A94 F8 05                 9778 	ldhl	sp,	#5
      002A96 77                    9779 	ld	(hl), a
      002A97 E1                    9780 	pop	hl
      002A98 7C                    9781 	ld	a, h
      002A99 F8 04                 9782 	ldhl	sp,	#4
      002A9B 32                    9783 	ld	(hl-), a
      002A9C 2A                    9784 	ld	a,	(hl+)
      002A9D 66                    9785 	ld	h, (hl)
      002A9E 6F                    9786 	ld	l, a
      002A9F 36 0C                 9787 	ld	(hl), #0x0c
      002AA1 C3r86r2D              9788 	jp	00142$
      002AA4                       9789 00119$:
                                   9790 ;src/main.c:1033: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002AA4 F8 04                 9791 	ldhl	sp,	#4
                                   9792 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002AA6 3A                    9793 	ld	a, (hl-)
      002AA7 22                    9794 	ld	(hl+), a
      002AA8 36 00                 9795 	ld	(hl), #0x00
      002AAA 3E 02                 9796 	ld	a, #0x02
      002AAC                       9797 00265$:
      002AAC F8 03                 9798 	ldhl	sp,	#3
      002AAE CB 26                 9799 	sla	(hl)
      002AB0 23                    9800 	inc	hl
      002AB1 CB 16                 9801 	rl	(hl)
      002AB3 3D                    9802 	dec	a
      002AB4 20 F6                 9803 	jr	NZ, 00265$
      002AB6 2B                    9804 	dec	hl
      002AB7 2A                    9805 	ld	a, (hl+)
      002AB8 5F                    9806 	ld	e, a
      002AB9 56                    9807 	ld	d, (hl)
      002ABA 21r00r00              9808 	ld	hl, #_shadow_OAM
      002ABD 19                    9809 	add	hl, de
      002ABE E5                    9810 	push	hl
      002ABF 7D                    9811 	ld	a, l
      002AC0 F8 03                 9812 	ldhl	sp,	#3
      002AC2 77                    9813 	ld	(hl), a
      002AC3 E1                    9814 	pop	hl
      002AC4 7C                    9815 	ld	a, h
      002AC5 F8 02                 9816 	ldhl	sp,	#2
      002AC7 32                    9817 	ld	(hl-), a
      002AC8 2A                    9818 	ld	a, (hl+)
      002AC9 5F                    9819 	ld	e, a
      002ACA 56                    9820 	ld	d, (hl)
      002ACB 21 03 00              9821 	ld	hl, #0x0003
      002ACE 19                    9822 	add	hl, de
      002ACF E5                    9823 	push	hl
      002AD0 7D                    9824 	ld	a, l
      002AD1 F8 05                 9825 	ldhl	sp,	#5
      002AD3 77                    9826 	ld	(hl), a
      002AD4 E1                    9827 	pop	hl
      002AD5 7C                    9828 	ld	a, h
      002AD6 F8 04                 9829 	ldhl	sp,	#4
      002AD8 32                    9830 	ld	(hl-), a
      002AD9 2A                    9831 	ld	a,	(hl+)
      002ADA 66                    9832 	ld	h, (hl)
      002ADB 6F                    9833 	ld	l, a
      002ADC 36 20                 9834 	ld	(hl), #0x20
                                   9835 ;src/main.c:1034: projectiles[oldestProjectile].offset = 12;
      002ADE 21rC2r00              9836 	ld	hl, #_oldestProjectile
      002AE1 4E                    9837 	ld	c, (hl)
      002AE2 06 00                 9838 	ld	b, #0x00
      002AE4 69                    9839 	ld	l, c
      002AE5 60                    9840 	ld	h, b
      002AE6 29                    9841 	add	hl, hl
      002AE7 09                    9842 	add	hl, bc
      002AE8 29                    9843 	add	hl, hl
      002AE9 29                    9844 	add	hl, hl
      002AEA 09                    9845 	add	hl, bc
      002AEB E5                    9846 	push	hl
      002AEC 7D                    9847 	ld	a, l
      002AED F8 05                 9848 	ldhl	sp,	#5
      002AEF 77                    9849 	ld	(hl), a
      002AF0 E1                    9850 	pop	hl
      002AF1 7C                    9851 	ld	a, h
      002AF2 F8 04                 9852 	ldhl	sp,	#4
      002AF4 32                    9853 	ld	(hl-), a
      002AF5 2A                    9854 	ld	a, (hl+)
      002AF6 5F                    9855 	ld	e, a
      002AF7 56                    9856 	ld	d, (hl)
      002AF8 21rB4r00              9857 	ld	hl, #_projectiles
      002AFB 19                    9858 	add	hl, de
      002AFC E5                    9859 	push	hl
      002AFD 7D                    9860 	ld	a, l
      002AFE F8 03                 9861 	ldhl	sp,	#3
      002B00 77                    9862 	ld	(hl), a
      002B01 E1                    9863 	pop	hl
      002B02 7C                    9864 	ld	a, h
      002B03 F8 02                 9865 	ldhl	sp,	#2
      002B05 32                    9866 	ld	(hl-), a
      002B06 2A                    9867 	ld	a, (hl+)
      002B07 5F                    9868 	ld	e, a
      002B08 56                    9869 	ld	d, (hl)
      002B09 21 04 00              9870 	ld	hl, #0x0004
      002B0C 19                    9871 	add	hl, de
      002B0D E5                    9872 	push	hl
      002B0E 7D                    9873 	ld	a, l
      002B0F F8 05                 9874 	ldhl	sp,	#5
      002B11 77                    9875 	ld	(hl), a
      002B12 E1                    9876 	pop	hl
      002B13 7C                    9877 	ld	a, h
      002B14 F8 04                 9878 	ldhl	sp,	#4
      002B16 32                    9879 	ld	(hl-), a
      002B17 2A                    9880 	ld	a,	(hl+)
      002B18 66                    9881 	ld	h, (hl)
      002B19 6F                    9882 	ld	l, a
      002B1A 36 0C                 9883 	ld	(hl), #0x0c
      002B1C C3r86r2D              9884 	jp	00142$
      002B1F                       9885 00137$:
                                   9886 ;src/main.c:1038: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      002B1F F8 04                 9887 	ldhl	sp,	#4
      002B21 7E                    9888 	ld	a, (hl)
      002B22 C6 04                 9889 	add	a, #0x04
      002B24 F8 00                 9890 	ldhl	sp,	#0
      002B26 77                    9891 	ld	(hl), a
      002B27 F8 03                 9892 	ldhl	sp,	#3
                                   9893 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002B29 7E                    9894 	ld	a, (hl)
      002B2A 22                    9895 	ld	(hl+), a
      002B2B 36 00                 9896 	ld	(hl), #0x00
      002B2D 3E 02                 9897 	ld	a, #0x02
      002B2F                       9898 00266$:
      002B2F F8 03                 9899 	ldhl	sp,	#3
      002B31 CB 26                 9900 	sla	(hl)
      002B33 23                    9901 	inc	hl
      002B34 CB 16                 9902 	rl	(hl)
      002B36 3D                    9903 	dec	a
      002B37 20 F6                 9904 	jr	NZ, 00266$
      002B39 2B                    9905 	dec	hl
      002B3A 2A                    9906 	ld	a, (hl+)
      002B3B 5F                    9907 	ld	e, a
      002B3C 56                    9908 	ld	d, (hl)
      002B3D 21r00r00              9909 	ld	hl, #_shadow_OAM
      002B40 19                    9910 	add	hl, de
      002B41 E5                    9911 	push	hl
      002B42 7D                    9912 	ld	a, l
      002B43 F8 03                 9913 	ldhl	sp,	#3
      002B45 77                    9914 	ld	(hl), a
      002B46 E1                    9915 	pop	hl
      002B47 7C                    9916 	ld	a, h
      002B48 F8 02                 9917 	ldhl	sp,	#2
      002B4A 32                    9918 	ld	(hl-), a
      002B4B 2A                    9919 	ld	a, (hl+)
      002B4C 5F                    9920 	ld	e, a
      002B4D 56                    9921 	ld	d, (hl)
      002B4E 21 02 00              9922 	ld	hl, #0x0002
      002B51 19                    9923 	add	hl, de
      002B52 E5                    9924 	push	hl
      002B53 7D                    9925 	ld	a, l
      002B54 F8 05                 9926 	ldhl	sp,	#5
      002B56 77                    9927 	ld	(hl), a
      002B57 E1                    9928 	pop	hl
      002B58 7C                    9929 	ld	a, h
      002B59 F8 04                 9930 	ldhl	sp,	#4
      002B5B 32                    9931 	ld	(hl-), a
      002B5C 2A                    9932 	ld	a, (hl+)
      002B5D 5F                    9933 	ld	e, a
      002B5E 56                    9934 	ld	d, (hl)
      002B5F F8 00                 9935 	ldhl	sp,	#0
      002B61 7E                    9936 	ld	a, (hl)
      002B62 12                    9937 	ld	(de), a
                                   9938 ;src/main.c:1039: if (xDir == 1 && yDir == -1) {
      002B63 FArC4r00              9939 	ld	a, (#_xDir)
      002B66 3D                    9940 	dec	a
      002B67 3E 01                 9941 	ld	a, #0x01
      002B69 28 01                 9942 	jr	Z, 00268$
      002B6B AF                    9943 	xor	a, a
      002B6C                       9944 00268$:
      002B6C F8 04                 9945 	ldhl	sp,	#4
      002B6E 77                    9946 	ld	(hl), a
                                   9947 ;src/main.c:980: oldestProjectile += 1;
      002B6F 21rC2r00              9948 	ld	hl, #_oldestProjectile
      002B72 4E                    9949 	ld	c, (hl)
                                   9950 ;src/main.c:1039: if (xDir == 1 && yDir == -1) {
      002B73 FArC5r00              9951 	ld	a, (#_yDir)
      002B76 3C                    9952 	inc	a
      002B77 3E 01                 9953 	ld	a, #0x01
      002B79 28 01                 9954 	jr	Z, 00270$
      002B7B AF                    9955 	xor	a, a
      002B7C                       9956 00270$:
      002B7C F8 01                 9957 	ldhl	sp,	#1
                                   9958 ;src/main.c:1016: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002B7E 22                    9959 	ld	(hl+), a
      002B7F 79                    9960 	ld	a, c
      002B80 C6 1E                 9961 	add	a, #0x1e
                                   9962 ;src/main.c:1039: if (xDir == 1 && yDir == -1) {
      002B82 22                    9963 	ld	(hl+), a
      002B83 23                    9964 	inc	hl
      002B84 7E                    9965 	ld	a, (hl)
      002B85 B7                    9966 	or	a, a
      002B86 CAr09r2C              9967 	jp	Z, 00133$
      002B89 F8 01                 9968 	ldhl	sp,	#1
      002B8B 7E                    9969 	ld	a, (hl)
      002B8C B7                    9970 	or	a, a
      002B8D 28 7A                 9971 	jr	Z, 00133$
                                   9972 ;src/main.c:1040: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002B8F 23                    9973 	inc	hl
                                   9974 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002B90 2A                    9975 	ld	a, (hl+)
      002B91 22                    9976 	ld	(hl+), a
      002B92 36 00                 9977 	ld	(hl), #0x00
      002B94 3E 02                 9978 	ld	a, #0x02
      002B96                       9979 00271$:
      002B96 F8 03                 9980 	ldhl	sp,	#3
      002B98 CB 26                 9981 	sla	(hl)
      002B9A 23                    9982 	inc	hl
      002B9B CB 16                 9983 	rl	(hl)
      002B9D 3D                    9984 	dec	a
      002B9E 20 F6                 9985 	jr	NZ, 00271$
      002BA0 2B                    9986 	dec	hl
      002BA1 2A                    9987 	ld	a, (hl+)
      002BA2 5F                    9988 	ld	e, a
      002BA3 56                    9989 	ld	d, (hl)
      002BA4 21r00r00              9990 	ld	hl, #_shadow_OAM
      002BA7 19                    9991 	add	hl, de
      002BA8 E5                    9992 	push	hl
      002BA9 7D                    9993 	ld	a, l
      002BAA F8 03                 9994 	ldhl	sp,	#3
      002BAC 77                    9995 	ld	(hl), a
      002BAD E1                    9996 	pop	hl
      002BAE 7C                    9997 	ld	a, h
      002BAF F8 02                 9998 	ldhl	sp,	#2
      002BB1 32                    9999 	ld	(hl-), a
      002BB2 2A                   10000 	ld	a, (hl+)
      002BB3 5F                   10001 	ld	e, a
      002BB4 56                   10002 	ld	d, (hl)
      002BB5 21 03 00             10003 	ld	hl, #0x0003
      002BB8 19                   10004 	add	hl, de
      002BB9 E5                   10005 	push	hl
      002BBA 7D                   10006 	ld	a, l
      002BBB F8 05                10007 	ldhl	sp,	#5
      002BBD 77                   10008 	ld	(hl), a
      002BBE E1                   10009 	pop	hl
      002BBF 7C                   10010 	ld	a, h
      002BC0 F8 04                10011 	ldhl	sp,	#4
      002BC2 32                   10012 	ld	(hl-), a
      002BC3 2A                   10013 	ld	a,	(hl+)
      002BC4 66                   10014 	ld	h, (hl)
      002BC5 6F                   10015 	ld	l, a
      002BC6 36 00                10016 	ld	(hl), #0x00
                                  10017 ;src/main.c:1041: projectiles[oldestProjectile].offset = 12;
      002BC8 21rC2r00             10018 	ld	hl, #_oldestProjectile
      002BCB 4E                   10019 	ld	c, (hl)
      002BCC 06 00                10020 	ld	b, #0x00
      002BCE 69                   10021 	ld	l, c
      002BCF 60                   10022 	ld	h, b
      002BD0 29                   10023 	add	hl, hl
      002BD1 09                   10024 	add	hl, bc
      002BD2 29                   10025 	add	hl, hl
      002BD3 29                   10026 	add	hl, hl
      002BD4 09                   10027 	add	hl, bc
      002BD5 E5                   10028 	push	hl
      002BD6 7D                   10029 	ld	a, l
      002BD7 F8 05                10030 	ldhl	sp,	#5
      002BD9 77                   10031 	ld	(hl), a
      002BDA E1                   10032 	pop	hl
      002BDB 7C                   10033 	ld	a, h
      002BDC F8 04                10034 	ldhl	sp,	#4
      002BDE 32                   10035 	ld	(hl-), a
      002BDF 2A                   10036 	ld	a, (hl+)
      002BE0 5F                   10037 	ld	e, a
      002BE1 56                   10038 	ld	d, (hl)
      002BE2 21rB4r00             10039 	ld	hl, #_projectiles
      002BE5 19                   10040 	add	hl, de
      002BE6 E5                   10041 	push	hl
      002BE7 7D                   10042 	ld	a, l
      002BE8 F8 03                10043 	ldhl	sp,	#3
      002BEA 77                   10044 	ld	(hl), a
      002BEB E1                   10045 	pop	hl
      002BEC 7C                   10046 	ld	a, h
      002BED F8 02                10047 	ldhl	sp,	#2
      002BEF 32                   10048 	ld	(hl-), a
      002BF0 2A                   10049 	ld	a, (hl+)
      002BF1 5F                   10050 	ld	e, a
      002BF2 56                   10051 	ld	d, (hl)
      002BF3 21 04 00             10052 	ld	hl, #0x0004
      002BF6 19                   10053 	add	hl, de
      002BF7 E5                   10054 	push	hl
      002BF8 7D                   10055 	ld	a, l
      002BF9 F8 05                10056 	ldhl	sp,	#5
      002BFB 77                   10057 	ld	(hl), a
      002BFC E1                   10058 	pop	hl
      002BFD 7C                   10059 	ld	a, h
      002BFE F8 04                10060 	ldhl	sp,	#4
      002C00 32                   10061 	ld	(hl-), a
      002C01 2A                   10062 	ld	a,	(hl+)
      002C02 66                   10063 	ld	h, (hl)
      002C03 6F                   10064 	ld	l, a
      002C04 36 0C                10065 	ld	(hl), #0x0c
      002C06 C3r86r2D             10066 	jp	00142$
      002C09                      10067 00133$:
                                  10068 ;src/main.c:1017: if (yDir == 1) {
      002C09 FArC5r00             10069 	ld	a, (#_yDir)
      002C0C 3D                   10070 	dec	a
      002C0D 3E 01                10071 	ld	a, #0x01
      002C0F 28 01                10072 	jr	Z, 00273$
      002C11 AF                   10073 	xor	a, a
      002C12                      10074 00273$:
      002C12 F8 03                10075 	ldhl	sp,	#3
                                  10076 ;src/main.c:1043: else if (xDir == 1 && yDir == 1) {
      002C14 22                   10077 	ld	(hl+), a
      002C15 7E                   10078 	ld	a, (hl)
      002C16 B7                   10079 	or	a, a
      002C17 CAr99r2C             10080 	jp	Z, 00129$
      002C1A 2B                   10081 	dec	hl
      002C1B 7E                   10082 	ld	a, (hl)
      002C1C B7                   10083 	or	a, a
      002C1D 28 7A                10084 	jr	Z, 00129$
                                  10085 ;src/main.c:1044: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      002C1F 2B                   10086 	dec	hl
                                  10087 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002C20 2A                   10088 	ld	a, (hl+)
      002C21 22                   10089 	ld	(hl+), a
      002C22 36 00                10090 	ld	(hl), #0x00
      002C24 3E 02                10091 	ld	a, #0x02
      002C26                      10092 00274$:
      002C26 F8 03                10093 	ldhl	sp,	#3
      002C28 CB 26                10094 	sla	(hl)
      002C2A 23                   10095 	inc	hl
      002C2B CB 16                10096 	rl	(hl)
      002C2D 3D                   10097 	dec	a
      002C2E 20 F6                10098 	jr	NZ, 00274$
      002C30 2B                   10099 	dec	hl
      002C31 2A                   10100 	ld	a, (hl+)
      002C32 5F                   10101 	ld	e, a
      002C33 56                   10102 	ld	d, (hl)
      002C34 21r00r00             10103 	ld	hl, #_shadow_OAM
      002C37 19                   10104 	add	hl, de
      002C38 E5                   10105 	push	hl
      002C39 7D                   10106 	ld	a, l
      002C3A F8 03                10107 	ldhl	sp,	#3
      002C3C 77                   10108 	ld	(hl), a
      002C3D E1                   10109 	pop	hl
      002C3E 7C                   10110 	ld	a, h
      002C3F F8 02                10111 	ldhl	sp,	#2
      002C41 32                   10112 	ld	(hl-), a
      002C42 2A                   10113 	ld	a, (hl+)
      002C43 5F                   10114 	ld	e, a
      002C44 56                   10115 	ld	d, (hl)
      002C45 21 03 00             10116 	ld	hl, #0x0003
      002C48 19                   10117 	add	hl, de
      002C49 E5                   10118 	push	hl
      002C4A 7D                   10119 	ld	a, l
      002C4B F8 05                10120 	ldhl	sp,	#5
      002C4D 77                   10121 	ld	(hl), a
      002C4E E1                   10122 	pop	hl
      002C4F 7C                   10123 	ld	a, h
      002C50 F8 04                10124 	ldhl	sp,	#4
      002C52 32                   10125 	ld	(hl-), a
      002C53 2A                   10126 	ld	a,	(hl+)
      002C54 66                   10127 	ld	h, (hl)
      002C55 6F                   10128 	ld	l, a
      002C56 36 40                10129 	ld	(hl), #0x40
                                  10130 ;src/main.c:1045: projectiles[oldestProjectile].offset = 4;
      002C58 21rC2r00             10131 	ld	hl, #_oldestProjectile
      002C5B 4E                   10132 	ld	c, (hl)
      002C5C 06 00                10133 	ld	b, #0x00
      002C5E 69                   10134 	ld	l, c
      002C5F 60                   10135 	ld	h, b
      002C60 29                   10136 	add	hl, hl
      002C61 09                   10137 	add	hl, bc
      002C62 29                   10138 	add	hl, hl
      002C63 29                   10139 	add	hl, hl
      002C64 09                   10140 	add	hl, bc
      002C65 E5                   10141 	push	hl
      002C66 7D                   10142 	ld	a, l
      002C67 F8 05                10143 	ldhl	sp,	#5
      002C69 77                   10144 	ld	(hl), a
      002C6A E1                   10145 	pop	hl
      002C6B 7C                   10146 	ld	a, h
      002C6C F8 04                10147 	ldhl	sp,	#4
      002C6E 32                   10148 	ld	(hl-), a
      002C6F 2A                   10149 	ld	a, (hl+)
      002C70 5F                   10150 	ld	e, a
      002C71 56                   10151 	ld	d, (hl)
      002C72 21rB4r00             10152 	ld	hl, #_projectiles
      002C75 19                   10153 	add	hl, de
      002C76 E5                   10154 	push	hl
      002C77 7D                   10155 	ld	a, l
      002C78 F8 03                10156 	ldhl	sp,	#3
      002C7A 77                   10157 	ld	(hl), a
      002C7B E1                   10158 	pop	hl
      002C7C 7C                   10159 	ld	a, h
      002C7D F8 02                10160 	ldhl	sp,	#2
      002C7F 32                   10161 	ld	(hl-), a
      002C80 2A                   10162 	ld	a, (hl+)
      002C81 5F                   10163 	ld	e, a
      002C82 56                   10164 	ld	d, (hl)
      002C83 21 04 00             10165 	ld	hl, #0x0004
      002C86 19                   10166 	add	hl, de
      002C87 E5                   10167 	push	hl
      002C88 7D                   10168 	ld	a, l
      002C89 F8 05                10169 	ldhl	sp,	#5
      002C8B 77                   10170 	ld	(hl), a
      002C8C E1                   10171 	pop	hl
      002C8D 7C                   10172 	ld	a, h
      002C8E F8 04                10173 	ldhl	sp,	#4
      002C90 32                   10174 	ld	(hl-), a
      002C91 2A                   10175 	ld	a,	(hl+)
      002C92 66                   10176 	ld	h, (hl)
      002C93 6F                   10177 	ld	l, a
      002C94 36 04                10178 	ld	(hl), #0x04
      002C96 C3r86r2D             10179 	jp	00142$
      002C99                      10180 00129$:
                                  10181 ;src/main.c:1047: else if (xDir == -1 && yDir == 1) {
      002C99 FArC4r00             10182 	ld	a, (#_xDir)
      002C9C 3C                   10183 	inc	a
      002C9D 3E 01                10184 	ld	a, #0x01
      002C9F 28 01                10185 	jr	Z, 00276$
      002CA1 AF                   10186 	xor	a, a
      002CA2                      10187 00276$:
      002CA2 F8 04                10188 	ldhl	sp,	#4
      002CA4 77                   10189 	ld	(hl), a
      002CA5 7E                   10190 	ld	a, (hl)
      002CA6 B7                   10191 	or	a, a
      002CA7 CAr28r2D             10192 	jp	Z, 00125$
      002CAA 2B                   10193 	dec	hl
      002CAB 7E                   10194 	ld	a, (hl)
      002CAC B7                   10195 	or	a, a
      002CAD 28 79                10196 	jr	Z, 00125$
                                  10197 ;src/main.c:1048: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002CAF 2B                   10198 	dec	hl
                                  10199 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002CB0 2A                   10200 	ld	a, (hl+)
      002CB1 22                   10201 	ld	(hl+), a
      002CB2 36 00                10202 	ld	(hl), #0x00
      002CB4 3E 02                10203 	ld	a, #0x02
      002CB6                      10204 00277$:
      002CB6 F8 03                10205 	ldhl	sp,	#3
      002CB8 CB 26                10206 	sla	(hl)
      002CBA 23                   10207 	inc	hl
      002CBB CB 16                10208 	rl	(hl)
      002CBD 3D                   10209 	dec	a
      002CBE 20 F6                10210 	jr	NZ, 00277$
      002CC0 2B                   10211 	dec	hl
      002CC1 2A                   10212 	ld	a, (hl+)
      002CC2 5F                   10213 	ld	e, a
      002CC3 56                   10214 	ld	d, (hl)
      002CC4 21r00r00             10215 	ld	hl, #_shadow_OAM
      002CC7 19                   10216 	add	hl, de
      002CC8 E5                   10217 	push	hl
      002CC9 7D                   10218 	ld	a, l
      002CCA F8 03                10219 	ldhl	sp,	#3
      002CCC 77                   10220 	ld	(hl), a
      002CCD E1                   10221 	pop	hl
      002CCE 7C                   10222 	ld	a, h
      002CCF F8 02                10223 	ldhl	sp,	#2
      002CD1 32                   10224 	ld	(hl-), a
      002CD2 2A                   10225 	ld	a, (hl+)
      002CD3 5F                   10226 	ld	e, a
      002CD4 56                   10227 	ld	d, (hl)
      002CD5 21 03 00             10228 	ld	hl, #0x0003
      002CD8 19                   10229 	add	hl, de
      002CD9 E5                   10230 	push	hl
      002CDA 7D                   10231 	ld	a, l
      002CDB F8 05                10232 	ldhl	sp,	#5
      002CDD 77                   10233 	ld	(hl), a
      002CDE E1                   10234 	pop	hl
      002CDF 7C                   10235 	ld	a, h
      002CE0 F8 04                10236 	ldhl	sp,	#4
      002CE2 32                   10237 	ld	(hl-), a
      002CE3 2A                   10238 	ld	a,	(hl+)
      002CE4 66                   10239 	ld	h, (hl)
      002CE5 6F                   10240 	ld	l, a
      002CE6 36 60                10241 	ld	(hl), #0x60
                                  10242 ;src/main.c:1049: projectiles[oldestProjectile].offset = 4;
      002CE8 21rC2r00             10243 	ld	hl, #_oldestProjectile
      002CEB 4E                   10244 	ld	c, (hl)
      002CEC 06 00                10245 	ld	b, #0x00
      002CEE 69                   10246 	ld	l, c
      002CEF 60                   10247 	ld	h, b
      002CF0 29                   10248 	add	hl, hl
      002CF1 09                   10249 	add	hl, bc
      002CF2 29                   10250 	add	hl, hl
      002CF3 29                   10251 	add	hl, hl
      002CF4 09                   10252 	add	hl, bc
      002CF5 E5                   10253 	push	hl
      002CF6 7D                   10254 	ld	a, l
      002CF7 F8 05                10255 	ldhl	sp,	#5
      002CF9 77                   10256 	ld	(hl), a
      002CFA E1                   10257 	pop	hl
      002CFB 7C                   10258 	ld	a, h
      002CFC F8 04                10259 	ldhl	sp,	#4
      002CFE 32                   10260 	ld	(hl-), a
      002CFF 2A                   10261 	ld	a, (hl+)
      002D00 5F                   10262 	ld	e, a
      002D01 56                   10263 	ld	d, (hl)
      002D02 21rB4r00             10264 	ld	hl, #_projectiles
      002D05 19                   10265 	add	hl, de
      002D06 E5                   10266 	push	hl
      002D07 7D                   10267 	ld	a, l
      002D08 F8 03                10268 	ldhl	sp,	#3
      002D0A 77                   10269 	ld	(hl), a
      002D0B E1                   10270 	pop	hl
      002D0C 7C                   10271 	ld	a, h
      002D0D F8 02                10272 	ldhl	sp,	#2
      002D0F 32                   10273 	ld	(hl-), a
      002D10 2A                   10274 	ld	a, (hl+)
      002D11 5F                   10275 	ld	e, a
      002D12 56                   10276 	ld	d, (hl)
      002D13 21 04 00             10277 	ld	hl, #0x0004
      002D16 19                   10278 	add	hl, de
      002D17 E5                   10279 	push	hl
      002D18 7D                   10280 	ld	a, l
      002D19 F8 05                10281 	ldhl	sp,	#5
      002D1B 77                   10282 	ld	(hl), a
      002D1C E1                   10283 	pop	hl
      002D1D 7C                   10284 	ld	a, h
      002D1E F8 04                10285 	ldhl	sp,	#4
      002D20 32                   10286 	ld	(hl-), a
      002D21 2A                   10287 	ld	a,	(hl+)
      002D22 66                   10288 	ld	h, (hl)
      002D23 6F                   10289 	ld	l, a
      002D24 36 04                10290 	ld	(hl), #0x04
      002D26 18 5E                10291 	jr	00142$
      002D28                      10292 00125$:
                                  10293 ;src/main.c:1051: else if (xDir == -1 && yDir == -1) {
      002D28 F8 04                10294 	ldhl	sp,	#4
      002D2A 7E                   10295 	ld	a, (hl)
      002D2B B7                   10296 	or	a, a
      002D2C 28 58                10297 	jr	Z, 00142$
      002D2E F8 01                10298 	ldhl	sp,	#1
      002D30 7E                   10299 	ld	a, (hl)
      002D31 B7                   10300 	or	a, a
      002D32 28 52                10301 	jr	Z, 00142$
                                  10302 ;src/main.c:1052: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002D34 23                   10303 	inc	hl
                                  10304 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002D35 2A                   10305 	ld	a, (hl+)
      002D36 22                   10306 	ld	(hl+), a
      002D37 36 00                10307 	ld	(hl), #0x00
      002D39 3E 02                10308 	ld	a, #0x02
      002D3B                      10309 00278$:
      002D3B F8 03                10310 	ldhl	sp,	#3
      002D3D CB 26                10311 	sla	(hl)
      002D3F 23                   10312 	inc	hl
      002D40 CB 16                10313 	rl	(hl)
      002D42 3D                   10314 	dec	a
      002D43 20 F6                10315 	jr	NZ, 00278$
      002D45 2B                   10316 	dec	hl
      002D46 2A                   10317 	ld	a, (hl+)
      002D47 5F                   10318 	ld	e, a
      002D48 56                   10319 	ld	d, (hl)
      002D49 21r00r00             10320 	ld	hl, #_shadow_OAM
      002D4C 19                   10321 	add	hl, de
      002D4D E5                   10322 	push	hl
      002D4E 7D                   10323 	ld	a, l
      002D4F F8 03                10324 	ldhl	sp,	#3
      002D51 77                   10325 	ld	(hl), a
      002D52 E1                   10326 	pop	hl
      002D53 7C                   10327 	ld	a, h
      002D54 F8 02                10328 	ldhl	sp,	#2
      002D56 32                   10329 	ld	(hl-), a
      002D57 2A                   10330 	ld	a, (hl+)
      002D58 5F                   10331 	ld	e, a
      002D59 56                   10332 	ld	d, (hl)
      002D5A 21 03 00             10333 	ld	hl, #0x0003
      002D5D 19                   10334 	add	hl, de
      002D5E E5                   10335 	push	hl
      002D5F 7D                   10336 	ld	a, l
      002D60 F8 05                10337 	ldhl	sp,	#5
      002D62 77                   10338 	ld	(hl), a
      002D63 E1                   10339 	pop	hl
      002D64 7C                   10340 	ld	a, h
      002D65 F8 04                10341 	ldhl	sp,	#4
      002D67 32                   10342 	ld	(hl-), a
      002D68 2A                   10343 	ld	a,	(hl+)
      002D69 66                   10344 	ld	h, (hl)
      002D6A 6F                   10345 	ld	l, a
      002D6B 36 20                10346 	ld	(hl), #0x20
                                  10347 ;src/main.c:1053: projectiles[oldestProjectile].offset = 12;
      002D6D 21rC2r00             10348 	ld	hl, #_oldestProjectile
      002D70 4E                   10349 	ld	c, (hl)
      002D71 06 00                10350 	ld	b, #0x00
      002D73 69                   10351 	ld	l, c
      002D74 60                   10352 	ld	h, b
      002D75 29                   10353 	add	hl, hl
      002D76 09                   10354 	add	hl, bc
      002D77 29                   10355 	add	hl, hl
      002D78 29                   10356 	add	hl, hl
      002D79 09                   10357 	add	hl, bc
      002D7A 01rB4r00             10358 	ld	bc,#_projectiles
      002D7D 09                   10359 	add	hl,bc
      002D7E 4D                   10360 	ld	c, l
      002D7F 44                   10361 	ld	b, h
      002D80 21 04 00             10362 	ld	hl, #0x0004
      002D83 09                   10363 	add	hl, bc
      002D84 36 0C                10364 	ld	(hl), #0x0c
      002D86                      10365 00142$:
                                  10366 ;src/main.c:1057: fireCooldown = projectiles[oldestProjectile].delay;
      002D86 21rC2r00             10367 	ld	hl, #_oldestProjectile
      002D89 4E                   10368 	ld	c, (hl)
      002D8A 06 00                10369 	ld	b, #0x00
      002D8C 69                   10370 	ld	l, c
      002D8D 60                   10371 	ld	h, b
      002D8E 29                   10372 	add	hl, hl
      002D8F 09                   10373 	add	hl, bc
      002D90 29                   10374 	add	hl, hl
      002D91 29                   10375 	add	hl, hl
      002D92 09                   10376 	add	hl, bc
      002D93 01rB4r00             10377 	ld	bc,#_projectiles
      002D96 09                   10378 	add	hl,bc
      002D97 01 0B 00             10379 	ld	bc, #0x000b
      002D9A 09                   10380 	add	hl, bc
      002D9B 7E                   10381 	ld	a, (hl)
      002D9C EArC3r00             10382 	ld	(#_fireCooldown),a
      002D9F                      10383 00155$:
                                  10384 ;src/main.c:1063: }
      002D9F E8 05                10385 	add	sp, #5
      002DA1 C9                   10386 	ret
                                  10387 ;src/main.c:1066: void moveProjectiles() {
                                  10388 ;	---------------------------------
                                  10389 ; Function moveProjectiles
                                  10390 ; ---------------------------------
      002DA2                      10391 _moveProjectiles::
      002DA2 E8 F6                10392 	add	sp, #-10
                                  10393 ;src/main.c:1067: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002DA4 F8 09                10394 	ldhl	sp,	#9
      002DA6 36 00                10395 	ld	(hl), #0x00
      002DA8                      10396 00112$:
      002DA8 21r9Fr0B             10397 	ld	hl, #_PROJECTILECOUNT
      002DAB 4E                   10398 	ld	c, (hl)
      002DAC F8 09                10399 	ldhl	sp,	#9
      002DAE 7E                   10400 	ld	a, (hl)
      002DAF 91                   10401 	sub	a, c
      002DB0 D2r82r2F             10402 	jp	NC, 00114$
                                  10403 ;src/main.c:1068: if (projectiles[i].active) {
      002DB3 4E                   10404 	ld	c, (hl)
      002DB4 06 00                10405 	ld	b, #0x00
      002DB6 69                   10406 	ld	l, c
      002DB7 60                   10407 	ld	h, b
      002DB8 29                   10408 	add	hl, hl
      002DB9 09                   10409 	add	hl, bc
      002DBA 29                   10410 	add	hl, hl
      002DBB 29                   10411 	add	hl, hl
      002DBC 09                   10412 	add	hl, bc
      002DBD 01rB4r00             10413 	ld	bc,#_projectiles
      002DC0 09                   10414 	add	hl,bc
      002DC1 E5                   10415 	push	hl
      002DC2 7D                   10416 	ld	a, l
      002DC3 F8 07                10417 	ldhl	sp,	#7
      002DC5 77                   10418 	ld	(hl), a
      002DC6 E1                   10419 	pop	hl
      002DC7 7C                   10420 	ld	a, h
      002DC8 F8 06                10421 	ldhl	sp,	#6
      002DCA 32                   10422 	ld	(hl-), a
      002DCB 2A                   10423 	ld	a, (hl+)
      002DCC 5F                   10424 	ld	e, a
      002DCD 56                   10425 	ld	d, (hl)
      002DCE 21 0A 00             10426 	ld	hl, #0x000a
      002DD1 19                   10427 	add	hl, de
      002DD2 4D                   10428 	ld	c, l
      002DD3 44                   10429 	ld	b, h
      002DD4 0A                   10430 	ld	a, (bc)
      002DD5 F8 08                10431 	ldhl	sp,	#8
      002DD7 77                   10432 	ld	(hl), a
      002DD8 7E                   10433 	ld	a, (hl)
      002DD9 B7                   10434 	or	a, a
      002DDA CAr7Cr2F             10435 	jp	Z, 00113$
                                  10436 ;src/main.c:1069: projectiles[i].x -= xOverflow;
      002DDD 2B                   10437 	dec	hl
      002DDE 2B                   10438 	dec	hl
      002DDF 2B                   10439 	dec	hl
      002DE0 2A                   10440 	ld	a, (hl+)
      002DE1 5F                   10441 	ld	e, a
      002DE2 56                   10442 	ld	d, (hl)
      002DE3 1A                   10443 	ld	a, (de)
      002DE4 47                   10444 	ld	b, a
      002DE5 13                   10445 	inc	de
      002DE6 1A                   10446 	ld	a, (de)
      002DE7 4F                   10447 	ld	c, a
      002DE8 58                   10448 	ld	e, b
      002DE9 51                   10449 	ld	d, c
      002DEA 21rD2r00             10450 	ld	hl, #_xOverflow
      002DED 2A                   10451 	ld	a,	(hl+)
      002DEE 66                   10452 	ld	h, (hl)
      002DEF 6F                   10453 	ld	l, a
      002DF0 7B                   10454 	ld	a, e
      002DF1 95                   10455 	sub	a, l
      002DF2 5F                   10456 	ld	e, a
      002DF3 7A                   10457 	ld	a, d
      002DF4 9C                   10458 	sbc	a, h
      002DF5 F8 01                10459 	ldhl	sp,	#1
      002DF7 32                   10460 	ld	(hl-), a
      002DF8 73                   10461 	ld	(hl), e
      002DF9 F8 05                10462 	ldhl	sp,#5
      002DFB 2A                   10463 	ld	a, (hl+)
      002DFC 5F                   10464 	ld	e, a
      002DFD 56                   10465 	ld	d, (hl)
      002DFE F8 00                10466 	ldhl	sp,	#0
      002E00 2A                   10467 	ld	a, (hl+)
      002E01 12                   10468 	ld	(de), a
      002E02 13                   10469 	inc	de
      002E03 7E                   10470 	ld	a, (hl)
      002E04 12                   10471 	ld	(de), a
                                  10472 ;src/main.c:1070: projectiles[i].y -= yOverflow;
      002E05 F8 05                10473 	ldhl	sp,#5
      002E07 2A                   10474 	ld	a, (hl+)
      002E08 5F                   10475 	ld	e, a
      002E09 56                   10476 	ld	d, (hl)
      002E0A 21 02 00             10477 	ld	hl, #0x0002
      002E0D 19                   10478 	add	hl, de
      002E0E E5                   10479 	push	hl
      002E0F 7D                   10480 	ld	a, l
      002E10 F8 04                10481 	ldhl	sp,	#4
      002E12 77                   10482 	ld	(hl), a
      002E13 E1                   10483 	pop	hl
      002E14 7C                   10484 	ld	a, h
      002E15 F8 03                10485 	ldhl	sp,	#3
      002E17 32                   10486 	ld	(hl-), a
      002E18 2A                   10487 	ld	a, (hl+)
      002E19 5F                   10488 	ld	e, a
      002E1A 56                   10489 	ld	d, (hl)
      002E1B 1A                   10490 	ld	a, (de)
      002E1C 4F                   10491 	ld	c, a
      002E1D 13                   10492 	inc	de
      002E1E 1A                   10493 	ld	a, (de)
      002E1F 47                   10494 	ld	b, a
      002E20 79                   10495 	ld	a, c
      002E21 21rD4r00             10496 	ld	hl, #_yOverflow
      002E24 96                   10497 	sub	a, (hl)
      002E25 23                   10498 	inc	hl
      002E26 4F                   10499 	ld	c, a
      002E27 78                   10500 	ld	a, b
      002E28 9E                   10501 	sbc	a, (hl)
      002E29 47                   10502 	ld	b, a
      002E2A F8 02                10503 	ldhl	sp,	#2
      002E2C 2A                   10504 	ld	a,	(hl+)
      002E2D 66                   10505 	ld	h, (hl)
      002E2E 6F                   10506 	ld	l, a
      002E2F 79                   10507 	ld	a, c
      002E30 22                   10508 	ld	(hl+), a
      002E31 70                   10509 	ld	(hl), b
                                  10510 ;src/main.c:1072: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002E32 F8 05                10511 	ldhl	sp,#5
      002E34 2A                   10512 	ld	a, (hl+)
      002E35 5F                   10513 	ld	e, a
      002E36 56                   10514 	ld	d, (hl)
      002E37 21 06 00             10515 	ld	hl, #0x0006
      002E3A 19                   10516 	add	hl, de
      002E3B 5D                   10517 	ld	e, l
      002E3C 54                   10518 	ld	d, h
      002E3D 1A                   10519 	ld	a, (de)
      002E3E 6F                   10520 	ld	l, a
                                  10521 ;	spillPairReg hl
                                  10522 ;	spillPairReg hl
      002E3F 07                   10523 	rlca
      002E40 9F                   10524 	sbc	a, a
      002E41 67                   10525 	ld	h, a
                                  10526 ;	spillPairReg hl
                                  10527 ;	spillPairReg hl
      002E42 09                   10528 	add	hl, bc
      002E43 4D                   10529 	ld	c, l
      002E44 44                   10530 	ld	b, h
                                  10531 ;src/main.c:1073: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      002E45 F8 05                10532 	ldhl	sp,#5
      002E47 2A                   10533 	ld	a, (hl+)
      002E48 5F                   10534 	ld	e, a
      002E49 56                   10535 	ld	d, (hl)
      002E4A 21 05 00             10536 	ld	hl, #0x0005
      002E4D 19                   10537 	add	hl, de
      002E4E 5D                   10538 	ld	e, l
      002E4F 54                   10539 	ld	d, h
      002E50 1A                   10540 	ld	a, (de)
      002E51 F8 07                10541 	ldhl	sp,	#7
      002E53 22                   10542 	ld	(hl+), a
      002E54 07                   10543 	rlca
      002E55 9F                   10544 	sbc	a, a
      002E56 77                   10545 	ld	(hl), a
      002E57 D1                   10546 	pop	de
      002E58 D5                   10547 	push	de
      002E59 3A                   10548 	ld	a, (hl-)
      002E5A 6E                   10549 	ld	l, (hl)
      002E5B 67                   10550 	ld	h, a
      002E5C 19                   10551 	add	hl, de
      002E5D 5D                   10552 	ld	e, l
      002E5E 7C                   10553 	ld	a, h
      002E5F F8 07                10554 	ldhl	sp,	#7
      002E61 73                   10555 	ld	(hl), e
      002E62 23                   10556 	inc	hl
      002E63 77                   10557 	ld	(hl), a
                                  10558 ;src/main.c:1076: projectiles[i].y = newY;
      002E64 F8 02                10559 	ldhl	sp,	#2
      002E66 2A                   10560 	ld	a,	(hl+)
      002E67 66                   10561 	ld	h, (hl)
      002E68 6F                   10562 	ld	l, a
      002E69 79                   10563 	ld	a, c
      002E6A 22                   10564 	ld	(hl+), a
      002E6B 70                   10565 	ld	(hl), b
                                  10566 ;src/main.c:1077: projectiles[i].x = newX;
      002E6C F8 05                10567 	ldhl	sp,#5
      002E6E 2A                   10568 	ld	a, (hl+)
      002E6F 5F                   10569 	ld	e, a
      002E70 2A                   10570 	ld	a, (hl+)
      002E71 57                   10571 	ld	d, a
      002E72 2A                   10572 	ld	a, (hl+)
      002E73 12                   10573 	ld	(de), a
      002E74 13                   10574 	inc	de
                                  10575 ;src/main.c:1081: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      002E75 3A                   10576 	ld	a, (hl-)
      002E76 2B                   10577 	dec	hl
      002E77 2B                   10578 	dec	hl
      002E78 12                   10579 	ld	(de), a
      002E79 2A                   10580 	ld	a, (hl+)
      002E7A 5F                   10581 	ld	e, a
      002E7B 56                   10582 	ld	d, (hl)
      002E7C 21 04 00             10583 	ld	hl, #0x0004
      002E7F 19                   10584 	add	hl, de
      002E80 5D                   10585 	ld	e, l
      002E81 54                   10586 	ld	d, h
      002E82 1A                   10587 	ld	a, (de)
      002E83 81                   10588 	add	a, c
      002E84 4F                   10589 	ld	c, a
      002E85 F8 07                10590 	ldhl	sp,	#7
      002E87 2A                   10591 	ld	a, (hl+)
      002E88 23                   10592 	inc	hl
      002E89 C6 04                10593 	add	a, #0x04
      002E8B 5F                   10594 	ld	e, a
      002E8C 7E                   10595 	ld	a, (hl)
      002E8D C6 1E                10596 	add	a, #0x1e
      002E8F F8 04                10597 	ldhl	sp,	#4
      002E91 77                   10598 	ld	(hl), a
                                  10599 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002E92 6E                   10600 	ld	l, (hl)
                                  10601 ;	spillPairReg hl
                                  10602 ;	spillPairReg hl
      002E93 26 00                10603 	ld	h, #0x00
                                  10604 ;	spillPairReg hl
                                  10605 ;	spillPairReg hl
      002E95 29                   10606 	add	hl, hl
      002E96 29                   10607 	add	hl, hl
      002E97 D5                   10608 	push	de
      002E98 11r00r00             10609 	ld	de, #_shadow_OAM
      002E9B 19                   10610 	add	hl, de
      002E9C D1                   10611 	pop	de
                                  10612 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002E9D 79                   10613 	ld	a, c
      002E9E 22                   10614 	ld	(hl+), a
      002E9F 73                   10615 	ld	(hl), e
                                  10616 ;src/main.c:1085: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002EA0 F8 05                10617 	ldhl	sp,#5
      002EA2 2A                   10618 	ld	a, (hl+)
      002EA3 5F                   10619 	ld	e, a
      002EA4 3A                   10620 	ld	a, (hl-)
      002EA5 57                   10621 	ld	d, a
      002EA6 1A                   10622 	ld	a, (de)
      002EA7 22                   10623 	ld	(hl+), a
      002EA8 13                   10624 	inc	de
      002EA9 1A                   10625 	ld	a, (de)
      002EAA 22                   10626 	ld	(hl+), a
      002EAB 23                   10627 	inc	hl
      002EAC CB 7E                10628 	bit	7, (hl)
      002EAE 20 51                10629 	jr	NZ, 00101$
      002EB0 F8 05                10630 	ldhl	sp,	#5
      002EB2 2A                   10631 	ld	a, (hl+)
      002EB3 23                   10632 	inc	hl
      002EB4 32                   10633 	ld	(hl-), a
      002EB5 2A                   10634 	ld	a, (hl+)
      002EB6 23                   10635 	inc	hl
      002EB7 32                   10636 	ld	(hl-), a
      002EB8 3E AA                10637 	ld	a, #0xaa
      002EBA 96                   10638 	sub	a, (hl)
      002EBB 23                   10639 	inc	hl
      002EBC 3E 00                10640 	ld	a, #0x00
      002EBE 9E                   10641 	sbc	a, (hl)
      002EBF 3E 00                10642 	ld	a, #0x00
      002EC1 57                   10643 	ld	d, a
      002EC2 CB 7E                10644 	bit	7, (hl)
      002EC4 28 07                10645 	jr	Z, 00147$
      002EC6 CB 7A                10646 	bit	7, d
      002EC8 20 08                10647 	jr	NZ, 00148$
      002ECA BF                   10648 	cp	a, a
      002ECB 18 05                10649 	jr	00148$
      002ECD                      10650 00147$:
      002ECD CB 7A                10651 	bit	7, d
      002ECF 28 01                10652 	jr	Z, 00148$
      002ED1 37                   10653 	scf
      002ED2                      10654 00148$:
      002ED2 38 2D                10655 	jr	C, 00101$
      002ED4 F8 02                10656 	ldhl	sp,#2
      002ED6 2A                   10657 	ld	a, (hl+)
      002ED7 5F                   10658 	ld	e, a
      002ED8 56                   10659 	ld	d, (hl)
      002ED9 1A                   10660 	ld	a, (de)
      002EDA F8 07                10661 	ldhl	sp,	#7
      002EDC 22                   10662 	ld	(hl+), a
      002EDD 13                   10663 	inc	de
      002EDE 1A                   10664 	ld	a, (de)
      002EDF 77                   10665 	ld	(hl), a
      002EE0 CB 7E                10666 	bit	7, (hl)
      002EE2 20 1D                10667 	jr	NZ, 00101$
      002EE4 2B                   10668 	dec	hl
      002EE5 3E 9A                10669 	ld	a, #0x9a
      002EE7 96                   10670 	sub	a, (hl)
      002EE8 23                   10671 	inc	hl
      002EE9 3E 00                10672 	ld	a, #0x00
      002EEB 9E                   10673 	sbc	a, (hl)
      002EEC 3E 00                10674 	ld	a, #0x00
      002EEE 57                   10675 	ld	d, a
      002EEF CB 7E                10676 	bit	7, (hl)
      002EF1 28 07                10677 	jr	Z, 00149$
      002EF3 CB 7A                10678 	bit	7, d
      002EF5 20 08                10679 	jr	NZ, 00150$
      002EF7 BF                   10680 	cp	a, a
      002EF8 18 05                10681 	jr	00150$
      002EFA                      10682 00149$:
      002EFA CB 7A                10683 	bit	7, d
      002EFC 28 01                10684 	jr	Z, 00150$
      002EFE 37                   10685 	scf
      002EFF                      10686 00150$:
      002EFF 30 7B                10687 	jr	NC, 00113$
      002F01                      10688 00101$:
                                  10689 ;src/main.c:1086: projectiles[i].active = 0;
      002F01 F8 09                10690 	ldhl	sp,	#9
      002F03 4E                   10691 	ld	c, (hl)
      002F04 06 00                10692 	ld	b, #0x00
      002F06 69                   10693 	ld	l, c
      002F07 60                   10694 	ld	h, b
      002F08 29                   10695 	add	hl, hl
      002F09 09                   10696 	add	hl, bc
      002F0A 29                   10697 	add	hl, hl
      002F0B 29                   10698 	add	hl, hl
      002F0C 09                   10699 	add	hl, bc
      002F0D E5                   10700 	push	hl
      002F0E 7D                   10701 	ld	a, l
      002F0F F8 09                10702 	ldhl	sp,	#9
      002F11 77                   10703 	ld	(hl), a
      002F12 E1                   10704 	pop	hl
      002F13 7C                   10705 	ld	a, h
      002F14 F8 08                10706 	ldhl	sp,	#8
      002F16 32                   10707 	ld	(hl-), a
      002F17 2A                   10708 	ld	a, (hl+)
      002F18 5F                   10709 	ld	e, a
      002F19 56                   10710 	ld	d, (hl)
      002F1A 21rB4r00             10711 	ld	hl, #_projectiles
      002F1D 19                   10712 	add	hl, de
      002F1E E5                   10713 	push	hl
      002F1F 7D                   10714 	ld	a, l
      002F20 F8 07                10715 	ldhl	sp,	#7
      002F22 77                   10716 	ld	(hl), a
      002F23 E1                   10717 	pop	hl
      002F24 7C                   10718 	ld	a, h
      002F25 F8 06                10719 	ldhl	sp,	#6
      002F27 32                   10720 	ld	(hl-), a
      002F28 2A                   10721 	ld	a, (hl+)
      002F29 5F                   10722 	ld	e, a
      002F2A 56                   10723 	ld	d, (hl)
      002F2B 21 0A 00             10724 	ld	hl, #0x000a
      002F2E 19                   10725 	add	hl, de
      002F2F E5                   10726 	push	hl
      002F30 7D                   10727 	ld	a, l
      002F31 F8 09                10728 	ldhl	sp,	#9
      002F33 77                   10729 	ld	(hl), a
      002F34 E1                   10730 	pop	hl
      002F35 7C                   10731 	ld	a, h
      002F36 F8 08                10732 	ldhl	sp,	#8
      002F38 32                   10733 	ld	(hl-), a
      002F39 2A                   10734 	ld	a,	(hl+)
      002F3A 66                   10735 	ld	h, (hl)
      002F3B 6F                   10736 	ld	l, a
      002F3C 36 00                10737 	ld	(hl), #0x00
                                  10738 ;src/main.c:1087: set_sprite_tile(30+i, 0x7f);
      002F3E F8 04                10739 	ldhl	sp,	#4
      002F40 7E                   10740 	ld	a, (hl)
      002F41 F8 08                10741 	ldhl	sp,	#8
      002F43 77                   10742 	ld	(hl), a
                                  10743 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002F44 3A                   10744 	ld	a, (hl-)
      002F45 22                   10745 	ld	(hl+), a
      002F46 36 00                10746 	ld	(hl), #0x00
      002F48 3E 02                10747 	ld	a, #0x02
      002F4A                      10748 00151$:
      002F4A F8 07                10749 	ldhl	sp,	#7
      002F4C CB 26                10750 	sla	(hl)
      002F4E 23                   10751 	inc	hl
      002F4F CB 16                10752 	rl	(hl)
      002F51 3D                   10753 	dec	a
      002F52 20 F6                10754 	jr	NZ, 00151$
      002F54 2B                   10755 	dec	hl
      002F55 2A                   10756 	ld	a, (hl+)
      002F56 5F                   10757 	ld	e, a
      002F57 56                   10758 	ld	d, (hl)
      002F58 21r00r00             10759 	ld	hl, #_shadow_OAM
      002F5B 19                   10760 	add	hl, de
      002F5C E5                   10761 	push	hl
      002F5D 7D                   10762 	ld	a, l
      002F5E F8 07                10763 	ldhl	sp,	#7
      002F60 77                   10764 	ld	(hl), a
      002F61 E1                   10765 	pop	hl
      002F62 7C                   10766 	ld	a, h
      002F63 F8 06                10767 	ldhl	sp,	#6
      002F65 32                   10768 	ld	(hl-), a
      002F66 2A                   10769 	ld	a, (hl+)
      002F67 5F                   10770 	ld	e, a
      002F68 56                   10771 	ld	d, (hl)
      002F69 21 02 00             10772 	ld	hl, #0x0002
      002F6C 19                   10773 	add	hl, de
      002F6D E5                   10774 	push	hl
      002F6E 7D                   10775 	ld	a, l
      002F6F F8 09                10776 	ldhl	sp,	#9
      002F71 77                   10777 	ld	(hl), a
      002F72 E1                   10778 	pop	hl
      002F73 7C                   10779 	ld	a, h
      002F74 F8 08                10780 	ldhl	sp,	#8
      002F76 32                   10781 	ld	(hl-), a
      002F77 2A                   10782 	ld	a,	(hl+)
      002F78 66                   10783 	ld	h, (hl)
      002F79 6F                   10784 	ld	l, a
      002F7A 36 7F                10785 	ld	(hl), #0x7f
                                  10786 ;src/main.c:1087: set_sprite_tile(30+i, 0x7f);
      002F7C                      10787 00113$:
                                  10788 ;src/main.c:1067: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002F7C F8 09                10789 	ldhl	sp,	#9
      002F7E 34                   10790 	inc	(hl)
      002F7F C3rA8r2D             10791 	jp	00112$
      002F82                      10792 00114$:
                                  10793 ;src/main.c:1092: }
      002F82 E8 0A                10794 	add	sp, #10
      002F84 C9                   10795 	ret
                                  10796 ;src/main.c:1094: void tickPickups() {
                                  10797 ;	---------------------------------
                                  10798 ; Function tickPickups
                                  10799 ; ---------------------------------
      002F85                      10800 _tickPickups::
      002F85 3B                   10801 	dec	sp
      002F86 3B                   10802 	dec	sp
                                  10803 ;src/main.c:1096: if (pickup.active) {
      002F87 FArFFr00             10804 	ld	a, (#(_pickup + 5) + 0)
      002F8A B7                   10805 	or	a, a
      002F8B CAr5Ar31             10806 	jp	Z, 00144$
                                  10807 ;src/main.c:1097: pickup.x -= xOverflow;
      002F8E 21rFBr00             10808 	ld	hl, #(_pickup + 1)
      002F91 2A                   10809 	ld	a, (hl+)
      002F92 47                   10810 	ld	b, a
      002F93 4E                   10811 	ld	c, (hl)
      002F94 58                   10812 	ld	e, b
      002F95 51                   10813 	ld	d, c
      002F96 21rD2r00             10814 	ld	hl, #_xOverflow
      002F99 2A                   10815 	ld	a,	(hl+)
      002F9A 66                   10816 	ld	h, (hl)
      002F9B 6F                   10817 	ld	l, a
      002F9C 7B                   10818 	ld	a, e
      002F9D 95                   10819 	sub	a, l
      002F9E 5F                   10820 	ld	e, a
      002F9F 7A                   10821 	ld	a, d
      002FA0 9C                   10822 	sbc	a, h
      002FA1 F8 01                10823 	ldhl	sp,	#1
      002FA3 32                   10824 	ld	(hl-), a
      002FA4 73                   10825 	ld	(hl), e
      002FA5 11rFBr00             10826 	ld	de, #(_pickup + 1)
      002FA8 2A                   10827 	ld	a, (hl+)
      002FA9 12                   10828 	ld	(de), a
      002FAA 13                   10829 	inc	de
      002FAB 7E                   10830 	ld	a, (hl)
      002FAC 12                   10831 	ld	(de), a
                                  10832 ;src/main.c:1098: pickup.y -= yOverflow;
      002FAD 21rFDr00             10833 	ld	hl, #(_pickup + 3)
      002FB0 2A                   10834 	ld	a, (hl+)
      002FB1 4F                   10835 	ld	c, a
      002FB2 46                   10836 	ld	b, (hl)
      002FB3 79                   10837 	ld	a, c
      002FB4 21rD4r00             10838 	ld	hl, #_yOverflow
      002FB7 96                   10839 	sub	a, (hl)
      002FB8 23                   10840 	inc	hl
      002FB9 4F                   10841 	ld	c, a
      002FBA 78                   10842 	ld	a, b
      002FBB 9E                   10843 	sbc	a, (hl)
      002FBC 47                   10844 	ld	b, a
      002FBD 21rFDr00             10845 	ld	hl, #(_pickup + 3)
      002FC0 79                   10846 	ld	a, c
      002FC1 22                   10847 	ld	(hl+), a
      002FC2 70                   10848 	ld	(hl), b
                                  10849 ;src/main.c:1099: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002FC3 79                   10850 	ld	a, c
      002FC4 C6 0C                10851 	add	a, #0x0c
      002FC6 47                   10852 	ld	b, a
      002FC7 F8 00                10853 	ldhl	sp,	#0
      002FC9 7E                   10854 	ld	a, (hl)
      002FCA C6 04                10855 	add	a, #0x04
      002FCC 4F                   10856 	ld	c, a
                                  10857 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002FCD 21r0Cr00             10858 	ld	hl, #(_shadow_OAM + 12)
                                  10859 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002FD0 78                   10860 	ld	a, b
      002FD1 22                   10861 	ld	(hl+), a
      002FD2 71                   10862 	ld	(hl), c
                                  10863 ;src/main.c:1100: if (pickup.visible && auxTick == 1) {
      002FD3 21rFAr00             10864 	ld	hl, #_pickup
      002FD6 4E                   10865 	ld	c, (hl)
                                  10866 ;src/main.c:1097: pickup.x -= xOverflow;
      002FD7 11rFBr00             10867 	ld	de, #(_pickup + 1)
      002FDA 1A                   10868 	ld	a, (de)
      002FDB F8 00                10869 	ldhl	sp,	#0
      002FDD 22                   10870 	ld	(hl+), a
      002FDE 13                   10871 	inc	de
      002FDF 1A                   10872 	ld	a, (de)
      002FE0 77                   10873 	ld	(hl), a
                                  10874 ;src/main.c:1100: if (pickup.visible && auxTick == 1) {
      002FE1 79                   10875 	ld	a, c
      002FE2 B7                   10876 	or	a, a
      002FE3 CArEEr30             10877 	jp	Z, 00127$
      002FE6 FArF0r00             10878 	ld	a, (#_auxTick)
      002FE9 3D                   10879 	dec	a
      002FEA C2rEEr30             10880 	jp	NZ,00127$
                                  10881 ;src/main.c:1102: if (abs(pickup.x - playerDrawX) < 10) {
      002FED F8 00                10882 	ldhl	sp,	#0
      002FEF 7E                   10883 	ld	a, (hl)
      002FF0 21rCCr00             10884 	ld	hl, #_playerDrawX
      002FF3 4E                   10885 	ld	c, (hl)
      002FF4 91                   10886 	sub	a, c
      002FF5 4F                   10887 	ld	c, a
                                  10888 ;src/main.c:368: if (value >= 0) return value;
      002FF6 CB 79                10889 	bit	7, c
      002FF8 28 03                10890 	jr	Z, 00136$
                                  10891 ;src/main.c:369: else return - value;
      002FFA AF                   10892 	xor	a, a
      002FFB 91                   10893 	sub	a, c
      002FFC 4F                   10894 	ld	c, a
                                  10895 ;src/main.c:1102: if (abs(pickup.x - playerDrawX) < 10) {
      002FFD                      10896 00136$:
      002FFD 79                   10897 	ld	a, c
      002FFE EE 80                10898 	xor	a, #0x80
      003000 D6 8A                10899 	sub	a, #0x8a
      003002 D2r91r30             10900 	jp	NC, 00115$
                                  10901 ;src/main.c:1103: if (abs(pickup.y - playerDrawY) < 10) {
      003005 FArFDr00             10902 	ld	a, (#(_pickup + 3) + 0)
      003008 F8 01                10903 	ldhl	sp,	#1
      00300A 77                   10904 	ld	(hl), a
      00300B 21rCDr00             10905 	ld	hl, #_playerDrawY
      00300E 4E                   10906 	ld	c, (hl)
      00300F F8 01                10907 	ldhl	sp,	#1
      003011 7E                   10908 	ld	a, (hl)
      003012 91                   10909 	sub	a, c
      003013 77                   10910 	ld	(hl), a
                                  10911 ;src/main.c:368: if (value >= 0) return value;
      003014 CB 7E                10912 	bit	7, (hl)
      003016 28 05                10913 	jr	Z, 00140$
                                  10914 ;src/main.c:369: else return - value;
      003018 AF                   10915 	xor	a, a
      003019 F8 01                10916 	ldhl	sp,	#1
      00301B 96                   10917 	sub	a, (hl)
      00301C 77                   10918 	ld	(hl), a
                                  10919 ;src/main.c:1103: if (abs(pickup.y - playerDrawY) < 10) {
      00301D                      10920 00140$:
      00301D F8 01                10921 	ldhl	sp,	#1
      00301F 7E                   10922 	ld	a, (hl)
      003020 EE 80                10923 	xor	a, #0x80
      003022 D6 8A                10924 	sub	a, #0x8a
      003024 30 6B                10925 	jr	NC, 00115$
                                  10926 ;src/main.c:1104: if (pickup.type == 0) { //upgrade
      003026 FAr00r01             10927 	ld	a, (#(_pickup + 6) + 0)
      003029 B7                   10928 	or	a, a
      00302A 20 0D                10929 	jr	NZ, 00104$
                                  10930 ;src/main.c:1105: if (gunLevel < 1) {
      00302C 21rD7r00             10931 	ld	hl, #_gunLevel
      00302F 7E                   10932 	ld	a, (hl)
      003030 D6 01                10933 	sub	a, #0x01
      003032 30 05                10934 	jr	NC, 00104$
                                  10935 ;src/main.c:1106: gunLevel += 1;
      003034 34                   10936 	inc	(hl)
      003035 7E                   10937 	ld	a, (hl)
                                  10938 ;src/main.c:1107: setGunIcon();
      003036 CDrC1r27             10939 	call	_setGunIcon
      003039                      10940 00104$:
                                  10941 ;src/main.c:1110: if (pickup.type == 1) { //missile ammo
      003039 21r00r01             10942 	ld	hl, #(_pickup + 6)
      00303C 6E                   10943 	ld	l, (hl)
                                  10944 ;	spillPairReg hl
                                  10945 ;src/main.c:1111: updateMissileCount(pickup.amount);
      00303D 01r01r01             10946 	ld	bc, #_pickup + 7
                                  10947 ;src/main.c:1110: if (pickup.type == 1) { //missile ammo
      003040 2D                   10948 	dec	l
      003041 20 09                10949 	jr	NZ, 00106$
                                  10950 ;src/main.c:1111: updateMissileCount(pickup.amount);
      003043 0A                   10951 	ld	a, (bc)
      003044 C5                   10952 	push	bc
      003045 F5                   10953 	push	af
      003046 33                   10954 	inc	sp
      003047 CDrE4r0C             10955 	call	_updateMissileCount
      00304A 33                   10956 	inc	sp
      00304B C1                   10957 	pop	bc
      00304C                      10958 00106$:
                                  10959 ;src/main.c:1113: if (pickup.type == 2) {
      00304C FAr00r01             10960 	ld	a, (#(_pickup + 6) + 0)
      00304F D6 02                10961 	sub	a, #0x02
      003051 20 34                10962 	jr	NZ, 00111$
                                  10963 ;src/main.c:1114: if (hull + pickup.amount <= 100) {
      003053 21rF6r00             10964 	ld	hl, #_hull
      003056 5E                   10965 	ld	e, (hl)
      003057 16 00                10966 	ld	d, #0x00
      003059 0A                   10967 	ld	a, (bc)
      00305A 4F                   10968 	ld	c, a
      00305B 69                   10969 	ld	l, c
                                  10970 ;	spillPairReg hl
                                  10971 ;	spillPairReg hl
      00305C 26 00                10972 	ld	h, #0x00
                                  10973 ;	spillPairReg hl
                                  10974 ;	spillPairReg hl
      00305E 19                   10975 	add	hl, de
      00305F 5C                   10976 	ld	e, h
      003060 16 00                10977 	ld	d, #0x00
      003062 3E 64                10978 	ld	a, #0x64
      003064 BD                   10979 	cp	a, l
      003065 3E 00                10980 	ld	a, #0x00
      003067 9C                   10981 	sbc	a, h
      003068 CB 7B                10982 	bit	7, e
      00306A 28 07                10983 	jr	Z, 00247$
      00306C CB 7A                10984 	bit	7, d
      00306E 20 08                10985 	jr	NZ, 00248$
      003070 BF                   10986 	cp	a, a
      003071 18 05                10987 	jr	00248$
      003073                      10988 00247$:
      003073 CB 7A                10989 	bit	7, d
      003075 28 01                10990 	jr	Z, 00248$
      003077 37                   10991 	scf
      003078                      10992 00248$:
      003078 38 08                10993 	jr	C, 00108$
                                  10994 ;src/main.c:1115: hull += pickup.amount;
      00307A 79                   10995 	ld	a, c
      00307B 21rF6r00             10996 	ld	hl, #_hull
      00307E 86                   10997 	add	a, (hl)
      00307F 77                   10998 	ld	(hl), a
      003080 18 05                10999 	jr	00111$
      003082                      11000 00108$:
                                  11001 ;src/main.c:1118: hull = 100;
      003082 21rF6r00             11002 	ld	hl, #_hull
      003085 36 64                11003 	ld	(hl), #0x64
      003087                      11004 00111$:
                                  11005 ;src/main.c:1121: pickup.active = 0;
      003087 21rFFr00             11006 	ld	hl, #(_pickup + 5)
      00308A 36 00                11007 	ld	(hl), #0x00
                                  11008 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00308C 21r0Er00             11009 	ld	hl, #(_shadow_OAM + 14)
      00308F 36 7F                11010 	ld	(hl), #0x7f
                                  11011 ;src/main.c:1122: set_sprite_tile(3, 0x7f);
      003091                      11012 00115$:
                                  11013 ;src/main.c:1097: pickup.x -= xOverflow;
      003091 21rFBr00             11014 	ld	hl, #(_pickup + 1)
      003094 2A                   11015 	ld	a, (hl+)
      003095 4F                   11016 	ld	c, a
      003096 46                   11017 	ld	b, (hl)
                                  11018 ;src/main.c:1125: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      003097 79                   11019 	ld	a, c
      003098 D6 F6                11020 	sub	a, #0xf6
      00309A 78                   11021 	ld	a, b
      00309B 17                   11022 	rla
      00309C 3F                   11023 	ccf
      00309D 1F                   11024 	rra
      00309E DE 7F                11025 	sbc	a, #0x7f
      0030A0 38 40                11026 	jr	C, 00116$
      0030A2 58                   11027 	ld	e, b
      0030A3 16 00                11028 	ld	d, #0x00
      0030A5 3E AA                11029 	ld	a, #0xaa
      0030A7 B9                   11030 	cp	a, c
      0030A8 3E 00                11031 	ld	a, #0x00
      0030AA 98                   11032 	sbc	a, b
      0030AB CB 7B                11033 	bit	7, e
      0030AD 28 07                11034 	jr	Z, 00249$
      0030AF CB 7A                11035 	bit	7, d
      0030B1 20 08                11036 	jr	NZ, 00250$
      0030B3 BF                   11037 	cp	a, a
      0030B4 18 05                11038 	jr	00250$
      0030B6                      11039 00249$:
      0030B6 CB 7A                11040 	bit	7, d
      0030B8 28 01                11041 	jr	Z, 00250$
      0030BA 37                   11042 	scf
      0030BB                      11043 00250$:
      0030BB 38 25                11044 	jr	C, 00116$
                                  11045 ;src/main.c:1098: pickup.y -= yOverflow;
      0030BD 21rFDr00             11046 	ld	hl, #(_pickup + 3)
      0030C0 2A                   11047 	ld	a, (hl+)
      0030C1 4F                   11048 	ld	c, a
      0030C2 46                   11049 	ld	b, (hl)
                                  11050 ;src/main.c:1125: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0030C3 CB 78                11051 	bit	7, b
      0030C5 20 1B                11052 	jr	NZ, 00116$
      0030C7 58                   11053 	ld	e, b
      0030C8 16 00                11054 	ld	d, #0x00
      0030CA 3E 9B                11055 	ld	a, #0x9b
      0030CC B9                   11056 	cp	a, c
      0030CD 3E 00                11057 	ld	a, #0x00
      0030CF 98                   11058 	sbc	a, b
      0030D0 CB 7B                11059 	bit	7, e
      0030D2 28 07                11060 	jr	Z, 00251$
      0030D4 CB 7A                11061 	bit	7, d
      0030D6 20 08                11062 	jr	NZ, 00252$
      0030D8 BF                   11063 	cp	a, a
      0030D9 18 05                11064 	jr	00252$
      0030DB                      11065 00251$:
      0030DB CB 7A                11066 	bit	7, d
      0030DD 28 01                11067 	jr	Z, 00252$
      0030DF 37                   11068 	scf
      0030E0                      11069 00252$:
      0030E0 30 78                11070 	jr	NC, 00144$
      0030E2                      11071 00116$:
                                  11072 ;src/main.c:1126: pickup.visible = 0;
      0030E2 21rFAr00             11073 	ld	hl, #_pickup
      0030E5 36 00                11074 	ld	(hl), #0x00
                                  11075 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0030E7 21r0Er00             11076 	ld	hl, #(_shadow_OAM + 14)
      0030EA 36 7F                11077 	ld	(hl), #0x7f
                                  11078 ;src/main.c:1127: set_sprite_tile(3, 0x7f);
      0030EC 18 6C                11079 	jr	00144$
      0030EE                      11080 00127$:
                                  11081 ;src/main.c:1131: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      0030EE F8 00                11082 	ldhl	sp,	#0
      0030F0 2A                   11083 	ld	a, (hl+)
      0030F1 D6 F6                11084 	sub	a, #0xf6
      0030F3 7E                   11085 	ld	a, (hl)
      0030F4 DE FF                11086 	sbc	a, #0xff
      0030F6 56                   11087 	ld	d, (hl)
      0030F7 3E FF                11088 	ld	a, #0xff
      0030F9 CB 7F                11089 	bit	7,a
      0030FB 28 07                11090 	jr	Z, 00253$
      0030FD CB 7A                11091 	bit	7, d
      0030FF 20 08                11092 	jr	NZ, 00254$
      003101 BF                   11093 	cp	a, a
      003102 18 05                11094 	jr	00254$
      003104                      11095 00253$:
      003104 CB 7A                11096 	bit	7, d
      003106 28 01                11097 	jr	Z, 00254$
      003108 37                   11098 	scf
      003109                      11099 00254$:
      003109 38 4F                11100 	jr	C, 00144$
      00310B C1                   11101 	pop	bc
      00310C C5                   11102 	push	bc
      00310D 58                   11103 	ld	e, b
      00310E 16 00                11104 	ld	d, #0x00
      003110 3E AA                11105 	ld	a, #0xaa
      003112 B9                   11106 	cp	a, c
      003113 3E 00                11107 	ld	a, #0x00
      003115 98                   11108 	sbc	a, b
      003116 CB 7B                11109 	bit	7, e
      003118 28 07                11110 	jr	Z, 00255$
      00311A CB 7A                11111 	bit	7, d
      00311C 20 08                11112 	jr	NZ, 00256$
      00311E BF                   11113 	cp	a, a
      00311F 18 05                11114 	jr	00256$
      003121                      11115 00255$:
      003121 CB 7A                11116 	bit	7, d
      003123 28 01                11117 	jr	Z, 00256$
      003125 37                   11118 	scf
      003126                      11119 00256$:
      003126 38 32                11120 	jr	C, 00144$
                                  11121 ;src/main.c:1098: pickup.y -= yOverflow;
      003128 21rFDr00             11122 	ld	hl, #(_pickup + 3)
      00312B 2A                   11123 	ld	a, (hl+)
      00312C 4F                   11124 	ld	c, a
      00312D 46                   11125 	ld	b, (hl)
                                  11126 ;src/main.c:1125: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
                                  11127 ;src/main.c:1131: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      00312E CB 78                11128 	bit	7, b
      003130 20 28                11129 	jr	NZ, 00144$
      003132 58                   11130 	ld	e, b
      003133 16 00                11131 	ld	d, #0x00
      003135 3E 9B                11132 	ld	a, #0x9b
      003137 B9                   11133 	cp	a, c
      003138 3E 00                11134 	ld	a, #0x00
      00313A 98                   11135 	sbc	a, b
      00313B CB 7B                11136 	bit	7, e
      00313D 28 07                11137 	jr	Z, 00257$
      00313F CB 7A                11138 	bit	7, d
      003141 20 08                11139 	jr	NZ, 00258$
      003143 BF                   11140 	cp	a, a
      003144 18 05                11141 	jr	00258$
      003146                      11142 00257$:
      003146 CB 7A                11143 	bit	7, d
      003148 28 01                11144 	jr	Z, 00258$
      00314A 37                   11145 	scf
      00314B                      11146 00258$:
      00314B 38 0D                11147 	jr	C, 00144$
                                  11148 ;src/main.c:1132: pickup.visible = 1;
      00314D 21rFAr00             11149 	ld	hl, #_pickup
      003150 36 01                11150 	ld	(hl), #0x01
                                  11151 ;src/main.c:1133: set_sprite_tile(3, pickup.tile);
      003152 21r02r01             11152 	ld	hl, #(_pickup + 8)
      003155 4E                   11153 	ld	c, (hl)
                                  11154 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003156 21r0Er00             11155 	ld	hl, #(_shadow_OAM + 14)
      003159 71                   11156 	ld	(hl), c
                                  11157 ;src/main.c:1133: set_sprite_tile(3, pickup.tile);
      00315A                      11158 00144$:
                                  11159 ;src/main.c:1138: }
      00315A 33                   11160 	inc	sp
      00315B 33                   11161 	inc	sp
      00315C C9                   11162 	ret
                                  11163 ;src/main.c:1140: void tickEx() {
                                  11164 ;	---------------------------------
                                  11165 ; Function tickEx
                                  11166 ; ---------------------------------
      00315D                      11167 _tickEx::
      00315D E8 F4                11168 	add	sp, #-12
                                  11169 ;src/main.c:1141: for (uint8_t i = 0; i < exCount; ++i) {
      00315F F8 0B                11170 	ldhl	sp,	#11
      003161 36 00                11171 	ld	(hl), #0x00
      003163                      11172 00118$:
      003163 21rA5r0B             11173 	ld	hl, #_exCount
      003166 4E                   11174 	ld	c, (hl)
      003167 F8 0B                11175 	ldhl	sp,	#11
      003169 7E                   11176 	ld	a, (hl)
      00316A 91                   11177 	sub	a, c
      00316B D2r3Br33             11178 	jp	NC, 00120$
                                  11179 ;src/main.c:1142: if (explosions[i].visible) {
      00316E 4E                   11180 	ld	c, (hl)
      00316F 06 00                11181 	ld	b, #0x00
      003171 69                   11182 	ld	l, c
      003172 60                   11183 	ld	h, b
      003173 29                   11184 	add	hl, hl
      003174 09                   11185 	add	hl, bc
      003175 29                   11186 	add	hl, hl
      003176 01r03r01             11187 	ld	bc,#_explosions
      003179 09                   11188 	add	hl,bc
      00317A E5                   11189 	push	hl
      00317B 7D                   11190 	ld	a, l
      00317C F8 03                11191 	ldhl	sp,	#3
      00317E 77                   11192 	ld	(hl), a
      00317F E1                   11193 	pop	hl
      003180 7C                   11194 	ld	a, h
      003181 F8 02                11195 	ldhl	sp,	#2
      003183 32                   11196 	ld	(hl-), a
      003184 2A                   11197 	ld	a, (hl+)
      003185 5F                   11198 	ld	e, a
      003186 56                   11199 	ld	d, (hl)
      003187 1A                   11200 	ld	a, (de)
      003188 F8 0A                11201 	ldhl	sp,	#10
      00318A 77                   11202 	ld	(hl), a
      00318B 7E                   11203 	ld	a, (hl)
      00318C B7                   11204 	or	a, a
      00318D CAr35r33             11205 	jp	Z, 00119$
                                  11206 ;src/main.c:1144: explosions[i].x -= xOverflow;
      003190 F8 01                11207 	ldhl	sp,	#1
      003192 2A                   11208 	ld	a, (hl+)
      003193 4F                   11209 	ld	c, a
      003194 46                   11210 	ld	b, (hl)
      003195 03                   11211 	inc	bc
      003196 0A                   11212 	ld	a, (bc)
      003197 21rD2r00             11213 	ld	hl, #_xOverflow
      00319A 5E                   11214 	ld	e, (hl)
      00319B 93                   11215 	sub	a, e
      00319C 02                   11216 	ld	(bc), a
                                  11217 ;src/main.c:1145: explosions[i].y -= yOverflow;
      00319D F8 01                11218 	ldhl	sp,#1
      00319F 2A                   11219 	ld	a, (hl+)
      0031A0 5F                   11220 	ld	e, a
      0031A1 56                   11221 	ld	d, (hl)
      0031A2 21 02 00             11222 	ld	hl, #0x0002
      0031A5 19                   11223 	add	hl, de
      0031A6 E5                   11224 	push	hl
      0031A7 7D                   11225 	ld	a, l
      0031A8 F8 09                11226 	ldhl	sp,	#9
      0031AA 77                   11227 	ld	(hl), a
      0031AB E1                   11228 	pop	hl
      0031AC 7C                   11229 	ld	a, h
      0031AD F8 08                11230 	ldhl	sp,	#8
      0031AF 32                   11231 	ld	(hl-), a
      0031B0 2A                   11232 	ld	a, (hl+)
      0031B1 5F                   11233 	ld	e, a
      0031B2 56                   11234 	ld	d, (hl)
      0031B3 1A                   11235 	ld	a, (de)
      0031B4 21rD4r00             11236 	ld	hl, #_yOverflow
      0031B7 5E                   11237 	ld	e, (hl)
      0031B8 93                   11238 	sub	a, e
      0031B9 F8 07                11239 	ldhl	sp,	#7
      0031BB F5                   11240 	push	af
      0031BC 2A                   11241 	ld	a,	(hl+)
      0031BD 66                   11242 	ld	h, (hl)
      0031BE 6F                   11243 	ld	l, a
      0031BF F1                   11244 	pop	af
      0031C0 77                   11245 	ld	(hl), a
                                  11246 ;src/main.c:1146: move_sprite(20 +i+i, explosions[i].x, explosions[i].y+8);
      0031C1 F8 07                11247 	ldhl	sp,#7
      0031C3 2A                   11248 	ld	a, (hl+)
      0031C4 5F                   11249 	ld	e, a
      0031C5 2A                   11250 	ld	a, (hl+)
      0031C6 57                   11251 	ld	d, a
      0031C7 1A                   11252 	ld	a, (de)
      0031C8 C6 08                11253 	add	a, #0x08
      0031CA 5F                   11254 	ld	e, a
      0031CB 0A                   11255 	ld	a, (bc)
      0031CC 22                   11256 	ld	(hl+), a
      0031CD 23                   11257 	inc	hl
      0031CE 3A                   11258 	ld	a, (hl-)
      0031CF 77                   11259 	ld	(hl), a
      0031D0 7E                   11260 	ld	a, (hl)
      0031D1 C6 14                11261 	add	a, #0x14
      0031D3 86                   11262 	add	a, (hl)
      0031D4 F8 03                11263 	ldhl	sp,	#3
      0031D6 77                   11264 	ld	(hl), a
      0031D7 56                   11265 	ld	d, (hl)
                                  11266 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0031D8 26 00                11267 	ld	h, #0x00
                                  11268 ;	spillPairReg hl
                                  11269 ;	spillPairReg hl
      0031DA 6A                   11270 	ld	l, d
      0031DB 29                   11271 	add	hl, hl
      0031DC 29                   11272 	add	hl, hl
      0031DD D5                   11273 	push	de
      0031DE 11r00r00             11274 	ld	de, #_shadow_OAM
      0031E1 19                   11275 	add	hl, de
      0031E2 D1                   11276 	pop	de
                                  11277 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0031E3 7B                   11278 	ld	a, e
      0031E4 22                   11279 	ld	(hl+), a
      0031E5 5D                   11280 	ld	e, l
      0031E6 54                   11281 	ld	d, h
      0031E7 F8 09                11282 	ldhl	sp,	#9
                                  11283 ;src/main.c:1147: move_sprite(21 +i+i, explosions[i].x+8, explosions[i].y+8);
      0031E9 3A                   11284 	ld	a, (hl-)
      0031EA 2B                   11285 	dec	hl
      0031EB 12                   11286 	ld	(de), a
      0031EC 2A                   11287 	ld	a, (hl+)
      0031ED 5F                   11288 	ld	e, a
      0031EE 2A                   11289 	ld	a, (hl+)
      0031EF 23                   11290 	inc	hl
      0031F0 57                   11291 	ld	d, a
      0031F1 1A                   11292 	ld	a, (de)
      0031F2 C6 08                11293 	add	a, #0x08
      0031F4 5F                   11294 	ld	e, a
      0031F5 0A                   11295 	ld	a, (bc)
      0031F6 C6 08                11296 	add	a, #0x08
      0031F8 4F                   11297 	ld	c, a
      0031F9 7E                   11298 	ld	a, (hl)
      0031FA C6 15                11299 	add	a, #0x15
      0031FC 86                   11300 	add	a, (hl)
      0031FD 2B                   11301 	dec	hl
      0031FE 77                   11302 	ld	(hl), a
                                  11303 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0031FF 6E                   11304 	ld	l, (hl)
                                  11305 ;	spillPairReg hl
                                  11306 ;	spillPairReg hl
      003200 26 00                11307 	ld	h, #0x00
                                  11308 ;	spillPairReg hl
                                  11309 ;	spillPairReg hl
      003202 29                   11310 	add	hl, hl
      003203 29                   11311 	add	hl, hl
      003204 D5                   11312 	push	de
      003205 11r00r00             11313 	ld	de, #_shadow_OAM
      003208 19                   11314 	add	hl, de
      003209 D1                   11315 	pop	de
                                  11316 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00320A 7B                   11317 	ld	a, e
      00320B 22                   11318 	ld	(hl+), a
      00320C 71                   11319 	ld	(hl), c
                                  11320 ;src/main.c:1149: explosions[i].frameCounter++;
      00320D F8 01                11321 	ldhl	sp,#1
      00320F 2A                   11322 	ld	a, (hl+)
      003210 5F                   11323 	ld	e, a
      003211 56                   11324 	ld	d, (hl)
      003212 21 04 00             11325 	ld	hl, #0x0004
      003215 19                   11326 	add	hl, de
      003216 4D                   11327 	ld	c, l
      003217 44                   11328 	ld	b, h
      003218 0A                   11329 	ld	a, (bc)
      003219 3C                   11330 	inc	a
      00321A 02                   11331 	ld	(bc), a
                                  11332 ;src/main.c:1150: if (auxTick == 0) {
      00321B FArF0r00             11333 	ld	a, (#_auxTick)
      00321E B7                   11334 	or	a, a
      00321F C2r35r33             11335 	jp	NZ, 00119$
                                  11336 ;src/main.c:1151: if (explosions[i].frameCounter > EXPLFRAMETIME) {
      003222 0A                   11337 	ld	a, (bc)
      003223 5F                   11338 	ld	e, a
      003224 FArA6r0B             11339 	ld	a, (#_EXPLFRAMETIME)
      003227 93                   11340 	sub	a, e
      003228 D2r35r33             11341 	jp	NC, 00119$
                                  11342 ;src/main.c:1152: explosions[i].frameCounter = 0;
      00322B AF                   11343 	xor	a, a
      00322C 02                   11344 	ld	(bc), a
                                  11345 ;src/main.c:1153: explosions[i].frame += 1; 
      00322D F8 01                11346 	ldhl	sp,#1
      00322F 2A                   11347 	ld	a, (hl+)
      003230 5F                   11348 	ld	e, a
      003231 56                   11349 	ld	d, (hl)
      003232 21 03 00             11350 	ld	hl, #0x0003
      003235 19                   11351 	add	hl, de
      003236 E5                   11352 	push	hl
      003237 7D                   11353 	ld	a, l
      003238 F8 06                11354 	ldhl	sp,	#6
      00323A 77                   11355 	ld	(hl), a
      00323B E1                   11356 	pop	hl
      00323C 7C                   11357 	ld	a, h
      00323D F8 05                11358 	ldhl	sp,	#5
      00323F 32                   11359 	ld	(hl-), a
      003240 2A                   11360 	ld	a, (hl+)
      003241 5F                   11361 	ld	e, a
      003242 56                   11362 	ld	d, (hl)
      003243 1A                   11363 	ld	a, (de)
      003244 4F                   11364 	ld	c, a
      003245 0C                   11365 	inc	c
      003246 3A                   11366 	ld	a, (hl-)
      003247 6E                   11367 	ld	l, (hl)
      003248 67                   11368 	ld	h, a
      003249 71                   11369 	ld	(hl), c
                                  11370 ;src/main.c:1154: if (explosions[i].frame > 3) {
      00324A F8 04                11371 	ldhl	sp,#4
      00324C 2A                   11372 	ld	a, (hl+)
      00324D 5F                   11373 	ld	e, a
      00324E 56                   11374 	ld	d, (hl)
      00324F 1A                   11375 	ld	a, (de)
      003250 4F                   11376 	ld	c, a
      003251 3E 03                11377 	ld	a, #0x03
      003253 91                   11378 	sub	a, c
      003254 30 2A                11379 	jr	NC, 00102$
                                  11380 ;src/main.c:1155: explosions[i].visible = 0;
      003256 F8 01                11381 	ldhl	sp,	#1
      003258 2A                   11382 	ld	a,	(hl+)
      003259 66                   11383 	ld	h, (hl)
      00325A 6F                   11384 	ld	l, a
      00325B 36 00                11385 	ld	(hl), #0x00
                                  11386 ;src/main.c:1156: set_sprite_tile(20 + i+i, 0x7f);
      00325D F8 03                11387 	ldhl	sp,	#3
      00325F 4E                   11388 	ld	c, (hl)
                                  11389 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003260 26 00                11390 	ld	h, #0x00
                                  11391 ;	spillPairReg hl
                                  11392 ;	spillPairReg hl
      003262 69                   11393 	ld	l, c
      003263 29                   11394 	add	hl, hl
      003264 29                   11395 	add	hl, hl
      003265 11r00r00             11396 	ld	de, #_shadow_OAM
      003268 19                   11397 	add	hl, de
      003269 23                   11398 	inc	hl
      00326A 23                   11399 	inc	hl
      00326B 36 7F                11400 	ld	(hl), #0x7f
                                  11401 ;src/main.c:1157: set_sprite_tile(21 + i+i, 0x7f);
      00326D F8 09                11402 	ldhl	sp,	#9
      00326F 4E                   11403 	ld	c, (hl)
                                  11404 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003270 26 00                11405 	ld	h, #0x00
                                  11406 ;	spillPairReg hl
                                  11407 ;	spillPairReg hl
      003272 69                   11408 	ld	l, c
      003273 29                   11409 	add	hl, hl
      003274 29                   11410 	add	hl, hl
      003275 11r00r00             11411 	ld	de, #_shadow_OAM
      003278 19                   11412 	add	hl, de
      003279 23                   11413 	inc	hl
      00327A 23                   11414 	inc	hl
      00327B 36 7F                11415 	ld	(hl), #0x7f
                                  11416 ;src/main.c:1157: set_sprite_tile(21 + i+i, 0x7f);
      00327D C3r35r33             11417 	jp	00119$
      003280                      11418 00102$:
                                  11419 ;src/main.c:1160: set_sprite_tile(20 + i+i, explosions[i].tile + (explosions[i].frame *4));
      003280 F8 01                11420 	ldhl	sp,#1
      003282 2A                   11421 	ld	a, (hl+)
      003283 5F                   11422 	ld	e, a
      003284 56                   11423 	ld	d, (hl)
      003285 21 05 00             11424 	ld	hl, #0x0005
      003288 19                   11425 	add	hl, de
      003289 E5                   11426 	push	hl
      00328A 7D                   11427 	ld	a, l
      00328B F8 08                11428 	ldhl	sp,	#8
      00328D 77                   11429 	ld	(hl), a
      00328E E1                   11430 	pop	hl
      00328F 7C                   11431 	ld	a, h
      003290 F8 07                11432 	ldhl	sp,	#7
      003292 32                   11433 	ld	(hl-), a
      003293 2A                   11434 	ld	a, (hl+)
      003294 5F                   11435 	ld	e, a
      003295 56                   11436 	ld	d, (hl)
      003296 1A                   11437 	ld	a, (de)
      003297 F8 0A                11438 	ldhl	sp,	#10
      003299 32                   11439 	ld	(hl-), a
      00329A 2B                   11440 	dec	hl
      00329B 71                   11441 	ld	(hl), c
      00329C CB 26                11442 	sla	(hl)
      00329E CB 26                11443 	sla	(hl)
      0032A0 23                   11444 	inc	hl
      0032A1 23                   11445 	inc	hl
      0032A2 3A                   11446 	ld	a, (hl-)
      0032A3 2B                   11447 	dec	hl
      0032A4 86                   11448 	add	a, (hl)
      0032A5 23                   11449 	inc	hl
      0032A6 23                   11450 	inc	hl
      0032A7 77                   11451 	ld	(hl), a
      0032A8 F8 03                11452 	ldhl	sp,	#3
                                  11453 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0032AA 3A                   11454 	ld	a, (hl-)
      0032AB 22                   11455 	ld	(hl+), a
      0032AC 36 00                11456 	ld	(hl), #0x00
      0032AE 3E 02                11457 	ld	a, #0x02
      0032B0                      11458 00153$:
      0032B0 F8 02                11459 	ldhl	sp,	#2
      0032B2 CB 26                11460 	sla	(hl)
      0032B4 23                   11461 	inc	hl
      0032B5 CB 16                11462 	rl	(hl)
      0032B7 3D                   11463 	dec	a
      0032B8 20 F6                11464 	jr	NZ, 00153$
      0032BA 11r00r00             11465 	ld	de, #_shadow_OAM
      0032BD 3A                   11466 	ld	a, (hl-)
      0032BE 6E                   11467 	ld	l, (hl)
      0032BF 67                   11468 	ld	h, a
      0032C0 19                   11469 	add	hl, de
      0032C1 33                   11470 	inc	sp
      0032C2 33                   11471 	inc	sp
      0032C3 5D                   11472 	ld	e, l
      0032C4 54                   11473 	ld	d, h
      0032C5 D5                   11474 	push	de
      0032C6 21 02 00             11475 	ld	hl, #0x0002
      0032C9 19                   11476 	add	hl, de
      0032CA E5                   11477 	push	hl
      0032CB 7D                   11478 	ld	a, l
      0032CC F8 04                11479 	ldhl	sp,	#4
      0032CE 77                   11480 	ld	(hl), a
      0032CF E1                   11481 	pop	hl
      0032D0 7C                   11482 	ld	a, h
      0032D1 F8 03                11483 	ldhl	sp,	#3
      0032D3 32                   11484 	ld	(hl-), a
      0032D4 2A                   11485 	ld	a, (hl+)
      0032D5 5F                   11486 	ld	e, a
      0032D6 56                   11487 	ld	d, (hl)
      0032D7 F8 0A                11488 	ldhl	sp,	#10
      0032D9 7E                   11489 	ld	a, (hl)
      0032DA 12                   11490 	ld	(de), a
                                  11491 ;src/main.c:1161: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      0032DB F8 06                11492 	ldhl	sp,#6
      0032DD 2A                   11493 	ld	a, (hl+)
      0032DE 5F                   11494 	ld	e, a
      0032DF 56                   11495 	ld	d, (hl)
      0032E0 1A                   11496 	ld	a, (de)
      0032E1 F8 0A                11497 	ldhl	sp,	#10
      0032E3 77                   11498 	ld	(hl), a
      0032E4 F8 04                11499 	ldhl	sp,#4
      0032E6 2A                   11500 	ld	a, (hl+)
      0032E7 5F                   11501 	ld	e, a
      0032E8 56                   11502 	ld	d, (hl)
      0032E9 1A                   11503 	ld	a, (de)
      0032EA F8 08                11504 	ldhl	sp,	#8
      0032EC 77                   11505 	ld	(hl), a
      0032ED CB 26                11506 	sla	(hl)
      0032EF CB 26                11507 	sla	(hl)
      0032F1 23                   11508 	inc	hl
      0032F2 23                   11509 	inc	hl
      0032F3 3A                   11510 	ld	a, (hl-)
      0032F4 2B                   11511 	dec	hl
      0032F5 86                   11512 	add	a, (hl)
      0032F6 23                   11513 	inc	hl
      0032F7 23                   11514 	inc	hl
      0032F8 77                   11515 	ld	(hl), a
      0032F9 34                   11516 	inc	(hl)
      0032FA 34                   11517 	inc	(hl)
      0032FB 2B                   11518 	dec	hl
                                  11519 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0032FC 3A                   11520 	ld	a, (hl-)
      0032FD 22                   11521 	ld	(hl+), a
      0032FE 36 00                11522 	ld	(hl), #0x00
      003300 3E 02                11523 	ld	a, #0x02
      003302                      11524 00154$:
      003302 F8 08                11525 	ldhl	sp,	#8
      003304 CB 26                11526 	sla	(hl)
      003306 23                   11527 	inc	hl
      003307 CB 16                11528 	rl	(hl)
      003309 3D                   11529 	dec	a
      00330A 20 F6                11530 	jr	NZ, 00154$
      00330C 2B                   11531 	dec	hl
      00330D 2A                   11532 	ld	a, (hl+)
      00330E 5F                   11533 	ld	e, a
      00330F 56                   11534 	ld	d, (hl)
      003310 21r00r00             11535 	ld	hl, #_shadow_OAM
      003313 19                   11536 	add	hl, de
      003314 E5                   11537 	push	hl
      003315 7D                   11538 	ld	a, l
      003316 F8 08                11539 	ldhl	sp,	#8
      003318 77                   11540 	ld	(hl), a
      003319 E1                   11541 	pop	hl
      00331A 7C                   11542 	ld	a, h
      00331B F8 07                11543 	ldhl	sp,	#7
      00331D 32                   11544 	ld	(hl-), a
      00331E 2A                   11545 	ld	a, (hl+)
      00331F 5F                   11546 	ld	e, a
      003320 56                   11547 	ld	d, (hl)
      003321 21 02 00             11548 	ld	hl, #0x0002
      003324 19                   11549 	add	hl, de
      003325 E5                   11550 	push	hl
      003326 7D                   11551 	ld	a, l
      003327 F8 0A                11552 	ldhl	sp,	#10
      003329 77                   11553 	ld	(hl), a
      00332A E1                   11554 	pop	hl
      00332B 7C                   11555 	ld	a, h
      00332C F8 09                11556 	ldhl	sp,	#9
      00332E 32                   11557 	ld	(hl-), a
      00332F 2A                   11558 	ld	a, (hl+)
      003330 5F                   11559 	ld	e, a
      003331 2A                   11560 	ld	a, (hl+)
      003332 57                   11561 	ld	d, a
      003333 7E                   11562 	ld	a, (hl)
      003334 12                   11563 	ld	(de), a
                                  11564 ;src/main.c:1161: set_sprite_tile(21 + i+i, explosions[i].tile+(explosions[i].frame *4) +2);
      003335                      11565 00119$:
                                  11566 ;src/main.c:1141: for (uint8_t i = 0; i < exCount; ++i) {
      003335 F8 0B                11567 	ldhl	sp,	#11
      003337 34                   11568 	inc	(hl)
      003338 C3r63r31             11569 	jp	00118$
      00333B                      11570 00120$:
                                  11571 ;src/main.c:1167: }
      00333B E8 0C                11572 	add	sp, #12
      00333D C9                   11573 	ret
                                  11574 ;src/main.c:1169: void initEnemyOptions() {
                                  11575 ;	---------------------------------
                                  11576 ; Function initEnemyOptions
                                  11577 ; ---------------------------------
      00333E                      11578 _initEnemyOptions::
                                  11579 ;src/main.c:1170: enemyOptions[0] = blob;
      00333E 11 12 00             11580 	ld	de, #0x0012
      003341 D5                   11581 	push	de
      003342 11r41r00             11582 	ld	de, #_blob
      003345 D5                   11583 	push	de
      003346 11r00r00             11584 	ld	de, #_enemyOptions
      003349 D5                   11585 	push	de
      00334A CDr00r00             11586 	call	___memcpy
      00334D E8 06                11587 	add	sp, #6
                                  11588 ;src/main.c:1171: enemyOptions[1] = bomb;
      00334F 11 12 00             11589 	ld	de, #0x0012
      003352 D5                   11590 	push	de
      003353 11r53r00             11591 	ld	de, #_bomb
      003356 D5                   11592 	push	de
      003357 11r12r00             11593 	ld	de, #(_enemyOptions + 18)
      00335A D5                   11594 	push	de
      00335B CDr00r00             11595 	call	___memcpy
      00335E E8 06                11596 	add	sp, #6
                                  11597 ;src/main.c:1172: enemyOptions[2] = miniship;
      003360 11 12 00             11598 	ld	de, #0x0012
      003363 D5                   11599 	push	de
      003364 11r65r00             11600 	ld	de, #_miniship
      003367 D5                   11601 	push	de
      003368 11r24r00             11602 	ld	de, #(_enemyOptions + 36)
      00336B D5                   11603 	push	de
      00336C CDr00r00             11604 	call	___memcpy
      00336F E8 06                11605 	add	sp, #6
                                  11606 ;src/main.c:1173: enemyOptions[3] = shieldship;
      003371 11 12 00             11607 	ld	de, #0x0012
      003374 D5                   11608 	push	de
      003375 11r89r00             11609 	ld	de, #_shieldship
      003378 D5                   11610 	push	de
      003379 11r36r00             11611 	ld	de, #(_enemyOptions + 54)
      00337C D5                   11612 	push	de
      00337D CDr00r00             11613 	call	___memcpy
      003380 E8 06                11614 	add	sp, #6
                                  11615 ;src/main.c:1175: enemyOptions[4] = bigblob;
      003382 11 12 00             11616 	ld	de, #0x0012
      003385 D5                   11617 	push	de
      003386 11r77r00             11618 	ld	de, #_bigblob
      003389 D5                   11619 	push	de
      00338A 11r48r00             11620 	ld	de, #(_enemyOptions + 72)
      00338D D5                   11621 	push	de
      00338E CDr00r00             11622 	call	___memcpy
      003391 E8 06                11623 	add	sp, #6
                                  11624 ;src/main.c:1176: }
      003393 C9                   11625 	ret
                                  11626 ;src/main.c:1179: void initProjectiles() {
                                  11627 ;	---------------------------------
                                  11628 ; Function initProjectiles
                                  11629 ; ---------------------------------
      003394                      11630 _initProjectiles::
                                  11631 ;src/main.c:1180: set_sprite_data(0x20, 17, ProjectileTiles); 
      003394 11rE8r05             11632 	ld	de, #_ProjectileTiles
      003397 D5                   11633 	push	de
      003398 21 20 11             11634 	ld	hl, #0x1120
      00339B E5                   11635 	push	hl
      00339C CDr00r00             11636 	call	_set_sprite_data
      00339F E8 04                11637 	add	sp, #4
                                  11638 ;src/main.c:1182: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0033A1 AF                   11639 	xor	a, a
      0033A2                      11640 00103$:
      0033A2 21r9Fr0B             11641 	ld	hl, #_PROJECTILECOUNT
      0033A5 4E                   11642 	ld	c, (hl)
      0033A6 B9                   11643 	cp	a, c
      0033A7 D0                   11644 	ret	NC
      0033A8 3C                   11645 	inc	a
                                  11646 ;src/main.c:1186: }
      0033A9 18 F7                11647 	jr	00103$
                                  11648 ;src/main.c:1188: void initGame() {
                                  11649 ;	---------------------------------
                                  11650 ; Function initGame
                                  11651 ; ---------------------------------
      0033AB                      11652 _initGame::
                                  11653 ;src/main.c:1189: STAT_REG = 0x45;
      0033AB 3E 45                11654 	ld	a, #0x45
      0033AD E0r00                11655 	ldh	(_STAT_REG + 0), a
                                  11656 ;src/main.c:1190: LYC_REG = 0x7e; //line 126
      0033AF 3E 7E                11657 	ld	a, #0x7e
      0033B1 E0r00                11658 	ldh	(_LYC_REG + 0), a
                                  11659 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0033B3 F3                   11660 	di
                                  11661 ;src/main.c:1192: add_LCD(interruptLCD);
      0033B4 11r00r00             11662 	ld	de, #_interruptLCD
      0033B7 D5                   11663 	push	de
      0033B8 CDr00r00             11664 	call	_add_LCD
      0033BB 33                   11665 	inc	sp
      0033BC 33                   11666 	inc	sp
                                  11667 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      0033BD FB                   11668 	ei
                                  11669 ;src/main.c:1194: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      0033BE 3E 03                11670 	ld	a, #0x03
      0033C0 F5                   11671 	push	af
      0033C1 33                   11672 	inc	sp
      0033C2 CDr00r00             11673 	call	_set_interrupts
      0033C5 33                   11674 	inc	sp
                                  11675 ;src/main.c:1196: xDir = 0;
      0033C6 21rC4r00             11676 	ld	hl, #_xDir
      0033C9 36 00                11677 	ld	(hl), #0x00
                                  11678 ;src/main.c:1197: yDir = -1;
      0033CB 21rC5r00             11679 	ld	hl, #_yDir
      0033CE 36 FF                11680 	ld	(hl), #0xff
                                  11681 ;src/main.c:1198: xSpeed = 0;
      0033D0 21rC6r00             11682 	ld	hl, #_xSpeed
      0033D3 36 00                11683 	ld	(hl), #0x00
                                  11684 ;src/main.c:1199: ySpeed = 0;
      0033D5 21rC7r00             11685 	ld	hl, #_ySpeed
      0033D8 36 00                11686 	ld	(hl), #0x00
                                  11687 ;src/main.c:1202: playerX = 80<<5;
      0033DA 21rC8r00             11688 	ld	hl, #_playerX
      0033DD 36 00                11689 	ld	(hl), #0x00
      0033DF 23                   11690 	inc	hl
      0033E0 36 0A                11691 	ld	(hl), #0x0a
                                  11692 ;src/main.c:1203: playerY = 80<<5;
      0033E2 21rCAr00             11693 	ld	hl, #_playerY
      0033E5 36 00                11694 	ld	(hl), #0x00
      0033E7 23                   11695 	inc	hl
      0033E8 36 0A                11696 	ld	(hl), #0x0a
                                  11697 ;src/main.c:1205: playerDrawX = 80;
      0033EA 21rCCr00             11698 	ld	hl, #_playerDrawX
      0033ED 36 50                11699 	ld	(hl), #0x50
                                  11700 ;src/main.c:1206: playerDrawY = 80;
      0033EF 21rCDr00             11701 	ld	hl, #_playerDrawY
      0033F2 36 50                11702 	ld	(hl), #0x50
                                  11703 ;src/main.c:1209: bgX = 0;
      0033F4 AF                   11704 	xor	a, a
      0033F5 21rCEr00             11705 	ld	hl, #_bgX
      0033F8 22                   11706 	ld	(hl+), a
      0033F9 77                   11707 	ld	(hl), a
                                  11708 ;src/main.c:1210: bgY = 0;
      0033FA AF                   11709 	xor	a, a
      0033FB 21rD0r00             11710 	ld	hl, #_bgY
      0033FE 22                   11711 	ld	(hl+), a
      0033FF 77                   11712 	ld	(hl), a
                                  11713 ;src/main.c:1212: hull = maxHull;
      003400 FArA1r0B             11714 	ld	a, (#_maxHull)
      003403 EArF6r00             11715 	ld	(#_hull),a
                                  11716 ;src/main.c:1213: shield = maxShield;
      003406 FArA2r0B             11717 	ld	a, (#_maxShield)
      003409 EArF7r00             11718 	ld	(#_shield),a
                                  11719 ;src/main.c:1215: DISPLAY_ON;
      00340C F0r00                11720 	ldh	a, (_LCDC_REG + 0)
      00340E F6 80                11721 	or	a, #0x80
      003410 E0r00                11722 	ldh	(_LCDC_REG + 0), a
                                  11723 ;src/main.c:1216: SPRITES_8x16;
      003412 F0r00                11724 	ldh	a, (_LCDC_REG + 0)
      003414 F6 04                11725 	or	a, #0x04
      003416 E0r00                11726 	ldh	(_LCDC_REG + 0), a
                                  11727 ;src/main.c:1217: set_sprite_data(0, 12, Player1);
      003418 11r83r07             11728 	ld	de, #_Player1
      00341B D5                   11729 	push	de
      00341C 21 00 0C             11730 	ld	hl, #0xc00
      00341F E5                   11731 	push	hl
      003420 CDr00r00             11732 	call	_set_sprite_data
      003423 E8 04                11733 	add	sp, #4
                                  11734 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003425 21r02r00             11735 	ld	hl, #(_shadow_OAM + 2)
      003428 36 00                11736 	ld	(hl), #0x00
      00342A 21r06r00             11737 	ld	hl, #(_shadow_OAM + 6)
      00342D 36 02                11738 	ld	(hl), #0x02
                                  11739 ;src/main.c:1223: SHOW_SPRITES;
      00342F F0r00                11740 	ldh	a, (_LCDC_REG + 0)
      003431 F6 02                11741 	or	a, #0x02
      003433 E0r00                11742 	ldh	(_LCDC_REG + 0), a
                                  11743 ;src/main.c:1227: font_init();
      003435 CDr00r00             11744 	call	_font_init
                                  11745 ;src/main.c:1229: min_font = font_load(font_min); // 36 tiles of characters
      003438 11r00r00             11746 	ld	de, #_font_min
      00343B D5                   11747 	push	de
      00343C CDr00r00             11748 	call	_font_load
      00343F E1                   11749 	pop	hl
      003440 21rF8r00             11750 	ld	hl, #_min_font
      003443 7B                   11751 	ld	a, e
      003444 22                   11752 	ld	(hl+), a
                                  11753 ;src/main.c:1230: font_set(min_font);
      003445 7A                   11754 	ld	a, d
      003446 32                   11755 	ld	(hl-), a
      003447 2A                   11756 	ld	a, (hl+)
      003448 5F                   11757 	ld	e, a
      003449 56                   11758 	ld	d, (hl)
      00344A D5                   11759 	push	de
      00344B CDr00r00             11760 	call	_font_set
      00344E E1                   11761 	pop	hl
                                  11762 ;src/main.c:1231: set_win_tiles(1,0,4,1,hullabel);
      00344F 11r00r00             11763 	ld	de, #_hullabel
      003452 D5                   11764 	push	de
      003453 21 04 01             11765 	ld	hl, #0x104
      003456 E5                   11766 	push	hl
      003457 21 01 00             11767 	ld	hl, #0x01
      00345A E5                   11768 	push	hl
      00345B CDr00r00             11769 	call	_set_win_tiles
      00345E E8 06                11770 	add	sp, #6
                                  11771 ;src/main.c:1232: set_win_tiles(1,1,4,1,shieldlabel);
      003460 11r04r00             11772 	ld	de, #_shieldlabel
      003463 D5                   11773 	push	de
      003464 21 04 01             11774 	ld	hl, #0x104
      003467 E5                   11775 	push	hl
      003468 21 01 01             11776 	ld	hl, #0x101
      00346B E5                   11777 	push	hl
      00346C CDr00r00             11778 	call	_set_win_tiles
      00346F E8 06                11779 	add	sp, #6
                                  11780 ;src/main.c:1237: set_bkg_data(0x50,1,healthblock);
      003471 11r07r05             11781 	ld	de, #_healthblock
      003474 D5                   11782 	push	de
      003475 21 50 01             11783 	ld	hl, #0x150
      003478 E5                   11784 	push	hl
      003479 CDr00r00             11785 	call	_set_bkg_data
      00347C E8 04                11786 	add	sp, #4
                                  11787 ;src/main.c:1239: setHealthBar(0, hull);
      00347E FArF6r00             11788 	ld	a, (#_hull)
      003481 67                   11789 	ld	h, a
      003482 2E 00                11790 	ld	l, #0x00
      003484 E5                   11791 	push	hl
      003485 CDrA9r0B             11792 	call	_setHealthBar
      003488 E1                   11793 	pop	hl
                                  11794 ;src/main.c:1240: setHealthBar(1, shield);
      003489 FArF7r00             11795 	ld	a, (#_shield)
      00348C 67                   11796 	ld	h, a
      00348D 2E 01                11797 	ld	l, #0x01
      00348F E5                   11798 	push	hl
      003490 CDrA9r0B             11799 	call	_setHealthBar
      003493 E1                   11800 	pop	hl
                                  11801 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      003494 3E 07                11802 	ld	a, #0x07
      003496 E0r00                11803 	ldh	(_WX_REG + 0), a
      003498 3E 7E                11804 	ld	a, #0x7e
      00349A E0r00                11805 	ldh	(_WY_REG + 0), a
                                  11806 ;src/main.c:1247: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      00349C 11r87r04             11807 	ld	de, #_backgroundtiles
      00349F D5                   11808 	push	de
      0034A0 21 25 08             11809 	ld	hl, #0x825
      0034A3 E5                   11810 	push	hl
      0034A4 CDr00r00             11811 	call	_set_bkg_data
      0034A7 E8 04                11812 	add	sp, #4
                                  11813 ;src/main.c:1248: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      0034A9 11r87r00             11814 	ld	de, #_background1
      0034AC D5                   11815 	push	de
      0034AD 21 20 20             11816 	ld	hl, #0x2020
      0034B0 E5                   11817 	push	hl
      0034B1 AF                   11818 	xor	a, a
      0034B2 0F                   11819 	rrca
      0034B3 F5                   11820 	push	af
      0034B4 CDr00r00             11821 	call	_set_bkg_tiles
      0034B7 E8 06                11822 	add	sp, #6
                                  11823 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      0034B9 AF                   11824 	xor	a, a
      0034BA E0r00                11825 	ldh	(_SCX_REG + 0), a
      0034BC AF                   11826 	xor	a, a
      0034BD E0r00                11827 	ldh	(_SCY_REG + 0), a
                                  11828 ;src/main.c:1254: set_bkg_data(0x51, 18, ProjectileTiles);
      0034BF 11rE8r05             11829 	ld	de, #_ProjectileTiles
      0034C2 D5                   11830 	push	de
      0034C3 21 51 12             11831 	ld	hl, #0x1251
      0034C6 E5                   11832 	push	hl
      0034C7 CDr00r00             11833 	call	_set_bkg_data
      0034CA E8 04                11834 	add	sp, #4
                                  11835 ;src/main.c:1256: set_win_tiles(10, 0,4,1,weaponlabel);
      0034CC 11r08r00             11836 	ld	de, #_weaponlabel
      0034CF D5                   11837 	push	de
      0034D0 21 04 01             11838 	ld	hl, #0x104
      0034D3 E5                   11839 	push	hl
      0034D4 21 0A 00             11840 	ld	hl, #0x0a
      0034D7 E5                   11841 	push	hl
      0034D8 CDr00r00             11842 	call	_set_win_tiles
      0034DB E8 06                11843 	add	sp, #6
                                  11844 ;src/main.c:1257: set_win_tiles(10, 1,4,1,scorelabel);
      0034DD 11r0Cr00             11845 	ld	de, #_scorelabel
      0034E0 D5                   11846 	push	de
      0034E1 21 04 01             11847 	ld	hl, #0x104
      0034E4 E5                   11848 	push	hl
      0034E5 21 0A 01             11849 	ld	hl, #0x10a
      0034E8 E5                   11850 	push	hl
      0034E9 CDr00r00             11851 	call	_set_win_tiles
      0034EC E8 06                11852 	add	sp, #6
                                  11853 ;src/main.c:1259: setGunIcon();
      0034EE CDrC1r27             11854 	call	_setGunIcon
                                  11855 ;src/main.c:1260: SHOW_BKG;
      0034F1 F0r00                11856 	ldh	a, (_LCDC_REG + 0)
      0034F3 F6 01                11857 	or	a, #0x01
      0034F5 E0r00                11858 	ldh	(_LCDC_REG + 0), a
                                  11859 ;src/main.c:1261: SHOW_WIN;;
      0034F7 F0r00                11860 	ldh	a, (_LCDC_REG + 0)
      0034F9 F6 20                11861 	or	a, #0x20
      0034FB E0r00                11862 	ldh	(_LCDC_REG + 0), a
                                  11863 ;src/main.c:1263: SCORE = MAKE_BCD(00000);
      0034FD AF                   11864 	xor	a, a
      0034FE 21rE4r00             11865 	ld	hl, #_SCORE
      003501 22                   11866 	ld	(hl+), a
      003502 22                   11867 	ld	(hl+), a
      003503 22                   11868 	ld	(hl+), a
      003504 77                   11869 	ld	(hl), a
                                  11870 ;src/main.c:1264: updateScore();
      003505 CDrBAr0C             11871 	call	_updateScore
                                  11872 ;src/main.c:1265: missiles = 0;
      003508 21rD9r00             11873 	ld	hl, #_missiles
      00350B 36 00                11874 	ld	(hl), #0x00
                                  11875 ;src/main.c:1266: MISSILES = MAKE_BCD(0);
      00350D AF                   11876 	xor	a, a
      00350E 21rDAr00             11877 	ld	hl, #_MISSILES
      003511 22                   11878 	ld	(hl+), a
      003512 22                   11879 	ld	(hl+), a
      003513 22                   11880 	ld	(hl+), a
      003514 77                   11881 	ld	(hl), a
                                  11882 ;src/main.c:1267: updateMissileCount(0);
      003515 AF                   11883 	xor	a, a
      003516 F5                   11884 	push	af
      003517 33                   11885 	inc	sp
      003518 CDrE4r0C             11886 	call	_updateMissileCount
      00351B 33                   11887 	inc	sp
                                  11888 ;src/main.c:1268: set_win_tiles(17, 0,1,1,gunMap+2);
      00351C 11rE1r00             11889 	ld	de, #(_gunMap + 2)
      00351F D5                   11890 	push	de
      003520 21 01 01             11891 	ld	hl, #0x101
      003523 E5                   11892 	push	hl
      003524 21 11 00             11893 	ld	hl, #0x11
      003527 E5                   11894 	push	hl
      003528 CDr00r00             11895 	call	_set_win_tiles
      00352B E8 06                11896 	add	sp, #6
                                  11897 ;src/main.c:1272: pickup = upgrade;//upgrade;
      00352D 11 09 00             11898 	ld	de, #0x0009
      003530 D5                   11899 	push	de
      003531 11r08r07             11900 	ld	de, #_upgrade
      003534 D5                   11901 	push	de
      003535 11rFAr00             11902 	ld	de, #_pickup
      003538 D5                   11903 	push	de
      003539 CDr00r00             11904 	call	___memcpy
      00353C E8 06                11905 	add	sp, #6
                                  11906 ;src/main.c:1274: set_sprite_data(0x70, 6, Pickups);
      00353E 11r23r07             11907 	ld	de, #_Pickups
      003541 D5                   11908 	push	de
      003542 21 70 06             11909 	ld	hl, #0x670
      003545 E5                   11910 	push	hl
      003546 CDr00r00             11911 	call	_set_sprite_data
      003549 E8 04                11912 	add	sp, #4
                                  11913 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00354B 21r0Er00             11914 	ld	hl, #(_shadow_OAM + 14)
      00354E 36 7F                11915 	ld	(hl), #0x7f
                                  11916 ;src/main.c:1276: move_sprite(3, pickup.x + 4, pickup.y + 12);
      003550 FArFDr00             11917 	ld	a, (#(_pickup + 3) + 0)
      003553 C6 0C                11918 	add	a, #0x0c
      003555 47                   11919 	ld	b, a
      003556 FArFBr00             11920 	ld	a, (#(_pickup + 1) + 0)
      003559 C6 04                11921 	add	a, #0x04
      00355B 4F                   11922 	ld	c, a
                                  11923 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00355C 21r0Cr00             11924 	ld	hl, #(_shadow_OAM + 12)
                                  11925 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00355F 78                   11926 	ld	a, b
      003560 22                   11927 	ld	(hl+), a
      003561 71                   11928 	ld	(hl), c
                                  11929 ;src/main.c:1278: for (uint8_t i = 0; i<exCount; ++i) {
      003562 0E 00                11930 	ld	c, #0x00
      003564                      11931 00111$:
      003564 21rA5r0B             11932 	ld	hl, #_exCount
      003567 46                   11933 	ld	b, (hl)
      003568 79                   11934 	ld	a, c
      003569 90                   11935 	sub	a, b
      00356A 30 1E                11936 	jr	NC, 00101$
                                  11937 ;src/main.c:1279: explosions[i] = ex;
      00356C 06 00                11938 	ld	b, #0x00
      00356E 69                   11939 	ld	l, c
      00356F 60                   11940 	ld	h, b
      003570 29                   11941 	add	hl, hl
      003571 09                   11942 	add	hl, bc
      003572 29                   11943 	add	hl, hl
      003573 11r03r01             11944 	ld	de, #_explosions
      003576 19                   11945 	add	hl, de
      003577 C5                   11946 	push	bc
      003578 11 06 00             11947 	ld	de, #0x0006
      00357B D5                   11948 	push	de
      00357C 11r83r08             11949 	ld	de, #_ex
      00357F D5                   11950 	push	de
      003580 E5                   11951 	push	hl
      003581 CDr00r00             11952 	call	___memcpy
      003584 E8 06                11953 	add	sp, #6
      003586 C1                   11954 	pop	bc
                                  11955 ;src/main.c:1278: for (uint8_t i = 0; i<exCount; ++i) {
      003587 0C                   11956 	inc	c
      003588 18 DA                11957 	jr	00111$
      00358A                      11958 00101$:
                                  11959 ;src/main.c:1281: set_sprite_data(exTiles[0], 16, Ex1);
      00358A FArEDr00             11960 	ld	a, (#_exTiles + 0)
      00358D 11r89r08             11961 	ld	de, #_Ex1
      003590 D5                   11962 	push	de
      003591 26 10                11963 	ld	h, #0x10
                                  11964 ;	spillPairReg hl
                                  11965 ;	spillPairReg hl
      003593 E5                   11966 	push	hl
      003594 33                   11967 	inc	sp
      003595 F5                   11968 	push	af
      003596 33                   11969 	inc	sp
      003597 CDr00r00             11970 	call	_set_sprite_data
      00359A E8 04                11971 	add	sp, #4
                                  11972 ;src/main.c:1282: set_sprite_data(exTiles[1], 16, Ex2);
      00359C FArEEr00             11973 	ld	a, (#(_exTiles + 1) + 0)
      00359F 11r89r09             11974 	ld	de, #_Ex2
      0035A2 D5                   11975 	push	de
      0035A3 26 10                11976 	ld	h, #0x10
                                  11977 ;	spillPairReg hl
                                  11978 ;	spillPairReg hl
      0035A5 E5                   11979 	push	hl
      0035A6 33                   11980 	inc	sp
      0035A7 F5                   11981 	push	af
      0035A8 33                   11982 	inc	sp
      0035A9 CDr00r00             11983 	call	_set_sprite_data
      0035AC E8 04                11984 	add	sp, #4
                                  11985 ;src/main.c:1283: set_sprite_data(exTiles[2], 16, Ex3);
      0035AE FArEFr00             11986 	ld	a, (#(_exTiles + 2) + 0)
      0035B1 11r89r0A             11987 	ld	de, #_Ex3
      0035B4 D5                   11988 	push	de
      0035B5 26 10                11989 	ld	h, #0x10
                                  11990 ;	spillPairReg hl
                                  11991 ;	spillPairReg hl
      0035B7 E5                   11992 	push	hl
      0035B8 33                   11993 	inc	sp
      0035B9 F5                   11994 	push	af
      0035BA 33                   11995 	inc	sp
      0035BB CDr00r00             11996 	call	_set_sprite_data
      0035BE E8 04                11997 	add	sp, #4
                                  11998 ;src/main.c:1284: }
      0035C0 C9                   11999 	ret
                                  12000 ;src/main.c:1289: void showScoreScreen() {
                                  12001 ;	---------------------------------
                                  12002 ; Function showScoreScreen
                                  12003 ; ---------------------------------
      0035C1                      12004 _showScoreScreen::
      0035C1 E8 F6                12005 	add	sp, #-10
                                  12006 ;src/main.c:1290: HIDE_WIN;
      0035C3 F0r00                12007 	ldh	a, (_LCDC_REG + 0)
      0035C5 E6 DF                12008 	and	a, #0xdf
      0035C7 E0r00                12009 	ldh	(_LCDC_REG + 0), a
                                  12010 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      0035C9 AF                   12011 	xor	a, a
      0035CA E0r00                12012 	ldh	(_WX_REG + 0), a
      0035CC AF                   12013 	xor	a, a
      0035CD E0r00                12014 	ldh	(_WY_REG + 0), a
                                  12015 ;src/main.c:1294: for (uint8_t i=0; i < 18; ++i) {
      0035CF 06 00                12016 	ld	b, #0x00
      0035D1                      12017 00105$:
      0035D1 78                   12018 	ld	a, b
      0035D2 D6 12                12019 	sub	a, #0x12
      0035D4 30 16                12020 	jr	NC, 00101$
                                  12021 ;src/main.c:1295: set_win_tiles(1,i,20,1,emptyRow);
      0035D6 11r2Dr00             12022 	ld	de, #_emptyRow
      0035D9 D5                   12023 	push	de
      0035DA 21 14 01             12024 	ld	hl, #0x114
      0035DD E5                   12025 	push	hl
      0035DE C5                   12026 	push	bc
      0035DF 33                   12027 	inc	sp
      0035E0 3E 01                12028 	ld	a, #0x01
      0035E2 F5                   12029 	push	af
      0035E3 33                   12030 	inc	sp
      0035E4 CDr00r00             12031 	call	_set_win_tiles
      0035E7 E8 06                12032 	add	sp, #6
                                  12033 ;src/main.c:1294: for (uint8_t i=0; i < 18; ++i) {
      0035E9 04                   12034 	inc	b
      0035EA 18 E5                12035 	jr	00105$
      0035EC                      12036 00101$:
                                  12037 ;src/main.c:1298: set_win_tiles(8, 5, 5, 1, endScoreLabel);
      0035EC 11r10r00             12038 	ld	de, #_endScoreLabel
      0035EF D5                   12039 	push	de
      0035F0 21 05 01             12040 	ld	hl, #0x105
      0035F3 E5                   12041 	push	hl
      0035F4 21 08 05             12042 	ld	hl, #0x508
      0035F7 E5                   12043 	push	hl
      0035F8 CDr00r00             12044 	call	_set_win_tiles
      0035FB E8 06                12045 	add	sp, #6
                                  12046 ;src/main.c:1302: for (uint16_t j=0; j<1234; ++j) {
      0035FD 01 00 00             12047 	ld	bc, #0x0000
      003600                      12048 00108$:
      003600 59                   12049 	ld	e, c
      003601 50                   12050 	ld	d, b
      003602 7B                   12051 	ld	a, e
      003603 D6 D2                12052 	sub	a, #0xd2
      003605 7A                   12053 	ld	a, d
      003606 DE 04                12054 	sbc	a, #0x04
      003608 30 08                12055 	jr	NC, 00102$
                                  12056 ;src/main.c:1303: incrementScore();
      00360A C5                   12057 	push	bc
      00360B CDr58r0D             12058 	call	_incrementScore
      00360E C1                   12059 	pop	bc
                                  12060 ;src/main.c:1302: for (uint16_t j=0; j<1234; ++j) {
      00360F 03                   12061 	inc	bc
      003610 18 EE                12062 	jr	00108$
      003612                      12063 00102$:
                                  12064 ;src/main.c:1305: bcd2text(&SCORE, 0x01, buf);
      003612 F8 00                12065 	ldhl	sp,	#0
      003614 4D                   12066 	ld	c, l
      003615 44                   12067 	ld	b, h
      003616 59                   12068 	ld	e, c
      003617 50                   12069 	ld	d, b
      003618 C5                   12070 	push	bc
      003619 D5                   12071 	push	de
      00361A 3E 01                12072 	ld	a, #0x01
      00361C F5                   12073 	push	af
      00361D 33                   12074 	inc	sp
      00361E 11rE4r00             12075 	ld	de, #_SCORE
      003621 D5                   12076 	push	de
      003622 CDr00r00             12077 	call	_bcd2text
      003625 E8 05                12078 	add	sp, #5
      003627 C1                   12079 	pop	bc
                                  12080 ;src/main.c:1306: set_win_tiles(7, 8, 7, 1, buf+1);
      003628 03                   12081 	inc	bc
      003629 C5                   12082 	push	bc
      00362A 21 07 01             12083 	ld	hl, #0x107
      00362D E5                   12084 	push	hl
      00362E 21 07 08             12085 	ld	hl, #0x807
      003631 E5                   12086 	push	hl
      003632 CDr00r00             12087 	call	_set_win_tiles
      003635 E8 06                12088 	add	sp, #6
                                  12089 ;src/main.c:1310: set_win_tiles(4, 11, 13, 1, pressAnyKeyLabel);
      003637 11r15r00             12090 	ld	de, #_pressAnyKeyLabel
      00363A D5                   12091 	push	de
      00363B 21 0D 01             12092 	ld	hl, #0x10d
      00363E E5                   12093 	push	hl
      00363F 21 04 0B             12094 	ld	hl, #0xb04
      003642 E5                   12095 	push	hl
      003643 CDr00r00             12096 	call	_set_win_tiles
      003646 E8 06                12097 	add	sp, #6
                                  12098 ;src/main.c:1312: set_win_tiles(5, 12, 11, 1, toContinueLabel);
      003648 11r22r00             12099 	ld	de, #_toContinueLabel
      00364B D5                   12100 	push	de
      00364C 21 0B 01             12101 	ld	hl, #0x10b
      00364F E5                   12102 	push	hl
      003650 21 05 0C             12103 	ld	hl, #0xc05
      003653 E5                   12104 	push	hl
      003654 CDr00r00             12105 	call	_set_win_tiles
      003657 E8 06                12106 	add	sp, #6
                                  12107 ;src/main.c:1316: SHOW_WIN;
      003659 F0r00                12108 	ldh	a, (_LCDC_REG + 0)
      00365B F6 20                12109 	or	a, #0x20
      00365D E0r00                12110 	ldh	(_LCDC_REG + 0), a
                                  12111 ;src/main.c:1318: }
      00365F E8 0A                12112 	add	sp, #10
      003661 C9                   12113 	ret
                                  12114 ;src/main.c:1320: void main(){
                                  12115 ;	---------------------------------
                                  12116 ; Function main
                                  12117 ; ---------------------------------
      003662                      12118 _main::
      003662 E8 FC                12119 	add	sp, #-4
                                  12120 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      003664 F3                   12121 	di
                                  12122 ;src/main.c:1324: initEnemyOptions();
      003665 CDr3Er33             12123 	call	_initEnemyOptions
                                  12124 ;src/main.c:1330: NR52_REG = 0x80; // sound on 
      003668 3E 80                12125 	ld	a, #0x80
      00366A E0r00                12126 	ldh	(_NR52_REG + 0), a
                                  12127 ;src/main.c:1331: NR50_REG = 0x77; // volume
      00366C 3E 77                12128 	ld	a, #0x77
      00366E E0r00                12129 	ldh	(_NR50_REG + 0), a
                                  12130 ;src/main.c:1332: NR51_REG = 0xFF; // all channels
      003670 3E FF                12131 	ld	a, #0xff
      003672 E0r00                12132 	ldh	(_NR51_REG + 0), a
                                  12133 ;src/main.c:1336: waitpad(J_A);
      003674 3E 10                12134 	ld	a, #0x10
      003676 F5                   12135 	push	af
      003677 33                   12136 	inc	sp
      003678 CDr00r00             12137 	call	_waitpad
      00367B 33                   12138 	inc	sp
                                  12139 ;src/main.c:1337: uint16_t seed = LY_REG;
      00367C F0r00                12140 	ldh	a, (_LY_REG + 0)
      00367E 4F                   12141 	ld	c, a
      00367F 06 00                12142 	ld	b, #0x00
                                  12143 ;src/main.c:1338: seed |= (uint16_t)DIV_REG << 8;
      003681 F0r00                12144 	ldh	a, (_DIV_REG + 0)
      003683 5F                   12145 	ld	e, a
      003684 AF                   12146 	xor	a, a
      003685 B1                   12147 	or	a, c
      003686 4F                   12148 	ld	c, a
      003687 7B                   12149 	ld	a, e
      003688 B0                   12150 	or	a, b
      003689 47                   12151 	ld	b, a
                                  12152 ;src/main.c:1339: initrand(seed);
      00368A C5                   12153 	push	bc
      00368B CDr00r00             12154 	call	_initrand
      00368E E1                   12155 	pop	hl
                                  12156 ;src/main.c:1342: while(1) {
      00368F                      12157 00138$:
                                  12158 ;src/main.c:1344: initGame();
      00368F CDrABr33             12159 	call	_initGame
                                  12160 ;src/main.c:1345: initEnemies(1);
      003692 3E 01                12161 	ld	a, #0x01
      003694 F5                   12162 	push	af
      003695 33                   12163 	inc	sp
      003696 CDrF9r0F             12164 	call	_initEnemies
      003699 33                   12165 	inc	sp
                                  12166 ;src/main.c:1346: initProjectiles();
      00369A CDr94r33             12167 	call	_initProjectiles
                                  12168 ;src/main.c:1348: while(hull > 0) {
      00369D                      12169 00121$:
      00369D 21rF6r00             12170 	ld	hl, #_hull
      0036A0 7E                   12171 	ld	a, (hl)
      0036A1 B7                   12172 	or	a, a
      0036A2 CAr73r37             12173 	jp	Z, 00174$
                                  12174 ;src/main.c:1349: hull = 0; //TODO: debug clause to skip gameplay
      0036A5 36 00                12175 	ld	(hl), #0x00
                                  12176 ;src/main.c:1350: SHOW_SPRITES;
      0036A7 F0r00                12177 	ldh	a, (_LCDC_REG + 0)
      0036A9 F6 02                12178 	or	a, #0x02
      0036AB E0r00                12179 	ldh	(_LCDC_REG + 0), a
                                  12180 ;src/main.c:1352: joydata = joypad(); // query for button states
      0036AD CDr00r00             12181 	call	_joypad
      0036B0 21rF5r00             12182 	ld	hl, #_joydata
      0036B3 73                   12183 	ld	(hl), e
                                  12184 ;src/main.c:1354: updateDirection(); // set player direction
      0036B4 CDr71r0D             12185 	call	_updateDirection
                                  12186 ;src/main.c:1357: move(); 
      0036B7 CDr69r1B             12187 	call	_move
                                  12188 ;src/main.c:1359: moveProjectiles();
      0036BA CDrA2r2D             12189 	call	_moveProjectiles
                                  12190 ;src/main.c:1360: tickPickups();
      0036BD CDr85r2F             12191 	call	_tickPickups
                                  12192 ;src/main.c:1361: tickEx();
      0036C0 CDr5Dr31             12193 	call	_tickEx
                                  12194 ;src/main.c:1365: updateEnemyPositions();
      0036C3 CDr48r12             12195 	call	_updateEnemyPositions
                                  12196 ;src/main.c:1368: checkCollision(); 
      0036C6 CDrFEr22             12197 	call	_checkCollision
                                  12198 ;src/main.c:971: if (shield < maxShield) {
      0036C9 21rA2r0B             12199 	ld	hl, #_maxShield
      0036CC 4E                   12200 	ld	c, (hl)
      0036CD 59                   12201 	ld	e, c
      0036CE 21rF7r00             12202 	ld	hl, #_shield
      0036D1 56                   12203 	ld	d, (hl)
      0036D2 7E                   12204 	ld	a, (hl)
      0036D3 91                   12205 	sub	a, c
      0036D4 CB 7B                12206 	bit	7, e
      0036D6 28 07                12207 	jr	Z, 00314$
      0036D8 CB 7A                12208 	bit	7, d
      0036DA 20 08                12209 	jr	NZ, 00315$
      0036DC BF                   12210 	cp	a, a
      0036DD 18 05                12211 	jr	00315$
      0036DF                      12212 00314$:
      0036DF CB 7A                12213 	bit	7, d
      0036E1 28 01                12214 	jr	Z, 00315$
      0036E3 37                   12215 	scf
      0036E4                      12216 00315$:
      0036E4 30 04                12217 	jr	NC, 00142$
                                  12218 ;src/main.c:972: shield += 1;
      0036E6 21rF7r00             12219 	ld	hl, #_shield
      0036E9 34                   12220 	inc	(hl)
      0036EA                      12221 00142$:
                                  12222 ;src/main.c:974: setHealthBar(0, hull);
      0036EA FArF6r00             12223 	ld	a, (#_hull)
      0036ED 67                   12224 	ld	h, a
      0036EE 2E 00                12225 	ld	l, #0x00
      0036F0 E5                   12226 	push	hl
      0036F1 CDrA9r0B             12227 	call	_setHealthBar
      0036F4 E1                   12228 	pop	hl
                                  12229 ;src/main.c:975: setHealthBar(1, shield);
      0036F5 FArF7r00             12230 	ld	a, (#_shield)
      0036F8 67                   12231 	ld	h, a
      0036F9 2E 01                12232 	ld	l, #0x01
      0036FB E5                   12233 	push	hl
      0036FC CDrA9r0B             12234 	call	_setHealthBar
      0036FF E1                   12235 	pop	hl
                                  12236 ;src/main.c:1373: if (joydata & J_B && fireCooldown == 0) {
      003700 FArF5r00             12237 	ld	a, (#_joydata)
      003703 CB 6F                12238 	bit	5, a
      003705 28 09                12239 	jr	Z, 00102$
      003707 FArC3r00             12240 	ld	a, (#_fireCooldown)
      00370A B7                   12241 	or	a, a
      00370B 20 03                12242 	jr	NZ, 00102$
                                  12243 ;src/main.c:1374: fire();
      00370D CDrF4r27             12244 	call	_fire
      003710                      12245 00102$:
                                  12246 ;src/main.c:1376: if (fireCooldown > 0) {
      003710 21rC3r00             12247 	ld	hl, #_fireCooldown
      003713 7E                   12248 	ld	a, (hl)
      003714 B7                   12249 	or	a, a
      003715 28 01                12250 	jr	Z, 00105$
                                  12251 ;src/main.c:1377: --fireCooldown;
      003717 35                   12252 	dec	(hl)
      003718                      12253 00105$:
                                  12254 ;src/main.c:1380: if (joydata & J_SELECT && switchDelay == 0) {
      003718 FArF5r00             12255 	ld	a, (#_joydata)
      00371B CB 77                12256 	bit	6, a
      00371D 28 24                12257 	jr	Z, 00112$
      00371F FArDEr00             12258 	ld	a, (#_switchDelay)
      003722 B7                   12259 	or	a, a
      003723 20 1E                12260 	jr	NZ, 00112$
                                  12261 ;src/main.c:1381: if (currentGun == 0) {
      003725 21rD8r00             12262 	ld	hl, #_currentGun
      003728 7E                   12263 	ld	a, (hl)
      003729 B7                   12264 	or	a, a
      00372A 20 04                12265 	jr	NZ, 00109$
                                  12266 ;src/main.c:1382: currentGun = 1;
      00372C 36 01                12267 	ld	(hl), #0x01
      00372E 18 0B                12268 	jr	00110$
      003730                      12269 00109$:
                                  12270 ;src/main.c:1384: else if (currentGun == 1) {
      003730 FArD8r00             12271 	ld	a, (#_currentGun)
      003733 3D                   12272 	dec	a
      003734 20 05                12273 	jr	NZ, 00110$
                                  12274 ;src/main.c:1385: currentGun = 0;
      003736 21rD8r00             12275 	ld	hl, #_currentGun
      003739 36 00                12276 	ld	(hl), #0x00
      00373B                      12277 00110$:
                                  12278 ;src/main.c:1387: setGunIcon();
      00373B CDrC1r27             12279 	call	_setGunIcon
                                  12280 ;src/main.c:1388: switchDelay = 30;
      00373E 21rDEr00             12281 	ld	hl, #_switchDelay
      003741 36 1E                12282 	ld	(hl), #0x1e
      003743                      12283 00112$:
                                  12284 ;src/main.c:1390: if (switchDelay != 0) {
      003743 21rDEr00             12285 	ld	hl, #_switchDelay
      003746 7E                   12286 	ld	a, (hl)
      003747 B7                   12287 	or	a, a
      003748 28 01                12288 	jr	Z, 00115$
                                  12289 ;src/main.c:1391: switchDelay--;
      00374A 35                   12290 	dec	(hl)
      00374B                      12291 00115$:
                                  12292 ;src/main.c:1394: if (auxTick == 0) {
      00374B FArF0r00             12293 	ld	a, (#_auxTick)
      00374E B7                   12294 	or	a, a
      00374F 20 08                12295 	jr	NZ, 00117$
                                  12296 ;src/main.c:1395: auxTick = AUXTICKFREQUENCY;
      003751 FArA8r0B             12297 	ld	a, (#_AUXTICKFREQUENCY)
      003754 EArF0r00             12298 	ld	(#_auxTick),a
      003757 18 04                12299 	jr	00118$
      003759                      12300 00117$:
                                  12301 ;src/main.c:1398: auxTick--;
      003759 21rF0r00             12302 	ld	hl, #_auxTick
      00375C 35                   12303 	dec	(hl)
      00375D                      12304 00118$:
                                  12305 ;src/main.c:1403: if (hull > 100) {
      00375D 3E 64                12306 	ld	a, #0x64
      00375F 21rF6r00             12307 	ld	hl, #_hull
      003762 96                   12308 	sub	a, (hl)
      003763 30 02                12309 	jr	NC, 00120$
                                  12310 ;src/main.c:1404: hull = 0;
      003765 36 00                12311 	ld	(hl), #0x00
      003767                      12312 00120$:
                                  12313 ;src/main.c:1407: SHOW_WIN;	
      003767 F0r00                12314 	ldh	a, (_LCDC_REG + 0)
      003769 F6 20                12315 	or	a, #0x20
      00376B E0r00                12316 	ldh	(_LCDC_REG + 0), a
                                  12317 ;src/main.c:1408: wait_vbl_done(); // Idle until next frame
      00376D CDr00r00             12318 	call	_wait_vbl_done
      003770 C3r9Dr36             12319 	jp	00121$
                                  12320 ;src/main.c:1413: for (uint8_t i=0; i<exCount; ++i) {
      003773                      12321 00174$:
      003773 F8 03                12322 	ldhl	sp,	#3
      003775 36 00                12323 	ld	(hl), #0x00
      003777                      12324 00150$:
      003777 21rA5r0B             12325 	ld	hl, #_exCount
      00377A 4E                   12326 	ld	c, (hl)
      00377B F8 03                12327 	ldhl	sp,	#3
      00377D 7E                   12328 	ld	a, (hl)
      00377E 91                   12329 	sub	a, c
      00377F 30 48                12330 	jr	NC, 00124$
                                  12331 ;src/main.c:1414: explosions[i].x = 200;
      003781 4E                   12332 	ld	c, (hl)
      003782 06 00                12333 	ld	b, #0x00
      003784 69                   12334 	ld	l, c
      003785 60                   12335 	ld	h, b
      003786 29                   12336 	add	hl, hl
      003787 09                   12337 	add	hl, bc
      003788 29                   12338 	add	hl, hl
      003789 01r03r01             12339 	ld	bc,#_explosions
      00378C 09                   12340 	add	hl,bc
                                  12341 ;	spillPairReg hl
                                  12342 ;	spillPairReg hl
      00378D 4D                   12343 	ld	c,l
      00378E 44                   12344 	ld	b,h
                                  12345 ;	spillPairReg hl
                                  12346 ;	spillPairReg hl
      00378F 23                   12347 	inc	hl
      003790 36 C8                12348 	ld	(hl), #0xc8
                                  12349 ;src/main.c:1415: explosions[i].y = 200;
      003792 69                   12350 	ld	l, c
                                  12351 ;	spillPairReg hl
                                  12352 ;	spillPairReg hl
      003793 60                   12353 	ld	h, b
                                  12354 ;	spillPairReg hl
                                  12355 ;	spillPairReg hl
      003794 23                   12356 	inc	hl
      003795 23                   12357 	inc	hl
      003796 36 C8                12358 	ld	(hl), #0xc8
                                  12359 ;src/main.c:1417: explosions[i].tile = exTiles[0];
      003798 21 05 00             12360 	ld	hl, #0x0005
      00379B 09                   12361 	add	hl, bc
      00379C E5                   12362 	push	hl
      00379D 7D                   12363 	ld	a, l
      00379E F8 03                12364 	ldhl	sp,	#3
      0037A0 77                   12365 	ld	(hl), a
      0037A1 E1                   12366 	pop	hl
      0037A2 7C                   12367 	ld	a, h
      0037A3 F8 02                12368 	ldhl	sp,	#2
      0037A5 32                   12369 	ld	(hl-), a
      0037A6 FArEDr00             12370 	ld	a, (#_exTiles + 0)
      0037A9 F5                   12371 	push	af
      0037AA 2A                   12372 	ld	a,	(hl+)
      0037AB 66                   12373 	ld	h, (hl)
      0037AC 6F                   12374 	ld	l, a
      0037AD F1                   12375 	pop	af
      0037AE 77                   12376 	ld	(hl), a
                                  12377 ;src/main.c:1418: explosions[i].frameCounter = 0;
      0037AF 21 04 00             12378 	ld	hl, #0x0004
      0037B2 09                   12379 	add	hl, bc
      0037B3 36 00                12380 	ld	(hl), #0x00
                                  12381 ;src/main.c:1419: explosions[i].frame = 2-i;
      0037B5 59                   12382 	ld	e, c
      0037B6 50                   12383 	ld	d, b
      0037B7 13                   12384 	inc	de
      0037B8 13                   12385 	inc	de
      0037B9 13                   12386 	inc	de
      0037BA F8 03                12387 	ldhl	sp,	#3
      0037BC 6E                   12388 	ld	l, (hl)
                                  12389 ;	spillPairReg hl
                                  12390 ;	spillPairReg hl
      0037BD 3E 02                12391 	ld	a, #0x02
      0037BF 95                   12392 	sub	a, l
      0037C0 12                   12393 	ld	(de), a
                                  12394 ;src/main.c:1420: explosions[i].visible = 1;
      0037C1 3E 01                12395 	ld	a, #0x01
      0037C3 02                   12396 	ld	(bc), a
                                  12397 ;src/main.c:1413: for (uint8_t i=0; i<exCount; ++i) {
      0037C4 F8 03                12398 	ldhl	sp,	#3
      0037C6 34                   12399 	inc	(hl)
      0037C7 18 AE                12400 	jr	00150$
      0037C9                      12401 00124$:
                                  12402 ;src/main.c:1422: xOverflow = 0;
      0037C9 AF                   12403 	xor	a, a
      0037CA 21rD2r00             12404 	ld	hl, #_xOverflow
      0037CD 22                   12405 	ld	(hl+), a
      0037CE 77                   12406 	ld	(hl), a
                                  12407 ;src/main.c:1423: yOverflow = 0;
      0037CF AF                   12408 	xor	a, a
      0037D0 21rD4r00             12409 	ld	hl, #_yOverflow
      0037D3 22                   12410 	ld	(hl+), a
      0037D4 77                   12411 	ld	(hl), a
                                  12412 ;src/main.c:1425: while(endExCount < 12) {
      0037D5 F8 03                12413 	ldhl	sp,	#3
      0037D7 36 00                12414 	ld	(hl), #0x00
      0037D9                      12415 00132$:
      0037D9 F8 03                12416 	ldhl	sp,	#3
      0037DB 7E                   12417 	ld	a, (hl)
      0037DC D6 0C                12418 	sub	a, #0x0c
      0037DE D2r50r39             12419 	jp	NC, 00134$
                                  12420 ;src/main.c:1427: SHOW_SPRITES;
      0037E1 F0r00                12421 	ldh	a, (_LCDC_REG + 0)
      0037E3 F6 02                12422 	or	a, #0x02
      0037E5 E0r00                12423 	ldh	(_LCDC_REG + 0), a
                                  12424 ;src/main.c:1428: tickEx();
      0037E7 CDr5Dr31             12425 	call	_tickEx
                                  12426 ;src/main.c:1429: if (auxTick == 0) {
      0037EA FArF0r00             12427 	ld	a, (#_auxTick)
      0037ED B7                   12428 	or	a, a
      0037EE 20 08                12429 	jr	NZ, 00126$
                                  12430 ;src/main.c:1430: auxTick = AUXTICKFREQUENCY;
      0037F0 FArA8r0B             12431 	ld	a, (#_AUXTICKFREQUENCY)
      0037F3 EArF0r00             12432 	ld	(#_auxTick),a
      0037F6 18 04                12433 	jr	00127$
      0037F8                      12434 00126$:
                                  12435 ;src/main.c:1433: auxTick--;
      0037F8 21rF0r00             12436 	ld	hl, #_auxTick
      0037FB 35                   12437 	dec	(hl)
      0037FC                      12438 00127$:
                                  12439 ;src/main.c:1435: if (!explosions[oldestEx].visible) {
      0037FC 21rECr00             12440 	ld	hl, #_oldestEx
      0037FF 4E                   12441 	ld	c, (hl)
      003800 06 00                12442 	ld	b, #0x00
      003802 69                   12443 	ld	l, c
      003803 60                   12444 	ld	h, b
      003804 29                   12445 	add	hl, hl
      003805 09                   12446 	add	hl, bc
      003806 29                   12447 	add	hl, hl
      003807 01r03r01             12448 	ld	bc,#_explosions
      00380A 09                   12449 	add	hl,bc
      00380B E5                   12450 	push	hl
      00380C 7D                   12451 	ld	a, l
      00380D F8 03                12452 	ldhl	sp,	#3
      00380F 77                   12453 	ld	(hl), a
      003810 E1                   12454 	pop	hl
      003811 7C                   12455 	ld	a, h
      003812 F8 02                12456 	ldhl	sp,	#2
      003814 32                   12457 	ld	(hl-), a
      003815 2A                   12458 	ld	a, (hl+)
      003816 5F                   12459 	ld	e, a
      003817 56                   12460 	ld	d, (hl)
      003818 1A                   12461 	ld	a, (de)
      003819 B7                   12462 	or	a, a
      00381A C2r44r39             12463 	jp	NZ, 00131$
                                  12464 ;src/main.c:1436: explosions[oldestEx].visible = 1;
      00381D 3A                   12465 	ld	a, (hl-)
      00381E 6E                   12466 	ld	l, (hl)
      00381F 67                   12467 	ld	h, a
      003820 36 01                12468 	ld	(hl), #0x01
                                  12469 ;src/main.c:1439: uint8_t tileNum = ((uint8_t)rand()) % exTileCount;
      003822 CDr00r00             12470 	call	_rand
      003825 7B                   12471 	ld	a, e
      003826 21rA7r0B             12472 	ld	hl, #_exTileCount
      003829 46                   12473 	ld	b, (hl)
      00382A C5                   12474 	push	bc
      00382B 33                   12475 	inc	sp
      00382C F5                   12476 	push	af
      00382D 33                   12477 	inc	sp
      00382E CDr00r00             12478 	call	__moduchar
      003831 E1                   12479 	pop	hl
      003832 F8 00                12480 	ldhl	sp,	#0
      003834 73                   12481 	ld	(hl), e
                                  12482 ;src/main.c:1440: uint8_t xOff = ((uint8_t)rand()) % 32;
      003835 CDr00r00             12483 	call	_rand
      003838 7B                   12484 	ld	a, e
      003839 E6 1F                12485 	and	a, #0x1f
      00383B F8 01                12486 	ldhl	sp,	#1
      00383D 77                   12487 	ld	(hl), a
                                  12488 ;src/main.c:1441: uint8_t yOff = ((uint8_t)rand()) % 32;
      00383E CDr00r00             12489 	call	_rand
      003841 7B                   12490 	ld	a, e
      003842 E6 1F                12491 	and	a, #0x1f
      003844 F8 02                12492 	ldhl	sp,	#2
      003846 77                   12493 	ld	(hl), a
                                  12494 ;src/main.c:1443: explosions[oldestEx].x = playerDrawX -16 + xOff;
      003847 21rECr00             12495 	ld	hl, #_oldestEx
      00384A 4E                   12496 	ld	c, (hl)
      00384B 06 00                12497 	ld	b, #0x00
      00384D 69                   12498 	ld	l, c
      00384E 60                   12499 	ld	h, b
      00384F 29                   12500 	add	hl, hl
      003850 09                   12501 	add	hl, bc
      003851 29                   12502 	add	hl, hl
      003852 01r03r01             12503 	ld	bc,#_explosions
      003855 09                   12504 	add	hl,bc
      003856 23                   12505 	inc	hl
      003857 4D                   12506 	ld	c, l
      003858 44                   12507 	ld	b, h
      003859 FArCCr00             12508 	ld	a, (#_playerDrawX)
      00385C C6 F0                12509 	add	a, #0xf0
      00385E F8 01                12510 	ldhl	sp,	#1
      003860 5E                   12511 	ld	e, (hl)
      003861 83                   12512 	add	a, e
      003862 02                   12513 	ld	(bc), a
                                  12514 ;src/main.c:1444: explosions[oldestEx].y = playerDrawY -16 + yOff;
      003863 21rECr00             12515 	ld	hl, #_oldestEx
      003866 4E                   12516 	ld	c, (hl)
      003867 06 00                12517 	ld	b, #0x00
      003869 69                   12518 	ld	l, c
      00386A 60                   12519 	ld	h, b
      00386B 29                   12520 	add	hl, hl
      00386C 09                   12521 	add	hl, bc
      00386D 29                   12522 	add	hl, hl
      00386E 01r03r01             12523 	ld	bc,#_explosions
      003871 09                   12524 	add	hl,bc
      003872 23                   12525 	inc	hl
      003873 23                   12526 	inc	hl
      003874 4D                   12527 	ld	c, l
      003875 44                   12528 	ld	b, h
      003876 FArCDr00             12529 	ld	a, (#_playerDrawY)
      003879 C6 F0                12530 	add	a, #0xf0
      00387B F8 02                12531 	ldhl	sp,	#2
      00387D 5E                   12532 	ld	e, (hl)
      00387E 83                   12533 	add	a, e
      00387F 02                   12534 	ld	(bc), a
                                  12535 ;src/main.c:1445: explosions[oldestEx].tile = exTiles[tileNum];
      003880 21rECr00             12536 	ld	hl, #_oldestEx
      003883 4E                   12537 	ld	c, (hl)
      003884 06 00                12538 	ld	b, #0x00
      003886 69                   12539 	ld	l, c
      003887 60                   12540 	ld	h, b
      003888 29                   12541 	add	hl, hl
      003889 09                   12542 	add	hl, bc
      00388A 29                   12543 	add	hl, hl
      00388B 01r03r01             12544 	ld	bc,#_explosions
      00388E 09                   12545 	add	hl,bc
      00388F 23                   12546 	inc	hl
      003890 23                   12547 	inc	hl
      003891 23                   12548 	inc	hl
      003892 23                   12549 	inc	hl
      003893 23                   12550 	inc	hl
      003894 4D                   12551 	ld	c, l
      003895 44                   12552 	ld	b, h
      003896 11rEDr00             12553 	ld	de, #_exTiles
      003899 F8 00                12554 	ldhl	sp,	#0
      00389B 6E                   12555 	ld	l, (hl)
      00389C 26 00                12556 	ld	h, #0x00
      00389E 19                   12557 	add	hl, de
      00389F 5D                   12558 	ld	e, l
      0038A0 54                   12559 	ld	d, h
      0038A1 1A                   12560 	ld	a, (de)
      0038A2 02                   12561 	ld	(bc), a
                                  12562 ;src/main.c:1446: explosions[oldestEx].frame = 0;
      0038A3 21rECr00             12563 	ld	hl, #_oldestEx
      0038A6 4E                   12564 	ld	c, (hl)
      0038A7 06 00                12565 	ld	b, #0x00
      0038A9 69                   12566 	ld	l, c
      0038AA 60                   12567 	ld	h, b
      0038AB 29                   12568 	add	hl, hl
      0038AC 09                   12569 	add	hl, bc
      0038AD 29                   12570 	add	hl, hl
      0038AE 01r03r01             12571 	ld	bc,#_explosions
      0038B1 09                   12572 	add	hl,bc
      0038B2 23                   12573 	inc	hl
      0038B3 23                   12574 	inc	hl
      0038B4 23                   12575 	inc	hl
      0038B5 36 00                12576 	ld	(hl), #0x00
                                  12577 ;src/main.c:1447: explosions[oldestEx].frameCounter = 0;
      0038B7 21rECr00             12578 	ld	hl, #_oldestEx
      0038BA 4E                   12579 	ld	c, (hl)
      0038BB 06 00                12580 	ld	b, #0x00
      0038BD 69                   12581 	ld	l, c
      0038BE 60                   12582 	ld	h, b
      0038BF 29                   12583 	add	hl, hl
      0038C0 09                   12584 	add	hl, bc
      0038C1 29                   12585 	add	hl, hl
      0038C2 01r03r01             12586 	ld	bc,#_explosions
      0038C5 09                   12587 	add	hl,bc
      0038C6 01 04 00             12588 	ld	bc, #0x0004
      0038C9 09                   12589 	add	hl, bc
      0038CA 36 00                12590 	ld	(hl), #0x00
                                  12591 ;src/main.c:1449: set_sprite_tile(20 + oldestEx+oldestEx, explosions[oldestEx].tile + (explosions[oldestEx].frame<<1));
      0038CC 21rECr00             12592 	ld	hl, #_oldestEx
      0038CF 4E                   12593 	ld	c, (hl)
      0038D0 06 00                12594 	ld	b, #0x00
      0038D2 69                   12595 	ld	l, c
      0038D3 60                   12596 	ld	h, b
      0038D4 29                   12597 	add	hl, hl
      0038D5 09                   12598 	add	hl, bc
      0038D6 29                   12599 	add	hl, hl
      0038D7 01r03r01             12600 	ld	bc,#_explosions
      0038DA 09                   12601 	add	hl,bc
      0038DB 5D                   12602 	ld	e, l
      0038DC 54                   12603 	ld	d, h
      0038DD 21 05 00             12604 	ld	hl, #0x0005
      0038E0 19                   12605 	add	hl, de
      0038E1 4E                   12606 	ld	c, (hl)
      0038E2 13                   12607 	inc	de
      0038E3 13                   12608 	inc	de
      0038E4 13                   12609 	inc	de
      0038E5 1A                   12610 	ld	a, (de)
      0038E6 87                   12611 	add	a, a
      0038E7 81                   12612 	add	a, c
      0038E8 4F                   12613 	ld	c, a
      0038E9 21rECr00             12614 	ld	hl, #_oldestEx
      0038EC 46                   12615 	ld	b, (hl)
      0038ED 78                   12616 	ld	a, b
      0038EE C6 14                12617 	add	a, #0x14
      0038F0 80                   12618 	add	a, b
                                  12619 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0038F1 6F                   12620 	ld	l, a
      0038F2 11r00r00             12621 	ld	de, #_shadow_OAM+0
                                  12622 ;	spillPairReg hl
                                  12623 ;	spillPairReg hl
      0038F5 26 00                12624 	ld	h, #0x00
                                  12625 ;	spillPairReg hl
                                  12626 ;	spillPairReg hl
      0038F7 29                   12627 	add	hl, hl
      0038F8 29                   12628 	add	hl, hl
      0038F9 19                   12629 	add	hl, de
      0038FA 23                   12630 	inc	hl
      0038FB 23                   12631 	inc	hl
      0038FC 71                   12632 	ld	(hl), c
                                  12633 ;src/main.c:1450: set_sprite_tile(21 + oldestEx+oldestEx, explosions[oldestEx].tile+(explosions[oldestEx].frame<<1) +2);
      0038FD 21rECr00             12634 	ld	hl, #_oldestEx
      003900 4E                   12635 	ld	c, (hl)
      003901 06 00                12636 	ld	b, #0x00
      003903 69                   12637 	ld	l, c
      003904 60                   12638 	ld	h, b
      003905 29                   12639 	add	hl, hl
      003906 09                   12640 	add	hl, bc
      003907 29                   12641 	add	hl, hl
      003908 01r03r01             12642 	ld	bc,#_explosions
      00390B 09                   12643 	add	hl,bc
      00390C 5D                   12644 	ld	e, l
      00390D 54                   12645 	ld	d, h
      00390E 21 05 00             12646 	ld	hl, #0x0005
      003911 19                   12647 	add	hl, de
      003912 4E                   12648 	ld	c, (hl)
      003913 13                   12649 	inc	de
      003914 13                   12650 	inc	de
      003915 13                   12651 	inc	de
      003916 1A                   12652 	ld	a, (de)
      003917 87                   12653 	add	a, a
      003918 81                   12654 	add	a, c
      003919 C6 02                12655 	add	a, #0x02
      00391B 4F                   12656 	ld	c, a
      00391C 21rECr00             12657 	ld	hl, #_oldestEx
      00391F 46                   12658 	ld	b, (hl)
      003920 78                   12659 	ld	a, b
      003921 C6 15                12660 	add	a, #0x15
      003923 80                   12661 	add	a, b
                                  12662 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      003924 6F                   12663 	ld	l, a
      003925 11r00r00             12664 	ld	de, #_shadow_OAM+0
                                  12665 ;	spillPairReg hl
                                  12666 ;	spillPairReg hl
      003928 26 00                12667 	ld	h, #0x00
                                  12668 ;	spillPairReg hl
                                  12669 ;	spillPairReg hl
      00392A 29                   12670 	add	hl, hl
      00392B 29                   12671 	add	hl, hl
      00392C 19                   12672 	add	hl, de
      00392D 23                   12673 	inc	hl
      00392E 23                   12674 	inc	hl
      00392F 71                   12675 	ld	(hl), c
                                  12676 ;src/main.c:1452: oldestEx++;
      003930 21rECr00             12677 	ld	hl, #_oldestEx
      003933 34                   12678 	inc	(hl)
                                  12679 ;src/main.c:1453: if (oldestEx >= exCount) {
      003934 21rA5r0B             12680 	ld	hl, #_exCount
      003937 4E                   12681 	ld	c, (hl)
      003938 21rECr00             12682 	ld	hl, #_oldestEx
      00393B 7E                   12683 	ld	a, (hl)
      00393C 91                   12684 	sub	a, c
      00393D 38 02                12685 	jr	C, 00129$
                                  12686 ;src/main.c:1454: oldestEx = 0;
      00393F 36 00                12687 	ld	(hl), #0x00
      003941                      12688 00129$:
                                  12689 ;src/main.c:1456: endExCount++;
      003941 F8 03                12690 	ldhl	sp,	#3
      003943 34                   12691 	inc	(hl)
      003944                      12692 00131$:
                                  12693 ;src/main.c:1459: SHOW_WIN;	
      003944 F0r00                12694 	ldh	a, (_LCDC_REG + 0)
      003946 F6 20                12695 	or	a, #0x20
      003948 E0r00                12696 	ldh	(_LCDC_REG + 0), a
                                  12697 ;src/main.c:1461: wait_vbl_done();
      00394A CDr00r00             12698 	call	_wait_vbl_done
      00394D C3rD9r37             12699 	jp	00132$
      003950                      12700 00134$:
                                  12701 ;src/main.c:1464: for (uint8_t j=0; j<exCount; ++j) {
      003950 0E 00                12702 	ld	c, #0x00
      003952                      12703 00153$:
      003952 21rA5r0B             12704 	ld	hl, #_exCount
      003955 46                   12705 	ld	b, (hl)
      003956 79                   12706 	ld	a, c
      003957 90                   12707 	sub	a, b
      003958 30 28                12708 	jr	NC, 00135$
                                  12709 ;src/main.c:1466: move_sprite(20 +j+j, 200, 200);
      00395A 41                   12710 	ld	b, c
      00395B 78                   12711 	ld	a, b
      00395C C6 14                12712 	add	a, #0x14
      00395E 80                   12713 	add	a, b
                                  12714 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00395F 6F                   12715 	ld	l, a
                                  12716 ;	spillPairReg hl
                                  12717 ;	spillPairReg hl
      003960 26 00                12718 	ld	h, #0x00
                                  12719 ;	spillPairReg hl
                                  12720 ;	spillPairReg hl
      003962 29                   12721 	add	hl, hl
      003963 29                   12722 	add	hl, hl
      003964 11r00r00             12723 	ld	de, #_shadow_OAM
      003967 19                   12724 	add	hl, de
                                  12725 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      003968 3E C8                12726 	ld	a, #0xc8
      00396A 22                   12727 	ld	(hl+), a
      00396B 36 C8                12728 	ld	(hl), #0xc8
                                  12729 ;src/main.c:1467: move_sprite(21 +j+j, 200, 200);
      00396D 78                   12730 	ld	a, b
      00396E C6 15                12731 	add	a, #0x15
      003970 80                   12732 	add	a, b
                                  12733 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      003971 6F                   12734 	ld	l, a
      003972 11r00r00             12735 	ld	de, #_shadow_OAM+0
                                  12736 ;	spillPairReg hl
                                  12737 ;	spillPairReg hl
      003975 26 00                12738 	ld	h, #0x00
                                  12739 ;	spillPairReg hl
                                  12740 ;	spillPairReg hl
      003977 29                   12741 	add	hl, hl
      003978 29                   12742 	add	hl, hl
      003979 19                   12743 	add	hl, de
                                  12744 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00397A 3E C8                12745 	ld	a, #0xc8
      00397C 22                   12746 	ld	(hl+), a
      00397D 36 C8                12747 	ld	(hl), #0xc8
                                  12748 ;src/main.c:1464: for (uint8_t j=0; j<exCount; ++j) {
      00397F 0C                   12749 	inc	c
      003980 18 D0                12750 	jr	00153$
      003982                      12751 00135$:
                                  12752 ;src/main.c:1469: for (uint16_t k=0; k<180; ++k) {
      003982 01 00 00             12753 	ld	bc, #0x0000
      003985                      12754 00156$:
      003985 59                   12755 	ld	e, c
      003986 50                   12756 	ld	d, b
      003987 7B                   12757 	ld	a, e
      003988 D6 B4                12758 	sub	a, #0xb4
      00398A 7A                   12759 	ld	a, d
      00398B DE 00                12760 	sbc	a, #0x00
      00398D 30 12                12761 	jr	NC, 00136$
                                  12762 ;src/main.c:1470: SHOW_SPRITES;
      00398F F0r00                12763 	ldh	a, (_LCDC_REG + 0)
      003991 F6 02                12764 	or	a, #0x02
      003993 E0r00                12765 	ldh	(_LCDC_REG + 0), a
                                  12766 ;src/main.c:1471: SHOW_WIN;
      003995 F0r00                12767 	ldh	a, (_LCDC_REG + 0)
      003997 F6 20                12768 	or	a, #0x20
      003999 E0r00                12769 	ldh	(_LCDC_REG + 0), a
                                  12770 ;src/main.c:1472: wait_vbl_done();
      00399B CDr00r00             12771 	call	_wait_vbl_done
                                  12772 ;src/main.c:1469: for (uint16_t k=0; k<180; ++k) {
      00399E 03                   12773 	inc	bc
      00399F 18 E4                12774 	jr	00156$
      0039A1                      12775 00136$:
                                  12776 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0039A1 F3                   12777 	di
                                  12778 ;src/main.c:1475: showScoreScreen();
      0039A2 CDrC1r35             12779 	call	_showScoreScreen
                                  12780 ;src/main.c:1476: wait_vbl_done();
      0039A5 CDr00r00             12781 	call	_wait_vbl_done
                                  12782 ;src/main.c:1477: printf("NOT DONE");
      0039A8 11rC6r39             12783 	ld	de, #___str_0
      0039AB D5                   12784 	push	de
      0039AC CDr00r00             12785 	call	_printf
      0039AF E1                   12786 	pop	hl
                                  12787 ;src/main.c:1478: waitpad(J_A);
      0039B0 3E 10                12788 	ld	a, #0x10
      0039B2 F5                   12789 	push	af
      0039B3 33                   12790 	inc	sp
      0039B4 CDr00r00             12791 	call	_waitpad
      0039B7 33                   12792 	inc	sp
                                  12793 ;src/main.c:1479: printf("DONE");
      0039B8 11rCFr39             12794 	ld	de, #___str_1
      0039BB D5                   12795 	push	de
      0039BC CDr00r00             12796 	call	_printf
      0039BF E1                   12797 	pop	hl
      0039C0 C3r8Fr36             12798 	jp	00138$
                                  12799 ;src/main.c:1482: }
      0039C3 E8 04                12800 	add	sp, #4
      0039C5 C9                   12801 	ret
      0039C6                      12802 ___str_0:
      0039C6 4E 4F 54 20 44 4F 4E 12803 	.ascii "NOT DONE"
             45
      0039CE 00                   12804 	.db 0x00
      0039CF                      12805 ___str_1:
      0039CF 44 4F 4E 45          12806 	.ascii "DONE"
      0039D3 00                   12807 	.db 0x00
                                  12808 	.area _CODE
                                  12809 	.area _INITIALIZER
      000000                      12810 __xinit__hullabel:
      000000 12                   12811 	.db #0x12	; 18
      000001 1F                   12812 	.db #0x1f	; 31
      000002 16                   12813 	.db #0x16	; 22
      000003 16                   12814 	.db #0x16	; 22
      000004                      12815 __xinit__shieldlabel:
      000004 1D                   12816 	.db #0x1d	; 29
      000005 12                   12817 	.db #0x12	; 18
      000006 16                   12818 	.db #0x16	; 22
      000007 0E                   12819 	.db #0x0e	; 14
      000008                      12820 __xinit__weaponlabel:
      000008 21                   12821 	.db #0x21	; 33
      000009 0F                   12822 	.db #0x0f	; 15
      00000A 1A                   12823 	.db #0x1a	; 26
      00000B 18                   12824 	.db #0x18	; 24
      00000C                      12825 __xinit__scorelabel:
      00000C 1D                   12826 	.db #0x1d	; 29
      00000D 0D                   12827 	.db #0x0d	; 13
      00000E 1C                   12828 	.db #0x1c	; 28
      00000F 0F                   12829 	.db #0x0f	; 15
      000010                      12830 __xinit__endScoreLabel:
      000010 1D                   12831 	.db #0x1d	; 29
      000011 0D                   12832 	.db #0x0d	; 13
      000012 19                   12833 	.db #0x19	; 25
      000013 1C                   12834 	.db #0x1c	; 28
      000014 0F                   12835 	.db #0x0f	; 15
      000015                      12836 __xinit__pressAnyKeyLabel:
      000015 1A                   12837 	.db #0x1a	; 26
      000016 1C                   12838 	.db #0x1c	; 28
      000017 0F                   12839 	.db #0x0f	; 15
      000018 1D                   12840 	.db #0x1d	; 29
      000019 1D                   12841 	.db #0x1d	; 29
      00001A 00                   12842 	.db #0x00	; 0
      00001B 0B                   12843 	.db #0x0b	; 11
      00001C 18                   12844 	.db #0x18	; 24
      00001D 23                   12845 	.db #0x23	; 35
      00001E 00                   12846 	.db #0x00	; 0
      00001F 15                   12847 	.db #0x15	; 21
      000020 0F                   12848 	.db #0x0f	; 15
      000021 23                   12849 	.db #0x23	; 35
      000022                      12850 __xinit__toContinueLabel:
      000022 1E                   12851 	.db #0x1e	; 30
      000023 19                   12852 	.db #0x19	; 25
      000024 00                   12853 	.db #0x00	; 0
      000025 0D                   12854 	.db #0x0d	; 13
      000026 19                   12855 	.db #0x19	; 25
      000027 18                   12856 	.db #0x18	; 24
      000028 1E                   12857 	.db #0x1e	; 30
      000029 13                   12858 	.db #0x13	; 19
      00002A 18                   12859 	.db #0x18	; 24
      00002B 1F                   12860 	.db #0x1f	; 31
      00002C 0F                   12861 	.db #0x0f	; 15
      00002D                      12862 __xinit__emptyRow:
      00002D 00                   12863 	.db #0x00	; 0
      00002E 00                   12864 	.db #0x00	; 0
      00002F 00                   12865 	.db #0x00	; 0
      000030 00                   12866 	.db #0x00	; 0
      000031 00                   12867 	.db #0x00	; 0
      000032 00                   12868 	.db #0x00	; 0
      000033 00                   12869 	.db #0x00	; 0
      000034 00                   12870 	.db #0x00	; 0
      000035 00                   12871 	.db #0x00	; 0
      000036 00                   12872 	.db #0x00	; 0
      000037 00                   12873 	.db #0x00	; 0
      000038 00                   12874 	.db #0x00	; 0
      000039 00                   12875 	.db #0x00	; 0
      00003A 00                   12876 	.db #0x00	; 0
      00003B 00                   12877 	.db #0x00	; 0
      00003C 00                   12878 	.db #0x00	; 0
      00003D 00                   12879 	.db #0x00	; 0
      00003E 00                   12880 	.db #0x00	; 0
      00003F 00                   12881 	.db #0x00	; 0
      000040 00                   12882 	.db #0x00	; 0
      000041                      12883 __xinit__blob:
      000041 00 00                12884 	.dw #0x0000
      000043 00 00                12885 	.dw #0x0000
      000045 00                   12886 	.db #0x00	;  0
      000046 00                   12887 	.db #0x00	;  0
      000047 40                   12888 	.db #0x40	; 64
      000048 00                   12889 	.db #0x00	; 0
      000049 01                   12890 	.db #0x01	; 1
      00004A 01                   12891 	.db #0x01	; 1
      00004B 01                   12892 	.db #0x01	; 1
      00004C 32                   12893 	.db #0x32	; 50	'2'
      00004D 03                   12894 	.db #0x03	;  3
      00004E 01                   12895 	.db #0x01	; 1
      00004F 00                   12896 	.db #0x00	;  0
      000050 00                   12897 	.db #0x00	;  0
      000051 32 00                12898 	.dw #0x0032
      000053                      12899 __xinit__bomb:
      000053 00 00                12900 	.dw #0x0000
      000055 00 00                12901 	.dw #0x0000
      000057 00                   12902 	.db #0x00	;  0
      000058 00                   12903 	.db #0x00	;  0
      000059 42                   12904 	.db #0x42	; 66	'B'
      00005A 00                   12905 	.db #0x00	; 0
      00005B 01                   12906 	.db #0x01	; 1
      00005C 01                   12907 	.db #0x01	; 1
      00005D 01                   12908 	.db #0x01	; 1
      00005E 32                   12909 	.db #0x32	; 50	'2'
      00005F 05                   12910 	.db #0x05	;  5
      000060 01                   12911 	.db #0x01	; 1
      000061 00                   12912 	.db #0x00	;  0
      000062 00                   12913 	.db #0x00	;  0
      000063 32 00                12914 	.dw #0x0032
      000065                      12915 __xinit__miniship:
      000065 00 00                12916 	.dw #0x0000
      000067 00 00                12917 	.dw #0x0000
      000069 00                   12918 	.db #0x00	;  0
      00006A 00                   12919 	.db #0x00	;  0
      00006B 44                   12920 	.db #0x44	; 68	'D'
      00006C 00                   12921 	.db #0x00	; 0
      00006D 01                   12922 	.db #0x01	; 1
      00006E 01                   12923 	.db #0x01	; 1
      00006F 01                   12924 	.db #0x01	; 1
      000070 32                   12925 	.db #0x32	; 50	'2'
      000071 05                   12926 	.db #0x05	;  5
      000072 01                   12927 	.db #0x01	; 1
      000073 00                   12928 	.db #0x00	;  0
      000074 00                   12929 	.db #0x00	;  0
      000075 32 00                12930 	.dw #0x0032
      000077                      12931 __xinit__bigblob:
      000077 00 00                12932 	.dw #0x0000
      000079 00 00                12933 	.dw #0x0000
      00007B 00                   12934 	.db #0x00	;  0
      00007C 00                   12935 	.db #0x00	;  0
      00007D 50                   12936 	.db #0x50	; 80	'P'
      00007E 52                   12937 	.db #0x52	; 82	'R'
      00007F 02                   12938 	.db #0x02	; 2
      000080 01                   12939 	.db #0x01	; 1
      000081 01                   12940 	.db #0x01	; 1
      000082 32                   12941 	.db #0x32	; 50	'2'
      000083 03                   12942 	.db #0x03	;  3
      000084 01                   12943 	.db #0x01	; 1
      000085 00                   12944 	.db #0x00	;  0
      000086 00                   12945 	.db #0x00	;  0
      000087 64 00                12946 	.dw #0x0064
      000089                      12947 __xinit__shieldship:
      000089 00 00                12948 	.dw #0x0000
      00008B 00 00                12949 	.dw #0x0000
      00008D 00                   12950 	.db #0x00	;  0
      00008E 00                   12951 	.db #0x00	;  0
      00008F 54                   12952 	.db #0x54	; 84	'T'
      000090 56                   12953 	.db #0x56	; 86	'V'
      000091 02                   12954 	.db #0x02	; 2
      000092 01                   12955 	.db #0x01	; 1
      000093 01                   12956 	.db #0x01	; 1
      000094 32                   12957 	.db #0x32	; 50	'2'
      000095 03                   12958 	.db #0x03	;  3
      000096 01                   12959 	.db #0x01	; 1
      000097 00                   12960 	.db #0x00	;  0
      000098 00                   12961 	.db #0x00	;  0
      000099 46 00                12962 	.dw #0x0046
      00009B                      12963 __xinit__singleGun:
      00009B 00 00                12964 	.dw #0x0000
      00009D 00 00                12965 	.dw #0x0000
      00009F 00                   12966 	.db #0x00	;  0
      0000A0 00                   12967 	.db #0x00	;  0
      0000A1 FF                   12968 	.db #0xff	; -1
      0000A2 02                   12969 	.db #0x02	; 2
      0000A3 32 00                12970 	.dw #0x0032
      0000A5 01                   12971 	.db #0x01	; 1
      0000A6 0F                   12972 	.db #0x0f	; 15
      0000A7 20                   12973 	.db #0x20	; 32
      0000A8                      12974 __xinit__doubleGun:
      0000A8 00 00                12975 	.dw #0x0000
      0000AA 00 00                12976 	.dw #0x0000
      0000AC 00                   12977 	.db #0x00	;  0
      0000AD 00                   12978 	.db #0x00	;  0
      0000AE FF                   12979 	.db #0xff	; -1
      0000AF 02                   12980 	.db #0x02	; 2
      0000B0 46 00                12981 	.dw #0x0046
      0000B2 01                   12982 	.db #0x01	; 1
      0000B3 0F                   12983 	.db #0x0f	; 15
      0000B4 26                   12984 	.db #0x26	; 38
      0000B5                      12985 __xinit__missile:
      0000B5 00 00                12986 	.dw #0x0000
      0000B7 00 00                12987 	.dw #0x0000
      0000B9 00                   12988 	.db #0x00	;  0
      0000BA 00                   12989 	.db #0x00	;  0
      0000BB FF                   12990 	.db #0xff	; -1
      0000BC 01                   12991 	.db #0x01	; 1
      0000BD 64 00                12992 	.dw #0x0064
      0000BF 01                   12993 	.db #0x01	; 1
      0000C0 1E                   12994 	.db #0x1e	; 30
      0000C1 2C                   12995 	.db #0x2c	; 44
      0000C2                      12996 __xinit__oldestProjectile:
      0000C2 00                   12997 	.db #0x00	; 0
      0000C3                      12998 __xinit__fireCooldown:
      0000C3 00                   12999 	.db #0x00	; 0
      0000C4                      13000 __xinit__xDir:
      0000C4 00                   13001 	.db #0x00	;  0
      0000C5                      13002 __xinit__yDir:
      0000C5 FF                   13003 	.db #0xff	; -1
      0000C6                      13004 __xinit__xSpeed:
      0000C6 00                   13005 	.db #0x00	;  0
      0000C7                      13006 __xinit__ySpeed:
      0000C7 00                   13007 	.db #0x00	;  0
      0000C8                      13008 __xinit__playerX:
      0000C8 00 0A                13009 	.dw #0x0a00
      0000CA                      13010 __xinit__playerY:
      0000CA 00 0A                13011 	.dw #0x0a00
      0000CC                      13012 __xinit__playerDrawX:
      0000CC 50                   13013 	.db #0x50	; 80	'P'
      0000CD                      13014 __xinit__playerDrawY:
      0000CD 50                   13015 	.db #0x50	; 80	'P'
      0000CE                      13016 __xinit__bgX:
      0000CE 00 00                13017 	.dw #0x0000
      0000D0                      13018 __xinit__bgY:
      0000D0 00 00                13019 	.dw #0x0000
      0000D2                      13020 __xinit__xOverflow:
      0000D2 00 00                13021 	.dw #0x0000
      0000D4                      13022 __xinit__yOverflow:
      0000D4 00 00                13023 	.dw #0x0000
      0000D6                      13024 __xinit__enemyCollisionCount:
      0000D6 00                   13025 	.db #0x00	; 0
      0000D7                      13026 __xinit__gunLevel:
      0000D7 00                   13027 	.db #0x00	; 0
      0000D8                      13028 __xinit__currentGun:
      0000D8 00                   13029 	.db #0x00	; 0
      0000D9                      13030 __xinit__missiles:
      0000D9 00                   13031 	.db #0x00	; 0
      0000DA                      13032 __xinit__MISSILES:
      0000DA 00 00 00 00          13033 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000DE                      13034 __xinit__switchDelay:
      0000DE 00                   13035 	.db #0x00	; 0
      0000DF                      13036 __xinit__gunMap:
      0000DF 53                   13037 	.db #0x53	; 83	'S'
      0000E0 5B                   13038 	.db #0x5b	; 91
      0000E1 61                   13039 	.db #0x61	; 97	'a'
      0000E2                      13040 __xinit__score:
      0000E2 00 00                13041 	.dw #0x0000
      0000E4                      13042 __xinit__SCORE:
      0000E4 00 00 00 00          13043 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000E8                      13044 __xinit__INCREMENT:
      0000E8 01 00 00 00          13045 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000EC                      13046 __xinit__oldestEx:
      0000EC 00                   13047 	.db #0x00	; 0
      0000ED                      13048 __xinit__exTiles:
      0000ED 80                   13049 	.db #0x80	; 128
      0000EE 90                   13050 	.db #0x90	; 144
      0000EF A0                   13051 	.db #0xa0	; 160
      0000F0                      13052 __xinit__auxTick:
      0000F0 01                   13053 	.db #0x01	; 1
                                  13054 	.area _CABS (ABS)
