                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickPickups
                                     16 	.globl _moveProjectiles
                                     17 	.globl _fire
                                     18 	.globl _setGunIcon
                                     19 	.globl _checkCollision
                                     20 	.globl _spawnPickup
                                     21 	.globl _takeDamage
                                     22 	.globl _move
                                     23 	.globl _updateEnemyPositions
                                     24 	.globl _initEnemies
                                     25 	.globl _playSound
                                     26 	.globl _updateDirection
                                     27 	.globl _incrementScore
                                     28 	.globl _updateMissileCount
                                     29 	.globl _updateScore
                                     30 	.globl _setHealthBar
                                     31 	.globl _interruptLCD
                                     32 	.globl _bcd2text
                                     33 	.globl _bcd_sub
                                     34 	.globl _bcd_add
                                     35 	.globl _rand
                                     36 	.globl _initrand
                                     37 	.globl _font_set
                                     38 	.globl _font_load
                                     39 	.globl _font_init
                                     40 	.globl _set_sprite_data
                                     41 	.globl _set_win_tiles
                                     42 	.globl _set_bkg_tiles
                                     43 	.globl _set_bkg_data
                                     44 	.globl _wait_vbl_done
                                     45 	.globl _set_interrupts
                                     46 	.globl _waitpad
                                     47 	.globl _joypad
                                     48 	.globl _add_LCD
                                     49 	.globl _INCREMENT
                                     50 	.globl _SCORE
                                     51 	.globl _score
                                     52 	.globl _gunMap
                                     53 	.globl _switchDelay
                                     54 	.globl _MISSILES
                                     55 	.globl _missiles
                                     56 	.globl _currentGun
                                     57 	.globl _gunLevel
                                     58 	.globl _enemyCollisionCount
                                     59 	.globl _yOverflow
                                     60 	.globl _xOverflow
                                     61 	.globl _bgY
                                     62 	.globl _bgX
                                     63 	.globl _playerDrawY
                                     64 	.globl _playerDrawX
                                     65 	.globl _playerY
                                     66 	.globl _playerX
                                     67 	.globl _ySpeed
                                     68 	.globl _xSpeed
                                     69 	.globl _yDir
                                     70 	.globl _xDir
                                     71 	.globl _fireCooldown
                                     72 	.globl _oldestProjectile
                                     73 	.globl _missile
                                     74 	.globl _doubleGun
                                     75 	.globl _singleGun
                                     76 	.globl _shieldship
                                     77 	.globl _bigblob
                                     78 	.globl _miniship
                                     79 	.globl _bomb
                                     80 	.globl _blob
                                     81 	.globl _scorelabel
                                     82 	.globl _weaponlabel
                                     83 	.globl _shieldlabel
                                     84 	.globl _hullabel
                                     85 	.globl _pickup
                                     86 	.globl _min_font
                                     87 	.globl _shield
                                     88 	.globl _hull
                                     89 	.globl _joydata
                                     90 	.globl _projectiles
                                     91 	.globl _enemies
                                     92 	.globl _enemyOptions
                                     93 	.globl _MAXGUNLEVEL
                                     94 	.globl _maxShield
                                     95 	.globl _maxHull
                                     96 	.globl _PLAYERSIZE
                                     97 	.globl _PROJECTILECOUNT
                                     98 	.globl _ySpawnPositions
                                     99 	.globl _xSpawnPositions
                                    100 	.globl _ENEMYCOUNT
                                    101 	.globl _EMPTYSPRITE
                                    102 	.globl _BLANK
                                    103 	.globl _BLANKSIZE
                                    104 	.globl _Player1
                                    105 	.globl _Pickups
                                    106 	.globl _health
                                    107 	.globl _ammo
                                    108 	.globl _upgrade
                                    109 	.globl _ProjectileTiles
                                    110 	.globl _largeenemies
                                    111 	.globl _enemy1
                                    112 	.globl _enemyOptionCount
                                    113 	.globl _healthblock
                                    114 	.globl _backgroundtiles
                                    115 	.globl _background1
                                    116 	.globl _cross
                                    117 ;--------------------------------------------------------
                                    118 ; special function registers
                                    119 ;--------------------------------------------------------
                                    120 ;--------------------------------------------------------
                                    121 ; ram data
                                    122 ;--------------------------------------------------------
                                    123 	.area _DATA
      000000                        124 _enemyOptions::
      000000                        125 	.ds 85
      000055                        126 _enemies::
      000055                        127 	.ds 85
      0000AA                        128 _projectiles::
      0000AA                        129 	.ds 60
      0000E6                        130 _joydata::
      0000E6                        131 	.ds 1
      0000E7                        132 _hull::
      0000E7                        133 	.ds 1
      0000E8                        134 _shield::
      0000E8                        135 	.ds 1
      0000E9                        136 _min_font::
      0000E9                        137 	.ds 2
      0000EB                        138 _pickup::
      0000EB                        139 	.ds 9
                                    140 ;--------------------------------------------------------
                                    141 ; ram data
                                    142 ;--------------------------------------------------------
                                    143 	.area _INITIALIZED
      000000                        144 _hullabel::
      000000                        145 	.ds 4
      000004                        146 _shieldlabel::
      000004                        147 	.ds 4
      000008                        148 _weaponlabel::
      000008                        149 	.ds 4
      00000C                        150 _scorelabel::
      00000C                        151 	.ds 4
      000010                        152 _blob::
      000010                        153 	.ds 17
      000021                        154 _bomb::
      000021                        155 	.ds 17
      000032                        156 _miniship::
      000032                        157 	.ds 17
      000043                        158 _bigblob::
      000043                        159 	.ds 17
      000054                        160 _shieldship::
      000054                        161 	.ds 17
      000065                        162 _singleGun::
      000065                        163 	.ds 12
      000071                        164 _doubleGun::
      000071                        165 	.ds 12
      00007D                        166 _missile::
      00007D                        167 	.ds 12
      000089                        168 _oldestProjectile::
      000089                        169 	.ds 1
      00008A                        170 _fireCooldown::
      00008A                        171 	.ds 1
      00008B                        172 _xDir::
      00008B                        173 	.ds 1
      00008C                        174 _yDir::
      00008C                        175 	.ds 1
      00008D                        176 _xSpeed::
      00008D                        177 	.ds 1
      00008E                        178 _ySpeed::
      00008E                        179 	.ds 1
      00008F                        180 _playerX::
      00008F                        181 	.ds 2
      000091                        182 _playerY::
      000091                        183 	.ds 2
      000093                        184 _playerDrawX::
      000093                        185 	.ds 1
      000094                        186 _playerDrawY::
      000094                        187 	.ds 1
      000095                        188 _bgX::
      000095                        189 	.ds 2
      000097                        190 _bgY::
      000097                        191 	.ds 2
      000099                        192 _xOverflow::
      000099                        193 	.ds 2
      00009B                        194 _yOverflow::
      00009B                        195 	.ds 2
      00009D                        196 _enemyCollisionCount::
      00009D                        197 	.ds 1
      00009E                        198 _gunLevel::
      00009E                        199 	.ds 1
      00009F                        200 _currentGun::
      00009F                        201 	.ds 1
      0000A0                        202 _missiles::
      0000A0                        203 	.ds 1
      0000A1                        204 _MISSILES::
      0000A1                        205 	.ds 4
      0000A5                        206 _switchDelay::
      0000A5                        207 	.ds 1
      0000A6                        208 _gunMap::
      0000A6                        209 	.ds 3
      0000A9                        210 _score::
      0000A9                        211 	.ds 2
      0000AB                        212 _SCORE::
      0000AB                        213 	.ds 4
      0000AF                        214 _INCREMENT::
      0000AF                        215 	.ds 4
                                    216 ;--------------------------------------------------------
                                    217 ; absolute external ram data
                                    218 ;--------------------------------------------------------
                                    219 	.area _DABS (ABS)
                                    220 ;--------------------------------------------------------
                                    221 ; global & static initialisations
                                    222 ;--------------------------------------------------------
                                    223 	.area _HOME
                                    224 	.area _GSINIT
                                    225 	.area _GSFINAL
                                    226 	.area _GSINIT
                                    227 ;--------------------------------------------------------
                                    228 ; Home
                                    229 ;--------------------------------------------------------
                                    230 	.area _HOME
                                    231 	.area _HOME
                                    232 ;--------------------------------------------------------
                                    233 ; code
                                    234 ;--------------------------------------------------------
                                    235 	.area _CODE
                                    236 ;src/main.c:134: void interruptLCD()
                                    237 ;	---------------------------------
                                    238 ; Function interruptLCD
                                    239 ; ---------------------------------
      000000                        240 _interruptLCD::
                                    241 ;src/main.c:136: HIDE_SPRITES;
      000000 F0r00                  242 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  243 	and	a, #0xfd
      000004 E0r00                  244 	ldh	(_LCDC_REG + 0), a
                                    245 ;src/main.c:137: }
      000006 C9                     246 	ret
      000007                        247 _cross:
      000007 18                     248 	.db #0x18	; 24
      000008 18                     249 	.db #0x18	; 24
      000009 18                     250 	.db #0x18	; 24
      00000A 18                     251 	.db #0x18	; 24
      00000B 3C                     252 	.db #0x3c	; 60
      00000C 3C                     253 	.db #0x3c	; 60
      00000D 3C                     254 	.db #0x3c	; 60
      00000E 3C                     255 	.db #0x3c	; 60
      00000F 7E                     256 	.db #0x7e	; 126
      000010 7E                     257 	.db #0x7e	; 126
      000011 7E                     258 	.db #0x7e	; 126
      000012 7E                     259 	.db #0x7e	; 126
      000013 FF                     260 	.db #0xff	; 255
      000014 FF                     261 	.db #0xff	; 255
      000015 FF                     262 	.db #0xff	; 255
      000016 FF                     263 	.db #0xff	; 255
      000017 0F                     264 	.db #0x0f	; 15
      000018 0F                     265 	.db #0x0f	; 15
      000019 3F                     266 	.db #0x3f	; 63
      00001A 3F                     267 	.db #0x3f	; 63
      00001B FF                     268 	.db #0xff	; 255
      00001C FF                     269 	.db #0xff	; 255
      00001D FF                     270 	.db #0xff	; 255
      00001E FF                     271 	.db #0xff	; 255
      00001F 7E                     272 	.db #0x7e	; 126
      000020 7E                     273 	.db #0x7e	; 126
      000021 3E                     274 	.db #0x3e	; 62
      000022 3E                     275 	.db #0x3e	; 62
      000023 1C                     276 	.db #0x1c	; 28
      000024 1C                     277 	.db #0x1c	; 28
      000025 0C                     278 	.db #0x0c	; 12
      000026 0C                     279 	.db #0x0c	; 12
      000027 C0                     280 	.db #0xc0	; 192
      000028 C0                     281 	.db #0xc0	; 192
      000029 F0                     282 	.db #0xf0	; 240
      00002A F0                     283 	.db #0xf0	; 240
      00002B FC                     284 	.db #0xfc	; 252
      00002C FC                     285 	.db #0xfc	; 252
      00002D FF                     286 	.db #0xff	; 255
      00002E FF                     287 	.db #0xff	; 255
      00002F FF                     288 	.db #0xff	; 255
      000030 FF                     289 	.db #0xff	; 255
      000031 FC                     290 	.db #0xfc	; 252
      000032 FC                     291 	.db #0xfc	; 252
      000033 F0                     292 	.db #0xf0	; 240
      000034 F0                     293 	.db #0xf0	; 240
      000035 C0                     294 	.db #0xc0	; 192
      000036 C0                     295 	.db #0xc0	; 192
      000037 0C                     296 	.db #0x0c	; 12
      000038 0C                     297 	.db #0x0c	; 12
      000039 1C                     298 	.db #0x1c	; 28
      00003A 1C                     299 	.db #0x1c	; 28
      00003B 3E                     300 	.db #0x3e	; 62
      00003C 3E                     301 	.db #0x3e	; 62
      00003D 7E                     302 	.db #0x7e	; 126
      00003E 7E                     303 	.db #0x7e	; 126
      00003F FF                     304 	.db #0xff	; 255
      000040 FF                     305 	.db #0xff	; 255
      000041 FF                     306 	.db #0xff	; 255
      000042 FF                     307 	.db #0xff	; 255
      000043 3F                     308 	.db #0x3f	; 63
      000044 3F                     309 	.db #0x3f	; 63
      000045 0F                     310 	.db #0x0f	; 15
      000046 0F                     311 	.db #0x0f	; 15
      000047 FF                     312 	.db #0xff	; 255
      000048 FF                     313 	.db #0xff	; 255
      000049 FF                     314 	.db #0xff	; 255
      00004A FF                     315 	.db #0xff	; 255
      00004B 7E                     316 	.db #0x7e	; 126
      00004C 7E                     317 	.db #0x7e	; 126
      00004D 7E                     318 	.db #0x7e	; 126
      00004E 7E                     319 	.db #0x7e	; 126
      00004F 3C                     320 	.db #0x3c	; 60
      000050 3C                     321 	.db #0x3c	; 60
      000051 3C                     322 	.db #0x3c	; 60
      000052 3C                     323 	.db #0x3c	; 60
      000053 18                     324 	.db #0x18	; 24
      000054 18                     325 	.db #0x18	; 24
      000055 18                     326 	.db #0x18	; 24
      000056 18                     327 	.db #0x18	; 24
      000057 30                     328 	.db #0x30	; 48	'0'
      000058 30                     329 	.db #0x30	; 48	'0'
      000059 38                     330 	.db #0x38	; 56	'8'
      00005A 38                     331 	.db #0x38	; 56	'8'
      00005B 7C                     332 	.db #0x7c	; 124
      00005C 7C                     333 	.db #0x7c	; 124
      00005D 7E                     334 	.db #0x7e	; 126
      00005E 7E                     335 	.db #0x7e	; 126
      00005F FF                     336 	.db #0xff	; 255
      000060 FF                     337 	.db #0xff	; 255
      000061 FF                     338 	.db #0xff	; 255
      000062 FF                     339 	.db #0xff	; 255
      000063 FC                     340 	.db #0xfc	; 252
      000064 FC                     341 	.db #0xfc	; 252
      000065 F0                     342 	.db #0xf0	; 240
      000066 F0                     343 	.db #0xf0	; 240
      000067 03                     344 	.db #0x03	; 3
      000068 03                     345 	.db #0x03	; 3
      000069 0F                     346 	.db #0x0f	; 15
      00006A 0F                     347 	.db #0x0f	; 15
      00006B 3F                     348 	.db #0x3f	; 63
      00006C 3F                     349 	.db #0x3f	; 63
      00006D FF                     350 	.db #0xff	; 255
      00006E FF                     351 	.db #0xff	; 255
      00006F FF                     352 	.db #0xff	; 255
      000070 FF                     353 	.db #0xff	; 255
      000071 3F                     354 	.db #0x3f	; 63
      000072 3F                     355 	.db #0x3f	; 63
      000073 0F                     356 	.db #0x0f	; 15
      000074 0F                     357 	.db #0x0f	; 15
      000075 03                     358 	.db #0x03	; 3
      000076 03                     359 	.db #0x03	; 3
      000077 F0                     360 	.db #0xf0	; 240
      000078 F0                     361 	.db #0xf0	; 240
      000079 FC                     362 	.db #0xfc	; 252
      00007A FC                     363 	.db #0xfc	; 252
      00007B FF                     364 	.db #0xff	; 255
      00007C FF                     365 	.db #0xff	; 255
      00007D FF                     366 	.db #0xff	; 255
      00007E FF                     367 	.db #0xff	; 255
      00007F 7E                     368 	.db #0x7e	; 126
      000080 7E                     369 	.db #0x7e	; 126
      000081 7C                     370 	.db #0x7c	; 124
      000082 7C                     371 	.db #0x7c	; 124
      000083 38                     372 	.db #0x38	; 56	'8'
      000084 38                     373 	.db #0x38	; 56	'8'
      000085 30                     374 	.db #0x30	; 48	'0'
      000086 30                     375 	.db #0x30	; 48	'0'
      000087                        376 _background1:
      000087 26                     377 	.db #0x26	; 38
      000088 26                     378 	.db #0x26	; 38
      000089 26                     379 	.db #0x26	; 38
      00008A 26                     380 	.db #0x26	; 38
      00008B 26                     381 	.db #0x26	; 38
      00008C 26                     382 	.db #0x26	; 38
      00008D 26                     383 	.db #0x26	; 38
      00008E 26                     384 	.db #0x26	; 38
      00008F 26                     385 	.db #0x26	; 38
      000090 26                     386 	.db #0x26	; 38
      000091 26                     387 	.db #0x26	; 38
      000092 2A                     388 	.db #0x2a	; 42
      000093 29                     389 	.db #0x29	; 41
      000094 26                     390 	.db #0x26	; 38
      000095 26                     391 	.db #0x26	; 38
      000096 26                     392 	.db #0x26	; 38
      000097 26                     393 	.db #0x26	; 38
      000098 26                     394 	.db #0x26	; 38
      000099 26                     395 	.db #0x26	; 38
      00009A 26                     396 	.db #0x26	; 38
      00009B 2C                     397 	.db #0x2c	; 44
      00009C 26                     398 	.db #0x26	; 38
      00009D 26                     399 	.db #0x26	; 38
      00009E 26                     400 	.db #0x26	; 38
      00009F 26                     401 	.db #0x26	; 38
      0000A0 26                     402 	.db #0x26	; 38
      0000A1 26                     403 	.db #0x26	; 38
      0000A2 26                     404 	.db #0x26	; 38
      0000A3 26                     405 	.db #0x26	; 38
      0000A4 26                     406 	.db #0x26	; 38
      0000A5 26                     407 	.db #0x26	; 38
      0000A6 26                     408 	.db #0x26	; 38
      0000A7 26                     409 	.db #0x26	; 38
      0000A8 2B                     410 	.db #0x2b	; 43
      0000A9 26                     411 	.db #0x26	; 38
      0000AA 26                     412 	.db #0x26	; 38
      0000AB 26                     413 	.db #0x26	; 38
      0000AC 26                     414 	.db #0x26	; 38
      0000AD 26                     415 	.db #0x26	; 38
      0000AE 26                     416 	.db #0x26	; 38
      0000AF 26                     417 	.db #0x26	; 38
      0000B0 26                     418 	.db #0x26	; 38
      0000B1 26                     419 	.db #0x26	; 38
      0000B2 26                     420 	.db #0x26	; 38
      0000B3 26                     421 	.db #0x26	; 38
      0000B4 26                     422 	.db #0x26	; 38
      0000B5 26                     423 	.db #0x26	; 38
      0000B6 26                     424 	.db #0x26	; 38
      0000B7 26                     425 	.db #0x26	; 38
      0000B8 26                     426 	.db #0x26	; 38
      0000B9 26                     427 	.db #0x26	; 38
      0000BA 26                     428 	.db #0x26	; 38
      0000BB 26                     429 	.db #0x26	; 38
      0000BC 26                     430 	.db #0x26	; 38
      0000BD 26                     431 	.db #0x26	; 38
      0000BE 26                     432 	.db #0x26	; 38
      0000BF 26                     433 	.db #0x26	; 38
      0000C0 26                     434 	.db #0x26	; 38
      0000C1 26                     435 	.db #0x26	; 38
      0000C2 26                     436 	.db #0x26	; 38
      0000C3 26                     437 	.db #0x26	; 38
      0000C4 26                     438 	.db #0x26	; 38
      0000C5 26                     439 	.db #0x26	; 38
      0000C6 26                     440 	.db #0x26	; 38
      0000C7 26                     441 	.db #0x26	; 38
      0000C8 26                     442 	.db #0x26	; 38
      0000C9 26                     443 	.db #0x26	; 38
      0000CA 26                     444 	.db #0x26	; 38
      0000CB 26                     445 	.db #0x26	; 38
      0000CC 26                     446 	.db #0x26	; 38
      0000CD 26                     447 	.db #0x26	; 38
      0000CE 26                     448 	.db #0x26	; 38
      0000CF 26                     449 	.db #0x26	; 38
      0000D0 26                     450 	.db #0x26	; 38
      0000D1 26                     451 	.db #0x26	; 38
      0000D2 26                     452 	.db #0x26	; 38
      0000D3 26                     453 	.db #0x26	; 38
      0000D4 26                     454 	.db #0x26	; 38
      0000D5 26                     455 	.db #0x26	; 38
      0000D6 26                     456 	.db #0x26	; 38
      0000D7 26                     457 	.db #0x26	; 38
      0000D8 26                     458 	.db #0x26	; 38
      0000D9 26                     459 	.db #0x26	; 38
      0000DA 26                     460 	.db #0x26	; 38
      0000DB 26                     461 	.db #0x26	; 38
      0000DC 26                     462 	.db #0x26	; 38
      0000DD 26                     463 	.db #0x26	; 38
      0000DE 26                     464 	.db #0x26	; 38
      0000DF 26                     465 	.db #0x26	; 38
      0000E0 26                     466 	.db #0x26	; 38
      0000E1 26                     467 	.db #0x26	; 38
      0000E2 26                     468 	.db #0x26	; 38
      0000E3 26                     469 	.db #0x26	; 38
      0000E4 26                     470 	.db #0x26	; 38
      0000E5 26                     471 	.db #0x26	; 38
      0000E6 26                     472 	.db #0x26	; 38
      0000E7 26                     473 	.db #0x26	; 38
      0000E8 26                     474 	.db #0x26	; 38
      0000E9 26                     475 	.db #0x26	; 38
      0000EA 26                     476 	.db #0x26	; 38
      0000EB 26                     477 	.db #0x26	; 38
      0000EC 26                     478 	.db #0x26	; 38
      0000ED 26                     479 	.db #0x26	; 38
      0000EE 26                     480 	.db #0x26	; 38
      0000EF 26                     481 	.db #0x26	; 38
      0000F0 26                     482 	.db #0x26	; 38
      0000F1 26                     483 	.db #0x26	; 38
      0000F2 26                     484 	.db #0x26	; 38
      0000F3 26                     485 	.db #0x26	; 38
      0000F4 26                     486 	.db #0x26	; 38
      0000F5 26                     487 	.db #0x26	; 38
      0000F6 26                     488 	.db #0x26	; 38
      0000F7 26                     489 	.db #0x26	; 38
      0000F8 2B                     490 	.db #0x2b	; 43
      0000F9 26                     491 	.db #0x26	; 38
      0000FA 26                     492 	.db #0x26	; 38
      0000FB 26                     493 	.db #0x26	; 38
      0000FC 26                     494 	.db #0x26	; 38
      0000FD 26                     495 	.db #0x26	; 38
      0000FE 26                     496 	.db #0x26	; 38
      0000FF 2B                     497 	.db #0x2b	; 43
      000100 26                     498 	.db #0x26	; 38
      000101 26                     499 	.db #0x26	; 38
      000102 26                     500 	.db #0x26	; 38
      000103 26                     501 	.db #0x26	; 38
      000104 26                     502 	.db #0x26	; 38
      000105 26                     503 	.db #0x26	; 38
      000106 26                     504 	.db #0x26	; 38
      000107 26                     505 	.db #0x26	; 38
      000108 26                     506 	.db #0x26	; 38
      000109 26                     507 	.db #0x26	; 38
      00010A 26                     508 	.db #0x26	; 38
      00010B 26                     509 	.db #0x26	; 38
      00010C 2B                     510 	.db #0x2b	; 43
      00010D 26                     511 	.db #0x26	; 38
      00010E 26                     512 	.db #0x26	; 38
      00010F 26                     513 	.db #0x26	; 38
      000110 26                     514 	.db #0x26	; 38
      000111 26                     515 	.db #0x26	; 38
      000112 26                     516 	.db #0x26	; 38
      000113 26                     517 	.db #0x26	; 38
      000114 2C                     518 	.db #0x2c	; 44
      000115 26                     519 	.db #0x26	; 38
      000116 26                     520 	.db #0x26	; 38
      000117 26                     521 	.db #0x26	; 38
      000118 26                     522 	.db #0x26	; 38
      000119 26                     523 	.db #0x26	; 38
      00011A 26                     524 	.db #0x26	; 38
      00011B 26                     525 	.db #0x26	; 38
      00011C 26                     526 	.db #0x26	; 38
      00011D 26                     527 	.db #0x26	; 38
      00011E 26                     528 	.db #0x26	; 38
      00011F 26                     529 	.db #0x26	; 38
      000120 26                     530 	.db #0x26	; 38
      000121 26                     531 	.db #0x26	; 38
      000122 26                     532 	.db #0x26	; 38
      000123 26                     533 	.db #0x26	; 38
      000124 26                     534 	.db #0x26	; 38
      000125 26                     535 	.db #0x26	; 38
      000126 26                     536 	.db #0x26	; 38
      000127 26                     537 	.db #0x26	; 38
      000128 26                     538 	.db #0x26	; 38
      000129 2C                     539 	.db #0x2c	; 44
      00012A 26                     540 	.db #0x26	; 38
      00012B 26                     541 	.db #0x26	; 38
      00012C 26                     542 	.db #0x26	; 38
      00012D 26                     543 	.db #0x26	; 38
      00012E 25                     544 	.db #0x25	; 37
      00012F 26                     545 	.db #0x26	; 38
      000130 26                     546 	.db #0x26	; 38
      000131 26                     547 	.db #0x26	; 38
      000132 26                     548 	.db #0x26	; 38
      000133 26                     549 	.db #0x26	; 38
      000134 26                     550 	.db #0x26	; 38
      000135 26                     551 	.db #0x26	; 38
      000136 26                     552 	.db #0x26	; 38
      000137 26                     553 	.db #0x26	; 38
      000138 26                     554 	.db #0x26	; 38
      000139 26                     555 	.db #0x26	; 38
      00013A 26                     556 	.db #0x26	; 38
      00013B 26                     557 	.db #0x26	; 38
      00013C 2C                     558 	.db #0x2c	; 44
      00013D 26                     559 	.db #0x26	; 38
      00013E 26                     560 	.db #0x26	; 38
      00013F 26                     561 	.db #0x26	; 38
      000140 26                     562 	.db #0x26	; 38
      000141 26                     563 	.db #0x26	; 38
      000142 26                     564 	.db #0x26	; 38
      000143 26                     565 	.db #0x26	; 38
      000144 2B                     566 	.db #0x2b	; 43
      000145 26                     567 	.db #0x26	; 38
      000146 26                     568 	.db #0x26	; 38
      000147 26                     569 	.db #0x26	; 38
      000148 26                     570 	.db #0x26	; 38
      000149 26                     571 	.db #0x26	; 38
      00014A 26                     572 	.db #0x26	; 38
      00014B 26                     573 	.db #0x26	; 38
      00014C 26                     574 	.db #0x26	; 38
      00014D 26                     575 	.db #0x26	; 38
      00014E 26                     576 	.db #0x26	; 38
      00014F 26                     577 	.db #0x26	; 38
      000150 26                     578 	.db #0x26	; 38
      000151 26                     579 	.db #0x26	; 38
      000152 26                     580 	.db #0x26	; 38
      000153 26                     581 	.db #0x26	; 38
      000154 26                     582 	.db #0x26	; 38
      000155 26                     583 	.db #0x26	; 38
      000156 26                     584 	.db #0x26	; 38
      000157 26                     585 	.db #0x26	; 38
      000158 26                     586 	.db #0x26	; 38
      000159 26                     587 	.db #0x26	; 38
      00015A 26                     588 	.db #0x26	; 38
      00015B 26                     589 	.db #0x26	; 38
      00015C 26                     590 	.db #0x26	; 38
      00015D 26                     591 	.db #0x26	; 38
      00015E 26                     592 	.db #0x26	; 38
      00015F 26                     593 	.db #0x26	; 38
      000160 2C                     594 	.db #0x2c	; 44
      000161 26                     595 	.db #0x26	; 38
      000162 26                     596 	.db #0x26	; 38
      000163 26                     597 	.db #0x26	; 38
      000164 26                     598 	.db #0x26	; 38
      000165 26                     599 	.db #0x26	; 38
      000166 26                     600 	.db #0x26	; 38
      000167 26                     601 	.db #0x26	; 38
      000168 26                     602 	.db #0x26	; 38
      000169 26                     603 	.db #0x26	; 38
      00016A 26                     604 	.db #0x26	; 38
      00016B 26                     605 	.db #0x26	; 38
      00016C 26                     606 	.db #0x26	; 38
      00016D 26                     607 	.db #0x26	; 38
      00016E 26                     608 	.db #0x26	; 38
      00016F 26                     609 	.db #0x26	; 38
      000170 26                     610 	.db #0x26	; 38
      000171 26                     611 	.db #0x26	; 38
      000172 26                     612 	.db #0x26	; 38
      000173 26                     613 	.db #0x26	; 38
      000174 26                     614 	.db #0x26	; 38
      000175 26                     615 	.db #0x26	; 38
      000176 26                     616 	.db #0x26	; 38
      000177 26                     617 	.db #0x26	; 38
      000178 26                     618 	.db #0x26	; 38
      000179 26                     619 	.db #0x26	; 38
      00017A 26                     620 	.db #0x26	; 38
      00017B 26                     621 	.db #0x26	; 38
      00017C 26                     622 	.db #0x26	; 38
      00017D 26                     623 	.db #0x26	; 38
      00017E 26                     624 	.db #0x26	; 38
      00017F 26                     625 	.db #0x26	; 38
      000180 26                     626 	.db #0x26	; 38
      000181 26                     627 	.db #0x26	; 38
      000182 26                     628 	.db #0x26	; 38
      000183 26                     629 	.db #0x26	; 38
      000184 26                     630 	.db #0x26	; 38
      000185 26                     631 	.db #0x26	; 38
      000186 26                     632 	.db #0x26	; 38
      000187 26                     633 	.db #0x26	; 38
      000188 26                     634 	.db #0x26	; 38
      000189 26                     635 	.db #0x26	; 38
      00018A 26                     636 	.db #0x26	; 38
      00018B 26                     637 	.db #0x26	; 38
      00018C 26                     638 	.db #0x26	; 38
      00018D 26                     639 	.db #0x26	; 38
      00018E 26                     640 	.db #0x26	; 38
      00018F 26                     641 	.db #0x26	; 38
      000190 26                     642 	.db #0x26	; 38
      000191 26                     643 	.db #0x26	; 38
      000192 26                     644 	.db #0x26	; 38
      000193 26                     645 	.db #0x26	; 38
      000194 26                     646 	.db #0x26	; 38
      000195 2B                     647 	.db #0x2b	; 43
      000196 26                     648 	.db #0x26	; 38
      000197 26                     649 	.db #0x26	; 38
      000198 26                     650 	.db #0x26	; 38
      000199 26                     651 	.db #0x26	; 38
      00019A 26                     652 	.db #0x26	; 38
      00019B 26                     653 	.db #0x26	; 38
      00019C 26                     654 	.db #0x26	; 38
      00019D 26                     655 	.db #0x26	; 38
      00019E 26                     656 	.db #0x26	; 38
      00019F 26                     657 	.db #0x26	; 38
      0001A0 26                     658 	.db #0x26	; 38
      0001A1 26                     659 	.db #0x26	; 38
      0001A2 26                     660 	.db #0x26	; 38
      0001A3 26                     661 	.db #0x26	; 38
      0001A4 26                     662 	.db #0x26	; 38
      0001A5 26                     663 	.db #0x26	; 38
      0001A6 25                     664 	.db #0x25	; 37
      0001A7 26                     665 	.db #0x26	; 38
      0001A8 26                     666 	.db #0x26	; 38
      0001A9 26                     667 	.db #0x26	; 38
      0001AA 2B                     668 	.db #0x2b	; 43
      0001AB 26                     669 	.db #0x26	; 38
      0001AC 26                     670 	.db #0x26	; 38
      0001AD 26                     671 	.db #0x26	; 38
      0001AE 26                     672 	.db #0x26	; 38
      0001AF 26                     673 	.db #0x26	; 38
      0001B0 26                     674 	.db #0x26	; 38
      0001B1 26                     675 	.db #0x26	; 38
      0001B2 26                     676 	.db #0x26	; 38
      0001B3 26                     677 	.db #0x26	; 38
      0001B4 26                     678 	.db #0x26	; 38
      0001B5 26                     679 	.db #0x26	; 38
      0001B6 26                     680 	.db #0x26	; 38
      0001B7 26                     681 	.db #0x26	; 38
      0001B8 26                     682 	.db #0x26	; 38
      0001B9 26                     683 	.db #0x26	; 38
      0001BA 26                     684 	.db #0x26	; 38
      0001BB 26                     685 	.db #0x26	; 38
      0001BC 26                     686 	.db #0x26	; 38
      0001BD 26                     687 	.db #0x26	; 38
      0001BE 26                     688 	.db #0x26	; 38
      0001BF 26                     689 	.db #0x26	; 38
      0001C0 26                     690 	.db #0x26	; 38
      0001C1 26                     691 	.db #0x26	; 38
      0001C2 26                     692 	.db #0x26	; 38
      0001C3 26                     693 	.db #0x26	; 38
      0001C4 2B                     694 	.db #0x2b	; 43
      0001C5 26                     695 	.db #0x26	; 38
      0001C6 26                     696 	.db #0x26	; 38
      0001C7 26                     697 	.db #0x26	; 38
      0001C8 26                     698 	.db #0x26	; 38
      0001C9 26                     699 	.db #0x26	; 38
      0001CA 26                     700 	.db #0x26	; 38
      0001CB 26                     701 	.db #0x26	; 38
      0001CC 26                     702 	.db #0x26	; 38
      0001CD 26                     703 	.db #0x26	; 38
      0001CE 26                     704 	.db #0x26	; 38
      0001CF 26                     705 	.db #0x26	; 38
      0001D0 26                     706 	.db #0x26	; 38
      0001D1 26                     707 	.db #0x26	; 38
      0001D2 26                     708 	.db #0x26	; 38
      0001D3 26                     709 	.db #0x26	; 38
      0001D4 26                     710 	.db #0x26	; 38
      0001D5 26                     711 	.db #0x26	; 38
      0001D6 26                     712 	.db #0x26	; 38
      0001D7 26                     713 	.db #0x26	; 38
      0001D8 26                     714 	.db #0x26	; 38
      0001D9 26                     715 	.db #0x26	; 38
      0001DA 27                     716 	.db #0x27	; 39
      0001DB 28                     717 	.db #0x28	; 40
      0001DC 26                     718 	.db #0x26	; 38
      0001DD 26                     719 	.db #0x26	; 38
      0001DE 26                     720 	.db #0x26	; 38
      0001DF 26                     721 	.db #0x26	; 38
      0001E0 26                     722 	.db #0x26	; 38
      0001E1 26                     723 	.db #0x26	; 38
      0001E2 26                     724 	.db #0x26	; 38
      0001E3 26                     725 	.db #0x26	; 38
      0001E4 26                     726 	.db #0x26	; 38
      0001E5 26                     727 	.db #0x26	; 38
      0001E6 26                     728 	.db #0x26	; 38
      0001E7 26                     729 	.db #0x26	; 38
      0001E8 26                     730 	.db #0x26	; 38
      0001E9 26                     731 	.db #0x26	; 38
      0001EA 26                     732 	.db #0x26	; 38
      0001EB 26                     733 	.db #0x26	; 38
      0001EC 26                     734 	.db #0x26	; 38
      0001ED 26                     735 	.db #0x26	; 38
      0001EE 26                     736 	.db #0x26	; 38
      0001EF 26                     737 	.db #0x26	; 38
      0001F0 26                     738 	.db #0x26	; 38
      0001F1 26                     739 	.db #0x26	; 38
      0001F2 26                     740 	.db #0x26	; 38
      0001F3 26                     741 	.db #0x26	; 38
      0001F4 26                     742 	.db #0x26	; 38
      0001F5 26                     743 	.db #0x26	; 38
      0001F6 26                     744 	.db #0x26	; 38
      0001F7 26                     745 	.db #0x26	; 38
      0001F8 26                     746 	.db #0x26	; 38
      0001F9 26                     747 	.db #0x26	; 38
      0001FA 2A                     748 	.db #0x2a	; 42
      0001FB 29                     749 	.db #0x29	; 41
      0001FC 26                     750 	.db #0x26	; 38
      0001FD 26                     751 	.db #0x26	; 38
      0001FE 26                     752 	.db #0x26	; 38
      0001FF 26                     753 	.db #0x26	; 38
      000200 26                     754 	.db #0x26	; 38
      000201 26                     755 	.db #0x26	; 38
      000202 26                     756 	.db #0x26	; 38
      000203 26                     757 	.db #0x26	; 38
      000204 26                     758 	.db #0x26	; 38
      000205 26                     759 	.db #0x26	; 38
      000206 26                     760 	.db #0x26	; 38
      000207 26                     761 	.db #0x26	; 38
      000208 26                     762 	.db #0x26	; 38
      000209 26                     763 	.db #0x26	; 38
      00020A 26                     764 	.db #0x26	; 38
      00020B 26                     765 	.db #0x26	; 38
      00020C 26                     766 	.db #0x26	; 38
      00020D 26                     767 	.db #0x26	; 38
      00020E 27                     768 	.db #0x27	; 39
      00020F 28                     769 	.db #0x28	; 40
      000210 26                     770 	.db #0x26	; 38
      000211 26                     771 	.db #0x26	; 38
      000212 26                     772 	.db #0x26	; 38
      000213 26                     773 	.db #0x26	; 38
      000214 26                     774 	.db #0x26	; 38
      000215 26                     775 	.db #0x26	; 38
      000216 26                     776 	.db #0x26	; 38
      000217 26                     777 	.db #0x26	; 38
      000218 26                     778 	.db #0x26	; 38
      000219 26                     779 	.db #0x26	; 38
      00021A 26                     780 	.db #0x26	; 38
      00021B 26                     781 	.db #0x26	; 38
      00021C 26                     782 	.db #0x26	; 38
      00021D 26                     783 	.db #0x26	; 38
      00021E 26                     784 	.db #0x26	; 38
      00021F 2C                     785 	.db #0x2c	; 44
      000220 26                     786 	.db #0x26	; 38
      000221 26                     787 	.db #0x26	; 38
      000222 26                     788 	.db #0x26	; 38
      000223 26                     789 	.db #0x26	; 38
      000224 26                     790 	.db #0x26	; 38
      000225 26                     791 	.db #0x26	; 38
      000226 26                     792 	.db #0x26	; 38
      000227 26                     793 	.db #0x26	; 38
      000228 26                     794 	.db #0x26	; 38
      000229 26                     795 	.db #0x26	; 38
      00022A 26                     796 	.db #0x26	; 38
      00022B 26                     797 	.db #0x26	; 38
      00022C 26                     798 	.db #0x26	; 38
      00022D 26                     799 	.db #0x26	; 38
      00022E 2A                     800 	.db #0x2a	; 42
      00022F 29                     801 	.db #0x29	; 41
      000230 26                     802 	.db #0x26	; 38
      000231 26                     803 	.db #0x26	; 38
      000232 26                     804 	.db #0x26	; 38
      000233 26                     805 	.db #0x26	; 38
      000234 26                     806 	.db #0x26	; 38
      000235 26                     807 	.db #0x26	; 38
      000236 26                     808 	.db #0x26	; 38
      000237 26                     809 	.db #0x26	; 38
      000238 26                     810 	.db #0x26	; 38
      000239 26                     811 	.db #0x26	; 38
      00023A 26                     812 	.db #0x26	; 38
      00023B 26                     813 	.db #0x26	; 38
      00023C 26                     814 	.db #0x26	; 38
      00023D 25                     815 	.db #0x25	; 37
      00023E 26                     816 	.db #0x26	; 38
      00023F 26                     817 	.db #0x26	; 38
      000240 26                     818 	.db #0x26	; 38
      000241 26                     819 	.db #0x26	; 38
      000242 26                     820 	.db #0x26	; 38
      000243 26                     821 	.db #0x26	; 38
      000244 2C                     822 	.db #0x2c	; 44
      000245 26                     823 	.db #0x26	; 38
      000246 26                     824 	.db #0x26	; 38
      000247 26                     825 	.db #0x26	; 38
      000248 26                     826 	.db #0x26	; 38
      000249 26                     827 	.db #0x26	; 38
      00024A 26                     828 	.db #0x26	; 38
      00024B 26                     829 	.db #0x26	; 38
      00024C 26                     830 	.db #0x26	; 38
      00024D 26                     831 	.db #0x26	; 38
      00024E 26                     832 	.db #0x26	; 38
      00024F 26                     833 	.db #0x26	; 38
      000250 26                     834 	.db #0x26	; 38
      000251 26                     835 	.db #0x26	; 38
      000252 26                     836 	.db #0x26	; 38
      000253 26                     837 	.db #0x26	; 38
      000254 26                     838 	.db #0x26	; 38
      000255 26                     839 	.db #0x26	; 38
      000256 26                     840 	.db #0x26	; 38
      000257 26                     841 	.db #0x26	; 38
      000258 26                     842 	.db #0x26	; 38
      000259 26                     843 	.db #0x26	; 38
      00025A 26                     844 	.db #0x26	; 38
      00025B 26                     845 	.db #0x26	; 38
      00025C 26                     846 	.db #0x26	; 38
      00025D 26                     847 	.db #0x26	; 38
      00025E 26                     848 	.db #0x26	; 38
      00025F 26                     849 	.db #0x26	; 38
      000260 26                     850 	.db #0x26	; 38
      000261 26                     851 	.db #0x26	; 38
      000262 26                     852 	.db #0x26	; 38
      000263 26                     853 	.db #0x26	; 38
      000264 26                     854 	.db #0x26	; 38
      000265 26                     855 	.db #0x26	; 38
      000266 26                     856 	.db #0x26	; 38
      000267 26                     857 	.db #0x26	; 38
      000268 26                     858 	.db #0x26	; 38
      000269 26                     859 	.db #0x26	; 38
      00026A 2C                     860 	.db #0x2c	; 44
      00026B 26                     861 	.db #0x26	; 38
      00026C 26                     862 	.db #0x26	; 38
      00026D 26                     863 	.db #0x26	; 38
      00026E 26                     864 	.db #0x26	; 38
      00026F 26                     865 	.db #0x26	; 38
      000270 26                     866 	.db #0x26	; 38
      000271 26                     867 	.db #0x26	; 38
      000272 26                     868 	.db #0x26	; 38
      000273 26                     869 	.db #0x26	; 38
      000274 26                     870 	.db #0x26	; 38
      000275 26                     871 	.db #0x26	; 38
      000276 26                     872 	.db #0x26	; 38
      000277 26                     873 	.db #0x26	; 38
      000278 26                     874 	.db #0x26	; 38
      000279 2C                     875 	.db #0x2c	; 44
      00027A 26                     876 	.db #0x26	; 38
      00027B 26                     877 	.db #0x26	; 38
      00027C 26                     878 	.db #0x26	; 38
      00027D 26                     879 	.db #0x26	; 38
      00027E 26                     880 	.db #0x26	; 38
      00027F 26                     881 	.db #0x26	; 38
      000280 26                     882 	.db #0x26	; 38
      000281 26                     883 	.db #0x26	; 38
      000282 26                     884 	.db #0x26	; 38
      000283 26                     885 	.db #0x26	; 38
      000284 26                     886 	.db #0x26	; 38
      000285 26                     887 	.db #0x26	; 38
      000286 26                     888 	.db #0x26	; 38
      000287 26                     889 	.db #0x26	; 38
      000288 26                     890 	.db #0x26	; 38
      000289 26                     891 	.db #0x26	; 38
      00028A 26                     892 	.db #0x26	; 38
      00028B 26                     893 	.db #0x26	; 38
      00028C 26                     894 	.db #0x26	; 38
      00028D 26                     895 	.db #0x26	; 38
      00028E 26                     896 	.db #0x26	; 38
      00028F 26                     897 	.db #0x26	; 38
      000290 26                     898 	.db #0x26	; 38
      000291 26                     899 	.db #0x26	; 38
      000292 26                     900 	.db #0x26	; 38
      000293 26                     901 	.db #0x26	; 38
      000294 26                     902 	.db #0x26	; 38
      000295 2B                     903 	.db #0x2b	; 43
      000296 26                     904 	.db #0x26	; 38
      000297 26                     905 	.db #0x26	; 38
      000298 26                     906 	.db #0x26	; 38
      000299 26                     907 	.db #0x26	; 38
      00029A 26                     908 	.db #0x26	; 38
      00029B 26                     909 	.db #0x26	; 38
      00029C 26                     910 	.db #0x26	; 38
      00029D 26                     911 	.db #0x26	; 38
      00029E 26                     912 	.db #0x26	; 38
      00029F 26                     913 	.db #0x26	; 38
      0002A0 26                     914 	.db #0x26	; 38
      0002A1 26                     915 	.db #0x26	; 38
      0002A2 26                     916 	.db #0x26	; 38
      0002A3 26                     917 	.db #0x26	; 38
      0002A4 26                     918 	.db #0x26	; 38
      0002A5 26                     919 	.db #0x26	; 38
      0002A6 26                     920 	.db #0x26	; 38
      0002A7 28                     921 	.db #0x28	; 40
      0002A8 26                     922 	.db #0x26	; 38
      0002A9 26                     923 	.db #0x26	; 38
      0002AA 26                     924 	.db #0x26	; 38
      0002AB 26                     925 	.db #0x26	; 38
      0002AC 26                     926 	.db #0x26	; 38
      0002AD 26                     927 	.db #0x26	; 38
      0002AE 26                     928 	.db #0x26	; 38
      0002AF 26                     929 	.db #0x26	; 38
      0002B0 26                     930 	.db #0x26	; 38
      0002B1 26                     931 	.db #0x26	; 38
      0002B2 26                     932 	.db #0x26	; 38
      0002B3 26                     933 	.db #0x26	; 38
      0002B4 26                     934 	.db #0x26	; 38
      0002B5 26                     935 	.db #0x26	; 38
      0002B6 26                     936 	.db #0x26	; 38
      0002B7 26                     937 	.db #0x26	; 38
      0002B8 26                     938 	.db #0x26	; 38
      0002B9 26                     939 	.db #0x26	; 38
      0002BA 26                     940 	.db #0x26	; 38
      0002BB 26                     941 	.db #0x26	; 38
      0002BC 26                     942 	.db #0x26	; 38
      0002BD 26                     943 	.db #0x26	; 38
      0002BE 26                     944 	.db #0x26	; 38
      0002BF 26                     945 	.db #0x26	; 38
      0002C0 2B                     946 	.db #0x2b	; 43
      0002C1 26                     947 	.db #0x26	; 38
      0002C2 26                     948 	.db #0x26	; 38
      0002C3 26                     949 	.db #0x26	; 38
      0002C4 26                     950 	.db #0x26	; 38
      0002C5 26                     951 	.db #0x26	; 38
      0002C6 27                     952 	.db #0x27	; 39
      0002C7 29                     953 	.db #0x29	; 41
      0002C8 26                     954 	.db #0x26	; 38
      0002C9 26                     955 	.db #0x26	; 38
      0002CA 26                     956 	.db #0x26	; 38
      0002CB 26                     957 	.db #0x26	; 38
      0002CC 26                     958 	.db #0x26	; 38
      0002CD 26                     959 	.db #0x26	; 38
      0002CE 2B                     960 	.db #0x2b	; 43
      0002CF 26                     961 	.db #0x26	; 38
      0002D0 26                     962 	.db #0x26	; 38
      0002D1 26                     963 	.db #0x26	; 38
      0002D2 26                     964 	.db #0x26	; 38
      0002D3 26                     965 	.db #0x26	; 38
      0002D4 26                     966 	.db #0x26	; 38
      0002D5 26                     967 	.db #0x26	; 38
      0002D6 26                     968 	.db #0x26	; 38
      0002D7 26                     969 	.db #0x26	; 38
      0002D8 26                     970 	.db #0x26	; 38
      0002D9 26                     971 	.db #0x26	; 38
      0002DA 26                     972 	.db #0x26	; 38
      0002DB 26                     973 	.db #0x26	; 38
      0002DC 26                     974 	.db #0x26	; 38
      0002DD 26                     975 	.db #0x26	; 38
      0002DE 26                     976 	.db #0x26	; 38
      0002DF 26                     977 	.db #0x26	; 38
      0002E0 26                     978 	.db #0x26	; 38
      0002E1 26                     979 	.db #0x26	; 38
      0002E2 26                     980 	.db #0x26	; 38
      0002E3 26                     981 	.db #0x26	; 38
      0002E4 26                     982 	.db #0x26	; 38
      0002E5 26                     983 	.db #0x26	; 38
      0002E6 2A                     984 	.db #0x2a	; 42
      0002E7 26                     985 	.db #0x26	; 38
      0002E8 26                     986 	.db #0x26	; 38
      0002E9 26                     987 	.db #0x26	; 38
      0002EA 26                     988 	.db #0x26	; 38
      0002EB 26                     989 	.db #0x26	; 38
      0002EC 26                     990 	.db #0x26	; 38
      0002ED 26                     991 	.db #0x26	; 38
      0002EE 26                     992 	.db #0x26	; 38
      0002EF 26                     993 	.db #0x26	; 38
      0002F0 26                     994 	.db #0x26	; 38
      0002F1 26                     995 	.db #0x26	; 38
      0002F2 2C                     996 	.db #0x2c	; 44
      0002F3 26                     997 	.db #0x26	; 38
      0002F4 26                     998 	.db #0x26	; 38
      0002F5 26                     999 	.db #0x26	; 38
      0002F6 26                    1000 	.db #0x26	; 38
      0002F7 26                    1001 	.db #0x26	; 38
      0002F8 26                    1002 	.db #0x26	; 38
      0002F9 26                    1003 	.db #0x26	; 38
      0002FA 26                    1004 	.db #0x26	; 38
      0002FB 26                    1005 	.db #0x26	; 38
      0002FC 26                    1006 	.db #0x26	; 38
      0002FD 26                    1007 	.db #0x26	; 38
      0002FE 26                    1008 	.db #0x26	; 38
      0002FF 26                    1009 	.db #0x26	; 38
      000300 26                    1010 	.db #0x26	; 38
      000301 26                    1011 	.db #0x26	; 38
      000302 26                    1012 	.db #0x26	; 38
      000303 26                    1013 	.db #0x26	; 38
      000304 26                    1014 	.db #0x26	; 38
      000305 26                    1015 	.db #0x26	; 38
      000306 26                    1016 	.db #0x26	; 38
      000307 26                    1017 	.db #0x26	; 38
      000308 26                    1018 	.db #0x26	; 38
      000309 26                    1019 	.db #0x26	; 38
      00030A 26                    1020 	.db #0x26	; 38
      00030B 26                    1021 	.db #0x26	; 38
      00030C 26                    1022 	.db #0x26	; 38
      00030D 26                    1023 	.db #0x26	; 38
      00030E 26                    1024 	.db #0x26	; 38
      00030F 26                    1025 	.db #0x26	; 38
      000310 26                    1026 	.db #0x26	; 38
      000311 26                    1027 	.db #0x26	; 38
      000312 26                    1028 	.db #0x26	; 38
      000313 26                    1029 	.db #0x26	; 38
      000314 26                    1030 	.db #0x26	; 38
      000315 26                    1031 	.db #0x26	; 38
      000316 26                    1032 	.db #0x26	; 38
      000317 2B                    1033 	.db #0x2b	; 43
      000318 26                    1034 	.db #0x26	; 38
      000319 26                    1035 	.db #0x26	; 38
      00031A 26                    1036 	.db #0x26	; 38
      00031B 26                    1037 	.db #0x26	; 38
      00031C 26                    1038 	.db #0x26	; 38
      00031D 26                    1039 	.db #0x26	; 38
      00031E 26                    1040 	.db #0x26	; 38
      00031F 26                    1041 	.db #0x26	; 38
      000320 26                    1042 	.db #0x26	; 38
      000321 26                    1043 	.db #0x26	; 38
      000322 26                    1044 	.db #0x26	; 38
      000323 26                    1045 	.db #0x26	; 38
      000324 26                    1046 	.db #0x26	; 38
      000325 26                    1047 	.db #0x26	; 38
      000326 26                    1048 	.db #0x26	; 38
      000327 26                    1049 	.db #0x26	; 38
      000328 26                    1050 	.db #0x26	; 38
      000329 26                    1051 	.db #0x26	; 38
      00032A 26                    1052 	.db #0x26	; 38
      00032B 26                    1053 	.db #0x26	; 38
      00032C 26                    1054 	.db #0x26	; 38
      00032D 26                    1055 	.db #0x26	; 38
      00032E 26                    1056 	.db #0x26	; 38
      00032F 26                    1057 	.db #0x26	; 38
      000330 26                    1058 	.db #0x26	; 38
      000331 26                    1059 	.db #0x26	; 38
      000332 26                    1060 	.db #0x26	; 38
      000333 26                    1061 	.db #0x26	; 38
      000334 26                    1062 	.db #0x26	; 38
      000335 26                    1063 	.db #0x26	; 38
      000336 26                    1064 	.db #0x26	; 38
      000337 26                    1065 	.db #0x26	; 38
      000338 26                    1066 	.db #0x26	; 38
      000339 26                    1067 	.db #0x26	; 38
      00033A 26                    1068 	.db #0x26	; 38
      00033B 26                    1069 	.db #0x26	; 38
      00033C 26                    1070 	.db #0x26	; 38
      00033D 26                    1071 	.db #0x26	; 38
      00033E 2B                    1072 	.db #0x2b	; 43
      00033F 26                    1073 	.db #0x26	; 38
      000340 26                    1074 	.db #0x26	; 38
      000341 26                    1075 	.db #0x26	; 38
      000342 26                    1076 	.db #0x26	; 38
      000343 26                    1077 	.db #0x26	; 38
      000344 26                    1078 	.db #0x26	; 38
      000345 26                    1079 	.db #0x26	; 38
      000346 26                    1080 	.db #0x26	; 38
      000347 26                    1081 	.db #0x26	; 38
      000348 26                    1082 	.db #0x26	; 38
      000349 26                    1083 	.db #0x26	; 38
      00034A 2B                    1084 	.db #0x2b	; 43
      00034B 26                    1085 	.db #0x26	; 38
      00034C 26                    1086 	.db #0x26	; 38
      00034D 26                    1087 	.db #0x26	; 38
      00034E 26                    1088 	.db #0x26	; 38
      00034F 26                    1089 	.db #0x26	; 38
      000350 26                    1090 	.db #0x26	; 38
      000351 26                    1091 	.db #0x26	; 38
      000352 26                    1092 	.db #0x26	; 38
      000353 26                    1093 	.db #0x26	; 38
      000354 26                    1094 	.db #0x26	; 38
      000355 26                    1095 	.db #0x26	; 38
      000356 26                    1096 	.db #0x26	; 38
      000357 26                    1097 	.db #0x26	; 38
      000358 26                    1098 	.db #0x26	; 38
      000359 26                    1099 	.db #0x26	; 38
      00035A 26                    1100 	.db #0x26	; 38
      00035B 26                    1101 	.db #0x26	; 38
      00035C 26                    1102 	.db #0x26	; 38
      00035D 26                    1103 	.db #0x26	; 38
      00035E 26                    1104 	.db #0x26	; 38
      00035F 26                    1105 	.db #0x26	; 38
      000360 26                    1106 	.db #0x26	; 38
      000361 26                    1107 	.db #0x26	; 38
      000362 26                    1108 	.db #0x26	; 38
      000363 26                    1109 	.db #0x26	; 38
      000364 26                    1110 	.db #0x26	; 38
      000365 26                    1111 	.db #0x26	; 38
      000366 2C                    1112 	.db #0x2c	; 44
      000367 26                    1113 	.db #0x26	; 38
      000368 26                    1114 	.db #0x26	; 38
      000369 26                    1115 	.db #0x26	; 38
      00036A 26                    1116 	.db #0x26	; 38
      00036B 26                    1117 	.db #0x26	; 38
      00036C 26                    1118 	.db #0x26	; 38
      00036D 26                    1119 	.db #0x26	; 38
      00036E 26                    1120 	.db #0x26	; 38
      00036F 26                    1121 	.db #0x26	; 38
      000370 2B                    1122 	.db #0x2b	; 43
      000371 26                    1123 	.db #0x26	; 38
      000372 26                    1124 	.db #0x26	; 38
      000373 26                    1125 	.db #0x26	; 38
      000374 26                    1126 	.db #0x26	; 38
      000375 26                    1127 	.db #0x26	; 38
      000376 26                    1128 	.db #0x26	; 38
      000377 26                    1129 	.db #0x26	; 38
      000378 26                    1130 	.db #0x26	; 38
      000379 26                    1131 	.db #0x26	; 38
      00037A 26                    1132 	.db #0x26	; 38
      00037B 26                    1133 	.db #0x26	; 38
      00037C 26                    1134 	.db #0x26	; 38
      00037D 26                    1135 	.db #0x26	; 38
      00037E 26                    1136 	.db #0x26	; 38
      00037F 26                    1137 	.db #0x26	; 38
      000380 26                    1138 	.db #0x26	; 38
      000381 26                    1139 	.db #0x26	; 38
      000382 26                    1140 	.db #0x26	; 38
      000383 26                    1141 	.db #0x26	; 38
      000384 26                    1142 	.db #0x26	; 38
      000385 26                    1143 	.db #0x26	; 38
      000386 26                    1144 	.db #0x26	; 38
      000387 26                    1145 	.db #0x26	; 38
      000388 26                    1146 	.db #0x26	; 38
      000389 26                    1147 	.db #0x26	; 38
      00038A 26                    1148 	.db #0x26	; 38
      00038B 26                    1149 	.db #0x26	; 38
      00038C 26                    1150 	.db #0x26	; 38
      00038D 26                    1151 	.db #0x26	; 38
      00038E 26                    1152 	.db #0x26	; 38
      00038F 26                    1153 	.db #0x26	; 38
      000390 26                    1154 	.db #0x26	; 38
      000391 26                    1155 	.db #0x26	; 38
      000392 26                    1156 	.db #0x26	; 38
      000393 26                    1157 	.db #0x26	; 38
      000394 26                    1158 	.db #0x26	; 38
      000395 26                    1159 	.db #0x26	; 38
      000396 26                    1160 	.db #0x26	; 38
      000397 26                    1161 	.db #0x26	; 38
      000398 27                    1162 	.db #0x27	; 39
      000399 28                    1163 	.db #0x28	; 40
      00039A 26                    1164 	.db #0x26	; 38
      00039B 26                    1165 	.db #0x26	; 38
      00039C 26                    1166 	.db #0x26	; 38
      00039D 26                    1167 	.db #0x26	; 38
      00039E 26                    1168 	.db #0x26	; 38
      00039F 26                    1169 	.db #0x26	; 38
      0003A0 26                    1170 	.db #0x26	; 38
      0003A1 26                    1171 	.db #0x26	; 38
      0003A2 26                    1172 	.db #0x26	; 38
      0003A3 26                    1173 	.db #0x26	; 38
      0003A4 26                    1174 	.db #0x26	; 38
      0003A5 26                    1175 	.db #0x26	; 38
      0003A6 26                    1176 	.db #0x26	; 38
      0003A7 26                    1177 	.db #0x26	; 38
      0003A8 26                    1178 	.db #0x26	; 38
      0003A9 26                    1179 	.db #0x26	; 38
      0003AA 26                    1180 	.db #0x26	; 38
      0003AB 26                    1181 	.db #0x26	; 38
      0003AC 26                    1182 	.db #0x26	; 38
      0003AD 2B                    1183 	.db #0x2b	; 43
      0003AE 26                    1184 	.db #0x26	; 38
      0003AF 26                    1185 	.db #0x26	; 38
      0003B0 26                    1186 	.db #0x26	; 38
      0003B1 26                    1187 	.db #0x26	; 38
      0003B2 26                    1188 	.db #0x26	; 38
      0003B3 26                    1189 	.db #0x26	; 38
      0003B4 26                    1190 	.db #0x26	; 38
      0003B5 25                    1191 	.db #0x25	; 37
      0003B6 26                    1192 	.db #0x26	; 38
      0003B7 26                    1193 	.db #0x26	; 38
      0003B8 2A                    1194 	.db #0x2a	; 42
      0003B9 29                    1195 	.db #0x29	; 41
      0003BA 26                    1196 	.db #0x26	; 38
      0003BB 26                    1197 	.db #0x26	; 38
      0003BC 26                    1198 	.db #0x26	; 38
      0003BD 26                    1199 	.db #0x26	; 38
      0003BE 26                    1200 	.db #0x26	; 38
      0003BF 26                    1201 	.db #0x26	; 38
      0003C0 26                    1202 	.db #0x26	; 38
      0003C1 26                    1203 	.db #0x26	; 38
      0003C2 2B                    1204 	.db #0x2b	; 43
      0003C3 26                    1205 	.db #0x26	; 38
      0003C4 26                    1206 	.db #0x26	; 38
      0003C5 26                    1207 	.db #0x26	; 38
      0003C6 26                    1208 	.db #0x26	; 38
      0003C7 26                    1209 	.db #0x26	; 38
      0003C8 26                    1210 	.db #0x26	; 38
      0003C9 2C                    1211 	.db #0x2c	; 44
      0003CA 26                    1212 	.db #0x26	; 38
      0003CB 26                    1213 	.db #0x26	; 38
      0003CC 26                    1214 	.db #0x26	; 38
      0003CD 26                    1215 	.db #0x26	; 38
      0003CE 26                    1216 	.db #0x26	; 38
      0003CF 26                    1217 	.db #0x26	; 38
      0003D0 26                    1218 	.db #0x26	; 38
      0003D1 26                    1219 	.db #0x26	; 38
      0003D2 26                    1220 	.db #0x26	; 38
      0003D3 26                    1221 	.db #0x26	; 38
      0003D4 26                    1222 	.db #0x26	; 38
      0003D5 2C                    1223 	.db #0x2c	; 44
      0003D6 26                    1224 	.db #0x26	; 38
      0003D7 26                    1225 	.db #0x26	; 38
      0003D8 26                    1226 	.db #0x26	; 38
      0003D9 26                    1227 	.db #0x26	; 38
      0003DA 26                    1228 	.db #0x26	; 38
      0003DB 26                    1229 	.db #0x26	; 38
      0003DC 26                    1230 	.db #0x26	; 38
      0003DD 26                    1231 	.db #0x26	; 38
      0003DE 26                    1232 	.db #0x26	; 38
      0003DF 26                    1233 	.db #0x26	; 38
      0003E0 26                    1234 	.db #0x26	; 38
      0003E1 26                    1235 	.db #0x26	; 38
      0003E2 26                    1236 	.db #0x26	; 38
      0003E3 26                    1237 	.db #0x26	; 38
      0003E4 26                    1238 	.db #0x26	; 38
      0003E5 26                    1239 	.db #0x26	; 38
      0003E6 26                    1240 	.db #0x26	; 38
      0003E7 26                    1241 	.db #0x26	; 38
      0003E8 26                    1242 	.db #0x26	; 38
      0003E9 26                    1243 	.db #0x26	; 38
      0003EA 26                    1244 	.db #0x26	; 38
      0003EB 26                    1245 	.db #0x26	; 38
      0003EC 26                    1246 	.db #0x26	; 38
      0003ED 26                    1247 	.db #0x26	; 38
      0003EE 26                    1248 	.db #0x26	; 38
      0003EF 26                    1249 	.db #0x26	; 38
      0003F0 26                    1250 	.db #0x26	; 38
      0003F1 26                    1251 	.db #0x26	; 38
      0003F2 26                    1252 	.db #0x26	; 38
      0003F3 26                    1253 	.db #0x26	; 38
      0003F4 26                    1254 	.db #0x26	; 38
      0003F5 26                    1255 	.db #0x26	; 38
      0003F6 26                    1256 	.db #0x26	; 38
      0003F7 26                    1257 	.db #0x26	; 38
      0003F8 26                    1258 	.db #0x26	; 38
      0003F9 26                    1259 	.db #0x26	; 38
      0003FA 26                    1260 	.db #0x26	; 38
      0003FB 26                    1261 	.db #0x26	; 38
      0003FC 26                    1262 	.db #0x26	; 38
      0003FD 26                    1263 	.db #0x26	; 38
      0003FE 26                    1264 	.db #0x26	; 38
      0003FF 26                    1265 	.db #0x26	; 38
      000400 26                    1266 	.db #0x26	; 38
      000401 26                    1267 	.db #0x26	; 38
      000402 26                    1268 	.db #0x26	; 38
      000403 26                    1269 	.db #0x26	; 38
      000404 26                    1270 	.db #0x26	; 38
      000405 26                    1271 	.db #0x26	; 38
      000406 26                    1272 	.db #0x26	; 38
      000407 26                    1273 	.db #0x26	; 38
      000408 26                    1274 	.db #0x26	; 38
      000409 26                    1275 	.db #0x26	; 38
      00040A 26                    1276 	.db #0x26	; 38
      00040B 26                    1277 	.db #0x26	; 38
      00040C 26                    1278 	.db #0x26	; 38
      00040D 2B                    1279 	.db #0x2b	; 43
      00040E 26                    1280 	.db #0x26	; 38
      00040F 26                    1281 	.db #0x26	; 38
      000410 26                    1282 	.db #0x26	; 38
      000411 26                    1283 	.db #0x26	; 38
      000412 26                    1284 	.db #0x26	; 38
      000413 26                    1285 	.db #0x26	; 38
      000414 26                    1286 	.db #0x26	; 38
      000415 26                    1287 	.db #0x26	; 38
      000416 26                    1288 	.db #0x26	; 38
      000417 26                    1289 	.db #0x26	; 38
      000418 26                    1290 	.db #0x26	; 38
      000419 26                    1291 	.db #0x26	; 38
      00041A 26                    1292 	.db #0x26	; 38
      00041B 26                    1293 	.db #0x26	; 38
      00041C 26                    1294 	.db #0x26	; 38
      00041D 26                    1295 	.db #0x26	; 38
      00041E 26                    1296 	.db #0x26	; 38
      00041F 26                    1297 	.db #0x26	; 38
      000420 2B                    1298 	.db #0x2b	; 43
      000421 26                    1299 	.db #0x26	; 38
      000422 26                    1300 	.db #0x26	; 38
      000423 26                    1301 	.db #0x26	; 38
      000424 26                    1302 	.db #0x26	; 38
      000425 26                    1303 	.db #0x26	; 38
      000426 26                    1304 	.db #0x26	; 38
      000427 26                    1305 	.db #0x26	; 38
      000428 26                    1306 	.db #0x26	; 38
      000429 26                    1307 	.db #0x26	; 38
      00042A 26                    1308 	.db #0x26	; 38
      00042B 26                    1309 	.db #0x26	; 38
      00042C 26                    1310 	.db #0x26	; 38
      00042D 26                    1311 	.db #0x26	; 38
      00042E 26                    1312 	.db #0x26	; 38
      00042F 26                    1313 	.db #0x26	; 38
      000430 26                    1314 	.db #0x26	; 38
      000431 26                    1315 	.db #0x26	; 38
      000432 26                    1316 	.db #0x26	; 38
      000433 26                    1317 	.db #0x26	; 38
      000434 26                    1318 	.db #0x26	; 38
      000435 26                    1319 	.db #0x26	; 38
      000436 26                    1320 	.db #0x26	; 38
      000437 2C                    1321 	.db #0x2c	; 44
      000438 26                    1322 	.db #0x26	; 38
      000439 26                    1323 	.db #0x26	; 38
      00043A 26                    1324 	.db #0x26	; 38
      00043B 26                    1325 	.db #0x26	; 38
      00043C 26                    1326 	.db #0x26	; 38
      00043D 26                    1327 	.db #0x26	; 38
      00043E 26                    1328 	.db #0x26	; 38
      00043F 26                    1329 	.db #0x26	; 38
      000440 26                    1330 	.db #0x26	; 38
      000441 26                    1331 	.db #0x26	; 38
      000442 26                    1332 	.db #0x26	; 38
      000443 26                    1333 	.db #0x26	; 38
      000444 26                    1334 	.db #0x26	; 38
      000445 26                    1335 	.db #0x26	; 38
      000446 26                    1336 	.db #0x26	; 38
      000447 26                    1337 	.db #0x26	; 38
      000448 25                    1338 	.db #0x25	; 37
      000449 2C                    1339 	.db #0x2c	; 44
      00044A 26                    1340 	.db #0x26	; 38
      00044B 26                    1341 	.db #0x26	; 38
      00044C 26                    1342 	.db #0x26	; 38
      00044D 26                    1343 	.db #0x26	; 38
      00044E 26                    1344 	.db #0x26	; 38
      00044F 26                    1345 	.db #0x26	; 38
      000450 26                    1346 	.db #0x26	; 38
      000451 26                    1347 	.db #0x26	; 38
      000452 26                    1348 	.db #0x26	; 38
      000453 26                    1349 	.db #0x26	; 38
      000454 26                    1350 	.db #0x26	; 38
      000455 26                    1351 	.db #0x26	; 38
      000456 26                    1352 	.db #0x26	; 38
      000457 26                    1353 	.db #0x26	; 38
      000458 26                    1354 	.db #0x26	; 38
      000459 26                    1355 	.db #0x26	; 38
      00045A 2B                    1356 	.db #0x2b	; 43
      00045B 26                    1357 	.db #0x26	; 38
      00045C 26                    1358 	.db #0x26	; 38
      00045D 26                    1359 	.db #0x26	; 38
      00045E 26                    1360 	.db #0x26	; 38
      00045F 26                    1361 	.db #0x26	; 38
      000460 26                    1362 	.db #0x26	; 38
      000461 26                    1363 	.db #0x26	; 38
      000462 26                    1364 	.db #0x26	; 38
      000463 26                    1365 	.db #0x26	; 38
      000464 26                    1366 	.db #0x26	; 38
      000465 26                    1367 	.db #0x26	; 38
      000466 26                    1368 	.db #0x26	; 38
      000467 26                    1369 	.db #0x26	; 38
      000468 26                    1370 	.db #0x26	; 38
      000469 26                    1371 	.db #0x26	; 38
      00046A 26                    1372 	.db #0x26	; 38
      00046B 26                    1373 	.db #0x26	; 38
      00046C 26                    1374 	.db #0x26	; 38
      00046D 26                    1375 	.db #0x26	; 38
      00046E 26                    1376 	.db #0x26	; 38
      00046F 26                    1377 	.db #0x26	; 38
      000470 26                    1378 	.db #0x26	; 38
      000471 26                    1379 	.db #0x26	; 38
      000472 27                    1380 	.db #0x27	; 39
      000473 28                    1381 	.db #0x28	; 40
      000474 26                    1382 	.db #0x26	; 38
      000475 26                    1383 	.db #0x26	; 38
      000476 26                    1384 	.db #0x26	; 38
      000477 26                    1385 	.db #0x26	; 38
      000478 26                    1386 	.db #0x26	; 38
      000479 26                    1387 	.db #0x26	; 38
      00047A 26                    1388 	.db #0x26	; 38
      00047B 26                    1389 	.db #0x26	; 38
      00047C 26                    1390 	.db #0x26	; 38
      00047D 26                    1391 	.db #0x26	; 38
      00047E 26                    1392 	.db #0x26	; 38
      00047F 26                    1393 	.db #0x26	; 38
      000480 26                    1394 	.db #0x26	; 38
      000481 26                    1395 	.db #0x26	; 38
      000482 26                    1396 	.db #0x26	; 38
      000483 26                    1397 	.db #0x26	; 38
      000484 26                    1398 	.db #0x26	; 38
      000485 26                    1399 	.db #0x26	; 38
      000486 2B                    1400 	.db #0x2b	; 43
      000487                       1401 _backgroundtiles:
      000487 40                    1402 	.db #0x40	; 64
      000488 38                    1403 	.db #0x38	; 56	'8'
      000489 3A                    1404 	.db #0x3a	; 58
      00048A 44                    1405 	.db #0x44	; 68	'D'
      00048B 7C                    1406 	.db #0x7c	; 124
      00048C 9A                    1407 	.db #0x9a	; 154
      00048D 5E                    1408 	.db #0x5e	; 94
      00048E E9                    1409 	.db #0xe9	; 233
      00048F 7A                    1410 	.db #0x7a	; 122	'z'
      000490 87                    1411 	.db #0x87	; 135
      000491 76                    1412 	.db #0x76	; 118	'v'
      000492 B9                    1413 	.db #0xb9	; 185
      000493 3C                    1414 	.db #0x3c	; 60
      000494 72                    1415 	.db #0x72	; 114	'r'
      000495 00                    1416 	.db #0x00	; 0
      000496 3C                    1417 	.db #0x3c	; 60
      000497 00                    1418 	.db #0x00	; 0
      000498 00                    1419 	.db #0x00	; 0
      000499 00                    1420 	.db #0x00	; 0
      00049A 00                    1421 	.db #0x00	; 0
      00049B 00                    1422 	.db #0x00	; 0
      00049C 00                    1423 	.db #0x00	; 0
      00049D 00                    1424 	.db #0x00	; 0
      00049E 00                    1425 	.db #0x00	; 0
      00049F 00                    1426 	.db #0x00	; 0
      0004A0 00                    1427 	.db #0x00	; 0
      0004A1 00                    1428 	.db #0x00	; 0
      0004A2 00                    1429 	.db #0x00	; 0
      0004A3 00                    1430 	.db #0x00	; 0
      0004A4 00                    1431 	.db #0x00	; 0
      0004A5 00                    1432 	.db #0x00	; 0
      0004A6 00                    1433 	.db #0x00	; 0
      0004A7 00                    1434 	.db #0x00	; 0
      0004A8 0F                    1435 	.db #0x0f	; 15
      0004A9 08                    1436 	.db #0x08	; 8
      0004AA 17                    1437 	.db #0x17	; 23
      0004AB 1C                    1438 	.db #0x1c	; 28
      0004AC 23                    1439 	.db #0x23	; 35
      0004AD 3E                    1440 	.db #0x3e	; 62
      0004AE 41                    1441 	.db #0x41	; 65	'A'
      0004AF 1B                    1442 	.db #0x1b	; 27
      0004B0 64                    1443 	.db #0x64	; 100	'd'
      0004B1 31                    1444 	.db #0x31	; 49	'1'
      0004B2 4E                    1445 	.db #0x4e	; 78	'N'
      0004B3 B1                    1446 	.db #0xb1	; 177
      0004B4 CE                    1447 	.db #0xce	; 206
      0004B5 BB                    1448 	.db #0xbb	; 187
      0004B6 C4                    1449 	.db #0xc4	; 196
      0004B7 00                    1450 	.db #0x00	; 0
      0004B8 F8                    1451 	.db #0xf8	; 248
      0004B9 00                    1452 	.db #0x00	; 0
      0004BA FC                    1453 	.db #0xfc	; 252
      0004BB E0                    1454 	.db #0xe0	; 224
      0004BC 1E                    1455 	.db #0x1e	; 30
      0004BD F0                    1456 	.db #0xf0	; 240
      0004BE 0F                    1457 	.db #0x0f	; 15
      0004BF BE                    1458 	.db #0xbe	; 190
      0004C0 01                    1459 	.db #0x01	; 1
      0004C1 BC                    1460 	.db #0xbc	; 188
      0004C2 02                    1461 	.db #0x02	; 2
      0004C3 CE                    1462 	.db #0xce	; 206
      0004C4 01                    1463 	.db #0x01	; 1
      0004C5 F6                    1464 	.db #0xf6	; 246
      0004C6 61                    1465 	.db #0x61	; 97	'a'
      0004C7 F4                    1466 	.db #0xf4	; 244
      0004C8 02                    1467 	.db #0x02	; 2
      0004C9 94                    1468 	.db #0x94	; 148
      0004CA 62                    1469 	.db #0x62	; 98	'b'
      0004CB E4                    1470 	.db #0xe4	; 228
      0004CC 02                    1471 	.db #0x02	; 2
      0004CD 6C                    1472 	.db #0x6c	; 108	'l'
      0004CE 82                    1473 	.db #0x82	; 130
      0004CF 70                    1474 	.db #0x70	; 112	'p'
      0004D0 8C                    1475 	.db #0x8c	; 140
      0004D1 60                    1476 	.db #0x60	; 96
      0004D2 90                    1477 	.db #0x90	; 144
      0004D3 00                    1478 	.db #0x00	; 0
      0004D4 E0                    1479 	.db #0xe0	; 224
      0004D5 80                    1480 	.db #0x80	; 128
      0004D6 80                    1481 	.db #0x80	; 128
      0004D7 8E                    1482 	.db #0x8e	; 142
      0004D8 F7                    1483 	.db #0xf7	; 247
      0004D9 8F                    1484 	.db #0x8f	; 143
      0004DA F3                    1485 	.db #0xf3	; 243
      0004DB 86                    1486 	.db #0x86	; 134
      0004DC F9                    1487 	.db #0xf9	; 249
      0004DD 42                    1488 	.db #0x42	; 66	'B'
      0004DE 7D                    1489 	.db #0x7d	; 125
      0004DF 80                    1490 	.db #0x80	; 128
      0004E0 FF                    1491 	.db #0xff	; 255
      0004E1 44                    1492 	.db #0x44	; 68	'D'
      0004E2 7F                    1493 	.db #0x7f	; 127
      0004E3 28                    1494 	.db #0x28	; 40
      0004E4 3F                    1495 	.db #0x3f	; 63
      0004E5 07                    1496 	.db #0x07	; 7
      0004E6 07                    1497 	.db #0x07	; 7
      0004E7 00                    1498 	.db #0x00	; 0
      0004E8 00                    1499 	.db #0x00	; 0
      0004E9 08                    1500 	.db #0x08	; 8
      0004EA 00                    1501 	.db #0x00	; 0
      0004EB 08                    1502 	.db #0x08	; 8
      0004EC 00                    1503 	.db #0x00	; 0
      0004ED 1C                    1504 	.db #0x1c	; 28
      0004EE 00                    1505 	.db #0x00	; 0
      0004EF 7F                    1506 	.db #0x7f	; 127
      0004F0 00                    1507 	.db #0x00	; 0
      0004F1 1C                    1508 	.db #0x1c	; 28
      0004F2 00                    1509 	.db #0x00	; 0
      0004F3 08                    1510 	.db #0x08	; 8
      0004F4 00                    1511 	.db #0x00	; 0
      0004F5 08                    1512 	.db #0x08	; 8
      0004F6 00                    1513 	.db #0x00	; 0
      0004F7 00                    1514 	.db #0x00	; 0
      0004F8 00                    1515 	.db #0x00	; 0
      0004F9 00                    1516 	.db #0x00	; 0
      0004FA 00                    1517 	.db #0x00	; 0
      0004FB 00                    1518 	.db #0x00	; 0
      0004FC 00                    1519 	.db #0x00	; 0
      0004FD 10                    1520 	.db #0x10	; 16
      0004FE 00                    1521 	.db #0x00	; 0
      0004FF 00                    1522 	.db #0x00	; 0
      000500 00                    1523 	.db #0x00	; 0
      000501 00                    1524 	.db #0x00	; 0
      000502 00                    1525 	.db #0x00	; 0
      000503 00                    1526 	.db #0x00	; 0
      000504 00                    1527 	.db #0x00	; 0
      000505 00                    1528 	.db #0x00	; 0
      000506 00                    1529 	.db #0x00	; 0
      000507                       1530 _healthblock:
      000507 FE                    1531 	.db #0xfe	; 254
      000508 FE                    1532 	.db #0xfe	; 254
      000509 FE                    1533 	.db #0xfe	; 254
      00050A FE                    1534 	.db #0xfe	; 254
      00050B FE                    1535 	.db #0xfe	; 254
      00050C FE                    1536 	.db #0xfe	; 254
      00050D FE                    1537 	.db #0xfe	; 254
      00050E FE                    1538 	.db #0xfe	; 254
      00050F FE                    1539 	.db #0xfe	; 254
      000510 FE                    1540 	.db #0xfe	; 254
      000511 FE                    1541 	.db #0xfe	; 254
      000512 FE                    1542 	.db #0xfe	; 254
      000513 FE                    1543 	.db #0xfe	; 254
      000514 FE                    1544 	.db #0xfe	; 254
      000515 00                    1545 	.db #0x00	; 0
      000516 00                    1546 	.db #0x00	; 0
      000517                       1547 _enemyOptionCount:
      000517 05                    1548 	.db #0x05	; 5
      000518                       1549 _enemy1:
      000518 66                    1550 	.db #0x66	; 102	'f'
      000519 24                    1551 	.db #0x24	; 36
      00051A E7                    1552 	.db #0xe7	; 231
      00051B 66                    1553 	.db #0x66	; 102	'f'
      00051C F7                    1554 	.db #0xf7	; 247
      00051D E7                    1555 	.db #0xe7	; 231
      00051E 1C                    1556 	.db #0x1c	; 28
      00051F 18                    1557 	.db #0x18	; 24
      000520 38                    1558 	.db #0x38	; 56	'8'
      000521 18                    1559 	.db #0x18	; 24
      000522 EF                    1560 	.db #0xef	; 239
      000523 E7                    1561 	.db #0xe7	; 231
      000524 E7                    1562 	.db #0xe7	; 231
      000525 66                    1563 	.db #0x66	; 102	'f'
      000526 66                    1564 	.db #0x66	; 102	'f'
      000527 24                    1565 	.db #0x24	; 36
      000528 00                    1566 	.db #0x00	; 0
      000529 00                    1567 	.db #0x00	; 0
      00052A 00                    1568 	.db #0x00	; 0
      00052B 00                    1569 	.db #0x00	; 0
      00052C 00                    1570 	.db #0x00	; 0
      00052D 00                    1571 	.db #0x00	; 0
      00052E 00                    1572 	.db #0x00	; 0
      00052F 00                    1573 	.db #0x00	; 0
      000530 00                    1574 	.db #0x00	; 0
      000531 00                    1575 	.db #0x00	; 0
      000532 00                    1576 	.db #0x00	; 0
      000533 00                    1577 	.db #0x00	; 0
      000534 00                    1578 	.db #0x00	; 0
      000535 00                    1579 	.db #0x00	; 0
      000536 00                    1580 	.db #0x00	; 0
      000537 00                    1581 	.db #0x00	; 0
      000538 3C                    1582 	.db #0x3c	; 60
      000539 3C                    1583 	.db #0x3c	; 60
      00053A 5E                    1584 	.db #0x5e	; 94
      00053B 62                    1585 	.db #0x62	; 98	'b'
      00053C 8F                    1586 	.db #0x8f	; 143
      00053D F1                    1587 	.db #0xf1	; 241
      00053E C7                    1588 	.db #0xc7	; 199
      00053F F9                    1589 	.db #0xf9	; 249
      000540 C3                    1590 	.db #0xc3	; 195
      000541 FD                    1591 	.db #0xfd	; 253
      000542 E1                    1592 	.db #0xe1	; 225
      000543 FF                    1593 	.db #0xff	; 255
      000544 7A                    1594 	.db #0x7a	; 122	'z'
      000545 7E                    1595 	.db #0x7e	; 126
      000546 3C                    1596 	.db #0x3c	; 60
      000547 3C                    1597 	.db #0x3c	; 60
      000548 00                    1598 	.db #0x00	; 0
      000549 00                    1599 	.db #0x00	; 0
      00054A 00                    1600 	.db #0x00	; 0
      00054B 00                    1601 	.db #0x00	; 0
      00054C 00                    1602 	.db #0x00	; 0
      00054D 00                    1603 	.db #0x00	; 0
      00054E 00                    1604 	.db #0x00	; 0
      00054F 00                    1605 	.db #0x00	; 0
      000550 00                    1606 	.db #0x00	; 0
      000551 00                    1607 	.db #0x00	; 0
      000552 00                    1608 	.db #0x00	; 0
      000553 00                    1609 	.db #0x00	; 0
      000554 00                    1610 	.db #0x00	; 0
      000555 00                    1611 	.db #0x00	; 0
      000556 00                    1612 	.db #0x00	; 0
      000557 00                    1613 	.db #0x00	; 0
      000558 3C                    1614 	.db #0x3c	; 60
      000559 3E                    1615 	.db #0x3e	; 62
      00055A 20                    1616 	.db #0x20	; 32
      00055B 38                    1617 	.db #0x38	; 56	'8'
      00055C 44                    1618 	.db #0x44	; 68	'D'
      00055D 78                    1619 	.db #0x78	; 120	'x'
      00055E BA                    1620 	.db #0xba	; 186
      00055F C4                    1621 	.db #0xc4	; 196
      000560 BA                    1622 	.db #0xba	; 186
      000561 C4                    1623 	.db #0xc4	; 196
      000562 44                    1624 	.db #0x44	; 68	'D'
      000563 78                    1625 	.db #0x78	; 120	'x'
      000564 20                    1626 	.db #0x20	; 32
      000565 38                    1627 	.db #0x38	; 56	'8'
      000566 3C                    1628 	.db #0x3c	; 60
      000567 3E                    1629 	.db #0x3e	; 62
      000568                       1630 _largeenemies:
      000568 00                    1631 	.db #0x00	; 0
      000569 00                    1632 	.db #0x00	; 0
      00056A 00                    1633 	.db #0x00	; 0
      00056B 00                    1634 	.db #0x00	; 0
      00056C 00                    1635 	.db #0x00	; 0
      00056D 00                    1636 	.db #0x00	; 0
      00056E 00                    1637 	.db #0x00	; 0
      00056F 00                    1638 	.db #0x00	; 0
      000570 00                    1639 	.db #0x00	; 0
      000571 00                    1640 	.db #0x00	; 0
      000572 00                    1641 	.db #0x00	; 0
      000573 00                    1642 	.db #0x00	; 0
      000574 00                    1643 	.db #0x00	; 0
      000575 00                    1644 	.db #0x00	; 0
      000576 7F                    1645 	.db #0x7f	; 127
      000577 7F                    1646 	.db #0x7f	; 127
      000578 7F                    1647 	.db #0x7f	; 127
      000579 7F                    1648 	.db #0x7f	; 127
      00057A 00                    1649 	.db #0x00	; 0
      00057B 00                    1650 	.db #0x00	; 0
      00057C 00                    1651 	.db #0x00	; 0
      00057D 00                    1652 	.db #0x00	; 0
      00057E 00                    1653 	.db #0x00	; 0
      00057F 00                    1654 	.db #0x00	; 0
      000580 00                    1655 	.db #0x00	; 0
      000581 00                    1656 	.db #0x00	; 0
      000582 00                    1657 	.db #0x00	; 0
      000583 00                    1658 	.db #0x00	; 0
      000584 00                    1659 	.db #0x00	; 0
      000585 00                    1660 	.db #0x00	; 0
      000586 00                    1661 	.db #0x00	; 0
      000587 00                    1662 	.db #0x00	; 0
      000588 00                    1663 	.db #0x00	; 0
      000589 00                    1664 	.db #0x00	; 0
      00058A 40                    1665 	.db #0x40	; 64
      00058B 40                    1666 	.db #0x40	; 64
      00058C 60                    1667 	.db #0x60	; 96
      00058D 60                    1668 	.db #0x60	; 96
      00058E 70                    1669 	.db #0x70	; 112	'p'
      00058F 70                    1670 	.db #0x70	; 112	'p'
      000590 78                    1671 	.db #0x78	; 120	'x'
      000591 78                    1672 	.db #0x78	; 120	'x'
      000592 7C                    1673 	.db #0x7c	; 124
      000593 7C                    1674 	.db #0x7c	; 124
      000594 7E                    1675 	.db #0x7e	; 126
      000595 7E                    1676 	.db #0x7e	; 126
      000596 FF                    1677 	.db #0xff	; 255
      000597 FF                    1678 	.db #0xff	; 255
      000598 FF                    1679 	.db #0xff	; 255
      000599 FF                    1680 	.db #0xff	; 255
      00059A 7E                    1681 	.db #0x7e	; 126
      00059B 7E                    1682 	.db #0x7e	; 126
      00059C 7C                    1683 	.db #0x7c	; 124
      00059D 7C                    1684 	.db #0x7c	; 124
      00059E 78                    1685 	.db #0x78	; 120	'x'
      00059F 78                    1686 	.db #0x78	; 120	'x'
      0005A0 70                    1687 	.db #0x70	; 112	'p'
      0005A1 70                    1688 	.db #0x70	; 112	'p'
      0005A2 60                    1689 	.db #0x60	; 96
      0005A3 60                    1690 	.db #0x60	; 96
      0005A4 40                    1691 	.db #0x40	; 64
      0005A5 40                    1692 	.db #0x40	; 64
      0005A6 00                    1693 	.db #0x00	; 0
      0005A7 00                    1694 	.db #0x00	; 0
      0005A8 07                    1695 	.db #0x07	; 7
      0005A9 00                    1696 	.db #0x00	; 0
      0005AA 18                    1697 	.db #0x18	; 24
      0005AB 00                    1698 	.db #0x00	; 0
      0005AC 20                    1699 	.db #0x20	; 32
      0005AD 00                    1700 	.db #0x00	; 0
      0005AE 4C                    1701 	.db #0x4c	; 76	'L'
      0005AF 0C                    1702 	.db #0x0c	; 12
      0005B0 43                    1703 	.db #0x43	; 67	'C'
      0005B1 0F                    1704 	.db #0x0f	; 15
      0005B2 84                    1705 	.db #0x84	; 132
      0005B3 27                    1706 	.db #0x27	; 39
      0005B4 80                    1707 	.db #0x80	; 128
      0005B5 13                    1708 	.db #0x13	; 19
      0005B6 83                    1709 	.db #0x83	; 131
      0005B7 2A                    1710 	.db #0x2a	; 42
      0005B8 83                    1711 	.db #0x83	; 131
      0005B9 16                    1712 	.db #0x16	; 22
      0005BA 80                    1713 	.db #0x80	; 128
      0005BB 23                    1714 	.db #0x23	; 35
      0005BC 84                    1715 	.db #0x84	; 132
      0005BD 07                    1716 	.db #0x07	; 7
      0005BE 43                    1717 	.db #0x43	; 67	'C'
      0005BF 0F                    1718 	.db #0x0f	; 15
      0005C0 4C                    1719 	.db #0x4c	; 76	'L'
      0005C1 0C                    1720 	.db #0x0c	; 12
      0005C2 20                    1721 	.db #0x20	; 32
      0005C3 00                    1722 	.db #0x00	; 0
      0005C4 18                    1723 	.db #0x18	; 24
      0005C5 00                    1724 	.db #0x00	; 0
      0005C6 07                    1725 	.db #0x07	; 7
      0005C7 00                    1726 	.db #0x00	; 0
      0005C8 E0                    1727 	.db #0xe0	; 224
      0005C9 00                    1728 	.db #0x00	; 0
      0005CA 18                    1729 	.db #0x18	; 24
      0005CB 00                    1730 	.db #0x00	; 0
      0005CC 04                    1731 	.db #0x04	; 4
      0005CD 00                    1732 	.db #0x00	; 0
      0005CE 02                    1733 	.db #0x02	; 2
      0005CF 00                    1734 	.db #0x00	; 0
      0005D0 02                    1735 	.db #0x02	; 2
      0005D1 00                    1736 	.db #0x00	; 0
      0005D2 C1                    1737 	.db #0xc1	; 193
      0005D3 C0                    1738 	.db #0xc0	; 192
      0005D4 11                    1739 	.db #0x11	; 17
      0005D5 F0                    1740 	.db #0xf0	; 240
      0005D6 E5                    1741 	.db #0xe5	; 229
      0005D7 1C                    1742 	.db #0x1c	; 28
      0005D8 E5                    1743 	.db #0xe5	; 229
      0005D9 1C                    1744 	.db #0x1c	; 28
      0005DA 11                    1745 	.db #0x11	; 17
      0005DB F0                    1746 	.db #0xf0	; 240
      0005DC C1                    1747 	.db #0xc1	; 193
      0005DD C0                    1748 	.db #0xc0	; 192
      0005DE 02                    1749 	.db #0x02	; 2
      0005DF 00                    1750 	.db #0x00	; 0
      0005E0 02                    1751 	.db #0x02	; 2
      0005E1 00                    1752 	.db #0x00	; 0
      0005E2 04                    1753 	.db #0x04	; 4
      0005E3 00                    1754 	.db #0x00	; 0
      0005E4 18                    1755 	.db #0x18	; 24
      0005E5 00                    1756 	.db #0x00	; 0
      0005E6 E0                    1757 	.db #0xe0	; 224
      0005E7 00                    1758 	.db #0x00	; 0
      0005E8                       1759 _ProjectileTiles:
      0005E8 24                    1760 	.db #0x24	; 36
      0005E9 18                    1761 	.db #0x18	; 24
      0005EA 18                    1762 	.db #0x18	; 24
      0005EB 3C                    1763 	.db #0x3c	; 60
      0005EC 18                    1764 	.db #0x18	; 24
      0005ED 3C                    1765 	.db #0x3c	; 60
      0005EE 24                    1766 	.db #0x24	; 36
      0005EF 18                    1767 	.db #0x18	; 24
      0005F0 00                    1768 	.db #0x00	; 0
      0005F1 00                    1769 	.db #0x00	; 0
      0005F2 00                    1770 	.db #0x00	; 0
      0005F3 00                    1771 	.db #0x00	; 0
      0005F4 00                    1772 	.db #0x00	; 0
      0005F5 00                    1773 	.db #0x00	; 0
      0005F6 00                    1774 	.db #0x00	; 0
      0005F7 00                    1775 	.db #0x00	; 0
      0005F8 00                    1776 	.db #0x00	; 0
      0005F9 00                    1777 	.db #0x00	; 0
      0005FA 00                    1778 	.db #0x00	; 0
      0005FB 00                    1779 	.db #0x00	; 0
      0005FC 00                    1780 	.db #0x00	; 0
      0005FD 00                    1781 	.db #0x00	; 0
      0005FE 00                    1782 	.db #0x00	; 0
      0005FF 00                    1783 	.db #0x00	; 0
      000600 00                    1784 	.db #0x00	; 0
      000601 00                    1785 	.db #0x00	; 0
      000602 00                    1786 	.db #0x00	; 0
      000603 00                    1787 	.db #0x00	; 0
      000604 00                    1788 	.db #0x00	; 0
      000605 00                    1789 	.db #0x00	; 0
      000606 00                    1790 	.db #0x00	; 0
      000607 00                    1791 	.db #0x00	; 0
      000608 00                    1792 	.db #0x00	; 0
      000609 00                    1793 	.db #0x00	; 0
      00060A 00                    1794 	.db #0x00	; 0
      00060B 00                    1795 	.db #0x00	; 0
      00060C 09                    1796 	.db #0x09	; 9
      00060D 06                    1797 	.db #0x06	; 6
      00060E 06                    1798 	.db #0x06	; 6
      00060F 0F                    1799 	.db #0x0f	; 15
      000610 06                    1800 	.db #0x06	; 6
      000611 0F                    1801 	.db #0x0f	; 15
      000612 09                    1802 	.db #0x09	; 9
      000613 06                    1803 	.db #0x06	; 6
      000614 00                    1804 	.db #0x00	; 0
      000615 00                    1805 	.db #0x00	; 0
      000616 00                    1806 	.db #0x00	; 0
      000617 00                    1807 	.db #0x00	; 0
      000618 00                    1808 	.db #0x00	; 0
      000619 00                    1809 	.db #0x00	; 0
      00061A 00                    1810 	.db #0x00	; 0
      00061B 00                    1811 	.db #0x00	; 0
      00061C 00                    1812 	.db #0x00	; 0
      00061D 00                    1813 	.db #0x00	; 0
      00061E 00                    1814 	.db #0x00	; 0
      00061F 00                    1815 	.db #0x00	; 0
      000620 00                    1816 	.db #0x00	; 0
      000621 00                    1817 	.db #0x00	; 0
      000622 00                    1818 	.db #0x00	; 0
      000623 00                    1819 	.db #0x00	; 0
      000624 00                    1820 	.db #0x00	; 0
      000625 00                    1821 	.db #0x00	; 0
      000626 00                    1822 	.db #0x00	; 0
      000627 00                    1823 	.db #0x00	; 0
      000628 09                    1824 	.db #0x09	; 9
      000629 06                    1825 	.db #0x06	; 6
      00062A 06                    1826 	.db #0x06	; 6
      00062B 0F                    1827 	.db #0x0f	; 15
      00062C 06                    1828 	.db #0x06	; 6
      00062D 0F                    1829 	.db #0x0f	; 15
      00062E 09                    1830 	.db #0x09	; 9
      00062F 06                    1831 	.db #0x06	; 6
      000630 00                    1832 	.db #0x00	; 0
      000631 00                    1833 	.db #0x00	; 0
      000632 00                    1834 	.db #0x00	; 0
      000633 00                    1835 	.db #0x00	; 0
      000634 00                    1836 	.db #0x00	; 0
      000635 00                    1837 	.db #0x00	; 0
      000636 00                    1838 	.db #0x00	; 0
      000637 00                    1839 	.db #0x00	; 0
      000638 00                    1840 	.db #0x00	; 0
      000639 00                    1841 	.db #0x00	; 0
      00063A 00                    1842 	.db #0x00	; 0
      00063B 00                    1843 	.db #0x00	; 0
      00063C 00                    1844 	.db #0x00	; 0
      00063D 00                    1845 	.db #0x00	; 0
      00063E 00                    1846 	.db #0x00	; 0
      00063F 00                    1847 	.db #0x00	; 0
      000640 00                    1848 	.db #0x00	; 0
      000641 00                    1849 	.db #0x00	; 0
      000642 00                    1850 	.db #0x00	; 0
      000643 00                    1851 	.db #0x00	; 0
      000644 00                    1852 	.db #0x00	; 0
      000645 00                    1853 	.db #0x00	; 0
      000646 00                    1854 	.db #0x00	; 0
      000647 00                    1855 	.db #0x00	; 0
      000648 99                    1856 	.db #0x99	; 153
      000649 66                    1857 	.db #0x66	; 102	'f'
      00064A 66                    1858 	.db #0x66	; 102	'f'
      00064B FF                    1859 	.db #0xff	; 255
      00064C 66                    1860 	.db #0x66	; 102	'f'
      00064D FF                    1861 	.db #0xff	; 255
      00064E 99                    1862 	.db #0x99	; 153
      00064F 66                    1863 	.db #0x66	; 102	'f'
      000650 00                    1864 	.db #0x00	; 0
      000651 00                    1865 	.db #0x00	; 0
      000652 00                    1866 	.db #0x00	; 0
      000653 00                    1867 	.db #0x00	; 0
      000654 00                    1868 	.db #0x00	; 0
      000655 00                    1869 	.db #0x00	; 0
      000656 00                    1870 	.db #0x00	; 0
      000657 00                    1871 	.db #0x00	; 0
      000658 00                    1872 	.db #0x00	; 0
      000659 00                    1873 	.db #0x00	; 0
      00065A 00                    1874 	.db #0x00	; 0
      00065B 00                    1875 	.db #0x00	; 0
      00065C 00                    1876 	.db #0x00	; 0
      00065D 00                    1877 	.db #0x00	; 0
      00065E 00                    1878 	.db #0x00	; 0
      00065F 00                    1879 	.db #0x00	; 0
      000660 00                    1880 	.db #0x00	; 0
      000661 00                    1881 	.db #0x00	; 0
      000662 00                    1882 	.db #0x00	; 0
      000663 00                    1883 	.db #0x00	; 0
      000664 00                    1884 	.db #0x00	; 0
      000665 00                    1885 	.db #0x00	; 0
      000666 00                    1886 	.db #0x00	; 0
      000667 00                    1887 	.db #0x00	; 0
      000668 09                    1888 	.db #0x09	; 9
      000669 06                    1889 	.db #0x06	; 6
      00066A 06                    1890 	.db #0x06	; 6
      00066B 0F                    1891 	.db #0x0f	; 15
      00066C 06                    1892 	.db #0x06	; 6
      00066D 0F                    1893 	.db #0x0f	; 15
      00066E 09                    1894 	.db #0x09	; 9
      00066F 06                    1895 	.db #0x06	; 6
      000670 09                    1896 	.db #0x09	; 9
      000671 06                    1897 	.db #0x06	; 6
      000672 06                    1898 	.db #0x06	; 6
      000673 0F                    1899 	.db #0x0f	; 15
      000674 06                    1900 	.db #0x06	; 6
      000675 0F                    1901 	.db #0x0f	; 15
      000676 09                    1902 	.db #0x09	; 9
      000677 06                    1903 	.db #0x06	; 6
      000678 00                    1904 	.db #0x00	; 0
      000679 00                    1905 	.db #0x00	; 0
      00067A 00                    1906 	.db #0x00	; 0
      00067B 00                    1907 	.db #0x00	; 0
      00067C 00                    1908 	.db #0x00	; 0
      00067D 00                    1909 	.db #0x00	; 0
      00067E 00                    1910 	.db #0x00	; 0
      00067F 00                    1911 	.db #0x00	; 0
      000680 00                    1912 	.db #0x00	; 0
      000681 00                    1913 	.db #0x00	; 0
      000682 00                    1914 	.db #0x00	; 0
      000683 00                    1915 	.db #0x00	; 0
      000684 00                    1916 	.db #0x00	; 0
      000685 00                    1917 	.db #0x00	; 0
      000686 00                    1918 	.db #0x00	; 0
      000687 00                    1919 	.db #0x00	; 0
      000688 90                    1920 	.db #0x90	; 144
      000689 60                    1921 	.db #0x60	; 96
      00068A 60                    1922 	.db #0x60	; 96
      00068B F0                    1923 	.db #0xf0	; 240
      00068C 60                    1924 	.db #0x60	; 96
      00068D F0                    1925 	.db #0xf0	; 240
      00068E 90                    1926 	.db #0x90	; 144
      00068F 60                    1927 	.db #0x60	; 96
      000690 09                    1928 	.db #0x09	; 9
      000691 06                    1929 	.db #0x06	; 6
      000692 06                    1930 	.db #0x06	; 6
      000693 0F                    1931 	.db #0x0f	; 15
      000694 06                    1932 	.db #0x06	; 6
      000695 0F                    1933 	.db #0x0f	; 15
      000696 09                    1934 	.db #0x09	; 9
      000697 06                    1935 	.db #0x06	; 6
      000698 00                    1936 	.db #0x00	; 0
      000699 00                    1937 	.db #0x00	; 0
      00069A 00                    1938 	.db #0x00	; 0
      00069B 00                    1939 	.db #0x00	; 0
      00069C 00                    1940 	.db #0x00	; 0
      00069D 00                    1941 	.db #0x00	; 0
      00069E 00                    1942 	.db #0x00	; 0
      00069F 00                    1943 	.db #0x00	; 0
      0006A0 00                    1944 	.db #0x00	; 0
      0006A1 00                    1945 	.db #0x00	; 0
      0006A2 00                    1946 	.db #0x00	; 0
      0006A3 00                    1947 	.db #0x00	; 0
      0006A4 00                    1948 	.db #0x00	; 0
      0006A5 00                    1949 	.db #0x00	; 0
      0006A6 00                    1950 	.db #0x00	; 0
      0006A7 00                    1951 	.db #0x00	; 0
      0006A8 18                    1952 	.db #0x18	; 24
      0006A9 00                    1953 	.db #0x00	; 0
      0006AA 18                    1954 	.db #0x18	; 24
      0006AB 18                    1955 	.db #0x18	; 24
      0006AC 18                    1956 	.db #0x18	; 24
      0006AD 18                    1957 	.db #0x18	; 24
      0006AE 3C                    1958 	.db #0x3c	; 60
      0006AF 18                    1959 	.db #0x18	; 24
      0006B0 3C                    1960 	.db #0x3c	; 60
      0006B1 18                    1961 	.db #0x18	; 24
      0006B2 3C                    1962 	.db #0x3c	; 60
      0006B3 3C                    1963 	.db #0x3c	; 60
      0006B4 7E                    1964 	.db #0x7e	; 126
      0006B5 3C                    1965 	.db #0x3c	; 60
      0006B6 7E                    1966 	.db #0x7e	; 126
      0006B7 24                    1967 	.db #0x24	; 36
      0006B8 00                    1968 	.db #0x00	; 0
      0006B9 00                    1969 	.db #0x00	; 0
      0006BA 00                    1970 	.db #0x00	; 0
      0006BB 00                    1971 	.db #0x00	; 0
      0006BC 00                    1972 	.db #0x00	; 0
      0006BD 00                    1973 	.db #0x00	; 0
      0006BE 00                    1974 	.db #0x00	; 0
      0006BF 00                    1975 	.db #0x00	; 0
      0006C0 00                    1976 	.db #0x00	; 0
      0006C1 00                    1977 	.db #0x00	; 0
      0006C2 00                    1978 	.db #0x00	; 0
      0006C3 00                    1979 	.db #0x00	; 0
      0006C4 00                    1980 	.db #0x00	; 0
      0006C5 00                    1981 	.db #0x00	; 0
      0006C6 00                    1982 	.db #0x00	; 0
      0006C7 00                    1983 	.db #0x00	; 0
      0006C8 C0                    1984 	.db #0xc0	; 192
      0006C9 00                    1985 	.db #0x00	; 0
      0006CA F8                    1986 	.db #0xf8	; 248
      0006CB E0                    1987 	.db #0xe0	; 224
      0006CC FF                    1988 	.db #0xff	; 255
      0006CD 7E                    1989 	.db #0x7e	; 126
      0006CE FF                    1990 	.db #0xff	; 255
      0006CF 7E                    1991 	.db #0x7e	; 126
      0006D0 F8                    1992 	.db #0xf8	; 248
      0006D1 E0                    1993 	.db #0xe0	; 224
      0006D2 C0                    1994 	.db #0xc0	; 192
      0006D3 00                    1995 	.db #0x00	; 0
      0006D4 00                    1996 	.db #0x00	; 0
      0006D5 00                    1997 	.db #0x00	; 0
      0006D6 00                    1998 	.db #0x00	; 0
      0006D7 00                    1999 	.db #0x00	; 0
      0006D8 00                    2000 	.db #0x00	; 0
      0006D9 00                    2001 	.db #0x00	; 0
      0006DA 00                    2002 	.db #0x00	; 0
      0006DB 00                    2003 	.db #0x00	; 0
      0006DC 00                    2004 	.db #0x00	; 0
      0006DD 00                    2005 	.db #0x00	; 0
      0006DE 00                    2006 	.db #0x00	; 0
      0006DF 00                    2007 	.db #0x00	; 0
      0006E0 00                    2008 	.db #0x00	; 0
      0006E1 00                    2009 	.db #0x00	; 0
      0006E2 00                    2010 	.db #0x00	; 0
      0006E3 00                    2011 	.db #0x00	; 0
      0006E4 00                    2012 	.db #0x00	; 0
      0006E5 00                    2013 	.db #0x00	; 0
      0006E6 00                    2014 	.db #0x00	; 0
      0006E7 00                    2015 	.db #0x00	; 0
      0006E8 06                    2016 	.db #0x06	; 6
      0006E9 00                    2017 	.db #0x00	; 0
      0006EA 0F                    2018 	.db #0x0f	; 15
      0006EB 06                    2019 	.db #0x06	; 6
      0006EC 1F                    2020 	.db #0x1f	; 31
      0006ED 0E                    2021 	.db #0x0e	; 14
      0006EE 7E                    2022 	.db #0x7e	; 126
      0006EF 1C                    2023 	.db #0x1c	; 28
      0006F0 FC                    2024 	.db #0xfc	; 252
      0006F1 78                    2025 	.db #0x78	; 120	'x'
      0006F2 F8                    2026 	.db #0xf8	; 248
      0006F3 F0                    2027 	.db #0xf0	; 240
      0006F4 F8                    2028 	.db #0xf8	; 248
      0006F5 70                    2029 	.db #0x70	; 112	'p'
      0006F6 70                    2030 	.db #0x70	; 112	'p'
      0006F7 20                    2031 	.db #0x20	; 32
      0006F8 00                    2032 	.db #0x00	; 0
      0006F9 00                    2033 	.db #0x00	; 0
      0006FA 00                    2034 	.db #0x00	; 0
      0006FB 00                    2035 	.db #0x00	; 0
      0006FC 00                    2036 	.db #0x00	; 0
      0006FD 00                    2037 	.db #0x00	; 0
      0006FE 00                    2038 	.db #0x00	; 0
      0006FF 00                    2039 	.db #0x00	; 0
      000700 00                    2040 	.db #0x00	; 0
      000701 00                    2041 	.db #0x00	; 0
      000702 00                    2042 	.db #0x00	; 0
      000703 00                    2043 	.db #0x00	; 0
      000704 00                    2044 	.db #0x00	; 0
      000705 00                    2045 	.db #0x00	; 0
      000706 00                    2046 	.db #0x00	; 0
      000707 00                    2047 	.db #0x00	; 0
      000708                       2048 _upgrade:
      000708 01                    2049 	.db #0x01	; 1
      000709 00 00                 2050 	.dw #0x0000
      00070B 00 00                 2051 	.dw #0x0000
      00070D 00                    2052 	.db #0x00	; 0
      00070E 00                    2053 	.db #0x00	; 0
      00070F 00                    2054 	.db #0x00	; 0
      000710 70                    2055 	.db #0x70	; 112	'p'
      000711                       2056 _ammo:
      000711 01                    2057 	.db #0x01	; 1
      000712 00 00                 2058 	.dw #0x0000
      000714 00 00                 2059 	.dw #0x0000
      000716 00                    2060 	.db #0x00	; 0
      000717 01                    2061 	.db #0x01	; 1
      000718 05                    2062 	.db #0x05	; 5
      000719 72                    2063 	.db #0x72	; 114	'r'
      00071A                       2064 _health:
      00071A 01                    2065 	.db #0x01	; 1
      00071B 00 00                 2066 	.dw #0x0000
      00071D 00 00                 2067 	.dw #0x0000
      00071F 00                    2068 	.db #0x00	; 0
      000720 02                    2069 	.db #0x02	; 2
      000721 32                    2070 	.db #0x32	; 50	'2'
      000722 74                    2071 	.db #0x74	; 116	't'
      000723                       2072 _Pickups:
      000723 7E                    2073 	.db #0x7e	; 126
      000724 00                    2074 	.db #0x00	; 0
      000725 81                    2075 	.db #0x81	; 129
      000726 00                    2076 	.db #0x00	; 0
      000727 D7                    2077 	.db #0xd7	; 215
      000728 56                    2078 	.db #0x56	; 86	'V'
      000729 D7                    2079 	.db #0xd7	; 215
      00072A 56                    2080 	.db #0x56	; 86	'V'
      00072B D5                    2081 	.db #0xd5	; 213
      00072C 54                    2082 	.db #0x54	; 84	'T'
      00072D F5                    2083 	.db #0xf5	; 245
      00072E 74                    2084 	.db #0x74	; 116	't'
      00072F 81                    2085 	.db #0x81	; 129
      000730 00                    2086 	.db #0x00	; 0
      000731 7E                    2087 	.db #0x7e	; 126
      000732 00                    2088 	.db #0x00	; 0
      000733 00                    2089 	.db #0x00	; 0
      000734 00                    2090 	.db #0x00	; 0
      000735 00                    2091 	.db #0x00	; 0
      000736 00                    2092 	.db #0x00	; 0
      000737 00                    2093 	.db #0x00	; 0
      000738 00                    2094 	.db #0x00	; 0
      000739 00                    2095 	.db #0x00	; 0
      00073A 00                    2096 	.db #0x00	; 0
      00073B 00                    2097 	.db #0x00	; 0
      00073C 00                    2098 	.db #0x00	; 0
      00073D 00                    2099 	.db #0x00	; 0
      00073E 00                    2100 	.db #0x00	; 0
      00073F 00                    2101 	.db #0x00	; 0
      000740 00                    2102 	.db #0x00	; 0
      000741 00                    2103 	.db #0x00	; 0
      000742 00                    2104 	.db #0x00	; 0
      000743 7E                    2105 	.db #0x7e	; 126
      000744 00                    2106 	.db #0x00	; 0
      000745 8F                    2107 	.db #0x8f	; 143
      000746 06                    2108 	.db #0x06	; 6
      000747 9F                    2109 	.db #0x9f	; 159
      000748 0E                    2110 	.db #0x0e	; 14
      000749 FF                    2111 	.db #0xff	; 255
      00074A 1C                    2112 	.db #0x1c	; 28
      00074B FD                    2113 	.db #0xfd	; 253
      00074C 78                    2114 	.db #0x78	; 120	'x'
      00074D F9                    2115 	.db #0xf9	; 249
      00074E 70                    2116 	.db #0x70	; 112	'p'
      00074F F9                    2117 	.db #0xf9	; 249
      000750 70                    2118 	.db #0x70	; 112	'p'
      000751 7E                    2119 	.db #0x7e	; 126
      000752 00                    2120 	.db #0x00	; 0
      000753 00                    2121 	.db #0x00	; 0
      000754 00                    2122 	.db #0x00	; 0
      000755 00                    2123 	.db #0x00	; 0
      000756 00                    2124 	.db #0x00	; 0
      000757 00                    2125 	.db #0x00	; 0
      000758 00                    2126 	.db #0x00	; 0
      000759 00                    2127 	.db #0x00	; 0
      00075A 00                    2128 	.db #0x00	; 0
      00075B 00                    2129 	.db #0x00	; 0
      00075C 00                    2130 	.db #0x00	; 0
      00075D 00                    2131 	.db #0x00	; 0
      00075E 00                    2132 	.db #0x00	; 0
      00075F 00                    2133 	.db #0x00	; 0
      000760 00                    2134 	.db #0x00	; 0
      000761 00                    2135 	.db #0x00	; 0
      000762 00                    2136 	.db #0x00	; 0
      000763 7E                    2137 	.db #0x7e	; 126
      000764 00                    2138 	.db #0x00	; 0
      000765 99                    2139 	.db #0x99	; 153
      000766 18                    2140 	.db #0x18	; 24
      000767 99                    2141 	.db #0x99	; 153
      000768 18                    2142 	.db #0x18	; 24
      000769 FF                    2143 	.db #0xff	; 255
      00076A 7E                    2144 	.db #0x7e	; 126
      00076B FF                    2145 	.db #0xff	; 255
      00076C 7E                    2146 	.db #0x7e	; 126
      00076D 99                    2147 	.db #0x99	; 153
      00076E 18                    2148 	.db #0x18	; 24
      00076F 99                    2149 	.db #0x99	; 153
      000770 18                    2150 	.db #0x18	; 24
      000771 7E                    2151 	.db #0x7e	; 126
      000772 00                    2152 	.db #0x00	; 0
      000773 00                    2153 	.db #0x00	; 0
      000774 00                    2154 	.db #0x00	; 0
      000775 00                    2155 	.db #0x00	; 0
      000776 00                    2156 	.db #0x00	; 0
      000777 00                    2157 	.db #0x00	; 0
      000778 00                    2158 	.db #0x00	; 0
      000779 00                    2159 	.db #0x00	; 0
      00077A 00                    2160 	.db #0x00	; 0
      00077B 00                    2161 	.db #0x00	; 0
      00077C 00                    2162 	.db #0x00	; 0
      00077D 00                    2163 	.db #0x00	; 0
      00077E 00                    2164 	.db #0x00	; 0
      00077F 00                    2165 	.db #0x00	; 0
      000780 00                    2166 	.db #0x00	; 0
      000781 00                    2167 	.db #0x00	; 0
      000782 00                    2168 	.db #0x00	; 0
      000783                       2169 _Player1:
      000783 08                    2170 	.db #0x08	; 8
      000784 08                    2171 	.db #0x08	; 8
      000785 1C                    2172 	.db #0x1c	; 28
      000786 14                    2173 	.db #0x14	; 20
      000787 38                    2174 	.db #0x38	; 56	'8'
      000788 28                    2175 	.db #0x28	; 40
      000789 68                    2176 	.db #0x68	; 104	'h'
      00078A 58                    2177 	.db #0x58	; 88	'X'
      00078B 50                    2178 	.db #0x50	; 80	'P'
      00078C 71                    2179 	.db #0x71	; 113	'q'
      00078D D0                    2180 	.db #0xd0	; 208
      00078E B2                    2181 	.db #0xb2	; 178
      00078F D5                    2182 	.db #0xd5	; 213
      000790 B6                    2183 	.db #0xb6	; 182
      000791 D5                    2184 	.db #0xd5	; 213
      000792 B6                    2185 	.db #0xb6	; 182
      000793 D5                    2186 	.db #0xd5	; 213
      000794 B6                    2187 	.db #0xb6	; 182
      000795 CD                    2188 	.db #0xcd	; 205
      000796 BE                    2189 	.db #0xbe	; 190
      000797 C5                    2190 	.db #0xc5	; 197
      000798 BE                    2191 	.db #0xbe	; 190
      000799 65                    2192 	.db #0x65	; 101	'e'
      00079A 5E                    2193 	.db #0x5e	; 94
      00079B 3E                    2194 	.db #0x3e	; 62
      00079C 2F                    2195 	.db #0x2f	; 47
      00079D 13                    2196 	.db #0x13	; 19
      00079E 13                    2197 	.db #0x13	; 19
      00079F 06                    2198 	.db #0x06	; 6
      0007A0 07                    2199 	.db #0x07	; 7
      0007A1 07                    2200 	.db #0x07	; 7
      0007A2 05                    2201 	.db #0x05	; 5
      0007A3 10                    2202 	.db #0x10	; 16
      0007A4 10                    2203 	.db #0x10	; 16
      0007A5 38                    2204 	.db #0x38	; 56	'8'
      0007A6 28                    2205 	.db #0x28	; 40
      0007A7 1C                    2206 	.db #0x1c	; 28
      0007A8 14                    2207 	.db #0x14	; 20
      0007A9 16                    2208 	.db #0x16	; 22
      0007AA 1A                    2209 	.db #0x1a	; 26
      0007AB 0A                    2210 	.db #0x0a	; 10
      0007AC 8E                    2211 	.db #0x8e	; 142
      0007AD 0B                    2212 	.db #0x0b	; 11
      0007AE 4D                    2213 	.db #0x4d	; 77	'M'
      0007AF AB                    2214 	.db #0xab	; 171
      0007B0 6D                    2215 	.db #0x6d	; 109	'm'
      0007B1 AB                    2216 	.db #0xab	; 171
      0007B2 6D                    2217 	.db #0x6d	; 109	'm'
      0007B3 AB                    2218 	.db #0xab	; 171
      0007B4 6D                    2219 	.db #0x6d	; 109	'm'
      0007B5 B3                    2220 	.db #0xb3	; 179
      0007B6 7D                    2221 	.db #0x7d	; 125
      0007B7 A3                    2222 	.db #0xa3	; 163
      0007B8 7D                    2223 	.db #0x7d	; 125
      0007B9 A6                    2224 	.db #0xa6	; 166
      0007BA 7A                    2225 	.db #0x7a	; 122	'z'
      0007BB 7C                    2226 	.db #0x7c	; 124
      0007BC F4                    2227 	.db #0xf4	; 244
      0007BD C8                    2228 	.db #0xc8	; 200
      0007BE C8                    2229 	.db #0xc8	; 200
      0007BF 60                    2230 	.db #0x60	; 96
      0007C0 E0                    2231 	.db #0xe0	; 224
      0007C1 E0                    2232 	.db #0xe0	; 224
      0007C2 A0                    2233 	.db #0xa0	; 160
      0007C3 07                    2234 	.db #0x07	; 7
      0007C4 07                    2235 	.db #0x07	; 7
      0007C5 0F                    2236 	.db #0x0f	; 15
      0007C6 08                    2237 	.db #0x08	; 8
      0007C7 18                    2238 	.db #0x18	; 24
      0007C8 17                    2239 	.db #0x17	; 23
      0007C9 31                    2240 	.db #0x31	; 49	'1'
      0007CA 2F                    2241 	.db #0x2f	; 47
      0007CB 12                    2242 	.db #0x12	; 18
      0007CC 1E                    2243 	.db #0x1e	; 30
      0007CD DF                    2244 	.db #0xdf	; 223
      0007CE DF                    2245 	.db #0xdf	; 223
      0007CF F0                    2246 	.db #0xf0	; 240
      0007D0 7F                    2247 	.db #0x7f	; 127
      0007D1 AF                    2248 	.db #0xaf	; 175
      0007D2 F0                    2249 	.db #0xf0	; 240
      0007D3 AF                    2250 	.db #0xaf	; 175
      0007D4 F0                    2251 	.db #0xf0	; 240
      0007D5 F0                    2252 	.db #0xf0	; 240
      0007D6 7F                    2253 	.db #0x7f	; 127
      0007D7 DF                    2254 	.db #0xdf	; 223
      0007D8 DF                    2255 	.db #0xdf	; 223
      0007D9 12                    2256 	.db #0x12	; 18
      0007DA 1E                    2257 	.db #0x1e	; 30
      0007DB 31                    2258 	.db #0x31	; 49	'1'
      0007DC 2F                    2259 	.db #0x2f	; 47
      0007DD 18                    2260 	.db #0x18	; 24
      0007DE 17                    2261 	.db #0x17	; 23
      0007DF 0F                    2262 	.db #0x0f	; 15
      0007E0 08                    2263 	.db #0x08	; 8
      0007E1 07                    2264 	.db #0x07	; 7
      0007E2 07                    2265 	.db #0x07	; 7
      0007E3 E0                    2266 	.db #0xe0	; 224
      0007E4 E0                    2267 	.db #0xe0	; 224
      0007E5 F8                    2268 	.db #0xf8	; 248
      0007E6 18                    2269 	.db #0x18	; 24
      0007E7 0C                    2270 	.db #0x0c	; 12
      0007E8 F4                    2271 	.db #0xf4	; 244
      0007E9 F6                    2272 	.db #0xf6	; 246
      0007EA FA                    2273 	.db #0xfa	; 250
      0007EB 0F                    2274 	.db #0x0f	; 15
      0007EC 0D                    2275 	.db #0x0d	; 13
      0007ED C2                    2276 	.db #0xc2	; 194
      0007EE C2                    2277 	.db #0xc2	; 194
      0007EF 00                    2278 	.db #0x00	; 0
      0007F0 E0                    2279 	.db #0xe0	; 224
      0007F1 C0                    2280 	.db #0xc0	; 192
      0007F2 10                    2281 	.db #0x10	; 16
      0007F3 C0                    2282 	.db #0xc0	; 192
      0007F4 10                    2283 	.db #0x10	; 16
      0007F5 00                    2284 	.db #0x00	; 0
      0007F6 E0                    2285 	.db #0xe0	; 224
      0007F7 C2                    2286 	.db #0xc2	; 194
      0007F8 C2                    2287 	.db #0xc2	; 194
      0007F9 0F                    2288 	.db #0x0f	; 15
      0007FA 0D                    2289 	.db #0x0d	; 13
      0007FB F6                    2290 	.db #0xf6	; 246
      0007FC FA                    2291 	.db #0xfa	; 250
      0007FD 0C                    2292 	.db #0x0c	; 12
      0007FE F4                    2293 	.db #0xf4	; 244
      0007FF F8                    2294 	.db #0xf8	; 248
      000800 18                    2295 	.db #0x18	; 24
      000801 E0                    2296 	.db #0xe0	; 224
      000802 E0                    2297 	.db #0xe0	; 224
      000803 07                    2298 	.db #0x07	; 7
      000804 07                    2299 	.db #0x07	; 7
      000805 1B                    2300 	.db #0x1b	; 27
      000806 1C                    2301 	.db #0x1c	; 28
      000807 38                    2302 	.db #0x38	; 56	'8'
      000808 27                    2303 	.db #0x27	; 39
      000809 60                    2304 	.db #0x60	; 96
      00080A 5E                    2305 	.db #0x5e	; 94
      00080B 60                    2306 	.db #0x60	; 96
      00080C 5C                    2307 	.db #0x5c	; 92
      00080D 41                    2308 	.db #0x41	; 65	'A'
      00080E 79                    2309 	.db #0x79	; 121	'y'
      00080F C4                    2310 	.db #0xc4	; 196
      000810 B7                    2311 	.db #0xb7	; 183
      000811 99                    2312 	.db #0x99	; 153
      000812 FE                    2313 	.db #0xfe	; 254
      000813 B3                    2314 	.db #0xb3	; 179
      000814 EC                    2315 	.db #0xec	; 236
      000815 67                    2316 	.db #0x67	; 103	'g'
      000816 58                    2317 	.db #0x58	; 88	'X'
      000817 2E                    2318 	.db #0x2e	; 46
      000818 31                    2319 	.db #0x31	; 49	'1'
      000819 5C                    2320 	.db #0x5c	; 92
      00081A 73                    2321 	.db #0x73	; 115	's'
      00081B 69                    2322 	.db #0x69	; 105	'i'
      00081C 5E                    2323 	.db #0x5e	; 94
      00081D 37                    2324 	.db #0x37	; 55	'7'
      00081E 2D                    2325 	.db #0x2d	; 45
      00081F 1A                    2326 	.db #0x1a	; 26
      000820 1B                    2327 	.db #0x1b	; 27
      000821 01                    2328 	.db #0x01	; 1
      000822 01                    2329 	.db #0x01	; 1
      000823 E0                    2330 	.db #0xe0	; 224
      000824 E0                    2331 	.db #0xe0	; 224
      000825 90                    2332 	.db #0x90	; 144
      000826 70                    2333 	.db #0x70	; 112	'p'
      000827 C0                    2334 	.db #0xc0	; 192
      000828 C0                    2335 	.db #0xc0	; 192
      000829 00                    2336 	.db #0x00	; 0
      00082A 00                    2337 	.db #0x00	; 0
      00082B 02                    2338 	.db #0x02	; 2
      00082C 02                    2339 	.db #0x02	; 2
      00082D C1                    2340 	.db #0xc1	; 193
      00082E C3                    2341 	.db #0xc3	; 195
      00082F 65                    2342 	.db #0x65	; 101	'e'
      000830 A7                    2343 	.db #0xa7	; 167
      000831 A7                    2344 	.db #0xa7	; 167
      000832 65                    2345 	.db #0x65	; 101	'e'
      000833 A3                    2346 	.db #0xa3	; 163
      000834 65                    2347 	.db #0x65	; 101	'e'
      000835 03                    2348 	.db #0x03	; 3
      000836 CD                    2349 	.db #0xcd	; 205
      000837 41                    2350 	.db #0x41	; 65	'A'
      000838 DF                    2351 	.db #0xdf	; 223
      000839 86                    2352 	.db #0x86	; 134
      00083A BA                    2353 	.db #0xba	; 186
      00083B 86                    2354 	.db #0x86	; 134
      00083C FA                    2355 	.db #0xfa	; 250
      00083D 1C                    2356 	.db #0x1c	; 28
      00083E E4                    2357 	.db #0xe4	; 228
      00083F 78                    2358 	.db #0x78	; 120	'x'
      000840 B8                    2359 	.db #0xb8	; 184
      000841 C0                    2360 	.db #0xc0	; 192
      000842 C0                    2361 	.db #0xc0	; 192
      000843 00                    2362 	.db #0x00	; 0
      000844 00                    2363 	.db #0x00	; 0
      000845 00                    2364 	.db #0x00	; 0
      000846 00                    2365 	.db #0x00	; 0
      000847 00                    2366 	.db #0x00	; 0
      000848 00                    2367 	.db #0x00	; 0
      000849 00                    2368 	.db #0x00	; 0
      00084A 00                    2369 	.db #0x00	; 0
      00084B 00                    2370 	.db #0x00	; 0
      00084C 00                    2371 	.db #0x00	; 0
      00084D 00                    2372 	.db #0x00	; 0
      00084E 00                    2373 	.db #0x00	; 0
      00084F 00                    2374 	.db #0x00	; 0
      000850 00                    2375 	.db #0x00	; 0
      000851 00                    2376 	.db #0x00	; 0
      000852 00                    2377 	.db #0x00	; 0
      000853 00                    2378 	.db #0x00	; 0
      000854 00                    2379 	.db #0x00	; 0
      000855 00                    2380 	.db #0x00	; 0
      000856 00                    2381 	.db #0x00	; 0
      000857 00                    2382 	.db #0x00	; 0
      000858 00                    2383 	.db #0x00	; 0
      000859 00                    2384 	.db #0x00	; 0
      00085A 00                    2385 	.db #0x00	; 0
      00085B 00                    2386 	.db #0x00	; 0
      00085C 00                    2387 	.db #0x00	; 0
      00085D 00                    2388 	.db #0x00	; 0
      00085E 00                    2389 	.db #0x00	; 0
      00085F 00                    2390 	.db #0x00	; 0
      000860 00                    2391 	.db #0x00	; 0
      000861 00                    2392 	.db #0x00	; 0
      000862 00                    2393 	.db #0x00	; 0
      000863 00                    2394 	.db #0x00	; 0
      000864 00                    2395 	.db #0x00	; 0
      000865 00                    2396 	.db #0x00	; 0
      000866 00                    2397 	.db #0x00	; 0
      000867 00                    2398 	.db #0x00	; 0
      000868 00                    2399 	.db #0x00	; 0
      000869 00                    2400 	.db #0x00	; 0
      00086A 00                    2401 	.db #0x00	; 0
      00086B 00                    2402 	.db #0x00	; 0
      00086C 00                    2403 	.db #0x00	; 0
      00086D 00                    2404 	.db #0x00	; 0
      00086E 00                    2405 	.db #0x00	; 0
      00086F 00                    2406 	.db #0x00	; 0
      000870 00                    2407 	.db #0x00	; 0
      000871 00                    2408 	.db #0x00	; 0
      000872 00                    2409 	.db #0x00	; 0
      000873 00                    2410 	.db #0x00	; 0
      000874 00                    2411 	.db #0x00	; 0
      000875 00                    2412 	.db #0x00	; 0
      000876 00                    2413 	.db #0x00	; 0
      000877 00                    2414 	.db #0x00	; 0
      000878 00                    2415 	.db #0x00	; 0
      000879 00                    2416 	.db #0x00	; 0
      00087A 00                    2417 	.db #0x00	; 0
      00087B 00                    2418 	.db #0x00	; 0
      00087C 00                    2419 	.db #0x00	; 0
      00087D 00                    2420 	.db #0x00	; 0
      00087E 00                    2421 	.db #0x00	; 0
      00087F 00                    2422 	.db #0x00	; 0
      000880 00                    2423 	.db #0x00	; 0
      000881 00                    2424 	.db #0x00	; 0
      000882 00                    2425 	.db #0x00	; 0
      000883                       2426 _BLANKSIZE:
      000883 03                    2427 	.db #0x03	; 3
      000884                       2428 _BLANK:
      000884 26                    2429 	.db #0x26	; 38
      000885 2B                    2430 	.db #0x2b	; 43
      000886 2C                    2431 	.db #0x2c	; 44
      000887                       2432 _EMPTYSPRITE:
      000887 50                    2433 	.db #0x50	; 80	'P'
      000888                       2434 _ENEMYCOUNT:
      000888 05                    2435 	.db #0x05	; 5
      000889                       2436 _xSpawnPositions:
      000889 00                    2437 	.db #0x00	; 0
      00088A 60                    2438 	.db #0x60	; 96
      00088B B0                    2439 	.db #0xb0	; 176
      00088C 00                    2440 	.db #0x00	; 0
      00088D B0                    2441 	.db #0xb0	; 176
      00088E 00                    2442 	.db #0x00	; 0
      00088F 60                    2443 	.db #0x60	; 96
      000890 B0                    2444 	.db #0xb0	; 176
      000891                       2445 _ySpawnPositions:
      000891 00                    2446 	.db #0x00	; 0
      000892 00                    2447 	.db #0x00	; 0
      000893 00                    2448 	.db #0x00	; 0
      000894 5C                    2449 	.db #0x5c	; 92
      000895 5C                    2450 	.db #0x5c	; 92
      000896 A0                    2451 	.db #0xa0	; 160
      000897 A0                    2452 	.db #0xa0	; 160
      000898 A0                    2453 	.db #0xa0	; 160
      000899                       2454 _PROJECTILECOUNT:
      000899 05                    2455 	.db #0x05	; 5
      00089A                       2456 _PLAYERSIZE:
      00089A 10                    2457 	.db #0x10	; 16
      00089B                       2458 _maxHull:
      00089B 64                    2459 	.db #0x64	;  100	'd'
      00089C                       2460 _maxShield:
      00089C 64                    2461 	.db #0x64	;  100	'd'
      00089D                       2462 _MAXGUNLEVEL:
      00089D 01                    2463 	.db #0x01	; 1
                                   2464 ;src/main.c:140: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2465 ;	---------------------------------
                                   2466 ; Function setHealthBar
                                   2467 ; ---------------------------------
      00089E                       2468 _setHealthBar::
      00089E E8 FB                 2469 	add	sp, #-5
                                   2470 ;src/main.c:142: if (hp >= 80) {
      0008A0 F8 08                 2471 	ldhl	sp,	#8
      0008A2 7E                    2472 	ld	a, (hl)
      0008A3 D6 50                 2473 	sub	a, #0x50
      0008A5 38 31                 2474 	jr	C, 00102$
                                   2475 ;src/main.c:143: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0008A7 F8 00                 2476 	ldhl	sp,	#0
      0008A9 4D                    2477 	ld	c, l
      0008AA 44                    2478 	ld	b, h
      0008AB 36 50                 2479 	ld	(hl), #0x50
      0008AD 69                    2480 	ld	l, c
                                   2481 ;	spillPairReg hl
                                   2482 ;	spillPairReg hl
      0008AE 60                    2483 	ld	h, b
                                   2484 ;	spillPairReg hl
                                   2485 ;	spillPairReg hl
      0008AF 23                    2486 	inc	hl
      0008B0 36 50                 2487 	ld	(hl), #0x50
      0008B2 69                    2488 	ld	l, c
                                   2489 ;	spillPairReg hl
                                   2490 ;	spillPairReg hl
      0008B3 60                    2491 	ld	h, b
                                   2492 ;	spillPairReg hl
                                   2493 ;	spillPairReg hl
      0008B4 23                    2494 	inc	hl
      0008B5 23                    2495 	inc	hl
      0008B6 36 50                 2496 	ld	(hl), #0x50
      0008B8 69                    2497 	ld	l, c
                                   2498 ;	spillPairReg hl
                                   2499 ;	spillPairReg hl
      0008B9 60                    2500 	ld	h, b
                                   2501 ;	spillPairReg hl
                                   2502 ;	spillPairReg hl
      0008BA 23                    2503 	inc	hl
      0008BB 23                    2504 	inc	hl
      0008BC 23                    2505 	inc	hl
      0008BD 36 50                 2506 	ld	(hl), #0x50
      0008BF 21 04 00              2507 	ld	hl, #0x0004
      0008C2 09                    2508 	add	hl, bc
      0008C3 36 50                 2509 	ld	(hl), #0x50
                                   2510 ;src/main.c:144: set_win_tiles(5,row,5,1,blockmap);
      0008C5 C5                    2511 	push	bc
      0008C6 21 05 01              2512 	ld	hl, #0x105
      0008C9 E5                    2513 	push	hl
      0008CA F8 0B                 2514 	ldhl	sp,	#11
      0008CC 66                    2515 	ld	h, (hl)
      0008CD 2E 05                 2516 	ld	l, #0x05
      0008CF E5                    2517 	push	hl
      0008D0 CDr00r00              2518 	call	_set_win_tiles
      0008D3 E8 06                 2519 	add	sp, #6
                                   2520 ;src/main.c:145: return;
      0008D5 C3rACr09              2521 	jp	00109$
      0008D8                       2522 00102$:
                                   2523 ;src/main.c:147: if (hp >= 60) {
      0008D8 F8 08                 2524 	ldhl	sp,	#8
      0008DA 7E                    2525 	ld	a, (hl)
      0008DB D6 3C                 2526 	sub	a, #0x3c
      0008DD 38 31                 2527 	jr	C, 00104$
                                   2528 ;src/main.c:148: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0008DF F8 00                 2529 	ldhl	sp,	#0
      0008E1 4D                    2530 	ld	c, l
      0008E2 44                    2531 	ld	b, h
      0008E3 36 50                 2532 	ld	(hl), #0x50
      0008E5 69                    2533 	ld	l, c
                                   2534 ;	spillPairReg hl
                                   2535 ;	spillPairReg hl
      0008E6 60                    2536 	ld	h, b
                                   2537 ;	spillPairReg hl
                                   2538 ;	spillPairReg hl
      0008E7 23                    2539 	inc	hl
      0008E8 36 50                 2540 	ld	(hl), #0x50
      0008EA 69                    2541 	ld	l, c
                                   2542 ;	spillPairReg hl
                                   2543 ;	spillPairReg hl
      0008EB 60                    2544 	ld	h, b
                                   2545 ;	spillPairReg hl
                                   2546 ;	spillPairReg hl
      0008EC 23                    2547 	inc	hl
      0008ED 23                    2548 	inc	hl
      0008EE 36 50                 2549 	ld	(hl), #0x50
      0008F0 69                    2550 	ld	l, c
                                   2551 ;	spillPairReg hl
                                   2552 ;	spillPairReg hl
      0008F1 60                    2553 	ld	h, b
                                   2554 ;	spillPairReg hl
                                   2555 ;	spillPairReg hl
      0008F2 23                    2556 	inc	hl
      0008F3 23                    2557 	inc	hl
      0008F4 23                    2558 	inc	hl
      0008F5 36 50                 2559 	ld	(hl), #0x50
      0008F7 21 04 00              2560 	ld	hl, #0x0004
      0008FA 09                    2561 	add	hl, bc
      0008FB 36 00                 2562 	ld	(hl), #0x00
                                   2563 ;src/main.c:149: set_win_tiles(5,row,5,1,blockmap);
      0008FD C5                    2564 	push	bc
      0008FE 21 05 01              2565 	ld	hl, #0x105
      000901 E5                    2566 	push	hl
      000902 F8 0B                 2567 	ldhl	sp,	#11
      000904 66                    2568 	ld	h, (hl)
      000905 2E 05                 2569 	ld	l, #0x05
      000907 E5                    2570 	push	hl
      000908 CDr00r00              2571 	call	_set_win_tiles
      00090B E8 06                 2572 	add	sp, #6
                                   2573 ;src/main.c:150: return;
      00090D C3rACr09              2574 	jp	00109$
      000910                       2575 00104$:
                                   2576 ;src/main.c:152: if (hp >= 40) {
      000910 F8 08                 2577 	ldhl	sp,	#8
      000912 7E                    2578 	ld	a, (hl)
      000913 D6 28                 2579 	sub	a, #0x28
      000915 38 30                 2580 	jr	C, 00106$
                                   2581 ;src/main.c:153: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000917 F8 00                 2582 	ldhl	sp,	#0
      000919 4D                    2583 	ld	c, l
      00091A 44                    2584 	ld	b, h
      00091B 36 50                 2585 	ld	(hl), #0x50
      00091D 69                    2586 	ld	l, c
                                   2587 ;	spillPairReg hl
                                   2588 ;	spillPairReg hl
      00091E 60                    2589 	ld	h, b
                                   2590 ;	spillPairReg hl
                                   2591 ;	spillPairReg hl
      00091F 23                    2592 	inc	hl
      000920 36 50                 2593 	ld	(hl), #0x50
      000922 69                    2594 	ld	l, c
                                   2595 ;	spillPairReg hl
                                   2596 ;	spillPairReg hl
      000923 60                    2597 	ld	h, b
                                   2598 ;	spillPairReg hl
                                   2599 ;	spillPairReg hl
      000924 23                    2600 	inc	hl
      000925 23                    2601 	inc	hl
      000926 36 50                 2602 	ld	(hl), #0x50
      000928 59                    2603 	ld	e, c
      000929 50                    2604 	ld	d, b
      00092A 13                    2605 	inc	de
      00092B 13                    2606 	inc	de
      00092C 13                    2607 	inc	de
      00092D AF                    2608 	xor	a, a
      00092E 12                    2609 	ld	(de), a
      00092F 21 04 00              2610 	ld	hl, #0x0004
      000932 09                    2611 	add	hl, bc
      000933 36 00                 2612 	ld	(hl), #0x00
                                   2613 ;src/main.c:154: set_win_tiles(5,row,5,1,blockmap);
      000935 C5                    2614 	push	bc
      000936 21 05 01              2615 	ld	hl, #0x105
      000939 E5                    2616 	push	hl
      00093A F8 0B                 2617 	ldhl	sp,	#11
      00093C 66                    2618 	ld	h, (hl)
      00093D 2E 05                 2619 	ld	l, #0x05
      00093F E5                    2620 	push	hl
      000940 CDr00r00              2621 	call	_set_win_tiles
      000943 E8 06                 2622 	add	sp, #6
                                   2623 ;src/main.c:155: return;
      000945 18 65                 2624 	jr	00109$
      000947                       2625 00106$:
                                   2626 ;src/main.c:157: if (hp >= 20) {
      000947 F8 08                 2627 	ldhl	sp,	#8
      000949 7E                    2628 	ld	a, (hl)
      00094A D6 14                 2629 	sub	a, #0x14
      00094C 38 30                 2630 	jr	C, 00108$
                                   2631 ;src/main.c:158: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      00094E F8 00                 2632 	ldhl	sp,	#0
      000950 4D                    2633 	ld	c, l
      000951 44                    2634 	ld	b, h
      000952 36 50                 2635 	ld	(hl), #0x50
      000954 69                    2636 	ld	l, c
                                   2637 ;	spillPairReg hl
                                   2638 ;	spillPairReg hl
      000955 60                    2639 	ld	h, b
                                   2640 ;	spillPairReg hl
                                   2641 ;	spillPairReg hl
      000956 23                    2642 	inc	hl
      000957 36 50                 2643 	ld	(hl), #0x50
      000959 59                    2644 	ld	e, c
      00095A 50                    2645 	ld	d, b
      00095B 13                    2646 	inc	de
      00095C 13                    2647 	inc	de
      00095D AF                    2648 	xor	a, a
      00095E 12                    2649 	ld	(de), a
      00095F 59                    2650 	ld	e, c
      000960 50                    2651 	ld	d, b
      000961 13                    2652 	inc	de
      000962 13                    2653 	inc	de
      000963 13                    2654 	inc	de
      000964 AF                    2655 	xor	a, a
      000965 12                    2656 	ld	(de), a
      000966 21 04 00              2657 	ld	hl, #0x0004
      000969 09                    2658 	add	hl, bc
      00096A 36 00                 2659 	ld	(hl), #0x00
                                   2660 ;src/main.c:159: set_win_tiles(5,row,5,1,blockmap);
      00096C C5                    2661 	push	bc
      00096D 21 05 01              2662 	ld	hl, #0x105
      000970 E5                    2663 	push	hl
      000971 F8 0B                 2664 	ldhl	sp,	#11
      000973 66                    2665 	ld	h, (hl)
      000974 2E 05                 2666 	ld	l, #0x05
      000976 E5                    2667 	push	hl
      000977 CDr00r00              2668 	call	_set_win_tiles
      00097A E8 06                 2669 	add	sp, #6
                                   2670 ;src/main.c:160: return;
      00097C 18 2E                 2671 	jr	00109$
      00097E                       2672 00108$:
                                   2673 ;src/main.c:162: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      00097E F8 00                 2674 	ldhl	sp,	#0
      000980 4D                    2675 	ld	c, l
      000981 44                    2676 	ld	b, h
      000982 36 50                 2677 	ld	(hl), #0x50
      000984 59                    2678 	ld	e, c
      000985 50                    2679 	ld	d, b
      000986 13                    2680 	inc	de
      000987 AF                    2681 	xor	a, a
      000988 12                    2682 	ld	(de), a
      000989 59                    2683 	ld	e, c
      00098A 50                    2684 	ld	d, b
      00098B 13                    2685 	inc	de
      00098C 13                    2686 	inc	de
      00098D AF                    2687 	xor	a, a
      00098E 12                    2688 	ld	(de), a
      00098F 59                    2689 	ld	e, c
      000990 50                    2690 	ld	d, b
      000991 13                    2691 	inc	de
      000992 13                    2692 	inc	de
      000993 13                    2693 	inc	de
      000994 AF                    2694 	xor	a, a
      000995 12                    2695 	ld	(de), a
      000996 21 04 00              2696 	ld	hl, #0x0004
      000999 09                    2697 	add	hl, bc
      00099A 36 00                 2698 	ld	(hl), #0x00
                                   2699 ;src/main.c:163: set_win_tiles(5,row,5,1,blockmap);
      00099C C5                    2700 	push	bc
      00099D 21 05 01              2701 	ld	hl, #0x105
      0009A0 E5                    2702 	push	hl
      0009A1 F8 0B                 2703 	ldhl	sp,	#11
      0009A3 66                    2704 	ld	h, (hl)
      0009A4 2E 05                 2705 	ld	l, #0x05
      0009A6 E5                    2706 	push	hl
      0009A7 CDr00r00              2707 	call	_set_win_tiles
      0009AA E8 06                 2708 	add	sp, #6
                                   2709 ;src/main.c:164: return;
      0009AC                       2710 00109$:
                                   2711 ;src/main.c:166: }
      0009AC E8 05                 2712 	add	sp, #5
      0009AE C9                    2713 	ret
                                   2714 ;src/main.c:168: void updateScore() {
                                   2715 ;	---------------------------------
                                   2716 ; Function updateScore
                                   2717 ; ---------------------------------
      0009AF                       2718 _updateScore::
      0009AF E8 F6                 2719 	add	sp, #-10
                                   2720 ;src/main.c:172: len = bcd2text(&SCORE, 0x01, buf);
      0009B1 F8 00                 2721 	ldhl	sp,	#0
      0009B3 4D                    2722 	ld	c, l
      0009B4 44                    2723 	ld	b, h
      0009B5 59                    2724 	ld	e, c
      0009B6 50                    2725 	ld	d, b
      0009B7 C5                    2726 	push	bc
      0009B8 D5                    2727 	push	de
      0009B9 3E 01                 2728 	ld	a, #0x01
      0009BB F5                    2729 	push	af
      0009BC 33                    2730 	inc	sp
      0009BD 11rABr00              2731 	ld	de, #_SCORE
      0009C0 D5                    2732 	push	de
      0009C1 CDr00r00              2733 	call	_bcd2text
      0009C4 E8 05                 2734 	add	sp, #5
      0009C6 C1                    2735 	pop	bc
                                   2736 ;src/main.c:173: set_win_tiles(15, 1, 5, 1, buf+3);
      0009C7 03                    2737 	inc	bc
      0009C8 03                    2738 	inc	bc
      0009C9 03                    2739 	inc	bc
      0009CA C5                    2740 	push	bc
      0009CB 21 05 01              2741 	ld	hl, #0x105
      0009CE E5                    2742 	push	hl
      0009CF 21 0F 01              2743 	ld	hl, #0x10f
      0009D2 E5                    2744 	push	hl
      0009D3 CDr00r00              2745 	call	_set_win_tiles
                                   2746 ;src/main.c:174: }
      0009D6 E8 10                 2747 	add	sp, #16
      0009D8 C9                    2748 	ret
                                   2749 ;src/main.c:176: void updateMissileCount(int8_t amount) {
                                   2750 ;	---------------------------------
                                   2751 ; Function updateMissileCount
                                   2752 ; ---------------------------------
      0009D9                       2753 _updateMissileCount::
      0009D9 E8 F3                 2754 	add	sp, #-13
                                   2755 ;src/main.c:177: if (amount == -1) {
      0009DB F8 0F                 2756 	ldhl	sp,	#15
      0009DD 7E                    2757 	ld	a, (hl)
      0009DE 3C                    2758 	inc	a
      0009DF 20 13                 2759 	jr	NZ, 00112$
                                   2760 ;src/main.c:178: missiles--;
      0009E1 21rA0r00              2761 	ld	hl, #_missiles
      0009E4 35                    2762 	dec	(hl)
                                   2763 ;src/main.c:179: bcd_sub(&MISSILES, &INCREMENT);
      0009E5 11rAFr00              2764 	ld	de, #_INCREMENT
      0009E8 D5                    2765 	push	de
      0009E9 11rA1r00              2766 	ld	de, #_MISSILES
      0009EC D5                    2767 	push	de
      0009ED CDr00r00              2768 	call	_bcd_sub
      0009F0 E8 04                 2769 	add	sp, #4
      0009F2 18 41                 2770 	jr	00104$
                                   2771 ;src/main.c:182: for(uint8_t i=0; i<amount;i++) {
      0009F4                       2772 00112$:
      0009F4 F8 0C                 2773 	ldhl	sp,	#12
      0009F6 36 00                 2774 	ld	(hl), #0x00
      0009F8                       2775 00106$:
      0009F8 F8 0C                 2776 	ldhl	sp,	#12
      0009FA 4E                    2777 	ld	c, (hl)
      0009FB 06 00                 2778 	ld	b, #0x00
      0009FD F8 0F                 2779 	ldhl	sp,	#15
      0009FF 7E                    2780 	ld	a, (hl)
      000A00 F8 0A                 2781 	ldhl	sp,	#10
      000A02 22                    2782 	ld	(hl+), a
      000A03 07                    2783 	rlca
      000A04 9F                    2784 	sbc	a, a
      000A05 32                    2785 	ld	(hl-), a
      000A06 79                    2786 	ld	a, c
      000A07 96                    2787 	sub	a, (hl)
      000A08 23                    2788 	inc	hl
      000A09 78                    2789 	ld	a, b
      000A0A 9E                    2790 	sbc	a, (hl)
      000A0B 78                    2791 	ld	a, b
      000A0C 57                    2792 	ld	d, a
      000A0D CB 7E                 2793 	bit	7, (hl)
      000A0F 28 07                 2794 	jr	Z, 00128$
      000A11 CB 7A                 2795 	bit	7, d
      000A13 20 08                 2796 	jr	NZ, 00129$
      000A15 BF                    2797 	cp	a, a
      000A16 18 05                 2798 	jr	00129$
      000A18                       2799 00128$:
      000A18 CB 7A                 2800 	bit	7, d
      000A1A 28 01                 2801 	jr	Z, 00129$
      000A1C 37                    2802 	scf
      000A1D                       2803 00129$:
      000A1D 30 16                 2804 	jr	NC, 00104$
                                   2805 ;src/main.c:183: ++missiles;
      000A1F 21rA0r00              2806 	ld	hl, #_missiles
      000A22 34                    2807 	inc	(hl)
                                   2808 ;src/main.c:184: bcd_add(&MISSILES, &INCREMENT);
      000A23 11rAFr00              2809 	ld	de, #_INCREMENT
      000A26 D5                    2810 	push	de
      000A27 11rA1r00              2811 	ld	de, #_MISSILES
      000A2A D5                    2812 	push	de
      000A2B CDr00r00              2813 	call	_bcd_add
      000A2E E8 04                 2814 	add	sp, #4
                                   2815 ;src/main.c:182: for(uint8_t i=0; i<amount;i++) {
      000A30 F8 0C                 2816 	ldhl	sp,	#12
      000A32 34                    2817 	inc	(hl)
      000A33 18 C3                 2818 	jr	00106$
      000A35                       2819 00104$:
                                   2820 ;src/main.c:189: len = bcd2text(&MISSILES, 0x01, buf);
      000A35 F8 00                 2821 	ldhl	sp,	#0
      000A37 4D                    2822 	ld	c, l
      000A38 44                    2823 	ld	b, h
      000A39 59                    2824 	ld	e, c
      000A3A 50                    2825 	ld	d, b
      000A3B C5                    2826 	push	bc
      000A3C D5                    2827 	push	de
      000A3D 3E 01                 2828 	ld	a, #0x01
      000A3F F5                    2829 	push	af
      000A40 33                    2830 	inc	sp
      000A41 11rA1r00              2831 	ld	de, #_MISSILES
      000A44 D5                    2832 	push	de
      000A45 CDr00r00              2833 	call	_bcd2text
      000A48 E8 05                 2834 	add	sp, #5
      000A4A C1                    2835 	pop	bc
                                   2836 ;src/main.c:190: set_win_tiles(18, 0, 2, 1, buf+6);
      000A4B 21 06 00              2837 	ld	hl, #0x0006
      000A4E 09                    2838 	add	hl, bc
      000A4F E5                    2839 	push	hl
      000A50 21 02 01              2840 	ld	hl, #0x102
      000A53 E5                    2841 	push	hl
      000A54 21 12 00              2842 	ld	hl, #0x12
      000A57 E5                    2843 	push	hl
      000A58 CDr00r00              2844 	call	_set_win_tiles
                                   2845 ;src/main.c:192: }
      000A5B E8 13                 2846 	add	sp, #19
      000A5D C9                    2847 	ret
                                   2848 ;src/main.c:194: void incrementScore() {
                                   2849 ;	---------------------------------
                                   2850 ; Function incrementScore
                                   2851 ; ---------------------------------
      000A5E                       2852 _incrementScore::
                                   2853 ;src/main.c:195: score += 1;
      000A5E 21rA9r00              2854 	ld	hl, #_score
      000A61 2A                    2855 	ld	a, (hl+)
      000A62 4F                    2856 	ld	c, a
      000A63 3A                    2857 	ld	a, (hl-)
      000A64 47                    2858 	ld	b, a
      000A65 03                    2859 	inc	bc
      000A66 79                    2860 	ld	a, c
      000A67 22                    2861 	ld	(hl+), a
      000A68 70                    2862 	ld	(hl), b
                                   2863 ;src/main.c:196: bcd_add(&SCORE, &INCREMENT);
      000A69 11rAFr00              2864 	ld	de, #_INCREMENT
      000A6C D5                    2865 	push	de
      000A6D 11rABr00              2866 	ld	de, #_SCORE
      000A70 D5                    2867 	push	de
      000A71 CDr00r00              2868 	call	_bcd_add
      000A74 E8 04                 2869 	add	sp, #4
                                   2870 ;src/main.c:197: }
      000A76 C9                    2871 	ret
                                   2872 ;src/main.c:199: void updateDirection() {
                                   2873 ;	---------------------------------
                                   2874 ; Function updateDirection
                                   2875 ; ---------------------------------
      000A77                       2876 _updateDirection::
      000A77 E8 FC                 2877 	add	sp, #-4
                                   2878 ;src/main.c:203: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A79 21rE6r00              2879 	ld	hl, #_joydata
      000A7C 5E                    2880 	ld	e, (hl)
      000A7D 7B                    2881 	ld	a, e
      000A7E E6 01                 2882 	and	a, #0x01
      000A80 F8 00                 2883 	ldhl	sp,	#0
      000A82 22                    2884 	ld	(hl+), a
      000A83 AF                    2885 	xor	a, a
      000A84 22                    2886 	ld	(hl+), a
      000A85 7B                    2887 	ld	a, e
      000A86 E6 04                 2888 	and	a, #0x04
      000A88 22                    2889 	ld	(hl+), a
      000A89 AF                    2890 	xor	a, a
      000A8A 32                    2891 	ld	(hl-), a
      000A8B 2B                    2892 	dec	hl
      000A8C 7B                    2893 	ld	a, e
      000A8D E6 08                 2894 	and	a, #0x08
      000A8F 4F                    2895 	ld	c, a
      000A90 06 00                 2896 	ld	b, #0x00
      000A92 3A                    2897 	ld	a, (hl-)
      000A93 B6                    2898 	or	a, (hl)
      000A94 28 14                 2899 	jr	Z, 00102$
      000A96 F8 03                 2900 	ldhl	sp,	#3
      000A98 3A                    2901 	ld	a, (hl-)
      000A99 B6                    2902 	or	a, (hl)
      000A9A 20 0E                 2903 	jr	NZ, 00102$
      000A9C 78                    2904 	ld	a, b
      000A9D B1                    2905 	or	a, c
      000A9E 20 0A                 2906 	jr	NZ, 00102$
                                   2907 ;src/main.c:204: xDir = 1;
      000AA0 21r8Br00              2908 	ld	hl, #_xDir
      000AA3 36 01                 2909 	ld	(hl), #0x01
                                   2910 ;src/main.c:205: yDir = 0;
      000AA5 21r8Cr00              2911 	ld	hl, #_yDir
      000AA8 36 00                 2912 	ld	(hl), #0x00
      000AAA                       2913 00102$:
                                   2914 ;src/main.c:207: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000AAA 7B                    2915 	ld	a, e
      000AAB E6 02                 2916 	and	a, #0x02
      000AAD 5F                    2917 	ld	e, a
      000AAE 16 00                 2918 	ld	d, #0x00
      000AB0 7A                    2919 	ld	a, d
      000AB1 B3                    2920 	or	a, e
      000AB2 28 14                 2921 	jr	Z, 00106$
      000AB4 F8 03                 2922 	ldhl	sp,	#3
      000AB6 3A                    2923 	ld	a, (hl-)
      000AB7 B6                    2924 	or	a, (hl)
      000AB8 20 0E                 2925 	jr	NZ, 00106$
      000ABA 78                    2926 	ld	a, b
      000ABB B1                    2927 	or	a, c
      000ABC 20 0A                 2928 	jr	NZ, 00106$
                                   2929 ;src/main.c:208: xDir = -1;
      000ABE 21r8Br00              2930 	ld	hl, #_xDir
      000AC1 36 FF                 2931 	ld	(hl), #0xff
                                   2932 ;src/main.c:209: yDir = 0;
      000AC3 21r8Cr00              2933 	ld	hl, #_yDir
      000AC6 36 00                 2934 	ld	(hl), #0x00
      000AC8                       2935 00106$:
                                   2936 ;src/main.c:211: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000AC8 F8 03                 2937 	ldhl	sp,	#3
      000ACA 3A                    2938 	ld	a, (hl-)
      000ACB B6                    2939 	or	a, (hl)
      000ACC 28 13                 2940 	jr	Z, 00110$
      000ACE 7A                    2941 	ld	a, d
      000ACF B3                    2942 	or	a, e
      000AD0 20 0F                 2943 	jr	NZ, 00110$
      000AD2 2B                    2944 	dec	hl
      000AD3 3A                    2945 	ld	a, (hl-)
      000AD4 B6                    2946 	or	a, (hl)
      000AD5 20 0A                 2947 	jr	NZ, 00110$
                                   2948 ;src/main.c:212: xDir = 0;
      000AD7 21r8Br00              2949 	ld	hl, #_xDir
      000ADA 36 00                 2950 	ld	(hl), #0x00
                                   2951 ;src/main.c:213: yDir = -1;
      000ADC 21r8Cr00              2952 	ld	hl, #_yDir
      000ADF 36 FF                 2953 	ld	(hl), #0xff
      000AE1                       2954 00110$:
                                   2955 ;src/main.c:215: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000AE1 78                    2956 	ld	a, b
      000AE2 B1                    2957 	or	a, c
      000AE3 28 14                 2958 	jr	Z, 00114$
      000AE5 7A                    2959 	ld	a, d
      000AE6 B3                    2960 	or	a, e
      000AE7 20 10                 2961 	jr	NZ, 00114$
      000AE9 F8 01                 2962 	ldhl	sp,	#1
      000AEB 3A                    2963 	ld	a, (hl-)
      000AEC B6                    2964 	or	a, (hl)
      000AED 20 0A                 2965 	jr	NZ, 00114$
                                   2966 ;src/main.c:216: xDir = 0;
      000AEF 21r8Br00              2967 	ld	hl, #_xDir
      000AF2 36 00                 2968 	ld	(hl), #0x00
                                   2969 ;src/main.c:217: yDir = 1;
      000AF4 21r8Cr00              2970 	ld	hl, #_yDir
      000AF7 36 01                 2971 	ld	(hl), #0x01
      000AF9                       2972 00114$:
                                   2973 ;src/main.c:221: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000AF9 F8 03                 2974 	ldhl	sp,	#3
      000AFB 3A                    2975 	ld	a, (hl-)
      000AFC B6                    2976 	or	a, (hl)
      000AFD 28 0F                 2977 	jr	Z, 00118$
      000AFF 2B                    2978 	dec	hl
      000B00 3A                    2979 	ld	a, (hl-)
      000B01 B6                    2980 	or	a, (hl)
      000B02 28 0A                 2981 	jr	Z, 00118$
                                   2982 ;src/main.c:222: xDir = 1;
      000B04 21r8Br00              2983 	ld	hl, #_xDir
      000B07 36 01                 2984 	ld	(hl), #0x01
                                   2985 ;src/main.c:223: yDir = -1;
      000B09 21r8Cr00              2986 	ld	hl, #_yDir
      000B0C 36 FF                 2987 	ld	(hl), #0xff
      000B0E                       2988 00118$:
                                   2989 ;src/main.c:225: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000B0E F8 03                 2990 	ldhl	sp,	#3
      000B10 3A                    2991 	ld	a, (hl-)
      000B11 B6                    2992 	or	a, (hl)
      000B12 28 0E                 2993 	jr	Z, 00121$
      000B14 7A                    2994 	ld	a, d
      000B15 B3                    2995 	or	a, e
      000B16 28 0A                 2996 	jr	Z, 00121$
                                   2997 ;src/main.c:226: xDir = -1;
      000B18 21r8Br00              2998 	ld	hl, #_xDir
      000B1B 36 FF                 2999 	ld	(hl), #0xff
                                   3000 ;src/main.c:227: yDir = -1;
      000B1D 21r8Cr00              3001 	ld	hl, #_yDir
      000B20 36 FF                 3002 	ld	(hl), #0xff
      000B22                       3003 00121$:
                                   3004 ;src/main.c:229: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000B22 78                    3005 	ld	a, b
      000B23 B1                    3006 	or	a, c
      000B24 28 10                 3007 	jr	Z, 00124$
      000B26 F8 01                 3008 	ldhl	sp,	#1
      000B28 3A                    3009 	ld	a, (hl-)
      000B29 B6                    3010 	or	a, (hl)
      000B2A 28 0A                 3011 	jr	Z, 00124$
                                   3012 ;src/main.c:230: xDir = 1;
      000B2C 21r8Br00              3013 	ld	hl, #_xDir
      000B2F 36 01                 3014 	ld	(hl), #0x01
                                   3015 ;src/main.c:231: yDir = 1;
      000B31 21r8Cr00              3016 	ld	hl, #_yDir
      000B34 36 01                 3017 	ld	(hl), #0x01
      000B36                       3018 00124$:
                                   3019 ;src/main.c:233: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000B36 78                    3020 	ld	a, b
      000B37 B1                    3021 	or	a, c
      000B38 28 0E                 3022 	jr	Z, 00127$
      000B3A 7A                    3023 	ld	a, d
      000B3B B3                    3024 	or	a, e
      000B3C 28 0A                 3025 	jr	Z, 00127$
                                   3026 ;src/main.c:234: xDir = -1;
      000B3E 21r8Br00              3027 	ld	hl, #_xDir
      000B41 36 FF                 3028 	ld	(hl), #0xff
                                   3029 ;src/main.c:235: yDir = 1;
      000B43 21r8Cr00              3030 	ld	hl, #_yDir
      000B46 36 01                 3031 	ld	(hl), #0x01
      000B48                       3032 00127$:
                                   3033 ;src/main.c:240: if (xDir == 0 && yDir == 0) {
      000B48 FAr8Br00              3034 	ld	a, (#_xDir)
      000B4B B7                    3035 	or	a, a
      000B4C 20 07                 3036 	jr	NZ, 00130$
      000B4E FAr8Cr00              3037 	ld	a, (#_yDir)
      000B51 B7                    3038 	or	a, a
                                   3039 ;src/main.c:241: return;
      000B52 CAr9Er0C              3040 	jp	Z,00195$
      000B55                       3041 00130$:
                                   3042 ;src/main.c:273: if (xDir == 0 && yDir > 0) {
      000B55 21r8Cr00              3043 	ld	hl, #_yDir
      000B58 5E                    3044 	ld	e, (hl)
      000B59 AF                    3045 	xor	a, a
      000B5A 57                    3046 	ld	d, a
      000B5B 96                    3047 	sub	a, (hl)
      000B5C CB 7B                 3048 	bit	7, e
      000B5E 28 07                 3049 	jr	Z, 00387$
      000B60 CB 7A                 3050 	bit	7, d
      000B62 20 08                 3051 	jr	NZ, 00388$
      000B64 BF                    3052 	cp	a, a
      000B65 18 05                 3053 	jr	00388$
      000B67                       3054 00387$:
      000B67 CB 7A                 3055 	bit	7, d
      000B69 28 01                 3056 	jr	Z, 00388$
      000B6B 37                    3057 	scf
      000B6C                       3058 00388$:
      000B6C 3E 00                 3059 	ld	a, #0x00
      000B6E 17                    3060 	rla
      000B6F 4F                    3061 	ld	c, a
      000B70 FAr8Br00              3062 	ld	a, (#_xDir)
      000B73 B7                    3063 	or	a,a
      000B74 20 1A                 3064 	jr	NZ, 00160$
      000B76 B1                    3065 	or	a,c
      000B77 28 17                 3066 	jr	Z, 00160$
                                   3067 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B79 21r02r00              3068 	ld	hl, #(_shadow_OAM + 2)
      000B7C 36 00                 3069 	ld	(hl), #0x00
      000B7E 21r06r00              3070 	ld	hl, #(_shadow_OAM + 6)
      000B81 36 02                 3071 	ld	(hl), #0x02
                                   3072 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B83 21r03r00              3073 	ld	hl, #(_shadow_OAM + 3)
      000B86 36 40                 3074 	ld	(hl), #0x40
      000B88 21r07r00              3075 	ld	hl, #(_shadow_OAM + 7)
      000B8B 36 40                 3076 	ld	(hl), #0x40
                                   3077 ;src/main.c:277: set_sprite_prop(1, S_FLIPY); 
      000B8D C3r9Er0C              3078 	jp	00195$
      000B90                       3079 00160$:
                                   3080 ;src/main.c:279: else if (xDir == 0 && yDir < 0) {
      000B90 FAr8Cr00              3081 	ld	a, (#_yDir)
      000B93 07                    3082 	rlca
      000B94 E6 01                 3083 	and	a,#0x01
      000B96 F8 02                 3084 	ldhl	sp,	#2
      000B98 77                    3085 	ld	(hl), a
      000B99 FAr8Br00              3086 	ld	a, (#_xDir)
      000B9C B7                    3087 	or	a, a
      000B9D 20 1D                 3088 	jr	NZ, 00156$
      000B9F F8 02                 3089 	ldhl	sp,	#2
      000BA1 7E                    3090 	ld	a, (hl)
      000BA2 B7                    3091 	or	a, a
      000BA3 28 17                 3092 	jr	Z, 00156$
                                   3093 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BA5 21r02r00              3094 	ld	hl, #(_shadow_OAM + 2)
      000BA8 36 00                 3095 	ld	(hl), #0x00
      000BAA 21r06r00              3096 	ld	hl, #(_shadow_OAM + 6)
      000BAD 36 02                 3097 	ld	(hl), #0x02
                                   3098 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BAF 21r03r00              3099 	ld	hl, #(_shadow_OAM + 3)
      000BB2 36 00                 3100 	ld	(hl), #0x00
      000BB4 21r07r00              3101 	ld	hl, #(_shadow_OAM + 7)
      000BB7 36 00                 3102 	ld	(hl), #0x00
                                   3103 ;src/main.c:283: set_sprite_prop(1, 0); 
      000BB9 C3r9Er0C              3104 	jp	00195$
      000BBC                       3105 00156$:
                                   3106 ;src/main.c:285: else if (xDir > 0 && yDir == 0) {
      000BBC 21r8Br00              3107 	ld	hl, #_xDir
      000BBF 5E                    3108 	ld	e, (hl)
      000BC0 AF                    3109 	xor	a, a
      000BC1 57                    3110 	ld	d, a
      000BC2 96                    3111 	sub	a, (hl)
      000BC3 CB 7B                 3112 	bit	7, e
      000BC5 28 07                 3113 	jr	Z, 00389$
      000BC7 CB 7A                 3114 	bit	7, d
      000BC9 20 08                 3115 	jr	NZ, 00390$
      000BCB BF                    3116 	cp	a, a
      000BCC 18 05                 3117 	jr	00390$
      000BCE                       3118 00389$:
      000BCE CB 7A                 3119 	bit	7, d
      000BD0 28 01                 3120 	jr	Z, 00390$
      000BD2 37                    3121 	scf
      000BD3                       3122 00390$:
      000BD3 3E 00                 3123 	ld	a, #0x00
      000BD5 17                    3124 	rla
      000BD6 47                    3125 	ld	b, a
      000BD7 B7                    3126 	or	a, a
      000BD8 28 1D                 3127 	jr	Z, 00152$
      000BDA FAr8Cr00              3128 	ld	a, (#_yDir)
      000BDD B7                    3129 	or	a, a
      000BDE 20 17                 3130 	jr	NZ, 00152$
                                   3131 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BE0 21r02r00              3132 	ld	hl, #(_shadow_OAM + 2)
      000BE3 36 04                 3133 	ld	(hl), #0x04
      000BE5 21r06r00              3134 	ld	hl, #(_shadow_OAM + 6)
      000BE8 36 06                 3135 	ld	(hl), #0x06
                                   3136 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BEA 21r03r00              3137 	ld	hl, #(_shadow_OAM + 3)
      000BED 36 00                 3138 	ld	(hl), #0x00
      000BEF 21r07r00              3139 	ld	hl, #(_shadow_OAM + 7)
      000BF2 36 00                 3140 	ld	(hl), #0x00
                                   3141 ;src/main.c:289: set_sprite_prop(1, 0); 
      000BF4 C3r9Er0C              3142 	jp	00195$
      000BF7                       3143 00152$:
                                   3144 ;src/main.c:291: else if (xDir < 0 && yDir == 0) {
      000BF7 FAr8Br00              3145 	ld	a, (#_xDir)
      000BFA 07                    3146 	rlca
      000BFB E6 01                 3147 	and	a,#0x01
      000BFD F8 03                 3148 	ldhl	sp,	#3
      000BFF 77                    3149 	ld	(hl), a
      000C00 7E                    3150 	ld	a, (hl)
      000C01 B7                    3151 	or	a, a
      000C02 28 1D                 3152 	jr	Z, 00148$
      000C04 FAr8Cr00              3153 	ld	a, (#_yDir)
      000C07 B7                    3154 	or	a, a
      000C08 20 17                 3155 	jr	NZ, 00148$
                                   3156 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C0A 21r02r00              3157 	ld	hl, #(_shadow_OAM + 2)
      000C0D 36 04                 3158 	ld	(hl), #0x04
      000C0F 21r06r00              3159 	ld	hl, #(_shadow_OAM + 6)
      000C12 36 06                 3160 	ld	(hl), #0x06
                                   3161 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C14 21r03r00              3162 	ld	hl, #(_shadow_OAM + 3)
      000C17 36 20                 3163 	ld	(hl), #0x20
      000C19 21r07r00              3164 	ld	hl, #(_shadow_OAM + 7)
      000C1C 36 20                 3165 	ld	(hl), #0x20
                                   3166 ;src/main.c:295: set_sprite_prop(1, S_FLIPX); 
      000C1E C3r9Er0C              3167 	jp	00195$
      000C21                       3168 00148$:
                                   3169 ;src/main.c:297: else if (xDir > 0 && yDir < 0) {
      000C21 78                    3170 	ld	a, b
      000C22 B7                    3171 	or	a, a
      000C23 28 1C                 3172 	jr	Z, 00144$
      000C25 F8 02                 3173 	ldhl	sp,	#2
      000C27 7E                    3174 	ld	a, (hl)
      000C28 B7                    3175 	or	a, a
      000C29 28 16                 3176 	jr	Z, 00144$
                                   3177 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C2B 21r02r00              3178 	ld	hl, #(_shadow_OAM + 2)
      000C2E 36 08                 3179 	ld	(hl), #0x08
      000C30 21r06r00              3180 	ld	hl, #(_shadow_OAM + 6)
      000C33 36 0A                 3181 	ld	(hl), #0x0a
                                   3182 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C35 21r03r00              3183 	ld	hl, #(_shadow_OAM + 3)
      000C38 36 00                 3184 	ld	(hl), #0x00
      000C3A 21r07r00              3185 	ld	hl, #(_shadow_OAM + 7)
      000C3D 36 00                 3186 	ld	(hl), #0x00
                                   3187 ;src/main.c:301: set_sprite_prop(1, 0); 
      000C3F 18 5D                 3188 	jr	00195$
      000C41                       3189 00144$:
                                   3190 ;src/main.c:303: else if (xDir > 0 && yDir > 0) {
      000C41 78                    3191 	ld	a, b
      000C42 B7                    3192 	or	a, a
      000C43 28 1A                 3193 	jr	Z, 00140$
      000C45 79                    3194 	ld	a, c
      000C46 B7                    3195 	or	a, a
      000C47 28 16                 3196 	jr	Z, 00140$
                                   3197 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C49 21r02r00              3198 	ld	hl, #(_shadow_OAM + 2)
      000C4C 36 08                 3199 	ld	(hl), #0x08
      000C4E 21r06r00              3200 	ld	hl, #(_shadow_OAM + 6)
      000C51 36 0A                 3201 	ld	(hl), #0x0a
                                   3202 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C53 21r03r00              3203 	ld	hl, #(_shadow_OAM + 3)
      000C56 36 40                 3204 	ld	(hl), #0x40
      000C58 21r07r00              3205 	ld	hl, #(_shadow_OAM + 7)
      000C5B 36 40                 3206 	ld	(hl), #0x40
                                   3207 ;src/main.c:307: set_sprite_prop(1, S_FLIPY); 
      000C5D 18 3F                 3208 	jr	00195$
      000C5F                       3209 00140$:
                                   3210 ;src/main.c:309: else if (xDir < 0 && yDir > 0) {
      000C5F F8 03                 3211 	ldhl	sp,	#3
      000C61 7E                    3212 	ld	a, (hl)
      000C62 B7                    3213 	or	a, a
      000C63 28 1A                 3214 	jr	Z, 00136$
      000C65 79                    3215 	ld	a, c
      000C66 B7                    3216 	or	a, a
      000C67 28 16                 3217 	jr	Z, 00136$
                                   3218 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C69 21r02r00              3219 	ld	hl, #(_shadow_OAM + 2)
      000C6C 36 08                 3220 	ld	(hl), #0x08
      000C6E 21r06r00              3221 	ld	hl, #(_shadow_OAM + 6)
      000C71 36 0A                 3222 	ld	(hl), #0x0a
                                   3223 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C73 21r03r00              3224 	ld	hl, #(_shadow_OAM + 3)
      000C76 36 60                 3225 	ld	(hl), #0x60
      000C78 21r07r00              3226 	ld	hl, #(_shadow_OAM + 7)
      000C7B 36 60                 3227 	ld	(hl), #0x60
                                   3228 ;src/main.c:313: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000C7D 18 1F                 3229 	jr	00195$
      000C7F                       3230 00136$:
                                   3231 ;src/main.c:315: else if (xDir < 0 && yDir < 0) {
      000C7F F8 03                 3232 	ldhl	sp,	#3
      000C81 7E                    3233 	ld	a, (hl)
      000C82 B7                    3234 	or	a, a
      000C83 28 19                 3235 	jr	Z, 00195$
      000C85 2B                    3236 	dec	hl
      000C86 7E                    3237 	ld	a, (hl)
      000C87 B7                    3238 	or	a, a
      000C88 28 14                 3239 	jr	Z, 00195$
                                   3240 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C8A 21r02r00              3241 	ld	hl, #(_shadow_OAM + 2)
      000C8D 36 08                 3242 	ld	(hl), #0x08
      000C8F 21r06r00              3243 	ld	hl, #(_shadow_OAM + 6)
      000C92 36 0A                 3244 	ld	(hl), #0x0a
                                   3245 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C94 21r03r00              3246 	ld	hl, #(_shadow_OAM + 3)
      000C97 36 20                 3247 	ld	(hl), #0x20
      000C99 21r07r00              3248 	ld	hl, #(_shadow_OAM + 7)
      000C9C 36 20                 3249 	ld	(hl), #0x20
                                   3250 ;src/main.c:319: set_sprite_prop(1, S_FLIPX); 
      000C9E                       3251 00195$:
                                   3252 ;src/main.c:321: }
      000C9E E8 04                 3253 	add	sp, #4
      000CA0 C9                    3254 	ret
                                   3255 ;src/main.c:350: void playSound(uint8_t type) {
                                   3256 ;	---------------------------------
                                   3257 ; Function playSound
                                   3258 ; ---------------------------------
      000CA1                       3259 _playSound::
                                   3260 ;src/main.c:351: if (type == 20) { //singlegun
      000CA1 F8 02                 3261 	ldhl	sp,	#2
      000CA3 7E                    3262 	ld	a, (hl)
      000CA4 D6 14                 3263 	sub	a, #0x14
      000CA6 20 13                 3264 	jr	NZ, 00102$
                                   3265 ;src/main.c:352: NR10_REG = 0x00;
      000CA8 AF                    3266 	xor	a, a
      000CA9 E0r00                 3267 	ldh	(_NR10_REG + 0), a
                                   3268 ;src/main.c:353: NR11_REG = 0x81;
      000CAB 3E 81                 3269 	ld	a, #0x81
      000CAD E0r00                 3270 	ldh	(_NR11_REG + 0), a
                                   3271 ;src/main.c:354: NR12_REG = 0x43;
      000CAF 3E 43                 3272 	ld	a, #0x43
      000CB1 E0r00                 3273 	ldh	(_NR12_REG + 0), a
                                   3274 ;src/main.c:355: NR13_REG = 0X00;//0x6D;
      000CB3 AF                    3275 	xor	a, a
      000CB4 E0r00                 3276 	ldh	(_NR13_REG + 0), a
                                   3277 ;src/main.c:356: NR14_REG = 0x86;
      000CB6 3E 86                 3278 	ld	a, #0x86
      000CB8 E0r00                 3279 	ldh	(_NR14_REG + 0), a
                                   3280 ;src/main.c:357: return;
      000CBA C9                    3281 	ret
      000CBB                       3282 00102$:
                                   3283 ;src/main.c:359: if (type == 23) {
      000CBB F8 02                 3284 	ldhl	sp,	#2
      000CBD 7E                    3285 	ld	a, (hl)
      000CBE D6 17                 3286 	sub	a, #0x17
      000CC0 20 12                 3287 	jr	NZ, 00104$
                                   3288 ;src/main.c:360: NR10_REG = 0x00;
      000CC2 AF                    3289 	xor	a, a
      000CC3 E0r00                 3290 	ldh	(_NR10_REG + 0), a
                                   3291 ;src/main.c:361: NR11_REG = 0x81;
      000CC5 3E 81                 3292 	ld	a, #0x81
      000CC7 E0r00                 3293 	ldh	(_NR11_REG + 0), a
                                   3294 ;src/main.c:362: NR12_REG = 0x53;
      000CC9 3E 53                 3295 	ld	a, #0x53
      000CCB E0r00                 3296 	ldh	(_NR12_REG + 0), a
                                   3297 ;src/main.c:363: NR13_REG = 0X00;//0x6D;
      000CCD AF                    3298 	xor	a, a
      000CCE E0r00                 3299 	ldh	(_NR13_REG + 0), a
                                   3300 ;src/main.c:364: NR14_REG = 0x86;
      000CD0 3E 86                 3301 	ld	a, #0x86
      000CD2 E0r00                 3302 	ldh	(_NR14_REG + 0), a
      000CD4                       3303 00104$:
                                   3304 ;src/main.c:366: if (type == 26) {
      000CD4 F8 02                 3305 	ldhl	sp,	#2
      000CD6 7E                    3306 	ld	a, (hl)
      000CD7 D6 1A                 3307 	sub	a, #0x1a
      000CD9 20 13                 3308 	jr	NZ, 00106$
                                   3309 ;src/main.c:367: NR10_REG = 0x00;
      000CDB AF                    3310 	xor	a, a
      000CDC E0r00                 3311 	ldh	(_NR10_REG + 0), a
                                   3312 ;src/main.c:368: NR11_REG = 0x89;
      000CDE 3E 89                 3313 	ld	a, #0x89
      000CE0 E0r00                 3314 	ldh	(_NR11_REG + 0), a
                                   3315 ;src/main.c:369: NR12_REG = 0x55;
      000CE2 3E 55                 3316 	ld	a, #0x55
      000CE4 E0r00                 3317 	ldh	(_NR12_REG + 0), a
                                   3318 ;src/main.c:370: NR13_REG = 0x70;//0Xbe;//0x6D;
      000CE6 3E 70                 3319 	ld	a, #0x70
      000CE8 E0r00                 3320 	ldh	(_NR13_REG + 0), a
                                   3321 ;src/main.c:371: NR14_REG = 0x84;
      000CEA 3E 84                 3322 	ld	a, #0x84
      000CEC E0r00                 3323 	ldh	(_NR14_REG + 0), a
      000CEE                       3324 00106$:
                                   3325 ;src/main.c:373: if (type == 0) {  // explosion
      000CEE F8 02                 3326 	ldhl	sp,	#2
      000CF0 7E                    3327 	ld	a, (hl)
      000CF1 B7                    3328 	or	a, a
      000CF2 C0                    3329 	ret	NZ
                                   3330 ;src/main.c:374: NR41_REG = 0x20;  
      000CF3 3E 20                 3331 	ld	a, #0x20
      000CF5 E0r00                 3332 	ldh	(_NR41_REG + 0), a
                                   3333 ;src/main.c:375: NR42_REG = 0xa2;//0xa3;  
      000CF7 3E A2                 3334 	ld	a, #0xa2
      000CF9 E0r00                 3335 	ldh	(_NR42_REG + 0), a
                                   3336 ;src/main.c:376: NR43_REG = 0x57;  
      000CFB 3E 57                 3337 	ld	a, #0x57
      000CFD E0r00                 3338 	ldh	(_NR43_REG + 0), a
                                   3339 ;src/main.c:377: NR44_REG = 0x80;  
      000CFF 3E 80                 3340 	ld	a, #0x80
      000D01 E0r00                 3341 	ldh	(_NR44_REG + 0), a
                                   3342 ;src/main.c:383: }
      000D03 C9                    3343 	ret
                                   3344 ;src/main.c:385: void initEnemies(uint8_t loadSprites) {
                                   3345 ;	---------------------------------
                                   3346 ; Function initEnemies
                                   3347 ; ---------------------------------
      000D04                       3348 _initEnemies::
      000D04 E8 F9                 3349 	add	sp, #-7
                                   3350 ;src/main.c:387: if (loadSprites) {
      000D06 F8 09                 3351 	ldhl	sp,	#9
      000D08 7E                    3352 	ld	a, (hl)
      000D09 B7                    3353 	or	a, a
      000D0A 28 1A                 3354 	jr	Z, 00102$
                                   3355 ;src/main.c:389: set_sprite_data(0x40, 5, enemy1);
      000D0C 11r18r05              3356 	ld	de, #_enemy1
      000D0F D5                    3357 	push	de
      000D10 21 40 05              3358 	ld	hl, #0x540
      000D13 E5                    3359 	push	hl
      000D14 CDr00r00              3360 	call	_set_sprite_data
      000D17 E8 04                 3361 	add	sp, #4
                                   3362 ;src/main.c:390: set_sprite_data(0x50, 8, largeenemies);
      000D19 11r68r05              3363 	ld	de, #_largeenemies
      000D1C D5                    3364 	push	de
      000D1D 21 50 08              3365 	ld	hl, #0x850
      000D20 E5                    3366 	push	hl
      000D21 CDr00r00              3367 	call	_set_sprite_data
      000D24 E8 04                 3368 	add	sp, #4
      000D26                       3369 00102$:
                                   3370 ;src/main.c:393: struct Enemy *eptr = enemies;
      000D26 01r55r00              3371 	ld	bc, #_enemies+0
                                   3372 ;src/main.c:395: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D29 F8 06                 3373 	ldhl	sp,	#6
      000D2B 36 00                 3374 	ld	(hl), #0x00
      000D2D                       3375 00116$:
      000D2D 21r88r08              3376 	ld	hl, #_ENEMYCOUNT
      000D30 5E                    3377 	ld	e, (hl)
      000D31 F8 06                 3378 	ldhl	sp,	#6
      000D33 7E                    3379 	ld	a, (hl)
      000D34 93                    3380 	sub	a, e
      000D35 D2r6Cr0E              3381 	jp	NC, 00118$
                                   3382 ;src/main.c:396: if (eptr->alive == 0) {
      000D38 21 09 00              3383 	ld	hl, #0x0009
      000D3B 09                    3384 	add	hl, bc
      000D3C 7E                    3385 	ld	a, (hl)
      000D3D B7                    3386 	or	a, a
      000D3E C2r60r0E              3387 	jp	NZ, 00107$
                                   3388 ;src/main.c:398: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      000D41 C5                    3389 	push	bc
      000D42 CDr00r00              3390 	call	_rand
      000D45 7B                    3391 	ld	a, e
      000D46 C1                    3392 	pop	bc
      000D47 21r17r05              3393 	ld	hl, #_enemyOptionCount
      000D4A 56                    3394 	ld	d, (hl)
      000D4B C5                    3395 	push	bc
      000D4C D5                    3396 	push	de
      000D4D 33                    3397 	inc	sp
      000D4E F5                    3398 	push	af
      000D4F 33                    3399 	inc	sp
      000D50 CDr00r00              3400 	call	__moduchar
      000D53 E1                    3401 	pop	hl
      000D54 7B                    3402 	ld	a, e
      000D55 C1                    3403 	pop	bc
                                   3404 ;src/main.c:400: (*eptr) = enemyOptions[enemyInd];
      000D56 5F                    3405 	ld	e, a
      000D57 16 00                 3406 	ld	d, #0x00
      000D59 6B                    3407 	ld	l, e
      000D5A 62                    3408 	ld	h, d
      000D5B 29                    3409 	add	hl, hl
      000D5C 29                    3410 	add	hl, hl
      000D5D 29                    3411 	add	hl, hl
      000D5E 29                    3412 	add	hl, hl
      000D5F 19                    3413 	add	hl, de
      000D60 11r00r00              3414 	ld	de, #_enemyOptions
      000D63 19                    3415 	add	hl, de
      000D64 59                    3416 	ld	e, c
      000D65 50                    3417 	ld	d, b
      000D66 C5                    3418 	push	bc
      000D67 01 11 00              3419 	ld	bc, #0x11
      000D6A C5                    3420 	push	bc
      000D6B E5                    3421 	push	hl
      000D6C D5                    3422 	push	de
      000D6D CDr00r00              3423 	call	___memcpy
      000D70 E8 06                 3424 	add	sp, #6
      000D72 CDr00r00              3425 	call	_rand
      000D75 7B                    3426 	ld	a, e
      000D76 C1                    3427 	pop	bc
      000D77 E6 07                 3428 	and	a, #0x07
      000D79 F8 05                 3429 	ldhl	sp,	#5
      000D7B 77                    3430 	ld	(hl), a
                                   3431 ;src/main.c:403: eptr->x = xSpawnPositions[posIndex];
      000D7C 11r89r08              3432 	ld	de, #_xSpawnPositions
      000D7F 6E                    3433 	ld	l, (hl)
      000D80 26 00                 3434 	ld	h, #0x00
      000D82 19                    3435 	add	hl, de
      000D83 5D                    3436 	ld	e, l
      000D84 54                    3437 	ld	d, h
      000D85 1A                    3438 	ld	a, (de)
      000D86 5F                    3439 	ld	e, a
      000D87 16 00                 3440 	ld	d, #0x00
      000D89 69                    3441 	ld	l, c
      000D8A 60                    3442 	ld	h, b
      000D8B 7B                    3443 	ld	a, e
      000D8C 22                    3444 	ld	(hl+), a
      000D8D 72                    3445 	ld	(hl), d
                                   3446 ;src/main.c:404: eptr->y = ySpawnPositions[posIndex];
      000D8E 21 02 00              3447 	ld	hl, #0x0002
      000D91 09                    3448 	add	hl, bc
      000D92 33                    3449 	inc	sp
      000D93 33                    3450 	inc	sp
      000D94 E5                    3451 	push	hl
      000D95 11r91r08              3452 	ld	de, #_ySpawnPositions
      000D98 F8 05                 3453 	ldhl	sp,	#5
      000D9A 6E                    3454 	ld	l, (hl)
      000D9B 26 00                 3455 	ld	h, #0x00
      000D9D 19                    3456 	add	hl, de
      000D9E 5D                    3457 	ld	e, l
      000D9F 54                    3458 	ld	d, h
      000DA0 1A                    3459 	ld	a, (de)
      000DA1 F8 04                 3460 	ldhl	sp,	#4
      000DA3 22                    3461 	ld	(hl+), a
      000DA4 AF                    3462 	xor	a, a
      000DA5 32                    3463 	ld	(hl-), a
      000DA6 D1                    3464 	pop	de
      000DA7 D5                    3465 	push	de
      000DA8 2A                    3466 	ld	a, (hl+)
      000DA9 12                    3467 	ld	(de), a
      000DAA 13                    3468 	inc	de
      000DAB 7E                    3469 	ld	a, (hl)
      000DAC 12                    3470 	ld	(de), a
                                   3471 ;src/main.c:406: if (eptr->spriteCount == 1) {
      000DAD 21 08 00              3472 	ld	hl, #0x0008
      000DB0 09                    3473 	add	hl, bc
      000DB1 7E                    3474 	ld	a, (hl)
      000DB2 F8 05                 3475 	ldhl	sp,	#5
      000DB4 77                    3476 	ld	(hl), a
                                   3477 ;src/main.c:407: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DB5 21 06 00              3478 	ld	hl, #0x0006
      000DB8 09                    3479 	add	hl, bc
      000DB9 5D                    3480 	ld	e, l
      000DBA 54                    3481 	ld	d, h
      000DBB F8 06                 3482 	ldhl	sp,	#6
      000DBD 6E                    3483 	ld	l, (hl)
                                   3484 ;	spillPairReg hl
                                   3485 ;	spillPairReg hl
      000DBE 1A                    3486 	ld	a, (de)
      000DBF 5F                    3487 	ld	e, a
      000DC0 7D                    3488 	ld	a, l
      000DC1 87                    3489 	add	a, a
      000DC2 F8 02                 3490 	ldhl	sp,	#2
      000DC4 77                    3491 	ld	(hl), a
      000DC5 2A                    3492 	ld	a, (hl+)
      000DC6 C6 0A                 3493 	add	a, #0x0a
                                   3494 ;src/main.c:406: if (eptr->spriteCount == 1) {
      000DC8 22                    3495 	ld	(hl+), a
      000DC9 23                    3496 	inc	hl
      000DCA 7E                    3497 	ld	a, (hl)
      000DCB 3D                    3498 	dec	a
      000DCC 20 2D                 3499 	jr	NZ, 00104$
                                   3500 ;src/main.c:407: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DCE F8 03                 3501 	ldhl	sp,	#3
      000DD0 56                    3502 	ld	d, (hl)
                                   3503 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DD1 6A                    3504 	ld	l, d
                                   3505 ;	spillPairReg hl
                                   3506 ;	spillPairReg hl
      000DD2 26 00                 3507 	ld	h, #0x00
                                   3508 ;	spillPairReg hl
                                   3509 ;	spillPairReg hl
      000DD4 29                    3510 	add	hl, hl
      000DD5 29                    3511 	add	hl, hl
      000DD6 D5                    3512 	push	de
      000DD7 11r00r00              3513 	ld	de, #_shadow_OAM
      000DDA 19                    3514 	add	hl, de
      000DDB 23                    3515 	inc	hl
      000DDC 23                    3516 	inc	hl
      000DDD D1                    3517 	pop	de
      000DDE 73                    3518 	ld	(hl), e
                                   3519 ;src/main.c:408: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DDF D1                    3520 	pop	de
      000DE0 D5                    3521 	push	de
      000DE1 1A                    3522 	ld	a, (de)
      000DE2 F8 05                 3523 	ldhl	sp,	#5
      000DE4 32                    3524 	ld	(hl-), a
      000DE5 0A                    3525 	ld	a, (bc)
      000DE6 32                    3526 	ld	(hl-), a
                                   3527 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DE7 6E                    3528 	ld	l, (hl)
                                   3529 ;	spillPairReg hl
                                   3530 ;	spillPairReg hl
      000DE8 26 00                 3531 	ld	h, #0x00
                                   3532 ;	spillPairReg hl
                                   3533 ;	spillPairReg hl
      000DEA 29                    3534 	add	hl, hl
      000DEB 29                    3535 	add	hl, hl
      000DEC 11r00r00              3536 	ld	de, #_shadow_OAM
      000DEF 19                    3537 	add	hl, de
      000DF0 5D                    3538 	ld	e, l
      000DF1 54                    3539 	ld	d, h
                                   3540 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DF2 F8 05                 3541 	ldhl	sp,	#5
      000DF4 3A                    3542 	ld	a, (hl-)
      000DF5 12                    3543 	ld	(de), a
      000DF6 13                    3544 	inc	de
      000DF7 7E                    3545 	ld	a, (hl)
      000DF8 12                    3546 	ld	(de), a
                                   3547 ;src/main.c:408: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DF9 18 65                 3548 	jr	00107$
      000DFB                       3549 00104$:
                                   3550 ;src/main.c:411: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DFB F8 03                 3551 	ldhl	sp,	#3
      000DFD 56                    3552 	ld	d, (hl)
                                   3553 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DFE 6A                    3554 	ld	l, d
                                   3555 ;	spillPairReg hl
                                   3556 ;	spillPairReg hl
      000DFF 26 00                 3557 	ld	h, #0x00
                                   3558 ;	spillPairReg hl
                                   3559 ;	spillPairReg hl
      000E01 29                    3560 	add	hl, hl
      000E02 29                    3561 	add	hl, hl
      000E03 D5                    3562 	push	de
      000E04 11r00r00              3563 	ld	de, #_shadow_OAM
      000E07 19                    3564 	add	hl, de
      000E08 23                    3565 	inc	hl
      000E09 23                    3566 	inc	hl
      000E0A D1                    3567 	pop	de
      000E0B 73                    3568 	ld	(hl), e
                                   3569 ;src/main.c:412: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000E0C D1                    3570 	pop	de
      000E0D D5                    3571 	push	de
      000E0E 1A                    3572 	ld	a, (de)
      000E0F F8 04                 3573 	ldhl	sp,	#4
      000E11 22                    3574 	ld	(hl+), a
      000E12 0A                    3575 	ld	a, (bc)
      000E13 32                    3576 	ld	(hl-), a
      000E14 2B                    3577 	dec	hl
      000E15 5E                    3578 	ld	e, (hl)
                                   3579 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E16 26 00                 3580 	ld	h, #0x00
                                   3581 ;	spillPairReg hl
                                   3582 ;	spillPairReg hl
      000E18 6B                    3583 	ld	l, e
      000E19 29                    3584 	add	hl, hl
      000E1A 29                    3585 	add	hl, hl
      000E1B 11r00r00              3586 	ld	de, #_shadow_OAM
      000E1E 19                    3587 	add	hl, de
      000E1F 5D                    3588 	ld	e, l
      000E20 54                    3589 	ld	d, h
                                   3590 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E21 F8 04                 3591 	ldhl	sp,	#4
      000E23 2A                    3592 	ld	a, (hl+)
      000E24 12                    3593 	ld	(de), a
      000E25 13                    3594 	inc	de
      000E26 7E                    3595 	ld	a, (hl)
      000E27 12                    3596 	ld	(de), a
                                   3597 ;src/main.c:414: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      000E28 21 07 00              3598 	ld	hl, #0x0007
      000E2B 09                    3599 	add	hl, bc
      000E2C 5E                    3600 	ld	e, (hl)
      000E2D F8 02                 3601 	ldhl	sp,	#2
      000E2F 7E                    3602 	ld	a, (hl)
      000E30 C6 0B                 3603 	add	a, #0x0b
      000E32 F8 05                 3604 	ldhl	sp,	#5
      000E34 77                    3605 	ld	(hl), a
      000E35 56                    3606 	ld	d, (hl)
                                   3607 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E36 6A                    3608 	ld	l, d
                                   3609 ;	spillPairReg hl
                                   3610 ;	spillPairReg hl
      000E37 26 00                 3611 	ld	h, #0x00
                                   3612 ;	spillPairReg hl
                                   3613 ;	spillPairReg hl
      000E39 29                    3614 	add	hl, hl
      000E3A 29                    3615 	add	hl, hl
      000E3B D5                    3616 	push	de
      000E3C 11r00r00              3617 	ld	de, #_shadow_OAM
      000E3F 19                    3618 	add	hl, de
      000E40 23                    3619 	inc	hl
      000E41 23                    3620 	inc	hl
      000E42 D1                    3621 	pop	de
      000E43 73                    3622 	ld	(hl), e
                                   3623 ;src/main.c:415: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E44 D1                    3624 	pop	de
      000E45 D5                    3625 	push	de
      000E46 1A                    3626 	ld	a, (de)
      000E47 F8 04                 3627 	ldhl	sp,	#4
      000E49 32                    3628 	ld	(hl-), a
      000E4A 0A                    3629 	ld	a, (bc)
      000E4B 22                    3630 	ld	(hl+), a
      000E4C 23                    3631 	inc	hl
      000E4D 5E                    3632 	ld	e, (hl)
                                   3633 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E4E 26 00                 3634 	ld	h, #0x00
                                   3635 ;	spillPairReg hl
                                   3636 ;	spillPairReg hl
      000E50 6B                    3637 	ld	l, e
      000E51 29                    3638 	add	hl, hl
      000E52 29                    3639 	add	hl, hl
      000E53 11r00r00              3640 	ld	de, #_shadow_OAM
      000E56 19                    3641 	add	hl, de
      000E57 5D                    3642 	ld	e, l
      000E58 54                    3643 	ld	d, h
                                   3644 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E59 F8 04                 3645 	ldhl	sp,	#4
      000E5B 3A                    3646 	ld	a, (hl-)
      000E5C 12                    3647 	ld	(de), a
      000E5D 13                    3648 	inc	de
      000E5E 7E                    3649 	ld	a, (hl)
      000E5F 12                    3650 	ld	(de), a
                                   3651 ;src/main.c:415: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E60                       3652 00107$:
                                   3653 ;src/main.c:420: eptr++;
      000E60 21 11 00              3654 	ld	hl, #0x0011
      000E63 09                    3655 	add	hl, bc
      000E64 4D                    3656 	ld	c, l
      000E65 44                    3657 	ld	b, h
                                   3658 ;src/main.c:395: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E66 F8 06                 3659 	ldhl	sp,	#6
      000E68 34                    3660 	inc	(hl)
      000E69 C3r2Dr0D              3661 	jp	00116$
      000E6C                       3662 00118$:
                                   3663 ;src/main.c:423: }
      000E6C E8 07                 3664 	add	sp, #7
      000E6E C9                    3665 	ret
                                   3666 ;src/main.c:426: void updateEnemyPositions() {
                                   3667 ;	---------------------------------
                                   3668 ; Function updateEnemyPositions
                                   3669 ; ---------------------------------
      000E6F                       3670 _updateEnemyPositions::
      000E6F E8 F0                 3671 	add	sp, #-16
                                   3672 ;src/main.c:429: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E71 F8 0F                 3673 	ldhl	sp,	#15
      000E73 36 00                 3674 	ld	(hl), #0x00
      000E75                       3675 00196$:
      000E75 21r88r08              3676 	ld	hl, #_ENEMYCOUNT
      000E78 4E                    3677 	ld	c, (hl)
      000E79 F8 0F                 3678 	ldhl	sp,	#15
      000E7B 7E                    3679 	ld	a, (hl)
      000E7C 91                    3680 	sub	a, c
      000E7D D2r21r13              3681 	jp	NC, 00134$
                                   3682 ;src/main.c:430: if (!enemies[i].alive) {
      000E80 4E                    3683 	ld	c, (hl)
      000E81 06 00                 3684 	ld	b, #0x00
      000E83 69                    3685 	ld	l, c
      000E84 60                    3686 	ld	h, b
      000E85 29                    3687 	add	hl, hl
      000E86 29                    3688 	add	hl, hl
      000E87 29                    3689 	add	hl, hl
      000E88 29                    3690 	add	hl, hl
      000E89 09                    3691 	add	hl, bc
                                   3692 ;src/main.c:438: if (enemies[i].x < playerDrawX) {
      000E8A 01r55r00              3693 	ld	bc,#_enemies
      000E8D 09                    3694 	add	hl,bc
      000E8E E5                    3695 	push	hl
      000E8F 7D                    3696 	ld	a, l
      000E90 F8 04                 3697 	ldhl	sp,	#4
      000E92 77                    3698 	ld	(hl), a
      000E93 E1                    3699 	pop	hl
      000E94 7C                    3700 	ld	a, h
      000E95 F8 03                 3701 	ldhl	sp,	#3
                                   3702 ;src/main.c:430: if (!enemies[i].alive) {
      000E97 32                    3703 	ld	(hl-), a
      000E98 2A                    3704 	ld	a, (hl+)
      000E99 5F                    3705 	ld	e, a
      000E9A 56                    3706 	ld	d, (hl)
      000E9B 21 09 00              3707 	ld	hl, #0x0009
      000E9E 19                    3708 	add	hl, de
      000E9F 4D                    3709 	ld	c, l
      000EA0 44                    3710 	ld	b, h
      000EA1 0A                    3711 	ld	a, (bc)
      000EA2 B7                    3712 	or	a, a
      000EA3 CAr1Br13              3713 	jp	Z, 00133$
                                   3714 ;src/main.c:433: enemies[i].x -= xOverflow;
      000EA6 F8 02                 3715 	ldhl	sp,#2
      000EA8 2A                    3716 	ld	a, (hl+)
      000EA9 5F                    3717 	ld	e, a
      000EAA 56                    3718 	ld	d, (hl)
      000EAB 1A                    3719 	ld	a, (de)
      000EAC 4F                    3720 	ld	c, a
      000EAD 13                    3721 	inc	de
      000EAE 1A                    3722 	ld	a, (de)
      000EAF 47                    3723 	ld	b, a
      000EB0 21r99r00              3724 	ld	hl, #_xOverflow
      000EB3 2A                    3725 	ld	a, (hl+)
      000EB4 5F                    3726 	ld	e, a
      000EB5 56                    3727 	ld	d, (hl)
      000EB6 79                    3728 	ld	a, c
      000EB7 93                    3729 	sub	a, e
      000EB8 5F                    3730 	ld	e, a
      000EB9 78                    3731 	ld	a, b
      000EBA 9A                    3732 	sbc	a, d
      000EBB F8 0E                 3733 	ldhl	sp,	#14
      000EBD 32                    3734 	ld	(hl-), a
      000EBE 73                    3735 	ld	(hl), e
      000EBF F8 02                 3736 	ldhl	sp,#2
      000EC1 2A                    3737 	ld	a, (hl+)
      000EC2 5F                    3738 	ld	e, a
      000EC3 56                    3739 	ld	d, (hl)
      000EC4 F8 0D                 3740 	ldhl	sp,	#13
      000EC6 2A                    3741 	ld	a, (hl+)
      000EC7 12                    3742 	ld	(de), a
      000EC8 13                    3743 	inc	de
      000EC9 7E                    3744 	ld	a, (hl)
      000ECA 12                    3745 	ld	(de), a
                                   3746 ;src/main.c:434: enemies[i].y -= yOverflow;
      000ECB F8 02                 3747 	ldhl	sp,#2
      000ECD 2A                    3748 	ld	a, (hl+)
      000ECE 5F                    3749 	ld	e, a
      000ECF 56                    3750 	ld	d, (hl)
      000ED0 21 02 00              3751 	ld	hl, #0x0002
      000ED3 19                    3752 	add	hl, de
      000ED4 E5                    3753 	push	hl
      000ED5 7D                    3754 	ld	a, l
      000ED6 F8 06                 3755 	ldhl	sp,	#6
      000ED8 77                    3756 	ld	(hl), a
      000ED9 E1                    3757 	pop	hl
      000EDA 7C                    3758 	ld	a, h
      000EDB F8 05                 3759 	ldhl	sp,	#5
      000EDD 32                    3760 	ld	(hl-), a
      000EDE 2A                    3761 	ld	a, (hl+)
      000EDF 5F                    3762 	ld	e, a
      000EE0 56                    3763 	ld	d, (hl)
      000EE1 1A                    3764 	ld	a, (de)
      000EE2 4F                    3765 	ld	c, a
      000EE3 13                    3766 	inc	de
      000EE4 1A                    3767 	ld	a, (de)
      000EE5 47                    3768 	ld	b, a
      000EE6 79                    3769 	ld	a, c
      000EE7 21r9Br00              3770 	ld	hl, #_yOverflow
      000EEA 96                    3771 	sub	a, (hl)
      000EEB 23                    3772 	inc	hl
      000EEC 4F                    3773 	ld	c, a
      000EED 78                    3774 	ld	a, b
      000EEE 9E                    3775 	sbc	a, (hl)
      000EEF 47                    3776 	ld	b, a
      000EF0 F8 04                 3777 	ldhl	sp,	#4
      000EF2 2A                    3778 	ld	a,	(hl+)
      000EF3 66                    3779 	ld	h, (hl)
      000EF4 6F                    3780 	ld	l, a
      000EF5 79                    3781 	ld	a, c
      000EF6 22                    3782 	ld	(hl+), a
      000EF7 70                    3783 	ld	(hl), b
                                   3784 ;src/main.c:437: if (abs(enemies[i].x - playerDrawX) > 8) {
      000EF8 F8 0D                 3785 	ldhl	sp,	#13
      000EFA 7E                    3786 	ld	a, (hl)
      000EFB 21r93r00              3787 	ld	hl, #_playerDrawX
      000EFE 4E                    3788 	ld	c, (hl)
      000EFF 91                    3789 	sub	a, c
      000F00 4F                    3790 	ld	c, a
                                   3791 ;src/main.c:345: if (value >= 0) return value;
      000F01 CB 79                 3792 	bit	7, c
      000F03 20 03                 3793 	jr	NZ, 00169$
      000F05 41                    3794 	ld	b, c
      000F06 18 03                 3795 	jr	00171$
      000F08                       3796 00169$:
                                   3797 ;src/main.c:346: else return - value;
      000F08 AF                    3798 	xor	a, a
      000F09 91                    3799 	sub	a, c
      000F0A 47                    3800 	ld	b, a
                                   3801 ;src/main.c:437: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F0B                       3802 00171$:
                                   3803 ;src/main.c:452: enemies[i].ySpeed += enemies[i].accel;
      000F0B F8 02                 3804 	ldhl	sp,#2
      000F0D 2A                    3805 	ld	a, (hl+)
      000F0E 5F                    3806 	ld	e, a
      000F0F 56                    3807 	ld	d, (hl)
      000F10 21 0D 00              3808 	ld	hl, #0x000d
      000F13 19                    3809 	add	hl, de
      000F14 33                    3810 	inc	sp
      000F15 33                    3811 	inc	sp
      000F16 E5                    3812 	push	hl
                                   3813 ;src/main.c:439: enemies[i].xSpeed += enemies[i].accel;
      000F17 F8 02                 3814 	ldhl	sp,#2
      000F19 2A                    3815 	ld	a, (hl+)
      000F1A 5F                    3816 	ld	e, a
      000F1B 56                    3817 	ld	d, (hl)
      000F1C 21 0E 00              3818 	ld	hl, #0x000e
      000F1F 19                    3819 	add	hl, de
      000F20 E5                    3820 	push	hl
      000F21 7D                    3821 	ld	a, l
      000F22 F8 08                 3822 	ldhl	sp,	#8
      000F24 77                    3823 	ld	(hl), a
      000F25 E1                    3824 	pop	hl
      000F26 7C                    3825 	ld	a, h
      000F27 F8 07                 3826 	ldhl	sp,	#7
                                   3827 ;src/main.c:446: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F29 32                    3828 	ld	(hl-), a
      000F2A 2A                    3829 	ld	a, (hl+)
      000F2B 5F                    3830 	ld	e, a
      000F2C 56                    3831 	ld	d, (hl)
      000F2D 1A                    3832 	ld	a, (de)
      000F2E 4F                    3833 	ld	c, a
                                   3834 ;src/main.c:437: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F2F 58                    3835 	ld	e, b
      000F30 3E 08                 3836 	ld	a,#0x08
      000F32 57                    3837 	ld	d,a
      000F33 90                    3838 	sub	a, b
      000F34 CB 7B                 3839 	bit	7, e
      000F36 28 07                 3840 	jr	Z, 00407$
      000F38 CB 7A                 3841 	bit	7, d
      000F3A 20 08                 3842 	jr	NZ, 00408$
      000F3C BF                    3843 	cp	a, a
      000F3D 18 05                 3844 	jr	00408$
      000F3F                       3845 00407$:
      000F3F CB 7A                 3846 	bit	7, d
      000F41 28 01                 3847 	jr	Z, 00408$
      000F43 37                    3848 	scf
      000F44                       3849 00408$:
      000F44 30 4E                 3850 	jr	NC, 00111$
                                   3851 ;src/main.c:438: if (enemies[i].x < playerDrawX) {
      000F46 F8 02                 3852 	ldhl	sp,#2
      000F48 2A                    3853 	ld	a, (hl+)
      000F49 5F                    3854 	ld	e, a
      000F4A 56                    3855 	ld	d, (hl)
      000F4B 1A                    3856 	ld	a, (de)
      000F4C F8 0B                 3857 	ldhl	sp,	#11
      000F4E 22                    3858 	ld	(hl+), a
      000F4F 13                    3859 	inc	de
      000F50 1A                    3860 	ld	a, (de)
      000F51 77                    3861 	ld	(hl), a
      000F52 FAr93r00              3862 	ld	a, (#_playerDrawX)
      000F55 F8 0D                 3863 	ldhl	sp,	#13
      000F57 22                    3864 	ld	(hl+), a
      000F58 36 00                 3865 	ld	(hl), #0x00
                                   3866 ;src/main.c:439: enemies[i].xSpeed += enemies[i].accel;
      000F5A D1                    3867 	pop	de
      000F5B D5                    3868 	push	de
      000F5C 1A                    3869 	ld	a, (de)
      000F5D 47                    3870 	ld	b, a
                                   3871 ;src/main.c:438: if (enemies[i].x < playerDrawX) {
      000F5E F8 0B                 3872 	ldhl	sp,	#11
      000F60 5D                    3873 	ld	e, l
      000F61 54                    3874 	ld	d, h
      000F62 F8 0D                 3875 	ldhl	sp,	#13
      000F64 1A                    3876 	ld	a, (de)
      000F65 13                    3877 	inc	de
      000F66 96                    3878 	sub	a, (hl)
      000F67 23                    3879 	inc	hl
      000F68 1A                    3880 	ld	a, (de)
      000F69 9E                    3881 	sbc	a, (hl)
      000F6A 1A                    3882 	ld	a, (de)
      000F6B 57                    3883 	ld	d, a
      000F6C CB 7E                 3884 	bit	7, (hl)
      000F6E 28 07                 3885 	jr	Z, 00409$
      000F70 CB 7A                 3886 	bit	7, d
      000F72 20 08                 3887 	jr	NZ, 00410$
      000F74 BF                    3888 	cp	a, a
      000F75 18 05                 3889 	jr	00410$
      000F77                       3890 00409$:
      000F77 CB 7A                 3891 	bit	7, d
      000F79 28 01                 3892 	jr	Z, 00410$
      000F7B 37                    3893 	scf
      000F7C                       3894 00410$:
      000F7C 30 0B                 3895 	jr	NC, 00104$
                                   3896 ;src/main.c:439: enemies[i].xSpeed += enemies[i].accel;
      000F7E 79                    3897 	ld	a, c
      000F7F 80                    3898 	add	a, b
      000F80 4F                    3899 	ld	c, a
      000F81 F8 06                 3900 	ldhl	sp,	#6
      000F83 2A                    3901 	ld	a,	(hl+)
      000F84 66                    3902 	ld	h, (hl)
      000F85 6F                    3903 	ld	l, a
      000F86 71                    3904 	ld	(hl), c
      000F87 18 38                 3905 	jr	00112$
      000F89                       3906 00104$:
                                   3907 ;src/main.c:442: enemies[i].xSpeed -= enemies[i].accel;
      000F89 79                    3908 	ld	a, c
      000F8A 90                    3909 	sub	a, b
      000F8B 4F                    3910 	ld	c, a
      000F8C F8 06                 3911 	ldhl	sp,	#6
      000F8E 2A                    3912 	ld	a,	(hl+)
      000F8F 66                    3913 	ld	h, (hl)
      000F90 6F                    3914 	ld	l, a
      000F91 71                    3915 	ld	(hl), c
      000F92 18 2D                 3916 	jr	00112$
      000F94                       3917 00111$:
                                   3918 ;src/main.c:446: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F94 59                    3919 	ld	e, c
      000F95 AF                    3920 	xor	a, a
      000F96 57                    3921 	ld	d, a
      000F97 91                    3922 	sub	a, c
      000F98 CB 7B                 3923 	bit	7, e
      000F9A 28 07                 3924 	jr	Z, 00411$
      000F9C CB 7A                 3925 	bit	7, d
      000F9E 20 08                 3926 	jr	NZ, 00412$
      000FA0 BF                    3927 	cp	a, a
      000FA1 18 05                 3928 	jr	00412$
      000FA3                       3929 00411$:
      000FA3 CB 7A                 3930 	bit	7, d
      000FA5 28 01                 3931 	jr	Z, 00412$
      000FA7 37                    3932 	scf
      000FA8                       3933 00412$:
      000FA8 30 07                 3934 	jr	NC, 00107$
      000FAA 0D                    3935 	dec	c
      000FAB F8 06                 3936 	ldhl	sp,	#6
      000FAD 2A                    3937 	ld	a,	(hl+)
      000FAE 66                    3938 	ld	h, (hl)
      000FAF 6F                    3939 	ld	l, a
      000FB0 71                    3940 	ld	(hl), c
      000FB1                       3941 00107$:
      000FB1 F8 06                 3942 	ldhl	sp,#6
      000FB3 2A                    3943 	ld	a, (hl+)
      000FB4 5F                    3944 	ld	e, a
      000FB5 56                    3945 	ld	d, (hl)
      000FB6 1A                    3946 	ld	a, (de)
      000FB7 4F                    3947 	ld	c, a
                                   3948 ;src/main.c:447: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      000FB8 CB 79                 3949 	bit	7, c
      000FBA 28 05                 3950 	jr	Z, 00112$
      000FBC 0C                    3951 	inc	c
      000FBD 3A                    3952 	ld	a, (hl-)
      000FBE 6E                    3953 	ld	l, (hl)
      000FBF 67                    3954 	ld	h, a
      000FC0 71                    3955 	ld	(hl), c
      000FC1                       3956 00112$:
                                   3957 ;src/main.c:450: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FC1 F8 04                 3958 	ldhl	sp,#4
      000FC3 2A                    3959 	ld	a, (hl+)
      000FC4 5F                    3960 	ld	e, a
      000FC5 56                    3961 	ld	d, (hl)
      000FC6 1A                    3962 	ld	a, (de)
      000FC7 4F                    3963 	ld	c, a
      000FC8 13                    3964 	inc	de
      000FC9 1A                    3965 	ld	a, (de)
      000FCA 47                    3966 	ld	b, a
      000FCB 79                    3967 	ld	a, c
      000FCC 21r94r00              3968 	ld	hl, #_playerDrawY
      000FCF 5E                    3969 	ld	e, (hl)
      000FD0 93                    3970 	sub	a, e
      000FD1 6F                    3971 	ld	l, a
                                   3972 ;	spillPairReg hl
                                   3973 ;	spillPairReg hl
                                   3974 ;src/main.c:345: if (value >= 0) return value;
      000FD2 CB 7D                 3975 	bit	7, l
      000FD4 20 06                 3976 	jr	NZ, 00173$
      000FD6 7D                    3977 	ld	a, l
      000FD7 F8 0E                 3978 	ldhl	sp,	#14
      000FD9 77                    3979 	ld	(hl), a
      000FDA 18 06                 3980 	jr	00175$
      000FDC                       3981 00173$:
                                   3982 ;src/main.c:346: else return - value;
      000FDC AF                    3983 	xor	a, a
      000FDD 95                    3984 	sub	a, l
      000FDE 5F                    3985 	ld	e, a
      000FDF F8 0E                 3986 	ldhl	sp,	#14
      000FE1 73                    3987 	ld	(hl), e
                                   3988 ;src/main.c:450: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FE2                       3989 00175$:
                                   3990 ;src/main.c:452: enemies[i].ySpeed += enemies[i].accel;
      000FE2 F8 02                 3991 	ldhl	sp,#2
      000FE4 2A                    3992 	ld	a, (hl+)
      000FE5 5F                    3993 	ld	e, a
      000FE6 56                    3994 	ld	d, (hl)
      000FE7 21 0F 00              3995 	ld	hl, #0x000f
      000FEA 19                    3996 	add	hl, de
      000FEB E5                    3997 	push	hl
      000FEC 7D                    3998 	ld	a, l
      000FED F8 0A                 3999 	ldhl	sp,	#10
      000FEF 77                    4000 	ld	(hl), a
      000FF0 E1                    4001 	pop	hl
      000FF1 7C                    4002 	ld	a, h
      000FF2 F8 09                 4003 	ldhl	sp,	#9
                                   4004 ;src/main.c:459: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      000FF4 32                    4005 	ld	(hl-), a
      000FF5 2A                    4006 	ld	a, (hl+)
      000FF6 5F                    4007 	ld	e, a
      000FF7 2A                    4008 	ld	a, (hl+)
      000FF8 23                    4009 	inc	hl
      000FF9 57                    4010 	ld	d, a
      000FFA 1A                    4011 	ld	a, (de)
      000FFB 77                    4012 	ld	(hl), a
                                   4013 ;src/main.c:450: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FFC F8 0E                 4014 	ldhl	sp,	#14
      000FFE 5E                    4015 	ld	e, (hl)
      000FFF 3E 08                 4016 	ld	a,#0x08
      001001 57                    4017 	ld	d,a
      001002 96                    4018 	sub	a, (hl)
      001003 CB 7B                 4019 	bit	7, e
      001005 28 07                 4020 	jr	Z, 00413$
      001007 CB 7A                 4021 	bit	7, d
      001009 20 08                 4022 	jr	NZ, 00414$
      00100B BF                    4023 	cp	a, a
      00100C 18 05                 4024 	jr	00414$
      00100E                       4025 00413$:
      00100E CB 7A                 4026 	bit	7, d
      001010 28 01                 4027 	jr	Z, 00414$
      001012 37                    4028 	scf
      001013                       4029 00414$:
      001013 30 44                 4030 	jr	NC, 00121$
                                   4031 ;src/main.c:451: if (enemies[i].y < playerDrawY) {
      001015 FAr94r00              4032 	ld	a, (#_playerDrawY)
      001018 F8 0C                 4033 	ldhl	sp,	#12
      00101A 22                    4034 	ld	(hl+), a
                                   4035 ;src/main.c:439: enemies[i].xSpeed += enemies[i].accel;
      00101B AF                    4036 	xor	a, a
      00101C 22                    4037 	ld	(hl+), a
      00101D D1                    4038 	pop	de
      00101E D5                    4039 	push	de
      00101F 1A                    4040 	ld	a, (de)
                                   4041 ;src/main.c:451: if (enemies[i].y < playerDrawY) {
      001020 32                    4042 	ld	(hl-), a
      001021 2B                    4043 	dec	hl
      001022 79                    4044 	ld	a, c
      001023 96                    4045 	sub	a, (hl)
      001024 23                    4046 	inc	hl
      001025 78                    4047 	ld	a, b
      001026 9E                    4048 	sbc	a, (hl)
      001027 78                    4049 	ld	a, b
      001028 57                    4050 	ld	d, a
      001029 CB 7E                 4051 	bit	7, (hl)
      00102B 28 07                 4052 	jr	Z, 00415$
      00102D CB 7A                 4053 	bit	7, d
      00102F 20 08                 4054 	jr	NZ, 00416$
      001031 BF                    4055 	cp	a, a
      001032 18 05                 4056 	jr	00416$
      001034                       4057 00415$:
      001034 CB 7A                 4058 	bit	7, d
      001036 28 01                 4059 	jr	Z, 00416$
      001038 37                    4060 	scf
      001039                       4061 00416$:
      001039 30 0F                 4062 	jr	NC, 00114$
                                   4063 ;src/main.c:452: enemies[i].ySpeed += enemies[i].accel;
      00103B F8 0B                 4064 	ldhl	sp,	#11
      00103D 7E                    4065 	ld	a, (hl)
      00103E F8 0E                 4066 	ldhl	sp,	#14
      001040 86                    4067 	add	a, (hl)
      001041 4F                    4068 	ld	c, a
      001042 F8 08                 4069 	ldhl	sp,	#8
      001044 2A                    4070 	ld	a,	(hl+)
      001045 66                    4071 	ld	h, (hl)
      001046 6F                    4072 	ld	l, a
      001047 71                    4073 	ld	(hl), c
      001048 18 41                 4074 	jr	00122$
      00104A                       4075 00114$:
                                   4076 ;src/main.c:455: enemies[i].ySpeed -= enemies[i].accel;
      00104A F8 0B                 4077 	ldhl	sp,	#11
      00104C 7E                    4078 	ld	a, (hl)
      00104D F8 0E                 4079 	ldhl	sp,	#14
      00104F 96                    4080 	sub	a, (hl)
      001050 4F                    4081 	ld	c, a
      001051 F8 08                 4082 	ldhl	sp,	#8
      001053 2A                    4083 	ld	a,	(hl+)
      001054 66                    4084 	ld	h, (hl)
      001055 6F                    4085 	ld	l, a
      001056 71                    4086 	ld	(hl), c
      001057 18 32                 4087 	jr	00122$
      001059                       4088 00121$:
                                   4089 ;src/main.c:459: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001059 F8 0B                 4090 	ldhl	sp,	#11
      00105B 5E                    4091 	ld	e, (hl)
      00105C AF                    4092 	xor	a, a
      00105D 57                    4093 	ld	d, a
      00105E 96                    4094 	sub	a, (hl)
      00105F CB 7B                 4095 	bit	7, e
      001061 28 07                 4096 	jr	Z, 00417$
      001063 CB 7A                 4097 	bit	7, d
      001065 20 08                 4098 	jr	NZ, 00418$
      001067 BF                    4099 	cp	a, a
      001068 18 05                 4100 	jr	00418$
      00106A                       4101 00417$:
      00106A CB 7A                 4102 	bit	7, d
      00106C 28 01                 4103 	jr	Z, 00418$
      00106E 37                    4104 	scf
      00106F                       4105 00418$:
      00106F 30 0A                 4106 	jr	NC, 00117$
      001071 F8 0B                 4107 	ldhl	sp,	#11
      001073 4E                    4108 	ld	c, (hl)
      001074 0D                    4109 	dec	c
      001075 F8 08                 4110 	ldhl	sp,	#8
      001077 2A                    4111 	ld	a,	(hl+)
      001078 66                    4112 	ld	h, (hl)
      001079 6F                    4113 	ld	l, a
      00107A 71                    4114 	ld	(hl), c
      00107B                       4115 00117$:
      00107B F8 08                 4116 	ldhl	sp,#8
      00107D 2A                    4117 	ld	a, (hl+)
      00107E 5F                    4118 	ld	e, a
      00107F 56                    4119 	ld	d, (hl)
      001080 1A                    4120 	ld	a, (de)
      001081 4F                    4121 	ld	c, a
                                   4122 ;src/main.c:460: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      001082 CB 79                 4123 	bit	7, c
      001084 28 05                 4124 	jr	Z, 00122$
      001086 0C                    4125 	inc	c
      001087 3A                    4126 	ld	a, (hl-)
      001088 6E                    4127 	ld	l, (hl)
      001089 67                    4128 	ld	h, a
      00108A 71                    4129 	ld	(hl), c
      00108B                       4130 00122$:
                                   4131 ;src/main.c:464: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      00108B F8 02                 4132 	ldhl	sp,#2
      00108D 2A                    4133 	ld	a, (hl+)
      00108E 5F                    4134 	ld	e, a
      00108F 56                    4135 	ld	d, (hl)
      001090 21 0C 00              4136 	ld	hl, #0x000c
      001093 19                    4137 	add	hl, de
      001094 E5                    4138 	push	hl
      001095 7D                    4139 	ld	a, l
      001096 F8 0C                 4140 	ldhl	sp,	#12
      001098 77                    4141 	ld	(hl), a
      001099 E1                    4142 	pop	hl
      00109A 7C                    4143 	ld	a, h
      00109B F8 0B                 4144 	ldhl	sp,	#11
      00109D 32                    4145 	ld	(hl-), a
      00109E 2A                    4146 	ld	a, (hl+)
      00109F 5F                    4147 	ld	e, a
      0010A0 2A                    4148 	ld	a, (hl+)
      0010A1 57                    4149 	ld	d, a
      0010A2 1A                    4150 	ld	a, (de)
      0010A3 4F                    4151 	ld	c, a
      0010A4 22                    4152 	ld	(hl+), a
      0010A5 AF                    4153 	xor	a, a
      0010A6 91                    4154 	sub	a, c
      0010A7 77                    4155 	ld	(hl), a
      0010A8 F8 06                 4156 	ldhl	sp,#6
      0010AA 2A                    4157 	ld	a, (hl+)
      0010AB 5F                    4158 	ld	e, a
      0010AC 56                    4159 	ld	d, (hl)
      0010AD 1A                    4160 	ld	a, (de)
      0010AE F8 0E                 4161 	ldhl	sp,	#14
                                   4162 ;src/main.c:326: return (value < min) ? min : (value > max) ? max : value;
      0010B0 32                    4163 	ld	(hl-), a
      0010B1 2A                    4164 	ld	a, (hl+)
      0010B2 5F                    4165 	ld	e, a
      0010B3 56                    4166 	ld	d, (hl)
      0010B4 3A                    4167 	ld	a, (hl-)
      0010B5 96                    4168 	sub	a, (hl)
      0010B6 CB 7B                 4169 	bit	7, e
      0010B8 28 07                 4170 	jr	Z, 00419$
      0010BA CB 7A                 4171 	bit	7, d
      0010BC 20 08                 4172 	jr	NZ, 00420$
      0010BE BF                    4173 	cp	a, a
      0010BF 18 05                 4174 	jr	00420$
      0010C1                       4175 00419$:
      0010C1 CB 7A                 4176 	bit	7, d
      0010C3 28 01                 4177 	jr	Z, 00420$
      0010C5 37                    4178 	scf
      0010C6                       4179 00420$:
      0010C6 30 06                 4180 	jr	NC, 00202$
      0010C8 F8 0D                 4181 	ldhl	sp,	#13
      0010CA 2A                    4182 	ld	a, (hl+)
      0010CB 77                    4183 	ld	(hl), a
      0010CC 18 26                 4184 	jr	00203$
      0010CE                       4185 00202$:
      0010CE F8 0E                 4186 	ldhl	sp,	#14
      0010D0 3A                    4187 	ld	a, (hl-)
      0010D1 2B                    4188 	dec	hl
      0010D2 5F                    4189 	ld	e, a
      0010D3 56                    4190 	ld	d, (hl)
      0010D4 2A                    4191 	ld	a, (hl+)
      0010D5 23                    4192 	inc	hl
      0010D6 96                    4193 	sub	a, (hl)
      0010D7 CB 7B                 4194 	bit	7, e
      0010D9 28 07                 4195 	jr	Z, 00421$
      0010DB CB 7A                 4196 	bit	7, d
      0010DD 20 08                 4197 	jr	NZ, 00422$
      0010DF BF                    4198 	cp	a, a
      0010E0 18 05                 4199 	jr	00422$
      0010E2                       4200 00421$:
      0010E2 CB 7A                 4201 	bit	7, d
      0010E4 28 01                 4202 	jr	Z, 00422$
      0010E6 37                    4203 	scf
      0010E7                       4204 00422$:
      0010E7 30 05                 4205 	jr	NC, 00204$
      0010E9 F8 0C                 4206 	ldhl	sp,	#12
      0010EB 5E                    4207 	ld	e, (hl)
      0010EC 18 03                 4208 	jr	00205$
      0010EE                       4209 00204$:
      0010EE F8 0E                 4210 	ldhl	sp,	#14
      0010F0 5E                    4211 	ld	e, (hl)
      0010F1                       4212 00205$:
      0010F1 F8 0E                 4213 	ldhl	sp,	#14
      0010F3 73                    4214 	ld	(hl), e
      0010F4                       4215 00203$:
      0010F4 F8 0E                 4216 	ldhl	sp,	#14
      0010F6 4E                    4217 	ld	c, (hl)
                                   4218 ;src/main.c:464: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0010F7 F8 06                 4219 	ldhl	sp,	#6
      0010F9 2A                    4220 	ld	a,	(hl+)
      0010FA 66                    4221 	ld	h, (hl)
      0010FB 6F                    4222 	ld	l, a
      0010FC 71                    4223 	ld	(hl), c
                                   4224 ;src/main.c:465: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0010FD F8 0A                 4225 	ldhl	sp,#10
      0010FF 2A                    4226 	ld	a, (hl+)
      001100 5F                    4227 	ld	e, a
      001101 3A                    4228 	ld	a, (hl-)
      001102 2B                    4229 	dec	hl
      001103 2B                    4230 	dec	hl
      001104 57                    4231 	ld	d, a
      001105 1A                    4232 	ld	a, (de)
      001106 47                    4233 	ld	b, a
      001107 48                    4234 	ld	c, b
      001108 AF                    4235 	xor	a, a
      001109 90                    4236 	sub	a, b
      00110A 47                    4237 	ld	b, a
      00110B 2A                    4238 	ld	a, (hl+)
      00110C 5F                    4239 	ld	e, a
      00110D 56                    4240 	ld	d, (hl)
      00110E 1A                    4241 	ld	a, (de)
      00110F 6F                    4242 	ld	l, a
                                   4243 ;	spillPairReg hl
                                   4244 ;	spillPairReg hl
                                   4245 ;src/main.c:326: return (value < min) ? min : (value > max) ? max : value;
      001110 58                    4246 	ld	e, b
      001111 7D                    4247 	ld	a,l
      001112 57                    4248 	ld	d,a
      001113 90                    4249 	sub	a, b
      001114 CB 7B                 4250 	bit	7, e
      001116 28 07                 4251 	jr	Z, 00423$
      001118 CB 7A                 4252 	bit	7, d
      00111A 20 08                 4253 	jr	NZ, 00424$
      00111C BF                    4254 	cp	a, a
      00111D 18 05                 4255 	jr	00424$
      00111F                       4256 00423$:
      00111F CB 7A                 4257 	bit	7, d
      001121 28 01                 4258 	jr	Z, 00424$
      001123 37                    4259 	scf
      001124                       4260 00424$:
      001124 30 03                 4261 	jr	NC, 00206$
      001126 48                    4262 	ld	c, b
      001127 18 17                 4263 	jr	00207$
      001129                       4264 00206$:
      001129 5D                    4265 	ld	e, l
      00112A 79                    4266 	ld	a,c
      00112B 57                    4267 	ld	d,a
      00112C 95                    4268 	sub	a, l
      00112D CB 7B                 4269 	bit	7, e
      00112F 28 07                 4270 	jr	Z, 00425$
      001131 CB 7A                 4271 	bit	7, d
      001133 20 08                 4272 	jr	NZ, 00426$
      001135 BF                    4273 	cp	a, a
      001136 18 05                 4274 	jr	00426$
      001138                       4275 00425$:
      001138 CB 7A                 4276 	bit	7, d
      00113A 28 01                 4277 	jr	Z, 00426$
      00113C 37                    4278 	scf
      00113D                       4279 00426$:
      00113D 38 01                 4280 	jr	C, 00209$
      00113F 4D                    4281 	ld	c, l
      001140                       4282 00209$:
      001140                       4283 00207$:
                                   4284 ;src/main.c:465: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001140 F8 08                 4285 	ldhl	sp,	#8
      001142 2A                    4286 	ld	a,	(hl+)
      001143 66                    4287 	ld	h, (hl)
      001144 6F                    4288 	ld	l, a
      001145 71                    4289 	ld	(hl), c
                                   4290 ;src/main.c:468: enemies[i].xReserve += enemies[i].xSpeed;
      001146 F8 02                 4291 	ldhl	sp,#2
      001148 2A                    4292 	ld	a, (hl+)
      001149 5F                    4293 	ld	e, a
      00114A 56                    4294 	ld	d, (hl)
      00114B 21 04 00              4295 	ld	hl, #0x0004
      00114E 19                    4296 	add	hl, de
      00114F E5                    4297 	push	hl
      001150 7D                    4298 	ld	a, l
      001151 F8 0F                 4299 	ldhl	sp,	#15
      001153 77                    4300 	ld	(hl), a
      001154 E1                    4301 	pop	hl
      001155 7C                    4302 	ld	a, h
      001156 F8 0E                 4303 	ldhl	sp,	#14
      001158 32                    4304 	ld	(hl-), a
      001159 2A                    4305 	ld	a, (hl+)
      00115A 5F                    4306 	ld	e, a
      00115B 56                    4307 	ld	d, (hl)
      00115C 1A                    4308 	ld	a, (de)
      00115D 47                    4309 	ld	b, a
      00115E F8 06                 4310 	ldhl	sp,#6
      001160 2A                    4311 	ld	a, (hl+)
      001161 5F                    4312 	ld	e, a
      001162 56                    4313 	ld	d, (hl)
      001163 1A                    4314 	ld	a, (de)
      001164 80                    4315 	add	a, b
      001165 47                    4316 	ld	b, a
      001166 F8 0D                 4317 	ldhl	sp,	#13
      001168 2A                    4318 	ld	a,	(hl+)
      001169 66                    4319 	ld	h, (hl)
      00116A 6F                    4320 	ld	l, a
      00116B 70                    4321 	ld	(hl), b
                                   4322 ;src/main.c:469: enemies[i].yReserve += enemies[i].ySpeed;
      00116C F8 02                 4323 	ldhl	sp,#2
      00116E 2A                    4324 	ld	a, (hl+)
      00116F 5F                    4325 	ld	e, a
      001170 56                    4326 	ld	d, (hl)
      001171 21 05 00              4327 	ld	hl, #0x0005
      001174 19                    4328 	add	hl, de
      001175 E5                    4329 	push	hl
      001176 7D                    4330 	ld	a, l
      001177 F8 0C                 4331 	ldhl	sp,	#12
      001179 77                    4332 	ld	(hl), a
      00117A E1                    4333 	pop	hl
      00117B 7C                    4334 	ld	a, h
      00117C F8 0B                 4335 	ldhl	sp,	#11
      00117E 32                    4336 	ld	(hl-), a
      00117F 2A                    4337 	ld	a, (hl+)
      001180 5F                    4338 	ld	e, a
      001181 56                    4339 	ld	d, (hl)
      001182 1A                    4340 	ld	a, (de)
      001183 81                    4341 	add	a, c
      001184 4F                    4342 	ld	c, a
      001185 3A                    4343 	ld	a, (hl-)
      001186 6E                    4344 	ld	l, (hl)
      001187 67                    4345 	ld	h, a
      001188 71                    4346 	ld	(hl), c
                                   4347 ;src/main.c:473: if (enemies[i].xReserve >> 3 > 0) {
      001189 F8 0D                 4348 	ldhl	sp,#13
      00118B 2A                    4349 	ld	a, (hl+)
      00118C 5F                    4350 	ld	e, a
      00118D 3A                    4351 	ld	a, (hl-)
      00118E 2B                    4352 	dec	hl
      00118F 57                    4353 	ld	d, a
      001190 1A                    4354 	ld	a, (de)
      001191 77                    4355 	ld	(hl), a
      001192 CB 28                 4356 	sra	b
      001194 CB 28                 4357 	sra	b
      001196 CB 28                 4358 	sra	b
      001198 58                    4359 	ld	e, b
      001199 AF                    4360 	xor	a, a
      00119A 57                    4361 	ld	d, a
      00119B 90                    4362 	sub	a, b
      00119C CB 7B                 4363 	bit	7, e
      00119E 28 07                 4364 	jr	Z, 00427$
      0011A0 CB 7A                 4365 	bit	7, d
      0011A2 20 08                 4366 	jr	NZ, 00428$
      0011A4 BF                    4367 	cp	a, a
      0011A5 18 05                 4368 	jr	00428$
      0011A7                       4369 00427$:
      0011A7 CB 7A                 4370 	bit	7, d
      0011A9 28 01                 4371 	jr	Z, 00428$
      0011AB 37                    4372 	scf
      0011AC                       4373 00428$:
      0011AC 30 3F                 4374 	jr	NC, 00126$
                                   4375 ;src/main.c:474: int8_t xMovement = enemies[i].xReserve >> 3;
      0011AE F8 0C                 4376 	ldhl	sp,	#12
      0011B0 7E                    4377 	ld	a, (hl)
      0011B1 CB 2F                 4378 	sra	a
      0011B3 CB 2F                 4379 	sra	a
      0011B5 CB 2F                 4380 	sra	a
      0011B7 77                    4381 	ld	(hl), a
                                   4382 ;src/main.c:475: enemies[i].x += xMovement;
      0011B8 F8 02                 4383 	ldhl	sp,#2
      0011BA 2A                    4384 	ld	a, (hl+)
      0011BB 5F                    4385 	ld	e, a
      0011BC 56                    4386 	ld	d, (hl)
      0011BD 1A                    4387 	ld	a, (de)
      0011BE 4F                    4388 	ld	c, a
      0011BF 13                    4389 	inc	de
      0011C0 1A                    4390 	ld	a, (de)
      0011C1 47                    4391 	ld	b, a
      0011C2 F8 0C                 4392 	ldhl	sp,	#12
      0011C4 7E                    4393 	ld	a, (hl)
      0011C5 5F                    4394 	ld	e, a
      0011C6 07                    4395 	rlca
      0011C7 9F                    4396 	sbc	a, a
      0011C8 57                    4397 	ld	d, a
      0011C9 69                    4398 	ld	l, c
                                   4399 ;	spillPairReg hl
                                   4400 ;	spillPairReg hl
      0011CA 60                    4401 	ld	h, b
                                   4402 ;	spillPairReg hl
                                   4403 ;	spillPairReg hl
      0011CB 19                    4404 	add	hl, de
      0011CC 4D                    4405 	ld	c, l
      0011CD 44                    4406 	ld	b, h
      0011CE F8 02                 4407 	ldhl	sp,	#2
      0011D0 2A                    4408 	ld	a,	(hl+)
      0011D1 66                    4409 	ld	h, (hl)
      0011D2 6F                    4410 	ld	l, a
      0011D3 79                    4411 	ld	a, c
      0011D4 22                    4412 	ld	(hl+), a
      0011D5 70                    4413 	ld	(hl), b
                                   4414 ;src/main.c:476: enemies[i].xReserve -=  xMovement << 3;
      0011D6 F8 0D                 4415 	ldhl	sp,#13
      0011D8 2A                    4416 	ld	a, (hl+)
      0011D9 5F                    4417 	ld	e, a
      0011DA 3A                    4418 	ld	a, (hl-)
      0011DB 2B                    4419 	dec	hl
      0011DC 57                    4420 	ld	d, a
      0011DD 1A                    4421 	ld	a, (de)
      0011DE F5                    4422 	push	af
      0011DF 2A                    4423 	ld	a, (hl+)
      0011E0 87                    4424 	add	a, a
      0011E1 87                    4425 	add	a, a
      0011E2 87                    4426 	add	a, a
      0011E3 4F                    4427 	ld	c, a
      0011E4 F1                    4428 	pop	af
      0011E5 91                    4429 	sub	a, c
      0011E6 4F                    4430 	ld	c, a
      0011E7 2A                    4431 	ld	a,	(hl+)
      0011E8 66                    4432 	ld	h, (hl)
      0011E9 6F                    4433 	ld	l, a
      0011EA 71                    4434 	ld	(hl), c
      0011EB 18 69                 4435 	jr	00127$
      0011ED                       4436 00126$:
                                   4437 ;src/main.c:479: else if ((-enemies[i].xReserve) >> 3 > 0){
      0011ED F8 0C                 4438 	ldhl	sp,	#12
      0011EF 7E                    4439 	ld	a, (hl)
      0011F0 4F                    4440 	ld	c, a
      0011F1 07                    4441 	rlca
      0011F2 9F                    4442 	sbc	a, a
      0011F3 47                    4443 	ld	b, a
      0011F4 AF                    4444 	xor	a, a
      0011F5 91                    4445 	sub	a, c
      0011F6 4F                    4446 	ld	c, a
      0011F7 9F                    4447 	sbc	a, a
      0011F8 90                    4448 	sub	a, b
      0011F9 47                    4449 	ld	b, a
      0011FA CB 28                 4450 	sra	b
      0011FC CB 19                 4451 	rr	c
      0011FE CB 28                 4452 	sra	b
      001200 CB 19                 4453 	rr	c
      001202 CB 28                 4454 	sra	b
      001204 CB 19                 4455 	rr	c
      001206 58                    4456 	ld	e, b
      001207 AF                    4457 	xor	a, a
      001208 57                    4458 	ld	d, a
      001209 B9                    4459 	cp	a, c
      00120A 98                    4460 	sbc	a, b
      00120B CB 7B                 4461 	bit	7, e
      00120D 28 07                 4462 	jr	Z, 00429$
      00120F CB 7A                 4463 	bit	7, d
      001211 20 08                 4464 	jr	NZ, 00430$
      001213 BF                    4465 	cp	a, a
      001214 18 05                 4466 	jr	00430$
      001216                       4467 00429$:
      001216 CB 7A                 4468 	bit	7, d
      001218 28 01                 4469 	jr	Z, 00430$
      00121A 37                    4470 	scf
      00121B                       4471 00430$:
      00121B 30 39                 4472 	jr	NC, 00127$
                                   4473 ;src/main.c:480: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      00121D AF                    4474 	xor	a, a
      00121E 91                    4475 	sub	a, c
      00121F 4F                    4476 	ld	c, a
      001220 F8 0C                 4477 	ldhl	sp,	#12
      001222 71                    4478 	ld	(hl), c
                                   4479 ;src/main.c:481: enemies[i].x += xMovement;
      001223 F8 02                 4480 	ldhl	sp,#2
      001225 2A                    4481 	ld	a, (hl+)
      001226 5F                    4482 	ld	e, a
      001227 56                    4483 	ld	d, (hl)
      001228 1A                    4484 	ld	a, (de)
      001229 4F                    4485 	ld	c, a
      00122A 13                    4486 	inc	de
      00122B 1A                    4487 	ld	a, (de)
      00122C 47                    4488 	ld	b, a
      00122D F8 0C                 4489 	ldhl	sp,	#12
      00122F 7E                    4490 	ld	a, (hl)
      001230 5F                    4491 	ld	e, a
      001231 07                    4492 	rlca
      001232 9F                    4493 	sbc	a, a
      001233 57                    4494 	ld	d, a
      001234 69                    4495 	ld	l, c
                                   4496 ;	spillPairReg hl
                                   4497 ;	spillPairReg hl
      001235 60                    4498 	ld	h, b
                                   4499 ;	spillPairReg hl
                                   4500 ;	spillPairReg hl
      001236 19                    4501 	add	hl, de
      001237 4D                    4502 	ld	c, l
      001238 44                    4503 	ld	b, h
      001239 F8 02                 4504 	ldhl	sp,	#2
      00123B 2A                    4505 	ld	a,	(hl+)
      00123C 66                    4506 	ld	h, (hl)
      00123D 6F                    4507 	ld	l, a
      00123E 79                    4508 	ld	a, c
      00123F 22                    4509 	ld	(hl+), a
      001240 70                    4510 	ld	(hl), b
                                   4511 ;src/main.c:482: enemies[i].xReserve +=  (-xMovement) << 3;
      001241 F8 0D                 4512 	ldhl	sp,#13
      001243 2A                    4513 	ld	a, (hl+)
      001244 5F                    4514 	ld	e, a
      001245 3A                    4515 	ld	a, (hl-)
      001246 2B                    4516 	dec	hl
      001247 57                    4517 	ld	d, a
      001248 1A                    4518 	ld	a, (de)
      001249 4F                    4519 	ld	c, a
      00124A AF                    4520 	xor	a, a
      00124B 96                    4521 	sub	a, (hl)
      00124C 23                    4522 	inc	hl
      00124D 87                    4523 	add	a, a
      00124E 87                    4524 	add	a, a
      00124F 87                    4525 	add	a, a
      001250 81                    4526 	add	a, c
      001251 4F                    4527 	ld	c, a
      001252 2A                    4528 	ld	a,	(hl+)
      001253 66                    4529 	ld	h, (hl)
      001254 6F                    4530 	ld	l, a
      001255 71                    4531 	ld	(hl), c
      001256                       4532 00127$:
                                   4533 ;src/main.c:469: enemies[i].yReserve += enemies[i].ySpeed;
      001256 F8 0A                 4534 	ldhl	sp,#10
      001258 2A                    4535 	ld	a, (hl+)
      001259 5F                    4536 	ld	e, a
      00125A 56                    4537 	ld	d, (hl)
      00125B 1A                    4538 	ld	a, (de)
      00125C 4F                    4539 	ld	c, a
                                   4540 ;src/main.c:485: if (enemies[i].yReserve >> 3 > 0) {
      00125D 41                    4541 	ld	b, c
      00125E CB 28                 4542 	sra	b
      001260 CB 28                 4543 	sra	b
      001262 CB 28                 4544 	sra	b
      001264 58                    4545 	ld	e, b
      001265 AF                    4546 	xor	a, a
      001266 57                    4547 	ld	d, a
      001267 90                    4548 	sub	a, b
      001268 CB 7B                 4549 	bit	7, e
      00126A 28 07                 4550 	jr	Z, 00431$
      00126C CB 7A                 4551 	bit	7, d
      00126E 20 08                 4552 	jr	NZ, 00432$
      001270 BF                    4553 	cp	a, a
      001271 18 05                 4554 	jr	00432$
      001273                       4555 00431$:
      001273 CB 7A                 4556 	bit	7, d
      001275 28 01                 4557 	jr	Z, 00432$
      001277 37                    4558 	scf
      001278                       4559 00432$:
      001278 30 3A                 4560 	jr	NC, 00131$
                                   4561 ;src/main.c:486: int8_t yMovement = enemies[i].yReserve >> 3;
      00127A F8 0E                 4562 	ldhl	sp,	#14
      00127C 70                    4563 	ld	(hl), b
                                   4564 ;src/main.c:487: enemies[i].y += yMovement;
      00127D F8 04                 4565 	ldhl	sp,#4
      00127F 2A                    4566 	ld	a, (hl+)
      001280 5F                    4567 	ld	e, a
      001281 56                    4568 	ld	d, (hl)
      001282 1A                    4569 	ld	a, (de)
      001283 4F                    4570 	ld	c, a
      001284 13                    4571 	inc	de
      001285 1A                    4572 	ld	a, (de)
      001286 47                    4573 	ld	b, a
      001287 F8 0E                 4574 	ldhl	sp,	#14
      001289 7E                    4575 	ld	a, (hl)
      00128A 5F                    4576 	ld	e, a
      00128B 07                    4577 	rlca
      00128C 9F                    4578 	sbc	a, a
      00128D 57                    4579 	ld	d, a
      00128E 69                    4580 	ld	l, c
                                   4581 ;	spillPairReg hl
                                   4582 ;	spillPairReg hl
      00128F 60                    4583 	ld	h, b
                                   4584 ;	spillPairReg hl
                                   4585 ;	spillPairReg hl
      001290 19                    4586 	add	hl, de
      001291 4D                    4587 	ld	c, l
      001292 44                    4588 	ld	b, h
      001293 F8 04                 4589 	ldhl	sp,	#4
      001295 2A                    4590 	ld	a,	(hl+)
      001296 66                    4591 	ld	h, (hl)
      001297 6F                    4592 	ld	l, a
      001298 79                    4593 	ld	a, c
      001299 22                    4594 	ld	(hl+), a
      00129A 70                    4595 	ld	(hl), b
                                   4596 ;src/main.c:488: enemies[i].yReserve -=  yMovement << 3;
      00129B F8 0A                 4597 	ldhl	sp,#10
      00129D 2A                    4598 	ld	a, (hl+)
      00129E 5F                    4599 	ld	e, a
      00129F 56                    4600 	ld	d, (hl)
      0012A0 1A                    4601 	ld	a, (de)
      0012A1 F5                    4602 	push	af
      0012A2 F8 10                 4603 	ldhl	sp,	#16
      0012A4 7E                    4604 	ld	a, (hl)
      0012A5 87                    4605 	add	a, a
      0012A6 87                    4606 	add	a, a
      0012A7 87                    4607 	add	a, a
      0012A8 4F                    4608 	ld	c, a
      0012A9 F1                    4609 	pop	af
      0012AA 91                    4610 	sub	a, c
      0012AB 4F                    4611 	ld	c, a
      0012AC F8 0A                 4612 	ldhl	sp,	#10
      0012AE 2A                    4613 	ld	a,	(hl+)
      0012AF 66                    4614 	ld	h, (hl)
      0012B0 6F                    4615 	ld	l, a
      0012B1 71                    4616 	ld	(hl), c
      0012B2 18 67                 4617 	jr	00133$
      0012B4                       4618 00131$:
                                   4619 ;src/main.c:490: else if ((-enemies[i].yReserve) >> 3 > 0){
      0012B4 79                    4620 	ld	a, c
      0012B5 07                    4621 	rlca
      0012B6 9F                    4622 	sbc	a, a
      0012B7 47                    4623 	ld	b, a
      0012B8 AF                    4624 	xor	a, a
      0012B9 91                    4625 	sub	a, c
      0012BA 4F                    4626 	ld	c, a
      0012BB 9F                    4627 	sbc	a, a
      0012BC 90                    4628 	sub	a, b
      0012BD 47                    4629 	ld	b, a
      0012BE CB 28                 4630 	sra	b
      0012C0 CB 19                 4631 	rr	c
      0012C2 CB 28                 4632 	sra	b
      0012C4 CB 19                 4633 	rr	c
      0012C6 CB 28                 4634 	sra	b
      0012C8 CB 19                 4635 	rr	c
      0012CA 58                    4636 	ld	e, b
      0012CB AF                    4637 	xor	a, a
      0012CC 57                    4638 	ld	d, a
      0012CD B9                    4639 	cp	a, c
      0012CE 98                    4640 	sbc	a, b
      0012CF CB 7B                 4641 	bit	7, e
      0012D1 28 07                 4642 	jr	Z, 00433$
      0012D3 CB 7A                 4643 	bit	7, d
      0012D5 20 08                 4644 	jr	NZ, 00434$
      0012D7 BF                    4645 	cp	a, a
      0012D8 18 05                 4646 	jr	00434$
      0012DA                       4647 00433$:
      0012DA CB 7A                 4648 	bit	7, d
      0012DC 28 01                 4649 	jr	Z, 00434$
      0012DE 37                    4650 	scf
      0012DF                       4651 00434$:
      0012DF 30 3A                 4652 	jr	NC, 00133$
                                   4653 ;src/main.c:491: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0012E1 AF                    4654 	xor	a, a
      0012E2 91                    4655 	sub	a, c
      0012E3 4F                    4656 	ld	c, a
      0012E4 F8 0E                 4657 	ldhl	sp,	#14
      0012E6 71                    4658 	ld	(hl), c
                                   4659 ;src/main.c:492: enemies[i].y += yMovement;
      0012E7 F8 04                 4660 	ldhl	sp,#4
      0012E9 2A                    4661 	ld	a, (hl+)
      0012EA 5F                    4662 	ld	e, a
      0012EB 56                    4663 	ld	d, (hl)
      0012EC 1A                    4664 	ld	a, (de)
      0012ED 4F                    4665 	ld	c, a
      0012EE 13                    4666 	inc	de
      0012EF 1A                    4667 	ld	a, (de)
      0012F0 47                    4668 	ld	b, a
      0012F1 F8 0E                 4669 	ldhl	sp,	#14
      0012F3 7E                    4670 	ld	a, (hl)
      0012F4 5F                    4671 	ld	e, a
      0012F5 07                    4672 	rlca
      0012F6 9F                    4673 	sbc	a, a
      0012F7 57                    4674 	ld	d, a
      0012F8 69                    4675 	ld	l, c
      0012F9 60                    4676 	ld	h, b
      0012FA 19                    4677 	add	hl, de
      0012FB 4D                    4678 	ld	c, l
      0012FC 44                    4679 	ld	b, h
      0012FD F8 04                 4680 	ldhl	sp,	#4
      0012FF 2A                    4681 	ld	a,	(hl+)
      001300 66                    4682 	ld	h, (hl)
      001301 6F                    4683 	ld	l, a
      001302 79                    4684 	ld	a, c
      001303 22                    4685 	ld	(hl+), a
      001304 70                    4686 	ld	(hl), b
                                   4687 ;src/main.c:493: enemies[i].yReserve +=  (-yMovement) << 3;
      001305 F8 0A                 4688 	ldhl	sp,#10
      001307 2A                    4689 	ld	a, (hl+)
      001308 5F                    4690 	ld	e, a
      001309 56                    4691 	ld	d, (hl)
      00130A 1A                    4692 	ld	a, (de)
      00130B 4F                    4693 	ld	c, a
      00130C AF                    4694 	xor	a, a
      00130D F8 0E                 4695 	ldhl	sp,	#14
      00130F 96                    4696 	sub	a, (hl)
      001310 87                    4697 	add	a, a
      001311 87                    4698 	add	a, a
      001312 87                    4699 	add	a, a
      001313 81                    4700 	add	a, c
      001314 4F                    4701 	ld	c, a
      001315 F8 0A                 4702 	ldhl	sp,	#10
      001317 2A                    4703 	ld	a,	(hl+)
      001318 66                    4704 	ld	h, (hl)
      001319 6F                    4705 	ld	l, a
      00131A 71                    4706 	ld	(hl), c
      00131B                       4707 00133$:
                                   4708 ;src/main.c:429: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00131B F8 0F                 4709 	ldhl	sp,	#15
      00131D 34                    4710 	inc	(hl)
      00131E C3r75r0E              4711 	jp	00196$
      001321                       4712 00134$:
                                   4713 ;src/main.c:500: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001321 F8 0F                 4714 	ldhl	sp,	#15
      001323 36 00                 4715 	ld	(hl), #0x00
      001325                       4716 00198$:
      001325 21r88r08              4717 	ld	hl, #_ENEMYCOUNT
      001328 4E                    4718 	ld	c, (hl)
      001329 F8 0F                 4719 	ldhl	sp,	#15
      00132B 7E                    4720 	ld	a, (hl)
      00132C 91                    4721 	sub	a, c
      00132D D2rCBr16              4722 	jp	NC, 00200$
                                   4723 ;src/main.c:502: if (enemies[i].alive) {
      001330 4E                    4724 	ld	c, (hl)
      001331 06 00                 4725 	ld	b, #0x00
      001333 69                    4726 	ld	l, c
      001334 60                    4727 	ld	h, b
      001335 29                    4728 	add	hl, hl
      001336 29                    4729 	add	hl, hl
      001337 29                    4730 	add	hl, hl
      001338 29                    4731 	add	hl, hl
      001339 09                    4732 	add	hl, bc
                                   4733 ;src/main.c:518: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      00133A 01r55r00              4734 	ld	bc,#_enemies
      00133D 09                    4735 	add	hl,bc
      00133E E5                    4736 	push	hl
      00133F 7D                    4737 	ld	a, l
      001340 F8 03                 4738 	ldhl	sp,	#3
      001342 77                    4739 	ld	(hl), a
      001343 E1                    4740 	pop	hl
      001344 7C                    4741 	ld	a, h
      001345 F8 02                 4742 	ldhl	sp,	#2
                                   4743 ;src/main.c:502: if (enemies[i].alive) {
      001347 32                    4744 	ld	(hl-), a
      001348 2A                    4745 	ld	a, (hl+)
      001349 5F                    4746 	ld	e, a
      00134A 56                    4747 	ld	d, (hl)
      00134B 21 09 00              4748 	ld	hl, #0x0009
      00134E 19                    4749 	add	hl, de
      00134F E5                    4750 	push	hl
      001350 7D                    4751 	ld	a, l
      001351 F8 05                 4752 	ldhl	sp,	#5
      001353 77                    4753 	ld	(hl), a
      001354 E1                    4754 	pop	hl
      001355 7C                    4755 	ld	a, h
      001356 F8 04                 4756 	ldhl	sp,	#4
      001358 32                    4757 	ld	(hl-), a
      001359 2A                    4758 	ld	a, (hl+)
      00135A 5F                    4759 	ld	e, a
      00135B 56                    4760 	ld	d, (hl)
      00135C 1A                    4761 	ld	a, (de)
      00135D F8 0E                 4762 	ldhl	sp,	#14
      00135F 77                    4763 	ld	(hl), a
      001360 7E                    4764 	ld	a, (hl)
      001361 B7                    4765 	or	a, a
      001362 CAr58r15              4766 	jp	Z, 00157$
                                   4767 ;src/main.c:503: if (enemies[i].visible == 1) {
      001365 F8 01                 4768 	ldhl	sp,#1
      001367 2A                    4769 	ld	a, (hl+)
      001368 5F                    4770 	ld	e, a
      001369 56                    4771 	ld	d, (hl)
      00136A 21 0A 00              4772 	ld	hl, #0x000a
      00136D 19                    4773 	add	hl, de
      00136E E5                    4774 	push	hl
      00136F 7D                    4775 	ld	a, l
      001370 F8 07                 4776 	ldhl	sp,	#7
      001372 77                    4777 	ld	(hl), a
      001373 E1                    4778 	pop	hl
      001374 7C                    4779 	ld	a, h
      001375 F8 06                 4780 	ldhl	sp,	#6
      001377 32                    4781 	ld	(hl-), a
      001378 2A                    4782 	ld	a, (hl+)
      001379 5F                    4783 	ld	e, a
      00137A 2A                    4784 	ld	a, (hl+)
      00137B 57                    4785 	ld	d, a
      00137C 1A                    4786 	ld	a, (de)
      00137D 77                    4787 	ld	(hl), a
                                   4788 ;src/main.c:504: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00137E F8 01                 4789 	ldhl	sp,#1
      001380 2A                    4790 	ld	a, (hl+)
      001381 5F                    4791 	ld	e, a
      001382 56                    4792 	ld	d, (hl)
      001383 1A                    4793 	ld	a, (de)
      001384 F8 08                 4794 	ldhl	sp,	#8
      001386 22                    4795 	ld	(hl+), a
      001387 13                    4796 	inc	de
      001388 1A                    4797 	ld	a, (de)
      001389 77                    4798 	ld	(hl), a
      00138A F8 01                 4799 	ldhl	sp,	#1
      00138C 2A                    4800 	ld	a, (hl+)
      00138D 4F                    4801 	ld	c, a
      00138E 46                    4802 	ld	b, (hl)
      00138F 03                    4803 	inc	bc
      001390 03                    4804 	inc	bc
                                   4805 ;src/main.c:506: set_sprite_tile(10+(i<<1), 0x7f);
      001391 F8 0F                 4806 	ldhl	sp,	#15
      001393 5E                    4807 	ld	e, (hl)
                                   4808 ;src/main.c:504: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001394 F8 08                 4809 	ldhl	sp,	#8
      001396 2A                    4810 	ld	a, (hl+)
      001397 23                    4811 	inc	hl
      001398 32                    4812 	ld	(hl-), a
      001399 2A                    4813 	ld	a, (hl+)
      00139A 23                    4814 	inc	hl
                                   4815 ;src/main.c:506: set_sprite_tile(10+(i<<1), 0x7f);
      00139B 22                    4816 	ld	(hl+), a
      00139C 7B                    4817 	ld	a, e
      00139D 87                    4818 	add	a, a
                                   4819 ;src/main.c:504: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00139E 32                    4820 	ld	(hl-), a
      00139F 2A                    4821 	ld	a, (hl+)
      0013A0 23                    4822 	inc	hl
      0013A1 07                    4823 	rlca
      0013A2 E6 01                 4824 	and	a,#0x01
                                   4825 ;src/main.c:506: set_sprite_tile(10+(i<<1), 0x7f);
      0013A4 32                    4826 	ld	(hl-), a
      0013A5 2A                    4827 	ld	a, (hl+)
      0013A6 23                    4828 	inc	hl
      0013A7 C6 0A                 4829 	add	a, #0x0a
      0013A9 77                    4830 	ld	(hl), a
                                   4831 ;src/main.c:503: if (enemies[i].visible == 1) {
      0013AA F8 07                 4832 	ldhl	sp,	#7
      0013AC 7E                    4833 	ld	a, (hl)
      0013AD 3D                    4834 	dec	a
      0013AE 20 74                 4835 	jr	NZ, 00154$
                                   4836 ;src/main.c:504: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013B0 F8 0D                 4837 	ldhl	sp,	#13
      0013B2 7E                    4838 	ld	a, (hl)
      0013B3 B7                    4839 	or	a, a
      0013B4 20 43                 4840 	jr	NZ, 00135$
      0013B6 F8 0A                 4841 	ldhl	sp,	#10
      0013B8 3E AC                 4842 	ld	a, #0xac
      0013BA 96                    4843 	sub	a, (hl)
      0013BB 23                    4844 	inc	hl
      0013BC 3E 00                 4845 	ld	a, #0x00
      0013BE 9E                    4846 	sbc	a, (hl)
      0013BF 3E 00                 4847 	ld	a, #0x00
      0013C1 57                    4848 	ld	d, a
      0013C2 CB 7E                 4849 	bit	7, (hl)
      0013C4 28 07                 4850 	jr	Z, 00437$
      0013C6 CB 7A                 4851 	bit	7, d
      0013C8 20 08                 4852 	jr	NZ, 00438$
      0013CA BF                    4853 	cp	a, a
      0013CB 18 05                 4854 	jr	00438$
      0013CD                       4855 00437$:
      0013CD CB 7A                 4856 	bit	7, d
      0013CF 28 01                 4857 	jr	Z, 00438$
      0013D1 37                    4858 	scf
      0013D2                       4859 00438$:
      0013D2 38 25                 4860 	jr	C, 00135$
      0013D4 69                    4861 	ld	l, c
      0013D5 60                    4862 	ld	h, b
      0013D6 2A                    4863 	ld	a, (hl+)
      0013D7 4F                    4864 	ld	c, a
      0013D8 46                    4865 	ld	b, (hl)
      0013D9 CB 78                 4866 	bit	7, b
      0013DB 20 1C                 4867 	jr	NZ, 00135$
      0013DD 58                    4868 	ld	e, b
      0013DE 16 00                 4869 	ld	d, #0x00
      0013E0 3E 98                 4870 	ld	a, #0x98
      0013E2 B9                    4871 	cp	a, c
      0013E3 3E 00                 4872 	ld	a, #0x00
      0013E5 98                    4873 	sbc	a, b
      0013E6 CB 7B                 4874 	bit	7, e
      0013E8 28 07                 4875 	jr	Z, 00439$
      0013EA CB 7A                 4876 	bit	7, d
      0013EC 20 08                 4877 	jr	NZ, 00440$
      0013EE BF                    4878 	cp	a, a
      0013EF 18 05                 4879 	jr	00440$
      0013F1                       4880 00439$:
      0013F1 CB 7A                 4881 	bit	7, d
      0013F3 28 01                 4882 	jr	Z, 00440$
      0013F5 37                    4883 	scf
      0013F6                       4884 00440$:
      0013F6 D2r58r15              4885 	jp	NC, 00157$
      0013F9                       4886 00135$:
                                   4887 ;src/main.c:505: enemies[i].visible = 0;
      0013F9 F8 05                 4888 	ldhl	sp,	#5
      0013FB 2A                    4889 	ld	a,	(hl+)
      0013FC 66                    4890 	ld	h, (hl)
      0013FD 6F                    4891 	ld	l, a
      0013FE 36 00                 4892 	ld	(hl), #0x00
                                   4893 ;src/main.c:506: set_sprite_tile(10+(i<<1), 0x7f);
      001400 F8 0E                 4894 	ldhl	sp,	#14
                                   4895 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001402 6E                    4896 	ld	l, (hl)
      001403 01r00r00              4897 	ld	bc, #_shadow_OAM+0
                                   4898 ;	spillPairReg hl
                                   4899 ;	spillPairReg hl
      001406 26 00                 4900 	ld	h, #0x00
                                   4901 ;	spillPairReg hl
                                   4902 ;	spillPairReg hl
      001408 29                    4903 	add	hl, hl
      001409 29                    4904 	add	hl, hl
      00140A 09                    4905 	add	hl, bc
      00140B 23                    4906 	inc	hl
      00140C 23                    4907 	inc	hl
      00140D 36 7F                 4908 	ld	(hl), #0x7f
                                   4909 ;src/main.c:507: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00140F F8 0C                 4910 	ldhl	sp,	#12
      001411 7E                    4911 	ld	a, (hl)
      001412 C6 0B                 4912 	add	a, #0x0b
                                   4913 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001414 6F                    4914 	ld	l, a
      001415 01r00r00              4915 	ld	bc, #_shadow_OAM+0
                                   4916 ;	spillPairReg hl
                                   4917 ;	spillPairReg hl
      001418 26 00                 4918 	ld	h, #0x00
                                   4919 ;	spillPairReg hl
                                   4920 ;	spillPairReg hl
      00141A 29                    4921 	add	hl, hl
      00141B 29                    4922 	add	hl, hl
      00141C 09                    4923 	add	hl, bc
      00141D 23                    4924 	inc	hl
      00141E 23                    4925 	inc	hl
      00141F 36 7F                 4926 	ld	(hl), #0x7f
                                   4927 ;src/main.c:507: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001421 C3r58r15              4928 	jp	00157$
      001424                       4929 00154$:
                                   4930 ;src/main.c:511: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001424 F8 0D                 4931 	ldhl	sp,	#13
      001426 CB 46                 4932 	bit	0, (hl)
      001428 C2rC3r14              4933 	jp	NZ, 00148$
      00142B F8 0A                 4934 	ldhl	sp,	#10
      00142D 2A                    4935 	ld	a, (hl+)
      00142E D6 AC                 4936 	sub	a, #0xac
      001430 7E                    4937 	ld	a, (hl)
      001431 DE 00                 4938 	sbc	a, #0x00
      001433 56                    4939 	ld	d, (hl)
      001434 3E 00                 4940 	ld	a, #0x00
      001436 CB 7F                 4941 	bit	7,a
      001438 28 07                 4942 	jr	Z, 00441$
      00143A CB 7A                 4943 	bit	7, d
      00143C 20 08                 4944 	jr	NZ, 00442$
      00143E BF                    4945 	cp	a, a
      00143F 18 05                 4946 	jr	00442$
      001441                       4947 00441$:
      001441 CB 7A                 4948 	bit	7, d
      001443 28 01                 4949 	jr	Z, 00442$
      001445 37                    4950 	scf
      001446                       4951 00442$:
      001446 30 7B                 4952 	jr	NC, 00148$
      001448 69                    4953 	ld	l, c
      001449 60                    4954 	ld	h, b
      00144A 2A                    4955 	ld	a,	(hl+)
      00144B 66                    4956 	ld	h, (hl)
                                   4957 ;	spillPairReg hl
      00144C 6F                    4958 	ld	l, a
                                   4959 ;	spillPairReg hl
                                   4960 ;	spillPairReg hl
      00144D 5C                    4961 	ld	e, h
      00144E AF                    4962 	xor	a, a
      00144F 57                    4963 	ld	d, a
      001450 BD                    4964 	cp	a, l
      001451 9C                    4965 	sbc	a, h
      001452 CB 7B                 4966 	bit	7, e
      001454 28 07                 4967 	jr	Z, 00443$
      001456 CB 7A                 4968 	bit	7, d
      001458 20 08                 4969 	jr	NZ, 00444$
      00145A BF                    4970 	cp	a, a
      00145B 18 05                 4971 	jr	00444$
      00145D                       4972 00443$:
      00145D CB 7A                 4973 	bit	7, d
      00145F 28 01                 4974 	jr	Z, 00444$
      001461 37                    4975 	scf
      001462                       4976 00444$:
      001462 30 5F                 4977 	jr	NC, 00148$
      001464 7D                    4978 	ld	a, l
      001465 D6 98                 4979 	sub	a, #0x98
      001467 7C                    4980 	ld	a, h
      001468 17                    4981 	rla
      001469 3F                    4982 	ccf
      00146A 1F                    4983 	rra
      00146B DE 80                 4984 	sbc	a, #0x80
      00146D 30 54                 4985 	jr	NC, 00148$
                                   4986 ;src/main.c:512: enemies[i].visible = 1;
      00146F F8 05                 4987 	ldhl	sp,	#5
      001471 2A                    4988 	ld	a,	(hl+)
      001472 66                    4989 	ld	h, (hl)
      001473 6F                    4990 	ld	l, a
      001474 36 01                 4991 	ld	(hl), #0x01
                                   4992 ;src/main.c:513: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      001476 F8 01                 4993 	ldhl	sp,#1
      001478 2A                    4994 	ld	a, (hl+)
      001479 5F                    4995 	ld	e, a
      00147A 56                    4996 	ld	d, (hl)
      00147B 21 06 00              4997 	ld	hl, #0x0006
      00147E 19                    4998 	add	hl, de
      00147F 4D                    4999 	ld	c, l
      001480 44                    5000 	ld	b, h
      001481 0A                    5001 	ld	a, (bc)
      001482 4F                    5002 	ld	c, a
      001483 F8 0E                 5003 	ldhl	sp,	#14
                                   5004 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001485 6E                    5005 	ld	l, (hl)
                                   5006 ;	spillPairReg hl
                                   5007 ;	spillPairReg hl
      001486 26 00                 5008 	ld	h, #0x00
                                   5009 ;	spillPairReg hl
                                   5010 ;	spillPairReg hl
      001488 29                    5011 	add	hl, hl
      001489 29                    5012 	add	hl, hl
      00148A 11r00r00              5013 	ld	de, #_shadow_OAM
      00148D 19                    5014 	add	hl, de
      00148E 23                    5015 	inc	hl
      00148F 23                    5016 	inc	hl
      001490 71                    5017 	ld	(hl), c
                                   5018 ;src/main.c:514: if (enemies[i].spriteCount == 2) {
      001491 F8 01                 5019 	ldhl	sp,#1
      001493 2A                    5020 	ld	a, (hl+)
      001494 5F                    5021 	ld	e, a
      001495 56                    5022 	ld	d, (hl)
      001496 21 08 00              5023 	ld	hl, #0x0008
      001499 19                    5024 	add	hl, de
      00149A 4D                    5025 	ld	c, l
      00149B 44                    5026 	ld	b, h
      00149C 0A                    5027 	ld	a, (bc)
      00149D D6 02                 5028 	sub	a, #0x02
      00149F C2r58r15              5029 	jp	NZ,00157$
                                   5030 ;src/main.c:515: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0014A2 F8 01                 5031 	ldhl	sp,#1
      0014A4 2A                    5032 	ld	a, (hl+)
      0014A5 5F                    5033 	ld	e, a
      0014A6 56                    5034 	ld	d, (hl)
      0014A7 21 07 00              5035 	ld	hl, #0x0007
      0014AA 19                    5036 	add	hl, de
      0014AB 4D                    5037 	ld	c, l
      0014AC 44                    5038 	ld	b, h
      0014AD 0A                    5039 	ld	a, (bc)
      0014AE 4F                    5040 	ld	c, a
      0014AF F8 0C                 5041 	ldhl	sp,	#12
      0014B1 7E                    5042 	ld	a, (hl)
      0014B2 C6 0B                 5043 	add	a, #0x0b
                                   5044 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0014B4 6F                    5045 	ld	l, a
                                   5046 ;	spillPairReg hl
                                   5047 ;	spillPairReg hl
      0014B5 26 00                 5048 	ld	h, #0x00
                                   5049 ;	spillPairReg hl
                                   5050 ;	spillPairReg hl
      0014B7 29                    5051 	add	hl, hl
      0014B8 29                    5052 	add	hl, hl
      0014B9 11r00r00              5053 	ld	de, #_shadow_OAM
      0014BC 19                    5054 	add	hl, de
      0014BD 23                    5055 	inc	hl
      0014BE 23                    5056 	inc	hl
      0014BF 71                    5057 	ld	(hl), c
                                   5058 ;src/main.c:515: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0014C0 C3r58r15              5059 	jp	00157$
      0014C3                       5060 00148$:
                                   5061 ;src/main.c:518: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      0014C3 F8 08                 5062 	ldhl	sp,	#8
      0014C5 2A                    5063 	ld	a, (hl+)
      0014C6 D6 9C                 5064 	sub	a, #0x9c
      0014C8 7E                    5065 	ld	a, (hl)
      0014C9 DE FF                 5066 	sbc	a, #0xff
      0014CB 56                    5067 	ld	d, (hl)
      0014CC 3E FF                 5068 	ld	a, #0xff
      0014CE CB 7F                 5069 	bit	7,a
      0014D0 28 07                 5070 	jr	Z, 00447$
      0014D2 CB 7A                 5071 	bit	7, d
      0014D4 20 08                 5072 	jr	NZ, 00448$
      0014D6 BF                    5073 	cp	a, a
      0014D7 18 05                 5074 	jr	00448$
      0014D9                       5075 00447$:
      0014D9 CB 7A                 5076 	bit	7, d
      0014DB 28 01                 5077 	jr	Z, 00448$
      0014DD 37                    5078 	scf
      0014DE                       5079 00448$:
      0014DE 38 49                 5080 	jr	C, 00142$
      0014E0 F8 0A                 5081 	ldhl	sp,	#10
      0014E2 3E 10                 5082 	ld	a, #0x10
      0014E4 96                    5083 	sub	a, (hl)
      0014E5 23                    5084 	inc	hl
      0014E6 3E 01                 5085 	ld	a, #0x01
      0014E8 9E                    5086 	sbc	a, (hl)
      0014E9 3E 01                 5087 	ld	a, #0x01
      0014EB 57                    5088 	ld	d, a
      0014EC CB 7E                 5089 	bit	7, (hl)
      0014EE 28 07                 5090 	jr	Z, 00449$
      0014F0 CB 7A                 5091 	bit	7, d
      0014F2 20 08                 5092 	jr	NZ, 00450$
      0014F4 BF                    5093 	cp	a, a
      0014F5 18 05                 5094 	jr	00450$
      0014F7                       5095 00449$:
      0014F7 CB 7A                 5096 	bit	7, d
      0014F9 28 01                 5097 	jr	Z, 00450$
      0014FB 37                    5098 	scf
      0014FC                       5099 00450$:
      0014FC 38 2B                 5100 	jr	C, 00142$
      0014FE 69                    5101 	ld	l, c
      0014FF 60                    5102 	ld	h, b
      001500 2A                    5103 	ld	a, (hl+)
      001501 4F                    5104 	ld	c, a
      001502 46                    5105 	ld	b, (hl)
      001503 79                    5106 	ld	a, c
      001504 D6 9C                 5107 	sub	a, #0x9c
      001506 78                    5108 	ld	a, b
      001507 17                    5109 	rla
      001508 3F                    5110 	ccf
      001509 1F                    5111 	rra
      00150A DE 7F                 5112 	sbc	a, #0x7f
      00150C 38 1B                 5113 	jr	C, 00142$
      00150E 58                    5114 	ld	e, b
      00150F 16 00                 5115 	ld	d, #0x00
      001511 3E FC                 5116 	ld	a, #0xfc
      001513 B9                    5117 	cp	a, c
      001514 3E 00                 5118 	ld	a, #0x00
      001516 98                    5119 	sbc	a, b
      001517 CB 7B                 5120 	bit	7, e
      001519 28 07                 5121 	jr	Z, 00451$
      00151B CB 7A                 5122 	bit	7, d
      00151D 20 08                 5123 	jr	NZ, 00452$
      00151F BF                    5124 	cp	a, a
      001520 18 05                 5125 	jr	00452$
      001522                       5126 00451$:
      001522 CB 7A                 5127 	bit	7, d
      001524 28 01                 5128 	jr	Z, 00452$
      001526 37                    5129 	scf
      001527                       5130 00452$:
      001527 30 2F                 5131 	jr	NC, 00157$
      001529                       5132 00142$:
                                   5133 ;src/main.c:519: enemies[i].alive = 0;
      001529 F8 03                 5134 	ldhl	sp,	#3
      00152B 2A                    5135 	ld	a,	(hl+)
      00152C 66                    5136 	ld	h, (hl)
      00152D 6F                    5137 	ld	l, a
      00152E 36 00                 5138 	ld	(hl), #0x00
                                   5139 ;src/main.c:520: set_sprite_tile(10+(i<<1), 0x7f);
      001530 F8 0E                 5140 	ldhl	sp,	#14
                                   5141 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001532 6E                    5142 	ld	l, (hl)
      001533 01r00r00              5143 	ld	bc, #_shadow_OAM+0
                                   5144 ;	spillPairReg hl
                                   5145 ;	spillPairReg hl
      001536 26 00                 5146 	ld	h, #0x00
                                   5147 ;	spillPairReg hl
                                   5148 ;	spillPairReg hl
      001538 29                    5149 	add	hl, hl
      001539 29                    5150 	add	hl, hl
      00153A 09                    5151 	add	hl, bc
      00153B 23                    5152 	inc	hl
      00153C 23                    5153 	inc	hl
      00153D 36 7F                 5154 	ld	(hl), #0x7f
                                   5155 ;src/main.c:521: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00153F F8 0C                 5156 	ldhl	sp,	#12
      001541 7E                    5157 	ld	a, (hl)
      001542 C6 0B                 5158 	add	a, #0x0b
                                   5159 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001544 6F                    5160 	ld	l, a
      001545 01r00r00              5161 	ld	bc, #_shadow_OAM+0
                                   5162 ;	spillPairReg hl
                                   5163 ;	spillPairReg hl
      001548 26 00                 5164 	ld	h, #0x00
                                   5165 ;	spillPairReg hl
                                   5166 ;	spillPairReg hl
      00154A 29                    5167 	add	hl, hl
      00154B 29                    5168 	add	hl, hl
      00154C 09                    5169 	add	hl, bc
      00154D 23                    5170 	inc	hl
      00154E 23                    5171 	inc	hl
      00154F 36 7F                 5172 	ld	(hl), #0x7f
                                   5173 ;src/main.c:522: initEnemies(0);
      001551 AF                    5174 	xor	a, a
      001552 F5                    5175 	push	af
      001553 33                    5176 	inc	sp
      001554 CDr04r0D              5177 	call	_initEnemies
      001557 33                    5178 	inc	sp
      001558                       5179 00157$:
                                   5180 ;src/main.c:526: if (enemies[i].spriteCount == 1) {
      001558 F8 0F                 5181 	ldhl	sp,	#15
      00155A 4E                    5182 	ld	c, (hl)
      00155B 06 00                 5183 	ld	b, #0x00
      00155D 69                    5184 	ld	l, c
      00155E 60                    5185 	ld	h, b
      00155F 29                    5186 	add	hl, hl
      001560 29                    5187 	add	hl, hl
      001561 29                    5188 	add	hl, hl
      001562 29                    5189 	add	hl, hl
      001563 09                    5190 	add	hl, bc
      001564 01r55r00              5191 	ld	bc,#_enemies
      001567 09                    5192 	add	hl,bc
      001568 4D                    5193 	ld	c, l
      001569 44                    5194 	ld	b, h
      00156A 21 08 00              5195 	ld	hl, #0x0008
      00156D 09                    5196 	add	hl, bc
      00156E 5E                    5197 	ld	e, (hl)
                                   5198 ;src/main.c:506: set_sprite_tile(10+(i<<1), 0x7f);
      00156F F8 0F                 5199 	ldhl	sp,	#15
      001571 3A                    5200 	ld	a, (hl-)
      001572 87                    5201 	add	a, a
      001573 77                    5202 	ld	(hl), a
      001574 7E                    5203 	ld	a, (hl)
      001575 C6 0A                 5204 	add	a, #0x0a
      001577 F8 0A                 5205 	ldhl	sp,	#10
      001579 77                    5206 	ld	(hl), a
                                   5207 ;src/main.c:526: if (enemies[i].spriteCount == 1) {
      00157A 1D                    5208 	dec	e
      00157B 20 52                 5209 	jr	NZ, 00165$
                                   5210 ;src/main.c:527: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00157D 59                    5211 	ld	e, c
      00157E 50                    5212 	ld	d, b
      00157F 13                    5213 	inc	de
      001580 13                    5214 	inc	de
      001581 1A                    5215 	ld	a, (de)
      001582 C6 0C                 5216 	add	a, #0x0c
      001584 5F                    5217 	ld	e, a
      001585 0A                    5218 	ld	a, (bc)
      001586 C6 04                 5219 	add	a, #0x04
      001588 F8 0E                 5220 	ldhl	sp,	#14
      00158A 77                    5221 	ld	(hl), a
      00158B F8 0A                 5222 	ldhl	sp,	#10
      00158D 56                    5223 	ld	d, (hl)
                                   5224 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00158E 6A                    5225 	ld	l, d
                                   5226 ;	spillPairReg hl
                                   5227 ;	spillPairReg hl
      00158F 26 00                 5228 	ld	h, #0x00
                                   5229 ;	spillPairReg hl
                                   5230 ;	spillPairReg hl
      001591 29                    5231 	add	hl, hl
      001592 29                    5232 	add	hl, hl
      001593 D5                    5233 	push	de
      001594 11r00r00              5234 	ld	de, #_shadow_OAM
      001597 19                    5235 	add	hl, de
      001598 D1                    5236 	pop	de
                                   5237 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001599 7B                    5238 	ld	a, e
      00159A 22                    5239 	ld	(hl+), a
      00159B 5D                    5240 	ld	e, l
      00159C 54                    5241 	ld	d, h
      00159D F8 0E                 5242 	ldhl	sp,	#14
      00159F 7E                    5243 	ld	a, (hl)
      0015A0 12                    5244 	ld	(de), a
                                   5245 ;src/main.c:528: if (enemies[i].xSpeed >= 0) {
      0015A1 21 0E 00              5246 	ld	hl, #0x000e
      0015A4 09                    5247 	add	hl, bc
      0015A5 CB 7E                 5248 	bit	7, (hl)
      0015A7 20 13                 5249 	jr	NZ, 00159$
                                   5250 ;src/main.c:529: set_sprite_prop(10+(i<<1), 0);
      0015A9 F8 0A                 5251 	ldhl	sp,	#10
                                   5252 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015AB 6E                    5253 	ld	l, (hl)
      0015AC 01r00r00              5254 	ld	bc, #_shadow_OAM+0
                                   5255 ;	spillPairReg hl
                                   5256 ;	spillPairReg hl
      0015AF 26 00                 5257 	ld	h, #0x00
                                   5258 ;	spillPairReg hl
                                   5259 ;	spillPairReg hl
      0015B1 29                    5260 	add	hl, hl
      0015B2 29                    5261 	add	hl, hl
      0015B3 09                    5262 	add	hl, bc
      0015B4 23                    5263 	inc	hl
      0015B5 23                    5264 	inc	hl
      0015B6 23                    5265 	inc	hl
      0015B7 36 00                 5266 	ld	(hl), #0x00
                                   5267 ;src/main.c:529: set_sprite_prop(10+(i<<1), 0);
      0015B9 C3rC5r16              5268 	jp	00199$
      0015BC                       5269 00159$:
                                   5270 ;src/main.c:532: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015BC F8 0A                 5271 	ldhl	sp,	#10
                                   5272 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015BE 6E                    5273 	ld	l, (hl)
      0015BF 01r00r00              5274 	ld	bc, #_shadow_OAM+0
                                   5275 ;	spillPairReg hl
                                   5276 ;	spillPairReg hl
      0015C2 26 00                 5277 	ld	h, #0x00
                                   5278 ;	spillPairReg hl
                                   5279 ;	spillPairReg hl
      0015C4 29                    5280 	add	hl, hl
      0015C5 29                    5281 	add	hl, hl
      0015C6 09                    5282 	add	hl, bc
      0015C7 23                    5283 	inc	hl
      0015C8 23                    5284 	inc	hl
      0015C9 23                    5285 	inc	hl
      0015CA 36 20                 5286 	ld	(hl), #0x20
                                   5287 ;src/main.c:532: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015CC C3rC5r16              5288 	jp	00199$
      0015CF                       5289 00165$:
                                   5290 ;src/main.c:537: if (enemies[i].xSpeed >= 0) {
      0015CF 21 0E 00              5291 	ld	hl, #0x000e
      0015D2 09                    5292 	add	hl, bc
      0015D3 E5                    5293 	push	hl
      0015D4 7D                    5294 	ld	a, l
      0015D5 F8 0E                 5295 	ldhl	sp,	#14
      0015D7 77                    5296 	ld	(hl), a
      0015D8 E1                    5297 	pop	hl
      0015D9 7C                    5298 	ld	a, h
      0015DA F8 0D                 5299 	ldhl	sp,	#13
      0015DC 32                    5300 	ld	(hl-), a
      0015DD 2A                    5301 	ld	a, (hl+)
      0015DE 5F                    5302 	ld	e, a
      0015DF 56                    5303 	ld	d, (hl)
      0015E0 1A                    5304 	ld	a, (de)
                                   5305 ;	spillPairReg hl
                                   5306 ;	spillPairReg hl
      0015E1 CB 7F                 5307 	bit	7,a
      0015E3 20 70                 5308 	jr	NZ, 00162$
                                   5309 ;src/main.c:538: set_sprite_prop(10+(i<<1), 0);
      0015E5 F8 0A                 5310 	ldhl	sp,	#10
                                   5311 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015E7 6E                    5312 	ld	l, (hl)
                                   5313 ;	spillPairReg hl
                                   5314 ;	spillPairReg hl
      0015E8 26 00                 5315 	ld	h, #0x00
                                   5316 ;	spillPairReg hl
                                   5317 ;	spillPairReg hl
      0015EA 29                    5318 	add	hl, hl
      0015EB 29                    5319 	add	hl, hl
      0015EC 11r00r00              5320 	ld	de, #_shadow_OAM
      0015EF 19                    5321 	add	hl, de
      0015F0 23                    5322 	inc	hl
      0015F1 23                    5323 	inc	hl
      0015F2 23                    5324 	inc	hl
      0015F3 36 00                 5325 	ld	(hl), #0x00
                                   5326 ;src/main.c:539: set_sprite_prop(10+(i<<1)+1, 0);
      0015F5 F8 0E                 5327 	ldhl	sp,	#14
      0015F7 7E                    5328 	ld	a, (hl)
      0015F8 C6 0B                 5329 	add	a, #0x0b
      0015FA F8 0B                 5330 	ldhl	sp,	#11
      0015FC 77                    5331 	ld	(hl), a
                                   5332 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015FD 6E                    5333 	ld	l, (hl)
                                   5334 ;	spillPairReg hl
                                   5335 ;	spillPairReg hl
      0015FE 26 00                 5336 	ld	h, #0x00
                                   5337 ;	spillPairReg hl
                                   5338 ;	spillPairReg hl
      001600 29                    5339 	add	hl, hl
      001601 29                    5340 	add	hl, hl
      001602 11r00r00              5341 	ld	de, #_shadow_OAM
      001605 19                    5342 	add	hl, de
      001606 23                    5343 	inc	hl
      001607 23                    5344 	inc	hl
      001608 23                    5345 	inc	hl
      001609 36 00                 5346 	ld	(hl), #0x00
                                   5347 ;src/main.c:540: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      00160B 21 02 00              5348 	ld	hl, #0x0002
      00160E 09                    5349 	add	hl, bc
      00160F E5                    5350 	push	hl
      001610 7D                    5351 	ld	a, l
      001611 F8 0E                 5352 	ldhl	sp,	#14
      001613 77                    5353 	ld	(hl), a
      001614 E1                    5354 	pop	hl
      001615 7C                    5355 	ld	a, h
      001616 F8 0D                 5356 	ldhl	sp,	#13
      001618 32                    5357 	ld	(hl-), a
      001619 2A                    5358 	ld	a, (hl+)
      00161A 5F                    5359 	ld	e, a
      00161B 2A                    5360 	ld	a, (hl+)
      00161C 57                    5361 	ld	d, a
      00161D 1A                    5362 	ld	a, (de)
      00161E C6 08                 5363 	add	a, #0x08
      001620 5F                    5364 	ld	e, a
      001621 0A                    5365 	ld	a, (bc)
      001622 77                    5366 	ld	(hl), a
      001623 F8 0A                 5367 	ldhl	sp,	#10
      001625 56                    5368 	ld	d, (hl)
                                   5369 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001626 6A                    5370 	ld	l, d
                                   5371 ;	spillPairReg hl
                                   5372 ;	spillPairReg hl
      001627 26 00                 5373 	ld	h, #0x00
                                   5374 ;	spillPairReg hl
                                   5375 ;	spillPairReg hl
      001629 29                    5376 	add	hl, hl
      00162A 29                    5377 	add	hl, hl
      00162B D5                    5378 	push	de
      00162C 11r00r00              5379 	ld	de, #_shadow_OAM
      00162F 19                    5380 	add	hl, de
      001630 D1                    5381 	pop	de
                                   5382 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001631 7B                    5383 	ld	a, e
      001632 22                    5384 	ld	(hl+), a
      001633 5D                    5385 	ld	e, l
      001634 54                    5386 	ld	d, h
      001635 F8 0E                 5387 	ldhl	sp,	#14
                                   5388 ;src/main.c:541: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001637 3A                    5389 	ld	a, (hl-)
      001638 2B                    5390 	dec	hl
      001639 12                    5391 	ld	(de), a
      00163A 2A                    5392 	ld	a, (hl+)
      00163B 5F                    5393 	ld	e, a
      00163C 3A                    5394 	ld	a, (hl-)
      00163D 2B                    5395 	dec	hl
      00163E 57                    5396 	ld	d, a
      00163F 1A                    5397 	ld	a, (de)
      001640 C6 08                 5398 	add	a, #0x08
      001642 57                    5399 	ld	d, a
      001643 0A                    5400 	ld	a, (bc)
      001644 C6 08                 5401 	add	a, #0x08
      001646 5F                    5402 	ld	e, a
                                   5403 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001647 6E                    5404 	ld	l, (hl)
                                   5405 ;	spillPairReg hl
                                   5406 ;	spillPairReg hl
      001648 26 00                 5407 	ld	h, #0x00
                                   5408 ;	spillPairReg hl
                                   5409 ;	spillPairReg hl
      00164A 29                    5410 	add	hl, hl
      00164B 29                    5411 	add	hl, hl
      00164C 01r00r00              5412 	ld	bc, #_shadow_OAM
      00164F 09                    5413 	add	hl, bc
                                   5414 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001650 7A                    5415 	ld	a, d
      001651 22                    5416 	ld	(hl+), a
      001652 73                    5417 	ld	(hl), e
                                   5418 ;src/main.c:541: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001653 18 70                 5419 	jr	00199$
      001655                       5420 00162$:
                                   5421 ;src/main.c:544: set_sprite_prop(10+(i<<1), S_FLIPX);
      001655 F8 0A                 5422 	ldhl	sp,	#10
      001657 5E                    5423 	ld	e, (hl)
                                   5424 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001658 26 00                 5425 	ld	h, #0x00
                                   5426 ;	spillPairReg hl
                                   5427 ;	spillPairReg hl
      00165A 6B                    5428 	ld	l, e
      00165B 29                    5429 	add	hl, hl
      00165C 29                    5430 	add	hl, hl
      00165D 11r00r00              5431 	ld	de, #_shadow_OAM
      001660 19                    5432 	add	hl, de
      001661 23                    5433 	inc	hl
      001662 23                    5434 	inc	hl
      001663 23                    5435 	inc	hl
      001664 36 20                 5436 	ld	(hl), #0x20
                                   5437 ;src/main.c:545: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001666 F8 0E                 5438 	ldhl	sp,	#14
      001668 7E                    5439 	ld	a, (hl)
      001669 C6 0B                 5440 	add	a, #0x0b
      00166B F8 0B                 5441 	ldhl	sp,	#11
      00166D 77                    5442 	ld	(hl), a
      00166E 5E                    5443 	ld	e, (hl)
                                   5444 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00166F 26 00                 5445 	ld	h, #0x00
                                   5446 ;	spillPairReg hl
                                   5447 ;	spillPairReg hl
      001671 6B                    5448 	ld	l, e
      001672 29                    5449 	add	hl, hl
      001673 29                    5450 	add	hl, hl
      001674 11r00r00              5451 	ld	de, #_shadow_OAM
      001677 19                    5452 	add	hl, de
      001678 23                    5453 	inc	hl
      001679 23                    5454 	inc	hl
      00167A 23                    5455 	inc	hl
      00167B 36 20                 5456 	ld	(hl), #0x20
                                   5457 ;src/main.c:546: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      00167D 21 02 00              5458 	ld	hl, #0x0002
      001680 09                    5459 	add	hl, bc
      001681 E5                    5460 	push	hl
      001682 7D                    5461 	ld	a, l
      001683 F8 0E                 5462 	ldhl	sp,	#14
      001685 77                    5463 	ld	(hl), a
      001686 E1                    5464 	pop	hl
      001687 7C                    5465 	ld	a, h
      001688 F8 0D                 5466 	ldhl	sp,	#13
      00168A 32                    5467 	ld	(hl-), a
      00168B 2A                    5468 	ld	a, (hl+)
      00168C 5F                    5469 	ld	e, a
      00168D 2A                    5470 	ld	a, (hl+)
      00168E 57                    5471 	ld	d, a
      00168F 1A                    5472 	ld	a, (de)
      001690 C6 08                 5473 	add	a, #0x08
      001692 5F                    5474 	ld	e, a
      001693 0A                    5475 	ld	a, (bc)
      001694 C6 08                 5476 	add	a, #0x08
      001696 77                    5477 	ld	(hl), a
      001697 F8 0A                 5478 	ldhl	sp,	#10
      001699 56                    5479 	ld	d, (hl)
                                   5480 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00169A 6A                    5481 	ld	l, d
                                   5482 ;	spillPairReg hl
                                   5483 ;	spillPairReg hl
      00169B 26 00                 5484 	ld	h, #0x00
                                   5485 ;	spillPairReg hl
                                   5486 ;	spillPairReg hl
      00169D 29                    5487 	add	hl, hl
      00169E 29                    5488 	add	hl, hl
      00169F D5                    5489 	push	de
      0016A0 11r00r00              5490 	ld	de, #_shadow_OAM
      0016A3 19                    5491 	add	hl, de
      0016A4 D1                    5492 	pop	de
                                   5493 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016A5 7B                    5494 	ld	a, e
      0016A6 22                    5495 	ld	(hl+), a
      0016A7 5D                    5496 	ld	e, l
      0016A8 54                    5497 	ld	d, h
      0016A9 F8 0E                 5498 	ldhl	sp,	#14
                                   5499 ;src/main.c:547: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0016AB 3A                    5500 	ld	a, (hl-)
      0016AC 2B                    5501 	dec	hl
      0016AD 12                    5502 	ld	(de), a
      0016AE 2A                    5503 	ld	a, (hl+)
      0016AF 5F                    5504 	ld	e, a
      0016B0 3A                    5505 	ld	a, (hl-)
      0016B1 2B                    5506 	dec	hl
      0016B2 57                    5507 	ld	d, a
      0016B3 1A                    5508 	ld	a, (de)
      0016B4 C6 08                 5509 	add	a, #0x08
      0016B6 57                    5510 	ld	d, a
      0016B7 0A                    5511 	ld	a, (bc)
      0016B8 5F                    5512 	ld	e, a
                                   5513 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0016B9 6E                    5514 	ld	l, (hl)
                                   5515 ;	spillPairReg hl
                                   5516 ;	spillPairReg hl
      0016BA 26 00                 5517 	ld	h, #0x00
                                   5518 ;	spillPairReg hl
                                   5519 ;	spillPairReg hl
      0016BC 29                    5520 	add	hl, hl
      0016BD 29                    5521 	add	hl, hl
      0016BE 01r00r00              5522 	ld	bc, #_shadow_OAM
      0016C1 09                    5523 	add	hl, bc
                                   5524 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016C2 7A                    5525 	ld	a, d
      0016C3 22                    5526 	ld	(hl+), a
      0016C4 73                    5527 	ld	(hl), e
                                   5528 ;src/main.c:547: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0016C5                       5529 00199$:
                                   5530 ;src/main.c:500: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0016C5 F8 0F                 5531 	ldhl	sp,	#15
      0016C7 34                    5532 	inc	(hl)
      0016C8 C3r25r13              5533 	jp	00198$
      0016CB                       5534 00200$:
                                   5535 ;src/main.c:553: }
      0016CB E8 10                 5536 	add	sp, #16
      0016CD C9                    5537 	ret
                                   5538 ;src/main.c:558: void move() {
                                   5539 ;	---------------------------------
                                   5540 ; Function move
                                   5541 ; ---------------------------------
      0016CE                       5542 _move::
      0016CE E8 F8                 5543 	add	sp, #-8
                                   5544 ;src/main.c:562: if (joydata & J_A) {
      0016D0 FArE6r00              5545 	ld	a, (#_joydata)
      0016D3 CB 67                 5546 	bit	4, a
      0016D5 28 16                 5547 	jr	Z, 00102$
                                   5548 ;src/main.c:563: xSpeed += xDir + xDir + xDir;
      0016D7 21r8Br00              5549 	ld	hl, #_xDir
      0016DA 7E                    5550 	ld	a, (hl)
      0016DB 87                    5551 	add	a, a
      0016DC 86                    5552 	add	a, (hl)
      0016DD 21r8Dr00              5553 	ld	hl, #_xSpeed
      0016E0 86                    5554 	add	a, (hl)
      0016E1 77                    5555 	ld	(hl), a
                                   5556 ;src/main.c:564: ySpeed += yDir + yDir + yDir;
      0016E2 21r8Cr00              5557 	ld	hl, #_yDir
      0016E5 7E                    5558 	ld	a, (hl)
      0016E6 87                    5559 	add	a, a
      0016E7 86                    5560 	add	a, (hl)
      0016E8 21r8Er00              5561 	ld	hl, #_ySpeed
      0016EB 86                    5562 	add	a, (hl)
      0016EC 77                    5563 	ld	(hl), a
      0016ED                       5564 00102$:
                                   5565 ;src/main.c:568: xSpeed = clamp(xSpeed, -100, 100);
      0016ED 21r8Dr00              5566 	ld	hl, #_xSpeed
      0016F0 4E                    5567 	ld	c, (hl)
                                   5568 ;src/main.c:326: return (value < min) ? min : (value > max) ? max : value;
      0016F1 79                    5569 	ld	a, c
      0016F2 EE 80                 5570 	xor	a, #0x80
      0016F4 D6 1C                 5571 	sub	a, #0x1c
      0016F6 30 04                 5572 	jr	NC, 00165$
      0016F8 0E 9C                 5573 	ld	c, #0x9c
      0016FA 18 19                 5574 	jr	00166$
      0016FC                       5575 00165$:
      0016FC 59                    5576 	ld	e, c
      0016FD 3E 64                 5577 	ld	a,#0x64
      0016FF 57                    5578 	ld	d,a
      001700 91                    5579 	sub	a, c
      001701 CB 7B                 5580 	bit	7, e
      001703 28 07                 5581 	jr	Z, 00342$
      001705 CB 7A                 5582 	bit	7, d
      001707 20 08                 5583 	jr	NZ, 00343$
      001709 BF                    5584 	cp	a, a
      00170A 18 05                 5585 	jr	00343$
      00170C                       5586 00342$:
      00170C CB 7A                 5587 	bit	7, d
      00170E 28 01                 5588 	jr	Z, 00343$
      001710 37                    5589 	scf
      001711                       5590 00343$:
      001711 30 02                 5591 	jr	NC, 00167$
      001713 0E 64                 5592 	ld	c, #0x64
      001715                       5593 00167$:
      001715                       5594 00166$:
      001715 21r8Dr00              5595 	ld	hl, #_xSpeed
      001718 71                    5596 	ld	(hl), c
                                   5597 ;src/main.c:569: ySpeed = clamp(ySpeed, -100, 100);
      001719 21r8Er00              5598 	ld	hl, #_ySpeed
      00171C 4E                    5599 	ld	c, (hl)
                                   5600 ;src/main.c:326: return (value < min) ? min : (value > max) ? max : value;
      00171D 79                    5601 	ld	a, c
      00171E EE 80                 5602 	xor	a, #0x80
      001720 D6 1C                 5603 	sub	a, #0x1c
      001722 30 04                 5604 	jr	NC, 00169$
      001724 0E 9C                 5605 	ld	c, #0x9c
      001726 18 19                 5606 	jr	00170$
      001728                       5607 00169$:
      001728 59                    5608 	ld	e, c
      001729 3E 64                 5609 	ld	a,#0x64
      00172B 57                    5610 	ld	d,a
      00172C 91                    5611 	sub	a, c
      00172D CB 7B                 5612 	bit	7, e
      00172F 28 07                 5613 	jr	Z, 00344$
      001731 CB 7A                 5614 	bit	7, d
      001733 20 08                 5615 	jr	NZ, 00345$
      001735 BF                    5616 	cp	a, a
      001736 18 05                 5617 	jr	00345$
      001738                       5618 00344$:
      001738 CB 7A                 5619 	bit	7, d
      00173A 28 01                 5620 	jr	Z, 00345$
      00173C 37                    5621 	scf
      00173D                       5622 00345$:
      00173D 30 02                 5623 	jr	NC, 00171$
      00173F 0E 64                 5624 	ld	c, #0x64
      001741                       5625 00171$:
      001741                       5626 00170$:
      001741 21r8Er00              5627 	ld	hl, #_ySpeed
      001744 71                    5628 	ld	(hl), c
                                   5629 ;src/main.c:571: xOverflow = 0;
      001745 AF                    5630 	xor	a, a
      001746 21r99r00              5631 	ld	hl, #_xOverflow
      001749 22                    5632 	ld	(hl+), a
      00174A 77                    5633 	ld	(hl), a
                                   5634 ;src/main.c:572: yOverflow = 0;
      00174B AF                    5635 	xor	a, a
      00174C 21r9Br00              5636 	ld	hl, #_yOverflow
      00174F 22                    5637 	ld	(hl+), a
      001750 77                    5638 	ld	(hl), a
                                   5639 ;src/main.c:577: uint8_t xCollisionPoint = playerDrawX; 
      001751 21r93r00              5640 	ld	hl, #_playerDrawX
      001754 4E                    5641 	ld	c, (hl)
                                   5642 ;src/main.c:580: xCollisionPoint = playerDrawX +8; //right edge
      001755 46                    5643 	ld	b, (hl)
                                   5644 ;src/main.c:579: if (xSpeed > 0) {
      001756 21r8Dr00              5645 	ld	hl, #_xSpeed
      001759 5E                    5646 	ld	e, (hl)
      00175A AF                    5647 	xor	a, a
      00175B 57                    5648 	ld	d, a
      00175C 96                    5649 	sub	a, (hl)
      00175D CB 7B                 5650 	bit	7, e
      00175F 28 07                 5651 	jr	Z, 00346$
      001761 CB 7A                 5652 	bit	7, d
      001763 20 08                 5653 	jr	NZ, 00347$
      001765 BF                    5654 	cp	a, a
      001766 18 05                 5655 	jr	00347$
      001768                       5656 00346$:
      001768 CB 7A                 5657 	bit	7, d
      00176A 28 01                 5658 	jr	Z, 00347$
      00176C 37                    5659 	scf
      00176D                       5660 00347$:
      00176D 30 04                 5661 	jr	NC, 00104$
                                   5662 ;src/main.c:580: xCollisionPoint = playerDrawX +8; //right edge
      00176F 78                    5663 	ld	a, b
      001770 C6 08                 5664 	add	a, #0x08
      001772 4F                    5665 	ld	c, a
      001773                       5666 00104$:
                                   5667 ;src/main.c:582: if (xSpeed < 0) {
      001773 FAr8Dr00              5668 	ld	a, (#_xSpeed)
      001776 CB 7F                 5669 	bit	7, a
      001778 28 04                 5670 	jr	Z, 00106$
                                   5671 ;src/main.c:583: xCollisionPoint = playerDrawX -8; //left edge
      00177A 78                    5672 	ld	a, b
      00177B C6 F8                 5673 	add	a, #0xf8
      00177D 4F                    5674 	ld	c, a
      00177E                       5675 00106$:
                                   5676 ;src/main.c:587: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      00177E 06 00                 5677 	ld	b, #0x00
      001780 79                    5678 	ld	a, c
      001781 21r95r00              5679 	ld	hl, #_bgX
      001784 86                    5680 	add	a, (hl)
      001785 23                    5681 	inc	hl
      001786 4F                    5682 	ld	c, a
      001787 78                    5683 	ld	a, b
      001788 8E                    5684 	adc	a, (hl)
      001789 47                    5685 	ld	b, a
      00178A CB 28                 5686 	sra	b
      00178C CB 19                 5687 	rr	c
      00178E CB 28                 5688 	sra	b
      001790 CB 19                 5689 	rr	c
      001792 CB 28                 5690 	sra	b
      001794 CB 19                 5691 	rr	c
      001796 11 20 00              5692 	ld	de, #0x0020
      001799 D5                    5693 	push	de
      00179A C5                    5694 	push	bc
      00179B CDr00r00              5695 	call	__modsint
      00179E E8 04                 5696 	add	sp, #4
                                   5697 ;src/main.c:591: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      0017A0 21r94r00              5698 	ld	hl, #_playerDrawY
      0017A3 4E                    5699 	ld	c, (hl)
      0017A4 06 00                 5700 	ld	b, #0x00
      0017A6 79                    5701 	ld	a, c
      0017A7 21r97r00              5702 	ld	hl, #_bgY
      0017AA 86                    5703 	add	a, (hl)
      0017AB 23                    5704 	inc	hl
      0017AC 4F                    5705 	ld	c, a
      0017AD 78                    5706 	ld	a, b
      0017AE 8E                    5707 	adc	a, (hl)
      0017AF 47                    5708 	ld	b, a
      0017B0 CB 28                 5709 	sra	b
      0017B2 CB 19                 5710 	rr	c
      0017B4 CB 28                 5711 	sra	b
      0017B6 CB 19                 5712 	rr	c
      0017B8 CB 28                 5713 	sra	b
      0017BA CB 19                 5714 	rr	c
      0017BC D5                    5715 	push	de
      0017BD 21 20 00              5716 	ld	hl, #0x0020
      0017C0 E5                    5717 	push	hl
      0017C1 C5                    5718 	push	bc
      0017C2 CDr00r00              5719 	call	__modsint
      0017C5 E8 04                 5720 	add	sp, #4
      0017C7 6B                    5721 	ld	l, e
                                   5722 ;	spillPairReg hl
                                   5723 ;	spillPairReg hl
                                   5724 ;	spillPairReg hl
                                   5725 ;	spillPairReg hl
      0017C8 D1                    5726 	pop	de
                                   5727 ;src/main.c:594: uint16_t ind = 32*bgindY + bgindX;
      0017C9 26 00                 5728 	ld	h, #0x00
                                   5729 ;	spillPairReg hl
                                   5730 ;	spillPairReg hl
      0017CB 29                    5731 	add	hl, hl
      0017CC 29                    5732 	add	hl, hl
      0017CD 29                    5733 	add	hl, hl
      0017CE 29                    5734 	add	hl, hl
      0017CF 29                    5735 	add	hl, hl
      0017D0 19                    5736 	add	hl, de
      0017D1 5D                    5737 	ld	e, l
      0017D2 54                    5738 	ld	d, h
                                   5739 ;src/main.c:595: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      0017D3 0E 01                 5740 	ld	c, #0x01
                                   5741 ;src/main.c:596: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017D5 21r87r00              5742 	ld	hl, #_background1
      0017D8 19                    5743 	add	hl, de
      0017D9 46                    5744 	ld	b, (hl)
      0017DA 1E 00                 5745 	ld	e, #0x00
      0017DC                       5746 00158$:
      0017DC FAr83r08              5747 	ld	a, (#_BLANKSIZE)
      0017DF F8 02                 5748 	ldhl	sp,	#2
      0017E1 77                    5749 	ld	(hl), a
      0017E2 7B                    5750 	ld	a, e
      0017E3 96                    5751 	sub	a, (hl)
      0017E4 30 11                 5752 	jr	NC, 00109$
                                   5753 ;src/main.c:597: if (background1[ind] == BLANK[i] ) {
      0017E6 21r84r08              5754 	ld	hl, #_BLANK
      0017E9 16 00                 5755 	ld	d, #0x00
      0017EB 19                    5756 	add	hl, de
      0017EC 56                    5757 	ld	d, (hl)
      0017ED 78                    5758 	ld	a, b
                                   5759 ;src/main.c:598: result = 0;
      0017EE 92                    5760 	sub	a,d
      0017EF 20 03                 5761 	jr	NZ, 00159$
      0017F1 4F                    5762 	ld	c,a
                                   5763 ;src/main.c:599: break;
      0017F2 18 03                 5764 	jr	00109$
      0017F4                       5765 00159$:
                                   5766 ;src/main.c:596: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017F4 1C                    5767 	inc	e
      0017F5 18 E5                 5768 	jr	00158$
      0017F7                       5769 00109$:
                                   5770 ;src/main.c:603: if (result == 0) {
      0017F7 79                    5771 	ld	a, c
      0017F8 B7                    5772 	or	a, a
      0017F9 C2rC7r18              5773 	jp	NZ, 00114$
                                   5774 ;src/main.c:604: playerX+=xSpeed;
      0017FC FAr8Dr00              5775 	ld	a, (#_xSpeed)
      0017FF 4F                    5776 	ld	c, a
      001800 07                    5777 	rlca
      001801 9F                    5778 	sbc	a, a
      001802 47                    5779 	ld	b, a
      001803 21r8Fr00              5780 	ld	hl, #_playerX
      001806 6E                    5781 	ld	l, (hl)
                                   5782 ;	spillPairReg hl
                                   5783 ;	spillPairReg hl
      001807 FAr90r00              5784 	ld	a, (_playerX + 1)
      00180A 67                    5785 	ld	h, a
                                   5786 ;	spillPairReg hl
                                   5787 ;	spillPairReg hl
      00180B 09                    5788 	add	hl, bc
      00180C 4D                    5789 	ld	c, l
      00180D 44                    5790 	ld	b, h
      00180E 21r8Fr00              5791 	ld	hl, #_playerX
      001811 79                    5792 	ld	a, c
      001812 22                    5793 	ld	(hl+), a
                                   5794 ;src/main.c:606: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001813 78                    5795 	ld	a, b
      001814 32                    5796 	ld	(hl-), a
      001815 2A                    5797 	ld	a, (hl+)
      001816 4F                    5798 	ld	c, a
      001817 46                    5799 	ld	b, (hl)
      001818 79                    5800 	ld	a, c
      001819 D6 80                 5801 	sub	a, #0x80
      00181B 78                    5802 	ld	a, b
      00181C DE 08                 5803 	sbc	a, #0x08
      00181E 30 05                 5804 	jr	NC, 00173$
      001820 01 80 08              5805 	ld	bc, #0x0880
      001823 18 0B                 5806 	jr	00174$
      001825                       5807 00173$:
      001825 3E 80                 5808 	ld	a, #0x80
      001827 B9                    5809 	cp	a, c
      001828 3E 0B                 5810 	ld	a, #0x0b
      00182A 98                    5811 	sbc	a, b
      00182B 30 03                 5812 	jr	NC, 00175$
      00182D 01 80 0B              5813 	ld	bc, #0x0b80
      001830                       5814 00175$:
      001830                       5815 00174$:
      001830 59                    5816 	ld	e,c
      001831 50                    5817 	ld	d,b
                                   5818 ;src/main.c:608: xOverflow = (playerX - limitedPlayerX);
      001832 FAr8Fr00              5819 	ld	a, (#_playerX)
      001835 93                    5820 	sub	a, e
      001836 EAr99r00              5821 	ld	(#_xOverflow),a
      001839 FAr90r00              5822 	ld	a, (#_playerX + 1)
      00183C 9A                    5823 	sbc	a, d
      00183D 21r9Ar00              5824 	ld	hl, #_xOverflow + 1
                                   5825 ;src/main.c:609: if (xOverflow >= 0) {
      001840 32                    5826 	ld	(hl-), a
      001841 6E                    5827 	ld	l, (hl)
                                   5828 ;	spillPairReg hl
                                   5829 ;	spillPairReg hl
      001842 FAr9Ar00              5830 	ld	a, (_xOverflow + 1)
                                   5831 ;	spillPairReg hl
                                   5832 ;	spillPairReg hl
      001845 CB 7F                 5833 	bit	7,a
      001847 20 22                 5834 	jr	NZ, 00111$
                                   5835 ;src/main.c:610: xOverflow = xOverflow >> 5;
      001849 21r9Ar00              5836 	ld	hl, #_xOverflow + 1
      00184C CB 2E                 5837 	sra	(hl)
      00184E 2B                    5838 	dec	hl
      00184F CB 1E                 5839 	rr	(hl)
      001851 23                    5840 	inc	hl
      001852 CB 2E                 5841 	sra	(hl)
      001854 2B                    5842 	dec	hl
      001855 CB 1E                 5843 	rr	(hl)
      001857 23                    5844 	inc	hl
      001858 CB 2E                 5845 	sra	(hl)
      00185A 2B                    5846 	dec	hl
      00185B CB 1E                 5847 	rr	(hl)
      00185D 23                    5848 	inc	hl
      00185E CB 2E                 5849 	sra	(hl)
      001860 2B                    5850 	dec	hl
      001861 CB 1E                 5851 	rr	(hl)
      001863 23                    5852 	inc	hl
      001864 CB 2E                 5853 	sra	(hl)
      001866 2B                    5854 	dec	hl
      001867 CB 1E                 5855 	rr	(hl)
      001869 18 25                 5856 	jr	00112$
      00186B                       5857 00111$:
                                   5858 ;src/main.c:613: xOverflow = -((-xOverflow) >> 5);
      00186B AF                    5859 	xor	a, a
      00186C 21r99r00              5860 	ld	hl, #_xOverflow
      00186F 96                    5861 	sub	a, (hl)
      001870 23                    5862 	inc	hl
      001871 5F                    5863 	ld	e, a
      001872 9F                    5864 	sbc	a, a
      001873 96                    5865 	sub	a, (hl)
      001874 2B                    5866 	dec	hl
      001875 57                    5867 	ld	d, a
      001876 CB 2A                 5868 	sra	d
      001878 CB 1B                 5869 	rr	e
      00187A CB 2A                 5870 	sra	d
      00187C CB 1B                 5871 	rr	e
      00187E CB 2A                 5872 	sra	d
      001880 CB 1B                 5873 	rr	e
      001882 CB 2A                 5874 	sra	d
      001884 CB 1B                 5875 	rr	e
      001886 CB 2A                 5876 	sra	d
      001888 CB 1B                 5877 	rr	e
      00188A AF                    5878 	xor	a, a
      00188B 93                    5879 	sub	a, e
      00188C 22                    5880 	ld	(hl+), a
      00188D 9F                    5881 	sbc	a, a
      00188E 92                    5882 	sub	a, d
      00188F 77                    5883 	ld	(hl), a
      001890                       5884 00112$:
                                   5885 ;src/main.c:615: bgX += xOverflow;
      001890 FAr95r00              5886 	ld	a, (#_bgX)
      001893 21r99r00              5887 	ld	hl, #_xOverflow
      001896 86                    5888 	add	a, (hl)
      001897 21r95r00              5889 	ld	hl, #_bgX
      00189A 22                    5890 	ld	(hl+), a
      00189B 7E                    5891 	ld	a, (hl)
      00189C 21r9Ar00              5892 	ld	hl, #_xOverflow + 1
      00189F 8E                    5893 	adc	a, (hl)
      0018A0 EAr96r00              5894 	ld	(#_bgX + 1),a
                                   5895 ;src/main.c:616: playerX = limitedPlayerX;
      0018A3 21r8Fr00              5896 	ld	hl, #_playerX
      0018A6 79                    5897 	ld	a, c
      0018A7 22                    5898 	ld	(hl+), a
                                   5899 ;src/main.c:617: playerDrawX=playerX >> 5;
      0018A8 78                    5900 	ld	a, b
      0018A9 32                    5901 	ld	(hl-), a
      0018AA 2A                    5902 	ld	a, (hl+)
      0018AB 4F                    5903 	ld	c, a
      0018AC 46                    5904 	ld	b, (hl)
      0018AD CB 38                 5905 	srl	b
      0018AF CB 19                 5906 	rr	c
      0018B1 CB 38                 5907 	srl	b
      0018B3 CB 19                 5908 	rr	c
      0018B5 CB 38                 5909 	srl	b
      0018B7 CB 19                 5910 	rr	c
      0018B9 CB 38                 5911 	srl	b
      0018BB CB 19                 5912 	rr	c
      0018BD CB 38                 5913 	srl	b
      0018BF CB 19                 5914 	rr	c
      0018C1 21r93r00              5915 	ld	hl, #_playerDrawX
      0018C4 71                    5916 	ld	(hl), c
      0018C5 18 05                 5917 	jr	00115$
      0018C7                       5918 00114$:
                                   5919 ;src/main.c:625: xSpeed = 0;
      0018C7 21r8Dr00              5920 	ld	hl, #_xSpeed
      0018CA 36 00                 5921 	ld	(hl), #0x00
      0018CC                       5922 00115$:
                                   5923 ;src/main.c:633: uint8_t yCollisionPoint = playerDrawY; 
      0018CC FAr94r00              5924 	ld	a, (#_playerDrawY)
      0018CF F8 07                 5925 	ldhl	sp,	#7
      0018D1 77                    5926 	ld	(hl), a
                                   5927 ;src/main.c:636: yCollisionPoint = playerDrawY +8; //bottom edge
      0018D2 21r94r00              5928 	ld	hl, #_playerDrawY
      0018D5 4E                    5929 	ld	c, (hl)
                                   5930 ;src/main.c:635: if (ySpeed > 0) {
      0018D6 21r8Er00              5931 	ld	hl, #_ySpeed
      0018D9 5E                    5932 	ld	e, (hl)
      0018DA AF                    5933 	xor	a, a
      0018DB 57                    5934 	ld	d, a
      0018DC 96                    5935 	sub	a, (hl)
      0018DD CB 7B                 5936 	bit	7, e
      0018DF 28 07                 5937 	jr	Z, 00350$
      0018E1 CB 7A                 5938 	bit	7, d
      0018E3 20 08                 5939 	jr	NZ, 00351$
      0018E5 BF                    5940 	cp	a, a
      0018E6 18 05                 5941 	jr	00351$
      0018E8                       5942 00350$:
      0018E8 CB 7A                 5943 	bit	7, d
      0018EA 28 01                 5944 	jr	Z, 00351$
      0018EC 37                    5945 	scf
      0018ED                       5946 00351$:
      0018ED 30 06                 5947 	jr	NC, 00117$
                                   5948 ;src/main.c:636: yCollisionPoint = playerDrawY +8; //bottom edge
      0018EF 79                    5949 	ld	a, c
      0018F0 C6 08                 5950 	add	a, #0x08
      0018F2 F8 07                 5951 	ldhl	sp,	#7
      0018F4 77                    5952 	ld	(hl), a
      0018F5                       5953 00117$:
                                   5954 ;src/main.c:638: if (ySpeed < 0) {
      0018F5 FAr8Er00              5955 	ld	a, (#_ySpeed)
      0018F8 CB 7F                 5956 	bit	7, a
      0018FA 28 06                 5957 	jr	Z, 00119$
                                   5958 ;src/main.c:639: yCollisionPoint = playerDrawY -8; //top edge, 
      0018FC 79                    5959 	ld	a, c
      0018FD C6 F8                 5960 	add	a, #0xf8
      0018FF F8 07                 5961 	ldhl	sp,	#7
      001901 77                    5962 	ld	(hl), a
      001902                       5963 00119$:
                                   5964 ;src/main.c:643: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001902 FAr93r00              5965 	ld	a, (#_playerDrawX)
      001905 0E 00                 5966 	ld	c, #0x00
      001907 F8 03                 5967 	ldhl	sp,	#3
      001909 22                    5968 	ld	(hl+), a
      00190A 79                    5969 	ld	a, c
      00190B 32                    5970 	ld	(hl-), a
      00190C 2A                    5971 	ld	a, (hl+)
      00190D 5F                    5972 	ld	e, a
      00190E 56                    5973 	ld	d, (hl)
      00190F 21r95r00              5974 	ld	hl, #_bgX
      001912 2A                    5975 	ld	a,	(hl+)
      001913 66                    5976 	ld	h, (hl)
      001914 6F                    5977 	ld	l, a
      001915 19                    5978 	add	hl, de
      001916 E5                    5979 	push	hl
      001917 7D                    5980 	ld	a, l
      001918 F8 07                 5981 	ldhl	sp,	#7
      00191A 77                    5982 	ld	(hl), a
      00191B E1                    5983 	pop	hl
      00191C 7C                    5984 	ld	a, h
      00191D F8 06                 5985 	ldhl	sp,	#6
      00191F 77                    5986 	ld	(hl), a
      001920 CB 2E                 5987 	sra	(hl)
      001922 2B                    5988 	dec	hl
      001923 CB 1E                 5989 	rr	(hl)
      001925 23                    5990 	inc	hl
      001926 CB 2E                 5991 	sra	(hl)
      001928 2B                    5992 	dec	hl
      001929 CB 1E                 5993 	rr	(hl)
      00192B 23                    5994 	inc	hl
      00192C CB 2E                 5995 	sra	(hl)
      00192E 2B                    5996 	dec	hl
      00192F CB 1E                 5997 	rr	(hl)
      001931 11 20 00              5998 	ld	de, #0x0020
      001934 D5                    5999 	push	de
      001935 2A                    6000 	ld	a, (hl+)
      001936 5F                    6001 	ld	e, a
      001937 56                    6002 	ld	d, (hl)
      001938 D5                    6003 	push	de
      001939 CDr00r00              6004 	call	__modsint
      00193C E8 04                 6005 	add	sp, #4
      00193E F8 05                 6006 	ldhl	sp,	#5
      001940 7B                    6007 	ld	a, e
      001941 22                    6008 	ld	(hl+), a
      001942 72                    6009 	ld	(hl), d
      001943 F8 05                 6010 	ldhl	sp,	#5
      001945 7E                    6011 	ld	a, (hl)
      001946 F8 00                 6012 	ldhl	sp,	#0
      001948 77                    6013 	ld	(hl), a
      001949 F8 06                 6014 	ldhl	sp,	#6
      00194B 7E                    6015 	ld	a, (hl)
      00194C F8 01                 6016 	ldhl	sp,	#1
      00194E 77                    6017 	ld	(hl), a
                                   6018 ;src/main.c:646: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      00194F F8 07                 6019 	ldhl	sp,	#7
      001951 3A                    6020 	ld	a, (hl-)
      001952 22                    6021 	ld	(hl+), a
      001953 AF                    6022 	xor	a, a
      001954 32                    6023 	ld	(hl-), a
      001955 3A                    6024 	ld	a, (hl-)
      001956 2B                    6025 	dec	hl
      001957 77                    6026 	ld	(hl), a
      001958 F8 07                 6027 	ldhl	sp,	#7
      00195A 3A                    6028 	ld	a, (hl-)
      00195B 2B                    6029 	dec	hl
      00195C 32                    6030 	ld	(hl-), a
      00195D 2A                    6031 	ld	a, (hl+)
      00195E 5F                    6032 	ld	e, a
      00195F 56                    6033 	ld	d, (hl)
      001960 21r97r00              6034 	ld	hl, #_bgY
      001963 2A                    6035 	ld	a,	(hl+)
      001964 66                    6036 	ld	h, (hl)
      001965 6F                    6037 	ld	l, a
      001966 19                    6038 	add	hl, de
      001967 E5                    6039 	push	hl
      001968 7D                    6040 	ld	a, l
      001969 F8 08                 6041 	ldhl	sp,	#8
      00196B 77                    6042 	ld	(hl), a
      00196C E1                    6043 	pop	hl
      00196D 7C                    6044 	ld	a, h
      00196E F8 07                 6045 	ldhl	sp,	#7
      001970 77                    6046 	ld	(hl), a
      001971 CB 2E                 6047 	sra	(hl)
      001973 2B                    6048 	dec	hl
      001974 CB 1E                 6049 	rr	(hl)
      001976 23                    6050 	inc	hl
      001977 CB 2E                 6051 	sra	(hl)
      001979 2B                    6052 	dec	hl
      00197A CB 1E                 6053 	rr	(hl)
      00197C 23                    6054 	inc	hl
      00197D CB 2E                 6055 	sra	(hl)
      00197F 2B                    6056 	dec	hl
      001980 CB 1E                 6057 	rr	(hl)
      001982 11 20 00              6058 	ld	de, #0x0020
      001985 D5                    6059 	push	de
      001986 2A                    6060 	ld	a, (hl+)
      001987 5F                    6061 	ld	e, a
      001988 56                    6062 	ld	d, (hl)
      001989 D5                    6063 	push	de
      00198A CDr00r00              6064 	call	__modsint
      00198D E8 04                 6065 	add	sp, #4
      00198F F8 06                 6066 	ldhl	sp,	#6
      001991 7B                    6067 	ld	a, e
      001992 22                    6068 	ld	(hl+), a
      001993 72                    6069 	ld	(hl), d
      001994 F8 06                 6070 	ldhl	sp,	#6
      001996 2A                    6071 	ld	a, (hl+)
      001997 77                    6072 	ld	(hl), a
                                   6073 ;src/main.c:649: ind = 32*bgindY + bgindX;
      001998 3A                    6074 	ld	a, (hl-)
      001999 22                    6075 	ld	(hl+), a
      00199A 36 00                 6076 	ld	(hl), #0x00
      00199C 3E 05                 6077 	ld	a, #0x05
      00199E                       6078 00352$:
      00199E F8 06                 6079 	ldhl	sp,	#6
      0019A0 CB 26                 6080 	sla	(hl)
      0019A2 23                    6081 	inc	hl
      0019A3 CB 16                 6082 	rl	(hl)
      0019A5 3D                    6083 	dec	a
      0019A6 20 F6                 6084 	jr	NZ, 00352$
      0019A8 2B                    6085 	dec	hl
      0019A9 3A                    6086 	ld	a, (hl-)
      0019AA 2B                    6087 	dec	hl
      0019AB 77                    6088 	ld	(hl), a
      0019AC F8 07                 6089 	ldhl	sp,	#7
      0019AE 3A                    6090 	ld	a, (hl-)
      0019AF 2B                    6091 	dec	hl
      0019B0 77                    6092 	ld	(hl), a
      0019B1 D1                    6093 	pop	de
      0019B2 D5                    6094 	push	de
      0019B3 3A                    6095 	ld	a, (hl-)
      0019B4 6E                    6096 	ld	l, (hl)
      0019B5 67                    6097 	ld	h, a
      0019B6 19                    6098 	add	hl, de
      0019B7 E5                    6099 	push	hl
      0019B8 7D                    6100 	ld	a, l
      0019B9 F8 08                 6101 	ldhl	sp,	#8
      0019BB 77                    6102 	ld	(hl), a
      0019BC E1                    6103 	pop	hl
      0019BD 7C                    6104 	ld	a, h
      0019BE F8 07                 6105 	ldhl	sp,	#7
      0019C0 77                    6106 	ld	(hl), a
                                   6107 ;src/main.c:650: result = 1;
      0019C1 F8 03                 6108 	ldhl	sp,	#3
      0019C3 36 01                 6109 	ld	(hl), #0x01
                                   6110 ;src/main.c:651: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0019C5 F8 06                 6111 	ldhl	sp,#6
      0019C7 2A                    6112 	ld	a, (hl+)
      0019C8 5F                    6113 	ld	e, a
      0019C9 56                    6114 	ld	d, (hl)
      0019CA 21r87r00              6115 	ld	hl, #_background1
      0019CD 19                    6116 	add	hl, de
      0019CE 4D                    6117 	ld	c, l
      0019CF 44                    6118 	ld	b, h
      0019D0 0A                    6119 	ld	a, (bc)
      0019D1 F8 04                 6120 	ldhl	sp,	#4
      0019D3 77                    6121 	ld	(hl), a
      0019D4 F8 07                 6122 	ldhl	sp,	#7
      0019D6 36 00                 6123 	ld	(hl), #0x00
      0019D8                       6124 00161$:
      0019D8 F8 07                 6125 	ldhl	sp,	#7
      0019DA 7E                    6126 	ld	a, (hl)
      0019DB F8 02                 6127 	ldhl	sp,	#2
      0019DD 96                    6128 	sub	a, (hl)
      0019DE 30 29                 6129 	jr	NC, 00122$
                                   6130 ;src/main.c:652: if (background1[ind] == BLANK[j] ) {
      0019E0 11r84r08              6131 	ld	de, #_BLANK
      0019E3 F8 07                 6132 	ldhl	sp,	#7
      0019E5 6E                    6133 	ld	l, (hl)
      0019E6 26 00                 6134 	ld	h, #0x00
      0019E8 19                    6135 	add	hl, de
      0019E9 E5                    6136 	push	hl
      0019EA 7D                    6137 	ld	a, l
      0019EB F8 07                 6138 	ldhl	sp,	#7
      0019ED 77                    6139 	ld	(hl), a
      0019EE E1                    6140 	pop	hl
      0019EF 7C                    6141 	ld	a, h
      0019F0 F8 06                 6142 	ldhl	sp,	#6
      0019F2 32                    6143 	ld	(hl-), a
      0019F3 2A                    6144 	ld	a, (hl+)
      0019F4 5F                    6145 	ld	e, a
      0019F5 3A                    6146 	ld	a, (hl-)
      0019F6 2B                    6147 	dec	hl
      0019F7 57                    6148 	ld	d, a
      0019F8 1A                    6149 	ld	a, (de)
      0019F9 4F                    6150 	ld	c, a
      0019FA 7E                    6151 	ld	a, (hl)
      0019FB 91                    6152 	sub	a, c
      0019FC 20 06                 6153 	jr	NZ, 00162$
                                   6154 ;src/main.c:653: result = 0;
      0019FE F8 03                 6155 	ldhl	sp,	#3
      001A00 36 00                 6156 	ld	(hl), #0x00
                                   6157 ;src/main.c:654: break;
      001A02 18 05                 6158 	jr	00122$
      001A04                       6159 00162$:
                                   6160 ;src/main.c:651: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001A04 F8 07                 6161 	ldhl	sp,	#7
      001A06 34                    6162 	inc	(hl)
      001A07 18 CF                 6163 	jr	00161$
      001A09                       6164 00122$:
                                   6165 ;src/main.c:658: if (result == 0) {
      001A09 F8 03                 6166 	ldhl	sp,	#3
      001A0B 7E                    6167 	ld	a, (hl)
      001A0C B7                    6168 	or	a, a
      001A0D C2rD7r1A              6169 	jp	NZ, 00127$
                                   6170 ;src/main.c:659: playerY += ySpeed;
      001A10 FAr8Er00              6171 	ld	a, (#_ySpeed)
      001A13 4F                    6172 	ld	c, a
      001A14 07                    6173 	rlca
      001A15 9F                    6174 	sbc	a, a
      001A16 21r91r00              6175 	ld	hl, #_playerY
      001A19 5E                    6176 	ld	e, (hl)
      001A1A 23                    6177 	inc	hl
      001A1B 56                    6178 	ld	d, (hl)
      001A1C 2B                    6179 	dec	hl
      001A1D 47                    6180 	ld	b, a
      001A1E 79                    6181 	ld	a, c
      001A1F 83                    6182 	add	a, e
      001A20 4F                    6183 	ld	c, a
      001A21 78                    6184 	ld	a, b
      001A22 8A                    6185 	adc	a, d
      001A23 47                    6186 	ld	b, a
      001A24 79                    6187 	ld	a, c
      001A25 22                    6188 	ld	(hl+), a
                                   6189 ;src/main.c:661: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001A26 78                    6190 	ld	a, b
      001A27 32                    6191 	ld	(hl-), a
      001A28 2A                    6192 	ld	a, (hl+)
      001A29 5F                    6193 	ld	e, a
      001A2A 56                    6194 	ld	d, (hl)
      001A2B 7A                    6195 	ld	a, d
      001A2C D6 06                 6196 	sub	a, #0x06
      001A2E 30 05                 6197 	jr	NC, 00177$
      001A30 11 00 06              6198 	ld	de, #0x0600
      001A33 18 0B                 6199 	jr	00178$
      001A35                       6200 00177$:
      001A35 3E C0                 6201 	ld	a, #0xc0
      001A37 BB                    6202 	cp	a, e
      001A38 3E 09                 6203 	ld	a, #0x09
      001A3A 9A                    6204 	sbc	a, d
      001A3B 30 03                 6205 	jr	NC, 00179$
      001A3D 11 C0 09              6206 	ld	de, #0x09c0
      001A40                       6207 00179$:
      001A40                       6208 00178$:
      001A40 4B                    6209 	ld	c, e
      001A41 42                    6210 	ld	b, d
                                   6211 ;src/main.c:663: yOverflow = (playerY - limitedPlayerY);
      001A42 FAr91r00              6212 	ld	a, (#_playerY)
      001A45 93                    6213 	sub	a, e
      001A46 EAr9Br00              6214 	ld	(#_yOverflow),a
      001A49 FAr92r00              6215 	ld	a, (#_playerY + 1)
      001A4C 9A                    6216 	sbc	a, d
      001A4D 21r9Cr00              6217 	ld	hl, #_yOverflow + 1
                                   6218 ;src/main.c:664: if (yOverflow >= 0) {
      001A50 32                    6219 	ld	(hl-), a
      001A51 6E                    6220 	ld	l, (hl)
                                   6221 ;	spillPairReg hl
                                   6222 ;	spillPairReg hl
      001A52 FAr9Cr00              6223 	ld	a, (_yOverflow + 1)
                                   6224 ;	spillPairReg hl
                                   6225 ;	spillPairReg hl
      001A55 CB 7F                 6226 	bit	7,a
      001A57 20 22                 6227 	jr	NZ, 00124$
                                   6228 ;src/main.c:665: yOverflow = yOverflow >> 5;
      001A59 21r9Cr00              6229 	ld	hl, #_yOverflow + 1
      001A5C CB 2E                 6230 	sra	(hl)
      001A5E 2B                    6231 	dec	hl
      001A5F CB 1E                 6232 	rr	(hl)
      001A61 23                    6233 	inc	hl
      001A62 CB 2E                 6234 	sra	(hl)
      001A64 2B                    6235 	dec	hl
      001A65 CB 1E                 6236 	rr	(hl)
      001A67 23                    6237 	inc	hl
      001A68 CB 2E                 6238 	sra	(hl)
      001A6A 2B                    6239 	dec	hl
      001A6B CB 1E                 6240 	rr	(hl)
      001A6D 23                    6241 	inc	hl
      001A6E CB 2E                 6242 	sra	(hl)
      001A70 2B                    6243 	dec	hl
      001A71 CB 1E                 6244 	rr	(hl)
      001A73 23                    6245 	inc	hl
      001A74 CB 2E                 6246 	sra	(hl)
      001A76 2B                    6247 	dec	hl
      001A77 CB 1E                 6248 	rr	(hl)
      001A79 18 25                 6249 	jr	00125$
      001A7B                       6250 00124$:
                                   6251 ;src/main.c:668: yOverflow = -((-yOverflow) >> 5);
      001A7B AF                    6252 	xor	a, a
      001A7C 21r9Br00              6253 	ld	hl, #_yOverflow
      001A7F 96                    6254 	sub	a, (hl)
      001A80 23                    6255 	inc	hl
      001A81 5F                    6256 	ld	e, a
      001A82 9F                    6257 	sbc	a, a
      001A83 96                    6258 	sub	a, (hl)
      001A84 2B                    6259 	dec	hl
      001A85 57                    6260 	ld	d, a
      001A86 CB 2A                 6261 	sra	d
      001A88 CB 1B                 6262 	rr	e
      001A8A CB 2A                 6263 	sra	d
      001A8C CB 1B                 6264 	rr	e
      001A8E CB 2A                 6265 	sra	d
      001A90 CB 1B                 6266 	rr	e
      001A92 CB 2A                 6267 	sra	d
      001A94 CB 1B                 6268 	rr	e
      001A96 CB 2A                 6269 	sra	d
      001A98 CB 1B                 6270 	rr	e
      001A9A AF                    6271 	xor	a, a
      001A9B 93                    6272 	sub	a, e
      001A9C 22                    6273 	ld	(hl+), a
      001A9D 9F                    6274 	sbc	a, a
      001A9E 92                    6275 	sub	a, d
      001A9F 77                    6276 	ld	(hl), a
      001AA0                       6277 00125$:
                                   6278 ;src/main.c:670: bgY += yOverflow;
      001AA0 FAr97r00              6279 	ld	a, (#_bgY)
      001AA3 21r9Br00              6280 	ld	hl, #_yOverflow
      001AA6 86                    6281 	add	a, (hl)
      001AA7 21r97r00              6282 	ld	hl, #_bgY
      001AAA 22                    6283 	ld	(hl+), a
      001AAB 7E                    6284 	ld	a, (hl)
      001AAC 21r9Cr00              6285 	ld	hl, #_yOverflow + 1
      001AAF 8E                    6286 	adc	a, (hl)
      001AB0 EAr98r00              6287 	ld	(#_bgY + 1),a
                                   6288 ;src/main.c:671: playerY = limitedPlayerY;
      001AB3 21r91r00              6289 	ld	hl, #_playerY
      001AB6 79                    6290 	ld	a, c
      001AB7 22                    6291 	ld	(hl+), a
                                   6292 ;src/main.c:672: playerDrawY=playerY >> 5;
      001AB8 78                    6293 	ld	a, b
      001AB9 32                    6294 	ld	(hl-), a
      001ABA 2A                    6295 	ld	a, (hl+)
      001ABB 4F                    6296 	ld	c, a
      001ABC 46                    6297 	ld	b, (hl)
      001ABD CB 38                 6298 	srl	b
      001ABF CB 19                 6299 	rr	c
      001AC1 CB 38                 6300 	srl	b
      001AC3 CB 19                 6301 	rr	c
      001AC5 CB 38                 6302 	srl	b
      001AC7 CB 19                 6303 	rr	c
      001AC9 CB 38                 6304 	srl	b
      001ACB CB 19                 6305 	rr	c
      001ACD CB 38                 6306 	srl	b
      001ACF CB 19                 6307 	rr	c
      001AD1 21r94r00              6308 	ld	hl, #_playerDrawY
      001AD4 71                    6309 	ld	(hl), c
      001AD5 18 05                 6310 	jr	00128$
      001AD7                       6311 00127$:
                                   6312 ;src/main.c:677: ySpeed = 0;
      001AD7 21r8Er00              6313 	ld	hl, #_ySpeed
      001ADA 36 00                 6314 	ld	(hl), #0x00
      001ADC                       6315 00128$:
                                   6316 ;src/main.c:577: uint8_t xCollisionPoint = playerDrawX; 
      001ADC FAr93r00              6317 	ld	a, (#_playerDrawX)
      001ADF F8 07                 6318 	ldhl	sp,	#7
      001AE1 77                    6319 	ld	(hl), a
                                   6320 ;src/main.c:636: yCollisionPoint = playerDrawY +8; //bottom edge
      001AE2 FAr94r00              6321 	ld	a, (#_playerDrawY)
      001AE5 C6 08                 6322 	add	a, #0x08
      001AE7 F8 06                 6323 	ldhl	sp,	#6
      001AE9 77                    6324 	ld	(hl), a
                                   6325 ;src/main.c:680: if (xDir >= 0) {
      001AEA FAr8Br00              6326 	ld	a, (#_xDir)
      001AED CB 7F                 6327 	bit	7, a
      001AEF 20 2A                 6328 	jr	NZ, 00130$
                                   6329 ;src/main.c:681: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   6330 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6331 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001AF1 11r00r00              6332 	ld	de, #_shadow_OAM
      001AF4 F8 06                 6333 	ldhl	sp,	#6
      001AF6 2A                    6334 	ld	a, (hl+)
      001AF7 12                    6335 	ld	(de), a
      001AF8 11r01r00              6336 	ld	de, #(_shadow_OAM + 1)
      001AFB 7E                    6337 	ld	a, (hl)
      001AFC 12                    6338 	ld	(de), a
                                   6339 ;src/main.c:683: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001AFD FAr94r00              6340 	ld	a, (#_playerDrawY)
      001B00 F8 07                 6341 	ldhl	sp,	#7
      001B02 77                    6342 	ld	(hl), a
      001B03 3A                    6343 	ld	a, (hl-)
      001B04 C6 08                 6344 	add	a, #0x08
      001B06 77                    6345 	ld	(hl), a
      001B07 FAr93r00              6346 	ld	a, (#_playerDrawX)
      001B0A C6 08                 6347 	add	a, #0x08
      001B0C F8 07                 6348 	ldhl	sp,	#7
                                   6349 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6350 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B0E 32                    6351 	ld	(hl-), a
      001B0F 11r04r00              6352 	ld	de, #(_shadow_OAM + 4)
      001B12 2A                    6353 	ld	a, (hl+)
      001B13 12                    6354 	ld	(de), a
      001B14 11r05r00              6355 	ld	de, #(_shadow_OAM + 5)
      001B17 7E                    6356 	ld	a, (hl)
      001B18 12                    6357 	ld	(de), a
                                   6358 ;src/main.c:683: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001B19 18 28                 6359 	jr	00131$
      001B1B                       6360 00130$:
                                   6361 ;src/main.c:686: move_sprite(1, playerDrawX , playerDrawY +8);
                                   6362 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001B1B 01r04r00              6363 	ld	bc, #(_shadow_OAM + 4)
                                   6364 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B1E F8 06                 6365 	ldhl	sp,	#6
      001B20 2A                    6366 	ld	a, (hl+)
      001B21 02                    6367 	ld	(bc), a
      001B22 03                    6368 	inc	bc
      001B23 7E                    6369 	ld	a, (hl)
      001B24 02                    6370 	ld	(bc), a
                                   6371 ;src/main.c:688: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B25 FAr94r00              6372 	ld	a, (#_playerDrawY)
      001B28 F8 07                 6373 	ldhl	sp,	#7
      001B2A 77                    6374 	ld	(hl), a
      001B2B 3A                    6375 	ld	a, (hl-)
      001B2C C6 08                 6376 	add	a, #0x08
      001B2E 77                    6377 	ld	(hl), a
      001B2F FAr93r00              6378 	ld	a, (#_playerDrawX)
      001B32 F8 07                 6379 	ldhl	sp,	#7
      001B34 77                    6380 	ld	(hl), a
      001B35 7E                    6381 	ld	a, (hl)
      001B36 C6 08                 6382 	add	a, #0x08
                                   6383 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6384 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B38 32                    6385 	ld	(hl-), a
      001B39 11r00r00              6386 	ld	de, #_shadow_OAM
      001B3C 2A                    6387 	ld	a, (hl+)
      001B3D 12                    6388 	ld	(de), a
      001B3E 11r01r00              6389 	ld	de, #(_shadow_OAM + 1)
      001B41 7E                    6390 	ld	a, (hl)
      001B42 12                    6391 	ld	(de), a
                                   6392 ;src/main.c:688: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B43                       6393 00131$:
                                   6394 ;src/main.c:693: if (bgX >= 256) {
      001B43 21r95r00              6395 	ld	hl, #_bgX
      001B46 2A                    6396 	ld	a, (hl+)
      001B47 4F                    6397 	ld	c, a
      001B48 46                    6398 	ld	b, (hl)
      001B49 78                    6399 	ld	a, b
      001B4A EE 80                 6400 	xor	a, #0x80
      001B4C D6 81                 6401 	sub	a, #0x81
      001B4E 38 0F                 6402 	jr	C, 00133$
                                   6403 ;src/main.c:694: bgX = bgX % 256;
      001B50 AF                    6404 	xor	a, a
      001B51 3C                    6405 	inc	a
      001B52 F5                    6406 	push	af
      001B53 C5                    6407 	push	bc
      001B54 CDr00r00              6408 	call	__modsint
      001B57 E8 04                 6409 	add	sp, #4
      001B59 21r95r00              6410 	ld	hl, #_bgX
      001B5C 7B                    6411 	ld	a, e
      001B5D 22                    6412 	ld	(hl+), a
      001B5E 72                    6413 	ld	(hl), d
      001B5F                       6414 00133$:
                                   6415 ;src/main.c:696: if (bgX < 0) {
      001B5F 21r95r00              6416 	ld	hl, #_bgX
      001B62 2A                    6417 	ld	a, (hl+)
      001B63 4F                    6418 	ld	c, a
      001B64 46                    6419 	ld	b, (hl)
      001B65 CB 78                 6420 	bit	7, b
      001B67 28 15                 6421 	jr	Z, 00135$
                                   6422 ;src/main.c:697: bgX = 255 - (bgX % 256);
      001B69 AF                    6423 	xor	a, a
      001B6A 3C                    6424 	inc	a
      001B6B F5                    6425 	push	af
      001B6C C5                    6426 	push	bc
      001B6D CDr00r00              6427 	call	__modsint
      001B70 E8 04                 6428 	add	sp, #4
      001B72 3E FF                 6429 	ld	a, #0xff
      001B74 93                    6430 	sub	a, e
      001B75 4F                    6431 	ld	c, a
      001B76 9F                    6432 	sbc	a, a
      001B77 92                    6433 	sub	a, d
      001B78 21r95r00              6434 	ld	hl, #_bgX
      001B7B 71                    6435 	ld	(hl), c
      001B7C 23                    6436 	inc	hl
      001B7D 77                    6437 	ld	(hl), a
      001B7E                       6438 00135$:
                                   6439 ;src/main.c:699: if (bgY >= 256) {
      001B7E 21r97r00              6440 	ld	hl, #_bgY
      001B81 2A                    6441 	ld	a, (hl+)
      001B82 4F                    6442 	ld	c, a
      001B83 46                    6443 	ld	b, (hl)
      001B84 78                    6444 	ld	a, b
      001B85 EE 80                 6445 	xor	a, #0x80
      001B87 D6 81                 6446 	sub	a, #0x81
      001B89 38 0F                 6447 	jr	C, 00137$
                                   6448 ;src/main.c:700: bgY = bgY % 256;
      001B8B AF                    6449 	xor	a, a
      001B8C 3C                    6450 	inc	a
      001B8D F5                    6451 	push	af
      001B8E C5                    6452 	push	bc
      001B8F CDr00r00              6453 	call	__modsint
      001B92 E8 04                 6454 	add	sp, #4
      001B94 21r97r00              6455 	ld	hl, #_bgY
      001B97 7B                    6456 	ld	a, e
      001B98 22                    6457 	ld	(hl+), a
      001B99 72                    6458 	ld	(hl), d
      001B9A                       6459 00137$:
                                   6460 ;src/main.c:702: if (bgY < 0) {
      001B9A 21r97r00              6461 	ld	hl, #_bgY
      001B9D 2A                    6462 	ld	a, (hl+)
      001B9E 4F                    6463 	ld	c, a
      001B9F 46                    6464 	ld	b, (hl)
      001BA0 CB 78                 6465 	bit	7, b
      001BA2 28 15                 6466 	jr	Z, 00139$
                                   6467 ;src/main.c:703: bgY = 255 - (bgY % 256);
      001BA4 AF                    6468 	xor	a, a
      001BA5 3C                    6469 	inc	a
      001BA6 F5                    6470 	push	af
      001BA7 C5                    6471 	push	bc
      001BA8 CDr00r00              6472 	call	__modsint
      001BAB E8 04                 6473 	add	sp, #4
      001BAD 3E FF                 6474 	ld	a, #0xff
      001BAF 93                    6475 	sub	a, e
      001BB0 4F                    6476 	ld	c, a
      001BB1 9F                    6477 	sbc	a, a
      001BB2 92                    6478 	sub	a, d
      001BB3 21r97r00              6479 	ld	hl, #_bgY
      001BB6 71                    6480 	ld	(hl), c
      001BB7 23                    6481 	inc	hl
      001BB8 77                    6482 	ld	(hl), a
      001BB9                       6483 00139$:
                                   6484 ;src/main.c:706: move_bkg(bgX, bgY);
      001BB9 21r97r00              6485 	ld	hl, #_bgY
      001BBC 4E                    6486 	ld	c, (hl)
      001BBD FAr95r00              6487 	ld	a, (#_bgX)
      001BC0 E0r00                 6488 	ldh	(_SCX_REG + 0), a
                                   6489 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001BC2 79                    6490 	ld	a, c
      001BC3 E0r00                 6491 	ldh	(_SCY_REG + 0), a
                                   6492 ;src/main.c:709: if (ySpeed > 0) ySpeed--;
      001BC5 21r8Er00              6493 	ld	hl, #_ySpeed
      001BC8 5E                    6494 	ld	e, (hl)
      001BC9 AF                    6495 	xor	a, a
      001BCA 57                    6496 	ld	d, a
      001BCB 96                    6497 	sub	a, (hl)
      001BCC CB 7B                 6498 	bit	7, e
      001BCE 28 07                 6499 	jr	Z, 00355$
      001BD0 CB 7A                 6500 	bit	7, d
      001BD2 20 08                 6501 	jr	NZ, 00356$
      001BD4 BF                    6502 	cp	a, a
      001BD5 18 05                 6503 	jr	00356$
      001BD7                       6504 00355$:
      001BD7 CB 7A                 6505 	bit	7, d
      001BD9 28 01                 6506 	jr	Z, 00356$
      001BDB 37                    6507 	scf
      001BDC                       6508 00356$:
      001BDC 30 04                 6509 	jr	NC, 00141$
      001BDE 21r8Er00              6510 	ld	hl, #_ySpeed
      001BE1 35                    6511 	dec	(hl)
      001BE2                       6512 00141$:
                                   6513 ;src/main.c:710: if (ySpeed < 0) ySpeed++;
      001BE2 21r8Er00              6514 	ld	hl, #_ySpeed
      001BE5 CB 7E                 6515 	bit	7, (hl)
      001BE7 28 01                 6516 	jr	Z, 00143$
      001BE9 34                    6517 	inc	(hl)
      001BEA                       6518 00143$:
                                   6519 ;src/main.c:711: if (xSpeed > 0) xSpeed--;
      001BEA 21r8Dr00              6520 	ld	hl, #_xSpeed
      001BED 5E                    6521 	ld	e, (hl)
      001BEE AF                    6522 	xor	a, a
      001BEF 57                    6523 	ld	d, a
      001BF0 96                    6524 	sub	a, (hl)
      001BF1 CB 7B                 6525 	bit	7, e
      001BF3 28 07                 6526 	jr	Z, 00357$
      001BF5 CB 7A                 6527 	bit	7, d
      001BF7 20 08                 6528 	jr	NZ, 00358$
      001BF9 BF                    6529 	cp	a, a
      001BFA 18 05                 6530 	jr	00358$
      001BFC                       6531 00357$:
      001BFC CB 7A                 6532 	bit	7, d
      001BFE 28 01                 6533 	jr	Z, 00358$
      001C00 37                    6534 	scf
      001C01                       6535 00358$:
      001C01 30 04                 6536 	jr	NC, 00145$
      001C03 21r8Dr00              6537 	ld	hl, #_xSpeed
      001C06 35                    6538 	dec	(hl)
      001C07                       6539 00145$:
                                   6540 ;src/main.c:712: if (xSpeed < 0) xSpeed++;
      001C07 21r8Dr00              6541 	ld	hl, #_xSpeed
      001C0A CB 7E                 6542 	bit	7, (hl)
      001C0C 28 01                 6543 	jr	Z, 00163$
      001C0E 34                    6544 	inc	(hl)
      001C0F                       6545 00163$:
                                   6546 ;src/main.c:716: }
      001C0F E8 08                 6547 	add	sp, #8
      001C11 C9                    6548 	ret
                                   6549 ;src/main.c:718: void takeDamage(int16_t amount) {
                                   6550 ;	---------------------------------
                                   6551 ; Function takeDamage
                                   6552 ; ---------------------------------
      001C12                       6553 _takeDamage::
      001C12 3B                    6554 	dec	sp
                                   6555 ;src/main.c:719: if (amount > shield) {
      001C13 FArE8r00              6556 	ld	a, (#_shield)
      001C16 4F                    6557 	ld	c, a
      001C17 07                    6558 	rlca
      001C18 9F                    6559 	sbc	a, a
      001C19 47                    6560 	ld	b, a
                                   6561 ;src/main.c:721: hull -= (amount - shield);
      001C1A F8 03                 6562 	ldhl	sp,	#3
      001C1C 7E                    6563 	ld	a, (hl)
      001C1D F8 00                 6564 	ldhl	sp,	#0
      001C1F 77                    6565 	ld	(hl), a
                                   6566 ;src/main.c:719: if (amount > shield) {
      001C20 F8 03                 6567 	ldhl	sp,	#3
      001C22 79                    6568 	ld	a, c
      001C23 96                    6569 	sub	a, (hl)
      001C24 23                    6570 	inc	hl
      001C25 78                    6571 	ld	a, b
      001C26 9E                    6572 	sbc	a, (hl)
      001C27 78                    6573 	ld	a, b
      001C28 57                    6574 	ld	d, a
      001C29 CB 7E                 6575 	bit	7, (hl)
      001C2B 28 07                 6576 	jr	Z, 00111$
      001C2D CB 7A                 6577 	bit	7, d
      001C2F 20 08                 6578 	jr	NZ, 00112$
      001C31 BF                    6579 	cp	a, a
      001C32 18 05                 6580 	jr	00112$
      001C34                       6581 00111$:
      001C34 CB 7A                 6582 	bit	7, d
      001C36 28 01                 6583 	jr	Z, 00112$
      001C38 37                    6584 	scf
      001C39                       6585 00112$:
      001C39 30 10                 6586 	jr	NC, 00102$
                                   6587 ;src/main.c:720: shield = 0;
      001C3B 21rE8r00              6588 	ld	hl, #_shield
      001C3E 36 00                 6589 	ld	(hl), #0x00
                                   6590 ;src/main.c:721: hull -= (amount - shield);
      001C40 FArE7r00              6591 	ld	a, (#_hull)
      001C43 F8 00                 6592 	ldhl	sp,	#0
      001C45 96                    6593 	sub	a, (hl)
      001C46 EArE7r00              6594 	ld	(#_hull),a
      001C49 18 09                 6595 	jr	00104$
      001C4B                       6596 00102$:
                                   6597 ;src/main.c:724: shield -= amount;
      001C4B FArE8r00              6598 	ld	a, (#_shield)
      001C4E F8 00                 6599 	ldhl	sp,	#0
      001C50 96                    6600 	sub	a, (hl)
      001C51 EArE8r00              6601 	ld	(#_shield),a
      001C54                       6602 00104$:
                                   6603 ;src/main.c:726: }
      001C54 33                    6604 	inc	sp
      001C55 C9                    6605 	ret
                                   6606 ;src/main.c:728: void spawnPickup(int16_t x, int16_t y) {
                                   6607 ;	---------------------------------
                                   6608 ; Function spawnPickup
                                   6609 ; ---------------------------------
      001C56                       6610 _spawnPickup::
                                   6611 ;src/main.c:729: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      001C56 CDr00r00              6612 	call	_rand
      001C59 7B                    6613 	ld	a, e
      001C5A E6 0F                 6614 	and	a, #0x0f
      001C5C C0                    6615 	ret	NZ
                                   6616 ;src/main.c:730: if (spawn == 0) {
                                   6617 ;src/main.c:731: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      001C5D CDr00r00              6618 	call	_rand
      001C60 7B                    6619 	ld	a, e
      001C61 E6 03                 6620 	and	a, #0x03
                                   6621 ;src/main.c:732: if (type == 0) {
      001C63 5F                    6622 	ld	e,a
      001C64 B7                    6623 	or	a, a
      001C65 20 13                 6624 	jr	NZ, 00106$
                                   6625 ;src/main.c:733: pickup = health;
      001C67 11 09 00              6626 	ld	de, #0x0009
      001C6A D5                    6627 	push	de
      001C6B 11r1Ar07              6628 	ld	de, #_health
      001C6E D5                    6629 	push	de
      001C6F 11rEBr00              6630 	ld	de, #_pickup
      001C72 D5                    6631 	push	de
      001C73 CDr00r00              6632 	call	___memcpy
      001C76 E8 06                 6633 	add	sp, #6
      001C78 18 31                 6634 	jr	00107$
      001C7A                       6635 00106$:
                                   6636 ;src/main.c:735: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      001C7A 1D                    6637 	dec	e
      001C7B 20 1D                 6638 	jr	NZ, 00102$
      001C7D 21r9Dr08              6639 	ld	hl, #_MAXGUNLEVEL
      001C80 4E                    6640 	ld	c, (hl)
      001C81 FAr9Er00              6641 	ld	a, (#_gunLevel)
      001C84 91                    6642 	sub	a, c
      001C85 30 13                 6643 	jr	NC, 00102$
                                   6644 ;src/main.c:736: pickup = upgrade;
      001C87 11 09 00              6645 	ld	de, #0x0009
      001C8A D5                    6646 	push	de
      001C8B 11r08r07              6647 	ld	de, #_upgrade
      001C8E D5                    6648 	push	de
      001C8F 11rEBr00              6649 	ld	de, #_pickup
      001C92 D5                    6650 	push	de
      001C93 CDr00r00              6651 	call	___memcpy
      001C96 E8 06                 6652 	add	sp, #6
      001C98 18 11                 6653 	jr	00107$
      001C9A                       6654 00102$:
                                   6655 ;src/main.c:739: pickup = ammo;
      001C9A 01r11r07              6656 	ld	bc, #_ammo
      001C9D 11rEBr00              6657 	ld	de, #_pickup
      001CA0 21 09 00              6658 	ld	hl, #0x0009
      001CA3 E5                    6659 	push	hl
      001CA4 C5                    6660 	push	bc
      001CA5 D5                    6661 	push	de
      001CA6 CDr00r00              6662 	call	___memcpy
      001CA9 E8 06                 6663 	add	sp, #6
      001CAB                       6664 00107$:
                                   6665 ;src/main.c:741: pickup.active = 1;
      001CAB 21rF0r00              6666 	ld	hl, #(_pickup + 5)
      001CAE 36 01                 6667 	ld	(hl), #0x01
                                   6668 ;src/main.c:743: pickup.x = x;
      001CB0 11rECr00              6669 	ld	de, #(_pickup + 1)
      001CB3 F8 02                 6670 	ldhl	sp,	#2
      001CB5 2A                    6671 	ld	a, (hl+)
      001CB6 12                    6672 	ld	(de), a
      001CB7 13                    6673 	inc	de
                                   6674 ;src/main.c:744: pickup.y = y;
      001CB8 2A                    6675 	ld	a, (hl+)
      001CB9 12                    6676 	ld	(de), a
      001CBA 11rEEr00              6677 	ld	de, #(_pickup + 3)
      001CBD 2A                    6678 	ld	a, (hl+)
      001CBE 12                    6679 	ld	(de), a
      001CBF 13                    6680 	inc	de
      001CC0 7E                    6681 	ld	a, (hl)
      001CC1 12                    6682 	ld	(de), a
                                   6683 ;src/main.c:746: set_sprite_tile(3, pickup.tile); //0x7f
      001CC2 21rF3r00              6684 	ld	hl, #(_pickup + 8)
      001CC5 4E                    6685 	ld	c, (hl)
                                   6686 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001CC6 21r0Er00              6687 	ld	hl, #(_shadow_OAM + 14)
      001CC9 71                    6688 	ld	(hl), c
                                   6689 ;src/main.c:746: set_sprite_tile(3, pickup.tile); //0x7f
                                   6690 ;src/main.c:752: }
      001CCA C9                    6691 	ret
                                   6692 ;src/main.c:754: void checkCollision() {
                                   6693 ;	---------------------------------
                                   6694 ; Function checkCollision
                                   6695 ; ---------------------------------
      001CCB                       6696 _checkCollision::
      001CCB E8 EF                 6697 	add	sp, #-17
                                   6698 ;src/main.c:761: struct Enemy *eptr = enemies + enemyCollisionCount;
      001CCD 21r9Dr00              6699 	ld	hl, #_enemyCollisionCount
      001CD0 4E                    6700 	ld	c, (hl)
      001CD1 06 00                 6701 	ld	b, #0x00
      001CD3 69                    6702 	ld	l, c
      001CD4 60                    6703 	ld	h, b
      001CD5 29                    6704 	add	hl, hl
      001CD6 29                    6705 	add	hl, hl
      001CD7 29                    6706 	add	hl, hl
      001CD8 29                    6707 	add	hl, hl
      001CD9 09                    6708 	add	hl, bc
      001CDA 01r55r00              6709 	ld	bc,#_enemies
      001CDD 09                    6710 	add	hl,bc
      001CDE 4D                    6711 	ld	c, l
      001CDF 7C                    6712 	ld	a, h
      001CE0 F8 00                 6713 	ldhl	sp,	#0
      001CE2 71                    6714 	ld	(hl), c
      001CE3 23                    6715 	inc	hl
      001CE4 77                    6716 	ld	(hl), a
                                   6717 ;src/main.c:762: uint8_t i = enemyCollisionCount;
      001CE5 FAr9Dr00              6718 	ld	a, (#_enemyCollisionCount)
      001CE8 F8 02                 6719 	ldhl	sp,	#2
      001CEA 77                    6720 	ld	(hl), a
                                   6721 ;src/main.c:764: if (eptr->visible && eptr->alive) {
      001CEB D1                    6722 	pop	de
      001CEC D5                    6723 	push	de
      001CED 21 0A 00              6724 	ld	hl, #0x000a
      001CF0 19                    6725 	add	hl, de
      001CF1 4D                    6726 	ld	c, l
      001CF2 44                    6727 	ld	b, h
      001CF3 0A                    6728 	ld	a, (bc)
      001CF4 B7                    6729 	or	a, a
      001CF5 CAr62r20              6730 	jp	Z, 00129$
      001CF8 D1                    6731 	pop	de
      001CF9 D5                    6732 	push	de
      001CFA 21 09 00              6733 	ld	hl, #0x0009
      001CFD 19                    6734 	add	hl, de
      001CFE 4D                    6735 	ld	c, l
      001CFF 44                    6736 	ld	b, h
      001D00 0A                    6737 	ld	a, (bc)
      001D01 B7                    6738 	or	a, a
      001D02 CAr62r20              6739 	jp	Z, 00129$
                                   6740 ;src/main.c:766: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D05 D1                    6741 	pop	de
      001D06 D5                    6742 	push	de
      001D07 21 08 00              6743 	ld	hl, #0x0008
      001D0A 19                    6744 	add	hl, de
      001D0B 4D                    6745 	ld	c, l
      001D0C 44                    6746 	ld	b, h
      001D0D 0A                    6747 	ld	a, (bc)
      001D0E 4F                    6748 	ld	c, a
      001D0F 3D                    6749 	dec	a
      001D10 3E 01                 6750 	ld	a, #0x01
      001D12 28 01                 6751 	jr	Z, 00290$
      001D14 AF                    6752 	xor	a, a
      001D15                       6753 00290$:
      001D15 F8 0D                 6754 	ldhl	sp,	#13
      001D17 77                    6755 	ld	(hl), a
      001D18 FAr93r00              6756 	ld	a, (#_playerDrawX)
      001D1B F8 0E                 6757 	ldhl	sp,	#14
      001D1D 77                    6758 	ld	(hl), a
                                   6759 ;src/main.c:767: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D1E 79                    6760 	ld	a, c
      001D1F D6 02                 6761 	sub	a, #0x02
      001D21 3E 01                 6762 	ld	a, #0x01
      001D23 28 01                 6763 	jr	Z, 00292$
      001D25 AF                    6764 	xor	a, a
      001D26                       6765 00292$:
      001D26 F8 0F                 6766 	ldhl	sp,	#15
                                   6767 ;src/main.c:766: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D28 32                    6768 	ld	(hl-), a
      001D29 2B                    6769 	dec	hl
      001D2A 7E                    6770 	ld	a, (hl)
      001D2B B7                    6771 	or	a, a
      001D2C 28 2E                 6772 	jr	Z, 00110$
      001D2E D1                    6773 	pop	de
      001D2F D5                    6774 	push	de
      001D30 1A                    6775 	ld	a, (de)
      001D31 F8 10                 6776 	ldhl	sp,	#16
      001D33 77                    6777 	ld	(hl), a
      001D34 3A                    6778 	ld	a, (hl-)
      001D35 2B                    6779 	dec	hl
      001D36 96                    6780 	sub	a, (hl)
      001D37 23                    6781 	inc	hl
      001D38 23                    6782 	inc	hl
      001D39 77                    6783 	ld	(hl), a
                                   6784 ;src/main.c:345: if (value >= 0) return value;
      001D3A CB 7E                 6785 	bit	7, (hl)
      001D3C 28 05                 6786 	jr	Z, 00137$
                                   6787 ;src/main.c:346: else return - value;
      001D3E AF                    6788 	xor	a, a
      001D3F F8 10                 6789 	ldhl	sp,	#16
      001D41 96                    6790 	sub	a, (hl)
      001D42 77                    6791 	ld	(hl), a
                                   6792 ;src/main.c:766: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D43                       6793 00137$:
      001D43 F8 10                 6794 	ldhl	sp,	#16
      001D45 5E                    6795 	ld	e, (hl)
      001D46 3E 08                 6796 	ld	a,#0x08
      001D48 57                    6797 	ld	d,a
      001D49 96                    6798 	sub	a, (hl)
      001D4A CB 7B                 6799 	bit	7, e
      001D4C 28 07                 6800 	jr	Z, 00293$
      001D4E CB 7A                 6801 	bit	7, d
      001D50 20 08                 6802 	jr	NZ, 00294$
      001D52 BF                    6803 	cp	a, a
      001D53 18 05                 6804 	jr	00294$
      001D55                       6805 00293$:
      001D55 CB 7A                 6806 	bit	7, d
      001D57 28 01                 6807 	jr	Z, 00294$
      001D59 37                    6808 	scf
      001D5A                       6809 00294$:
      001D5A 30 33                 6810 	jr	NC, 00106$
      001D5C                       6811 00110$:
                                   6812 ;src/main.c:767: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D5C F8 0F                 6813 	ldhl	sp,	#15
      001D5E 7E                    6814 	ld	a, (hl)
      001D5F B7                    6815 	or	a, a
      001D60 CAr43r1E              6816 	jp	Z, 00107$
      001D63 2B                    6817 	dec	hl
      001D64 D1                    6818 	pop	de
      001D65 D5                    6819 	push	de
      001D66 1A                    6820 	ld	a, (de)
      001D67 96                    6821 	sub	a, (hl)
      001D68 23                    6822 	inc	hl
      001D69 23                    6823 	inc	hl
      001D6A 77                    6824 	ld	(hl), a
                                   6825 ;src/main.c:345: if (value >= 0) return value;
      001D6B CB 7E                 6826 	bit	7, (hl)
      001D6D 28 06                 6827 	jr	Z, 00141$
                                   6828 ;src/main.c:346: else return - value;
      001D6F AF                    6829 	xor	a, a
      001D70 F8 10                 6830 	ldhl	sp,	#16
      001D72 96                    6831 	sub	a, (hl)
      001D73 4F                    6832 	ld	c, a
      001D74 71                    6833 	ld	(hl), c
                                   6834 ;src/main.c:767: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D75                       6835 00141$:
      001D75 F8 10                 6836 	ldhl	sp,	#16
      001D77 5E                    6837 	ld	e, (hl)
      001D78 3E 10                 6838 	ld	a,#0x10
      001D7A 57                    6839 	ld	d,a
      001D7B 96                    6840 	sub	a, (hl)
      001D7C CB 7B                 6841 	bit	7, e
      001D7E 28 07                 6842 	jr	Z, 00295$
      001D80 CB 7A                 6843 	bit	7, d
      001D82 20 08                 6844 	jr	NZ, 00296$
      001D84 BF                    6845 	cp	a, a
      001D85 18 05                 6846 	jr	00296$
      001D87                       6847 00295$:
      001D87 CB 7A                 6848 	bit	7, d
      001D89 28 01                 6849 	jr	Z, 00296$
      001D8B 37                    6850 	scf
      001D8C                       6851 00296$:
      001D8C DAr43r1E              6852 	jp	C, 00107$
      001D8F                       6853 00106$:
                                   6854 ;src/main.c:768: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001D8F C1                    6855 	pop	bc
      001D90 C5                    6856 	push	bc
      001D91 03                    6857 	inc	bc
      001D92 03                    6858 	inc	bc
      001D93 FAr94r00              6859 	ld	a, (#_playerDrawY)
      001D96 F8 10                 6860 	ldhl	sp,	#16
      001D98 77                    6861 	ld	(hl), a
      001D99 F8 0D                 6862 	ldhl	sp,	#13
      001D9B 7E                    6863 	ld	a, (hl)
      001D9C B7                    6864 	or	a, a
      001D9D 28 23                 6865 	jr	Z, 00105$
      001D9F 0A                    6866 	ld	a, (bc)
      001DA0 F8 10                 6867 	ldhl	sp,	#16
      001DA2 96                    6868 	sub	a, (hl)
      001DA3 6F                    6869 	ld	l, a
                                   6870 ;	spillPairReg hl
                                   6871 ;	spillPairReg hl
                                   6872 ;src/main.c:345: if (value >= 0) return value;
      001DA4 CB 7D                 6873 	bit	7, l
      001DA6 28 03                 6874 	jr	Z, 00145$
                                   6875 ;src/main.c:346: else return - value;
      001DA8 AF                    6876 	xor	a, a
      001DA9 95                    6877 	sub	a, l
      001DAA 6F                    6878 	ld	l, a
                                   6879 ;	spillPairReg hl
                                   6880 ;	spillPairReg hl
                                   6881 ;src/main.c:768: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001DAB                       6882 00145$:
      001DAB 5D                    6883 	ld	e, l
      001DAC 3E 08                 6884 	ld	a,#0x08
      001DAE 57                    6885 	ld	d,a
      001DAF 95                    6886 	sub	a, l
      001DB0 CB 7B                 6887 	bit	7, e
      001DB2 28 07                 6888 	jr	Z, 00297$
      001DB4 CB 7A                 6889 	bit	7, d
      001DB6 20 08                 6890 	jr	NZ, 00298$
      001DB8 BF                    6891 	cp	a, a
      001DB9 18 05                 6892 	jr	00298$
      001DBB                       6893 00297$:
      001DBB CB 7A                 6894 	bit	7, d
      001DBD 28 01                 6895 	jr	Z, 00298$
      001DBF 37                    6896 	scf
      001DC0                       6897 00298$:
      001DC0 30 28                 6898 	jr	NC, 00101$
      001DC2                       6899 00105$:
                                   6900 ;src/main.c:769: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001DC2 F8 0F                 6901 	ldhl	sp,	#15
      001DC4 7E                    6902 	ld	a, (hl)
      001DC5 B7                    6903 	or	a, a
      001DC6 28 7B                 6904 	jr	Z, 00107$
      001DC8 23                    6905 	inc	hl
      001DC9 0A                    6906 	ld	a, (bc)
      001DCA 96                    6907 	sub	a, (hl)
      001DCB 4F                    6908 	ld	c, a
                                   6909 ;src/main.c:345: if (value >= 0) return value;
      001DCC CB 79                 6910 	bit	7, c
      001DCE 28 03                 6911 	jr	Z, 00149$
                                   6912 ;src/main.c:346: else return - value;
      001DD0 AF                    6913 	xor	a, a
      001DD1 91                    6914 	sub	a, c
      001DD2 4F                    6915 	ld	c, a
                                   6916 ;src/main.c:769: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001DD3                       6917 00149$:
      001DD3 59                    6918 	ld	e, c
      001DD4 3E 10                 6919 	ld	a,#0x10
      001DD6 57                    6920 	ld	d,a
      001DD7 91                    6921 	sub	a, c
      001DD8 CB 7B                 6922 	bit	7, e
      001DDA 28 07                 6923 	jr	Z, 00299$
      001DDC CB 7A                 6924 	bit	7, d
      001DDE 20 08                 6925 	jr	NZ, 00300$
      001DE0 BF                    6926 	cp	a, a
      001DE1 18 05                 6927 	jr	00300$
      001DE3                       6928 00299$:
      001DE3 CB 7A                 6929 	bit	7, d
      001DE5 28 01                 6930 	jr	Z, 00300$
      001DE7 37                    6931 	scf
      001DE8                       6932 00300$:
      001DE8 38 59                 6933 	jr	C, 00107$
      001DEA                       6934 00101$:
                                   6935 ;src/main.c:771: set_sprite_tile(10+(i<<1), 0x7f);
      001DEA F8 02                 6936 	ldhl	sp,	#2
      001DEC 7E                    6937 	ld	a, (hl)
      001DED 87                    6938 	add	a, a
      001DEE C6 0A                 6939 	add	a, #0x0a
                                   6940 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001DF0 6F                    6941 	ld	l, a
      001DF1 01r00r00              6942 	ld	bc, #_shadow_OAM+0
                                   6943 ;	spillPairReg hl
                                   6944 ;	spillPairReg hl
      001DF4 26 00                 6945 	ld	h, #0x00
                                   6946 ;	spillPairReg hl
                                   6947 ;	spillPairReg hl
      001DF6 29                    6948 	add	hl, hl
      001DF7 29                    6949 	add	hl, hl
      001DF8 09                    6950 	add	hl, bc
      001DF9 23                    6951 	inc	hl
      001DFA 23                    6952 	inc	hl
      001DFB 36 7F                 6953 	ld	(hl), #0x7f
                                   6954 ;src/main.c:772: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001DFD F8 02                 6955 	ldhl	sp,	#2
      001DFF 7E                    6956 	ld	a, (hl)
      001E00 87                    6957 	add	a, a
      001E01 C6 0B                 6958 	add	a, #0x0b
                                   6959 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E03 6F                    6960 	ld	l, a
      001E04 01r00r00              6961 	ld	bc, #_shadow_OAM+0
                                   6962 ;	spillPairReg hl
                                   6963 ;	spillPairReg hl
      001E07 26 00                 6964 	ld	h, #0x00
                                   6965 ;	spillPairReg hl
                                   6966 ;	spillPairReg hl
      001E09 29                    6967 	add	hl, hl
      001E0A 29                    6968 	add	hl, hl
      001E0B 09                    6969 	add	hl, bc
      001E0C 23                    6970 	inc	hl
      001E0D 23                    6971 	inc	hl
      001E0E 36 7F                 6972 	ld	(hl), #0x7f
                                   6973 ;src/main.c:773: eptr->alive = 0;
      001E10 D1                    6974 	pop	de
      001E11 D5                    6975 	push	de
      001E12 21 09 00              6976 	ld	hl, #0x0009
      001E15 19                    6977 	add	hl, de
      001E16 4D                    6978 	ld	c, l
      001E17 44                    6979 	ld	b, h
      001E18 AF                    6980 	xor	a, a
      001E19 02                    6981 	ld	(bc), a
                                   6982 ;src/main.c:774: eptr->visible = 0;
      001E1A D1                    6983 	pop	de
      001E1B D5                    6984 	push	de
      001E1C 21 0A 00              6985 	ld	hl, #0x000a
      001E1F 19                    6986 	add	hl, de
      001E20 4D                    6987 	ld	c, l
      001E21 44                    6988 	ld	b, h
      001E22 AF                    6989 	xor	a, a
      001E23 02                    6990 	ld	(bc), a
                                   6991 ;src/main.c:775: takeDamage(eptr->damage);
      001E24 D1                    6992 	pop	de
      001E25 D5                    6993 	push	de
      001E26 21 0B 00              6994 	ld	hl, #0x000b
      001E29 19                    6995 	add	hl, de
      001E2A 4D                    6996 	ld	c, l
      001E2B 44                    6997 	ld	b, h
      001E2C 0A                    6998 	ld	a, (bc)
      001E2D 06 00                 6999 	ld	b, #0x00
      001E2F 4F                    7000 	ld	c, a
      001E30 C5                    7001 	push	bc
      001E31 CDr12r1C              7002 	call	_takeDamage
      001E34 E1                    7003 	pop	hl
                                   7004 ;src/main.c:776: initEnemies(0);
      001E35 AF                    7005 	xor	a, a
      001E36 F5                    7006 	push	af
      001E37 33                    7007 	inc	sp
      001E38 CDr04r0D              7008 	call	_initEnemies
      001E3B 33                    7009 	inc	sp
                                   7010 ;src/main.c:777: playSound(0);
      001E3C AF                    7011 	xor	a, a
      001E3D F5                    7012 	push	af
      001E3E 33                    7013 	inc	sp
      001E3F CDrA1r0C              7014 	call	_playSound
      001E42 33                    7015 	inc	sp
      001E43                       7016 00107$:
                                   7017 ;src/main.c:783: struct Projectile *pptr = projectiles;
      001E43 F8 0E                 7018 	ldhl	sp,	#14
      001E45 3ErAA                 7019 	ld	a, #<(_projectiles)
      001E47 22                    7020 	ld	(hl+), a
      001E48 36s00                 7021 	ld	(hl), #>(_projectiles)
                                   7022 ;src/main.c:785: while (j < PROJECTILECOUNT) {
      001E4A D1                    7023 	pop	de
      001E4B D5                    7024 	push	de
      001E4C 21 02 00              7025 	ld	hl, #0x0002
      001E4F 19                    7026 	add	hl, de
      001E50 E5                    7027 	push	hl
      001E51 7D                    7028 	ld	a, l
      001E52 F8 05                 7029 	ldhl	sp,	#5
      001E54 77                    7030 	ld	(hl), a
      001E55 E1                    7031 	pop	hl
      001E56 7C                    7032 	ld	a, h
      001E57 F8 04                 7033 	ldhl	sp,	#4
      001E59 77                    7034 	ld	(hl), a
      001E5A D1                    7035 	pop	de
      001E5B D5                    7036 	push	de
      001E5C 21 08 00              7037 	ld	hl, #0x0008
      001E5F 19                    7038 	add	hl, de
      001E60 E5                    7039 	push	hl
      001E61 7D                    7040 	ld	a, l
      001E62 F8 07                 7041 	ldhl	sp,	#7
      001E64 77                    7042 	ld	(hl), a
      001E65 E1                    7043 	pop	hl
      001E66 7C                    7044 	ld	a, h
      001E67 F8 06                 7045 	ldhl	sp,	#6
      001E69 77                    7046 	ld	(hl), a
      001E6A F8 03                 7047 	ldhl	sp,	#3
      001E6C 7E                    7048 	ld	a, (hl)
      001E6D F8 07                 7049 	ldhl	sp,	#7
      001E6F 77                    7050 	ld	(hl), a
      001E70 F8 04                 7051 	ldhl	sp,	#4
      001E72 7E                    7052 	ld	a, (hl)
      001E73 F8 08                 7053 	ldhl	sp,	#8
      001E75 77                    7054 	ld	(hl), a
      001E76 F8 03                 7055 	ldhl	sp,	#3
      001E78 7E                    7056 	ld	a, (hl)
      001E79 F8 09                 7057 	ldhl	sp,	#9
      001E7B 77                    7058 	ld	(hl), a
      001E7C F8 04                 7059 	ldhl	sp,	#4
      001E7E 7E                    7060 	ld	a, (hl)
      001E7F F8 0A                 7061 	ldhl	sp,	#10
      001E81 77                    7062 	ld	(hl), a
      001E82 F8 10                 7063 	ldhl	sp,	#16
      001E84 36 00                 7064 	ld	(hl), #0x00
      001E86                       7065 00125$:
      001E86 21r99r08              7066 	ld	hl, #_PROJECTILECOUNT
      001E89 4E                    7067 	ld	c, (hl)
      001E8A F8 10                 7068 	ldhl	sp,	#16
      001E8C 7E                    7069 	ld	a, (hl)
      001E8D 91                    7070 	sub	a, c
      001E8E D2r62r20              7071 	jp	NC, 00129$
                                   7072 ;src/main.c:786: if (pptr->active) {
      001E91 2B                    7073 	dec	hl
      001E92 2B                    7074 	dec	hl
      001E93 2A                    7075 	ld	a, (hl+)
      001E94 5F                    7076 	ld	e, a
      001E95 56                    7077 	ld	d, (hl)
      001E96 21 09 00              7078 	ld	hl, #0x0009
      001E99 19                    7079 	add	hl, de
      001E9A 4D                    7080 	ld	c, l
      001E9B 44                    7081 	ld	b, h
      001E9C 0A                    7082 	ld	a, (bc)
      001E9D B7                    7083 	or	a, a
      001E9E CAr49r20              7084 	jp	Z, 00124$
                                   7085 ;src/main.c:790: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001EA1 F8 05                 7086 	ldhl	sp,#5
      001EA3 2A                    7087 	ld	a, (hl+)
      001EA4 5F                    7088 	ld	e, a
      001EA5 56                    7089 	ld	d, (hl)
      001EA6 1A                    7090 	ld	a, (de)
      001EA7 4F                    7091 	ld	c, a
      001EA8 3D                    7092 	dec	a
      001EA9 3E 01                 7093 	ld	a, #0x01
      001EAB 28 01                 7094 	jr	Z, 00302$
      001EAD AF                    7095 	xor	a, a
      001EAE                       7096 00302$:
      001EAE F8 0B                 7097 	ldhl	sp,	#11
      001EB0 77                    7098 	ld	(hl), a
                                   7099 ;src/main.c:791: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001EB1 79                    7100 	ld	a, c
      001EB2 D6 02                 7101 	sub	a, #0x02
      001EB4 3E 01                 7102 	ld	a, #0x01
      001EB6 28 01                 7103 	jr	Z, 00304$
      001EB8 AF                    7104 	xor	a, a
      001EB9                       7105 00304$:
      001EB9 F8 0C                 7106 	ldhl	sp,	#12
                                   7107 ;src/main.c:790: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001EBB 32                    7108 	ld	(hl-), a
      001EBC 7E                    7109 	ld	a, (hl)
      001EBD B7                    7110 	or	a, a
      001EBE 28 2C                 7111 	jr	Z, 00122$
      001EC0 D1                    7112 	pop	de
      001EC1 D5                    7113 	push	de
      001EC2 1A                    7114 	ld	a, (de)
      001EC3 F8 0E                 7115 	ldhl	sp,#14
      001EC5 5E                    7116 	ld	e, (hl)
      001EC6 23                    7117 	inc	hl
      001EC7 56                    7118 	ld	d, (hl)
      001EC8 F5                    7119 	push	af
      001EC9 1A                    7120 	ld	a, (de)
      001ECA 4F                    7121 	ld	c, a
      001ECB F1                    7122 	pop	af
      001ECC 91                    7123 	sub	a, c
      001ECD 4F                    7124 	ld	c, a
                                   7125 ;src/main.c:345: if (value >= 0) return value;
      001ECE CB 79                 7126 	bit	7, c
      001ED0 28 03                 7127 	jr	Z, 00155$
                                   7128 ;src/main.c:346: else return - value;
      001ED2 AF                    7129 	xor	a, a
      001ED3 91                    7130 	sub	a, c
      001ED4 4F                    7131 	ld	c, a
                                   7132 ;src/main.c:790: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001ED5                       7133 00155$:
      001ED5 59                    7134 	ld	e, c
      001ED6 3E 08                 7135 	ld	a,#0x08
      001ED8 57                    7136 	ld	d,a
      001ED9 91                    7137 	sub	a, c
      001EDA CB 7B                 7138 	bit	7, e
      001EDC 28 07                 7139 	jr	Z, 00305$
      001EDE CB 7A                 7140 	bit	7, d
      001EE0 20 08                 7141 	jr	NZ, 00306$
      001EE2 BF                    7142 	cp	a, a
      001EE3 18 05                 7143 	jr	00306$
      001EE5                       7144 00305$:
      001EE5 CB 7A                 7145 	bit	7, d
      001EE7 28 01                 7146 	jr	Z, 00306$
      001EE9 37                    7147 	scf
      001EEA                       7148 00306$:
      001EEA 30 3B                 7149 	jr	NC, 00118$
      001EEC                       7150 00122$:
                                   7151 ;src/main.c:791: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001EEC F8 0C                 7152 	ldhl	sp,	#12
      001EEE 7E                    7153 	ld	a, (hl)
      001EEF B7                    7154 	or	a, a
      001EF0 CAr49r20              7155 	jp	Z, 00124$
      001EF3 D1                    7156 	pop	de
      001EF4 D5                    7157 	push	de
      001EF5 1A                    7158 	ld	a, (de)
      001EF6 F8 0E                 7159 	ldhl	sp,#14
      001EF8 5E                    7160 	ld	e, (hl)
      001EF9 23                    7161 	inc	hl
      001EFA 56                    7162 	ld	d, (hl)
      001EFB 2B                    7163 	dec	hl
      001EFC 2B                    7164 	dec	hl
      001EFD F5                    7165 	push	af
      001EFE 1A                    7166 	ld	a, (de)
      001EFF 4F                    7167 	ld	c, a
      001F00 F1                    7168 	pop	af
      001F01 91                    7169 	sub	a, c
      001F02 77                    7170 	ld	(hl), a
                                   7171 ;src/main.c:345: if (value >= 0) return value;
      001F03 CB 7E                 7172 	bit	7, (hl)
      001F05 20 03                 7173 	jr	NZ, 00157$
      001F07 4E                    7174 	ld	c, (hl)
      001F08 18 05                 7175 	jr	00159$
      001F0A                       7176 00157$:
                                   7177 ;src/main.c:346: else return - value;
      001F0A AF                    7178 	xor	a, a
      001F0B F8 0D                 7179 	ldhl	sp,	#13
      001F0D 96                    7180 	sub	a, (hl)
      001F0E 4F                    7181 	ld	c, a
                                   7182 ;src/main.c:791: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001F0F                       7183 00159$:
      001F0F 59                    7184 	ld	e, c
      001F10 3E 10                 7185 	ld	a,#0x10
      001F12 57                    7186 	ld	d,a
      001F13 91                    7187 	sub	a, c
      001F14 CB 7B                 7188 	bit	7, e
      001F16 28 07                 7189 	jr	Z, 00307$
      001F18 CB 7A                 7190 	bit	7, d
      001F1A 20 08                 7191 	jr	NZ, 00308$
      001F1C BF                    7192 	cp	a, a
      001F1D 18 05                 7193 	jr	00308$
      001F1F                       7194 00307$:
      001F1F CB 7A                 7195 	bit	7, d
      001F21 28 01                 7196 	jr	Z, 00308$
      001F23 37                    7197 	scf
      001F24                       7198 00308$:
      001F24 DAr49r20              7199 	jp	C, 00124$
      001F27                       7200 00118$:
                                   7201 ;src/main.c:792: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001F27 F8 0E                 7202 	ldhl	sp,	#14
      001F29 2A                    7203 	ld	a, (hl+)
      001F2A 4F                    7204 	ld	c, a
      001F2B 46                    7205 	ld	b, (hl)
      001F2C 03                    7206 	inc	bc
      001F2D 03                    7207 	inc	bc
      001F2E F8 0B                 7208 	ldhl	sp,	#11
      001F30 7E                    7209 	ld	a, (hl)
      001F31 B7                    7210 	or	a, a
      001F32 28 2A                 7211 	jr	Z, 00117$
      001F34 F8 07                 7212 	ldhl	sp,#7
      001F36 2A                    7213 	ld	a, (hl+)
      001F37 5F                    7214 	ld	e, a
      001F38 56                    7215 	ld	d, (hl)
      001F39 1A                    7216 	ld	a, (de)
      001F3A F5                    7217 	push	af
      001F3B 0A                    7218 	ld	a, (bc)
      001F3C 5F                    7219 	ld	e, a
      001F3D F1                    7220 	pop	af
      001F3E 93                    7221 	sub	a, e
      001F3F 6F                    7222 	ld	l, a
                                   7223 ;	spillPairReg hl
                                   7224 ;	spillPairReg hl
                                   7225 ;src/main.c:345: if (value >= 0) return value;
      001F40 CB 7D                 7226 	bit	7, l
      001F42 28 03                 7227 	jr	Z, 00163$
                                   7228 ;src/main.c:346: else return - value;
      001F44 AF                    7229 	xor	a, a
      001F45 95                    7230 	sub	a, l
      001F46 6F                    7231 	ld	l, a
                                   7232 ;	spillPairReg hl
                                   7233 ;	spillPairReg hl
                                   7234 ;src/main.c:792: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001F47                       7235 00163$:
      001F47 5D                    7236 	ld	e, l
      001F48 3E 08                 7237 	ld	a,#0x08
      001F4A 57                    7238 	ld	d,a
      001F4B 95                    7239 	sub	a, l
      001F4C CB 7B                 7240 	bit	7, e
      001F4E 28 07                 7241 	jr	Z, 00309$
      001F50 CB 7A                 7242 	bit	7, d
      001F52 20 08                 7243 	jr	NZ, 00310$
      001F54 BF                    7244 	cp	a, a
      001F55 18 05                 7245 	jr	00310$
      001F57                       7246 00309$:
      001F57 CB 7A                 7247 	bit	7, d
      001F59 28 01                 7248 	jr	Z, 00310$
      001F5B 37                    7249 	scf
      001F5C                       7250 00310$:
      001F5C 30 32                 7251 	jr	NC, 00113$
      001F5E                       7252 00117$:
                                   7253 ;src/main.c:793: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001F5E F8 0C                 7254 	ldhl	sp,	#12
      001F60 7E                    7255 	ld	a, (hl)
      001F61 B7                    7256 	or	a, a
      001F62 CAr49r20              7257 	jp	Z, 00124$
      001F65 F8 03                 7258 	ldhl	sp,#3
      001F67 2A                    7259 	ld	a, (hl+)
      001F68 5F                    7260 	ld	e, a
      001F69 56                    7261 	ld	d, (hl)
      001F6A 1A                    7262 	ld	a, (de)
      001F6B F5                    7263 	push	af
      001F6C 0A                    7264 	ld	a, (bc)
      001F6D 4F                    7265 	ld	c, a
      001F6E F1                    7266 	pop	af
      001F6F 91                    7267 	sub	a, c
      001F70 4F                    7268 	ld	c, a
                                   7269 ;src/main.c:345: if (value >= 0) return value;
      001F71 CB 79                 7270 	bit	7, c
      001F73 28 03                 7271 	jr	Z, 00167$
                                   7272 ;src/main.c:346: else return - value;
      001F75 AF                    7273 	xor	a, a
      001F76 91                    7274 	sub	a, c
      001F77 4F                    7275 	ld	c, a
                                   7276 ;src/main.c:793: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001F78                       7277 00167$:
      001F78 59                    7278 	ld	e, c
      001F79 3E 10                 7279 	ld	a,#0x10
      001F7B 57                    7280 	ld	d,a
      001F7C 91                    7281 	sub	a, c
      001F7D CB 7B                 7282 	bit	7, e
      001F7F 28 07                 7283 	jr	Z, 00311$
      001F81 CB 7A                 7284 	bit	7, d
      001F83 20 08                 7285 	jr	NZ, 00312$
      001F85 BF                    7286 	cp	a, a
      001F86 18 05                 7287 	jr	00312$
      001F88                       7288 00311$:
      001F88 CB 7A                 7289 	bit	7, d
      001F8A 28 01                 7290 	jr	Z, 00312$
      001F8C 37                    7291 	scf
      001F8D                       7292 00312$:
      001F8D DAr49r20              7293 	jp	C, 00124$
      001F90                       7294 00113$:
                                   7295 ;src/main.c:795: eptr->hp -= pptr->damage;
      001F90 D1                    7296 	pop	de
      001F91 D5                    7297 	push	de
      001F92 21 10 00              7298 	ld	hl, #0x0010
      001F95 19                    7299 	add	hl, de
      001F96 5D                    7300 	ld	e, l
      001F97 54                    7301 	ld	d, h
      001F98 1A                    7302 	ld	a, (de)
      001F99 F8 0D                 7303 	ldhl	sp,	#13
      001F9B 22                    7304 	ld	(hl+), a
      001F9C D5                    7305 	push	de
      001F9D 2A                    7306 	ld	a, (hl+)
      001F9E 5F                    7307 	ld	e, a
      001F9F 56                    7308 	ld	d, (hl)
      001FA0 21 08 00              7309 	ld	hl, #0x0008
      001FA3 19                    7310 	add	hl, de
      001FA4 D1                    7311 	pop	de
      001FA5 4D                    7312 	ld	c, l
      001FA6 44                    7313 	ld	b, h
      001FA7 0A                    7314 	ld	a, (bc)
      001FA8 4F                    7315 	ld	c, a
      001FA9 F8 0D                 7316 	ldhl	sp,	#13
      001FAB 7E                    7317 	ld	a, (hl)
      001FAC 91                    7318 	sub	a, c
      001FAD 4F                    7319 	ld	c, a
      001FAE 12                    7320 	ld	(de), a
                                   7321 ;src/main.c:796: set_sprite_tile(30+j, 0x7f);
      001FAF F8 10                 7322 	ldhl	sp,	#16
      001FB1 7E                    7323 	ld	a, (hl)
      001FB2 C6 1E                 7324 	add	a, #0x1e
                                   7325 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FB4 6F                    7326 	ld	l, a
                                   7327 ;	spillPairReg hl
                                   7328 ;	spillPairReg hl
      001FB5 26 00                 7329 	ld	h, #0x00
                                   7330 ;	spillPairReg hl
                                   7331 ;	spillPairReg hl
      001FB7 29                    7332 	add	hl, hl
      001FB8 29                    7333 	add	hl, hl
      001FB9 11r00r00              7334 	ld	de, #_shadow_OAM
      001FBC 19                    7335 	add	hl, de
      001FBD 23                    7336 	inc	hl
      001FBE 23                    7337 	inc	hl
      001FBF 36 7F                 7338 	ld	(hl), #0x7f
                                   7339 ;src/main.c:797: pptr->active = 0;
      001FC1 F8 0E                 7340 	ldhl	sp,#14
      001FC3 2A                    7341 	ld	a, (hl+)
      001FC4 5F                    7342 	ld	e, a
      001FC5 56                    7343 	ld	d, (hl)
      001FC6 21 09 00              7344 	ld	hl, #0x0009
      001FC9 19                    7345 	add	hl, de
      001FCA 5D                    7346 	ld	e, l
      001FCB 54                    7347 	ld	d, h
      001FCC AF                    7348 	xor	a, a
      001FCD 12                    7349 	ld	(de), a
                                   7350 ;src/main.c:800: if (eptr->hp <= 0) {
      001FCE 59                    7351 	ld	e, c
      001FCF AF                    7352 	xor	a, a
      001FD0 57                    7353 	ld	d, a
      001FD1 91                    7354 	sub	a, c
      001FD2 CB 7B                 7355 	bit	7, e
      001FD4 28 07                 7356 	jr	Z, 00313$
      001FD6 CB 7A                 7357 	bit	7, d
      001FD8 20 08                 7358 	jr	NZ, 00314$
      001FDA BF                    7359 	cp	a, a
      001FDB 18 05                 7360 	jr	00314$
      001FDD                       7361 00313$:
      001FDD CB 7A                 7362 	bit	7, d
      001FDF 28 01                 7363 	jr	Z, 00314$
      001FE1 37                    7364 	scf
      001FE2                       7365 00314$:
      001FE2 38 65                 7366 	jr	C, 00124$
                                   7367 ;src/main.c:804: set_sprite_tile(10+(i<<1), 0x7f);
      001FE4 F8 02                 7368 	ldhl	sp,	#2
      001FE6 7E                    7369 	ld	a, (hl)
      001FE7 87                    7370 	add	a, a
      001FE8 4F                    7371 	ld	c, a
      001FE9 C6 0A                 7372 	add	a, #0x0a
                                   7373 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FEB 6F                    7374 	ld	l, a
                                   7375 ;	spillPairReg hl
                                   7376 ;	spillPairReg hl
      001FEC 26 00                 7377 	ld	h, #0x00
                                   7378 ;	spillPairReg hl
                                   7379 ;	spillPairReg hl
      001FEE 29                    7380 	add	hl, hl
      001FEF 29                    7381 	add	hl, hl
      001FF0 11r00r00              7382 	ld	de, #_shadow_OAM
      001FF3 19                    7383 	add	hl, de
      001FF4 23                    7384 	inc	hl
      001FF5 23                    7385 	inc	hl
      001FF6 36 7F                 7386 	ld	(hl), #0x7f
                                   7387 ;src/main.c:805: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001FF8 79                    7388 	ld	a, c
      001FF9 C6 0B                 7389 	add	a, #0x0b
      001FFB 4F                    7390 	ld	c, a
                                   7391 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FFC 26 00                 7392 	ld	h, #0x00
                                   7393 ;	spillPairReg hl
                                   7394 ;	spillPairReg hl
      001FFE 69                    7395 	ld	l, c
      001FFF 29                    7396 	add	hl, hl
      002000 29                    7397 	add	hl, hl
      002001 11r00r00              7398 	ld	de, #_shadow_OAM
      002004 19                    7399 	add	hl, de
      002005 23                    7400 	inc	hl
      002006 23                    7401 	inc	hl
      002007 36 7F                 7402 	ld	(hl), #0x7f
                                   7403 ;src/main.c:807: spawnPickup(eptr->x, eptr->y);
      002009 F8 09                 7404 	ldhl	sp,#9
      00200B 2A                    7405 	ld	a, (hl+)
      00200C 5F                    7406 	ld	e, a
      00200D 56                    7407 	ld	d, (hl)
      00200E 1A                    7408 	ld	a, (de)
      00200F 4F                    7409 	ld	c, a
      002010 13                    7410 	inc	de
      002011 1A                    7411 	ld	a, (de)
      002012 47                    7412 	ld	b, a
      002013 D1                    7413 	pop	de
      002014 D5                    7414 	push	de
      002015 1A                    7415 	ld	a, (de)
      002016 6F                    7416 	ld	l, a
                                   7417 ;	spillPairReg hl
                                   7418 ;	spillPairReg hl
      002017 13                    7419 	inc	de
      002018 1A                    7420 	ld	a, (de)
      002019 67                    7421 	ld	h, a
                                   7422 ;	spillPairReg hl
                                   7423 ;	spillPairReg hl
      00201A C5                    7424 	push	bc
      00201B E5                    7425 	push	hl
      00201C CDr56r1C              7426 	call	_spawnPickup
      00201F E8 04                 7427 	add	sp, #4
                                   7428 ;src/main.c:809: eptr->alive = 0;
      002021 D1                    7429 	pop	de
      002022 D5                    7430 	push	de
      002023 21 09 00              7431 	ld	hl, #0x0009
      002026 19                    7432 	add	hl, de
      002027 4D                    7433 	ld	c, l
      002028 44                    7434 	ld	b, h
      002029 AF                    7435 	xor	a, a
      00202A 02                    7436 	ld	(bc), a
                                   7437 ;src/main.c:810: eptr->visible = 0;
      00202B D1                    7438 	pop	de
      00202C D5                    7439 	push	de
      00202D 21 0A 00              7440 	ld	hl, #0x000a
      002030 19                    7441 	add	hl, de
      002031 4D                    7442 	ld	c, l
      002032 44                    7443 	ld	b, h
      002033 AF                    7444 	xor	a, a
      002034 02                    7445 	ld	(bc), a
                                   7446 ;src/main.c:811: initEnemies(0);
      002035 AF                    7447 	xor	a, a
      002036 F5                    7448 	push	af
      002037 33                    7449 	inc	sp
      002038 CDr04r0D              7450 	call	_initEnemies
      00203B 33                    7451 	inc	sp
                                   7452 ;src/main.c:812: playSound(0);
      00203C AF                    7453 	xor	a, a
      00203D F5                    7454 	push	af
      00203E 33                    7455 	inc	sp
      00203F CDrA1r0C              7456 	call	_playSound
      002042 33                    7457 	inc	sp
                                   7458 ;src/main.c:813: incrementScore();
      002043 CDr5Er0A              7459 	call	_incrementScore
                                   7460 ;src/main.c:814: updateScore();
      002046 CDrAFr09              7461 	call	_updateScore
      002049                       7462 00124$:
                                   7463 ;src/main.c:825: j++;
      002049 F8 10                 7464 	ldhl	sp,	#16
      00204B 34                    7465 	inc	(hl)
                                   7466 ;src/main.c:826: pptr++;
      00204C 2B                    7467 	dec	hl
      00204D 2B                    7468 	dec	hl
      00204E 2A                    7469 	ld	a, (hl+)
      00204F 5F                    7470 	ld	e, a
      002050 56                    7471 	ld	d, (hl)
      002051 21 0C 00              7472 	ld	hl, #0x000c
      002054 19                    7473 	add	hl, de
      002055 E5                    7474 	push	hl
      002056 7D                    7475 	ld	a, l
      002057 F8 10                 7476 	ldhl	sp,	#16
      002059 77                    7477 	ld	(hl), a
      00205A E1                    7478 	pop	hl
      00205B 7C                    7479 	ld	a, h
      00205C F8 0F                 7480 	ldhl	sp,	#15
      00205E 77                    7481 	ld	(hl), a
      00205F C3r86r1E              7482 	jp	00125$
      002062                       7483 00129$:
                                   7484 ;src/main.c:830: if (enemyCollisionCount == 0) {
      002062 FAr9Dr00              7485 	ld	a, (#_enemyCollisionCount)
      002065 B7                    7486 	or	a, a
      002066 20 09                 7487 	jr	NZ, 00132$
                                   7488 ;src/main.c:831: enemyCollisionCount = ENEMYCOUNT - 1;
      002068 FAr88r08              7489 	ld	a, (#_ENEMYCOUNT)
      00206B 3D                    7490 	dec	a
      00206C EAr9Dr00              7491 	ld	(#_enemyCollisionCount),a
      00206F 18 04                 7492 	jr	00171$
      002071                       7493 00132$:
                                   7494 ;src/main.c:834: enemyCollisionCount--;
      002071 21r9Dr00              7495 	ld	hl, #_enemyCollisionCount
      002074 35                    7496 	dec	(hl)
      002075                       7497 00171$:
                                   7498 ;src/main.c:839: }
      002075 E8 11                 7499 	add	sp, #17
      002077 C9                    7500 	ret
                                   7501 ;src/main.c:842: void setGunIcon() {
                                   7502 ;	---------------------------------
                                   7503 ; Function setGunIcon
                                   7504 ; ---------------------------------
      002078                       7505 _setGunIcon::
                                   7506 ;src/main.c:844: if (currentGun == 0) {
      002078 FAr9Fr00              7507 	ld	a, (#_currentGun)
      00207B B7                    7508 	or	a, a
      00207C 20 1B                 7509 	jr	NZ, 00102$
                                   7510 ;src/main.c:845: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      00207E 01rA6r00              7511 	ld	bc, #_gunMap+0
      002081 79                    7512 	ld	a, c
      002082 21r9Er00              7513 	ld	hl, #_gunLevel
      002085 86                    7514 	add	a, (hl)
      002086 4F                    7515 	ld	c, a
      002087 30 01                 7516 	jr	NC, 00111$
      002089 04                    7517 	inc	b
      00208A                       7518 00111$:
      00208A C5                    7519 	push	bc
      00208B 21 01 01              7520 	ld	hl, #0x101
      00208E E5                    7521 	push	hl
      00208F 21 0F 00              7522 	ld	hl, #0x0f
      002092 E5                    7523 	push	hl
      002093 CDr00r00              7524 	call	_set_win_tiles
      002096 E8 06                 7525 	add	sp, #6
      002098 C9                    7526 	ret
      002099                       7527 00102$:
                                   7528 ;src/main.c:848: set_win_tiles(15, 0,1,1,gunMap+2);
      002099 11rA8r00              7529 	ld	de, #(_gunMap + 2)
      00209C D5                    7530 	push	de
      00209D 21 01 01              7531 	ld	hl, #0x101
      0020A0 E5                    7532 	push	hl
      0020A1 21 0F 00              7533 	ld	hl, #0x0f
      0020A4 E5                    7534 	push	hl
      0020A5 CDr00r00              7535 	call	_set_win_tiles
      0020A8 E8 06                 7536 	add	sp, #6
                                   7537 ;src/main.c:850: }
      0020AA C9                    7538 	ret
                                   7539 ;src/main.c:860: void fire() {
                                   7540 ;	---------------------------------
                                   7541 ; Function fire
                                   7542 ; ---------------------------------
      0020AB                       7543 _fire::
      0020AB E8 FB                 7544 	add	sp, #-5
                                   7545 ;src/main.c:862: oldestProjectile += 1;
      0020AD 21r89r00              7546 	ld	hl, #_oldestProjectile
      0020B0 34                    7547 	inc	(hl)
      0020B1 7E                    7548 	ld	a, (hl)
                                   7549 ;src/main.c:863: if (oldestProjectile >= PROJECTILECOUNT) {
      0020B2 21r99r08              7550 	ld	hl, #_PROJECTILECOUNT
      0020B5 4E                    7551 	ld	c, (hl)
      0020B6 21r89r00              7552 	ld	hl, #_oldestProjectile
      0020B9 7E                    7553 	ld	a, (hl)
      0020BA 91                    7554 	sub	a, c
      0020BB 38 02                 7555 	jr	C, 00102$
                                   7556 ;src/main.c:864: oldestProjectile = 0;
      0020BD 36 00                 7557 	ld	(hl), #0x00
      0020BF                       7558 00102$:
                                   7559 ;src/main.c:867: if (currentGun == 0) {
      0020BF FAr9Fr00              7560 	ld	a, (#_currentGun)
      0020C2 B7                    7561 	or	a, a
      0020C3 20 3A                 7562 	jr	NZ, 00107$
                                   7563 ;src/main.c:869: projectiles[oldestProjectile] = singleGun;
      0020C5 21r89r00              7564 	ld	hl, #_oldestProjectile
      0020C8 4E                    7565 	ld	c, (hl)
      0020C9 06 00                 7566 	ld	b, #0x00
      0020CB 69                    7567 	ld	l, c
      0020CC 60                    7568 	ld	h, b
      0020CD 29                    7569 	add	hl, hl
      0020CE 09                    7570 	add	hl, bc
      0020CF 29                    7571 	add	hl, hl
      0020D0 29                    7572 	add	hl, hl
      0020D1 4D                    7573 	ld	c, l
      0020D2 44                    7574 	ld	b, h
                                   7575 ;src/main.c:868: if (gunLevel == 0) {
      0020D3 FAr9Er00              7576 	ld	a, (#_gunLevel)
      0020D6 B7                    7577 	or	a, a
      0020D7 20 14                 7578 	jr	NZ, 00104$
                                   7579 ;src/main.c:869: projectiles[oldestProjectile] = singleGun;
      0020D9 11r65r00              7580 	ld	de, #_singleGun+0
      0020DC 21rAAr00              7581 	ld	hl, #_projectiles
      0020DF 09                    7582 	add	hl, bc
      0020E0 01 0C 00              7583 	ld	bc, #0x000c
      0020E3 C5                    7584 	push	bc
      0020E4 D5                    7585 	push	de
      0020E5 E5                    7586 	push	hl
      0020E6 CDr00r00              7587 	call	___memcpy
      0020E9 E8 06                 7588 	add	sp, #6
      0020EB 18 12                 7589 	jr	00107$
      0020ED                       7590 00104$:
                                   7591 ;src/main.c:872: projectiles[oldestProjectile] = doubleGun;
      0020ED 11r71r00              7592 	ld	de, #_doubleGun+0
      0020F0 21rAAr00              7593 	ld	hl, #_projectiles
      0020F3 09                    7594 	add	hl, bc
      0020F4 01 0C 00              7595 	ld	bc, #0x000c
      0020F7 C5                    7596 	push	bc
      0020F8 D5                    7597 	push	de
      0020F9 E5                    7598 	push	hl
      0020FA CDr00r00              7599 	call	___memcpy
      0020FD E8 06                 7600 	add	sp, #6
      0020FF                       7601 00107$:
                                   7602 ;src/main.c:875: if (currentGun == 1) {
      0020FF FAr9Fr00              7603 	ld	a, (#_currentGun)
      002102 3D                    7604 	dec	a
      002103 20 45                 7605 	jr	NZ, 00113$
                                   7606 ;src/main.c:876: if (missiles == 0) {
      002105 FArA0r00              7607 	ld	a, (#_missiles)
      002108 B7                    7608 	or	a, a
      002109 20 0B                 7609 	jr	NZ, 00109$
                                   7610 ;src/main.c:877: currentGun = 0;
      00210B 21r9Fr00              7611 	ld	hl, #_currentGun
      00210E 36 00                 7612 	ld	(hl), #0x00
                                   7613 ;src/main.c:878: setGunIcon();
      002110 CDr78r20              7614 	call	_setGunIcon
                                   7615 ;src/main.c:879: return;
      002113 C3r41r26              7616 	jp	00154$
      002116                       7617 00109$:
                                   7618 ;src/main.c:882: projectiles[oldestProjectile] = missile;
      002116 21r89r00              7619 	ld	hl, #_oldestProjectile
      002119 4E                    7620 	ld	c, (hl)
      00211A 06 00                 7621 	ld	b, #0x00
      00211C 69                    7622 	ld	l, c
      00211D 60                    7623 	ld	h, b
      00211E 29                    7624 	add	hl, hl
      00211F 09                    7625 	add	hl, bc
      002120 29                    7626 	add	hl, hl
      002121 29                    7627 	add	hl, hl
      002122 01rAAr00              7628 	ld	bc,#_projectiles
      002125 09                    7629 	add	hl,bc
      002126 11 0C 00              7630 	ld	de, #0x000c
      002129 D5                    7631 	push	de
      00212A 11r7Dr00              7632 	ld	de, #_missile
      00212D D5                    7633 	push	de
      00212E E5                    7634 	push	hl
      00212F CDr00r00              7635 	call	___memcpy
      002132 E8 06                 7636 	add	sp, #6
                                   7637 ;src/main.c:883: updateMissileCount(-1);
      002134 3E FF                 7638 	ld	a, #0xff
      002136 F5                    7639 	push	af
      002137 33                    7640 	inc	sp
      002138 CDrD9r09              7641 	call	_updateMissileCount
      00213B 33                    7642 	inc	sp
                                   7643 ;src/main.c:885: if (missiles == 0) {
      00213C FArA0r00              7644 	ld	a, (#_missiles)
      00213F B7                    7645 	or	a, a
      002140 20 08                 7646 	jr	NZ, 00113$
                                   7647 ;src/main.c:886: currentGun = 0;
      002142 21r9Fr00              7648 	ld	hl, #_currentGun
      002145 36 00                 7649 	ld	(hl), #0x00
                                   7650 ;src/main.c:887: setGunIcon();
      002147 CDr78r20              7651 	call	_setGunIcon
      00214A                       7652 00113$:
                                   7653 ;src/main.c:890: projectiles[oldestProjectile].x = playerDrawX;
      00214A 21r89r00              7654 	ld	hl, #_oldestProjectile
      00214D 4E                    7655 	ld	c, (hl)
      00214E 06 00                 7656 	ld	b, #0x00
      002150 69                    7657 	ld	l, c
      002151 60                    7658 	ld	h, b
      002152 29                    7659 	add	hl, hl
      002153 09                    7660 	add	hl, bc
      002154 29                    7661 	add	hl, hl
      002155 29                    7662 	add	hl, hl
      002156 01rAAr00              7663 	ld	bc,#_projectiles
      002159 09                    7664 	add	hl,bc
      00215A E5                    7665 	push	hl
      00215B FAr93r00              7666 	ld	a, (#_playerDrawX)
      00215E E1                    7667 	pop	hl
      00215F 0E 00                 7668 	ld	c, #0x00
      002161 22                    7669 	ld	(hl+), a
      002162 71                    7670 	ld	(hl), c
                                   7671 ;src/main.c:891: projectiles[oldestProjectile].y = playerDrawY;
      002163 21r89r00              7672 	ld	hl, #_oldestProjectile
      002166 4E                    7673 	ld	c, (hl)
      002167 06 00                 7674 	ld	b, #0x00
      002169 69                    7675 	ld	l, c
      00216A 60                    7676 	ld	h, b
      00216B 29                    7677 	add	hl, hl
      00216C 09                    7678 	add	hl, bc
      00216D 29                    7679 	add	hl, hl
      00216E 29                    7680 	add	hl, hl
      00216F 01rAAr00              7681 	ld	bc,#_projectiles
      002172 09                    7682 	add	hl,bc
      002173 23                    7683 	inc	hl
      002174 23                    7684 	inc	hl
      002175 E5                    7685 	push	hl
      002176 FAr94r00              7686 	ld	a, (#_playerDrawY)
      002179 E1                    7687 	pop	hl
      00217A 0E 00                 7688 	ld	c, #0x00
      00217C 22                    7689 	ld	(hl+), a
      00217D 71                    7690 	ld	(hl), c
                                   7691 ;src/main.c:892: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      00217E 21r89r00              7692 	ld	hl, #_oldestProjectile
      002181 4E                    7693 	ld	c, (hl)
      002182 06 00                 7694 	ld	b, #0x00
      002184 69                    7695 	ld	l, c
      002185 60                    7696 	ld	h, b
      002186 29                    7697 	add	hl, hl
      002187 09                    7698 	add	hl, bc
      002188 29                    7699 	add	hl, hl
      002189 29                    7700 	add	hl, hl
      00218A 01rAAr00              7701 	ld	bc,#_projectiles
      00218D 09                    7702 	add	hl,bc
      00218E 5D                    7703 	ld	e, l
      00218F 54                    7704 	ld	d, h
      002190 21 05 00              7705 	ld	hl, #0x0005
      002193 19                    7706 	add	hl, de
      002194 4D                    7707 	ld	c, l
      002195 44                    7708 	ld	b, h
      002196 21 07 00              7709 	ld	hl, #0x0007
      002199 19                    7710 	add	hl, de
      00219A 7E                    7711 	ld	a, (hl)
      00219B C5                    7712 	push	bc
      00219C F5                    7713 	push	af
      00219D 33                    7714 	inc	sp
      00219E FAr8Br00              7715 	ld	a, (#_xDir)
      0021A1 F5                    7716 	push	af
      0021A2 33                    7717 	inc	sp
      0021A3 CDr00r00              7718 	call	__muluschar
      0021A6 E1                    7719 	pop	hl
      0021A7 7B                    7720 	ld	a, e
      0021A8 C1                    7721 	pop	bc
      0021A9 02                    7722 	ld	(bc), a
                                   7723 ;src/main.c:893: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      0021AA 21r89r00              7724 	ld	hl, #_oldestProjectile
      0021AD 4E                    7725 	ld	c, (hl)
      0021AE 06 00                 7726 	ld	b, #0x00
      0021B0 69                    7727 	ld	l, c
      0021B1 60                    7728 	ld	h, b
      0021B2 29                    7729 	add	hl, hl
      0021B3 09                    7730 	add	hl, bc
      0021B4 29                    7731 	add	hl, hl
      0021B5 29                    7732 	add	hl, hl
      0021B6 01rAAr00              7733 	ld	bc,#_projectiles
      0021B9 09                    7734 	add	hl,bc
      0021BA 5D                    7735 	ld	e, l
      0021BB 54                    7736 	ld	d, h
      0021BC 21 06 00              7737 	ld	hl, #0x0006
      0021BF 19                    7738 	add	hl, de
      0021C0 4D                    7739 	ld	c, l
      0021C1 44                    7740 	ld	b, h
      0021C2 21 07 00              7741 	ld	hl, #0x0007
      0021C5 19                    7742 	add	hl, de
      0021C6 7E                    7743 	ld	a, (hl)
      0021C7 C5                    7744 	push	bc
      0021C8 F5                    7745 	push	af
      0021C9 33                    7746 	inc	sp
      0021CA FAr8Cr00              7747 	ld	a, (#_yDir)
      0021CD F5                    7748 	push	af
      0021CE 33                    7749 	inc	sp
      0021CF CDr00r00              7750 	call	__muluschar
      0021D2 E1                    7751 	pop	hl
      0021D3 7B                    7752 	ld	a, e
      0021D4 C1                    7753 	pop	bc
      0021D5 02                    7754 	ld	(bc), a
                                   7755 ;src/main.c:862: oldestProjectile += 1;
      0021D6 FAr89r00              7756 	ld	a, (#_oldestProjectile)
      0021D9 F8 04                 7757 	ldhl	sp,	#4
      0021DB 77                    7758 	ld	(hl), a
                                   7759 ;src/main.c:869: projectiles[oldestProjectile] = singleGun;
      0021DC 21r89r00              7760 	ld	hl, #_oldestProjectile
      0021DF 4E                    7761 	ld	c, (hl)
      0021E0 06 00                 7762 	ld	b, #0x00
      0021E2 69                    7763 	ld	l, c
      0021E3 60                    7764 	ld	h, b
      0021E4 29                    7765 	add	hl, hl
      0021E5 09                    7766 	add	hl, bc
      0021E6 29                    7767 	add	hl, hl
      0021E7 29                    7768 	add	hl, hl
                                   7769 ;src/main.c:898: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0021E8 01rAAr00              7770 	ld	bc,#_projectiles
      0021EB 09                    7771 	add	hl,bc
      0021EC 4D                    7772 	ld	c, l
      0021ED 44                    7773 	ld	b, h
      0021EE F8 04                 7774 	ldhl	sp,	#4
      0021F0 3A                    7775 	ld	a, (hl-)
      0021F1 C6 1E                 7776 	add	a, #0x1e
      0021F3 77                    7777 	ld	(hl), a
      0021F4 21 0B 00              7778 	ld	hl, #0x000b
      0021F7 09                    7779 	add	hl, bc
      0021F8 7E                    7780 	ld	a, (hl)
      0021F9 F8 04                 7781 	ldhl	sp,	#4
      0021FB 77                    7782 	ld	(hl), a
                                   7783 ;src/main.c:897: if (yDir != 0 && xDir == 0) {
      0021FC FAr8Cr00              7784 	ld	a, (#_yDir)
      0021FF B7                    7785 	or	a, a
      002200 28 6F                 7786 	jr	Z, 00140$
      002202 FAr8Br00              7787 	ld	a, (#_xDir)
      002205 B7                    7788 	or	a, a
      002206 20 69                 7789 	jr	NZ, 00140$
                                   7790 ;src/main.c:898: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002208 F8 04                 7791 	ldhl	sp,	#4
      00220A 3A                    7792 	ld	a, (hl-)
      00220B 4F                    7793 	ld	c, a
                                   7794 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00220C 6E                    7795 	ld	l, (hl)
                                   7796 ;	spillPairReg hl
                                   7797 ;	spillPairReg hl
      00220D 26 00                 7798 	ld	h, #0x00
                                   7799 ;	spillPairReg hl
                                   7800 ;	spillPairReg hl
      00220F 29                    7801 	add	hl, hl
      002210 29                    7802 	add	hl, hl
      002211 11r00r00              7803 	ld	de, #_shadow_OAM
      002214 19                    7804 	add	hl, de
      002215 23                    7805 	inc	hl
      002216 23                    7806 	inc	hl
      002217 71                    7807 	ld	(hl), c
                                   7808 ;src/main.c:862: oldestProjectile += 1;
      002218 FAr89r00              7809 	ld	a, (#_oldestProjectile)
                                   7810 ;src/main.c:898: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00221B C6 1E                 7811 	add	a, #0x1e
      00221D 4F                    7812 	ld	c, a
                                   7813 ;src/main.c:899: if (yDir == 1) {
      00221E FAr8Cr00              7814 	ld	a, (#_yDir)
                                   7815 ;src/main.c:900: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   7816 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002221 3D                    7817 	dec	a
      002222 20 26                 7818 	jr	NZ, 00115$
      002224 67                    7819 	ld	h,a
                                   7820 ;	spillPairReg hl
                                   7821 ;	spillPairReg hl
      002225 69                    7822 	ld	l, c
      002226 29                    7823 	add	hl, hl
      002227 29                    7824 	add	hl, hl
      002228 11r00r00              7825 	ld	de, #_shadow_OAM
      00222B 19                    7826 	add	hl, de
      00222C 23                    7827 	inc	hl
      00222D 23                    7828 	inc	hl
      00222E 23                    7829 	inc	hl
      00222F 36 40                 7830 	ld	(hl), #0x40
                                   7831 ;src/main.c:901: projectiles[oldestProjectile].offset = 4;
      002231 21r89r00              7832 	ld	hl, #_oldestProjectile
      002234 4E                    7833 	ld	c, (hl)
      002235 06 00                 7834 	ld	b, #0x00
      002237 69                    7835 	ld	l, c
      002238 60                    7836 	ld	h, b
      002239 29                    7837 	add	hl, hl
      00223A 09                    7838 	add	hl, bc
      00223B 29                    7839 	add	hl, hl
      00223C 29                    7840 	add	hl, hl
      00223D 01rAAr00              7841 	ld	bc,#_projectiles
      002240 09                    7842 	add	hl,bc
      002241 01 04 00              7843 	ld	bc, #0x0004
      002244 09                    7844 	add	hl, bc
      002245 36 04                 7845 	ld	(hl), #0x04
      002247 C3r1Cr26              7846 	jp	00141$
      00224A                       7847 00115$:
                                   7848 ;src/main.c:904: set_sprite_prop(30+oldestProjectile, 0); 
                                   7849 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00224A 26 00                 7850 	ld	h, #0x00
                                   7851 ;	spillPairReg hl
                                   7852 ;	spillPairReg hl
      00224C 69                    7853 	ld	l, c
      00224D 29                    7854 	add	hl, hl
      00224E 29                    7855 	add	hl, hl
      00224F 11r00r00              7856 	ld	de, #_shadow_OAM
      002252 19                    7857 	add	hl, de
      002253 23                    7858 	inc	hl
      002254 23                    7859 	inc	hl
      002255 23                    7860 	inc	hl
      002256 36 00                 7861 	ld	(hl), #0x00
                                   7862 ;src/main.c:905: projectiles[oldestProjectile].offset = 12;
      002258 21r89r00              7863 	ld	hl, #_oldestProjectile
      00225B 4E                    7864 	ld	c, (hl)
      00225C 06 00                 7865 	ld	b, #0x00
      00225E 69                    7866 	ld	l, c
      00225F 60                    7867 	ld	h, b
      002260 29                    7868 	add	hl, hl
      002261 09                    7869 	add	hl, bc
      002262 29                    7870 	add	hl, hl
      002263 29                    7871 	add	hl, hl
      002264 01rAAr00              7872 	ld	bc,#_projectiles
      002267 09                    7873 	add	hl,bc
      002268 01 04 00              7874 	ld	bc, #0x0004
      00226B 09                    7875 	add	hl, bc
      00226C 36 0C                 7876 	ld	(hl), #0x0c
      00226E C3r1Cr26              7877 	jp	00141$
      002271                       7878 00140$:
                                   7879 ;src/main.c:909: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   7880 ;src/main.c:908: else if (xDir != 0 && yDir == 0) {
      002271 FAr8Br00              7881 	ld	a, (#_xDir)
      002274 B7                    7882 	or	a, a
      002275 CArB9r23              7883 	jp	Z, 00136$
      002278 FAr8Cr00              7884 	ld	a, (#_yDir)
      00227B B7                    7885 	or	a, a
      00227C C2rB9r23              7886 	jp	NZ, 00136$
                                   7887 ;src/main.c:909: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      00227F F8 04                 7888 	ldhl	sp,	#4
      002281 34                    7889 	inc	(hl)
      002282 34                    7890 	inc	(hl)
      002283 2B                    7891 	dec	hl
                                   7892 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002284 3A                    7893 	ld	a, (hl-)
      002285 22                    7894 	ld	(hl+), a
      002286 36 00                 7895 	ld	(hl), #0x00
      002288 3E 02                 7896 	ld	a, #0x02
      00228A                       7897 00260$:
      00228A F8 02                 7898 	ldhl	sp,	#2
      00228C CB 26                 7899 	sla	(hl)
      00228E 23                    7900 	inc	hl
      00228F CB 16                 7901 	rl	(hl)
      002291 3D                    7902 	dec	a
      002292 20 F6                 7903 	jr	NZ, 00260$
      002294 2B                    7904 	dec	hl
      002295 2A                    7905 	ld	a, (hl+)
      002296 5F                    7906 	ld	e, a
      002297 56                    7907 	ld	d, (hl)
      002298 21r00r00              7908 	ld	hl, #_shadow_OAM
      00229B 19                    7909 	add	hl, de
      00229C 33                    7910 	inc	sp
      00229D 33                    7911 	inc	sp
      00229E 5D                    7912 	ld	e, l
      00229F 54                    7913 	ld	d, h
      0022A0 D5                    7914 	push	de
      0022A1 21 02 00              7915 	ld	hl, #0x0002
      0022A4 19                    7916 	add	hl, de
      0022A5 E5                    7917 	push	hl
      0022A6 7D                    7918 	ld	a, l
      0022A7 F8 04                 7919 	ldhl	sp,	#4
      0022A9 77                    7920 	ld	(hl), a
      0022AA E1                    7921 	pop	hl
      0022AB 7C                    7922 	ld	a, h
      0022AC F8 03                 7923 	ldhl	sp,	#3
      0022AE 32                    7924 	ld	(hl-), a
      0022AF 2A                    7925 	ld	a, (hl+)
      0022B0 5F                    7926 	ld	e, a
      0022B1 2A                    7927 	ld	a, (hl+)
      0022B2 57                    7928 	ld	d, a
      0022B3 7E                    7929 	ld	a, (hl)
      0022B4 12                    7930 	ld	(de), a
                                   7931 ;src/main.c:862: oldestProjectile += 1;
      0022B5 FAr89r00              7932 	ld	a, (#_oldestProjectile)
      0022B8 F8 04                 7933 	ldhl	sp,	#4
      0022BA 77                    7934 	ld	(hl), a
                                   7935 ;src/main.c:898: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0022BB 7E                    7936 	ld	a, (hl)
      0022BC C6 1E                 7937 	add	a, #0x1e
      0022BE 77                    7938 	ld	(hl), a
                                   7939 ;src/main.c:910: if (xDir == 1) {
      0022BF FAr8Br00              7940 	ld	a, (#_xDir)
      0022C2 3D                    7941 	dec	a
      0022C3 20 7A                 7942 	jr	NZ, 00118$
                                   7943 ;src/main.c:911: set_sprite_prop(30+oldestProjectile, 0);
      0022C5 F8 04                 7944 	ldhl	sp,	#4
                                   7945 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0022C7 3A                    7946 	ld	a, (hl-)
      0022C8 22                    7947 	ld	(hl+), a
      0022C9 36 00                 7948 	ld	(hl), #0x00
      0022CB 3E 02                 7949 	ld	a, #0x02
      0022CD                       7950 00263$:
      0022CD F8 03                 7951 	ldhl	sp,	#3
      0022CF CB 26                 7952 	sla	(hl)
      0022D1 23                    7953 	inc	hl
      0022D2 CB 16                 7954 	rl	(hl)
      0022D4 3D                    7955 	dec	a
      0022D5 20 F6                 7956 	jr	NZ, 00263$
      0022D7 2B                    7957 	dec	hl
      0022D8 2A                    7958 	ld	a, (hl+)
      0022D9 5F                    7959 	ld	e, a
      0022DA 56                    7960 	ld	d, (hl)
      0022DB 21r00r00              7961 	ld	hl, #_shadow_OAM
      0022DE 19                    7962 	add	hl, de
      0022DF E5                    7963 	push	hl
      0022E0 7D                    7964 	ld	a, l
      0022E1 F8 03                 7965 	ldhl	sp,	#3
      0022E3 77                    7966 	ld	(hl), a
      0022E4 E1                    7967 	pop	hl
      0022E5 7C                    7968 	ld	a, h
      0022E6 F8 02                 7969 	ldhl	sp,	#2
      0022E8 32                    7970 	ld	(hl-), a
      0022E9 2A                    7971 	ld	a, (hl+)
      0022EA 5F                    7972 	ld	e, a
      0022EB 56                    7973 	ld	d, (hl)
      0022EC 21 03 00              7974 	ld	hl, #0x0003
      0022EF 19                    7975 	add	hl, de
      0022F0 E5                    7976 	push	hl
      0022F1 7D                    7977 	ld	a, l
      0022F2 F8 05                 7978 	ldhl	sp,	#5
      0022F4 77                    7979 	ld	(hl), a
      0022F5 E1                    7980 	pop	hl
      0022F6 7C                    7981 	ld	a, h
      0022F7 F8 04                 7982 	ldhl	sp,	#4
      0022F9 32                    7983 	ld	(hl-), a
      0022FA 2A                    7984 	ld	a,	(hl+)
      0022FB 66                    7985 	ld	h, (hl)
      0022FC 6F                    7986 	ld	l, a
      0022FD 36 00                 7987 	ld	(hl), #0x00
                                   7988 ;src/main.c:912: projectiles[oldestProjectile].offset = 12;
      0022FF 21r89r00              7989 	ld	hl, #_oldestProjectile
      002302 4E                    7990 	ld	c, (hl)
      002303 06 00                 7991 	ld	b, #0x00
      002305 69                    7992 	ld	l, c
      002306 60                    7993 	ld	h, b
      002307 29                    7994 	add	hl, hl
      002308 09                    7995 	add	hl, bc
      002309 29                    7996 	add	hl, hl
      00230A 29                    7997 	add	hl, hl
      00230B E5                    7998 	push	hl
      00230C 7D                    7999 	ld	a, l
      00230D F8 05                 8000 	ldhl	sp,	#5
      00230F 77                    8001 	ld	(hl), a
      002310 E1                    8002 	pop	hl
      002311 7C                    8003 	ld	a, h
      002312 F8 04                 8004 	ldhl	sp,	#4
      002314 32                    8005 	ld	(hl-), a
      002315 2A                    8006 	ld	a, (hl+)
      002316 5F                    8007 	ld	e, a
      002317 56                    8008 	ld	d, (hl)
      002318 21rAAr00              8009 	ld	hl, #_projectiles
      00231B 19                    8010 	add	hl, de
      00231C E5                    8011 	push	hl
      00231D 7D                    8012 	ld	a, l
      00231E F8 03                 8013 	ldhl	sp,	#3
      002320 77                    8014 	ld	(hl), a
      002321 E1                    8015 	pop	hl
      002322 7C                    8016 	ld	a, h
      002323 F8 02                 8017 	ldhl	sp,	#2
      002325 32                    8018 	ld	(hl-), a
      002326 2A                    8019 	ld	a, (hl+)
      002327 5F                    8020 	ld	e, a
      002328 56                    8021 	ld	d, (hl)
      002329 21 04 00              8022 	ld	hl, #0x0004
      00232C 19                    8023 	add	hl, de
      00232D E5                    8024 	push	hl
      00232E 7D                    8025 	ld	a, l
      00232F F8 05                 8026 	ldhl	sp,	#5
      002331 77                    8027 	ld	(hl), a
      002332 E1                    8028 	pop	hl
      002333 7C                    8029 	ld	a, h
      002334 F8 04                 8030 	ldhl	sp,	#4
      002336 32                    8031 	ld	(hl-), a
      002337 2A                    8032 	ld	a,	(hl+)
      002338 66                    8033 	ld	h, (hl)
      002339 6F                    8034 	ld	l, a
      00233A 36 0C                 8035 	ld	(hl), #0x0c
      00233C C3r1Cr26              8036 	jp	00141$
      00233F                       8037 00118$:
                                   8038 ;src/main.c:915: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      00233F F8 04                 8039 	ldhl	sp,	#4
                                   8040 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002341 3A                    8041 	ld	a, (hl-)
      002342 22                    8042 	ld	(hl+), a
      002343 36 00                 8043 	ld	(hl), #0x00
      002345 3E 02                 8044 	ld	a, #0x02
      002347                       8045 00264$:
      002347 F8 03                 8046 	ldhl	sp,	#3
      002349 CB 26                 8047 	sla	(hl)
      00234B 23                    8048 	inc	hl
      00234C CB 16                 8049 	rl	(hl)
      00234E 3D                    8050 	dec	a
      00234F 20 F6                 8051 	jr	NZ, 00264$
      002351 2B                    8052 	dec	hl
      002352 2A                    8053 	ld	a, (hl+)
      002353 5F                    8054 	ld	e, a
      002354 56                    8055 	ld	d, (hl)
      002355 21r00r00              8056 	ld	hl, #_shadow_OAM
      002358 19                    8057 	add	hl, de
      002359 E5                    8058 	push	hl
      00235A 7D                    8059 	ld	a, l
      00235B F8 03                 8060 	ldhl	sp,	#3
      00235D 77                    8061 	ld	(hl), a
      00235E E1                    8062 	pop	hl
      00235F 7C                    8063 	ld	a, h
      002360 F8 02                 8064 	ldhl	sp,	#2
      002362 32                    8065 	ld	(hl-), a
      002363 2A                    8066 	ld	a, (hl+)
      002364 5F                    8067 	ld	e, a
      002365 56                    8068 	ld	d, (hl)
      002366 21 03 00              8069 	ld	hl, #0x0003
      002369 19                    8070 	add	hl, de
      00236A E5                    8071 	push	hl
      00236B 7D                    8072 	ld	a, l
      00236C F8 05                 8073 	ldhl	sp,	#5
      00236E 77                    8074 	ld	(hl), a
      00236F E1                    8075 	pop	hl
      002370 7C                    8076 	ld	a, h
      002371 F8 04                 8077 	ldhl	sp,	#4
      002373 32                    8078 	ld	(hl-), a
      002374 2A                    8079 	ld	a,	(hl+)
      002375 66                    8080 	ld	h, (hl)
      002376 6F                    8081 	ld	l, a
      002377 36 20                 8082 	ld	(hl), #0x20
                                   8083 ;src/main.c:916: projectiles[oldestProjectile].offset = 12;
      002379 21r89r00              8084 	ld	hl, #_oldestProjectile
      00237C 4E                    8085 	ld	c, (hl)
      00237D 06 00                 8086 	ld	b, #0x00
      00237F 69                    8087 	ld	l, c
      002380 60                    8088 	ld	h, b
      002381 29                    8089 	add	hl, hl
      002382 09                    8090 	add	hl, bc
      002383 29                    8091 	add	hl, hl
      002384 29                    8092 	add	hl, hl
      002385 E5                    8093 	push	hl
      002386 7D                    8094 	ld	a, l
      002387 F8 05                 8095 	ldhl	sp,	#5
      002389 77                    8096 	ld	(hl), a
      00238A E1                    8097 	pop	hl
      00238B 7C                    8098 	ld	a, h
      00238C F8 04                 8099 	ldhl	sp,	#4
      00238E 32                    8100 	ld	(hl-), a
      00238F 2A                    8101 	ld	a, (hl+)
      002390 5F                    8102 	ld	e, a
      002391 56                    8103 	ld	d, (hl)
      002392 21rAAr00              8104 	ld	hl, #_projectiles
      002395 19                    8105 	add	hl, de
      002396 E5                    8106 	push	hl
      002397 7D                    8107 	ld	a, l
      002398 F8 03                 8108 	ldhl	sp,	#3
      00239A 77                    8109 	ld	(hl), a
      00239B E1                    8110 	pop	hl
      00239C 7C                    8111 	ld	a, h
      00239D F8 02                 8112 	ldhl	sp,	#2
      00239F 32                    8113 	ld	(hl-), a
      0023A0 2A                    8114 	ld	a, (hl+)
      0023A1 5F                    8115 	ld	e, a
      0023A2 56                    8116 	ld	d, (hl)
      0023A3 21 04 00              8117 	ld	hl, #0x0004
      0023A6 19                    8118 	add	hl, de
      0023A7 E5                    8119 	push	hl
      0023A8 7D                    8120 	ld	a, l
      0023A9 F8 05                 8121 	ldhl	sp,	#5
      0023AB 77                    8122 	ld	(hl), a
      0023AC E1                    8123 	pop	hl
      0023AD 7C                    8124 	ld	a, h
      0023AE F8 04                 8125 	ldhl	sp,	#4
      0023B0 32                    8126 	ld	(hl-), a
      0023B1 2A                    8127 	ld	a,	(hl+)
      0023B2 66                    8128 	ld	h, (hl)
      0023B3 6F                    8129 	ld	l, a
      0023B4 36 0C                 8130 	ld	(hl), #0x0c
      0023B6 C3r1Cr26              8131 	jp	00141$
      0023B9                       8132 00136$:
                                   8133 ;src/main.c:920: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      0023B9 F8 04                 8134 	ldhl	sp,	#4
      0023BB 7E                    8135 	ld	a, (hl)
      0023BC C6 04                 8136 	add	a, #0x04
      0023BE F8 00                 8137 	ldhl	sp,	#0
      0023C0 77                    8138 	ld	(hl), a
      0023C1 F8 03                 8139 	ldhl	sp,	#3
                                   8140 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0023C3 7E                    8141 	ld	a, (hl)
      0023C4 22                    8142 	ld	(hl+), a
      0023C5 36 00                 8143 	ld	(hl), #0x00
      0023C7 3E 02                 8144 	ld	a, #0x02
      0023C9                       8145 00265$:
      0023C9 F8 03                 8146 	ldhl	sp,	#3
      0023CB CB 26                 8147 	sla	(hl)
      0023CD 23                    8148 	inc	hl
      0023CE CB 16                 8149 	rl	(hl)
      0023D0 3D                    8150 	dec	a
      0023D1 20 F6                 8151 	jr	NZ, 00265$
      0023D3 2B                    8152 	dec	hl
      0023D4 2A                    8153 	ld	a, (hl+)
      0023D5 5F                    8154 	ld	e, a
      0023D6 56                    8155 	ld	d, (hl)
      0023D7 21r00r00              8156 	ld	hl, #_shadow_OAM
      0023DA 19                    8157 	add	hl, de
      0023DB E5                    8158 	push	hl
      0023DC 7D                    8159 	ld	a, l
      0023DD F8 03                 8160 	ldhl	sp,	#3
      0023DF 77                    8161 	ld	(hl), a
      0023E0 E1                    8162 	pop	hl
      0023E1 7C                    8163 	ld	a, h
      0023E2 F8 02                 8164 	ldhl	sp,	#2
      0023E4 32                    8165 	ld	(hl-), a
      0023E5 2A                    8166 	ld	a, (hl+)
      0023E6 5F                    8167 	ld	e, a
      0023E7 56                    8168 	ld	d, (hl)
      0023E8 21 02 00              8169 	ld	hl, #0x0002
      0023EB 19                    8170 	add	hl, de
      0023EC E5                    8171 	push	hl
      0023ED 7D                    8172 	ld	a, l
      0023EE F8 05                 8173 	ldhl	sp,	#5
      0023F0 77                    8174 	ld	(hl), a
      0023F1 E1                    8175 	pop	hl
      0023F2 7C                    8176 	ld	a, h
      0023F3 F8 04                 8177 	ldhl	sp,	#4
      0023F5 32                    8178 	ld	(hl-), a
      0023F6 2A                    8179 	ld	a, (hl+)
      0023F7 5F                    8180 	ld	e, a
      0023F8 56                    8181 	ld	d, (hl)
      0023F9 F8 00                 8182 	ldhl	sp,	#0
      0023FB 7E                    8183 	ld	a, (hl)
      0023FC 12                    8184 	ld	(de), a
                                   8185 ;src/main.c:921: if (xDir == 1 && yDir == -1) {
      0023FD FAr8Br00              8186 	ld	a, (#_xDir)
      002400 3D                    8187 	dec	a
      002401 3E 01                 8188 	ld	a, #0x01
      002403 28 01                 8189 	jr	Z, 00267$
      002405 AF                    8190 	xor	a, a
      002406                       8191 00267$:
      002406 F8 04                 8192 	ldhl	sp,	#4
      002408 77                    8193 	ld	(hl), a
                                   8194 ;src/main.c:862: oldestProjectile += 1;
      002409 21r89r00              8195 	ld	hl, #_oldestProjectile
      00240C 4E                    8196 	ld	c, (hl)
                                   8197 ;src/main.c:921: if (xDir == 1 && yDir == -1) {
      00240D FAr8Cr00              8198 	ld	a, (#_yDir)
      002410 3C                    8199 	inc	a
      002411 3E 01                 8200 	ld	a, #0x01
      002413 28 01                 8201 	jr	Z, 00269$
      002415 AF                    8202 	xor	a, a
      002416                       8203 00269$:
      002416 F8 01                 8204 	ldhl	sp,	#1
                                   8205 ;src/main.c:898: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002418 22                    8206 	ld	(hl+), a
      002419 79                    8207 	ld	a, c
      00241A C6 1E                 8208 	add	a, #0x1e
                                   8209 ;src/main.c:921: if (xDir == 1 && yDir == -1) {
      00241C 22                    8210 	ld	(hl+), a
      00241D 23                    8211 	inc	hl
      00241E 7E                    8212 	ld	a, (hl)
      00241F B7                    8213 	or	a, a
      002420 CArA2r24              8214 	jp	Z, 00132$
      002423 F8 01                 8215 	ldhl	sp,	#1
      002425 7E                    8216 	ld	a, (hl)
      002426 B7                    8217 	or	a, a
      002427 28 79                 8218 	jr	Z, 00132$
                                   8219 ;src/main.c:922: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002429 23                    8220 	inc	hl
                                   8221 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00242A 2A                    8222 	ld	a, (hl+)
      00242B 22                    8223 	ld	(hl+), a
      00242C 36 00                 8224 	ld	(hl), #0x00
      00242E 3E 02                 8225 	ld	a, #0x02
      002430                       8226 00270$:
      002430 F8 03                 8227 	ldhl	sp,	#3
      002432 CB 26                 8228 	sla	(hl)
      002434 23                    8229 	inc	hl
      002435 CB 16                 8230 	rl	(hl)
      002437 3D                    8231 	dec	a
      002438 20 F6                 8232 	jr	NZ, 00270$
      00243A 2B                    8233 	dec	hl
      00243B 2A                    8234 	ld	a, (hl+)
      00243C 5F                    8235 	ld	e, a
      00243D 56                    8236 	ld	d, (hl)
      00243E 21r00r00              8237 	ld	hl, #_shadow_OAM
      002441 19                    8238 	add	hl, de
      002442 E5                    8239 	push	hl
      002443 7D                    8240 	ld	a, l
      002444 F8 03                 8241 	ldhl	sp,	#3
      002446 77                    8242 	ld	(hl), a
      002447 E1                    8243 	pop	hl
      002448 7C                    8244 	ld	a, h
      002449 F8 02                 8245 	ldhl	sp,	#2
      00244B 32                    8246 	ld	(hl-), a
      00244C 2A                    8247 	ld	a, (hl+)
      00244D 5F                    8248 	ld	e, a
      00244E 56                    8249 	ld	d, (hl)
      00244F 21 03 00              8250 	ld	hl, #0x0003
      002452 19                    8251 	add	hl, de
      002453 E5                    8252 	push	hl
      002454 7D                    8253 	ld	a, l
      002455 F8 05                 8254 	ldhl	sp,	#5
      002457 77                    8255 	ld	(hl), a
      002458 E1                    8256 	pop	hl
      002459 7C                    8257 	ld	a, h
      00245A F8 04                 8258 	ldhl	sp,	#4
      00245C 32                    8259 	ld	(hl-), a
      00245D 2A                    8260 	ld	a,	(hl+)
      00245E 66                    8261 	ld	h, (hl)
      00245F 6F                    8262 	ld	l, a
      002460 36 00                 8263 	ld	(hl), #0x00
                                   8264 ;src/main.c:923: projectiles[oldestProjectile].offset = 12;
      002462 21r89r00              8265 	ld	hl, #_oldestProjectile
      002465 4E                    8266 	ld	c, (hl)
      002466 06 00                 8267 	ld	b, #0x00
      002468 69                    8268 	ld	l, c
      002469 60                    8269 	ld	h, b
      00246A 29                    8270 	add	hl, hl
      00246B 09                    8271 	add	hl, bc
      00246C 29                    8272 	add	hl, hl
      00246D 29                    8273 	add	hl, hl
      00246E E5                    8274 	push	hl
      00246F 7D                    8275 	ld	a, l
      002470 F8 05                 8276 	ldhl	sp,	#5
      002472 77                    8277 	ld	(hl), a
      002473 E1                    8278 	pop	hl
      002474 7C                    8279 	ld	a, h
      002475 F8 04                 8280 	ldhl	sp,	#4
      002477 32                    8281 	ld	(hl-), a
      002478 2A                    8282 	ld	a, (hl+)
      002479 5F                    8283 	ld	e, a
      00247A 56                    8284 	ld	d, (hl)
      00247B 21rAAr00              8285 	ld	hl, #_projectiles
      00247E 19                    8286 	add	hl, de
      00247F E5                    8287 	push	hl
      002480 7D                    8288 	ld	a, l
      002481 F8 03                 8289 	ldhl	sp,	#3
      002483 77                    8290 	ld	(hl), a
      002484 E1                    8291 	pop	hl
      002485 7C                    8292 	ld	a, h
      002486 F8 02                 8293 	ldhl	sp,	#2
      002488 32                    8294 	ld	(hl-), a
      002489 2A                    8295 	ld	a, (hl+)
      00248A 5F                    8296 	ld	e, a
      00248B 56                    8297 	ld	d, (hl)
      00248C 21 04 00              8298 	ld	hl, #0x0004
      00248F 19                    8299 	add	hl, de
      002490 E5                    8300 	push	hl
      002491 7D                    8301 	ld	a, l
      002492 F8 05                 8302 	ldhl	sp,	#5
      002494 77                    8303 	ld	(hl), a
      002495 E1                    8304 	pop	hl
      002496 7C                    8305 	ld	a, h
      002497 F8 04                 8306 	ldhl	sp,	#4
      002499 32                    8307 	ld	(hl-), a
      00249A 2A                    8308 	ld	a,	(hl+)
      00249B 66                    8309 	ld	h, (hl)
      00249C 6F                    8310 	ld	l, a
      00249D 36 0C                 8311 	ld	(hl), #0x0c
      00249F C3r1Cr26              8312 	jp	00141$
      0024A2                       8313 00132$:
                                   8314 ;src/main.c:899: if (yDir == 1) {
      0024A2 FAr8Cr00              8315 	ld	a, (#_yDir)
      0024A5 3D                    8316 	dec	a
      0024A6 3E 01                 8317 	ld	a, #0x01
      0024A8 28 01                 8318 	jr	Z, 00272$
      0024AA AF                    8319 	xor	a, a
      0024AB                       8320 00272$:
      0024AB F8 03                 8321 	ldhl	sp,	#3
                                   8322 ;src/main.c:925: else if (xDir == 1 && yDir == 1) {
      0024AD 22                    8323 	ld	(hl+), a
      0024AE 7E                    8324 	ld	a, (hl)
      0024AF B7                    8325 	or	a, a
      0024B0 CAr31r25              8326 	jp	Z, 00128$
      0024B3 2B                    8327 	dec	hl
      0024B4 7E                    8328 	ld	a, (hl)
      0024B5 B7                    8329 	or	a, a
      0024B6 28 79                 8330 	jr	Z, 00128$
                                   8331 ;src/main.c:926: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      0024B8 2B                    8332 	dec	hl
                                   8333 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0024B9 2A                    8334 	ld	a, (hl+)
      0024BA 22                    8335 	ld	(hl+), a
      0024BB 36 00                 8336 	ld	(hl), #0x00
      0024BD 3E 02                 8337 	ld	a, #0x02
      0024BF                       8338 00273$:
      0024BF F8 03                 8339 	ldhl	sp,	#3
      0024C1 CB 26                 8340 	sla	(hl)
      0024C3 23                    8341 	inc	hl
      0024C4 CB 16                 8342 	rl	(hl)
      0024C6 3D                    8343 	dec	a
      0024C7 20 F6                 8344 	jr	NZ, 00273$
      0024C9 2B                    8345 	dec	hl
      0024CA 2A                    8346 	ld	a, (hl+)
      0024CB 5F                    8347 	ld	e, a
      0024CC 56                    8348 	ld	d, (hl)
      0024CD 21r00r00              8349 	ld	hl, #_shadow_OAM
      0024D0 19                    8350 	add	hl, de
      0024D1 E5                    8351 	push	hl
      0024D2 7D                    8352 	ld	a, l
      0024D3 F8 03                 8353 	ldhl	sp,	#3
      0024D5 77                    8354 	ld	(hl), a
      0024D6 E1                    8355 	pop	hl
      0024D7 7C                    8356 	ld	a, h
      0024D8 F8 02                 8357 	ldhl	sp,	#2
      0024DA 32                    8358 	ld	(hl-), a
      0024DB 2A                    8359 	ld	a, (hl+)
      0024DC 5F                    8360 	ld	e, a
      0024DD 56                    8361 	ld	d, (hl)
      0024DE 21 03 00              8362 	ld	hl, #0x0003
      0024E1 19                    8363 	add	hl, de
      0024E2 E5                    8364 	push	hl
      0024E3 7D                    8365 	ld	a, l
      0024E4 F8 05                 8366 	ldhl	sp,	#5
      0024E6 77                    8367 	ld	(hl), a
      0024E7 E1                    8368 	pop	hl
      0024E8 7C                    8369 	ld	a, h
      0024E9 F8 04                 8370 	ldhl	sp,	#4
      0024EB 32                    8371 	ld	(hl-), a
      0024EC 2A                    8372 	ld	a,	(hl+)
      0024ED 66                    8373 	ld	h, (hl)
      0024EE 6F                    8374 	ld	l, a
      0024EF 36 40                 8375 	ld	(hl), #0x40
                                   8376 ;src/main.c:927: projectiles[oldestProjectile].offset = 4;
      0024F1 21r89r00              8377 	ld	hl, #_oldestProjectile
      0024F4 4E                    8378 	ld	c, (hl)
      0024F5 06 00                 8379 	ld	b, #0x00
      0024F7 69                    8380 	ld	l, c
      0024F8 60                    8381 	ld	h, b
      0024F9 29                    8382 	add	hl, hl
      0024FA 09                    8383 	add	hl, bc
      0024FB 29                    8384 	add	hl, hl
      0024FC 29                    8385 	add	hl, hl
      0024FD E5                    8386 	push	hl
      0024FE 7D                    8387 	ld	a, l
      0024FF F8 05                 8388 	ldhl	sp,	#5
      002501 77                    8389 	ld	(hl), a
      002502 E1                    8390 	pop	hl
      002503 7C                    8391 	ld	a, h
      002504 F8 04                 8392 	ldhl	sp,	#4
      002506 32                    8393 	ld	(hl-), a
      002507 2A                    8394 	ld	a, (hl+)
      002508 5F                    8395 	ld	e, a
      002509 56                    8396 	ld	d, (hl)
      00250A 21rAAr00              8397 	ld	hl, #_projectiles
      00250D 19                    8398 	add	hl, de
      00250E E5                    8399 	push	hl
      00250F 7D                    8400 	ld	a, l
      002510 F8 03                 8401 	ldhl	sp,	#3
      002512 77                    8402 	ld	(hl), a
      002513 E1                    8403 	pop	hl
      002514 7C                    8404 	ld	a, h
      002515 F8 02                 8405 	ldhl	sp,	#2
      002517 32                    8406 	ld	(hl-), a
      002518 2A                    8407 	ld	a, (hl+)
      002519 5F                    8408 	ld	e, a
      00251A 56                    8409 	ld	d, (hl)
      00251B 21 04 00              8410 	ld	hl, #0x0004
      00251E 19                    8411 	add	hl, de
      00251F E5                    8412 	push	hl
      002520 7D                    8413 	ld	a, l
      002521 F8 05                 8414 	ldhl	sp,	#5
      002523 77                    8415 	ld	(hl), a
      002524 E1                    8416 	pop	hl
      002525 7C                    8417 	ld	a, h
      002526 F8 04                 8418 	ldhl	sp,	#4
      002528 32                    8419 	ld	(hl-), a
      002529 2A                    8420 	ld	a,	(hl+)
      00252A 66                    8421 	ld	h, (hl)
      00252B 6F                    8422 	ld	l, a
      00252C 36 04                 8423 	ld	(hl), #0x04
      00252E C3r1Cr26              8424 	jp	00141$
      002531                       8425 00128$:
                                   8426 ;src/main.c:929: else if (xDir == -1 && yDir == 1) {
      002531 FAr8Br00              8427 	ld	a, (#_xDir)
      002534 3C                    8428 	inc	a
      002535 3E 01                 8429 	ld	a, #0x01
      002537 28 01                 8430 	jr	Z, 00275$
      002539 AF                    8431 	xor	a, a
      00253A                       8432 00275$:
      00253A F8 04                 8433 	ldhl	sp,	#4
      00253C 77                    8434 	ld	(hl), a
      00253D 7E                    8435 	ld	a, (hl)
      00253E B7                    8436 	or	a, a
      00253F CArBFr25              8437 	jp	Z, 00124$
      002542 2B                    8438 	dec	hl
      002543 7E                    8439 	ld	a, (hl)
      002544 B7                    8440 	or	a, a
      002545 28 78                 8441 	jr	Z, 00124$
                                   8442 ;src/main.c:930: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002547 2B                    8443 	dec	hl
                                   8444 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002548 2A                    8445 	ld	a, (hl+)
      002549 22                    8446 	ld	(hl+), a
      00254A 36 00                 8447 	ld	(hl), #0x00
      00254C 3E 02                 8448 	ld	a, #0x02
      00254E                       8449 00276$:
      00254E F8 03                 8450 	ldhl	sp,	#3
      002550 CB 26                 8451 	sla	(hl)
      002552 23                    8452 	inc	hl
      002553 CB 16                 8453 	rl	(hl)
      002555 3D                    8454 	dec	a
      002556 20 F6                 8455 	jr	NZ, 00276$
      002558 2B                    8456 	dec	hl
      002559 2A                    8457 	ld	a, (hl+)
      00255A 5F                    8458 	ld	e, a
      00255B 56                    8459 	ld	d, (hl)
      00255C 21r00r00              8460 	ld	hl, #_shadow_OAM
      00255F 19                    8461 	add	hl, de
      002560 E5                    8462 	push	hl
      002561 7D                    8463 	ld	a, l
      002562 F8 03                 8464 	ldhl	sp,	#3
      002564 77                    8465 	ld	(hl), a
      002565 E1                    8466 	pop	hl
      002566 7C                    8467 	ld	a, h
      002567 F8 02                 8468 	ldhl	sp,	#2
      002569 32                    8469 	ld	(hl-), a
      00256A 2A                    8470 	ld	a, (hl+)
      00256B 5F                    8471 	ld	e, a
      00256C 56                    8472 	ld	d, (hl)
      00256D 21 03 00              8473 	ld	hl, #0x0003
      002570 19                    8474 	add	hl, de
      002571 E5                    8475 	push	hl
      002572 7D                    8476 	ld	a, l
      002573 F8 05                 8477 	ldhl	sp,	#5
      002575 77                    8478 	ld	(hl), a
      002576 E1                    8479 	pop	hl
      002577 7C                    8480 	ld	a, h
      002578 F8 04                 8481 	ldhl	sp,	#4
      00257A 32                    8482 	ld	(hl-), a
      00257B 2A                    8483 	ld	a,	(hl+)
      00257C 66                    8484 	ld	h, (hl)
      00257D 6F                    8485 	ld	l, a
      00257E 36 60                 8486 	ld	(hl), #0x60
                                   8487 ;src/main.c:931: projectiles[oldestProjectile].offset = 4;
      002580 21r89r00              8488 	ld	hl, #_oldestProjectile
      002583 4E                    8489 	ld	c, (hl)
      002584 06 00                 8490 	ld	b, #0x00
      002586 69                    8491 	ld	l, c
      002587 60                    8492 	ld	h, b
      002588 29                    8493 	add	hl, hl
      002589 09                    8494 	add	hl, bc
      00258A 29                    8495 	add	hl, hl
      00258B 29                    8496 	add	hl, hl
      00258C E5                    8497 	push	hl
      00258D 7D                    8498 	ld	a, l
      00258E F8 05                 8499 	ldhl	sp,	#5
      002590 77                    8500 	ld	(hl), a
      002591 E1                    8501 	pop	hl
      002592 7C                    8502 	ld	a, h
      002593 F8 04                 8503 	ldhl	sp,	#4
      002595 32                    8504 	ld	(hl-), a
      002596 2A                    8505 	ld	a, (hl+)
      002597 5F                    8506 	ld	e, a
      002598 56                    8507 	ld	d, (hl)
      002599 21rAAr00              8508 	ld	hl, #_projectiles
      00259C 19                    8509 	add	hl, de
      00259D E5                    8510 	push	hl
      00259E 7D                    8511 	ld	a, l
      00259F F8 03                 8512 	ldhl	sp,	#3
      0025A1 77                    8513 	ld	(hl), a
      0025A2 E1                    8514 	pop	hl
      0025A3 7C                    8515 	ld	a, h
      0025A4 F8 02                 8516 	ldhl	sp,	#2
      0025A6 32                    8517 	ld	(hl-), a
      0025A7 2A                    8518 	ld	a, (hl+)
      0025A8 5F                    8519 	ld	e, a
      0025A9 56                    8520 	ld	d, (hl)
      0025AA 21 04 00              8521 	ld	hl, #0x0004
      0025AD 19                    8522 	add	hl, de
      0025AE E5                    8523 	push	hl
      0025AF 7D                    8524 	ld	a, l
      0025B0 F8 05                 8525 	ldhl	sp,	#5
      0025B2 77                    8526 	ld	(hl), a
      0025B3 E1                    8527 	pop	hl
      0025B4 7C                    8528 	ld	a, h
      0025B5 F8 04                 8529 	ldhl	sp,	#4
      0025B7 32                    8530 	ld	(hl-), a
      0025B8 2A                    8531 	ld	a,	(hl+)
      0025B9 66                    8532 	ld	h, (hl)
      0025BA 6F                    8533 	ld	l, a
      0025BB 36 04                 8534 	ld	(hl), #0x04
      0025BD 18 5D                 8535 	jr	00141$
      0025BF                       8536 00124$:
                                   8537 ;src/main.c:933: else if (xDir == -1 && yDir == -1) {
      0025BF F8 04                 8538 	ldhl	sp,	#4
      0025C1 7E                    8539 	ld	a, (hl)
      0025C2 B7                    8540 	or	a, a
      0025C3 28 57                 8541 	jr	Z, 00141$
      0025C5 F8 01                 8542 	ldhl	sp,	#1
      0025C7 7E                    8543 	ld	a, (hl)
      0025C8 B7                    8544 	or	a, a
      0025C9 28 51                 8545 	jr	Z, 00141$
                                   8546 ;src/main.c:934: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      0025CB 23                    8547 	inc	hl
                                   8548 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0025CC 2A                    8549 	ld	a, (hl+)
      0025CD 22                    8550 	ld	(hl+), a
      0025CE 36 00                 8551 	ld	(hl), #0x00
      0025D0 3E 02                 8552 	ld	a, #0x02
      0025D2                       8553 00277$:
      0025D2 F8 03                 8554 	ldhl	sp,	#3
      0025D4 CB 26                 8555 	sla	(hl)
      0025D6 23                    8556 	inc	hl
      0025D7 CB 16                 8557 	rl	(hl)
      0025D9 3D                    8558 	dec	a
      0025DA 20 F6                 8559 	jr	NZ, 00277$
      0025DC 2B                    8560 	dec	hl
      0025DD 2A                    8561 	ld	a, (hl+)
      0025DE 5F                    8562 	ld	e, a
      0025DF 56                    8563 	ld	d, (hl)
      0025E0 21r00r00              8564 	ld	hl, #_shadow_OAM
      0025E3 19                    8565 	add	hl, de
      0025E4 E5                    8566 	push	hl
      0025E5 7D                    8567 	ld	a, l
      0025E6 F8 03                 8568 	ldhl	sp,	#3
      0025E8 77                    8569 	ld	(hl), a
      0025E9 E1                    8570 	pop	hl
      0025EA 7C                    8571 	ld	a, h
      0025EB F8 02                 8572 	ldhl	sp,	#2
      0025ED 32                    8573 	ld	(hl-), a
      0025EE 2A                    8574 	ld	a, (hl+)
      0025EF 5F                    8575 	ld	e, a
      0025F0 56                    8576 	ld	d, (hl)
      0025F1 21 03 00              8577 	ld	hl, #0x0003
      0025F4 19                    8578 	add	hl, de
      0025F5 E5                    8579 	push	hl
      0025F6 7D                    8580 	ld	a, l
      0025F7 F8 05                 8581 	ldhl	sp,	#5
      0025F9 77                    8582 	ld	(hl), a
      0025FA E1                    8583 	pop	hl
      0025FB 7C                    8584 	ld	a, h
      0025FC F8 04                 8585 	ldhl	sp,	#4
      0025FE 32                    8586 	ld	(hl-), a
      0025FF 2A                    8587 	ld	a,	(hl+)
      002600 66                    8588 	ld	h, (hl)
      002601 6F                    8589 	ld	l, a
      002602 36 20                 8590 	ld	(hl), #0x20
                                   8591 ;src/main.c:935: projectiles[oldestProjectile].offset = 12;
      002604 21r89r00              8592 	ld	hl, #_oldestProjectile
      002607 4E                    8593 	ld	c, (hl)
      002608 06 00                 8594 	ld	b, #0x00
      00260A 69                    8595 	ld	l, c
      00260B 60                    8596 	ld	h, b
      00260C 29                    8597 	add	hl, hl
      00260D 09                    8598 	add	hl, bc
      00260E 29                    8599 	add	hl, hl
      00260F 29                    8600 	add	hl, hl
      002610 01rAAr00              8601 	ld	bc,#_projectiles
      002613 09                    8602 	add	hl,bc
      002614 4D                    8603 	ld	c, l
      002615 44                    8604 	ld	b, h
      002616 21 04 00              8605 	ld	hl, #0x0004
      002619 09                    8606 	add	hl, bc
      00261A 36 0C                 8607 	ld	(hl), #0x0c
      00261C                       8608 00141$:
                                   8609 ;src/main.c:939: fireCooldown = projectiles[oldestProjectile].delay;
      00261C 21r89r00              8610 	ld	hl, #_oldestProjectile
      00261F 4E                    8611 	ld	c, (hl)
      002620 06 00                 8612 	ld	b, #0x00
      002622 69                    8613 	ld	l, c
      002623 60                    8614 	ld	h, b
      002624 29                    8615 	add	hl, hl
      002625 09                    8616 	add	hl, bc
      002626 29                    8617 	add	hl, hl
      002627 29                    8618 	add	hl, hl
      002628 01rAAr00              8619 	ld	bc,#_projectiles
      00262B 09                    8620 	add	hl,bc
      00262C 4D                    8621 	ld	c, l
      00262D 44                    8622 	ld	b, h
      00262E 21 0A 00              8623 	ld	hl, #0x000a
      002631 09                    8624 	add	hl, bc
      002632 7E                    8625 	ld	a, (hl)
      002633 EAr8Ar00              8626 	ld	(#_fireCooldown),a
                                   8627 ;src/main.c:941: playSound(projectiles[oldestProjectile].type);
      002636 21 0B 00              8628 	ld	hl, #0x000b
      002639 09                    8629 	add	hl, bc
      00263A 7E                    8630 	ld	a, (hl)
      00263B F5                    8631 	push	af
      00263C 33                    8632 	inc	sp
      00263D CDrA1r0C              8633 	call	_playSound
      002640 33                    8634 	inc	sp
      002641                       8635 00154$:
                                   8636 ;src/main.c:945: }
      002641 E8 05                 8637 	add	sp, #5
      002643 C9                    8638 	ret
                                   8639 ;src/main.c:948: void moveProjectiles() {
                                   8640 ;	---------------------------------
                                   8641 ; Function moveProjectiles
                                   8642 ; ---------------------------------
      002644                       8643 _moveProjectiles::
      002644 E8 F9                 8644 	add	sp, #-7
                                   8645 ;src/main.c:949: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002646 F8 06                 8646 	ldhl	sp,	#6
      002648 36 00                 8647 	ld	(hl), #0x00
      00264A                       8648 00112$:
      00264A 21r99r08              8649 	ld	hl, #_PROJECTILECOUNT
      00264D 4E                    8650 	ld	c, (hl)
      00264E F8 06                 8651 	ldhl	sp,	#6
      002650 7E                    8652 	ld	a, (hl)
      002651 91                    8653 	sub	a, c
      002652 D2rA0r27              8654 	jp	NC, 00114$
                                   8655 ;src/main.c:950: projectiles[i].x -= xOverflow;
      002655 4E                    8656 	ld	c, (hl)
      002656 06 00                 8657 	ld	b, #0x00
      002658 69                    8658 	ld	l, c
      002659 60                    8659 	ld	h, b
      00265A 29                    8660 	add	hl, hl
      00265B 09                    8661 	add	hl, bc
      00265C 29                    8662 	add	hl, hl
      00265D 29                    8663 	add	hl, hl
      00265E 01rAAr00              8664 	ld	bc,#_projectiles
      002661 09                    8665 	add	hl,bc
      002662 33                    8666 	inc	sp
      002663 33                    8667 	inc	sp
      002664 5D                    8668 	ld	e, l
      002665 54                    8669 	ld	d, h
      002666 D5                    8670 	push	de
      002667 1A                    8671 	ld	a, (de)
      002668 4F                    8672 	ld	c, a
      002669 13                    8673 	inc	de
      00266A 1A                    8674 	ld	a, (de)
      00266B 47                    8675 	ld	b, a
      00266C 79                    8676 	ld	a, c
      00266D 21r99r00              8677 	ld	hl, #_xOverflow
      002670 96                    8678 	sub	a, (hl)
      002671 23                    8679 	inc	hl
      002672 4F                    8680 	ld	c, a
      002673 78                    8681 	ld	a, b
      002674 9E                    8682 	sbc	a, (hl)
      002675 47                    8683 	ld	b, a
      002676 E1                    8684 	pop	hl
      002677 E5                    8685 	push	hl
      002678 79                    8686 	ld	a, c
      002679 22                    8687 	ld	(hl+), a
      00267A 70                    8688 	ld	(hl), b
                                   8689 ;src/main.c:951: projectiles[i].y -= yOverflow;
      00267B D1                    8690 	pop	de
      00267C D5                    8691 	push	de
      00267D 21 02 00              8692 	ld	hl, #0x0002
      002680 19                    8693 	add	hl, de
      002681 E5                    8694 	push	hl
      002682 7D                    8695 	ld	a, l
      002683 F8 04                 8696 	ldhl	sp,	#4
      002685 77                    8697 	ld	(hl), a
      002686 E1                    8698 	pop	hl
      002687 7C                    8699 	ld	a, h
      002688 F8 03                 8700 	ldhl	sp,	#3
      00268A 32                    8701 	ld	(hl-), a
      00268B 2A                    8702 	ld	a, (hl+)
      00268C 5F                    8703 	ld	e, a
      00268D 56                    8704 	ld	d, (hl)
      00268E 1A                    8705 	ld	a, (de)
      00268F 4F                    8706 	ld	c, a
      002690 13                    8707 	inc	de
      002691 1A                    8708 	ld	a, (de)
      002692 47                    8709 	ld	b, a
      002693 79                    8710 	ld	a, c
      002694 21r9Br00              8711 	ld	hl, #_yOverflow
      002697 96                    8712 	sub	a, (hl)
      002698 23                    8713 	inc	hl
      002699 4F                    8714 	ld	c, a
      00269A 78                    8715 	ld	a, b
      00269B 9E                    8716 	sbc	a, (hl)
      00269C 47                    8717 	ld	b, a
      00269D F8 02                 8718 	ldhl	sp,	#2
      00269F 2A                    8719 	ld	a,	(hl+)
      0026A0 66                    8720 	ld	h, (hl)
      0026A1 6F                    8721 	ld	l, a
      0026A2 79                    8722 	ld	a, c
      0026A3 22                    8723 	ld	(hl+), a
      0026A4 70                    8724 	ld	(hl), b
                                   8725 ;src/main.c:953: if (projectiles[i].active) {
      0026A5 D1                    8726 	pop	de
      0026A6 D5                    8727 	push	de
      0026A7 21 09 00              8728 	ld	hl, #0x0009
      0026AA 19                    8729 	add	hl, de
      0026AB 4D                    8730 	ld	c, l
      0026AC 44                    8731 	ld	b, h
      0026AD 0A                    8732 	ld	a, (bc)
      0026AE B7                    8733 	or	a, a
      0026AF CAr9Ar27              8734 	jp	Z, 00113$
                                   8735 ;src/main.c:954: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      0026B2 F8 02                 8736 	ldhl	sp,#2
      0026B4 2A                    8737 	ld	a, (hl+)
      0026B5 5F                    8738 	ld	e, a
      0026B6 56                    8739 	ld	d, (hl)
      0026B7 1A                    8740 	ld	a, (de)
      0026B8 4F                    8741 	ld	c, a
      0026B9 13                    8742 	inc	de
      0026BA 1A                    8743 	ld	a, (de)
      0026BB 47                    8744 	ld	b, a
      0026BC D1                    8745 	pop	de
      0026BD D5                    8746 	push	de
      0026BE 21 06 00              8747 	ld	hl, #0x0006
      0026C1 19                    8748 	add	hl, de
      0026C2 5D                    8749 	ld	e, l
      0026C3 54                    8750 	ld	d, h
      0026C4 1A                    8751 	ld	a, (de)
      0026C5 6F                    8752 	ld	l, a
                                   8753 ;	spillPairReg hl
                                   8754 ;	spillPairReg hl
      0026C6 07                    8755 	rlca
      0026C7 9F                    8756 	sbc	a, a
      0026C8 67                    8757 	ld	h, a
                                   8758 ;	spillPairReg hl
                                   8759 ;	spillPairReg hl
      0026C9 09                    8760 	add	hl, bc
      0026CA 4D                    8761 	ld	c, l
      0026CB 44                    8762 	ld	b, h
      0026CC F8 04                 8763 	ldhl	sp,	#4
      0026CE 79                    8764 	ld	a, c
      0026CF 22                    8765 	ld	(hl+), a
      0026D0 70                    8766 	ld	(hl), b
                                   8767 ;src/main.c:955: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      0026D1 D1                    8768 	pop	de
      0026D2 D5                    8769 	push	de
      0026D3 1A                    8770 	ld	a, (de)
      0026D4 4F                    8771 	ld	c, a
      0026D5 13                    8772 	inc	de
      0026D6 1A                    8773 	ld	a, (de)
      0026D7 47                    8774 	ld	b, a
      0026D8 D1                    8775 	pop	de
      0026D9 D5                    8776 	push	de
      0026DA 21 05 00              8777 	ld	hl, #0x0005
      0026DD 19                    8778 	add	hl, de
      0026DE 5D                    8779 	ld	e, l
      0026DF 54                    8780 	ld	d, h
      0026E0 1A                    8781 	ld	a, (de)
      0026E1 6F                    8782 	ld	l, a
                                   8783 ;	spillPairReg hl
                                   8784 ;	spillPairReg hl
      0026E2 07                    8785 	rlca
      0026E3 9F                    8786 	sbc	a, a
      0026E4 67                    8787 	ld	h, a
                                   8788 ;	spillPairReg hl
                                   8789 ;	spillPairReg hl
      0026E5 09                    8790 	add	hl, bc
      0026E6 4D                    8791 	ld	c, l
      0026E7 44                    8792 	ld	b, h
                                   8793 ;src/main.c:958: projectiles[i].y = newY;
      0026E8 F8 02                 8794 	ldhl	sp,#2
      0026EA 2A                    8795 	ld	a, (hl+)
      0026EB 5F                    8796 	ld	e, a
      0026EC 2A                    8797 	ld	a, (hl+)
      0026ED 57                    8798 	ld	d, a
      0026EE 2A                    8799 	ld	a, (hl+)
      0026EF 12                    8800 	ld	(de), a
      0026F0 13                    8801 	inc	de
      0026F1 7E                    8802 	ld	a, (hl)
      0026F2 12                    8803 	ld	(de), a
                                   8804 ;src/main.c:959: projectiles[i].x = newX;
      0026F3 E1                    8805 	pop	hl
      0026F4 E5                    8806 	push	hl
      0026F5 79                    8807 	ld	a, c
      0026F6 22                    8808 	ld	(hl+), a
      0026F7 70                    8809 	ld	(hl), b
                                   8810 ;src/main.c:963: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      0026F8 F8 04                 8811 	ldhl	sp,	#4
      0026FA 2A                    8812 	ld	a, (hl+)
      0026FB 77                    8813 	ld	(hl), a
      0026FC D1                    8814 	pop	de
      0026FD D5                    8815 	push	de
      0026FE 21 04 00              8816 	ld	hl, #0x0004
      002701 19                    8817 	add	hl, de
      002702 5D                    8818 	ld	e, l
      002703 54                    8819 	ld	d, h
      002704 1A                    8820 	ld	a, (de)
      002705 F8 05                 8821 	ldhl	sp,	#5
      002707 86                    8822 	add	a, (hl)
      002708 2B                    8823 	dec	hl
      002709 5F                    8824 	ld	e, a
      00270A 79                    8825 	ld	a, c
      00270B C6 04                 8826 	add	a, #0x04
      00270D 22                    8827 	ld	(hl+), a
      00270E 23                    8828 	inc	hl
      00270F 3A                    8829 	ld	a, (hl-)
      002710 C6 1E                 8830 	add	a, #0x1e
      002712 77                    8831 	ld	(hl), a
      002713 56                    8832 	ld	d, (hl)
                                   8833 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002714 26 00                 8834 	ld	h, #0x00
                                   8835 ;	spillPairReg hl
                                   8836 ;	spillPairReg hl
      002716 6A                    8837 	ld	l, d
      002717 29                    8838 	add	hl, hl
      002718 29                    8839 	add	hl, hl
      002719 D5                    8840 	push	de
      00271A 11r00r00              8841 	ld	de, #_shadow_OAM
      00271D 19                    8842 	add	hl, de
      00271E D1                    8843 	pop	de
                                   8844 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00271F 7B                    8845 	ld	a, e
      002720 22                    8846 	ld	(hl+), a
      002721 5D                    8847 	ld	e, l
      002722 54                    8848 	ld	d, h
      002723 F8 04                 8849 	ldhl	sp,	#4
      002725 7E                    8850 	ld	a, (hl)
      002726 12                    8851 	ld	(de), a
                                   8852 ;src/main.c:967: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002727 D1                    8853 	pop	de
      002728 D5                    8854 	push	de
      002729 1A                    8855 	ld	a, (de)
      00272A 6F                    8856 	ld	l, a
                                   8857 ;	spillPairReg hl
                                   8858 ;	spillPairReg hl
      00272B 13                    8859 	inc	de
      00272C 1A                    8860 	ld	a, (de)
      00272D 67                    8861 	ld	h, a
                                   8862 ;	spillPairReg hl
                                   8863 ;	spillPairReg hl
      00272E CB 78                 8864 	bit	7, b
      002730 20 44                 8865 	jr	NZ, 00101$
      002732 5C                    8866 	ld	e, h
      002733 16 00                 8867 	ld	d, #0x00
      002735 3E AA                 8868 	ld	a, #0xaa
      002737 BD                    8869 	cp	a, l
      002738 3E 00                 8870 	ld	a, #0x00
      00273A 9C                    8871 	sbc	a, h
      00273B CB 7B                 8872 	bit	7, e
      00273D 28 07                 8873 	jr	Z, 00147$
      00273F CB 7A                 8874 	bit	7, d
      002741 20 08                 8875 	jr	NZ, 00148$
      002743 BF                    8876 	cp	a, a
      002744 18 05                 8877 	jr	00148$
      002746                       8878 00147$:
      002746 CB 7A                 8879 	bit	7, d
      002748 28 01                 8880 	jr	Z, 00148$
      00274A 37                    8881 	scf
      00274B                       8882 00148$:
      00274B 38 29                 8883 	jr	C, 00101$
                                   8884 ;src/main.c:951: projectiles[i].y -= yOverflow;
      00274D F8 02                 8885 	ldhl	sp,#2
      00274F 2A                    8886 	ld	a, (hl+)
      002750 5F                    8887 	ld	e, a
      002751 56                    8888 	ld	d, (hl)
      002752 1A                    8889 	ld	a, (de)
      002753 4F                    8890 	ld	c, a
      002754 13                    8891 	inc	de
      002755 1A                    8892 	ld	a, (de)
                                   8893 ;src/main.c:967: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002756 47                    8894 	ld	b, a
      002757 CB 78                 8895 	bit	7, b
      002759 20 1B                 8896 	jr	NZ, 00101$
      00275B 58                    8897 	ld	e, b
      00275C 16 00                 8898 	ld	d, #0x00
      00275E 3E 9A                 8899 	ld	a, #0x9a
      002760 B9                    8900 	cp	a, c
      002761 3E 00                 8901 	ld	a, #0x00
      002763 98                    8902 	sbc	a, b
      002764 CB 7B                 8903 	bit	7, e
      002766 28 07                 8904 	jr	Z, 00149$
      002768 CB 7A                 8905 	bit	7, d
      00276A 20 08                 8906 	jr	NZ, 00150$
      00276C BF                    8907 	cp	a, a
      00276D 18 05                 8908 	jr	00150$
      00276F                       8909 00149$:
      00276F CB 7A                 8910 	bit	7, d
      002771 28 01                 8911 	jr	Z, 00150$
      002773 37                    8912 	scf
      002774                       8913 00150$:
      002774 30 24                 8914 	jr	NC, 00113$
      002776                       8915 00101$:
                                   8916 ;src/main.c:968: projectiles[i].active = 0;
      002776 F8 06                 8917 	ldhl	sp,	#6
      002778 4E                    8918 	ld	c, (hl)
      002779 06 00                 8919 	ld	b, #0x00
      00277B 69                    8920 	ld	l, c
      00277C 60                    8921 	ld	h, b
      00277D 29                    8922 	add	hl, hl
      00277E 09                    8923 	add	hl, bc
      00277F 29                    8924 	add	hl, hl
      002780 29                    8925 	add	hl, hl
      002781 11rAAr00              8926 	ld	de, #_projectiles
      002784 19                    8927 	add	hl, de
      002785 01 09 00              8928 	ld	bc, #0x0009
      002788 09                    8929 	add	hl, bc
      002789 36 00                 8930 	ld	(hl), #0x00
                                   8931 ;src/main.c:969: set_sprite_tile(30+i, 0x7f);
      00278B F8 05                 8932 	ldhl	sp,	#5
                                   8933 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00278D 6E                    8934 	ld	l, (hl)
                                   8935 ;	spillPairReg hl
                                   8936 ;	spillPairReg hl
      00278E 26 00                 8937 	ld	h, #0x00
                                   8938 ;	spillPairReg hl
                                   8939 ;	spillPairReg hl
      002790 29                    8940 	add	hl, hl
      002791 29                    8941 	add	hl, hl
      002792 11r00r00              8942 	ld	de, #_shadow_OAM
      002795 19                    8943 	add	hl, de
      002796 23                    8944 	inc	hl
      002797 23                    8945 	inc	hl
      002798 36 7F                 8946 	ld	(hl), #0x7f
                                   8947 ;src/main.c:969: set_sprite_tile(30+i, 0x7f);
      00279A                       8948 00113$:
                                   8949 ;src/main.c:949: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00279A F8 06                 8950 	ldhl	sp,	#6
      00279C 34                    8951 	inc	(hl)
      00279D C3r4Ar26              8952 	jp	00112$
      0027A0                       8953 00114$:
                                   8954 ;src/main.c:973: }
      0027A0 E8 07                 8955 	add	sp, #7
      0027A2 C9                    8956 	ret
                                   8957 ;src/main.c:975: void tickPickups() {
                                   8958 ;	---------------------------------
                                   8959 ; Function tickPickups
                                   8960 ; ---------------------------------
      0027A3                       8961 _tickPickups::
      0027A3 3B                    8962 	dec	sp
      0027A4 3B                    8963 	dec	sp
                                   8964 ;src/main.c:976: pickup.x -= xOverflow;
      0027A5 21rECr00              8965 	ld	hl, #(_pickup + 1)
      0027A8 2A                    8966 	ld	a, (hl+)
      0027A9 47                    8967 	ld	b, a
      0027AA 4E                    8968 	ld	c, (hl)
      0027AB 58                    8969 	ld	e, b
      0027AC 51                    8970 	ld	d, c
      0027AD 21r99r00              8971 	ld	hl, #_xOverflow
      0027B0 2A                    8972 	ld	a,	(hl+)
      0027B1 66                    8973 	ld	h, (hl)
      0027B2 6F                    8974 	ld	l, a
      0027B3 7B                    8975 	ld	a, e
      0027B4 95                    8976 	sub	a, l
      0027B5 5F                    8977 	ld	e, a
      0027B6 7A                    8978 	ld	a, d
      0027B7 9C                    8979 	sbc	a, h
      0027B8 F8 01                 8980 	ldhl	sp,	#1
      0027BA 32                    8981 	ld	(hl-), a
      0027BB 73                    8982 	ld	(hl), e
      0027BC 11rECr00              8983 	ld	de, #(_pickup + 1)
      0027BF 2A                    8984 	ld	a, (hl+)
      0027C0 12                    8985 	ld	(de), a
      0027C1 13                    8986 	inc	de
      0027C2 7E                    8987 	ld	a, (hl)
      0027C3 12                    8988 	ld	(de), a
                                   8989 ;src/main.c:977: pickup.y -= yOverflow;
      0027C4 21rEEr00              8990 	ld	hl, #(_pickup + 3)
      0027C7 2A                    8991 	ld	a, (hl+)
      0027C8 4F                    8992 	ld	c, a
      0027C9 46                    8993 	ld	b, (hl)
      0027CA 79                    8994 	ld	a, c
      0027CB 21r9Br00              8995 	ld	hl, #_yOverflow
      0027CE 96                    8996 	sub	a, (hl)
      0027CF 23                    8997 	inc	hl
      0027D0 4F                    8998 	ld	c, a
      0027D1 78                    8999 	ld	a, b
      0027D2 9E                    9000 	sbc	a, (hl)
      0027D3 47                    9001 	ld	b, a
      0027D4 21rEEr00              9002 	ld	hl, #(_pickup + 3)
      0027D7 79                    9003 	ld	a, c
      0027D8 22                    9004 	ld	(hl+), a
      0027D9 70                    9005 	ld	(hl), b
                                   9006 ;src/main.c:979: move_sprite(3, pickup.x + 4, pickup.y + 12);
      0027DA 79                    9007 	ld	a, c
      0027DB C6 0C                 9008 	add	a, #0x0c
      0027DD 47                    9009 	ld	b, a
      0027DE F8 00                 9010 	ldhl	sp,	#0
      0027E0 7E                    9011 	ld	a, (hl)
      0027E1 C6 04                 9012 	add	a, #0x04
      0027E3 4F                    9013 	ld	c, a
                                   9014 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0027E4 21r0Cr00              9015 	ld	hl, #(_shadow_OAM + 12)
                                   9016 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0027E7 78                    9017 	ld	a, b
      0027E8 22                    9018 	ld	(hl+), a
      0027E9 71                    9019 	ld	(hl), c
                                   9020 ;src/main.c:980: if (pickup.active) {
      0027EA FArF0r00              9021 	ld	a, (#(_pickup + 5) + 0)
      0027ED B7                    9022 	or	a, a
      0027EE CAr70r29              9023 	jp	Z, 00143$
                                   9024 ;src/main.c:981: if (pickup.visible) {
      0027F1 21rEBr00              9025 	ld	hl, #_pickup
      0027F4 4E                    9026 	ld	c, (hl)
                                   9027 ;src/main.c:976: pickup.x -= xOverflow;
      0027F5 11rECr00              9028 	ld	de, #(_pickup + 1)
      0027F8 1A                    9029 	ld	a, (de)
      0027F9 F8 00                 9030 	ldhl	sp,	#0
      0027FB 22                    9031 	ld	(hl+), a
      0027FC 13                    9032 	inc	de
      0027FD 1A                    9033 	ld	a, (de)
      0027FE 77                    9034 	ld	(hl), a
                                   9035 ;src/main.c:981: if (pickup.visible) {
      0027FF 79                    9036 	ld	a, c
      002800 B7                    9037 	or	a, a
      002801 CAr04r29              9038 	jp	Z, 00127$
                                   9039 ;src/main.c:982: if (abs(pickup.x - playerDrawX) < 10) {
      002804 2B                    9040 	dec	hl
      002805 7E                    9041 	ld	a, (hl)
      002806 21r93r00              9042 	ld	hl, #_playerDrawX
      002809 4E                    9043 	ld	c, (hl)
      00280A 91                    9044 	sub	a, c
      00280B 4F                    9045 	ld	c, a
                                   9046 ;src/main.c:345: if (value >= 0) return value;
      00280C CB 79                 9047 	bit	7, c
      00280E 28 03                 9048 	jr	Z, 00135$
                                   9049 ;src/main.c:346: else return - value;
      002810 AF                    9050 	xor	a, a
      002811 91                    9051 	sub	a, c
      002812 4F                    9052 	ld	c, a
                                   9053 ;src/main.c:982: if (abs(pickup.x - playerDrawX) < 10) {
      002813                       9054 00135$:
      002813 79                    9055 	ld	a, c
      002814 EE 80                 9056 	xor	a, #0x80
      002816 D6 8A                 9057 	sub	a, #0x8a
      002818 D2rA7r28              9058 	jp	NC, 00115$
                                   9059 ;src/main.c:983: if (abs(pickup.y - playerDrawY) < 10) {
      00281B FArEEr00              9060 	ld	a, (#(_pickup + 3) + 0)
      00281E F8 01                 9061 	ldhl	sp,	#1
      002820 77                    9062 	ld	(hl), a
      002821 21r94r00              9063 	ld	hl, #_playerDrawY
      002824 4E                    9064 	ld	c, (hl)
      002825 F8 01                 9065 	ldhl	sp,	#1
      002827 7E                    9066 	ld	a, (hl)
      002828 91                    9067 	sub	a, c
      002829 77                    9068 	ld	(hl), a
                                   9069 ;src/main.c:345: if (value >= 0) return value;
      00282A CB 7E                 9070 	bit	7, (hl)
      00282C 28 05                 9071 	jr	Z, 00139$
                                   9072 ;src/main.c:346: else return - value;
      00282E AF                    9073 	xor	a, a
      00282F F8 01                 9074 	ldhl	sp,	#1
      002831 96                    9075 	sub	a, (hl)
      002832 77                    9076 	ld	(hl), a
                                   9077 ;src/main.c:983: if (abs(pickup.y - playerDrawY) < 10) {
      002833                       9078 00139$:
      002833 F8 01                 9079 	ldhl	sp,	#1
      002835 7E                    9080 	ld	a, (hl)
      002836 EE 80                 9081 	xor	a, #0x80
      002838 D6 8A                 9082 	sub	a, #0x8a
      00283A 30 6B                 9083 	jr	NC, 00115$
                                   9084 ;src/main.c:984: if (pickup.type == 0) { //upgrade
      00283C FArF1r00              9085 	ld	a, (#(_pickup + 6) + 0)
      00283F B7                    9086 	or	a, a
      002840 20 0D                 9087 	jr	NZ, 00104$
                                   9088 ;src/main.c:985: if (gunLevel < 1) {
      002842 21r9Er00              9089 	ld	hl, #_gunLevel
      002845 7E                    9090 	ld	a, (hl)
      002846 D6 01                 9091 	sub	a, #0x01
      002848 30 05                 9092 	jr	NC, 00104$
                                   9093 ;src/main.c:986: gunLevel += 1;
      00284A 34                    9094 	inc	(hl)
      00284B 7E                    9095 	ld	a, (hl)
                                   9096 ;src/main.c:987: setGunIcon();
      00284C CDr78r20              9097 	call	_setGunIcon
      00284F                       9098 00104$:
                                   9099 ;src/main.c:990: if (pickup.type == 1) { //missile ammo
      00284F 21rF1r00              9100 	ld	hl, #(_pickup + 6)
      002852 6E                    9101 	ld	l, (hl)
                                   9102 ;	spillPairReg hl
                                   9103 ;src/main.c:991: updateMissileCount(pickup.amount);
      002853 01rF2r00              9104 	ld	bc, #_pickup + 7
                                   9105 ;src/main.c:990: if (pickup.type == 1) { //missile ammo
      002856 2D                    9106 	dec	l
      002857 20 09                 9107 	jr	NZ, 00106$
                                   9108 ;src/main.c:991: updateMissileCount(pickup.amount);
      002859 0A                    9109 	ld	a, (bc)
      00285A C5                    9110 	push	bc
      00285B F5                    9111 	push	af
      00285C 33                    9112 	inc	sp
      00285D CDrD9r09              9113 	call	_updateMissileCount
      002860 33                    9114 	inc	sp
      002861 C1                    9115 	pop	bc
      002862                       9116 00106$:
                                   9117 ;src/main.c:993: if (pickup.type == 2) {
      002862 FArF1r00              9118 	ld	a, (#(_pickup + 6) + 0)
      002865 D6 02                 9119 	sub	a, #0x02
      002867 20 34                 9120 	jr	NZ, 00111$
                                   9121 ;src/main.c:994: if (hull + pickup.amount <= 100) {
      002869 21rE7r00              9122 	ld	hl, #_hull
      00286C 5E                    9123 	ld	e, (hl)
      00286D 16 00                 9124 	ld	d, #0x00
      00286F 0A                    9125 	ld	a, (bc)
      002870 4F                    9126 	ld	c, a
      002871 69                    9127 	ld	l, c
                                   9128 ;	spillPairReg hl
                                   9129 ;	spillPairReg hl
      002872 26 00                 9130 	ld	h, #0x00
                                   9131 ;	spillPairReg hl
                                   9132 ;	spillPairReg hl
      002874 19                    9133 	add	hl, de
      002875 5C                    9134 	ld	e, h
      002876 16 00                 9135 	ld	d, #0x00
      002878 3E 64                 9136 	ld	a, #0x64
      00287A BD                    9137 	cp	a, l
      00287B 3E 00                 9138 	ld	a, #0x00
      00287D 9C                    9139 	sbc	a, h
      00287E CB 7B                 9140 	bit	7, e
      002880 28 07                 9141 	jr	Z, 00239$
      002882 CB 7A                 9142 	bit	7, d
      002884 20 08                 9143 	jr	NZ, 00240$
      002886 BF                    9144 	cp	a, a
      002887 18 05                 9145 	jr	00240$
      002889                       9146 00239$:
      002889 CB 7A                 9147 	bit	7, d
      00288B 28 01                 9148 	jr	Z, 00240$
      00288D 37                    9149 	scf
      00288E                       9150 00240$:
      00288E 38 08                 9151 	jr	C, 00108$
                                   9152 ;src/main.c:995: hull += pickup.amount;
      002890 79                    9153 	ld	a, c
      002891 21rE7r00              9154 	ld	hl, #_hull
      002894 86                    9155 	add	a, (hl)
      002895 77                    9156 	ld	(hl), a
      002896 18 05                 9157 	jr	00111$
      002898                       9158 00108$:
                                   9159 ;src/main.c:998: hull = 100;
      002898 21rE7r00              9160 	ld	hl, #_hull
      00289B 36 64                 9161 	ld	(hl), #0x64
      00289D                       9162 00111$:
                                   9163 ;src/main.c:1001: pickup.active = 0;
      00289D 21rF0r00              9164 	ld	hl, #(_pickup + 5)
      0028A0 36 00                 9165 	ld	(hl), #0x00
                                   9166 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0028A2 21r0Er00              9167 	ld	hl, #(_shadow_OAM + 14)
      0028A5 36 7F                 9168 	ld	(hl), #0x7f
                                   9169 ;src/main.c:1002: set_sprite_tile(3, 0x7f);
      0028A7                       9170 00115$:
                                   9171 ;src/main.c:976: pickup.x -= xOverflow;
      0028A7 21rECr00              9172 	ld	hl, #(_pickup + 1)
      0028AA 2A                    9173 	ld	a, (hl+)
      0028AB 4F                    9174 	ld	c, a
      0028AC 46                    9175 	ld	b, (hl)
                                   9176 ;src/main.c:1005: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0028AD 79                    9177 	ld	a, c
      0028AE D6 F6                 9178 	sub	a, #0xf6
      0028B0 78                    9179 	ld	a, b
      0028B1 17                    9180 	rla
      0028B2 3F                    9181 	ccf
      0028B3 1F                    9182 	rra
      0028B4 DE 7F                 9183 	sbc	a, #0x7f
      0028B6 38 40                 9184 	jr	C, 00116$
      0028B8 58                    9185 	ld	e, b
      0028B9 16 00                 9186 	ld	d, #0x00
      0028BB 3E AA                 9187 	ld	a, #0xaa
      0028BD B9                    9188 	cp	a, c
      0028BE 3E 00                 9189 	ld	a, #0x00
      0028C0 98                    9190 	sbc	a, b
      0028C1 CB 7B                 9191 	bit	7, e
      0028C3 28 07                 9192 	jr	Z, 00241$
      0028C5 CB 7A                 9193 	bit	7, d
      0028C7 20 08                 9194 	jr	NZ, 00242$
      0028C9 BF                    9195 	cp	a, a
      0028CA 18 05                 9196 	jr	00242$
      0028CC                       9197 00241$:
      0028CC CB 7A                 9198 	bit	7, d
      0028CE 28 01                 9199 	jr	Z, 00242$
      0028D0 37                    9200 	scf
      0028D1                       9201 00242$:
      0028D1 38 25                 9202 	jr	C, 00116$
                                   9203 ;src/main.c:977: pickup.y -= yOverflow;
      0028D3 21rEEr00              9204 	ld	hl, #(_pickup + 3)
      0028D6 2A                    9205 	ld	a, (hl+)
      0028D7 4F                    9206 	ld	c, a
      0028D8 46                    9207 	ld	b, (hl)
                                   9208 ;src/main.c:1005: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0028D9 CB 78                 9209 	bit	7, b
      0028DB 20 1B                 9210 	jr	NZ, 00116$
      0028DD 58                    9211 	ld	e, b
      0028DE 16 00                 9212 	ld	d, #0x00
      0028E0 3E 9B                 9213 	ld	a, #0x9b
      0028E2 B9                    9214 	cp	a, c
      0028E3 3E 00                 9215 	ld	a, #0x00
      0028E5 98                    9216 	sbc	a, b
      0028E6 CB 7B                 9217 	bit	7, e
      0028E8 28 07                 9218 	jr	Z, 00243$
      0028EA CB 7A                 9219 	bit	7, d
      0028EC 20 08                 9220 	jr	NZ, 00244$
      0028EE BF                    9221 	cp	a, a
      0028EF 18 05                 9222 	jr	00244$
      0028F1                       9223 00243$:
      0028F1 CB 7A                 9224 	bit	7, d
      0028F3 28 01                 9225 	jr	Z, 00244$
      0028F5 37                    9226 	scf
      0028F6                       9227 00244$:
      0028F6 30 78                 9228 	jr	NC, 00143$
      0028F8                       9229 00116$:
                                   9230 ;src/main.c:1006: pickup.visible = 0;
      0028F8 21rEBr00              9231 	ld	hl, #_pickup
      0028FB 36 00                 9232 	ld	(hl), #0x00
                                   9233 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0028FD 21r0Er00              9234 	ld	hl, #(_shadow_OAM + 14)
      002900 36 7F                 9235 	ld	(hl), #0x7f
                                   9236 ;src/main.c:1007: set_sprite_tile(3, 0x7f);
      002902 18 6C                 9237 	jr	00143$
      002904                       9238 00127$:
                                   9239 ;src/main.c:1011: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      002904 F8 00                 9240 	ldhl	sp,	#0
      002906 2A                    9241 	ld	a, (hl+)
      002907 D6 F6                 9242 	sub	a, #0xf6
      002909 7E                    9243 	ld	a, (hl)
      00290A DE FF                 9244 	sbc	a, #0xff
      00290C 56                    9245 	ld	d, (hl)
      00290D 3E FF                 9246 	ld	a, #0xff
      00290F CB 7F                 9247 	bit	7,a
      002911 28 07                 9248 	jr	Z, 00245$
      002913 CB 7A                 9249 	bit	7, d
      002915 20 08                 9250 	jr	NZ, 00246$
      002917 BF                    9251 	cp	a, a
      002918 18 05                 9252 	jr	00246$
      00291A                       9253 00245$:
      00291A CB 7A                 9254 	bit	7, d
      00291C 28 01                 9255 	jr	Z, 00246$
      00291E 37                    9256 	scf
      00291F                       9257 00246$:
      00291F 38 4F                 9258 	jr	C, 00143$
      002921 C1                    9259 	pop	bc
      002922 C5                    9260 	push	bc
      002923 58                    9261 	ld	e, b
      002924 16 00                 9262 	ld	d, #0x00
      002926 3E AA                 9263 	ld	a, #0xaa
      002928 B9                    9264 	cp	a, c
      002929 3E 00                 9265 	ld	a, #0x00
      00292B 98                    9266 	sbc	a, b
      00292C CB 7B                 9267 	bit	7, e
      00292E 28 07                 9268 	jr	Z, 00247$
      002930 CB 7A                 9269 	bit	7, d
      002932 20 08                 9270 	jr	NZ, 00248$
      002934 BF                    9271 	cp	a, a
      002935 18 05                 9272 	jr	00248$
      002937                       9273 00247$:
      002937 CB 7A                 9274 	bit	7, d
      002939 28 01                 9275 	jr	Z, 00248$
      00293B 37                    9276 	scf
      00293C                       9277 00248$:
      00293C 38 32                 9278 	jr	C, 00143$
      00293E 21rEEr00              9279 	ld	hl, #(_pickup + 3)
      002941 2A                    9280 	ld	a, (hl+)
      002942 4F                    9281 	ld	c, a
      002943 46                    9282 	ld	b, (hl)
      002944 CB 78                 9283 	bit	7, b
      002946 20 28                 9284 	jr	NZ, 00143$
      002948 58                    9285 	ld	e, b
      002949 16 00                 9286 	ld	d, #0x00
      00294B 3E 9B                 9287 	ld	a, #0x9b
      00294D B9                    9288 	cp	a, c
      00294E 3E 00                 9289 	ld	a, #0x00
      002950 98                    9290 	sbc	a, b
      002951 CB 7B                 9291 	bit	7, e
      002953 28 07                 9292 	jr	Z, 00249$
      002955 CB 7A                 9293 	bit	7, d
      002957 20 08                 9294 	jr	NZ, 00250$
      002959 BF                    9295 	cp	a, a
      00295A 18 05                 9296 	jr	00250$
      00295C                       9297 00249$:
      00295C CB 7A                 9298 	bit	7, d
      00295E 28 01                 9299 	jr	Z, 00250$
      002960 37                    9300 	scf
      002961                       9301 00250$:
      002961 38 0D                 9302 	jr	C, 00143$
                                   9303 ;src/main.c:1012: pickup.visible = 1;
      002963 21rEBr00              9304 	ld	hl, #_pickup
      002966 36 01                 9305 	ld	(hl), #0x01
                                   9306 ;src/main.c:1013: set_sprite_tile(3, pickup.tile);
      002968 21rF3r00              9307 	ld	hl, #(_pickup + 8)
      00296B 4E                    9308 	ld	c, (hl)
                                   9309 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00296C 21r0Er00              9310 	ld	hl, #(_shadow_OAM + 14)
      00296F 71                    9311 	ld	(hl), c
                                   9312 ;src/main.c:1013: set_sprite_tile(3, pickup.tile);
      002970                       9313 00143$:
                                   9314 ;src/main.c:1018: }
      002970 33                    9315 	inc	sp
      002971 33                    9316 	inc	sp
      002972 C9                    9317 	ret
                                   9318 ;src/main.c:1020: void initEnemyOptions() {
                                   9319 ;	---------------------------------
                                   9320 ; Function initEnemyOptions
                                   9321 ; ---------------------------------
      002973                       9322 _initEnemyOptions::
                                   9323 ;src/main.c:1021: enemyOptions[0] = blob;
      002973 11 11 00              9324 	ld	de, #0x0011
      002976 D5                    9325 	push	de
      002977 11r10r00              9326 	ld	de, #_blob
      00297A D5                    9327 	push	de
      00297B 11r00r00              9328 	ld	de, #_enemyOptions
      00297E D5                    9329 	push	de
      00297F CDr00r00              9330 	call	___memcpy
      002982 E8 06                 9331 	add	sp, #6
                                   9332 ;src/main.c:1022: enemyOptions[1] = bomb;
      002984 11 11 00              9333 	ld	de, #0x0011
      002987 D5                    9334 	push	de
      002988 11r21r00              9335 	ld	de, #_bomb
      00298B D5                    9336 	push	de
      00298C 11r11r00              9337 	ld	de, #(_enemyOptions + 17)
      00298F D5                    9338 	push	de
      002990 CDr00r00              9339 	call	___memcpy
      002993 E8 06                 9340 	add	sp, #6
                                   9341 ;src/main.c:1023: enemyOptions[2] = miniship;
      002995 11 11 00              9342 	ld	de, #0x0011
      002998 D5                    9343 	push	de
      002999 11r32r00              9344 	ld	de, #_miniship
      00299C D5                    9345 	push	de
      00299D 11r22r00              9346 	ld	de, #(_enemyOptions + 34)
      0029A0 D5                    9347 	push	de
      0029A1 CDr00r00              9348 	call	___memcpy
      0029A4 E8 06                 9349 	add	sp, #6
                                   9350 ;src/main.c:1024: enemyOptions[3] = shieldship;
      0029A6 11 11 00              9351 	ld	de, #0x0011
      0029A9 D5                    9352 	push	de
      0029AA 11r54r00              9353 	ld	de, #_shieldship
      0029AD D5                    9354 	push	de
      0029AE 11r33r00              9355 	ld	de, #(_enemyOptions + 51)
      0029B1 D5                    9356 	push	de
      0029B2 CDr00r00              9357 	call	___memcpy
      0029B5 E8 06                 9358 	add	sp, #6
                                   9359 ;src/main.c:1026: enemyOptions[4] = bigblob;
      0029B7 11 11 00              9360 	ld	de, #0x0011
      0029BA D5                    9361 	push	de
      0029BB 11r43r00              9362 	ld	de, #_bigblob
      0029BE D5                    9363 	push	de
      0029BF 11r44r00              9364 	ld	de, #(_enemyOptions + 68)
      0029C2 D5                    9365 	push	de
      0029C3 CDr00r00              9366 	call	___memcpy
      0029C6 E8 06                 9367 	add	sp, #6
                                   9368 ;src/main.c:1027: }
      0029C8 C9                    9369 	ret
                                   9370 ;src/main.c:1030: void initProjectiles() {
                                   9371 ;	---------------------------------
                                   9372 ; Function initProjectiles
                                   9373 ; ---------------------------------
      0029C9                       9374 _initProjectiles::
                                   9375 ;src/main.c:1031: set_sprite_data(0x20, 17, ProjectileTiles); 
      0029C9 11rE8r05              9376 	ld	de, #_ProjectileTiles
      0029CC D5                    9377 	push	de
      0029CD 21 20 11              9378 	ld	hl, #0x1120
      0029D0 E5                    9379 	push	hl
      0029D1 CDr00r00              9380 	call	_set_sprite_data
      0029D4 E8 04                 9381 	add	sp, #4
                                   9382 ;src/main.c:1033: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      0029D6 AF                    9383 	xor	a, a
      0029D7                       9384 00103$:
      0029D7 21r99r08              9385 	ld	hl, #_PROJECTILECOUNT
      0029DA 4E                    9386 	ld	c, (hl)
      0029DB B9                    9387 	cp	a, c
      0029DC D0                    9388 	ret	NC
      0029DD 3C                    9389 	inc	a
                                   9390 ;src/main.c:1037: }
      0029DE 18 F7                 9391 	jr	00103$
                                   9392 ;src/main.c:1039: void initGame() {
                                   9393 ;	---------------------------------
                                   9394 ; Function initGame
                                   9395 ; ---------------------------------
      0029E0                       9396 _initGame::
                                   9397 ;src/main.c:1042: xDir = 0;
      0029E0 21r8Br00              9398 	ld	hl, #_xDir
      0029E3 36 00                 9399 	ld	(hl), #0x00
                                   9400 ;src/main.c:1043: yDir = -1;
      0029E5 21r8Cr00              9401 	ld	hl, #_yDir
      0029E8 36 FF                 9402 	ld	(hl), #0xff
                                   9403 ;src/main.c:1044: xSpeed = 0;
      0029EA 21r8Dr00              9404 	ld	hl, #_xSpeed
      0029ED 36 00                 9405 	ld	(hl), #0x00
                                   9406 ;src/main.c:1045: ySpeed = 0;
      0029EF 21r8Er00              9407 	ld	hl, #_ySpeed
      0029F2 36 00                 9408 	ld	(hl), #0x00
                                   9409 ;src/main.c:1048: playerX = 80<<5;
      0029F4 21r8Fr00              9410 	ld	hl, #_playerX
      0029F7 36 00                 9411 	ld	(hl), #0x00
      0029F9 23                    9412 	inc	hl
      0029FA 36 0A                 9413 	ld	(hl), #0x0a
                                   9414 ;src/main.c:1049: playerY = 80<<5;
      0029FC 21r91r00              9415 	ld	hl, #_playerY
      0029FF 36 00                 9416 	ld	(hl), #0x00
      002A01 23                    9417 	inc	hl
      002A02 36 0A                 9418 	ld	(hl), #0x0a
                                   9419 ;src/main.c:1051: playerDrawX = 80;
      002A04 21r93r00              9420 	ld	hl, #_playerDrawX
      002A07 36 50                 9421 	ld	(hl), #0x50
                                   9422 ;src/main.c:1052: playerDrawY = 80;
      002A09 21r94r00              9423 	ld	hl, #_playerDrawY
      002A0C 36 50                 9424 	ld	(hl), #0x50
                                   9425 ;src/main.c:1055: bgX = 0;
      002A0E AF                    9426 	xor	a, a
      002A0F 21r95r00              9427 	ld	hl, #_bgX
      002A12 22                    9428 	ld	(hl+), a
      002A13 77                    9429 	ld	(hl), a
                                   9430 ;src/main.c:1056: bgY = 0;
      002A14 AF                    9431 	xor	a, a
      002A15 21r97r00              9432 	ld	hl, #_bgY
      002A18 22                    9433 	ld	(hl+), a
      002A19 77                    9434 	ld	(hl), a
                                   9435 ;src/main.c:1058: hull = maxHull;
      002A1A FAr9Br08              9436 	ld	a, (#_maxHull)
      002A1D EArE7r00              9437 	ld	(#_hull),a
                                   9438 ;src/main.c:1059: shield = maxShield;
      002A20 FAr9Cr08              9439 	ld	a, (#_maxShield)
      002A23 EArE8r00              9440 	ld	(#_shield),a
                                   9441 ;src/main.c:1061: DISPLAY_ON;
      002A26 F0r00                 9442 	ldh	a, (_LCDC_REG + 0)
      002A28 F6 80                 9443 	or	a, #0x80
      002A2A E0r00                 9444 	ldh	(_LCDC_REG + 0), a
                                   9445 ;src/main.c:1062: SPRITES_8x16;
      002A2C F0r00                 9446 	ldh	a, (_LCDC_REG + 0)
      002A2E F6 04                 9447 	or	a, #0x04
      002A30 E0r00                 9448 	ldh	(_LCDC_REG + 0), a
                                   9449 ;src/main.c:1063: set_sprite_data(0, 12, Player1);
      002A32 11r83r07              9450 	ld	de, #_Player1
      002A35 D5                    9451 	push	de
      002A36 21 00 0C              9452 	ld	hl, #0xc00
      002A39 E5                    9453 	push	hl
      002A3A CDr00r00              9454 	call	_set_sprite_data
      002A3D E8 04                 9455 	add	sp, #4
                                   9456 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002A3F 21r02r00              9457 	ld	hl, #(_shadow_OAM + 2)
      002A42 36 00                 9458 	ld	(hl), #0x00
      002A44 21r06r00              9459 	ld	hl, #(_shadow_OAM + 6)
      002A47 36 02                 9460 	ld	(hl), #0x02
                                   9461 ;src/main.c:1069: SHOW_SPRITES;
      002A49 F0r00                 9462 	ldh	a, (_LCDC_REG + 0)
      002A4B F6 02                 9463 	or	a, #0x02
      002A4D E0r00                 9464 	ldh	(_LCDC_REG + 0), a
                                   9465 ;src/main.c:1073: font_init();
      002A4F CDr00r00              9466 	call	_font_init
                                   9467 ;src/main.c:1075: min_font = font_load(font_min); // 36 tiles of characters
      002A52 11r00r00              9468 	ld	de, #_font_min
      002A55 D5                    9469 	push	de
      002A56 CDr00r00              9470 	call	_font_load
      002A59 E1                    9471 	pop	hl
      002A5A 21rE9r00              9472 	ld	hl, #_min_font
      002A5D 7B                    9473 	ld	a, e
      002A5E 22                    9474 	ld	(hl+), a
                                   9475 ;src/main.c:1076: font_set(min_font);
      002A5F 7A                    9476 	ld	a, d
      002A60 32                    9477 	ld	(hl-), a
      002A61 2A                    9478 	ld	a, (hl+)
      002A62 5F                    9479 	ld	e, a
      002A63 56                    9480 	ld	d, (hl)
      002A64 D5                    9481 	push	de
      002A65 CDr00r00              9482 	call	_font_set
      002A68 E1                    9483 	pop	hl
                                   9484 ;src/main.c:1077: set_win_tiles(1,0,4,1,hullabel);
      002A69 11r00r00              9485 	ld	de, #_hullabel
      002A6C D5                    9486 	push	de
      002A6D 21 04 01              9487 	ld	hl, #0x104
      002A70 E5                    9488 	push	hl
      002A71 21 01 00              9489 	ld	hl, #0x01
      002A74 E5                    9490 	push	hl
      002A75 CDr00r00              9491 	call	_set_win_tiles
      002A78 E8 06                 9492 	add	sp, #6
                                   9493 ;src/main.c:1078: set_win_tiles(1,1,4,1,shieldlabel);
      002A7A 11r04r00              9494 	ld	de, #_shieldlabel
      002A7D D5                    9495 	push	de
      002A7E 21 04 01              9496 	ld	hl, #0x104
      002A81 E5                    9497 	push	hl
      002A82 21 01 01              9498 	ld	hl, #0x101
      002A85 E5                    9499 	push	hl
      002A86 CDr00r00              9500 	call	_set_win_tiles
      002A89 E8 06                 9501 	add	sp, #6
                                   9502 ;src/main.c:1083: set_bkg_data(0x50,1,healthblock);
      002A8B 11r07r05              9503 	ld	de, #_healthblock
      002A8E D5                    9504 	push	de
      002A8F 21 50 01              9505 	ld	hl, #0x150
      002A92 E5                    9506 	push	hl
      002A93 CDr00r00              9507 	call	_set_bkg_data
      002A96 E8 04                 9508 	add	sp, #4
                                   9509 ;src/main.c:1085: setHealthBar(0, hull);
      002A98 FArE7r00              9510 	ld	a, (#_hull)
      002A9B 67                    9511 	ld	h, a
      002A9C 2E 00                 9512 	ld	l, #0x00
      002A9E E5                    9513 	push	hl
      002A9F CDr9Er08              9514 	call	_setHealthBar
      002AA2 E1                    9515 	pop	hl
                                   9516 ;src/main.c:1086: setHealthBar(1, shield);
      002AA3 FArE8r00              9517 	ld	a, (#_shield)
      002AA6 67                    9518 	ld	h, a
      002AA7 2E 01                 9519 	ld	l, #0x01
      002AA9 E5                    9520 	push	hl
      002AAA CDr9Er08              9521 	call	_setHealthBar
      002AAD E1                    9522 	pop	hl
                                   9523 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      002AAE 3E 07                 9524 	ld	a, #0x07
      002AB0 E0r00                 9525 	ldh	(_WX_REG + 0), a
      002AB2 3E 7E                 9526 	ld	a, #0x7e
      002AB4 E0r00                 9527 	ldh	(_WY_REG + 0), a
                                   9528 ;src/main.c:1093: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      002AB6 11r87r04              9529 	ld	de, #_backgroundtiles
      002AB9 D5                    9530 	push	de
      002ABA 21 25 08              9531 	ld	hl, #0x825
      002ABD E5                    9532 	push	hl
      002ABE CDr00r00              9533 	call	_set_bkg_data
      002AC1 E8 04                 9534 	add	sp, #4
                                   9535 ;src/main.c:1094: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      002AC3 11r87r00              9536 	ld	de, #_background1
      002AC6 D5                    9537 	push	de
      002AC7 21 20 20              9538 	ld	hl, #0x2020
      002ACA E5                    9539 	push	hl
      002ACB AF                    9540 	xor	a, a
      002ACC 0F                    9541 	rrca
      002ACD F5                    9542 	push	af
      002ACE CDr00r00              9543 	call	_set_bkg_tiles
      002AD1 E8 06                 9544 	add	sp, #6
                                   9545 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      002AD3 AF                    9546 	xor	a, a
      002AD4 E0r00                 9547 	ldh	(_SCX_REG + 0), a
      002AD6 AF                    9548 	xor	a, a
      002AD7 E0r00                 9549 	ldh	(_SCY_REG + 0), a
                                   9550 ;src/main.c:1100: set_bkg_data(0x51, 18, ProjectileTiles);
      002AD9 11rE8r05              9551 	ld	de, #_ProjectileTiles
      002ADC D5                    9552 	push	de
      002ADD 21 51 12              9553 	ld	hl, #0x1251
      002AE0 E5                    9554 	push	hl
      002AE1 CDr00r00              9555 	call	_set_bkg_data
      002AE4 E8 04                 9556 	add	sp, #4
                                   9557 ;src/main.c:1102: set_win_tiles(10, 0,4,1,weaponlabel);
      002AE6 11r08r00              9558 	ld	de, #_weaponlabel
      002AE9 D5                    9559 	push	de
      002AEA 21 04 01              9560 	ld	hl, #0x104
      002AED E5                    9561 	push	hl
      002AEE 21 0A 00              9562 	ld	hl, #0x0a
      002AF1 E5                    9563 	push	hl
      002AF2 CDr00r00              9564 	call	_set_win_tiles
      002AF5 E8 06                 9565 	add	sp, #6
                                   9566 ;src/main.c:1103: set_win_tiles(10, 1,4,1,scorelabel);
      002AF7 11r0Cr00              9567 	ld	de, #_scorelabel
      002AFA D5                    9568 	push	de
      002AFB 21 04 01              9569 	ld	hl, #0x104
      002AFE E5                    9570 	push	hl
      002AFF 21 0A 01              9571 	ld	hl, #0x10a
      002B02 E5                    9572 	push	hl
      002B03 CDr00r00              9573 	call	_set_win_tiles
      002B06 E8 06                 9574 	add	sp, #6
                                   9575 ;src/main.c:1105: setGunIcon();
      002B08 CDr78r20              9576 	call	_setGunIcon
                                   9577 ;src/main.c:1106: SHOW_BKG;
      002B0B F0r00                 9578 	ldh	a, (_LCDC_REG + 0)
      002B0D F6 01                 9579 	or	a, #0x01
      002B0F E0r00                 9580 	ldh	(_LCDC_REG + 0), a
                                   9581 ;src/main.c:1107: SHOW_WIN;;
      002B11 F0r00                 9582 	ldh	a, (_LCDC_REG + 0)
      002B13 F6 20                 9583 	or	a, #0x20
      002B15 E0r00                 9584 	ldh	(_LCDC_REG + 0), a
                                   9585 ;src/main.c:1109: SCORE = MAKE_BCD(00000);
      002B17 AF                    9586 	xor	a, a
      002B18 21rABr00              9587 	ld	hl, #_SCORE
      002B1B 22                    9588 	ld	(hl+), a
      002B1C 22                    9589 	ld	(hl+), a
      002B1D 22                    9590 	ld	(hl+), a
      002B1E 77                    9591 	ld	(hl), a
                                   9592 ;src/main.c:1110: updateScore();
      002B1F CDrAFr09              9593 	call	_updateScore
                                   9594 ;src/main.c:1111: MISSILES = MAKE_BCD(1);
      002B22 21rA1r00              9595 	ld	hl, #_MISSILES
      002B25 3E 01                 9596 	ld	a, #0x01
      002B27 22                    9597 	ld	(hl+), a
      002B28 AF                    9598 	xor	a, a
      002B29 22                    9599 	ld	(hl+), a
      002B2A 22                    9600 	ld	(hl+), a
      002B2B 77                    9601 	ld	(hl), a
                                   9602 ;src/main.c:1112: updateMissileCount(0);
      002B2C AF                    9603 	xor	a, a
      002B2D F5                    9604 	push	af
      002B2E 33                    9605 	inc	sp
      002B2F CDrD9r09              9606 	call	_updateMissileCount
      002B32 33                    9607 	inc	sp
                                   9608 ;src/main.c:1113: set_win_tiles(17, 0,1,1,gunMap+2);
      002B33 11rA8r00              9609 	ld	de, #(_gunMap + 2)
      002B36 D5                    9610 	push	de
      002B37 21 01 01              9611 	ld	hl, #0x101
      002B3A E5                    9612 	push	hl
      002B3B 21 11 00              9613 	ld	hl, #0x11
      002B3E E5                    9614 	push	hl
      002B3F CDr00r00              9615 	call	_set_win_tiles
      002B42 E8 06                 9616 	add	sp, #6
                                   9617 ;src/main.c:1117: pickup = upgrade;//upgrade;
      002B44 11 09 00              9618 	ld	de, #0x0009
      002B47 D5                    9619 	push	de
      002B48 11r08r07              9620 	ld	de, #_upgrade
      002B4B D5                    9621 	push	de
      002B4C 11rEBr00              9622 	ld	de, #_pickup
      002B4F D5                    9623 	push	de
      002B50 CDr00r00              9624 	call	___memcpy
      002B53 E8 06                 9625 	add	sp, #6
                                   9626 ;src/main.c:1119: set_sprite_data(0x70, 6, Pickups);
      002B55 11r23r07              9627 	ld	de, #_Pickups
      002B58 D5                    9628 	push	de
      002B59 21 70 06              9629 	ld	hl, #0x670
      002B5C E5                    9630 	push	hl
      002B5D CDr00r00              9631 	call	_set_sprite_data
      002B60 E8 04                 9632 	add	sp, #4
                                   9633 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002B62 21r0Er00              9634 	ld	hl, #(_shadow_OAM + 14)
      002B65 36 7F                 9635 	ld	(hl), #0x7f
                                   9636 ;src/main.c:1123: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002B67 FArEEr00              9637 	ld	a, (#(_pickup + 3) + 0)
      002B6A C6 0C                 9638 	add	a, #0x0c
      002B6C 47                    9639 	ld	b, a
      002B6D FArECr00              9640 	ld	a, (#(_pickup + 1) + 0)
      002B70 C6 04                 9641 	add	a, #0x04
      002B72 4F                    9642 	ld	c, a
                                   9643 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002B73 21r0Cr00              9644 	ld	hl, #(_shadow_OAM + 12)
                                   9645 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002B76 78                    9646 	ld	a, b
      002B77 22                    9647 	ld	(hl+), a
      002B78 71                    9648 	ld	(hl), c
                                   9649 ;src/main.c:1123: move_sprite(3, pickup.x + 4, pickup.y + 12);
                                   9650 ;src/main.c:1125: }
      002B79 C9                    9651 	ret
                                   9652 ;src/main.c:1127: void main(){
                                   9653 ;	---------------------------------
                                   9654 ; Function main
                                   9655 ; ---------------------------------
      002B7A                       9656 _main::
                                   9657 ;src/main.c:1130: initEnemyOptions();
      002B7A CDr73r29              9658 	call	_initEnemyOptions
                                   9659 ;src/main.c:1133: STAT_REG = 0x45;
      002B7D 3E 45                 9660 	ld	a, #0x45
      002B7F E0r00                 9661 	ldh	(_STAT_REG + 0), a
                                   9662 ;src/main.c:1134: LYC_REG = 0x7e; //line 126
      002B81 3E 7E                 9663 	ld	a, #0x7e
      002B83 E0r00                 9664 	ldh	(_LYC_REG + 0), a
                                   9665 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      002B85 F3                    9666 	di
                                   9667 ;src/main.c:1136: add_LCD(interruptLCD);
      002B86 11r00r00              9668 	ld	de, #_interruptLCD
      002B89 D5                    9669 	push	de
      002B8A CDr00r00              9670 	call	_add_LCD
      002B8D 33                    9671 	inc	sp
      002B8E 33                    9672 	inc	sp
                                   9673 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      002B8F FB                    9674 	ei
                                   9675 ;src/main.c:1138: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      002B90 3E 03                 9676 	ld	a, #0x03
      002B92 F5                    9677 	push	af
      002B93 33                    9678 	inc	sp
      002B94 CDr00r00              9679 	call	_set_interrupts
      002B97 33                    9680 	inc	sp
                                   9681 ;src/main.c:1142: NR52_REG = 0x80; // sound on 
      002B98 3E 80                 9682 	ld	a, #0x80
      002B9A E0r00                 9683 	ldh	(_NR52_REG + 0), a
                                   9684 ;src/main.c:1143: NR50_REG = 0x77; // volume
      002B9C 3E 77                 9685 	ld	a, #0x77
      002B9E E0r00                 9686 	ldh	(_NR50_REG + 0), a
                                   9687 ;src/main.c:1144: NR51_REG = 0xFF; // all channels
      002BA0 3E FF                 9688 	ld	a, #0xff
      002BA2 E0r00                 9689 	ldh	(_NR51_REG + 0), a
                                   9690 ;src/main.c:1148: waitpad(J_A);
      002BA4 3E 10                 9691 	ld	a, #0x10
      002BA6 F5                    9692 	push	af
      002BA7 33                    9693 	inc	sp
      002BA8 CDr00r00              9694 	call	_waitpad
      002BAB 33                    9695 	inc	sp
                                   9696 ;src/main.c:1149: uint16_t seed = LY_REG;
      002BAC F0r00                 9697 	ldh	a, (_LY_REG + 0)
      002BAE 4F                    9698 	ld	c, a
      002BAF 06 00                 9699 	ld	b, #0x00
                                   9700 ;src/main.c:1150: seed |= (uint16_t)DIV_REG << 8;
      002BB1 F0r00                 9701 	ldh	a, (_DIV_REG + 0)
      002BB3 5F                    9702 	ld	e, a
      002BB4 AF                    9703 	xor	a, a
      002BB5 B1                    9704 	or	a, c
      002BB6 4F                    9705 	ld	c, a
      002BB7 7B                    9706 	ld	a, e
      002BB8 B0                    9707 	or	a, b
      002BB9 47                    9708 	ld	b, a
                                   9709 ;src/main.c:1151: initrand(seed);
      002BBA C5                    9710 	push	bc
      002BBB CDr00r00              9711 	call	_initrand
      002BBE E1                    9712 	pop	hl
                                   9713 ;src/main.c:1156: initGame();
      002BBF CDrE0r29              9714 	call	_initGame
                                   9715 ;src/main.c:1157: initEnemies(1);
      002BC2 3E 01                 9716 	ld	a, #0x01
      002BC4 F5                    9717 	push	af
      002BC5 33                    9718 	inc	sp
      002BC6 CDr04r0D              9719 	call	_initEnemies
      002BC9 33                    9720 	inc	sp
                                   9721 ;src/main.c:1158: initProjectiles();
      002BCA CDrC9r29              9722 	call	_initProjectiles
                                   9723 ;src/main.c:1160: while(1) {
      002BCD                       9724 00119$:
                                   9725 ;src/main.c:1161: SHOW_SPRITES;
      002BCD F0r00                 9726 	ldh	a, (_LCDC_REG + 0)
      002BCF F6 02                 9727 	or	a, #0x02
      002BD1 E0r00                 9728 	ldh	(_LCDC_REG + 0), a
                                   9729 ;src/main.c:1163: joydata = joypad(); // query for button states
      002BD3 CDr00r00              9730 	call	_joypad
      002BD6 21rE6r00              9731 	ld	hl, #_joydata
      002BD9 73                    9732 	ld	(hl), e
                                   9733 ;src/main.c:1165: updateDirection(); // set player direction
      002BDA CDr77r0A              9734 	call	_updateDirection
                                   9735 ;src/main.c:1168: move(); 
      002BDD CDrCEr16              9736 	call	_move
                                   9737 ;src/main.c:1170: updateEnemyPositions();
      002BE0 CDr6Fr0E              9738 	call	_updateEnemyPositions
                                   9739 ;src/main.c:1173: checkCollision(); 
      002BE3 CDrCBr1C              9740 	call	_checkCollision
                                   9741 ;src/main.c:853: if (shield < maxShield) {
      002BE6 21r9Cr08              9742 	ld	hl, #_maxShield
      002BE9 4E                    9743 	ld	c, (hl)
      002BEA 59                    9744 	ld	e, c
      002BEB 21rE8r00              9745 	ld	hl, #_shield
      002BEE 56                    9746 	ld	d, (hl)
      002BEF 7E                    9747 	ld	a, (hl)
      002BF0 91                    9748 	sub	a, c
      002BF1 CB 7B                 9749 	bit	7, e
      002BF3 28 07                 9750 	jr	Z, 00186$
      002BF5 CB 7A                 9751 	bit	7, d
      002BF7 20 08                 9752 	jr	NZ, 00187$
      002BF9 BF                    9753 	cp	a, a
      002BFA 18 05                 9754 	jr	00187$
      002BFC                       9755 00186$:
      002BFC CB 7A                 9756 	bit	7, d
      002BFE 28 01                 9757 	jr	Z, 00187$
      002C00 37                    9758 	scf
      002C01                       9759 00187$:
      002C01 30 04                 9760 	jr	NC, 00127$
                                   9761 ;src/main.c:854: shield += 1;
      002C03 21rE8r00              9762 	ld	hl, #_shield
      002C06 34                    9763 	inc	(hl)
      002C07                       9764 00127$:
                                   9765 ;src/main.c:856: setHealthBar(0, hull);
      002C07 FArE7r00              9766 	ld	a, (#_hull)
      002C0A 67                    9767 	ld	h, a
      002C0B 2E 00                 9768 	ld	l, #0x00
      002C0D E5                    9769 	push	hl
      002C0E CDr9Er08              9770 	call	_setHealthBar
      002C11 E1                    9771 	pop	hl
                                   9772 ;src/main.c:857: setHealthBar(1, shield);
      002C12 FArE8r00              9773 	ld	a, (#_shield)
      002C15 67                    9774 	ld	h, a
      002C16 2E 01                 9775 	ld	l, #0x01
      002C18 E5                    9776 	push	hl
      002C19 CDr9Er08              9777 	call	_setHealthBar
      002C1C E1                    9778 	pop	hl
                                   9779 ;src/main.c:1178: if (joydata & J_B && fireCooldown == 0) {
      002C1D FArE6r00              9780 	ld	a, (#_joydata)
      002C20 CB 6F                 9781 	bit	5, a
      002C22 28 09                 9782 	jr	Z, 00102$
      002C24 FAr8Ar00              9783 	ld	a, (#_fireCooldown)
      002C27 B7                    9784 	or	a, a
      002C28 20 03                 9785 	jr	NZ, 00102$
                                   9786 ;src/main.c:1179: fire();
      002C2A CDrABr20              9787 	call	_fire
      002C2D                       9788 00102$:
                                   9789 ;src/main.c:1181: if (fireCooldown > 0) {
      002C2D 21r8Ar00              9790 	ld	hl, #_fireCooldown
      002C30 7E                    9791 	ld	a, (hl)
      002C31 B7                    9792 	or	a, a
      002C32 28 01                 9793 	jr	Z, 00105$
                                   9794 ;src/main.c:1182: --fireCooldown;
      002C34 35                    9795 	dec	(hl)
      002C35                       9796 00105$:
                                   9797 ;src/main.c:1185: if (joydata & J_SELECT && switchDelay == 0) {
      002C35 FArE6r00              9798 	ld	a, (#_joydata)
      002C38 CB 77                 9799 	bit	6, a
      002C3A 28 24                 9800 	jr	Z, 00112$
      002C3C FArA5r00              9801 	ld	a, (#_switchDelay)
      002C3F B7                    9802 	or	a, a
      002C40 20 1E                 9803 	jr	NZ, 00112$
                                   9804 ;src/main.c:1186: if (currentGun == 0) {
      002C42 21r9Fr00              9805 	ld	hl, #_currentGun
      002C45 7E                    9806 	ld	a, (hl)
      002C46 B7                    9807 	or	a, a
      002C47 20 04                 9808 	jr	NZ, 00109$
                                   9809 ;src/main.c:1187: currentGun = 1;
      002C49 36 01                 9810 	ld	(hl), #0x01
      002C4B 18 0B                 9811 	jr	00110$
      002C4D                       9812 00109$:
                                   9813 ;src/main.c:1189: else if (currentGun == 1) {
      002C4D FAr9Fr00              9814 	ld	a, (#_currentGun)
      002C50 3D                    9815 	dec	a
      002C51 20 05                 9816 	jr	NZ, 00110$
                                   9817 ;src/main.c:1190: currentGun = 0;
      002C53 21r9Fr00              9818 	ld	hl, #_currentGun
      002C56 36 00                 9819 	ld	(hl), #0x00
      002C58                       9820 00110$:
                                   9821 ;src/main.c:1192: setGunIcon();
      002C58 CDr78r20              9822 	call	_setGunIcon
                                   9823 ;src/main.c:1193: switchDelay = 30;
      002C5B 21rA5r00              9824 	ld	hl, #_switchDelay
      002C5E 36 1E                 9825 	ld	(hl), #0x1e
      002C60                       9826 00112$:
                                   9827 ;src/main.c:1195: if (switchDelay != 0) {
      002C60 21rA5r00              9828 	ld	hl, #_switchDelay
      002C63 7E                    9829 	ld	a, (hl)
      002C64 B7                    9830 	or	a, a
      002C65 28 01                 9831 	jr	Z, 00115$
                                   9832 ;src/main.c:1196: switchDelay--;
      002C67 35                    9833 	dec	(hl)
      002C68                       9834 00115$:
                                   9835 ;src/main.c:1198: moveProjectiles();
      002C68 CDr44r26              9836 	call	_moveProjectiles
                                   9837 ;src/main.c:1199: tickPickups();
      002C6B CDrA3r27              9838 	call	_tickPickups
                                   9839 ;src/main.c:1203: if (hull > 100) {
      002C6E 3E 64                 9840 	ld	a, #0x64
      002C70 21rE7r00              9841 	ld	hl, #_hull
      002C73 96                    9842 	sub	a, (hl)
      002C74 30 02                 9843 	jr	NC, 00117$
                                   9844 ;src/main.c:1204: hull = 0;
      002C76 36 00                 9845 	ld	(hl), #0x00
      002C78                       9846 00117$:
                                   9847 ;src/main.c:1207: SHOW_WIN;	
      002C78 F0r00                 9848 	ldh	a, (_LCDC_REG + 0)
      002C7A F6 20                 9849 	or	a, #0x20
      002C7C E0r00                 9850 	ldh	(_LCDC_REG + 0), a
                                   9851 ;src/main.c:1208: wait_vbl_done(); // Idle until next frame
      002C7E CDr00r00              9852 	call	_wait_vbl_done
                                   9853 ;src/main.c:1213: }
      002C81 C3rCDr2B              9854 	jp	00119$
                                   9855 	.area _CODE
                                   9856 	.area _INITIALIZER
      000000                       9857 __xinit__hullabel:
      000000 12                    9858 	.db #0x12	; 18
      000001 1F                    9859 	.db #0x1f	; 31
      000002 16                    9860 	.db #0x16	; 22
      000003 16                    9861 	.db #0x16	; 22
      000004                       9862 __xinit__shieldlabel:
      000004 1D                    9863 	.db #0x1d	; 29
      000005 12                    9864 	.db #0x12	; 18
      000006 16                    9865 	.db #0x16	; 22
      000007 0E                    9866 	.db #0x0e	; 14
      000008                       9867 __xinit__weaponlabel:
      000008 21                    9868 	.db #0x21	; 33
      000009 0F                    9869 	.db #0x0f	; 15
      00000A 1A                    9870 	.db #0x1a	; 26
      00000B 18                    9871 	.db #0x18	; 24
      00000C                       9872 __xinit__scorelabel:
      00000C 1D                    9873 	.db #0x1d	; 29
      00000D 0D                    9874 	.db #0x0d	; 13
      00000E 1C                    9875 	.db #0x1c	; 28
      00000F 0F                    9876 	.db #0x0f	; 15
      000010                       9877 __xinit__blob:
      000010 00 00                 9878 	.dw #0x0000
      000012 00 00                 9879 	.dw #0x0000
      000014 00                    9880 	.db #0x00	;  0
      000015 00                    9881 	.db #0x00	;  0
      000016 40                    9882 	.db #0x40	; 64
      000017 00                    9883 	.db #0x00	; 0
      000018 01                    9884 	.db #0x01	; 1
      000019 01                    9885 	.db #0x01	; 1
      00001A 01                    9886 	.db #0x01	; 1
      00001B 32                    9887 	.db #0x32	; 50	'2'
      00001C 03                    9888 	.db #0x03	;  3
      00001D 01                    9889 	.db #0x01	; 1
      00001E 00                    9890 	.db #0x00	;  0
      00001F 00                    9891 	.db #0x00	;  0
      000020 64                    9892 	.db #0x64	;  100	'd'
      000021                       9893 __xinit__bomb:
      000021 00 00                 9894 	.dw #0x0000
      000023 00 00                 9895 	.dw #0x0000
      000025 00                    9896 	.db #0x00	;  0
      000026 00                    9897 	.db #0x00	;  0
      000027 42                    9898 	.db #0x42	; 66	'B'
      000028 00                    9899 	.db #0x00	; 0
      000029 01                    9900 	.db #0x01	; 1
      00002A 01                    9901 	.db #0x01	; 1
      00002B 01                    9902 	.db #0x01	; 1
      00002C 32                    9903 	.db #0x32	; 50	'2'
      00002D 05                    9904 	.db #0x05	;  5
      00002E 01                    9905 	.db #0x01	; 1
      00002F 00                    9906 	.db #0x00	;  0
      000030 00                    9907 	.db #0x00	;  0
      000031 64                    9908 	.db #0x64	;  100	'd'
      000032                       9909 __xinit__miniship:
      000032 00 00                 9910 	.dw #0x0000
      000034 00 00                 9911 	.dw #0x0000
      000036 00                    9912 	.db #0x00	;  0
      000037 00                    9913 	.db #0x00	;  0
      000038 44                    9914 	.db #0x44	; 68	'D'
      000039 00                    9915 	.db #0x00	; 0
      00003A 01                    9916 	.db #0x01	; 1
      00003B 01                    9917 	.db #0x01	; 1
      00003C 01                    9918 	.db #0x01	; 1
      00003D 32                    9919 	.db #0x32	; 50	'2'
      00003E 05                    9920 	.db #0x05	;  5
      00003F 01                    9921 	.db #0x01	; 1
      000040 00                    9922 	.db #0x00	;  0
      000041 00                    9923 	.db #0x00	;  0
      000042 64                    9924 	.db #0x64	;  100	'd'
      000043                       9925 __xinit__bigblob:
      000043 00 00                 9926 	.dw #0x0000
      000045 00 00                 9927 	.dw #0x0000
      000047 00                    9928 	.db #0x00	;  0
      000048 00                    9929 	.db #0x00	;  0
      000049 50                    9930 	.db #0x50	; 80	'P'
      00004A 52                    9931 	.db #0x52	; 82	'R'
      00004B 02                    9932 	.db #0x02	; 2
      00004C 01                    9933 	.db #0x01	; 1
      00004D 01                    9934 	.db #0x01	; 1
      00004E 32                    9935 	.db #0x32	; 50	'2'
      00004F 03                    9936 	.db #0x03	;  3
      000050 01                    9937 	.db #0x01	; 1
      000051 00                    9938 	.db #0x00	;  0
      000052 00                    9939 	.db #0x00	;  0
      000053 64                    9940 	.db #0x64	;  100	'd'
      000054                       9941 __xinit__shieldship:
      000054 00 00                 9942 	.dw #0x0000
      000056 00 00                 9943 	.dw #0x0000
      000058 00                    9944 	.db #0x00	;  0
      000059 00                    9945 	.db #0x00	;  0
      00005A 54                    9946 	.db #0x54	; 84	'T'
      00005B 56                    9947 	.db #0x56	; 86	'V'
      00005C 02                    9948 	.db #0x02	; 2
      00005D 01                    9949 	.db #0x01	; 1
      00005E 01                    9950 	.db #0x01	; 1
      00005F 32                    9951 	.db #0x32	; 50	'2'
      000060 03                    9952 	.db #0x03	;  3
      000061 01                    9953 	.db #0x01	; 1
      000062 00                    9954 	.db #0x00	;  0
      000063 00                    9955 	.db #0x00	;  0
      000064 64                    9956 	.db #0x64	;  100	'd'
      000065                       9957 __xinit__singleGun:
      000065 00 00                 9958 	.dw #0x0000
      000067 00 00                 9959 	.dw #0x0000
      000069 00                    9960 	.db #0x00	;  0
      00006A 00                    9961 	.db #0x00	;  0
      00006B FF                    9962 	.db #0xff	; -1
      00006C 02                    9963 	.db #0x02	; 2
      00006D 32                    9964 	.db #0x32	; 50	'2'
      00006E 01                    9965 	.db #0x01	; 1
      00006F 0F                    9966 	.db #0x0f	; 15
      000070 20                    9967 	.db #0x20	; 32
      000071                       9968 __xinit__doubleGun:
      000071 00 00                 9969 	.dw #0x0000
      000073 00 00                 9970 	.dw #0x0000
      000075 00                    9971 	.db #0x00	;  0
      000076 00                    9972 	.db #0x00	;  0
      000077 FF                    9973 	.db #0xff	; -1
      000078 02                    9974 	.db #0x02	; 2
      000079 46                    9975 	.db #0x46	; 70	'F'
      00007A 01                    9976 	.db #0x01	; 1
      00007B 0F                    9977 	.db #0x0f	; 15
      00007C 26                    9978 	.db #0x26	; 38
      00007D                       9979 __xinit__missile:
      00007D 00 00                 9980 	.dw #0x0000
      00007F 00 00                 9981 	.dw #0x0000
      000081 00                    9982 	.db #0x00	;  0
      000082 00                    9983 	.db #0x00	;  0
      000083 FF                    9984 	.db #0xff	; -1
      000084 01                    9985 	.db #0x01	; 1
      000085 64                    9986 	.db #0x64	; 100	'd'
      000086 01                    9987 	.db #0x01	; 1
      000087 1E                    9988 	.db #0x1e	; 30
      000088 2C                    9989 	.db #0x2c	; 44
      000089                       9990 __xinit__oldestProjectile:
      000089 00                    9991 	.db #0x00	; 0
      00008A                       9992 __xinit__fireCooldown:
      00008A 00                    9993 	.db #0x00	; 0
      00008B                       9994 __xinit__xDir:
      00008B 00                    9995 	.db #0x00	;  0
      00008C                       9996 __xinit__yDir:
      00008C FF                    9997 	.db #0xff	; -1
      00008D                       9998 __xinit__xSpeed:
      00008D 00                    9999 	.db #0x00	;  0
      00008E                      10000 __xinit__ySpeed:
      00008E 00                   10001 	.db #0x00	;  0
      00008F                      10002 __xinit__playerX:
      00008F 00 0A                10003 	.dw #0x0a00
      000091                      10004 __xinit__playerY:
      000091 00 0A                10005 	.dw #0x0a00
      000093                      10006 __xinit__playerDrawX:
      000093 50                   10007 	.db #0x50	; 80	'P'
      000094                      10008 __xinit__playerDrawY:
      000094 50                   10009 	.db #0x50	; 80	'P'
      000095                      10010 __xinit__bgX:
      000095 00 00                10011 	.dw #0x0000
      000097                      10012 __xinit__bgY:
      000097 00 00                10013 	.dw #0x0000
      000099                      10014 __xinit__xOverflow:
      000099 00 00                10015 	.dw #0x0000
      00009B                      10016 __xinit__yOverflow:
      00009B 00 00                10017 	.dw #0x0000
      00009D                      10018 __xinit__enemyCollisionCount:
      00009D 00                   10019 	.db #0x00	; 0
      00009E                      10020 __xinit__gunLevel:
      00009E 00                   10021 	.db #0x00	; 0
      00009F                      10022 __xinit__currentGun:
      00009F 00                   10023 	.db #0x00	; 0
      0000A0                      10024 __xinit__missiles:
      0000A0 01                   10025 	.db #0x01	; 1
      0000A1                      10026 __xinit__MISSILES:
      0000A1 01 00 00 00          10027 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000A5                      10028 __xinit__switchDelay:
      0000A5 00                   10029 	.db #0x00	; 0
      0000A6                      10030 __xinit__gunMap:
      0000A6 53                   10031 	.db #0x53	; 83	'S'
      0000A7 5B                   10032 	.db #0x5b	; 91
      0000A8 61                   10033 	.db #0x61	; 97	'a'
      0000A9                      10034 __xinit__score:
      0000A9 00 00                10035 	.dw #0x0000
      0000AB                      10036 __xinit__SCORE:
      0000AB 00 00 00 00          10037 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000AF                      10038 __xinit__INCREMENT:
      0000AF 01 00 00 00          10039 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                  10040 	.area _CABS (ABS)
