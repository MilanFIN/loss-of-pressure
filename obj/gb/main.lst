                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickPickups
                                     16 	.globl _moveProjectiles
                                     17 	.globl _fire
                                     18 	.globl _setGunIcon
                                     19 	.globl _checkCollision
                                     20 	.globl _takeDamage
                                     21 	.globl _move
                                     22 	.globl _updateEnemyPositions
                                     23 	.globl _initEnemies
                                     24 	.globl _playSound
                                     25 	.globl _updateDirection
                                     26 	.globl _incrementScore
                                     27 	.globl _updateMissileCount
                                     28 	.globl _updateScore
                                     29 	.globl _setHealthBar
                                     30 	.globl _interruptLCD
                                     31 	.globl _bcd2text
                                     32 	.globl _bcd_sub
                                     33 	.globl _bcd_add
                                     34 	.globl _rand
                                     35 	.globl _initrand
                                     36 	.globl _font_set
                                     37 	.globl _font_load
                                     38 	.globl _font_init
                                     39 	.globl _set_sprite_data
                                     40 	.globl _set_win_tiles
                                     41 	.globl _set_bkg_tiles
                                     42 	.globl _set_bkg_data
                                     43 	.globl _wait_vbl_done
                                     44 	.globl _set_interrupts
                                     45 	.globl _waitpad
                                     46 	.globl _joypad
                                     47 	.globl _add_LCD
                                     48 	.globl _INCREMENT
                                     49 	.globl _SCORE
                                     50 	.globl _score
                                     51 	.globl _gunMap
                                     52 	.globl _switchDelay
                                     53 	.globl _MISSILES
                                     54 	.globl _missiles
                                     55 	.globl _currentGun
                                     56 	.globl _gunLevel
                                     57 	.globl _enemyCollisionCount
                                     58 	.globl _yOverflow
                                     59 	.globl _xOverflow
                                     60 	.globl _bgY
                                     61 	.globl _bgX
                                     62 	.globl _playerDrawY
                                     63 	.globl _playerDrawX
                                     64 	.globl _playerY
                                     65 	.globl _playerX
                                     66 	.globl _ySpeed
                                     67 	.globl _xSpeed
                                     68 	.globl _yDir
                                     69 	.globl _xDir
                                     70 	.globl _fireCooldown
                                     71 	.globl _oldestProjectile
                                     72 	.globl _weapon
                                     73 	.globl _ammo
                                     74 	.globl _missile
                                     75 	.globl _doubleGun
                                     76 	.globl _singleGun
                                     77 	.globl _shieldship
                                     78 	.globl _bigblob
                                     79 	.globl _miniship
                                     80 	.globl _bomb
                                     81 	.globl _blob
                                     82 	.globl _scorelabel
                                     83 	.globl _weaponlabel
                                     84 	.globl _shieldlabel
                                     85 	.globl _hullabel
                                     86 	.globl _pickup
                                     87 	.globl _min_font
                                     88 	.globl _shield
                                     89 	.globl _hull
                                     90 	.globl _joydata
                                     91 	.globl _projectiles
                                     92 	.globl _enemies
                                     93 	.globl _enemyOptions
                                     94 	.globl _maxShield
                                     95 	.globl _maxHull
                                     96 	.globl _PLAYERSIZE
                                     97 	.globl _PROJECTILECOUNT
                                     98 	.globl _ySpawnPositions
                                     99 	.globl _xSpawnPositions
                                    100 	.globl _ENEMYCOUNT
                                    101 	.globl _EMPTYSPRITE
                                    102 	.globl _BLANK
                                    103 	.globl _BLANKSIZE
                                    104 	.globl _Player1
                                    105 	.globl _Pickups
                                    106 	.globl _ProjectileTiles
                                    107 	.globl _largeenemies
                                    108 	.globl _enemy1
                                    109 	.globl _enemyOptionCount
                                    110 	.globl _healthblock
                                    111 	.globl _backgroundtiles
                                    112 	.globl _background1
                                    113 	.globl _cross
                                    114 ;--------------------------------------------------------
                                    115 ; special function registers
                                    116 ;--------------------------------------------------------
                                    117 ;--------------------------------------------------------
                                    118 ; ram data
                                    119 ;--------------------------------------------------------
                                    120 	.area _DATA
      000000                        121 _enemyOptions::
      000000                        122 	.ds 80
      000050                        123 _enemies::
      000050                        124 	.ds 80
      0000A0                        125 _projectiles::
      0000A0                        126 	.ds 60
      0000DC                        127 _joydata::
      0000DC                        128 	.ds 1
      0000DD                        129 _hull::
      0000DD                        130 	.ds 1
      0000DE                        131 _shield::
      0000DE                        132 	.ds 1
      0000DF                        133 _min_font::
      0000DF                        134 	.ds 2
      0000E1                        135 _pickup::
      0000E1                        136 	.ds 6
                                    137 ;--------------------------------------------------------
                                    138 ; ram data
                                    139 ;--------------------------------------------------------
                                    140 	.area _INITIALIZED
      000000                        141 _hullabel::
      000000                        142 	.ds 4
      000004                        143 _shieldlabel::
      000004                        144 	.ds 4
      000008                        145 _weaponlabel::
      000008                        146 	.ds 4
      00000C                        147 _scorelabel::
      00000C                        148 	.ds 4
      000010                        149 _blob::
      000010                        150 	.ds 16
      000020                        151 _bomb::
      000020                        152 	.ds 16
      000030                        153 _miniship::
      000030                        154 	.ds 16
      000040                        155 _bigblob::
      000040                        156 	.ds 16
      000050                        157 _shieldship::
      000050                        158 	.ds 16
      000060                        159 _singleGun::
      000060                        160 	.ds 12
      00006C                        161 _doubleGun::
      00006C                        162 	.ds 12
      000078                        163 _missile::
      000078                        164 	.ds 12
      000084                        165 _ammo::
      000084                        166 	.ds 6
      00008A                        167 _weapon::
      00008A                        168 	.ds 6
      000090                        169 _oldestProjectile::
      000090                        170 	.ds 1
      000091                        171 _fireCooldown::
      000091                        172 	.ds 1
      000092                        173 _xDir::
      000092                        174 	.ds 1
      000093                        175 _yDir::
      000093                        176 	.ds 1
      000094                        177 _xSpeed::
      000094                        178 	.ds 1
      000095                        179 _ySpeed::
      000095                        180 	.ds 1
      000096                        181 _playerX::
      000096                        182 	.ds 2
      000098                        183 _playerY::
      000098                        184 	.ds 2
      00009A                        185 _playerDrawX::
      00009A                        186 	.ds 1
      00009B                        187 _playerDrawY::
      00009B                        188 	.ds 1
      00009C                        189 _bgX::
      00009C                        190 	.ds 2
      00009E                        191 _bgY::
      00009E                        192 	.ds 2
      0000A0                        193 _xOverflow::
      0000A0                        194 	.ds 2
      0000A2                        195 _yOverflow::
      0000A2                        196 	.ds 2
      0000A4                        197 _enemyCollisionCount::
      0000A4                        198 	.ds 1
      0000A5                        199 _gunLevel::
      0000A5                        200 	.ds 1
      0000A6                        201 _currentGun::
      0000A6                        202 	.ds 1
      0000A7                        203 _missiles::
      0000A7                        204 	.ds 1
      0000A8                        205 _MISSILES::
      0000A8                        206 	.ds 4
      0000AC                        207 _switchDelay::
      0000AC                        208 	.ds 1
      0000AD                        209 _gunMap::
      0000AD                        210 	.ds 3
      0000B0                        211 _score::
      0000B0                        212 	.ds 2
      0000B2                        213 _SCORE::
      0000B2                        214 	.ds 4
      0000B6                        215 _INCREMENT::
      0000B6                        216 	.ds 4
                                    217 ;--------------------------------------------------------
                                    218 ; absolute external ram data
                                    219 ;--------------------------------------------------------
                                    220 	.area _DABS (ABS)
                                    221 ;--------------------------------------------------------
                                    222 ; global & static initialisations
                                    223 ;--------------------------------------------------------
                                    224 	.area _HOME
                                    225 	.area _GSINIT
                                    226 	.area _GSFINAL
                                    227 	.area _GSINIT
                                    228 ;--------------------------------------------------------
                                    229 ; Home
                                    230 ;--------------------------------------------------------
                                    231 	.area _HOME
                                    232 	.area _HOME
                                    233 ;--------------------------------------------------------
                                    234 ; code
                                    235 ;--------------------------------------------------------
                                    236 	.area _CODE
                                    237 ;src/main.c:113: void interruptLCD()
                                    238 ;	---------------------------------
                                    239 ; Function interruptLCD
                                    240 ; ---------------------------------
      000000                        241 _interruptLCD::
                                    242 ;src/main.c:115: HIDE_SPRITES;
      000000 F0r00                  243 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  244 	and	a, #0xfd
      000004 E0r00                  245 	ldh	(_LCDC_REG + 0), a
                                    246 ;src/main.c:116: }
      000006 C9                     247 	ret
      000007                        248 _cross:
      000007 18                     249 	.db #0x18	; 24
      000008 18                     250 	.db #0x18	; 24
      000009 18                     251 	.db #0x18	; 24
      00000A 18                     252 	.db #0x18	; 24
      00000B 3C                     253 	.db #0x3c	; 60
      00000C 3C                     254 	.db #0x3c	; 60
      00000D 3C                     255 	.db #0x3c	; 60
      00000E 3C                     256 	.db #0x3c	; 60
      00000F 7E                     257 	.db #0x7e	; 126
      000010 7E                     258 	.db #0x7e	; 126
      000011 7E                     259 	.db #0x7e	; 126
      000012 7E                     260 	.db #0x7e	; 126
      000013 FF                     261 	.db #0xff	; 255
      000014 FF                     262 	.db #0xff	; 255
      000015 FF                     263 	.db #0xff	; 255
      000016 FF                     264 	.db #0xff	; 255
      000017 0F                     265 	.db #0x0f	; 15
      000018 0F                     266 	.db #0x0f	; 15
      000019 3F                     267 	.db #0x3f	; 63
      00001A 3F                     268 	.db #0x3f	; 63
      00001B FF                     269 	.db #0xff	; 255
      00001C FF                     270 	.db #0xff	; 255
      00001D FF                     271 	.db #0xff	; 255
      00001E FF                     272 	.db #0xff	; 255
      00001F 7E                     273 	.db #0x7e	; 126
      000020 7E                     274 	.db #0x7e	; 126
      000021 3E                     275 	.db #0x3e	; 62
      000022 3E                     276 	.db #0x3e	; 62
      000023 1C                     277 	.db #0x1c	; 28
      000024 1C                     278 	.db #0x1c	; 28
      000025 0C                     279 	.db #0x0c	; 12
      000026 0C                     280 	.db #0x0c	; 12
      000027 C0                     281 	.db #0xc0	; 192
      000028 C0                     282 	.db #0xc0	; 192
      000029 F0                     283 	.db #0xf0	; 240
      00002A F0                     284 	.db #0xf0	; 240
      00002B FC                     285 	.db #0xfc	; 252
      00002C FC                     286 	.db #0xfc	; 252
      00002D FF                     287 	.db #0xff	; 255
      00002E FF                     288 	.db #0xff	; 255
      00002F FF                     289 	.db #0xff	; 255
      000030 FF                     290 	.db #0xff	; 255
      000031 FC                     291 	.db #0xfc	; 252
      000032 FC                     292 	.db #0xfc	; 252
      000033 F0                     293 	.db #0xf0	; 240
      000034 F0                     294 	.db #0xf0	; 240
      000035 C0                     295 	.db #0xc0	; 192
      000036 C0                     296 	.db #0xc0	; 192
      000037 0C                     297 	.db #0x0c	; 12
      000038 0C                     298 	.db #0x0c	; 12
      000039 1C                     299 	.db #0x1c	; 28
      00003A 1C                     300 	.db #0x1c	; 28
      00003B 3E                     301 	.db #0x3e	; 62
      00003C 3E                     302 	.db #0x3e	; 62
      00003D 7E                     303 	.db #0x7e	; 126
      00003E 7E                     304 	.db #0x7e	; 126
      00003F FF                     305 	.db #0xff	; 255
      000040 FF                     306 	.db #0xff	; 255
      000041 FF                     307 	.db #0xff	; 255
      000042 FF                     308 	.db #0xff	; 255
      000043 3F                     309 	.db #0x3f	; 63
      000044 3F                     310 	.db #0x3f	; 63
      000045 0F                     311 	.db #0x0f	; 15
      000046 0F                     312 	.db #0x0f	; 15
      000047 FF                     313 	.db #0xff	; 255
      000048 FF                     314 	.db #0xff	; 255
      000049 FF                     315 	.db #0xff	; 255
      00004A FF                     316 	.db #0xff	; 255
      00004B 7E                     317 	.db #0x7e	; 126
      00004C 7E                     318 	.db #0x7e	; 126
      00004D 7E                     319 	.db #0x7e	; 126
      00004E 7E                     320 	.db #0x7e	; 126
      00004F 3C                     321 	.db #0x3c	; 60
      000050 3C                     322 	.db #0x3c	; 60
      000051 3C                     323 	.db #0x3c	; 60
      000052 3C                     324 	.db #0x3c	; 60
      000053 18                     325 	.db #0x18	; 24
      000054 18                     326 	.db #0x18	; 24
      000055 18                     327 	.db #0x18	; 24
      000056 18                     328 	.db #0x18	; 24
      000057 30                     329 	.db #0x30	; 48	'0'
      000058 30                     330 	.db #0x30	; 48	'0'
      000059 38                     331 	.db #0x38	; 56	'8'
      00005A 38                     332 	.db #0x38	; 56	'8'
      00005B 7C                     333 	.db #0x7c	; 124
      00005C 7C                     334 	.db #0x7c	; 124
      00005D 7E                     335 	.db #0x7e	; 126
      00005E 7E                     336 	.db #0x7e	; 126
      00005F FF                     337 	.db #0xff	; 255
      000060 FF                     338 	.db #0xff	; 255
      000061 FF                     339 	.db #0xff	; 255
      000062 FF                     340 	.db #0xff	; 255
      000063 FC                     341 	.db #0xfc	; 252
      000064 FC                     342 	.db #0xfc	; 252
      000065 F0                     343 	.db #0xf0	; 240
      000066 F0                     344 	.db #0xf0	; 240
      000067 03                     345 	.db #0x03	; 3
      000068 03                     346 	.db #0x03	; 3
      000069 0F                     347 	.db #0x0f	; 15
      00006A 0F                     348 	.db #0x0f	; 15
      00006B 3F                     349 	.db #0x3f	; 63
      00006C 3F                     350 	.db #0x3f	; 63
      00006D FF                     351 	.db #0xff	; 255
      00006E FF                     352 	.db #0xff	; 255
      00006F FF                     353 	.db #0xff	; 255
      000070 FF                     354 	.db #0xff	; 255
      000071 3F                     355 	.db #0x3f	; 63
      000072 3F                     356 	.db #0x3f	; 63
      000073 0F                     357 	.db #0x0f	; 15
      000074 0F                     358 	.db #0x0f	; 15
      000075 03                     359 	.db #0x03	; 3
      000076 03                     360 	.db #0x03	; 3
      000077 F0                     361 	.db #0xf0	; 240
      000078 F0                     362 	.db #0xf0	; 240
      000079 FC                     363 	.db #0xfc	; 252
      00007A FC                     364 	.db #0xfc	; 252
      00007B FF                     365 	.db #0xff	; 255
      00007C FF                     366 	.db #0xff	; 255
      00007D FF                     367 	.db #0xff	; 255
      00007E FF                     368 	.db #0xff	; 255
      00007F 7E                     369 	.db #0x7e	; 126
      000080 7E                     370 	.db #0x7e	; 126
      000081 7C                     371 	.db #0x7c	; 124
      000082 7C                     372 	.db #0x7c	; 124
      000083 38                     373 	.db #0x38	; 56	'8'
      000084 38                     374 	.db #0x38	; 56	'8'
      000085 30                     375 	.db #0x30	; 48	'0'
      000086 30                     376 	.db #0x30	; 48	'0'
      000087                        377 _background1:
      000087 26                     378 	.db #0x26	; 38
      000088 26                     379 	.db #0x26	; 38
      000089 26                     380 	.db #0x26	; 38
      00008A 26                     381 	.db #0x26	; 38
      00008B 26                     382 	.db #0x26	; 38
      00008C 26                     383 	.db #0x26	; 38
      00008D 26                     384 	.db #0x26	; 38
      00008E 26                     385 	.db #0x26	; 38
      00008F 26                     386 	.db #0x26	; 38
      000090 26                     387 	.db #0x26	; 38
      000091 26                     388 	.db #0x26	; 38
      000092 2A                     389 	.db #0x2a	; 42
      000093 29                     390 	.db #0x29	; 41
      000094 26                     391 	.db #0x26	; 38
      000095 26                     392 	.db #0x26	; 38
      000096 26                     393 	.db #0x26	; 38
      000097 26                     394 	.db #0x26	; 38
      000098 26                     395 	.db #0x26	; 38
      000099 26                     396 	.db #0x26	; 38
      00009A 26                     397 	.db #0x26	; 38
      00009B 2C                     398 	.db #0x2c	; 44
      00009C 26                     399 	.db #0x26	; 38
      00009D 26                     400 	.db #0x26	; 38
      00009E 26                     401 	.db #0x26	; 38
      00009F 26                     402 	.db #0x26	; 38
      0000A0 26                     403 	.db #0x26	; 38
      0000A1 26                     404 	.db #0x26	; 38
      0000A2 26                     405 	.db #0x26	; 38
      0000A3 26                     406 	.db #0x26	; 38
      0000A4 26                     407 	.db #0x26	; 38
      0000A5 26                     408 	.db #0x26	; 38
      0000A6 26                     409 	.db #0x26	; 38
      0000A7 26                     410 	.db #0x26	; 38
      0000A8 2B                     411 	.db #0x2b	; 43
      0000A9 26                     412 	.db #0x26	; 38
      0000AA 26                     413 	.db #0x26	; 38
      0000AB 26                     414 	.db #0x26	; 38
      0000AC 26                     415 	.db #0x26	; 38
      0000AD 26                     416 	.db #0x26	; 38
      0000AE 26                     417 	.db #0x26	; 38
      0000AF 26                     418 	.db #0x26	; 38
      0000B0 26                     419 	.db #0x26	; 38
      0000B1 26                     420 	.db #0x26	; 38
      0000B2 26                     421 	.db #0x26	; 38
      0000B3 26                     422 	.db #0x26	; 38
      0000B4 26                     423 	.db #0x26	; 38
      0000B5 26                     424 	.db #0x26	; 38
      0000B6 26                     425 	.db #0x26	; 38
      0000B7 26                     426 	.db #0x26	; 38
      0000B8 26                     427 	.db #0x26	; 38
      0000B9 26                     428 	.db #0x26	; 38
      0000BA 26                     429 	.db #0x26	; 38
      0000BB 26                     430 	.db #0x26	; 38
      0000BC 26                     431 	.db #0x26	; 38
      0000BD 26                     432 	.db #0x26	; 38
      0000BE 26                     433 	.db #0x26	; 38
      0000BF 26                     434 	.db #0x26	; 38
      0000C0 26                     435 	.db #0x26	; 38
      0000C1 26                     436 	.db #0x26	; 38
      0000C2 26                     437 	.db #0x26	; 38
      0000C3 26                     438 	.db #0x26	; 38
      0000C4 26                     439 	.db #0x26	; 38
      0000C5 26                     440 	.db #0x26	; 38
      0000C6 26                     441 	.db #0x26	; 38
      0000C7 26                     442 	.db #0x26	; 38
      0000C8 26                     443 	.db #0x26	; 38
      0000C9 26                     444 	.db #0x26	; 38
      0000CA 26                     445 	.db #0x26	; 38
      0000CB 26                     446 	.db #0x26	; 38
      0000CC 26                     447 	.db #0x26	; 38
      0000CD 26                     448 	.db #0x26	; 38
      0000CE 26                     449 	.db #0x26	; 38
      0000CF 26                     450 	.db #0x26	; 38
      0000D0 26                     451 	.db #0x26	; 38
      0000D1 26                     452 	.db #0x26	; 38
      0000D2 26                     453 	.db #0x26	; 38
      0000D3 26                     454 	.db #0x26	; 38
      0000D4 26                     455 	.db #0x26	; 38
      0000D5 26                     456 	.db #0x26	; 38
      0000D6 26                     457 	.db #0x26	; 38
      0000D7 26                     458 	.db #0x26	; 38
      0000D8 26                     459 	.db #0x26	; 38
      0000D9 26                     460 	.db #0x26	; 38
      0000DA 26                     461 	.db #0x26	; 38
      0000DB 26                     462 	.db #0x26	; 38
      0000DC 26                     463 	.db #0x26	; 38
      0000DD 26                     464 	.db #0x26	; 38
      0000DE 26                     465 	.db #0x26	; 38
      0000DF 26                     466 	.db #0x26	; 38
      0000E0 26                     467 	.db #0x26	; 38
      0000E1 26                     468 	.db #0x26	; 38
      0000E2 26                     469 	.db #0x26	; 38
      0000E3 26                     470 	.db #0x26	; 38
      0000E4 26                     471 	.db #0x26	; 38
      0000E5 26                     472 	.db #0x26	; 38
      0000E6 26                     473 	.db #0x26	; 38
      0000E7 26                     474 	.db #0x26	; 38
      0000E8 26                     475 	.db #0x26	; 38
      0000E9 26                     476 	.db #0x26	; 38
      0000EA 26                     477 	.db #0x26	; 38
      0000EB 26                     478 	.db #0x26	; 38
      0000EC 26                     479 	.db #0x26	; 38
      0000ED 26                     480 	.db #0x26	; 38
      0000EE 26                     481 	.db #0x26	; 38
      0000EF 26                     482 	.db #0x26	; 38
      0000F0 26                     483 	.db #0x26	; 38
      0000F1 26                     484 	.db #0x26	; 38
      0000F2 26                     485 	.db #0x26	; 38
      0000F3 26                     486 	.db #0x26	; 38
      0000F4 26                     487 	.db #0x26	; 38
      0000F5 26                     488 	.db #0x26	; 38
      0000F6 26                     489 	.db #0x26	; 38
      0000F7 26                     490 	.db #0x26	; 38
      0000F8 2B                     491 	.db #0x2b	; 43
      0000F9 26                     492 	.db #0x26	; 38
      0000FA 26                     493 	.db #0x26	; 38
      0000FB 26                     494 	.db #0x26	; 38
      0000FC 26                     495 	.db #0x26	; 38
      0000FD 26                     496 	.db #0x26	; 38
      0000FE 26                     497 	.db #0x26	; 38
      0000FF 2B                     498 	.db #0x2b	; 43
      000100 26                     499 	.db #0x26	; 38
      000101 26                     500 	.db #0x26	; 38
      000102 26                     501 	.db #0x26	; 38
      000103 26                     502 	.db #0x26	; 38
      000104 26                     503 	.db #0x26	; 38
      000105 26                     504 	.db #0x26	; 38
      000106 26                     505 	.db #0x26	; 38
      000107 26                     506 	.db #0x26	; 38
      000108 26                     507 	.db #0x26	; 38
      000109 26                     508 	.db #0x26	; 38
      00010A 26                     509 	.db #0x26	; 38
      00010B 26                     510 	.db #0x26	; 38
      00010C 2B                     511 	.db #0x2b	; 43
      00010D 26                     512 	.db #0x26	; 38
      00010E 26                     513 	.db #0x26	; 38
      00010F 26                     514 	.db #0x26	; 38
      000110 26                     515 	.db #0x26	; 38
      000111 26                     516 	.db #0x26	; 38
      000112 26                     517 	.db #0x26	; 38
      000113 26                     518 	.db #0x26	; 38
      000114 2C                     519 	.db #0x2c	; 44
      000115 26                     520 	.db #0x26	; 38
      000116 26                     521 	.db #0x26	; 38
      000117 26                     522 	.db #0x26	; 38
      000118 26                     523 	.db #0x26	; 38
      000119 26                     524 	.db #0x26	; 38
      00011A 26                     525 	.db #0x26	; 38
      00011B 26                     526 	.db #0x26	; 38
      00011C 26                     527 	.db #0x26	; 38
      00011D 26                     528 	.db #0x26	; 38
      00011E 26                     529 	.db #0x26	; 38
      00011F 26                     530 	.db #0x26	; 38
      000120 26                     531 	.db #0x26	; 38
      000121 26                     532 	.db #0x26	; 38
      000122 26                     533 	.db #0x26	; 38
      000123 26                     534 	.db #0x26	; 38
      000124 26                     535 	.db #0x26	; 38
      000125 26                     536 	.db #0x26	; 38
      000126 26                     537 	.db #0x26	; 38
      000127 26                     538 	.db #0x26	; 38
      000128 26                     539 	.db #0x26	; 38
      000129 2C                     540 	.db #0x2c	; 44
      00012A 26                     541 	.db #0x26	; 38
      00012B 26                     542 	.db #0x26	; 38
      00012C 26                     543 	.db #0x26	; 38
      00012D 26                     544 	.db #0x26	; 38
      00012E 25                     545 	.db #0x25	; 37
      00012F 26                     546 	.db #0x26	; 38
      000130 26                     547 	.db #0x26	; 38
      000131 26                     548 	.db #0x26	; 38
      000132 26                     549 	.db #0x26	; 38
      000133 26                     550 	.db #0x26	; 38
      000134 26                     551 	.db #0x26	; 38
      000135 26                     552 	.db #0x26	; 38
      000136 26                     553 	.db #0x26	; 38
      000137 26                     554 	.db #0x26	; 38
      000138 26                     555 	.db #0x26	; 38
      000139 26                     556 	.db #0x26	; 38
      00013A 26                     557 	.db #0x26	; 38
      00013B 26                     558 	.db #0x26	; 38
      00013C 2C                     559 	.db #0x2c	; 44
      00013D 26                     560 	.db #0x26	; 38
      00013E 26                     561 	.db #0x26	; 38
      00013F 26                     562 	.db #0x26	; 38
      000140 26                     563 	.db #0x26	; 38
      000141 26                     564 	.db #0x26	; 38
      000142 26                     565 	.db #0x26	; 38
      000143 26                     566 	.db #0x26	; 38
      000144 2B                     567 	.db #0x2b	; 43
      000145 26                     568 	.db #0x26	; 38
      000146 26                     569 	.db #0x26	; 38
      000147 26                     570 	.db #0x26	; 38
      000148 26                     571 	.db #0x26	; 38
      000149 26                     572 	.db #0x26	; 38
      00014A 26                     573 	.db #0x26	; 38
      00014B 26                     574 	.db #0x26	; 38
      00014C 26                     575 	.db #0x26	; 38
      00014D 26                     576 	.db #0x26	; 38
      00014E 26                     577 	.db #0x26	; 38
      00014F 26                     578 	.db #0x26	; 38
      000150 26                     579 	.db #0x26	; 38
      000151 26                     580 	.db #0x26	; 38
      000152 26                     581 	.db #0x26	; 38
      000153 26                     582 	.db #0x26	; 38
      000154 26                     583 	.db #0x26	; 38
      000155 26                     584 	.db #0x26	; 38
      000156 26                     585 	.db #0x26	; 38
      000157 26                     586 	.db #0x26	; 38
      000158 26                     587 	.db #0x26	; 38
      000159 26                     588 	.db #0x26	; 38
      00015A 26                     589 	.db #0x26	; 38
      00015B 26                     590 	.db #0x26	; 38
      00015C 26                     591 	.db #0x26	; 38
      00015D 26                     592 	.db #0x26	; 38
      00015E 26                     593 	.db #0x26	; 38
      00015F 26                     594 	.db #0x26	; 38
      000160 2C                     595 	.db #0x2c	; 44
      000161 26                     596 	.db #0x26	; 38
      000162 26                     597 	.db #0x26	; 38
      000163 26                     598 	.db #0x26	; 38
      000164 26                     599 	.db #0x26	; 38
      000165 26                     600 	.db #0x26	; 38
      000166 26                     601 	.db #0x26	; 38
      000167 26                     602 	.db #0x26	; 38
      000168 26                     603 	.db #0x26	; 38
      000169 26                     604 	.db #0x26	; 38
      00016A 26                     605 	.db #0x26	; 38
      00016B 26                     606 	.db #0x26	; 38
      00016C 26                     607 	.db #0x26	; 38
      00016D 26                     608 	.db #0x26	; 38
      00016E 26                     609 	.db #0x26	; 38
      00016F 26                     610 	.db #0x26	; 38
      000170 26                     611 	.db #0x26	; 38
      000171 26                     612 	.db #0x26	; 38
      000172 26                     613 	.db #0x26	; 38
      000173 26                     614 	.db #0x26	; 38
      000174 26                     615 	.db #0x26	; 38
      000175 26                     616 	.db #0x26	; 38
      000176 26                     617 	.db #0x26	; 38
      000177 26                     618 	.db #0x26	; 38
      000178 26                     619 	.db #0x26	; 38
      000179 26                     620 	.db #0x26	; 38
      00017A 26                     621 	.db #0x26	; 38
      00017B 26                     622 	.db #0x26	; 38
      00017C 26                     623 	.db #0x26	; 38
      00017D 26                     624 	.db #0x26	; 38
      00017E 26                     625 	.db #0x26	; 38
      00017F 26                     626 	.db #0x26	; 38
      000180 26                     627 	.db #0x26	; 38
      000181 26                     628 	.db #0x26	; 38
      000182 26                     629 	.db #0x26	; 38
      000183 26                     630 	.db #0x26	; 38
      000184 26                     631 	.db #0x26	; 38
      000185 26                     632 	.db #0x26	; 38
      000186 26                     633 	.db #0x26	; 38
      000187 26                     634 	.db #0x26	; 38
      000188 26                     635 	.db #0x26	; 38
      000189 26                     636 	.db #0x26	; 38
      00018A 26                     637 	.db #0x26	; 38
      00018B 26                     638 	.db #0x26	; 38
      00018C 26                     639 	.db #0x26	; 38
      00018D 26                     640 	.db #0x26	; 38
      00018E 26                     641 	.db #0x26	; 38
      00018F 26                     642 	.db #0x26	; 38
      000190 26                     643 	.db #0x26	; 38
      000191 26                     644 	.db #0x26	; 38
      000192 26                     645 	.db #0x26	; 38
      000193 26                     646 	.db #0x26	; 38
      000194 26                     647 	.db #0x26	; 38
      000195 2B                     648 	.db #0x2b	; 43
      000196 26                     649 	.db #0x26	; 38
      000197 26                     650 	.db #0x26	; 38
      000198 26                     651 	.db #0x26	; 38
      000199 26                     652 	.db #0x26	; 38
      00019A 26                     653 	.db #0x26	; 38
      00019B 26                     654 	.db #0x26	; 38
      00019C 26                     655 	.db #0x26	; 38
      00019D 26                     656 	.db #0x26	; 38
      00019E 26                     657 	.db #0x26	; 38
      00019F 26                     658 	.db #0x26	; 38
      0001A0 26                     659 	.db #0x26	; 38
      0001A1 26                     660 	.db #0x26	; 38
      0001A2 26                     661 	.db #0x26	; 38
      0001A3 26                     662 	.db #0x26	; 38
      0001A4 26                     663 	.db #0x26	; 38
      0001A5 26                     664 	.db #0x26	; 38
      0001A6 25                     665 	.db #0x25	; 37
      0001A7 26                     666 	.db #0x26	; 38
      0001A8 26                     667 	.db #0x26	; 38
      0001A9 26                     668 	.db #0x26	; 38
      0001AA 2B                     669 	.db #0x2b	; 43
      0001AB 26                     670 	.db #0x26	; 38
      0001AC 26                     671 	.db #0x26	; 38
      0001AD 26                     672 	.db #0x26	; 38
      0001AE 26                     673 	.db #0x26	; 38
      0001AF 26                     674 	.db #0x26	; 38
      0001B0 26                     675 	.db #0x26	; 38
      0001B1 26                     676 	.db #0x26	; 38
      0001B2 26                     677 	.db #0x26	; 38
      0001B3 26                     678 	.db #0x26	; 38
      0001B4 26                     679 	.db #0x26	; 38
      0001B5 26                     680 	.db #0x26	; 38
      0001B6 26                     681 	.db #0x26	; 38
      0001B7 26                     682 	.db #0x26	; 38
      0001B8 26                     683 	.db #0x26	; 38
      0001B9 26                     684 	.db #0x26	; 38
      0001BA 26                     685 	.db #0x26	; 38
      0001BB 26                     686 	.db #0x26	; 38
      0001BC 26                     687 	.db #0x26	; 38
      0001BD 26                     688 	.db #0x26	; 38
      0001BE 26                     689 	.db #0x26	; 38
      0001BF 26                     690 	.db #0x26	; 38
      0001C0 26                     691 	.db #0x26	; 38
      0001C1 26                     692 	.db #0x26	; 38
      0001C2 26                     693 	.db #0x26	; 38
      0001C3 26                     694 	.db #0x26	; 38
      0001C4 2B                     695 	.db #0x2b	; 43
      0001C5 26                     696 	.db #0x26	; 38
      0001C6 26                     697 	.db #0x26	; 38
      0001C7 26                     698 	.db #0x26	; 38
      0001C8 26                     699 	.db #0x26	; 38
      0001C9 26                     700 	.db #0x26	; 38
      0001CA 26                     701 	.db #0x26	; 38
      0001CB 26                     702 	.db #0x26	; 38
      0001CC 26                     703 	.db #0x26	; 38
      0001CD 26                     704 	.db #0x26	; 38
      0001CE 26                     705 	.db #0x26	; 38
      0001CF 26                     706 	.db #0x26	; 38
      0001D0 26                     707 	.db #0x26	; 38
      0001D1 26                     708 	.db #0x26	; 38
      0001D2 26                     709 	.db #0x26	; 38
      0001D3 26                     710 	.db #0x26	; 38
      0001D4 26                     711 	.db #0x26	; 38
      0001D5 26                     712 	.db #0x26	; 38
      0001D6 26                     713 	.db #0x26	; 38
      0001D7 26                     714 	.db #0x26	; 38
      0001D8 26                     715 	.db #0x26	; 38
      0001D9 26                     716 	.db #0x26	; 38
      0001DA 27                     717 	.db #0x27	; 39
      0001DB 28                     718 	.db #0x28	; 40
      0001DC 26                     719 	.db #0x26	; 38
      0001DD 26                     720 	.db #0x26	; 38
      0001DE 26                     721 	.db #0x26	; 38
      0001DF 26                     722 	.db #0x26	; 38
      0001E0 26                     723 	.db #0x26	; 38
      0001E1 26                     724 	.db #0x26	; 38
      0001E2 26                     725 	.db #0x26	; 38
      0001E3 26                     726 	.db #0x26	; 38
      0001E4 26                     727 	.db #0x26	; 38
      0001E5 26                     728 	.db #0x26	; 38
      0001E6 26                     729 	.db #0x26	; 38
      0001E7 26                     730 	.db #0x26	; 38
      0001E8 26                     731 	.db #0x26	; 38
      0001E9 26                     732 	.db #0x26	; 38
      0001EA 26                     733 	.db #0x26	; 38
      0001EB 26                     734 	.db #0x26	; 38
      0001EC 26                     735 	.db #0x26	; 38
      0001ED 26                     736 	.db #0x26	; 38
      0001EE 26                     737 	.db #0x26	; 38
      0001EF 26                     738 	.db #0x26	; 38
      0001F0 26                     739 	.db #0x26	; 38
      0001F1 26                     740 	.db #0x26	; 38
      0001F2 26                     741 	.db #0x26	; 38
      0001F3 26                     742 	.db #0x26	; 38
      0001F4 26                     743 	.db #0x26	; 38
      0001F5 26                     744 	.db #0x26	; 38
      0001F6 26                     745 	.db #0x26	; 38
      0001F7 26                     746 	.db #0x26	; 38
      0001F8 26                     747 	.db #0x26	; 38
      0001F9 26                     748 	.db #0x26	; 38
      0001FA 2A                     749 	.db #0x2a	; 42
      0001FB 29                     750 	.db #0x29	; 41
      0001FC 26                     751 	.db #0x26	; 38
      0001FD 26                     752 	.db #0x26	; 38
      0001FE 26                     753 	.db #0x26	; 38
      0001FF 26                     754 	.db #0x26	; 38
      000200 26                     755 	.db #0x26	; 38
      000201 26                     756 	.db #0x26	; 38
      000202 26                     757 	.db #0x26	; 38
      000203 26                     758 	.db #0x26	; 38
      000204 26                     759 	.db #0x26	; 38
      000205 26                     760 	.db #0x26	; 38
      000206 26                     761 	.db #0x26	; 38
      000207 26                     762 	.db #0x26	; 38
      000208 26                     763 	.db #0x26	; 38
      000209 26                     764 	.db #0x26	; 38
      00020A 26                     765 	.db #0x26	; 38
      00020B 26                     766 	.db #0x26	; 38
      00020C 26                     767 	.db #0x26	; 38
      00020D 26                     768 	.db #0x26	; 38
      00020E 27                     769 	.db #0x27	; 39
      00020F 28                     770 	.db #0x28	; 40
      000210 26                     771 	.db #0x26	; 38
      000211 26                     772 	.db #0x26	; 38
      000212 26                     773 	.db #0x26	; 38
      000213 26                     774 	.db #0x26	; 38
      000214 26                     775 	.db #0x26	; 38
      000215 26                     776 	.db #0x26	; 38
      000216 26                     777 	.db #0x26	; 38
      000217 26                     778 	.db #0x26	; 38
      000218 26                     779 	.db #0x26	; 38
      000219 26                     780 	.db #0x26	; 38
      00021A 26                     781 	.db #0x26	; 38
      00021B 26                     782 	.db #0x26	; 38
      00021C 26                     783 	.db #0x26	; 38
      00021D 26                     784 	.db #0x26	; 38
      00021E 26                     785 	.db #0x26	; 38
      00021F 2C                     786 	.db #0x2c	; 44
      000220 26                     787 	.db #0x26	; 38
      000221 26                     788 	.db #0x26	; 38
      000222 26                     789 	.db #0x26	; 38
      000223 26                     790 	.db #0x26	; 38
      000224 26                     791 	.db #0x26	; 38
      000225 26                     792 	.db #0x26	; 38
      000226 26                     793 	.db #0x26	; 38
      000227 26                     794 	.db #0x26	; 38
      000228 26                     795 	.db #0x26	; 38
      000229 26                     796 	.db #0x26	; 38
      00022A 26                     797 	.db #0x26	; 38
      00022B 26                     798 	.db #0x26	; 38
      00022C 26                     799 	.db #0x26	; 38
      00022D 26                     800 	.db #0x26	; 38
      00022E 2A                     801 	.db #0x2a	; 42
      00022F 29                     802 	.db #0x29	; 41
      000230 26                     803 	.db #0x26	; 38
      000231 26                     804 	.db #0x26	; 38
      000232 26                     805 	.db #0x26	; 38
      000233 26                     806 	.db #0x26	; 38
      000234 26                     807 	.db #0x26	; 38
      000235 26                     808 	.db #0x26	; 38
      000236 26                     809 	.db #0x26	; 38
      000237 26                     810 	.db #0x26	; 38
      000238 26                     811 	.db #0x26	; 38
      000239 26                     812 	.db #0x26	; 38
      00023A 26                     813 	.db #0x26	; 38
      00023B 26                     814 	.db #0x26	; 38
      00023C 26                     815 	.db #0x26	; 38
      00023D 25                     816 	.db #0x25	; 37
      00023E 26                     817 	.db #0x26	; 38
      00023F 26                     818 	.db #0x26	; 38
      000240 26                     819 	.db #0x26	; 38
      000241 26                     820 	.db #0x26	; 38
      000242 26                     821 	.db #0x26	; 38
      000243 26                     822 	.db #0x26	; 38
      000244 2C                     823 	.db #0x2c	; 44
      000245 26                     824 	.db #0x26	; 38
      000246 26                     825 	.db #0x26	; 38
      000247 26                     826 	.db #0x26	; 38
      000248 26                     827 	.db #0x26	; 38
      000249 26                     828 	.db #0x26	; 38
      00024A 26                     829 	.db #0x26	; 38
      00024B 26                     830 	.db #0x26	; 38
      00024C 26                     831 	.db #0x26	; 38
      00024D 26                     832 	.db #0x26	; 38
      00024E 26                     833 	.db #0x26	; 38
      00024F 26                     834 	.db #0x26	; 38
      000250 26                     835 	.db #0x26	; 38
      000251 26                     836 	.db #0x26	; 38
      000252 26                     837 	.db #0x26	; 38
      000253 26                     838 	.db #0x26	; 38
      000254 26                     839 	.db #0x26	; 38
      000255 26                     840 	.db #0x26	; 38
      000256 26                     841 	.db #0x26	; 38
      000257 26                     842 	.db #0x26	; 38
      000258 26                     843 	.db #0x26	; 38
      000259 26                     844 	.db #0x26	; 38
      00025A 26                     845 	.db #0x26	; 38
      00025B 26                     846 	.db #0x26	; 38
      00025C 26                     847 	.db #0x26	; 38
      00025D 26                     848 	.db #0x26	; 38
      00025E 26                     849 	.db #0x26	; 38
      00025F 26                     850 	.db #0x26	; 38
      000260 26                     851 	.db #0x26	; 38
      000261 26                     852 	.db #0x26	; 38
      000262 26                     853 	.db #0x26	; 38
      000263 26                     854 	.db #0x26	; 38
      000264 26                     855 	.db #0x26	; 38
      000265 26                     856 	.db #0x26	; 38
      000266 26                     857 	.db #0x26	; 38
      000267 26                     858 	.db #0x26	; 38
      000268 26                     859 	.db #0x26	; 38
      000269 26                     860 	.db #0x26	; 38
      00026A 2C                     861 	.db #0x2c	; 44
      00026B 26                     862 	.db #0x26	; 38
      00026C 26                     863 	.db #0x26	; 38
      00026D 26                     864 	.db #0x26	; 38
      00026E 26                     865 	.db #0x26	; 38
      00026F 26                     866 	.db #0x26	; 38
      000270 26                     867 	.db #0x26	; 38
      000271 26                     868 	.db #0x26	; 38
      000272 26                     869 	.db #0x26	; 38
      000273 26                     870 	.db #0x26	; 38
      000274 26                     871 	.db #0x26	; 38
      000275 26                     872 	.db #0x26	; 38
      000276 26                     873 	.db #0x26	; 38
      000277 26                     874 	.db #0x26	; 38
      000278 26                     875 	.db #0x26	; 38
      000279 2C                     876 	.db #0x2c	; 44
      00027A 26                     877 	.db #0x26	; 38
      00027B 26                     878 	.db #0x26	; 38
      00027C 26                     879 	.db #0x26	; 38
      00027D 26                     880 	.db #0x26	; 38
      00027E 26                     881 	.db #0x26	; 38
      00027F 26                     882 	.db #0x26	; 38
      000280 26                     883 	.db #0x26	; 38
      000281 26                     884 	.db #0x26	; 38
      000282 26                     885 	.db #0x26	; 38
      000283 26                     886 	.db #0x26	; 38
      000284 26                     887 	.db #0x26	; 38
      000285 26                     888 	.db #0x26	; 38
      000286 26                     889 	.db #0x26	; 38
      000287 26                     890 	.db #0x26	; 38
      000288 26                     891 	.db #0x26	; 38
      000289 26                     892 	.db #0x26	; 38
      00028A 26                     893 	.db #0x26	; 38
      00028B 26                     894 	.db #0x26	; 38
      00028C 26                     895 	.db #0x26	; 38
      00028D 26                     896 	.db #0x26	; 38
      00028E 26                     897 	.db #0x26	; 38
      00028F 26                     898 	.db #0x26	; 38
      000290 26                     899 	.db #0x26	; 38
      000291 26                     900 	.db #0x26	; 38
      000292 26                     901 	.db #0x26	; 38
      000293 26                     902 	.db #0x26	; 38
      000294 26                     903 	.db #0x26	; 38
      000295 2B                     904 	.db #0x2b	; 43
      000296 26                     905 	.db #0x26	; 38
      000297 26                     906 	.db #0x26	; 38
      000298 26                     907 	.db #0x26	; 38
      000299 26                     908 	.db #0x26	; 38
      00029A 26                     909 	.db #0x26	; 38
      00029B 26                     910 	.db #0x26	; 38
      00029C 26                     911 	.db #0x26	; 38
      00029D 26                     912 	.db #0x26	; 38
      00029E 26                     913 	.db #0x26	; 38
      00029F 26                     914 	.db #0x26	; 38
      0002A0 26                     915 	.db #0x26	; 38
      0002A1 26                     916 	.db #0x26	; 38
      0002A2 26                     917 	.db #0x26	; 38
      0002A3 26                     918 	.db #0x26	; 38
      0002A4 26                     919 	.db #0x26	; 38
      0002A5 26                     920 	.db #0x26	; 38
      0002A6 26                     921 	.db #0x26	; 38
      0002A7 28                     922 	.db #0x28	; 40
      0002A8 26                     923 	.db #0x26	; 38
      0002A9 26                     924 	.db #0x26	; 38
      0002AA 26                     925 	.db #0x26	; 38
      0002AB 26                     926 	.db #0x26	; 38
      0002AC 26                     927 	.db #0x26	; 38
      0002AD 26                     928 	.db #0x26	; 38
      0002AE 26                     929 	.db #0x26	; 38
      0002AF 26                     930 	.db #0x26	; 38
      0002B0 26                     931 	.db #0x26	; 38
      0002B1 26                     932 	.db #0x26	; 38
      0002B2 26                     933 	.db #0x26	; 38
      0002B3 26                     934 	.db #0x26	; 38
      0002B4 26                     935 	.db #0x26	; 38
      0002B5 26                     936 	.db #0x26	; 38
      0002B6 26                     937 	.db #0x26	; 38
      0002B7 26                     938 	.db #0x26	; 38
      0002B8 26                     939 	.db #0x26	; 38
      0002B9 26                     940 	.db #0x26	; 38
      0002BA 26                     941 	.db #0x26	; 38
      0002BB 26                     942 	.db #0x26	; 38
      0002BC 26                     943 	.db #0x26	; 38
      0002BD 26                     944 	.db #0x26	; 38
      0002BE 26                     945 	.db #0x26	; 38
      0002BF 26                     946 	.db #0x26	; 38
      0002C0 2B                     947 	.db #0x2b	; 43
      0002C1 26                     948 	.db #0x26	; 38
      0002C2 26                     949 	.db #0x26	; 38
      0002C3 26                     950 	.db #0x26	; 38
      0002C4 26                     951 	.db #0x26	; 38
      0002C5 26                     952 	.db #0x26	; 38
      0002C6 27                     953 	.db #0x27	; 39
      0002C7 29                     954 	.db #0x29	; 41
      0002C8 26                     955 	.db #0x26	; 38
      0002C9 26                     956 	.db #0x26	; 38
      0002CA 26                     957 	.db #0x26	; 38
      0002CB 26                     958 	.db #0x26	; 38
      0002CC 26                     959 	.db #0x26	; 38
      0002CD 26                     960 	.db #0x26	; 38
      0002CE 2B                     961 	.db #0x2b	; 43
      0002CF 26                     962 	.db #0x26	; 38
      0002D0 26                     963 	.db #0x26	; 38
      0002D1 26                     964 	.db #0x26	; 38
      0002D2 26                     965 	.db #0x26	; 38
      0002D3 26                     966 	.db #0x26	; 38
      0002D4 26                     967 	.db #0x26	; 38
      0002D5 26                     968 	.db #0x26	; 38
      0002D6 26                     969 	.db #0x26	; 38
      0002D7 26                     970 	.db #0x26	; 38
      0002D8 26                     971 	.db #0x26	; 38
      0002D9 26                     972 	.db #0x26	; 38
      0002DA 26                     973 	.db #0x26	; 38
      0002DB 26                     974 	.db #0x26	; 38
      0002DC 26                     975 	.db #0x26	; 38
      0002DD 26                     976 	.db #0x26	; 38
      0002DE 26                     977 	.db #0x26	; 38
      0002DF 26                     978 	.db #0x26	; 38
      0002E0 26                     979 	.db #0x26	; 38
      0002E1 26                     980 	.db #0x26	; 38
      0002E2 26                     981 	.db #0x26	; 38
      0002E3 26                     982 	.db #0x26	; 38
      0002E4 26                     983 	.db #0x26	; 38
      0002E5 26                     984 	.db #0x26	; 38
      0002E6 2A                     985 	.db #0x2a	; 42
      0002E7 26                     986 	.db #0x26	; 38
      0002E8 26                     987 	.db #0x26	; 38
      0002E9 26                     988 	.db #0x26	; 38
      0002EA 26                     989 	.db #0x26	; 38
      0002EB 26                     990 	.db #0x26	; 38
      0002EC 26                     991 	.db #0x26	; 38
      0002ED 26                     992 	.db #0x26	; 38
      0002EE 26                     993 	.db #0x26	; 38
      0002EF 26                     994 	.db #0x26	; 38
      0002F0 26                     995 	.db #0x26	; 38
      0002F1 26                     996 	.db #0x26	; 38
      0002F2 2C                     997 	.db #0x2c	; 44
      0002F3 26                     998 	.db #0x26	; 38
      0002F4 26                     999 	.db #0x26	; 38
      0002F5 26                    1000 	.db #0x26	; 38
      0002F6 26                    1001 	.db #0x26	; 38
      0002F7 26                    1002 	.db #0x26	; 38
      0002F8 26                    1003 	.db #0x26	; 38
      0002F9 26                    1004 	.db #0x26	; 38
      0002FA 26                    1005 	.db #0x26	; 38
      0002FB 26                    1006 	.db #0x26	; 38
      0002FC 26                    1007 	.db #0x26	; 38
      0002FD 26                    1008 	.db #0x26	; 38
      0002FE 26                    1009 	.db #0x26	; 38
      0002FF 26                    1010 	.db #0x26	; 38
      000300 26                    1011 	.db #0x26	; 38
      000301 26                    1012 	.db #0x26	; 38
      000302 26                    1013 	.db #0x26	; 38
      000303 26                    1014 	.db #0x26	; 38
      000304 26                    1015 	.db #0x26	; 38
      000305 26                    1016 	.db #0x26	; 38
      000306 26                    1017 	.db #0x26	; 38
      000307 26                    1018 	.db #0x26	; 38
      000308 26                    1019 	.db #0x26	; 38
      000309 26                    1020 	.db #0x26	; 38
      00030A 26                    1021 	.db #0x26	; 38
      00030B 26                    1022 	.db #0x26	; 38
      00030C 26                    1023 	.db #0x26	; 38
      00030D 26                    1024 	.db #0x26	; 38
      00030E 26                    1025 	.db #0x26	; 38
      00030F 26                    1026 	.db #0x26	; 38
      000310 26                    1027 	.db #0x26	; 38
      000311 26                    1028 	.db #0x26	; 38
      000312 26                    1029 	.db #0x26	; 38
      000313 26                    1030 	.db #0x26	; 38
      000314 26                    1031 	.db #0x26	; 38
      000315 26                    1032 	.db #0x26	; 38
      000316 26                    1033 	.db #0x26	; 38
      000317 2B                    1034 	.db #0x2b	; 43
      000318 26                    1035 	.db #0x26	; 38
      000319 26                    1036 	.db #0x26	; 38
      00031A 26                    1037 	.db #0x26	; 38
      00031B 26                    1038 	.db #0x26	; 38
      00031C 26                    1039 	.db #0x26	; 38
      00031D 26                    1040 	.db #0x26	; 38
      00031E 26                    1041 	.db #0x26	; 38
      00031F 26                    1042 	.db #0x26	; 38
      000320 26                    1043 	.db #0x26	; 38
      000321 26                    1044 	.db #0x26	; 38
      000322 26                    1045 	.db #0x26	; 38
      000323 26                    1046 	.db #0x26	; 38
      000324 26                    1047 	.db #0x26	; 38
      000325 26                    1048 	.db #0x26	; 38
      000326 26                    1049 	.db #0x26	; 38
      000327 26                    1050 	.db #0x26	; 38
      000328 26                    1051 	.db #0x26	; 38
      000329 26                    1052 	.db #0x26	; 38
      00032A 26                    1053 	.db #0x26	; 38
      00032B 26                    1054 	.db #0x26	; 38
      00032C 26                    1055 	.db #0x26	; 38
      00032D 26                    1056 	.db #0x26	; 38
      00032E 26                    1057 	.db #0x26	; 38
      00032F 26                    1058 	.db #0x26	; 38
      000330 26                    1059 	.db #0x26	; 38
      000331 26                    1060 	.db #0x26	; 38
      000332 26                    1061 	.db #0x26	; 38
      000333 26                    1062 	.db #0x26	; 38
      000334 26                    1063 	.db #0x26	; 38
      000335 26                    1064 	.db #0x26	; 38
      000336 26                    1065 	.db #0x26	; 38
      000337 26                    1066 	.db #0x26	; 38
      000338 26                    1067 	.db #0x26	; 38
      000339 26                    1068 	.db #0x26	; 38
      00033A 26                    1069 	.db #0x26	; 38
      00033B 26                    1070 	.db #0x26	; 38
      00033C 26                    1071 	.db #0x26	; 38
      00033D 26                    1072 	.db #0x26	; 38
      00033E 2B                    1073 	.db #0x2b	; 43
      00033F 26                    1074 	.db #0x26	; 38
      000340 26                    1075 	.db #0x26	; 38
      000341 26                    1076 	.db #0x26	; 38
      000342 26                    1077 	.db #0x26	; 38
      000343 26                    1078 	.db #0x26	; 38
      000344 26                    1079 	.db #0x26	; 38
      000345 26                    1080 	.db #0x26	; 38
      000346 26                    1081 	.db #0x26	; 38
      000347 26                    1082 	.db #0x26	; 38
      000348 26                    1083 	.db #0x26	; 38
      000349 26                    1084 	.db #0x26	; 38
      00034A 2B                    1085 	.db #0x2b	; 43
      00034B 26                    1086 	.db #0x26	; 38
      00034C 26                    1087 	.db #0x26	; 38
      00034D 26                    1088 	.db #0x26	; 38
      00034E 26                    1089 	.db #0x26	; 38
      00034F 26                    1090 	.db #0x26	; 38
      000350 26                    1091 	.db #0x26	; 38
      000351 26                    1092 	.db #0x26	; 38
      000352 26                    1093 	.db #0x26	; 38
      000353 26                    1094 	.db #0x26	; 38
      000354 26                    1095 	.db #0x26	; 38
      000355 26                    1096 	.db #0x26	; 38
      000356 26                    1097 	.db #0x26	; 38
      000357 26                    1098 	.db #0x26	; 38
      000358 26                    1099 	.db #0x26	; 38
      000359 26                    1100 	.db #0x26	; 38
      00035A 26                    1101 	.db #0x26	; 38
      00035B 26                    1102 	.db #0x26	; 38
      00035C 26                    1103 	.db #0x26	; 38
      00035D 26                    1104 	.db #0x26	; 38
      00035E 26                    1105 	.db #0x26	; 38
      00035F 26                    1106 	.db #0x26	; 38
      000360 26                    1107 	.db #0x26	; 38
      000361 26                    1108 	.db #0x26	; 38
      000362 26                    1109 	.db #0x26	; 38
      000363 26                    1110 	.db #0x26	; 38
      000364 26                    1111 	.db #0x26	; 38
      000365 26                    1112 	.db #0x26	; 38
      000366 2C                    1113 	.db #0x2c	; 44
      000367 26                    1114 	.db #0x26	; 38
      000368 26                    1115 	.db #0x26	; 38
      000369 26                    1116 	.db #0x26	; 38
      00036A 26                    1117 	.db #0x26	; 38
      00036B 26                    1118 	.db #0x26	; 38
      00036C 26                    1119 	.db #0x26	; 38
      00036D 26                    1120 	.db #0x26	; 38
      00036E 26                    1121 	.db #0x26	; 38
      00036F 26                    1122 	.db #0x26	; 38
      000370 2B                    1123 	.db #0x2b	; 43
      000371 26                    1124 	.db #0x26	; 38
      000372 26                    1125 	.db #0x26	; 38
      000373 26                    1126 	.db #0x26	; 38
      000374 26                    1127 	.db #0x26	; 38
      000375 26                    1128 	.db #0x26	; 38
      000376 26                    1129 	.db #0x26	; 38
      000377 26                    1130 	.db #0x26	; 38
      000378 26                    1131 	.db #0x26	; 38
      000379 26                    1132 	.db #0x26	; 38
      00037A 26                    1133 	.db #0x26	; 38
      00037B 26                    1134 	.db #0x26	; 38
      00037C 26                    1135 	.db #0x26	; 38
      00037D 26                    1136 	.db #0x26	; 38
      00037E 26                    1137 	.db #0x26	; 38
      00037F 26                    1138 	.db #0x26	; 38
      000380 26                    1139 	.db #0x26	; 38
      000381 26                    1140 	.db #0x26	; 38
      000382 26                    1141 	.db #0x26	; 38
      000383 26                    1142 	.db #0x26	; 38
      000384 26                    1143 	.db #0x26	; 38
      000385 26                    1144 	.db #0x26	; 38
      000386 26                    1145 	.db #0x26	; 38
      000387 26                    1146 	.db #0x26	; 38
      000388 26                    1147 	.db #0x26	; 38
      000389 26                    1148 	.db #0x26	; 38
      00038A 26                    1149 	.db #0x26	; 38
      00038B 26                    1150 	.db #0x26	; 38
      00038C 26                    1151 	.db #0x26	; 38
      00038D 26                    1152 	.db #0x26	; 38
      00038E 26                    1153 	.db #0x26	; 38
      00038F 26                    1154 	.db #0x26	; 38
      000390 26                    1155 	.db #0x26	; 38
      000391 26                    1156 	.db #0x26	; 38
      000392 26                    1157 	.db #0x26	; 38
      000393 26                    1158 	.db #0x26	; 38
      000394 26                    1159 	.db #0x26	; 38
      000395 26                    1160 	.db #0x26	; 38
      000396 26                    1161 	.db #0x26	; 38
      000397 26                    1162 	.db #0x26	; 38
      000398 27                    1163 	.db #0x27	; 39
      000399 28                    1164 	.db #0x28	; 40
      00039A 26                    1165 	.db #0x26	; 38
      00039B 26                    1166 	.db #0x26	; 38
      00039C 26                    1167 	.db #0x26	; 38
      00039D 26                    1168 	.db #0x26	; 38
      00039E 26                    1169 	.db #0x26	; 38
      00039F 26                    1170 	.db #0x26	; 38
      0003A0 26                    1171 	.db #0x26	; 38
      0003A1 26                    1172 	.db #0x26	; 38
      0003A2 26                    1173 	.db #0x26	; 38
      0003A3 26                    1174 	.db #0x26	; 38
      0003A4 26                    1175 	.db #0x26	; 38
      0003A5 26                    1176 	.db #0x26	; 38
      0003A6 26                    1177 	.db #0x26	; 38
      0003A7 26                    1178 	.db #0x26	; 38
      0003A8 26                    1179 	.db #0x26	; 38
      0003A9 26                    1180 	.db #0x26	; 38
      0003AA 26                    1181 	.db #0x26	; 38
      0003AB 26                    1182 	.db #0x26	; 38
      0003AC 26                    1183 	.db #0x26	; 38
      0003AD 2B                    1184 	.db #0x2b	; 43
      0003AE 26                    1185 	.db #0x26	; 38
      0003AF 26                    1186 	.db #0x26	; 38
      0003B0 26                    1187 	.db #0x26	; 38
      0003B1 26                    1188 	.db #0x26	; 38
      0003B2 26                    1189 	.db #0x26	; 38
      0003B3 26                    1190 	.db #0x26	; 38
      0003B4 26                    1191 	.db #0x26	; 38
      0003B5 25                    1192 	.db #0x25	; 37
      0003B6 26                    1193 	.db #0x26	; 38
      0003B7 26                    1194 	.db #0x26	; 38
      0003B8 2A                    1195 	.db #0x2a	; 42
      0003B9 29                    1196 	.db #0x29	; 41
      0003BA 26                    1197 	.db #0x26	; 38
      0003BB 26                    1198 	.db #0x26	; 38
      0003BC 26                    1199 	.db #0x26	; 38
      0003BD 26                    1200 	.db #0x26	; 38
      0003BE 26                    1201 	.db #0x26	; 38
      0003BF 26                    1202 	.db #0x26	; 38
      0003C0 26                    1203 	.db #0x26	; 38
      0003C1 26                    1204 	.db #0x26	; 38
      0003C2 2B                    1205 	.db #0x2b	; 43
      0003C3 26                    1206 	.db #0x26	; 38
      0003C4 26                    1207 	.db #0x26	; 38
      0003C5 26                    1208 	.db #0x26	; 38
      0003C6 26                    1209 	.db #0x26	; 38
      0003C7 26                    1210 	.db #0x26	; 38
      0003C8 26                    1211 	.db #0x26	; 38
      0003C9 2C                    1212 	.db #0x2c	; 44
      0003CA 26                    1213 	.db #0x26	; 38
      0003CB 26                    1214 	.db #0x26	; 38
      0003CC 26                    1215 	.db #0x26	; 38
      0003CD 26                    1216 	.db #0x26	; 38
      0003CE 26                    1217 	.db #0x26	; 38
      0003CF 26                    1218 	.db #0x26	; 38
      0003D0 26                    1219 	.db #0x26	; 38
      0003D1 26                    1220 	.db #0x26	; 38
      0003D2 26                    1221 	.db #0x26	; 38
      0003D3 26                    1222 	.db #0x26	; 38
      0003D4 26                    1223 	.db #0x26	; 38
      0003D5 2C                    1224 	.db #0x2c	; 44
      0003D6 26                    1225 	.db #0x26	; 38
      0003D7 26                    1226 	.db #0x26	; 38
      0003D8 26                    1227 	.db #0x26	; 38
      0003D9 26                    1228 	.db #0x26	; 38
      0003DA 26                    1229 	.db #0x26	; 38
      0003DB 26                    1230 	.db #0x26	; 38
      0003DC 26                    1231 	.db #0x26	; 38
      0003DD 26                    1232 	.db #0x26	; 38
      0003DE 26                    1233 	.db #0x26	; 38
      0003DF 26                    1234 	.db #0x26	; 38
      0003E0 26                    1235 	.db #0x26	; 38
      0003E1 26                    1236 	.db #0x26	; 38
      0003E2 26                    1237 	.db #0x26	; 38
      0003E3 26                    1238 	.db #0x26	; 38
      0003E4 26                    1239 	.db #0x26	; 38
      0003E5 26                    1240 	.db #0x26	; 38
      0003E6 26                    1241 	.db #0x26	; 38
      0003E7 26                    1242 	.db #0x26	; 38
      0003E8 26                    1243 	.db #0x26	; 38
      0003E9 26                    1244 	.db #0x26	; 38
      0003EA 26                    1245 	.db #0x26	; 38
      0003EB 26                    1246 	.db #0x26	; 38
      0003EC 26                    1247 	.db #0x26	; 38
      0003ED 26                    1248 	.db #0x26	; 38
      0003EE 26                    1249 	.db #0x26	; 38
      0003EF 26                    1250 	.db #0x26	; 38
      0003F0 26                    1251 	.db #0x26	; 38
      0003F1 26                    1252 	.db #0x26	; 38
      0003F2 26                    1253 	.db #0x26	; 38
      0003F3 26                    1254 	.db #0x26	; 38
      0003F4 26                    1255 	.db #0x26	; 38
      0003F5 26                    1256 	.db #0x26	; 38
      0003F6 26                    1257 	.db #0x26	; 38
      0003F7 26                    1258 	.db #0x26	; 38
      0003F8 26                    1259 	.db #0x26	; 38
      0003F9 26                    1260 	.db #0x26	; 38
      0003FA 26                    1261 	.db #0x26	; 38
      0003FB 26                    1262 	.db #0x26	; 38
      0003FC 26                    1263 	.db #0x26	; 38
      0003FD 26                    1264 	.db #0x26	; 38
      0003FE 26                    1265 	.db #0x26	; 38
      0003FF 26                    1266 	.db #0x26	; 38
      000400 26                    1267 	.db #0x26	; 38
      000401 26                    1268 	.db #0x26	; 38
      000402 26                    1269 	.db #0x26	; 38
      000403 26                    1270 	.db #0x26	; 38
      000404 26                    1271 	.db #0x26	; 38
      000405 26                    1272 	.db #0x26	; 38
      000406 26                    1273 	.db #0x26	; 38
      000407 26                    1274 	.db #0x26	; 38
      000408 26                    1275 	.db #0x26	; 38
      000409 26                    1276 	.db #0x26	; 38
      00040A 26                    1277 	.db #0x26	; 38
      00040B 26                    1278 	.db #0x26	; 38
      00040C 26                    1279 	.db #0x26	; 38
      00040D 2B                    1280 	.db #0x2b	; 43
      00040E 26                    1281 	.db #0x26	; 38
      00040F 26                    1282 	.db #0x26	; 38
      000410 26                    1283 	.db #0x26	; 38
      000411 26                    1284 	.db #0x26	; 38
      000412 26                    1285 	.db #0x26	; 38
      000413 26                    1286 	.db #0x26	; 38
      000414 26                    1287 	.db #0x26	; 38
      000415 26                    1288 	.db #0x26	; 38
      000416 26                    1289 	.db #0x26	; 38
      000417 26                    1290 	.db #0x26	; 38
      000418 26                    1291 	.db #0x26	; 38
      000419 26                    1292 	.db #0x26	; 38
      00041A 26                    1293 	.db #0x26	; 38
      00041B 26                    1294 	.db #0x26	; 38
      00041C 26                    1295 	.db #0x26	; 38
      00041D 26                    1296 	.db #0x26	; 38
      00041E 26                    1297 	.db #0x26	; 38
      00041F 26                    1298 	.db #0x26	; 38
      000420 2B                    1299 	.db #0x2b	; 43
      000421 26                    1300 	.db #0x26	; 38
      000422 26                    1301 	.db #0x26	; 38
      000423 26                    1302 	.db #0x26	; 38
      000424 26                    1303 	.db #0x26	; 38
      000425 26                    1304 	.db #0x26	; 38
      000426 26                    1305 	.db #0x26	; 38
      000427 26                    1306 	.db #0x26	; 38
      000428 26                    1307 	.db #0x26	; 38
      000429 26                    1308 	.db #0x26	; 38
      00042A 26                    1309 	.db #0x26	; 38
      00042B 26                    1310 	.db #0x26	; 38
      00042C 26                    1311 	.db #0x26	; 38
      00042D 26                    1312 	.db #0x26	; 38
      00042E 26                    1313 	.db #0x26	; 38
      00042F 26                    1314 	.db #0x26	; 38
      000430 26                    1315 	.db #0x26	; 38
      000431 26                    1316 	.db #0x26	; 38
      000432 26                    1317 	.db #0x26	; 38
      000433 26                    1318 	.db #0x26	; 38
      000434 26                    1319 	.db #0x26	; 38
      000435 26                    1320 	.db #0x26	; 38
      000436 26                    1321 	.db #0x26	; 38
      000437 2C                    1322 	.db #0x2c	; 44
      000438 26                    1323 	.db #0x26	; 38
      000439 26                    1324 	.db #0x26	; 38
      00043A 26                    1325 	.db #0x26	; 38
      00043B 26                    1326 	.db #0x26	; 38
      00043C 26                    1327 	.db #0x26	; 38
      00043D 26                    1328 	.db #0x26	; 38
      00043E 26                    1329 	.db #0x26	; 38
      00043F 26                    1330 	.db #0x26	; 38
      000440 26                    1331 	.db #0x26	; 38
      000441 26                    1332 	.db #0x26	; 38
      000442 26                    1333 	.db #0x26	; 38
      000443 26                    1334 	.db #0x26	; 38
      000444 26                    1335 	.db #0x26	; 38
      000445 26                    1336 	.db #0x26	; 38
      000446 26                    1337 	.db #0x26	; 38
      000447 26                    1338 	.db #0x26	; 38
      000448 25                    1339 	.db #0x25	; 37
      000449 2C                    1340 	.db #0x2c	; 44
      00044A 26                    1341 	.db #0x26	; 38
      00044B 26                    1342 	.db #0x26	; 38
      00044C 26                    1343 	.db #0x26	; 38
      00044D 26                    1344 	.db #0x26	; 38
      00044E 26                    1345 	.db #0x26	; 38
      00044F 26                    1346 	.db #0x26	; 38
      000450 26                    1347 	.db #0x26	; 38
      000451 26                    1348 	.db #0x26	; 38
      000452 26                    1349 	.db #0x26	; 38
      000453 26                    1350 	.db #0x26	; 38
      000454 26                    1351 	.db #0x26	; 38
      000455 26                    1352 	.db #0x26	; 38
      000456 26                    1353 	.db #0x26	; 38
      000457 26                    1354 	.db #0x26	; 38
      000458 26                    1355 	.db #0x26	; 38
      000459 26                    1356 	.db #0x26	; 38
      00045A 2B                    1357 	.db #0x2b	; 43
      00045B 26                    1358 	.db #0x26	; 38
      00045C 26                    1359 	.db #0x26	; 38
      00045D 26                    1360 	.db #0x26	; 38
      00045E 26                    1361 	.db #0x26	; 38
      00045F 26                    1362 	.db #0x26	; 38
      000460 26                    1363 	.db #0x26	; 38
      000461 26                    1364 	.db #0x26	; 38
      000462 26                    1365 	.db #0x26	; 38
      000463 26                    1366 	.db #0x26	; 38
      000464 26                    1367 	.db #0x26	; 38
      000465 26                    1368 	.db #0x26	; 38
      000466 26                    1369 	.db #0x26	; 38
      000467 26                    1370 	.db #0x26	; 38
      000468 26                    1371 	.db #0x26	; 38
      000469 26                    1372 	.db #0x26	; 38
      00046A 26                    1373 	.db #0x26	; 38
      00046B 26                    1374 	.db #0x26	; 38
      00046C 26                    1375 	.db #0x26	; 38
      00046D 26                    1376 	.db #0x26	; 38
      00046E 26                    1377 	.db #0x26	; 38
      00046F 26                    1378 	.db #0x26	; 38
      000470 26                    1379 	.db #0x26	; 38
      000471 26                    1380 	.db #0x26	; 38
      000472 27                    1381 	.db #0x27	; 39
      000473 28                    1382 	.db #0x28	; 40
      000474 26                    1383 	.db #0x26	; 38
      000475 26                    1384 	.db #0x26	; 38
      000476 26                    1385 	.db #0x26	; 38
      000477 26                    1386 	.db #0x26	; 38
      000478 26                    1387 	.db #0x26	; 38
      000479 26                    1388 	.db #0x26	; 38
      00047A 26                    1389 	.db #0x26	; 38
      00047B 26                    1390 	.db #0x26	; 38
      00047C 26                    1391 	.db #0x26	; 38
      00047D 26                    1392 	.db #0x26	; 38
      00047E 26                    1393 	.db #0x26	; 38
      00047F 26                    1394 	.db #0x26	; 38
      000480 26                    1395 	.db #0x26	; 38
      000481 26                    1396 	.db #0x26	; 38
      000482 26                    1397 	.db #0x26	; 38
      000483 26                    1398 	.db #0x26	; 38
      000484 26                    1399 	.db #0x26	; 38
      000485 26                    1400 	.db #0x26	; 38
      000486 2B                    1401 	.db #0x2b	; 43
      000487                       1402 _backgroundtiles:
      000487 40                    1403 	.db #0x40	; 64
      000488 38                    1404 	.db #0x38	; 56	'8'
      000489 3A                    1405 	.db #0x3a	; 58
      00048A 44                    1406 	.db #0x44	; 68	'D'
      00048B 7C                    1407 	.db #0x7c	; 124
      00048C 9A                    1408 	.db #0x9a	; 154
      00048D 5E                    1409 	.db #0x5e	; 94
      00048E E9                    1410 	.db #0xe9	; 233
      00048F 7A                    1411 	.db #0x7a	; 122	'z'
      000490 87                    1412 	.db #0x87	; 135
      000491 76                    1413 	.db #0x76	; 118	'v'
      000492 B9                    1414 	.db #0xb9	; 185
      000493 3C                    1415 	.db #0x3c	; 60
      000494 72                    1416 	.db #0x72	; 114	'r'
      000495 00                    1417 	.db #0x00	; 0
      000496 3C                    1418 	.db #0x3c	; 60
      000497 00                    1419 	.db #0x00	; 0
      000498 00                    1420 	.db #0x00	; 0
      000499 00                    1421 	.db #0x00	; 0
      00049A 00                    1422 	.db #0x00	; 0
      00049B 00                    1423 	.db #0x00	; 0
      00049C 00                    1424 	.db #0x00	; 0
      00049D 00                    1425 	.db #0x00	; 0
      00049E 00                    1426 	.db #0x00	; 0
      00049F 00                    1427 	.db #0x00	; 0
      0004A0 00                    1428 	.db #0x00	; 0
      0004A1 00                    1429 	.db #0x00	; 0
      0004A2 00                    1430 	.db #0x00	; 0
      0004A3 00                    1431 	.db #0x00	; 0
      0004A4 00                    1432 	.db #0x00	; 0
      0004A5 00                    1433 	.db #0x00	; 0
      0004A6 00                    1434 	.db #0x00	; 0
      0004A7 00                    1435 	.db #0x00	; 0
      0004A8 0F                    1436 	.db #0x0f	; 15
      0004A9 08                    1437 	.db #0x08	; 8
      0004AA 17                    1438 	.db #0x17	; 23
      0004AB 1C                    1439 	.db #0x1c	; 28
      0004AC 23                    1440 	.db #0x23	; 35
      0004AD 3E                    1441 	.db #0x3e	; 62
      0004AE 41                    1442 	.db #0x41	; 65	'A'
      0004AF 1B                    1443 	.db #0x1b	; 27
      0004B0 64                    1444 	.db #0x64	; 100	'd'
      0004B1 31                    1445 	.db #0x31	; 49	'1'
      0004B2 4E                    1446 	.db #0x4e	; 78	'N'
      0004B3 B1                    1447 	.db #0xb1	; 177
      0004B4 CE                    1448 	.db #0xce	; 206
      0004B5 BB                    1449 	.db #0xbb	; 187
      0004B6 C4                    1450 	.db #0xc4	; 196
      0004B7 00                    1451 	.db #0x00	; 0
      0004B8 F8                    1452 	.db #0xf8	; 248
      0004B9 00                    1453 	.db #0x00	; 0
      0004BA FC                    1454 	.db #0xfc	; 252
      0004BB E0                    1455 	.db #0xe0	; 224
      0004BC 1E                    1456 	.db #0x1e	; 30
      0004BD F0                    1457 	.db #0xf0	; 240
      0004BE 0F                    1458 	.db #0x0f	; 15
      0004BF BE                    1459 	.db #0xbe	; 190
      0004C0 01                    1460 	.db #0x01	; 1
      0004C1 BC                    1461 	.db #0xbc	; 188
      0004C2 02                    1462 	.db #0x02	; 2
      0004C3 CE                    1463 	.db #0xce	; 206
      0004C4 01                    1464 	.db #0x01	; 1
      0004C5 F6                    1465 	.db #0xf6	; 246
      0004C6 61                    1466 	.db #0x61	; 97	'a'
      0004C7 F4                    1467 	.db #0xf4	; 244
      0004C8 02                    1468 	.db #0x02	; 2
      0004C9 94                    1469 	.db #0x94	; 148
      0004CA 62                    1470 	.db #0x62	; 98	'b'
      0004CB E4                    1471 	.db #0xe4	; 228
      0004CC 02                    1472 	.db #0x02	; 2
      0004CD 6C                    1473 	.db #0x6c	; 108	'l'
      0004CE 82                    1474 	.db #0x82	; 130
      0004CF 70                    1475 	.db #0x70	; 112	'p'
      0004D0 8C                    1476 	.db #0x8c	; 140
      0004D1 60                    1477 	.db #0x60	; 96
      0004D2 90                    1478 	.db #0x90	; 144
      0004D3 00                    1479 	.db #0x00	; 0
      0004D4 E0                    1480 	.db #0xe0	; 224
      0004D5 80                    1481 	.db #0x80	; 128
      0004D6 80                    1482 	.db #0x80	; 128
      0004D7 8E                    1483 	.db #0x8e	; 142
      0004D8 F7                    1484 	.db #0xf7	; 247
      0004D9 8F                    1485 	.db #0x8f	; 143
      0004DA F3                    1486 	.db #0xf3	; 243
      0004DB 86                    1487 	.db #0x86	; 134
      0004DC F9                    1488 	.db #0xf9	; 249
      0004DD 42                    1489 	.db #0x42	; 66	'B'
      0004DE 7D                    1490 	.db #0x7d	; 125
      0004DF 80                    1491 	.db #0x80	; 128
      0004E0 FF                    1492 	.db #0xff	; 255
      0004E1 44                    1493 	.db #0x44	; 68	'D'
      0004E2 7F                    1494 	.db #0x7f	; 127
      0004E3 28                    1495 	.db #0x28	; 40
      0004E4 3F                    1496 	.db #0x3f	; 63
      0004E5 07                    1497 	.db #0x07	; 7
      0004E6 07                    1498 	.db #0x07	; 7
      0004E7 00                    1499 	.db #0x00	; 0
      0004E8 00                    1500 	.db #0x00	; 0
      0004E9 08                    1501 	.db #0x08	; 8
      0004EA 00                    1502 	.db #0x00	; 0
      0004EB 08                    1503 	.db #0x08	; 8
      0004EC 00                    1504 	.db #0x00	; 0
      0004ED 1C                    1505 	.db #0x1c	; 28
      0004EE 00                    1506 	.db #0x00	; 0
      0004EF 7F                    1507 	.db #0x7f	; 127
      0004F0 00                    1508 	.db #0x00	; 0
      0004F1 1C                    1509 	.db #0x1c	; 28
      0004F2 00                    1510 	.db #0x00	; 0
      0004F3 08                    1511 	.db #0x08	; 8
      0004F4 00                    1512 	.db #0x00	; 0
      0004F5 08                    1513 	.db #0x08	; 8
      0004F6 00                    1514 	.db #0x00	; 0
      0004F7 00                    1515 	.db #0x00	; 0
      0004F8 00                    1516 	.db #0x00	; 0
      0004F9 00                    1517 	.db #0x00	; 0
      0004FA 00                    1518 	.db #0x00	; 0
      0004FB 00                    1519 	.db #0x00	; 0
      0004FC 00                    1520 	.db #0x00	; 0
      0004FD 10                    1521 	.db #0x10	; 16
      0004FE 00                    1522 	.db #0x00	; 0
      0004FF 00                    1523 	.db #0x00	; 0
      000500 00                    1524 	.db #0x00	; 0
      000501 00                    1525 	.db #0x00	; 0
      000502 00                    1526 	.db #0x00	; 0
      000503 00                    1527 	.db #0x00	; 0
      000504 00                    1528 	.db #0x00	; 0
      000505 00                    1529 	.db #0x00	; 0
      000506 00                    1530 	.db #0x00	; 0
      000507                       1531 _healthblock:
      000507 FE                    1532 	.db #0xfe	; 254
      000508 FE                    1533 	.db #0xfe	; 254
      000509 FE                    1534 	.db #0xfe	; 254
      00050A FE                    1535 	.db #0xfe	; 254
      00050B FE                    1536 	.db #0xfe	; 254
      00050C FE                    1537 	.db #0xfe	; 254
      00050D FE                    1538 	.db #0xfe	; 254
      00050E FE                    1539 	.db #0xfe	; 254
      00050F FE                    1540 	.db #0xfe	; 254
      000510 FE                    1541 	.db #0xfe	; 254
      000511 FE                    1542 	.db #0xfe	; 254
      000512 FE                    1543 	.db #0xfe	; 254
      000513 FE                    1544 	.db #0xfe	; 254
      000514 FE                    1545 	.db #0xfe	; 254
      000515 00                    1546 	.db #0x00	; 0
      000516 00                    1547 	.db #0x00	; 0
      000517                       1548 _enemyOptionCount:
      000517 05                    1549 	.db #0x05	; 5
      000518                       1550 _enemy1:
      000518 66                    1551 	.db #0x66	; 102	'f'
      000519 24                    1552 	.db #0x24	; 36
      00051A E7                    1553 	.db #0xe7	; 231
      00051B 66                    1554 	.db #0x66	; 102	'f'
      00051C F7                    1555 	.db #0xf7	; 247
      00051D E7                    1556 	.db #0xe7	; 231
      00051E 1C                    1557 	.db #0x1c	; 28
      00051F 18                    1558 	.db #0x18	; 24
      000520 38                    1559 	.db #0x38	; 56	'8'
      000521 18                    1560 	.db #0x18	; 24
      000522 EF                    1561 	.db #0xef	; 239
      000523 E7                    1562 	.db #0xe7	; 231
      000524 E7                    1563 	.db #0xe7	; 231
      000525 66                    1564 	.db #0x66	; 102	'f'
      000526 66                    1565 	.db #0x66	; 102	'f'
      000527 24                    1566 	.db #0x24	; 36
      000528 00                    1567 	.db #0x00	; 0
      000529 00                    1568 	.db #0x00	; 0
      00052A 00                    1569 	.db #0x00	; 0
      00052B 00                    1570 	.db #0x00	; 0
      00052C 00                    1571 	.db #0x00	; 0
      00052D 00                    1572 	.db #0x00	; 0
      00052E 00                    1573 	.db #0x00	; 0
      00052F 00                    1574 	.db #0x00	; 0
      000530 00                    1575 	.db #0x00	; 0
      000531 00                    1576 	.db #0x00	; 0
      000532 00                    1577 	.db #0x00	; 0
      000533 00                    1578 	.db #0x00	; 0
      000534 00                    1579 	.db #0x00	; 0
      000535 00                    1580 	.db #0x00	; 0
      000536 00                    1581 	.db #0x00	; 0
      000537 00                    1582 	.db #0x00	; 0
      000538 3C                    1583 	.db #0x3c	; 60
      000539 3C                    1584 	.db #0x3c	; 60
      00053A 5E                    1585 	.db #0x5e	; 94
      00053B 62                    1586 	.db #0x62	; 98	'b'
      00053C 8F                    1587 	.db #0x8f	; 143
      00053D F1                    1588 	.db #0xf1	; 241
      00053E C7                    1589 	.db #0xc7	; 199
      00053F F9                    1590 	.db #0xf9	; 249
      000540 C3                    1591 	.db #0xc3	; 195
      000541 FD                    1592 	.db #0xfd	; 253
      000542 E1                    1593 	.db #0xe1	; 225
      000543 FF                    1594 	.db #0xff	; 255
      000544 7A                    1595 	.db #0x7a	; 122	'z'
      000545 7E                    1596 	.db #0x7e	; 126
      000546 3C                    1597 	.db #0x3c	; 60
      000547 3C                    1598 	.db #0x3c	; 60
      000548 00                    1599 	.db #0x00	; 0
      000549 00                    1600 	.db #0x00	; 0
      00054A 00                    1601 	.db #0x00	; 0
      00054B 00                    1602 	.db #0x00	; 0
      00054C 00                    1603 	.db #0x00	; 0
      00054D 00                    1604 	.db #0x00	; 0
      00054E 00                    1605 	.db #0x00	; 0
      00054F 00                    1606 	.db #0x00	; 0
      000550 00                    1607 	.db #0x00	; 0
      000551 00                    1608 	.db #0x00	; 0
      000552 00                    1609 	.db #0x00	; 0
      000553 00                    1610 	.db #0x00	; 0
      000554 00                    1611 	.db #0x00	; 0
      000555 00                    1612 	.db #0x00	; 0
      000556 00                    1613 	.db #0x00	; 0
      000557 00                    1614 	.db #0x00	; 0
      000558 3C                    1615 	.db #0x3c	; 60
      000559 3E                    1616 	.db #0x3e	; 62
      00055A 20                    1617 	.db #0x20	; 32
      00055B 38                    1618 	.db #0x38	; 56	'8'
      00055C 44                    1619 	.db #0x44	; 68	'D'
      00055D 78                    1620 	.db #0x78	; 120	'x'
      00055E BA                    1621 	.db #0xba	; 186
      00055F C4                    1622 	.db #0xc4	; 196
      000560 BA                    1623 	.db #0xba	; 186
      000561 C4                    1624 	.db #0xc4	; 196
      000562 44                    1625 	.db #0x44	; 68	'D'
      000563 78                    1626 	.db #0x78	; 120	'x'
      000564 20                    1627 	.db #0x20	; 32
      000565 38                    1628 	.db #0x38	; 56	'8'
      000566 3C                    1629 	.db #0x3c	; 60
      000567 3E                    1630 	.db #0x3e	; 62
      000568                       1631 _largeenemies:
      000568 00                    1632 	.db #0x00	; 0
      000569 00                    1633 	.db #0x00	; 0
      00056A 00                    1634 	.db #0x00	; 0
      00056B 00                    1635 	.db #0x00	; 0
      00056C 00                    1636 	.db #0x00	; 0
      00056D 00                    1637 	.db #0x00	; 0
      00056E 00                    1638 	.db #0x00	; 0
      00056F 00                    1639 	.db #0x00	; 0
      000570 00                    1640 	.db #0x00	; 0
      000571 00                    1641 	.db #0x00	; 0
      000572 00                    1642 	.db #0x00	; 0
      000573 00                    1643 	.db #0x00	; 0
      000574 00                    1644 	.db #0x00	; 0
      000575 00                    1645 	.db #0x00	; 0
      000576 7F                    1646 	.db #0x7f	; 127
      000577 7F                    1647 	.db #0x7f	; 127
      000578 7F                    1648 	.db #0x7f	; 127
      000579 7F                    1649 	.db #0x7f	; 127
      00057A 00                    1650 	.db #0x00	; 0
      00057B 00                    1651 	.db #0x00	; 0
      00057C 00                    1652 	.db #0x00	; 0
      00057D 00                    1653 	.db #0x00	; 0
      00057E 00                    1654 	.db #0x00	; 0
      00057F 00                    1655 	.db #0x00	; 0
      000580 00                    1656 	.db #0x00	; 0
      000581 00                    1657 	.db #0x00	; 0
      000582 00                    1658 	.db #0x00	; 0
      000583 00                    1659 	.db #0x00	; 0
      000584 00                    1660 	.db #0x00	; 0
      000585 00                    1661 	.db #0x00	; 0
      000586 00                    1662 	.db #0x00	; 0
      000587 00                    1663 	.db #0x00	; 0
      000588 00                    1664 	.db #0x00	; 0
      000589 00                    1665 	.db #0x00	; 0
      00058A 40                    1666 	.db #0x40	; 64
      00058B 40                    1667 	.db #0x40	; 64
      00058C 60                    1668 	.db #0x60	; 96
      00058D 60                    1669 	.db #0x60	; 96
      00058E 70                    1670 	.db #0x70	; 112	'p'
      00058F 70                    1671 	.db #0x70	; 112	'p'
      000590 78                    1672 	.db #0x78	; 120	'x'
      000591 78                    1673 	.db #0x78	; 120	'x'
      000592 7C                    1674 	.db #0x7c	; 124
      000593 7C                    1675 	.db #0x7c	; 124
      000594 7E                    1676 	.db #0x7e	; 126
      000595 7E                    1677 	.db #0x7e	; 126
      000596 FF                    1678 	.db #0xff	; 255
      000597 FF                    1679 	.db #0xff	; 255
      000598 FF                    1680 	.db #0xff	; 255
      000599 FF                    1681 	.db #0xff	; 255
      00059A 7E                    1682 	.db #0x7e	; 126
      00059B 7E                    1683 	.db #0x7e	; 126
      00059C 7C                    1684 	.db #0x7c	; 124
      00059D 7C                    1685 	.db #0x7c	; 124
      00059E 78                    1686 	.db #0x78	; 120	'x'
      00059F 78                    1687 	.db #0x78	; 120	'x'
      0005A0 70                    1688 	.db #0x70	; 112	'p'
      0005A1 70                    1689 	.db #0x70	; 112	'p'
      0005A2 60                    1690 	.db #0x60	; 96
      0005A3 60                    1691 	.db #0x60	; 96
      0005A4 40                    1692 	.db #0x40	; 64
      0005A5 40                    1693 	.db #0x40	; 64
      0005A6 00                    1694 	.db #0x00	; 0
      0005A7 00                    1695 	.db #0x00	; 0
      0005A8 07                    1696 	.db #0x07	; 7
      0005A9 00                    1697 	.db #0x00	; 0
      0005AA 18                    1698 	.db #0x18	; 24
      0005AB 00                    1699 	.db #0x00	; 0
      0005AC 20                    1700 	.db #0x20	; 32
      0005AD 00                    1701 	.db #0x00	; 0
      0005AE 4C                    1702 	.db #0x4c	; 76	'L'
      0005AF 0C                    1703 	.db #0x0c	; 12
      0005B0 43                    1704 	.db #0x43	; 67	'C'
      0005B1 0F                    1705 	.db #0x0f	; 15
      0005B2 84                    1706 	.db #0x84	; 132
      0005B3 27                    1707 	.db #0x27	; 39
      0005B4 80                    1708 	.db #0x80	; 128
      0005B5 13                    1709 	.db #0x13	; 19
      0005B6 83                    1710 	.db #0x83	; 131
      0005B7 2A                    1711 	.db #0x2a	; 42
      0005B8 83                    1712 	.db #0x83	; 131
      0005B9 16                    1713 	.db #0x16	; 22
      0005BA 80                    1714 	.db #0x80	; 128
      0005BB 23                    1715 	.db #0x23	; 35
      0005BC 84                    1716 	.db #0x84	; 132
      0005BD 07                    1717 	.db #0x07	; 7
      0005BE 43                    1718 	.db #0x43	; 67	'C'
      0005BF 0F                    1719 	.db #0x0f	; 15
      0005C0 4C                    1720 	.db #0x4c	; 76	'L'
      0005C1 0C                    1721 	.db #0x0c	; 12
      0005C2 20                    1722 	.db #0x20	; 32
      0005C3 00                    1723 	.db #0x00	; 0
      0005C4 18                    1724 	.db #0x18	; 24
      0005C5 00                    1725 	.db #0x00	; 0
      0005C6 07                    1726 	.db #0x07	; 7
      0005C7 00                    1727 	.db #0x00	; 0
      0005C8 E0                    1728 	.db #0xe0	; 224
      0005C9 00                    1729 	.db #0x00	; 0
      0005CA 18                    1730 	.db #0x18	; 24
      0005CB 00                    1731 	.db #0x00	; 0
      0005CC 04                    1732 	.db #0x04	; 4
      0005CD 00                    1733 	.db #0x00	; 0
      0005CE 02                    1734 	.db #0x02	; 2
      0005CF 00                    1735 	.db #0x00	; 0
      0005D0 02                    1736 	.db #0x02	; 2
      0005D1 00                    1737 	.db #0x00	; 0
      0005D2 C1                    1738 	.db #0xc1	; 193
      0005D3 C0                    1739 	.db #0xc0	; 192
      0005D4 11                    1740 	.db #0x11	; 17
      0005D5 F0                    1741 	.db #0xf0	; 240
      0005D6 E5                    1742 	.db #0xe5	; 229
      0005D7 1C                    1743 	.db #0x1c	; 28
      0005D8 E5                    1744 	.db #0xe5	; 229
      0005D9 1C                    1745 	.db #0x1c	; 28
      0005DA 11                    1746 	.db #0x11	; 17
      0005DB F0                    1747 	.db #0xf0	; 240
      0005DC C1                    1748 	.db #0xc1	; 193
      0005DD C0                    1749 	.db #0xc0	; 192
      0005DE 02                    1750 	.db #0x02	; 2
      0005DF 00                    1751 	.db #0x00	; 0
      0005E0 02                    1752 	.db #0x02	; 2
      0005E1 00                    1753 	.db #0x00	; 0
      0005E2 04                    1754 	.db #0x04	; 4
      0005E3 00                    1755 	.db #0x00	; 0
      0005E4 18                    1756 	.db #0x18	; 24
      0005E5 00                    1757 	.db #0x00	; 0
      0005E6 E0                    1758 	.db #0xe0	; 224
      0005E7 00                    1759 	.db #0x00	; 0
      0005E8                       1760 _ProjectileTiles:
      0005E8 24                    1761 	.db #0x24	; 36
      0005E9 18                    1762 	.db #0x18	; 24
      0005EA 18                    1763 	.db #0x18	; 24
      0005EB 3C                    1764 	.db #0x3c	; 60
      0005EC 18                    1765 	.db #0x18	; 24
      0005ED 3C                    1766 	.db #0x3c	; 60
      0005EE 24                    1767 	.db #0x24	; 36
      0005EF 18                    1768 	.db #0x18	; 24
      0005F0 00                    1769 	.db #0x00	; 0
      0005F1 00                    1770 	.db #0x00	; 0
      0005F2 00                    1771 	.db #0x00	; 0
      0005F3 00                    1772 	.db #0x00	; 0
      0005F4 00                    1773 	.db #0x00	; 0
      0005F5 00                    1774 	.db #0x00	; 0
      0005F6 00                    1775 	.db #0x00	; 0
      0005F7 00                    1776 	.db #0x00	; 0
      0005F8 00                    1777 	.db #0x00	; 0
      0005F9 00                    1778 	.db #0x00	; 0
      0005FA 00                    1779 	.db #0x00	; 0
      0005FB 00                    1780 	.db #0x00	; 0
      0005FC 00                    1781 	.db #0x00	; 0
      0005FD 00                    1782 	.db #0x00	; 0
      0005FE 00                    1783 	.db #0x00	; 0
      0005FF 00                    1784 	.db #0x00	; 0
      000600 00                    1785 	.db #0x00	; 0
      000601 00                    1786 	.db #0x00	; 0
      000602 00                    1787 	.db #0x00	; 0
      000603 00                    1788 	.db #0x00	; 0
      000604 00                    1789 	.db #0x00	; 0
      000605 00                    1790 	.db #0x00	; 0
      000606 00                    1791 	.db #0x00	; 0
      000607 00                    1792 	.db #0x00	; 0
      000608 00                    1793 	.db #0x00	; 0
      000609 00                    1794 	.db #0x00	; 0
      00060A 00                    1795 	.db #0x00	; 0
      00060B 00                    1796 	.db #0x00	; 0
      00060C 09                    1797 	.db #0x09	; 9
      00060D 06                    1798 	.db #0x06	; 6
      00060E 06                    1799 	.db #0x06	; 6
      00060F 0F                    1800 	.db #0x0f	; 15
      000610 06                    1801 	.db #0x06	; 6
      000611 0F                    1802 	.db #0x0f	; 15
      000612 09                    1803 	.db #0x09	; 9
      000613 06                    1804 	.db #0x06	; 6
      000614 00                    1805 	.db #0x00	; 0
      000615 00                    1806 	.db #0x00	; 0
      000616 00                    1807 	.db #0x00	; 0
      000617 00                    1808 	.db #0x00	; 0
      000618 00                    1809 	.db #0x00	; 0
      000619 00                    1810 	.db #0x00	; 0
      00061A 00                    1811 	.db #0x00	; 0
      00061B 00                    1812 	.db #0x00	; 0
      00061C 00                    1813 	.db #0x00	; 0
      00061D 00                    1814 	.db #0x00	; 0
      00061E 00                    1815 	.db #0x00	; 0
      00061F 00                    1816 	.db #0x00	; 0
      000620 00                    1817 	.db #0x00	; 0
      000621 00                    1818 	.db #0x00	; 0
      000622 00                    1819 	.db #0x00	; 0
      000623 00                    1820 	.db #0x00	; 0
      000624 00                    1821 	.db #0x00	; 0
      000625 00                    1822 	.db #0x00	; 0
      000626 00                    1823 	.db #0x00	; 0
      000627 00                    1824 	.db #0x00	; 0
      000628 09                    1825 	.db #0x09	; 9
      000629 06                    1826 	.db #0x06	; 6
      00062A 06                    1827 	.db #0x06	; 6
      00062B 0F                    1828 	.db #0x0f	; 15
      00062C 06                    1829 	.db #0x06	; 6
      00062D 0F                    1830 	.db #0x0f	; 15
      00062E 09                    1831 	.db #0x09	; 9
      00062F 06                    1832 	.db #0x06	; 6
      000630 00                    1833 	.db #0x00	; 0
      000631 00                    1834 	.db #0x00	; 0
      000632 00                    1835 	.db #0x00	; 0
      000633 00                    1836 	.db #0x00	; 0
      000634 00                    1837 	.db #0x00	; 0
      000635 00                    1838 	.db #0x00	; 0
      000636 00                    1839 	.db #0x00	; 0
      000637 00                    1840 	.db #0x00	; 0
      000638 00                    1841 	.db #0x00	; 0
      000639 00                    1842 	.db #0x00	; 0
      00063A 00                    1843 	.db #0x00	; 0
      00063B 00                    1844 	.db #0x00	; 0
      00063C 00                    1845 	.db #0x00	; 0
      00063D 00                    1846 	.db #0x00	; 0
      00063E 00                    1847 	.db #0x00	; 0
      00063F 00                    1848 	.db #0x00	; 0
      000640 00                    1849 	.db #0x00	; 0
      000641 00                    1850 	.db #0x00	; 0
      000642 00                    1851 	.db #0x00	; 0
      000643 00                    1852 	.db #0x00	; 0
      000644 00                    1853 	.db #0x00	; 0
      000645 00                    1854 	.db #0x00	; 0
      000646 00                    1855 	.db #0x00	; 0
      000647 00                    1856 	.db #0x00	; 0
      000648 99                    1857 	.db #0x99	; 153
      000649 66                    1858 	.db #0x66	; 102	'f'
      00064A 66                    1859 	.db #0x66	; 102	'f'
      00064B FF                    1860 	.db #0xff	; 255
      00064C 66                    1861 	.db #0x66	; 102	'f'
      00064D FF                    1862 	.db #0xff	; 255
      00064E 99                    1863 	.db #0x99	; 153
      00064F 66                    1864 	.db #0x66	; 102	'f'
      000650 00                    1865 	.db #0x00	; 0
      000651 00                    1866 	.db #0x00	; 0
      000652 00                    1867 	.db #0x00	; 0
      000653 00                    1868 	.db #0x00	; 0
      000654 00                    1869 	.db #0x00	; 0
      000655 00                    1870 	.db #0x00	; 0
      000656 00                    1871 	.db #0x00	; 0
      000657 00                    1872 	.db #0x00	; 0
      000658 00                    1873 	.db #0x00	; 0
      000659 00                    1874 	.db #0x00	; 0
      00065A 00                    1875 	.db #0x00	; 0
      00065B 00                    1876 	.db #0x00	; 0
      00065C 00                    1877 	.db #0x00	; 0
      00065D 00                    1878 	.db #0x00	; 0
      00065E 00                    1879 	.db #0x00	; 0
      00065F 00                    1880 	.db #0x00	; 0
      000660 00                    1881 	.db #0x00	; 0
      000661 00                    1882 	.db #0x00	; 0
      000662 00                    1883 	.db #0x00	; 0
      000663 00                    1884 	.db #0x00	; 0
      000664 00                    1885 	.db #0x00	; 0
      000665 00                    1886 	.db #0x00	; 0
      000666 00                    1887 	.db #0x00	; 0
      000667 00                    1888 	.db #0x00	; 0
      000668 09                    1889 	.db #0x09	; 9
      000669 06                    1890 	.db #0x06	; 6
      00066A 06                    1891 	.db #0x06	; 6
      00066B 0F                    1892 	.db #0x0f	; 15
      00066C 06                    1893 	.db #0x06	; 6
      00066D 0F                    1894 	.db #0x0f	; 15
      00066E 09                    1895 	.db #0x09	; 9
      00066F 06                    1896 	.db #0x06	; 6
      000670 09                    1897 	.db #0x09	; 9
      000671 06                    1898 	.db #0x06	; 6
      000672 06                    1899 	.db #0x06	; 6
      000673 0F                    1900 	.db #0x0f	; 15
      000674 06                    1901 	.db #0x06	; 6
      000675 0F                    1902 	.db #0x0f	; 15
      000676 09                    1903 	.db #0x09	; 9
      000677 06                    1904 	.db #0x06	; 6
      000678 00                    1905 	.db #0x00	; 0
      000679 00                    1906 	.db #0x00	; 0
      00067A 00                    1907 	.db #0x00	; 0
      00067B 00                    1908 	.db #0x00	; 0
      00067C 00                    1909 	.db #0x00	; 0
      00067D 00                    1910 	.db #0x00	; 0
      00067E 00                    1911 	.db #0x00	; 0
      00067F 00                    1912 	.db #0x00	; 0
      000680 00                    1913 	.db #0x00	; 0
      000681 00                    1914 	.db #0x00	; 0
      000682 00                    1915 	.db #0x00	; 0
      000683 00                    1916 	.db #0x00	; 0
      000684 00                    1917 	.db #0x00	; 0
      000685 00                    1918 	.db #0x00	; 0
      000686 00                    1919 	.db #0x00	; 0
      000687 00                    1920 	.db #0x00	; 0
      000688 90                    1921 	.db #0x90	; 144
      000689 60                    1922 	.db #0x60	; 96
      00068A 60                    1923 	.db #0x60	; 96
      00068B F0                    1924 	.db #0xf0	; 240
      00068C 60                    1925 	.db #0x60	; 96
      00068D F0                    1926 	.db #0xf0	; 240
      00068E 90                    1927 	.db #0x90	; 144
      00068F 60                    1928 	.db #0x60	; 96
      000690 09                    1929 	.db #0x09	; 9
      000691 06                    1930 	.db #0x06	; 6
      000692 06                    1931 	.db #0x06	; 6
      000693 0F                    1932 	.db #0x0f	; 15
      000694 06                    1933 	.db #0x06	; 6
      000695 0F                    1934 	.db #0x0f	; 15
      000696 09                    1935 	.db #0x09	; 9
      000697 06                    1936 	.db #0x06	; 6
      000698 00                    1937 	.db #0x00	; 0
      000699 00                    1938 	.db #0x00	; 0
      00069A 00                    1939 	.db #0x00	; 0
      00069B 00                    1940 	.db #0x00	; 0
      00069C 00                    1941 	.db #0x00	; 0
      00069D 00                    1942 	.db #0x00	; 0
      00069E 00                    1943 	.db #0x00	; 0
      00069F 00                    1944 	.db #0x00	; 0
      0006A0 00                    1945 	.db #0x00	; 0
      0006A1 00                    1946 	.db #0x00	; 0
      0006A2 00                    1947 	.db #0x00	; 0
      0006A3 00                    1948 	.db #0x00	; 0
      0006A4 00                    1949 	.db #0x00	; 0
      0006A5 00                    1950 	.db #0x00	; 0
      0006A6 00                    1951 	.db #0x00	; 0
      0006A7 00                    1952 	.db #0x00	; 0
      0006A8 18                    1953 	.db #0x18	; 24
      0006A9 00                    1954 	.db #0x00	; 0
      0006AA 18                    1955 	.db #0x18	; 24
      0006AB 18                    1956 	.db #0x18	; 24
      0006AC 18                    1957 	.db #0x18	; 24
      0006AD 18                    1958 	.db #0x18	; 24
      0006AE 3C                    1959 	.db #0x3c	; 60
      0006AF 18                    1960 	.db #0x18	; 24
      0006B0 3C                    1961 	.db #0x3c	; 60
      0006B1 18                    1962 	.db #0x18	; 24
      0006B2 3C                    1963 	.db #0x3c	; 60
      0006B3 3C                    1964 	.db #0x3c	; 60
      0006B4 7E                    1965 	.db #0x7e	; 126
      0006B5 3C                    1966 	.db #0x3c	; 60
      0006B6 7E                    1967 	.db #0x7e	; 126
      0006B7 24                    1968 	.db #0x24	; 36
      0006B8 00                    1969 	.db #0x00	; 0
      0006B9 00                    1970 	.db #0x00	; 0
      0006BA 00                    1971 	.db #0x00	; 0
      0006BB 00                    1972 	.db #0x00	; 0
      0006BC 00                    1973 	.db #0x00	; 0
      0006BD 00                    1974 	.db #0x00	; 0
      0006BE 00                    1975 	.db #0x00	; 0
      0006BF 00                    1976 	.db #0x00	; 0
      0006C0 00                    1977 	.db #0x00	; 0
      0006C1 00                    1978 	.db #0x00	; 0
      0006C2 00                    1979 	.db #0x00	; 0
      0006C3 00                    1980 	.db #0x00	; 0
      0006C4 00                    1981 	.db #0x00	; 0
      0006C5 00                    1982 	.db #0x00	; 0
      0006C6 00                    1983 	.db #0x00	; 0
      0006C7 00                    1984 	.db #0x00	; 0
      0006C8 C0                    1985 	.db #0xc0	; 192
      0006C9 00                    1986 	.db #0x00	; 0
      0006CA F8                    1987 	.db #0xf8	; 248
      0006CB E0                    1988 	.db #0xe0	; 224
      0006CC FF                    1989 	.db #0xff	; 255
      0006CD 7E                    1990 	.db #0x7e	; 126
      0006CE FF                    1991 	.db #0xff	; 255
      0006CF 7E                    1992 	.db #0x7e	; 126
      0006D0 F8                    1993 	.db #0xf8	; 248
      0006D1 E0                    1994 	.db #0xe0	; 224
      0006D2 C0                    1995 	.db #0xc0	; 192
      0006D3 00                    1996 	.db #0x00	; 0
      0006D4 00                    1997 	.db #0x00	; 0
      0006D5 00                    1998 	.db #0x00	; 0
      0006D6 00                    1999 	.db #0x00	; 0
      0006D7 00                    2000 	.db #0x00	; 0
      0006D8 00                    2001 	.db #0x00	; 0
      0006D9 00                    2002 	.db #0x00	; 0
      0006DA 00                    2003 	.db #0x00	; 0
      0006DB 00                    2004 	.db #0x00	; 0
      0006DC 00                    2005 	.db #0x00	; 0
      0006DD 00                    2006 	.db #0x00	; 0
      0006DE 00                    2007 	.db #0x00	; 0
      0006DF 00                    2008 	.db #0x00	; 0
      0006E0 00                    2009 	.db #0x00	; 0
      0006E1 00                    2010 	.db #0x00	; 0
      0006E2 00                    2011 	.db #0x00	; 0
      0006E3 00                    2012 	.db #0x00	; 0
      0006E4 00                    2013 	.db #0x00	; 0
      0006E5 00                    2014 	.db #0x00	; 0
      0006E6 00                    2015 	.db #0x00	; 0
      0006E7 00                    2016 	.db #0x00	; 0
      0006E8 06                    2017 	.db #0x06	; 6
      0006E9 00                    2018 	.db #0x00	; 0
      0006EA 0F                    2019 	.db #0x0f	; 15
      0006EB 06                    2020 	.db #0x06	; 6
      0006EC 1F                    2021 	.db #0x1f	; 31
      0006ED 0E                    2022 	.db #0x0e	; 14
      0006EE 7E                    2023 	.db #0x7e	; 126
      0006EF 1C                    2024 	.db #0x1c	; 28
      0006F0 FC                    2025 	.db #0xfc	; 252
      0006F1 78                    2026 	.db #0x78	; 120	'x'
      0006F2 F8                    2027 	.db #0xf8	; 248
      0006F3 F0                    2028 	.db #0xf0	; 240
      0006F4 F8                    2029 	.db #0xf8	; 248
      0006F5 70                    2030 	.db #0x70	; 112	'p'
      0006F6 70                    2031 	.db #0x70	; 112	'p'
      0006F7 20                    2032 	.db #0x20	; 32
      0006F8 00                    2033 	.db #0x00	; 0
      0006F9 00                    2034 	.db #0x00	; 0
      0006FA 00                    2035 	.db #0x00	; 0
      0006FB 00                    2036 	.db #0x00	; 0
      0006FC 00                    2037 	.db #0x00	; 0
      0006FD 00                    2038 	.db #0x00	; 0
      0006FE 00                    2039 	.db #0x00	; 0
      0006FF 00                    2040 	.db #0x00	; 0
      000700 00                    2041 	.db #0x00	; 0
      000701 00                    2042 	.db #0x00	; 0
      000702 00                    2043 	.db #0x00	; 0
      000703 00                    2044 	.db #0x00	; 0
      000704 00                    2045 	.db #0x00	; 0
      000705 00                    2046 	.db #0x00	; 0
      000706 00                    2047 	.db #0x00	; 0
      000707 00                    2048 	.db #0x00	; 0
      000708                       2049 _Pickups:
      000708 FF                    2050 	.db #0xff	; 255
      000709 00                    2051 	.db #0x00	; 0
      00070A 81                    2052 	.db #0x81	; 129
      00070B 00                    2053 	.db #0x00	; 0
      00070C D7                    2054 	.db #0xd7	; 215
      00070D 56                    2055 	.db #0x56	; 86	'V'
      00070E D7                    2056 	.db #0xd7	; 215
      00070F 56                    2057 	.db #0x56	; 86	'V'
      000710 D5                    2058 	.db #0xd5	; 213
      000711 54                    2059 	.db #0x54	; 84	'T'
      000712 F5                    2060 	.db #0xf5	; 245
      000713 74                    2061 	.db #0x74	; 116	't'
      000714 81                    2062 	.db #0x81	; 129
      000715 00                    2063 	.db #0x00	; 0
      000716 FF                    2064 	.db #0xff	; 255
      000717 00                    2065 	.db #0x00	; 0
      000718 00                    2066 	.db #0x00	; 0
      000719 00                    2067 	.db #0x00	; 0
      00071A 00                    2068 	.db #0x00	; 0
      00071B 00                    2069 	.db #0x00	; 0
      00071C 00                    2070 	.db #0x00	; 0
      00071D 00                    2071 	.db #0x00	; 0
      00071E 00                    2072 	.db #0x00	; 0
      00071F 00                    2073 	.db #0x00	; 0
      000720 00                    2074 	.db #0x00	; 0
      000721 00                    2075 	.db #0x00	; 0
      000722 00                    2076 	.db #0x00	; 0
      000723 00                    2077 	.db #0x00	; 0
      000724 00                    2078 	.db #0x00	; 0
      000725 00                    2079 	.db #0x00	; 0
      000726 00                    2080 	.db #0x00	; 0
      000727 00                    2081 	.db #0x00	; 0
      000728 FF                    2082 	.db #0xff	; 255
      000729 00                    2083 	.db #0x00	; 0
      00072A 8F                    2084 	.db #0x8f	; 143
      00072B 06                    2085 	.db #0x06	; 6
      00072C 9F                    2086 	.db #0x9f	; 159
      00072D 0E                    2087 	.db #0x0e	; 14
      00072E FF                    2088 	.db #0xff	; 255
      00072F 1C                    2089 	.db #0x1c	; 28
      000730 FD                    2090 	.db #0xfd	; 253
      000731 78                    2091 	.db #0x78	; 120	'x'
      000732 F9                    2092 	.db #0xf9	; 249
      000733 70                    2093 	.db #0x70	; 112	'p'
      000734 F9                    2094 	.db #0xf9	; 249
      000735 70                    2095 	.db #0x70	; 112	'p'
      000736 FF                    2096 	.db #0xff	; 255
      000737 00                    2097 	.db #0x00	; 0
      000738 00                    2098 	.db #0x00	; 0
      000739 00                    2099 	.db #0x00	; 0
      00073A 00                    2100 	.db #0x00	; 0
      00073B 00                    2101 	.db #0x00	; 0
      00073C 00                    2102 	.db #0x00	; 0
      00073D 00                    2103 	.db #0x00	; 0
      00073E 00                    2104 	.db #0x00	; 0
      00073F 00                    2105 	.db #0x00	; 0
      000740 00                    2106 	.db #0x00	; 0
      000741 00                    2107 	.db #0x00	; 0
      000742 00                    2108 	.db #0x00	; 0
      000743 00                    2109 	.db #0x00	; 0
      000744 00                    2110 	.db #0x00	; 0
      000745 00                    2111 	.db #0x00	; 0
      000746 00                    2112 	.db #0x00	; 0
      000747 00                    2113 	.db #0x00	; 0
      000748                       2114 _Player1:
      000748 08                    2115 	.db #0x08	; 8
      000749 08                    2116 	.db #0x08	; 8
      00074A 1C                    2117 	.db #0x1c	; 28
      00074B 14                    2118 	.db #0x14	; 20
      00074C 38                    2119 	.db #0x38	; 56	'8'
      00074D 28                    2120 	.db #0x28	; 40
      00074E 68                    2121 	.db #0x68	; 104	'h'
      00074F 58                    2122 	.db #0x58	; 88	'X'
      000750 50                    2123 	.db #0x50	; 80	'P'
      000751 71                    2124 	.db #0x71	; 113	'q'
      000752 D0                    2125 	.db #0xd0	; 208
      000753 B2                    2126 	.db #0xb2	; 178
      000754 D5                    2127 	.db #0xd5	; 213
      000755 B6                    2128 	.db #0xb6	; 182
      000756 D5                    2129 	.db #0xd5	; 213
      000757 B6                    2130 	.db #0xb6	; 182
      000758 D5                    2131 	.db #0xd5	; 213
      000759 B6                    2132 	.db #0xb6	; 182
      00075A CD                    2133 	.db #0xcd	; 205
      00075B BE                    2134 	.db #0xbe	; 190
      00075C C5                    2135 	.db #0xc5	; 197
      00075D BE                    2136 	.db #0xbe	; 190
      00075E 65                    2137 	.db #0x65	; 101	'e'
      00075F 5E                    2138 	.db #0x5e	; 94
      000760 3E                    2139 	.db #0x3e	; 62
      000761 2F                    2140 	.db #0x2f	; 47
      000762 13                    2141 	.db #0x13	; 19
      000763 13                    2142 	.db #0x13	; 19
      000764 06                    2143 	.db #0x06	; 6
      000765 07                    2144 	.db #0x07	; 7
      000766 07                    2145 	.db #0x07	; 7
      000767 05                    2146 	.db #0x05	; 5
      000768 10                    2147 	.db #0x10	; 16
      000769 10                    2148 	.db #0x10	; 16
      00076A 38                    2149 	.db #0x38	; 56	'8'
      00076B 28                    2150 	.db #0x28	; 40
      00076C 1C                    2151 	.db #0x1c	; 28
      00076D 14                    2152 	.db #0x14	; 20
      00076E 16                    2153 	.db #0x16	; 22
      00076F 1A                    2154 	.db #0x1a	; 26
      000770 0A                    2155 	.db #0x0a	; 10
      000771 8E                    2156 	.db #0x8e	; 142
      000772 0B                    2157 	.db #0x0b	; 11
      000773 4D                    2158 	.db #0x4d	; 77	'M'
      000774 AB                    2159 	.db #0xab	; 171
      000775 6D                    2160 	.db #0x6d	; 109	'm'
      000776 AB                    2161 	.db #0xab	; 171
      000777 6D                    2162 	.db #0x6d	; 109	'm'
      000778 AB                    2163 	.db #0xab	; 171
      000779 6D                    2164 	.db #0x6d	; 109	'm'
      00077A B3                    2165 	.db #0xb3	; 179
      00077B 7D                    2166 	.db #0x7d	; 125
      00077C A3                    2167 	.db #0xa3	; 163
      00077D 7D                    2168 	.db #0x7d	; 125
      00077E A6                    2169 	.db #0xa6	; 166
      00077F 7A                    2170 	.db #0x7a	; 122	'z'
      000780 7C                    2171 	.db #0x7c	; 124
      000781 F4                    2172 	.db #0xf4	; 244
      000782 C8                    2173 	.db #0xc8	; 200
      000783 C8                    2174 	.db #0xc8	; 200
      000784 60                    2175 	.db #0x60	; 96
      000785 E0                    2176 	.db #0xe0	; 224
      000786 E0                    2177 	.db #0xe0	; 224
      000787 A0                    2178 	.db #0xa0	; 160
      000788 07                    2179 	.db #0x07	; 7
      000789 07                    2180 	.db #0x07	; 7
      00078A 0F                    2181 	.db #0x0f	; 15
      00078B 08                    2182 	.db #0x08	; 8
      00078C 18                    2183 	.db #0x18	; 24
      00078D 17                    2184 	.db #0x17	; 23
      00078E 31                    2185 	.db #0x31	; 49	'1'
      00078F 2F                    2186 	.db #0x2f	; 47
      000790 12                    2187 	.db #0x12	; 18
      000791 1E                    2188 	.db #0x1e	; 30
      000792 DF                    2189 	.db #0xdf	; 223
      000793 DF                    2190 	.db #0xdf	; 223
      000794 F0                    2191 	.db #0xf0	; 240
      000795 7F                    2192 	.db #0x7f	; 127
      000796 AF                    2193 	.db #0xaf	; 175
      000797 F0                    2194 	.db #0xf0	; 240
      000798 AF                    2195 	.db #0xaf	; 175
      000799 F0                    2196 	.db #0xf0	; 240
      00079A F0                    2197 	.db #0xf0	; 240
      00079B 7F                    2198 	.db #0x7f	; 127
      00079C DF                    2199 	.db #0xdf	; 223
      00079D DF                    2200 	.db #0xdf	; 223
      00079E 12                    2201 	.db #0x12	; 18
      00079F 1E                    2202 	.db #0x1e	; 30
      0007A0 31                    2203 	.db #0x31	; 49	'1'
      0007A1 2F                    2204 	.db #0x2f	; 47
      0007A2 18                    2205 	.db #0x18	; 24
      0007A3 17                    2206 	.db #0x17	; 23
      0007A4 0F                    2207 	.db #0x0f	; 15
      0007A5 08                    2208 	.db #0x08	; 8
      0007A6 07                    2209 	.db #0x07	; 7
      0007A7 07                    2210 	.db #0x07	; 7
      0007A8 E0                    2211 	.db #0xe0	; 224
      0007A9 E0                    2212 	.db #0xe0	; 224
      0007AA F8                    2213 	.db #0xf8	; 248
      0007AB 18                    2214 	.db #0x18	; 24
      0007AC 0C                    2215 	.db #0x0c	; 12
      0007AD F4                    2216 	.db #0xf4	; 244
      0007AE F6                    2217 	.db #0xf6	; 246
      0007AF FA                    2218 	.db #0xfa	; 250
      0007B0 0F                    2219 	.db #0x0f	; 15
      0007B1 0D                    2220 	.db #0x0d	; 13
      0007B2 C2                    2221 	.db #0xc2	; 194
      0007B3 C2                    2222 	.db #0xc2	; 194
      0007B4 00                    2223 	.db #0x00	; 0
      0007B5 E0                    2224 	.db #0xe0	; 224
      0007B6 C0                    2225 	.db #0xc0	; 192
      0007B7 10                    2226 	.db #0x10	; 16
      0007B8 C0                    2227 	.db #0xc0	; 192
      0007B9 10                    2228 	.db #0x10	; 16
      0007BA 00                    2229 	.db #0x00	; 0
      0007BB E0                    2230 	.db #0xe0	; 224
      0007BC C2                    2231 	.db #0xc2	; 194
      0007BD C2                    2232 	.db #0xc2	; 194
      0007BE 0F                    2233 	.db #0x0f	; 15
      0007BF 0D                    2234 	.db #0x0d	; 13
      0007C0 F6                    2235 	.db #0xf6	; 246
      0007C1 FA                    2236 	.db #0xfa	; 250
      0007C2 0C                    2237 	.db #0x0c	; 12
      0007C3 F4                    2238 	.db #0xf4	; 244
      0007C4 F8                    2239 	.db #0xf8	; 248
      0007C5 18                    2240 	.db #0x18	; 24
      0007C6 E0                    2241 	.db #0xe0	; 224
      0007C7 E0                    2242 	.db #0xe0	; 224
      0007C8 07                    2243 	.db #0x07	; 7
      0007C9 07                    2244 	.db #0x07	; 7
      0007CA 1B                    2245 	.db #0x1b	; 27
      0007CB 1C                    2246 	.db #0x1c	; 28
      0007CC 38                    2247 	.db #0x38	; 56	'8'
      0007CD 27                    2248 	.db #0x27	; 39
      0007CE 60                    2249 	.db #0x60	; 96
      0007CF 5E                    2250 	.db #0x5e	; 94
      0007D0 60                    2251 	.db #0x60	; 96
      0007D1 5C                    2252 	.db #0x5c	; 92
      0007D2 41                    2253 	.db #0x41	; 65	'A'
      0007D3 79                    2254 	.db #0x79	; 121	'y'
      0007D4 C4                    2255 	.db #0xc4	; 196
      0007D5 B7                    2256 	.db #0xb7	; 183
      0007D6 99                    2257 	.db #0x99	; 153
      0007D7 FE                    2258 	.db #0xfe	; 254
      0007D8 B3                    2259 	.db #0xb3	; 179
      0007D9 EC                    2260 	.db #0xec	; 236
      0007DA 67                    2261 	.db #0x67	; 103	'g'
      0007DB 58                    2262 	.db #0x58	; 88	'X'
      0007DC 2E                    2263 	.db #0x2e	; 46
      0007DD 31                    2264 	.db #0x31	; 49	'1'
      0007DE 5C                    2265 	.db #0x5c	; 92
      0007DF 73                    2266 	.db #0x73	; 115	's'
      0007E0 69                    2267 	.db #0x69	; 105	'i'
      0007E1 5E                    2268 	.db #0x5e	; 94
      0007E2 37                    2269 	.db #0x37	; 55	'7'
      0007E3 2D                    2270 	.db #0x2d	; 45
      0007E4 1A                    2271 	.db #0x1a	; 26
      0007E5 1B                    2272 	.db #0x1b	; 27
      0007E6 01                    2273 	.db #0x01	; 1
      0007E7 01                    2274 	.db #0x01	; 1
      0007E8 E0                    2275 	.db #0xe0	; 224
      0007E9 E0                    2276 	.db #0xe0	; 224
      0007EA 90                    2277 	.db #0x90	; 144
      0007EB 70                    2278 	.db #0x70	; 112	'p'
      0007EC C0                    2279 	.db #0xc0	; 192
      0007ED C0                    2280 	.db #0xc0	; 192
      0007EE 00                    2281 	.db #0x00	; 0
      0007EF 00                    2282 	.db #0x00	; 0
      0007F0 02                    2283 	.db #0x02	; 2
      0007F1 02                    2284 	.db #0x02	; 2
      0007F2 C1                    2285 	.db #0xc1	; 193
      0007F3 C3                    2286 	.db #0xc3	; 195
      0007F4 65                    2287 	.db #0x65	; 101	'e'
      0007F5 A7                    2288 	.db #0xa7	; 167
      0007F6 A7                    2289 	.db #0xa7	; 167
      0007F7 65                    2290 	.db #0x65	; 101	'e'
      0007F8 A3                    2291 	.db #0xa3	; 163
      0007F9 65                    2292 	.db #0x65	; 101	'e'
      0007FA 03                    2293 	.db #0x03	; 3
      0007FB CD                    2294 	.db #0xcd	; 205
      0007FC 41                    2295 	.db #0x41	; 65	'A'
      0007FD DF                    2296 	.db #0xdf	; 223
      0007FE 86                    2297 	.db #0x86	; 134
      0007FF BA                    2298 	.db #0xba	; 186
      000800 86                    2299 	.db #0x86	; 134
      000801 FA                    2300 	.db #0xfa	; 250
      000802 1C                    2301 	.db #0x1c	; 28
      000803 E4                    2302 	.db #0xe4	; 228
      000804 78                    2303 	.db #0x78	; 120	'x'
      000805 B8                    2304 	.db #0xb8	; 184
      000806 C0                    2305 	.db #0xc0	; 192
      000807 C0                    2306 	.db #0xc0	; 192
      000808 00                    2307 	.db #0x00	; 0
      000809 00                    2308 	.db #0x00	; 0
      00080A 00                    2309 	.db #0x00	; 0
      00080B 00                    2310 	.db #0x00	; 0
      00080C 00                    2311 	.db #0x00	; 0
      00080D 00                    2312 	.db #0x00	; 0
      00080E 00                    2313 	.db #0x00	; 0
      00080F 00                    2314 	.db #0x00	; 0
      000810 00                    2315 	.db #0x00	; 0
      000811 00                    2316 	.db #0x00	; 0
      000812 00                    2317 	.db #0x00	; 0
      000813 00                    2318 	.db #0x00	; 0
      000814 00                    2319 	.db #0x00	; 0
      000815 00                    2320 	.db #0x00	; 0
      000816 00                    2321 	.db #0x00	; 0
      000817 00                    2322 	.db #0x00	; 0
      000818 00                    2323 	.db #0x00	; 0
      000819 00                    2324 	.db #0x00	; 0
      00081A 00                    2325 	.db #0x00	; 0
      00081B 00                    2326 	.db #0x00	; 0
      00081C 00                    2327 	.db #0x00	; 0
      00081D 00                    2328 	.db #0x00	; 0
      00081E 00                    2329 	.db #0x00	; 0
      00081F 00                    2330 	.db #0x00	; 0
      000820 00                    2331 	.db #0x00	; 0
      000821 00                    2332 	.db #0x00	; 0
      000822 00                    2333 	.db #0x00	; 0
      000823 00                    2334 	.db #0x00	; 0
      000824 00                    2335 	.db #0x00	; 0
      000825 00                    2336 	.db #0x00	; 0
      000826 00                    2337 	.db #0x00	; 0
      000827 00                    2338 	.db #0x00	; 0
      000828 00                    2339 	.db #0x00	; 0
      000829 00                    2340 	.db #0x00	; 0
      00082A 00                    2341 	.db #0x00	; 0
      00082B 00                    2342 	.db #0x00	; 0
      00082C 00                    2343 	.db #0x00	; 0
      00082D 00                    2344 	.db #0x00	; 0
      00082E 00                    2345 	.db #0x00	; 0
      00082F 00                    2346 	.db #0x00	; 0
      000830 00                    2347 	.db #0x00	; 0
      000831 00                    2348 	.db #0x00	; 0
      000832 00                    2349 	.db #0x00	; 0
      000833 00                    2350 	.db #0x00	; 0
      000834 00                    2351 	.db #0x00	; 0
      000835 00                    2352 	.db #0x00	; 0
      000836 00                    2353 	.db #0x00	; 0
      000837 00                    2354 	.db #0x00	; 0
      000838 00                    2355 	.db #0x00	; 0
      000839 00                    2356 	.db #0x00	; 0
      00083A 00                    2357 	.db #0x00	; 0
      00083B 00                    2358 	.db #0x00	; 0
      00083C 00                    2359 	.db #0x00	; 0
      00083D 00                    2360 	.db #0x00	; 0
      00083E 00                    2361 	.db #0x00	; 0
      00083F 00                    2362 	.db #0x00	; 0
      000840 00                    2363 	.db #0x00	; 0
      000841 00                    2364 	.db #0x00	; 0
      000842 00                    2365 	.db #0x00	; 0
      000843 00                    2366 	.db #0x00	; 0
      000844 00                    2367 	.db #0x00	; 0
      000845 00                    2368 	.db #0x00	; 0
      000846 00                    2369 	.db #0x00	; 0
      000847 00                    2370 	.db #0x00	; 0
      000848                       2371 _BLANKSIZE:
      000848 03                    2372 	.db #0x03	; 3
      000849                       2373 _BLANK:
      000849 26                    2374 	.db #0x26	; 38
      00084A 2B                    2375 	.db #0x2b	; 43
      00084B 2C                    2376 	.db #0x2c	; 44
      00084C                       2377 _EMPTYSPRITE:
      00084C 50                    2378 	.db #0x50	; 80	'P'
      00084D                       2379 _ENEMYCOUNT:
      00084D 05                    2380 	.db #0x05	; 5
      00084E                       2381 _xSpawnPositions:
      00084E 00                    2382 	.db #0x00	; 0
      00084F 60                    2383 	.db #0x60	; 96
      000850 B0                    2384 	.db #0xb0	; 176
      000851 00                    2385 	.db #0x00	; 0
      000852 B0                    2386 	.db #0xb0	; 176
      000853 00                    2387 	.db #0x00	; 0
      000854 60                    2388 	.db #0x60	; 96
      000855 B0                    2389 	.db #0xb0	; 176
      000856                       2390 _ySpawnPositions:
      000856 00                    2391 	.db #0x00	; 0
      000857 00                    2392 	.db #0x00	; 0
      000858 00                    2393 	.db #0x00	; 0
      000859 5C                    2394 	.db #0x5c	; 92
      00085A 5C                    2395 	.db #0x5c	; 92
      00085B A0                    2396 	.db #0xa0	; 160
      00085C A0                    2397 	.db #0xa0	; 160
      00085D A0                    2398 	.db #0xa0	; 160
      00085E                       2399 _PROJECTILECOUNT:
      00085E 05                    2400 	.db #0x05	; 5
      00085F                       2401 _PLAYERSIZE:
      00085F 10                    2402 	.db #0x10	; 16
      000860                       2403 _maxHull:
      000860 64                    2404 	.db #0x64	;  100	'd'
      000861                       2405 _maxShield:
      000861 64                    2406 	.db #0x64	;  100	'd'
                                   2407 ;src/main.c:119: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2408 ;	---------------------------------
                                   2409 ; Function setHealthBar
                                   2410 ; ---------------------------------
      000862                       2411 _setHealthBar::
      000862 E8 FB                 2412 	add	sp, #-5
                                   2413 ;src/main.c:121: if (hp >= 80) {
      000864 F8 08                 2414 	ldhl	sp,	#8
      000866 7E                    2415 	ld	a, (hl)
      000867 D6 50                 2416 	sub	a, #0x50
      000869 38 31                 2417 	jr	C, 00102$
                                   2418 ;src/main.c:122: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      00086B F8 00                 2419 	ldhl	sp,	#0
      00086D 4D                    2420 	ld	c, l
      00086E 44                    2421 	ld	b, h
      00086F 36 50                 2422 	ld	(hl), #0x50
      000871 69                    2423 	ld	l, c
                                   2424 ;	spillPairReg hl
                                   2425 ;	spillPairReg hl
      000872 60                    2426 	ld	h, b
                                   2427 ;	spillPairReg hl
                                   2428 ;	spillPairReg hl
      000873 23                    2429 	inc	hl
      000874 36 50                 2430 	ld	(hl), #0x50
      000876 69                    2431 	ld	l, c
                                   2432 ;	spillPairReg hl
                                   2433 ;	spillPairReg hl
      000877 60                    2434 	ld	h, b
                                   2435 ;	spillPairReg hl
                                   2436 ;	spillPairReg hl
      000878 23                    2437 	inc	hl
      000879 23                    2438 	inc	hl
      00087A 36 50                 2439 	ld	(hl), #0x50
      00087C 69                    2440 	ld	l, c
                                   2441 ;	spillPairReg hl
                                   2442 ;	spillPairReg hl
      00087D 60                    2443 	ld	h, b
                                   2444 ;	spillPairReg hl
                                   2445 ;	spillPairReg hl
      00087E 23                    2446 	inc	hl
      00087F 23                    2447 	inc	hl
      000880 23                    2448 	inc	hl
      000881 36 50                 2449 	ld	(hl), #0x50
      000883 21 04 00              2450 	ld	hl, #0x0004
      000886 09                    2451 	add	hl, bc
      000887 36 50                 2452 	ld	(hl), #0x50
                                   2453 ;src/main.c:123: set_win_tiles(5,row,5,1,blockmap);
      000889 C5                    2454 	push	bc
      00088A 21 05 01              2455 	ld	hl, #0x105
      00088D E5                    2456 	push	hl
      00088E F8 0B                 2457 	ldhl	sp,	#11
      000890 66                    2458 	ld	h, (hl)
      000891 2E 05                 2459 	ld	l, #0x05
      000893 E5                    2460 	push	hl
      000894 CDr00r00              2461 	call	_set_win_tiles
      000897 E8 06                 2462 	add	sp, #6
                                   2463 ;src/main.c:124: return;
      000899 C3r70r09              2464 	jp	00109$
      00089C                       2465 00102$:
                                   2466 ;src/main.c:126: if (hp >= 60) {
      00089C F8 08                 2467 	ldhl	sp,	#8
      00089E 7E                    2468 	ld	a, (hl)
      00089F D6 3C                 2469 	sub	a, #0x3c
      0008A1 38 31                 2470 	jr	C, 00104$
                                   2471 ;src/main.c:127: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0008A3 F8 00                 2472 	ldhl	sp,	#0
      0008A5 4D                    2473 	ld	c, l
      0008A6 44                    2474 	ld	b, h
      0008A7 36 50                 2475 	ld	(hl), #0x50
      0008A9 69                    2476 	ld	l, c
                                   2477 ;	spillPairReg hl
                                   2478 ;	spillPairReg hl
      0008AA 60                    2479 	ld	h, b
                                   2480 ;	spillPairReg hl
                                   2481 ;	spillPairReg hl
      0008AB 23                    2482 	inc	hl
      0008AC 36 50                 2483 	ld	(hl), #0x50
      0008AE 69                    2484 	ld	l, c
                                   2485 ;	spillPairReg hl
                                   2486 ;	spillPairReg hl
      0008AF 60                    2487 	ld	h, b
                                   2488 ;	spillPairReg hl
                                   2489 ;	spillPairReg hl
      0008B0 23                    2490 	inc	hl
      0008B1 23                    2491 	inc	hl
      0008B2 36 50                 2492 	ld	(hl), #0x50
      0008B4 69                    2493 	ld	l, c
                                   2494 ;	spillPairReg hl
                                   2495 ;	spillPairReg hl
      0008B5 60                    2496 	ld	h, b
                                   2497 ;	spillPairReg hl
                                   2498 ;	spillPairReg hl
      0008B6 23                    2499 	inc	hl
      0008B7 23                    2500 	inc	hl
      0008B8 23                    2501 	inc	hl
      0008B9 36 50                 2502 	ld	(hl), #0x50
      0008BB 21 04 00              2503 	ld	hl, #0x0004
      0008BE 09                    2504 	add	hl, bc
      0008BF 36 00                 2505 	ld	(hl), #0x00
                                   2506 ;src/main.c:128: set_win_tiles(5,row,5,1,blockmap);
      0008C1 C5                    2507 	push	bc
      0008C2 21 05 01              2508 	ld	hl, #0x105
      0008C5 E5                    2509 	push	hl
      0008C6 F8 0B                 2510 	ldhl	sp,	#11
      0008C8 66                    2511 	ld	h, (hl)
      0008C9 2E 05                 2512 	ld	l, #0x05
      0008CB E5                    2513 	push	hl
      0008CC CDr00r00              2514 	call	_set_win_tiles
      0008CF E8 06                 2515 	add	sp, #6
                                   2516 ;src/main.c:129: return;
      0008D1 C3r70r09              2517 	jp	00109$
      0008D4                       2518 00104$:
                                   2519 ;src/main.c:131: if (hp >= 40) {
      0008D4 F8 08                 2520 	ldhl	sp,	#8
      0008D6 7E                    2521 	ld	a, (hl)
      0008D7 D6 28                 2522 	sub	a, #0x28
      0008D9 38 30                 2523 	jr	C, 00106$
                                   2524 ;src/main.c:132: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      0008DB F8 00                 2525 	ldhl	sp,	#0
      0008DD 4D                    2526 	ld	c, l
      0008DE 44                    2527 	ld	b, h
      0008DF 36 50                 2528 	ld	(hl), #0x50
      0008E1 69                    2529 	ld	l, c
                                   2530 ;	spillPairReg hl
                                   2531 ;	spillPairReg hl
      0008E2 60                    2532 	ld	h, b
                                   2533 ;	spillPairReg hl
                                   2534 ;	spillPairReg hl
      0008E3 23                    2535 	inc	hl
      0008E4 36 50                 2536 	ld	(hl), #0x50
      0008E6 69                    2537 	ld	l, c
                                   2538 ;	spillPairReg hl
                                   2539 ;	spillPairReg hl
      0008E7 60                    2540 	ld	h, b
                                   2541 ;	spillPairReg hl
                                   2542 ;	spillPairReg hl
      0008E8 23                    2543 	inc	hl
      0008E9 23                    2544 	inc	hl
      0008EA 36 50                 2545 	ld	(hl), #0x50
      0008EC 59                    2546 	ld	e, c
      0008ED 50                    2547 	ld	d, b
      0008EE 13                    2548 	inc	de
      0008EF 13                    2549 	inc	de
      0008F0 13                    2550 	inc	de
      0008F1 AF                    2551 	xor	a, a
      0008F2 12                    2552 	ld	(de), a
      0008F3 21 04 00              2553 	ld	hl, #0x0004
      0008F6 09                    2554 	add	hl, bc
      0008F7 36 00                 2555 	ld	(hl), #0x00
                                   2556 ;src/main.c:133: set_win_tiles(5,row,5,1,blockmap);
      0008F9 C5                    2557 	push	bc
      0008FA 21 05 01              2558 	ld	hl, #0x105
      0008FD E5                    2559 	push	hl
      0008FE F8 0B                 2560 	ldhl	sp,	#11
      000900 66                    2561 	ld	h, (hl)
      000901 2E 05                 2562 	ld	l, #0x05
      000903 E5                    2563 	push	hl
      000904 CDr00r00              2564 	call	_set_win_tiles
      000907 E8 06                 2565 	add	sp, #6
                                   2566 ;src/main.c:134: return;
      000909 18 65                 2567 	jr	00109$
      00090B                       2568 00106$:
                                   2569 ;src/main.c:136: if (hp >= 20) {
      00090B F8 08                 2570 	ldhl	sp,	#8
      00090D 7E                    2571 	ld	a, (hl)
      00090E D6 14                 2572 	sub	a, #0x14
      000910 38 30                 2573 	jr	C, 00108$
                                   2574 ;src/main.c:137: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000912 F8 00                 2575 	ldhl	sp,	#0
      000914 4D                    2576 	ld	c, l
      000915 44                    2577 	ld	b, h
      000916 36 50                 2578 	ld	(hl), #0x50
      000918 69                    2579 	ld	l, c
                                   2580 ;	spillPairReg hl
                                   2581 ;	spillPairReg hl
      000919 60                    2582 	ld	h, b
                                   2583 ;	spillPairReg hl
                                   2584 ;	spillPairReg hl
      00091A 23                    2585 	inc	hl
      00091B 36 50                 2586 	ld	(hl), #0x50
      00091D 59                    2587 	ld	e, c
      00091E 50                    2588 	ld	d, b
      00091F 13                    2589 	inc	de
      000920 13                    2590 	inc	de
      000921 AF                    2591 	xor	a, a
      000922 12                    2592 	ld	(de), a
      000923 59                    2593 	ld	e, c
      000924 50                    2594 	ld	d, b
      000925 13                    2595 	inc	de
      000926 13                    2596 	inc	de
      000927 13                    2597 	inc	de
      000928 AF                    2598 	xor	a, a
      000929 12                    2599 	ld	(de), a
      00092A 21 04 00              2600 	ld	hl, #0x0004
      00092D 09                    2601 	add	hl, bc
      00092E 36 00                 2602 	ld	(hl), #0x00
                                   2603 ;src/main.c:138: set_win_tiles(5,row,5,1,blockmap);
      000930 C5                    2604 	push	bc
      000931 21 05 01              2605 	ld	hl, #0x105
      000934 E5                    2606 	push	hl
      000935 F8 0B                 2607 	ldhl	sp,	#11
      000937 66                    2608 	ld	h, (hl)
      000938 2E 05                 2609 	ld	l, #0x05
      00093A E5                    2610 	push	hl
      00093B CDr00r00              2611 	call	_set_win_tiles
      00093E E8 06                 2612 	add	sp, #6
                                   2613 ;src/main.c:139: return;
      000940 18 2E                 2614 	jr	00109$
      000942                       2615 00108$:
                                   2616 ;src/main.c:141: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000942 F8 00                 2617 	ldhl	sp,	#0
      000944 4D                    2618 	ld	c, l
      000945 44                    2619 	ld	b, h
      000946 36 50                 2620 	ld	(hl), #0x50
      000948 59                    2621 	ld	e, c
      000949 50                    2622 	ld	d, b
      00094A 13                    2623 	inc	de
      00094B AF                    2624 	xor	a, a
      00094C 12                    2625 	ld	(de), a
      00094D 59                    2626 	ld	e, c
      00094E 50                    2627 	ld	d, b
      00094F 13                    2628 	inc	de
      000950 13                    2629 	inc	de
      000951 AF                    2630 	xor	a, a
      000952 12                    2631 	ld	(de), a
      000953 59                    2632 	ld	e, c
      000954 50                    2633 	ld	d, b
      000955 13                    2634 	inc	de
      000956 13                    2635 	inc	de
      000957 13                    2636 	inc	de
      000958 AF                    2637 	xor	a, a
      000959 12                    2638 	ld	(de), a
      00095A 21 04 00              2639 	ld	hl, #0x0004
      00095D 09                    2640 	add	hl, bc
      00095E 36 00                 2641 	ld	(hl), #0x00
                                   2642 ;src/main.c:142: set_win_tiles(5,row,5,1,blockmap);
      000960 C5                    2643 	push	bc
      000961 21 05 01              2644 	ld	hl, #0x105
      000964 E5                    2645 	push	hl
      000965 F8 0B                 2646 	ldhl	sp,	#11
      000967 66                    2647 	ld	h, (hl)
      000968 2E 05                 2648 	ld	l, #0x05
      00096A E5                    2649 	push	hl
      00096B CDr00r00              2650 	call	_set_win_tiles
      00096E E8 06                 2651 	add	sp, #6
                                   2652 ;src/main.c:143: return;
      000970                       2653 00109$:
                                   2654 ;src/main.c:145: }
      000970 E8 05                 2655 	add	sp, #5
      000972 C9                    2656 	ret
                                   2657 ;src/main.c:147: void updateScore() {
                                   2658 ;	---------------------------------
                                   2659 ; Function updateScore
                                   2660 ; ---------------------------------
      000973                       2661 _updateScore::
      000973 E8 F6                 2662 	add	sp, #-10
                                   2663 ;src/main.c:151: len = bcd2text(&SCORE, 0x01, buf);
      000975 F8 00                 2664 	ldhl	sp,	#0
      000977 4D                    2665 	ld	c, l
      000978 44                    2666 	ld	b, h
      000979 59                    2667 	ld	e, c
      00097A 50                    2668 	ld	d, b
      00097B C5                    2669 	push	bc
      00097C D5                    2670 	push	de
      00097D 3E 01                 2671 	ld	a, #0x01
      00097F F5                    2672 	push	af
      000980 33                    2673 	inc	sp
      000981 11rB2r00              2674 	ld	de, #_SCORE
      000984 D5                    2675 	push	de
      000985 CDr00r00              2676 	call	_bcd2text
      000988 E8 05                 2677 	add	sp, #5
      00098A C1                    2678 	pop	bc
                                   2679 ;src/main.c:152: set_win_tiles(15, 1, 5, 1, buf+3);
      00098B 03                    2680 	inc	bc
      00098C 03                    2681 	inc	bc
      00098D 03                    2682 	inc	bc
      00098E C5                    2683 	push	bc
      00098F 21 05 01              2684 	ld	hl, #0x105
      000992 E5                    2685 	push	hl
      000993 21 0F 01              2686 	ld	hl, #0x10f
      000996 E5                    2687 	push	hl
      000997 CDr00r00              2688 	call	_set_win_tiles
                                   2689 ;src/main.c:153: }
      00099A E8 10                 2690 	add	sp, #16
      00099C C9                    2691 	ret
                                   2692 ;src/main.c:155: void updateMissileCount(int8_t amount) {
                                   2693 ;	---------------------------------
                                   2694 ; Function updateMissileCount
                                   2695 ; ---------------------------------
      00099D                       2696 _updateMissileCount::
      00099D E8 F6                 2697 	add	sp, #-10
                                   2698 ;src/main.c:156: if (amount == -1) {
      00099F F8 0C                 2699 	ldhl	sp,	#12
      0009A1 7E                    2700 	ld	a, (hl)
      0009A2 3C                    2701 	inc	a
      0009A3 20 11                 2702 	jr	NZ, 00102$
                                   2703 ;src/main.c:157: missiles--;
      0009A5 21rA7r00              2704 	ld	hl, #_missiles
      0009A8 35                    2705 	dec	(hl)
                                   2706 ;src/main.c:158: bcd_sub(&MISSILES, &INCREMENT);
      0009A9 11rB6r00              2707 	ld	de, #_INCREMENT
      0009AC D5                    2708 	push	de
      0009AD 11rA8r00              2709 	ld	de, #_MISSILES
      0009B0 D5                    2710 	push	de
      0009B1 CDr00r00              2711 	call	_bcd_sub
      0009B4 E8 04                 2712 	add	sp, #4
      0009B6                       2713 00102$:
                                   2714 ;src/main.c:162: len = bcd2text(&MISSILES, 0x01, buf);
      0009B6 F8 00                 2715 	ldhl	sp,	#0
      0009B8 4D                    2716 	ld	c, l
      0009B9 44                    2717 	ld	b, h
      0009BA 59                    2718 	ld	e, c
      0009BB 50                    2719 	ld	d, b
      0009BC C5                    2720 	push	bc
      0009BD D5                    2721 	push	de
      0009BE 3E 01                 2722 	ld	a, #0x01
      0009C0 F5                    2723 	push	af
      0009C1 33                    2724 	inc	sp
      0009C2 11rA8r00              2725 	ld	de, #_MISSILES
      0009C5 D5                    2726 	push	de
      0009C6 CDr00r00              2727 	call	_bcd2text
      0009C9 E8 05                 2728 	add	sp, #5
      0009CB C1                    2729 	pop	bc
                                   2730 ;src/main.c:163: set_win_tiles(18, 0, 2, 1, buf+6);
      0009CC 21 06 00              2731 	ld	hl, #0x0006
      0009CF 09                    2732 	add	hl, bc
      0009D0 E5                    2733 	push	hl
      0009D1 21 02 01              2734 	ld	hl, #0x102
      0009D4 E5                    2735 	push	hl
      0009D5 21 12 00              2736 	ld	hl, #0x12
      0009D8 E5                    2737 	push	hl
      0009D9 CDr00r00              2738 	call	_set_win_tiles
                                   2739 ;src/main.c:165: }
      0009DC E8 10                 2740 	add	sp, #16
      0009DE C9                    2741 	ret
                                   2742 ;src/main.c:167: void incrementScore() {
                                   2743 ;	---------------------------------
                                   2744 ; Function incrementScore
                                   2745 ; ---------------------------------
      0009DF                       2746 _incrementScore::
                                   2747 ;src/main.c:168: score += 1;
      0009DF 21rB0r00              2748 	ld	hl, #_score
      0009E2 2A                    2749 	ld	a, (hl+)
      0009E3 4F                    2750 	ld	c, a
      0009E4 3A                    2751 	ld	a, (hl-)
      0009E5 47                    2752 	ld	b, a
      0009E6 03                    2753 	inc	bc
      0009E7 79                    2754 	ld	a, c
      0009E8 22                    2755 	ld	(hl+), a
      0009E9 70                    2756 	ld	(hl), b
                                   2757 ;src/main.c:169: bcd_add(&SCORE, &INCREMENT);
      0009EA 11rB6r00              2758 	ld	de, #_INCREMENT
      0009ED D5                    2759 	push	de
      0009EE 11rB2r00              2760 	ld	de, #_SCORE
      0009F1 D5                    2761 	push	de
      0009F2 CDr00r00              2762 	call	_bcd_add
      0009F5 E8 04                 2763 	add	sp, #4
                                   2764 ;src/main.c:170: }
      0009F7 C9                    2765 	ret
                                   2766 ;src/main.c:172: void updateDirection() {
                                   2767 ;	---------------------------------
                                   2768 ; Function updateDirection
                                   2769 ; ---------------------------------
      0009F8                       2770 _updateDirection::
      0009F8 E8 FC                 2771 	add	sp, #-4
                                   2772 ;src/main.c:176: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0009FA 21rDCr00              2773 	ld	hl, #_joydata
      0009FD 5E                    2774 	ld	e, (hl)
      0009FE 7B                    2775 	ld	a, e
      0009FF E6 01                 2776 	and	a, #0x01
      000A01 F8 00                 2777 	ldhl	sp,	#0
      000A03 22                    2778 	ld	(hl+), a
      000A04 AF                    2779 	xor	a, a
      000A05 22                    2780 	ld	(hl+), a
      000A06 7B                    2781 	ld	a, e
      000A07 E6 04                 2782 	and	a, #0x04
      000A09 22                    2783 	ld	(hl+), a
      000A0A AF                    2784 	xor	a, a
      000A0B 32                    2785 	ld	(hl-), a
      000A0C 2B                    2786 	dec	hl
      000A0D 7B                    2787 	ld	a, e
      000A0E E6 08                 2788 	and	a, #0x08
      000A10 4F                    2789 	ld	c, a
      000A11 06 00                 2790 	ld	b, #0x00
      000A13 3A                    2791 	ld	a, (hl-)
      000A14 B6                    2792 	or	a, (hl)
      000A15 28 14                 2793 	jr	Z, 00102$
      000A17 F8 03                 2794 	ldhl	sp,	#3
      000A19 3A                    2795 	ld	a, (hl-)
      000A1A B6                    2796 	or	a, (hl)
      000A1B 20 0E                 2797 	jr	NZ, 00102$
      000A1D 78                    2798 	ld	a, b
      000A1E B1                    2799 	or	a, c
      000A1F 20 0A                 2800 	jr	NZ, 00102$
                                   2801 ;src/main.c:177: xDir = 1;
      000A21 21r92r00              2802 	ld	hl, #_xDir
      000A24 36 01                 2803 	ld	(hl), #0x01
                                   2804 ;src/main.c:178: yDir = 0;
      000A26 21r93r00              2805 	ld	hl, #_yDir
      000A29 36 00                 2806 	ld	(hl), #0x00
      000A2B                       2807 00102$:
                                   2808 ;src/main.c:180: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A2B 7B                    2809 	ld	a, e
      000A2C E6 02                 2810 	and	a, #0x02
      000A2E 5F                    2811 	ld	e, a
      000A2F 16 00                 2812 	ld	d, #0x00
      000A31 7A                    2813 	ld	a, d
      000A32 B3                    2814 	or	a, e
      000A33 28 14                 2815 	jr	Z, 00106$
      000A35 F8 03                 2816 	ldhl	sp,	#3
      000A37 3A                    2817 	ld	a, (hl-)
      000A38 B6                    2818 	or	a, (hl)
      000A39 20 0E                 2819 	jr	NZ, 00106$
      000A3B 78                    2820 	ld	a, b
      000A3C B1                    2821 	or	a, c
      000A3D 20 0A                 2822 	jr	NZ, 00106$
                                   2823 ;src/main.c:181: xDir = -1;
      000A3F 21r92r00              2824 	ld	hl, #_xDir
      000A42 36 FF                 2825 	ld	(hl), #0xff
                                   2826 ;src/main.c:182: yDir = 0;
      000A44 21r93r00              2827 	ld	hl, #_yDir
      000A47 36 00                 2828 	ld	(hl), #0x00
      000A49                       2829 00106$:
                                   2830 ;src/main.c:184: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000A49 F8 03                 2831 	ldhl	sp,	#3
      000A4B 3A                    2832 	ld	a, (hl-)
      000A4C B6                    2833 	or	a, (hl)
      000A4D 28 13                 2834 	jr	Z, 00110$
      000A4F 7A                    2835 	ld	a, d
      000A50 B3                    2836 	or	a, e
      000A51 20 0F                 2837 	jr	NZ, 00110$
      000A53 2B                    2838 	dec	hl
      000A54 3A                    2839 	ld	a, (hl-)
      000A55 B6                    2840 	or	a, (hl)
      000A56 20 0A                 2841 	jr	NZ, 00110$
                                   2842 ;src/main.c:185: xDir = 0;
      000A58 21r92r00              2843 	ld	hl, #_xDir
      000A5B 36 00                 2844 	ld	(hl), #0x00
                                   2845 ;src/main.c:186: yDir = -1;
      000A5D 21r93r00              2846 	ld	hl, #_yDir
      000A60 36 FF                 2847 	ld	(hl), #0xff
      000A62                       2848 00110$:
                                   2849 ;src/main.c:188: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000A62 78                    2850 	ld	a, b
      000A63 B1                    2851 	or	a, c
      000A64 28 14                 2852 	jr	Z, 00114$
      000A66 7A                    2853 	ld	a, d
      000A67 B3                    2854 	or	a, e
      000A68 20 10                 2855 	jr	NZ, 00114$
      000A6A F8 01                 2856 	ldhl	sp,	#1
      000A6C 3A                    2857 	ld	a, (hl-)
      000A6D B6                    2858 	or	a, (hl)
      000A6E 20 0A                 2859 	jr	NZ, 00114$
                                   2860 ;src/main.c:189: xDir = 0;
      000A70 21r92r00              2861 	ld	hl, #_xDir
      000A73 36 00                 2862 	ld	(hl), #0x00
                                   2863 ;src/main.c:190: yDir = 1;
      000A75 21r93r00              2864 	ld	hl, #_yDir
      000A78 36 01                 2865 	ld	(hl), #0x01
      000A7A                       2866 00114$:
                                   2867 ;src/main.c:194: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000A7A F8 03                 2868 	ldhl	sp,	#3
      000A7C 3A                    2869 	ld	a, (hl-)
      000A7D B6                    2870 	or	a, (hl)
      000A7E 28 0F                 2871 	jr	Z, 00118$
      000A80 2B                    2872 	dec	hl
      000A81 3A                    2873 	ld	a, (hl-)
      000A82 B6                    2874 	or	a, (hl)
      000A83 28 0A                 2875 	jr	Z, 00118$
                                   2876 ;src/main.c:195: xDir = 1;
      000A85 21r92r00              2877 	ld	hl, #_xDir
      000A88 36 01                 2878 	ld	(hl), #0x01
                                   2879 ;src/main.c:196: yDir = -1;
      000A8A 21r93r00              2880 	ld	hl, #_yDir
      000A8D 36 FF                 2881 	ld	(hl), #0xff
      000A8F                       2882 00118$:
                                   2883 ;src/main.c:198: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000A8F F8 03                 2884 	ldhl	sp,	#3
      000A91 3A                    2885 	ld	a, (hl-)
      000A92 B6                    2886 	or	a, (hl)
      000A93 28 0E                 2887 	jr	Z, 00121$
      000A95 7A                    2888 	ld	a, d
      000A96 B3                    2889 	or	a, e
      000A97 28 0A                 2890 	jr	Z, 00121$
                                   2891 ;src/main.c:199: xDir = -1;
      000A99 21r92r00              2892 	ld	hl, #_xDir
      000A9C 36 FF                 2893 	ld	(hl), #0xff
                                   2894 ;src/main.c:200: yDir = -1;
      000A9E 21r93r00              2895 	ld	hl, #_yDir
      000AA1 36 FF                 2896 	ld	(hl), #0xff
      000AA3                       2897 00121$:
                                   2898 ;src/main.c:202: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000AA3 78                    2899 	ld	a, b
      000AA4 B1                    2900 	or	a, c
      000AA5 28 10                 2901 	jr	Z, 00124$
      000AA7 F8 01                 2902 	ldhl	sp,	#1
      000AA9 3A                    2903 	ld	a, (hl-)
      000AAA B6                    2904 	or	a, (hl)
      000AAB 28 0A                 2905 	jr	Z, 00124$
                                   2906 ;src/main.c:203: xDir = 1;
      000AAD 21r92r00              2907 	ld	hl, #_xDir
      000AB0 36 01                 2908 	ld	(hl), #0x01
                                   2909 ;src/main.c:204: yDir = 1;
      000AB2 21r93r00              2910 	ld	hl, #_yDir
      000AB5 36 01                 2911 	ld	(hl), #0x01
      000AB7                       2912 00124$:
                                   2913 ;src/main.c:206: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000AB7 78                    2914 	ld	a, b
      000AB8 B1                    2915 	or	a, c
      000AB9 28 0E                 2916 	jr	Z, 00127$
      000ABB 7A                    2917 	ld	a, d
      000ABC B3                    2918 	or	a, e
      000ABD 28 0A                 2919 	jr	Z, 00127$
                                   2920 ;src/main.c:207: xDir = -1;
      000ABF 21r92r00              2921 	ld	hl, #_xDir
      000AC2 36 FF                 2922 	ld	(hl), #0xff
                                   2923 ;src/main.c:208: yDir = 1;
      000AC4 21r93r00              2924 	ld	hl, #_yDir
      000AC7 36 01                 2925 	ld	(hl), #0x01
      000AC9                       2926 00127$:
                                   2927 ;src/main.c:213: if (xDir == 0 && yDir == 0) {
      000AC9 FAr92r00              2928 	ld	a, (#_xDir)
      000ACC B7                    2929 	or	a, a
      000ACD 20 07                 2930 	jr	NZ, 00130$
      000ACF FAr93r00              2931 	ld	a, (#_yDir)
      000AD2 B7                    2932 	or	a, a
                                   2933 ;src/main.c:214: return;
      000AD3 CAr1Fr0C              2934 	jp	Z,00195$
      000AD6                       2935 00130$:
                                   2936 ;src/main.c:246: if (xDir == 0 && yDir > 0) {
      000AD6 21r93r00              2937 	ld	hl, #_yDir
      000AD9 5E                    2938 	ld	e, (hl)
      000ADA AF                    2939 	xor	a, a
      000ADB 57                    2940 	ld	d, a
      000ADC 96                    2941 	sub	a, (hl)
      000ADD CB 7B                 2942 	bit	7, e
      000ADF 28 07                 2943 	jr	Z, 00387$
      000AE1 CB 7A                 2944 	bit	7, d
      000AE3 20 08                 2945 	jr	NZ, 00388$
      000AE5 BF                    2946 	cp	a, a
      000AE6 18 05                 2947 	jr	00388$
      000AE8                       2948 00387$:
      000AE8 CB 7A                 2949 	bit	7, d
      000AEA 28 01                 2950 	jr	Z, 00388$
      000AEC 37                    2951 	scf
      000AED                       2952 00388$:
      000AED 3E 00                 2953 	ld	a, #0x00
      000AEF 17                    2954 	rla
      000AF0 4F                    2955 	ld	c, a
      000AF1 FAr92r00              2956 	ld	a, (#_xDir)
      000AF4 B7                    2957 	or	a,a
      000AF5 20 1A                 2958 	jr	NZ, 00160$
      000AF7 B1                    2959 	or	a,c
      000AF8 28 17                 2960 	jr	Z, 00160$
                                   2961 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AFA 21r02r00              2962 	ld	hl, #(_shadow_OAM + 2)
      000AFD 36 00                 2963 	ld	(hl), #0x00
      000AFF 21r06r00              2964 	ld	hl, #(_shadow_OAM + 6)
      000B02 36 02                 2965 	ld	(hl), #0x02
                                   2966 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B04 21r03r00              2967 	ld	hl, #(_shadow_OAM + 3)
      000B07 36 40                 2968 	ld	(hl), #0x40
      000B09 21r07r00              2969 	ld	hl, #(_shadow_OAM + 7)
      000B0C 36 40                 2970 	ld	(hl), #0x40
                                   2971 ;src/main.c:250: set_sprite_prop(1, S_FLIPY); 
      000B0E C3r1Fr0C              2972 	jp	00195$
      000B11                       2973 00160$:
                                   2974 ;src/main.c:252: else if (xDir == 0 && yDir < 0) {
      000B11 FAr93r00              2975 	ld	a, (#_yDir)
      000B14 07                    2976 	rlca
      000B15 E6 01                 2977 	and	a,#0x01
      000B17 F8 02                 2978 	ldhl	sp,	#2
      000B19 77                    2979 	ld	(hl), a
      000B1A FAr92r00              2980 	ld	a, (#_xDir)
      000B1D B7                    2981 	or	a, a
      000B1E 20 1D                 2982 	jr	NZ, 00156$
      000B20 F8 02                 2983 	ldhl	sp,	#2
      000B22 7E                    2984 	ld	a, (hl)
      000B23 B7                    2985 	or	a, a
      000B24 28 17                 2986 	jr	Z, 00156$
                                   2987 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B26 21r02r00              2988 	ld	hl, #(_shadow_OAM + 2)
      000B29 36 00                 2989 	ld	(hl), #0x00
      000B2B 21r06r00              2990 	ld	hl, #(_shadow_OAM + 6)
      000B2E 36 02                 2991 	ld	(hl), #0x02
                                   2992 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B30 21r03r00              2993 	ld	hl, #(_shadow_OAM + 3)
      000B33 36 00                 2994 	ld	(hl), #0x00
      000B35 21r07r00              2995 	ld	hl, #(_shadow_OAM + 7)
      000B38 36 00                 2996 	ld	(hl), #0x00
                                   2997 ;src/main.c:256: set_sprite_prop(1, 0); 
      000B3A C3r1Fr0C              2998 	jp	00195$
      000B3D                       2999 00156$:
                                   3000 ;src/main.c:258: else if (xDir > 0 && yDir == 0) {
      000B3D 21r92r00              3001 	ld	hl, #_xDir
      000B40 5E                    3002 	ld	e, (hl)
      000B41 AF                    3003 	xor	a, a
      000B42 57                    3004 	ld	d, a
      000B43 96                    3005 	sub	a, (hl)
      000B44 CB 7B                 3006 	bit	7, e
      000B46 28 07                 3007 	jr	Z, 00389$
      000B48 CB 7A                 3008 	bit	7, d
      000B4A 20 08                 3009 	jr	NZ, 00390$
      000B4C BF                    3010 	cp	a, a
      000B4D 18 05                 3011 	jr	00390$
      000B4F                       3012 00389$:
      000B4F CB 7A                 3013 	bit	7, d
      000B51 28 01                 3014 	jr	Z, 00390$
      000B53 37                    3015 	scf
      000B54                       3016 00390$:
      000B54 3E 00                 3017 	ld	a, #0x00
      000B56 17                    3018 	rla
      000B57 47                    3019 	ld	b, a
      000B58 B7                    3020 	or	a, a
      000B59 28 1D                 3021 	jr	Z, 00152$
      000B5B FAr93r00              3022 	ld	a, (#_yDir)
      000B5E B7                    3023 	or	a, a
      000B5F 20 17                 3024 	jr	NZ, 00152$
                                   3025 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B61 21r02r00              3026 	ld	hl, #(_shadow_OAM + 2)
      000B64 36 04                 3027 	ld	(hl), #0x04
      000B66 21r06r00              3028 	ld	hl, #(_shadow_OAM + 6)
      000B69 36 06                 3029 	ld	(hl), #0x06
                                   3030 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B6B 21r03r00              3031 	ld	hl, #(_shadow_OAM + 3)
      000B6E 36 00                 3032 	ld	(hl), #0x00
      000B70 21r07r00              3033 	ld	hl, #(_shadow_OAM + 7)
      000B73 36 00                 3034 	ld	(hl), #0x00
                                   3035 ;src/main.c:262: set_sprite_prop(1, 0); 
      000B75 C3r1Fr0C              3036 	jp	00195$
      000B78                       3037 00152$:
                                   3038 ;src/main.c:264: else if (xDir < 0 && yDir == 0) {
      000B78 FAr92r00              3039 	ld	a, (#_xDir)
      000B7B 07                    3040 	rlca
      000B7C E6 01                 3041 	and	a,#0x01
      000B7E F8 03                 3042 	ldhl	sp,	#3
      000B80 77                    3043 	ld	(hl), a
      000B81 7E                    3044 	ld	a, (hl)
      000B82 B7                    3045 	or	a, a
      000B83 28 1D                 3046 	jr	Z, 00148$
      000B85 FAr93r00              3047 	ld	a, (#_yDir)
      000B88 B7                    3048 	or	a, a
      000B89 20 17                 3049 	jr	NZ, 00148$
                                   3050 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B8B 21r02r00              3051 	ld	hl, #(_shadow_OAM + 2)
      000B8E 36 04                 3052 	ld	(hl), #0x04
      000B90 21r06r00              3053 	ld	hl, #(_shadow_OAM + 6)
      000B93 36 06                 3054 	ld	(hl), #0x06
                                   3055 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B95 21r03r00              3056 	ld	hl, #(_shadow_OAM + 3)
      000B98 36 20                 3057 	ld	(hl), #0x20
      000B9A 21r07r00              3058 	ld	hl, #(_shadow_OAM + 7)
      000B9D 36 20                 3059 	ld	(hl), #0x20
                                   3060 ;src/main.c:268: set_sprite_prop(1, S_FLIPX); 
      000B9F C3r1Fr0C              3061 	jp	00195$
      000BA2                       3062 00148$:
                                   3063 ;src/main.c:270: else if (xDir > 0 && yDir < 0) {
      000BA2 78                    3064 	ld	a, b
      000BA3 B7                    3065 	or	a, a
      000BA4 28 1C                 3066 	jr	Z, 00144$
      000BA6 F8 02                 3067 	ldhl	sp,	#2
      000BA8 7E                    3068 	ld	a, (hl)
      000BA9 B7                    3069 	or	a, a
      000BAA 28 16                 3070 	jr	Z, 00144$
                                   3071 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BAC 21r02r00              3072 	ld	hl, #(_shadow_OAM + 2)
      000BAF 36 08                 3073 	ld	(hl), #0x08
      000BB1 21r06r00              3074 	ld	hl, #(_shadow_OAM + 6)
      000BB4 36 0A                 3075 	ld	(hl), #0x0a
                                   3076 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BB6 21r03r00              3077 	ld	hl, #(_shadow_OAM + 3)
      000BB9 36 00                 3078 	ld	(hl), #0x00
      000BBB 21r07r00              3079 	ld	hl, #(_shadow_OAM + 7)
      000BBE 36 00                 3080 	ld	(hl), #0x00
                                   3081 ;src/main.c:274: set_sprite_prop(1, 0); 
      000BC0 18 5D                 3082 	jr	00195$
      000BC2                       3083 00144$:
                                   3084 ;src/main.c:276: else if (xDir > 0 && yDir > 0) {
      000BC2 78                    3085 	ld	a, b
      000BC3 B7                    3086 	or	a, a
      000BC4 28 1A                 3087 	jr	Z, 00140$
      000BC6 79                    3088 	ld	a, c
      000BC7 B7                    3089 	or	a, a
      000BC8 28 16                 3090 	jr	Z, 00140$
                                   3091 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BCA 21r02r00              3092 	ld	hl, #(_shadow_OAM + 2)
      000BCD 36 08                 3093 	ld	(hl), #0x08
      000BCF 21r06r00              3094 	ld	hl, #(_shadow_OAM + 6)
      000BD2 36 0A                 3095 	ld	(hl), #0x0a
                                   3096 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BD4 21r03r00              3097 	ld	hl, #(_shadow_OAM + 3)
      000BD7 36 40                 3098 	ld	(hl), #0x40
      000BD9 21r07r00              3099 	ld	hl, #(_shadow_OAM + 7)
      000BDC 36 40                 3100 	ld	(hl), #0x40
                                   3101 ;src/main.c:280: set_sprite_prop(1, S_FLIPY); 
      000BDE 18 3F                 3102 	jr	00195$
      000BE0                       3103 00140$:
                                   3104 ;src/main.c:282: else if (xDir < 0 && yDir > 0) {
      000BE0 F8 03                 3105 	ldhl	sp,	#3
      000BE2 7E                    3106 	ld	a, (hl)
      000BE3 B7                    3107 	or	a, a
      000BE4 28 1A                 3108 	jr	Z, 00136$
      000BE6 79                    3109 	ld	a, c
      000BE7 B7                    3110 	or	a, a
      000BE8 28 16                 3111 	jr	Z, 00136$
                                   3112 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BEA 21r02r00              3113 	ld	hl, #(_shadow_OAM + 2)
      000BED 36 08                 3114 	ld	(hl), #0x08
      000BEF 21r06r00              3115 	ld	hl, #(_shadow_OAM + 6)
      000BF2 36 0A                 3116 	ld	(hl), #0x0a
                                   3117 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BF4 21r03r00              3118 	ld	hl, #(_shadow_OAM + 3)
      000BF7 36 60                 3119 	ld	(hl), #0x60
      000BF9 21r07r00              3120 	ld	hl, #(_shadow_OAM + 7)
      000BFC 36 60                 3121 	ld	(hl), #0x60
                                   3122 ;src/main.c:286: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000BFE 18 1F                 3123 	jr	00195$
      000C00                       3124 00136$:
                                   3125 ;src/main.c:288: else if (xDir < 0 && yDir < 0) {
      000C00 F8 03                 3126 	ldhl	sp,	#3
      000C02 7E                    3127 	ld	a, (hl)
      000C03 B7                    3128 	or	a, a
      000C04 28 19                 3129 	jr	Z, 00195$
      000C06 2B                    3130 	dec	hl
      000C07 7E                    3131 	ld	a, (hl)
      000C08 B7                    3132 	or	a, a
      000C09 28 14                 3133 	jr	Z, 00195$
                                   3134 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C0B 21r02r00              3135 	ld	hl, #(_shadow_OAM + 2)
      000C0E 36 08                 3136 	ld	(hl), #0x08
      000C10 21r06r00              3137 	ld	hl, #(_shadow_OAM + 6)
      000C13 36 0A                 3138 	ld	(hl), #0x0a
                                   3139 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C15 21r03r00              3140 	ld	hl, #(_shadow_OAM + 3)
      000C18 36 20                 3141 	ld	(hl), #0x20
      000C1A 21r07r00              3142 	ld	hl, #(_shadow_OAM + 7)
      000C1D 36 20                 3143 	ld	(hl), #0x20
                                   3144 ;src/main.c:292: set_sprite_prop(1, S_FLIPX); 
      000C1F                       3145 00195$:
                                   3146 ;src/main.c:294: }
      000C1F E8 04                 3147 	add	sp, #4
      000C21 C9                    3148 	ret
                                   3149 ;src/main.c:323: void playSound(uint8_t type) {
                                   3150 ;	---------------------------------
                                   3151 ; Function playSound
                                   3152 ; ---------------------------------
      000C22                       3153 _playSound::
                                   3154 ;src/main.c:324: if (type == 20) { //singlegun
      000C22 F8 02                 3155 	ldhl	sp,	#2
      000C24 7E                    3156 	ld	a, (hl)
      000C25 D6 14                 3157 	sub	a, #0x14
      000C27 20 13                 3158 	jr	NZ, 00102$
                                   3159 ;src/main.c:325: NR10_REG = 0x00;
      000C29 AF                    3160 	xor	a, a
      000C2A E0r00                 3161 	ldh	(_NR10_REG + 0), a
                                   3162 ;src/main.c:326: NR11_REG = 0x81;
      000C2C 3E 81                 3163 	ld	a, #0x81
      000C2E E0r00                 3164 	ldh	(_NR11_REG + 0), a
                                   3165 ;src/main.c:327: NR12_REG = 0x43;
      000C30 3E 43                 3166 	ld	a, #0x43
      000C32 E0r00                 3167 	ldh	(_NR12_REG + 0), a
                                   3168 ;src/main.c:328: NR13_REG = 0X00;//0x6D;
      000C34 AF                    3169 	xor	a, a
      000C35 E0r00                 3170 	ldh	(_NR13_REG + 0), a
                                   3171 ;src/main.c:329: NR14_REG = 0x86;
      000C37 3E 86                 3172 	ld	a, #0x86
      000C39 E0r00                 3173 	ldh	(_NR14_REG + 0), a
                                   3174 ;src/main.c:330: return;
      000C3B C9                    3175 	ret
      000C3C                       3176 00102$:
                                   3177 ;src/main.c:332: if (type == 23) {
      000C3C F8 02                 3178 	ldhl	sp,	#2
      000C3E 7E                    3179 	ld	a, (hl)
      000C3F D6 17                 3180 	sub	a, #0x17
      000C41 20 12                 3181 	jr	NZ, 00104$
                                   3182 ;src/main.c:333: NR10_REG = 0x00;
      000C43 AF                    3183 	xor	a, a
      000C44 E0r00                 3184 	ldh	(_NR10_REG + 0), a
                                   3185 ;src/main.c:334: NR11_REG = 0x81;
      000C46 3E 81                 3186 	ld	a, #0x81
      000C48 E0r00                 3187 	ldh	(_NR11_REG + 0), a
                                   3188 ;src/main.c:335: NR12_REG = 0x53;
      000C4A 3E 53                 3189 	ld	a, #0x53
      000C4C E0r00                 3190 	ldh	(_NR12_REG + 0), a
                                   3191 ;src/main.c:336: NR13_REG = 0X00;//0x6D;
      000C4E AF                    3192 	xor	a, a
      000C4F E0r00                 3193 	ldh	(_NR13_REG + 0), a
                                   3194 ;src/main.c:337: NR14_REG = 0x86;
      000C51 3E 86                 3195 	ld	a, #0x86
      000C53 E0r00                 3196 	ldh	(_NR14_REG + 0), a
      000C55                       3197 00104$:
                                   3198 ;src/main.c:339: if (type == 26) {
      000C55 F8 02                 3199 	ldhl	sp,	#2
      000C57 7E                    3200 	ld	a, (hl)
      000C58 D6 1A                 3201 	sub	a, #0x1a
      000C5A 20 13                 3202 	jr	NZ, 00106$
                                   3203 ;src/main.c:340: NR10_REG = 0x00;
      000C5C AF                    3204 	xor	a, a
      000C5D E0r00                 3205 	ldh	(_NR10_REG + 0), a
                                   3206 ;src/main.c:341: NR11_REG = 0x89;
      000C5F 3E 89                 3207 	ld	a, #0x89
      000C61 E0r00                 3208 	ldh	(_NR11_REG + 0), a
                                   3209 ;src/main.c:342: NR12_REG = 0x55;
      000C63 3E 55                 3210 	ld	a, #0x55
      000C65 E0r00                 3211 	ldh	(_NR12_REG + 0), a
                                   3212 ;src/main.c:343: NR13_REG = 0x70;//0Xbe;//0x6D;
      000C67 3E 70                 3213 	ld	a, #0x70
      000C69 E0r00                 3214 	ldh	(_NR13_REG + 0), a
                                   3215 ;src/main.c:344: NR14_REG = 0x84;
      000C6B 3E 84                 3216 	ld	a, #0x84
      000C6D E0r00                 3217 	ldh	(_NR14_REG + 0), a
      000C6F                       3218 00106$:
                                   3219 ;src/main.c:346: if (type == 0) {  // explosion
      000C6F F8 02                 3220 	ldhl	sp,	#2
      000C71 7E                    3221 	ld	a, (hl)
      000C72 B7                    3222 	or	a, a
      000C73 C0                    3223 	ret	NZ
                                   3224 ;src/main.c:347: NR41_REG = 0x20;  
      000C74 3E 20                 3225 	ld	a, #0x20
      000C76 E0r00                 3226 	ldh	(_NR41_REG + 0), a
                                   3227 ;src/main.c:348: NR42_REG = 0xa2;//0xa3;  
      000C78 3E A2                 3228 	ld	a, #0xa2
      000C7A E0r00                 3229 	ldh	(_NR42_REG + 0), a
                                   3230 ;src/main.c:349: NR43_REG = 0x57;  
      000C7C 3E 57                 3231 	ld	a, #0x57
      000C7E E0r00                 3232 	ldh	(_NR43_REG + 0), a
                                   3233 ;src/main.c:350: NR44_REG = 0x80;  
      000C80 3E 80                 3234 	ld	a, #0x80
      000C82 E0r00                 3235 	ldh	(_NR44_REG + 0), a
                                   3236 ;src/main.c:356: }
      000C84 C9                    3237 	ret
                                   3238 ;src/main.c:358: void initEnemies(uint8_t loadSprites) {
                                   3239 ;	---------------------------------
                                   3240 ; Function initEnemies
                                   3241 ; ---------------------------------
      000C85                       3242 _initEnemies::
      000C85 E8 F9                 3243 	add	sp, #-7
                                   3244 ;src/main.c:360: if (loadSprites) {
      000C87 F8 09                 3245 	ldhl	sp,	#9
      000C89 7E                    3246 	ld	a, (hl)
      000C8A B7                    3247 	or	a, a
      000C8B 28 1A                 3248 	jr	Z, 00102$
                                   3249 ;src/main.c:362: set_sprite_data(0x40, 5, enemy1);
      000C8D 11r18r05              3250 	ld	de, #_enemy1
      000C90 D5                    3251 	push	de
      000C91 21 40 05              3252 	ld	hl, #0x540
      000C94 E5                    3253 	push	hl
      000C95 CDr00r00              3254 	call	_set_sprite_data
      000C98 E8 04                 3255 	add	sp, #4
                                   3256 ;src/main.c:363: set_sprite_data(0x50, 8, largeenemies);
      000C9A 11r68r05              3257 	ld	de, #_largeenemies
      000C9D D5                    3258 	push	de
      000C9E 21 50 08              3259 	ld	hl, #0x850
      000CA1 E5                    3260 	push	hl
      000CA2 CDr00r00              3261 	call	_set_sprite_data
      000CA5 E8 04                 3262 	add	sp, #4
      000CA7                       3263 00102$:
                                   3264 ;src/main.c:366: struct Enemy *eptr = enemies;
      000CA7 F8 04                 3265 	ldhl	sp,	#4
      000CA9 3Er50                 3266 	ld	a, #<(_enemies)
      000CAB 22                    3267 	ld	(hl+), a
                                   3268 ;src/main.c:368: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000CAC 3Es00                 3269 	ld	a, #>(_enemies)
      000CAE 22                    3270 	ld	(hl+), a
      000CAF 36 00                 3271 	ld	(hl), #0x00
      000CB1                       3272 00116$:
      000CB1 21r4Dr08              3273 	ld	hl, #_ENEMYCOUNT
      000CB4 4E                    3274 	ld	c, (hl)
      000CB5 F8 06                 3275 	ldhl	sp,	#6
      000CB7 7E                    3276 	ld	a, (hl)
      000CB8 91                    3277 	sub	a, c
      000CB9 D2r2Dr0E              3278 	jp	NC, 00118$
                                   3279 ;src/main.c:369: if (eptr->alive == 0) {
      000CBC 2B                    3280 	dec	hl
      000CBD 2B                    3281 	dec	hl
      000CBE 2A                    3282 	ld	a, (hl+)
      000CBF 5F                    3283 	ld	e, a
      000CC0 56                    3284 	ld	d, (hl)
      000CC1 21 09 00              3285 	ld	hl, #0x0009
      000CC4 19                    3286 	add	hl, de
      000CC5 4D                    3287 	ld	c, l
      000CC6 44                    3288 	ld	b, h
      000CC7 0A                    3289 	ld	a, (bc)
      000CC8 F8 03                 3290 	ldhl	sp,	#3
      000CCA 77                    3291 	ld	(hl), a
      000CCB 7E                    3292 	ld	a, (hl)
      000CCC B7                    3293 	or	a, a
      000CCD C2r16r0E              3294 	jp	NZ, 00107$
                                   3295 ;src/main.c:371: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      000CD0 CDr00r00              3296 	call	_rand
      000CD3 F8 02                 3297 	ldhl	sp,	#2
      000CD5 73                    3298 	ld	(hl), e
      000CD6 FAr17r05              3299 	ld	a, (#_enemyOptionCount)
      000CD9 F8 03                 3300 	ldhl	sp,	#3
      000CDB 77                    3301 	ld	(hl), a
      000CDC 3A                    3302 	ld	a, (hl-)
      000CDD 57                    3303 	ld	d, a
      000CDE 5E                    3304 	ld	e, (hl)
      000CDF D5                    3305 	push	de
      000CE0 CDr00r00              3306 	call	__moduchar
      000CE3 E1                    3307 	pop	hl
                                   3308 ;src/main.c:373: (*eptr) = enemyOptions[enemyInd];
      000CE4 F8 03                 3309 	ldhl	sp,#3
      000CE6 73                    3310 	ld	(hl), e
      000CE7 3A                    3311 	ld	a, (hl-)
      000CE8 22                    3312 	ld	(hl+), a
      000CE9 AF                    3313 	xor	a, a
      000CEA 32                    3314 	ld	(hl-), a
      000CEB 3A                    3315 	ld	a, (hl-)
      000CEC 2B                    3316 	dec	hl
      000CED 77                    3317 	ld	(hl), a
      000CEE F8 03                 3318 	ldhl	sp,	#3
      000CF0 3A                    3319 	ld	a, (hl-)
      000CF1 2B                    3320 	dec	hl
      000CF2 77                    3321 	ld	(hl), a
      000CF3 3E 04                 3322 	ld	a, #0x04
      000CF5                       3323 00146$:
      000CF5 F8 00                 3324 	ldhl	sp,	#0
      000CF7 CB 26                 3325 	sla	(hl)
      000CF9 23                    3326 	inc	hl
      000CFA CB 16                 3327 	rl	(hl)
      000CFC 3D                    3328 	dec	a
      000CFD 20 F6                 3329 	jr	NZ, 00146$
      000CFF D1                    3330 	pop	de
      000D00 D5                    3331 	push	de
      000D01 21r00r00              3332 	ld	hl, #_enemyOptions
      000D04 19                    3333 	add	hl, de
      000D05 E5                    3334 	push	hl
      000D06 7D                    3335 	ld	a, l
      000D07 F8 04                 3336 	ldhl	sp,	#4
      000D09 77                    3337 	ld	(hl), a
      000D0A E1                    3338 	pop	hl
      000D0B 7C                    3339 	ld	a, h
      000D0C F8 03                 3340 	ldhl	sp,	#3
      000D0E 32                    3341 	ld	(hl-), a
      000D0F 2A                    3342 	ld	a, (hl+)
      000D10 5F                    3343 	ld	e, a
      000D11 2A                    3344 	ld	a, (hl+)
      000D12 57                    3345 	ld	d, a
      000D13 2A                    3346 	ld	a, (hl+)
      000D14 4F                    3347 	ld	c, a
      000D15 46                    3348 	ld	b, (hl)
      000D16 21 10 00              3349 	ld	hl, #0x0010
      000D19 E5                    3350 	push	hl
      000D1A D5                    3351 	push	de
      000D1B C5                    3352 	push	bc
      000D1C CDr00r00              3353 	call	___memcpy
      000D1F E8 06                 3354 	add	sp, #6
                                   3355 ;src/main.c:375: uint8_t posIndex =  ((uint8_t)rand()) % (uint8_t)8;//(rand() & 8);
      000D21 CDr00r00              3356 	call	_rand
      000D24 7B                    3357 	ld	a, e
      000D25 E6 07                 3358 	and	a, #0x07
      000D27 F8 03                 3359 	ldhl	sp,	#3
      000D29 77                    3360 	ld	(hl), a
                                   3361 ;src/main.c:376: eptr->x = xSpawnPositions[posIndex];
      000D2A 11r4Er08              3362 	ld	de, #_xSpawnPositions
      000D2D 6E                    3363 	ld	l, (hl)
      000D2E 26 00                 3364 	ld	h, #0x00
      000D30 19                    3365 	add	hl, de
      000D31 4D                    3366 	ld	c, l
      000D32 44                    3367 	ld	b, h
      000D33 0A                    3368 	ld	a, (bc)
      000D34 4F                    3369 	ld	c, a
      000D35 06 00                 3370 	ld	b, #0x00
      000D37 F8 04                 3371 	ldhl	sp,	#4
      000D39 2A                    3372 	ld	a,	(hl+)
      000D3A 66                    3373 	ld	h, (hl)
      000D3B 6F                    3374 	ld	l, a
      000D3C 79                    3375 	ld	a, c
      000D3D 22                    3376 	ld	(hl+), a
      000D3E 70                    3377 	ld	(hl), b
                                   3378 ;src/main.c:377: eptr->y = ySpawnPositions[posIndex];
      000D3F F8 04                 3379 	ldhl	sp,#4
      000D41 2A                    3380 	ld	a, (hl+)
      000D42 5F                    3381 	ld	e, a
      000D43 56                    3382 	ld	d, (hl)
      000D44 21 02 00              3383 	ld	hl, #0x0002
      000D47 19                    3384 	add	hl, de
      000D48 33                    3385 	inc	sp
      000D49 33                    3386 	inc	sp
      000D4A E5                    3387 	push	hl
      000D4B 11r56r08              3388 	ld	de, #_ySpawnPositions
      000D4E F8 03                 3389 	ldhl	sp,	#3
      000D50 6E                    3390 	ld	l, (hl)
      000D51 26 00                 3391 	ld	h, #0x00
      000D53 19                    3392 	add	hl, de
      000D54 4D                    3393 	ld	c, l
      000D55 44                    3394 	ld	b, h
      000D56 0A                    3395 	ld	a, (bc)
      000D57 4F                    3396 	ld	c, a
      000D58 06 00                 3397 	ld	b, #0x00
      000D5A E1                    3398 	pop	hl
      000D5B E5                    3399 	push	hl
      000D5C 79                    3400 	ld	a, c
      000D5D 22                    3401 	ld	(hl+), a
      000D5E 70                    3402 	ld	(hl), b
                                   3403 ;src/main.c:379: if (eptr->spriteCount == 1) {
      000D5F F8 04                 3404 	ldhl	sp,#4
      000D61 2A                    3405 	ld	a, (hl+)
      000D62 5F                    3406 	ld	e, a
      000D63 56                    3407 	ld	d, (hl)
      000D64 21 08 00              3408 	ld	hl, #0x0008
      000D67 19                    3409 	add	hl, de
      000D68 4D                    3410 	ld	c, l
      000D69 44                    3411 	ld	b, h
      000D6A 0A                    3412 	ld	a, (bc)
      000D6B 47                    3413 	ld	b, a
                                   3414 ;src/main.c:380: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000D6C F8 04                 3415 	ldhl	sp,#4
      000D6E 2A                    3416 	ld	a, (hl+)
      000D6F 5F                    3417 	ld	e, a
      000D70 56                    3418 	ld	d, (hl)
      000D71 21 06 00              3419 	ld	hl, #0x0006
      000D74 19                    3420 	add	hl, de
      000D75 5D                    3421 	ld	e, l
      000D76 54                    3422 	ld	d, h
      000D77 F8 06                 3423 	ldhl	sp,	#6
      000D79 4E                    3424 	ld	c, (hl)
      000D7A 1A                    3425 	ld	a, (de)
      000D7B 5F                    3426 	ld	e, a
      000D7C CB 21                 3427 	sla	c
      000D7E 79                    3428 	ld	a, c
      000D7F C6 0A                 3429 	add	a, #0x0a
      000D81 F8 02                 3430 	ldhl	sp,	#2
      000D83 77                    3431 	ld	(hl), a
                                   3432 ;src/main.c:379: if (eptr->spriteCount == 1) {
      000D84 05                    3433 	dec	b
      000D85 20 2C                 3434 	jr	NZ, 00104$
                                   3435 ;src/main.c:380: set_sprite_tile(10+ (i<<1), eptr->sprite0);
                                   3436 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000D87 6E                    3437 	ld	l, (hl)
                                   3438 ;	spillPairReg hl
                                   3439 ;	spillPairReg hl
      000D88 26 00                 3440 	ld	h, #0x00
                                   3441 ;	spillPairReg hl
                                   3442 ;	spillPairReg hl
      000D8A 29                    3443 	add	hl, hl
      000D8B 29                    3444 	add	hl, hl
      000D8C 01r00r00              3445 	ld	bc, #_shadow_OAM
      000D8F 09                    3446 	add	hl, bc
      000D90 23                    3447 	inc	hl
      000D91 23                    3448 	inc	hl
      000D92 73                    3449 	ld	(hl), e
                                   3450 ;src/main.c:381: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000D93 D1                    3451 	pop	de
      000D94 D5                    3452 	push	de
      000D95 1A                    3453 	ld	a, (de)
      000D96 4F                    3454 	ld	c, a
      000D97 F8 04                 3455 	ldhl	sp,#4
      000D99 2A                    3456 	ld	a, (hl+)
      000D9A 5F                    3457 	ld	e, a
      000D9B 3A                    3458 	ld	a, (hl-)
      000D9C 2B                    3459 	dec	hl
      000D9D 57                    3460 	ld	d, a
      000D9E 1A                    3461 	ld	a, (de)
      000D9F 32                    3462 	ld	(hl-), a
                                   3463 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DA0 6E                    3464 	ld	l, (hl)
                                   3465 ;	spillPairReg hl
                                   3466 ;	spillPairReg hl
      000DA1 26 00                 3467 	ld	h, #0x00
                                   3468 ;	spillPairReg hl
                                   3469 ;	spillPairReg hl
      000DA3 29                    3470 	add	hl, hl
      000DA4 29                    3471 	add	hl, hl
      000DA5 11r00r00              3472 	ld	de, #_shadow_OAM
      000DA8 19                    3473 	add	hl, de
                                   3474 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DA9 79                    3475 	ld	a, c
      000DAA 22                    3476 	ld	(hl+), a
      000DAB 4D                    3477 	ld	c, l
      000DAC 44                    3478 	ld	b, h
      000DAD F8 03                 3479 	ldhl	sp,	#3
      000DAF 7E                    3480 	ld	a, (hl)
      000DB0 02                    3481 	ld	(bc), a
                                   3482 ;src/main.c:381: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DB1 18 63                 3483 	jr	00107$
      000DB3                       3484 00104$:
                                   3485 ;src/main.c:384: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DB3 43                    3486 	ld	b, e
      000DB4 F8 02                 3487 	ldhl	sp,	#2
                                   3488 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DB6 6E                    3489 	ld	l, (hl)
                                   3490 ;	spillPairReg hl
                                   3491 ;	spillPairReg hl
      000DB7 26 00                 3492 	ld	h, #0x00
                                   3493 ;	spillPairReg hl
                                   3494 ;	spillPairReg hl
      000DB9 29                    3495 	add	hl, hl
      000DBA 29                    3496 	add	hl, hl
      000DBB 11r00r00              3497 	ld	de, #_shadow_OAM
      000DBE 19                    3498 	add	hl, de
      000DBF 23                    3499 	inc	hl
      000DC0 23                    3500 	inc	hl
      000DC1 70                    3501 	ld	(hl), b
                                   3502 ;src/main.c:385: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DC2 D1                    3503 	pop	de
      000DC3 D5                    3504 	push	de
      000DC4 1A                    3505 	ld	a, (de)
      000DC5 47                    3506 	ld	b, a
      000DC6 F8 04                 3507 	ldhl	sp,#4
      000DC8 2A                    3508 	ld	a, (hl+)
      000DC9 5F                    3509 	ld	e, a
      000DCA 3A                    3510 	ld	a, (hl-)
      000DCB 2B                    3511 	dec	hl
      000DCC 57                    3512 	ld	d, a
      000DCD 1A                    3513 	ld	a, (de)
      000DCE 32                    3514 	ld	(hl-), a
                                   3515 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DCF 6E                    3516 	ld	l, (hl)
                                   3517 ;	spillPairReg hl
                                   3518 ;	spillPairReg hl
      000DD0 26 00                 3519 	ld	h, #0x00
                                   3520 ;	spillPairReg hl
                                   3521 ;	spillPairReg hl
      000DD2 29                    3522 	add	hl, hl
      000DD3 29                    3523 	add	hl, hl
      000DD4 11r00r00              3524 	ld	de, #_shadow_OAM
      000DD7 19                    3525 	add	hl, de
                                   3526 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DD8 78                    3527 	ld	a, b
      000DD9 22                    3528 	ld	(hl+), a
      000DDA 5D                    3529 	ld	e, l
      000DDB 54                    3530 	ld	d, h
      000DDC F8 03                 3531 	ldhl	sp,	#3
                                   3532 ;src/main.c:387: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      000DDE 2A                    3533 	ld	a, (hl+)
      000DDF 12                    3534 	ld	(de), a
      000DE0 2A                    3535 	ld	a, (hl+)
      000DE1 5F                    3536 	ld	e, a
      000DE2 56                    3537 	ld	d, (hl)
      000DE3 21 07 00              3538 	ld	hl, #0x0007
      000DE6 19                    3539 	add	hl, de
      000DE7 5D                    3540 	ld	e, l
      000DE8 54                    3541 	ld	d, h
      000DE9 1A                    3542 	ld	a, (de)
      000DEA 5F                    3543 	ld	e, a
      000DEB 79                    3544 	ld	a, c
      000DEC C6 0B                 3545 	add	a, #0x0b
      000DEE F8 03                 3546 	ldhl	sp,	#3
      000DF0 77                    3547 	ld	(hl), a
                                   3548 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DF1 6E                    3549 	ld	l, (hl)
                                   3550 ;	spillPairReg hl
                                   3551 ;	spillPairReg hl
      000DF2 26 00                 3552 	ld	h, #0x00
                                   3553 ;	spillPairReg hl
                                   3554 ;	spillPairReg hl
      000DF4 29                    3555 	add	hl, hl
      000DF5 29                    3556 	add	hl, hl
      000DF6 01r00r00              3557 	ld	bc, #_shadow_OAM
      000DF9 09                    3558 	add	hl, bc
      000DFA 23                    3559 	inc	hl
      000DFB 23                    3560 	inc	hl
      000DFC 73                    3561 	ld	(hl), e
                                   3562 ;src/main.c:388: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000DFD D1                    3563 	pop	de
      000DFE D5                    3564 	push	de
      000DFF 1A                    3565 	ld	a, (de)
      000E00 47                    3566 	ld	b, a
      000E01 F8 04                 3567 	ldhl	sp,#4
      000E03 2A                    3568 	ld	a, (hl+)
      000E04 5F                    3569 	ld	e, a
      000E05 3A                    3570 	ld	a, (hl-)
      000E06 2B                    3571 	dec	hl
      000E07 57                    3572 	ld	d, a
      000E08 1A                    3573 	ld	a, (de)
      000E09 4F                    3574 	ld	c, a
                                   3575 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E0A 6E                    3576 	ld	l, (hl)
                                   3577 ;	spillPairReg hl
                                   3578 ;	spillPairReg hl
      000E0B 26 00                 3579 	ld	h, #0x00
                                   3580 ;	spillPairReg hl
                                   3581 ;	spillPairReg hl
      000E0D 29                    3582 	add	hl, hl
      000E0E 29                    3583 	add	hl, hl
      000E0F 11r00r00              3584 	ld	de, #_shadow_OAM
      000E12 19                    3585 	add	hl, de
                                   3586 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E13 78                    3587 	ld	a, b
      000E14 22                    3588 	ld	(hl+), a
      000E15 71                    3589 	ld	(hl), c
                                   3590 ;src/main.c:388: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E16                       3591 00107$:
                                   3592 ;src/main.c:393: eptr++;
      000E16 F8 04                 3593 	ldhl	sp,#4
      000E18 2A                    3594 	ld	a, (hl+)
      000E19 5F                    3595 	ld	e, a
      000E1A 56                    3596 	ld	d, (hl)
      000E1B 21 10 00              3597 	ld	hl, #0x0010
      000E1E 19                    3598 	add	hl, de
      000E1F E5                    3599 	push	hl
      000E20 7D                    3600 	ld	a, l
      000E21 F8 06                 3601 	ldhl	sp,	#6
      000E23 77                    3602 	ld	(hl), a
      000E24 E1                    3603 	pop	hl
      000E25 7C                    3604 	ld	a, h
      000E26 F8 05                 3605 	ldhl	sp,	#5
                                   3606 ;src/main.c:368: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E28 22                    3607 	ld	(hl+), a
      000E29 34                    3608 	inc	(hl)
      000E2A C3rB1r0C              3609 	jp	00116$
      000E2D                       3610 00118$:
                                   3611 ;src/main.c:396: }
      000E2D E8 07                 3612 	add	sp, #7
      000E2F C9                    3613 	ret
                                   3614 ;src/main.c:399: void updateEnemyPositions() {
                                   3615 ;	---------------------------------
                                   3616 ; Function updateEnemyPositions
                                   3617 ; ---------------------------------
      000E30                       3618 _updateEnemyPositions::
      000E30 E8 F0                 3619 	add	sp, #-16
                                   3620 ;src/main.c:402: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E32 F8 0F                 3621 	ldhl	sp,	#15
      000E34 36 00                 3622 	ld	(hl), #0x00
      000E36                       3623 00196$:
      000E36 21r4Dr08              3624 	ld	hl, #_ENEMYCOUNT
      000E39 4E                    3625 	ld	c, (hl)
      000E3A F8 0F                 3626 	ldhl	sp,	#15
      000E3C 7E                    3627 	ld	a, (hl)
      000E3D 91                    3628 	sub	a, c
      000E3E D2rEDr12              3629 	jp	NC, 00134$
                                   3630 ;src/main.c:403: if (!enemies[i].alive) {
      000E41 3A                    3631 	ld	a, (hl-)
      000E42 2B                    3632 	dec	hl
      000E43 22                    3633 	ld	(hl+), a
      000E44 36 00                 3634 	ld	(hl), #0x00
      000E46 3E 04                 3635 	ld	a, #0x04
      000E48                       3636 00407$:
      000E48 F8 0D                 3637 	ldhl	sp,	#13
      000E4A CB 26                 3638 	sla	(hl)
      000E4C 23                    3639 	inc	hl
      000E4D CB 16                 3640 	rl	(hl)
      000E4F 3D                    3641 	dec	a
      000E50 20 F6                 3642 	jr	NZ, 00407$
      000E52 2B                    3643 	dec	hl
      000E53 2A                    3644 	ld	a, (hl+)
      000E54 5F                    3645 	ld	e, a
      000E55 56                    3646 	ld	d, (hl)
      000E56 21r50r00              3647 	ld	hl, #_enemies
      000E59 19                    3648 	add	hl, de
      000E5A E5                    3649 	push	hl
      000E5B 7D                    3650 	ld	a, l
      000E5C F8 04                 3651 	ldhl	sp,	#4
      000E5E 77                    3652 	ld	(hl), a
      000E5F E1                    3653 	pop	hl
      000E60 7C                    3654 	ld	a, h
      000E61 F8 03                 3655 	ldhl	sp,	#3
      000E63 32                    3656 	ld	(hl-), a
      000E64 2A                    3657 	ld	a, (hl+)
      000E65 5F                    3658 	ld	e, a
      000E66 56                    3659 	ld	d, (hl)
      000E67 21 09 00              3660 	ld	hl, #0x0009
      000E6A 19                    3661 	add	hl, de
      000E6B 4D                    3662 	ld	c, l
      000E6C 44                    3663 	ld	b, h
      000E6D 0A                    3664 	ld	a, (bc)
      000E6E B7                    3665 	or	a, a
      000E6F CArE7r12              3666 	jp	Z, 00133$
                                   3667 ;src/main.c:406: enemies[i].x -= xOverflow;
      000E72 F8 02                 3668 	ldhl	sp,#2
      000E74 2A                    3669 	ld	a, (hl+)
      000E75 5F                    3670 	ld	e, a
      000E76 56                    3671 	ld	d, (hl)
      000E77 1A                    3672 	ld	a, (de)
      000E78 4F                    3673 	ld	c, a
      000E79 13                    3674 	inc	de
      000E7A 1A                    3675 	ld	a, (de)
      000E7B 47                    3676 	ld	b, a
      000E7C 21rA0r00              3677 	ld	hl, #_xOverflow
      000E7F 2A                    3678 	ld	a, (hl+)
      000E80 5F                    3679 	ld	e, a
      000E81 56                    3680 	ld	d, (hl)
      000E82 79                    3681 	ld	a, c
      000E83 93                    3682 	sub	a, e
      000E84 5F                    3683 	ld	e, a
      000E85 78                    3684 	ld	a, b
      000E86 9A                    3685 	sbc	a, d
      000E87 F8 0E                 3686 	ldhl	sp,	#14
      000E89 32                    3687 	ld	(hl-), a
      000E8A 73                    3688 	ld	(hl), e
      000E8B F8 02                 3689 	ldhl	sp,#2
      000E8D 2A                    3690 	ld	a, (hl+)
      000E8E 5F                    3691 	ld	e, a
      000E8F 56                    3692 	ld	d, (hl)
      000E90 F8 0D                 3693 	ldhl	sp,	#13
      000E92 2A                    3694 	ld	a, (hl+)
      000E93 12                    3695 	ld	(de), a
      000E94 13                    3696 	inc	de
      000E95 7E                    3697 	ld	a, (hl)
      000E96 12                    3698 	ld	(de), a
                                   3699 ;src/main.c:407: enemies[i].y -= yOverflow;
      000E97 F8 02                 3700 	ldhl	sp,#2
      000E99 2A                    3701 	ld	a, (hl+)
      000E9A 5F                    3702 	ld	e, a
      000E9B 56                    3703 	ld	d, (hl)
      000E9C 21 02 00              3704 	ld	hl, #0x0002
      000E9F 19                    3705 	add	hl, de
      000EA0 E5                    3706 	push	hl
      000EA1 7D                    3707 	ld	a, l
      000EA2 F8 06                 3708 	ldhl	sp,	#6
      000EA4 77                    3709 	ld	(hl), a
      000EA5 E1                    3710 	pop	hl
      000EA6 7C                    3711 	ld	a, h
      000EA7 F8 05                 3712 	ldhl	sp,	#5
      000EA9 32                    3713 	ld	(hl-), a
      000EAA 2A                    3714 	ld	a, (hl+)
      000EAB 5F                    3715 	ld	e, a
      000EAC 56                    3716 	ld	d, (hl)
      000EAD 1A                    3717 	ld	a, (de)
      000EAE 4F                    3718 	ld	c, a
      000EAF 13                    3719 	inc	de
      000EB0 1A                    3720 	ld	a, (de)
      000EB1 47                    3721 	ld	b, a
      000EB2 79                    3722 	ld	a, c
      000EB3 21rA2r00              3723 	ld	hl, #_yOverflow
      000EB6 96                    3724 	sub	a, (hl)
      000EB7 23                    3725 	inc	hl
      000EB8 4F                    3726 	ld	c, a
      000EB9 78                    3727 	ld	a, b
      000EBA 9E                    3728 	sbc	a, (hl)
      000EBB 47                    3729 	ld	b, a
      000EBC F8 04                 3730 	ldhl	sp,	#4
      000EBE 2A                    3731 	ld	a,	(hl+)
      000EBF 66                    3732 	ld	h, (hl)
      000EC0 6F                    3733 	ld	l, a
      000EC1 79                    3734 	ld	a, c
      000EC2 22                    3735 	ld	(hl+), a
      000EC3 70                    3736 	ld	(hl), b
                                   3737 ;src/main.c:410: if (abs(enemies[i].x - playerDrawX) > 8) {
      000EC4 F8 0D                 3738 	ldhl	sp,	#13
      000EC6 7E                    3739 	ld	a, (hl)
      000EC7 21r9Ar00              3740 	ld	hl, #_playerDrawX
      000ECA 4E                    3741 	ld	c, (hl)
      000ECB 91                    3742 	sub	a, c
      000ECC 4F                    3743 	ld	c, a
                                   3744 ;src/main.c:318: if (value >= 0) return value;
      000ECD CB 79                 3745 	bit	7, c
      000ECF 20 03                 3746 	jr	NZ, 00169$
      000ED1 41                    3747 	ld	b, c
      000ED2 18 03                 3748 	jr	00171$
      000ED4                       3749 00169$:
                                   3750 ;src/main.c:319: else return - value;
      000ED4 AF                    3751 	xor	a, a
      000ED5 91                    3752 	sub	a, c
      000ED6 47                    3753 	ld	b, a
                                   3754 ;src/main.c:410: if (abs(enemies[i].x - playerDrawX) > 8) {
      000ED7                       3755 00171$:
                                   3756 ;src/main.c:419: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000ED7 F8 02                 3757 	ldhl	sp,#2
      000ED9 2A                    3758 	ld	a, (hl+)
      000EDA 5F                    3759 	ld	e, a
      000EDB 56                    3760 	ld	d, (hl)
      000EDC 21 0E 00              3761 	ld	hl, #0x000e
      000EDF 19                    3762 	add	hl, de
      000EE0 E5                    3763 	push	hl
      000EE1 7D                    3764 	ld	a, l
      000EE2 F8 08                 3765 	ldhl	sp,	#8
      000EE4 77                    3766 	ld	(hl), a
      000EE5 E1                    3767 	pop	hl
      000EE6 7C                    3768 	ld	a, h
      000EE7 F8 07                 3769 	ldhl	sp,	#7
      000EE9 32                    3770 	ld	(hl-), a
      000EEA 2A                    3771 	ld	a, (hl+)
      000EEB 5F                    3772 	ld	e, a
      000EEC 56                    3773 	ld	d, (hl)
      000EED 1A                    3774 	ld	a, (de)
      000EEE 4F                    3775 	ld	c, a
                                   3776 ;src/main.c:412: enemies[i].xSpeed += enemies[i].accel;
      000EEF F8 02                 3777 	ldhl	sp,#2
      000EF1 2A                    3778 	ld	a, (hl+)
      000EF2 5F                    3779 	ld	e, a
      000EF3 56                    3780 	ld	d, (hl)
      000EF4 21 0D 00              3781 	ld	hl, #0x000d
      000EF7 19                    3782 	add	hl, de
      000EF8 33                    3783 	inc	sp
      000EF9 33                    3784 	inc	sp
      000EFA E5                    3785 	push	hl
                                   3786 ;src/main.c:410: if (abs(enemies[i].x - playerDrawX) > 8) {
      000EFB 58                    3787 	ld	e, b
      000EFC 3E 08                 3788 	ld	a,#0x08
      000EFE 57                    3789 	ld	d,a
      000EFF 90                    3790 	sub	a, b
      000F00 CB 7B                 3791 	bit	7, e
      000F02 28 07                 3792 	jr	Z, 00408$
      000F04 CB 7A                 3793 	bit	7, d
      000F06 20 08                 3794 	jr	NZ, 00409$
      000F08 BF                    3795 	cp	a, a
      000F09 18 05                 3796 	jr	00409$
      000F0B                       3797 00408$:
      000F0B CB 7A                 3798 	bit	7, d
      000F0D 28 01                 3799 	jr	Z, 00409$
      000F0F 37                    3800 	scf
      000F10                       3801 00409$:
      000F10 30 4E                 3802 	jr	NC, 00111$
                                   3803 ;src/main.c:411: if (enemies[i].x < playerDrawX) {
      000F12 F8 02                 3804 	ldhl	sp,#2
      000F14 2A                    3805 	ld	a, (hl+)
      000F15 5F                    3806 	ld	e, a
      000F16 56                    3807 	ld	d, (hl)
      000F17 1A                    3808 	ld	a, (de)
      000F18 F8 0B                 3809 	ldhl	sp,	#11
      000F1A 22                    3810 	ld	(hl+), a
      000F1B 13                    3811 	inc	de
      000F1C 1A                    3812 	ld	a, (de)
      000F1D 77                    3813 	ld	(hl), a
      000F1E FAr9Ar00              3814 	ld	a, (#_playerDrawX)
      000F21 F8 0D                 3815 	ldhl	sp,	#13
      000F23 22                    3816 	ld	(hl+), a
      000F24 36 00                 3817 	ld	(hl), #0x00
                                   3818 ;src/main.c:412: enemies[i].xSpeed += enemies[i].accel;
      000F26 D1                    3819 	pop	de
      000F27 D5                    3820 	push	de
      000F28 1A                    3821 	ld	a, (de)
      000F29 47                    3822 	ld	b, a
                                   3823 ;src/main.c:411: if (enemies[i].x < playerDrawX) {
      000F2A F8 0B                 3824 	ldhl	sp,	#11
      000F2C 5D                    3825 	ld	e, l
      000F2D 54                    3826 	ld	d, h
      000F2E F8 0D                 3827 	ldhl	sp,	#13
      000F30 1A                    3828 	ld	a, (de)
      000F31 13                    3829 	inc	de
      000F32 96                    3830 	sub	a, (hl)
      000F33 23                    3831 	inc	hl
      000F34 1A                    3832 	ld	a, (de)
      000F35 9E                    3833 	sbc	a, (hl)
      000F36 1A                    3834 	ld	a, (de)
      000F37 57                    3835 	ld	d, a
      000F38 CB 7E                 3836 	bit	7, (hl)
      000F3A 28 07                 3837 	jr	Z, 00410$
      000F3C CB 7A                 3838 	bit	7, d
      000F3E 20 08                 3839 	jr	NZ, 00411$
      000F40 BF                    3840 	cp	a, a
      000F41 18 05                 3841 	jr	00411$
      000F43                       3842 00410$:
      000F43 CB 7A                 3843 	bit	7, d
      000F45 28 01                 3844 	jr	Z, 00411$
      000F47 37                    3845 	scf
      000F48                       3846 00411$:
      000F48 30 0B                 3847 	jr	NC, 00104$
                                   3848 ;src/main.c:412: enemies[i].xSpeed += enemies[i].accel;
      000F4A 79                    3849 	ld	a, c
      000F4B 80                    3850 	add	a, b
      000F4C 4F                    3851 	ld	c, a
      000F4D F8 06                 3852 	ldhl	sp,	#6
      000F4F 2A                    3853 	ld	a,	(hl+)
      000F50 66                    3854 	ld	h, (hl)
      000F51 6F                    3855 	ld	l, a
      000F52 71                    3856 	ld	(hl), c
      000F53 18 38                 3857 	jr	00112$
      000F55                       3858 00104$:
                                   3859 ;src/main.c:415: enemies[i].xSpeed -= enemies[i].accel;
      000F55 79                    3860 	ld	a, c
      000F56 90                    3861 	sub	a, b
      000F57 4F                    3862 	ld	c, a
      000F58 F8 06                 3863 	ldhl	sp,	#6
      000F5A 2A                    3864 	ld	a,	(hl+)
      000F5B 66                    3865 	ld	h, (hl)
      000F5C 6F                    3866 	ld	l, a
      000F5D 71                    3867 	ld	(hl), c
      000F5E 18 2D                 3868 	jr	00112$
      000F60                       3869 00111$:
                                   3870 ;src/main.c:419: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F60 59                    3871 	ld	e, c
      000F61 AF                    3872 	xor	a, a
      000F62 57                    3873 	ld	d, a
      000F63 91                    3874 	sub	a, c
      000F64 CB 7B                 3875 	bit	7, e
      000F66 28 07                 3876 	jr	Z, 00412$
      000F68 CB 7A                 3877 	bit	7, d
      000F6A 20 08                 3878 	jr	NZ, 00413$
      000F6C BF                    3879 	cp	a, a
      000F6D 18 05                 3880 	jr	00413$
      000F6F                       3881 00412$:
      000F6F CB 7A                 3882 	bit	7, d
      000F71 28 01                 3883 	jr	Z, 00413$
      000F73 37                    3884 	scf
      000F74                       3885 00413$:
      000F74 30 07                 3886 	jr	NC, 00107$
      000F76 0D                    3887 	dec	c
      000F77 F8 06                 3888 	ldhl	sp,	#6
      000F79 2A                    3889 	ld	a,	(hl+)
      000F7A 66                    3890 	ld	h, (hl)
      000F7B 6F                    3891 	ld	l, a
      000F7C 71                    3892 	ld	(hl), c
      000F7D                       3893 00107$:
      000F7D F8 06                 3894 	ldhl	sp,#6
      000F7F 2A                    3895 	ld	a, (hl+)
      000F80 5F                    3896 	ld	e, a
      000F81 56                    3897 	ld	d, (hl)
      000F82 1A                    3898 	ld	a, (de)
      000F83 4F                    3899 	ld	c, a
                                   3900 ;src/main.c:420: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      000F84 CB 79                 3901 	bit	7, c
      000F86 28 05                 3902 	jr	Z, 00112$
      000F88 0C                    3903 	inc	c
      000F89 3A                    3904 	ld	a, (hl-)
      000F8A 6E                    3905 	ld	l, (hl)
      000F8B 67                    3906 	ld	h, a
      000F8C 71                    3907 	ld	(hl), c
      000F8D                       3908 00112$:
                                   3909 ;src/main.c:423: if (abs(enemies[i].y - playerDrawY) > 8) {
      000F8D F8 04                 3910 	ldhl	sp,#4
      000F8F 2A                    3911 	ld	a, (hl+)
      000F90 5F                    3912 	ld	e, a
      000F91 56                    3913 	ld	d, (hl)
      000F92 1A                    3914 	ld	a, (de)
      000F93 4F                    3915 	ld	c, a
      000F94 13                    3916 	inc	de
      000F95 1A                    3917 	ld	a, (de)
      000F96 47                    3918 	ld	b, a
      000F97 79                    3919 	ld	a, c
      000F98 21r9Br00              3920 	ld	hl, #_playerDrawY
      000F9B 5E                    3921 	ld	e, (hl)
      000F9C 93                    3922 	sub	a, e
      000F9D 6F                    3923 	ld	l, a
                                   3924 ;	spillPairReg hl
                                   3925 ;	spillPairReg hl
                                   3926 ;src/main.c:318: if (value >= 0) return value;
      000F9E CB 7D                 3927 	bit	7, l
      000FA0 20 06                 3928 	jr	NZ, 00173$
      000FA2 7D                    3929 	ld	a, l
      000FA3 F8 0E                 3930 	ldhl	sp,	#14
      000FA5 77                    3931 	ld	(hl), a
      000FA6 18 06                 3932 	jr	00175$
      000FA8                       3933 00173$:
                                   3934 ;src/main.c:319: else return - value;
      000FA8 AF                    3935 	xor	a, a
      000FA9 95                    3936 	sub	a, l
      000FAA 5F                    3937 	ld	e, a
      000FAB F8 0E                 3938 	ldhl	sp,	#14
      000FAD 73                    3939 	ld	(hl), e
                                   3940 ;src/main.c:423: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FAE                       3941 00175$:
                                   3942 ;src/main.c:425: enemies[i].ySpeed += enemies[i].accel;
      000FAE F8 02                 3943 	ldhl	sp,#2
      000FB0 2A                    3944 	ld	a, (hl+)
      000FB1 5F                    3945 	ld	e, a
      000FB2 56                    3946 	ld	d, (hl)
      000FB3 21 0F 00              3947 	ld	hl, #0x000f
      000FB6 19                    3948 	add	hl, de
      000FB7 E5                    3949 	push	hl
      000FB8 7D                    3950 	ld	a, l
      000FB9 F8 0A                 3951 	ldhl	sp,	#10
      000FBB 77                    3952 	ld	(hl), a
      000FBC E1                    3953 	pop	hl
      000FBD 7C                    3954 	ld	a, h
      000FBE F8 09                 3955 	ldhl	sp,	#9
                                   3956 ;src/main.c:432: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      000FC0 32                    3957 	ld	(hl-), a
      000FC1 2A                    3958 	ld	a, (hl+)
      000FC2 5F                    3959 	ld	e, a
      000FC3 2A                    3960 	ld	a, (hl+)
      000FC4 23                    3961 	inc	hl
      000FC5 57                    3962 	ld	d, a
      000FC6 1A                    3963 	ld	a, (de)
      000FC7 77                    3964 	ld	(hl), a
                                   3965 ;src/main.c:423: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FC8 F8 0E                 3966 	ldhl	sp,	#14
      000FCA 5E                    3967 	ld	e, (hl)
      000FCB 3E 08                 3968 	ld	a,#0x08
      000FCD 57                    3969 	ld	d,a
      000FCE 96                    3970 	sub	a, (hl)
      000FCF CB 7B                 3971 	bit	7, e
      000FD1 28 07                 3972 	jr	Z, 00414$
      000FD3 CB 7A                 3973 	bit	7, d
      000FD5 20 08                 3974 	jr	NZ, 00415$
      000FD7 BF                    3975 	cp	a, a
      000FD8 18 05                 3976 	jr	00415$
      000FDA                       3977 00414$:
      000FDA CB 7A                 3978 	bit	7, d
      000FDC 28 01                 3979 	jr	Z, 00415$
      000FDE 37                    3980 	scf
      000FDF                       3981 00415$:
      000FDF 30 44                 3982 	jr	NC, 00121$
                                   3983 ;src/main.c:424: if (enemies[i].y < playerDrawY) {
      000FE1 FAr9Br00              3984 	ld	a, (#_playerDrawY)
      000FE4 F8 0C                 3985 	ldhl	sp,	#12
      000FE6 22                    3986 	ld	(hl+), a
                                   3987 ;src/main.c:425: enemies[i].ySpeed += enemies[i].accel;
      000FE7 AF                    3988 	xor	a, a
      000FE8 22                    3989 	ld	(hl+), a
      000FE9 D1                    3990 	pop	de
      000FEA D5                    3991 	push	de
      000FEB 1A                    3992 	ld	a, (de)
                                   3993 ;src/main.c:424: if (enemies[i].y < playerDrawY) {
      000FEC 32                    3994 	ld	(hl-), a
      000FED 2B                    3995 	dec	hl
      000FEE 79                    3996 	ld	a, c
      000FEF 96                    3997 	sub	a, (hl)
      000FF0 23                    3998 	inc	hl
      000FF1 78                    3999 	ld	a, b
      000FF2 9E                    4000 	sbc	a, (hl)
      000FF3 78                    4001 	ld	a, b
      000FF4 57                    4002 	ld	d, a
      000FF5 CB 7E                 4003 	bit	7, (hl)
      000FF7 28 07                 4004 	jr	Z, 00416$
      000FF9 CB 7A                 4005 	bit	7, d
      000FFB 20 08                 4006 	jr	NZ, 00417$
      000FFD BF                    4007 	cp	a, a
      000FFE 18 05                 4008 	jr	00417$
      001000                       4009 00416$:
      001000 CB 7A                 4010 	bit	7, d
      001002 28 01                 4011 	jr	Z, 00417$
      001004 37                    4012 	scf
      001005                       4013 00417$:
      001005 30 0F                 4014 	jr	NC, 00114$
                                   4015 ;src/main.c:425: enemies[i].ySpeed += enemies[i].accel;
      001007 F8 0B                 4016 	ldhl	sp,	#11
      001009 7E                    4017 	ld	a, (hl)
      00100A F8 0E                 4018 	ldhl	sp,	#14
      00100C 86                    4019 	add	a, (hl)
      00100D 4F                    4020 	ld	c, a
      00100E F8 08                 4021 	ldhl	sp,	#8
      001010 2A                    4022 	ld	a,	(hl+)
      001011 66                    4023 	ld	h, (hl)
      001012 6F                    4024 	ld	l, a
      001013 71                    4025 	ld	(hl), c
      001014 18 41                 4026 	jr	00122$
      001016                       4027 00114$:
                                   4028 ;src/main.c:428: enemies[i].ySpeed -= enemies[i].accel;
      001016 F8 0B                 4029 	ldhl	sp,	#11
      001018 7E                    4030 	ld	a, (hl)
      001019 F8 0E                 4031 	ldhl	sp,	#14
      00101B 96                    4032 	sub	a, (hl)
      00101C 4F                    4033 	ld	c, a
      00101D F8 08                 4034 	ldhl	sp,	#8
      00101F 2A                    4035 	ld	a,	(hl+)
      001020 66                    4036 	ld	h, (hl)
      001021 6F                    4037 	ld	l, a
      001022 71                    4038 	ld	(hl), c
      001023 18 32                 4039 	jr	00122$
      001025                       4040 00121$:
                                   4041 ;src/main.c:432: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001025 F8 0B                 4042 	ldhl	sp,	#11
      001027 5E                    4043 	ld	e, (hl)
      001028 AF                    4044 	xor	a, a
      001029 57                    4045 	ld	d, a
      00102A 96                    4046 	sub	a, (hl)
      00102B CB 7B                 4047 	bit	7, e
      00102D 28 07                 4048 	jr	Z, 00418$
      00102F CB 7A                 4049 	bit	7, d
      001031 20 08                 4050 	jr	NZ, 00419$
      001033 BF                    4051 	cp	a, a
      001034 18 05                 4052 	jr	00419$
      001036                       4053 00418$:
      001036 CB 7A                 4054 	bit	7, d
      001038 28 01                 4055 	jr	Z, 00419$
      00103A 37                    4056 	scf
      00103B                       4057 00419$:
      00103B 30 0A                 4058 	jr	NC, 00117$
      00103D F8 0B                 4059 	ldhl	sp,	#11
      00103F 4E                    4060 	ld	c, (hl)
      001040 0D                    4061 	dec	c
      001041 F8 08                 4062 	ldhl	sp,	#8
      001043 2A                    4063 	ld	a,	(hl+)
      001044 66                    4064 	ld	h, (hl)
      001045 6F                    4065 	ld	l, a
      001046 71                    4066 	ld	(hl), c
      001047                       4067 00117$:
      001047 F8 08                 4068 	ldhl	sp,#8
      001049 2A                    4069 	ld	a, (hl+)
      00104A 5F                    4070 	ld	e, a
      00104B 56                    4071 	ld	d, (hl)
      00104C 1A                    4072 	ld	a, (de)
      00104D 4F                    4073 	ld	c, a
                                   4074 ;src/main.c:433: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      00104E CB 79                 4075 	bit	7, c
      001050 28 05                 4076 	jr	Z, 00122$
      001052 0C                    4077 	inc	c
      001053 3A                    4078 	ld	a, (hl-)
      001054 6E                    4079 	ld	l, (hl)
      001055 67                    4080 	ld	h, a
      001056 71                    4081 	ld	(hl), c
      001057                       4082 00122$:
                                   4083 ;src/main.c:437: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001057 F8 02                 4084 	ldhl	sp,#2
      001059 2A                    4085 	ld	a, (hl+)
      00105A 5F                    4086 	ld	e, a
      00105B 56                    4087 	ld	d, (hl)
      00105C 21 0C 00              4088 	ld	hl, #0x000c
      00105F 19                    4089 	add	hl, de
      001060 E5                    4090 	push	hl
      001061 7D                    4091 	ld	a, l
      001062 F8 0C                 4092 	ldhl	sp,	#12
      001064 77                    4093 	ld	(hl), a
      001065 E1                    4094 	pop	hl
      001066 7C                    4095 	ld	a, h
      001067 F8 0B                 4096 	ldhl	sp,	#11
      001069 32                    4097 	ld	(hl-), a
      00106A 2A                    4098 	ld	a, (hl+)
      00106B 5F                    4099 	ld	e, a
      00106C 2A                    4100 	ld	a, (hl+)
      00106D 57                    4101 	ld	d, a
      00106E 1A                    4102 	ld	a, (de)
      00106F 4F                    4103 	ld	c, a
      001070 22                    4104 	ld	(hl+), a
      001071 AF                    4105 	xor	a, a
      001072 91                    4106 	sub	a, c
      001073 77                    4107 	ld	(hl), a
      001074 F8 06                 4108 	ldhl	sp,#6
      001076 2A                    4109 	ld	a, (hl+)
      001077 5F                    4110 	ld	e, a
      001078 56                    4111 	ld	d, (hl)
      001079 1A                    4112 	ld	a, (de)
      00107A F8 0E                 4113 	ldhl	sp,	#14
                                   4114 ;src/main.c:299: return (value < min) ? min : (value > max) ? max : value;
      00107C 32                    4115 	ld	(hl-), a
      00107D 2A                    4116 	ld	a, (hl+)
      00107E 5F                    4117 	ld	e, a
      00107F 56                    4118 	ld	d, (hl)
      001080 3A                    4119 	ld	a, (hl-)
      001081 96                    4120 	sub	a, (hl)
      001082 CB 7B                 4121 	bit	7, e
      001084 28 07                 4122 	jr	Z, 00420$
      001086 CB 7A                 4123 	bit	7, d
      001088 20 08                 4124 	jr	NZ, 00421$
      00108A BF                    4125 	cp	a, a
      00108B 18 05                 4126 	jr	00421$
      00108D                       4127 00420$:
      00108D CB 7A                 4128 	bit	7, d
      00108F 28 01                 4129 	jr	Z, 00421$
      001091 37                    4130 	scf
      001092                       4131 00421$:
      001092 30 06                 4132 	jr	NC, 00202$
      001094 F8 0D                 4133 	ldhl	sp,	#13
      001096 2A                    4134 	ld	a, (hl+)
      001097 77                    4135 	ld	(hl), a
      001098 18 26                 4136 	jr	00203$
      00109A                       4137 00202$:
      00109A F8 0E                 4138 	ldhl	sp,	#14
      00109C 3A                    4139 	ld	a, (hl-)
      00109D 2B                    4140 	dec	hl
      00109E 5F                    4141 	ld	e, a
      00109F 56                    4142 	ld	d, (hl)
      0010A0 2A                    4143 	ld	a, (hl+)
      0010A1 23                    4144 	inc	hl
      0010A2 96                    4145 	sub	a, (hl)
      0010A3 CB 7B                 4146 	bit	7, e
      0010A5 28 07                 4147 	jr	Z, 00422$
      0010A7 CB 7A                 4148 	bit	7, d
      0010A9 20 08                 4149 	jr	NZ, 00423$
      0010AB BF                    4150 	cp	a, a
      0010AC 18 05                 4151 	jr	00423$
      0010AE                       4152 00422$:
      0010AE CB 7A                 4153 	bit	7, d
      0010B0 28 01                 4154 	jr	Z, 00423$
      0010B2 37                    4155 	scf
      0010B3                       4156 00423$:
      0010B3 30 05                 4157 	jr	NC, 00204$
      0010B5 F8 0C                 4158 	ldhl	sp,	#12
      0010B7 5E                    4159 	ld	e, (hl)
      0010B8 18 03                 4160 	jr	00205$
      0010BA                       4161 00204$:
      0010BA F8 0E                 4162 	ldhl	sp,	#14
      0010BC 5E                    4163 	ld	e, (hl)
      0010BD                       4164 00205$:
      0010BD F8 0E                 4165 	ldhl	sp,	#14
      0010BF 73                    4166 	ld	(hl), e
      0010C0                       4167 00203$:
      0010C0 F8 0E                 4168 	ldhl	sp,	#14
      0010C2 4E                    4169 	ld	c, (hl)
                                   4170 ;src/main.c:437: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0010C3 F8 06                 4171 	ldhl	sp,	#6
      0010C5 2A                    4172 	ld	a,	(hl+)
      0010C6 66                    4173 	ld	h, (hl)
      0010C7 6F                    4174 	ld	l, a
      0010C8 71                    4175 	ld	(hl), c
                                   4176 ;src/main.c:438: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0010C9 F8 0A                 4177 	ldhl	sp,#10
      0010CB 2A                    4178 	ld	a, (hl+)
      0010CC 5F                    4179 	ld	e, a
      0010CD 3A                    4180 	ld	a, (hl-)
      0010CE 2B                    4181 	dec	hl
      0010CF 2B                    4182 	dec	hl
      0010D0 57                    4183 	ld	d, a
      0010D1 1A                    4184 	ld	a, (de)
      0010D2 47                    4185 	ld	b, a
      0010D3 48                    4186 	ld	c, b
      0010D4 AF                    4187 	xor	a, a
      0010D5 90                    4188 	sub	a, b
      0010D6 47                    4189 	ld	b, a
      0010D7 2A                    4190 	ld	a, (hl+)
      0010D8 5F                    4191 	ld	e, a
      0010D9 56                    4192 	ld	d, (hl)
      0010DA 1A                    4193 	ld	a, (de)
      0010DB 6F                    4194 	ld	l, a
                                   4195 ;	spillPairReg hl
                                   4196 ;	spillPairReg hl
                                   4197 ;src/main.c:299: return (value < min) ? min : (value > max) ? max : value;
      0010DC 58                    4198 	ld	e, b
      0010DD 7D                    4199 	ld	a,l
      0010DE 57                    4200 	ld	d,a
      0010DF 90                    4201 	sub	a, b
      0010E0 CB 7B                 4202 	bit	7, e
      0010E2 28 07                 4203 	jr	Z, 00424$
      0010E4 CB 7A                 4204 	bit	7, d
      0010E6 20 08                 4205 	jr	NZ, 00425$
      0010E8 BF                    4206 	cp	a, a
      0010E9 18 05                 4207 	jr	00425$
      0010EB                       4208 00424$:
      0010EB CB 7A                 4209 	bit	7, d
      0010ED 28 01                 4210 	jr	Z, 00425$
      0010EF 37                    4211 	scf
      0010F0                       4212 00425$:
      0010F0 30 03                 4213 	jr	NC, 00206$
      0010F2 48                    4214 	ld	c, b
      0010F3 18 17                 4215 	jr	00207$
      0010F5                       4216 00206$:
      0010F5 5D                    4217 	ld	e, l
      0010F6 79                    4218 	ld	a,c
      0010F7 57                    4219 	ld	d,a
      0010F8 95                    4220 	sub	a, l
      0010F9 CB 7B                 4221 	bit	7, e
      0010FB 28 07                 4222 	jr	Z, 00426$
      0010FD CB 7A                 4223 	bit	7, d
      0010FF 20 08                 4224 	jr	NZ, 00427$
      001101 BF                    4225 	cp	a, a
      001102 18 05                 4226 	jr	00427$
      001104                       4227 00426$:
      001104 CB 7A                 4228 	bit	7, d
      001106 28 01                 4229 	jr	Z, 00427$
      001108 37                    4230 	scf
      001109                       4231 00427$:
      001109 38 01                 4232 	jr	C, 00209$
      00110B 4D                    4233 	ld	c, l
      00110C                       4234 00209$:
      00110C                       4235 00207$:
                                   4236 ;src/main.c:438: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      00110C F8 08                 4237 	ldhl	sp,	#8
      00110E 2A                    4238 	ld	a,	(hl+)
      00110F 66                    4239 	ld	h, (hl)
      001110 6F                    4240 	ld	l, a
      001111 71                    4241 	ld	(hl), c
                                   4242 ;src/main.c:441: enemies[i].xReserve += enemies[i].xSpeed;
      001112 F8 02                 4243 	ldhl	sp,#2
      001114 2A                    4244 	ld	a, (hl+)
      001115 5F                    4245 	ld	e, a
      001116 56                    4246 	ld	d, (hl)
      001117 21 04 00              4247 	ld	hl, #0x0004
      00111A 19                    4248 	add	hl, de
      00111B E5                    4249 	push	hl
      00111C 7D                    4250 	ld	a, l
      00111D F8 0F                 4251 	ldhl	sp,	#15
      00111F 77                    4252 	ld	(hl), a
      001120 E1                    4253 	pop	hl
      001121 7C                    4254 	ld	a, h
      001122 F8 0E                 4255 	ldhl	sp,	#14
      001124 32                    4256 	ld	(hl-), a
      001125 2A                    4257 	ld	a, (hl+)
      001126 5F                    4258 	ld	e, a
      001127 56                    4259 	ld	d, (hl)
      001128 1A                    4260 	ld	a, (de)
      001129 47                    4261 	ld	b, a
      00112A F8 06                 4262 	ldhl	sp,#6
      00112C 2A                    4263 	ld	a, (hl+)
      00112D 5F                    4264 	ld	e, a
      00112E 56                    4265 	ld	d, (hl)
      00112F 1A                    4266 	ld	a, (de)
      001130 80                    4267 	add	a, b
      001131 47                    4268 	ld	b, a
      001132 F8 0D                 4269 	ldhl	sp,	#13
      001134 2A                    4270 	ld	a,	(hl+)
      001135 66                    4271 	ld	h, (hl)
      001136 6F                    4272 	ld	l, a
      001137 70                    4273 	ld	(hl), b
                                   4274 ;src/main.c:442: enemies[i].yReserve += enemies[i].ySpeed;
      001138 F8 02                 4275 	ldhl	sp,#2
      00113A 2A                    4276 	ld	a, (hl+)
      00113B 5F                    4277 	ld	e, a
      00113C 56                    4278 	ld	d, (hl)
      00113D 21 05 00              4279 	ld	hl, #0x0005
      001140 19                    4280 	add	hl, de
      001141 E5                    4281 	push	hl
      001142 7D                    4282 	ld	a, l
      001143 F8 0C                 4283 	ldhl	sp,	#12
      001145 77                    4284 	ld	(hl), a
      001146 E1                    4285 	pop	hl
      001147 7C                    4286 	ld	a, h
      001148 F8 0B                 4287 	ldhl	sp,	#11
      00114A 32                    4288 	ld	(hl-), a
      00114B 2A                    4289 	ld	a, (hl+)
      00114C 5F                    4290 	ld	e, a
      00114D 56                    4291 	ld	d, (hl)
      00114E 1A                    4292 	ld	a, (de)
      00114F 81                    4293 	add	a, c
      001150 4F                    4294 	ld	c, a
      001151 3A                    4295 	ld	a, (hl-)
      001152 6E                    4296 	ld	l, (hl)
      001153 67                    4297 	ld	h, a
      001154 71                    4298 	ld	(hl), c
                                   4299 ;src/main.c:446: if (enemies[i].xReserve >> 3 > 0) {
      001155 F8 0D                 4300 	ldhl	sp,#13
      001157 2A                    4301 	ld	a, (hl+)
      001158 5F                    4302 	ld	e, a
      001159 3A                    4303 	ld	a, (hl-)
      00115A 2B                    4304 	dec	hl
      00115B 57                    4305 	ld	d, a
      00115C 1A                    4306 	ld	a, (de)
      00115D 77                    4307 	ld	(hl), a
      00115E CB 28                 4308 	sra	b
      001160 CB 28                 4309 	sra	b
      001162 CB 28                 4310 	sra	b
      001164 58                    4311 	ld	e, b
      001165 AF                    4312 	xor	a, a
      001166 57                    4313 	ld	d, a
      001167 90                    4314 	sub	a, b
      001168 CB 7B                 4315 	bit	7, e
      00116A 28 07                 4316 	jr	Z, 00428$
      00116C CB 7A                 4317 	bit	7, d
      00116E 20 08                 4318 	jr	NZ, 00429$
      001170 BF                    4319 	cp	a, a
      001171 18 05                 4320 	jr	00429$
      001173                       4321 00428$:
      001173 CB 7A                 4322 	bit	7, d
      001175 28 01                 4323 	jr	Z, 00429$
      001177 37                    4324 	scf
      001178                       4325 00429$:
      001178 30 3F                 4326 	jr	NC, 00126$
                                   4327 ;src/main.c:447: int8_t xMovement = enemies[i].xReserve >> 3;
      00117A F8 0C                 4328 	ldhl	sp,	#12
      00117C 7E                    4329 	ld	a, (hl)
      00117D CB 2F                 4330 	sra	a
      00117F CB 2F                 4331 	sra	a
      001181 CB 2F                 4332 	sra	a
      001183 77                    4333 	ld	(hl), a
                                   4334 ;src/main.c:448: enemies[i].x += xMovement;
      001184 F8 02                 4335 	ldhl	sp,#2
      001186 2A                    4336 	ld	a, (hl+)
      001187 5F                    4337 	ld	e, a
      001188 56                    4338 	ld	d, (hl)
      001189 1A                    4339 	ld	a, (de)
      00118A 4F                    4340 	ld	c, a
      00118B 13                    4341 	inc	de
      00118C 1A                    4342 	ld	a, (de)
      00118D 47                    4343 	ld	b, a
      00118E F8 0C                 4344 	ldhl	sp,	#12
      001190 7E                    4345 	ld	a, (hl)
      001191 5F                    4346 	ld	e, a
      001192 07                    4347 	rlca
      001193 9F                    4348 	sbc	a, a
      001194 57                    4349 	ld	d, a
      001195 69                    4350 	ld	l, c
                                   4351 ;	spillPairReg hl
                                   4352 ;	spillPairReg hl
      001196 60                    4353 	ld	h, b
                                   4354 ;	spillPairReg hl
                                   4355 ;	spillPairReg hl
      001197 19                    4356 	add	hl, de
      001198 4D                    4357 	ld	c, l
      001199 44                    4358 	ld	b, h
      00119A F8 02                 4359 	ldhl	sp,	#2
      00119C 2A                    4360 	ld	a,	(hl+)
      00119D 66                    4361 	ld	h, (hl)
      00119E 6F                    4362 	ld	l, a
      00119F 79                    4363 	ld	a, c
      0011A0 22                    4364 	ld	(hl+), a
      0011A1 70                    4365 	ld	(hl), b
                                   4366 ;src/main.c:449: enemies[i].xReserve -=  xMovement << 3;
      0011A2 F8 0D                 4367 	ldhl	sp,#13
      0011A4 2A                    4368 	ld	a, (hl+)
      0011A5 5F                    4369 	ld	e, a
      0011A6 3A                    4370 	ld	a, (hl-)
      0011A7 2B                    4371 	dec	hl
      0011A8 57                    4372 	ld	d, a
      0011A9 1A                    4373 	ld	a, (de)
      0011AA F5                    4374 	push	af
      0011AB 2A                    4375 	ld	a, (hl+)
      0011AC 87                    4376 	add	a, a
      0011AD 87                    4377 	add	a, a
      0011AE 87                    4378 	add	a, a
      0011AF 4F                    4379 	ld	c, a
      0011B0 F1                    4380 	pop	af
      0011B1 91                    4381 	sub	a, c
      0011B2 4F                    4382 	ld	c, a
      0011B3 2A                    4383 	ld	a,	(hl+)
      0011B4 66                    4384 	ld	h, (hl)
      0011B5 6F                    4385 	ld	l, a
      0011B6 71                    4386 	ld	(hl), c
      0011B7 18 69                 4387 	jr	00127$
      0011B9                       4388 00126$:
                                   4389 ;src/main.c:452: else if ((-enemies[i].xReserve) >> 3 > 0){
      0011B9 F8 0C                 4390 	ldhl	sp,	#12
      0011BB 7E                    4391 	ld	a, (hl)
      0011BC 4F                    4392 	ld	c, a
      0011BD 07                    4393 	rlca
      0011BE 9F                    4394 	sbc	a, a
      0011BF 47                    4395 	ld	b, a
      0011C0 AF                    4396 	xor	a, a
      0011C1 91                    4397 	sub	a, c
      0011C2 4F                    4398 	ld	c, a
      0011C3 9F                    4399 	sbc	a, a
      0011C4 90                    4400 	sub	a, b
      0011C5 47                    4401 	ld	b, a
      0011C6 CB 28                 4402 	sra	b
      0011C8 CB 19                 4403 	rr	c
      0011CA CB 28                 4404 	sra	b
      0011CC CB 19                 4405 	rr	c
      0011CE CB 28                 4406 	sra	b
      0011D0 CB 19                 4407 	rr	c
      0011D2 58                    4408 	ld	e, b
      0011D3 AF                    4409 	xor	a, a
      0011D4 57                    4410 	ld	d, a
      0011D5 B9                    4411 	cp	a, c
      0011D6 98                    4412 	sbc	a, b
      0011D7 CB 7B                 4413 	bit	7, e
      0011D9 28 07                 4414 	jr	Z, 00430$
      0011DB CB 7A                 4415 	bit	7, d
      0011DD 20 08                 4416 	jr	NZ, 00431$
      0011DF BF                    4417 	cp	a, a
      0011E0 18 05                 4418 	jr	00431$
      0011E2                       4419 00430$:
      0011E2 CB 7A                 4420 	bit	7, d
      0011E4 28 01                 4421 	jr	Z, 00431$
      0011E6 37                    4422 	scf
      0011E7                       4423 00431$:
      0011E7 30 39                 4424 	jr	NC, 00127$
                                   4425 ;src/main.c:453: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      0011E9 AF                    4426 	xor	a, a
      0011EA 91                    4427 	sub	a, c
      0011EB 4F                    4428 	ld	c, a
      0011EC F8 0C                 4429 	ldhl	sp,	#12
      0011EE 71                    4430 	ld	(hl), c
                                   4431 ;src/main.c:454: enemies[i].x += xMovement;
      0011EF F8 02                 4432 	ldhl	sp,#2
      0011F1 2A                    4433 	ld	a, (hl+)
      0011F2 5F                    4434 	ld	e, a
      0011F3 56                    4435 	ld	d, (hl)
      0011F4 1A                    4436 	ld	a, (de)
      0011F5 4F                    4437 	ld	c, a
      0011F6 13                    4438 	inc	de
      0011F7 1A                    4439 	ld	a, (de)
      0011F8 47                    4440 	ld	b, a
      0011F9 F8 0C                 4441 	ldhl	sp,	#12
      0011FB 7E                    4442 	ld	a, (hl)
      0011FC 5F                    4443 	ld	e, a
      0011FD 07                    4444 	rlca
      0011FE 9F                    4445 	sbc	a, a
      0011FF 57                    4446 	ld	d, a
      001200 69                    4447 	ld	l, c
                                   4448 ;	spillPairReg hl
                                   4449 ;	spillPairReg hl
      001201 60                    4450 	ld	h, b
                                   4451 ;	spillPairReg hl
                                   4452 ;	spillPairReg hl
      001202 19                    4453 	add	hl, de
      001203 4D                    4454 	ld	c, l
      001204 44                    4455 	ld	b, h
      001205 F8 02                 4456 	ldhl	sp,	#2
      001207 2A                    4457 	ld	a,	(hl+)
      001208 66                    4458 	ld	h, (hl)
      001209 6F                    4459 	ld	l, a
      00120A 79                    4460 	ld	a, c
      00120B 22                    4461 	ld	(hl+), a
      00120C 70                    4462 	ld	(hl), b
                                   4463 ;src/main.c:455: enemies[i].xReserve +=  (-xMovement) << 3;
      00120D F8 0D                 4464 	ldhl	sp,#13
      00120F 2A                    4465 	ld	a, (hl+)
      001210 5F                    4466 	ld	e, a
      001211 3A                    4467 	ld	a, (hl-)
      001212 2B                    4468 	dec	hl
      001213 57                    4469 	ld	d, a
      001214 1A                    4470 	ld	a, (de)
      001215 4F                    4471 	ld	c, a
      001216 AF                    4472 	xor	a, a
      001217 96                    4473 	sub	a, (hl)
      001218 23                    4474 	inc	hl
      001219 87                    4475 	add	a, a
      00121A 87                    4476 	add	a, a
      00121B 87                    4477 	add	a, a
      00121C 81                    4478 	add	a, c
      00121D 4F                    4479 	ld	c, a
      00121E 2A                    4480 	ld	a,	(hl+)
      00121F 66                    4481 	ld	h, (hl)
      001220 6F                    4482 	ld	l, a
      001221 71                    4483 	ld	(hl), c
      001222                       4484 00127$:
                                   4485 ;src/main.c:442: enemies[i].yReserve += enemies[i].ySpeed;
      001222 F8 0A                 4486 	ldhl	sp,#10
      001224 2A                    4487 	ld	a, (hl+)
      001225 5F                    4488 	ld	e, a
      001226 56                    4489 	ld	d, (hl)
      001227 1A                    4490 	ld	a, (de)
      001228 4F                    4491 	ld	c, a
                                   4492 ;src/main.c:458: if (enemies[i].yReserve >> 3 > 0) {
      001229 41                    4493 	ld	b, c
      00122A CB 28                 4494 	sra	b
      00122C CB 28                 4495 	sra	b
      00122E CB 28                 4496 	sra	b
      001230 58                    4497 	ld	e, b
      001231 AF                    4498 	xor	a, a
      001232 57                    4499 	ld	d, a
      001233 90                    4500 	sub	a, b
      001234 CB 7B                 4501 	bit	7, e
      001236 28 07                 4502 	jr	Z, 00432$
      001238 CB 7A                 4503 	bit	7, d
      00123A 20 08                 4504 	jr	NZ, 00433$
      00123C BF                    4505 	cp	a, a
      00123D 18 05                 4506 	jr	00433$
      00123F                       4507 00432$:
      00123F CB 7A                 4508 	bit	7, d
      001241 28 01                 4509 	jr	Z, 00433$
      001243 37                    4510 	scf
      001244                       4511 00433$:
      001244 30 3A                 4512 	jr	NC, 00131$
                                   4513 ;src/main.c:459: int8_t yMovement = enemies[i].yReserve >> 3;
      001246 F8 0E                 4514 	ldhl	sp,	#14
      001248 70                    4515 	ld	(hl), b
                                   4516 ;src/main.c:460: enemies[i].y += yMovement;
      001249 F8 04                 4517 	ldhl	sp,#4
      00124B 2A                    4518 	ld	a, (hl+)
      00124C 5F                    4519 	ld	e, a
      00124D 56                    4520 	ld	d, (hl)
      00124E 1A                    4521 	ld	a, (de)
      00124F 4F                    4522 	ld	c, a
      001250 13                    4523 	inc	de
      001251 1A                    4524 	ld	a, (de)
      001252 47                    4525 	ld	b, a
      001253 F8 0E                 4526 	ldhl	sp,	#14
      001255 7E                    4527 	ld	a, (hl)
      001256 5F                    4528 	ld	e, a
      001257 07                    4529 	rlca
      001258 9F                    4530 	sbc	a, a
      001259 57                    4531 	ld	d, a
      00125A 69                    4532 	ld	l, c
                                   4533 ;	spillPairReg hl
                                   4534 ;	spillPairReg hl
      00125B 60                    4535 	ld	h, b
                                   4536 ;	spillPairReg hl
                                   4537 ;	spillPairReg hl
      00125C 19                    4538 	add	hl, de
      00125D 4D                    4539 	ld	c, l
      00125E 44                    4540 	ld	b, h
      00125F F8 04                 4541 	ldhl	sp,	#4
      001261 2A                    4542 	ld	a,	(hl+)
      001262 66                    4543 	ld	h, (hl)
      001263 6F                    4544 	ld	l, a
      001264 79                    4545 	ld	a, c
      001265 22                    4546 	ld	(hl+), a
      001266 70                    4547 	ld	(hl), b
                                   4548 ;src/main.c:461: enemies[i].yReserve -=  yMovement << 3;
      001267 F8 0A                 4549 	ldhl	sp,#10
      001269 2A                    4550 	ld	a, (hl+)
      00126A 5F                    4551 	ld	e, a
      00126B 56                    4552 	ld	d, (hl)
      00126C 1A                    4553 	ld	a, (de)
      00126D F5                    4554 	push	af
      00126E F8 10                 4555 	ldhl	sp,	#16
      001270 7E                    4556 	ld	a, (hl)
      001271 87                    4557 	add	a, a
      001272 87                    4558 	add	a, a
      001273 87                    4559 	add	a, a
      001274 4F                    4560 	ld	c, a
      001275 F1                    4561 	pop	af
      001276 91                    4562 	sub	a, c
      001277 4F                    4563 	ld	c, a
      001278 F8 0A                 4564 	ldhl	sp,	#10
      00127A 2A                    4565 	ld	a,	(hl+)
      00127B 66                    4566 	ld	h, (hl)
      00127C 6F                    4567 	ld	l, a
      00127D 71                    4568 	ld	(hl), c
      00127E 18 67                 4569 	jr	00133$
      001280                       4570 00131$:
                                   4571 ;src/main.c:463: else if ((-enemies[i].yReserve) >> 3 > 0){
      001280 79                    4572 	ld	a, c
      001281 07                    4573 	rlca
      001282 9F                    4574 	sbc	a, a
      001283 47                    4575 	ld	b, a
      001284 AF                    4576 	xor	a, a
      001285 91                    4577 	sub	a, c
      001286 4F                    4578 	ld	c, a
      001287 9F                    4579 	sbc	a, a
      001288 90                    4580 	sub	a, b
      001289 47                    4581 	ld	b, a
      00128A CB 28                 4582 	sra	b
      00128C CB 19                 4583 	rr	c
      00128E CB 28                 4584 	sra	b
      001290 CB 19                 4585 	rr	c
      001292 CB 28                 4586 	sra	b
      001294 CB 19                 4587 	rr	c
      001296 58                    4588 	ld	e, b
      001297 AF                    4589 	xor	a, a
      001298 57                    4590 	ld	d, a
      001299 B9                    4591 	cp	a, c
      00129A 98                    4592 	sbc	a, b
      00129B CB 7B                 4593 	bit	7, e
      00129D 28 07                 4594 	jr	Z, 00434$
      00129F CB 7A                 4595 	bit	7, d
      0012A1 20 08                 4596 	jr	NZ, 00435$
      0012A3 BF                    4597 	cp	a, a
      0012A4 18 05                 4598 	jr	00435$
      0012A6                       4599 00434$:
      0012A6 CB 7A                 4600 	bit	7, d
      0012A8 28 01                 4601 	jr	Z, 00435$
      0012AA 37                    4602 	scf
      0012AB                       4603 00435$:
      0012AB 30 3A                 4604 	jr	NC, 00133$
                                   4605 ;src/main.c:464: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0012AD AF                    4606 	xor	a, a
      0012AE 91                    4607 	sub	a, c
      0012AF 4F                    4608 	ld	c, a
      0012B0 F8 0E                 4609 	ldhl	sp,	#14
      0012B2 71                    4610 	ld	(hl), c
                                   4611 ;src/main.c:465: enemies[i].y += yMovement;
      0012B3 F8 04                 4612 	ldhl	sp,#4
      0012B5 2A                    4613 	ld	a, (hl+)
      0012B6 5F                    4614 	ld	e, a
      0012B7 56                    4615 	ld	d, (hl)
      0012B8 1A                    4616 	ld	a, (de)
      0012B9 4F                    4617 	ld	c, a
      0012BA 13                    4618 	inc	de
      0012BB 1A                    4619 	ld	a, (de)
      0012BC 47                    4620 	ld	b, a
      0012BD F8 0E                 4621 	ldhl	sp,	#14
      0012BF 7E                    4622 	ld	a, (hl)
      0012C0 5F                    4623 	ld	e, a
      0012C1 07                    4624 	rlca
      0012C2 9F                    4625 	sbc	a, a
      0012C3 57                    4626 	ld	d, a
      0012C4 69                    4627 	ld	l, c
      0012C5 60                    4628 	ld	h, b
      0012C6 19                    4629 	add	hl, de
      0012C7 4D                    4630 	ld	c, l
      0012C8 44                    4631 	ld	b, h
      0012C9 F8 04                 4632 	ldhl	sp,	#4
      0012CB 2A                    4633 	ld	a,	(hl+)
      0012CC 66                    4634 	ld	h, (hl)
      0012CD 6F                    4635 	ld	l, a
      0012CE 79                    4636 	ld	a, c
      0012CF 22                    4637 	ld	(hl+), a
      0012D0 70                    4638 	ld	(hl), b
                                   4639 ;src/main.c:466: enemies[i].yReserve +=  (-yMovement) << 3;
      0012D1 F8 0A                 4640 	ldhl	sp,#10
      0012D3 2A                    4641 	ld	a, (hl+)
      0012D4 5F                    4642 	ld	e, a
      0012D5 56                    4643 	ld	d, (hl)
      0012D6 1A                    4644 	ld	a, (de)
      0012D7 4F                    4645 	ld	c, a
      0012D8 AF                    4646 	xor	a, a
      0012D9 F8 0E                 4647 	ldhl	sp,	#14
      0012DB 96                    4648 	sub	a, (hl)
      0012DC 87                    4649 	add	a, a
      0012DD 87                    4650 	add	a, a
      0012DE 87                    4651 	add	a, a
      0012DF 81                    4652 	add	a, c
      0012E0 4F                    4653 	ld	c, a
      0012E1 F8 0A                 4654 	ldhl	sp,	#10
      0012E3 2A                    4655 	ld	a,	(hl+)
      0012E4 66                    4656 	ld	h, (hl)
      0012E5 6F                    4657 	ld	l, a
      0012E6 71                    4658 	ld	(hl), c
      0012E7                       4659 00133$:
                                   4660 ;src/main.c:402: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0012E7 F8 0F                 4661 	ldhl	sp,	#15
      0012E9 34                    4662 	inc	(hl)
      0012EA C3r36r0E              4663 	jp	00196$
      0012ED                       4664 00134$:
                                   4665 ;src/main.c:473: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0012ED F8 0F                 4666 	ldhl	sp,	#15
      0012EF 36 00                 4667 	ld	(hl), #0x00
      0012F1                       4668 00198$:
      0012F1 21r4Dr08              4669 	ld	hl, #_ENEMYCOUNT
      0012F4 4E                    4670 	ld	c, (hl)
      0012F5 F8 0F                 4671 	ldhl	sp,	#15
      0012F7 7E                    4672 	ld	a, (hl)
      0012F8 91                    4673 	sub	a, c
      0012F9 D2r9Cr16              4674 	jp	NC, 00200$
                                   4675 ;src/main.c:475: if (enemies[i].alive) {
      0012FC 7E                    4676 	ld	a, (hl)
      0012FD 16 00                 4677 	ld	d, #0x00
      0012FF 87                    4678 	add	a, a
      001300 CB 12                 4679 	rl	d
      001302 87                    4680 	add	a, a
      001303 CB 12                 4681 	rl	d
      001305 87                    4682 	add	a, a
      001306 CB 12                 4683 	rl	d
      001308 87                    4684 	add	a, a
      001309 CB 12                 4685 	rl	d
      00130B 5F                    4686 	ld	e, a
      00130C 21r50r00              4687 	ld	hl, #_enemies
      00130F 19                    4688 	add	hl, de
      001310 E5                    4689 	push	hl
      001311 7D                    4690 	ld	a, l
      001312 F8 03                 4691 	ldhl	sp,	#3
      001314 77                    4692 	ld	(hl), a
      001315 E1                    4693 	pop	hl
      001316 7C                    4694 	ld	a, h
      001317 F8 02                 4695 	ldhl	sp,	#2
      001319 32                    4696 	ld	(hl-), a
      00131A 2A                    4697 	ld	a, (hl+)
      00131B 5F                    4698 	ld	e, a
      00131C 56                    4699 	ld	d, (hl)
      00131D 21 09 00              4700 	ld	hl, #0x0009
      001320 19                    4701 	add	hl, de
      001321 E5                    4702 	push	hl
      001322 7D                    4703 	ld	a, l
      001323 F8 05                 4704 	ldhl	sp,	#5
      001325 77                    4705 	ld	(hl), a
      001326 E1                    4706 	pop	hl
      001327 7C                    4707 	ld	a, h
      001328 F8 04                 4708 	ldhl	sp,	#4
      00132A 32                    4709 	ld	(hl-), a
      00132B 2A                    4710 	ld	a, (hl+)
      00132C 5F                    4711 	ld	e, a
      00132D 56                    4712 	ld	d, (hl)
      00132E 1A                    4713 	ld	a, (de)
      00132F F8 0E                 4714 	ldhl	sp,	#14
      001331 77                    4715 	ld	(hl), a
      001332 7E                    4716 	ld	a, (hl)
      001333 B7                    4717 	or	a, a
      001334 CAr2Ar15              4718 	jp	Z, 00157$
                                   4719 ;src/main.c:476: if (enemies[i].visible == 1) {
      001337 F8 01                 4720 	ldhl	sp,#1
      001339 2A                    4721 	ld	a, (hl+)
      00133A 5F                    4722 	ld	e, a
      00133B 56                    4723 	ld	d, (hl)
      00133C 21 0A 00              4724 	ld	hl, #0x000a
      00133F 19                    4725 	add	hl, de
      001340 E5                    4726 	push	hl
      001341 7D                    4727 	ld	a, l
      001342 F8 07                 4728 	ldhl	sp,	#7
      001344 77                    4729 	ld	(hl), a
      001345 E1                    4730 	pop	hl
      001346 7C                    4731 	ld	a, h
      001347 F8 06                 4732 	ldhl	sp,	#6
      001349 32                    4733 	ld	(hl-), a
      00134A 2A                    4734 	ld	a, (hl+)
      00134B 5F                    4735 	ld	e, a
      00134C 2A                    4736 	ld	a, (hl+)
      00134D 57                    4737 	ld	d, a
      00134E 1A                    4738 	ld	a, (de)
      00134F 77                    4739 	ld	(hl), a
                                   4740 ;src/main.c:477: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001350 F8 01                 4741 	ldhl	sp,#1
      001352 2A                    4742 	ld	a, (hl+)
      001353 5F                    4743 	ld	e, a
      001354 56                    4744 	ld	d, (hl)
      001355 1A                    4745 	ld	a, (de)
      001356 F8 08                 4746 	ldhl	sp,	#8
      001358 22                    4747 	ld	(hl+), a
      001359 13                    4748 	inc	de
      00135A 1A                    4749 	ld	a, (de)
      00135B 77                    4750 	ld	(hl), a
      00135C F8 01                 4751 	ldhl	sp,	#1
      00135E 2A                    4752 	ld	a, (hl+)
      00135F 4F                    4753 	ld	c, a
      001360 46                    4754 	ld	b, (hl)
      001361 03                    4755 	inc	bc
      001362 03                    4756 	inc	bc
                                   4757 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      001363 F8 0F                 4758 	ldhl	sp,	#15
      001365 5E                    4759 	ld	e, (hl)
                                   4760 ;src/main.c:477: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001366 F8 08                 4761 	ldhl	sp,	#8
      001368 2A                    4762 	ld	a, (hl+)
      001369 23                    4763 	inc	hl
      00136A 32                    4764 	ld	(hl-), a
      00136B 2A                    4765 	ld	a, (hl+)
      00136C 23                    4766 	inc	hl
                                   4767 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      00136D 22                    4768 	ld	(hl+), a
      00136E 7B                    4769 	ld	a, e
      00136F 87                    4770 	add	a, a
                                   4771 ;src/main.c:477: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001370 32                    4772 	ld	(hl-), a
      001371 2A                    4773 	ld	a, (hl+)
      001372 23                    4774 	inc	hl
      001373 07                    4775 	rlca
      001374 E6 01                 4776 	and	a,#0x01
                                   4777 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      001376 32                    4778 	ld	(hl-), a
      001377 2A                    4779 	ld	a, (hl+)
      001378 23                    4780 	inc	hl
      001379 C6 0A                 4781 	add	a, #0x0a
      00137B 77                    4782 	ld	(hl), a
                                   4783 ;src/main.c:476: if (enemies[i].visible == 1) {
      00137C F8 07                 4784 	ldhl	sp,	#7
      00137E 7E                    4785 	ld	a, (hl)
      00137F 3D                    4786 	dec	a
      001380 20 74                 4787 	jr	NZ, 00154$
                                   4788 ;src/main.c:477: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001382 F8 0D                 4789 	ldhl	sp,	#13
      001384 7E                    4790 	ld	a, (hl)
      001385 B7                    4791 	or	a, a
      001386 20 43                 4792 	jr	NZ, 00135$
      001388 F8 0A                 4793 	ldhl	sp,	#10
      00138A 3E AC                 4794 	ld	a, #0xac
      00138C 96                    4795 	sub	a, (hl)
      00138D 23                    4796 	inc	hl
      00138E 3E 00                 4797 	ld	a, #0x00
      001390 9E                    4798 	sbc	a, (hl)
      001391 3E 00                 4799 	ld	a, #0x00
      001393 57                    4800 	ld	d, a
      001394 CB 7E                 4801 	bit	7, (hl)
      001396 28 07                 4802 	jr	Z, 00439$
      001398 CB 7A                 4803 	bit	7, d
      00139A 20 08                 4804 	jr	NZ, 00440$
      00139C BF                    4805 	cp	a, a
      00139D 18 05                 4806 	jr	00440$
      00139F                       4807 00439$:
      00139F CB 7A                 4808 	bit	7, d
      0013A1 28 01                 4809 	jr	Z, 00440$
      0013A3 37                    4810 	scf
      0013A4                       4811 00440$:
      0013A4 38 25                 4812 	jr	C, 00135$
      0013A6 69                    4813 	ld	l, c
      0013A7 60                    4814 	ld	h, b
      0013A8 2A                    4815 	ld	a, (hl+)
      0013A9 4F                    4816 	ld	c, a
      0013AA 46                    4817 	ld	b, (hl)
      0013AB CB 78                 4818 	bit	7, b
      0013AD 20 1C                 4819 	jr	NZ, 00135$
      0013AF 58                    4820 	ld	e, b
      0013B0 16 00                 4821 	ld	d, #0x00
      0013B2 3E 98                 4822 	ld	a, #0x98
      0013B4 B9                    4823 	cp	a, c
      0013B5 3E 00                 4824 	ld	a, #0x00
      0013B7 98                    4825 	sbc	a, b
      0013B8 CB 7B                 4826 	bit	7, e
      0013BA 28 07                 4827 	jr	Z, 00441$
      0013BC CB 7A                 4828 	bit	7, d
      0013BE 20 08                 4829 	jr	NZ, 00442$
      0013C0 BF                    4830 	cp	a, a
      0013C1 18 05                 4831 	jr	00442$
      0013C3                       4832 00441$:
      0013C3 CB 7A                 4833 	bit	7, d
      0013C5 28 01                 4834 	jr	Z, 00442$
      0013C7 37                    4835 	scf
      0013C8                       4836 00442$:
      0013C8 D2r2Ar15              4837 	jp	NC, 00157$
      0013CB                       4838 00135$:
                                   4839 ;src/main.c:478: enemies[i].visible = 0;
      0013CB F8 05                 4840 	ldhl	sp,	#5
      0013CD 2A                    4841 	ld	a,	(hl+)
      0013CE 66                    4842 	ld	h, (hl)
      0013CF 6F                    4843 	ld	l, a
      0013D0 36 00                 4844 	ld	(hl), #0x00
                                   4845 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      0013D2 F8 0E                 4846 	ldhl	sp,	#14
                                   4847 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013D4 6E                    4848 	ld	l, (hl)
      0013D5 01r00r00              4849 	ld	bc, #_shadow_OAM+0
                                   4850 ;	spillPairReg hl
                                   4851 ;	spillPairReg hl
      0013D8 26 00                 4852 	ld	h, #0x00
                                   4853 ;	spillPairReg hl
                                   4854 ;	spillPairReg hl
      0013DA 29                    4855 	add	hl, hl
      0013DB 29                    4856 	add	hl, hl
      0013DC 09                    4857 	add	hl, bc
      0013DD 23                    4858 	inc	hl
      0013DE 23                    4859 	inc	hl
      0013DF 36 7F                 4860 	ld	(hl), #0x7f
                                   4861 ;src/main.c:480: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0013E1 F8 0C                 4862 	ldhl	sp,	#12
      0013E3 7E                    4863 	ld	a, (hl)
      0013E4 C6 0B                 4864 	add	a, #0x0b
                                   4865 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013E6 6F                    4866 	ld	l, a
      0013E7 01r00r00              4867 	ld	bc, #_shadow_OAM+0
                                   4868 ;	spillPairReg hl
                                   4869 ;	spillPairReg hl
      0013EA 26 00                 4870 	ld	h, #0x00
                                   4871 ;	spillPairReg hl
                                   4872 ;	spillPairReg hl
      0013EC 29                    4873 	add	hl, hl
      0013ED 29                    4874 	add	hl, hl
      0013EE 09                    4875 	add	hl, bc
      0013EF 23                    4876 	inc	hl
      0013F0 23                    4877 	inc	hl
      0013F1 36 7F                 4878 	ld	(hl), #0x7f
                                   4879 ;src/main.c:480: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0013F3 C3r2Ar15              4880 	jp	00157$
      0013F6                       4881 00154$:
                                   4882 ;src/main.c:484: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      0013F6 F8 0D                 4883 	ldhl	sp,	#13
      0013F8 CB 46                 4884 	bit	0, (hl)
      0013FA C2r95r14              4885 	jp	NZ, 00148$
      0013FD F8 0A                 4886 	ldhl	sp,	#10
      0013FF 2A                    4887 	ld	a, (hl+)
      001400 D6 AC                 4888 	sub	a, #0xac
      001402 7E                    4889 	ld	a, (hl)
      001403 DE 00                 4890 	sbc	a, #0x00
      001405 56                    4891 	ld	d, (hl)
      001406 3E 00                 4892 	ld	a, #0x00
      001408 CB 7F                 4893 	bit	7,a
      00140A 28 07                 4894 	jr	Z, 00443$
      00140C CB 7A                 4895 	bit	7, d
      00140E 20 08                 4896 	jr	NZ, 00444$
      001410 BF                    4897 	cp	a, a
      001411 18 05                 4898 	jr	00444$
      001413                       4899 00443$:
      001413 CB 7A                 4900 	bit	7, d
      001415 28 01                 4901 	jr	Z, 00444$
      001417 37                    4902 	scf
      001418                       4903 00444$:
      001418 30 7B                 4904 	jr	NC, 00148$
      00141A 69                    4905 	ld	l, c
      00141B 60                    4906 	ld	h, b
      00141C 2A                    4907 	ld	a,	(hl+)
      00141D 66                    4908 	ld	h, (hl)
                                   4909 ;	spillPairReg hl
      00141E 6F                    4910 	ld	l, a
                                   4911 ;	spillPairReg hl
                                   4912 ;	spillPairReg hl
      00141F 5C                    4913 	ld	e, h
      001420 AF                    4914 	xor	a, a
      001421 57                    4915 	ld	d, a
      001422 BD                    4916 	cp	a, l
      001423 9C                    4917 	sbc	a, h
      001424 CB 7B                 4918 	bit	7, e
      001426 28 07                 4919 	jr	Z, 00445$
      001428 CB 7A                 4920 	bit	7, d
      00142A 20 08                 4921 	jr	NZ, 00446$
      00142C BF                    4922 	cp	a, a
      00142D 18 05                 4923 	jr	00446$
      00142F                       4924 00445$:
      00142F CB 7A                 4925 	bit	7, d
      001431 28 01                 4926 	jr	Z, 00446$
      001433 37                    4927 	scf
      001434                       4928 00446$:
      001434 30 5F                 4929 	jr	NC, 00148$
      001436 7D                    4930 	ld	a, l
      001437 D6 98                 4931 	sub	a, #0x98
      001439 7C                    4932 	ld	a, h
      00143A 17                    4933 	rla
      00143B 3F                    4934 	ccf
      00143C 1F                    4935 	rra
      00143D DE 80                 4936 	sbc	a, #0x80
      00143F 30 54                 4937 	jr	NC, 00148$
                                   4938 ;src/main.c:485: enemies[i].visible = 1;
      001441 F8 05                 4939 	ldhl	sp,	#5
      001443 2A                    4940 	ld	a,	(hl+)
      001444 66                    4941 	ld	h, (hl)
      001445 6F                    4942 	ld	l, a
      001446 36 01                 4943 	ld	(hl), #0x01
                                   4944 ;src/main.c:486: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      001448 F8 01                 4945 	ldhl	sp,#1
      00144A 2A                    4946 	ld	a, (hl+)
      00144B 5F                    4947 	ld	e, a
      00144C 56                    4948 	ld	d, (hl)
      00144D 21 06 00              4949 	ld	hl, #0x0006
      001450 19                    4950 	add	hl, de
      001451 4D                    4951 	ld	c, l
      001452 44                    4952 	ld	b, h
      001453 0A                    4953 	ld	a, (bc)
      001454 4F                    4954 	ld	c, a
      001455 F8 0E                 4955 	ldhl	sp,	#14
                                   4956 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001457 6E                    4957 	ld	l, (hl)
                                   4958 ;	spillPairReg hl
                                   4959 ;	spillPairReg hl
      001458 26 00                 4960 	ld	h, #0x00
                                   4961 ;	spillPairReg hl
                                   4962 ;	spillPairReg hl
      00145A 29                    4963 	add	hl, hl
      00145B 29                    4964 	add	hl, hl
      00145C 11r00r00              4965 	ld	de, #_shadow_OAM
      00145F 19                    4966 	add	hl, de
      001460 23                    4967 	inc	hl
      001461 23                    4968 	inc	hl
      001462 71                    4969 	ld	(hl), c
                                   4970 ;src/main.c:487: if (enemies[i].spriteCount == 2) {
      001463 F8 01                 4971 	ldhl	sp,#1
      001465 2A                    4972 	ld	a, (hl+)
      001466 5F                    4973 	ld	e, a
      001467 56                    4974 	ld	d, (hl)
      001468 21 08 00              4975 	ld	hl, #0x0008
      00146B 19                    4976 	add	hl, de
      00146C 4D                    4977 	ld	c, l
      00146D 44                    4978 	ld	b, h
      00146E 0A                    4979 	ld	a, (bc)
      00146F D6 02                 4980 	sub	a, #0x02
      001471 C2r2Ar15              4981 	jp	NZ,00157$
                                   4982 ;src/main.c:488: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001474 F8 01                 4983 	ldhl	sp,#1
      001476 2A                    4984 	ld	a, (hl+)
      001477 5F                    4985 	ld	e, a
      001478 56                    4986 	ld	d, (hl)
      001479 21 07 00              4987 	ld	hl, #0x0007
      00147C 19                    4988 	add	hl, de
      00147D 4D                    4989 	ld	c, l
      00147E 44                    4990 	ld	b, h
      00147F 0A                    4991 	ld	a, (bc)
      001480 4F                    4992 	ld	c, a
      001481 F8 0C                 4993 	ldhl	sp,	#12
      001483 7E                    4994 	ld	a, (hl)
      001484 C6 0B                 4995 	add	a, #0x0b
                                   4996 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001486 6F                    4997 	ld	l, a
                                   4998 ;	spillPairReg hl
                                   4999 ;	spillPairReg hl
      001487 26 00                 5000 	ld	h, #0x00
                                   5001 ;	spillPairReg hl
                                   5002 ;	spillPairReg hl
      001489 29                    5003 	add	hl, hl
      00148A 29                    5004 	add	hl, hl
      00148B 11r00r00              5005 	ld	de, #_shadow_OAM
      00148E 19                    5006 	add	hl, de
      00148F 23                    5007 	inc	hl
      001490 23                    5008 	inc	hl
      001491 71                    5009 	ld	(hl), c
                                   5010 ;src/main.c:488: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001492 C3r2Ar15              5011 	jp	00157$
      001495                       5012 00148$:
                                   5013 ;src/main.c:491: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001495 F8 08                 5014 	ldhl	sp,	#8
      001497 2A                    5015 	ld	a, (hl+)
      001498 D6 9C                 5016 	sub	a, #0x9c
      00149A 7E                    5017 	ld	a, (hl)
      00149B DE FF                 5018 	sbc	a, #0xff
      00149D 56                    5019 	ld	d, (hl)
      00149E 3E FF                 5020 	ld	a, #0xff
      0014A0 CB 7F                 5021 	bit	7,a
      0014A2 28 07                 5022 	jr	Z, 00449$
      0014A4 CB 7A                 5023 	bit	7, d
      0014A6 20 08                 5024 	jr	NZ, 00450$
      0014A8 BF                    5025 	cp	a, a
      0014A9 18 05                 5026 	jr	00450$
      0014AB                       5027 00449$:
      0014AB CB 7A                 5028 	bit	7, d
      0014AD 28 01                 5029 	jr	Z, 00450$
      0014AF 37                    5030 	scf
      0014B0                       5031 00450$:
      0014B0 38 49                 5032 	jr	C, 00142$
      0014B2 F8 0A                 5033 	ldhl	sp,	#10
      0014B4 3E 10                 5034 	ld	a, #0x10
      0014B6 96                    5035 	sub	a, (hl)
      0014B7 23                    5036 	inc	hl
      0014B8 3E 01                 5037 	ld	a, #0x01
      0014BA 9E                    5038 	sbc	a, (hl)
      0014BB 3E 01                 5039 	ld	a, #0x01
      0014BD 57                    5040 	ld	d, a
      0014BE CB 7E                 5041 	bit	7, (hl)
      0014C0 28 07                 5042 	jr	Z, 00451$
      0014C2 CB 7A                 5043 	bit	7, d
      0014C4 20 08                 5044 	jr	NZ, 00452$
      0014C6 BF                    5045 	cp	a, a
      0014C7 18 05                 5046 	jr	00452$
      0014C9                       5047 00451$:
      0014C9 CB 7A                 5048 	bit	7, d
      0014CB 28 01                 5049 	jr	Z, 00452$
      0014CD 37                    5050 	scf
      0014CE                       5051 00452$:
      0014CE 38 2B                 5052 	jr	C, 00142$
      0014D0 69                    5053 	ld	l, c
      0014D1 60                    5054 	ld	h, b
      0014D2 2A                    5055 	ld	a, (hl+)
      0014D3 4F                    5056 	ld	c, a
      0014D4 46                    5057 	ld	b, (hl)
      0014D5 79                    5058 	ld	a, c
      0014D6 D6 9C                 5059 	sub	a, #0x9c
      0014D8 78                    5060 	ld	a, b
      0014D9 17                    5061 	rla
      0014DA 3F                    5062 	ccf
      0014DB 1F                    5063 	rra
      0014DC DE 7F                 5064 	sbc	a, #0x7f
      0014DE 38 1B                 5065 	jr	C, 00142$
      0014E0 58                    5066 	ld	e, b
      0014E1 16 00                 5067 	ld	d, #0x00
      0014E3 3E FC                 5068 	ld	a, #0xfc
      0014E5 B9                    5069 	cp	a, c
      0014E6 3E 00                 5070 	ld	a, #0x00
      0014E8 98                    5071 	sbc	a, b
      0014E9 CB 7B                 5072 	bit	7, e
      0014EB 28 07                 5073 	jr	Z, 00453$
      0014ED CB 7A                 5074 	bit	7, d
      0014EF 20 08                 5075 	jr	NZ, 00454$
      0014F1 BF                    5076 	cp	a, a
      0014F2 18 05                 5077 	jr	00454$
      0014F4                       5078 00453$:
      0014F4 CB 7A                 5079 	bit	7, d
      0014F6 28 01                 5080 	jr	Z, 00454$
      0014F8 37                    5081 	scf
      0014F9                       5082 00454$:
      0014F9 30 2F                 5083 	jr	NC, 00157$
      0014FB                       5084 00142$:
                                   5085 ;src/main.c:492: enemies[i].alive = 0;
      0014FB F8 03                 5086 	ldhl	sp,	#3
      0014FD 2A                    5087 	ld	a,	(hl+)
      0014FE 66                    5088 	ld	h, (hl)
      0014FF 6F                    5089 	ld	l, a
      001500 36 00                 5090 	ld	(hl), #0x00
                                   5091 ;src/main.c:493: set_sprite_tile(10+(i<<1), 0x7f);
      001502 F8 0E                 5092 	ldhl	sp,	#14
                                   5093 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001504 6E                    5094 	ld	l, (hl)
      001505 01r00r00              5095 	ld	bc, #_shadow_OAM+0
                                   5096 ;	spillPairReg hl
                                   5097 ;	spillPairReg hl
      001508 26 00                 5098 	ld	h, #0x00
                                   5099 ;	spillPairReg hl
                                   5100 ;	spillPairReg hl
      00150A 29                    5101 	add	hl, hl
      00150B 29                    5102 	add	hl, hl
      00150C 09                    5103 	add	hl, bc
      00150D 23                    5104 	inc	hl
      00150E 23                    5105 	inc	hl
      00150F 36 7F                 5106 	ld	(hl), #0x7f
                                   5107 ;src/main.c:494: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001511 F8 0C                 5108 	ldhl	sp,	#12
      001513 7E                    5109 	ld	a, (hl)
      001514 C6 0B                 5110 	add	a, #0x0b
                                   5111 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001516 6F                    5112 	ld	l, a
      001517 01r00r00              5113 	ld	bc, #_shadow_OAM+0
                                   5114 ;	spillPairReg hl
                                   5115 ;	spillPairReg hl
      00151A 26 00                 5116 	ld	h, #0x00
                                   5117 ;	spillPairReg hl
                                   5118 ;	spillPairReg hl
      00151C 29                    5119 	add	hl, hl
      00151D 29                    5120 	add	hl, hl
      00151E 09                    5121 	add	hl, bc
      00151F 23                    5122 	inc	hl
      001520 23                    5123 	inc	hl
      001521 36 7F                 5124 	ld	(hl), #0x7f
                                   5125 ;src/main.c:495: initEnemies(0);
      001523 AF                    5126 	xor	a, a
      001524 F5                    5127 	push	af
      001525 33                    5128 	inc	sp
      001526 CDr85r0C              5129 	call	_initEnemies
      001529 33                    5130 	inc	sp
      00152A                       5131 00157$:
                                   5132 ;src/main.c:499: if (enemies[i].spriteCount == 1) {
      00152A F8 0F                 5133 	ldhl	sp,	#15
      00152C 6E                    5134 	ld	l, (hl)
      00152D 26 00                 5135 	ld	h, #0x00
      00152F 29                    5136 	add	hl, hl
      001530 29                    5137 	add	hl, hl
      001531 29                    5138 	add	hl, hl
      001532 29                    5139 	add	hl, hl
      001533 7D                    5140 	ld	a, l
      001534 C6r50                 5141 	add	a, #<(_enemies)
      001536 4F                    5142 	ld	c, a
      001537 7C                    5143 	ld	a, h
      001538 CEs00                 5144 	adc	a, #>(_enemies)
      00153A 47                    5145 	ld	b, a
      00153B 21 08 00              5146 	ld	hl, #0x0008
      00153E 09                    5147 	add	hl, bc
      00153F 5E                    5148 	ld	e, (hl)
                                   5149 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      001540 F8 0F                 5150 	ldhl	sp,	#15
      001542 3A                    5151 	ld	a, (hl-)
      001543 87                    5152 	add	a, a
      001544 77                    5153 	ld	(hl), a
      001545 7E                    5154 	ld	a, (hl)
      001546 C6 0A                 5155 	add	a, #0x0a
      001548 F8 0A                 5156 	ldhl	sp,	#10
      00154A 77                    5157 	ld	(hl), a
                                   5158 ;src/main.c:499: if (enemies[i].spriteCount == 1) {
      00154B 1D                    5159 	dec	e
      00154C 20 52                 5160 	jr	NZ, 00165$
                                   5161 ;src/main.c:500: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00154E 59                    5162 	ld	e, c
      00154F 50                    5163 	ld	d, b
      001550 13                    5164 	inc	de
      001551 13                    5165 	inc	de
      001552 1A                    5166 	ld	a, (de)
      001553 C6 0C                 5167 	add	a, #0x0c
      001555 5F                    5168 	ld	e, a
      001556 0A                    5169 	ld	a, (bc)
      001557 C6 04                 5170 	add	a, #0x04
      001559 F8 0E                 5171 	ldhl	sp,	#14
      00155B 77                    5172 	ld	(hl), a
      00155C F8 0A                 5173 	ldhl	sp,	#10
      00155E 56                    5174 	ld	d, (hl)
                                   5175 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00155F 6A                    5176 	ld	l, d
                                   5177 ;	spillPairReg hl
                                   5178 ;	spillPairReg hl
      001560 26 00                 5179 	ld	h, #0x00
                                   5180 ;	spillPairReg hl
                                   5181 ;	spillPairReg hl
      001562 29                    5182 	add	hl, hl
      001563 29                    5183 	add	hl, hl
      001564 D5                    5184 	push	de
      001565 11r00r00              5185 	ld	de, #_shadow_OAM
      001568 19                    5186 	add	hl, de
      001569 D1                    5187 	pop	de
                                   5188 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00156A 7B                    5189 	ld	a, e
      00156B 22                    5190 	ld	(hl+), a
      00156C 5D                    5191 	ld	e, l
      00156D 54                    5192 	ld	d, h
      00156E F8 0E                 5193 	ldhl	sp,	#14
      001570 7E                    5194 	ld	a, (hl)
      001571 12                    5195 	ld	(de), a
                                   5196 ;src/main.c:501: if (enemies[i].xSpeed >= 0) {
      001572 21 0E 00              5197 	ld	hl, #0x000e
      001575 09                    5198 	add	hl, bc
      001576 CB 7E                 5199 	bit	7, (hl)
      001578 20 13                 5200 	jr	NZ, 00159$
                                   5201 ;src/main.c:502: set_sprite_prop(10+(i<<1), 0);
      00157A F8 0A                 5202 	ldhl	sp,	#10
                                   5203 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00157C 6E                    5204 	ld	l, (hl)
      00157D 01r00r00              5205 	ld	bc, #_shadow_OAM+0
                                   5206 ;	spillPairReg hl
                                   5207 ;	spillPairReg hl
      001580 26 00                 5208 	ld	h, #0x00
                                   5209 ;	spillPairReg hl
                                   5210 ;	spillPairReg hl
      001582 29                    5211 	add	hl, hl
      001583 29                    5212 	add	hl, hl
      001584 09                    5213 	add	hl, bc
      001585 23                    5214 	inc	hl
      001586 23                    5215 	inc	hl
      001587 23                    5216 	inc	hl
      001588 36 00                 5217 	ld	(hl), #0x00
                                   5218 ;src/main.c:502: set_sprite_prop(10+(i<<1), 0);
      00158A C3r96r16              5219 	jp	00199$
      00158D                       5220 00159$:
                                   5221 ;src/main.c:505: set_sprite_prop(10+(i<<1), S_FLIPX);
      00158D F8 0A                 5222 	ldhl	sp,	#10
                                   5223 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00158F 6E                    5224 	ld	l, (hl)
      001590 01r00r00              5225 	ld	bc, #_shadow_OAM+0
                                   5226 ;	spillPairReg hl
                                   5227 ;	spillPairReg hl
      001593 26 00                 5228 	ld	h, #0x00
                                   5229 ;	spillPairReg hl
                                   5230 ;	spillPairReg hl
      001595 29                    5231 	add	hl, hl
      001596 29                    5232 	add	hl, hl
      001597 09                    5233 	add	hl, bc
      001598 23                    5234 	inc	hl
      001599 23                    5235 	inc	hl
      00159A 23                    5236 	inc	hl
      00159B 36 20                 5237 	ld	(hl), #0x20
                                   5238 ;src/main.c:505: set_sprite_prop(10+(i<<1), S_FLIPX);
      00159D C3r96r16              5239 	jp	00199$
      0015A0                       5240 00165$:
                                   5241 ;src/main.c:510: if (enemies[i].xSpeed >= 0) {
      0015A0 21 0E 00              5242 	ld	hl, #0x000e
      0015A3 09                    5243 	add	hl, bc
      0015A4 E5                    5244 	push	hl
      0015A5 7D                    5245 	ld	a, l
      0015A6 F8 0E                 5246 	ldhl	sp,	#14
      0015A8 77                    5247 	ld	(hl), a
      0015A9 E1                    5248 	pop	hl
      0015AA 7C                    5249 	ld	a, h
      0015AB F8 0D                 5250 	ldhl	sp,	#13
      0015AD 32                    5251 	ld	(hl-), a
      0015AE 2A                    5252 	ld	a, (hl+)
      0015AF 5F                    5253 	ld	e, a
      0015B0 56                    5254 	ld	d, (hl)
      0015B1 1A                    5255 	ld	a, (de)
                                   5256 ;	spillPairReg hl
                                   5257 ;	spillPairReg hl
      0015B2 CB 7F                 5258 	bit	7,a
      0015B4 20 70                 5259 	jr	NZ, 00162$
                                   5260 ;src/main.c:511: set_sprite_prop(10+(i<<1), 0);
      0015B6 F8 0A                 5261 	ldhl	sp,	#10
                                   5262 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015B8 6E                    5263 	ld	l, (hl)
                                   5264 ;	spillPairReg hl
                                   5265 ;	spillPairReg hl
      0015B9 26 00                 5266 	ld	h, #0x00
                                   5267 ;	spillPairReg hl
                                   5268 ;	spillPairReg hl
      0015BB 29                    5269 	add	hl, hl
      0015BC 29                    5270 	add	hl, hl
      0015BD 11r00r00              5271 	ld	de, #_shadow_OAM
      0015C0 19                    5272 	add	hl, de
      0015C1 23                    5273 	inc	hl
      0015C2 23                    5274 	inc	hl
      0015C3 23                    5275 	inc	hl
      0015C4 36 00                 5276 	ld	(hl), #0x00
                                   5277 ;src/main.c:512: set_sprite_prop(10+(i<<1)+1, 0);
      0015C6 F8 0E                 5278 	ldhl	sp,	#14
      0015C8 7E                    5279 	ld	a, (hl)
      0015C9 C6 0B                 5280 	add	a, #0x0b
      0015CB F8 0B                 5281 	ldhl	sp,	#11
      0015CD 77                    5282 	ld	(hl), a
                                   5283 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015CE 6E                    5284 	ld	l, (hl)
                                   5285 ;	spillPairReg hl
                                   5286 ;	spillPairReg hl
      0015CF 26 00                 5287 	ld	h, #0x00
                                   5288 ;	spillPairReg hl
                                   5289 ;	spillPairReg hl
      0015D1 29                    5290 	add	hl, hl
      0015D2 29                    5291 	add	hl, hl
      0015D3 11r00r00              5292 	ld	de, #_shadow_OAM
      0015D6 19                    5293 	add	hl, de
      0015D7 23                    5294 	inc	hl
      0015D8 23                    5295 	inc	hl
      0015D9 23                    5296 	inc	hl
      0015DA 36 00                 5297 	ld	(hl), #0x00
                                   5298 ;src/main.c:513: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      0015DC 21 02 00              5299 	ld	hl, #0x0002
      0015DF 09                    5300 	add	hl, bc
      0015E0 E5                    5301 	push	hl
      0015E1 7D                    5302 	ld	a, l
      0015E2 F8 0E                 5303 	ldhl	sp,	#14
      0015E4 77                    5304 	ld	(hl), a
      0015E5 E1                    5305 	pop	hl
      0015E6 7C                    5306 	ld	a, h
      0015E7 F8 0D                 5307 	ldhl	sp,	#13
      0015E9 32                    5308 	ld	(hl-), a
      0015EA 2A                    5309 	ld	a, (hl+)
      0015EB 5F                    5310 	ld	e, a
      0015EC 2A                    5311 	ld	a, (hl+)
      0015ED 57                    5312 	ld	d, a
      0015EE 1A                    5313 	ld	a, (de)
      0015EF C6 08                 5314 	add	a, #0x08
      0015F1 5F                    5315 	ld	e, a
      0015F2 0A                    5316 	ld	a, (bc)
      0015F3 77                    5317 	ld	(hl), a
      0015F4 F8 0A                 5318 	ldhl	sp,	#10
      0015F6 56                    5319 	ld	d, (hl)
                                   5320 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0015F7 6A                    5321 	ld	l, d
                                   5322 ;	spillPairReg hl
                                   5323 ;	spillPairReg hl
      0015F8 26 00                 5324 	ld	h, #0x00
                                   5325 ;	spillPairReg hl
                                   5326 ;	spillPairReg hl
      0015FA 29                    5327 	add	hl, hl
      0015FB 29                    5328 	add	hl, hl
      0015FC D5                    5329 	push	de
      0015FD 11r00r00              5330 	ld	de, #_shadow_OAM
      001600 19                    5331 	add	hl, de
      001601 D1                    5332 	pop	de
                                   5333 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001602 7B                    5334 	ld	a, e
      001603 22                    5335 	ld	(hl+), a
      001604 5D                    5336 	ld	e, l
      001605 54                    5337 	ld	d, h
      001606 F8 0E                 5338 	ldhl	sp,	#14
                                   5339 ;src/main.c:514: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001608 3A                    5340 	ld	a, (hl-)
      001609 2B                    5341 	dec	hl
      00160A 12                    5342 	ld	(de), a
      00160B 2A                    5343 	ld	a, (hl+)
      00160C 5F                    5344 	ld	e, a
      00160D 3A                    5345 	ld	a, (hl-)
      00160E 2B                    5346 	dec	hl
      00160F 57                    5347 	ld	d, a
      001610 1A                    5348 	ld	a, (de)
      001611 C6 08                 5349 	add	a, #0x08
      001613 57                    5350 	ld	d, a
      001614 0A                    5351 	ld	a, (bc)
      001615 C6 08                 5352 	add	a, #0x08
      001617 5F                    5353 	ld	e, a
                                   5354 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001618 6E                    5355 	ld	l, (hl)
                                   5356 ;	spillPairReg hl
                                   5357 ;	spillPairReg hl
      001619 26 00                 5358 	ld	h, #0x00
                                   5359 ;	spillPairReg hl
                                   5360 ;	spillPairReg hl
      00161B 29                    5361 	add	hl, hl
      00161C 29                    5362 	add	hl, hl
      00161D 01r00r00              5363 	ld	bc, #_shadow_OAM
      001620 09                    5364 	add	hl, bc
                                   5365 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001621 7A                    5366 	ld	a, d
      001622 22                    5367 	ld	(hl+), a
      001623 73                    5368 	ld	(hl), e
                                   5369 ;src/main.c:514: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001624 18 70                 5370 	jr	00199$
      001626                       5371 00162$:
                                   5372 ;src/main.c:517: set_sprite_prop(10+(i<<1), S_FLIPX);
      001626 F8 0A                 5373 	ldhl	sp,	#10
      001628 5E                    5374 	ld	e, (hl)
                                   5375 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001629 26 00                 5376 	ld	h, #0x00
                                   5377 ;	spillPairReg hl
                                   5378 ;	spillPairReg hl
      00162B 6B                    5379 	ld	l, e
      00162C 29                    5380 	add	hl, hl
      00162D 29                    5381 	add	hl, hl
      00162E 11r00r00              5382 	ld	de, #_shadow_OAM
      001631 19                    5383 	add	hl, de
      001632 23                    5384 	inc	hl
      001633 23                    5385 	inc	hl
      001634 23                    5386 	inc	hl
      001635 36 20                 5387 	ld	(hl), #0x20
                                   5388 ;src/main.c:518: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001637 F8 0E                 5389 	ldhl	sp,	#14
      001639 7E                    5390 	ld	a, (hl)
      00163A C6 0B                 5391 	add	a, #0x0b
      00163C F8 0B                 5392 	ldhl	sp,	#11
      00163E 77                    5393 	ld	(hl), a
      00163F 5E                    5394 	ld	e, (hl)
                                   5395 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001640 26 00                 5396 	ld	h, #0x00
                                   5397 ;	spillPairReg hl
                                   5398 ;	spillPairReg hl
      001642 6B                    5399 	ld	l, e
      001643 29                    5400 	add	hl, hl
      001644 29                    5401 	add	hl, hl
      001645 11r00r00              5402 	ld	de, #_shadow_OAM
      001648 19                    5403 	add	hl, de
      001649 23                    5404 	inc	hl
      00164A 23                    5405 	inc	hl
      00164B 23                    5406 	inc	hl
      00164C 36 20                 5407 	ld	(hl), #0x20
                                   5408 ;src/main.c:519: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      00164E 21 02 00              5409 	ld	hl, #0x0002
      001651 09                    5410 	add	hl, bc
      001652 E5                    5411 	push	hl
      001653 7D                    5412 	ld	a, l
      001654 F8 0E                 5413 	ldhl	sp,	#14
      001656 77                    5414 	ld	(hl), a
      001657 E1                    5415 	pop	hl
      001658 7C                    5416 	ld	a, h
      001659 F8 0D                 5417 	ldhl	sp,	#13
      00165B 32                    5418 	ld	(hl-), a
      00165C 2A                    5419 	ld	a, (hl+)
      00165D 5F                    5420 	ld	e, a
      00165E 2A                    5421 	ld	a, (hl+)
      00165F 57                    5422 	ld	d, a
      001660 1A                    5423 	ld	a, (de)
      001661 C6 08                 5424 	add	a, #0x08
      001663 5F                    5425 	ld	e, a
      001664 0A                    5426 	ld	a, (bc)
      001665 C6 08                 5427 	add	a, #0x08
      001667 77                    5428 	ld	(hl), a
      001668 F8 0A                 5429 	ldhl	sp,	#10
      00166A 56                    5430 	ld	d, (hl)
                                   5431 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00166B 6A                    5432 	ld	l, d
                                   5433 ;	spillPairReg hl
                                   5434 ;	spillPairReg hl
      00166C 26 00                 5435 	ld	h, #0x00
                                   5436 ;	spillPairReg hl
                                   5437 ;	spillPairReg hl
      00166E 29                    5438 	add	hl, hl
      00166F 29                    5439 	add	hl, hl
      001670 D5                    5440 	push	de
      001671 11r00r00              5441 	ld	de, #_shadow_OAM
      001674 19                    5442 	add	hl, de
      001675 D1                    5443 	pop	de
                                   5444 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001676 7B                    5445 	ld	a, e
      001677 22                    5446 	ld	(hl+), a
      001678 5D                    5447 	ld	e, l
      001679 54                    5448 	ld	d, h
      00167A F8 0E                 5449 	ldhl	sp,	#14
                                   5450 ;src/main.c:520: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00167C 3A                    5451 	ld	a, (hl-)
      00167D 2B                    5452 	dec	hl
      00167E 12                    5453 	ld	(de), a
      00167F 2A                    5454 	ld	a, (hl+)
      001680 5F                    5455 	ld	e, a
      001681 3A                    5456 	ld	a, (hl-)
      001682 2B                    5457 	dec	hl
      001683 57                    5458 	ld	d, a
      001684 1A                    5459 	ld	a, (de)
      001685 C6 08                 5460 	add	a, #0x08
      001687 57                    5461 	ld	d, a
      001688 0A                    5462 	ld	a, (bc)
      001689 5F                    5463 	ld	e, a
                                   5464 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00168A 6E                    5465 	ld	l, (hl)
                                   5466 ;	spillPairReg hl
                                   5467 ;	spillPairReg hl
      00168B 26 00                 5468 	ld	h, #0x00
                                   5469 ;	spillPairReg hl
                                   5470 ;	spillPairReg hl
      00168D 29                    5471 	add	hl, hl
      00168E 29                    5472 	add	hl, hl
      00168F 01r00r00              5473 	ld	bc, #_shadow_OAM
      001692 09                    5474 	add	hl, bc
                                   5475 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001693 7A                    5476 	ld	a, d
      001694 22                    5477 	ld	(hl+), a
      001695 73                    5478 	ld	(hl), e
                                   5479 ;src/main.c:520: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      001696                       5480 00199$:
                                   5481 ;src/main.c:473: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001696 F8 0F                 5482 	ldhl	sp,	#15
      001698 34                    5483 	inc	(hl)
      001699 C3rF1r12              5484 	jp	00198$
      00169C                       5485 00200$:
                                   5486 ;src/main.c:526: }
      00169C E8 10                 5487 	add	sp, #16
      00169E C9                    5488 	ret
                                   5489 ;src/main.c:531: void move() {
                                   5490 ;	---------------------------------
                                   5491 ; Function move
                                   5492 ; ---------------------------------
      00169F                       5493 _move::
      00169F E8 F8                 5494 	add	sp, #-8
                                   5495 ;src/main.c:535: if (joydata & J_A) {
      0016A1 FArDCr00              5496 	ld	a, (#_joydata)
      0016A4 CB 67                 5497 	bit	4, a
      0016A6 28 16                 5498 	jr	Z, 00102$
                                   5499 ;src/main.c:536: xSpeed += xDir + xDir + xDir;
      0016A8 21r92r00              5500 	ld	hl, #_xDir
      0016AB 7E                    5501 	ld	a, (hl)
      0016AC 87                    5502 	add	a, a
      0016AD 86                    5503 	add	a, (hl)
      0016AE 21r94r00              5504 	ld	hl, #_xSpeed
      0016B1 86                    5505 	add	a, (hl)
      0016B2 77                    5506 	ld	(hl), a
                                   5507 ;src/main.c:537: ySpeed += yDir + yDir + yDir;
      0016B3 21r93r00              5508 	ld	hl, #_yDir
      0016B6 7E                    5509 	ld	a, (hl)
      0016B7 87                    5510 	add	a, a
      0016B8 86                    5511 	add	a, (hl)
      0016B9 21r95r00              5512 	ld	hl, #_ySpeed
      0016BC 86                    5513 	add	a, (hl)
      0016BD 77                    5514 	ld	(hl), a
      0016BE                       5515 00102$:
                                   5516 ;src/main.c:541: xSpeed = clamp(xSpeed, -100, 100);
      0016BE 21r94r00              5517 	ld	hl, #_xSpeed
      0016C1 4E                    5518 	ld	c, (hl)
                                   5519 ;src/main.c:299: return (value < min) ? min : (value > max) ? max : value;
      0016C2 79                    5520 	ld	a, c
      0016C3 EE 80                 5521 	xor	a, #0x80
      0016C5 D6 1C                 5522 	sub	a, #0x1c
      0016C7 30 04                 5523 	jr	NC, 00165$
      0016C9 0E 9C                 5524 	ld	c, #0x9c
      0016CB 18 19                 5525 	jr	00166$
      0016CD                       5526 00165$:
      0016CD 59                    5527 	ld	e, c
      0016CE 3E 64                 5528 	ld	a,#0x64
      0016D0 57                    5529 	ld	d,a
      0016D1 91                    5530 	sub	a, c
      0016D2 CB 7B                 5531 	bit	7, e
      0016D4 28 07                 5532 	jr	Z, 00342$
      0016D6 CB 7A                 5533 	bit	7, d
      0016D8 20 08                 5534 	jr	NZ, 00343$
      0016DA BF                    5535 	cp	a, a
      0016DB 18 05                 5536 	jr	00343$
      0016DD                       5537 00342$:
      0016DD CB 7A                 5538 	bit	7, d
      0016DF 28 01                 5539 	jr	Z, 00343$
      0016E1 37                    5540 	scf
      0016E2                       5541 00343$:
      0016E2 30 02                 5542 	jr	NC, 00167$
      0016E4 0E 64                 5543 	ld	c, #0x64
      0016E6                       5544 00167$:
      0016E6                       5545 00166$:
      0016E6 21r94r00              5546 	ld	hl, #_xSpeed
      0016E9 71                    5547 	ld	(hl), c
                                   5548 ;src/main.c:542: ySpeed = clamp(ySpeed, -100, 100);
      0016EA 21r95r00              5549 	ld	hl, #_ySpeed
      0016ED 4E                    5550 	ld	c, (hl)
                                   5551 ;src/main.c:299: return (value < min) ? min : (value > max) ? max : value;
      0016EE 79                    5552 	ld	a, c
      0016EF EE 80                 5553 	xor	a, #0x80
      0016F1 D6 1C                 5554 	sub	a, #0x1c
      0016F3 30 04                 5555 	jr	NC, 00169$
      0016F5 0E 9C                 5556 	ld	c, #0x9c
      0016F7 18 19                 5557 	jr	00170$
      0016F9                       5558 00169$:
      0016F9 59                    5559 	ld	e, c
      0016FA 3E 64                 5560 	ld	a,#0x64
      0016FC 57                    5561 	ld	d,a
      0016FD 91                    5562 	sub	a, c
      0016FE CB 7B                 5563 	bit	7, e
      001700 28 07                 5564 	jr	Z, 00344$
      001702 CB 7A                 5565 	bit	7, d
      001704 20 08                 5566 	jr	NZ, 00345$
      001706 BF                    5567 	cp	a, a
      001707 18 05                 5568 	jr	00345$
      001709                       5569 00344$:
      001709 CB 7A                 5570 	bit	7, d
      00170B 28 01                 5571 	jr	Z, 00345$
      00170D 37                    5572 	scf
      00170E                       5573 00345$:
      00170E 30 02                 5574 	jr	NC, 00171$
      001710 0E 64                 5575 	ld	c, #0x64
      001712                       5576 00171$:
      001712                       5577 00170$:
      001712 21r95r00              5578 	ld	hl, #_ySpeed
      001715 71                    5579 	ld	(hl), c
                                   5580 ;src/main.c:544: xOverflow = 0;
      001716 AF                    5581 	xor	a, a
      001717 21rA0r00              5582 	ld	hl, #_xOverflow
      00171A 22                    5583 	ld	(hl+), a
      00171B 77                    5584 	ld	(hl), a
                                   5585 ;src/main.c:545: yOverflow = 0;
      00171C AF                    5586 	xor	a, a
      00171D 21rA2r00              5587 	ld	hl, #_yOverflow
      001720 22                    5588 	ld	(hl+), a
      001721 77                    5589 	ld	(hl), a
                                   5590 ;src/main.c:550: uint8_t xCollisionPoint = playerDrawX; 
      001722 21r9Ar00              5591 	ld	hl, #_playerDrawX
      001725 4E                    5592 	ld	c, (hl)
                                   5593 ;src/main.c:553: xCollisionPoint = playerDrawX +8; //right edge
      001726 46                    5594 	ld	b, (hl)
                                   5595 ;src/main.c:552: if (xSpeed > 0) {
      001727 21r94r00              5596 	ld	hl, #_xSpeed
      00172A 5E                    5597 	ld	e, (hl)
      00172B AF                    5598 	xor	a, a
      00172C 57                    5599 	ld	d, a
      00172D 96                    5600 	sub	a, (hl)
      00172E CB 7B                 5601 	bit	7, e
      001730 28 07                 5602 	jr	Z, 00346$
      001732 CB 7A                 5603 	bit	7, d
      001734 20 08                 5604 	jr	NZ, 00347$
      001736 BF                    5605 	cp	a, a
      001737 18 05                 5606 	jr	00347$
      001739                       5607 00346$:
      001739 CB 7A                 5608 	bit	7, d
      00173B 28 01                 5609 	jr	Z, 00347$
      00173D 37                    5610 	scf
      00173E                       5611 00347$:
      00173E 30 04                 5612 	jr	NC, 00104$
                                   5613 ;src/main.c:553: xCollisionPoint = playerDrawX +8; //right edge
      001740 78                    5614 	ld	a, b
      001741 C6 08                 5615 	add	a, #0x08
      001743 4F                    5616 	ld	c, a
      001744                       5617 00104$:
                                   5618 ;src/main.c:555: if (xSpeed < 0) {
      001744 FAr94r00              5619 	ld	a, (#_xSpeed)
      001747 CB 7F                 5620 	bit	7, a
      001749 28 04                 5621 	jr	Z, 00106$
                                   5622 ;src/main.c:556: xCollisionPoint = playerDrawX -8; //left edge
      00174B 78                    5623 	ld	a, b
      00174C C6 F8                 5624 	add	a, #0xf8
      00174E 4F                    5625 	ld	c, a
      00174F                       5626 00106$:
                                   5627 ;src/main.c:560: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      00174F 06 00                 5628 	ld	b, #0x00
      001751 79                    5629 	ld	a, c
      001752 21r9Cr00              5630 	ld	hl, #_bgX
      001755 86                    5631 	add	a, (hl)
      001756 23                    5632 	inc	hl
      001757 4F                    5633 	ld	c, a
      001758 78                    5634 	ld	a, b
      001759 8E                    5635 	adc	a, (hl)
      00175A 47                    5636 	ld	b, a
      00175B CB 28                 5637 	sra	b
      00175D CB 19                 5638 	rr	c
      00175F CB 28                 5639 	sra	b
      001761 CB 19                 5640 	rr	c
      001763 CB 28                 5641 	sra	b
      001765 CB 19                 5642 	rr	c
      001767 11 20 00              5643 	ld	de, #0x0020
      00176A D5                    5644 	push	de
      00176B C5                    5645 	push	bc
      00176C CDr00r00              5646 	call	__modsint
      00176F E8 04                 5647 	add	sp, #4
                                   5648 ;src/main.c:564: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001771 21r9Br00              5649 	ld	hl, #_playerDrawY
      001774 4E                    5650 	ld	c, (hl)
      001775 06 00                 5651 	ld	b, #0x00
      001777 79                    5652 	ld	a, c
      001778 21r9Er00              5653 	ld	hl, #_bgY
      00177B 86                    5654 	add	a, (hl)
      00177C 23                    5655 	inc	hl
      00177D 4F                    5656 	ld	c, a
      00177E 78                    5657 	ld	a, b
      00177F 8E                    5658 	adc	a, (hl)
      001780 47                    5659 	ld	b, a
      001781 CB 28                 5660 	sra	b
      001783 CB 19                 5661 	rr	c
      001785 CB 28                 5662 	sra	b
      001787 CB 19                 5663 	rr	c
      001789 CB 28                 5664 	sra	b
      00178B CB 19                 5665 	rr	c
      00178D D5                    5666 	push	de
      00178E 21 20 00              5667 	ld	hl, #0x0020
      001791 E5                    5668 	push	hl
      001792 C5                    5669 	push	bc
      001793 CDr00r00              5670 	call	__modsint
      001796 E8 04                 5671 	add	sp, #4
      001798 6B                    5672 	ld	l, e
                                   5673 ;	spillPairReg hl
                                   5674 ;	spillPairReg hl
                                   5675 ;	spillPairReg hl
                                   5676 ;	spillPairReg hl
      001799 D1                    5677 	pop	de
                                   5678 ;src/main.c:567: uint16_t ind = 32*bgindY + bgindX;
      00179A 26 00                 5679 	ld	h, #0x00
                                   5680 ;	spillPairReg hl
                                   5681 ;	spillPairReg hl
      00179C 29                    5682 	add	hl, hl
      00179D 29                    5683 	add	hl, hl
      00179E 29                    5684 	add	hl, hl
      00179F 29                    5685 	add	hl, hl
      0017A0 29                    5686 	add	hl, hl
      0017A1 19                    5687 	add	hl, de
      0017A2 5D                    5688 	ld	e, l
      0017A3 54                    5689 	ld	d, h
                                   5690 ;src/main.c:568: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      0017A4 0E 01                 5691 	ld	c, #0x01
                                   5692 ;src/main.c:569: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017A6 21r87r00              5693 	ld	hl, #_background1
      0017A9 19                    5694 	add	hl, de
      0017AA 46                    5695 	ld	b, (hl)
      0017AB 1E 00                 5696 	ld	e, #0x00
      0017AD                       5697 00158$:
      0017AD FAr48r08              5698 	ld	a, (#_BLANKSIZE)
      0017B0 F8 02                 5699 	ldhl	sp,	#2
      0017B2 77                    5700 	ld	(hl), a
      0017B3 7B                    5701 	ld	a, e
      0017B4 96                    5702 	sub	a, (hl)
      0017B5 30 11                 5703 	jr	NC, 00109$
                                   5704 ;src/main.c:570: if (background1[ind] == BLANK[i] ) {
      0017B7 21r49r08              5705 	ld	hl, #_BLANK
      0017BA 16 00                 5706 	ld	d, #0x00
      0017BC 19                    5707 	add	hl, de
      0017BD 56                    5708 	ld	d, (hl)
      0017BE 78                    5709 	ld	a, b
                                   5710 ;src/main.c:571: result = 0;
      0017BF 92                    5711 	sub	a,d
      0017C0 20 03                 5712 	jr	NZ, 00159$
      0017C2 4F                    5713 	ld	c,a
                                   5714 ;src/main.c:572: break;
      0017C3 18 03                 5715 	jr	00109$
      0017C5                       5716 00159$:
                                   5717 ;src/main.c:569: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017C5 1C                    5718 	inc	e
      0017C6 18 E5                 5719 	jr	00158$
      0017C8                       5720 00109$:
                                   5721 ;src/main.c:576: if (result == 0) {
      0017C8 79                    5722 	ld	a, c
      0017C9 B7                    5723 	or	a, a
      0017CA C2r98r18              5724 	jp	NZ, 00114$
                                   5725 ;src/main.c:577: playerX+=xSpeed;
      0017CD FAr94r00              5726 	ld	a, (#_xSpeed)
      0017D0 4F                    5727 	ld	c, a
      0017D1 07                    5728 	rlca
      0017D2 9F                    5729 	sbc	a, a
      0017D3 47                    5730 	ld	b, a
      0017D4 21r96r00              5731 	ld	hl, #_playerX
      0017D7 6E                    5732 	ld	l, (hl)
                                   5733 ;	spillPairReg hl
                                   5734 ;	spillPairReg hl
      0017D8 FAr97r00              5735 	ld	a, (_playerX + 1)
      0017DB 67                    5736 	ld	h, a
                                   5737 ;	spillPairReg hl
                                   5738 ;	spillPairReg hl
      0017DC 09                    5739 	add	hl, bc
      0017DD 4D                    5740 	ld	c, l
      0017DE 44                    5741 	ld	b, h
      0017DF 21r96r00              5742 	ld	hl, #_playerX
      0017E2 79                    5743 	ld	a, c
      0017E3 22                    5744 	ld	(hl+), a
                                   5745 ;src/main.c:579: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      0017E4 78                    5746 	ld	a, b
      0017E5 32                    5747 	ld	(hl-), a
      0017E6 2A                    5748 	ld	a, (hl+)
      0017E7 4F                    5749 	ld	c, a
      0017E8 46                    5750 	ld	b, (hl)
      0017E9 79                    5751 	ld	a, c
      0017EA D6 80                 5752 	sub	a, #0x80
      0017EC 78                    5753 	ld	a, b
      0017ED DE 08                 5754 	sbc	a, #0x08
      0017EF 30 05                 5755 	jr	NC, 00173$
      0017F1 01 80 08              5756 	ld	bc, #0x0880
      0017F4 18 0B                 5757 	jr	00174$
      0017F6                       5758 00173$:
      0017F6 3E 80                 5759 	ld	a, #0x80
      0017F8 B9                    5760 	cp	a, c
      0017F9 3E 0B                 5761 	ld	a, #0x0b
      0017FB 98                    5762 	sbc	a, b
      0017FC 30 03                 5763 	jr	NC, 00175$
      0017FE 01 80 0B              5764 	ld	bc, #0x0b80
      001801                       5765 00175$:
      001801                       5766 00174$:
      001801 59                    5767 	ld	e,c
      001802 50                    5768 	ld	d,b
                                   5769 ;src/main.c:581: xOverflow = (playerX - limitedPlayerX);
      001803 FAr96r00              5770 	ld	a, (#_playerX)
      001806 93                    5771 	sub	a, e
      001807 EArA0r00              5772 	ld	(#_xOverflow),a
      00180A FAr97r00              5773 	ld	a, (#_playerX + 1)
      00180D 9A                    5774 	sbc	a, d
      00180E 21rA1r00              5775 	ld	hl, #_xOverflow + 1
                                   5776 ;src/main.c:582: if (xOverflow >= 0) {
      001811 32                    5777 	ld	(hl-), a
      001812 6E                    5778 	ld	l, (hl)
                                   5779 ;	spillPairReg hl
                                   5780 ;	spillPairReg hl
      001813 FArA1r00              5781 	ld	a, (_xOverflow + 1)
                                   5782 ;	spillPairReg hl
                                   5783 ;	spillPairReg hl
      001816 CB 7F                 5784 	bit	7,a
      001818 20 22                 5785 	jr	NZ, 00111$
                                   5786 ;src/main.c:583: xOverflow = xOverflow >> 5;
      00181A 21rA1r00              5787 	ld	hl, #_xOverflow + 1
      00181D CB 2E                 5788 	sra	(hl)
      00181F 2B                    5789 	dec	hl
      001820 CB 1E                 5790 	rr	(hl)
      001822 23                    5791 	inc	hl
      001823 CB 2E                 5792 	sra	(hl)
      001825 2B                    5793 	dec	hl
      001826 CB 1E                 5794 	rr	(hl)
      001828 23                    5795 	inc	hl
      001829 CB 2E                 5796 	sra	(hl)
      00182B 2B                    5797 	dec	hl
      00182C CB 1E                 5798 	rr	(hl)
      00182E 23                    5799 	inc	hl
      00182F CB 2E                 5800 	sra	(hl)
      001831 2B                    5801 	dec	hl
      001832 CB 1E                 5802 	rr	(hl)
      001834 23                    5803 	inc	hl
      001835 CB 2E                 5804 	sra	(hl)
      001837 2B                    5805 	dec	hl
      001838 CB 1E                 5806 	rr	(hl)
      00183A 18 25                 5807 	jr	00112$
      00183C                       5808 00111$:
                                   5809 ;src/main.c:586: xOverflow = -((-xOverflow) >> 5);
      00183C AF                    5810 	xor	a, a
      00183D 21rA0r00              5811 	ld	hl, #_xOverflow
      001840 96                    5812 	sub	a, (hl)
      001841 23                    5813 	inc	hl
      001842 5F                    5814 	ld	e, a
      001843 9F                    5815 	sbc	a, a
      001844 96                    5816 	sub	a, (hl)
      001845 2B                    5817 	dec	hl
      001846 57                    5818 	ld	d, a
      001847 CB 2A                 5819 	sra	d
      001849 CB 1B                 5820 	rr	e
      00184B CB 2A                 5821 	sra	d
      00184D CB 1B                 5822 	rr	e
      00184F CB 2A                 5823 	sra	d
      001851 CB 1B                 5824 	rr	e
      001853 CB 2A                 5825 	sra	d
      001855 CB 1B                 5826 	rr	e
      001857 CB 2A                 5827 	sra	d
      001859 CB 1B                 5828 	rr	e
      00185B AF                    5829 	xor	a, a
      00185C 93                    5830 	sub	a, e
      00185D 22                    5831 	ld	(hl+), a
      00185E 9F                    5832 	sbc	a, a
      00185F 92                    5833 	sub	a, d
      001860 77                    5834 	ld	(hl), a
      001861                       5835 00112$:
                                   5836 ;src/main.c:588: bgX += xOverflow;
      001861 FAr9Cr00              5837 	ld	a, (#_bgX)
      001864 21rA0r00              5838 	ld	hl, #_xOverflow
      001867 86                    5839 	add	a, (hl)
      001868 21r9Cr00              5840 	ld	hl, #_bgX
      00186B 22                    5841 	ld	(hl+), a
      00186C 7E                    5842 	ld	a, (hl)
      00186D 21rA1r00              5843 	ld	hl, #_xOverflow + 1
      001870 8E                    5844 	adc	a, (hl)
      001871 EAr9Dr00              5845 	ld	(#_bgX + 1),a
                                   5846 ;src/main.c:589: playerX = limitedPlayerX;
      001874 21r96r00              5847 	ld	hl, #_playerX
      001877 79                    5848 	ld	a, c
      001878 22                    5849 	ld	(hl+), a
                                   5850 ;src/main.c:590: playerDrawX=playerX >> 5;
      001879 78                    5851 	ld	a, b
      00187A 32                    5852 	ld	(hl-), a
      00187B 2A                    5853 	ld	a, (hl+)
      00187C 4F                    5854 	ld	c, a
      00187D 46                    5855 	ld	b, (hl)
      00187E CB 38                 5856 	srl	b
      001880 CB 19                 5857 	rr	c
      001882 CB 38                 5858 	srl	b
      001884 CB 19                 5859 	rr	c
      001886 CB 38                 5860 	srl	b
      001888 CB 19                 5861 	rr	c
      00188A CB 38                 5862 	srl	b
      00188C CB 19                 5863 	rr	c
      00188E CB 38                 5864 	srl	b
      001890 CB 19                 5865 	rr	c
      001892 21r9Ar00              5866 	ld	hl, #_playerDrawX
      001895 71                    5867 	ld	(hl), c
      001896 18 05                 5868 	jr	00115$
      001898                       5869 00114$:
                                   5870 ;src/main.c:598: xSpeed = 0;
      001898 21r94r00              5871 	ld	hl, #_xSpeed
      00189B 36 00                 5872 	ld	(hl), #0x00
      00189D                       5873 00115$:
                                   5874 ;src/main.c:606: uint8_t yCollisionPoint = playerDrawY; 
      00189D FAr9Br00              5875 	ld	a, (#_playerDrawY)
      0018A0 F8 07                 5876 	ldhl	sp,	#7
      0018A2 77                    5877 	ld	(hl), a
                                   5878 ;src/main.c:609: yCollisionPoint = playerDrawY +8; //bottom edge
      0018A3 21r9Br00              5879 	ld	hl, #_playerDrawY
      0018A6 4E                    5880 	ld	c, (hl)
                                   5881 ;src/main.c:608: if (ySpeed > 0) {
      0018A7 21r95r00              5882 	ld	hl, #_ySpeed
      0018AA 5E                    5883 	ld	e, (hl)
      0018AB AF                    5884 	xor	a, a
      0018AC 57                    5885 	ld	d, a
      0018AD 96                    5886 	sub	a, (hl)
      0018AE CB 7B                 5887 	bit	7, e
      0018B0 28 07                 5888 	jr	Z, 00350$
      0018B2 CB 7A                 5889 	bit	7, d
      0018B4 20 08                 5890 	jr	NZ, 00351$
      0018B6 BF                    5891 	cp	a, a
      0018B7 18 05                 5892 	jr	00351$
      0018B9                       5893 00350$:
      0018B9 CB 7A                 5894 	bit	7, d
      0018BB 28 01                 5895 	jr	Z, 00351$
      0018BD 37                    5896 	scf
      0018BE                       5897 00351$:
      0018BE 30 06                 5898 	jr	NC, 00117$
                                   5899 ;src/main.c:609: yCollisionPoint = playerDrawY +8; //bottom edge
      0018C0 79                    5900 	ld	a, c
      0018C1 C6 08                 5901 	add	a, #0x08
      0018C3 F8 07                 5902 	ldhl	sp,	#7
      0018C5 77                    5903 	ld	(hl), a
      0018C6                       5904 00117$:
                                   5905 ;src/main.c:611: if (ySpeed < 0) {
      0018C6 FAr95r00              5906 	ld	a, (#_ySpeed)
      0018C9 CB 7F                 5907 	bit	7, a
      0018CB 28 06                 5908 	jr	Z, 00119$
                                   5909 ;src/main.c:612: yCollisionPoint = playerDrawY -8; //top edge, 
      0018CD 79                    5910 	ld	a, c
      0018CE C6 F8                 5911 	add	a, #0xf8
      0018D0 F8 07                 5912 	ldhl	sp,	#7
      0018D2 77                    5913 	ld	(hl), a
      0018D3                       5914 00119$:
                                   5915 ;src/main.c:616: bgindX = ((playerDrawX + bgX) >> 3)%32;
      0018D3 FAr9Ar00              5916 	ld	a, (#_playerDrawX)
      0018D6 0E 00                 5917 	ld	c, #0x00
      0018D8 F8 03                 5918 	ldhl	sp,	#3
      0018DA 22                    5919 	ld	(hl+), a
      0018DB 79                    5920 	ld	a, c
      0018DC 32                    5921 	ld	(hl-), a
      0018DD 2A                    5922 	ld	a, (hl+)
      0018DE 5F                    5923 	ld	e, a
      0018DF 56                    5924 	ld	d, (hl)
      0018E0 21r9Cr00              5925 	ld	hl, #_bgX
      0018E3 2A                    5926 	ld	a,	(hl+)
      0018E4 66                    5927 	ld	h, (hl)
      0018E5 6F                    5928 	ld	l, a
      0018E6 19                    5929 	add	hl, de
      0018E7 E5                    5930 	push	hl
      0018E8 7D                    5931 	ld	a, l
      0018E9 F8 07                 5932 	ldhl	sp,	#7
      0018EB 77                    5933 	ld	(hl), a
      0018EC E1                    5934 	pop	hl
      0018ED 7C                    5935 	ld	a, h
      0018EE F8 06                 5936 	ldhl	sp,	#6
      0018F0 77                    5937 	ld	(hl), a
      0018F1 CB 2E                 5938 	sra	(hl)
      0018F3 2B                    5939 	dec	hl
      0018F4 CB 1E                 5940 	rr	(hl)
      0018F6 23                    5941 	inc	hl
      0018F7 CB 2E                 5942 	sra	(hl)
      0018F9 2B                    5943 	dec	hl
      0018FA CB 1E                 5944 	rr	(hl)
      0018FC 23                    5945 	inc	hl
      0018FD CB 2E                 5946 	sra	(hl)
      0018FF 2B                    5947 	dec	hl
      001900 CB 1E                 5948 	rr	(hl)
      001902 11 20 00              5949 	ld	de, #0x0020
      001905 D5                    5950 	push	de
      001906 2A                    5951 	ld	a, (hl+)
      001907 5F                    5952 	ld	e, a
      001908 56                    5953 	ld	d, (hl)
      001909 D5                    5954 	push	de
      00190A CDr00r00              5955 	call	__modsint
      00190D E8 04                 5956 	add	sp, #4
      00190F F8 05                 5957 	ldhl	sp,	#5
      001911 7B                    5958 	ld	a, e
      001912 22                    5959 	ld	(hl+), a
      001913 72                    5960 	ld	(hl), d
      001914 F8 05                 5961 	ldhl	sp,	#5
      001916 7E                    5962 	ld	a, (hl)
      001917 F8 00                 5963 	ldhl	sp,	#0
      001919 77                    5964 	ld	(hl), a
      00191A F8 06                 5965 	ldhl	sp,	#6
      00191C 7E                    5966 	ld	a, (hl)
      00191D F8 01                 5967 	ldhl	sp,	#1
      00191F 77                    5968 	ld	(hl), a
                                   5969 ;src/main.c:619: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001920 F8 07                 5970 	ldhl	sp,	#7
      001922 3A                    5971 	ld	a, (hl-)
      001923 22                    5972 	ld	(hl+), a
      001924 AF                    5973 	xor	a, a
      001925 32                    5974 	ld	(hl-), a
      001926 3A                    5975 	ld	a, (hl-)
      001927 2B                    5976 	dec	hl
      001928 77                    5977 	ld	(hl), a
      001929 F8 07                 5978 	ldhl	sp,	#7
      00192B 3A                    5979 	ld	a, (hl-)
      00192C 2B                    5980 	dec	hl
      00192D 32                    5981 	ld	(hl-), a
      00192E 2A                    5982 	ld	a, (hl+)
      00192F 5F                    5983 	ld	e, a
      001930 56                    5984 	ld	d, (hl)
      001931 21r9Er00              5985 	ld	hl, #_bgY
      001934 2A                    5986 	ld	a,	(hl+)
      001935 66                    5987 	ld	h, (hl)
      001936 6F                    5988 	ld	l, a
      001937 19                    5989 	add	hl, de
      001938 E5                    5990 	push	hl
      001939 7D                    5991 	ld	a, l
      00193A F8 08                 5992 	ldhl	sp,	#8
      00193C 77                    5993 	ld	(hl), a
      00193D E1                    5994 	pop	hl
      00193E 7C                    5995 	ld	a, h
      00193F F8 07                 5996 	ldhl	sp,	#7
      001941 77                    5997 	ld	(hl), a
      001942 CB 2E                 5998 	sra	(hl)
      001944 2B                    5999 	dec	hl
      001945 CB 1E                 6000 	rr	(hl)
      001947 23                    6001 	inc	hl
      001948 CB 2E                 6002 	sra	(hl)
      00194A 2B                    6003 	dec	hl
      00194B CB 1E                 6004 	rr	(hl)
      00194D 23                    6005 	inc	hl
      00194E CB 2E                 6006 	sra	(hl)
      001950 2B                    6007 	dec	hl
      001951 CB 1E                 6008 	rr	(hl)
      001953 11 20 00              6009 	ld	de, #0x0020
      001956 D5                    6010 	push	de
      001957 2A                    6011 	ld	a, (hl+)
      001958 5F                    6012 	ld	e, a
      001959 56                    6013 	ld	d, (hl)
      00195A D5                    6014 	push	de
      00195B CDr00r00              6015 	call	__modsint
      00195E E8 04                 6016 	add	sp, #4
      001960 F8 06                 6017 	ldhl	sp,	#6
      001962 7B                    6018 	ld	a, e
      001963 22                    6019 	ld	(hl+), a
      001964 72                    6020 	ld	(hl), d
      001965 F8 06                 6021 	ldhl	sp,	#6
      001967 2A                    6022 	ld	a, (hl+)
      001968 77                    6023 	ld	(hl), a
                                   6024 ;src/main.c:622: ind = 32*bgindY + bgindX;
      001969 3A                    6025 	ld	a, (hl-)
      00196A 22                    6026 	ld	(hl+), a
      00196B 36 00                 6027 	ld	(hl), #0x00
      00196D 3E 05                 6028 	ld	a, #0x05
      00196F                       6029 00352$:
      00196F F8 06                 6030 	ldhl	sp,	#6
      001971 CB 26                 6031 	sla	(hl)
      001973 23                    6032 	inc	hl
      001974 CB 16                 6033 	rl	(hl)
      001976 3D                    6034 	dec	a
      001977 20 F6                 6035 	jr	NZ, 00352$
      001979 2B                    6036 	dec	hl
      00197A 3A                    6037 	ld	a, (hl-)
      00197B 2B                    6038 	dec	hl
      00197C 77                    6039 	ld	(hl), a
      00197D F8 07                 6040 	ldhl	sp,	#7
      00197F 3A                    6041 	ld	a, (hl-)
      001980 2B                    6042 	dec	hl
      001981 77                    6043 	ld	(hl), a
      001982 D1                    6044 	pop	de
      001983 D5                    6045 	push	de
      001984 3A                    6046 	ld	a, (hl-)
      001985 6E                    6047 	ld	l, (hl)
      001986 67                    6048 	ld	h, a
      001987 19                    6049 	add	hl, de
      001988 E5                    6050 	push	hl
      001989 7D                    6051 	ld	a, l
      00198A F8 08                 6052 	ldhl	sp,	#8
      00198C 77                    6053 	ld	(hl), a
      00198D E1                    6054 	pop	hl
      00198E 7C                    6055 	ld	a, h
      00198F F8 07                 6056 	ldhl	sp,	#7
      001991 77                    6057 	ld	(hl), a
                                   6058 ;src/main.c:623: result = 1;
      001992 F8 03                 6059 	ldhl	sp,	#3
      001994 36 01                 6060 	ld	(hl), #0x01
                                   6061 ;src/main.c:624: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001996 F8 06                 6062 	ldhl	sp,#6
      001998 2A                    6063 	ld	a, (hl+)
      001999 5F                    6064 	ld	e, a
      00199A 56                    6065 	ld	d, (hl)
      00199B 21r87r00              6066 	ld	hl, #_background1
      00199E 19                    6067 	add	hl, de
      00199F 4D                    6068 	ld	c, l
      0019A0 44                    6069 	ld	b, h
      0019A1 0A                    6070 	ld	a, (bc)
      0019A2 F8 04                 6071 	ldhl	sp,	#4
      0019A4 77                    6072 	ld	(hl), a
      0019A5 F8 07                 6073 	ldhl	sp,	#7
      0019A7 36 00                 6074 	ld	(hl), #0x00
      0019A9                       6075 00161$:
      0019A9 F8 07                 6076 	ldhl	sp,	#7
      0019AB 7E                    6077 	ld	a, (hl)
      0019AC F8 02                 6078 	ldhl	sp,	#2
      0019AE 96                    6079 	sub	a, (hl)
      0019AF 30 29                 6080 	jr	NC, 00122$
                                   6081 ;src/main.c:625: if (background1[ind] == BLANK[j] ) {
      0019B1 11r49r08              6082 	ld	de, #_BLANK
      0019B4 F8 07                 6083 	ldhl	sp,	#7
      0019B6 6E                    6084 	ld	l, (hl)
      0019B7 26 00                 6085 	ld	h, #0x00
      0019B9 19                    6086 	add	hl, de
      0019BA E5                    6087 	push	hl
      0019BB 7D                    6088 	ld	a, l
      0019BC F8 07                 6089 	ldhl	sp,	#7
      0019BE 77                    6090 	ld	(hl), a
      0019BF E1                    6091 	pop	hl
      0019C0 7C                    6092 	ld	a, h
      0019C1 F8 06                 6093 	ldhl	sp,	#6
      0019C3 32                    6094 	ld	(hl-), a
      0019C4 2A                    6095 	ld	a, (hl+)
      0019C5 5F                    6096 	ld	e, a
      0019C6 3A                    6097 	ld	a, (hl-)
      0019C7 2B                    6098 	dec	hl
      0019C8 57                    6099 	ld	d, a
      0019C9 1A                    6100 	ld	a, (de)
      0019CA 4F                    6101 	ld	c, a
      0019CB 7E                    6102 	ld	a, (hl)
      0019CC 91                    6103 	sub	a, c
      0019CD 20 06                 6104 	jr	NZ, 00162$
                                   6105 ;src/main.c:626: result = 0;
      0019CF F8 03                 6106 	ldhl	sp,	#3
      0019D1 36 00                 6107 	ld	(hl), #0x00
                                   6108 ;src/main.c:627: break;
      0019D3 18 05                 6109 	jr	00122$
      0019D5                       6110 00162$:
                                   6111 ;src/main.c:624: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0019D5 F8 07                 6112 	ldhl	sp,	#7
      0019D7 34                    6113 	inc	(hl)
      0019D8 18 CF                 6114 	jr	00161$
      0019DA                       6115 00122$:
                                   6116 ;src/main.c:631: if (result == 0) {
      0019DA F8 03                 6117 	ldhl	sp,	#3
      0019DC 7E                    6118 	ld	a, (hl)
      0019DD B7                    6119 	or	a, a
      0019DE C2rA8r1A              6120 	jp	NZ, 00127$
                                   6121 ;src/main.c:632: playerY += ySpeed;
      0019E1 FAr95r00              6122 	ld	a, (#_ySpeed)
      0019E4 4F                    6123 	ld	c, a
      0019E5 07                    6124 	rlca
      0019E6 9F                    6125 	sbc	a, a
      0019E7 21r98r00              6126 	ld	hl, #_playerY
      0019EA 5E                    6127 	ld	e, (hl)
      0019EB 23                    6128 	inc	hl
      0019EC 56                    6129 	ld	d, (hl)
      0019ED 2B                    6130 	dec	hl
      0019EE 47                    6131 	ld	b, a
      0019EF 79                    6132 	ld	a, c
      0019F0 83                    6133 	add	a, e
      0019F1 4F                    6134 	ld	c, a
      0019F2 78                    6135 	ld	a, b
      0019F3 8A                    6136 	adc	a, d
      0019F4 47                    6137 	ld	b, a
      0019F5 79                    6138 	ld	a, c
      0019F6 22                    6139 	ld	(hl+), a
                                   6140 ;src/main.c:634: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      0019F7 78                    6141 	ld	a, b
      0019F8 32                    6142 	ld	(hl-), a
      0019F9 2A                    6143 	ld	a, (hl+)
      0019FA 5F                    6144 	ld	e, a
      0019FB 56                    6145 	ld	d, (hl)
      0019FC 7A                    6146 	ld	a, d
      0019FD D6 06                 6147 	sub	a, #0x06
      0019FF 30 05                 6148 	jr	NC, 00177$
      001A01 11 00 06              6149 	ld	de, #0x0600
      001A04 18 0B                 6150 	jr	00178$
      001A06                       6151 00177$:
      001A06 3E C0                 6152 	ld	a, #0xc0
      001A08 BB                    6153 	cp	a, e
      001A09 3E 09                 6154 	ld	a, #0x09
      001A0B 9A                    6155 	sbc	a, d
      001A0C 30 03                 6156 	jr	NC, 00179$
      001A0E 11 C0 09              6157 	ld	de, #0x09c0
      001A11                       6158 00179$:
      001A11                       6159 00178$:
      001A11 4B                    6160 	ld	c, e
      001A12 42                    6161 	ld	b, d
                                   6162 ;src/main.c:636: yOverflow = (playerY - limitedPlayerY);
      001A13 FAr98r00              6163 	ld	a, (#_playerY)
      001A16 93                    6164 	sub	a, e
      001A17 EArA2r00              6165 	ld	(#_yOverflow),a
      001A1A FAr99r00              6166 	ld	a, (#_playerY + 1)
      001A1D 9A                    6167 	sbc	a, d
      001A1E 21rA3r00              6168 	ld	hl, #_yOverflow + 1
                                   6169 ;src/main.c:637: if (yOverflow >= 0) {
      001A21 32                    6170 	ld	(hl-), a
      001A22 6E                    6171 	ld	l, (hl)
                                   6172 ;	spillPairReg hl
                                   6173 ;	spillPairReg hl
      001A23 FArA3r00              6174 	ld	a, (_yOverflow + 1)
                                   6175 ;	spillPairReg hl
                                   6176 ;	spillPairReg hl
      001A26 CB 7F                 6177 	bit	7,a
      001A28 20 22                 6178 	jr	NZ, 00124$
                                   6179 ;src/main.c:638: yOverflow = yOverflow >> 5;
      001A2A 21rA3r00              6180 	ld	hl, #_yOverflow + 1
      001A2D CB 2E                 6181 	sra	(hl)
      001A2F 2B                    6182 	dec	hl
      001A30 CB 1E                 6183 	rr	(hl)
      001A32 23                    6184 	inc	hl
      001A33 CB 2E                 6185 	sra	(hl)
      001A35 2B                    6186 	dec	hl
      001A36 CB 1E                 6187 	rr	(hl)
      001A38 23                    6188 	inc	hl
      001A39 CB 2E                 6189 	sra	(hl)
      001A3B 2B                    6190 	dec	hl
      001A3C CB 1E                 6191 	rr	(hl)
      001A3E 23                    6192 	inc	hl
      001A3F CB 2E                 6193 	sra	(hl)
      001A41 2B                    6194 	dec	hl
      001A42 CB 1E                 6195 	rr	(hl)
      001A44 23                    6196 	inc	hl
      001A45 CB 2E                 6197 	sra	(hl)
      001A47 2B                    6198 	dec	hl
      001A48 CB 1E                 6199 	rr	(hl)
      001A4A 18 25                 6200 	jr	00125$
      001A4C                       6201 00124$:
                                   6202 ;src/main.c:641: yOverflow = -((-yOverflow) >> 5);
      001A4C AF                    6203 	xor	a, a
      001A4D 21rA2r00              6204 	ld	hl, #_yOverflow
      001A50 96                    6205 	sub	a, (hl)
      001A51 23                    6206 	inc	hl
      001A52 5F                    6207 	ld	e, a
      001A53 9F                    6208 	sbc	a, a
      001A54 96                    6209 	sub	a, (hl)
      001A55 2B                    6210 	dec	hl
      001A56 57                    6211 	ld	d, a
      001A57 CB 2A                 6212 	sra	d
      001A59 CB 1B                 6213 	rr	e
      001A5B CB 2A                 6214 	sra	d
      001A5D CB 1B                 6215 	rr	e
      001A5F CB 2A                 6216 	sra	d
      001A61 CB 1B                 6217 	rr	e
      001A63 CB 2A                 6218 	sra	d
      001A65 CB 1B                 6219 	rr	e
      001A67 CB 2A                 6220 	sra	d
      001A69 CB 1B                 6221 	rr	e
      001A6B AF                    6222 	xor	a, a
      001A6C 93                    6223 	sub	a, e
      001A6D 22                    6224 	ld	(hl+), a
      001A6E 9F                    6225 	sbc	a, a
      001A6F 92                    6226 	sub	a, d
      001A70 77                    6227 	ld	(hl), a
      001A71                       6228 00125$:
                                   6229 ;src/main.c:643: bgY += yOverflow;
      001A71 FAr9Er00              6230 	ld	a, (#_bgY)
      001A74 21rA2r00              6231 	ld	hl, #_yOverflow
      001A77 86                    6232 	add	a, (hl)
      001A78 21r9Er00              6233 	ld	hl, #_bgY
      001A7B 22                    6234 	ld	(hl+), a
      001A7C 7E                    6235 	ld	a, (hl)
      001A7D 21rA3r00              6236 	ld	hl, #_yOverflow + 1
      001A80 8E                    6237 	adc	a, (hl)
      001A81 EAr9Fr00              6238 	ld	(#_bgY + 1),a
                                   6239 ;src/main.c:644: playerY = limitedPlayerY;
      001A84 21r98r00              6240 	ld	hl, #_playerY
      001A87 79                    6241 	ld	a, c
      001A88 22                    6242 	ld	(hl+), a
                                   6243 ;src/main.c:645: playerDrawY=playerY >> 5;
      001A89 78                    6244 	ld	a, b
      001A8A 32                    6245 	ld	(hl-), a
      001A8B 2A                    6246 	ld	a, (hl+)
      001A8C 4F                    6247 	ld	c, a
      001A8D 46                    6248 	ld	b, (hl)
      001A8E CB 38                 6249 	srl	b
      001A90 CB 19                 6250 	rr	c
      001A92 CB 38                 6251 	srl	b
      001A94 CB 19                 6252 	rr	c
      001A96 CB 38                 6253 	srl	b
      001A98 CB 19                 6254 	rr	c
      001A9A CB 38                 6255 	srl	b
      001A9C CB 19                 6256 	rr	c
      001A9E CB 38                 6257 	srl	b
      001AA0 CB 19                 6258 	rr	c
      001AA2 21r9Br00              6259 	ld	hl, #_playerDrawY
      001AA5 71                    6260 	ld	(hl), c
      001AA6 18 05                 6261 	jr	00128$
      001AA8                       6262 00127$:
                                   6263 ;src/main.c:650: ySpeed = 0;
      001AA8 21r95r00              6264 	ld	hl, #_ySpeed
      001AAB 36 00                 6265 	ld	(hl), #0x00
      001AAD                       6266 00128$:
                                   6267 ;src/main.c:550: uint8_t xCollisionPoint = playerDrawX; 
      001AAD FAr9Ar00              6268 	ld	a, (#_playerDrawX)
      001AB0 F8 07                 6269 	ldhl	sp,	#7
      001AB2 77                    6270 	ld	(hl), a
                                   6271 ;src/main.c:609: yCollisionPoint = playerDrawY +8; //bottom edge
      001AB3 FAr9Br00              6272 	ld	a, (#_playerDrawY)
      001AB6 C6 08                 6273 	add	a, #0x08
      001AB8 F8 06                 6274 	ldhl	sp,	#6
      001ABA 77                    6275 	ld	(hl), a
                                   6276 ;src/main.c:653: if (xDir >= 0) {
      001ABB FAr92r00              6277 	ld	a, (#_xDir)
      001ABE CB 7F                 6278 	bit	7, a
      001AC0 20 2A                 6279 	jr	NZ, 00130$
                                   6280 ;src/main.c:654: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   6281 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6282 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001AC2 11r00r00              6283 	ld	de, #_shadow_OAM
      001AC5 F8 06                 6284 	ldhl	sp,	#6
      001AC7 2A                    6285 	ld	a, (hl+)
      001AC8 12                    6286 	ld	(de), a
      001AC9 11r01r00              6287 	ld	de, #(_shadow_OAM + 1)
      001ACC 7E                    6288 	ld	a, (hl)
      001ACD 12                    6289 	ld	(de), a
                                   6290 ;src/main.c:656: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001ACE FAr9Br00              6291 	ld	a, (#_playerDrawY)
      001AD1 F8 07                 6292 	ldhl	sp,	#7
      001AD3 77                    6293 	ld	(hl), a
      001AD4 3A                    6294 	ld	a, (hl-)
      001AD5 C6 08                 6295 	add	a, #0x08
      001AD7 77                    6296 	ld	(hl), a
      001AD8 FAr9Ar00              6297 	ld	a, (#_playerDrawX)
      001ADB C6 08                 6298 	add	a, #0x08
      001ADD F8 07                 6299 	ldhl	sp,	#7
                                   6300 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6301 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001ADF 32                    6302 	ld	(hl-), a
      001AE0 11r04r00              6303 	ld	de, #(_shadow_OAM + 4)
      001AE3 2A                    6304 	ld	a, (hl+)
      001AE4 12                    6305 	ld	(de), a
      001AE5 11r05r00              6306 	ld	de, #(_shadow_OAM + 5)
      001AE8 7E                    6307 	ld	a, (hl)
      001AE9 12                    6308 	ld	(de), a
                                   6309 ;src/main.c:656: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001AEA 18 28                 6310 	jr	00131$
      001AEC                       6311 00130$:
                                   6312 ;src/main.c:659: move_sprite(1, playerDrawX , playerDrawY +8);
                                   6313 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001AEC 01r04r00              6314 	ld	bc, #(_shadow_OAM + 4)
                                   6315 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001AEF F8 06                 6316 	ldhl	sp,	#6
      001AF1 2A                    6317 	ld	a, (hl+)
      001AF2 02                    6318 	ld	(bc), a
      001AF3 03                    6319 	inc	bc
      001AF4 7E                    6320 	ld	a, (hl)
      001AF5 02                    6321 	ld	(bc), a
                                   6322 ;src/main.c:661: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001AF6 FAr9Br00              6323 	ld	a, (#_playerDrawY)
      001AF9 F8 07                 6324 	ldhl	sp,	#7
      001AFB 77                    6325 	ld	(hl), a
      001AFC 3A                    6326 	ld	a, (hl-)
      001AFD C6 08                 6327 	add	a, #0x08
      001AFF 77                    6328 	ld	(hl), a
      001B00 FAr9Ar00              6329 	ld	a, (#_playerDrawX)
      001B03 F8 07                 6330 	ldhl	sp,	#7
      001B05 77                    6331 	ld	(hl), a
      001B06 7E                    6332 	ld	a, (hl)
      001B07 C6 08                 6333 	add	a, #0x08
                                   6334 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6335 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B09 32                    6336 	ld	(hl-), a
      001B0A 11r00r00              6337 	ld	de, #_shadow_OAM
      001B0D 2A                    6338 	ld	a, (hl+)
      001B0E 12                    6339 	ld	(de), a
      001B0F 11r01r00              6340 	ld	de, #(_shadow_OAM + 1)
      001B12 7E                    6341 	ld	a, (hl)
      001B13 12                    6342 	ld	(de), a
                                   6343 ;src/main.c:661: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B14                       6344 00131$:
                                   6345 ;src/main.c:666: if (bgX >= 256) {
      001B14 21r9Cr00              6346 	ld	hl, #_bgX
      001B17 2A                    6347 	ld	a, (hl+)
      001B18 4F                    6348 	ld	c, a
      001B19 46                    6349 	ld	b, (hl)
      001B1A 78                    6350 	ld	a, b
      001B1B EE 80                 6351 	xor	a, #0x80
      001B1D D6 81                 6352 	sub	a, #0x81
      001B1F 38 0F                 6353 	jr	C, 00133$
                                   6354 ;src/main.c:667: bgX = bgX % 256;
      001B21 AF                    6355 	xor	a, a
      001B22 3C                    6356 	inc	a
      001B23 F5                    6357 	push	af
      001B24 C5                    6358 	push	bc
      001B25 CDr00r00              6359 	call	__modsint
      001B28 E8 04                 6360 	add	sp, #4
      001B2A 21r9Cr00              6361 	ld	hl, #_bgX
      001B2D 7B                    6362 	ld	a, e
      001B2E 22                    6363 	ld	(hl+), a
      001B2F 72                    6364 	ld	(hl), d
      001B30                       6365 00133$:
                                   6366 ;src/main.c:669: if (bgX < 0) {
      001B30 21r9Cr00              6367 	ld	hl, #_bgX
      001B33 2A                    6368 	ld	a, (hl+)
      001B34 4F                    6369 	ld	c, a
      001B35 46                    6370 	ld	b, (hl)
      001B36 CB 78                 6371 	bit	7, b
      001B38 28 15                 6372 	jr	Z, 00135$
                                   6373 ;src/main.c:670: bgX = 255 - (bgX % 256);
      001B3A AF                    6374 	xor	a, a
      001B3B 3C                    6375 	inc	a
      001B3C F5                    6376 	push	af
      001B3D C5                    6377 	push	bc
      001B3E CDr00r00              6378 	call	__modsint
      001B41 E8 04                 6379 	add	sp, #4
      001B43 3E FF                 6380 	ld	a, #0xff
      001B45 93                    6381 	sub	a, e
      001B46 4F                    6382 	ld	c, a
      001B47 9F                    6383 	sbc	a, a
      001B48 92                    6384 	sub	a, d
      001B49 21r9Cr00              6385 	ld	hl, #_bgX
      001B4C 71                    6386 	ld	(hl), c
      001B4D 23                    6387 	inc	hl
      001B4E 77                    6388 	ld	(hl), a
      001B4F                       6389 00135$:
                                   6390 ;src/main.c:672: if (bgY >= 256) {
      001B4F 21r9Er00              6391 	ld	hl, #_bgY
      001B52 2A                    6392 	ld	a, (hl+)
      001B53 4F                    6393 	ld	c, a
      001B54 46                    6394 	ld	b, (hl)
      001B55 78                    6395 	ld	a, b
      001B56 EE 80                 6396 	xor	a, #0x80
      001B58 D6 81                 6397 	sub	a, #0x81
      001B5A 38 0F                 6398 	jr	C, 00137$
                                   6399 ;src/main.c:673: bgY = bgY % 256;
      001B5C AF                    6400 	xor	a, a
      001B5D 3C                    6401 	inc	a
      001B5E F5                    6402 	push	af
      001B5F C5                    6403 	push	bc
      001B60 CDr00r00              6404 	call	__modsint
      001B63 E8 04                 6405 	add	sp, #4
      001B65 21r9Er00              6406 	ld	hl, #_bgY
      001B68 7B                    6407 	ld	a, e
      001B69 22                    6408 	ld	(hl+), a
      001B6A 72                    6409 	ld	(hl), d
      001B6B                       6410 00137$:
                                   6411 ;src/main.c:675: if (bgY < 0) {
      001B6B 21r9Er00              6412 	ld	hl, #_bgY
      001B6E 2A                    6413 	ld	a, (hl+)
      001B6F 4F                    6414 	ld	c, a
      001B70 46                    6415 	ld	b, (hl)
      001B71 CB 78                 6416 	bit	7, b
      001B73 28 15                 6417 	jr	Z, 00139$
                                   6418 ;src/main.c:676: bgY = 255 - (bgY % 256);
      001B75 AF                    6419 	xor	a, a
      001B76 3C                    6420 	inc	a
      001B77 F5                    6421 	push	af
      001B78 C5                    6422 	push	bc
      001B79 CDr00r00              6423 	call	__modsint
      001B7C E8 04                 6424 	add	sp, #4
      001B7E 3E FF                 6425 	ld	a, #0xff
      001B80 93                    6426 	sub	a, e
      001B81 4F                    6427 	ld	c, a
      001B82 9F                    6428 	sbc	a, a
      001B83 92                    6429 	sub	a, d
      001B84 21r9Er00              6430 	ld	hl, #_bgY
      001B87 71                    6431 	ld	(hl), c
      001B88 23                    6432 	inc	hl
      001B89 77                    6433 	ld	(hl), a
      001B8A                       6434 00139$:
                                   6435 ;src/main.c:679: move_bkg(bgX, bgY);
      001B8A 21r9Er00              6436 	ld	hl, #_bgY
      001B8D 4E                    6437 	ld	c, (hl)
      001B8E FAr9Cr00              6438 	ld	a, (#_bgX)
      001B91 E0r00                 6439 	ldh	(_SCX_REG + 0), a
                                   6440 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001B93 79                    6441 	ld	a, c
      001B94 E0r00                 6442 	ldh	(_SCY_REG + 0), a
                                   6443 ;src/main.c:682: if (ySpeed > 0) ySpeed--;
      001B96 21r95r00              6444 	ld	hl, #_ySpeed
      001B99 5E                    6445 	ld	e, (hl)
      001B9A AF                    6446 	xor	a, a
      001B9B 57                    6447 	ld	d, a
      001B9C 96                    6448 	sub	a, (hl)
      001B9D CB 7B                 6449 	bit	7, e
      001B9F 28 07                 6450 	jr	Z, 00355$
      001BA1 CB 7A                 6451 	bit	7, d
      001BA3 20 08                 6452 	jr	NZ, 00356$
      001BA5 BF                    6453 	cp	a, a
      001BA6 18 05                 6454 	jr	00356$
      001BA8                       6455 00355$:
      001BA8 CB 7A                 6456 	bit	7, d
      001BAA 28 01                 6457 	jr	Z, 00356$
      001BAC 37                    6458 	scf
      001BAD                       6459 00356$:
      001BAD 30 04                 6460 	jr	NC, 00141$
      001BAF 21r95r00              6461 	ld	hl, #_ySpeed
      001BB2 35                    6462 	dec	(hl)
      001BB3                       6463 00141$:
                                   6464 ;src/main.c:683: if (ySpeed < 0) ySpeed++;
      001BB3 21r95r00              6465 	ld	hl, #_ySpeed
      001BB6 CB 7E                 6466 	bit	7, (hl)
      001BB8 28 01                 6467 	jr	Z, 00143$
      001BBA 34                    6468 	inc	(hl)
      001BBB                       6469 00143$:
                                   6470 ;src/main.c:684: if (xSpeed > 0) xSpeed--;
      001BBB 21r94r00              6471 	ld	hl, #_xSpeed
      001BBE 5E                    6472 	ld	e, (hl)
      001BBF AF                    6473 	xor	a, a
      001BC0 57                    6474 	ld	d, a
      001BC1 96                    6475 	sub	a, (hl)
      001BC2 CB 7B                 6476 	bit	7, e
      001BC4 28 07                 6477 	jr	Z, 00357$
      001BC6 CB 7A                 6478 	bit	7, d
      001BC8 20 08                 6479 	jr	NZ, 00358$
      001BCA BF                    6480 	cp	a, a
      001BCB 18 05                 6481 	jr	00358$
      001BCD                       6482 00357$:
      001BCD CB 7A                 6483 	bit	7, d
      001BCF 28 01                 6484 	jr	Z, 00358$
      001BD1 37                    6485 	scf
      001BD2                       6486 00358$:
      001BD2 30 04                 6487 	jr	NC, 00145$
      001BD4 21r94r00              6488 	ld	hl, #_xSpeed
      001BD7 35                    6489 	dec	(hl)
      001BD8                       6490 00145$:
                                   6491 ;src/main.c:685: if (xSpeed < 0) xSpeed++;
      001BD8 21r94r00              6492 	ld	hl, #_xSpeed
      001BDB CB 7E                 6493 	bit	7, (hl)
      001BDD 28 01                 6494 	jr	Z, 00163$
      001BDF 34                    6495 	inc	(hl)
      001BE0                       6496 00163$:
                                   6497 ;src/main.c:689: }
      001BE0 E8 08                 6498 	add	sp, #8
      001BE2 C9                    6499 	ret
                                   6500 ;src/main.c:691: void takeDamage(int16_t amount) {
                                   6501 ;	---------------------------------
                                   6502 ; Function takeDamage
                                   6503 ; ---------------------------------
      001BE3                       6504 _takeDamage::
      001BE3 3B                    6505 	dec	sp
                                   6506 ;src/main.c:692: if (amount > shield) {
      001BE4 FArDEr00              6507 	ld	a, (#_shield)
      001BE7 4F                    6508 	ld	c, a
      001BE8 07                    6509 	rlca
      001BE9 9F                    6510 	sbc	a, a
      001BEA 47                    6511 	ld	b, a
                                   6512 ;src/main.c:694: hull -= (amount - shield);
      001BEB F8 03                 6513 	ldhl	sp,	#3
      001BED 7E                    6514 	ld	a, (hl)
      001BEE F8 00                 6515 	ldhl	sp,	#0
      001BF0 77                    6516 	ld	(hl), a
                                   6517 ;src/main.c:692: if (amount > shield) {
      001BF1 F8 03                 6518 	ldhl	sp,	#3
      001BF3 79                    6519 	ld	a, c
      001BF4 96                    6520 	sub	a, (hl)
      001BF5 23                    6521 	inc	hl
      001BF6 78                    6522 	ld	a, b
      001BF7 9E                    6523 	sbc	a, (hl)
      001BF8 78                    6524 	ld	a, b
      001BF9 57                    6525 	ld	d, a
      001BFA CB 7E                 6526 	bit	7, (hl)
      001BFC 28 07                 6527 	jr	Z, 00111$
      001BFE CB 7A                 6528 	bit	7, d
      001C00 20 08                 6529 	jr	NZ, 00112$
      001C02 BF                    6530 	cp	a, a
      001C03 18 05                 6531 	jr	00112$
      001C05                       6532 00111$:
      001C05 CB 7A                 6533 	bit	7, d
      001C07 28 01                 6534 	jr	Z, 00112$
      001C09 37                    6535 	scf
      001C0A                       6536 00112$:
      001C0A 30 10                 6537 	jr	NC, 00102$
                                   6538 ;src/main.c:693: shield = 0;
      001C0C 21rDEr00              6539 	ld	hl, #_shield
      001C0F 36 00                 6540 	ld	(hl), #0x00
                                   6541 ;src/main.c:694: hull -= (amount - shield);
      001C11 FArDDr00              6542 	ld	a, (#_hull)
      001C14 F8 00                 6543 	ldhl	sp,	#0
      001C16 96                    6544 	sub	a, (hl)
      001C17 EArDDr00              6545 	ld	(#_hull),a
      001C1A 18 09                 6546 	jr	00104$
      001C1C                       6547 00102$:
                                   6548 ;src/main.c:697: shield -= amount;
      001C1C FArDEr00              6549 	ld	a, (#_shield)
      001C1F F8 00                 6550 	ldhl	sp,	#0
      001C21 96                    6551 	sub	a, (hl)
      001C22 EArDEr00              6552 	ld	(#_shield),a
      001C25                       6553 00104$:
                                   6554 ;src/main.c:699: }
      001C25 33                    6555 	inc	sp
      001C26 C9                    6556 	ret
                                   6557 ;src/main.c:701: void checkCollision() {
                                   6558 ;	---------------------------------
                                   6559 ; Function checkCollision
                                   6560 ; ---------------------------------
      001C27                       6561 _checkCollision::
      001C27 E8 F1                 6562 	add	sp, #-15
                                   6563 ;src/main.c:708: struct Enemy *eptr = enemies + enemyCollisionCount;
      001C29 01r50r00              6564 	ld	bc, #_enemies+0
      001C2C 21rA4r00              6565 	ld	hl, #_enemyCollisionCount
      001C2F 6E                    6566 	ld	l, (hl)
                                   6567 ;	spillPairReg hl
                                   6568 ;	spillPairReg hl
      001C30 26 00                 6569 	ld	h, #0x00
                                   6570 ;	spillPairReg hl
                                   6571 ;	spillPairReg hl
      001C32 29                    6572 	add	hl, hl
      001C33 29                    6573 	add	hl, hl
      001C34 29                    6574 	add	hl, hl
      001C35 29                    6575 	add	hl, hl
      001C36 09                    6576 	add	hl, bc
      001C37 4D                    6577 	ld	c, l
      001C38 7C                    6578 	ld	a, h
      001C39 F8 00                 6579 	ldhl	sp,	#0
      001C3B 71                    6580 	ld	(hl), c
      001C3C 23                    6581 	inc	hl
      001C3D 77                    6582 	ld	(hl), a
                                   6583 ;src/main.c:709: uint8_t i = enemyCollisionCount;
      001C3E FArA4r00              6584 	ld	a, (#_enemyCollisionCount)
      001C41 F8 02                 6585 	ldhl	sp,	#2
      001C43 77                    6586 	ld	(hl), a
                                   6587 ;src/main.c:711: if (eptr->visible && eptr->alive) {
      001C44 D1                    6588 	pop	de
      001C45 D5                    6589 	push	de
      001C46 21 0A 00              6590 	ld	hl, #0x000a
      001C49 19                    6591 	add	hl, de
      001C4A 4D                    6592 	ld	c, l
      001C4B 44                    6593 	ld	b, h
      001C4C 0A                    6594 	ld	a, (bc)
      001C4D B7                    6595 	or	a, a
      001C4E CAr62r1F              6596 	jp	Z, 00127$
      001C51 D1                    6597 	pop	de
      001C52 D5                    6598 	push	de
      001C53 21 09 00              6599 	ld	hl, #0x0009
      001C56 19                    6600 	add	hl, de
      001C57 4D                    6601 	ld	c, l
      001C58 44                    6602 	ld	b, h
      001C59 0A                    6603 	ld	a, (bc)
      001C5A B7                    6604 	or	a, a
      001C5B CAr62r1F              6605 	jp	Z, 00127$
                                   6606 ;src/main.c:713: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001C5E D1                    6607 	pop	de
      001C5F D5                    6608 	push	de
      001C60 21 08 00              6609 	ld	hl, #0x0008
      001C63 19                    6610 	add	hl, de
      001C64 4D                    6611 	ld	c, l
      001C65 44                    6612 	ld	b, h
      001C66 0A                    6613 	ld	a, (bc)
      001C67 4F                    6614 	ld	c, a
      001C68 3D                    6615 	dec	a
      001C69 3E 01                 6616 	ld	a, #0x01
      001C6B 28 01                 6617 	jr	Z, 00283$
      001C6D AF                    6618 	xor	a, a
      001C6E                       6619 00283$:
      001C6E F8 0B                 6620 	ldhl	sp,	#11
      001C70 77                    6621 	ld	(hl), a
      001C71 FAr9Ar00              6622 	ld	a, (#_playerDrawX)
      001C74 F8 0C                 6623 	ldhl	sp,	#12
      001C76 77                    6624 	ld	(hl), a
                                   6625 ;src/main.c:714: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001C77 79                    6626 	ld	a, c
      001C78 D6 02                 6627 	sub	a, #0x02
      001C7A 3E 01                 6628 	ld	a, #0x01
      001C7C 28 01                 6629 	jr	Z, 00285$
      001C7E AF                    6630 	xor	a, a
      001C7F                       6631 00285$:
      001C7F F8 0D                 6632 	ldhl	sp,	#13
                                   6633 ;src/main.c:713: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001C81 32                    6634 	ld	(hl-), a
      001C82 2B                    6635 	dec	hl
      001C83 7E                    6636 	ld	a, (hl)
      001C84 B7                    6637 	or	a, a
      001C85 28 2E                 6638 	jr	Z, 00110$
      001C87 D1                    6639 	pop	de
      001C88 D5                    6640 	push	de
      001C89 1A                    6641 	ld	a, (de)
      001C8A F8 0E                 6642 	ldhl	sp,	#14
      001C8C 77                    6643 	ld	(hl), a
      001C8D 3A                    6644 	ld	a, (hl-)
      001C8E 2B                    6645 	dec	hl
      001C8F 96                    6646 	sub	a, (hl)
      001C90 23                    6647 	inc	hl
      001C91 23                    6648 	inc	hl
      001C92 77                    6649 	ld	(hl), a
                                   6650 ;src/main.c:318: if (value >= 0) return value;
      001C93 CB 7E                 6651 	bit	7, (hl)
      001C95 28 05                 6652 	jr	Z, 00135$
                                   6653 ;src/main.c:319: else return - value;
      001C97 AF                    6654 	xor	a, a
      001C98 F8 0E                 6655 	ldhl	sp,	#14
      001C9A 96                    6656 	sub	a, (hl)
      001C9B 77                    6657 	ld	(hl), a
                                   6658 ;src/main.c:713: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001C9C                       6659 00135$:
      001C9C F8 0E                 6660 	ldhl	sp,	#14
      001C9E 5E                    6661 	ld	e, (hl)
      001C9F 3E 08                 6662 	ld	a,#0x08
      001CA1 57                    6663 	ld	d,a
      001CA2 96                    6664 	sub	a, (hl)
      001CA3 CB 7B                 6665 	bit	7, e
      001CA5 28 07                 6666 	jr	Z, 00286$
      001CA7 CB 7A                 6667 	bit	7, d
      001CA9 20 08                 6668 	jr	NZ, 00287$
      001CAB BF                    6669 	cp	a, a
      001CAC 18 05                 6670 	jr	00287$
      001CAE                       6671 00286$:
      001CAE CB 7A                 6672 	bit	7, d
      001CB0 28 01                 6673 	jr	Z, 00287$
      001CB2 37                    6674 	scf
      001CB3                       6675 00287$:
      001CB3 30 33                 6676 	jr	NC, 00106$
      001CB5                       6677 00110$:
                                   6678 ;src/main.c:714: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001CB5 F8 0D                 6679 	ldhl	sp,	#13
      001CB7 7E                    6680 	ld	a, (hl)
      001CB8 B7                    6681 	or	a, a
      001CB9 CAr9Cr1D              6682 	jp	Z, 00107$
      001CBC 2B                    6683 	dec	hl
      001CBD D1                    6684 	pop	de
      001CBE D5                    6685 	push	de
      001CBF 1A                    6686 	ld	a, (de)
      001CC0 96                    6687 	sub	a, (hl)
      001CC1 23                    6688 	inc	hl
      001CC2 23                    6689 	inc	hl
      001CC3 77                    6690 	ld	(hl), a
                                   6691 ;src/main.c:318: if (value >= 0) return value;
      001CC4 CB 7E                 6692 	bit	7, (hl)
      001CC6 28 06                 6693 	jr	Z, 00139$
                                   6694 ;src/main.c:319: else return - value;
      001CC8 AF                    6695 	xor	a, a
      001CC9 F8 0E                 6696 	ldhl	sp,	#14
      001CCB 96                    6697 	sub	a, (hl)
      001CCC 4F                    6698 	ld	c, a
      001CCD 71                    6699 	ld	(hl), c
                                   6700 ;src/main.c:714: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001CCE                       6701 00139$:
      001CCE F8 0E                 6702 	ldhl	sp,	#14
      001CD0 5E                    6703 	ld	e, (hl)
      001CD1 3E 10                 6704 	ld	a,#0x10
      001CD3 57                    6705 	ld	d,a
      001CD4 96                    6706 	sub	a, (hl)
      001CD5 CB 7B                 6707 	bit	7, e
      001CD7 28 07                 6708 	jr	Z, 00288$
      001CD9 CB 7A                 6709 	bit	7, d
      001CDB 20 08                 6710 	jr	NZ, 00289$
      001CDD BF                    6711 	cp	a, a
      001CDE 18 05                 6712 	jr	00289$
      001CE0                       6713 00288$:
      001CE0 CB 7A                 6714 	bit	7, d
      001CE2 28 01                 6715 	jr	Z, 00289$
      001CE4 37                    6716 	scf
      001CE5                       6717 00289$:
      001CE5 DAr9Cr1D              6718 	jp	C, 00107$
      001CE8                       6719 00106$:
                                   6720 ;src/main.c:715: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001CE8 C1                    6721 	pop	bc
      001CE9 C5                    6722 	push	bc
      001CEA 03                    6723 	inc	bc
      001CEB 03                    6724 	inc	bc
      001CEC FAr9Br00              6725 	ld	a, (#_playerDrawY)
      001CEF F8 0E                 6726 	ldhl	sp,	#14
      001CF1 77                    6727 	ld	(hl), a
      001CF2 F8 0B                 6728 	ldhl	sp,	#11
      001CF4 7E                    6729 	ld	a, (hl)
      001CF5 B7                    6730 	or	a, a
      001CF6 28 23                 6731 	jr	Z, 00105$
      001CF8 0A                    6732 	ld	a, (bc)
      001CF9 F8 0E                 6733 	ldhl	sp,	#14
      001CFB 96                    6734 	sub	a, (hl)
      001CFC 6F                    6735 	ld	l, a
                                   6736 ;	spillPairReg hl
                                   6737 ;	spillPairReg hl
                                   6738 ;src/main.c:318: if (value >= 0) return value;
      001CFD CB 7D                 6739 	bit	7, l
      001CFF 28 03                 6740 	jr	Z, 00143$
                                   6741 ;src/main.c:319: else return - value;
      001D01 AF                    6742 	xor	a, a
      001D02 95                    6743 	sub	a, l
      001D03 6F                    6744 	ld	l, a
                                   6745 ;	spillPairReg hl
                                   6746 ;	spillPairReg hl
                                   6747 ;src/main.c:715: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001D04                       6748 00143$:
      001D04 5D                    6749 	ld	e, l
      001D05 3E 08                 6750 	ld	a,#0x08
      001D07 57                    6751 	ld	d,a
      001D08 95                    6752 	sub	a, l
      001D09 CB 7B                 6753 	bit	7, e
      001D0B 28 07                 6754 	jr	Z, 00290$
      001D0D CB 7A                 6755 	bit	7, d
      001D0F 20 08                 6756 	jr	NZ, 00291$
      001D11 BF                    6757 	cp	a, a
      001D12 18 05                 6758 	jr	00291$
      001D14                       6759 00290$:
      001D14 CB 7A                 6760 	bit	7, d
      001D16 28 01                 6761 	jr	Z, 00291$
      001D18 37                    6762 	scf
      001D19                       6763 00291$:
      001D19 30 28                 6764 	jr	NC, 00101$
      001D1B                       6765 00105$:
                                   6766 ;src/main.c:716: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001D1B F8 0D                 6767 	ldhl	sp,	#13
      001D1D 7E                    6768 	ld	a, (hl)
      001D1E B7                    6769 	or	a, a
      001D1F 28 7B                 6770 	jr	Z, 00107$
      001D21 23                    6771 	inc	hl
      001D22 0A                    6772 	ld	a, (bc)
      001D23 96                    6773 	sub	a, (hl)
      001D24 4F                    6774 	ld	c, a
                                   6775 ;src/main.c:318: if (value >= 0) return value;
      001D25 CB 79                 6776 	bit	7, c
      001D27 28 03                 6777 	jr	Z, 00147$
                                   6778 ;src/main.c:319: else return - value;
      001D29 AF                    6779 	xor	a, a
      001D2A 91                    6780 	sub	a, c
      001D2B 4F                    6781 	ld	c, a
                                   6782 ;src/main.c:716: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001D2C                       6783 00147$:
      001D2C 59                    6784 	ld	e, c
      001D2D 3E 10                 6785 	ld	a,#0x10
      001D2F 57                    6786 	ld	d,a
      001D30 91                    6787 	sub	a, c
      001D31 CB 7B                 6788 	bit	7, e
      001D33 28 07                 6789 	jr	Z, 00292$
      001D35 CB 7A                 6790 	bit	7, d
      001D37 20 08                 6791 	jr	NZ, 00293$
      001D39 BF                    6792 	cp	a, a
      001D3A 18 05                 6793 	jr	00293$
      001D3C                       6794 00292$:
      001D3C CB 7A                 6795 	bit	7, d
      001D3E 28 01                 6796 	jr	Z, 00293$
      001D40 37                    6797 	scf
      001D41                       6798 00293$:
      001D41 38 59                 6799 	jr	C, 00107$
      001D43                       6800 00101$:
                                   6801 ;src/main.c:718: set_sprite_tile(10+(i<<1), 0x7f);
      001D43 F8 02                 6802 	ldhl	sp,	#2
      001D45 7E                    6803 	ld	a, (hl)
      001D46 87                    6804 	add	a, a
      001D47 C6 0A                 6805 	add	a, #0x0a
                                   6806 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D49 6F                    6807 	ld	l, a
      001D4A 01r00r00              6808 	ld	bc, #_shadow_OAM+0
                                   6809 ;	spillPairReg hl
                                   6810 ;	spillPairReg hl
      001D4D 26 00                 6811 	ld	h, #0x00
                                   6812 ;	spillPairReg hl
                                   6813 ;	spillPairReg hl
      001D4F 29                    6814 	add	hl, hl
      001D50 29                    6815 	add	hl, hl
      001D51 09                    6816 	add	hl, bc
      001D52 23                    6817 	inc	hl
      001D53 23                    6818 	inc	hl
      001D54 36 7F                 6819 	ld	(hl), #0x7f
                                   6820 ;src/main.c:719: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001D56 F8 02                 6821 	ldhl	sp,	#2
      001D58 7E                    6822 	ld	a, (hl)
      001D59 87                    6823 	add	a, a
      001D5A C6 0B                 6824 	add	a, #0x0b
                                   6825 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D5C 6F                    6826 	ld	l, a
      001D5D 01r00r00              6827 	ld	bc, #_shadow_OAM+0
                                   6828 ;	spillPairReg hl
                                   6829 ;	spillPairReg hl
      001D60 26 00                 6830 	ld	h, #0x00
                                   6831 ;	spillPairReg hl
                                   6832 ;	spillPairReg hl
      001D62 29                    6833 	add	hl, hl
      001D63 29                    6834 	add	hl, hl
      001D64 09                    6835 	add	hl, bc
      001D65 23                    6836 	inc	hl
      001D66 23                    6837 	inc	hl
      001D67 36 7F                 6838 	ld	(hl), #0x7f
                                   6839 ;src/main.c:720: eptr->alive = 0;
      001D69 D1                    6840 	pop	de
      001D6A D5                    6841 	push	de
      001D6B 21 09 00              6842 	ld	hl, #0x0009
      001D6E 19                    6843 	add	hl, de
      001D6F 4D                    6844 	ld	c, l
      001D70 44                    6845 	ld	b, h
      001D71 AF                    6846 	xor	a, a
      001D72 02                    6847 	ld	(bc), a
                                   6848 ;src/main.c:721: eptr->visible = 0;
      001D73 D1                    6849 	pop	de
      001D74 D5                    6850 	push	de
      001D75 21 0A 00              6851 	ld	hl, #0x000a
      001D78 19                    6852 	add	hl, de
      001D79 4D                    6853 	ld	c, l
      001D7A 44                    6854 	ld	b, h
      001D7B AF                    6855 	xor	a, a
      001D7C 02                    6856 	ld	(bc), a
                                   6857 ;src/main.c:722: takeDamage(eptr->damage);
      001D7D D1                    6858 	pop	de
      001D7E D5                    6859 	push	de
      001D7F 21 0B 00              6860 	ld	hl, #0x000b
      001D82 19                    6861 	add	hl, de
      001D83 4D                    6862 	ld	c, l
      001D84 44                    6863 	ld	b, h
      001D85 0A                    6864 	ld	a, (bc)
      001D86 06 00                 6865 	ld	b, #0x00
      001D88 4F                    6866 	ld	c, a
      001D89 C5                    6867 	push	bc
      001D8A CDrE3r1B              6868 	call	_takeDamage
      001D8D E1                    6869 	pop	hl
                                   6870 ;src/main.c:723: initEnemies(0);
      001D8E AF                    6871 	xor	a, a
      001D8F F5                    6872 	push	af
      001D90 33                    6873 	inc	sp
      001D91 CDr85r0C              6874 	call	_initEnemies
      001D94 33                    6875 	inc	sp
                                   6876 ;src/main.c:724: playSound(0);
      001D95 AF                    6877 	xor	a, a
      001D96 F5                    6878 	push	af
      001D97 33                    6879 	inc	sp
      001D98 CDr22r0C              6880 	call	_playSound
      001D9B 33                    6881 	inc	sp
      001D9C                       6882 00107$:
                                   6883 ;src/main.c:730: struct Projectile *pptr = projectiles;
      001D9C F8 0C                 6884 	ldhl	sp,	#12
      001D9E 3ErA0                 6885 	ld	a, #<(_projectiles)
      001DA0 22                    6886 	ld	(hl+), a
      001DA1 36s00                 6887 	ld	(hl), #>(_projectiles)
                                   6888 ;src/main.c:732: while (j < PROJECTILECOUNT) {
      001DA3 D1                    6889 	pop	de
      001DA4 D5                    6890 	push	de
      001DA5 21 02 00              6891 	ld	hl, #0x0002
      001DA8 19                    6892 	add	hl, de
      001DA9 E5                    6893 	push	hl
      001DAA 7D                    6894 	ld	a, l
      001DAB F8 05                 6895 	ldhl	sp,	#5
      001DAD 77                    6896 	ld	(hl), a
      001DAE E1                    6897 	pop	hl
      001DAF 7C                    6898 	ld	a, h
      001DB0 F8 04                 6899 	ldhl	sp,	#4
      001DB2 77                    6900 	ld	(hl), a
      001DB3 D1                    6901 	pop	de
      001DB4 D5                    6902 	push	de
      001DB5 21 08 00              6903 	ld	hl, #0x0008
      001DB8 19                    6904 	add	hl, de
      001DB9 E5                    6905 	push	hl
      001DBA 7D                    6906 	ld	a, l
      001DBB F8 07                 6907 	ldhl	sp,	#7
      001DBD 77                    6908 	ld	(hl), a
      001DBE E1                    6909 	pop	hl
      001DBF 7C                    6910 	ld	a, h
      001DC0 F8 06                 6911 	ldhl	sp,	#6
      001DC2 77                    6912 	ld	(hl), a
      001DC3 F8 03                 6913 	ldhl	sp,	#3
      001DC5 7E                    6914 	ld	a, (hl)
      001DC6 F8 07                 6915 	ldhl	sp,	#7
      001DC8 77                    6916 	ld	(hl), a
      001DC9 F8 04                 6917 	ldhl	sp,	#4
      001DCB 7E                    6918 	ld	a, (hl)
      001DCC F8 08                 6919 	ldhl	sp,	#8
      001DCE 77                    6920 	ld	(hl), a
      001DCF F8 0E                 6921 	ldhl	sp,	#14
      001DD1 36 00                 6922 	ld	(hl), #0x00
      001DD3                       6923 00123$:
      001DD3 21r5Er08              6924 	ld	hl, #_PROJECTILECOUNT
      001DD6 4E                    6925 	ld	c, (hl)
      001DD7 F8 0E                 6926 	ldhl	sp,	#14
      001DD9 7E                    6927 	ld	a, (hl)
      001DDA 91                    6928 	sub	a, c
      001DDB D2r62r1F              6929 	jp	NC, 00127$
                                   6930 ;src/main.c:733: if (pptr->active) {
      001DDE 2B                    6931 	dec	hl
      001DDF 2B                    6932 	dec	hl
      001DE0 2A                    6933 	ld	a, (hl+)
      001DE1 5F                    6934 	ld	e, a
      001DE2 56                    6935 	ld	d, (hl)
      001DE3 21 09 00              6936 	ld	hl, #0x0009
      001DE6 19                    6937 	add	hl, de
      001DE7 4D                    6938 	ld	c, l
      001DE8 44                    6939 	ld	b, h
      001DE9 0A                    6940 	ld	a, (bc)
      001DEA B7                    6941 	or	a, a
      001DEB CAr49r1F              6942 	jp	Z, 00122$
                                   6943 ;src/main.c:737: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001DEE F8 05                 6944 	ldhl	sp,#5
      001DF0 2A                    6945 	ld	a, (hl+)
      001DF1 5F                    6946 	ld	e, a
      001DF2 56                    6947 	ld	d, (hl)
      001DF3 1A                    6948 	ld	a, (de)
      001DF4 4F                    6949 	ld	c, a
      001DF5 3D                    6950 	dec	a
      001DF6 3E 01                 6951 	ld	a, #0x01
      001DF8 28 01                 6952 	jr	Z, 00295$
      001DFA AF                    6953 	xor	a, a
      001DFB                       6954 00295$:
      001DFB F8 09                 6955 	ldhl	sp,	#9
      001DFD 77                    6956 	ld	(hl), a
                                   6957 ;src/main.c:738: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001DFE 79                    6958 	ld	a, c
      001DFF D6 02                 6959 	sub	a, #0x02
      001E01 3E 01                 6960 	ld	a, #0x01
      001E03 28 01                 6961 	jr	Z, 00297$
      001E05 AF                    6962 	xor	a, a
      001E06                       6963 00297$:
      001E06 F8 0A                 6964 	ldhl	sp,	#10
                                   6965 ;src/main.c:737: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001E08 32                    6966 	ld	(hl-), a
      001E09 7E                    6967 	ld	a, (hl)
      001E0A B7                    6968 	or	a, a
      001E0B 28 2C                 6969 	jr	Z, 00120$
      001E0D D1                    6970 	pop	de
      001E0E D5                    6971 	push	de
      001E0F 1A                    6972 	ld	a, (de)
      001E10 F8 0C                 6973 	ldhl	sp,#12
      001E12 5E                    6974 	ld	e, (hl)
      001E13 23                    6975 	inc	hl
      001E14 56                    6976 	ld	d, (hl)
      001E15 F5                    6977 	push	af
      001E16 1A                    6978 	ld	a, (de)
      001E17 4F                    6979 	ld	c, a
      001E18 F1                    6980 	pop	af
      001E19 91                    6981 	sub	a, c
      001E1A 4F                    6982 	ld	c, a
                                   6983 ;src/main.c:318: if (value >= 0) return value;
      001E1B CB 79                 6984 	bit	7, c
      001E1D 28 03                 6985 	jr	Z, 00153$
                                   6986 ;src/main.c:319: else return - value;
      001E1F AF                    6987 	xor	a, a
      001E20 91                    6988 	sub	a, c
      001E21 4F                    6989 	ld	c, a
                                   6990 ;src/main.c:737: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001E22                       6991 00153$:
      001E22 59                    6992 	ld	e, c
      001E23 3E 08                 6993 	ld	a,#0x08
      001E25 57                    6994 	ld	d,a
      001E26 91                    6995 	sub	a, c
      001E27 CB 7B                 6996 	bit	7, e
      001E29 28 07                 6997 	jr	Z, 00298$
      001E2B CB 7A                 6998 	bit	7, d
      001E2D 20 08                 6999 	jr	NZ, 00299$
      001E2F BF                    7000 	cp	a, a
      001E30 18 05                 7001 	jr	00299$
      001E32                       7002 00298$:
      001E32 CB 7A                 7003 	bit	7, d
      001E34 28 01                 7004 	jr	Z, 00299$
      001E36 37                    7005 	scf
      001E37                       7006 00299$:
      001E37 30 3B                 7007 	jr	NC, 00116$
      001E39                       7008 00120$:
                                   7009 ;src/main.c:738: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001E39 F8 0A                 7010 	ldhl	sp,	#10
      001E3B 7E                    7011 	ld	a, (hl)
      001E3C B7                    7012 	or	a, a
      001E3D CAr49r1F              7013 	jp	Z, 00122$
      001E40 D1                    7014 	pop	de
      001E41 D5                    7015 	push	de
      001E42 1A                    7016 	ld	a, (de)
      001E43 F8 0C                 7017 	ldhl	sp,#12
      001E45 5E                    7018 	ld	e, (hl)
      001E46 23                    7019 	inc	hl
      001E47 56                    7020 	ld	d, (hl)
      001E48 2B                    7021 	dec	hl
      001E49 2B                    7022 	dec	hl
      001E4A F5                    7023 	push	af
      001E4B 1A                    7024 	ld	a, (de)
      001E4C 4F                    7025 	ld	c, a
      001E4D F1                    7026 	pop	af
      001E4E 91                    7027 	sub	a, c
      001E4F 77                    7028 	ld	(hl), a
                                   7029 ;src/main.c:318: if (value >= 0) return value;
      001E50 CB 7E                 7030 	bit	7, (hl)
      001E52 20 03                 7031 	jr	NZ, 00155$
      001E54 4E                    7032 	ld	c, (hl)
      001E55 18 05                 7033 	jr	00157$
      001E57                       7034 00155$:
                                   7035 ;src/main.c:319: else return - value;
      001E57 AF                    7036 	xor	a, a
      001E58 F8 0B                 7037 	ldhl	sp,	#11
      001E5A 96                    7038 	sub	a, (hl)
      001E5B 4F                    7039 	ld	c, a
                                   7040 ;src/main.c:738: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001E5C                       7041 00157$:
      001E5C 59                    7042 	ld	e, c
      001E5D 3E 10                 7043 	ld	a,#0x10
      001E5F 57                    7044 	ld	d,a
      001E60 91                    7045 	sub	a, c
      001E61 CB 7B                 7046 	bit	7, e
      001E63 28 07                 7047 	jr	Z, 00300$
      001E65 CB 7A                 7048 	bit	7, d
      001E67 20 08                 7049 	jr	NZ, 00301$
      001E69 BF                    7050 	cp	a, a
      001E6A 18 05                 7051 	jr	00301$
      001E6C                       7052 00300$:
      001E6C CB 7A                 7053 	bit	7, d
      001E6E 28 01                 7054 	jr	Z, 00301$
      001E70 37                    7055 	scf
      001E71                       7056 00301$:
      001E71 DAr49r1F              7057 	jp	C, 00122$
      001E74                       7058 00116$:
                                   7059 ;src/main.c:739: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001E74 F8 0C                 7060 	ldhl	sp,	#12
      001E76 2A                    7061 	ld	a, (hl+)
      001E77 4F                    7062 	ld	c, a
      001E78 46                    7063 	ld	b, (hl)
      001E79 03                    7064 	inc	bc
      001E7A 03                    7065 	inc	bc
      001E7B F8 09                 7066 	ldhl	sp,	#9
      001E7D 7E                    7067 	ld	a, (hl)
      001E7E B7                    7068 	or	a, a
      001E7F 28 2A                 7069 	jr	Z, 00115$
      001E81 2B                    7070 	dec	hl
      001E82 2B                    7071 	dec	hl
      001E83 2A                    7072 	ld	a, (hl+)
      001E84 5F                    7073 	ld	e, a
      001E85 56                    7074 	ld	d, (hl)
      001E86 1A                    7075 	ld	a, (de)
      001E87 F5                    7076 	push	af
      001E88 0A                    7077 	ld	a, (bc)
      001E89 5F                    7078 	ld	e, a
      001E8A F1                    7079 	pop	af
      001E8B 93                    7080 	sub	a, e
      001E8C 6F                    7081 	ld	l, a
                                   7082 ;	spillPairReg hl
                                   7083 ;	spillPairReg hl
                                   7084 ;src/main.c:318: if (value >= 0) return value;
      001E8D CB 7D                 7085 	bit	7, l
      001E8F 28 03                 7086 	jr	Z, 00161$
                                   7087 ;src/main.c:319: else return - value;
      001E91 AF                    7088 	xor	a, a
      001E92 95                    7089 	sub	a, l
      001E93 6F                    7090 	ld	l, a
                                   7091 ;	spillPairReg hl
                                   7092 ;	spillPairReg hl
                                   7093 ;src/main.c:739: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001E94                       7094 00161$:
      001E94 5D                    7095 	ld	e, l
      001E95 3E 08                 7096 	ld	a,#0x08
      001E97 57                    7097 	ld	d,a
      001E98 95                    7098 	sub	a, l
      001E99 CB 7B                 7099 	bit	7, e
      001E9B 28 07                 7100 	jr	Z, 00302$
      001E9D CB 7A                 7101 	bit	7, d
      001E9F 20 08                 7102 	jr	NZ, 00303$
      001EA1 BF                    7103 	cp	a, a
      001EA2 18 05                 7104 	jr	00303$
      001EA4                       7105 00302$:
      001EA4 CB 7A                 7106 	bit	7, d
      001EA6 28 01                 7107 	jr	Z, 00303$
      001EA8 37                    7108 	scf
      001EA9                       7109 00303$:
      001EA9 30 31                 7110 	jr	NC, 00111$
      001EAB                       7111 00115$:
                                   7112 ;src/main.c:740: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001EAB F8 0A                 7113 	ldhl	sp,	#10
      001EAD 7E                    7114 	ld	a, (hl)
      001EAE B7                    7115 	or	a, a
      001EAF CAr49r1F              7116 	jp	Z, 00122$
      001EB2 F8 03                 7117 	ldhl	sp,#3
      001EB4 2A                    7118 	ld	a, (hl+)
      001EB5 5F                    7119 	ld	e, a
      001EB6 56                    7120 	ld	d, (hl)
      001EB7 1A                    7121 	ld	a, (de)
      001EB8 F5                    7122 	push	af
      001EB9 0A                    7123 	ld	a, (bc)
      001EBA 4F                    7124 	ld	c, a
      001EBB F1                    7125 	pop	af
      001EBC 91                    7126 	sub	a, c
      001EBD 4F                    7127 	ld	c, a
                                   7128 ;src/main.c:318: if (value >= 0) return value;
      001EBE CB 79                 7129 	bit	7, c
      001EC0 28 03                 7130 	jr	Z, 00165$
                                   7131 ;src/main.c:319: else return - value;
      001EC2 AF                    7132 	xor	a, a
      001EC3 91                    7133 	sub	a, c
      001EC4 4F                    7134 	ld	c, a
                                   7135 ;src/main.c:740: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001EC5                       7136 00165$:
      001EC5 59                    7137 	ld	e, c
      001EC6 3E 10                 7138 	ld	a,#0x10
      001EC8 57                    7139 	ld	d,a
      001EC9 91                    7140 	sub	a, c
      001ECA CB 7B                 7141 	bit	7, e
      001ECC 28 07                 7142 	jr	Z, 00304$
      001ECE CB 7A                 7143 	bit	7, d
      001ED0 20 08                 7144 	jr	NZ, 00305$
      001ED2 BF                    7145 	cp	a, a
      001ED3 18 05                 7146 	jr	00305$
      001ED5                       7147 00304$:
      001ED5 CB 7A                 7148 	bit	7, d
      001ED7 28 01                 7149 	jr	Z, 00305$
      001ED9 37                    7150 	scf
      001EDA                       7151 00305$:
      001EDA 38 6D                 7152 	jr	C, 00122$
      001EDC                       7153 00111$:
                                   7154 ;src/main.c:743: set_sprite_tile(10+(i<<1), 0x7f);
      001EDC F8 02                 7155 	ldhl	sp,	#2
      001EDE 7E                    7156 	ld	a, (hl)
      001EDF 87                    7157 	add	a, a
      001EE0 4F                    7158 	ld	c, a
      001EE1 C6 0A                 7159 	add	a, #0x0a
                                   7160 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001EE3 6F                    7161 	ld	l, a
                                   7162 ;	spillPairReg hl
                                   7163 ;	spillPairReg hl
      001EE4 26 00                 7164 	ld	h, #0x00
                                   7165 ;	spillPairReg hl
                                   7166 ;	spillPairReg hl
      001EE6 29                    7167 	add	hl, hl
      001EE7 29                    7168 	add	hl, hl
      001EE8 11r00r00              7169 	ld	de, #_shadow_OAM
      001EEB 19                    7170 	add	hl, de
      001EEC 23                    7171 	inc	hl
      001EED 23                    7172 	inc	hl
      001EEE 36 7F                 7173 	ld	(hl), #0x7f
                                   7174 ;src/main.c:744: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001EF0 79                    7175 	ld	a, c
      001EF1 C6 0B                 7176 	add	a, #0x0b
      001EF3 4F                    7177 	ld	c, a
                                   7178 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001EF4 26 00                 7179 	ld	h, #0x00
                                   7180 ;	spillPairReg hl
                                   7181 ;	spillPairReg hl
      001EF6 69                    7182 	ld	l, c
      001EF7 29                    7183 	add	hl, hl
      001EF8 29                    7184 	add	hl, hl
      001EF9 11r00r00              7185 	ld	de, #_shadow_OAM
      001EFC 19                    7186 	add	hl, de
      001EFD 23                    7187 	inc	hl
      001EFE 23                    7188 	inc	hl
      001EFF 36 7F                 7189 	ld	(hl), #0x7f
                                   7190 ;src/main.c:745: eptr->alive = 0;
      001F01 D1                    7191 	pop	de
      001F02 D5                    7192 	push	de
      001F03 21 09 00              7193 	ld	hl, #0x0009
      001F06 19                    7194 	add	hl, de
      001F07 4D                    7195 	ld	c, l
      001F08 44                    7196 	ld	b, h
      001F09 AF                    7197 	xor	a, a
      001F0A 02                    7198 	ld	(bc), a
                                   7199 ;src/main.c:746: eptr->visible = 0;
      001F0B D1                    7200 	pop	de
      001F0C D5                    7201 	push	de
      001F0D 21 0A 00              7202 	ld	hl, #0x000a
      001F10 19                    7203 	add	hl, de
      001F11 4D                    7204 	ld	c, l
      001F12 44                    7205 	ld	b, h
      001F13 AF                    7206 	xor	a, a
      001F14 02                    7207 	ld	(bc), a
                                   7208 ;src/main.c:747: initEnemies(0);
      001F15 AF                    7209 	xor	a, a
      001F16 F5                    7210 	push	af
      001F17 33                    7211 	inc	sp
      001F18 CDr85r0C              7212 	call	_initEnemies
      001F1B 33                    7213 	inc	sp
                                   7214 ;src/main.c:748: set_sprite_tile(30+j, 0x7f);
      001F1C F8 0E                 7215 	ldhl	sp,	#14
      001F1E 7E                    7216 	ld	a, (hl)
      001F1F C6 1E                 7217 	add	a, #0x1e
      001F21 4F                    7218 	ld	c, a
                                   7219 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001F22 26 00                 7220 	ld	h, #0x00
                                   7221 ;	spillPairReg hl
                                   7222 ;	spillPairReg hl
      001F24 69                    7223 	ld	l, c
      001F25 29                    7224 	add	hl, hl
      001F26 29                    7225 	add	hl, hl
      001F27 11r00r00              7226 	ld	de, #_shadow_OAM
      001F2A 19                    7227 	add	hl, de
      001F2B 23                    7228 	inc	hl
      001F2C 23                    7229 	inc	hl
      001F2D 36 7F                 7230 	ld	(hl), #0x7f
                                   7231 ;src/main.c:749: playSound(0);
      001F2F AF                    7232 	xor	a, a
      001F30 F5                    7233 	push	af
      001F31 33                    7234 	inc	sp
      001F32 CDr22r0C              7235 	call	_playSound
      001F35 33                    7236 	inc	sp
                                   7237 ;src/main.c:750: pptr->active = 0;
      001F36 F8 0C                 7238 	ldhl	sp,#12
      001F38 2A                    7239 	ld	a, (hl+)
      001F39 5F                    7240 	ld	e, a
      001F3A 56                    7241 	ld	d, (hl)
      001F3B 21 09 00              7242 	ld	hl, #0x0009
      001F3E 19                    7243 	add	hl, de
      001F3F 4D                    7244 	ld	c, l
      001F40 44                    7245 	ld	b, h
      001F41 AF                    7246 	xor	a, a
      001F42 02                    7247 	ld	(bc), a
                                   7248 ;src/main.c:751: incrementScore();
      001F43 CDrDFr09              7249 	call	_incrementScore
                                   7250 ;src/main.c:752: updateScore();
      001F46 CDr73r09              7251 	call	_updateScore
      001F49                       7252 00122$:
                                   7253 ;src/main.c:757: j++;
      001F49 F8 0E                 7254 	ldhl	sp,	#14
      001F4B 34                    7255 	inc	(hl)
                                   7256 ;src/main.c:758: pptr++;
      001F4C 2B                    7257 	dec	hl
      001F4D 2B                    7258 	dec	hl
      001F4E 2A                    7259 	ld	a, (hl+)
      001F4F 5F                    7260 	ld	e, a
      001F50 56                    7261 	ld	d, (hl)
      001F51 21 0C 00              7262 	ld	hl, #0x000c
      001F54 19                    7263 	add	hl, de
      001F55 E5                    7264 	push	hl
      001F56 7D                    7265 	ld	a, l
      001F57 F8 0E                 7266 	ldhl	sp,	#14
      001F59 77                    7267 	ld	(hl), a
      001F5A E1                    7268 	pop	hl
      001F5B 7C                    7269 	ld	a, h
      001F5C F8 0D                 7270 	ldhl	sp,	#13
      001F5E 77                    7271 	ld	(hl), a
      001F5F C3rD3r1D              7272 	jp	00123$
      001F62                       7273 00127$:
                                   7274 ;src/main.c:762: if (enemyCollisionCount == 0) {
      001F62 FArA4r00              7275 	ld	a, (#_enemyCollisionCount)
      001F65 B7                    7276 	or	a, a
      001F66 20 09                 7277 	jr	NZ, 00130$
                                   7278 ;src/main.c:763: enemyCollisionCount = ENEMYCOUNT - 1;
      001F68 FAr4Dr08              7279 	ld	a, (#_ENEMYCOUNT)
      001F6B 3D                    7280 	dec	a
      001F6C EArA4r00              7281 	ld	(#_enemyCollisionCount),a
      001F6F 18 04                 7282 	jr	00169$
      001F71                       7283 00130$:
                                   7284 ;src/main.c:766: enemyCollisionCount--;
      001F71 21rA4r00              7285 	ld	hl, #_enemyCollisionCount
      001F74 35                    7286 	dec	(hl)
      001F75                       7287 00169$:
                                   7288 ;src/main.c:771: }
      001F75 E8 0F                 7289 	add	sp, #15
      001F77 C9                    7290 	ret
                                   7291 ;src/main.c:774: void setGunIcon() {
                                   7292 ;	---------------------------------
                                   7293 ; Function setGunIcon
                                   7294 ; ---------------------------------
      001F78                       7295 _setGunIcon::
                                   7296 ;src/main.c:776: if (currentGun == 0) {
      001F78 FArA6r00              7297 	ld	a, (#_currentGun)
      001F7B B7                    7298 	or	a, a
      001F7C 20 1B                 7299 	jr	NZ, 00102$
                                   7300 ;src/main.c:777: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      001F7E 01rADr00              7301 	ld	bc, #_gunMap+0
      001F81 79                    7302 	ld	a, c
      001F82 21rA5r00              7303 	ld	hl, #_gunLevel
      001F85 86                    7304 	add	a, (hl)
      001F86 4F                    7305 	ld	c, a
      001F87 30 01                 7306 	jr	NC, 00111$
      001F89 04                    7307 	inc	b
      001F8A                       7308 00111$:
      001F8A C5                    7309 	push	bc
      001F8B 21 01 01              7310 	ld	hl, #0x101
      001F8E E5                    7311 	push	hl
      001F8F 21 0F 00              7312 	ld	hl, #0x0f
      001F92 E5                    7313 	push	hl
      001F93 CDr00r00              7314 	call	_set_win_tiles
      001F96 E8 06                 7315 	add	sp, #6
      001F98 C9                    7316 	ret
      001F99                       7317 00102$:
                                   7318 ;src/main.c:780: set_win_tiles(15, 0,1,1,gunMap+2);
      001F99 11rAFr00              7319 	ld	de, #(_gunMap + 2)
      001F9C D5                    7320 	push	de
      001F9D 21 01 01              7321 	ld	hl, #0x101
      001FA0 E5                    7322 	push	hl
      001FA1 21 0F 00              7323 	ld	hl, #0x0f
      001FA4 E5                    7324 	push	hl
      001FA5 CDr00r00              7325 	call	_set_win_tiles
      001FA8 E8 06                 7326 	add	sp, #6
                                   7327 ;src/main.c:782: }
      001FAA C9                    7328 	ret
                                   7329 ;src/main.c:792: void fire() {
                                   7330 ;	---------------------------------
                                   7331 ; Function fire
                                   7332 ; ---------------------------------
      001FAB                       7333 _fire::
      001FAB E8 FB                 7334 	add	sp, #-5
                                   7335 ;src/main.c:794: oldestProjectile += 1;
      001FAD 21r90r00              7336 	ld	hl, #_oldestProjectile
      001FB0 34                    7337 	inc	(hl)
      001FB1 7E                    7338 	ld	a, (hl)
                                   7339 ;src/main.c:795: if (oldestProjectile >= PROJECTILECOUNT) {
      001FB2 21r5Er08              7340 	ld	hl, #_PROJECTILECOUNT
      001FB5 4E                    7341 	ld	c, (hl)
      001FB6 21r90r00              7342 	ld	hl, #_oldestProjectile
      001FB9 7E                    7343 	ld	a, (hl)
      001FBA 91                    7344 	sub	a, c
      001FBB 38 02                 7345 	jr	C, 00102$
                                   7346 ;src/main.c:796: oldestProjectile = 0;
      001FBD 36 00                 7347 	ld	(hl), #0x00
      001FBF                       7348 00102$:
                                   7349 ;src/main.c:799: if (currentGun == 0) {
      001FBF FArA6r00              7350 	ld	a, (#_currentGun)
      001FC2 B7                    7351 	or	a, a
      001FC3 20 3A                 7352 	jr	NZ, 00107$
                                   7353 ;src/main.c:801: projectiles[oldestProjectile] = singleGun;
      001FC5 21r90r00              7354 	ld	hl, #_oldestProjectile
      001FC8 4E                    7355 	ld	c, (hl)
      001FC9 06 00                 7356 	ld	b, #0x00
      001FCB 69                    7357 	ld	l, c
      001FCC 60                    7358 	ld	h, b
      001FCD 29                    7359 	add	hl, hl
      001FCE 09                    7360 	add	hl, bc
      001FCF 29                    7361 	add	hl, hl
      001FD0 29                    7362 	add	hl, hl
      001FD1 4D                    7363 	ld	c, l
      001FD2 44                    7364 	ld	b, h
                                   7365 ;src/main.c:800: if (gunLevel == 0) {
      001FD3 FArA5r00              7366 	ld	a, (#_gunLevel)
      001FD6 B7                    7367 	or	a, a
      001FD7 20 14                 7368 	jr	NZ, 00104$
                                   7369 ;src/main.c:801: projectiles[oldestProjectile] = singleGun;
      001FD9 11r60r00              7370 	ld	de, #_singleGun+0
      001FDC 21rA0r00              7371 	ld	hl, #_projectiles
      001FDF 09                    7372 	add	hl, bc
      001FE0 01 0C 00              7373 	ld	bc, #0x000c
      001FE3 C5                    7374 	push	bc
      001FE4 D5                    7375 	push	de
      001FE5 E5                    7376 	push	hl
      001FE6 CDr00r00              7377 	call	___memcpy
      001FE9 E8 06                 7378 	add	sp, #6
      001FEB 18 12                 7379 	jr	00107$
      001FED                       7380 00104$:
                                   7381 ;src/main.c:804: projectiles[oldestProjectile] = doubleGun;
      001FED 11r6Cr00              7382 	ld	de, #_doubleGun+0
      001FF0 21rA0r00              7383 	ld	hl, #_projectiles
      001FF3 09                    7384 	add	hl, bc
      001FF4 01 0C 00              7385 	ld	bc, #0x000c
      001FF7 C5                    7386 	push	bc
      001FF8 D5                    7387 	push	de
      001FF9 E5                    7388 	push	hl
      001FFA CDr00r00              7389 	call	___memcpy
      001FFD E8 06                 7390 	add	sp, #6
      001FFF                       7391 00107$:
                                   7392 ;src/main.c:807: if (currentGun == 1) {
      001FFF FArA6r00              7393 	ld	a, (#_currentGun)
      002002 3D                    7394 	dec	a
      002003 20 45                 7395 	jr	NZ, 00113$
                                   7396 ;src/main.c:808: if (missiles == 0) {
      002005 FArA7r00              7397 	ld	a, (#_missiles)
      002008 B7                    7398 	or	a, a
      002009 20 0B                 7399 	jr	NZ, 00109$
                                   7400 ;src/main.c:809: currentGun = 0;
      00200B 21rA6r00              7401 	ld	hl, #_currentGun
      00200E 36 00                 7402 	ld	(hl), #0x00
                                   7403 ;src/main.c:810: setGunIcon();
      002010 CDr78r1F              7404 	call	_setGunIcon
                                   7405 ;src/main.c:811: return;
      002013 C3r41r25              7406 	jp	00154$
      002016                       7407 00109$:
                                   7408 ;src/main.c:814: projectiles[oldestProjectile] = missile;
      002016 21r90r00              7409 	ld	hl, #_oldestProjectile
      002019 4E                    7410 	ld	c, (hl)
      00201A 06 00                 7411 	ld	b, #0x00
      00201C 69                    7412 	ld	l, c
      00201D 60                    7413 	ld	h, b
      00201E 29                    7414 	add	hl, hl
      00201F 09                    7415 	add	hl, bc
      002020 29                    7416 	add	hl, hl
      002021 29                    7417 	add	hl, hl
      002022 01rA0r00              7418 	ld	bc,#_projectiles
      002025 09                    7419 	add	hl,bc
      002026 11 0C 00              7420 	ld	de, #0x000c
      002029 D5                    7421 	push	de
      00202A 11r78r00              7422 	ld	de, #_missile
      00202D D5                    7423 	push	de
      00202E E5                    7424 	push	hl
      00202F CDr00r00              7425 	call	___memcpy
      002032 E8 06                 7426 	add	sp, #6
                                   7427 ;src/main.c:815: updateMissileCount(-1);
      002034 3E FF                 7428 	ld	a, #0xff
      002036 F5                    7429 	push	af
      002037 33                    7430 	inc	sp
      002038 CDr9Dr09              7431 	call	_updateMissileCount
      00203B 33                    7432 	inc	sp
                                   7433 ;src/main.c:817: if (missiles == 0) {
      00203C FArA7r00              7434 	ld	a, (#_missiles)
      00203F B7                    7435 	or	a, a
      002040 20 08                 7436 	jr	NZ, 00113$
                                   7437 ;src/main.c:818: currentGun = 0;
      002042 21rA6r00              7438 	ld	hl, #_currentGun
      002045 36 00                 7439 	ld	(hl), #0x00
                                   7440 ;src/main.c:819: setGunIcon();
      002047 CDr78r1F              7441 	call	_setGunIcon
      00204A                       7442 00113$:
                                   7443 ;src/main.c:822: projectiles[oldestProjectile].x = playerDrawX;
      00204A 21r90r00              7444 	ld	hl, #_oldestProjectile
      00204D 4E                    7445 	ld	c, (hl)
      00204E 06 00                 7446 	ld	b, #0x00
      002050 69                    7447 	ld	l, c
      002051 60                    7448 	ld	h, b
      002052 29                    7449 	add	hl, hl
      002053 09                    7450 	add	hl, bc
      002054 29                    7451 	add	hl, hl
      002055 29                    7452 	add	hl, hl
      002056 01rA0r00              7453 	ld	bc,#_projectiles
      002059 09                    7454 	add	hl,bc
      00205A E5                    7455 	push	hl
      00205B FAr9Ar00              7456 	ld	a, (#_playerDrawX)
      00205E E1                    7457 	pop	hl
      00205F 0E 00                 7458 	ld	c, #0x00
      002061 22                    7459 	ld	(hl+), a
      002062 71                    7460 	ld	(hl), c
                                   7461 ;src/main.c:823: projectiles[oldestProjectile].y = playerDrawY;
      002063 21r90r00              7462 	ld	hl, #_oldestProjectile
      002066 4E                    7463 	ld	c, (hl)
      002067 06 00                 7464 	ld	b, #0x00
      002069 69                    7465 	ld	l, c
      00206A 60                    7466 	ld	h, b
      00206B 29                    7467 	add	hl, hl
      00206C 09                    7468 	add	hl, bc
      00206D 29                    7469 	add	hl, hl
      00206E 29                    7470 	add	hl, hl
      00206F 01rA0r00              7471 	ld	bc,#_projectiles
      002072 09                    7472 	add	hl,bc
      002073 23                    7473 	inc	hl
      002074 23                    7474 	inc	hl
      002075 E5                    7475 	push	hl
      002076 FAr9Br00              7476 	ld	a, (#_playerDrawY)
      002079 E1                    7477 	pop	hl
      00207A 0E 00                 7478 	ld	c, #0x00
      00207C 22                    7479 	ld	(hl+), a
      00207D 71                    7480 	ld	(hl), c
                                   7481 ;src/main.c:824: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      00207E 21r90r00              7482 	ld	hl, #_oldestProjectile
      002081 4E                    7483 	ld	c, (hl)
      002082 06 00                 7484 	ld	b, #0x00
      002084 69                    7485 	ld	l, c
      002085 60                    7486 	ld	h, b
      002086 29                    7487 	add	hl, hl
      002087 09                    7488 	add	hl, bc
      002088 29                    7489 	add	hl, hl
      002089 29                    7490 	add	hl, hl
      00208A 01rA0r00              7491 	ld	bc,#_projectiles
      00208D 09                    7492 	add	hl,bc
      00208E 5D                    7493 	ld	e, l
      00208F 54                    7494 	ld	d, h
      002090 21 05 00              7495 	ld	hl, #0x0005
      002093 19                    7496 	add	hl, de
      002094 4D                    7497 	ld	c, l
      002095 44                    7498 	ld	b, h
      002096 21 07 00              7499 	ld	hl, #0x0007
      002099 19                    7500 	add	hl, de
      00209A 7E                    7501 	ld	a, (hl)
      00209B C5                    7502 	push	bc
      00209C F5                    7503 	push	af
      00209D 33                    7504 	inc	sp
      00209E FAr92r00              7505 	ld	a, (#_xDir)
      0020A1 F5                    7506 	push	af
      0020A2 33                    7507 	inc	sp
      0020A3 CDr00r00              7508 	call	__muluschar
      0020A6 E1                    7509 	pop	hl
      0020A7 7B                    7510 	ld	a, e
      0020A8 C1                    7511 	pop	bc
      0020A9 02                    7512 	ld	(bc), a
                                   7513 ;src/main.c:825: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      0020AA 21r90r00              7514 	ld	hl, #_oldestProjectile
      0020AD 4E                    7515 	ld	c, (hl)
      0020AE 06 00                 7516 	ld	b, #0x00
      0020B0 69                    7517 	ld	l, c
      0020B1 60                    7518 	ld	h, b
      0020B2 29                    7519 	add	hl, hl
      0020B3 09                    7520 	add	hl, bc
      0020B4 29                    7521 	add	hl, hl
      0020B5 29                    7522 	add	hl, hl
      0020B6 01rA0r00              7523 	ld	bc,#_projectiles
      0020B9 09                    7524 	add	hl,bc
      0020BA 5D                    7525 	ld	e, l
      0020BB 54                    7526 	ld	d, h
      0020BC 21 06 00              7527 	ld	hl, #0x0006
      0020BF 19                    7528 	add	hl, de
      0020C0 4D                    7529 	ld	c, l
      0020C1 44                    7530 	ld	b, h
      0020C2 21 07 00              7531 	ld	hl, #0x0007
      0020C5 19                    7532 	add	hl, de
      0020C6 7E                    7533 	ld	a, (hl)
      0020C7 C5                    7534 	push	bc
      0020C8 F5                    7535 	push	af
      0020C9 33                    7536 	inc	sp
      0020CA FAr93r00              7537 	ld	a, (#_yDir)
      0020CD F5                    7538 	push	af
      0020CE 33                    7539 	inc	sp
      0020CF CDr00r00              7540 	call	__muluschar
      0020D2 E1                    7541 	pop	hl
      0020D3 7B                    7542 	ld	a, e
      0020D4 C1                    7543 	pop	bc
      0020D5 02                    7544 	ld	(bc), a
                                   7545 ;src/main.c:794: oldestProjectile += 1;
      0020D6 FAr90r00              7546 	ld	a, (#_oldestProjectile)
      0020D9 F8 04                 7547 	ldhl	sp,	#4
      0020DB 77                    7548 	ld	(hl), a
                                   7549 ;src/main.c:801: projectiles[oldestProjectile] = singleGun;
      0020DC 21r90r00              7550 	ld	hl, #_oldestProjectile
      0020DF 4E                    7551 	ld	c, (hl)
      0020E0 06 00                 7552 	ld	b, #0x00
      0020E2 69                    7553 	ld	l, c
      0020E3 60                    7554 	ld	h, b
      0020E4 29                    7555 	add	hl, hl
      0020E5 09                    7556 	add	hl, bc
      0020E6 29                    7557 	add	hl, hl
      0020E7 29                    7558 	add	hl, hl
                                   7559 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0020E8 01rA0r00              7560 	ld	bc,#_projectiles
      0020EB 09                    7561 	add	hl,bc
      0020EC 4D                    7562 	ld	c, l
      0020ED 44                    7563 	ld	b, h
      0020EE F8 04                 7564 	ldhl	sp,	#4
      0020F0 3A                    7565 	ld	a, (hl-)
      0020F1 C6 1E                 7566 	add	a, #0x1e
      0020F3 77                    7567 	ld	(hl), a
      0020F4 21 0B 00              7568 	ld	hl, #0x000b
      0020F7 09                    7569 	add	hl, bc
      0020F8 7E                    7570 	ld	a, (hl)
      0020F9 F8 04                 7571 	ldhl	sp,	#4
      0020FB 77                    7572 	ld	(hl), a
                                   7573 ;src/main.c:829: if (yDir != 0 && xDir == 0) {
      0020FC FAr93r00              7574 	ld	a, (#_yDir)
      0020FF B7                    7575 	or	a, a
      002100 28 6F                 7576 	jr	Z, 00140$
      002102 FAr92r00              7577 	ld	a, (#_xDir)
      002105 B7                    7578 	or	a, a
      002106 20 69                 7579 	jr	NZ, 00140$
                                   7580 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002108 F8 04                 7581 	ldhl	sp,	#4
      00210A 3A                    7582 	ld	a, (hl-)
      00210B 4F                    7583 	ld	c, a
                                   7584 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00210C 6E                    7585 	ld	l, (hl)
                                   7586 ;	spillPairReg hl
                                   7587 ;	spillPairReg hl
      00210D 26 00                 7588 	ld	h, #0x00
                                   7589 ;	spillPairReg hl
                                   7590 ;	spillPairReg hl
      00210F 29                    7591 	add	hl, hl
      002110 29                    7592 	add	hl, hl
      002111 11r00r00              7593 	ld	de, #_shadow_OAM
      002114 19                    7594 	add	hl, de
      002115 23                    7595 	inc	hl
      002116 23                    7596 	inc	hl
      002117 71                    7597 	ld	(hl), c
                                   7598 ;src/main.c:794: oldestProjectile += 1;
      002118 FAr90r00              7599 	ld	a, (#_oldestProjectile)
                                   7600 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00211B C6 1E                 7601 	add	a, #0x1e
      00211D 4F                    7602 	ld	c, a
                                   7603 ;src/main.c:831: if (yDir == 1) {
      00211E FAr93r00              7604 	ld	a, (#_yDir)
                                   7605 ;src/main.c:832: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   7606 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002121 3D                    7607 	dec	a
      002122 20 26                 7608 	jr	NZ, 00115$
      002124 67                    7609 	ld	h,a
                                   7610 ;	spillPairReg hl
                                   7611 ;	spillPairReg hl
      002125 69                    7612 	ld	l, c
      002126 29                    7613 	add	hl, hl
      002127 29                    7614 	add	hl, hl
      002128 11r00r00              7615 	ld	de, #_shadow_OAM
      00212B 19                    7616 	add	hl, de
      00212C 23                    7617 	inc	hl
      00212D 23                    7618 	inc	hl
      00212E 23                    7619 	inc	hl
      00212F 36 40                 7620 	ld	(hl), #0x40
                                   7621 ;src/main.c:833: projectiles[oldestProjectile].offset = 4;
      002131 21r90r00              7622 	ld	hl, #_oldestProjectile
      002134 4E                    7623 	ld	c, (hl)
      002135 06 00                 7624 	ld	b, #0x00
      002137 69                    7625 	ld	l, c
      002138 60                    7626 	ld	h, b
      002139 29                    7627 	add	hl, hl
      00213A 09                    7628 	add	hl, bc
      00213B 29                    7629 	add	hl, hl
      00213C 29                    7630 	add	hl, hl
      00213D 01rA0r00              7631 	ld	bc,#_projectiles
      002140 09                    7632 	add	hl,bc
      002141 01 04 00              7633 	ld	bc, #0x0004
      002144 09                    7634 	add	hl, bc
      002145 36 04                 7635 	ld	(hl), #0x04
      002147 C3r1Cr25              7636 	jp	00141$
      00214A                       7637 00115$:
                                   7638 ;src/main.c:836: set_sprite_prop(30+oldestProjectile, 0); 
                                   7639 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00214A 26 00                 7640 	ld	h, #0x00
                                   7641 ;	spillPairReg hl
                                   7642 ;	spillPairReg hl
      00214C 69                    7643 	ld	l, c
      00214D 29                    7644 	add	hl, hl
      00214E 29                    7645 	add	hl, hl
      00214F 11r00r00              7646 	ld	de, #_shadow_OAM
      002152 19                    7647 	add	hl, de
      002153 23                    7648 	inc	hl
      002154 23                    7649 	inc	hl
      002155 23                    7650 	inc	hl
      002156 36 00                 7651 	ld	(hl), #0x00
                                   7652 ;src/main.c:837: projectiles[oldestProjectile].offset = 12;
      002158 21r90r00              7653 	ld	hl, #_oldestProjectile
      00215B 4E                    7654 	ld	c, (hl)
      00215C 06 00                 7655 	ld	b, #0x00
      00215E 69                    7656 	ld	l, c
      00215F 60                    7657 	ld	h, b
      002160 29                    7658 	add	hl, hl
      002161 09                    7659 	add	hl, bc
      002162 29                    7660 	add	hl, hl
      002163 29                    7661 	add	hl, hl
      002164 01rA0r00              7662 	ld	bc,#_projectiles
      002167 09                    7663 	add	hl,bc
      002168 01 04 00              7664 	ld	bc, #0x0004
      00216B 09                    7665 	add	hl, bc
      00216C 36 0C                 7666 	ld	(hl), #0x0c
      00216E C3r1Cr25              7667 	jp	00141$
      002171                       7668 00140$:
                                   7669 ;src/main.c:841: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   7670 ;src/main.c:840: else if (xDir != 0 && yDir == 0) {
      002171 FAr92r00              7671 	ld	a, (#_xDir)
      002174 B7                    7672 	or	a, a
      002175 CArB9r22              7673 	jp	Z, 00136$
      002178 FAr93r00              7674 	ld	a, (#_yDir)
      00217B B7                    7675 	or	a, a
      00217C C2rB9r22              7676 	jp	NZ, 00136$
                                   7677 ;src/main.c:841: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      00217F F8 04                 7678 	ldhl	sp,	#4
      002181 34                    7679 	inc	(hl)
      002182 34                    7680 	inc	(hl)
      002183 2B                    7681 	dec	hl
                                   7682 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002184 3A                    7683 	ld	a, (hl-)
      002185 22                    7684 	ld	(hl+), a
      002186 36 00                 7685 	ld	(hl), #0x00
      002188 3E 02                 7686 	ld	a, #0x02
      00218A                       7687 00260$:
      00218A F8 02                 7688 	ldhl	sp,	#2
      00218C CB 26                 7689 	sla	(hl)
      00218E 23                    7690 	inc	hl
      00218F CB 16                 7691 	rl	(hl)
      002191 3D                    7692 	dec	a
      002192 20 F6                 7693 	jr	NZ, 00260$
      002194 2B                    7694 	dec	hl
      002195 2A                    7695 	ld	a, (hl+)
      002196 5F                    7696 	ld	e, a
      002197 56                    7697 	ld	d, (hl)
      002198 21r00r00              7698 	ld	hl, #_shadow_OAM
      00219B 19                    7699 	add	hl, de
      00219C 33                    7700 	inc	sp
      00219D 33                    7701 	inc	sp
      00219E 5D                    7702 	ld	e, l
      00219F 54                    7703 	ld	d, h
      0021A0 D5                    7704 	push	de
      0021A1 21 02 00              7705 	ld	hl, #0x0002
      0021A4 19                    7706 	add	hl, de
      0021A5 E5                    7707 	push	hl
      0021A6 7D                    7708 	ld	a, l
      0021A7 F8 04                 7709 	ldhl	sp,	#4
      0021A9 77                    7710 	ld	(hl), a
      0021AA E1                    7711 	pop	hl
      0021AB 7C                    7712 	ld	a, h
      0021AC F8 03                 7713 	ldhl	sp,	#3
      0021AE 32                    7714 	ld	(hl-), a
      0021AF 2A                    7715 	ld	a, (hl+)
      0021B0 5F                    7716 	ld	e, a
      0021B1 2A                    7717 	ld	a, (hl+)
      0021B2 57                    7718 	ld	d, a
      0021B3 7E                    7719 	ld	a, (hl)
      0021B4 12                    7720 	ld	(de), a
                                   7721 ;src/main.c:794: oldestProjectile += 1;
      0021B5 FAr90r00              7722 	ld	a, (#_oldestProjectile)
      0021B8 F8 04                 7723 	ldhl	sp,	#4
      0021BA 77                    7724 	ld	(hl), a
                                   7725 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0021BB 7E                    7726 	ld	a, (hl)
      0021BC C6 1E                 7727 	add	a, #0x1e
      0021BE 77                    7728 	ld	(hl), a
                                   7729 ;src/main.c:842: if (xDir == 1) {
      0021BF FAr92r00              7730 	ld	a, (#_xDir)
      0021C2 3D                    7731 	dec	a
      0021C3 20 7A                 7732 	jr	NZ, 00118$
                                   7733 ;src/main.c:843: set_sprite_prop(30+oldestProjectile, 0);
      0021C5 F8 04                 7734 	ldhl	sp,	#4
                                   7735 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0021C7 3A                    7736 	ld	a, (hl-)
      0021C8 22                    7737 	ld	(hl+), a
      0021C9 36 00                 7738 	ld	(hl), #0x00
      0021CB 3E 02                 7739 	ld	a, #0x02
      0021CD                       7740 00263$:
      0021CD F8 03                 7741 	ldhl	sp,	#3
      0021CF CB 26                 7742 	sla	(hl)
      0021D1 23                    7743 	inc	hl
      0021D2 CB 16                 7744 	rl	(hl)
      0021D4 3D                    7745 	dec	a
      0021D5 20 F6                 7746 	jr	NZ, 00263$
      0021D7 2B                    7747 	dec	hl
      0021D8 2A                    7748 	ld	a, (hl+)
      0021D9 5F                    7749 	ld	e, a
      0021DA 56                    7750 	ld	d, (hl)
      0021DB 21r00r00              7751 	ld	hl, #_shadow_OAM
      0021DE 19                    7752 	add	hl, de
      0021DF E5                    7753 	push	hl
      0021E0 7D                    7754 	ld	a, l
      0021E1 F8 03                 7755 	ldhl	sp,	#3
      0021E3 77                    7756 	ld	(hl), a
      0021E4 E1                    7757 	pop	hl
      0021E5 7C                    7758 	ld	a, h
      0021E6 F8 02                 7759 	ldhl	sp,	#2
      0021E8 32                    7760 	ld	(hl-), a
      0021E9 2A                    7761 	ld	a, (hl+)
      0021EA 5F                    7762 	ld	e, a
      0021EB 56                    7763 	ld	d, (hl)
      0021EC 21 03 00              7764 	ld	hl, #0x0003
      0021EF 19                    7765 	add	hl, de
      0021F0 E5                    7766 	push	hl
      0021F1 7D                    7767 	ld	a, l
      0021F2 F8 05                 7768 	ldhl	sp,	#5
      0021F4 77                    7769 	ld	(hl), a
      0021F5 E1                    7770 	pop	hl
      0021F6 7C                    7771 	ld	a, h
      0021F7 F8 04                 7772 	ldhl	sp,	#4
      0021F9 32                    7773 	ld	(hl-), a
      0021FA 2A                    7774 	ld	a,	(hl+)
      0021FB 66                    7775 	ld	h, (hl)
      0021FC 6F                    7776 	ld	l, a
      0021FD 36 00                 7777 	ld	(hl), #0x00
                                   7778 ;src/main.c:844: projectiles[oldestProjectile].offset = 12;
      0021FF 21r90r00              7779 	ld	hl, #_oldestProjectile
      002202 4E                    7780 	ld	c, (hl)
      002203 06 00                 7781 	ld	b, #0x00
      002205 69                    7782 	ld	l, c
      002206 60                    7783 	ld	h, b
      002207 29                    7784 	add	hl, hl
      002208 09                    7785 	add	hl, bc
      002209 29                    7786 	add	hl, hl
      00220A 29                    7787 	add	hl, hl
      00220B E5                    7788 	push	hl
      00220C 7D                    7789 	ld	a, l
      00220D F8 05                 7790 	ldhl	sp,	#5
      00220F 77                    7791 	ld	(hl), a
      002210 E1                    7792 	pop	hl
      002211 7C                    7793 	ld	a, h
      002212 F8 04                 7794 	ldhl	sp,	#4
      002214 32                    7795 	ld	(hl-), a
      002215 2A                    7796 	ld	a, (hl+)
      002216 5F                    7797 	ld	e, a
      002217 56                    7798 	ld	d, (hl)
      002218 21rA0r00              7799 	ld	hl, #_projectiles
      00221B 19                    7800 	add	hl, de
      00221C E5                    7801 	push	hl
      00221D 7D                    7802 	ld	a, l
      00221E F8 03                 7803 	ldhl	sp,	#3
      002220 77                    7804 	ld	(hl), a
      002221 E1                    7805 	pop	hl
      002222 7C                    7806 	ld	a, h
      002223 F8 02                 7807 	ldhl	sp,	#2
      002225 32                    7808 	ld	(hl-), a
      002226 2A                    7809 	ld	a, (hl+)
      002227 5F                    7810 	ld	e, a
      002228 56                    7811 	ld	d, (hl)
      002229 21 04 00              7812 	ld	hl, #0x0004
      00222C 19                    7813 	add	hl, de
      00222D E5                    7814 	push	hl
      00222E 7D                    7815 	ld	a, l
      00222F F8 05                 7816 	ldhl	sp,	#5
      002231 77                    7817 	ld	(hl), a
      002232 E1                    7818 	pop	hl
      002233 7C                    7819 	ld	a, h
      002234 F8 04                 7820 	ldhl	sp,	#4
      002236 32                    7821 	ld	(hl-), a
      002237 2A                    7822 	ld	a,	(hl+)
      002238 66                    7823 	ld	h, (hl)
      002239 6F                    7824 	ld	l, a
      00223A 36 0C                 7825 	ld	(hl), #0x0c
      00223C C3r1Cr25              7826 	jp	00141$
      00223F                       7827 00118$:
                                   7828 ;src/main.c:847: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      00223F F8 04                 7829 	ldhl	sp,	#4
                                   7830 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002241 3A                    7831 	ld	a, (hl-)
      002242 22                    7832 	ld	(hl+), a
      002243 36 00                 7833 	ld	(hl), #0x00
      002245 3E 02                 7834 	ld	a, #0x02
      002247                       7835 00264$:
      002247 F8 03                 7836 	ldhl	sp,	#3
      002249 CB 26                 7837 	sla	(hl)
      00224B 23                    7838 	inc	hl
      00224C CB 16                 7839 	rl	(hl)
      00224E 3D                    7840 	dec	a
      00224F 20 F6                 7841 	jr	NZ, 00264$
      002251 2B                    7842 	dec	hl
      002252 2A                    7843 	ld	a, (hl+)
      002253 5F                    7844 	ld	e, a
      002254 56                    7845 	ld	d, (hl)
      002255 21r00r00              7846 	ld	hl, #_shadow_OAM
      002258 19                    7847 	add	hl, de
      002259 E5                    7848 	push	hl
      00225A 7D                    7849 	ld	a, l
      00225B F8 03                 7850 	ldhl	sp,	#3
      00225D 77                    7851 	ld	(hl), a
      00225E E1                    7852 	pop	hl
      00225F 7C                    7853 	ld	a, h
      002260 F8 02                 7854 	ldhl	sp,	#2
      002262 32                    7855 	ld	(hl-), a
      002263 2A                    7856 	ld	a, (hl+)
      002264 5F                    7857 	ld	e, a
      002265 56                    7858 	ld	d, (hl)
      002266 21 03 00              7859 	ld	hl, #0x0003
      002269 19                    7860 	add	hl, de
      00226A E5                    7861 	push	hl
      00226B 7D                    7862 	ld	a, l
      00226C F8 05                 7863 	ldhl	sp,	#5
      00226E 77                    7864 	ld	(hl), a
      00226F E1                    7865 	pop	hl
      002270 7C                    7866 	ld	a, h
      002271 F8 04                 7867 	ldhl	sp,	#4
      002273 32                    7868 	ld	(hl-), a
      002274 2A                    7869 	ld	a,	(hl+)
      002275 66                    7870 	ld	h, (hl)
      002276 6F                    7871 	ld	l, a
      002277 36 20                 7872 	ld	(hl), #0x20
                                   7873 ;src/main.c:848: projectiles[oldestProjectile].offset = 12;
      002279 21r90r00              7874 	ld	hl, #_oldestProjectile
      00227C 4E                    7875 	ld	c, (hl)
      00227D 06 00                 7876 	ld	b, #0x00
      00227F 69                    7877 	ld	l, c
      002280 60                    7878 	ld	h, b
      002281 29                    7879 	add	hl, hl
      002282 09                    7880 	add	hl, bc
      002283 29                    7881 	add	hl, hl
      002284 29                    7882 	add	hl, hl
      002285 E5                    7883 	push	hl
      002286 7D                    7884 	ld	a, l
      002287 F8 05                 7885 	ldhl	sp,	#5
      002289 77                    7886 	ld	(hl), a
      00228A E1                    7887 	pop	hl
      00228B 7C                    7888 	ld	a, h
      00228C F8 04                 7889 	ldhl	sp,	#4
      00228E 32                    7890 	ld	(hl-), a
      00228F 2A                    7891 	ld	a, (hl+)
      002290 5F                    7892 	ld	e, a
      002291 56                    7893 	ld	d, (hl)
      002292 21rA0r00              7894 	ld	hl, #_projectiles
      002295 19                    7895 	add	hl, de
      002296 E5                    7896 	push	hl
      002297 7D                    7897 	ld	a, l
      002298 F8 03                 7898 	ldhl	sp,	#3
      00229A 77                    7899 	ld	(hl), a
      00229B E1                    7900 	pop	hl
      00229C 7C                    7901 	ld	a, h
      00229D F8 02                 7902 	ldhl	sp,	#2
      00229F 32                    7903 	ld	(hl-), a
      0022A0 2A                    7904 	ld	a, (hl+)
      0022A1 5F                    7905 	ld	e, a
      0022A2 56                    7906 	ld	d, (hl)
      0022A3 21 04 00              7907 	ld	hl, #0x0004
      0022A6 19                    7908 	add	hl, de
      0022A7 E5                    7909 	push	hl
      0022A8 7D                    7910 	ld	a, l
      0022A9 F8 05                 7911 	ldhl	sp,	#5
      0022AB 77                    7912 	ld	(hl), a
      0022AC E1                    7913 	pop	hl
      0022AD 7C                    7914 	ld	a, h
      0022AE F8 04                 7915 	ldhl	sp,	#4
      0022B0 32                    7916 	ld	(hl-), a
      0022B1 2A                    7917 	ld	a,	(hl+)
      0022B2 66                    7918 	ld	h, (hl)
      0022B3 6F                    7919 	ld	l, a
      0022B4 36 0C                 7920 	ld	(hl), #0x0c
      0022B6 C3r1Cr25              7921 	jp	00141$
      0022B9                       7922 00136$:
                                   7923 ;src/main.c:852: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      0022B9 F8 04                 7924 	ldhl	sp,	#4
      0022BB 7E                    7925 	ld	a, (hl)
      0022BC C6 04                 7926 	add	a, #0x04
      0022BE F8 00                 7927 	ldhl	sp,	#0
      0022C0 77                    7928 	ld	(hl), a
      0022C1 F8 03                 7929 	ldhl	sp,	#3
                                   7930 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022C3 7E                    7931 	ld	a, (hl)
      0022C4 22                    7932 	ld	(hl+), a
      0022C5 36 00                 7933 	ld	(hl), #0x00
      0022C7 3E 02                 7934 	ld	a, #0x02
      0022C9                       7935 00265$:
      0022C9 F8 03                 7936 	ldhl	sp,	#3
      0022CB CB 26                 7937 	sla	(hl)
      0022CD 23                    7938 	inc	hl
      0022CE CB 16                 7939 	rl	(hl)
      0022D0 3D                    7940 	dec	a
      0022D1 20 F6                 7941 	jr	NZ, 00265$
      0022D3 2B                    7942 	dec	hl
      0022D4 2A                    7943 	ld	a, (hl+)
      0022D5 5F                    7944 	ld	e, a
      0022D6 56                    7945 	ld	d, (hl)
      0022D7 21r00r00              7946 	ld	hl, #_shadow_OAM
      0022DA 19                    7947 	add	hl, de
      0022DB E5                    7948 	push	hl
      0022DC 7D                    7949 	ld	a, l
      0022DD F8 03                 7950 	ldhl	sp,	#3
      0022DF 77                    7951 	ld	(hl), a
      0022E0 E1                    7952 	pop	hl
      0022E1 7C                    7953 	ld	a, h
      0022E2 F8 02                 7954 	ldhl	sp,	#2
      0022E4 32                    7955 	ld	(hl-), a
      0022E5 2A                    7956 	ld	a, (hl+)
      0022E6 5F                    7957 	ld	e, a
      0022E7 56                    7958 	ld	d, (hl)
      0022E8 21 02 00              7959 	ld	hl, #0x0002
      0022EB 19                    7960 	add	hl, de
      0022EC E5                    7961 	push	hl
      0022ED 7D                    7962 	ld	a, l
      0022EE F8 05                 7963 	ldhl	sp,	#5
      0022F0 77                    7964 	ld	(hl), a
      0022F1 E1                    7965 	pop	hl
      0022F2 7C                    7966 	ld	a, h
      0022F3 F8 04                 7967 	ldhl	sp,	#4
      0022F5 32                    7968 	ld	(hl-), a
      0022F6 2A                    7969 	ld	a, (hl+)
      0022F7 5F                    7970 	ld	e, a
      0022F8 56                    7971 	ld	d, (hl)
      0022F9 F8 00                 7972 	ldhl	sp,	#0
      0022FB 7E                    7973 	ld	a, (hl)
      0022FC 12                    7974 	ld	(de), a
                                   7975 ;src/main.c:853: if (xDir == 1 && yDir == -1) {
      0022FD FAr92r00              7976 	ld	a, (#_xDir)
      002300 3D                    7977 	dec	a
      002301 3E 01                 7978 	ld	a, #0x01
      002303 28 01                 7979 	jr	Z, 00267$
      002305 AF                    7980 	xor	a, a
      002306                       7981 00267$:
      002306 F8 04                 7982 	ldhl	sp,	#4
      002308 77                    7983 	ld	(hl), a
                                   7984 ;src/main.c:794: oldestProjectile += 1;
      002309 21r90r00              7985 	ld	hl, #_oldestProjectile
      00230C 4E                    7986 	ld	c, (hl)
                                   7987 ;src/main.c:853: if (xDir == 1 && yDir == -1) {
      00230D FAr93r00              7988 	ld	a, (#_yDir)
      002310 3C                    7989 	inc	a
      002311 3E 01                 7990 	ld	a, #0x01
      002313 28 01                 7991 	jr	Z, 00269$
      002315 AF                    7992 	xor	a, a
      002316                       7993 00269$:
      002316 F8 01                 7994 	ldhl	sp,	#1
                                   7995 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002318 22                    7996 	ld	(hl+), a
      002319 79                    7997 	ld	a, c
      00231A C6 1E                 7998 	add	a, #0x1e
                                   7999 ;src/main.c:853: if (xDir == 1 && yDir == -1) {
      00231C 22                    8000 	ld	(hl+), a
      00231D 23                    8001 	inc	hl
      00231E 7E                    8002 	ld	a, (hl)
      00231F B7                    8003 	or	a, a
      002320 CArA2r23              8004 	jp	Z, 00132$
      002323 F8 01                 8005 	ldhl	sp,	#1
      002325 7E                    8006 	ld	a, (hl)
      002326 B7                    8007 	or	a, a
      002327 28 79                 8008 	jr	Z, 00132$
                                   8009 ;src/main.c:854: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002329 23                    8010 	inc	hl
                                   8011 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00232A 2A                    8012 	ld	a, (hl+)
      00232B 22                    8013 	ld	(hl+), a
      00232C 36 00                 8014 	ld	(hl), #0x00
      00232E 3E 02                 8015 	ld	a, #0x02
      002330                       8016 00270$:
      002330 F8 03                 8017 	ldhl	sp,	#3
      002332 CB 26                 8018 	sla	(hl)
      002334 23                    8019 	inc	hl
      002335 CB 16                 8020 	rl	(hl)
      002337 3D                    8021 	dec	a
      002338 20 F6                 8022 	jr	NZ, 00270$
      00233A 2B                    8023 	dec	hl
      00233B 2A                    8024 	ld	a, (hl+)
      00233C 5F                    8025 	ld	e, a
      00233D 56                    8026 	ld	d, (hl)
      00233E 21r00r00              8027 	ld	hl, #_shadow_OAM
      002341 19                    8028 	add	hl, de
      002342 E5                    8029 	push	hl
      002343 7D                    8030 	ld	a, l
      002344 F8 03                 8031 	ldhl	sp,	#3
      002346 77                    8032 	ld	(hl), a
      002347 E1                    8033 	pop	hl
      002348 7C                    8034 	ld	a, h
      002349 F8 02                 8035 	ldhl	sp,	#2
      00234B 32                    8036 	ld	(hl-), a
      00234C 2A                    8037 	ld	a, (hl+)
      00234D 5F                    8038 	ld	e, a
      00234E 56                    8039 	ld	d, (hl)
      00234F 21 03 00              8040 	ld	hl, #0x0003
      002352 19                    8041 	add	hl, de
      002353 E5                    8042 	push	hl
      002354 7D                    8043 	ld	a, l
      002355 F8 05                 8044 	ldhl	sp,	#5
      002357 77                    8045 	ld	(hl), a
      002358 E1                    8046 	pop	hl
      002359 7C                    8047 	ld	a, h
      00235A F8 04                 8048 	ldhl	sp,	#4
      00235C 32                    8049 	ld	(hl-), a
      00235D 2A                    8050 	ld	a,	(hl+)
      00235E 66                    8051 	ld	h, (hl)
      00235F 6F                    8052 	ld	l, a
      002360 36 00                 8053 	ld	(hl), #0x00
                                   8054 ;src/main.c:855: projectiles[oldestProjectile].offset = 12;
      002362 21r90r00              8055 	ld	hl, #_oldestProjectile
      002365 4E                    8056 	ld	c, (hl)
      002366 06 00                 8057 	ld	b, #0x00
      002368 69                    8058 	ld	l, c
      002369 60                    8059 	ld	h, b
      00236A 29                    8060 	add	hl, hl
      00236B 09                    8061 	add	hl, bc
      00236C 29                    8062 	add	hl, hl
      00236D 29                    8063 	add	hl, hl
      00236E E5                    8064 	push	hl
      00236F 7D                    8065 	ld	a, l
      002370 F8 05                 8066 	ldhl	sp,	#5
      002372 77                    8067 	ld	(hl), a
      002373 E1                    8068 	pop	hl
      002374 7C                    8069 	ld	a, h
      002375 F8 04                 8070 	ldhl	sp,	#4
      002377 32                    8071 	ld	(hl-), a
      002378 2A                    8072 	ld	a, (hl+)
      002379 5F                    8073 	ld	e, a
      00237A 56                    8074 	ld	d, (hl)
      00237B 21rA0r00              8075 	ld	hl, #_projectiles
      00237E 19                    8076 	add	hl, de
      00237F E5                    8077 	push	hl
      002380 7D                    8078 	ld	a, l
      002381 F8 03                 8079 	ldhl	sp,	#3
      002383 77                    8080 	ld	(hl), a
      002384 E1                    8081 	pop	hl
      002385 7C                    8082 	ld	a, h
      002386 F8 02                 8083 	ldhl	sp,	#2
      002388 32                    8084 	ld	(hl-), a
      002389 2A                    8085 	ld	a, (hl+)
      00238A 5F                    8086 	ld	e, a
      00238B 56                    8087 	ld	d, (hl)
      00238C 21 04 00              8088 	ld	hl, #0x0004
      00238F 19                    8089 	add	hl, de
      002390 E5                    8090 	push	hl
      002391 7D                    8091 	ld	a, l
      002392 F8 05                 8092 	ldhl	sp,	#5
      002394 77                    8093 	ld	(hl), a
      002395 E1                    8094 	pop	hl
      002396 7C                    8095 	ld	a, h
      002397 F8 04                 8096 	ldhl	sp,	#4
      002399 32                    8097 	ld	(hl-), a
      00239A 2A                    8098 	ld	a,	(hl+)
      00239B 66                    8099 	ld	h, (hl)
      00239C 6F                    8100 	ld	l, a
      00239D 36 0C                 8101 	ld	(hl), #0x0c
      00239F C3r1Cr25              8102 	jp	00141$
      0023A2                       8103 00132$:
                                   8104 ;src/main.c:831: if (yDir == 1) {
      0023A2 FAr93r00              8105 	ld	a, (#_yDir)
      0023A5 3D                    8106 	dec	a
      0023A6 3E 01                 8107 	ld	a, #0x01
      0023A8 28 01                 8108 	jr	Z, 00272$
      0023AA AF                    8109 	xor	a, a
      0023AB                       8110 00272$:
      0023AB F8 03                 8111 	ldhl	sp,	#3
                                   8112 ;src/main.c:857: else if (xDir == 1 && yDir == 1) {
      0023AD 22                    8113 	ld	(hl+), a
      0023AE 7E                    8114 	ld	a, (hl)
      0023AF B7                    8115 	or	a, a
      0023B0 CAr31r24              8116 	jp	Z, 00128$
      0023B3 2B                    8117 	dec	hl
      0023B4 7E                    8118 	ld	a, (hl)
      0023B5 B7                    8119 	or	a, a
      0023B6 28 79                 8120 	jr	Z, 00128$
                                   8121 ;src/main.c:858: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      0023B8 2B                    8122 	dec	hl
                                   8123 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0023B9 2A                    8124 	ld	a, (hl+)
      0023BA 22                    8125 	ld	(hl+), a
      0023BB 36 00                 8126 	ld	(hl), #0x00
      0023BD 3E 02                 8127 	ld	a, #0x02
      0023BF                       8128 00273$:
      0023BF F8 03                 8129 	ldhl	sp,	#3
      0023C1 CB 26                 8130 	sla	(hl)
      0023C3 23                    8131 	inc	hl
      0023C4 CB 16                 8132 	rl	(hl)
      0023C6 3D                    8133 	dec	a
      0023C7 20 F6                 8134 	jr	NZ, 00273$
      0023C9 2B                    8135 	dec	hl
      0023CA 2A                    8136 	ld	a, (hl+)
      0023CB 5F                    8137 	ld	e, a
      0023CC 56                    8138 	ld	d, (hl)
      0023CD 21r00r00              8139 	ld	hl, #_shadow_OAM
      0023D0 19                    8140 	add	hl, de
      0023D1 E5                    8141 	push	hl
      0023D2 7D                    8142 	ld	a, l
      0023D3 F8 03                 8143 	ldhl	sp,	#3
      0023D5 77                    8144 	ld	(hl), a
      0023D6 E1                    8145 	pop	hl
      0023D7 7C                    8146 	ld	a, h
      0023D8 F8 02                 8147 	ldhl	sp,	#2
      0023DA 32                    8148 	ld	(hl-), a
      0023DB 2A                    8149 	ld	a, (hl+)
      0023DC 5F                    8150 	ld	e, a
      0023DD 56                    8151 	ld	d, (hl)
      0023DE 21 03 00              8152 	ld	hl, #0x0003
      0023E1 19                    8153 	add	hl, de
      0023E2 E5                    8154 	push	hl
      0023E3 7D                    8155 	ld	a, l
      0023E4 F8 05                 8156 	ldhl	sp,	#5
      0023E6 77                    8157 	ld	(hl), a
      0023E7 E1                    8158 	pop	hl
      0023E8 7C                    8159 	ld	a, h
      0023E9 F8 04                 8160 	ldhl	sp,	#4
      0023EB 32                    8161 	ld	(hl-), a
      0023EC 2A                    8162 	ld	a,	(hl+)
      0023ED 66                    8163 	ld	h, (hl)
      0023EE 6F                    8164 	ld	l, a
      0023EF 36 40                 8165 	ld	(hl), #0x40
                                   8166 ;src/main.c:859: projectiles[oldestProjectile].offset = 4;
      0023F1 21r90r00              8167 	ld	hl, #_oldestProjectile
      0023F4 4E                    8168 	ld	c, (hl)
      0023F5 06 00                 8169 	ld	b, #0x00
      0023F7 69                    8170 	ld	l, c
      0023F8 60                    8171 	ld	h, b
      0023F9 29                    8172 	add	hl, hl
      0023FA 09                    8173 	add	hl, bc
      0023FB 29                    8174 	add	hl, hl
      0023FC 29                    8175 	add	hl, hl
      0023FD E5                    8176 	push	hl
      0023FE 7D                    8177 	ld	a, l
      0023FF F8 05                 8178 	ldhl	sp,	#5
      002401 77                    8179 	ld	(hl), a
      002402 E1                    8180 	pop	hl
      002403 7C                    8181 	ld	a, h
      002404 F8 04                 8182 	ldhl	sp,	#4
      002406 32                    8183 	ld	(hl-), a
      002407 2A                    8184 	ld	a, (hl+)
      002408 5F                    8185 	ld	e, a
      002409 56                    8186 	ld	d, (hl)
      00240A 21rA0r00              8187 	ld	hl, #_projectiles
      00240D 19                    8188 	add	hl, de
      00240E E5                    8189 	push	hl
      00240F 7D                    8190 	ld	a, l
      002410 F8 03                 8191 	ldhl	sp,	#3
      002412 77                    8192 	ld	(hl), a
      002413 E1                    8193 	pop	hl
      002414 7C                    8194 	ld	a, h
      002415 F8 02                 8195 	ldhl	sp,	#2
      002417 32                    8196 	ld	(hl-), a
      002418 2A                    8197 	ld	a, (hl+)
      002419 5F                    8198 	ld	e, a
      00241A 56                    8199 	ld	d, (hl)
      00241B 21 04 00              8200 	ld	hl, #0x0004
      00241E 19                    8201 	add	hl, de
      00241F E5                    8202 	push	hl
      002420 7D                    8203 	ld	a, l
      002421 F8 05                 8204 	ldhl	sp,	#5
      002423 77                    8205 	ld	(hl), a
      002424 E1                    8206 	pop	hl
      002425 7C                    8207 	ld	a, h
      002426 F8 04                 8208 	ldhl	sp,	#4
      002428 32                    8209 	ld	(hl-), a
      002429 2A                    8210 	ld	a,	(hl+)
      00242A 66                    8211 	ld	h, (hl)
      00242B 6F                    8212 	ld	l, a
      00242C 36 04                 8213 	ld	(hl), #0x04
      00242E C3r1Cr25              8214 	jp	00141$
      002431                       8215 00128$:
                                   8216 ;src/main.c:861: else if (xDir == -1 && yDir == 1) {
      002431 FAr92r00              8217 	ld	a, (#_xDir)
      002434 3C                    8218 	inc	a
      002435 3E 01                 8219 	ld	a, #0x01
      002437 28 01                 8220 	jr	Z, 00275$
      002439 AF                    8221 	xor	a, a
      00243A                       8222 00275$:
      00243A F8 04                 8223 	ldhl	sp,	#4
      00243C 77                    8224 	ld	(hl), a
      00243D 7E                    8225 	ld	a, (hl)
      00243E B7                    8226 	or	a, a
      00243F CArBFr24              8227 	jp	Z, 00124$
      002442 2B                    8228 	dec	hl
      002443 7E                    8229 	ld	a, (hl)
      002444 B7                    8230 	or	a, a
      002445 28 78                 8231 	jr	Z, 00124$
                                   8232 ;src/main.c:862: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002447 2B                    8233 	dec	hl
                                   8234 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002448 2A                    8235 	ld	a, (hl+)
      002449 22                    8236 	ld	(hl+), a
      00244A 36 00                 8237 	ld	(hl), #0x00
      00244C 3E 02                 8238 	ld	a, #0x02
      00244E                       8239 00276$:
      00244E F8 03                 8240 	ldhl	sp,	#3
      002450 CB 26                 8241 	sla	(hl)
      002452 23                    8242 	inc	hl
      002453 CB 16                 8243 	rl	(hl)
      002455 3D                    8244 	dec	a
      002456 20 F6                 8245 	jr	NZ, 00276$
      002458 2B                    8246 	dec	hl
      002459 2A                    8247 	ld	a, (hl+)
      00245A 5F                    8248 	ld	e, a
      00245B 56                    8249 	ld	d, (hl)
      00245C 21r00r00              8250 	ld	hl, #_shadow_OAM
      00245F 19                    8251 	add	hl, de
      002460 E5                    8252 	push	hl
      002461 7D                    8253 	ld	a, l
      002462 F8 03                 8254 	ldhl	sp,	#3
      002464 77                    8255 	ld	(hl), a
      002465 E1                    8256 	pop	hl
      002466 7C                    8257 	ld	a, h
      002467 F8 02                 8258 	ldhl	sp,	#2
      002469 32                    8259 	ld	(hl-), a
      00246A 2A                    8260 	ld	a, (hl+)
      00246B 5F                    8261 	ld	e, a
      00246C 56                    8262 	ld	d, (hl)
      00246D 21 03 00              8263 	ld	hl, #0x0003
      002470 19                    8264 	add	hl, de
      002471 E5                    8265 	push	hl
      002472 7D                    8266 	ld	a, l
      002473 F8 05                 8267 	ldhl	sp,	#5
      002475 77                    8268 	ld	(hl), a
      002476 E1                    8269 	pop	hl
      002477 7C                    8270 	ld	a, h
      002478 F8 04                 8271 	ldhl	sp,	#4
      00247A 32                    8272 	ld	(hl-), a
      00247B 2A                    8273 	ld	a,	(hl+)
      00247C 66                    8274 	ld	h, (hl)
      00247D 6F                    8275 	ld	l, a
      00247E 36 60                 8276 	ld	(hl), #0x60
                                   8277 ;src/main.c:863: projectiles[oldestProjectile].offset = 4;
      002480 21r90r00              8278 	ld	hl, #_oldestProjectile
      002483 4E                    8279 	ld	c, (hl)
      002484 06 00                 8280 	ld	b, #0x00
      002486 69                    8281 	ld	l, c
      002487 60                    8282 	ld	h, b
      002488 29                    8283 	add	hl, hl
      002489 09                    8284 	add	hl, bc
      00248A 29                    8285 	add	hl, hl
      00248B 29                    8286 	add	hl, hl
      00248C E5                    8287 	push	hl
      00248D 7D                    8288 	ld	a, l
      00248E F8 05                 8289 	ldhl	sp,	#5
      002490 77                    8290 	ld	(hl), a
      002491 E1                    8291 	pop	hl
      002492 7C                    8292 	ld	a, h
      002493 F8 04                 8293 	ldhl	sp,	#4
      002495 32                    8294 	ld	(hl-), a
      002496 2A                    8295 	ld	a, (hl+)
      002497 5F                    8296 	ld	e, a
      002498 56                    8297 	ld	d, (hl)
      002499 21rA0r00              8298 	ld	hl, #_projectiles
      00249C 19                    8299 	add	hl, de
      00249D E5                    8300 	push	hl
      00249E 7D                    8301 	ld	a, l
      00249F F8 03                 8302 	ldhl	sp,	#3
      0024A1 77                    8303 	ld	(hl), a
      0024A2 E1                    8304 	pop	hl
      0024A3 7C                    8305 	ld	a, h
      0024A4 F8 02                 8306 	ldhl	sp,	#2
      0024A6 32                    8307 	ld	(hl-), a
      0024A7 2A                    8308 	ld	a, (hl+)
      0024A8 5F                    8309 	ld	e, a
      0024A9 56                    8310 	ld	d, (hl)
      0024AA 21 04 00              8311 	ld	hl, #0x0004
      0024AD 19                    8312 	add	hl, de
      0024AE E5                    8313 	push	hl
      0024AF 7D                    8314 	ld	a, l
      0024B0 F8 05                 8315 	ldhl	sp,	#5
      0024B2 77                    8316 	ld	(hl), a
      0024B3 E1                    8317 	pop	hl
      0024B4 7C                    8318 	ld	a, h
      0024B5 F8 04                 8319 	ldhl	sp,	#4
      0024B7 32                    8320 	ld	(hl-), a
      0024B8 2A                    8321 	ld	a,	(hl+)
      0024B9 66                    8322 	ld	h, (hl)
      0024BA 6F                    8323 	ld	l, a
      0024BB 36 04                 8324 	ld	(hl), #0x04
      0024BD 18 5D                 8325 	jr	00141$
      0024BF                       8326 00124$:
                                   8327 ;src/main.c:865: else if (xDir == -1 && yDir == -1) {
      0024BF F8 04                 8328 	ldhl	sp,	#4
      0024C1 7E                    8329 	ld	a, (hl)
      0024C2 B7                    8330 	or	a, a
      0024C3 28 57                 8331 	jr	Z, 00141$
      0024C5 F8 01                 8332 	ldhl	sp,	#1
      0024C7 7E                    8333 	ld	a, (hl)
      0024C8 B7                    8334 	or	a, a
      0024C9 28 51                 8335 	jr	Z, 00141$
                                   8336 ;src/main.c:866: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      0024CB 23                    8337 	inc	hl
                                   8338 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0024CC 2A                    8339 	ld	a, (hl+)
      0024CD 22                    8340 	ld	(hl+), a
      0024CE 36 00                 8341 	ld	(hl), #0x00
      0024D0 3E 02                 8342 	ld	a, #0x02
      0024D2                       8343 00277$:
      0024D2 F8 03                 8344 	ldhl	sp,	#3
      0024D4 CB 26                 8345 	sla	(hl)
      0024D6 23                    8346 	inc	hl
      0024D7 CB 16                 8347 	rl	(hl)
      0024D9 3D                    8348 	dec	a
      0024DA 20 F6                 8349 	jr	NZ, 00277$
      0024DC 2B                    8350 	dec	hl
      0024DD 2A                    8351 	ld	a, (hl+)
      0024DE 5F                    8352 	ld	e, a
      0024DF 56                    8353 	ld	d, (hl)
      0024E0 21r00r00              8354 	ld	hl, #_shadow_OAM
      0024E3 19                    8355 	add	hl, de
      0024E4 E5                    8356 	push	hl
      0024E5 7D                    8357 	ld	a, l
      0024E6 F8 03                 8358 	ldhl	sp,	#3
      0024E8 77                    8359 	ld	(hl), a
      0024E9 E1                    8360 	pop	hl
      0024EA 7C                    8361 	ld	a, h
      0024EB F8 02                 8362 	ldhl	sp,	#2
      0024ED 32                    8363 	ld	(hl-), a
      0024EE 2A                    8364 	ld	a, (hl+)
      0024EF 5F                    8365 	ld	e, a
      0024F0 56                    8366 	ld	d, (hl)
      0024F1 21 03 00              8367 	ld	hl, #0x0003
      0024F4 19                    8368 	add	hl, de
      0024F5 E5                    8369 	push	hl
      0024F6 7D                    8370 	ld	a, l
      0024F7 F8 05                 8371 	ldhl	sp,	#5
      0024F9 77                    8372 	ld	(hl), a
      0024FA E1                    8373 	pop	hl
      0024FB 7C                    8374 	ld	a, h
      0024FC F8 04                 8375 	ldhl	sp,	#4
      0024FE 32                    8376 	ld	(hl-), a
      0024FF 2A                    8377 	ld	a,	(hl+)
      002500 66                    8378 	ld	h, (hl)
      002501 6F                    8379 	ld	l, a
      002502 36 20                 8380 	ld	(hl), #0x20
                                   8381 ;src/main.c:867: projectiles[oldestProjectile].offset = 12;
      002504 21r90r00              8382 	ld	hl, #_oldestProjectile
      002507 4E                    8383 	ld	c, (hl)
      002508 06 00                 8384 	ld	b, #0x00
      00250A 69                    8385 	ld	l, c
      00250B 60                    8386 	ld	h, b
      00250C 29                    8387 	add	hl, hl
      00250D 09                    8388 	add	hl, bc
      00250E 29                    8389 	add	hl, hl
      00250F 29                    8390 	add	hl, hl
      002510 01rA0r00              8391 	ld	bc,#_projectiles
      002513 09                    8392 	add	hl,bc
      002514 4D                    8393 	ld	c, l
      002515 44                    8394 	ld	b, h
      002516 21 04 00              8395 	ld	hl, #0x0004
      002519 09                    8396 	add	hl, bc
      00251A 36 0C                 8397 	ld	(hl), #0x0c
      00251C                       8398 00141$:
                                   8399 ;src/main.c:871: fireCooldown = projectiles[oldestProjectile].delay;
      00251C 21r90r00              8400 	ld	hl, #_oldestProjectile
      00251F 4E                    8401 	ld	c, (hl)
      002520 06 00                 8402 	ld	b, #0x00
      002522 69                    8403 	ld	l, c
      002523 60                    8404 	ld	h, b
      002524 29                    8405 	add	hl, hl
      002525 09                    8406 	add	hl, bc
      002526 29                    8407 	add	hl, hl
      002527 29                    8408 	add	hl, hl
      002528 01rA0r00              8409 	ld	bc,#_projectiles
      00252B 09                    8410 	add	hl,bc
      00252C 4D                    8411 	ld	c, l
      00252D 44                    8412 	ld	b, h
      00252E 21 0A 00              8413 	ld	hl, #0x000a
      002531 09                    8414 	add	hl, bc
      002532 7E                    8415 	ld	a, (hl)
      002533 EAr91r00              8416 	ld	(#_fireCooldown),a
                                   8417 ;src/main.c:873: playSound(projectiles[oldestProjectile].type);
      002536 21 0B 00              8418 	ld	hl, #0x000b
      002539 09                    8419 	add	hl, bc
      00253A 7E                    8420 	ld	a, (hl)
      00253B F5                    8421 	push	af
      00253C 33                    8422 	inc	sp
      00253D CDr22r0C              8423 	call	_playSound
      002540 33                    8424 	inc	sp
      002541                       8425 00154$:
                                   8426 ;src/main.c:877: }
      002541 E8 05                 8427 	add	sp, #5
      002543 C9                    8428 	ret
                                   8429 ;src/main.c:880: void moveProjectiles() {
                                   8430 ;	---------------------------------
                                   8431 ; Function moveProjectiles
                                   8432 ; ---------------------------------
      002544                       8433 _moveProjectiles::
      002544 E8 F9                 8434 	add	sp, #-7
                                   8435 ;src/main.c:881: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002546 F8 06                 8436 	ldhl	sp,	#6
      002548 36 00                 8437 	ld	(hl), #0x00
      00254A                       8438 00112$:
      00254A 21r5Er08              8439 	ld	hl, #_PROJECTILECOUNT
      00254D 4E                    8440 	ld	c, (hl)
      00254E F8 06                 8441 	ldhl	sp,	#6
      002550 7E                    8442 	ld	a, (hl)
      002551 91                    8443 	sub	a, c
      002552 D2rA0r26              8444 	jp	NC, 00114$
                                   8445 ;src/main.c:882: projectiles[i].x -= xOverflow;
      002555 4E                    8446 	ld	c, (hl)
      002556 06 00                 8447 	ld	b, #0x00
      002558 69                    8448 	ld	l, c
      002559 60                    8449 	ld	h, b
      00255A 29                    8450 	add	hl, hl
      00255B 09                    8451 	add	hl, bc
      00255C 29                    8452 	add	hl, hl
      00255D 29                    8453 	add	hl, hl
      00255E 01rA0r00              8454 	ld	bc,#_projectiles
      002561 09                    8455 	add	hl,bc
      002562 33                    8456 	inc	sp
      002563 33                    8457 	inc	sp
      002564 5D                    8458 	ld	e, l
      002565 54                    8459 	ld	d, h
      002566 D5                    8460 	push	de
      002567 1A                    8461 	ld	a, (de)
      002568 4F                    8462 	ld	c, a
      002569 13                    8463 	inc	de
      00256A 1A                    8464 	ld	a, (de)
      00256B 47                    8465 	ld	b, a
      00256C 79                    8466 	ld	a, c
      00256D 21rA0r00              8467 	ld	hl, #_xOverflow
      002570 96                    8468 	sub	a, (hl)
      002571 23                    8469 	inc	hl
      002572 4F                    8470 	ld	c, a
      002573 78                    8471 	ld	a, b
      002574 9E                    8472 	sbc	a, (hl)
      002575 47                    8473 	ld	b, a
      002576 E1                    8474 	pop	hl
      002577 E5                    8475 	push	hl
      002578 79                    8476 	ld	a, c
      002579 22                    8477 	ld	(hl+), a
      00257A 70                    8478 	ld	(hl), b
                                   8479 ;src/main.c:883: projectiles[i].y -= yOverflow;
      00257B D1                    8480 	pop	de
      00257C D5                    8481 	push	de
      00257D 21 02 00              8482 	ld	hl, #0x0002
      002580 19                    8483 	add	hl, de
      002581 E5                    8484 	push	hl
      002582 7D                    8485 	ld	a, l
      002583 F8 04                 8486 	ldhl	sp,	#4
      002585 77                    8487 	ld	(hl), a
      002586 E1                    8488 	pop	hl
      002587 7C                    8489 	ld	a, h
      002588 F8 03                 8490 	ldhl	sp,	#3
      00258A 32                    8491 	ld	(hl-), a
      00258B 2A                    8492 	ld	a, (hl+)
      00258C 5F                    8493 	ld	e, a
      00258D 56                    8494 	ld	d, (hl)
      00258E 1A                    8495 	ld	a, (de)
      00258F 4F                    8496 	ld	c, a
      002590 13                    8497 	inc	de
      002591 1A                    8498 	ld	a, (de)
      002592 47                    8499 	ld	b, a
      002593 79                    8500 	ld	a, c
      002594 21rA2r00              8501 	ld	hl, #_yOverflow
      002597 96                    8502 	sub	a, (hl)
      002598 23                    8503 	inc	hl
      002599 4F                    8504 	ld	c, a
      00259A 78                    8505 	ld	a, b
      00259B 9E                    8506 	sbc	a, (hl)
      00259C 47                    8507 	ld	b, a
      00259D F8 02                 8508 	ldhl	sp,	#2
      00259F 2A                    8509 	ld	a,	(hl+)
      0025A0 66                    8510 	ld	h, (hl)
      0025A1 6F                    8511 	ld	l, a
      0025A2 79                    8512 	ld	a, c
      0025A3 22                    8513 	ld	(hl+), a
      0025A4 70                    8514 	ld	(hl), b
                                   8515 ;src/main.c:885: if (projectiles[i].active) {
      0025A5 D1                    8516 	pop	de
      0025A6 D5                    8517 	push	de
      0025A7 21 09 00              8518 	ld	hl, #0x0009
      0025AA 19                    8519 	add	hl, de
      0025AB 4D                    8520 	ld	c, l
      0025AC 44                    8521 	ld	b, h
      0025AD 0A                    8522 	ld	a, (bc)
      0025AE B7                    8523 	or	a, a
      0025AF CAr9Ar26              8524 	jp	Z, 00113$
                                   8525 ;src/main.c:886: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      0025B2 F8 02                 8526 	ldhl	sp,#2
      0025B4 2A                    8527 	ld	a, (hl+)
      0025B5 5F                    8528 	ld	e, a
      0025B6 56                    8529 	ld	d, (hl)
      0025B7 1A                    8530 	ld	a, (de)
      0025B8 4F                    8531 	ld	c, a
      0025B9 13                    8532 	inc	de
      0025BA 1A                    8533 	ld	a, (de)
      0025BB 47                    8534 	ld	b, a
      0025BC D1                    8535 	pop	de
      0025BD D5                    8536 	push	de
      0025BE 21 06 00              8537 	ld	hl, #0x0006
      0025C1 19                    8538 	add	hl, de
      0025C2 5D                    8539 	ld	e, l
      0025C3 54                    8540 	ld	d, h
      0025C4 1A                    8541 	ld	a, (de)
      0025C5 6F                    8542 	ld	l, a
                                   8543 ;	spillPairReg hl
                                   8544 ;	spillPairReg hl
      0025C6 07                    8545 	rlca
      0025C7 9F                    8546 	sbc	a, a
      0025C8 67                    8547 	ld	h, a
                                   8548 ;	spillPairReg hl
                                   8549 ;	spillPairReg hl
      0025C9 09                    8550 	add	hl, bc
      0025CA 4D                    8551 	ld	c, l
      0025CB 44                    8552 	ld	b, h
      0025CC F8 04                 8553 	ldhl	sp,	#4
      0025CE 79                    8554 	ld	a, c
      0025CF 22                    8555 	ld	(hl+), a
      0025D0 70                    8556 	ld	(hl), b
                                   8557 ;src/main.c:887: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      0025D1 D1                    8558 	pop	de
      0025D2 D5                    8559 	push	de
      0025D3 1A                    8560 	ld	a, (de)
      0025D4 4F                    8561 	ld	c, a
      0025D5 13                    8562 	inc	de
      0025D6 1A                    8563 	ld	a, (de)
      0025D7 47                    8564 	ld	b, a
      0025D8 D1                    8565 	pop	de
      0025D9 D5                    8566 	push	de
      0025DA 21 05 00              8567 	ld	hl, #0x0005
      0025DD 19                    8568 	add	hl, de
      0025DE 5D                    8569 	ld	e, l
      0025DF 54                    8570 	ld	d, h
      0025E0 1A                    8571 	ld	a, (de)
      0025E1 6F                    8572 	ld	l, a
                                   8573 ;	spillPairReg hl
                                   8574 ;	spillPairReg hl
      0025E2 07                    8575 	rlca
      0025E3 9F                    8576 	sbc	a, a
      0025E4 67                    8577 	ld	h, a
                                   8578 ;	spillPairReg hl
                                   8579 ;	spillPairReg hl
      0025E5 09                    8580 	add	hl, bc
      0025E6 4D                    8581 	ld	c, l
      0025E7 44                    8582 	ld	b, h
                                   8583 ;src/main.c:890: projectiles[i].y = newY;
      0025E8 F8 02                 8584 	ldhl	sp,#2
      0025EA 2A                    8585 	ld	a, (hl+)
      0025EB 5F                    8586 	ld	e, a
      0025EC 2A                    8587 	ld	a, (hl+)
      0025ED 57                    8588 	ld	d, a
      0025EE 2A                    8589 	ld	a, (hl+)
      0025EF 12                    8590 	ld	(de), a
      0025F0 13                    8591 	inc	de
      0025F1 7E                    8592 	ld	a, (hl)
      0025F2 12                    8593 	ld	(de), a
                                   8594 ;src/main.c:891: projectiles[i].x = newX;
      0025F3 E1                    8595 	pop	hl
      0025F4 E5                    8596 	push	hl
      0025F5 79                    8597 	ld	a, c
      0025F6 22                    8598 	ld	(hl+), a
      0025F7 70                    8599 	ld	(hl), b
                                   8600 ;src/main.c:895: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      0025F8 F8 04                 8601 	ldhl	sp,	#4
      0025FA 2A                    8602 	ld	a, (hl+)
      0025FB 77                    8603 	ld	(hl), a
      0025FC D1                    8604 	pop	de
      0025FD D5                    8605 	push	de
      0025FE 21 04 00              8606 	ld	hl, #0x0004
      002601 19                    8607 	add	hl, de
      002602 5D                    8608 	ld	e, l
      002603 54                    8609 	ld	d, h
      002604 1A                    8610 	ld	a, (de)
      002605 F8 05                 8611 	ldhl	sp,	#5
      002607 86                    8612 	add	a, (hl)
      002608 2B                    8613 	dec	hl
      002609 5F                    8614 	ld	e, a
      00260A 79                    8615 	ld	a, c
      00260B C6 04                 8616 	add	a, #0x04
      00260D 22                    8617 	ld	(hl+), a
      00260E 23                    8618 	inc	hl
      00260F 3A                    8619 	ld	a, (hl-)
      002610 C6 1E                 8620 	add	a, #0x1e
      002612 77                    8621 	ld	(hl), a
      002613 56                    8622 	ld	d, (hl)
                                   8623 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002614 26 00                 8624 	ld	h, #0x00
                                   8625 ;	spillPairReg hl
                                   8626 ;	spillPairReg hl
      002616 6A                    8627 	ld	l, d
      002617 29                    8628 	add	hl, hl
      002618 29                    8629 	add	hl, hl
      002619 D5                    8630 	push	de
      00261A 11r00r00              8631 	ld	de, #_shadow_OAM
      00261D 19                    8632 	add	hl, de
      00261E D1                    8633 	pop	de
                                   8634 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00261F 7B                    8635 	ld	a, e
      002620 22                    8636 	ld	(hl+), a
      002621 5D                    8637 	ld	e, l
      002622 54                    8638 	ld	d, h
      002623 F8 04                 8639 	ldhl	sp,	#4
      002625 7E                    8640 	ld	a, (hl)
      002626 12                    8641 	ld	(de), a
                                   8642 ;src/main.c:899: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002627 D1                    8643 	pop	de
      002628 D5                    8644 	push	de
      002629 1A                    8645 	ld	a, (de)
      00262A 6F                    8646 	ld	l, a
                                   8647 ;	spillPairReg hl
                                   8648 ;	spillPairReg hl
      00262B 13                    8649 	inc	de
      00262C 1A                    8650 	ld	a, (de)
      00262D 67                    8651 	ld	h, a
                                   8652 ;	spillPairReg hl
                                   8653 ;	spillPairReg hl
      00262E CB 78                 8654 	bit	7, b
      002630 20 44                 8655 	jr	NZ, 00101$
      002632 5C                    8656 	ld	e, h
      002633 16 00                 8657 	ld	d, #0x00
      002635 3E AA                 8658 	ld	a, #0xaa
      002637 BD                    8659 	cp	a, l
      002638 3E 00                 8660 	ld	a, #0x00
      00263A 9C                    8661 	sbc	a, h
      00263B CB 7B                 8662 	bit	7, e
      00263D 28 07                 8663 	jr	Z, 00147$
      00263F CB 7A                 8664 	bit	7, d
      002641 20 08                 8665 	jr	NZ, 00148$
      002643 BF                    8666 	cp	a, a
      002644 18 05                 8667 	jr	00148$
      002646                       8668 00147$:
      002646 CB 7A                 8669 	bit	7, d
      002648 28 01                 8670 	jr	Z, 00148$
      00264A 37                    8671 	scf
      00264B                       8672 00148$:
      00264B 38 29                 8673 	jr	C, 00101$
                                   8674 ;src/main.c:883: projectiles[i].y -= yOverflow;
      00264D F8 02                 8675 	ldhl	sp,#2
      00264F 2A                    8676 	ld	a, (hl+)
      002650 5F                    8677 	ld	e, a
      002651 56                    8678 	ld	d, (hl)
      002652 1A                    8679 	ld	a, (de)
      002653 4F                    8680 	ld	c, a
      002654 13                    8681 	inc	de
      002655 1A                    8682 	ld	a, (de)
                                   8683 ;src/main.c:899: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002656 47                    8684 	ld	b, a
      002657 CB 78                 8685 	bit	7, b
      002659 20 1B                 8686 	jr	NZ, 00101$
      00265B 58                    8687 	ld	e, b
      00265C 16 00                 8688 	ld	d, #0x00
      00265E 3E 9A                 8689 	ld	a, #0x9a
      002660 B9                    8690 	cp	a, c
      002661 3E 00                 8691 	ld	a, #0x00
      002663 98                    8692 	sbc	a, b
      002664 CB 7B                 8693 	bit	7, e
      002666 28 07                 8694 	jr	Z, 00149$
      002668 CB 7A                 8695 	bit	7, d
      00266A 20 08                 8696 	jr	NZ, 00150$
      00266C BF                    8697 	cp	a, a
      00266D 18 05                 8698 	jr	00150$
      00266F                       8699 00149$:
      00266F CB 7A                 8700 	bit	7, d
      002671 28 01                 8701 	jr	Z, 00150$
      002673 37                    8702 	scf
      002674                       8703 00150$:
      002674 30 24                 8704 	jr	NC, 00113$
      002676                       8705 00101$:
                                   8706 ;src/main.c:901: projectiles[i].active = 0;
      002676 F8 06                 8707 	ldhl	sp,	#6
      002678 4E                    8708 	ld	c, (hl)
      002679 06 00                 8709 	ld	b, #0x00
      00267B 69                    8710 	ld	l, c
      00267C 60                    8711 	ld	h, b
      00267D 29                    8712 	add	hl, hl
      00267E 09                    8713 	add	hl, bc
      00267F 29                    8714 	add	hl, hl
      002680 29                    8715 	add	hl, hl
      002681 11rA0r00              8716 	ld	de, #_projectiles
      002684 19                    8717 	add	hl, de
      002685 01 09 00              8718 	ld	bc, #0x0009
      002688 09                    8719 	add	hl, bc
      002689 36 00                 8720 	ld	(hl), #0x00
                                   8721 ;src/main.c:902: set_sprite_tile(30+i, 0x7f);
      00268B F8 05                 8722 	ldhl	sp,	#5
                                   8723 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00268D 6E                    8724 	ld	l, (hl)
                                   8725 ;	spillPairReg hl
                                   8726 ;	spillPairReg hl
      00268E 26 00                 8727 	ld	h, #0x00
                                   8728 ;	spillPairReg hl
                                   8729 ;	spillPairReg hl
      002690 29                    8730 	add	hl, hl
      002691 29                    8731 	add	hl, hl
      002692 11r00r00              8732 	ld	de, #_shadow_OAM
      002695 19                    8733 	add	hl, de
      002696 23                    8734 	inc	hl
      002697 23                    8735 	inc	hl
      002698 36 7F                 8736 	ld	(hl), #0x7f
                                   8737 ;src/main.c:902: set_sprite_tile(30+i, 0x7f);
      00269A                       8738 00113$:
                                   8739 ;src/main.c:881: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00269A F8 06                 8740 	ldhl	sp,	#6
      00269C 34                    8741 	inc	(hl)
      00269D C3r4Ar25              8742 	jp	00112$
      0026A0                       8743 00114$:
                                   8744 ;src/main.c:906: }
      0026A0 E8 07                 8745 	add	sp, #7
      0026A2 C9                    8746 	ret
                                   8747 ;src/main.c:908: void tickPickups() {
                                   8748 ;	---------------------------------
                                   8749 ; Function tickPickups
                                   8750 ; ---------------------------------
      0026A3                       8751 _tickPickups::
                                   8752 ;src/main.c:909: pickup.x -= xOverflow;
      0026A3 21rE1r00              8753 	ld	hl, #_pickup
      0026A6 2A                    8754 	ld	a, (hl+)
      0026A7 4F                    8755 	ld	c, a
      0026A8 46                    8756 	ld	b, (hl)
      0026A9 79                    8757 	ld	a, c
      0026AA 21rA0r00              8758 	ld	hl, #_xOverflow
      0026AD 96                    8759 	sub	a, (hl)
      0026AE 23                    8760 	inc	hl
      0026AF 4F                    8761 	ld	c, a
      0026B0 78                    8762 	ld	a, b
      0026B1 9E                    8763 	sbc	a, (hl)
      0026B2 47                    8764 	ld	b, a
      0026B3 21rE1r00              8765 	ld	hl, #_pickup
      0026B6 79                    8766 	ld	a, c
      0026B7 22                    8767 	ld	(hl+), a
      0026B8 70                    8768 	ld	(hl), b
                                   8769 ;src/main.c:910: pickup.y -= yOverflow;
      0026B9 21rE3r00              8770 	ld	hl, #(_pickup + 2)
      0026BC 2A                    8771 	ld	a, (hl+)
      0026BD 47                    8772 	ld	b, a
      0026BE 4E                    8773 	ld	c, (hl)
      0026BF 78                    8774 	ld	a, b
      0026C0 21rA2r00              8775 	ld	hl, #_yOverflow
      0026C3 96                    8776 	sub	a, (hl)
      0026C4 23                    8777 	inc	hl
      0026C5 47                    8778 	ld	b, a
      0026C6 79                    8779 	ld	a, c
      0026C7 9E                    8780 	sbc	a, (hl)
      0026C8 4F                    8781 	ld	c, a
      0026C9 21rE3r00              8782 	ld	hl, #(_pickup + 2)
      0026CC 78                    8783 	ld	a, b
      0026CD 22                    8784 	ld	(hl+), a
      0026CE 71                    8785 	ld	(hl), c
                                   8786 ;src/main.c:912: move_sprite(3, pickup.x , pickup.y);
      0026CF 21rE1r00              8787 	ld	hl, #_pickup
      0026D2 4E                    8788 	ld	c, (hl)
                                   8789 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0026D3 21r0Cr00              8790 	ld	hl, #(_shadow_OAM + 12)
                                   8791 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0026D6 78                    8792 	ld	a, b
      0026D7 22                    8793 	ld	(hl+), a
      0026D8 71                    8794 	ld	(hl), c
                                   8795 ;src/main.c:913: if (pickup.active) {
                                   8796 ;src/main.c:916: }
      0026D9 C9                    8797 	ret
                                   8798 ;src/main.c:918: void initEnemyOptions() {
                                   8799 ;	---------------------------------
                                   8800 ; Function initEnemyOptions
                                   8801 ; ---------------------------------
      0026DA                       8802 _initEnemyOptions::
                                   8803 ;src/main.c:919: enemyOptions[0] = blob;
      0026DA 11 10 00              8804 	ld	de, #0x0010
      0026DD D5                    8805 	push	de
      0026DE 11r10r00              8806 	ld	de, #_blob
      0026E1 D5                    8807 	push	de
      0026E2 11r00r00              8808 	ld	de, #_enemyOptions
      0026E5 D5                    8809 	push	de
      0026E6 CDr00r00              8810 	call	___memcpy
      0026E9 E8 06                 8811 	add	sp, #6
                                   8812 ;src/main.c:920: enemyOptions[1] = bomb;
      0026EB 11 10 00              8813 	ld	de, #0x0010
      0026EE D5                    8814 	push	de
      0026EF 11r20r00              8815 	ld	de, #_bomb
      0026F2 D5                    8816 	push	de
      0026F3 11r10r00              8817 	ld	de, #(_enemyOptions + 16)
      0026F6 D5                    8818 	push	de
      0026F7 CDr00r00              8819 	call	___memcpy
      0026FA E8 06                 8820 	add	sp, #6
                                   8821 ;src/main.c:921: enemyOptions[2] = miniship;
      0026FC 11 10 00              8822 	ld	de, #0x0010
      0026FF D5                    8823 	push	de
      002700 11r30r00              8824 	ld	de, #_miniship
      002703 D5                    8825 	push	de
      002704 11r20r00              8826 	ld	de, #(_enemyOptions + 32)
      002707 D5                    8827 	push	de
      002708 CDr00r00              8828 	call	___memcpy
      00270B E8 06                 8829 	add	sp, #6
                                   8830 ;src/main.c:922: enemyOptions[3] = shieldship;
      00270D 11 10 00              8831 	ld	de, #0x0010
      002710 D5                    8832 	push	de
      002711 11r50r00              8833 	ld	de, #_shieldship
      002714 D5                    8834 	push	de
      002715 11r30r00              8835 	ld	de, #(_enemyOptions + 48)
      002718 D5                    8836 	push	de
      002719 CDr00r00              8837 	call	___memcpy
      00271C E8 06                 8838 	add	sp, #6
                                   8839 ;src/main.c:924: enemyOptions[4] = bigblob;
      00271E 11 10 00              8840 	ld	de, #0x0010
      002721 D5                    8841 	push	de
      002722 11r40r00              8842 	ld	de, #_bigblob
      002725 D5                    8843 	push	de
      002726 11r40r00              8844 	ld	de, #(_enemyOptions + 64)
      002729 D5                    8845 	push	de
      00272A CDr00r00              8846 	call	___memcpy
      00272D E8 06                 8847 	add	sp, #6
                                   8848 ;src/main.c:925: }
      00272F C9                    8849 	ret
                                   8850 ;src/main.c:928: void initProjectiles() {
                                   8851 ;	---------------------------------
                                   8852 ; Function initProjectiles
                                   8853 ; ---------------------------------
      002730                       8854 _initProjectiles::
                                   8855 ;src/main.c:929: set_sprite_data(0x20, 17, ProjectileTiles); 
      002730 11rE8r05              8856 	ld	de, #_ProjectileTiles
      002733 D5                    8857 	push	de
      002734 21 20 11              8858 	ld	hl, #0x1120
      002737 E5                    8859 	push	hl
      002738 CDr00r00              8860 	call	_set_sprite_data
      00273B E8 04                 8861 	add	sp, #4
                                   8862 ;src/main.c:931: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00273D AF                    8863 	xor	a, a
      00273E                       8864 00103$:
      00273E 21r5Er08              8865 	ld	hl, #_PROJECTILECOUNT
      002741 4E                    8866 	ld	c, (hl)
      002742 B9                    8867 	cp	a, c
      002743 D0                    8868 	ret	NC
      002744 3C                    8869 	inc	a
                                   8870 ;src/main.c:935: }
      002745 18 F7                 8871 	jr	00103$
                                   8872 ;src/main.c:937: void initGame() {
                                   8873 ;	---------------------------------
                                   8874 ; Function initGame
                                   8875 ; ---------------------------------
      002747                       8876 _initGame::
                                   8877 ;src/main.c:940: xDir = 0;
      002747 21r92r00              8878 	ld	hl, #_xDir
      00274A 36 00                 8879 	ld	(hl), #0x00
                                   8880 ;src/main.c:941: yDir = -1;
      00274C 21r93r00              8881 	ld	hl, #_yDir
      00274F 36 FF                 8882 	ld	(hl), #0xff
                                   8883 ;src/main.c:942: xSpeed = 0;
      002751 21r94r00              8884 	ld	hl, #_xSpeed
      002754 36 00                 8885 	ld	(hl), #0x00
                                   8886 ;src/main.c:943: ySpeed = 0;
      002756 21r95r00              8887 	ld	hl, #_ySpeed
      002759 36 00                 8888 	ld	(hl), #0x00
                                   8889 ;src/main.c:946: playerX = 80<<5;
      00275B 21r96r00              8890 	ld	hl, #_playerX
      00275E 36 00                 8891 	ld	(hl), #0x00
      002760 23                    8892 	inc	hl
      002761 36 0A                 8893 	ld	(hl), #0x0a
                                   8894 ;src/main.c:947: playerY = 80<<5;
      002763 21r98r00              8895 	ld	hl, #_playerY
      002766 36 00                 8896 	ld	(hl), #0x00
      002768 23                    8897 	inc	hl
      002769 36 0A                 8898 	ld	(hl), #0x0a
                                   8899 ;src/main.c:949: playerDrawX = 80;
      00276B 21r9Ar00              8900 	ld	hl, #_playerDrawX
      00276E 36 50                 8901 	ld	(hl), #0x50
                                   8902 ;src/main.c:950: playerDrawY = 80;
      002770 21r9Br00              8903 	ld	hl, #_playerDrawY
      002773 36 50                 8904 	ld	(hl), #0x50
                                   8905 ;src/main.c:953: bgX = 0;
      002775 AF                    8906 	xor	a, a
      002776 21r9Cr00              8907 	ld	hl, #_bgX
      002779 22                    8908 	ld	(hl+), a
      00277A 77                    8909 	ld	(hl), a
                                   8910 ;src/main.c:954: bgY = 0;
      00277B AF                    8911 	xor	a, a
      00277C 21r9Er00              8912 	ld	hl, #_bgY
      00277F 22                    8913 	ld	(hl+), a
      002780 77                    8914 	ld	(hl), a
                                   8915 ;src/main.c:956: hull = maxHull;
      002781 FAr60r08              8916 	ld	a, (#_maxHull)
      002784 EArDDr00              8917 	ld	(#_hull),a
                                   8918 ;src/main.c:957: shield = maxShield;
      002787 FAr61r08              8919 	ld	a, (#_maxShield)
      00278A EArDEr00              8920 	ld	(#_shield),a
                                   8921 ;src/main.c:959: DISPLAY_ON;
      00278D F0r00                 8922 	ldh	a, (_LCDC_REG + 0)
      00278F F6 80                 8923 	or	a, #0x80
      002791 E0r00                 8924 	ldh	(_LCDC_REG + 0), a
                                   8925 ;src/main.c:960: SPRITES_8x16;
      002793 F0r00                 8926 	ldh	a, (_LCDC_REG + 0)
      002795 F6 04                 8927 	or	a, #0x04
      002797 E0r00                 8928 	ldh	(_LCDC_REG + 0), a
                                   8929 ;src/main.c:961: set_sprite_data(0, 12, Player1);
      002799 11r48r07              8930 	ld	de, #_Player1
      00279C D5                    8931 	push	de
      00279D 21 00 0C              8932 	ld	hl, #0xc00
      0027A0 E5                    8933 	push	hl
      0027A1 CDr00r00              8934 	call	_set_sprite_data
      0027A4 E8 04                 8935 	add	sp, #4
                                   8936 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0027A6 21r02r00              8937 	ld	hl, #(_shadow_OAM + 2)
      0027A9 36 00                 8938 	ld	(hl), #0x00
      0027AB 21r06r00              8939 	ld	hl, #(_shadow_OAM + 6)
      0027AE 36 02                 8940 	ld	(hl), #0x02
                                   8941 ;src/main.c:967: SHOW_SPRITES;
      0027B0 F0r00                 8942 	ldh	a, (_LCDC_REG + 0)
      0027B2 F6 02                 8943 	or	a, #0x02
      0027B4 E0r00                 8944 	ldh	(_LCDC_REG + 0), a
                                   8945 ;src/main.c:971: font_init();
      0027B6 CDr00r00              8946 	call	_font_init
                                   8947 ;src/main.c:973: min_font = font_load(font_min); // 36 tiles of characters
      0027B9 11r00r00              8948 	ld	de, #_font_min
      0027BC D5                    8949 	push	de
      0027BD CDr00r00              8950 	call	_font_load
      0027C0 E1                    8951 	pop	hl
      0027C1 21rDFr00              8952 	ld	hl, #_min_font
      0027C4 7B                    8953 	ld	a, e
      0027C5 22                    8954 	ld	(hl+), a
                                   8955 ;src/main.c:974: font_set(min_font);
      0027C6 7A                    8956 	ld	a, d
      0027C7 32                    8957 	ld	(hl-), a
      0027C8 2A                    8958 	ld	a, (hl+)
      0027C9 5F                    8959 	ld	e, a
      0027CA 56                    8960 	ld	d, (hl)
      0027CB D5                    8961 	push	de
      0027CC CDr00r00              8962 	call	_font_set
      0027CF E1                    8963 	pop	hl
                                   8964 ;src/main.c:975: set_win_tiles(1,0,4,1,hullabel);
      0027D0 11r00r00              8965 	ld	de, #_hullabel
      0027D3 D5                    8966 	push	de
      0027D4 21 04 01              8967 	ld	hl, #0x104
      0027D7 E5                    8968 	push	hl
      0027D8 21 01 00              8969 	ld	hl, #0x01
      0027DB E5                    8970 	push	hl
      0027DC CDr00r00              8971 	call	_set_win_tiles
      0027DF E8 06                 8972 	add	sp, #6
                                   8973 ;src/main.c:976: set_win_tiles(1,1,4,1,shieldlabel);
      0027E1 11r04r00              8974 	ld	de, #_shieldlabel
      0027E4 D5                    8975 	push	de
      0027E5 21 04 01              8976 	ld	hl, #0x104
      0027E8 E5                    8977 	push	hl
      0027E9 21 01 01              8978 	ld	hl, #0x101
      0027EC E5                    8979 	push	hl
      0027ED CDr00r00              8980 	call	_set_win_tiles
      0027F0 E8 06                 8981 	add	sp, #6
                                   8982 ;src/main.c:981: set_bkg_data(0x50,1,healthblock);
      0027F2 11r07r05              8983 	ld	de, #_healthblock
      0027F5 D5                    8984 	push	de
      0027F6 21 50 01              8985 	ld	hl, #0x150
      0027F9 E5                    8986 	push	hl
      0027FA CDr00r00              8987 	call	_set_bkg_data
      0027FD E8 04                 8988 	add	sp, #4
                                   8989 ;src/main.c:983: setHealthBar(0, hull);
      0027FF FArDDr00              8990 	ld	a, (#_hull)
      002802 67                    8991 	ld	h, a
      002803 2E 00                 8992 	ld	l, #0x00
      002805 E5                    8993 	push	hl
      002806 CDr62r08              8994 	call	_setHealthBar
      002809 E1                    8995 	pop	hl
                                   8996 ;src/main.c:984: setHealthBar(1, shield);
      00280A FArDEr00              8997 	ld	a, (#_shield)
      00280D 67                    8998 	ld	h, a
      00280E 2E 01                 8999 	ld	l, #0x01
      002810 E5                    9000 	push	hl
      002811 CDr62r08              9001 	call	_setHealthBar
      002814 E1                    9002 	pop	hl
                                   9003 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      002815 3E 07                 9004 	ld	a, #0x07
      002817 E0r00                 9005 	ldh	(_WX_REG + 0), a
      002819 3E 7E                 9006 	ld	a, #0x7e
      00281B E0r00                 9007 	ldh	(_WY_REG + 0), a
                                   9008 ;src/main.c:991: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      00281D 11r87r04              9009 	ld	de, #_backgroundtiles
      002820 D5                    9010 	push	de
      002821 21 25 08              9011 	ld	hl, #0x825
      002824 E5                    9012 	push	hl
      002825 CDr00r00              9013 	call	_set_bkg_data
      002828 E8 04                 9014 	add	sp, #4
                                   9015 ;src/main.c:992: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      00282A 11r87r00              9016 	ld	de, #_background1
      00282D D5                    9017 	push	de
      00282E 21 20 20              9018 	ld	hl, #0x2020
      002831 E5                    9019 	push	hl
      002832 AF                    9020 	xor	a, a
      002833 0F                    9021 	rrca
      002834 F5                    9022 	push	af
      002835 CDr00r00              9023 	call	_set_bkg_tiles
      002838 E8 06                 9024 	add	sp, #6
                                   9025 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00283A AF                    9026 	xor	a, a
      00283B E0r00                 9027 	ldh	(_SCX_REG + 0), a
      00283D AF                    9028 	xor	a, a
      00283E E0r00                 9029 	ldh	(_SCY_REG + 0), a
                                   9030 ;src/main.c:998: set_bkg_data(0x51, 18, ProjectileTiles);
      002840 11rE8r05              9031 	ld	de, #_ProjectileTiles
      002843 D5                    9032 	push	de
      002844 21 51 12              9033 	ld	hl, #0x1251
      002847 E5                    9034 	push	hl
      002848 CDr00r00              9035 	call	_set_bkg_data
      00284B E8 04                 9036 	add	sp, #4
                                   9037 ;src/main.c:1000: set_win_tiles(10, 0,4,1,weaponlabel);
      00284D 11r08r00              9038 	ld	de, #_weaponlabel
      002850 D5                    9039 	push	de
      002851 21 04 01              9040 	ld	hl, #0x104
      002854 E5                    9041 	push	hl
      002855 21 0A 00              9042 	ld	hl, #0x0a
      002858 E5                    9043 	push	hl
      002859 CDr00r00              9044 	call	_set_win_tiles
      00285C E8 06                 9045 	add	sp, #6
                                   9046 ;src/main.c:1001: set_win_tiles(10, 1,4,1,scorelabel);
      00285E 11r0Cr00              9047 	ld	de, #_scorelabel
      002861 D5                    9048 	push	de
      002862 21 04 01              9049 	ld	hl, #0x104
      002865 E5                    9050 	push	hl
      002866 21 0A 01              9051 	ld	hl, #0x10a
      002869 E5                    9052 	push	hl
      00286A CDr00r00              9053 	call	_set_win_tiles
      00286D E8 06                 9054 	add	sp, #6
                                   9055 ;src/main.c:1003: setGunIcon();
      00286F CDr78r1F              9056 	call	_setGunIcon
                                   9057 ;src/main.c:1004: SHOW_BKG;
      002872 F0r00                 9058 	ldh	a, (_LCDC_REG + 0)
      002874 F6 01                 9059 	or	a, #0x01
      002876 E0r00                 9060 	ldh	(_LCDC_REG + 0), a
                                   9061 ;src/main.c:1005: SHOW_WIN;;
      002878 F0r00                 9062 	ldh	a, (_LCDC_REG + 0)
      00287A F6 20                 9063 	or	a, #0x20
      00287C E0r00                 9064 	ldh	(_LCDC_REG + 0), a
                                   9065 ;src/main.c:1007: SCORE = MAKE_BCD(00000);
      00287E AF                    9066 	xor	a, a
      00287F 21rB2r00              9067 	ld	hl, #_SCORE
      002882 22                    9068 	ld	(hl+), a
      002883 22                    9069 	ld	(hl+), a
      002884 22                    9070 	ld	(hl+), a
      002885 77                    9071 	ld	(hl), a
                                   9072 ;src/main.c:1008: updateScore();
      002886 CDr73r09              9073 	call	_updateScore
                                   9074 ;src/main.c:1009: MISSILES = MAKE_BCD(1);
      002889 21rA8r00              9075 	ld	hl, #_MISSILES
      00288C 3E 01                 9076 	ld	a, #0x01
      00288E 22                    9077 	ld	(hl+), a
      00288F AF                    9078 	xor	a, a
      002890 22                    9079 	ld	(hl+), a
      002891 22                    9080 	ld	(hl+), a
      002892 77                    9081 	ld	(hl), a
                                   9082 ;src/main.c:1010: updateMissileCount(0);
      002893 AF                    9083 	xor	a, a
      002894 F5                    9084 	push	af
      002895 33                    9085 	inc	sp
      002896 CDr9Dr09              9086 	call	_updateMissileCount
      002899 33                    9087 	inc	sp
                                   9088 ;src/main.c:1011: set_win_tiles(17, 0,1,1,gunMap+2);
      00289A 11rAFr00              9089 	ld	de, #(_gunMap + 2)
      00289D D5                    9090 	push	de
      00289E 21 01 01              9091 	ld	hl, #0x101
      0028A1 E5                    9092 	push	hl
      0028A2 21 11 00              9093 	ld	hl, #0x11
      0028A5 E5                    9094 	push	hl
      0028A6 CDr00r00              9095 	call	_set_win_tiles
      0028A9 E8 06                 9096 	add	sp, #6
                                   9097 ;src/main.c:1015: pickup = ammo;
      0028AB 11 06 00              9098 	ld	de, #0x0006
      0028AE D5                    9099 	push	de
      0028AF 11r84r00              9100 	ld	de, #_ammo
      0028B2 D5                    9101 	push	de
      0028B3 11rE1r00              9102 	ld	de, #_pickup
      0028B6 D5                    9103 	push	de
      0028B7 CDr00r00              9104 	call	___memcpy
      0028BA E8 06                 9105 	add	sp, #6
                                   9106 ;src/main.c:1021: set_sprite_data(0x70, 4, Pickups);
      0028BC 11r08r07              9107 	ld	de, #_Pickups
      0028BF D5                    9108 	push	de
      0028C0 21 70 04              9109 	ld	hl, #0x470
      0028C3 E5                    9110 	push	hl
      0028C4 CDr00r00              9111 	call	_set_sprite_data
      0028C7 E8 04                 9112 	add	sp, #4
                                   9113 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0028C9 21r0Er00              9114 	ld	hl, #(_shadow_OAM + 14)
      0028CC 36 70                 9115 	ld	(hl), #0x70
                                   9116 ;src/main.c:1023: pickup.x = 100;
      0028CE 21rE1r00              9117 	ld	hl, #_pickup
      0028D1 3E 64                 9118 	ld	a, #0x64
      0028D3 22                    9119 	ld	(hl+), a
      0028D4 36 00                 9120 	ld	(hl), #0x00
                                   9121 ;src/main.c:1024: pickup.y = 80;
      0028D6 01rE3r00              9122 	ld	bc, #_pickup + 2
      0028D9 69                    9123 	ld	l, c
      0028DA 60                    9124 	ld	h, b
      0028DB 3E 50                 9125 	ld	a, #0x50
      0028DD 22                    9126 	ld	(hl+), a
      0028DE 36 00                 9127 	ld	(hl), #0x00
                                   9128 ;src/main.c:1025: move_sprite(3, pickup.x, pickup.y);
      0028E0 0A                    9129 	ld	a, (bc)
      0028E1 47                    9130 	ld	b, a
      0028E2 21rE1r00              9131 	ld	hl, #_pickup
      0028E5 4E                    9132 	ld	c, (hl)
                                   9133 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0028E6 21r0Cr00              9134 	ld	hl, #(_shadow_OAM + 12)
                                   9135 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0028E9 78                    9136 	ld	a, b
      0028EA 22                    9137 	ld	(hl+), a
      0028EB 71                    9138 	ld	(hl), c
                                   9139 ;src/main.c:1025: move_sprite(3, pickup.x, pickup.y);
                                   9140 ;src/main.c:1027: }
      0028EC C9                    9141 	ret
                                   9142 ;src/main.c:1029: void main(){
                                   9143 ;	---------------------------------
                                   9144 ; Function main
                                   9145 ; ---------------------------------
      0028ED                       9146 _main::
                                   9147 ;src/main.c:1032: initEnemyOptions();
      0028ED CDrDAr26              9148 	call	_initEnemyOptions
                                   9149 ;src/main.c:1035: STAT_REG = 0x45;
      0028F0 3E 45                 9150 	ld	a, #0x45
      0028F2 E0r00                 9151 	ldh	(_STAT_REG + 0), a
                                   9152 ;src/main.c:1036: LYC_REG = 0x7e; //line 126
      0028F4 3E 7E                 9153 	ld	a, #0x7e
      0028F6 E0r00                 9154 	ldh	(_LYC_REG + 0), a
                                   9155 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      0028F8 F3                    9156 	di
                                   9157 ;src/main.c:1038: add_LCD(interruptLCD);
      0028F9 11r00r00              9158 	ld	de, #_interruptLCD
      0028FC D5                    9159 	push	de
      0028FD CDr00r00              9160 	call	_add_LCD
      002900 33                    9161 	inc	sp
      002901 33                    9162 	inc	sp
                                   9163 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      002902 FB                    9164 	ei
                                   9165 ;src/main.c:1040: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      002903 3E 03                 9166 	ld	a, #0x03
      002905 F5                    9167 	push	af
      002906 33                    9168 	inc	sp
      002907 CDr00r00              9169 	call	_set_interrupts
      00290A 33                    9170 	inc	sp
                                   9171 ;src/main.c:1044: NR52_REG = 0x80; // sound on 
      00290B 3E 80                 9172 	ld	a, #0x80
      00290D E0r00                 9173 	ldh	(_NR52_REG + 0), a
                                   9174 ;src/main.c:1045: NR50_REG = 0x77; // volume
      00290F 3E 77                 9175 	ld	a, #0x77
      002911 E0r00                 9176 	ldh	(_NR50_REG + 0), a
                                   9177 ;src/main.c:1046: NR51_REG = 0xFF; // all channels
      002913 3E FF                 9178 	ld	a, #0xff
      002915 E0r00                 9179 	ldh	(_NR51_REG + 0), a
                                   9180 ;src/main.c:1050: waitpad(J_A);
      002917 3E 10                 9181 	ld	a, #0x10
      002919 F5                    9182 	push	af
      00291A 33                    9183 	inc	sp
      00291B CDr00r00              9184 	call	_waitpad
      00291E 33                    9185 	inc	sp
                                   9186 ;src/main.c:1051: uint16_t seed = LY_REG;
      00291F F0r00                 9187 	ldh	a, (_LY_REG + 0)
      002921 4F                    9188 	ld	c, a
      002922 06 00                 9189 	ld	b, #0x00
                                   9190 ;src/main.c:1052: seed |= (uint16_t)DIV_REG << 8;
      002924 F0r00                 9191 	ldh	a, (_DIV_REG + 0)
      002926 5F                    9192 	ld	e, a
      002927 AF                    9193 	xor	a, a
      002928 B1                    9194 	or	a, c
      002929 4F                    9195 	ld	c, a
      00292A 7B                    9196 	ld	a, e
      00292B B0                    9197 	or	a, b
      00292C 47                    9198 	ld	b, a
                                   9199 ;src/main.c:1053: initrand(seed);
      00292D C5                    9200 	push	bc
      00292E CDr00r00              9201 	call	_initrand
      002931 E1                    9202 	pop	hl
                                   9203 ;src/main.c:1058: initGame();
      002932 CDr47r27              9204 	call	_initGame
                                   9205 ;src/main.c:1059: initEnemies(1);
      002935 3E 01                 9206 	ld	a, #0x01
      002937 F5                    9207 	push	af
      002938 33                    9208 	inc	sp
      002939 CDr85r0C              9209 	call	_initEnemies
      00293C 33                    9210 	inc	sp
                                   9211 ;src/main.c:1060: initProjectiles();
      00293D CDr30r27              9212 	call	_initProjectiles
                                   9213 ;src/main.c:1062: while(1) {
      002940                       9214 00117$:
                                   9215 ;src/main.c:1063: SHOW_SPRITES;
      002940 F0r00                 9216 	ldh	a, (_LCDC_REG + 0)
      002942 F6 02                 9217 	or	a, #0x02
      002944 E0r00                 9218 	ldh	(_LCDC_REG + 0), a
                                   9219 ;src/main.c:1065: joydata = joypad(); // query for button states
      002946 CDr00r00              9220 	call	_joypad
      002949 21rDCr00              9221 	ld	hl, #_joydata
      00294C 73                    9222 	ld	(hl), e
                                   9223 ;src/main.c:1067: updateDirection(); // set player direction
      00294D CDrF8r09              9224 	call	_updateDirection
                                   9225 ;src/main.c:1070: move(); 
      002950 CDr9Fr16              9226 	call	_move
                                   9227 ;src/main.c:1072: updateEnemyPositions();
      002953 CDr30r0E              9228 	call	_updateEnemyPositions
                                   9229 ;src/main.c:1075: checkCollision(); 
      002956 CDr27r1C              9230 	call	_checkCollision
                                   9231 ;src/main.c:785: if (shield < maxShield) {
      002959 21r61r08              9232 	ld	hl, #_maxShield
      00295C 4E                    9233 	ld	c, (hl)
      00295D 59                    9234 	ld	e, c
      00295E 21rDEr00              9235 	ld	hl, #_shield
      002961 56                    9236 	ld	d, (hl)
      002962 7E                    9237 	ld	a, (hl)
      002963 91                    9238 	sub	a, c
      002964 CB 7B                 9239 	bit	7, e
      002966 28 07                 9240 	jr	Z, 00179$
      002968 CB 7A                 9241 	bit	7, d
      00296A 20 08                 9242 	jr	NZ, 00180$
      00296C BF                    9243 	cp	a, a
      00296D 18 05                 9244 	jr	00180$
      00296F                       9245 00179$:
      00296F CB 7A                 9246 	bit	7, d
      002971 28 01                 9247 	jr	Z, 00180$
      002973 37                    9248 	scf
      002974                       9249 00180$:
      002974 30 04                 9250 	jr	NC, 00125$
                                   9251 ;src/main.c:786: shield += 1;
      002976 21rDEr00              9252 	ld	hl, #_shield
      002979 34                    9253 	inc	(hl)
      00297A                       9254 00125$:
                                   9255 ;src/main.c:788: setHealthBar(0, hull);
      00297A FArDDr00              9256 	ld	a, (#_hull)
      00297D 67                    9257 	ld	h, a
      00297E 2E 00                 9258 	ld	l, #0x00
      002980 E5                    9259 	push	hl
      002981 CDr62r08              9260 	call	_setHealthBar
      002984 E1                    9261 	pop	hl
                                   9262 ;src/main.c:789: setHealthBar(1, shield);
      002985 FArDEr00              9263 	ld	a, (#_shield)
      002988 67                    9264 	ld	h, a
      002989 2E 01                 9265 	ld	l, #0x01
      00298B E5                    9266 	push	hl
      00298C CDr62r08              9267 	call	_setHealthBar
      00298F E1                    9268 	pop	hl
                                   9269 ;src/main.c:1080: if (joydata & J_B && fireCooldown == 0) {
      002990 FArDCr00              9270 	ld	a, (#_joydata)
      002993 CB 6F                 9271 	bit	5, a
      002995 28 09                 9272 	jr	Z, 00102$
      002997 FAr91r00              9273 	ld	a, (#_fireCooldown)
      00299A B7                    9274 	or	a, a
      00299B 20 03                 9275 	jr	NZ, 00102$
                                   9276 ;src/main.c:1081: fire();
      00299D CDrABr1F              9277 	call	_fire
      0029A0                       9278 00102$:
                                   9279 ;src/main.c:1083: if (fireCooldown > 0) {
      0029A0 21r91r00              9280 	ld	hl, #_fireCooldown
      0029A3 7E                    9281 	ld	a, (hl)
      0029A4 B7                    9282 	or	a, a
      0029A5 28 01                 9283 	jr	Z, 00105$
                                   9284 ;src/main.c:1084: --fireCooldown;
      0029A7 35                    9285 	dec	(hl)
      0029A8                       9286 00105$:
                                   9287 ;src/main.c:1087: if (joydata & J_SELECT && switchDelay == 0) {
      0029A8 FArDCr00              9288 	ld	a, (#_joydata)
      0029AB CB 77                 9289 	bit	6, a
      0029AD 28 24                 9290 	jr	Z, 00112$
      0029AF FArACr00              9291 	ld	a, (#_switchDelay)
      0029B2 B7                    9292 	or	a, a
      0029B3 20 1E                 9293 	jr	NZ, 00112$
                                   9294 ;src/main.c:1088: if (currentGun == 0) {
      0029B5 21rA6r00              9295 	ld	hl, #_currentGun
      0029B8 7E                    9296 	ld	a, (hl)
      0029B9 B7                    9297 	or	a, a
      0029BA 20 04                 9298 	jr	NZ, 00109$
                                   9299 ;src/main.c:1089: currentGun = 1;
      0029BC 36 01                 9300 	ld	(hl), #0x01
      0029BE 18 0B                 9301 	jr	00110$
      0029C0                       9302 00109$:
                                   9303 ;src/main.c:1091: else if (currentGun == 1) {
      0029C0 FArA6r00              9304 	ld	a, (#_currentGun)
      0029C3 3D                    9305 	dec	a
      0029C4 20 05                 9306 	jr	NZ, 00110$
                                   9307 ;src/main.c:1092: currentGun = 0;
      0029C6 21rA6r00              9308 	ld	hl, #_currentGun
      0029C9 36 00                 9309 	ld	(hl), #0x00
      0029CB                       9310 00110$:
                                   9311 ;src/main.c:1094: setGunIcon();
      0029CB CDr78r1F              9312 	call	_setGunIcon
                                   9313 ;src/main.c:1095: switchDelay = 30;
      0029CE 21rACr00              9314 	ld	hl, #_switchDelay
      0029D1 36 1E                 9315 	ld	(hl), #0x1e
      0029D3                       9316 00112$:
                                   9317 ;src/main.c:1097: if (switchDelay != 0) {
      0029D3 21rACr00              9318 	ld	hl, #_switchDelay
      0029D6 7E                    9319 	ld	a, (hl)
      0029D7 B7                    9320 	or	a, a
      0029D8 28 01                 9321 	jr	Z, 00115$
                                   9322 ;src/main.c:1098: switchDelay--;
      0029DA 35                    9323 	dec	(hl)
      0029DB                       9324 00115$:
                                   9325 ;src/main.c:1100: moveProjectiles();
      0029DB CDr44r25              9326 	call	_moveProjectiles
                                   9327 ;src/main.c:1101: tickPickups();
      0029DE CDrA3r26              9328 	call	_tickPickups
                                   9329 ;src/main.c:1106: SHOW_WIN;	
      0029E1 F0r00                 9330 	ldh	a, (_LCDC_REG + 0)
      0029E3 F6 20                 9331 	or	a, #0x20
      0029E5 E0r00                 9332 	ldh	(_LCDC_REG + 0), a
                                   9333 ;src/main.c:1107: wait_vbl_done(); // Idle until next frame
      0029E7 CDr00r00              9334 	call	_wait_vbl_done
                                   9335 ;src/main.c:1112: }
      0029EA C3r40r29              9336 	jp	00117$
                                   9337 	.area _CODE
                                   9338 	.area _INITIALIZER
      000000                       9339 __xinit__hullabel:
      000000 12                    9340 	.db #0x12	; 18
      000001 1F                    9341 	.db #0x1f	; 31
      000002 16                    9342 	.db #0x16	; 22
      000003 16                    9343 	.db #0x16	; 22
      000004                       9344 __xinit__shieldlabel:
      000004 1D                    9345 	.db #0x1d	; 29
      000005 12                    9346 	.db #0x12	; 18
      000006 16                    9347 	.db #0x16	; 22
      000007 0E                    9348 	.db #0x0e	; 14
      000008                       9349 __xinit__weaponlabel:
      000008 21                    9350 	.db #0x21	; 33
      000009 0F                    9351 	.db #0x0f	; 15
      00000A 1A                    9352 	.db #0x1a	; 26
      00000B 18                    9353 	.db #0x18	; 24
      00000C                       9354 __xinit__scorelabel:
      00000C 1D                    9355 	.db #0x1d	; 29
      00000D 0D                    9356 	.db #0x0d	; 13
      00000E 1C                    9357 	.db #0x1c	; 28
      00000F 0F                    9358 	.db #0x0f	; 15
      000010                       9359 __xinit__blob:
      000010 00 00                 9360 	.dw #0x0000
      000012 00 00                 9361 	.dw #0x0000
      000014 00                    9362 	.db #0x00	;  0
      000015 00                    9363 	.db #0x00	;  0
      000016 40                    9364 	.db #0x40	; 64
      000017 00                    9365 	.db #0x00	; 0
      000018 01                    9366 	.db #0x01	; 1
      000019 01                    9367 	.db #0x01	; 1
      00001A 01                    9368 	.db #0x01	; 1
      00001B 32                    9369 	.db #0x32	; 50	'2'
      00001C 03                    9370 	.db #0x03	;  3
      00001D 01                    9371 	.db #0x01	; 1
      00001E 00                    9372 	.db #0x00	;  0
      00001F 00                    9373 	.db #0x00	;  0
      000020                       9374 __xinit__bomb:
      000020 00 00                 9375 	.dw #0x0000
      000022 00 00                 9376 	.dw #0x0000
      000024 00                    9377 	.db #0x00	;  0
      000025 00                    9378 	.db #0x00	;  0
      000026 42                    9379 	.db #0x42	; 66	'B'
      000027 00                    9380 	.db #0x00	; 0
      000028 01                    9381 	.db #0x01	; 1
      000029 01                    9382 	.db #0x01	; 1
      00002A 01                    9383 	.db #0x01	; 1
      00002B 32                    9384 	.db #0x32	; 50	'2'
      00002C 05                    9385 	.db #0x05	;  5
      00002D 01                    9386 	.db #0x01	; 1
      00002E 00                    9387 	.db #0x00	;  0
      00002F 00                    9388 	.db #0x00	;  0
      000030                       9389 __xinit__miniship:
      000030 00 00                 9390 	.dw #0x0000
      000032 00 00                 9391 	.dw #0x0000
      000034 00                    9392 	.db #0x00	;  0
      000035 00                    9393 	.db #0x00	;  0
      000036 44                    9394 	.db #0x44	; 68	'D'
      000037 00                    9395 	.db #0x00	; 0
      000038 01                    9396 	.db #0x01	; 1
      000039 01                    9397 	.db #0x01	; 1
      00003A 01                    9398 	.db #0x01	; 1
      00003B 32                    9399 	.db #0x32	; 50	'2'
      00003C 05                    9400 	.db #0x05	;  5
      00003D 01                    9401 	.db #0x01	; 1
      00003E 00                    9402 	.db #0x00	;  0
      00003F 00                    9403 	.db #0x00	;  0
      000040                       9404 __xinit__bigblob:
      000040 00 00                 9405 	.dw #0x0000
      000042 00 00                 9406 	.dw #0x0000
      000044 00                    9407 	.db #0x00	;  0
      000045 00                    9408 	.db #0x00	;  0
      000046 50                    9409 	.db #0x50	; 80	'P'
      000047 52                    9410 	.db #0x52	; 82	'R'
      000048 02                    9411 	.db #0x02	; 2
      000049 01                    9412 	.db #0x01	; 1
      00004A 01                    9413 	.db #0x01	; 1
      00004B 32                    9414 	.db #0x32	; 50	'2'
      00004C 03                    9415 	.db #0x03	;  3
      00004D 01                    9416 	.db #0x01	; 1
      00004E 00                    9417 	.db #0x00	;  0
      00004F 00                    9418 	.db #0x00	;  0
      000050                       9419 __xinit__shieldship:
      000050 00 00                 9420 	.dw #0x0000
      000052 00 00                 9421 	.dw #0x0000
      000054 00                    9422 	.db #0x00	;  0
      000055 00                    9423 	.db #0x00	;  0
      000056 54                    9424 	.db #0x54	; 84	'T'
      000057 56                    9425 	.db #0x56	; 86	'V'
      000058 02                    9426 	.db #0x02	; 2
      000059 01                    9427 	.db #0x01	; 1
      00005A 01                    9428 	.db #0x01	; 1
      00005B 32                    9429 	.db #0x32	; 50	'2'
      00005C 03                    9430 	.db #0x03	;  3
      00005D 01                    9431 	.db #0x01	; 1
      00005E 00                    9432 	.db #0x00	;  0
      00005F 00                    9433 	.db #0x00	;  0
      000060                       9434 __xinit__singleGun:
      000060 00 00                 9435 	.dw #0x0000
      000062 00 00                 9436 	.dw #0x0000
      000064 00                    9437 	.db #0x00	;  0
      000065 00                    9438 	.db #0x00	;  0
      000066 FF                    9439 	.db #0xff	; -1
      000067 02                    9440 	.db #0x02	; 2
      000068 00                    9441 	.db #0x00	; 0
      000069 01                    9442 	.db #0x01	; 1
      00006A 0F                    9443 	.db #0x0f	; 15
      00006B 20                    9444 	.db #0x20	; 32
      00006C                       9445 __xinit__doubleGun:
      00006C 00 00                 9446 	.dw #0x0000
      00006E 00 00                 9447 	.dw #0x0000
      000070 00                    9448 	.db #0x00	;  0
      000071 00                    9449 	.db #0x00	;  0
      000072 FF                    9450 	.db #0xff	; -1
      000073 02                    9451 	.db #0x02	; 2
      000074 00                    9452 	.db #0x00	; 0
      000075 01                    9453 	.db #0x01	; 1
      000076 0F                    9454 	.db #0x0f	; 15
      000077 26                    9455 	.db #0x26	; 38
      000078                       9456 __xinit__missile:
      000078 00 00                 9457 	.dw #0x0000
      00007A 00 00                 9458 	.dw #0x0000
      00007C 00                    9459 	.db #0x00	;  0
      00007D 00                    9460 	.db #0x00	;  0
      00007E FF                    9461 	.db #0xff	; -1
      00007F 01                    9462 	.db #0x01	; 1
      000080 00                    9463 	.db #0x00	; 0
      000081 01                    9464 	.db #0x01	; 1
      000082 1E                    9465 	.db #0x1e	; 30
      000083 2C                    9466 	.db #0x2c	; 44
      000084                       9467 __xinit__ammo:
      000084 00 00                 9468 	.dw #0x0000
      000086 00 00                 9469 	.dw #0x0000
      000088 00                    9470 	.db #0x00	; 0
      000089 00                    9471 	.db #0x00	; 0
      00008A                       9472 __xinit__weapon:
      00008A 00 00                 9473 	.dw #0x0000
      00008C 00 00                 9474 	.dw #0x0000
      00008E 00                    9475 	.db #0x00	; 0
      00008F 00                    9476 	.db #0x00	; 0
      000090                       9477 __xinit__oldestProjectile:
      000090 00                    9478 	.db #0x00	; 0
      000091                       9479 __xinit__fireCooldown:
      000091 00                    9480 	.db #0x00	; 0
      000092                       9481 __xinit__xDir:
      000092 00                    9482 	.db #0x00	;  0
      000093                       9483 __xinit__yDir:
      000093 FF                    9484 	.db #0xff	; -1
      000094                       9485 __xinit__xSpeed:
      000094 00                    9486 	.db #0x00	;  0
      000095                       9487 __xinit__ySpeed:
      000095 00                    9488 	.db #0x00	;  0
      000096                       9489 __xinit__playerX:
      000096 00 0A                 9490 	.dw #0x0a00
      000098                       9491 __xinit__playerY:
      000098 00 0A                 9492 	.dw #0x0a00
      00009A                       9493 __xinit__playerDrawX:
      00009A 50                    9494 	.db #0x50	; 80	'P'
      00009B                       9495 __xinit__playerDrawY:
      00009B 50                    9496 	.db #0x50	; 80	'P'
      00009C                       9497 __xinit__bgX:
      00009C 00 00                 9498 	.dw #0x0000
      00009E                       9499 __xinit__bgY:
      00009E 00 00                 9500 	.dw #0x0000
      0000A0                       9501 __xinit__xOverflow:
      0000A0 00 00                 9502 	.dw #0x0000
      0000A2                       9503 __xinit__yOverflow:
      0000A2 00 00                 9504 	.dw #0x0000
      0000A4                       9505 __xinit__enemyCollisionCount:
      0000A4 00                    9506 	.db #0x00	; 0
      0000A5                       9507 __xinit__gunLevel:
      0000A5 00                    9508 	.db #0x00	; 0
      0000A6                       9509 __xinit__currentGun:
      0000A6 00                    9510 	.db #0x00	; 0
      0000A7                       9511 __xinit__missiles:
      0000A7 01                    9512 	.db #0x01	; 1
      0000A8                       9513 __xinit__MISSILES:
      0000A8 01 00 00 00           9514 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000AC                       9515 __xinit__switchDelay:
      0000AC 00                    9516 	.db #0x00	; 0
      0000AD                       9517 __xinit__gunMap:
      0000AD 53                    9518 	.db #0x53	; 83	'S'
      0000AE 5B                    9519 	.db #0x5b	; 91
      0000AF 61                    9520 	.db #0x61	; 97	'a'
      0000B0                       9521 __xinit__score:
      0000B0 00 00                 9522 	.dw #0x0000
      0000B2                       9523 __xinit__SCORE:
      0000B2 00 00 00 00           9524 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B6                       9525 __xinit__INCREMENT:
      0000B6 01 00 00 00           9526 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   9527 	.area _CABS (ABS)
