                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _moveProjectiles
                                     16 	.globl _fire
                                     17 	.globl _setGunIcon
                                     18 	.globl _checkCollision
                                     19 	.globl _takeDamage
                                     20 	.globl _move
                                     21 	.globl _updateEnemyPositions
                                     22 	.globl _initEnemies
                                     23 	.globl _playSound
                                     24 	.globl _updateDirection
                                     25 	.globl _incrementScore
                                     26 	.globl _updateMissileCount
                                     27 	.globl _updateScore
                                     28 	.globl _setHealthBar
                                     29 	.globl _interruptLCD
                                     30 	.globl _bcd2text
                                     31 	.globl _bcd_sub
                                     32 	.globl _bcd_add
                                     33 	.globl _rand
                                     34 	.globl _initrand
                                     35 	.globl _font_set
                                     36 	.globl _font_load
                                     37 	.globl _font_init
                                     38 	.globl _set_sprite_data
                                     39 	.globl _set_win_tiles
                                     40 	.globl _set_bkg_tiles
                                     41 	.globl _set_bkg_data
                                     42 	.globl _wait_vbl_done
                                     43 	.globl _set_interrupts
                                     44 	.globl _waitpad
                                     45 	.globl _joypad
                                     46 	.globl _add_LCD
                                     47 	.globl _INCREMENT
                                     48 	.globl _SCORE
                                     49 	.globl _score
                                     50 	.globl _gunMap
                                     51 	.globl _switchDelay
                                     52 	.globl _MISSILES
                                     53 	.globl _missiles
                                     54 	.globl _currentGun
                                     55 	.globl _gunLevel
                                     56 	.globl _enemyCollisionCount
                                     57 	.globl _yOverflow
                                     58 	.globl _xOverflow
                                     59 	.globl _bgY
                                     60 	.globl _bgX
                                     61 	.globl _playerDrawY
                                     62 	.globl _playerDrawX
                                     63 	.globl _playerY
                                     64 	.globl _playerX
                                     65 	.globl _ySpeed
                                     66 	.globl _xSpeed
                                     67 	.globl _yDir
                                     68 	.globl _xDir
                                     69 	.globl _fireCooldown
                                     70 	.globl _oldestProjectile
                                     71 	.globl _weapon
                                     72 	.globl _ammo
                                     73 	.globl _missile
                                     74 	.globl _doubleGun
                                     75 	.globl _singleGun
                                     76 	.globl _shieldship
                                     77 	.globl _bigblob
                                     78 	.globl _miniship
                                     79 	.globl _bomb
                                     80 	.globl _blob
                                     81 	.globl _scorelabel
                                     82 	.globl _weaponlabel
                                     83 	.globl _shieldlabel
                                     84 	.globl _hullabel
                                     85 	.globl _pickup
                                     86 	.globl _min_font
                                     87 	.globl _shield
                                     88 	.globl _hull
                                     89 	.globl _joydata
                                     90 	.globl _projectiles
                                     91 	.globl _enemies
                                     92 	.globl _enemyOptions
                                     93 	.globl _maxShield
                                     94 	.globl _maxHull
                                     95 	.globl _PLAYERSIZE
                                     96 	.globl _PROJECTILECOUNT
                                     97 	.globl _ySpawnPositions
                                     98 	.globl _xSpawnPositions
                                     99 	.globl _ENEMYCOUNT
                                    100 	.globl _EMPTYSPRITE
                                    101 	.globl _BLANK
                                    102 	.globl _BLANKSIZE
                                    103 	.globl _Player1
                                    104 	.globl _Upgrades
                                    105 	.globl _ProjectileTiles
                                    106 	.globl _largeenemies
                                    107 	.globl _enemy1
                                    108 	.globl _enemyOptionCount
                                    109 	.globl _healthblock
                                    110 	.globl _backgroundtiles
                                    111 	.globl _background1
                                    112 	.globl _cross
                                    113 ;--------------------------------------------------------
                                    114 ; special function registers
                                    115 ;--------------------------------------------------------
                                    116 ;--------------------------------------------------------
                                    117 ; ram data
                                    118 ;--------------------------------------------------------
                                    119 	.area _DATA
      000000                        120 _enemyOptions::
      000000                        121 	.ds 80
      000050                        122 _enemies::
      000050                        123 	.ds 80
      0000A0                        124 _projectiles::
      0000A0                        125 	.ds 60
      0000DC                        126 _joydata::
      0000DC                        127 	.ds 1
      0000DD                        128 _hull::
      0000DD                        129 	.ds 1
      0000DE                        130 _shield::
      0000DE                        131 	.ds 1
      0000DF                        132 _min_font::
      0000DF                        133 	.ds 2
      0000E1                        134 _pickup::
      0000E1                        135 	.ds 6
                                    136 ;--------------------------------------------------------
                                    137 ; ram data
                                    138 ;--------------------------------------------------------
                                    139 	.area _INITIALIZED
      000000                        140 _hullabel::
      000000                        141 	.ds 4
      000004                        142 _shieldlabel::
      000004                        143 	.ds 4
      000008                        144 _weaponlabel::
      000008                        145 	.ds 4
      00000C                        146 _scorelabel::
      00000C                        147 	.ds 4
      000010                        148 _blob::
      000010                        149 	.ds 16
      000020                        150 _bomb::
      000020                        151 	.ds 16
      000030                        152 _miniship::
      000030                        153 	.ds 16
      000040                        154 _bigblob::
      000040                        155 	.ds 16
      000050                        156 _shieldship::
      000050                        157 	.ds 16
      000060                        158 _singleGun::
      000060                        159 	.ds 12
      00006C                        160 _doubleGun::
      00006C                        161 	.ds 12
      000078                        162 _missile::
      000078                        163 	.ds 12
      000084                        164 _ammo::
      000084                        165 	.ds 6
      00008A                        166 _weapon::
      00008A                        167 	.ds 6
      000090                        168 _oldestProjectile::
      000090                        169 	.ds 1
      000091                        170 _fireCooldown::
      000091                        171 	.ds 1
      000092                        172 _xDir::
      000092                        173 	.ds 1
      000093                        174 _yDir::
      000093                        175 	.ds 1
      000094                        176 _xSpeed::
      000094                        177 	.ds 1
      000095                        178 _ySpeed::
      000095                        179 	.ds 1
      000096                        180 _playerX::
      000096                        181 	.ds 2
      000098                        182 _playerY::
      000098                        183 	.ds 2
      00009A                        184 _playerDrawX::
      00009A                        185 	.ds 1
      00009B                        186 _playerDrawY::
      00009B                        187 	.ds 1
      00009C                        188 _bgX::
      00009C                        189 	.ds 2
      00009E                        190 _bgY::
      00009E                        191 	.ds 2
      0000A0                        192 _xOverflow::
      0000A0                        193 	.ds 2
      0000A2                        194 _yOverflow::
      0000A2                        195 	.ds 2
      0000A4                        196 _enemyCollisionCount::
      0000A4                        197 	.ds 1
      0000A5                        198 _gunLevel::
      0000A5                        199 	.ds 1
      0000A6                        200 _currentGun::
      0000A6                        201 	.ds 1
      0000A7                        202 _missiles::
      0000A7                        203 	.ds 1
      0000A8                        204 _MISSILES::
      0000A8                        205 	.ds 4
      0000AC                        206 _switchDelay::
      0000AC                        207 	.ds 1
      0000AD                        208 _gunMap::
      0000AD                        209 	.ds 3
      0000B0                        210 _score::
      0000B0                        211 	.ds 2
      0000B2                        212 _SCORE::
      0000B2                        213 	.ds 4
      0000B6                        214 _INCREMENT::
      0000B6                        215 	.ds 4
                                    216 ;--------------------------------------------------------
                                    217 ; absolute external ram data
                                    218 ;--------------------------------------------------------
                                    219 	.area _DABS (ABS)
                                    220 ;--------------------------------------------------------
                                    221 ; global & static initialisations
                                    222 ;--------------------------------------------------------
                                    223 	.area _HOME
                                    224 	.area _GSINIT
                                    225 	.area _GSFINAL
                                    226 	.area _GSINIT
                                    227 ;--------------------------------------------------------
                                    228 ; Home
                                    229 ;--------------------------------------------------------
                                    230 	.area _HOME
                                    231 	.area _HOME
                                    232 ;--------------------------------------------------------
                                    233 ; code
                                    234 ;--------------------------------------------------------
                                    235 	.area _CODE
                                    236 ;src/main.c:113: void interruptLCD()
                                    237 ;	---------------------------------
                                    238 ; Function interruptLCD
                                    239 ; ---------------------------------
      000000                        240 _interruptLCD::
                                    241 ;src/main.c:115: HIDE_SPRITES;
      000000 F0r00                  242 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  243 	and	a, #0xfd
      000004 E0r00                  244 	ldh	(_LCDC_REG + 0), a
                                    245 ;src/main.c:116: }
      000006 C9                     246 	ret
      000007                        247 _cross:
      000007 18                     248 	.db #0x18	; 24
      000008 18                     249 	.db #0x18	; 24
      000009 18                     250 	.db #0x18	; 24
      00000A 18                     251 	.db #0x18	; 24
      00000B 3C                     252 	.db #0x3c	; 60
      00000C 3C                     253 	.db #0x3c	; 60
      00000D 3C                     254 	.db #0x3c	; 60
      00000E 3C                     255 	.db #0x3c	; 60
      00000F 7E                     256 	.db #0x7e	; 126
      000010 7E                     257 	.db #0x7e	; 126
      000011 7E                     258 	.db #0x7e	; 126
      000012 7E                     259 	.db #0x7e	; 126
      000013 FF                     260 	.db #0xff	; 255
      000014 FF                     261 	.db #0xff	; 255
      000015 FF                     262 	.db #0xff	; 255
      000016 FF                     263 	.db #0xff	; 255
      000017 0F                     264 	.db #0x0f	; 15
      000018 0F                     265 	.db #0x0f	; 15
      000019 3F                     266 	.db #0x3f	; 63
      00001A 3F                     267 	.db #0x3f	; 63
      00001B FF                     268 	.db #0xff	; 255
      00001C FF                     269 	.db #0xff	; 255
      00001D FF                     270 	.db #0xff	; 255
      00001E FF                     271 	.db #0xff	; 255
      00001F 7E                     272 	.db #0x7e	; 126
      000020 7E                     273 	.db #0x7e	; 126
      000021 3E                     274 	.db #0x3e	; 62
      000022 3E                     275 	.db #0x3e	; 62
      000023 1C                     276 	.db #0x1c	; 28
      000024 1C                     277 	.db #0x1c	; 28
      000025 0C                     278 	.db #0x0c	; 12
      000026 0C                     279 	.db #0x0c	; 12
      000027 C0                     280 	.db #0xc0	; 192
      000028 C0                     281 	.db #0xc0	; 192
      000029 F0                     282 	.db #0xf0	; 240
      00002A F0                     283 	.db #0xf0	; 240
      00002B FC                     284 	.db #0xfc	; 252
      00002C FC                     285 	.db #0xfc	; 252
      00002D FF                     286 	.db #0xff	; 255
      00002E FF                     287 	.db #0xff	; 255
      00002F FF                     288 	.db #0xff	; 255
      000030 FF                     289 	.db #0xff	; 255
      000031 FC                     290 	.db #0xfc	; 252
      000032 FC                     291 	.db #0xfc	; 252
      000033 F0                     292 	.db #0xf0	; 240
      000034 F0                     293 	.db #0xf0	; 240
      000035 C0                     294 	.db #0xc0	; 192
      000036 C0                     295 	.db #0xc0	; 192
      000037 0C                     296 	.db #0x0c	; 12
      000038 0C                     297 	.db #0x0c	; 12
      000039 1C                     298 	.db #0x1c	; 28
      00003A 1C                     299 	.db #0x1c	; 28
      00003B 3E                     300 	.db #0x3e	; 62
      00003C 3E                     301 	.db #0x3e	; 62
      00003D 7E                     302 	.db #0x7e	; 126
      00003E 7E                     303 	.db #0x7e	; 126
      00003F FF                     304 	.db #0xff	; 255
      000040 FF                     305 	.db #0xff	; 255
      000041 FF                     306 	.db #0xff	; 255
      000042 FF                     307 	.db #0xff	; 255
      000043 3F                     308 	.db #0x3f	; 63
      000044 3F                     309 	.db #0x3f	; 63
      000045 0F                     310 	.db #0x0f	; 15
      000046 0F                     311 	.db #0x0f	; 15
      000047 FF                     312 	.db #0xff	; 255
      000048 FF                     313 	.db #0xff	; 255
      000049 FF                     314 	.db #0xff	; 255
      00004A FF                     315 	.db #0xff	; 255
      00004B 7E                     316 	.db #0x7e	; 126
      00004C 7E                     317 	.db #0x7e	; 126
      00004D 7E                     318 	.db #0x7e	; 126
      00004E 7E                     319 	.db #0x7e	; 126
      00004F 3C                     320 	.db #0x3c	; 60
      000050 3C                     321 	.db #0x3c	; 60
      000051 3C                     322 	.db #0x3c	; 60
      000052 3C                     323 	.db #0x3c	; 60
      000053 18                     324 	.db #0x18	; 24
      000054 18                     325 	.db #0x18	; 24
      000055 18                     326 	.db #0x18	; 24
      000056 18                     327 	.db #0x18	; 24
      000057 30                     328 	.db #0x30	; 48	'0'
      000058 30                     329 	.db #0x30	; 48	'0'
      000059 38                     330 	.db #0x38	; 56	'8'
      00005A 38                     331 	.db #0x38	; 56	'8'
      00005B 7C                     332 	.db #0x7c	; 124
      00005C 7C                     333 	.db #0x7c	; 124
      00005D 7E                     334 	.db #0x7e	; 126
      00005E 7E                     335 	.db #0x7e	; 126
      00005F FF                     336 	.db #0xff	; 255
      000060 FF                     337 	.db #0xff	; 255
      000061 FF                     338 	.db #0xff	; 255
      000062 FF                     339 	.db #0xff	; 255
      000063 FC                     340 	.db #0xfc	; 252
      000064 FC                     341 	.db #0xfc	; 252
      000065 F0                     342 	.db #0xf0	; 240
      000066 F0                     343 	.db #0xf0	; 240
      000067 03                     344 	.db #0x03	; 3
      000068 03                     345 	.db #0x03	; 3
      000069 0F                     346 	.db #0x0f	; 15
      00006A 0F                     347 	.db #0x0f	; 15
      00006B 3F                     348 	.db #0x3f	; 63
      00006C 3F                     349 	.db #0x3f	; 63
      00006D FF                     350 	.db #0xff	; 255
      00006E FF                     351 	.db #0xff	; 255
      00006F FF                     352 	.db #0xff	; 255
      000070 FF                     353 	.db #0xff	; 255
      000071 3F                     354 	.db #0x3f	; 63
      000072 3F                     355 	.db #0x3f	; 63
      000073 0F                     356 	.db #0x0f	; 15
      000074 0F                     357 	.db #0x0f	; 15
      000075 03                     358 	.db #0x03	; 3
      000076 03                     359 	.db #0x03	; 3
      000077 F0                     360 	.db #0xf0	; 240
      000078 F0                     361 	.db #0xf0	; 240
      000079 FC                     362 	.db #0xfc	; 252
      00007A FC                     363 	.db #0xfc	; 252
      00007B FF                     364 	.db #0xff	; 255
      00007C FF                     365 	.db #0xff	; 255
      00007D FF                     366 	.db #0xff	; 255
      00007E FF                     367 	.db #0xff	; 255
      00007F 7E                     368 	.db #0x7e	; 126
      000080 7E                     369 	.db #0x7e	; 126
      000081 7C                     370 	.db #0x7c	; 124
      000082 7C                     371 	.db #0x7c	; 124
      000083 38                     372 	.db #0x38	; 56	'8'
      000084 38                     373 	.db #0x38	; 56	'8'
      000085 30                     374 	.db #0x30	; 48	'0'
      000086 30                     375 	.db #0x30	; 48	'0'
      000087                        376 _background1:
      000087 26                     377 	.db #0x26	; 38
      000088 26                     378 	.db #0x26	; 38
      000089 26                     379 	.db #0x26	; 38
      00008A 26                     380 	.db #0x26	; 38
      00008B 26                     381 	.db #0x26	; 38
      00008C 26                     382 	.db #0x26	; 38
      00008D 26                     383 	.db #0x26	; 38
      00008E 26                     384 	.db #0x26	; 38
      00008F 26                     385 	.db #0x26	; 38
      000090 26                     386 	.db #0x26	; 38
      000091 26                     387 	.db #0x26	; 38
      000092 2A                     388 	.db #0x2a	; 42
      000093 29                     389 	.db #0x29	; 41
      000094 26                     390 	.db #0x26	; 38
      000095 26                     391 	.db #0x26	; 38
      000096 26                     392 	.db #0x26	; 38
      000097 26                     393 	.db #0x26	; 38
      000098 26                     394 	.db #0x26	; 38
      000099 26                     395 	.db #0x26	; 38
      00009A 26                     396 	.db #0x26	; 38
      00009B 2C                     397 	.db #0x2c	; 44
      00009C 26                     398 	.db #0x26	; 38
      00009D 26                     399 	.db #0x26	; 38
      00009E 26                     400 	.db #0x26	; 38
      00009F 26                     401 	.db #0x26	; 38
      0000A0 26                     402 	.db #0x26	; 38
      0000A1 26                     403 	.db #0x26	; 38
      0000A2 26                     404 	.db #0x26	; 38
      0000A3 26                     405 	.db #0x26	; 38
      0000A4 26                     406 	.db #0x26	; 38
      0000A5 26                     407 	.db #0x26	; 38
      0000A6 26                     408 	.db #0x26	; 38
      0000A7 26                     409 	.db #0x26	; 38
      0000A8 2B                     410 	.db #0x2b	; 43
      0000A9 26                     411 	.db #0x26	; 38
      0000AA 26                     412 	.db #0x26	; 38
      0000AB 26                     413 	.db #0x26	; 38
      0000AC 26                     414 	.db #0x26	; 38
      0000AD 26                     415 	.db #0x26	; 38
      0000AE 26                     416 	.db #0x26	; 38
      0000AF 26                     417 	.db #0x26	; 38
      0000B0 26                     418 	.db #0x26	; 38
      0000B1 26                     419 	.db #0x26	; 38
      0000B2 26                     420 	.db #0x26	; 38
      0000B3 26                     421 	.db #0x26	; 38
      0000B4 26                     422 	.db #0x26	; 38
      0000B5 26                     423 	.db #0x26	; 38
      0000B6 26                     424 	.db #0x26	; 38
      0000B7 26                     425 	.db #0x26	; 38
      0000B8 26                     426 	.db #0x26	; 38
      0000B9 26                     427 	.db #0x26	; 38
      0000BA 26                     428 	.db #0x26	; 38
      0000BB 26                     429 	.db #0x26	; 38
      0000BC 26                     430 	.db #0x26	; 38
      0000BD 26                     431 	.db #0x26	; 38
      0000BE 26                     432 	.db #0x26	; 38
      0000BF 26                     433 	.db #0x26	; 38
      0000C0 26                     434 	.db #0x26	; 38
      0000C1 26                     435 	.db #0x26	; 38
      0000C2 26                     436 	.db #0x26	; 38
      0000C3 26                     437 	.db #0x26	; 38
      0000C4 26                     438 	.db #0x26	; 38
      0000C5 26                     439 	.db #0x26	; 38
      0000C6 26                     440 	.db #0x26	; 38
      0000C7 26                     441 	.db #0x26	; 38
      0000C8 26                     442 	.db #0x26	; 38
      0000C9 26                     443 	.db #0x26	; 38
      0000CA 26                     444 	.db #0x26	; 38
      0000CB 26                     445 	.db #0x26	; 38
      0000CC 26                     446 	.db #0x26	; 38
      0000CD 26                     447 	.db #0x26	; 38
      0000CE 26                     448 	.db #0x26	; 38
      0000CF 26                     449 	.db #0x26	; 38
      0000D0 26                     450 	.db #0x26	; 38
      0000D1 26                     451 	.db #0x26	; 38
      0000D2 26                     452 	.db #0x26	; 38
      0000D3 26                     453 	.db #0x26	; 38
      0000D4 26                     454 	.db #0x26	; 38
      0000D5 26                     455 	.db #0x26	; 38
      0000D6 26                     456 	.db #0x26	; 38
      0000D7 26                     457 	.db #0x26	; 38
      0000D8 26                     458 	.db #0x26	; 38
      0000D9 26                     459 	.db #0x26	; 38
      0000DA 26                     460 	.db #0x26	; 38
      0000DB 26                     461 	.db #0x26	; 38
      0000DC 26                     462 	.db #0x26	; 38
      0000DD 26                     463 	.db #0x26	; 38
      0000DE 26                     464 	.db #0x26	; 38
      0000DF 26                     465 	.db #0x26	; 38
      0000E0 26                     466 	.db #0x26	; 38
      0000E1 26                     467 	.db #0x26	; 38
      0000E2 26                     468 	.db #0x26	; 38
      0000E3 26                     469 	.db #0x26	; 38
      0000E4 26                     470 	.db #0x26	; 38
      0000E5 26                     471 	.db #0x26	; 38
      0000E6 26                     472 	.db #0x26	; 38
      0000E7 26                     473 	.db #0x26	; 38
      0000E8 26                     474 	.db #0x26	; 38
      0000E9 26                     475 	.db #0x26	; 38
      0000EA 26                     476 	.db #0x26	; 38
      0000EB 26                     477 	.db #0x26	; 38
      0000EC 26                     478 	.db #0x26	; 38
      0000ED 26                     479 	.db #0x26	; 38
      0000EE 26                     480 	.db #0x26	; 38
      0000EF 26                     481 	.db #0x26	; 38
      0000F0 26                     482 	.db #0x26	; 38
      0000F1 26                     483 	.db #0x26	; 38
      0000F2 26                     484 	.db #0x26	; 38
      0000F3 26                     485 	.db #0x26	; 38
      0000F4 26                     486 	.db #0x26	; 38
      0000F5 26                     487 	.db #0x26	; 38
      0000F6 26                     488 	.db #0x26	; 38
      0000F7 26                     489 	.db #0x26	; 38
      0000F8 2B                     490 	.db #0x2b	; 43
      0000F9 26                     491 	.db #0x26	; 38
      0000FA 26                     492 	.db #0x26	; 38
      0000FB 26                     493 	.db #0x26	; 38
      0000FC 26                     494 	.db #0x26	; 38
      0000FD 26                     495 	.db #0x26	; 38
      0000FE 26                     496 	.db #0x26	; 38
      0000FF 2B                     497 	.db #0x2b	; 43
      000100 26                     498 	.db #0x26	; 38
      000101 26                     499 	.db #0x26	; 38
      000102 26                     500 	.db #0x26	; 38
      000103 26                     501 	.db #0x26	; 38
      000104 26                     502 	.db #0x26	; 38
      000105 26                     503 	.db #0x26	; 38
      000106 26                     504 	.db #0x26	; 38
      000107 26                     505 	.db #0x26	; 38
      000108 26                     506 	.db #0x26	; 38
      000109 26                     507 	.db #0x26	; 38
      00010A 26                     508 	.db #0x26	; 38
      00010B 26                     509 	.db #0x26	; 38
      00010C 2B                     510 	.db #0x2b	; 43
      00010D 26                     511 	.db #0x26	; 38
      00010E 26                     512 	.db #0x26	; 38
      00010F 26                     513 	.db #0x26	; 38
      000110 26                     514 	.db #0x26	; 38
      000111 26                     515 	.db #0x26	; 38
      000112 26                     516 	.db #0x26	; 38
      000113 26                     517 	.db #0x26	; 38
      000114 2C                     518 	.db #0x2c	; 44
      000115 26                     519 	.db #0x26	; 38
      000116 26                     520 	.db #0x26	; 38
      000117 26                     521 	.db #0x26	; 38
      000118 26                     522 	.db #0x26	; 38
      000119 26                     523 	.db #0x26	; 38
      00011A 26                     524 	.db #0x26	; 38
      00011B 26                     525 	.db #0x26	; 38
      00011C 26                     526 	.db #0x26	; 38
      00011D 26                     527 	.db #0x26	; 38
      00011E 26                     528 	.db #0x26	; 38
      00011F 26                     529 	.db #0x26	; 38
      000120 26                     530 	.db #0x26	; 38
      000121 26                     531 	.db #0x26	; 38
      000122 26                     532 	.db #0x26	; 38
      000123 26                     533 	.db #0x26	; 38
      000124 26                     534 	.db #0x26	; 38
      000125 26                     535 	.db #0x26	; 38
      000126 26                     536 	.db #0x26	; 38
      000127 26                     537 	.db #0x26	; 38
      000128 26                     538 	.db #0x26	; 38
      000129 2C                     539 	.db #0x2c	; 44
      00012A 26                     540 	.db #0x26	; 38
      00012B 26                     541 	.db #0x26	; 38
      00012C 26                     542 	.db #0x26	; 38
      00012D 26                     543 	.db #0x26	; 38
      00012E 25                     544 	.db #0x25	; 37
      00012F 26                     545 	.db #0x26	; 38
      000130 26                     546 	.db #0x26	; 38
      000131 26                     547 	.db #0x26	; 38
      000132 26                     548 	.db #0x26	; 38
      000133 26                     549 	.db #0x26	; 38
      000134 26                     550 	.db #0x26	; 38
      000135 26                     551 	.db #0x26	; 38
      000136 26                     552 	.db #0x26	; 38
      000137 26                     553 	.db #0x26	; 38
      000138 26                     554 	.db #0x26	; 38
      000139 26                     555 	.db #0x26	; 38
      00013A 26                     556 	.db #0x26	; 38
      00013B 26                     557 	.db #0x26	; 38
      00013C 2C                     558 	.db #0x2c	; 44
      00013D 26                     559 	.db #0x26	; 38
      00013E 26                     560 	.db #0x26	; 38
      00013F 26                     561 	.db #0x26	; 38
      000140 26                     562 	.db #0x26	; 38
      000141 26                     563 	.db #0x26	; 38
      000142 26                     564 	.db #0x26	; 38
      000143 26                     565 	.db #0x26	; 38
      000144 2B                     566 	.db #0x2b	; 43
      000145 26                     567 	.db #0x26	; 38
      000146 26                     568 	.db #0x26	; 38
      000147 26                     569 	.db #0x26	; 38
      000148 26                     570 	.db #0x26	; 38
      000149 26                     571 	.db #0x26	; 38
      00014A 26                     572 	.db #0x26	; 38
      00014B 26                     573 	.db #0x26	; 38
      00014C 26                     574 	.db #0x26	; 38
      00014D 26                     575 	.db #0x26	; 38
      00014E 26                     576 	.db #0x26	; 38
      00014F 26                     577 	.db #0x26	; 38
      000150 26                     578 	.db #0x26	; 38
      000151 26                     579 	.db #0x26	; 38
      000152 26                     580 	.db #0x26	; 38
      000153 26                     581 	.db #0x26	; 38
      000154 26                     582 	.db #0x26	; 38
      000155 26                     583 	.db #0x26	; 38
      000156 26                     584 	.db #0x26	; 38
      000157 26                     585 	.db #0x26	; 38
      000158 26                     586 	.db #0x26	; 38
      000159 26                     587 	.db #0x26	; 38
      00015A 26                     588 	.db #0x26	; 38
      00015B 26                     589 	.db #0x26	; 38
      00015C 26                     590 	.db #0x26	; 38
      00015D 26                     591 	.db #0x26	; 38
      00015E 26                     592 	.db #0x26	; 38
      00015F 26                     593 	.db #0x26	; 38
      000160 2C                     594 	.db #0x2c	; 44
      000161 26                     595 	.db #0x26	; 38
      000162 26                     596 	.db #0x26	; 38
      000163 26                     597 	.db #0x26	; 38
      000164 26                     598 	.db #0x26	; 38
      000165 26                     599 	.db #0x26	; 38
      000166 26                     600 	.db #0x26	; 38
      000167 26                     601 	.db #0x26	; 38
      000168 26                     602 	.db #0x26	; 38
      000169 26                     603 	.db #0x26	; 38
      00016A 26                     604 	.db #0x26	; 38
      00016B 26                     605 	.db #0x26	; 38
      00016C 26                     606 	.db #0x26	; 38
      00016D 26                     607 	.db #0x26	; 38
      00016E 26                     608 	.db #0x26	; 38
      00016F 26                     609 	.db #0x26	; 38
      000170 26                     610 	.db #0x26	; 38
      000171 26                     611 	.db #0x26	; 38
      000172 26                     612 	.db #0x26	; 38
      000173 26                     613 	.db #0x26	; 38
      000174 26                     614 	.db #0x26	; 38
      000175 26                     615 	.db #0x26	; 38
      000176 26                     616 	.db #0x26	; 38
      000177 26                     617 	.db #0x26	; 38
      000178 26                     618 	.db #0x26	; 38
      000179 26                     619 	.db #0x26	; 38
      00017A 26                     620 	.db #0x26	; 38
      00017B 26                     621 	.db #0x26	; 38
      00017C 26                     622 	.db #0x26	; 38
      00017D 26                     623 	.db #0x26	; 38
      00017E 26                     624 	.db #0x26	; 38
      00017F 26                     625 	.db #0x26	; 38
      000180 26                     626 	.db #0x26	; 38
      000181 26                     627 	.db #0x26	; 38
      000182 26                     628 	.db #0x26	; 38
      000183 26                     629 	.db #0x26	; 38
      000184 26                     630 	.db #0x26	; 38
      000185 26                     631 	.db #0x26	; 38
      000186 26                     632 	.db #0x26	; 38
      000187 26                     633 	.db #0x26	; 38
      000188 26                     634 	.db #0x26	; 38
      000189 26                     635 	.db #0x26	; 38
      00018A 26                     636 	.db #0x26	; 38
      00018B 26                     637 	.db #0x26	; 38
      00018C 26                     638 	.db #0x26	; 38
      00018D 26                     639 	.db #0x26	; 38
      00018E 26                     640 	.db #0x26	; 38
      00018F 26                     641 	.db #0x26	; 38
      000190 26                     642 	.db #0x26	; 38
      000191 26                     643 	.db #0x26	; 38
      000192 26                     644 	.db #0x26	; 38
      000193 26                     645 	.db #0x26	; 38
      000194 26                     646 	.db #0x26	; 38
      000195 2B                     647 	.db #0x2b	; 43
      000196 26                     648 	.db #0x26	; 38
      000197 26                     649 	.db #0x26	; 38
      000198 26                     650 	.db #0x26	; 38
      000199 26                     651 	.db #0x26	; 38
      00019A 26                     652 	.db #0x26	; 38
      00019B 26                     653 	.db #0x26	; 38
      00019C 26                     654 	.db #0x26	; 38
      00019D 26                     655 	.db #0x26	; 38
      00019E 26                     656 	.db #0x26	; 38
      00019F 26                     657 	.db #0x26	; 38
      0001A0 26                     658 	.db #0x26	; 38
      0001A1 26                     659 	.db #0x26	; 38
      0001A2 26                     660 	.db #0x26	; 38
      0001A3 26                     661 	.db #0x26	; 38
      0001A4 26                     662 	.db #0x26	; 38
      0001A5 26                     663 	.db #0x26	; 38
      0001A6 25                     664 	.db #0x25	; 37
      0001A7 26                     665 	.db #0x26	; 38
      0001A8 26                     666 	.db #0x26	; 38
      0001A9 26                     667 	.db #0x26	; 38
      0001AA 2B                     668 	.db #0x2b	; 43
      0001AB 26                     669 	.db #0x26	; 38
      0001AC 26                     670 	.db #0x26	; 38
      0001AD 26                     671 	.db #0x26	; 38
      0001AE 26                     672 	.db #0x26	; 38
      0001AF 26                     673 	.db #0x26	; 38
      0001B0 26                     674 	.db #0x26	; 38
      0001B1 26                     675 	.db #0x26	; 38
      0001B2 26                     676 	.db #0x26	; 38
      0001B3 26                     677 	.db #0x26	; 38
      0001B4 26                     678 	.db #0x26	; 38
      0001B5 26                     679 	.db #0x26	; 38
      0001B6 26                     680 	.db #0x26	; 38
      0001B7 26                     681 	.db #0x26	; 38
      0001B8 26                     682 	.db #0x26	; 38
      0001B9 26                     683 	.db #0x26	; 38
      0001BA 26                     684 	.db #0x26	; 38
      0001BB 26                     685 	.db #0x26	; 38
      0001BC 26                     686 	.db #0x26	; 38
      0001BD 26                     687 	.db #0x26	; 38
      0001BE 26                     688 	.db #0x26	; 38
      0001BF 26                     689 	.db #0x26	; 38
      0001C0 26                     690 	.db #0x26	; 38
      0001C1 26                     691 	.db #0x26	; 38
      0001C2 26                     692 	.db #0x26	; 38
      0001C3 26                     693 	.db #0x26	; 38
      0001C4 2B                     694 	.db #0x2b	; 43
      0001C5 26                     695 	.db #0x26	; 38
      0001C6 26                     696 	.db #0x26	; 38
      0001C7 26                     697 	.db #0x26	; 38
      0001C8 26                     698 	.db #0x26	; 38
      0001C9 26                     699 	.db #0x26	; 38
      0001CA 26                     700 	.db #0x26	; 38
      0001CB 26                     701 	.db #0x26	; 38
      0001CC 26                     702 	.db #0x26	; 38
      0001CD 26                     703 	.db #0x26	; 38
      0001CE 26                     704 	.db #0x26	; 38
      0001CF 26                     705 	.db #0x26	; 38
      0001D0 26                     706 	.db #0x26	; 38
      0001D1 26                     707 	.db #0x26	; 38
      0001D2 26                     708 	.db #0x26	; 38
      0001D3 26                     709 	.db #0x26	; 38
      0001D4 26                     710 	.db #0x26	; 38
      0001D5 26                     711 	.db #0x26	; 38
      0001D6 26                     712 	.db #0x26	; 38
      0001D7 26                     713 	.db #0x26	; 38
      0001D8 26                     714 	.db #0x26	; 38
      0001D9 26                     715 	.db #0x26	; 38
      0001DA 27                     716 	.db #0x27	; 39
      0001DB 28                     717 	.db #0x28	; 40
      0001DC 26                     718 	.db #0x26	; 38
      0001DD 26                     719 	.db #0x26	; 38
      0001DE 26                     720 	.db #0x26	; 38
      0001DF 26                     721 	.db #0x26	; 38
      0001E0 26                     722 	.db #0x26	; 38
      0001E1 26                     723 	.db #0x26	; 38
      0001E2 26                     724 	.db #0x26	; 38
      0001E3 26                     725 	.db #0x26	; 38
      0001E4 26                     726 	.db #0x26	; 38
      0001E5 26                     727 	.db #0x26	; 38
      0001E6 26                     728 	.db #0x26	; 38
      0001E7 26                     729 	.db #0x26	; 38
      0001E8 26                     730 	.db #0x26	; 38
      0001E9 26                     731 	.db #0x26	; 38
      0001EA 26                     732 	.db #0x26	; 38
      0001EB 26                     733 	.db #0x26	; 38
      0001EC 26                     734 	.db #0x26	; 38
      0001ED 26                     735 	.db #0x26	; 38
      0001EE 26                     736 	.db #0x26	; 38
      0001EF 26                     737 	.db #0x26	; 38
      0001F0 26                     738 	.db #0x26	; 38
      0001F1 26                     739 	.db #0x26	; 38
      0001F2 26                     740 	.db #0x26	; 38
      0001F3 26                     741 	.db #0x26	; 38
      0001F4 26                     742 	.db #0x26	; 38
      0001F5 26                     743 	.db #0x26	; 38
      0001F6 26                     744 	.db #0x26	; 38
      0001F7 26                     745 	.db #0x26	; 38
      0001F8 26                     746 	.db #0x26	; 38
      0001F9 26                     747 	.db #0x26	; 38
      0001FA 2A                     748 	.db #0x2a	; 42
      0001FB 29                     749 	.db #0x29	; 41
      0001FC 26                     750 	.db #0x26	; 38
      0001FD 26                     751 	.db #0x26	; 38
      0001FE 26                     752 	.db #0x26	; 38
      0001FF 26                     753 	.db #0x26	; 38
      000200 26                     754 	.db #0x26	; 38
      000201 26                     755 	.db #0x26	; 38
      000202 26                     756 	.db #0x26	; 38
      000203 26                     757 	.db #0x26	; 38
      000204 26                     758 	.db #0x26	; 38
      000205 26                     759 	.db #0x26	; 38
      000206 26                     760 	.db #0x26	; 38
      000207 26                     761 	.db #0x26	; 38
      000208 26                     762 	.db #0x26	; 38
      000209 26                     763 	.db #0x26	; 38
      00020A 26                     764 	.db #0x26	; 38
      00020B 26                     765 	.db #0x26	; 38
      00020C 26                     766 	.db #0x26	; 38
      00020D 26                     767 	.db #0x26	; 38
      00020E 27                     768 	.db #0x27	; 39
      00020F 28                     769 	.db #0x28	; 40
      000210 26                     770 	.db #0x26	; 38
      000211 26                     771 	.db #0x26	; 38
      000212 26                     772 	.db #0x26	; 38
      000213 26                     773 	.db #0x26	; 38
      000214 26                     774 	.db #0x26	; 38
      000215 26                     775 	.db #0x26	; 38
      000216 26                     776 	.db #0x26	; 38
      000217 26                     777 	.db #0x26	; 38
      000218 26                     778 	.db #0x26	; 38
      000219 26                     779 	.db #0x26	; 38
      00021A 26                     780 	.db #0x26	; 38
      00021B 26                     781 	.db #0x26	; 38
      00021C 26                     782 	.db #0x26	; 38
      00021D 26                     783 	.db #0x26	; 38
      00021E 26                     784 	.db #0x26	; 38
      00021F 2C                     785 	.db #0x2c	; 44
      000220 26                     786 	.db #0x26	; 38
      000221 26                     787 	.db #0x26	; 38
      000222 26                     788 	.db #0x26	; 38
      000223 26                     789 	.db #0x26	; 38
      000224 26                     790 	.db #0x26	; 38
      000225 26                     791 	.db #0x26	; 38
      000226 26                     792 	.db #0x26	; 38
      000227 26                     793 	.db #0x26	; 38
      000228 26                     794 	.db #0x26	; 38
      000229 26                     795 	.db #0x26	; 38
      00022A 26                     796 	.db #0x26	; 38
      00022B 26                     797 	.db #0x26	; 38
      00022C 26                     798 	.db #0x26	; 38
      00022D 26                     799 	.db #0x26	; 38
      00022E 2A                     800 	.db #0x2a	; 42
      00022F 29                     801 	.db #0x29	; 41
      000230 26                     802 	.db #0x26	; 38
      000231 26                     803 	.db #0x26	; 38
      000232 26                     804 	.db #0x26	; 38
      000233 26                     805 	.db #0x26	; 38
      000234 26                     806 	.db #0x26	; 38
      000235 26                     807 	.db #0x26	; 38
      000236 26                     808 	.db #0x26	; 38
      000237 26                     809 	.db #0x26	; 38
      000238 26                     810 	.db #0x26	; 38
      000239 26                     811 	.db #0x26	; 38
      00023A 26                     812 	.db #0x26	; 38
      00023B 26                     813 	.db #0x26	; 38
      00023C 26                     814 	.db #0x26	; 38
      00023D 25                     815 	.db #0x25	; 37
      00023E 26                     816 	.db #0x26	; 38
      00023F 26                     817 	.db #0x26	; 38
      000240 26                     818 	.db #0x26	; 38
      000241 26                     819 	.db #0x26	; 38
      000242 26                     820 	.db #0x26	; 38
      000243 26                     821 	.db #0x26	; 38
      000244 2C                     822 	.db #0x2c	; 44
      000245 26                     823 	.db #0x26	; 38
      000246 26                     824 	.db #0x26	; 38
      000247 26                     825 	.db #0x26	; 38
      000248 26                     826 	.db #0x26	; 38
      000249 26                     827 	.db #0x26	; 38
      00024A 26                     828 	.db #0x26	; 38
      00024B 26                     829 	.db #0x26	; 38
      00024C 26                     830 	.db #0x26	; 38
      00024D 26                     831 	.db #0x26	; 38
      00024E 26                     832 	.db #0x26	; 38
      00024F 26                     833 	.db #0x26	; 38
      000250 26                     834 	.db #0x26	; 38
      000251 26                     835 	.db #0x26	; 38
      000252 26                     836 	.db #0x26	; 38
      000253 26                     837 	.db #0x26	; 38
      000254 26                     838 	.db #0x26	; 38
      000255 26                     839 	.db #0x26	; 38
      000256 26                     840 	.db #0x26	; 38
      000257 26                     841 	.db #0x26	; 38
      000258 26                     842 	.db #0x26	; 38
      000259 26                     843 	.db #0x26	; 38
      00025A 26                     844 	.db #0x26	; 38
      00025B 26                     845 	.db #0x26	; 38
      00025C 26                     846 	.db #0x26	; 38
      00025D 26                     847 	.db #0x26	; 38
      00025E 26                     848 	.db #0x26	; 38
      00025F 26                     849 	.db #0x26	; 38
      000260 26                     850 	.db #0x26	; 38
      000261 26                     851 	.db #0x26	; 38
      000262 26                     852 	.db #0x26	; 38
      000263 26                     853 	.db #0x26	; 38
      000264 26                     854 	.db #0x26	; 38
      000265 26                     855 	.db #0x26	; 38
      000266 26                     856 	.db #0x26	; 38
      000267 26                     857 	.db #0x26	; 38
      000268 26                     858 	.db #0x26	; 38
      000269 26                     859 	.db #0x26	; 38
      00026A 2C                     860 	.db #0x2c	; 44
      00026B 26                     861 	.db #0x26	; 38
      00026C 26                     862 	.db #0x26	; 38
      00026D 26                     863 	.db #0x26	; 38
      00026E 26                     864 	.db #0x26	; 38
      00026F 26                     865 	.db #0x26	; 38
      000270 26                     866 	.db #0x26	; 38
      000271 26                     867 	.db #0x26	; 38
      000272 26                     868 	.db #0x26	; 38
      000273 26                     869 	.db #0x26	; 38
      000274 26                     870 	.db #0x26	; 38
      000275 26                     871 	.db #0x26	; 38
      000276 26                     872 	.db #0x26	; 38
      000277 26                     873 	.db #0x26	; 38
      000278 26                     874 	.db #0x26	; 38
      000279 2C                     875 	.db #0x2c	; 44
      00027A 26                     876 	.db #0x26	; 38
      00027B 26                     877 	.db #0x26	; 38
      00027C 26                     878 	.db #0x26	; 38
      00027D 26                     879 	.db #0x26	; 38
      00027E 26                     880 	.db #0x26	; 38
      00027F 26                     881 	.db #0x26	; 38
      000280 26                     882 	.db #0x26	; 38
      000281 26                     883 	.db #0x26	; 38
      000282 26                     884 	.db #0x26	; 38
      000283 26                     885 	.db #0x26	; 38
      000284 26                     886 	.db #0x26	; 38
      000285 26                     887 	.db #0x26	; 38
      000286 26                     888 	.db #0x26	; 38
      000287 26                     889 	.db #0x26	; 38
      000288 26                     890 	.db #0x26	; 38
      000289 26                     891 	.db #0x26	; 38
      00028A 26                     892 	.db #0x26	; 38
      00028B 26                     893 	.db #0x26	; 38
      00028C 26                     894 	.db #0x26	; 38
      00028D 26                     895 	.db #0x26	; 38
      00028E 26                     896 	.db #0x26	; 38
      00028F 26                     897 	.db #0x26	; 38
      000290 26                     898 	.db #0x26	; 38
      000291 26                     899 	.db #0x26	; 38
      000292 26                     900 	.db #0x26	; 38
      000293 26                     901 	.db #0x26	; 38
      000294 26                     902 	.db #0x26	; 38
      000295 2B                     903 	.db #0x2b	; 43
      000296 26                     904 	.db #0x26	; 38
      000297 26                     905 	.db #0x26	; 38
      000298 26                     906 	.db #0x26	; 38
      000299 26                     907 	.db #0x26	; 38
      00029A 26                     908 	.db #0x26	; 38
      00029B 26                     909 	.db #0x26	; 38
      00029C 26                     910 	.db #0x26	; 38
      00029D 26                     911 	.db #0x26	; 38
      00029E 26                     912 	.db #0x26	; 38
      00029F 26                     913 	.db #0x26	; 38
      0002A0 26                     914 	.db #0x26	; 38
      0002A1 26                     915 	.db #0x26	; 38
      0002A2 26                     916 	.db #0x26	; 38
      0002A3 26                     917 	.db #0x26	; 38
      0002A4 26                     918 	.db #0x26	; 38
      0002A5 26                     919 	.db #0x26	; 38
      0002A6 26                     920 	.db #0x26	; 38
      0002A7 28                     921 	.db #0x28	; 40
      0002A8 26                     922 	.db #0x26	; 38
      0002A9 26                     923 	.db #0x26	; 38
      0002AA 26                     924 	.db #0x26	; 38
      0002AB 26                     925 	.db #0x26	; 38
      0002AC 26                     926 	.db #0x26	; 38
      0002AD 26                     927 	.db #0x26	; 38
      0002AE 26                     928 	.db #0x26	; 38
      0002AF 26                     929 	.db #0x26	; 38
      0002B0 26                     930 	.db #0x26	; 38
      0002B1 26                     931 	.db #0x26	; 38
      0002B2 26                     932 	.db #0x26	; 38
      0002B3 26                     933 	.db #0x26	; 38
      0002B4 26                     934 	.db #0x26	; 38
      0002B5 26                     935 	.db #0x26	; 38
      0002B6 26                     936 	.db #0x26	; 38
      0002B7 26                     937 	.db #0x26	; 38
      0002B8 26                     938 	.db #0x26	; 38
      0002B9 26                     939 	.db #0x26	; 38
      0002BA 26                     940 	.db #0x26	; 38
      0002BB 26                     941 	.db #0x26	; 38
      0002BC 26                     942 	.db #0x26	; 38
      0002BD 26                     943 	.db #0x26	; 38
      0002BE 26                     944 	.db #0x26	; 38
      0002BF 26                     945 	.db #0x26	; 38
      0002C0 2B                     946 	.db #0x2b	; 43
      0002C1 26                     947 	.db #0x26	; 38
      0002C2 26                     948 	.db #0x26	; 38
      0002C3 26                     949 	.db #0x26	; 38
      0002C4 26                     950 	.db #0x26	; 38
      0002C5 26                     951 	.db #0x26	; 38
      0002C6 27                     952 	.db #0x27	; 39
      0002C7 29                     953 	.db #0x29	; 41
      0002C8 26                     954 	.db #0x26	; 38
      0002C9 26                     955 	.db #0x26	; 38
      0002CA 26                     956 	.db #0x26	; 38
      0002CB 26                     957 	.db #0x26	; 38
      0002CC 26                     958 	.db #0x26	; 38
      0002CD 26                     959 	.db #0x26	; 38
      0002CE 2B                     960 	.db #0x2b	; 43
      0002CF 26                     961 	.db #0x26	; 38
      0002D0 26                     962 	.db #0x26	; 38
      0002D1 26                     963 	.db #0x26	; 38
      0002D2 26                     964 	.db #0x26	; 38
      0002D3 26                     965 	.db #0x26	; 38
      0002D4 26                     966 	.db #0x26	; 38
      0002D5 26                     967 	.db #0x26	; 38
      0002D6 26                     968 	.db #0x26	; 38
      0002D7 26                     969 	.db #0x26	; 38
      0002D8 26                     970 	.db #0x26	; 38
      0002D9 26                     971 	.db #0x26	; 38
      0002DA 26                     972 	.db #0x26	; 38
      0002DB 26                     973 	.db #0x26	; 38
      0002DC 26                     974 	.db #0x26	; 38
      0002DD 26                     975 	.db #0x26	; 38
      0002DE 26                     976 	.db #0x26	; 38
      0002DF 26                     977 	.db #0x26	; 38
      0002E0 26                     978 	.db #0x26	; 38
      0002E1 26                     979 	.db #0x26	; 38
      0002E2 26                     980 	.db #0x26	; 38
      0002E3 26                     981 	.db #0x26	; 38
      0002E4 26                     982 	.db #0x26	; 38
      0002E5 26                     983 	.db #0x26	; 38
      0002E6 2A                     984 	.db #0x2a	; 42
      0002E7 26                     985 	.db #0x26	; 38
      0002E8 26                     986 	.db #0x26	; 38
      0002E9 26                     987 	.db #0x26	; 38
      0002EA 26                     988 	.db #0x26	; 38
      0002EB 26                     989 	.db #0x26	; 38
      0002EC 26                     990 	.db #0x26	; 38
      0002ED 26                     991 	.db #0x26	; 38
      0002EE 26                     992 	.db #0x26	; 38
      0002EF 26                     993 	.db #0x26	; 38
      0002F0 26                     994 	.db #0x26	; 38
      0002F1 26                     995 	.db #0x26	; 38
      0002F2 2C                     996 	.db #0x2c	; 44
      0002F3 26                     997 	.db #0x26	; 38
      0002F4 26                     998 	.db #0x26	; 38
      0002F5 26                     999 	.db #0x26	; 38
      0002F6 26                    1000 	.db #0x26	; 38
      0002F7 26                    1001 	.db #0x26	; 38
      0002F8 26                    1002 	.db #0x26	; 38
      0002F9 26                    1003 	.db #0x26	; 38
      0002FA 26                    1004 	.db #0x26	; 38
      0002FB 26                    1005 	.db #0x26	; 38
      0002FC 26                    1006 	.db #0x26	; 38
      0002FD 26                    1007 	.db #0x26	; 38
      0002FE 26                    1008 	.db #0x26	; 38
      0002FF 26                    1009 	.db #0x26	; 38
      000300 26                    1010 	.db #0x26	; 38
      000301 26                    1011 	.db #0x26	; 38
      000302 26                    1012 	.db #0x26	; 38
      000303 26                    1013 	.db #0x26	; 38
      000304 26                    1014 	.db #0x26	; 38
      000305 26                    1015 	.db #0x26	; 38
      000306 26                    1016 	.db #0x26	; 38
      000307 26                    1017 	.db #0x26	; 38
      000308 26                    1018 	.db #0x26	; 38
      000309 26                    1019 	.db #0x26	; 38
      00030A 26                    1020 	.db #0x26	; 38
      00030B 26                    1021 	.db #0x26	; 38
      00030C 26                    1022 	.db #0x26	; 38
      00030D 26                    1023 	.db #0x26	; 38
      00030E 26                    1024 	.db #0x26	; 38
      00030F 26                    1025 	.db #0x26	; 38
      000310 26                    1026 	.db #0x26	; 38
      000311 26                    1027 	.db #0x26	; 38
      000312 26                    1028 	.db #0x26	; 38
      000313 26                    1029 	.db #0x26	; 38
      000314 26                    1030 	.db #0x26	; 38
      000315 26                    1031 	.db #0x26	; 38
      000316 26                    1032 	.db #0x26	; 38
      000317 2B                    1033 	.db #0x2b	; 43
      000318 26                    1034 	.db #0x26	; 38
      000319 26                    1035 	.db #0x26	; 38
      00031A 26                    1036 	.db #0x26	; 38
      00031B 26                    1037 	.db #0x26	; 38
      00031C 26                    1038 	.db #0x26	; 38
      00031D 26                    1039 	.db #0x26	; 38
      00031E 26                    1040 	.db #0x26	; 38
      00031F 26                    1041 	.db #0x26	; 38
      000320 26                    1042 	.db #0x26	; 38
      000321 26                    1043 	.db #0x26	; 38
      000322 26                    1044 	.db #0x26	; 38
      000323 26                    1045 	.db #0x26	; 38
      000324 26                    1046 	.db #0x26	; 38
      000325 26                    1047 	.db #0x26	; 38
      000326 26                    1048 	.db #0x26	; 38
      000327 26                    1049 	.db #0x26	; 38
      000328 26                    1050 	.db #0x26	; 38
      000329 26                    1051 	.db #0x26	; 38
      00032A 26                    1052 	.db #0x26	; 38
      00032B 26                    1053 	.db #0x26	; 38
      00032C 26                    1054 	.db #0x26	; 38
      00032D 26                    1055 	.db #0x26	; 38
      00032E 26                    1056 	.db #0x26	; 38
      00032F 26                    1057 	.db #0x26	; 38
      000330 26                    1058 	.db #0x26	; 38
      000331 26                    1059 	.db #0x26	; 38
      000332 26                    1060 	.db #0x26	; 38
      000333 26                    1061 	.db #0x26	; 38
      000334 26                    1062 	.db #0x26	; 38
      000335 26                    1063 	.db #0x26	; 38
      000336 26                    1064 	.db #0x26	; 38
      000337 26                    1065 	.db #0x26	; 38
      000338 26                    1066 	.db #0x26	; 38
      000339 26                    1067 	.db #0x26	; 38
      00033A 26                    1068 	.db #0x26	; 38
      00033B 26                    1069 	.db #0x26	; 38
      00033C 26                    1070 	.db #0x26	; 38
      00033D 26                    1071 	.db #0x26	; 38
      00033E 2B                    1072 	.db #0x2b	; 43
      00033F 26                    1073 	.db #0x26	; 38
      000340 26                    1074 	.db #0x26	; 38
      000341 26                    1075 	.db #0x26	; 38
      000342 26                    1076 	.db #0x26	; 38
      000343 26                    1077 	.db #0x26	; 38
      000344 26                    1078 	.db #0x26	; 38
      000345 26                    1079 	.db #0x26	; 38
      000346 26                    1080 	.db #0x26	; 38
      000347 26                    1081 	.db #0x26	; 38
      000348 26                    1082 	.db #0x26	; 38
      000349 26                    1083 	.db #0x26	; 38
      00034A 2B                    1084 	.db #0x2b	; 43
      00034B 26                    1085 	.db #0x26	; 38
      00034C 26                    1086 	.db #0x26	; 38
      00034D 26                    1087 	.db #0x26	; 38
      00034E 26                    1088 	.db #0x26	; 38
      00034F 26                    1089 	.db #0x26	; 38
      000350 26                    1090 	.db #0x26	; 38
      000351 26                    1091 	.db #0x26	; 38
      000352 26                    1092 	.db #0x26	; 38
      000353 26                    1093 	.db #0x26	; 38
      000354 26                    1094 	.db #0x26	; 38
      000355 26                    1095 	.db #0x26	; 38
      000356 26                    1096 	.db #0x26	; 38
      000357 26                    1097 	.db #0x26	; 38
      000358 26                    1098 	.db #0x26	; 38
      000359 26                    1099 	.db #0x26	; 38
      00035A 26                    1100 	.db #0x26	; 38
      00035B 26                    1101 	.db #0x26	; 38
      00035C 26                    1102 	.db #0x26	; 38
      00035D 26                    1103 	.db #0x26	; 38
      00035E 26                    1104 	.db #0x26	; 38
      00035F 26                    1105 	.db #0x26	; 38
      000360 26                    1106 	.db #0x26	; 38
      000361 26                    1107 	.db #0x26	; 38
      000362 26                    1108 	.db #0x26	; 38
      000363 26                    1109 	.db #0x26	; 38
      000364 26                    1110 	.db #0x26	; 38
      000365 26                    1111 	.db #0x26	; 38
      000366 2C                    1112 	.db #0x2c	; 44
      000367 26                    1113 	.db #0x26	; 38
      000368 26                    1114 	.db #0x26	; 38
      000369 26                    1115 	.db #0x26	; 38
      00036A 26                    1116 	.db #0x26	; 38
      00036B 26                    1117 	.db #0x26	; 38
      00036C 26                    1118 	.db #0x26	; 38
      00036D 26                    1119 	.db #0x26	; 38
      00036E 26                    1120 	.db #0x26	; 38
      00036F 26                    1121 	.db #0x26	; 38
      000370 2B                    1122 	.db #0x2b	; 43
      000371 26                    1123 	.db #0x26	; 38
      000372 26                    1124 	.db #0x26	; 38
      000373 26                    1125 	.db #0x26	; 38
      000374 26                    1126 	.db #0x26	; 38
      000375 26                    1127 	.db #0x26	; 38
      000376 26                    1128 	.db #0x26	; 38
      000377 26                    1129 	.db #0x26	; 38
      000378 26                    1130 	.db #0x26	; 38
      000379 26                    1131 	.db #0x26	; 38
      00037A 26                    1132 	.db #0x26	; 38
      00037B 26                    1133 	.db #0x26	; 38
      00037C 26                    1134 	.db #0x26	; 38
      00037D 26                    1135 	.db #0x26	; 38
      00037E 26                    1136 	.db #0x26	; 38
      00037F 26                    1137 	.db #0x26	; 38
      000380 26                    1138 	.db #0x26	; 38
      000381 26                    1139 	.db #0x26	; 38
      000382 26                    1140 	.db #0x26	; 38
      000383 26                    1141 	.db #0x26	; 38
      000384 26                    1142 	.db #0x26	; 38
      000385 26                    1143 	.db #0x26	; 38
      000386 26                    1144 	.db #0x26	; 38
      000387 26                    1145 	.db #0x26	; 38
      000388 26                    1146 	.db #0x26	; 38
      000389 26                    1147 	.db #0x26	; 38
      00038A 26                    1148 	.db #0x26	; 38
      00038B 26                    1149 	.db #0x26	; 38
      00038C 26                    1150 	.db #0x26	; 38
      00038D 26                    1151 	.db #0x26	; 38
      00038E 26                    1152 	.db #0x26	; 38
      00038F 26                    1153 	.db #0x26	; 38
      000390 26                    1154 	.db #0x26	; 38
      000391 26                    1155 	.db #0x26	; 38
      000392 26                    1156 	.db #0x26	; 38
      000393 26                    1157 	.db #0x26	; 38
      000394 26                    1158 	.db #0x26	; 38
      000395 26                    1159 	.db #0x26	; 38
      000396 26                    1160 	.db #0x26	; 38
      000397 26                    1161 	.db #0x26	; 38
      000398 27                    1162 	.db #0x27	; 39
      000399 28                    1163 	.db #0x28	; 40
      00039A 26                    1164 	.db #0x26	; 38
      00039B 26                    1165 	.db #0x26	; 38
      00039C 26                    1166 	.db #0x26	; 38
      00039D 26                    1167 	.db #0x26	; 38
      00039E 26                    1168 	.db #0x26	; 38
      00039F 26                    1169 	.db #0x26	; 38
      0003A0 26                    1170 	.db #0x26	; 38
      0003A1 26                    1171 	.db #0x26	; 38
      0003A2 26                    1172 	.db #0x26	; 38
      0003A3 26                    1173 	.db #0x26	; 38
      0003A4 26                    1174 	.db #0x26	; 38
      0003A5 26                    1175 	.db #0x26	; 38
      0003A6 26                    1176 	.db #0x26	; 38
      0003A7 26                    1177 	.db #0x26	; 38
      0003A8 26                    1178 	.db #0x26	; 38
      0003A9 26                    1179 	.db #0x26	; 38
      0003AA 26                    1180 	.db #0x26	; 38
      0003AB 26                    1181 	.db #0x26	; 38
      0003AC 26                    1182 	.db #0x26	; 38
      0003AD 2B                    1183 	.db #0x2b	; 43
      0003AE 26                    1184 	.db #0x26	; 38
      0003AF 26                    1185 	.db #0x26	; 38
      0003B0 26                    1186 	.db #0x26	; 38
      0003B1 26                    1187 	.db #0x26	; 38
      0003B2 26                    1188 	.db #0x26	; 38
      0003B3 26                    1189 	.db #0x26	; 38
      0003B4 26                    1190 	.db #0x26	; 38
      0003B5 25                    1191 	.db #0x25	; 37
      0003B6 26                    1192 	.db #0x26	; 38
      0003B7 26                    1193 	.db #0x26	; 38
      0003B8 2A                    1194 	.db #0x2a	; 42
      0003B9 29                    1195 	.db #0x29	; 41
      0003BA 26                    1196 	.db #0x26	; 38
      0003BB 26                    1197 	.db #0x26	; 38
      0003BC 26                    1198 	.db #0x26	; 38
      0003BD 26                    1199 	.db #0x26	; 38
      0003BE 26                    1200 	.db #0x26	; 38
      0003BF 26                    1201 	.db #0x26	; 38
      0003C0 26                    1202 	.db #0x26	; 38
      0003C1 26                    1203 	.db #0x26	; 38
      0003C2 2B                    1204 	.db #0x2b	; 43
      0003C3 26                    1205 	.db #0x26	; 38
      0003C4 26                    1206 	.db #0x26	; 38
      0003C5 26                    1207 	.db #0x26	; 38
      0003C6 26                    1208 	.db #0x26	; 38
      0003C7 26                    1209 	.db #0x26	; 38
      0003C8 26                    1210 	.db #0x26	; 38
      0003C9 2C                    1211 	.db #0x2c	; 44
      0003CA 26                    1212 	.db #0x26	; 38
      0003CB 26                    1213 	.db #0x26	; 38
      0003CC 26                    1214 	.db #0x26	; 38
      0003CD 26                    1215 	.db #0x26	; 38
      0003CE 26                    1216 	.db #0x26	; 38
      0003CF 26                    1217 	.db #0x26	; 38
      0003D0 26                    1218 	.db #0x26	; 38
      0003D1 26                    1219 	.db #0x26	; 38
      0003D2 26                    1220 	.db #0x26	; 38
      0003D3 26                    1221 	.db #0x26	; 38
      0003D4 26                    1222 	.db #0x26	; 38
      0003D5 2C                    1223 	.db #0x2c	; 44
      0003D6 26                    1224 	.db #0x26	; 38
      0003D7 26                    1225 	.db #0x26	; 38
      0003D8 26                    1226 	.db #0x26	; 38
      0003D9 26                    1227 	.db #0x26	; 38
      0003DA 26                    1228 	.db #0x26	; 38
      0003DB 26                    1229 	.db #0x26	; 38
      0003DC 26                    1230 	.db #0x26	; 38
      0003DD 26                    1231 	.db #0x26	; 38
      0003DE 26                    1232 	.db #0x26	; 38
      0003DF 26                    1233 	.db #0x26	; 38
      0003E0 26                    1234 	.db #0x26	; 38
      0003E1 26                    1235 	.db #0x26	; 38
      0003E2 26                    1236 	.db #0x26	; 38
      0003E3 26                    1237 	.db #0x26	; 38
      0003E4 26                    1238 	.db #0x26	; 38
      0003E5 26                    1239 	.db #0x26	; 38
      0003E6 26                    1240 	.db #0x26	; 38
      0003E7 26                    1241 	.db #0x26	; 38
      0003E8 26                    1242 	.db #0x26	; 38
      0003E9 26                    1243 	.db #0x26	; 38
      0003EA 26                    1244 	.db #0x26	; 38
      0003EB 26                    1245 	.db #0x26	; 38
      0003EC 26                    1246 	.db #0x26	; 38
      0003ED 26                    1247 	.db #0x26	; 38
      0003EE 26                    1248 	.db #0x26	; 38
      0003EF 26                    1249 	.db #0x26	; 38
      0003F0 26                    1250 	.db #0x26	; 38
      0003F1 26                    1251 	.db #0x26	; 38
      0003F2 26                    1252 	.db #0x26	; 38
      0003F3 26                    1253 	.db #0x26	; 38
      0003F4 26                    1254 	.db #0x26	; 38
      0003F5 26                    1255 	.db #0x26	; 38
      0003F6 26                    1256 	.db #0x26	; 38
      0003F7 26                    1257 	.db #0x26	; 38
      0003F8 26                    1258 	.db #0x26	; 38
      0003F9 26                    1259 	.db #0x26	; 38
      0003FA 26                    1260 	.db #0x26	; 38
      0003FB 26                    1261 	.db #0x26	; 38
      0003FC 26                    1262 	.db #0x26	; 38
      0003FD 26                    1263 	.db #0x26	; 38
      0003FE 26                    1264 	.db #0x26	; 38
      0003FF 26                    1265 	.db #0x26	; 38
      000400 26                    1266 	.db #0x26	; 38
      000401 26                    1267 	.db #0x26	; 38
      000402 26                    1268 	.db #0x26	; 38
      000403 26                    1269 	.db #0x26	; 38
      000404 26                    1270 	.db #0x26	; 38
      000405 26                    1271 	.db #0x26	; 38
      000406 26                    1272 	.db #0x26	; 38
      000407 26                    1273 	.db #0x26	; 38
      000408 26                    1274 	.db #0x26	; 38
      000409 26                    1275 	.db #0x26	; 38
      00040A 26                    1276 	.db #0x26	; 38
      00040B 26                    1277 	.db #0x26	; 38
      00040C 26                    1278 	.db #0x26	; 38
      00040D 2B                    1279 	.db #0x2b	; 43
      00040E 26                    1280 	.db #0x26	; 38
      00040F 26                    1281 	.db #0x26	; 38
      000410 26                    1282 	.db #0x26	; 38
      000411 26                    1283 	.db #0x26	; 38
      000412 26                    1284 	.db #0x26	; 38
      000413 26                    1285 	.db #0x26	; 38
      000414 26                    1286 	.db #0x26	; 38
      000415 26                    1287 	.db #0x26	; 38
      000416 26                    1288 	.db #0x26	; 38
      000417 26                    1289 	.db #0x26	; 38
      000418 26                    1290 	.db #0x26	; 38
      000419 26                    1291 	.db #0x26	; 38
      00041A 26                    1292 	.db #0x26	; 38
      00041B 26                    1293 	.db #0x26	; 38
      00041C 26                    1294 	.db #0x26	; 38
      00041D 26                    1295 	.db #0x26	; 38
      00041E 26                    1296 	.db #0x26	; 38
      00041F 26                    1297 	.db #0x26	; 38
      000420 2B                    1298 	.db #0x2b	; 43
      000421 26                    1299 	.db #0x26	; 38
      000422 26                    1300 	.db #0x26	; 38
      000423 26                    1301 	.db #0x26	; 38
      000424 26                    1302 	.db #0x26	; 38
      000425 26                    1303 	.db #0x26	; 38
      000426 26                    1304 	.db #0x26	; 38
      000427 26                    1305 	.db #0x26	; 38
      000428 26                    1306 	.db #0x26	; 38
      000429 26                    1307 	.db #0x26	; 38
      00042A 26                    1308 	.db #0x26	; 38
      00042B 26                    1309 	.db #0x26	; 38
      00042C 26                    1310 	.db #0x26	; 38
      00042D 26                    1311 	.db #0x26	; 38
      00042E 26                    1312 	.db #0x26	; 38
      00042F 26                    1313 	.db #0x26	; 38
      000430 26                    1314 	.db #0x26	; 38
      000431 26                    1315 	.db #0x26	; 38
      000432 26                    1316 	.db #0x26	; 38
      000433 26                    1317 	.db #0x26	; 38
      000434 26                    1318 	.db #0x26	; 38
      000435 26                    1319 	.db #0x26	; 38
      000436 26                    1320 	.db #0x26	; 38
      000437 2C                    1321 	.db #0x2c	; 44
      000438 26                    1322 	.db #0x26	; 38
      000439 26                    1323 	.db #0x26	; 38
      00043A 26                    1324 	.db #0x26	; 38
      00043B 26                    1325 	.db #0x26	; 38
      00043C 26                    1326 	.db #0x26	; 38
      00043D 26                    1327 	.db #0x26	; 38
      00043E 26                    1328 	.db #0x26	; 38
      00043F 26                    1329 	.db #0x26	; 38
      000440 26                    1330 	.db #0x26	; 38
      000441 26                    1331 	.db #0x26	; 38
      000442 26                    1332 	.db #0x26	; 38
      000443 26                    1333 	.db #0x26	; 38
      000444 26                    1334 	.db #0x26	; 38
      000445 26                    1335 	.db #0x26	; 38
      000446 26                    1336 	.db #0x26	; 38
      000447 26                    1337 	.db #0x26	; 38
      000448 25                    1338 	.db #0x25	; 37
      000449 2C                    1339 	.db #0x2c	; 44
      00044A 26                    1340 	.db #0x26	; 38
      00044B 26                    1341 	.db #0x26	; 38
      00044C 26                    1342 	.db #0x26	; 38
      00044D 26                    1343 	.db #0x26	; 38
      00044E 26                    1344 	.db #0x26	; 38
      00044F 26                    1345 	.db #0x26	; 38
      000450 26                    1346 	.db #0x26	; 38
      000451 26                    1347 	.db #0x26	; 38
      000452 26                    1348 	.db #0x26	; 38
      000453 26                    1349 	.db #0x26	; 38
      000454 26                    1350 	.db #0x26	; 38
      000455 26                    1351 	.db #0x26	; 38
      000456 26                    1352 	.db #0x26	; 38
      000457 26                    1353 	.db #0x26	; 38
      000458 26                    1354 	.db #0x26	; 38
      000459 26                    1355 	.db #0x26	; 38
      00045A 2B                    1356 	.db #0x2b	; 43
      00045B 26                    1357 	.db #0x26	; 38
      00045C 26                    1358 	.db #0x26	; 38
      00045D 26                    1359 	.db #0x26	; 38
      00045E 26                    1360 	.db #0x26	; 38
      00045F 26                    1361 	.db #0x26	; 38
      000460 26                    1362 	.db #0x26	; 38
      000461 26                    1363 	.db #0x26	; 38
      000462 26                    1364 	.db #0x26	; 38
      000463 26                    1365 	.db #0x26	; 38
      000464 26                    1366 	.db #0x26	; 38
      000465 26                    1367 	.db #0x26	; 38
      000466 26                    1368 	.db #0x26	; 38
      000467 26                    1369 	.db #0x26	; 38
      000468 26                    1370 	.db #0x26	; 38
      000469 26                    1371 	.db #0x26	; 38
      00046A 26                    1372 	.db #0x26	; 38
      00046B 26                    1373 	.db #0x26	; 38
      00046C 26                    1374 	.db #0x26	; 38
      00046D 26                    1375 	.db #0x26	; 38
      00046E 26                    1376 	.db #0x26	; 38
      00046F 26                    1377 	.db #0x26	; 38
      000470 26                    1378 	.db #0x26	; 38
      000471 26                    1379 	.db #0x26	; 38
      000472 27                    1380 	.db #0x27	; 39
      000473 28                    1381 	.db #0x28	; 40
      000474 26                    1382 	.db #0x26	; 38
      000475 26                    1383 	.db #0x26	; 38
      000476 26                    1384 	.db #0x26	; 38
      000477 26                    1385 	.db #0x26	; 38
      000478 26                    1386 	.db #0x26	; 38
      000479 26                    1387 	.db #0x26	; 38
      00047A 26                    1388 	.db #0x26	; 38
      00047B 26                    1389 	.db #0x26	; 38
      00047C 26                    1390 	.db #0x26	; 38
      00047D 26                    1391 	.db #0x26	; 38
      00047E 26                    1392 	.db #0x26	; 38
      00047F 26                    1393 	.db #0x26	; 38
      000480 26                    1394 	.db #0x26	; 38
      000481 26                    1395 	.db #0x26	; 38
      000482 26                    1396 	.db #0x26	; 38
      000483 26                    1397 	.db #0x26	; 38
      000484 26                    1398 	.db #0x26	; 38
      000485 26                    1399 	.db #0x26	; 38
      000486 2B                    1400 	.db #0x2b	; 43
      000487                       1401 _backgroundtiles:
      000487 40                    1402 	.db #0x40	; 64
      000488 38                    1403 	.db #0x38	; 56	'8'
      000489 3A                    1404 	.db #0x3a	; 58
      00048A 44                    1405 	.db #0x44	; 68	'D'
      00048B 7C                    1406 	.db #0x7c	; 124
      00048C 9A                    1407 	.db #0x9a	; 154
      00048D 5E                    1408 	.db #0x5e	; 94
      00048E E9                    1409 	.db #0xe9	; 233
      00048F 7A                    1410 	.db #0x7a	; 122	'z'
      000490 87                    1411 	.db #0x87	; 135
      000491 76                    1412 	.db #0x76	; 118	'v'
      000492 B9                    1413 	.db #0xb9	; 185
      000493 3C                    1414 	.db #0x3c	; 60
      000494 72                    1415 	.db #0x72	; 114	'r'
      000495 00                    1416 	.db #0x00	; 0
      000496 3C                    1417 	.db #0x3c	; 60
      000497 00                    1418 	.db #0x00	; 0
      000498 00                    1419 	.db #0x00	; 0
      000499 00                    1420 	.db #0x00	; 0
      00049A 00                    1421 	.db #0x00	; 0
      00049B 00                    1422 	.db #0x00	; 0
      00049C 00                    1423 	.db #0x00	; 0
      00049D 00                    1424 	.db #0x00	; 0
      00049E 00                    1425 	.db #0x00	; 0
      00049F 00                    1426 	.db #0x00	; 0
      0004A0 00                    1427 	.db #0x00	; 0
      0004A1 00                    1428 	.db #0x00	; 0
      0004A2 00                    1429 	.db #0x00	; 0
      0004A3 00                    1430 	.db #0x00	; 0
      0004A4 00                    1431 	.db #0x00	; 0
      0004A5 00                    1432 	.db #0x00	; 0
      0004A6 00                    1433 	.db #0x00	; 0
      0004A7 00                    1434 	.db #0x00	; 0
      0004A8 0F                    1435 	.db #0x0f	; 15
      0004A9 08                    1436 	.db #0x08	; 8
      0004AA 17                    1437 	.db #0x17	; 23
      0004AB 1C                    1438 	.db #0x1c	; 28
      0004AC 23                    1439 	.db #0x23	; 35
      0004AD 3E                    1440 	.db #0x3e	; 62
      0004AE 41                    1441 	.db #0x41	; 65	'A'
      0004AF 1B                    1442 	.db #0x1b	; 27
      0004B0 64                    1443 	.db #0x64	; 100	'd'
      0004B1 31                    1444 	.db #0x31	; 49	'1'
      0004B2 4E                    1445 	.db #0x4e	; 78	'N'
      0004B3 B1                    1446 	.db #0xb1	; 177
      0004B4 CE                    1447 	.db #0xce	; 206
      0004B5 BB                    1448 	.db #0xbb	; 187
      0004B6 C4                    1449 	.db #0xc4	; 196
      0004B7 00                    1450 	.db #0x00	; 0
      0004B8 F8                    1451 	.db #0xf8	; 248
      0004B9 00                    1452 	.db #0x00	; 0
      0004BA FC                    1453 	.db #0xfc	; 252
      0004BB E0                    1454 	.db #0xe0	; 224
      0004BC 1E                    1455 	.db #0x1e	; 30
      0004BD F0                    1456 	.db #0xf0	; 240
      0004BE 0F                    1457 	.db #0x0f	; 15
      0004BF BE                    1458 	.db #0xbe	; 190
      0004C0 01                    1459 	.db #0x01	; 1
      0004C1 BC                    1460 	.db #0xbc	; 188
      0004C2 02                    1461 	.db #0x02	; 2
      0004C3 CE                    1462 	.db #0xce	; 206
      0004C4 01                    1463 	.db #0x01	; 1
      0004C5 F6                    1464 	.db #0xf6	; 246
      0004C6 61                    1465 	.db #0x61	; 97	'a'
      0004C7 F4                    1466 	.db #0xf4	; 244
      0004C8 02                    1467 	.db #0x02	; 2
      0004C9 94                    1468 	.db #0x94	; 148
      0004CA 62                    1469 	.db #0x62	; 98	'b'
      0004CB E4                    1470 	.db #0xe4	; 228
      0004CC 02                    1471 	.db #0x02	; 2
      0004CD 6C                    1472 	.db #0x6c	; 108	'l'
      0004CE 82                    1473 	.db #0x82	; 130
      0004CF 70                    1474 	.db #0x70	; 112	'p'
      0004D0 8C                    1475 	.db #0x8c	; 140
      0004D1 60                    1476 	.db #0x60	; 96
      0004D2 90                    1477 	.db #0x90	; 144
      0004D3 00                    1478 	.db #0x00	; 0
      0004D4 E0                    1479 	.db #0xe0	; 224
      0004D5 80                    1480 	.db #0x80	; 128
      0004D6 80                    1481 	.db #0x80	; 128
      0004D7 8E                    1482 	.db #0x8e	; 142
      0004D8 F7                    1483 	.db #0xf7	; 247
      0004D9 8F                    1484 	.db #0x8f	; 143
      0004DA F3                    1485 	.db #0xf3	; 243
      0004DB 86                    1486 	.db #0x86	; 134
      0004DC F9                    1487 	.db #0xf9	; 249
      0004DD 42                    1488 	.db #0x42	; 66	'B'
      0004DE 7D                    1489 	.db #0x7d	; 125
      0004DF 80                    1490 	.db #0x80	; 128
      0004E0 FF                    1491 	.db #0xff	; 255
      0004E1 44                    1492 	.db #0x44	; 68	'D'
      0004E2 7F                    1493 	.db #0x7f	; 127
      0004E3 28                    1494 	.db #0x28	; 40
      0004E4 3F                    1495 	.db #0x3f	; 63
      0004E5 07                    1496 	.db #0x07	; 7
      0004E6 07                    1497 	.db #0x07	; 7
      0004E7 00                    1498 	.db #0x00	; 0
      0004E8 00                    1499 	.db #0x00	; 0
      0004E9 08                    1500 	.db #0x08	; 8
      0004EA 00                    1501 	.db #0x00	; 0
      0004EB 08                    1502 	.db #0x08	; 8
      0004EC 00                    1503 	.db #0x00	; 0
      0004ED 1C                    1504 	.db #0x1c	; 28
      0004EE 00                    1505 	.db #0x00	; 0
      0004EF 7F                    1506 	.db #0x7f	; 127
      0004F0 00                    1507 	.db #0x00	; 0
      0004F1 1C                    1508 	.db #0x1c	; 28
      0004F2 00                    1509 	.db #0x00	; 0
      0004F3 08                    1510 	.db #0x08	; 8
      0004F4 00                    1511 	.db #0x00	; 0
      0004F5 08                    1512 	.db #0x08	; 8
      0004F6 00                    1513 	.db #0x00	; 0
      0004F7 00                    1514 	.db #0x00	; 0
      0004F8 00                    1515 	.db #0x00	; 0
      0004F9 00                    1516 	.db #0x00	; 0
      0004FA 00                    1517 	.db #0x00	; 0
      0004FB 00                    1518 	.db #0x00	; 0
      0004FC 00                    1519 	.db #0x00	; 0
      0004FD 10                    1520 	.db #0x10	; 16
      0004FE 00                    1521 	.db #0x00	; 0
      0004FF 00                    1522 	.db #0x00	; 0
      000500 00                    1523 	.db #0x00	; 0
      000501 00                    1524 	.db #0x00	; 0
      000502 00                    1525 	.db #0x00	; 0
      000503 00                    1526 	.db #0x00	; 0
      000504 00                    1527 	.db #0x00	; 0
      000505 00                    1528 	.db #0x00	; 0
      000506 00                    1529 	.db #0x00	; 0
      000507                       1530 _healthblock:
      000507 FE                    1531 	.db #0xfe	; 254
      000508 FE                    1532 	.db #0xfe	; 254
      000509 FE                    1533 	.db #0xfe	; 254
      00050A FE                    1534 	.db #0xfe	; 254
      00050B FE                    1535 	.db #0xfe	; 254
      00050C FE                    1536 	.db #0xfe	; 254
      00050D FE                    1537 	.db #0xfe	; 254
      00050E FE                    1538 	.db #0xfe	; 254
      00050F FE                    1539 	.db #0xfe	; 254
      000510 FE                    1540 	.db #0xfe	; 254
      000511 FE                    1541 	.db #0xfe	; 254
      000512 FE                    1542 	.db #0xfe	; 254
      000513 FE                    1543 	.db #0xfe	; 254
      000514 FE                    1544 	.db #0xfe	; 254
      000515 00                    1545 	.db #0x00	; 0
      000516 00                    1546 	.db #0x00	; 0
      000517                       1547 _enemyOptionCount:
      000517 05                    1548 	.db #0x05	; 5
      000518                       1549 _enemy1:
      000518 66                    1550 	.db #0x66	; 102	'f'
      000519 24                    1551 	.db #0x24	; 36
      00051A E7                    1552 	.db #0xe7	; 231
      00051B 66                    1553 	.db #0x66	; 102	'f'
      00051C F7                    1554 	.db #0xf7	; 247
      00051D E7                    1555 	.db #0xe7	; 231
      00051E 1C                    1556 	.db #0x1c	; 28
      00051F 18                    1557 	.db #0x18	; 24
      000520 38                    1558 	.db #0x38	; 56	'8'
      000521 18                    1559 	.db #0x18	; 24
      000522 EF                    1560 	.db #0xef	; 239
      000523 E7                    1561 	.db #0xe7	; 231
      000524 E7                    1562 	.db #0xe7	; 231
      000525 66                    1563 	.db #0x66	; 102	'f'
      000526 66                    1564 	.db #0x66	; 102	'f'
      000527 24                    1565 	.db #0x24	; 36
      000528 00                    1566 	.db #0x00	; 0
      000529 00                    1567 	.db #0x00	; 0
      00052A 00                    1568 	.db #0x00	; 0
      00052B 00                    1569 	.db #0x00	; 0
      00052C 00                    1570 	.db #0x00	; 0
      00052D 00                    1571 	.db #0x00	; 0
      00052E 00                    1572 	.db #0x00	; 0
      00052F 00                    1573 	.db #0x00	; 0
      000530 00                    1574 	.db #0x00	; 0
      000531 00                    1575 	.db #0x00	; 0
      000532 00                    1576 	.db #0x00	; 0
      000533 00                    1577 	.db #0x00	; 0
      000534 00                    1578 	.db #0x00	; 0
      000535 00                    1579 	.db #0x00	; 0
      000536 00                    1580 	.db #0x00	; 0
      000537 00                    1581 	.db #0x00	; 0
      000538 3C                    1582 	.db #0x3c	; 60
      000539 3C                    1583 	.db #0x3c	; 60
      00053A 5E                    1584 	.db #0x5e	; 94
      00053B 62                    1585 	.db #0x62	; 98	'b'
      00053C 8F                    1586 	.db #0x8f	; 143
      00053D F1                    1587 	.db #0xf1	; 241
      00053E C7                    1588 	.db #0xc7	; 199
      00053F F9                    1589 	.db #0xf9	; 249
      000540 C3                    1590 	.db #0xc3	; 195
      000541 FD                    1591 	.db #0xfd	; 253
      000542 E1                    1592 	.db #0xe1	; 225
      000543 FF                    1593 	.db #0xff	; 255
      000544 7A                    1594 	.db #0x7a	; 122	'z'
      000545 7E                    1595 	.db #0x7e	; 126
      000546 3C                    1596 	.db #0x3c	; 60
      000547 3C                    1597 	.db #0x3c	; 60
      000548 00                    1598 	.db #0x00	; 0
      000549 00                    1599 	.db #0x00	; 0
      00054A 00                    1600 	.db #0x00	; 0
      00054B 00                    1601 	.db #0x00	; 0
      00054C 00                    1602 	.db #0x00	; 0
      00054D 00                    1603 	.db #0x00	; 0
      00054E 00                    1604 	.db #0x00	; 0
      00054F 00                    1605 	.db #0x00	; 0
      000550 00                    1606 	.db #0x00	; 0
      000551 00                    1607 	.db #0x00	; 0
      000552 00                    1608 	.db #0x00	; 0
      000553 00                    1609 	.db #0x00	; 0
      000554 00                    1610 	.db #0x00	; 0
      000555 00                    1611 	.db #0x00	; 0
      000556 00                    1612 	.db #0x00	; 0
      000557 00                    1613 	.db #0x00	; 0
      000558 3C                    1614 	.db #0x3c	; 60
      000559 3E                    1615 	.db #0x3e	; 62
      00055A 20                    1616 	.db #0x20	; 32
      00055B 38                    1617 	.db #0x38	; 56	'8'
      00055C 44                    1618 	.db #0x44	; 68	'D'
      00055D 78                    1619 	.db #0x78	; 120	'x'
      00055E BA                    1620 	.db #0xba	; 186
      00055F C4                    1621 	.db #0xc4	; 196
      000560 BA                    1622 	.db #0xba	; 186
      000561 C4                    1623 	.db #0xc4	; 196
      000562 44                    1624 	.db #0x44	; 68	'D'
      000563 78                    1625 	.db #0x78	; 120	'x'
      000564 20                    1626 	.db #0x20	; 32
      000565 38                    1627 	.db #0x38	; 56	'8'
      000566 3C                    1628 	.db #0x3c	; 60
      000567 3E                    1629 	.db #0x3e	; 62
      000568                       1630 _largeenemies:
      000568 00                    1631 	.db #0x00	; 0
      000569 00                    1632 	.db #0x00	; 0
      00056A 00                    1633 	.db #0x00	; 0
      00056B 00                    1634 	.db #0x00	; 0
      00056C 00                    1635 	.db #0x00	; 0
      00056D 00                    1636 	.db #0x00	; 0
      00056E 00                    1637 	.db #0x00	; 0
      00056F 00                    1638 	.db #0x00	; 0
      000570 00                    1639 	.db #0x00	; 0
      000571 00                    1640 	.db #0x00	; 0
      000572 00                    1641 	.db #0x00	; 0
      000573 00                    1642 	.db #0x00	; 0
      000574 00                    1643 	.db #0x00	; 0
      000575 00                    1644 	.db #0x00	; 0
      000576 7F                    1645 	.db #0x7f	; 127
      000577 7F                    1646 	.db #0x7f	; 127
      000578 7F                    1647 	.db #0x7f	; 127
      000579 7F                    1648 	.db #0x7f	; 127
      00057A 00                    1649 	.db #0x00	; 0
      00057B 00                    1650 	.db #0x00	; 0
      00057C 00                    1651 	.db #0x00	; 0
      00057D 00                    1652 	.db #0x00	; 0
      00057E 00                    1653 	.db #0x00	; 0
      00057F 00                    1654 	.db #0x00	; 0
      000580 00                    1655 	.db #0x00	; 0
      000581 00                    1656 	.db #0x00	; 0
      000582 00                    1657 	.db #0x00	; 0
      000583 00                    1658 	.db #0x00	; 0
      000584 00                    1659 	.db #0x00	; 0
      000585 00                    1660 	.db #0x00	; 0
      000586 00                    1661 	.db #0x00	; 0
      000587 00                    1662 	.db #0x00	; 0
      000588 00                    1663 	.db #0x00	; 0
      000589 00                    1664 	.db #0x00	; 0
      00058A 40                    1665 	.db #0x40	; 64
      00058B 40                    1666 	.db #0x40	; 64
      00058C 60                    1667 	.db #0x60	; 96
      00058D 60                    1668 	.db #0x60	; 96
      00058E 70                    1669 	.db #0x70	; 112	'p'
      00058F 70                    1670 	.db #0x70	; 112	'p'
      000590 78                    1671 	.db #0x78	; 120	'x'
      000591 78                    1672 	.db #0x78	; 120	'x'
      000592 7C                    1673 	.db #0x7c	; 124
      000593 7C                    1674 	.db #0x7c	; 124
      000594 7E                    1675 	.db #0x7e	; 126
      000595 7E                    1676 	.db #0x7e	; 126
      000596 FF                    1677 	.db #0xff	; 255
      000597 FF                    1678 	.db #0xff	; 255
      000598 FF                    1679 	.db #0xff	; 255
      000599 FF                    1680 	.db #0xff	; 255
      00059A 7E                    1681 	.db #0x7e	; 126
      00059B 7E                    1682 	.db #0x7e	; 126
      00059C 7C                    1683 	.db #0x7c	; 124
      00059D 7C                    1684 	.db #0x7c	; 124
      00059E 78                    1685 	.db #0x78	; 120	'x'
      00059F 78                    1686 	.db #0x78	; 120	'x'
      0005A0 70                    1687 	.db #0x70	; 112	'p'
      0005A1 70                    1688 	.db #0x70	; 112	'p'
      0005A2 60                    1689 	.db #0x60	; 96
      0005A3 60                    1690 	.db #0x60	; 96
      0005A4 40                    1691 	.db #0x40	; 64
      0005A5 40                    1692 	.db #0x40	; 64
      0005A6 00                    1693 	.db #0x00	; 0
      0005A7 00                    1694 	.db #0x00	; 0
      0005A8 07                    1695 	.db #0x07	; 7
      0005A9 00                    1696 	.db #0x00	; 0
      0005AA 18                    1697 	.db #0x18	; 24
      0005AB 00                    1698 	.db #0x00	; 0
      0005AC 20                    1699 	.db #0x20	; 32
      0005AD 00                    1700 	.db #0x00	; 0
      0005AE 4C                    1701 	.db #0x4c	; 76	'L'
      0005AF 0C                    1702 	.db #0x0c	; 12
      0005B0 43                    1703 	.db #0x43	; 67	'C'
      0005B1 0F                    1704 	.db #0x0f	; 15
      0005B2 84                    1705 	.db #0x84	; 132
      0005B3 27                    1706 	.db #0x27	; 39
      0005B4 80                    1707 	.db #0x80	; 128
      0005B5 13                    1708 	.db #0x13	; 19
      0005B6 83                    1709 	.db #0x83	; 131
      0005B7 2A                    1710 	.db #0x2a	; 42
      0005B8 83                    1711 	.db #0x83	; 131
      0005B9 16                    1712 	.db #0x16	; 22
      0005BA 80                    1713 	.db #0x80	; 128
      0005BB 23                    1714 	.db #0x23	; 35
      0005BC 84                    1715 	.db #0x84	; 132
      0005BD 07                    1716 	.db #0x07	; 7
      0005BE 43                    1717 	.db #0x43	; 67	'C'
      0005BF 0F                    1718 	.db #0x0f	; 15
      0005C0 4C                    1719 	.db #0x4c	; 76	'L'
      0005C1 0C                    1720 	.db #0x0c	; 12
      0005C2 20                    1721 	.db #0x20	; 32
      0005C3 00                    1722 	.db #0x00	; 0
      0005C4 18                    1723 	.db #0x18	; 24
      0005C5 00                    1724 	.db #0x00	; 0
      0005C6 07                    1725 	.db #0x07	; 7
      0005C7 00                    1726 	.db #0x00	; 0
      0005C8 E0                    1727 	.db #0xe0	; 224
      0005C9 00                    1728 	.db #0x00	; 0
      0005CA 18                    1729 	.db #0x18	; 24
      0005CB 00                    1730 	.db #0x00	; 0
      0005CC 04                    1731 	.db #0x04	; 4
      0005CD 00                    1732 	.db #0x00	; 0
      0005CE 02                    1733 	.db #0x02	; 2
      0005CF 00                    1734 	.db #0x00	; 0
      0005D0 02                    1735 	.db #0x02	; 2
      0005D1 00                    1736 	.db #0x00	; 0
      0005D2 C1                    1737 	.db #0xc1	; 193
      0005D3 C0                    1738 	.db #0xc0	; 192
      0005D4 11                    1739 	.db #0x11	; 17
      0005D5 F0                    1740 	.db #0xf0	; 240
      0005D6 E5                    1741 	.db #0xe5	; 229
      0005D7 1C                    1742 	.db #0x1c	; 28
      0005D8 E5                    1743 	.db #0xe5	; 229
      0005D9 1C                    1744 	.db #0x1c	; 28
      0005DA 11                    1745 	.db #0x11	; 17
      0005DB F0                    1746 	.db #0xf0	; 240
      0005DC C1                    1747 	.db #0xc1	; 193
      0005DD C0                    1748 	.db #0xc0	; 192
      0005DE 02                    1749 	.db #0x02	; 2
      0005DF 00                    1750 	.db #0x00	; 0
      0005E0 02                    1751 	.db #0x02	; 2
      0005E1 00                    1752 	.db #0x00	; 0
      0005E2 04                    1753 	.db #0x04	; 4
      0005E3 00                    1754 	.db #0x00	; 0
      0005E4 18                    1755 	.db #0x18	; 24
      0005E5 00                    1756 	.db #0x00	; 0
      0005E6 E0                    1757 	.db #0xe0	; 224
      0005E7 00                    1758 	.db #0x00	; 0
      0005E8                       1759 _ProjectileTiles:
      0005E8 24                    1760 	.db #0x24	; 36
      0005E9 18                    1761 	.db #0x18	; 24
      0005EA 18                    1762 	.db #0x18	; 24
      0005EB 3C                    1763 	.db #0x3c	; 60
      0005EC 18                    1764 	.db #0x18	; 24
      0005ED 3C                    1765 	.db #0x3c	; 60
      0005EE 24                    1766 	.db #0x24	; 36
      0005EF 18                    1767 	.db #0x18	; 24
      0005F0 00                    1768 	.db #0x00	; 0
      0005F1 00                    1769 	.db #0x00	; 0
      0005F2 00                    1770 	.db #0x00	; 0
      0005F3 00                    1771 	.db #0x00	; 0
      0005F4 00                    1772 	.db #0x00	; 0
      0005F5 00                    1773 	.db #0x00	; 0
      0005F6 00                    1774 	.db #0x00	; 0
      0005F7 00                    1775 	.db #0x00	; 0
      0005F8 00                    1776 	.db #0x00	; 0
      0005F9 00                    1777 	.db #0x00	; 0
      0005FA 00                    1778 	.db #0x00	; 0
      0005FB 00                    1779 	.db #0x00	; 0
      0005FC 00                    1780 	.db #0x00	; 0
      0005FD 00                    1781 	.db #0x00	; 0
      0005FE 00                    1782 	.db #0x00	; 0
      0005FF 00                    1783 	.db #0x00	; 0
      000600 00                    1784 	.db #0x00	; 0
      000601 00                    1785 	.db #0x00	; 0
      000602 00                    1786 	.db #0x00	; 0
      000603 00                    1787 	.db #0x00	; 0
      000604 00                    1788 	.db #0x00	; 0
      000605 00                    1789 	.db #0x00	; 0
      000606 00                    1790 	.db #0x00	; 0
      000607 00                    1791 	.db #0x00	; 0
      000608 00                    1792 	.db #0x00	; 0
      000609 00                    1793 	.db #0x00	; 0
      00060A 00                    1794 	.db #0x00	; 0
      00060B 00                    1795 	.db #0x00	; 0
      00060C 09                    1796 	.db #0x09	; 9
      00060D 06                    1797 	.db #0x06	; 6
      00060E 06                    1798 	.db #0x06	; 6
      00060F 0F                    1799 	.db #0x0f	; 15
      000610 06                    1800 	.db #0x06	; 6
      000611 0F                    1801 	.db #0x0f	; 15
      000612 09                    1802 	.db #0x09	; 9
      000613 06                    1803 	.db #0x06	; 6
      000614 00                    1804 	.db #0x00	; 0
      000615 00                    1805 	.db #0x00	; 0
      000616 00                    1806 	.db #0x00	; 0
      000617 00                    1807 	.db #0x00	; 0
      000618 00                    1808 	.db #0x00	; 0
      000619 00                    1809 	.db #0x00	; 0
      00061A 00                    1810 	.db #0x00	; 0
      00061B 00                    1811 	.db #0x00	; 0
      00061C 00                    1812 	.db #0x00	; 0
      00061D 00                    1813 	.db #0x00	; 0
      00061E 00                    1814 	.db #0x00	; 0
      00061F 00                    1815 	.db #0x00	; 0
      000620 00                    1816 	.db #0x00	; 0
      000621 00                    1817 	.db #0x00	; 0
      000622 00                    1818 	.db #0x00	; 0
      000623 00                    1819 	.db #0x00	; 0
      000624 00                    1820 	.db #0x00	; 0
      000625 00                    1821 	.db #0x00	; 0
      000626 00                    1822 	.db #0x00	; 0
      000627 00                    1823 	.db #0x00	; 0
      000628 09                    1824 	.db #0x09	; 9
      000629 06                    1825 	.db #0x06	; 6
      00062A 06                    1826 	.db #0x06	; 6
      00062B 0F                    1827 	.db #0x0f	; 15
      00062C 06                    1828 	.db #0x06	; 6
      00062D 0F                    1829 	.db #0x0f	; 15
      00062E 09                    1830 	.db #0x09	; 9
      00062F 06                    1831 	.db #0x06	; 6
      000630 00                    1832 	.db #0x00	; 0
      000631 00                    1833 	.db #0x00	; 0
      000632 00                    1834 	.db #0x00	; 0
      000633 00                    1835 	.db #0x00	; 0
      000634 00                    1836 	.db #0x00	; 0
      000635 00                    1837 	.db #0x00	; 0
      000636 00                    1838 	.db #0x00	; 0
      000637 00                    1839 	.db #0x00	; 0
      000638 00                    1840 	.db #0x00	; 0
      000639 00                    1841 	.db #0x00	; 0
      00063A 00                    1842 	.db #0x00	; 0
      00063B 00                    1843 	.db #0x00	; 0
      00063C 00                    1844 	.db #0x00	; 0
      00063D 00                    1845 	.db #0x00	; 0
      00063E 00                    1846 	.db #0x00	; 0
      00063F 00                    1847 	.db #0x00	; 0
      000640 00                    1848 	.db #0x00	; 0
      000641 00                    1849 	.db #0x00	; 0
      000642 00                    1850 	.db #0x00	; 0
      000643 00                    1851 	.db #0x00	; 0
      000644 00                    1852 	.db #0x00	; 0
      000645 00                    1853 	.db #0x00	; 0
      000646 00                    1854 	.db #0x00	; 0
      000647 00                    1855 	.db #0x00	; 0
      000648 99                    1856 	.db #0x99	; 153
      000649 66                    1857 	.db #0x66	; 102	'f'
      00064A 66                    1858 	.db #0x66	; 102	'f'
      00064B FF                    1859 	.db #0xff	; 255
      00064C 66                    1860 	.db #0x66	; 102	'f'
      00064D FF                    1861 	.db #0xff	; 255
      00064E 99                    1862 	.db #0x99	; 153
      00064F 66                    1863 	.db #0x66	; 102	'f'
      000650 00                    1864 	.db #0x00	; 0
      000651 00                    1865 	.db #0x00	; 0
      000652 00                    1866 	.db #0x00	; 0
      000653 00                    1867 	.db #0x00	; 0
      000654 00                    1868 	.db #0x00	; 0
      000655 00                    1869 	.db #0x00	; 0
      000656 00                    1870 	.db #0x00	; 0
      000657 00                    1871 	.db #0x00	; 0
      000658 00                    1872 	.db #0x00	; 0
      000659 00                    1873 	.db #0x00	; 0
      00065A 00                    1874 	.db #0x00	; 0
      00065B 00                    1875 	.db #0x00	; 0
      00065C 00                    1876 	.db #0x00	; 0
      00065D 00                    1877 	.db #0x00	; 0
      00065E 00                    1878 	.db #0x00	; 0
      00065F 00                    1879 	.db #0x00	; 0
      000660 00                    1880 	.db #0x00	; 0
      000661 00                    1881 	.db #0x00	; 0
      000662 00                    1882 	.db #0x00	; 0
      000663 00                    1883 	.db #0x00	; 0
      000664 00                    1884 	.db #0x00	; 0
      000665 00                    1885 	.db #0x00	; 0
      000666 00                    1886 	.db #0x00	; 0
      000667 00                    1887 	.db #0x00	; 0
      000668 09                    1888 	.db #0x09	; 9
      000669 06                    1889 	.db #0x06	; 6
      00066A 06                    1890 	.db #0x06	; 6
      00066B 0F                    1891 	.db #0x0f	; 15
      00066C 06                    1892 	.db #0x06	; 6
      00066D 0F                    1893 	.db #0x0f	; 15
      00066E 09                    1894 	.db #0x09	; 9
      00066F 06                    1895 	.db #0x06	; 6
      000670 09                    1896 	.db #0x09	; 9
      000671 06                    1897 	.db #0x06	; 6
      000672 06                    1898 	.db #0x06	; 6
      000673 0F                    1899 	.db #0x0f	; 15
      000674 06                    1900 	.db #0x06	; 6
      000675 0F                    1901 	.db #0x0f	; 15
      000676 09                    1902 	.db #0x09	; 9
      000677 06                    1903 	.db #0x06	; 6
      000678 00                    1904 	.db #0x00	; 0
      000679 00                    1905 	.db #0x00	; 0
      00067A 00                    1906 	.db #0x00	; 0
      00067B 00                    1907 	.db #0x00	; 0
      00067C 00                    1908 	.db #0x00	; 0
      00067D 00                    1909 	.db #0x00	; 0
      00067E 00                    1910 	.db #0x00	; 0
      00067F 00                    1911 	.db #0x00	; 0
      000680 00                    1912 	.db #0x00	; 0
      000681 00                    1913 	.db #0x00	; 0
      000682 00                    1914 	.db #0x00	; 0
      000683 00                    1915 	.db #0x00	; 0
      000684 00                    1916 	.db #0x00	; 0
      000685 00                    1917 	.db #0x00	; 0
      000686 00                    1918 	.db #0x00	; 0
      000687 00                    1919 	.db #0x00	; 0
      000688 90                    1920 	.db #0x90	; 144
      000689 60                    1921 	.db #0x60	; 96
      00068A 60                    1922 	.db #0x60	; 96
      00068B F0                    1923 	.db #0xf0	; 240
      00068C 60                    1924 	.db #0x60	; 96
      00068D F0                    1925 	.db #0xf0	; 240
      00068E 90                    1926 	.db #0x90	; 144
      00068F 60                    1927 	.db #0x60	; 96
      000690 09                    1928 	.db #0x09	; 9
      000691 06                    1929 	.db #0x06	; 6
      000692 06                    1930 	.db #0x06	; 6
      000693 0F                    1931 	.db #0x0f	; 15
      000694 06                    1932 	.db #0x06	; 6
      000695 0F                    1933 	.db #0x0f	; 15
      000696 09                    1934 	.db #0x09	; 9
      000697 06                    1935 	.db #0x06	; 6
      000698 00                    1936 	.db #0x00	; 0
      000699 00                    1937 	.db #0x00	; 0
      00069A 00                    1938 	.db #0x00	; 0
      00069B 00                    1939 	.db #0x00	; 0
      00069C 00                    1940 	.db #0x00	; 0
      00069D 00                    1941 	.db #0x00	; 0
      00069E 00                    1942 	.db #0x00	; 0
      00069F 00                    1943 	.db #0x00	; 0
      0006A0 00                    1944 	.db #0x00	; 0
      0006A1 00                    1945 	.db #0x00	; 0
      0006A2 00                    1946 	.db #0x00	; 0
      0006A3 00                    1947 	.db #0x00	; 0
      0006A4 00                    1948 	.db #0x00	; 0
      0006A5 00                    1949 	.db #0x00	; 0
      0006A6 00                    1950 	.db #0x00	; 0
      0006A7 00                    1951 	.db #0x00	; 0
      0006A8 18                    1952 	.db #0x18	; 24
      0006A9 00                    1953 	.db #0x00	; 0
      0006AA 18                    1954 	.db #0x18	; 24
      0006AB 18                    1955 	.db #0x18	; 24
      0006AC 18                    1956 	.db #0x18	; 24
      0006AD 18                    1957 	.db #0x18	; 24
      0006AE 3C                    1958 	.db #0x3c	; 60
      0006AF 18                    1959 	.db #0x18	; 24
      0006B0 3C                    1960 	.db #0x3c	; 60
      0006B1 18                    1961 	.db #0x18	; 24
      0006B2 3C                    1962 	.db #0x3c	; 60
      0006B3 3C                    1963 	.db #0x3c	; 60
      0006B4 7E                    1964 	.db #0x7e	; 126
      0006B5 3C                    1965 	.db #0x3c	; 60
      0006B6 7E                    1966 	.db #0x7e	; 126
      0006B7 24                    1967 	.db #0x24	; 36
      0006B8 00                    1968 	.db #0x00	; 0
      0006B9 00                    1969 	.db #0x00	; 0
      0006BA 00                    1970 	.db #0x00	; 0
      0006BB 00                    1971 	.db #0x00	; 0
      0006BC 00                    1972 	.db #0x00	; 0
      0006BD 00                    1973 	.db #0x00	; 0
      0006BE 00                    1974 	.db #0x00	; 0
      0006BF 00                    1975 	.db #0x00	; 0
      0006C0 00                    1976 	.db #0x00	; 0
      0006C1 00                    1977 	.db #0x00	; 0
      0006C2 00                    1978 	.db #0x00	; 0
      0006C3 00                    1979 	.db #0x00	; 0
      0006C4 00                    1980 	.db #0x00	; 0
      0006C5 00                    1981 	.db #0x00	; 0
      0006C6 00                    1982 	.db #0x00	; 0
      0006C7 00                    1983 	.db #0x00	; 0
      0006C8 C0                    1984 	.db #0xc0	; 192
      0006C9 00                    1985 	.db #0x00	; 0
      0006CA F8                    1986 	.db #0xf8	; 248
      0006CB E0                    1987 	.db #0xe0	; 224
      0006CC FF                    1988 	.db #0xff	; 255
      0006CD 7E                    1989 	.db #0x7e	; 126
      0006CE FF                    1990 	.db #0xff	; 255
      0006CF 7E                    1991 	.db #0x7e	; 126
      0006D0 F8                    1992 	.db #0xf8	; 248
      0006D1 E0                    1993 	.db #0xe0	; 224
      0006D2 C0                    1994 	.db #0xc0	; 192
      0006D3 00                    1995 	.db #0x00	; 0
      0006D4 00                    1996 	.db #0x00	; 0
      0006D5 00                    1997 	.db #0x00	; 0
      0006D6 00                    1998 	.db #0x00	; 0
      0006D7 00                    1999 	.db #0x00	; 0
      0006D8 00                    2000 	.db #0x00	; 0
      0006D9 00                    2001 	.db #0x00	; 0
      0006DA 00                    2002 	.db #0x00	; 0
      0006DB 00                    2003 	.db #0x00	; 0
      0006DC 00                    2004 	.db #0x00	; 0
      0006DD 00                    2005 	.db #0x00	; 0
      0006DE 00                    2006 	.db #0x00	; 0
      0006DF 00                    2007 	.db #0x00	; 0
      0006E0 00                    2008 	.db #0x00	; 0
      0006E1 00                    2009 	.db #0x00	; 0
      0006E2 00                    2010 	.db #0x00	; 0
      0006E3 00                    2011 	.db #0x00	; 0
      0006E4 00                    2012 	.db #0x00	; 0
      0006E5 00                    2013 	.db #0x00	; 0
      0006E6 00                    2014 	.db #0x00	; 0
      0006E7 00                    2015 	.db #0x00	; 0
      0006E8 06                    2016 	.db #0x06	; 6
      0006E9 00                    2017 	.db #0x00	; 0
      0006EA 0F                    2018 	.db #0x0f	; 15
      0006EB 06                    2019 	.db #0x06	; 6
      0006EC 1F                    2020 	.db #0x1f	; 31
      0006ED 0E                    2021 	.db #0x0e	; 14
      0006EE 7E                    2022 	.db #0x7e	; 126
      0006EF 1C                    2023 	.db #0x1c	; 28
      0006F0 FC                    2024 	.db #0xfc	; 252
      0006F1 78                    2025 	.db #0x78	; 120	'x'
      0006F2 F8                    2026 	.db #0xf8	; 248
      0006F3 F0                    2027 	.db #0xf0	; 240
      0006F4 F8                    2028 	.db #0xf8	; 248
      0006F5 70                    2029 	.db #0x70	; 112	'p'
      0006F6 70                    2030 	.db #0x70	; 112	'p'
      0006F7 20                    2031 	.db #0x20	; 32
      0006F8 00                    2032 	.db #0x00	; 0
      0006F9 00                    2033 	.db #0x00	; 0
      0006FA 00                    2034 	.db #0x00	; 0
      0006FB 00                    2035 	.db #0x00	; 0
      0006FC 00                    2036 	.db #0x00	; 0
      0006FD 00                    2037 	.db #0x00	; 0
      0006FE 00                    2038 	.db #0x00	; 0
      0006FF 00                    2039 	.db #0x00	; 0
      000700 00                    2040 	.db #0x00	; 0
      000701 00                    2041 	.db #0x00	; 0
      000702 00                    2042 	.db #0x00	; 0
      000703 00                    2043 	.db #0x00	; 0
      000704 00                    2044 	.db #0x00	; 0
      000705 00                    2045 	.db #0x00	; 0
      000706 00                    2046 	.db #0x00	; 0
      000707 00                    2047 	.db #0x00	; 0
      000708                       2048 _Upgrades:
      000708 FF                    2049 	.db #0xff	; 255
      000709 00                    2050 	.db #0x00	; 0
      00070A 81                    2051 	.db #0x81	; 129
      00070B 00                    2052 	.db #0x00	; 0
      00070C D7                    2053 	.db #0xd7	; 215
      00070D 56                    2054 	.db #0x56	; 86	'V'
      00070E D7                    2055 	.db #0xd7	; 215
      00070F 56                    2056 	.db #0x56	; 86	'V'
      000710 D5                    2057 	.db #0xd5	; 213
      000711 54                    2058 	.db #0x54	; 84	'T'
      000712 F5                    2059 	.db #0xf5	; 245
      000713 74                    2060 	.db #0x74	; 116	't'
      000714 81                    2061 	.db #0x81	; 129
      000715 00                    2062 	.db #0x00	; 0
      000716 FF                    2063 	.db #0xff	; 255
      000717 00                    2064 	.db #0x00	; 0
      000718 00                    2065 	.db #0x00	; 0
      000719 00                    2066 	.db #0x00	; 0
      00071A 00                    2067 	.db #0x00	; 0
      00071B 00                    2068 	.db #0x00	; 0
      00071C 00                    2069 	.db #0x00	; 0
      00071D 00                    2070 	.db #0x00	; 0
      00071E 00                    2071 	.db #0x00	; 0
      00071F 00                    2072 	.db #0x00	; 0
      000720 00                    2073 	.db #0x00	; 0
      000721 00                    2074 	.db #0x00	; 0
      000722 00                    2075 	.db #0x00	; 0
      000723 00                    2076 	.db #0x00	; 0
      000724 00                    2077 	.db #0x00	; 0
      000725 00                    2078 	.db #0x00	; 0
      000726 00                    2079 	.db #0x00	; 0
      000727 00                    2080 	.db #0x00	; 0
      000728 06                    2081 	.db #0x06	; 6
      000729 00                    2082 	.db #0x00	; 0
      00072A 0F                    2083 	.db #0x0f	; 15
      00072B 06                    2084 	.db #0x06	; 6
      00072C 1F                    2085 	.db #0x1f	; 31
      00072D 0E                    2086 	.db #0x0e	; 14
      00072E 7E                    2087 	.db #0x7e	; 126
      00072F 1C                    2088 	.db #0x1c	; 28
      000730 FC                    2089 	.db #0xfc	; 252
      000731 78                    2090 	.db #0x78	; 120	'x'
      000732 F8                    2091 	.db #0xf8	; 248
      000733 F0                    2092 	.db #0xf0	; 240
      000734 F8                    2093 	.db #0xf8	; 248
      000735 70                    2094 	.db #0x70	; 112	'p'
      000736 70                    2095 	.db #0x70	; 112	'p'
      000737 20                    2096 	.db #0x20	; 32
      000738 00                    2097 	.db #0x00	; 0
      000739 00                    2098 	.db #0x00	; 0
      00073A 00                    2099 	.db #0x00	; 0
      00073B 00                    2100 	.db #0x00	; 0
      00073C 00                    2101 	.db #0x00	; 0
      00073D 00                    2102 	.db #0x00	; 0
      00073E 00                    2103 	.db #0x00	; 0
      00073F 00                    2104 	.db #0x00	; 0
      000740 00                    2105 	.db #0x00	; 0
      000741 00                    2106 	.db #0x00	; 0
      000742 00                    2107 	.db #0x00	; 0
      000743 00                    2108 	.db #0x00	; 0
      000744 00                    2109 	.db #0x00	; 0
      000745 00                    2110 	.db #0x00	; 0
      000746 00                    2111 	.db #0x00	; 0
      000747 00                    2112 	.db #0x00	; 0
      000748                       2113 _Player1:
      000748 08                    2114 	.db #0x08	; 8
      000749 08                    2115 	.db #0x08	; 8
      00074A 1C                    2116 	.db #0x1c	; 28
      00074B 14                    2117 	.db #0x14	; 20
      00074C 38                    2118 	.db #0x38	; 56	'8'
      00074D 28                    2119 	.db #0x28	; 40
      00074E 68                    2120 	.db #0x68	; 104	'h'
      00074F 58                    2121 	.db #0x58	; 88	'X'
      000750 50                    2122 	.db #0x50	; 80	'P'
      000751 71                    2123 	.db #0x71	; 113	'q'
      000752 D0                    2124 	.db #0xd0	; 208
      000753 B2                    2125 	.db #0xb2	; 178
      000754 D5                    2126 	.db #0xd5	; 213
      000755 B6                    2127 	.db #0xb6	; 182
      000756 D5                    2128 	.db #0xd5	; 213
      000757 B6                    2129 	.db #0xb6	; 182
      000758 D5                    2130 	.db #0xd5	; 213
      000759 B6                    2131 	.db #0xb6	; 182
      00075A CD                    2132 	.db #0xcd	; 205
      00075B BE                    2133 	.db #0xbe	; 190
      00075C C5                    2134 	.db #0xc5	; 197
      00075D BE                    2135 	.db #0xbe	; 190
      00075E 65                    2136 	.db #0x65	; 101	'e'
      00075F 5E                    2137 	.db #0x5e	; 94
      000760 3E                    2138 	.db #0x3e	; 62
      000761 2F                    2139 	.db #0x2f	; 47
      000762 13                    2140 	.db #0x13	; 19
      000763 13                    2141 	.db #0x13	; 19
      000764 06                    2142 	.db #0x06	; 6
      000765 07                    2143 	.db #0x07	; 7
      000766 07                    2144 	.db #0x07	; 7
      000767 05                    2145 	.db #0x05	; 5
      000768 10                    2146 	.db #0x10	; 16
      000769 10                    2147 	.db #0x10	; 16
      00076A 38                    2148 	.db #0x38	; 56	'8'
      00076B 28                    2149 	.db #0x28	; 40
      00076C 1C                    2150 	.db #0x1c	; 28
      00076D 14                    2151 	.db #0x14	; 20
      00076E 16                    2152 	.db #0x16	; 22
      00076F 1A                    2153 	.db #0x1a	; 26
      000770 0A                    2154 	.db #0x0a	; 10
      000771 8E                    2155 	.db #0x8e	; 142
      000772 0B                    2156 	.db #0x0b	; 11
      000773 4D                    2157 	.db #0x4d	; 77	'M'
      000774 AB                    2158 	.db #0xab	; 171
      000775 6D                    2159 	.db #0x6d	; 109	'm'
      000776 AB                    2160 	.db #0xab	; 171
      000777 6D                    2161 	.db #0x6d	; 109	'm'
      000778 AB                    2162 	.db #0xab	; 171
      000779 6D                    2163 	.db #0x6d	; 109	'm'
      00077A B3                    2164 	.db #0xb3	; 179
      00077B 7D                    2165 	.db #0x7d	; 125
      00077C A3                    2166 	.db #0xa3	; 163
      00077D 7D                    2167 	.db #0x7d	; 125
      00077E A6                    2168 	.db #0xa6	; 166
      00077F 7A                    2169 	.db #0x7a	; 122	'z'
      000780 7C                    2170 	.db #0x7c	; 124
      000781 F4                    2171 	.db #0xf4	; 244
      000782 C8                    2172 	.db #0xc8	; 200
      000783 C8                    2173 	.db #0xc8	; 200
      000784 60                    2174 	.db #0x60	; 96
      000785 E0                    2175 	.db #0xe0	; 224
      000786 E0                    2176 	.db #0xe0	; 224
      000787 A0                    2177 	.db #0xa0	; 160
      000788 07                    2178 	.db #0x07	; 7
      000789 07                    2179 	.db #0x07	; 7
      00078A 0F                    2180 	.db #0x0f	; 15
      00078B 08                    2181 	.db #0x08	; 8
      00078C 18                    2182 	.db #0x18	; 24
      00078D 17                    2183 	.db #0x17	; 23
      00078E 31                    2184 	.db #0x31	; 49	'1'
      00078F 2F                    2185 	.db #0x2f	; 47
      000790 12                    2186 	.db #0x12	; 18
      000791 1E                    2187 	.db #0x1e	; 30
      000792 DF                    2188 	.db #0xdf	; 223
      000793 DF                    2189 	.db #0xdf	; 223
      000794 F0                    2190 	.db #0xf0	; 240
      000795 7F                    2191 	.db #0x7f	; 127
      000796 AF                    2192 	.db #0xaf	; 175
      000797 F0                    2193 	.db #0xf0	; 240
      000798 AF                    2194 	.db #0xaf	; 175
      000799 F0                    2195 	.db #0xf0	; 240
      00079A F0                    2196 	.db #0xf0	; 240
      00079B 7F                    2197 	.db #0x7f	; 127
      00079C DF                    2198 	.db #0xdf	; 223
      00079D DF                    2199 	.db #0xdf	; 223
      00079E 12                    2200 	.db #0x12	; 18
      00079F 1E                    2201 	.db #0x1e	; 30
      0007A0 31                    2202 	.db #0x31	; 49	'1'
      0007A1 2F                    2203 	.db #0x2f	; 47
      0007A2 18                    2204 	.db #0x18	; 24
      0007A3 17                    2205 	.db #0x17	; 23
      0007A4 0F                    2206 	.db #0x0f	; 15
      0007A5 08                    2207 	.db #0x08	; 8
      0007A6 07                    2208 	.db #0x07	; 7
      0007A7 07                    2209 	.db #0x07	; 7
      0007A8 E0                    2210 	.db #0xe0	; 224
      0007A9 E0                    2211 	.db #0xe0	; 224
      0007AA F8                    2212 	.db #0xf8	; 248
      0007AB 18                    2213 	.db #0x18	; 24
      0007AC 0C                    2214 	.db #0x0c	; 12
      0007AD F4                    2215 	.db #0xf4	; 244
      0007AE F6                    2216 	.db #0xf6	; 246
      0007AF FA                    2217 	.db #0xfa	; 250
      0007B0 0F                    2218 	.db #0x0f	; 15
      0007B1 0D                    2219 	.db #0x0d	; 13
      0007B2 C2                    2220 	.db #0xc2	; 194
      0007B3 C2                    2221 	.db #0xc2	; 194
      0007B4 00                    2222 	.db #0x00	; 0
      0007B5 E0                    2223 	.db #0xe0	; 224
      0007B6 C0                    2224 	.db #0xc0	; 192
      0007B7 10                    2225 	.db #0x10	; 16
      0007B8 C0                    2226 	.db #0xc0	; 192
      0007B9 10                    2227 	.db #0x10	; 16
      0007BA 00                    2228 	.db #0x00	; 0
      0007BB E0                    2229 	.db #0xe0	; 224
      0007BC C2                    2230 	.db #0xc2	; 194
      0007BD C2                    2231 	.db #0xc2	; 194
      0007BE 0F                    2232 	.db #0x0f	; 15
      0007BF 0D                    2233 	.db #0x0d	; 13
      0007C0 F6                    2234 	.db #0xf6	; 246
      0007C1 FA                    2235 	.db #0xfa	; 250
      0007C2 0C                    2236 	.db #0x0c	; 12
      0007C3 F4                    2237 	.db #0xf4	; 244
      0007C4 F8                    2238 	.db #0xf8	; 248
      0007C5 18                    2239 	.db #0x18	; 24
      0007C6 E0                    2240 	.db #0xe0	; 224
      0007C7 E0                    2241 	.db #0xe0	; 224
      0007C8 07                    2242 	.db #0x07	; 7
      0007C9 07                    2243 	.db #0x07	; 7
      0007CA 1B                    2244 	.db #0x1b	; 27
      0007CB 1C                    2245 	.db #0x1c	; 28
      0007CC 38                    2246 	.db #0x38	; 56	'8'
      0007CD 27                    2247 	.db #0x27	; 39
      0007CE 60                    2248 	.db #0x60	; 96
      0007CF 5E                    2249 	.db #0x5e	; 94
      0007D0 60                    2250 	.db #0x60	; 96
      0007D1 5C                    2251 	.db #0x5c	; 92
      0007D2 41                    2252 	.db #0x41	; 65	'A'
      0007D3 79                    2253 	.db #0x79	; 121	'y'
      0007D4 C4                    2254 	.db #0xc4	; 196
      0007D5 B7                    2255 	.db #0xb7	; 183
      0007D6 99                    2256 	.db #0x99	; 153
      0007D7 FE                    2257 	.db #0xfe	; 254
      0007D8 B3                    2258 	.db #0xb3	; 179
      0007D9 EC                    2259 	.db #0xec	; 236
      0007DA 67                    2260 	.db #0x67	; 103	'g'
      0007DB 58                    2261 	.db #0x58	; 88	'X'
      0007DC 2E                    2262 	.db #0x2e	; 46
      0007DD 31                    2263 	.db #0x31	; 49	'1'
      0007DE 5C                    2264 	.db #0x5c	; 92
      0007DF 73                    2265 	.db #0x73	; 115	's'
      0007E0 69                    2266 	.db #0x69	; 105	'i'
      0007E1 5E                    2267 	.db #0x5e	; 94
      0007E2 37                    2268 	.db #0x37	; 55	'7'
      0007E3 2D                    2269 	.db #0x2d	; 45
      0007E4 1A                    2270 	.db #0x1a	; 26
      0007E5 1B                    2271 	.db #0x1b	; 27
      0007E6 01                    2272 	.db #0x01	; 1
      0007E7 01                    2273 	.db #0x01	; 1
      0007E8 E0                    2274 	.db #0xe0	; 224
      0007E9 E0                    2275 	.db #0xe0	; 224
      0007EA 90                    2276 	.db #0x90	; 144
      0007EB 70                    2277 	.db #0x70	; 112	'p'
      0007EC C0                    2278 	.db #0xc0	; 192
      0007ED C0                    2279 	.db #0xc0	; 192
      0007EE 00                    2280 	.db #0x00	; 0
      0007EF 00                    2281 	.db #0x00	; 0
      0007F0 02                    2282 	.db #0x02	; 2
      0007F1 02                    2283 	.db #0x02	; 2
      0007F2 C1                    2284 	.db #0xc1	; 193
      0007F3 C3                    2285 	.db #0xc3	; 195
      0007F4 65                    2286 	.db #0x65	; 101	'e'
      0007F5 A7                    2287 	.db #0xa7	; 167
      0007F6 A7                    2288 	.db #0xa7	; 167
      0007F7 65                    2289 	.db #0x65	; 101	'e'
      0007F8 A3                    2290 	.db #0xa3	; 163
      0007F9 65                    2291 	.db #0x65	; 101	'e'
      0007FA 03                    2292 	.db #0x03	; 3
      0007FB CD                    2293 	.db #0xcd	; 205
      0007FC 41                    2294 	.db #0x41	; 65	'A'
      0007FD DF                    2295 	.db #0xdf	; 223
      0007FE 86                    2296 	.db #0x86	; 134
      0007FF BA                    2297 	.db #0xba	; 186
      000800 86                    2298 	.db #0x86	; 134
      000801 FA                    2299 	.db #0xfa	; 250
      000802 1C                    2300 	.db #0x1c	; 28
      000803 E4                    2301 	.db #0xe4	; 228
      000804 78                    2302 	.db #0x78	; 120	'x'
      000805 B8                    2303 	.db #0xb8	; 184
      000806 C0                    2304 	.db #0xc0	; 192
      000807 C0                    2305 	.db #0xc0	; 192
      000808 00                    2306 	.db #0x00	; 0
      000809 00                    2307 	.db #0x00	; 0
      00080A 00                    2308 	.db #0x00	; 0
      00080B 00                    2309 	.db #0x00	; 0
      00080C 00                    2310 	.db #0x00	; 0
      00080D 00                    2311 	.db #0x00	; 0
      00080E 00                    2312 	.db #0x00	; 0
      00080F 00                    2313 	.db #0x00	; 0
      000810 00                    2314 	.db #0x00	; 0
      000811 00                    2315 	.db #0x00	; 0
      000812 00                    2316 	.db #0x00	; 0
      000813 00                    2317 	.db #0x00	; 0
      000814 00                    2318 	.db #0x00	; 0
      000815 00                    2319 	.db #0x00	; 0
      000816 00                    2320 	.db #0x00	; 0
      000817 00                    2321 	.db #0x00	; 0
      000818 00                    2322 	.db #0x00	; 0
      000819 00                    2323 	.db #0x00	; 0
      00081A 00                    2324 	.db #0x00	; 0
      00081B 00                    2325 	.db #0x00	; 0
      00081C 00                    2326 	.db #0x00	; 0
      00081D 00                    2327 	.db #0x00	; 0
      00081E 00                    2328 	.db #0x00	; 0
      00081F 00                    2329 	.db #0x00	; 0
      000820 00                    2330 	.db #0x00	; 0
      000821 00                    2331 	.db #0x00	; 0
      000822 00                    2332 	.db #0x00	; 0
      000823 00                    2333 	.db #0x00	; 0
      000824 00                    2334 	.db #0x00	; 0
      000825 00                    2335 	.db #0x00	; 0
      000826 00                    2336 	.db #0x00	; 0
      000827 00                    2337 	.db #0x00	; 0
      000828 00                    2338 	.db #0x00	; 0
      000829 00                    2339 	.db #0x00	; 0
      00082A 00                    2340 	.db #0x00	; 0
      00082B 00                    2341 	.db #0x00	; 0
      00082C 00                    2342 	.db #0x00	; 0
      00082D 00                    2343 	.db #0x00	; 0
      00082E 00                    2344 	.db #0x00	; 0
      00082F 00                    2345 	.db #0x00	; 0
      000830 00                    2346 	.db #0x00	; 0
      000831 00                    2347 	.db #0x00	; 0
      000832 00                    2348 	.db #0x00	; 0
      000833 00                    2349 	.db #0x00	; 0
      000834 00                    2350 	.db #0x00	; 0
      000835 00                    2351 	.db #0x00	; 0
      000836 00                    2352 	.db #0x00	; 0
      000837 00                    2353 	.db #0x00	; 0
      000838 00                    2354 	.db #0x00	; 0
      000839 00                    2355 	.db #0x00	; 0
      00083A 00                    2356 	.db #0x00	; 0
      00083B 00                    2357 	.db #0x00	; 0
      00083C 00                    2358 	.db #0x00	; 0
      00083D 00                    2359 	.db #0x00	; 0
      00083E 00                    2360 	.db #0x00	; 0
      00083F 00                    2361 	.db #0x00	; 0
      000840 00                    2362 	.db #0x00	; 0
      000841 00                    2363 	.db #0x00	; 0
      000842 00                    2364 	.db #0x00	; 0
      000843 00                    2365 	.db #0x00	; 0
      000844 00                    2366 	.db #0x00	; 0
      000845 00                    2367 	.db #0x00	; 0
      000846 00                    2368 	.db #0x00	; 0
      000847 00                    2369 	.db #0x00	; 0
      000848                       2370 _BLANKSIZE:
      000848 03                    2371 	.db #0x03	; 3
      000849                       2372 _BLANK:
      000849 26                    2373 	.db #0x26	; 38
      00084A 2B                    2374 	.db #0x2b	; 43
      00084B 2C                    2375 	.db #0x2c	; 44
      00084C                       2376 _EMPTYSPRITE:
      00084C 50                    2377 	.db #0x50	; 80	'P'
      00084D                       2378 _ENEMYCOUNT:
      00084D 05                    2379 	.db #0x05	; 5
      00084E                       2380 _xSpawnPositions:
      00084E 00                    2381 	.db #0x00	; 0
      00084F 60                    2382 	.db #0x60	; 96
      000850 B0                    2383 	.db #0xb0	; 176
      000851 00                    2384 	.db #0x00	; 0
      000852 B0                    2385 	.db #0xb0	; 176
      000853 00                    2386 	.db #0x00	; 0
      000854 60                    2387 	.db #0x60	; 96
      000855 B0                    2388 	.db #0xb0	; 176
      000856                       2389 _ySpawnPositions:
      000856 00                    2390 	.db #0x00	; 0
      000857 00                    2391 	.db #0x00	; 0
      000858 00                    2392 	.db #0x00	; 0
      000859 5C                    2393 	.db #0x5c	; 92
      00085A 5C                    2394 	.db #0x5c	; 92
      00085B A0                    2395 	.db #0xa0	; 160
      00085C A0                    2396 	.db #0xa0	; 160
      00085D A0                    2397 	.db #0xa0	; 160
      00085E                       2398 _PROJECTILECOUNT:
      00085E 05                    2399 	.db #0x05	; 5
      00085F                       2400 _PLAYERSIZE:
      00085F 10                    2401 	.db #0x10	; 16
      000860                       2402 _maxHull:
      000860 64                    2403 	.db #0x64	;  100	'd'
      000861                       2404 _maxShield:
      000861 64                    2405 	.db #0x64	;  100	'd'
                                   2406 ;src/main.c:119: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2407 ;	---------------------------------
                                   2408 ; Function setHealthBar
                                   2409 ; ---------------------------------
      000862                       2410 _setHealthBar::
      000862 E8 FB                 2411 	add	sp, #-5
                                   2412 ;src/main.c:121: if (hp >= 80) {
      000864 F8 08                 2413 	ldhl	sp,	#8
      000866 7E                    2414 	ld	a, (hl)
      000867 D6 50                 2415 	sub	a, #0x50
      000869 38 31                 2416 	jr	C, 00102$
                                   2417 ;src/main.c:122: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      00086B F8 00                 2418 	ldhl	sp,	#0
      00086D 4D                    2419 	ld	c, l
      00086E 44                    2420 	ld	b, h
      00086F 36 50                 2421 	ld	(hl), #0x50
      000871 69                    2422 	ld	l, c
                                   2423 ;	spillPairReg hl
                                   2424 ;	spillPairReg hl
      000872 60                    2425 	ld	h, b
                                   2426 ;	spillPairReg hl
                                   2427 ;	spillPairReg hl
      000873 23                    2428 	inc	hl
      000874 36 50                 2429 	ld	(hl), #0x50
      000876 69                    2430 	ld	l, c
                                   2431 ;	spillPairReg hl
                                   2432 ;	spillPairReg hl
      000877 60                    2433 	ld	h, b
                                   2434 ;	spillPairReg hl
                                   2435 ;	spillPairReg hl
      000878 23                    2436 	inc	hl
      000879 23                    2437 	inc	hl
      00087A 36 50                 2438 	ld	(hl), #0x50
      00087C 69                    2439 	ld	l, c
                                   2440 ;	spillPairReg hl
                                   2441 ;	spillPairReg hl
      00087D 60                    2442 	ld	h, b
                                   2443 ;	spillPairReg hl
                                   2444 ;	spillPairReg hl
      00087E 23                    2445 	inc	hl
      00087F 23                    2446 	inc	hl
      000880 23                    2447 	inc	hl
      000881 36 50                 2448 	ld	(hl), #0x50
      000883 21 04 00              2449 	ld	hl, #0x0004
      000886 09                    2450 	add	hl, bc
      000887 36 50                 2451 	ld	(hl), #0x50
                                   2452 ;src/main.c:123: set_win_tiles(5,row,5,1,blockmap);
      000889 C5                    2453 	push	bc
      00088A 21 05 01              2454 	ld	hl, #0x105
      00088D E5                    2455 	push	hl
      00088E F8 0B                 2456 	ldhl	sp,	#11
      000890 66                    2457 	ld	h, (hl)
      000891 2E 05                 2458 	ld	l, #0x05
      000893 E5                    2459 	push	hl
      000894 CDr00r00              2460 	call	_set_win_tiles
      000897 E8 06                 2461 	add	sp, #6
                                   2462 ;src/main.c:124: return;
      000899 C3r70r09              2463 	jp	00109$
      00089C                       2464 00102$:
                                   2465 ;src/main.c:126: if (hp >= 60) {
      00089C F8 08                 2466 	ldhl	sp,	#8
      00089E 7E                    2467 	ld	a, (hl)
      00089F D6 3C                 2468 	sub	a, #0x3c
      0008A1 38 31                 2469 	jr	C, 00104$
                                   2470 ;src/main.c:127: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0008A3 F8 00                 2471 	ldhl	sp,	#0
      0008A5 4D                    2472 	ld	c, l
      0008A6 44                    2473 	ld	b, h
      0008A7 36 50                 2474 	ld	(hl), #0x50
      0008A9 69                    2475 	ld	l, c
                                   2476 ;	spillPairReg hl
                                   2477 ;	spillPairReg hl
      0008AA 60                    2478 	ld	h, b
                                   2479 ;	spillPairReg hl
                                   2480 ;	spillPairReg hl
      0008AB 23                    2481 	inc	hl
      0008AC 36 50                 2482 	ld	(hl), #0x50
      0008AE 69                    2483 	ld	l, c
                                   2484 ;	spillPairReg hl
                                   2485 ;	spillPairReg hl
      0008AF 60                    2486 	ld	h, b
                                   2487 ;	spillPairReg hl
                                   2488 ;	spillPairReg hl
      0008B0 23                    2489 	inc	hl
      0008B1 23                    2490 	inc	hl
      0008B2 36 50                 2491 	ld	(hl), #0x50
      0008B4 69                    2492 	ld	l, c
                                   2493 ;	spillPairReg hl
                                   2494 ;	spillPairReg hl
      0008B5 60                    2495 	ld	h, b
                                   2496 ;	spillPairReg hl
                                   2497 ;	spillPairReg hl
      0008B6 23                    2498 	inc	hl
      0008B7 23                    2499 	inc	hl
      0008B8 23                    2500 	inc	hl
      0008B9 36 50                 2501 	ld	(hl), #0x50
      0008BB 21 04 00              2502 	ld	hl, #0x0004
      0008BE 09                    2503 	add	hl, bc
      0008BF 36 00                 2504 	ld	(hl), #0x00
                                   2505 ;src/main.c:128: set_win_tiles(5,row,5,1,blockmap);
      0008C1 C5                    2506 	push	bc
      0008C2 21 05 01              2507 	ld	hl, #0x105
      0008C5 E5                    2508 	push	hl
      0008C6 F8 0B                 2509 	ldhl	sp,	#11
      0008C8 66                    2510 	ld	h, (hl)
      0008C9 2E 05                 2511 	ld	l, #0x05
      0008CB E5                    2512 	push	hl
      0008CC CDr00r00              2513 	call	_set_win_tiles
      0008CF E8 06                 2514 	add	sp, #6
                                   2515 ;src/main.c:129: return;
      0008D1 C3r70r09              2516 	jp	00109$
      0008D4                       2517 00104$:
                                   2518 ;src/main.c:131: if (hp >= 40) {
      0008D4 F8 08                 2519 	ldhl	sp,	#8
      0008D6 7E                    2520 	ld	a, (hl)
      0008D7 D6 28                 2521 	sub	a, #0x28
      0008D9 38 30                 2522 	jr	C, 00106$
                                   2523 ;src/main.c:132: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      0008DB F8 00                 2524 	ldhl	sp,	#0
      0008DD 4D                    2525 	ld	c, l
      0008DE 44                    2526 	ld	b, h
      0008DF 36 50                 2527 	ld	(hl), #0x50
      0008E1 69                    2528 	ld	l, c
                                   2529 ;	spillPairReg hl
                                   2530 ;	spillPairReg hl
      0008E2 60                    2531 	ld	h, b
                                   2532 ;	spillPairReg hl
                                   2533 ;	spillPairReg hl
      0008E3 23                    2534 	inc	hl
      0008E4 36 50                 2535 	ld	(hl), #0x50
      0008E6 69                    2536 	ld	l, c
                                   2537 ;	spillPairReg hl
                                   2538 ;	spillPairReg hl
      0008E7 60                    2539 	ld	h, b
                                   2540 ;	spillPairReg hl
                                   2541 ;	spillPairReg hl
      0008E8 23                    2542 	inc	hl
      0008E9 23                    2543 	inc	hl
      0008EA 36 50                 2544 	ld	(hl), #0x50
      0008EC 59                    2545 	ld	e, c
      0008ED 50                    2546 	ld	d, b
      0008EE 13                    2547 	inc	de
      0008EF 13                    2548 	inc	de
      0008F0 13                    2549 	inc	de
      0008F1 AF                    2550 	xor	a, a
      0008F2 12                    2551 	ld	(de), a
      0008F3 21 04 00              2552 	ld	hl, #0x0004
      0008F6 09                    2553 	add	hl, bc
      0008F7 36 00                 2554 	ld	(hl), #0x00
                                   2555 ;src/main.c:133: set_win_tiles(5,row,5,1,blockmap);
      0008F9 C5                    2556 	push	bc
      0008FA 21 05 01              2557 	ld	hl, #0x105
      0008FD E5                    2558 	push	hl
      0008FE F8 0B                 2559 	ldhl	sp,	#11
      000900 66                    2560 	ld	h, (hl)
      000901 2E 05                 2561 	ld	l, #0x05
      000903 E5                    2562 	push	hl
      000904 CDr00r00              2563 	call	_set_win_tiles
      000907 E8 06                 2564 	add	sp, #6
                                   2565 ;src/main.c:134: return;
      000909 18 65                 2566 	jr	00109$
      00090B                       2567 00106$:
                                   2568 ;src/main.c:136: if (hp >= 20) {
      00090B F8 08                 2569 	ldhl	sp,	#8
      00090D 7E                    2570 	ld	a, (hl)
      00090E D6 14                 2571 	sub	a, #0x14
      000910 38 30                 2572 	jr	C, 00108$
                                   2573 ;src/main.c:137: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000912 F8 00                 2574 	ldhl	sp,	#0
      000914 4D                    2575 	ld	c, l
      000915 44                    2576 	ld	b, h
      000916 36 50                 2577 	ld	(hl), #0x50
      000918 69                    2578 	ld	l, c
                                   2579 ;	spillPairReg hl
                                   2580 ;	spillPairReg hl
      000919 60                    2581 	ld	h, b
                                   2582 ;	spillPairReg hl
                                   2583 ;	spillPairReg hl
      00091A 23                    2584 	inc	hl
      00091B 36 50                 2585 	ld	(hl), #0x50
      00091D 59                    2586 	ld	e, c
      00091E 50                    2587 	ld	d, b
      00091F 13                    2588 	inc	de
      000920 13                    2589 	inc	de
      000921 AF                    2590 	xor	a, a
      000922 12                    2591 	ld	(de), a
      000923 59                    2592 	ld	e, c
      000924 50                    2593 	ld	d, b
      000925 13                    2594 	inc	de
      000926 13                    2595 	inc	de
      000927 13                    2596 	inc	de
      000928 AF                    2597 	xor	a, a
      000929 12                    2598 	ld	(de), a
      00092A 21 04 00              2599 	ld	hl, #0x0004
      00092D 09                    2600 	add	hl, bc
      00092E 36 00                 2601 	ld	(hl), #0x00
                                   2602 ;src/main.c:138: set_win_tiles(5,row,5,1,blockmap);
      000930 C5                    2603 	push	bc
      000931 21 05 01              2604 	ld	hl, #0x105
      000934 E5                    2605 	push	hl
      000935 F8 0B                 2606 	ldhl	sp,	#11
      000937 66                    2607 	ld	h, (hl)
      000938 2E 05                 2608 	ld	l, #0x05
      00093A E5                    2609 	push	hl
      00093B CDr00r00              2610 	call	_set_win_tiles
      00093E E8 06                 2611 	add	sp, #6
                                   2612 ;src/main.c:139: return;
      000940 18 2E                 2613 	jr	00109$
      000942                       2614 00108$:
                                   2615 ;src/main.c:141: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000942 F8 00                 2616 	ldhl	sp,	#0
      000944 4D                    2617 	ld	c, l
      000945 44                    2618 	ld	b, h
      000946 36 50                 2619 	ld	(hl), #0x50
      000948 59                    2620 	ld	e, c
      000949 50                    2621 	ld	d, b
      00094A 13                    2622 	inc	de
      00094B AF                    2623 	xor	a, a
      00094C 12                    2624 	ld	(de), a
      00094D 59                    2625 	ld	e, c
      00094E 50                    2626 	ld	d, b
      00094F 13                    2627 	inc	de
      000950 13                    2628 	inc	de
      000951 AF                    2629 	xor	a, a
      000952 12                    2630 	ld	(de), a
      000953 59                    2631 	ld	e, c
      000954 50                    2632 	ld	d, b
      000955 13                    2633 	inc	de
      000956 13                    2634 	inc	de
      000957 13                    2635 	inc	de
      000958 AF                    2636 	xor	a, a
      000959 12                    2637 	ld	(de), a
      00095A 21 04 00              2638 	ld	hl, #0x0004
      00095D 09                    2639 	add	hl, bc
      00095E 36 00                 2640 	ld	(hl), #0x00
                                   2641 ;src/main.c:142: set_win_tiles(5,row,5,1,blockmap);
      000960 C5                    2642 	push	bc
      000961 21 05 01              2643 	ld	hl, #0x105
      000964 E5                    2644 	push	hl
      000965 F8 0B                 2645 	ldhl	sp,	#11
      000967 66                    2646 	ld	h, (hl)
      000968 2E 05                 2647 	ld	l, #0x05
      00096A E5                    2648 	push	hl
      00096B CDr00r00              2649 	call	_set_win_tiles
      00096E E8 06                 2650 	add	sp, #6
                                   2651 ;src/main.c:143: return;
      000970                       2652 00109$:
                                   2653 ;src/main.c:145: }
      000970 E8 05                 2654 	add	sp, #5
      000972 C9                    2655 	ret
                                   2656 ;src/main.c:147: void updateScore() {
                                   2657 ;	---------------------------------
                                   2658 ; Function updateScore
                                   2659 ; ---------------------------------
      000973                       2660 _updateScore::
      000973 E8 F6                 2661 	add	sp, #-10
                                   2662 ;src/main.c:151: len = bcd2text(&SCORE, 0x01, buf);
      000975 F8 00                 2663 	ldhl	sp,	#0
      000977 4D                    2664 	ld	c, l
      000978 44                    2665 	ld	b, h
      000979 59                    2666 	ld	e, c
      00097A 50                    2667 	ld	d, b
      00097B C5                    2668 	push	bc
      00097C D5                    2669 	push	de
      00097D 3E 01                 2670 	ld	a, #0x01
      00097F F5                    2671 	push	af
      000980 33                    2672 	inc	sp
      000981 11rB2r00              2673 	ld	de, #_SCORE
      000984 D5                    2674 	push	de
      000985 CDr00r00              2675 	call	_bcd2text
      000988 E8 05                 2676 	add	sp, #5
      00098A C1                    2677 	pop	bc
                                   2678 ;src/main.c:152: set_win_tiles(15, 1, 5, 1, buf+3);
      00098B 03                    2679 	inc	bc
      00098C 03                    2680 	inc	bc
      00098D 03                    2681 	inc	bc
      00098E C5                    2682 	push	bc
      00098F 21 05 01              2683 	ld	hl, #0x105
      000992 E5                    2684 	push	hl
      000993 21 0F 01              2685 	ld	hl, #0x10f
      000996 E5                    2686 	push	hl
      000997 CDr00r00              2687 	call	_set_win_tiles
                                   2688 ;src/main.c:153: }
      00099A E8 10                 2689 	add	sp, #16
      00099C C9                    2690 	ret
                                   2691 ;src/main.c:155: void updateMissileCount(int8_t amount) {
                                   2692 ;	---------------------------------
                                   2693 ; Function updateMissileCount
                                   2694 ; ---------------------------------
      00099D                       2695 _updateMissileCount::
      00099D E8 F6                 2696 	add	sp, #-10
                                   2697 ;src/main.c:156: if (amount == -1) {
      00099F F8 0C                 2698 	ldhl	sp,	#12
      0009A1 7E                    2699 	ld	a, (hl)
      0009A2 3C                    2700 	inc	a
      0009A3 20 11                 2701 	jr	NZ, 00102$
                                   2702 ;src/main.c:157: missiles--;
      0009A5 21rA7r00              2703 	ld	hl, #_missiles
      0009A8 35                    2704 	dec	(hl)
                                   2705 ;src/main.c:158: bcd_sub(&MISSILES, &INCREMENT);
      0009A9 11rB6r00              2706 	ld	de, #_INCREMENT
      0009AC D5                    2707 	push	de
      0009AD 11rA8r00              2708 	ld	de, #_MISSILES
      0009B0 D5                    2709 	push	de
      0009B1 CDr00r00              2710 	call	_bcd_sub
      0009B4 E8 04                 2711 	add	sp, #4
      0009B6                       2712 00102$:
                                   2713 ;src/main.c:162: len = bcd2text(&MISSILES, 0x01, buf);
      0009B6 F8 00                 2714 	ldhl	sp,	#0
      0009B8 4D                    2715 	ld	c, l
      0009B9 44                    2716 	ld	b, h
      0009BA 59                    2717 	ld	e, c
      0009BB 50                    2718 	ld	d, b
      0009BC C5                    2719 	push	bc
      0009BD D5                    2720 	push	de
      0009BE 3E 01                 2721 	ld	a, #0x01
      0009C0 F5                    2722 	push	af
      0009C1 33                    2723 	inc	sp
      0009C2 11rA8r00              2724 	ld	de, #_MISSILES
      0009C5 D5                    2725 	push	de
      0009C6 CDr00r00              2726 	call	_bcd2text
      0009C9 E8 05                 2727 	add	sp, #5
      0009CB C1                    2728 	pop	bc
                                   2729 ;src/main.c:163: set_win_tiles(18, 0, 2, 1, buf+6);
      0009CC 21 06 00              2730 	ld	hl, #0x0006
      0009CF 09                    2731 	add	hl, bc
      0009D0 E5                    2732 	push	hl
      0009D1 21 02 01              2733 	ld	hl, #0x102
      0009D4 E5                    2734 	push	hl
      0009D5 21 12 00              2735 	ld	hl, #0x12
      0009D8 E5                    2736 	push	hl
      0009D9 CDr00r00              2737 	call	_set_win_tiles
                                   2738 ;src/main.c:165: }
      0009DC E8 10                 2739 	add	sp, #16
      0009DE C9                    2740 	ret
                                   2741 ;src/main.c:167: void incrementScore() {
                                   2742 ;	---------------------------------
                                   2743 ; Function incrementScore
                                   2744 ; ---------------------------------
      0009DF                       2745 _incrementScore::
                                   2746 ;src/main.c:168: score += 1;
      0009DF 21rB0r00              2747 	ld	hl, #_score
      0009E2 2A                    2748 	ld	a, (hl+)
      0009E3 4F                    2749 	ld	c, a
      0009E4 3A                    2750 	ld	a, (hl-)
      0009E5 47                    2751 	ld	b, a
      0009E6 03                    2752 	inc	bc
      0009E7 79                    2753 	ld	a, c
      0009E8 22                    2754 	ld	(hl+), a
      0009E9 70                    2755 	ld	(hl), b
                                   2756 ;src/main.c:169: bcd_add(&SCORE, &INCREMENT);
      0009EA 11rB6r00              2757 	ld	de, #_INCREMENT
      0009ED D5                    2758 	push	de
      0009EE 11rB2r00              2759 	ld	de, #_SCORE
      0009F1 D5                    2760 	push	de
      0009F2 CDr00r00              2761 	call	_bcd_add
      0009F5 E8 04                 2762 	add	sp, #4
                                   2763 ;src/main.c:170: }
      0009F7 C9                    2764 	ret
                                   2765 ;src/main.c:172: void updateDirection() {
                                   2766 ;	---------------------------------
                                   2767 ; Function updateDirection
                                   2768 ; ---------------------------------
      0009F8                       2769 _updateDirection::
      0009F8 E8 FC                 2770 	add	sp, #-4
                                   2771 ;src/main.c:176: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      0009FA 21rDCr00              2772 	ld	hl, #_joydata
      0009FD 5E                    2773 	ld	e, (hl)
      0009FE 7B                    2774 	ld	a, e
      0009FF E6 01                 2775 	and	a, #0x01
      000A01 F8 00                 2776 	ldhl	sp,	#0
      000A03 22                    2777 	ld	(hl+), a
      000A04 AF                    2778 	xor	a, a
      000A05 22                    2779 	ld	(hl+), a
      000A06 7B                    2780 	ld	a, e
      000A07 E6 04                 2781 	and	a, #0x04
      000A09 22                    2782 	ld	(hl+), a
      000A0A AF                    2783 	xor	a, a
      000A0B 32                    2784 	ld	(hl-), a
      000A0C 2B                    2785 	dec	hl
      000A0D 7B                    2786 	ld	a, e
      000A0E E6 08                 2787 	and	a, #0x08
      000A10 4F                    2788 	ld	c, a
      000A11 06 00                 2789 	ld	b, #0x00
      000A13 3A                    2790 	ld	a, (hl-)
      000A14 B6                    2791 	or	a, (hl)
      000A15 28 14                 2792 	jr	Z, 00102$
      000A17 F8 03                 2793 	ldhl	sp,	#3
      000A19 3A                    2794 	ld	a, (hl-)
      000A1A B6                    2795 	or	a, (hl)
      000A1B 20 0E                 2796 	jr	NZ, 00102$
      000A1D 78                    2797 	ld	a, b
      000A1E B1                    2798 	or	a, c
      000A1F 20 0A                 2799 	jr	NZ, 00102$
                                   2800 ;src/main.c:177: xDir = 1;
      000A21 21r92r00              2801 	ld	hl, #_xDir
      000A24 36 01                 2802 	ld	(hl), #0x01
                                   2803 ;src/main.c:178: yDir = 0;
      000A26 21r93r00              2804 	ld	hl, #_yDir
      000A29 36 00                 2805 	ld	(hl), #0x00
      000A2B                       2806 00102$:
                                   2807 ;src/main.c:180: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A2B 7B                    2808 	ld	a, e
      000A2C E6 02                 2809 	and	a, #0x02
      000A2E 5F                    2810 	ld	e, a
      000A2F 16 00                 2811 	ld	d, #0x00
      000A31 7A                    2812 	ld	a, d
      000A32 B3                    2813 	or	a, e
      000A33 28 14                 2814 	jr	Z, 00106$
      000A35 F8 03                 2815 	ldhl	sp,	#3
      000A37 3A                    2816 	ld	a, (hl-)
      000A38 B6                    2817 	or	a, (hl)
      000A39 20 0E                 2818 	jr	NZ, 00106$
      000A3B 78                    2819 	ld	a, b
      000A3C B1                    2820 	or	a, c
      000A3D 20 0A                 2821 	jr	NZ, 00106$
                                   2822 ;src/main.c:181: xDir = -1;
      000A3F 21r92r00              2823 	ld	hl, #_xDir
      000A42 36 FF                 2824 	ld	(hl), #0xff
                                   2825 ;src/main.c:182: yDir = 0;
      000A44 21r93r00              2826 	ld	hl, #_yDir
      000A47 36 00                 2827 	ld	(hl), #0x00
      000A49                       2828 00106$:
                                   2829 ;src/main.c:184: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000A49 F8 03                 2830 	ldhl	sp,	#3
      000A4B 3A                    2831 	ld	a, (hl-)
      000A4C B6                    2832 	or	a, (hl)
      000A4D 28 13                 2833 	jr	Z, 00110$
      000A4F 7A                    2834 	ld	a, d
      000A50 B3                    2835 	or	a, e
      000A51 20 0F                 2836 	jr	NZ, 00110$
      000A53 2B                    2837 	dec	hl
      000A54 3A                    2838 	ld	a, (hl-)
      000A55 B6                    2839 	or	a, (hl)
      000A56 20 0A                 2840 	jr	NZ, 00110$
                                   2841 ;src/main.c:185: xDir = 0;
      000A58 21r92r00              2842 	ld	hl, #_xDir
      000A5B 36 00                 2843 	ld	(hl), #0x00
                                   2844 ;src/main.c:186: yDir = -1;
      000A5D 21r93r00              2845 	ld	hl, #_yDir
      000A60 36 FF                 2846 	ld	(hl), #0xff
      000A62                       2847 00110$:
                                   2848 ;src/main.c:188: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000A62 78                    2849 	ld	a, b
      000A63 B1                    2850 	or	a, c
      000A64 28 14                 2851 	jr	Z, 00114$
      000A66 7A                    2852 	ld	a, d
      000A67 B3                    2853 	or	a, e
      000A68 20 10                 2854 	jr	NZ, 00114$
      000A6A F8 01                 2855 	ldhl	sp,	#1
      000A6C 3A                    2856 	ld	a, (hl-)
      000A6D B6                    2857 	or	a, (hl)
      000A6E 20 0A                 2858 	jr	NZ, 00114$
                                   2859 ;src/main.c:189: xDir = 0;
      000A70 21r92r00              2860 	ld	hl, #_xDir
      000A73 36 00                 2861 	ld	(hl), #0x00
                                   2862 ;src/main.c:190: yDir = 1;
      000A75 21r93r00              2863 	ld	hl, #_yDir
      000A78 36 01                 2864 	ld	(hl), #0x01
      000A7A                       2865 00114$:
                                   2866 ;src/main.c:194: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000A7A F8 03                 2867 	ldhl	sp,	#3
      000A7C 3A                    2868 	ld	a, (hl-)
      000A7D B6                    2869 	or	a, (hl)
      000A7E 28 0F                 2870 	jr	Z, 00118$
      000A80 2B                    2871 	dec	hl
      000A81 3A                    2872 	ld	a, (hl-)
      000A82 B6                    2873 	or	a, (hl)
      000A83 28 0A                 2874 	jr	Z, 00118$
                                   2875 ;src/main.c:195: xDir = 1;
      000A85 21r92r00              2876 	ld	hl, #_xDir
      000A88 36 01                 2877 	ld	(hl), #0x01
                                   2878 ;src/main.c:196: yDir = -1;
      000A8A 21r93r00              2879 	ld	hl, #_yDir
      000A8D 36 FF                 2880 	ld	(hl), #0xff
      000A8F                       2881 00118$:
                                   2882 ;src/main.c:198: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000A8F F8 03                 2883 	ldhl	sp,	#3
      000A91 3A                    2884 	ld	a, (hl-)
      000A92 B6                    2885 	or	a, (hl)
      000A93 28 0E                 2886 	jr	Z, 00121$
      000A95 7A                    2887 	ld	a, d
      000A96 B3                    2888 	or	a, e
      000A97 28 0A                 2889 	jr	Z, 00121$
                                   2890 ;src/main.c:199: xDir = -1;
      000A99 21r92r00              2891 	ld	hl, #_xDir
      000A9C 36 FF                 2892 	ld	(hl), #0xff
                                   2893 ;src/main.c:200: yDir = -1;
      000A9E 21r93r00              2894 	ld	hl, #_yDir
      000AA1 36 FF                 2895 	ld	(hl), #0xff
      000AA3                       2896 00121$:
                                   2897 ;src/main.c:202: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000AA3 78                    2898 	ld	a, b
      000AA4 B1                    2899 	or	a, c
      000AA5 28 10                 2900 	jr	Z, 00124$
      000AA7 F8 01                 2901 	ldhl	sp,	#1
      000AA9 3A                    2902 	ld	a, (hl-)
      000AAA B6                    2903 	or	a, (hl)
      000AAB 28 0A                 2904 	jr	Z, 00124$
                                   2905 ;src/main.c:203: xDir = 1;
      000AAD 21r92r00              2906 	ld	hl, #_xDir
      000AB0 36 01                 2907 	ld	(hl), #0x01
                                   2908 ;src/main.c:204: yDir = 1;
      000AB2 21r93r00              2909 	ld	hl, #_yDir
      000AB5 36 01                 2910 	ld	(hl), #0x01
      000AB7                       2911 00124$:
                                   2912 ;src/main.c:206: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000AB7 78                    2913 	ld	a, b
      000AB8 B1                    2914 	or	a, c
      000AB9 28 0E                 2915 	jr	Z, 00127$
      000ABB 7A                    2916 	ld	a, d
      000ABC B3                    2917 	or	a, e
      000ABD 28 0A                 2918 	jr	Z, 00127$
                                   2919 ;src/main.c:207: xDir = -1;
      000ABF 21r92r00              2920 	ld	hl, #_xDir
      000AC2 36 FF                 2921 	ld	(hl), #0xff
                                   2922 ;src/main.c:208: yDir = 1;
      000AC4 21r93r00              2923 	ld	hl, #_yDir
      000AC7 36 01                 2924 	ld	(hl), #0x01
      000AC9                       2925 00127$:
                                   2926 ;src/main.c:213: if (xDir == 0 && yDir == 0) {
      000AC9 FAr92r00              2927 	ld	a, (#_xDir)
      000ACC B7                    2928 	or	a, a
      000ACD 20 07                 2929 	jr	NZ, 00130$
      000ACF FAr93r00              2930 	ld	a, (#_yDir)
      000AD2 B7                    2931 	or	a, a
                                   2932 ;src/main.c:214: return;
      000AD3 CAr1Fr0C              2933 	jp	Z,00195$
      000AD6                       2934 00130$:
                                   2935 ;src/main.c:246: if (xDir == 0 && yDir > 0) {
      000AD6 21r93r00              2936 	ld	hl, #_yDir
      000AD9 5E                    2937 	ld	e, (hl)
      000ADA AF                    2938 	xor	a, a
      000ADB 57                    2939 	ld	d, a
      000ADC 96                    2940 	sub	a, (hl)
      000ADD CB 7B                 2941 	bit	7, e
      000ADF 28 07                 2942 	jr	Z, 00387$
      000AE1 CB 7A                 2943 	bit	7, d
      000AE3 20 08                 2944 	jr	NZ, 00388$
      000AE5 BF                    2945 	cp	a, a
      000AE6 18 05                 2946 	jr	00388$
      000AE8                       2947 00387$:
      000AE8 CB 7A                 2948 	bit	7, d
      000AEA 28 01                 2949 	jr	Z, 00388$
      000AEC 37                    2950 	scf
      000AED                       2951 00388$:
      000AED 3E 00                 2952 	ld	a, #0x00
      000AEF 17                    2953 	rla
      000AF0 4F                    2954 	ld	c, a
      000AF1 FAr92r00              2955 	ld	a, (#_xDir)
      000AF4 B7                    2956 	or	a,a
      000AF5 20 1A                 2957 	jr	NZ, 00160$
      000AF7 B1                    2958 	or	a,c
      000AF8 28 17                 2959 	jr	Z, 00160$
                                   2960 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000AFA 21r02r00              2961 	ld	hl, #(_shadow_OAM + 2)
      000AFD 36 00                 2962 	ld	(hl), #0x00
      000AFF 21r06r00              2963 	ld	hl, #(_shadow_OAM + 6)
      000B02 36 02                 2964 	ld	(hl), #0x02
                                   2965 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B04 21r03r00              2966 	ld	hl, #(_shadow_OAM + 3)
      000B07 36 40                 2967 	ld	(hl), #0x40
      000B09 21r07r00              2968 	ld	hl, #(_shadow_OAM + 7)
      000B0C 36 40                 2969 	ld	(hl), #0x40
                                   2970 ;src/main.c:250: set_sprite_prop(1, S_FLIPY); 
      000B0E C3r1Fr0C              2971 	jp	00195$
      000B11                       2972 00160$:
                                   2973 ;src/main.c:252: else if (xDir == 0 && yDir < 0) {
      000B11 FAr93r00              2974 	ld	a, (#_yDir)
      000B14 07                    2975 	rlca
      000B15 E6 01                 2976 	and	a,#0x01
      000B17 F8 02                 2977 	ldhl	sp,	#2
      000B19 77                    2978 	ld	(hl), a
      000B1A FAr92r00              2979 	ld	a, (#_xDir)
      000B1D B7                    2980 	or	a, a
      000B1E 20 1D                 2981 	jr	NZ, 00156$
      000B20 F8 02                 2982 	ldhl	sp,	#2
      000B22 7E                    2983 	ld	a, (hl)
      000B23 B7                    2984 	or	a, a
      000B24 28 17                 2985 	jr	Z, 00156$
                                   2986 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B26 21r02r00              2987 	ld	hl, #(_shadow_OAM + 2)
      000B29 36 00                 2988 	ld	(hl), #0x00
      000B2B 21r06r00              2989 	ld	hl, #(_shadow_OAM + 6)
      000B2E 36 02                 2990 	ld	(hl), #0x02
                                   2991 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B30 21r03r00              2992 	ld	hl, #(_shadow_OAM + 3)
      000B33 36 00                 2993 	ld	(hl), #0x00
      000B35 21r07r00              2994 	ld	hl, #(_shadow_OAM + 7)
      000B38 36 00                 2995 	ld	(hl), #0x00
                                   2996 ;src/main.c:256: set_sprite_prop(1, 0); 
      000B3A C3r1Fr0C              2997 	jp	00195$
      000B3D                       2998 00156$:
                                   2999 ;src/main.c:258: else if (xDir > 0 && yDir == 0) {
      000B3D 21r92r00              3000 	ld	hl, #_xDir
      000B40 5E                    3001 	ld	e, (hl)
      000B41 AF                    3002 	xor	a, a
      000B42 57                    3003 	ld	d, a
      000B43 96                    3004 	sub	a, (hl)
      000B44 CB 7B                 3005 	bit	7, e
      000B46 28 07                 3006 	jr	Z, 00389$
      000B48 CB 7A                 3007 	bit	7, d
      000B4A 20 08                 3008 	jr	NZ, 00390$
      000B4C BF                    3009 	cp	a, a
      000B4D 18 05                 3010 	jr	00390$
      000B4F                       3011 00389$:
      000B4F CB 7A                 3012 	bit	7, d
      000B51 28 01                 3013 	jr	Z, 00390$
      000B53 37                    3014 	scf
      000B54                       3015 00390$:
      000B54 3E 00                 3016 	ld	a, #0x00
      000B56 17                    3017 	rla
      000B57 47                    3018 	ld	b, a
      000B58 B7                    3019 	or	a, a
      000B59 28 1D                 3020 	jr	Z, 00152$
      000B5B FAr93r00              3021 	ld	a, (#_yDir)
      000B5E B7                    3022 	or	a, a
      000B5F 20 17                 3023 	jr	NZ, 00152$
                                   3024 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B61 21r02r00              3025 	ld	hl, #(_shadow_OAM + 2)
      000B64 36 04                 3026 	ld	(hl), #0x04
      000B66 21r06r00              3027 	ld	hl, #(_shadow_OAM + 6)
      000B69 36 06                 3028 	ld	(hl), #0x06
                                   3029 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B6B 21r03r00              3030 	ld	hl, #(_shadow_OAM + 3)
      000B6E 36 00                 3031 	ld	(hl), #0x00
      000B70 21r07r00              3032 	ld	hl, #(_shadow_OAM + 7)
      000B73 36 00                 3033 	ld	(hl), #0x00
                                   3034 ;src/main.c:262: set_sprite_prop(1, 0); 
      000B75 C3r1Fr0C              3035 	jp	00195$
      000B78                       3036 00152$:
                                   3037 ;src/main.c:264: else if (xDir < 0 && yDir == 0) {
      000B78 FAr92r00              3038 	ld	a, (#_xDir)
      000B7B 07                    3039 	rlca
      000B7C E6 01                 3040 	and	a,#0x01
      000B7E F8 03                 3041 	ldhl	sp,	#3
      000B80 77                    3042 	ld	(hl), a
      000B81 7E                    3043 	ld	a, (hl)
      000B82 B7                    3044 	or	a, a
      000B83 28 1D                 3045 	jr	Z, 00148$
      000B85 FAr93r00              3046 	ld	a, (#_yDir)
      000B88 B7                    3047 	or	a, a
      000B89 20 17                 3048 	jr	NZ, 00148$
                                   3049 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B8B 21r02r00              3050 	ld	hl, #(_shadow_OAM + 2)
      000B8E 36 04                 3051 	ld	(hl), #0x04
      000B90 21r06r00              3052 	ld	hl, #(_shadow_OAM + 6)
      000B93 36 06                 3053 	ld	(hl), #0x06
                                   3054 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B95 21r03r00              3055 	ld	hl, #(_shadow_OAM + 3)
      000B98 36 20                 3056 	ld	(hl), #0x20
      000B9A 21r07r00              3057 	ld	hl, #(_shadow_OAM + 7)
      000B9D 36 20                 3058 	ld	(hl), #0x20
                                   3059 ;src/main.c:268: set_sprite_prop(1, S_FLIPX); 
      000B9F C3r1Fr0C              3060 	jp	00195$
      000BA2                       3061 00148$:
                                   3062 ;src/main.c:270: else if (xDir > 0 && yDir < 0) {
      000BA2 78                    3063 	ld	a, b
      000BA3 B7                    3064 	or	a, a
      000BA4 28 1C                 3065 	jr	Z, 00144$
      000BA6 F8 02                 3066 	ldhl	sp,	#2
      000BA8 7E                    3067 	ld	a, (hl)
      000BA9 B7                    3068 	or	a, a
      000BAA 28 16                 3069 	jr	Z, 00144$
                                   3070 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BAC 21r02r00              3071 	ld	hl, #(_shadow_OAM + 2)
      000BAF 36 08                 3072 	ld	(hl), #0x08
      000BB1 21r06r00              3073 	ld	hl, #(_shadow_OAM + 6)
      000BB4 36 0A                 3074 	ld	(hl), #0x0a
                                   3075 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BB6 21r03r00              3076 	ld	hl, #(_shadow_OAM + 3)
      000BB9 36 00                 3077 	ld	(hl), #0x00
      000BBB 21r07r00              3078 	ld	hl, #(_shadow_OAM + 7)
      000BBE 36 00                 3079 	ld	(hl), #0x00
                                   3080 ;src/main.c:274: set_sprite_prop(1, 0); 
      000BC0 18 5D                 3081 	jr	00195$
      000BC2                       3082 00144$:
                                   3083 ;src/main.c:276: else if (xDir > 0 && yDir > 0) {
      000BC2 78                    3084 	ld	a, b
      000BC3 B7                    3085 	or	a, a
      000BC4 28 1A                 3086 	jr	Z, 00140$
      000BC6 79                    3087 	ld	a, c
      000BC7 B7                    3088 	or	a, a
      000BC8 28 16                 3089 	jr	Z, 00140$
                                   3090 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BCA 21r02r00              3091 	ld	hl, #(_shadow_OAM + 2)
      000BCD 36 08                 3092 	ld	(hl), #0x08
      000BCF 21r06r00              3093 	ld	hl, #(_shadow_OAM + 6)
      000BD2 36 0A                 3094 	ld	(hl), #0x0a
                                   3095 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BD4 21r03r00              3096 	ld	hl, #(_shadow_OAM + 3)
      000BD7 36 40                 3097 	ld	(hl), #0x40
      000BD9 21r07r00              3098 	ld	hl, #(_shadow_OAM + 7)
      000BDC 36 40                 3099 	ld	(hl), #0x40
                                   3100 ;src/main.c:280: set_sprite_prop(1, S_FLIPY); 
      000BDE 18 3F                 3101 	jr	00195$
      000BE0                       3102 00140$:
                                   3103 ;src/main.c:282: else if (xDir < 0 && yDir > 0) {
      000BE0 F8 03                 3104 	ldhl	sp,	#3
      000BE2 7E                    3105 	ld	a, (hl)
      000BE3 B7                    3106 	or	a, a
      000BE4 28 1A                 3107 	jr	Z, 00136$
      000BE6 79                    3108 	ld	a, c
      000BE7 B7                    3109 	or	a, a
      000BE8 28 16                 3110 	jr	Z, 00136$
                                   3111 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BEA 21r02r00              3112 	ld	hl, #(_shadow_OAM + 2)
      000BED 36 08                 3113 	ld	(hl), #0x08
      000BEF 21r06r00              3114 	ld	hl, #(_shadow_OAM + 6)
      000BF2 36 0A                 3115 	ld	(hl), #0x0a
                                   3116 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BF4 21r03r00              3117 	ld	hl, #(_shadow_OAM + 3)
      000BF7 36 60                 3118 	ld	(hl), #0x60
      000BF9 21r07r00              3119 	ld	hl, #(_shadow_OAM + 7)
      000BFC 36 60                 3120 	ld	(hl), #0x60
                                   3121 ;src/main.c:286: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000BFE 18 1F                 3122 	jr	00195$
      000C00                       3123 00136$:
                                   3124 ;src/main.c:288: else if (xDir < 0 && yDir < 0) {
      000C00 F8 03                 3125 	ldhl	sp,	#3
      000C02 7E                    3126 	ld	a, (hl)
      000C03 B7                    3127 	or	a, a
      000C04 28 19                 3128 	jr	Z, 00195$
      000C06 2B                    3129 	dec	hl
      000C07 7E                    3130 	ld	a, (hl)
      000C08 B7                    3131 	or	a, a
      000C09 28 14                 3132 	jr	Z, 00195$
                                   3133 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C0B 21r02r00              3134 	ld	hl, #(_shadow_OAM + 2)
      000C0E 36 08                 3135 	ld	(hl), #0x08
      000C10 21r06r00              3136 	ld	hl, #(_shadow_OAM + 6)
      000C13 36 0A                 3137 	ld	(hl), #0x0a
                                   3138 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C15 21r03r00              3139 	ld	hl, #(_shadow_OAM + 3)
      000C18 36 20                 3140 	ld	(hl), #0x20
      000C1A 21r07r00              3141 	ld	hl, #(_shadow_OAM + 7)
      000C1D 36 20                 3142 	ld	(hl), #0x20
                                   3143 ;src/main.c:292: set_sprite_prop(1, S_FLIPX); 
      000C1F                       3144 00195$:
                                   3145 ;src/main.c:294: }
      000C1F E8 04                 3146 	add	sp, #4
      000C21 C9                    3147 	ret
                                   3148 ;src/main.c:323: void playSound(uint8_t type) {
                                   3149 ;	---------------------------------
                                   3150 ; Function playSound
                                   3151 ; ---------------------------------
      000C22                       3152 _playSound::
                                   3153 ;src/main.c:324: if (type == 20) { //singlegun
      000C22 F8 02                 3154 	ldhl	sp,	#2
      000C24 7E                    3155 	ld	a, (hl)
      000C25 D6 14                 3156 	sub	a, #0x14
      000C27 20 13                 3157 	jr	NZ, 00102$
                                   3158 ;src/main.c:325: NR10_REG = 0x00;
      000C29 AF                    3159 	xor	a, a
      000C2A E0r00                 3160 	ldh	(_NR10_REG + 0), a
                                   3161 ;src/main.c:326: NR11_REG = 0x81;
      000C2C 3E 81                 3162 	ld	a, #0x81
      000C2E E0r00                 3163 	ldh	(_NR11_REG + 0), a
                                   3164 ;src/main.c:327: NR12_REG = 0x43;
      000C30 3E 43                 3165 	ld	a, #0x43
      000C32 E0r00                 3166 	ldh	(_NR12_REG + 0), a
                                   3167 ;src/main.c:328: NR13_REG = 0X00;//0x6D;
      000C34 AF                    3168 	xor	a, a
      000C35 E0r00                 3169 	ldh	(_NR13_REG + 0), a
                                   3170 ;src/main.c:329: NR14_REG = 0x86;
      000C37 3E 86                 3171 	ld	a, #0x86
      000C39 E0r00                 3172 	ldh	(_NR14_REG + 0), a
                                   3173 ;src/main.c:330: return;
      000C3B C9                    3174 	ret
      000C3C                       3175 00102$:
                                   3176 ;src/main.c:332: if (type == 23) {
      000C3C F8 02                 3177 	ldhl	sp,	#2
      000C3E 7E                    3178 	ld	a, (hl)
      000C3F D6 17                 3179 	sub	a, #0x17
      000C41 20 12                 3180 	jr	NZ, 00104$
                                   3181 ;src/main.c:333: NR10_REG = 0x00;
      000C43 AF                    3182 	xor	a, a
      000C44 E0r00                 3183 	ldh	(_NR10_REG + 0), a
                                   3184 ;src/main.c:334: NR11_REG = 0x81;
      000C46 3E 81                 3185 	ld	a, #0x81
      000C48 E0r00                 3186 	ldh	(_NR11_REG + 0), a
                                   3187 ;src/main.c:335: NR12_REG = 0x53;
      000C4A 3E 53                 3188 	ld	a, #0x53
      000C4C E0r00                 3189 	ldh	(_NR12_REG + 0), a
                                   3190 ;src/main.c:336: NR13_REG = 0X00;//0x6D;
      000C4E AF                    3191 	xor	a, a
      000C4F E0r00                 3192 	ldh	(_NR13_REG + 0), a
                                   3193 ;src/main.c:337: NR14_REG = 0x86;
      000C51 3E 86                 3194 	ld	a, #0x86
      000C53 E0r00                 3195 	ldh	(_NR14_REG + 0), a
      000C55                       3196 00104$:
                                   3197 ;src/main.c:339: if (type == 26) {
      000C55 F8 02                 3198 	ldhl	sp,	#2
      000C57 7E                    3199 	ld	a, (hl)
      000C58 D6 1A                 3200 	sub	a, #0x1a
      000C5A 20 13                 3201 	jr	NZ, 00106$
                                   3202 ;src/main.c:340: NR10_REG = 0x00;
      000C5C AF                    3203 	xor	a, a
      000C5D E0r00                 3204 	ldh	(_NR10_REG + 0), a
                                   3205 ;src/main.c:341: NR11_REG = 0x89;
      000C5F 3E 89                 3206 	ld	a, #0x89
      000C61 E0r00                 3207 	ldh	(_NR11_REG + 0), a
                                   3208 ;src/main.c:342: NR12_REG = 0x55;
      000C63 3E 55                 3209 	ld	a, #0x55
      000C65 E0r00                 3210 	ldh	(_NR12_REG + 0), a
                                   3211 ;src/main.c:343: NR13_REG = 0x70;//0Xbe;//0x6D;
      000C67 3E 70                 3212 	ld	a, #0x70
      000C69 E0r00                 3213 	ldh	(_NR13_REG + 0), a
                                   3214 ;src/main.c:344: NR14_REG = 0x84;
      000C6B 3E 84                 3215 	ld	a, #0x84
      000C6D E0r00                 3216 	ldh	(_NR14_REG + 0), a
      000C6F                       3217 00106$:
                                   3218 ;src/main.c:346: if (type == 0) {  // explosion
      000C6F F8 02                 3219 	ldhl	sp,	#2
      000C71 7E                    3220 	ld	a, (hl)
      000C72 B7                    3221 	or	a, a
      000C73 C0                    3222 	ret	NZ
                                   3223 ;src/main.c:347: NR41_REG = 0x20;  
      000C74 3E 20                 3224 	ld	a, #0x20
      000C76 E0r00                 3225 	ldh	(_NR41_REG + 0), a
                                   3226 ;src/main.c:348: NR42_REG = 0xa2;//0xa3;  
      000C78 3E A2                 3227 	ld	a, #0xa2
      000C7A E0r00                 3228 	ldh	(_NR42_REG + 0), a
                                   3229 ;src/main.c:349: NR43_REG = 0x57;  
      000C7C 3E 57                 3230 	ld	a, #0x57
      000C7E E0r00                 3231 	ldh	(_NR43_REG + 0), a
                                   3232 ;src/main.c:350: NR44_REG = 0x80;  
      000C80 3E 80                 3233 	ld	a, #0x80
      000C82 E0r00                 3234 	ldh	(_NR44_REG + 0), a
                                   3235 ;src/main.c:356: }
      000C84 C9                    3236 	ret
                                   3237 ;src/main.c:358: void initEnemies(uint8_t loadSprites) {
                                   3238 ;	---------------------------------
                                   3239 ; Function initEnemies
                                   3240 ; ---------------------------------
      000C85                       3241 _initEnemies::
      000C85 E8 F9                 3242 	add	sp, #-7
                                   3243 ;src/main.c:360: if (loadSprites) {
      000C87 F8 09                 3244 	ldhl	sp,	#9
      000C89 7E                    3245 	ld	a, (hl)
      000C8A B7                    3246 	or	a, a
      000C8B 28 1A                 3247 	jr	Z, 00102$
                                   3248 ;src/main.c:362: set_sprite_data(0x40, 5, enemy1);
      000C8D 11r18r05              3249 	ld	de, #_enemy1
      000C90 D5                    3250 	push	de
      000C91 21 40 05              3251 	ld	hl, #0x540
      000C94 E5                    3252 	push	hl
      000C95 CDr00r00              3253 	call	_set_sprite_data
      000C98 E8 04                 3254 	add	sp, #4
                                   3255 ;src/main.c:363: set_sprite_data(0x50, 8, largeenemies);
      000C9A 11r68r05              3256 	ld	de, #_largeenemies
      000C9D D5                    3257 	push	de
      000C9E 21 50 08              3258 	ld	hl, #0x850
      000CA1 E5                    3259 	push	hl
      000CA2 CDr00r00              3260 	call	_set_sprite_data
      000CA5 E8 04                 3261 	add	sp, #4
      000CA7                       3262 00102$:
                                   3263 ;src/main.c:366: struct Enemy *eptr = enemies;
      000CA7 F8 04                 3264 	ldhl	sp,	#4
      000CA9 3Er50                 3265 	ld	a, #<(_enemies)
      000CAB 22                    3266 	ld	(hl+), a
                                   3267 ;src/main.c:368: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000CAC 3Es00                 3268 	ld	a, #>(_enemies)
      000CAE 22                    3269 	ld	(hl+), a
      000CAF 36 00                 3270 	ld	(hl), #0x00
      000CB1                       3271 00116$:
      000CB1 21r4Dr08              3272 	ld	hl, #_ENEMYCOUNT
      000CB4 4E                    3273 	ld	c, (hl)
      000CB5 F8 06                 3274 	ldhl	sp,	#6
      000CB7 7E                    3275 	ld	a, (hl)
      000CB8 91                    3276 	sub	a, c
      000CB9 D2r2Dr0E              3277 	jp	NC, 00118$
                                   3278 ;src/main.c:369: if (eptr->alive == 0) {
      000CBC 2B                    3279 	dec	hl
      000CBD 2B                    3280 	dec	hl
      000CBE 2A                    3281 	ld	a, (hl+)
      000CBF 5F                    3282 	ld	e, a
      000CC0 56                    3283 	ld	d, (hl)
      000CC1 21 09 00              3284 	ld	hl, #0x0009
      000CC4 19                    3285 	add	hl, de
      000CC5 4D                    3286 	ld	c, l
      000CC6 44                    3287 	ld	b, h
      000CC7 0A                    3288 	ld	a, (bc)
      000CC8 F8 03                 3289 	ldhl	sp,	#3
      000CCA 77                    3290 	ld	(hl), a
      000CCB 7E                    3291 	ld	a, (hl)
      000CCC B7                    3292 	or	a, a
      000CCD C2r16r0E              3293 	jp	NZ, 00107$
                                   3294 ;src/main.c:371: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      000CD0 CDr00r00              3295 	call	_rand
      000CD3 F8 02                 3296 	ldhl	sp,	#2
      000CD5 73                    3297 	ld	(hl), e
      000CD6 FAr17r05              3298 	ld	a, (#_enemyOptionCount)
      000CD9 F8 03                 3299 	ldhl	sp,	#3
      000CDB 77                    3300 	ld	(hl), a
      000CDC 3A                    3301 	ld	a, (hl-)
      000CDD 57                    3302 	ld	d, a
      000CDE 5E                    3303 	ld	e, (hl)
      000CDF D5                    3304 	push	de
      000CE0 CDr00r00              3305 	call	__moduchar
      000CE3 E1                    3306 	pop	hl
                                   3307 ;src/main.c:373: (*eptr) = enemyOptions[enemyInd];
      000CE4 F8 03                 3308 	ldhl	sp,#3
      000CE6 73                    3309 	ld	(hl), e
      000CE7 3A                    3310 	ld	a, (hl-)
      000CE8 22                    3311 	ld	(hl+), a
      000CE9 AF                    3312 	xor	a, a
      000CEA 32                    3313 	ld	(hl-), a
      000CEB 3A                    3314 	ld	a, (hl-)
      000CEC 2B                    3315 	dec	hl
      000CED 77                    3316 	ld	(hl), a
      000CEE F8 03                 3317 	ldhl	sp,	#3
      000CF0 3A                    3318 	ld	a, (hl-)
      000CF1 2B                    3319 	dec	hl
      000CF2 77                    3320 	ld	(hl), a
      000CF3 3E 04                 3321 	ld	a, #0x04
      000CF5                       3322 00146$:
      000CF5 F8 00                 3323 	ldhl	sp,	#0
      000CF7 CB 26                 3324 	sla	(hl)
      000CF9 23                    3325 	inc	hl
      000CFA CB 16                 3326 	rl	(hl)
      000CFC 3D                    3327 	dec	a
      000CFD 20 F6                 3328 	jr	NZ, 00146$
      000CFF D1                    3329 	pop	de
      000D00 D5                    3330 	push	de
      000D01 21r00r00              3331 	ld	hl, #_enemyOptions
      000D04 19                    3332 	add	hl, de
      000D05 E5                    3333 	push	hl
      000D06 7D                    3334 	ld	a, l
      000D07 F8 04                 3335 	ldhl	sp,	#4
      000D09 77                    3336 	ld	(hl), a
      000D0A E1                    3337 	pop	hl
      000D0B 7C                    3338 	ld	a, h
      000D0C F8 03                 3339 	ldhl	sp,	#3
      000D0E 32                    3340 	ld	(hl-), a
      000D0F 2A                    3341 	ld	a, (hl+)
      000D10 5F                    3342 	ld	e, a
      000D11 2A                    3343 	ld	a, (hl+)
      000D12 57                    3344 	ld	d, a
      000D13 2A                    3345 	ld	a, (hl+)
      000D14 4F                    3346 	ld	c, a
      000D15 46                    3347 	ld	b, (hl)
      000D16 21 10 00              3348 	ld	hl, #0x0010
      000D19 E5                    3349 	push	hl
      000D1A D5                    3350 	push	de
      000D1B C5                    3351 	push	bc
      000D1C CDr00r00              3352 	call	___memcpy
      000D1F E8 06                 3353 	add	sp, #6
                                   3354 ;src/main.c:375: uint8_t posIndex =  ((uint8_t)rand()) % (uint8_t)8;//(rand() & 8);
      000D21 CDr00r00              3355 	call	_rand
      000D24 7B                    3356 	ld	a, e
      000D25 E6 07                 3357 	and	a, #0x07
      000D27 F8 03                 3358 	ldhl	sp,	#3
      000D29 77                    3359 	ld	(hl), a
                                   3360 ;src/main.c:376: eptr->x = xSpawnPositions[posIndex];
      000D2A 11r4Er08              3361 	ld	de, #_xSpawnPositions
      000D2D 6E                    3362 	ld	l, (hl)
      000D2E 26 00                 3363 	ld	h, #0x00
      000D30 19                    3364 	add	hl, de
      000D31 4D                    3365 	ld	c, l
      000D32 44                    3366 	ld	b, h
      000D33 0A                    3367 	ld	a, (bc)
      000D34 4F                    3368 	ld	c, a
      000D35 06 00                 3369 	ld	b, #0x00
      000D37 F8 04                 3370 	ldhl	sp,	#4
      000D39 2A                    3371 	ld	a,	(hl+)
      000D3A 66                    3372 	ld	h, (hl)
      000D3B 6F                    3373 	ld	l, a
      000D3C 79                    3374 	ld	a, c
      000D3D 22                    3375 	ld	(hl+), a
      000D3E 70                    3376 	ld	(hl), b
                                   3377 ;src/main.c:377: eptr->y = ySpawnPositions[posIndex];
      000D3F F8 04                 3378 	ldhl	sp,#4
      000D41 2A                    3379 	ld	a, (hl+)
      000D42 5F                    3380 	ld	e, a
      000D43 56                    3381 	ld	d, (hl)
      000D44 21 02 00              3382 	ld	hl, #0x0002
      000D47 19                    3383 	add	hl, de
      000D48 33                    3384 	inc	sp
      000D49 33                    3385 	inc	sp
      000D4A E5                    3386 	push	hl
      000D4B 11r56r08              3387 	ld	de, #_ySpawnPositions
      000D4E F8 03                 3388 	ldhl	sp,	#3
      000D50 6E                    3389 	ld	l, (hl)
      000D51 26 00                 3390 	ld	h, #0x00
      000D53 19                    3391 	add	hl, de
      000D54 4D                    3392 	ld	c, l
      000D55 44                    3393 	ld	b, h
      000D56 0A                    3394 	ld	a, (bc)
      000D57 4F                    3395 	ld	c, a
      000D58 06 00                 3396 	ld	b, #0x00
      000D5A E1                    3397 	pop	hl
      000D5B E5                    3398 	push	hl
      000D5C 79                    3399 	ld	a, c
      000D5D 22                    3400 	ld	(hl+), a
      000D5E 70                    3401 	ld	(hl), b
                                   3402 ;src/main.c:379: if (eptr->spriteCount == 1) {
      000D5F F8 04                 3403 	ldhl	sp,#4
      000D61 2A                    3404 	ld	a, (hl+)
      000D62 5F                    3405 	ld	e, a
      000D63 56                    3406 	ld	d, (hl)
      000D64 21 08 00              3407 	ld	hl, #0x0008
      000D67 19                    3408 	add	hl, de
      000D68 4D                    3409 	ld	c, l
      000D69 44                    3410 	ld	b, h
      000D6A 0A                    3411 	ld	a, (bc)
      000D6B 47                    3412 	ld	b, a
                                   3413 ;src/main.c:380: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000D6C F8 04                 3414 	ldhl	sp,#4
      000D6E 2A                    3415 	ld	a, (hl+)
      000D6F 5F                    3416 	ld	e, a
      000D70 56                    3417 	ld	d, (hl)
      000D71 21 06 00              3418 	ld	hl, #0x0006
      000D74 19                    3419 	add	hl, de
      000D75 5D                    3420 	ld	e, l
      000D76 54                    3421 	ld	d, h
      000D77 F8 06                 3422 	ldhl	sp,	#6
      000D79 4E                    3423 	ld	c, (hl)
      000D7A 1A                    3424 	ld	a, (de)
      000D7B 5F                    3425 	ld	e, a
      000D7C CB 21                 3426 	sla	c
      000D7E 79                    3427 	ld	a, c
      000D7F C6 0A                 3428 	add	a, #0x0a
      000D81 F8 02                 3429 	ldhl	sp,	#2
      000D83 77                    3430 	ld	(hl), a
                                   3431 ;src/main.c:379: if (eptr->spriteCount == 1) {
      000D84 05                    3432 	dec	b
      000D85 20 2C                 3433 	jr	NZ, 00104$
                                   3434 ;src/main.c:380: set_sprite_tile(10+ (i<<1), eptr->sprite0);
                                   3435 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000D87 6E                    3436 	ld	l, (hl)
                                   3437 ;	spillPairReg hl
                                   3438 ;	spillPairReg hl
      000D88 26 00                 3439 	ld	h, #0x00
                                   3440 ;	spillPairReg hl
                                   3441 ;	spillPairReg hl
      000D8A 29                    3442 	add	hl, hl
      000D8B 29                    3443 	add	hl, hl
      000D8C 01r00r00              3444 	ld	bc, #_shadow_OAM
      000D8F 09                    3445 	add	hl, bc
      000D90 23                    3446 	inc	hl
      000D91 23                    3447 	inc	hl
      000D92 73                    3448 	ld	(hl), e
                                   3449 ;src/main.c:381: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000D93 D1                    3450 	pop	de
      000D94 D5                    3451 	push	de
      000D95 1A                    3452 	ld	a, (de)
      000D96 4F                    3453 	ld	c, a
      000D97 F8 04                 3454 	ldhl	sp,#4
      000D99 2A                    3455 	ld	a, (hl+)
      000D9A 5F                    3456 	ld	e, a
      000D9B 3A                    3457 	ld	a, (hl-)
      000D9C 2B                    3458 	dec	hl
      000D9D 57                    3459 	ld	d, a
      000D9E 1A                    3460 	ld	a, (de)
      000D9F 32                    3461 	ld	(hl-), a
                                   3462 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DA0 6E                    3463 	ld	l, (hl)
                                   3464 ;	spillPairReg hl
                                   3465 ;	spillPairReg hl
      000DA1 26 00                 3466 	ld	h, #0x00
                                   3467 ;	spillPairReg hl
                                   3468 ;	spillPairReg hl
      000DA3 29                    3469 	add	hl, hl
      000DA4 29                    3470 	add	hl, hl
      000DA5 11r00r00              3471 	ld	de, #_shadow_OAM
      000DA8 19                    3472 	add	hl, de
                                   3473 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DA9 79                    3474 	ld	a, c
      000DAA 22                    3475 	ld	(hl+), a
      000DAB 4D                    3476 	ld	c, l
      000DAC 44                    3477 	ld	b, h
      000DAD F8 03                 3478 	ldhl	sp,	#3
      000DAF 7E                    3479 	ld	a, (hl)
      000DB0 02                    3480 	ld	(bc), a
                                   3481 ;src/main.c:381: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DB1 18 63                 3482 	jr	00107$
      000DB3                       3483 00104$:
                                   3484 ;src/main.c:384: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DB3 43                    3485 	ld	b, e
      000DB4 F8 02                 3486 	ldhl	sp,	#2
                                   3487 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DB6 6E                    3488 	ld	l, (hl)
                                   3489 ;	spillPairReg hl
                                   3490 ;	spillPairReg hl
      000DB7 26 00                 3491 	ld	h, #0x00
                                   3492 ;	spillPairReg hl
                                   3493 ;	spillPairReg hl
      000DB9 29                    3494 	add	hl, hl
      000DBA 29                    3495 	add	hl, hl
      000DBB 11r00r00              3496 	ld	de, #_shadow_OAM
      000DBE 19                    3497 	add	hl, de
      000DBF 23                    3498 	inc	hl
      000DC0 23                    3499 	inc	hl
      000DC1 70                    3500 	ld	(hl), b
                                   3501 ;src/main.c:385: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DC2 D1                    3502 	pop	de
      000DC3 D5                    3503 	push	de
      000DC4 1A                    3504 	ld	a, (de)
      000DC5 47                    3505 	ld	b, a
      000DC6 F8 04                 3506 	ldhl	sp,#4
      000DC8 2A                    3507 	ld	a, (hl+)
      000DC9 5F                    3508 	ld	e, a
      000DCA 3A                    3509 	ld	a, (hl-)
      000DCB 2B                    3510 	dec	hl
      000DCC 57                    3511 	ld	d, a
      000DCD 1A                    3512 	ld	a, (de)
      000DCE 32                    3513 	ld	(hl-), a
                                   3514 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DCF 6E                    3515 	ld	l, (hl)
                                   3516 ;	spillPairReg hl
                                   3517 ;	spillPairReg hl
      000DD0 26 00                 3518 	ld	h, #0x00
                                   3519 ;	spillPairReg hl
                                   3520 ;	spillPairReg hl
      000DD2 29                    3521 	add	hl, hl
      000DD3 29                    3522 	add	hl, hl
      000DD4 11r00r00              3523 	ld	de, #_shadow_OAM
      000DD7 19                    3524 	add	hl, de
                                   3525 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DD8 78                    3526 	ld	a, b
      000DD9 22                    3527 	ld	(hl+), a
      000DDA 5D                    3528 	ld	e, l
      000DDB 54                    3529 	ld	d, h
      000DDC F8 03                 3530 	ldhl	sp,	#3
                                   3531 ;src/main.c:387: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      000DDE 2A                    3532 	ld	a, (hl+)
      000DDF 12                    3533 	ld	(de), a
      000DE0 2A                    3534 	ld	a, (hl+)
      000DE1 5F                    3535 	ld	e, a
      000DE2 56                    3536 	ld	d, (hl)
      000DE3 21 07 00              3537 	ld	hl, #0x0007
      000DE6 19                    3538 	add	hl, de
      000DE7 5D                    3539 	ld	e, l
      000DE8 54                    3540 	ld	d, h
      000DE9 1A                    3541 	ld	a, (de)
      000DEA 5F                    3542 	ld	e, a
      000DEB 79                    3543 	ld	a, c
      000DEC C6 0B                 3544 	add	a, #0x0b
      000DEE F8 03                 3545 	ldhl	sp,	#3
      000DF0 77                    3546 	ld	(hl), a
                                   3547 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DF1 6E                    3548 	ld	l, (hl)
                                   3549 ;	spillPairReg hl
                                   3550 ;	spillPairReg hl
      000DF2 26 00                 3551 	ld	h, #0x00
                                   3552 ;	spillPairReg hl
                                   3553 ;	spillPairReg hl
      000DF4 29                    3554 	add	hl, hl
      000DF5 29                    3555 	add	hl, hl
      000DF6 01r00r00              3556 	ld	bc, #_shadow_OAM
      000DF9 09                    3557 	add	hl, bc
      000DFA 23                    3558 	inc	hl
      000DFB 23                    3559 	inc	hl
      000DFC 73                    3560 	ld	(hl), e
                                   3561 ;src/main.c:388: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000DFD D1                    3562 	pop	de
      000DFE D5                    3563 	push	de
      000DFF 1A                    3564 	ld	a, (de)
      000E00 47                    3565 	ld	b, a
      000E01 F8 04                 3566 	ldhl	sp,#4
      000E03 2A                    3567 	ld	a, (hl+)
      000E04 5F                    3568 	ld	e, a
      000E05 3A                    3569 	ld	a, (hl-)
      000E06 2B                    3570 	dec	hl
      000E07 57                    3571 	ld	d, a
      000E08 1A                    3572 	ld	a, (de)
      000E09 4F                    3573 	ld	c, a
                                   3574 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E0A 6E                    3575 	ld	l, (hl)
                                   3576 ;	spillPairReg hl
                                   3577 ;	spillPairReg hl
      000E0B 26 00                 3578 	ld	h, #0x00
                                   3579 ;	spillPairReg hl
                                   3580 ;	spillPairReg hl
      000E0D 29                    3581 	add	hl, hl
      000E0E 29                    3582 	add	hl, hl
      000E0F 11r00r00              3583 	ld	de, #_shadow_OAM
      000E12 19                    3584 	add	hl, de
                                   3585 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E13 78                    3586 	ld	a, b
      000E14 22                    3587 	ld	(hl+), a
      000E15 71                    3588 	ld	(hl), c
                                   3589 ;src/main.c:388: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E16                       3590 00107$:
                                   3591 ;src/main.c:393: eptr++;
      000E16 F8 04                 3592 	ldhl	sp,#4
      000E18 2A                    3593 	ld	a, (hl+)
      000E19 5F                    3594 	ld	e, a
      000E1A 56                    3595 	ld	d, (hl)
      000E1B 21 10 00              3596 	ld	hl, #0x0010
      000E1E 19                    3597 	add	hl, de
      000E1F E5                    3598 	push	hl
      000E20 7D                    3599 	ld	a, l
      000E21 F8 06                 3600 	ldhl	sp,	#6
      000E23 77                    3601 	ld	(hl), a
      000E24 E1                    3602 	pop	hl
      000E25 7C                    3603 	ld	a, h
      000E26 F8 05                 3604 	ldhl	sp,	#5
                                   3605 ;src/main.c:368: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E28 22                    3606 	ld	(hl+), a
      000E29 34                    3607 	inc	(hl)
      000E2A C3rB1r0C              3608 	jp	00116$
      000E2D                       3609 00118$:
                                   3610 ;src/main.c:396: }
      000E2D E8 07                 3611 	add	sp, #7
      000E2F C9                    3612 	ret
                                   3613 ;src/main.c:399: void updateEnemyPositions() {
                                   3614 ;	---------------------------------
                                   3615 ; Function updateEnemyPositions
                                   3616 ; ---------------------------------
      000E30                       3617 _updateEnemyPositions::
      000E30 E8 F0                 3618 	add	sp, #-16
                                   3619 ;src/main.c:402: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E32 F8 0F                 3620 	ldhl	sp,	#15
      000E34 36 00                 3621 	ld	(hl), #0x00
      000E36                       3622 00196$:
      000E36 21r4Dr08              3623 	ld	hl, #_ENEMYCOUNT
      000E39 4E                    3624 	ld	c, (hl)
      000E3A F8 0F                 3625 	ldhl	sp,	#15
      000E3C 7E                    3626 	ld	a, (hl)
      000E3D 91                    3627 	sub	a, c
      000E3E D2rEDr12              3628 	jp	NC, 00134$
                                   3629 ;src/main.c:403: if (!enemies[i].alive) {
      000E41 3A                    3630 	ld	a, (hl-)
      000E42 2B                    3631 	dec	hl
      000E43 22                    3632 	ld	(hl+), a
      000E44 36 00                 3633 	ld	(hl), #0x00
      000E46 3E 04                 3634 	ld	a, #0x04
      000E48                       3635 00407$:
      000E48 F8 0D                 3636 	ldhl	sp,	#13
      000E4A CB 26                 3637 	sla	(hl)
      000E4C 23                    3638 	inc	hl
      000E4D CB 16                 3639 	rl	(hl)
      000E4F 3D                    3640 	dec	a
      000E50 20 F6                 3641 	jr	NZ, 00407$
      000E52 2B                    3642 	dec	hl
      000E53 2A                    3643 	ld	a, (hl+)
      000E54 5F                    3644 	ld	e, a
      000E55 56                    3645 	ld	d, (hl)
      000E56 21r50r00              3646 	ld	hl, #_enemies
      000E59 19                    3647 	add	hl, de
      000E5A E5                    3648 	push	hl
      000E5B 7D                    3649 	ld	a, l
      000E5C F8 04                 3650 	ldhl	sp,	#4
      000E5E 77                    3651 	ld	(hl), a
      000E5F E1                    3652 	pop	hl
      000E60 7C                    3653 	ld	a, h
      000E61 F8 03                 3654 	ldhl	sp,	#3
      000E63 32                    3655 	ld	(hl-), a
      000E64 2A                    3656 	ld	a, (hl+)
      000E65 5F                    3657 	ld	e, a
      000E66 56                    3658 	ld	d, (hl)
      000E67 21 09 00              3659 	ld	hl, #0x0009
      000E6A 19                    3660 	add	hl, de
      000E6B 4D                    3661 	ld	c, l
      000E6C 44                    3662 	ld	b, h
      000E6D 0A                    3663 	ld	a, (bc)
      000E6E B7                    3664 	or	a, a
      000E6F CArE7r12              3665 	jp	Z, 00133$
                                   3666 ;src/main.c:406: enemies[i].x -= xOverflow;
      000E72 F8 02                 3667 	ldhl	sp,#2
      000E74 2A                    3668 	ld	a, (hl+)
      000E75 5F                    3669 	ld	e, a
      000E76 56                    3670 	ld	d, (hl)
      000E77 1A                    3671 	ld	a, (de)
      000E78 4F                    3672 	ld	c, a
      000E79 13                    3673 	inc	de
      000E7A 1A                    3674 	ld	a, (de)
      000E7B 47                    3675 	ld	b, a
      000E7C 21rA0r00              3676 	ld	hl, #_xOverflow
      000E7F 2A                    3677 	ld	a, (hl+)
      000E80 5F                    3678 	ld	e, a
      000E81 56                    3679 	ld	d, (hl)
      000E82 79                    3680 	ld	a, c
      000E83 93                    3681 	sub	a, e
      000E84 5F                    3682 	ld	e, a
      000E85 78                    3683 	ld	a, b
      000E86 9A                    3684 	sbc	a, d
      000E87 F8 0E                 3685 	ldhl	sp,	#14
      000E89 32                    3686 	ld	(hl-), a
      000E8A 73                    3687 	ld	(hl), e
      000E8B F8 02                 3688 	ldhl	sp,#2
      000E8D 2A                    3689 	ld	a, (hl+)
      000E8E 5F                    3690 	ld	e, a
      000E8F 56                    3691 	ld	d, (hl)
      000E90 F8 0D                 3692 	ldhl	sp,	#13
      000E92 2A                    3693 	ld	a, (hl+)
      000E93 12                    3694 	ld	(de), a
      000E94 13                    3695 	inc	de
      000E95 7E                    3696 	ld	a, (hl)
      000E96 12                    3697 	ld	(de), a
                                   3698 ;src/main.c:407: enemies[i].y -= yOverflow;
      000E97 F8 02                 3699 	ldhl	sp,#2
      000E99 2A                    3700 	ld	a, (hl+)
      000E9A 5F                    3701 	ld	e, a
      000E9B 56                    3702 	ld	d, (hl)
      000E9C 21 02 00              3703 	ld	hl, #0x0002
      000E9F 19                    3704 	add	hl, de
      000EA0 E5                    3705 	push	hl
      000EA1 7D                    3706 	ld	a, l
      000EA2 F8 06                 3707 	ldhl	sp,	#6
      000EA4 77                    3708 	ld	(hl), a
      000EA5 E1                    3709 	pop	hl
      000EA6 7C                    3710 	ld	a, h
      000EA7 F8 05                 3711 	ldhl	sp,	#5
      000EA9 32                    3712 	ld	(hl-), a
      000EAA 2A                    3713 	ld	a, (hl+)
      000EAB 5F                    3714 	ld	e, a
      000EAC 56                    3715 	ld	d, (hl)
      000EAD 1A                    3716 	ld	a, (de)
      000EAE 4F                    3717 	ld	c, a
      000EAF 13                    3718 	inc	de
      000EB0 1A                    3719 	ld	a, (de)
      000EB1 47                    3720 	ld	b, a
      000EB2 79                    3721 	ld	a, c
      000EB3 21rA2r00              3722 	ld	hl, #_yOverflow
      000EB6 96                    3723 	sub	a, (hl)
      000EB7 23                    3724 	inc	hl
      000EB8 4F                    3725 	ld	c, a
      000EB9 78                    3726 	ld	a, b
      000EBA 9E                    3727 	sbc	a, (hl)
      000EBB 47                    3728 	ld	b, a
      000EBC F8 04                 3729 	ldhl	sp,	#4
      000EBE 2A                    3730 	ld	a,	(hl+)
      000EBF 66                    3731 	ld	h, (hl)
      000EC0 6F                    3732 	ld	l, a
      000EC1 79                    3733 	ld	a, c
      000EC2 22                    3734 	ld	(hl+), a
      000EC3 70                    3735 	ld	(hl), b
                                   3736 ;src/main.c:410: if (abs(enemies[i].x - playerDrawX) > 8) {
      000EC4 F8 0D                 3737 	ldhl	sp,	#13
      000EC6 7E                    3738 	ld	a, (hl)
      000EC7 21r9Ar00              3739 	ld	hl, #_playerDrawX
      000ECA 4E                    3740 	ld	c, (hl)
      000ECB 91                    3741 	sub	a, c
      000ECC 4F                    3742 	ld	c, a
                                   3743 ;src/main.c:318: if (value >= 0) return value;
      000ECD CB 79                 3744 	bit	7, c
      000ECF 20 03                 3745 	jr	NZ, 00169$
      000ED1 41                    3746 	ld	b, c
      000ED2 18 03                 3747 	jr	00171$
      000ED4                       3748 00169$:
                                   3749 ;src/main.c:319: else return - value;
      000ED4 AF                    3750 	xor	a, a
      000ED5 91                    3751 	sub	a, c
      000ED6 47                    3752 	ld	b, a
                                   3753 ;src/main.c:410: if (abs(enemies[i].x - playerDrawX) > 8) {
      000ED7                       3754 00171$:
                                   3755 ;src/main.c:419: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000ED7 F8 02                 3756 	ldhl	sp,#2
      000ED9 2A                    3757 	ld	a, (hl+)
      000EDA 5F                    3758 	ld	e, a
      000EDB 56                    3759 	ld	d, (hl)
      000EDC 21 0E 00              3760 	ld	hl, #0x000e
      000EDF 19                    3761 	add	hl, de
      000EE0 E5                    3762 	push	hl
      000EE1 7D                    3763 	ld	a, l
      000EE2 F8 08                 3764 	ldhl	sp,	#8
      000EE4 77                    3765 	ld	(hl), a
      000EE5 E1                    3766 	pop	hl
      000EE6 7C                    3767 	ld	a, h
      000EE7 F8 07                 3768 	ldhl	sp,	#7
      000EE9 32                    3769 	ld	(hl-), a
      000EEA 2A                    3770 	ld	a, (hl+)
      000EEB 5F                    3771 	ld	e, a
      000EEC 56                    3772 	ld	d, (hl)
      000EED 1A                    3773 	ld	a, (de)
      000EEE 4F                    3774 	ld	c, a
                                   3775 ;src/main.c:412: enemies[i].xSpeed += enemies[i].accel;
      000EEF F8 02                 3776 	ldhl	sp,#2
      000EF1 2A                    3777 	ld	a, (hl+)
      000EF2 5F                    3778 	ld	e, a
      000EF3 56                    3779 	ld	d, (hl)
      000EF4 21 0D 00              3780 	ld	hl, #0x000d
      000EF7 19                    3781 	add	hl, de
      000EF8 33                    3782 	inc	sp
      000EF9 33                    3783 	inc	sp
      000EFA E5                    3784 	push	hl
                                   3785 ;src/main.c:410: if (abs(enemies[i].x - playerDrawX) > 8) {
      000EFB 58                    3786 	ld	e, b
      000EFC 3E 08                 3787 	ld	a,#0x08
      000EFE 57                    3788 	ld	d,a
      000EFF 90                    3789 	sub	a, b
      000F00 CB 7B                 3790 	bit	7, e
      000F02 28 07                 3791 	jr	Z, 00408$
      000F04 CB 7A                 3792 	bit	7, d
      000F06 20 08                 3793 	jr	NZ, 00409$
      000F08 BF                    3794 	cp	a, a
      000F09 18 05                 3795 	jr	00409$
      000F0B                       3796 00408$:
      000F0B CB 7A                 3797 	bit	7, d
      000F0D 28 01                 3798 	jr	Z, 00409$
      000F0F 37                    3799 	scf
      000F10                       3800 00409$:
      000F10 30 4E                 3801 	jr	NC, 00111$
                                   3802 ;src/main.c:411: if (enemies[i].x < playerDrawX) {
      000F12 F8 02                 3803 	ldhl	sp,#2
      000F14 2A                    3804 	ld	a, (hl+)
      000F15 5F                    3805 	ld	e, a
      000F16 56                    3806 	ld	d, (hl)
      000F17 1A                    3807 	ld	a, (de)
      000F18 F8 0B                 3808 	ldhl	sp,	#11
      000F1A 22                    3809 	ld	(hl+), a
      000F1B 13                    3810 	inc	de
      000F1C 1A                    3811 	ld	a, (de)
      000F1D 77                    3812 	ld	(hl), a
      000F1E FAr9Ar00              3813 	ld	a, (#_playerDrawX)
      000F21 F8 0D                 3814 	ldhl	sp,	#13
      000F23 22                    3815 	ld	(hl+), a
      000F24 36 00                 3816 	ld	(hl), #0x00
                                   3817 ;src/main.c:412: enemies[i].xSpeed += enemies[i].accel;
      000F26 D1                    3818 	pop	de
      000F27 D5                    3819 	push	de
      000F28 1A                    3820 	ld	a, (de)
      000F29 47                    3821 	ld	b, a
                                   3822 ;src/main.c:411: if (enemies[i].x < playerDrawX) {
      000F2A F8 0B                 3823 	ldhl	sp,	#11
      000F2C 5D                    3824 	ld	e, l
      000F2D 54                    3825 	ld	d, h
      000F2E F8 0D                 3826 	ldhl	sp,	#13
      000F30 1A                    3827 	ld	a, (de)
      000F31 13                    3828 	inc	de
      000F32 96                    3829 	sub	a, (hl)
      000F33 23                    3830 	inc	hl
      000F34 1A                    3831 	ld	a, (de)
      000F35 9E                    3832 	sbc	a, (hl)
      000F36 1A                    3833 	ld	a, (de)
      000F37 57                    3834 	ld	d, a
      000F38 CB 7E                 3835 	bit	7, (hl)
      000F3A 28 07                 3836 	jr	Z, 00410$
      000F3C CB 7A                 3837 	bit	7, d
      000F3E 20 08                 3838 	jr	NZ, 00411$
      000F40 BF                    3839 	cp	a, a
      000F41 18 05                 3840 	jr	00411$
      000F43                       3841 00410$:
      000F43 CB 7A                 3842 	bit	7, d
      000F45 28 01                 3843 	jr	Z, 00411$
      000F47 37                    3844 	scf
      000F48                       3845 00411$:
      000F48 30 0B                 3846 	jr	NC, 00104$
                                   3847 ;src/main.c:412: enemies[i].xSpeed += enemies[i].accel;
      000F4A 79                    3848 	ld	a, c
      000F4B 80                    3849 	add	a, b
      000F4C 4F                    3850 	ld	c, a
      000F4D F8 06                 3851 	ldhl	sp,	#6
      000F4F 2A                    3852 	ld	a,	(hl+)
      000F50 66                    3853 	ld	h, (hl)
      000F51 6F                    3854 	ld	l, a
      000F52 71                    3855 	ld	(hl), c
      000F53 18 38                 3856 	jr	00112$
      000F55                       3857 00104$:
                                   3858 ;src/main.c:415: enemies[i].xSpeed -= enemies[i].accel;
      000F55 79                    3859 	ld	a, c
      000F56 90                    3860 	sub	a, b
      000F57 4F                    3861 	ld	c, a
      000F58 F8 06                 3862 	ldhl	sp,	#6
      000F5A 2A                    3863 	ld	a,	(hl+)
      000F5B 66                    3864 	ld	h, (hl)
      000F5C 6F                    3865 	ld	l, a
      000F5D 71                    3866 	ld	(hl), c
      000F5E 18 2D                 3867 	jr	00112$
      000F60                       3868 00111$:
                                   3869 ;src/main.c:419: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F60 59                    3870 	ld	e, c
      000F61 AF                    3871 	xor	a, a
      000F62 57                    3872 	ld	d, a
      000F63 91                    3873 	sub	a, c
      000F64 CB 7B                 3874 	bit	7, e
      000F66 28 07                 3875 	jr	Z, 00412$
      000F68 CB 7A                 3876 	bit	7, d
      000F6A 20 08                 3877 	jr	NZ, 00413$
      000F6C BF                    3878 	cp	a, a
      000F6D 18 05                 3879 	jr	00413$
      000F6F                       3880 00412$:
      000F6F CB 7A                 3881 	bit	7, d
      000F71 28 01                 3882 	jr	Z, 00413$
      000F73 37                    3883 	scf
      000F74                       3884 00413$:
      000F74 30 07                 3885 	jr	NC, 00107$
      000F76 0D                    3886 	dec	c
      000F77 F8 06                 3887 	ldhl	sp,	#6
      000F79 2A                    3888 	ld	a,	(hl+)
      000F7A 66                    3889 	ld	h, (hl)
      000F7B 6F                    3890 	ld	l, a
      000F7C 71                    3891 	ld	(hl), c
      000F7D                       3892 00107$:
      000F7D F8 06                 3893 	ldhl	sp,#6
      000F7F 2A                    3894 	ld	a, (hl+)
      000F80 5F                    3895 	ld	e, a
      000F81 56                    3896 	ld	d, (hl)
      000F82 1A                    3897 	ld	a, (de)
      000F83 4F                    3898 	ld	c, a
                                   3899 ;src/main.c:420: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      000F84 CB 79                 3900 	bit	7, c
      000F86 28 05                 3901 	jr	Z, 00112$
      000F88 0C                    3902 	inc	c
      000F89 3A                    3903 	ld	a, (hl-)
      000F8A 6E                    3904 	ld	l, (hl)
      000F8B 67                    3905 	ld	h, a
      000F8C 71                    3906 	ld	(hl), c
      000F8D                       3907 00112$:
                                   3908 ;src/main.c:423: if (abs(enemies[i].y - playerDrawY) > 8) {
      000F8D F8 04                 3909 	ldhl	sp,#4
      000F8F 2A                    3910 	ld	a, (hl+)
      000F90 5F                    3911 	ld	e, a
      000F91 56                    3912 	ld	d, (hl)
      000F92 1A                    3913 	ld	a, (de)
      000F93 4F                    3914 	ld	c, a
      000F94 13                    3915 	inc	de
      000F95 1A                    3916 	ld	a, (de)
      000F96 47                    3917 	ld	b, a
      000F97 79                    3918 	ld	a, c
      000F98 21r9Br00              3919 	ld	hl, #_playerDrawY
      000F9B 5E                    3920 	ld	e, (hl)
      000F9C 93                    3921 	sub	a, e
      000F9D 6F                    3922 	ld	l, a
                                   3923 ;	spillPairReg hl
                                   3924 ;	spillPairReg hl
                                   3925 ;src/main.c:318: if (value >= 0) return value;
      000F9E CB 7D                 3926 	bit	7, l
      000FA0 20 06                 3927 	jr	NZ, 00173$
      000FA2 7D                    3928 	ld	a, l
      000FA3 F8 0E                 3929 	ldhl	sp,	#14
      000FA5 77                    3930 	ld	(hl), a
      000FA6 18 06                 3931 	jr	00175$
      000FA8                       3932 00173$:
                                   3933 ;src/main.c:319: else return - value;
      000FA8 AF                    3934 	xor	a, a
      000FA9 95                    3935 	sub	a, l
      000FAA 5F                    3936 	ld	e, a
      000FAB F8 0E                 3937 	ldhl	sp,	#14
      000FAD 73                    3938 	ld	(hl), e
                                   3939 ;src/main.c:423: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FAE                       3940 00175$:
                                   3941 ;src/main.c:425: enemies[i].ySpeed += enemies[i].accel;
      000FAE F8 02                 3942 	ldhl	sp,#2
      000FB0 2A                    3943 	ld	a, (hl+)
      000FB1 5F                    3944 	ld	e, a
      000FB2 56                    3945 	ld	d, (hl)
      000FB3 21 0F 00              3946 	ld	hl, #0x000f
      000FB6 19                    3947 	add	hl, de
      000FB7 E5                    3948 	push	hl
      000FB8 7D                    3949 	ld	a, l
      000FB9 F8 0A                 3950 	ldhl	sp,	#10
      000FBB 77                    3951 	ld	(hl), a
      000FBC E1                    3952 	pop	hl
      000FBD 7C                    3953 	ld	a, h
      000FBE F8 09                 3954 	ldhl	sp,	#9
                                   3955 ;src/main.c:432: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      000FC0 32                    3956 	ld	(hl-), a
      000FC1 2A                    3957 	ld	a, (hl+)
      000FC2 5F                    3958 	ld	e, a
      000FC3 2A                    3959 	ld	a, (hl+)
      000FC4 23                    3960 	inc	hl
      000FC5 57                    3961 	ld	d, a
      000FC6 1A                    3962 	ld	a, (de)
      000FC7 77                    3963 	ld	(hl), a
                                   3964 ;src/main.c:423: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FC8 F8 0E                 3965 	ldhl	sp,	#14
      000FCA 5E                    3966 	ld	e, (hl)
      000FCB 3E 08                 3967 	ld	a,#0x08
      000FCD 57                    3968 	ld	d,a
      000FCE 96                    3969 	sub	a, (hl)
      000FCF CB 7B                 3970 	bit	7, e
      000FD1 28 07                 3971 	jr	Z, 00414$
      000FD3 CB 7A                 3972 	bit	7, d
      000FD5 20 08                 3973 	jr	NZ, 00415$
      000FD7 BF                    3974 	cp	a, a
      000FD8 18 05                 3975 	jr	00415$
      000FDA                       3976 00414$:
      000FDA CB 7A                 3977 	bit	7, d
      000FDC 28 01                 3978 	jr	Z, 00415$
      000FDE 37                    3979 	scf
      000FDF                       3980 00415$:
      000FDF 30 44                 3981 	jr	NC, 00121$
                                   3982 ;src/main.c:424: if (enemies[i].y < playerDrawY) {
      000FE1 FAr9Br00              3983 	ld	a, (#_playerDrawY)
      000FE4 F8 0C                 3984 	ldhl	sp,	#12
      000FE6 22                    3985 	ld	(hl+), a
                                   3986 ;src/main.c:425: enemies[i].ySpeed += enemies[i].accel;
      000FE7 AF                    3987 	xor	a, a
      000FE8 22                    3988 	ld	(hl+), a
      000FE9 D1                    3989 	pop	de
      000FEA D5                    3990 	push	de
      000FEB 1A                    3991 	ld	a, (de)
                                   3992 ;src/main.c:424: if (enemies[i].y < playerDrawY) {
      000FEC 32                    3993 	ld	(hl-), a
      000FED 2B                    3994 	dec	hl
      000FEE 79                    3995 	ld	a, c
      000FEF 96                    3996 	sub	a, (hl)
      000FF0 23                    3997 	inc	hl
      000FF1 78                    3998 	ld	a, b
      000FF2 9E                    3999 	sbc	a, (hl)
      000FF3 78                    4000 	ld	a, b
      000FF4 57                    4001 	ld	d, a
      000FF5 CB 7E                 4002 	bit	7, (hl)
      000FF7 28 07                 4003 	jr	Z, 00416$
      000FF9 CB 7A                 4004 	bit	7, d
      000FFB 20 08                 4005 	jr	NZ, 00417$
      000FFD BF                    4006 	cp	a, a
      000FFE 18 05                 4007 	jr	00417$
      001000                       4008 00416$:
      001000 CB 7A                 4009 	bit	7, d
      001002 28 01                 4010 	jr	Z, 00417$
      001004 37                    4011 	scf
      001005                       4012 00417$:
      001005 30 0F                 4013 	jr	NC, 00114$
                                   4014 ;src/main.c:425: enemies[i].ySpeed += enemies[i].accel;
      001007 F8 0B                 4015 	ldhl	sp,	#11
      001009 7E                    4016 	ld	a, (hl)
      00100A F8 0E                 4017 	ldhl	sp,	#14
      00100C 86                    4018 	add	a, (hl)
      00100D 4F                    4019 	ld	c, a
      00100E F8 08                 4020 	ldhl	sp,	#8
      001010 2A                    4021 	ld	a,	(hl+)
      001011 66                    4022 	ld	h, (hl)
      001012 6F                    4023 	ld	l, a
      001013 71                    4024 	ld	(hl), c
      001014 18 41                 4025 	jr	00122$
      001016                       4026 00114$:
                                   4027 ;src/main.c:428: enemies[i].ySpeed -= enemies[i].accel;
      001016 F8 0B                 4028 	ldhl	sp,	#11
      001018 7E                    4029 	ld	a, (hl)
      001019 F8 0E                 4030 	ldhl	sp,	#14
      00101B 96                    4031 	sub	a, (hl)
      00101C 4F                    4032 	ld	c, a
      00101D F8 08                 4033 	ldhl	sp,	#8
      00101F 2A                    4034 	ld	a,	(hl+)
      001020 66                    4035 	ld	h, (hl)
      001021 6F                    4036 	ld	l, a
      001022 71                    4037 	ld	(hl), c
      001023 18 32                 4038 	jr	00122$
      001025                       4039 00121$:
                                   4040 ;src/main.c:432: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001025 F8 0B                 4041 	ldhl	sp,	#11
      001027 5E                    4042 	ld	e, (hl)
      001028 AF                    4043 	xor	a, a
      001029 57                    4044 	ld	d, a
      00102A 96                    4045 	sub	a, (hl)
      00102B CB 7B                 4046 	bit	7, e
      00102D 28 07                 4047 	jr	Z, 00418$
      00102F CB 7A                 4048 	bit	7, d
      001031 20 08                 4049 	jr	NZ, 00419$
      001033 BF                    4050 	cp	a, a
      001034 18 05                 4051 	jr	00419$
      001036                       4052 00418$:
      001036 CB 7A                 4053 	bit	7, d
      001038 28 01                 4054 	jr	Z, 00419$
      00103A 37                    4055 	scf
      00103B                       4056 00419$:
      00103B 30 0A                 4057 	jr	NC, 00117$
      00103D F8 0B                 4058 	ldhl	sp,	#11
      00103F 4E                    4059 	ld	c, (hl)
      001040 0D                    4060 	dec	c
      001041 F8 08                 4061 	ldhl	sp,	#8
      001043 2A                    4062 	ld	a,	(hl+)
      001044 66                    4063 	ld	h, (hl)
      001045 6F                    4064 	ld	l, a
      001046 71                    4065 	ld	(hl), c
      001047                       4066 00117$:
      001047 F8 08                 4067 	ldhl	sp,#8
      001049 2A                    4068 	ld	a, (hl+)
      00104A 5F                    4069 	ld	e, a
      00104B 56                    4070 	ld	d, (hl)
      00104C 1A                    4071 	ld	a, (de)
      00104D 4F                    4072 	ld	c, a
                                   4073 ;src/main.c:433: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      00104E CB 79                 4074 	bit	7, c
      001050 28 05                 4075 	jr	Z, 00122$
      001052 0C                    4076 	inc	c
      001053 3A                    4077 	ld	a, (hl-)
      001054 6E                    4078 	ld	l, (hl)
      001055 67                    4079 	ld	h, a
      001056 71                    4080 	ld	(hl), c
      001057                       4081 00122$:
                                   4082 ;src/main.c:437: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001057 F8 02                 4083 	ldhl	sp,#2
      001059 2A                    4084 	ld	a, (hl+)
      00105A 5F                    4085 	ld	e, a
      00105B 56                    4086 	ld	d, (hl)
      00105C 21 0C 00              4087 	ld	hl, #0x000c
      00105F 19                    4088 	add	hl, de
      001060 E5                    4089 	push	hl
      001061 7D                    4090 	ld	a, l
      001062 F8 0C                 4091 	ldhl	sp,	#12
      001064 77                    4092 	ld	(hl), a
      001065 E1                    4093 	pop	hl
      001066 7C                    4094 	ld	a, h
      001067 F8 0B                 4095 	ldhl	sp,	#11
      001069 32                    4096 	ld	(hl-), a
      00106A 2A                    4097 	ld	a, (hl+)
      00106B 5F                    4098 	ld	e, a
      00106C 2A                    4099 	ld	a, (hl+)
      00106D 57                    4100 	ld	d, a
      00106E 1A                    4101 	ld	a, (de)
      00106F 4F                    4102 	ld	c, a
      001070 22                    4103 	ld	(hl+), a
      001071 AF                    4104 	xor	a, a
      001072 91                    4105 	sub	a, c
      001073 77                    4106 	ld	(hl), a
      001074 F8 06                 4107 	ldhl	sp,#6
      001076 2A                    4108 	ld	a, (hl+)
      001077 5F                    4109 	ld	e, a
      001078 56                    4110 	ld	d, (hl)
      001079 1A                    4111 	ld	a, (de)
      00107A F8 0E                 4112 	ldhl	sp,	#14
                                   4113 ;src/main.c:299: return (value < min) ? min : (value > max) ? max : value;
      00107C 32                    4114 	ld	(hl-), a
      00107D 2A                    4115 	ld	a, (hl+)
      00107E 5F                    4116 	ld	e, a
      00107F 56                    4117 	ld	d, (hl)
      001080 3A                    4118 	ld	a, (hl-)
      001081 96                    4119 	sub	a, (hl)
      001082 CB 7B                 4120 	bit	7, e
      001084 28 07                 4121 	jr	Z, 00420$
      001086 CB 7A                 4122 	bit	7, d
      001088 20 08                 4123 	jr	NZ, 00421$
      00108A BF                    4124 	cp	a, a
      00108B 18 05                 4125 	jr	00421$
      00108D                       4126 00420$:
      00108D CB 7A                 4127 	bit	7, d
      00108F 28 01                 4128 	jr	Z, 00421$
      001091 37                    4129 	scf
      001092                       4130 00421$:
      001092 30 06                 4131 	jr	NC, 00202$
      001094 F8 0D                 4132 	ldhl	sp,	#13
      001096 2A                    4133 	ld	a, (hl+)
      001097 77                    4134 	ld	(hl), a
      001098 18 26                 4135 	jr	00203$
      00109A                       4136 00202$:
      00109A F8 0E                 4137 	ldhl	sp,	#14
      00109C 3A                    4138 	ld	a, (hl-)
      00109D 2B                    4139 	dec	hl
      00109E 5F                    4140 	ld	e, a
      00109F 56                    4141 	ld	d, (hl)
      0010A0 2A                    4142 	ld	a, (hl+)
      0010A1 23                    4143 	inc	hl
      0010A2 96                    4144 	sub	a, (hl)
      0010A3 CB 7B                 4145 	bit	7, e
      0010A5 28 07                 4146 	jr	Z, 00422$
      0010A7 CB 7A                 4147 	bit	7, d
      0010A9 20 08                 4148 	jr	NZ, 00423$
      0010AB BF                    4149 	cp	a, a
      0010AC 18 05                 4150 	jr	00423$
      0010AE                       4151 00422$:
      0010AE CB 7A                 4152 	bit	7, d
      0010B0 28 01                 4153 	jr	Z, 00423$
      0010B2 37                    4154 	scf
      0010B3                       4155 00423$:
      0010B3 30 05                 4156 	jr	NC, 00204$
      0010B5 F8 0C                 4157 	ldhl	sp,	#12
      0010B7 5E                    4158 	ld	e, (hl)
      0010B8 18 03                 4159 	jr	00205$
      0010BA                       4160 00204$:
      0010BA F8 0E                 4161 	ldhl	sp,	#14
      0010BC 5E                    4162 	ld	e, (hl)
      0010BD                       4163 00205$:
      0010BD F8 0E                 4164 	ldhl	sp,	#14
      0010BF 73                    4165 	ld	(hl), e
      0010C0                       4166 00203$:
      0010C0 F8 0E                 4167 	ldhl	sp,	#14
      0010C2 4E                    4168 	ld	c, (hl)
                                   4169 ;src/main.c:437: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0010C3 F8 06                 4170 	ldhl	sp,	#6
      0010C5 2A                    4171 	ld	a,	(hl+)
      0010C6 66                    4172 	ld	h, (hl)
      0010C7 6F                    4173 	ld	l, a
      0010C8 71                    4174 	ld	(hl), c
                                   4175 ;src/main.c:438: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0010C9 F8 0A                 4176 	ldhl	sp,#10
      0010CB 2A                    4177 	ld	a, (hl+)
      0010CC 5F                    4178 	ld	e, a
      0010CD 3A                    4179 	ld	a, (hl-)
      0010CE 2B                    4180 	dec	hl
      0010CF 2B                    4181 	dec	hl
      0010D0 57                    4182 	ld	d, a
      0010D1 1A                    4183 	ld	a, (de)
      0010D2 47                    4184 	ld	b, a
      0010D3 48                    4185 	ld	c, b
      0010D4 AF                    4186 	xor	a, a
      0010D5 90                    4187 	sub	a, b
      0010D6 47                    4188 	ld	b, a
      0010D7 2A                    4189 	ld	a, (hl+)
      0010D8 5F                    4190 	ld	e, a
      0010D9 56                    4191 	ld	d, (hl)
      0010DA 1A                    4192 	ld	a, (de)
      0010DB 6F                    4193 	ld	l, a
                                   4194 ;	spillPairReg hl
                                   4195 ;	spillPairReg hl
                                   4196 ;src/main.c:299: return (value < min) ? min : (value > max) ? max : value;
      0010DC 58                    4197 	ld	e, b
      0010DD 7D                    4198 	ld	a,l
      0010DE 57                    4199 	ld	d,a
      0010DF 90                    4200 	sub	a, b
      0010E0 CB 7B                 4201 	bit	7, e
      0010E2 28 07                 4202 	jr	Z, 00424$
      0010E4 CB 7A                 4203 	bit	7, d
      0010E6 20 08                 4204 	jr	NZ, 00425$
      0010E8 BF                    4205 	cp	a, a
      0010E9 18 05                 4206 	jr	00425$
      0010EB                       4207 00424$:
      0010EB CB 7A                 4208 	bit	7, d
      0010ED 28 01                 4209 	jr	Z, 00425$
      0010EF 37                    4210 	scf
      0010F0                       4211 00425$:
      0010F0 30 03                 4212 	jr	NC, 00206$
      0010F2 48                    4213 	ld	c, b
      0010F3 18 17                 4214 	jr	00207$
      0010F5                       4215 00206$:
      0010F5 5D                    4216 	ld	e, l
      0010F6 79                    4217 	ld	a,c
      0010F7 57                    4218 	ld	d,a
      0010F8 95                    4219 	sub	a, l
      0010F9 CB 7B                 4220 	bit	7, e
      0010FB 28 07                 4221 	jr	Z, 00426$
      0010FD CB 7A                 4222 	bit	7, d
      0010FF 20 08                 4223 	jr	NZ, 00427$
      001101 BF                    4224 	cp	a, a
      001102 18 05                 4225 	jr	00427$
      001104                       4226 00426$:
      001104 CB 7A                 4227 	bit	7, d
      001106 28 01                 4228 	jr	Z, 00427$
      001108 37                    4229 	scf
      001109                       4230 00427$:
      001109 38 01                 4231 	jr	C, 00209$
      00110B 4D                    4232 	ld	c, l
      00110C                       4233 00209$:
      00110C                       4234 00207$:
                                   4235 ;src/main.c:438: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      00110C F8 08                 4236 	ldhl	sp,	#8
      00110E 2A                    4237 	ld	a,	(hl+)
      00110F 66                    4238 	ld	h, (hl)
      001110 6F                    4239 	ld	l, a
      001111 71                    4240 	ld	(hl), c
                                   4241 ;src/main.c:441: enemies[i].xReserve += enemies[i].xSpeed;
      001112 F8 02                 4242 	ldhl	sp,#2
      001114 2A                    4243 	ld	a, (hl+)
      001115 5F                    4244 	ld	e, a
      001116 56                    4245 	ld	d, (hl)
      001117 21 04 00              4246 	ld	hl, #0x0004
      00111A 19                    4247 	add	hl, de
      00111B E5                    4248 	push	hl
      00111C 7D                    4249 	ld	a, l
      00111D F8 0F                 4250 	ldhl	sp,	#15
      00111F 77                    4251 	ld	(hl), a
      001120 E1                    4252 	pop	hl
      001121 7C                    4253 	ld	a, h
      001122 F8 0E                 4254 	ldhl	sp,	#14
      001124 32                    4255 	ld	(hl-), a
      001125 2A                    4256 	ld	a, (hl+)
      001126 5F                    4257 	ld	e, a
      001127 56                    4258 	ld	d, (hl)
      001128 1A                    4259 	ld	a, (de)
      001129 47                    4260 	ld	b, a
      00112A F8 06                 4261 	ldhl	sp,#6
      00112C 2A                    4262 	ld	a, (hl+)
      00112D 5F                    4263 	ld	e, a
      00112E 56                    4264 	ld	d, (hl)
      00112F 1A                    4265 	ld	a, (de)
      001130 80                    4266 	add	a, b
      001131 47                    4267 	ld	b, a
      001132 F8 0D                 4268 	ldhl	sp,	#13
      001134 2A                    4269 	ld	a,	(hl+)
      001135 66                    4270 	ld	h, (hl)
      001136 6F                    4271 	ld	l, a
      001137 70                    4272 	ld	(hl), b
                                   4273 ;src/main.c:442: enemies[i].yReserve += enemies[i].ySpeed;
      001138 F8 02                 4274 	ldhl	sp,#2
      00113A 2A                    4275 	ld	a, (hl+)
      00113B 5F                    4276 	ld	e, a
      00113C 56                    4277 	ld	d, (hl)
      00113D 21 05 00              4278 	ld	hl, #0x0005
      001140 19                    4279 	add	hl, de
      001141 E5                    4280 	push	hl
      001142 7D                    4281 	ld	a, l
      001143 F8 0C                 4282 	ldhl	sp,	#12
      001145 77                    4283 	ld	(hl), a
      001146 E1                    4284 	pop	hl
      001147 7C                    4285 	ld	a, h
      001148 F8 0B                 4286 	ldhl	sp,	#11
      00114A 32                    4287 	ld	(hl-), a
      00114B 2A                    4288 	ld	a, (hl+)
      00114C 5F                    4289 	ld	e, a
      00114D 56                    4290 	ld	d, (hl)
      00114E 1A                    4291 	ld	a, (de)
      00114F 81                    4292 	add	a, c
      001150 4F                    4293 	ld	c, a
      001151 3A                    4294 	ld	a, (hl-)
      001152 6E                    4295 	ld	l, (hl)
      001153 67                    4296 	ld	h, a
      001154 71                    4297 	ld	(hl), c
                                   4298 ;src/main.c:446: if (enemies[i].xReserve >> 3 > 0) {
      001155 F8 0D                 4299 	ldhl	sp,#13
      001157 2A                    4300 	ld	a, (hl+)
      001158 5F                    4301 	ld	e, a
      001159 3A                    4302 	ld	a, (hl-)
      00115A 2B                    4303 	dec	hl
      00115B 57                    4304 	ld	d, a
      00115C 1A                    4305 	ld	a, (de)
      00115D 77                    4306 	ld	(hl), a
      00115E CB 28                 4307 	sra	b
      001160 CB 28                 4308 	sra	b
      001162 CB 28                 4309 	sra	b
      001164 58                    4310 	ld	e, b
      001165 AF                    4311 	xor	a, a
      001166 57                    4312 	ld	d, a
      001167 90                    4313 	sub	a, b
      001168 CB 7B                 4314 	bit	7, e
      00116A 28 07                 4315 	jr	Z, 00428$
      00116C CB 7A                 4316 	bit	7, d
      00116E 20 08                 4317 	jr	NZ, 00429$
      001170 BF                    4318 	cp	a, a
      001171 18 05                 4319 	jr	00429$
      001173                       4320 00428$:
      001173 CB 7A                 4321 	bit	7, d
      001175 28 01                 4322 	jr	Z, 00429$
      001177 37                    4323 	scf
      001178                       4324 00429$:
      001178 30 3F                 4325 	jr	NC, 00126$
                                   4326 ;src/main.c:447: int8_t xMovement = enemies[i].xReserve >> 3;
      00117A F8 0C                 4327 	ldhl	sp,	#12
      00117C 7E                    4328 	ld	a, (hl)
      00117D CB 2F                 4329 	sra	a
      00117F CB 2F                 4330 	sra	a
      001181 CB 2F                 4331 	sra	a
      001183 77                    4332 	ld	(hl), a
                                   4333 ;src/main.c:448: enemies[i].x += xMovement;
      001184 F8 02                 4334 	ldhl	sp,#2
      001186 2A                    4335 	ld	a, (hl+)
      001187 5F                    4336 	ld	e, a
      001188 56                    4337 	ld	d, (hl)
      001189 1A                    4338 	ld	a, (de)
      00118A 4F                    4339 	ld	c, a
      00118B 13                    4340 	inc	de
      00118C 1A                    4341 	ld	a, (de)
      00118D 47                    4342 	ld	b, a
      00118E F8 0C                 4343 	ldhl	sp,	#12
      001190 7E                    4344 	ld	a, (hl)
      001191 5F                    4345 	ld	e, a
      001192 07                    4346 	rlca
      001193 9F                    4347 	sbc	a, a
      001194 57                    4348 	ld	d, a
      001195 69                    4349 	ld	l, c
                                   4350 ;	spillPairReg hl
                                   4351 ;	spillPairReg hl
      001196 60                    4352 	ld	h, b
                                   4353 ;	spillPairReg hl
                                   4354 ;	spillPairReg hl
      001197 19                    4355 	add	hl, de
      001198 4D                    4356 	ld	c, l
      001199 44                    4357 	ld	b, h
      00119A F8 02                 4358 	ldhl	sp,	#2
      00119C 2A                    4359 	ld	a,	(hl+)
      00119D 66                    4360 	ld	h, (hl)
      00119E 6F                    4361 	ld	l, a
      00119F 79                    4362 	ld	a, c
      0011A0 22                    4363 	ld	(hl+), a
      0011A1 70                    4364 	ld	(hl), b
                                   4365 ;src/main.c:449: enemies[i].xReserve -=  xMovement << 3;
      0011A2 F8 0D                 4366 	ldhl	sp,#13
      0011A4 2A                    4367 	ld	a, (hl+)
      0011A5 5F                    4368 	ld	e, a
      0011A6 3A                    4369 	ld	a, (hl-)
      0011A7 2B                    4370 	dec	hl
      0011A8 57                    4371 	ld	d, a
      0011A9 1A                    4372 	ld	a, (de)
      0011AA F5                    4373 	push	af
      0011AB 2A                    4374 	ld	a, (hl+)
      0011AC 87                    4375 	add	a, a
      0011AD 87                    4376 	add	a, a
      0011AE 87                    4377 	add	a, a
      0011AF 4F                    4378 	ld	c, a
      0011B0 F1                    4379 	pop	af
      0011B1 91                    4380 	sub	a, c
      0011B2 4F                    4381 	ld	c, a
      0011B3 2A                    4382 	ld	a,	(hl+)
      0011B4 66                    4383 	ld	h, (hl)
      0011B5 6F                    4384 	ld	l, a
      0011B6 71                    4385 	ld	(hl), c
      0011B7 18 69                 4386 	jr	00127$
      0011B9                       4387 00126$:
                                   4388 ;src/main.c:452: else if ((-enemies[i].xReserve) >> 3 > 0){
      0011B9 F8 0C                 4389 	ldhl	sp,	#12
      0011BB 7E                    4390 	ld	a, (hl)
      0011BC 4F                    4391 	ld	c, a
      0011BD 07                    4392 	rlca
      0011BE 9F                    4393 	sbc	a, a
      0011BF 47                    4394 	ld	b, a
      0011C0 AF                    4395 	xor	a, a
      0011C1 91                    4396 	sub	a, c
      0011C2 4F                    4397 	ld	c, a
      0011C3 9F                    4398 	sbc	a, a
      0011C4 90                    4399 	sub	a, b
      0011C5 47                    4400 	ld	b, a
      0011C6 CB 28                 4401 	sra	b
      0011C8 CB 19                 4402 	rr	c
      0011CA CB 28                 4403 	sra	b
      0011CC CB 19                 4404 	rr	c
      0011CE CB 28                 4405 	sra	b
      0011D0 CB 19                 4406 	rr	c
      0011D2 58                    4407 	ld	e, b
      0011D3 AF                    4408 	xor	a, a
      0011D4 57                    4409 	ld	d, a
      0011D5 B9                    4410 	cp	a, c
      0011D6 98                    4411 	sbc	a, b
      0011D7 CB 7B                 4412 	bit	7, e
      0011D9 28 07                 4413 	jr	Z, 00430$
      0011DB CB 7A                 4414 	bit	7, d
      0011DD 20 08                 4415 	jr	NZ, 00431$
      0011DF BF                    4416 	cp	a, a
      0011E0 18 05                 4417 	jr	00431$
      0011E2                       4418 00430$:
      0011E2 CB 7A                 4419 	bit	7, d
      0011E4 28 01                 4420 	jr	Z, 00431$
      0011E6 37                    4421 	scf
      0011E7                       4422 00431$:
      0011E7 30 39                 4423 	jr	NC, 00127$
                                   4424 ;src/main.c:453: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      0011E9 AF                    4425 	xor	a, a
      0011EA 91                    4426 	sub	a, c
      0011EB 4F                    4427 	ld	c, a
      0011EC F8 0C                 4428 	ldhl	sp,	#12
      0011EE 71                    4429 	ld	(hl), c
                                   4430 ;src/main.c:454: enemies[i].x += xMovement;
      0011EF F8 02                 4431 	ldhl	sp,#2
      0011F1 2A                    4432 	ld	a, (hl+)
      0011F2 5F                    4433 	ld	e, a
      0011F3 56                    4434 	ld	d, (hl)
      0011F4 1A                    4435 	ld	a, (de)
      0011F5 4F                    4436 	ld	c, a
      0011F6 13                    4437 	inc	de
      0011F7 1A                    4438 	ld	a, (de)
      0011F8 47                    4439 	ld	b, a
      0011F9 F8 0C                 4440 	ldhl	sp,	#12
      0011FB 7E                    4441 	ld	a, (hl)
      0011FC 5F                    4442 	ld	e, a
      0011FD 07                    4443 	rlca
      0011FE 9F                    4444 	sbc	a, a
      0011FF 57                    4445 	ld	d, a
      001200 69                    4446 	ld	l, c
                                   4447 ;	spillPairReg hl
                                   4448 ;	spillPairReg hl
      001201 60                    4449 	ld	h, b
                                   4450 ;	spillPairReg hl
                                   4451 ;	spillPairReg hl
      001202 19                    4452 	add	hl, de
      001203 4D                    4453 	ld	c, l
      001204 44                    4454 	ld	b, h
      001205 F8 02                 4455 	ldhl	sp,	#2
      001207 2A                    4456 	ld	a,	(hl+)
      001208 66                    4457 	ld	h, (hl)
      001209 6F                    4458 	ld	l, a
      00120A 79                    4459 	ld	a, c
      00120B 22                    4460 	ld	(hl+), a
      00120C 70                    4461 	ld	(hl), b
                                   4462 ;src/main.c:455: enemies[i].xReserve +=  (-xMovement) << 3;
      00120D F8 0D                 4463 	ldhl	sp,#13
      00120F 2A                    4464 	ld	a, (hl+)
      001210 5F                    4465 	ld	e, a
      001211 3A                    4466 	ld	a, (hl-)
      001212 2B                    4467 	dec	hl
      001213 57                    4468 	ld	d, a
      001214 1A                    4469 	ld	a, (de)
      001215 4F                    4470 	ld	c, a
      001216 AF                    4471 	xor	a, a
      001217 96                    4472 	sub	a, (hl)
      001218 23                    4473 	inc	hl
      001219 87                    4474 	add	a, a
      00121A 87                    4475 	add	a, a
      00121B 87                    4476 	add	a, a
      00121C 81                    4477 	add	a, c
      00121D 4F                    4478 	ld	c, a
      00121E 2A                    4479 	ld	a,	(hl+)
      00121F 66                    4480 	ld	h, (hl)
      001220 6F                    4481 	ld	l, a
      001221 71                    4482 	ld	(hl), c
      001222                       4483 00127$:
                                   4484 ;src/main.c:442: enemies[i].yReserve += enemies[i].ySpeed;
      001222 F8 0A                 4485 	ldhl	sp,#10
      001224 2A                    4486 	ld	a, (hl+)
      001225 5F                    4487 	ld	e, a
      001226 56                    4488 	ld	d, (hl)
      001227 1A                    4489 	ld	a, (de)
      001228 4F                    4490 	ld	c, a
                                   4491 ;src/main.c:458: if (enemies[i].yReserve >> 3 > 0) {
      001229 41                    4492 	ld	b, c
      00122A CB 28                 4493 	sra	b
      00122C CB 28                 4494 	sra	b
      00122E CB 28                 4495 	sra	b
      001230 58                    4496 	ld	e, b
      001231 AF                    4497 	xor	a, a
      001232 57                    4498 	ld	d, a
      001233 90                    4499 	sub	a, b
      001234 CB 7B                 4500 	bit	7, e
      001236 28 07                 4501 	jr	Z, 00432$
      001238 CB 7A                 4502 	bit	7, d
      00123A 20 08                 4503 	jr	NZ, 00433$
      00123C BF                    4504 	cp	a, a
      00123D 18 05                 4505 	jr	00433$
      00123F                       4506 00432$:
      00123F CB 7A                 4507 	bit	7, d
      001241 28 01                 4508 	jr	Z, 00433$
      001243 37                    4509 	scf
      001244                       4510 00433$:
      001244 30 3A                 4511 	jr	NC, 00131$
                                   4512 ;src/main.c:459: int8_t yMovement = enemies[i].yReserve >> 3;
      001246 F8 0E                 4513 	ldhl	sp,	#14
      001248 70                    4514 	ld	(hl), b
                                   4515 ;src/main.c:460: enemies[i].y += yMovement;
      001249 F8 04                 4516 	ldhl	sp,#4
      00124B 2A                    4517 	ld	a, (hl+)
      00124C 5F                    4518 	ld	e, a
      00124D 56                    4519 	ld	d, (hl)
      00124E 1A                    4520 	ld	a, (de)
      00124F 4F                    4521 	ld	c, a
      001250 13                    4522 	inc	de
      001251 1A                    4523 	ld	a, (de)
      001252 47                    4524 	ld	b, a
      001253 F8 0E                 4525 	ldhl	sp,	#14
      001255 7E                    4526 	ld	a, (hl)
      001256 5F                    4527 	ld	e, a
      001257 07                    4528 	rlca
      001258 9F                    4529 	sbc	a, a
      001259 57                    4530 	ld	d, a
      00125A 69                    4531 	ld	l, c
                                   4532 ;	spillPairReg hl
                                   4533 ;	spillPairReg hl
      00125B 60                    4534 	ld	h, b
                                   4535 ;	spillPairReg hl
                                   4536 ;	spillPairReg hl
      00125C 19                    4537 	add	hl, de
      00125D 4D                    4538 	ld	c, l
      00125E 44                    4539 	ld	b, h
      00125F F8 04                 4540 	ldhl	sp,	#4
      001261 2A                    4541 	ld	a,	(hl+)
      001262 66                    4542 	ld	h, (hl)
      001263 6F                    4543 	ld	l, a
      001264 79                    4544 	ld	a, c
      001265 22                    4545 	ld	(hl+), a
      001266 70                    4546 	ld	(hl), b
                                   4547 ;src/main.c:461: enemies[i].yReserve -=  yMovement << 3;
      001267 F8 0A                 4548 	ldhl	sp,#10
      001269 2A                    4549 	ld	a, (hl+)
      00126A 5F                    4550 	ld	e, a
      00126B 56                    4551 	ld	d, (hl)
      00126C 1A                    4552 	ld	a, (de)
      00126D F5                    4553 	push	af
      00126E F8 10                 4554 	ldhl	sp,	#16
      001270 7E                    4555 	ld	a, (hl)
      001271 87                    4556 	add	a, a
      001272 87                    4557 	add	a, a
      001273 87                    4558 	add	a, a
      001274 4F                    4559 	ld	c, a
      001275 F1                    4560 	pop	af
      001276 91                    4561 	sub	a, c
      001277 4F                    4562 	ld	c, a
      001278 F8 0A                 4563 	ldhl	sp,	#10
      00127A 2A                    4564 	ld	a,	(hl+)
      00127B 66                    4565 	ld	h, (hl)
      00127C 6F                    4566 	ld	l, a
      00127D 71                    4567 	ld	(hl), c
      00127E 18 67                 4568 	jr	00133$
      001280                       4569 00131$:
                                   4570 ;src/main.c:463: else if ((-enemies[i].yReserve) >> 3 > 0){
      001280 79                    4571 	ld	a, c
      001281 07                    4572 	rlca
      001282 9F                    4573 	sbc	a, a
      001283 47                    4574 	ld	b, a
      001284 AF                    4575 	xor	a, a
      001285 91                    4576 	sub	a, c
      001286 4F                    4577 	ld	c, a
      001287 9F                    4578 	sbc	a, a
      001288 90                    4579 	sub	a, b
      001289 47                    4580 	ld	b, a
      00128A CB 28                 4581 	sra	b
      00128C CB 19                 4582 	rr	c
      00128E CB 28                 4583 	sra	b
      001290 CB 19                 4584 	rr	c
      001292 CB 28                 4585 	sra	b
      001294 CB 19                 4586 	rr	c
      001296 58                    4587 	ld	e, b
      001297 AF                    4588 	xor	a, a
      001298 57                    4589 	ld	d, a
      001299 B9                    4590 	cp	a, c
      00129A 98                    4591 	sbc	a, b
      00129B CB 7B                 4592 	bit	7, e
      00129D 28 07                 4593 	jr	Z, 00434$
      00129F CB 7A                 4594 	bit	7, d
      0012A1 20 08                 4595 	jr	NZ, 00435$
      0012A3 BF                    4596 	cp	a, a
      0012A4 18 05                 4597 	jr	00435$
      0012A6                       4598 00434$:
      0012A6 CB 7A                 4599 	bit	7, d
      0012A8 28 01                 4600 	jr	Z, 00435$
      0012AA 37                    4601 	scf
      0012AB                       4602 00435$:
      0012AB 30 3A                 4603 	jr	NC, 00133$
                                   4604 ;src/main.c:464: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0012AD AF                    4605 	xor	a, a
      0012AE 91                    4606 	sub	a, c
      0012AF 4F                    4607 	ld	c, a
      0012B0 F8 0E                 4608 	ldhl	sp,	#14
      0012B2 71                    4609 	ld	(hl), c
                                   4610 ;src/main.c:465: enemies[i].y += yMovement;
      0012B3 F8 04                 4611 	ldhl	sp,#4
      0012B5 2A                    4612 	ld	a, (hl+)
      0012B6 5F                    4613 	ld	e, a
      0012B7 56                    4614 	ld	d, (hl)
      0012B8 1A                    4615 	ld	a, (de)
      0012B9 4F                    4616 	ld	c, a
      0012BA 13                    4617 	inc	de
      0012BB 1A                    4618 	ld	a, (de)
      0012BC 47                    4619 	ld	b, a
      0012BD F8 0E                 4620 	ldhl	sp,	#14
      0012BF 7E                    4621 	ld	a, (hl)
      0012C0 5F                    4622 	ld	e, a
      0012C1 07                    4623 	rlca
      0012C2 9F                    4624 	sbc	a, a
      0012C3 57                    4625 	ld	d, a
      0012C4 69                    4626 	ld	l, c
      0012C5 60                    4627 	ld	h, b
      0012C6 19                    4628 	add	hl, de
      0012C7 4D                    4629 	ld	c, l
      0012C8 44                    4630 	ld	b, h
      0012C9 F8 04                 4631 	ldhl	sp,	#4
      0012CB 2A                    4632 	ld	a,	(hl+)
      0012CC 66                    4633 	ld	h, (hl)
      0012CD 6F                    4634 	ld	l, a
      0012CE 79                    4635 	ld	a, c
      0012CF 22                    4636 	ld	(hl+), a
      0012D0 70                    4637 	ld	(hl), b
                                   4638 ;src/main.c:466: enemies[i].yReserve +=  (-yMovement) << 3;
      0012D1 F8 0A                 4639 	ldhl	sp,#10
      0012D3 2A                    4640 	ld	a, (hl+)
      0012D4 5F                    4641 	ld	e, a
      0012D5 56                    4642 	ld	d, (hl)
      0012D6 1A                    4643 	ld	a, (de)
      0012D7 4F                    4644 	ld	c, a
      0012D8 AF                    4645 	xor	a, a
      0012D9 F8 0E                 4646 	ldhl	sp,	#14
      0012DB 96                    4647 	sub	a, (hl)
      0012DC 87                    4648 	add	a, a
      0012DD 87                    4649 	add	a, a
      0012DE 87                    4650 	add	a, a
      0012DF 81                    4651 	add	a, c
      0012E0 4F                    4652 	ld	c, a
      0012E1 F8 0A                 4653 	ldhl	sp,	#10
      0012E3 2A                    4654 	ld	a,	(hl+)
      0012E4 66                    4655 	ld	h, (hl)
      0012E5 6F                    4656 	ld	l, a
      0012E6 71                    4657 	ld	(hl), c
      0012E7                       4658 00133$:
                                   4659 ;src/main.c:402: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0012E7 F8 0F                 4660 	ldhl	sp,	#15
      0012E9 34                    4661 	inc	(hl)
      0012EA C3r36r0E              4662 	jp	00196$
      0012ED                       4663 00134$:
                                   4664 ;src/main.c:473: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0012ED F8 0F                 4665 	ldhl	sp,	#15
      0012EF 36 00                 4666 	ld	(hl), #0x00
      0012F1                       4667 00198$:
      0012F1 21r4Dr08              4668 	ld	hl, #_ENEMYCOUNT
      0012F4 4E                    4669 	ld	c, (hl)
      0012F5 F8 0F                 4670 	ldhl	sp,	#15
      0012F7 7E                    4671 	ld	a, (hl)
      0012F8 91                    4672 	sub	a, c
      0012F9 D2r9Cr16              4673 	jp	NC, 00200$
                                   4674 ;src/main.c:475: if (enemies[i].alive) {
      0012FC 7E                    4675 	ld	a, (hl)
      0012FD 16 00                 4676 	ld	d, #0x00
      0012FF 87                    4677 	add	a, a
      001300 CB 12                 4678 	rl	d
      001302 87                    4679 	add	a, a
      001303 CB 12                 4680 	rl	d
      001305 87                    4681 	add	a, a
      001306 CB 12                 4682 	rl	d
      001308 87                    4683 	add	a, a
      001309 CB 12                 4684 	rl	d
      00130B 5F                    4685 	ld	e, a
      00130C 21r50r00              4686 	ld	hl, #_enemies
      00130F 19                    4687 	add	hl, de
      001310 E5                    4688 	push	hl
      001311 7D                    4689 	ld	a, l
      001312 F8 03                 4690 	ldhl	sp,	#3
      001314 77                    4691 	ld	(hl), a
      001315 E1                    4692 	pop	hl
      001316 7C                    4693 	ld	a, h
      001317 F8 02                 4694 	ldhl	sp,	#2
      001319 32                    4695 	ld	(hl-), a
      00131A 2A                    4696 	ld	a, (hl+)
      00131B 5F                    4697 	ld	e, a
      00131C 56                    4698 	ld	d, (hl)
      00131D 21 09 00              4699 	ld	hl, #0x0009
      001320 19                    4700 	add	hl, de
      001321 E5                    4701 	push	hl
      001322 7D                    4702 	ld	a, l
      001323 F8 05                 4703 	ldhl	sp,	#5
      001325 77                    4704 	ld	(hl), a
      001326 E1                    4705 	pop	hl
      001327 7C                    4706 	ld	a, h
      001328 F8 04                 4707 	ldhl	sp,	#4
      00132A 32                    4708 	ld	(hl-), a
      00132B 2A                    4709 	ld	a, (hl+)
      00132C 5F                    4710 	ld	e, a
      00132D 56                    4711 	ld	d, (hl)
      00132E 1A                    4712 	ld	a, (de)
      00132F F8 0E                 4713 	ldhl	sp,	#14
      001331 77                    4714 	ld	(hl), a
      001332 7E                    4715 	ld	a, (hl)
      001333 B7                    4716 	or	a, a
      001334 CAr2Ar15              4717 	jp	Z, 00157$
                                   4718 ;src/main.c:476: if (enemies[i].visible == 1) {
      001337 F8 01                 4719 	ldhl	sp,#1
      001339 2A                    4720 	ld	a, (hl+)
      00133A 5F                    4721 	ld	e, a
      00133B 56                    4722 	ld	d, (hl)
      00133C 21 0A 00              4723 	ld	hl, #0x000a
      00133F 19                    4724 	add	hl, de
      001340 E5                    4725 	push	hl
      001341 7D                    4726 	ld	a, l
      001342 F8 07                 4727 	ldhl	sp,	#7
      001344 77                    4728 	ld	(hl), a
      001345 E1                    4729 	pop	hl
      001346 7C                    4730 	ld	a, h
      001347 F8 06                 4731 	ldhl	sp,	#6
      001349 32                    4732 	ld	(hl-), a
      00134A 2A                    4733 	ld	a, (hl+)
      00134B 5F                    4734 	ld	e, a
      00134C 2A                    4735 	ld	a, (hl+)
      00134D 57                    4736 	ld	d, a
      00134E 1A                    4737 	ld	a, (de)
      00134F 77                    4738 	ld	(hl), a
                                   4739 ;src/main.c:477: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001350 F8 01                 4740 	ldhl	sp,#1
      001352 2A                    4741 	ld	a, (hl+)
      001353 5F                    4742 	ld	e, a
      001354 56                    4743 	ld	d, (hl)
      001355 1A                    4744 	ld	a, (de)
      001356 F8 08                 4745 	ldhl	sp,	#8
      001358 22                    4746 	ld	(hl+), a
      001359 13                    4747 	inc	de
      00135A 1A                    4748 	ld	a, (de)
      00135B 77                    4749 	ld	(hl), a
      00135C F8 01                 4750 	ldhl	sp,	#1
      00135E 2A                    4751 	ld	a, (hl+)
      00135F 4F                    4752 	ld	c, a
      001360 46                    4753 	ld	b, (hl)
      001361 03                    4754 	inc	bc
      001362 03                    4755 	inc	bc
                                   4756 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      001363 F8 0F                 4757 	ldhl	sp,	#15
      001365 5E                    4758 	ld	e, (hl)
                                   4759 ;src/main.c:477: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001366 F8 08                 4760 	ldhl	sp,	#8
      001368 2A                    4761 	ld	a, (hl+)
      001369 23                    4762 	inc	hl
      00136A 32                    4763 	ld	(hl-), a
      00136B 2A                    4764 	ld	a, (hl+)
      00136C 23                    4765 	inc	hl
                                   4766 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      00136D 22                    4767 	ld	(hl+), a
      00136E 7B                    4768 	ld	a, e
      00136F 87                    4769 	add	a, a
                                   4770 ;src/main.c:477: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001370 32                    4771 	ld	(hl-), a
      001371 2A                    4772 	ld	a, (hl+)
      001372 23                    4773 	inc	hl
      001373 07                    4774 	rlca
      001374 E6 01                 4775 	and	a,#0x01
                                   4776 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      001376 32                    4777 	ld	(hl-), a
      001377 2A                    4778 	ld	a, (hl+)
      001378 23                    4779 	inc	hl
      001379 C6 0A                 4780 	add	a, #0x0a
      00137B 77                    4781 	ld	(hl), a
                                   4782 ;src/main.c:476: if (enemies[i].visible == 1) {
      00137C F8 07                 4783 	ldhl	sp,	#7
      00137E 7E                    4784 	ld	a, (hl)
      00137F 3D                    4785 	dec	a
      001380 20 74                 4786 	jr	NZ, 00154$
                                   4787 ;src/main.c:477: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001382 F8 0D                 4788 	ldhl	sp,	#13
      001384 7E                    4789 	ld	a, (hl)
      001385 B7                    4790 	or	a, a
      001386 20 43                 4791 	jr	NZ, 00135$
      001388 F8 0A                 4792 	ldhl	sp,	#10
      00138A 3E AC                 4793 	ld	a, #0xac
      00138C 96                    4794 	sub	a, (hl)
      00138D 23                    4795 	inc	hl
      00138E 3E 00                 4796 	ld	a, #0x00
      001390 9E                    4797 	sbc	a, (hl)
      001391 3E 00                 4798 	ld	a, #0x00
      001393 57                    4799 	ld	d, a
      001394 CB 7E                 4800 	bit	7, (hl)
      001396 28 07                 4801 	jr	Z, 00439$
      001398 CB 7A                 4802 	bit	7, d
      00139A 20 08                 4803 	jr	NZ, 00440$
      00139C BF                    4804 	cp	a, a
      00139D 18 05                 4805 	jr	00440$
      00139F                       4806 00439$:
      00139F CB 7A                 4807 	bit	7, d
      0013A1 28 01                 4808 	jr	Z, 00440$
      0013A3 37                    4809 	scf
      0013A4                       4810 00440$:
      0013A4 38 25                 4811 	jr	C, 00135$
      0013A6 69                    4812 	ld	l, c
      0013A7 60                    4813 	ld	h, b
      0013A8 2A                    4814 	ld	a, (hl+)
      0013A9 4F                    4815 	ld	c, a
      0013AA 46                    4816 	ld	b, (hl)
      0013AB CB 78                 4817 	bit	7, b
      0013AD 20 1C                 4818 	jr	NZ, 00135$
      0013AF 58                    4819 	ld	e, b
      0013B0 16 00                 4820 	ld	d, #0x00
      0013B2 3E 98                 4821 	ld	a, #0x98
      0013B4 B9                    4822 	cp	a, c
      0013B5 3E 00                 4823 	ld	a, #0x00
      0013B7 98                    4824 	sbc	a, b
      0013B8 CB 7B                 4825 	bit	7, e
      0013BA 28 07                 4826 	jr	Z, 00441$
      0013BC CB 7A                 4827 	bit	7, d
      0013BE 20 08                 4828 	jr	NZ, 00442$
      0013C0 BF                    4829 	cp	a, a
      0013C1 18 05                 4830 	jr	00442$
      0013C3                       4831 00441$:
      0013C3 CB 7A                 4832 	bit	7, d
      0013C5 28 01                 4833 	jr	Z, 00442$
      0013C7 37                    4834 	scf
      0013C8                       4835 00442$:
      0013C8 D2r2Ar15              4836 	jp	NC, 00157$
      0013CB                       4837 00135$:
                                   4838 ;src/main.c:478: enemies[i].visible = 0;
      0013CB F8 05                 4839 	ldhl	sp,	#5
      0013CD 2A                    4840 	ld	a,	(hl+)
      0013CE 66                    4841 	ld	h, (hl)
      0013CF 6F                    4842 	ld	l, a
      0013D0 36 00                 4843 	ld	(hl), #0x00
                                   4844 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      0013D2 F8 0E                 4845 	ldhl	sp,	#14
                                   4846 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013D4 6E                    4847 	ld	l, (hl)
      0013D5 01r00r00              4848 	ld	bc, #_shadow_OAM+0
                                   4849 ;	spillPairReg hl
                                   4850 ;	spillPairReg hl
      0013D8 26 00                 4851 	ld	h, #0x00
                                   4852 ;	spillPairReg hl
                                   4853 ;	spillPairReg hl
      0013DA 29                    4854 	add	hl, hl
      0013DB 29                    4855 	add	hl, hl
      0013DC 09                    4856 	add	hl, bc
      0013DD 23                    4857 	inc	hl
      0013DE 23                    4858 	inc	hl
      0013DF 36 7F                 4859 	ld	(hl), #0x7f
                                   4860 ;src/main.c:480: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0013E1 F8 0C                 4861 	ldhl	sp,	#12
      0013E3 7E                    4862 	ld	a, (hl)
      0013E4 C6 0B                 4863 	add	a, #0x0b
                                   4864 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0013E6 6F                    4865 	ld	l, a
      0013E7 01r00r00              4866 	ld	bc, #_shadow_OAM+0
                                   4867 ;	spillPairReg hl
                                   4868 ;	spillPairReg hl
      0013EA 26 00                 4869 	ld	h, #0x00
                                   4870 ;	spillPairReg hl
                                   4871 ;	spillPairReg hl
      0013EC 29                    4872 	add	hl, hl
      0013ED 29                    4873 	add	hl, hl
      0013EE 09                    4874 	add	hl, bc
      0013EF 23                    4875 	inc	hl
      0013F0 23                    4876 	inc	hl
      0013F1 36 7F                 4877 	ld	(hl), #0x7f
                                   4878 ;src/main.c:480: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0013F3 C3r2Ar15              4879 	jp	00157$
      0013F6                       4880 00154$:
                                   4881 ;src/main.c:484: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      0013F6 F8 0D                 4882 	ldhl	sp,	#13
      0013F8 CB 46                 4883 	bit	0, (hl)
      0013FA C2r95r14              4884 	jp	NZ, 00148$
      0013FD F8 0A                 4885 	ldhl	sp,	#10
      0013FF 2A                    4886 	ld	a, (hl+)
      001400 D6 AC                 4887 	sub	a, #0xac
      001402 7E                    4888 	ld	a, (hl)
      001403 DE 00                 4889 	sbc	a, #0x00
      001405 56                    4890 	ld	d, (hl)
      001406 3E 00                 4891 	ld	a, #0x00
      001408 CB 7F                 4892 	bit	7,a
      00140A 28 07                 4893 	jr	Z, 00443$
      00140C CB 7A                 4894 	bit	7, d
      00140E 20 08                 4895 	jr	NZ, 00444$
      001410 BF                    4896 	cp	a, a
      001411 18 05                 4897 	jr	00444$
      001413                       4898 00443$:
      001413 CB 7A                 4899 	bit	7, d
      001415 28 01                 4900 	jr	Z, 00444$
      001417 37                    4901 	scf
      001418                       4902 00444$:
      001418 30 7B                 4903 	jr	NC, 00148$
      00141A 69                    4904 	ld	l, c
      00141B 60                    4905 	ld	h, b
      00141C 2A                    4906 	ld	a,	(hl+)
      00141D 66                    4907 	ld	h, (hl)
                                   4908 ;	spillPairReg hl
      00141E 6F                    4909 	ld	l, a
                                   4910 ;	spillPairReg hl
                                   4911 ;	spillPairReg hl
      00141F 5C                    4912 	ld	e, h
      001420 AF                    4913 	xor	a, a
      001421 57                    4914 	ld	d, a
      001422 BD                    4915 	cp	a, l
      001423 9C                    4916 	sbc	a, h
      001424 CB 7B                 4917 	bit	7, e
      001426 28 07                 4918 	jr	Z, 00445$
      001428 CB 7A                 4919 	bit	7, d
      00142A 20 08                 4920 	jr	NZ, 00446$
      00142C BF                    4921 	cp	a, a
      00142D 18 05                 4922 	jr	00446$
      00142F                       4923 00445$:
      00142F CB 7A                 4924 	bit	7, d
      001431 28 01                 4925 	jr	Z, 00446$
      001433 37                    4926 	scf
      001434                       4927 00446$:
      001434 30 5F                 4928 	jr	NC, 00148$
      001436 7D                    4929 	ld	a, l
      001437 D6 98                 4930 	sub	a, #0x98
      001439 7C                    4931 	ld	a, h
      00143A 17                    4932 	rla
      00143B 3F                    4933 	ccf
      00143C 1F                    4934 	rra
      00143D DE 80                 4935 	sbc	a, #0x80
      00143F 30 54                 4936 	jr	NC, 00148$
                                   4937 ;src/main.c:485: enemies[i].visible = 1;
      001441 F8 05                 4938 	ldhl	sp,	#5
      001443 2A                    4939 	ld	a,	(hl+)
      001444 66                    4940 	ld	h, (hl)
      001445 6F                    4941 	ld	l, a
      001446 36 01                 4942 	ld	(hl), #0x01
                                   4943 ;src/main.c:486: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      001448 F8 01                 4944 	ldhl	sp,#1
      00144A 2A                    4945 	ld	a, (hl+)
      00144B 5F                    4946 	ld	e, a
      00144C 56                    4947 	ld	d, (hl)
      00144D 21 06 00              4948 	ld	hl, #0x0006
      001450 19                    4949 	add	hl, de
      001451 4D                    4950 	ld	c, l
      001452 44                    4951 	ld	b, h
      001453 0A                    4952 	ld	a, (bc)
      001454 4F                    4953 	ld	c, a
      001455 F8 0E                 4954 	ldhl	sp,	#14
                                   4955 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001457 6E                    4956 	ld	l, (hl)
                                   4957 ;	spillPairReg hl
                                   4958 ;	spillPairReg hl
      001458 26 00                 4959 	ld	h, #0x00
                                   4960 ;	spillPairReg hl
                                   4961 ;	spillPairReg hl
      00145A 29                    4962 	add	hl, hl
      00145B 29                    4963 	add	hl, hl
      00145C 11r00r00              4964 	ld	de, #_shadow_OAM
      00145F 19                    4965 	add	hl, de
      001460 23                    4966 	inc	hl
      001461 23                    4967 	inc	hl
      001462 71                    4968 	ld	(hl), c
                                   4969 ;src/main.c:487: if (enemies[i].spriteCount == 2) {
      001463 F8 01                 4970 	ldhl	sp,#1
      001465 2A                    4971 	ld	a, (hl+)
      001466 5F                    4972 	ld	e, a
      001467 56                    4973 	ld	d, (hl)
      001468 21 08 00              4974 	ld	hl, #0x0008
      00146B 19                    4975 	add	hl, de
      00146C 4D                    4976 	ld	c, l
      00146D 44                    4977 	ld	b, h
      00146E 0A                    4978 	ld	a, (bc)
      00146F D6 02                 4979 	sub	a, #0x02
      001471 C2r2Ar15              4980 	jp	NZ,00157$
                                   4981 ;src/main.c:488: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001474 F8 01                 4982 	ldhl	sp,#1
      001476 2A                    4983 	ld	a, (hl+)
      001477 5F                    4984 	ld	e, a
      001478 56                    4985 	ld	d, (hl)
      001479 21 07 00              4986 	ld	hl, #0x0007
      00147C 19                    4987 	add	hl, de
      00147D 4D                    4988 	ld	c, l
      00147E 44                    4989 	ld	b, h
      00147F 0A                    4990 	ld	a, (bc)
      001480 4F                    4991 	ld	c, a
      001481 F8 0C                 4992 	ldhl	sp,	#12
      001483 7E                    4993 	ld	a, (hl)
      001484 C6 0B                 4994 	add	a, #0x0b
                                   4995 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001486 6F                    4996 	ld	l, a
                                   4997 ;	spillPairReg hl
                                   4998 ;	spillPairReg hl
      001487 26 00                 4999 	ld	h, #0x00
                                   5000 ;	spillPairReg hl
                                   5001 ;	spillPairReg hl
      001489 29                    5002 	add	hl, hl
      00148A 29                    5003 	add	hl, hl
      00148B 11r00r00              5004 	ld	de, #_shadow_OAM
      00148E 19                    5005 	add	hl, de
      00148F 23                    5006 	inc	hl
      001490 23                    5007 	inc	hl
      001491 71                    5008 	ld	(hl), c
                                   5009 ;src/main.c:488: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      001492 C3r2Ar15              5010 	jp	00157$
      001495                       5011 00148$:
                                   5012 ;src/main.c:491: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      001495 F8 08                 5013 	ldhl	sp,	#8
      001497 2A                    5014 	ld	a, (hl+)
      001498 D6 9C                 5015 	sub	a, #0x9c
      00149A 7E                    5016 	ld	a, (hl)
      00149B DE FF                 5017 	sbc	a, #0xff
      00149D 56                    5018 	ld	d, (hl)
      00149E 3E FF                 5019 	ld	a, #0xff
      0014A0 CB 7F                 5020 	bit	7,a
      0014A2 28 07                 5021 	jr	Z, 00449$
      0014A4 CB 7A                 5022 	bit	7, d
      0014A6 20 08                 5023 	jr	NZ, 00450$
      0014A8 BF                    5024 	cp	a, a
      0014A9 18 05                 5025 	jr	00450$
      0014AB                       5026 00449$:
      0014AB CB 7A                 5027 	bit	7, d
      0014AD 28 01                 5028 	jr	Z, 00450$
      0014AF 37                    5029 	scf
      0014B0                       5030 00450$:
      0014B0 38 49                 5031 	jr	C, 00142$
      0014B2 F8 0A                 5032 	ldhl	sp,	#10
      0014B4 3E 10                 5033 	ld	a, #0x10
      0014B6 96                    5034 	sub	a, (hl)
      0014B7 23                    5035 	inc	hl
      0014B8 3E 01                 5036 	ld	a, #0x01
      0014BA 9E                    5037 	sbc	a, (hl)
      0014BB 3E 01                 5038 	ld	a, #0x01
      0014BD 57                    5039 	ld	d, a
      0014BE CB 7E                 5040 	bit	7, (hl)
      0014C0 28 07                 5041 	jr	Z, 00451$
      0014C2 CB 7A                 5042 	bit	7, d
      0014C4 20 08                 5043 	jr	NZ, 00452$
      0014C6 BF                    5044 	cp	a, a
      0014C7 18 05                 5045 	jr	00452$
      0014C9                       5046 00451$:
      0014C9 CB 7A                 5047 	bit	7, d
      0014CB 28 01                 5048 	jr	Z, 00452$
      0014CD 37                    5049 	scf
      0014CE                       5050 00452$:
      0014CE 38 2B                 5051 	jr	C, 00142$
      0014D0 69                    5052 	ld	l, c
      0014D1 60                    5053 	ld	h, b
      0014D2 2A                    5054 	ld	a, (hl+)
      0014D3 4F                    5055 	ld	c, a
      0014D4 46                    5056 	ld	b, (hl)
      0014D5 79                    5057 	ld	a, c
      0014D6 D6 9C                 5058 	sub	a, #0x9c
      0014D8 78                    5059 	ld	a, b
      0014D9 17                    5060 	rla
      0014DA 3F                    5061 	ccf
      0014DB 1F                    5062 	rra
      0014DC DE 7F                 5063 	sbc	a, #0x7f
      0014DE 38 1B                 5064 	jr	C, 00142$
      0014E0 58                    5065 	ld	e, b
      0014E1 16 00                 5066 	ld	d, #0x00
      0014E3 3E FC                 5067 	ld	a, #0xfc
      0014E5 B9                    5068 	cp	a, c
      0014E6 3E 00                 5069 	ld	a, #0x00
      0014E8 98                    5070 	sbc	a, b
      0014E9 CB 7B                 5071 	bit	7, e
      0014EB 28 07                 5072 	jr	Z, 00453$
      0014ED CB 7A                 5073 	bit	7, d
      0014EF 20 08                 5074 	jr	NZ, 00454$
      0014F1 BF                    5075 	cp	a, a
      0014F2 18 05                 5076 	jr	00454$
      0014F4                       5077 00453$:
      0014F4 CB 7A                 5078 	bit	7, d
      0014F6 28 01                 5079 	jr	Z, 00454$
      0014F8 37                    5080 	scf
      0014F9                       5081 00454$:
      0014F9 30 2F                 5082 	jr	NC, 00157$
      0014FB                       5083 00142$:
                                   5084 ;src/main.c:492: enemies[i].alive = 0;
      0014FB F8 03                 5085 	ldhl	sp,	#3
      0014FD 2A                    5086 	ld	a,	(hl+)
      0014FE 66                    5087 	ld	h, (hl)
      0014FF 6F                    5088 	ld	l, a
      001500 36 00                 5089 	ld	(hl), #0x00
                                   5090 ;src/main.c:493: set_sprite_tile(10+(i<<1), 0x7f);
      001502 F8 0E                 5091 	ldhl	sp,	#14
                                   5092 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001504 6E                    5093 	ld	l, (hl)
      001505 01r00r00              5094 	ld	bc, #_shadow_OAM+0
                                   5095 ;	spillPairReg hl
                                   5096 ;	spillPairReg hl
      001508 26 00                 5097 	ld	h, #0x00
                                   5098 ;	spillPairReg hl
                                   5099 ;	spillPairReg hl
      00150A 29                    5100 	add	hl, hl
      00150B 29                    5101 	add	hl, hl
      00150C 09                    5102 	add	hl, bc
      00150D 23                    5103 	inc	hl
      00150E 23                    5104 	inc	hl
      00150F 36 7F                 5105 	ld	(hl), #0x7f
                                   5106 ;src/main.c:494: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001511 F8 0C                 5107 	ldhl	sp,	#12
      001513 7E                    5108 	ld	a, (hl)
      001514 C6 0B                 5109 	add	a, #0x0b
                                   5110 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001516 6F                    5111 	ld	l, a
      001517 01r00r00              5112 	ld	bc, #_shadow_OAM+0
                                   5113 ;	spillPairReg hl
                                   5114 ;	spillPairReg hl
      00151A 26 00                 5115 	ld	h, #0x00
                                   5116 ;	spillPairReg hl
                                   5117 ;	spillPairReg hl
      00151C 29                    5118 	add	hl, hl
      00151D 29                    5119 	add	hl, hl
      00151E 09                    5120 	add	hl, bc
      00151F 23                    5121 	inc	hl
      001520 23                    5122 	inc	hl
      001521 36 7F                 5123 	ld	(hl), #0x7f
                                   5124 ;src/main.c:495: initEnemies(0);
      001523 AF                    5125 	xor	a, a
      001524 F5                    5126 	push	af
      001525 33                    5127 	inc	sp
      001526 CDr85r0C              5128 	call	_initEnemies
      001529 33                    5129 	inc	sp
      00152A                       5130 00157$:
                                   5131 ;src/main.c:499: if (enemies[i].spriteCount == 1) {
      00152A F8 0F                 5132 	ldhl	sp,	#15
      00152C 6E                    5133 	ld	l, (hl)
      00152D 26 00                 5134 	ld	h, #0x00
      00152F 29                    5135 	add	hl, hl
      001530 29                    5136 	add	hl, hl
      001531 29                    5137 	add	hl, hl
      001532 29                    5138 	add	hl, hl
      001533 7D                    5139 	ld	a, l
      001534 C6r50                 5140 	add	a, #<(_enemies)
      001536 4F                    5141 	ld	c, a
      001537 7C                    5142 	ld	a, h
      001538 CEs00                 5143 	adc	a, #>(_enemies)
      00153A 47                    5144 	ld	b, a
      00153B 21 08 00              5145 	ld	hl, #0x0008
      00153E 09                    5146 	add	hl, bc
      00153F 5E                    5147 	ld	e, (hl)
                                   5148 ;src/main.c:479: set_sprite_tile(10+(i<<1), 0x7f);
      001540 F8 0F                 5149 	ldhl	sp,	#15
      001542 3A                    5150 	ld	a, (hl-)
      001543 87                    5151 	add	a, a
      001544 77                    5152 	ld	(hl), a
      001545 7E                    5153 	ld	a, (hl)
      001546 C6 0A                 5154 	add	a, #0x0a
      001548 F8 0A                 5155 	ldhl	sp,	#10
      00154A 77                    5156 	ld	(hl), a
                                   5157 ;src/main.c:499: if (enemies[i].spriteCount == 1) {
      00154B 1D                    5158 	dec	e
      00154C 20 52                 5159 	jr	NZ, 00165$
                                   5160 ;src/main.c:500: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00154E 59                    5161 	ld	e, c
      00154F 50                    5162 	ld	d, b
      001550 13                    5163 	inc	de
      001551 13                    5164 	inc	de
      001552 1A                    5165 	ld	a, (de)
      001553 C6 0C                 5166 	add	a, #0x0c
      001555 5F                    5167 	ld	e, a
      001556 0A                    5168 	ld	a, (bc)
      001557 C6 04                 5169 	add	a, #0x04
      001559 F8 0E                 5170 	ldhl	sp,	#14
      00155B 77                    5171 	ld	(hl), a
      00155C F8 0A                 5172 	ldhl	sp,	#10
      00155E 56                    5173 	ld	d, (hl)
                                   5174 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00155F 6A                    5175 	ld	l, d
                                   5176 ;	spillPairReg hl
                                   5177 ;	spillPairReg hl
      001560 26 00                 5178 	ld	h, #0x00
                                   5179 ;	spillPairReg hl
                                   5180 ;	spillPairReg hl
      001562 29                    5181 	add	hl, hl
      001563 29                    5182 	add	hl, hl
      001564 D5                    5183 	push	de
      001565 11r00r00              5184 	ld	de, #_shadow_OAM
      001568 19                    5185 	add	hl, de
      001569 D1                    5186 	pop	de
                                   5187 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00156A 7B                    5188 	ld	a, e
      00156B 22                    5189 	ld	(hl+), a
      00156C 5D                    5190 	ld	e, l
      00156D 54                    5191 	ld	d, h
      00156E F8 0E                 5192 	ldhl	sp,	#14
      001570 7E                    5193 	ld	a, (hl)
      001571 12                    5194 	ld	(de), a
                                   5195 ;src/main.c:501: if (enemies[i].xSpeed >= 0) {
      001572 21 0E 00              5196 	ld	hl, #0x000e
      001575 09                    5197 	add	hl, bc
      001576 CB 7E                 5198 	bit	7, (hl)
      001578 20 13                 5199 	jr	NZ, 00159$
                                   5200 ;src/main.c:502: set_sprite_prop(10+(i<<1), 0);
      00157A F8 0A                 5201 	ldhl	sp,	#10
                                   5202 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00157C 6E                    5203 	ld	l, (hl)
      00157D 01r00r00              5204 	ld	bc, #_shadow_OAM+0
                                   5205 ;	spillPairReg hl
                                   5206 ;	spillPairReg hl
      001580 26 00                 5207 	ld	h, #0x00
                                   5208 ;	spillPairReg hl
                                   5209 ;	spillPairReg hl
      001582 29                    5210 	add	hl, hl
      001583 29                    5211 	add	hl, hl
      001584 09                    5212 	add	hl, bc
      001585 23                    5213 	inc	hl
      001586 23                    5214 	inc	hl
      001587 23                    5215 	inc	hl
      001588 36 00                 5216 	ld	(hl), #0x00
                                   5217 ;src/main.c:502: set_sprite_prop(10+(i<<1), 0);
      00158A C3r96r16              5218 	jp	00199$
      00158D                       5219 00159$:
                                   5220 ;src/main.c:505: set_sprite_prop(10+(i<<1), S_FLIPX);
      00158D F8 0A                 5221 	ldhl	sp,	#10
                                   5222 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00158F 6E                    5223 	ld	l, (hl)
      001590 01r00r00              5224 	ld	bc, #_shadow_OAM+0
                                   5225 ;	spillPairReg hl
                                   5226 ;	spillPairReg hl
      001593 26 00                 5227 	ld	h, #0x00
                                   5228 ;	spillPairReg hl
                                   5229 ;	spillPairReg hl
      001595 29                    5230 	add	hl, hl
      001596 29                    5231 	add	hl, hl
      001597 09                    5232 	add	hl, bc
      001598 23                    5233 	inc	hl
      001599 23                    5234 	inc	hl
      00159A 23                    5235 	inc	hl
      00159B 36 20                 5236 	ld	(hl), #0x20
                                   5237 ;src/main.c:505: set_sprite_prop(10+(i<<1), S_FLIPX);
      00159D C3r96r16              5238 	jp	00199$
      0015A0                       5239 00165$:
                                   5240 ;src/main.c:510: if (enemies[i].xSpeed >= 0) {
      0015A0 21 0E 00              5241 	ld	hl, #0x000e
      0015A3 09                    5242 	add	hl, bc
      0015A4 E5                    5243 	push	hl
      0015A5 7D                    5244 	ld	a, l
      0015A6 F8 0E                 5245 	ldhl	sp,	#14
      0015A8 77                    5246 	ld	(hl), a
      0015A9 E1                    5247 	pop	hl
      0015AA 7C                    5248 	ld	a, h
      0015AB F8 0D                 5249 	ldhl	sp,	#13
      0015AD 32                    5250 	ld	(hl-), a
      0015AE 2A                    5251 	ld	a, (hl+)
      0015AF 5F                    5252 	ld	e, a
      0015B0 56                    5253 	ld	d, (hl)
      0015B1 1A                    5254 	ld	a, (de)
                                   5255 ;	spillPairReg hl
                                   5256 ;	spillPairReg hl
      0015B2 CB 7F                 5257 	bit	7,a
      0015B4 20 70                 5258 	jr	NZ, 00162$
                                   5259 ;src/main.c:511: set_sprite_prop(10+(i<<1), 0);
      0015B6 F8 0A                 5260 	ldhl	sp,	#10
                                   5261 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015B8 6E                    5262 	ld	l, (hl)
                                   5263 ;	spillPairReg hl
                                   5264 ;	spillPairReg hl
      0015B9 26 00                 5265 	ld	h, #0x00
                                   5266 ;	spillPairReg hl
                                   5267 ;	spillPairReg hl
      0015BB 29                    5268 	add	hl, hl
      0015BC 29                    5269 	add	hl, hl
      0015BD 11r00r00              5270 	ld	de, #_shadow_OAM
      0015C0 19                    5271 	add	hl, de
      0015C1 23                    5272 	inc	hl
      0015C2 23                    5273 	inc	hl
      0015C3 23                    5274 	inc	hl
      0015C4 36 00                 5275 	ld	(hl), #0x00
                                   5276 ;src/main.c:512: set_sprite_prop(10+(i<<1)+1, 0);
      0015C6 F8 0E                 5277 	ldhl	sp,	#14
      0015C8 7E                    5278 	ld	a, (hl)
      0015C9 C6 0B                 5279 	add	a, #0x0b
      0015CB F8 0B                 5280 	ldhl	sp,	#11
      0015CD 77                    5281 	ld	(hl), a
                                   5282 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015CE 6E                    5283 	ld	l, (hl)
                                   5284 ;	spillPairReg hl
                                   5285 ;	spillPairReg hl
      0015CF 26 00                 5286 	ld	h, #0x00
                                   5287 ;	spillPairReg hl
                                   5288 ;	spillPairReg hl
      0015D1 29                    5289 	add	hl, hl
      0015D2 29                    5290 	add	hl, hl
      0015D3 11r00r00              5291 	ld	de, #_shadow_OAM
      0015D6 19                    5292 	add	hl, de
      0015D7 23                    5293 	inc	hl
      0015D8 23                    5294 	inc	hl
      0015D9 23                    5295 	inc	hl
      0015DA 36 00                 5296 	ld	(hl), #0x00
                                   5297 ;src/main.c:513: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      0015DC 21 02 00              5298 	ld	hl, #0x0002
      0015DF 09                    5299 	add	hl, bc
      0015E0 E5                    5300 	push	hl
      0015E1 7D                    5301 	ld	a, l
      0015E2 F8 0E                 5302 	ldhl	sp,	#14
      0015E4 77                    5303 	ld	(hl), a
      0015E5 E1                    5304 	pop	hl
      0015E6 7C                    5305 	ld	a, h
      0015E7 F8 0D                 5306 	ldhl	sp,	#13
      0015E9 32                    5307 	ld	(hl-), a
      0015EA 2A                    5308 	ld	a, (hl+)
      0015EB 5F                    5309 	ld	e, a
      0015EC 2A                    5310 	ld	a, (hl+)
      0015ED 57                    5311 	ld	d, a
      0015EE 1A                    5312 	ld	a, (de)
      0015EF C6 08                 5313 	add	a, #0x08
      0015F1 5F                    5314 	ld	e, a
      0015F2 0A                    5315 	ld	a, (bc)
      0015F3 77                    5316 	ld	(hl), a
      0015F4 F8 0A                 5317 	ldhl	sp,	#10
      0015F6 56                    5318 	ld	d, (hl)
                                   5319 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0015F7 6A                    5320 	ld	l, d
                                   5321 ;	spillPairReg hl
                                   5322 ;	spillPairReg hl
      0015F8 26 00                 5323 	ld	h, #0x00
                                   5324 ;	spillPairReg hl
                                   5325 ;	spillPairReg hl
      0015FA 29                    5326 	add	hl, hl
      0015FB 29                    5327 	add	hl, hl
      0015FC D5                    5328 	push	de
      0015FD 11r00r00              5329 	ld	de, #_shadow_OAM
      001600 19                    5330 	add	hl, de
      001601 D1                    5331 	pop	de
                                   5332 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001602 7B                    5333 	ld	a, e
      001603 22                    5334 	ld	(hl+), a
      001604 5D                    5335 	ld	e, l
      001605 54                    5336 	ld	d, h
      001606 F8 0E                 5337 	ldhl	sp,	#14
                                   5338 ;src/main.c:514: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001608 3A                    5339 	ld	a, (hl-)
      001609 2B                    5340 	dec	hl
      00160A 12                    5341 	ld	(de), a
      00160B 2A                    5342 	ld	a, (hl+)
      00160C 5F                    5343 	ld	e, a
      00160D 3A                    5344 	ld	a, (hl-)
      00160E 2B                    5345 	dec	hl
      00160F 57                    5346 	ld	d, a
      001610 1A                    5347 	ld	a, (de)
      001611 C6 08                 5348 	add	a, #0x08
      001613 57                    5349 	ld	d, a
      001614 0A                    5350 	ld	a, (bc)
      001615 C6 08                 5351 	add	a, #0x08
      001617 5F                    5352 	ld	e, a
                                   5353 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001618 6E                    5354 	ld	l, (hl)
                                   5355 ;	spillPairReg hl
                                   5356 ;	spillPairReg hl
      001619 26 00                 5357 	ld	h, #0x00
                                   5358 ;	spillPairReg hl
                                   5359 ;	spillPairReg hl
      00161B 29                    5360 	add	hl, hl
      00161C 29                    5361 	add	hl, hl
      00161D 01r00r00              5362 	ld	bc, #_shadow_OAM
      001620 09                    5363 	add	hl, bc
                                   5364 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001621 7A                    5365 	ld	a, d
      001622 22                    5366 	ld	(hl+), a
      001623 73                    5367 	ld	(hl), e
                                   5368 ;src/main.c:514: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001624 18 70                 5369 	jr	00199$
      001626                       5370 00162$:
                                   5371 ;src/main.c:517: set_sprite_prop(10+(i<<1), S_FLIPX);
      001626 F8 0A                 5372 	ldhl	sp,	#10
      001628 5E                    5373 	ld	e, (hl)
                                   5374 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001629 26 00                 5375 	ld	h, #0x00
                                   5376 ;	spillPairReg hl
                                   5377 ;	spillPairReg hl
      00162B 6B                    5378 	ld	l, e
      00162C 29                    5379 	add	hl, hl
      00162D 29                    5380 	add	hl, hl
      00162E 11r00r00              5381 	ld	de, #_shadow_OAM
      001631 19                    5382 	add	hl, de
      001632 23                    5383 	inc	hl
      001633 23                    5384 	inc	hl
      001634 23                    5385 	inc	hl
      001635 36 20                 5386 	ld	(hl), #0x20
                                   5387 ;src/main.c:518: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001637 F8 0E                 5388 	ldhl	sp,	#14
      001639 7E                    5389 	ld	a, (hl)
      00163A C6 0B                 5390 	add	a, #0x0b
      00163C F8 0B                 5391 	ldhl	sp,	#11
      00163E 77                    5392 	ld	(hl), a
      00163F 5E                    5393 	ld	e, (hl)
                                   5394 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001640 26 00                 5395 	ld	h, #0x00
                                   5396 ;	spillPairReg hl
                                   5397 ;	spillPairReg hl
      001642 6B                    5398 	ld	l, e
      001643 29                    5399 	add	hl, hl
      001644 29                    5400 	add	hl, hl
      001645 11r00r00              5401 	ld	de, #_shadow_OAM
      001648 19                    5402 	add	hl, de
      001649 23                    5403 	inc	hl
      00164A 23                    5404 	inc	hl
      00164B 23                    5405 	inc	hl
      00164C 36 20                 5406 	ld	(hl), #0x20
                                   5407 ;src/main.c:519: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      00164E 21 02 00              5408 	ld	hl, #0x0002
      001651 09                    5409 	add	hl, bc
      001652 E5                    5410 	push	hl
      001653 7D                    5411 	ld	a, l
      001654 F8 0E                 5412 	ldhl	sp,	#14
      001656 77                    5413 	ld	(hl), a
      001657 E1                    5414 	pop	hl
      001658 7C                    5415 	ld	a, h
      001659 F8 0D                 5416 	ldhl	sp,	#13
      00165B 32                    5417 	ld	(hl-), a
      00165C 2A                    5418 	ld	a, (hl+)
      00165D 5F                    5419 	ld	e, a
      00165E 2A                    5420 	ld	a, (hl+)
      00165F 57                    5421 	ld	d, a
      001660 1A                    5422 	ld	a, (de)
      001661 C6 08                 5423 	add	a, #0x08
      001663 5F                    5424 	ld	e, a
      001664 0A                    5425 	ld	a, (bc)
      001665 C6 08                 5426 	add	a, #0x08
      001667 77                    5427 	ld	(hl), a
      001668 F8 0A                 5428 	ldhl	sp,	#10
      00166A 56                    5429 	ld	d, (hl)
                                   5430 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00166B 6A                    5431 	ld	l, d
                                   5432 ;	spillPairReg hl
                                   5433 ;	spillPairReg hl
      00166C 26 00                 5434 	ld	h, #0x00
                                   5435 ;	spillPairReg hl
                                   5436 ;	spillPairReg hl
      00166E 29                    5437 	add	hl, hl
      00166F 29                    5438 	add	hl, hl
      001670 D5                    5439 	push	de
      001671 11r00r00              5440 	ld	de, #_shadow_OAM
      001674 19                    5441 	add	hl, de
      001675 D1                    5442 	pop	de
                                   5443 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001676 7B                    5444 	ld	a, e
      001677 22                    5445 	ld	(hl+), a
      001678 5D                    5446 	ld	e, l
      001679 54                    5447 	ld	d, h
      00167A F8 0E                 5448 	ldhl	sp,	#14
                                   5449 ;src/main.c:520: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      00167C 3A                    5450 	ld	a, (hl-)
      00167D 2B                    5451 	dec	hl
      00167E 12                    5452 	ld	(de), a
      00167F 2A                    5453 	ld	a, (hl+)
      001680 5F                    5454 	ld	e, a
      001681 3A                    5455 	ld	a, (hl-)
      001682 2B                    5456 	dec	hl
      001683 57                    5457 	ld	d, a
      001684 1A                    5458 	ld	a, (de)
      001685 C6 08                 5459 	add	a, #0x08
      001687 57                    5460 	ld	d, a
      001688 0A                    5461 	ld	a, (bc)
      001689 5F                    5462 	ld	e, a
                                   5463 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00168A 6E                    5464 	ld	l, (hl)
                                   5465 ;	spillPairReg hl
                                   5466 ;	spillPairReg hl
      00168B 26 00                 5467 	ld	h, #0x00
                                   5468 ;	spillPairReg hl
                                   5469 ;	spillPairReg hl
      00168D 29                    5470 	add	hl, hl
      00168E 29                    5471 	add	hl, hl
      00168F 01r00r00              5472 	ld	bc, #_shadow_OAM
      001692 09                    5473 	add	hl, bc
                                   5474 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001693 7A                    5475 	ld	a, d
      001694 22                    5476 	ld	(hl+), a
      001695 73                    5477 	ld	(hl), e
                                   5478 ;src/main.c:520: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      001696                       5479 00199$:
                                   5480 ;src/main.c:473: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001696 F8 0F                 5481 	ldhl	sp,	#15
      001698 34                    5482 	inc	(hl)
      001699 C3rF1r12              5483 	jp	00198$
      00169C                       5484 00200$:
                                   5485 ;src/main.c:526: }
      00169C E8 10                 5486 	add	sp, #16
      00169E C9                    5487 	ret
                                   5488 ;src/main.c:531: void move() {
                                   5489 ;	---------------------------------
                                   5490 ; Function move
                                   5491 ; ---------------------------------
      00169F                       5492 _move::
      00169F E8 F8                 5493 	add	sp, #-8
                                   5494 ;src/main.c:535: if (joydata & J_A) {
      0016A1 FArDCr00              5495 	ld	a, (#_joydata)
      0016A4 CB 67                 5496 	bit	4, a
      0016A6 28 16                 5497 	jr	Z, 00102$
                                   5498 ;src/main.c:536: xSpeed += xDir + xDir + xDir;
      0016A8 21r92r00              5499 	ld	hl, #_xDir
      0016AB 7E                    5500 	ld	a, (hl)
      0016AC 87                    5501 	add	a, a
      0016AD 86                    5502 	add	a, (hl)
      0016AE 21r94r00              5503 	ld	hl, #_xSpeed
      0016B1 86                    5504 	add	a, (hl)
      0016B2 77                    5505 	ld	(hl), a
                                   5506 ;src/main.c:537: ySpeed += yDir + yDir + yDir;
      0016B3 21r93r00              5507 	ld	hl, #_yDir
      0016B6 7E                    5508 	ld	a, (hl)
      0016B7 87                    5509 	add	a, a
      0016B8 86                    5510 	add	a, (hl)
      0016B9 21r95r00              5511 	ld	hl, #_ySpeed
      0016BC 86                    5512 	add	a, (hl)
      0016BD 77                    5513 	ld	(hl), a
      0016BE                       5514 00102$:
                                   5515 ;src/main.c:541: xSpeed = clamp(xSpeed, -100, 100);
      0016BE 21r94r00              5516 	ld	hl, #_xSpeed
      0016C1 4E                    5517 	ld	c, (hl)
                                   5518 ;src/main.c:299: return (value < min) ? min : (value > max) ? max : value;
      0016C2 79                    5519 	ld	a, c
      0016C3 EE 80                 5520 	xor	a, #0x80
      0016C5 D6 1C                 5521 	sub	a, #0x1c
      0016C7 30 04                 5522 	jr	NC, 00165$
      0016C9 0E 9C                 5523 	ld	c, #0x9c
      0016CB 18 19                 5524 	jr	00166$
      0016CD                       5525 00165$:
      0016CD 59                    5526 	ld	e, c
      0016CE 3E 64                 5527 	ld	a,#0x64
      0016D0 57                    5528 	ld	d,a
      0016D1 91                    5529 	sub	a, c
      0016D2 CB 7B                 5530 	bit	7, e
      0016D4 28 07                 5531 	jr	Z, 00342$
      0016D6 CB 7A                 5532 	bit	7, d
      0016D8 20 08                 5533 	jr	NZ, 00343$
      0016DA BF                    5534 	cp	a, a
      0016DB 18 05                 5535 	jr	00343$
      0016DD                       5536 00342$:
      0016DD CB 7A                 5537 	bit	7, d
      0016DF 28 01                 5538 	jr	Z, 00343$
      0016E1 37                    5539 	scf
      0016E2                       5540 00343$:
      0016E2 30 02                 5541 	jr	NC, 00167$
      0016E4 0E 64                 5542 	ld	c, #0x64
      0016E6                       5543 00167$:
      0016E6                       5544 00166$:
      0016E6 21r94r00              5545 	ld	hl, #_xSpeed
      0016E9 71                    5546 	ld	(hl), c
                                   5547 ;src/main.c:542: ySpeed = clamp(ySpeed, -100, 100);
      0016EA 21r95r00              5548 	ld	hl, #_ySpeed
      0016ED 4E                    5549 	ld	c, (hl)
                                   5550 ;src/main.c:299: return (value < min) ? min : (value > max) ? max : value;
      0016EE 79                    5551 	ld	a, c
      0016EF EE 80                 5552 	xor	a, #0x80
      0016F1 D6 1C                 5553 	sub	a, #0x1c
      0016F3 30 04                 5554 	jr	NC, 00169$
      0016F5 0E 9C                 5555 	ld	c, #0x9c
      0016F7 18 19                 5556 	jr	00170$
      0016F9                       5557 00169$:
      0016F9 59                    5558 	ld	e, c
      0016FA 3E 64                 5559 	ld	a,#0x64
      0016FC 57                    5560 	ld	d,a
      0016FD 91                    5561 	sub	a, c
      0016FE CB 7B                 5562 	bit	7, e
      001700 28 07                 5563 	jr	Z, 00344$
      001702 CB 7A                 5564 	bit	7, d
      001704 20 08                 5565 	jr	NZ, 00345$
      001706 BF                    5566 	cp	a, a
      001707 18 05                 5567 	jr	00345$
      001709                       5568 00344$:
      001709 CB 7A                 5569 	bit	7, d
      00170B 28 01                 5570 	jr	Z, 00345$
      00170D 37                    5571 	scf
      00170E                       5572 00345$:
      00170E 30 02                 5573 	jr	NC, 00171$
      001710 0E 64                 5574 	ld	c, #0x64
      001712                       5575 00171$:
      001712                       5576 00170$:
      001712 21r95r00              5577 	ld	hl, #_ySpeed
      001715 71                    5578 	ld	(hl), c
                                   5579 ;src/main.c:544: xOverflow = 0;
      001716 AF                    5580 	xor	a, a
      001717 21rA0r00              5581 	ld	hl, #_xOverflow
      00171A 22                    5582 	ld	(hl+), a
      00171B 77                    5583 	ld	(hl), a
                                   5584 ;src/main.c:545: yOverflow = 0;
      00171C AF                    5585 	xor	a, a
      00171D 21rA2r00              5586 	ld	hl, #_yOverflow
      001720 22                    5587 	ld	(hl+), a
      001721 77                    5588 	ld	(hl), a
                                   5589 ;src/main.c:550: uint8_t xCollisionPoint = playerDrawX; 
      001722 21r9Ar00              5590 	ld	hl, #_playerDrawX
      001725 4E                    5591 	ld	c, (hl)
                                   5592 ;src/main.c:553: xCollisionPoint = playerDrawX +8; //right edge
      001726 46                    5593 	ld	b, (hl)
                                   5594 ;src/main.c:552: if (xSpeed > 0) {
      001727 21r94r00              5595 	ld	hl, #_xSpeed
      00172A 5E                    5596 	ld	e, (hl)
      00172B AF                    5597 	xor	a, a
      00172C 57                    5598 	ld	d, a
      00172D 96                    5599 	sub	a, (hl)
      00172E CB 7B                 5600 	bit	7, e
      001730 28 07                 5601 	jr	Z, 00346$
      001732 CB 7A                 5602 	bit	7, d
      001734 20 08                 5603 	jr	NZ, 00347$
      001736 BF                    5604 	cp	a, a
      001737 18 05                 5605 	jr	00347$
      001739                       5606 00346$:
      001739 CB 7A                 5607 	bit	7, d
      00173B 28 01                 5608 	jr	Z, 00347$
      00173D 37                    5609 	scf
      00173E                       5610 00347$:
      00173E 30 04                 5611 	jr	NC, 00104$
                                   5612 ;src/main.c:553: xCollisionPoint = playerDrawX +8; //right edge
      001740 78                    5613 	ld	a, b
      001741 C6 08                 5614 	add	a, #0x08
      001743 4F                    5615 	ld	c, a
      001744                       5616 00104$:
                                   5617 ;src/main.c:555: if (xSpeed < 0) {
      001744 FAr94r00              5618 	ld	a, (#_xSpeed)
      001747 CB 7F                 5619 	bit	7, a
      001749 28 04                 5620 	jr	Z, 00106$
                                   5621 ;src/main.c:556: xCollisionPoint = playerDrawX -8; //left edge
      00174B 78                    5622 	ld	a, b
      00174C C6 F8                 5623 	add	a, #0xf8
      00174E 4F                    5624 	ld	c, a
      00174F                       5625 00106$:
                                   5626 ;src/main.c:560: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      00174F 06 00                 5627 	ld	b, #0x00
      001751 79                    5628 	ld	a, c
      001752 21r9Cr00              5629 	ld	hl, #_bgX
      001755 86                    5630 	add	a, (hl)
      001756 23                    5631 	inc	hl
      001757 4F                    5632 	ld	c, a
      001758 78                    5633 	ld	a, b
      001759 8E                    5634 	adc	a, (hl)
      00175A 47                    5635 	ld	b, a
      00175B CB 28                 5636 	sra	b
      00175D CB 19                 5637 	rr	c
      00175F CB 28                 5638 	sra	b
      001761 CB 19                 5639 	rr	c
      001763 CB 28                 5640 	sra	b
      001765 CB 19                 5641 	rr	c
      001767 11 20 00              5642 	ld	de, #0x0020
      00176A D5                    5643 	push	de
      00176B C5                    5644 	push	bc
      00176C CDr00r00              5645 	call	__modsint
      00176F E8 04                 5646 	add	sp, #4
                                   5647 ;src/main.c:564: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      001771 21r9Br00              5648 	ld	hl, #_playerDrawY
      001774 4E                    5649 	ld	c, (hl)
      001775 06 00                 5650 	ld	b, #0x00
      001777 79                    5651 	ld	a, c
      001778 21r9Er00              5652 	ld	hl, #_bgY
      00177B 86                    5653 	add	a, (hl)
      00177C 23                    5654 	inc	hl
      00177D 4F                    5655 	ld	c, a
      00177E 78                    5656 	ld	a, b
      00177F 8E                    5657 	adc	a, (hl)
      001780 47                    5658 	ld	b, a
      001781 CB 28                 5659 	sra	b
      001783 CB 19                 5660 	rr	c
      001785 CB 28                 5661 	sra	b
      001787 CB 19                 5662 	rr	c
      001789 CB 28                 5663 	sra	b
      00178B CB 19                 5664 	rr	c
      00178D D5                    5665 	push	de
      00178E 21 20 00              5666 	ld	hl, #0x0020
      001791 E5                    5667 	push	hl
      001792 C5                    5668 	push	bc
      001793 CDr00r00              5669 	call	__modsint
      001796 E8 04                 5670 	add	sp, #4
      001798 6B                    5671 	ld	l, e
                                   5672 ;	spillPairReg hl
                                   5673 ;	spillPairReg hl
                                   5674 ;	spillPairReg hl
                                   5675 ;	spillPairReg hl
      001799 D1                    5676 	pop	de
                                   5677 ;src/main.c:567: uint16_t ind = 32*bgindY + bgindX;
      00179A 26 00                 5678 	ld	h, #0x00
                                   5679 ;	spillPairReg hl
                                   5680 ;	spillPairReg hl
      00179C 29                    5681 	add	hl, hl
      00179D 29                    5682 	add	hl, hl
      00179E 29                    5683 	add	hl, hl
      00179F 29                    5684 	add	hl, hl
      0017A0 29                    5685 	add	hl, hl
      0017A1 19                    5686 	add	hl, de
      0017A2 5D                    5687 	ld	e, l
      0017A3 54                    5688 	ld	d, h
                                   5689 ;src/main.c:568: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      0017A4 0E 01                 5690 	ld	c, #0x01
                                   5691 ;src/main.c:569: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017A6 21r87r00              5692 	ld	hl, #_background1
      0017A9 19                    5693 	add	hl, de
      0017AA 46                    5694 	ld	b, (hl)
      0017AB 1E 00                 5695 	ld	e, #0x00
      0017AD                       5696 00158$:
      0017AD FAr48r08              5697 	ld	a, (#_BLANKSIZE)
      0017B0 F8 02                 5698 	ldhl	sp,	#2
      0017B2 77                    5699 	ld	(hl), a
      0017B3 7B                    5700 	ld	a, e
      0017B4 96                    5701 	sub	a, (hl)
      0017B5 30 11                 5702 	jr	NC, 00109$
                                   5703 ;src/main.c:570: if (background1[ind] == BLANK[i] ) {
      0017B7 21r49r08              5704 	ld	hl, #_BLANK
      0017BA 16 00                 5705 	ld	d, #0x00
      0017BC 19                    5706 	add	hl, de
      0017BD 56                    5707 	ld	d, (hl)
      0017BE 78                    5708 	ld	a, b
                                   5709 ;src/main.c:571: result = 0;
      0017BF 92                    5710 	sub	a,d
      0017C0 20 03                 5711 	jr	NZ, 00159$
      0017C2 4F                    5712 	ld	c,a
                                   5713 ;src/main.c:572: break;
      0017C3 18 03                 5714 	jr	00109$
      0017C5                       5715 00159$:
                                   5716 ;src/main.c:569: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017C5 1C                    5717 	inc	e
      0017C6 18 E5                 5718 	jr	00158$
      0017C8                       5719 00109$:
                                   5720 ;src/main.c:576: if (result == 0) {
      0017C8 79                    5721 	ld	a, c
      0017C9 B7                    5722 	or	a, a
      0017CA C2r98r18              5723 	jp	NZ, 00114$
                                   5724 ;src/main.c:577: playerX+=xSpeed;
      0017CD FAr94r00              5725 	ld	a, (#_xSpeed)
      0017D0 4F                    5726 	ld	c, a
      0017D1 07                    5727 	rlca
      0017D2 9F                    5728 	sbc	a, a
      0017D3 47                    5729 	ld	b, a
      0017D4 21r96r00              5730 	ld	hl, #_playerX
      0017D7 6E                    5731 	ld	l, (hl)
                                   5732 ;	spillPairReg hl
                                   5733 ;	spillPairReg hl
      0017D8 FAr97r00              5734 	ld	a, (_playerX + 1)
      0017DB 67                    5735 	ld	h, a
                                   5736 ;	spillPairReg hl
                                   5737 ;	spillPairReg hl
      0017DC 09                    5738 	add	hl, bc
      0017DD 4D                    5739 	ld	c, l
      0017DE 44                    5740 	ld	b, h
      0017DF 21r96r00              5741 	ld	hl, #_playerX
      0017E2 79                    5742 	ld	a, c
      0017E3 22                    5743 	ld	(hl+), a
                                   5744 ;src/main.c:579: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      0017E4 78                    5745 	ld	a, b
      0017E5 32                    5746 	ld	(hl-), a
      0017E6 2A                    5747 	ld	a, (hl+)
      0017E7 4F                    5748 	ld	c, a
      0017E8 46                    5749 	ld	b, (hl)
      0017E9 79                    5750 	ld	a, c
      0017EA D6 80                 5751 	sub	a, #0x80
      0017EC 78                    5752 	ld	a, b
      0017ED DE 08                 5753 	sbc	a, #0x08
      0017EF 30 05                 5754 	jr	NC, 00173$
      0017F1 01 80 08              5755 	ld	bc, #0x0880
      0017F4 18 0B                 5756 	jr	00174$
      0017F6                       5757 00173$:
      0017F6 3E 80                 5758 	ld	a, #0x80
      0017F8 B9                    5759 	cp	a, c
      0017F9 3E 0B                 5760 	ld	a, #0x0b
      0017FB 98                    5761 	sbc	a, b
      0017FC 30 03                 5762 	jr	NC, 00175$
      0017FE 01 80 0B              5763 	ld	bc, #0x0b80
      001801                       5764 00175$:
      001801                       5765 00174$:
      001801 59                    5766 	ld	e,c
      001802 50                    5767 	ld	d,b
                                   5768 ;src/main.c:581: xOverflow = (playerX - limitedPlayerX);
      001803 FAr96r00              5769 	ld	a, (#_playerX)
      001806 93                    5770 	sub	a, e
      001807 EArA0r00              5771 	ld	(#_xOverflow),a
      00180A FAr97r00              5772 	ld	a, (#_playerX + 1)
      00180D 9A                    5773 	sbc	a, d
      00180E 21rA1r00              5774 	ld	hl, #_xOverflow + 1
                                   5775 ;src/main.c:582: if (xOverflow >= 0) {
      001811 32                    5776 	ld	(hl-), a
      001812 6E                    5777 	ld	l, (hl)
                                   5778 ;	spillPairReg hl
                                   5779 ;	spillPairReg hl
      001813 FArA1r00              5780 	ld	a, (_xOverflow + 1)
                                   5781 ;	spillPairReg hl
                                   5782 ;	spillPairReg hl
      001816 CB 7F                 5783 	bit	7,a
      001818 20 22                 5784 	jr	NZ, 00111$
                                   5785 ;src/main.c:583: xOverflow = xOverflow >> 5;
      00181A 21rA1r00              5786 	ld	hl, #_xOverflow + 1
      00181D CB 2E                 5787 	sra	(hl)
      00181F 2B                    5788 	dec	hl
      001820 CB 1E                 5789 	rr	(hl)
      001822 23                    5790 	inc	hl
      001823 CB 2E                 5791 	sra	(hl)
      001825 2B                    5792 	dec	hl
      001826 CB 1E                 5793 	rr	(hl)
      001828 23                    5794 	inc	hl
      001829 CB 2E                 5795 	sra	(hl)
      00182B 2B                    5796 	dec	hl
      00182C CB 1E                 5797 	rr	(hl)
      00182E 23                    5798 	inc	hl
      00182F CB 2E                 5799 	sra	(hl)
      001831 2B                    5800 	dec	hl
      001832 CB 1E                 5801 	rr	(hl)
      001834 23                    5802 	inc	hl
      001835 CB 2E                 5803 	sra	(hl)
      001837 2B                    5804 	dec	hl
      001838 CB 1E                 5805 	rr	(hl)
      00183A 18 25                 5806 	jr	00112$
      00183C                       5807 00111$:
                                   5808 ;src/main.c:586: xOverflow = -((-xOverflow) >> 5);
      00183C AF                    5809 	xor	a, a
      00183D 21rA0r00              5810 	ld	hl, #_xOverflow
      001840 96                    5811 	sub	a, (hl)
      001841 23                    5812 	inc	hl
      001842 5F                    5813 	ld	e, a
      001843 9F                    5814 	sbc	a, a
      001844 96                    5815 	sub	a, (hl)
      001845 2B                    5816 	dec	hl
      001846 57                    5817 	ld	d, a
      001847 CB 2A                 5818 	sra	d
      001849 CB 1B                 5819 	rr	e
      00184B CB 2A                 5820 	sra	d
      00184D CB 1B                 5821 	rr	e
      00184F CB 2A                 5822 	sra	d
      001851 CB 1B                 5823 	rr	e
      001853 CB 2A                 5824 	sra	d
      001855 CB 1B                 5825 	rr	e
      001857 CB 2A                 5826 	sra	d
      001859 CB 1B                 5827 	rr	e
      00185B AF                    5828 	xor	a, a
      00185C 93                    5829 	sub	a, e
      00185D 22                    5830 	ld	(hl+), a
      00185E 9F                    5831 	sbc	a, a
      00185F 92                    5832 	sub	a, d
      001860 77                    5833 	ld	(hl), a
      001861                       5834 00112$:
                                   5835 ;src/main.c:588: bgX += xOverflow;
      001861 FAr9Cr00              5836 	ld	a, (#_bgX)
      001864 21rA0r00              5837 	ld	hl, #_xOverflow
      001867 86                    5838 	add	a, (hl)
      001868 21r9Cr00              5839 	ld	hl, #_bgX
      00186B 22                    5840 	ld	(hl+), a
      00186C 7E                    5841 	ld	a, (hl)
      00186D 21rA1r00              5842 	ld	hl, #_xOverflow + 1
      001870 8E                    5843 	adc	a, (hl)
      001871 EAr9Dr00              5844 	ld	(#_bgX + 1),a
                                   5845 ;src/main.c:589: playerX = limitedPlayerX;
      001874 21r96r00              5846 	ld	hl, #_playerX
      001877 79                    5847 	ld	a, c
      001878 22                    5848 	ld	(hl+), a
                                   5849 ;src/main.c:590: playerDrawX=playerX >> 5;
      001879 78                    5850 	ld	a, b
      00187A 32                    5851 	ld	(hl-), a
      00187B 2A                    5852 	ld	a, (hl+)
      00187C 4F                    5853 	ld	c, a
      00187D 46                    5854 	ld	b, (hl)
      00187E CB 38                 5855 	srl	b
      001880 CB 19                 5856 	rr	c
      001882 CB 38                 5857 	srl	b
      001884 CB 19                 5858 	rr	c
      001886 CB 38                 5859 	srl	b
      001888 CB 19                 5860 	rr	c
      00188A CB 38                 5861 	srl	b
      00188C CB 19                 5862 	rr	c
      00188E CB 38                 5863 	srl	b
      001890 CB 19                 5864 	rr	c
      001892 21r9Ar00              5865 	ld	hl, #_playerDrawX
      001895 71                    5866 	ld	(hl), c
      001896 18 05                 5867 	jr	00115$
      001898                       5868 00114$:
                                   5869 ;src/main.c:598: xSpeed = 0;
      001898 21r94r00              5870 	ld	hl, #_xSpeed
      00189B 36 00                 5871 	ld	(hl), #0x00
      00189D                       5872 00115$:
                                   5873 ;src/main.c:606: uint8_t yCollisionPoint = playerDrawY; 
      00189D FAr9Br00              5874 	ld	a, (#_playerDrawY)
      0018A0 F8 07                 5875 	ldhl	sp,	#7
      0018A2 77                    5876 	ld	(hl), a
                                   5877 ;src/main.c:609: yCollisionPoint = playerDrawY +8; //bottom edge
      0018A3 21r9Br00              5878 	ld	hl, #_playerDrawY
      0018A6 4E                    5879 	ld	c, (hl)
                                   5880 ;src/main.c:608: if (ySpeed > 0) {
      0018A7 21r95r00              5881 	ld	hl, #_ySpeed
      0018AA 5E                    5882 	ld	e, (hl)
      0018AB AF                    5883 	xor	a, a
      0018AC 57                    5884 	ld	d, a
      0018AD 96                    5885 	sub	a, (hl)
      0018AE CB 7B                 5886 	bit	7, e
      0018B0 28 07                 5887 	jr	Z, 00350$
      0018B2 CB 7A                 5888 	bit	7, d
      0018B4 20 08                 5889 	jr	NZ, 00351$
      0018B6 BF                    5890 	cp	a, a
      0018B7 18 05                 5891 	jr	00351$
      0018B9                       5892 00350$:
      0018B9 CB 7A                 5893 	bit	7, d
      0018BB 28 01                 5894 	jr	Z, 00351$
      0018BD 37                    5895 	scf
      0018BE                       5896 00351$:
      0018BE 30 06                 5897 	jr	NC, 00117$
                                   5898 ;src/main.c:609: yCollisionPoint = playerDrawY +8; //bottom edge
      0018C0 79                    5899 	ld	a, c
      0018C1 C6 08                 5900 	add	a, #0x08
      0018C3 F8 07                 5901 	ldhl	sp,	#7
      0018C5 77                    5902 	ld	(hl), a
      0018C6                       5903 00117$:
                                   5904 ;src/main.c:611: if (ySpeed < 0) {
      0018C6 FAr95r00              5905 	ld	a, (#_ySpeed)
      0018C9 CB 7F                 5906 	bit	7, a
      0018CB 28 06                 5907 	jr	Z, 00119$
                                   5908 ;src/main.c:612: yCollisionPoint = playerDrawY -8; //top edge, 
      0018CD 79                    5909 	ld	a, c
      0018CE C6 F8                 5910 	add	a, #0xf8
      0018D0 F8 07                 5911 	ldhl	sp,	#7
      0018D2 77                    5912 	ld	(hl), a
      0018D3                       5913 00119$:
                                   5914 ;src/main.c:616: bgindX = ((playerDrawX + bgX) >> 3)%32;
      0018D3 FAr9Ar00              5915 	ld	a, (#_playerDrawX)
      0018D6 0E 00                 5916 	ld	c, #0x00
      0018D8 F8 03                 5917 	ldhl	sp,	#3
      0018DA 22                    5918 	ld	(hl+), a
      0018DB 79                    5919 	ld	a, c
      0018DC 32                    5920 	ld	(hl-), a
      0018DD 2A                    5921 	ld	a, (hl+)
      0018DE 5F                    5922 	ld	e, a
      0018DF 56                    5923 	ld	d, (hl)
      0018E0 21r9Cr00              5924 	ld	hl, #_bgX
      0018E3 2A                    5925 	ld	a,	(hl+)
      0018E4 66                    5926 	ld	h, (hl)
      0018E5 6F                    5927 	ld	l, a
      0018E6 19                    5928 	add	hl, de
      0018E7 E5                    5929 	push	hl
      0018E8 7D                    5930 	ld	a, l
      0018E9 F8 07                 5931 	ldhl	sp,	#7
      0018EB 77                    5932 	ld	(hl), a
      0018EC E1                    5933 	pop	hl
      0018ED 7C                    5934 	ld	a, h
      0018EE F8 06                 5935 	ldhl	sp,	#6
      0018F0 77                    5936 	ld	(hl), a
      0018F1 CB 2E                 5937 	sra	(hl)
      0018F3 2B                    5938 	dec	hl
      0018F4 CB 1E                 5939 	rr	(hl)
      0018F6 23                    5940 	inc	hl
      0018F7 CB 2E                 5941 	sra	(hl)
      0018F9 2B                    5942 	dec	hl
      0018FA CB 1E                 5943 	rr	(hl)
      0018FC 23                    5944 	inc	hl
      0018FD CB 2E                 5945 	sra	(hl)
      0018FF 2B                    5946 	dec	hl
      001900 CB 1E                 5947 	rr	(hl)
      001902 11 20 00              5948 	ld	de, #0x0020
      001905 D5                    5949 	push	de
      001906 2A                    5950 	ld	a, (hl+)
      001907 5F                    5951 	ld	e, a
      001908 56                    5952 	ld	d, (hl)
      001909 D5                    5953 	push	de
      00190A CDr00r00              5954 	call	__modsint
      00190D E8 04                 5955 	add	sp, #4
      00190F F8 05                 5956 	ldhl	sp,	#5
      001911 7B                    5957 	ld	a, e
      001912 22                    5958 	ld	(hl+), a
      001913 72                    5959 	ld	(hl), d
      001914 F8 05                 5960 	ldhl	sp,	#5
      001916 7E                    5961 	ld	a, (hl)
      001917 F8 00                 5962 	ldhl	sp,	#0
      001919 77                    5963 	ld	(hl), a
      00191A F8 06                 5964 	ldhl	sp,	#6
      00191C 7E                    5965 	ld	a, (hl)
      00191D F8 01                 5966 	ldhl	sp,	#1
      00191F 77                    5967 	ld	(hl), a
                                   5968 ;src/main.c:619: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001920 F8 07                 5969 	ldhl	sp,	#7
      001922 3A                    5970 	ld	a, (hl-)
      001923 22                    5971 	ld	(hl+), a
      001924 AF                    5972 	xor	a, a
      001925 32                    5973 	ld	(hl-), a
      001926 3A                    5974 	ld	a, (hl-)
      001927 2B                    5975 	dec	hl
      001928 77                    5976 	ld	(hl), a
      001929 F8 07                 5977 	ldhl	sp,	#7
      00192B 3A                    5978 	ld	a, (hl-)
      00192C 2B                    5979 	dec	hl
      00192D 32                    5980 	ld	(hl-), a
      00192E 2A                    5981 	ld	a, (hl+)
      00192F 5F                    5982 	ld	e, a
      001930 56                    5983 	ld	d, (hl)
      001931 21r9Er00              5984 	ld	hl, #_bgY
      001934 2A                    5985 	ld	a,	(hl+)
      001935 66                    5986 	ld	h, (hl)
      001936 6F                    5987 	ld	l, a
      001937 19                    5988 	add	hl, de
      001938 E5                    5989 	push	hl
      001939 7D                    5990 	ld	a, l
      00193A F8 08                 5991 	ldhl	sp,	#8
      00193C 77                    5992 	ld	(hl), a
      00193D E1                    5993 	pop	hl
      00193E 7C                    5994 	ld	a, h
      00193F F8 07                 5995 	ldhl	sp,	#7
      001941 77                    5996 	ld	(hl), a
      001942 CB 2E                 5997 	sra	(hl)
      001944 2B                    5998 	dec	hl
      001945 CB 1E                 5999 	rr	(hl)
      001947 23                    6000 	inc	hl
      001948 CB 2E                 6001 	sra	(hl)
      00194A 2B                    6002 	dec	hl
      00194B CB 1E                 6003 	rr	(hl)
      00194D 23                    6004 	inc	hl
      00194E CB 2E                 6005 	sra	(hl)
      001950 2B                    6006 	dec	hl
      001951 CB 1E                 6007 	rr	(hl)
      001953 11 20 00              6008 	ld	de, #0x0020
      001956 D5                    6009 	push	de
      001957 2A                    6010 	ld	a, (hl+)
      001958 5F                    6011 	ld	e, a
      001959 56                    6012 	ld	d, (hl)
      00195A D5                    6013 	push	de
      00195B CDr00r00              6014 	call	__modsint
      00195E E8 04                 6015 	add	sp, #4
      001960 F8 06                 6016 	ldhl	sp,	#6
      001962 7B                    6017 	ld	a, e
      001963 22                    6018 	ld	(hl+), a
      001964 72                    6019 	ld	(hl), d
      001965 F8 06                 6020 	ldhl	sp,	#6
      001967 2A                    6021 	ld	a, (hl+)
      001968 77                    6022 	ld	(hl), a
                                   6023 ;src/main.c:622: ind = 32*bgindY + bgindX;
      001969 3A                    6024 	ld	a, (hl-)
      00196A 22                    6025 	ld	(hl+), a
      00196B 36 00                 6026 	ld	(hl), #0x00
      00196D 3E 05                 6027 	ld	a, #0x05
      00196F                       6028 00352$:
      00196F F8 06                 6029 	ldhl	sp,	#6
      001971 CB 26                 6030 	sla	(hl)
      001973 23                    6031 	inc	hl
      001974 CB 16                 6032 	rl	(hl)
      001976 3D                    6033 	dec	a
      001977 20 F6                 6034 	jr	NZ, 00352$
      001979 2B                    6035 	dec	hl
      00197A 3A                    6036 	ld	a, (hl-)
      00197B 2B                    6037 	dec	hl
      00197C 77                    6038 	ld	(hl), a
      00197D F8 07                 6039 	ldhl	sp,	#7
      00197F 3A                    6040 	ld	a, (hl-)
      001980 2B                    6041 	dec	hl
      001981 77                    6042 	ld	(hl), a
      001982 D1                    6043 	pop	de
      001983 D5                    6044 	push	de
      001984 3A                    6045 	ld	a, (hl-)
      001985 6E                    6046 	ld	l, (hl)
      001986 67                    6047 	ld	h, a
      001987 19                    6048 	add	hl, de
      001988 E5                    6049 	push	hl
      001989 7D                    6050 	ld	a, l
      00198A F8 08                 6051 	ldhl	sp,	#8
      00198C 77                    6052 	ld	(hl), a
      00198D E1                    6053 	pop	hl
      00198E 7C                    6054 	ld	a, h
      00198F F8 07                 6055 	ldhl	sp,	#7
      001991 77                    6056 	ld	(hl), a
                                   6057 ;src/main.c:623: result = 1;
      001992 F8 03                 6058 	ldhl	sp,	#3
      001994 36 01                 6059 	ld	(hl), #0x01
                                   6060 ;src/main.c:624: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001996 F8 06                 6061 	ldhl	sp,#6
      001998 2A                    6062 	ld	a, (hl+)
      001999 5F                    6063 	ld	e, a
      00199A 56                    6064 	ld	d, (hl)
      00199B 21r87r00              6065 	ld	hl, #_background1
      00199E 19                    6066 	add	hl, de
      00199F 4D                    6067 	ld	c, l
      0019A0 44                    6068 	ld	b, h
      0019A1 0A                    6069 	ld	a, (bc)
      0019A2 F8 04                 6070 	ldhl	sp,	#4
      0019A4 77                    6071 	ld	(hl), a
      0019A5 F8 07                 6072 	ldhl	sp,	#7
      0019A7 36 00                 6073 	ld	(hl), #0x00
      0019A9                       6074 00161$:
      0019A9 F8 07                 6075 	ldhl	sp,	#7
      0019AB 7E                    6076 	ld	a, (hl)
      0019AC F8 02                 6077 	ldhl	sp,	#2
      0019AE 96                    6078 	sub	a, (hl)
      0019AF 30 29                 6079 	jr	NC, 00122$
                                   6080 ;src/main.c:625: if (background1[ind] == BLANK[j] ) {
      0019B1 11r49r08              6081 	ld	de, #_BLANK
      0019B4 F8 07                 6082 	ldhl	sp,	#7
      0019B6 6E                    6083 	ld	l, (hl)
      0019B7 26 00                 6084 	ld	h, #0x00
      0019B9 19                    6085 	add	hl, de
      0019BA E5                    6086 	push	hl
      0019BB 7D                    6087 	ld	a, l
      0019BC F8 07                 6088 	ldhl	sp,	#7
      0019BE 77                    6089 	ld	(hl), a
      0019BF E1                    6090 	pop	hl
      0019C0 7C                    6091 	ld	a, h
      0019C1 F8 06                 6092 	ldhl	sp,	#6
      0019C3 32                    6093 	ld	(hl-), a
      0019C4 2A                    6094 	ld	a, (hl+)
      0019C5 5F                    6095 	ld	e, a
      0019C6 3A                    6096 	ld	a, (hl-)
      0019C7 2B                    6097 	dec	hl
      0019C8 57                    6098 	ld	d, a
      0019C9 1A                    6099 	ld	a, (de)
      0019CA 4F                    6100 	ld	c, a
      0019CB 7E                    6101 	ld	a, (hl)
      0019CC 91                    6102 	sub	a, c
      0019CD 20 06                 6103 	jr	NZ, 00162$
                                   6104 ;src/main.c:626: result = 0;
      0019CF F8 03                 6105 	ldhl	sp,	#3
      0019D1 36 00                 6106 	ld	(hl), #0x00
                                   6107 ;src/main.c:627: break;
      0019D3 18 05                 6108 	jr	00122$
      0019D5                       6109 00162$:
                                   6110 ;src/main.c:624: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0019D5 F8 07                 6111 	ldhl	sp,	#7
      0019D7 34                    6112 	inc	(hl)
      0019D8 18 CF                 6113 	jr	00161$
      0019DA                       6114 00122$:
                                   6115 ;src/main.c:631: if (result == 0) {
      0019DA F8 03                 6116 	ldhl	sp,	#3
      0019DC 7E                    6117 	ld	a, (hl)
      0019DD B7                    6118 	or	a, a
      0019DE C2rA8r1A              6119 	jp	NZ, 00127$
                                   6120 ;src/main.c:632: playerY += ySpeed;
      0019E1 FAr95r00              6121 	ld	a, (#_ySpeed)
      0019E4 4F                    6122 	ld	c, a
      0019E5 07                    6123 	rlca
      0019E6 9F                    6124 	sbc	a, a
      0019E7 21r98r00              6125 	ld	hl, #_playerY
      0019EA 5E                    6126 	ld	e, (hl)
      0019EB 23                    6127 	inc	hl
      0019EC 56                    6128 	ld	d, (hl)
      0019ED 2B                    6129 	dec	hl
      0019EE 47                    6130 	ld	b, a
      0019EF 79                    6131 	ld	a, c
      0019F0 83                    6132 	add	a, e
      0019F1 4F                    6133 	ld	c, a
      0019F2 78                    6134 	ld	a, b
      0019F3 8A                    6135 	adc	a, d
      0019F4 47                    6136 	ld	b, a
      0019F5 79                    6137 	ld	a, c
      0019F6 22                    6138 	ld	(hl+), a
                                   6139 ;src/main.c:634: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      0019F7 78                    6140 	ld	a, b
      0019F8 32                    6141 	ld	(hl-), a
      0019F9 2A                    6142 	ld	a, (hl+)
      0019FA 5F                    6143 	ld	e, a
      0019FB 56                    6144 	ld	d, (hl)
      0019FC 7A                    6145 	ld	a, d
      0019FD D6 06                 6146 	sub	a, #0x06
      0019FF 30 05                 6147 	jr	NC, 00177$
      001A01 11 00 06              6148 	ld	de, #0x0600
      001A04 18 0B                 6149 	jr	00178$
      001A06                       6150 00177$:
      001A06 3E C0                 6151 	ld	a, #0xc0
      001A08 BB                    6152 	cp	a, e
      001A09 3E 09                 6153 	ld	a, #0x09
      001A0B 9A                    6154 	sbc	a, d
      001A0C 30 03                 6155 	jr	NC, 00179$
      001A0E 11 C0 09              6156 	ld	de, #0x09c0
      001A11                       6157 00179$:
      001A11                       6158 00178$:
      001A11 4B                    6159 	ld	c, e
      001A12 42                    6160 	ld	b, d
                                   6161 ;src/main.c:636: yOverflow = (playerY - limitedPlayerY);
      001A13 FAr98r00              6162 	ld	a, (#_playerY)
      001A16 93                    6163 	sub	a, e
      001A17 EArA2r00              6164 	ld	(#_yOverflow),a
      001A1A FAr99r00              6165 	ld	a, (#_playerY + 1)
      001A1D 9A                    6166 	sbc	a, d
      001A1E 21rA3r00              6167 	ld	hl, #_yOverflow + 1
                                   6168 ;src/main.c:637: if (yOverflow >= 0) {
      001A21 32                    6169 	ld	(hl-), a
      001A22 6E                    6170 	ld	l, (hl)
                                   6171 ;	spillPairReg hl
                                   6172 ;	spillPairReg hl
      001A23 FArA3r00              6173 	ld	a, (_yOverflow + 1)
                                   6174 ;	spillPairReg hl
                                   6175 ;	spillPairReg hl
      001A26 CB 7F                 6176 	bit	7,a
      001A28 20 22                 6177 	jr	NZ, 00124$
                                   6178 ;src/main.c:638: yOverflow = yOverflow >> 5;
      001A2A 21rA3r00              6179 	ld	hl, #_yOverflow + 1
      001A2D CB 2E                 6180 	sra	(hl)
      001A2F 2B                    6181 	dec	hl
      001A30 CB 1E                 6182 	rr	(hl)
      001A32 23                    6183 	inc	hl
      001A33 CB 2E                 6184 	sra	(hl)
      001A35 2B                    6185 	dec	hl
      001A36 CB 1E                 6186 	rr	(hl)
      001A38 23                    6187 	inc	hl
      001A39 CB 2E                 6188 	sra	(hl)
      001A3B 2B                    6189 	dec	hl
      001A3C CB 1E                 6190 	rr	(hl)
      001A3E 23                    6191 	inc	hl
      001A3F CB 2E                 6192 	sra	(hl)
      001A41 2B                    6193 	dec	hl
      001A42 CB 1E                 6194 	rr	(hl)
      001A44 23                    6195 	inc	hl
      001A45 CB 2E                 6196 	sra	(hl)
      001A47 2B                    6197 	dec	hl
      001A48 CB 1E                 6198 	rr	(hl)
      001A4A 18 25                 6199 	jr	00125$
      001A4C                       6200 00124$:
                                   6201 ;src/main.c:641: yOverflow = -((-yOverflow) >> 5);
      001A4C AF                    6202 	xor	a, a
      001A4D 21rA2r00              6203 	ld	hl, #_yOverflow
      001A50 96                    6204 	sub	a, (hl)
      001A51 23                    6205 	inc	hl
      001A52 5F                    6206 	ld	e, a
      001A53 9F                    6207 	sbc	a, a
      001A54 96                    6208 	sub	a, (hl)
      001A55 2B                    6209 	dec	hl
      001A56 57                    6210 	ld	d, a
      001A57 CB 2A                 6211 	sra	d
      001A59 CB 1B                 6212 	rr	e
      001A5B CB 2A                 6213 	sra	d
      001A5D CB 1B                 6214 	rr	e
      001A5F CB 2A                 6215 	sra	d
      001A61 CB 1B                 6216 	rr	e
      001A63 CB 2A                 6217 	sra	d
      001A65 CB 1B                 6218 	rr	e
      001A67 CB 2A                 6219 	sra	d
      001A69 CB 1B                 6220 	rr	e
      001A6B AF                    6221 	xor	a, a
      001A6C 93                    6222 	sub	a, e
      001A6D 22                    6223 	ld	(hl+), a
      001A6E 9F                    6224 	sbc	a, a
      001A6F 92                    6225 	sub	a, d
      001A70 77                    6226 	ld	(hl), a
      001A71                       6227 00125$:
                                   6228 ;src/main.c:643: bgY += yOverflow;
      001A71 FAr9Er00              6229 	ld	a, (#_bgY)
      001A74 21rA2r00              6230 	ld	hl, #_yOverflow
      001A77 86                    6231 	add	a, (hl)
      001A78 21r9Er00              6232 	ld	hl, #_bgY
      001A7B 22                    6233 	ld	(hl+), a
      001A7C 7E                    6234 	ld	a, (hl)
      001A7D 21rA3r00              6235 	ld	hl, #_yOverflow + 1
      001A80 8E                    6236 	adc	a, (hl)
      001A81 EAr9Fr00              6237 	ld	(#_bgY + 1),a
                                   6238 ;src/main.c:644: playerY = limitedPlayerY;
      001A84 21r98r00              6239 	ld	hl, #_playerY
      001A87 79                    6240 	ld	a, c
      001A88 22                    6241 	ld	(hl+), a
                                   6242 ;src/main.c:645: playerDrawY=playerY >> 5;
      001A89 78                    6243 	ld	a, b
      001A8A 32                    6244 	ld	(hl-), a
      001A8B 2A                    6245 	ld	a, (hl+)
      001A8C 4F                    6246 	ld	c, a
      001A8D 46                    6247 	ld	b, (hl)
      001A8E CB 38                 6248 	srl	b
      001A90 CB 19                 6249 	rr	c
      001A92 CB 38                 6250 	srl	b
      001A94 CB 19                 6251 	rr	c
      001A96 CB 38                 6252 	srl	b
      001A98 CB 19                 6253 	rr	c
      001A9A CB 38                 6254 	srl	b
      001A9C CB 19                 6255 	rr	c
      001A9E CB 38                 6256 	srl	b
      001AA0 CB 19                 6257 	rr	c
      001AA2 21r9Br00              6258 	ld	hl, #_playerDrawY
      001AA5 71                    6259 	ld	(hl), c
      001AA6 18 05                 6260 	jr	00128$
      001AA8                       6261 00127$:
                                   6262 ;src/main.c:650: ySpeed = 0;
      001AA8 21r95r00              6263 	ld	hl, #_ySpeed
      001AAB 36 00                 6264 	ld	(hl), #0x00
      001AAD                       6265 00128$:
                                   6266 ;src/main.c:550: uint8_t xCollisionPoint = playerDrawX; 
      001AAD FAr9Ar00              6267 	ld	a, (#_playerDrawX)
      001AB0 F8 07                 6268 	ldhl	sp,	#7
      001AB2 77                    6269 	ld	(hl), a
                                   6270 ;src/main.c:609: yCollisionPoint = playerDrawY +8; //bottom edge
      001AB3 FAr9Br00              6271 	ld	a, (#_playerDrawY)
      001AB6 C6 08                 6272 	add	a, #0x08
      001AB8 F8 06                 6273 	ldhl	sp,	#6
      001ABA 77                    6274 	ld	(hl), a
                                   6275 ;src/main.c:653: if (xDir >= 0) {
      001ABB FAr92r00              6276 	ld	a, (#_xDir)
      001ABE CB 7F                 6277 	bit	7, a
      001AC0 20 2A                 6278 	jr	NZ, 00130$
                                   6279 ;src/main.c:654: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   6280 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6281 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001AC2 11r00r00              6282 	ld	de, #_shadow_OAM
      001AC5 F8 06                 6283 	ldhl	sp,	#6
      001AC7 2A                    6284 	ld	a, (hl+)
      001AC8 12                    6285 	ld	(de), a
      001AC9 11r01r00              6286 	ld	de, #(_shadow_OAM + 1)
      001ACC 7E                    6287 	ld	a, (hl)
      001ACD 12                    6288 	ld	(de), a
                                   6289 ;src/main.c:656: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001ACE FAr9Br00              6290 	ld	a, (#_playerDrawY)
      001AD1 F8 07                 6291 	ldhl	sp,	#7
      001AD3 77                    6292 	ld	(hl), a
      001AD4 3A                    6293 	ld	a, (hl-)
      001AD5 C6 08                 6294 	add	a, #0x08
      001AD7 77                    6295 	ld	(hl), a
      001AD8 FAr9Ar00              6296 	ld	a, (#_playerDrawX)
      001ADB C6 08                 6297 	add	a, #0x08
      001ADD F8 07                 6298 	ldhl	sp,	#7
                                   6299 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6300 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001ADF 32                    6301 	ld	(hl-), a
      001AE0 11r04r00              6302 	ld	de, #(_shadow_OAM + 4)
      001AE3 2A                    6303 	ld	a, (hl+)
      001AE4 12                    6304 	ld	(de), a
      001AE5 11r05r00              6305 	ld	de, #(_shadow_OAM + 5)
      001AE8 7E                    6306 	ld	a, (hl)
      001AE9 12                    6307 	ld	(de), a
                                   6308 ;src/main.c:656: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001AEA 18 28                 6309 	jr	00131$
      001AEC                       6310 00130$:
                                   6311 ;src/main.c:659: move_sprite(1, playerDrawX , playerDrawY +8);
                                   6312 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001AEC 01r04r00              6313 	ld	bc, #(_shadow_OAM + 4)
                                   6314 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001AEF F8 06                 6315 	ldhl	sp,	#6
      001AF1 2A                    6316 	ld	a, (hl+)
      001AF2 02                    6317 	ld	(bc), a
      001AF3 03                    6318 	inc	bc
      001AF4 7E                    6319 	ld	a, (hl)
      001AF5 02                    6320 	ld	(bc), a
                                   6321 ;src/main.c:661: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001AF6 FAr9Br00              6322 	ld	a, (#_playerDrawY)
      001AF9 F8 07                 6323 	ldhl	sp,	#7
      001AFB 77                    6324 	ld	(hl), a
      001AFC 3A                    6325 	ld	a, (hl-)
      001AFD C6 08                 6326 	add	a, #0x08
      001AFF 77                    6327 	ld	(hl), a
      001B00 FAr9Ar00              6328 	ld	a, (#_playerDrawX)
      001B03 F8 07                 6329 	ldhl	sp,	#7
      001B05 77                    6330 	ld	(hl), a
      001B06 7E                    6331 	ld	a, (hl)
      001B07 C6 08                 6332 	add	a, #0x08
                                   6333 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6334 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B09 32                    6335 	ld	(hl-), a
      001B0A 11r00r00              6336 	ld	de, #_shadow_OAM
      001B0D 2A                    6337 	ld	a, (hl+)
      001B0E 12                    6338 	ld	(de), a
      001B0F 11r01r00              6339 	ld	de, #(_shadow_OAM + 1)
      001B12 7E                    6340 	ld	a, (hl)
      001B13 12                    6341 	ld	(de), a
                                   6342 ;src/main.c:661: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B14                       6343 00131$:
                                   6344 ;src/main.c:666: if (bgX >= 256) {
      001B14 21r9Cr00              6345 	ld	hl, #_bgX
      001B17 2A                    6346 	ld	a, (hl+)
      001B18 4F                    6347 	ld	c, a
      001B19 46                    6348 	ld	b, (hl)
      001B1A 78                    6349 	ld	a, b
      001B1B EE 80                 6350 	xor	a, #0x80
      001B1D D6 81                 6351 	sub	a, #0x81
      001B1F 38 0F                 6352 	jr	C, 00133$
                                   6353 ;src/main.c:667: bgX = bgX % 256;
      001B21 AF                    6354 	xor	a, a
      001B22 3C                    6355 	inc	a
      001B23 F5                    6356 	push	af
      001B24 C5                    6357 	push	bc
      001B25 CDr00r00              6358 	call	__modsint
      001B28 E8 04                 6359 	add	sp, #4
      001B2A 21r9Cr00              6360 	ld	hl, #_bgX
      001B2D 7B                    6361 	ld	a, e
      001B2E 22                    6362 	ld	(hl+), a
      001B2F 72                    6363 	ld	(hl), d
      001B30                       6364 00133$:
                                   6365 ;src/main.c:669: if (bgX < 0) {
      001B30 21r9Cr00              6366 	ld	hl, #_bgX
      001B33 2A                    6367 	ld	a, (hl+)
      001B34 4F                    6368 	ld	c, a
      001B35 46                    6369 	ld	b, (hl)
      001B36 CB 78                 6370 	bit	7, b
      001B38 28 15                 6371 	jr	Z, 00135$
                                   6372 ;src/main.c:670: bgX = 255 - (bgX % 256);
      001B3A AF                    6373 	xor	a, a
      001B3B 3C                    6374 	inc	a
      001B3C F5                    6375 	push	af
      001B3D C5                    6376 	push	bc
      001B3E CDr00r00              6377 	call	__modsint
      001B41 E8 04                 6378 	add	sp, #4
      001B43 3E FF                 6379 	ld	a, #0xff
      001B45 93                    6380 	sub	a, e
      001B46 4F                    6381 	ld	c, a
      001B47 9F                    6382 	sbc	a, a
      001B48 92                    6383 	sub	a, d
      001B49 21r9Cr00              6384 	ld	hl, #_bgX
      001B4C 71                    6385 	ld	(hl), c
      001B4D 23                    6386 	inc	hl
      001B4E 77                    6387 	ld	(hl), a
      001B4F                       6388 00135$:
                                   6389 ;src/main.c:672: if (bgY >= 256) {
      001B4F 21r9Er00              6390 	ld	hl, #_bgY
      001B52 2A                    6391 	ld	a, (hl+)
      001B53 4F                    6392 	ld	c, a
      001B54 46                    6393 	ld	b, (hl)
      001B55 78                    6394 	ld	a, b
      001B56 EE 80                 6395 	xor	a, #0x80
      001B58 D6 81                 6396 	sub	a, #0x81
      001B5A 38 0F                 6397 	jr	C, 00137$
                                   6398 ;src/main.c:673: bgY = bgY % 256;
      001B5C AF                    6399 	xor	a, a
      001B5D 3C                    6400 	inc	a
      001B5E F5                    6401 	push	af
      001B5F C5                    6402 	push	bc
      001B60 CDr00r00              6403 	call	__modsint
      001B63 E8 04                 6404 	add	sp, #4
      001B65 21r9Er00              6405 	ld	hl, #_bgY
      001B68 7B                    6406 	ld	a, e
      001B69 22                    6407 	ld	(hl+), a
      001B6A 72                    6408 	ld	(hl), d
      001B6B                       6409 00137$:
                                   6410 ;src/main.c:675: if (bgY < 0) {
      001B6B 21r9Er00              6411 	ld	hl, #_bgY
      001B6E 2A                    6412 	ld	a, (hl+)
      001B6F 4F                    6413 	ld	c, a
      001B70 46                    6414 	ld	b, (hl)
      001B71 CB 78                 6415 	bit	7, b
      001B73 28 15                 6416 	jr	Z, 00139$
                                   6417 ;src/main.c:676: bgY = 255 - (bgY % 256);
      001B75 AF                    6418 	xor	a, a
      001B76 3C                    6419 	inc	a
      001B77 F5                    6420 	push	af
      001B78 C5                    6421 	push	bc
      001B79 CDr00r00              6422 	call	__modsint
      001B7C E8 04                 6423 	add	sp, #4
      001B7E 3E FF                 6424 	ld	a, #0xff
      001B80 93                    6425 	sub	a, e
      001B81 4F                    6426 	ld	c, a
      001B82 9F                    6427 	sbc	a, a
      001B83 92                    6428 	sub	a, d
      001B84 21r9Er00              6429 	ld	hl, #_bgY
      001B87 71                    6430 	ld	(hl), c
      001B88 23                    6431 	inc	hl
      001B89 77                    6432 	ld	(hl), a
      001B8A                       6433 00139$:
                                   6434 ;src/main.c:679: move_bkg(bgX, bgY);
      001B8A 21r9Er00              6435 	ld	hl, #_bgY
      001B8D 4E                    6436 	ld	c, (hl)
      001B8E FAr9Cr00              6437 	ld	a, (#_bgX)
      001B91 E0r00                 6438 	ldh	(_SCX_REG + 0), a
                                   6439 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001B93 79                    6440 	ld	a, c
      001B94 E0r00                 6441 	ldh	(_SCY_REG + 0), a
                                   6442 ;src/main.c:682: if (ySpeed > 0) ySpeed--;
      001B96 21r95r00              6443 	ld	hl, #_ySpeed
      001B99 5E                    6444 	ld	e, (hl)
      001B9A AF                    6445 	xor	a, a
      001B9B 57                    6446 	ld	d, a
      001B9C 96                    6447 	sub	a, (hl)
      001B9D CB 7B                 6448 	bit	7, e
      001B9F 28 07                 6449 	jr	Z, 00355$
      001BA1 CB 7A                 6450 	bit	7, d
      001BA3 20 08                 6451 	jr	NZ, 00356$
      001BA5 BF                    6452 	cp	a, a
      001BA6 18 05                 6453 	jr	00356$
      001BA8                       6454 00355$:
      001BA8 CB 7A                 6455 	bit	7, d
      001BAA 28 01                 6456 	jr	Z, 00356$
      001BAC 37                    6457 	scf
      001BAD                       6458 00356$:
      001BAD 30 04                 6459 	jr	NC, 00141$
      001BAF 21r95r00              6460 	ld	hl, #_ySpeed
      001BB2 35                    6461 	dec	(hl)
      001BB3                       6462 00141$:
                                   6463 ;src/main.c:683: if (ySpeed < 0) ySpeed++;
      001BB3 21r95r00              6464 	ld	hl, #_ySpeed
      001BB6 CB 7E                 6465 	bit	7, (hl)
      001BB8 28 01                 6466 	jr	Z, 00143$
      001BBA 34                    6467 	inc	(hl)
      001BBB                       6468 00143$:
                                   6469 ;src/main.c:684: if (xSpeed > 0) xSpeed--;
      001BBB 21r94r00              6470 	ld	hl, #_xSpeed
      001BBE 5E                    6471 	ld	e, (hl)
      001BBF AF                    6472 	xor	a, a
      001BC0 57                    6473 	ld	d, a
      001BC1 96                    6474 	sub	a, (hl)
      001BC2 CB 7B                 6475 	bit	7, e
      001BC4 28 07                 6476 	jr	Z, 00357$
      001BC6 CB 7A                 6477 	bit	7, d
      001BC8 20 08                 6478 	jr	NZ, 00358$
      001BCA BF                    6479 	cp	a, a
      001BCB 18 05                 6480 	jr	00358$
      001BCD                       6481 00357$:
      001BCD CB 7A                 6482 	bit	7, d
      001BCF 28 01                 6483 	jr	Z, 00358$
      001BD1 37                    6484 	scf
      001BD2                       6485 00358$:
      001BD2 30 04                 6486 	jr	NC, 00145$
      001BD4 21r94r00              6487 	ld	hl, #_xSpeed
      001BD7 35                    6488 	dec	(hl)
      001BD8                       6489 00145$:
                                   6490 ;src/main.c:685: if (xSpeed < 0) xSpeed++;
      001BD8 21r94r00              6491 	ld	hl, #_xSpeed
      001BDB CB 7E                 6492 	bit	7, (hl)
      001BDD 28 01                 6493 	jr	Z, 00163$
      001BDF 34                    6494 	inc	(hl)
      001BE0                       6495 00163$:
                                   6496 ;src/main.c:689: }
      001BE0 E8 08                 6497 	add	sp, #8
      001BE2 C9                    6498 	ret
                                   6499 ;src/main.c:691: void takeDamage(int16_t amount) {
                                   6500 ;	---------------------------------
                                   6501 ; Function takeDamage
                                   6502 ; ---------------------------------
      001BE3                       6503 _takeDamage::
      001BE3 3B                    6504 	dec	sp
                                   6505 ;src/main.c:692: if (amount > shield) {
      001BE4 FArDEr00              6506 	ld	a, (#_shield)
      001BE7 4F                    6507 	ld	c, a
      001BE8 07                    6508 	rlca
      001BE9 9F                    6509 	sbc	a, a
      001BEA 47                    6510 	ld	b, a
                                   6511 ;src/main.c:694: hull -= (amount - shield);
      001BEB F8 03                 6512 	ldhl	sp,	#3
      001BED 7E                    6513 	ld	a, (hl)
      001BEE F8 00                 6514 	ldhl	sp,	#0
      001BF0 77                    6515 	ld	(hl), a
                                   6516 ;src/main.c:692: if (amount > shield) {
      001BF1 F8 03                 6517 	ldhl	sp,	#3
      001BF3 79                    6518 	ld	a, c
      001BF4 96                    6519 	sub	a, (hl)
      001BF5 23                    6520 	inc	hl
      001BF6 78                    6521 	ld	a, b
      001BF7 9E                    6522 	sbc	a, (hl)
      001BF8 78                    6523 	ld	a, b
      001BF9 57                    6524 	ld	d, a
      001BFA CB 7E                 6525 	bit	7, (hl)
      001BFC 28 07                 6526 	jr	Z, 00111$
      001BFE CB 7A                 6527 	bit	7, d
      001C00 20 08                 6528 	jr	NZ, 00112$
      001C02 BF                    6529 	cp	a, a
      001C03 18 05                 6530 	jr	00112$
      001C05                       6531 00111$:
      001C05 CB 7A                 6532 	bit	7, d
      001C07 28 01                 6533 	jr	Z, 00112$
      001C09 37                    6534 	scf
      001C0A                       6535 00112$:
      001C0A 30 10                 6536 	jr	NC, 00102$
                                   6537 ;src/main.c:693: shield = 0;
      001C0C 21rDEr00              6538 	ld	hl, #_shield
      001C0F 36 00                 6539 	ld	(hl), #0x00
                                   6540 ;src/main.c:694: hull -= (amount - shield);
      001C11 FArDDr00              6541 	ld	a, (#_hull)
      001C14 F8 00                 6542 	ldhl	sp,	#0
      001C16 96                    6543 	sub	a, (hl)
      001C17 EArDDr00              6544 	ld	(#_hull),a
      001C1A 18 09                 6545 	jr	00104$
      001C1C                       6546 00102$:
                                   6547 ;src/main.c:697: shield -= amount;
      001C1C FArDEr00              6548 	ld	a, (#_shield)
      001C1F F8 00                 6549 	ldhl	sp,	#0
      001C21 96                    6550 	sub	a, (hl)
      001C22 EArDEr00              6551 	ld	(#_shield),a
      001C25                       6552 00104$:
                                   6553 ;src/main.c:699: }
      001C25 33                    6554 	inc	sp
      001C26 C9                    6555 	ret
                                   6556 ;src/main.c:701: void checkCollision() {
                                   6557 ;	---------------------------------
                                   6558 ; Function checkCollision
                                   6559 ; ---------------------------------
      001C27                       6560 _checkCollision::
      001C27 E8 F1                 6561 	add	sp, #-15
                                   6562 ;src/main.c:708: struct Enemy *eptr = enemies + enemyCollisionCount;
      001C29 01r50r00              6563 	ld	bc, #_enemies+0
      001C2C 21rA4r00              6564 	ld	hl, #_enemyCollisionCount
      001C2F 6E                    6565 	ld	l, (hl)
                                   6566 ;	spillPairReg hl
                                   6567 ;	spillPairReg hl
      001C30 26 00                 6568 	ld	h, #0x00
                                   6569 ;	spillPairReg hl
                                   6570 ;	spillPairReg hl
      001C32 29                    6571 	add	hl, hl
      001C33 29                    6572 	add	hl, hl
      001C34 29                    6573 	add	hl, hl
      001C35 29                    6574 	add	hl, hl
      001C36 09                    6575 	add	hl, bc
      001C37 4D                    6576 	ld	c, l
      001C38 7C                    6577 	ld	a, h
      001C39 F8 00                 6578 	ldhl	sp,	#0
      001C3B 71                    6579 	ld	(hl), c
      001C3C 23                    6580 	inc	hl
      001C3D 77                    6581 	ld	(hl), a
                                   6582 ;src/main.c:709: uint8_t i = enemyCollisionCount;
      001C3E FArA4r00              6583 	ld	a, (#_enemyCollisionCount)
      001C41 F8 02                 6584 	ldhl	sp,	#2
      001C43 77                    6585 	ld	(hl), a
                                   6586 ;src/main.c:711: if (eptr->visible && eptr->alive) {
      001C44 D1                    6587 	pop	de
      001C45 D5                    6588 	push	de
      001C46 21 0A 00              6589 	ld	hl, #0x000a
      001C49 19                    6590 	add	hl, de
      001C4A 4D                    6591 	ld	c, l
      001C4B 44                    6592 	ld	b, h
      001C4C 0A                    6593 	ld	a, (bc)
      001C4D B7                    6594 	or	a, a
      001C4E CAr62r1F              6595 	jp	Z, 00127$
      001C51 D1                    6596 	pop	de
      001C52 D5                    6597 	push	de
      001C53 21 09 00              6598 	ld	hl, #0x0009
      001C56 19                    6599 	add	hl, de
      001C57 4D                    6600 	ld	c, l
      001C58 44                    6601 	ld	b, h
      001C59 0A                    6602 	ld	a, (bc)
      001C5A B7                    6603 	or	a, a
      001C5B CAr62r1F              6604 	jp	Z, 00127$
                                   6605 ;src/main.c:713: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001C5E D1                    6606 	pop	de
      001C5F D5                    6607 	push	de
      001C60 21 08 00              6608 	ld	hl, #0x0008
      001C63 19                    6609 	add	hl, de
      001C64 4D                    6610 	ld	c, l
      001C65 44                    6611 	ld	b, h
      001C66 0A                    6612 	ld	a, (bc)
      001C67 4F                    6613 	ld	c, a
      001C68 3D                    6614 	dec	a
      001C69 3E 01                 6615 	ld	a, #0x01
      001C6B 28 01                 6616 	jr	Z, 00283$
      001C6D AF                    6617 	xor	a, a
      001C6E                       6618 00283$:
      001C6E F8 0B                 6619 	ldhl	sp,	#11
      001C70 77                    6620 	ld	(hl), a
      001C71 FAr9Ar00              6621 	ld	a, (#_playerDrawX)
      001C74 F8 0C                 6622 	ldhl	sp,	#12
      001C76 77                    6623 	ld	(hl), a
                                   6624 ;src/main.c:714: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001C77 79                    6625 	ld	a, c
      001C78 D6 02                 6626 	sub	a, #0x02
      001C7A 3E 01                 6627 	ld	a, #0x01
      001C7C 28 01                 6628 	jr	Z, 00285$
      001C7E AF                    6629 	xor	a, a
      001C7F                       6630 00285$:
      001C7F F8 0D                 6631 	ldhl	sp,	#13
                                   6632 ;src/main.c:713: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001C81 32                    6633 	ld	(hl-), a
      001C82 2B                    6634 	dec	hl
      001C83 7E                    6635 	ld	a, (hl)
      001C84 B7                    6636 	or	a, a
      001C85 28 2E                 6637 	jr	Z, 00110$
      001C87 D1                    6638 	pop	de
      001C88 D5                    6639 	push	de
      001C89 1A                    6640 	ld	a, (de)
      001C8A F8 0E                 6641 	ldhl	sp,	#14
      001C8C 77                    6642 	ld	(hl), a
      001C8D 3A                    6643 	ld	a, (hl-)
      001C8E 2B                    6644 	dec	hl
      001C8F 96                    6645 	sub	a, (hl)
      001C90 23                    6646 	inc	hl
      001C91 23                    6647 	inc	hl
      001C92 77                    6648 	ld	(hl), a
                                   6649 ;src/main.c:318: if (value >= 0) return value;
      001C93 CB 7E                 6650 	bit	7, (hl)
      001C95 28 05                 6651 	jr	Z, 00135$
                                   6652 ;src/main.c:319: else return - value;
      001C97 AF                    6653 	xor	a, a
      001C98 F8 0E                 6654 	ldhl	sp,	#14
      001C9A 96                    6655 	sub	a, (hl)
      001C9B 77                    6656 	ld	(hl), a
                                   6657 ;src/main.c:713: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001C9C                       6658 00135$:
      001C9C F8 0E                 6659 	ldhl	sp,	#14
      001C9E 5E                    6660 	ld	e, (hl)
      001C9F 3E 08                 6661 	ld	a,#0x08
      001CA1 57                    6662 	ld	d,a
      001CA2 96                    6663 	sub	a, (hl)
      001CA3 CB 7B                 6664 	bit	7, e
      001CA5 28 07                 6665 	jr	Z, 00286$
      001CA7 CB 7A                 6666 	bit	7, d
      001CA9 20 08                 6667 	jr	NZ, 00287$
      001CAB BF                    6668 	cp	a, a
      001CAC 18 05                 6669 	jr	00287$
      001CAE                       6670 00286$:
      001CAE CB 7A                 6671 	bit	7, d
      001CB0 28 01                 6672 	jr	Z, 00287$
      001CB2 37                    6673 	scf
      001CB3                       6674 00287$:
      001CB3 30 33                 6675 	jr	NC, 00106$
      001CB5                       6676 00110$:
                                   6677 ;src/main.c:714: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001CB5 F8 0D                 6678 	ldhl	sp,	#13
      001CB7 7E                    6679 	ld	a, (hl)
      001CB8 B7                    6680 	or	a, a
      001CB9 CAr9Cr1D              6681 	jp	Z, 00107$
      001CBC 2B                    6682 	dec	hl
      001CBD D1                    6683 	pop	de
      001CBE D5                    6684 	push	de
      001CBF 1A                    6685 	ld	a, (de)
      001CC0 96                    6686 	sub	a, (hl)
      001CC1 23                    6687 	inc	hl
      001CC2 23                    6688 	inc	hl
      001CC3 77                    6689 	ld	(hl), a
                                   6690 ;src/main.c:318: if (value >= 0) return value;
      001CC4 CB 7E                 6691 	bit	7, (hl)
      001CC6 28 06                 6692 	jr	Z, 00139$
                                   6693 ;src/main.c:319: else return - value;
      001CC8 AF                    6694 	xor	a, a
      001CC9 F8 0E                 6695 	ldhl	sp,	#14
      001CCB 96                    6696 	sub	a, (hl)
      001CCC 4F                    6697 	ld	c, a
      001CCD 71                    6698 	ld	(hl), c
                                   6699 ;src/main.c:714: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001CCE                       6700 00139$:
      001CCE F8 0E                 6701 	ldhl	sp,	#14
      001CD0 5E                    6702 	ld	e, (hl)
      001CD1 3E 10                 6703 	ld	a,#0x10
      001CD3 57                    6704 	ld	d,a
      001CD4 96                    6705 	sub	a, (hl)
      001CD5 CB 7B                 6706 	bit	7, e
      001CD7 28 07                 6707 	jr	Z, 00288$
      001CD9 CB 7A                 6708 	bit	7, d
      001CDB 20 08                 6709 	jr	NZ, 00289$
      001CDD BF                    6710 	cp	a, a
      001CDE 18 05                 6711 	jr	00289$
      001CE0                       6712 00288$:
      001CE0 CB 7A                 6713 	bit	7, d
      001CE2 28 01                 6714 	jr	Z, 00289$
      001CE4 37                    6715 	scf
      001CE5                       6716 00289$:
      001CE5 DAr9Cr1D              6717 	jp	C, 00107$
      001CE8                       6718 00106$:
                                   6719 ;src/main.c:715: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001CE8 C1                    6720 	pop	bc
      001CE9 C5                    6721 	push	bc
      001CEA 03                    6722 	inc	bc
      001CEB 03                    6723 	inc	bc
      001CEC FAr9Br00              6724 	ld	a, (#_playerDrawY)
      001CEF F8 0E                 6725 	ldhl	sp,	#14
      001CF1 77                    6726 	ld	(hl), a
      001CF2 F8 0B                 6727 	ldhl	sp,	#11
      001CF4 7E                    6728 	ld	a, (hl)
      001CF5 B7                    6729 	or	a, a
      001CF6 28 23                 6730 	jr	Z, 00105$
      001CF8 0A                    6731 	ld	a, (bc)
      001CF9 F8 0E                 6732 	ldhl	sp,	#14
      001CFB 96                    6733 	sub	a, (hl)
      001CFC 6F                    6734 	ld	l, a
                                   6735 ;	spillPairReg hl
                                   6736 ;	spillPairReg hl
                                   6737 ;src/main.c:318: if (value >= 0) return value;
      001CFD CB 7D                 6738 	bit	7, l
      001CFF 28 03                 6739 	jr	Z, 00143$
                                   6740 ;src/main.c:319: else return - value;
      001D01 AF                    6741 	xor	a, a
      001D02 95                    6742 	sub	a, l
      001D03 6F                    6743 	ld	l, a
                                   6744 ;	spillPairReg hl
                                   6745 ;	spillPairReg hl
                                   6746 ;src/main.c:715: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001D04                       6747 00143$:
      001D04 5D                    6748 	ld	e, l
      001D05 3E 08                 6749 	ld	a,#0x08
      001D07 57                    6750 	ld	d,a
      001D08 95                    6751 	sub	a, l
      001D09 CB 7B                 6752 	bit	7, e
      001D0B 28 07                 6753 	jr	Z, 00290$
      001D0D CB 7A                 6754 	bit	7, d
      001D0F 20 08                 6755 	jr	NZ, 00291$
      001D11 BF                    6756 	cp	a, a
      001D12 18 05                 6757 	jr	00291$
      001D14                       6758 00290$:
      001D14 CB 7A                 6759 	bit	7, d
      001D16 28 01                 6760 	jr	Z, 00291$
      001D18 37                    6761 	scf
      001D19                       6762 00291$:
      001D19 30 28                 6763 	jr	NC, 00101$
      001D1B                       6764 00105$:
                                   6765 ;src/main.c:716: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001D1B F8 0D                 6766 	ldhl	sp,	#13
      001D1D 7E                    6767 	ld	a, (hl)
      001D1E B7                    6768 	or	a, a
      001D1F 28 7B                 6769 	jr	Z, 00107$
      001D21 23                    6770 	inc	hl
      001D22 0A                    6771 	ld	a, (bc)
      001D23 96                    6772 	sub	a, (hl)
      001D24 4F                    6773 	ld	c, a
                                   6774 ;src/main.c:318: if (value >= 0) return value;
      001D25 CB 79                 6775 	bit	7, c
      001D27 28 03                 6776 	jr	Z, 00147$
                                   6777 ;src/main.c:319: else return - value;
      001D29 AF                    6778 	xor	a, a
      001D2A 91                    6779 	sub	a, c
      001D2B 4F                    6780 	ld	c, a
                                   6781 ;src/main.c:716: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001D2C                       6782 00147$:
      001D2C 59                    6783 	ld	e, c
      001D2D 3E 10                 6784 	ld	a,#0x10
      001D2F 57                    6785 	ld	d,a
      001D30 91                    6786 	sub	a, c
      001D31 CB 7B                 6787 	bit	7, e
      001D33 28 07                 6788 	jr	Z, 00292$
      001D35 CB 7A                 6789 	bit	7, d
      001D37 20 08                 6790 	jr	NZ, 00293$
      001D39 BF                    6791 	cp	a, a
      001D3A 18 05                 6792 	jr	00293$
      001D3C                       6793 00292$:
      001D3C CB 7A                 6794 	bit	7, d
      001D3E 28 01                 6795 	jr	Z, 00293$
      001D40 37                    6796 	scf
      001D41                       6797 00293$:
      001D41 38 59                 6798 	jr	C, 00107$
      001D43                       6799 00101$:
                                   6800 ;src/main.c:718: set_sprite_tile(10+(i<<1), 0x7f);
      001D43 F8 02                 6801 	ldhl	sp,	#2
      001D45 7E                    6802 	ld	a, (hl)
      001D46 87                    6803 	add	a, a
      001D47 C6 0A                 6804 	add	a, #0x0a
                                   6805 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D49 6F                    6806 	ld	l, a
      001D4A 01r00r00              6807 	ld	bc, #_shadow_OAM+0
                                   6808 ;	spillPairReg hl
                                   6809 ;	spillPairReg hl
      001D4D 26 00                 6810 	ld	h, #0x00
                                   6811 ;	spillPairReg hl
                                   6812 ;	spillPairReg hl
      001D4F 29                    6813 	add	hl, hl
      001D50 29                    6814 	add	hl, hl
      001D51 09                    6815 	add	hl, bc
      001D52 23                    6816 	inc	hl
      001D53 23                    6817 	inc	hl
      001D54 36 7F                 6818 	ld	(hl), #0x7f
                                   6819 ;src/main.c:719: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001D56 F8 02                 6820 	ldhl	sp,	#2
      001D58 7E                    6821 	ld	a, (hl)
      001D59 87                    6822 	add	a, a
      001D5A C6 0B                 6823 	add	a, #0x0b
                                   6824 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001D5C 6F                    6825 	ld	l, a
      001D5D 01r00r00              6826 	ld	bc, #_shadow_OAM+0
                                   6827 ;	spillPairReg hl
                                   6828 ;	spillPairReg hl
      001D60 26 00                 6829 	ld	h, #0x00
                                   6830 ;	spillPairReg hl
                                   6831 ;	spillPairReg hl
      001D62 29                    6832 	add	hl, hl
      001D63 29                    6833 	add	hl, hl
      001D64 09                    6834 	add	hl, bc
      001D65 23                    6835 	inc	hl
      001D66 23                    6836 	inc	hl
      001D67 36 7F                 6837 	ld	(hl), #0x7f
                                   6838 ;src/main.c:720: eptr->alive = 0;
      001D69 D1                    6839 	pop	de
      001D6A D5                    6840 	push	de
      001D6B 21 09 00              6841 	ld	hl, #0x0009
      001D6E 19                    6842 	add	hl, de
      001D6F 4D                    6843 	ld	c, l
      001D70 44                    6844 	ld	b, h
      001D71 AF                    6845 	xor	a, a
      001D72 02                    6846 	ld	(bc), a
                                   6847 ;src/main.c:721: eptr->visible = 0;
      001D73 D1                    6848 	pop	de
      001D74 D5                    6849 	push	de
      001D75 21 0A 00              6850 	ld	hl, #0x000a
      001D78 19                    6851 	add	hl, de
      001D79 4D                    6852 	ld	c, l
      001D7A 44                    6853 	ld	b, h
      001D7B AF                    6854 	xor	a, a
      001D7C 02                    6855 	ld	(bc), a
                                   6856 ;src/main.c:722: takeDamage(eptr->damage);
      001D7D D1                    6857 	pop	de
      001D7E D5                    6858 	push	de
      001D7F 21 0B 00              6859 	ld	hl, #0x000b
      001D82 19                    6860 	add	hl, de
      001D83 4D                    6861 	ld	c, l
      001D84 44                    6862 	ld	b, h
      001D85 0A                    6863 	ld	a, (bc)
      001D86 06 00                 6864 	ld	b, #0x00
      001D88 4F                    6865 	ld	c, a
      001D89 C5                    6866 	push	bc
      001D8A CDrE3r1B              6867 	call	_takeDamage
      001D8D E1                    6868 	pop	hl
                                   6869 ;src/main.c:723: initEnemies(0);
      001D8E AF                    6870 	xor	a, a
      001D8F F5                    6871 	push	af
      001D90 33                    6872 	inc	sp
      001D91 CDr85r0C              6873 	call	_initEnemies
      001D94 33                    6874 	inc	sp
                                   6875 ;src/main.c:724: playSound(0);
      001D95 AF                    6876 	xor	a, a
      001D96 F5                    6877 	push	af
      001D97 33                    6878 	inc	sp
      001D98 CDr22r0C              6879 	call	_playSound
      001D9B 33                    6880 	inc	sp
      001D9C                       6881 00107$:
                                   6882 ;src/main.c:730: struct Projectile *pptr = projectiles;
      001D9C F8 0C                 6883 	ldhl	sp,	#12
      001D9E 3ErA0                 6884 	ld	a, #<(_projectiles)
      001DA0 22                    6885 	ld	(hl+), a
      001DA1 36s00                 6886 	ld	(hl), #>(_projectiles)
                                   6887 ;src/main.c:732: while (j < PROJECTILECOUNT) {
      001DA3 D1                    6888 	pop	de
      001DA4 D5                    6889 	push	de
      001DA5 21 02 00              6890 	ld	hl, #0x0002
      001DA8 19                    6891 	add	hl, de
      001DA9 E5                    6892 	push	hl
      001DAA 7D                    6893 	ld	a, l
      001DAB F8 05                 6894 	ldhl	sp,	#5
      001DAD 77                    6895 	ld	(hl), a
      001DAE E1                    6896 	pop	hl
      001DAF 7C                    6897 	ld	a, h
      001DB0 F8 04                 6898 	ldhl	sp,	#4
      001DB2 77                    6899 	ld	(hl), a
      001DB3 D1                    6900 	pop	de
      001DB4 D5                    6901 	push	de
      001DB5 21 08 00              6902 	ld	hl, #0x0008
      001DB8 19                    6903 	add	hl, de
      001DB9 E5                    6904 	push	hl
      001DBA 7D                    6905 	ld	a, l
      001DBB F8 07                 6906 	ldhl	sp,	#7
      001DBD 77                    6907 	ld	(hl), a
      001DBE E1                    6908 	pop	hl
      001DBF 7C                    6909 	ld	a, h
      001DC0 F8 06                 6910 	ldhl	sp,	#6
      001DC2 77                    6911 	ld	(hl), a
      001DC3 F8 03                 6912 	ldhl	sp,	#3
      001DC5 7E                    6913 	ld	a, (hl)
      001DC6 F8 07                 6914 	ldhl	sp,	#7
      001DC8 77                    6915 	ld	(hl), a
      001DC9 F8 04                 6916 	ldhl	sp,	#4
      001DCB 7E                    6917 	ld	a, (hl)
      001DCC F8 08                 6918 	ldhl	sp,	#8
      001DCE 77                    6919 	ld	(hl), a
      001DCF F8 0E                 6920 	ldhl	sp,	#14
      001DD1 36 00                 6921 	ld	(hl), #0x00
      001DD3                       6922 00123$:
      001DD3 21r5Er08              6923 	ld	hl, #_PROJECTILECOUNT
      001DD6 4E                    6924 	ld	c, (hl)
      001DD7 F8 0E                 6925 	ldhl	sp,	#14
      001DD9 7E                    6926 	ld	a, (hl)
      001DDA 91                    6927 	sub	a, c
      001DDB D2r62r1F              6928 	jp	NC, 00127$
                                   6929 ;src/main.c:733: if (pptr->active) {
      001DDE 2B                    6930 	dec	hl
      001DDF 2B                    6931 	dec	hl
      001DE0 2A                    6932 	ld	a, (hl+)
      001DE1 5F                    6933 	ld	e, a
      001DE2 56                    6934 	ld	d, (hl)
      001DE3 21 09 00              6935 	ld	hl, #0x0009
      001DE6 19                    6936 	add	hl, de
      001DE7 4D                    6937 	ld	c, l
      001DE8 44                    6938 	ld	b, h
      001DE9 0A                    6939 	ld	a, (bc)
      001DEA B7                    6940 	or	a, a
      001DEB CAr49r1F              6941 	jp	Z, 00122$
                                   6942 ;src/main.c:737: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001DEE F8 05                 6943 	ldhl	sp,#5
      001DF0 2A                    6944 	ld	a, (hl+)
      001DF1 5F                    6945 	ld	e, a
      001DF2 56                    6946 	ld	d, (hl)
      001DF3 1A                    6947 	ld	a, (de)
      001DF4 4F                    6948 	ld	c, a
      001DF5 3D                    6949 	dec	a
      001DF6 3E 01                 6950 	ld	a, #0x01
      001DF8 28 01                 6951 	jr	Z, 00295$
      001DFA AF                    6952 	xor	a, a
      001DFB                       6953 00295$:
      001DFB F8 09                 6954 	ldhl	sp,	#9
      001DFD 77                    6955 	ld	(hl), a
                                   6956 ;src/main.c:738: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001DFE 79                    6957 	ld	a, c
      001DFF D6 02                 6958 	sub	a, #0x02
      001E01 3E 01                 6959 	ld	a, #0x01
      001E03 28 01                 6960 	jr	Z, 00297$
      001E05 AF                    6961 	xor	a, a
      001E06                       6962 00297$:
      001E06 F8 0A                 6963 	ldhl	sp,	#10
                                   6964 ;src/main.c:737: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001E08 32                    6965 	ld	(hl-), a
      001E09 7E                    6966 	ld	a, (hl)
      001E0A B7                    6967 	or	a, a
      001E0B 28 2C                 6968 	jr	Z, 00120$
      001E0D D1                    6969 	pop	de
      001E0E D5                    6970 	push	de
      001E0F 1A                    6971 	ld	a, (de)
      001E10 F8 0C                 6972 	ldhl	sp,#12
      001E12 5E                    6973 	ld	e, (hl)
      001E13 23                    6974 	inc	hl
      001E14 56                    6975 	ld	d, (hl)
      001E15 F5                    6976 	push	af
      001E16 1A                    6977 	ld	a, (de)
      001E17 4F                    6978 	ld	c, a
      001E18 F1                    6979 	pop	af
      001E19 91                    6980 	sub	a, c
      001E1A 4F                    6981 	ld	c, a
                                   6982 ;src/main.c:318: if (value >= 0) return value;
      001E1B CB 79                 6983 	bit	7, c
      001E1D 28 03                 6984 	jr	Z, 00153$
                                   6985 ;src/main.c:319: else return - value;
      001E1F AF                    6986 	xor	a, a
      001E20 91                    6987 	sub	a, c
      001E21 4F                    6988 	ld	c, a
                                   6989 ;src/main.c:737: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001E22                       6990 00153$:
      001E22 59                    6991 	ld	e, c
      001E23 3E 08                 6992 	ld	a,#0x08
      001E25 57                    6993 	ld	d,a
      001E26 91                    6994 	sub	a, c
      001E27 CB 7B                 6995 	bit	7, e
      001E29 28 07                 6996 	jr	Z, 00298$
      001E2B CB 7A                 6997 	bit	7, d
      001E2D 20 08                 6998 	jr	NZ, 00299$
      001E2F BF                    6999 	cp	a, a
      001E30 18 05                 7000 	jr	00299$
      001E32                       7001 00298$:
      001E32 CB 7A                 7002 	bit	7, d
      001E34 28 01                 7003 	jr	Z, 00299$
      001E36 37                    7004 	scf
      001E37                       7005 00299$:
      001E37 30 3B                 7006 	jr	NC, 00116$
      001E39                       7007 00120$:
                                   7008 ;src/main.c:738: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001E39 F8 0A                 7009 	ldhl	sp,	#10
      001E3B 7E                    7010 	ld	a, (hl)
      001E3C B7                    7011 	or	a, a
      001E3D CAr49r1F              7012 	jp	Z, 00122$
      001E40 D1                    7013 	pop	de
      001E41 D5                    7014 	push	de
      001E42 1A                    7015 	ld	a, (de)
      001E43 F8 0C                 7016 	ldhl	sp,#12
      001E45 5E                    7017 	ld	e, (hl)
      001E46 23                    7018 	inc	hl
      001E47 56                    7019 	ld	d, (hl)
      001E48 2B                    7020 	dec	hl
      001E49 2B                    7021 	dec	hl
      001E4A F5                    7022 	push	af
      001E4B 1A                    7023 	ld	a, (de)
      001E4C 4F                    7024 	ld	c, a
      001E4D F1                    7025 	pop	af
      001E4E 91                    7026 	sub	a, c
      001E4F 77                    7027 	ld	(hl), a
                                   7028 ;src/main.c:318: if (value >= 0) return value;
      001E50 CB 7E                 7029 	bit	7, (hl)
      001E52 20 03                 7030 	jr	NZ, 00155$
      001E54 4E                    7031 	ld	c, (hl)
      001E55 18 05                 7032 	jr	00157$
      001E57                       7033 00155$:
                                   7034 ;src/main.c:319: else return - value;
      001E57 AF                    7035 	xor	a, a
      001E58 F8 0B                 7036 	ldhl	sp,	#11
      001E5A 96                    7037 	sub	a, (hl)
      001E5B 4F                    7038 	ld	c, a
                                   7039 ;src/main.c:738: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001E5C                       7040 00157$:
      001E5C 59                    7041 	ld	e, c
      001E5D 3E 10                 7042 	ld	a,#0x10
      001E5F 57                    7043 	ld	d,a
      001E60 91                    7044 	sub	a, c
      001E61 CB 7B                 7045 	bit	7, e
      001E63 28 07                 7046 	jr	Z, 00300$
      001E65 CB 7A                 7047 	bit	7, d
      001E67 20 08                 7048 	jr	NZ, 00301$
      001E69 BF                    7049 	cp	a, a
      001E6A 18 05                 7050 	jr	00301$
      001E6C                       7051 00300$:
      001E6C CB 7A                 7052 	bit	7, d
      001E6E 28 01                 7053 	jr	Z, 00301$
      001E70 37                    7054 	scf
      001E71                       7055 00301$:
      001E71 DAr49r1F              7056 	jp	C, 00122$
      001E74                       7057 00116$:
                                   7058 ;src/main.c:739: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001E74 F8 0C                 7059 	ldhl	sp,	#12
      001E76 2A                    7060 	ld	a, (hl+)
      001E77 4F                    7061 	ld	c, a
      001E78 46                    7062 	ld	b, (hl)
      001E79 03                    7063 	inc	bc
      001E7A 03                    7064 	inc	bc
      001E7B F8 09                 7065 	ldhl	sp,	#9
      001E7D 7E                    7066 	ld	a, (hl)
      001E7E B7                    7067 	or	a, a
      001E7F 28 2A                 7068 	jr	Z, 00115$
      001E81 2B                    7069 	dec	hl
      001E82 2B                    7070 	dec	hl
      001E83 2A                    7071 	ld	a, (hl+)
      001E84 5F                    7072 	ld	e, a
      001E85 56                    7073 	ld	d, (hl)
      001E86 1A                    7074 	ld	a, (de)
      001E87 F5                    7075 	push	af
      001E88 0A                    7076 	ld	a, (bc)
      001E89 5F                    7077 	ld	e, a
      001E8A F1                    7078 	pop	af
      001E8B 93                    7079 	sub	a, e
      001E8C 6F                    7080 	ld	l, a
                                   7081 ;	spillPairReg hl
                                   7082 ;	spillPairReg hl
                                   7083 ;src/main.c:318: if (value >= 0) return value;
      001E8D CB 7D                 7084 	bit	7, l
      001E8F 28 03                 7085 	jr	Z, 00161$
                                   7086 ;src/main.c:319: else return - value;
      001E91 AF                    7087 	xor	a, a
      001E92 95                    7088 	sub	a, l
      001E93 6F                    7089 	ld	l, a
                                   7090 ;	spillPairReg hl
                                   7091 ;	spillPairReg hl
                                   7092 ;src/main.c:739: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001E94                       7093 00161$:
      001E94 5D                    7094 	ld	e, l
      001E95 3E 08                 7095 	ld	a,#0x08
      001E97 57                    7096 	ld	d,a
      001E98 95                    7097 	sub	a, l
      001E99 CB 7B                 7098 	bit	7, e
      001E9B 28 07                 7099 	jr	Z, 00302$
      001E9D CB 7A                 7100 	bit	7, d
      001E9F 20 08                 7101 	jr	NZ, 00303$
      001EA1 BF                    7102 	cp	a, a
      001EA2 18 05                 7103 	jr	00303$
      001EA4                       7104 00302$:
      001EA4 CB 7A                 7105 	bit	7, d
      001EA6 28 01                 7106 	jr	Z, 00303$
      001EA8 37                    7107 	scf
      001EA9                       7108 00303$:
      001EA9 30 31                 7109 	jr	NC, 00111$
      001EAB                       7110 00115$:
                                   7111 ;src/main.c:740: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001EAB F8 0A                 7112 	ldhl	sp,	#10
      001EAD 7E                    7113 	ld	a, (hl)
      001EAE B7                    7114 	or	a, a
      001EAF CAr49r1F              7115 	jp	Z, 00122$
      001EB2 F8 03                 7116 	ldhl	sp,#3
      001EB4 2A                    7117 	ld	a, (hl+)
      001EB5 5F                    7118 	ld	e, a
      001EB6 56                    7119 	ld	d, (hl)
      001EB7 1A                    7120 	ld	a, (de)
      001EB8 F5                    7121 	push	af
      001EB9 0A                    7122 	ld	a, (bc)
      001EBA 4F                    7123 	ld	c, a
      001EBB F1                    7124 	pop	af
      001EBC 91                    7125 	sub	a, c
      001EBD 4F                    7126 	ld	c, a
                                   7127 ;src/main.c:318: if (value >= 0) return value;
      001EBE CB 79                 7128 	bit	7, c
      001EC0 28 03                 7129 	jr	Z, 00165$
                                   7130 ;src/main.c:319: else return - value;
      001EC2 AF                    7131 	xor	a, a
      001EC3 91                    7132 	sub	a, c
      001EC4 4F                    7133 	ld	c, a
                                   7134 ;src/main.c:740: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001EC5                       7135 00165$:
      001EC5 59                    7136 	ld	e, c
      001EC6 3E 10                 7137 	ld	a,#0x10
      001EC8 57                    7138 	ld	d,a
      001EC9 91                    7139 	sub	a, c
      001ECA CB 7B                 7140 	bit	7, e
      001ECC 28 07                 7141 	jr	Z, 00304$
      001ECE CB 7A                 7142 	bit	7, d
      001ED0 20 08                 7143 	jr	NZ, 00305$
      001ED2 BF                    7144 	cp	a, a
      001ED3 18 05                 7145 	jr	00305$
      001ED5                       7146 00304$:
      001ED5 CB 7A                 7147 	bit	7, d
      001ED7 28 01                 7148 	jr	Z, 00305$
      001ED9 37                    7149 	scf
      001EDA                       7150 00305$:
      001EDA 38 6D                 7151 	jr	C, 00122$
      001EDC                       7152 00111$:
                                   7153 ;src/main.c:743: set_sprite_tile(10+(i<<1), 0x7f);
      001EDC F8 02                 7154 	ldhl	sp,	#2
      001EDE 7E                    7155 	ld	a, (hl)
      001EDF 87                    7156 	add	a, a
      001EE0 4F                    7157 	ld	c, a
      001EE1 C6 0A                 7158 	add	a, #0x0a
                                   7159 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001EE3 6F                    7160 	ld	l, a
                                   7161 ;	spillPairReg hl
                                   7162 ;	spillPairReg hl
      001EE4 26 00                 7163 	ld	h, #0x00
                                   7164 ;	spillPairReg hl
                                   7165 ;	spillPairReg hl
      001EE6 29                    7166 	add	hl, hl
      001EE7 29                    7167 	add	hl, hl
      001EE8 11r00r00              7168 	ld	de, #_shadow_OAM
      001EEB 19                    7169 	add	hl, de
      001EEC 23                    7170 	inc	hl
      001EED 23                    7171 	inc	hl
      001EEE 36 7F                 7172 	ld	(hl), #0x7f
                                   7173 ;src/main.c:744: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001EF0 79                    7174 	ld	a, c
      001EF1 C6 0B                 7175 	add	a, #0x0b
      001EF3 4F                    7176 	ld	c, a
                                   7177 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001EF4 26 00                 7178 	ld	h, #0x00
                                   7179 ;	spillPairReg hl
                                   7180 ;	spillPairReg hl
      001EF6 69                    7181 	ld	l, c
      001EF7 29                    7182 	add	hl, hl
      001EF8 29                    7183 	add	hl, hl
      001EF9 11r00r00              7184 	ld	de, #_shadow_OAM
      001EFC 19                    7185 	add	hl, de
      001EFD 23                    7186 	inc	hl
      001EFE 23                    7187 	inc	hl
      001EFF 36 7F                 7188 	ld	(hl), #0x7f
                                   7189 ;src/main.c:745: eptr->alive = 0;
      001F01 D1                    7190 	pop	de
      001F02 D5                    7191 	push	de
      001F03 21 09 00              7192 	ld	hl, #0x0009
      001F06 19                    7193 	add	hl, de
      001F07 4D                    7194 	ld	c, l
      001F08 44                    7195 	ld	b, h
      001F09 AF                    7196 	xor	a, a
      001F0A 02                    7197 	ld	(bc), a
                                   7198 ;src/main.c:746: eptr->visible = 0;
      001F0B D1                    7199 	pop	de
      001F0C D5                    7200 	push	de
      001F0D 21 0A 00              7201 	ld	hl, #0x000a
      001F10 19                    7202 	add	hl, de
      001F11 4D                    7203 	ld	c, l
      001F12 44                    7204 	ld	b, h
      001F13 AF                    7205 	xor	a, a
      001F14 02                    7206 	ld	(bc), a
                                   7207 ;src/main.c:747: initEnemies(0);
      001F15 AF                    7208 	xor	a, a
      001F16 F5                    7209 	push	af
      001F17 33                    7210 	inc	sp
      001F18 CDr85r0C              7211 	call	_initEnemies
      001F1B 33                    7212 	inc	sp
                                   7213 ;src/main.c:748: set_sprite_tile(30+j, 0x7f);
      001F1C F8 0E                 7214 	ldhl	sp,	#14
      001F1E 7E                    7215 	ld	a, (hl)
      001F1F C6 1E                 7216 	add	a, #0x1e
      001F21 4F                    7217 	ld	c, a
                                   7218 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001F22 26 00                 7219 	ld	h, #0x00
                                   7220 ;	spillPairReg hl
                                   7221 ;	spillPairReg hl
      001F24 69                    7222 	ld	l, c
      001F25 29                    7223 	add	hl, hl
      001F26 29                    7224 	add	hl, hl
      001F27 11r00r00              7225 	ld	de, #_shadow_OAM
      001F2A 19                    7226 	add	hl, de
      001F2B 23                    7227 	inc	hl
      001F2C 23                    7228 	inc	hl
      001F2D 36 7F                 7229 	ld	(hl), #0x7f
                                   7230 ;src/main.c:749: playSound(0);
      001F2F AF                    7231 	xor	a, a
      001F30 F5                    7232 	push	af
      001F31 33                    7233 	inc	sp
      001F32 CDr22r0C              7234 	call	_playSound
      001F35 33                    7235 	inc	sp
                                   7236 ;src/main.c:750: pptr->active = 0;
      001F36 F8 0C                 7237 	ldhl	sp,#12
      001F38 2A                    7238 	ld	a, (hl+)
      001F39 5F                    7239 	ld	e, a
      001F3A 56                    7240 	ld	d, (hl)
      001F3B 21 09 00              7241 	ld	hl, #0x0009
      001F3E 19                    7242 	add	hl, de
      001F3F 4D                    7243 	ld	c, l
      001F40 44                    7244 	ld	b, h
      001F41 AF                    7245 	xor	a, a
      001F42 02                    7246 	ld	(bc), a
                                   7247 ;src/main.c:751: incrementScore();
      001F43 CDrDFr09              7248 	call	_incrementScore
                                   7249 ;src/main.c:752: updateScore();
      001F46 CDr73r09              7250 	call	_updateScore
      001F49                       7251 00122$:
                                   7252 ;src/main.c:757: j++;
      001F49 F8 0E                 7253 	ldhl	sp,	#14
      001F4B 34                    7254 	inc	(hl)
                                   7255 ;src/main.c:758: pptr++;
      001F4C 2B                    7256 	dec	hl
      001F4D 2B                    7257 	dec	hl
      001F4E 2A                    7258 	ld	a, (hl+)
      001F4F 5F                    7259 	ld	e, a
      001F50 56                    7260 	ld	d, (hl)
      001F51 21 0C 00              7261 	ld	hl, #0x000c
      001F54 19                    7262 	add	hl, de
      001F55 E5                    7263 	push	hl
      001F56 7D                    7264 	ld	a, l
      001F57 F8 0E                 7265 	ldhl	sp,	#14
      001F59 77                    7266 	ld	(hl), a
      001F5A E1                    7267 	pop	hl
      001F5B 7C                    7268 	ld	a, h
      001F5C F8 0D                 7269 	ldhl	sp,	#13
      001F5E 77                    7270 	ld	(hl), a
      001F5F C3rD3r1D              7271 	jp	00123$
      001F62                       7272 00127$:
                                   7273 ;src/main.c:762: if (enemyCollisionCount == 0) {
      001F62 FArA4r00              7274 	ld	a, (#_enemyCollisionCount)
      001F65 B7                    7275 	or	a, a
      001F66 20 09                 7276 	jr	NZ, 00130$
                                   7277 ;src/main.c:763: enemyCollisionCount = ENEMYCOUNT - 1;
      001F68 FAr4Dr08              7278 	ld	a, (#_ENEMYCOUNT)
      001F6B 3D                    7279 	dec	a
      001F6C EArA4r00              7280 	ld	(#_enemyCollisionCount),a
      001F6F 18 04                 7281 	jr	00169$
      001F71                       7282 00130$:
                                   7283 ;src/main.c:766: enemyCollisionCount--;
      001F71 21rA4r00              7284 	ld	hl, #_enemyCollisionCount
      001F74 35                    7285 	dec	(hl)
      001F75                       7286 00169$:
                                   7287 ;src/main.c:771: }
      001F75 E8 0F                 7288 	add	sp, #15
      001F77 C9                    7289 	ret
                                   7290 ;src/main.c:774: void setGunIcon() {
                                   7291 ;	---------------------------------
                                   7292 ; Function setGunIcon
                                   7293 ; ---------------------------------
      001F78                       7294 _setGunIcon::
                                   7295 ;src/main.c:776: if (currentGun == 0) {
      001F78 FArA6r00              7296 	ld	a, (#_currentGun)
      001F7B B7                    7297 	or	a, a
      001F7C 20 1B                 7298 	jr	NZ, 00102$
                                   7299 ;src/main.c:777: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      001F7E 01rADr00              7300 	ld	bc, #_gunMap+0
      001F81 79                    7301 	ld	a, c
      001F82 21rA5r00              7302 	ld	hl, #_gunLevel
      001F85 86                    7303 	add	a, (hl)
      001F86 4F                    7304 	ld	c, a
      001F87 30 01                 7305 	jr	NC, 00111$
      001F89 04                    7306 	inc	b
      001F8A                       7307 00111$:
      001F8A C5                    7308 	push	bc
      001F8B 21 01 01              7309 	ld	hl, #0x101
      001F8E E5                    7310 	push	hl
      001F8F 21 0F 00              7311 	ld	hl, #0x0f
      001F92 E5                    7312 	push	hl
      001F93 CDr00r00              7313 	call	_set_win_tiles
      001F96 E8 06                 7314 	add	sp, #6
      001F98 C9                    7315 	ret
      001F99                       7316 00102$:
                                   7317 ;src/main.c:780: set_win_tiles(15, 0,1,1,gunMap+2);
      001F99 11rAFr00              7318 	ld	de, #(_gunMap + 2)
      001F9C D5                    7319 	push	de
      001F9D 21 01 01              7320 	ld	hl, #0x101
      001FA0 E5                    7321 	push	hl
      001FA1 21 0F 00              7322 	ld	hl, #0x0f
      001FA4 E5                    7323 	push	hl
      001FA5 CDr00r00              7324 	call	_set_win_tiles
      001FA8 E8 06                 7325 	add	sp, #6
                                   7326 ;src/main.c:782: }
      001FAA C9                    7327 	ret
                                   7328 ;src/main.c:792: void fire() {
                                   7329 ;	---------------------------------
                                   7330 ; Function fire
                                   7331 ; ---------------------------------
      001FAB                       7332 _fire::
      001FAB E8 FB                 7333 	add	sp, #-5
                                   7334 ;src/main.c:794: oldestProjectile += 1;
      001FAD 21r90r00              7335 	ld	hl, #_oldestProjectile
      001FB0 34                    7336 	inc	(hl)
      001FB1 7E                    7337 	ld	a, (hl)
                                   7338 ;src/main.c:795: if (oldestProjectile >= PROJECTILECOUNT) {
      001FB2 21r5Er08              7339 	ld	hl, #_PROJECTILECOUNT
      001FB5 4E                    7340 	ld	c, (hl)
      001FB6 21r90r00              7341 	ld	hl, #_oldestProjectile
      001FB9 7E                    7342 	ld	a, (hl)
      001FBA 91                    7343 	sub	a, c
      001FBB 38 02                 7344 	jr	C, 00102$
                                   7345 ;src/main.c:796: oldestProjectile = 0;
      001FBD 36 00                 7346 	ld	(hl), #0x00
      001FBF                       7347 00102$:
                                   7348 ;src/main.c:799: if (currentGun == 0) {
      001FBF FArA6r00              7349 	ld	a, (#_currentGun)
      001FC2 B7                    7350 	or	a, a
      001FC3 20 3A                 7351 	jr	NZ, 00107$
                                   7352 ;src/main.c:801: projectiles[oldestProjectile] = singleGun;
      001FC5 21r90r00              7353 	ld	hl, #_oldestProjectile
      001FC8 4E                    7354 	ld	c, (hl)
      001FC9 06 00                 7355 	ld	b, #0x00
      001FCB 69                    7356 	ld	l, c
      001FCC 60                    7357 	ld	h, b
      001FCD 29                    7358 	add	hl, hl
      001FCE 09                    7359 	add	hl, bc
      001FCF 29                    7360 	add	hl, hl
      001FD0 29                    7361 	add	hl, hl
      001FD1 4D                    7362 	ld	c, l
      001FD2 44                    7363 	ld	b, h
                                   7364 ;src/main.c:800: if (gunLevel == 0) {
      001FD3 FArA5r00              7365 	ld	a, (#_gunLevel)
      001FD6 B7                    7366 	or	a, a
      001FD7 20 14                 7367 	jr	NZ, 00104$
                                   7368 ;src/main.c:801: projectiles[oldestProjectile] = singleGun;
      001FD9 11r60r00              7369 	ld	de, #_singleGun+0
      001FDC 21rA0r00              7370 	ld	hl, #_projectiles
      001FDF 09                    7371 	add	hl, bc
      001FE0 01 0C 00              7372 	ld	bc, #0x000c
      001FE3 C5                    7373 	push	bc
      001FE4 D5                    7374 	push	de
      001FE5 E5                    7375 	push	hl
      001FE6 CDr00r00              7376 	call	___memcpy
      001FE9 E8 06                 7377 	add	sp, #6
      001FEB 18 12                 7378 	jr	00107$
      001FED                       7379 00104$:
                                   7380 ;src/main.c:804: projectiles[oldestProjectile] = doubleGun;
      001FED 11r6Cr00              7381 	ld	de, #_doubleGun+0
      001FF0 21rA0r00              7382 	ld	hl, #_projectiles
      001FF3 09                    7383 	add	hl, bc
      001FF4 01 0C 00              7384 	ld	bc, #0x000c
      001FF7 C5                    7385 	push	bc
      001FF8 D5                    7386 	push	de
      001FF9 E5                    7387 	push	hl
      001FFA CDr00r00              7388 	call	___memcpy
      001FFD E8 06                 7389 	add	sp, #6
      001FFF                       7390 00107$:
                                   7391 ;src/main.c:807: if (currentGun == 1) {
      001FFF FArA6r00              7392 	ld	a, (#_currentGun)
      002002 3D                    7393 	dec	a
      002003 20 45                 7394 	jr	NZ, 00113$
                                   7395 ;src/main.c:808: if (missiles == 0) {
      002005 FArA7r00              7396 	ld	a, (#_missiles)
      002008 B7                    7397 	or	a, a
      002009 20 0B                 7398 	jr	NZ, 00109$
                                   7399 ;src/main.c:809: currentGun = 0;
      00200B 21rA6r00              7400 	ld	hl, #_currentGun
      00200E 36 00                 7401 	ld	(hl), #0x00
                                   7402 ;src/main.c:810: setGunIcon();
      002010 CDr78r1F              7403 	call	_setGunIcon
                                   7404 ;src/main.c:811: return;
      002013 C3r41r25              7405 	jp	00154$
      002016                       7406 00109$:
                                   7407 ;src/main.c:814: projectiles[oldestProjectile] = missile;
      002016 21r90r00              7408 	ld	hl, #_oldestProjectile
      002019 4E                    7409 	ld	c, (hl)
      00201A 06 00                 7410 	ld	b, #0x00
      00201C 69                    7411 	ld	l, c
      00201D 60                    7412 	ld	h, b
      00201E 29                    7413 	add	hl, hl
      00201F 09                    7414 	add	hl, bc
      002020 29                    7415 	add	hl, hl
      002021 29                    7416 	add	hl, hl
      002022 01rA0r00              7417 	ld	bc,#_projectiles
      002025 09                    7418 	add	hl,bc
      002026 11 0C 00              7419 	ld	de, #0x000c
      002029 D5                    7420 	push	de
      00202A 11r78r00              7421 	ld	de, #_missile
      00202D D5                    7422 	push	de
      00202E E5                    7423 	push	hl
      00202F CDr00r00              7424 	call	___memcpy
      002032 E8 06                 7425 	add	sp, #6
                                   7426 ;src/main.c:815: updateMissileCount(-1);
      002034 3E FF                 7427 	ld	a, #0xff
      002036 F5                    7428 	push	af
      002037 33                    7429 	inc	sp
      002038 CDr9Dr09              7430 	call	_updateMissileCount
      00203B 33                    7431 	inc	sp
                                   7432 ;src/main.c:817: if (missiles == 0) {
      00203C FArA7r00              7433 	ld	a, (#_missiles)
      00203F B7                    7434 	or	a, a
      002040 20 08                 7435 	jr	NZ, 00113$
                                   7436 ;src/main.c:818: currentGun = 0;
      002042 21rA6r00              7437 	ld	hl, #_currentGun
      002045 36 00                 7438 	ld	(hl), #0x00
                                   7439 ;src/main.c:819: setGunIcon();
      002047 CDr78r1F              7440 	call	_setGunIcon
      00204A                       7441 00113$:
                                   7442 ;src/main.c:822: projectiles[oldestProjectile].x = playerDrawX;
      00204A 21r90r00              7443 	ld	hl, #_oldestProjectile
      00204D 4E                    7444 	ld	c, (hl)
      00204E 06 00                 7445 	ld	b, #0x00
      002050 69                    7446 	ld	l, c
      002051 60                    7447 	ld	h, b
      002052 29                    7448 	add	hl, hl
      002053 09                    7449 	add	hl, bc
      002054 29                    7450 	add	hl, hl
      002055 29                    7451 	add	hl, hl
      002056 01rA0r00              7452 	ld	bc,#_projectiles
      002059 09                    7453 	add	hl,bc
      00205A E5                    7454 	push	hl
      00205B FAr9Ar00              7455 	ld	a, (#_playerDrawX)
      00205E E1                    7456 	pop	hl
      00205F 0E 00                 7457 	ld	c, #0x00
      002061 22                    7458 	ld	(hl+), a
      002062 71                    7459 	ld	(hl), c
                                   7460 ;src/main.c:823: projectiles[oldestProjectile].y = playerDrawY;
      002063 21r90r00              7461 	ld	hl, #_oldestProjectile
      002066 4E                    7462 	ld	c, (hl)
      002067 06 00                 7463 	ld	b, #0x00
      002069 69                    7464 	ld	l, c
      00206A 60                    7465 	ld	h, b
      00206B 29                    7466 	add	hl, hl
      00206C 09                    7467 	add	hl, bc
      00206D 29                    7468 	add	hl, hl
      00206E 29                    7469 	add	hl, hl
      00206F 01rA0r00              7470 	ld	bc,#_projectiles
      002072 09                    7471 	add	hl,bc
      002073 23                    7472 	inc	hl
      002074 23                    7473 	inc	hl
      002075 E5                    7474 	push	hl
      002076 FAr9Br00              7475 	ld	a, (#_playerDrawY)
      002079 E1                    7476 	pop	hl
      00207A 0E 00                 7477 	ld	c, #0x00
      00207C 22                    7478 	ld	(hl+), a
      00207D 71                    7479 	ld	(hl), c
                                   7480 ;src/main.c:824: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      00207E 21r90r00              7481 	ld	hl, #_oldestProjectile
      002081 4E                    7482 	ld	c, (hl)
      002082 06 00                 7483 	ld	b, #0x00
      002084 69                    7484 	ld	l, c
      002085 60                    7485 	ld	h, b
      002086 29                    7486 	add	hl, hl
      002087 09                    7487 	add	hl, bc
      002088 29                    7488 	add	hl, hl
      002089 29                    7489 	add	hl, hl
      00208A 01rA0r00              7490 	ld	bc,#_projectiles
      00208D 09                    7491 	add	hl,bc
      00208E 5D                    7492 	ld	e, l
      00208F 54                    7493 	ld	d, h
      002090 21 05 00              7494 	ld	hl, #0x0005
      002093 19                    7495 	add	hl, de
      002094 4D                    7496 	ld	c, l
      002095 44                    7497 	ld	b, h
      002096 21 07 00              7498 	ld	hl, #0x0007
      002099 19                    7499 	add	hl, de
      00209A 7E                    7500 	ld	a, (hl)
      00209B C5                    7501 	push	bc
      00209C F5                    7502 	push	af
      00209D 33                    7503 	inc	sp
      00209E FAr92r00              7504 	ld	a, (#_xDir)
      0020A1 F5                    7505 	push	af
      0020A2 33                    7506 	inc	sp
      0020A3 CDr00r00              7507 	call	__muluschar
      0020A6 E1                    7508 	pop	hl
      0020A7 7B                    7509 	ld	a, e
      0020A8 C1                    7510 	pop	bc
      0020A9 02                    7511 	ld	(bc), a
                                   7512 ;src/main.c:825: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      0020AA 21r90r00              7513 	ld	hl, #_oldestProjectile
      0020AD 4E                    7514 	ld	c, (hl)
      0020AE 06 00                 7515 	ld	b, #0x00
      0020B0 69                    7516 	ld	l, c
      0020B1 60                    7517 	ld	h, b
      0020B2 29                    7518 	add	hl, hl
      0020B3 09                    7519 	add	hl, bc
      0020B4 29                    7520 	add	hl, hl
      0020B5 29                    7521 	add	hl, hl
      0020B6 01rA0r00              7522 	ld	bc,#_projectiles
      0020B9 09                    7523 	add	hl,bc
      0020BA 5D                    7524 	ld	e, l
      0020BB 54                    7525 	ld	d, h
      0020BC 21 06 00              7526 	ld	hl, #0x0006
      0020BF 19                    7527 	add	hl, de
      0020C0 4D                    7528 	ld	c, l
      0020C1 44                    7529 	ld	b, h
      0020C2 21 07 00              7530 	ld	hl, #0x0007
      0020C5 19                    7531 	add	hl, de
      0020C6 7E                    7532 	ld	a, (hl)
      0020C7 C5                    7533 	push	bc
      0020C8 F5                    7534 	push	af
      0020C9 33                    7535 	inc	sp
      0020CA FAr93r00              7536 	ld	a, (#_yDir)
      0020CD F5                    7537 	push	af
      0020CE 33                    7538 	inc	sp
      0020CF CDr00r00              7539 	call	__muluschar
      0020D2 E1                    7540 	pop	hl
      0020D3 7B                    7541 	ld	a, e
      0020D4 C1                    7542 	pop	bc
      0020D5 02                    7543 	ld	(bc), a
                                   7544 ;src/main.c:794: oldestProjectile += 1;
      0020D6 FAr90r00              7545 	ld	a, (#_oldestProjectile)
      0020D9 F8 04                 7546 	ldhl	sp,	#4
      0020DB 77                    7547 	ld	(hl), a
                                   7548 ;src/main.c:801: projectiles[oldestProjectile] = singleGun;
      0020DC 21r90r00              7549 	ld	hl, #_oldestProjectile
      0020DF 4E                    7550 	ld	c, (hl)
      0020E0 06 00                 7551 	ld	b, #0x00
      0020E2 69                    7552 	ld	l, c
      0020E3 60                    7553 	ld	h, b
      0020E4 29                    7554 	add	hl, hl
      0020E5 09                    7555 	add	hl, bc
      0020E6 29                    7556 	add	hl, hl
      0020E7 29                    7557 	add	hl, hl
                                   7558 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0020E8 01rA0r00              7559 	ld	bc,#_projectiles
      0020EB 09                    7560 	add	hl,bc
      0020EC 4D                    7561 	ld	c, l
      0020ED 44                    7562 	ld	b, h
      0020EE F8 04                 7563 	ldhl	sp,	#4
      0020F0 3A                    7564 	ld	a, (hl-)
      0020F1 C6 1E                 7565 	add	a, #0x1e
      0020F3 77                    7566 	ld	(hl), a
      0020F4 21 0B 00              7567 	ld	hl, #0x000b
      0020F7 09                    7568 	add	hl, bc
      0020F8 7E                    7569 	ld	a, (hl)
      0020F9 F8 04                 7570 	ldhl	sp,	#4
      0020FB 77                    7571 	ld	(hl), a
                                   7572 ;src/main.c:829: if (yDir != 0 && xDir == 0) {
      0020FC FAr93r00              7573 	ld	a, (#_yDir)
      0020FF B7                    7574 	or	a, a
      002100 28 6F                 7575 	jr	Z, 00140$
      002102 FAr92r00              7576 	ld	a, (#_xDir)
      002105 B7                    7577 	or	a, a
      002106 20 69                 7578 	jr	NZ, 00140$
                                   7579 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002108 F8 04                 7580 	ldhl	sp,	#4
      00210A 3A                    7581 	ld	a, (hl-)
      00210B 4F                    7582 	ld	c, a
                                   7583 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00210C 6E                    7584 	ld	l, (hl)
                                   7585 ;	spillPairReg hl
                                   7586 ;	spillPairReg hl
      00210D 26 00                 7587 	ld	h, #0x00
                                   7588 ;	spillPairReg hl
                                   7589 ;	spillPairReg hl
      00210F 29                    7590 	add	hl, hl
      002110 29                    7591 	add	hl, hl
      002111 11r00r00              7592 	ld	de, #_shadow_OAM
      002114 19                    7593 	add	hl, de
      002115 23                    7594 	inc	hl
      002116 23                    7595 	inc	hl
      002117 71                    7596 	ld	(hl), c
                                   7597 ;src/main.c:794: oldestProjectile += 1;
      002118 FAr90r00              7598 	ld	a, (#_oldestProjectile)
                                   7599 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      00211B C6 1E                 7600 	add	a, #0x1e
      00211D 4F                    7601 	ld	c, a
                                   7602 ;src/main.c:831: if (yDir == 1) {
      00211E FAr93r00              7603 	ld	a, (#_yDir)
                                   7604 ;src/main.c:832: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   7605 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002121 3D                    7606 	dec	a
      002122 20 26                 7607 	jr	NZ, 00115$
      002124 67                    7608 	ld	h,a
                                   7609 ;	spillPairReg hl
                                   7610 ;	spillPairReg hl
      002125 69                    7611 	ld	l, c
      002126 29                    7612 	add	hl, hl
      002127 29                    7613 	add	hl, hl
      002128 11r00r00              7614 	ld	de, #_shadow_OAM
      00212B 19                    7615 	add	hl, de
      00212C 23                    7616 	inc	hl
      00212D 23                    7617 	inc	hl
      00212E 23                    7618 	inc	hl
      00212F 36 40                 7619 	ld	(hl), #0x40
                                   7620 ;src/main.c:833: projectiles[oldestProjectile].offset = 4;
      002131 21r90r00              7621 	ld	hl, #_oldestProjectile
      002134 4E                    7622 	ld	c, (hl)
      002135 06 00                 7623 	ld	b, #0x00
      002137 69                    7624 	ld	l, c
      002138 60                    7625 	ld	h, b
      002139 29                    7626 	add	hl, hl
      00213A 09                    7627 	add	hl, bc
      00213B 29                    7628 	add	hl, hl
      00213C 29                    7629 	add	hl, hl
      00213D 01rA0r00              7630 	ld	bc,#_projectiles
      002140 09                    7631 	add	hl,bc
      002141 01 04 00              7632 	ld	bc, #0x0004
      002144 09                    7633 	add	hl, bc
      002145 36 04                 7634 	ld	(hl), #0x04
      002147 C3r1Cr25              7635 	jp	00141$
      00214A                       7636 00115$:
                                   7637 ;src/main.c:836: set_sprite_prop(30+oldestProjectile, 0); 
                                   7638 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00214A 26 00                 7639 	ld	h, #0x00
                                   7640 ;	spillPairReg hl
                                   7641 ;	spillPairReg hl
      00214C 69                    7642 	ld	l, c
      00214D 29                    7643 	add	hl, hl
      00214E 29                    7644 	add	hl, hl
      00214F 11r00r00              7645 	ld	de, #_shadow_OAM
      002152 19                    7646 	add	hl, de
      002153 23                    7647 	inc	hl
      002154 23                    7648 	inc	hl
      002155 23                    7649 	inc	hl
      002156 36 00                 7650 	ld	(hl), #0x00
                                   7651 ;src/main.c:837: projectiles[oldestProjectile].offset = 12;
      002158 21r90r00              7652 	ld	hl, #_oldestProjectile
      00215B 4E                    7653 	ld	c, (hl)
      00215C 06 00                 7654 	ld	b, #0x00
      00215E 69                    7655 	ld	l, c
      00215F 60                    7656 	ld	h, b
      002160 29                    7657 	add	hl, hl
      002161 09                    7658 	add	hl, bc
      002162 29                    7659 	add	hl, hl
      002163 29                    7660 	add	hl, hl
      002164 01rA0r00              7661 	ld	bc,#_projectiles
      002167 09                    7662 	add	hl,bc
      002168 01 04 00              7663 	ld	bc, #0x0004
      00216B 09                    7664 	add	hl, bc
      00216C 36 0C                 7665 	ld	(hl), #0x0c
      00216E C3r1Cr25              7666 	jp	00141$
      002171                       7667 00140$:
                                   7668 ;src/main.c:841: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   7669 ;src/main.c:840: else if (xDir != 0 && yDir == 0) {
      002171 FAr92r00              7670 	ld	a, (#_xDir)
      002174 B7                    7671 	or	a, a
      002175 CArB9r22              7672 	jp	Z, 00136$
      002178 FAr93r00              7673 	ld	a, (#_yDir)
      00217B B7                    7674 	or	a, a
      00217C C2rB9r22              7675 	jp	NZ, 00136$
                                   7676 ;src/main.c:841: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      00217F F8 04                 7677 	ldhl	sp,	#4
      002181 34                    7678 	inc	(hl)
      002182 34                    7679 	inc	(hl)
      002183 2B                    7680 	dec	hl
                                   7681 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002184 3A                    7682 	ld	a, (hl-)
      002185 22                    7683 	ld	(hl+), a
      002186 36 00                 7684 	ld	(hl), #0x00
      002188 3E 02                 7685 	ld	a, #0x02
      00218A                       7686 00260$:
      00218A F8 02                 7687 	ldhl	sp,	#2
      00218C CB 26                 7688 	sla	(hl)
      00218E 23                    7689 	inc	hl
      00218F CB 16                 7690 	rl	(hl)
      002191 3D                    7691 	dec	a
      002192 20 F6                 7692 	jr	NZ, 00260$
      002194 2B                    7693 	dec	hl
      002195 2A                    7694 	ld	a, (hl+)
      002196 5F                    7695 	ld	e, a
      002197 56                    7696 	ld	d, (hl)
      002198 21r00r00              7697 	ld	hl, #_shadow_OAM
      00219B 19                    7698 	add	hl, de
      00219C 33                    7699 	inc	sp
      00219D 33                    7700 	inc	sp
      00219E 5D                    7701 	ld	e, l
      00219F 54                    7702 	ld	d, h
      0021A0 D5                    7703 	push	de
      0021A1 21 02 00              7704 	ld	hl, #0x0002
      0021A4 19                    7705 	add	hl, de
      0021A5 E5                    7706 	push	hl
      0021A6 7D                    7707 	ld	a, l
      0021A7 F8 04                 7708 	ldhl	sp,	#4
      0021A9 77                    7709 	ld	(hl), a
      0021AA E1                    7710 	pop	hl
      0021AB 7C                    7711 	ld	a, h
      0021AC F8 03                 7712 	ldhl	sp,	#3
      0021AE 32                    7713 	ld	(hl-), a
      0021AF 2A                    7714 	ld	a, (hl+)
      0021B0 5F                    7715 	ld	e, a
      0021B1 2A                    7716 	ld	a, (hl+)
      0021B2 57                    7717 	ld	d, a
      0021B3 7E                    7718 	ld	a, (hl)
      0021B4 12                    7719 	ld	(de), a
                                   7720 ;src/main.c:794: oldestProjectile += 1;
      0021B5 FAr90r00              7721 	ld	a, (#_oldestProjectile)
      0021B8 F8 04                 7722 	ldhl	sp,	#4
      0021BA 77                    7723 	ld	(hl), a
                                   7724 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0021BB 7E                    7725 	ld	a, (hl)
      0021BC C6 1E                 7726 	add	a, #0x1e
      0021BE 77                    7727 	ld	(hl), a
                                   7728 ;src/main.c:842: if (xDir == 1) {
      0021BF FAr92r00              7729 	ld	a, (#_xDir)
      0021C2 3D                    7730 	dec	a
      0021C3 20 7A                 7731 	jr	NZ, 00118$
                                   7732 ;src/main.c:843: set_sprite_prop(30+oldestProjectile, 0);
      0021C5 F8 04                 7733 	ldhl	sp,	#4
                                   7734 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0021C7 3A                    7735 	ld	a, (hl-)
      0021C8 22                    7736 	ld	(hl+), a
      0021C9 36 00                 7737 	ld	(hl), #0x00
      0021CB 3E 02                 7738 	ld	a, #0x02
      0021CD                       7739 00263$:
      0021CD F8 03                 7740 	ldhl	sp,	#3
      0021CF CB 26                 7741 	sla	(hl)
      0021D1 23                    7742 	inc	hl
      0021D2 CB 16                 7743 	rl	(hl)
      0021D4 3D                    7744 	dec	a
      0021D5 20 F6                 7745 	jr	NZ, 00263$
      0021D7 2B                    7746 	dec	hl
      0021D8 2A                    7747 	ld	a, (hl+)
      0021D9 5F                    7748 	ld	e, a
      0021DA 56                    7749 	ld	d, (hl)
      0021DB 21r00r00              7750 	ld	hl, #_shadow_OAM
      0021DE 19                    7751 	add	hl, de
      0021DF E5                    7752 	push	hl
      0021E0 7D                    7753 	ld	a, l
      0021E1 F8 03                 7754 	ldhl	sp,	#3
      0021E3 77                    7755 	ld	(hl), a
      0021E4 E1                    7756 	pop	hl
      0021E5 7C                    7757 	ld	a, h
      0021E6 F8 02                 7758 	ldhl	sp,	#2
      0021E8 32                    7759 	ld	(hl-), a
      0021E9 2A                    7760 	ld	a, (hl+)
      0021EA 5F                    7761 	ld	e, a
      0021EB 56                    7762 	ld	d, (hl)
      0021EC 21 03 00              7763 	ld	hl, #0x0003
      0021EF 19                    7764 	add	hl, de
      0021F0 E5                    7765 	push	hl
      0021F1 7D                    7766 	ld	a, l
      0021F2 F8 05                 7767 	ldhl	sp,	#5
      0021F4 77                    7768 	ld	(hl), a
      0021F5 E1                    7769 	pop	hl
      0021F6 7C                    7770 	ld	a, h
      0021F7 F8 04                 7771 	ldhl	sp,	#4
      0021F9 32                    7772 	ld	(hl-), a
      0021FA 2A                    7773 	ld	a,	(hl+)
      0021FB 66                    7774 	ld	h, (hl)
      0021FC 6F                    7775 	ld	l, a
      0021FD 36 00                 7776 	ld	(hl), #0x00
                                   7777 ;src/main.c:844: projectiles[oldestProjectile].offset = 12;
      0021FF 21r90r00              7778 	ld	hl, #_oldestProjectile
      002202 4E                    7779 	ld	c, (hl)
      002203 06 00                 7780 	ld	b, #0x00
      002205 69                    7781 	ld	l, c
      002206 60                    7782 	ld	h, b
      002207 29                    7783 	add	hl, hl
      002208 09                    7784 	add	hl, bc
      002209 29                    7785 	add	hl, hl
      00220A 29                    7786 	add	hl, hl
      00220B E5                    7787 	push	hl
      00220C 7D                    7788 	ld	a, l
      00220D F8 05                 7789 	ldhl	sp,	#5
      00220F 77                    7790 	ld	(hl), a
      002210 E1                    7791 	pop	hl
      002211 7C                    7792 	ld	a, h
      002212 F8 04                 7793 	ldhl	sp,	#4
      002214 32                    7794 	ld	(hl-), a
      002215 2A                    7795 	ld	a, (hl+)
      002216 5F                    7796 	ld	e, a
      002217 56                    7797 	ld	d, (hl)
      002218 21rA0r00              7798 	ld	hl, #_projectiles
      00221B 19                    7799 	add	hl, de
      00221C E5                    7800 	push	hl
      00221D 7D                    7801 	ld	a, l
      00221E F8 03                 7802 	ldhl	sp,	#3
      002220 77                    7803 	ld	(hl), a
      002221 E1                    7804 	pop	hl
      002222 7C                    7805 	ld	a, h
      002223 F8 02                 7806 	ldhl	sp,	#2
      002225 32                    7807 	ld	(hl-), a
      002226 2A                    7808 	ld	a, (hl+)
      002227 5F                    7809 	ld	e, a
      002228 56                    7810 	ld	d, (hl)
      002229 21 04 00              7811 	ld	hl, #0x0004
      00222C 19                    7812 	add	hl, de
      00222D E5                    7813 	push	hl
      00222E 7D                    7814 	ld	a, l
      00222F F8 05                 7815 	ldhl	sp,	#5
      002231 77                    7816 	ld	(hl), a
      002232 E1                    7817 	pop	hl
      002233 7C                    7818 	ld	a, h
      002234 F8 04                 7819 	ldhl	sp,	#4
      002236 32                    7820 	ld	(hl-), a
      002237 2A                    7821 	ld	a,	(hl+)
      002238 66                    7822 	ld	h, (hl)
      002239 6F                    7823 	ld	l, a
      00223A 36 0C                 7824 	ld	(hl), #0x0c
      00223C C3r1Cr25              7825 	jp	00141$
      00223F                       7826 00118$:
                                   7827 ;src/main.c:847: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      00223F F8 04                 7828 	ldhl	sp,	#4
                                   7829 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002241 3A                    7830 	ld	a, (hl-)
      002242 22                    7831 	ld	(hl+), a
      002243 36 00                 7832 	ld	(hl), #0x00
      002245 3E 02                 7833 	ld	a, #0x02
      002247                       7834 00264$:
      002247 F8 03                 7835 	ldhl	sp,	#3
      002249 CB 26                 7836 	sla	(hl)
      00224B 23                    7837 	inc	hl
      00224C CB 16                 7838 	rl	(hl)
      00224E 3D                    7839 	dec	a
      00224F 20 F6                 7840 	jr	NZ, 00264$
      002251 2B                    7841 	dec	hl
      002252 2A                    7842 	ld	a, (hl+)
      002253 5F                    7843 	ld	e, a
      002254 56                    7844 	ld	d, (hl)
      002255 21r00r00              7845 	ld	hl, #_shadow_OAM
      002258 19                    7846 	add	hl, de
      002259 E5                    7847 	push	hl
      00225A 7D                    7848 	ld	a, l
      00225B F8 03                 7849 	ldhl	sp,	#3
      00225D 77                    7850 	ld	(hl), a
      00225E E1                    7851 	pop	hl
      00225F 7C                    7852 	ld	a, h
      002260 F8 02                 7853 	ldhl	sp,	#2
      002262 32                    7854 	ld	(hl-), a
      002263 2A                    7855 	ld	a, (hl+)
      002264 5F                    7856 	ld	e, a
      002265 56                    7857 	ld	d, (hl)
      002266 21 03 00              7858 	ld	hl, #0x0003
      002269 19                    7859 	add	hl, de
      00226A E5                    7860 	push	hl
      00226B 7D                    7861 	ld	a, l
      00226C F8 05                 7862 	ldhl	sp,	#5
      00226E 77                    7863 	ld	(hl), a
      00226F E1                    7864 	pop	hl
      002270 7C                    7865 	ld	a, h
      002271 F8 04                 7866 	ldhl	sp,	#4
      002273 32                    7867 	ld	(hl-), a
      002274 2A                    7868 	ld	a,	(hl+)
      002275 66                    7869 	ld	h, (hl)
      002276 6F                    7870 	ld	l, a
      002277 36 20                 7871 	ld	(hl), #0x20
                                   7872 ;src/main.c:848: projectiles[oldestProjectile].offset = 12;
      002279 21r90r00              7873 	ld	hl, #_oldestProjectile
      00227C 4E                    7874 	ld	c, (hl)
      00227D 06 00                 7875 	ld	b, #0x00
      00227F 69                    7876 	ld	l, c
      002280 60                    7877 	ld	h, b
      002281 29                    7878 	add	hl, hl
      002282 09                    7879 	add	hl, bc
      002283 29                    7880 	add	hl, hl
      002284 29                    7881 	add	hl, hl
      002285 E5                    7882 	push	hl
      002286 7D                    7883 	ld	a, l
      002287 F8 05                 7884 	ldhl	sp,	#5
      002289 77                    7885 	ld	(hl), a
      00228A E1                    7886 	pop	hl
      00228B 7C                    7887 	ld	a, h
      00228C F8 04                 7888 	ldhl	sp,	#4
      00228E 32                    7889 	ld	(hl-), a
      00228F 2A                    7890 	ld	a, (hl+)
      002290 5F                    7891 	ld	e, a
      002291 56                    7892 	ld	d, (hl)
      002292 21rA0r00              7893 	ld	hl, #_projectiles
      002295 19                    7894 	add	hl, de
      002296 E5                    7895 	push	hl
      002297 7D                    7896 	ld	a, l
      002298 F8 03                 7897 	ldhl	sp,	#3
      00229A 77                    7898 	ld	(hl), a
      00229B E1                    7899 	pop	hl
      00229C 7C                    7900 	ld	a, h
      00229D F8 02                 7901 	ldhl	sp,	#2
      00229F 32                    7902 	ld	(hl-), a
      0022A0 2A                    7903 	ld	a, (hl+)
      0022A1 5F                    7904 	ld	e, a
      0022A2 56                    7905 	ld	d, (hl)
      0022A3 21 04 00              7906 	ld	hl, #0x0004
      0022A6 19                    7907 	add	hl, de
      0022A7 E5                    7908 	push	hl
      0022A8 7D                    7909 	ld	a, l
      0022A9 F8 05                 7910 	ldhl	sp,	#5
      0022AB 77                    7911 	ld	(hl), a
      0022AC E1                    7912 	pop	hl
      0022AD 7C                    7913 	ld	a, h
      0022AE F8 04                 7914 	ldhl	sp,	#4
      0022B0 32                    7915 	ld	(hl-), a
      0022B1 2A                    7916 	ld	a,	(hl+)
      0022B2 66                    7917 	ld	h, (hl)
      0022B3 6F                    7918 	ld	l, a
      0022B4 36 0C                 7919 	ld	(hl), #0x0c
      0022B6 C3r1Cr25              7920 	jp	00141$
      0022B9                       7921 00136$:
                                   7922 ;src/main.c:852: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      0022B9 F8 04                 7923 	ldhl	sp,	#4
      0022BB 7E                    7924 	ld	a, (hl)
      0022BC C6 04                 7925 	add	a, #0x04
      0022BE F8 00                 7926 	ldhl	sp,	#0
      0022C0 77                    7927 	ld	(hl), a
      0022C1 F8 03                 7928 	ldhl	sp,	#3
                                   7929 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022C3 7E                    7930 	ld	a, (hl)
      0022C4 22                    7931 	ld	(hl+), a
      0022C5 36 00                 7932 	ld	(hl), #0x00
      0022C7 3E 02                 7933 	ld	a, #0x02
      0022C9                       7934 00265$:
      0022C9 F8 03                 7935 	ldhl	sp,	#3
      0022CB CB 26                 7936 	sla	(hl)
      0022CD 23                    7937 	inc	hl
      0022CE CB 16                 7938 	rl	(hl)
      0022D0 3D                    7939 	dec	a
      0022D1 20 F6                 7940 	jr	NZ, 00265$
      0022D3 2B                    7941 	dec	hl
      0022D4 2A                    7942 	ld	a, (hl+)
      0022D5 5F                    7943 	ld	e, a
      0022D6 56                    7944 	ld	d, (hl)
      0022D7 21r00r00              7945 	ld	hl, #_shadow_OAM
      0022DA 19                    7946 	add	hl, de
      0022DB E5                    7947 	push	hl
      0022DC 7D                    7948 	ld	a, l
      0022DD F8 03                 7949 	ldhl	sp,	#3
      0022DF 77                    7950 	ld	(hl), a
      0022E0 E1                    7951 	pop	hl
      0022E1 7C                    7952 	ld	a, h
      0022E2 F8 02                 7953 	ldhl	sp,	#2
      0022E4 32                    7954 	ld	(hl-), a
      0022E5 2A                    7955 	ld	a, (hl+)
      0022E6 5F                    7956 	ld	e, a
      0022E7 56                    7957 	ld	d, (hl)
      0022E8 21 02 00              7958 	ld	hl, #0x0002
      0022EB 19                    7959 	add	hl, de
      0022EC E5                    7960 	push	hl
      0022ED 7D                    7961 	ld	a, l
      0022EE F8 05                 7962 	ldhl	sp,	#5
      0022F0 77                    7963 	ld	(hl), a
      0022F1 E1                    7964 	pop	hl
      0022F2 7C                    7965 	ld	a, h
      0022F3 F8 04                 7966 	ldhl	sp,	#4
      0022F5 32                    7967 	ld	(hl-), a
      0022F6 2A                    7968 	ld	a, (hl+)
      0022F7 5F                    7969 	ld	e, a
      0022F8 56                    7970 	ld	d, (hl)
      0022F9 F8 00                 7971 	ldhl	sp,	#0
      0022FB 7E                    7972 	ld	a, (hl)
      0022FC 12                    7973 	ld	(de), a
                                   7974 ;src/main.c:853: if (xDir == 1 && yDir == -1) {
      0022FD FAr92r00              7975 	ld	a, (#_xDir)
      002300 3D                    7976 	dec	a
      002301 3E 01                 7977 	ld	a, #0x01
      002303 28 01                 7978 	jr	Z, 00267$
      002305 AF                    7979 	xor	a, a
      002306                       7980 00267$:
      002306 F8 04                 7981 	ldhl	sp,	#4
      002308 77                    7982 	ld	(hl), a
                                   7983 ;src/main.c:794: oldestProjectile += 1;
      002309 21r90r00              7984 	ld	hl, #_oldestProjectile
      00230C 4E                    7985 	ld	c, (hl)
                                   7986 ;src/main.c:853: if (xDir == 1 && yDir == -1) {
      00230D FAr93r00              7987 	ld	a, (#_yDir)
      002310 3C                    7988 	inc	a
      002311 3E 01                 7989 	ld	a, #0x01
      002313 28 01                 7990 	jr	Z, 00269$
      002315 AF                    7991 	xor	a, a
      002316                       7992 00269$:
      002316 F8 01                 7993 	ldhl	sp,	#1
                                   7994 ;src/main.c:830: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002318 22                    7995 	ld	(hl+), a
      002319 79                    7996 	ld	a, c
      00231A C6 1E                 7997 	add	a, #0x1e
                                   7998 ;src/main.c:853: if (xDir == 1 && yDir == -1) {
      00231C 22                    7999 	ld	(hl+), a
      00231D 23                    8000 	inc	hl
      00231E 7E                    8001 	ld	a, (hl)
      00231F B7                    8002 	or	a, a
      002320 CArA2r23              8003 	jp	Z, 00132$
      002323 F8 01                 8004 	ldhl	sp,	#1
      002325 7E                    8005 	ld	a, (hl)
      002326 B7                    8006 	or	a, a
      002327 28 79                 8007 	jr	Z, 00132$
                                   8008 ;src/main.c:854: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002329 23                    8009 	inc	hl
                                   8010 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00232A 2A                    8011 	ld	a, (hl+)
      00232B 22                    8012 	ld	(hl+), a
      00232C 36 00                 8013 	ld	(hl), #0x00
      00232E 3E 02                 8014 	ld	a, #0x02
      002330                       8015 00270$:
      002330 F8 03                 8016 	ldhl	sp,	#3
      002332 CB 26                 8017 	sla	(hl)
      002334 23                    8018 	inc	hl
      002335 CB 16                 8019 	rl	(hl)
      002337 3D                    8020 	dec	a
      002338 20 F6                 8021 	jr	NZ, 00270$
      00233A 2B                    8022 	dec	hl
      00233B 2A                    8023 	ld	a, (hl+)
      00233C 5F                    8024 	ld	e, a
      00233D 56                    8025 	ld	d, (hl)
      00233E 21r00r00              8026 	ld	hl, #_shadow_OAM
      002341 19                    8027 	add	hl, de
      002342 E5                    8028 	push	hl
      002343 7D                    8029 	ld	a, l
      002344 F8 03                 8030 	ldhl	sp,	#3
      002346 77                    8031 	ld	(hl), a
      002347 E1                    8032 	pop	hl
      002348 7C                    8033 	ld	a, h
      002349 F8 02                 8034 	ldhl	sp,	#2
      00234B 32                    8035 	ld	(hl-), a
      00234C 2A                    8036 	ld	a, (hl+)
      00234D 5F                    8037 	ld	e, a
      00234E 56                    8038 	ld	d, (hl)
      00234F 21 03 00              8039 	ld	hl, #0x0003
      002352 19                    8040 	add	hl, de
      002353 E5                    8041 	push	hl
      002354 7D                    8042 	ld	a, l
      002355 F8 05                 8043 	ldhl	sp,	#5
      002357 77                    8044 	ld	(hl), a
      002358 E1                    8045 	pop	hl
      002359 7C                    8046 	ld	a, h
      00235A F8 04                 8047 	ldhl	sp,	#4
      00235C 32                    8048 	ld	(hl-), a
      00235D 2A                    8049 	ld	a,	(hl+)
      00235E 66                    8050 	ld	h, (hl)
      00235F 6F                    8051 	ld	l, a
      002360 36 00                 8052 	ld	(hl), #0x00
                                   8053 ;src/main.c:855: projectiles[oldestProjectile].offset = 12;
      002362 21r90r00              8054 	ld	hl, #_oldestProjectile
      002365 4E                    8055 	ld	c, (hl)
      002366 06 00                 8056 	ld	b, #0x00
      002368 69                    8057 	ld	l, c
      002369 60                    8058 	ld	h, b
      00236A 29                    8059 	add	hl, hl
      00236B 09                    8060 	add	hl, bc
      00236C 29                    8061 	add	hl, hl
      00236D 29                    8062 	add	hl, hl
      00236E E5                    8063 	push	hl
      00236F 7D                    8064 	ld	a, l
      002370 F8 05                 8065 	ldhl	sp,	#5
      002372 77                    8066 	ld	(hl), a
      002373 E1                    8067 	pop	hl
      002374 7C                    8068 	ld	a, h
      002375 F8 04                 8069 	ldhl	sp,	#4
      002377 32                    8070 	ld	(hl-), a
      002378 2A                    8071 	ld	a, (hl+)
      002379 5F                    8072 	ld	e, a
      00237A 56                    8073 	ld	d, (hl)
      00237B 21rA0r00              8074 	ld	hl, #_projectiles
      00237E 19                    8075 	add	hl, de
      00237F E5                    8076 	push	hl
      002380 7D                    8077 	ld	a, l
      002381 F8 03                 8078 	ldhl	sp,	#3
      002383 77                    8079 	ld	(hl), a
      002384 E1                    8080 	pop	hl
      002385 7C                    8081 	ld	a, h
      002386 F8 02                 8082 	ldhl	sp,	#2
      002388 32                    8083 	ld	(hl-), a
      002389 2A                    8084 	ld	a, (hl+)
      00238A 5F                    8085 	ld	e, a
      00238B 56                    8086 	ld	d, (hl)
      00238C 21 04 00              8087 	ld	hl, #0x0004
      00238F 19                    8088 	add	hl, de
      002390 E5                    8089 	push	hl
      002391 7D                    8090 	ld	a, l
      002392 F8 05                 8091 	ldhl	sp,	#5
      002394 77                    8092 	ld	(hl), a
      002395 E1                    8093 	pop	hl
      002396 7C                    8094 	ld	a, h
      002397 F8 04                 8095 	ldhl	sp,	#4
      002399 32                    8096 	ld	(hl-), a
      00239A 2A                    8097 	ld	a,	(hl+)
      00239B 66                    8098 	ld	h, (hl)
      00239C 6F                    8099 	ld	l, a
      00239D 36 0C                 8100 	ld	(hl), #0x0c
      00239F C3r1Cr25              8101 	jp	00141$
      0023A2                       8102 00132$:
                                   8103 ;src/main.c:831: if (yDir == 1) {
      0023A2 FAr93r00              8104 	ld	a, (#_yDir)
      0023A5 3D                    8105 	dec	a
      0023A6 3E 01                 8106 	ld	a, #0x01
      0023A8 28 01                 8107 	jr	Z, 00272$
      0023AA AF                    8108 	xor	a, a
      0023AB                       8109 00272$:
      0023AB F8 03                 8110 	ldhl	sp,	#3
                                   8111 ;src/main.c:857: else if (xDir == 1 && yDir == 1) {
      0023AD 22                    8112 	ld	(hl+), a
      0023AE 7E                    8113 	ld	a, (hl)
      0023AF B7                    8114 	or	a, a
      0023B0 CAr31r24              8115 	jp	Z, 00128$
      0023B3 2B                    8116 	dec	hl
      0023B4 7E                    8117 	ld	a, (hl)
      0023B5 B7                    8118 	or	a, a
      0023B6 28 79                 8119 	jr	Z, 00128$
                                   8120 ;src/main.c:858: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      0023B8 2B                    8121 	dec	hl
                                   8122 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0023B9 2A                    8123 	ld	a, (hl+)
      0023BA 22                    8124 	ld	(hl+), a
      0023BB 36 00                 8125 	ld	(hl), #0x00
      0023BD 3E 02                 8126 	ld	a, #0x02
      0023BF                       8127 00273$:
      0023BF F8 03                 8128 	ldhl	sp,	#3
      0023C1 CB 26                 8129 	sla	(hl)
      0023C3 23                    8130 	inc	hl
      0023C4 CB 16                 8131 	rl	(hl)
      0023C6 3D                    8132 	dec	a
      0023C7 20 F6                 8133 	jr	NZ, 00273$
      0023C9 2B                    8134 	dec	hl
      0023CA 2A                    8135 	ld	a, (hl+)
      0023CB 5F                    8136 	ld	e, a
      0023CC 56                    8137 	ld	d, (hl)
      0023CD 21r00r00              8138 	ld	hl, #_shadow_OAM
      0023D0 19                    8139 	add	hl, de
      0023D1 E5                    8140 	push	hl
      0023D2 7D                    8141 	ld	a, l
      0023D3 F8 03                 8142 	ldhl	sp,	#3
      0023D5 77                    8143 	ld	(hl), a
      0023D6 E1                    8144 	pop	hl
      0023D7 7C                    8145 	ld	a, h
      0023D8 F8 02                 8146 	ldhl	sp,	#2
      0023DA 32                    8147 	ld	(hl-), a
      0023DB 2A                    8148 	ld	a, (hl+)
      0023DC 5F                    8149 	ld	e, a
      0023DD 56                    8150 	ld	d, (hl)
      0023DE 21 03 00              8151 	ld	hl, #0x0003
      0023E1 19                    8152 	add	hl, de
      0023E2 E5                    8153 	push	hl
      0023E3 7D                    8154 	ld	a, l
      0023E4 F8 05                 8155 	ldhl	sp,	#5
      0023E6 77                    8156 	ld	(hl), a
      0023E7 E1                    8157 	pop	hl
      0023E8 7C                    8158 	ld	a, h
      0023E9 F8 04                 8159 	ldhl	sp,	#4
      0023EB 32                    8160 	ld	(hl-), a
      0023EC 2A                    8161 	ld	a,	(hl+)
      0023ED 66                    8162 	ld	h, (hl)
      0023EE 6F                    8163 	ld	l, a
      0023EF 36 40                 8164 	ld	(hl), #0x40
                                   8165 ;src/main.c:859: projectiles[oldestProjectile].offset = 4;
      0023F1 21r90r00              8166 	ld	hl, #_oldestProjectile
      0023F4 4E                    8167 	ld	c, (hl)
      0023F5 06 00                 8168 	ld	b, #0x00
      0023F7 69                    8169 	ld	l, c
      0023F8 60                    8170 	ld	h, b
      0023F9 29                    8171 	add	hl, hl
      0023FA 09                    8172 	add	hl, bc
      0023FB 29                    8173 	add	hl, hl
      0023FC 29                    8174 	add	hl, hl
      0023FD E5                    8175 	push	hl
      0023FE 7D                    8176 	ld	a, l
      0023FF F8 05                 8177 	ldhl	sp,	#5
      002401 77                    8178 	ld	(hl), a
      002402 E1                    8179 	pop	hl
      002403 7C                    8180 	ld	a, h
      002404 F8 04                 8181 	ldhl	sp,	#4
      002406 32                    8182 	ld	(hl-), a
      002407 2A                    8183 	ld	a, (hl+)
      002408 5F                    8184 	ld	e, a
      002409 56                    8185 	ld	d, (hl)
      00240A 21rA0r00              8186 	ld	hl, #_projectiles
      00240D 19                    8187 	add	hl, de
      00240E E5                    8188 	push	hl
      00240F 7D                    8189 	ld	a, l
      002410 F8 03                 8190 	ldhl	sp,	#3
      002412 77                    8191 	ld	(hl), a
      002413 E1                    8192 	pop	hl
      002414 7C                    8193 	ld	a, h
      002415 F8 02                 8194 	ldhl	sp,	#2
      002417 32                    8195 	ld	(hl-), a
      002418 2A                    8196 	ld	a, (hl+)
      002419 5F                    8197 	ld	e, a
      00241A 56                    8198 	ld	d, (hl)
      00241B 21 04 00              8199 	ld	hl, #0x0004
      00241E 19                    8200 	add	hl, de
      00241F E5                    8201 	push	hl
      002420 7D                    8202 	ld	a, l
      002421 F8 05                 8203 	ldhl	sp,	#5
      002423 77                    8204 	ld	(hl), a
      002424 E1                    8205 	pop	hl
      002425 7C                    8206 	ld	a, h
      002426 F8 04                 8207 	ldhl	sp,	#4
      002428 32                    8208 	ld	(hl-), a
      002429 2A                    8209 	ld	a,	(hl+)
      00242A 66                    8210 	ld	h, (hl)
      00242B 6F                    8211 	ld	l, a
      00242C 36 04                 8212 	ld	(hl), #0x04
      00242E C3r1Cr25              8213 	jp	00141$
      002431                       8214 00128$:
                                   8215 ;src/main.c:861: else if (xDir == -1 && yDir == 1) {
      002431 FAr92r00              8216 	ld	a, (#_xDir)
      002434 3C                    8217 	inc	a
      002435 3E 01                 8218 	ld	a, #0x01
      002437 28 01                 8219 	jr	Z, 00275$
      002439 AF                    8220 	xor	a, a
      00243A                       8221 00275$:
      00243A F8 04                 8222 	ldhl	sp,	#4
      00243C 77                    8223 	ld	(hl), a
      00243D 7E                    8224 	ld	a, (hl)
      00243E B7                    8225 	or	a, a
      00243F CArBFr24              8226 	jp	Z, 00124$
      002442 2B                    8227 	dec	hl
      002443 7E                    8228 	ld	a, (hl)
      002444 B7                    8229 	or	a, a
      002445 28 78                 8230 	jr	Z, 00124$
                                   8231 ;src/main.c:862: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002447 2B                    8232 	dec	hl
                                   8233 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002448 2A                    8234 	ld	a, (hl+)
      002449 22                    8235 	ld	(hl+), a
      00244A 36 00                 8236 	ld	(hl), #0x00
      00244C 3E 02                 8237 	ld	a, #0x02
      00244E                       8238 00276$:
      00244E F8 03                 8239 	ldhl	sp,	#3
      002450 CB 26                 8240 	sla	(hl)
      002452 23                    8241 	inc	hl
      002453 CB 16                 8242 	rl	(hl)
      002455 3D                    8243 	dec	a
      002456 20 F6                 8244 	jr	NZ, 00276$
      002458 2B                    8245 	dec	hl
      002459 2A                    8246 	ld	a, (hl+)
      00245A 5F                    8247 	ld	e, a
      00245B 56                    8248 	ld	d, (hl)
      00245C 21r00r00              8249 	ld	hl, #_shadow_OAM
      00245F 19                    8250 	add	hl, de
      002460 E5                    8251 	push	hl
      002461 7D                    8252 	ld	a, l
      002462 F8 03                 8253 	ldhl	sp,	#3
      002464 77                    8254 	ld	(hl), a
      002465 E1                    8255 	pop	hl
      002466 7C                    8256 	ld	a, h
      002467 F8 02                 8257 	ldhl	sp,	#2
      002469 32                    8258 	ld	(hl-), a
      00246A 2A                    8259 	ld	a, (hl+)
      00246B 5F                    8260 	ld	e, a
      00246C 56                    8261 	ld	d, (hl)
      00246D 21 03 00              8262 	ld	hl, #0x0003
      002470 19                    8263 	add	hl, de
      002471 E5                    8264 	push	hl
      002472 7D                    8265 	ld	a, l
      002473 F8 05                 8266 	ldhl	sp,	#5
      002475 77                    8267 	ld	(hl), a
      002476 E1                    8268 	pop	hl
      002477 7C                    8269 	ld	a, h
      002478 F8 04                 8270 	ldhl	sp,	#4
      00247A 32                    8271 	ld	(hl-), a
      00247B 2A                    8272 	ld	a,	(hl+)
      00247C 66                    8273 	ld	h, (hl)
      00247D 6F                    8274 	ld	l, a
      00247E 36 60                 8275 	ld	(hl), #0x60
                                   8276 ;src/main.c:863: projectiles[oldestProjectile].offset = 4;
      002480 21r90r00              8277 	ld	hl, #_oldestProjectile
      002483 4E                    8278 	ld	c, (hl)
      002484 06 00                 8279 	ld	b, #0x00
      002486 69                    8280 	ld	l, c
      002487 60                    8281 	ld	h, b
      002488 29                    8282 	add	hl, hl
      002489 09                    8283 	add	hl, bc
      00248A 29                    8284 	add	hl, hl
      00248B 29                    8285 	add	hl, hl
      00248C E5                    8286 	push	hl
      00248D 7D                    8287 	ld	a, l
      00248E F8 05                 8288 	ldhl	sp,	#5
      002490 77                    8289 	ld	(hl), a
      002491 E1                    8290 	pop	hl
      002492 7C                    8291 	ld	a, h
      002493 F8 04                 8292 	ldhl	sp,	#4
      002495 32                    8293 	ld	(hl-), a
      002496 2A                    8294 	ld	a, (hl+)
      002497 5F                    8295 	ld	e, a
      002498 56                    8296 	ld	d, (hl)
      002499 21rA0r00              8297 	ld	hl, #_projectiles
      00249C 19                    8298 	add	hl, de
      00249D E5                    8299 	push	hl
      00249E 7D                    8300 	ld	a, l
      00249F F8 03                 8301 	ldhl	sp,	#3
      0024A1 77                    8302 	ld	(hl), a
      0024A2 E1                    8303 	pop	hl
      0024A3 7C                    8304 	ld	a, h
      0024A4 F8 02                 8305 	ldhl	sp,	#2
      0024A6 32                    8306 	ld	(hl-), a
      0024A7 2A                    8307 	ld	a, (hl+)
      0024A8 5F                    8308 	ld	e, a
      0024A9 56                    8309 	ld	d, (hl)
      0024AA 21 04 00              8310 	ld	hl, #0x0004
      0024AD 19                    8311 	add	hl, de
      0024AE E5                    8312 	push	hl
      0024AF 7D                    8313 	ld	a, l
      0024B0 F8 05                 8314 	ldhl	sp,	#5
      0024B2 77                    8315 	ld	(hl), a
      0024B3 E1                    8316 	pop	hl
      0024B4 7C                    8317 	ld	a, h
      0024B5 F8 04                 8318 	ldhl	sp,	#4
      0024B7 32                    8319 	ld	(hl-), a
      0024B8 2A                    8320 	ld	a,	(hl+)
      0024B9 66                    8321 	ld	h, (hl)
      0024BA 6F                    8322 	ld	l, a
      0024BB 36 04                 8323 	ld	(hl), #0x04
      0024BD 18 5D                 8324 	jr	00141$
      0024BF                       8325 00124$:
                                   8326 ;src/main.c:865: else if (xDir == -1 && yDir == -1) {
      0024BF F8 04                 8327 	ldhl	sp,	#4
      0024C1 7E                    8328 	ld	a, (hl)
      0024C2 B7                    8329 	or	a, a
      0024C3 28 57                 8330 	jr	Z, 00141$
      0024C5 F8 01                 8331 	ldhl	sp,	#1
      0024C7 7E                    8332 	ld	a, (hl)
      0024C8 B7                    8333 	or	a, a
      0024C9 28 51                 8334 	jr	Z, 00141$
                                   8335 ;src/main.c:866: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      0024CB 23                    8336 	inc	hl
                                   8337 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0024CC 2A                    8338 	ld	a, (hl+)
      0024CD 22                    8339 	ld	(hl+), a
      0024CE 36 00                 8340 	ld	(hl), #0x00
      0024D0 3E 02                 8341 	ld	a, #0x02
      0024D2                       8342 00277$:
      0024D2 F8 03                 8343 	ldhl	sp,	#3
      0024D4 CB 26                 8344 	sla	(hl)
      0024D6 23                    8345 	inc	hl
      0024D7 CB 16                 8346 	rl	(hl)
      0024D9 3D                    8347 	dec	a
      0024DA 20 F6                 8348 	jr	NZ, 00277$
      0024DC 2B                    8349 	dec	hl
      0024DD 2A                    8350 	ld	a, (hl+)
      0024DE 5F                    8351 	ld	e, a
      0024DF 56                    8352 	ld	d, (hl)
      0024E0 21r00r00              8353 	ld	hl, #_shadow_OAM
      0024E3 19                    8354 	add	hl, de
      0024E4 E5                    8355 	push	hl
      0024E5 7D                    8356 	ld	a, l
      0024E6 F8 03                 8357 	ldhl	sp,	#3
      0024E8 77                    8358 	ld	(hl), a
      0024E9 E1                    8359 	pop	hl
      0024EA 7C                    8360 	ld	a, h
      0024EB F8 02                 8361 	ldhl	sp,	#2
      0024ED 32                    8362 	ld	(hl-), a
      0024EE 2A                    8363 	ld	a, (hl+)
      0024EF 5F                    8364 	ld	e, a
      0024F0 56                    8365 	ld	d, (hl)
      0024F1 21 03 00              8366 	ld	hl, #0x0003
      0024F4 19                    8367 	add	hl, de
      0024F5 E5                    8368 	push	hl
      0024F6 7D                    8369 	ld	a, l
      0024F7 F8 05                 8370 	ldhl	sp,	#5
      0024F9 77                    8371 	ld	(hl), a
      0024FA E1                    8372 	pop	hl
      0024FB 7C                    8373 	ld	a, h
      0024FC F8 04                 8374 	ldhl	sp,	#4
      0024FE 32                    8375 	ld	(hl-), a
      0024FF 2A                    8376 	ld	a,	(hl+)
      002500 66                    8377 	ld	h, (hl)
      002501 6F                    8378 	ld	l, a
      002502 36 20                 8379 	ld	(hl), #0x20
                                   8380 ;src/main.c:867: projectiles[oldestProjectile].offset = 12;
      002504 21r90r00              8381 	ld	hl, #_oldestProjectile
      002507 4E                    8382 	ld	c, (hl)
      002508 06 00                 8383 	ld	b, #0x00
      00250A 69                    8384 	ld	l, c
      00250B 60                    8385 	ld	h, b
      00250C 29                    8386 	add	hl, hl
      00250D 09                    8387 	add	hl, bc
      00250E 29                    8388 	add	hl, hl
      00250F 29                    8389 	add	hl, hl
      002510 01rA0r00              8390 	ld	bc,#_projectiles
      002513 09                    8391 	add	hl,bc
      002514 4D                    8392 	ld	c, l
      002515 44                    8393 	ld	b, h
      002516 21 04 00              8394 	ld	hl, #0x0004
      002519 09                    8395 	add	hl, bc
      00251A 36 0C                 8396 	ld	(hl), #0x0c
      00251C                       8397 00141$:
                                   8398 ;src/main.c:871: fireCooldown = projectiles[oldestProjectile].delay;
      00251C 21r90r00              8399 	ld	hl, #_oldestProjectile
      00251F 4E                    8400 	ld	c, (hl)
      002520 06 00                 8401 	ld	b, #0x00
      002522 69                    8402 	ld	l, c
      002523 60                    8403 	ld	h, b
      002524 29                    8404 	add	hl, hl
      002525 09                    8405 	add	hl, bc
      002526 29                    8406 	add	hl, hl
      002527 29                    8407 	add	hl, hl
      002528 01rA0r00              8408 	ld	bc,#_projectiles
      00252B 09                    8409 	add	hl,bc
      00252C 4D                    8410 	ld	c, l
      00252D 44                    8411 	ld	b, h
      00252E 21 0A 00              8412 	ld	hl, #0x000a
      002531 09                    8413 	add	hl, bc
      002532 7E                    8414 	ld	a, (hl)
      002533 EAr91r00              8415 	ld	(#_fireCooldown),a
                                   8416 ;src/main.c:873: playSound(projectiles[oldestProjectile].type);
      002536 21 0B 00              8417 	ld	hl, #0x000b
      002539 09                    8418 	add	hl, bc
      00253A 7E                    8419 	ld	a, (hl)
      00253B F5                    8420 	push	af
      00253C 33                    8421 	inc	sp
      00253D CDr22r0C              8422 	call	_playSound
      002540 33                    8423 	inc	sp
      002541                       8424 00154$:
                                   8425 ;src/main.c:877: }
      002541 E8 05                 8426 	add	sp, #5
      002543 C9                    8427 	ret
                                   8428 ;src/main.c:880: void moveProjectiles() {
                                   8429 ;	---------------------------------
                                   8430 ; Function moveProjectiles
                                   8431 ; ---------------------------------
      002544                       8432 _moveProjectiles::
      002544 E8 F9                 8433 	add	sp, #-7
                                   8434 ;src/main.c:881: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002546 F8 06                 8435 	ldhl	sp,	#6
      002548 36 00                 8436 	ld	(hl), #0x00
      00254A                       8437 00112$:
      00254A 21r5Er08              8438 	ld	hl, #_PROJECTILECOUNT
      00254D 4E                    8439 	ld	c, (hl)
      00254E F8 06                 8440 	ldhl	sp,	#6
      002550 7E                    8441 	ld	a, (hl)
      002551 91                    8442 	sub	a, c
      002552 D2rA0r26              8443 	jp	NC, 00114$
                                   8444 ;src/main.c:882: projectiles[i].x -= xOverflow;
      002555 4E                    8445 	ld	c, (hl)
      002556 06 00                 8446 	ld	b, #0x00
      002558 69                    8447 	ld	l, c
      002559 60                    8448 	ld	h, b
      00255A 29                    8449 	add	hl, hl
      00255B 09                    8450 	add	hl, bc
      00255C 29                    8451 	add	hl, hl
      00255D 29                    8452 	add	hl, hl
      00255E 01rA0r00              8453 	ld	bc,#_projectiles
      002561 09                    8454 	add	hl,bc
      002562 33                    8455 	inc	sp
      002563 33                    8456 	inc	sp
      002564 5D                    8457 	ld	e, l
      002565 54                    8458 	ld	d, h
      002566 D5                    8459 	push	de
      002567 1A                    8460 	ld	a, (de)
      002568 4F                    8461 	ld	c, a
      002569 13                    8462 	inc	de
      00256A 1A                    8463 	ld	a, (de)
      00256B 47                    8464 	ld	b, a
      00256C 79                    8465 	ld	a, c
      00256D 21rA0r00              8466 	ld	hl, #_xOverflow
      002570 96                    8467 	sub	a, (hl)
      002571 23                    8468 	inc	hl
      002572 4F                    8469 	ld	c, a
      002573 78                    8470 	ld	a, b
      002574 9E                    8471 	sbc	a, (hl)
      002575 47                    8472 	ld	b, a
      002576 E1                    8473 	pop	hl
      002577 E5                    8474 	push	hl
      002578 79                    8475 	ld	a, c
      002579 22                    8476 	ld	(hl+), a
      00257A 70                    8477 	ld	(hl), b
                                   8478 ;src/main.c:883: projectiles[i].y -= yOverflow;
      00257B D1                    8479 	pop	de
      00257C D5                    8480 	push	de
      00257D 21 02 00              8481 	ld	hl, #0x0002
      002580 19                    8482 	add	hl, de
      002581 E5                    8483 	push	hl
      002582 7D                    8484 	ld	a, l
      002583 F8 04                 8485 	ldhl	sp,	#4
      002585 77                    8486 	ld	(hl), a
      002586 E1                    8487 	pop	hl
      002587 7C                    8488 	ld	a, h
      002588 F8 03                 8489 	ldhl	sp,	#3
      00258A 32                    8490 	ld	(hl-), a
      00258B 2A                    8491 	ld	a, (hl+)
      00258C 5F                    8492 	ld	e, a
      00258D 56                    8493 	ld	d, (hl)
      00258E 1A                    8494 	ld	a, (de)
      00258F 4F                    8495 	ld	c, a
      002590 13                    8496 	inc	de
      002591 1A                    8497 	ld	a, (de)
      002592 47                    8498 	ld	b, a
      002593 79                    8499 	ld	a, c
      002594 21rA2r00              8500 	ld	hl, #_yOverflow
      002597 96                    8501 	sub	a, (hl)
      002598 23                    8502 	inc	hl
      002599 4F                    8503 	ld	c, a
      00259A 78                    8504 	ld	a, b
      00259B 9E                    8505 	sbc	a, (hl)
      00259C 47                    8506 	ld	b, a
      00259D F8 02                 8507 	ldhl	sp,	#2
      00259F 2A                    8508 	ld	a,	(hl+)
      0025A0 66                    8509 	ld	h, (hl)
      0025A1 6F                    8510 	ld	l, a
      0025A2 79                    8511 	ld	a, c
      0025A3 22                    8512 	ld	(hl+), a
      0025A4 70                    8513 	ld	(hl), b
                                   8514 ;src/main.c:885: if (projectiles[i].active) {
      0025A5 D1                    8515 	pop	de
      0025A6 D5                    8516 	push	de
      0025A7 21 09 00              8517 	ld	hl, #0x0009
      0025AA 19                    8518 	add	hl, de
      0025AB 4D                    8519 	ld	c, l
      0025AC 44                    8520 	ld	b, h
      0025AD 0A                    8521 	ld	a, (bc)
      0025AE B7                    8522 	or	a, a
      0025AF CAr9Ar26              8523 	jp	Z, 00113$
                                   8524 ;src/main.c:886: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      0025B2 F8 02                 8525 	ldhl	sp,#2
      0025B4 2A                    8526 	ld	a, (hl+)
      0025B5 5F                    8527 	ld	e, a
      0025B6 56                    8528 	ld	d, (hl)
      0025B7 1A                    8529 	ld	a, (de)
      0025B8 4F                    8530 	ld	c, a
      0025B9 13                    8531 	inc	de
      0025BA 1A                    8532 	ld	a, (de)
      0025BB 47                    8533 	ld	b, a
      0025BC D1                    8534 	pop	de
      0025BD D5                    8535 	push	de
      0025BE 21 06 00              8536 	ld	hl, #0x0006
      0025C1 19                    8537 	add	hl, de
      0025C2 5D                    8538 	ld	e, l
      0025C3 54                    8539 	ld	d, h
      0025C4 1A                    8540 	ld	a, (de)
      0025C5 6F                    8541 	ld	l, a
                                   8542 ;	spillPairReg hl
                                   8543 ;	spillPairReg hl
      0025C6 07                    8544 	rlca
      0025C7 9F                    8545 	sbc	a, a
      0025C8 67                    8546 	ld	h, a
                                   8547 ;	spillPairReg hl
                                   8548 ;	spillPairReg hl
      0025C9 09                    8549 	add	hl, bc
      0025CA 4D                    8550 	ld	c, l
      0025CB 44                    8551 	ld	b, h
      0025CC F8 04                 8552 	ldhl	sp,	#4
      0025CE 79                    8553 	ld	a, c
      0025CF 22                    8554 	ld	(hl+), a
      0025D0 70                    8555 	ld	(hl), b
                                   8556 ;src/main.c:887: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      0025D1 D1                    8557 	pop	de
      0025D2 D5                    8558 	push	de
      0025D3 1A                    8559 	ld	a, (de)
      0025D4 4F                    8560 	ld	c, a
      0025D5 13                    8561 	inc	de
      0025D6 1A                    8562 	ld	a, (de)
      0025D7 47                    8563 	ld	b, a
      0025D8 D1                    8564 	pop	de
      0025D9 D5                    8565 	push	de
      0025DA 21 05 00              8566 	ld	hl, #0x0005
      0025DD 19                    8567 	add	hl, de
      0025DE 5D                    8568 	ld	e, l
      0025DF 54                    8569 	ld	d, h
      0025E0 1A                    8570 	ld	a, (de)
      0025E1 6F                    8571 	ld	l, a
                                   8572 ;	spillPairReg hl
                                   8573 ;	spillPairReg hl
      0025E2 07                    8574 	rlca
      0025E3 9F                    8575 	sbc	a, a
      0025E4 67                    8576 	ld	h, a
                                   8577 ;	spillPairReg hl
                                   8578 ;	spillPairReg hl
      0025E5 09                    8579 	add	hl, bc
      0025E6 4D                    8580 	ld	c, l
      0025E7 44                    8581 	ld	b, h
                                   8582 ;src/main.c:890: projectiles[i].y = newY;
      0025E8 F8 02                 8583 	ldhl	sp,#2
      0025EA 2A                    8584 	ld	a, (hl+)
      0025EB 5F                    8585 	ld	e, a
      0025EC 2A                    8586 	ld	a, (hl+)
      0025ED 57                    8587 	ld	d, a
      0025EE 2A                    8588 	ld	a, (hl+)
      0025EF 12                    8589 	ld	(de), a
      0025F0 13                    8590 	inc	de
      0025F1 7E                    8591 	ld	a, (hl)
      0025F2 12                    8592 	ld	(de), a
                                   8593 ;src/main.c:891: projectiles[i].x = newX;
      0025F3 E1                    8594 	pop	hl
      0025F4 E5                    8595 	push	hl
      0025F5 79                    8596 	ld	a, c
      0025F6 22                    8597 	ld	(hl+), a
      0025F7 70                    8598 	ld	(hl), b
                                   8599 ;src/main.c:895: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      0025F8 F8 04                 8600 	ldhl	sp,	#4
      0025FA 2A                    8601 	ld	a, (hl+)
      0025FB 77                    8602 	ld	(hl), a
      0025FC D1                    8603 	pop	de
      0025FD D5                    8604 	push	de
      0025FE 21 04 00              8605 	ld	hl, #0x0004
      002601 19                    8606 	add	hl, de
      002602 5D                    8607 	ld	e, l
      002603 54                    8608 	ld	d, h
      002604 1A                    8609 	ld	a, (de)
      002605 F8 05                 8610 	ldhl	sp,	#5
      002607 86                    8611 	add	a, (hl)
      002608 2B                    8612 	dec	hl
      002609 5F                    8613 	ld	e, a
      00260A 79                    8614 	ld	a, c
      00260B C6 04                 8615 	add	a, #0x04
      00260D 22                    8616 	ld	(hl+), a
      00260E 23                    8617 	inc	hl
      00260F 3A                    8618 	ld	a, (hl-)
      002610 C6 1E                 8619 	add	a, #0x1e
      002612 77                    8620 	ld	(hl), a
      002613 56                    8621 	ld	d, (hl)
                                   8622 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002614 26 00                 8623 	ld	h, #0x00
                                   8624 ;	spillPairReg hl
                                   8625 ;	spillPairReg hl
      002616 6A                    8626 	ld	l, d
      002617 29                    8627 	add	hl, hl
      002618 29                    8628 	add	hl, hl
      002619 D5                    8629 	push	de
      00261A 11r00r00              8630 	ld	de, #_shadow_OAM
      00261D 19                    8631 	add	hl, de
      00261E D1                    8632 	pop	de
                                   8633 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00261F 7B                    8634 	ld	a, e
      002620 22                    8635 	ld	(hl+), a
      002621 5D                    8636 	ld	e, l
      002622 54                    8637 	ld	d, h
      002623 F8 04                 8638 	ldhl	sp,	#4
      002625 7E                    8639 	ld	a, (hl)
      002626 12                    8640 	ld	(de), a
                                   8641 ;src/main.c:899: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002627 D1                    8642 	pop	de
      002628 D5                    8643 	push	de
      002629 1A                    8644 	ld	a, (de)
      00262A 6F                    8645 	ld	l, a
                                   8646 ;	spillPairReg hl
                                   8647 ;	spillPairReg hl
      00262B 13                    8648 	inc	de
      00262C 1A                    8649 	ld	a, (de)
      00262D 67                    8650 	ld	h, a
                                   8651 ;	spillPairReg hl
                                   8652 ;	spillPairReg hl
      00262E CB 78                 8653 	bit	7, b
      002630 20 44                 8654 	jr	NZ, 00101$
      002632 5C                    8655 	ld	e, h
      002633 16 00                 8656 	ld	d, #0x00
      002635 3E AA                 8657 	ld	a, #0xaa
      002637 BD                    8658 	cp	a, l
      002638 3E 00                 8659 	ld	a, #0x00
      00263A 9C                    8660 	sbc	a, h
      00263B CB 7B                 8661 	bit	7, e
      00263D 28 07                 8662 	jr	Z, 00147$
      00263F CB 7A                 8663 	bit	7, d
      002641 20 08                 8664 	jr	NZ, 00148$
      002643 BF                    8665 	cp	a, a
      002644 18 05                 8666 	jr	00148$
      002646                       8667 00147$:
      002646 CB 7A                 8668 	bit	7, d
      002648 28 01                 8669 	jr	Z, 00148$
      00264A 37                    8670 	scf
      00264B                       8671 00148$:
      00264B 38 29                 8672 	jr	C, 00101$
                                   8673 ;src/main.c:883: projectiles[i].y -= yOverflow;
      00264D F8 02                 8674 	ldhl	sp,#2
      00264F 2A                    8675 	ld	a, (hl+)
      002650 5F                    8676 	ld	e, a
      002651 56                    8677 	ld	d, (hl)
      002652 1A                    8678 	ld	a, (de)
      002653 4F                    8679 	ld	c, a
      002654 13                    8680 	inc	de
      002655 1A                    8681 	ld	a, (de)
                                   8682 ;src/main.c:899: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002656 47                    8683 	ld	b, a
      002657 CB 78                 8684 	bit	7, b
      002659 20 1B                 8685 	jr	NZ, 00101$
      00265B 58                    8686 	ld	e, b
      00265C 16 00                 8687 	ld	d, #0x00
      00265E 3E 9A                 8688 	ld	a, #0x9a
      002660 B9                    8689 	cp	a, c
      002661 3E 00                 8690 	ld	a, #0x00
      002663 98                    8691 	sbc	a, b
      002664 CB 7B                 8692 	bit	7, e
      002666 28 07                 8693 	jr	Z, 00149$
      002668 CB 7A                 8694 	bit	7, d
      00266A 20 08                 8695 	jr	NZ, 00150$
      00266C BF                    8696 	cp	a, a
      00266D 18 05                 8697 	jr	00150$
      00266F                       8698 00149$:
      00266F CB 7A                 8699 	bit	7, d
      002671 28 01                 8700 	jr	Z, 00150$
      002673 37                    8701 	scf
      002674                       8702 00150$:
      002674 30 24                 8703 	jr	NC, 00113$
      002676                       8704 00101$:
                                   8705 ;src/main.c:901: projectiles[i].active = 0;
      002676 F8 06                 8706 	ldhl	sp,	#6
      002678 4E                    8707 	ld	c, (hl)
      002679 06 00                 8708 	ld	b, #0x00
      00267B 69                    8709 	ld	l, c
      00267C 60                    8710 	ld	h, b
      00267D 29                    8711 	add	hl, hl
      00267E 09                    8712 	add	hl, bc
      00267F 29                    8713 	add	hl, hl
      002680 29                    8714 	add	hl, hl
      002681 11rA0r00              8715 	ld	de, #_projectiles
      002684 19                    8716 	add	hl, de
      002685 01 09 00              8717 	ld	bc, #0x0009
      002688 09                    8718 	add	hl, bc
      002689 36 00                 8719 	ld	(hl), #0x00
                                   8720 ;src/main.c:902: set_sprite_tile(30+i, 0x7f);
      00268B F8 05                 8721 	ldhl	sp,	#5
                                   8722 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00268D 6E                    8723 	ld	l, (hl)
                                   8724 ;	spillPairReg hl
                                   8725 ;	spillPairReg hl
      00268E 26 00                 8726 	ld	h, #0x00
                                   8727 ;	spillPairReg hl
                                   8728 ;	spillPairReg hl
      002690 29                    8729 	add	hl, hl
      002691 29                    8730 	add	hl, hl
      002692 11r00r00              8731 	ld	de, #_shadow_OAM
      002695 19                    8732 	add	hl, de
      002696 23                    8733 	inc	hl
      002697 23                    8734 	inc	hl
      002698 36 7F                 8735 	ld	(hl), #0x7f
                                   8736 ;src/main.c:902: set_sprite_tile(30+i, 0x7f);
      00269A                       8737 00113$:
                                   8738 ;src/main.c:881: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00269A F8 06                 8739 	ldhl	sp,	#6
      00269C 34                    8740 	inc	(hl)
      00269D C3r4Ar25              8741 	jp	00112$
      0026A0                       8742 00114$:
                                   8743 ;src/main.c:907: }
      0026A0 E8 07                 8744 	add	sp, #7
      0026A2 C9                    8745 	ret
                                   8746 ;src/main.c:909: void initEnemyOptions() {
                                   8747 ;	---------------------------------
                                   8748 ; Function initEnemyOptions
                                   8749 ; ---------------------------------
      0026A3                       8750 _initEnemyOptions::
                                   8751 ;src/main.c:910: enemyOptions[0] = blob;
      0026A3 11 10 00              8752 	ld	de, #0x0010
      0026A6 D5                    8753 	push	de
      0026A7 11r10r00              8754 	ld	de, #_blob
      0026AA D5                    8755 	push	de
      0026AB 11r00r00              8756 	ld	de, #_enemyOptions
      0026AE D5                    8757 	push	de
      0026AF CDr00r00              8758 	call	___memcpy
      0026B2 E8 06                 8759 	add	sp, #6
                                   8760 ;src/main.c:911: enemyOptions[1] = bomb;
      0026B4 11 10 00              8761 	ld	de, #0x0010
      0026B7 D5                    8762 	push	de
      0026B8 11r20r00              8763 	ld	de, #_bomb
      0026BB D5                    8764 	push	de
      0026BC 11r10r00              8765 	ld	de, #(_enemyOptions + 16)
      0026BF D5                    8766 	push	de
      0026C0 CDr00r00              8767 	call	___memcpy
      0026C3 E8 06                 8768 	add	sp, #6
                                   8769 ;src/main.c:912: enemyOptions[2] = miniship;
      0026C5 11 10 00              8770 	ld	de, #0x0010
      0026C8 D5                    8771 	push	de
      0026C9 11r30r00              8772 	ld	de, #_miniship
      0026CC D5                    8773 	push	de
      0026CD 11r20r00              8774 	ld	de, #(_enemyOptions + 32)
      0026D0 D5                    8775 	push	de
      0026D1 CDr00r00              8776 	call	___memcpy
      0026D4 E8 06                 8777 	add	sp, #6
                                   8778 ;src/main.c:913: enemyOptions[3] = shieldship;
      0026D6 11 10 00              8779 	ld	de, #0x0010
      0026D9 D5                    8780 	push	de
      0026DA 11r50r00              8781 	ld	de, #_shieldship
      0026DD D5                    8782 	push	de
      0026DE 11r30r00              8783 	ld	de, #(_enemyOptions + 48)
      0026E1 D5                    8784 	push	de
      0026E2 CDr00r00              8785 	call	___memcpy
      0026E5 E8 06                 8786 	add	sp, #6
                                   8787 ;src/main.c:915: enemyOptions[4] = bigblob;
      0026E7 11 10 00              8788 	ld	de, #0x0010
      0026EA D5                    8789 	push	de
      0026EB 11r40r00              8790 	ld	de, #_bigblob
      0026EE D5                    8791 	push	de
      0026EF 11r40r00              8792 	ld	de, #(_enemyOptions + 64)
      0026F2 D5                    8793 	push	de
      0026F3 CDr00r00              8794 	call	___memcpy
      0026F6 E8 06                 8795 	add	sp, #6
                                   8796 ;src/main.c:916: }
      0026F8 C9                    8797 	ret
                                   8798 ;src/main.c:919: void initProjectiles() {
                                   8799 ;	---------------------------------
                                   8800 ; Function initProjectiles
                                   8801 ; ---------------------------------
      0026F9                       8802 _initProjectiles::
                                   8803 ;src/main.c:920: set_sprite_data(0x20, 17, ProjectileTiles); 
      0026F9 11rE8r05              8804 	ld	de, #_ProjectileTiles
      0026FC D5                    8805 	push	de
      0026FD 21 20 11              8806 	ld	hl, #0x1120
      002700 E5                    8807 	push	hl
      002701 CDr00r00              8808 	call	_set_sprite_data
      002704 E8 04                 8809 	add	sp, #4
                                   8810 ;src/main.c:922: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002706 AF                    8811 	xor	a, a
      002707                       8812 00103$:
      002707 21r5Er08              8813 	ld	hl, #_PROJECTILECOUNT
      00270A 4E                    8814 	ld	c, (hl)
      00270B B9                    8815 	cp	a, c
      00270C D0                    8816 	ret	NC
      00270D 3C                    8817 	inc	a
                                   8818 ;src/main.c:926: }
      00270E 18 F7                 8819 	jr	00103$
                                   8820 ;src/main.c:928: void initGame() {
                                   8821 ;	---------------------------------
                                   8822 ; Function initGame
                                   8823 ; ---------------------------------
      002710                       8824 _initGame::
                                   8825 ;src/main.c:931: xDir = 0;
      002710 21r92r00              8826 	ld	hl, #_xDir
      002713 36 00                 8827 	ld	(hl), #0x00
                                   8828 ;src/main.c:932: yDir = -1;
      002715 21r93r00              8829 	ld	hl, #_yDir
      002718 36 FF                 8830 	ld	(hl), #0xff
                                   8831 ;src/main.c:933: xSpeed = 0;
      00271A 21r94r00              8832 	ld	hl, #_xSpeed
      00271D 36 00                 8833 	ld	(hl), #0x00
                                   8834 ;src/main.c:934: ySpeed = 0;
      00271F 21r95r00              8835 	ld	hl, #_ySpeed
      002722 36 00                 8836 	ld	(hl), #0x00
                                   8837 ;src/main.c:937: playerX = 80<<5;
      002724 21r96r00              8838 	ld	hl, #_playerX
      002727 36 00                 8839 	ld	(hl), #0x00
      002729 23                    8840 	inc	hl
      00272A 36 0A                 8841 	ld	(hl), #0x0a
                                   8842 ;src/main.c:938: playerY = 80<<5;
      00272C 21r98r00              8843 	ld	hl, #_playerY
      00272F 36 00                 8844 	ld	(hl), #0x00
      002731 23                    8845 	inc	hl
      002732 36 0A                 8846 	ld	(hl), #0x0a
                                   8847 ;src/main.c:940: playerDrawX = 80;
      002734 21r9Ar00              8848 	ld	hl, #_playerDrawX
      002737 36 50                 8849 	ld	(hl), #0x50
                                   8850 ;src/main.c:941: playerDrawY = 80;
      002739 21r9Br00              8851 	ld	hl, #_playerDrawY
      00273C 36 50                 8852 	ld	(hl), #0x50
                                   8853 ;src/main.c:944: bgX = 0;
      00273E AF                    8854 	xor	a, a
      00273F 21r9Cr00              8855 	ld	hl, #_bgX
      002742 22                    8856 	ld	(hl+), a
      002743 77                    8857 	ld	(hl), a
                                   8858 ;src/main.c:945: bgY = 0;
      002744 AF                    8859 	xor	a, a
      002745 21r9Er00              8860 	ld	hl, #_bgY
      002748 22                    8861 	ld	(hl+), a
      002749 77                    8862 	ld	(hl), a
                                   8863 ;src/main.c:947: hull = maxHull;
      00274A FAr60r08              8864 	ld	a, (#_maxHull)
      00274D EArDDr00              8865 	ld	(#_hull),a
                                   8866 ;src/main.c:948: shield = maxShield;
      002750 FAr61r08              8867 	ld	a, (#_maxShield)
      002753 EArDEr00              8868 	ld	(#_shield),a
                                   8869 ;src/main.c:950: DISPLAY_ON;
      002756 F0r00                 8870 	ldh	a, (_LCDC_REG + 0)
      002758 F6 80                 8871 	or	a, #0x80
      00275A E0r00                 8872 	ldh	(_LCDC_REG + 0), a
                                   8873 ;src/main.c:951: SPRITES_8x16;
      00275C F0r00                 8874 	ldh	a, (_LCDC_REG + 0)
      00275E F6 04                 8875 	or	a, #0x04
      002760 E0r00                 8876 	ldh	(_LCDC_REG + 0), a
                                   8877 ;src/main.c:952: set_sprite_data(0, 12, Player1);
      002762 11r48r07              8878 	ld	de, #_Player1
      002765 D5                    8879 	push	de
      002766 21 00 0C              8880 	ld	hl, #0xc00
      002769 E5                    8881 	push	hl
      00276A CDr00r00              8882 	call	_set_sprite_data
      00276D E8 04                 8883 	add	sp, #4
                                   8884 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00276F 21r02r00              8885 	ld	hl, #(_shadow_OAM + 2)
      002772 36 00                 8886 	ld	(hl), #0x00
      002774 21r06r00              8887 	ld	hl, #(_shadow_OAM + 6)
      002777 36 02                 8888 	ld	(hl), #0x02
                                   8889 ;src/main.c:958: SHOW_SPRITES;
      002779 F0r00                 8890 	ldh	a, (_LCDC_REG + 0)
      00277B F6 02                 8891 	or	a, #0x02
      00277D E0r00                 8892 	ldh	(_LCDC_REG + 0), a
                                   8893 ;src/main.c:962: font_init();
      00277F CDr00r00              8894 	call	_font_init
                                   8895 ;src/main.c:964: min_font = font_load(font_min); // 36 tiles of characters
      002782 11r00r00              8896 	ld	de, #_font_min
      002785 D5                    8897 	push	de
      002786 CDr00r00              8898 	call	_font_load
      002789 E1                    8899 	pop	hl
      00278A 21rDFr00              8900 	ld	hl, #_min_font
      00278D 7B                    8901 	ld	a, e
      00278E 22                    8902 	ld	(hl+), a
                                   8903 ;src/main.c:965: font_set(min_font);
      00278F 7A                    8904 	ld	a, d
      002790 32                    8905 	ld	(hl-), a
      002791 2A                    8906 	ld	a, (hl+)
      002792 5F                    8907 	ld	e, a
      002793 56                    8908 	ld	d, (hl)
      002794 D5                    8909 	push	de
      002795 CDr00r00              8910 	call	_font_set
      002798 E1                    8911 	pop	hl
                                   8912 ;src/main.c:966: set_win_tiles(1,0,4,1,hullabel);
      002799 11r00r00              8913 	ld	de, #_hullabel
      00279C D5                    8914 	push	de
      00279D 21 04 01              8915 	ld	hl, #0x104
      0027A0 E5                    8916 	push	hl
      0027A1 21 01 00              8917 	ld	hl, #0x01
      0027A4 E5                    8918 	push	hl
      0027A5 CDr00r00              8919 	call	_set_win_tiles
      0027A8 E8 06                 8920 	add	sp, #6
                                   8921 ;src/main.c:967: set_win_tiles(1,1,4,1,shieldlabel);
      0027AA 11r04r00              8922 	ld	de, #_shieldlabel
      0027AD D5                    8923 	push	de
      0027AE 21 04 01              8924 	ld	hl, #0x104
      0027B1 E5                    8925 	push	hl
      0027B2 21 01 01              8926 	ld	hl, #0x101
      0027B5 E5                    8927 	push	hl
      0027B6 CDr00r00              8928 	call	_set_win_tiles
      0027B9 E8 06                 8929 	add	sp, #6
                                   8930 ;src/main.c:972: set_bkg_data(0x50,1,healthblock);
      0027BB 11r07r05              8931 	ld	de, #_healthblock
      0027BE D5                    8932 	push	de
      0027BF 21 50 01              8933 	ld	hl, #0x150
      0027C2 E5                    8934 	push	hl
      0027C3 CDr00r00              8935 	call	_set_bkg_data
      0027C6 E8 04                 8936 	add	sp, #4
                                   8937 ;src/main.c:974: setHealthBar(0, hull);
      0027C8 FArDDr00              8938 	ld	a, (#_hull)
      0027CB 67                    8939 	ld	h, a
      0027CC 2E 00                 8940 	ld	l, #0x00
      0027CE E5                    8941 	push	hl
      0027CF CDr62r08              8942 	call	_setHealthBar
      0027D2 E1                    8943 	pop	hl
                                   8944 ;src/main.c:975: setHealthBar(1, shield);
      0027D3 FArDEr00              8945 	ld	a, (#_shield)
      0027D6 67                    8946 	ld	h, a
      0027D7 2E 01                 8947 	ld	l, #0x01
      0027D9 E5                    8948 	push	hl
      0027DA CDr62r08              8949 	call	_setHealthBar
      0027DD E1                    8950 	pop	hl
                                   8951 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      0027DE 3E 07                 8952 	ld	a, #0x07
      0027E0 E0r00                 8953 	ldh	(_WX_REG + 0), a
      0027E2 3E 7E                 8954 	ld	a, #0x7e
      0027E4 E0r00                 8955 	ldh	(_WY_REG + 0), a
                                   8956 ;src/main.c:982: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      0027E6 11r87r04              8957 	ld	de, #_backgroundtiles
      0027E9 D5                    8958 	push	de
      0027EA 21 25 08              8959 	ld	hl, #0x825
      0027ED E5                    8960 	push	hl
      0027EE CDr00r00              8961 	call	_set_bkg_data
      0027F1 E8 04                 8962 	add	sp, #4
                                   8963 ;src/main.c:983: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      0027F3 11r87r00              8964 	ld	de, #_background1
      0027F6 D5                    8965 	push	de
      0027F7 21 20 20              8966 	ld	hl, #0x2020
      0027FA E5                    8967 	push	hl
      0027FB AF                    8968 	xor	a, a
      0027FC 0F                    8969 	rrca
      0027FD F5                    8970 	push	af
      0027FE CDr00r00              8971 	call	_set_bkg_tiles
      002801 E8 06                 8972 	add	sp, #6
                                   8973 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      002803 AF                    8974 	xor	a, a
      002804 E0r00                 8975 	ldh	(_SCX_REG + 0), a
      002806 AF                    8976 	xor	a, a
      002807 E0r00                 8977 	ldh	(_SCY_REG + 0), a
                                   8978 ;src/main.c:989: set_bkg_data(0x51, 18, ProjectileTiles);
      002809 11rE8r05              8979 	ld	de, #_ProjectileTiles
      00280C D5                    8980 	push	de
      00280D 21 51 12              8981 	ld	hl, #0x1251
      002810 E5                    8982 	push	hl
      002811 CDr00r00              8983 	call	_set_bkg_data
      002814 E8 04                 8984 	add	sp, #4
                                   8985 ;src/main.c:991: set_win_tiles(10, 0,4,1,weaponlabel);
      002816 11r08r00              8986 	ld	de, #_weaponlabel
      002819 D5                    8987 	push	de
      00281A 21 04 01              8988 	ld	hl, #0x104
      00281D E5                    8989 	push	hl
      00281E 21 0A 00              8990 	ld	hl, #0x0a
      002821 E5                    8991 	push	hl
      002822 CDr00r00              8992 	call	_set_win_tiles
      002825 E8 06                 8993 	add	sp, #6
                                   8994 ;src/main.c:992: set_win_tiles(10, 1,4,1,scorelabel);
      002827 11r0Cr00              8995 	ld	de, #_scorelabel
      00282A D5                    8996 	push	de
      00282B 21 04 01              8997 	ld	hl, #0x104
      00282E E5                    8998 	push	hl
      00282F 21 0A 01              8999 	ld	hl, #0x10a
      002832 E5                    9000 	push	hl
      002833 CDr00r00              9001 	call	_set_win_tiles
      002836 E8 06                 9002 	add	sp, #6
                                   9003 ;src/main.c:994: setGunIcon();
      002838 CDr78r1F              9004 	call	_setGunIcon
                                   9005 ;src/main.c:995: SHOW_BKG;
      00283B F0r00                 9006 	ldh	a, (_LCDC_REG + 0)
      00283D F6 01                 9007 	or	a, #0x01
      00283F E0r00                 9008 	ldh	(_LCDC_REG + 0), a
                                   9009 ;src/main.c:996: SHOW_WIN;;
      002841 F0r00                 9010 	ldh	a, (_LCDC_REG + 0)
      002843 F6 20                 9011 	or	a, #0x20
      002845 E0r00                 9012 	ldh	(_LCDC_REG + 0), a
                                   9013 ;src/main.c:998: SCORE = MAKE_BCD(00000);
      002847 AF                    9014 	xor	a, a
      002848 21rB2r00              9015 	ld	hl, #_SCORE
      00284B 22                    9016 	ld	(hl+), a
      00284C 22                    9017 	ld	(hl+), a
      00284D 22                    9018 	ld	(hl+), a
      00284E 77                    9019 	ld	(hl), a
                                   9020 ;src/main.c:999: updateScore();
      00284F CDr73r09              9021 	call	_updateScore
                                   9022 ;src/main.c:1000: MISSILES = MAKE_BCD(1);
      002852 21rA8r00              9023 	ld	hl, #_MISSILES
      002855 3E 01                 9024 	ld	a, #0x01
      002857 22                    9025 	ld	(hl+), a
      002858 AF                    9026 	xor	a, a
      002859 22                    9027 	ld	(hl+), a
      00285A 22                    9028 	ld	(hl+), a
      00285B 77                    9029 	ld	(hl), a
                                   9030 ;src/main.c:1001: updateMissileCount(0);
      00285C AF                    9031 	xor	a, a
      00285D F5                    9032 	push	af
      00285E 33                    9033 	inc	sp
      00285F CDr9Dr09              9034 	call	_updateMissileCount
      002862 33                    9035 	inc	sp
                                   9036 ;src/main.c:1004: pickup = ammo;
      002863 11 06 00              9037 	ld	de, #0x0006
      002866 D5                    9038 	push	de
      002867 11r84r00              9039 	ld	de, #_ammo
      00286A D5                    9040 	push	de
      00286B 11rE1r00              9041 	ld	de, #_pickup
      00286E D5                    9042 	push	de
      00286F CDr00r00              9043 	call	___memcpy
      002872 E8 06                 9044 	add	sp, #6
                                   9045 ;src/main.c:1008: set_win_tiles(17, 0,1,1,gunMap+2);
      002874 11rAFr00              9046 	ld	de, #(_gunMap + 2)
      002877 D5                    9047 	push	de
      002878 21 01 01              9048 	ld	hl, #0x101
      00287B E5                    9049 	push	hl
      00287C 21 11 00              9050 	ld	hl, #0x11
      00287F E5                    9051 	push	hl
      002880 CDr00r00              9052 	call	_set_win_tiles
      002883 E8 06                 9053 	add	sp, #6
                                   9054 ;src/main.c:1010: }
      002885 C9                    9055 	ret
                                   9056 ;src/main.c:1012: void main(){
                                   9057 ;	---------------------------------
                                   9058 ; Function main
                                   9059 ; ---------------------------------
      002886                       9060 _main::
                                   9061 ;src/main.c:1015: initEnemyOptions();
      002886 CDrA3r26              9062 	call	_initEnemyOptions
                                   9063 ;src/main.c:1018: STAT_REG = 0x45;
      002889 3E 45                 9064 	ld	a, #0x45
      00288B E0r00                 9065 	ldh	(_STAT_REG + 0), a
                                   9066 ;src/main.c:1019: LYC_REG = 0x7e; //line 126
      00288D 3E 7E                 9067 	ld	a, #0x7e
      00288F E0r00                 9068 	ldh	(_LYC_REG + 0), a
                                   9069 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      002891 F3                    9070 	di
                                   9071 ;src/main.c:1021: add_LCD(interruptLCD);
      002892 11r00r00              9072 	ld	de, #_interruptLCD
      002895 D5                    9073 	push	de
      002896 CDr00r00              9074 	call	_add_LCD
      002899 33                    9075 	inc	sp
      00289A 33                    9076 	inc	sp
                                   9077 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      00289B FB                    9078 	ei
                                   9079 ;src/main.c:1023: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      00289C 3E 03                 9080 	ld	a, #0x03
      00289E F5                    9081 	push	af
      00289F 33                    9082 	inc	sp
      0028A0 CDr00r00              9083 	call	_set_interrupts
      0028A3 33                    9084 	inc	sp
                                   9085 ;src/main.c:1027: NR52_REG = 0x80; // sound on 
      0028A4 3E 80                 9086 	ld	a, #0x80
      0028A6 E0r00                 9087 	ldh	(_NR52_REG + 0), a
                                   9088 ;src/main.c:1028: NR50_REG = 0x77; // volume
      0028A8 3E 77                 9089 	ld	a, #0x77
      0028AA E0r00                 9090 	ldh	(_NR50_REG + 0), a
                                   9091 ;src/main.c:1029: NR51_REG = 0xFF; // all channels
      0028AC 3E FF                 9092 	ld	a, #0xff
      0028AE E0r00                 9093 	ldh	(_NR51_REG + 0), a
                                   9094 ;src/main.c:1033: waitpad(J_A);
      0028B0 3E 10                 9095 	ld	a, #0x10
      0028B2 F5                    9096 	push	af
      0028B3 33                    9097 	inc	sp
      0028B4 CDr00r00              9098 	call	_waitpad
      0028B7 33                    9099 	inc	sp
                                   9100 ;src/main.c:1034: uint16_t seed = LY_REG;
      0028B8 F0r00                 9101 	ldh	a, (_LY_REG + 0)
      0028BA 4F                    9102 	ld	c, a
      0028BB 06 00                 9103 	ld	b, #0x00
                                   9104 ;src/main.c:1035: seed |= (uint16_t)DIV_REG << 8;
      0028BD F0r00                 9105 	ldh	a, (_DIV_REG + 0)
      0028BF 5F                    9106 	ld	e, a
      0028C0 AF                    9107 	xor	a, a
      0028C1 B1                    9108 	or	a, c
      0028C2 4F                    9109 	ld	c, a
      0028C3 7B                    9110 	ld	a, e
      0028C4 B0                    9111 	or	a, b
      0028C5 47                    9112 	ld	b, a
                                   9113 ;src/main.c:1036: initrand(seed);
      0028C6 C5                    9114 	push	bc
      0028C7 CDr00r00              9115 	call	_initrand
      0028CA E1                    9116 	pop	hl
                                   9117 ;src/main.c:1041: initGame();
      0028CB CDr10r27              9118 	call	_initGame
                                   9119 ;src/main.c:1042: initEnemies(1);
      0028CE 3E 01                 9120 	ld	a, #0x01
      0028D0 F5                    9121 	push	af
      0028D1 33                    9122 	inc	sp
      0028D2 CDr85r0C              9123 	call	_initEnemies
      0028D5 33                    9124 	inc	sp
                                   9125 ;src/main.c:1043: initProjectiles();
      0028D6 CDrF9r26              9126 	call	_initProjectiles
                                   9127 ;src/main.c:1045: while(1) {
      0028D9                       9128 00117$:
                                   9129 ;src/main.c:1046: SHOW_SPRITES;
      0028D9 F0r00                 9130 	ldh	a, (_LCDC_REG + 0)
      0028DB F6 02                 9131 	or	a, #0x02
      0028DD E0r00                 9132 	ldh	(_LCDC_REG + 0), a
                                   9133 ;src/main.c:1048: joydata = joypad(); // query for button states
      0028DF CDr00r00              9134 	call	_joypad
      0028E2 21rDCr00              9135 	ld	hl, #_joydata
      0028E5 73                    9136 	ld	(hl), e
                                   9137 ;src/main.c:1050: updateDirection(); // set player direction
      0028E6 CDrF8r09              9138 	call	_updateDirection
                                   9139 ;src/main.c:1053: move(); 
      0028E9 CDr9Fr16              9140 	call	_move
                                   9141 ;src/main.c:1055: updateEnemyPositions();
      0028EC CDr30r0E              9142 	call	_updateEnemyPositions
                                   9143 ;src/main.c:1058: checkCollision(); 
      0028EF CDr27r1C              9144 	call	_checkCollision
                                   9145 ;src/main.c:785: if (shield < maxShield) {
      0028F2 21r61r08              9146 	ld	hl, #_maxShield
      0028F5 4E                    9147 	ld	c, (hl)
      0028F6 59                    9148 	ld	e, c
      0028F7 21rDEr00              9149 	ld	hl, #_shield
      0028FA 56                    9150 	ld	d, (hl)
      0028FB 7E                    9151 	ld	a, (hl)
      0028FC 91                    9152 	sub	a, c
      0028FD CB 7B                 9153 	bit	7, e
      0028FF 28 07                 9154 	jr	Z, 00179$
      002901 CB 7A                 9155 	bit	7, d
      002903 20 08                 9156 	jr	NZ, 00180$
      002905 BF                    9157 	cp	a, a
      002906 18 05                 9158 	jr	00180$
      002908                       9159 00179$:
      002908 CB 7A                 9160 	bit	7, d
      00290A 28 01                 9161 	jr	Z, 00180$
      00290C 37                    9162 	scf
      00290D                       9163 00180$:
      00290D 30 04                 9164 	jr	NC, 00125$
                                   9165 ;src/main.c:786: shield += 1;
      00290F 21rDEr00              9166 	ld	hl, #_shield
      002912 34                    9167 	inc	(hl)
      002913                       9168 00125$:
                                   9169 ;src/main.c:788: setHealthBar(0, hull);
      002913 FArDDr00              9170 	ld	a, (#_hull)
      002916 67                    9171 	ld	h, a
      002917 2E 00                 9172 	ld	l, #0x00
      002919 E5                    9173 	push	hl
      00291A CDr62r08              9174 	call	_setHealthBar
      00291D E1                    9175 	pop	hl
                                   9176 ;src/main.c:789: setHealthBar(1, shield);
      00291E FArDEr00              9177 	ld	a, (#_shield)
      002921 67                    9178 	ld	h, a
      002922 2E 01                 9179 	ld	l, #0x01
      002924 E5                    9180 	push	hl
      002925 CDr62r08              9181 	call	_setHealthBar
      002928 E1                    9182 	pop	hl
                                   9183 ;src/main.c:1063: if (joydata & J_B && fireCooldown == 0) {
      002929 FArDCr00              9184 	ld	a, (#_joydata)
      00292C CB 6F                 9185 	bit	5, a
      00292E 28 09                 9186 	jr	Z, 00102$
      002930 FAr91r00              9187 	ld	a, (#_fireCooldown)
      002933 B7                    9188 	or	a, a
      002934 20 03                 9189 	jr	NZ, 00102$
                                   9190 ;src/main.c:1064: fire();
      002936 CDrABr1F              9191 	call	_fire
      002939                       9192 00102$:
                                   9193 ;src/main.c:1066: if (fireCooldown > 0) {
      002939 21r91r00              9194 	ld	hl, #_fireCooldown
      00293C 7E                    9195 	ld	a, (hl)
      00293D B7                    9196 	or	a, a
      00293E 28 01                 9197 	jr	Z, 00105$
                                   9198 ;src/main.c:1067: --fireCooldown;
      002940 35                    9199 	dec	(hl)
      002941                       9200 00105$:
                                   9201 ;src/main.c:1070: if (joydata & J_SELECT && switchDelay == 0) {
      002941 FArDCr00              9202 	ld	a, (#_joydata)
      002944 CB 77                 9203 	bit	6, a
      002946 28 24                 9204 	jr	Z, 00112$
      002948 FArACr00              9205 	ld	a, (#_switchDelay)
      00294B B7                    9206 	or	a, a
      00294C 20 1E                 9207 	jr	NZ, 00112$
                                   9208 ;src/main.c:1071: if (currentGun == 0) {
      00294E 21rA6r00              9209 	ld	hl, #_currentGun
      002951 7E                    9210 	ld	a, (hl)
      002952 B7                    9211 	or	a, a
      002953 20 04                 9212 	jr	NZ, 00109$
                                   9213 ;src/main.c:1072: currentGun = 1;
      002955 36 01                 9214 	ld	(hl), #0x01
      002957 18 0B                 9215 	jr	00110$
      002959                       9216 00109$:
                                   9217 ;src/main.c:1074: else if (currentGun == 1) {
      002959 FArA6r00              9218 	ld	a, (#_currentGun)
      00295C 3D                    9219 	dec	a
      00295D 20 05                 9220 	jr	NZ, 00110$
                                   9221 ;src/main.c:1075: currentGun = 0;
      00295F 21rA6r00              9222 	ld	hl, #_currentGun
      002962 36 00                 9223 	ld	(hl), #0x00
      002964                       9224 00110$:
                                   9225 ;src/main.c:1077: setGunIcon();
      002964 CDr78r1F              9226 	call	_setGunIcon
                                   9227 ;src/main.c:1078: switchDelay = 30;
      002967 21rACr00              9228 	ld	hl, #_switchDelay
      00296A 36 1E                 9229 	ld	(hl), #0x1e
      00296C                       9230 00112$:
                                   9231 ;src/main.c:1080: if (switchDelay != 0) {
      00296C 21rACr00              9232 	ld	hl, #_switchDelay
      00296F 7E                    9233 	ld	a, (hl)
      002970 B7                    9234 	or	a, a
      002971 28 01                 9235 	jr	Z, 00115$
                                   9236 ;src/main.c:1081: switchDelay--;
      002973 35                    9237 	dec	(hl)
      002974                       9238 00115$:
                                   9239 ;src/main.c:1083: moveProjectiles();
      002974 CDr44r25              9240 	call	_moveProjectiles
                                   9241 ;src/main.c:1088: SHOW_WIN;	
      002977 F0r00                 9242 	ldh	a, (_LCDC_REG + 0)
      002979 F6 20                 9243 	or	a, #0x20
      00297B E0r00                 9244 	ldh	(_LCDC_REG + 0), a
                                   9245 ;src/main.c:1089: wait_vbl_done(); // Idle until next frame
      00297D CDr00r00              9246 	call	_wait_vbl_done
                                   9247 ;src/main.c:1094: }
      002980 C3rD9r28              9248 	jp	00117$
                                   9249 	.area _CODE
                                   9250 	.area _INITIALIZER
      000000                       9251 __xinit__hullabel:
      000000 12                    9252 	.db #0x12	; 18
      000001 1F                    9253 	.db #0x1f	; 31
      000002 16                    9254 	.db #0x16	; 22
      000003 16                    9255 	.db #0x16	; 22
      000004                       9256 __xinit__shieldlabel:
      000004 1D                    9257 	.db #0x1d	; 29
      000005 12                    9258 	.db #0x12	; 18
      000006 16                    9259 	.db #0x16	; 22
      000007 0E                    9260 	.db #0x0e	; 14
      000008                       9261 __xinit__weaponlabel:
      000008 21                    9262 	.db #0x21	; 33
      000009 0F                    9263 	.db #0x0f	; 15
      00000A 1A                    9264 	.db #0x1a	; 26
      00000B 18                    9265 	.db #0x18	; 24
      00000C                       9266 __xinit__scorelabel:
      00000C 1D                    9267 	.db #0x1d	; 29
      00000D 0D                    9268 	.db #0x0d	; 13
      00000E 1C                    9269 	.db #0x1c	; 28
      00000F 0F                    9270 	.db #0x0f	; 15
      000010                       9271 __xinit__blob:
      000010 00 00                 9272 	.dw #0x0000
      000012 00 00                 9273 	.dw #0x0000
      000014 00                    9274 	.db #0x00	;  0
      000015 00                    9275 	.db #0x00	;  0
      000016 40                    9276 	.db #0x40	; 64
      000017 00                    9277 	.db #0x00	; 0
      000018 01                    9278 	.db #0x01	; 1
      000019 01                    9279 	.db #0x01	; 1
      00001A 01                    9280 	.db #0x01	; 1
      00001B 32                    9281 	.db #0x32	; 50	'2'
      00001C 03                    9282 	.db #0x03	;  3
      00001D 01                    9283 	.db #0x01	; 1
      00001E 00                    9284 	.db #0x00	;  0
      00001F 00                    9285 	.db #0x00	;  0
      000020                       9286 __xinit__bomb:
      000020 00 00                 9287 	.dw #0x0000
      000022 00 00                 9288 	.dw #0x0000
      000024 00                    9289 	.db #0x00	;  0
      000025 00                    9290 	.db #0x00	;  0
      000026 42                    9291 	.db #0x42	; 66	'B'
      000027 00                    9292 	.db #0x00	; 0
      000028 01                    9293 	.db #0x01	; 1
      000029 01                    9294 	.db #0x01	; 1
      00002A 01                    9295 	.db #0x01	; 1
      00002B 32                    9296 	.db #0x32	; 50	'2'
      00002C 05                    9297 	.db #0x05	;  5
      00002D 01                    9298 	.db #0x01	; 1
      00002E 00                    9299 	.db #0x00	;  0
      00002F 00                    9300 	.db #0x00	;  0
      000030                       9301 __xinit__miniship:
      000030 00 00                 9302 	.dw #0x0000
      000032 00 00                 9303 	.dw #0x0000
      000034 00                    9304 	.db #0x00	;  0
      000035 00                    9305 	.db #0x00	;  0
      000036 44                    9306 	.db #0x44	; 68	'D'
      000037 00                    9307 	.db #0x00	; 0
      000038 01                    9308 	.db #0x01	; 1
      000039 01                    9309 	.db #0x01	; 1
      00003A 01                    9310 	.db #0x01	; 1
      00003B 32                    9311 	.db #0x32	; 50	'2'
      00003C 05                    9312 	.db #0x05	;  5
      00003D 01                    9313 	.db #0x01	; 1
      00003E 00                    9314 	.db #0x00	;  0
      00003F 00                    9315 	.db #0x00	;  0
      000040                       9316 __xinit__bigblob:
      000040 00 00                 9317 	.dw #0x0000
      000042 00 00                 9318 	.dw #0x0000
      000044 00                    9319 	.db #0x00	;  0
      000045 00                    9320 	.db #0x00	;  0
      000046 50                    9321 	.db #0x50	; 80	'P'
      000047 52                    9322 	.db #0x52	; 82	'R'
      000048 02                    9323 	.db #0x02	; 2
      000049 01                    9324 	.db #0x01	; 1
      00004A 01                    9325 	.db #0x01	; 1
      00004B 32                    9326 	.db #0x32	; 50	'2'
      00004C 03                    9327 	.db #0x03	;  3
      00004D 01                    9328 	.db #0x01	; 1
      00004E 00                    9329 	.db #0x00	;  0
      00004F 00                    9330 	.db #0x00	;  0
      000050                       9331 __xinit__shieldship:
      000050 00 00                 9332 	.dw #0x0000
      000052 00 00                 9333 	.dw #0x0000
      000054 00                    9334 	.db #0x00	;  0
      000055 00                    9335 	.db #0x00	;  0
      000056 54                    9336 	.db #0x54	; 84	'T'
      000057 56                    9337 	.db #0x56	; 86	'V'
      000058 02                    9338 	.db #0x02	; 2
      000059 01                    9339 	.db #0x01	; 1
      00005A 01                    9340 	.db #0x01	; 1
      00005B 32                    9341 	.db #0x32	; 50	'2'
      00005C 03                    9342 	.db #0x03	;  3
      00005D 01                    9343 	.db #0x01	; 1
      00005E 00                    9344 	.db #0x00	;  0
      00005F 00                    9345 	.db #0x00	;  0
      000060                       9346 __xinit__singleGun:
      000060 00 00                 9347 	.dw #0x0000
      000062 00 00                 9348 	.dw #0x0000
      000064 00                    9349 	.db #0x00	;  0
      000065 00                    9350 	.db #0x00	;  0
      000066 FF                    9351 	.db #0xff	; -1
      000067 02                    9352 	.db #0x02	; 2
      000068 00                    9353 	.db #0x00	; 0
      000069 01                    9354 	.db #0x01	; 1
      00006A 0F                    9355 	.db #0x0f	; 15
      00006B 20                    9356 	.db #0x20	; 32
      00006C                       9357 __xinit__doubleGun:
      00006C 00 00                 9358 	.dw #0x0000
      00006E 00 00                 9359 	.dw #0x0000
      000070 00                    9360 	.db #0x00	;  0
      000071 00                    9361 	.db #0x00	;  0
      000072 FF                    9362 	.db #0xff	; -1
      000073 02                    9363 	.db #0x02	; 2
      000074 00                    9364 	.db #0x00	; 0
      000075 01                    9365 	.db #0x01	; 1
      000076 0F                    9366 	.db #0x0f	; 15
      000077 26                    9367 	.db #0x26	; 38
      000078                       9368 __xinit__missile:
      000078 00 00                 9369 	.dw #0x0000
      00007A 00 00                 9370 	.dw #0x0000
      00007C 00                    9371 	.db #0x00	;  0
      00007D 00                    9372 	.db #0x00	;  0
      00007E FF                    9373 	.db #0xff	; -1
      00007F 01                    9374 	.db #0x01	; 1
      000080 00                    9375 	.db #0x00	; 0
      000081 01                    9376 	.db #0x01	; 1
      000082 1E                    9377 	.db #0x1e	; 30
      000083 2C                    9378 	.db #0x2c	; 44
      000084                       9379 __xinit__ammo:
      000084 00 00                 9380 	.dw #0x0000
      000086 00 00                 9381 	.dw #0x0000
      000088 00                    9382 	.db #0x00	; 0
      000089 00                    9383 	.db #0x00	; 0
      00008A                       9384 __xinit__weapon:
      00008A 00 00                 9385 	.dw #0x0000
      00008C 00 00                 9386 	.dw #0x0000
      00008E 00                    9387 	.db #0x00	; 0
      00008F 00                    9388 	.db #0x00	; 0
      000090                       9389 __xinit__oldestProjectile:
      000090 00                    9390 	.db #0x00	; 0
      000091                       9391 __xinit__fireCooldown:
      000091 00                    9392 	.db #0x00	; 0
      000092                       9393 __xinit__xDir:
      000092 00                    9394 	.db #0x00	;  0
      000093                       9395 __xinit__yDir:
      000093 FF                    9396 	.db #0xff	; -1
      000094                       9397 __xinit__xSpeed:
      000094 00                    9398 	.db #0x00	;  0
      000095                       9399 __xinit__ySpeed:
      000095 00                    9400 	.db #0x00	;  0
      000096                       9401 __xinit__playerX:
      000096 00 0A                 9402 	.dw #0x0a00
      000098                       9403 __xinit__playerY:
      000098 00 0A                 9404 	.dw #0x0a00
      00009A                       9405 __xinit__playerDrawX:
      00009A 50                    9406 	.db #0x50	; 80	'P'
      00009B                       9407 __xinit__playerDrawY:
      00009B 50                    9408 	.db #0x50	; 80	'P'
      00009C                       9409 __xinit__bgX:
      00009C 00 00                 9410 	.dw #0x0000
      00009E                       9411 __xinit__bgY:
      00009E 00 00                 9412 	.dw #0x0000
      0000A0                       9413 __xinit__xOverflow:
      0000A0 00 00                 9414 	.dw #0x0000
      0000A2                       9415 __xinit__yOverflow:
      0000A2 00 00                 9416 	.dw #0x0000
      0000A4                       9417 __xinit__enemyCollisionCount:
      0000A4 00                    9418 	.db #0x00	; 0
      0000A5                       9419 __xinit__gunLevel:
      0000A5 00                    9420 	.db #0x00	; 0
      0000A6                       9421 __xinit__currentGun:
      0000A6 00                    9422 	.db #0x00	; 0
      0000A7                       9423 __xinit__missiles:
      0000A7 01                    9424 	.db #0x01	; 1
      0000A8                       9425 __xinit__MISSILES:
      0000A8 01 00 00 00           9426 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000AC                       9427 __xinit__switchDelay:
      0000AC 00                    9428 	.db #0x00	; 0
      0000AD                       9429 __xinit__gunMap:
      0000AD 53                    9430 	.db #0x53	; 83	'S'
      0000AE 5B                    9431 	.db #0x5b	; 91
      0000AF 61                    9432 	.db #0x61	; 97	'a'
      0000B0                       9433 __xinit__score:
      0000B0 00 00                 9434 	.dw #0x0000
      0000B2                       9435 __xinit__SCORE:
      0000B2 00 00 00 00           9436 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B6                       9437 __xinit__INCREMENT:
      0000B6 01 00 00 00           9438 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   9439 	.area _CABS (ABS)
