                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickPickups
                                     16 	.globl _moveProjectiles
                                     17 	.globl _fire
                                     18 	.globl _setGunIcon
                                     19 	.globl _checkCollision
                                     20 	.globl _spawnPickup
                                     21 	.globl _takeDamage
                                     22 	.globl _move
                                     23 	.globl _updateEnemyPositions
                                     24 	.globl _initEnemies
                                     25 	.globl _playSound
                                     26 	.globl _updateDirection
                                     27 	.globl _incrementScore
                                     28 	.globl _updateMissileCount
                                     29 	.globl _updateScore
                                     30 	.globl _setHealthBar
                                     31 	.globl _interruptLCD
                                     32 	.globl _bcd2text
                                     33 	.globl _bcd_sub
                                     34 	.globl _bcd_add
                                     35 	.globl _rand
                                     36 	.globl _initrand
                                     37 	.globl _font_set
                                     38 	.globl _font_load
                                     39 	.globl _font_init
                                     40 	.globl _printf
                                     41 	.globl _set_sprite_data
                                     42 	.globl _set_win_tiles
                                     43 	.globl _set_bkg_tiles
                                     44 	.globl _set_bkg_data
                                     45 	.globl _wait_vbl_done
                                     46 	.globl _set_interrupts
                                     47 	.globl _waitpad
                                     48 	.globl _joypad
                                     49 	.globl _add_LCD
                                     50 	.globl _INCREMENT
                                     51 	.globl _SCORE
                                     52 	.globl _score
                                     53 	.globl _gunMap
                                     54 	.globl _switchDelay
                                     55 	.globl _MISSILES
                                     56 	.globl _splashArea
                                     57 	.globl _missiles
                                     58 	.globl _currentGun
                                     59 	.globl _gunLevel
                                     60 	.globl _enemyCollisionCount
                                     61 	.globl _yOverflow
                                     62 	.globl _xOverflow
                                     63 	.globl _bgY
                                     64 	.globl _bgX
                                     65 	.globl _playerDrawY
                                     66 	.globl _playerDrawX
                                     67 	.globl _playerY
                                     68 	.globl _playerX
                                     69 	.globl _ySpeed
                                     70 	.globl _xSpeed
                                     71 	.globl _yDir
                                     72 	.globl _xDir
                                     73 	.globl _fireCooldown
                                     74 	.globl _oldestProjectile
                                     75 	.globl _missile
                                     76 	.globl _doubleGun
                                     77 	.globl _singleGun
                                     78 	.globl _shieldship
                                     79 	.globl _bigblob
                                     80 	.globl _miniship
                                     81 	.globl _bomb
                                     82 	.globl _blob
                                     83 	.globl _scorelabel
                                     84 	.globl _weaponlabel
                                     85 	.globl _shieldlabel
                                     86 	.globl _hullabel
                                     87 	.globl _pickup
                                     88 	.globl _min_font
                                     89 	.globl _shield
                                     90 	.globl _hull
                                     91 	.globl _joydata
                                     92 	.globl _projectiles
                                     93 	.globl _enemies
                                     94 	.globl _enemyOptions
                                     95 	.globl _MAXGUNLEVEL
                                     96 	.globl _maxShield
                                     97 	.globl _maxHull
                                     98 	.globl _PLAYERSIZE
                                     99 	.globl _PROJECTILECOUNT
                                    100 	.globl _ySpawnPositions
                                    101 	.globl _xSpawnPositions
                                    102 	.globl _ENEMYCOUNT
                                    103 	.globl _EMPTYSPRITE
                                    104 	.globl _BLANK
                                    105 	.globl _BLANKSIZE
                                    106 	.globl _Player1
                                    107 	.globl _Pickups
                                    108 	.globl _health
                                    109 	.globl _ammo
                                    110 	.globl _upgrade
                                    111 	.globl _ProjectileTiles
                                    112 	.globl _largeenemies
                                    113 	.globl _enemy1
                                    114 	.globl _enemyOptionCount
                                    115 	.globl _healthblock
                                    116 	.globl _backgroundtiles
                                    117 	.globl _background1
                                    118 	.globl _cross
                                    119 ;--------------------------------------------------------
                                    120 ; special function registers
                                    121 ;--------------------------------------------------------
                                    122 ;--------------------------------------------------------
                                    123 ; ram data
                                    124 ;--------------------------------------------------------
                                    125 	.area _DATA
      000000                        126 _enemyOptions::
      000000                        127 	.ds 85
      000055                        128 _enemies::
      000055                        129 	.ds 85
      0000AA                        130 _projectiles::
      0000AA                        131 	.ds 60
      0000E6                        132 _joydata::
      0000E6                        133 	.ds 1
      0000E7                        134 _hull::
      0000E7                        135 	.ds 1
      0000E8                        136 _shield::
      0000E8                        137 	.ds 1
      0000E9                        138 _min_font::
      0000E9                        139 	.ds 2
      0000EB                        140 _pickup::
      0000EB                        141 	.ds 9
                                    142 ;--------------------------------------------------------
                                    143 ; ram data
                                    144 ;--------------------------------------------------------
                                    145 	.area _INITIALIZED
      000000                        146 _hullabel::
      000000                        147 	.ds 4
      000004                        148 _shieldlabel::
      000004                        149 	.ds 4
      000008                        150 _weaponlabel::
      000008                        151 	.ds 4
      00000C                        152 _scorelabel::
      00000C                        153 	.ds 4
      000010                        154 _blob::
      000010                        155 	.ds 17
      000021                        156 _bomb::
      000021                        157 	.ds 17
      000032                        158 _miniship::
      000032                        159 	.ds 17
      000043                        160 _bigblob::
      000043                        161 	.ds 17
      000054                        162 _shieldship::
      000054                        163 	.ds 17
      000065                        164 _singleGun::
      000065                        165 	.ds 12
      000071                        166 _doubleGun::
      000071                        167 	.ds 12
      00007D                        168 _missile::
      00007D                        169 	.ds 12
      000089                        170 _oldestProjectile::
      000089                        171 	.ds 1
      00008A                        172 _fireCooldown::
      00008A                        173 	.ds 1
      00008B                        174 _xDir::
      00008B                        175 	.ds 1
      00008C                        176 _yDir::
      00008C                        177 	.ds 1
      00008D                        178 _xSpeed::
      00008D                        179 	.ds 1
      00008E                        180 _ySpeed::
      00008E                        181 	.ds 1
      00008F                        182 _playerX::
      00008F                        183 	.ds 2
      000091                        184 _playerY::
      000091                        185 	.ds 2
      000093                        186 _playerDrawX::
      000093                        187 	.ds 1
      000094                        188 _playerDrawY::
      000094                        189 	.ds 1
      000095                        190 _bgX::
      000095                        191 	.ds 2
      000097                        192 _bgY::
      000097                        193 	.ds 2
      000099                        194 _xOverflow::
      000099                        195 	.ds 2
      00009B                        196 _yOverflow::
      00009B                        197 	.ds 2
      00009D                        198 _enemyCollisionCount::
      00009D                        199 	.ds 1
      00009E                        200 _gunLevel::
      00009E                        201 	.ds 1
      00009F                        202 _currentGun::
      00009F                        203 	.ds 1
      0000A0                        204 _missiles::
      0000A0                        205 	.ds 1
      0000A1                        206 _splashArea::
      0000A1                        207 	.ds 1
      0000A2                        208 _MISSILES::
      0000A2                        209 	.ds 4
      0000A6                        210 _switchDelay::
      0000A6                        211 	.ds 1
      0000A7                        212 _gunMap::
      0000A7                        213 	.ds 3
      0000AA                        214 _score::
      0000AA                        215 	.ds 2
      0000AC                        216 _SCORE::
      0000AC                        217 	.ds 4
      0000B0                        218 _INCREMENT::
      0000B0                        219 	.ds 4
                                    220 ;--------------------------------------------------------
                                    221 ; absolute external ram data
                                    222 ;--------------------------------------------------------
                                    223 	.area _DABS (ABS)
                                    224 ;--------------------------------------------------------
                                    225 ; global & static initialisations
                                    226 ;--------------------------------------------------------
                                    227 	.area _HOME
                                    228 	.area _GSINIT
                                    229 	.area _GSFINAL
                                    230 	.area _GSINIT
                                    231 ;--------------------------------------------------------
                                    232 ; Home
                                    233 ;--------------------------------------------------------
                                    234 	.area _HOME
                                    235 	.area _HOME
                                    236 ;--------------------------------------------------------
                                    237 ; code
                                    238 ;--------------------------------------------------------
                                    239 	.area _CODE
                                    240 ;src/main.c:136: void interruptLCD()
                                    241 ;	---------------------------------
                                    242 ; Function interruptLCD
                                    243 ; ---------------------------------
      000000                        244 _interruptLCD::
                                    245 ;src/main.c:138: HIDE_SPRITES;
      000000 F0r00                  246 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  247 	and	a, #0xfd
      000004 E0r00                  248 	ldh	(_LCDC_REG + 0), a
                                    249 ;src/main.c:139: }
      000006 C9                     250 	ret
      000007                        251 _cross:
      000007 18                     252 	.db #0x18	; 24
      000008 18                     253 	.db #0x18	; 24
      000009 18                     254 	.db #0x18	; 24
      00000A 18                     255 	.db #0x18	; 24
      00000B 3C                     256 	.db #0x3c	; 60
      00000C 3C                     257 	.db #0x3c	; 60
      00000D 3C                     258 	.db #0x3c	; 60
      00000E 3C                     259 	.db #0x3c	; 60
      00000F 7E                     260 	.db #0x7e	; 126
      000010 7E                     261 	.db #0x7e	; 126
      000011 7E                     262 	.db #0x7e	; 126
      000012 7E                     263 	.db #0x7e	; 126
      000013 FF                     264 	.db #0xff	; 255
      000014 FF                     265 	.db #0xff	; 255
      000015 FF                     266 	.db #0xff	; 255
      000016 FF                     267 	.db #0xff	; 255
      000017 0F                     268 	.db #0x0f	; 15
      000018 0F                     269 	.db #0x0f	; 15
      000019 3F                     270 	.db #0x3f	; 63
      00001A 3F                     271 	.db #0x3f	; 63
      00001B FF                     272 	.db #0xff	; 255
      00001C FF                     273 	.db #0xff	; 255
      00001D FF                     274 	.db #0xff	; 255
      00001E FF                     275 	.db #0xff	; 255
      00001F 7E                     276 	.db #0x7e	; 126
      000020 7E                     277 	.db #0x7e	; 126
      000021 3E                     278 	.db #0x3e	; 62
      000022 3E                     279 	.db #0x3e	; 62
      000023 1C                     280 	.db #0x1c	; 28
      000024 1C                     281 	.db #0x1c	; 28
      000025 0C                     282 	.db #0x0c	; 12
      000026 0C                     283 	.db #0x0c	; 12
      000027 C0                     284 	.db #0xc0	; 192
      000028 C0                     285 	.db #0xc0	; 192
      000029 F0                     286 	.db #0xf0	; 240
      00002A F0                     287 	.db #0xf0	; 240
      00002B FC                     288 	.db #0xfc	; 252
      00002C FC                     289 	.db #0xfc	; 252
      00002D FF                     290 	.db #0xff	; 255
      00002E FF                     291 	.db #0xff	; 255
      00002F FF                     292 	.db #0xff	; 255
      000030 FF                     293 	.db #0xff	; 255
      000031 FC                     294 	.db #0xfc	; 252
      000032 FC                     295 	.db #0xfc	; 252
      000033 F0                     296 	.db #0xf0	; 240
      000034 F0                     297 	.db #0xf0	; 240
      000035 C0                     298 	.db #0xc0	; 192
      000036 C0                     299 	.db #0xc0	; 192
      000037 0C                     300 	.db #0x0c	; 12
      000038 0C                     301 	.db #0x0c	; 12
      000039 1C                     302 	.db #0x1c	; 28
      00003A 1C                     303 	.db #0x1c	; 28
      00003B 3E                     304 	.db #0x3e	; 62
      00003C 3E                     305 	.db #0x3e	; 62
      00003D 7E                     306 	.db #0x7e	; 126
      00003E 7E                     307 	.db #0x7e	; 126
      00003F FF                     308 	.db #0xff	; 255
      000040 FF                     309 	.db #0xff	; 255
      000041 FF                     310 	.db #0xff	; 255
      000042 FF                     311 	.db #0xff	; 255
      000043 3F                     312 	.db #0x3f	; 63
      000044 3F                     313 	.db #0x3f	; 63
      000045 0F                     314 	.db #0x0f	; 15
      000046 0F                     315 	.db #0x0f	; 15
      000047 FF                     316 	.db #0xff	; 255
      000048 FF                     317 	.db #0xff	; 255
      000049 FF                     318 	.db #0xff	; 255
      00004A FF                     319 	.db #0xff	; 255
      00004B 7E                     320 	.db #0x7e	; 126
      00004C 7E                     321 	.db #0x7e	; 126
      00004D 7E                     322 	.db #0x7e	; 126
      00004E 7E                     323 	.db #0x7e	; 126
      00004F 3C                     324 	.db #0x3c	; 60
      000050 3C                     325 	.db #0x3c	; 60
      000051 3C                     326 	.db #0x3c	; 60
      000052 3C                     327 	.db #0x3c	; 60
      000053 18                     328 	.db #0x18	; 24
      000054 18                     329 	.db #0x18	; 24
      000055 18                     330 	.db #0x18	; 24
      000056 18                     331 	.db #0x18	; 24
      000057 30                     332 	.db #0x30	; 48	'0'
      000058 30                     333 	.db #0x30	; 48	'0'
      000059 38                     334 	.db #0x38	; 56	'8'
      00005A 38                     335 	.db #0x38	; 56	'8'
      00005B 7C                     336 	.db #0x7c	; 124
      00005C 7C                     337 	.db #0x7c	; 124
      00005D 7E                     338 	.db #0x7e	; 126
      00005E 7E                     339 	.db #0x7e	; 126
      00005F FF                     340 	.db #0xff	; 255
      000060 FF                     341 	.db #0xff	; 255
      000061 FF                     342 	.db #0xff	; 255
      000062 FF                     343 	.db #0xff	; 255
      000063 FC                     344 	.db #0xfc	; 252
      000064 FC                     345 	.db #0xfc	; 252
      000065 F0                     346 	.db #0xf0	; 240
      000066 F0                     347 	.db #0xf0	; 240
      000067 03                     348 	.db #0x03	; 3
      000068 03                     349 	.db #0x03	; 3
      000069 0F                     350 	.db #0x0f	; 15
      00006A 0F                     351 	.db #0x0f	; 15
      00006B 3F                     352 	.db #0x3f	; 63
      00006C 3F                     353 	.db #0x3f	; 63
      00006D FF                     354 	.db #0xff	; 255
      00006E FF                     355 	.db #0xff	; 255
      00006F FF                     356 	.db #0xff	; 255
      000070 FF                     357 	.db #0xff	; 255
      000071 3F                     358 	.db #0x3f	; 63
      000072 3F                     359 	.db #0x3f	; 63
      000073 0F                     360 	.db #0x0f	; 15
      000074 0F                     361 	.db #0x0f	; 15
      000075 03                     362 	.db #0x03	; 3
      000076 03                     363 	.db #0x03	; 3
      000077 F0                     364 	.db #0xf0	; 240
      000078 F0                     365 	.db #0xf0	; 240
      000079 FC                     366 	.db #0xfc	; 252
      00007A FC                     367 	.db #0xfc	; 252
      00007B FF                     368 	.db #0xff	; 255
      00007C FF                     369 	.db #0xff	; 255
      00007D FF                     370 	.db #0xff	; 255
      00007E FF                     371 	.db #0xff	; 255
      00007F 7E                     372 	.db #0x7e	; 126
      000080 7E                     373 	.db #0x7e	; 126
      000081 7C                     374 	.db #0x7c	; 124
      000082 7C                     375 	.db #0x7c	; 124
      000083 38                     376 	.db #0x38	; 56	'8'
      000084 38                     377 	.db #0x38	; 56	'8'
      000085 30                     378 	.db #0x30	; 48	'0'
      000086 30                     379 	.db #0x30	; 48	'0'
      000087                        380 _background1:
      000087 26                     381 	.db #0x26	; 38
      000088 26                     382 	.db #0x26	; 38
      000089 26                     383 	.db #0x26	; 38
      00008A 26                     384 	.db #0x26	; 38
      00008B 26                     385 	.db #0x26	; 38
      00008C 26                     386 	.db #0x26	; 38
      00008D 26                     387 	.db #0x26	; 38
      00008E 26                     388 	.db #0x26	; 38
      00008F 26                     389 	.db #0x26	; 38
      000090 26                     390 	.db #0x26	; 38
      000091 26                     391 	.db #0x26	; 38
      000092 2A                     392 	.db #0x2a	; 42
      000093 29                     393 	.db #0x29	; 41
      000094 26                     394 	.db #0x26	; 38
      000095 26                     395 	.db #0x26	; 38
      000096 26                     396 	.db #0x26	; 38
      000097 26                     397 	.db #0x26	; 38
      000098 26                     398 	.db #0x26	; 38
      000099 26                     399 	.db #0x26	; 38
      00009A 26                     400 	.db #0x26	; 38
      00009B 2C                     401 	.db #0x2c	; 44
      00009C 26                     402 	.db #0x26	; 38
      00009D 26                     403 	.db #0x26	; 38
      00009E 26                     404 	.db #0x26	; 38
      00009F 26                     405 	.db #0x26	; 38
      0000A0 26                     406 	.db #0x26	; 38
      0000A1 26                     407 	.db #0x26	; 38
      0000A2 26                     408 	.db #0x26	; 38
      0000A3 26                     409 	.db #0x26	; 38
      0000A4 26                     410 	.db #0x26	; 38
      0000A5 26                     411 	.db #0x26	; 38
      0000A6 26                     412 	.db #0x26	; 38
      0000A7 26                     413 	.db #0x26	; 38
      0000A8 2B                     414 	.db #0x2b	; 43
      0000A9 26                     415 	.db #0x26	; 38
      0000AA 26                     416 	.db #0x26	; 38
      0000AB 26                     417 	.db #0x26	; 38
      0000AC 26                     418 	.db #0x26	; 38
      0000AD 26                     419 	.db #0x26	; 38
      0000AE 26                     420 	.db #0x26	; 38
      0000AF 26                     421 	.db #0x26	; 38
      0000B0 26                     422 	.db #0x26	; 38
      0000B1 26                     423 	.db #0x26	; 38
      0000B2 26                     424 	.db #0x26	; 38
      0000B3 26                     425 	.db #0x26	; 38
      0000B4 26                     426 	.db #0x26	; 38
      0000B5 26                     427 	.db #0x26	; 38
      0000B6 26                     428 	.db #0x26	; 38
      0000B7 26                     429 	.db #0x26	; 38
      0000B8 26                     430 	.db #0x26	; 38
      0000B9 26                     431 	.db #0x26	; 38
      0000BA 26                     432 	.db #0x26	; 38
      0000BB 26                     433 	.db #0x26	; 38
      0000BC 26                     434 	.db #0x26	; 38
      0000BD 26                     435 	.db #0x26	; 38
      0000BE 26                     436 	.db #0x26	; 38
      0000BF 26                     437 	.db #0x26	; 38
      0000C0 26                     438 	.db #0x26	; 38
      0000C1 26                     439 	.db #0x26	; 38
      0000C2 26                     440 	.db #0x26	; 38
      0000C3 26                     441 	.db #0x26	; 38
      0000C4 26                     442 	.db #0x26	; 38
      0000C5 26                     443 	.db #0x26	; 38
      0000C6 26                     444 	.db #0x26	; 38
      0000C7 26                     445 	.db #0x26	; 38
      0000C8 26                     446 	.db #0x26	; 38
      0000C9 26                     447 	.db #0x26	; 38
      0000CA 26                     448 	.db #0x26	; 38
      0000CB 26                     449 	.db #0x26	; 38
      0000CC 26                     450 	.db #0x26	; 38
      0000CD 26                     451 	.db #0x26	; 38
      0000CE 26                     452 	.db #0x26	; 38
      0000CF 26                     453 	.db #0x26	; 38
      0000D0 26                     454 	.db #0x26	; 38
      0000D1 26                     455 	.db #0x26	; 38
      0000D2 26                     456 	.db #0x26	; 38
      0000D3 26                     457 	.db #0x26	; 38
      0000D4 26                     458 	.db #0x26	; 38
      0000D5 26                     459 	.db #0x26	; 38
      0000D6 26                     460 	.db #0x26	; 38
      0000D7 26                     461 	.db #0x26	; 38
      0000D8 26                     462 	.db #0x26	; 38
      0000D9 26                     463 	.db #0x26	; 38
      0000DA 26                     464 	.db #0x26	; 38
      0000DB 26                     465 	.db #0x26	; 38
      0000DC 26                     466 	.db #0x26	; 38
      0000DD 26                     467 	.db #0x26	; 38
      0000DE 26                     468 	.db #0x26	; 38
      0000DF 26                     469 	.db #0x26	; 38
      0000E0 26                     470 	.db #0x26	; 38
      0000E1 26                     471 	.db #0x26	; 38
      0000E2 26                     472 	.db #0x26	; 38
      0000E3 26                     473 	.db #0x26	; 38
      0000E4 26                     474 	.db #0x26	; 38
      0000E5 26                     475 	.db #0x26	; 38
      0000E6 26                     476 	.db #0x26	; 38
      0000E7 26                     477 	.db #0x26	; 38
      0000E8 26                     478 	.db #0x26	; 38
      0000E9 26                     479 	.db #0x26	; 38
      0000EA 26                     480 	.db #0x26	; 38
      0000EB 26                     481 	.db #0x26	; 38
      0000EC 26                     482 	.db #0x26	; 38
      0000ED 26                     483 	.db #0x26	; 38
      0000EE 26                     484 	.db #0x26	; 38
      0000EF 26                     485 	.db #0x26	; 38
      0000F0 26                     486 	.db #0x26	; 38
      0000F1 26                     487 	.db #0x26	; 38
      0000F2 26                     488 	.db #0x26	; 38
      0000F3 26                     489 	.db #0x26	; 38
      0000F4 26                     490 	.db #0x26	; 38
      0000F5 26                     491 	.db #0x26	; 38
      0000F6 26                     492 	.db #0x26	; 38
      0000F7 26                     493 	.db #0x26	; 38
      0000F8 2B                     494 	.db #0x2b	; 43
      0000F9 26                     495 	.db #0x26	; 38
      0000FA 26                     496 	.db #0x26	; 38
      0000FB 26                     497 	.db #0x26	; 38
      0000FC 26                     498 	.db #0x26	; 38
      0000FD 26                     499 	.db #0x26	; 38
      0000FE 26                     500 	.db #0x26	; 38
      0000FF 2B                     501 	.db #0x2b	; 43
      000100 26                     502 	.db #0x26	; 38
      000101 26                     503 	.db #0x26	; 38
      000102 26                     504 	.db #0x26	; 38
      000103 26                     505 	.db #0x26	; 38
      000104 26                     506 	.db #0x26	; 38
      000105 26                     507 	.db #0x26	; 38
      000106 26                     508 	.db #0x26	; 38
      000107 26                     509 	.db #0x26	; 38
      000108 26                     510 	.db #0x26	; 38
      000109 26                     511 	.db #0x26	; 38
      00010A 26                     512 	.db #0x26	; 38
      00010B 26                     513 	.db #0x26	; 38
      00010C 2B                     514 	.db #0x2b	; 43
      00010D 26                     515 	.db #0x26	; 38
      00010E 26                     516 	.db #0x26	; 38
      00010F 26                     517 	.db #0x26	; 38
      000110 26                     518 	.db #0x26	; 38
      000111 26                     519 	.db #0x26	; 38
      000112 26                     520 	.db #0x26	; 38
      000113 26                     521 	.db #0x26	; 38
      000114 2C                     522 	.db #0x2c	; 44
      000115 26                     523 	.db #0x26	; 38
      000116 26                     524 	.db #0x26	; 38
      000117 26                     525 	.db #0x26	; 38
      000118 26                     526 	.db #0x26	; 38
      000119 26                     527 	.db #0x26	; 38
      00011A 26                     528 	.db #0x26	; 38
      00011B 26                     529 	.db #0x26	; 38
      00011C 26                     530 	.db #0x26	; 38
      00011D 26                     531 	.db #0x26	; 38
      00011E 26                     532 	.db #0x26	; 38
      00011F 26                     533 	.db #0x26	; 38
      000120 26                     534 	.db #0x26	; 38
      000121 26                     535 	.db #0x26	; 38
      000122 26                     536 	.db #0x26	; 38
      000123 26                     537 	.db #0x26	; 38
      000124 26                     538 	.db #0x26	; 38
      000125 26                     539 	.db #0x26	; 38
      000126 26                     540 	.db #0x26	; 38
      000127 26                     541 	.db #0x26	; 38
      000128 26                     542 	.db #0x26	; 38
      000129 2C                     543 	.db #0x2c	; 44
      00012A 26                     544 	.db #0x26	; 38
      00012B 26                     545 	.db #0x26	; 38
      00012C 26                     546 	.db #0x26	; 38
      00012D 26                     547 	.db #0x26	; 38
      00012E 25                     548 	.db #0x25	; 37
      00012F 26                     549 	.db #0x26	; 38
      000130 26                     550 	.db #0x26	; 38
      000131 26                     551 	.db #0x26	; 38
      000132 26                     552 	.db #0x26	; 38
      000133 26                     553 	.db #0x26	; 38
      000134 26                     554 	.db #0x26	; 38
      000135 26                     555 	.db #0x26	; 38
      000136 26                     556 	.db #0x26	; 38
      000137 26                     557 	.db #0x26	; 38
      000138 26                     558 	.db #0x26	; 38
      000139 26                     559 	.db #0x26	; 38
      00013A 26                     560 	.db #0x26	; 38
      00013B 26                     561 	.db #0x26	; 38
      00013C 2C                     562 	.db #0x2c	; 44
      00013D 26                     563 	.db #0x26	; 38
      00013E 26                     564 	.db #0x26	; 38
      00013F 26                     565 	.db #0x26	; 38
      000140 26                     566 	.db #0x26	; 38
      000141 26                     567 	.db #0x26	; 38
      000142 26                     568 	.db #0x26	; 38
      000143 26                     569 	.db #0x26	; 38
      000144 2B                     570 	.db #0x2b	; 43
      000145 26                     571 	.db #0x26	; 38
      000146 26                     572 	.db #0x26	; 38
      000147 26                     573 	.db #0x26	; 38
      000148 26                     574 	.db #0x26	; 38
      000149 26                     575 	.db #0x26	; 38
      00014A 26                     576 	.db #0x26	; 38
      00014B 26                     577 	.db #0x26	; 38
      00014C 26                     578 	.db #0x26	; 38
      00014D 26                     579 	.db #0x26	; 38
      00014E 26                     580 	.db #0x26	; 38
      00014F 26                     581 	.db #0x26	; 38
      000150 26                     582 	.db #0x26	; 38
      000151 26                     583 	.db #0x26	; 38
      000152 26                     584 	.db #0x26	; 38
      000153 26                     585 	.db #0x26	; 38
      000154 26                     586 	.db #0x26	; 38
      000155 26                     587 	.db #0x26	; 38
      000156 26                     588 	.db #0x26	; 38
      000157 26                     589 	.db #0x26	; 38
      000158 26                     590 	.db #0x26	; 38
      000159 26                     591 	.db #0x26	; 38
      00015A 26                     592 	.db #0x26	; 38
      00015B 26                     593 	.db #0x26	; 38
      00015C 26                     594 	.db #0x26	; 38
      00015D 26                     595 	.db #0x26	; 38
      00015E 26                     596 	.db #0x26	; 38
      00015F 26                     597 	.db #0x26	; 38
      000160 2C                     598 	.db #0x2c	; 44
      000161 26                     599 	.db #0x26	; 38
      000162 26                     600 	.db #0x26	; 38
      000163 26                     601 	.db #0x26	; 38
      000164 26                     602 	.db #0x26	; 38
      000165 26                     603 	.db #0x26	; 38
      000166 26                     604 	.db #0x26	; 38
      000167 26                     605 	.db #0x26	; 38
      000168 26                     606 	.db #0x26	; 38
      000169 26                     607 	.db #0x26	; 38
      00016A 26                     608 	.db #0x26	; 38
      00016B 26                     609 	.db #0x26	; 38
      00016C 26                     610 	.db #0x26	; 38
      00016D 26                     611 	.db #0x26	; 38
      00016E 26                     612 	.db #0x26	; 38
      00016F 26                     613 	.db #0x26	; 38
      000170 26                     614 	.db #0x26	; 38
      000171 26                     615 	.db #0x26	; 38
      000172 26                     616 	.db #0x26	; 38
      000173 26                     617 	.db #0x26	; 38
      000174 26                     618 	.db #0x26	; 38
      000175 26                     619 	.db #0x26	; 38
      000176 26                     620 	.db #0x26	; 38
      000177 26                     621 	.db #0x26	; 38
      000178 26                     622 	.db #0x26	; 38
      000179 26                     623 	.db #0x26	; 38
      00017A 26                     624 	.db #0x26	; 38
      00017B 26                     625 	.db #0x26	; 38
      00017C 26                     626 	.db #0x26	; 38
      00017D 26                     627 	.db #0x26	; 38
      00017E 26                     628 	.db #0x26	; 38
      00017F 26                     629 	.db #0x26	; 38
      000180 26                     630 	.db #0x26	; 38
      000181 26                     631 	.db #0x26	; 38
      000182 26                     632 	.db #0x26	; 38
      000183 26                     633 	.db #0x26	; 38
      000184 26                     634 	.db #0x26	; 38
      000185 26                     635 	.db #0x26	; 38
      000186 26                     636 	.db #0x26	; 38
      000187 26                     637 	.db #0x26	; 38
      000188 26                     638 	.db #0x26	; 38
      000189 26                     639 	.db #0x26	; 38
      00018A 26                     640 	.db #0x26	; 38
      00018B 26                     641 	.db #0x26	; 38
      00018C 26                     642 	.db #0x26	; 38
      00018D 26                     643 	.db #0x26	; 38
      00018E 26                     644 	.db #0x26	; 38
      00018F 26                     645 	.db #0x26	; 38
      000190 26                     646 	.db #0x26	; 38
      000191 26                     647 	.db #0x26	; 38
      000192 26                     648 	.db #0x26	; 38
      000193 26                     649 	.db #0x26	; 38
      000194 26                     650 	.db #0x26	; 38
      000195 2B                     651 	.db #0x2b	; 43
      000196 26                     652 	.db #0x26	; 38
      000197 26                     653 	.db #0x26	; 38
      000198 26                     654 	.db #0x26	; 38
      000199 26                     655 	.db #0x26	; 38
      00019A 26                     656 	.db #0x26	; 38
      00019B 26                     657 	.db #0x26	; 38
      00019C 26                     658 	.db #0x26	; 38
      00019D 26                     659 	.db #0x26	; 38
      00019E 26                     660 	.db #0x26	; 38
      00019F 26                     661 	.db #0x26	; 38
      0001A0 26                     662 	.db #0x26	; 38
      0001A1 26                     663 	.db #0x26	; 38
      0001A2 26                     664 	.db #0x26	; 38
      0001A3 26                     665 	.db #0x26	; 38
      0001A4 26                     666 	.db #0x26	; 38
      0001A5 26                     667 	.db #0x26	; 38
      0001A6 25                     668 	.db #0x25	; 37
      0001A7 26                     669 	.db #0x26	; 38
      0001A8 26                     670 	.db #0x26	; 38
      0001A9 26                     671 	.db #0x26	; 38
      0001AA 2B                     672 	.db #0x2b	; 43
      0001AB 26                     673 	.db #0x26	; 38
      0001AC 26                     674 	.db #0x26	; 38
      0001AD 26                     675 	.db #0x26	; 38
      0001AE 26                     676 	.db #0x26	; 38
      0001AF 26                     677 	.db #0x26	; 38
      0001B0 26                     678 	.db #0x26	; 38
      0001B1 26                     679 	.db #0x26	; 38
      0001B2 26                     680 	.db #0x26	; 38
      0001B3 26                     681 	.db #0x26	; 38
      0001B4 26                     682 	.db #0x26	; 38
      0001B5 26                     683 	.db #0x26	; 38
      0001B6 26                     684 	.db #0x26	; 38
      0001B7 26                     685 	.db #0x26	; 38
      0001B8 26                     686 	.db #0x26	; 38
      0001B9 26                     687 	.db #0x26	; 38
      0001BA 26                     688 	.db #0x26	; 38
      0001BB 26                     689 	.db #0x26	; 38
      0001BC 26                     690 	.db #0x26	; 38
      0001BD 26                     691 	.db #0x26	; 38
      0001BE 26                     692 	.db #0x26	; 38
      0001BF 26                     693 	.db #0x26	; 38
      0001C0 26                     694 	.db #0x26	; 38
      0001C1 26                     695 	.db #0x26	; 38
      0001C2 26                     696 	.db #0x26	; 38
      0001C3 26                     697 	.db #0x26	; 38
      0001C4 2B                     698 	.db #0x2b	; 43
      0001C5 26                     699 	.db #0x26	; 38
      0001C6 26                     700 	.db #0x26	; 38
      0001C7 26                     701 	.db #0x26	; 38
      0001C8 26                     702 	.db #0x26	; 38
      0001C9 26                     703 	.db #0x26	; 38
      0001CA 26                     704 	.db #0x26	; 38
      0001CB 26                     705 	.db #0x26	; 38
      0001CC 26                     706 	.db #0x26	; 38
      0001CD 26                     707 	.db #0x26	; 38
      0001CE 26                     708 	.db #0x26	; 38
      0001CF 26                     709 	.db #0x26	; 38
      0001D0 26                     710 	.db #0x26	; 38
      0001D1 26                     711 	.db #0x26	; 38
      0001D2 26                     712 	.db #0x26	; 38
      0001D3 26                     713 	.db #0x26	; 38
      0001D4 26                     714 	.db #0x26	; 38
      0001D5 26                     715 	.db #0x26	; 38
      0001D6 26                     716 	.db #0x26	; 38
      0001D7 26                     717 	.db #0x26	; 38
      0001D8 26                     718 	.db #0x26	; 38
      0001D9 26                     719 	.db #0x26	; 38
      0001DA 27                     720 	.db #0x27	; 39
      0001DB 28                     721 	.db #0x28	; 40
      0001DC 26                     722 	.db #0x26	; 38
      0001DD 26                     723 	.db #0x26	; 38
      0001DE 26                     724 	.db #0x26	; 38
      0001DF 26                     725 	.db #0x26	; 38
      0001E0 26                     726 	.db #0x26	; 38
      0001E1 26                     727 	.db #0x26	; 38
      0001E2 26                     728 	.db #0x26	; 38
      0001E3 26                     729 	.db #0x26	; 38
      0001E4 26                     730 	.db #0x26	; 38
      0001E5 26                     731 	.db #0x26	; 38
      0001E6 26                     732 	.db #0x26	; 38
      0001E7 26                     733 	.db #0x26	; 38
      0001E8 26                     734 	.db #0x26	; 38
      0001E9 26                     735 	.db #0x26	; 38
      0001EA 26                     736 	.db #0x26	; 38
      0001EB 26                     737 	.db #0x26	; 38
      0001EC 26                     738 	.db #0x26	; 38
      0001ED 26                     739 	.db #0x26	; 38
      0001EE 26                     740 	.db #0x26	; 38
      0001EF 26                     741 	.db #0x26	; 38
      0001F0 26                     742 	.db #0x26	; 38
      0001F1 26                     743 	.db #0x26	; 38
      0001F2 26                     744 	.db #0x26	; 38
      0001F3 26                     745 	.db #0x26	; 38
      0001F4 26                     746 	.db #0x26	; 38
      0001F5 26                     747 	.db #0x26	; 38
      0001F6 26                     748 	.db #0x26	; 38
      0001F7 26                     749 	.db #0x26	; 38
      0001F8 26                     750 	.db #0x26	; 38
      0001F9 26                     751 	.db #0x26	; 38
      0001FA 2A                     752 	.db #0x2a	; 42
      0001FB 29                     753 	.db #0x29	; 41
      0001FC 26                     754 	.db #0x26	; 38
      0001FD 26                     755 	.db #0x26	; 38
      0001FE 26                     756 	.db #0x26	; 38
      0001FF 26                     757 	.db #0x26	; 38
      000200 26                     758 	.db #0x26	; 38
      000201 26                     759 	.db #0x26	; 38
      000202 26                     760 	.db #0x26	; 38
      000203 26                     761 	.db #0x26	; 38
      000204 26                     762 	.db #0x26	; 38
      000205 26                     763 	.db #0x26	; 38
      000206 26                     764 	.db #0x26	; 38
      000207 26                     765 	.db #0x26	; 38
      000208 26                     766 	.db #0x26	; 38
      000209 26                     767 	.db #0x26	; 38
      00020A 26                     768 	.db #0x26	; 38
      00020B 26                     769 	.db #0x26	; 38
      00020C 26                     770 	.db #0x26	; 38
      00020D 26                     771 	.db #0x26	; 38
      00020E 27                     772 	.db #0x27	; 39
      00020F 28                     773 	.db #0x28	; 40
      000210 26                     774 	.db #0x26	; 38
      000211 26                     775 	.db #0x26	; 38
      000212 26                     776 	.db #0x26	; 38
      000213 26                     777 	.db #0x26	; 38
      000214 26                     778 	.db #0x26	; 38
      000215 26                     779 	.db #0x26	; 38
      000216 26                     780 	.db #0x26	; 38
      000217 26                     781 	.db #0x26	; 38
      000218 26                     782 	.db #0x26	; 38
      000219 26                     783 	.db #0x26	; 38
      00021A 26                     784 	.db #0x26	; 38
      00021B 26                     785 	.db #0x26	; 38
      00021C 26                     786 	.db #0x26	; 38
      00021D 26                     787 	.db #0x26	; 38
      00021E 26                     788 	.db #0x26	; 38
      00021F 2C                     789 	.db #0x2c	; 44
      000220 26                     790 	.db #0x26	; 38
      000221 26                     791 	.db #0x26	; 38
      000222 26                     792 	.db #0x26	; 38
      000223 26                     793 	.db #0x26	; 38
      000224 26                     794 	.db #0x26	; 38
      000225 26                     795 	.db #0x26	; 38
      000226 26                     796 	.db #0x26	; 38
      000227 26                     797 	.db #0x26	; 38
      000228 26                     798 	.db #0x26	; 38
      000229 26                     799 	.db #0x26	; 38
      00022A 26                     800 	.db #0x26	; 38
      00022B 26                     801 	.db #0x26	; 38
      00022C 26                     802 	.db #0x26	; 38
      00022D 26                     803 	.db #0x26	; 38
      00022E 2A                     804 	.db #0x2a	; 42
      00022F 29                     805 	.db #0x29	; 41
      000230 26                     806 	.db #0x26	; 38
      000231 26                     807 	.db #0x26	; 38
      000232 26                     808 	.db #0x26	; 38
      000233 26                     809 	.db #0x26	; 38
      000234 26                     810 	.db #0x26	; 38
      000235 26                     811 	.db #0x26	; 38
      000236 26                     812 	.db #0x26	; 38
      000237 26                     813 	.db #0x26	; 38
      000238 26                     814 	.db #0x26	; 38
      000239 26                     815 	.db #0x26	; 38
      00023A 26                     816 	.db #0x26	; 38
      00023B 26                     817 	.db #0x26	; 38
      00023C 26                     818 	.db #0x26	; 38
      00023D 25                     819 	.db #0x25	; 37
      00023E 26                     820 	.db #0x26	; 38
      00023F 26                     821 	.db #0x26	; 38
      000240 26                     822 	.db #0x26	; 38
      000241 26                     823 	.db #0x26	; 38
      000242 26                     824 	.db #0x26	; 38
      000243 26                     825 	.db #0x26	; 38
      000244 2C                     826 	.db #0x2c	; 44
      000245 26                     827 	.db #0x26	; 38
      000246 26                     828 	.db #0x26	; 38
      000247 26                     829 	.db #0x26	; 38
      000248 26                     830 	.db #0x26	; 38
      000249 26                     831 	.db #0x26	; 38
      00024A 26                     832 	.db #0x26	; 38
      00024B 26                     833 	.db #0x26	; 38
      00024C 26                     834 	.db #0x26	; 38
      00024D 26                     835 	.db #0x26	; 38
      00024E 26                     836 	.db #0x26	; 38
      00024F 26                     837 	.db #0x26	; 38
      000250 26                     838 	.db #0x26	; 38
      000251 26                     839 	.db #0x26	; 38
      000252 26                     840 	.db #0x26	; 38
      000253 26                     841 	.db #0x26	; 38
      000254 26                     842 	.db #0x26	; 38
      000255 26                     843 	.db #0x26	; 38
      000256 26                     844 	.db #0x26	; 38
      000257 26                     845 	.db #0x26	; 38
      000258 26                     846 	.db #0x26	; 38
      000259 26                     847 	.db #0x26	; 38
      00025A 26                     848 	.db #0x26	; 38
      00025B 26                     849 	.db #0x26	; 38
      00025C 26                     850 	.db #0x26	; 38
      00025D 26                     851 	.db #0x26	; 38
      00025E 26                     852 	.db #0x26	; 38
      00025F 26                     853 	.db #0x26	; 38
      000260 26                     854 	.db #0x26	; 38
      000261 26                     855 	.db #0x26	; 38
      000262 26                     856 	.db #0x26	; 38
      000263 26                     857 	.db #0x26	; 38
      000264 26                     858 	.db #0x26	; 38
      000265 26                     859 	.db #0x26	; 38
      000266 26                     860 	.db #0x26	; 38
      000267 26                     861 	.db #0x26	; 38
      000268 26                     862 	.db #0x26	; 38
      000269 26                     863 	.db #0x26	; 38
      00026A 2C                     864 	.db #0x2c	; 44
      00026B 26                     865 	.db #0x26	; 38
      00026C 26                     866 	.db #0x26	; 38
      00026D 26                     867 	.db #0x26	; 38
      00026E 26                     868 	.db #0x26	; 38
      00026F 26                     869 	.db #0x26	; 38
      000270 26                     870 	.db #0x26	; 38
      000271 26                     871 	.db #0x26	; 38
      000272 26                     872 	.db #0x26	; 38
      000273 26                     873 	.db #0x26	; 38
      000274 26                     874 	.db #0x26	; 38
      000275 26                     875 	.db #0x26	; 38
      000276 26                     876 	.db #0x26	; 38
      000277 26                     877 	.db #0x26	; 38
      000278 26                     878 	.db #0x26	; 38
      000279 2C                     879 	.db #0x2c	; 44
      00027A 26                     880 	.db #0x26	; 38
      00027B 26                     881 	.db #0x26	; 38
      00027C 26                     882 	.db #0x26	; 38
      00027D 26                     883 	.db #0x26	; 38
      00027E 26                     884 	.db #0x26	; 38
      00027F 26                     885 	.db #0x26	; 38
      000280 26                     886 	.db #0x26	; 38
      000281 26                     887 	.db #0x26	; 38
      000282 26                     888 	.db #0x26	; 38
      000283 26                     889 	.db #0x26	; 38
      000284 26                     890 	.db #0x26	; 38
      000285 26                     891 	.db #0x26	; 38
      000286 26                     892 	.db #0x26	; 38
      000287 26                     893 	.db #0x26	; 38
      000288 26                     894 	.db #0x26	; 38
      000289 26                     895 	.db #0x26	; 38
      00028A 26                     896 	.db #0x26	; 38
      00028B 26                     897 	.db #0x26	; 38
      00028C 26                     898 	.db #0x26	; 38
      00028D 26                     899 	.db #0x26	; 38
      00028E 26                     900 	.db #0x26	; 38
      00028F 26                     901 	.db #0x26	; 38
      000290 26                     902 	.db #0x26	; 38
      000291 26                     903 	.db #0x26	; 38
      000292 26                     904 	.db #0x26	; 38
      000293 26                     905 	.db #0x26	; 38
      000294 26                     906 	.db #0x26	; 38
      000295 2B                     907 	.db #0x2b	; 43
      000296 26                     908 	.db #0x26	; 38
      000297 26                     909 	.db #0x26	; 38
      000298 26                     910 	.db #0x26	; 38
      000299 26                     911 	.db #0x26	; 38
      00029A 26                     912 	.db #0x26	; 38
      00029B 26                     913 	.db #0x26	; 38
      00029C 26                     914 	.db #0x26	; 38
      00029D 26                     915 	.db #0x26	; 38
      00029E 26                     916 	.db #0x26	; 38
      00029F 26                     917 	.db #0x26	; 38
      0002A0 26                     918 	.db #0x26	; 38
      0002A1 26                     919 	.db #0x26	; 38
      0002A2 26                     920 	.db #0x26	; 38
      0002A3 26                     921 	.db #0x26	; 38
      0002A4 26                     922 	.db #0x26	; 38
      0002A5 26                     923 	.db #0x26	; 38
      0002A6 26                     924 	.db #0x26	; 38
      0002A7 28                     925 	.db #0x28	; 40
      0002A8 26                     926 	.db #0x26	; 38
      0002A9 26                     927 	.db #0x26	; 38
      0002AA 26                     928 	.db #0x26	; 38
      0002AB 26                     929 	.db #0x26	; 38
      0002AC 26                     930 	.db #0x26	; 38
      0002AD 26                     931 	.db #0x26	; 38
      0002AE 26                     932 	.db #0x26	; 38
      0002AF 26                     933 	.db #0x26	; 38
      0002B0 26                     934 	.db #0x26	; 38
      0002B1 26                     935 	.db #0x26	; 38
      0002B2 26                     936 	.db #0x26	; 38
      0002B3 26                     937 	.db #0x26	; 38
      0002B4 26                     938 	.db #0x26	; 38
      0002B5 26                     939 	.db #0x26	; 38
      0002B6 26                     940 	.db #0x26	; 38
      0002B7 26                     941 	.db #0x26	; 38
      0002B8 26                     942 	.db #0x26	; 38
      0002B9 26                     943 	.db #0x26	; 38
      0002BA 26                     944 	.db #0x26	; 38
      0002BB 26                     945 	.db #0x26	; 38
      0002BC 26                     946 	.db #0x26	; 38
      0002BD 26                     947 	.db #0x26	; 38
      0002BE 26                     948 	.db #0x26	; 38
      0002BF 26                     949 	.db #0x26	; 38
      0002C0 2B                     950 	.db #0x2b	; 43
      0002C1 26                     951 	.db #0x26	; 38
      0002C2 26                     952 	.db #0x26	; 38
      0002C3 26                     953 	.db #0x26	; 38
      0002C4 26                     954 	.db #0x26	; 38
      0002C5 26                     955 	.db #0x26	; 38
      0002C6 27                     956 	.db #0x27	; 39
      0002C7 29                     957 	.db #0x29	; 41
      0002C8 26                     958 	.db #0x26	; 38
      0002C9 26                     959 	.db #0x26	; 38
      0002CA 26                     960 	.db #0x26	; 38
      0002CB 26                     961 	.db #0x26	; 38
      0002CC 26                     962 	.db #0x26	; 38
      0002CD 26                     963 	.db #0x26	; 38
      0002CE 2B                     964 	.db #0x2b	; 43
      0002CF 26                     965 	.db #0x26	; 38
      0002D0 26                     966 	.db #0x26	; 38
      0002D1 26                     967 	.db #0x26	; 38
      0002D2 26                     968 	.db #0x26	; 38
      0002D3 26                     969 	.db #0x26	; 38
      0002D4 26                     970 	.db #0x26	; 38
      0002D5 26                     971 	.db #0x26	; 38
      0002D6 26                     972 	.db #0x26	; 38
      0002D7 26                     973 	.db #0x26	; 38
      0002D8 26                     974 	.db #0x26	; 38
      0002D9 26                     975 	.db #0x26	; 38
      0002DA 26                     976 	.db #0x26	; 38
      0002DB 26                     977 	.db #0x26	; 38
      0002DC 26                     978 	.db #0x26	; 38
      0002DD 26                     979 	.db #0x26	; 38
      0002DE 26                     980 	.db #0x26	; 38
      0002DF 26                     981 	.db #0x26	; 38
      0002E0 26                     982 	.db #0x26	; 38
      0002E1 26                     983 	.db #0x26	; 38
      0002E2 26                     984 	.db #0x26	; 38
      0002E3 26                     985 	.db #0x26	; 38
      0002E4 26                     986 	.db #0x26	; 38
      0002E5 26                     987 	.db #0x26	; 38
      0002E6 2A                     988 	.db #0x2a	; 42
      0002E7 26                     989 	.db #0x26	; 38
      0002E8 26                     990 	.db #0x26	; 38
      0002E9 26                     991 	.db #0x26	; 38
      0002EA 26                     992 	.db #0x26	; 38
      0002EB 26                     993 	.db #0x26	; 38
      0002EC 26                     994 	.db #0x26	; 38
      0002ED 26                     995 	.db #0x26	; 38
      0002EE 26                     996 	.db #0x26	; 38
      0002EF 26                     997 	.db #0x26	; 38
      0002F0 26                     998 	.db #0x26	; 38
      0002F1 26                     999 	.db #0x26	; 38
      0002F2 2C                    1000 	.db #0x2c	; 44
      0002F3 26                    1001 	.db #0x26	; 38
      0002F4 26                    1002 	.db #0x26	; 38
      0002F5 26                    1003 	.db #0x26	; 38
      0002F6 26                    1004 	.db #0x26	; 38
      0002F7 26                    1005 	.db #0x26	; 38
      0002F8 26                    1006 	.db #0x26	; 38
      0002F9 26                    1007 	.db #0x26	; 38
      0002FA 26                    1008 	.db #0x26	; 38
      0002FB 26                    1009 	.db #0x26	; 38
      0002FC 26                    1010 	.db #0x26	; 38
      0002FD 26                    1011 	.db #0x26	; 38
      0002FE 26                    1012 	.db #0x26	; 38
      0002FF 26                    1013 	.db #0x26	; 38
      000300 26                    1014 	.db #0x26	; 38
      000301 26                    1015 	.db #0x26	; 38
      000302 26                    1016 	.db #0x26	; 38
      000303 26                    1017 	.db #0x26	; 38
      000304 26                    1018 	.db #0x26	; 38
      000305 26                    1019 	.db #0x26	; 38
      000306 26                    1020 	.db #0x26	; 38
      000307 26                    1021 	.db #0x26	; 38
      000308 26                    1022 	.db #0x26	; 38
      000309 26                    1023 	.db #0x26	; 38
      00030A 26                    1024 	.db #0x26	; 38
      00030B 26                    1025 	.db #0x26	; 38
      00030C 26                    1026 	.db #0x26	; 38
      00030D 26                    1027 	.db #0x26	; 38
      00030E 26                    1028 	.db #0x26	; 38
      00030F 26                    1029 	.db #0x26	; 38
      000310 26                    1030 	.db #0x26	; 38
      000311 26                    1031 	.db #0x26	; 38
      000312 26                    1032 	.db #0x26	; 38
      000313 26                    1033 	.db #0x26	; 38
      000314 26                    1034 	.db #0x26	; 38
      000315 26                    1035 	.db #0x26	; 38
      000316 26                    1036 	.db #0x26	; 38
      000317 2B                    1037 	.db #0x2b	; 43
      000318 26                    1038 	.db #0x26	; 38
      000319 26                    1039 	.db #0x26	; 38
      00031A 26                    1040 	.db #0x26	; 38
      00031B 26                    1041 	.db #0x26	; 38
      00031C 26                    1042 	.db #0x26	; 38
      00031D 26                    1043 	.db #0x26	; 38
      00031E 26                    1044 	.db #0x26	; 38
      00031F 26                    1045 	.db #0x26	; 38
      000320 26                    1046 	.db #0x26	; 38
      000321 26                    1047 	.db #0x26	; 38
      000322 26                    1048 	.db #0x26	; 38
      000323 26                    1049 	.db #0x26	; 38
      000324 26                    1050 	.db #0x26	; 38
      000325 26                    1051 	.db #0x26	; 38
      000326 26                    1052 	.db #0x26	; 38
      000327 26                    1053 	.db #0x26	; 38
      000328 26                    1054 	.db #0x26	; 38
      000329 26                    1055 	.db #0x26	; 38
      00032A 26                    1056 	.db #0x26	; 38
      00032B 26                    1057 	.db #0x26	; 38
      00032C 26                    1058 	.db #0x26	; 38
      00032D 26                    1059 	.db #0x26	; 38
      00032E 26                    1060 	.db #0x26	; 38
      00032F 26                    1061 	.db #0x26	; 38
      000330 26                    1062 	.db #0x26	; 38
      000331 26                    1063 	.db #0x26	; 38
      000332 26                    1064 	.db #0x26	; 38
      000333 26                    1065 	.db #0x26	; 38
      000334 26                    1066 	.db #0x26	; 38
      000335 26                    1067 	.db #0x26	; 38
      000336 26                    1068 	.db #0x26	; 38
      000337 26                    1069 	.db #0x26	; 38
      000338 26                    1070 	.db #0x26	; 38
      000339 26                    1071 	.db #0x26	; 38
      00033A 26                    1072 	.db #0x26	; 38
      00033B 26                    1073 	.db #0x26	; 38
      00033C 26                    1074 	.db #0x26	; 38
      00033D 26                    1075 	.db #0x26	; 38
      00033E 2B                    1076 	.db #0x2b	; 43
      00033F 26                    1077 	.db #0x26	; 38
      000340 26                    1078 	.db #0x26	; 38
      000341 26                    1079 	.db #0x26	; 38
      000342 26                    1080 	.db #0x26	; 38
      000343 26                    1081 	.db #0x26	; 38
      000344 26                    1082 	.db #0x26	; 38
      000345 26                    1083 	.db #0x26	; 38
      000346 26                    1084 	.db #0x26	; 38
      000347 26                    1085 	.db #0x26	; 38
      000348 26                    1086 	.db #0x26	; 38
      000349 26                    1087 	.db #0x26	; 38
      00034A 2B                    1088 	.db #0x2b	; 43
      00034B 26                    1089 	.db #0x26	; 38
      00034C 26                    1090 	.db #0x26	; 38
      00034D 26                    1091 	.db #0x26	; 38
      00034E 26                    1092 	.db #0x26	; 38
      00034F 26                    1093 	.db #0x26	; 38
      000350 26                    1094 	.db #0x26	; 38
      000351 26                    1095 	.db #0x26	; 38
      000352 26                    1096 	.db #0x26	; 38
      000353 26                    1097 	.db #0x26	; 38
      000354 26                    1098 	.db #0x26	; 38
      000355 26                    1099 	.db #0x26	; 38
      000356 26                    1100 	.db #0x26	; 38
      000357 26                    1101 	.db #0x26	; 38
      000358 26                    1102 	.db #0x26	; 38
      000359 26                    1103 	.db #0x26	; 38
      00035A 26                    1104 	.db #0x26	; 38
      00035B 26                    1105 	.db #0x26	; 38
      00035C 26                    1106 	.db #0x26	; 38
      00035D 26                    1107 	.db #0x26	; 38
      00035E 26                    1108 	.db #0x26	; 38
      00035F 26                    1109 	.db #0x26	; 38
      000360 26                    1110 	.db #0x26	; 38
      000361 26                    1111 	.db #0x26	; 38
      000362 26                    1112 	.db #0x26	; 38
      000363 26                    1113 	.db #0x26	; 38
      000364 26                    1114 	.db #0x26	; 38
      000365 26                    1115 	.db #0x26	; 38
      000366 2C                    1116 	.db #0x2c	; 44
      000367 26                    1117 	.db #0x26	; 38
      000368 26                    1118 	.db #0x26	; 38
      000369 26                    1119 	.db #0x26	; 38
      00036A 26                    1120 	.db #0x26	; 38
      00036B 26                    1121 	.db #0x26	; 38
      00036C 26                    1122 	.db #0x26	; 38
      00036D 26                    1123 	.db #0x26	; 38
      00036E 26                    1124 	.db #0x26	; 38
      00036F 26                    1125 	.db #0x26	; 38
      000370 2B                    1126 	.db #0x2b	; 43
      000371 26                    1127 	.db #0x26	; 38
      000372 26                    1128 	.db #0x26	; 38
      000373 26                    1129 	.db #0x26	; 38
      000374 26                    1130 	.db #0x26	; 38
      000375 26                    1131 	.db #0x26	; 38
      000376 26                    1132 	.db #0x26	; 38
      000377 26                    1133 	.db #0x26	; 38
      000378 26                    1134 	.db #0x26	; 38
      000379 26                    1135 	.db #0x26	; 38
      00037A 26                    1136 	.db #0x26	; 38
      00037B 26                    1137 	.db #0x26	; 38
      00037C 26                    1138 	.db #0x26	; 38
      00037D 26                    1139 	.db #0x26	; 38
      00037E 26                    1140 	.db #0x26	; 38
      00037F 26                    1141 	.db #0x26	; 38
      000380 26                    1142 	.db #0x26	; 38
      000381 26                    1143 	.db #0x26	; 38
      000382 26                    1144 	.db #0x26	; 38
      000383 26                    1145 	.db #0x26	; 38
      000384 26                    1146 	.db #0x26	; 38
      000385 26                    1147 	.db #0x26	; 38
      000386 26                    1148 	.db #0x26	; 38
      000387 26                    1149 	.db #0x26	; 38
      000388 26                    1150 	.db #0x26	; 38
      000389 26                    1151 	.db #0x26	; 38
      00038A 26                    1152 	.db #0x26	; 38
      00038B 26                    1153 	.db #0x26	; 38
      00038C 26                    1154 	.db #0x26	; 38
      00038D 26                    1155 	.db #0x26	; 38
      00038E 26                    1156 	.db #0x26	; 38
      00038F 26                    1157 	.db #0x26	; 38
      000390 26                    1158 	.db #0x26	; 38
      000391 26                    1159 	.db #0x26	; 38
      000392 26                    1160 	.db #0x26	; 38
      000393 26                    1161 	.db #0x26	; 38
      000394 26                    1162 	.db #0x26	; 38
      000395 26                    1163 	.db #0x26	; 38
      000396 26                    1164 	.db #0x26	; 38
      000397 26                    1165 	.db #0x26	; 38
      000398 27                    1166 	.db #0x27	; 39
      000399 28                    1167 	.db #0x28	; 40
      00039A 26                    1168 	.db #0x26	; 38
      00039B 26                    1169 	.db #0x26	; 38
      00039C 26                    1170 	.db #0x26	; 38
      00039D 26                    1171 	.db #0x26	; 38
      00039E 26                    1172 	.db #0x26	; 38
      00039F 26                    1173 	.db #0x26	; 38
      0003A0 26                    1174 	.db #0x26	; 38
      0003A1 26                    1175 	.db #0x26	; 38
      0003A2 26                    1176 	.db #0x26	; 38
      0003A3 26                    1177 	.db #0x26	; 38
      0003A4 26                    1178 	.db #0x26	; 38
      0003A5 26                    1179 	.db #0x26	; 38
      0003A6 26                    1180 	.db #0x26	; 38
      0003A7 26                    1181 	.db #0x26	; 38
      0003A8 26                    1182 	.db #0x26	; 38
      0003A9 26                    1183 	.db #0x26	; 38
      0003AA 26                    1184 	.db #0x26	; 38
      0003AB 26                    1185 	.db #0x26	; 38
      0003AC 26                    1186 	.db #0x26	; 38
      0003AD 2B                    1187 	.db #0x2b	; 43
      0003AE 26                    1188 	.db #0x26	; 38
      0003AF 26                    1189 	.db #0x26	; 38
      0003B0 26                    1190 	.db #0x26	; 38
      0003B1 26                    1191 	.db #0x26	; 38
      0003B2 26                    1192 	.db #0x26	; 38
      0003B3 26                    1193 	.db #0x26	; 38
      0003B4 26                    1194 	.db #0x26	; 38
      0003B5 25                    1195 	.db #0x25	; 37
      0003B6 26                    1196 	.db #0x26	; 38
      0003B7 26                    1197 	.db #0x26	; 38
      0003B8 2A                    1198 	.db #0x2a	; 42
      0003B9 29                    1199 	.db #0x29	; 41
      0003BA 26                    1200 	.db #0x26	; 38
      0003BB 26                    1201 	.db #0x26	; 38
      0003BC 26                    1202 	.db #0x26	; 38
      0003BD 26                    1203 	.db #0x26	; 38
      0003BE 26                    1204 	.db #0x26	; 38
      0003BF 26                    1205 	.db #0x26	; 38
      0003C0 26                    1206 	.db #0x26	; 38
      0003C1 26                    1207 	.db #0x26	; 38
      0003C2 2B                    1208 	.db #0x2b	; 43
      0003C3 26                    1209 	.db #0x26	; 38
      0003C4 26                    1210 	.db #0x26	; 38
      0003C5 26                    1211 	.db #0x26	; 38
      0003C6 26                    1212 	.db #0x26	; 38
      0003C7 26                    1213 	.db #0x26	; 38
      0003C8 26                    1214 	.db #0x26	; 38
      0003C9 2C                    1215 	.db #0x2c	; 44
      0003CA 26                    1216 	.db #0x26	; 38
      0003CB 26                    1217 	.db #0x26	; 38
      0003CC 26                    1218 	.db #0x26	; 38
      0003CD 26                    1219 	.db #0x26	; 38
      0003CE 26                    1220 	.db #0x26	; 38
      0003CF 26                    1221 	.db #0x26	; 38
      0003D0 26                    1222 	.db #0x26	; 38
      0003D1 26                    1223 	.db #0x26	; 38
      0003D2 26                    1224 	.db #0x26	; 38
      0003D3 26                    1225 	.db #0x26	; 38
      0003D4 26                    1226 	.db #0x26	; 38
      0003D5 2C                    1227 	.db #0x2c	; 44
      0003D6 26                    1228 	.db #0x26	; 38
      0003D7 26                    1229 	.db #0x26	; 38
      0003D8 26                    1230 	.db #0x26	; 38
      0003D9 26                    1231 	.db #0x26	; 38
      0003DA 26                    1232 	.db #0x26	; 38
      0003DB 26                    1233 	.db #0x26	; 38
      0003DC 26                    1234 	.db #0x26	; 38
      0003DD 26                    1235 	.db #0x26	; 38
      0003DE 26                    1236 	.db #0x26	; 38
      0003DF 26                    1237 	.db #0x26	; 38
      0003E0 26                    1238 	.db #0x26	; 38
      0003E1 26                    1239 	.db #0x26	; 38
      0003E2 26                    1240 	.db #0x26	; 38
      0003E3 26                    1241 	.db #0x26	; 38
      0003E4 26                    1242 	.db #0x26	; 38
      0003E5 26                    1243 	.db #0x26	; 38
      0003E6 26                    1244 	.db #0x26	; 38
      0003E7 26                    1245 	.db #0x26	; 38
      0003E8 26                    1246 	.db #0x26	; 38
      0003E9 26                    1247 	.db #0x26	; 38
      0003EA 26                    1248 	.db #0x26	; 38
      0003EB 26                    1249 	.db #0x26	; 38
      0003EC 26                    1250 	.db #0x26	; 38
      0003ED 26                    1251 	.db #0x26	; 38
      0003EE 26                    1252 	.db #0x26	; 38
      0003EF 26                    1253 	.db #0x26	; 38
      0003F0 26                    1254 	.db #0x26	; 38
      0003F1 26                    1255 	.db #0x26	; 38
      0003F2 26                    1256 	.db #0x26	; 38
      0003F3 26                    1257 	.db #0x26	; 38
      0003F4 26                    1258 	.db #0x26	; 38
      0003F5 26                    1259 	.db #0x26	; 38
      0003F6 26                    1260 	.db #0x26	; 38
      0003F7 26                    1261 	.db #0x26	; 38
      0003F8 26                    1262 	.db #0x26	; 38
      0003F9 26                    1263 	.db #0x26	; 38
      0003FA 26                    1264 	.db #0x26	; 38
      0003FB 26                    1265 	.db #0x26	; 38
      0003FC 26                    1266 	.db #0x26	; 38
      0003FD 26                    1267 	.db #0x26	; 38
      0003FE 26                    1268 	.db #0x26	; 38
      0003FF 26                    1269 	.db #0x26	; 38
      000400 26                    1270 	.db #0x26	; 38
      000401 26                    1271 	.db #0x26	; 38
      000402 26                    1272 	.db #0x26	; 38
      000403 26                    1273 	.db #0x26	; 38
      000404 26                    1274 	.db #0x26	; 38
      000405 26                    1275 	.db #0x26	; 38
      000406 26                    1276 	.db #0x26	; 38
      000407 26                    1277 	.db #0x26	; 38
      000408 26                    1278 	.db #0x26	; 38
      000409 26                    1279 	.db #0x26	; 38
      00040A 26                    1280 	.db #0x26	; 38
      00040B 26                    1281 	.db #0x26	; 38
      00040C 26                    1282 	.db #0x26	; 38
      00040D 2B                    1283 	.db #0x2b	; 43
      00040E 26                    1284 	.db #0x26	; 38
      00040F 26                    1285 	.db #0x26	; 38
      000410 26                    1286 	.db #0x26	; 38
      000411 26                    1287 	.db #0x26	; 38
      000412 26                    1288 	.db #0x26	; 38
      000413 26                    1289 	.db #0x26	; 38
      000414 26                    1290 	.db #0x26	; 38
      000415 26                    1291 	.db #0x26	; 38
      000416 26                    1292 	.db #0x26	; 38
      000417 26                    1293 	.db #0x26	; 38
      000418 26                    1294 	.db #0x26	; 38
      000419 26                    1295 	.db #0x26	; 38
      00041A 26                    1296 	.db #0x26	; 38
      00041B 26                    1297 	.db #0x26	; 38
      00041C 26                    1298 	.db #0x26	; 38
      00041D 26                    1299 	.db #0x26	; 38
      00041E 26                    1300 	.db #0x26	; 38
      00041F 26                    1301 	.db #0x26	; 38
      000420 2B                    1302 	.db #0x2b	; 43
      000421 26                    1303 	.db #0x26	; 38
      000422 26                    1304 	.db #0x26	; 38
      000423 26                    1305 	.db #0x26	; 38
      000424 26                    1306 	.db #0x26	; 38
      000425 26                    1307 	.db #0x26	; 38
      000426 26                    1308 	.db #0x26	; 38
      000427 26                    1309 	.db #0x26	; 38
      000428 26                    1310 	.db #0x26	; 38
      000429 26                    1311 	.db #0x26	; 38
      00042A 26                    1312 	.db #0x26	; 38
      00042B 26                    1313 	.db #0x26	; 38
      00042C 26                    1314 	.db #0x26	; 38
      00042D 26                    1315 	.db #0x26	; 38
      00042E 26                    1316 	.db #0x26	; 38
      00042F 26                    1317 	.db #0x26	; 38
      000430 26                    1318 	.db #0x26	; 38
      000431 26                    1319 	.db #0x26	; 38
      000432 26                    1320 	.db #0x26	; 38
      000433 26                    1321 	.db #0x26	; 38
      000434 26                    1322 	.db #0x26	; 38
      000435 26                    1323 	.db #0x26	; 38
      000436 26                    1324 	.db #0x26	; 38
      000437 2C                    1325 	.db #0x2c	; 44
      000438 26                    1326 	.db #0x26	; 38
      000439 26                    1327 	.db #0x26	; 38
      00043A 26                    1328 	.db #0x26	; 38
      00043B 26                    1329 	.db #0x26	; 38
      00043C 26                    1330 	.db #0x26	; 38
      00043D 26                    1331 	.db #0x26	; 38
      00043E 26                    1332 	.db #0x26	; 38
      00043F 26                    1333 	.db #0x26	; 38
      000440 26                    1334 	.db #0x26	; 38
      000441 26                    1335 	.db #0x26	; 38
      000442 26                    1336 	.db #0x26	; 38
      000443 26                    1337 	.db #0x26	; 38
      000444 26                    1338 	.db #0x26	; 38
      000445 26                    1339 	.db #0x26	; 38
      000446 26                    1340 	.db #0x26	; 38
      000447 26                    1341 	.db #0x26	; 38
      000448 25                    1342 	.db #0x25	; 37
      000449 2C                    1343 	.db #0x2c	; 44
      00044A 26                    1344 	.db #0x26	; 38
      00044B 26                    1345 	.db #0x26	; 38
      00044C 26                    1346 	.db #0x26	; 38
      00044D 26                    1347 	.db #0x26	; 38
      00044E 26                    1348 	.db #0x26	; 38
      00044F 26                    1349 	.db #0x26	; 38
      000450 26                    1350 	.db #0x26	; 38
      000451 26                    1351 	.db #0x26	; 38
      000452 26                    1352 	.db #0x26	; 38
      000453 26                    1353 	.db #0x26	; 38
      000454 26                    1354 	.db #0x26	; 38
      000455 26                    1355 	.db #0x26	; 38
      000456 26                    1356 	.db #0x26	; 38
      000457 26                    1357 	.db #0x26	; 38
      000458 26                    1358 	.db #0x26	; 38
      000459 26                    1359 	.db #0x26	; 38
      00045A 2B                    1360 	.db #0x2b	; 43
      00045B 26                    1361 	.db #0x26	; 38
      00045C 26                    1362 	.db #0x26	; 38
      00045D 26                    1363 	.db #0x26	; 38
      00045E 26                    1364 	.db #0x26	; 38
      00045F 26                    1365 	.db #0x26	; 38
      000460 26                    1366 	.db #0x26	; 38
      000461 26                    1367 	.db #0x26	; 38
      000462 26                    1368 	.db #0x26	; 38
      000463 26                    1369 	.db #0x26	; 38
      000464 26                    1370 	.db #0x26	; 38
      000465 26                    1371 	.db #0x26	; 38
      000466 26                    1372 	.db #0x26	; 38
      000467 26                    1373 	.db #0x26	; 38
      000468 26                    1374 	.db #0x26	; 38
      000469 26                    1375 	.db #0x26	; 38
      00046A 26                    1376 	.db #0x26	; 38
      00046B 26                    1377 	.db #0x26	; 38
      00046C 26                    1378 	.db #0x26	; 38
      00046D 26                    1379 	.db #0x26	; 38
      00046E 26                    1380 	.db #0x26	; 38
      00046F 26                    1381 	.db #0x26	; 38
      000470 26                    1382 	.db #0x26	; 38
      000471 26                    1383 	.db #0x26	; 38
      000472 27                    1384 	.db #0x27	; 39
      000473 28                    1385 	.db #0x28	; 40
      000474 26                    1386 	.db #0x26	; 38
      000475 26                    1387 	.db #0x26	; 38
      000476 26                    1388 	.db #0x26	; 38
      000477 26                    1389 	.db #0x26	; 38
      000478 26                    1390 	.db #0x26	; 38
      000479 26                    1391 	.db #0x26	; 38
      00047A 26                    1392 	.db #0x26	; 38
      00047B 26                    1393 	.db #0x26	; 38
      00047C 26                    1394 	.db #0x26	; 38
      00047D 26                    1395 	.db #0x26	; 38
      00047E 26                    1396 	.db #0x26	; 38
      00047F 26                    1397 	.db #0x26	; 38
      000480 26                    1398 	.db #0x26	; 38
      000481 26                    1399 	.db #0x26	; 38
      000482 26                    1400 	.db #0x26	; 38
      000483 26                    1401 	.db #0x26	; 38
      000484 26                    1402 	.db #0x26	; 38
      000485 26                    1403 	.db #0x26	; 38
      000486 2B                    1404 	.db #0x2b	; 43
      000487                       1405 _backgroundtiles:
      000487 40                    1406 	.db #0x40	; 64
      000488 38                    1407 	.db #0x38	; 56	'8'
      000489 3A                    1408 	.db #0x3a	; 58
      00048A 44                    1409 	.db #0x44	; 68	'D'
      00048B 7C                    1410 	.db #0x7c	; 124
      00048C 9A                    1411 	.db #0x9a	; 154
      00048D 5E                    1412 	.db #0x5e	; 94
      00048E E9                    1413 	.db #0xe9	; 233
      00048F 7A                    1414 	.db #0x7a	; 122	'z'
      000490 87                    1415 	.db #0x87	; 135
      000491 76                    1416 	.db #0x76	; 118	'v'
      000492 B9                    1417 	.db #0xb9	; 185
      000493 3C                    1418 	.db #0x3c	; 60
      000494 72                    1419 	.db #0x72	; 114	'r'
      000495 00                    1420 	.db #0x00	; 0
      000496 3C                    1421 	.db #0x3c	; 60
      000497 00                    1422 	.db #0x00	; 0
      000498 00                    1423 	.db #0x00	; 0
      000499 00                    1424 	.db #0x00	; 0
      00049A 00                    1425 	.db #0x00	; 0
      00049B 00                    1426 	.db #0x00	; 0
      00049C 00                    1427 	.db #0x00	; 0
      00049D 00                    1428 	.db #0x00	; 0
      00049E 00                    1429 	.db #0x00	; 0
      00049F 00                    1430 	.db #0x00	; 0
      0004A0 00                    1431 	.db #0x00	; 0
      0004A1 00                    1432 	.db #0x00	; 0
      0004A2 00                    1433 	.db #0x00	; 0
      0004A3 00                    1434 	.db #0x00	; 0
      0004A4 00                    1435 	.db #0x00	; 0
      0004A5 00                    1436 	.db #0x00	; 0
      0004A6 00                    1437 	.db #0x00	; 0
      0004A7 00                    1438 	.db #0x00	; 0
      0004A8 0F                    1439 	.db #0x0f	; 15
      0004A9 08                    1440 	.db #0x08	; 8
      0004AA 17                    1441 	.db #0x17	; 23
      0004AB 1C                    1442 	.db #0x1c	; 28
      0004AC 23                    1443 	.db #0x23	; 35
      0004AD 3E                    1444 	.db #0x3e	; 62
      0004AE 41                    1445 	.db #0x41	; 65	'A'
      0004AF 1B                    1446 	.db #0x1b	; 27
      0004B0 64                    1447 	.db #0x64	; 100	'd'
      0004B1 31                    1448 	.db #0x31	; 49	'1'
      0004B2 4E                    1449 	.db #0x4e	; 78	'N'
      0004B3 B1                    1450 	.db #0xb1	; 177
      0004B4 CE                    1451 	.db #0xce	; 206
      0004B5 BB                    1452 	.db #0xbb	; 187
      0004B6 C4                    1453 	.db #0xc4	; 196
      0004B7 00                    1454 	.db #0x00	; 0
      0004B8 F8                    1455 	.db #0xf8	; 248
      0004B9 00                    1456 	.db #0x00	; 0
      0004BA FC                    1457 	.db #0xfc	; 252
      0004BB E0                    1458 	.db #0xe0	; 224
      0004BC 1E                    1459 	.db #0x1e	; 30
      0004BD F0                    1460 	.db #0xf0	; 240
      0004BE 0F                    1461 	.db #0x0f	; 15
      0004BF BE                    1462 	.db #0xbe	; 190
      0004C0 01                    1463 	.db #0x01	; 1
      0004C1 BC                    1464 	.db #0xbc	; 188
      0004C2 02                    1465 	.db #0x02	; 2
      0004C3 CE                    1466 	.db #0xce	; 206
      0004C4 01                    1467 	.db #0x01	; 1
      0004C5 F6                    1468 	.db #0xf6	; 246
      0004C6 61                    1469 	.db #0x61	; 97	'a'
      0004C7 F4                    1470 	.db #0xf4	; 244
      0004C8 02                    1471 	.db #0x02	; 2
      0004C9 94                    1472 	.db #0x94	; 148
      0004CA 62                    1473 	.db #0x62	; 98	'b'
      0004CB E4                    1474 	.db #0xe4	; 228
      0004CC 02                    1475 	.db #0x02	; 2
      0004CD 6C                    1476 	.db #0x6c	; 108	'l'
      0004CE 82                    1477 	.db #0x82	; 130
      0004CF 70                    1478 	.db #0x70	; 112	'p'
      0004D0 8C                    1479 	.db #0x8c	; 140
      0004D1 60                    1480 	.db #0x60	; 96
      0004D2 90                    1481 	.db #0x90	; 144
      0004D3 00                    1482 	.db #0x00	; 0
      0004D4 E0                    1483 	.db #0xe0	; 224
      0004D5 80                    1484 	.db #0x80	; 128
      0004D6 80                    1485 	.db #0x80	; 128
      0004D7 8E                    1486 	.db #0x8e	; 142
      0004D8 F7                    1487 	.db #0xf7	; 247
      0004D9 8F                    1488 	.db #0x8f	; 143
      0004DA F3                    1489 	.db #0xf3	; 243
      0004DB 86                    1490 	.db #0x86	; 134
      0004DC F9                    1491 	.db #0xf9	; 249
      0004DD 42                    1492 	.db #0x42	; 66	'B'
      0004DE 7D                    1493 	.db #0x7d	; 125
      0004DF 80                    1494 	.db #0x80	; 128
      0004E0 FF                    1495 	.db #0xff	; 255
      0004E1 44                    1496 	.db #0x44	; 68	'D'
      0004E2 7F                    1497 	.db #0x7f	; 127
      0004E3 28                    1498 	.db #0x28	; 40
      0004E4 3F                    1499 	.db #0x3f	; 63
      0004E5 07                    1500 	.db #0x07	; 7
      0004E6 07                    1501 	.db #0x07	; 7
      0004E7 00                    1502 	.db #0x00	; 0
      0004E8 00                    1503 	.db #0x00	; 0
      0004E9 08                    1504 	.db #0x08	; 8
      0004EA 00                    1505 	.db #0x00	; 0
      0004EB 08                    1506 	.db #0x08	; 8
      0004EC 00                    1507 	.db #0x00	; 0
      0004ED 1C                    1508 	.db #0x1c	; 28
      0004EE 00                    1509 	.db #0x00	; 0
      0004EF 7F                    1510 	.db #0x7f	; 127
      0004F0 00                    1511 	.db #0x00	; 0
      0004F1 1C                    1512 	.db #0x1c	; 28
      0004F2 00                    1513 	.db #0x00	; 0
      0004F3 08                    1514 	.db #0x08	; 8
      0004F4 00                    1515 	.db #0x00	; 0
      0004F5 08                    1516 	.db #0x08	; 8
      0004F6 00                    1517 	.db #0x00	; 0
      0004F7 00                    1518 	.db #0x00	; 0
      0004F8 00                    1519 	.db #0x00	; 0
      0004F9 00                    1520 	.db #0x00	; 0
      0004FA 00                    1521 	.db #0x00	; 0
      0004FB 00                    1522 	.db #0x00	; 0
      0004FC 00                    1523 	.db #0x00	; 0
      0004FD 10                    1524 	.db #0x10	; 16
      0004FE 00                    1525 	.db #0x00	; 0
      0004FF 00                    1526 	.db #0x00	; 0
      000500 00                    1527 	.db #0x00	; 0
      000501 00                    1528 	.db #0x00	; 0
      000502 00                    1529 	.db #0x00	; 0
      000503 00                    1530 	.db #0x00	; 0
      000504 00                    1531 	.db #0x00	; 0
      000505 00                    1532 	.db #0x00	; 0
      000506 00                    1533 	.db #0x00	; 0
      000507                       1534 _healthblock:
      000507 FE                    1535 	.db #0xfe	; 254
      000508 FE                    1536 	.db #0xfe	; 254
      000509 FE                    1537 	.db #0xfe	; 254
      00050A FE                    1538 	.db #0xfe	; 254
      00050B FE                    1539 	.db #0xfe	; 254
      00050C FE                    1540 	.db #0xfe	; 254
      00050D FE                    1541 	.db #0xfe	; 254
      00050E FE                    1542 	.db #0xfe	; 254
      00050F FE                    1543 	.db #0xfe	; 254
      000510 FE                    1544 	.db #0xfe	; 254
      000511 FE                    1545 	.db #0xfe	; 254
      000512 FE                    1546 	.db #0xfe	; 254
      000513 FE                    1547 	.db #0xfe	; 254
      000514 FE                    1548 	.db #0xfe	; 254
      000515 00                    1549 	.db #0x00	; 0
      000516 00                    1550 	.db #0x00	; 0
      000517                       1551 _enemyOptionCount:
      000517 05                    1552 	.db #0x05	; 5
      000518                       1553 _enemy1:
      000518 66                    1554 	.db #0x66	; 102	'f'
      000519 24                    1555 	.db #0x24	; 36
      00051A E7                    1556 	.db #0xe7	; 231
      00051B 66                    1557 	.db #0x66	; 102	'f'
      00051C F7                    1558 	.db #0xf7	; 247
      00051D E7                    1559 	.db #0xe7	; 231
      00051E 1C                    1560 	.db #0x1c	; 28
      00051F 18                    1561 	.db #0x18	; 24
      000520 38                    1562 	.db #0x38	; 56	'8'
      000521 18                    1563 	.db #0x18	; 24
      000522 EF                    1564 	.db #0xef	; 239
      000523 E7                    1565 	.db #0xe7	; 231
      000524 E7                    1566 	.db #0xe7	; 231
      000525 66                    1567 	.db #0x66	; 102	'f'
      000526 66                    1568 	.db #0x66	; 102	'f'
      000527 24                    1569 	.db #0x24	; 36
      000528 00                    1570 	.db #0x00	; 0
      000529 00                    1571 	.db #0x00	; 0
      00052A 00                    1572 	.db #0x00	; 0
      00052B 00                    1573 	.db #0x00	; 0
      00052C 00                    1574 	.db #0x00	; 0
      00052D 00                    1575 	.db #0x00	; 0
      00052E 00                    1576 	.db #0x00	; 0
      00052F 00                    1577 	.db #0x00	; 0
      000530 00                    1578 	.db #0x00	; 0
      000531 00                    1579 	.db #0x00	; 0
      000532 00                    1580 	.db #0x00	; 0
      000533 00                    1581 	.db #0x00	; 0
      000534 00                    1582 	.db #0x00	; 0
      000535 00                    1583 	.db #0x00	; 0
      000536 00                    1584 	.db #0x00	; 0
      000537 00                    1585 	.db #0x00	; 0
      000538 3C                    1586 	.db #0x3c	; 60
      000539 3C                    1587 	.db #0x3c	; 60
      00053A 5E                    1588 	.db #0x5e	; 94
      00053B 62                    1589 	.db #0x62	; 98	'b'
      00053C 8F                    1590 	.db #0x8f	; 143
      00053D F1                    1591 	.db #0xf1	; 241
      00053E C7                    1592 	.db #0xc7	; 199
      00053F F9                    1593 	.db #0xf9	; 249
      000540 C3                    1594 	.db #0xc3	; 195
      000541 FD                    1595 	.db #0xfd	; 253
      000542 E1                    1596 	.db #0xe1	; 225
      000543 FF                    1597 	.db #0xff	; 255
      000544 7A                    1598 	.db #0x7a	; 122	'z'
      000545 7E                    1599 	.db #0x7e	; 126
      000546 3C                    1600 	.db #0x3c	; 60
      000547 3C                    1601 	.db #0x3c	; 60
      000548 00                    1602 	.db #0x00	; 0
      000549 00                    1603 	.db #0x00	; 0
      00054A 00                    1604 	.db #0x00	; 0
      00054B 00                    1605 	.db #0x00	; 0
      00054C 00                    1606 	.db #0x00	; 0
      00054D 00                    1607 	.db #0x00	; 0
      00054E 00                    1608 	.db #0x00	; 0
      00054F 00                    1609 	.db #0x00	; 0
      000550 00                    1610 	.db #0x00	; 0
      000551 00                    1611 	.db #0x00	; 0
      000552 00                    1612 	.db #0x00	; 0
      000553 00                    1613 	.db #0x00	; 0
      000554 00                    1614 	.db #0x00	; 0
      000555 00                    1615 	.db #0x00	; 0
      000556 00                    1616 	.db #0x00	; 0
      000557 00                    1617 	.db #0x00	; 0
      000558 3C                    1618 	.db #0x3c	; 60
      000559 3E                    1619 	.db #0x3e	; 62
      00055A 20                    1620 	.db #0x20	; 32
      00055B 38                    1621 	.db #0x38	; 56	'8'
      00055C 44                    1622 	.db #0x44	; 68	'D'
      00055D 78                    1623 	.db #0x78	; 120	'x'
      00055E BA                    1624 	.db #0xba	; 186
      00055F C4                    1625 	.db #0xc4	; 196
      000560 BA                    1626 	.db #0xba	; 186
      000561 C4                    1627 	.db #0xc4	; 196
      000562 44                    1628 	.db #0x44	; 68	'D'
      000563 78                    1629 	.db #0x78	; 120	'x'
      000564 20                    1630 	.db #0x20	; 32
      000565 38                    1631 	.db #0x38	; 56	'8'
      000566 3C                    1632 	.db #0x3c	; 60
      000567 3E                    1633 	.db #0x3e	; 62
      000568                       1634 _largeenemies:
      000568 00                    1635 	.db #0x00	; 0
      000569 00                    1636 	.db #0x00	; 0
      00056A 00                    1637 	.db #0x00	; 0
      00056B 00                    1638 	.db #0x00	; 0
      00056C 00                    1639 	.db #0x00	; 0
      00056D 00                    1640 	.db #0x00	; 0
      00056E 00                    1641 	.db #0x00	; 0
      00056F 00                    1642 	.db #0x00	; 0
      000570 00                    1643 	.db #0x00	; 0
      000571 00                    1644 	.db #0x00	; 0
      000572 00                    1645 	.db #0x00	; 0
      000573 00                    1646 	.db #0x00	; 0
      000574 00                    1647 	.db #0x00	; 0
      000575 00                    1648 	.db #0x00	; 0
      000576 7F                    1649 	.db #0x7f	; 127
      000577 7F                    1650 	.db #0x7f	; 127
      000578 7F                    1651 	.db #0x7f	; 127
      000579 7F                    1652 	.db #0x7f	; 127
      00057A 00                    1653 	.db #0x00	; 0
      00057B 00                    1654 	.db #0x00	; 0
      00057C 00                    1655 	.db #0x00	; 0
      00057D 00                    1656 	.db #0x00	; 0
      00057E 00                    1657 	.db #0x00	; 0
      00057F 00                    1658 	.db #0x00	; 0
      000580 00                    1659 	.db #0x00	; 0
      000581 00                    1660 	.db #0x00	; 0
      000582 00                    1661 	.db #0x00	; 0
      000583 00                    1662 	.db #0x00	; 0
      000584 00                    1663 	.db #0x00	; 0
      000585 00                    1664 	.db #0x00	; 0
      000586 00                    1665 	.db #0x00	; 0
      000587 00                    1666 	.db #0x00	; 0
      000588 00                    1667 	.db #0x00	; 0
      000589 00                    1668 	.db #0x00	; 0
      00058A 40                    1669 	.db #0x40	; 64
      00058B 40                    1670 	.db #0x40	; 64
      00058C 60                    1671 	.db #0x60	; 96
      00058D 60                    1672 	.db #0x60	; 96
      00058E 70                    1673 	.db #0x70	; 112	'p'
      00058F 70                    1674 	.db #0x70	; 112	'p'
      000590 78                    1675 	.db #0x78	; 120	'x'
      000591 78                    1676 	.db #0x78	; 120	'x'
      000592 7C                    1677 	.db #0x7c	; 124
      000593 7C                    1678 	.db #0x7c	; 124
      000594 7E                    1679 	.db #0x7e	; 126
      000595 7E                    1680 	.db #0x7e	; 126
      000596 FF                    1681 	.db #0xff	; 255
      000597 FF                    1682 	.db #0xff	; 255
      000598 FF                    1683 	.db #0xff	; 255
      000599 FF                    1684 	.db #0xff	; 255
      00059A 7E                    1685 	.db #0x7e	; 126
      00059B 7E                    1686 	.db #0x7e	; 126
      00059C 7C                    1687 	.db #0x7c	; 124
      00059D 7C                    1688 	.db #0x7c	; 124
      00059E 78                    1689 	.db #0x78	; 120	'x'
      00059F 78                    1690 	.db #0x78	; 120	'x'
      0005A0 70                    1691 	.db #0x70	; 112	'p'
      0005A1 70                    1692 	.db #0x70	; 112	'p'
      0005A2 60                    1693 	.db #0x60	; 96
      0005A3 60                    1694 	.db #0x60	; 96
      0005A4 40                    1695 	.db #0x40	; 64
      0005A5 40                    1696 	.db #0x40	; 64
      0005A6 00                    1697 	.db #0x00	; 0
      0005A7 00                    1698 	.db #0x00	; 0
      0005A8 07                    1699 	.db #0x07	; 7
      0005A9 00                    1700 	.db #0x00	; 0
      0005AA 18                    1701 	.db #0x18	; 24
      0005AB 00                    1702 	.db #0x00	; 0
      0005AC 20                    1703 	.db #0x20	; 32
      0005AD 00                    1704 	.db #0x00	; 0
      0005AE 4C                    1705 	.db #0x4c	; 76	'L'
      0005AF 0C                    1706 	.db #0x0c	; 12
      0005B0 43                    1707 	.db #0x43	; 67	'C'
      0005B1 0F                    1708 	.db #0x0f	; 15
      0005B2 84                    1709 	.db #0x84	; 132
      0005B3 27                    1710 	.db #0x27	; 39
      0005B4 80                    1711 	.db #0x80	; 128
      0005B5 13                    1712 	.db #0x13	; 19
      0005B6 83                    1713 	.db #0x83	; 131
      0005B7 2A                    1714 	.db #0x2a	; 42
      0005B8 83                    1715 	.db #0x83	; 131
      0005B9 16                    1716 	.db #0x16	; 22
      0005BA 80                    1717 	.db #0x80	; 128
      0005BB 23                    1718 	.db #0x23	; 35
      0005BC 84                    1719 	.db #0x84	; 132
      0005BD 07                    1720 	.db #0x07	; 7
      0005BE 43                    1721 	.db #0x43	; 67	'C'
      0005BF 0F                    1722 	.db #0x0f	; 15
      0005C0 4C                    1723 	.db #0x4c	; 76	'L'
      0005C1 0C                    1724 	.db #0x0c	; 12
      0005C2 20                    1725 	.db #0x20	; 32
      0005C3 00                    1726 	.db #0x00	; 0
      0005C4 18                    1727 	.db #0x18	; 24
      0005C5 00                    1728 	.db #0x00	; 0
      0005C6 07                    1729 	.db #0x07	; 7
      0005C7 00                    1730 	.db #0x00	; 0
      0005C8 E0                    1731 	.db #0xe0	; 224
      0005C9 00                    1732 	.db #0x00	; 0
      0005CA 18                    1733 	.db #0x18	; 24
      0005CB 00                    1734 	.db #0x00	; 0
      0005CC 04                    1735 	.db #0x04	; 4
      0005CD 00                    1736 	.db #0x00	; 0
      0005CE 02                    1737 	.db #0x02	; 2
      0005CF 00                    1738 	.db #0x00	; 0
      0005D0 02                    1739 	.db #0x02	; 2
      0005D1 00                    1740 	.db #0x00	; 0
      0005D2 C1                    1741 	.db #0xc1	; 193
      0005D3 C0                    1742 	.db #0xc0	; 192
      0005D4 11                    1743 	.db #0x11	; 17
      0005D5 F0                    1744 	.db #0xf0	; 240
      0005D6 E5                    1745 	.db #0xe5	; 229
      0005D7 1C                    1746 	.db #0x1c	; 28
      0005D8 E5                    1747 	.db #0xe5	; 229
      0005D9 1C                    1748 	.db #0x1c	; 28
      0005DA 11                    1749 	.db #0x11	; 17
      0005DB F0                    1750 	.db #0xf0	; 240
      0005DC C1                    1751 	.db #0xc1	; 193
      0005DD C0                    1752 	.db #0xc0	; 192
      0005DE 02                    1753 	.db #0x02	; 2
      0005DF 00                    1754 	.db #0x00	; 0
      0005E0 02                    1755 	.db #0x02	; 2
      0005E1 00                    1756 	.db #0x00	; 0
      0005E2 04                    1757 	.db #0x04	; 4
      0005E3 00                    1758 	.db #0x00	; 0
      0005E4 18                    1759 	.db #0x18	; 24
      0005E5 00                    1760 	.db #0x00	; 0
      0005E6 E0                    1761 	.db #0xe0	; 224
      0005E7 00                    1762 	.db #0x00	; 0
      0005E8                       1763 _ProjectileTiles:
      0005E8 24                    1764 	.db #0x24	; 36
      0005E9 18                    1765 	.db #0x18	; 24
      0005EA 18                    1766 	.db #0x18	; 24
      0005EB 3C                    1767 	.db #0x3c	; 60
      0005EC 18                    1768 	.db #0x18	; 24
      0005ED 3C                    1769 	.db #0x3c	; 60
      0005EE 24                    1770 	.db #0x24	; 36
      0005EF 18                    1771 	.db #0x18	; 24
      0005F0 00                    1772 	.db #0x00	; 0
      0005F1 00                    1773 	.db #0x00	; 0
      0005F2 00                    1774 	.db #0x00	; 0
      0005F3 00                    1775 	.db #0x00	; 0
      0005F4 00                    1776 	.db #0x00	; 0
      0005F5 00                    1777 	.db #0x00	; 0
      0005F6 00                    1778 	.db #0x00	; 0
      0005F7 00                    1779 	.db #0x00	; 0
      0005F8 00                    1780 	.db #0x00	; 0
      0005F9 00                    1781 	.db #0x00	; 0
      0005FA 00                    1782 	.db #0x00	; 0
      0005FB 00                    1783 	.db #0x00	; 0
      0005FC 00                    1784 	.db #0x00	; 0
      0005FD 00                    1785 	.db #0x00	; 0
      0005FE 00                    1786 	.db #0x00	; 0
      0005FF 00                    1787 	.db #0x00	; 0
      000600 00                    1788 	.db #0x00	; 0
      000601 00                    1789 	.db #0x00	; 0
      000602 00                    1790 	.db #0x00	; 0
      000603 00                    1791 	.db #0x00	; 0
      000604 00                    1792 	.db #0x00	; 0
      000605 00                    1793 	.db #0x00	; 0
      000606 00                    1794 	.db #0x00	; 0
      000607 00                    1795 	.db #0x00	; 0
      000608 00                    1796 	.db #0x00	; 0
      000609 00                    1797 	.db #0x00	; 0
      00060A 00                    1798 	.db #0x00	; 0
      00060B 00                    1799 	.db #0x00	; 0
      00060C 09                    1800 	.db #0x09	; 9
      00060D 06                    1801 	.db #0x06	; 6
      00060E 06                    1802 	.db #0x06	; 6
      00060F 0F                    1803 	.db #0x0f	; 15
      000610 06                    1804 	.db #0x06	; 6
      000611 0F                    1805 	.db #0x0f	; 15
      000612 09                    1806 	.db #0x09	; 9
      000613 06                    1807 	.db #0x06	; 6
      000614 00                    1808 	.db #0x00	; 0
      000615 00                    1809 	.db #0x00	; 0
      000616 00                    1810 	.db #0x00	; 0
      000617 00                    1811 	.db #0x00	; 0
      000618 00                    1812 	.db #0x00	; 0
      000619 00                    1813 	.db #0x00	; 0
      00061A 00                    1814 	.db #0x00	; 0
      00061B 00                    1815 	.db #0x00	; 0
      00061C 00                    1816 	.db #0x00	; 0
      00061D 00                    1817 	.db #0x00	; 0
      00061E 00                    1818 	.db #0x00	; 0
      00061F 00                    1819 	.db #0x00	; 0
      000620 00                    1820 	.db #0x00	; 0
      000621 00                    1821 	.db #0x00	; 0
      000622 00                    1822 	.db #0x00	; 0
      000623 00                    1823 	.db #0x00	; 0
      000624 00                    1824 	.db #0x00	; 0
      000625 00                    1825 	.db #0x00	; 0
      000626 00                    1826 	.db #0x00	; 0
      000627 00                    1827 	.db #0x00	; 0
      000628 09                    1828 	.db #0x09	; 9
      000629 06                    1829 	.db #0x06	; 6
      00062A 06                    1830 	.db #0x06	; 6
      00062B 0F                    1831 	.db #0x0f	; 15
      00062C 06                    1832 	.db #0x06	; 6
      00062D 0F                    1833 	.db #0x0f	; 15
      00062E 09                    1834 	.db #0x09	; 9
      00062F 06                    1835 	.db #0x06	; 6
      000630 00                    1836 	.db #0x00	; 0
      000631 00                    1837 	.db #0x00	; 0
      000632 00                    1838 	.db #0x00	; 0
      000633 00                    1839 	.db #0x00	; 0
      000634 00                    1840 	.db #0x00	; 0
      000635 00                    1841 	.db #0x00	; 0
      000636 00                    1842 	.db #0x00	; 0
      000637 00                    1843 	.db #0x00	; 0
      000638 00                    1844 	.db #0x00	; 0
      000639 00                    1845 	.db #0x00	; 0
      00063A 00                    1846 	.db #0x00	; 0
      00063B 00                    1847 	.db #0x00	; 0
      00063C 00                    1848 	.db #0x00	; 0
      00063D 00                    1849 	.db #0x00	; 0
      00063E 00                    1850 	.db #0x00	; 0
      00063F 00                    1851 	.db #0x00	; 0
      000640 00                    1852 	.db #0x00	; 0
      000641 00                    1853 	.db #0x00	; 0
      000642 00                    1854 	.db #0x00	; 0
      000643 00                    1855 	.db #0x00	; 0
      000644 00                    1856 	.db #0x00	; 0
      000645 00                    1857 	.db #0x00	; 0
      000646 00                    1858 	.db #0x00	; 0
      000647 00                    1859 	.db #0x00	; 0
      000648 99                    1860 	.db #0x99	; 153
      000649 66                    1861 	.db #0x66	; 102	'f'
      00064A 66                    1862 	.db #0x66	; 102	'f'
      00064B FF                    1863 	.db #0xff	; 255
      00064C 66                    1864 	.db #0x66	; 102	'f'
      00064D FF                    1865 	.db #0xff	; 255
      00064E 99                    1866 	.db #0x99	; 153
      00064F 66                    1867 	.db #0x66	; 102	'f'
      000650 00                    1868 	.db #0x00	; 0
      000651 00                    1869 	.db #0x00	; 0
      000652 00                    1870 	.db #0x00	; 0
      000653 00                    1871 	.db #0x00	; 0
      000654 00                    1872 	.db #0x00	; 0
      000655 00                    1873 	.db #0x00	; 0
      000656 00                    1874 	.db #0x00	; 0
      000657 00                    1875 	.db #0x00	; 0
      000658 00                    1876 	.db #0x00	; 0
      000659 00                    1877 	.db #0x00	; 0
      00065A 00                    1878 	.db #0x00	; 0
      00065B 00                    1879 	.db #0x00	; 0
      00065C 00                    1880 	.db #0x00	; 0
      00065D 00                    1881 	.db #0x00	; 0
      00065E 00                    1882 	.db #0x00	; 0
      00065F 00                    1883 	.db #0x00	; 0
      000660 00                    1884 	.db #0x00	; 0
      000661 00                    1885 	.db #0x00	; 0
      000662 00                    1886 	.db #0x00	; 0
      000663 00                    1887 	.db #0x00	; 0
      000664 00                    1888 	.db #0x00	; 0
      000665 00                    1889 	.db #0x00	; 0
      000666 00                    1890 	.db #0x00	; 0
      000667 00                    1891 	.db #0x00	; 0
      000668 09                    1892 	.db #0x09	; 9
      000669 06                    1893 	.db #0x06	; 6
      00066A 06                    1894 	.db #0x06	; 6
      00066B 0F                    1895 	.db #0x0f	; 15
      00066C 06                    1896 	.db #0x06	; 6
      00066D 0F                    1897 	.db #0x0f	; 15
      00066E 09                    1898 	.db #0x09	; 9
      00066F 06                    1899 	.db #0x06	; 6
      000670 09                    1900 	.db #0x09	; 9
      000671 06                    1901 	.db #0x06	; 6
      000672 06                    1902 	.db #0x06	; 6
      000673 0F                    1903 	.db #0x0f	; 15
      000674 06                    1904 	.db #0x06	; 6
      000675 0F                    1905 	.db #0x0f	; 15
      000676 09                    1906 	.db #0x09	; 9
      000677 06                    1907 	.db #0x06	; 6
      000678 00                    1908 	.db #0x00	; 0
      000679 00                    1909 	.db #0x00	; 0
      00067A 00                    1910 	.db #0x00	; 0
      00067B 00                    1911 	.db #0x00	; 0
      00067C 00                    1912 	.db #0x00	; 0
      00067D 00                    1913 	.db #0x00	; 0
      00067E 00                    1914 	.db #0x00	; 0
      00067F 00                    1915 	.db #0x00	; 0
      000680 00                    1916 	.db #0x00	; 0
      000681 00                    1917 	.db #0x00	; 0
      000682 00                    1918 	.db #0x00	; 0
      000683 00                    1919 	.db #0x00	; 0
      000684 00                    1920 	.db #0x00	; 0
      000685 00                    1921 	.db #0x00	; 0
      000686 00                    1922 	.db #0x00	; 0
      000687 00                    1923 	.db #0x00	; 0
      000688 90                    1924 	.db #0x90	; 144
      000689 60                    1925 	.db #0x60	; 96
      00068A 60                    1926 	.db #0x60	; 96
      00068B F0                    1927 	.db #0xf0	; 240
      00068C 60                    1928 	.db #0x60	; 96
      00068D F0                    1929 	.db #0xf0	; 240
      00068E 90                    1930 	.db #0x90	; 144
      00068F 60                    1931 	.db #0x60	; 96
      000690 09                    1932 	.db #0x09	; 9
      000691 06                    1933 	.db #0x06	; 6
      000692 06                    1934 	.db #0x06	; 6
      000693 0F                    1935 	.db #0x0f	; 15
      000694 06                    1936 	.db #0x06	; 6
      000695 0F                    1937 	.db #0x0f	; 15
      000696 09                    1938 	.db #0x09	; 9
      000697 06                    1939 	.db #0x06	; 6
      000698 00                    1940 	.db #0x00	; 0
      000699 00                    1941 	.db #0x00	; 0
      00069A 00                    1942 	.db #0x00	; 0
      00069B 00                    1943 	.db #0x00	; 0
      00069C 00                    1944 	.db #0x00	; 0
      00069D 00                    1945 	.db #0x00	; 0
      00069E 00                    1946 	.db #0x00	; 0
      00069F 00                    1947 	.db #0x00	; 0
      0006A0 00                    1948 	.db #0x00	; 0
      0006A1 00                    1949 	.db #0x00	; 0
      0006A2 00                    1950 	.db #0x00	; 0
      0006A3 00                    1951 	.db #0x00	; 0
      0006A4 00                    1952 	.db #0x00	; 0
      0006A5 00                    1953 	.db #0x00	; 0
      0006A6 00                    1954 	.db #0x00	; 0
      0006A7 00                    1955 	.db #0x00	; 0
      0006A8 18                    1956 	.db #0x18	; 24
      0006A9 00                    1957 	.db #0x00	; 0
      0006AA 18                    1958 	.db #0x18	; 24
      0006AB 18                    1959 	.db #0x18	; 24
      0006AC 18                    1960 	.db #0x18	; 24
      0006AD 18                    1961 	.db #0x18	; 24
      0006AE 3C                    1962 	.db #0x3c	; 60
      0006AF 18                    1963 	.db #0x18	; 24
      0006B0 3C                    1964 	.db #0x3c	; 60
      0006B1 18                    1965 	.db #0x18	; 24
      0006B2 3C                    1966 	.db #0x3c	; 60
      0006B3 3C                    1967 	.db #0x3c	; 60
      0006B4 7E                    1968 	.db #0x7e	; 126
      0006B5 3C                    1969 	.db #0x3c	; 60
      0006B6 7E                    1970 	.db #0x7e	; 126
      0006B7 24                    1971 	.db #0x24	; 36
      0006B8 00                    1972 	.db #0x00	; 0
      0006B9 00                    1973 	.db #0x00	; 0
      0006BA 00                    1974 	.db #0x00	; 0
      0006BB 00                    1975 	.db #0x00	; 0
      0006BC 00                    1976 	.db #0x00	; 0
      0006BD 00                    1977 	.db #0x00	; 0
      0006BE 00                    1978 	.db #0x00	; 0
      0006BF 00                    1979 	.db #0x00	; 0
      0006C0 00                    1980 	.db #0x00	; 0
      0006C1 00                    1981 	.db #0x00	; 0
      0006C2 00                    1982 	.db #0x00	; 0
      0006C3 00                    1983 	.db #0x00	; 0
      0006C4 00                    1984 	.db #0x00	; 0
      0006C5 00                    1985 	.db #0x00	; 0
      0006C6 00                    1986 	.db #0x00	; 0
      0006C7 00                    1987 	.db #0x00	; 0
      0006C8 C0                    1988 	.db #0xc0	; 192
      0006C9 00                    1989 	.db #0x00	; 0
      0006CA F8                    1990 	.db #0xf8	; 248
      0006CB E0                    1991 	.db #0xe0	; 224
      0006CC FF                    1992 	.db #0xff	; 255
      0006CD 7E                    1993 	.db #0x7e	; 126
      0006CE FF                    1994 	.db #0xff	; 255
      0006CF 7E                    1995 	.db #0x7e	; 126
      0006D0 F8                    1996 	.db #0xf8	; 248
      0006D1 E0                    1997 	.db #0xe0	; 224
      0006D2 C0                    1998 	.db #0xc0	; 192
      0006D3 00                    1999 	.db #0x00	; 0
      0006D4 00                    2000 	.db #0x00	; 0
      0006D5 00                    2001 	.db #0x00	; 0
      0006D6 00                    2002 	.db #0x00	; 0
      0006D7 00                    2003 	.db #0x00	; 0
      0006D8 00                    2004 	.db #0x00	; 0
      0006D9 00                    2005 	.db #0x00	; 0
      0006DA 00                    2006 	.db #0x00	; 0
      0006DB 00                    2007 	.db #0x00	; 0
      0006DC 00                    2008 	.db #0x00	; 0
      0006DD 00                    2009 	.db #0x00	; 0
      0006DE 00                    2010 	.db #0x00	; 0
      0006DF 00                    2011 	.db #0x00	; 0
      0006E0 00                    2012 	.db #0x00	; 0
      0006E1 00                    2013 	.db #0x00	; 0
      0006E2 00                    2014 	.db #0x00	; 0
      0006E3 00                    2015 	.db #0x00	; 0
      0006E4 00                    2016 	.db #0x00	; 0
      0006E5 00                    2017 	.db #0x00	; 0
      0006E6 00                    2018 	.db #0x00	; 0
      0006E7 00                    2019 	.db #0x00	; 0
      0006E8 06                    2020 	.db #0x06	; 6
      0006E9 00                    2021 	.db #0x00	; 0
      0006EA 0F                    2022 	.db #0x0f	; 15
      0006EB 06                    2023 	.db #0x06	; 6
      0006EC 1F                    2024 	.db #0x1f	; 31
      0006ED 0E                    2025 	.db #0x0e	; 14
      0006EE 7E                    2026 	.db #0x7e	; 126
      0006EF 1C                    2027 	.db #0x1c	; 28
      0006F0 FC                    2028 	.db #0xfc	; 252
      0006F1 78                    2029 	.db #0x78	; 120	'x'
      0006F2 F8                    2030 	.db #0xf8	; 248
      0006F3 F0                    2031 	.db #0xf0	; 240
      0006F4 F8                    2032 	.db #0xf8	; 248
      0006F5 70                    2033 	.db #0x70	; 112	'p'
      0006F6 70                    2034 	.db #0x70	; 112	'p'
      0006F7 20                    2035 	.db #0x20	; 32
      0006F8 00                    2036 	.db #0x00	; 0
      0006F9 00                    2037 	.db #0x00	; 0
      0006FA 00                    2038 	.db #0x00	; 0
      0006FB 00                    2039 	.db #0x00	; 0
      0006FC 00                    2040 	.db #0x00	; 0
      0006FD 00                    2041 	.db #0x00	; 0
      0006FE 00                    2042 	.db #0x00	; 0
      0006FF 00                    2043 	.db #0x00	; 0
      000700 00                    2044 	.db #0x00	; 0
      000701 00                    2045 	.db #0x00	; 0
      000702 00                    2046 	.db #0x00	; 0
      000703 00                    2047 	.db #0x00	; 0
      000704 00                    2048 	.db #0x00	; 0
      000705 00                    2049 	.db #0x00	; 0
      000706 00                    2050 	.db #0x00	; 0
      000707 00                    2051 	.db #0x00	; 0
      000708                       2052 _upgrade:
      000708 01                    2053 	.db #0x01	; 1
      000709 00 00                 2054 	.dw #0x0000
      00070B 00 00                 2055 	.dw #0x0000
      00070D 00                    2056 	.db #0x00	; 0
      00070E 00                    2057 	.db #0x00	; 0
      00070F 00                    2058 	.db #0x00	; 0
      000710 70                    2059 	.db #0x70	; 112	'p'
      000711                       2060 _ammo:
      000711 01                    2061 	.db #0x01	; 1
      000712 00 00                 2062 	.dw #0x0000
      000714 00 00                 2063 	.dw #0x0000
      000716 00                    2064 	.db #0x00	; 0
      000717 01                    2065 	.db #0x01	; 1
      000718 05                    2066 	.db #0x05	; 5
      000719 72                    2067 	.db #0x72	; 114	'r'
      00071A                       2068 _health:
      00071A 01                    2069 	.db #0x01	; 1
      00071B 00 00                 2070 	.dw #0x0000
      00071D 00 00                 2071 	.dw #0x0000
      00071F 00                    2072 	.db #0x00	; 0
      000720 02                    2073 	.db #0x02	; 2
      000721 32                    2074 	.db #0x32	; 50	'2'
      000722 74                    2075 	.db #0x74	; 116	't'
      000723                       2076 _Pickups:
      000723 7E                    2077 	.db #0x7e	; 126
      000724 00                    2078 	.db #0x00	; 0
      000725 81                    2079 	.db #0x81	; 129
      000726 00                    2080 	.db #0x00	; 0
      000727 D7                    2081 	.db #0xd7	; 215
      000728 56                    2082 	.db #0x56	; 86	'V'
      000729 D7                    2083 	.db #0xd7	; 215
      00072A 56                    2084 	.db #0x56	; 86	'V'
      00072B D5                    2085 	.db #0xd5	; 213
      00072C 54                    2086 	.db #0x54	; 84	'T'
      00072D F5                    2087 	.db #0xf5	; 245
      00072E 74                    2088 	.db #0x74	; 116	't'
      00072F 81                    2089 	.db #0x81	; 129
      000730 00                    2090 	.db #0x00	; 0
      000731 7E                    2091 	.db #0x7e	; 126
      000732 00                    2092 	.db #0x00	; 0
      000733 00                    2093 	.db #0x00	; 0
      000734 00                    2094 	.db #0x00	; 0
      000735 00                    2095 	.db #0x00	; 0
      000736 00                    2096 	.db #0x00	; 0
      000737 00                    2097 	.db #0x00	; 0
      000738 00                    2098 	.db #0x00	; 0
      000739 00                    2099 	.db #0x00	; 0
      00073A 00                    2100 	.db #0x00	; 0
      00073B 00                    2101 	.db #0x00	; 0
      00073C 00                    2102 	.db #0x00	; 0
      00073D 00                    2103 	.db #0x00	; 0
      00073E 00                    2104 	.db #0x00	; 0
      00073F 00                    2105 	.db #0x00	; 0
      000740 00                    2106 	.db #0x00	; 0
      000741 00                    2107 	.db #0x00	; 0
      000742 00                    2108 	.db #0x00	; 0
      000743 7E                    2109 	.db #0x7e	; 126
      000744 00                    2110 	.db #0x00	; 0
      000745 8F                    2111 	.db #0x8f	; 143
      000746 06                    2112 	.db #0x06	; 6
      000747 9F                    2113 	.db #0x9f	; 159
      000748 0E                    2114 	.db #0x0e	; 14
      000749 FF                    2115 	.db #0xff	; 255
      00074A 1C                    2116 	.db #0x1c	; 28
      00074B FD                    2117 	.db #0xfd	; 253
      00074C 78                    2118 	.db #0x78	; 120	'x'
      00074D F9                    2119 	.db #0xf9	; 249
      00074E 70                    2120 	.db #0x70	; 112	'p'
      00074F F9                    2121 	.db #0xf9	; 249
      000750 70                    2122 	.db #0x70	; 112	'p'
      000751 7E                    2123 	.db #0x7e	; 126
      000752 00                    2124 	.db #0x00	; 0
      000753 00                    2125 	.db #0x00	; 0
      000754 00                    2126 	.db #0x00	; 0
      000755 00                    2127 	.db #0x00	; 0
      000756 00                    2128 	.db #0x00	; 0
      000757 00                    2129 	.db #0x00	; 0
      000758 00                    2130 	.db #0x00	; 0
      000759 00                    2131 	.db #0x00	; 0
      00075A 00                    2132 	.db #0x00	; 0
      00075B 00                    2133 	.db #0x00	; 0
      00075C 00                    2134 	.db #0x00	; 0
      00075D 00                    2135 	.db #0x00	; 0
      00075E 00                    2136 	.db #0x00	; 0
      00075F 00                    2137 	.db #0x00	; 0
      000760 00                    2138 	.db #0x00	; 0
      000761 00                    2139 	.db #0x00	; 0
      000762 00                    2140 	.db #0x00	; 0
      000763 7E                    2141 	.db #0x7e	; 126
      000764 00                    2142 	.db #0x00	; 0
      000765 99                    2143 	.db #0x99	; 153
      000766 18                    2144 	.db #0x18	; 24
      000767 99                    2145 	.db #0x99	; 153
      000768 18                    2146 	.db #0x18	; 24
      000769 FF                    2147 	.db #0xff	; 255
      00076A 7E                    2148 	.db #0x7e	; 126
      00076B FF                    2149 	.db #0xff	; 255
      00076C 7E                    2150 	.db #0x7e	; 126
      00076D 99                    2151 	.db #0x99	; 153
      00076E 18                    2152 	.db #0x18	; 24
      00076F 99                    2153 	.db #0x99	; 153
      000770 18                    2154 	.db #0x18	; 24
      000771 7E                    2155 	.db #0x7e	; 126
      000772 00                    2156 	.db #0x00	; 0
      000773 00                    2157 	.db #0x00	; 0
      000774 00                    2158 	.db #0x00	; 0
      000775 00                    2159 	.db #0x00	; 0
      000776 00                    2160 	.db #0x00	; 0
      000777 00                    2161 	.db #0x00	; 0
      000778 00                    2162 	.db #0x00	; 0
      000779 00                    2163 	.db #0x00	; 0
      00077A 00                    2164 	.db #0x00	; 0
      00077B 00                    2165 	.db #0x00	; 0
      00077C 00                    2166 	.db #0x00	; 0
      00077D 00                    2167 	.db #0x00	; 0
      00077E 00                    2168 	.db #0x00	; 0
      00077F 00                    2169 	.db #0x00	; 0
      000780 00                    2170 	.db #0x00	; 0
      000781 00                    2171 	.db #0x00	; 0
      000782 00                    2172 	.db #0x00	; 0
      000783                       2173 _Player1:
      000783 08                    2174 	.db #0x08	; 8
      000784 08                    2175 	.db #0x08	; 8
      000785 1C                    2176 	.db #0x1c	; 28
      000786 14                    2177 	.db #0x14	; 20
      000787 38                    2178 	.db #0x38	; 56	'8'
      000788 28                    2179 	.db #0x28	; 40
      000789 68                    2180 	.db #0x68	; 104	'h'
      00078A 58                    2181 	.db #0x58	; 88	'X'
      00078B 50                    2182 	.db #0x50	; 80	'P'
      00078C 71                    2183 	.db #0x71	; 113	'q'
      00078D D0                    2184 	.db #0xd0	; 208
      00078E B2                    2185 	.db #0xb2	; 178
      00078F D5                    2186 	.db #0xd5	; 213
      000790 B6                    2187 	.db #0xb6	; 182
      000791 D5                    2188 	.db #0xd5	; 213
      000792 B6                    2189 	.db #0xb6	; 182
      000793 D5                    2190 	.db #0xd5	; 213
      000794 B6                    2191 	.db #0xb6	; 182
      000795 CD                    2192 	.db #0xcd	; 205
      000796 BE                    2193 	.db #0xbe	; 190
      000797 C5                    2194 	.db #0xc5	; 197
      000798 BE                    2195 	.db #0xbe	; 190
      000799 65                    2196 	.db #0x65	; 101	'e'
      00079A 5E                    2197 	.db #0x5e	; 94
      00079B 3E                    2198 	.db #0x3e	; 62
      00079C 2F                    2199 	.db #0x2f	; 47
      00079D 13                    2200 	.db #0x13	; 19
      00079E 13                    2201 	.db #0x13	; 19
      00079F 06                    2202 	.db #0x06	; 6
      0007A0 07                    2203 	.db #0x07	; 7
      0007A1 07                    2204 	.db #0x07	; 7
      0007A2 05                    2205 	.db #0x05	; 5
      0007A3 10                    2206 	.db #0x10	; 16
      0007A4 10                    2207 	.db #0x10	; 16
      0007A5 38                    2208 	.db #0x38	; 56	'8'
      0007A6 28                    2209 	.db #0x28	; 40
      0007A7 1C                    2210 	.db #0x1c	; 28
      0007A8 14                    2211 	.db #0x14	; 20
      0007A9 16                    2212 	.db #0x16	; 22
      0007AA 1A                    2213 	.db #0x1a	; 26
      0007AB 0A                    2214 	.db #0x0a	; 10
      0007AC 8E                    2215 	.db #0x8e	; 142
      0007AD 0B                    2216 	.db #0x0b	; 11
      0007AE 4D                    2217 	.db #0x4d	; 77	'M'
      0007AF AB                    2218 	.db #0xab	; 171
      0007B0 6D                    2219 	.db #0x6d	; 109	'm'
      0007B1 AB                    2220 	.db #0xab	; 171
      0007B2 6D                    2221 	.db #0x6d	; 109	'm'
      0007B3 AB                    2222 	.db #0xab	; 171
      0007B4 6D                    2223 	.db #0x6d	; 109	'm'
      0007B5 B3                    2224 	.db #0xb3	; 179
      0007B6 7D                    2225 	.db #0x7d	; 125
      0007B7 A3                    2226 	.db #0xa3	; 163
      0007B8 7D                    2227 	.db #0x7d	; 125
      0007B9 A6                    2228 	.db #0xa6	; 166
      0007BA 7A                    2229 	.db #0x7a	; 122	'z'
      0007BB 7C                    2230 	.db #0x7c	; 124
      0007BC F4                    2231 	.db #0xf4	; 244
      0007BD C8                    2232 	.db #0xc8	; 200
      0007BE C8                    2233 	.db #0xc8	; 200
      0007BF 60                    2234 	.db #0x60	; 96
      0007C0 E0                    2235 	.db #0xe0	; 224
      0007C1 E0                    2236 	.db #0xe0	; 224
      0007C2 A0                    2237 	.db #0xa0	; 160
      0007C3 07                    2238 	.db #0x07	; 7
      0007C4 07                    2239 	.db #0x07	; 7
      0007C5 0F                    2240 	.db #0x0f	; 15
      0007C6 08                    2241 	.db #0x08	; 8
      0007C7 18                    2242 	.db #0x18	; 24
      0007C8 17                    2243 	.db #0x17	; 23
      0007C9 31                    2244 	.db #0x31	; 49	'1'
      0007CA 2F                    2245 	.db #0x2f	; 47
      0007CB 12                    2246 	.db #0x12	; 18
      0007CC 1E                    2247 	.db #0x1e	; 30
      0007CD DF                    2248 	.db #0xdf	; 223
      0007CE DF                    2249 	.db #0xdf	; 223
      0007CF F0                    2250 	.db #0xf0	; 240
      0007D0 7F                    2251 	.db #0x7f	; 127
      0007D1 AF                    2252 	.db #0xaf	; 175
      0007D2 F0                    2253 	.db #0xf0	; 240
      0007D3 AF                    2254 	.db #0xaf	; 175
      0007D4 F0                    2255 	.db #0xf0	; 240
      0007D5 F0                    2256 	.db #0xf0	; 240
      0007D6 7F                    2257 	.db #0x7f	; 127
      0007D7 DF                    2258 	.db #0xdf	; 223
      0007D8 DF                    2259 	.db #0xdf	; 223
      0007D9 12                    2260 	.db #0x12	; 18
      0007DA 1E                    2261 	.db #0x1e	; 30
      0007DB 31                    2262 	.db #0x31	; 49	'1'
      0007DC 2F                    2263 	.db #0x2f	; 47
      0007DD 18                    2264 	.db #0x18	; 24
      0007DE 17                    2265 	.db #0x17	; 23
      0007DF 0F                    2266 	.db #0x0f	; 15
      0007E0 08                    2267 	.db #0x08	; 8
      0007E1 07                    2268 	.db #0x07	; 7
      0007E2 07                    2269 	.db #0x07	; 7
      0007E3 E0                    2270 	.db #0xe0	; 224
      0007E4 E0                    2271 	.db #0xe0	; 224
      0007E5 F8                    2272 	.db #0xf8	; 248
      0007E6 18                    2273 	.db #0x18	; 24
      0007E7 0C                    2274 	.db #0x0c	; 12
      0007E8 F4                    2275 	.db #0xf4	; 244
      0007E9 F6                    2276 	.db #0xf6	; 246
      0007EA FA                    2277 	.db #0xfa	; 250
      0007EB 0F                    2278 	.db #0x0f	; 15
      0007EC 0D                    2279 	.db #0x0d	; 13
      0007ED C2                    2280 	.db #0xc2	; 194
      0007EE C2                    2281 	.db #0xc2	; 194
      0007EF 00                    2282 	.db #0x00	; 0
      0007F0 E0                    2283 	.db #0xe0	; 224
      0007F1 C0                    2284 	.db #0xc0	; 192
      0007F2 10                    2285 	.db #0x10	; 16
      0007F3 C0                    2286 	.db #0xc0	; 192
      0007F4 10                    2287 	.db #0x10	; 16
      0007F5 00                    2288 	.db #0x00	; 0
      0007F6 E0                    2289 	.db #0xe0	; 224
      0007F7 C2                    2290 	.db #0xc2	; 194
      0007F8 C2                    2291 	.db #0xc2	; 194
      0007F9 0F                    2292 	.db #0x0f	; 15
      0007FA 0D                    2293 	.db #0x0d	; 13
      0007FB F6                    2294 	.db #0xf6	; 246
      0007FC FA                    2295 	.db #0xfa	; 250
      0007FD 0C                    2296 	.db #0x0c	; 12
      0007FE F4                    2297 	.db #0xf4	; 244
      0007FF F8                    2298 	.db #0xf8	; 248
      000800 18                    2299 	.db #0x18	; 24
      000801 E0                    2300 	.db #0xe0	; 224
      000802 E0                    2301 	.db #0xe0	; 224
      000803 07                    2302 	.db #0x07	; 7
      000804 07                    2303 	.db #0x07	; 7
      000805 1B                    2304 	.db #0x1b	; 27
      000806 1C                    2305 	.db #0x1c	; 28
      000807 38                    2306 	.db #0x38	; 56	'8'
      000808 27                    2307 	.db #0x27	; 39
      000809 60                    2308 	.db #0x60	; 96
      00080A 5E                    2309 	.db #0x5e	; 94
      00080B 60                    2310 	.db #0x60	; 96
      00080C 5C                    2311 	.db #0x5c	; 92
      00080D 41                    2312 	.db #0x41	; 65	'A'
      00080E 79                    2313 	.db #0x79	; 121	'y'
      00080F C4                    2314 	.db #0xc4	; 196
      000810 B7                    2315 	.db #0xb7	; 183
      000811 99                    2316 	.db #0x99	; 153
      000812 FE                    2317 	.db #0xfe	; 254
      000813 B3                    2318 	.db #0xb3	; 179
      000814 EC                    2319 	.db #0xec	; 236
      000815 67                    2320 	.db #0x67	; 103	'g'
      000816 58                    2321 	.db #0x58	; 88	'X'
      000817 2E                    2322 	.db #0x2e	; 46
      000818 31                    2323 	.db #0x31	; 49	'1'
      000819 5C                    2324 	.db #0x5c	; 92
      00081A 73                    2325 	.db #0x73	; 115	's'
      00081B 69                    2326 	.db #0x69	; 105	'i'
      00081C 5E                    2327 	.db #0x5e	; 94
      00081D 37                    2328 	.db #0x37	; 55	'7'
      00081E 2D                    2329 	.db #0x2d	; 45
      00081F 1A                    2330 	.db #0x1a	; 26
      000820 1B                    2331 	.db #0x1b	; 27
      000821 01                    2332 	.db #0x01	; 1
      000822 01                    2333 	.db #0x01	; 1
      000823 E0                    2334 	.db #0xe0	; 224
      000824 E0                    2335 	.db #0xe0	; 224
      000825 90                    2336 	.db #0x90	; 144
      000826 70                    2337 	.db #0x70	; 112	'p'
      000827 C0                    2338 	.db #0xc0	; 192
      000828 C0                    2339 	.db #0xc0	; 192
      000829 00                    2340 	.db #0x00	; 0
      00082A 00                    2341 	.db #0x00	; 0
      00082B 02                    2342 	.db #0x02	; 2
      00082C 02                    2343 	.db #0x02	; 2
      00082D C1                    2344 	.db #0xc1	; 193
      00082E C3                    2345 	.db #0xc3	; 195
      00082F 65                    2346 	.db #0x65	; 101	'e'
      000830 A7                    2347 	.db #0xa7	; 167
      000831 A7                    2348 	.db #0xa7	; 167
      000832 65                    2349 	.db #0x65	; 101	'e'
      000833 A3                    2350 	.db #0xa3	; 163
      000834 65                    2351 	.db #0x65	; 101	'e'
      000835 03                    2352 	.db #0x03	; 3
      000836 CD                    2353 	.db #0xcd	; 205
      000837 41                    2354 	.db #0x41	; 65	'A'
      000838 DF                    2355 	.db #0xdf	; 223
      000839 86                    2356 	.db #0x86	; 134
      00083A BA                    2357 	.db #0xba	; 186
      00083B 86                    2358 	.db #0x86	; 134
      00083C FA                    2359 	.db #0xfa	; 250
      00083D 1C                    2360 	.db #0x1c	; 28
      00083E E4                    2361 	.db #0xe4	; 228
      00083F 78                    2362 	.db #0x78	; 120	'x'
      000840 B8                    2363 	.db #0xb8	; 184
      000841 C0                    2364 	.db #0xc0	; 192
      000842 C0                    2365 	.db #0xc0	; 192
      000843 00                    2366 	.db #0x00	; 0
      000844 00                    2367 	.db #0x00	; 0
      000845 00                    2368 	.db #0x00	; 0
      000846 00                    2369 	.db #0x00	; 0
      000847 00                    2370 	.db #0x00	; 0
      000848 00                    2371 	.db #0x00	; 0
      000849 00                    2372 	.db #0x00	; 0
      00084A 00                    2373 	.db #0x00	; 0
      00084B 00                    2374 	.db #0x00	; 0
      00084C 00                    2375 	.db #0x00	; 0
      00084D 00                    2376 	.db #0x00	; 0
      00084E 00                    2377 	.db #0x00	; 0
      00084F 00                    2378 	.db #0x00	; 0
      000850 00                    2379 	.db #0x00	; 0
      000851 00                    2380 	.db #0x00	; 0
      000852 00                    2381 	.db #0x00	; 0
      000853 00                    2382 	.db #0x00	; 0
      000854 00                    2383 	.db #0x00	; 0
      000855 00                    2384 	.db #0x00	; 0
      000856 00                    2385 	.db #0x00	; 0
      000857 00                    2386 	.db #0x00	; 0
      000858 00                    2387 	.db #0x00	; 0
      000859 00                    2388 	.db #0x00	; 0
      00085A 00                    2389 	.db #0x00	; 0
      00085B 00                    2390 	.db #0x00	; 0
      00085C 00                    2391 	.db #0x00	; 0
      00085D 00                    2392 	.db #0x00	; 0
      00085E 00                    2393 	.db #0x00	; 0
      00085F 00                    2394 	.db #0x00	; 0
      000860 00                    2395 	.db #0x00	; 0
      000861 00                    2396 	.db #0x00	; 0
      000862 00                    2397 	.db #0x00	; 0
      000863 00                    2398 	.db #0x00	; 0
      000864 00                    2399 	.db #0x00	; 0
      000865 00                    2400 	.db #0x00	; 0
      000866 00                    2401 	.db #0x00	; 0
      000867 00                    2402 	.db #0x00	; 0
      000868 00                    2403 	.db #0x00	; 0
      000869 00                    2404 	.db #0x00	; 0
      00086A 00                    2405 	.db #0x00	; 0
      00086B 00                    2406 	.db #0x00	; 0
      00086C 00                    2407 	.db #0x00	; 0
      00086D 00                    2408 	.db #0x00	; 0
      00086E 00                    2409 	.db #0x00	; 0
      00086F 00                    2410 	.db #0x00	; 0
      000870 00                    2411 	.db #0x00	; 0
      000871 00                    2412 	.db #0x00	; 0
      000872 00                    2413 	.db #0x00	; 0
      000873 00                    2414 	.db #0x00	; 0
      000874 00                    2415 	.db #0x00	; 0
      000875 00                    2416 	.db #0x00	; 0
      000876 00                    2417 	.db #0x00	; 0
      000877 00                    2418 	.db #0x00	; 0
      000878 00                    2419 	.db #0x00	; 0
      000879 00                    2420 	.db #0x00	; 0
      00087A 00                    2421 	.db #0x00	; 0
      00087B 00                    2422 	.db #0x00	; 0
      00087C 00                    2423 	.db #0x00	; 0
      00087D 00                    2424 	.db #0x00	; 0
      00087E 00                    2425 	.db #0x00	; 0
      00087F 00                    2426 	.db #0x00	; 0
      000880 00                    2427 	.db #0x00	; 0
      000881 00                    2428 	.db #0x00	; 0
      000882 00                    2429 	.db #0x00	; 0
      000883                       2430 _BLANKSIZE:
      000883 03                    2431 	.db #0x03	; 3
      000884                       2432 _BLANK:
      000884 26                    2433 	.db #0x26	; 38
      000885 2B                    2434 	.db #0x2b	; 43
      000886 2C                    2435 	.db #0x2c	; 44
      000887                       2436 _EMPTYSPRITE:
      000887 50                    2437 	.db #0x50	; 80	'P'
      000888                       2438 _ENEMYCOUNT:
      000888 05                    2439 	.db #0x05	; 5
      000889                       2440 _xSpawnPositions:
      000889 00                    2441 	.db #0x00	; 0
      00088A 60                    2442 	.db #0x60	; 96
      00088B B0                    2443 	.db #0xb0	; 176
      00088C 00                    2444 	.db #0x00	; 0
      00088D B0                    2445 	.db #0xb0	; 176
      00088E 00                    2446 	.db #0x00	; 0
      00088F 60                    2447 	.db #0x60	; 96
      000890 B0                    2448 	.db #0xb0	; 176
      000891                       2449 _ySpawnPositions:
      000891 00                    2450 	.db #0x00	; 0
      000892 00                    2451 	.db #0x00	; 0
      000893 00                    2452 	.db #0x00	; 0
      000894 5C                    2453 	.db #0x5c	; 92
      000895 5C                    2454 	.db #0x5c	; 92
      000896 A0                    2455 	.db #0xa0	; 160
      000897 A0                    2456 	.db #0xa0	; 160
      000898 A0                    2457 	.db #0xa0	; 160
      000899                       2458 _PROJECTILECOUNT:
      000899 05                    2459 	.db #0x05	; 5
      00089A                       2460 _PLAYERSIZE:
      00089A 10                    2461 	.db #0x10	; 16
      00089B                       2462 _maxHull:
      00089B 64                    2463 	.db #0x64	;  100	'd'
      00089C                       2464 _maxShield:
      00089C 64                    2465 	.db #0x64	;  100	'd'
      00089D                       2466 _MAXGUNLEVEL:
      00089D 01                    2467 	.db #0x01	; 1
                                   2468 ;src/main.c:142: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2469 ;	---------------------------------
                                   2470 ; Function setHealthBar
                                   2471 ; ---------------------------------
      00089E                       2472 _setHealthBar::
      00089E E8 FB                 2473 	add	sp, #-5
                                   2474 ;src/main.c:144: if (hp >= 80) {
      0008A0 F8 08                 2475 	ldhl	sp,	#8
      0008A2 7E                    2476 	ld	a, (hl)
      0008A3 D6 50                 2477 	sub	a, #0x50
      0008A5 38 31                 2478 	jr	C, 00102$
                                   2479 ;src/main.c:145: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      0008A7 F8 00                 2480 	ldhl	sp,	#0
      0008A9 4D                    2481 	ld	c, l
      0008AA 44                    2482 	ld	b, h
      0008AB 36 50                 2483 	ld	(hl), #0x50
      0008AD 69                    2484 	ld	l, c
                                   2485 ;	spillPairReg hl
                                   2486 ;	spillPairReg hl
      0008AE 60                    2487 	ld	h, b
                                   2488 ;	spillPairReg hl
                                   2489 ;	spillPairReg hl
      0008AF 23                    2490 	inc	hl
      0008B0 36 50                 2491 	ld	(hl), #0x50
      0008B2 69                    2492 	ld	l, c
                                   2493 ;	spillPairReg hl
                                   2494 ;	spillPairReg hl
      0008B3 60                    2495 	ld	h, b
                                   2496 ;	spillPairReg hl
                                   2497 ;	spillPairReg hl
      0008B4 23                    2498 	inc	hl
      0008B5 23                    2499 	inc	hl
      0008B6 36 50                 2500 	ld	(hl), #0x50
      0008B8 69                    2501 	ld	l, c
                                   2502 ;	spillPairReg hl
                                   2503 ;	spillPairReg hl
      0008B9 60                    2504 	ld	h, b
                                   2505 ;	spillPairReg hl
                                   2506 ;	spillPairReg hl
      0008BA 23                    2507 	inc	hl
      0008BB 23                    2508 	inc	hl
      0008BC 23                    2509 	inc	hl
      0008BD 36 50                 2510 	ld	(hl), #0x50
      0008BF 21 04 00              2511 	ld	hl, #0x0004
      0008C2 09                    2512 	add	hl, bc
      0008C3 36 50                 2513 	ld	(hl), #0x50
                                   2514 ;src/main.c:146: set_win_tiles(5,row,5,1,blockmap);
      0008C5 C5                    2515 	push	bc
      0008C6 21 05 01              2516 	ld	hl, #0x105
      0008C9 E5                    2517 	push	hl
      0008CA F8 0B                 2518 	ldhl	sp,	#11
      0008CC 66                    2519 	ld	h, (hl)
      0008CD 2E 05                 2520 	ld	l, #0x05
      0008CF E5                    2521 	push	hl
      0008D0 CDr00r00              2522 	call	_set_win_tiles
      0008D3 E8 06                 2523 	add	sp, #6
                                   2524 ;src/main.c:147: return;
      0008D5 C3rACr09              2525 	jp	00109$
      0008D8                       2526 00102$:
                                   2527 ;src/main.c:149: if (hp >= 60) {
      0008D8 F8 08                 2528 	ldhl	sp,	#8
      0008DA 7E                    2529 	ld	a, (hl)
      0008DB D6 3C                 2530 	sub	a, #0x3c
      0008DD 38 31                 2531 	jr	C, 00104$
                                   2532 ;src/main.c:150: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0008DF F8 00                 2533 	ldhl	sp,	#0
      0008E1 4D                    2534 	ld	c, l
      0008E2 44                    2535 	ld	b, h
      0008E3 36 50                 2536 	ld	(hl), #0x50
      0008E5 69                    2537 	ld	l, c
                                   2538 ;	spillPairReg hl
                                   2539 ;	spillPairReg hl
      0008E6 60                    2540 	ld	h, b
                                   2541 ;	spillPairReg hl
                                   2542 ;	spillPairReg hl
      0008E7 23                    2543 	inc	hl
      0008E8 36 50                 2544 	ld	(hl), #0x50
      0008EA 69                    2545 	ld	l, c
                                   2546 ;	spillPairReg hl
                                   2547 ;	spillPairReg hl
      0008EB 60                    2548 	ld	h, b
                                   2549 ;	spillPairReg hl
                                   2550 ;	spillPairReg hl
      0008EC 23                    2551 	inc	hl
      0008ED 23                    2552 	inc	hl
      0008EE 36 50                 2553 	ld	(hl), #0x50
      0008F0 69                    2554 	ld	l, c
                                   2555 ;	spillPairReg hl
                                   2556 ;	spillPairReg hl
      0008F1 60                    2557 	ld	h, b
                                   2558 ;	spillPairReg hl
                                   2559 ;	spillPairReg hl
      0008F2 23                    2560 	inc	hl
      0008F3 23                    2561 	inc	hl
      0008F4 23                    2562 	inc	hl
      0008F5 36 50                 2563 	ld	(hl), #0x50
      0008F7 21 04 00              2564 	ld	hl, #0x0004
      0008FA 09                    2565 	add	hl, bc
      0008FB 36 00                 2566 	ld	(hl), #0x00
                                   2567 ;src/main.c:151: set_win_tiles(5,row,5,1,blockmap);
      0008FD C5                    2568 	push	bc
      0008FE 21 05 01              2569 	ld	hl, #0x105
      000901 E5                    2570 	push	hl
      000902 F8 0B                 2571 	ldhl	sp,	#11
      000904 66                    2572 	ld	h, (hl)
      000905 2E 05                 2573 	ld	l, #0x05
      000907 E5                    2574 	push	hl
      000908 CDr00r00              2575 	call	_set_win_tiles
      00090B E8 06                 2576 	add	sp, #6
                                   2577 ;src/main.c:152: return;
      00090D C3rACr09              2578 	jp	00109$
      000910                       2579 00104$:
                                   2580 ;src/main.c:154: if (hp >= 40) {
      000910 F8 08                 2581 	ldhl	sp,	#8
      000912 7E                    2582 	ld	a, (hl)
      000913 D6 28                 2583 	sub	a, #0x28
      000915 38 30                 2584 	jr	C, 00106$
                                   2585 ;src/main.c:155: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      000917 F8 00                 2586 	ldhl	sp,	#0
      000919 4D                    2587 	ld	c, l
      00091A 44                    2588 	ld	b, h
      00091B 36 50                 2589 	ld	(hl), #0x50
      00091D 69                    2590 	ld	l, c
                                   2591 ;	spillPairReg hl
                                   2592 ;	spillPairReg hl
      00091E 60                    2593 	ld	h, b
                                   2594 ;	spillPairReg hl
                                   2595 ;	spillPairReg hl
      00091F 23                    2596 	inc	hl
      000920 36 50                 2597 	ld	(hl), #0x50
      000922 69                    2598 	ld	l, c
                                   2599 ;	spillPairReg hl
                                   2600 ;	spillPairReg hl
      000923 60                    2601 	ld	h, b
                                   2602 ;	spillPairReg hl
                                   2603 ;	spillPairReg hl
      000924 23                    2604 	inc	hl
      000925 23                    2605 	inc	hl
      000926 36 50                 2606 	ld	(hl), #0x50
      000928 59                    2607 	ld	e, c
      000929 50                    2608 	ld	d, b
      00092A 13                    2609 	inc	de
      00092B 13                    2610 	inc	de
      00092C 13                    2611 	inc	de
      00092D AF                    2612 	xor	a, a
      00092E 12                    2613 	ld	(de), a
      00092F 21 04 00              2614 	ld	hl, #0x0004
      000932 09                    2615 	add	hl, bc
      000933 36 00                 2616 	ld	(hl), #0x00
                                   2617 ;src/main.c:156: set_win_tiles(5,row,5,1,blockmap);
      000935 C5                    2618 	push	bc
      000936 21 05 01              2619 	ld	hl, #0x105
      000939 E5                    2620 	push	hl
      00093A F8 0B                 2621 	ldhl	sp,	#11
      00093C 66                    2622 	ld	h, (hl)
      00093D 2E 05                 2623 	ld	l, #0x05
      00093F E5                    2624 	push	hl
      000940 CDr00r00              2625 	call	_set_win_tiles
      000943 E8 06                 2626 	add	sp, #6
                                   2627 ;src/main.c:157: return;
      000945 18 65                 2628 	jr	00109$
      000947                       2629 00106$:
                                   2630 ;src/main.c:159: if (hp >= 20) {
      000947 F8 08                 2631 	ldhl	sp,	#8
      000949 7E                    2632 	ld	a, (hl)
      00094A D6 14                 2633 	sub	a, #0x14
      00094C 38 30                 2634 	jr	C, 00108$
                                   2635 ;src/main.c:160: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      00094E F8 00                 2636 	ldhl	sp,	#0
      000950 4D                    2637 	ld	c, l
      000951 44                    2638 	ld	b, h
      000952 36 50                 2639 	ld	(hl), #0x50
      000954 69                    2640 	ld	l, c
                                   2641 ;	spillPairReg hl
                                   2642 ;	spillPairReg hl
      000955 60                    2643 	ld	h, b
                                   2644 ;	spillPairReg hl
                                   2645 ;	spillPairReg hl
      000956 23                    2646 	inc	hl
      000957 36 50                 2647 	ld	(hl), #0x50
      000959 59                    2648 	ld	e, c
      00095A 50                    2649 	ld	d, b
      00095B 13                    2650 	inc	de
      00095C 13                    2651 	inc	de
      00095D AF                    2652 	xor	a, a
      00095E 12                    2653 	ld	(de), a
      00095F 59                    2654 	ld	e, c
      000960 50                    2655 	ld	d, b
      000961 13                    2656 	inc	de
      000962 13                    2657 	inc	de
      000963 13                    2658 	inc	de
      000964 AF                    2659 	xor	a, a
      000965 12                    2660 	ld	(de), a
      000966 21 04 00              2661 	ld	hl, #0x0004
      000969 09                    2662 	add	hl, bc
      00096A 36 00                 2663 	ld	(hl), #0x00
                                   2664 ;src/main.c:161: set_win_tiles(5,row,5,1,blockmap);
      00096C C5                    2665 	push	bc
      00096D 21 05 01              2666 	ld	hl, #0x105
      000970 E5                    2667 	push	hl
      000971 F8 0B                 2668 	ldhl	sp,	#11
      000973 66                    2669 	ld	h, (hl)
      000974 2E 05                 2670 	ld	l, #0x05
      000976 E5                    2671 	push	hl
      000977 CDr00r00              2672 	call	_set_win_tiles
      00097A E8 06                 2673 	add	sp, #6
                                   2674 ;src/main.c:162: return;
      00097C 18 2E                 2675 	jr	00109$
      00097E                       2676 00108$:
                                   2677 ;src/main.c:164: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      00097E F8 00                 2678 	ldhl	sp,	#0
      000980 4D                    2679 	ld	c, l
      000981 44                    2680 	ld	b, h
      000982 36 50                 2681 	ld	(hl), #0x50
      000984 59                    2682 	ld	e, c
      000985 50                    2683 	ld	d, b
      000986 13                    2684 	inc	de
      000987 AF                    2685 	xor	a, a
      000988 12                    2686 	ld	(de), a
      000989 59                    2687 	ld	e, c
      00098A 50                    2688 	ld	d, b
      00098B 13                    2689 	inc	de
      00098C 13                    2690 	inc	de
      00098D AF                    2691 	xor	a, a
      00098E 12                    2692 	ld	(de), a
      00098F 59                    2693 	ld	e, c
      000990 50                    2694 	ld	d, b
      000991 13                    2695 	inc	de
      000992 13                    2696 	inc	de
      000993 13                    2697 	inc	de
      000994 AF                    2698 	xor	a, a
      000995 12                    2699 	ld	(de), a
      000996 21 04 00              2700 	ld	hl, #0x0004
      000999 09                    2701 	add	hl, bc
      00099A 36 00                 2702 	ld	(hl), #0x00
                                   2703 ;src/main.c:165: set_win_tiles(5,row,5,1,blockmap);
      00099C C5                    2704 	push	bc
      00099D 21 05 01              2705 	ld	hl, #0x105
      0009A0 E5                    2706 	push	hl
      0009A1 F8 0B                 2707 	ldhl	sp,	#11
      0009A3 66                    2708 	ld	h, (hl)
      0009A4 2E 05                 2709 	ld	l, #0x05
      0009A6 E5                    2710 	push	hl
      0009A7 CDr00r00              2711 	call	_set_win_tiles
      0009AA E8 06                 2712 	add	sp, #6
                                   2713 ;src/main.c:166: return;
      0009AC                       2714 00109$:
                                   2715 ;src/main.c:168: }
      0009AC E8 05                 2716 	add	sp, #5
      0009AE C9                    2717 	ret
                                   2718 ;src/main.c:170: void updateScore() {
                                   2719 ;	---------------------------------
                                   2720 ; Function updateScore
                                   2721 ; ---------------------------------
      0009AF                       2722 _updateScore::
      0009AF E8 F6                 2723 	add	sp, #-10
                                   2724 ;src/main.c:174: len = bcd2text(&SCORE, 0x01, buf);
      0009B1 F8 00                 2725 	ldhl	sp,	#0
      0009B3 4D                    2726 	ld	c, l
      0009B4 44                    2727 	ld	b, h
      0009B5 59                    2728 	ld	e, c
      0009B6 50                    2729 	ld	d, b
      0009B7 C5                    2730 	push	bc
      0009B8 D5                    2731 	push	de
      0009B9 3E 01                 2732 	ld	a, #0x01
      0009BB F5                    2733 	push	af
      0009BC 33                    2734 	inc	sp
      0009BD 11rACr00              2735 	ld	de, #_SCORE
      0009C0 D5                    2736 	push	de
      0009C1 CDr00r00              2737 	call	_bcd2text
      0009C4 E8 05                 2738 	add	sp, #5
      0009C6 C1                    2739 	pop	bc
                                   2740 ;src/main.c:175: set_win_tiles(15, 1, 5, 1, buf+3);
      0009C7 03                    2741 	inc	bc
      0009C8 03                    2742 	inc	bc
      0009C9 03                    2743 	inc	bc
      0009CA C5                    2744 	push	bc
      0009CB 21 05 01              2745 	ld	hl, #0x105
      0009CE E5                    2746 	push	hl
      0009CF 21 0F 01              2747 	ld	hl, #0x10f
      0009D2 E5                    2748 	push	hl
      0009D3 CDr00r00              2749 	call	_set_win_tiles
                                   2750 ;src/main.c:176: }
      0009D6 E8 10                 2751 	add	sp, #16
      0009D8 C9                    2752 	ret
                                   2753 ;src/main.c:178: void updateMissileCount(int8_t amount) {
                                   2754 ;	---------------------------------
                                   2755 ; Function updateMissileCount
                                   2756 ; ---------------------------------
      0009D9                       2757 _updateMissileCount::
      0009D9 E8 F3                 2758 	add	sp, #-13
                                   2759 ;src/main.c:179: if (amount == -1) {
      0009DB F8 0F                 2760 	ldhl	sp,	#15
      0009DD 7E                    2761 	ld	a, (hl)
      0009DE 3C                    2762 	inc	a
      0009DF 20 13                 2763 	jr	NZ, 00112$
                                   2764 ;src/main.c:180: missiles--;
      0009E1 21rA0r00              2765 	ld	hl, #_missiles
      0009E4 35                    2766 	dec	(hl)
                                   2767 ;src/main.c:181: bcd_sub(&MISSILES, &INCREMENT);
      0009E5 11rB0r00              2768 	ld	de, #_INCREMENT
      0009E8 D5                    2769 	push	de
      0009E9 11rA2r00              2770 	ld	de, #_MISSILES
      0009EC D5                    2771 	push	de
      0009ED CDr00r00              2772 	call	_bcd_sub
      0009F0 E8 04                 2773 	add	sp, #4
      0009F2 18 41                 2774 	jr	00104$
                                   2775 ;src/main.c:184: for(uint8_t i=0; i<amount;i++) {
      0009F4                       2776 00112$:
      0009F4 F8 0C                 2777 	ldhl	sp,	#12
      0009F6 36 00                 2778 	ld	(hl), #0x00
      0009F8                       2779 00106$:
      0009F8 F8 0C                 2780 	ldhl	sp,	#12
      0009FA 4E                    2781 	ld	c, (hl)
      0009FB 06 00                 2782 	ld	b, #0x00
      0009FD F8 0F                 2783 	ldhl	sp,	#15
      0009FF 7E                    2784 	ld	a, (hl)
      000A00 F8 0A                 2785 	ldhl	sp,	#10
      000A02 22                    2786 	ld	(hl+), a
      000A03 07                    2787 	rlca
      000A04 9F                    2788 	sbc	a, a
      000A05 32                    2789 	ld	(hl-), a
      000A06 79                    2790 	ld	a, c
      000A07 96                    2791 	sub	a, (hl)
      000A08 23                    2792 	inc	hl
      000A09 78                    2793 	ld	a, b
      000A0A 9E                    2794 	sbc	a, (hl)
      000A0B 78                    2795 	ld	a, b
      000A0C 57                    2796 	ld	d, a
      000A0D CB 7E                 2797 	bit	7, (hl)
      000A0F 28 07                 2798 	jr	Z, 00128$
      000A11 CB 7A                 2799 	bit	7, d
      000A13 20 08                 2800 	jr	NZ, 00129$
      000A15 BF                    2801 	cp	a, a
      000A16 18 05                 2802 	jr	00129$
      000A18                       2803 00128$:
      000A18 CB 7A                 2804 	bit	7, d
      000A1A 28 01                 2805 	jr	Z, 00129$
      000A1C 37                    2806 	scf
      000A1D                       2807 00129$:
      000A1D 30 16                 2808 	jr	NC, 00104$
                                   2809 ;src/main.c:185: ++missiles;
      000A1F 21rA0r00              2810 	ld	hl, #_missiles
      000A22 34                    2811 	inc	(hl)
                                   2812 ;src/main.c:186: bcd_add(&MISSILES, &INCREMENT);
      000A23 11rB0r00              2813 	ld	de, #_INCREMENT
      000A26 D5                    2814 	push	de
      000A27 11rA2r00              2815 	ld	de, #_MISSILES
      000A2A D5                    2816 	push	de
      000A2B CDr00r00              2817 	call	_bcd_add
      000A2E E8 04                 2818 	add	sp, #4
                                   2819 ;src/main.c:184: for(uint8_t i=0; i<amount;i++) {
      000A30 F8 0C                 2820 	ldhl	sp,	#12
      000A32 34                    2821 	inc	(hl)
      000A33 18 C3                 2822 	jr	00106$
      000A35                       2823 00104$:
                                   2824 ;src/main.c:191: len = bcd2text(&MISSILES, 0x01, buf);
      000A35 F8 00                 2825 	ldhl	sp,	#0
      000A37 4D                    2826 	ld	c, l
      000A38 44                    2827 	ld	b, h
      000A39 59                    2828 	ld	e, c
      000A3A 50                    2829 	ld	d, b
      000A3B C5                    2830 	push	bc
      000A3C D5                    2831 	push	de
      000A3D 3E 01                 2832 	ld	a, #0x01
      000A3F F5                    2833 	push	af
      000A40 33                    2834 	inc	sp
      000A41 11rA2r00              2835 	ld	de, #_MISSILES
      000A44 D5                    2836 	push	de
      000A45 CDr00r00              2837 	call	_bcd2text
      000A48 E8 05                 2838 	add	sp, #5
      000A4A C1                    2839 	pop	bc
                                   2840 ;src/main.c:192: set_win_tiles(18, 0, 2, 1, buf+6);
      000A4B 21 06 00              2841 	ld	hl, #0x0006
      000A4E 09                    2842 	add	hl, bc
      000A4F E5                    2843 	push	hl
      000A50 21 02 01              2844 	ld	hl, #0x102
      000A53 E5                    2845 	push	hl
      000A54 21 12 00              2846 	ld	hl, #0x12
      000A57 E5                    2847 	push	hl
      000A58 CDr00r00              2848 	call	_set_win_tiles
                                   2849 ;src/main.c:194: }
      000A5B E8 13                 2850 	add	sp, #19
      000A5D C9                    2851 	ret
                                   2852 ;src/main.c:196: void incrementScore() {
                                   2853 ;	---------------------------------
                                   2854 ; Function incrementScore
                                   2855 ; ---------------------------------
      000A5E                       2856 _incrementScore::
                                   2857 ;src/main.c:197: score += 1;
      000A5E 21rAAr00              2858 	ld	hl, #_score
      000A61 2A                    2859 	ld	a, (hl+)
      000A62 4F                    2860 	ld	c, a
      000A63 3A                    2861 	ld	a, (hl-)
      000A64 47                    2862 	ld	b, a
      000A65 03                    2863 	inc	bc
      000A66 79                    2864 	ld	a, c
      000A67 22                    2865 	ld	(hl+), a
      000A68 70                    2866 	ld	(hl), b
                                   2867 ;src/main.c:198: bcd_add(&SCORE, &INCREMENT);
      000A69 11rB0r00              2868 	ld	de, #_INCREMENT
      000A6C D5                    2869 	push	de
      000A6D 11rACr00              2870 	ld	de, #_SCORE
      000A70 D5                    2871 	push	de
      000A71 CDr00r00              2872 	call	_bcd_add
      000A74 E8 04                 2873 	add	sp, #4
                                   2874 ;src/main.c:199: }
      000A76 C9                    2875 	ret
                                   2876 ;src/main.c:201: void updateDirection() {
                                   2877 ;	---------------------------------
                                   2878 ; Function updateDirection
                                   2879 ; ---------------------------------
      000A77                       2880 _updateDirection::
      000A77 E8 FC                 2881 	add	sp, #-4
                                   2882 ;src/main.c:205: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A79 21rE6r00              2883 	ld	hl, #_joydata
      000A7C 5E                    2884 	ld	e, (hl)
      000A7D 7B                    2885 	ld	a, e
      000A7E E6 01                 2886 	and	a, #0x01
      000A80 F8 00                 2887 	ldhl	sp,	#0
      000A82 22                    2888 	ld	(hl+), a
      000A83 AF                    2889 	xor	a, a
      000A84 22                    2890 	ld	(hl+), a
      000A85 7B                    2891 	ld	a, e
      000A86 E6 04                 2892 	and	a, #0x04
      000A88 22                    2893 	ld	(hl+), a
      000A89 AF                    2894 	xor	a, a
      000A8A 32                    2895 	ld	(hl-), a
      000A8B 2B                    2896 	dec	hl
      000A8C 7B                    2897 	ld	a, e
      000A8D E6 08                 2898 	and	a, #0x08
      000A8F 4F                    2899 	ld	c, a
      000A90 06 00                 2900 	ld	b, #0x00
      000A92 3A                    2901 	ld	a, (hl-)
      000A93 B6                    2902 	or	a, (hl)
      000A94 28 14                 2903 	jr	Z, 00102$
      000A96 F8 03                 2904 	ldhl	sp,	#3
      000A98 3A                    2905 	ld	a, (hl-)
      000A99 B6                    2906 	or	a, (hl)
      000A9A 20 0E                 2907 	jr	NZ, 00102$
      000A9C 78                    2908 	ld	a, b
      000A9D B1                    2909 	or	a, c
      000A9E 20 0A                 2910 	jr	NZ, 00102$
                                   2911 ;src/main.c:206: xDir = 1;
      000AA0 21r8Br00              2912 	ld	hl, #_xDir
      000AA3 36 01                 2913 	ld	(hl), #0x01
                                   2914 ;src/main.c:207: yDir = 0;
      000AA5 21r8Cr00              2915 	ld	hl, #_yDir
      000AA8 36 00                 2916 	ld	(hl), #0x00
      000AAA                       2917 00102$:
                                   2918 ;src/main.c:209: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000AAA 7B                    2919 	ld	a, e
      000AAB E6 02                 2920 	and	a, #0x02
      000AAD 5F                    2921 	ld	e, a
      000AAE 16 00                 2922 	ld	d, #0x00
      000AB0 7A                    2923 	ld	a, d
      000AB1 B3                    2924 	or	a, e
      000AB2 28 14                 2925 	jr	Z, 00106$
      000AB4 F8 03                 2926 	ldhl	sp,	#3
      000AB6 3A                    2927 	ld	a, (hl-)
      000AB7 B6                    2928 	or	a, (hl)
      000AB8 20 0E                 2929 	jr	NZ, 00106$
      000ABA 78                    2930 	ld	a, b
      000ABB B1                    2931 	or	a, c
      000ABC 20 0A                 2932 	jr	NZ, 00106$
                                   2933 ;src/main.c:210: xDir = -1;
      000ABE 21r8Br00              2934 	ld	hl, #_xDir
      000AC1 36 FF                 2935 	ld	(hl), #0xff
                                   2936 ;src/main.c:211: yDir = 0;
      000AC3 21r8Cr00              2937 	ld	hl, #_yDir
      000AC6 36 00                 2938 	ld	(hl), #0x00
      000AC8                       2939 00106$:
                                   2940 ;src/main.c:213: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000AC8 F8 03                 2941 	ldhl	sp,	#3
      000ACA 3A                    2942 	ld	a, (hl-)
      000ACB B6                    2943 	or	a, (hl)
      000ACC 28 13                 2944 	jr	Z, 00110$
      000ACE 7A                    2945 	ld	a, d
      000ACF B3                    2946 	or	a, e
      000AD0 20 0F                 2947 	jr	NZ, 00110$
      000AD2 2B                    2948 	dec	hl
      000AD3 3A                    2949 	ld	a, (hl-)
      000AD4 B6                    2950 	or	a, (hl)
      000AD5 20 0A                 2951 	jr	NZ, 00110$
                                   2952 ;src/main.c:214: xDir = 0;
      000AD7 21r8Br00              2953 	ld	hl, #_xDir
      000ADA 36 00                 2954 	ld	(hl), #0x00
                                   2955 ;src/main.c:215: yDir = -1;
      000ADC 21r8Cr00              2956 	ld	hl, #_yDir
      000ADF 36 FF                 2957 	ld	(hl), #0xff
      000AE1                       2958 00110$:
                                   2959 ;src/main.c:217: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000AE1 78                    2960 	ld	a, b
      000AE2 B1                    2961 	or	a, c
      000AE3 28 14                 2962 	jr	Z, 00114$
      000AE5 7A                    2963 	ld	a, d
      000AE6 B3                    2964 	or	a, e
      000AE7 20 10                 2965 	jr	NZ, 00114$
      000AE9 F8 01                 2966 	ldhl	sp,	#1
      000AEB 3A                    2967 	ld	a, (hl-)
      000AEC B6                    2968 	or	a, (hl)
      000AED 20 0A                 2969 	jr	NZ, 00114$
                                   2970 ;src/main.c:218: xDir = 0;
      000AEF 21r8Br00              2971 	ld	hl, #_xDir
      000AF2 36 00                 2972 	ld	(hl), #0x00
                                   2973 ;src/main.c:219: yDir = 1;
      000AF4 21r8Cr00              2974 	ld	hl, #_yDir
      000AF7 36 01                 2975 	ld	(hl), #0x01
      000AF9                       2976 00114$:
                                   2977 ;src/main.c:223: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000AF9 F8 03                 2978 	ldhl	sp,	#3
      000AFB 3A                    2979 	ld	a, (hl-)
      000AFC B6                    2980 	or	a, (hl)
      000AFD 28 0F                 2981 	jr	Z, 00118$
      000AFF 2B                    2982 	dec	hl
      000B00 3A                    2983 	ld	a, (hl-)
      000B01 B6                    2984 	or	a, (hl)
      000B02 28 0A                 2985 	jr	Z, 00118$
                                   2986 ;src/main.c:224: xDir = 1;
      000B04 21r8Br00              2987 	ld	hl, #_xDir
      000B07 36 01                 2988 	ld	(hl), #0x01
                                   2989 ;src/main.c:225: yDir = -1;
      000B09 21r8Cr00              2990 	ld	hl, #_yDir
      000B0C 36 FF                 2991 	ld	(hl), #0xff
      000B0E                       2992 00118$:
                                   2993 ;src/main.c:227: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000B0E F8 03                 2994 	ldhl	sp,	#3
      000B10 3A                    2995 	ld	a, (hl-)
      000B11 B6                    2996 	or	a, (hl)
      000B12 28 0E                 2997 	jr	Z, 00121$
      000B14 7A                    2998 	ld	a, d
      000B15 B3                    2999 	or	a, e
      000B16 28 0A                 3000 	jr	Z, 00121$
                                   3001 ;src/main.c:228: xDir = -1;
      000B18 21r8Br00              3002 	ld	hl, #_xDir
      000B1B 36 FF                 3003 	ld	(hl), #0xff
                                   3004 ;src/main.c:229: yDir = -1;
      000B1D 21r8Cr00              3005 	ld	hl, #_yDir
      000B20 36 FF                 3006 	ld	(hl), #0xff
      000B22                       3007 00121$:
                                   3008 ;src/main.c:231: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000B22 78                    3009 	ld	a, b
      000B23 B1                    3010 	or	a, c
      000B24 28 10                 3011 	jr	Z, 00124$
      000B26 F8 01                 3012 	ldhl	sp,	#1
      000B28 3A                    3013 	ld	a, (hl-)
      000B29 B6                    3014 	or	a, (hl)
      000B2A 28 0A                 3015 	jr	Z, 00124$
                                   3016 ;src/main.c:232: xDir = 1;
      000B2C 21r8Br00              3017 	ld	hl, #_xDir
      000B2F 36 01                 3018 	ld	(hl), #0x01
                                   3019 ;src/main.c:233: yDir = 1;
      000B31 21r8Cr00              3020 	ld	hl, #_yDir
      000B34 36 01                 3021 	ld	(hl), #0x01
      000B36                       3022 00124$:
                                   3023 ;src/main.c:235: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000B36 78                    3024 	ld	a, b
      000B37 B1                    3025 	or	a, c
      000B38 28 0E                 3026 	jr	Z, 00127$
      000B3A 7A                    3027 	ld	a, d
      000B3B B3                    3028 	or	a, e
      000B3C 28 0A                 3029 	jr	Z, 00127$
                                   3030 ;src/main.c:236: xDir = -1;
      000B3E 21r8Br00              3031 	ld	hl, #_xDir
      000B41 36 FF                 3032 	ld	(hl), #0xff
                                   3033 ;src/main.c:237: yDir = 1;
      000B43 21r8Cr00              3034 	ld	hl, #_yDir
      000B46 36 01                 3035 	ld	(hl), #0x01
      000B48                       3036 00127$:
                                   3037 ;src/main.c:242: if (xDir == 0 && yDir == 0) {
      000B48 FAr8Br00              3038 	ld	a, (#_xDir)
      000B4B B7                    3039 	or	a, a
      000B4C 20 07                 3040 	jr	NZ, 00130$
      000B4E FAr8Cr00              3041 	ld	a, (#_yDir)
      000B51 B7                    3042 	or	a, a
                                   3043 ;src/main.c:243: return;
      000B52 CAr9Er0C              3044 	jp	Z,00195$
      000B55                       3045 00130$:
                                   3046 ;src/main.c:275: if (xDir == 0 && yDir > 0) {
      000B55 21r8Cr00              3047 	ld	hl, #_yDir
      000B58 5E                    3048 	ld	e, (hl)
      000B59 AF                    3049 	xor	a, a
      000B5A 57                    3050 	ld	d, a
      000B5B 96                    3051 	sub	a, (hl)
      000B5C CB 7B                 3052 	bit	7, e
      000B5E 28 07                 3053 	jr	Z, 00387$
      000B60 CB 7A                 3054 	bit	7, d
      000B62 20 08                 3055 	jr	NZ, 00388$
      000B64 BF                    3056 	cp	a, a
      000B65 18 05                 3057 	jr	00388$
      000B67                       3058 00387$:
      000B67 CB 7A                 3059 	bit	7, d
      000B69 28 01                 3060 	jr	Z, 00388$
      000B6B 37                    3061 	scf
      000B6C                       3062 00388$:
      000B6C 3E 00                 3063 	ld	a, #0x00
      000B6E 17                    3064 	rla
      000B6F 4F                    3065 	ld	c, a
      000B70 FAr8Br00              3066 	ld	a, (#_xDir)
      000B73 B7                    3067 	or	a,a
      000B74 20 1A                 3068 	jr	NZ, 00160$
      000B76 B1                    3069 	or	a,c
      000B77 28 17                 3070 	jr	Z, 00160$
                                   3071 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B79 21r02r00              3072 	ld	hl, #(_shadow_OAM + 2)
      000B7C 36 00                 3073 	ld	(hl), #0x00
      000B7E 21r06r00              3074 	ld	hl, #(_shadow_OAM + 6)
      000B81 36 02                 3075 	ld	(hl), #0x02
                                   3076 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B83 21r03r00              3077 	ld	hl, #(_shadow_OAM + 3)
      000B86 36 40                 3078 	ld	(hl), #0x40
      000B88 21r07r00              3079 	ld	hl, #(_shadow_OAM + 7)
      000B8B 36 40                 3080 	ld	(hl), #0x40
                                   3081 ;src/main.c:279: set_sprite_prop(1, S_FLIPY); 
      000B8D C3r9Er0C              3082 	jp	00195$
      000B90                       3083 00160$:
                                   3084 ;src/main.c:281: else if (xDir == 0 && yDir < 0) {
      000B90 FAr8Cr00              3085 	ld	a, (#_yDir)
      000B93 07                    3086 	rlca
      000B94 E6 01                 3087 	and	a,#0x01
      000B96 F8 02                 3088 	ldhl	sp,	#2
      000B98 77                    3089 	ld	(hl), a
      000B99 FAr8Br00              3090 	ld	a, (#_xDir)
      000B9C B7                    3091 	or	a, a
      000B9D 20 1D                 3092 	jr	NZ, 00156$
      000B9F F8 02                 3093 	ldhl	sp,	#2
      000BA1 7E                    3094 	ld	a, (hl)
      000BA2 B7                    3095 	or	a, a
      000BA3 28 17                 3096 	jr	Z, 00156$
                                   3097 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BA5 21r02r00              3098 	ld	hl, #(_shadow_OAM + 2)
      000BA8 36 00                 3099 	ld	(hl), #0x00
      000BAA 21r06r00              3100 	ld	hl, #(_shadow_OAM + 6)
      000BAD 36 02                 3101 	ld	(hl), #0x02
                                   3102 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BAF 21r03r00              3103 	ld	hl, #(_shadow_OAM + 3)
      000BB2 36 00                 3104 	ld	(hl), #0x00
      000BB4 21r07r00              3105 	ld	hl, #(_shadow_OAM + 7)
      000BB7 36 00                 3106 	ld	(hl), #0x00
                                   3107 ;src/main.c:285: set_sprite_prop(1, 0); 
      000BB9 C3r9Er0C              3108 	jp	00195$
      000BBC                       3109 00156$:
                                   3110 ;src/main.c:287: else if (xDir > 0 && yDir == 0) {
      000BBC 21r8Br00              3111 	ld	hl, #_xDir
      000BBF 5E                    3112 	ld	e, (hl)
      000BC0 AF                    3113 	xor	a, a
      000BC1 57                    3114 	ld	d, a
      000BC2 96                    3115 	sub	a, (hl)
      000BC3 CB 7B                 3116 	bit	7, e
      000BC5 28 07                 3117 	jr	Z, 00389$
      000BC7 CB 7A                 3118 	bit	7, d
      000BC9 20 08                 3119 	jr	NZ, 00390$
      000BCB BF                    3120 	cp	a, a
      000BCC 18 05                 3121 	jr	00390$
      000BCE                       3122 00389$:
      000BCE CB 7A                 3123 	bit	7, d
      000BD0 28 01                 3124 	jr	Z, 00390$
      000BD2 37                    3125 	scf
      000BD3                       3126 00390$:
      000BD3 3E 00                 3127 	ld	a, #0x00
      000BD5 17                    3128 	rla
      000BD6 47                    3129 	ld	b, a
      000BD7 B7                    3130 	or	a, a
      000BD8 28 1D                 3131 	jr	Z, 00152$
      000BDA FAr8Cr00              3132 	ld	a, (#_yDir)
      000BDD B7                    3133 	or	a, a
      000BDE 20 17                 3134 	jr	NZ, 00152$
                                   3135 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BE0 21r02r00              3136 	ld	hl, #(_shadow_OAM + 2)
      000BE3 36 04                 3137 	ld	(hl), #0x04
      000BE5 21r06r00              3138 	ld	hl, #(_shadow_OAM + 6)
      000BE8 36 06                 3139 	ld	(hl), #0x06
                                   3140 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BEA 21r03r00              3141 	ld	hl, #(_shadow_OAM + 3)
      000BED 36 00                 3142 	ld	(hl), #0x00
      000BEF 21r07r00              3143 	ld	hl, #(_shadow_OAM + 7)
      000BF2 36 00                 3144 	ld	(hl), #0x00
                                   3145 ;src/main.c:291: set_sprite_prop(1, 0); 
      000BF4 C3r9Er0C              3146 	jp	00195$
      000BF7                       3147 00152$:
                                   3148 ;src/main.c:293: else if (xDir < 0 && yDir == 0) {
      000BF7 FAr8Br00              3149 	ld	a, (#_xDir)
      000BFA 07                    3150 	rlca
      000BFB E6 01                 3151 	and	a,#0x01
      000BFD F8 03                 3152 	ldhl	sp,	#3
      000BFF 77                    3153 	ld	(hl), a
      000C00 7E                    3154 	ld	a, (hl)
      000C01 B7                    3155 	or	a, a
      000C02 28 1D                 3156 	jr	Z, 00148$
      000C04 FAr8Cr00              3157 	ld	a, (#_yDir)
      000C07 B7                    3158 	or	a, a
      000C08 20 17                 3159 	jr	NZ, 00148$
                                   3160 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C0A 21r02r00              3161 	ld	hl, #(_shadow_OAM + 2)
      000C0D 36 04                 3162 	ld	(hl), #0x04
      000C0F 21r06r00              3163 	ld	hl, #(_shadow_OAM + 6)
      000C12 36 06                 3164 	ld	(hl), #0x06
                                   3165 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C14 21r03r00              3166 	ld	hl, #(_shadow_OAM + 3)
      000C17 36 20                 3167 	ld	(hl), #0x20
      000C19 21r07r00              3168 	ld	hl, #(_shadow_OAM + 7)
      000C1C 36 20                 3169 	ld	(hl), #0x20
                                   3170 ;src/main.c:297: set_sprite_prop(1, S_FLIPX); 
      000C1E C3r9Er0C              3171 	jp	00195$
      000C21                       3172 00148$:
                                   3173 ;src/main.c:299: else if (xDir > 0 && yDir < 0) {
      000C21 78                    3174 	ld	a, b
      000C22 B7                    3175 	or	a, a
      000C23 28 1C                 3176 	jr	Z, 00144$
      000C25 F8 02                 3177 	ldhl	sp,	#2
      000C27 7E                    3178 	ld	a, (hl)
      000C28 B7                    3179 	or	a, a
      000C29 28 16                 3180 	jr	Z, 00144$
                                   3181 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C2B 21r02r00              3182 	ld	hl, #(_shadow_OAM + 2)
      000C2E 36 08                 3183 	ld	(hl), #0x08
      000C30 21r06r00              3184 	ld	hl, #(_shadow_OAM + 6)
      000C33 36 0A                 3185 	ld	(hl), #0x0a
                                   3186 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C35 21r03r00              3187 	ld	hl, #(_shadow_OAM + 3)
      000C38 36 00                 3188 	ld	(hl), #0x00
      000C3A 21r07r00              3189 	ld	hl, #(_shadow_OAM + 7)
      000C3D 36 00                 3190 	ld	(hl), #0x00
                                   3191 ;src/main.c:303: set_sprite_prop(1, 0); 
      000C3F 18 5D                 3192 	jr	00195$
      000C41                       3193 00144$:
                                   3194 ;src/main.c:305: else if (xDir > 0 && yDir > 0) {
      000C41 78                    3195 	ld	a, b
      000C42 B7                    3196 	or	a, a
      000C43 28 1A                 3197 	jr	Z, 00140$
      000C45 79                    3198 	ld	a, c
      000C46 B7                    3199 	or	a, a
      000C47 28 16                 3200 	jr	Z, 00140$
                                   3201 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C49 21r02r00              3202 	ld	hl, #(_shadow_OAM + 2)
      000C4C 36 08                 3203 	ld	(hl), #0x08
      000C4E 21r06r00              3204 	ld	hl, #(_shadow_OAM + 6)
      000C51 36 0A                 3205 	ld	(hl), #0x0a
                                   3206 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C53 21r03r00              3207 	ld	hl, #(_shadow_OAM + 3)
      000C56 36 40                 3208 	ld	(hl), #0x40
      000C58 21r07r00              3209 	ld	hl, #(_shadow_OAM + 7)
      000C5B 36 40                 3210 	ld	(hl), #0x40
                                   3211 ;src/main.c:309: set_sprite_prop(1, S_FLIPY); 
      000C5D 18 3F                 3212 	jr	00195$
      000C5F                       3213 00140$:
                                   3214 ;src/main.c:311: else if (xDir < 0 && yDir > 0) {
      000C5F F8 03                 3215 	ldhl	sp,	#3
      000C61 7E                    3216 	ld	a, (hl)
      000C62 B7                    3217 	or	a, a
      000C63 28 1A                 3218 	jr	Z, 00136$
      000C65 79                    3219 	ld	a, c
      000C66 B7                    3220 	or	a, a
      000C67 28 16                 3221 	jr	Z, 00136$
                                   3222 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C69 21r02r00              3223 	ld	hl, #(_shadow_OAM + 2)
      000C6C 36 08                 3224 	ld	(hl), #0x08
      000C6E 21r06r00              3225 	ld	hl, #(_shadow_OAM + 6)
      000C71 36 0A                 3226 	ld	(hl), #0x0a
                                   3227 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C73 21r03r00              3228 	ld	hl, #(_shadow_OAM + 3)
      000C76 36 60                 3229 	ld	(hl), #0x60
      000C78 21r07r00              3230 	ld	hl, #(_shadow_OAM + 7)
      000C7B 36 60                 3231 	ld	(hl), #0x60
                                   3232 ;src/main.c:315: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000C7D 18 1F                 3233 	jr	00195$
      000C7F                       3234 00136$:
                                   3235 ;src/main.c:317: else if (xDir < 0 && yDir < 0) {
      000C7F F8 03                 3236 	ldhl	sp,	#3
      000C81 7E                    3237 	ld	a, (hl)
      000C82 B7                    3238 	or	a, a
      000C83 28 19                 3239 	jr	Z, 00195$
      000C85 2B                    3240 	dec	hl
      000C86 7E                    3241 	ld	a, (hl)
      000C87 B7                    3242 	or	a, a
      000C88 28 14                 3243 	jr	Z, 00195$
                                   3244 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C8A 21r02r00              3245 	ld	hl, #(_shadow_OAM + 2)
      000C8D 36 08                 3246 	ld	(hl), #0x08
      000C8F 21r06r00              3247 	ld	hl, #(_shadow_OAM + 6)
      000C92 36 0A                 3248 	ld	(hl), #0x0a
                                   3249 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C94 21r03r00              3250 	ld	hl, #(_shadow_OAM + 3)
      000C97 36 20                 3251 	ld	(hl), #0x20
      000C99 21r07r00              3252 	ld	hl, #(_shadow_OAM + 7)
      000C9C 36 20                 3253 	ld	(hl), #0x20
                                   3254 ;src/main.c:321: set_sprite_prop(1, S_FLIPX); 
      000C9E                       3255 00195$:
                                   3256 ;src/main.c:323: }
      000C9E E8 04                 3257 	add	sp, #4
      000CA0 C9                    3258 	ret
                                   3259 ;src/main.c:357: void playSound(uint8_t type) {
                                   3260 ;	---------------------------------
                                   3261 ; Function playSound
                                   3262 ; ---------------------------------
      000CA1                       3263 _playSound::
                                   3264 ;src/main.c:358: if (type == 20) { //singlegun
      000CA1 F8 02                 3265 	ldhl	sp,	#2
      000CA3 7E                    3266 	ld	a, (hl)
      000CA4 D6 14                 3267 	sub	a, #0x14
      000CA6 20 13                 3268 	jr	NZ, 00102$
                                   3269 ;src/main.c:359: NR10_REG = 0x00;
      000CA8 AF                    3270 	xor	a, a
      000CA9 E0r00                 3271 	ldh	(_NR10_REG + 0), a
                                   3272 ;src/main.c:360: NR11_REG = 0x81;
      000CAB 3E 81                 3273 	ld	a, #0x81
      000CAD E0r00                 3274 	ldh	(_NR11_REG + 0), a
                                   3275 ;src/main.c:361: NR12_REG = 0x43;
      000CAF 3E 43                 3276 	ld	a, #0x43
      000CB1 E0r00                 3277 	ldh	(_NR12_REG + 0), a
                                   3278 ;src/main.c:362: NR13_REG = 0X00;//0x6D;
      000CB3 AF                    3279 	xor	a, a
      000CB4 E0r00                 3280 	ldh	(_NR13_REG + 0), a
                                   3281 ;src/main.c:363: NR14_REG = 0x86;
      000CB6 3E 86                 3282 	ld	a, #0x86
      000CB8 E0r00                 3283 	ldh	(_NR14_REG + 0), a
                                   3284 ;src/main.c:364: return;
      000CBA C9                    3285 	ret
      000CBB                       3286 00102$:
                                   3287 ;src/main.c:366: if (type == 23) {
      000CBB F8 02                 3288 	ldhl	sp,	#2
      000CBD 7E                    3289 	ld	a, (hl)
      000CBE D6 17                 3290 	sub	a, #0x17
      000CC0 20 12                 3291 	jr	NZ, 00104$
                                   3292 ;src/main.c:367: NR10_REG = 0x00;
      000CC2 AF                    3293 	xor	a, a
      000CC3 E0r00                 3294 	ldh	(_NR10_REG + 0), a
                                   3295 ;src/main.c:368: NR11_REG = 0x81;
      000CC5 3E 81                 3296 	ld	a, #0x81
      000CC7 E0r00                 3297 	ldh	(_NR11_REG + 0), a
                                   3298 ;src/main.c:369: NR12_REG = 0x53;
      000CC9 3E 53                 3299 	ld	a, #0x53
      000CCB E0r00                 3300 	ldh	(_NR12_REG + 0), a
                                   3301 ;src/main.c:370: NR13_REG = 0X00;//0x6D;
      000CCD AF                    3302 	xor	a, a
      000CCE E0r00                 3303 	ldh	(_NR13_REG + 0), a
                                   3304 ;src/main.c:371: NR14_REG = 0x86;
      000CD0 3E 86                 3305 	ld	a, #0x86
      000CD2 E0r00                 3306 	ldh	(_NR14_REG + 0), a
      000CD4                       3307 00104$:
                                   3308 ;src/main.c:373: if (type == 26) {
      000CD4 F8 02                 3309 	ldhl	sp,	#2
      000CD6 7E                    3310 	ld	a, (hl)
      000CD7 D6 1A                 3311 	sub	a, #0x1a
      000CD9 20 13                 3312 	jr	NZ, 00106$
                                   3313 ;src/main.c:374: NR10_REG = 0x00;
      000CDB AF                    3314 	xor	a, a
      000CDC E0r00                 3315 	ldh	(_NR10_REG + 0), a
                                   3316 ;src/main.c:375: NR11_REG = 0x89;
      000CDE 3E 89                 3317 	ld	a, #0x89
      000CE0 E0r00                 3318 	ldh	(_NR11_REG + 0), a
                                   3319 ;src/main.c:376: NR12_REG = 0x55;
      000CE2 3E 55                 3320 	ld	a, #0x55
      000CE4 E0r00                 3321 	ldh	(_NR12_REG + 0), a
                                   3322 ;src/main.c:377: NR13_REG = 0x70;//0Xbe;//0x6D;
      000CE6 3E 70                 3323 	ld	a, #0x70
      000CE8 E0r00                 3324 	ldh	(_NR13_REG + 0), a
                                   3325 ;src/main.c:378: NR14_REG = 0x84;
      000CEA 3E 84                 3326 	ld	a, #0x84
      000CEC E0r00                 3327 	ldh	(_NR14_REG + 0), a
      000CEE                       3328 00106$:
                                   3329 ;src/main.c:380: if (type == 0) {  // explosion
      000CEE F8 02                 3330 	ldhl	sp,	#2
      000CF0 7E                    3331 	ld	a, (hl)
      000CF1 B7                    3332 	or	a, a
      000CF2 C0                    3333 	ret	NZ
                                   3334 ;src/main.c:381: NR41_REG = 0x20;  
      000CF3 3E 20                 3335 	ld	a, #0x20
      000CF5 E0r00                 3336 	ldh	(_NR41_REG + 0), a
                                   3337 ;src/main.c:382: NR42_REG = 0xa2;//0xa3;  
      000CF7 3E A2                 3338 	ld	a, #0xa2
      000CF9 E0r00                 3339 	ldh	(_NR42_REG + 0), a
                                   3340 ;src/main.c:383: NR43_REG = 0x57;  
      000CFB 3E 57                 3341 	ld	a, #0x57
      000CFD E0r00                 3342 	ldh	(_NR43_REG + 0), a
                                   3343 ;src/main.c:384: NR44_REG = 0x80;  
      000CFF 3E 80                 3344 	ld	a, #0x80
      000D01 E0r00                 3345 	ldh	(_NR44_REG + 0), a
                                   3346 ;src/main.c:390: }
      000D03 C9                    3347 	ret
                                   3348 ;src/main.c:392: void initEnemies(uint8_t loadSprites) {
                                   3349 ;	---------------------------------
                                   3350 ; Function initEnemies
                                   3351 ; ---------------------------------
      000D04                       3352 _initEnemies::
      000D04 E8 F9                 3353 	add	sp, #-7
                                   3354 ;src/main.c:394: if (loadSprites) {
      000D06 F8 09                 3355 	ldhl	sp,	#9
      000D08 7E                    3356 	ld	a, (hl)
      000D09 B7                    3357 	or	a, a
      000D0A 28 1A                 3358 	jr	Z, 00102$
                                   3359 ;src/main.c:396: set_sprite_data(0x40, 5, enemy1);
      000D0C 11r18r05              3360 	ld	de, #_enemy1
      000D0F D5                    3361 	push	de
      000D10 21 40 05              3362 	ld	hl, #0x540
      000D13 E5                    3363 	push	hl
      000D14 CDr00r00              3364 	call	_set_sprite_data
      000D17 E8 04                 3365 	add	sp, #4
                                   3366 ;src/main.c:397: set_sprite_data(0x50, 8, largeenemies);
      000D19 11r68r05              3367 	ld	de, #_largeenemies
      000D1C D5                    3368 	push	de
      000D1D 21 50 08              3369 	ld	hl, #0x850
      000D20 E5                    3370 	push	hl
      000D21 CDr00r00              3371 	call	_set_sprite_data
      000D24 E8 04                 3372 	add	sp, #4
      000D26                       3373 00102$:
                                   3374 ;src/main.c:400: struct Enemy *eptr = enemies;
      000D26 01r55r00              3375 	ld	bc, #_enemies+0
                                   3376 ;src/main.c:402: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D29 F8 06                 3377 	ldhl	sp,	#6
      000D2B 36 00                 3378 	ld	(hl), #0x00
      000D2D                       3379 00116$:
      000D2D 21r88r08              3380 	ld	hl, #_ENEMYCOUNT
      000D30 5E                    3381 	ld	e, (hl)
      000D31 F8 06                 3382 	ldhl	sp,	#6
      000D33 7E                    3383 	ld	a, (hl)
      000D34 93                    3384 	sub	a, e
      000D35 D2r6Cr0E              3385 	jp	NC, 00118$
                                   3386 ;src/main.c:403: if (eptr->alive == 0) {
      000D38 21 09 00              3387 	ld	hl, #0x0009
      000D3B 09                    3388 	add	hl, bc
      000D3C 7E                    3389 	ld	a, (hl)
      000D3D B7                    3390 	or	a, a
      000D3E C2r60r0E              3391 	jp	NZ, 00107$
                                   3392 ;src/main.c:405: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      000D41 C5                    3393 	push	bc
      000D42 CDr00r00              3394 	call	_rand
      000D45 7B                    3395 	ld	a, e
      000D46 C1                    3396 	pop	bc
      000D47 21r17r05              3397 	ld	hl, #_enemyOptionCount
      000D4A 56                    3398 	ld	d, (hl)
      000D4B C5                    3399 	push	bc
      000D4C D5                    3400 	push	de
      000D4D 33                    3401 	inc	sp
      000D4E F5                    3402 	push	af
      000D4F 33                    3403 	inc	sp
      000D50 CDr00r00              3404 	call	__moduchar
      000D53 E1                    3405 	pop	hl
      000D54 7B                    3406 	ld	a, e
      000D55 C1                    3407 	pop	bc
                                   3408 ;src/main.c:407: (*eptr) = enemyOptions[enemyInd];
      000D56 5F                    3409 	ld	e, a
      000D57 16 00                 3410 	ld	d, #0x00
      000D59 6B                    3411 	ld	l, e
      000D5A 62                    3412 	ld	h, d
      000D5B 29                    3413 	add	hl, hl
      000D5C 29                    3414 	add	hl, hl
      000D5D 29                    3415 	add	hl, hl
      000D5E 29                    3416 	add	hl, hl
      000D5F 19                    3417 	add	hl, de
      000D60 11r00r00              3418 	ld	de, #_enemyOptions
      000D63 19                    3419 	add	hl, de
      000D64 59                    3420 	ld	e, c
      000D65 50                    3421 	ld	d, b
      000D66 C5                    3422 	push	bc
      000D67 01 11 00              3423 	ld	bc, #0x11
      000D6A C5                    3424 	push	bc
      000D6B E5                    3425 	push	hl
      000D6C D5                    3426 	push	de
      000D6D CDr00r00              3427 	call	___memcpy
      000D70 E8 06                 3428 	add	sp, #6
      000D72 CDr00r00              3429 	call	_rand
      000D75 7B                    3430 	ld	a, e
      000D76 C1                    3431 	pop	bc
      000D77 E6 07                 3432 	and	a, #0x07
      000D79 F8 05                 3433 	ldhl	sp,	#5
      000D7B 77                    3434 	ld	(hl), a
                                   3435 ;src/main.c:410: eptr->x = xSpawnPositions[posIndex];
      000D7C 11r89r08              3436 	ld	de, #_xSpawnPositions
      000D7F 6E                    3437 	ld	l, (hl)
      000D80 26 00                 3438 	ld	h, #0x00
      000D82 19                    3439 	add	hl, de
      000D83 5D                    3440 	ld	e, l
      000D84 54                    3441 	ld	d, h
      000D85 1A                    3442 	ld	a, (de)
      000D86 5F                    3443 	ld	e, a
      000D87 16 00                 3444 	ld	d, #0x00
      000D89 69                    3445 	ld	l, c
      000D8A 60                    3446 	ld	h, b
      000D8B 7B                    3447 	ld	a, e
      000D8C 22                    3448 	ld	(hl+), a
      000D8D 72                    3449 	ld	(hl), d
                                   3450 ;src/main.c:411: eptr->y = ySpawnPositions[posIndex];
      000D8E 21 02 00              3451 	ld	hl, #0x0002
      000D91 09                    3452 	add	hl, bc
      000D92 33                    3453 	inc	sp
      000D93 33                    3454 	inc	sp
      000D94 E5                    3455 	push	hl
      000D95 11r91r08              3456 	ld	de, #_ySpawnPositions
      000D98 F8 05                 3457 	ldhl	sp,	#5
      000D9A 6E                    3458 	ld	l, (hl)
      000D9B 26 00                 3459 	ld	h, #0x00
      000D9D 19                    3460 	add	hl, de
      000D9E 5D                    3461 	ld	e, l
      000D9F 54                    3462 	ld	d, h
      000DA0 1A                    3463 	ld	a, (de)
      000DA1 F8 04                 3464 	ldhl	sp,	#4
      000DA3 22                    3465 	ld	(hl+), a
      000DA4 AF                    3466 	xor	a, a
      000DA5 32                    3467 	ld	(hl-), a
      000DA6 D1                    3468 	pop	de
      000DA7 D5                    3469 	push	de
      000DA8 2A                    3470 	ld	a, (hl+)
      000DA9 12                    3471 	ld	(de), a
      000DAA 13                    3472 	inc	de
      000DAB 7E                    3473 	ld	a, (hl)
      000DAC 12                    3474 	ld	(de), a
                                   3475 ;src/main.c:413: if (eptr->spriteCount == 1) {
      000DAD 21 08 00              3476 	ld	hl, #0x0008
      000DB0 09                    3477 	add	hl, bc
      000DB1 7E                    3478 	ld	a, (hl)
      000DB2 F8 05                 3479 	ldhl	sp,	#5
      000DB4 77                    3480 	ld	(hl), a
                                   3481 ;src/main.c:414: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DB5 21 06 00              3482 	ld	hl, #0x0006
      000DB8 09                    3483 	add	hl, bc
      000DB9 5D                    3484 	ld	e, l
      000DBA 54                    3485 	ld	d, h
      000DBB F8 06                 3486 	ldhl	sp,	#6
      000DBD 6E                    3487 	ld	l, (hl)
                                   3488 ;	spillPairReg hl
                                   3489 ;	spillPairReg hl
      000DBE 1A                    3490 	ld	a, (de)
      000DBF 5F                    3491 	ld	e, a
      000DC0 7D                    3492 	ld	a, l
      000DC1 87                    3493 	add	a, a
      000DC2 F8 02                 3494 	ldhl	sp,	#2
      000DC4 77                    3495 	ld	(hl), a
      000DC5 2A                    3496 	ld	a, (hl+)
      000DC6 C6 0A                 3497 	add	a, #0x0a
                                   3498 ;src/main.c:413: if (eptr->spriteCount == 1) {
      000DC8 22                    3499 	ld	(hl+), a
      000DC9 23                    3500 	inc	hl
      000DCA 7E                    3501 	ld	a, (hl)
      000DCB 3D                    3502 	dec	a
      000DCC 20 2D                 3503 	jr	NZ, 00104$
                                   3504 ;src/main.c:414: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DCE F8 03                 3505 	ldhl	sp,	#3
      000DD0 56                    3506 	ld	d, (hl)
                                   3507 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DD1 6A                    3508 	ld	l, d
                                   3509 ;	spillPairReg hl
                                   3510 ;	spillPairReg hl
      000DD2 26 00                 3511 	ld	h, #0x00
                                   3512 ;	spillPairReg hl
                                   3513 ;	spillPairReg hl
      000DD4 29                    3514 	add	hl, hl
      000DD5 29                    3515 	add	hl, hl
      000DD6 D5                    3516 	push	de
      000DD7 11r00r00              3517 	ld	de, #_shadow_OAM
      000DDA 19                    3518 	add	hl, de
      000DDB 23                    3519 	inc	hl
      000DDC 23                    3520 	inc	hl
      000DDD D1                    3521 	pop	de
      000DDE 73                    3522 	ld	(hl), e
                                   3523 ;src/main.c:415: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DDF D1                    3524 	pop	de
      000DE0 D5                    3525 	push	de
      000DE1 1A                    3526 	ld	a, (de)
      000DE2 F8 05                 3527 	ldhl	sp,	#5
      000DE4 32                    3528 	ld	(hl-), a
      000DE5 0A                    3529 	ld	a, (bc)
      000DE6 32                    3530 	ld	(hl-), a
                                   3531 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DE7 6E                    3532 	ld	l, (hl)
                                   3533 ;	spillPairReg hl
                                   3534 ;	spillPairReg hl
      000DE8 26 00                 3535 	ld	h, #0x00
                                   3536 ;	spillPairReg hl
                                   3537 ;	spillPairReg hl
      000DEA 29                    3538 	add	hl, hl
      000DEB 29                    3539 	add	hl, hl
      000DEC 11r00r00              3540 	ld	de, #_shadow_OAM
      000DEF 19                    3541 	add	hl, de
      000DF0 5D                    3542 	ld	e, l
      000DF1 54                    3543 	ld	d, h
                                   3544 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DF2 F8 05                 3545 	ldhl	sp,	#5
      000DF4 3A                    3546 	ld	a, (hl-)
      000DF5 12                    3547 	ld	(de), a
      000DF6 13                    3548 	inc	de
      000DF7 7E                    3549 	ld	a, (hl)
      000DF8 12                    3550 	ld	(de), a
                                   3551 ;src/main.c:415: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DF9 18 65                 3552 	jr	00107$
      000DFB                       3553 00104$:
                                   3554 ;src/main.c:418: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DFB F8 03                 3555 	ldhl	sp,	#3
      000DFD 56                    3556 	ld	d, (hl)
                                   3557 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DFE 6A                    3558 	ld	l, d
                                   3559 ;	spillPairReg hl
                                   3560 ;	spillPairReg hl
      000DFF 26 00                 3561 	ld	h, #0x00
                                   3562 ;	spillPairReg hl
                                   3563 ;	spillPairReg hl
      000E01 29                    3564 	add	hl, hl
      000E02 29                    3565 	add	hl, hl
      000E03 D5                    3566 	push	de
      000E04 11r00r00              3567 	ld	de, #_shadow_OAM
      000E07 19                    3568 	add	hl, de
      000E08 23                    3569 	inc	hl
      000E09 23                    3570 	inc	hl
      000E0A D1                    3571 	pop	de
      000E0B 73                    3572 	ld	(hl), e
                                   3573 ;src/main.c:419: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000E0C D1                    3574 	pop	de
      000E0D D5                    3575 	push	de
      000E0E 1A                    3576 	ld	a, (de)
      000E0F F8 04                 3577 	ldhl	sp,	#4
      000E11 22                    3578 	ld	(hl+), a
      000E12 0A                    3579 	ld	a, (bc)
      000E13 32                    3580 	ld	(hl-), a
      000E14 2B                    3581 	dec	hl
      000E15 5E                    3582 	ld	e, (hl)
                                   3583 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E16 26 00                 3584 	ld	h, #0x00
                                   3585 ;	spillPairReg hl
                                   3586 ;	spillPairReg hl
      000E18 6B                    3587 	ld	l, e
      000E19 29                    3588 	add	hl, hl
      000E1A 29                    3589 	add	hl, hl
      000E1B 11r00r00              3590 	ld	de, #_shadow_OAM
      000E1E 19                    3591 	add	hl, de
      000E1F 5D                    3592 	ld	e, l
      000E20 54                    3593 	ld	d, h
                                   3594 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E21 F8 04                 3595 	ldhl	sp,	#4
      000E23 2A                    3596 	ld	a, (hl+)
      000E24 12                    3597 	ld	(de), a
      000E25 13                    3598 	inc	de
      000E26 7E                    3599 	ld	a, (hl)
      000E27 12                    3600 	ld	(de), a
                                   3601 ;src/main.c:421: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      000E28 21 07 00              3602 	ld	hl, #0x0007
      000E2B 09                    3603 	add	hl, bc
      000E2C 5E                    3604 	ld	e, (hl)
      000E2D F8 02                 3605 	ldhl	sp,	#2
      000E2F 7E                    3606 	ld	a, (hl)
      000E30 C6 0B                 3607 	add	a, #0x0b
      000E32 F8 05                 3608 	ldhl	sp,	#5
      000E34 77                    3609 	ld	(hl), a
      000E35 56                    3610 	ld	d, (hl)
                                   3611 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E36 6A                    3612 	ld	l, d
                                   3613 ;	spillPairReg hl
                                   3614 ;	spillPairReg hl
      000E37 26 00                 3615 	ld	h, #0x00
                                   3616 ;	spillPairReg hl
                                   3617 ;	spillPairReg hl
      000E39 29                    3618 	add	hl, hl
      000E3A 29                    3619 	add	hl, hl
      000E3B D5                    3620 	push	de
      000E3C 11r00r00              3621 	ld	de, #_shadow_OAM
      000E3F 19                    3622 	add	hl, de
      000E40 23                    3623 	inc	hl
      000E41 23                    3624 	inc	hl
      000E42 D1                    3625 	pop	de
      000E43 73                    3626 	ld	(hl), e
                                   3627 ;src/main.c:422: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E44 D1                    3628 	pop	de
      000E45 D5                    3629 	push	de
      000E46 1A                    3630 	ld	a, (de)
      000E47 F8 04                 3631 	ldhl	sp,	#4
      000E49 32                    3632 	ld	(hl-), a
      000E4A 0A                    3633 	ld	a, (bc)
      000E4B 22                    3634 	ld	(hl+), a
      000E4C 23                    3635 	inc	hl
      000E4D 5E                    3636 	ld	e, (hl)
                                   3637 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E4E 26 00                 3638 	ld	h, #0x00
                                   3639 ;	spillPairReg hl
                                   3640 ;	spillPairReg hl
      000E50 6B                    3641 	ld	l, e
      000E51 29                    3642 	add	hl, hl
      000E52 29                    3643 	add	hl, hl
      000E53 11r00r00              3644 	ld	de, #_shadow_OAM
      000E56 19                    3645 	add	hl, de
      000E57 5D                    3646 	ld	e, l
      000E58 54                    3647 	ld	d, h
                                   3648 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E59 F8 04                 3649 	ldhl	sp,	#4
      000E5B 3A                    3650 	ld	a, (hl-)
      000E5C 12                    3651 	ld	(de), a
      000E5D 13                    3652 	inc	de
      000E5E 7E                    3653 	ld	a, (hl)
      000E5F 12                    3654 	ld	(de), a
                                   3655 ;src/main.c:422: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E60                       3656 00107$:
                                   3657 ;src/main.c:427: eptr++;
      000E60 21 11 00              3658 	ld	hl, #0x0011
      000E63 09                    3659 	add	hl, bc
      000E64 4D                    3660 	ld	c, l
      000E65 44                    3661 	ld	b, h
                                   3662 ;src/main.c:402: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E66 F8 06                 3663 	ldhl	sp,	#6
      000E68 34                    3664 	inc	(hl)
      000E69 C3r2Dr0D              3665 	jp	00116$
      000E6C                       3666 00118$:
                                   3667 ;src/main.c:430: }
      000E6C E8 07                 3668 	add	sp, #7
      000E6E C9                    3669 	ret
                                   3670 ;src/main.c:433: void updateEnemyPositions() {
                                   3671 ;	---------------------------------
                                   3672 ; Function updateEnemyPositions
                                   3673 ; ---------------------------------
      000E6F                       3674 _updateEnemyPositions::
      000E6F E8 F0                 3675 	add	sp, #-16
                                   3676 ;src/main.c:436: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E71 F8 0F                 3677 	ldhl	sp,	#15
      000E73 36 00                 3678 	ld	(hl), #0x00
      000E75                       3679 00196$:
      000E75 21r88r08              3680 	ld	hl, #_ENEMYCOUNT
      000E78 4E                    3681 	ld	c, (hl)
      000E79 F8 0F                 3682 	ldhl	sp,	#15
      000E7B 7E                    3683 	ld	a, (hl)
      000E7C 91                    3684 	sub	a, c
      000E7D D2r21r13              3685 	jp	NC, 00134$
                                   3686 ;src/main.c:437: if (!enemies[i].alive) {
      000E80 4E                    3687 	ld	c, (hl)
      000E81 06 00                 3688 	ld	b, #0x00
      000E83 69                    3689 	ld	l, c
      000E84 60                    3690 	ld	h, b
      000E85 29                    3691 	add	hl, hl
      000E86 29                    3692 	add	hl, hl
      000E87 29                    3693 	add	hl, hl
      000E88 29                    3694 	add	hl, hl
      000E89 09                    3695 	add	hl, bc
                                   3696 ;src/main.c:445: if (enemies[i].x < playerDrawX) {
      000E8A 01r55r00              3697 	ld	bc,#_enemies
      000E8D 09                    3698 	add	hl,bc
      000E8E E5                    3699 	push	hl
      000E8F 7D                    3700 	ld	a, l
      000E90 F8 04                 3701 	ldhl	sp,	#4
      000E92 77                    3702 	ld	(hl), a
      000E93 E1                    3703 	pop	hl
      000E94 7C                    3704 	ld	a, h
      000E95 F8 03                 3705 	ldhl	sp,	#3
                                   3706 ;src/main.c:437: if (!enemies[i].alive) {
      000E97 32                    3707 	ld	(hl-), a
      000E98 2A                    3708 	ld	a, (hl+)
      000E99 5F                    3709 	ld	e, a
      000E9A 56                    3710 	ld	d, (hl)
      000E9B 21 09 00              3711 	ld	hl, #0x0009
      000E9E 19                    3712 	add	hl, de
      000E9F 4D                    3713 	ld	c, l
      000EA0 44                    3714 	ld	b, h
      000EA1 0A                    3715 	ld	a, (bc)
      000EA2 B7                    3716 	or	a, a
      000EA3 CAr1Br13              3717 	jp	Z, 00133$
                                   3718 ;src/main.c:440: enemies[i].x -= xOverflow;
      000EA6 F8 02                 3719 	ldhl	sp,#2
      000EA8 2A                    3720 	ld	a, (hl+)
      000EA9 5F                    3721 	ld	e, a
      000EAA 56                    3722 	ld	d, (hl)
      000EAB 1A                    3723 	ld	a, (de)
      000EAC 4F                    3724 	ld	c, a
      000EAD 13                    3725 	inc	de
      000EAE 1A                    3726 	ld	a, (de)
      000EAF 47                    3727 	ld	b, a
      000EB0 21r99r00              3728 	ld	hl, #_xOverflow
      000EB3 2A                    3729 	ld	a, (hl+)
      000EB4 5F                    3730 	ld	e, a
      000EB5 56                    3731 	ld	d, (hl)
      000EB6 79                    3732 	ld	a, c
      000EB7 93                    3733 	sub	a, e
      000EB8 5F                    3734 	ld	e, a
      000EB9 78                    3735 	ld	a, b
      000EBA 9A                    3736 	sbc	a, d
      000EBB F8 0E                 3737 	ldhl	sp,	#14
      000EBD 32                    3738 	ld	(hl-), a
      000EBE 73                    3739 	ld	(hl), e
      000EBF F8 02                 3740 	ldhl	sp,#2
      000EC1 2A                    3741 	ld	a, (hl+)
      000EC2 5F                    3742 	ld	e, a
      000EC3 56                    3743 	ld	d, (hl)
      000EC4 F8 0D                 3744 	ldhl	sp,	#13
      000EC6 2A                    3745 	ld	a, (hl+)
      000EC7 12                    3746 	ld	(de), a
      000EC8 13                    3747 	inc	de
      000EC9 7E                    3748 	ld	a, (hl)
      000ECA 12                    3749 	ld	(de), a
                                   3750 ;src/main.c:441: enemies[i].y -= yOverflow;
      000ECB F8 02                 3751 	ldhl	sp,#2
      000ECD 2A                    3752 	ld	a, (hl+)
      000ECE 5F                    3753 	ld	e, a
      000ECF 56                    3754 	ld	d, (hl)
      000ED0 21 02 00              3755 	ld	hl, #0x0002
      000ED3 19                    3756 	add	hl, de
      000ED4 E5                    3757 	push	hl
      000ED5 7D                    3758 	ld	a, l
      000ED6 F8 06                 3759 	ldhl	sp,	#6
      000ED8 77                    3760 	ld	(hl), a
      000ED9 E1                    3761 	pop	hl
      000EDA 7C                    3762 	ld	a, h
      000EDB F8 05                 3763 	ldhl	sp,	#5
      000EDD 32                    3764 	ld	(hl-), a
      000EDE 2A                    3765 	ld	a, (hl+)
      000EDF 5F                    3766 	ld	e, a
      000EE0 56                    3767 	ld	d, (hl)
      000EE1 1A                    3768 	ld	a, (de)
      000EE2 4F                    3769 	ld	c, a
      000EE3 13                    3770 	inc	de
      000EE4 1A                    3771 	ld	a, (de)
      000EE5 47                    3772 	ld	b, a
      000EE6 79                    3773 	ld	a, c
      000EE7 21r9Br00              3774 	ld	hl, #_yOverflow
      000EEA 96                    3775 	sub	a, (hl)
      000EEB 23                    3776 	inc	hl
      000EEC 4F                    3777 	ld	c, a
      000EED 78                    3778 	ld	a, b
      000EEE 9E                    3779 	sbc	a, (hl)
      000EEF 47                    3780 	ld	b, a
      000EF0 F8 04                 3781 	ldhl	sp,	#4
      000EF2 2A                    3782 	ld	a,	(hl+)
      000EF3 66                    3783 	ld	h, (hl)
      000EF4 6F                    3784 	ld	l, a
      000EF5 79                    3785 	ld	a, c
      000EF6 22                    3786 	ld	(hl+), a
      000EF7 70                    3787 	ld	(hl), b
                                   3788 ;src/main.c:444: if (abs(enemies[i].x - playerDrawX) > 8) {
      000EF8 F8 0D                 3789 	ldhl	sp,	#13
      000EFA 7E                    3790 	ld	a, (hl)
      000EFB 21r93r00              3791 	ld	hl, #_playerDrawX
      000EFE 4E                    3792 	ld	c, (hl)
      000EFF 91                    3793 	sub	a, c
      000F00 4F                    3794 	ld	c, a
                                   3795 ;src/main.c:347: if (value >= 0) return value;
      000F01 CB 79                 3796 	bit	7, c
      000F03 20 03                 3797 	jr	NZ, 00169$
      000F05 41                    3798 	ld	b, c
      000F06 18 03                 3799 	jr	00171$
      000F08                       3800 00169$:
                                   3801 ;src/main.c:348: else return - value;
      000F08 AF                    3802 	xor	a, a
      000F09 91                    3803 	sub	a, c
      000F0A 47                    3804 	ld	b, a
                                   3805 ;src/main.c:444: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F0B                       3806 00171$:
                                   3807 ;src/main.c:459: enemies[i].ySpeed += enemies[i].accel;
      000F0B F8 02                 3808 	ldhl	sp,#2
      000F0D 2A                    3809 	ld	a, (hl+)
      000F0E 5F                    3810 	ld	e, a
      000F0F 56                    3811 	ld	d, (hl)
      000F10 21 0D 00              3812 	ld	hl, #0x000d
      000F13 19                    3813 	add	hl, de
      000F14 33                    3814 	inc	sp
      000F15 33                    3815 	inc	sp
      000F16 E5                    3816 	push	hl
                                   3817 ;src/main.c:446: enemies[i].xSpeed += enemies[i].accel;
      000F17 F8 02                 3818 	ldhl	sp,#2
      000F19 2A                    3819 	ld	a, (hl+)
      000F1A 5F                    3820 	ld	e, a
      000F1B 56                    3821 	ld	d, (hl)
      000F1C 21 0E 00              3822 	ld	hl, #0x000e
      000F1F 19                    3823 	add	hl, de
      000F20 E5                    3824 	push	hl
      000F21 7D                    3825 	ld	a, l
      000F22 F8 08                 3826 	ldhl	sp,	#8
      000F24 77                    3827 	ld	(hl), a
      000F25 E1                    3828 	pop	hl
      000F26 7C                    3829 	ld	a, h
      000F27 F8 07                 3830 	ldhl	sp,	#7
                                   3831 ;src/main.c:453: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F29 32                    3832 	ld	(hl-), a
      000F2A 2A                    3833 	ld	a, (hl+)
      000F2B 5F                    3834 	ld	e, a
      000F2C 56                    3835 	ld	d, (hl)
      000F2D 1A                    3836 	ld	a, (de)
      000F2E 4F                    3837 	ld	c, a
                                   3838 ;src/main.c:444: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F2F 58                    3839 	ld	e, b
      000F30 3E 08                 3840 	ld	a,#0x08
      000F32 57                    3841 	ld	d,a
      000F33 90                    3842 	sub	a, b
      000F34 CB 7B                 3843 	bit	7, e
      000F36 28 07                 3844 	jr	Z, 00407$
      000F38 CB 7A                 3845 	bit	7, d
      000F3A 20 08                 3846 	jr	NZ, 00408$
      000F3C BF                    3847 	cp	a, a
      000F3D 18 05                 3848 	jr	00408$
      000F3F                       3849 00407$:
      000F3F CB 7A                 3850 	bit	7, d
      000F41 28 01                 3851 	jr	Z, 00408$
      000F43 37                    3852 	scf
      000F44                       3853 00408$:
      000F44 30 4E                 3854 	jr	NC, 00111$
                                   3855 ;src/main.c:445: if (enemies[i].x < playerDrawX) {
      000F46 F8 02                 3856 	ldhl	sp,#2
      000F48 2A                    3857 	ld	a, (hl+)
      000F49 5F                    3858 	ld	e, a
      000F4A 56                    3859 	ld	d, (hl)
      000F4B 1A                    3860 	ld	a, (de)
      000F4C F8 0B                 3861 	ldhl	sp,	#11
      000F4E 22                    3862 	ld	(hl+), a
      000F4F 13                    3863 	inc	de
      000F50 1A                    3864 	ld	a, (de)
      000F51 77                    3865 	ld	(hl), a
      000F52 FAr93r00              3866 	ld	a, (#_playerDrawX)
      000F55 F8 0D                 3867 	ldhl	sp,	#13
      000F57 22                    3868 	ld	(hl+), a
      000F58 36 00                 3869 	ld	(hl), #0x00
                                   3870 ;src/main.c:446: enemies[i].xSpeed += enemies[i].accel;
      000F5A D1                    3871 	pop	de
      000F5B D5                    3872 	push	de
      000F5C 1A                    3873 	ld	a, (de)
      000F5D 47                    3874 	ld	b, a
                                   3875 ;src/main.c:445: if (enemies[i].x < playerDrawX) {
      000F5E F8 0B                 3876 	ldhl	sp,	#11
      000F60 5D                    3877 	ld	e, l
      000F61 54                    3878 	ld	d, h
      000F62 F8 0D                 3879 	ldhl	sp,	#13
      000F64 1A                    3880 	ld	a, (de)
      000F65 13                    3881 	inc	de
      000F66 96                    3882 	sub	a, (hl)
      000F67 23                    3883 	inc	hl
      000F68 1A                    3884 	ld	a, (de)
      000F69 9E                    3885 	sbc	a, (hl)
      000F6A 1A                    3886 	ld	a, (de)
      000F6B 57                    3887 	ld	d, a
      000F6C CB 7E                 3888 	bit	7, (hl)
      000F6E 28 07                 3889 	jr	Z, 00409$
      000F70 CB 7A                 3890 	bit	7, d
      000F72 20 08                 3891 	jr	NZ, 00410$
      000F74 BF                    3892 	cp	a, a
      000F75 18 05                 3893 	jr	00410$
      000F77                       3894 00409$:
      000F77 CB 7A                 3895 	bit	7, d
      000F79 28 01                 3896 	jr	Z, 00410$
      000F7B 37                    3897 	scf
      000F7C                       3898 00410$:
      000F7C 30 0B                 3899 	jr	NC, 00104$
                                   3900 ;src/main.c:446: enemies[i].xSpeed += enemies[i].accel;
      000F7E 79                    3901 	ld	a, c
      000F7F 80                    3902 	add	a, b
      000F80 4F                    3903 	ld	c, a
      000F81 F8 06                 3904 	ldhl	sp,	#6
      000F83 2A                    3905 	ld	a,	(hl+)
      000F84 66                    3906 	ld	h, (hl)
      000F85 6F                    3907 	ld	l, a
      000F86 71                    3908 	ld	(hl), c
      000F87 18 38                 3909 	jr	00112$
      000F89                       3910 00104$:
                                   3911 ;src/main.c:449: enemies[i].xSpeed -= enemies[i].accel;
      000F89 79                    3912 	ld	a, c
      000F8A 90                    3913 	sub	a, b
      000F8B 4F                    3914 	ld	c, a
      000F8C F8 06                 3915 	ldhl	sp,	#6
      000F8E 2A                    3916 	ld	a,	(hl+)
      000F8F 66                    3917 	ld	h, (hl)
      000F90 6F                    3918 	ld	l, a
      000F91 71                    3919 	ld	(hl), c
      000F92 18 2D                 3920 	jr	00112$
      000F94                       3921 00111$:
                                   3922 ;src/main.c:453: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F94 59                    3923 	ld	e, c
      000F95 AF                    3924 	xor	a, a
      000F96 57                    3925 	ld	d, a
      000F97 91                    3926 	sub	a, c
      000F98 CB 7B                 3927 	bit	7, e
      000F9A 28 07                 3928 	jr	Z, 00411$
      000F9C CB 7A                 3929 	bit	7, d
      000F9E 20 08                 3930 	jr	NZ, 00412$
      000FA0 BF                    3931 	cp	a, a
      000FA1 18 05                 3932 	jr	00412$
      000FA3                       3933 00411$:
      000FA3 CB 7A                 3934 	bit	7, d
      000FA5 28 01                 3935 	jr	Z, 00412$
      000FA7 37                    3936 	scf
      000FA8                       3937 00412$:
      000FA8 30 07                 3938 	jr	NC, 00107$
      000FAA 0D                    3939 	dec	c
      000FAB F8 06                 3940 	ldhl	sp,	#6
      000FAD 2A                    3941 	ld	a,	(hl+)
      000FAE 66                    3942 	ld	h, (hl)
      000FAF 6F                    3943 	ld	l, a
      000FB0 71                    3944 	ld	(hl), c
      000FB1                       3945 00107$:
      000FB1 F8 06                 3946 	ldhl	sp,#6
      000FB3 2A                    3947 	ld	a, (hl+)
      000FB4 5F                    3948 	ld	e, a
      000FB5 56                    3949 	ld	d, (hl)
      000FB6 1A                    3950 	ld	a, (de)
      000FB7 4F                    3951 	ld	c, a
                                   3952 ;src/main.c:454: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      000FB8 CB 79                 3953 	bit	7, c
      000FBA 28 05                 3954 	jr	Z, 00112$
      000FBC 0C                    3955 	inc	c
      000FBD 3A                    3956 	ld	a, (hl-)
      000FBE 6E                    3957 	ld	l, (hl)
      000FBF 67                    3958 	ld	h, a
      000FC0 71                    3959 	ld	(hl), c
      000FC1                       3960 00112$:
                                   3961 ;src/main.c:457: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FC1 F8 04                 3962 	ldhl	sp,#4
      000FC3 2A                    3963 	ld	a, (hl+)
      000FC4 5F                    3964 	ld	e, a
      000FC5 56                    3965 	ld	d, (hl)
      000FC6 1A                    3966 	ld	a, (de)
      000FC7 4F                    3967 	ld	c, a
      000FC8 13                    3968 	inc	de
      000FC9 1A                    3969 	ld	a, (de)
      000FCA 47                    3970 	ld	b, a
      000FCB 79                    3971 	ld	a, c
      000FCC 21r94r00              3972 	ld	hl, #_playerDrawY
      000FCF 5E                    3973 	ld	e, (hl)
      000FD0 93                    3974 	sub	a, e
      000FD1 6F                    3975 	ld	l, a
                                   3976 ;	spillPairReg hl
                                   3977 ;	spillPairReg hl
                                   3978 ;src/main.c:347: if (value >= 0) return value;
      000FD2 CB 7D                 3979 	bit	7, l
      000FD4 20 06                 3980 	jr	NZ, 00173$
      000FD6 7D                    3981 	ld	a, l
      000FD7 F8 0E                 3982 	ldhl	sp,	#14
      000FD9 77                    3983 	ld	(hl), a
      000FDA 18 06                 3984 	jr	00175$
      000FDC                       3985 00173$:
                                   3986 ;src/main.c:348: else return - value;
      000FDC AF                    3987 	xor	a, a
      000FDD 95                    3988 	sub	a, l
      000FDE 5F                    3989 	ld	e, a
      000FDF F8 0E                 3990 	ldhl	sp,	#14
      000FE1 73                    3991 	ld	(hl), e
                                   3992 ;src/main.c:457: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FE2                       3993 00175$:
                                   3994 ;src/main.c:459: enemies[i].ySpeed += enemies[i].accel;
      000FE2 F8 02                 3995 	ldhl	sp,#2
      000FE4 2A                    3996 	ld	a, (hl+)
      000FE5 5F                    3997 	ld	e, a
      000FE6 56                    3998 	ld	d, (hl)
      000FE7 21 0F 00              3999 	ld	hl, #0x000f
      000FEA 19                    4000 	add	hl, de
      000FEB E5                    4001 	push	hl
      000FEC 7D                    4002 	ld	a, l
      000FED F8 0A                 4003 	ldhl	sp,	#10
      000FEF 77                    4004 	ld	(hl), a
      000FF0 E1                    4005 	pop	hl
      000FF1 7C                    4006 	ld	a, h
      000FF2 F8 09                 4007 	ldhl	sp,	#9
                                   4008 ;src/main.c:466: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      000FF4 32                    4009 	ld	(hl-), a
      000FF5 2A                    4010 	ld	a, (hl+)
      000FF6 5F                    4011 	ld	e, a
      000FF7 2A                    4012 	ld	a, (hl+)
      000FF8 23                    4013 	inc	hl
      000FF9 57                    4014 	ld	d, a
      000FFA 1A                    4015 	ld	a, (de)
      000FFB 77                    4016 	ld	(hl), a
                                   4017 ;src/main.c:457: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FFC F8 0E                 4018 	ldhl	sp,	#14
      000FFE 5E                    4019 	ld	e, (hl)
      000FFF 3E 08                 4020 	ld	a,#0x08
      001001 57                    4021 	ld	d,a
      001002 96                    4022 	sub	a, (hl)
      001003 CB 7B                 4023 	bit	7, e
      001005 28 07                 4024 	jr	Z, 00413$
      001007 CB 7A                 4025 	bit	7, d
      001009 20 08                 4026 	jr	NZ, 00414$
      00100B BF                    4027 	cp	a, a
      00100C 18 05                 4028 	jr	00414$
      00100E                       4029 00413$:
      00100E CB 7A                 4030 	bit	7, d
      001010 28 01                 4031 	jr	Z, 00414$
      001012 37                    4032 	scf
      001013                       4033 00414$:
      001013 30 44                 4034 	jr	NC, 00121$
                                   4035 ;src/main.c:458: if (enemies[i].y < playerDrawY) {
      001015 FAr94r00              4036 	ld	a, (#_playerDrawY)
      001018 F8 0C                 4037 	ldhl	sp,	#12
      00101A 22                    4038 	ld	(hl+), a
                                   4039 ;src/main.c:446: enemies[i].xSpeed += enemies[i].accel;
      00101B AF                    4040 	xor	a, a
      00101C 22                    4041 	ld	(hl+), a
      00101D D1                    4042 	pop	de
      00101E D5                    4043 	push	de
      00101F 1A                    4044 	ld	a, (de)
                                   4045 ;src/main.c:458: if (enemies[i].y < playerDrawY) {
      001020 32                    4046 	ld	(hl-), a
      001021 2B                    4047 	dec	hl
      001022 79                    4048 	ld	a, c
      001023 96                    4049 	sub	a, (hl)
      001024 23                    4050 	inc	hl
      001025 78                    4051 	ld	a, b
      001026 9E                    4052 	sbc	a, (hl)
      001027 78                    4053 	ld	a, b
      001028 57                    4054 	ld	d, a
      001029 CB 7E                 4055 	bit	7, (hl)
      00102B 28 07                 4056 	jr	Z, 00415$
      00102D CB 7A                 4057 	bit	7, d
      00102F 20 08                 4058 	jr	NZ, 00416$
      001031 BF                    4059 	cp	a, a
      001032 18 05                 4060 	jr	00416$
      001034                       4061 00415$:
      001034 CB 7A                 4062 	bit	7, d
      001036 28 01                 4063 	jr	Z, 00416$
      001038 37                    4064 	scf
      001039                       4065 00416$:
      001039 30 0F                 4066 	jr	NC, 00114$
                                   4067 ;src/main.c:459: enemies[i].ySpeed += enemies[i].accel;
      00103B F8 0B                 4068 	ldhl	sp,	#11
      00103D 7E                    4069 	ld	a, (hl)
      00103E F8 0E                 4070 	ldhl	sp,	#14
      001040 86                    4071 	add	a, (hl)
      001041 4F                    4072 	ld	c, a
      001042 F8 08                 4073 	ldhl	sp,	#8
      001044 2A                    4074 	ld	a,	(hl+)
      001045 66                    4075 	ld	h, (hl)
      001046 6F                    4076 	ld	l, a
      001047 71                    4077 	ld	(hl), c
      001048 18 41                 4078 	jr	00122$
      00104A                       4079 00114$:
                                   4080 ;src/main.c:462: enemies[i].ySpeed -= enemies[i].accel;
      00104A F8 0B                 4081 	ldhl	sp,	#11
      00104C 7E                    4082 	ld	a, (hl)
      00104D F8 0E                 4083 	ldhl	sp,	#14
      00104F 96                    4084 	sub	a, (hl)
      001050 4F                    4085 	ld	c, a
      001051 F8 08                 4086 	ldhl	sp,	#8
      001053 2A                    4087 	ld	a,	(hl+)
      001054 66                    4088 	ld	h, (hl)
      001055 6F                    4089 	ld	l, a
      001056 71                    4090 	ld	(hl), c
      001057 18 32                 4091 	jr	00122$
      001059                       4092 00121$:
                                   4093 ;src/main.c:466: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001059 F8 0B                 4094 	ldhl	sp,	#11
      00105B 5E                    4095 	ld	e, (hl)
      00105C AF                    4096 	xor	a, a
      00105D 57                    4097 	ld	d, a
      00105E 96                    4098 	sub	a, (hl)
      00105F CB 7B                 4099 	bit	7, e
      001061 28 07                 4100 	jr	Z, 00417$
      001063 CB 7A                 4101 	bit	7, d
      001065 20 08                 4102 	jr	NZ, 00418$
      001067 BF                    4103 	cp	a, a
      001068 18 05                 4104 	jr	00418$
      00106A                       4105 00417$:
      00106A CB 7A                 4106 	bit	7, d
      00106C 28 01                 4107 	jr	Z, 00418$
      00106E 37                    4108 	scf
      00106F                       4109 00418$:
      00106F 30 0A                 4110 	jr	NC, 00117$
      001071 F8 0B                 4111 	ldhl	sp,	#11
      001073 4E                    4112 	ld	c, (hl)
      001074 0D                    4113 	dec	c
      001075 F8 08                 4114 	ldhl	sp,	#8
      001077 2A                    4115 	ld	a,	(hl+)
      001078 66                    4116 	ld	h, (hl)
      001079 6F                    4117 	ld	l, a
      00107A 71                    4118 	ld	(hl), c
      00107B                       4119 00117$:
      00107B F8 08                 4120 	ldhl	sp,#8
      00107D 2A                    4121 	ld	a, (hl+)
      00107E 5F                    4122 	ld	e, a
      00107F 56                    4123 	ld	d, (hl)
      001080 1A                    4124 	ld	a, (de)
      001081 4F                    4125 	ld	c, a
                                   4126 ;src/main.c:467: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      001082 CB 79                 4127 	bit	7, c
      001084 28 05                 4128 	jr	Z, 00122$
      001086 0C                    4129 	inc	c
      001087 3A                    4130 	ld	a, (hl-)
      001088 6E                    4131 	ld	l, (hl)
      001089 67                    4132 	ld	h, a
      00108A 71                    4133 	ld	(hl), c
      00108B                       4134 00122$:
                                   4135 ;src/main.c:471: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      00108B F8 02                 4136 	ldhl	sp,#2
      00108D 2A                    4137 	ld	a, (hl+)
      00108E 5F                    4138 	ld	e, a
      00108F 56                    4139 	ld	d, (hl)
      001090 21 0C 00              4140 	ld	hl, #0x000c
      001093 19                    4141 	add	hl, de
      001094 E5                    4142 	push	hl
      001095 7D                    4143 	ld	a, l
      001096 F8 0C                 4144 	ldhl	sp,	#12
      001098 77                    4145 	ld	(hl), a
      001099 E1                    4146 	pop	hl
      00109A 7C                    4147 	ld	a, h
      00109B F8 0B                 4148 	ldhl	sp,	#11
      00109D 32                    4149 	ld	(hl-), a
      00109E 2A                    4150 	ld	a, (hl+)
      00109F 5F                    4151 	ld	e, a
      0010A0 2A                    4152 	ld	a, (hl+)
      0010A1 57                    4153 	ld	d, a
      0010A2 1A                    4154 	ld	a, (de)
      0010A3 4F                    4155 	ld	c, a
      0010A4 22                    4156 	ld	(hl+), a
      0010A5 AF                    4157 	xor	a, a
      0010A6 91                    4158 	sub	a, c
      0010A7 77                    4159 	ld	(hl), a
      0010A8 F8 06                 4160 	ldhl	sp,#6
      0010AA 2A                    4161 	ld	a, (hl+)
      0010AB 5F                    4162 	ld	e, a
      0010AC 56                    4163 	ld	d, (hl)
      0010AD 1A                    4164 	ld	a, (de)
      0010AE F8 0E                 4165 	ldhl	sp,	#14
                                   4166 ;src/main.c:328: return (value < min) ? min : (value > max) ? max : value;
      0010B0 32                    4167 	ld	(hl-), a
      0010B1 2A                    4168 	ld	a, (hl+)
      0010B2 5F                    4169 	ld	e, a
      0010B3 56                    4170 	ld	d, (hl)
      0010B4 3A                    4171 	ld	a, (hl-)
      0010B5 96                    4172 	sub	a, (hl)
      0010B6 CB 7B                 4173 	bit	7, e
      0010B8 28 07                 4174 	jr	Z, 00419$
      0010BA CB 7A                 4175 	bit	7, d
      0010BC 20 08                 4176 	jr	NZ, 00420$
      0010BE BF                    4177 	cp	a, a
      0010BF 18 05                 4178 	jr	00420$
      0010C1                       4179 00419$:
      0010C1 CB 7A                 4180 	bit	7, d
      0010C3 28 01                 4181 	jr	Z, 00420$
      0010C5 37                    4182 	scf
      0010C6                       4183 00420$:
      0010C6 30 06                 4184 	jr	NC, 00202$
      0010C8 F8 0D                 4185 	ldhl	sp,	#13
      0010CA 2A                    4186 	ld	a, (hl+)
      0010CB 77                    4187 	ld	(hl), a
      0010CC 18 26                 4188 	jr	00203$
      0010CE                       4189 00202$:
      0010CE F8 0E                 4190 	ldhl	sp,	#14
      0010D0 3A                    4191 	ld	a, (hl-)
      0010D1 2B                    4192 	dec	hl
      0010D2 5F                    4193 	ld	e, a
      0010D3 56                    4194 	ld	d, (hl)
      0010D4 2A                    4195 	ld	a, (hl+)
      0010D5 23                    4196 	inc	hl
      0010D6 96                    4197 	sub	a, (hl)
      0010D7 CB 7B                 4198 	bit	7, e
      0010D9 28 07                 4199 	jr	Z, 00421$
      0010DB CB 7A                 4200 	bit	7, d
      0010DD 20 08                 4201 	jr	NZ, 00422$
      0010DF BF                    4202 	cp	a, a
      0010E0 18 05                 4203 	jr	00422$
      0010E2                       4204 00421$:
      0010E2 CB 7A                 4205 	bit	7, d
      0010E4 28 01                 4206 	jr	Z, 00422$
      0010E6 37                    4207 	scf
      0010E7                       4208 00422$:
      0010E7 30 05                 4209 	jr	NC, 00204$
      0010E9 F8 0C                 4210 	ldhl	sp,	#12
      0010EB 5E                    4211 	ld	e, (hl)
      0010EC 18 03                 4212 	jr	00205$
      0010EE                       4213 00204$:
      0010EE F8 0E                 4214 	ldhl	sp,	#14
      0010F0 5E                    4215 	ld	e, (hl)
      0010F1                       4216 00205$:
      0010F1 F8 0E                 4217 	ldhl	sp,	#14
      0010F3 73                    4218 	ld	(hl), e
      0010F4                       4219 00203$:
      0010F4 F8 0E                 4220 	ldhl	sp,	#14
      0010F6 4E                    4221 	ld	c, (hl)
                                   4222 ;src/main.c:471: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0010F7 F8 06                 4223 	ldhl	sp,	#6
      0010F9 2A                    4224 	ld	a,	(hl+)
      0010FA 66                    4225 	ld	h, (hl)
      0010FB 6F                    4226 	ld	l, a
      0010FC 71                    4227 	ld	(hl), c
                                   4228 ;src/main.c:472: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      0010FD F8 0A                 4229 	ldhl	sp,#10
      0010FF 2A                    4230 	ld	a, (hl+)
      001100 5F                    4231 	ld	e, a
      001101 3A                    4232 	ld	a, (hl-)
      001102 2B                    4233 	dec	hl
      001103 2B                    4234 	dec	hl
      001104 57                    4235 	ld	d, a
      001105 1A                    4236 	ld	a, (de)
      001106 47                    4237 	ld	b, a
      001107 48                    4238 	ld	c, b
      001108 AF                    4239 	xor	a, a
      001109 90                    4240 	sub	a, b
      00110A 47                    4241 	ld	b, a
      00110B 2A                    4242 	ld	a, (hl+)
      00110C 5F                    4243 	ld	e, a
      00110D 56                    4244 	ld	d, (hl)
      00110E 1A                    4245 	ld	a, (de)
      00110F 6F                    4246 	ld	l, a
                                   4247 ;	spillPairReg hl
                                   4248 ;	spillPairReg hl
                                   4249 ;src/main.c:328: return (value < min) ? min : (value > max) ? max : value;
      001110 58                    4250 	ld	e, b
      001111 7D                    4251 	ld	a,l
      001112 57                    4252 	ld	d,a
      001113 90                    4253 	sub	a, b
      001114 CB 7B                 4254 	bit	7, e
      001116 28 07                 4255 	jr	Z, 00423$
      001118 CB 7A                 4256 	bit	7, d
      00111A 20 08                 4257 	jr	NZ, 00424$
      00111C BF                    4258 	cp	a, a
      00111D 18 05                 4259 	jr	00424$
      00111F                       4260 00423$:
      00111F CB 7A                 4261 	bit	7, d
      001121 28 01                 4262 	jr	Z, 00424$
      001123 37                    4263 	scf
      001124                       4264 00424$:
      001124 30 03                 4265 	jr	NC, 00206$
      001126 48                    4266 	ld	c, b
      001127 18 17                 4267 	jr	00207$
      001129                       4268 00206$:
      001129 5D                    4269 	ld	e, l
      00112A 79                    4270 	ld	a,c
      00112B 57                    4271 	ld	d,a
      00112C 95                    4272 	sub	a, l
      00112D CB 7B                 4273 	bit	7, e
      00112F 28 07                 4274 	jr	Z, 00425$
      001131 CB 7A                 4275 	bit	7, d
      001133 20 08                 4276 	jr	NZ, 00426$
      001135 BF                    4277 	cp	a, a
      001136 18 05                 4278 	jr	00426$
      001138                       4279 00425$:
      001138 CB 7A                 4280 	bit	7, d
      00113A 28 01                 4281 	jr	Z, 00426$
      00113C 37                    4282 	scf
      00113D                       4283 00426$:
      00113D 38 01                 4284 	jr	C, 00209$
      00113F 4D                    4285 	ld	c, l
      001140                       4286 00209$:
      001140                       4287 00207$:
                                   4288 ;src/main.c:472: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001140 F8 08                 4289 	ldhl	sp,	#8
      001142 2A                    4290 	ld	a,	(hl+)
      001143 66                    4291 	ld	h, (hl)
      001144 6F                    4292 	ld	l, a
      001145 71                    4293 	ld	(hl), c
                                   4294 ;src/main.c:475: enemies[i].xReserve += enemies[i].xSpeed;
      001146 F8 02                 4295 	ldhl	sp,#2
      001148 2A                    4296 	ld	a, (hl+)
      001149 5F                    4297 	ld	e, a
      00114A 56                    4298 	ld	d, (hl)
      00114B 21 04 00              4299 	ld	hl, #0x0004
      00114E 19                    4300 	add	hl, de
      00114F E5                    4301 	push	hl
      001150 7D                    4302 	ld	a, l
      001151 F8 0F                 4303 	ldhl	sp,	#15
      001153 77                    4304 	ld	(hl), a
      001154 E1                    4305 	pop	hl
      001155 7C                    4306 	ld	a, h
      001156 F8 0E                 4307 	ldhl	sp,	#14
      001158 32                    4308 	ld	(hl-), a
      001159 2A                    4309 	ld	a, (hl+)
      00115A 5F                    4310 	ld	e, a
      00115B 56                    4311 	ld	d, (hl)
      00115C 1A                    4312 	ld	a, (de)
      00115D 47                    4313 	ld	b, a
      00115E F8 06                 4314 	ldhl	sp,#6
      001160 2A                    4315 	ld	a, (hl+)
      001161 5F                    4316 	ld	e, a
      001162 56                    4317 	ld	d, (hl)
      001163 1A                    4318 	ld	a, (de)
      001164 80                    4319 	add	a, b
      001165 47                    4320 	ld	b, a
      001166 F8 0D                 4321 	ldhl	sp,	#13
      001168 2A                    4322 	ld	a,	(hl+)
      001169 66                    4323 	ld	h, (hl)
      00116A 6F                    4324 	ld	l, a
      00116B 70                    4325 	ld	(hl), b
                                   4326 ;src/main.c:476: enemies[i].yReserve += enemies[i].ySpeed;
      00116C F8 02                 4327 	ldhl	sp,#2
      00116E 2A                    4328 	ld	a, (hl+)
      00116F 5F                    4329 	ld	e, a
      001170 56                    4330 	ld	d, (hl)
      001171 21 05 00              4331 	ld	hl, #0x0005
      001174 19                    4332 	add	hl, de
      001175 E5                    4333 	push	hl
      001176 7D                    4334 	ld	a, l
      001177 F8 0C                 4335 	ldhl	sp,	#12
      001179 77                    4336 	ld	(hl), a
      00117A E1                    4337 	pop	hl
      00117B 7C                    4338 	ld	a, h
      00117C F8 0B                 4339 	ldhl	sp,	#11
      00117E 32                    4340 	ld	(hl-), a
      00117F 2A                    4341 	ld	a, (hl+)
      001180 5F                    4342 	ld	e, a
      001181 56                    4343 	ld	d, (hl)
      001182 1A                    4344 	ld	a, (de)
      001183 81                    4345 	add	a, c
      001184 4F                    4346 	ld	c, a
      001185 3A                    4347 	ld	a, (hl-)
      001186 6E                    4348 	ld	l, (hl)
      001187 67                    4349 	ld	h, a
      001188 71                    4350 	ld	(hl), c
                                   4351 ;src/main.c:480: if (enemies[i].xReserve >> 3 > 0) {
      001189 F8 0D                 4352 	ldhl	sp,#13
      00118B 2A                    4353 	ld	a, (hl+)
      00118C 5F                    4354 	ld	e, a
      00118D 3A                    4355 	ld	a, (hl-)
      00118E 2B                    4356 	dec	hl
      00118F 57                    4357 	ld	d, a
      001190 1A                    4358 	ld	a, (de)
      001191 77                    4359 	ld	(hl), a
      001192 CB 28                 4360 	sra	b
      001194 CB 28                 4361 	sra	b
      001196 CB 28                 4362 	sra	b
      001198 58                    4363 	ld	e, b
      001199 AF                    4364 	xor	a, a
      00119A 57                    4365 	ld	d, a
      00119B 90                    4366 	sub	a, b
      00119C CB 7B                 4367 	bit	7, e
      00119E 28 07                 4368 	jr	Z, 00427$
      0011A0 CB 7A                 4369 	bit	7, d
      0011A2 20 08                 4370 	jr	NZ, 00428$
      0011A4 BF                    4371 	cp	a, a
      0011A5 18 05                 4372 	jr	00428$
      0011A7                       4373 00427$:
      0011A7 CB 7A                 4374 	bit	7, d
      0011A9 28 01                 4375 	jr	Z, 00428$
      0011AB 37                    4376 	scf
      0011AC                       4377 00428$:
      0011AC 30 3F                 4378 	jr	NC, 00126$
                                   4379 ;src/main.c:481: int8_t xMovement = enemies[i].xReserve >> 3;
      0011AE F8 0C                 4380 	ldhl	sp,	#12
      0011B0 7E                    4381 	ld	a, (hl)
      0011B1 CB 2F                 4382 	sra	a
      0011B3 CB 2F                 4383 	sra	a
      0011B5 CB 2F                 4384 	sra	a
      0011B7 77                    4385 	ld	(hl), a
                                   4386 ;src/main.c:482: enemies[i].x += xMovement;
      0011B8 F8 02                 4387 	ldhl	sp,#2
      0011BA 2A                    4388 	ld	a, (hl+)
      0011BB 5F                    4389 	ld	e, a
      0011BC 56                    4390 	ld	d, (hl)
      0011BD 1A                    4391 	ld	a, (de)
      0011BE 4F                    4392 	ld	c, a
      0011BF 13                    4393 	inc	de
      0011C0 1A                    4394 	ld	a, (de)
      0011C1 47                    4395 	ld	b, a
      0011C2 F8 0C                 4396 	ldhl	sp,	#12
      0011C4 7E                    4397 	ld	a, (hl)
      0011C5 5F                    4398 	ld	e, a
      0011C6 07                    4399 	rlca
      0011C7 9F                    4400 	sbc	a, a
      0011C8 57                    4401 	ld	d, a
      0011C9 69                    4402 	ld	l, c
                                   4403 ;	spillPairReg hl
                                   4404 ;	spillPairReg hl
      0011CA 60                    4405 	ld	h, b
                                   4406 ;	spillPairReg hl
                                   4407 ;	spillPairReg hl
      0011CB 19                    4408 	add	hl, de
      0011CC 4D                    4409 	ld	c, l
      0011CD 44                    4410 	ld	b, h
      0011CE F8 02                 4411 	ldhl	sp,	#2
      0011D0 2A                    4412 	ld	a,	(hl+)
      0011D1 66                    4413 	ld	h, (hl)
      0011D2 6F                    4414 	ld	l, a
      0011D3 79                    4415 	ld	a, c
      0011D4 22                    4416 	ld	(hl+), a
      0011D5 70                    4417 	ld	(hl), b
                                   4418 ;src/main.c:483: enemies[i].xReserve -=  xMovement << 3;
      0011D6 F8 0D                 4419 	ldhl	sp,#13
      0011D8 2A                    4420 	ld	a, (hl+)
      0011D9 5F                    4421 	ld	e, a
      0011DA 3A                    4422 	ld	a, (hl-)
      0011DB 2B                    4423 	dec	hl
      0011DC 57                    4424 	ld	d, a
      0011DD 1A                    4425 	ld	a, (de)
      0011DE F5                    4426 	push	af
      0011DF 2A                    4427 	ld	a, (hl+)
      0011E0 87                    4428 	add	a, a
      0011E1 87                    4429 	add	a, a
      0011E2 87                    4430 	add	a, a
      0011E3 4F                    4431 	ld	c, a
      0011E4 F1                    4432 	pop	af
      0011E5 91                    4433 	sub	a, c
      0011E6 4F                    4434 	ld	c, a
      0011E7 2A                    4435 	ld	a,	(hl+)
      0011E8 66                    4436 	ld	h, (hl)
      0011E9 6F                    4437 	ld	l, a
      0011EA 71                    4438 	ld	(hl), c
      0011EB 18 69                 4439 	jr	00127$
      0011ED                       4440 00126$:
                                   4441 ;src/main.c:486: else if ((-enemies[i].xReserve) >> 3 > 0){
      0011ED F8 0C                 4442 	ldhl	sp,	#12
      0011EF 7E                    4443 	ld	a, (hl)
      0011F0 4F                    4444 	ld	c, a
      0011F1 07                    4445 	rlca
      0011F2 9F                    4446 	sbc	a, a
      0011F3 47                    4447 	ld	b, a
      0011F4 AF                    4448 	xor	a, a
      0011F5 91                    4449 	sub	a, c
      0011F6 4F                    4450 	ld	c, a
      0011F7 9F                    4451 	sbc	a, a
      0011F8 90                    4452 	sub	a, b
      0011F9 47                    4453 	ld	b, a
      0011FA CB 28                 4454 	sra	b
      0011FC CB 19                 4455 	rr	c
      0011FE CB 28                 4456 	sra	b
      001200 CB 19                 4457 	rr	c
      001202 CB 28                 4458 	sra	b
      001204 CB 19                 4459 	rr	c
      001206 58                    4460 	ld	e, b
      001207 AF                    4461 	xor	a, a
      001208 57                    4462 	ld	d, a
      001209 B9                    4463 	cp	a, c
      00120A 98                    4464 	sbc	a, b
      00120B CB 7B                 4465 	bit	7, e
      00120D 28 07                 4466 	jr	Z, 00429$
      00120F CB 7A                 4467 	bit	7, d
      001211 20 08                 4468 	jr	NZ, 00430$
      001213 BF                    4469 	cp	a, a
      001214 18 05                 4470 	jr	00430$
      001216                       4471 00429$:
      001216 CB 7A                 4472 	bit	7, d
      001218 28 01                 4473 	jr	Z, 00430$
      00121A 37                    4474 	scf
      00121B                       4475 00430$:
      00121B 30 39                 4476 	jr	NC, 00127$
                                   4477 ;src/main.c:487: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      00121D AF                    4478 	xor	a, a
      00121E 91                    4479 	sub	a, c
      00121F 4F                    4480 	ld	c, a
      001220 F8 0C                 4481 	ldhl	sp,	#12
      001222 71                    4482 	ld	(hl), c
                                   4483 ;src/main.c:488: enemies[i].x += xMovement;
      001223 F8 02                 4484 	ldhl	sp,#2
      001225 2A                    4485 	ld	a, (hl+)
      001226 5F                    4486 	ld	e, a
      001227 56                    4487 	ld	d, (hl)
      001228 1A                    4488 	ld	a, (de)
      001229 4F                    4489 	ld	c, a
      00122A 13                    4490 	inc	de
      00122B 1A                    4491 	ld	a, (de)
      00122C 47                    4492 	ld	b, a
      00122D F8 0C                 4493 	ldhl	sp,	#12
      00122F 7E                    4494 	ld	a, (hl)
      001230 5F                    4495 	ld	e, a
      001231 07                    4496 	rlca
      001232 9F                    4497 	sbc	a, a
      001233 57                    4498 	ld	d, a
      001234 69                    4499 	ld	l, c
                                   4500 ;	spillPairReg hl
                                   4501 ;	spillPairReg hl
      001235 60                    4502 	ld	h, b
                                   4503 ;	spillPairReg hl
                                   4504 ;	spillPairReg hl
      001236 19                    4505 	add	hl, de
      001237 4D                    4506 	ld	c, l
      001238 44                    4507 	ld	b, h
      001239 F8 02                 4508 	ldhl	sp,	#2
      00123B 2A                    4509 	ld	a,	(hl+)
      00123C 66                    4510 	ld	h, (hl)
      00123D 6F                    4511 	ld	l, a
      00123E 79                    4512 	ld	a, c
      00123F 22                    4513 	ld	(hl+), a
      001240 70                    4514 	ld	(hl), b
                                   4515 ;src/main.c:489: enemies[i].xReserve +=  (-xMovement) << 3;
      001241 F8 0D                 4516 	ldhl	sp,#13
      001243 2A                    4517 	ld	a, (hl+)
      001244 5F                    4518 	ld	e, a
      001245 3A                    4519 	ld	a, (hl-)
      001246 2B                    4520 	dec	hl
      001247 57                    4521 	ld	d, a
      001248 1A                    4522 	ld	a, (de)
      001249 4F                    4523 	ld	c, a
      00124A AF                    4524 	xor	a, a
      00124B 96                    4525 	sub	a, (hl)
      00124C 23                    4526 	inc	hl
      00124D 87                    4527 	add	a, a
      00124E 87                    4528 	add	a, a
      00124F 87                    4529 	add	a, a
      001250 81                    4530 	add	a, c
      001251 4F                    4531 	ld	c, a
      001252 2A                    4532 	ld	a,	(hl+)
      001253 66                    4533 	ld	h, (hl)
      001254 6F                    4534 	ld	l, a
      001255 71                    4535 	ld	(hl), c
      001256                       4536 00127$:
                                   4537 ;src/main.c:476: enemies[i].yReserve += enemies[i].ySpeed;
      001256 F8 0A                 4538 	ldhl	sp,#10
      001258 2A                    4539 	ld	a, (hl+)
      001259 5F                    4540 	ld	e, a
      00125A 56                    4541 	ld	d, (hl)
      00125B 1A                    4542 	ld	a, (de)
      00125C 4F                    4543 	ld	c, a
                                   4544 ;src/main.c:492: if (enemies[i].yReserve >> 3 > 0) {
      00125D 41                    4545 	ld	b, c
      00125E CB 28                 4546 	sra	b
      001260 CB 28                 4547 	sra	b
      001262 CB 28                 4548 	sra	b
      001264 58                    4549 	ld	e, b
      001265 AF                    4550 	xor	a, a
      001266 57                    4551 	ld	d, a
      001267 90                    4552 	sub	a, b
      001268 CB 7B                 4553 	bit	7, e
      00126A 28 07                 4554 	jr	Z, 00431$
      00126C CB 7A                 4555 	bit	7, d
      00126E 20 08                 4556 	jr	NZ, 00432$
      001270 BF                    4557 	cp	a, a
      001271 18 05                 4558 	jr	00432$
      001273                       4559 00431$:
      001273 CB 7A                 4560 	bit	7, d
      001275 28 01                 4561 	jr	Z, 00432$
      001277 37                    4562 	scf
      001278                       4563 00432$:
      001278 30 3A                 4564 	jr	NC, 00131$
                                   4565 ;src/main.c:493: int8_t yMovement = enemies[i].yReserve >> 3;
      00127A F8 0E                 4566 	ldhl	sp,	#14
      00127C 70                    4567 	ld	(hl), b
                                   4568 ;src/main.c:494: enemies[i].y += yMovement;
      00127D F8 04                 4569 	ldhl	sp,#4
      00127F 2A                    4570 	ld	a, (hl+)
      001280 5F                    4571 	ld	e, a
      001281 56                    4572 	ld	d, (hl)
      001282 1A                    4573 	ld	a, (de)
      001283 4F                    4574 	ld	c, a
      001284 13                    4575 	inc	de
      001285 1A                    4576 	ld	a, (de)
      001286 47                    4577 	ld	b, a
      001287 F8 0E                 4578 	ldhl	sp,	#14
      001289 7E                    4579 	ld	a, (hl)
      00128A 5F                    4580 	ld	e, a
      00128B 07                    4581 	rlca
      00128C 9F                    4582 	sbc	a, a
      00128D 57                    4583 	ld	d, a
      00128E 69                    4584 	ld	l, c
                                   4585 ;	spillPairReg hl
                                   4586 ;	spillPairReg hl
      00128F 60                    4587 	ld	h, b
                                   4588 ;	spillPairReg hl
                                   4589 ;	spillPairReg hl
      001290 19                    4590 	add	hl, de
      001291 4D                    4591 	ld	c, l
      001292 44                    4592 	ld	b, h
      001293 F8 04                 4593 	ldhl	sp,	#4
      001295 2A                    4594 	ld	a,	(hl+)
      001296 66                    4595 	ld	h, (hl)
      001297 6F                    4596 	ld	l, a
      001298 79                    4597 	ld	a, c
      001299 22                    4598 	ld	(hl+), a
      00129A 70                    4599 	ld	(hl), b
                                   4600 ;src/main.c:495: enemies[i].yReserve -=  yMovement << 3;
      00129B F8 0A                 4601 	ldhl	sp,#10
      00129D 2A                    4602 	ld	a, (hl+)
      00129E 5F                    4603 	ld	e, a
      00129F 56                    4604 	ld	d, (hl)
      0012A0 1A                    4605 	ld	a, (de)
      0012A1 F5                    4606 	push	af
      0012A2 F8 10                 4607 	ldhl	sp,	#16
      0012A4 7E                    4608 	ld	a, (hl)
      0012A5 87                    4609 	add	a, a
      0012A6 87                    4610 	add	a, a
      0012A7 87                    4611 	add	a, a
      0012A8 4F                    4612 	ld	c, a
      0012A9 F1                    4613 	pop	af
      0012AA 91                    4614 	sub	a, c
      0012AB 4F                    4615 	ld	c, a
      0012AC F8 0A                 4616 	ldhl	sp,	#10
      0012AE 2A                    4617 	ld	a,	(hl+)
      0012AF 66                    4618 	ld	h, (hl)
      0012B0 6F                    4619 	ld	l, a
      0012B1 71                    4620 	ld	(hl), c
      0012B2 18 67                 4621 	jr	00133$
      0012B4                       4622 00131$:
                                   4623 ;src/main.c:497: else if ((-enemies[i].yReserve) >> 3 > 0){
      0012B4 79                    4624 	ld	a, c
      0012B5 07                    4625 	rlca
      0012B6 9F                    4626 	sbc	a, a
      0012B7 47                    4627 	ld	b, a
      0012B8 AF                    4628 	xor	a, a
      0012B9 91                    4629 	sub	a, c
      0012BA 4F                    4630 	ld	c, a
      0012BB 9F                    4631 	sbc	a, a
      0012BC 90                    4632 	sub	a, b
      0012BD 47                    4633 	ld	b, a
      0012BE CB 28                 4634 	sra	b
      0012C0 CB 19                 4635 	rr	c
      0012C2 CB 28                 4636 	sra	b
      0012C4 CB 19                 4637 	rr	c
      0012C6 CB 28                 4638 	sra	b
      0012C8 CB 19                 4639 	rr	c
      0012CA 58                    4640 	ld	e, b
      0012CB AF                    4641 	xor	a, a
      0012CC 57                    4642 	ld	d, a
      0012CD B9                    4643 	cp	a, c
      0012CE 98                    4644 	sbc	a, b
      0012CF CB 7B                 4645 	bit	7, e
      0012D1 28 07                 4646 	jr	Z, 00433$
      0012D3 CB 7A                 4647 	bit	7, d
      0012D5 20 08                 4648 	jr	NZ, 00434$
      0012D7 BF                    4649 	cp	a, a
      0012D8 18 05                 4650 	jr	00434$
      0012DA                       4651 00433$:
      0012DA CB 7A                 4652 	bit	7, d
      0012DC 28 01                 4653 	jr	Z, 00434$
      0012DE 37                    4654 	scf
      0012DF                       4655 00434$:
      0012DF 30 3A                 4656 	jr	NC, 00133$
                                   4657 ;src/main.c:498: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      0012E1 AF                    4658 	xor	a, a
      0012E2 91                    4659 	sub	a, c
      0012E3 4F                    4660 	ld	c, a
      0012E4 F8 0E                 4661 	ldhl	sp,	#14
      0012E6 71                    4662 	ld	(hl), c
                                   4663 ;src/main.c:499: enemies[i].y += yMovement;
      0012E7 F8 04                 4664 	ldhl	sp,#4
      0012E9 2A                    4665 	ld	a, (hl+)
      0012EA 5F                    4666 	ld	e, a
      0012EB 56                    4667 	ld	d, (hl)
      0012EC 1A                    4668 	ld	a, (de)
      0012ED 4F                    4669 	ld	c, a
      0012EE 13                    4670 	inc	de
      0012EF 1A                    4671 	ld	a, (de)
      0012F0 47                    4672 	ld	b, a
      0012F1 F8 0E                 4673 	ldhl	sp,	#14
      0012F3 7E                    4674 	ld	a, (hl)
      0012F4 5F                    4675 	ld	e, a
      0012F5 07                    4676 	rlca
      0012F6 9F                    4677 	sbc	a, a
      0012F7 57                    4678 	ld	d, a
      0012F8 69                    4679 	ld	l, c
      0012F9 60                    4680 	ld	h, b
      0012FA 19                    4681 	add	hl, de
      0012FB 4D                    4682 	ld	c, l
      0012FC 44                    4683 	ld	b, h
      0012FD F8 04                 4684 	ldhl	sp,	#4
      0012FF 2A                    4685 	ld	a,	(hl+)
      001300 66                    4686 	ld	h, (hl)
      001301 6F                    4687 	ld	l, a
      001302 79                    4688 	ld	a, c
      001303 22                    4689 	ld	(hl+), a
      001304 70                    4690 	ld	(hl), b
                                   4691 ;src/main.c:500: enemies[i].yReserve +=  (-yMovement) << 3;
      001305 F8 0A                 4692 	ldhl	sp,#10
      001307 2A                    4693 	ld	a, (hl+)
      001308 5F                    4694 	ld	e, a
      001309 56                    4695 	ld	d, (hl)
      00130A 1A                    4696 	ld	a, (de)
      00130B 4F                    4697 	ld	c, a
      00130C AF                    4698 	xor	a, a
      00130D F8 0E                 4699 	ldhl	sp,	#14
      00130F 96                    4700 	sub	a, (hl)
      001310 87                    4701 	add	a, a
      001311 87                    4702 	add	a, a
      001312 87                    4703 	add	a, a
      001313 81                    4704 	add	a, c
      001314 4F                    4705 	ld	c, a
      001315 F8 0A                 4706 	ldhl	sp,	#10
      001317 2A                    4707 	ld	a,	(hl+)
      001318 66                    4708 	ld	h, (hl)
      001319 6F                    4709 	ld	l, a
      00131A 71                    4710 	ld	(hl), c
      00131B                       4711 00133$:
                                   4712 ;src/main.c:436: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00131B F8 0F                 4713 	ldhl	sp,	#15
      00131D 34                    4714 	inc	(hl)
      00131E C3r75r0E              4715 	jp	00196$
      001321                       4716 00134$:
                                   4717 ;src/main.c:507: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001321 F8 0F                 4718 	ldhl	sp,	#15
      001323 36 00                 4719 	ld	(hl), #0x00
      001325                       4720 00198$:
      001325 21r88r08              4721 	ld	hl, #_ENEMYCOUNT
      001328 4E                    4722 	ld	c, (hl)
      001329 F8 0F                 4723 	ldhl	sp,	#15
      00132B 7E                    4724 	ld	a, (hl)
      00132C 91                    4725 	sub	a, c
      00132D D2rCBr16              4726 	jp	NC, 00200$
                                   4727 ;src/main.c:509: if (enemies[i].alive) {
      001330 4E                    4728 	ld	c, (hl)
      001331 06 00                 4729 	ld	b, #0x00
      001333 69                    4730 	ld	l, c
      001334 60                    4731 	ld	h, b
      001335 29                    4732 	add	hl, hl
      001336 29                    4733 	add	hl, hl
      001337 29                    4734 	add	hl, hl
      001338 29                    4735 	add	hl, hl
      001339 09                    4736 	add	hl, bc
                                   4737 ;src/main.c:525: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      00133A 01r55r00              4738 	ld	bc,#_enemies
      00133D 09                    4739 	add	hl,bc
      00133E E5                    4740 	push	hl
      00133F 7D                    4741 	ld	a, l
      001340 F8 03                 4742 	ldhl	sp,	#3
      001342 77                    4743 	ld	(hl), a
      001343 E1                    4744 	pop	hl
      001344 7C                    4745 	ld	a, h
      001345 F8 02                 4746 	ldhl	sp,	#2
                                   4747 ;src/main.c:509: if (enemies[i].alive) {
      001347 32                    4748 	ld	(hl-), a
      001348 2A                    4749 	ld	a, (hl+)
      001349 5F                    4750 	ld	e, a
      00134A 56                    4751 	ld	d, (hl)
      00134B 21 09 00              4752 	ld	hl, #0x0009
      00134E 19                    4753 	add	hl, de
      00134F E5                    4754 	push	hl
      001350 7D                    4755 	ld	a, l
      001351 F8 05                 4756 	ldhl	sp,	#5
      001353 77                    4757 	ld	(hl), a
      001354 E1                    4758 	pop	hl
      001355 7C                    4759 	ld	a, h
      001356 F8 04                 4760 	ldhl	sp,	#4
      001358 32                    4761 	ld	(hl-), a
      001359 2A                    4762 	ld	a, (hl+)
      00135A 5F                    4763 	ld	e, a
      00135B 56                    4764 	ld	d, (hl)
      00135C 1A                    4765 	ld	a, (de)
      00135D F8 0E                 4766 	ldhl	sp,	#14
      00135F 77                    4767 	ld	(hl), a
      001360 7E                    4768 	ld	a, (hl)
      001361 B7                    4769 	or	a, a
      001362 CAr58r15              4770 	jp	Z, 00157$
                                   4771 ;src/main.c:510: if (enemies[i].visible == 1) {
      001365 F8 01                 4772 	ldhl	sp,#1
      001367 2A                    4773 	ld	a, (hl+)
      001368 5F                    4774 	ld	e, a
      001369 56                    4775 	ld	d, (hl)
      00136A 21 0A 00              4776 	ld	hl, #0x000a
      00136D 19                    4777 	add	hl, de
      00136E E5                    4778 	push	hl
      00136F 7D                    4779 	ld	a, l
      001370 F8 07                 4780 	ldhl	sp,	#7
      001372 77                    4781 	ld	(hl), a
      001373 E1                    4782 	pop	hl
      001374 7C                    4783 	ld	a, h
      001375 F8 06                 4784 	ldhl	sp,	#6
      001377 32                    4785 	ld	(hl-), a
      001378 2A                    4786 	ld	a, (hl+)
      001379 5F                    4787 	ld	e, a
      00137A 2A                    4788 	ld	a, (hl+)
      00137B 57                    4789 	ld	d, a
      00137C 1A                    4790 	ld	a, (de)
      00137D 77                    4791 	ld	(hl), a
                                   4792 ;src/main.c:511: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00137E F8 01                 4793 	ldhl	sp,#1
      001380 2A                    4794 	ld	a, (hl+)
      001381 5F                    4795 	ld	e, a
      001382 56                    4796 	ld	d, (hl)
      001383 1A                    4797 	ld	a, (de)
      001384 F8 08                 4798 	ldhl	sp,	#8
      001386 22                    4799 	ld	(hl+), a
      001387 13                    4800 	inc	de
      001388 1A                    4801 	ld	a, (de)
      001389 77                    4802 	ld	(hl), a
      00138A F8 01                 4803 	ldhl	sp,	#1
      00138C 2A                    4804 	ld	a, (hl+)
      00138D 4F                    4805 	ld	c, a
      00138E 46                    4806 	ld	b, (hl)
      00138F 03                    4807 	inc	bc
      001390 03                    4808 	inc	bc
                                   4809 ;src/main.c:513: set_sprite_tile(10+(i<<1), 0x7f);
      001391 F8 0F                 4810 	ldhl	sp,	#15
      001393 5E                    4811 	ld	e, (hl)
                                   4812 ;src/main.c:511: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      001394 F8 08                 4813 	ldhl	sp,	#8
      001396 2A                    4814 	ld	a, (hl+)
      001397 23                    4815 	inc	hl
      001398 32                    4816 	ld	(hl-), a
      001399 2A                    4817 	ld	a, (hl+)
      00139A 23                    4818 	inc	hl
                                   4819 ;src/main.c:513: set_sprite_tile(10+(i<<1), 0x7f);
      00139B 22                    4820 	ld	(hl+), a
      00139C 7B                    4821 	ld	a, e
      00139D 87                    4822 	add	a, a
                                   4823 ;src/main.c:511: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      00139E 32                    4824 	ld	(hl-), a
      00139F 2A                    4825 	ld	a, (hl+)
      0013A0 23                    4826 	inc	hl
      0013A1 07                    4827 	rlca
      0013A2 E6 01                 4828 	and	a,#0x01
                                   4829 ;src/main.c:513: set_sprite_tile(10+(i<<1), 0x7f);
      0013A4 32                    4830 	ld	(hl-), a
      0013A5 2A                    4831 	ld	a, (hl+)
      0013A6 23                    4832 	inc	hl
      0013A7 C6 0A                 4833 	add	a, #0x0a
      0013A9 77                    4834 	ld	(hl), a
                                   4835 ;src/main.c:510: if (enemies[i].visible == 1) {
      0013AA F8 07                 4836 	ldhl	sp,	#7
      0013AC 7E                    4837 	ld	a, (hl)
      0013AD 3D                    4838 	dec	a
      0013AE 20 74                 4839 	jr	NZ, 00154$
                                   4840 ;src/main.c:511: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013B0 F8 0D                 4841 	ldhl	sp,	#13
      0013B2 7E                    4842 	ld	a, (hl)
      0013B3 B7                    4843 	or	a, a
      0013B4 20 43                 4844 	jr	NZ, 00135$
      0013B6 F8 0A                 4845 	ldhl	sp,	#10
      0013B8 3E AC                 4846 	ld	a, #0xac
      0013BA 96                    4847 	sub	a, (hl)
      0013BB 23                    4848 	inc	hl
      0013BC 3E 00                 4849 	ld	a, #0x00
      0013BE 9E                    4850 	sbc	a, (hl)
      0013BF 3E 00                 4851 	ld	a, #0x00
      0013C1 57                    4852 	ld	d, a
      0013C2 CB 7E                 4853 	bit	7, (hl)
      0013C4 28 07                 4854 	jr	Z, 00437$
      0013C6 CB 7A                 4855 	bit	7, d
      0013C8 20 08                 4856 	jr	NZ, 00438$
      0013CA BF                    4857 	cp	a, a
      0013CB 18 05                 4858 	jr	00438$
      0013CD                       4859 00437$:
      0013CD CB 7A                 4860 	bit	7, d
      0013CF 28 01                 4861 	jr	Z, 00438$
      0013D1 37                    4862 	scf
      0013D2                       4863 00438$:
      0013D2 38 25                 4864 	jr	C, 00135$
      0013D4 69                    4865 	ld	l, c
      0013D5 60                    4866 	ld	h, b
      0013D6 2A                    4867 	ld	a, (hl+)
      0013D7 4F                    4868 	ld	c, a
      0013D8 46                    4869 	ld	b, (hl)
      0013D9 CB 78                 4870 	bit	7, b
      0013DB 20 1C                 4871 	jr	NZ, 00135$
      0013DD 58                    4872 	ld	e, b
      0013DE 16 00                 4873 	ld	d, #0x00
      0013E0 3E 98                 4874 	ld	a, #0x98
      0013E2 B9                    4875 	cp	a, c
      0013E3 3E 00                 4876 	ld	a, #0x00
      0013E5 98                    4877 	sbc	a, b
      0013E6 CB 7B                 4878 	bit	7, e
      0013E8 28 07                 4879 	jr	Z, 00439$
      0013EA CB 7A                 4880 	bit	7, d
      0013EC 20 08                 4881 	jr	NZ, 00440$
      0013EE BF                    4882 	cp	a, a
      0013EF 18 05                 4883 	jr	00440$
      0013F1                       4884 00439$:
      0013F1 CB 7A                 4885 	bit	7, d
      0013F3 28 01                 4886 	jr	Z, 00440$
      0013F5 37                    4887 	scf
      0013F6                       4888 00440$:
      0013F6 D2r58r15              4889 	jp	NC, 00157$
      0013F9                       4890 00135$:
                                   4891 ;src/main.c:512: enemies[i].visible = 0;
      0013F9 F8 05                 4892 	ldhl	sp,	#5
      0013FB 2A                    4893 	ld	a,	(hl+)
      0013FC 66                    4894 	ld	h, (hl)
      0013FD 6F                    4895 	ld	l, a
      0013FE 36 00                 4896 	ld	(hl), #0x00
                                   4897 ;src/main.c:513: set_sprite_tile(10+(i<<1), 0x7f);
      001400 F8 0E                 4898 	ldhl	sp,	#14
                                   4899 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001402 6E                    4900 	ld	l, (hl)
      001403 01r00r00              4901 	ld	bc, #_shadow_OAM+0
                                   4902 ;	spillPairReg hl
                                   4903 ;	spillPairReg hl
      001406 26 00                 4904 	ld	h, #0x00
                                   4905 ;	spillPairReg hl
                                   4906 ;	spillPairReg hl
      001408 29                    4907 	add	hl, hl
      001409 29                    4908 	add	hl, hl
      00140A 09                    4909 	add	hl, bc
      00140B 23                    4910 	inc	hl
      00140C 23                    4911 	inc	hl
      00140D 36 7F                 4912 	ld	(hl), #0x7f
                                   4913 ;src/main.c:514: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00140F F8 0C                 4914 	ldhl	sp,	#12
      001411 7E                    4915 	ld	a, (hl)
      001412 C6 0B                 4916 	add	a, #0x0b
                                   4917 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001414 6F                    4918 	ld	l, a
      001415 01r00r00              4919 	ld	bc, #_shadow_OAM+0
                                   4920 ;	spillPairReg hl
                                   4921 ;	spillPairReg hl
      001418 26 00                 4922 	ld	h, #0x00
                                   4923 ;	spillPairReg hl
                                   4924 ;	spillPairReg hl
      00141A 29                    4925 	add	hl, hl
      00141B 29                    4926 	add	hl, hl
      00141C 09                    4927 	add	hl, bc
      00141D 23                    4928 	inc	hl
      00141E 23                    4929 	inc	hl
      00141F 36 7F                 4930 	ld	(hl), #0x7f
                                   4931 ;src/main.c:514: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001421 C3r58r15              4932 	jp	00157$
      001424                       4933 00154$:
                                   4934 ;src/main.c:518: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      001424 F8 0D                 4935 	ldhl	sp,	#13
      001426 CB 46                 4936 	bit	0, (hl)
      001428 C2rC3r14              4937 	jp	NZ, 00148$
      00142B F8 0A                 4938 	ldhl	sp,	#10
      00142D 2A                    4939 	ld	a, (hl+)
      00142E D6 AC                 4940 	sub	a, #0xac
      001430 7E                    4941 	ld	a, (hl)
      001431 DE 00                 4942 	sbc	a, #0x00
      001433 56                    4943 	ld	d, (hl)
      001434 3E 00                 4944 	ld	a, #0x00
      001436 CB 7F                 4945 	bit	7,a
      001438 28 07                 4946 	jr	Z, 00441$
      00143A CB 7A                 4947 	bit	7, d
      00143C 20 08                 4948 	jr	NZ, 00442$
      00143E BF                    4949 	cp	a, a
      00143F 18 05                 4950 	jr	00442$
      001441                       4951 00441$:
      001441 CB 7A                 4952 	bit	7, d
      001443 28 01                 4953 	jr	Z, 00442$
      001445 37                    4954 	scf
      001446                       4955 00442$:
      001446 30 7B                 4956 	jr	NC, 00148$
      001448 69                    4957 	ld	l, c
      001449 60                    4958 	ld	h, b
      00144A 2A                    4959 	ld	a,	(hl+)
      00144B 66                    4960 	ld	h, (hl)
                                   4961 ;	spillPairReg hl
      00144C 6F                    4962 	ld	l, a
                                   4963 ;	spillPairReg hl
                                   4964 ;	spillPairReg hl
      00144D 5C                    4965 	ld	e, h
      00144E AF                    4966 	xor	a, a
      00144F 57                    4967 	ld	d, a
      001450 BD                    4968 	cp	a, l
      001451 9C                    4969 	sbc	a, h
      001452 CB 7B                 4970 	bit	7, e
      001454 28 07                 4971 	jr	Z, 00443$
      001456 CB 7A                 4972 	bit	7, d
      001458 20 08                 4973 	jr	NZ, 00444$
      00145A BF                    4974 	cp	a, a
      00145B 18 05                 4975 	jr	00444$
      00145D                       4976 00443$:
      00145D CB 7A                 4977 	bit	7, d
      00145F 28 01                 4978 	jr	Z, 00444$
      001461 37                    4979 	scf
      001462                       4980 00444$:
      001462 30 5F                 4981 	jr	NC, 00148$
      001464 7D                    4982 	ld	a, l
      001465 D6 98                 4983 	sub	a, #0x98
      001467 7C                    4984 	ld	a, h
      001468 17                    4985 	rla
      001469 3F                    4986 	ccf
      00146A 1F                    4987 	rra
      00146B DE 80                 4988 	sbc	a, #0x80
      00146D 30 54                 4989 	jr	NC, 00148$
                                   4990 ;src/main.c:519: enemies[i].visible = 1;
      00146F F8 05                 4991 	ldhl	sp,	#5
      001471 2A                    4992 	ld	a,	(hl+)
      001472 66                    4993 	ld	h, (hl)
      001473 6F                    4994 	ld	l, a
      001474 36 01                 4995 	ld	(hl), #0x01
                                   4996 ;src/main.c:520: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      001476 F8 01                 4997 	ldhl	sp,#1
      001478 2A                    4998 	ld	a, (hl+)
      001479 5F                    4999 	ld	e, a
      00147A 56                    5000 	ld	d, (hl)
      00147B 21 06 00              5001 	ld	hl, #0x0006
      00147E 19                    5002 	add	hl, de
      00147F 4D                    5003 	ld	c, l
      001480 44                    5004 	ld	b, h
      001481 0A                    5005 	ld	a, (bc)
      001482 4F                    5006 	ld	c, a
      001483 F8 0E                 5007 	ldhl	sp,	#14
                                   5008 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001485 6E                    5009 	ld	l, (hl)
                                   5010 ;	spillPairReg hl
                                   5011 ;	spillPairReg hl
      001486 26 00                 5012 	ld	h, #0x00
                                   5013 ;	spillPairReg hl
                                   5014 ;	spillPairReg hl
      001488 29                    5015 	add	hl, hl
      001489 29                    5016 	add	hl, hl
      00148A 11r00r00              5017 	ld	de, #_shadow_OAM
      00148D 19                    5018 	add	hl, de
      00148E 23                    5019 	inc	hl
      00148F 23                    5020 	inc	hl
      001490 71                    5021 	ld	(hl), c
                                   5022 ;src/main.c:521: if (enemies[i].spriteCount == 2) {
      001491 F8 01                 5023 	ldhl	sp,#1
      001493 2A                    5024 	ld	a, (hl+)
      001494 5F                    5025 	ld	e, a
      001495 56                    5026 	ld	d, (hl)
      001496 21 08 00              5027 	ld	hl, #0x0008
      001499 19                    5028 	add	hl, de
      00149A 4D                    5029 	ld	c, l
      00149B 44                    5030 	ld	b, h
      00149C 0A                    5031 	ld	a, (bc)
      00149D D6 02                 5032 	sub	a, #0x02
      00149F C2r58r15              5033 	jp	NZ,00157$
                                   5034 ;src/main.c:522: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0014A2 F8 01                 5035 	ldhl	sp,#1
      0014A4 2A                    5036 	ld	a, (hl+)
      0014A5 5F                    5037 	ld	e, a
      0014A6 56                    5038 	ld	d, (hl)
      0014A7 21 07 00              5039 	ld	hl, #0x0007
      0014AA 19                    5040 	add	hl, de
      0014AB 4D                    5041 	ld	c, l
      0014AC 44                    5042 	ld	b, h
      0014AD 0A                    5043 	ld	a, (bc)
      0014AE 4F                    5044 	ld	c, a
      0014AF F8 0C                 5045 	ldhl	sp,	#12
      0014B1 7E                    5046 	ld	a, (hl)
      0014B2 C6 0B                 5047 	add	a, #0x0b
                                   5048 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0014B4 6F                    5049 	ld	l, a
                                   5050 ;	spillPairReg hl
                                   5051 ;	spillPairReg hl
      0014B5 26 00                 5052 	ld	h, #0x00
                                   5053 ;	spillPairReg hl
                                   5054 ;	spillPairReg hl
      0014B7 29                    5055 	add	hl, hl
      0014B8 29                    5056 	add	hl, hl
      0014B9 11r00r00              5057 	ld	de, #_shadow_OAM
      0014BC 19                    5058 	add	hl, de
      0014BD 23                    5059 	inc	hl
      0014BE 23                    5060 	inc	hl
      0014BF 71                    5061 	ld	(hl), c
                                   5062 ;src/main.c:522: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0014C0 C3r58r15              5063 	jp	00157$
      0014C3                       5064 00148$:
                                   5065 ;src/main.c:525: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      0014C3 F8 08                 5066 	ldhl	sp,	#8
      0014C5 2A                    5067 	ld	a, (hl+)
      0014C6 D6 9C                 5068 	sub	a, #0x9c
      0014C8 7E                    5069 	ld	a, (hl)
      0014C9 DE FF                 5070 	sbc	a, #0xff
      0014CB 56                    5071 	ld	d, (hl)
      0014CC 3E FF                 5072 	ld	a, #0xff
      0014CE CB 7F                 5073 	bit	7,a
      0014D0 28 07                 5074 	jr	Z, 00447$
      0014D2 CB 7A                 5075 	bit	7, d
      0014D4 20 08                 5076 	jr	NZ, 00448$
      0014D6 BF                    5077 	cp	a, a
      0014D7 18 05                 5078 	jr	00448$
      0014D9                       5079 00447$:
      0014D9 CB 7A                 5080 	bit	7, d
      0014DB 28 01                 5081 	jr	Z, 00448$
      0014DD 37                    5082 	scf
      0014DE                       5083 00448$:
      0014DE 38 49                 5084 	jr	C, 00142$
      0014E0 F8 0A                 5085 	ldhl	sp,	#10
      0014E2 3E 10                 5086 	ld	a, #0x10
      0014E4 96                    5087 	sub	a, (hl)
      0014E5 23                    5088 	inc	hl
      0014E6 3E 01                 5089 	ld	a, #0x01
      0014E8 9E                    5090 	sbc	a, (hl)
      0014E9 3E 01                 5091 	ld	a, #0x01
      0014EB 57                    5092 	ld	d, a
      0014EC CB 7E                 5093 	bit	7, (hl)
      0014EE 28 07                 5094 	jr	Z, 00449$
      0014F0 CB 7A                 5095 	bit	7, d
      0014F2 20 08                 5096 	jr	NZ, 00450$
      0014F4 BF                    5097 	cp	a, a
      0014F5 18 05                 5098 	jr	00450$
      0014F7                       5099 00449$:
      0014F7 CB 7A                 5100 	bit	7, d
      0014F9 28 01                 5101 	jr	Z, 00450$
      0014FB 37                    5102 	scf
      0014FC                       5103 00450$:
      0014FC 38 2B                 5104 	jr	C, 00142$
      0014FE 69                    5105 	ld	l, c
      0014FF 60                    5106 	ld	h, b
      001500 2A                    5107 	ld	a, (hl+)
      001501 4F                    5108 	ld	c, a
      001502 46                    5109 	ld	b, (hl)
      001503 79                    5110 	ld	a, c
      001504 D6 9C                 5111 	sub	a, #0x9c
      001506 78                    5112 	ld	a, b
      001507 17                    5113 	rla
      001508 3F                    5114 	ccf
      001509 1F                    5115 	rra
      00150A DE 7F                 5116 	sbc	a, #0x7f
      00150C 38 1B                 5117 	jr	C, 00142$
      00150E 58                    5118 	ld	e, b
      00150F 16 00                 5119 	ld	d, #0x00
      001511 3E FC                 5120 	ld	a, #0xfc
      001513 B9                    5121 	cp	a, c
      001514 3E 00                 5122 	ld	a, #0x00
      001516 98                    5123 	sbc	a, b
      001517 CB 7B                 5124 	bit	7, e
      001519 28 07                 5125 	jr	Z, 00451$
      00151B CB 7A                 5126 	bit	7, d
      00151D 20 08                 5127 	jr	NZ, 00452$
      00151F BF                    5128 	cp	a, a
      001520 18 05                 5129 	jr	00452$
      001522                       5130 00451$:
      001522 CB 7A                 5131 	bit	7, d
      001524 28 01                 5132 	jr	Z, 00452$
      001526 37                    5133 	scf
      001527                       5134 00452$:
      001527 30 2F                 5135 	jr	NC, 00157$
      001529                       5136 00142$:
                                   5137 ;src/main.c:526: enemies[i].alive = 0;
      001529 F8 03                 5138 	ldhl	sp,	#3
      00152B 2A                    5139 	ld	a,	(hl+)
      00152C 66                    5140 	ld	h, (hl)
      00152D 6F                    5141 	ld	l, a
      00152E 36 00                 5142 	ld	(hl), #0x00
                                   5143 ;src/main.c:527: set_sprite_tile(10+(i<<1), 0x7f);
      001530 F8 0E                 5144 	ldhl	sp,	#14
                                   5145 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001532 6E                    5146 	ld	l, (hl)
      001533 01r00r00              5147 	ld	bc, #_shadow_OAM+0
                                   5148 ;	spillPairReg hl
                                   5149 ;	spillPairReg hl
      001536 26 00                 5150 	ld	h, #0x00
                                   5151 ;	spillPairReg hl
                                   5152 ;	spillPairReg hl
      001538 29                    5153 	add	hl, hl
      001539 29                    5154 	add	hl, hl
      00153A 09                    5155 	add	hl, bc
      00153B 23                    5156 	inc	hl
      00153C 23                    5157 	inc	hl
      00153D 36 7F                 5158 	ld	(hl), #0x7f
                                   5159 ;src/main.c:528: set_sprite_tile(10+(i<<1)+1, 0x7f);
      00153F F8 0C                 5160 	ldhl	sp,	#12
      001541 7E                    5161 	ld	a, (hl)
      001542 C6 0B                 5162 	add	a, #0x0b
                                   5163 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001544 6F                    5164 	ld	l, a
      001545 01r00r00              5165 	ld	bc, #_shadow_OAM+0
                                   5166 ;	spillPairReg hl
                                   5167 ;	spillPairReg hl
      001548 26 00                 5168 	ld	h, #0x00
                                   5169 ;	spillPairReg hl
                                   5170 ;	spillPairReg hl
      00154A 29                    5171 	add	hl, hl
      00154B 29                    5172 	add	hl, hl
      00154C 09                    5173 	add	hl, bc
      00154D 23                    5174 	inc	hl
      00154E 23                    5175 	inc	hl
      00154F 36 7F                 5176 	ld	(hl), #0x7f
                                   5177 ;src/main.c:529: initEnemies(0);
      001551 AF                    5178 	xor	a, a
      001552 F5                    5179 	push	af
      001553 33                    5180 	inc	sp
      001554 CDr04r0D              5181 	call	_initEnemies
      001557 33                    5182 	inc	sp
      001558                       5183 00157$:
                                   5184 ;src/main.c:533: if (enemies[i].spriteCount == 1) {
      001558 F8 0F                 5185 	ldhl	sp,	#15
      00155A 4E                    5186 	ld	c, (hl)
      00155B 06 00                 5187 	ld	b, #0x00
      00155D 69                    5188 	ld	l, c
      00155E 60                    5189 	ld	h, b
      00155F 29                    5190 	add	hl, hl
      001560 29                    5191 	add	hl, hl
      001561 29                    5192 	add	hl, hl
      001562 29                    5193 	add	hl, hl
      001563 09                    5194 	add	hl, bc
      001564 01r55r00              5195 	ld	bc,#_enemies
      001567 09                    5196 	add	hl,bc
      001568 4D                    5197 	ld	c, l
      001569 44                    5198 	ld	b, h
      00156A 21 08 00              5199 	ld	hl, #0x0008
      00156D 09                    5200 	add	hl, bc
      00156E 5E                    5201 	ld	e, (hl)
                                   5202 ;src/main.c:513: set_sprite_tile(10+(i<<1), 0x7f);
      00156F F8 0F                 5203 	ldhl	sp,	#15
      001571 3A                    5204 	ld	a, (hl-)
      001572 87                    5205 	add	a, a
      001573 77                    5206 	ld	(hl), a
      001574 7E                    5207 	ld	a, (hl)
      001575 C6 0A                 5208 	add	a, #0x0a
      001577 F8 0A                 5209 	ldhl	sp,	#10
      001579 77                    5210 	ld	(hl), a
                                   5211 ;src/main.c:533: if (enemies[i].spriteCount == 1) {
      00157A 1D                    5212 	dec	e
      00157B 20 52                 5213 	jr	NZ, 00165$
                                   5214 ;src/main.c:534: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      00157D 59                    5215 	ld	e, c
      00157E 50                    5216 	ld	d, b
      00157F 13                    5217 	inc	de
      001580 13                    5218 	inc	de
      001581 1A                    5219 	ld	a, (de)
      001582 C6 0C                 5220 	add	a, #0x0c
      001584 5F                    5221 	ld	e, a
      001585 0A                    5222 	ld	a, (bc)
      001586 C6 04                 5223 	add	a, #0x04
      001588 F8 0E                 5224 	ldhl	sp,	#14
      00158A 77                    5225 	ld	(hl), a
      00158B F8 0A                 5226 	ldhl	sp,	#10
      00158D 56                    5227 	ld	d, (hl)
                                   5228 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00158E 6A                    5229 	ld	l, d
                                   5230 ;	spillPairReg hl
                                   5231 ;	spillPairReg hl
      00158F 26 00                 5232 	ld	h, #0x00
                                   5233 ;	spillPairReg hl
                                   5234 ;	spillPairReg hl
      001591 29                    5235 	add	hl, hl
      001592 29                    5236 	add	hl, hl
      001593 D5                    5237 	push	de
      001594 11r00r00              5238 	ld	de, #_shadow_OAM
      001597 19                    5239 	add	hl, de
      001598 D1                    5240 	pop	de
                                   5241 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001599 7B                    5242 	ld	a, e
      00159A 22                    5243 	ld	(hl+), a
      00159B 5D                    5244 	ld	e, l
      00159C 54                    5245 	ld	d, h
      00159D F8 0E                 5246 	ldhl	sp,	#14
      00159F 7E                    5247 	ld	a, (hl)
      0015A0 12                    5248 	ld	(de), a
                                   5249 ;src/main.c:535: if (enemies[i].xSpeed >= 0) {
      0015A1 21 0E 00              5250 	ld	hl, #0x000e
      0015A4 09                    5251 	add	hl, bc
      0015A5 CB 7E                 5252 	bit	7, (hl)
      0015A7 20 13                 5253 	jr	NZ, 00159$
                                   5254 ;src/main.c:536: set_sprite_prop(10+(i<<1), 0);
      0015A9 F8 0A                 5255 	ldhl	sp,	#10
                                   5256 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015AB 6E                    5257 	ld	l, (hl)
      0015AC 01r00r00              5258 	ld	bc, #_shadow_OAM+0
                                   5259 ;	spillPairReg hl
                                   5260 ;	spillPairReg hl
      0015AF 26 00                 5261 	ld	h, #0x00
                                   5262 ;	spillPairReg hl
                                   5263 ;	spillPairReg hl
      0015B1 29                    5264 	add	hl, hl
      0015B2 29                    5265 	add	hl, hl
      0015B3 09                    5266 	add	hl, bc
      0015B4 23                    5267 	inc	hl
      0015B5 23                    5268 	inc	hl
      0015B6 23                    5269 	inc	hl
      0015B7 36 00                 5270 	ld	(hl), #0x00
                                   5271 ;src/main.c:536: set_sprite_prop(10+(i<<1), 0);
      0015B9 C3rC5r16              5272 	jp	00199$
      0015BC                       5273 00159$:
                                   5274 ;src/main.c:539: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015BC F8 0A                 5275 	ldhl	sp,	#10
                                   5276 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015BE 6E                    5277 	ld	l, (hl)
      0015BF 01r00r00              5278 	ld	bc, #_shadow_OAM+0
                                   5279 ;	spillPairReg hl
                                   5280 ;	spillPairReg hl
      0015C2 26 00                 5281 	ld	h, #0x00
                                   5282 ;	spillPairReg hl
                                   5283 ;	spillPairReg hl
      0015C4 29                    5284 	add	hl, hl
      0015C5 29                    5285 	add	hl, hl
      0015C6 09                    5286 	add	hl, bc
      0015C7 23                    5287 	inc	hl
      0015C8 23                    5288 	inc	hl
      0015C9 23                    5289 	inc	hl
      0015CA 36 20                 5290 	ld	(hl), #0x20
                                   5291 ;src/main.c:539: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015CC C3rC5r16              5292 	jp	00199$
      0015CF                       5293 00165$:
                                   5294 ;src/main.c:544: if (enemies[i].xSpeed >= 0) {
      0015CF 21 0E 00              5295 	ld	hl, #0x000e
      0015D2 09                    5296 	add	hl, bc
      0015D3 E5                    5297 	push	hl
      0015D4 7D                    5298 	ld	a, l
      0015D5 F8 0E                 5299 	ldhl	sp,	#14
      0015D7 77                    5300 	ld	(hl), a
      0015D8 E1                    5301 	pop	hl
      0015D9 7C                    5302 	ld	a, h
      0015DA F8 0D                 5303 	ldhl	sp,	#13
      0015DC 32                    5304 	ld	(hl-), a
      0015DD 2A                    5305 	ld	a, (hl+)
      0015DE 5F                    5306 	ld	e, a
      0015DF 56                    5307 	ld	d, (hl)
      0015E0 1A                    5308 	ld	a, (de)
                                   5309 ;	spillPairReg hl
                                   5310 ;	spillPairReg hl
      0015E1 CB 7F                 5311 	bit	7,a
      0015E3 20 70                 5312 	jr	NZ, 00162$
                                   5313 ;src/main.c:545: set_sprite_prop(10+(i<<1), 0);
      0015E5 F8 0A                 5314 	ldhl	sp,	#10
                                   5315 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015E7 6E                    5316 	ld	l, (hl)
                                   5317 ;	spillPairReg hl
                                   5318 ;	spillPairReg hl
      0015E8 26 00                 5319 	ld	h, #0x00
                                   5320 ;	spillPairReg hl
                                   5321 ;	spillPairReg hl
      0015EA 29                    5322 	add	hl, hl
      0015EB 29                    5323 	add	hl, hl
      0015EC 11r00r00              5324 	ld	de, #_shadow_OAM
      0015EF 19                    5325 	add	hl, de
      0015F0 23                    5326 	inc	hl
      0015F1 23                    5327 	inc	hl
      0015F2 23                    5328 	inc	hl
      0015F3 36 00                 5329 	ld	(hl), #0x00
                                   5330 ;src/main.c:546: set_sprite_prop(10+(i<<1)+1, 0);
      0015F5 F8 0E                 5331 	ldhl	sp,	#14
      0015F7 7E                    5332 	ld	a, (hl)
      0015F8 C6 0B                 5333 	add	a, #0x0b
      0015FA F8 0B                 5334 	ldhl	sp,	#11
      0015FC 77                    5335 	ld	(hl), a
                                   5336 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015FD 6E                    5337 	ld	l, (hl)
                                   5338 ;	spillPairReg hl
                                   5339 ;	spillPairReg hl
      0015FE 26 00                 5340 	ld	h, #0x00
                                   5341 ;	spillPairReg hl
                                   5342 ;	spillPairReg hl
      001600 29                    5343 	add	hl, hl
      001601 29                    5344 	add	hl, hl
      001602 11r00r00              5345 	ld	de, #_shadow_OAM
      001605 19                    5346 	add	hl, de
      001606 23                    5347 	inc	hl
      001607 23                    5348 	inc	hl
      001608 23                    5349 	inc	hl
      001609 36 00                 5350 	ld	(hl), #0x00
                                   5351 ;src/main.c:547: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      00160B 21 02 00              5352 	ld	hl, #0x0002
      00160E 09                    5353 	add	hl, bc
      00160F E5                    5354 	push	hl
      001610 7D                    5355 	ld	a, l
      001611 F8 0E                 5356 	ldhl	sp,	#14
      001613 77                    5357 	ld	(hl), a
      001614 E1                    5358 	pop	hl
      001615 7C                    5359 	ld	a, h
      001616 F8 0D                 5360 	ldhl	sp,	#13
      001618 32                    5361 	ld	(hl-), a
      001619 2A                    5362 	ld	a, (hl+)
      00161A 5F                    5363 	ld	e, a
      00161B 2A                    5364 	ld	a, (hl+)
      00161C 57                    5365 	ld	d, a
      00161D 1A                    5366 	ld	a, (de)
      00161E C6 08                 5367 	add	a, #0x08
      001620 5F                    5368 	ld	e, a
      001621 0A                    5369 	ld	a, (bc)
      001622 77                    5370 	ld	(hl), a
      001623 F8 0A                 5371 	ldhl	sp,	#10
      001625 56                    5372 	ld	d, (hl)
                                   5373 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001626 6A                    5374 	ld	l, d
                                   5375 ;	spillPairReg hl
                                   5376 ;	spillPairReg hl
      001627 26 00                 5377 	ld	h, #0x00
                                   5378 ;	spillPairReg hl
                                   5379 ;	spillPairReg hl
      001629 29                    5380 	add	hl, hl
      00162A 29                    5381 	add	hl, hl
      00162B D5                    5382 	push	de
      00162C 11r00r00              5383 	ld	de, #_shadow_OAM
      00162F 19                    5384 	add	hl, de
      001630 D1                    5385 	pop	de
                                   5386 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001631 7B                    5387 	ld	a, e
      001632 22                    5388 	ld	(hl+), a
      001633 5D                    5389 	ld	e, l
      001634 54                    5390 	ld	d, h
      001635 F8 0E                 5391 	ldhl	sp,	#14
                                   5392 ;src/main.c:548: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001637 3A                    5393 	ld	a, (hl-)
      001638 2B                    5394 	dec	hl
      001639 12                    5395 	ld	(de), a
      00163A 2A                    5396 	ld	a, (hl+)
      00163B 5F                    5397 	ld	e, a
      00163C 3A                    5398 	ld	a, (hl-)
      00163D 2B                    5399 	dec	hl
      00163E 57                    5400 	ld	d, a
      00163F 1A                    5401 	ld	a, (de)
      001640 C6 08                 5402 	add	a, #0x08
      001642 57                    5403 	ld	d, a
      001643 0A                    5404 	ld	a, (bc)
      001644 C6 08                 5405 	add	a, #0x08
      001646 5F                    5406 	ld	e, a
                                   5407 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001647 6E                    5408 	ld	l, (hl)
                                   5409 ;	spillPairReg hl
                                   5410 ;	spillPairReg hl
      001648 26 00                 5411 	ld	h, #0x00
                                   5412 ;	spillPairReg hl
                                   5413 ;	spillPairReg hl
      00164A 29                    5414 	add	hl, hl
      00164B 29                    5415 	add	hl, hl
      00164C 01r00r00              5416 	ld	bc, #_shadow_OAM
      00164F 09                    5417 	add	hl, bc
                                   5418 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001650 7A                    5419 	ld	a, d
      001651 22                    5420 	ld	(hl+), a
      001652 73                    5421 	ld	(hl), e
                                   5422 ;src/main.c:548: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001653 18 70                 5423 	jr	00199$
      001655                       5424 00162$:
                                   5425 ;src/main.c:551: set_sprite_prop(10+(i<<1), S_FLIPX);
      001655 F8 0A                 5426 	ldhl	sp,	#10
      001657 5E                    5427 	ld	e, (hl)
                                   5428 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001658 26 00                 5429 	ld	h, #0x00
                                   5430 ;	spillPairReg hl
                                   5431 ;	spillPairReg hl
      00165A 6B                    5432 	ld	l, e
      00165B 29                    5433 	add	hl, hl
      00165C 29                    5434 	add	hl, hl
      00165D 11r00r00              5435 	ld	de, #_shadow_OAM
      001660 19                    5436 	add	hl, de
      001661 23                    5437 	inc	hl
      001662 23                    5438 	inc	hl
      001663 23                    5439 	inc	hl
      001664 36 20                 5440 	ld	(hl), #0x20
                                   5441 ;src/main.c:552: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      001666 F8 0E                 5442 	ldhl	sp,	#14
      001668 7E                    5443 	ld	a, (hl)
      001669 C6 0B                 5444 	add	a, #0x0b
      00166B F8 0B                 5445 	ldhl	sp,	#11
      00166D 77                    5446 	ld	(hl), a
      00166E 5E                    5447 	ld	e, (hl)
                                   5448 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00166F 26 00                 5449 	ld	h, #0x00
                                   5450 ;	spillPairReg hl
                                   5451 ;	spillPairReg hl
      001671 6B                    5452 	ld	l, e
      001672 29                    5453 	add	hl, hl
      001673 29                    5454 	add	hl, hl
      001674 11r00r00              5455 	ld	de, #_shadow_OAM
      001677 19                    5456 	add	hl, de
      001678 23                    5457 	inc	hl
      001679 23                    5458 	inc	hl
      00167A 23                    5459 	inc	hl
      00167B 36 20                 5460 	ld	(hl), #0x20
                                   5461 ;src/main.c:553: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      00167D 21 02 00              5462 	ld	hl, #0x0002
      001680 09                    5463 	add	hl, bc
      001681 E5                    5464 	push	hl
      001682 7D                    5465 	ld	a, l
      001683 F8 0E                 5466 	ldhl	sp,	#14
      001685 77                    5467 	ld	(hl), a
      001686 E1                    5468 	pop	hl
      001687 7C                    5469 	ld	a, h
      001688 F8 0D                 5470 	ldhl	sp,	#13
      00168A 32                    5471 	ld	(hl-), a
      00168B 2A                    5472 	ld	a, (hl+)
      00168C 5F                    5473 	ld	e, a
      00168D 2A                    5474 	ld	a, (hl+)
      00168E 57                    5475 	ld	d, a
      00168F 1A                    5476 	ld	a, (de)
      001690 C6 08                 5477 	add	a, #0x08
      001692 5F                    5478 	ld	e, a
      001693 0A                    5479 	ld	a, (bc)
      001694 C6 08                 5480 	add	a, #0x08
      001696 77                    5481 	ld	(hl), a
      001697 F8 0A                 5482 	ldhl	sp,	#10
      001699 56                    5483 	ld	d, (hl)
                                   5484 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00169A 6A                    5485 	ld	l, d
                                   5486 ;	spillPairReg hl
                                   5487 ;	spillPairReg hl
      00169B 26 00                 5488 	ld	h, #0x00
                                   5489 ;	spillPairReg hl
                                   5490 ;	spillPairReg hl
      00169D 29                    5491 	add	hl, hl
      00169E 29                    5492 	add	hl, hl
      00169F D5                    5493 	push	de
      0016A0 11r00r00              5494 	ld	de, #_shadow_OAM
      0016A3 19                    5495 	add	hl, de
      0016A4 D1                    5496 	pop	de
                                   5497 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016A5 7B                    5498 	ld	a, e
      0016A6 22                    5499 	ld	(hl+), a
      0016A7 5D                    5500 	ld	e, l
      0016A8 54                    5501 	ld	d, h
      0016A9 F8 0E                 5502 	ldhl	sp,	#14
                                   5503 ;src/main.c:554: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0016AB 3A                    5504 	ld	a, (hl-)
      0016AC 2B                    5505 	dec	hl
      0016AD 12                    5506 	ld	(de), a
      0016AE 2A                    5507 	ld	a, (hl+)
      0016AF 5F                    5508 	ld	e, a
      0016B0 3A                    5509 	ld	a, (hl-)
      0016B1 2B                    5510 	dec	hl
      0016B2 57                    5511 	ld	d, a
      0016B3 1A                    5512 	ld	a, (de)
      0016B4 C6 08                 5513 	add	a, #0x08
      0016B6 57                    5514 	ld	d, a
      0016B7 0A                    5515 	ld	a, (bc)
      0016B8 5F                    5516 	ld	e, a
                                   5517 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0016B9 6E                    5518 	ld	l, (hl)
                                   5519 ;	spillPairReg hl
                                   5520 ;	spillPairReg hl
      0016BA 26 00                 5521 	ld	h, #0x00
                                   5522 ;	spillPairReg hl
                                   5523 ;	spillPairReg hl
      0016BC 29                    5524 	add	hl, hl
      0016BD 29                    5525 	add	hl, hl
      0016BE 01r00r00              5526 	ld	bc, #_shadow_OAM
      0016C1 09                    5527 	add	hl, bc
                                   5528 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016C2 7A                    5529 	ld	a, d
      0016C3 22                    5530 	ld	(hl+), a
      0016C4 73                    5531 	ld	(hl), e
                                   5532 ;src/main.c:554: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0016C5                       5533 00199$:
                                   5534 ;src/main.c:507: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0016C5 F8 0F                 5535 	ldhl	sp,	#15
      0016C7 34                    5536 	inc	(hl)
      0016C8 C3r25r13              5537 	jp	00198$
      0016CB                       5538 00200$:
                                   5539 ;src/main.c:560: }
      0016CB E8 10                 5540 	add	sp, #16
      0016CD C9                    5541 	ret
                                   5542 ;src/main.c:565: void move() {
                                   5543 ;	---------------------------------
                                   5544 ; Function move
                                   5545 ; ---------------------------------
      0016CE                       5546 _move::
      0016CE E8 F8                 5547 	add	sp, #-8
                                   5548 ;src/main.c:569: if (joydata & J_A) {
      0016D0 FArE6r00              5549 	ld	a, (#_joydata)
      0016D3 CB 67                 5550 	bit	4, a
      0016D5 28 16                 5551 	jr	Z, 00102$
                                   5552 ;src/main.c:570: xSpeed += xDir + xDir + xDir;
      0016D7 21r8Br00              5553 	ld	hl, #_xDir
      0016DA 7E                    5554 	ld	a, (hl)
      0016DB 87                    5555 	add	a, a
      0016DC 86                    5556 	add	a, (hl)
      0016DD 21r8Dr00              5557 	ld	hl, #_xSpeed
      0016E0 86                    5558 	add	a, (hl)
      0016E1 77                    5559 	ld	(hl), a
                                   5560 ;src/main.c:571: ySpeed += yDir + yDir + yDir;
      0016E2 21r8Cr00              5561 	ld	hl, #_yDir
      0016E5 7E                    5562 	ld	a, (hl)
      0016E6 87                    5563 	add	a, a
      0016E7 86                    5564 	add	a, (hl)
      0016E8 21r8Er00              5565 	ld	hl, #_ySpeed
      0016EB 86                    5566 	add	a, (hl)
      0016EC 77                    5567 	ld	(hl), a
      0016ED                       5568 00102$:
                                   5569 ;src/main.c:575: xSpeed = clamp(xSpeed, -100, 100);
      0016ED 21r8Dr00              5570 	ld	hl, #_xSpeed
      0016F0 4E                    5571 	ld	c, (hl)
                                   5572 ;src/main.c:328: return (value < min) ? min : (value > max) ? max : value;
      0016F1 79                    5573 	ld	a, c
      0016F2 EE 80                 5574 	xor	a, #0x80
      0016F4 D6 1C                 5575 	sub	a, #0x1c
      0016F6 30 04                 5576 	jr	NC, 00165$
      0016F8 0E 9C                 5577 	ld	c, #0x9c
      0016FA 18 19                 5578 	jr	00166$
      0016FC                       5579 00165$:
      0016FC 59                    5580 	ld	e, c
      0016FD 3E 64                 5581 	ld	a,#0x64
      0016FF 57                    5582 	ld	d,a
      001700 91                    5583 	sub	a, c
      001701 CB 7B                 5584 	bit	7, e
      001703 28 07                 5585 	jr	Z, 00342$
      001705 CB 7A                 5586 	bit	7, d
      001707 20 08                 5587 	jr	NZ, 00343$
      001709 BF                    5588 	cp	a, a
      00170A 18 05                 5589 	jr	00343$
      00170C                       5590 00342$:
      00170C CB 7A                 5591 	bit	7, d
      00170E 28 01                 5592 	jr	Z, 00343$
      001710 37                    5593 	scf
      001711                       5594 00343$:
      001711 30 02                 5595 	jr	NC, 00167$
      001713 0E 64                 5596 	ld	c, #0x64
      001715                       5597 00167$:
      001715                       5598 00166$:
      001715 21r8Dr00              5599 	ld	hl, #_xSpeed
      001718 71                    5600 	ld	(hl), c
                                   5601 ;src/main.c:576: ySpeed = clamp(ySpeed, -100, 100);
      001719 21r8Er00              5602 	ld	hl, #_ySpeed
      00171C 4E                    5603 	ld	c, (hl)
                                   5604 ;src/main.c:328: return (value < min) ? min : (value > max) ? max : value;
      00171D 79                    5605 	ld	a, c
      00171E EE 80                 5606 	xor	a, #0x80
      001720 D6 1C                 5607 	sub	a, #0x1c
      001722 30 04                 5608 	jr	NC, 00169$
      001724 0E 9C                 5609 	ld	c, #0x9c
      001726 18 19                 5610 	jr	00170$
      001728                       5611 00169$:
      001728 59                    5612 	ld	e, c
      001729 3E 64                 5613 	ld	a,#0x64
      00172B 57                    5614 	ld	d,a
      00172C 91                    5615 	sub	a, c
      00172D CB 7B                 5616 	bit	7, e
      00172F 28 07                 5617 	jr	Z, 00344$
      001731 CB 7A                 5618 	bit	7, d
      001733 20 08                 5619 	jr	NZ, 00345$
      001735 BF                    5620 	cp	a, a
      001736 18 05                 5621 	jr	00345$
      001738                       5622 00344$:
      001738 CB 7A                 5623 	bit	7, d
      00173A 28 01                 5624 	jr	Z, 00345$
      00173C 37                    5625 	scf
      00173D                       5626 00345$:
      00173D 30 02                 5627 	jr	NC, 00171$
      00173F 0E 64                 5628 	ld	c, #0x64
      001741                       5629 00171$:
      001741                       5630 00170$:
      001741 21r8Er00              5631 	ld	hl, #_ySpeed
      001744 71                    5632 	ld	(hl), c
                                   5633 ;src/main.c:578: xOverflow = 0;
      001745 AF                    5634 	xor	a, a
      001746 21r99r00              5635 	ld	hl, #_xOverflow
      001749 22                    5636 	ld	(hl+), a
      00174A 77                    5637 	ld	(hl), a
                                   5638 ;src/main.c:579: yOverflow = 0;
      00174B AF                    5639 	xor	a, a
      00174C 21r9Br00              5640 	ld	hl, #_yOverflow
      00174F 22                    5641 	ld	(hl+), a
      001750 77                    5642 	ld	(hl), a
                                   5643 ;src/main.c:584: uint8_t xCollisionPoint = playerDrawX; 
      001751 21r93r00              5644 	ld	hl, #_playerDrawX
      001754 4E                    5645 	ld	c, (hl)
                                   5646 ;src/main.c:587: xCollisionPoint = playerDrawX +8; //right edge
      001755 46                    5647 	ld	b, (hl)
                                   5648 ;src/main.c:586: if (xSpeed > 0) {
      001756 21r8Dr00              5649 	ld	hl, #_xSpeed
      001759 5E                    5650 	ld	e, (hl)
      00175A AF                    5651 	xor	a, a
      00175B 57                    5652 	ld	d, a
      00175C 96                    5653 	sub	a, (hl)
      00175D CB 7B                 5654 	bit	7, e
      00175F 28 07                 5655 	jr	Z, 00346$
      001761 CB 7A                 5656 	bit	7, d
      001763 20 08                 5657 	jr	NZ, 00347$
      001765 BF                    5658 	cp	a, a
      001766 18 05                 5659 	jr	00347$
      001768                       5660 00346$:
      001768 CB 7A                 5661 	bit	7, d
      00176A 28 01                 5662 	jr	Z, 00347$
      00176C 37                    5663 	scf
      00176D                       5664 00347$:
      00176D 30 04                 5665 	jr	NC, 00104$
                                   5666 ;src/main.c:587: xCollisionPoint = playerDrawX +8; //right edge
      00176F 78                    5667 	ld	a, b
      001770 C6 08                 5668 	add	a, #0x08
      001772 4F                    5669 	ld	c, a
      001773                       5670 00104$:
                                   5671 ;src/main.c:589: if (xSpeed < 0) {
      001773 FAr8Dr00              5672 	ld	a, (#_xSpeed)
      001776 CB 7F                 5673 	bit	7, a
      001778 28 04                 5674 	jr	Z, 00106$
                                   5675 ;src/main.c:590: xCollisionPoint = playerDrawX -8; //left edge
      00177A 78                    5676 	ld	a, b
      00177B C6 F8                 5677 	add	a, #0xf8
      00177D 4F                    5678 	ld	c, a
      00177E                       5679 00106$:
                                   5680 ;src/main.c:594: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      00177E 06 00                 5681 	ld	b, #0x00
      001780 79                    5682 	ld	a, c
      001781 21r95r00              5683 	ld	hl, #_bgX
      001784 86                    5684 	add	a, (hl)
      001785 23                    5685 	inc	hl
      001786 4F                    5686 	ld	c, a
      001787 78                    5687 	ld	a, b
      001788 8E                    5688 	adc	a, (hl)
      001789 47                    5689 	ld	b, a
      00178A CB 28                 5690 	sra	b
      00178C CB 19                 5691 	rr	c
      00178E CB 28                 5692 	sra	b
      001790 CB 19                 5693 	rr	c
      001792 CB 28                 5694 	sra	b
      001794 CB 19                 5695 	rr	c
      001796 11 20 00              5696 	ld	de, #0x0020
      001799 D5                    5697 	push	de
      00179A C5                    5698 	push	bc
      00179B CDr00r00              5699 	call	__modsint
      00179E E8 04                 5700 	add	sp, #4
                                   5701 ;src/main.c:598: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      0017A0 21r94r00              5702 	ld	hl, #_playerDrawY
      0017A3 4E                    5703 	ld	c, (hl)
      0017A4 06 00                 5704 	ld	b, #0x00
      0017A6 79                    5705 	ld	a, c
      0017A7 21r97r00              5706 	ld	hl, #_bgY
      0017AA 86                    5707 	add	a, (hl)
      0017AB 23                    5708 	inc	hl
      0017AC 4F                    5709 	ld	c, a
      0017AD 78                    5710 	ld	a, b
      0017AE 8E                    5711 	adc	a, (hl)
      0017AF 47                    5712 	ld	b, a
      0017B0 CB 28                 5713 	sra	b
      0017B2 CB 19                 5714 	rr	c
      0017B4 CB 28                 5715 	sra	b
      0017B6 CB 19                 5716 	rr	c
      0017B8 CB 28                 5717 	sra	b
      0017BA CB 19                 5718 	rr	c
      0017BC D5                    5719 	push	de
      0017BD 21 20 00              5720 	ld	hl, #0x0020
      0017C0 E5                    5721 	push	hl
      0017C1 C5                    5722 	push	bc
      0017C2 CDr00r00              5723 	call	__modsint
      0017C5 E8 04                 5724 	add	sp, #4
      0017C7 6B                    5725 	ld	l, e
                                   5726 ;	spillPairReg hl
                                   5727 ;	spillPairReg hl
                                   5728 ;	spillPairReg hl
                                   5729 ;	spillPairReg hl
      0017C8 D1                    5730 	pop	de
                                   5731 ;src/main.c:601: uint16_t ind = 32*bgindY + bgindX;
      0017C9 26 00                 5732 	ld	h, #0x00
                                   5733 ;	spillPairReg hl
                                   5734 ;	spillPairReg hl
      0017CB 29                    5735 	add	hl, hl
      0017CC 29                    5736 	add	hl, hl
      0017CD 29                    5737 	add	hl, hl
      0017CE 29                    5738 	add	hl, hl
      0017CF 29                    5739 	add	hl, hl
      0017D0 19                    5740 	add	hl, de
      0017D1 5D                    5741 	ld	e, l
      0017D2 54                    5742 	ld	d, h
                                   5743 ;src/main.c:602: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      0017D3 0E 01                 5744 	ld	c, #0x01
                                   5745 ;src/main.c:603: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017D5 21r87r00              5746 	ld	hl, #_background1
      0017D8 19                    5747 	add	hl, de
      0017D9 46                    5748 	ld	b, (hl)
      0017DA 1E 00                 5749 	ld	e, #0x00
      0017DC                       5750 00158$:
      0017DC FAr83r08              5751 	ld	a, (#_BLANKSIZE)
      0017DF F8 02                 5752 	ldhl	sp,	#2
      0017E1 77                    5753 	ld	(hl), a
      0017E2 7B                    5754 	ld	a, e
      0017E3 96                    5755 	sub	a, (hl)
      0017E4 30 11                 5756 	jr	NC, 00109$
                                   5757 ;src/main.c:604: if (background1[ind] == BLANK[i] ) {
      0017E6 21r84r08              5758 	ld	hl, #_BLANK
      0017E9 16 00                 5759 	ld	d, #0x00
      0017EB 19                    5760 	add	hl, de
      0017EC 56                    5761 	ld	d, (hl)
      0017ED 78                    5762 	ld	a, b
                                   5763 ;src/main.c:605: result = 0;
      0017EE 92                    5764 	sub	a,d
      0017EF 20 03                 5765 	jr	NZ, 00159$
      0017F1 4F                    5766 	ld	c,a
                                   5767 ;src/main.c:606: break;
      0017F2 18 03                 5768 	jr	00109$
      0017F4                       5769 00159$:
                                   5770 ;src/main.c:603: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017F4 1C                    5771 	inc	e
      0017F5 18 E5                 5772 	jr	00158$
      0017F7                       5773 00109$:
                                   5774 ;src/main.c:610: if (result == 0) {
      0017F7 79                    5775 	ld	a, c
      0017F8 B7                    5776 	or	a, a
      0017F9 C2rC7r18              5777 	jp	NZ, 00114$
                                   5778 ;src/main.c:611: playerX+=xSpeed;
      0017FC FAr8Dr00              5779 	ld	a, (#_xSpeed)
      0017FF 4F                    5780 	ld	c, a
      001800 07                    5781 	rlca
      001801 9F                    5782 	sbc	a, a
      001802 47                    5783 	ld	b, a
      001803 21r8Fr00              5784 	ld	hl, #_playerX
      001806 6E                    5785 	ld	l, (hl)
                                   5786 ;	spillPairReg hl
                                   5787 ;	spillPairReg hl
      001807 FAr90r00              5788 	ld	a, (_playerX + 1)
      00180A 67                    5789 	ld	h, a
                                   5790 ;	spillPairReg hl
                                   5791 ;	spillPairReg hl
      00180B 09                    5792 	add	hl, bc
      00180C 4D                    5793 	ld	c, l
      00180D 44                    5794 	ld	b, h
      00180E 21r8Fr00              5795 	ld	hl, #_playerX
      001811 79                    5796 	ld	a, c
      001812 22                    5797 	ld	(hl+), a
                                   5798 ;src/main.c:613: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001813 78                    5799 	ld	a, b
      001814 32                    5800 	ld	(hl-), a
      001815 2A                    5801 	ld	a, (hl+)
      001816 4F                    5802 	ld	c, a
      001817 46                    5803 	ld	b, (hl)
      001818 79                    5804 	ld	a, c
      001819 D6 80                 5805 	sub	a, #0x80
      00181B 78                    5806 	ld	a, b
      00181C DE 08                 5807 	sbc	a, #0x08
      00181E 30 05                 5808 	jr	NC, 00173$
      001820 01 80 08              5809 	ld	bc, #0x0880
      001823 18 0B                 5810 	jr	00174$
      001825                       5811 00173$:
      001825 3E 80                 5812 	ld	a, #0x80
      001827 B9                    5813 	cp	a, c
      001828 3E 0B                 5814 	ld	a, #0x0b
      00182A 98                    5815 	sbc	a, b
      00182B 30 03                 5816 	jr	NC, 00175$
      00182D 01 80 0B              5817 	ld	bc, #0x0b80
      001830                       5818 00175$:
      001830                       5819 00174$:
      001830 59                    5820 	ld	e,c
      001831 50                    5821 	ld	d,b
                                   5822 ;src/main.c:615: xOverflow = (playerX - limitedPlayerX);
      001832 FAr8Fr00              5823 	ld	a, (#_playerX)
      001835 93                    5824 	sub	a, e
      001836 EAr99r00              5825 	ld	(#_xOverflow),a
      001839 FAr90r00              5826 	ld	a, (#_playerX + 1)
      00183C 9A                    5827 	sbc	a, d
      00183D 21r9Ar00              5828 	ld	hl, #_xOverflow + 1
                                   5829 ;src/main.c:616: if (xOverflow >= 0) {
      001840 32                    5830 	ld	(hl-), a
      001841 6E                    5831 	ld	l, (hl)
                                   5832 ;	spillPairReg hl
                                   5833 ;	spillPairReg hl
      001842 FAr9Ar00              5834 	ld	a, (_xOverflow + 1)
                                   5835 ;	spillPairReg hl
                                   5836 ;	spillPairReg hl
      001845 CB 7F                 5837 	bit	7,a
      001847 20 22                 5838 	jr	NZ, 00111$
                                   5839 ;src/main.c:617: xOverflow = xOverflow >> 5;
      001849 21r9Ar00              5840 	ld	hl, #_xOverflow + 1
      00184C CB 2E                 5841 	sra	(hl)
      00184E 2B                    5842 	dec	hl
      00184F CB 1E                 5843 	rr	(hl)
      001851 23                    5844 	inc	hl
      001852 CB 2E                 5845 	sra	(hl)
      001854 2B                    5846 	dec	hl
      001855 CB 1E                 5847 	rr	(hl)
      001857 23                    5848 	inc	hl
      001858 CB 2E                 5849 	sra	(hl)
      00185A 2B                    5850 	dec	hl
      00185B CB 1E                 5851 	rr	(hl)
      00185D 23                    5852 	inc	hl
      00185E CB 2E                 5853 	sra	(hl)
      001860 2B                    5854 	dec	hl
      001861 CB 1E                 5855 	rr	(hl)
      001863 23                    5856 	inc	hl
      001864 CB 2E                 5857 	sra	(hl)
      001866 2B                    5858 	dec	hl
      001867 CB 1E                 5859 	rr	(hl)
      001869 18 25                 5860 	jr	00112$
      00186B                       5861 00111$:
                                   5862 ;src/main.c:620: xOverflow = -((-xOverflow) >> 5);
      00186B AF                    5863 	xor	a, a
      00186C 21r99r00              5864 	ld	hl, #_xOverflow
      00186F 96                    5865 	sub	a, (hl)
      001870 23                    5866 	inc	hl
      001871 5F                    5867 	ld	e, a
      001872 9F                    5868 	sbc	a, a
      001873 96                    5869 	sub	a, (hl)
      001874 2B                    5870 	dec	hl
      001875 57                    5871 	ld	d, a
      001876 CB 2A                 5872 	sra	d
      001878 CB 1B                 5873 	rr	e
      00187A CB 2A                 5874 	sra	d
      00187C CB 1B                 5875 	rr	e
      00187E CB 2A                 5876 	sra	d
      001880 CB 1B                 5877 	rr	e
      001882 CB 2A                 5878 	sra	d
      001884 CB 1B                 5879 	rr	e
      001886 CB 2A                 5880 	sra	d
      001888 CB 1B                 5881 	rr	e
      00188A AF                    5882 	xor	a, a
      00188B 93                    5883 	sub	a, e
      00188C 22                    5884 	ld	(hl+), a
      00188D 9F                    5885 	sbc	a, a
      00188E 92                    5886 	sub	a, d
      00188F 77                    5887 	ld	(hl), a
      001890                       5888 00112$:
                                   5889 ;src/main.c:622: bgX += xOverflow;
      001890 FAr95r00              5890 	ld	a, (#_bgX)
      001893 21r99r00              5891 	ld	hl, #_xOverflow
      001896 86                    5892 	add	a, (hl)
      001897 21r95r00              5893 	ld	hl, #_bgX
      00189A 22                    5894 	ld	(hl+), a
      00189B 7E                    5895 	ld	a, (hl)
      00189C 21r9Ar00              5896 	ld	hl, #_xOverflow + 1
      00189F 8E                    5897 	adc	a, (hl)
      0018A0 EAr96r00              5898 	ld	(#_bgX + 1),a
                                   5899 ;src/main.c:623: playerX = limitedPlayerX;
      0018A3 21r8Fr00              5900 	ld	hl, #_playerX
      0018A6 79                    5901 	ld	a, c
      0018A7 22                    5902 	ld	(hl+), a
                                   5903 ;src/main.c:624: playerDrawX=playerX >> 5;
      0018A8 78                    5904 	ld	a, b
      0018A9 32                    5905 	ld	(hl-), a
      0018AA 2A                    5906 	ld	a, (hl+)
      0018AB 4F                    5907 	ld	c, a
      0018AC 46                    5908 	ld	b, (hl)
      0018AD CB 38                 5909 	srl	b
      0018AF CB 19                 5910 	rr	c
      0018B1 CB 38                 5911 	srl	b
      0018B3 CB 19                 5912 	rr	c
      0018B5 CB 38                 5913 	srl	b
      0018B7 CB 19                 5914 	rr	c
      0018B9 CB 38                 5915 	srl	b
      0018BB CB 19                 5916 	rr	c
      0018BD CB 38                 5917 	srl	b
      0018BF CB 19                 5918 	rr	c
      0018C1 21r93r00              5919 	ld	hl, #_playerDrawX
      0018C4 71                    5920 	ld	(hl), c
      0018C5 18 05                 5921 	jr	00115$
      0018C7                       5922 00114$:
                                   5923 ;src/main.c:632: xSpeed = 0;
      0018C7 21r8Dr00              5924 	ld	hl, #_xSpeed
      0018CA 36 00                 5925 	ld	(hl), #0x00
      0018CC                       5926 00115$:
                                   5927 ;src/main.c:640: uint8_t yCollisionPoint = playerDrawY; 
      0018CC FAr94r00              5928 	ld	a, (#_playerDrawY)
      0018CF F8 07                 5929 	ldhl	sp,	#7
      0018D1 77                    5930 	ld	(hl), a
                                   5931 ;src/main.c:643: yCollisionPoint = playerDrawY +8; //bottom edge
      0018D2 21r94r00              5932 	ld	hl, #_playerDrawY
      0018D5 4E                    5933 	ld	c, (hl)
                                   5934 ;src/main.c:642: if (ySpeed > 0) {
      0018D6 21r8Er00              5935 	ld	hl, #_ySpeed
      0018D9 5E                    5936 	ld	e, (hl)
      0018DA AF                    5937 	xor	a, a
      0018DB 57                    5938 	ld	d, a
      0018DC 96                    5939 	sub	a, (hl)
      0018DD CB 7B                 5940 	bit	7, e
      0018DF 28 07                 5941 	jr	Z, 00350$
      0018E1 CB 7A                 5942 	bit	7, d
      0018E3 20 08                 5943 	jr	NZ, 00351$
      0018E5 BF                    5944 	cp	a, a
      0018E6 18 05                 5945 	jr	00351$
      0018E8                       5946 00350$:
      0018E8 CB 7A                 5947 	bit	7, d
      0018EA 28 01                 5948 	jr	Z, 00351$
      0018EC 37                    5949 	scf
      0018ED                       5950 00351$:
      0018ED 30 06                 5951 	jr	NC, 00117$
                                   5952 ;src/main.c:643: yCollisionPoint = playerDrawY +8; //bottom edge
      0018EF 79                    5953 	ld	a, c
      0018F0 C6 08                 5954 	add	a, #0x08
      0018F2 F8 07                 5955 	ldhl	sp,	#7
      0018F4 77                    5956 	ld	(hl), a
      0018F5                       5957 00117$:
                                   5958 ;src/main.c:645: if (ySpeed < 0) {
      0018F5 FAr8Er00              5959 	ld	a, (#_ySpeed)
      0018F8 CB 7F                 5960 	bit	7, a
      0018FA 28 06                 5961 	jr	Z, 00119$
                                   5962 ;src/main.c:646: yCollisionPoint = playerDrawY -8; //top edge, 
      0018FC 79                    5963 	ld	a, c
      0018FD C6 F8                 5964 	add	a, #0xf8
      0018FF F8 07                 5965 	ldhl	sp,	#7
      001901 77                    5966 	ld	(hl), a
      001902                       5967 00119$:
                                   5968 ;src/main.c:650: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001902 FAr93r00              5969 	ld	a, (#_playerDrawX)
      001905 0E 00                 5970 	ld	c, #0x00
      001907 F8 03                 5971 	ldhl	sp,	#3
      001909 22                    5972 	ld	(hl+), a
      00190A 79                    5973 	ld	a, c
      00190B 32                    5974 	ld	(hl-), a
      00190C 2A                    5975 	ld	a, (hl+)
      00190D 5F                    5976 	ld	e, a
      00190E 56                    5977 	ld	d, (hl)
      00190F 21r95r00              5978 	ld	hl, #_bgX
      001912 2A                    5979 	ld	a,	(hl+)
      001913 66                    5980 	ld	h, (hl)
      001914 6F                    5981 	ld	l, a
      001915 19                    5982 	add	hl, de
      001916 E5                    5983 	push	hl
      001917 7D                    5984 	ld	a, l
      001918 F8 07                 5985 	ldhl	sp,	#7
      00191A 77                    5986 	ld	(hl), a
      00191B E1                    5987 	pop	hl
      00191C 7C                    5988 	ld	a, h
      00191D F8 06                 5989 	ldhl	sp,	#6
      00191F 77                    5990 	ld	(hl), a
      001920 CB 2E                 5991 	sra	(hl)
      001922 2B                    5992 	dec	hl
      001923 CB 1E                 5993 	rr	(hl)
      001925 23                    5994 	inc	hl
      001926 CB 2E                 5995 	sra	(hl)
      001928 2B                    5996 	dec	hl
      001929 CB 1E                 5997 	rr	(hl)
      00192B 23                    5998 	inc	hl
      00192C CB 2E                 5999 	sra	(hl)
      00192E 2B                    6000 	dec	hl
      00192F CB 1E                 6001 	rr	(hl)
      001931 11 20 00              6002 	ld	de, #0x0020
      001934 D5                    6003 	push	de
      001935 2A                    6004 	ld	a, (hl+)
      001936 5F                    6005 	ld	e, a
      001937 56                    6006 	ld	d, (hl)
      001938 D5                    6007 	push	de
      001939 CDr00r00              6008 	call	__modsint
      00193C E8 04                 6009 	add	sp, #4
      00193E F8 05                 6010 	ldhl	sp,	#5
      001940 7B                    6011 	ld	a, e
      001941 22                    6012 	ld	(hl+), a
      001942 72                    6013 	ld	(hl), d
      001943 F8 05                 6014 	ldhl	sp,	#5
      001945 7E                    6015 	ld	a, (hl)
      001946 F8 00                 6016 	ldhl	sp,	#0
      001948 77                    6017 	ld	(hl), a
      001949 F8 06                 6018 	ldhl	sp,	#6
      00194B 7E                    6019 	ld	a, (hl)
      00194C F8 01                 6020 	ldhl	sp,	#1
      00194E 77                    6021 	ld	(hl), a
                                   6022 ;src/main.c:653: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      00194F F8 07                 6023 	ldhl	sp,	#7
      001951 3A                    6024 	ld	a, (hl-)
      001952 22                    6025 	ld	(hl+), a
      001953 AF                    6026 	xor	a, a
      001954 32                    6027 	ld	(hl-), a
      001955 3A                    6028 	ld	a, (hl-)
      001956 2B                    6029 	dec	hl
      001957 77                    6030 	ld	(hl), a
      001958 F8 07                 6031 	ldhl	sp,	#7
      00195A 3A                    6032 	ld	a, (hl-)
      00195B 2B                    6033 	dec	hl
      00195C 32                    6034 	ld	(hl-), a
      00195D 2A                    6035 	ld	a, (hl+)
      00195E 5F                    6036 	ld	e, a
      00195F 56                    6037 	ld	d, (hl)
      001960 21r97r00              6038 	ld	hl, #_bgY
      001963 2A                    6039 	ld	a,	(hl+)
      001964 66                    6040 	ld	h, (hl)
      001965 6F                    6041 	ld	l, a
      001966 19                    6042 	add	hl, de
      001967 E5                    6043 	push	hl
      001968 7D                    6044 	ld	a, l
      001969 F8 08                 6045 	ldhl	sp,	#8
      00196B 77                    6046 	ld	(hl), a
      00196C E1                    6047 	pop	hl
      00196D 7C                    6048 	ld	a, h
      00196E F8 07                 6049 	ldhl	sp,	#7
      001970 77                    6050 	ld	(hl), a
      001971 CB 2E                 6051 	sra	(hl)
      001973 2B                    6052 	dec	hl
      001974 CB 1E                 6053 	rr	(hl)
      001976 23                    6054 	inc	hl
      001977 CB 2E                 6055 	sra	(hl)
      001979 2B                    6056 	dec	hl
      00197A CB 1E                 6057 	rr	(hl)
      00197C 23                    6058 	inc	hl
      00197D CB 2E                 6059 	sra	(hl)
      00197F 2B                    6060 	dec	hl
      001980 CB 1E                 6061 	rr	(hl)
      001982 11 20 00              6062 	ld	de, #0x0020
      001985 D5                    6063 	push	de
      001986 2A                    6064 	ld	a, (hl+)
      001987 5F                    6065 	ld	e, a
      001988 56                    6066 	ld	d, (hl)
      001989 D5                    6067 	push	de
      00198A CDr00r00              6068 	call	__modsint
      00198D E8 04                 6069 	add	sp, #4
      00198F F8 06                 6070 	ldhl	sp,	#6
      001991 7B                    6071 	ld	a, e
      001992 22                    6072 	ld	(hl+), a
      001993 72                    6073 	ld	(hl), d
      001994 F8 06                 6074 	ldhl	sp,	#6
      001996 2A                    6075 	ld	a, (hl+)
      001997 77                    6076 	ld	(hl), a
                                   6077 ;src/main.c:656: ind = 32*bgindY + bgindX;
      001998 3A                    6078 	ld	a, (hl-)
      001999 22                    6079 	ld	(hl+), a
      00199A 36 00                 6080 	ld	(hl), #0x00
      00199C 3E 05                 6081 	ld	a, #0x05
      00199E                       6082 00352$:
      00199E F8 06                 6083 	ldhl	sp,	#6
      0019A0 CB 26                 6084 	sla	(hl)
      0019A2 23                    6085 	inc	hl
      0019A3 CB 16                 6086 	rl	(hl)
      0019A5 3D                    6087 	dec	a
      0019A6 20 F6                 6088 	jr	NZ, 00352$
      0019A8 2B                    6089 	dec	hl
      0019A9 3A                    6090 	ld	a, (hl-)
      0019AA 2B                    6091 	dec	hl
      0019AB 77                    6092 	ld	(hl), a
      0019AC F8 07                 6093 	ldhl	sp,	#7
      0019AE 3A                    6094 	ld	a, (hl-)
      0019AF 2B                    6095 	dec	hl
      0019B0 77                    6096 	ld	(hl), a
      0019B1 D1                    6097 	pop	de
      0019B2 D5                    6098 	push	de
      0019B3 3A                    6099 	ld	a, (hl-)
      0019B4 6E                    6100 	ld	l, (hl)
      0019B5 67                    6101 	ld	h, a
      0019B6 19                    6102 	add	hl, de
      0019B7 E5                    6103 	push	hl
      0019B8 7D                    6104 	ld	a, l
      0019B9 F8 08                 6105 	ldhl	sp,	#8
      0019BB 77                    6106 	ld	(hl), a
      0019BC E1                    6107 	pop	hl
      0019BD 7C                    6108 	ld	a, h
      0019BE F8 07                 6109 	ldhl	sp,	#7
      0019C0 77                    6110 	ld	(hl), a
                                   6111 ;src/main.c:657: result = 1;
      0019C1 F8 03                 6112 	ldhl	sp,	#3
      0019C3 36 01                 6113 	ld	(hl), #0x01
                                   6114 ;src/main.c:658: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0019C5 F8 06                 6115 	ldhl	sp,#6
      0019C7 2A                    6116 	ld	a, (hl+)
      0019C8 5F                    6117 	ld	e, a
      0019C9 56                    6118 	ld	d, (hl)
      0019CA 21r87r00              6119 	ld	hl, #_background1
      0019CD 19                    6120 	add	hl, de
      0019CE 4D                    6121 	ld	c, l
      0019CF 44                    6122 	ld	b, h
      0019D0 0A                    6123 	ld	a, (bc)
      0019D1 F8 04                 6124 	ldhl	sp,	#4
      0019D3 77                    6125 	ld	(hl), a
      0019D4 F8 07                 6126 	ldhl	sp,	#7
      0019D6 36 00                 6127 	ld	(hl), #0x00
      0019D8                       6128 00161$:
      0019D8 F8 07                 6129 	ldhl	sp,	#7
      0019DA 7E                    6130 	ld	a, (hl)
      0019DB F8 02                 6131 	ldhl	sp,	#2
      0019DD 96                    6132 	sub	a, (hl)
      0019DE 30 29                 6133 	jr	NC, 00122$
                                   6134 ;src/main.c:659: if (background1[ind] == BLANK[j] ) {
      0019E0 11r84r08              6135 	ld	de, #_BLANK
      0019E3 F8 07                 6136 	ldhl	sp,	#7
      0019E5 6E                    6137 	ld	l, (hl)
      0019E6 26 00                 6138 	ld	h, #0x00
      0019E8 19                    6139 	add	hl, de
      0019E9 E5                    6140 	push	hl
      0019EA 7D                    6141 	ld	a, l
      0019EB F8 07                 6142 	ldhl	sp,	#7
      0019ED 77                    6143 	ld	(hl), a
      0019EE E1                    6144 	pop	hl
      0019EF 7C                    6145 	ld	a, h
      0019F0 F8 06                 6146 	ldhl	sp,	#6
      0019F2 32                    6147 	ld	(hl-), a
      0019F3 2A                    6148 	ld	a, (hl+)
      0019F4 5F                    6149 	ld	e, a
      0019F5 3A                    6150 	ld	a, (hl-)
      0019F6 2B                    6151 	dec	hl
      0019F7 57                    6152 	ld	d, a
      0019F8 1A                    6153 	ld	a, (de)
      0019F9 4F                    6154 	ld	c, a
      0019FA 7E                    6155 	ld	a, (hl)
      0019FB 91                    6156 	sub	a, c
      0019FC 20 06                 6157 	jr	NZ, 00162$
                                   6158 ;src/main.c:660: result = 0;
      0019FE F8 03                 6159 	ldhl	sp,	#3
      001A00 36 00                 6160 	ld	(hl), #0x00
                                   6161 ;src/main.c:661: break;
      001A02 18 05                 6162 	jr	00122$
      001A04                       6163 00162$:
                                   6164 ;src/main.c:658: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001A04 F8 07                 6165 	ldhl	sp,	#7
      001A06 34                    6166 	inc	(hl)
      001A07 18 CF                 6167 	jr	00161$
      001A09                       6168 00122$:
                                   6169 ;src/main.c:665: if (result == 0) {
      001A09 F8 03                 6170 	ldhl	sp,	#3
      001A0B 7E                    6171 	ld	a, (hl)
      001A0C B7                    6172 	or	a, a
      001A0D C2rD7r1A              6173 	jp	NZ, 00127$
                                   6174 ;src/main.c:666: playerY += ySpeed;
      001A10 FAr8Er00              6175 	ld	a, (#_ySpeed)
      001A13 4F                    6176 	ld	c, a
      001A14 07                    6177 	rlca
      001A15 9F                    6178 	sbc	a, a
      001A16 21r91r00              6179 	ld	hl, #_playerY
      001A19 5E                    6180 	ld	e, (hl)
      001A1A 23                    6181 	inc	hl
      001A1B 56                    6182 	ld	d, (hl)
      001A1C 2B                    6183 	dec	hl
      001A1D 47                    6184 	ld	b, a
      001A1E 79                    6185 	ld	a, c
      001A1F 83                    6186 	add	a, e
      001A20 4F                    6187 	ld	c, a
      001A21 78                    6188 	ld	a, b
      001A22 8A                    6189 	adc	a, d
      001A23 47                    6190 	ld	b, a
      001A24 79                    6191 	ld	a, c
      001A25 22                    6192 	ld	(hl+), a
                                   6193 ;src/main.c:668: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001A26 78                    6194 	ld	a, b
      001A27 32                    6195 	ld	(hl-), a
      001A28 2A                    6196 	ld	a, (hl+)
      001A29 5F                    6197 	ld	e, a
      001A2A 56                    6198 	ld	d, (hl)
      001A2B 7A                    6199 	ld	a, d
      001A2C D6 06                 6200 	sub	a, #0x06
      001A2E 30 05                 6201 	jr	NC, 00177$
      001A30 11 00 06              6202 	ld	de, #0x0600
      001A33 18 0B                 6203 	jr	00178$
      001A35                       6204 00177$:
      001A35 3E C0                 6205 	ld	a, #0xc0
      001A37 BB                    6206 	cp	a, e
      001A38 3E 09                 6207 	ld	a, #0x09
      001A3A 9A                    6208 	sbc	a, d
      001A3B 30 03                 6209 	jr	NC, 00179$
      001A3D 11 C0 09              6210 	ld	de, #0x09c0
      001A40                       6211 00179$:
      001A40                       6212 00178$:
      001A40 4B                    6213 	ld	c, e
      001A41 42                    6214 	ld	b, d
                                   6215 ;src/main.c:670: yOverflow = (playerY - limitedPlayerY);
      001A42 FAr91r00              6216 	ld	a, (#_playerY)
      001A45 93                    6217 	sub	a, e
      001A46 EAr9Br00              6218 	ld	(#_yOverflow),a
      001A49 FAr92r00              6219 	ld	a, (#_playerY + 1)
      001A4C 9A                    6220 	sbc	a, d
      001A4D 21r9Cr00              6221 	ld	hl, #_yOverflow + 1
                                   6222 ;src/main.c:671: if (yOverflow >= 0) {
      001A50 32                    6223 	ld	(hl-), a
      001A51 6E                    6224 	ld	l, (hl)
                                   6225 ;	spillPairReg hl
                                   6226 ;	spillPairReg hl
      001A52 FAr9Cr00              6227 	ld	a, (_yOverflow + 1)
                                   6228 ;	spillPairReg hl
                                   6229 ;	spillPairReg hl
      001A55 CB 7F                 6230 	bit	7,a
      001A57 20 22                 6231 	jr	NZ, 00124$
                                   6232 ;src/main.c:672: yOverflow = yOverflow >> 5;
      001A59 21r9Cr00              6233 	ld	hl, #_yOverflow + 1
      001A5C CB 2E                 6234 	sra	(hl)
      001A5E 2B                    6235 	dec	hl
      001A5F CB 1E                 6236 	rr	(hl)
      001A61 23                    6237 	inc	hl
      001A62 CB 2E                 6238 	sra	(hl)
      001A64 2B                    6239 	dec	hl
      001A65 CB 1E                 6240 	rr	(hl)
      001A67 23                    6241 	inc	hl
      001A68 CB 2E                 6242 	sra	(hl)
      001A6A 2B                    6243 	dec	hl
      001A6B CB 1E                 6244 	rr	(hl)
      001A6D 23                    6245 	inc	hl
      001A6E CB 2E                 6246 	sra	(hl)
      001A70 2B                    6247 	dec	hl
      001A71 CB 1E                 6248 	rr	(hl)
      001A73 23                    6249 	inc	hl
      001A74 CB 2E                 6250 	sra	(hl)
      001A76 2B                    6251 	dec	hl
      001A77 CB 1E                 6252 	rr	(hl)
      001A79 18 25                 6253 	jr	00125$
      001A7B                       6254 00124$:
                                   6255 ;src/main.c:675: yOverflow = -((-yOverflow) >> 5);
      001A7B AF                    6256 	xor	a, a
      001A7C 21r9Br00              6257 	ld	hl, #_yOverflow
      001A7F 96                    6258 	sub	a, (hl)
      001A80 23                    6259 	inc	hl
      001A81 5F                    6260 	ld	e, a
      001A82 9F                    6261 	sbc	a, a
      001A83 96                    6262 	sub	a, (hl)
      001A84 2B                    6263 	dec	hl
      001A85 57                    6264 	ld	d, a
      001A86 CB 2A                 6265 	sra	d
      001A88 CB 1B                 6266 	rr	e
      001A8A CB 2A                 6267 	sra	d
      001A8C CB 1B                 6268 	rr	e
      001A8E CB 2A                 6269 	sra	d
      001A90 CB 1B                 6270 	rr	e
      001A92 CB 2A                 6271 	sra	d
      001A94 CB 1B                 6272 	rr	e
      001A96 CB 2A                 6273 	sra	d
      001A98 CB 1B                 6274 	rr	e
      001A9A AF                    6275 	xor	a, a
      001A9B 93                    6276 	sub	a, e
      001A9C 22                    6277 	ld	(hl+), a
      001A9D 9F                    6278 	sbc	a, a
      001A9E 92                    6279 	sub	a, d
      001A9F 77                    6280 	ld	(hl), a
      001AA0                       6281 00125$:
                                   6282 ;src/main.c:677: bgY += yOverflow;
      001AA0 FAr97r00              6283 	ld	a, (#_bgY)
      001AA3 21r9Br00              6284 	ld	hl, #_yOverflow
      001AA6 86                    6285 	add	a, (hl)
      001AA7 21r97r00              6286 	ld	hl, #_bgY
      001AAA 22                    6287 	ld	(hl+), a
      001AAB 7E                    6288 	ld	a, (hl)
      001AAC 21r9Cr00              6289 	ld	hl, #_yOverflow + 1
      001AAF 8E                    6290 	adc	a, (hl)
      001AB0 EAr98r00              6291 	ld	(#_bgY + 1),a
                                   6292 ;src/main.c:678: playerY = limitedPlayerY;
      001AB3 21r91r00              6293 	ld	hl, #_playerY
      001AB6 79                    6294 	ld	a, c
      001AB7 22                    6295 	ld	(hl+), a
                                   6296 ;src/main.c:679: playerDrawY=playerY >> 5;
      001AB8 78                    6297 	ld	a, b
      001AB9 32                    6298 	ld	(hl-), a
      001ABA 2A                    6299 	ld	a, (hl+)
      001ABB 4F                    6300 	ld	c, a
      001ABC 46                    6301 	ld	b, (hl)
      001ABD CB 38                 6302 	srl	b
      001ABF CB 19                 6303 	rr	c
      001AC1 CB 38                 6304 	srl	b
      001AC3 CB 19                 6305 	rr	c
      001AC5 CB 38                 6306 	srl	b
      001AC7 CB 19                 6307 	rr	c
      001AC9 CB 38                 6308 	srl	b
      001ACB CB 19                 6309 	rr	c
      001ACD CB 38                 6310 	srl	b
      001ACF CB 19                 6311 	rr	c
      001AD1 21r94r00              6312 	ld	hl, #_playerDrawY
      001AD4 71                    6313 	ld	(hl), c
      001AD5 18 05                 6314 	jr	00128$
      001AD7                       6315 00127$:
                                   6316 ;src/main.c:684: ySpeed = 0;
      001AD7 21r8Er00              6317 	ld	hl, #_ySpeed
      001ADA 36 00                 6318 	ld	(hl), #0x00
      001ADC                       6319 00128$:
                                   6320 ;src/main.c:584: uint8_t xCollisionPoint = playerDrawX; 
      001ADC FAr93r00              6321 	ld	a, (#_playerDrawX)
      001ADF F8 07                 6322 	ldhl	sp,	#7
      001AE1 77                    6323 	ld	(hl), a
                                   6324 ;src/main.c:643: yCollisionPoint = playerDrawY +8; //bottom edge
      001AE2 FAr94r00              6325 	ld	a, (#_playerDrawY)
      001AE5 C6 08                 6326 	add	a, #0x08
      001AE7 F8 06                 6327 	ldhl	sp,	#6
      001AE9 77                    6328 	ld	(hl), a
                                   6329 ;src/main.c:687: if (xDir >= 0) {
      001AEA FAr8Br00              6330 	ld	a, (#_xDir)
      001AED CB 7F                 6331 	bit	7, a
      001AEF 20 2A                 6332 	jr	NZ, 00130$
                                   6333 ;src/main.c:688: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   6334 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6335 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001AF1 11r00r00              6336 	ld	de, #_shadow_OAM
      001AF4 F8 06                 6337 	ldhl	sp,	#6
      001AF6 2A                    6338 	ld	a, (hl+)
      001AF7 12                    6339 	ld	(de), a
      001AF8 11r01r00              6340 	ld	de, #(_shadow_OAM + 1)
      001AFB 7E                    6341 	ld	a, (hl)
      001AFC 12                    6342 	ld	(de), a
                                   6343 ;src/main.c:690: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001AFD FAr94r00              6344 	ld	a, (#_playerDrawY)
      001B00 F8 07                 6345 	ldhl	sp,	#7
      001B02 77                    6346 	ld	(hl), a
      001B03 3A                    6347 	ld	a, (hl-)
      001B04 C6 08                 6348 	add	a, #0x08
      001B06 77                    6349 	ld	(hl), a
      001B07 FAr93r00              6350 	ld	a, (#_playerDrawX)
      001B0A C6 08                 6351 	add	a, #0x08
      001B0C F8 07                 6352 	ldhl	sp,	#7
                                   6353 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6354 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B0E 32                    6355 	ld	(hl-), a
      001B0F 11r04r00              6356 	ld	de, #(_shadow_OAM + 4)
      001B12 2A                    6357 	ld	a, (hl+)
      001B13 12                    6358 	ld	(de), a
      001B14 11r05r00              6359 	ld	de, #(_shadow_OAM + 5)
      001B17 7E                    6360 	ld	a, (hl)
      001B18 12                    6361 	ld	(de), a
                                   6362 ;src/main.c:690: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001B19 18 28                 6363 	jr	00131$
      001B1B                       6364 00130$:
                                   6365 ;src/main.c:693: move_sprite(1, playerDrawX , playerDrawY +8);
                                   6366 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001B1B 01r04r00              6367 	ld	bc, #(_shadow_OAM + 4)
                                   6368 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B1E F8 06                 6369 	ldhl	sp,	#6
      001B20 2A                    6370 	ld	a, (hl+)
      001B21 02                    6371 	ld	(bc), a
      001B22 03                    6372 	inc	bc
      001B23 7E                    6373 	ld	a, (hl)
      001B24 02                    6374 	ld	(bc), a
                                   6375 ;src/main.c:695: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B25 FAr94r00              6376 	ld	a, (#_playerDrawY)
      001B28 F8 07                 6377 	ldhl	sp,	#7
      001B2A 77                    6378 	ld	(hl), a
      001B2B 3A                    6379 	ld	a, (hl-)
      001B2C C6 08                 6380 	add	a, #0x08
      001B2E 77                    6381 	ld	(hl), a
      001B2F FAr93r00              6382 	ld	a, (#_playerDrawX)
      001B32 F8 07                 6383 	ldhl	sp,	#7
      001B34 77                    6384 	ld	(hl), a
      001B35 7E                    6385 	ld	a, (hl)
      001B36 C6 08                 6386 	add	a, #0x08
                                   6387 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6388 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B38 32                    6389 	ld	(hl-), a
      001B39 11r00r00              6390 	ld	de, #_shadow_OAM
      001B3C 2A                    6391 	ld	a, (hl+)
      001B3D 12                    6392 	ld	(de), a
      001B3E 11r01r00              6393 	ld	de, #(_shadow_OAM + 1)
      001B41 7E                    6394 	ld	a, (hl)
      001B42 12                    6395 	ld	(de), a
                                   6396 ;src/main.c:695: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B43                       6397 00131$:
                                   6398 ;src/main.c:700: if (bgX >= 256) {
      001B43 21r95r00              6399 	ld	hl, #_bgX
      001B46 2A                    6400 	ld	a, (hl+)
      001B47 4F                    6401 	ld	c, a
      001B48 46                    6402 	ld	b, (hl)
      001B49 78                    6403 	ld	a, b
      001B4A EE 80                 6404 	xor	a, #0x80
      001B4C D6 81                 6405 	sub	a, #0x81
      001B4E 38 0F                 6406 	jr	C, 00133$
                                   6407 ;src/main.c:701: bgX = bgX % 256;
      001B50 AF                    6408 	xor	a, a
      001B51 3C                    6409 	inc	a
      001B52 F5                    6410 	push	af
      001B53 C5                    6411 	push	bc
      001B54 CDr00r00              6412 	call	__modsint
      001B57 E8 04                 6413 	add	sp, #4
      001B59 21r95r00              6414 	ld	hl, #_bgX
      001B5C 7B                    6415 	ld	a, e
      001B5D 22                    6416 	ld	(hl+), a
      001B5E 72                    6417 	ld	(hl), d
      001B5F                       6418 00133$:
                                   6419 ;src/main.c:703: if (bgX < 0) {
      001B5F 21r95r00              6420 	ld	hl, #_bgX
      001B62 2A                    6421 	ld	a, (hl+)
      001B63 4F                    6422 	ld	c, a
      001B64 46                    6423 	ld	b, (hl)
      001B65 CB 78                 6424 	bit	7, b
      001B67 28 15                 6425 	jr	Z, 00135$
                                   6426 ;src/main.c:704: bgX = 255 - (bgX % 256);
      001B69 AF                    6427 	xor	a, a
      001B6A 3C                    6428 	inc	a
      001B6B F5                    6429 	push	af
      001B6C C5                    6430 	push	bc
      001B6D CDr00r00              6431 	call	__modsint
      001B70 E8 04                 6432 	add	sp, #4
      001B72 3E FF                 6433 	ld	a, #0xff
      001B74 93                    6434 	sub	a, e
      001B75 4F                    6435 	ld	c, a
      001B76 9F                    6436 	sbc	a, a
      001B77 92                    6437 	sub	a, d
      001B78 21r95r00              6438 	ld	hl, #_bgX
      001B7B 71                    6439 	ld	(hl), c
      001B7C 23                    6440 	inc	hl
      001B7D 77                    6441 	ld	(hl), a
      001B7E                       6442 00135$:
                                   6443 ;src/main.c:706: if (bgY >= 256) {
      001B7E 21r97r00              6444 	ld	hl, #_bgY
      001B81 2A                    6445 	ld	a, (hl+)
      001B82 4F                    6446 	ld	c, a
      001B83 46                    6447 	ld	b, (hl)
      001B84 78                    6448 	ld	a, b
      001B85 EE 80                 6449 	xor	a, #0x80
      001B87 D6 81                 6450 	sub	a, #0x81
      001B89 38 0F                 6451 	jr	C, 00137$
                                   6452 ;src/main.c:707: bgY = bgY % 256;
      001B8B AF                    6453 	xor	a, a
      001B8C 3C                    6454 	inc	a
      001B8D F5                    6455 	push	af
      001B8E C5                    6456 	push	bc
      001B8F CDr00r00              6457 	call	__modsint
      001B92 E8 04                 6458 	add	sp, #4
      001B94 21r97r00              6459 	ld	hl, #_bgY
      001B97 7B                    6460 	ld	a, e
      001B98 22                    6461 	ld	(hl+), a
      001B99 72                    6462 	ld	(hl), d
      001B9A                       6463 00137$:
                                   6464 ;src/main.c:709: if (bgY < 0) {
      001B9A 21r97r00              6465 	ld	hl, #_bgY
      001B9D 2A                    6466 	ld	a, (hl+)
      001B9E 4F                    6467 	ld	c, a
      001B9F 46                    6468 	ld	b, (hl)
      001BA0 CB 78                 6469 	bit	7, b
      001BA2 28 15                 6470 	jr	Z, 00139$
                                   6471 ;src/main.c:710: bgY = 255 - (bgY % 256);
      001BA4 AF                    6472 	xor	a, a
      001BA5 3C                    6473 	inc	a
      001BA6 F5                    6474 	push	af
      001BA7 C5                    6475 	push	bc
      001BA8 CDr00r00              6476 	call	__modsint
      001BAB E8 04                 6477 	add	sp, #4
      001BAD 3E FF                 6478 	ld	a, #0xff
      001BAF 93                    6479 	sub	a, e
      001BB0 4F                    6480 	ld	c, a
      001BB1 9F                    6481 	sbc	a, a
      001BB2 92                    6482 	sub	a, d
      001BB3 21r97r00              6483 	ld	hl, #_bgY
      001BB6 71                    6484 	ld	(hl), c
      001BB7 23                    6485 	inc	hl
      001BB8 77                    6486 	ld	(hl), a
      001BB9                       6487 00139$:
                                   6488 ;src/main.c:713: move_bkg(bgX, bgY);
      001BB9 21r97r00              6489 	ld	hl, #_bgY
      001BBC 4E                    6490 	ld	c, (hl)
      001BBD FAr95r00              6491 	ld	a, (#_bgX)
      001BC0 E0r00                 6492 	ldh	(_SCX_REG + 0), a
                                   6493 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001BC2 79                    6494 	ld	a, c
      001BC3 E0r00                 6495 	ldh	(_SCY_REG + 0), a
                                   6496 ;src/main.c:716: if (ySpeed > 0) ySpeed--;
      001BC5 21r8Er00              6497 	ld	hl, #_ySpeed
      001BC8 5E                    6498 	ld	e, (hl)
      001BC9 AF                    6499 	xor	a, a
      001BCA 57                    6500 	ld	d, a
      001BCB 96                    6501 	sub	a, (hl)
      001BCC CB 7B                 6502 	bit	7, e
      001BCE 28 07                 6503 	jr	Z, 00355$
      001BD0 CB 7A                 6504 	bit	7, d
      001BD2 20 08                 6505 	jr	NZ, 00356$
      001BD4 BF                    6506 	cp	a, a
      001BD5 18 05                 6507 	jr	00356$
      001BD7                       6508 00355$:
      001BD7 CB 7A                 6509 	bit	7, d
      001BD9 28 01                 6510 	jr	Z, 00356$
      001BDB 37                    6511 	scf
      001BDC                       6512 00356$:
      001BDC 30 04                 6513 	jr	NC, 00141$
      001BDE 21r8Er00              6514 	ld	hl, #_ySpeed
      001BE1 35                    6515 	dec	(hl)
      001BE2                       6516 00141$:
                                   6517 ;src/main.c:717: if (ySpeed < 0) ySpeed++;
      001BE2 21r8Er00              6518 	ld	hl, #_ySpeed
      001BE5 CB 7E                 6519 	bit	7, (hl)
      001BE7 28 01                 6520 	jr	Z, 00143$
      001BE9 34                    6521 	inc	(hl)
      001BEA                       6522 00143$:
                                   6523 ;src/main.c:718: if (xSpeed > 0) xSpeed--;
      001BEA 21r8Dr00              6524 	ld	hl, #_xSpeed
      001BED 5E                    6525 	ld	e, (hl)
      001BEE AF                    6526 	xor	a, a
      001BEF 57                    6527 	ld	d, a
      001BF0 96                    6528 	sub	a, (hl)
      001BF1 CB 7B                 6529 	bit	7, e
      001BF3 28 07                 6530 	jr	Z, 00357$
      001BF5 CB 7A                 6531 	bit	7, d
      001BF7 20 08                 6532 	jr	NZ, 00358$
      001BF9 BF                    6533 	cp	a, a
      001BFA 18 05                 6534 	jr	00358$
      001BFC                       6535 00357$:
      001BFC CB 7A                 6536 	bit	7, d
      001BFE 28 01                 6537 	jr	Z, 00358$
      001C00 37                    6538 	scf
      001C01                       6539 00358$:
      001C01 30 04                 6540 	jr	NC, 00145$
      001C03 21r8Dr00              6541 	ld	hl, #_xSpeed
      001C06 35                    6542 	dec	(hl)
      001C07                       6543 00145$:
                                   6544 ;src/main.c:719: if (xSpeed < 0) xSpeed++;
      001C07 21r8Dr00              6545 	ld	hl, #_xSpeed
      001C0A CB 7E                 6546 	bit	7, (hl)
      001C0C 28 01                 6547 	jr	Z, 00163$
      001C0E 34                    6548 	inc	(hl)
      001C0F                       6549 00163$:
                                   6550 ;src/main.c:723: }
      001C0F E8 08                 6551 	add	sp, #8
      001C11 C9                    6552 	ret
                                   6553 ;src/main.c:725: void takeDamage(int16_t amount) {
                                   6554 ;	---------------------------------
                                   6555 ; Function takeDamage
                                   6556 ; ---------------------------------
      001C12                       6557 _takeDamage::
      001C12 3B                    6558 	dec	sp
                                   6559 ;src/main.c:726: if (amount > shield) {
      001C13 FArE8r00              6560 	ld	a, (#_shield)
      001C16 4F                    6561 	ld	c, a
      001C17 07                    6562 	rlca
      001C18 9F                    6563 	sbc	a, a
      001C19 47                    6564 	ld	b, a
                                   6565 ;src/main.c:728: hull -= (amount - shield);
      001C1A F8 03                 6566 	ldhl	sp,	#3
      001C1C 7E                    6567 	ld	a, (hl)
      001C1D F8 00                 6568 	ldhl	sp,	#0
      001C1F 77                    6569 	ld	(hl), a
                                   6570 ;src/main.c:726: if (amount > shield) {
      001C20 F8 03                 6571 	ldhl	sp,	#3
      001C22 79                    6572 	ld	a, c
      001C23 96                    6573 	sub	a, (hl)
      001C24 23                    6574 	inc	hl
      001C25 78                    6575 	ld	a, b
      001C26 9E                    6576 	sbc	a, (hl)
      001C27 78                    6577 	ld	a, b
      001C28 57                    6578 	ld	d, a
      001C29 CB 7E                 6579 	bit	7, (hl)
      001C2B 28 07                 6580 	jr	Z, 00111$
      001C2D CB 7A                 6581 	bit	7, d
      001C2F 20 08                 6582 	jr	NZ, 00112$
      001C31 BF                    6583 	cp	a, a
      001C32 18 05                 6584 	jr	00112$
      001C34                       6585 00111$:
      001C34 CB 7A                 6586 	bit	7, d
      001C36 28 01                 6587 	jr	Z, 00112$
      001C38 37                    6588 	scf
      001C39                       6589 00112$:
      001C39 30 10                 6590 	jr	NC, 00102$
                                   6591 ;src/main.c:727: shield = 0;
      001C3B 21rE8r00              6592 	ld	hl, #_shield
      001C3E 36 00                 6593 	ld	(hl), #0x00
                                   6594 ;src/main.c:728: hull -= (amount - shield);
      001C40 FArE7r00              6595 	ld	a, (#_hull)
      001C43 F8 00                 6596 	ldhl	sp,	#0
      001C45 96                    6597 	sub	a, (hl)
      001C46 EArE7r00              6598 	ld	(#_hull),a
      001C49 18 09                 6599 	jr	00104$
      001C4B                       6600 00102$:
                                   6601 ;src/main.c:731: shield -= amount;
      001C4B FArE8r00              6602 	ld	a, (#_shield)
      001C4E F8 00                 6603 	ldhl	sp,	#0
      001C50 96                    6604 	sub	a, (hl)
      001C51 EArE8r00              6605 	ld	(#_shield),a
      001C54                       6606 00104$:
                                   6607 ;src/main.c:733: }
      001C54 33                    6608 	inc	sp
      001C55 C9                    6609 	ret
                                   6610 ;src/main.c:735: void spawnPickup(int16_t x, int16_t y) {
                                   6611 ;	---------------------------------
                                   6612 ; Function spawnPickup
                                   6613 ; ---------------------------------
      001C56                       6614 _spawnPickup::
                                   6615 ;src/main.c:736: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      001C56 CDr00r00              6616 	call	_rand
      001C59 7B                    6617 	ld	a, e
      001C5A E6 0F                 6618 	and	a, #0x0f
      001C5C C0                    6619 	ret	NZ
                                   6620 ;src/main.c:737: if (spawn == 0) {
                                   6621 ;src/main.c:738: uint8_t type = ((uint8_t)rand()) % (uint8_t) 4;
      001C5D CDr00r00              6622 	call	_rand
      001C60 7B                    6623 	ld	a, e
      001C61 E6 03                 6624 	and	a, #0x03
                                   6625 ;src/main.c:739: if (type == 0) {
      001C63 5F                    6626 	ld	e,a
      001C64 B7                    6627 	or	a, a
      001C65 20 13                 6628 	jr	NZ, 00106$
                                   6629 ;src/main.c:740: pickup = health;
      001C67 11 09 00              6630 	ld	de, #0x0009
      001C6A D5                    6631 	push	de
      001C6B 11r1Ar07              6632 	ld	de, #_health
      001C6E D5                    6633 	push	de
      001C6F 11rEBr00              6634 	ld	de, #_pickup
      001C72 D5                    6635 	push	de
      001C73 CDr00r00              6636 	call	___memcpy
      001C76 E8 06                 6637 	add	sp, #6
      001C78 18 31                 6638 	jr	00107$
      001C7A                       6639 00106$:
                                   6640 ;src/main.c:742: else if (type == 1 && gunLevel < MAXGUNLEVEL) {
      001C7A 1D                    6641 	dec	e
      001C7B 20 1D                 6642 	jr	NZ, 00102$
      001C7D 21r9Dr08              6643 	ld	hl, #_MAXGUNLEVEL
      001C80 4E                    6644 	ld	c, (hl)
      001C81 FAr9Er00              6645 	ld	a, (#_gunLevel)
      001C84 91                    6646 	sub	a, c
      001C85 30 13                 6647 	jr	NC, 00102$
                                   6648 ;src/main.c:743: pickup = upgrade;
      001C87 11 09 00              6649 	ld	de, #0x0009
      001C8A D5                    6650 	push	de
      001C8B 11r08r07              6651 	ld	de, #_upgrade
      001C8E D5                    6652 	push	de
      001C8F 11rEBr00              6653 	ld	de, #_pickup
      001C92 D5                    6654 	push	de
      001C93 CDr00r00              6655 	call	___memcpy
      001C96 E8 06                 6656 	add	sp, #6
      001C98 18 11                 6657 	jr	00107$
      001C9A                       6658 00102$:
                                   6659 ;src/main.c:746: pickup = ammo;
      001C9A 01r11r07              6660 	ld	bc, #_ammo
      001C9D 11rEBr00              6661 	ld	de, #_pickup
      001CA0 21 09 00              6662 	ld	hl, #0x0009
      001CA3 E5                    6663 	push	hl
      001CA4 C5                    6664 	push	bc
      001CA5 D5                    6665 	push	de
      001CA6 CDr00r00              6666 	call	___memcpy
      001CA9 E8 06                 6667 	add	sp, #6
      001CAB                       6668 00107$:
                                   6669 ;src/main.c:748: pickup.active = 1;
      001CAB 21rF0r00              6670 	ld	hl, #(_pickup + 5)
      001CAE 36 01                 6671 	ld	(hl), #0x01
                                   6672 ;src/main.c:750: pickup.x = x;
      001CB0 11rECr00              6673 	ld	de, #(_pickup + 1)
      001CB3 F8 02                 6674 	ldhl	sp,	#2
      001CB5 2A                    6675 	ld	a, (hl+)
      001CB6 12                    6676 	ld	(de), a
      001CB7 13                    6677 	inc	de
                                   6678 ;src/main.c:751: pickup.y = y;
      001CB8 2A                    6679 	ld	a, (hl+)
      001CB9 12                    6680 	ld	(de), a
      001CBA 11rEEr00              6681 	ld	de, #(_pickup + 3)
      001CBD 2A                    6682 	ld	a, (hl+)
      001CBE 12                    6683 	ld	(de), a
      001CBF 13                    6684 	inc	de
      001CC0 7E                    6685 	ld	a, (hl)
      001CC1 12                    6686 	ld	(de), a
                                   6687 ;src/main.c:753: set_sprite_tile(3, pickup.tile); //0x7f
      001CC2 21rF3r00              6688 	ld	hl, #(_pickup + 8)
      001CC5 4E                    6689 	ld	c, (hl)
                                   6690 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001CC6 21r0Er00              6691 	ld	hl, #(_shadow_OAM + 14)
      001CC9 71                    6692 	ld	(hl), c
                                   6693 ;src/main.c:753: set_sprite_tile(3, pickup.tile); //0x7f
                                   6694 ;src/main.c:759: }
      001CCA C9                    6695 	ret
                                   6696 ;src/main.c:761: void checkCollision() {
                                   6697 ;	---------------------------------
                                   6698 ; Function checkCollision
                                   6699 ; ---------------------------------
      001CCB                       6700 _checkCollision::
      001CCB E8 E9                 6701 	add	sp, #-23
                                   6702 ;src/main.c:768: struct Enemy *eptr = enemies + enemyCollisionCount;
      001CCD 21r9Dr00              6703 	ld	hl, #_enemyCollisionCount
      001CD0 4E                    6704 	ld	c, (hl)
      001CD1 06 00                 6705 	ld	b, #0x00
      001CD3 69                    6706 	ld	l, c
      001CD4 60                    6707 	ld	h, b
      001CD5 29                    6708 	add	hl, hl
      001CD6 29                    6709 	add	hl, hl
      001CD7 29                    6710 	add	hl, hl
      001CD8 29                    6711 	add	hl, hl
      001CD9 09                    6712 	add	hl, bc
      001CDA 01r55r00              6713 	ld	bc,#_enemies
      001CDD 09                    6714 	add	hl,bc
      001CDE 4D                    6715 	ld	c, l
      001CDF 7C                    6716 	ld	a, h
      001CE0 F8 00                 6717 	ldhl	sp,	#0
      001CE2 71                    6718 	ld	(hl), c
      001CE3 23                    6719 	inc	hl
      001CE4 77                    6720 	ld	(hl), a
                                   6721 ;src/main.c:769: uint8_t i = enemyCollisionCount;
      001CE5 FAr9Dr00              6722 	ld	a, (#_enemyCollisionCount)
      001CE8 F8 10                 6723 	ldhl	sp,	#16
      001CEA 77                    6724 	ld	(hl), a
                                   6725 ;src/main.c:771: if (eptr->visible && eptr->alive) {
      001CEB D1                    6726 	pop	de
      001CEC D5                    6727 	push	de
      001CED 21 0A 00              6728 	ld	hl, #0x000a
      001CF0 19                    6729 	add	hl, de
      001CF1 4D                    6730 	ld	c, l
      001CF2 44                    6731 	ld	b, h
      001CF3 0A                    6732 	ld	a, (bc)
      001CF4 B7                    6733 	or	a, a
      001CF5 CAr47r21              6734 	jp	Z, 00133$
      001CF8 D1                    6735 	pop	de
      001CF9 D5                    6736 	push	de
      001CFA 21 09 00              6737 	ld	hl, #0x0009
      001CFD 19                    6738 	add	hl, de
      001CFE 4D                    6739 	ld	c, l
      001CFF 44                    6740 	ld	b, h
      001D00 0A                    6741 	ld	a, (bc)
      001D01 B7                    6742 	or	a, a
      001D02 CAr47r21              6743 	jp	Z, 00133$
                                   6744 ;src/main.c:773: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D05 D1                    6745 	pop	de
      001D06 D5                    6746 	push	de
      001D07 21 08 00              6747 	ld	hl, #0x0008
      001D0A 19                    6748 	add	hl, de
      001D0B 4D                    6749 	ld	c, l
      001D0C 44                    6750 	ld	b, h
      001D0D 0A                    6751 	ld	a, (bc)
      001D0E 4F                    6752 	ld	c, a
      001D0F 3D                    6753 	dec	a
      001D10 3E 01                 6754 	ld	a, #0x01
      001D12 28 01                 6755 	jr	Z, 00331$
      001D14 AF                    6756 	xor	a, a
      001D15                       6757 00331$:
      001D15 F8 13                 6758 	ldhl	sp,	#19
      001D17 77                    6759 	ld	(hl), a
      001D18 FAr93r00              6760 	ld	a, (#_playerDrawX)
      001D1B F8 14                 6761 	ldhl	sp,	#20
      001D1D 77                    6762 	ld	(hl), a
                                   6763 ;src/main.c:774: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D1E 79                    6764 	ld	a, c
      001D1F D6 02                 6765 	sub	a, #0x02
      001D21 3E 01                 6766 	ld	a, #0x01
      001D23 28 01                 6767 	jr	Z, 00333$
      001D25 AF                    6768 	xor	a, a
      001D26                       6769 00333$:
      001D26 F8 15                 6770 	ldhl	sp,	#21
                                   6771 ;src/main.c:773: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D28 32                    6772 	ld	(hl-), a
      001D29 2B                    6773 	dec	hl
      001D2A 7E                    6774 	ld	a, (hl)
      001D2B B7                    6775 	or	a, a
      001D2C 28 2E                 6776 	jr	Z, 00110$
      001D2E D1                    6777 	pop	de
      001D2F D5                    6778 	push	de
      001D30 1A                    6779 	ld	a, (de)
      001D31 F8 16                 6780 	ldhl	sp,	#22
      001D33 77                    6781 	ld	(hl), a
      001D34 3A                    6782 	ld	a, (hl-)
      001D35 2B                    6783 	dec	hl
      001D36 96                    6784 	sub	a, (hl)
      001D37 23                    6785 	inc	hl
      001D38 23                    6786 	inc	hl
      001D39 77                    6787 	ld	(hl), a
                                   6788 ;src/main.c:347: if (value >= 0) return value;
      001D3A CB 7E                 6789 	bit	7, (hl)
      001D3C 28 05                 6790 	jr	Z, 00141$
                                   6791 ;src/main.c:348: else return - value;
      001D3E AF                    6792 	xor	a, a
      001D3F F8 16                 6793 	ldhl	sp,	#22
      001D41 96                    6794 	sub	a, (hl)
      001D42 77                    6795 	ld	(hl), a
                                   6796 ;src/main.c:773: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D43                       6797 00141$:
      001D43 F8 16                 6798 	ldhl	sp,	#22
      001D45 5E                    6799 	ld	e, (hl)
      001D46 3E 08                 6800 	ld	a,#0x08
      001D48 57                    6801 	ld	d,a
      001D49 96                    6802 	sub	a, (hl)
      001D4A CB 7B                 6803 	bit	7, e
      001D4C 28 07                 6804 	jr	Z, 00334$
      001D4E CB 7A                 6805 	bit	7, d
      001D50 20 08                 6806 	jr	NZ, 00335$
      001D52 BF                    6807 	cp	a, a
      001D53 18 05                 6808 	jr	00335$
      001D55                       6809 00334$:
      001D55 CB 7A                 6810 	bit	7, d
      001D57 28 01                 6811 	jr	Z, 00335$
      001D59 37                    6812 	scf
      001D5A                       6813 00335$:
      001D5A 30 33                 6814 	jr	NC, 00106$
      001D5C                       6815 00110$:
                                   6816 ;src/main.c:774: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D5C F8 15                 6817 	ldhl	sp,	#21
      001D5E 7E                    6818 	ld	a, (hl)
      001D5F B7                    6819 	or	a, a
      001D60 CAr43r1E              6820 	jp	Z, 00107$
      001D63 2B                    6821 	dec	hl
      001D64 D1                    6822 	pop	de
      001D65 D5                    6823 	push	de
      001D66 1A                    6824 	ld	a, (de)
      001D67 96                    6825 	sub	a, (hl)
      001D68 23                    6826 	inc	hl
      001D69 23                    6827 	inc	hl
      001D6A 77                    6828 	ld	(hl), a
                                   6829 ;src/main.c:347: if (value >= 0) return value;
      001D6B CB 7E                 6830 	bit	7, (hl)
      001D6D 28 06                 6831 	jr	Z, 00145$
                                   6832 ;src/main.c:348: else return - value;
      001D6F AF                    6833 	xor	a, a
      001D70 F8 16                 6834 	ldhl	sp,	#22
      001D72 96                    6835 	sub	a, (hl)
      001D73 4F                    6836 	ld	c, a
      001D74 71                    6837 	ld	(hl), c
                                   6838 ;src/main.c:774: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D75                       6839 00145$:
      001D75 F8 16                 6840 	ldhl	sp,	#22
      001D77 5E                    6841 	ld	e, (hl)
      001D78 3E 10                 6842 	ld	a,#0x10
      001D7A 57                    6843 	ld	d,a
      001D7B 96                    6844 	sub	a, (hl)
      001D7C CB 7B                 6845 	bit	7, e
      001D7E 28 07                 6846 	jr	Z, 00336$
      001D80 CB 7A                 6847 	bit	7, d
      001D82 20 08                 6848 	jr	NZ, 00337$
      001D84 BF                    6849 	cp	a, a
      001D85 18 05                 6850 	jr	00337$
      001D87                       6851 00336$:
      001D87 CB 7A                 6852 	bit	7, d
      001D89 28 01                 6853 	jr	Z, 00337$
      001D8B 37                    6854 	scf
      001D8C                       6855 00337$:
      001D8C DAr43r1E              6856 	jp	C, 00107$
      001D8F                       6857 00106$:
                                   6858 ;src/main.c:775: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001D8F C1                    6859 	pop	bc
      001D90 C5                    6860 	push	bc
      001D91 03                    6861 	inc	bc
      001D92 03                    6862 	inc	bc
      001D93 FAr94r00              6863 	ld	a, (#_playerDrawY)
      001D96 F8 16                 6864 	ldhl	sp,	#22
      001D98 77                    6865 	ld	(hl), a
      001D99 F8 13                 6866 	ldhl	sp,	#19
      001D9B 7E                    6867 	ld	a, (hl)
      001D9C B7                    6868 	or	a, a
      001D9D 28 23                 6869 	jr	Z, 00105$
      001D9F 0A                    6870 	ld	a, (bc)
      001DA0 F8 16                 6871 	ldhl	sp,	#22
      001DA2 96                    6872 	sub	a, (hl)
      001DA3 6F                    6873 	ld	l, a
                                   6874 ;	spillPairReg hl
                                   6875 ;	spillPairReg hl
                                   6876 ;src/main.c:347: if (value >= 0) return value;
      001DA4 CB 7D                 6877 	bit	7, l
      001DA6 28 03                 6878 	jr	Z, 00149$
                                   6879 ;src/main.c:348: else return - value;
      001DA8 AF                    6880 	xor	a, a
      001DA9 95                    6881 	sub	a, l
      001DAA 6F                    6882 	ld	l, a
                                   6883 ;	spillPairReg hl
                                   6884 ;	spillPairReg hl
                                   6885 ;src/main.c:775: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001DAB                       6886 00149$:
      001DAB 5D                    6887 	ld	e, l
      001DAC 3E 08                 6888 	ld	a,#0x08
      001DAE 57                    6889 	ld	d,a
      001DAF 95                    6890 	sub	a, l
      001DB0 CB 7B                 6891 	bit	7, e
      001DB2 28 07                 6892 	jr	Z, 00338$
      001DB4 CB 7A                 6893 	bit	7, d
      001DB6 20 08                 6894 	jr	NZ, 00339$
      001DB8 BF                    6895 	cp	a, a
      001DB9 18 05                 6896 	jr	00339$
      001DBB                       6897 00338$:
      001DBB CB 7A                 6898 	bit	7, d
      001DBD 28 01                 6899 	jr	Z, 00339$
      001DBF 37                    6900 	scf
      001DC0                       6901 00339$:
      001DC0 30 28                 6902 	jr	NC, 00101$
      001DC2                       6903 00105$:
                                   6904 ;src/main.c:776: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001DC2 F8 15                 6905 	ldhl	sp,	#21
      001DC4 7E                    6906 	ld	a, (hl)
      001DC5 B7                    6907 	or	a, a
      001DC6 28 7B                 6908 	jr	Z, 00107$
      001DC8 23                    6909 	inc	hl
      001DC9 0A                    6910 	ld	a, (bc)
      001DCA 96                    6911 	sub	a, (hl)
      001DCB 4F                    6912 	ld	c, a
                                   6913 ;src/main.c:347: if (value >= 0) return value;
      001DCC CB 79                 6914 	bit	7, c
      001DCE 28 03                 6915 	jr	Z, 00153$
                                   6916 ;src/main.c:348: else return - value;
      001DD0 AF                    6917 	xor	a, a
      001DD1 91                    6918 	sub	a, c
      001DD2 4F                    6919 	ld	c, a
                                   6920 ;src/main.c:776: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001DD3                       6921 00153$:
      001DD3 59                    6922 	ld	e, c
      001DD4 3E 10                 6923 	ld	a,#0x10
      001DD6 57                    6924 	ld	d,a
      001DD7 91                    6925 	sub	a, c
      001DD8 CB 7B                 6926 	bit	7, e
      001DDA 28 07                 6927 	jr	Z, 00340$
      001DDC CB 7A                 6928 	bit	7, d
      001DDE 20 08                 6929 	jr	NZ, 00341$
      001DE0 BF                    6930 	cp	a, a
      001DE1 18 05                 6931 	jr	00341$
      001DE3                       6932 00340$:
      001DE3 CB 7A                 6933 	bit	7, d
      001DE5 28 01                 6934 	jr	Z, 00341$
      001DE7 37                    6935 	scf
      001DE8                       6936 00341$:
      001DE8 38 59                 6937 	jr	C, 00107$
      001DEA                       6938 00101$:
                                   6939 ;src/main.c:778: set_sprite_tile(10+(i<<1), 0x7f);
      001DEA F8 10                 6940 	ldhl	sp,	#16
      001DEC 7E                    6941 	ld	a, (hl)
      001DED 87                    6942 	add	a, a
      001DEE C6 0A                 6943 	add	a, #0x0a
                                   6944 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001DF0 6F                    6945 	ld	l, a
      001DF1 01r00r00              6946 	ld	bc, #_shadow_OAM+0
                                   6947 ;	spillPairReg hl
                                   6948 ;	spillPairReg hl
      001DF4 26 00                 6949 	ld	h, #0x00
                                   6950 ;	spillPairReg hl
                                   6951 ;	spillPairReg hl
      001DF6 29                    6952 	add	hl, hl
      001DF7 29                    6953 	add	hl, hl
      001DF8 09                    6954 	add	hl, bc
      001DF9 23                    6955 	inc	hl
      001DFA 23                    6956 	inc	hl
      001DFB 36 7F                 6957 	ld	(hl), #0x7f
                                   6958 ;src/main.c:779: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001DFD F8 10                 6959 	ldhl	sp,	#16
      001DFF 7E                    6960 	ld	a, (hl)
      001E00 87                    6961 	add	a, a
      001E01 C6 0B                 6962 	add	a, #0x0b
                                   6963 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E03 6F                    6964 	ld	l, a
      001E04 01r00r00              6965 	ld	bc, #_shadow_OAM+0
                                   6966 ;	spillPairReg hl
                                   6967 ;	spillPairReg hl
      001E07 26 00                 6968 	ld	h, #0x00
                                   6969 ;	spillPairReg hl
                                   6970 ;	spillPairReg hl
      001E09 29                    6971 	add	hl, hl
      001E0A 29                    6972 	add	hl, hl
      001E0B 09                    6973 	add	hl, bc
      001E0C 23                    6974 	inc	hl
      001E0D 23                    6975 	inc	hl
      001E0E 36 7F                 6976 	ld	(hl), #0x7f
                                   6977 ;src/main.c:780: eptr->alive = 0;
      001E10 D1                    6978 	pop	de
      001E11 D5                    6979 	push	de
      001E12 21 09 00              6980 	ld	hl, #0x0009
      001E15 19                    6981 	add	hl, de
      001E16 4D                    6982 	ld	c, l
      001E17 44                    6983 	ld	b, h
      001E18 AF                    6984 	xor	a, a
      001E19 02                    6985 	ld	(bc), a
                                   6986 ;src/main.c:781: eptr->visible = 0;
      001E1A D1                    6987 	pop	de
      001E1B D5                    6988 	push	de
      001E1C 21 0A 00              6989 	ld	hl, #0x000a
      001E1F 19                    6990 	add	hl, de
      001E20 4D                    6991 	ld	c, l
      001E21 44                    6992 	ld	b, h
      001E22 AF                    6993 	xor	a, a
      001E23 02                    6994 	ld	(bc), a
                                   6995 ;src/main.c:782: takeDamage(eptr->damage);
      001E24 D1                    6996 	pop	de
      001E25 D5                    6997 	push	de
      001E26 21 0B 00              6998 	ld	hl, #0x000b
      001E29 19                    6999 	add	hl, de
      001E2A 4D                    7000 	ld	c, l
      001E2B 44                    7001 	ld	b, h
      001E2C 0A                    7002 	ld	a, (bc)
      001E2D 06 00                 7003 	ld	b, #0x00
      001E2F 4F                    7004 	ld	c, a
      001E30 C5                    7005 	push	bc
      001E31 CDr12r1C              7006 	call	_takeDamage
      001E34 E1                    7007 	pop	hl
                                   7008 ;src/main.c:783: initEnemies(0);
      001E35 AF                    7009 	xor	a, a
      001E36 F5                    7010 	push	af
      001E37 33                    7011 	inc	sp
      001E38 CDr04r0D              7012 	call	_initEnemies
      001E3B 33                    7013 	inc	sp
                                   7014 ;src/main.c:784: playSound(0);
      001E3C AF                    7015 	xor	a, a
      001E3D F5                    7016 	push	af
      001E3E 33                    7017 	inc	sp
      001E3F CDrA1r0C              7018 	call	_playSound
      001E42 33                    7019 	inc	sp
      001E43                       7020 00107$:
                                   7021 ;src/main.c:790: struct Projectile *pptr = projectiles;
      001E43 F8 13                 7022 	ldhl	sp,	#19
      001E45 3ErAA                 7023 	ld	a, #<(_projectiles)
      001E47 22                    7024 	ld	(hl+), a
      001E48 36s00                 7025 	ld	(hl), #>(_projectiles)
                                   7026 ;src/main.c:792: while (j < PROJECTILECOUNT) {
      001E4A D1                    7027 	pop	de
      001E4B D5                    7028 	push	de
      001E4C 21 02 00              7029 	ld	hl, #0x0002
      001E4F 19                    7030 	add	hl, de
      001E50 E5                    7031 	push	hl
      001E51 7D                    7032 	ld	a, l
      001E52 F8 04                 7033 	ldhl	sp,	#4
      001E54 77                    7034 	ld	(hl), a
      001E55 E1                    7035 	pop	hl
      001E56 7C                    7036 	ld	a, h
      001E57 F8 03                 7037 	ldhl	sp,	#3
      001E59 77                    7038 	ld	(hl), a
      001E5A D1                    7039 	pop	de
      001E5B D5                    7040 	push	de
      001E5C 21 08 00              7041 	ld	hl, #0x0008
      001E5F 19                    7042 	add	hl, de
      001E60 E5                    7043 	push	hl
      001E61 7D                    7044 	ld	a, l
      001E62 F8 06                 7045 	ldhl	sp,	#6
      001E64 77                    7046 	ld	(hl), a
      001E65 E1                    7047 	pop	hl
      001E66 7C                    7048 	ld	a, h
      001E67 F8 05                 7049 	ldhl	sp,	#5
      001E69 77                    7050 	ld	(hl), a
      001E6A F8 02                 7051 	ldhl	sp,	#2
      001E6C 7E                    7052 	ld	a, (hl)
      001E6D F8 06                 7053 	ldhl	sp,	#6
      001E6F 77                    7054 	ld	(hl), a
      001E70 F8 03                 7055 	ldhl	sp,	#3
      001E72 7E                    7056 	ld	a, (hl)
      001E73 F8 07                 7057 	ldhl	sp,	#7
      001E75 77                    7058 	ld	(hl), a
      001E76 F8 02                 7059 	ldhl	sp,	#2
      001E78 7E                    7060 	ld	a, (hl)
      001E79 F8 08                 7061 	ldhl	sp,	#8
      001E7B 77                    7062 	ld	(hl), a
      001E7C F8 03                 7063 	ldhl	sp,	#3
      001E7E 7E                    7064 	ld	a, (hl)
      001E7F F8 09                 7065 	ldhl	sp,	#9
      001E81 77                    7066 	ld	(hl), a
      001E82 F8 15                 7067 	ldhl	sp,	#21
      001E84 36 00                 7068 	ld	(hl), #0x00
      001E86                       7069 00129$:
      001E86 21r99r08              7070 	ld	hl, #_PROJECTILECOUNT
      001E89 4E                    7071 	ld	c, (hl)
      001E8A F8 15                 7072 	ldhl	sp,	#21
      001E8C 7E                    7073 	ld	a, (hl)
      001E8D 91                    7074 	sub	a, c
      001E8E D2r47r21              7075 	jp	NC, 00133$
                                   7076 ;src/main.c:793: if (pptr->active) {
      001E91 2B                    7077 	dec	hl
      001E92 2B                    7078 	dec	hl
      001E93 2A                    7079 	ld	a, (hl+)
      001E94 5F                    7080 	ld	e, a
      001E95 56                    7081 	ld	d, (hl)
      001E96 21 09 00              7082 	ld	hl, #0x0009
      001E99 19                    7083 	add	hl, de
      001E9A 4D                    7084 	ld	c, l
      001E9B 44                    7085 	ld	b, h
      001E9C 0A                    7086 	ld	a, (bc)
      001E9D B7                    7087 	or	a, a
      001E9E CAr2Er21              7088 	jp	Z, 00128$
                                   7089 ;src/main.c:797: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001EA1 F8 04                 7090 	ldhl	sp,#4
      001EA3 2A                    7091 	ld	a, (hl+)
      001EA4 5F                    7092 	ld	e, a
      001EA5 56                    7093 	ld	d, (hl)
      001EA6 1A                    7094 	ld	a, (de)
      001EA7 4F                    7095 	ld	c, a
      001EA8 3D                    7096 	dec	a
      001EA9 3E 01                 7097 	ld	a, #0x01
      001EAB 28 01                 7098 	jr	Z, 00343$
      001EAD AF                    7099 	xor	a, a
      001EAE                       7100 00343$:
      001EAE F8 11                 7101 	ldhl	sp,	#17
      001EB0 77                    7102 	ld	(hl), a
                                   7103 ;src/main.c:798: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001EB1 79                    7104 	ld	a, c
      001EB2 D6 02                 7105 	sub	a, #0x02
      001EB4 3E 01                 7106 	ld	a, #0x01
      001EB6 28 01                 7107 	jr	Z, 00345$
      001EB8 AF                    7108 	xor	a, a
      001EB9                       7109 00345$:
      001EB9 F8 12                 7110 	ldhl	sp,	#18
                                   7111 ;src/main.c:797: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001EBB 32                    7112 	ld	(hl-), a
      001EBC 7E                    7113 	ld	a, (hl)
      001EBD B7                    7114 	or	a, a
      001EBE 28 2C                 7115 	jr	Z, 00126$
      001EC0 D1                    7116 	pop	de
      001EC1 D5                    7117 	push	de
      001EC2 1A                    7118 	ld	a, (de)
      001EC3 F8 13                 7119 	ldhl	sp,#19
      001EC5 5E                    7120 	ld	e, (hl)
      001EC6 23                    7121 	inc	hl
      001EC7 56                    7122 	ld	d, (hl)
      001EC8 F5                    7123 	push	af
      001EC9 1A                    7124 	ld	a, (de)
      001ECA 4F                    7125 	ld	c, a
      001ECB F1                    7126 	pop	af
      001ECC 91                    7127 	sub	a, c
      001ECD 4F                    7128 	ld	c, a
                                   7129 ;src/main.c:347: if (value >= 0) return value;
      001ECE CB 79                 7130 	bit	7, c
      001ED0 28 03                 7131 	jr	Z, 00159$
                                   7132 ;src/main.c:348: else return - value;
      001ED2 AF                    7133 	xor	a, a
      001ED3 91                    7134 	sub	a, c
      001ED4 4F                    7135 	ld	c, a
                                   7136 ;src/main.c:797: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001ED5                       7137 00159$:
      001ED5 59                    7138 	ld	e, c
      001ED6 3E 08                 7139 	ld	a,#0x08
      001ED8 57                    7140 	ld	d,a
      001ED9 91                    7141 	sub	a, c
      001EDA CB 7B                 7142 	bit	7, e
      001EDC 28 07                 7143 	jr	Z, 00346$
      001EDE CB 7A                 7144 	bit	7, d
      001EE0 20 08                 7145 	jr	NZ, 00347$
      001EE2 BF                    7146 	cp	a, a
      001EE3 18 05                 7147 	jr	00347$
      001EE5                       7148 00346$:
      001EE5 CB 7A                 7149 	bit	7, d
      001EE7 28 01                 7150 	jr	Z, 00347$
      001EE9 37                    7151 	scf
      001EEA                       7152 00347$:
      001EEA 30 3A                 7153 	jr	NC, 00122$
      001EEC                       7154 00126$:
                                   7155 ;src/main.c:798: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001EEC F8 12                 7156 	ldhl	sp,	#18
      001EEE 7E                    7157 	ld	a, (hl)
      001EEF B7                    7158 	or	a, a
      001EF0 CAr2Er21              7159 	jp	Z, 00128$
      001EF3 23                    7160 	inc	hl
      001EF4 D1                    7161 	pop	de
      001EF5 D5                    7162 	push	de
      001EF6 1A                    7163 	ld	a, (de)
      001EF7 5E                    7164 	ld	e, (hl)
      001EF8 23                    7165 	inc	hl
      001EF9 56                    7166 	ld	d, (hl)
      001EFA 23                    7167 	inc	hl
      001EFB 23                    7168 	inc	hl
      001EFC F5                    7169 	push	af
      001EFD 1A                    7170 	ld	a, (de)
      001EFE 4F                    7171 	ld	c, a
      001EFF F1                    7172 	pop	af
      001F00 91                    7173 	sub	a, c
      001F01 77                    7174 	ld	(hl), a
                                   7175 ;src/main.c:347: if (value >= 0) return value;
      001F02 CB 7E                 7176 	bit	7, (hl)
      001F04 20 03                 7177 	jr	NZ, 00161$
      001F06 4E                    7178 	ld	c, (hl)
      001F07 18 05                 7179 	jr	00163$
      001F09                       7180 00161$:
                                   7181 ;src/main.c:348: else return - value;
      001F09 AF                    7182 	xor	a, a
      001F0A F8 16                 7183 	ldhl	sp,	#22
      001F0C 96                    7184 	sub	a, (hl)
      001F0D 4F                    7185 	ld	c, a
                                   7186 ;src/main.c:798: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001F0E                       7187 00163$:
      001F0E 59                    7188 	ld	e, c
      001F0F 3E 10                 7189 	ld	a,#0x10
      001F11 57                    7190 	ld	d,a
      001F12 91                    7191 	sub	a, c
      001F13 CB 7B                 7192 	bit	7, e
      001F15 28 07                 7193 	jr	Z, 00348$
      001F17 CB 7A                 7194 	bit	7, d
      001F19 20 08                 7195 	jr	NZ, 00349$
      001F1B BF                    7196 	cp	a, a
      001F1C 18 05                 7197 	jr	00349$
      001F1E                       7198 00348$:
      001F1E CB 7A                 7199 	bit	7, d
      001F20 28 01                 7200 	jr	Z, 00349$
      001F22 37                    7201 	scf
      001F23                       7202 00349$:
      001F23 DAr2Er21              7203 	jp	C, 00128$
      001F26                       7204 00122$:
                                   7205 ;src/main.c:799: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001F26 F8 13                 7206 	ldhl	sp,	#19
      001F28 2A                    7207 	ld	a, (hl+)
      001F29 4F                    7208 	ld	c, a
      001F2A 46                    7209 	ld	b, (hl)
      001F2B 03                    7210 	inc	bc
      001F2C 03                    7211 	inc	bc
      001F2D F8 11                 7212 	ldhl	sp,	#17
      001F2F 7E                    7213 	ld	a, (hl)
      001F30 B7                    7214 	or	a, a
      001F31 28 2A                 7215 	jr	Z, 00121$
      001F33 F8 06                 7216 	ldhl	sp,#6
      001F35 2A                    7217 	ld	a, (hl+)
      001F36 5F                    7218 	ld	e, a
      001F37 56                    7219 	ld	d, (hl)
      001F38 1A                    7220 	ld	a, (de)
      001F39 F5                    7221 	push	af
      001F3A 0A                    7222 	ld	a, (bc)
      001F3B 5F                    7223 	ld	e, a
      001F3C F1                    7224 	pop	af
      001F3D 93                    7225 	sub	a, e
      001F3E 6F                    7226 	ld	l, a
                                   7227 ;	spillPairReg hl
                                   7228 ;	spillPairReg hl
                                   7229 ;src/main.c:347: if (value >= 0) return value;
      001F3F CB 7D                 7230 	bit	7, l
      001F41 28 03                 7231 	jr	Z, 00167$
                                   7232 ;src/main.c:348: else return - value;
      001F43 AF                    7233 	xor	a, a
      001F44 95                    7234 	sub	a, l
      001F45 6F                    7235 	ld	l, a
                                   7236 ;	spillPairReg hl
                                   7237 ;	spillPairReg hl
                                   7238 ;src/main.c:799: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001F46                       7239 00167$:
      001F46 5D                    7240 	ld	e, l
      001F47 3E 08                 7241 	ld	a,#0x08
      001F49 57                    7242 	ld	d,a
      001F4A 95                    7243 	sub	a, l
      001F4B CB 7B                 7244 	bit	7, e
      001F4D 28 07                 7245 	jr	Z, 00350$
      001F4F CB 7A                 7246 	bit	7, d
      001F51 20 08                 7247 	jr	NZ, 00351$
      001F53 BF                    7248 	cp	a, a
      001F54 18 05                 7249 	jr	00351$
      001F56                       7250 00350$:
      001F56 CB 7A                 7251 	bit	7, d
      001F58 28 01                 7252 	jr	Z, 00351$
      001F5A 37                    7253 	scf
      001F5B                       7254 00351$:
      001F5B 30 32                 7255 	jr	NC, 00117$
      001F5D                       7256 00121$:
                                   7257 ;src/main.c:800: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001F5D F8 12                 7258 	ldhl	sp,	#18
      001F5F 7E                    7259 	ld	a, (hl)
      001F60 B7                    7260 	or	a, a
      001F61 CAr2Er21              7261 	jp	Z, 00128$
      001F64 F8 02                 7262 	ldhl	sp,#2
      001F66 2A                    7263 	ld	a, (hl+)
      001F67 5F                    7264 	ld	e, a
      001F68 56                    7265 	ld	d, (hl)
      001F69 1A                    7266 	ld	a, (de)
      001F6A F5                    7267 	push	af
      001F6B 0A                    7268 	ld	a, (bc)
      001F6C 4F                    7269 	ld	c, a
      001F6D F1                    7270 	pop	af
      001F6E 91                    7271 	sub	a, c
      001F6F 4F                    7272 	ld	c, a
                                   7273 ;src/main.c:347: if (value >= 0) return value;
      001F70 CB 79                 7274 	bit	7, c
      001F72 28 03                 7275 	jr	Z, 00171$
                                   7276 ;src/main.c:348: else return - value;
      001F74 AF                    7277 	xor	a, a
      001F75 91                    7278 	sub	a, c
      001F76 4F                    7279 	ld	c, a
                                   7280 ;src/main.c:800: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001F77                       7281 00171$:
      001F77 59                    7282 	ld	e, c
      001F78 3E 10                 7283 	ld	a,#0x10
      001F7A 57                    7284 	ld	d,a
      001F7B 91                    7285 	sub	a, c
      001F7C CB 7B                 7286 	bit	7, e
      001F7E 28 07                 7287 	jr	Z, 00352$
      001F80 CB 7A                 7288 	bit	7, d
      001F82 20 08                 7289 	jr	NZ, 00353$
      001F84 BF                    7290 	cp	a, a
      001F85 18 05                 7291 	jr	00353$
      001F87                       7292 00352$:
      001F87 CB 7A                 7293 	bit	7, d
      001F89 28 01                 7294 	jr	Z, 00353$
      001F8B 37                    7295 	scf
      001F8C                       7296 00353$:
      001F8C DAr2Er21              7297 	jp	C, 00128$
      001F8F                       7298 00117$:
                                   7299 ;src/main.c:802: set_sprite_tile(30+j, 0x7f);
      001F8F F8 15                 7300 	ldhl	sp,	#21
      001F91 7E                    7301 	ld	a, (hl)
      001F92 C6 1E                 7302 	add	a, #0x1e
                                   7303 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001F94 6F                    7304 	ld	l, a
      001F95 01r00r00              7305 	ld	bc, #_shadow_OAM+0
                                   7306 ;	spillPairReg hl
                                   7307 ;	spillPairReg hl
      001F98 26 00                 7308 	ld	h, #0x00
                                   7309 ;	spillPairReg hl
                                   7310 ;	spillPairReg hl
      001F9A 29                    7311 	add	hl, hl
      001F9B 29                    7312 	add	hl, hl
      001F9C 09                    7313 	add	hl, bc
      001F9D 23                    7314 	inc	hl
      001F9E 23                    7315 	inc	hl
      001F9F 36 7F                 7316 	ld	(hl), #0x7f
                                   7317 ;src/main.c:803: pptr->active = 0;
      001FA1 F8 13                 7318 	ldhl	sp,#19
      001FA3 2A                    7319 	ld	a, (hl+)
      001FA4 5F                    7320 	ld	e, a
      001FA5 56                    7321 	ld	d, (hl)
      001FA6 21 09 00              7322 	ld	hl, #0x0009
      001FA9 19                    7323 	add	hl, de
      001FAA 4D                    7324 	ld	c, l
      001FAB 44                    7325 	ld	b, h
      001FAC AF                    7326 	xor	a, a
      001FAD 02                    7327 	ld	(bc), a
                                   7328 ;src/main.c:805: if (pptr->type == 0x2c) { //missile
      001FAE F8 13                 7329 	ldhl	sp,#19
      001FB0 2A                    7330 	ld	a, (hl+)
      001FB1 5F                    7331 	ld	e, a
      001FB2 56                    7332 	ld	d, (hl)
      001FB3 21 0B 00              7333 	ld	hl, #0x000b
      001FB6 19                    7334 	add	hl, de
      001FB7 4D                    7335 	ld	c, l
      001FB8 44                    7336 	ld	b, h
      001FB9 0A                    7337 	ld	a, (bc)
      001FBA D6 2C                 7338 	sub	a, #0x2c
      001FBC C2r91r20              7339 	jp	NZ,00115$
                                   7340 ;src/main.c:806: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      001FBF F8 13                 7341 	ldhl	sp,#19
      001FC1 2A                    7342 	ld	a, (hl+)
      001FC2 5F                    7343 	ld	e, a
      001FC3 56                    7344 	ld	d, (hl)
      001FC4 21 02 00              7345 	ld	hl, #0x0002
      001FC7 19                    7346 	add	hl, de
      001FC8 E5                    7347 	push	hl
      001FC9 7D                    7348 	ld	a, l
      001FCA F8 0C                 7349 	ldhl	sp,	#12
      001FCC 77                    7350 	ld	(hl), a
      001FCD E1                    7351 	pop	hl
      001FCE 7C                    7352 	ld	a, h
      001FCF F8 0B                 7353 	ldhl	sp,	#11
      001FD1 77                    7354 	ld	(hl), a
      001FD2 F8 16                 7355 	ldhl	sp,	#22
      001FD4 36 00                 7356 	ld	(hl), #0x00
      001FD6                       7357 00184$:
      001FD6 21r88r08              7358 	ld	hl, #_ENEMYCOUNT
      001FD9 4E                    7359 	ld	c, (hl)
      001FDA F8 16                 7360 	ldhl	sp,	#22
      001FDC 7E                    7361 	ld	a, (hl)
      001FDD 91                    7362 	sub	a, c
      001FDE D2r27r21              7363 	jp	NC, 00116$
                                   7364 ;src/main.c:807: int16_t dmg = ((i16abs(pptr->x - enemies[k].x) + i16abs(pptr->y - enemies[k].y))<<1);
      001FE1 2B                    7365 	dec	hl
      001FE2 2B                    7366 	dec	hl
      001FE3 2B                    7367 	dec	hl
      001FE4 2A                    7368 	ld	a, (hl+)
      001FE5 5F                    7369 	ld	e, a
      001FE6 56                    7370 	ld	d, (hl)
      001FE7 1A                    7371 	ld	a, (de)
      001FE8 F8 0E                 7372 	ldhl	sp,	#14
      001FEA 22                    7373 	ld	(hl+), a
      001FEB 13                    7374 	inc	de
      001FEC 1A                    7375 	ld	a, (de)
      001FED 77                    7376 	ld	(hl), a
      001FEE F8 16                 7377 	ldhl	sp,	#22
      001FF0 4E                    7378 	ld	c, (hl)
      001FF1 06 00                 7379 	ld	b, #0x00
      001FF3 69                    7380 	ld	l, c
      001FF4 60                    7381 	ld	h, b
      001FF5 29                    7382 	add	hl, hl
      001FF6 29                    7383 	add	hl, hl
      001FF7 29                    7384 	add	hl, hl
      001FF8 29                    7385 	add	hl, hl
      001FF9 09                    7386 	add	hl, bc
      001FFA E5                    7387 	push	hl
      001FFB 7D                    7388 	ld	a, l
      001FFC F8 13                 7389 	ldhl	sp,	#19
      001FFE 77                    7390 	ld	(hl), a
      001FFF E1                    7391 	pop	hl
      002000 7C                    7392 	ld	a, h
      002001 F8 12                 7393 	ldhl	sp,	#18
      002003 32                    7394 	ld	(hl-), a
      002004 2A                    7395 	ld	a, (hl+)
      002005 5F                    7396 	ld	e, a
      002006 56                    7397 	ld	d, (hl)
      002007 21r55r00              7398 	ld	hl, #_enemies
      00200A 19                    7399 	add	hl, de
      00200B E5                    7400 	push	hl
      00200C 7D                    7401 	ld	a, l
      00200D F8 0E                 7402 	ldhl	sp,	#14
      00200F 77                    7403 	ld	(hl), a
      002010 E1                    7404 	pop	hl
      002011 7C                    7405 	ld	a, h
      002012 F8 0D                 7406 	ldhl	sp,	#13
      002014 32                    7407 	ld	(hl-), a
      002015 2A                    7408 	ld	a, (hl+)
      002016 5F                    7409 	ld	e, a
      002017 56                    7410 	ld	d, (hl)
      002018 1A                    7411 	ld	a, (de)
      002019 F8 11                 7412 	ldhl	sp,	#17
      00201B 22                    7413 	ld	(hl+), a
      00201C 13                    7414 	inc	de
      00201D 1A                    7415 	ld	a, (de)
      00201E 77                    7416 	ld	(hl), a
      00201F F8 0E                 7417 	ldhl	sp,#14
      002021 2A                    7418 	ld	a, (hl+)
      002022 5F                    7419 	ld	e, a
      002023 2A                    7420 	ld	a, (hl+)
      002024 23                    7421 	inc	hl
      002025 57                    7422 	ld	d, a
      002026 2A                    7423 	ld	a,	(hl+)
      002027 66                    7424 	ld	h, (hl)
      002028 6F                    7425 	ld	l, a
      002029 7B                    7426 	ld	a, e
      00202A 95                    7427 	sub	a, l
      00202B 5F                    7428 	ld	e, a
      00202C 7A                    7429 	ld	a, d
      00202D 9C                    7430 	sbc	a, h
      00202E 4B                    7431 	ld	c, e
      00202F F8 0E                 7432 	ldhl	sp,	#14
      002031 71                    7433 	ld	(hl), c
      002032 23                    7434 	inc	hl
      002033 32                    7435 	ld	(hl-), a
      002034 2A                    7436 	ld	a, (hl+)
      002035 CB 7E                 7437 	bit	7, (hl)
      002037 20 0C                 7438 	jr	NZ, 00174$
      002039 2B                    7439 	dec	hl
      00203A 7E                    7440 	ld	a, (hl)
      00203B F8 11                 7441 	ldhl	sp,	#17
      00203D 32                    7442 	ld	(hl-), a
      00203E 2B                    7443 	dec	hl
      00203F 7E                    7444 	ld	a, (hl)
      002040 F8 12                 7445 	ldhl	sp,	#18
      002042 77                    7446 	ld	(hl), a
      002043 18 11                 7447 	jr	00176$
      002045                       7448 00174$:
      002045 11 00 00              7449 	ld	de, #0x0000
      002048 F8 0E                 7450 	ldhl	sp,	#14
      00204A 2A                    7451 	ld	a,	(hl+)
      00204B 66                    7452 	ld	h, (hl)
      00204C 6F                    7453 	ld	l, a
      00204D 7B                    7454 	ld	a, e
      00204E 95                    7455 	sub	a, l
      00204F 5F                    7456 	ld	e, a
      002050 7A                    7457 	ld	a, d
      002051 9C                    7458 	sbc	a, h
      002052 F8 12                 7459 	ldhl	sp,	#18
      002054 32                    7460 	ld	(hl-), a
      002055 73                    7461 	ld	(hl), e
      002056                       7462 00176$:
      002056 F8 0A                 7463 	ldhl	sp,#10
      002058 2A                    7464 	ld	a, (hl+)
      002059 5F                    7465 	ld	e, a
      00205A 2A                    7466 	ld	a, (hl+)
      00205B 57                    7467 	ld	d, a
      00205C 1A                    7468 	ld	a, (de)
      00205D 4F                    7469 	ld	c, a
      00205E 13                    7470 	inc	de
      00205F 1A                    7471 	ld	a, (de)
      002060 47                    7472 	ld	b, a
      002061 2A                    7473 	ld	a, (hl+)
      002062 66                    7474 	ld	h, (hl)
                                   7475 ;	spillPairReg hl
                                   7476 ;	spillPairReg hl
      002063 6F                    7477 	ld	l, a
                                   7478 ;	spillPairReg hl
                                   7479 ;	spillPairReg hl
      002064 23                    7480 	inc	hl
      002065 23                    7481 	inc	hl
      002066 2A                    7482 	ld	a,	(hl+)
      002067 66                    7483 	ld	h, (hl)
                                   7484 ;	spillPairReg hl
      002068 6F                    7485 	ld	l, a
                                   7486 ;	spillPairReg hl
                                   7487 ;	spillPairReg hl
      002069 79                    7488 	ld	a, c
      00206A 95                    7489 	sub	a, l
      00206B 4F                    7490 	ld	c, a
      00206C 78                    7491 	ld	a, b
      00206D 9C                    7492 	sbc	a, h
      00206E 47                    7493 	ld	b, a
                                   7494 ;	spillPairReg hl
                                   7495 ;	spillPairReg hl
      00206F 60                    7496 	ld	h, b
                                   7497 ;	spillPairReg hl
                                   7498 ;	spillPairReg hl
      002070 CB 7C                 7499 	bit	7, h
      002072 28 06                 7500 	jr	Z, 00180$
      002074 AF                    7501 	xor	a, a
      002075 91                    7502 	sub	a, c
      002076 4F                    7503 	ld	c, a
      002077 9F                    7504 	sbc	a, a
      002078 90                    7505 	sub	a, b
      002079 47                    7506 	ld	b, a
      00207A                       7507 00180$:
      00207A F8 11                 7508 	ldhl	sp,	#17
      00207C 2A                    7509 	ld	a,	(hl+)
      00207D 66                    7510 	ld	h, (hl)
      00207E 6F                    7511 	ld	l, a
      00207F 09                    7512 	add	hl, bc
      002080 29                    7513 	add	hl, hl
                                   7514 ;src/main.c:808: printf("%d\n", dmg);
      002081 E5                    7515 	push	hl
      002082 11r5Dr21              7516 	ld	de, #___str_0
      002085 D5                    7517 	push	de
      002086 CDr00r00              7518 	call	_printf
      002089 E8 04                 7519 	add	sp, #4
                                   7520 ;src/main.c:806: for (uint8_t k=0; k < ENEMYCOUNT;++k) {
      00208B F8 16                 7521 	ldhl	sp,	#22
      00208D 34                    7522 	inc	(hl)
      00208E C3rD6r1F              7523 	jp	00184$
      002091                       7524 00115$:
                                   7525 ;src/main.c:813: eptr->hp -= pptr->damage;
      002091 D1                    7526 	pop	de
      002092 D5                    7527 	push	de
      002093 21 10 00              7528 	ld	hl, #0x0010
      002096 19                    7529 	add	hl, de
      002097 5D                    7530 	ld	e, l
      002098 54                    7531 	ld	d, h
      002099 1A                    7532 	ld	a, (de)
      00209A F8 16                 7533 	ldhl	sp,	#22
      00209C 32                    7534 	ld	(hl-), a
      00209D 2B                    7535 	dec	hl
      00209E 2B                    7536 	dec	hl
      00209F D5                    7537 	push	de
      0020A0 2A                    7538 	ld	a, (hl+)
      0020A1 5F                    7539 	ld	e, a
      0020A2 56                    7540 	ld	d, (hl)
      0020A3 21 08 00              7541 	ld	hl, #0x0008
      0020A6 19                    7542 	add	hl, de
      0020A7 D1                    7543 	pop	de
      0020A8 4D                    7544 	ld	c, l
      0020A9 44                    7545 	ld	b, h
      0020AA 0A                    7546 	ld	a, (bc)
      0020AB 4F                    7547 	ld	c, a
      0020AC F8 16                 7548 	ldhl	sp,	#22
      0020AE 7E                    7549 	ld	a, (hl)
      0020AF 91                    7550 	sub	a, c
      0020B0 4F                    7551 	ld	c, a
      0020B1 12                    7552 	ld	(de), a
                                   7553 ;src/main.c:815: if (eptr->hp <= 0) {
      0020B2 59                    7554 	ld	e, c
      0020B3 AF                    7555 	xor	a, a
      0020B4 57                    7556 	ld	d, a
      0020B5 91                    7557 	sub	a, c
      0020B6 CB 7B                 7558 	bit	7, e
      0020B8 28 07                 7559 	jr	Z, 00356$
      0020BA CB 7A                 7560 	bit	7, d
      0020BC 20 08                 7561 	jr	NZ, 00357$
      0020BE BF                    7562 	cp	a, a
      0020BF 18 05                 7563 	jr	00357$
      0020C1                       7564 00356$:
      0020C1 CB 7A                 7565 	bit	7, d
      0020C3 28 01                 7566 	jr	Z, 00357$
      0020C5 37                    7567 	scf
      0020C6                       7568 00357$:
      0020C6 38 5F                 7569 	jr	C, 00116$
                                   7570 ;src/main.c:817: set_sprite_tile(10+(i<<1), 0x7f);
      0020C8 F8 10                 7571 	ldhl	sp,	#16
      0020CA 7E                    7572 	ld	a, (hl)
      0020CB 87                    7573 	add	a, a
      0020CC 4F                    7574 	ld	c, a
      0020CD C6 0A                 7575 	add	a, #0x0a
      0020CF 47                    7576 	ld	b, a
                                   7577 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0020D0 26 00                 7578 	ld	h, #0x00
                                   7579 ;	spillPairReg hl
                                   7580 ;	spillPairReg hl
      0020D2 68                    7581 	ld	l, b
      0020D3 29                    7582 	add	hl, hl
      0020D4 29                    7583 	add	hl, hl
      0020D5 11r00r00              7584 	ld	de, #_shadow_OAM
      0020D8 19                    7585 	add	hl, de
      0020D9 23                    7586 	inc	hl
      0020DA 23                    7587 	inc	hl
      0020DB 36 7F                 7588 	ld	(hl), #0x7f
                                   7589 ;src/main.c:818: set_sprite_tile(10+(i<<1)+1, 0x7f);
      0020DD 79                    7590 	ld	a, c
      0020DE C6 0B                 7591 	add	a, #0x0b
      0020E0 4F                    7592 	ld	c, a
                                   7593 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0020E1 26 00                 7594 	ld	h, #0x00
                                   7595 ;	spillPairReg hl
                                   7596 ;	spillPairReg hl
      0020E3 69                    7597 	ld	l, c
      0020E4 29                    7598 	add	hl, hl
      0020E5 29                    7599 	add	hl, hl
      0020E6 11r00r00              7600 	ld	de, #_shadow_OAM
      0020E9 19                    7601 	add	hl, de
      0020EA 23                    7602 	inc	hl
      0020EB 23                    7603 	inc	hl
      0020EC 36 7F                 7604 	ld	(hl), #0x7f
                                   7605 ;src/main.c:820: spawnPickup(eptr->x, eptr->y);
      0020EE F8 08                 7606 	ldhl	sp,#8
      0020F0 2A                    7607 	ld	a, (hl+)
      0020F1 5F                    7608 	ld	e, a
      0020F2 56                    7609 	ld	d, (hl)
      0020F3 1A                    7610 	ld	a, (de)
      0020F4 4F                    7611 	ld	c, a
      0020F5 13                    7612 	inc	de
      0020F6 1A                    7613 	ld	a, (de)
      0020F7 47                    7614 	ld	b, a
      0020F8 D1                    7615 	pop	de
      0020F9 D5                    7616 	push	de
      0020FA 1A                    7617 	ld	a, (de)
      0020FB 6F                    7618 	ld	l, a
                                   7619 ;	spillPairReg hl
                                   7620 ;	spillPairReg hl
      0020FC 13                    7621 	inc	de
      0020FD 1A                    7622 	ld	a, (de)
      0020FE 67                    7623 	ld	h, a
                                   7624 ;	spillPairReg hl
                                   7625 ;	spillPairReg hl
      0020FF C5                    7626 	push	bc
      002100 E5                    7627 	push	hl
      002101 CDr56r1C              7628 	call	_spawnPickup
      002104 E8 04                 7629 	add	sp, #4
                                   7630 ;src/main.c:822: eptr->alive = 0;
      002106 D1                    7631 	pop	de
      002107 D5                    7632 	push	de
      002108 21 09 00              7633 	ld	hl, #0x0009
      00210B 19                    7634 	add	hl, de
      00210C 4D                    7635 	ld	c, l
      00210D 44                    7636 	ld	b, h
      00210E AF                    7637 	xor	a, a
      00210F 02                    7638 	ld	(bc), a
                                   7639 ;src/main.c:823: eptr->visible = 0;
      002110 D1                    7640 	pop	de
      002111 D5                    7641 	push	de
      002112 21 0A 00              7642 	ld	hl, #0x000a
      002115 19                    7643 	add	hl, de
      002116 4D                    7644 	ld	c, l
      002117 44                    7645 	ld	b, h
      002118 AF                    7646 	xor	a, a
      002119 02                    7647 	ld	(bc), a
                                   7648 ;src/main.c:824: playSound(0);
      00211A AF                    7649 	xor	a, a
      00211B F5                    7650 	push	af
      00211C 33                    7651 	inc	sp
      00211D CDrA1r0C              7652 	call	_playSound
      002120 33                    7653 	inc	sp
                                   7654 ;src/main.c:825: incrementScore();
      002121 CDr5Er0A              7655 	call	_incrementScore
                                   7656 ;src/main.c:826: updateScore();
      002124 CDrAFr09              7657 	call	_updateScore
      002127                       7658 00116$:
                                   7659 ;src/main.c:834: initEnemies(0);
      002127 AF                    7660 	xor	a, a
      002128 F5                    7661 	push	af
      002129 33                    7662 	inc	sp
      00212A CDr04r0D              7663 	call	_initEnemies
      00212D 33                    7664 	inc	sp
      00212E                       7665 00128$:
                                   7666 ;src/main.c:841: j++;
      00212E F8 15                 7667 	ldhl	sp,	#21
      002130 34                    7668 	inc	(hl)
                                   7669 ;src/main.c:842: pptr++;
      002131 2B                    7670 	dec	hl
      002132 2B                    7671 	dec	hl
      002133 2A                    7672 	ld	a, (hl+)
      002134 5F                    7673 	ld	e, a
      002135 56                    7674 	ld	d, (hl)
      002136 21 0C 00              7675 	ld	hl, #0x000c
      002139 19                    7676 	add	hl, de
      00213A E5                    7677 	push	hl
      00213B 7D                    7678 	ld	a, l
      00213C F8 15                 7679 	ldhl	sp,	#21
      00213E 77                    7680 	ld	(hl), a
      00213F E1                    7681 	pop	hl
      002140 7C                    7682 	ld	a, h
      002141 F8 14                 7683 	ldhl	sp,	#20
      002143 77                    7684 	ld	(hl), a
      002144 C3r86r1E              7685 	jp	00129$
      002147                       7686 00133$:
                                   7687 ;src/main.c:846: if (enemyCollisionCount == 0) {
      002147 FAr9Dr00              7688 	ld	a, (#_enemyCollisionCount)
      00214A B7                    7689 	or	a, a
      00214B 20 09                 7690 	jr	NZ, 00136$
                                   7691 ;src/main.c:847: enemyCollisionCount = ENEMYCOUNT - 1;
      00214D FAr88r08              7692 	ld	a, (#_ENEMYCOUNT)
      002150 3D                    7693 	dec	a
      002151 EAr9Dr00              7694 	ld	(#_enemyCollisionCount),a
      002154 18 04                 7695 	jr	00186$
      002156                       7696 00136$:
                                   7697 ;src/main.c:850: enemyCollisionCount--;
      002156 21r9Dr00              7698 	ld	hl, #_enemyCollisionCount
      002159 35                    7699 	dec	(hl)
      00215A                       7700 00186$:
                                   7701 ;src/main.c:855: }
      00215A E8 17                 7702 	add	sp, #23
      00215C C9                    7703 	ret
      00215D                       7704 ___str_0:
      00215D 25 64                 7705 	.ascii "%d"
      00215F 0A                    7706 	.db 0x0a
      002160 00                    7707 	.db 0x00
                                   7708 ;src/main.c:858: void setGunIcon() {
                                   7709 ;	---------------------------------
                                   7710 ; Function setGunIcon
                                   7711 ; ---------------------------------
      002161                       7712 _setGunIcon::
                                   7713 ;src/main.c:860: if (currentGun == 0) {
      002161 FAr9Fr00              7714 	ld	a, (#_currentGun)
      002164 B7                    7715 	or	a, a
      002165 20 1B                 7716 	jr	NZ, 00102$
                                   7717 ;src/main.c:861: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      002167 01rA7r00              7718 	ld	bc, #_gunMap+0
      00216A 79                    7719 	ld	a, c
      00216B 21r9Er00              7720 	ld	hl, #_gunLevel
      00216E 86                    7721 	add	a, (hl)
      00216F 4F                    7722 	ld	c, a
      002170 30 01                 7723 	jr	NC, 00111$
      002172 04                    7724 	inc	b
      002173                       7725 00111$:
      002173 C5                    7726 	push	bc
      002174 21 01 01              7727 	ld	hl, #0x101
      002177 E5                    7728 	push	hl
      002178 21 0F 00              7729 	ld	hl, #0x0f
      00217B E5                    7730 	push	hl
      00217C CDr00r00              7731 	call	_set_win_tiles
      00217F E8 06                 7732 	add	sp, #6
      002181 C9                    7733 	ret
      002182                       7734 00102$:
                                   7735 ;src/main.c:864: set_win_tiles(15, 0,1,1,gunMap+2);
      002182 11rA9r00              7736 	ld	de, #(_gunMap + 2)
      002185 D5                    7737 	push	de
      002186 21 01 01              7738 	ld	hl, #0x101
      002189 E5                    7739 	push	hl
      00218A 21 0F 00              7740 	ld	hl, #0x0f
      00218D E5                    7741 	push	hl
      00218E CDr00r00              7742 	call	_set_win_tiles
      002191 E8 06                 7743 	add	sp, #6
                                   7744 ;src/main.c:866: }
      002193 C9                    7745 	ret
                                   7746 ;src/main.c:876: void fire() {
                                   7747 ;	---------------------------------
                                   7748 ; Function fire
                                   7749 ; ---------------------------------
      002194                       7750 _fire::
      002194 E8 FB                 7751 	add	sp, #-5
                                   7752 ;src/main.c:878: oldestProjectile += 1;
      002196 21r89r00              7753 	ld	hl, #_oldestProjectile
      002199 34                    7754 	inc	(hl)
      00219A 7E                    7755 	ld	a, (hl)
                                   7756 ;src/main.c:879: if (oldestProjectile >= PROJECTILECOUNT) {
      00219B 21r99r08              7757 	ld	hl, #_PROJECTILECOUNT
      00219E 4E                    7758 	ld	c, (hl)
      00219F 21r89r00              7759 	ld	hl, #_oldestProjectile
      0021A2 7E                    7760 	ld	a, (hl)
      0021A3 91                    7761 	sub	a, c
      0021A4 38 02                 7762 	jr	C, 00102$
                                   7763 ;src/main.c:880: oldestProjectile = 0;
      0021A6 36 00                 7764 	ld	(hl), #0x00
      0021A8                       7765 00102$:
                                   7766 ;src/main.c:883: if (currentGun == 0) {
      0021A8 FAr9Fr00              7767 	ld	a, (#_currentGun)
      0021AB B7                    7768 	or	a, a
      0021AC 20 3A                 7769 	jr	NZ, 00107$
                                   7770 ;src/main.c:885: projectiles[oldestProjectile] = singleGun;
      0021AE 21r89r00              7771 	ld	hl, #_oldestProjectile
      0021B1 4E                    7772 	ld	c, (hl)
      0021B2 06 00                 7773 	ld	b, #0x00
      0021B4 69                    7774 	ld	l, c
      0021B5 60                    7775 	ld	h, b
      0021B6 29                    7776 	add	hl, hl
      0021B7 09                    7777 	add	hl, bc
      0021B8 29                    7778 	add	hl, hl
      0021B9 29                    7779 	add	hl, hl
      0021BA 4D                    7780 	ld	c, l
      0021BB 44                    7781 	ld	b, h
                                   7782 ;src/main.c:884: if (gunLevel == 0) {
      0021BC FAr9Er00              7783 	ld	a, (#_gunLevel)
      0021BF B7                    7784 	or	a, a
      0021C0 20 14                 7785 	jr	NZ, 00104$
                                   7786 ;src/main.c:885: projectiles[oldestProjectile] = singleGun;
      0021C2 11r65r00              7787 	ld	de, #_singleGun+0
      0021C5 21rAAr00              7788 	ld	hl, #_projectiles
      0021C8 09                    7789 	add	hl, bc
      0021C9 01 0C 00              7790 	ld	bc, #0x000c
      0021CC C5                    7791 	push	bc
      0021CD D5                    7792 	push	de
      0021CE E5                    7793 	push	hl
      0021CF CDr00r00              7794 	call	___memcpy
      0021D2 E8 06                 7795 	add	sp, #6
      0021D4 18 12                 7796 	jr	00107$
      0021D6                       7797 00104$:
                                   7798 ;src/main.c:888: projectiles[oldestProjectile] = doubleGun;
      0021D6 11r71r00              7799 	ld	de, #_doubleGun+0
      0021D9 21rAAr00              7800 	ld	hl, #_projectiles
      0021DC 09                    7801 	add	hl, bc
      0021DD 01 0C 00              7802 	ld	bc, #0x000c
      0021E0 C5                    7803 	push	bc
      0021E1 D5                    7804 	push	de
      0021E2 E5                    7805 	push	hl
      0021E3 CDr00r00              7806 	call	___memcpy
      0021E6 E8 06                 7807 	add	sp, #6
      0021E8                       7808 00107$:
                                   7809 ;src/main.c:891: if (currentGun == 1) {
      0021E8 FAr9Fr00              7810 	ld	a, (#_currentGun)
      0021EB 3D                    7811 	dec	a
      0021EC 20 45                 7812 	jr	NZ, 00113$
                                   7813 ;src/main.c:892: if (missiles == 0) {
      0021EE FArA0r00              7814 	ld	a, (#_missiles)
      0021F1 B7                    7815 	or	a, a
      0021F2 20 0B                 7816 	jr	NZ, 00109$
                                   7817 ;src/main.c:893: currentGun = 0;
      0021F4 21r9Fr00              7818 	ld	hl, #_currentGun
      0021F7 36 00                 7819 	ld	(hl), #0x00
                                   7820 ;src/main.c:894: setGunIcon();
      0021F9 CDr61r21              7821 	call	_setGunIcon
                                   7822 ;src/main.c:895: return;
      0021FC C3r2Ar27              7823 	jp	00154$
      0021FF                       7824 00109$:
                                   7825 ;src/main.c:898: projectiles[oldestProjectile] = missile;
      0021FF 21r89r00              7826 	ld	hl, #_oldestProjectile
      002202 4E                    7827 	ld	c, (hl)
      002203 06 00                 7828 	ld	b, #0x00
      002205 69                    7829 	ld	l, c
      002206 60                    7830 	ld	h, b
      002207 29                    7831 	add	hl, hl
      002208 09                    7832 	add	hl, bc
      002209 29                    7833 	add	hl, hl
      00220A 29                    7834 	add	hl, hl
      00220B 01rAAr00              7835 	ld	bc,#_projectiles
      00220E 09                    7836 	add	hl,bc
      00220F 11 0C 00              7837 	ld	de, #0x000c
      002212 D5                    7838 	push	de
      002213 11r7Dr00              7839 	ld	de, #_missile
      002216 D5                    7840 	push	de
      002217 E5                    7841 	push	hl
      002218 CDr00r00              7842 	call	___memcpy
      00221B E8 06                 7843 	add	sp, #6
                                   7844 ;src/main.c:899: updateMissileCount(-1);
      00221D 3E FF                 7845 	ld	a, #0xff
      00221F F5                    7846 	push	af
      002220 33                    7847 	inc	sp
      002221 CDrD9r09              7848 	call	_updateMissileCount
      002224 33                    7849 	inc	sp
                                   7850 ;src/main.c:901: if (missiles == 0) {
      002225 FArA0r00              7851 	ld	a, (#_missiles)
      002228 B7                    7852 	or	a, a
      002229 20 08                 7853 	jr	NZ, 00113$
                                   7854 ;src/main.c:902: currentGun = 0;
      00222B 21r9Fr00              7855 	ld	hl, #_currentGun
      00222E 36 00                 7856 	ld	(hl), #0x00
                                   7857 ;src/main.c:903: setGunIcon();
      002230 CDr61r21              7858 	call	_setGunIcon
      002233                       7859 00113$:
                                   7860 ;src/main.c:906: projectiles[oldestProjectile].x = playerDrawX;
      002233 21r89r00              7861 	ld	hl, #_oldestProjectile
      002236 4E                    7862 	ld	c, (hl)
      002237 06 00                 7863 	ld	b, #0x00
      002239 69                    7864 	ld	l, c
      00223A 60                    7865 	ld	h, b
      00223B 29                    7866 	add	hl, hl
      00223C 09                    7867 	add	hl, bc
      00223D 29                    7868 	add	hl, hl
      00223E 29                    7869 	add	hl, hl
      00223F 01rAAr00              7870 	ld	bc,#_projectiles
      002242 09                    7871 	add	hl,bc
      002243 E5                    7872 	push	hl
      002244 FAr93r00              7873 	ld	a, (#_playerDrawX)
      002247 E1                    7874 	pop	hl
      002248 0E 00                 7875 	ld	c, #0x00
      00224A 22                    7876 	ld	(hl+), a
      00224B 71                    7877 	ld	(hl), c
                                   7878 ;src/main.c:907: projectiles[oldestProjectile].y = playerDrawY;
      00224C 21r89r00              7879 	ld	hl, #_oldestProjectile
      00224F 4E                    7880 	ld	c, (hl)
      002250 06 00                 7881 	ld	b, #0x00
      002252 69                    7882 	ld	l, c
      002253 60                    7883 	ld	h, b
      002254 29                    7884 	add	hl, hl
      002255 09                    7885 	add	hl, bc
      002256 29                    7886 	add	hl, hl
      002257 29                    7887 	add	hl, hl
      002258 01rAAr00              7888 	ld	bc,#_projectiles
      00225B 09                    7889 	add	hl,bc
      00225C 23                    7890 	inc	hl
      00225D 23                    7891 	inc	hl
      00225E E5                    7892 	push	hl
      00225F FAr94r00              7893 	ld	a, (#_playerDrawY)
      002262 E1                    7894 	pop	hl
      002263 0E 00                 7895 	ld	c, #0x00
      002265 22                    7896 	ld	(hl+), a
      002266 71                    7897 	ld	(hl), c
                                   7898 ;src/main.c:908: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      002267 21r89r00              7899 	ld	hl, #_oldestProjectile
      00226A 4E                    7900 	ld	c, (hl)
      00226B 06 00                 7901 	ld	b, #0x00
      00226D 69                    7902 	ld	l, c
      00226E 60                    7903 	ld	h, b
      00226F 29                    7904 	add	hl, hl
      002270 09                    7905 	add	hl, bc
      002271 29                    7906 	add	hl, hl
      002272 29                    7907 	add	hl, hl
      002273 01rAAr00              7908 	ld	bc,#_projectiles
      002276 09                    7909 	add	hl,bc
      002277 5D                    7910 	ld	e, l
      002278 54                    7911 	ld	d, h
      002279 21 05 00              7912 	ld	hl, #0x0005
      00227C 19                    7913 	add	hl, de
      00227D 4D                    7914 	ld	c, l
      00227E 44                    7915 	ld	b, h
      00227F 21 07 00              7916 	ld	hl, #0x0007
      002282 19                    7917 	add	hl, de
      002283 7E                    7918 	ld	a, (hl)
      002284 C5                    7919 	push	bc
      002285 F5                    7920 	push	af
      002286 33                    7921 	inc	sp
      002287 FAr8Br00              7922 	ld	a, (#_xDir)
      00228A F5                    7923 	push	af
      00228B 33                    7924 	inc	sp
      00228C CDr00r00              7925 	call	__muluschar
      00228F E1                    7926 	pop	hl
      002290 7B                    7927 	ld	a, e
      002291 C1                    7928 	pop	bc
      002292 02                    7929 	ld	(bc), a
                                   7930 ;src/main.c:909: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      002293 21r89r00              7931 	ld	hl, #_oldestProjectile
      002296 4E                    7932 	ld	c, (hl)
      002297 06 00                 7933 	ld	b, #0x00
      002299 69                    7934 	ld	l, c
      00229A 60                    7935 	ld	h, b
      00229B 29                    7936 	add	hl, hl
      00229C 09                    7937 	add	hl, bc
      00229D 29                    7938 	add	hl, hl
      00229E 29                    7939 	add	hl, hl
      00229F 01rAAr00              7940 	ld	bc,#_projectiles
      0022A2 09                    7941 	add	hl,bc
      0022A3 5D                    7942 	ld	e, l
      0022A4 54                    7943 	ld	d, h
      0022A5 21 06 00              7944 	ld	hl, #0x0006
      0022A8 19                    7945 	add	hl, de
      0022A9 4D                    7946 	ld	c, l
      0022AA 44                    7947 	ld	b, h
      0022AB 21 07 00              7948 	ld	hl, #0x0007
      0022AE 19                    7949 	add	hl, de
      0022AF 7E                    7950 	ld	a, (hl)
      0022B0 C5                    7951 	push	bc
      0022B1 F5                    7952 	push	af
      0022B2 33                    7953 	inc	sp
      0022B3 FAr8Cr00              7954 	ld	a, (#_yDir)
      0022B6 F5                    7955 	push	af
      0022B7 33                    7956 	inc	sp
      0022B8 CDr00r00              7957 	call	__muluschar
      0022BB E1                    7958 	pop	hl
      0022BC 7B                    7959 	ld	a, e
      0022BD C1                    7960 	pop	bc
      0022BE 02                    7961 	ld	(bc), a
                                   7962 ;src/main.c:878: oldestProjectile += 1;
      0022BF FAr89r00              7963 	ld	a, (#_oldestProjectile)
      0022C2 F8 04                 7964 	ldhl	sp,	#4
      0022C4 77                    7965 	ld	(hl), a
                                   7966 ;src/main.c:885: projectiles[oldestProjectile] = singleGun;
      0022C5 21r89r00              7967 	ld	hl, #_oldestProjectile
      0022C8 4E                    7968 	ld	c, (hl)
      0022C9 06 00                 7969 	ld	b, #0x00
      0022CB 69                    7970 	ld	l, c
      0022CC 60                    7971 	ld	h, b
      0022CD 29                    7972 	add	hl, hl
      0022CE 09                    7973 	add	hl, bc
      0022CF 29                    7974 	add	hl, hl
      0022D0 29                    7975 	add	hl, hl
                                   7976 ;src/main.c:914: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0022D1 01rAAr00              7977 	ld	bc,#_projectiles
      0022D4 09                    7978 	add	hl,bc
      0022D5 4D                    7979 	ld	c, l
      0022D6 44                    7980 	ld	b, h
      0022D7 F8 04                 7981 	ldhl	sp,	#4
      0022D9 3A                    7982 	ld	a, (hl-)
      0022DA C6 1E                 7983 	add	a, #0x1e
      0022DC 77                    7984 	ld	(hl), a
      0022DD 21 0B 00              7985 	ld	hl, #0x000b
      0022E0 09                    7986 	add	hl, bc
      0022E1 7E                    7987 	ld	a, (hl)
      0022E2 F8 04                 7988 	ldhl	sp,	#4
      0022E4 77                    7989 	ld	(hl), a
                                   7990 ;src/main.c:913: if (yDir != 0 && xDir == 0) {
      0022E5 FAr8Cr00              7991 	ld	a, (#_yDir)
      0022E8 B7                    7992 	or	a, a
      0022E9 28 6F                 7993 	jr	Z, 00140$
      0022EB FAr8Br00              7994 	ld	a, (#_xDir)
      0022EE B7                    7995 	or	a, a
      0022EF 20 69                 7996 	jr	NZ, 00140$
                                   7997 ;src/main.c:914: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0022F1 F8 04                 7998 	ldhl	sp,	#4
      0022F3 3A                    7999 	ld	a, (hl-)
      0022F4 4F                    8000 	ld	c, a
                                   8001 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0022F5 6E                    8002 	ld	l, (hl)
                                   8003 ;	spillPairReg hl
                                   8004 ;	spillPairReg hl
      0022F6 26 00                 8005 	ld	h, #0x00
                                   8006 ;	spillPairReg hl
                                   8007 ;	spillPairReg hl
      0022F8 29                    8008 	add	hl, hl
      0022F9 29                    8009 	add	hl, hl
      0022FA 11r00r00              8010 	ld	de, #_shadow_OAM
      0022FD 19                    8011 	add	hl, de
      0022FE 23                    8012 	inc	hl
      0022FF 23                    8013 	inc	hl
      002300 71                    8014 	ld	(hl), c
                                   8015 ;src/main.c:878: oldestProjectile += 1;
      002301 FAr89r00              8016 	ld	a, (#_oldestProjectile)
                                   8017 ;src/main.c:914: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002304 C6 1E                 8018 	add	a, #0x1e
      002306 4F                    8019 	ld	c, a
                                   8020 ;src/main.c:915: if (yDir == 1) {
      002307 FAr8Cr00              8021 	ld	a, (#_yDir)
                                   8022 ;src/main.c:916: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   8023 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00230A 3D                    8024 	dec	a
      00230B 20 26                 8025 	jr	NZ, 00115$
      00230D 67                    8026 	ld	h,a
                                   8027 ;	spillPairReg hl
                                   8028 ;	spillPairReg hl
      00230E 69                    8029 	ld	l, c
      00230F 29                    8030 	add	hl, hl
      002310 29                    8031 	add	hl, hl
      002311 11r00r00              8032 	ld	de, #_shadow_OAM
      002314 19                    8033 	add	hl, de
      002315 23                    8034 	inc	hl
      002316 23                    8035 	inc	hl
      002317 23                    8036 	inc	hl
      002318 36 40                 8037 	ld	(hl), #0x40
                                   8038 ;src/main.c:917: projectiles[oldestProjectile].offset = 4;
      00231A 21r89r00              8039 	ld	hl, #_oldestProjectile
      00231D 4E                    8040 	ld	c, (hl)
      00231E 06 00                 8041 	ld	b, #0x00
      002320 69                    8042 	ld	l, c
      002321 60                    8043 	ld	h, b
      002322 29                    8044 	add	hl, hl
      002323 09                    8045 	add	hl, bc
      002324 29                    8046 	add	hl, hl
      002325 29                    8047 	add	hl, hl
      002326 01rAAr00              8048 	ld	bc,#_projectiles
      002329 09                    8049 	add	hl,bc
      00232A 01 04 00              8050 	ld	bc, #0x0004
      00232D 09                    8051 	add	hl, bc
      00232E 36 04                 8052 	ld	(hl), #0x04
      002330 C3r05r27              8053 	jp	00141$
      002333                       8054 00115$:
                                   8055 ;src/main.c:920: set_sprite_prop(30+oldestProjectile, 0); 
                                   8056 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002333 26 00                 8057 	ld	h, #0x00
                                   8058 ;	spillPairReg hl
                                   8059 ;	spillPairReg hl
      002335 69                    8060 	ld	l, c
      002336 29                    8061 	add	hl, hl
      002337 29                    8062 	add	hl, hl
      002338 11r00r00              8063 	ld	de, #_shadow_OAM
      00233B 19                    8064 	add	hl, de
      00233C 23                    8065 	inc	hl
      00233D 23                    8066 	inc	hl
      00233E 23                    8067 	inc	hl
      00233F 36 00                 8068 	ld	(hl), #0x00
                                   8069 ;src/main.c:921: projectiles[oldestProjectile].offset = 12;
      002341 21r89r00              8070 	ld	hl, #_oldestProjectile
      002344 4E                    8071 	ld	c, (hl)
      002345 06 00                 8072 	ld	b, #0x00
      002347 69                    8073 	ld	l, c
      002348 60                    8074 	ld	h, b
      002349 29                    8075 	add	hl, hl
      00234A 09                    8076 	add	hl, bc
      00234B 29                    8077 	add	hl, hl
      00234C 29                    8078 	add	hl, hl
      00234D 01rAAr00              8079 	ld	bc,#_projectiles
      002350 09                    8080 	add	hl,bc
      002351 01 04 00              8081 	ld	bc, #0x0004
      002354 09                    8082 	add	hl, bc
      002355 36 0C                 8083 	ld	(hl), #0x0c
      002357 C3r05r27              8084 	jp	00141$
      00235A                       8085 00140$:
                                   8086 ;src/main.c:925: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   8087 ;src/main.c:924: else if (xDir != 0 && yDir == 0) {
      00235A FAr8Br00              8088 	ld	a, (#_xDir)
      00235D B7                    8089 	or	a, a
      00235E CArA2r24              8090 	jp	Z, 00136$
      002361 FAr8Cr00              8091 	ld	a, (#_yDir)
      002364 B7                    8092 	or	a, a
      002365 C2rA2r24              8093 	jp	NZ, 00136$
                                   8094 ;src/main.c:925: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      002368 F8 04                 8095 	ldhl	sp,	#4
      00236A 34                    8096 	inc	(hl)
      00236B 34                    8097 	inc	(hl)
      00236C 2B                    8098 	dec	hl
                                   8099 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00236D 3A                    8100 	ld	a, (hl-)
      00236E 22                    8101 	ld	(hl+), a
      00236F 36 00                 8102 	ld	(hl), #0x00
      002371 3E 02                 8103 	ld	a, #0x02
      002373                       8104 00260$:
      002373 F8 02                 8105 	ldhl	sp,	#2
      002375 CB 26                 8106 	sla	(hl)
      002377 23                    8107 	inc	hl
      002378 CB 16                 8108 	rl	(hl)
      00237A 3D                    8109 	dec	a
      00237B 20 F6                 8110 	jr	NZ, 00260$
      00237D 2B                    8111 	dec	hl
      00237E 2A                    8112 	ld	a, (hl+)
      00237F 5F                    8113 	ld	e, a
      002380 56                    8114 	ld	d, (hl)
      002381 21r00r00              8115 	ld	hl, #_shadow_OAM
      002384 19                    8116 	add	hl, de
      002385 33                    8117 	inc	sp
      002386 33                    8118 	inc	sp
      002387 5D                    8119 	ld	e, l
      002388 54                    8120 	ld	d, h
      002389 D5                    8121 	push	de
      00238A 21 02 00              8122 	ld	hl, #0x0002
      00238D 19                    8123 	add	hl, de
      00238E E5                    8124 	push	hl
      00238F 7D                    8125 	ld	a, l
      002390 F8 04                 8126 	ldhl	sp,	#4
      002392 77                    8127 	ld	(hl), a
      002393 E1                    8128 	pop	hl
      002394 7C                    8129 	ld	a, h
      002395 F8 03                 8130 	ldhl	sp,	#3
      002397 32                    8131 	ld	(hl-), a
      002398 2A                    8132 	ld	a, (hl+)
      002399 5F                    8133 	ld	e, a
      00239A 2A                    8134 	ld	a, (hl+)
      00239B 57                    8135 	ld	d, a
      00239C 7E                    8136 	ld	a, (hl)
      00239D 12                    8137 	ld	(de), a
                                   8138 ;src/main.c:878: oldestProjectile += 1;
      00239E FAr89r00              8139 	ld	a, (#_oldestProjectile)
      0023A1 F8 04                 8140 	ldhl	sp,	#4
      0023A3 77                    8141 	ld	(hl), a
                                   8142 ;src/main.c:914: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0023A4 7E                    8143 	ld	a, (hl)
      0023A5 C6 1E                 8144 	add	a, #0x1e
      0023A7 77                    8145 	ld	(hl), a
                                   8146 ;src/main.c:926: if (xDir == 1) {
      0023A8 FAr8Br00              8147 	ld	a, (#_xDir)
      0023AB 3D                    8148 	dec	a
      0023AC 20 7A                 8149 	jr	NZ, 00118$
                                   8150 ;src/main.c:927: set_sprite_prop(30+oldestProjectile, 0);
      0023AE F8 04                 8151 	ldhl	sp,	#4
                                   8152 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0023B0 3A                    8153 	ld	a, (hl-)
      0023B1 22                    8154 	ld	(hl+), a
      0023B2 36 00                 8155 	ld	(hl), #0x00
      0023B4 3E 02                 8156 	ld	a, #0x02
      0023B6                       8157 00263$:
      0023B6 F8 03                 8158 	ldhl	sp,	#3
      0023B8 CB 26                 8159 	sla	(hl)
      0023BA 23                    8160 	inc	hl
      0023BB CB 16                 8161 	rl	(hl)
      0023BD 3D                    8162 	dec	a
      0023BE 20 F6                 8163 	jr	NZ, 00263$
      0023C0 2B                    8164 	dec	hl
      0023C1 2A                    8165 	ld	a, (hl+)
      0023C2 5F                    8166 	ld	e, a
      0023C3 56                    8167 	ld	d, (hl)
      0023C4 21r00r00              8168 	ld	hl, #_shadow_OAM
      0023C7 19                    8169 	add	hl, de
      0023C8 E5                    8170 	push	hl
      0023C9 7D                    8171 	ld	a, l
      0023CA F8 03                 8172 	ldhl	sp,	#3
      0023CC 77                    8173 	ld	(hl), a
      0023CD E1                    8174 	pop	hl
      0023CE 7C                    8175 	ld	a, h
      0023CF F8 02                 8176 	ldhl	sp,	#2
      0023D1 32                    8177 	ld	(hl-), a
      0023D2 2A                    8178 	ld	a, (hl+)
      0023D3 5F                    8179 	ld	e, a
      0023D4 56                    8180 	ld	d, (hl)
      0023D5 21 03 00              8181 	ld	hl, #0x0003
      0023D8 19                    8182 	add	hl, de
      0023D9 E5                    8183 	push	hl
      0023DA 7D                    8184 	ld	a, l
      0023DB F8 05                 8185 	ldhl	sp,	#5
      0023DD 77                    8186 	ld	(hl), a
      0023DE E1                    8187 	pop	hl
      0023DF 7C                    8188 	ld	a, h
      0023E0 F8 04                 8189 	ldhl	sp,	#4
      0023E2 32                    8190 	ld	(hl-), a
      0023E3 2A                    8191 	ld	a,	(hl+)
      0023E4 66                    8192 	ld	h, (hl)
      0023E5 6F                    8193 	ld	l, a
      0023E6 36 00                 8194 	ld	(hl), #0x00
                                   8195 ;src/main.c:928: projectiles[oldestProjectile].offset = 12;
      0023E8 21r89r00              8196 	ld	hl, #_oldestProjectile
      0023EB 4E                    8197 	ld	c, (hl)
      0023EC 06 00                 8198 	ld	b, #0x00
      0023EE 69                    8199 	ld	l, c
      0023EF 60                    8200 	ld	h, b
      0023F0 29                    8201 	add	hl, hl
      0023F1 09                    8202 	add	hl, bc
      0023F2 29                    8203 	add	hl, hl
      0023F3 29                    8204 	add	hl, hl
      0023F4 E5                    8205 	push	hl
      0023F5 7D                    8206 	ld	a, l
      0023F6 F8 05                 8207 	ldhl	sp,	#5
      0023F8 77                    8208 	ld	(hl), a
      0023F9 E1                    8209 	pop	hl
      0023FA 7C                    8210 	ld	a, h
      0023FB F8 04                 8211 	ldhl	sp,	#4
      0023FD 32                    8212 	ld	(hl-), a
      0023FE 2A                    8213 	ld	a, (hl+)
      0023FF 5F                    8214 	ld	e, a
      002400 56                    8215 	ld	d, (hl)
      002401 21rAAr00              8216 	ld	hl, #_projectiles
      002404 19                    8217 	add	hl, de
      002405 E5                    8218 	push	hl
      002406 7D                    8219 	ld	a, l
      002407 F8 03                 8220 	ldhl	sp,	#3
      002409 77                    8221 	ld	(hl), a
      00240A E1                    8222 	pop	hl
      00240B 7C                    8223 	ld	a, h
      00240C F8 02                 8224 	ldhl	sp,	#2
      00240E 32                    8225 	ld	(hl-), a
      00240F 2A                    8226 	ld	a, (hl+)
      002410 5F                    8227 	ld	e, a
      002411 56                    8228 	ld	d, (hl)
      002412 21 04 00              8229 	ld	hl, #0x0004
      002415 19                    8230 	add	hl, de
      002416 E5                    8231 	push	hl
      002417 7D                    8232 	ld	a, l
      002418 F8 05                 8233 	ldhl	sp,	#5
      00241A 77                    8234 	ld	(hl), a
      00241B E1                    8235 	pop	hl
      00241C 7C                    8236 	ld	a, h
      00241D F8 04                 8237 	ldhl	sp,	#4
      00241F 32                    8238 	ld	(hl-), a
      002420 2A                    8239 	ld	a,	(hl+)
      002421 66                    8240 	ld	h, (hl)
      002422 6F                    8241 	ld	l, a
      002423 36 0C                 8242 	ld	(hl), #0x0c
      002425 C3r05r27              8243 	jp	00141$
      002428                       8244 00118$:
                                   8245 ;src/main.c:931: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002428 F8 04                 8246 	ldhl	sp,	#4
                                   8247 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00242A 3A                    8248 	ld	a, (hl-)
      00242B 22                    8249 	ld	(hl+), a
      00242C 36 00                 8250 	ld	(hl), #0x00
      00242E 3E 02                 8251 	ld	a, #0x02
      002430                       8252 00264$:
      002430 F8 03                 8253 	ldhl	sp,	#3
      002432 CB 26                 8254 	sla	(hl)
      002434 23                    8255 	inc	hl
      002435 CB 16                 8256 	rl	(hl)
      002437 3D                    8257 	dec	a
      002438 20 F6                 8258 	jr	NZ, 00264$
      00243A 2B                    8259 	dec	hl
      00243B 2A                    8260 	ld	a, (hl+)
      00243C 5F                    8261 	ld	e, a
      00243D 56                    8262 	ld	d, (hl)
      00243E 21r00r00              8263 	ld	hl, #_shadow_OAM
      002441 19                    8264 	add	hl, de
      002442 E5                    8265 	push	hl
      002443 7D                    8266 	ld	a, l
      002444 F8 03                 8267 	ldhl	sp,	#3
      002446 77                    8268 	ld	(hl), a
      002447 E1                    8269 	pop	hl
      002448 7C                    8270 	ld	a, h
      002449 F8 02                 8271 	ldhl	sp,	#2
      00244B 32                    8272 	ld	(hl-), a
      00244C 2A                    8273 	ld	a, (hl+)
      00244D 5F                    8274 	ld	e, a
      00244E 56                    8275 	ld	d, (hl)
      00244F 21 03 00              8276 	ld	hl, #0x0003
      002452 19                    8277 	add	hl, de
      002453 E5                    8278 	push	hl
      002454 7D                    8279 	ld	a, l
      002455 F8 05                 8280 	ldhl	sp,	#5
      002457 77                    8281 	ld	(hl), a
      002458 E1                    8282 	pop	hl
      002459 7C                    8283 	ld	a, h
      00245A F8 04                 8284 	ldhl	sp,	#4
      00245C 32                    8285 	ld	(hl-), a
      00245D 2A                    8286 	ld	a,	(hl+)
      00245E 66                    8287 	ld	h, (hl)
      00245F 6F                    8288 	ld	l, a
      002460 36 20                 8289 	ld	(hl), #0x20
                                   8290 ;src/main.c:932: projectiles[oldestProjectile].offset = 12;
      002462 21r89r00              8291 	ld	hl, #_oldestProjectile
      002465 4E                    8292 	ld	c, (hl)
      002466 06 00                 8293 	ld	b, #0x00
      002468 69                    8294 	ld	l, c
      002469 60                    8295 	ld	h, b
      00246A 29                    8296 	add	hl, hl
      00246B 09                    8297 	add	hl, bc
      00246C 29                    8298 	add	hl, hl
      00246D 29                    8299 	add	hl, hl
      00246E E5                    8300 	push	hl
      00246F 7D                    8301 	ld	a, l
      002470 F8 05                 8302 	ldhl	sp,	#5
      002472 77                    8303 	ld	(hl), a
      002473 E1                    8304 	pop	hl
      002474 7C                    8305 	ld	a, h
      002475 F8 04                 8306 	ldhl	sp,	#4
      002477 32                    8307 	ld	(hl-), a
      002478 2A                    8308 	ld	a, (hl+)
      002479 5F                    8309 	ld	e, a
      00247A 56                    8310 	ld	d, (hl)
      00247B 21rAAr00              8311 	ld	hl, #_projectiles
      00247E 19                    8312 	add	hl, de
      00247F E5                    8313 	push	hl
      002480 7D                    8314 	ld	a, l
      002481 F8 03                 8315 	ldhl	sp,	#3
      002483 77                    8316 	ld	(hl), a
      002484 E1                    8317 	pop	hl
      002485 7C                    8318 	ld	a, h
      002486 F8 02                 8319 	ldhl	sp,	#2
      002488 32                    8320 	ld	(hl-), a
      002489 2A                    8321 	ld	a, (hl+)
      00248A 5F                    8322 	ld	e, a
      00248B 56                    8323 	ld	d, (hl)
      00248C 21 04 00              8324 	ld	hl, #0x0004
      00248F 19                    8325 	add	hl, de
      002490 E5                    8326 	push	hl
      002491 7D                    8327 	ld	a, l
      002492 F8 05                 8328 	ldhl	sp,	#5
      002494 77                    8329 	ld	(hl), a
      002495 E1                    8330 	pop	hl
      002496 7C                    8331 	ld	a, h
      002497 F8 04                 8332 	ldhl	sp,	#4
      002499 32                    8333 	ld	(hl-), a
      00249A 2A                    8334 	ld	a,	(hl+)
      00249B 66                    8335 	ld	h, (hl)
      00249C 6F                    8336 	ld	l, a
      00249D 36 0C                 8337 	ld	(hl), #0x0c
      00249F C3r05r27              8338 	jp	00141$
      0024A2                       8339 00136$:
                                   8340 ;src/main.c:936: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      0024A2 F8 04                 8341 	ldhl	sp,	#4
      0024A4 7E                    8342 	ld	a, (hl)
      0024A5 C6 04                 8343 	add	a, #0x04
      0024A7 F8 00                 8344 	ldhl	sp,	#0
      0024A9 77                    8345 	ld	(hl), a
      0024AA F8 03                 8346 	ldhl	sp,	#3
                                   8347 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0024AC 7E                    8348 	ld	a, (hl)
      0024AD 22                    8349 	ld	(hl+), a
      0024AE 36 00                 8350 	ld	(hl), #0x00
      0024B0 3E 02                 8351 	ld	a, #0x02
      0024B2                       8352 00265$:
      0024B2 F8 03                 8353 	ldhl	sp,	#3
      0024B4 CB 26                 8354 	sla	(hl)
      0024B6 23                    8355 	inc	hl
      0024B7 CB 16                 8356 	rl	(hl)
      0024B9 3D                    8357 	dec	a
      0024BA 20 F6                 8358 	jr	NZ, 00265$
      0024BC 2B                    8359 	dec	hl
      0024BD 2A                    8360 	ld	a, (hl+)
      0024BE 5F                    8361 	ld	e, a
      0024BF 56                    8362 	ld	d, (hl)
      0024C0 21r00r00              8363 	ld	hl, #_shadow_OAM
      0024C3 19                    8364 	add	hl, de
      0024C4 E5                    8365 	push	hl
      0024C5 7D                    8366 	ld	a, l
      0024C6 F8 03                 8367 	ldhl	sp,	#3
      0024C8 77                    8368 	ld	(hl), a
      0024C9 E1                    8369 	pop	hl
      0024CA 7C                    8370 	ld	a, h
      0024CB F8 02                 8371 	ldhl	sp,	#2
      0024CD 32                    8372 	ld	(hl-), a
      0024CE 2A                    8373 	ld	a, (hl+)
      0024CF 5F                    8374 	ld	e, a
      0024D0 56                    8375 	ld	d, (hl)
      0024D1 21 02 00              8376 	ld	hl, #0x0002
      0024D4 19                    8377 	add	hl, de
      0024D5 E5                    8378 	push	hl
      0024D6 7D                    8379 	ld	a, l
      0024D7 F8 05                 8380 	ldhl	sp,	#5
      0024D9 77                    8381 	ld	(hl), a
      0024DA E1                    8382 	pop	hl
      0024DB 7C                    8383 	ld	a, h
      0024DC F8 04                 8384 	ldhl	sp,	#4
      0024DE 32                    8385 	ld	(hl-), a
      0024DF 2A                    8386 	ld	a, (hl+)
      0024E0 5F                    8387 	ld	e, a
      0024E1 56                    8388 	ld	d, (hl)
      0024E2 F8 00                 8389 	ldhl	sp,	#0
      0024E4 7E                    8390 	ld	a, (hl)
      0024E5 12                    8391 	ld	(de), a
                                   8392 ;src/main.c:937: if (xDir == 1 && yDir == -1) {
      0024E6 FAr8Br00              8393 	ld	a, (#_xDir)
      0024E9 3D                    8394 	dec	a
      0024EA 3E 01                 8395 	ld	a, #0x01
      0024EC 28 01                 8396 	jr	Z, 00267$
      0024EE AF                    8397 	xor	a, a
      0024EF                       8398 00267$:
      0024EF F8 04                 8399 	ldhl	sp,	#4
      0024F1 77                    8400 	ld	(hl), a
                                   8401 ;src/main.c:878: oldestProjectile += 1;
      0024F2 21r89r00              8402 	ld	hl, #_oldestProjectile
      0024F5 4E                    8403 	ld	c, (hl)
                                   8404 ;src/main.c:937: if (xDir == 1 && yDir == -1) {
      0024F6 FAr8Cr00              8405 	ld	a, (#_yDir)
      0024F9 3C                    8406 	inc	a
      0024FA 3E 01                 8407 	ld	a, #0x01
      0024FC 28 01                 8408 	jr	Z, 00269$
      0024FE AF                    8409 	xor	a, a
      0024FF                       8410 00269$:
      0024FF F8 01                 8411 	ldhl	sp,	#1
                                   8412 ;src/main.c:914: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002501 22                    8413 	ld	(hl+), a
      002502 79                    8414 	ld	a, c
      002503 C6 1E                 8415 	add	a, #0x1e
                                   8416 ;src/main.c:937: if (xDir == 1 && yDir == -1) {
      002505 22                    8417 	ld	(hl+), a
      002506 23                    8418 	inc	hl
      002507 7E                    8419 	ld	a, (hl)
      002508 B7                    8420 	or	a, a
      002509 CAr8Br25              8421 	jp	Z, 00132$
      00250C F8 01                 8422 	ldhl	sp,	#1
      00250E 7E                    8423 	ld	a, (hl)
      00250F B7                    8424 	or	a, a
      002510 28 79                 8425 	jr	Z, 00132$
                                   8426 ;src/main.c:938: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      002512 23                    8427 	inc	hl
                                   8428 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002513 2A                    8429 	ld	a, (hl+)
      002514 22                    8430 	ld	(hl+), a
      002515 36 00                 8431 	ld	(hl), #0x00
      002517 3E 02                 8432 	ld	a, #0x02
      002519                       8433 00270$:
      002519 F8 03                 8434 	ldhl	sp,	#3
      00251B CB 26                 8435 	sla	(hl)
      00251D 23                    8436 	inc	hl
      00251E CB 16                 8437 	rl	(hl)
      002520 3D                    8438 	dec	a
      002521 20 F6                 8439 	jr	NZ, 00270$
      002523 2B                    8440 	dec	hl
      002524 2A                    8441 	ld	a, (hl+)
      002525 5F                    8442 	ld	e, a
      002526 56                    8443 	ld	d, (hl)
      002527 21r00r00              8444 	ld	hl, #_shadow_OAM
      00252A 19                    8445 	add	hl, de
      00252B E5                    8446 	push	hl
      00252C 7D                    8447 	ld	a, l
      00252D F8 03                 8448 	ldhl	sp,	#3
      00252F 77                    8449 	ld	(hl), a
      002530 E1                    8450 	pop	hl
      002531 7C                    8451 	ld	a, h
      002532 F8 02                 8452 	ldhl	sp,	#2
      002534 32                    8453 	ld	(hl-), a
      002535 2A                    8454 	ld	a, (hl+)
      002536 5F                    8455 	ld	e, a
      002537 56                    8456 	ld	d, (hl)
      002538 21 03 00              8457 	ld	hl, #0x0003
      00253B 19                    8458 	add	hl, de
      00253C E5                    8459 	push	hl
      00253D 7D                    8460 	ld	a, l
      00253E F8 05                 8461 	ldhl	sp,	#5
      002540 77                    8462 	ld	(hl), a
      002541 E1                    8463 	pop	hl
      002542 7C                    8464 	ld	a, h
      002543 F8 04                 8465 	ldhl	sp,	#4
      002545 32                    8466 	ld	(hl-), a
      002546 2A                    8467 	ld	a,	(hl+)
      002547 66                    8468 	ld	h, (hl)
      002548 6F                    8469 	ld	l, a
      002549 36 00                 8470 	ld	(hl), #0x00
                                   8471 ;src/main.c:939: projectiles[oldestProjectile].offset = 12;
      00254B 21r89r00              8472 	ld	hl, #_oldestProjectile
      00254E 4E                    8473 	ld	c, (hl)
      00254F 06 00                 8474 	ld	b, #0x00
      002551 69                    8475 	ld	l, c
      002552 60                    8476 	ld	h, b
      002553 29                    8477 	add	hl, hl
      002554 09                    8478 	add	hl, bc
      002555 29                    8479 	add	hl, hl
      002556 29                    8480 	add	hl, hl
      002557 E5                    8481 	push	hl
      002558 7D                    8482 	ld	a, l
      002559 F8 05                 8483 	ldhl	sp,	#5
      00255B 77                    8484 	ld	(hl), a
      00255C E1                    8485 	pop	hl
      00255D 7C                    8486 	ld	a, h
      00255E F8 04                 8487 	ldhl	sp,	#4
      002560 32                    8488 	ld	(hl-), a
      002561 2A                    8489 	ld	a, (hl+)
      002562 5F                    8490 	ld	e, a
      002563 56                    8491 	ld	d, (hl)
      002564 21rAAr00              8492 	ld	hl, #_projectiles
      002567 19                    8493 	add	hl, de
      002568 E5                    8494 	push	hl
      002569 7D                    8495 	ld	a, l
      00256A F8 03                 8496 	ldhl	sp,	#3
      00256C 77                    8497 	ld	(hl), a
      00256D E1                    8498 	pop	hl
      00256E 7C                    8499 	ld	a, h
      00256F F8 02                 8500 	ldhl	sp,	#2
      002571 32                    8501 	ld	(hl-), a
      002572 2A                    8502 	ld	a, (hl+)
      002573 5F                    8503 	ld	e, a
      002574 56                    8504 	ld	d, (hl)
      002575 21 04 00              8505 	ld	hl, #0x0004
      002578 19                    8506 	add	hl, de
      002579 E5                    8507 	push	hl
      00257A 7D                    8508 	ld	a, l
      00257B F8 05                 8509 	ldhl	sp,	#5
      00257D 77                    8510 	ld	(hl), a
      00257E E1                    8511 	pop	hl
      00257F 7C                    8512 	ld	a, h
      002580 F8 04                 8513 	ldhl	sp,	#4
      002582 32                    8514 	ld	(hl-), a
      002583 2A                    8515 	ld	a,	(hl+)
      002584 66                    8516 	ld	h, (hl)
      002585 6F                    8517 	ld	l, a
      002586 36 0C                 8518 	ld	(hl), #0x0c
      002588 C3r05r27              8519 	jp	00141$
      00258B                       8520 00132$:
                                   8521 ;src/main.c:915: if (yDir == 1) {
      00258B FAr8Cr00              8522 	ld	a, (#_yDir)
      00258E 3D                    8523 	dec	a
      00258F 3E 01                 8524 	ld	a, #0x01
      002591 28 01                 8525 	jr	Z, 00272$
      002593 AF                    8526 	xor	a, a
      002594                       8527 00272$:
      002594 F8 03                 8528 	ldhl	sp,	#3
                                   8529 ;src/main.c:941: else if (xDir == 1 && yDir == 1) {
      002596 22                    8530 	ld	(hl+), a
      002597 7E                    8531 	ld	a, (hl)
      002598 B7                    8532 	or	a, a
      002599 CAr1Ar26              8533 	jp	Z, 00128$
      00259C 2B                    8534 	dec	hl
      00259D 7E                    8535 	ld	a, (hl)
      00259E B7                    8536 	or	a, a
      00259F 28 79                 8537 	jr	Z, 00128$
                                   8538 ;src/main.c:942: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      0025A1 2B                    8539 	dec	hl
                                   8540 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0025A2 2A                    8541 	ld	a, (hl+)
      0025A3 22                    8542 	ld	(hl+), a
      0025A4 36 00                 8543 	ld	(hl), #0x00
      0025A6 3E 02                 8544 	ld	a, #0x02
      0025A8                       8545 00273$:
      0025A8 F8 03                 8546 	ldhl	sp,	#3
      0025AA CB 26                 8547 	sla	(hl)
      0025AC 23                    8548 	inc	hl
      0025AD CB 16                 8549 	rl	(hl)
      0025AF 3D                    8550 	dec	a
      0025B0 20 F6                 8551 	jr	NZ, 00273$
      0025B2 2B                    8552 	dec	hl
      0025B3 2A                    8553 	ld	a, (hl+)
      0025B4 5F                    8554 	ld	e, a
      0025B5 56                    8555 	ld	d, (hl)
      0025B6 21r00r00              8556 	ld	hl, #_shadow_OAM
      0025B9 19                    8557 	add	hl, de
      0025BA E5                    8558 	push	hl
      0025BB 7D                    8559 	ld	a, l
      0025BC F8 03                 8560 	ldhl	sp,	#3
      0025BE 77                    8561 	ld	(hl), a
      0025BF E1                    8562 	pop	hl
      0025C0 7C                    8563 	ld	a, h
      0025C1 F8 02                 8564 	ldhl	sp,	#2
      0025C3 32                    8565 	ld	(hl-), a
      0025C4 2A                    8566 	ld	a, (hl+)
      0025C5 5F                    8567 	ld	e, a
      0025C6 56                    8568 	ld	d, (hl)
      0025C7 21 03 00              8569 	ld	hl, #0x0003
      0025CA 19                    8570 	add	hl, de
      0025CB E5                    8571 	push	hl
      0025CC 7D                    8572 	ld	a, l
      0025CD F8 05                 8573 	ldhl	sp,	#5
      0025CF 77                    8574 	ld	(hl), a
      0025D0 E1                    8575 	pop	hl
      0025D1 7C                    8576 	ld	a, h
      0025D2 F8 04                 8577 	ldhl	sp,	#4
      0025D4 32                    8578 	ld	(hl-), a
      0025D5 2A                    8579 	ld	a,	(hl+)
      0025D6 66                    8580 	ld	h, (hl)
      0025D7 6F                    8581 	ld	l, a
      0025D8 36 40                 8582 	ld	(hl), #0x40
                                   8583 ;src/main.c:943: projectiles[oldestProjectile].offset = 4;
      0025DA 21r89r00              8584 	ld	hl, #_oldestProjectile
      0025DD 4E                    8585 	ld	c, (hl)
      0025DE 06 00                 8586 	ld	b, #0x00
      0025E0 69                    8587 	ld	l, c
      0025E1 60                    8588 	ld	h, b
      0025E2 29                    8589 	add	hl, hl
      0025E3 09                    8590 	add	hl, bc
      0025E4 29                    8591 	add	hl, hl
      0025E5 29                    8592 	add	hl, hl
      0025E6 E5                    8593 	push	hl
      0025E7 7D                    8594 	ld	a, l
      0025E8 F8 05                 8595 	ldhl	sp,	#5
      0025EA 77                    8596 	ld	(hl), a
      0025EB E1                    8597 	pop	hl
      0025EC 7C                    8598 	ld	a, h
      0025ED F8 04                 8599 	ldhl	sp,	#4
      0025EF 32                    8600 	ld	(hl-), a
      0025F0 2A                    8601 	ld	a, (hl+)
      0025F1 5F                    8602 	ld	e, a
      0025F2 56                    8603 	ld	d, (hl)
      0025F3 21rAAr00              8604 	ld	hl, #_projectiles
      0025F6 19                    8605 	add	hl, de
      0025F7 E5                    8606 	push	hl
      0025F8 7D                    8607 	ld	a, l
      0025F9 F8 03                 8608 	ldhl	sp,	#3
      0025FB 77                    8609 	ld	(hl), a
      0025FC E1                    8610 	pop	hl
      0025FD 7C                    8611 	ld	a, h
      0025FE F8 02                 8612 	ldhl	sp,	#2
      002600 32                    8613 	ld	(hl-), a
      002601 2A                    8614 	ld	a, (hl+)
      002602 5F                    8615 	ld	e, a
      002603 56                    8616 	ld	d, (hl)
      002604 21 04 00              8617 	ld	hl, #0x0004
      002607 19                    8618 	add	hl, de
      002608 E5                    8619 	push	hl
      002609 7D                    8620 	ld	a, l
      00260A F8 05                 8621 	ldhl	sp,	#5
      00260C 77                    8622 	ld	(hl), a
      00260D E1                    8623 	pop	hl
      00260E 7C                    8624 	ld	a, h
      00260F F8 04                 8625 	ldhl	sp,	#4
      002611 32                    8626 	ld	(hl-), a
      002612 2A                    8627 	ld	a,	(hl+)
      002613 66                    8628 	ld	h, (hl)
      002614 6F                    8629 	ld	l, a
      002615 36 04                 8630 	ld	(hl), #0x04
      002617 C3r05r27              8631 	jp	00141$
      00261A                       8632 00128$:
                                   8633 ;src/main.c:945: else if (xDir == -1 && yDir == 1) {
      00261A FAr8Br00              8634 	ld	a, (#_xDir)
      00261D 3C                    8635 	inc	a
      00261E 3E 01                 8636 	ld	a, #0x01
      002620 28 01                 8637 	jr	Z, 00275$
      002622 AF                    8638 	xor	a, a
      002623                       8639 00275$:
      002623 F8 04                 8640 	ldhl	sp,	#4
      002625 77                    8641 	ld	(hl), a
      002626 7E                    8642 	ld	a, (hl)
      002627 B7                    8643 	or	a, a
      002628 CArA8r26              8644 	jp	Z, 00124$
      00262B 2B                    8645 	dec	hl
      00262C 7E                    8646 	ld	a, (hl)
      00262D B7                    8647 	or	a, a
      00262E 28 78                 8648 	jr	Z, 00124$
                                   8649 ;src/main.c:946: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      002630 2B                    8650 	dec	hl
                                   8651 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002631 2A                    8652 	ld	a, (hl+)
      002632 22                    8653 	ld	(hl+), a
      002633 36 00                 8654 	ld	(hl), #0x00
      002635 3E 02                 8655 	ld	a, #0x02
      002637                       8656 00276$:
      002637 F8 03                 8657 	ldhl	sp,	#3
      002639 CB 26                 8658 	sla	(hl)
      00263B 23                    8659 	inc	hl
      00263C CB 16                 8660 	rl	(hl)
      00263E 3D                    8661 	dec	a
      00263F 20 F6                 8662 	jr	NZ, 00276$
      002641 2B                    8663 	dec	hl
      002642 2A                    8664 	ld	a, (hl+)
      002643 5F                    8665 	ld	e, a
      002644 56                    8666 	ld	d, (hl)
      002645 21r00r00              8667 	ld	hl, #_shadow_OAM
      002648 19                    8668 	add	hl, de
      002649 E5                    8669 	push	hl
      00264A 7D                    8670 	ld	a, l
      00264B F8 03                 8671 	ldhl	sp,	#3
      00264D 77                    8672 	ld	(hl), a
      00264E E1                    8673 	pop	hl
      00264F 7C                    8674 	ld	a, h
      002650 F8 02                 8675 	ldhl	sp,	#2
      002652 32                    8676 	ld	(hl-), a
      002653 2A                    8677 	ld	a, (hl+)
      002654 5F                    8678 	ld	e, a
      002655 56                    8679 	ld	d, (hl)
      002656 21 03 00              8680 	ld	hl, #0x0003
      002659 19                    8681 	add	hl, de
      00265A E5                    8682 	push	hl
      00265B 7D                    8683 	ld	a, l
      00265C F8 05                 8684 	ldhl	sp,	#5
      00265E 77                    8685 	ld	(hl), a
      00265F E1                    8686 	pop	hl
      002660 7C                    8687 	ld	a, h
      002661 F8 04                 8688 	ldhl	sp,	#4
      002663 32                    8689 	ld	(hl-), a
      002664 2A                    8690 	ld	a,	(hl+)
      002665 66                    8691 	ld	h, (hl)
      002666 6F                    8692 	ld	l, a
      002667 36 60                 8693 	ld	(hl), #0x60
                                   8694 ;src/main.c:947: projectiles[oldestProjectile].offset = 4;
      002669 21r89r00              8695 	ld	hl, #_oldestProjectile
      00266C 4E                    8696 	ld	c, (hl)
      00266D 06 00                 8697 	ld	b, #0x00
      00266F 69                    8698 	ld	l, c
      002670 60                    8699 	ld	h, b
      002671 29                    8700 	add	hl, hl
      002672 09                    8701 	add	hl, bc
      002673 29                    8702 	add	hl, hl
      002674 29                    8703 	add	hl, hl
      002675 E5                    8704 	push	hl
      002676 7D                    8705 	ld	a, l
      002677 F8 05                 8706 	ldhl	sp,	#5
      002679 77                    8707 	ld	(hl), a
      00267A E1                    8708 	pop	hl
      00267B 7C                    8709 	ld	a, h
      00267C F8 04                 8710 	ldhl	sp,	#4
      00267E 32                    8711 	ld	(hl-), a
      00267F 2A                    8712 	ld	a, (hl+)
      002680 5F                    8713 	ld	e, a
      002681 56                    8714 	ld	d, (hl)
      002682 21rAAr00              8715 	ld	hl, #_projectiles
      002685 19                    8716 	add	hl, de
      002686 E5                    8717 	push	hl
      002687 7D                    8718 	ld	a, l
      002688 F8 03                 8719 	ldhl	sp,	#3
      00268A 77                    8720 	ld	(hl), a
      00268B E1                    8721 	pop	hl
      00268C 7C                    8722 	ld	a, h
      00268D F8 02                 8723 	ldhl	sp,	#2
      00268F 32                    8724 	ld	(hl-), a
      002690 2A                    8725 	ld	a, (hl+)
      002691 5F                    8726 	ld	e, a
      002692 56                    8727 	ld	d, (hl)
      002693 21 04 00              8728 	ld	hl, #0x0004
      002696 19                    8729 	add	hl, de
      002697 E5                    8730 	push	hl
      002698 7D                    8731 	ld	a, l
      002699 F8 05                 8732 	ldhl	sp,	#5
      00269B 77                    8733 	ld	(hl), a
      00269C E1                    8734 	pop	hl
      00269D 7C                    8735 	ld	a, h
      00269E F8 04                 8736 	ldhl	sp,	#4
      0026A0 32                    8737 	ld	(hl-), a
      0026A1 2A                    8738 	ld	a,	(hl+)
      0026A2 66                    8739 	ld	h, (hl)
      0026A3 6F                    8740 	ld	l, a
      0026A4 36 04                 8741 	ld	(hl), #0x04
      0026A6 18 5D                 8742 	jr	00141$
      0026A8                       8743 00124$:
                                   8744 ;src/main.c:949: else if (xDir == -1 && yDir == -1) {
      0026A8 F8 04                 8745 	ldhl	sp,	#4
      0026AA 7E                    8746 	ld	a, (hl)
      0026AB B7                    8747 	or	a, a
      0026AC 28 57                 8748 	jr	Z, 00141$
      0026AE F8 01                 8749 	ldhl	sp,	#1
      0026B0 7E                    8750 	ld	a, (hl)
      0026B1 B7                    8751 	or	a, a
      0026B2 28 51                 8752 	jr	Z, 00141$
                                   8753 ;src/main.c:950: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      0026B4 23                    8754 	inc	hl
                                   8755 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0026B5 2A                    8756 	ld	a, (hl+)
      0026B6 22                    8757 	ld	(hl+), a
      0026B7 36 00                 8758 	ld	(hl), #0x00
      0026B9 3E 02                 8759 	ld	a, #0x02
      0026BB                       8760 00277$:
      0026BB F8 03                 8761 	ldhl	sp,	#3
      0026BD CB 26                 8762 	sla	(hl)
      0026BF 23                    8763 	inc	hl
      0026C0 CB 16                 8764 	rl	(hl)
      0026C2 3D                    8765 	dec	a
      0026C3 20 F6                 8766 	jr	NZ, 00277$
      0026C5 2B                    8767 	dec	hl
      0026C6 2A                    8768 	ld	a, (hl+)
      0026C7 5F                    8769 	ld	e, a
      0026C8 56                    8770 	ld	d, (hl)
      0026C9 21r00r00              8771 	ld	hl, #_shadow_OAM
      0026CC 19                    8772 	add	hl, de
      0026CD E5                    8773 	push	hl
      0026CE 7D                    8774 	ld	a, l
      0026CF F8 03                 8775 	ldhl	sp,	#3
      0026D1 77                    8776 	ld	(hl), a
      0026D2 E1                    8777 	pop	hl
      0026D3 7C                    8778 	ld	a, h
      0026D4 F8 02                 8779 	ldhl	sp,	#2
      0026D6 32                    8780 	ld	(hl-), a
      0026D7 2A                    8781 	ld	a, (hl+)
      0026D8 5F                    8782 	ld	e, a
      0026D9 56                    8783 	ld	d, (hl)
      0026DA 21 03 00              8784 	ld	hl, #0x0003
      0026DD 19                    8785 	add	hl, de
      0026DE E5                    8786 	push	hl
      0026DF 7D                    8787 	ld	a, l
      0026E0 F8 05                 8788 	ldhl	sp,	#5
      0026E2 77                    8789 	ld	(hl), a
      0026E3 E1                    8790 	pop	hl
      0026E4 7C                    8791 	ld	a, h
      0026E5 F8 04                 8792 	ldhl	sp,	#4
      0026E7 32                    8793 	ld	(hl-), a
      0026E8 2A                    8794 	ld	a,	(hl+)
      0026E9 66                    8795 	ld	h, (hl)
      0026EA 6F                    8796 	ld	l, a
      0026EB 36 20                 8797 	ld	(hl), #0x20
                                   8798 ;src/main.c:951: projectiles[oldestProjectile].offset = 12;
      0026ED 21r89r00              8799 	ld	hl, #_oldestProjectile
      0026F0 4E                    8800 	ld	c, (hl)
      0026F1 06 00                 8801 	ld	b, #0x00
      0026F3 69                    8802 	ld	l, c
      0026F4 60                    8803 	ld	h, b
      0026F5 29                    8804 	add	hl, hl
      0026F6 09                    8805 	add	hl, bc
      0026F7 29                    8806 	add	hl, hl
      0026F8 29                    8807 	add	hl, hl
      0026F9 01rAAr00              8808 	ld	bc,#_projectiles
      0026FC 09                    8809 	add	hl,bc
      0026FD 4D                    8810 	ld	c, l
      0026FE 44                    8811 	ld	b, h
      0026FF 21 04 00              8812 	ld	hl, #0x0004
      002702 09                    8813 	add	hl, bc
      002703 36 0C                 8814 	ld	(hl), #0x0c
      002705                       8815 00141$:
                                   8816 ;src/main.c:955: fireCooldown = projectiles[oldestProjectile].delay;
      002705 21r89r00              8817 	ld	hl, #_oldestProjectile
      002708 4E                    8818 	ld	c, (hl)
      002709 06 00                 8819 	ld	b, #0x00
      00270B 69                    8820 	ld	l, c
      00270C 60                    8821 	ld	h, b
      00270D 29                    8822 	add	hl, hl
      00270E 09                    8823 	add	hl, bc
      00270F 29                    8824 	add	hl, hl
      002710 29                    8825 	add	hl, hl
      002711 01rAAr00              8826 	ld	bc,#_projectiles
      002714 09                    8827 	add	hl,bc
      002715 4D                    8828 	ld	c, l
      002716 44                    8829 	ld	b, h
      002717 21 0A 00              8830 	ld	hl, #0x000a
      00271A 09                    8831 	add	hl, bc
      00271B 7E                    8832 	ld	a, (hl)
      00271C EAr8Ar00              8833 	ld	(#_fireCooldown),a
                                   8834 ;src/main.c:957: playSound(projectiles[oldestProjectile].type);
      00271F 21 0B 00              8835 	ld	hl, #0x000b
      002722 09                    8836 	add	hl, bc
      002723 7E                    8837 	ld	a, (hl)
      002724 F5                    8838 	push	af
      002725 33                    8839 	inc	sp
      002726 CDrA1r0C              8840 	call	_playSound
      002729 33                    8841 	inc	sp
      00272A                       8842 00154$:
                                   8843 ;src/main.c:961: }
      00272A E8 05                 8844 	add	sp, #5
      00272C C9                    8845 	ret
                                   8846 ;src/main.c:964: void moveProjectiles() {
                                   8847 ;	---------------------------------
                                   8848 ; Function moveProjectiles
                                   8849 ; ---------------------------------
      00272D                       8850 _moveProjectiles::
      00272D E8 F9                 8851 	add	sp, #-7
                                   8852 ;src/main.c:965: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00272F F8 06                 8853 	ldhl	sp,	#6
      002731 36 00                 8854 	ld	(hl), #0x00
      002733                       8855 00112$:
      002733 21r99r08              8856 	ld	hl, #_PROJECTILECOUNT
      002736 4E                    8857 	ld	c, (hl)
      002737 F8 06                 8858 	ldhl	sp,	#6
      002739 7E                    8859 	ld	a, (hl)
      00273A 91                    8860 	sub	a, c
      00273B D2r89r28              8861 	jp	NC, 00114$
                                   8862 ;src/main.c:966: projectiles[i].x -= xOverflow;
      00273E 4E                    8863 	ld	c, (hl)
      00273F 06 00                 8864 	ld	b, #0x00
      002741 69                    8865 	ld	l, c
      002742 60                    8866 	ld	h, b
      002743 29                    8867 	add	hl, hl
      002744 09                    8868 	add	hl, bc
      002745 29                    8869 	add	hl, hl
      002746 29                    8870 	add	hl, hl
      002747 01rAAr00              8871 	ld	bc,#_projectiles
      00274A 09                    8872 	add	hl,bc
      00274B 33                    8873 	inc	sp
      00274C 33                    8874 	inc	sp
      00274D 5D                    8875 	ld	e, l
      00274E 54                    8876 	ld	d, h
      00274F D5                    8877 	push	de
      002750 1A                    8878 	ld	a, (de)
      002751 4F                    8879 	ld	c, a
      002752 13                    8880 	inc	de
      002753 1A                    8881 	ld	a, (de)
      002754 47                    8882 	ld	b, a
      002755 79                    8883 	ld	a, c
      002756 21r99r00              8884 	ld	hl, #_xOverflow
      002759 96                    8885 	sub	a, (hl)
      00275A 23                    8886 	inc	hl
      00275B 4F                    8887 	ld	c, a
      00275C 78                    8888 	ld	a, b
      00275D 9E                    8889 	sbc	a, (hl)
      00275E 47                    8890 	ld	b, a
      00275F E1                    8891 	pop	hl
      002760 E5                    8892 	push	hl
      002761 79                    8893 	ld	a, c
      002762 22                    8894 	ld	(hl+), a
      002763 70                    8895 	ld	(hl), b
                                   8896 ;src/main.c:967: projectiles[i].y -= yOverflow;
      002764 D1                    8897 	pop	de
      002765 D5                    8898 	push	de
      002766 21 02 00              8899 	ld	hl, #0x0002
      002769 19                    8900 	add	hl, de
      00276A E5                    8901 	push	hl
      00276B 7D                    8902 	ld	a, l
      00276C F8 04                 8903 	ldhl	sp,	#4
      00276E 77                    8904 	ld	(hl), a
      00276F E1                    8905 	pop	hl
      002770 7C                    8906 	ld	a, h
      002771 F8 03                 8907 	ldhl	sp,	#3
      002773 32                    8908 	ld	(hl-), a
      002774 2A                    8909 	ld	a, (hl+)
      002775 5F                    8910 	ld	e, a
      002776 56                    8911 	ld	d, (hl)
      002777 1A                    8912 	ld	a, (de)
      002778 4F                    8913 	ld	c, a
      002779 13                    8914 	inc	de
      00277A 1A                    8915 	ld	a, (de)
      00277B 47                    8916 	ld	b, a
      00277C 79                    8917 	ld	a, c
      00277D 21r9Br00              8918 	ld	hl, #_yOverflow
      002780 96                    8919 	sub	a, (hl)
      002781 23                    8920 	inc	hl
      002782 4F                    8921 	ld	c, a
      002783 78                    8922 	ld	a, b
      002784 9E                    8923 	sbc	a, (hl)
      002785 47                    8924 	ld	b, a
      002786 F8 02                 8925 	ldhl	sp,	#2
      002788 2A                    8926 	ld	a,	(hl+)
      002789 66                    8927 	ld	h, (hl)
      00278A 6F                    8928 	ld	l, a
      00278B 79                    8929 	ld	a, c
      00278C 22                    8930 	ld	(hl+), a
      00278D 70                    8931 	ld	(hl), b
                                   8932 ;src/main.c:969: if (projectiles[i].active) {
      00278E D1                    8933 	pop	de
      00278F D5                    8934 	push	de
      002790 21 09 00              8935 	ld	hl, #0x0009
      002793 19                    8936 	add	hl, de
      002794 4D                    8937 	ld	c, l
      002795 44                    8938 	ld	b, h
      002796 0A                    8939 	ld	a, (bc)
      002797 B7                    8940 	or	a, a
      002798 CAr83r28              8941 	jp	Z, 00113$
                                   8942 ;src/main.c:970: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      00279B F8 02                 8943 	ldhl	sp,#2
      00279D 2A                    8944 	ld	a, (hl+)
      00279E 5F                    8945 	ld	e, a
      00279F 56                    8946 	ld	d, (hl)
      0027A0 1A                    8947 	ld	a, (de)
      0027A1 4F                    8948 	ld	c, a
      0027A2 13                    8949 	inc	de
      0027A3 1A                    8950 	ld	a, (de)
      0027A4 47                    8951 	ld	b, a
      0027A5 D1                    8952 	pop	de
      0027A6 D5                    8953 	push	de
      0027A7 21 06 00              8954 	ld	hl, #0x0006
      0027AA 19                    8955 	add	hl, de
      0027AB 5D                    8956 	ld	e, l
      0027AC 54                    8957 	ld	d, h
      0027AD 1A                    8958 	ld	a, (de)
      0027AE 6F                    8959 	ld	l, a
                                   8960 ;	spillPairReg hl
                                   8961 ;	spillPairReg hl
      0027AF 07                    8962 	rlca
      0027B0 9F                    8963 	sbc	a, a
      0027B1 67                    8964 	ld	h, a
                                   8965 ;	spillPairReg hl
                                   8966 ;	spillPairReg hl
      0027B2 09                    8967 	add	hl, bc
      0027B3 4D                    8968 	ld	c, l
      0027B4 44                    8969 	ld	b, h
      0027B5 F8 04                 8970 	ldhl	sp,	#4
      0027B7 79                    8971 	ld	a, c
      0027B8 22                    8972 	ld	(hl+), a
      0027B9 70                    8973 	ld	(hl), b
                                   8974 ;src/main.c:971: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      0027BA D1                    8975 	pop	de
      0027BB D5                    8976 	push	de
      0027BC 1A                    8977 	ld	a, (de)
      0027BD 4F                    8978 	ld	c, a
      0027BE 13                    8979 	inc	de
      0027BF 1A                    8980 	ld	a, (de)
      0027C0 47                    8981 	ld	b, a
      0027C1 D1                    8982 	pop	de
      0027C2 D5                    8983 	push	de
      0027C3 21 05 00              8984 	ld	hl, #0x0005
      0027C6 19                    8985 	add	hl, de
      0027C7 5D                    8986 	ld	e, l
      0027C8 54                    8987 	ld	d, h
      0027C9 1A                    8988 	ld	a, (de)
      0027CA 6F                    8989 	ld	l, a
                                   8990 ;	spillPairReg hl
                                   8991 ;	spillPairReg hl
      0027CB 07                    8992 	rlca
      0027CC 9F                    8993 	sbc	a, a
      0027CD 67                    8994 	ld	h, a
                                   8995 ;	spillPairReg hl
                                   8996 ;	spillPairReg hl
      0027CE 09                    8997 	add	hl, bc
      0027CF 4D                    8998 	ld	c, l
      0027D0 44                    8999 	ld	b, h
                                   9000 ;src/main.c:974: projectiles[i].y = newY;
      0027D1 F8 02                 9001 	ldhl	sp,#2
      0027D3 2A                    9002 	ld	a, (hl+)
      0027D4 5F                    9003 	ld	e, a
      0027D5 2A                    9004 	ld	a, (hl+)
      0027D6 57                    9005 	ld	d, a
      0027D7 2A                    9006 	ld	a, (hl+)
      0027D8 12                    9007 	ld	(de), a
      0027D9 13                    9008 	inc	de
      0027DA 7E                    9009 	ld	a, (hl)
      0027DB 12                    9010 	ld	(de), a
                                   9011 ;src/main.c:975: projectiles[i].x = newX;
      0027DC E1                    9012 	pop	hl
      0027DD E5                    9013 	push	hl
      0027DE 79                    9014 	ld	a, c
      0027DF 22                    9015 	ld	(hl+), a
      0027E0 70                    9016 	ld	(hl), b
                                   9017 ;src/main.c:979: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      0027E1 F8 04                 9018 	ldhl	sp,	#4
      0027E3 2A                    9019 	ld	a, (hl+)
      0027E4 77                    9020 	ld	(hl), a
      0027E5 D1                    9021 	pop	de
      0027E6 D5                    9022 	push	de
      0027E7 21 04 00              9023 	ld	hl, #0x0004
      0027EA 19                    9024 	add	hl, de
      0027EB 5D                    9025 	ld	e, l
      0027EC 54                    9026 	ld	d, h
      0027ED 1A                    9027 	ld	a, (de)
      0027EE F8 05                 9028 	ldhl	sp,	#5
      0027F0 86                    9029 	add	a, (hl)
      0027F1 2B                    9030 	dec	hl
      0027F2 5F                    9031 	ld	e, a
      0027F3 79                    9032 	ld	a, c
      0027F4 C6 04                 9033 	add	a, #0x04
      0027F6 22                    9034 	ld	(hl+), a
      0027F7 23                    9035 	inc	hl
      0027F8 3A                    9036 	ld	a, (hl-)
      0027F9 C6 1E                 9037 	add	a, #0x1e
      0027FB 77                    9038 	ld	(hl), a
      0027FC 56                    9039 	ld	d, (hl)
                                   9040 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0027FD 26 00                 9041 	ld	h, #0x00
                                   9042 ;	spillPairReg hl
                                   9043 ;	spillPairReg hl
      0027FF 6A                    9044 	ld	l, d
      002800 29                    9045 	add	hl, hl
      002801 29                    9046 	add	hl, hl
      002802 D5                    9047 	push	de
      002803 11r00r00              9048 	ld	de, #_shadow_OAM
      002806 19                    9049 	add	hl, de
      002807 D1                    9050 	pop	de
                                   9051 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002808 7B                    9052 	ld	a, e
      002809 22                    9053 	ld	(hl+), a
      00280A 5D                    9054 	ld	e, l
      00280B 54                    9055 	ld	d, h
      00280C F8 04                 9056 	ldhl	sp,	#4
      00280E 7E                    9057 	ld	a, (hl)
      00280F 12                    9058 	ld	(de), a
                                   9059 ;src/main.c:983: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      002810 D1                    9060 	pop	de
      002811 D5                    9061 	push	de
      002812 1A                    9062 	ld	a, (de)
      002813 6F                    9063 	ld	l, a
                                   9064 ;	spillPairReg hl
                                   9065 ;	spillPairReg hl
      002814 13                    9066 	inc	de
      002815 1A                    9067 	ld	a, (de)
      002816 67                    9068 	ld	h, a
                                   9069 ;	spillPairReg hl
                                   9070 ;	spillPairReg hl
      002817 CB 78                 9071 	bit	7, b
      002819 20 44                 9072 	jr	NZ, 00101$
      00281B 5C                    9073 	ld	e, h
      00281C 16 00                 9074 	ld	d, #0x00
      00281E 3E AA                 9075 	ld	a, #0xaa
      002820 BD                    9076 	cp	a, l
      002821 3E 00                 9077 	ld	a, #0x00
      002823 9C                    9078 	sbc	a, h
      002824 CB 7B                 9079 	bit	7, e
      002826 28 07                 9080 	jr	Z, 00147$
      002828 CB 7A                 9081 	bit	7, d
      00282A 20 08                 9082 	jr	NZ, 00148$
      00282C BF                    9083 	cp	a, a
      00282D 18 05                 9084 	jr	00148$
      00282F                       9085 00147$:
      00282F CB 7A                 9086 	bit	7, d
      002831 28 01                 9087 	jr	Z, 00148$
      002833 37                    9088 	scf
      002834                       9089 00148$:
      002834 38 29                 9090 	jr	C, 00101$
                                   9091 ;src/main.c:967: projectiles[i].y -= yOverflow;
      002836 F8 02                 9092 	ldhl	sp,#2
      002838 2A                    9093 	ld	a, (hl+)
      002839 5F                    9094 	ld	e, a
      00283A 56                    9095 	ld	d, (hl)
      00283B 1A                    9096 	ld	a, (de)
      00283C 4F                    9097 	ld	c, a
      00283D 13                    9098 	inc	de
      00283E 1A                    9099 	ld	a, (de)
                                   9100 ;src/main.c:983: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      00283F 47                    9101 	ld	b, a
      002840 CB 78                 9102 	bit	7, b
      002842 20 1B                 9103 	jr	NZ, 00101$
      002844 58                    9104 	ld	e, b
      002845 16 00                 9105 	ld	d, #0x00
      002847 3E 9A                 9106 	ld	a, #0x9a
      002849 B9                    9107 	cp	a, c
      00284A 3E 00                 9108 	ld	a, #0x00
      00284C 98                    9109 	sbc	a, b
      00284D CB 7B                 9110 	bit	7, e
      00284F 28 07                 9111 	jr	Z, 00149$
      002851 CB 7A                 9112 	bit	7, d
      002853 20 08                 9113 	jr	NZ, 00150$
      002855 BF                    9114 	cp	a, a
      002856 18 05                 9115 	jr	00150$
      002858                       9116 00149$:
      002858 CB 7A                 9117 	bit	7, d
      00285A 28 01                 9118 	jr	Z, 00150$
      00285C 37                    9119 	scf
      00285D                       9120 00150$:
      00285D 30 24                 9121 	jr	NC, 00113$
      00285F                       9122 00101$:
                                   9123 ;src/main.c:984: projectiles[i].active = 0;
      00285F F8 06                 9124 	ldhl	sp,	#6
      002861 4E                    9125 	ld	c, (hl)
      002862 06 00                 9126 	ld	b, #0x00
      002864 69                    9127 	ld	l, c
      002865 60                    9128 	ld	h, b
      002866 29                    9129 	add	hl, hl
      002867 09                    9130 	add	hl, bc
      002868 29                    9131 	add	hl, hl
      002869 29                    9132 	add	hl, hl
      00286A 11rAAr00              9133 	ld	de, #_projectiles
      00286D 19                    9134 	add	hl, de
      00286E 01 09 00              9135 	ld	bc, #0x0009
      002871 09                    9136 	add	hl, bc
      002872 36 00                 9137 	ld	(hl), #0x00
                                   9138 ;src/main.c:985: set_sprite_tile(30+i, 0x7f);
      002874 F8 05                 9139 	ldhl	sp,	#5
                                   9140 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002876 6E                    9141 	ld	l, (hl)
                                   9142 ;	spillPairReg hl
                                   9143 ;	spillPairReg hl
      002877 26 00                 9144 	ld	h, #0x00
                                   9145 ;	spillPairReg hl
                                   9146 ;	spillPairReg hl
      002879 29                    9147 	add	hl, hl
      00287A 29                    9148 	add	hl, hl
      00287B 11r00r00              9149 	ld	de, #_shadow_OAM
      00287E 19                    9150 	add	hl, de
      00287F 23                    9151 	inc	hl
      002880 23                    9152 	inc	hl
      002881 36 7F                 9153 	ld	(hl), #0x7f
                                   9154 ;src/main.c:985: set_sprite_tile(30+i, 0x7f);
      002883                       9155 00113$:
                                   9156 ;src/main.c:965: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002883 F8 06                 9157 	ldhl	sp,	#6
      002885 34                    9158 	inc	(hl)
      002886 C3r33r27              9159 	jp	00112$
      002889                       9160 00114$:
                                   9161 ;src/main.c:989: }
      002889 E8 07                 9162 	add	sp, #7
      00288B C9                    9163 	ret
                                   9164 ;src/main.c:991: void tickPickups() {
                                   9165 ;	---------------------------------
                                   9166 ; Function tickPickups
                                   9167 ; ---------------------------------
      00288C                       9168 _tickPickups::
      00288C 3B                    9169 	dec	sp
      00288D 3B                    9170 	dec	sp
                                   9171 ;src/main.c:992: pickup.x -= xOverflow;
      00288E 21rECr00              9172 	ld	hl, #(_pickup + 1)
      002891 2A                    9173 	ld	a, (hl+)
      002892 47                    9174 	ld	b, a
      002893 4E                    9175 	ld	c, (hl)
      002894 58                    9176 	ld	e, b
      002895 51                    9177 	ld	d, c
      002896 21r99r00              9178 	ld	hl, #_xOverflow
      002899 2A                    9179 	ld	a,	(hl+)
      00289A 66                    9180 	ld	h, (hl)
      00289B 6F                    9181 	ld	l, a
      00289C 7B                    9182 	ld	a, e
      00289D 95                    9183 	sub	a, l
      00289E 5F                    9184 	ld	e, a
      00289F 7A                    9185 	ld	a, d
      0028A0 9C                    9186 	sbc	a, h
      0028A1 F8 01                 9187 	ldhl	sp,	#1
      0028A3 32                    9188 	ld	(hl-), a
      0028A4 73                    9189 	ld	(hl), e
      0028A5 11rECr00              9190 	ld	de, #(_pickup + 1)
      0028A8 2A                    9191 	ld	a, (hl+)
      0028A9 12                    9192 	ld	(de), a
      0028AA 13                    9193 	inc	de
      0028AB 7E                    9194 	ld	a, (hl)
      0028AC 12                    9195 	ld	(de), a
                                   9196 ;src/main.c:993: pickup.y -= yOverflow;
      0028AD 21rEEr00              9197 	ld	hl, #(_pickup + 3)
      0028B0 2A                    9198 	ld	a, (hl+)
      0028B1 4F                    9199 	ld	c, a
      0028B2 46                    9200 	ld	b, (hl)
      0028B3 79                    9201 	ld	a, c
      0028B4 21r9Br00              9202 	ld	hl, #_yOverflow
      0028B7 96                    9203 	sub	a, (hl)
      0028B8 23                    9204 	inc	hl
      0028B9 4F                    9205 	ld	c, a
      0028BA 78                    9206 	ld	a, b
      0028BB 9E                    9207 	sbc	a, (hl)
      0028BC 47                    9208 	ld	b, a
      0028BD 21rEEr00              9209 	ld	hl, #(_pickup + 3)
      0028C0 79                    9210 	ld	a, c
      0028C1 22                    9211 	ld	(hl+), a
      0028C2 70                    9212 	ld	(hl), b
                                   9213 ;src/main.c:995: move_sprite(3, pickup.x + 4, pickup.y + 12);
      0028C3 79                    9214 	ld	a, c
      0028C4 C6 0C                 9215 	add	a, #0x0c
      0028C6 47                    9216 	ld	b, a
      0028C7 F8 00                 9217 	ldhl	sp,	#0
      0028C9 7E                    9218 	ld	a, (hl)
      0028CA C6 04                 9219 	add	a, #0x04
      0028CC 4F                    9220 	ld	c, a
                                   9221 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0028CD 21r0Cr00              9222 	ld	hl, #(_shadow_OAM + 12)
                                   9223 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0028D0 78                    9224 	ld	a, b
      0028D1 22                    9225 	ld	(hl+), a
      0028D2 71                    9226 	ld	(hl), c
                                   9227 ;src/main.c:996: if (pickup.active) {
      0028D3 FArF0r00              9228 	ld	a, (#(_pickup + 5) + 0)
      0028D6 B7                    9229 	or	a, a
      0028D7 CAr59r2A              9230 	jp	Z, 00143$
                                   9231 ;src/main.c:997: if (pickup.visible) {
      0028DA 21rEBr00              9232 	ld	hl, #_pickup
      0028DD 4E                    9233 	ld	c, (hl)
                                   9234 ;src/main.c:992: pickup.x -= xOverflow;
      0028DE 11rECr00              9235 	ld	de, #(_pickup + 1)
      0028E1 1A                    9236 	ld	a, (de)
      0028E2 F8 00                 9237 	ldhl	sp,	#0
      0028E4 22                    9238 	ld	(hl+), a
      0028E5 13                    9239 	inc	de
      0028E6 1A                    9240 	ld	a, (de)
      0028E7 77                    9241 	ld	(hl), a
                                   9242 ;src/main.c:997: if (pickup.visible) {
      0028E8 79                    9243 	ld	a, c
      0028E9 B7                    9244 	or	a, a
      0028EA CArEDr29              9245 	jp	Z, 00127$
                                   9246 ;src/main.c:998: if (abs(pickup.x - playerDrawX) < 10) {
      0028ED 2B                    9247 	dec	hl
      0028EE 7E                    9248 	ld	a, (hl)
      0028EF 21r93r00              9249 	ld	hl, #_playerDrawX
      0028F2 4E                    9250 	ld	c, (hl)
      0028F3 91                    9251 	sub	a, c
      0028F4 4F                    9252 	ld	c, a
                                   9253 ;src/main.c:347: if (value >= 0) return value;
      0028F5 CB 79                 9254 	bit	7, c
      0028F7 28 03                 9255 	jr	Z, 00135$
                                   9256 ;src/main.c:348: else return - value;
      0028F9 AF                    9257 	xor	a, a
      0028FA 91                    9258 	sub	a, c
      0028FB 4F                    9259 	ld	c, a
                                   9260 ;src/main.c:998: if (abs(pickup.x - playerDrawX) < 10) {
      0028FC                       9261 00135$:
      0028FC 79                    9262 	ld	a, c
      0028FD EE 80                 9263 	xor	a, #0x80
      0028FF D6 8A                 9264 	sub	a, #0x8a
      002901 D2r90r29              9265 	jp	NC, 00115$
                                   9266 ;src/main.c:999: if (abs(pickup.y - playerDrawY) < 10) {
      002904 FArEEr00              9267 	ld	a, (#(_pickup + 3) + 0)
      002907 F8 01                 9268 	ldhl	sp,	#1
      002909 77                    9269 	ld	(hl), a
      00290A 21r94r00              9270 	ld	hl, #_playerDrawY
      00290D 4E                    9271 	ld	c, (hl)
      00290E F8 01                 9272 	ldhl	sp,	#1
      002910 7E                    9273 	ld	a, (hl)
      002911 91                    9274 	sub	a, c
      002912 77                    9275 	ld	(hl), a
                                   9276 ;src/main.c:347: if (value >= 0) return value;
      002913 CB 7E                 9277 	bit	7, (hl)
      002915 28 05                 9278 	jr	Z, 00139$
                                   9279 ;src/main.c:348: else return - value;
      002917 AF                    9280 	xor	a, a
      002918 F8 01                 9281 	ldhl	sp,	#1
      00291A 96                    9282 	sub	a, (hl)
      00291B 77                    9283 	ld	(hl), a
                                   9284 ;src/main.c:999: if (abs(pickup.y - playerDrawY) < 10) {
      00291C                       9285 00139$:
      00291C F8 01                 9286 	ldhl	sp,	#1
      00291E 7E                    9287 	ld	a, (hl)
      00291F EE 80                 9288 	xor	a, #0x80
      002921 D6 8A                 9289 	sub	a, #0x8a
      002923 30 6B                 9290 	jr	NC, 00115$
                                   9291 ;src/main.c:1000: if (pickup.type == 0) { //upgrade
      002925 FArF1r00              9292 	ld	a, (#(_pickup + 6) + 0)
      002928 B7                    9293 	or	a, a
      002929 20 0D                 9294 	jr	NZ, 00104$
                                   9295 ;src/main.c:1001: if (gunLevel < 1) {
      00292B 21r9Er00              9296 	ld	hl, #_gunLevel
      00292E 7E                    9297 	ld	a, (hl)
      00292F D6 01                 9298 	sub	a, #0x01
      002931 30 05                 9299 	jr	NC, 00104$
                                   9300 ;src/main.c:1002: gunLevel += 1;
      002933 34                    9301 	inc	(hl)
      002934 7E                    9302 	ld	a, (hl)
                                   9303 ;src/main.c:1003: setGunIcon();
      002935 CDr61r21              9304 	call	_setGunIcon
      002938                       9305 00104$:
                                   9306 ;src/main.c:1006: if (pickup.type == 1) { //missile ammo
      002938 21rF1r00              9307 	ld	hl, #(_pickup + 6)
      00293B 6E                    9308 	ld	l, (hl)
                                   9309 ;	spillPairReg hl
                                   9310 ;src/main.c:1007: updateMissileCount(pickup.amount);
      00293C 01rF2r00              9311 	ld	bc, #_pickup + 7
                                   9312 ;src/main.c:1006: if (pickup.type == 1) { //missile ammo
      00293F 2D                    9313 	dec	l
      002940 20 09                 9314 	jr	NZ, 00106$
                                   9315 ;src/main.c:1007: updateMissileCount(pickup.amount);
      002942 0A                    9316 	ld	a, (bc)
      002943 C5                    9317 	push	bc
      002944 F5                    9318 	push	af
      002945 33                    9319 	inc	sp
      002946 CDrD9r09              9320 	call	_updateMissileCount
      002949 33                    9321 	inc	sp
      00294A C1                    9322 	pop	bc
      00294B                       9323 00106$:
                                   9324 ;src/main.c:1009: if (pickup.type == 2) {
      00294B FArF1r00              9325 	ld	a, (#(_pickup + 6) + 0)
      00294E D6 02                 9326 	sub	a, #0x02
      002950 20 34                 9327 	jr	NZ, 00111$
                                   9328 ;src/main.c:1010: if (hull + pickup.amount <= 100) {
      002952 21rE7r00              9329 	ld	hl, #_hull
      002955 5E                    9330 	ld	e, (hl)
      002956 16 00                 9331 	ld	d, #0x00
      002958 0A                    9332 	ld	a, (bc)
      002959 4F                    9333 	ld	c, a
      00295A 69                    9334 	ld	l, c
                                   9335 ;	spillPairReg hl
                                   9336 ;	spillPairReg hl
      00295B 26 00                 9337 	ld	h, #0x00
                                   9338 ;	spillPairReg hl
                                   9339 ;	spillPairReg hl
      00295D 19                    9340 	add	hl, de
      00295E 5C                    9341 	ld	e, h
      00295F 16 00                 9342 	ld	d, #0x00
      002961 3E 64                 9343 	ld	a, #0x64
      002963 BD                    9344 	cp	a, l
      002964 3E 00                 9345 	ld	a, #0x00
      002966 9C                    9346 	sbc	a, h
      002967 CB 7B                 9347 	bit	7, e
      002969 28 07                 9348 	jr	Z, 00239$
      00296B CB 7A                 9349 	bit	7, d
      00296D 20 08                 9350 	jr	NZ, 00240$
      00296F BF                    9351 	cp	a, a
      002970 18 05                 9352 	jr	00240$
      002972                       9353 00239$:
      002972 CB 7A                 9354 	bit	7, d
      002974 28 01                 9355 	jr	Z, 00240$
      002976 37                    9356 	scf
      002977                       9357 00240$:
      002977 38 08                 9358 	jr	C, 00108$
                                   9359 ;src/main.c:1011: hull += pickup.amount;
      002979 79                    9360 	ld	a, c
      00297A 21rE7r00              9361 	ld	hl, #_hull
      00297D 86                    9362 	add	a, (hl)
      00297E 77                    9363 	ld	(hl), a
      00297F 18 05                 9364 	jr	00111$
      002981                       9365 00108$:
                                   9366 ;src/main.c:1014: hull = 100;
      002981 21rE7r00              9367 	ld	hl, #_hull
      002984 36 64                 9368 	ld	(hl), #0x64
      002986                       9369 00111$:
                                   9370 ;src/main.c:1017: pickup.active = 0;
      002986 21rF0r00              9371 	ld	hl, #(_pickup + 5)
      002989 36 00                 9372 	ld	(hl), #0x00
                                   9373 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00298B 21r0Er00              9374 	ld	hl, #(_shadow_OAM + 14)
      00298E 36 7F                 9375 	ld	(hl), #0x7f
                                   9376 ;src/main.c:1018: set_sprite_tile(3, 0x7f);
      002990                       9377 00115$:
                                   9378 ;src/main.c:992: pickup.x -= xOverflow;
      002990 21rECr00              9379 	ld	hl, #(_pickup + 1)
      002993 2A                    9380 	ld	a, (hl+)
      002994 4F                    9381 	ld	c, a
      002995 46                    9382 	ld	b, (hl)
                                   9383 ;src/main.c:1021: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      002996 79                    9384 	ld	a, c
      002997 D6 F6                 9385 	sub	a, #0xf6
      002999 78                    9386 	ld	a, b
      00299A 17                    9387 	rla
      00299B 3F                    9388 	ccf
      00299C 1F                    9389 	rra
      00299D DE 7F                 9390 	sbc	a, #0x7f
      00299F 38 40                 9391 	jr	C, 00116$
      0029A1 58                    9392 	ld	e, b
      0029A2 16 00                 9393 	ld	d, #0x00
      0029A4 3E AA                 9394 	ld	a, #0xaa
      0029A6 B9                    9395 	cp	a, c
      0029A7 3E 00                 9396 	ld	a, #0x00
      0029A9 98                    9397 	sbc	a, b
      0029AA CB 7B                 9398 	bit	7, e
      0029AC 28 07                 9399 	jr	Z, 00241$
      0029AE CB 7A                 9400 	bit	7, d
      0029B0 20 08                 9401 	jr	NZ, 00242$
      0029B2 BF                    9402 	cp	a, a
      0029B3 18 05                 9403 	jr	00242$
      0029B5                       9404 00241$:
      0029B5 CB 7A                 9405 	bit	7, d
      0029B7 28 01                 9406 	jr	Z, 00242$
      0029B9 37                    9407 	scf
      0029BA                       9408 00242$:
      0029BA 38 25                 9409 	jr	C, 00116$
                                   9410 ;src/main.c:993: pickup.y -= yOverflow;
      0029BC 21rEEr00              9411 	ld	hl, #(_pickup + 3)
      0029BF 2A                    9412 	ld	a, (hl+)
      0029C0 4F                    9413 	ld	c, a
      0029C1 46                    9414 	ld	b, (hl)
                                   9415 ;src/main.c:1021: if (pickup.x < -10 || pickup.x > 170 || pickup.y < 0 || pickup.y > 155) {
      0029C2 CB 78                 9416 	bit	7, b
      0029C4 20 1B                 9417 	jr	NZ, 00116$
      0029C6 58                    9418 	ld	e, b
      0029C7 16 00                 9419 	ld	d, #0x00
      0029C9 3E 9B                 9420 	ld	a, #0x9b
      0029CB B9                    9421 	cp	a, c
      0029CC 3E 00                 9422 	ld	a, #0x00
      0029CE 98                    9423 	sbc	a, b
      0029CF CB 7B                 9424 	bit	7, e
      0029D1 28 07                 9425 	jr	Z, 00243$
      0029D3 CB 7A                 9426 	bit	7, d
      0029D5 20 08                 9427 	jr	NZ, 00244$
      0029D7 BF                    9428 	cp	a, a
      0029D8 18 05                 9429 	jr	00244$
      0029DA                       9430 00243$:
      0029DA CB 7A                 9431 	bit	7, d
      0029DC 28 01                 9432 	jr	Z, 00244$
      0029DE 37                    9433 	scf
      0029DF                       9434 00244$:
      0029DF 30 78                 9435 	jr	NC, 00143$
      0029E1                       9436 00116$:
                                   9437 ;src/main.c:1022: pickup.visible = 0;
      0029E1 21rEBr00              9438 	ld	hl, #_pickup
      0029E4 36 00                 9439 	ld	(hl), #0x00
                                   9440 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0029E6 21r0Er00              9441 	ld	hl, #(_shadow_OAM + 14)
      0029E9 36 7F                 9442 	ld	(hl), #0x7f
                                   9443 ;src/main.c:1023: set_sprite_tile(3, 0x7f);
      0029EB 18 6C                 9444 	jr	00143$
      0029ED                       9445 00127$:
                                   9446 ;src/main.c:1027: if (pickup.x >= -10 && pickup.x <= 170 && pickup.y >= 0 && pickup.y <= 155) {
      0029ED F8 00                 9447 	ldhl	sp,	#0
      0029EF 2A                    9448 	ld	a, (hl+)
      0029F0 D6 F6                 9449 	sub	a, #0xf6
      0029F2 7E                    9450 	ld	a, (hl)
      0029F3 DE FF                 9451 	sbc	a, #0xff
      0029F5 56                    9452 	ld	d, (hl)
      0029F6 3E FF                 9453 	ld	a, #0xff
      0029F8 CB 7F                 9454 	bit	7,a
      0029FA 28 07                 9455 	jr	Z, 00245$
      0029FC CB 7A                 9456 	bit	7, d
      0029FE 20 08                 9457 	jr	NZ, 00246$
      002A00 BF                    9458 	cp	a, a
      002A01 18 05                 9459 	jr	00246$
      002A03                       9460 00245$:
      002A03 CB 7A                 9461 	bit	7, d
      002A05 28 01                 9462 	jr	Z, 00246$
      002A07 37                    9463 	scf
      002A08                       9464 00246$:
      002A08 38 4F                 9465 	jr	C, 00143$
      002A0A C1                    9466 	pop	bc
      002A0B C5                    9467 	push	bc
      002A0C 58                    9468 	ld	e, b
      002A0D 16 00                 9469 	ld	d, #0x00
      002A0F 3E AA                 9470 	ld	a, #0xaa
      002A11 B9                    9471 	cp	a, c
      002A12 3E 00                 9472 	ld	a, #0x00
      002A14 98                    9473 	sbc	a, b
      002A15 CB 7B                 9474 	bit	7, e
      002A17 28 07                 9475 	jr	Z, 00247$
      002A19 CB 7A                 9476 	bit	7, d
      002A1B 20 08                 9477 	jr	NZ, 00248$
      002A1D BF                    9478 	cp	a, a
      002A1E 18 05                 9479 	jr	00248$
      002A20                       9480 00247$:
      002A20 CB 7A                 9481 	bit	7, d
      002A22 28 01                 9482 	jr	Z, 00248$
      002A24 37                    9483 	scf
      002A25                       9484 00248$:
      002A25 38 32                 9485 	jr	C, 00143$
      002A27 21rEEr00              9486 	ld	hl, #(_pickup + 3)
      002A2A 2A                    9487 	ld	a, (hl+)
      002A2B 4F                    9488 	ld	c, a
      002A2C 46                    9489 	ld	b, (hl)
      002A2D CB 78                 9490 	bit	7, b
      002A2F 20 28                 9491 	jr	NZ, 00143$
      002A31 58                    9492 	ld	e, b
      002A32 16 00                 9493 	ld	d, #0x00
      002A34 3E 9B                 9494 	ld	a, #0x9b
      002A36 B9                    9495 	cp	a, c
      002A37 3E 00                 9496 	ld	a, #0x00
      002A39 98                    9497 	sbc	a, b
      002A3A CB 7B                 9498 	bit	7, e
      002A3C 28 07                 9499 	jr	Z, 00249$
      002A3E CB 7A                 9500 	bit	7, d
      002A40 20 08                 9501 	jr	NZ, 00250$
      002A42 BF                    9502 	cp	a, a
      002A43 18 05                 9503 	jr	00250$
      002A45                       9504 00249$:
      002A45 CB 7A                 9505 	bit	7, d
      002A47 28 01                 9506 	jr	Z, 00250$
      002A49 37                    9507 	scf
      002A4A                       9508 00250$:
      002A4A 38 0D                 9509 	jr	C, 00143$
                                   9510 ;src/main.c:1028: pickup.visible = 1;
      002A4C 21rEBr00              9511 	ld	hl, #_pickup
      002A4F 36 01                 9512 	ld	(hl), #0x01
                                   9513 ;src/main.c:1029: set_sprite_tile(3, pickup.tile);
      002A51 21rF3r00              9514 	ld	hl, #(_pickup + 8)
      002A54 4E                    9515 	ld	c, (hl)
                                   9516 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002A55 21r0Er00              9517 	ld	hl, #(_shadow_OAM + 14)
      002A58 71                    9518 	ld	(hl), c
                                   9519 ;src/main.c:1029: set_sprite_tile(3, pickup.tile);
      002A59                       9520 00143$:
                                   9521 ;src/main.c:1034: }
      002A59 33                    9522 	inc	sp
      002A5A 33                    9523 	inc	sp
      002A5B C9                    9524 	ret
                                   9525 ;src/main.c:1036: void initEnemyOptions() {
                                   9526 ;	---------------------------------
                                   9527 ; Function initEnemyOptions
                                   9528 ; ---------------------------------
      002A5C                       9529 _initEnemyOptions::
                                   9530 ;src/main.c:1037: enemyOptions[0] = blob;
      002A5C 11 11 00              9531 	ld	de, #0x0011
      002A5F D5                    9532 	push	de
      002A60 11r10r00              9533 	ld	de, #_blob
      002A63 D5                    9534 	push	de
      002A64 11r00r00              9535 	ld	de, #_enemyOptions
      002A67 D5                    9536 	push	de
      002A68 CDr00r00              9537 	call	___memcpy
      002A6B E8 06                 9538 	add	sp, #6
                                   9539 ;src/main.c:1038: enemyOptions[1] = bomb;
      002A6D 11 11 00              9540 	ld	de, #0x0011
      002A70 D5                    9541 	push	de
      002A71 11r21r00              9542 	ld	de, #_bomb
      002A74 D5                    9543 	push	de
      002A75 11r11r00              9544 	ld	de, #(_enemyOptions + 17)
      002A78 D5                    9545 	push	de
      002A79 CDr00r00              9546 	call	___memcpy
      002A7C E8 06                 9547 	add	sp, #6
                                   9548 ;src/main.c:1039: enemyOptions[2] = miniship;
      002A7E 11 11 00              9549 	ld	de, #0x0011
      002A81 D5                    9550 	push	de
      002A82 11r32r00              9551 	ld	de, #_miniship
      002A85 D5                    9552 	push	de
      002A86 11r22r00              9553 	ld	de, #(_enemyOptions + 34)
      002A89 D5                    9554 	push	de
      002A8A CDr00r00              9555 	call	___memcpy
      002A8D E8 06                 9556 	add	sp, #6
                                   9557 ;src/main.c:1040: enemyOptions[3] = shieldship;
      002A8F 11 11 00              9558 	ld	de, #0x0011
      002A92 D5                    9559 	push	de
      002A93 11r54r00              9560 	ld	de, #_shieldship
      002A96 D5                    9561 	push	de
      002A97 11r33r00              9562 	ld	de, #(_enemyOptions + 51)
      002A9A D5                    9563 	push	de
      002A9B CDr00r00              9564 	call	___memcpy
      002A9E E8 06                 9565 	add	sp, #6
                                   9566 ;src/main.c:1042: enemyOptions[4] = bigblob;
      002AA0 11 11 00              9567 	ld	de, #0x0011
      002AA3 D5                    9568 	push	de
      002AA4 11r43r00              9569 	ld	de, #_bigblob
      002AA7 D5                    9570 	push	de
      002AA8 11r44r00              9571 	ld	de, #(_enemyOptions + 68)
      002AAB D5                    9572 	push	de
      002AAC CDr00r00              9573 	call	___memcpy
      002AAF E8 06                 9574 	add	sp, #6
                                   9575 ;src/main.c:1043: }
      002AB1 C9                    9576 	ret
                                   9577 ;src/main.c:1046: void initProjectiles() {
                                   9578 ;	---------------------------------
                                   9579 ; Function initProjectiles
                                   9580 ; ---------------------------------
      002AB2                       9581 _initProjectiles::
                                   9582 ;src/main.c:1047: set_sprite_data(0x20, 17, ProjectileTiles); 
      002AB2 11rE8r05              9583 	ld	de, #_ProjectileTiles
      002AB5 D5                    9584 	push	de
      002AB6 21 20 11              9585 	ld	hl, #0x1120
      002AB9 E5                    9586 	push	hl
      002ABA CDr00r00              9587 	call	_set_sprite_data
      002ABD E8 04                 9588 	add	sp, #4
                                   9589 ;src/main.c:1049: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002ABF AF                    9590 	xor	a, a
      002AC0                       9591 00103$:
      002AC0 21r99r08              9592 	ld	hl, #_PROJECTILECOUNT
      002AC3 4E                    9593 	ld	c, (hl)
      002AC4 B9                    9594 	cp	a, c
      002AC5 D0                    9595 	ret	NC
      002AC6 3C                    9596 	inc	a
                                   9597 ;src/main.c:1053: }
      002AC7 18 F7                 9598 	jr	00103$
                                   9599 ;src/main.c:1055: void initGame() {
                                   9600 ;	---------------------------------
                                   9601 ; Function initGame
                                   9602 ; ---------------------------------
      002AC9                       9603 _initGame::
                                   9604 ;src/main.c:1058: xDir = 0;
      002AC9 21r8Br00              9605 	ld	hl, #_xDir
      002ACC 36 00                 9606 	ld	(hl), #0x00
                                   9607 ;src/main.c:1059: yDir = -1;
      002ACE 21r8Cr00              9608 	ld	hl, #_yDir
      002AD1 36 FF                 9609 	ld	(hl), #0xff
                                   9610 ;src/main.c:1060: xSpeed = 0;
      002AD3 21r8Dr00              9611 	ld	hl, #_xSpeed
      002AD6 36 00                 9612 	ld	(hl), #0x00
                                   9613 ;src/main.c:1061: ySpeed = 0;
      002AD8 21r8Er00              9614 	ld	hl, #_ySpeed
      002ADB 36 00                 9615 	ld	(hl), #0x00
                                   9616 ;src/main.c:1064: playerX = 80<<5;
      002ADD 21r8Fr00              9617 	ld	hl, #_playerX
      002AE0 36 00                 9618 	ld	(hl), #0x00
      002AE2 23                    9619 	inc	hl
      002AE3 36 0A                 9620 	ld	(hl), #0x0a
                                   9621 ;src/main.c:1065: playerY = 80<<5;
      002AE5 21r91r00              9622 	ld	hl, #_playerY
      002AE8 36 00                 9623 	ld	(hl), #0x00
      002AEA 23                    9624 	inc	hl
      002AEB 36 0A                 9625 	ld	(hl), #0x0a
                                   9626 ;src/main.c:1067: playerDrawX = 80;
      002AED 21r93r00              9627 	ld	hl, #_playerDrawX
      002AF0 36 50                 9628 	ld	(hl), #0x50
                                   9629 ;src/main.c:1068: playerDrawY = 80;
      002AF2 21r94r00              9630 	ld	hl, #_playerDrawY
      002AF5 36 50                 9631 	ld	(hl), #0x50
                                   9632 ;src/main.c:1071: bgX = 0;
      002AF7 AF                    9633 	xor	a, a
      002AF8 21r95r00              9634 	ld	hl, #_bgX
      002AFB 22                    9635 	ld	(hl+), a
      002AFC 77                    9636 	ld	(hl), a
                                   9637 ;src/main.c:1072: bgY = 0;
      002AFD AF                    9638 	xor	a, a
      002AFE 21r97r00              9639 	ld	hl, #_bgY
      002B01 22                    9640 	ld	(hl+), a
      002B02 77                    9641 	ld	(hl), a
                                   9642 ;src/main.c:1074: hull = maxHull;
      002B03 FAr9Br08              9643 	ld	a, (#_maxHull)
      002B06 EArE7r00              9644 	ld	(#_hull),a
                                   9645 ;src/main.c:1075: shield = maxShield;
      002B09 FAr9Cr08              9646 	ld	a, (#_maxShield)
      002B0C EArE8r00              9647 	ld	(#_shield),a
                                   9648 ;src/main.c:1077: DISPLAY_ON;
      002B0F F0r00                 9649 	ldh	a, (_LCDC_REG + 0)
      002B11 F6 80                 9650 	or	a, #0x80
      002B13 E0r00                 9651 	ldh	(_LCDC_REG + 0), a
                                   9652 ;src/main.c:1078: SPRITES_8x16;
      002B15 F0r00                 9653 	ldh	a, (_LCDC_REG + 0)
      002B17 F6 04                 9654 	or	a, #0x04
      002B19 E0r00                 9655 	ldh	(_LCDC_REG + 0), a
                                   9656 ;src/main.c:1079: set_sprite_data(0, 12, Player1);
      002B1B 11r83r07              9657 	ld	de, #_Player1
      002B1E D5                    9658 	push	de
      002B1F 21 00 0C              9659 	ld	hl, #0xc00
      002B22 E5                    9660 	push	hl
      002B23 CDr00r00              9661 	call	_set_sprite_data
      002B26 E8 04                 9662 	add	sp, #4
                                   9663 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002B28 21r02r00              9664 	ld	hl, #(_shadow_OAM + 2)
      002B2B 36 00                 9665 	ld	(hl), #0x00
      002B2D 21r06r00              9666 	ld	hl, #(_shadow_OAM + 6)
      002B30 36 02                 9667 	ld	(hl), #0x02
                                   9668 ;src/main.c:1085: SHOW_SPRITES;
      002B32 F0r00                 9669 	ldh	a, (_LCDC_REG + 0)
      002B34 F6 02                 9670 	or	a, #0x02
      002B36 E0r00                 9671 	ldh	(_LCDC_REG + 0), a
                                   9672 ;src/main.c:1089: font_init();
      002B38 CDr00r00              9673 	call	_font_init
                                   9674 ;src/main.c:1091: min_font = font_load(font_min); // 36 tiles of characters
      002B3B 11r00r00              9675 	ld	de, #_font_min
      002B3E D5                    9676 	push	de
      002B3F CDr00r00              9677 	call	_font_load
      002B42 E1                    9678 	pop	hl
      002B43 21rE9r00              9679 	ld	hl, #_min_font
      002B46 7B                    9680 	ld	a, e
      002B47 22                    9681 	ld	(hl+), a
                                   9682 ;src/main.c:1092: font_set(min_font);
      002B48 7A                    9683 	ld	a, d
      002B49 32                    9684 	ld	(hl-), a
      002B4A 2A                    9685 	ld	a, (hl+)
      002B4B 5F                    9686 	ld	e, a
      002B4C 56                    9687 	ld	d, (hl)
      002B4D D5                    9688 	push	de
      002B4E CDr00r00              9689 	call	_font_set
      002B51 E1                    9690 	pop	hl
                                   9691 ;src/main.c:1093: set_win_tiles(1,0,4,1,hullabel);
      002B52 11r00r00              9692 	ld	de, #_hullabel
      002B55 D5                    9693 	push	de
      002B56 21 04 01              9694 	ld	hl, #0x104
      002B59 E5                    9695 	push	hl
      002B5A 21 01 00              9696 	ld	hl, #0x01
      002B5D E5                    9697 	push	hl
      002B5E CDr00r00              9698 	call	_set_win_tiles
      002B61 E8 06                 9699 	add	sp, #6
                                   9700 ;src/main.c:1094: set_win_tiles(1,1,4,1,shieldlabel);
      002B63 11r04r00              9701 	ld	de, #_shieldlabel
      002B66 D5                    9702 	push	de
      002B67 21 04 01              9703 	ld	hl, #0x104
      002B6A E5                    9704 	push	hl
      002B6B 21 01 01              9705 	ld	hl, #0x101
      002B6E E5                    9706 	push	hl
      002B6F CDr00r00              9707 	call	_set_win_tiles
      002B72 E8 06                 9708 	add	sp, #6
                                   9709 ;src/main.c:1099: set_bkg_data(0x50,1,healthblock);
      002B74 11r07r05              9710 	ld	de, #_healthblock
      002B77 D5                    9711 	push	de
      002B78 21 50 01              9712 	ld	hl, #0x150
      002B7B E5                    9713 	push	hl
      002B7C CDr00r00              9714 	call	_set_bkg_data
      002B7F E8 04                 9715 	add	sp, #4
                                   9716 ;src/main.c:1101: setHealthBar(0, hull);
      002B81 FArE7r00              9717 	ld	a, (#_hull)
      002B84 67                    9718 	ld	h, a
      002B85 2E 00                 9719 	ld	l, #0x00
      002B87 E5                    9720 	push	hl
      002B88 CDr9Er08              9721 	call	_setHealthBar
      002B8B E1                    9722 	pop	hl
                                   9723 ;src/main.c:1102: setHealthBar(1, shield);
      002B8C FArE8r00              9724 	ld	a, (#_shield)
      002B8F 67                    9725 	ld	h, a
      002B90 2E 01                 9726 	ld	l, #0x01
      002B92 E5                    9727 	push	hl
      002B93 CDr9Er08              9728 	call	_setHealthBar
      002B96 E1                    9729 	pop	hl
                                   9730 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      002B97 3E 07                 9731 	ld	a, #0x07
      002B99 E0r00                 9732 	ldh	(_WX_REG + 0), a
      002B9B 3E 7E                 9733 	ld	a, #0x7e
      002B9D E0r00                 9734 	ldh	(_WY_REG + 0), a
                                   9735 ;src/main.c:1109: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      002B9F 11r87r04              9736 	ld	de, #_backgroundtiles
      002BA2 D5                    9737 	push	de
      002BA3 21 25 08              9738 	ld	hl, #0x825
      002BA6 E5                    9739 	push	hl
      002BA7 CDr00r00              9740 	call	_set_bkg_data
      002BAA E8 04                 9741 	add	sp, #4
                                   9742 ;src/main.c:1110: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      002BAC 11r87r00              9743 	ld	de, #_background1
      002BAF D5                    9744 	push	de
      002BB0 21 20 20              9745 	ld	hl, #0x2020
      002BB3 E5                    9746 	push	hl
      002BB4 AF                    9747 	xor	a, a
      002BB5 0F                    9748 	rrca
      002BB6 F5                    9749 	push	af
      002BB7 CDr00r00              9750 	call	_set_bkg_tiles
      002BBA E8 06                 9751 	add	sp, #6
                                   9752 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      002BBC AF                    9753 	xor	a, a
      002BBD E0r00                 9754 	ldh	(_SCX_REG + 0), a
      002BBF AF                    9755 	xor	a, a
      002BC0 E0r00                 9756 	ldh	(_SCY_REG + 0), a
                                   9757 ;src/main.c:1116: set_bkg_data(0x51, 18, ProjectileTiles);
      002BC2 11rE8r05              9758 	ld	de, #_ProjectileTiles
      002BC5 D5                    9759 	push	de
      002BC6 21 51 12              9760 	ld	hl, #0x1251
      002BC9 E5                    9761 	push	hl
      002BCA CDr00r00              9762 	call	_set_bkg_data
      002BCD E8 04                 9763 	add	sp, #4
                                   9764 ;src/main.c:1118: set_win_tiles(10, 0,4,1,weaponlabel);
      002BCF 11r08r00              9765 	ld	de, #_weaponlabel
      002BD2 D5                    9766 	push	de
      002BD3 21 04 01              9767 	ld	hl, #0x104
      002BD6 E5                    9768 	push	hl
      002BD7 21 0A 00              9769 	ld	hl, #0x0a
      002BDA E5                    9770 	push	hl
      002BDB CDr00r00              9771 	call	_set_win_tiles
      002BDE E8 06                 9772 	add	sp, #6
                                   9773 ;src/main.c:1119: set_win_tiles(10, 1,4,1,scorelabel);
      002BE0 11r0Cr00              9774 	ld	de, #_scorelabel
      002BE3 D5                    9775 	push	de
      002BE4 21 04 01              9776 	ld	hl, #0x104
      002BE7 E5                    9777 	push	hl
      002BE8 21 0A 01              9778 	ld	hl, #0x10a
      002BEB E5                    9779 	push	hl
      002BEC CDr00r00              9780 	call	_set_win_tiles
      002BEF E8 06                 9781 	add	sp, #6
                                   9782 ;src/main.c:1121: setGunIcon();
      002BF1 CDr61r21              9783 	call	_setGunIcon
                                   9784 ;src/main.c:1122: SHOW_BKG;
      002BF4 F0r00                 9785 	ldh	a, (_LCDC_REG + 0)
      002BF6 F6 01                 9786 	or	a, #0x01
      002BF8 E0r00                 9787 	ldh	(_LCDC_REG + 0), a
                                   9788 ;src/main.c:1123: SHOW_WIN;;
      002BFA F0r00                 9789 	ldh	a, (_LCDC_REG + 0)
      002BFC F6 20                 9790 	or	a, #0x20
      002BFE E0r00                 9791 	ldh	(_LCDC_REG + 0), a
                                   9792 ;src/main.c:1125: SCORE = MAKE_BCD(00000);
      002C00 AF                    9793 	xor	a, a
      002C01 21rACr00              9794 	ld	hl, #_SCORE
      002C04 22                    9795 	ld	(hl+), a
      002C05 22                    9796 	ld	(hl+), a
      002C06 22                    9797 	ld	(hl+), a
      002C07 77                    9798 	ld	(hl), a
                                   9799 ;src/main.c:1126: updateScore();
      002C08 CDrAFr09              9800 	call	_updateScore
                                   9801 ;src/main.c:1127: MISSILES = MAKE_BCD(1);
      002C0B 21rA2r00              9802 	ld	hl, #_MISSILES
      002C0E 3E 01                 9803 	ld	a, #0x01
      002C10 22                    9804 	ld	(hl+), a
      002C11 AF                    9805 	xor	a, a
      002C12 22                    9806 	ld	(hl+), a
      002C13 22                    9807 	ld	(hl+), a
      002C14 77                    9808 	ld	(hl), a
                                   9809 ;src/main.c:1128: updateMissileCount(0);
      002C15 AF                    9810 	xor	a, a
      002C16 F5                    9811 	push	af
      002C17 33                    9812 	inc	sp
      002C18 CDrD9r09              9813 	call	_updateMissileCount
      002C1B 33                    9814 	inc	sp
                                   9815 ;src/main.c:1129: set_win_tiles(17, 0,1,1,gunMap+2);
      002C1C 11rA9r00              9816 	ld	de, #(_gunMap + 2)
      002C1F D5                    9817 	push	de
      002C20 21 01 01              9818 	ld	hl, #0x101
      002C23 E5                    9819 	push	hl
      002C24 21 11 00              9820 	ld	hl, #0x11
      002C27 E5                    9821 	push	hl
      002C28 CDr00r00              9822 	call	_set_win_tiles
      002C2B E8 06                 9823 	add	sp, #6
                                   9824 ;src/main.c:1133: pickup = upgrade;//upgrade;
      002C2D 11 09 00              9825 	ld	de, #0x0009
      002C30 D5                    9826 	push	de
      002C31 11r08r07              9827 	ld	de, #_upgrade
      002C34 D5                    9828 	push	de
      002C35 11rEBr00              9829 	ld	de, #_pickup
      002C38 D5                    9830 	push	de
      002C39 CDr00r00              9831 	call	___memcpy
      002C3C E8 06                 9832 	add	sp, #6
                                   9833 ;src/main.c:1135: set_sprite_data(0x70, 6, Pickups);
      002C3E 11r23r07              9834 	ld	de, #_Pickups
      002C41 D5                    9835 	push	de
      002C42 21 70 06              9836 	ld	hl, #0x670
      002C45 E5                    9837 	push	hl
      002C46 CDr00r00              9838 	call	_set_sprite_data
      002C49 E8 04                 9839 	add	sp, #4
                                   9840 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002C4B 21r0Er00              9841 	ld	hl, #(_shadow_OAM + 14)
      002C4E 36 7F                 9842 	ld	(hl), #0x7f
                                   9843 ;src/main.c:1139: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002C50 FArEEr00              9844 	ld	a, (#(_pickup + 3) + 0)
      002C53 C6 0C                 9845 	add	a, #0x0c
      002C55 47                    9846 	ld	b, a
      002C56 FArECr00              9847 	ld	a, (#(_pickup + 1) + 0)
      002C59 C6 04                 9848 	add	a, #0x04
      002C5B 4F                    9849 	ld	c, a
                                   9850 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002C5C 21r0Cr00              9851 	ld	hl, #(_shadow_OAM + 12)
                                   9852 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002C5F 78                    9853 	ld	a, b
      002C60 22                    9854 	ld	(hl+), a
      002C61 71                    9855 	ld	(hl), c
                                   9856 ;src/main.c:1139: move_sprite(3, pickup.x + 4, pickup.y + 12);
                                   9857 ;src/main.c:1141: }
      002C62 C9                    9858 	ret
                                   9859 ;src/main.c:1143: void main(){
                                   9860 ;	---------------------------------
                                   9861 ; Function main
                                   9862 ; ---------------------------------
      002C63                       9863 _main::
                                   9864 ;src/main.c:1146: initEnemyOptions();
      002C63 CDr5Cr2A              9865 	call	_initEnemyOptions
                                   9866 ;src/main.c:1149: STAT_REG = 0x45;
      002C66 3E 45                 9867 	ld	a, #0x45
      002C68 E0r00                 9868 	ldh	(_STAT_REG + 0), a
                                   9869 ;src/main.c:1150: LYC_REG = 0x7e; //line 126
      002C6A 3E 7E                 9870 	ld	a, #0x7e
      002C6C E0r00                 9871 	ldh	(_LYC_REG + 0), a
                                   9872 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      002C6E F3                    9873 	di
                                   9874 ;src/main.c:1152: add_LCD(interruptLCD);
      002C6F 11r00r00              9875 	ld	de, #_interruptLCD
      002C72 D5                    9876 	push	de
      002C73 CDr00r00              9877 	call	_add_LCD
      002C76 33                    9878 	inc	sp
      002C77 33                    9879 	inc	sp
                                   9880 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      002C78 FB                    9881 	ei
                                   9882 ;src/main.c:1154: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      002C79 3E 03                 9883 	ld	a, #0x03
      002C7B F5                    9884 	push	af
      002C7C 33                    9885 	inc	sp
      002C7D CDr00r00              9886 	call	_set_interrupts
      002C80 33                    9887 	inc	sp
                                   9888 ;src/main.c:1158: NR52_REG = 0x80; // sound on 
      002C81 3E 80                 9889 	ld	a, #0x80
      002C83 E0r00                 9890 	ldh	(_NR52_REG + 0), a
                                   9891 ;src/main.c:1159: NR50_REG = 0x77; // volume
      002C85 3E 77                 9892 	ld	a, #0x77
      002C87 E0r00                 9893 	ldh	(_NR50_REG + 0), a
                                   9894 ;src/main.c:1160: NR51_REG = 0xFF; // all channels
      002C89 3E FF                 9895 	ld	a, #0xff
      002C8B E0r00                 9896 	ldh	(_NR51_REG + 0), a
                                   9897 ;src/main.c:1164: waitpad(J_A);
      002C8D 3E 10                 9898 	ld	a, #0x10
      002C8F F5                    9899 	push	af
      002C90 33                    9900 	inc	sp
      002C91 CDr00r00              9901 	call	_waitpad
      002C94 33                    9902 	inc	sp
                                   9903 ;src/main.c:1165: uint16_t seed = LY_REG;
      002C95 F0r00                 9904 	ldh	a, (_LY_REG + 0)
      002C97 4F                    9905 	ld	c, a
      002C98 06 00                 9906 	ld	b, #0x00
                                   9907 ;src/main.c:1166: seed |= (uint16_t)DIV_REG << 8;
      002C9A F0r00                 9908 	ldh	a, (_DIV_REG + 0)
      002C9C 5F                    9909 	ld	e, a
      002C9D AF                    9910 	xor	a, a
      002C9E B1                    9911 	or	a, c
      002C9F 4F                    9912 	ld	c, a
      002CA0 7B                    9913 	ld	a, e
      002CA1 B0                    9914 	or	a, b
      002CA2 47                    9915 	ld	b, a
                                   9916 ;src/main.c:1167: initrand(seed);
      002CA3 C5                    9917 	push	bc
      002CA4 CDr00r00              9918 	call	_initrand
      002CA7 E1                    9919 	pop	hl
                                   9920 ;src/main.c:1172: initGame();
      002CA8 CDrC9r2A              9921 	call	_initGame
                                   9922 ;src/main.c:1173: initEnemies(1);
      002CAB 3E 01                 9923 	ld	a, #0x01
      002CAD F5                    9924 	push	af
      002CAE 33                    9925 	inc	sp
      002CAF CDr04r0D              9926 	call	_initEnemies
      002CB2 33                    9927 	inc	sp
                                   9928 ;src/main.c:1174: initProjectiles();
      002CB3 CDrB2r2A              9929 	call	_initProjectiles
                                   9930 ;src/main.c:1176: while(1) {
      002CB6                       9931 00119$:
                                   9932 ;src/main.c:1177: SHOW_SPRITES;
      002CB6 F0r00                 9933 	ldh	a, (_LCDC_REG + 0)
      002CB8 F6 02                 9934 	or	a, #0x02
      002CBA E0r00                 9935 	ldh	(_LCDC_REG + 0), a
                                   9936 ;src/main.c:1179: joydata = joypad(); // query for button states
      002CBC CDr00r00              9937 	call	_joypad
      002CBF 21rE6r00              9938 	ld	hl, #_joydata
      002CC2 73                    9939 	ld	(hl), e
                                   9940 ;src/main.c:1181: updateDirection(); // set player direction
      002CC3 CDr77r0A              9941 	call	_updateDirection
                                   9942 ;src/main.c:1184: move(); 
      002CC6 CDrCEr16              9943 	call	_move
                                   9944 ;src/main.c:1186: updateEnemyPositions();
      002CC9 CDr6Fr0E              9945 	call	_updateEnemyPositions
                                   9946 ;src/main.c:1189: checkCollision(); 
      002CCC CDrCBr1C              9947 	call	_checkCollision
                                   9948 ;src/main.c:869: if (shield < maxShield) {
      002CCF 21r9Cr08              9949 	ld	hl, #_maxShield
      002CD2 4E                    9950 	ld	c, (hl)
      002CD3 59                    9951 	ld	e, c
      002CD4 21rE8r00              9952 	ld	hl, #_shield
      002CD7 56                    9953 	ld	d, (hl)
      002CD8 7E                    9954 	ld	a, (hl)
      002CD9 91                    9955 	sub	a, c
      002CDA CB 7B                 9956 	bit	7, e
      002CDC 28 07                 9957 	jr	Z, 00186$
      002CDE CB 7A                 9958 	bit	7, d
      002CE0 20 08                 9959 	jr	NZ, 00187$
      002CE2 BF                    9960 	cp	a, a
      002CE3 18 05                 9961 	jr	00187$
      002CE5                       9962 00186$:
      002CE5 CB 7A                 9963 	bit	7, d
      002CE7 28 01                 9964 	jr	Z, 00187$
      002CE9 37                    9965 	scf
      002CEA                       9966 00187$:
      002CEA 30 04                 9967 	jr	NC, 00127$
                                   9968 ;src/main.c:870: shield += 1;
      002CEC 21rE8r00              9969 	ld	hl, #_shield
      002CEF 34                    9970 	inc	(hl)
      002CF0                       9971 00127$:
                                   9972 ;src/main.c:872: setHealthBar(0, hull);
      002CF0 FArE7r00              9973 	ld	a, (#_hull)
      002CF3 67                    9974 	ld	h, a
      002CF4 2E 00                 9975 	ld	l, #0x00
      002CF6 E5                    9976 	push	hl
      002CF7 CDr9Er08              9977 	call	_setHealthBar
      002CFA E1                    9978 	pop	hl
                                   9979 ;src/main.c:873: setHealthBar(1, shield);
      002CFB FArE8r00              9980 	ld	a, (#_shield)
      002CFE 67                    9981 	ld	h, a
      002CFF 2E 01                 9982 	ld	l, #0x01
      002D01 E5                    9983 	push	hl
      002D02 CDr9Er08              9984 	call	_setHealthBar
      002D05 E1                    9985 	pop	hl
                                   9986 ;src/main.c:1194: if (joydata & J_B && fireCooldown == 0) {
      002D06 FArE6r00              9987 	ld	a, (#_joydata)
      002D09 CB 6F                 9988 	bit	5, a
      002D0B 28 09                 9989 	jr	Z, 00102$
      002D0D FAr8Ar00              9990 	ld	a, (#_fireCooldown)
      002D10 B7                    9991 	or	a, a
      002D11 20 03                 9992 	jr	NZ, 00102$
                                   9993 ;src/main.c:1195: fire();
      002D13 CDr94r21              9994 	call	_fire
      002D16                       9995 00102$:
                                   9996 ;src/main.c:1197: if (fireCooldown > 0) {
      002D16 21r8Ar00              9997 	ld	hl, #_fireCooldown
      002D19 7E                    9998 	ld	a, (hl)
      002D1A B7                    9999 	or	a, a
      002D1B 28 01                10000 	jr	Z, 00105$
                                  10001 ;src/main.c:1198: --fireCooldown;
      002D1D 35                   10002 	dec	(hl)
      002D1E                      10003 00105$:
                                  10004 ;src/main.c:1201: if (joydata & J_SELECT && switchDelay == 0) {
      002D1E FArE6r00             10005 	ld	a, (#_joydata)
      002D21 CB 77                10006 	bit	6, a
      002D23 28 24                10007 	jr	Z, 00112$
      002D25 FArA6r00             10008 	ld	a, (#_switchDelay)
      002D28 B7                   10009 	or	a, a
      002D29 20 1E                10010 	jr	NZ, 00112$
                                  10011 ;src/main.c:1202: if (currentGun == 0) {
      002D2B 21r9Fr00             10012 	ld	hl, #_currentGun
      002D2E 7E                   10013 	ld	a, (hl)
      002D2F B7                   10014 	or	a, a
      002D30 20 04                10015 	jr	NZ, 00109$
                                  10016 ;src/main.c:1203: currentGun = 1;
      002D32 36 01                10017 	ld	(hl), #0x01
      002D34 18 0B                10018 	jr	00110$
      002D36                      10019 00109$:
                                  10020 ;src/main.c:1205: else if (currentGun == 1) {
      002D36 FAr9Fr00             10021 	ld	a, (#_currentGun)
      002D39 3D                   10022 	dec	a
      002D3A 20 05                10023 	jr	NZ, 00110$
                                  10024 ;src/main.c:1206: currentGun = 0;
      002D3C 21r9Fr00             10025 	ld	hl, #_currentGun
      002D3F 36 00                10026 	ld	(hl), #0x00
      002D41                      10027 00110$:
                                  10028 ;src/main.c:1208: setGunIcon();
      002D41 CDr61r21             10029 	call	_setGunIcon
                                  10030 ;src/main.c:1209: switchDelay = 30;
      002D44 21rA6r00             10031 	ld	hl, #_switchDelay
      002D47 36 1E                10032 	ld	(hl), #0x1e
      002D49                      10033 00112$:
                                  10034 ;src/main.c:1211: if (switchDelay != 0) {
      002D49 21rA6r00             10035 	ld	hl, #_switchDelay
      002D4C 7E                   10036 	ld	a, (hl)
      002D4D B7                   10037 	or	a, a
      002D4E 28 01                10038 	jr	Z, 00115$
                                  10039 ;src/main.c:1212: switchDelay--;
      002D50 35                   10040 	dec	(hl)
      002D51                      10041 00115$:
                                  10042 ;src/main.c:1214: moveProjectiles();
      002D51 CDr2Dr27             10043 	call	_moveProjectiles
                                  10044 ;src/main.c:1215: tickPickups();
      002D54 CDr8Cr28             10045 	call	_tickPickups
                                  10046 ;src/main.c:1219: if (hull > 100) {
      002D57 3E 64                10047 	ld	a, #0x64
      002D59 21rE7r00             10048 	ld	hl, #_hull
      002D5C 96                   10049 	sub	a, (hl)
      002D5D 30 02                10050 	jr	NC, 00117$
                                  10051 ;src/main.c:1220: hull = 0;
      002D5F 36 00                10052 	ld	(hl), #0x00
      002D61                      10053 00117$:
                                  10054 ;src/main.c:1223: SHOW_WIN;	
      002D61 F0r00                10055 	ldh	a, (_LCDC_REG + 0)
      002D63 F6 20                10056 	or	a, #0x20
      002D65 E0r00                10057 	ldh	(_LCDC_REG + 0), a
                                  10058 ;src/main.c:1224: wait_vbl_done(); // Idle until next frame
      002D67 CDr00r00             10059 	call	_wait_vbl_done
                                  10060 ;src/main.c:1229: }
      002D6A C3rB6r2C             10061 	jp	00119$
                                  10062 	.area _CODE
                                  10063 	.area _INITIALIZER
      000000                      10064 __xinit__hullabel:
      000000 12                   10065 	.db #0x12	; 18
      000001 1F                   10066 	.db #0x1f	; 31
      000002 16                   10067 	.db #0x16	; 22
      000003 16                   10068 	.db #0x16	; 22
      000004                      10069 __xinit__shieldlabel:
      000004 1D                   10070 	.db #0x1d	; 29
      000005 12                   10071 	.db #0x12	; 18
      000006 16                   10072 	.db #0x16	; 22
      000007 0E                   10073 	.db #0x0e	; 14
      000008                      10074 __xinit__weaponlabel:
      000008 21                   10075 	.db #0x21	; 33
      000009 0F                   10076 	.db #0x0f	; 15
      00000A 1A                   10077 	.db #0x1a	; 26
      00000B 18                   10078 	.db #0x18	; 24
      00000C                      10079 __xinit__scorelabel:
      00000C 1D                   10080 	.db #0x1d	; 29
      00000D 0D                   10081 	.db #0x0d	; 13
      00000E 1C                   10082 	.db #0x1c	; 28
      00000F 0F                   10083 	.db #0x0f	; 15
      000010                      10084 __xinit__blob:
      000010 00 00                10085 	.dw #0x0000
      000012 00 00                10086 	.dw #0x0000
      000014 00                   10087 	.db #0x00	;  0
      000015 00                   10088 	.db #0x00	;  0
      000016 40                   10089 	.db #0x40	; 64
      000017 00                   10090 	.db #0x00	; 0
      000018 01                   10091 	.db #0x01	; 1
      000019 01                   10092 	.db #0x01	; 1
      00001A 01                   10093 	.db #0x01	; 1
      00001B 32                   10094 	.db #0x32	; 50	'2'
      00001C 03                   10095 	.db #0x03	;  3
      00001D 01                   10096 	.db #0x01	; 1
      00001E 00                   10097 	.db #0x00	;  0
      00001F 00                   10098 	.db #0x00	;  0
      000020 64                   10099 	.db #0x64	;  100	'd'
      000021                      10100 __xinit__bomb:
      000021 00 00                10101 	.dw #0x0000
      000023 00 00                10102 	.dw #0x0000
      000025 00                   10103 	.db #0x00	;  0
      000026 00                   10104 	.db #0x00	;  0
      000027 42                   10105 	.db #0x42	; 66	'B'
      000028 00                   10106 	.db #0x00	; 0
      000029 01                   10107 	.db #0x01	; 1
      00002A 01                   10108 	.db #0x01	; 1
      00002B 01                   10109 	.db #0x01	; 1
      00002C 32                   10110 	.db #0x32	; 50	'2'
      00002D 05                   10111 	.db #0x05	;  5
      00002E 01                   10112 	.db #0x01	; 1
      00002F 00                   10113 	.db #0x00	;  0
      000030 00                   10114 	.db #0x00	;  0
      000031 64                   10115 	.db #0x64	;  100	'd'
      000032                      10116 __xinit__miniship:
      000032 00 00                10117 	.dw #0x0000
      000034 00 00                10118 	.dw #0x0000
      000036 00                   10119 	.db #0x00	;  0
      000037 00                   10120 	.db #0x00	;  0
      000038 44                   10121 	.db #0x44	; 68	'D'
      000039 00                   10122 	.db #0x00	; 0
      00003A 01                   10123 	.db #0x01	; 1
      00003B 01                   10124 	.db #0x01	; 1
      00003C 01                   10125 	.db #0x01	; 1
      00003D 32                   10126 	.db #0x32	; 50	'2'
      00003E 05                   10127 	.db #0x05	;  5
      00003F 01                   10128 	.db #0x01	; 1
      000040 00                   10129 	.db #0x00	;  0
      000041 00                   10130 	.db #0x00	;  0
      000042 64                   10131 	.db #0x64	;  100	'd'
      000043                      10132 __xinit__bigblob:
      000043 00 00                10133 	.dw #0x0000
      000045 00 00                10134 	.dw #0x0000
      000047 00                   10135 	.db #0x00	;  0
      000048 00                   10136 	.db #0x00	;  0
      000049 50                   10137 	.db #0x50	; 80	'P'
      00004A 52                   10138 	.db #0x52	; 82	'R'
      00004B 02                   10139 	.db #0x02	; 2
      00004C 01                   10140 	.db #0x01	; 1
      00004D 01                   10141 	.db #0x01	; 1
      00004E 32                   10142 	.db #0x32	; 50	'2'
      00004F 03                   10143 	.db #0x03	;  3
      000050 01                   10144 	.db #0x01	; 1
      000051 00                   10145 	.db #0x00	;  0
      000052 00                   10146 	.db #0x00	;  0
      000053 64                   10147 	.db #0x64	;  100	'd'
      000054                      10148 __xinit__shieldship:
      000054 00 00                10149 	.dw #0x0000
      000056 00 00                10150 	.dw #0x0000
      000058 00                   10151 	.db #0x00	;  0
      000059 00                   10152 	.db #0x00	;  0
      00005A 54                   10153 	.db #0x54	; 84	'T'
      00005B 56                   10154 	.db #0x56	; 86	'V'
      00005C 02                   10155 	.db #0x02	; 2
      00005D 01                   10156 	.db #0x01	; 1
      00005E 01                   10157 	.db #0x01	; 1
      00005F 32                   10158 	.db #0x32	; 50	'2'
      000060 03                   10159 	.db #0x03	;  3
      000061 01                   10160 	.db #0x01	; 1
      000062 00                   10161 	.db #0x00	;  0
      000063 00                   10162 	.db #0x00	;  0
      000064 64                   10163 	.db #0x64	;  100	'd'
      000065                      10164 __xinit__singleGun:
      000065 00 00                10165 	.dw #0x0000
      000067 00 00                10166 	.dw #0x0000
      000069 00                   10167 	.db #0x00	;  0
      00006A 00                   10168 	.db #0x00	;  0
      00006B FF                   10169 	.db #0xff	; -1
      00006C 02                   10170 	.db #0x02	; 2
      00006D 32                   10171 	.db #0x32	; 50	'2'
      00006E 01                   10172 	.db #0x01	; 1
      00006F 0F                   10173 	.db #0x0f	; 15
      000070 20                   10174 	.db #0x20	; 32
      000071                      10175 __xinit__doubleGun:
      000071 00 00                10176 	.dw #0x0000
      000073 00 00                10177 	.dw #0x0000
      000075 00                   10178 	.db #0x00	;  0
      000076 00                   10179 	.db #0x00	;  0
      000077 FF                   10180 	.db #0xff	; -1
      000078 02                   10181 	.db #0x02	; 2
      000079 46                   10182 	.db #0x46	; 70	'F'
      00007A 01                   10183 	.db #0x01	; 1
      00007B 0F                   10184 	.db #0x0f	; 15
      00007C 26                   10185 	.db #0x26	; 38
      00007D                      10186 __xinit__missile:
      00007D 00 00                10187 	.dw #0x0000
      00007F 00 00                10188 	.dw #0x0000
      000081 00                   10189 	.db #0x00	;  0
      000082 00                   10190 	.db #0x00	;  0
      000083 FF                   10191 	.db #0xff	; -1
      000084 01                   10192 	.db #0x01	; 1
      000085 7D                   10193 	.db #0x7d	; 125
      000086 01                   10194 	.db #0x01	; 1
      000087 1E                   10195 	.db #0x1e	; 30
      000088 2C                   10196 	.db #0x2c	; 44
      000089                      10197 __xinit__oldestProjectile:
      000089 00                   10198 	.db #0x00	; 0
      00008A                      10199 __xinit__fireCooldown:
      00008A 00                   10200 	.db #0x00	; 0
      00008B                      10201 __xinit__xDir:
      00008B 00                   10202 	.db #0x00	;  0
      00008C                      10203 __xinit__yDir:
      00008C FF                   10204 	.db #0xff	; -1
      00008D                      10205 __xinit__xSpeed:
      00008D 00                   10206 	.db #0x00	;  0
      00008E                      10207 __xinit__ySpeed:
      00008E 00                   10208 	.db #0x00	;  0
      00008F                      10209 __xinit__playerX:
      00008F 00 0A                10210 	.dw #0x0a00
      000091                      10211 __xinit__playerY:
      000091 00 0A                10212 	.dw #0x0a00
      000093                      10213 __xinit__playerDrawX:
      000093 50                   10214 	.db #0x50	; 80	'P'
      000094                      10215 __xinit__playerDrawY:
      000094 50                   10216 	.db #0x50	; 80	'P'
      000095                      10217 __xinit__bgX:
      000095 00 00                10218 	.dw #0x0000
      000097                      10219 __xinit__bgY:
      000097 00 00                10220 	.dw #0x0000
      000099                      10221 __xinit__xOverflow:
      000099 00 00                10222 	.dw #0x0000
      00009B                      10223 __xinit__yOverflow:
      00009B 00 00                10224 	.dw #0x0000
      00009D                      10225 __xinit__enemyCollisionCount:
      00009D 00                   10226 	.db #0x00	; 0
      00009E                      10227 __xinit__gunLevel:
      00009E 00                   10228 	.db #0x00	; 0
      00009F                      10229 __xinit__currentGun:
      00009F 00                   10230 	.db #0x00	; 0
      0000A0                      10231 __xinit__missiles:
      0000A0 01                   10232 	.db #0x01	; 1
      0000A1                      10233 __xinit__splashArea:
      0000A1 0A                   10234 	.db #0x0a	; 10
      0000A2                      10235 __xinit__MISSILES:
      0000A2 00 00 00 00          10236 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000A6                      10237 __xinit__switchDelay:
      0000A6 00                   10238 	.db #0x00	; 0
      0000A7                      10239 __xinit__gunMap:
      0000A7 53                   10240 	.db #0x53	; 83	'S'
      0000A8 5B                   10241 	.db #0x5b	; 91
      0000A9 61                   10242 	.db #0x61	; 97	'a'
      0000AA                      10243 __xinit__score:
      0000AA 00 00                10244 	.dw #0x0000
      0000AC                      10245 __xinit__SCORE:
      0000AC 00 00 00 00          10246 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000B0                      10247 __xinit__INCREMENT:
      0000B0 01 00 00 00          10248 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                  10249 	.area _CABS (ABS)
