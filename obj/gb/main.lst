                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _initGame
                                     13 	.globl _initProjectiles
                                     14 	.globl _initEnemyOptions
                                     15 	.globl _tickPickups
                                     16 	.globl _moveProjectiles
                                     17 	.globl _fire
                                     18 	.globl _setGunIcon
                                     19 	.globl _checkCollision
                                     20 	.globl _spawnPickup
                                     21 	.globl _takeDamage
                                     22 	.globl _move
                                     23 	.globl _updateEnemyPositions
                                     24 	.globl _initEnemies
                                     25 	.globl _playSound
                                     26 	.globl _updateDirection
                                     27 	.globl _incrementScore
                                     28 	.globl _updateMissileCount
                                     29 	.globl _updateScore
                                     30 	.globl _setHealthBar
                                     31 	.globl _interruptLCD
                                     32 	.globl _bcd2text
                                     33 	.globl _bcd_sub
                                     34 	.globl _bcd_add
                                     35 	.globl _rand
                                     36 	.globl _initrand
                                     37 	.globl _font_set
                                     38 	.globl _font_load
                                     39 	.globl _font_init
                                     40 	.globl _set_sprite_data
                                     41 	.globl _set_win_tiles
                                     42 	.globl _set_bkg_tiles
                                     43 	.globl _set_bkg_data
                                     44 	.globl _wait_vbl_done
                                     45 	.globl _set_interrupts
                                     46 	.globl _waitpad
                                     47 	.globl _joypad
                                     48 	.globl _add_LCD
                                     49 	.globl _INCREMENT
                                     50 	.globl _SCORE
                                     51 	.globl _score
                                     52 	.globl _gunMap
                                     53 	.globl _switchDelay
                                     54 	.globl _MISSILES
                                     55 	.globl _missiles
                                     56 	.globl _currentGun
                                     57 	.globl _gunLevel
                                     58 	.globl _enemyCollisionCount
                                     59 	.globl _yOverflow
                                     60 	.globl _xOverflow
                                     61 	.globl _bgY
                                     62 	.globl _bgX
                                     63 	.globl _playerDrawY
                                     64 	.globl _playerDrawX
                                     65 	.globl _playerY
                                     66 	.globl _playerX
                                     67 	.globl _ySpeed
                                     68 	.globl _xSpeed
                                     69 	.globl _yDir
                                     70 	.globl _xDir
                                     71 	.globl _fireCooldown
                                     72 	.globl _oldestProjectile
                                     73 	.globl _missile
                                     74 	.globl _doubleGun
                                     75 	.globl _singleGun
                                     76 	.globl _shieldship
                                     77 	.globl _bigblob
                                     78 	.globl _miniship
                                     79 	.globl _bomb
                                     80 	.globl _blob
                                     81 	.globl _scorelabel
                                     82 	.globl _weaponlabel
                                     83 	.globl _shieldlabel
                                     84 	.globl _hullabel
                                     85 	.globl _pickup
                                     86 	.globl _min_font
                                     87 	.globl _shield
                                     88 	.globl _hull
                                     89 	.globl _joydata
                                     90 	.globl _projectiles
                                     91 	.globl _enemies
                                     92 	.globl _enemyOptions
                                     93 	.globl _MAXGUNLEVEL
                                     94 	.globl _maxShield
                                     95 	.globl _maxHull
                                     96 	.globl _PLAYERSIZE
                                     97 	.globl _PROJECTILECOUNT
                                     98 	.globl _ySpawnPositions
                                     99 	.globl _xSpawnPositions
                                    100 	.globl _ENEMYCOUNT
                                    101 	.globl _EMPTYSPRITE
                                    102 	.globl _BLANK
                                    103 	.globl _BLANKSIZE
                                    104 	.globl _Player1
                                    105 	.globl _Pickups
                                    106 	.globl _ammo
                                    107 	.globl _upgrade
                                    108 	.globl _ProjectileTiles
                                    109 	.globl _largeenemies
                                    110 	.globl _enemy1
                                    111 	.globl _enemyOptionCount
                                    112 	.globl _healthblock
                                    113 	.globl _backgroundtiles
                                    114 	.globl _background1
                                    115 	.globl _cross
                                    116 ;--------------------------------------------------------
                                    117 ; special function registers
                                    118 ;--------------------------------------------------------
                                    119 ;--------------------------------------------------------
                                    120 ; ram data
                                    121 ;--------------------------------------------------------
                                    122 	.area _DATA
      000000                        123 _enemyOptions::
      000000                        124 	.ds 80
      000050                        125 _enemies::
      000050                        126 	.ds 80
      0000A0                        127 _projectiles::
      0000A0                        128 	.ds 60
      0000DC                        129 _joydata::
      0000DC                        130 	.ds 1
      0000DD                        131 _hull::
      0000DD                        132 	.ds 1
      0000DE                        133 _shield::
      0000DE                        134 	.ds 1
      0000DF                        135 _min_font::
      0000DF                        136 	.ds 2
      0000E1                        137 _pickup::
      0000E1                        138 	.ds 8
                                    139 ;--------------------------------------------------------
                                    140 ; ram data
                                    141 ;--------------------------------------------------------
                                    142 	.area _INITIALIZED
      000000                        143 _hullabel::
      000000                        144 	.ds 4
      000004                        145 _shieldlabel::
      000004                        146 	.ds 4
      000008                        147 _weaponlabel::
      000008                        148 	.ds 4
      00000C                        149 _scorelabel::
      00000C                        150 	.ds 4
      000010                        151 _blob::
      000010                        152 	.ds 16
      000020                        153 _bomb::
      000020                        154 	.ds 16
      000030                        155 _miniship::
      000030                        156 	.ds 16
      000040                        157 _bigblob::
      000040                        158 	.ds 16
      000050                        159 _shieldship::
      000050                        160 	.ds 16
      000060                        161 _singleGun::
      000060                        162 	.ds 12
      00006C                        163 _doubleGun::
      00006C                        164 	.ds 12
      000078                        165 _missile::
      000078                        166 	.ds 12
      000084                        167 _oldestProjectile::
      000084                        168 	.ds 1
      000085                        169 _fireCooldown::
      000085                        170 	.ds 1
      000086                        171 _xDir::
      000086                        172 	.ds 1
      000087                        173 _yDir::
      000087                        174 	.ds 1
      000088                        175 _xSpeed::
      000088                        176 	.ds 1
      000089                        177 _ySpeed::
      000089                        178 	.ds 1
      00008A                        179 _playerX::
      00008A                        180 	.ds 2
      00008C                        181 _playerY::
      00008C                        182 	.ds 2
      00008E                        183 _playerDrawX::
      00008E                        184 	.ds 1
      00008F                        185 _playerDrawY::
      00008F                        186 	.ds 1
      000090                        187 _bgX::
      000090                        188 	.ds 2
      000092                        189 _bgY::
      000092                        190 	.ds 2
      000094                        191 _xOverflow::
      000094                        192 	.ds 2
      000096                        193 _yOverflow::
      000096                        194 	.ds 2
      000098                        195 _enemyCollisionCount::
      000098                        196 	.ds 1
      000099                        197 _gunLevel::
      000099                        198 	.ds 1
      00009A                        199 _currentGun::
      00009A                        200 	.ds 1
      00009B                        201 _missiles::
      00009B                        202 	.ds 1
      00009C                        203 _MISSILES::
      00009C                        204 	.ds 4
      0000A0                        205 _switchDelay::
      0000A0                        206 	.ds 1
      0000A1                        207 _gunMap::
      0000A1                        208 	.ds 3
      0000A4                        209 _score::
      0000A4                        210 	.ds 2
      0000A6                        211 _SCORE::
      0000A6                        212 	.ds 4
      0000AA                        213 _INCREMENT::
      0000AA                        214 	.ds 4
                                    215 ;--------------------------------------------------------
                                    216 ; absolute external ram data
                                    217 ;--------------------------------------------------------
                                    218 	.area _DABS (ABS)
                                    219 ;--------------------------------------------------------
                                    220 ; global & static initialisations
                                    221 ;--------------------------------------------------------
                                    222 	.area _HOME
                                    223 	.area _GSINIT
                                    224 	.area _GSFINAL
                                    225 	.area _GSINIT
                                    226 ;--------------------------------------------------------
                                    227 ; Home
                                    228 ;--------------------------------------------------------
                                    229 	.area _HOME
                                    230 	.area _HOME
                                    231 ;--------------------------------------------------------
                                    232 ; code
                                    233 ;--------------------------------------------------------
                                    234 	.area _CODE
                                    235 ;src/main.c:113: void interruptLCD()
                                    236 ;	---------------------------------
                                    237 ; Function interruptLCD
                                    238 ; ---------------------------------
      000000                        239 _interruptLCD::
                                    240 ;src/main.c:115: HIDE_SPRITES;
      000000 F0r00                  241 	ldh	a, (_LCDC_REG + 0)
      000002 E6 FD                  242 	and	a, #0xfd
      000004 E0r00                  243 	ldh	(_LCDC_REG + 0), a
                                    244 ;src/main.c:116: }
      000006 C9                     245 	ret
      000007                        246 _cross:
      000007 18                     247 	.db #0x18	; 24
      000008 18                     248 	.db #0x18	; 24
      000009 18                     249 	.db #0x18	; 24
      00000A 18                     250 	.db #0x18	; 24
      00000B 3C                     251 	.db #0x3c	; 60
      00000C 3C                     252 	.db #0x3c	; 60
      00000D 3C                     253 	.db #0x3c	; 60
      00000E 3C                     254 	.db #0x3c	; 60
      00000F 7E                     255 	.db #0x7e	; 126
      000010 7E                     256 	.db #0x7e	; 126
      000011 7E                     257 	.db #0x7e	; 126
      000012 7E                     258 	.db #0x7e	; 126
      000013 FF                     259 	.db #0xff	; 255
      000014 FF                     260 	.db #0xff	; 255
      000015 FF                     261 	.db #0xff	; 255
      000016 FF                     262 	.db #0xff	; 255
      000017 0F                     263 	.db #0x0f	; 15
      000018 0F                     264 	.db #0x0f	; 15
      000019 3F                     265 	.db #0x3f	; 63
      00001A 3F                     266 	.db #0x3f	; 63
      00001B FF                     267 	.db #0xff	; 255
      00001C FF                     268 	.db #0xff	; 255
      00001D FF                     269 	.db #0xff	; 255
      00001E FF                     270 	.db #0xff	; 255
      00001F 7E                     271 	.db #0x7e	; 126
      000020 7E                     272 	.db #0x7e	; 126
      000021 3E                     273 	.db #0x3e	; 62
      000022 3E                     274 	.db #0x3e	; 62
      000023 1C                     275 	.db #0x1c	; 28
      000024 1C                     276 	.db #0x1c	; 28
      000025 0C                     277 	.db #0x0c	; 12
      000026 0C                     278 	.db #0x0c	; 12
      000027 C0                     279 	.db #0xc0	; 192
      000028 C0                     280 	.db #0xc0	; 192
      000029 F0                     281 	.db #0xf0	; 240
      00002A F0                     282 	.db #0xf0	; 240
      00002B FC                     283 	.db #0xfc	; 252
      00002C FC                     284 	.db #0xfc	; 252
      00002D FF                     285 	.db #0xff	; 255
      00002E FF                     286 	.db #0xff	; 255
      00002F FF                     287 	.db #0xff	; 255
      000030 FF                     288 	.db #0xff	; 255
      000031 FC                     289 	.db #0xfc	; 252
      000032 FC                     290 	.db #0xfc	; 252
      000033 F0                     291 	.db #0xf0	; 240
      000034 F0                     292 	.db #0xf0	; 240
      000035 C0                     293 	.db #0xc0	; 192
      000036 C0                     294 	.db #0xc0	; 192
      000037 0C                     295 	.db #0x0c	; 12
      000038 0C                     296 	.db #0x0c	; 12
      000039 1C                     297 	.db #0x1c	; 28
      00003A 1C                     298 	.db #0x1c	; 28
      00003B 3E                     299 	.db #0x3e	; 62
      00003C 3E                     300 	.db #0x3e	; 62
      00003D 7E                     301 	.db #0x7e	; 126
      00003E 7E                     302 	.db #0x7e	; 126
      00003F FF                     303 	.db #0xff	; 255
      000040 FF                     304 	.db #0xff	; 255
      000041 FF                     305 	.db #0xff	; 255
      000042 FF                     306 	.db #0xff	; 255
      000043 3F                     307 	.db #0x3f	; 63
      000044 3F                     308 	.db #0x3f	; 63
      000045 0F                     309 	.db #0x0f	; 15
      000046 0F                     310 	.db #0x0f	; 15
      000047 FF                     311 	.db #0xff	; 255
      000048 FF                     312 	.db #0xff	; 255
      000049 FF                     313 	.db #0xff	; 255
      00004A FF                     314 	.db #0xff	; 255
      00004B 7E                     315 	.db #0x7e	; 126
      00004C 7E                     316 	.db #0x7e	; 126
      00004D 7E                     317 	.db #0x7e	; 126
      00004E 7E                     318 	.db #0x7e	; 126
      00004F 3C                     319 	.db #0x3c	; 60
      000050 3C                     320 	.db #0x3c	; 60
      000051 3C                     321 	.db #0x3c	; 60
      000052 3C                     322 	.db #0x3c	; 60
      000053 18                     323 	.db #0x18	; 24
      000054 18                     324 	.db #0x18	; 24
      000055 18                     325 	.db #0x18	; 24
      000056 18                     326 	.db #0x18	; 24
      000057 30                     327 	.db #0x30	; 48	'0'
      000058 30                     328 	.db #0x30	; 48	'0'
      000059 38                     329 	.db #0x38	; 56	'8'
      00005A 38                     330 	.db #0x38	; 56	'8'
      00005B 7C                     331 	.db #0x7c	; 124
      00005C 7C                     332 	.db #0x7c	; 124
      00005D 7E                     333 	.db #0x7e	; 126
      00005E 7E                     334 	.db #0x7e	; 126
      00005F FF                     335 	.db #0xff	; 255
      000060 FF                     336 	.db #0xff	; 255
      000061 FF                     337 	.db #0xff	; 255
      000062 FF                     338 	.db #0xff	; 255
      000063 FC                     339 	.db #0xfc	; 252
      000064 FC                     340 	.db #0xfc	; 252
      000065 F0                     341 	.db #0xf0	; 240
      000066 F0                     342 	.db #0xf0	; 240
      000067 03                     343 	.db #0x03	; 3
      000068 03                     344 	.db #0x03	; 3
      000069 0F                     345 	.db #0x0f	; 15
      00006A 0F                     346 	.db #0x0f	; 15
      00006B 3F                     347 	.db #0x3f	; 63
      00006C 3F                     348 	.db #0x3f	; 63
      00006D FF                     349 	.db #0xff	; 255
      00006E FF                     350 	.db #0xff	; 255
      00006F FF                     351 	.db #0xff	; 255
      000070 FF                     352 	.db #0xff	; 255
      000071 3F                     353 	.db #0x3f	; 63
      000072 3F                     354 	.db #0x3f	; 63
      000073 0F                     355 	.db #0x0f	; 15
      000074 0F                     356 	.db #0x0f	; 15
      000075 03                     357 	.db #0x03	; 3
      000076 03                     358 	.db #0x03	; 3
      000077 F0                     359 	.db #0xf0	; 240
      000078 F0                     360 	.db #0xf0	; 240
      000079 FC                     361 	.db #0xfc	; 252
      00007A FC                     362 	.db #0xfc	; 252
      00007B FF                     363 	.db #0xff	; 255
      00007C FF                     364 	.db #0xff	; 255
      00007D FF                     365 	.db #0xff	; 255
      00007E FF                     366 	.db #0xff	; 255
      00007F 7E                     367 	.db #0x7e	; 126
      000080 7E                     368 	.db #0x7e	; 126
      000081 7C                     369 	.db #0x7c	; 124
      000082 7C                     370 	.db #0x7c	; 124
      000083 38                     371 	.db #0x38	; 56	'8'
      000084 38                     372 	.db #0x38	; 56	'8'
      000085 30                     373 	.db #0x30	; 48	'0'
      000086 30                     374 	.db #0x30	; 48	'0'
      000087                        375 _background1:
      000087 26                     376 	.db #0x26	; 38
      000088 26                     377 	.db #0x26	; 38
      000089 26                     378 	.db #0x26	; 38
      00008A 26                     379 	.db #0x26	; 38
      00008B 26                     380 	.db #0x26	; 38
      00008C 26                     381 	.db #0x26	; 38
      00008D 26                     382 	.db #0x26	; 38
      00008E 26                     383 	.db #0x26	; 38
      00008F 26                     384 	.db #0x26	; 38
      000090 26                     385 	.db #0x26	; 38
      000091 26                     386 	.db #0x26	; 38
      000092 2A                     387 	.db #0x2a	; 42
      000093 29                     388 	.db #0x29	; 41
      000094 26                     389 	.db #0x26	; 38
      000095 26                     390 	.db #0x26	; 38
      000096 26                     391 	.db #0x26	; 38
      000097 26                     392 	.db #0x26	; 38
      000098 26                     393 	.db #0x26	; 38
      000099 26                     394 	.db #0x26	; 38
      00009A 26                     395 	.db #0x26	; 38
      00009B 2C                     396 	.db #0x2c	; 44
      00009C 26                     397 	.db #0x26	; 38
      00009D 26                     398 	.db #0x26	; 38
      00009E 26                     399 	.db #0x26	; 38
      00009F 26                     400 	.db #0x26	; 38
      0000A0 26                     401 	.db #0x26	; 38
      0000A1 26                     402 	.db #0x26	; 38
      0000A2 26                     403 	.db #0x26	; 38
      0000A3 26                     404 	.db #0x26	; 38
      0000A4 26                     405 	.db #0x26	; 38
      0000A5 26                     406 	.db #0x26	; 38
      0000A6 26                     407 	.db #0x26	; 38
      0000A7 26                     408 	.db #0x26	; 38
      0000A8 2B                     409 	.db #0x2b	; 43
      0000A9 26                     410 	.db #0x26	; 38
      0000AA 26                     411 	.db #0x26	; 38
      0000AB 26                     412 	.db #0x26	; 38
      0000AC 26                     413 	.db #0x26	; 38
      0000AD 26                     414 	.db #0x26	; 38
      0000AE 26                     415 	.db #0x26	; 38
      0000AF 26                     416 	.db #0x26	; 38
      0000B0 26                     417 	.db #0x26	; 38
      0000B1 26                     418 	.db #0x26	; 38
      0000B2 26                     419 	.db #0x26	; 38
      0000B3 26                     420 	.db #0x26	; 38
      0000B4 26                     421 	.db #0x26	; 38
      0000B5 26                     422 	.db #0x26	; 38
      0000B6 26                     423 	.db #0x26	; 38
      0000B7 26                     424 	.db #0x26	; 38
      0000B8 26                     425 	.db #0x26	; 38
      0000B9 26                     426 	.db #0x26	; 38
      0000BA 26                     427 	.db #0x26	; 38
      0000BB 26                     428 	.db #0x26	; 38
      0000BC 26                     429 	.db #0x26	; 38
      0000BD 26                     430 	.db #0x26	; 38
      0000BE 26                     431 	.db #0x26	; 38
      0000BF 26                     432 	.db #0x26	; 38
      0000C0 26                     433 	.db #0x26	; 38
      0000C1 26                     434 	.db #0x26	; 38
      0000C2 26                     435 	.db #0x26	; 38
      0000C3 26                     436 	.db #0x26	; 38
      0000C4 26                     437 	.db #0x26	; 38
      0000C5 26                     438 	.db #0x26	; 38
      0000C6 26                     439 	.db #0x26	; 38
      0000C7 26                     440 	.db #0x26	; 38
      0000C8 26                     441 	.db #0x26	; 38
      0000C9 26                     442 	.db #0x26	; 38
      0000CA 26                     443 	.db #0x26	; 38
      0000CB 26                     444 	.db #0x26	; 38
      0000CC 26                     445 	.db #0x26	; 38
      0000CD 26                     446 	.db #0x26	; 38
      0000CE 26                     447 	.db #0x26	; 38
      0000CF 26                     448 	.db #0x26	; 38
      0000D0 26                     449 	.db #0x26	; 38
      0000D1 26                     450 	.db #0x26	; 38
      0000D2 26                     451 	.db #0x26	; 38
      0000D3 26                     452 	.db #0x26	; 38
      0000D4 26                     453 	.db #0x26	; 38
      0000D5 26                     454 	.db #0x26	; 38
      0000D6 26                     455 	.db #0x26	; 38
      0000D7 26                     456 	.db #0x26	; 38
      0000D8 26                     457 	.db #0x26	; 38
      0000D9 26                     458 	.db #0x26	; 38
      0000DA 26                     459 	.db #0x26	; 38
      0000DB 26                     460 	.db #0x26	; 38
      0000DC 26                     461 	.db #0x26	; 38
      0000DD 26                     462 	.db #0x26	; 38
      0000DE 26                     463 	.db #0x26	; 38
      0000DF 26                     464 	.db #0x26	; 38
      0000E0 26                     465 	.db #0x26	; 38
      0000E1 26                     466 	.db #0x26	; 38
      0000E2 26                     467 	.db #0x26	; 38
      0000E3 26                     468 	.db #0x26	; 38
      0000E4 26                     469 	.db #0x26	; 38
      0000E5 26                     470 	.db #0x26	; 38
      0000E6 26                     471 	.db #0x26	; 38
      0000E7 26                     472 	.db #0x26	; 38
      0000E8 26                     473 	.db #0x26	; 38
      0000E9 26                     474 	.db #0x26	; 38
      0000EA 26                     475 	.db #0x26	; 38
      0000EB 26                     476 	.db #0x26	; 38
      0000EC 26                     477 	.db #0x26	; 38
      0000ED 26                     478 	.db #0x26	; 38
      0000EE 26                     479 	.db #0x26	; 38
      0000EF 26                     480 	.db #0x26	; 38
      0000F0 26                     481 	.db #0x26	; 38
      0000F1 26                     482 	.db #0x26	; 38
      0000F2 26                     483 	.db #0x26	; 38
      0000F3 26                     484 	.db #0x26	; 38
      0000F4 26                     485 	.db #0x26	; 38
      0000F5 26                     486 	.db #0x26	; 38
      0000F6 26                     487 	.db #0x26	; 38
      0000F7 26                     488 	.db #0x26	; 38
      0000F8 2B                     489 	.db #0x2b	; 43
      0000F9 26                     490 	.db #0x26	; 38
      0000FA 26                     491 	.db #0x26	; 38
      0000FB 26                     492 	.db #0x26	; 38
      0000FC 26                     493 	.db #0x26	; 38
      0000FD 26                     494 	.db #0x26	; 38
      0000FE 26                     495 	.db #0x26	; 38
      0000FF 2B                     496 	.db #0x2b	; 43
      000100 26                     497 	.db #0x26	; 38
      000101 26                     498 	.db #0x26	; 38
      000102 26                     499 	.db #0x26	; 38
      000103 26                     500 	.db #0x26	; 38
      000104 26                     501 	.db #0x26	; 38
      000105 26                     502 	.db #0x26	; 38
      000106 26                     503 	.db #0x26	; 38
      000107 26                     504 	.db #0x26	; 38
      000108 26                     505 	.db #0x26	; 38
      000109 26                     506 	.db #0x26	; 38
      00010A 26                     507 	.db #0x26	; 38
      00010B 26                     508 	.db #0x26	; 38
      00010C 2B                     509 	.db #0x2b	; 43
      00010D 26                     510 	.db #0x26	; 38
      00010E 26                     511 	.db #0x26	; 38
      00010F 26                     512 	.db #0x26	; 38
      000110 26                     513 	.db #0x26	; 38
      000111 26                     514 	.db #0x26	; 38
      000112 26                     515 	.db #0x26	; 38
      000113 26                     516 	.db #0x26	; 38
      000114 2C                     517 	.db #0x2c	; 44
      000115 26                     518 	.db #0x26	; 38
      000116 26                     519 	.db #0x26	; 38
      000117 26                     520 	.db #0x26	; 38
      000118 26                     521 	.db #0x26	; 38
      000119 26                     522 	.db #0x26	; 38
      00011A 26                     523 	.db #0x26	; 38
      00011B 26                     524 	.db #0x26	; 38
      00011C 26                     525 	.db #0x26	; 38
      00011D 26                     526 	.db #0x26	; 38
      00011E 26                     527 	.db #0x26	; 38
      00011F 26                     528 	.db #0x26	; 38
      000120 26                     529 	.db #0x26	; 38
      000121 26                     530 	.db #0x26	; 38
      000122 26                     531 	.db #0x26	; 38
      000123 26                     532 	.db #0x26	; 38
      000124 26                     533 	.db #0x26	; 38
      000125 26                     534 	.db #0x26	; 38
      000126 26                     535 	.db #0x26	; 38
      000127 26                     536 	.db #0x26	; 38
      000128 26                     537 	.db #0x26	; 38
      000129 2C                     538 	.db #0x2c	; 44
      00012A 26                     539 	.db #0x26	; 38
      00012B 26                     540 	.db #0x26	; 38
      00012C 26                     541 	.db #0x26	; 38
      00012D 26                     542 	.db #0x26	; 38
      00012E 25                     543 	.db #0x25	; 37
      00012F 26                     544 	.db #0x26	; 38
      000130 26                     545 	.db #0x26	; 38
      000131 26                     546 	.db #0x26	; 38
      000132 26                     547 	.db #0x26	; 38
      000133 26                     548 	.db #0x26	; 38
      000134 26                     549 	.db #0x26	; 38
      000135 26                     550 	.db #0x26	; 38
      000136 26                     551 	.db #0x26	; 38
      000137 26                     552 	.db #0x26	; 38
      000138 26                     553 	.db #0x26	; 38
      000139 26                     554 	.db #0x26	; 38
      00013A 26                     555 	.db #0x26	; 38
      00013B 26                     556 	.db #0x26	; 38
      00013C 2C                     557 	.db #0x2c	; 44
      00013D 26                     558 	.db #0x26	; 38
      00013E 26                     559 	.db #0x26	; 38
      00013F 26                     560 	.db #0x26	; 38
      000140 26                     561 	.db #0x26	; 38
      000141 26                     562 	.db #0x26	; 38
      000142 26                     563 	.db #0x26	; 38
      000143 26                     564 	.db #0x26	; 38
      000144 2B                     565 	.db #0x2b	; 43
      000145 26                     566 	.db #0x26	; 38
      000146 26                     567 	.db #0x26	; 38
      000147 26                     568 	.db #0x26	; 38
      000148 26                     569 	.db #0x26	; 38
      000149 26                     570 	.db #0x26	; 38
      00014A 26                     571 	.db #0x26	; 38
      00014B 26                     572 	.db #0x26	; 38
      00014C 26                     573 	.db #0x26	; 38
      00014D 26                     574 	.db #0x26	; 38
      00014E 26                     575 	.db #0x26	; 38
      00014F 26                     576 	.db #0x26	; 38
      000150 26                     577 	.db #0x26	; 38
      000151 26                     578 	.db #0x26	; 38
      000152 26                     579 	.db #0x26	; 38
      000153 26                     580 	.db #0x26	; 38
      000154 26                     581 	.db #0x26	; 38
      000155 26                     582 	.db #0x26	; 38
      000156 26                     583 	.db #0x26	; 38
      000157 26                     584 	.db #0x26	; 38
      000158 26                     585 	.db #0x26	; 38
      000159 26                     586 	.db #0x26	; 38
      00015A 26                     587 	.db #0x26	; 38
      00015B 26                     588 	.db #0x26	; 38
      00015C 26                     589 	.db #0x26	; 38
      00015D 26                     590 	.db #0x26	; 38
      00015E 26                     591 	.db #0x26	; 38
      00015F 26                     592 	.db #0x26	; 38
      000160 2C                     593 	.db #0x2c	; 44
      000161 26                     594 	.db #0x26	; 38
      000162 26                     595 	.db #0x26	; 38
      000163 26                     596 	.db #0x26	; 38
      000164 26                     597 	.db #0x26	; 38
      000165 26                     598 	.db #0x26	; 38
      000166 26                     599 	.db #0x26	; 38
      000167 26                     600 	.db #0x26	; 38
      000168 26                     601 	.db #0x26	; 38
      000169 26                     602 	.db #0x26	; 38
      00016A 26                     603 	.db #0x26	; 38
      00016B 26                     604 	.db #0x26	; 38
      00016C 26                     605 	.db #0x26	; 38
      00016D 26                     606 	.db #0x26	; 38
      00016E 26                     607 	.db #0x26	; 38
      00016F 26                     608 	.db #0x26	; 38
      000170 26                     609 	.db #0x26	; 38
      000171 26                     610 	.db #0x26	; 38
      000172 26                     611 	.db #0x26	; 38
      000173 26                     612 	.db #0x26	; 38
      000174 26                     613 	.db #0x26	; 38
      000175 26                     614 	.db #0x26	; 38
      000176 26                     615 	.db #0x26	; 38
      000177 26                     616 	.db #0x26	; 38
      000178 26                     617 	.db #0x26	; 38
      000179 26                     618 	.db #0x26	; 38
      00017A 26                     619 	.db #0x26	; 38
      00017B 26                     620 	.db #0x26	; 38
      00017C 26                     621 	.db #0x26	; 38
      00017D 26                     622 	.db #0x26	; 38
      00017E 26                     623 	.db #0x26	; 38
      00017F 26                     624 	.db #0x26	; 38
      000180 26                     625 	.db #0x26	; 38
      000181 26                     626 	.db #0x26	; 38
      000182 26                     627 	.db #0x26	; 38
      000183 26                     628 	.db #0x26	; 38
      000184 26                     629 	.db #0x26	; 38
      000185 26                     630 	.db #0x26	; 38
      000186 26                     631 	.db #0x26	; 38
      000187 26                     632 	.db #0x26	; 38
      000188 26                     633 	.db #0x26	; 38
      000189 26                     634 	.db #0x26	; 38
      00018A 26                     635 	.db #0x26	; 38
      00018B 26                     636 	.db #0x26	; 38
      00018C 26                     637 	.db #0x26	; 38
      00018D 26                     638 	.db #0x26	; 38
      00018E 26                     639 	.db #0x26	; 38
      00018F 26                     640 	.db #0x26	; 38
      000190 26                     641 	.db #0x26	; 38
      000191 26                     642 	.db #0x26	; 38
      000192 26                     643 	.db #0x26	; 38
      000193 26                     644 	.db #0x26	; 38
      000194 26                     645 	.db #0x26	; 38
      000195 2B                     646 	.db #0x2b	; 43
      000196 26                     647 	.db #0x26	; 38
      000197 26                     648 	.db #0x26	; 38
      000198 26                     649 	.db #0x26	; 38
      000199 26                     650 	.db #0x26	; 38
      00019A 26                     651 	.db #0x26	; 38
      00019B 26                     652 	.db #0x26	; 38
      00019C 26                     653 	.db #0x26	; 38
      00019D 26                     654 	.db #0x26	; 38
      00019E 26                     655 	.db #0x26	; 38
      00019F 26                     656 	.db #0x26	; 38
      0001A0 26                     657 	.db #0x26	; 38
      0001A1 26                     658 	.db #0x26	; 38
      0001A2 26                     659 	.db #0x26	; 38
      0001A3 26                     660 	.db #0x26	; 38
      0001A4 26                     661 	.db #0x26	; 38
      0001A5 26                     662 	.db #0x26	; 38
      0001A6 25                     663 	.db #0x25	; 37
      0001A7 26                     664 	.db #0x26	; 38
      0001A8 26                     665 	.db #0x26	; 38
      0001A9 26                     666 	.db #0x26	; 38
      0001AA 2B                     667 	.db #0x2b	; 43
      0001AB 26                     668 	.db #0x26	; 38
      0001AC 26                     669 	.db #0x26	; 38
      0001AD 26                     670 	.db #0x26	; 38
      0001AE 26                     671 	.db #0x26	; 38
      0001AF 26                     672 	.db #0x26	; 38
      0001B0 26                     673 	.db #0x26	; 38
      0001B1 26                     674 	.db #0x26	; 38
      0001B2 26                     675 	.db #0x26	; 38
      0001B3 26                     676 	.db #0x26	; 38
      0001B4 26                     677 	.db #0x26	; 38
      0001B5 26                     678 	.db #0x26	; 38
      0001B6 26                     679 	.db #0x26	; 38
      0001B7 26                     680 	.db #0x26	; 38
      0001B8 26                     681 	.db #0x26	; 38
      0001B9 26                     682 	.db #0x26	; 38
      0001BA 26                     683 	.db #0x26	; 38
      0001BB 26                     684 	.db #0x26	; 38
      0001BC 26                     685 	.db #0x26	; 38
      0001BD 26                     686 	.db #0x26	; 38
      0001BE 26                     687 	.db #0x26	; 38
      0001BF 26                     688 	.db #0x26	; 38
      0001C0 26                     689 	.db #0x26	; 38
      0001C1 26                     690 	.db #0x26	; 38
      0001C2 26                     691 	.db #0x26	; 38
      0001C3 26                     692 	.db #0x26	; 38
      0001C4 2B                     693 	.db #0x2b	; 43
      0001C5 26                     694 	.db #0x26	; 38
      0001C6 26                     695 	.db #0x26	; 38
      0001C7 26                     696 	.db #0x26	; 38
      0001C8 26                     697 	.db #0x26	; 38
      0001C9 26                     698 	.db #0x26	; 38
      0001CA 26                     699 	.db #0x26	; 38
      0001CB 26                     700 	.db #0x26	; 38
      0001CC 26                     701 	.db #0x26	; 38
      0001CD 26                     702 	.db #0x26	; 38
      0001CE 26                     703 	.db #0x26	; 38
      0001CF 26                     704 	.db #0x26	; 38
      0001D0 26                     705 	.db #0x26	; 38
      0001D1 26                     706 	.db #0x26	; 38
      0001D2 26                     707 	.db #0x26	; 38
      0001D3 26                     708 	.db #0x26	; 38
      0001D4 26                     709 	.db #0x26	; 38
      0001D5 26                     710 	.db #0x26	; 38
      0001D6 26                     711 	.db #0x26	; 38
      0001D7 26                     712 	.db #0x26	; 38
      0001D8 26                     713 	.db #0x26	; 38
      0001D9 26                     714 	.db #0x26	; 38
      0001DA 27                     715 	.db #0x27	; 39
      0001DB 28                     716 	.db #0x28	; 40
      0001DC 26                     717 	.db #0x26	; 38
      0001DD 26                     718 	.db #0x26	; 38
      0001DE 26                     719 	.db #0x26	; 38
      0001DF 26                     720 	.db #0x26	; 38
      0001E0 26                     721 	.db #0x26	; 38
      0001E1 26                     722 	.db #0x26	; 38
      0001E2 26                     723 	.db #0x26	; 38
      0001E3 26                     724 	.db #0x26	; 38
      0001E4 26                     725 	.db #0x26	; 38
      0001E5 26                     726 	.db #0x26	; 38
      0001E6 26                     727 	.db #0x26	; 38
      0001E7 26                     728 	.db #0x26	; 38
      0001E8 26                     729 	.db #0x26	; 38
      0001E9 26                     730 	.db #0x26	; 38
      0001EA 26                     731 	.db #0x26	; 38
      0001EB 26                     732 	.db #0x26	; 38
      0001EC 26                     733 	.db #0x26	; 38
      0001ED 26                     734 	.db #0x26	; 38
      0001EE 26                     735 	.db #0x26	; 38
      0001EF 26                     736 	.db #0x26	; 38
      0001F0 26                     737 	.db #0x26	; 38
      0001F1 26                     738 	.db #0x26	; 38
      0001F2 26                     739 	.db #0x26	; 38
      0001F3 26                     740 	.db #0x26	; 38
      0001F4 26                     741 	.db #0x26	; 38
      0001F5 26                     742 	.db #0x26	; 38
      0001F6 26                     743 	.db #0x26	; 38
      0001F7 26                     744 	.db #0x26	; 38
      0001F8 26                     745 	.db #0x26	; 38
      0001F9 26                     746 	.db #0x26	; 38
      0001FA 2A                     747 	.db #0x2a	; 42
      0001FB 29                     748 	.db #0x29	; 41
      0001FC 26                     749 	.db #0x26	; 38
      0001FD 26                     750 	.db #0x26	; 38
      0001FE 26                     751 	.db #0x26	; 38
      0001FF 26                     752 	.db #0x26	; 38
      000200 26                     753 	.db #0x26	; 38
      000201 26                     754 	.db #0x26	; 38
      000202 26                     755 	.db #0x26	; 38
      000203 26                     756 	.db #0x26	; 38
      000204 26                     757 	.db #0x26	; 38
      000205 26                     758 	.db #0x26	; 38
      000206 26                     759 	.db #0x26	; 38
      000207 26                     760 	.db #0x26	; 38
      000208 26                     761 	.db #0x26	; 38
      000209 26                     762 	.db #0x26	; 38
      00020A 26                     763 	.db #0x26	; 38
      00020B 26                     764 	.db #0x26	; 38
      00020C 26                     765 	.db #0x26	; 38
      00020D 26                     766 	.db #0x26	; 38
      00020E 27                     767 	.db #0x27	; 39
      00020F 28                     768 	.db #0x28	; 40
      000210 26                     769 	.db #0x26	; 38
      000211 26                     770 	.db #0x26	; 38
      000212 26                     771 	.db #0x26	; 38
      000213 26                     772 	.db #0x26	; 38
      000214 26                     773 	.db #0x26	; 38
      000215 26                     774 	.db #0x26	; 38
      000216 26                     775 	.db #0x26	; 38
      000217 26                     776 	.db #0x26	; 38
      000218 26                     777 	.db #0x26	; 38
      000219 26                     778 	.db #0x26	; 38
      00021A 26                     779 	.db #0x26	; 38
      00021B 26                     780 	.db #0x26	; 38
      00021C 26                     781 	.db #0x26	; 38
      00021D 26                     782 	.db #0x26	; 38
      00021E 26                     783 	.db #0x26	; 38
      00021F 2C                     784 	.db #0x2c	; 44
      000220 26                     785 	.db #0x26	; 38
      000221 26                     786 	.db #0x26	; 38
      000222 26                     787 	.db #0x26	; 38
      000223 26                     788 	.db #0x26	; 38
      000224 26                     789 	.db #0x26	; 38
      000225 26                     790 	.db #0x26	; 38
      000226 26                     791 	.db #0x26	; 38
      000227 26                     792 	.db #0x26	; 38
      000228 26                     793 	.db #0x26	; 38
      000229 26                     794 	.db #0x26	; 38
      00022A 26                     795 	.db #0x26	; 38
      00022B 26                     796 	.db #0x26	; 38
      00022C 26                     797 	.db #0x26	; 38
      00022D 26                     798 	.db #0x26	; 38
      00022E 2A                     799 	.db #0x2a	; 42
      00022F 29                     800 	.db #0x29	; 41
      000230 26                     801 	.db #0x26	; 38
      000231 26                     802 	.db #0x26	; 38
      000232 26                     803 	.db #0x26	; 38
      000233 26                     804 	.db #0x26	; 38
      000234 26                     805 	.db #0x26	; 38
      000235 26                     806 	.db #0x26	; 38
      000236 26                     807 	.db #0x26	; 38
      000237 26                     808 	.db #0x26	; 38
      000238 26                     809 	.db #0x26	; 38
      000239 26                     810 	.db #0x26	; 38
      00023A 26                     811 	.db #0x26	; 38
      00023B 26                     812 	.db #0x26	; 38
      00023C 26                     813 	.db #0x26	; 38
      00023D 25                     814 	.db #0x25	; 37
      00023E 26                     815 	.db #0x26	; 38
      00023F 26                     816 	.db #0x26	; 38
      000240 26                     817 	.db #0x26	; 38
      000241 26                     818 	.db #0x26	; 38
      000242 26                     819 	.db #0x26	; 38
      000243 26                     820 	.db #0x26	; 38
      000244 2C                     821 	.db #0x2c	; 44
      000245 26                     822 	.db #0x26	; 38
      000246 26                     823 	.db #0x26	; 38
      000247 26                     824 	.db #0x26	; 38
      000248 26                     825 	.db #0x26	; 38
      000249 26                     826 	.db #0x26	; 38
      00024A 26                     827 	.db #0x26	; 38
      00024B 26                     828 	.db #0x26	; 38
      00024C 26                     829 	.db #0x26	; 38
      00024D 26                     830 	.db #0x26	; 38
      00024E 26                     831 	.db #0x26	; 38
      00024F 26                     832 	.db #0x26	; 38
      000250 26                     833 	.db #0x26	; 38
      000251 26                     834 	.db #0x26	; 38
      000252 26                     835 	.db #0x26	; 38
      000253 26                     836 	.db #0x26	; 38
      000254 26                     837 	.db #0x26	; 38
      000255 26                     838 	.db #0x26	; 38
      000256 26                     839 	.db #0x26	; 38
      000257 26                     840 	.db #0x26	; 38
      000258 26                     841 	.db #0x26	; 38
      000259 26                     842 	.db #0x26	; 38
      00025A 26                     843 	.db #0x26	; 38
      00025B 26                     844 	.db #0x26	; 38
      00025C 26                     845 	.db #0x26	; 38
      00025D 26                     846 	.db #0x26	; 38
      00025E 26                     847 	.db #0x26	; 38
      00025F 26                     848 	.db #0x26	; 38
      000260 26                     849 	.db #0x26	; 38
      000261 26                     850 	.db #0x26	; 38
      000262 26                     851 	.db #0x26	; 38
      000263 26                     852 	.db #0x26	; 38
      000264 26                     853 	.db #0x26	; 38
      000265 26                     854 	.db #0x26	; 38
      000266 26                     855 	.db #0x26	; 38
      000267 26                     856 	.db #0x26	; 38
      000268 26                     857 	.db #0x26	; 38
      000269 26                     858 	.db #0x26	; 38
      00026A 2C                     859 	.db #0x2c	; 44
      00026B 26                     860 	.db #0x26	; 38
      00026C 26                     861 	.db #0x26	; 38
      00026D 26                     862 	.db #0x26	; 38
      00026E 26                     863 	.db #0x26	; 38
      00026F 26                     864 	.db #0x26	; 38
      000270 26                     865 	.db #0x26	; 38
      000271 26                     866 	.db #0x26	; 38
      000272 26                     867 	.db #0x26	; 38
      000273 26                     868 	.db #0x26	; 38
      000274 26                     869 	.db #0x26	; 38
      000275 26                     870 	.db #0x26	; 38
      000276 26                     871 	.db #0x26	; 38
      000277 26                     872 	.db #0x26	; 38
      000278 26                     873 	.db #0x26	; 38
      000279 2C                     874 	.db #0x2c	; 44
      00027A 26                     875 	.db #0x26	; 38
      00027B 26                     876 	.db #0x26	; 38
      00027C 26                     877 	.db #0x26	; 38
      00027D 26                     878 	.db #0x26	; 38
      00027E 26                     879 	.db #0x26	; 38
      00027F 26                     880 	.db #0x26	; 38
      000280 26                     881 	.db #0x26	; 38
      000281 26                     882 	.db #0x26	; 38
      000282 26                     883 	.db #0x26	; 38
      000283 26                     884 	.db #0x26	; 38
      000284 26                     885 	.db #0x26	; 38
      000285 26                     886 	.db #0x26	; 38
      000286 26                     887 	.db #0x26	; 38
      000287 26                     888 	.db #0x26	; 38
      000288 26                     889 	.db #0x26	; 38
      000289 26                     890 	.db #0x26	; 38
      00028A 26                     891 	.db #0x26	; 38
      00028B 26                     892 	.db #0x26	; 38
      00028C 26                     893 	.db #0x26	; 38
      00028D 26                     894 	.db #0x26	; 38
      00028E 26                     895 	.db #0x26	; 38
      00028F 26                     896 	.db #0x26	; 38
      000290 26                     897 	.db #0x26	; 38
      000291 26                     898 	.db #0x26	; 38
      000292 26                     899 	.db #0x26	; 38
      000293 26                     900 	.db #0x26	; 38
      000294 26                     901 	.db #0x26	; 38
      000295 2B                     902 	.db #0x2b	; 43
      000296 26                     903 	.db #0x26	; 38
      000297 26                     904 	.db #0x26	; 38
      000298 26                     905 	.db #0x26	; 38
      000299 26                     906 	.db #0x26	; 38
      00029A 26                     907 	.db #0x26	; 38
      00029B 26                     908 	.db #0x26	; 38
      00029C 26                     909 	.db #0x26	; 38
      00029D 26                     910 	.db #0x26	; 38
      00029E 26                     911 	.db #0x26	; 38
      00029F 26                     912 	.db #0x26	; 38
      0002A0 26                     913 	.db #0x26	; 38
      0002A1 26                     914 	.db #0x26	; 38
      0002A2 26                     915 	.db #0x26	; 38
      0002A3 26                     916 	.db #0x26	; 38
      0002A4 26                     917 	.db #0x26	; 38
      0002A5 26                     918 	.db #0x26	; 38
      0002A6 26                     919 	.db #0x26	; 38
      0002A7 28                     920 	.db #0x28	; 40
      0002A8 26                     921 	.db #0x26	; 38
      0002A9 26                     922 	.db #0x26	; 38
      0002AA 26                     923 	.db #0x26	; 38
      0002AB 26                     924 	.db #0x26	; 38
      0002AC 26                     925 	.db #0x26	; 38
      0002AD 26                     926 	.db #0x26	; 38
      0002AE 26                     927 	.db #0x26	; 38
      0002AF 26                     928 	.db #0x26	; 38
      0002B0 26                     929 	.db #0x26	; 38
      0002B1 26                     930 	.db #0x26	; 38
      0002B2 26                     931 	.db #0x26	; 38
      0002B3 26                     932 	.db #0x26	; 38
      0002B4 26                     933 	.db #0x26	; 38
      0002B5 26                     934 	.db #0x26	; 38
      0002B6 26                     935 	.db #0x26	; 38
      0002B7 26                     936 	.db #0x26	; 38
      0002B8 26                     937 	.db #0x26	; 38
      0002B9 26                     938 	.db #0x26	; 38
      0002BA 26                     939 	.db #0x26	; 38
      0002BB 26                     940 	.db #0x26	; 38
      0002BC 26                     941 	.db #0x26	; 38
      0002BD 26                     942 	.db #0x26	; 38
      0002BE 26                     943 	.db #0x26	; 38
      0002BF 26                     944 	.db #0x26	; 38
      0002C0 2B                     945 	.db #0x2b	; 43
      0002C1 26                     946 	.db #0x26	; 38
      0002C2 26                     947 	.db #0x26	; 38
      0002C3 26                     948 	.db #0x26	; 38
      0002C4 26                     949 	.db #0x26	; 38
      0002C5 26                     950 	.db #0x26	; 38
      0002C6 27                     951 	.db #0x27	; 39
      0002C7 29                     952 	.db #0x29	; 41
      0002C8 26                     953 	.db #0x26	; 38
      0002C9 26                     954 	.db #0x26	; 38
      0002CA 26                     955 	.db #0x26	; 38
      0002CB 26                     956 	.db #0x26	; 38
      0002CC 26                     957 	.db #0x26	; 38
      0002CD 26                     958 	.db #0x26	; 38
      0002CE 2B                     959 	.db #0x2b	; 43
      0002CF 26                     960 	.db #0x26	; 38
      0002D0 26                     961 	.db #0x26	; 38
      0002D1 26                     962 	.db #0x26	; 38
      0002D2 26                     963 	.db #0x26	; 38
      0002D3 26                     964 	.db #0x26	; 38
      0002D4 26                     965 	.db #0x26	; 38
      0002D5 26                     966 	.db #0x26	; 38
      0002D6 26                     967 	.db #0x26	; 38
      0002D7 26                     968 	.db #0x26	; 38
      0002D8 26                     969 	.db #0x26	; 38
      0002D9 26                     970 	.db #0x26	; 38
      0002DA 26                     971 	.db #0x26	; 38
      0002DB 26                     972 	.db #0x26	; 38
      0002DC 26                     973 	.db #0x26	; 38
      0002DD 26                     974 	.db #0x26	; 38
      0002DE 26                     975 	.db #0x26	; 38
      0002DF 26                     976 	.db #0x26	; 38
      0002E0 26                     977 	.db #0x26	; 38
      0002E1 26                     978 	.db #0x26	; 38
      0002E2 26                     979 	.db #0x26	; 38
      0002E3 26                     980 	.db #0x26	; 38
      0002E4 26                     981 	.db #0x26	; 38
      0002E5 26                     982 	.db #0x26	; 38
      0002E6 2A                     983 	.db #0x2a	; 42
      0002E7 26                     984 	.db #0x26	; 38
      0002E8 26                     985 	.db #0x26	; 38
      0002E9 26                     986 	.db #0x26	; 38
      0002EA 26                     987 	.db #0x26	; 38
      0002EB 26                     988 	.db #0x26	; 38
      0002EC 26                     989 	.db #0x26	; 38
      0002ED 26                     990 	.db #0x26	; 38
      0002EE 26                     991 	.db #0x26	; 38
      0002EF 26                     992 	.db #0x26	; 38
      0002F0 26                     993 	.db #0x26	; 38
      0002F1 26                     994 	.db #0x26	; 38
      0002F2 2C                     995 	.db #0x2c	; 44
      0002F3 26                     996 	.db #0x26	; 38
      0002F4 26                     997 	.db #0x26	; 38
      0002F5 26                     998 	.db #0x26	; 38
      0002F6 26                     999 	.db #0x26	; 38
      0002F7 26                    1000 	.db #0x26	; 38
      0002F8 26                    1001 	.db #0x26	; 38
      0002F9 26                    1002 	.db #0x26	; 38
      0002FA 26                    1003 	.db #0x26	; 38
      0002FB 26                    1004 	.db #0x26	; 38
      0002FC 26                    1005 	.db #0x26	; 38
      0002FD 26                    1006 	.db #0x26	; 38
      0002FE 26                    1007 	.db #0x26	; 38
      0002FF 26                    1008 	.db #0x26	; 38
      000300 26                    1009 	.db #0x26	; 38
      000301 26                    1010 	.db #0x26	; 38
      000302 26                    1011 	.db #0x26	; 38
      000303 26                    1012 	.db #0x26	; 38
      000304 26                    1013 	.db #0x26	; 38
      000305 26                    1014 	.db #0x26	; 38
      000306 26                    1015 	.db #0x26	; 38
      000307 26                    1016 	.db #0x26	; 38
      000308 26                    1017 	.db #0x26	; 38
      000309 26                    1018 	.db #0x26	; 38
      00030A 26                    1019 	.db #0x26	; 38
      00030B 26                    1020 	.db #0x26	; 38
      00030C 26                    1021 	.db #0x26	; 38
      00030D 26                    1022 	.db #0x26	; 38
      00030E 26                    1023 	.db #0x26	; 38
      00030F 26                    1024 	.db #0x26	; 38
      000310 26                    1025 	.db #0x26	; 38
      000311 26                    1026 	.db #0x26	; 38
      000312 26                    1027 	.db #0x26	; 38
      000313 26                    1028 	.db #0x26	; 38
      000314 26                    1029 	.db #0x26	; 38
      000315 26                    1030 	.db #0x26	; 38
      000316 26                    1031 	.db #0x26	; 38
      000317 2B                    1032 	.db #0x2b	; 43
      000318 26                    1033 	.db #0x26	; 38
      000319 26                    1034 	.db #0x26	; 38
      00031A 26                    1035 	.db #0x26	; 38
      00031B 26                    1036 	.db #0x26	; 38
      00031C 26                    1037 	.db #0x26	; 38
      00031D 26                    1038 	.db #0x26	; 38
      00031E 26                    1039 	.db #0x26	; 38
      00031F 26                    1040 	.db #0x26	; 38
      000320 26                    1041 	.db #0x26	; 38
      000321 26                    1042 	.db #0x26	; 38
      000322 26                    1043 	.db #0x26	; 38
      000323 26                    1044 	.db #0x26	; 38
      000324 26                    1045 	.db #0x26	; 38
      000325 26                    1046 	.db #0x26	; 38
      000326 26                    1047 	.db #0x26	; 38
      000327 26                    1048 	.db #0x26	; 38
      000328 26                    1049 	.db #0x26	; 38
      000329 26                    1050 	.db #0x26	; 38
      00032A 26                    1051 	.db #0x26	; 38
      00032B 26                    1052 	.db #0x26	; 38
      00032C 26                    1053 	.db #0x26	; 38
      00032D 26                    1054 	.db #0x26	; 38
      00032E 26                    1055 	.db #0x26	; 38
      00032F 26                    1056 	.db #0x26	; 38
      000330 26                    1057 	.db #0x26	; 38
      000331 26                    1058 	.db #0x26	; 38
      000332 26                    1059 	.db #0x26	; 38
      000333 26                    1060 	.db #0x26	; 38
      000334 26                    1061 	.db #0x26	; 38
      000335 26                    1062 	.db #0x26	; 38
      000336 26                    1063 	.db #0x26	; 38
      000337 26                    1064 	.db #0x26	; 38
      000338 26                    1065 	.db #0x26	; 38
      000339 26                    1066 	.db #0x26	; 38
      00033A 26                    1067 	.db #0x26	; 38
      00033B 26                    1068 	.db #0x26	; 38
      00033C 26                    1069 	.db #0x26	; 38
      00033D 26                    1070 	.db #0x26	; 38
      00033E 2B                    1071 	.db #0x2b	; 43
      00033F 26                    1072 	.db #0x26	; 38
      000340 26                    1073 	.db #0x26	; 38
      000341 26                    1074 	.db #0x26	; 38
      000342 26                    1075 	.db #0x26	; 38
      000343 26                    1076 	.db #0x26	; 38
      000344 26                    1077 	.db #0x26	; 38
      000345 26                    1078 	.db #0x26	; 38
      000346 26                    1079 	.db #0x26	; 38
      000347 26                    1080 	.db #0x26	; 38
      000348 26                    1081 	.db #0x26	; 38
      000349 26                    1082 	.db #0x26	; 38
      00034A 2B                    1083 	.db #0x2b	; 43
      00034B 26                    1084 	.db #0x26	; 38
      00034C 26                    1085 	.db #0x26	; 38
      00034D 26                    1086 	.db #0x26	; 38
      00034E 26                    1087 	.db #0x26	; 38
      00034F 26                    1088 	.db #0x26	; 38
      000350 26                    1089 	.db #0x26	; 38
      000351 26                    1090 	.db #0x26	; 38
      000352 26                    1091 	.db #0x26	; 38
      000353 26                    1092 	.db #0x26	; 38
      000354 26                    1093 	.db #0x26	; 38
      000355 26                    1094 	.db #0x26	; 38
      000356 26                    1095 	.db #0x26	; 38
      000357 26                    1096 	.db #0x26	; 38
      000358 26                    1097 	.db #0x26	; 38
      000359 26                    1098 	.db #0x26	; 38
      00035A 26                    1099 	.db #0x26	; 38
      00035B 26                    1100 	.db #0x26	; 38
      00035C 26                    1101 	.db #0x26	; 38
      00035D 26                    1102 	.db #0x26	; 38
      00035E 26                    1103 	.db #0x26	; 38
      00035F 26                    1104 	.db #0x26	; 38
      000360 26                    1105 	.db #0x26	; 38
      000361 26                    1106 	.db #0x26	; 38
      000362 26                    1107 	.db #0x26	; 38
      000363 26                    1108 	.db #0x26	; 38
      000364 26                    1109 	.db #0x26	; 38
      000365 26                    1110 	.db #0x26	; 38
      000366 2C                    1111 	.db #0x2c	; 44
      000367 26                    1112 	.db #0x26	; 38
      000368 26                    1113 	.db #0x26	; 38
      000369 26                    1114 	.db #0x26	; 38
      00036A 26                    1115 	.db #0x26	; 38
      00036B 26                    1116 	.db #0x26	; 38
      00036C 26                    1117 	.db #0x26	; 38
      00036D 26                    1118 	.db #0x26	; 38
      00036E 26                    1119 	.db #0x26	; 38
      00036F 26                    1120 	.db #0x26	; 38
      000370 2B                    1121 	.db #0x2b	; 43
      000371 26                    1122 	.db #0x26	; 38
      000372 26                    1123 	.db #0x26	; 38
      000373 26                    1124 	.db #0x26	; 38
      000374 26                    1125 	.db #0x26	; 38
      000375 26                    1126 	.db #0x26	; 38
      000376 26                    1127 	.db #0x26	; 38
      000377 26                    1128 	.db #0x26	; 38
      000378 26                    1129 	.db #0x26	; 38
      000379 26                    1130 	.db #0x26	; 38
      00037A 26                    1131 	.db #0x26	; 38
      00037B 26                    1132 	.db #0x26	; 38
      00037C 26                    1133 	.db #0x26	; 38
      00037D 26                    1134 	.db #0x26	; 38
      00037E 26                    1135 	.db #0x26	; 38
      00037F 26                    1136 	.db #0x26	; 38
      000380 26                    1137 	.db #0x26	; 38
      000381 26                    1138 	.db #0x26	; 38
      000382 26                    1139 	.db #0x26	; 38
      000383 26                    1140 	.db #0x26	; 38
      000384 26                    1141 	.db #0x26	; 38
      000385 26                    1142 	.db #0x26	; 38
      000386 26                    1143 	.db #0x26	; 38
      000387 26                    1144 	.db #0x26	; 38
      000388 26                    1145 	.db #0x26	; 38
      000389 26                    1146 	.db #0x26	; 38
      00038A 26                    1147 	.db #0x26	; 38
      00038B 26                    1148 	.db #0x26	; 38
      00038C 26                    1149 	.db #0x26	; 38
      00038D 26                    1150 	.db #0x26	; 38
      00038E 26                    1151 	.db #0x26	; 38
      00038F 26                    1152 	.db #0x26	; 38
      000390 26                    1153 	.db #0x26	; 38
      000391 26                    1154 	.db #0x26	; 38
      000392 26                    1155 	.db #0x26	; 38
      000393 26                    1156 	.db #0x26	; 38
      000394 26                    1157 	.db #0x26	; 38
      000395 26                    1158 	.db #0x26	; 38
      000396 26                    1159 	.db #0x26	; 38
      000397 26                    1160 	.db #0x26	; 38
      000398 27                    1161 	.db #0x27	; 39
      000399 28                    1162 	.db #0x28	; 40
      00039A 26                    1163 	.db #0x26	; 38
      00039B 26                    1164 	.db #0x26	; 38
      00039C 26                    1165 	.db #0x26	; 38
      00039D 26                    1166 	.db #0x26	; 38
      00039E 26                    1167 	.db #0x26	; 38
      00039F 26                    1168 	.db #0x26	; 38
      0003A0 26                    1169 	.db #0x26	; 38
      0003A1 26                    1170 	.db #0x26	; 38
      0003A2 26                    1171 	.db #0x26	; 38
      0003A3 26                    1172 	.db #0x26	; 38
      0003A4 26                    1173 	.db #0x26	; 38
      0003A5 26                    1174 	.db #0x26	; 38
      0003A6 26                    1175 	.db #0x26	; 38
      0003A7 26                    1176 	.db #0x26	; 38
      0003A8 26                    1177 	.db #0x26	; 38
      0003A9 26                    1178 	.db #0x26	; 38
      0003AA 26                    1179 	.db #0x26	; 38
      0003AB 26                    1180 	.db #0x26	; 38
      0003AC 26                    1181 	.db #0x26	; 38
      0003AD 2B                    1182 	.db #0x2b	; 43
      0003AE 26                    1183 	.db #0x26	; 38
      0003AF 26                    1184 	.db #0x26	; 38
      0003B0 26                    1185 	.db #0x26	; 38
      0003B1 26                    1186 	.db #0x26	; 38
      0003B2 26                    1187 	.db #0x26	; 38
      0003B3 26                    1188 	.db #0x26	; 38
      0003B4 26                    1189 	.db #0x26	; 38
      0003B5 25                    1190 	.db #0x25	; 37
      0003B6 26                    1191 	.db #0x26	; 38
      0003B7 26                    1192 	.db #0x26	; 38
      0003B8 2A                    1193 	.db #0x2a	; 42
      0003B9 29                    1194 	.db #0x29	; 41
      0003BA 26                    1195 	.db #0x26	; 38
      0003BB 26                    1196 	.db #0x26	; 38
      0003BC 26                    1197 	.db #0x26	; 38
      0003BD 26                    1198 	.db #0x26	; 38
      0003BE 26                    1199 	.db #0x26	; 38
      0003BF 26                    1200 	.db #0x26	; 38
      0003C0 26                    1201 	.db #0x26	; 38
      0003C1 26                    1202 	.db #0x26	; 38
      0003C2 2B                    1203 	.db #0x2b	; 43
      0003C3 26                    1204 	.db #0x26	; 38
      0003C4 26                    1205 	.db #0x26	; 38
      0003C5 26                    1206 	.db #0x26	; 38
      0003C6 26                    1207 	.db #0x26	; 38
      0003C7 26                    1208 	.db #0x26	; 38
      0003C8 26                    1209 	.db #0x26	; 38
      0003C9 2C                    1210 	.db #0x2c	; 44
      0003CA 26                    1211 	.db #0x26	; 38
      0003CB 26                    1212 	.db #0x26	; 38
      0003CC 26                    1213 	.db #0x26	; 38
      0003CD 26                    1214 	.db #0x26	; 38
      0003CE 26                    1215 	.db #0x26	; 38
      0003CF 26                    1216 	.db #0x26	; 38
      0003D0 26                    1217 	.db #0x26	; 38
      0003D1 26                    1218 	.db #0x26	; 38
      0003D2 26                    1219 	.db #0x26	; 38
      0003D3 26                    1220 	.db #0x26	; 38
      0003D4 26                    1221 	.db #0x26	; 38
      0003D5 2C                    1222 	.db #0x2c	; 44
      0003D6 26                    1223 	.db #0x26	; 38
      0003D7 26                    1224 	.db #0x26	; 38
      0003D8 26                    1225 	.db #0x26	; 38
      0003D9 26                    1226 	.db #0x26	; 38
      0003DA 26                    1227 	.db #0x26	; 38
      0003DB 26                    1228 	.db #0x26	; 38
      0003DC 26                    1229 	.db #0x26	; 38
      0003DD 26                    1230 	.db #0x26	; 38
      0003DE 26                    1231 	.db #0x26	; 38
      0003DF 26                    1232 	.db #0x26	; 38
      0003E0 26                    1233 	.db #0x26	; 38
      0003E1 26                    1234 	.db #0x26	; 38
      0003E2 26                    1235 	.db #0x26	; 38
      0003E3 26                    1236 	.db #0x26	; 38
      0003E4 26                    1237 	.db #0x26	; 38
      0003E5 26                    1238 	.db #0x26	; 38
      0003E6 26                    1239 	.db #0x26	; 38
      0003E7 26                    1240 	.db #0x26	; 38
      0003E8 26                    1241 	.db #0x26	; 38
      0003E9 26                    1242 	.db #0x26	; 38
      0003EA 26                    1243 	.db #0x26	; 38
      0003EB 26                    1244 	.db #0x26	; 38
      0003EC 26                    1245 	.db #0x26	; 38
      0003ED 26                    1246 	.db #0x26	; 38
      0003EE 26                    1247 	.db #0x26	; 38
      0003EF 26                    1248 	.db #0x26	; 38
      0003F0 26                    1249 	.db #0x26	; 38
      0003F1 26                    1250 	.db #0x26	; 38
      0003F2 26                    1251 	.db #0x26	; 38
      0003F3 26                    1252 	.db #0x26	; 38
      0003F4 26                    1253 	.db #0x26	; 38
      0003F5 26                    1254 	.db #0x26	; 38
      0003F6 26                    1255 	.db #0x26	; 38
      0003F7 26                    1256 	.db #0x26	; 38
      0003F8 26                    1257 	.db #0x26	; 38
      0003F9 26                    1258 	.db #0x26	; 38
      0003FA 26                    1259 	.db #0x26	; 38
      0003FB 26                    1260 	.db #0x26	; 38
      0003FC 26                    1261 	.db #0x26	; 38
      0003FD 26                    1262 	.db #0x26	; 38
      0003FE 26                    1263 	.db #0x26	; 38
      0003FF 26                    1264 	.db #0x26	; 38
      000400 26                    1265 	.db #0x26	; 38
      000401 26                    1266 	.db #0x26	; 38
      000402 26                    1267 	.db #0x26	; 38
      000403 26                    1268 	.db #0x26	; 38
      000404 26                    1269 	.db #0x26	; 38
      000405 26                    1270 	.db #0x26	; 38
      000406 26                    1271 	.db #0x26	; 38
      000407 26                    1272 	.db #0x26	; 38
      000408 26                    1273 	.db #0x26	; 38
      000409 26                    1274 	.db #0x26	; 38
      00040A 26                    1275 	.db #0x26	; 38
      00040B 26                    1276 	.db #0x26	; 38
      00040C 26                    1277 	.db #0x26	; 38
      00040D 2B                    1278 	.db #0x2b	; 43
      00040E 26                    1279 	.db #0x26	; 38
      00040F 26                    1280 	.db #0x26	; 38
      000410 26                    1281 	.db #0x26	; 38
      000411 26                    1282 	.db #0x26	; 38
      000412 26                    1283 	.db #0x26	; 38
      000413 26                    1284 	.db #0x26	; 38
      000414 26                    1285 	.db #0x26	; 38
      000415 26                    1286 	.db #0x26	; 38
      000416 26                    1287 	.db #0x26	; 38
      000417 26                    1288 	.db #0x26	; 38
      000418 26                    1289 	.db #0x26	; 38
      000419 26                    1290 	.db #0x26	; 38
      00041A 26                    1291 	.db #0x26	; 38
      00041B 26                    1292 	.db #0x26	; 38
      00041C 26                    1293 	.db #0x26	; 38
      00041D 26                    1294 	.db #0x26	; 38
      00041E 26                    1295 	.db #0x26	; 38
      00041F 26                    1296 	.db #0x26	; 38
      000420 2B                    1297 	.db #0x2b	; 43
      000421 26                    1298 	.db #0x26	; 38
      000422 26                    1299 	.db #0x26	; 38
      000423 26                    1300 	.db #0x26	; 38
      000424 26                    1301 	.db #0x26	; 38
      000425 26                    1302 	.db #0x26	; 38
      000426 26                    1303 	.db #0x26	; 38
      000427 26                    1304 	.db #0x26	; 38
      000428 26                    1305 	.db #0x26	; 38
      000429 26                    1306 	.db #0x26	; 38
      00042A 26                    1307 	.db #0x26	; 38
      00042B 26                    1308 	.db #0x26	; 38
      00042C 26                    1309 	.db #0x26	; 38
      00042D 26                    1310 	.db #0x26	; 38
      00042E 26                    1311 	.db #0x26	; 38
      00042F 26                    1312 	.db #0x26	; 38
      000430 26                    1313 	.db #0x26	; 38
      000431 26                    1314 	.db #0x26	; 38
      000432 26                    1315 	.db #0x26	; 38
      000433 26                    1316 	.db #0x26	; 38
      000434 26                    1317 	.db #0x26	; 38
      000435 26                    1318 	.db #0x26	; 38
      000436 26                    1319 	.db #0x26	; 38
      000437 2C                    1320 	.db #0x2c	; 44
      000438 26                    1321 	.db #0x26	; 38
      000439 26                    1322 	.db #0x26	; 38
      00043A 26                    1323 	.db #0x26	; 38
      00043B 26                    1324 	.db #0x26	; 38
      00043C 26                    1325 	.db #0x26	; 38
      00043D 26                    1326 	.db #0x26	; 38
      00043E 26                    1327 	.db #0x26	; 38
      00043F 26                    1328 	.db #0x26	; 38
      000440 26                    1329 	.db #0x26	; 38
      000441 26                    1330 	.db #0x26	; 38
      000442 26                    1331 	.db #0x26	; 38
      000443 26                    1332 	.db #0x26	; 38
      000444 26                    1333 	.db #0x26	; 38
      000445 26                    1334 	.db #0x26	; 38
      000446 26                    1335 	.db #0x26	; 38
      000447 26                    1336 	.db #0x26	; 38
      000448 25                    1337 	.db #0x25	; 37
      000449 2C                    1338 	.db #0x2c	; 44
      00044A 26                    1339 	.db #0x26	; 38
      00044B 26                    1340 	.db #0x26	; 38
      00044C 26                    1341 	.db #0x26	; 38
      00044D 26                    1342 	.db #0x26	; 38
      00044E 26                    1343 	.db #0x26	; 38
      00044F 26                    1344 	.db #0x26	; 38
      000450 26                    1345 	.db #0x26	; 38
      000451 26                    1346 	.db #0x26	; 38
      000452 26                    1347 	.db #0x26	; 38
      000453 26                    1348 	.db #0x26	; 38
      000454 26                    1349 	.db #0x26	; 38
      000455 26                    1350 	.db #0x26	; 38
      000456 26                    1351 	.db #0x26	; 38
      000457 26                    1352 	.db #0x26	; 38
      000458 26                    1353 	.db #0x26	; 38
      000459 26                    1354 	.db #0x26	; 38
      00045A 2B                    1355 	.db #0x2b	; 43
      00045B 26                    1356 	.db #0x26	; 38
      00045C 26                    1357 	.db #0x26	; 38
      00045D 26                    1358 	.db #0x26	; 38
      00045E 26                    1359 	.db #0x26	; 38
      00045F 26                    1360 	.db #0x26	; 38
      000460 26                    1361 	.db #0x26	; 38
      000461 26                    1362 	.db #0x26	; 38
      000462 26                    1363 	.db #0x26	; 38
      000463 26                    1364 	.db #0x26	; 38
      000464 26                    1365 	.db #0x26	; 38
      000465 26                    1366 	.db #0x26	; 38
      000466 26                    1367 	.db #0x26	; 38
      000467 26                    1368 	.db #0x26	; 38
      000468 26                    1369 	.db #0x26	; 38
      000469 26                    1370 	.db #0x26	; 38
      00046A 26                    1371 	.db #0x26	; 38
      00046B 26                    1372 	.db #0x26	; 38
      00046C 26                    1373 	.db #0x26	; 38
      00046D 26                    1374 	.db #0x26	; 38
      00046E 26                    1375 	.db #0x26	; 38
      00046F 26                    1376 	.db #0x26	; 38
      000470 26                    1377 	.db #0x26	; 38
      000471 26                    1378 	.db #0x26	; 38
      000472 27                    1379 	.db #0x27	; 39
      000473 28                    1380 	.db #0x28	; 40
      000474 26                    1381 	.db #0x26	; 38
      000475 26                    1382 	.db #0x26	; 38
      000476 26                    1383 	.db #0x26	; 38
      000477 26                    1384 	.db #0x26	; 38
      000478 26                    1385 	.db #0x26	; 38
      000479 26                    1386 	.db #0x26	; 38
      00047A 26                    1387 	.db #0x26	; 38
      00047B 26                    1388 	.db #0x26	; 38
      00047C 26                    1389 	.db #0x26	; 38
      00047D 26                    1390 	.db #0x26	; 38
      00047E 26                    1391 	.db #0x26	; 38
      00047F 26                    1392 	.db #0x26	; 38
      000480 26                    1393 	.db #0x26	; 38
      000481 26                    1394 	.db #0x26	; 38
      000482 26                    1395 	.db #0x26	; 38
      000483 26                    1396 	.db #0x26	; 38
      000484 26                    1397 	.db #0x26	; 38
      000485 26                    1398 	.db #0x26	; 38
      000486 2B                    1399 	.db #0x2b	; 43
      000487                       1400 _backgroundtiles:
      000487 40                    1401 	.db #0x40	; 64
      000488 38                    1402 	.db #0x38	; 56	'8'
      000489 3A                    1403 	.db #0x3a	; 58
      00048A 44                    1404 	.db #0x44	; 68	'D'
      00048B 7C                    1405 	.db #0x7c	; 124
      00048C 9A                    1406 	.db #0x9a	; 154
      00048D 5E                    1407 	.db #0x5e	; 94
      00048E E9                    1408 	.db #0xe9	; 233
      00048F 7A                    1409 	.db #0x7a	; 122	'z'
      000490 87                    1410 	.db #0x87	; 135
      000491 76                    1411 	.db #0x76	; 118	'v'
      000492 B9                    1412 	.db #0xb9	; 185
      000493 3C                    1413 	.db #0x3c	; 60
      000494 72                    1414 	.db #0x72	; 114	'r'
      000495 00                    1415 	.db #0x00	; 0
      000496 3C                    1416 	.db #0x3c	; 60
      000497 00                    1417 	.db #0x00	; 0
      000498 00                    1418 	.db #0x00	; 0
      000499 00                    1419 	.db #0x00	; 0
      00049A 00                    1420 	.db #0x00	; 0
      00049B 00                    1421 	.db #0x00	; 0
      00049C 00                    1422 	.db #0x00	; 0
      00049D 00                    1423 	.db #0x00	; 0
      00049E 00                    1424 	.db #0x00	; 0
      00049F 00                    1425 	.db #0x00	; 0
      0004A0 00                    1426 	.db #0x00	; 0
      0004A1 00                    1427 	.db #0x00	; 0
      0004A2 00                    1428 	.db #0x00	; 0
      0004A3 00                    1429 	.db #0x00	; 0
      0004A4 00                    1430 	.db #0x00	; 0
      0004A5 00                    1431 	.db #0x00	; 0
      0004A6 00                    1432 	.db #0x00	; 0
      0004A7 00                    1433 	.db #0x00	; 0
      0004A8 0F                    1434 	.db #0x0f	; 15
      0004A9 08                    1435 	.db #0x08	; 8
      0004AA 17                    1436 	.db #0x17	; 23
      0004AB 1C                    1437 	.db #0x1c	; 28
      0004AC 23                    1438 	.db #0x23	; 35
      0004AD 3E                    1439 	.db #0x3e	; 62
      0004AE 41                    1440 	.db #0x41	; 65	'A'
      0004AF 1B                    1441 	.db #0x1b	; 27
      0004B0 64                    1442 	.db #0x64	; 100	'd'
      0004B1 31                    1443 	.db #0x31	; 49	'1'
      0004B2 4E                    1444 	.db #0x4e	; 78	'N'
      0004B3 B1                    1445 	.db #0xb1	; 177
      0004B4 CE                    1446 	.db #0xce	; 206
      0004B5 BB                    1447 	.db #0xbb	; 187
      0004B6 C4                    1448 	.db #0xc4	; 196
      0004B7 00                    1449 	.db #0x00	; 0
      0004B8 F8                    1450 	.db #0xf8	; 248
      0004B9 00                    1451 	.db #0x00	; 0
      0004BA FC                    1452 	.db #0xfc	; 252
      0004BB E0                    1453 	.db #0xe0	; 224
      0004BC 1E                    1454 	.db #0x1e	; 30
      0004BD F0                    1455 	.db #0xf0	; 240
      0004BE 0F                    1456 	.db #0x0f	; 15
      0004BF BE                    1457 	.db #0xbe	; 190
      0004C0 01                    1458 	.db #0x01	; 1
      0004C1 BC                    1459 	.db #0xbc	; 188
      0004C2 02                    1460 	.db #0x02	; 2
      0004C3 CE                    1461 	.db #0xce	; 206
      0004C4 01                    1462 	.db #0x01	; 1
      0004C5 F6                    1463 	.db #0xf6	; 246
      0004C6 61                    1464 	.db #0x61	; 97	'a'
      0004C7 F4                    1465 	.db #0xf4	; 244
      0004C8 02                    1466 	.db #0x02	; 2
      0004C9 94                    1467 	.db #0x94	; 148
      0004CA 62                    1468 	.db #0x62	; 98	'b'
      0004CB E4                    1469 	.db #0xe4	; 228
      0004CC 02                    1470 	.db #0x02	; 2
      0004CD 6C                    1471 	.db #0x6c	; 108	'l'
      0004CE 82                    1472 	.db #0x82	; 130
      0004CF 70                    1473 	.db #0x70	; 112	'p'
      0004D0 8C                    1474 	.db #0x8c	; 140
      0004D1 60                    1475 	.db #0x60	; 96
      0004D2 90                    1476 	.db #0x90	; 144
      0004D3 00                    1477 	.db #0x00	; 0
      0004D4 E0                    1478 	.db #0xe0	; 224
      0004D5 80                    1479 	.db #0x80	; 128
      0004D6 80                    1480 	.db #0x80	; 128
      0004D7 8E                    1481 	.db #0x8e	; 142
      0004D8 F7                    1482 	.db #0xf7	; 247
      0004D9 8F                    1483 	.db #0x8f	; 143
      0004DA F3                    1484 	.db #0xf3	; 243
      0004DB 86                    1485 	.db #0x86	; 134
      0004DC F9                    1486 	.db #0xf9	; 249
      0004DD 42                    1487 	.db #0x42	; 66	'B'
      0004DE 7D                    1488 	.db #0x7d	; 125
      0004DF 80                    1489 	.db #0x80	; 128
      0004E0 FF                    1490 	.db #0xff	; 255
      0004E1 44                    1491 	.db #0x44	; 68	'D'
      0004E2 7F                    1492 	.db #0x7f	; 127
      0004E3 28                    1493 	.db #0x28	; 40
      0004E4 3F                    1494 	.db #0x3f	; 63
      0004E5 07                    1495 	.db #0x07	; 7
      0004E6 07                    1496 	.db #0x07	; 7
      0004E7 00                    1497 	.db #0x00	; 0
      0004E8 00                    1498 	.db #0x00	; 0
      0004E9 08                    1499 	.db #0x08	; 8
      0004EA 00                    1500 	.db #0x00	; 0
      0004EB 08                    1501 	.db #0x08	; 8
      0004EC 00                    1502 	.db #0x00	; 0
      0004ED 1C                    1503 	.db #0x1c	; 28
      0004EE 00                    1504 	.db #0x00	; 0
      0004EF 7F                    1505 	.db #0x7f	; 127
      0004F0 00                    1506 	.db #0x00	; 0
      0004F1 1C                    1507 	.db #0x1c	; 28
      0004F2 00                    1508 	.db #0x00	; 0
      0004F3 08                    1509 	.db #0x08	; 8
      0004F4 00                    1510 	.db #0x00	; 0
      0004F5 08                    1511 	.db #0x08	; 8
      0004F6 00                    1512 	.db #0x00	; 0
      0004F7 00                    1513 	.db #0x00	; 0
      0004F8 00                    1514 	.db #0x00	; 0
      0004F9 00                    1515 	.db #0x00	; 0
      0004FA 00                    1516 	.db #0x00	; 0
      0004FB 00                    1517 	.db #0x00	; 0
      0004FC 00                    1518 	.db #0x00	; 0
      0004FD 10                    1519 	.db #0x10	; 16
      0004FE 00                    1520 	.db #0x00	; 0
      0004FF 00                    1521 	.db #0x00	; 0
      000500 00                    1522 	.db #0x00	; 0
      000501 00                    1523 	.db #0x00	; 0
      000502 00                    1524 	.db #0x00	; 0
      000503 00                    1525 	.db #0x00	; 0
      000504 00                    1526 	.db #0x00	; 0
      000505 00                    1527 	.db #0x00	; 0
      000506 00                    1528 	.db #0x00	; 0
      000507                       1529 _healthblock:
      000507 FE                    1530 	.db #0xfe	; 254
      000508 FE                    1531 	.db #0xfe	; 254
      000509 FE                    1532 	.db #0xfe	; 254
      00050A FE                    1533 	.db #0xfe	; 254
      00050B FE                    1534 	.db #0xfe	; 254
      00050C FE                    1535 	.db #0xfe	; 254
      00050D FE                    1536 	.db #0xfe	; 254
      00050E FE                    1537 	.db #0xfe	; 254
      00050F FE                    1538 	.db #0xfe	; 254
      000510 FE                    1539 	.db #0xfe	; 254
      000511 FE                    1540 	.db #0xfe	; 254
      000512 FE                    1541 	.db #0xfe	; 254
      000513 FE                    1542 	.db #0xfe	; 254
      000514 FE                    1543 	.db #0xfe	; 254
      000515 00                    1544 	.db #0x00	; 0
      000516 00                    1545 	.db #0x00	; 0
      000517                       1546 _enemyOptionCount:
      000517 05                    1547 	.db #0x05	; 5
      000518                       1548 _enemy1:
      000518 66                    1549 	.db #0x66	; 102	'f'
      000519 24                    1550 	.db #0x24	; 36
      00051A E7                    1551 	.db #0xe7	; 231
      00051B 66                    1552 	.db #0x66	; 102	'f'
      00051C F7                    1553 	.db #0xf7	; 247
      00051D E7                    1554 	.db #0xe7	; 231
      00051E 1C                    1555 	.db #0x1c	; 28
      00051F 18                    1556 	.db #0x18	; 24
      000520 38                    1557 	.db #0x38	; 56	'8'
      000521 18                    1558 	.db #0x18	; 24
      000522 EF                    1559 	.db #0xef	; 239
      000523 E7                    1560 	.db #0xe7	; 231
      000524 E7                    1561 	.db #0xe7	; 231
      000525 66                    1562 	.db #0x66	; 102	'f'
      000526 66                    1563 	.db #0x66	; 102	'f'
      000527 24                    1564 	.db #0x24	; 36
      000528 00                    1565 	.db #0x00	; 0
      000529 00                    1566 	.db #0x00	; 0
      00052A 00                    1567 	.db #0x00	; 0
      00052B 00                    1568 	.db #0x00	; 0
      00052C 00                    1569 	.db #0x00	; 0
      00052D 00                    1570 	.db #0x00	; 0
      00052E 00                    1571 	.db #0x00	; 0
      00052F 00                    1572 	.db #0x00	; 0
      000530 00                    1573 	.db #0x00	; 0
      000531 00                    1574 	.db #0x00	; 0
      000532 00                    1575 	.db #0x00	; 0
      000533 00                    1576 	.db #0x00	; 0
      000534 00                    1577 	.db #0x00	; 0
      000535 00                    1578 	.db #0x00	; 0
      000536 00                    1579 	.db #0x00	; 0
      000537 00                    1580 	.db #0x00	; 0
      000538 3C                    1581 	.db #0x3c	; 60
      000539 3C                    1582 	.db #0x3c	; 60
      00053A 5E                    1583 	.db #0x5e	; 94
      00053B 62                    1584 	.db #0x62	; 98	'b'
      00053C 8F                    1585 	.db #0x8f	; 143
      00053D F1                    1586 	.db #0xf1	; 241
      00053E C7                    1587 	.db #0xc7	; 199
      00053F F9                    1588 	.db #0xf9	; 249
      000540 C3                    1589 	.db #0xc3	; 195
      000541 FD                    1590 	.db #0xfd	; 253
      000542 E1                    1591 	.db #0xe1	; 225
      000543 FF                    1592 	.db #0xff	; 255
      000544 7A                    1593 	.db #0x7a	; 122	'z'
      000545 7E                    1594 	.db #0x7e	; 126
      000546 3C                    1595 	.db #0x3c	; 60
      000547 3C                    1596 	.db #0x3c	; 60
      000548 00                    1597 	.db #0x00	; 0
      000549 00                    1598 	.db #0x00	; 0
      00054A 00                    1599 	.db #0x00	; 0
      00054B 00                    1600 	.db #0x00	; 0
      00054C 00                    1601 	.db #0x00	; 0
      00054D 00                    1602 	.db #0x00	; 0
      00054E 00                    1603 	.db #0x00	; 0
      00054F 00                    1604 	.db #0x00	; 0
      000550 00                    1605 	.db #0x00	; 0
      000551 00                    1606 	.db #0x00	; 0
      000552 00                    1607 	.db #0x00	; 0
      000553 00                    1608 	.db #0x00	; 0
      000554 00                    1609 	.db #0x00	; 0
      000555 00                    1610 	.db #0x00	; 0
      000556 00                    1611 	.db #0x00	; 0
      000557 00                    1612 	.db #0x00	; 0
      000558 3C                    1613 	.db #0x3c	; 60
      000559 3E                    1614 	.db #0x3e	; 62
      00055A 20                    1615 	.db #0x20	; 32
      00055B 38                    1616 	.db #0x38	; 56	'8'
      00055C 44                    1617 	.db #0x44	; 68	'D'
      00055D 78                    1618 	.db #0x78	; 120	'x'
      00055E BA                    1619 	.db #0xba	; 186
      00055F C4                    1620 	.db #0xc4	; 196
      000560 BA                    1621 	.db #0xba	; 186
      000561 C4                    1622 	.db #0xc4	; 196
      000562 44                    1623 	.db #0x44	; 68	'D'
      000563 78                    1624 	.db #0x78	; 120	'x'
      000564 20                    1625 	.db #0x20	; 32
      000565 38                    1626 	.db #0x38	; 56	'8'
      000566 3C                    1627 	.db #0x3c	; 60
      000567 3E                    1628 	.db #0x3e	; 62
      000568                       1629 _largeenemies:
      000568 00                    1630 	.db #0x00	; 0
      000569 00                    1631 	.db #0x00	; 0
      00056A 00                    1632 	.db #0x00	; 0
      00056B 00                    1633 	.db #0x00	; 0
      00056C 00                    1634 	.db #0x00	; 0
      00056D 00                    1635 	.db #0x00	; 0
      00056E 00                    1636 	.db #0x00	; 0
      00056F 00                    1637 	.db #0x00	; 0
      000570 00                    1638 	.db #0x00	; 0
      000571 00                    1639 	.db #0x00	; 0
      000572 00                    1640 	.db #0x00	; 0
      000573 00                    1641 	.db #0x00	; 0
      000574 00                    1642 	.db #0x00	; 0
      000575 00                    1643 	.db #0x00	; 0
      000576 7F                    1644 	.db #0x7f	; 127
      000577 7F                    1645 	.db #0x7f	; 127
      000578 7F                    1646 	.db #0x7f	; 127
      000579 7F                    1647 	.db #0x7f	; 127
      00057A 00                    1648 	.db #0x00	; 0
      00057B 00                    1649 	.db #0x00	; 0
      00057C 00                    1650 	.db #0x00	; 0
      00057D 00                    1651 	.db #0x00	; 0
      00057E 00                    1652 	.db #0x00	; 0
      00057F 00                    1653 	.db #0x00	; 0
      000580 00                    1654 	.db #0x00	; 0
      000581 00                    1655 	.db #0x00	; 0
      000582 00                    1656 	.db #0x00	; 0
      000583 00                    1657 	.db #0x00	; 0
      000584 00                    1658 	.db #0x00	; 0
      000585 00                    1659 	.db #0x00	; 0
      000586 00                    1660 	.db #0x00	; 0
      000587 00                    1661 	.db #0x00	; 0
      000588 00                    1662 	.db #0x00	; 0
      000589 00                    1663 	.db #0x00	; 0
      00058A 40                    1664 	.db #0x40	; 64
      00058B 40                    1665 	.db #0x40	; 64
      00058C 60                    1666 	.db #0x60	; 96
      00058D 60                    1667 	.db #0x60	; 96
      00058E 70                    1668 	.db #0x70	; 112	'p'
      00058F 70                    1669 	.db #0x70	; 112	'p'
      000590 78                    1670 	.db #0x78	; 120	'x'
      000591 78                    1671 	.db #0x78	; 120	'x'
      000592 7C                    1672 	.db #0x7c	; 124
      000593 7C                    1673 	.db #0x7c	; 124
      000594 7E                    1674 	.db #0x7e	; 126
      000595 7E                    1675 	.db #0x7e	; 126
      000596 FF                    1676 	.db #0xff	; 255
      000597 FF                    1677 	.db #0xff	; 255
      000598 FF                    1678 	.db #0xff	; 255
      000599 FF                    1679 	.db #0xff	; 255
      00059A 7E                    1680 	.db #0x7e	; 126
      00059B 7E                    1681 	.db #0x7e	; 126
      00059C 7C                    1682 	.db #0x7c	; 124
      00059D 7C                    1683 	.db #0x7c	; 124
      00059E 78                    1684 	.db #0x78	; 120	'x'
      00059F 78                    1685 	.db #0x78	; 120	'x'
      0005A0 70                    1686 	.db #0x70	; 112	'p'
      0005A1 70                    1687 	.db #0x70	; 112	'p'
      0005A2 60                    1688 	.db #0x60	; 96
      0005A3 60                    1689 	.db #0x60	; 96
      0005A4 40                    1690 	.db #0x40	; 64
      0005A5 40                    1691 	.db #0x40	; 64
      0005A6 00                    1692 	.db #0x00	; 0
      0005A7 00                    1693 	.db #0x00	; 0
      0005A8 07                    1694 	.db #0x07	; 7
      0005A9 00                    1695 	.db #0x00	; 0
      0005AA 18                    1696 	.db #0x18	; 24
      0005AB 00                    1697 	.db #0x00	; 0
      0005AC 20                    1698 	.db #0x20	; 32
      0005AD 00                    1699 	.db #0x00	; 0
      0005AE 4C                    1700 	.db #0x4c	; 76	'L'
      0005AF 0C                    1701 	.db #0x0c	; 12
      0005B0 43                    1702 	.db #0x43	; 67	'C'
      0005B1 0F                    1703 	.db #0x0f	; 15
      0005B2 84                    1704 	.db #0x84	; 132
      0005B3 27                    1705 	.db #0x27	; 39
      0005B4 80                    1706 	.db #0x80	; 128
      0005B5 13                    1707 	.db #0x13	; 19
      0005B6 83                    1708 	.db #0x83	; 131
      0005B7 2A                    1709 	.db #0x2a	; 42
      0005B8 83                    1710 	.db #0x83	; 131
      0005B9 16                    1711 	.db #0x16	; 22
      0005BA 80                    1712 	.db #0x80	; 128
      0005BB 23                    1713 	.db #0x23	; 35
      0005BC 84                    1714 	.db #0x84	; 132
      0005BD 07                    1715 	.db #0x07	; 7
      0005BE 43                    1716 	.db #0x43	; 67	'C'
      0005BF 0F                    1717 	.db #0x0f	; 15
      0005C0 4C                    1718 	.db #0x4c	; 76	'L'
      0005C1 0C                    1719 	.db #0x0c	; 12
      0005C2 20                    1720 	.db #0x20	; 32
      0005C3 00                    1721 	.db #0x00	; 0
      0005C4 18                    1722 	.db #0x18	; 24
      0005C5 00                    1723 	.db #0x00	; 0
      0005C6 07                    1724 	.db #0x07	; 7
      0005C7 00                    1725 	.db #0x00	; 0
      0005C8 E0                    1726 	.db #0xe0	; 224
      0005C9 00                    1727 	.db #0x00	; 0
      0005CA 18                    1728 	.db #0x18	; 24
      0005CB 00                    1729 	.db #0x00	; 0
      0005CC 04                    1730 	.db #0x04	; 4
      0005CD 00                    1731 	.db #0x00	; 0
      0005CE 02                    1732 	.db #0x02	; 2
      0005CF 00                    1733 	.db #0x00	; 0
      0005D0 02                    1734 	.db #0x02	; 2
      0005D1 00                    1735 	.db #0x00	; 0
      0005D2 C1                    1736 	.db #0xc1	; 193
      0005D3 C0                    1737 	.db #0xc0	; 192
      0005D4 11                    1738 	.db #0x11	; 17
      0005D5 F0                    1739 	.db #0xf0	; 240
      0005D6 E5                    1740 	.db #0xe5	; 229
      0005D7 1C                    1741 	.db #0x1c	; 28
      0005D8 E5                    1742 	.db #0xe5	; 229
      0005D9 1C                    1743 	.db #0x1c	; 28
      0005DA 11                    1744 	.db #0x11	; 17
      0005DB F0                    1745 	.db #0xf0	; 240
      0005DC C1                    1746 	.db #0xc1	; 193
      0005DD C0                    1747 	.db #0xc0	; 192
      0005DE 02                    1748 	.db #0x02	; 2
      0005DF 00                    1749 	.db #0x00	; 0
      0005E0 02                    1750 	.db #0x02	; 2
      0005E1 00                    1751 	.db #0x00	; 0
      0005E2 04                    1752 	.db #0x04	; 4
      0005E3 00                    1753 	.db #0x00	; 0
      0005E4 18                    1754 	.db #0x18	; 24
      0005E5 00                    1755 	.db #0x00	; 0
      0005E6 E0                    1756 	.db #0xe0	; 224
      0005E7 00                    1757 	.db #0x00	; 0
      0005E8                       1758 _ProjectileTiles:
      0005E8 24                    1759 	.db #0x24	; 36
      0005E9 18                    1760 	.db #0x18	; 24
      0005EA 18                    1761 	.db #0x18	; 24
      0005EB 3C                    1762 	.db #0x3c	; 60
      0005EC 18                    1763 	.db #0x18	; 24
      0005ED 3C                    1764 	.db #0x3c	; 60
      0005EE 24                    1765 	.db #0x24	; 36
      0005EF 18                    1766 	.db #0x18	; 24
      0005F0 00                    1767 	.db #0x00	; 0
      0005F1 00                    1768 	.db #0x00	; 0
      0005F2 00                    1769 	.db #0x00	; 0
      0005F3 00                    1770 	.db #0x00	; 0
      0005F4 00                    1771 	.db #0x00	; 0
      0005F5 00                    1772 	.db #0x00	; 0
      0005F6 00                    1773 	.db #0x00	; 0
      0005F7 00                    1774 	.db #0x00	; 0
      0005F8 00                    1775 	.db #0x00	; 0
      0005F9 00                    1776 	.db #0x00	; 0
      0005FA 00                    1777 	.db #0x00	; 0
      0005FB 00                    1778 	.db #0x00	; 0
      0005FC 00                    1779 	.db #0x00	; 0
      0005FD 00                    1780 	.db #0x00	; 0
      0005FE 00                    1781 	.db #0x00	; 0
      0005FF 00                    1782 	.db #0x00	; 0
      000600 00                    1783 	.db #0x00	; 0
      000601 00                    1784 	.db #0x00	; 0
      000602 00                    1785 	.db #0x00	; 0
      000603 00                    1786 	.db #0x00	; 0
      000604 00                    1787 	.db #0x00	; 0
      000605 00                    1788 	.db #0x00	; 0
      000606 00                    1789 	.db #0x00	; 0
      000607 00                    1790 	.db #0x00	; 0
      000608 00                    1791 	.db #0x00	; 0
      000609 00                    1792 	.db #0x00	; 0
      00060A 00                    1793 	.db #0x00	; 0
      00060B 00                    1794 	.db #0x00	; 0
      00060C 09                    1795 	.db #0x09	; 9
      00060D 06                    1796 	.db #0x06	; 6
      00060E 06                    1797 	.db #0x06	; 6
      00060F 0F                    1798 	.db #0x0f	; 15
      000610 06                    1799 	.db #0x06	; 6
      000611 0F                    1800 	.db #0x0f	; 15
      000612 09                    1801 	.db #0x09	; 9
      000613 06                    1802 	.db #0x06	; 6
      000614 00                    1803 	.db #0x00	; 0
      000615 00                    1804 	.db #0x00	; 0
      000616 00                    1805 	.db #0x00	; 0
      000617 00                    1806 	.db #0x00	; 0
      000618 00                    1807 	.db #0x00	; 0
      000619 00                    1808 	.db #0x00	; 0
      00061A 00                    1809 	.db #0x00	; 0
      00061B 00                    1810 	.db #0x00	; 0
      00061C 00                    1811 	.db #0x00	; 0
      00061D 00                    1812 	.db #0x00	; 0
      00061E 00                    1813 	.db #0x00	; 0
      00061F 00                    1814 	.db #0x00	; 0
      000620 00                    1815 	.db #0x00	; 0
      000621 00                    1816 	.db #0x00	; 0
      000622 00                    1817 	.db #0x00	; 0
      000623 00                    1818 	.db #0x00	; 0
      000624 00                    1819 	.db #0x00	; 0
      000625 00                    1820 	.db #0x00	; 0
      000626 00                    1821 	.db #0x00	; 0
      000627 00                    1822 	.db #0x00	; 0
      000628 09                    1823 	.db #0x09	; 9
      000629 06                    1824 	.db #0x06	; 6
      00062A 06                    1825 	.db #0x06	; 6
      00062B 0F                    1826 	.db #0x0f	; 15
      00062C 06                    1827 	.db #0x06	; 6
      00062D 0F                    1828 	.db #0x0f	; 15
      00062E 09                    1829 	.db #0x09	; 9
      00062F 06                    1830 	.db #0x06	; 6
      000630 00                    1831 	.db #0x00	; 0
      000631 00                    1832 	.db #0x00	; 0
      000632 00                    1833 	.db #0x00	; 0
      000633 00                    1834 	.db #0x00	; 0
      000634 00                    1835 	.db #0x00	; 0
      000635 00                    1836 	.db #0x00	; 0
      000636 00                    1837 	.db #0x00	; 0
      000637 00                    1838 	.db #0x00	; 0
      000638 00                    1839 	.db #0x00	; 0
      000639 00                    1840 	.db #0x00	; 0
      00063A 00                    1841 	.db #0x00	; 0
      00063B 00                    1842 	.db #0x00	; 0
      00063C 00                    1843 	.db #0x00	; 0
      00063D 00                    1844 	.db #0x00	; 0
      00063E 00                    1845 	.db #0x00	; 0
      00063F 00                    1846 	.db #0x00	; 0
      000640 00                    1847 	.db #0x00	; 0
      000641 00                    1848 	.db #0x00	; 0
      000642 00                    1849 	.db #0x00	; 0
      000643 00                    1850 	.db #0x00	; 0
      000644 00                    1851 	.db #0x00	; 0
      000645 00                    1852 	.db #0x00	; 0
      000646 00                    1853 	.db #0x00	; 0
      000647 00                    1854 	.db #0x00	; 0
      000648 99                    1855 	.db #0x99	; 153
      000649 66                    1856 	.db #0x66	; 102	'f'
      00064A 66                    1857 	.db #0x66	; 102	'f'
      00064B FF                    1858 	.db #0xff	; 255
      00064C 66                    1859 	.db #0x66	; 102	'f'
      00064D FF                    1860 	.db #0xff	; 255
      00064E 99                    1861 	.db #0x99	; 153
      00064F 66                    1862 	.db #0x66	; 102	'f'
      000650 00                    1863 	.db #0x00	; 0
      000651 00                    1864 	.db #0x00	; 0
      000652 00                    1865 	.db #0x00	; 0
      000653 00                    1866 	.db #0x00	; 0
      000654 00                    1867 	.db #0x00	; 0
      000655 00                    1868 	.db #0x00	; 0
      000656 00                    1869 	.db #0x00	; 0
      000657 00                    1870 	.db #0x00	; 0
      000658 00                    1871 	.db #0x00	; 0
      000659 00                    1872 	.db #0x00	; 0
      00065A 00                    1873 	.db #0x00	; 0
      00065B 00                    1874 	.db #0x00	; 0
      00065C 00                    1875 	.db #0x00	; 0
      00065D 00                    1876 	.db #0x00	; 0
      00065E 00                    1877 	.db #0x00	; 0
      00065F 00                    1878 	.db #0x00	; 0
      000660 00                    1879 	.db #0x00	; 0
      000661 00                    1880 	.db #0x00	; 0
      000662 00                    1881 	.db #0x00	; 0
      000663 00                    1882 	.db #0x00	; 0
      000664 00                    1883 	.db #0x00	; 0
      000665 00                    1884 	.db #0x00	; 0
      000666 00                    1885 	.db #0x00	; 0
      000667 00                    1886 	.db #0x00	; 0
      000668 09                    1887 	.db #0x09	; 9
      000669 06                    1888 	.db #0x06	; 6
      00066A 06                    1889 	.db #0x06	; 6
      00066B 0F                    1890 	.db #0x0f	; 15
      00066C 06                    1891 	.db #0x06	; 6
      00066D 0F                    1892 	.db #0x0f	; 15
      00066E 09                    1893 	.db #0x09	; 9
      00066F 06                    1894 	.db #0x06	; 6
      000670 09                    1895 	.db #0x09	; 9
      000671 06                    1896 	.db #0x06	; 6
      000672 06                    1897 	.db #0x06	; 6
      000673 0F                    1898 	.db #0x0f	; 15
      000674 06                    1899 	.db #0x06	; 6
      000675 0F                    1900 	.db #0x0f	; 15
      000676 09                    1901 	.db #0x09	; 9
      000677 06                    1902 	.db #0x06	; 6
      000678 00                    1903 	.db #0x00	; 0
      000679 00                    1904 	.db #0x00	; 0
      00067A 00                    1905 	.db #0x00	; 0
      00067B 00                    1906 	.db #0x00	; 0
      00067C 00                    1907 	.db #0x00	; 0
      00067D 00                    1908 	.db #0x00	; 0
      00067E 00                    1909 	.db #0x00	; 0
      00067F 00                    1910 	.db #0x00	; 0
      000680 00                    1911 	.db #0x00	; 0
      000681 00                    1912 	.db #0x00	; 0
      000682 00                    1913 	.db #0x00	; 0
      000683 00                    1914 	.db #0x00	; 0
      000684 00                    1915 	.db #0x00	; 0
      000685 00                    1916 	.db #0x00	; 0
      000686 00                    1917 	.db #0x00	; 0
      000687 00                    1918 	.db #0x00	; 0
      000688 90                    1919 	.db #0x90	; 144
      000689 60                    1920 	.db #0x60	; 96
      00068A 60                    1921 	.db #0x60	; 96
      00068B F0                    1922 	.db #0xf0	; 240
      00068C 60                    1923 	.db #0x60	; 96
      00068D F0                    1924 	.db #0xf0	; 240
      00068E 90                    1925 	.db #0x90	; 144
      00068F 60                    1926 	.db #0x60	; 96
      000690 09                    1927 	.db #0x09	; 9
      000691 06                    1928 	.db #0x06	; 6
      000692 06                    1929 	.db #0x06	; 6
      000693 0F                    1930 	.db #0x0f	; 15
      000694 06                    1931 	.db #0x06	; 6
      000695 0F                    1932 	.db #0x0f	; 15
      000696 09                    1933 	.db #0x09	; 9
      000697 06                    1934 	.db #0x06	; 6
      000698 00                    1935 	.db #0x00	; 0
      000699 00                    1936 	.db #0x00	; 0
      00069A 00                    1937 	.db #0x00	; 0
      00069B 00                    1938 	.db #0x00	; 0
      00069C 00                    1939 	.db #0x00	; 0
      00069D 00                    1940 	.db #0x00	; 0
      00069E 00                    1941 	.db #0x00	; 0
      00069F 00                    1942 	.db #0x00	; 0
      0006A0 00                    1943 	.db #0x00	; 0
      0006A1 00                    1944 	.db #0x00	; 0
      0006A2 00                    1945 	.db #0x00	; 0
      0006A3 00                    1946 	.db #0x00	; 0
      0006A4 00                    1947 	.db #0x00	; 0
      0006A5 00                    1948 	.db #0x00	; 0
      0006A6 00                    1949 	.db #0x00	; 0
      0006A7 00                    1950 	.db #0x00	; 0
      0006A8 18                    1951 	.db #0x18	; 24
      0006A9 00                    1952 	.db #0x00	; 0
      0006AA 18                    1953 	.db #0x18	; 24
      0006AB 18                    1954 	.db #0x18	; 24
      0006AC 18                    1955 	.db #0x18	; 24
      0006AD 18                    1956 	.db #0x18	; 24
      0006AE 3C                    1957 	.db #0x3c	; 60
      0006AF 18                    1958 	.db #0x18	; 24
      0006B0 3C                    1959 	.db #0x3c	; 60
      0006B1 18                    1960 	.db #0x18	; 24
      0006B2 3C                    1961 	.db #0x3c	; 60
      0006B3 3C                    1962 	.db #0x3c	; 60
      0006B4 7E                    1963 	.db #0x7e	; 126
      0006B5 3C                    1964 	.db #0x3c	; 60
      0006B6 7E                    1965 	.db #0x7e	; 126
      0006B7 24                    1966 	.db #0x24	; 36
      0006B8 00                    1967 	.db #0x00	; 0
      0006B9 00                    1968 	.db #0x00	; 0
      0006BA 00                    1969 	.db #0x00	; 0
      0006BB 00                    1970 	.db #0x00	; 0
      0006BC 00                    1971 	.db #0x00	; 0
      0006BD 00                    1972 	.db #0x00	; 0
      0006BE 00                    1973 	.db #0x00	; 0
      0006BF 00                    1974 	.db #0x00	; 0
      0006C0 00                    1975 	.db #0x00	; 0
      0006C1 00                    1976 	.db #0x00	; 0
      0006C2 00                    1977 	.db #0x00	; 0
      0006C3 00                    1978 	.db #0x00	; 0
      0006C4 00                    1979 	.db #0x00	; 0
      0006C5 00                    1980 	.db #0x00	; 0
      0006C6 00                    1981 	.db #0x00	; 0
      0006C7 00                    1982 	.db #0x00	; 0
      0006C8 C0                    1983 	.db #0xc0	; 192
      0006C9 00                    1984 	.db #0x00	; 0
      0006CA F8                    1985 	.db #0xf8	; 248
      0006CB E0                    1986 	.db #0xe0	; 224
      0006CC FF                    1987 	.db #0xff	; 255
      0006CD 7E                    1988 	.db #0x7e	; 126
      0006CE FF                    1989 	.db #0xff	; 255
      0006CF 7E                    1990 	.db #0x7e	; 126
      0006D0 F8                    1991 	.db #0xf8	; 248
      0006D1 E0                    1992 	.db #0xe0	; 224
      0006D2 C0                    1993 	.db #0xc0	; 192
      0006D3 00                    1994 	.db #0x00	; 0
      0006D4 00                    1995 	.db #0x00	; 0
      0006D5 00                    1996 	.db #0x00	; 0
      0006D6 00                    1997 	.db #0x00	; 0
      0006D7 00                    1998 	.db #0x00	; 0
      0006D8 00                    1999 	.db #0x00	; 0
      0006D9 00                    2000 	.db #0x00	; 0
      0006DA 00                    2001 	.db #0x00	; 0
      0006DB 00                    2002 	.db #0x00	; 0
      0006DC 00                    2003 	.db #0x00	; 0
      0006DD 00                    2004 	.db #0x00	; 0
      0006DE 00                    2005 	.db #0x00	; 0
      0006DF 00                    2006 	.db #0x00	; 0
      0006E0 00                    2007 	.db #0x00	; 0
      0006E1 00                    2008 	.db #0x00	; 0
      0006E2 00                    2009 	.db #0x00	; 0
      0006E3 00                    2010 	.db #0x00	; 0
      0006E4 00                    2011 	.db #0x00	; 0
      0006E5 00                    2012 	.db #0x00	; 0
      0006E6 00                    2013 	.db #0x00	; 0
      0006E7 00                    2014 	.db #0x00	; 0
      0006E8 06                    2015 	.db #0x06	; 6
      0006E9 00                    2016 	.db #0x00	; 0
      0006EA 0F                    2017 	.db #0x0f	; 15
      0006EB 06                    2018 	.db #0x06	; 6
      0006EC 1F                    2019 	.db #0x1f	; 31
      0006ED 0E                    2020 	.db #0x0e	; 14
      0006EE 7E                    2021 	.db #0x7e	; 126
      0006EF 1C                    2022 	.db #0x1c	; 28
      0006F0 FC                    2023 	.db #0xfc	; 252
      0006F1 78                    2024 	.db #0x78	; 120	'x'
      0006F2 F8                    2025 	.db #0xf8	; 248
      0006F3 F0                    2026 	.db #0xf0	; 240
      0006F4 F8                    2027 	.db #0xf8	; 248
      0006F5 70                    2028 	.db #0x70	; 112	'p'
      0006F6 70                    2029 	.db #0x70	; 112	'p'
      0006F7 20                    2030 	.db #0x20	; 32
      0006F8 00                    2031 	.db #0x00	; 0
      0006F9 00                    2032 	.db #0x00	; 0
      0006FA 00                    2033 	.db #0x00	; 0
      0006FB 00                    2034 	.db #0x00	; 0
      0006FC 00                    2035 	.db #0x00	; 0
      0006FD 00                    2036 	.db #0x00	; 0
      0006FE 00                    2037 	.db #0x00	; 0
      0006FF 00                    2038 	.db #0x00	; 0
      000700 00                    2039 	.db #0x00	; 0
      000701 00                    2040 	.db #0x00	; 0
      000702 00                    2041 	.db #0x00	; 0
      000703 00                    2042 	.db #0x00	; 0
      000704 00                    2043 	.db #0x00	; 0
      000705 00                    2044 	.db #0x00	; 0
      000706 00                    2045 	.db #0x00	; 0
      000707 00                    2046 	.db #0x00	; 0
      000708                       2047 _upgrade:
      000708 00 00                 2048 	.dw #0x0000
      00070A 00 00                 2049 	.dw #0x0000
      00070C 00                    2050 	.db #0x00	; 0
      00070D 00                    2051 	.db #0x00	; 0
      00070E 00                    2052 	.db #0x00	; 0
      00070F 70                    2053 	.db #0x70	; 112	'p'
      000710                       2054 _ammo:
      000710 00 00                 2055 	.dw #0x0000
      000712 00 00                 2056 	.dw #0x0000
      000714 00                    2057 	.db #0x00	; 0
      000715 01                    2058 	.db #0x01	; 1
      000716 05                    2059 	.db #0x05	; 5
      000717 72                    2060 	.db #0x72	; 114	'r'
      000718                       2061 _Pickups:
      000718 FF                    2062 	.db #0xff	; 255
      000719 00                    2063 	.db #0x00	; 0
      00071A 81                    2064 	.db #0x81	; 129
      00071B 00                    2065 	.db #0x00	; 0
      00071C D7                    2066 	.db #0xd7	; 215
      00071D 56                    2067 	.db #0x56	; 86	'V'
      00071E D7                    2068 	.db #0xd7	; 215
      00071F 56                    2069 	.db #0x56	; 86	'V'
      000720 D5                    2070 	.db #0xd5	; 213
      000721 54                    2071 	.db #0x54	; 84	'T'
      000722 F5                    2072 	.db #0xf5	; 245
      000723 74                    2073 	.db #0x74	; 116	't'
      000724 81                    2074 	.db #0x81	; 129
      000725 00                    2075 	.db #0x00	; 0
      000726 FF                    2076 	.db #0xff	; 255
      000727 00                    2077 	.db #0x00	; 0
      000728 00                    2078 	.db #0x00	; 0
      000729 00                    2079 	.db #0x00	; 0
      00072A 00                    2080 	.db #0x00	; 0
      00072B 00                    2081 	.db #0x00	; 0
      00072C 00                    2082 	.db #0x00	; 0
      00072D 00                    2083 	.db #0x00	; 0
      00072E 00                    2084 	.db #0x00	; 0
      00072F 00                    2085 	.db #0x00	; 0
      000730 00                    2086 	.db #0x00	; 0
      000731 00                    2087 	.db #0x00	; 0
      000732 00                    2088 	.db #0x00	; 0
      000733 00                    2089 	.db #0x00	; 0
      000734 00                    2090 	.db #0x00	; 0
      000735 00                    2091 	.db #0x00	; 0
      000736 00                    2092 	.db #0x00	; 0
      000737 00                    2093 	.db #0x00	; 0
      000738 FF                    2094 	.db #0xff	; 255
      000739 00                    2095 	.db #0x00	; 0
      00073A 8F                    2096 	.db #0x8f	; 143
      00073B 06                    2097 	.db #0x06	; 6
      00073C 9F                    2098 	.db #0x9f	; 159
      00073D 0E                    2099 	.db #0x0e	; 14
      00073E FF                    2100 	.db #0xff	; 255
      00073F 1C                    2101 	.db #0x1c	; 28
      000740 FD                    2102 	.db #0xfd	; 253
      000741 78                    2103 	.db #0x78	; 120	'x'
      000742 F9                    2104 	.db #0xf9	; 249
      000743 70                    2105 	.db #0x70	; 112	'p'
      000744 F9                    2106 	.db #0xf9	; 249
      000745 70                    2107 	.db #0x70	; 112	'p'
      000746 FF                    2108 	.db #0xff	; 255
      000747 00                    2109 	.db #0x00	; 0
      000748 00                    2110 	.db #0x00	; 0
      000749 00                    2111 	.db #0x00	; 0
      00074A 00                    2112 	.db #0x00	; 0
      00074B 00                    2113 	.db #0x00	; 0
      00074C 00                    2114 	.db #0x00	; 0
      00074D 00                    2115 	.db #0x00	; 0
      00074E 00                    2116 	.db #0x00	; 0
      00074F 00                    2117 	.db #0x00	; 0
      000750 00                    2118 	.db #0x00	; 0
      000751 00                    2119 	.db #0x00	; 0
      000752 00                    2120 	.db #0x00	; 0
      000753 00                    2121 	.db #0x00	; 0
      000754 00                    2122 	.db #0x00	; 0
      000755 00                    2123 	.db #0x00	; 0
      000756 00                    2124 	.db #0x00	; 0
      000757 00                    2125 	.db #0x00	; 0
      000758                       2126 _Player1:
      000758 08                    2127 	.db #0x08	; 8
      000759 08                    2128 	.db #0x08	; 8
      00075A 1C                    2129 	.db #0x1c	; 28
      00075B 14                    2130 	.db #0x14	; 20
      00075C 38                    2131 	.db #0x38	; 56	'8'
      00075D 28                    2132 	.db #0x28	; 40
      00075E 68                    2133 	.db #0x68	; 104	'h'
      00075F 58                    2134 	.db #0x58	; 88	'X'
      000760 50                    2135 	.db #0x50	; 80	'P'
      000761 71                    2136 	.db #0x71	; 113	'q'
      000762 D0                    2137 	.db #0xd0	; 208
      000763 B2                    2138 	.db #0xb2	; 178
      000764 D5                    2139 	.db #0xd5	; 213
      000765 B6                    2140 	.db #0xb6	; 182
      000766 D5                    2141 	.db #0xd5	; 213
      000767 B6                    2142 	.db #0xb6	; 182
      000768 D5                    2143 	.db #0xd5	; 213
      000769 B6                    2144 	.db #0xb6	; 182
      00076A CD                    2145 	.db #0xcd	; 205
      00076B BE                    2146 	.db #0xbe	; 190
      00076C C5                    2147 	.db #0xc5	; 197
      00076D BE                    2148 	.db #0xbe	; 190
      00076E 65                    2149 	.db #0x65	; 101	'e'
      00076F 5E                    2150 	.db #0x5e	; 94
      000770 3E                    2151 	.db #0x3e	; 62
      000771 2F                    2152 	.db #0x2f	; 47
      000772 13                    2153 	.db #0x13	; 19
      000773 13                    2154 	.db #0x13	; 19
      000774 06                    2155 	.db #0x06	; 6
      000775 07                    2156 	.db #0x07	; 7
      000776 07                    2157 	.db #0x07	; 7
      000777 05                    2158 	.db #0x05	; 5
      000778 10                    2159 	.db #0x10	; 16
      000779 10                    2160 	.db #0x10	; 16
      00077A 38                    2161 	.db #0x38	; 56	'8'
      00077B 28                    2162 	.db #0x28	; 40
      00077C 1C                    2163 	.db #0x1c	; 28
      00077D 14                    2164 	.db #0x14	; 20
      00077E 16                    2165 	.db #0x16	; 22
      00077F 1A                    2166 	.db #0x1a	; 26
      000780 0A                    2167 	.db #0x0a	; 10
      000781 8E                    2168 	.db #0x8e	; 142
      000782 0B                    2169 	.db #0x0b	; 11
      000783 4D                    2170 	.db #0x4d	; 77	'M'
      000784 AB                    2171 	.db #0xab	; 171
      000785 6D                    2172 	.db #0x6d	; 109	'm'
      000786 AB                    2173 	.db #0xab	; 171
      000787 6D                    2174 	.db #0x6d	; 109	'm'
      000788 AB                    2175 	.db #0xab	; 171
      000789 6D                    2176 	.db #0x6d	; 109	'm'
      00078A B3                    2177 	.db #0xb3	; 179
      00078B 7D                    2178 	.db #0x7d	; 125
      00078C A3                    2179 	.db #0xa3	; 163
      00078D 7D                    2180 	.db #0x7d	; 125
      00078E A6                    2181 	.db #0xa6	; 166
      00078F 7A                    2182 	.db #0x7a	; 122	'z'
      000790 7C                    2183 	.db #0x7c	; 124
      000791 F4                    2184 	.db #0xf4	; 244
      000792 C8                    2185 	.db #0xc8	; 200
      000793 C8                    2186 	.db #0xc8	; 200
      000794 60                    2187 	.db #0x60	; 96
      000795 E0                    2188 	.db #0xe0	; 224
      000796 E0                    2189 	.db #0xe0	; 224
      000797 A0                    2190 	.db #0xa0	; 160
      000798 07                    2191 	.db #0x07	; 7
      000799 07                    2192 	.db #0x07	; 7
      00079A 0F                    2193 	.db #0x0f	; 15
      00079B 08                    2194 	.db #0x08	; 8
      00079C 18                    2195 	.db #0x18	; 24
      00079D 17                    2196 	.db #0x17	; 23
      00079E 31                    2197 	.db #0x31	; 49	'1'
      00079F 2F                    2198 	.db #0x2f	; 47
      0007A0 12                    2199 	.db #0x12	; 18
      0007A1 1E                    2200 	.db #0x1e	; 30
      0007A2 DF                    2201 	.db #0xdf	; 223
      0007A3 DF                    2202 	.db #0xdf	; 223
      0007A4 F0                    2203 	.db #0xf0	; 240
      0007A5 7F                    2204 	.db #0x7f	; 127
      0007A6 AF                    2205 	.db #0xaf	; 175
      0007A7 F0                    2206 	.db #0xf0	; 240
      0007A8 AF                    2207 	.db #0xaf	; 175
      0007A9 F0                    2208 	.db #0xf0	; 240
      0007AA F0                    2209 	.db #0xf0	; 240
      0007AB 7F                    2210 	.db #0x7f	; 127
      0007AC DF                    2211 	.db #0xdf	; 223
      0007AD DF                    2212 	.db #0xdf	; 223
      0007AE 12                    2213 	.db #0x12	; 18
      0007AF 1E                    2214 	.db #0x1e	; 30
      0007B0 31                    2215 	.db #0x31	; 49	'1'
      0007B1 2F                    2216 	.db #0x2f	; 47
      0007B2 18                    2217 	.db #0x18	; 24
      0007B3 17                    2218 	.db #0x17	; 23
      0007B4 0F                    2219 	.db #0x0f	; 15
      0007B5 08                    2220 	.db #0x08	; 8
      0007B6 07                    2221 	.db #0x07	; 7
      0007B7 07                    2222 	.db #0x07	; 7
      0007B8 E0                    2223 	.db #0xe0	; 224
      0007B9 E0                    2224 	.db #0xe0	; 224
      0007BA F8                    2225 	.db #0xf8	; 248
      0007BB 18                    2226 	.db #0x18	; 24
      0007BC 0C                    2227 	.db #0x0c	; 12
      0007BD F4                    2228 	.db #0xf4	; 244
      0007BE F6                    2229 	.db #0xf6	; 246
      0007BF FA                    2230 	.db #0xfa	; 250
      0007C0 0F                    2231 	.db #0x0f	; 15
      0007C1 0D                    2232 	.db #0x0d	; 13
      0007C2 C2                    2233 	.db #0xc2	; 194
      0007C3 C2                    2234 	.db #0xc2	; 194
      0007C4 00                    2235 	.db #0x00	; 0
      0007C5 E0                    2236 	.db #0xe0	; 224
      0007C6 C0                    2237 	.db #0xc0	; 192
      0007C7 10                    2238 	.db #0x10	; 16
      0007C8 C0                    2239 	.db #0xc0	; 192
      0007C9 10                    2240 	.db #0x10	; 16
      0007CA 00                    2241 	.db #0x00	; 0
      0007CB E0                    2242 	.db #0xe0	; 224
      0007CC C2                    2243 	.db #0xc2	; 194
      0007CD C2                    2244 	.db #0xc2	; 194
      0007CE 0F                    2245 	.db #0x0f	; 15
      0007CF 0D                    2246 	.db #0x0d	; 13
      0007D0 F6                    2247 	.db #0xf6	; 246
      0007D1 FA                    2248 	.db #0xfa	; 250
      0007D2 0C                    2249 	.db #0x0c	; 12
      0007D3 F4                    2250 	.db #0xf4	; 244
      0007D4 F8                    2251 	.db #0xf8	; 248
      0007D5 18                    2252 	.db #0x18	; 24
      0007D6 E0                    2253 	.db #0xe0	; 224
      0007D7 E0                    2254 	.db #0xe0	; 224
      0007D8 07                    2255 	.db #0x07	; 7
      0007D9 07                    2256 	.db #0x07	; 7
      0007DA 1B                    2257 	.db #0x1b	; 27
      0007DB 1C                    2258 	.db #0x1c	; 28
      0007DC 38                    2259 	.db #0x38	; 56	'8'
      0007DD 27                    2260 	.db #0x27	; 39
      0007DE 60                    2261 	.db #0x60	; 96
      0007DF 5E                    2262 	.db #0x5e	; 94
      0007E0 60                    2263 	.db #0x60	; 96
      0007E1 5C                    2264 	.db #0x5c	; 92
      0007E2 41                    2265 	.db #0x41	; 65	'A'
      0007E3 79                    2266 	.db #0x79	; 121	'y'
      0007E4 C4                    2267 	.db #0xc4	; 196
      0007E5 B7                    2268 	.db #0xb7	; 183
      0007E6 99                    2269 	.db #0x99	; 153
      0007E7 FE                    2270 	.db #0xfe	; 254
      0007E8 B3                    2271 	.db #0xb3	; 179
      0007E9 EC                    2272 	.db #0xec	; 236
      0007EA 67                    2273 	.db #0x67	; 103	'g'
      0007EB 58                    2274 	.db #0x58	; 88	'X'
      0007EC 2E                    2275 	.db #0x2e	; 46
      0007ED 31                    2276 	.db #0x31	; 49	'1'
      0007EE 5C                    2277 	.db #0x5c	; 92
      0007EF 73                    2278 	.db #0x73	; 115	's'
      0007F0 69                    2279 	.db #0x69	; 105	'i'
      0007F1 5E                    2280 	.db #0x5e	; 94
      0007F2 37                    2281 	.db #0x37	; 55	'7'
      0007F3 2D                    2282 	.db #0x2d	; 45
      0007F4 1A                    2283 	.db #0x1a	; 26
      0007F5 1B                    2284 	.db #0x1b	; 27
      0007F6 01                    2285 	.db #0x01	; 1
      0007F7 01                    2286 	.db #0x01	; 1
      0007F8 E0                    2287 	.db #0xe0	; 224
      0007F9 E0                    2288 	.db #0xe0	; 224
      0007FA 90                    2289 	.db #0x90	; 144
      0007FB 70                    2290 	.db #0x70	; 112	'p'
      0007FC C0                    2291 	.db #0xc0	; 192
      0007FD C0                    2292 	.db #0xc0	; 192
      0007FE 00                    2293 	.db #0x00	; 0
      0007FF 00                    2294 	.db #0x00	; 0
      000800 02                    2295 	.db #0x02	; 2
      000801 02                    2296 	.db #0x02	; 2
      000802 C1                    2297 	.db #0xc1	; 193
      000803 C3                    2298 	.db #0xc3	; 195
      000804 65                    2299 	.db #0x65	; 101	'e'
      000805 A7                    2300 	.db #0xa7	; 167
      000806 A7                    2301 	.db #0xa7	; 167
      000807 65                    2302 	.db #0x65	; 101	'e'
      000808 A3                    2303 	.db #0xa3	; 163
      000809 65                    2304 	.db #0x65	; 101	'e'
      00080A 03                    2305 	.db #0x03	; 3
      00080B CD                    2306 	.db #0xcd	; 205
      00080C 41                    2307 	.db #0x41	; 65	'A'
      00080D DF                    2308 	.db #0xdf	; 223
      00080E 86                    2309 	.db #0x86	; 134
      00080F BA                    2310 	.db #0xba	; 186
      000810 86                    2311 	.db #0x86	; 134
      000811 FA                    2312 	.db #0xfa	; 250
      000812 1C                    2313 	.db #0x1c	; 28
      000813 E4                    2314 	.db #0xe4	; 228
      000814 78                    2315 	.db #0x78	; 120	'x'
      000815 B8                    2316 	.db #0xb8	; 184
      000816 C0                    2317 	.db #0xc0	; 192
      000817 C0                    2318 	.db #0xc0	; 192
      000818 00                    2319 	.db #0x00	; 0
      000819 00                    2320 	.db #0x00	; 0
      00081A 00                    2321 	.db #0x00	; 0
      00081B 00                    2322 	.db #0x00	; 0
      00081C 00                    2323 	.db #0x00	; 0
      00081D 00                    2324 	.db #0x00	; 0
      00081E 00                    2325 	.db #0x00	; 0
      00081F 00                    2326 	.db #0x00	; 0
      000820 00                    2327 	.db #0x00	; 0
      000821 00                    2328 	.db #0x00	; 0
      000822 00                    2329 	.db #0x00	; 0
      000823 00                    2330 	.db #0x00	; 0
      000824 00                    2331 	.db #0x00	; 0
      000825 00                    2332 	.db #0x00	; 0
      000826 00                    2333 	.db #0x00	; 0
      000827 00                    2334 	.db #0x00	; 0
      000828 00                    2335 	.db #0x00	; 0
      000829 00                    2336 	.db #0x00	; 0
      00082A 00                    2337 	.db #0x00	; 0
      00082B 00                    2338 	.db #0x00	; 0
      00082C 00                    2339 	.db #0x00	; 0
      00082D 00                    2340 	.db #0x00	; 0
      00082E 00                    2341 	.db #0x00	; 0
      00082F 00                    2342 	.db #0x00	; 0
      000830 00                    2343 	.db #0x00	; 0
      000831 00                    2344 	.db #0x00	; 0
      000832 00                    2345 	.db #0x00	; 0
      000833 00                    2346 	.db #0x00	; 0
      000834 00                    2347 	.db #0x00	; 0
      000835 00                    2348 	.db #0x00	; 0
      000836 00                    2349 	.db #0x00	; 0
      000837 00                    2350 	.db #0x00	; 0
      000838 00                    2351 	.db #0x00	; 0
      000839 00                    2352 	.db #0x00	; 0
      00083A 00                    2353 	.db #0x00	; 0
      00083B 00                    2354 	.db #0x00	; 0
      00083C 00                    2355 	.db #0x00	; 0
      00083D 00                    2356 	.db #0x00	; 0
      00083E 00                    2357 	.db #0x00	; 0
      00083F 00                    2358 	.db #0x00	; 0
      000840 00                    2359 	.db #0x00	; 0
      000841 00                    2360 	.db #0x00	; 0
      000842 00                    2361 	.db #0x00	; 0
      000843 00                    2362 	.db #0x00	; 0
      000844 00                    2363 	.db #0x00	; 0
      000845 00                    2364 	.db #0x00	; 0
      000846 00                    2365 	.db #0x00	; 0
      000847 00                    2366 	.db #0x00	; 0
      000848 00                    2367 	.db #0x00	; 0
      000849 00                    2368 	.db #0x00	; 0
      00084A 00                    2369 	.db #0x00	; 0
      00084B 00                    2370 	.db #0x00	; 0
      00084C 00                    2371 	.db #0x00	; 0
      00084D 00                    2372 	.db #0x00	; 0
      00084E 00                    2373 	.db #0x00	; 0
      00084F 00                    2374 	.db #0x00	; 0
      000850 00                    2375 	.db #0x00	; 0
      000851 00                    2376 	.db #0x00	; 0
      000852 00                    2377 	.db #0x00	; 0
      000853 00                    2378 	.db #0x00	; 0
      000854 00                    2379 	.db #0x00	; 0
      000855 00                    2380 	.db #0x00	; 0
      000856 00                    2381 	.db #0x00	; 0
      000857 00                    2382 	.db #0x00	; 0
      000858                       2383 _BLANKSIZE:
      000858 03                    2384 	.db #0x03	; 3
      000859                       2385 _BLANK:
      000859 26                    2386 	.db #0x26	; 38
      00085A 2B                    2387 	.db #0x2b	; 43
      00085B 2C                    2388 	.db #0x2c	; 44
      00085C                       2389 _EMPTYSPRITE:
      00085C 50                    2390 	.db #0x50	; 80	'P'
      00085D                       2391 _ENEMYCOUNT:
      00085D 05                    2392 	.db #0x05	; 5
      00085E                       2393 _xSpawnPositions:
      00085E 00                    2394 	.db #0x00	; 0
      00085F 60                    2395 	.db #0x60	; 96
      000860 B0                    2396 	.db #0xb0	; 176
      000861 00                    2397 	.db #0x00	; 0
      000862 B0                    2398 	.db #0xb0	; 176
      000863 00                    2399 	.db #0x00	; 0
      000864 60                    2400 	.db #0x60	; 96
      000865 B0                    2401 	.db #0xb0	; 176
      000866                       2402 _ySpawnPositions:
      000866 00                    2403 	.db #0x00	; 0
      000867 00                    2404 	.db #0x00	; 0
      000868 00                    2405 	.db #0x00	; 0
      000869 5C                    2406 	.db #0x5c	; 92
      00086A 5C                    2407 	.db #0x5c	; 92
      00086B A0                    2408 	.db #0xa0	; 160
      00086C A0                    2409 	.db #0xa0	; 160
      00086D A0                    2410 	.db #0xa0	; 160
      00086E                       2411 _PROJECTILECOUNT:
      00086E 05                    2412 	.db #0x05	; 5
      00086F                       2413 _PLAYERSIZE:
      00086F 10                    2414 	.db #0x10	; 16
      000870                       2415 _maxHull:
      000870 64                    2416 	.db #0x64	;  100	'd'
      000871                       2417 _maxShield:
      000871 64                    2418 	.db #0x64	;  100	'd'
      000872                       2419 _MAXGUNLEVEL:
      000872 01                    2420 	.db #0x01	; 1
                                   2421 ;src/main.c:119: void setHealthBar(uint8_t row, uint8_t hp) {
                                   2422 ;	---------------------------------
                                   2423 ; Function setHealthBar
                                   2424 ; ---------------------------------
      000873                       2425 _setHealthBar::
      000873 E8 FB                 2426 	add	sp, #-5
                                   2427 ;src/main.c:121: if (hp >= 80) {
      000875 F8 08                 2428 	ldhl	sp,	#8
      000877 7E                    2429 	ld	a, (hl)
      000878 D6 50                 2430 	sub	a, #0x50
      00087A 38 31                 2431 	jr	C, 00102$
                                   2432 ;src/main.c:122: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x50};
      00087C F8 00                 2433 	ldhl	sp,	#0
      00087E 4D                    2434 	ld	c, l
      00087F 44                    2435 	ld	b, h
      000880 36 50                 2436 	ld	(hl), #0x50
      000882 69                    2437 	ld	l, c
                                   2438 ;	spillPairReg hl
                                   2439 ;	spillPairReg hl
      000883 60                    2440 	ld	h, b
                                   2441 ;	spillPairReg hl
                                   2442 ;	spillPairReg hl
      000884 23                    2443 	inc	hl
      000885 36 50                 2444 	ld	(hl), #0x50
      000887 69                    2445 	ld	l, c
                                   2446 ;	spillPairReg hl
                                   2447 ;	spillPairReg hl
      000888 60                    2448 	ld	h, b
                                   2449 ;	spillPairReg hl
                                   2450 ;	spillPairReg hl
      000889 23                    2451 	inc	hl
      00088A 23                    2452 	inc	hl
      00088B 36 50                 2453 	ld	(hl), #0x50
      00088D 69                    2454 	ld	l, c
                                   2455 ;	spillPairReg hl
                                   2456 ;	spillPairReg hl
      00088E 60                    2457 	ld	h, b
                                   2458 ;	spillPairReg hl
                                   2459 ;	spillPairReg hl
      00088F 23                    2460 	inc	hl
      000890 23                    2461 	inc	hl
      000891 23                    2462 	inc	hl
      000892 36 50                 2463 	ld	(hl), #0x50
      000894 21 04 00              2464 	ld	hl, #0x0004
      000897 09                    2465 	add	hl, bc
      000898 36 50                 2466 	ld	(hl), #0x50
                                   2467 ;src/main.c:123: set_win_tiles(5,row,5,1,blockmap);
      00089A C5                    2468 	push	bc
      00089B 21 05 01              2469 	ld	hl, #0x105
      00089E E5                    2470 	push	hl
      00089F F8 0B                 2471 	ldhl	sp,	#11
      0008A1 66                    2472 	ld	h, (hl)
      0008A2 2E 05                 2473 	ld	l, #0x05
      0008A4 E5                    2474 	push	hl
      0008A5 CDr00r00              2475 	call	_set_win_tiles
      0008A8 E8 06                 2476 	add	sp, #6
                                   2477 ;src/main.c:124: return;
      0008AA C3r81r09              2478 	jp	00109$
      0008AD                       2479 00102$:
                                   2480 ;src/main.c:126: if (hp >= 60) {
      0008AD F8 08                 2481 	ldhl	sp,	#8
      0008AF 7E                    2482 	ld	a, (hl)
      0008B0 D6 3C                 2483 	sub	a, #0x3c
      0008B2 38 31                 2484 	jr	C, 00104$
                                   2485 ;src/main.c:127: unsigned char blockmap[] = {0x50,0x50,0x50,0x50,0x00};
      0008B4 F8 00                 2486 	ldhl	sp,	#0
      0008B6 4D                    2487 	ld	c, l
      0008B7 44                    2488 	ld	b, h
      0008B8 36 50                 2489 	ld	(hl), #0x50
      0008BA 69                    2490 	ld	l, c
                                   2491 ;	spillPairReg hl
                                   2492 ;	spillPairReg hl
      0008BB 60                    2493 	ld	h, b
                                   2494 ;	spillPairReg hl
                                   2495 ;	spillPairReg hl
      0008BC 23                    2496 	inc	hl
      0008BD 36 50                 2497 	ld	(hl), #0x50
      0008BF 69                    2498 	ld	l, c
                                   2499 ;	spillPairReg hl
                                   2500 ;	spillPairReg hl
      0008C0 60                    2501 	ld	h, b
                                   2502 ;	spillPairReg hl
                                   2503 ;	spillPairReg hl
      0008C1 23                    2504 	inc	hl
      0008C2 23                    2505 	inc	hl
      0008C3 36 50                 2506 	ld	(hl), #0x50
      0008C5 69                    2507 	ld	l, c
                                   2508 ;	spillPairReg hl
                                   2509 ;	spillPairReg hl
      0008C6 60                    2510 	ld	h, b
                                   2511 ;	spillPairReg hl
                                   2512 ;	spillPairReg hl
      0008C7 23                    2513 	inc	hl
      0008C8 23                    2514 	inc	hl
      0008C9 23                    2515 	inc	hl
      0008CA 36 50                 2516 	ld	(hl), #0x50
      0008CC 21 04 00              2517 	ld	hl, #0x0004
      0008CF 09                    2518 	add	hl, bc
      0008D0 36 00                 2519 	ld	(hl), #0x00
                                   2520 ;src/main.c:128: set_win_tiles(5,row,5,1,blockmap);
      0008D2 C5                    2521 	push	bc
      0008D3 21 05 01              2522 	ld	hl, #0x105
      0008D6 E5                    2523 	push	hl
      0008D7 F8 0B                 2524 	ldhl	sp,	#11
      0008D9 66                    2525 	ld	h, (hl)
      0008DA 2E 05                 2526 	ld	l, #0x05
      0008DC E5                    2527 	push	hl
      0008DD CDr00r00              2528 	call	_set_win_tiles
      0008E0 E8 06                 2529 	add	sp, #6
                                   2530 ;src/main.c:129: return;
      0008E2 C3r81r09              2531 	jp	00109$
      0008E5                       2532 00104$:
                                   2533 ;src/main.c:131: if (hp >= 40) {
      0008E5 F8 08                 2534 	ldhl	sp,	#8
      0008E7 7E                    2535 	ld	a, (hl)
      0008E8 D6 28                 2536 	sub	a, #0x28
      0008EA 38 30                 2537 	jr	C, 00106$
                                   2538 ;src/main.c:132: unsigned char blockmap[] = {0x50,0x50,0x50,0x00,0x00};
      0008EC F8 00                 2539 	ldhl	sp,	#0
      0008EE 4D                    2540 	ld	c, l
      0008EF 44                    2541 	ld	b, h
      0008F0 36 50                 2542 	ld	(hl), #0x50
      0008F2 69                    2543 	ld	l, c
                                   2544 ;	spillPairReg hl
                                   2545 ;	spillPairReg hl
      0008F3 60                    2546 	ld	h, b
                                   2547 ;	spillPairReg hl
                                   2548 ;	spillPairReg hl
      0008F4 23                    2549 	inc	hl
      0008F5 36 50                 2550 	ld	(hl), #0x50
      0008F7 69                    2551 	ld	l, c
                                   2552 ;	spillPairReg hl
                                   2553 ;	spillPairReg hl
      0008F8 60                    2554 	ld	h, b
                                   2555 ;	spillPairReg hl
                                   2556 ;	spillPairReg hl
      0008F9 23                    2557 	inc	hl
      0008FA 23                    2558 	inc	hl
      0008FB 36 50                 2559 	ld	(hl), #0x50
      0008FD 59                    2560 	ld	e, c
      0008FE 50                    2561 	ld	d, b
      0008FF 13                    2562 	inc	de
      000900 13                    2563 	inc	de
      000901 13                    2564 	inc	de
      000902 AF                    2565 	xor	a, a
      000903 12                    2566 	ld	(de), a
      000904 21 04 00              2567 	ld	hl, #0x0004
      000907 09                    2568 	add	hl, bc
      000908 36 00                 2569 	ld	(hl), #0x00
                                   2570 ;src/main.c:133: set_win_tiles(5,row,5,1,blockmap);
      00090A C5                    2571 	push	bc
      00090B 21 05 01              2572 	ld	hl, #0x105
      00090E E5                    2573 	push	hl
      00090F F8 0B                 2574 	ldhl	sp,	#11
      000911 66                    2575 	ld	h, (hl)
      000912 2E 05                 2576 	ld	l, #0x05
      000914 E5                    2577 	push	hl
      000915 CDr00r00              2578 	call	_set_win_tiles
      000918 E8 06                 2579 	add	sp, #6
                                   2580 ;src/main.c:134: return;
      00091A 18 65                 2581 	jr	00109$
      00091C                       2582 00106$:
                                   2583 ;src/main.c:136: if (hp >= 20) {
      00091C F8 08                 2584 	ldhl	sp,	#8
      00091E 7E                    2585 	ld	a, (hl)
      00091F D6 14                 2586 	sub	a, #0x14
      000921 38 30                 2587 	jr	C, 00108$
                                   2588 ;src/main.c:137: unsigned char blockmap[] = {0x50,0x50,0x00,0x00,0x00};
      000923 F8 00                 2589 	ldhl	sp,	#0
      000925 4D                    2590 	ld	c, l
      000926 44                    2591 	ld	b, h
      000927 36 50                 2592 	ld	(hl), #0x50
      000929 69                    2593 	ld	l, c
                                   2594 ;	spillPairReg hl
                                   2595 ;	spillPairReg hl
      00092A 60                    2596 	ld	h, b
                                   2597 ;	spillPairReg hl
                                   2598 ;	spillPairReg hl
      00092B 23                    2599 	inc	hl
      00092C 36 50                 2600 	ld	(hl), #0x50
      00092E 59                    2601 	ld	e, c
      00092F 50                    2602 	ld	d, b
      000930 13                    2603 	inc	de
      000931 13                    2604 	inc	de
      000932 AF                    2605 	xor	a, a
      000933 12                    2606 	ld	(de), a
      000934 59                    2607 	ld	e, c
      000935 50                    2608 	ld	d, b
      000936 13                    2609 	inc	de
      000937 13                    2610 	inc	de
      000938 13                    2611 	inc	de
      000939 AF                    2612 	xor	a, a
      00093A 12                    2613 	ld	(de), a
      00093B 21 04 00              2614 	ld	hl, #0x0004
      00093E 09                    2615 	add	hl, bc
      00093F 36 00                 2616 	ld	(hl), #0x00
                                   2617 ;src/main.c:138: set_win_tiles(5,row,5,1,blockmap);
      000941 C5                    2618 	push	bc
      000942 21 05 01              2619 	ld	hl, #0x105
      000945 E5                    2620 	push	hl
      000946 F8 0B                 2621 	ldhl	sp,	#11
      000948 66                    2622 	ld	h, (hl)
      000949 2E 05                 2623 	ld	l, #0x05
      00094B E5                    2624 	push	hl
      00094C CDr00r00              2625 	call	_set_win_tiles
      00094F E8 06                 2626 	add	sp, #6
                                   2627 ;src/main.c:139: return;
      000951 18 2E                 2628 	jr	00109$
      000953                       2629 00108$:
                                   2630 ;src/main.c:141: unsigned char blockmap[] = {0x50,0x00,0x00,0x00,0x00};
      000953 F8 00                 2631 	ldhl	sp,	#0
      000955 4D                    2632 	ld	c, l
      000956 44                    2633 	ld	b, h
      000957 36 50                 2634 	ld	(hl), #0x50
      000959 59                    2635 	ld	e, c
      00095A 50                    2636 	ld	d, b
      00095B 13                    2637 	inc	de
      00095C AF                    2638 	xor	a, a
      00095D 12                    2639 	ld	(de), a
      00095E 59                    2640 	ld	e, c
      00095F 50                    2641 	ld	d, b
      000960 13                    2642 	inc	de
      000961 13                    2643 	inc	de
      000962 AF                    2644 	xor	a, a
      000963 12                    2645 	ld	(de), a
      000964 59                    2646 	ld	e, c
      000965 50                    2647 	ld	d, b
      000966 13                    2648 	inc	de
      000967 13                    2649 	inc	de
      000968 13                    2650 	inc	de
      000969 AF                    2651 	xor	a, a
      00096A 12                    2652 	ld	(de), a
      00096B 21 04 00              2653 	ld	hl, #0x0004
      00096E 09                    2654 	add	hl, bc
      00096F 36 00                 2655 	ld	(hl), #0x00
                                   2656 ;src/main.c:142: set_win_tiles(5,row,5,1,blockmap);
      000971 C5                    2657 	push	bc
      000972 21 05 01              2658 	ld	hl, #0x105
      000975 E5                    2659 	push	hl
      000976 F8 0B                 2660 	ldhl	sp,	#11
      000978 66                    2661 	ld	h, (hl)
      000979 2E 05                 2662 	ld	l, #0x05
      00097B E5                    2663 	push	hl
      00097C CDr00r00              2664 	call	_set_win_tiles
      00097F E8 06                 2665 	add	sp, #6
                                   2666 ;src/main.c:143: return;
      000981                       2667 00109$:
                                   2668 ;src/main.c:145: }
      000981 E8 05                 2669 	add	sp, #5
      000983 C9                    2670 	ret
                                   2671 ;src/main.c:147: void updateScore() {
                                   2672 ;	---------------------------------
                                   2673 ; Function updateScore
                                   2674 ; ---------------------------------
      000984                       2675 _updateScore::
      000984 E8 F6                 2676 	add	sp, #-10
                                   2677 ;src/main.c:151: len = bcd2text(&SCORE, 0x01, buf);
      000986 F8 00                 2678 	ldhl	sp,	#0
      000988 4D                    2679 	ld	c, l
      000989 44                    2680 	ld	b, h
      00098A 59                    2681 	ld	e, c
      00098B 50                    2682 	ld	d, b
      00098C C5                    2683 	push	bc
      00098D D5                    2684 	push	de
      00098E 3E 01                 2685 	ld	a, #0x01
      000990 F5                    2686 	push	af
      000991 33                    2687 	inc	sp
      000992 11rA6r00              2688 	ld	de, #_SCORE
      000995 D5                    2689 	push	de
      000996 CDr00r00              2690 	call	_bcd2text
      000999 E8 05                 2691 	add	sp, #5
      00099B C1                    2692 	pop	bc
                                   2693 ;src/main.c:152: set_win_tiles(15, 1, 5, 1, buf+3);
      00099C 03                    2694 	inc	bc
      00099D 03                    2695 	inc	bc
      00099E 03                    2696 	inc	bc
      00099F C5                    2697 	push	bc
      0009A0 21 05 01              2698 	ld	hl, #0x105
      0009A3 E5                    2699 	push	hl
      0009A4 21 0F 01              2700 	ld	hl, #0x10f
      0009A7 E5                    2701 	push	hl
      0009A8 CDr00r00              2702 	call	_set_win_tiles
                                   2703 ;src/main.c:153: }
      0009AB E8 10                 2704 	add	sp, #16
      0009AD C9                    2705 	ret
                                   2706 ;src/main.c:155: void updateMissileCount(int8_t amount) {
                                   2707 ;	---------------------------------
                                   2708 ; Function updateMissileCount
                                   2709 ; ---------------------------------
      0009AE                       2710 _updateMissileCount::
      0009AE E8 F3                 2711 	add	sp, #-13
                                   2712 ;src/main.c:156: if (amount == -1) {
      0009B0 F8 0F                 2713 	ldhl	sp,	#15
      0009B2 7E                    2714 	ld	a, (hl)
      0009B3 3C                    2715 	inc	a
      0009B4 20 13                 2716 	jr	NZ, 00112$
                                   2717 ;src/main.c:157: missiles--;
      0009B6 21r9Br00              2718 	ld	hl, #_missiles
      0009B9 35                    2719 	dec	(hl)
                                   2720 ;src/main.c:158: bcd_sub(&MISSILES, &INCREMENT);
      0009BA 11rAAr00              2721 	ld	de, #_INCREMENT
      0009BD D5                    2722 	push	de
      0009BE 11r9Cr00              2723 	ld	de, #_MISSILES
      0009C1 D5                    2724 	push	de
      0009C2 CDr00r00              2725 	call	_bcd_sub
      0009C5 E8 04                 2726 	add	sp, #4
      0009C7 18 41                 2727 	jr	00104$
                                   2728 ;src/main.c:161: for(uint8_t i=0; i<amount;i++) {
      0009C9                       2729 00112$:
      0009C9 F8 0C                 2730 	ldhl	sp,	#12
      0009CB 36 00                 2731 	ld	(hl), #0x00
      0009CD                       2732 00106$:
      0009CD F8 0C                 2733 	ldhl	sp,	#12
      0009CF 4E                    2734 	ld	c, (hl)
      0009D0 06 00                 2735 	ld	b, #0x00
      0009D2 F8 0F                 2736 	ldhl	sp,	#15
      0009D4 7E                    2737 	ld	a, (hl)
      0009D5 F8 0A                 2738 	ldhl	sp,	#10
      0009D7 22                    2739 	ld	(hl+), a
      0009D8 07                    2740 	rlca
      0009D9 9F                    2741 	sbc	a, a
      0009DA 32                    2742 	ld	(hl-), a
      0009DB 79                    2743 	ld	a, c
      0009DC 96                    2744 	sub	a, (hl)
      0009DD 23                    2745 	inc	hl
      0009DE 78                    2746 	ld	a, b
      0009DF 9E                    2747 	sbc	a, (hl)
      0009E0 78                    2748 	ld	a, b
      0009E1 57                    2749 	ld	d, a
      0009E2 CB 7E                 2750 	bit	7, (hl)
      0009E4 28 07                 2751 	jr	Z, 00128$
      0009E6 CB 7A                 2752 	bit	7, d
      0009E8 20 08                 2753 	jr	NZ, 00129$
      0009EA BF                    2754 	cp	a, a
      0009EB 18 05                 2755 	jr	00129$
      0009ED                       2756 00128$:
      0009ED CB 7A                 2757 	bit	7, d
      0009EF 28 01                 2758 	jr	Z, 00129$
      0009F1 37                    2759 	scf
      0009F2                       2760 00129$:
      0009F2 30 16                 2761 	jr	NC, 00104$
                                   2762 ;src/main.c:162: ++missiles;
      0009F4 21r9Br00              2763 	ld	hl, #_missiles
      0009F7 34                    2764 	inc	(hl)
                                   2765 ;src/main.c:163: bcd_add(&MISSILES, &INCREMENT);
      0009F8 11rAAr00              2766 	ld	de, #_INCREMENT
      0009FB D5                    2767 	push	de
      0009FC 11r9Cr00              2768 	ld	de, #_MISSILES
      0009FF D5                    2769 	push	de
      000A00 CDr00r00              2770 	call	_bcd_add
      000A03 E8 04                 2771 	add	sp, #4
                                   2772 ;src/main.c:161: for(uint8_t i=0; i<amount;i++) {
      000A05 F8 0C                 2773 	ldhl	sp,	#12
      000A07 34                    2774 	inc	(hl)
      000A08 18 C3                 2775 	jr	00106$
      000A0A                       2776 00104$:
                                   2777 ;src/main.c:168: len = bcd2text(&MISSILES, 0x01, buf);
      000A0A F8 00                 2778 	ldhl	sp,	#0
      000A0C 4D                    2779 	ld	c, l
      000A0D 44                    2780 	ld	b, h
      000A0E 59                    2781 	ld	e, c
      000A0F 50                    2782 	ld	d, b
      000A10 C5                    2783 	push	bc
      000A11 D5                    2784 	push	de
      000A12 3E 01                 2785 	ld	a, #0x01
      000A14 F5                    2786 	push	af
      000A15 33                    2787 	inc	sp
      000A16 11r9Cr00              2788 	ld	de, #_MISSILES
      000A19 D5                    2789 	push	de
      000A1A CDr00r00              2790 	call	_bcd2text
      000A1D E8 05                 2791 	add	sp, #5
      000A1F C1                    2792 	pop	bc
                                   2793 ;src/main.c:169: set_win_tiles(18, 0, 2, 1, buf+6);
      000A20 21 06 00              2794 	ld	hl, #0x0006
      000A23 09                    2795 	add	hl, bc
      000A24 E5                    2796 	push	hl
      000A25 21 02 01              2797 	ld	hl, #0x102
      000A28 E5                    2798 	push	hl
      000A29 21 12 00              2799 	ld	hl, #0x12
      000A2C E5                    2800 	push	hl
      000A2D CDr00r00              2801 	call	_set_win_tiles
                                   2802 ;src/main.c:171: }
      000A30 E8 13                 2803 	add	sp, #19
      000A32 C9                    2804 	ret
                                   2805 ;src/main.c:173: void incrementScore() {
                                   2806 ;	---------------------------------
                                   2807 ; Function incrementScore
                                   2808 ; ---------------------------------
      000A33                       2809 _incrementScore::
                                   2810 ;src/main.c:174: score += 1;
      000A33 21rA4r00              2811 	ld	hl, #_score
      000A36 2A                    2812 	ld	a, (hl+)
      000A37 4F                    2813 	ld	c, a
      000A38 3A                    2814 	ld	a, (hl-)
      000A39 47                    2815 	ld	b, a
      000A3A 03                    2816 	inc	bc
      000A3B 79                    2817 	ld	a, c
      000A3C 22                    2818 	ld	(hl+), a
      000A3D 70                    2819 	ld	(hl), b
                                   2820 ;src/main.c:175: bcd_add(&SCORE, &INCREMENT);
      000A3E 11rAAr00              2821 	ld	de, #_INCREMENT
      000A41 D5                    2822 	push	de
      000A42 11rA6r00              2823 	ld	de, #_SCORE
      000A45 D5                    2824 	push	de
      000A46 CDr00r00              2825 	call	_bcd_add
      000A49 E8 04                 2826 	add	sp, #4
                                   2827 ;src/main.c:176: }
      000A4B C9                    2828 	ret
                                   2829 ;src/main.c:178: void updateDirection() {
                                   2830 ;	---------------------------------
                                   2831 ; Function updateDirection
                                   2832 ; ---------------------------------
      000A4C                       2833 _updateDirection::
      000A4C E8 FC                 2834 	add	sp, #-4
                                   2835 ;src/main.c:182: if ((joydata & J_RIGHT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A4E 21rDCr00              2836 	ld	hl, #_joydata
      000A51 5E                    2837 	ld	e, (hl)
      000A52 7B                    2838 	ld	a, e
      000A53 E6 01                 2839 	and	a, #0x01
      000A55 F8 00                 2840 	ldhl	sp,	#0
      000A57 22                    2841 	ld	(hl+), a
      000A58 AF                    2842 	xor	a, a
      000A59 22                    2843 	ld	(hl+), a
      000A5A 7B                    2844 	ld	a, e
      000A5B E6 04                 2845 	and	a, #0x04
      000A5D 22                    2846 	ld	(hl+), a
      000A5E AF                    2847 	xor	a, a
      000A5F 32                    2848 	ld	(hl-), a
      000A60 2B                    2849 	dec	hl
      000A61 7B                    2850 	ld	a, e
      000A62 E6 08                 2851 	and	a, #0x08
      000A64 4F                    2852 	ld	c, a
      000A65 06 00                 2853 	ld	b, #0x00
      000A67 3A                    2854 	ld	a, (hl-)
      000A68 B6                    2855 	or	a, (hl)
      000A69 28 14                 2856 	jr	Z, 00102$
      000A6B F8 03                 2857 	ldhl	sp,	#3
      000A6D 3A                    2858 	ld	a, (hl-)
      000A6E B6                    2859 	or	a, (hl)
      000A6F 20 0E                 2860 	jr	NZ, 00102$
      000A71 78                    2861 	ld	a, b
      000A72 B1                    2862 	or	a, c
      000A73 20 0A                 2863 	jr	NZ, 00102$
                                   2864 ;src/main.c:183: xDir = 1;
      000A75 21r86r00              2865 	ld	hl, #_xDir
      000A78 36 01                 2866 	ld	(hl), #0x01
                                   2867 ;src/main.c:184: yDir = 0;
      000A7A 21r87r00              2868 	ld	hl, #_yDir
      000A7D 36 00                 2869 	ld	(hl), #0x00
      000A7F                       2870 00102$:
                                   2871 ;src/main.c:186: if ((joydata & J_LEFT) && !(joydata & J_UP) && !(joydata & J_DOWN)) {
      000A7F 7B                    2872 	ld	a, e
      000A80 E6 02                 2873 	and	a, #0x02
      000A82 5F                    2874 	ld	e, a
      000A83 16 00                 2875 	ld	d, #0x00
      000A85 7A                    2876 	ld	a, d
      000A86 B3                    2877 	or	a, e
      000A87 28 14                 2878 	jr	Z, 00106$
      000A89 F8 03                 2879 	ldhl	sp,	#3
      000A8B 3A                    2880 	ld	a, (hl-)
      000A8C B6                    2881 	or	a, (hl)
      000A8D 20 0E                 2882 	jr	NZ, 00106$
      000A8F 78                    2883 	ld	a, b
      000A90 B1                    2884 	or	a, c
      000A91 20 0A                 2885 	jr	NZ, 00106$
                                   2886 ;src/main.c:187: xDir = -1;
      000A93 21r86r00              2887 	ld	hl, #_xDir
      000A96 36 FF                 2888 	ld	(hl), #0xff
                                   2889 ;src/main.c:188: yDir = 0;
      000A98 21r87r00              2890 	ld	hl, #_yDir
      000A9B 36 00                 2891 	ld	(hl), #0x00
      000A9D                       2892 00106$:
                                   2893 ;src/main.c:190: if ((joydata & J_UP) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000A9D F8 03                 2894 	ldhl	sp,	#3
      000A9F 3A                    2895 	ld	a, (hl-)
      000AA0 B6                    2896 	or	a, (hl)
      000AA1 28 13                 2897 	jr	Z, 00110$
      000AA3 7A                    2898 	ld	a, d
      000AA4 B3                    2899 	or	a, e
      000AA5 20 0F                 2900 	jr	NZ, 00110$
      000AA7 2B                    2901 	dec	hl
      000AA8 3A                    2902 	ld	a, (hl-)
      000AA9 B6                    2903 	or	a, (hl)
      000AAA 20 0A                 2904 	jr	NZ, 00110$
                                   2905 ;src/main.c:191: xDir = 0;
      000AAC 21r86r00              2906 	ld	hl, #_xDir
      000AAF 36 00                 2907 	ld	(hl), #0x00
                                   2908 ;src/main.c:192: yDir = -1;
      000AB1 21r87r00              2909 	ld	hl, #_yDir
      000AB4 36 FF                 2910 	ld	(hl), #0xff
      000AB6                       2911 00110$:
                                   2912 ;src/main.c:194: if ((joydata & J_DOWN) && !(joydata & J_LEFT) && !(joydata & J_RIGHT)) {
      000AB6 78                    2913 	ld	a, b
      000AB7 B1                    2914 	or	a, c
      000AB8 28 14                 2915 	jr	Z, 00114$
      000ABA 7A                    2916 	ld	a, d
      000ABB B3                    2917 	or	a, e
      000ABC 20 10                 2918 	jr	NZ, 00114$
      000ABE F8 01                 2919 	ldhl	sp,	#1
      000AC0 3A                    2920 	ld	a, (hl-)
      000AC1 B6                    2921 	or	a, (hl)
      000AC2 20 0A                 2922 	jr	NZ, 00114$
                                   2923 ;src/main.c:195: xDir = 0;
      000AC4 21r86r00              2924 	ld	hl, #_xDir
      000AC7 36 00                 2925 	ld	(hl), #0x00
                                   2926 ;src/main.c:196: yDir = 1;
      000AC9 21r87r00              2927 	ld	hl, #_yDir
      000ACC 36 01                 2928 	ld	(hl), #0x01
      000ACE                       2929 00114$:
                                   2930 ;src/main.c:200: if ((joydata & J_UP) && (joydata & J_RIGHT)) {
      000ACE F8 03                 2931 	ldhl	sp,	#3
      000AD0 3A                    2932 	ld	a, (hl-)
      000AD1 B6                    2933 	or	a, (hl)
      000AD2 28 0F                 2934 	jr	Z, 00118$
      000AD4 2B                    2935 	dec	hl
      000AD5 3A                    2936 	ld	a, (hl-)
      000AD6 B6                    2937 	or	a, (hl)
      000AD7 28 0A                 2938 	jr	Z, 00118$
                                   2939 ;src/main.c:201: xDir = 1;
      000AD9 21r86r00              2940 	ld	hl, #_xDir
      000ADC 36 01                 2941 	ld	(hl), #0x01
                                   2942 ;src/main.c:202: yDir = -1;
      000ADE 21r87r00              2943 	ld	hl, #_yDir
      000AE1 36 FF                 2944 	ld	(hl), #0xff
      000AE3                       2945 00118$:
                                   2946 ;src/main.c:204: if ((joydata & J_UP) && (joydata & J_LEFT)) {
      000AE3 F8 03                 2947 	ldhl	sp,	#3
      000AE5 3A                    2948 	ld	a, (hl-)
      000AE6 B6                    2949 	or	a, (hl)
      000AE7 28 0E                 2950 	jr	Z, 00121$
      000AE9 7A                    2951 	ld	a, d
      000AEA B3                    2952 	or	a, e
      000AEB 28 0A                 2953 	jr	Z, 00121$
                                   2954 ;src/main.c:205: xDir = -1;
      000AED 21r86r00              2955 	ld	hl, #_xDir
      000AF0 36 FF                 2956 	ld	(hl), #0xff
                                   2957 ;src/main.c:206: yDir = -1;
      000AF2 21r87r00              2958 	ld	hl, #_yDir
      000AF5 36 FF                 2959 	ld	(hl), #0xff
      000AF7                       2960 00121$:
                                   2961 ;src/main.c:208: if ((joydata & J_DOWN) && (joydata & J_RIGHT)) {
      000AF7 78                    2962 	ld	a, b
      000AF8 B1                    2963 	or	a, c
      000AF9 28 10                 2964 	jr	Z, 00124$
      000AFB F8 01                 2965 	ldhl	sp,	#1
      000AFD 3A                    2966 	ld	a, (hl-)
      000AFE B6                    2967 	or	a, (hl)
      000AFF 28 0A                 2968 	jr	Z, 00124$
                                   2969 ;src/main.c:209: xDir = 1;
      000B01 21r86r00              2970 	ld	hl, #_xDir
      000B04 36 01                 2971 	ld	(hl), #0x01
                                   2972 ;src/main.c:210: yDir = 1;
      000B06 21r87r00              2973 	ld	hl, #_yDir
      000B09 36 01                 2974 	ld	(hl), #0x01
      000B0B                       2975 00124$:
                                   2976 ;src/main.c:212: if ((joydata & J_DOWN) && (joydata & J_LEFT)) {
      000B0B 78                    2977 	ld	a, b
      000B0C B1                    2978 	or	a, c
      000B0D 28 0E                 2979 	jr	Z, 00127$
      000B0F 7A                    2980 	ld	a, d
      000B10 B3                    2981 	or	a, e
      000B11 28 0A                 2982 	jr	Z, 00127$
                                   2983 ;src/main.c:213: xDir = -1;
      000B13 21r86r00              2984 	ld	hl, #_xDir
      000B16 36 FF                 2985 	ld	(hl), #0xff
                                   2986 ;src/main.c:214: yDir = 1;
      000B18 21r87r00              2987 	ld	hl, #_yDir
      000B1B 36 01                 2988 	ld	(hl), #0x01
      000B1D                       2989 00127$:
                                   2990 ;src/main.c:219: if (xDir == 0 && yDir == 0) {
      000B1D FAr86r00              2991 	ld	a, (#_xDir)
      000B20 B7                    2992 	or	a, a
      000B21 20 07                 2993 	jr	NZ, 00130$
      000B23 FAr87r00              2994 	ld	a, (#_yDir)
      000B26 B7                    2995 	or	a, a
                                   2996 ;src/main.c:220: return;
      000B27 CAr73r0C              2997 	jp	Z,00195$
      000B2A                       2998 00130$:
                                   2999 ;src/main.c:252: if (xDir == 0 && yDir > 0) {
      000B2A 21r87r00              3000 	ld	hl, #_yDir
      000B2D 5E                    3001 	ld	e, (hl)
      000B2E AF                    3002 	xor	a, a
      000B2F 57                    3003 	ld	d, a
      000B30 96                    3004 	sub	a, (hl)
      000B31 CB 7B                 3005 	bit	7, e
      000B33 28 07                 3006 	jr	Z, 00387$
      000B35 CB 7A                 3007 	bit	7, d
      000B37 20 08                 3008 	jr	NZ, 00388$
      000B39 BF                    3009 	cp	a, a
      000B3A 18 05                 3010 	jr	00388$
      000B3C                       3011 00387$:
      000B3C CB 7A                 3012 	bit	7, d
      000B3E 28 01                 3013 	jr	Z, 00388$
      000B40 37                    3014 	scf
      000B41                       3015 00388$:
      000B41 3E 00                 3016 	ld	a, #0x00
      000B43 17                    3017 	rla
      000B44 4F                    3018 	ld	c, a
      000B45 FAr86r00              3019 	ld	a, (#_xDir)
      000B48 B7                    3020 	or	a,a
      000B49 20 1A                 3021 	jr	NZ, 00160$
      000B4B B1                    3022 	or	a,c
      000B4C 28 17                 3023 	jr	Z, 00160$
                                   3024 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B4E 21r02r00              3025 	ld	hl, #(_shadow_OAM + 2)
      000B51 36 00                 3026 	ld	(hl), #0x00
      000B53 21r06r00              3027 	ld	hl, #(_shadow_OAM + 6)
      000B56 36 02                 3028 	ld	(hl), #0x02
                                   3029 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B58 21r03r00              3030 	ld	hl, #(_shadow_OAM + 3)
      000B5B 36 40                 3031 	ld	(hl), #0x40
      000B5D 21r07r00              3032 	ld	hl, #(_shadow_OAM + 7)
      000B60 36 40                 3033 	ld	(hl), #0x40
                                   3034 ;src/main.c:256: set_sprite_prop(1, S_FLIPY); 
      000B62 C3r73r0C              3035 	jp	00195$
      000B65                       3036 00160$:
                                   3037 ;src/main.c:258: else if (xDir == 0 && yDir < 0) {
      000B65 FAr87r00              3038 	ld	a, (#_yDir)
      000B68 07                    3039 	rlca
      000B69 E6 01                 3040 	and	a,#0x01
      000B6B F8 02                 3041 	ldhl	sp,	#2
      000B6D 77                    3042 	ld	(hl), a
      000B6E FAr86r00              3043 	ld	a, (#_xDir)
      000B71 B7                    3044 	or	a, a
      000B72 20 1D                 3045 	jr	NZ, 00156$
      000B74 F8 02                 3046 	ldhl	sp,	#2
      000B76 7E                    3047 	ld	a, (hl)
      000B77 B7                    3048 	or	a, a
      000B78 28 17                 3049 	jr	Z, 00156$
                                   3050 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000B7A 21r02r00              3051 	ld	hl, #(_shadow_OAM + 2)
      000B7D 36 00                 3052 	ld	(hl), #0x00
      000B7F 21r06r00              3053 	ld	hl, #(_shadow_OAM + 6)
      000B82 36 02                 3054 	ld	(hl), #0x02
                                   3055 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000B84 21r03r00              3056 	ld	hl, #(_shadow_OAM + 3)
      000B87 36 00                 3057 	ld	(hl), #0x00
      000B89 21r07r00              3058 	ld	hl, #(_shadow_OAM + 7)
      000B8C 36 00                 3059 	ld	(hl), #0x00
                                   3060 ;src/main.c:262: set_sprite_prop(1, 0); 
      000B8E C3r73r0C              3061 	jp	00195$
      000B91                       3062 00156$:
                                   3063 ;src/main.c:264: else if (xDir > 0 && yDir == 0) {
      000B91 21r86r00              3064 	ld	hl, #_xDir
      000B94 5E                    3065 	ld	e, (hl)
      000B95 AF                    3066 	xor	a, a
      000B96 57                    3067 	ld	d, a
      000B97 96                    3068 	sub	a, (hl)
      000B98 CB 7B                 3069 	bit	7, e
      000B9A 28 07                 3070 	jr	Z, 00389$
      000B9C CB 7A                 3071 	bit	7, d
      000B9E 20 08                 3072 	jr	NZ, 00390$
      000BA0 BF                    3073 	cp	a, a
      000BA1 18 05                 3074 	jr	00390$
      000BA3                       3075 00389$:
      000BA3 CB 7A                 3076 	bit	7, d
      000BA5 28 01                 3077 	jr	Z, 00390$
      000BA7 37                    3078 	scf
      000BA8                       3079 00390$:
      000BA8 3E 00                 3080 	ld	a, #0x00
      000BAA 17                    3081 	rla
      000BAB 47                    3082 	ld	b, a
      000BAC B7                    3083 	or	a, a
      000BAD 28 1D                 3084 	jr	Z, 00152$
      000BAF FAr87r00              3085 	ld	a, (#_yDir)
      000BB2 B7                    3086 	or	a, a
      000BB3 20 17                 3087 	jr	NZ, 00152$
                                   3088 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BB5 21r02r00              3089 	ld	hl, #(_shadow_OAM + 2)
      000BB8 36 04                 3090 	ld	(hl), #0x04
      000BBA 21r06r00              3091 	ld	hl, #(_shadow_OAM + 6)
      000BBD 36 06                 3092 	ld	(hl), #0x06
                                   3093 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BBF 21r03r00              3094 	ld	hl, #(_shadow_OAM + 3)
      000BC2 36 00                 3095 	ld	(hl), #0x00
      000BC4 21r07r00              3096 	ld	hl, #(_shadow_OAM + 7)
      000BC7 36 00                 3097 	ld	(hl), #0x00
                                   3098 ;src/main.c:268: set_sprite_prop(1, 0); 
      000BC9 C3r73r0C              3099 	jp	00195$
      000BCC                       3100 00152$:
                                   3101 ;src/main.c:270: else if (xDir < 0 && yDir == 0) {
      000BCC FAr86r00              3102 	ld	a, (#_xDir)
      000BCF 07                    3103 	rlca
      000BD0 E6 01                 3104 	and	a,#0x01
      000BD2 F8 03                 3105 	ldhl	sp,	#3
      000BD4 77                    3106 	ld	(hl), a
      000BD5 7E                    3107 	ld	a, (hl)
      000BD6 B7                    3108 	or	a, a
      000BD7 28 1D                 3109 	jr	Z, 00148$
      000BD9 FAr87r00              3110 	ld	a, (#_yDir)
      000BDC B7                    3111 	or	a, a
      000BDD 20 17                 3112 	jr	NZ, 00148$
                                   3113 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000BDF 21r02r00              3114 	ld	hl, #(_shadow_OAM + 2)
      000BE2 36 04                 3115 	ld	(hl), #0x04
      000BE4 21r06r00              3116 	ld	hl, #(_shadow_OAM + 6)
      000BE7 36 06                 3117 	ld	(hl), #0x06
                                   3118 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000BE9 21r03r00              3119 	ld	hl, #(_shadow_OAM + 3)
      000BEC 36 20                 3120 	ld	(hl), #0x20
      000BEE 21r07r00              3121 	ld	hl, #(_shadow_OAM + 7)
      000BF1 36 20                 3122 	ld	(hl), #0x20
                                   3123 ;src/main.c:274: set_sprite_prop(1, S_FLIPX); 
      000BF3 C3r73r0C              3124 	jp	00195$
      000BF6                       3125 00148$:
                                   3126 ;src/main.c:276: else if (xDir > 0 && yDir < 0) {
      000BF6 78                    3127 	ld	a, b
      000BF7 B7                    3128 	or	a, a
      000BF8 28 1C                 3129 	jr	Z, 00144$
      000BFA F8 02                 3130 	ldhl	sp,	#2
      000BFC 7E                    3131 	ld	a, (hl)
      000BFD B7                    3132 	or	a, a
      000BFE 28 16                 3133 	jr	Z, 00144$
                                   3134 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C00 21r02r00              3135 	ld	hl, #(_shadow_OAM + 2)
      000C03 36 08                 3136 	ld	(hl), #0x08
      000C05 21r06r00              3137 	ld	hl, #(_shadow_OAM + 6)
      000C08 36 0A                 3138 	ld	(hl), #0x0a
                                   3139 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C0A 21r03r00              3140 	ld	hl, #(_shadow_OAM + 3)
      000C0D 36 00                 3141 	ld	(hl), #0x00
      000C0F 21r07r00              3142 	ld	hl, #(_shadow_OAM + 7)
      000C12 36 00                 3143 	ld	(hl), #0x00
                                   3144 ;src/main.c:280: set_sprite_prop(1, 0); 
      000C14 18 5D                 3145 	jr	00195$
      000C16                       3146 00144$:
                                   3147 ;src/main.c:282: else if (xDir > 0 && yDir > 0) {
      000C16 78                    3148 	ld	a, b
      000C17 B7                    3149 	or	a, a
      000C18 28 1A                 3150 	jr	Z, 00140$
      000C1A 79                    3151 	ld	a, c
      000C1B B7                    3152 	or	a, a
      000C1C 28 16                 3153 	jr	Z, 00140$
                                   3154 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C1E 21r02r00              3155 	ld	hl, #(_shadow_OAM + 2)
      000C21 36 08                 3156 	ld	(hl), #0x08
      000C23 21r06r00              3157 	ld	hl, #(_shadow_OAM + 6)
      000C26 36 0A                 3158 	ld	(hl), #0x0a
                                   3159 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C28 21r03r00              3160 	ld	hl, #(_shadow_OAM + 3)
      000C2B 36 40                 3161 	ld	(hl), #0x40
      000C2D 21r07r00              3162 	ld	hl, #(_shadow_OAM + 7)
      000C30 36 40                 3163 	ld	(hl), #0x40
                                   3164 ;src/main.c:286: set_sprite_prop(1, S_FLIPY); 
      000C32 18 3F                 3165 	jr	00195$
      000C34                       3166 00140$:
                                   3167 ;src/main.c:288: else if (xDir < 0 && yDir > 0) {
      000C34 F8 03                 3168 	ldhl	sp,	#3
      000C36 7E                    3169 	ld	a, (hl)
      000C37 B7                    3170 	or	a, a
      000C38 28 1A                 3171 	jr	Z, 00136$
      000C3A 79                    3172 	ld	a, c
      000C3B B7                    3173 	or	a, a
      000C3C 28 16                 3174 	jr	Z, 00136$
                                   3175 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C3E 21r02r00              3176 	ld	hl, #(_shadow_OAM + 2)
      000C41 36 08                 3177 	ld	(hl), #0x08
      000C43 21r06r00              3178 	ld	hl, #(_shadow_OAM + 6)
      000C46 36 0A                 3179 	ld	(hl), #0x0a
                                   3180 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C48 21r03r00              3181 	ld	hl, #(_shadow_OAM + 3)
      000C4B 36 60                 3182 	ld	(hl), #0x60
      000C4D 21r07r00              3183 	ld	hl, #(_shadow_OAM + 7)
      000C50 36 60                 3184 	ld	(hl), #0x60
                                   3185 ;src/main.c:292: set_sprite_prop(1, S_FLIPY | S_FLIPX); 
      000C52 18 1F                 3186 	jr	00195$
      000C54                       3187 00136$:
                                   3188 ;src/main.c:294: else if (xDir < 0 && yDir < 0) {
      000C54 F8 03                 3189 	ldhl	sp,	#3
      000C56 7E                    3190 	ld	a, (hl)
      000C57 B7                    3191 	or	a, a
      000C58 28 19                 3192 	jr	Z, 00195$
      000C5A 2B                    3193 	dec	hl
      000C5B 7E                    3194 	ld	a, (hl)
      000C5C B7                    3195 	or	a, a
      000C5D 28 14                 3196 	jr	Z, 00195$
                                   3197 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000C5F 21r02r00              3198 	ld	hl, #(_shadow_OAM + 2)
      000C62 36 08                 3199 	ld	(hl), #0x08
      000C64 21r06r00              3200 	ld	hl, #(_shadow_OAM + 6)
      000C67 36 0A                 3201 	ld	(hl), #0x0a
                                   3202 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000C69 21r03r00              3203 	ld	hl, #(_shadow_OAM + 3)
      000C6C 36 20                 3204 	ld	(hl), #0x20
      000C6E 21r07r00              3205 	ld	hl, #(_shadow_OAM + 7)
      000C71 36 20                 3206 	ld	(hl), #0x20
                                   3207 ;src/main.c:298: set_sprite_prop(1, S_FLIPX); 
      000C73                       3208 00195$:
                                   3209 ;src/main.c:300: }
      000C73 E8 04                 3210 	add	sp, #4
      000C75 C9                    3211 	ret
                                   3212 ;src/main.c:329: void playSound(uint8_t type) {
                                   3213 ;	---------------------------------
                                   3214 ; Function playSound
                                   3215 ; ---------------------------------
      000C76                       3216 _playSound::
                                   3217 ;src/main.c:330: if (type == 20) { //singlegun
      000C76 F8 02                 3218 	ldhl	sp,	#2
      000C78 7E                    3219 	ld	a, (hl)
      000C79 D6 14                 3220 	sub	a, #0x14
      000C7B 20 13                 3221 	jr	NZ, 00102$
                                   3222 ;src/main.c:331: NR10_REG = 0x00;
      000C7D AF                    3223 	xor	a, a
      000C7E E0r00                 3224 	ldh	(_NR10_REG + 0), a
                                   3225 ;src/main.c:332: NR11_REG = 0x81;
      000C80 3E 81                 3226 	ld	a, #0x81
      000C82 E0r00                 3227 	ldh	(_NR11_REG + 0), a
                                   3228 ;src/main.c:333: NR12_REG = 0x43;
      000C84 3E 43                 3229 	ld	a, #0x43
      000C86 E0r00                 3230 	ldh	(_NR12_REG + 0), a
                                   3231 ;src/main.c:334: NR13_REG = 0X00;//0x6D;
      000C88 AF                    3232 	xor	a, a
      000C89 E0r00                 3233 	ldh	(_NR13_REG + 0), a
                                   3234 ;src/main.c:335: NR14_REG = 0x86;
      000C8B 3E 86                 3235 	ld	a, #0x86
      000C8D E0r00                 3236 	ldh	(_NR14_REG + 0), a
                                   3237 ;src/main.c:336: return;
      000C8F C9                    3238 	ret
      000C90                       3239 00102$:
                                   3240 ;src/main.c:338: if (type == 23) {
      000C90 F8 02                 3241 	ldhl	sp,	#2
      000C92 7E                    3242 	ld	a, (hl)
      000C93 D6 17                 3243 	sub	a, #0x17
      000C95 20 12                 3244 	jr	NZ, 00104$
                                   3245 ;src/main.c:339: NR10_REG = 0x00;
      000C97 AF                    3246 	xor	a, a
      000C98 E0r00                 3247 	ldh	(_NR10_REG + 0), a
                                   3248 ;src/main.c:340: NR11_REG = 0x81;
      000C9A 3E 81                 3249 	ld	a, #0x81
      000C9C E0r00                 3250 	ldh	(_NR11_REG + 0), a
                                   3251 ;src/main.c:341: NR12_REG = 0x53;
      000C9E 3E 53                 3252 	ld	a, #0x53
      000CA0 E0r00                 3253 	ldh	(_NR12_REG + 0), a
                                   3254 ;src/main.c:342: NR13_REG = 0X00;//0x6D;
      000CA2 AF                    3255 	xor	a, a
      000CA3 E0r00                 3256 	ldh	(_NR13_REG + 0), a
                                   3257 ;src/main.c:343: NR14_REG = 0x86;
      000CA5 3E 86                 3258 	ld	a, #0x86
      000CA7 E0r00                 3259 	ldh	(_NR14_REG + 0), a
      000CA9                       3260 00104$:
                                   3261 ;src/main.c:345: if (type == 26) {
      000CA9 F8 02                 3262 	ldhl	sp,	#2
      000CAB 7E                    3263 	ld	a, (hl)
      000CAC D6 1A                 3264 	sub	a, #0x1a
      000CAE 20 13                 3265 	jr	NZ, 00106$
                                   3266 ;src/main.c:346: NR10_REG = 0x00;
      000CB0 AF                    3267 	xor	a, a
      000CB1 E0r00                 3268 	ldh	(_NR10_REG + 0), a
                                   3269 ;src/main.c:347: NR11_REG = 0x89;
      000CB3 3E 89                 3270 	ld	a, #0x89
      000CB5 E0r00                 3271 	ldh	(_NR11_REG + 0), a
                                   3272 ;src/main.c:348: NR12_REG = 0x55;
      000CB7 3E 55                 3273 	ld	a, #0x55
      000CB9 E0r00                 3274 	ldh	(_NR12_REG + 0), a
                                   3275 ;src/main.c:349: NR13_REG = 0x70;//0Xbe;//0x6D;
      000CBB 3E 70                 3276 	ld	a, #0x70
      000CBD E0r00                 3277 	ldh	(_NR13_REG + 0), a
                                   3278 ;src/main.c:350: NR14_REG = 0x84;
      000CBF 3E 84                 3279 	ld	a, #0x84
      000CC1 E0r00                 3280 	ldh	(_NR14_REG + 0), a
      000CC3                       3281 00106$:
                                   3282 ;src/main.c:352: if (type == 0) {  // explosion
      000CC3 F8 02                 3283 	ldhl	sp,	#2
      000CC5 7E                    3284 	ld	a, (hl)
      000CC6 B7                    3285 	or	a, a
      000CC7 C0                    3286 	ret	NZ
                                   3287 ;src/main.c:353: NR41_REG = 0x20;  
      000CC8 3E 20                 3288 	ld	a, #0x20
      000CCA E0r00                 3289 	ldh	(_NR41_REG + 0), a
                                   3290 ;src/main.c:354: NR42_REG = 0xa2;//0xa3;  
      000CCC 3E A2                 3291 	ld	a, #0xa2
      000CCE E0r00                 3292 	ldh	(_NR42_REG + 0), a
                                   3293 ;src/main.c:355: NR43_REG = 0x57;  
      000CD0 3E 57                 3294 	ld	a, #0x57
      000CD2 E0r00                 3295 	ldh	(_NR43_REG + 0), a
                                   3296 ;src/main.c:356: NR44_REG = 0x80;  
      000CD4 3E 80                 3297 	ld	a, #0x80
      000CD6 E0r00                 3298 	ldh	(_NR44_REG + 0), a
                                   3299 ;src/main.c:362: }
      000CD8 C9                    3300 	ret
                                   3301 ;src/main.c:364: void initEnemies(uint8_t loadSprites) {
                                   3302 ;	---------------------------------
                                   3303 ; Function initEnemies
                                   3304 ; ---------------------------------
      000CD9                       3305 _initEnemies::
      000CD9 E8 F9                 3306 	add	sp, #-7
                                   3307 ;src/main.c:366: if (loadSprites) {
      000CDB F8 09                 3308 	ldhl	sp,	#9
      000CDD 7E                    3309 	ld	a, (hl)
      000CDE B7                    3310 	or	a, a
      000CDF 28 1A                 3311 	jr	Z, 00102$
                                   3312 ;src/main.c:368: set_sprite_data(0x40, 5, enemy1);
      000CE1 11r18r05              3313 	ld	de, #_enemy1
      000CE4 D5                    3314 	push	de
      000CE5 21 40 05              3315 	ld	hl, #0x540
      000CE8 E5                    3316 	push	hl
      000CE9 CDr00r00              3317 	call	_set_sprite_data
      000CEC E8 04                 3318 	add	sp, #4
                                   3319 ;src/main.c:369: set_sprite_data(0x50, 8, largeenemies);
      000CEE 11r68r05              3320 	ld	de, #_largeenemies
      000CF1 D5                    3321 	push	de
      000CF2 21 50 08              3322 	ld	hl, #0x850
      000CF5 E5                    3323 	push	hl
      000CF6 CDr00r00              3324 	call	_set_sprite_data
      000CF9 E8 04                 3325 	add	sp, #4
      000CFB                       3326 00102$:
                                   3327 ;src/main.c:372: struct Enemy *eptr = enemies;
      000CFB F8 04                 3328 	ldhl	sp,	#4
      000CFD 3Er50                 3329 	ld	a, #<(_enemies)
      000CFF 22                    3330 	ld	(hl+), a
                                   3331 ;src/main.c:374: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000D00 3Es00                 3332 	ld	a, #>(_enemies)
      000D02 22                    3333 	ld	(hl+), a
      000D03 36 00                 3334 	ld	(hl), #0x00
      000D05                       3335 00116$:
      000D05 21r5Dr08              3336 	ld	hl, #_ENEMYCOUNT
      000D08 4E                    3337 	ld	c, (hl)
      000D09 F8 06                 3338 	ldhl	sp,	#6
      000D0B 7E                    3339 	ld	a, (hl)
      000D0C 91                    3340 	sub	a, c
      000D0D D2r81r0E              3341 	jp	NC, 00118$
                                   3342 ;src/main.c:375: if (eptr->alive == 0) {
      000D10 2B                    3343 	dec	hl
      000D11 2B                    3344 	dec	hl
      000D12 2A                    3345 	ld	a, (hl+)
      000D13 5F                    3346 	ld	e, a
      000D14 56                    3347 	ld	d, (hl)
      000D15 21 09 00              3348 	ld	hl, #0x0009
      000D18 19                    3349 	add	hl, de
      000D19 4D                    3350 	ld	c, l
      000D1A 44                    3351 	ld	b, h
      000D1B 0A                    3352 	ld	a, (bc)
      000D1C F8 03                 3353 	ldhl	sp,	#3
      000D1E 77                    3354 	ld	(hl), a
      000D1F 7E                    3355 	ld	a, (hl)
      000D20 B7                    3356 	or	a, a
      000D21 C2r6Ar0E              3357 	jp	NZ, 00107$
                                   3358 ;src/main.c:377: uint8_t enemyInd = ((uint8_t)rand()) % (uint8_t) enemyOptionCount;
      000D24 CDr00r00              3359 	call	_rand
      000D27 F8 02                 3360 	ldhl	sp,	#2
      000D29 73                    3361 	ld	(hl), e
      000D2A FAr17r05              3362 	ld	a, (#_enemyOptionCount)
      000D2D F8 03                 3363 	ldhl	sp,	#3
      000D2F 77                    3364 	ld	(hl), a
      000D30 3A                    3365 	ld	a, (hl-)
      000D31 57                    3366 	ld	d, a
      000D32 5E                    3367 	ld	e, (hl)
      000D33 D5                    3368 	push	de
      000D34 CDr00r00              3369 	call	__moduchar
      000D37 E1                    3370 	pop	hl
                                   3371 ;src/main.c:379: (*eptr) = enemyOptions[enemyInd];
      000D38 F8 03                 3372 	ldhl	sp,#3
      000D3A 73                    3373 	ld	(hl), e
      000D3B 3A                    3374 	ld	a, (hl-)
      000D3C 22                    3375 	ld	(hl+), a
      000D3D AF                    3376 	xor	a, a
      000D3E 32                    3377 	ld	(hl-), a
      000D3F 3A                    3378 	ld	a, (hl-)
      000D40 2B                    3379 	dec	hl
      000D41 77                    3380 	ld	(hl), a
      000D42 F8 03                 3381 	ldhl	sp,	#3
      000D44 3A                    3382 	ld	a, (hl-)
      000D45 2B                    3383 	dec	hl
      000D46 77                    3384 	ld	(hl), a
      000D47 3E 04                 3385 	ld	a, #0x04
      000D49                       3386 00146$:
      000D49 F8 00                 3387 	ldhl	sp,	#0
      000D4B CB 26                 3388 	sla	(hl)
      000D4D 23                    3389 	inc	hl
      000D4E CB 16                 3390 	rl	(hl)
      000D50 3D                    3391 	dec	a
      000D51 20 F6                 3392 	jr	NZ, 00146$
      000D53 D1                    3393 	pop	de
      000D54 D5                    3394 	push	de
      000D55 21r00r00              3395 	ld	hl, #_enemyOptions
      000D58 19                    3396 	add	hl, de
      000D59 E5                    3397 	push	hl
      000D5A 7D                    3398 	ld	a, l
      000D5B F8 04                 3399 	ldhl	sp,	#4
      000D5D 77                    3400 	ld	(hl), a
      000D5E E1                    3401 	pop	hl
      000D5F 7C                    3402 	ld	a, h
      000D60 F8 03                 3403 	ldhl	sp,	#3
      000D62 32                    3404 	ld	(hl-), a
      000D63 2A                    3405 	ld	a, (hl+)
      000D64 5F                    3406 	ld	e, a
      000D65 2A                    3407 	ld	a, (hl+)
      000D66 57                    3408 	ld	d, a
      000D67 2A                    3409 	ld	a, (hl+)
      000D68 4F                    3410 	ld	c, a
      000D69 46                    3411 	ld	b, (hl)
      000D6A 21 10 00              3412 	ld	hl, #0x0010
      000D6D E5                    3413 	push	hl
      000D6E D5                    3414 	push	de
      000D6F C5                    3415 	push	bc
      000D70 CDr00r00              3416 	call	___memcpy
      000D73 E8 06                 3417 	add	sp, #6
                                   3418 ;src/main.c:381: uint8_t posIndex =  ((uint8_t)rand()) % (uint8_t)8;//(rand() & 8);
      000D75 CDr00r00              3419 	call	_rand
      000D78 7B                    3420 	ld	a, e
      000D79 E6 07                 3421 	and	a, #0x07
      000D7B F8 03                 3422 	ldhl	sp,	#3
      000D7D 77                    3423 	ld	(hl), a
                                   3424 ;src/main.c:382: eptr->x = xSpawnPositions[posIndex];
      000D7E 11r5Er08              3425 	ld	de, #_xSpawnPositions
      000D81 6E                    3426 	ld	l, (hl)
      000D82 26 00                 3427 	ld	h, #0x00
      000D84 19                    3428 	add	hl, de
      000D85 4D                    3429 	ld	c, l
      000D86 44                    3430 	ld	b, h
      000D87 0A                    3431 	ld	a, (bc)
      000D88 4F                    3432 	ld	c, a
      000D89 06 00                 3433 	ld	b, #0x00
      000D8B F8 04                 3434 	ldhl	sp,	#4
      000D8D 2A                    3435 	ld	a,	(hl+)
      000D8E 66                    3436 	ld	h, (hl)
      000D8F 6F                    3437 	ld	l, a
      000D90 79                    3438 	ld	a, c
      000D91 22                    3439 	ld	(hl+), a
      000D92 70                    3440 	ld	(hl), b
                                   3441 ;src/main.c:383: eptr->y = ySpawnPositions[posIndex];
      000D93 F8 04                 3442 	ldhl	sp,#4
      000D95 2A                    3443 	ld	a, (hl+)
      000D96 5F                    3444 	ld	e, a
      000D97 56                    3445 	ld	d, (hl)
      000D98 21 02 00              3446 	ld	hl, #0x0002
      000D9B 19                    3447 	add	hl, de
      000D9C 33                    3448 	inc	sp
      000D9D 33                    3449 	inc	sp
      000D9E E5                    3450 	push	hl
      000D9F 11r66r08              3451 	ld	de, #_ySpawnPositions
      000DA2 F8 03                 3452 	ldhl	sp,	#3
      000DA4 6E                    3453 	ld	l, (hl)
      000DA5 26 00                 3454 	ld	h, #0x00
      000DA7 19                    3455 	add	hl, de
      000DA8 4D                    3456 	ld	c, l
      000DA9 44                    3457 	ld	b, h
      000DAA 0A                    3458 	ld	a, (bc)
      000DAB 4F                    3459 	ld	c, a
      000DAC 06 00                 3460 	ld	b, #0x00
      000DAE E1                    3461 	pop	hl
      000DAF E5                    3462 	push	hl
      000DB0 79                    3463 	ld	a, c
      000DB1 22                    3464 	ld	(hl+), a
      000DB2 70                    3465 	ld	(hl), b
                                   3466 ;src/main.c:385: if (eptr->spriteCount == 1) {
      000DB3 F8 04                 3467 	ldhl	sp,#4
      000DB5 2A                    3468 	ld	a, (hl+)
      000DB6 5F                    3469 	ld	e, a
      000DB7 56                    3470 	ld	d, (hl)
      000DB8 21 08 00              3471 	ld	hl, #0x0008
      000DBB 19                    3472 	add	hl, de
      000DBC 4D                    3473 	ld	c, l
      000DBD 44                    3474 	ld	b, h
      000DBE 0A                    3475 	ld	a, (bc)
      000DBF 47                    3476 	ld	b, a
                                   3477 ;src/main.c:386: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000DC0 F8 04                 3478 	ldhl	sp,#4
      000DC2 2A                    3479 	ld	a, (hl+)
      000DC3 5F                    3480 	ld	e, a
      000DC4 56                    3481 	ld	d, (hl)
      000DC5 21 06 00              3482 	ld	hl, #0x0006
      000DC8 19                    3483 	add	hl, de
      000DC9 5D                    3484 	ld	e, l
      000DCA 54                    3485 	ld	d, h
      000DCB F8 06                 3486 	ldhl	sp,	#6
      000DCD 4E                    3487 	ld	c, (hl)
      000DCE 1A                    3488 	ld	a, (de)
      000DCF 5F                    3489 	ld	e, a
      000DD0 CB 21                 3490 	sla	c
      000DD2 79                    3491 	ld	a, c
      000DD3 C6 0A                 3492 	add	a, #0x0a
      000DD5 F8 02                 3493 	ldhl	sp,	#2
      000DD7 77                    3494 	ld	(hl), a
                                   3495 ;src/main.c:385: if (eptr->spriteCount == 1) {
      000DD8 05                    3496 	dec	b
      000DD9 20 2C                 3497 	jr	NZ, 00104$
                                   3498 ;src/main.c:386: set_sprite_tile(10+ (i<<1), eptr->sprite0);
                                   3499 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000DDB 6E                    3500 	ld	l, (hl)
                                   3501 ;	spillPairReg hl
                                   3502 ;	spillPairReg hl
      000DDC 26 00                 3503 	ld	h, #0x00
                                   3504 ;	spillPairReg hl
                                   3505 ;	spillPairReg hl
      000DDE 29                    3506 	add	hl, hl
      000DDF 29                    3507 	add	hl, hl
      000DE0 01r00r00              3508 	ld	bc, #_shadow_OAM
      000DE3 09                    3509 	add	hl, bc
      000DE4 23                    3510 	inc	hl
      000DE5 23                    3511 	inc	hl
      000DE6 73                    3512 	ld	(hl), e
                                   3513 ;src/main.c:387: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000DE7 D1                    3514 	pop	de
      000DE8 D5                    3515 	push	de
      000DE9 1A                    3516 	ld	a, (de)
      000DEA 4F                    3517 	ld	c, a
      000DEB F8 04                 3518 	ldhl	sp,#4
      000DED 2A                    3519 	ld	a, (hl+)
      000DEE 5F                    3520 	ld	e, a
      000DEF 3A                    3521 	ld	a, (hl-)
      000DF0 2B                    3522 	dec	hl
      000DF1 57                    3523 	ld	d, a
      000DF2 1A                    3524 	ld	a, (de)
      000DF3 32                    3525 	ld	(hl-), a
                                   3526 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000DF4 6E                    3527 	ld	l, (hl)
                                   3528 ;	spillPairReg hl
                                   3529 ;	spillPairReg hl
      000DF5 26 00                 3530 	ld	h, #0x00
                                   3531 ;	spillPairReg hl
                                   3532 ;	spillPairReg hl
      000DF7 29                    3533 	add	hl, hl
      000DF8 29                    3534 	add	hl, hl
      000DF9 11r00r00              3535 	ld	de, #_shadow_OAM
      000DFC 19                    3536 	add	hl, de
                                   3537 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000DFD 79                    3538 	ld	a, c
      000DFE 22                    3539 	ld	(hl+), a
      000DFF 4D                    3540 	ld	c, l
      000E00 44                    3541 	ld	b, h
      000E01 F8 03                 3542 	ldhl	sp,	#3
      000E03 7E                    3543 	ld	a, (hl)
      000E04 02                    3544 	ld	(bc), a
                                   3545 ;src/main.c:387: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000E05 18 63                 3546 	jr	00107$
      000E07                       3547 00104$:
                                   3548 ;src/main.c:390: set_sprite_tile(10+ (i<<1), eptr->sprite0);
      000E07 43                    3549 	ld	b, e
      000E08 F8 02                 3550 	ldhl	sp,	#2
                                   3551 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E0A 6E                    3552 	ld	l, (hl)
                                   3553 ;	spillPairReg hl
                                   3554 ;	spillPairReg hl
      000E0B 26 00                 3555 	ld	h, #0x00
                                   3556 ;	spillPairReg hl
                                   3557 ;	spillPairReg hl
      000E0D 29                    3558 	add	hl, hl
      000E0E 29                    3559 	add	hl, hl
      000E0F 11r00r00              3560 	ld	de, #_shadow_OAM
      000E12 19                    3561 	add	hl, de
      000E13 23                    3562 	inc	hl
      000E14 23                    3563 	inc	hl
      000E15 70                    3564 	ld	(hl), b
                                   3565 ;src/main.c:391: move_sprite(10+ (i<<1), eptr->x, eptr->y);
      000E16 D1                    3566 	pop	de
      000E17 D5                    3567 	push	de
      000E18 1A                    3568 	ld	a, (de)
      000E19 47                    3569 	ld	b, a
      000E1A F8 04                 3570 	ldhl	sp,#4
      000E1C 2A                    3571 	ld	a, (hl+)
      000E1D 5F                    3572 	ld	e, a
      000E1E 3A                    3573 	ld	a, (hl-)
      000E1F 2B                    3574 	dec	hl
      000E20 57                    3575 	ld	d, a
      000E21 1A                    3576 	ld	a, (de)
      000E22 32                    3577 	ld	(hl-), a
                                   3578 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E23 6E                    3579 	ld	l, (hl)
                                   3580 ;	spillPairReg hl
                                   3581 ;	spillPairReg hl
      000E24 26 00                 3582 	ld	h, #0x00
                                   3583 ;	spillPairReg hl
                                   3584 ;	spillPairReg hl
      000E26 29                    3585 	add	hl, hl
      000E27 29                    3586 	add	hl, hl
      000E28 11r00r00              3587 	ld	de, #_shadow_OAM
      000E2B 19                    3588 	add	hl, de
                                   3589 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E2C 78                    3590 	ld	a, b
      000E2D 22                    3591 	ld	(hl+), a
      000E2E 5D                    3592 	ld	e, l
      000E2F 54                    3593 	ld	d, h
      000E30 F8 03                 3594 	ldhl	sp,	#3
                                   3595 ;src/main.c:393: set_sprite_tile(10+ (i<<1) +1, eptr->sprite1);
      000E32 2A                    3596 	ld	a, (hl+)
      000E33 12                    3597 	ld	(de), a
      000E34 2A                    3598 	ld	a, (hl+)
      000E35 5F                    3599 	ld	e, a
      000E36 56                    3600 	ld	d, (hl)
      000E37 21 07 00              3601 	ld	hl, #0x0007
      000E3A 19                    3602 	add	hl, de
      000E3B 5D                    3603 	ld	e, l
      000E3C 54                    3604 	ld	d, h
      000E3D 1A                    3605 	ld	a, (de)
      000E3E 5F                    3606 	ld	e, a
      000E3F 79                    3607 	ld	a, c
      000E40 C6 0B                 3608 	add	a, #0x0b
      000E42 F8 03                 3609 	ldhl	sp,	#3
      000E44 77                    3610 	ld	(hl), a
                                   3611 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000E45 6E                    3612 	ld	l, (hl)
                                   3613 ;	spillPairReg hl
                                   3614 ;	spillPairReg hl
      000E46 26 00                 3615 	ld	h, #0x00
                                   3616 ;	spillPairReg hl
                                   3617 ;	spillPairReg hl
      000E48 29                    3618 	add	hl, hl
      000E49 29                    3619 	add	hl, hl
      000E4A 01r00r00              3620 	ld	bc, #_shadow_OAM
      000E4D 09                    3621 	add	hl, bc
      000E4E 23                    3622 	inc	hl
      000E4F 23                    3623 	inc	hl
      000E50 73                    3624 	ld	(hl), e
                                   3625 ;src/main.c:394: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E51 D1                    3626 	pop	de
      000E52 D5                    3627 	push	de
      000E53 1A                    3628 	ld	a, (de)
      000E54 47                    3629 	ld	b, a
      000E55 F8 04                 3630 	ldhl	sp,#4
      000E57 2A                    3631 	ld	a, (hl+)
      000E58 5F                    3632 	ld	e, a
      000E59 3A                    3633 	ld	a, (hl-)
      000E5A 2B                    3634 	dec	hl
      000E5B 57                    3635 	ld	d, a
      000E5C 1A                    3636 	ld	a, (de)
      000E5D 4F                    3637 	ld	c, a
                                   3638 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000E5E 6E                    3639 	ld	l, (hl)
                                   3640 ;	spillPairReg hl
                                   3641 ;	spillPairReg hl
      000E5F 26 00                 3642 	ld	h, #0x00
                                   3643 ;	spillPairReg hl
                                   3644 ;	spillPairReg hl
      000E61 29                    3645 	add	hl, hl
      000E62 29                    3646 	add	hl, hl
      000E63 11r00r00              3647 	ld	de, #_shadow_OAM
      000E66 19                    3648 	add	hl, de
                                   3649 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000E67 78                    3650 	ld	a, b
      000E68 22                    3651 	ld	(hl+), a
      000E69 71                    3652 	ld	(hl), c
                                   3653 ;src/main.c:394: move_sprite(10+ (i<<1) +1, eptr->x, eptr->y);
      000E6A                       3654 00107$:
                                   3655 ;src/main.c:399: eptr++;
      000E6A F8 04                 3656 	ldhl	sp,#4
      000E6C 2A                    3657 	ld	a, (hl+)
      000E6D 5F                    3658 	ld	e, a
      000E6E 56                    3659 	ld	d, (hl)
      000E6F 21 10 00              3660 	ld	hl, #0x0010
      000E72 19                    3661 	add	hl, de
      000E73 E5                    3662 	push	hl
      000E74 7D                    3663 	ld	a, l
      000E75 F8 06                 3664 	ldhl	sp,	#6
      000E77 77                    3665 	ld	(hl), a
      000E78 E1                    3666 	pop	hl
      000E79 7C                    3667 	ld	a, h
      000E7A F8 05                 3668 	ldhl	sp,	#5
                                   3669 ;src/main.c:374: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E7C 22                    3670 	ld	(hl+), a
      000E7D 34                    3671 	inc	(hl)
      000E7E C3r05r0D              3672 	jp	00116$
      000E81                       3673 00118$:
                                   3674 ;src/main.c:402: }
      000E81 E8 07                 3675 	add	sp, #7
      000E83 C9                    3676 	ret
                                   3677 ;src/main.c:405: void updateEnemyPositions() {
                                   3678 ;	---------------------------------
                                   3679 ; Function updateEnemyPositions
                                   3680 ; ---------------------------------
      000E84                       3681 _updateEnemyPositions::
      000E84 E8 F0                 3682 	add	sp, #-16
                                   3683 ;src/main.c:408: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      000E86 F8 0F                 3684 	ldhl	sp,	#15
      000E88 36 00                 3685 	ld	(hl), #0x00
      000E8A                       3686 00196$:
      000E8A 21r5Dr08              3687 	ld	hl, #_ENEMYCOUNT
      000E8D 4E                    3688 	ld	c, (hl)
      000E8E F8 0F                 3689 	ldhl	sp,	#15
      000E90 7E                    3690 	ld	a, (hl)
      000E91 91                    3691 	sub	a, c
      000E92 D2r41r13              3692 	jp	NC, 00134$
                                   3693 ;src/main.c:409: if (!enemies[i].alive) {
      000E95 3A                    3694 	ld	a, (hl-)
      000E96 2B                    3695 	dec	hl
      000E97 22                    3696 	ld	(hl+), a
      000E98 36 00                 3697 	ld	(hl), #0x00
      000E9A 3E 04                 3698 	ld	a, #0x04
      000E9C                       3699 00407$:
      000E9C F8 0D                 3700 	ldhl	sp,	#13
      000E9E CB 26                 3701 	sla	(hl)
      000EA0 23                    3702 	inc	hl
      000EA1 CB 16                 3703 	rl	(hl)
      000EA3 3D                    3704 	dec	a
      000EA4 20 F6                 3705 	jr	NZ, 00407$
      000EA6 2B                    3706 	dec	hl
      000EA7 2A                    3707 	ld	a, (hl+)
      000EA8 5F                    3708 	ld	e, a
      000EA9 56                    3709 	ld	d, (hl)
      000EAA 21r50r00              3710 	ld	hl, #_enemies
      000EAD 19                    3711 	add	hl, de
      000EAE E5                    3712 	push	hl
      000EAF 7D                    3713 	ld	a, l
      000EB0 F8 04                 3714 	ldhl	sp,	#4
      000EB2 77                    3715 	ld	(hl), a
      000EB3 E1                    3716 	pop	hl
      000EB4 7C                    3717 	ld	a, h
      000EB5 F8 03                 3718 	ldhl	sp,	#3
      000EB7 32                    3719 	ld	(hl-), a
      000EB8 2A                    3720 	ld	a, (hl+)
      000EB9 5F                    3721 	ld	e, a
      000EBA 56                    3722 	ld	d, (hl)
      000EBB 21 09 00              3723 	ld	hl, #0x0009
      000EBE 19                    3724 	add	hl, de
      000EBF 4D                    3725 	ld	c, l
      000EC0 44                    3726 	ld	b, h
      000EC1 0A                    3727 	ld	a, (bc)
      000EC2 B7                    3728 	or	a, a
      000EC3 CAr3Br13              3729 	jp	Z, 00133$
                                   3730 ;src/main.c:412: enemies[i].x -= xOverflow;
      000EC6 F8 02                 3731 	ldhl	sp,#2
      000EC8 2A                    3732 	ld	a, (hl+)
      000EC9 5F                    3733 	ld	e, a
      000ECA 56                    3734 	ld	d, (hl)
      000ECB 1A                    3735 	ld	a, (de)
      000ECC 4F                    3736 	ld	c, a
      000ECD 13                    3737 	inc	de
      000ECE 1A                    3738 	ld	a, (de)
      000ECF 47                    3739 	ld	b, a
      000ED0 21r94r00              3740 	ld	hl, #_xOverflow
      000ED3 2A                    3741 	ld	a, (hl+)
      000ED4 5F                    3742 	ld	e, a
      000ED5 56                    3743 	ld	d, (hl)
      000ED6 79                    3744 	ld	a, c
      000ED7 93                    3745 	sub	a, e
      000ED8 5F                    3746 	ld	e, a
      000ED9 78                    3747 	ld	a, b
      000EDA 9A                    3748 	sbc	a, d
      000EDB F8 0E                 3749 	ldhl	sp,	#14
      000EDD 32                    3750 	ld	(hl-), a
      000EDE 73                    3751 	ld	(hl), e
      000EDF F8 02                 3752 	ldhl	sp,#2
      000EE1 2A                    3753 	ld	a, (hl+)
      000EE2 5F                    3754 	ld	e, a
      000EE3 56                    3755 	ld	d, (hl)
      000EE4 F8 0D                 3756 	ldhl	sp,	#13
      000EE6 2A                    3757 	ld	a, (hl+)
      000EE7 12                    3758 	ld	(de), a
      000EE8 13                    3759 	inc	de
      000EE9 7E                    3760 	ld	a, (hl)
      000EEA 12                    3761 	ld	(de), a
                                   3762 ;src/main.c:413: enemies[i].y -= yOverflow;
      000EEB F8 02                 3763 	ldhl	sp,#2
      000EED 2A                    3764 	ld	a, (hl+)
      000EEE 5F                    3765 	ld	e, a
      000EEF 56                    3766 	ld	d, (hl)
      000EF0 21 02 00              3767 	ld	hl, #0x0002
      000EF3 19                    3768 	add	hl, de
      000EF4 E5                    3769 	push	hl
      000EF5 7D                    3770 	ld	a, l
      000EF6 F8 06                 3771 	ldhl	sp,	#6
      000EF8 77                    3772 	ld	(hl), a
      000EF9 E1                    3773 	pop	hl
      000EFA 7C                    3774 	ld	a, h
      000EFB F8 05                 3775 	ldhl	sp,	#5
      000EFD 32                    3776 	ld	(hl-), a
      000EFE 2A                    3777 	ld	a, (hl+)
      000EFF 5F                    3778 	ld	e, a
      000F00 56                    3779 	ld	d, (hl)
      000F01 1A                    3780 	ld	a, (de)
      000F02 4F                    3781 	ld	c, a
      000F03 13                    3782 	inc	de
      000F04 1A                    3783 	ld	a, (de)
      000F05 47                    3784 	ld	b, a
      000F06 79                    3785 	ld	a, c
      000F07 21r96r00              3786 	ld	hl, #_yOverflow
      000F0A 96                    3787 	sub	a, (hl)
      000F0B 23                    3788 	inc	hl
      000F0C 4F                    3789 	ld	c, a
      000F0D 78                    3790 	ld	a, b
      000F0E 9E                    3791 	sbc	a, (hl)
      000F0F 47                    3792 	ld	b, a
      000F10 F8 04                 3793 	ldhl	sp,	#4
      000F12 2A                    3794 	ld	a,	(hl+)
      000F13 66                    3795 	ld	h, (hl)
      000F14 6F                    3796 	ld	l, a
      000F15 79                    3797 	ld	a, c
      000F16 22                    3798 	ld	(hl+), a
      000F17 70                    3799 	ld	(hl), b
                                   3800 ;src/main.c:416: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F18 F8 0D                 3801 	ldhl	sp,	#13
      000F1A 7E                    3802 	ld	a, (hl)
      000F1B 21r8Er00              3803 	ld	hl, #_playerDrawX
      000F1E 4E                    3804 	ld	c, (hl)
      000F1F 91                    3805 	sub	a, c
      000F20 4F                    3806 	ld	c, a
                                   3807 ;src/main.c:324: if (value >= 0) return value;
      000F21 CB 79                 3808 	bit	7, c
      000F23 20 03                 3809 	jr	NZ, 00169$
      000F25 41                    3810 	ld	b, c
      000F26 18 03                 3811 	jr	00171$
      000F28                       3812 00169$:
                                   3813 ;src/main.c:325: else return - value;
      000F28 AF                    3814 	xor	a, a
      000F29 91                    3815 	sub	a, c
      000F2A 47                    3816 	ld	b, a
                                   3817 ;src/main.c:416: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F2B                       3818 00171$:
                                   3819 ;src/main.c:425: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000F2B F8 02                 3820 	ldhl	sp,#2
      000F2D 2A                    3821 	ld	a, (hl+)
      000F2E 5F                    3822 	ld	e, a
      000F2F 56                    3823 	ld	d, (hl)
      000F30 21 0E 00              3824 	ld	hl, #0x000e
      000F33 19                    3825 	add	hl, de
      000F34 E5                    3826 	push	hl
      000F35 7D                    3827 	ld	a, l
      000F36 F8 08                 3828 	ldhl	sp,	#8
      000F38 77                    3829 	ld	(hl), a
      000F39 E1                    3830 	pop	hl
      000F3A 7C                    3831 	ld	a, h
      000F3B F8 07                 3832 	ldhl	sp,	#7
      000F3D 32                    3833 	ld	(hl-), a
      000F3E 2A                    3834 	ld	a, (hl+)
      000F3F 5F                    3835 	ld	e, a
      000F40 56                    3836 	ld	d, (hl)
      000F41 1A                    3837 	ld	a, (de)
      000F42 4F                    3838 	ld	c, a
                                   3839 ;src/main.c:418: enemies[i].xSpeed += enemies[i].accel;
      000F43 F8 02                 3840 	ldhl	sp,#2
      000F45 2A                    3841 	ld	a, (hl+)
      000F46 5F                    3842 	ld	e, a
      000F47 56                    3843 	ld	d, (hl)
      000F48 21 0D 00              3844 	ld	hl, #0x000d
      000F4B 19                    3845 	add	hl, de
      000F4C 33                    3846 	inc	sp
      000F4D 33                    3847 	inc	sp
      000F4E E5                    3848 	push	hl
                                   3849 ;src/main.c:416: if (abs(enemies[i].x - playerDrawX) > 8) {
      000F4F 58                    3850 	ld	e, b
      000F50 3E 08                 3851 	ld	a,#0x08
      000F52 57                    3852 	ld	d,a
      000F53 90                    3853 	sub	a, b
      000F54 CB 7B                 3854 	bit	7, e
      000F56 28 07                 3855 	jr	Z, 00408$
      000F58 CB 7A                 3856 	bit	7, d
      000F5A 20 08                 3857 	jr	NZ, 00409$
      000F5C BF                    3858 	cp	a, a
      000F5D 18 05                 3859 	jr	00409$
      000F5F                       3860 00408$:
      000F5F CB 7A                 3861 	bit	7, d
      000F61 28 01                 3862 	jr	Z, 00409$
      000F63 37                    3863 	scf
      000F64                       3864 00409$:
      000F64 30 4E                 3865 	jr	NC, 00111$
                                   3866 ;src/main.c:417: if (enemies[i].x < playerDrawX) {
      000F66 F8 02                 3867 	ldhl	sp,#2
      000F68 2A                    3868 	ld	a, (hl+)
      000F69 5F                    3869 	ld	e, a
      000F6A 56                    3870 	ld	d, (hl)
      000F6B 1A                    3871 	ld	a, (de)
      000F6C F8 0B                 3872 	ldhl	sp,	#11
      000F6E 22                    3873 	ld	(hl+), a
      000F6F 13                    3874 	inc	de
      000F70 1A                    3875 	ld	a, (de)
      000F71 77                    3876 	ld	(hl), a
      000F72 FAr8Er00              3877 	ld	a, (#_playerDrawX)
      000F75 F8 0D                 3878 	ldhl	sp,	#13
      000F77 22                    3879 	ld	(hl+), a
      000F78 36 00                 3880 	ld	(hl), #0x00
                                   3881 ;src/main.c:418: enemies[i].xSpeed += enemies[i].accel;
      000F7A D1                    3882 	pop	de
      000F7B D5                    3883 	push	de
      000F7C 1A                    3884 	ld	a, (de)
      000F7D 47                    3885 	ld	b, a
                                   3886 ;src/main.c:417: if (enemies[i].x < playerDrawX) {
      000F7E F8 0B                 3887 	ldhl	sp,	#11
      000F80 5D                    3888 	ld	e, l
      000F81 54                    3889 	ld	d, h
      000F82 F8 0D                 3890 	ldhl	sp,	#13
      000F84 1A                    3891 	ld	a, (de)
      000F85 13                    3892 	inc	de
      000F86 96                    3893 	sub	a, (hl)
      000F87 23                    3894 	inc	hl
      000F88 1A                    3895 	ld	a, (de)
      000F89 9E                    3896 	sbc	a, (hl)
      000F8A 1A                    3897 	ld	a, (de)
      000F8B 57                    3898 	ld	d, a
      000F8C CB 7E                 3899 	bit	7, (hl)
      000F8E 28 07                 3900 	jr	Z, 00410$
      000F90 CB 7A                 3901 	bit	7, d
      000F92 20 08                 3902 	jr	NZ, 00411$
      000F94 BF                    3903 	cp	a, a
      000F95 18 05                 3904 	jr	00411$
      000F97                       3905 00410$:
      000F97 CB 7A                 3906 	bit	7, d
      000F99 28 01                 3907 	jr	Z, 00411$
      000F9B 37                    3908 	scf
      000F9C                       3909 00411$:
      000F9C 30 0B                 3910 	jr	NC, 00104$
                                   3911 ;src/main.c:418: enemies[i].xSpeed += enemies[i].accel;
      000F9E 79                    3912 	ld	a, c
      000F9F 80                    3913 	add	a, b
      000FA0 4F                    3914 	ld	c, a
      000FA1 F8 06                 3915 	ldhl	sp,	#6
      000FA3 2A                    3916 	ld	a,	(hl+)
      000FA4 66                    3917 	ld	h, (hl)
      000FA5 6F                    3918 	ld	l, a
      000FA6 71                    3919 	ld	(hl), c
      000FA7 18 38                 3920 	jr	00112$
      000FA9                       3921 00104$:
                                   3922 ;src/main.c:421: enemies[i].xSpeed -= enemies[i].accel;
      000FA9 79                    3923 	ld	a, c
      000FAA 90                    3924 	sub	a, b
      000FAB 4F                    3925 	ld	c, a
      000FAC F8 06                 3926 	ldhl	sp,	#6
      000FAE 2A                    3927 	ld	a,	(hl+)
      000FAF 66                    3928 	ld	h, (hl)
      000FB0 6F                    3929 	ld	l, a
      000FB1 71                    3930 	ld	(hl), c
      000FB2 18 2D                 3931 	jr	00112$
      000FB4                       3932 00111$:
                                   3933 ;src/main.c:425: if (enemies[i].xSpeed > 0) enemies[i].xSpeed--;
      000FB4 59                    3934 	ld	e, c
      000FB5 AF                    3935 	xor	a, a
      000FB6 57                    3936 	ld	d, a
      000FB7 91                    3937 	sub	a, c
      000FB8 CB 7B                 3938 	bit	7, e
      000FBA 28 07                 3939 	jr	Z, 00412$
      000FBC CB 7A                 3940 	bit	7, d
      000FBE 20 08                 3941 	jr	NZ, 00413$
      000FC0 BF                    3942 	cp	a, a
      000FC1 18 05                 3943 	jr	00413$
      000FC3                       3944 00412$:
      000FC3 CB 7A                 3945 	bit	7, d
      000FC5 28 01                 3946 	jr	Z, 00413$
      000FC7 37                    3947 	scf
      000FC8                       3948 00413$:
      000FC8 30 07                 3949 	jr	NC, 00107$
      000FCA 0D                    3950 	dec	c
      000FCB F8 06                 3951 	ldhl	sp,	#6
      000FCD 2A                    3952 	ld	a,	(hl+)
      000FCE 66                    3953 	ld	h, (hl)
      000FCF 6F                    3954 	ld	l, a
      000FD0 71                    3955 	ld	(hl), c
      000FD1                       3956 00107$:
      000FD1 F8 06                 3957 	ldhl	sp,#6
      000FD3 2A                    3958 	ld	a, (hl+)
      000FD4 5F                    3959 	ld	e, a
      000FD5 56                    3960 	ld	d, (hl)
      000FD6 1A                    3961 	ld	a, (de)
      000FD7 4F                    3962 	ld	c, a
                                   3963 ;src/main.c:426: if (enemies[i].xSpeed < 0) enemies[i].xSpeed++;
      000FD8 CB 79                 3964 	bit	7, c
      000FDA 28 05                 3965 	jr	Z, 00112$
      000FDC 0C                    3966 	inc	c
      000FDD 3A                    3967 	ld	a, (hl-)
      000FDE 6E                    3968 	ld	l, (hl)
      000FDF 67                    3969 	ld	h, a
      000FE0 71                    3970 	ld	(hl), c
      000FE1                       3971 00112$:
                                   3972 ;src/main.c:429: if (abs(enemies[i].y - playerDrawY) > 8) {
      000FE1 F8 04                 3973 	ldhl	sp,#4
      000FE3 2A                    3974 	ld	a, (hl+)
      000FE4 5F                    3975 	ld	e, a
      000FE5 56                    3976 	ld	d, (hl)
      000FE6 1A                    3977 	ld	a, (de)
      000FE7 4F                    3978 	ld	c, a
      000FE8 13                    3979 	inc	de
      000FE9 1A                    3980 	ld	a, (de)
      000FEA 47                    3981 	ld	b, a
      000FEB 79                    3982 	ld	a, c
      000FEC 21r8Fr00              3983 	ld	hl, #_playerDrawY
      000FEF 5E                    3984 	ld	e, (hl)
      000FF0 93                    3985 	sub	a, e
      000FF1 6F                    3986 	ld	l, a
                                   3987 ;	spillPairReg hl
                                   3988 ;	spillPairReg hl
                                   3989 ;src/main.c:324: if (value >= 0) return value;
      000FF2 CB 7D                 3990 	bit	7, l
      000FF4 20 06                 3991 	jr	NZ, 00173$
      000FF6 7D                    3992 	ld	a, l
      000FF7 F8 0E                 3993 	ldhl	sp,	#14
      000FF9 77                    3994 	ld	(hl), a
      000FFA 18 06                 3995 	jr	00175$
      000FFC                       3996 00173$:
                                   3997 ;src/main.c:325: else return - value;
      000FFC AF                    3998 	xor	a, a
      000FFD 95                    3999 	sub	a, l
      000FFE 5F                    4000 	ld	e, a
      000FFF F8 0E                 4001 	ldhl	sp,	#14
      001001 73                    4002 	ld	(hl), e
                                   4003 ;src/main.c:429: if (abs(enemies[i].y - playerDrawY) > 8) {
      001002                       4004 00175$:
                                   4005 ;src/main.c:431: enemies[i].ySpeed += enemies[i].accel;
      001002 F8 02                 4006 	ldhl	sp,#2
      001004 2A                    4007 	ld	a, (hl+)
      001005 5F                    4008 	ld	e, a
      001006 56                    4009 	ld	d, (hl)
      001007 21 0F 00              4010 	ld	hl, #0x000f
      00100A 19                    4011 	add	hl, de
      00100B E5                    4012 	push	hl
      00100C 7D                    4013 	ld	a, l
      00100D F8 0A                 4014 	ldhl	sp,	#10
      00100F 77                    4015 	ld	(hl), a
      001010 E1                    4016 	pop	hl
      001011 7C                    4017 	ld	a, h
      001012 F8 09                 4018 	ldhl	sp,	#9
                                   4019 ;src/main.c:438: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001014 32                    4020 	ld	(hl-), a
      001015 2A                    4021 	ld	a, (hl+)
      001016 5F                    4022 	ld	e, a
      001017 2A                    4023 	ld	a, (hl+)
      001018 23                    4024 	inc	hl
      001019 57                    4025 	ld	d, a
      00101A 1A                    4026 	ld	a, (de)
      00101B 77                    4027 	ld	(hl), a
                                   4028 ;src/main.c:429: if (abs(enemies[i].y - playerDrawY) > 8) {
      00101C F8 0E                 4029 	ldhl	sp,	#14
      00101E 5E                    4030 	ld	e, (hl)
      00101F 3E 08                 4031 	ld	a,#0x08
      001021 57                    4032 	ld	d,a
      001022 96                    4033 	sub	a, (hl)
      001023 CB 7B                 4034 	bit	7, e
      001025 28 07                 4035 	jr	Z, 00414$
      001027 CB 7A                 4036 	bit	7, d
      001029 20 08                 4037 	jr	NZ, 00415$
      00102B BF                    4038 	cp	a, a
      00102C 18 05                 4039 	jr	00415$
      00102E                       4040 00414$:
      00102E CB 7A                 4041 	bit	7, d
      001030 28 01                 4042 	jr	Z, 00415$
      001032 37                    4043 	scf
      001033                       4044 00415$:
      001033 30 44                 4045 	jr	NC, 00121$
                                   4046 ;src/main.c:430: if (enemies[i].y < playerDrawY) {
      001035 FAr8Fr00              4047 	ld	a, (#_playerDrawY)
      001038 F8 0C                 4048 	ldhl	sp,	#12
      00103A 22                    4049 	ld	(hl+), a
                                   4050 ;src/main.c:431: enemies[i].ySpeed += enemies[i].accel;
      00103B AF                    4051 	xor	a, a
      00103C 22                    4052 	ld	(hl+), a
      00103D D1                    4053 	pop	de
      00103E D5                    4054 	push	de
      00103F 1A                    4055 	ld	a, (de)
                                   4056 ;src/main.c:430: if (enemies[i].y < playerDrawY) {
      001040 32                    4057 	ld	(hl-), a
      001041 2B                    4058 	dec	hl
      001042 79                    4059 	ld	a, c
      001043 96                    4060 	sub	a, (hl)
      001044 23                    4061 	inc	hl
      001045 78                    4062 	ld	a, b
      001046 9E                    4063 	sbc	a, (hl)
      001047 78                    4064 	ld	a, b
      001048 57                    4065 	ld	d, a
      001049 CB 7E                 4066 	bit	7, (hl)
      00104B 28 07                 4067 	jr	Z, 00416$
      00104D CB 7A                 4068 	bit	7, d
      00104F 20 08                 4069 	jr	NZ, 00417$
      001051 BF                    4070 	cp	a, a
      001052 18 05                 4071 	jr	00417$
      001054                       4072 00416$:
      001054 CB 7A                 4073 	bit	7, d
      001056 28 01                 4074 	jr	Z, 00417$
      001058 37                    4075 	scf
      001059                       4076 00417$:
      001059 30 0F                 4077 	jr	NC, 00114$
                                   4078 ;src/main.c:431: enemies[i].ySpeed += enemies[i].accel;
      00105B F8 0B                 4079 	ldhl	sp,	#11
      00105D 7E                    4080 	ld	a, (hl)
      00105E F8 0E                 4081 	ldhl	sp,	#14
      001060 86                    4082 	add	a, (hl)
      001061 4F                    4083 	ld	c, a
      001062 F8 08                 4084 	ldhl	sp,	#8
      001064 2A                    4085 	ld	a,	(hl+)
      001065 66                    4086 	ld	h, (hl)
      001066 6F                    4087 	ld	l, a
      001067 71                    4088 	ld	(hl), c
      001068 18 41                 4089 	jr	00122$
      00106A                       4090 00114$:
                                   4091 ;src/main.c:434: enemies[i].ySpeed -= enemies[i].accel;
      00106A F8 0B                 4092 	ldhl	sp,	#11
      00106C 7E                    4093 	ld	a, (hl)
      00106D F8 0E                 4094 	ldhl	sp,	#14
      00106F 96                    4095 	sub	a, (hl)
      001070 4F                    4096 	ld	c, a
      001071 F8 08                 4097 	ldhl	sp,	#8
      001073 2A                    4098 	ld	a,	(hl+)
      001074 66                    4099 	ld	h, (hl)
      001075 6F                    4100 	ld	l, a
      001076 71                    4101 	ld	(hl), c
      001077 18 32                 4102 	jr	00122$
      001079                       4103 00121$:
                                   4104 ;src/main.c:438: if (enemies[i].ySpeed > 0) enemies[i].ySpeed--;
      001079 F8 0B                 4105 	ldhl	sp,	#11
      00107B 5E                    4106 	ld	e, (hl)
      00107C AF                    4107 	xor	a, a
      00107D 57                    4108 	ld	d, a
      00107E 96                    4109 	sub	a, (hl)
      00107F CB 7B                 4110 	bit	7, e
      001081 28 07                 4111 	jr	Z, 00418$
      001083 CB 7A                 4112 	bit	7, d
      001085 20 08                 4113 	jr	NZ, 00419$
      001087 BF                    4114 	cp	a, a
      001088 18 05                 4115 	jr	00419$
      00108A                       4116 00418$:
      00108A CB 7A                 4117 	bit	7, d
      00108C 28 01                 4118 	jr	Z, 00419$
      00108E 37                    4119 	scf
      00108F                       4120 00419$:
      00108F 30 0A                 4121 	jr	NC, 00117$
      001091 F8 0B                 4122 	ldhl	sp,	#11
      001093 4E                    4123 	ld	c, (hl)
      001094 0D                    4124 	dec	c
      001095 F8 08                 4125 	ldhl	sp,	#8
      001097 2A                    4126 	ld	a,	(hl+)
      001098 66                    4127 	ld	h, (hl)
      001099 6F                    4128 	ld	l, a
      00109A 71                    4129 	ld	(hl), c
      00109B                       4130 00117$:
      00109B F8 08                 4131 	ldhl	sp,#8
      00109D 2A                    4132 	ld	a, (hl+)
      00109E 5F                    4133 	ld	e, a
      00109F 56                    4134 	ld	d, (hl)
      0010A0 1A                    4135 	ld	a, (de)
      0010A1 4F                    4136 	ld	c, a
                                   4137 ;src/main.c:439: if (enemies[i].ySpeed < 0) enemies[i].ySpeed++;
      0010A2 CB 79                 4138 	bit	7, c
      0010A4 28 05                 4139 	jr	Z, 00122$
      0010A6 0C                    4140 	inc	c
      0010A7 3A                    4141 	ld	a, (hl-)
      0010A8 6E                    4142 	ld	l, (hl)
      0010A9 67                    4143 	ld	h, a
      0010AA 71                    4144 	ld	(hl), c
      0010AB                       4145 00122$:
                                   4146 ;src/main.c:443: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      0010AB F8 02                 4147 	ldhl	sp,#2
      0010AD 2A                    4148 	ld	a, (hl+)
      0010AE 5F                    4149 	ld	e, a
      0010AF 56                    4150 	ld	d, (hl)
      0010B0 21 0C 00              4151 	ld	hl, #0x000c
      0010B3 19                    4152 	add	hl, de
      0010B4 E5                    4153 	push	hl
      0010B5 7D                    4154 	ld	a, l
      0010B6 F8 0C                 4155 	ldhl	sp,	#12
      0010B8 77                    4156 	ld	(hl), a
      0010B9 E1                    4157 	pop	hl
      0010BA 7C                    4158 	ld	a, h
      0010BB F8 0B                 4159 	ldhl	sp,	#11
      0010BD 32                    4160 	ld	(hl-), a
      0010BE 2A                    4161 	ld	a, (hl+)
      0010BF 5F                    4162 	ld	e, a
      0010C0 2A                    4163 	ld	a, (hl+)
      0010C1 57                    4164 	ld	d, a
      0010C2 1A                    4165 	ld	a, (de)
      0010C3 4F                    4166 	ld	c, a
      0010C4 22                    4167 	ld	(hl+), a
      0010C5 AF                    4168 	xor	a, a
      0010C6 91                    4169 	sub	a, c
      0010C7 77                    4170 	ld	(hl), a
      0010C8 F8 06                 4171 	ldhl	sp,#6
      0010CA 2A                    4172 	ld	a, (hl+)
      0010CB 5F                    4173 	ld	e, a
      0010CC 56                    4174 	ld	d, (hl)
      0010CD 1A                    4175 	ld	a, (de)
      0010CE F8 0E                 4176 	ldhl	sp,	#14
                                   4177 ;src/main.c:305: return (value < min) ? min : (value > max) ? max : value;
      0010D0 32                    4178 	ld	(hl-), a
      0010D1 2A                    4179 	ld	a, (hl+)
      0010D2 5F                    4180 	ld	e, a
      0010D3 56                    4181 	ld	d, (hl)
      0010D4 3A                    4182 	ld	a, (hl-)
      0010D5 96                    4183 	sub	a, (hl)
      0010D6 CB 7B                 4184 	bit	7, e
      0010D8 28 07                 4185 	jr	Z, 00420$
      0010DA CB 7A                 4186 	bit	7, d
      0010DC 20 08                 4187 	jr	NZ, 00421$
      0010DE BF                    4188 	cp	a, a
      0010DF 18 05                 4189 	jr	00421$
      0010E1                       4190 00420$:
      0010E1 CB 7A                 4191 	bit	7, d
      0010E3 28 01                 4192 	jr	Z, 00421$
      0010E5 37                    4193 	scf
      0010E6                       4194 00421$:
      0010E6 30 06                 4195 	jr	NC, 00202$
      0010E8 F8 0D                 4196 	ldhl	sp,	#13
      0010EA 2A                    4197 	ld	a, (hl+)
      0010EB 77                    4198 	ld	(hl), a
      0010EC 18 26                 4199 	jr	00203$
      0010EE                       4200 00202$:
      0010EE F8 0E                 4201 	ldhl	sp,	#14
      0010F0 3A                    4202 	ld	a, (hl-)
      0010F1 2B                    4203 	dec	hl
      0010F2 5F                    4204 	ld	e, a
      0010F3 56                    4205 	ld	d, (hl)
      0010F4 2A                    4206 	ld	a, (hl+)
      0010F5 23                    4207 	inc	hl
      0010F6 96                    4208 	sub	a, (hl)
      0010F7 CB 7B                 4209 	bit	7, e
      0010F9 28 07                 4210 	jr	Z, 00422$
      0010FB CB 7A                 4211 	bit	7, d
      0010FD 20 08                 4212 	jr	NZ, 00423$
      0010FF BF                    4213 	cp	a, a
      001100 18 05                 4214 	jr	00423$
      001102                       4215 00422$:
      001102 CB 7A                 4216 	bit	7, d
      001104 28 01                 4217 	jr	Z, 00423$
      001106 37                    4218 	scf
      001107                       4219 00423$:
      001107 30 05                 4220 	jr	NC, 00204$
      001109 F8 0C                 4221 	ldhl	sp,	#12
      00110B 5E                    4222 	ld	e, (hl)
      00110C 18 03                 4223 	jr	00205$
      00110E                       4224 00204$:
      00110E F8 0E                 4225 	ldhl	sp,	#14
      001110 5E                    4226 	ld	e, (hl)
      001111                       4227 00205$:
      001111 F8 0E                 4228 	ldhl	sp,	#14
      001113 73                    4229 	ld	(hl), e
      001114                       4230 00203$:
      001114 F8 0E                 4231 	ldhl	sp,	#14
      001116 4E                    4232 	ld	c, (hl)
                                   4233 ;src/main.c:443: enemies[i].xSpeed = clamp(enemies[i].xSpeed, -enemies[i].speed, enemies[i].speed);
      001117 F8 06                 4234 	ldhl	sp,	#6
      001119 2A                    4235 	ld	a,	(hl+)
      00111A 66                    4236 	ld	h, (hl)
      00111B 6F                    4237 	ld	l, a
      00111C 71                    4238 	ld	(hl), c
                                   4239 ;src/main.c:444: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      00111D F8 0A                 4240 	ldhl	sp,#10
      00111F 2A                    4241 	ld	a, (hl+)
      001120 5F                    4242 	ld	e, a
      001121 3A                    4243 	ld	a, (hl-)
      001122 2B                    4244 	dec	hl
      001123 2B                    4245 	dec	hl
      001124 57                    4246 	ld	d, a
      001125 1A                    4247 	ld	a, (de)
      001126 47                    4248 	ld	b, a
      001127 48                    4249 	ld	c, b
      001128 AF                    4250 	xor	a, a
      001129 90                    4251 	sub	a, b
      00112A 47                    4252 	ld	b, a
      00112B 2A                    4253 	ld	a, (hl+)
      00112C 5F                    4254 	ld	e, a
      00112D 56                    4255 	ld	d, (hl)
      00112E 1A                    4256 	ld	a, (de)
      00112F 6F                    4257 	ld	l, a
                                   4258 ;	spillPairReg hl
                                   4259 ;	spillPairReg hl
                                   4260 ;src/main.c:305: return (value < min) ? min : (value > max) ? max : value;
      001130 58                    4261 	ld	e, b
      001131 7D                    4262 	ld	a,l
      001132 57                    4263 	ld	d,a
      001133 90                    4264 	sub	a, b
      001134 CB 7B                 4265 	bit	7, e
      001136 28 07                 4266 	jr	Z, 00424$
      001138 CB 7A                 4267 	bit	7, d
      00113A 20 08                 4268 	jr	NZ, 00425$
      00113C BF                    4269 	cp	a, a
      00113D 18 05                 4270 	jr	00425$
      00113F                       4271 00424$:
      00113F CB 7A                 4272 	bit	7, d
      001141 28 01                 4273 	jr	Z, 00425$
      001143 37                    4274 	scf
      001144                       4275 00425$:
      001144 30 03                 4276 	jr	NC, 00206$
      001146 48                    4277 	ld	c, b
      001147 18 17                 4278 	jr	00207$
      001149                       4279 00206$:
      001149 5D                    4280 	ld	e, l
      00114A 79                    4281 	ld	a,c
      00114B 57                    4282 	ld	d,a
      00114C 95                    4283 	sub	a, l
      00114D CB 7B                 4284 	bit	7, e
      00114F 28 07                 4285 	jr	Z, 00426$
      001151 CB 7A                 4286 	bit	7, d
      001153 20 08                 4287 	jr	NZ, 00427$
      001155 BF                    4288 	cp	a, a
      001156 18 05                 4289 	jr	00427$
      001158                       4290 00426$:
      001158 CB 7A                 4291 	bit	7, d
      00115A 28 01                 4292 	jr	Z, 00427$
      00115C 37                    4293 	scf
      00115D                       4294 00427$:
      00115D 38 01                 4295 	jr	C, 00209$
      00115F 4D                    4296 	ld	c, l
      001160                       4297 00209$:
      001160                       4298 00207$:
                                   4299 ;src/main.c:444: enemies[i].ySpeed = clamp(enemies[i].ySpeed, -enemies[i].speed, enemies[i].speed);
      001160 F8 08                 4300 	ldhl	sp,	#8
      001162 2A                    4301 	ld	a,	(hl+)
      001163 66                    4302 	ld	h, (hl)
      001164 6F                    4303 	ld	l, a
      001165 71                    4304 	ld	(hl), c
                                   4305 ;src/main.c:447: enemies[i].xReserve += enemies[i].xSpeed;
      001166 F8 02                 4306 	ldhl	sp,#2
      001168 2A                    4307 	ld	a, (hl+)
      001169 5F                    4308 	ld	e, a
      00116A 56                    4309 	ld	d, (hl)
      00116B 21 04 00              4310 	ld	hl, #0x0004
      00116E 19                    4311 	add	hl, de
      00116F E5                    4312 	push	hl
      001170 7D                    4313 	ld	a, l
      001171 F8 0F                 4314 	ldhl	sp,	#15
      001173 77                    4315 	ld	(hl), a
      001174 E1                    4316 	pop	hl
      001175 7C                    4317 	ld	a, h
      001176 F8 0E                 4318 	ldhl	sp,	#14
      001178 32                    4319 	ld	(hl-), a
      001179 2A                    4320 	ld	a, (hl+)
      00117A 5F                    4321 	ld	e, a
      00117B 56                    4322 	ld	d, (hl)
      00117C 1A                    4323 	ld	a, (de)
      00117D 47                    4324 	ld	b, a
      00117E F8 06                 4325 	ldhl	sp,#6
      001180 2A                    4326 	ld	a, (hl+)
      001181 5F                    4327 	ld	e, a
      001182 56                    4328 	ld	d, (hl)
      001183 1A                    4329 	ld	a, (de)
      001184 80                    4330 	add	a, b
      001185 47                    4331 	ld	b, a
      001186 F8 0D                 4332 	ldhl	sp,	#13
      001188 2A                    4333 	ld	a,	(hl+)
      001189 66                    4334 	ld	h, (hl)
      00118A 6F                    4335 	ld	l, a
      00118B 70                    4336 	ld	(hl), b
                                   4337 ;src/main.c:448: enemies[i].yReserve += enemies[i].ySpeed;
      00118C F8 02                 4338 	ldhl	sp,#2
      00118E 2A                    4339 	ld	a, (hl+)
      00118F 5F                    4340 	ld	e, a
      001190 56                    4341 	ld	d, (hl)
      001191 21 05 00              4342 	ld	hl, #0x0005
      001194 19                    4343 	add	hl, de
      001195 E5                    4344 	push	hl
      001196 7D                    4345 	ld	a, l
      001197 F8 0C                 4346 	ldhl	sp,	#12
      001199 77                    4347 	ld	(hl), a
      00119A E1                    4348 	pop	hl
      00119B 7C                    4349 	ld	a, h
      00119C F8 0B                 4350 	ldhl	sp,	#11
      00119E 32                    4351 	ld	(hl-), a
      00119F 2A                    4352 	ld	a, (hl+)
      0011A0 5F                    4353 	ld	e, a
      0011A1 56                    4354 	ld	d, (hl)
      0011A2 1A                    4355 	ld	a, (de)
      0011A3 81                    4356 	add	a, c
      0011A4 4F                    4357 	ld	c, a
      0011A5 3A                    4358 	ld	a, (hl-)
      0011A6 6E                    4359 	ld	l, (hl)
      0011A7 67                    4360 	ld	h, a
      0011A8 71                    4361 	ld	(hl), c
                                   4362 ;src/main.c:452: if (enemies[i].xReserve >> 3 > 0) {
      0011A9 F8 0D                 4363 	ldhl	sp,#13
      0011AB 2A                    4364 	ld	a, (hl+)
      0011AC 5F                    4365 	ld	e, a
      0011AD 3A                    4366 	ld	a, (hl-)
      0011AE 2B                    4367 	dec	hl
      0011AF 57                    4368 	ld	d, a
      0011B0 1A                    4369 	ld	a, (de)
      0011B1 77                    4370 	ld	(hl), a
      0011B2 CB 28                 4371 	sra	b
      0011B4 CB 28                 4372 	sra	b
      0011B6 CB 28                 4373 	sra	b
      0011B8 58                    4374 	ld	e, b
      0011B9 AF                    4375 	xor	a, a
      0011BA 57                    4376 	ld	d, a
      0011BB 90                    4377 	sub	a, b
      0011BC CB 7B                 4378 	bit	7, e
      0011BE 28 07                 4379 	jr	Z, 00428$
      0011C0 CB 7A                 4380 	bit	7, d
      0011C2 20 08                 4381 	jr	NZ, 00429$
      0011C4 BF                    4382 	cp	a, a
      0011C5 18 05                 4383 	jr	00429$
      0011C7                       4384 00428$:
      0011C7 CB 7A                 4385 	bit	7, d
      0011C9 28 01                 4386 	jr	Z, 00429$
      0011CB 37                    4387 	scf
      0011CC                       4388 00429$:
      0011CC 30 3F                 4389 	jr	NC, 00126$
                                   4390 ;src/main.c:453: int8_t xMovement = enemies[i].xReserve >> 3;
      0011CE F8 0C                 4391 	ldhl	sp,	#12
      0011D0 7E                    4392 	ld	a, (hl)
      0011D1 CB 2F                 4393 	sra	a
      0011D3 CB 2F                 4394 	sra	a
      0011D5 CB 2F                 4395 	sra	a
      0011D7 77                    4396 	ld	(hl), a
                                   4397 ;src/main.c:454: enemies[i].x += xMovement;
      0011D8 F8 02                 4398 	ldhl	sp,#2
      0011DA 2A                    4399 	ld	a, (hl+)
      0011DB 5F                    4400 	ld	e, a
      0011DC 56                    4401 	ld	d, (hl)
      0011DD 1A                    4402 	ld	a, (de)
      0011DE 4F                    4403 	ld	c, a
      0011DF 13                    4404 	inc	de
      0011E0 1A                    4405 	ld	a, (de)
      0011E1 47                    4406 	ld	b, a
      0011E2 F8 0C                 4407 	ldhl	sp,	#12
      0011E4 7E                    4408 	ld	a, (hl)
      0011E5 5F                    4409 	ld	e, a
      0011E6 07                    4410 	rlca
      0011E7 9F                    4411 	sbc	a, a
      0011E8 57                    4412 	ld	d, a
      0011E9 69                    4413 	ld	l, c
                                   4414 ;	spillPairReg hl
                                   4415 ;	spillPairReg hl
      0011EA 60                    4416 	ld	h, b
                                   4417 ;	spillPairReg hl
                                   4418 ;	spillPairReg hl
      0011EB 19                    4419 	add	hl, de
      0011EC 4D                    4420 	ld	c, l
      0011ED 44                    4421 	ld	b, h
      0011EE F8 02                 4422 	ldhl	sp,	#2
      0011F0 2A                    4423 	ld	a,	(hl+)
      0011F1 66                    4424 	ld	h, (hl)
      0011F2 6F                    4425 	ld	l, a
      0011F3 79                    4426 	ld	a, c
      0011F4 22                    4427 	ld	(hl+), a
      0011F5 70                    4428 	ld	(hl), b
                                   4429 ;src/main.c:455: enemies[i].xReserve -=  xMovement << 3;
      0011F6 F8 0D                 4430 	ldhl	sp,#13
      0011F8 2A                    4431 	ld	a, (hl+)
      0011F9 5F                    4432 	ld	e, a
      0011FA 3A                    4433 	ld	a, (hl-)
      0011FB 2B                    4434 	dec	hl
      0011FC 57                    4435 	ld	d, a
      0011FD 1A                    4436 	ld	a, (de)
      0011FE F5                    4437 	push	af
      0011FF 2A                    4438 	ld	a, (hl+)
      001200 87                    4439 	add	a, a
      001201 87                    4440 	add	a, a
      001202 87                    4441 	add	a, a
      001203 4F                    4442 	ld	c, a
      001204 F1                    4443 	pop	af
      001205 91                    4444 	sub	a, c
      001206 4F                    4445 	ld	c, a
      001207 2A                    4446 	ld	a,	(hl+)
      001208 66                    4447 	ld	h, (hl)
      001209 6F                    4448 	ld	l, a
      00120A 71                    4449 	ld	(hl), c
      00120B 18 69                 4450 	jr	00127$
      00120D                       4451 00126$:
                                   4452 ;src/main.c:458: else if ((-enemies[i].xReserve) >> 3 > 0){
      00120D F8 0C                 4453 	ldhl	sp,	#12
      00120F 7E                    4454 	ld	a, (hl)
      001210 4F                    4455 	ld	c, a
      001211 07                    4456 	rlca
      001212 9F                    4457 	sbc	a, a
      001213 47                    4458 	ld	b, a
      001214 AF                    4459 	xor	a, a
      001215 91                    4460 	sub	a, c
      001216 4F                    4461 	ld	c, a
      001217 9F                    4462 	sbc	a, a
      001218 90                    4463 	sub	a, b
      001219 47                    4464 	ld	b, a
      00121A CB 28                 4465 	sra	b
      00121C CB 19                 4466 	rr	c
      00121E CB 28                 4467 	sra	b
      001220 CB 19                 4468 	rr	c
      001222 CB 28                 4469 	sra	b
      001224 CB 19                 4470 	rr	c
      001226 58                    4471 	ld	e, b
      001227 AF                    4472 	xor	a, a
      001228 57                    4473 	ld	d, a
      001229 B9                    4474 	cp	a, c
      00122A 98                    4475 	sbc	a, b
      00122B CB 7B                 4476 	bit	7, e
      00122D 28 07                 4477 	jr	Z, 00430$
      00122F CB 7A                 4478 	bit	7, d
      001231 20 08                 4479 	jr	NZ, 00431$
      001233 BF                    4480 	cp	a, a
      001234 18 05                 4481 	jr	00431$
      001236                       4482 00430$:
      001236 CB 7A                 4483 	bit	7, d
      001238 28 01                 4484 	jr	Z, 00431$
      00123A 37                    4485 	scf
      00123B                       4486 00431$:
      00123B 30 39                 4487 	jr	NC, 00127$
                                   4488 ;src/main.c:459: int8_t xMovement = -((-enemies[i].xReserve) >> 3);
      00123D AF                    4489 	xor	a, a
      00123E 91                    4490 	sub	a, c
      00123F 4F                    4491 	ld	c, a
      001240 F8 0C                 4492 	ldhl	sp,	#12
      001242 71                    4493 	ld	(hl), c
                                   4494 ;src/main.c:460: enemies[i].x += xMovement;
      001243 F8 02                 4495 	ldhl	sp,#2
      001245 2A                    4496 	ld	a, (hl+)
      001246 5F                    4497 	ld	e, a
      001247 56                    4498 	ld	d, (hl)
      001248 1A                    4499 	ld	a, (de)
      001249 4F                    4500 	ld	c, a
      00124A 13                    4501 	inc	de
      00124B 1A                    4502 	ld	a, (de)
      00124C 47                    4503 	ld	b, a
      00124D F8 0C                 4504 	ldhl	sp,	#12
      00124F 7E                    4505 	ld	a, (hl)
      001250 5F                    4506 	ld	e, a
      001251 07                    4507 	rlca
      001252 9F                    4508 	sbc	a, a
      001253 57                    4509 	ld	d, a
      001254 69                    4510 	ld	l, c
                                   4511 ;	spillPairReg hl
                                   4512 ;	spillPairReg hl
      001255 60                    4513 	ld	h, b
                                   4514 ;	spillPairReg hl
                                   4515 ;	spillPairReg hl
      001256 19                    4516 	add	hl, de
      001257 4D                    4517 	ld	c, l
      001258 44                    4518 	ld	b, h
      001259 F8 02                 4519 	ldhl	sp,	#2
      00125B 2A                    4520 	ld	a,	(hl+)
      00125C 66                    4521 	ld	h, (hl)
      00125D 6F                    4522 	ld	l, a
      00125E 79                    4523 	ld	a, c
      00125F 22                    4524 	ld	(hl+), a
      001260 70                    4525 	ld	(hl), b
                                   4526 ;src/main.c:461: enemies[i].xReserve +=  (-xMovement) << 3;
      001261 F8 0D                 4527 	ldhl	sp,#13
      001263 2A                    4528 	ld	a, (hl+)
      001264 5F                    4529 	ld	e, a
      001265 3A                    4530 	ld	a, (hl-)
      001266 2B                    4531 	dec	hl
      001267 57                    4532 	ld	d, a
      001268 1A                    4533 	ld	a, (de)
      001269 4F                    4534 	ld	c, a
      00126A AF                    4535 	xor	a, a
      00126B 96                    4536 	sub	a, (hl)
      00126C 23                    4537 	inc	hl
      00126D 87                    4538 	add	a, a
      00126E 87                    4539 	add	a, a
      00126F 87                    4540 	add	a, a
      001270 81                    4541 	add	a, c
      001271 4F                    4542 	ld	c, a
      001272 2A                    4543 	ld	a,	(hl+)
      001273 66                    4544 	ld	h, (hl)
      001274 6F                    4545 	ld	l, a
      001275 71                    4546 	ld	(hl), c
      001276                       4547 00127$:
                                   4548 ;src/main.c:448: enemies[i].yReserve += enemies[i].ySpeed;
      001276 F8 0A                 4549 	ldhl	sp,#10
      001278 2A                    4550 	ld	a, (hl+)
      001279 5F                    4551 	ld	e, a
      00127A 56                    4552 	ld	d, (hl)
      00127B 1A                    4553 	ld	a, (de)
      00127C 4F                    4554 	ld	c, a
                                   4555 ;src/main.c:464: if (enemies[i].yReserve >> 3 > 0) {
      00127D 41                    4556 	ld	b, c
      00127E CB 28                 4557 	sra	b
      001280 CB 28                 4558 	sra	b
      001282 CB 28                 4559 	sra	b
      001284 58                    4560 	ld	e, b
      001285 AF                    4561 	xor	a, a
      001286 57                    4562 	ld	d, a
      001287 90                    4563 	sub	a, b
      001288 CB 7B                 4564 	bit	7, e
      00128A 28 07                 4565 	jr	Z, 00432$
      00128C CB 7A                 4566 	bit	7, d
      00128E 20 08                 4567 	jr	NZ, 00433$
      001290 BF                    4568 	cp	a, a
      001291 18 05                 4569 	jr	00433$
      001293                       4570 00432$:
      001293 CB 7A                 4571 	bit	7, d
      001295 28 01                 4572 	jr	Z, 00433$
      001297 37                    4573 	scf
      001298                       4574 00433$:
      001298 30 3A                 4575 	jr	NC, 00131$
                                   4576 ;src/main.c:465: int8_t yMovement = enemies[i].yReserve >> 3;
      00129A F8 0E                 4577 	ldhl	sp,	#14
      00129C 70                    4578 	ld	(hl), b
                                   4579 ;src/main.c:466: enemies[i].y += yMovement;
      00129D F8 04                 4580 	ldhl	sp,#4
      00129F 2A                    4581 	ld	a, (hl+)
      0012A0 5F                    4582 	ld	e, a
      0012A1 56                    4583 	ld	d, (hl)
      0012A2 1A                    4584 	ld	a, (de)
      0012A3 4F                    4585 	ld	c, a
      0012A4 13                    4586 	inc	de
      0012A5 1A                    4587 	ld	a, (de)
      0012A6 47                    4588 	ld	b, a
      0012A7 F8 0E                 4589 	ldhl	sp,	#14
      0012A9 7E                    4590 	ld	a, (hl)
      0012AA 5F                    4591 	ld	e, a
      0012AB 07                    4592 	rlca
      0012AC 9F                    4593 	sbc	a, a
      0012AD 57                    4594 	ld	d, a
      0012AE 69                    4595 	ld	l, c
                                   4596 ;	spillPairReg hl
                                   4597 ;	spillPairReg hl
      0012AF 60                    4598 	ld	h, b
                                   4599 ;	spillPairReg hl
                                   4600 ;	spillPairReg hl
      0012B0 19                    4601 	add	hl, de
      0012B1 4D                    4602 	ld	c, l
      0012B2 44                    4603 	ld	b, h
      0012B3 F8 04                 4604 	ldhl	sp,	#4
      0012B5 2A                    4605 	ld	a,	(hl+)
      0012B6 66                    4606 	ld	h, (hl)
      0012B7 6F                    4607 	ld	l, a
      0012B8 79                    4608 	ld	a, c
      0012B9 22                    4609 	ld	(hl+), a
      0012BA 70                    4610 	ld	(hl), b
                                   4611 ;src/main.c:467: enemies[i].yReserve -=  yMovement << 3;
      0012BB F8 0A                 4612 	ldhl	sp,#10
      0012BD 2A                    4613 	ld	a, (hl+)
      0012BE 5F                    4614 	ld	e, a
      0012BF 56                    4615 	ld	d, (hl)
      0012C0 1A                    4616 	ld	a, (de)
      0012C1 F5                    4617 	push	af
      0012C2 F8 10                 4618 	ldhl	sp,	#16
      0012C4 7E                    4619 	ld	a, (hl)
      0012C5 87                    4620 	add	a, a
      0012C6 87                    4621 	add	a, a
      0012C7 87                    4622 	add	a, a
      0012C8 4F                    4623 	ld	c, a
      0012C9 F1                    4624 	pop	af
      0012CA 91                    4625 	sub	a, c
      0012CB 4F                    4626 	ld	c, a
      0012CC F8 0A                 4627 	ldhl	sp,	#10
      0012CE 2A                    4628 	ld	a,	(hl+)
      0012CF 66                    4629 	ld	h, (hl)
      0012D0 6F                    4630 	ld	l, a
      0012D1 71                    4631 	ld	(hl), c
      0012D2 18 67                 4632 	jr	00133$
      0012D4                       4633 00131$:
                                   4634 ;src/main.c:469: else if ((-enemies[i].yReserve) >> 3 > 0){
      0012D4 79                    4635 	ld	a, c
      0012D5 07                    4636 	rlca
      0012D6 9F                    4637 	sbc	a, a
      0012D7 47                    4638 	ld	b, a
      0012D8 AF                    4639 	xor	a, a
      0012D9 91                    4640 	sub	a, c
      0012DA 4F                    4641 	ld	c, a
      0012DB 9F                    4642 	sbc	a, a
      0012DC 90                    4643 	sub	a, b
      0012DD 47                    4644 	ld	b, a
      0012DE CB 28                 4645 	sra	b
      0012E0 CB 19                 4646 	rr	c
      0012E2 CB 28                 4647 	sra	b
      0012E4 CB 19                 4648 	rr	c
      0012E6 CB 28                 4649 	sra	b
      0012E8 CB 19                 4650 	rr	c
      0012EA 58                    4651 	ld	e, b
      0012EB AF                    4652 	xor	a, a
      0012EC 57                    4653 	ld	d, a
      0012ED B9                    4654 	cp	a, c
      0012EE 98                    4655 	sbc	a, b
      0012EF CB 7B                 4656 	bit	7, e
      0012F1 28 07                 4657 	jr	Z, 00434$
      0012F3 CB 7A                 4658 	bit	7, d
      0012F5 20 08                 4659 	jr	NZ, 00435$
      0012F7 BF                    4660 	cp	a, a
      0012F8 18 05                 4661 	jr	00435$
      0012FA                       4662 00434$:
      0012FA CB 7A                 4663 	bit	7, d
      0012FC 28 01                 4664 	jr	Z, 00435$
      0012FE 37                    4665 	scf
      0012FF                       4666 00435$:
      0012FF 30 3A                 4667 	jr	NC, 00133$
                                   4668 ;src/main.c:470: int8_t yMovement = -((-enemies[i].yReserve) >> 3);
      001301 AF                    4669 	xor	a, a
      001302 91                    4670 	sub	a, c
      001303 4F                    4671 	ld	c, a
      001304 F8 0E                 4672 	ldhl	sp,	#14
      001306 71                    4673 	ld	(hl), c
                                   4674 ;src/main.c:471: enemies[i].y += yMovement;
      001307 F8 04                 4675 	ldhl	sp,#4
      001309 2A                    4676 	ld	a, (hl+)
      00130A 5F                    4677 	ld	e, a
      00130B 56                    4678 	ld	d, (hl)
      00130C 1A                    4679 	ld	a, (de)
      00130D 4F                    4680 	ld	c, a
      00130E 13                    4681 	inc	de
      00130F 1A                    4682 	ld	a, (de)
      001310 47                    4683 	ld	b, a
      001311 F8 0E                 4684 	ldhl	sp,	#14
      001313 7E                    4685 	ld	a, (hl)
      001314 5F                    4686 	ld	e, a
      001315 07                    4687 	rlca
      001316 9F                    4688 	sbc	a, a
      001317 57                    4689 	ld	d, a
      001318 69                    4690 	ld	l, c
      001319 60                    4691 	ld	h, b
      00131A 19                    4692 	add	hl, de
      00131B 4D                    4693 	ld	c, l
      00131C 44                    4694 	ld	b, h
      00131D F8 04                 4695 	ldhl	sp,	#4
      00131F 2A                    4696 	ld	a,	(hl+)
      001320 66                    4697 	ld	h, (hl)
      001321 6F                    4698 	ld	l, a
      001322 79                    4699 	ld	a, c
      001323 22                    4700 	ld	(hl+), a
      001324 70                    4701 	ld	(hl), b
                                   4702 ;src/main.c:472: enemies[i].yReserve +=  (-yMovement) << 3;
      001325 F8 0A                 4703 	ldhl	sp,#10
      001327 2A                    4704 	ld	a, (hl+)
      001328 5F                    4705 	ld	e, a
      001329 56                    4706 	ld	d, (hl)
      00132A 1A                    4707 	ld	a, (de)
      00132B 4F                    4708 	ld	c, a
      00132C AF                    4709 	xor	a, a
      00132D F8 0E                 4710 	ldhl	sp,	#14
      00132F 96                    4711 	sub	a, (hl)
      001330 87                    4712 	add	a, a
      001331 87                    4713 	add	a, a
      001332 87                    4714 	add	a, a
      001333 81                    4715 	add	a, c
      001334 4F                    4716 	ld	c, a
      001335 F8 0A                 4717 	ldhl	sp,	#10
      001337 2A                    4718 	ld	a,	(hl+)
      001338 66                    4719 	ld	h, (hl)
      001339 6F                    4720 	ld	l, a
      00133A 71                    4721 	ld	(hl), c
      00133B                       4722 00133$:
                                   4723 ;src/main.c:408: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      00133B F8 0F                 4724 	ldhl	sp,	#15
      00133D 34                    4725 	inc	(hl)
      00133E C3r8Ar0E              4726 	jp	00196$
      001341                       4727 00134$:
                                   4728 ;src/main.c:479: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      001341 F8 0F                 4729 	ldhl	sp,	#15
      001343 36 00                 4730 	ld	(hl), #0x00
      001345                       4731 00198$:
      001345 21r5Dr08              4732 	ld	hl, #_ENEMYCOUNT
      001348 4E                    4733 	ld	c, (hl)
      001349 F8 0F                 4734 	ldhl	sp,	#15
      00134B 7E                    4735 	ld	a, (hl)
      00134C 91                    4736 	sub	a, c
      00134D D2rF0r16              4737 	jp	NC, 00200$
                                   4738 ;src/main.c:481: if (enemies[i].alive) {
      001350 7E                    4739 	ld	a, (hl)
      001351 16 00                 4740 	ld	d, #0x00
      001353 87                    4741 	add	a, a
      001354 CB 12                 4742 	rl	d
      001356 87                    4743 	add	a, a
      001357 CB 12                 4744 	rl	d
      001359 87                    4745 	add	a, a
      00135A CB 12                 4746 	rl	d
      00135C 87                    4747 	add	a, a
      00135D CB 12                 4748 	rl	d
      00135F 5F                    4749 	ld	e, a
      001360 21r50r00              4750 	ld	hl, #_enemies
      001363 19                    4751 	add	hl, de
      001364 E5                    4752 	push	hl
      001365 7D                    4753 	ld	a, l
      001366 F8 03                 4754 	ldhl	sp,	#3
      001368 77                    4755 	ld	(hl), a
      001369 E1                    4756 	pop	hl
      00136A 7C                    4757 	ld	a, h
      00136B F8 02                 4758 	ldhl	sp,	#2
      00136D 32                    4759 	ld	(hl-), a
      00136E 2A                    4760 	ld	a, (hl+)
      00136F 5F                    4761 	ld	e, a
      001370 56                    4762 	ld	d, (hl)
      001371 21 09 00              4763 	ld	hl, #0x0009
      001374 19                    4764 	add	hl, de
      001375 E5                    4765 	push	hl
      001376 7D                    4766 	ld	a, l
      001377 F8 05                 4767 	ldhl	sp,	#5
      001379 77                    4768 	ld	(hl), a
      00137A E1                    4769 	pop	hl
      00137B 7C                    4770 	ld	a, h
      00137C F8 04                 4771 	ldhl	sp,	#4
      00137E 32                    4772 	ld	(hl-), a
      00137F 2A                    4773 	ld	a, (hl+)
      001380 5F                    4774 	ld	e, a
      001381 56                    4775 	ld	d, (hl)
      001382 1A                    4776 	ld	a, (de)
      001383 F8 0E                 4777 	ldhl	sp,	#14
      001385 77                    4778 	ld	(hl), a
      001386 7E                    4779 	ld	a, (hl)
      001387 B7                    4780 	or	a, a
      001388 CAr7Er15              4781 	jp	Z, 00157$
                                   4782 ;src/main.c:482: if (enemies[i].visible == 1) {
      00138B F8 01                 4783 	ldhl	sp,#1
      00138D 2A                    4784 	ld	a, (hl+)
      00138E 5F                    4785 	ld	e, a
      00138F 56                    4786 	ld	d, (hl)
      001390 21 0A 00              4787 	ld	hl, #0x000a
      001393 19                    4788 	add	hl, de
      001394 E5                    4789 	push	hl
      001395 7D                    4790 	ld	a, l
      001396 F8 07                 4791 	ldhl	sp,	#7
      001398 77                    4792 	ld	(hl), a
      001399 E1                    4793 	pop	hl
      00139A 7C                    4794 	ld	a, h
      00139B F8 06                 4795 	ldhl	sp,	#6
      00139D 32                    4796 	ld	(hl-), a
      00139E 2A                    4797 	ld	a, (hl+)
      00139F 5F                    4798 	ld	e, a
      0013A0 2A                    4799 	ld	a, (hl+)
      0013A1 57                    4800 	ld	d, a
      0013A2 1A                    4801 	ld	a, (de)
      0013A3 77                    4802 	ld	(hl), a
                                   4803 ;src/main.c:483: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013A4 F8 01                 4804 	ldhl	sp,#1
      0013A6 2A                    4805 	ld	a, (hl+)
      0013A7 5F                    4806 	ld	e, a
      0013A8 56                    4807 	ld	d, (hl)
      0013A9 1A                    4808 	ld	a, (de)
      0013AA F8 08                 4809 	ldhl	sp,	#8
      0013AC 22                    4810 	ld	(hl+), a
      0013AD 13                    4811 	inc	de
      0013AE 1A                    4812 	ld	a, (de)
      0013AF 77                    4813 	ld	(hl), a
      0013B0 F8 01                 4814 	ldhl	sp,	#1
      0013B2 2A                    4815 	ld	a, (hl+)
      0013B3 4F                    4816 	ld	c, a
      0013B4 46                    4817 	ld	b, (hl)
      0013B5 03                    4818 	inc	bc
      0013B6 03                    4819 	inc	bc
                                   4820 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      0013B7 F8 0F                 4821 	ldhl	sp,	#15
      0013B9 5E                    4822 	ld	e, (hl)
                                   4823 ;src/main.c:483: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013BA F8 08                 4824 	ldhl	sp,	#8
      0013BC 2A                    4825 	ld	a, (hl+)
      0013BD 23                    4826 	inc	hl
      0013BE 32                    4827 	ld	(hl-), a
      0013BF 2A                    4828 	ld	a, (hl+)
      0013C0 23                    4829 	inc	hl
                                   4830 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      0013C1 22                    4831 	ld	(hl+), a
      0013C2 7B                    4832 	ld	a, e
      0013C3 87                    4833 	add	a, a
                                   4834 ;src/main.c:483: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013C4 32                    4835 	ld	(hl-), a
      0013C5 2A                    4836 	ld	a, (hl+)
      0013C6 23                    4837 	inc	hl
      0013C7 07                    4838 	rlca
      0013C8 E6 01                 4839 	and	a,#0x01
                                   4840 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      0013CA 32                    4841 	ld	(hl-), a
      0013CB 2A                    4842 	ld	a, (hl+)
      0013CC 23                    4843 	inc	hl
      0013CD C6 0A                 4844 	add	a, #0x0a
      0013CF 77                    4845 	ld	(hl), a
                                   4846 ;src/main.c:482: if (enemies[i].visible == 1) {
      0013D0 F8 07                 4847 	ldhl	sp,	#7
      0013D2 7E                    4848 	ld	a, (hl)
      0013D3 3D                    4849 	dec	a
      0013D4 20 74                 4850 	jr	NZ, 00154$
                                   4851 ;src/main.c:483: if (enemies[i].x < 0 || enemies[i].x > 172 || enemies[i].y < 0 || enemies[i].y > 152) {
      0013D6 F8 0D                 4852 	ldhl	sp,	#13
      0013D8 7E                    4853 	ld	a, (hl)
      0013D9 B7                    4854 	or	a, a
      0013DA 20 43                 4855 	jr	NZ, 00135$
      0013DC F8 0A                 4856 	ldhl	sp,	#10
      0013DE 3E AC                 4857 	ld	a, #0xac
      0013E0 96                    4858 	sub	a, (hl)
      0013E1 23                    4859 	inc	hl
      0013E2 3E 00                 4860 	ld	a, #0x00
      0013E4 9E                    4861 	sbc	a, (hl)
      0013E5 3E 00                 4862 	ld	a, #0x00
      0013E7 57                    4863 	ld	d, a
      0013E8 CB 7E                 4864 	bit	7, (hl)
      0013EA 28 07                 4865 	jr	Z, 00439$
      0013EC CB 7A                 4866 	bit	7, d
      0013EE 20 08                 4867 	jr	NZ, 00440$
      0013F0 BF                    4868 	cp	a, a
      0013F1 18 05                 4869 	jr	00440$
      0013F3                       4870 00439$:
      0013F3 CB 7A                 4871 	bit	7, d
      0013F5 28 01                 4872 	jr	Z, 00440$
      0013F7 37                    4873 	scf
      0013F8                       4874 00440$:
      0013F8 38 25                 4875 	jr	C, 00135$
      0013FA 69                    4876 	ld	l, c
      0013FB 60                    4877 	ld	h, b
      0013FC 2A                    4878 	ld	a, (hl+)
      0013FD 4F                    4879 	ld	c, a
      0013FE 46                    4880 	ld	b, (hl)
      0013FF CB 78                 4881 	bit	7, b
      001401 20 1C                 4882 	jr	NZ, 00135$
      001403 58                    4883 	ld	e, b
      001404 16 00                 4884 	ld	d, #0x00
      001406 3E 98                 4885 	ld	a, #0x98
      001408 B9                    4886 	cp	a, c
      001409 3E 00                 4887 	ld	a, #0x00
      00140B 98                    4888 	sbc	a, b
      00140C CB 7B                 4889 	bit	7, e
      00140E 28 07                 4890 	jr	Z, 00441$
      001410 CB 7A                 4891 	bit	7, d
      001412 20 08                 4892 	jr	NZ, 00442$
      001414 BF                    4893 	cp	a, a
      001415 18 05                 4894 	jr	00442$
      001417                       4895 00441$:
      001417 CB 7A                 4896 	bit	7, d
      001419 28 01                 4897 	jr	Z, 00442$
      00141B 37                    4898 	scf
      00141C                       4899 00442$:
      00141C D2r7Er15              4900 	jp	NC, 00157$
      00141F                       4901 00135$:
                                   4902 ;src/main.c:484: enemies[i].visible = 0;
      00141F F8 05                 4903 	ldhl	sp,	#5
      001421 2A                    4904 	ld	a,	(hl+)
      001422 66                    4905 	ld	h, (hl)
      001423 6F                    4906 	ld	l, a
      001424 36 00                 4907 	ld	(hl), #0x00
                                   4908 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      001426 F8 0E                 4909 	ldhl	sp,	#14
                                   4910 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001428 6E                    4911 	ld	l, (hl)
      001429 01r00r00              4912 	ld	bc, #_shadow_OAM+0
                                   4913 ;	spillPairReg hl
                                   4914 ;	spillPairReg hl
      00142C 26 00                 4915 	ld	h, #0x00
                                   4916 ;	spillPairReg hl
                                   4917 ;	spillPairReg hl
      00142E 29                    4918 	add	hl, hl
      00142F 29                    4919 	add	hl, hl
      001430 09                    4920 	add	hl, bc
      001431 23                    4921 	inc	hl
      001432 23                    4922 	inc	hl
      001433 36 7F                 4923 	ld	(hl), #0x7f
                                   4924 ;src/main.c:486: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001435 F8 0C                 4925 	ldhl	sp,	#12
      001437 7E                    4926 	ld	a, (hl)
      001438 C6 0B                 4927 	add	a, #0x0b
                                   4928 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00143A 6F                    4929 	ld	l, a
      00143B 01r00r00              4930 	ld	bc, #_shadow_OAM+0
                                   4931 ;	spillPairReg hl
                                   4932 ;	spillPairReg hl
      00143E 26 00                 4933 	ld	h, #0x00
                                   4934 ;	spillPairReg hl
                                   4935 ;	spillPairReg hl
      001440 29                    4936 	add	hl, hl
      001441 29                    4937 	add	hl, hl
      001442 09                    4938 	add	hl, bc
      001443 23                    4939 	inc	hl
      001444 23                    4940 	inc	hl
      001445 36 7F                 4941 	ld	(hl), #0x7f
                                   4942 ;src/main.c:486: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001447 C3r7Er15              4943 	jp	00157$
      00144A                       4944 00154$:
                                   4945 ;src/main.c:490: if (enemies[i].x >= 0 && enemies[i].x < 172 && enemies[i].y > 0 && enemies[i].y < 152) {
      00144A F8 0D                 4946 	ldhl	sp,	#13
      00144C CB 46                 4947 	bit	0, (hl)
      00144E C2rE9r14              4948 	jp	NZ, 00148$
      001451 F8 0A                 4949 	ldhl	sp,	#10
      001453 2A                    4950 	ld	a, (hl+)
      001454 D6 AC                 4951 	sub	a, #0xac
      001456 7E                    4952 	ld	a, (hl)
      001457 DE 00                 4953 	sbc	a, #0x00
      001459 56                    4954 	ld	d, (hl)
      00145A 3E 00                 4955 	ld	a, #0x00
      00145C CB 7F                 4956 	bit	7,a
      00145E 28 07                 4957 	jr	Z, 00443$
      001460 CB 7A                 4958 	bit	7, d
      001462 20 08                 4959 	jr	NZ, 00444$
      001464 BF                    4960 	cp	a, a
      001465 18 05                 4961 	jr	00444$
      001467                       4962 00443$:
      001467 CB 7A                 4963 	bit	7, d
      001469 28 01                 4964 	jr	Z, 00444$
      00146B 37                    4965 	scf
      00146C                       4966 00444$:
      00146C 30 7B                 4967 	jr	NC, 00148$
      00146E 69                    4968 	ld	l, c
      00146F 60                    4969 	ld	h, b
      001470 2A                    4970 	ld	a,	(hl+)
      001471 66                    4971 	ld	h, (hl)
                                   4972 ;	spillPairReg hl
      001472 6F                    4973 	ld	l, a
                                   4974 ;	spillPairReg hl
                                   4975 ;	spillPairReg hl
      001473 5C                    4976 	ld	e, h
      001474 AF                    4977 	xor	a, a
      001475 57                    4978 	ld	d, a
      001476 BD                    4979 	cp	a, l
      001477 9C                    4980 	sbc	a, h
      001478 CB 7B                 4981 	bit	7, e
      00147A 28 07                 4982 	jr	Z, 00445$
      00147C CB 7A                 4983 	bit	7, d
      00147E 20 08                 4984 	jr	NZ, 00446$
      001480 BF                    4985 	cp	a, a
      001481 18 05                 4986 	jr	00446$
      001483                       4987 00445$:
      001483 CB 7A                 4988 	bit	7, d
      001485 28 01                 4989 	jr	Z, 00446$
      001487 37                    4990 	scf
      001488                       4991 00446$:
      001488 30 5F                 4992 	jr	NC, 00148$
      00148A 7D                    4993 	ld	a, l
      00148B D6 98                 4994 	sub	a, #0x98
      00148D 7C                    4995 	ld	a, h
      00148E 17                    4996 	rla
      00148F 3F                    4997 	ccf
      001490 1F                    4998 	rra
      001491 DE 80                 4999 	sbc	a, #0x80
      001493 30 54                 5000 	jr	NC, 00148$
                                   5001 ;src/main.c:491: enemies[i].visible = 1;
      001495 F8 05                 5002 	ldhl	sp,	#5
      001497 2A                    5003 	ld	a,	(hl+)
      001498 66                    5004 	ld	h, (hl)
      001499 6F                    5005 	ld	l, a
      00149A 36 01                 5006 	ld	(hl), #0x01
                                   5007 ;src/main.c:492: set_sprite_tile(10+(i<<1), enemies[i].sprite0);
      00149C F8 01                 5008 	ldhl	sp,#1
      00149E 2A                    5009 	ld	a, (hl+)
      00149F 5F                    5010 	ld	e, a
      0014A0 56                    5011 	ld	d, (hl)
      0014A1 21 06 00              5012 	ld	hl, #0x0006
      0014A4 19                    5013 	add	hl, de
      0014A5 4D                    5014 	ld	c, l
      0014A6 44                    5015 	ld	b, h
      0014A7 0A                    5016 	ld	a, (bc)
      0014A8 4F                    5017 	ld	c, a
      0014A9 F8 0E                 5018 	ldhl	sp,	#14
                                   5019 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0014AB 6E                    5020 	ld	l, (hl)
                                   5021 ;	spillPairReg hl
                                   5022 ;	spillPairReg hl
      0014AC 26 00                 5023 	ld	h, #0x00
                                   5024 ;	spillPairReg hl
                                   5025 ;	spillPairReg hl
      0014AE 29                    5026 	add	hl, hl
      0014AF 29                    5027 	add	hl, hl
      0014B0 11r00r00              5028 	ld	de, #_shadow_OAM
      0014B3 19                    5029 	add	hl, de
      0014B4 23                    5030 	inc	hl
      0014B5 23                    5031 	inc	hl
      0014B6 71                    5032 	ld	(hl), c
                                   5033 ;src/main.c:493: if (enemies[i].spriteCount == 2) {
      0014B7 F8 01                 5034 	ldhl	sp,#1
      0014B9 2A                    5035 	ld	a, (hl+)
      0014BA 5F                    5036 	ld	e, a
      0014BB 56                    5037 	ld	d, (hl)
      0014BC 21 08 00              5038 	ld	hl, #0x0008
      0014BF 19                    5039 	add	hl, de
      0014C0 4D                    5040 	ld	c, l
      0014C1 44                    5041 	ld	b, h
      0014C2 0A                    5042 	ld	a, (bc)
      0014C3 D6 02                 5043 	sub	a, #0x02
      0014C5 C2r7Er15              5044 	jp	NZ,00157$
                                   5045 ;src/main.c:494: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0014C8 F8 01                 5046 	ldhl	sp,#1
      0014CA 2A                    5047 	ld	a, (hl+)
      0014CB 5F                    5048 	ld	e, a
      0014CC 56                    5049 	ld	d, (hl)
      0014CD 21 07 00              5050 	ld	hl, #0x0007
      0014D0 19                    5051 	add	hl, de
      0014D1 4D                    5052 	ld	c, l
      0014D2 44                    5053 	ld	b, h
      0014D3 0A                    5054 	ld	a, (bc)
      0014D4 4F                    5055 	ld	c, a
      0014D5 F8 0C                 5056 	ldhl	sp,	#12
      0014D7 7E                    5057 	ld	a, (hl)
      0014D8 C6 0B                 5058 	add	a, #0x0b
                                   5059 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0014DA 6F                    5060 	ld	l, a
                                   5061 ;	spillPairReg hl
                                   5062 ;	spillPairReg hl
      0014DB 26 00                 5063 	ld	h, #0x00
                                   5064 ;	spillPairReg hl
                                   5065 ;	spillPairReg hl
      0014DD 29                    5066 	add	hl, hl
      0014DE 29                    5067 	add	hl, hl
      0014DF 11r00r00              5068 	ld	de, #_shadow_OAM
      0014E2 19                    5069 	add	hl, de
      0014E3 23                    5070 	inc	hl
      0014E4 23                    5071 	inc	hl
      0014E5 71                    5072 	ld	(hl), c
                                   5073 ;src/main.c:494: set_sprite_tile(10+(i<<1)+1, enemies[i].sprite1);
      0014E6 C3r7Er15              5074 	jp	00157$
      0014E9                       5075 00148$:
                                   5076 ;src/main.c:497: else if (enemies[i].x < -100 || enemies[i].x > 272 || enemies[i].y < -100 || enemies[i].y > 252) {
      0014E9 F8 08                 5077 	ldhl	sp,	#8
      0014EB 2A                    5078 	ld	a, (hl+)
      0014EC D6 9C                 5079 	sub	a, #0x9c
      0014EE 7E                    5080 	ld	a, (hl)
      0014EF DE FF                 5081 	sbc	a, #0xff
      0014F1 56                    5082 	ld	d, (hl)
      0014F2 3E FF                 5083 	ld	a, #0xff
      0014F4 CB 7F                 5084 	bit	7,a
      0014F6 28 07                 5085 	jr	Z, 00449$
      0014F8 CB 7A                 5086 	bit	7, d
      0014FA 20 08                 5087 	jr	NZ, 00450$
      0014FC BF                    5088 	cp	a, a
      0014FD 18 05                 5089 	jr	00450$
      0014FF                       5090 00449$:
      0014FF CB 7A                 5091 	bit	7, d
      001501 28 01                 5092 	jr	Z, 00450$
      001503 37                    5093 	scf
      001504                       5094 00450$:
      001504 38 49                 5095 	jr	C, 00142$
      001506 F8 0A                 5096 	ldhl	sp,	#10
      001508 3E 10                 5097 	ld	a, #0x10
      00150A 96                    5098 	sub	a, (hl)
      00150B 23                    5099 	inc	hl
      00150C 3E 01                 5100 	ld	a, #0x01
      00150E 9E                    5101 	sbc	a, (hl)
      00150F 3E 01                 5102 	ld	a, #0x01
      001511 57                    5103 	ld	d, a
      001512 CB 7E                 5104 	bit	7, (hl)
      001514 28 07                 5105 	jr	Z, 00451$
      001516 CB 7A                 5106 	bit	7, d
      001518 20 08                 5107 	jr	NZ, 00452$
      00151A BF                    5108 	cp	a, a
      00151B 18 05                 5109 	jr	00452$
      00151D                       5110 00451$:
      00151D CB 7A                 5111 	bit	7, d
      00151F 28 01                 5112 	jr	Z, 00452$
      001521 37                    5113 	scf
      001522                       5114 00452$:
      001522 38 2B                 5115 	jr	C, 00142$
      001524 69                    5116 	ld	l, c
      001525 60                    5117 	ld	h, b
      001526 2A                    5118 	ld	a, (hl+)
      001527 4F                    5119 	ld	c, a
      001528 46                    5120 	ld	b, (hl)
      001529 79                    5121 	ld	a, c
      00152A D6 9C                 5122 	sub	a, #0x9c
      00152C 78                    5123 	ld	a, b
      00152D 17                    5124 	rla
      00152E 3F                    5125 	ccf
      00152F 1F                    5126 	rra
      001530 DE 7F                 5127 	sbc	a, #0x7f
      001532 38 1B                 5128 	jr	C, 00142$
      001534 58                    5129 	ld	e, b
      001535 16 00                 5130 	ld	d, #0x00
      001537 3E FC                 5131 	ld	a, #0xfc
      001539 B9                    5132 	cp	a, c
      00153A 3E 00                 5133 	ld	a, #0x00
      00153C 98                    5134 	sbc	a, b
      00153D CB 7B                 5135 	bit	7, e
      00153F 28 07                 5136 	jr	Z, 00453$
      001541 CB 7A                 5137 	bit	7, d
      001543 20 08                 5138 	jr	NZ, 00454$
      001545 BF                    5139 	cp	a, a
      001546 18 05                 5140 	jr	00454$
      001548                       5141 00453$:
      001548 CB 7A                 5142 	bit	7, d
      00154A 28 01                 5143 	jr	Z, 00454$
      00154C 37                    5144 	scf
      00154D                       5145 00454$:
      00154D 30 2F                 5146 	jr	NC, 00157$
      00154F                       5147 00142$:
                                   5148 ;src/main.c:498: enemies[i].alive = 0;
      00154F F8 03                 5149 	ldhl	sp,	#3
      001551 2A                    5150 	ld	a,	(hl+)
      001552 66                    5151 	ld	h, (hl)
      001553 6F                    5152 	ld	l, a
      001554 36 00                 5153 	ld	(hl), #0x00
                                   5154 ;src/main.c:499: set_sprite_tile(10+(i<<1), 0x7f);
      001556 F8 0E                 5155 	ldhl	sp,	#14
                                   5156 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001558 6E                    5157 	ld	l, (hl)
      001559 01r00r00              5158 	ld	bc, #_shadow_OAM+0
                                   5159 ;	spillPairReg hl
                                   5160 ;	spillPairReg hl
      00155C 26 00                 5161 	ld	h, #0x00
                                   5162 ;	spillPairReg hl
                                   5163 ;	spillPairReg hl
      00155E 29                    5164 	add	hl, hl
      00155F 29                    5165 	add	hl, hl
      001560 09                    5166 	add	hl, bc
      001561 23                    5167 	inc	hl
      001562 23                    5168 	inc	hl
      001563 36 7F                 5169 	ld	(hl), #0x7f
                                   5170 ;src/main.c:500: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001565 F8 0C                 5171 	ldhl	sp,	#12
      001567 7E                    5172 	ld	a, (hl)
      001568 C6 0B                 5173 	add	a, #0x0b
                                   5174 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00156A 6F                    5175 	ld	l, a
      00156B 01r00r00              5176 	ld	bc, #_shadow_OAM+0
                                   5177 ;	spillPairReg hl
                                   5178 ;	spillPairReg hl
      00156E 26 00                 5179 	ld	h, #0x00
                                   5180 ;	spillPairReg hl
                                   5181 ;	spillPairReg hl
      001570 29                    5182 	add	hl, hl
      001571 29                    5183 	add	hl, hl
      001572 09                    5184 	add	hl, bc
      001573 23                    5185 	inc	hl
      001574 23                    5186 	inc	hl
      001575 36 7F                 5187 	ld	(hl), #0x7f
                                   5188 ;src/main.c:501: initEnemies(0);
      001577 AF                    5189 	xor	a, a
      001578 F5                    5190 	push	af
      001579 33                    5191 	inc	sp
      00157A CDrD9r0C              5192 	call	_initEnemies
      00157D 33                    5193 	inc	sp
      00157E                       5194 00157$:
                                   5195 ;src/main.c:505: if (enemies[i].spriteCount == 1) {
      00157E F8 0F                 5196 	ldhl	sp,	#15
      001580 6E                    5197 	ld	l, (hl)
      001581 26 00                 5198 	ld	h, #0x00
      001583 29                    5199 	add	hl, hl
      001584 29                    5200 	add	hl, hl
      001585 29                    5201 	add	hl, hl
      001586 29                    5202 	add	hl, hl
      001587 7D                    5203 	ld	a, l
      001588 C6r50                 5204 	add	a, #<(_enemies)
      00158A 4F                    5205 	ld	c, a
      00158B 7C                    5206 	ld	a, h
      00158C CEs00                 5207 	adc	a, #>(_enemies)
      00158E 47                    5208 	ld	b, a
      00158F 21 08 00              5209 	ld	hl, #0x0008
      001592 09                    5210 	add	hl, bc
      001593 5E                    5211 	ld	e, (hl)
                                   5212 ;src/main.c:485: set_sprite_tile(10+(i<<1), 0x7f);
      001594 F8 0F                 5213 	ldhl	sp,	#15
      001596 3A                    5214 	ld	a, (hl-)
      001597 87                    5215 	add	a, a
      001598 77                    5216 	ld	(hl), a
      001599 7E                    5217 	ld	a, (hl)
      00159A C6 0A                 5218 	add	a, #0x0a
      00159C F8 0A                 5219 	ldhl	sp,	#10
      00159E 77                    5220 	ld	(hl), a
                                   5221 ;src/main.c:505: if (enemies[i].spriteCount == 1) {
      00159F 1D                    5222 	dec	e
      0015A0 20 52                 5223 	jr	NZ, 00165$
                                   5224 ;src/main.c:506: move_sprite(10+ (i<<1), enemies[i].x+4, enemies[i].y+12);
      0015A2 59                    5225 	ld	e, c
      0015A3 50                    5226 	ld	d, b
      0015A4 13                    5227 	inc	de
      0015A5 13                    5228 	inc	de
      0015A6 1A                    5229 	ld	a, (de)
      0015A7 C6 0C                 5230 	add	a, #0x0c
      0015A9 5F                    5231 	ld	e, a
      0015AA 0A                    5232 	ld	a, (bc)
      0015AB C6 04                 5233 	add	a, #0x04
      0015AD F8 0E                 5234 	ldhl	sp,	#14
      0015AF 77                    5235 	ld	(hl), a
      0015B0 F8 0A                 5236 	ldhl	sp,	#10
      0015B2 56                    5237 	ld	d, (hl)
                                   5238 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0015B3 6A                    5239 	ld	l, d
                                   5240 ;	spillPairReg hl
                                   5241 ;	spillPairReg hl
      0015B4 26 00                 5242 	ld	h, #0x00
                                   5243 ;	spillPairReg hl
                                   5244 ;	spillPairReg hl
      0015B6 29                    5245 	add	hl, hl
      0015B7 29                    5246 	add	hl, hl
      0015B8 D5                    5247 	push	de
      0015B9 11r00r00              5248 	ld	de, #_shadow_OAM
      0015BC 19                    5249 	add	hl, de
      0015BD D1                    5250 	pop	de
                                   5251 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0015BE 7B                    5252 	ld	a, e
      0015BF 22                    5253 	ld	(hl+), a
      0015C0 5D                    5254 	ld	e, l
      0015C1 54                    5255 	ld	d, h
      0015C2 F8 0E                 5256 	ldhl	sp,	#14
      0015C4 7E                    5257 	ld	a, (hl)
      0015C5 12                    5258 	ld	(de), a
                                   5259 ;src/main.c:507: if (enemies[i].xSpeed >= 0) {
      0015C6 21 0E 00              5260 	ld	hl, #0x000e
      0015C9 09                    5261 	add	hl, bc
      0015CA CB 7E                 5262 	bit	7, (hl)
      0015CC 20 13                 5263 	jr	NZ, 00159$
                                   5264 ;src/main.c:508: set_sprite_prop(10+(i<<1), 0);
      0015CE F8 0A                 5265 	ldhl	sp,	#10
                                   5266 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015D0 6E                    5267 	ld	l, (hl)
      0015D1 01r00r00              5268 	ld	bc, #_shadow_OAM+0
                                   5269 ;	spillPairReg hl
                                   5270 ;	spillPairReg hl
      0015D4 26 00                 5271 	ld	h, #0x00
                                   5272 ;	spillPairReg hl
                                   5273 ;	spillPairReg hl
      0015D6 29                    5274 	add	hl, hl
      0015D7 29                    5275 	add	hl, hl
      0015D8 09                    5276 	add	hl, bc
      0015D9 23                    5277 	inc	hl
      0015DA 23                    5278 	inc	hl
      0015DB 23                    5279 	inc	hl
      0015DC 36 00                 5280 	ld	(hl), #0x00
                                   5281 ;src/main.c:508: set_sprite_prop(10+(i<<1), 0);
      0015DE C3rEAr16              5282 	jp	00199$
      0015E1                       5283 00159$:
                                   5284 ;src/main.c:511: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015E1 F8 0A                 5285 	ldhl	sp,	#10
                                   5286 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0015E3 6E                    5287 	ld	l, (hl)
      0015E4 01r00r00              5288 	ld	bc, #_shadow_OAM+0
                                   5289 ;	spillPairReg hl
                                   5290 ;	spillPairReg hl
      0015E7 26 00                 5291 	ld	h, #0x00
                                   5292 ;	spillPairReg hl
                                   5293 ;	spillPairReg hl
      0015E9 29                    5294 	add	hl, hl
      0015EA 29                    5295 	add	hl, hl
      0015EB 09                    5296 	add	hl, bc
      0015EC 23                    5297 	inc	hl
      0015ED 23                    5298 	inc	hl
      0015EE 23                    5299 	inc	hl
      0015EF 36 20                 5300 	ld	(hl), #0x20
                                   5301 ;src/main.c:511: set_sprite_prop(10+(i<<1), S_FLIPX);
      0015F1 C3rEAr16              5302 	jp	00199$
      0015F4                       5303 00165$:
                                   5304 ;src/main.c:516: if (enemies[i].xSpeed >= 0) {
      0015F4 21 0E 00              5305 	ld	hl, #0x000e
      0015F7 09                    5306 	add	hl, bc
      0015F8 E5                    5307 	push	hl
      0015F9 7D                    5308 	ld	a, l
      0015FA F8 0E                 5309 	ldhl	sp,	#14
      0015FC 77                    5310 	ld	(hl), a
      0015FD E1                    5311 	pop	hl
      0015FE 7C                    5312 	ld	a, h
      0015FF F8 0D                 5313 	ldhl	sp,	#13
      001601 32                    5314 	ld	(hl-), a
      001602 2A                    5315 	ld	a, (hl+)
      001603 5F                    5316 	ld	e, a
      001604 56                    5317 	ld	d, (hl)
      001605 1A                    5318 	ld	a, (de)
                                   5319 ;	spillPairReg hl
                                   5320 ;	spillPairReg hl
      001606 CB 7F                 5321 	bit	7,a
      001608 20 70                 5322 	jr	NZ, 00162$
                                   5323 ;src/main.c:517: set_sprite_prop(10+(i<<1), 0);
      00160A F8 0A                 5324 	ldhl	sp,	#10
                                   5325 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00160C 6E                    5326 	ld	l, (hl)
                                   5327 ;	spillPairReg hl
                                   5328 ;	spillPairReg hl
      00160D 26 00                 5329 	ld	h, #0x00
                                   5330 ;	spillPairReg hl
                                   5331 ;	spillPairReg hl
      00160F 29                    5332 	add	hl, hl
      001610 29                    5333 	add	hl, hl
      001611 11r00r00              5334 	ld	de, #_shadow_OAM
      001614 19                    5335 	add	hl, de
      001615 23                    5336 	inc	hl
      001616 23                    5337 	inc	hl
      001617 23                    5338 	inc	hl
      001618 36 00                 5339 	ld	(hl), #0x00
                                   5340 ;src/main.c:518: set_sprite_prop(10+(i<<1)+1, 0);
      00161A F8 0E                 5341 	ldhl	sp,	#14
      00161C 7E                    5342 	ld	a, (hl)
      00161D C6 0B                 5343 	add	a, #0x0b
      00161F F8 0B                 5344 	ldhl	sp,	#11
      001621 77                    5345 	ld	(hl), a
                                   5346 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001622 6E                    5347 	ld	l, (hl)
                                   5348 ;	spillPairReg hl
                                   5349 ;	spillPairReg hl
      001623 26 00                 5350 	ld	h, #0x00
                                   5351 ;	spillPairReg hl
                                   5352 ;	spillPairReg hl
      001625 29                    5353 	add	hl, hl
      001626 29                    5354 	add	hl, hl
      001627 11r00r00              5355 	ld	de, #_shadow_OAM
      00162A 19                    5356 	add	hl, de
      00162B 23                    5357 	inc	hl
      00162C 23                    5358 	inc	hl
      00162D 23                    5359 	inc	hl
      00162E 36 00                 5360 	ld	(hl), #0x00
                                   5361 ;src/main.c:519: move_sprite(10+ (i<<1), enemies[i].x , enemies[i].y + 8);
      001630 21 02 00              5362 	ld	hl, #0x0002
      001633 09                    5363 	add	hl, bc
      001634 E5                    5364 	push	hl
      001635 7D                    5365 	ld	a, l
      001636 F8 0E                 5366 	ldhl	sp,	#14
      001638 77                    5367 	ld	(hl), a
      001639 E1                    5368 	pop	hl
      00163A 7C                    5369 	ld	a, h
      00163B F8 0D                 5370 	ldhl	sp,	#13
      00163D 32                    5371 	ld	(hl-), a
      00163E 2A                    5372 	ld	a, (hl+)
      00163F 5F                    5373 	ld	e, a
      001640 2A                    5374 	ld	a, (hl+)
      001641 57                    5375 	ld	d, a
      001642 1A                    5376 	ld	a, (de)
      001643 C6 08                 5377 	add	a, #0x08
      001645 5F                    5378 	ld	e, a
      001646 0A                    5379 	ld	a, (bc)
      001647 77                    5380 	ld	(hl), a
      001648 F8 0A                 5381 	ldhl	sp,	#10
      00164A 56                    5382 	ld	d, (hl)
                                   5383 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00164B 6A                    5384 	ld	l, d
                                   5385 ;	spillPairReg hl
                                   5386 ;	spillPairReg hl
      00164C 26 00                 5387 	ld	h, #0x00
                                   5388 ;	spillPairReg hl
                                   5389 ;	spillPairReg hl
      00164E 29                    5390 	add	hl, hl
      00164F 29                    5391 	add	hl, hl
      001650 D5                    5392 	push	de
      001651 11r00r00              5393 	ld	de, #_shadow_OAM
      001654 19                    5394 	add	hl, de
      001655 D1                    5395 	pop	de
                                   5396 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001656 7B                    5397 	ld	a, e
      001657 22                    5398 	ld	(hl+), a
      001658 5D                    5399 	ld	e, l
      001659 54                    5400 	ld	d, h
      00165A F8 0E                 5401 	ldhl	sp,	#14
                                   5402 ;src/main.c:520: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      00165C 3A                    5403 	ld	a, (hl-)
      00165D 2B                    5404 	dec	hl
      00165E 12                    5405 	ld	(de), a
      00165F 2A                    5406 	ld	a, (hl+)
      001660 5F                    5407 	ld	e, a
      001661 3A                    5408 	ld	a, (hl-)
      001662 2B                    5409 	dec	hl
      001663 57                    5410 	ld	d, a
      001664 1A                    5411 	ld	a, (de)
      001665 C6 08                 5412 	add	a, #0x08
      001667 57                    5413 	ld	d, a
      001668 0A                    5414 	ld	a, (bc)
      001669 C6 08                 5415 	add	a, #0x08
      00166B 5F                    5416 	ld	e, a
                                   5417 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00166C 6E                    5418 	ld	l, (hl)
                                   5419 ;	spillPairReg hl
                                   5420 ;	spillPairReg hl
      00166D 26 00                 5421 	ld	h, #0x00
                                   5422 ;	spillPairReg hl
                                   5423 ;	spillPairReg hl
      00166F 29                    5424 	add	hl, hl
      001670 29                    5425 	add	hl, hl
      001671 01r00r00              5426 	ld	bc, #_shadow_OAM
      001674 09                    5427 	add	hl, bc
                                   5428 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001675 7A                    5429 	ld	a, d
      001676 22                    5430 	ld	(hl+), a
      001677 73                    5431 	ld	(hl), e
                                   5432 ;src/main.c:520: move_sprite(10+ (i<<1)+1, enemies[i].x +8, enemies[i].y +8);
      001678 18 70                 5433 	jr	00199$
      00167A                       5434 00162$:
                                   5435 ;src/main.c:523: set_sprite_prop(10+(i<<1), S_FLIPX);
      00167A F8 0A                 5436 	ldhl	sp,	#10
      00167C 5E                    5437 	ld	e, (hl)
                                   5438 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00167D 26 00                 5439 	ld	h, #0x00
                                   5440 ;	spillPairReg hl
                                   5441 ;	spillPairReg hl
      00167F 6B                    5442 	ld	l, e
      001680 29                    5443 	add	hl, hl
      001681 29                    5444 	add	hl, hl
      001682 11r00r00              5445 	ld	de, #_shadow_OAM
      001685 19                    5446 	add	hl, de
      001686 23                    5447 	inc	hl
      001687 23                    5448 	inc	hl
      001688 23                    5449 	inc	hl
      001689 36 20                 5450 	ld	(hl), #0x20
                                   5451 ;src/main.c:524: set_sprite_prop(10+(i<<1)+1, S_FLIPX);
      00168B F8 0E                 5452 	ldhl	sp,	#14
      00168D 7E                    5453 	ld	a, (hl)
      00168E C6 0B                 5454 	add	a, #0x0b
      001690 F8 0B                 5455 	ldhl	sp,	#11
      001692 77                    5456 	ld	(hl), a
      001693 5E                    5457 	ld	e, (hl)
                                   5458 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      001694 26 00                 5459 	ld	h, #0x00
                                   5460 ;	spillPairReg hl
                                   5461 ;	spillPairReg hl
      001696 6B                    5462 	ld	l, e
      001697 29                    5463 	add	hl, hl
      001698 29                    5464 	add	hl, hl
      001699 11r00r00              5465 	ld	de, #_shadow_OAM
      00169C 19                    5466 	add	hl, de
      00169D 23                    5467 	inc	hl
      00169E 23                    5468 	inc	hl
      00169F 23                    5469 	inc	hl
      0016A0 36 20                 5470 	ld	(hl), #0x20
                                   5471 ;src/main.c:525: move_sprite(10+ (i<<1), enemies[i].x +8, enemies[i].y + 8);
      0016A2 21 02 00              5472 	ld	hl, #0x0002
      0016A5 09                    5473 	add	hl, bc
      0016A6 E5                    5474 	push	hl
      0016A7 7D                    5475 	ld	a, l
      0016A8 F8 0E                 5476 	ldhl	sp,	#14
      0016AA 77                    5477 	ld	(hl), a
      0016AB E1                    5478 	pop	hl
      0016AC 7C                    5479 	ld	a, h
      0016AD F8 0D                 5480 	ldhl	sp,	#13
      0016AF 32                    5481 	ld	(hl-), a
      0016B0 2A                    5482 	ld	a, (hl+)
      0016B1 5F                    5483 	ld	e, a
      0016B2 2A                    5484 	ld	a, (hl+)
      0016B3 57                    5485 	ld	d, a
      0016B4 1A                    5486 	ld	a, (de)
      0016B5 C6 08                 5487 	add	a, #0x08
      0016B7 5F                    5488 	ld	e, a
      0016B8 0A                    5489 	ld	a, (bc)
      0016B9 C6 08                 5490 	add	a, #0x08
      0016BB 77                    5491 	ld	(hl), a
      0016BC F8 0A                 5492 	ldhl	sp,	#10
      0016BE 56                    5493 	ld	d, (hl)
                                   5494 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0016BF 6A                    5495 	ld	l, d
                                   5496 ;	spillPairReg hl
                                   5497 ;	spillPairReg hl
      0016C0 26 00                 5498 	ld	h, #0x00
                                   5499 ;	spillPairReg hl
                                   5500 ;	spillPairReg hl
      0016C2 29                    5501 	add	hl, hl
      0016C3 29                    5502 	add	hl, hl
      0016C4 D5                    5503 	push	de
      0016C5 11r00r00              5504 	ld	de, #_shadow_OAM
      0016C8 19                    5505 	add	hl, de
      0016C9 D1                    5506 	pop	de
                                   5507 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016CA 7B                    5508 	ld	a, e
      0016CB 22                    5509 	ld	(hl+), a
      0016CC 5D                    5510 	ld	e, l
      0016CD 54                    5511 	ld	d, h
      0016CE F8 0E                 5512 	ldhl	sp,	#14
                                   5513 ;src/main.c:526: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0016D0 3A                    5514 	ld	a, (hl-)
      0016D1 2B                    5515 	dec	hl
      0016D2 12                    5516 	ld	(de), a
      0016D3 2A                    5517 	ld	a, (hl+)
      0016D4 5F                    5518 	ld	e, a
      0016D5 3A                    5519 	ld	a, (hl-)
      0016D6 2B                    5520 	dec	hl
      0016D7 57                    5521 	ld	d, a
      0016D8 1A                    5522 	ld	a, (de)
      0016D9 C6 08                 5523 	add	a, #0x08
      0016DB 57                    5524 	ld	d, a
      0016DC 0A                    5525 	ld	a, (bc)
      0016DD 5F                    5526 	ld	e, a
                                   5527 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0016DE 6E                    5528 	ld	l, (hl)
                                   5529 ;	spillPairReg hl
                                   5530 ;	spillPairReg hl
      0016DF 26 00                 5531 	ld	h, #0x00
                                   5532 ;	spillPairReg hl
                                   5533 ;	spillPairReg hl
      0016E1 29                    5534 	add	hl, hl
      0016E2 29                    5535 	add	hl, hl
      0016E3 01r00r00              5536 	ld	bc, #_shadow_OAM
      0016E6 09                    5537 	add	hl, bc
                                   5538 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0016E7 7A                    5539 	ld	a, d
      0016E8 22                    5540 	ld	(hl+), a
      0016E9 73                    5541 	ld	(hl), e
                                   5542 ;src/main.c:526: move_sprite(10+ (i<<1)+1, enemies[i].x, enemies[i].y +8);
      0016EA                       5543 00199$:
                                   5544 ;src/main.c:479: for (uint8_t i = 0; i < ENEMYCOUNT; ++i) {
      0016EA F8 0F                 5545 	ldhl	sp,	#15
      0016EC 34                    5546 	inc	(hl)
      0016ED C3r45r13              5547 	jp	00198$
      0016F0                       5548 00200$:
                                   5549 ;src/main.c:532: }
      0016F0 E8 10                 5550 	add	sp, #16
      0016F2 C9                    5551 	ret
                                   5552 ;src/main.c:537: void move() {
                                   5553 ;	---------------------------------
                                   5554 ; Function move
                                   5555 ; ---------------------------------
      0016F3                       5556 _move::
      0016F3 E8 F8                 5557 	add	sp, #-8
                                   5558 ;src/main.c:541: if (joydata & J_A) {
      0016F5 FArDCr00              5559 	ld	a, (#_joydata)
      0016F8 CB 67                 5560 	bit	4, a
      0016FA 28 16                 5561 	jr	Z, 00102$
                                   5562 ;src/main.c:542: xSpeed += xDir + xDir + xDir;
      0016FC 21r86r00              5563 	ld	hl, #_xDir
      0016FF 7E                    5564 	ld	a, (hl)
      001700 87                    5565 	add	a, a
      001701 86                    5566 	add	a, (hl)
      001702 21r88r00              5567 	ld	hl, #_xSpeed
      001705 86                    5568 	add	a, (hl)
      001706 77                    5569 	ld	(hl), a
                                   5570 ;src/main.c:543: ySpeed += yDir + yDir + yDir;
      001707 21r87r00              5571 	ld	hl, #_yDir
      00170A 7E                    5572 	ld	a, (hl)
      00170B 87                    5573 	add	a, a
      00170C 86                    5574 	add	a, (hl)
      00170D 21r89r00              5575 	ld	hl, #_ySpeed
      001710 86                    5576 	add	a, (hl)
      001711 77                    5577 	ld	(hl), a
      001712                       5578 00102$:
                                   5579 ;src/main.c:547: xSpeed = clamp(xSpeed, -100, 100);
      001712 21r88r00              5580 	ld	hl, #_xSpeed
      001715 4E                    5581 	ld	c, (hl)
                                   5582 ;src/main.c:305: return (value < min) ? min : (value > max) ? max : value;
      001716 79                    5583 	ld	a, c
      001717 EE 80                 5584 	xor	a, #0x80
      001719 D6 1C                 5585 	sub	a, #0x1c
      00171B 30 04                 5586 	jr	NC, 00165$
      00171D 0E 9C                 5587 	ld	c, #0x9c
      00171F 18 19                 5588 	jr	00166$
      001721                       5589 00165$:
      001721 59                    5590 	ld	e, c
      001722 3E 64                 5591 	ld	a,#0x64
      001724 57                    5592 	ld	d,a
      001725 91                    5593 	sub	a, c
      001726 CB 7B                 5594 	bit	7, e
      001728 28 07                 5595 	jr	Z, 00342$
      00172A CB 7A                 5596 	bit	7, d
      00172C 20 08                 5597 	jr	NZ, 00343$
      00172E BF                    5598 	cp	a, a
      00172F 18 05                 5599 	jr	00343$
      001731                       5600 00342$:
      001731 CB 7A                 5601 	bit	7, d
      001733 28 01                 5602 	jr	Z, 00343$
      001735 37                    5603 	scf
      001736                       5604 00343$:
      001736 30 02                 5605 	jr	NC, 00167$
      001738 0E 64                 5606 	ld	c, #0x64
      00173A                       5607 00167$:
      00173A                       5608 00166$:
      00173A 21r88r00              5609 	ld	hl, #_xSpeed
      00173D 71                    5610 	ld	(hl), c
                                   5611 ;src/main.c:548: ySpeed = clamp(ySpeed, -100, 100);
      00173E 21r89r00              5612 	ld	hl, #_ySpeed
      001741 4E                    5613 	ld	c, (hl)
                                   5614 ;src/main.c:305: return (value < min) ? min : (value > max) ? max : value;
      001742 79                    5615 	ld	a, c
      001743 EE 80                 5616 	xor	a, #0x80
      001745 D6 1C                 5617 	sub	a, #0x1c
      001747 30 04                 5618 	jr	NC, 00169$
      001749 0E 9C                 5619 	ld	c, #0x9c
      00174B 18 19                 5620 	jr	00170$
      00174D                       5621 00169$:
      00174D 59                    5622 	ld	e, c
      00174E 3E 64                 5623 	ld	a,#0x64
      001750 57                    5624 	ld	d,a
      001751 91                    5625 	sub	a, c
      001752 CB 7B                 5626 	bit	7, e
      001754 28 07                 5627 	jr	Z, 00344$
      001756 CB 7A                 5628 	bit	7, d
      001758 20 08                 5629 	jr	NZ, 00345$
      00175A BF                    5630 	cp	a, a
      00175B 18 05                 5631 	jr	00345$
      00175D                       5632 00344$:
      00175D CB 7A                 5633 	bit	7, d
      00175F 28 01                 5634 	jr	Z, 00345$
      001761 37                    5635 	scf
      001762                       5636 00345$:
      001762 30 02                 5637 	jr	NC, 00171$
      001764 0E 64                 5638 	ld	c, #0x64
      001766                       5639 00171$:
      001766                       5640 00170$:
      001766 21r89r00              5641 	ld	hl, #_ySpeed
      001769 71                    5642 	ld	(hl), c
                                   5643 ;src/main.c:550: xOverflow = 0;
      00176A AF                    5644 	xor	a, a
      00176B 21r94r00              5645 	ld	hl, #_xOverflow
      00176E 22                    5646 	ld	(hl+), a
      00176F 77                    5647 	ld	(hl), a
                                   5648 ;src/main.c:551: yOverflow = 0;
      001770 AF                    5649 	xor	a, a
      001771 21r96r00              5650 	ld	hl, #_yOverflow
      001774 22                    5651 	ld	(hl+), a
      001775 77                    5652 	ld	(hl), a
                                   5653 ;src/main.c:556: uint8_t xCollisionPoint = playerDrawX; 
      001776 21r8Er00              5654 	ld	hl, #_playerDrawX
      001779 4E                    5655 	ld	c, (hl)
                                   5656 ;src/main.c:559: xCollisionPoint = playerDrawX +8; //right edge
      00177A 46                    5657 	ld	b, (hl)
                                   5658 ;src/main.c:558: if (xSpeed > 0) {
      00177B 21r88r00              5659 	ld	hl, #_xSpeed
      00177E 5E                    5660 	ld	e, (hl)
      00177F AF                    5661 	xor	a, a
      001780 57                    5662 	ld	d, a
      001781 96                    5663 	sub	a, (hl)
      001782 CB 7B                 5664 	bit	7, e
      001784 28 07                 5665 	jr	Z, 00346$
      001786 CB 7A                 5666 	bit	7, d
      001788 20 08                 5667 	jr	NZ, 00347$
      00178A BF                    5668 	cp	a, a
      00178B 18 05                 5669 	jr	00347$
      00178D                       5670 00346$:
      00178D CB 7A                 5671 	bit	7, d
      00178F 28 01                 5672 	jr	Z, 00347$
      001791 37                    5673 	scf
      001792                       5674 00347$:
      001792 30 04                 5675 	jr	NC, 00104$
                                   5676 ;src/main.c:559: xCollisionPoint = playerDrawX +8; //right edge
      001794 78                    5677 	ld	a, b
      001795 C6 08                 5678 	add	a, #0x08
      001797 4F                    5679 	ld	c, a
      001798                       5680 00104$:
                                   5681 ;src/main.c:561: if (xSpeed < 0) {
      001798 FAr88r00              5682 	ld	a, (#_xSpeed)
      00179B CB 7F                 5683 	bit	7, a
      00179D 28 04                 5684 	jr	Z, 00106$
                                   5685 ;src/main.c:562: xCollisionPoint = playerDrawX -8; //left edge
      00179F 78                    5686 	ld	a, b
      0017A0 C6 F8                 5687 	add	a, #0xf8
      0017A2 4F                    5688 	ld	c, a
      0017A3                       5689 00106$:
                                   5690 ;src/main.c:566: int16_t bgindX = ((xCollisionPoint + bgX) >> 3)%32;
      0017A3 06 00                 5691 	ld	b, #0x00
      0017A5 79                    5692 	ld	a, c
      0017A6 21r90r00              5693 	ld	hl, #_bgX
      0017A9 86                    5694 	add	a, (hl)
      0017AA 23                    5695 	inc	hl
      0017AB 4F                    5696 	ld	c, a
      0017AC 78                    5697 	ld	a, b
      0017AD 8E                    5698 	adc	a, (hl)
      0017AE 47                    5699 	ld	b, a
      0017AF CB 28                 5700 	sra	b
      0017B1 CB 19                 5701 	rr	c
      0017B3 CB 28                 5702 	sra	b
      0017B5 CB 19                 5703 	rr	c
      0017B7 CB 28                 5704 	sra	b
      0017B9 CB 19                 5705 	rr	c
      0017BB 11 20 00              5706 	ld	de, #0x0020
      0017BE D5                    5707 	push	de
      0017BF C5                    5708 	push	bc
      0017C0 CDr00r00              5709 	call	__modsint
      0017C3 E8 04                 5710 	add	sp, #4
                                   5711 ;src/main.c:570: uint8_t bgindY = ((playerDrawY + bgY) >> 3)%32; 
      0017C5 21r8Fr00              5712 	ld	hl, #_playerDrawY
      0017C8 4E                    5713 	ld	c, (hl)
      0017C9 06 00                 5714 	ld	b, #0x00
      0017CB 79                    5715 	ld	a, c
      0017CC 21r92r00              5716 	ld	hl, #_bgY
      0017CF 86                    5717 	add	a, (hl)
      0017D0 23                    5718 	inc	hl
      0017D1 4F                    5719 	ld	c, a
      0017D2 78                    5720 	ld	a, b
      0017D3 8E                    5721 	adc	a, (hl)
      0017D4 47                    5722 	ld	b, a
      0017D5 CB 28                 5723 	sra	b
      0017D7 CB 19                 5724 	rr	c
      0017D9 CB 28                 5725 	sra	b
      0017DB CB 19                 5726 	rr	c
      0017DD CB 28                 5727 	sra	b
      0017DF CB 19                 5728 	rr	c
      0017E1 D5                    5729 	push	de
      0017E2 21 20 00              5730 	ld	hl, #0x0020
      0017E5 E5                    5731 	push	hl
      0017E6 C5                    5732 	push	bc
      0017E7 CDr00r00              5733 	call	__modsint
      0017EA E8 04                 5734 	add	sp, #4
      0017EC 6B                    5735 	ld	l, e
                                   5736 ;	spillPairReg hl
                                   5737 ;	spillPairReg hl
                                   5738 ;	spillPairReg hl
                                   5739 ;	spillPairReg hl
      0017ED D1                    5740 	pop	de
                                   5741 ;src/main.c:573: uint16_t ind = 32*bgindY + bgindX;
      0017EE 26 00                 5742 	ld	h, #0x00
                                   5743 ;	spillPairReg hl
                                   5744 ;	spillPairReg hl
      0017F0 29                    5745 	add	hl, hl
      0017F1 29                    5746 	add	hl, hl
      0017F2 29                    5747 	add	hl, hl
      0017F3 29                    5748 	add	hl, hl
      0017F4 29                    5749 	add	hl, hl
      0017F5 19                    5750 	add	hl, de
      0017F6 5D                    5751 	ld	e, l
      0017F7 54                    5752 	ld	d, h
                                   5753 ;src/main.c:574: uint8_t result = 1; // 0 incase of clear path, 1 for blocked
      0017F8 0E 01                 5754 	ld	c, #0x01
                                   5755 ;src/main.c:575: for (uint8_t i=0; i<BLANKSIZE; i++) {
      0017FA 21r87r00              5756 	ld	hl, #_background1
      0017FD 19                    5757 	add	hl, de
      0017FE 46                    5758 	ld	b, (hl)
      0017FF 1E 00                 5759 	ld	e, #0x00
      001801                       5760 00158$:
      001801 FAr58r08              5761 	ld	a, (#_BLANKSIZE)
      001804 F8 02                 5762 	ldhl	sp,	#2
      001806 77                    5763 	ld	(hl), a
      001807 7B                    5764 	ld	a, e
      001808 96                    5765 	sub	a, (hl)
      001809 30 11                 5766 	jr	NC, 00109$
                                   5767 ;src/main.c:576: if (background1[ind] == BLANK[i] ) {
      00180B 21r59r08              5768 	ld	hl, #_BLANK
      00180E 16 00                 5769 	ld	d, #0x00
      001810 19                    5770 	add	hl, de
      001811 56                    5771 	ld	d, (hl)
      001812 78                    5772 	ld	a, b
                                   5773 ;src/main.c:577: result = 0;
      001813 92                    5774 	sub	a,d
      001814 20 03                 5775 	jr	NZ, 00159$
      001816 4F                    5776 	ld	c,a
                                   5777 ;src/main.c:578: break;
      001817 18 03                 5778 	jr	00109$
      001819                       5779 00159$:
                                   5780 ;src/main.c:575: for (uint8_t i=0; i<BLANKSIZE; i++) {
      001819 1C                    5781 	inc	e
      00181A 18 E5                 5782 	jr	00158$
      00181C                       5783 00109$:
                                   5784 ;src/main.c:582: if (result == 0) {
      00181C 79                    5785 	ld	a, c
      00181D B7                    5786 	or	a, a
      00181E C2rECr18              5787 	jp	NZ, 00114$
                                   5788 ;src/main.c:583: playerX+=xSpeed;
      001821 FAr88r00              5789 	ld	a, (#_xSpeed)
      001824 4F                    5790 	ld	c, a
      001825 07                    5791 	rlca
      001826 9F                    5792 	sbc	a, a
      001827 47                    5793 	ld	b, a
      001828 21r8Ar00              5794 	ld	hl, #_playerX
      00182B 6E                    5795 	ld	l, (hl)
                                   5796 ;	spillPairReg hl
                                   5797 ;	spillPairReg hl
      00182C FAr8Br00              5798 	ld	a, (_playerX + 1)
      00182F 67                    5799 	ld	h, a
                                   5800 ;	spillPairReg hl
                                   5801 ;	spillPairReg hl
      001830 09                    5802 	add	hl, bc
      001831 4D                    5803 	ld	c, l
      001832 44                    5804 	ld	b, h
      001833 21r8Ar00              5805 	ld	hl, #_playerX
      001836 79                    5806 	ld	a, c
      001837 22                    5807 	ld	(hl+), a
                                   5808 ;src/main.c:585: uint16_t limitedPlayerX = u16Clamp(playerX, 68<<5, 92<<5);//0->160, with 8 px margin for left edge & 50px for the edges
      001838 78                    5809 	ld	a, b
      001839 32                    5810 	ld	(hl-), a
      00183A 2A                    5811 	ld	a, (hl+)
      00183B 4F                    5812 	ld	c, a
      00183C 46                    5813 	ld	b, (hl)
      00183D 79                    5814 	ld	a, c
      00183E D6 80                 5815 	sub	a, #0x80
      001840 78                    5816 	ld	a, b
      001841 DE 08                 5817 	sbc	a, #0x08
      001843 30 05                 5818 	jr	NC, 00173$
      001845 01 80 08              5819 	ld	bc, #0x0880
      001848 18 0B                 5820 	jr	00174$
      00184A                       5821 00173$:
      00184A 3E 80                 5822 	ld	a, #0x80
      00184C B9                    5823 	cp	a, c
      00184D 3E 0B                 5824 	ld	a, #0x0b
      00184F 98                    5825 	sbc	a, b
      001850 30 03                 5826 	jr	NC, 00175$
      001852 01 80 0B              5827 	ld	bc, #0x0b80
      001855                       5828 00175$:
      001855                       5829 00174$:
      001855 59                    5830 	ld	e,c
      001856 50                    5831 	ld	d,b
                                   5832 ;src/main.c:587: xOverflow = (playerX - limitedPlayerX);
      001857 FAr8Ar00              5833 	ld	a, (#_playerX)
      00185A 93                    5834 	sub	a, e
      00185B EAr94r00              5835 	ld	(#_xOverflow),a
      00185E FAr8Br00              5836 	ld	a, (#_playerX + 1)
      001861 9A                    5837 	sbc	a, d
      001862 21r95r00              5838 	ld	hl, #_xOverflow + 1
                                   5839 ;src/main.c:588: if (xOverflow >= 0) {
      001865 32                    5840 	ld	(hl-), a
      001866 6E                    5841 	ld	l, (hl)
                                   5842 ;	spillPairReg hl
                                   5843 ;	spillPairReg hl
      001867 FAr95r00              5844 	ld	a, (_xOverflow + 1)
                                   5845 ;	spillPairReg hl
                                   5846 ;	spillPairReg hl
      00186A CB 7F                 5847 	bit	7,a
      00186C 20 22                 5848 	jr	NZ, 00111$
                                   5849 ;src/main.c:589: xOverflow = xOverflow >> 5;
      00186E 21r95r00              5850 	ld	hl, #_xOverflow + 1
      001871 CB 2E                 5851 	sra	(hl)
      001873 2B                    5852 	dec	hl
      001874 CB 1E                 5853 	rr	(hl)
      001876 23                    5854 	inc	hl
      001877 CB 2E                 5855 	sra	(hl)
      001879 2B                    5856 	dec	hl
      00187A CB 1E                 5857 	rr	(hl)
      00187C 23                    5858 	inc	hl
      00187D CB 2E                 5859 	sra	(hl)
      00187F 2B                    5860 	dec	hl
      001880 CB 1E                 5861 	rr	(hl)
      001882 23                    5862 	inc	hl
      001883 CB 2E                 5863 	sra	(hl)
      001885 2B                    5864 	dec	hl
      001886 CB 1E                 5865 	rr	(hl)
      001888 23                    5866 	inc	hl
      001889 CB 2E                 5867 	sra	(hl)
      00188B 2B                    5868 	dec	hl
      00188C CB 1E                 5869 	rr	(hl)
      00188E 18 25                 5870 	jr	00112$
      001890                       5871 00111$:
                                   5872 ;src/main.c:592: xOverflow = -((-xOverflow) >> 5);
      001890 AF                    5873 	xor	a, a
      001891 21r94r00              5874 	ld	hl, #_xOverflow
      001894 96                    5875 	sub	a, (hl)
      001895 23                    5876 	inc	hl
      001896 5F                    5877 	ld	e, a
      001897 9F                    5878 	sbc	a, a
      001898 96                    5879 	sub	a, (hl)
      001899 2B                    5880 	dec	hl
      00189A 57                    5881 	ld	d, a
      00189B CB 2A                 5882 	sra	d
      00189D CB 1B                 5883 	rr	e
      00189F CB 2A                 5884 	sra	d
      0018A1 CB 1B                 5885 	rr	e
      0018A3 CB 2A                 5886 	sra	d
      0018A5 CB 1B                 5887 	rr	e
      0018A7 CB 2A                 5888 	sra	d
      0018A9 CB 1B                 5889 	rr	e
      0018AB CB 2A                 5890 	sra	d
      0018AD CB 1B                 5891 	rr	e
      0018AF AF                    5892 	xor	a, a
      0018B0 93                    5893 	sub	a, e
      0018B1 22                    5894 	ld	(hl+), a
      0018B2 9F                    5895 	sbc	a, a
      0018B3 92                    5896 	sub	a, d
      0018B4 77                    5897 	ld	(hl), a
      0018B5                       5898 00112$:
                                   5899 ;src/main.c:594: bgX += xOverflow;
      0018B5 FAr90r00              5900 	ld	a, (#_bgX)
      0018B8 21r94r00              5901 	ld	hl, #_xOverflow
      0018BB 86                    5902 	add	a, (hl)
      0018BC 21r90r00              5903 	ld	hl, #_bgX
      0018BF 22                    5904 	ld	(hl+), a
      0018C0 7E                    5905 	ld	a, (hl)
      0018C1 21r95r00              5906 	ld	hl, #_xOverflow + 1
      0018C4 8E                    5907 	adc	a, (hl)
      0018C5 EAr91r00              5908 	ld	(#_bgX + 1),a
                                   5909 ;src/main.c:595: playerX = limitedPlayerX;
      0018C8 21r8Ar00              5910 	ld	hl, #_playerX
      0018CB 79                    5911 	ld	a, c
      0018CC 22                    5912 	ld	(hl+), a
                                   5913 ;src/main.c:596: playerDrawX=playerX >> 5;
      0018CD 78                    5914 	ld	a, b
      0018CE 32                    5915 	ld	(hl-), a
      0018CF 2A                    5916 	ld	a, (hl+)
      0018D0 4F                    5917 	ld	c, a
      0018D1 46                    5918 	ld	b, (hl)
      0018D2 CB 38                 5919 	srl	b
      0018D4 CB 19                 5920 	rr	c
      0018D6 CB 38                 5921 	srl	b
      0018D8 CB 19                 5922 	rr	c
      0018DA CB 38                 5923 	srl	b
      0018DC CB 19                 5924 	rr	c
      0018DE CB 38                 5925 	srl	b
      0018E0 CB 19                 5926 	rr	c
      0018E2 CB 38                 5927 	srl	b
      0018E4 CB 19                 5928 	rr	c
      0018E6 21r8Er00              5929 	ld	hl, #_playerDrawX
      0018E9 71                    5930 	ld	(hl), c
      0018EA 18 05                 5931 	jr	00115$
      0018EC                       5932 00114$:
                                   5933 ;src/main.c:604: xSpeed = 0;
      0018EC 21r88r00              5934 	ld	hl, #_xSpeed
      0018EF 36 00                 5935 	ld	(hl), #0x00
      0018F1                       5936 00115$:
                                   5937 ;src/main.c:612: uint8_t yCollisionPoint = playerDrawY; 
      0018F1 FAr8Fr00              5938 	ld	a, (#_playerDrawY)
      0018F4 F8 07                 5939 	ldhl	sp,	#7
      0018F6 77                    5940 	ld	(hl), a
                                   5941 ;src/main.c:615: yCollisionPoint = playerDrawY +8; //bottom edge
      0018F7 21r8Fr00              5942 	ld	hl, #_playerDrawY
      0018FA 4E                    5943 	ld	c, (hl)
                                   5944 ;src/main.c:614: if (ySpeed > 0) {
      0018FB 21r89r00              5945 	ld	hl, #_ySpeed
      0018FE 5E                    5946 	ld	e, (hl)
      0018FF AF                    5947 	xor	a, a
      001900 57                    5948 	ld	d, a
      001901 96                    5949 	sub	a, (hl)
      001902 CB 7B                 5950 	bit	7, e
      001904 28 07                 5951 	jr	Z, 00350$
      001906 CB 7A                 5952 	bit	7, d
      001908 20 08                 5953 	jr	NZ, 00351$
      00190A BF                    5954 	cp	a, a
      00190B 18 05                 5955 	jr	00351$
      00190D                       5956 00350$:
      00190D CB 7A                 5957 	bit	7, d
      00190F 28 01                 5958 	jr	Z, 00351$
      001911 37                    5959 	scf
      001912                       5960 00351$:
      001912 30 06                 5961 	jr	NC, 00117$
                                   5962 ;src/main.c:615: yCollisionPoint = playerDrawY +8; //bottom edge
      001914 79                    5963 	ld	a, c
      001915 C6 08                 5964 	add	a, #0x08
      001917 F8 07                 5965 	ldhl	sp,	#7
      001919 77                    5966 	ld	(hl), a
      00191A                       5967 00117$:
                                   5968 ;src/main.c:617: if (ySpeed < 0) {
      00191A FAr89r00              5969 	ld	a, (#_ySpeed)
      00191D CB 7F                 5970 	bit	7, a
      00191F 28 06                 5971 	jr	Z, 00119$
                                   5972 ;src/main.c:618: yCollisionPoint = playerDrawY -8; //top edge, 
      001921 79                    5973 	ld	a, c
      001922 C6 F8                 5974 	add	a, #0xf8
      001924 F8 07                 5975 	ldhl	sp,	#7
      001926 77                    5976 	ld	(hl), a
      001927                       5977 00119$:
                                   5978 ;src/main.c:622: bgindX = ((playerDrawX + bgX) >> 3)%32;
      001927 FAr8Er00              5979 	ld	a, (#_playerDrawX)
      00192A 0E 00                 5980 	ld	c, #0x00
      00192C F8 03                 5981 	ldhl	sp,	#3
      00192E 22                    5982 	ld	(hl+), a
      00192F 79                    5983 	ld	a, c
      001930 32                    5984 	ld	(hl-), a
      001931 2A                    5985 	ld	a, (hl+)
      001932 5F                    5986 	ld	e, a
      001933 56                    5987 	ld	d, (hl)
      001934 21r90r00              5988 	ld	hl, #_bgX
      001937 2A                    5989 	ld	a,	(hl+)
      001938 66                    5990 	ld	h, (hl)
      001939 6F                    5991 	ld	l, a
      00193A 19                    5992 	add	hl, de
      00193B E5                    5993 	push	hl
      00193C 7D                    5994 	ld	a, l
      00193D F8 07                 5995 	ldhl	sp,	#7
      00193F 77                    5996 	ld	(hl), a
      001940 E1                    5997 	pop	hl
      001941 7C                    5998 	ld	a, h
      001942 F8 06                 5999 	ldhl	sp,	#6
      001944 77                    6000 	ld	(hl), a
      001945 CB 2E                 6001 	sra	(hl)
      001947 2B                    6002 	dec	hl
      001948 CB 1E                 6003 	rr	(hl)
      00194A 23                    6004 	inc	hl
      00194B CB 2E                 6005 	sra	(hl)
      00194D 2B                    6006 	dec	hl
      00194E CB 1E                 6007 	rr	(hl)
      001950 23                    6008 	inc	hl
      001951 CB 2E                 6009 	sra	(hl)
      001953 2B                    6010 	dec	hl
      001954 CB 1E                 6011 	rr	(hl)
      001956 11 20 00              6012 	ld	de, #0x0020
      001959 D5                    6013 	push	de
      00195A 2A                    6014 	ld	a, (hl+)
      00195B 5F                    6015 	ld	e, a
      00195C 56                    6016 	ld	d, (hl)
      00195D D5                    6017 	push	de
      00195E CDr00r00              6018 	call	__modsint
      001961 E8 04                 6019 	add	sp, #4
      001963 F8 05                 6020 	ldhl	sp,	#5
      001965 7B                    6021 	ld	a, e
      001966 22                    6022 	ld	(hl+), a
      001967 72                    6023 	ld	(hl), d
      001968 F8 05                 6024 	ldhl	sp,	#5
      00196A 7E                    6025 	ld	a, (hl)
      00196B F8 00                 6026 	ldhl	sp,	#0
      00196D 77                    6027 	ld	(hl), a
      00196E F8 06                 6028 	ldhl	sp,	#6
      001970 7E                    6029 	ld	a, (hl)
      001971 F8 01                 6030 	ldhl	sp,	#1
      001973 77                    6031 	ld	(hl), a
                                   6032 ;src/main.c:625: bgindY = ((yCollisionPoint + bgY) >> 3)%32; 
      001974 F8 07                 6033 	ldhl	sp,	#7
      001976 3A                    6034 	ld	a, (hl-)
      001977 22                    6035 	ld	(hl+), a
      001978 AF                    6036 	xor	a, a
      001979 32                    6037 	ld	(hl-), a
      00197A 3A                    6038 	ld	a, (hl-)
      00197B 2B                    6039 	dec	hl
      00197C 77                    6040 	ld	(hl), a
      00197D F8 07                 6041 	ldhl	sp,	#7
      00197F 3A                    6042 	ld	a, (hl-)
      001980 2B                    6043 	dec	hl
      001981 32                    6044 	ld	(hl-), a
      001982 2A                    6045 	ld	a, (hl+)
      001983 5F                    6046 	ld	e, a
      001984 56                    6047 	ld	d, (hl)
      001985 21r92r00              6048 	ld	hl, #_bgY
      001988 2A                    6049 	ld	a,	(hl+)
      001989 66                    6050 	ld	h, (hl)
      00198A 6F                    6051 	ld	l, a
      00198B 19                    6052 	add	hl, de
      00198C E5                    6053 	push	hl
      00198D 7D                    6054 	ld	a, l
      00198E F8 08                 6055 	ldhl	sp,	#8
      001990 77                    6056 	ld	(hl), a
      001991 E1                    6057 	pop	hl
      001992 7C                    6058 	ld	a, h
      001993 F8 07                 6059 	ldhl	sp,	#7
      001995 77                    6060 	ld	(hl), a
      001996 CB 2E                 6061 	sra	(hl)
      001998 2B                    6062 	dec	hl
      001999 CB 1E                 6063 	rr	(hl)
      00199B 23                    6064 	inc	hl
      00199C CB 2E                 6065 	sra	(hl)
      00199E 2B                    6066 	dec	hl
      00199F CB 1E                 6067 	rr	(hl)
      0019A1 23                    6068 	inc	hl
      0019A2 CB 2E                 6069 	sra	(hl)
      0019A4 2B                    6070 	dec	hl
      0019A5 CB 1E                 6071 	rr	(hl)
      0019A7 11 20 00              6072 	ld	de, #0x0020
      0019AA D5                    6073 	push	de
      0019AB 2A                    6074 	ld	a, (hl+)
      0019AC 5F                    6075 	ld	e, a
      0019AD 56                    6076 	ld	d, (hl)
      0019AE D5                    6077 	push	de
      0019AF CDr00r00              6078 	call	__modsint
      0019B2 E8 04                 6079 	add	sp, #4
      0019B4 F8 06                 6080 	ldhl	sp,	#6
      0019B6 7B                    6081 	ld	a, e
      0019B7 22                    6082 	ld	(hl+), a
      0019B8 72                    6083 	ld	(hl), d
      0019B9 F8 06                 6084 	ldhl	sp,	#6
      0019BB 2A                    6085 	ld	a, (hl+)
      0019BC 77                    6086 	ld	(hl), a
                                   6087 ;src/main.c:628: ind = 32*bgindY + bgindX;
      0019BD 3A                    6088 	ld	a, (hl-)
      0019BE 22                    6089 	ld	(hl+), a
      0019BF 36 00                 6090 	ld	(hl), #0x00
      0019C1 3E 05                 6091 	ld	a, #0x05
      0019C3                       6092 00352$:
      0019C3 F8 06                 6093 	ldhl	sp,	#6
      0019C5 CB 26                 6094 	sla	(hl)
      0019C7 23                    6095 	inc	hl
      0019C8 CB 16                 6096 	rl	(hl)
      0019CA 3D                    6097 	dec	a
      0019CB 20 F6                 6098 	jr	NZ, 00352$
      0019CD 2B                    6099 	dec	hl
      0019CE 3A                    6100 	ld	a, (hl-)
      0019CF 2B                    6101 	dec	hl
      0019D0 77                    6102 	ld	(hl), a
      0019D1 F8 07                 6103 	ldhl	sp,	#7
      0019D3 3A                    6104 	ld	a, (hl-)
      0019D4 2B                    6105 	dec	hl
      0019D5 77                    6106 	ld	(hl), a
      0019D6 D1                    6107 	pop	de
      0019D7 D5                    6108 	push	de
      0019D8 3A                    6109 	ld	a, (hl-)
      0019D9 6E                    6110 	ld	l, (hl)
      0019DA 67                    6111 	ld	h, a
      0019DB 19                    6112 	add	hl, de
      0019DC E5                    6113 	push	hl
      0019DD 7D                    6114 	ld	a, l
      0019DE F8 08                 6115 	ldhl	sp,	#8
      0019E0 77                    6116 	ld	(hl), a
      0019E1 E1                    6117 	pop	hl
      0019E2 7C                    6118 	ld	a, h
      0019E3 F8 07                 6119 	ldhl	sp,	#7
      0019E5 77                    6120 	ld	(hl), a
                                   6121 ;src/main.c:629: result = 1;
      0019E6 F8 03                 6122 	ldhl	sp,	#3
      0019E8 36 01                 6123 	ld	(hl), #0x01
                                   6124 ;src/main.c:630: for (uint8_t j=0; j<BLANKSIZE; j++) {
      0019EA F8 06                 6125 	ldhl	sp,#6
      0019EC 2A                    6126 	ld	a, (hl+)
      0019ED 5F                    6127 	ld	e, a
      0019EE 56                    6128 	ld	d, (hl)
      0019EF 21r87r00              6129 	ld	hl, #_background1
      0019F2 19                    6130 	add	hl, de
      0019F3 4D                    6131 	ld	c, l
      0019F4 44                    6132 	ld	b, h
      0019F5 0A                    6133 	ld	a, (bc)
      0019F6 F8 04                 6134 	ldhl	sp,	#4
      0019F8 77                    6135 	ld	(hl), a
      0019F9 F8 07                 6136 	ldhl	sp,	#7
      0019FB 36 00                 6137 	ld	(hl), #0x00
      0019FD                       6138 00161$:
      0019FD F8 07                 6139 	ldhl	sp,	#7
      0019FF 7E                    6140 	ld	a, (hl)
      001A00 F8 02                 6141 	ldhl	sp,	#2
      001A02 96                    6142 	sub	a, (hl)
      001A03 30 29                 6143 	jr	NC, 00122$
                                   6144 ;src/main.c:631: if (background1[ind] == BLANK[j] ) {
      001A05 11r59r08              6145 	ld	de, #_BLANK
      001A08 F8 07                 6146 	ldhl	sp,	#7
      001A0A 6E                    6147 	ld	l, (hl)
      001A0B 26 00                 6148 	ld	h, #0x00
      001A0D 19                    6149 	add	hl, de
      001A0E E5                    6150 	push	hl
      001A0F 7D                    6151 	ld	a, l
      001A10 F8 07                 6152 	ldhl	sp,	#7
      001A12 77                    6153 	ld	(hl), a
      001A13 E1                    6154 	pop	hl
      001A14 7C                    6155 	ld	a, h
      001A15 F8 06                 6156 	ldhl	sp,	#6
      001A17 32                    6157 	ld	(hl-), a
      001A18 2A                    6158 	ld	a, (hl+)
      001A19 5F                    6159 	ld	e, a
      001A1A 3A                    6160 	ld	a, (hl-)
      001A1B 2B                    6161 	dec	hl
      001A1C 57                    6162 	ld	d, a
      001A1D 1A                    6163 	ld	a, (de)
      001A1E 4F                    6164 	ld	c, a
      001A1F 7E                    6165 	ld	a, (hl)
      001A20 91                    6166 	sub	a, c
      001A21 20 06                 6167 	jr	NZ, 00162$
                                   6168 ;src/main.c:632: result = 0;
      001A23 F8 03                 6169 	ldhl	sp,	#3
      001A25 36 00                 6170 	ld	(hl), #0x00
                                   6171 ;src/main.c:633: break;
      001A27 18 05                 6172 	jr	00122$
      001A29                       6173 00162$:
                                   6174 ;src/main.c:630: for (uint8_t j=0; j<BLANKSIZE; j++) {
      001A29 F8 07                 6175 	ldhl	sp,	#7
      001A2B 34                    6176 	inc	(hl)
      001A2C 18 CF                 6177 	jr	00161$
      001A2E                       6178 00122$:
                                   6179 ;src/main.c:637: if (result == 0) {
      001A2E F8 03                 6180 	ldhl	sp,	#3
      001A30 7E                    6181 	ld	a, (hl)
      001A31 B7                    6182 	or	a, a
      001A32 C2rFCr1A              6183 	jp	NZ, 00127$
                                   6184 ;src/main.c:638: playerY += ySpeed;
      001A35 FAr89r00              6185 	ld	a, (#_ySpeed)
      001A38 4F                    6186 	ld	c, a
      001A39 07                    6187 	rlca
      001A3A 9F                    6188 	sbc	a, a
      001A3B 21r8Cr00              6189 	ld	hl, #_playerY
      001A3E 5E                    6190 	ld	e, (hl)
      001A3F 23                    6191 	inc	hl
      001A40 56                    6192 	ld	d, (hl)
      001A41 2B                    6193 	dec	hl
      001A42 47                    6194 	ld	b, a
      001A43 79                    6195 	ld	a, c
      001A44 83                    6196 	add	a, e
      001A45 4F                    6197 	ld	c, a
      001A46 78                    6198 	ld	a, b
      001A47 8A                    6199 	adc	a, d
      001A48 47                    6200 	ld	b, a
      001A49 79                    6201 	ld	a, c
      001A4A 22                    6202 	ld	(hl+), a
                                   6203 ;src/main.c:640: uint16_t limitedPlayerY = u16Clamp(playerY, 48<<5, 78<<5);//0->144, with 16px margin for top & -8 for bottom, 45px for edges
      001A4B 78                    6204 	ld	a, b
      001A4C 32                    6205 	ld	(hl-), a
      001A4D 2A                    6206 	ld	a, (hl+)
      001A4E 5F                    6207 	ld	e, a
      001A4F 56                    6208 	ld	d, (hl)
      001A50 7A                    6209 	ld	a, d
      001A51 D6 06                 6210 	sub	a, #0x06
      001A53 30 05                 6211 	jr	NC, 00177$
      001A55 11 00 06              6212 	ld	de, #0x0600
      001A58 18 0B                 6213 	jr	00178$
      001A5A                       6214 00177$:
      001A5A 3E C0                 6215 	ld	a, #0xc0
      001A5C BB                    6216 	cp	a, e
      001A5D 3E 09                 6217 	ld	a, #0x09
      001A5F 9A                    6218 	sbc	a, d
      001A60 30 03                 6219 	jr	NC, 00179$
      001A62 11 C0 09              6220 	ld	de, #0x09c0
      001A65                       6221 00179$:
      001A65                       6222 00178$:
      001A65 4B                    6223 	ld	c, e
      001A66 42                    6224 	ld	b, d
                                   6225 ;src/main.c:642: yOverflow = (playerY - limitedPlayerY);
      001A67 FAr8Cr00              6226 	ld	a, (#_playerY)
      001A6A 93                    6227 	sub	a, e
      001A6B EAr96r00              6228 	ld	(#_yOverflow),a
      001A6E FAr8Dr00              6229 	ld	a, (#_playerY + 1)
      001A71 9A                    6230 	sbc	a, d
      001A72 21r97r00              6231 	ld	hl, #_yOverflow + 1
                                   6232 ;src/main.c:643: if (yOverflow >= 0) {
      001A75 32                    6233 	ld	(hl-), a
      001A76 6E                    6234 	ld	l, (hl)
                                   6235 ;	spillPairReg hl
                                   6236 ;	spillPairReg hl
      001A77 FAr97r00              6237 	ld	a, (_yOverflow + 1)
                                   6238 ;	spillPairReg hl
                                   6239 ;	spillPairReg hl
      001A7A CB 7F                 6240 	bit	7,a
      001A7C 20 22                 6241 	jr	NZ, 00124$
                                   6242 ;src/main.c:644: yOverflow = yOverflow >> 5;
      001A7E 21r97r00              6243 	ld	hl, #_yOverflow + 1
      001A81 CB 2E                 6244 	sra	(hl)
      001A83 2B                    6245 	dec	hl
      001A84 CB 1E                 6246 	rr	(hl)
      001A86 23                    6247 	inc	hl
      001A87 CB 2E                 6248 	sra	(hl)
      001A89 2B                    6249 	dec	hl
      001A8A CB 1E                 6250 	rr	(hl)
      001A8C 23                    6251 	inc	hl
      001A8D CB 2E                 6252 	sra	(hl)
      001A8F 2B                    6253 	dec	hl
      001A90 CB 1E                 6254 	rr	(hl)
      001A92 23                    6255 	inc	hl
      001A93 CB 2E                 6256 	sra	(hl)
      001A95 2B                    6257 	dec	hl
      001A96 CB 1E                 6258 	rr	(hl)
      001A98 23                    6259 	inc	hl
      001A99 CB 2E                 6260 	sra	(hl)
      001A9B 2B                    6261 	dec	hl
      001A9C CB 1E                 6262 	rr	(hl)
      001A9E 18 25                 6263 	jr	00125$
      001AA0                       6264 00124$:
                                   6265 ;src/main.c:647: yOverflow = -((-yOverflow) >> 5);
      001AA0 AF                    6266 	xor	a, a
      001AA1 21r96r00              6267 	ld	hl, #_yOverflow
      001AA4 96                    6268 	sub	a, (hl)
      001AA5 23                    6269 	inc	hl
      001AA6 5F                    6270 	ld	e, a
      001AA7 9F                    6271 	sbc	a, a
      001AA8 96                    6272 	sub	a, (hl)
      001AA9 2B                    6273 	dec	hl
      001AAA 57                    6274 	ld	d, a
      001AAB CB 2A                 6275 	sra	d
      001AAD CB 1B                 6276 	rr	e
      001AAF CB 2A                 6277 	sra	d
      001AB1 CB 1B                 6278 	rr	e
      001AB3 CB 2A                 6279 	sra	d
      001AB5 CB 1B                 6280 	rr	e
      001AB7 CB 2A                 6281 	sra	d
      001AB9 CB 1B                 6282 	rr	e
      001ABB CB 2A                 6283 	sra	d
      001ABD CB 1B                 6284 	rr	e
      001ABF AF                    6285 	xor	a, a
      001AC0 93                    6286 	sub	a, e
      001AC1 22                    6287 	ld	(hl+), a
      001AC2 9F                    6288 	sbc	a, a
      001AC3 92                    6289 	sub	a, d
      001AC4 77                    6290 	ld	(hl), a
      001AC5                       6291 00125$:
                                   6292 ;src/main.c:649: bgY += yOverflow;
      001AC5 FAr92r00              6293 	ld	a, (#_bgY)
      001AC8 21r96r00              6294 	ld	hl, #_yOverflow
      001ACB 86                    6295 	add	a, (hl)
      001ACC 21r92r00              6296 	ld	hl, #_bgY
      001ACF 22                    6297 	ld	(hl+), a
      001AD0 7E                    6298 	ld	a, (hl)
      001AD1 21r97r00              6299 	ld	hl, #_yOverflow + 1
      001AD4 8E                    6300 	adc	a, (hl)
      001AD5 EAr93r00              6301 	ld	(#_bgY + 1),a
                                   6302 ;src/main.c:650: playerY = limitedPlayerY;
      001AD8 21r8Cr00              6303 	ld	hl, #_playerY
      001ADB 79                    6304 	ld	a, c
      001ADC 22                    6305 	ld	(hl+), a
                                   6306 ;src/main.c:651: playerDrawY=playerY >> 5;
      001ADD 78                    6307 	ld	a, b
      001ADE 32                    6308 	ld	(hl-), a
      001ADF 2A                    6309 	ld	a, (hl+)
      001AE0 4F                    6310 	ld	c, a
      001AE1 46                    6311 	ld	b, (hl)
      001AE2 CB 38                 6312 	srl	b
      001AE4 CB 19                 6313 	rr	c
      001AE6 CB 38                 6314 	srl	b
      001AE8 CB 19                 6315 	rr	c
      001AEA CB 38                 6316 	srl	b
      001AEC CB 19                 6317 	rr	c
      001AEE CB 38                 6318 	srl	b
      001AF0 CB 19                 6319 	rr	c
      001AF2 CB 38                 6320 	srl	b
      001AF4 CB 19                 6321 	rr	c
      001AF6 21r8Fr00              6322 	ld	hl, #_playerDrawY
      001AF9 71                    6323 	ld	(hl), c
      001AFA 18 05                 6324 	jr	00128$
      001AFC                       6325 00127$:
                                   6326 ;src/main.c:656: ySpeed = 0;
      001AFC 21r89r00              6327 	ld	hl, #_ySpeed
      001AFF 36 00                 6328 	ld	(hl), #0x00
      001B01                       6329 00128$:
                                   6330 ;src/main.c:556: uint8_t xCollisionPoint = playerDrawX; 
      001B01 FAr8Er00              6331 	ld	a, (#_playerDrawX)
      001B04 F8 07                 6332 	ldhl	sp,	#7
      001B06 77                    6333 	ld	(hl), a
                                   6334 ;src/main.c:615: yCollisionPoint = playerDrawY +8; //bottom edge
      001B07 FAr8Fr00              6335 	ld	a, (#_playerDrawY)
      001B0A C6 08                 6336 	add	a, #0x08
      001B0C F8 06                 6337 	ldhl	sp,	#6
      001B0E 77                    6338 	ld	(hl), a
                                   6339 ;src/main.c:659: if (xDir >= 0) {
      001B0F FAr86r00              6340 	ld	a, (#_xDir)
      001B12 CB 7F                 6341 	bit	7, a
      001B14 20 2A                 6342 	jr	NZ, 00130$
                                   6343 ;src/main.c:660: move_sprite(0, playerDrawX , playerDrawY + 8);
                                   6344 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6345 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B16 11r00r00              6346 	ld	de, #_shadow_OAM
      001B19 F8 06                 6347 	ldhl	sp,	#6
      001B1B 2A                    6348 	ld	a, (hl+)
      001B1C 12                    6349 	ld	(de), a
      001B1D 11r01r00              6350 	ld	de, #(_shadow_OAM + 1)
      001B20 7E                    6351 	ld	a, (hl)
      001B21 12                    6352 	ld	(de), a
                                   6353 ;src/main.c:662: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001B22 FAr8Fr00              6354 	ld	a, (#_playerDrawY)
      001B25 F8 07                 6355 	ldhl	sp,	#7
      001B27 77                    6356 	ld	(hl), a
      001B28 3A                    6357 	ld	a, (hl-)
      001B29 C6 08                 6358 	add	a, #0x08
      001B2B 77                    6359 	ld	(hl), a
      001B2C FAr8Er00              6360 	ld	a, (#_playerDrawX)
      001B2F C6 08                 6361 	add	a, #0x08
      001B31 F8 07                 6362 	ldhl	sp,	#7
                                   6363 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6364 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B33 32                    6365 	ld	(hl-), a
      001B34 11r04r00              6366 	ld	de, #(_shadow_OAM + 4)
      001B37 2A                    6367 	ld	a, (hl+)
      001B38 12                    6368 	ld	(de), a
      001B39 11r05r00              6369 	ld	de, #(_shadow_OAM + 5)
      001B3C 7E                    6370 	ld	a, (hl)
      001B3D 12                    6371 	ld	(de), a
                                   6372 ;src/main.c:662: move_sprite(1, playerDrawX +8, playerDrawY +8);
      001B3E 18 28                 6373 	jr	00131$
      001B40                       6374 00130$:
                                   6375 ;src/main.c:665: move_sprite(1, playerDrawX , playerDrawY +8);
                                   6376 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      001B40 01r04r00              6377 	ld	bc, #(_shadow_OAM + 4)
                                   6378 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B43 F8 06                 6379 	ldhl	sp,	#6
      001B45 2A                    6380 	ld	a, (hl+)
      001B46 02                    6381 	ld	(bc), a
      001B47 03                    6382 	inc	bc
      001B48 7E                    6383 	ld	a, (hl)
      001B49 02                    6384 	ld	(bc), a
                                   6385 ;src/main.c:667: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B4A FAr8Fr00              6386 	ld	a, (#_playerDrawY)
      001B4D F8 07                 6387 	ldhl	sp,	#7
      001B4F 77                    6388 	ld	(hl), a
      001B50 3A                    6389 	ld	a, (hl-)
      001B51 C6 08                 6390 	add	a, #0x08
      001B53 77                    6391 	ld	(hl), a
      001B54 FAr8Er00              6392 	ld	a, (#_playerDrawX)
      001B57 F8 07                 6393 	ldhl	sp,	#7
      001B59 77                    6394 	ld	(hl), a
      001B5A 7E                    6395 	ld	a, (hl)
      001B5B C6 08                 6396 	add	a, #0x08
                                   6397 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
                                   6398 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      001B5D 32                    6399 	ld	(hl-), a
      001B5E 11r00r00              6400 	ld	de, #_shadow_OAM
      001B61 2A                    6401 	ld	a, (hl+)
      001B62 12                    6402 	ld	(de), a
      001B63 11r01r00              6403 	ld	de, #(_shadow_OAM + 1)
      001B66 7E                    6404 	ld	a, (hl)
      001B67 12                    6405 	ld	(de), a
                                   6406 ;src/main.c:667: move_sprite(0, playerDrawX +8, playerDrawY +8);
      001B68                       6407 00131$:
                                   6408 ;src/main.c:672: if (bgX >= 256) {
      001B68 21r90r00              6409 	ld	hl, #_bgX
      001B6B 2A                    6410 	ld	a, (hl+)
      001B6C 4F                    6411 	ld	c, a
      001B6D 46                    6412 	ld	b, (hl)
      001B6E 78                    6413 	ld	a, b
      001B6F EE 80                 6414 	xor	a, #0x80
      001B71 D6 81                 6415 	sub	a, #0x81
      001B73 38 0F                 6416 	jr	C, 00133$
                                   6417 ;src/main.c:673: bgX = bgX % 256;
      001B75 AF                    6418 	xor	a, a
      001B76 3C                    6419 	inc	a
      001B77 F5                    6420 	push	af
      001B78 C5                    6421 	push	bc
      001B79 CDr00r00              6422 	call	__modsint
      001B7C E8 04                 6423 	add	sp, #4
      001B7E 21r90r00              6424 	ld	hl, #_bgX
      001B81 7B                    6425 	ld	a, e
      001B82 22                    6426 	ld	(hl+), a
      001B83 72                    6427 	ld	(hl), d
      001B84                       6428 00133$:
                                   6429 ;src/main.c:675: if (bgX < 0) {
      001B84 21r90r00              6430 	ld	hl, #_bgX
      001B87 2A                    6431 	ld	a, (hl+)
      001B88 4F                    6432 	ld	c, a
      001B89 46                    6433 	ld	b, (hl)
      001B8A CB 78                 6434 	bit	7, b
      001B8C 28 15                 6435 	jr	Z, 00135$
                                   6436 ;src/main.c:676: bgX = 255 - (bgX % 256);
      001B8E AF                    6437 	xor	a, a
      001B8F 3C                    6438 	inc	a
      001B90 F5                    6439 	push	af
      001B91 C5                    6440 	push	bc
      001B92 CDr00r00              6441 	call	__modsint
      001B95 E8 04                 6442 	add	sp, #4
      001B97 3E FF                 6443 	ld	a, #0xff
      001B99 93                    6444 	sub	a, e
      001B9A 4F                    6445 	ld	c, a
      001B9B 9F                    6446 	sbc	a, a
      001B9C 92                    6447 	sub	a, d
      001B9D 21r90r00              6448 	ld	hl, #_bgX
      001BA0 71                    6449 	ld	(hl), c
      001BA1 23                    6450 	inc	hl
      001BA2 77                    6451 	ld	(hl), a
      001BA3                       6452 00135$:
                                   6453 ;src/main.c:678: if (bgY >= 256) {
      001BA3 21r92r00              6454 	ld	hl, #_bgY
      001BA6 2A                    6455 	ld	a, (hl+)
      001BA7 4F                    6456 	ld	c, a
      001BA8 46                    6457 	ld	b, (hl)
      001BA9 78                    6458 	ld	a, b
      001BAA EE 80                 6459 	xor	a, #0x80
      001BAC D6 81                 6460 	sub	a, #0x81
      001BAE 38 0F                 6461 	jr	C, 00137$
                                   6462 ;src/main.c:679: bgY = bgY % 256;
      001BB0 AF                    6463 	xor	a, a
      001BB1 3C                    6464 	inc	a
      001BB2 F5                    6465 	push	af
      001BB3 C5                    6466 	push	bc
      001BB4 CDr00r00              6467 	call	__modsint
      001BB7 E8 04                 6468 	add	sp, #4
      001BB9 21r92r00              6469 	ld	hl, #_bgY
      001BBC 7B                    6470 	ld	a, e
      001BBD 22                    6471 	ld	(hl+), a
      001BBE 72                    6472 	ld	(hl), d
      001BBF                       6473 00137$:
                                   6474 ;src/main.c:681: if (bgY < 0) {
      001BBF 21r92r00              6475 	ld	hl, #_bgY
      001BC2 2A                    6476 	ld	a, (hl+)
      001BC3 4F                    6477 	ld	c, a
      001BC4 46                    6478 	ld	b, (hl)
      001BC5 CB 78                 6479 	bit	7, b
      001BC7 28 15                 6480 	jr	Z, 00139$
                                   6481 ;src/main.c:682: bgY = 255 - (bgY % 256);
      001BC9 AF                    6482 	xor	a, a
      001BCA 3C                    6483 	inc	a
      001BCB F5                    6484 	push	af
      001BCC C5                    6485 	push	bc
      001BCD CDr00r00              6486 	call	__modsint
      001BD0 E8 04                 6487 	add	sp, #4
      001BD2 3E FF                 6488 	ld	a, #0xff
      001BD4 93                    6489 	sub	a, e
      001BD5 4F                    6490 	ld	c, a
      001BD6 9F                    6491 	sbc	a, a
      001BD7 92                    6492 	sub	a, d
      001BD8 21r92r00              6493 	ld	hl, #_bgY
      001BDB 71                    6494 	ld	(hl), c
      001BDC 23                    6495 	inc	hl
      001BDD 77                    6496 	ld	(hl), a
      001BDE                       6497 00139$:
                                   6498 ;src/main.c:685: move_bkg(bgX, bgY);
      001BDE 21r92r00              6499 	ld	hl, #_bgY
      001BE1 4E                    6500 	ld	c, (hl)
      001BE2 FAr90r00              6501 	ld	a, (#_bgX)
      001BE5 E0r00                 6502 	ldh	(_SCX_REG + 0), a
                                   6503 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      001BE7 79                    6504 	ld	a, c
      001BE8 E0r00                 6505 	ldh	(_SCY_REG + 0), a
                                   6506 ;src/main.c:688: if (ySpeed > 0) ySpeed--;
      001BEA 21r89r00              6507 	ld	hl, #_ySpeed
      001BED 5E                    6508 	ld	e, (hl)
      001BEE AF                    6509 	xor	a, a
      001BEF 57                    6510 	ld	d, a
      001BF0 96                    6511 	sub	a, (hl)
      001BF1 CB 7B                 6512 	bit	7, e
      001BF3 28 07                 6513 	jr	Z, 00355$
      001BF5 CB 7A                 6514 	bit	7, d
      001BF7 20 08                 6515 	jr	NZ, 00356$
      001BF9 BF                    6516 	cp	a, a
      001BFA 18 05                 6517 	jr	00356$
      001BFC                       6518 00355$:
      001BFC CB 7A                 6519 	bit	7, d
      001BFE 28 01                 6520 	jr	Z, 00356$
      001C00 37                    6521 	scf
      001C01                       6522 00356$:
      001C01 30 04                 6523 	jr	NC, 00141$
      001C03 21r89r00              6524 	ld	hl, #_ySpeed
      001C06 35                    6525 	dec	(hl)
      001C07                       6526 00141$:
                                   6527 ;src/main.c:689: if (ySpeed < 0) ySpeed++;
      001C07 21r89r00              6528 	ld	hl, #_ySpeed
      001C0A CB 7E                 6529 	bit	7, (hl)
      001C0C 28 01                 6530 	jr	Z, 00143$
      001C0E 34                    6531 	inc	(hl)
      001C0F                       6532 00143$:
                                   6533 ;src/main.c:690: if (xSpeed > 0) xSpeed--;
      001C0F 21r88r00              6534 	ld	hl, #_xSpeed
      001C12 5E                    6535 	ld	e, (hl)
      001C13 AF                    6536 	xor	a, a
      001C14 57                    6537 	ld	d, a
      001C15 96                    6538 	sub	a, (hl)
      001C16 CB 7B                 6539 	bit	7, e
      001C18 28 07                 6540 	jr	Z, 00357$
      001C1A CB 7A                 6541 	bit	7, d
      001C1C 20 08                 6542 	jr	NZ, 00358$
      001C1E BF                    6543 	cp	a, a
      001C1F 18 05                 6544 	jr	00358$
      001C21                       6545 00357$:
      001C21 CB 7A                 6546 	bit	7, d
      001C23 28 01                 6547 	jr	Z, 00358$
      001C25 37                    6548 	scf
      001C26                       6549 00358$:
      001C26 30 04                 6550 	jr	NC, 00145$
      001C28 21r88r00              6551 	ld	hl, #_xSpeed
      001C2B 35                    6552 	dec	(hl)
      001C2C                       6553 00145$:
                                   6554 ;src/main.c:691: if (xSpeed < 0) xSpeed++;
      001C2C 21r88r00              6555 	ld	hl, #_xSpeed
      001C2F CB 7E                 6556 	bit	7, (hl)
      001C31 28 01                 6557 	jr	Z, 00163$
      001C33 34                    6558 	inc	(hl)
      001C34                       6559 00163$:
                                   6560 ;src/main.c:695: }
      001C34 E8 08                 6561 	add	sp, #8
      001C36 C9                    6562 	ret
                                   6563 ;src/main.c:697: void takeDamage(int16_t amount) {
                                   6564 ;	---------------------------------
                                   6565 ; Function takeDamage
                                   6566 ; ---------------------------------
      001C37                       6567 _takeDamage::
      001C37 3B                    6568 	dec	sp
                                   6569 ;src/main.c:698: if (amount > shield) {
      001C38 FArDEr00              6570 	ld	a, (#_shield)
      001C3B 4F                    6571 	ld	c, a
      001C3C 07                    6572 	rlca
      001C3D 9F                    6573 	sbc	a, a
      001C3E 47                    6574 	ld	b, a
                                   6575 ;src/main.c:700: hull -= (amount - shield);
      001C3F F8 03                 6576 	ldhl	sp,	#3
      001C41 7E                    6577 	ld	a, (hl)
      001C42 F8 00                 6578 	ldhl	sp,	#0
      001C44 77                    6579 	ld	(hl), a
                                   6580 ;src/main.c:698: if (amount > shield) {
      001C45 F8 03                 6581 	ldhl	sp,	#3
      001C47 79                    6582 	ld	a, c
      001C48 96                    6583 	sub	a, (hl)
      001C49 23                    6584 	inc	hl
      001C4A 78                    6585 	ld	a, b
      001C4B 9E                    6586 	sbc	a, (hl)
      001C4C 78                    6587 	ld	a, b
      001C4D 57                    6588 	ld	d, a
      001C4E CB 7E                 6589 	bit	7, (hl)
      001C50 28 07                 6590 	jr	Z, 00111$
      001C52 CB 7A                 6591 	bit	7, d
      001C54 20 08                 6592 	jr	NZ, 00112$
      001C56 BF                    6593 	cp	a, a
      001C57 18 05                 6594 	jr	00112$
      001C59                       6595 00111$:
      001C59 CB 7A                 6596 	bit	7, d
      001C5B 28 01                 6597 	jr	Z, 00112$
      001C5D 37                    6598 	scf
      001C5E                       6599 00112$:
      001C5E 30 10                 6600 	jr	NC, 00102$
                                   6601 ;src/main.c:699: shield = 0;
      001C60 21rDEr00              6602 	ld	hl, #_shield
      001C63 36 00                 6603 	ld	(hl), #0x00
                                   6604 ;src/main.c:700: hull -= (amount - shield);
      001C65 FArDDr00              6605 	ld	a, (#_hull)
      001C68 F8 00                 6606 	ldhl	sp,	#0
      001C6A 96                    6607 	sub	a, (hl)
      001C6B EArDDr00              6608 	ld	(#_hull),a
      001C6E 18 09                 6609 	jr	00104$
      001C70                       6610 00102$:
                                   6611 ;src/main.c:703: shield -= amount;
      001C70 FArDEr00              6612 	ld	a, (#_shield)
      001C73 F8 00                 6613 	ldhl	sp,	#0
      001C75 96                    6614 	sub	a, (hl)
      001C76 EArDEr00              6615 	ld	(#_shield),a
      001C79                       6616 00104$:
                                   6617 ;src/main.c:705: }
      001C79 33                    6618 	inc	sp
      001C7A C9                    6619 	ret
                                   6620 ;src/main.c:707: void spawnPickup(int16_t x, int16_t y) {
                                   6621 ;	---------------------------------
                                   6622 ; Function spawnPickup
                                   6623 ; ---------------------------------
      001C7B                       6624 _spawnPickup::
                                   6625 ;src/main.c:708: uint8_t spawn = ((uint8_t)rand()) % (uint8_t) 16;
      001C7B CDr00r00              6626 	call	_rand
      001C7E 7B                    6627 	ld	a, e
      001C7F E6 0F                 6628 	and	a, #0x0f
      001C81 C0                    6629 	ret	NZ
                                   6630 ;src/main.c:709: if (spawn == 0) {
                                   6631 ;src/main.c:710: uint8_t type = ((uint8_t)rand()) % (uint8_t) 2;
      001C82 CDr00r00              6632 	call	_rand
      001C85 7B                    6633 	ld	a, e
      001C86 0F                    6634 	rrca
      001C87 38 1D                 6635 	jr	C, 00102$
                                   6636 ;src/main.c:712: if (type == 0 && gunLevel < MAXGUNLEVEL) {
      001C89 21r72r08              6637 	ld	hl, #_MAXGUNLEVEL
      001C8C 4E                    6638 	ld	c, (hl)
      001C8D FAr99r00              6639 	ld	a, (#_gunLevel)
      001C90 91                    6640 	sub	a, c
      001C91 30 13                 6641 	jr	NC, 00102$
                                   6642 ;src/main.c:713: pickup = upgrade;
      001C93 11 08 00              6643 	ld	de, #0x0008
      001C96 D5                    6644 	push	de
      001C97 11r08r07              6645 	ld	de, #_upgrade
      001C9A D5                    6646 	push	de
      001C9B 11rE1r00              6647 	ld	de, #_pickup
      001C9E D5                    6648 	push	de
      001C9F CDr00r00              6649 	call	___memcpy
      001CA2 E8 06                 6650 	add	sp, #6
      001CA4 18 11                 6651 	jr	00103$
      001CA6                       6652 00102$:
                                   6653 ;src/main.c:716: pickup = ammo;
      001CA6 11 08 00              6654 	ld	de, #0x0008
      001CA9 D5                    6655 	push	de
      001CAA 11r10r07              6656 	ld	de, #_ammo
      001CAD D5                    6657 	push	de
      001CAE 11rE1r00              6658 	ld	de, #_pickup
      001CB1 D5                    6659 	push	de
      001CB2 CDr00r00              6660 	call	___memcpy
      001CB5 E8 06                 6661 	add	sp, #6
      001CB7                       6662 00103$:
                                   6663 ;src/main.c:718: pickup.active = 1;
      001CB7 21rE5r00              6664 	ld	hl, #(_pickup + 4)
      001CBA 36 01                 6665 	ld	(hl), #0x01
                                   6666 ;src/main.c:720: pickup.x = x;
      001CBC 11rE1r00              6667 	ld	de, #_pickup
      001CBF F8 02                 6668 	ldhl	sp,	#2
      001CC1 2A                    6669 	ld	a, (hl+)
      001CC2 12                    6670 	ld	(de), a
      001CC3 13                    6671 	inc	de
                                   6672 ;src/main.c:721: pickup.y = y;
      001CC4 2A                    6673 	ld	a, (hl+)
      001CC5 12                    6674 	ld	(de), a
      001CC6 11rE3r00              6675 	ld	de, #(_pickup + 2)
      001CC9 2A                    6676 	ld	a, (hl+)
      001CCA 12                    6677 	ld	(de), a
      001CCB 13                    6678 	inc	de
      001CCC 7E                    6679 	ld	a, (hl)
      001CCD 12                    6680 	ld	(de), a
                                   6681 ;src/main.c:723: set_sprite_tile(3, pickup.tile); //0x7f
      001CCE 21rE8r00              6682 	ld	hl, #_pickup + 7
      001CD1 4E                    6683 	ld	c, (hl)
                                   6684 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001CD2 21r0Er00              6685 	ld	hl, #(_shadow_OAM + 14)
      001CD5 71                    6686 	ld	(hl), c
                                   6687 ;src/main.c:723: set_sprite_tile(3, pickup.tile); //0x7f
                                   6688 ;src/main.c:729: }
      001CD6 C9                    6689 	ret
                                   6690 ;src/main.c:731: void checkCollision() {
                                   6691 ;	---------------------------------
                                   6692 ; Function checkCollision
                                   6693 ; ---------------------------------
      001CD7                       6694 _checkCollision::
      001CD7 E8 EF                 6695 	add	sp, #-17
                                   6696 ;src/main.c:738: struct Enemy *eptr = enemies + enemyCollisionCount;
      001CD9 01r50r00              6697 	ld	bc, #_enemies+0
      001CDC 21r98r00              6698 	ld	hl, #_enemyCollisionCount
      001CDF 6E                    6699 	ld	l, (hl)
                                   6700 ;	spillPairReg hl
                                   6701 ;	spillPairReg hl
      001CE0 26 00                 6702 	ld	h, #0x00
                                   6703 ;	spillPairReg hl
                                   6704 ;	spillPairReg hl
      001CE2 29                    6705 	add	hl, hl
      001CE3 29                    6706 	add	hl, hl
      001CE4 29                    6707 	add	hl, hl
      001CE5 29                    6708 	add	hl, hl
      001CE6 09                    6709 	add	hl, bc
      001CE7 4D                    6710 	ld	c, l
      001CE8 7C                    6711 	ld	a, h
      001CE9 F8 00                 6712 	ldhl	sp,	#0
      001CEB 71                    6713 	ld	(hl), c
      001CEC 23                    6714 	inc	hl
      001CED 77                    6715 	ld	(hl), a
                                   6716 ;src/main.c:739: uint8_t i = enemyCollisionCount;
      001CEE FAr98r00              6717 	ld	a, (#_enemyCollisionCount)
      001CF1 F8 02                 6718 	ldhl	sp,	#2
      001CF3 77                    6719 	ld	(hl), a
                                   6720 ;src/main.c:741: if (eptr->visible && eptr->alive) {
      001CF4 D1                    6721 	pop	de
      001CF5 D5                    6722 	push	de
      001CF6 21 0A 00              6723 	ld	hl, #0x000a
      001CF9 19                    6724 	add	hl, de
      001CFA 4D                    6725 	ld	c, l
      001CFB 44                    6726 	ld	b, h
      001CFC 0A                    6727 	ld	a, (bc)
      001CFD B7                    6728 	or	a, a
      001CFE CAr37r20              6729 	jp	Z, 00127$
      001D01 D1                    6730 	pop	de
      001D02 D5                    6731 	push	de
      001D03 21 09 00              6732 	ld	hl, #0x0009
      001D06 19                    6733 	add	hl, de
      001D07 4D                    6734 	ld	c, l
      001D08 44                    6735 	ld	b, h
      001D09 0A                    6736 	ld	a, (bc)
      001D0A B7                    6737 	or	a, a
      001D0B CAr37r20              6738 	jp	Z, 00127$
                                   6739 ;src/main.c:743: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D0E D1                    6740 	pop	de
      001D0F D5                    6741 	push	de
      001D10 21 08 00              6742 	ld	hl, #0x0008
      001D13 19                    6743 	add	hl, de
      001D14 4D                    6744 	ld	c, l
      001D15 44                    6745 	ld	b, h
      001D16 0A                    6746 	ld	a, (bc)
      001D17 4F                    6747 	ld	c, a
      001D18 3D                    6748 	dec	a
      001D19 3E 01                 6749 	ld	a, #0x01
      001D1B 28 01                 6750 	jr	Z, 00283$
      001D1D AF                    6751 	xor	a, a
      001D1E                       6752 00283$:
      001D1E F8 0D                 6753 	ldhl	sp,	#13
      001D20 77                    6754 	ld	(hl), a
      001D21 FAr8Er00              6755 	ld	a, (#_playerDrawX)
      001D24 F8 0E                 6756 	ldhl	sp,	#14
      001D26 77                    6757 	ld	(hl), a
                                   6758 ;src/main.c:744: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D27 79                    6759 	ld	a, c
      001D28 D6 02                 6760 	sub	a, #0x02
      001D2A 3E 01                 6761 	ld	a, #0x01
      001D2C 28 01                 6762 	jr	Z, 00285$
      001D2E AF                    6763 	xor	a, a
      001D2F                       6764 00285$:
      001D2F F8 0F                 6765 	ldhl	sp,	#15
                                   6766 ;src/main.c:743: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D31 32                    6767 	ld	(hl-), a
      001D32 2B                    6768 	dec	hl
      001D33 7E                    6769 	ld	a, (hl)
      001D34 B7                    6770 	or	a, a
      001D35 28 2E                 6771 	jr	Z, 00110$
      001D37 D1                    6772 	pop	de
      001D38 D5                    6773 	push	de
      001D39 1A                    6774 	ld	a, (de)
      001D3A F8 10                 6775 	ldhl	sp,	#16
      001D3C 77                    6776 	ld	(hl), a
      001D3D 3A                    6777 	ld	a, (hl-)
      001D3E 2B                    6778 	dec	hl
      001D3F 96                    6779 	sub	a, (hl)
      001D40 23                    6780 	inc	hl
      001D41 23                    6781 	inc	hl
      001D42 77                    6782 	ld	(hl), a
                                   6783 ;src/main.c:324: if (value >= 0) return value;
      001D43 CB 7E                 6784 	bit	7, (hl)
      001D45 28 05                 6785 	jr	Z, 00135$
                                   6786 ;src/main.c:325: else return - value;
      001D47 AF                    6787 	xor	a, a
      001D48 F8 10                 6788 	ldhl	sp,	#16
      001D4A 96                    6789 	sub	a, (hl)
      001D4B 77                    6790 	ld	(hl), a
                                   6791 ;src/main.c:743: if ((eptr->spriteCount == 1 && abs(eptr->x - playerDrawX) <= 8 ) || 
      001D4C                       6792 00135$:
      001D4C F8 10                 6793 	ldhl	sp,	#16
      001D4E 5E                    6794 	ld	e, (hl)
      001D4F 3E 08                 6795 	ld	a,#0x08
      001D51 57                    6796 	ld	d,a
      001D52 96                    6797 	sub	a, (hl)
      001D53 CB 7B                 6798 	bit	7, e
      001D55 28 07                 6799 	jr	Z, 00286$
      001D57 CB 7A                 6800 	bit	7, d
      001D59 20 08                 6801 	jr	NZ, 00287$
      001D5B BF                    6802 	cp	a, a
      001D5C 18 05                 6803 	jr	00287$
      001D5E                       6804 00286$:
      001D5E CB 7A                 6805 	bit	7, d
      001D60 28 01                 6806 	jr	Z, 00287$
      001D62 37                    6807 	scf
      001D63                       6808 00287$:
      001D63 30 33                 6809 	jr	NC, 00106$
      001D65                       6810 00110$:
                                   6811 ;src/main.c:744: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D65 F8 0F                 6812 	ldhl	sp,	#15
      001D67 7E                    6813 	ld	a, (hl)
      001D68 B7                    6814 	or	a, a
      001D69 CAr4Cr1E              6815 	jp	Z, 00107$
      001D6C 2B                    6816 	dec	hl
      001D6D D1                    6817 	pop	de
      001D6E D5                    6818 	push	de
      001D6F 1A                    6819 	ld	a, (de)
      001D70 96                    6820 	sub	a, (hl)
      001D71 23                    6821 	inc	hl
      001D72 23                    6822 	inc	hl
      001D73 77                    6823 	ld	(hl), a
                                   6824 ;src/main.c:324: if (value >= 0) return value;
      001D74 CB 7E                 6825 	bit	7, (hl)
      001D76 28 06                 6826 	jr	Z, 00139$
                                   6827 ;src/main.c:325: else return - value;
      001D78 AF                    6828 	xor	a, a
      001D79 F8 10                 6829 	ldhl	sp,	#16
      001D7B 96                    6830 	sub	a, (hl)
      001D7C 4F                    6831 	ld	c, a
      001D7D 71                    6832 	ld	(hl), c
                                   6833 ;src/main.c:744: (eptr->spriteCount == 2 && abs(eptr->x - playerDrawX) <= 16 )) {
      001D7E                       6834 00139$:
      001D7E F8 10                 6835 	ldhl	sp,	#16
      001D80 5E                    6836 	ld	e, (hl)
      001D81 3E 10                 6837 	ld	a,#0x10
      001D83 57                    6838 	ld	d,a
      001D84 96                    6839 	sub	a, (hl)
      001D85 CB 7B                 6840 	bit	7, e
      001D87 28 07                 6841 	jr	Z, 00288$
      001D89 CB 7A                 6842 	bit	7, d
      001D8B 20 08                 6843 	jr	NZ, 00289$
      001D8D BF                    6844 	cp	a, a
      001D8E 18 05                 6845 	jr	00289$
      001D90                       6846 00288$:
      001D90 CB 7A                 6847 	bit	7, d
      001D92 28 01                 6848 	jr	Z, 00289$
      001D94 37                    6849 	scf
      001D95                       6850 00289$:
      001D95 DAr4Cr1E              6851 	jp	C, 00107$
      001D98                       6852 00106$:
                                   6853 ;src/main.c:745: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001D98 C1                    6854 	pop	bc
      001D99 C5                    6855 	push	bc
      001D9A 03                    6856 	inc	bc
      001D9B 03                    6857 	inc	bc
      001D9C FAr8Fr00              6858 	ld	a, (#_playerDrawY)
      001D9F F8 10                 6859 	ldhl	sp,	#16
      001DA1 77                    6860 	ld	(hl), a
      001DA2 F8 0D                 6861 	ldhl	sp,	#13
      001DA4 7E                    6862 	ld	a, (hl)
      001DA5 B7                    6863 	or	a, a
      001DA6 28 23                 6864 	jr	Z, 00105$
      001DA8 0A                    6865 	ld	a, (bc)
      001DA9 F8 10                 6866 	ldhl	sp,	#16
      001DAB 96                    6867 	sub	a, (hl)
      001DAC 6F                    6868 	ld	l, a
                                   6869 ;	spillPairReg hl
                                   6870 ;	spillPairReg hl
                                   6871 ;src/main.c:324: if (value >= 0) return value;
      001DAD CB 7D                 6872 	bit	7, l
      001DAF 28 03                 6873 	jr	Z, 00143$
                                   6874 ;src/main.c:325: else return - value;
      001DB1 AF                    6875 	xor	a, a
      001DB2 95                    6876 	sub	a, l
      001DB3 6F                    6877 	ld	l, a
                                   6878 ;	spillPairReg hl
                                   6879 ;	spillPairReg hl
                                   6880 ;src/main.c:745: if ((eptr->spriteCount == 1 && abs(eptr->y - playerDrawY) <= 8 ) || 
      001DB4                       6881 00143$:
      001DB4 5D                    6882 	ld	e, l
      001DB5 3E 08                 6883 	ld	a,#0x08
      001DB7 57                    6884 	ld	d,a
      001DB8 95                    6885 	sub	a, l
      001DB9 CB 7B                 6886 	bit	7, e
      001DBB 28 07                 6887 	jr	Z, 00290$
      001DBD CB 7A                 6888 	bit	7, d
      001DBF 20 08                 6889 	jr	NZ, 00291$
      001DC1 BF                    6890 	cp	a, a
      001DC2 18 05                 6891 	jr	00291$
      001DC4                       6892 00290$:
      001DC4 CB 7A                 6893 	bit	7, d
      001DC6 28 01                 6894 	jr	Z, 00291$
      001DC8 37                    6895 	scf
      001DC9                       6896 00291$:
      001DC9 30 28                 6897 	jr	NC, 00101$
      001DCB                       6898 00105$:
                                   6899 ;src/main.c:746: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001DCB F8 0F                 6900 	ldhl	sp,	#15
      001DCD 7E                    6901 	ld	a, (hl)
      001DCE B7                    6902 	or	a, a
      001DCF 28 7B                 6903 	jr	Z, 00107$
      001DD1 23                    6904 	inc	hl
      001DD2 0A                    6905 	ld	a, (bc)
      001DD3 96                    6906 	sub	a, (hl)
      001DD4 4F                    6907 	ld	c, a
                                   6908 ;src/main.c:324: if (value >= 0) return value;
      001DD5 CB 79                 6909 	bit	7, c
      001DD7 28 03                 6910 	jr	Z, 00147$
                                   6911 ;src/main.c:325: else return - value;
      001DD9 AF                    6912 	xor	a, a
      001DDA 91                    6913 	sub	a, c
      001DDB 4F                    6914 	ld	c, a
                                   6915 ;src/main.c:746: (eptr->spriteCount == 2 && abs(eptr->y - playerDrawY) <= 16 )) {
      001DDC                       6916 00147$:
      001DDC 59                    6917 	ld	e, c
      001DDD 3E 10                 6918 	ld	a,#0x10
      001DDF 57                    6919 	ld	d,a
      001DE0 91                    6920 	sub	a, c
      001DE1 CB 7B                 6921 	bit	7, e
      001DE3 28 07                 6922 	jr	Z, 00292$
      001DE5 CB 7A                 6923 	bit	7, d
      001DE7 20 08                 6924 	jr	NZ, 00293$
      001DE9 BF                    6925 	cp	a, a
      001DEA 18 05                 6926 	jr	00293$
      001DEC                       6927 00292$:
      001DEC CB 7A                 6928 	bit	7, d
      001DEE 28 01                 6929 	jr	Z, 00293$
      001DF0 37                    6930 	scf
      001DF1                       6931 00293$:
      001DF1 38 59                 6932 	jr	C, 00107$
      001DF3                       6933 00101$:
                                   6934 ;src/main.c:748: set_sprite_tile(10+(i<<1), 0x7f);
      001DF3 F8 02                 6935 	ldhl	sp,	#2
      001DF5 7E                    6936 	ld	a, (hl)
      001DF6 87                    6937 	add	a, a
      001DF7 C6 0A                 6938 	add	a, #0x0a
                                   6939 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001DF9 6F                    6940 	ld	l, a
      001DFA 01r00r00              6941 	ld	bc, #_shadow_OAM+0
                                   6942 ;	spillPairReg hl
                                   6943 ;	spillPairReg hl
      001DFD 26 00                 6944 	ld	h, #0x00
                                   6945 ;	spillPairReg hl
                                   6946 ;	spillPairReg hl
      001DFF 29                    6947 	add	hl, hl
      001E00 29                    6948 	add	hl, hl
      001E01 09                    6949 	add	hl, bc
      001E02 23                    6950 	inc	hl
      001E03 23                    6951 	inc	hl
      001E04 36 7F                 6952 	ld	(hl), #0x7f
                                   6953 ;src/main.c:749: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001E06 F8 02                 6954 	ldhl	sp,	#2
      001E08 7E                    6955 	ld	a, (hl)
      001E09 87                    6956 	add	a, a
      001E0A C6 0B                 6957 	add	a, #0x0b
                                   6958 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001E0C 6F                    6959 	ld	l, a
      001E0D 01r00r00              6960 	ld	bc, #_shadow_OAM+0
                                   6961 ;	spillPairReg hl
                                   6962 ;	spillPairReg hl
      001E10 26 00                 6963 	ld	h, #0x00
                                   6964 ;	spillPairReg hl
                                   6965 ;	spillPairReg hl
      001E12 29                    6966 	add	hl, hl
      001E13 29                    6967 	add	hl, hl
      001E14 09                    6968 	add	hl, bc
      001E15 23                    6969 	inc	hl
      001E16 23                    6970 	inc	hl
      001E17 36 7F                 6971 	ld	(hl), #0x7f
                                   6972 ;src/main.c:750: eptr->alive = 0;
      001E19 D1                    6973 	pop	de
      001E1A D5                    6974 	push	de
      001E1B 21 09 00              6975 	ld	hl, #0x0009
      001E1E 19                    6976 	add	hl, de
      001E1F 4D                    6977 	ld	c, l
      001E20 44                    6978 	ld	b, h
      001E21 AF                    6979 	xor	a, a
      001E22 02                    6980 	ld	(bc), a
                                   6981 ;src/main.c:751: eptr->visible = 0;
      001E23 D1                    6982 	pop	de
      001E24 D5                    6983 	push	de
      001E25 21 0A 00              6984 	ld	hl, #0x000a
      001E28 19                    6985 	add	hl, de
      001E29 4D                    6986 	ld	c, l
      001E2A 44                    6987 	ld	b, h
      001E2B AF                    6988 	xor	a, a
      001E2C 02                    6989 	ld	(bc), a
                                   6990 ;src/main.c:752: takeDamage(eptr->damage);
      001E2D D1                    6991 	pop	de
      001E2E D5                    6992 	push	de
      001E2F 21 0B 00              6993 	ld	hl, #0x000b
      001E32 19                    6994 	add	hl, de
      001E33 4D                    6995 	ld	c, l
      001E34 44                    6996 	ld	b, h
      001E35 0A                    6997 	ld	a, (bc)
      001E36 06 00                 6998 	ld	b, #0x00
      001E38 4F                    6999 	ld	c, a
      001E39 C5                    7000 	push	bc
      001E3A CDr37r1C              7001 	call	_takeDamage
      001E3D E1                    7002 	pop	hl
                                   7003 ;src/main.c:753: initEnemies(0);
      001E3E AF                    7004 	xor	a, a
      001E3F F5                    7005 	push	af
      001E40 33                    7006 	inc	sp
      001E41 CDrD9r0C              7007 	call	_initEnemies
      001E44 33                    7008 	inc	sp
                                   7009 ;src/main.c:754: playSound(0);
      001E45 AF                    7010 	xor	a, a
      001E46 F5                    7011 	push	af
      001E47 33                    7012 	inc	sp
      001E48 CDr76r0C              7013 	call	_playSound
      001E4B 33                    7014 	inc	sp
      001E4C                       7015 00107$:
                                   7016 ;src/main.c:760: struct Projectile *pptr = projectiles;
      001E4C F8 0E                 7017 	ldhl	sp,	#14
      001E4E 3ErA0                 7018 	ld	a, #<(_projectiles)
      001E50 22                    7019 	ld	(hl+), a
      001E51 36s00                 7020 	ld	(hl), #>(_projectiles)
                                   7021 ;src/main.c:762: while (j < PROJECTILECOUNT) {
      001E53 D1                    7022 	pop	de
      001E54 D5                    7023 	push	de
      001E55 21 02 00              7024 	ld	hl, #0x0002
      001E58 19                    7025 	add	hl, de
      001E59 E5                    7026 	push	hl
      001E5A 7D                    7027 	ld	a, l
      001E5B F8 05                 7028 	ldhl	sp,	#5
      001E5D 77                    7029 	ld	(hl), a
      001E5E E1                    7030 	pop	hl
      001E5F 7C                    7031 	ld	a, h
      001E60 F8 04                 7032 	ldhl	sp,	#4
      001E62 77                    7033 	ld	(hl), a
      001E63 D1                    7034 	pop	de
      001E64 D5                    7035 	push	de
      001E65 21 08 00              7036 	ld	hl, #0x0008
      001E68 19                    7037 	add	hl, de
      001E69 E5                    7038 	push	hl
      001E6A 7D                    7039 	ld	a, l
      001E6B F8 07                 7040 	ldhl	sp,	#7
      001E6D 77                    7041 	ld	(hl), a
      001E6E E1                    7042 	pop	hl
      001E6F 7C                    7043 	ld	a, h
      001E70 F8 06                 7044 	ldhl	sp,	#6
      001E72 77                    7045 	ld	(hl), a
      001E73 F8 03                 7046 	ldhl	sp,	#3
      001E75 7E                    7047 	ld	a, (hl)
      001E76 F8 07                 7048 	ldhl	sp,	#7
      001E78 77                    7049 	ld	(hl), a
      001E79 F8 04                 7050 	ldhl	sp,	#4
      001E7B 7E                    7051 	ld	a, (hl)
      001E7C F8 08                 7052 	ldhl	sp,	#8
      001E7E 77                    7053 	ld	(hl), a
      001E7F F8 03                 7054 	ldhl	sp,	#3
      001E81 7E                    7055 	ld	a, (hl)
      001E82 F8 09                 7056 	ldhl	sp,	#9
      001E84 77                    7057 	ld	(hl), a
      001E85 F8 04                 7058 	ldhl	sp,	#4
      001E87 7E                    7059 	ld	a, (hl)
      001E88 F8 0A                 7060 	ldhl	sp,	#10
      001E8A 77                    7061 	ld	(hl), a
      001E8B F8 10                 7062 	ldhl	sp,	#16
      001E8D 36 00                 7063 	ld	(hl), #0x00
      001E8F                       7064 00123$:
      001E8F 21r6Er08              7065 	ld	hl, #_PROJECTILECOUNT
      001E92 4E                    7066 	ld	c, (hl)
      001E93 F8 10                 7067 	ldhl	sp,	#16
      001E95 7E                    7068 	ld	a, (hl)
      001E96 91                    7069 	sub	a, c
      001E97 D2r37r20              7070 	jp	NC, 00127$
                                   7071 ;src/main.c:763: if (pptr->active) {
      001E9A 2B                    7072 	dec	hl
      001E9B 2B                    7073 	dec	hl
      001E9C 2A                    7074 	ld	a, (hl+)
      001E9D 5F                    7075 	ld	e, a
      001E9E 56                    7076 	ld	d, (hl)
      001E9F 21 09 00              7077 	ld	hl, #0x0009
      001EA2 19                    7078 	add	hl, de
      001EA3 4D                    7079 	ld	c, l
      001EA4 44                    7080 	ld	b, h
      001EA5 0A                    7081 	ld	a, (bc)
      001EA6 B7                    7082 	or	a, a
      001EA7 CAr1Er20              7083 	jp	Z, 00122$
                                   7084 ;src/main.c:767: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001EAA F8 05                 7085 	ldhl	sp,#5
      001EAC 2A                    7086 	ld	a, (hl+)
      001EAD 5F                    7087 	ld	e, a
      001EAE 56                    7088 	ld	d, (hl)
      001EAF 1A                    7089 	ld	a, (de)
      001EB0 4F                    7090 	ld	c, a
      001EB1 3D                    7091 	dec	a
      001EB2 3E 01                 7092 	ld	a, #0x01
      001EB4 28 01                 7093 	jr	Z, 00295$
      001EB6 AF                    7094 	xor	a, a
      001EB7                       7095 00295$:
      001EB7 F8 0B                 7096 	ldhl	sp,	#11
      001EB9 77                    7097 	ld	(hl), a
                                   7098 ;src/main.c:768: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001EBA 79                    7099 	ld	a, c
      001EBB D6 02                 7100 	sub	a, #0x02
      001EBD 3E 01                 7101 	ld	a, #0x01
      001EBF 28 01                 7102 	jr	Z, 00297$
      001EC1 AF                    7103 	xor	a, a
      001EC2                       7104 00297$:
      001EC2 F8 0C                 7105 	ldhl	sp,	#12
                                   7106 ;src/main.c:767: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001EC4 32                    7107 	ld	(hl-), a
      001EC5 7E                    7108 	ld	a, (hl)
      001EC6 B7                    7109 	or	a, a
      001EC7 28 2C                 7110 	jr	Z, 00120$
      001EC9 D1                    7111 	pop	de
      001ECA D5                    7112 	push	de
      001ECB 1A                    7113 	ld	a, (de)
      001ECC F8 0E                 7114 	ldhl	sp,#14
      001ECE 5E                    7115 	ld	e, (hl)
      001ECF 23                    7116 	inc	hl
      001ED0 56                    7117 	ld	d, (hl)
      001ED1 F5                    7118 	push	af
      001ED2 1A                    7119 	ld	a, (de)
      001ED3 4F                    7120 	ld	c, a
      001ED4 F1                    7121 	pop	af
      001ED5 91                    7122 	sub	a, c
      001ED6 4F                    7123 	ld	c, a
                                   7124 ;src/main.c:324: if (value >= 0) return value;
      001ED7 CB 79                 7125 	bit	7, c
      001ED9 28 03                 7126 	jr	Z, 00153$
                                   7127 ;src/main.c:325: else return - value;
      001EDB AF                    7128 	xor	a, a
      001EDC 91                    7129 	sub	a, c
      001EDD 4F                    7130 	ld	c, a
                                   7131 ;src/main.c:767: if ((eptr->spriteCount == 1 && abs(eptr->x - pptr->x) <= 8 ) || 
      001EDE                       7132 00153$:
      001EDE 59                    7133 	ld	e, c
      001EDF 3E 08                 7134 	ld	a,#0x08
      001EE1 57                    7135 	ld	d,a
      001EE2 91                    7136 	sub	a, c
      001EE3 CB 7B                 7137 	bit	7, e
      001EE5 28 07                 7138 	jr	Z, 00298$
      001EE7 CB 7A                 7139 	bit	7, d
      001EE9 20 08                 7140 	jr	NZ, 00299$
      001EEB BF                    7141 	cp	a, a
      001EEC 18 05                 7142 	jr	00299$
      001EEE                       7143 00298$:
      001EEE CB 7A                 7144 	bit	7, d
      001EF0 28 01                 7145 	jr	Z, 00299$
      001EF2 37                    7146 	scf
      001EF3                       7147 00299$:
      001EF3 30 3B                 7148 	jr	NC, 00116$
      001EF5                       7149 00120$:
                                   7150 ;src/main.c:768: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001EF5 F8 0C                 7151 	ldhl	sp,	#12
      001EF7 7E                    7152 	ld	a, (hl)
      001EF8 B7                    7153 	or	a, a
      001EF9 CAr1Er20              7154 	jp	Z, 00122$
      001EFC D1                    7155 	pop	de
      001EFD D5                    7156 	push	de
      001EFE 1A                    7157 	ld	a, (de)
      001EFF F8 0E                 7158 	ldhl	sp,#14
      001F01 5E                    7159 	ld	e, (hl)
      001F02 23                    7160 	inc	hl
      001F03 56                    7161 	ld	d, (hl)
      001F04 2B                    7162 	dec	hl
      001F05 2B                    7163 	dec	hl
      001F06 F5                    7164 	push	af
      001F07 1A                    7165 	ld	a, (de)
      001F08 4F                    7166 	ld	c, a
      001F09 F1                    7167 	pop	af
      001F0A 91                    7168 	sub	a, c
      001F0B 77                    7169 	ld	(hl), a
                                   7170 ;src/main.c:324: if (value >= 0) return value;
      001F0C CB 7E                 7171 	bit	7, (hl)
      001F0E 20 03                 7172 	jr	NZ, 00155$
      001F10 4E                    7173 	ld	c, (hl)
      001F11 18 05                 7174 	jr	00157$
      001F13                       7175 00155$:
                                   7176 ;src/main.c:325: else return - value;
      001F13 AF                    7177 	xor	a, a
      001F14 F8 0D                 7178 	ldhl	sp,	#13
      001F16 96                    7179 	sub	a, (hl)
      001F17 4F                    7180 	ld	c, a
                                   7181 ;src/main.c:768: (eptr->spriteCount == 2 && abs(eptr->x - pptr->x) <= 16 )) {
      001F18                       7182 00157$:
      001F18 59                    7183 	ld	e, c
      001F19 3E 10                 7184 	ld	a,#0x10
      001F1B 57                    7185 	ld	d,a
      001F1C 91                    7186 	sub	a, c
      001F1D CB 7B                 7187 	bit	7, e
      001F1F 28 07                 7188 	jr	Z, 00300$
      001F21 CB 7A                 7189 	bit	7, d
      001F23 20 08                 7190 	jr	NZ, 00301$
      001F25 BF                    7191 	cp	a, a
      001F26 18 05                 7192 	jr	00301$
      001F28                       7193 00300$:
      001F28 CB 7A                 7194 	bit	7, d
      001F2A 28 01                 7195 	jr	Z, 00301$
      001F2C 37                    7196 	scf
      001F2D                       7197 00301$:
      001F2D DAr1Er20              7198 	jp	C, 00122$
      001F30                       7199 00116$:
                                   7200 ;src/main.c:769: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001F30 F8 0E                 7201 	ldhl	sp,	#14
      001F32 2A                    7202 	ld	a, (hl+)
      001F33 4F                    7203 	ld	c, a
      001F34 46                    7204 	ld	b, (hl)
      001F35 03                    7205 	inc	bc
      001F36 03                    7206 	inc	bc
      001F37 F8 0B                 7207 	ldhl	sp,	#11
      001F39 7E                    7208 	ld	a, (hl)
      001F3A B7                    7209 	or	a, a
      001F3B 28 2A                 7210 	jr	Z, 00115$
      001F3D F8 07                 7211 	ldhl	sp,#7
      001F3F 2A                    7212 	ld	a, (hl+)
      001F40 5F                    7213 	ld	e, a
      001F41 56                    7214 	ld	d, (hl)
      001F42 1A                    7215 	ld	a, (de)
      001F43 F5                    7216 	push	af
      001F44 0A                    7217 	ld	a, (bc)
      001F45 5F                    7218 	ld	e, a
      001F46 F1                    7219 	pop	af
      001F47 93                    7220 	sub	a, e
      001F48 6F                    7221 	ld	l, a
                                   7222 ;	spillPairReg hl
                                   7223 ;	spillPairReg hl
                                   7224 ;src/main.c:324: if (value >= 0) return value;
      001F49 CB 7D                 7225 	bit	7, l
      001F4B 28 03                 7226 	jr	Z, 00161$
                                   7227 ;src/main.c:325: else return - value;
      001F4D AF                    7228 	xor	a, a
      001F4E 95                    7229 	sub	a, l
      001F4F 6F                    7230 	ld	l, a
                                   7231 ;	spillPairReg hl
                                   7232 ;	spillPairReg hl
                                   7233 ;src/main.c:769: if ((eptr->spriteCount == 1 && abs(eptr->y - pptr->y) <= 8 ) || 
      001F50                       7234 00161$:
      001F50 5D                    7235 	ld	e, l
      001F51 3E 08                 7236 	ld	a,#0x08
      001F53 57                    7237 	ld	d,a
      001F54 95                    7238 	sub	a, l
      001F55 CB 7B                 7239 	bit	7, e
      001F57 28 07                 7240 	jr	Z, 00302$
      001F59 CB 7A                 7241 	bit	7, d
      001F5B 20 08                 7242 	jr	NZ, 00303$
      001F5D BF                    7243 	cp	a, a
      001F5E 18 05                 7244 	jr	00303$
      001F60                       7245 00302$:
      001F60 CB 7A                 7246 	bit	7, d
      001F62 28 01                 7247 	jr	Z, 00303$
      001F64 37                    7248 	scf
      001F65                       7249 00303$:
      001F65 30 32                 7250 	jr	NC, 00111$
      001F67                       7251 00115$:
                                   7252 ;src/main.c:770: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001F67 F8 0C                 7253 	ldhl	sp,	#12
      001F69 7E                    7254 	ld	a, (hl)
      001F6A B7                    7255 	or	a, a
      001F6B CAr1Er20              7256 	jp	Z, 00122$
      001F6E F8 03                 7257 	ldhl	sp,#3
      001F70 2A                    7258 	ld	a, (hl+)
      001F71 5F                    7259 	ld	e, a
      001F72 56                    7260 	ld	d, (hl)
      001F73 1A                    7261 	ld	a, (de)
      001F74 F5                    7262 	push	af
      001F75 0A                    7263 	ld	a, (bc)
      001F76 4F                    7264 	ld	c, a
      001F77 F1                    7265 	pop	af
      001F78 91                    7266 	sub	a, c
      001F79 4F                    7267 	ld	c, a
                                   7268 ;src/main.c:324: if (value >= 0) return value;
      001F7A CB 79                 7269 	bit	7, c
      001F7C 28 03                 7270 	jr	Z, 00165$
                                   7271 ;src/main.c:325: else return - value;
      001F7E AF                    7272 	xor	a, a
      001F7F 91                    7273 	sub	a, c
      001F80 4F                    7274 	ld	c, a
                                   7275 ;src/main.c:770: (eptr->spriteCount == 2 && abs(eptr->y - pptr->y) <= 16 )) {
      001F81                       7276 00165$:
      001F81 59                    7277 	ld	e, c
      001F82 3E 10                 7278 	ld	a,#0x10
      001F84 57                    7279 	ld	d,a
      001F85 91                    7280 	sub	a, c
      001F86 CB 7B                 7281 	bit	7, e
      001F88 28 07                 7282 	jr	Z, 00304$
      001F8A CB 7A                 7283 	bit	7, d
      001F8C 20 08                 7284 	jr	NZ, 00305$
      001F8E BF                    7285 	cp	a, a
      001F8F 18 05                 7286 	jr	00305$
      001F91                       7287 00304$:
      001F91 CB 7A                 7288 	bit	7, d
      001F93 28 01                 7289 	jr	Z, 00305$
      001F95 37                    7290 	scf
      001F96                       7291 00305$:
      001F96 DAr1Er20              7292 	jp	C, 00122$
      001F99                       7293 00111$:
                                   7294 ;src/main.c:773: set_sprite_tile(10+(i<<1), 0x7f);
      001F99 F8 02                 7295 	ldhl	sp,	#2
      001F9B 7E                    7296 	ld	a, (hl)
      001F9C 87                    7297 	add	a, a
      001F9D 4F                    7298 	ld	c, a
      001F9E C6 0A                 7299 	add	a, #0x0a
                                   7300 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FA0 6F                    7301 	ld	l, a
                                   7302 ;	spillPairReg hl
                                   7303 ;	spillPairReg hl
      001FA1 26 00                 7304 	ld	h, #0x00
                                   7305 ;	spillPairReg hl
                                   7306 ;	spillPairReg hl
      001FA3 29                    7307 	add	hl, hl
      001FA4 29                    7308 	add	hl, hl
      001FA5 11r00r00              7309 	ld	de, #_shadow_OAM
      001FA8 19                    7310 	add	hl, de
      001FA9 23                    7311 	inc	hl
      001FAA 23                    7312 	inc	hl
      001FAB 36 7F                 7313 	ld	(hl), #0x7f
                                   7314 ;src/main.c:774: set_sprite_tile(10+(i<<1)+1, 0x7f);
      001FAD 79                    7315 	ld	a, c
      001FAE C6 0B                 7316 	add	a, #0x0b
      001FB0 4F                    7317 	ld	c, a
                                   7318 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FB1 26 00                 7319 	ld	h, #0x00
                                   7320 ;	spillPairReg hl
                                   7321 ;	spillPairReg hl
      001FB3 69                    7322 	ld	l, c
      001FB4 29                    7323 	add	hl, hl
      001FB5 29                    7324 	add	hl, hl
      001FB6 11r00r00              7325 	ld	de, #_shadow_OAM
      001FB9 19                    7326 	add	hl, de
      001FBA 23                    7327 	inc	hl
      001FBB 23                    7328 	inc	hl
      001FBC 36 7F                 7329 	ld	(hl), #0x7f
                                   7330 ;src/main.c:776: spawnPickup(eptr->x, eptr->y);
      001FBE F8 09                 7331 	ldhl	sp,#9
      001FC0 2A                    7332 	ld	a, (hl+)
      001FC1 5F                    7333 	ld	e, a
      001FC2 56                    7334 	ld	d, (hl)
      001FC3 1A                    7335 	ld	a, (de)
      001FC4 4F                    7336 	ld	c, a
      001FC5 13                    7337 	inc	de
      001FC6 1A                    7338 	ld	a, (de)
      001FC7 47                    7339 	ld	b, a
      001FC8 D1                    7340 	pop	de
      001FC9 D5                    7341 	push	de
      001FCA 1A                    7342 	ld	a, (de)
      001FCB 6F                    7343 	ld	l, a
                                   7344 ;	spillPairReg hl
                                   7345 ;	spillPairReg hl
      001FCC 13                    7346 	inc	de
      001FCD 1A                    7347 	ld	a, (de)
      001FCE 67                    7348 	ld	h, a
                                   7349 ;	spillPairReg hl
                                   7350 ;	spillPairReg hl
      001FCF C5                    7351 	push	bc
      001FD0 E5                    7352 	push	hl
      001FD1 CDr7Br1C              7353 	call	_spawnPickup
      001FD4 E8 04                 7354 	add	sp, #4
                                   7355 ;src/main.c:778: eptr->alive = 0;
      001FD6 D1                    7356 	pop	de
      001FD7 D5                    7357 	push	de
      001FD8 21 09 00              7358 	ld	hl, #0x0009
      001FDB 19                    7359 	add	hl, de
      001FDC 4D                    7360 	ld	c, l
      001FDD 44                    7361 	ld	b, h
      001FDE AF                    7362 	xor	a, a
      001FDF 02                    7363 	ld	(bc), a
                                   7364 ;src/main.c:779: eptr->visible = 0;
      001FE0 D1                    7365 	pop	de
      001FE1 D5                    7366 	push	de
      001FE2 21 0A 00              7367 	ld	hl, #0x000a
      001FE5 19                    7368 	add	hl, de
      001FE6 4D                    7369 	ld	c, l
      001FE7 44                    7370 	ld	b, h
      001FE8 AF                    7371 	xor	a, a
      001FE9 02                    7372 	ld	(bc), a
                                   7373 ;src/main.c:780: initEnemies(0);
      001FEA AF                    7374 	xor	a, a
      001FEB F5                    7375 	push	af
      001FEC 33                    7376 	inc	sp
      001FED CDrD9r0C              7377 	call	_initEnemies
      001FF0 33                    7378 	inc	sp
                                   7379 ;src/main.c:781: set_sprite_tile(30+j, 0x7f);
      001FF1 F8 10                 7380 	ldhl	sp,	#16
      001FF3 7E                    7381 	ld	a, (hl)
      001FF4 C6 1E                 7382 	add	a, #0x1e
      001FF6 4F                    7383 	ld	c, a
                                   7384 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001FF7 26 00                 7385 	ld	h, #0x00
                                   7386 ;	spillPairReg hl
                                   7387 ;	spillPairReg hl
      001FF9 69                    7388 	ld	l, c
      001FFA 29                    7389 	add	hl, hl
      001FFB 29                    7390 	add	hl, hl
      001FFC 11r00r00              7391 	ld	de, #_shadow_OAM
      001FFF 19                    7392 	add	hl, de
      002000 23                    7393 	inc	hl
      002001 23                    7394 	inc	hl
      002002 36 7F                 7395 	ld	(hl), #0x7f
                                   7396 ;src/main.c:782: playSound(0);
      002004 AF                    7397 	xor	a, a
      002005 F5                    7398 	push	af
      002006 33                    7399 	inc	sp
      002007 CDr76r0C              7400 	call	_playSound
      00200A 33                    7401 	inc	sp
                                   7402 ;src/main.c:783: pptr->active = 0;
      00200B F8 0E                 7403 	ldhl	sp,#14
      00200D 2A                    7404 	ld	a, (hl+)
      00200E 5F                    7405 	ld	e, a
      00200F 56                    7406 	ld	d, (hl)
      002010 21 09 00              7407 	ld	hl, #0x0009
      002013 19                    7408 	add	hl, de
      002014 4D                    7409 	ld	c, l
      002015 44                    7410 	ld	b, h
      002016 AF                    7411 	xor	a, a
      002017 02                    7412 	ld	(bc), a
                                   7413 ;src/main.c:784: incrementScore();
      002018 CDr33r0A              7414 	call	_incrementScore
                                   7415 ;src/main.c:785: updateScore();
      00201B CDr84r09              7416 	call	_updateScore
      00201E                       7417 00122$:
                                   7418 ;src/main.c:792: j++;
      00201E F8 10                 7419 	ldhl	sp,	#16
      002020 34                    7420 	inc	(hl)
                                   7421 ;src/main.c:793: pptr++;
      002021 2B                    7422 	dec	hl
      002022 2B                    7423 	dec	hl
      002023 2A                    7424 	ld	a, (hl+)
      002024 5F                    7425 	ld	e, a
      002025 56                    7426 	ld	d, (hl)
      002026 21 0C 00              7427 	ld	hl, #0x000c
      002029 19                    7428 	add	hl, de
      00202A E5                    7429 	push	hl
      00202B 7D                    7430 	ld	a, l
      00202C F8 10                 7431 	ldhl	sp,	#16
      00202E 77                    7432 	ld	(hl), a
      00202F E1                    7433 	pop	hl
      002030 7C                    7434 	ld	a, h
      002031 F8 0F                 7435 	ldhl	sp,	#15
      002033 77                    7436 	ld	(hl), a
      002034 C3r8Fr1E              7437 	jp	00123$
      002037                       7438 00127$:
                                   7439 ;src/main.c:797: if (enemyCollisionCount == 0) {
      002037 FAr98r00              7440 	ld	a, (#_enemyCollisionCount)
      00203A B7                    7441 	or	a, a
      00203B 20 09                 7442 	jr	NZ, 00130$
                                   7443 ;src/main.c:798: enemyCollisionCount = ENEMYCOUNT - 1;
      00203D FAr5Dr08              7444 	ld	a, (#_ENEMYCOUNT)
      002040 3D                    7445 	dec	a
      002041 EAr98r00              7446 	ld	(#_enemyCollisionCount),a
      002044 18 04                 7447 	jr	00169$
      002046                       7448 00130$:
                                   7449 ;src/main.c:801: enemyCollisionCount--;
      002046 21r98r00              7450 	ld	hl, #_enemyCollisionCount
      002049 35                    7451 	dec	(hl)
      00204A                       7452 00169$:
                                   7453 ;src/main.c:806: }
      00204A E8 11                 7454 	add	sp, #17
      00204C C9                    7455 	ret
                                   7456 ;src/main.c:809: void setGunIcon() {
                                   7457 ;	---------------------------------
                                   7458 ; Function setGunIcon
                                   7459 ; ---------------------------------
      00204D                       7460 _setGunIcon::
                                   7461 ;src/main.c:811: if (currentGun == 0) {
      00204D FAr9Ar00              7462 	ld	a, (#_currentGun)
      002050 B7                    7463 	or	a, a
      002051 20 1B                 7464 	jr	NZ, 00102$
                                   7465 ;src/main.c:812: set_win_tiles(15, 0,1,1,gunMap+gunLevel);
      002053 01rA1r00              7466 	ld	bc, #_gunMap+0
      002056 79                    7467 	ld	a, c
      002057 21r99r00              7468 	ld	hl, #_gunLevel
      00205A 86                    7469 	add	a, (hl)
      00205B 4F                    7470 	ld	c, a
      00205C 30 01                 7471 	jr	NC, 00111$
      00205E 04                    7472 	inc	b
      00205F                       7473 00111$:
      00205F C5                    7474 	push	bc
      002060 21 01 01              7475 	ld	hl, #0x101
      002063 E5                    7476 	push	hl
      002064 21 0F 00              7477 	ld	hl, #0x0f
      002067 E5                    7478 	push	hl
      002068 CDr00r00              7479 	call	_set_win_tiles
      00206B E8 06                 7480 	add	sp, #6
      00206D C9                    7481 	ret
      00206E                       7482 00102$:
                                   7483 ;src/main.c:815: set_win_tiles(15, 0,1,1,gunMap+2);
      00206E 11rA3r00              7484 	ld	de, #(_gunMap + 2)
      002071 D5                    7485 	push	de
      002072 21 01 01              7486 	ld	hl, #0x101
      002075 E5                    7487 	push	hl
      002076 21 0F 00              7488 	ld	hl, #0x0f
      002079 E5                    7489 	push	hl
      00207A CDr00r00              7490 	call	_set_win_tiles
      00207D E8 06                 7491 	add	sp, #6
                                   7492 ;src/main.c:817: }
      00207F C9                    7493 	ret
                                   7494 ;src/main.c:827: void fire() {
                                   7495 ;	---------------------------------
                                   7496 ; Function fire
                                   7497 ; ---------------------------------
      002080                       7498 _fire::
      002080 E8 FB                 7499 	add	sp, #-5
                                   7500 ;src/main.c:829: oldestProjectile += 1;
      002082 21r84r00              7501 	ld	hl, #_oldestProjectile
      002085 34                    7502 	inc	(hl)
      002086 7E                    7503 	ld	a, (hl)
                                   7504 ;src/main.c:830: if (oldestProjectile >= PROJECTILECOUNT) {
      002087 21r6Er08              7505 	ld	hl, #_PROJECTILECOUNT
      00208A 4E                    7506 	ld	c, (hl)
      00208B 21r84r00              7507 	ld	hl, #_oldestProjectile
      00208E 7E                    7508 	ld	a, (hl)
      00208F 91                    7509 	sub	a, c
      002090 38 02                 7510 	jr	C, 00102$
                                   7511 ;src/main.c:831: oldestProjectile = 0;
      002092 36 00                 7512 	ld	(hl), #0x00
      002094                       7513 00102$:
                                   7514 ;src/main.c:834: if (currentGun == 0) {
      002094 FAr9Ar00              7515 	ld	a, (#_currentGun)
      002097 B7                    7516 	or	a, a
      002098 20 3A                 7517 	jr	NZ, 00107$
                                   7518 ;src/main.c:836: projectiles[oldestProjectile] = singleGun;
      00209A 21r84r00              7519 	ld	hl, #_oldestProjectile
      00209D 4E                    7520 	ld	c, (hl)
      00209E 06 00                 7521 	ld	b, #0x00
      0020A0 69                    7522 	ld	l, c
      0020A1 60                    7523 	ld	h, b
      0020A2 29                    7524 	add	hl, hl
      0020A3 09                    7525 	add	hl, bc
      0020A4 29                    7526 	add	hl, hl
      0020A5 29                    7527 	add	hl, hl
      0020A6 4D                    7528 	ld	c, l
      0020A7 44                    7529 	ld	b, h
                                   7530 ;src/main.c:835: if (gunLevel == 0) {
      0020A8 FAr99r00              7531 	ld	a, (#_gunLevel)
      0020AB B7                    7532 	or	a, a
      0020AC 20 14                 7533 	jr	NZ, 00104$
                                   7534 ;src/main.c:836: projectiles[oldestProjectile] = singleGun;
      0020AE 11r60r00              7535 	ld	de, #_singleGun+0
      0020B1 21rA0r00              7536 	ld	hl, #_projectiles
      0020B4 09                    7537 	add	hl, bc
      0020B5 01 0C 00              7538 	ld	bc, #0x000c
      0020B8 C5                    7539 	push	bc
      0020B9 D5                    7540 	push	de
      0020BA E5                    7541 	push	hl
      0020BB CDr00r00              7542 	call	___memcpy
      0020BE E8 06                 7543 	add	sp, #6
      0020C0 18 12                 7544 	jr	00107$
      0020C2                       7545 00104$:
                                   7546 ;src/main.c:839: projectiles[oldestProjectile] = doubleGun;
      0020C2 11r6Cr00              7547 	ld	de, #_doubleGun+0
      0020C5 21rA0r00              7548 	ld	hl, #_projectiles
      0020C8 09                    7549 	add	hl, bc
      0020C9 01 0C 00              7550 	ld	bc, #0x000c
      0020CC C5                    7551 	push	bc
      0020CD D5                    7552 	push	de
      0020CE E5                    7553 	push	hl
      0020CF CDr00r00              7554 	call	___memcpy
      0020D2 E8 06                 7555 	add	sp, #6
      0020D4                       7556 00107$:
                                   7557 ;src/main.c:842: if (currentGun == 1) {
      0020D4 FAr9Ar00              7558 	ld	a, (#_currentGun)
      0020D7 3D                    7559 	dec	a
      0020D8 20 45                 7560 	jr	NZ, 00113$
                                   7561 ;src/main.c:843: if (missiles == 0) {
      0020DA FAr9Br00              7562 	ld	a, (#_missiles)
      0020DD B7                    7563 	or	a, a
      0020DE 20 0B                 7564 	jr	NZ, 00109$
                                   7565 ;src/main.c:844: currentGun = 0;
      0020E0 21r9Ar00              7566 	ld	hl, #_currentGun
      0020E3 36 00                 7567 	ld	(hl), #0x00
                                   7568 ;src/main.c:845: setGunIcon();
      0020E5 CDr4Dr20              7569 	call	_setGunIcon
                                   7570 ;src/main.c:846: return;
      0020E8 C3r16r26              7571 	jp	00154$
      0020EB                       7572 00109$:
                                   7573 ;src/main.c:849: projectiles[oldestProjectile] = missile;
      0020EB 21r84r00              7574 	ld	hl, #_oldestProjectile
      0020EE 4E                    7575 	ld	c, (hl)
      0020EF 06 00                 7576 	ld	b, #0x00
      0020F1 69                    7577 	ld	l, c
      0020F2 60                    7578 	ld	h, b
      0020F3 29                    7579 	add	hl, hl
      0020F4 09                    7580 	add	hl, bc
      0020F5 29                    7581 	add	hl, hl
      0020F6 29                    7582 	add	hl, hl
      0020F7 01rA0r00              7583 	ld	bc,#_projectiles
      0020FA 09                    7584 	add	hl,bc
      0020FB 11 0C 00              7585 	ld	de, #0x000c
      0020FE D5                    7586 	push	de
      0020FF 11r78r00              7587 	ld	de, #_missile
      002102 D5                    7588 	push	de
      002103 E5                    7589 	push	hl
      002104 CDr00r00              7590 	call	___memcpy
      002107 E8 06                 7591 	add	sp, #6
                                   7592 ;src/main.c:850: updateMissileCount(-1);
      002109 3E FF                 7593 	ld	a, #0xff
      00210B F5                    7594 	push	af
      00210C 33                    7595 	inc	sp
      00210D CDrAEr09              7596 	call	_updateMissileCount
      002110 33                    7597 	inc	sp
                                   7598 ;src/main.c:852: if (missiles == 0) {
      002111 FAr9Br00              7599 	ld	a, (#_missiles)
      002114 B7                    7600 	or	a, a
      002115 20 08                 7601 	jr	NZ, 00113$
                                   7602 ;src/main.c:853: currentGun = 0;
      002117 21r9Ar00              7603 	ld	hl, #_currentGun
      00211A 36 00                 7604 	ld	(hl), #0x00
                                   7605 ;src/main.c:854: setGunIcon();
      00211C CDr4Dr20              7606 	call	_setGunIcon
      00211F                       7607 00113$:
                                   7608 ;src/main.c:857: projectiles[oldestProjectile].x = playerDrawX;
      00211F 21r84r00              7609 	ld	hl, #_oldestProjectile
      002122 4E                    7610 	ld	c, (hl)
      002123 06 00                 7611 	ld	b, #0x00
      002125 69                    7612 	ld	l, c
      002126 60                    7613 	ld	h, b
      002127 29                    7614 	add	hl, hl
      002128 09                    7615 	add	hl, bc
      002129 29                    7616 	add	hl, hl
      00212A 29                    7617 	add	hl, hl
      00212B 01rA0r00              7618 	ld	bc,#_projectiles
      00212E 09                    7619 	add	hl,bc
      00212F E5                    7620 	push	hl
      002130 FAr8Er00              7621 	ld	a, (#_playerDrawX)
      002133 E1                    7622 	pop	hl
      002134 0E 00                 7623 	ld	c, #0x00
      002136 22                    7624 	ld	(hl+), a
      002137 71                    7625 	ld	(hl), c
                                   7626 ;src/main.c:858: projectiles[oldestProjectile].y = playerDrawY;
      002138 21r84r00              7627 	ld	hl, #_oldestProjectile
      00213B 4E                    7628 	ld	c, (hl)
      00213C 06 00                 7629 	ld	b, #0x00
      00213E 69                    7630 	ld	l, c
      00213F 60                    7631 	ld	h, b
      002140 29                    7632 	add	hl, hl
      002141 09                    7633 	add	hl, bc
      002142 29                    7634 	add	hl, hl
      002143 29                    7635 	add	hl, hl
      002144 01rA0r00              7636 	ld	bc,#_projectiles
      002147 09                    7637 	add	hl,bc
      002148 23                    7638 	inc	hl
      002149 23                    7639 	inc	hl
      00214A E5                    7640 	push	hl
      00214B FAr8Fr00              7641 	ld	a, (#_playerDrawY)
      00214E E1                    7642 	pop	hl
      00214F 0E 00                 7643 	ld	c, #0x00
      002151 22                    7644 	ld	(hl+), a
      002152 71                    7645 	ld	(hl), c
                                   7646 ;src/main.c:859: projectiles[oldestProjectile].xSpeed = xDir * projectiles[oldestProjectile].speed;
      002153 21r84r00              7647 	ld	hl, #_oldestProjectile
      002156 4E                    7648 	ld	c, (hl)
      002157 06 00                 7649 	ld	b, #0x00
      002159 69                    7650 	ld	l, c
      00215A 60                    7651 	ld	h, b
      00215B 29                    7652 	add	hl, hl
      00215C 09                    7653 	add	hl, bc
      00215D 29                    7654 	add	hl, hl
      00215E 29                    7655 	add	hl, hl
      00215F 01rA0r00              7656 	ld	bc,#_projectiles
      002162 09                    7657 	add	hl,bc
      002163 5D                    7658 	ld	e, l
      002164 54                    7659 	ld	d, h
      002165 21 05 00              7660 	ld	hl, #0x0005
      002168 19                    7661 	add	hl, de
      002169 4D                    7662 	ld	c, l
      00216A 44                    7663 	ld	b, h
      00216B 21 07 00              7664 	ld	hl, #0x0007
      00216E 19                    7665 	add	hl, de
      00216F 7E                    7666 	ld	a, (hl)
      002170 C5                    7667 	push	bc
      002171 F5                    7668 	push	af
      002172 33                    7669 	inc	sp
      002173 FAr86r00              7670 	ld	a, (#_xDir)
      002176 F5                    7671 	push	af
      002177 33                    7672 	inc	sp
      002178 CDr00r00              7673 	call	__muluschar
      00217B E1                    7674 	pop	hl
      00217C 7B                    7675 	ld	a, e
      00217D C1                    7676 	pop	bc
      00217E 02                    7677 	ld	(bc), a
                                   7678 ;src/main.c:860: projectiles[oldestProjectile].ySpeed = yDir * projectiles[oldestProjectile].speed;
      00217F 21r84r00              7679 	ld	hl, #_oldestProjectile
      002182 4E                    7680 	ld	c, (hl)
      002183 06 00                 7681 	ld	b, #0x00
      002185 69                    7682 	ld	l, c
      002186 60                    7683 	ld	h, b
      002187 29                    7684 	add	hl, hl
      002188 09                    7685 	add	hl, bc
      002189 29                    7686 	add	hl, hl
      00218A 29                    7687 	add	hl, hl
      00218B 01rA0r00              7688 	ld	bc,#_projectiles
      00218E 09                    7689 	add	hl,bc
      00218F 5D                    7690 	ld	e, l
      002190 54                    7691 	ld	d, h
      002191 21 06 00              7692 	ld	hl, #0x0006
      002194 19                    7693 	add	hl, de
      002195 4D                    7694 	ld	c, l
      002196 44                    7695 	ld	b, h
      002197 21 07 00              7696 	ld	hl, #0x0007
      00219A 19                    7697 	add	hl, de
      00219B 7E                    7698 	ld	a, (hl)
      00219C C5                    7699 	push	bc
      00219D F5                    7700 	push	af
      00219E 33                    7701 	inc	sp
      00219F FAr87r00              7702 	ld	a, (#_yDir)
      0021A2 F5                    7703 	push	af
      0021A3 33                    7704 	inc	sp
      0021A4 CDr00r00              7705 	call	__muluschar
      0021A7 E1                    7706 	pop	hl
      0021A8 7B                    7707 	ld	a, e
      0021A9 C1                    7708 	pop	bc
      0021AA 02                    7709 	ld	(bc), a
                                   7710 ;src/main.c:829: oldestProjectile += 1;
      0021AB FAr84r00              7711 	ld	a, (#_oldestProjectile)
      0021AE F8 04                 7712 	ldhl	sp,	#4
      0021B0 77                    7713 	ld	(hl), a
                                   7714 ;src/main.c:836: projectiles[oldestProjectile] = singleGun;
      0021B1 21r84r00              7715 	ld	hl, #_oldestProjectile
      0021B4 4E                    7716 	ld	c, (hl)
      0021B5 06 00                 7717 	ld	b, #0x00
      0021B7 69                    7718 	ld	l, c
      0021B8 60                    7719 	ld	h, b
      0021B9 29                    7720 	add	hl, hl
      0021BA 09                    7721 	add	hl, bc
      0021BB 29                    7722 	add	hl, hl
      0021BC 29                    7723 	add	hl, hl
                                   7724 ;src/main.c:865: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0021BD 01rA0r00              7725 	ld	bc,#_projectiles
      0021C0 09                    7726 	add	hl,bc
      0021C1 4D                    7727 	ld	c, l
      0021C2 44                    7728 	ld	b, h
      0021C3 F8 04                 7729 	ldhl	sp,	#4
      0021C5 3A                    7730 	ld	a, (hl-)
      0021C6 C6 1E                 7731 	add	a, #0x1e
      0021C8 77                    7732 	ld	(hl), a
      0021C9 21 0B 00              7733 	ld	hl, #0x000b
      0021CC 09                    7734 	add	hl, bc
      0021CD 7E                    7735 	ld	a, (hl)
      0021CE F8 04                 7736 	ldhl	sp,	#4
      0021D0 77                    7737 	ld	(hl), a
                                   7738 ;src/main.c:864: if (yDir != 0 && xDir == 0) {
      0021D1 FAr87r00              7739 	ld	a, (#_yDir)
      0021D4 B7                    7740 	or	a, a
      0021D5 28 6F                 7741 	jr	Z, 00140$
      0021D7 FAr86r00              7742 	ld	a, (#_xDir)
      0021DA B7                    7743 	or	a, a
      0021DB 20 69                 7744 	jr	NZ, 00140$
                                   7745 ;src/main.c:865: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0021DD F8 04                 7746 	ldhl	sp,	#4
      0021DF 3A                    7747 	ld	a, (hl-)
      0021E0 4F                    7748 	ld	c, a
                                   7749 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0021E1 6E                    7750 	ld	l, (hl)
                                   7751 ;	spillPairReg hl
                                   7752 ;	spillPairReg hl
      0021E2 26 00                 7753 	ld	h, #0x00
                                   7754 ;	spillPairReg hl
                                   7755 ;	spillPairReg hl
      0021E4 29                    7756 	add	hl, hl
      0021E5 29                    7757 	add	hl, hl
      0021E6 11r00r00              7758 	ld	de, #_shadow_OAM
      0021E9 19                    7759 	add	hl, de
      0021EA 23                    7760 	inc	hl
      0021EB 23                    7761 	inc	hl
      0021EC 71                    7762 	ld	(hl), c
                                   7763 ;src/main.c:829: oldestProjectile += 1;
      0021ED FAr84r00              7764 	ld	a, (#_oldestProjectile)
                                   7765 ;src/main.c:865: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0021F0 C6 1E                 7766 	add	a, #0x1e
      0021F2 4F                    7767 	ld	c, a
                                   7768 ;src/main.c:866: if (yDir == 1) {
      0021F3 FAr87r00              7769 	ld	a, (#_yDir)
                                   7770 ;src/main.c:867: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
                                   7771 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0021F6 3D                    7772 	dec	a
      0021F7 20 26                 7773 	jr	NZ, 00115$
      0021F9 67                    7774 	ld	h,a
                                   7775 ;	spillPairReg hl
                                   7776 ;	spillPairReg hl
      0021FA 69                    7777 	ld	l, c
      0021FB 29                    7778 	add	hl, hl
      0021FC 29                    7779 	add	hl, hl
      0021FD 11r00r00              7780 	ld	de, #_shadow_OAM
      002200 19                    7781 	add	hl, de
      002201 23                    7782 	inc	hl
      002202 23                    7783 	inc	hl
      002203 23                    7784 	inc	hl
      002204 36 40                 7785 	ld	(hl), #0x40
                                   7786 ;src/main.c:868: projectiles[oldestProjectile].offset = 4;
      002206 21r84r00              7787 	ld	hl, #_oldestProjectile
      002209 4E                    7788 	ld	c, (hl)
      00220A 06 00                 7789 	ld	b, #0x00
      00220C 69                    7790 	ld	l, c
      00220D 60                    7791 	ld	h, b
      00220E 29                    7792 	add	hl, hl
      00220F 09                    7793 	add	hl, bc
      002210 29                    7794 	add	hl, hl
      002211 29                    7795 	add	hl, hl
      002212 01rA0r00              7796 	ld	bc,#_projectiles
      002215 09                    7797 	add	hl,bc
      002216 01 04 00              7798 	ld	bc, #0x0004
      002219 09                    7799 	add	hl, bc
      00221A 36 04                 7800 	ld	(hl), #0x04
      00221C C3rF1r25              7801 	jp	00141$
      00221F                       7802 00115$:
                                   7803 ;src/main.c:871: set_sprite_prop(30+oldestProjectile, 0); 
                                   7804 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00221F 26 00                 7805 	ld	h, #0x00
                                   7806 ;	spillPairReg hl
                                   7807 ;	spillPairReg hl
      002221 69                    7808 	ld	l, c
      002222 29                    7809 	add	hl, hl
      002223 29                    7810 	add	hl, hl
      002224 11r00r00              7811 	ld	de, #_shadow_OAM
      002227 19                    7812 	add	hl, de
      002228 23                    7813 	inc	hl
      002229 23                    7814 	inc	hl
      00222A 23                    7815 	inc	hl
      00222B 36 00                 7816 	ld	(hl), #0x00
                                   7817 ;src/main.c:872: projectiles[oldestProjectile].offset = 12;
      00222D 21r84r00              7818 	ld	hl, #_oldestProjectile
      002230 4E                    7819 	ld	c, (hl)
      002231 06 00                 7820 	ld	b, #0x00
      002233 69                    7821 	ld	l, c
      002234 60                    7822 	ld	h, b
      002235 29                    7823 	add	hl, hl
      002236 09                    7824 	add	hl, bc
      002237 29                    7825 	add	hl, hl
      002238 29                    7826 	add	hl, hl
      002239 01rA0r00              7827 	ld	bc,#_projectiles
      00223C 09                    7828 	add	hl,bc
      00223D 01 04 00              7829 	ld	bc, #0x0004
      002240 09                    7830 	add	hl, bc
      002241 36 0C                 7831 	ld	(hl), #0x0c
      002243 C3rF1r25              7832 	jp	00141$
      002246                       7833 00140$:
                                   7834 ;src/main.c:876: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
                                   7835 ;src/main.c:875: else if (xDir != 0 && yDir == 0) {
      002246 FAr86r00              7836 	ld	a, (#_xDir)
      002249 B7                    7837 	or	a, a
      00224A CAr8Er23              7838 	jp	Z, 00136$
      00224D FAr87r00              7839 	ld	a, (#_yDir)
      002250 B7                    7840 	or	a, a
      002251 C2r8Er23              7841 	jp	NZ, 00136$
                                   7842 ;src/main.c:876: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+2);
      002254 F8 04                 7843 	ldhl	sp,	#4
      002256 34                    7844 	inc	(hl)
      002257 34                    7845 	inc	(hl)
      002258 2B                    7846 	dec	hl
                                   7847 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002259 3A                    7848 	ld	a, (hl-)
      00225A 22                    7849 	ld	(hl+), a
      00225B 36 00                 7850 	ld	(hl), #0x00
      00225D 3E 02                 7851 	ld	a, #0x02
      00225F                       7852 00260$:
      00225F F8 02                 7853 	ldhl	sp,	#2
      002261 CB 26                 7854 	sla	(hl)
      002263 23                    7855 	inc	hl
      002264 CB 16                 7856 	rl	(hl)
      002266 3D                    7857 	dec	a
      002267 20 F6                 7858 	jr	NZ, 00260$
      002269 2B                    7859 	dec	hl
      00226A 2A                    7860 	ld	a, (hl+)
      00226B 5F                    7861 	ld	e, a
      00226C 56                    7862 	ld	d, (hl)
      00226D 21r00r00              7863 	ld	hl, #_shadow_OAM
      002270 19                    7864 	add	hl, de
      002271 33                    7865 	inc	sp
      002272 33                    7866 	inc	sp
      002273 5D                    7867 	ld	e, l
      002274 54                    7868 	ld	d, h
      002275 D5                    7869 	push	de
      002276 21 02 00              7870 	ld	hl, #0x0002
      002279 19                    7871 	add	hl, de
      00227A E5                    7872 	push	hl
      00227B 7D                    7873 	ld	a, l
      00227C F8 04                 7874 	ldhl	sp,	#4
      00227E 77                    7875 	ld	(hl), a
      00227F E1                    7876 	pop	hl
      002280 7C                    7877 	ld	a, h
      002281 F8 03                 7878 	ldhl	sp,	#3
      002283 32                    7879 	ld	(hl-), a
      002284 2A                    7880 	ld	a, (hl+)
      002285 5F                    7881 	ld	e, a
      002286 2A                    7882 	ld	a, (hl+)
      002287 57                    7883 	ld	d, a
      002288 7E                    7884 	ld	a, (hl)
      002289 12                    7885 	ld	(de), a
                                   7886 ;src/main.c:829: oldestProjectile += 1;
      00228A FAr84r00              7887 	ld	a, (#_oldestProjectile)
      00228D F8 04                 7888 	ldhl	sp,	#4
      00228F 77                    7889 	ld	(hl), a
                                   7890 ;src/main.c:865: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      002290 7E                    7891 	ld	a, (hl)
      002291 C6 1E                 7892 	add	a, #0x1e
      002293 77                    7893 	ld	(hl), a
                                   7894 ;src/main.c:877: if (xDir == 1) {
      002294 FAr86r00              7895 	ld	a, (#_xDir)
      002297 3D                    7896 	dec	a
      002298 20 7A                 7897 	jr	NZ, 00118$
                                   7898 ;src/main.c:878: set_sprite_prop(30+oldestProjectile, 0);
      00229A F8 04                 7899 	ldhl	sp,	#4
                                   7900 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00229C 3A                    7901 	ld	a, (hl-)
      00229D 22                    7902 	ld	(hl+), a
      00229E 36 00                 7903 	ld	(hl), #0x00
      0022A0 3E 02                 7904 	ld	a, #0x02
      0022A2                       7905 00263$:
      0022A2 F8 03                 7906 	ldhl	sp,	#3
      0022A4 CB 26                 7907 	sla	(hl)
      0022A6 23                    7908 	inc	hl
      0022A7 CB 16                 7909 	rl	(hl)
      0022A9 3D                    7910 	dec	a
      0022AA 20 F6                 7911 	jr	NZ, 00263$
      0022AC 2B                    7912 	dec	hl
      0022AD 2A                    7913 	ld	a, (hl+)
      0022AE 5F                    7914 	ld	e, a
      0022AF 56                    7915 	ld	d, (hl)
      0022B0 21r00r00              7916 	ld	hl, #_shadow_OAM
      0022B3 19                    7917 	add	hl, de
      0022B4 E5                    7918 	push	hl
      0022B5 7D                    7919 	ld	a, l
      0022B6 F8 03                 7920 	ldhl	sp,	#3
      0022B8 77                    7921 	ld	(hl), a
      0022B9 E1                    7922 	pop	hl
      0022BA 7C                    7923 	ld	a, h
      0022BB F8 02                 7924 	ldhl	sp,	#2
      0022BD 32                    7925 	ld	(hl-), a
      0022BE 2A                    7926 	ld	a, (hl+)
      0022BF 5F                    7927 	ld	e, a
      0022C0 56                    7928 	ld	d, (hl)
      0022C1 21 03 00              7929 	ld	hl, #0x0003
      0022C4 19                    7930 	add	hl, de
      0022C5 E5                    7931 	push	hl
      0022C6 7D                    7932 	ld	a, l
      0022C7 F8 05                 7933 	ldhl	sp,	#5
      0022C9 77                    7934 	ld	(hl), a
      0022CA E1                    7935 	pop	hl
      0022CB 7C                    7936 	ld	a, h
      0022CC F8 04                 7937 	ldhl	sp,	#4
      0022CE 32                    7938 	ld	(hl-), a
      0022CF 2A                    7939 	ld	a,	(hl+)
      0022D0 66                    7940 	ld	h, (hl)
      0022D1 6F                    7941 	ld	l, a
      0022D2 36 00                 7942 	ld	(hl), #0x00
                                   7943 ;src/main.c:879: projectiles[oldestProjectile].offset = 12;
      0022D4 21r84r00              7944 	ld	hl, #_oldestProjectile
      0022D7 4E                    7945 	ld	c, (hl)
      0022D8 06 00                 7946 	ld	b, #0x00
      0022DA 69                    7947 	ld	l, c
      0022DB 60                    7948 	ld	h, b
      0022DC 29                    7949 	add	hl, hl
      0022DD 09                    7950 	add	hl, bc
      0022DE 29                    7951 	add	hl, hl
      0022DF 29                    7952 	add	hl, hl
      0022E0 E5                    7953 	push	hl
      0022E1 7D                    7954 	ld	a, l
      0022E2 F8 05                 7955 	ldhl	sp,	#5
      0022E4 77                    7956 	ld	(hl), a
      0022E5 E1                    7957 	pop	hl
      0022E6 7C                    7958 	ld	a, h
      0022E7 F8 04                 7959 	ldhl	sp,	#4
      0022E9 32                    7960 	ld	(hl-), a
      0022EA 2A                    7961 	ld	a, (hl+)
      0022EB 5F                    7962 	ld	e, a
      0022EC 56                    7963 	ld	d, (hl)
      0022ED 21rA0r00              7964 	ld	hl, #_projectiles
      0022F0 19                    7965 	add	hl, de
      0022F1 E5                    7966 	push	hl
      0022F2 7D                    7967 	ld	a, l
      0022F3 F8 03                 7968 	ldhl	sp,	#3
      0022F5 77                    7969 	ld	(hl), a
      0022F6 E1                    7970 	pop	hl
      0022F7 7C                    7971 	ld	a, h
      0022F8 F8 02                 7972 	ldhl	sp,	#2
      0022FA 32                    7973 	ld	(hl-), a
      0022FB 2A                    7974 	ld	a, (hl+)
      0022FC 5F                    7975 	ld	e, a
      0022FD 56                    7976 	ld	d, (hl)
      0022FE 21 04 00              7977 	ld	hl, #0x0004
      002301 19                    7978 	add	hl, de
      002302 E5                    7979 	push	hl
      002303 7D                    7980 	ld	a, l
      002304 F8 05                 7981 	ldhl	sp,	#5
      002306 77                    7982 	ld	(hl), a
      002307 E1                    7983 	pop	hl
      002308 7C                    7984 	ld	a, h
      002309 F8 04                 7985 	ldhl	sp,	#4
      00230B 32                    7986 	ld	(hl-), a
      00230C 2A                    7987 	ld	a,	(hl+)
      00230D 66                    7988 	ld	h, (hl)
      00230E 6F                    7989 	ld	l, a
      00230F 36 0C                 7990 	ld	(hl), #0x0c
      002311 C3rF1r25              7991 	jp	00141$
      002314                       7992 00118$:
                                   7993 ;src/main.c:882: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      002314 F8 04                 7994 	ldhl	sp,	#4
                                   7995 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      002316 3A                    7996 	ld	a, (hl-)
      002317 22                    7997 	ld	(hl+), a
      002318 36 00                 7998 	ld	(hl), #0x00
      00231A 3E 02                 7999 	ld	a, #0x02
      00231C                       8000 00264$:
      00231C F8 03                 8001 	ldhl	sp,	#3
      00231E CB 26                 8002 	sla	(hl)
      002320 23                    8003 	inc	hl
      002321 CB 16                 8004 	rl	(hl)
      002323 3D                    8005 	dec	a
      002324 20 F6                 8006 	jr	NZ, 00264$
      002326 2B                    8007 	dec	hl
      002327 2A                    8008 	ld	a, (hl+)
      002328 5F                    8009 	ld	e, a
      002329 56                    8010 	ld	d, (hl)
      00232A 21r00r00              8011 	ld	hl, #_shadow_OAM
      00232D 19                    8012 	add	hl, de
      00232E E5                    8013 	push	hl
      00232F 7D                    8014 	ld	a, l
      002330 F8 03                 8015 	ldhl	sp,	#3
      002332 77                    8016 	ld	(hl), a
      002333 E1                    8017 	pop	hl
      002334 7C                    8018 	ld	a, h
      002335 F8 02                 8019 	ldhl	sp,	#2
      002337 32                    8020 	ld	(hl-), a
      002338 2A                    8021 	ld	a, (hl+)
      002339 5F                    8022 	ld	e, a
      00233A 56                    8023 	ld	d, (hl)
      00233B 21 03 00              8024 	ld	hl, #0x0003
      00233E 19                    8025 	add	hl, de
      00233F E5                    8026 	push	hl
      002340 7D                    8027 	ld	a, l
      002341 F8 05                 8028 	ldhl	sp,	#5
      002343 77                    8029 	ld	(hl), a
      002344 E1                    8030 	pop	hl
      002345 7C                    8031 	ld	a, h
      002346 F8 04                 8032 	ldhl	sp,	#4
      002348 32                    8033 	ld	(hl-), a
      002349 2A                    8034 	ld	a,	(hl+)
      00234A 66                    8035 	ld	h, (hl)
      00234B 6F                    8036 	ld	l, a
      00234C 36 20                 8037 	ld	(hl), #0x20
                                   8038 ;src/main.c:883: projectiles[oldestProjectile].offset = 12;
      00234E 21r84r00              8039 	ld	hl, #_oldestProjectile
      002351 4E                    8040 	ld	c, (hl)
      002352 06 00                 8041 	ld	b, #0x00
      002354 69                    8042 	ld	l, c
      002355 60                    8043 	ld	h, b
      002356 29                    8044 	add	hl, hl
      002357 09                    8045 	add	hl, bc
      002358 29                    8046 	add	hl, hl
      002359 29                    8047 	add	hl, hl
      00235A E5                    8048 	push	hl
      00235B 7D                    8049 	ld	a, l
      00235C F8 05                 8050 	ldhl	sp,	#5
      00235E 77                    8051 	ld	(hl), a
      00235F E1                    8052 	pop	hl
      002360 7C                    8053 	ld	a, h
      002361 F8 04                 8054 	ldhl	sp,	#4
      002363 32                    8055 	ld	(hl-), a
      002364 2A                    8056 	ld	a, (hl+)
      002365 5F                    8057 	ld	e, a
      002366 56                    8058 	ld	d, (hl)
      002367 21rA0r00              8059 	ld	hl, #_projectiles
      00236A 19                    8060 	add	hl, de
      00236B E5                    8061 	push	hl
      00236C 7D                    8062 	ld	a, l
      00236D F8 03                 8063 	ldhl	sp,	#3
      00236F 77                    8064 	ld	(hl), a
      002370 E1                    8065 	pop	hl
      002371 7C                    8066 	ld	a, h
      002372 F8 02                 8067 	ldhl	sp,	#2
      002374 32                    8068 	ld	(hl-), a
      002375 2A                    8069 	ld	a, (hl+)
      002376 5F                    8070 	ld	e, a
      002377 56                    8071 	ld	d, (hl)
      002378 21 04 00              8072 	ld	hl, #0x0004
      00237B 19                    8073 	add	hl, de
      00237C E5                    8074 	push	hl
      00237D 7D                    8075 	ld	a, l
      00237E F8 05                 8076 	ldhl	sp,	#5
      002380 77                    8077 	ld	(hl), a
      002381 E1                    8078 	pop	hl
      002382 7C                    8079 	ld	a, h
      002383 F8 04                 8080 	ldhl	sp,	#4
      002385 32                    8081 	ld	(hl-), a
      002386 2A                    8082 	ld	a,	(hl+)
      002387 66                    8083 	ld	h, (hl)
      002388 6F                    8084 	ld	l, a
      002389 36 0C                 8085 	ld	(hl), #0x0c
      00238B C3rF1r25              8086 	jp	00141$
      00238E                       8087 00136$:
                                   8088 ;src/main.c:887: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type+4);
      00238E F8 04                 8089 	ldhl	sp,	#4
      002390 7E                    8090 	ld	a, (hl)
      002391 C6 04                 8091 	add	a, #0x04
      002393 F8 00                 8092 	ldhl	sp,	#0
      002395 77                    8093 	ld	(hl), a
      002396 F8 03                 8094 	ldhl	sp,	#3
                                   8095 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002398 7E                    8096 	ld	a, (hl)
      002399 22                    8097 	ld	(hl+), a
      00239A 36 00                 8098 	ld	(hl), #0x00
      00239C 3E 02                 8099 	ld	a, #0x02
      00239E                       8100 00265$:
      00239E F8 03                 8101 	ldhl	sp,	#3
      0023A0 CB 26                 8102 	sla	(hl)
      0023A2 23                    8103 	inc	hl
      0023A3 CB 16                 8104 	rl	(hl)
      0023A5 3D                    8105 	dec	a
      0023A6 20 F6                 8106 	jr	NZ, 00265$
      0023A8 2B                    8107 	dec	hl
      0023A9 2A                    8108 	ld	a, (hl+)
      0023AA 5F                    8109 	ld	e, a
      0023AB 56                    8110 	ld	d, (hl)
      0023AC 21r00r00              8111 	ld	hl, #_shadow_OAM
      0023AF 19                    8112 	add	hl, de
      0023B0 E5                    8113 	push	hl
      0023B1 7D                    8114 	ld	a, l
      0023B2 F8 03                 8115 	ldhl	sp,	#3
      0023B4 77                    8116 	ld	(hl), a
      0023B5 E1                    8117 	pop	hl
      0023B6 7C                    8118 	ld	a, h
      0023B7 F8 02                 8119 	ldhl	sp,	#2
      0023B9 32                    8120 	ld	(hl-), a
      0023BA 2A                    8121 	ld	a, (hl+)
      0023BB 5F                    8122 	ld	e, a
      0023BC 56                    8123 	ld	d, (hl)
      0023BD 21 02 00              8124 	ld	hl, #0x0002
      0023C0 19                    8125 	add	hl, de
      0023C1 E5                    8126 	push	hl
      0023C2 7D                    8127 	ld	a, l
      0023C3 F8 05                 8128 	ldhl	sp,	#5
      0023C5 77                    8129 	ld	(hl), a
      0023C6 E1                    8130 	pop	hl
      0023C7 7C                    8131 	ld	a, h
      0023C8 F8 04                 8132 	ldhl	sp,	#4
      0023CA 32                    8133 	ld	(hl-), a
      0023CB 2A                    8134 	ld	a, (hl+)
      0023CC 5F                    8135 	ld	e, a
      0023CD 56                    8136 	ld	d, (hl)
      0023CE F8 00                 8137 	ldhl	sp,	#0
      0023D0 7E                    8138 	ld	a, (hl)
      0023D1 12                    8139 	ld	(de), a
                                   8140 ;src/main.c:888: if (xDir == 1 && yDir == -1) {
      0023D2 FAr86r00              8141 	ld	a, (#_xDir)
      0023D5 3D                    8142 	dec	a
      0023D6 3E 01                 8143 	ld	a, #0x01
      0023D8 28 01                 8144 	jr	Z, 00267$
      0023DA AF                    8145 	xor	a, a
      0023DB                       8146 00267$:
      0023DB F8 04                 8147 	ldhl	sp,	#4
      0023DD 77                    8148 	ld	(hl), a
                                   8149 ;src/main.c:829: oldestProjectile += 1;
      0023DE 21r84r00              8150 	ld	hl, #_oldestProjectile
      0023E1 4E                    8151 	ld	c, (hl)
                                   8152 ;src/main.c:888: if (xDir == 1 && yDir == -1) {
      0023E2 FAr87r00              8153 	ld	a, (#_yDir)
      0023E5 3C                    8154 	inc	a
      0023E6 3E 01                 8155 	ld	a, #0x01
      0023E8 28 01                 8156 	jr	Z, 00269$
      0023EA AF                    8157 	xor	a, a
      0023EB                       8158 00269$:
      0023EB F8 01                 8159 	ldhl	sp,	#1
                                   8160 ;src/main.c:865: set_sprite_tile(30+oldestProjectile, projectiles[oldestProjectile].type);
      0023ED 22                    8161 	ld	(hl+), a
      0023EE 79                    8162 	ld	a, c
      0023EF C6 1E                 8163 	add	a, #0x1e
                                   8164 ;src/main.c:888: if (xDir == 1 && yDir == -1) {
      0023F1 22                    8165 	ld	(hl+), a
      0023F2 23                    8166 	inc	hl
      0023F3 7E                    8167 	ld	a, (hl)
      0023F4 B7                    8168 	or	a, a
      0023F5 CAr77r24              8169 	jp	Z, 00132$
      0023F8 F8 01                 8170 	ldhl	sp,	#1
      0023FA 7E                    8171 	ld	a, (hl)
      0023FB B7                    8172 	or	a, a
      0023FC 28 79                 8173 	jr	Z, 00132$
                                   8174 ;src/main.c:889: set_sprite_prop(30+oldestProjectile, 0); //default is right & up
      0023FE 23                    8175 	inc	hl
                                   8176 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0023FF 2A                    8177 	ld	a, (hl+)
      002400 22                    8178 	ld	(hl+), a
      002401 36 00                 8179 	ld	(hl), #0x00
      002403 3E 02                 8180 	ld	a, #0x02
      002405                       8181 00270$:
      002405 F8 03                 8182 	ldhl	sp,	#3
      002407 CB 26                 8183 	sla	(hl)
      002409 23                    8184 	inc	hl
      00240A CB 16                 8185 	rl	(hl)
      00240C 3D                    8186 	dec	a
      00240D 20 F6                 8187 	jr	NZ, 00270$
      00240F 2B                    8188 	dec	hl
      002410 2A                    8189 	ld	a, (hl+)
      002411 5F                    8190 	ld	e, a
      002412 56                    8191 	ld	d, (hl)
      002413 21r00r00              8192 	ld	hl, #_shadow_OAM
      002416 19                    8193 	add	hl, de
      002417 E5                    8194 	push	hl
      002418 7D                    8195 	ld	a, l
      002419 F8 03                 8196 	ldhl	sp,	#3
      00241B 77                    8197 	ld	(hl), a
      00241C E1                    8198 	pop	hl
      00241D 7C                    8199 	ld	a, h
      00241E F8 02                 8200 	ldhl	sp,	#2
      002420 32                    8201 	ld	(hl-), a
      002421 2A                    8202 	ld	a, (hl+)
      002422 5F                    8203 	ld	e, a
      002423 56                    8204 	ld	d, (hl)
      002424 21 03 00              8205 	ld	hl, #0x0003
      002427 19                    8206 	add	hl, de
      002428 E5                    8207 	push	hl
      002429 7D                    8208 	ld	a, l
      00242A F8 05                 8209 	ldhl	sp,	#5
      00242C 77                    8210 	ld	(hl), a
      00242D E1                    8211 	pop	hl
      00242E 7C                    8212 	ld	a, h
      00242F F8 04                 8213 	ldhl	sp,	#4
      002431 32                    8214 	ld	(hl-), a
      002432 2A                    8215 	ld	a,	(hl+)
      002433 66                    8216 	ld	h, (hl)
      002434 6F                    8217 	ld	l, a
      002435 36 00                 8218 	ld	(hl), #0x00
                                   8219 ;src/main.c:890: projectiles[oldestProjectile].offset = 12;
      002437 21r84r00              8220 	ld	hl, #_oldestProjectile
      00243A 4E                    8221 	ld	c, (hl)
      00243B 06 00                 8222 	ld	b, #0x00
      00243D 69                    8223 	ld	l, c
      00243E 60                    8224 	ld	h, b
      00243F 29                    8225 	add	hl, hl
      002440 09                    8226 	add	hl, bc
      002441 29                    8227 	add	hl, hl
      002442 29                    8228 	add	hl, hl
      002443 E5                    8229 	push	hl
      002444 7D                    8230 	ld	a, l
      002445 F8 05                 8231 	ldhl	sp,	#5
      002447 77                    8232 	ld	(hl), a
      002448 E1                    8233 	pop	hl
      002449 7C                    8234 	ld	a, h
      00244A F8 04                 8235 	ldhl	sp,	#4
      00244C 32                    8236 	ld	(hl-), a
      00244D 2A                    8237 	ld	a, (hl+)
      00244E 5F                    8238 	ld	e, a
      00244F 56                    8239 	ld	d, (hl)
      002450 21rA0r00              8240 	ld	hl, #_projectiles
      002453 19                    8241 	add	hl, de
      002454 E5                    8242 	push	hl
      002455 7D                    8243 	ld	a, l
      002456 F8 03                 8244 	ldhl	sp,	#3
      002458 77                    8245 	ld	(hl), a
      002459 E1                    8246 	pop	hl
      00245A 7C                    8247 	ld	a, h
      00245B F8 02                 8248 	ldhl	sp,	#2
      00245D 32                    8249 	ld	(hl-), a
      00245E 2A                    8250 	ld	a, (hl+)
      00245F 5F                    8251 	ld	e, a
      002460 56                    8252 	ld	d, (hl)
      002461 21 04 00              8253 	ld	hl, #0x0004
      002464 19                    8254 	add	hl, de
      002465 E5                    8255 	push	hl
      002466 7D                    8256 	ld	a, l
      002467 F8 05                 8257 	ldhl	sp,	#5
      002469 77                    8258 	ld	(hl), a
      00246A E1                    8259 	pop	hl
      00246B 7C                    8260 	ld	a, h
      00246C F8 04                 8261 	ldhl	sp,	#4
      00246E 32                    8262 	ld	(hl-), a
      00246F 2A                    8263 	ld	a,	(hl+)
      002470 66                    8264 	ld	h, (hl)
      002471 6F                    8265 	ld	l, a
      002472 36 0C                 8266 	ld	(hl), #0x0c
      002474 C3rF1r25              8267 	jp	00141$
      002477                       8268 00132$:
                                   8269 ;src/main.c:866: if (yDir == 1) {
      002477 FAr87r00              8270 	ld	a, (#_yDir)
      00247A 3D                    8271 	dec	a
      00247B 3E 01                 8272 	ld	a, #0x01
      00247D 28 01                 8273 	jr	Z, 00272$
      00247F AF                    8274 	xor	a, a
      002480                       8275 00272$:
      002480 F8 03                 8276 	ldhl	sp,	#3
                                   8277 ;src/main.c:892: else if (xDir == 1 && yDir == 1) {
      002482 22                    8278 	ld	(hl+), a
      002483 7E                    8279 	ld	a, (hl)
      002484 B7                    8280 	or	a, a
      002485 CAr06r25              8281 	jp	Z, 00128$
      002488 2B                    8282 	dec	hl
      002489 7E                    8283 	ld	a, (hl)
      00248A B7                    8284 	or	a, a
      00248B 28 79                 8285 	jr	Z, 00128$
                                   8286 ;src/main.c:893: set_sprite_prop(30+oldestProjectile, S_FLIPY); 
      00248D 2B                    8287 	dec	hl
                                   8288 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00248E 2A                    8289 	ld	a, (hl+)
      00248F 22                    8290 	ld	(hl+), a
      002490 36 00                 8291 	ld	(hl), #0x00
      002492 3E 02                 8292 	ld	a, #0x02
      002494                       8293 00273$:
      002494 F8 03                 8294 	ldhl	sp,	#3
      002496 CB 26                 8295 	sla	(hl)
      002498 23                    8296 	inc	hl
      002499 CB 16                 8297 	rl	(hl)
      00249B 3D                    8298 	dec	a
      00249C 20 F6                 8299 	jr	NZ, 00273$
      00249E 2B                    8300 	dec	hl
      00249F 2A                    8301 	ld	a, (hl+)
      0024A0 5F                    8302 	ld	e, a
      0024A1 56                    8303 	ld	d, (hl)
      0024A2 21r00r00              8304 	ld	hl, #_shadow_OAM
      0024A5 19                    8305 	add	hl, de
      0024A6 E5                    8306 	push	hl
      0024A7 7D                    8307 	ld	a, l
      0024A8 F8 03                 8308 	ldhl	sp,	#3
      0024AA 77                    8309 	ld	(hl), a
      0024AB E1                    8310 	pop	hl
      0024AC 7C                    8311 	ld	a, h
      0024AD F8 02                 8312 	ldhl	sp,	#2
      0024AF 32                    8313 	ld	(hl-), a
      0024B0 2A                    8314 	ld	a, (hl+)
      0024B1 5F                    8315 	ld	e, a
      0024B2 56                    8316 	ld	d, (hl)
      0024B3 21 03 00              8317 	ld	hl, #0x0003
      0024B6 19                    8318 	add	hl, de
      0024B7 E5                    8319 	push	hl
      0024B8 7D                    8320 	ld	a, l
      0024B9 F8 05                 8321 	ldhl	sp,	#5
      0024BB 77                    8322 	ld	(hl), a
      0024BC E1                    8323 	pop	hl
      0024BD 7C                    8324 	ld	a, h
      0024BE F8 04                 8325 	ldhl	sp,	#4
      0024C0 32                    8326 	ld	(hl-), a
      0024C1 2A                    8327 	ld	a,	(hl+)
      0024C2 66                    8328 	ld	h, (hl)
      0024C3 6F                    8329 	ld	l, a
      0024C4 36 40                 8330 	ld	(hl), #0x40
                                   8331 ;src/main.c:894: projectiles[oldestProjectile].offset = 4;
      0024C6 21r84r00              8332 	ld	hl, #_oldestProjectile
      0024C9 4E                    8333 	ld	c, (hl)
      0024CA 06 00                 8334 	ld	b, #0x00
      0024CC 69                    8335 	ld	l, c
      0024CD 60                    8336 	ld	h, b
      0024CE 29                    8337 	add	hl, hl
      0024CF 09                    8338 	add	hl, bc
      0024D0 29                    8339 	add	hl, hl
      0024D1 29                    8340 	add	hl, hl
      0024D2 E5                    8341 	push	hl
      0024D3 7D                    8342 	ld	a, l
      0024D4 F8 05                 8343 	ldhl	sp,	#5
      0024D6 77                    8344 	ld	(hl), a
      0024D7 E1                    8345 	pop	hl
      0024D8 7C                    8346 	ld	a, h
      0024D9 F8 04                 8347 	ldhl	sp,	#4
      0024DB 32                    8348 	ld	(hl-), a
      0024DC 2A                    8349 	ld	a, (hl+)
      0024DD 5F                    8350 	ld	e, a
      0024DE 56                    8351 	ld	d, (hl)
      0024DF 21rA0r00              8352 	ld	hl, #_projectiles
      0024E2 19                    8353 	add	hl, de
      0024E3 E5                    8354 	push	hl
      0024E4 7D                    8355 	ld	a, l
      0024E5 F8 03                 8356 	ldhl	sp,	#3
      0024E7 77                    8357 	ld	(hl), a
      0024E8 E1                    8358 	pop	hl
      0024E9 7C                    8359 	ld	a, h
      0024EA F8 02                 8360 	ldhl	sp,	#2
      0024EC 32                    8361 	ld	(hl-), a
      0024ED 2A                    8362 	ld	a, (hl+)
      0024EE 5F                    8363 	ld	e, a
      0024EF 56                    8364 	ld	d, (hl)
      0024F0 21 04 00              8365 	ld	hl, #0x0004
      0024F3 19                    8366 	add	hl, de
      0024F4 E5                    8367 	push	hl
      0024F5 7D                    8368 	ld	a, l
      0024F6 F8 05                 8369 	ldhl	sp,	#5
      0024F8 77                    8370 	ld	(hl), a
      0024F9 E1                    8371 	pop	hl
      0024FA 7C                    8372 	ld	a, h
      0024FB F8 04                 8373 	ldhl	sp,	#4
      0024FD 32                    8374 	ld	(hl-), a
      0024FE 2A                    8375 	ld	a,	(hl+)
      0024FF 66                    8376 	ld	h, (hl)
      002500 6F                    8377 	ld	l, a
      002501 36 04                 8378 	ld	(hl), #0x04
      002503 C3rF1r25              8379 	jp	00141$
      002506                       8380 00128$:
                                   8381 ;src/main.c:896: else if (xDir == -1 && yDir == 1) {
      002506 FAr86r00              8382 	ld	a, (#_xDir)
      002509 3C                    8383 	inc	a
      00250A 3E 01                 8384 	ld	a, #0x01
      00250C 28 01                 8385 	jr	Z, 00275$
      00250E AF                    8386 	xor	a, a
      00250F                       8387 00275$:
      00250F F8 04                 8388 	ldhl	sp,	#4
      002511 77                    8389 	ld	(hl), a
      002512 7E                    8390 	ld	a, (hl)
      002513 B7                    8391 	or	a, a
      002514 CAr94r25              8392 	jp	Z, 00124$
      002517 2B                    8393 	dec	hl
      002518 7E                    8394 	ld	a, (hl)
      002519 B7                    8395 	or	a, a
      00251A 28 78                 8396 	jr	Z, 00124$
                                   8397 ;src/main.c:897: set_sprite_prop(30+oldestProjectile, S_FLIPY | S_FLIPX);
      00251C 2B                    8398 	dec	hl
                                   8399 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00251D 2A                    8400 	ld	a, (hl+)
      00251E 22                    8401 	ld	(hl+), a
      00251F 36 00                 8402 	ld	(hl), #0x00
      002521 3E 02                 8403 	ld	a, #0x02
      002523                       8404 00276$:
      002523 F8 03                 8405 	ldhl	sp,	#3
      002525 CB 26                 8406 	sla	(hl)
      002527 23                    8407 	inc	hl
      002528 CB 16                 8408 	rl	(hl)
      00252A 3D                    8409 	dec	a
      00252B 20 F6                 8410 	jr	NZ, 00276$
      00252D 2B                    8411 	dec	hl
      00252E 2A                    8412 	ld	a, (hl+)
      00252F 5F                    8413 	ld	e, a
      002530 56                    8414 	ld	d, (hl)
      002531 21r00r00              8415 	ld	hl, #_shadow_OAM
      002534 19                    8416 	add	hl, de
      002535 E5                    8417 	push	hl
      002536 7D                    8418 	ld	a, l
      002537 F8 03                 8419 	ldhl	sp,	#3
      002539 77                    8420 	ld	(hl), a
      00253A E1                    8421 	pop	hl
      00253B 7C                    8422 	ld	a, h
      00253C F8 02                 8423 	ldhl	sp,	#2
      00253E 32                    8424 	ld	(hl-), a
      00253F 2A                    8425 	ld	a, (hl+)
      002540 5F                    8426 	ld	e, a
      002541 56                    8427 	ld	d, (hl)
      002542 21 03 00              8428 	ld	hl, #0x0003
      002545 19                    8429 	add	hl, de
      002546 E5                    8430 	push	hl
      002547 7D                    8431 	ld	a, l
      002548 F8 05                 8432 	ldhl	sp,	#5
      00254A 77                    8433 	ld	(hl), a
      00254B E1                    8434 	pop	hl
      00254C 7C                    8435 	ld	a, h
      00254D F8 04                 8436 	ldhl	sp,	#4
      00254F 32                    8437 	ld	(hl-), a
      002550 2A                    8438 	ld	a,	(hl+)
      002551 66                    8439 	ld	h, (hl)
      002552 6F                    8440 	ld	l, a
      002553 36 60                 8441 	ld	(hl), #0x60
                                   8442 ;src/main.c:898: projectiles[oldestProjectile].offset = 4;
      002555 21r84r00              8443 	ld	hl, #_oldestProjectile
      002558 4E                    8444 	ld	c, (hl)
      002559 06 00                 8445 	ld	b, #0x00
      00255B 69                    8446 	ld	l, c
      00255C 60                    8447 	ld	h, b
      00255D 29                    8448 	add	hl, hl
      00255E 09                    8449 	add	hl, bc
      00255F 29                    8450 	add	hl, hl
      002560 29                    8451 	add	hl, hl
      002561 E5                    8452 	push	hl
      002562 7D                    8453 	ld	a, l
      002563 F8 05                 8454 	ldhl	sp,	#5
      002565 77                    8455 	ld	(hl), a
      002566 E1                    8456 	pop	hl
      002567 7C                    8457 	ld	a, h
      002568 F8 04                 8458 	ldhl	sp,	#4
      00256A 32                    8459 	ld	(hl-), a
      00256B 2A                    8460 	ld	a, (hl+)
      00256C 5F                    8461 	ld	e, a
      00256D 56                    8462 	ld	d, (hl)
      00256E 21rA0r00              8463 	ld	hl, #_projectiles
      002571 19                    8464 	add	hl, de
      002572 E5                    8465 	push	hl
      002573 7D                    8466 	ld	a, l
      002574 F8 03                 8467 	ldhl	sp,	#3
      002576 77                    8468 	ld	(hl), a
      002577 E1                    8469 	pop	hl
      002578 7C                    8470 	ld	a, h
      002579 F8 02                 8471 	ldhl	sp,	#2
      00257B 32                    8472 	ld	(hl-), a
      00257C 2A                    8473 	ld	a, (hl+)
      00257D 5F                    8474 	ld	e, a
      00257E 56                    8475 	ld	d, (hl)
      00257F 21 04 00              8476 	ld	hl, #0x0004
      002582 19                    8477 	add	hl, de
      002583 E5                    8478 	push	hl
      002584 7D                    8479 	ld	a, l
      002585 F8 05                 8480 	ldhl	sp,	#5
      002587 77                    8481 	ld	(hl), a
      002588 E1                    8482 	pop	hl
      002589 7C                    8483 	ld	a, h
      00258A F8 04                 8484 	ldhl	sp,	#4
      00258C 32                    8485 	ld	(hl-), a
      00258D 2A                    8486 	ld	a,	(hl+)
      00258E 66                    8487 	ld	h, (hl)
      00258F 6F                    8488 	ld	l, a
      002590 36 04                 8489 	ld	(hl), #0x04
      002592 18 5D                 8490 	jr	00141$
      002594                       8491 00124$:
                                   8492 ;src/main.c:900: else if (xDir == -1 && yDir == -1) {
      002594 F8 04                 8493 	ldhl	sp,	#4
      002596 7E                    8494 	ld	a, (hl)
      002597 B7                    8495 	or	a, a
      002598 28 57                 8496 	jr	Z, 00141$
      00259A F8 01                 8497 	ldhl	sp,	#1
      00259C 7E                    8498 	ld	a, (hl)
      00259D B7                    8499 	or	a, a
      00259E 28 51                 8500 	jr	Z, 00141$
                                   8501 ;src/main.c:901: set_sprite_prop(30+oldestProjectile, S_FLIPX); 
      0025A0 23                    8502 	inc	hl
                                   8503 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0025A1 2A                    8504 	ld	a, (hl+)
      0025A2 22                    8505 	ld	(hl+), a
      0025A3 36 00                 8506 	ld	(hl), #0x00
      0025A5 3E 02                 8507 	ld	a, #0x02
      0025A7                       8508 00277$:
      0025A7 F8 03                 8509 	ldhl	sp,	#3
      0025A9 CB 26                 8510 	sla	(hl)
      0025AB 23                    8511 	inc	hl
      0025AC CB 16                 8512 	rl	(hl)
      0025AE 3D                    8513 	dec	a
      0025AF 20 F6                 8514 	jr	NZ, 00277$
      0025B1 2B                    8515 	dec	hl
      0025B2 2A                    8516 	ld	a, (hl+)
      0025B3 5F                    8517 	ld	e, a
      0025B4 56                    8518 	ld	d, (hl)
      0025B5 21r00r00              8519 	ld	hl, #_shadow_OAM
      0025B8 19                    8520 	add	hl, de
      0025B9 E5                    8521 	push	hl
      0025BA 7D                    8522 	ld	a, l
      0025BB F8 03                 8523 	ldhl	sp,	#3
      0025BD 77                    8524 	ld	(hl), a
      0025BE E1                    8525 	pop	hl
      0025BF 7C                    8526 	ld	a, h
      0025C0 F8 02                 8527 	ldhl	sp,	#2
      0025C2 32                    8528 	ld	(hl-), a
      0025C3 2A                    8529 	ld	a, (hl+)
      0025C4 5F                    8530 	ld	e, a
      0025C5 56                    8531 	ld	d, (hl)
      0025C6 21 03 00              8532 	ld	hl, #0x0003
      0025C9 19                    8533 	add	hl, de
      0025CA E5                    8534 	push	hl
      0025CB 7D                    8535 	ld	a, l
      0025CC F8 05                 8536 	ldhl	sp,	#5
      0025CE 77                    8537 	ld	(hl), a
      0025CF E1                    8538 	pop	hl
      0025D0 7C                    8539 	ld	a, h
      0025D1 F8 04                 8540 	ldhl	sp,	#4
      0025D3 32                    8541 	ld	(hl-), a
      0025D4 2A                    8542 	ld	a,	(hl+)
      0025D5 66                    8543 	ld	h, (hl)
      0025D6 6F                    8544 	ld	l, a
      0025D7 36 20                 8545 	ld	(hl), #0x20
                                   8546 ;src/main.c:902: projectiles[oldestProjectile].offset = 12;
      0025D9 21r84r00              8547 	ld	hl, #_oldestProjectile
      0025DC 4E                    8548 	ld	c, (hl)
      0025DD 06 00                 8549 	ld	b, #0x00
      0025DF 69                    8550 	ld	l, c
      0025E0 60                    8551 	ld	h, b
      0025E1 29                    8552 	add	hl, hl
      0025E2 09                    8553 	add	hl, bc
      0025E3 29                    8554 	add	hl, hl
      0025E4 29                    8555 	add	hl, hl
      0025E5 01rA0r00              8556 	ld	bc,#_projectiles
      0025E8 09                    8557 	add	hl,bc
      0025E9 4D                    8558 	ld	c, l
      0025EA 44                    8559 	ld	b, h
      0025EB 21 04 00              8560 	ld	hl, #0x0004
      0025EE 09                    8561 	add	hl, bc
      0025EF 36 0C                 8562 	ld	(hl), #0x0c
      0025F1                       8563 00141$:
                                   8564 ;src/main.c:906: fireCooldown = projectiles[oldestProjectile].delay;
      0025F1 21r84r00              8565 	ld	hl, #_oldestProjectile
      0025F4 4E                    8566 	ld	c, (hl)
      0025F5 06 00                 8567 	ld	b, #0x00
      0025F7 69                    8568 	ld	l, c
      0025F8 60                    8569 	ld	h, b
      0025F9 29                    8570 	add	hl, hl
      0025FA 09                    8571 	add	hl, bc
      0025FB 29                    8572 	add	hl, hl
      0025FC 29                    8573 	add	hl, hl
      0025FD 01rA0r00              8574 	ld	bc,#_projectiles
      002600 09                    8575 	add	hl,bc
      002601 4D                    8576 	ld	c, l
      002602 44                    8577 	ld	b, h
      002603 21 0A 00              8578 	ld	hl, #0x000a
      002606 09                    8579 	add	hl, bc
      002607 7E                    8580 	ld	a, (hl)
      002608 EAr85r00              8581 	ld	(#_fireCooldown),a
                                   8582 ;src/main.c:908: playSound(projectiles[oldestProjectile].type);
      00260B 21 0B 00              8583 	ld	hl, #0x000b
      00260E 09                    8584 	add	hl, bc
      00260F 7E                    8585 	ld	a, (hl)
      002610 F5                    8586 	push	af
      002611 33                    8587 	inc	sp
      002612 CDr76r0C              8588 	call	_playSound
      002615 33                    8589 	inc	sp
      002616                       8590 00154$:
                                   8591 ;src/main.c:912: }
      002616 E8 05                 8592 	add	sp, #5
      002618 C9                    8593 	ret
                                   8594 ;src/main.c:915: void moveProjectiles() {
                                   8595 ;	---------------------------------
                                   8596 ; Function moveProjectiles
                                   8597 ; ---------------------------------
      002619                       8598 _moveProjectiles::
      002619 E8 F9                 8599 	add	sp, #-7
                                   8600 ;src/main.c:916: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00261B F8 06                 8601 	ldhl	sp,	#6
      00261D 36 00                 8602 	ld	(hl), #0x00
      00261F                       8603 00112$:
      00261F 21r6Er08              8604 	ld	hl, #_PROJECTILECOUNT
      002622 4E                    8605 	ld	c, (hl)
      002623 F8 06                 8606 	ldhl	sp,	#6
      002625 7E                    8607 	ld	a, (hl)
      002626 91                    8608 	sub	a, c
      002627 D2r75r27              8609 	jp	NC, 00114$
                                   8610 ;src/main.c:917: projectiles[i].x -= xOverflow;
      00262A 4E                    8611 	ld	c, (hl)
      00262B 06 00                 8612 	ld	b, #0x00
      00262D 69                    8613 	ld	l, c
      00262E 60                    8614 	ld	h, b
      00262F 29                    8615 	add	hl, hl
      002630 09                    8616 	add	hl, bc
      002631 29                    8617 	add	hl, hl
      002632 29                    8618 	add	hl, hl
      002633 01rA0r00              8619 	ld	bc,#_projectiles
      002636 09                    8620 	add	hl,bc
      002637 33                    8621 	inc	sp
      002638 33                    8622 	inc	sp
      002639 5D                    8623 	ld	e, l
      00263A 54                    8624 	ld	d, h
      00263B D5                    8625 	push	de
      00263C 1A                    8626 	ld	a, (de)
      00263D 4F                    8627 	ld	c, a
      00263E 13                    8628 	inc	de
      00263F 1A                    8629 	ld	a, (de)
      002640 47                    8630 	ld	b, a
      002641 79                    8631 	ld	a, c
      002642 21r94r00              8632 	ld	hl, #_xOverflow
      002645 96                    8633 	sub	a, (hl)
      002646 23                    8634 	inc	hl
      002647 4F                    8635 	ld	c, a
      002648 78                    8636 	ld	a, b
      002649 9E                    8637 	sbc	a, (hl)
      00264A 47                    8638 	ld	b, a
      00264B E1                    8639 	pop	hl
      00264C E5                    8640 	push	hl
      00264D 79                    8641 	ld	a, c
      00264E 22                    8642 	ld	(hl+), a
      00264F 70                    8643 	ld	(hl), b
                                   8644 ;src/main.c:918: projectiles[i].y -= yOverflow;
      002650 D1                    8645 	pop	de
      002651 D5                    8646 	push	de
      002652 21 02 00              8647 	ld	hl, #0x0002
      002655 19                    8648 	add	hl, de
      002656 E5                    8649 	push	hl
      002657 7D                    8650 	ld	a, l
      002658 F8 04                 8651 	ldhl	sp,	#4
      00265A 77                    8652 	ld	(hl), a
      00265B E1                    8653 	pop	hl
      00265C 7C                    8654 	ld	a, h
      00265D F8 03                 8655 	ldhl	sp,	#3
      00265F 32                    8656 	ld	(hl-), a
      002660 2A                    8657 	ld	a, (hl+)
      002661 5F                    8658 	ld	e, a
      002662 56                    8659 	ld	d, (hl)
      002663 1A                    8660 	ld	a, (de)
      002664 4F                    8661 	ld	c, a
      002665 13                    8662 	inc	de
      002666 1A                    8663 	ld	a, (de)
      002667 47                    8664 	ld	b, a
      002668 79                    8665 	ld	a, c
      002669 21r96r00              8666 	ld	hl, #_yOverflow
      00266C 96                    8667 	sub	a, (hl)
      00266D 23                    8668 	inc	hl
      00266E 4F                    8669 	ld	c, a
      00266F 78                    8670 	ld	a, b
      002670 9E                    8671 	sbc	a, (hl)
      002671 47                    8672 	ld	b, a
      002672 F8 02                 8673 	ldhl	sp,	#2
      002674 2A                    8674 	ld	a,	(hl+)
      002675 66                    8675 	ld	h, (hl)
      002676 6F                    8676 	ld	l, a
      002677 79                    8677 	ld	a, c
      002678 22                    8678 	ld	(hl+), a
      002679 70                    8679 	ld	(hl), b
                                   8680 ;src/main.c:920: if (projectiles[i].active) {
      00267A D1                    8681 	pop	de
      00267B D5                    8682 	push	de
      00267C 21 09 00              8683 	ld	hl, #0x0009
      00267F 19                    8684 	add	hl, de
      002680 4D                    8685 	ld	c, l
      002681 44                    8686 	ld	b, h
      002682 0A                    8687 	ld	a, (bc)
      002683 B7                    8688 	or	a, a
      002684 CAr6Fr27              8689 	jp	Z, 00113$
                                   8690 ;src/main.c:921: int16_t newY = projectiles[i].y + projectiles[i].ySpeed;
      002687 F8 02                 8691 	ldhl	sp,#2
      002689 2A                    8692 	ld	a, (hl+)
      00268A 5F                    8693 	ld	e, a
      00268B 56                    8694 	ld	d, (hl)
      00268C 1A                    8695 	ld	a, (de)
      00268D 4F                    8696 	ld	c, a
      00268E 13                    8697 	inc	de
      00268F 1A                    8698 	ld	a, (de)
      002690 47                    8699 	ld	b, a
      002691 D1                    8700 	pop	de
      002692 D5                    8701 	push	de
      002693 21 06 00              8702 	ld	hl, #0x0006
      002696 19                    8703 	add	hl, de
      002697 5D                    8704 	ld	e, l
      002698 54                    8705 	ld	d, h
      002699 1A                    8706 	ld	a, (de)
      00269A 6F                    8707 	ld	l, a
                                   8708 ;	spillPairReg hl
                                   8709 ;	spillPairReg hl
      00269B 07                    8710 	rlca
      00269C 9F                    8711 	sbc	a, a
      00269D 67                    8712 	ld	h, a
                                   8713 ;	spillPairReg hl
                                   8714 ;	spillPairReg hl
      00269E 09                    8715 	add	hl, bc
      00269F 4D                    8716 	ld	c, l
      0026A0 44                    8717 	ld	b, h
      0026A1 F8 04                 8718 	ldhl	sp,	#4
      0026A3 79                    8719 	ld	a, c
      0026A4 22                    8720 	ld	(hl+), a
      0026A5 70                    8721 	ld	(hl), b
                                   8722 ;src/main.c:922: int16_t newX = projectiles[i].x + projectiles[i].xSpeed;
      0026A6 D1                    8723 	pop	de
      0026A7 D5                    8724 	push	de
      0026A8 1A                    8725 	ld	a, (de)
      0026A9 4F                    8726 	ld	c, a
      0026AA 13                    8727 	inc	de
      0026AB 1A                    8728 	ld	a, (de)
      0026AC 47                    8729 	ld	b, a
      0026AD D1                    8730 	pop	de
      0026AE D5                    8731 	push	de
      0026AF 21 05 00              8732 	ld	hl, #0x0005
      0026B2 19                    8733 	add	hl, de
      0026B3 5D                    8734 	ld	e, l
      0026B4 54                    8735 	ld	d, h
      0026B5 1A                    8736 	ld	a, (de)
      0026B6 6F                    8737 	ld	l, a
                                   8738 ;	spillPairReg hl
                                   8739 ;	spillPairReg hl
      0026B7 07                    8740 	rlca
      0026B8 9F                    8741 	sbc	a, a
      0026B9 67                    8742 	ld	h, a
                                   8743 ;	spillPairReg hl
                                   8744 ;	spillPairReg hl
      0026BA 09                    8745 	add	hl, bc
      0026BB 4D                    8746 	ld	c, l
      0026BC 44                    8747 	ld	b, h
                                   8748 ;src/main.c:925: projectiles[i].y = newY;
      0026BD F8 02                 8749 	ldhl	sp,#2
      0026BF 2A                    8750 	ld	a, (hl+)
      0026C0 5F                    8751 	ld	e, a
      0026C1 2A                    8752 	ld	a, (hl+)
      0026C2 57                    8753 	ld	d, a
      0026C3 2A                    8754 	ld	a, (hl+)
      0026C4 12                    8755 	ld	(de), a
      0026C5 13                    8756 	inc	de
      0026C6 7E                    8757 	ld	a, (hl)
      0026C7 12                    8758 	ld	(de), a
                                   8759 ;src/main.c:926: projectiles[i].x = newX;
      0026C8 E1                    8760 	pop	hl
      0026C9 E5                    8761 	push	hl
      0026CA 79                    8762 	ld	a, c
      0026CB 22                    8763 	ld	(hl+), a
      0026CC 70                    8764 	ld	(hl), b
                                   8765 ;src/main.c:930: move_sprite(30+i, newX +4 , newY + projectiles[i].offset);
      0026CD F8 04                 8766 	ldhl	sp,	#4
      0026CF 2A                    8767 	ld	a, (hl+)
      0026D0 77                    8768 	ld	(hl), a
      0026D1 D1                    8769 	pop	de
      0026D2 D5                    8770 	push	de
      0026D3 21 04 00              8771 	ld	hl, #0x0004
      0026D6 19                    8772 	add	hl, de
      0026D7 5D                    8773 	ld	e, l
      0026D8 54                    8774 	ld	d, h
      0026D9 1A                    8775 	ld	a, (de)
      0026DA F8 05                 8776 	ldhl	sp,	#5
      0026DC 86                    8777 	add	a, (hl)
      0026DD 2B                    8778 	dec	hl
      0026DE 5F                    8779 	ld	e, a
      0026DF 79                    8780 	ld	a, c
      0026E0 C6 04                 8781 	add	a, #0x04
      0026E2 22                    8782 	ld	(hl+), a
      0026E3 23                    8783 	inc	hl
      0026E4 3A                    8784 	ld	a, (hl-)
      0026E5 C6 1E                 8785 	add	a, #0x1e
      0026E7 77                    8786 	ld	(hl), a
      0026E8 56                    8787 	ld	d, (hl)
                                   8788 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0026E9 26 00                 8789 	ld	h, #0x00
                                   8790 ;	spillPairReg hl
                                   8791 ;	spillPairReg hl
      0026EB 6A                    8792 	ld	l, d
      0026EC 29                    8793 	add	hl, hl
      0026ED 29                    8794 	add	hl, hl
      0026EE D5                    8795 	push	de
      0026EF 11r00r00              8796 	ld	de, #_shadow_OAM
      0026F2 19                    8797 	add	hl, de
      0026F3 D1                    8798 	pop	de
                                   8799 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0026F4 7B                    8800 	ld	a, e
      0026F5 22                    8801 	ld	(hl+), a
      0026F6 5D                    8802 	ld	e, l
      0026F7 54                    8803 	ld	d, h
      0026F8 F8 04                 8804 	ldhl	sp,	#4
      0026FA 7E                    8805 	ld	a, (hl)
      0026FB 12                    8806 	ld	(de), a
                                   8807 ;src/main.c:934: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      0026FC D1                    8808 	pop	de
      0026FD D5                    8809 	push	de
      0026FE 1A                    8810 	ld	a, (de)
      0026FF 6F                    8811 	ld	l, a
                                   8812 ;	spillPairReg hl
                                   8813 ;	spillPairReg hl
      002700 13                    8814 	inc	de
      002701 1A                    8815 	ld	a, (de)
      002702 67                    8816 	ld	h, a
                                   8817 ;	spillPairReg hl
                                   8818 ;	spillPairReg hl
      002703 CB 78                 8819 	bit	7, b
      002705 20 44                 8820 	jr	NZ, 00101$
      002707 5C                    8821 	ld	e, h
      002708 16 00                 8822 	ld	d, #0x00
      00270A 3E AA                 8823 	ld	a, #0xaa
      00270C BD                    8824 	cp	a, l
      00270D 3E 00                 8825 	ld	a, #0x00
      00270F 9C                    8826 	sbc	a, h
      002710 CB 7B                 8827 	bit	7, e
      002712 28 07                 8828 	jr	Z, 00147$
      002714 CB 7A                 8829 	bit	7, d
      002716 20 08                 8830 	jr	NZ, 00148$
      002718 BF                    8831 	cp	a, a
      002719 18 05                 8832 	jr	00148$
      00271B                       8833 00147$:
      00271B CB 7A                 8834 	bit	7, d
      00271D 28 01                 8835 	jr	Z, 00148$
      00271F 37                    8836 	scf
      002720                       8837 00148$:
      002720 38 29                 8838 	jr	C, 00101$
                                   8839 ;src/main.c:918: projectiles[i].y -= yOverflow;
      002722 F8 02                 8840 	ldhl	sp,#2
      002724 2A                    8841 	ld	a, (hl+)
      002725 5F                    8842 	ld	e, a
      002726 56                    8843 	ld	d, (hl)
      002727 1A                    8844 	ld	a, (de)
      002728 4F                    8845 	ld	c, a
      002729 13                    8846 	inc	de
      00272A 1A                    8847 	ld	a, (de)
                                   8848 ;src/main.c:934: if (projectiles[i].x < 0 || projectiles[i].x > 170 || projectiles[i].y < 0 || projectiles[i].y > 154) {
      00272B 47                    8849 	ld	b, a
      00272C CB 78                 8850 	bit	7, b
      00272E 20 1B                 8851 	jr	NZ, 00101$
      002730 58                    8852 	ld	e, b
      002731 16 00                 8853 	ld	d, #0x00
      002733 3E 9A                 8854 	ld	a, #0x9a
      002735 B9                    8855 	cp	a, c
      002736 3E 00                 8856 	ld	a, #0x00
      002738 98                    8857 	sbc	a, b
      002739 CB 7B                 8858 	bit	7, e
      00273B 28 07                 8859 	jr	Z, 00149$
      00273D CB 7A                 8860 	bit	7, d
      00273F 20 08                 8861 	jr	NZ, 00150$
      002741 BF                    8862 	cp	a, a
      002742 18 05                 8863 	jr	00150$
      002744                       8864 00149$:
      002744 CB 7A                 8865 	bit	7, d
      002746 28 01                 8866 	jr	Z, 00150$
      002748 37                    8867 	scf
      002749                       8868 00150$:
      002749 30 24                 8869 	jr	NC, 00113$
      00274B                       8870 00101$:
                                   8871 ;src/main.c:935: projectiles[i].active = 0;
      00274B F8 06                 8872 	ldhl	sp,	#6
      00274D 4E                    8873 	ld	c, (hl)
      00274E 06 00                 8874 	ld	b, #0x00
      002750 69                    8875 	ld	l, c
      002751 60                    8876 	ld	h, b
      002752 29                    8877 	add	hl, hl
      002753 09                    8878 	add	hl, bc
      002754 29                    8879 	add	hl, hl
      002755 29                    8880 	add	hl, hl
      002756 11rA0r00              8881 	ld	de, #_projectiles
      002759 19                    8882 	add	hl, de
      00275A 01 09 00              8883 	ld	bc, #0x0009
      00275D 09                    8884 	add	hl, bc
      00275E 36 00                 8885 	ld	(hl), #0x00
                                   8886 ;src/main.c:936: set_sprite_tile(30+i, 0x7f);
      002760 F8 05                 8887 	ldhl	sp,	#5
                                   8888 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002762 6E                    8889 	ld	l, (hl)
                                   8890 ;	spillPairReg hl
                                   8891 ;	spillPairReg hl
      002763 26 00                 8892 	ld	h, #0x00
                                   8893 ;	spillPairReg hl
                                   8894 ;	spillPairReg hl
      002765 29                    8895 	add	hl, hl
      002766 29                    8896 	add	hl, hl
      002767 11r00r00              8897 	ld	de, #_shadow_OAM
      00276A 19                    8898 	add	hl, de
      00276B 23                    8899 	inc	hl
      00276C 23                    8900 	inc	hl
      00276D 36 7F                 8901 	ld	(hl), #0x7f
                                   8902 ;src/main.c:936: set_sprite_tile(30+i, 0x7f);
      00276F                       8903 00113$:
                                   8904 ;src/main.c:916: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      00276F F8 06                 8905 	ldhl	sp,	#6
      002771 34                    8906 	inc	(hl)
      002772 C3r1Fr26              8907 	jp	00112$
      002775                       8908 00114$:
                                   8909 ;src/main.c:940: }
      002775 E8 07                 8910 	add	sp, #7
      002777 C9                    8911 	ret
                                   8912 ;src/main.c:942: void tickPickups() {
                                   8913 ;	---------------------------------
                                   8914 ; Function tickPickups
                                   8915 ; ---------------------------------
      002778                       8916 _tickPickups::
      002778 3B                    8917 	dec	sp
                                   8918 ;src/main.c:943: pickup.x -= xOverflow;
      002779 21rE1r00              8919 	ld	hl, #_pickup
      00277C 2A                    8920 	ld	a, (hl+)
      00277D 4F                    8921 	ld	c, a
      00277E 46                    8922 	ld	b, (hl)
      00277F 79                    8923 	ld	a, c
      002780 21r94r00              8924 	ld	hl, #_xOverflow
      002783 96                    8925 	sub	a, (hl)
      002784 23                    8926 	inc	hl
      002785 4F                    8927 	ld	c, a
      002786 78                    8928 	ld	a, b
      002787 9E                    8929 	sbc	a, (hl)
      002788 47                    8930 	ld	b, a
      002789 21rE1r00              8931 	ld	hl, #_pickup
      00278C 79                    8932 	ld	a, c
      00278D 22                    8933 	ld	(hl+), a
      00278E 70                    8934 	ld	(hl), b
                                   8935 ;src/main.c:944: pickup.y -= yOverflow;
      00278F 21rE3r00              8936 	ld	hl, #(_pickup + 2)
      002792 2A                    8937 	ld	a, (hl+)
      002793 4F                    8938 	ld	c, a
      002794 46                    8939 	ld	b, (hl)
      002795 79                    8940 	ld	a, c
      002796 21r96r00              8941 	ld	hl, #_yOverflow
      002799 96                    8942 	sub	a, (hl)
      00279A 23                    8943 	inc	hl
      00279B 4F                    8944 	ld	c, a
      00279C 78                    8945 	ld	a, b
      00279D 9E                    8946 	sbc	a, (hl)
      00279E 47                    8947 	ld	b, a
      00279F 21rE3r00              8948 	ld	hl, #(_pickup + 2)
      0027A2 79                    8949 	ld	a, c
      0027A3 22                    8950 	ld	(hl+), a
      0027A4 70                    8951 	ld	(hl), b
                                   8952 ;src/main.c:946: move_sprite(3, pickup.x + 4, pickup.y + 12);
      0027A5 79                    8953 	ld	a, c
      0027A6 C6 0C                 8954 	add	a, #0x0c
      0027A8 47                    8955 	ld	b, a
      0027A9 FArE1r00              8956 	ld	a, (#_pickup + 0)
      0027AC C6 04                 8957 	add	a, #0x04
      0027AE 4F                    8958 	ld	c, a
                                   8959 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0027AF 21r0Cr00              8960 	ld	hl, #(_shadow_OAM + 12)
                                   8961 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0027B2 78                    8962 	ld	a, b
      0027B3 22                    8963 	ld	(hl+), a
      0027B4 71                    8964 	ld	(hl), c
                                   8965 ;src/main.c:947: if (pickup.active) {
      0027B5 FArE5r00              8966 	ld	a, (#(_pickup + 4) + 0)
      0027B8 B7                    8967 	or	a, a
      0027B9 28 61                 8968 	jr	Z, 00123$
                                   8969 ;src/main.c:948: if (abs(pickup.x - playerDrawX) < 10) {
      0027BB FArE1r00              8970 	ld	a, (#_pickup + 0)
      0027BE 21r8Er00              8971 	ld	hl, #_playerDrawX
      0027C1 4E                    8972 	ld	c, (hl)
      0027C2 91                    8973 	sub	a, c
      0027C3 4F                    8974 	ld	c, a
                                   8975 ;src/main.c:324: if (value >= 0) return value;
      0027C4 CB 79                 8976 	bit	7, c
      0027C6 28 03                 8977 	jr	Z, 00117$
                                   8978 ;src/main.c:325: else return - value;
      0027C8 AF                    8979 	xor	a, a
      0027C9 91                    8980 	sub	a, c
      0027CA 4F                    8981 	ld	c, a
                                   8982 ;src/main.c:948: if (abs(pickup.x - playerDrawX) < 10) {
      0027CB                       8983 00117$:
      0027CB 79                    8984 	ld	a, c
      0027CC EE 80                 8985 	xor	a, #0x80
      0027CE D6 8A                 8986 	sub	a, #0x8a
      0027D0 30 4A                 8987 	jr	NC, 00123$
                                   8988 ;src/main.c:949: if (abs(pickup.y - playerDrawY) < 10) {
      0027D2 FArE3r00              8989 	ld	a, (#(_pickup + 2) + 0)
      0027D5 21r8Fr00              8990 	ld	hl, #_playerDrawY
      0027D8 4E                    8991 	ld	c, (hl)
      0027D9 91                    8992 	sub	a, c
      0027DA F8 00                 8993 	ldhl	sp,	#0
      0027DC 77                    8994 	ld	(hl), a
                                   8995 ;src/main.c:324: if (value >= 0) return value;
      0027DD CB 7E                 8996 	bit	7, (hl)
      0027DF 28 05                 8997 	jr	Z, 00121$
                                   8998 ;src/main.c:325: else return - value;
      0027E1 AF                    8999 	xor	a, a
      0027E2 F8 00                 9000 	ldhl	sp,	#0
      0027E4 96                    9001 	sub	a, (hl)
      0027E5 77                    9002 	ld	(hl), a
                                   9003 ;src/main.c:949: if (abs(pickup.y - playerDrawY) < 10) {
      0027E6                       9004 00121$:
      0027E6 F8 00                 9005 	ldhl	sp,	#0
      0027E8 7E                    9006 	ld	a, (hl)
      0027E9 EE 80                 9007 	xor	a, #0x80
      0027EB D6 8A                 9008 	sub	a, #0x8a
      0027ED 30 2D                 9009 	jr	NC, 00123$
                                   9010 ;src/main.c:950: if (pickup.type == 0) { //upgrade
      0027EF 01rE6r00              9011 	ld	bc, #_pickup + 5
      0027F2 0A                    9012 	ld	a, (bc)
      0027F3 B7                    9013 	or	a, a
      0027F4 20 0F                 9014 	jr	NZ, 00104$
                                   9015 ;src/main.c:951: if (gunLevel < 1) {
      0027F6 21r99r00              9016 	ld	hl, #_gunLevel
      0027F9 7E                    9017 	ld	a, (hl)
      0027FA D6 01                 9018 	sub	a, #0x01
      0027FC 30 07                 9019 	jr	NC, 00104$
                                   9020 ;src/main.c:952: gunLevel += 1;
      0027FE 34                    9021 	inc	(hl)
      0027FF 7E                    9022 	ld	a, (hl)
                                   9023 ;src/main.c:953: setGunIcon();
      002800 C5                    9024 	push	bc
      002801 CDr4Dr20              9025 	call	_setGunIcon
      002804 C1                    9026 	pop	bc
      002805                       9027 00104$:
                                   9028 ;src/main.c:956: if (pickup.type == 1) { //missile ammo
      002805 0A                    9029 	ld	a, (bc)
      002806 3D                    9030 	dec	a
      002807 20 09                 9031 	jr	NZ, 00106$
                                   9032 ;src/main.c:957: updateMissileCount(pickup.amount);
      002809 FArE7r00              9033 	ld	a, (#(_pickup + 6) + 0)
      00280C F5                    9034 	push	af
      00280D 33                    9035 	inc	sp
      00280E CDrAEr09              9036 	call	_updateMissileCount
      002811 33                    9037 	inc	sp
      002812                       9038 00106$:
                                   9039 ;src/main.c:959: pickup.active = 0;
      002812 21rE5r00              9040 	ld	hl, #(_pickup + 4)
      002815 36 00                 9041 	ld	(hl), #0x00
                                   9042 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002817 21r0Er00              9043 	ld	hl, #(_shadow_OAM + 14)
      00281A 36 7F                 9044 	ld	(hl), #0x7f
                                   9045 ;src/main.c:960: set_sprite_tile(3, 0x7f);
      00281C                       9046 00123$:
                                   9047 ;src/main.c:965: }
      00281C 33                    9048 	inc	sp
      00281D C9                    9049 	ret
                                   9050 ;src/main.c:967: void initEnemyOptions() {
                                   9051 ;	---------------------------------
                                   9052 ; Function initEnemyOptions
                                   9053 ; ---------------------------------
      00281E                       9054 _initEnemyOptions::
                                   9055 ;src/main.c:968: enemyOptions[0] = blob;
      00281E 11 10 00              9056 	ld	de, #0x0010
      002821 D5                    9057 	push	de
      002822 11r10r00              9058 	ld	de, #_blob
      002825 D5                    9059 	push	de
      002826 11r00r00              9060 	ld	de, #_enemyOptions
      002829 D5                    9061 	push	de
      00282A CDr00r00              9062 	call	___memcpy
      00282D E8 06                 9063 	add	sp, #6
                                   9064 ;src/main.c:969: enemyOptions[1] = bomb;
      00282F 11 10 00              9065 	ld	de, #0x0010
      002832 D5                    9066 	push	de
      002833 11r20r00              9067 	ld	de, #_bomb
      002836 D5                    9068 	push	de
      002837 11r10r00              9069 	ld	de, #(_enemyOptions + 16)
      00283A D5                    9070 	push	de
      00283B CDr00r00              9071 	call	___memcpy
      00283E E8 06                 9072 	add	sp, #6
                                   9073 ;src/main.c:970: enemyOptions[2] = miniship;
      002840 11 10 00              9074 	ld	de, #0x0010
      002843 D5                    9075 	push	de
      002844 11r30r00              9076 	ld	de, #_miniship
      002847 D5                    9077 	push	de
      002848 11r20r00              9078 	ld	de, #(_enemyOptions + 32)
      00284B D5                    9079 	push	de
      00284C CDr00r00              9080 	call	___memcpy
      00284F E8 06                 9081 	add	sp, #6
                                   9082 ;src/main.c:971: enemyOptions[3] = shieldship;
      002851 11 10 00              9083 	ld	de, #0x0010
      002854 D5                    9084 	push	de
      002855 11r50r00              9085 	ld	de, #_shieldship
      002858 D5                    9086 	push	de
      002859 11r30r00              9087 	ld	de, #(_enemyOptions + 48)
      00285C D5                    9088 	push	de
      00285D CDr00r00              9089 	call	___memcpy
      002860 E8 06                 9090 	add	sp, #6
                                   9091 ;src/main.c:973: enemyOptions[4] = bigblob;
      002862 11 10 00              9092 	ld	de, #0x0010
      002865 D5                    9093 	push	de
      002866 11r40r00              9094 	ld	de, #_bigblob
      002869 D5                    9095 	push	de
      00286A 11r40r00              9096 	ld	de, #(_enemyOptions + 64)
      00286D D5                    9097 	push	de
      00286E CDr00r00              9098 	call	___memcpy
      002871 E8 06                 9099 	add	sp, #6
                                   9100 ;src/main.c:974: }
      002873 C9                    9101 	ret
                                   9102 ;src/main.c:977: void initProjectiles() {
                                   9103 ;	---------------------------------
                                   9104 ; Function initProjectiles
                                   9105 ; ---------------------------------
      002874                       9106 _initProjectiles::
                                   9107 ;src/main.c:978: set_sprite_data(0x20, 17, ProjectileTiles); 
      002874 11rE8r05              9108 	ld	de, #_ProjectileTiles
      002877 D5                    9109 	push	de
      002878 21 20 11              9110 	ld	hl, #0x1120
      00287B E5                    9111 	push	hl
      00287C CDr00r00              9112 	call	_set_sprite_data
      00287F E8 04                 9113 	add	sp, #4
                                   9114 ;src/main.c:980: for (uint8_t i = 0; i < PROJECTILECOUNT; ++i) {
      002881 AF                    9115 	xor	a, a
      002882                       9116 00103$:
      002882 21r6Er08              9117 	ld	hl, #_PROJECTILECOUNT
      002885 4E                    9118 	ld	c, (hl)
      002886 B9                    9119 	cp	a, c
      002887 D0                    9120 	ret	NC
      002888 3C                    9121 	inc	a
                                   9122 ;src/main.c:984: }
      002889 18 F7                 9123 	jr	00103$
                                   9124 ;src/main.c:986: void initGame() {
                                   9125 ;	---------------------------------
                                   9126 ; Function initGame
                                   9127 ; ---------------------------------
      00288B                       9128 _initGame::
                                   9129 ;src/main.c:989: xDir = 0;
      00288B 21r86r00              9130 	ld	hl, #_xDir
      00288E 36 00                 9131 	ld	(hl), #0x00
                                   9132 ;src/main.c:990: yDir = -1;
      002890 21r87r00              9133 	ld	hl, #_yDir
      002893 36 FF                 9134 	ld	(hl), #0xff
                                   9135 ;src/main.c:991: xSpeed = 0;
      002895 21r88r00              9136 	ld	hl, #_xSpeed
      002898 36 00                 9137 	ld	(hl), #0x00
                                   9138 ;src/main.c:992: ySpeed = 0;
      00289A 21r89r00              9139 	ld	hl, #_ySpeed
      00289D 36 00                 9140 	ld	(hl), #0x00
                                   9141 ;src/main.c:995: playerX = 80<<5;
      00289F 21r8Ar00              9142 	ld	hl, #_playerX
      0028A2 36 00                 9143 	ld	(hl), #0x00
      0028A4 23                    9144 	inc	hl
      0028A5 36 0A                 9145 	ld	(hl), #0x0a
                                   9146 ;src/main.c:996: playerY = 80<<5;
      0028A7 21r8Cr00              9147 	ld	hl, #_playerY
      0028AA 36 00                 9148 	ld	(hl), #0x00
      0028AC 23                    9149 	inc	hl
      0028AD 36 0A                 9150 	ld	(hl), #0x0a
                                   9151 ;src/main.c:998: playerDrawX = 80;
      0028AF 21r8Er00              9152 	ld	hl, #_playerDrawX
      0028B2 36 50                 9153 	ld	(hl), #0x50
                                   9154 ;src/main.c:999: playerDrawY = 80;
      0028B4 21r8Fr00              9155 	ld	hl, #_playerDrawY
      0028B7 36 50                 9156 	ld	(hl), #0x50
                                   9157 ;src/main.c:1002: bgX = 0;
      0028B9 AF                    9158 	xor	a, a
      0028BA 21r90r00              9159 	ld	hl, #_bgX
      0028BD 22                    9160 	ld	(hl+), a
      0028BE 77                    9161 	ld	(hl), a
                                   9162 ;src/main.c:1003: bgY = 0;
      0028BF AF                    9163 	xor	a, a
      0028C0 21r92r00              9164 	ld	hl, #_bgY
      0028C3 22                    9165 	ld	(hl+), a
      0028C4 77                    9166 	ld	(hl), a
                                   9167 ;src/main.c:1005: hull = maxHull;
      0028C5 FAr70r08              9168 	ld	a, (#_maxHull)
      0028C8 EArDDr00              9169 	ld	(#_hull),a
                                   9170 ;src/main.c:1006: shield = maxShield;
      0028CB FAr71r08              9171 	ld	a, (#_maxShield)
      0028CE EArDEr00              9172 	ld	(#_shield),a
                                   9173 ;src/main.c:1008: DISPLAY_ON;
      0028D1 F0r00                 9174 	ldh	a, (_LCDC_REG + 0)
      0028D3 F6 80                 9175 	or	a, #0x80
      0028D5 E0r00                 9176 	ldh	(_LCDC_REG + 0), a
                                   9177 ;src/main.c:1009: SPRITES_8x16;
      0028D7 F0r00                 9178 	ldh	a, (_LCDC_REG + 0)
      0028D9 F6 04                 9179 	or	a, #0x04
      0028DB E0r00                 9180 	ldh	(_LCDC_REG + 0), a
                                   9181 ;src/main.c:1010: set_sprite_data(0, 12, Player1);
      0028DD 11r58r07              9182 	ld	de, #_Player1
      0028E0 D5                    9183 	push	de
      0028E1 21 00 0C              9184 	ld	hl, #0xc00
      0028E4 E5                    9185 	push	hl
      0028E5 CDr00r00              9186 	call	_set_sprite_data
      0028E8 E8 04                 9187 	add	sp, #4
                                   9188 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0028EA 21r02r00              9189 	ld	hl, #(_shadow_OAM + 2)
      0028ED 36 00                 9190 	ld	(hl), #0x00
      0028EF 21r06r00              9191 	ld	hl, #(_shadow_OAM + 6)
      0028F2 36 02                 9192 	ld	(hl), #0x02
                                   9193 ;src/main.c:1016: SHOW_SPRITES;
      0028F4 F0r00                 9194 	ldh	a, (_LCDC_REG + 0)
      0028F6 F6 02                 9195 	or	a, #0x02
      0028F8 E0r00                 9196 	ldh	(_LCDC_REG + 0), a
                                   9197 ;src/main.c:1020: font_init();
      0028FA CDr00r00              9198 	call	_font_init
                                   9199 ;src/main.c:1022: min_font = font_load(font_min); // 36 tiles of characters
      0028FD 11r00r00              9200 	ld	de, #_font_min
      002900 D5                    9201 	push	de
      002901 CDr00r00              9202 	call	_font_load
      002904 E1                    9203 	pop	hl
      002905 21rDFr00              9204 	ld	hl, #_min_font
      002908 7B                    9205 	ld	a, e
      002909 22                    9206 	ld	(hl+), a
                                   9207 ;src/main.c:1023: font_set(min_font);
      00290A 7A                    9208 	ld	a, d
      00290B 32                    9209 	ld	(hl-), a
      00290C 2A                    9210 	ld	a, (hl+)
      00290D 5F                    9211 	ld	e, a
      00290E 56                    9212 	ld	d, (hl)
      00290F D5                    9213 	push	de
      002910 CDr00r00              9214 	call	_font_set
      002913 E1                    9215 	pop	hl
                                   9216 ;src/main.c:1024: set_win_tiles(1,0,4,1,hullabel);
      002914 11r00r00              9217 	ld	de, #_hullabel
      002917 D5                    9218 	push	de
      002918 21 04 01              9219 	ld	hl, #0x104
      00291B E5                    9220 	push	hl
      00291C 21 01 00              9221 	ld	hl, #0x01
      00291F E5                    9222 	push	hl
      002920 CDr00r00              9223 	call	_set_win_tiles
      002923 E8 06                 9224 	add	sp, #6
                                   9225 ;src/main.c:1025: set_win_tiles(1,1,4,1,shieldlabel);
      002925 11r04r00              9226 	ld	de, #_shieldlabel
      002928 D5                    9227 	push	de
      002929 21 04 01              9228 	ld	hl, #0x104
      00292C E5                    9229 	push	hl
      00292D 21 01 01              9230 	ld	hl, #0x101
      002930 E5                    9231 	push	hl
      002931 CDr00r00              9232 	call	_set_win_tiles
      002934 E8 06                 9233 	add	sp, #6
                                   9234 ;src/main.c:1030: set_bkg_data(0x50,1,healthblock);
      002936 11r07r05              9235 	ld	de, #_healthblock
      002939 D5                    9236 	push	de
      00293A 21 50 01              9237 	ld	hl, #0x150
      00293D E5                    9238 	push	hl
      00293E CDr00r00              9239 	call	_set_bkg_data
      002941 E8 04                 9240 	add	sp, #4
                                   9241 ;src/main.c:1032: setHealthBar(0, hull);
      002943 FArDDr00              9242 	ld	a, (#_hull)
      002946 67                    9243 	ld	h, a
      002947 2E 00                 9244 	ld	l, #0x00
      002949 E5                    9245 	push	hl
      00294A CDr73r08              9246 	call	_setHealthBar
      00294D E1                    9247 	pop	hl
                                   9248 ;src/main.c:1033: setHealthBar(1, shield);
      00294E FArDEr00              9249 	ld	a, (#_shield)
      002951 67                    9250 	ld	h, a
      002952 2E 01                 9251 	ld	l, #0x01
      002954 E5                    9252 	push	hl
      002955 CDr73r08              9253 	call	_setHealthBar
      002958 E1                    9254 	pop	hl
                                   9255 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1316: WX_REG=x, WY_REG=y;
      002959 3E 07                 9256 	ld	a, #0x07
      00295B E0r00                 9257 	ldh	(_WX_REG + 0), a
      00295D 3E 7E                 9258 	ld	a, #0x7e
      00295F E0r00                 9259 	ldh	(_WY_REG + 0), a
                                   9260 ;src/main.c:1040: set_bkg_data(0x25, 8, backgroundtiles);		// load background tileset (start in vram, count, tilestruct)
      002961 11r87r04              9261 	ld	de, #_backgroundtiles
      002964 D5                    9262 	push	de
      002965 21 25 08              9263 	ld	hl, #0x825
      002968 E5                    9264 	push	hl
      002969 CDr00r00              9265 	call	_set_bkg_data
      00296C E8 04                 9266 	add	sp, #4
                                   9267 ;src/main.c:1041: set_bkg_tiles(0,0,background1Width, background1Height ,background1); //set tilemap to be a background
      00296E 11r87r00              9268 	ld	de, #_background1
      002971 D5                    9269 	push	de
      002972 21 20 20              9270 	ld	hl, #0x2020
      002975 E5                    9271 	push	hl
      002976 AF                    9272 	xor	a, a
      002977 0F                    9273 	rrca
      002978 F5                    9274 	push	af
      002979 CDr00r00              9275 	call	_set_bkg_tiles
      00297C E8 06                 9276 	add	sp, #6
                                   9277 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1080: SCX_REG=x, SCY_REG=y;
      00297E AF                    9278 	xor	a, a
      00297F E0r00                 9279 	ldh	(_SCX_REG + 0), a
      002981 AF                    9280 	xor	a, a
      002982 E0r00                 9281 	ldh	(_SCY_REG + 0), a
                                   9282 ;src/main.c:1047: set_bkg_data(0x51, 18, ProjectileTiles);
      002984 11rE8r05              9283 	ld	de, #_ProjectileTiles
      002987 D5                    9284 	push	de
      002988 21 51 12              9285 	ld	hl, #0x1251
      00298B E5                    9286 	push	hl
      00298C CDr00r00              9287 	call	_set_bkg_data
      00298F E8 04                 9288 	add	sp, #4
                                   9289 ;src/main.c:1049: set_win_tiles(10, 0,4,1,weaponlabel);
      002991 11r08r00              9290 	ld	de, #_weaponlabel
      002994 D5                    9291 	push	de
      002995 21 04 01              9292 	ld	hl, #0x104
      002998 E5                    9293 	push	hl
      002999 21 0A 00              9294 	ld	hl, #0x0a
      00299C E5                    9295 	push	hl
      00299D CDr00r00              9296 	call	_set_win_tiles
      0029A0 E8 06                 9297 	add	sp, #6
                                   9298 ;src/main.c:1050: set_win_tiles(10, 1,4,1,scorelabel);
      0029A2 11r0Cr00              9299 	ld	de, #_scorelabel
      0029A5 D5                    9300 	push	de
      0029A6 21 04 01              9301 	ld	hl, #0x104
      0029A9 E5                    9302 	push	hl
      0029AA 21 0A 01              9303 	ld	hl, #0x10a
      0029AD E5                    9304 	push	hl
      0029AE CDr00r00              9305 	call	_set_win_tiles
      0029B1 E8 06                 9306 	add	sp, #6
                                   9307 ;src/main.c:1052: setGunIcon();
      0029B3 CDr4Dr20              9308 	call	_setGunIcon
                                   9309 ;src/main.c:1053: SHOW_BKG;
      0029B6 F0r00                 9310 	ldh	a, (_LCDC_REG + 0)
      0029B8 F6 01                 9311 	or	a, #0x01
      0029BA E0r00                 9312 	ldh	(_LCDC_REG + 0), a
                                   9313 ;src/main.c:1054: SHOW_WIN;;
      0029BC F0r00                 9314 	ldh	a, (_LCDC_REG + 0)
      0029BE F6 20                 9315 	or	a, #0x20
      0029C0 E0r00                 9316 	ldh	(_LCDC_REG + 0), a
                                   9317 ;src/main.c:1056: SCORE = MAKE_BCD(00000);
      0029C2 AF                    9318 	xor	a, a
      0029C3 21rA6r00              9319 	ld	hl, #_SCORE
      0029C6 22                    9320 	ld	(hl+), a
      0029C7 22                    9321 	ld	(hl+), a
      0029C8 22                    9322 	ld	(hl+), a
      0029C9 77                    9323 	ld	(hl), a
                                   9324 ;src/main.c:1057: updateScore();
      0029CA CDr84r09              9325 	call	_updateScore
                                   9326 ;src/main.c:1058: MISSILES = MAKE_BCD(1);
      0029CD 21r9Cr00              9327 	ld	hl, #_MISSILES
      0029D0 3E 01                 9328 	ld	a, #0x01
      0029D2 22                    9329 	ld	(hl+), a
      0029D3 AF                    9330 	xor	a, a
      0029D4 22                    9331 	ld	(hl+), a
      0029D5 22                    9332 	ld	(hl+), a
      0029D6 77                    9333 	ld	(hl), a
                                   9334 ;src/main.c:1059: updateMissileCount(0);
      0029D7 AF                    9335 	xor	a, a
      0029D8 F5                    9336 	push	af
      0029D9 33                    9337 	inc	sp
      0029DA CDrAEr09              9338 	call	_updateMissileCount
      0029DD 33                    9339 	inc	sp
                                   9340 ;src/main.c:1060: set_win_tiles(17, 0,1,1,gunMap+2);
      0029DE 11rA3r00              9341 	ld	de, #(_gunMap + 2)
      0029E1 D5                    9342 	push	de
      0029E2 21 01 01              9343 	ld	hl, #0x101
      0029E5 E5                    9344 	push	hl
      0029E6 21 11 00              9345 	ld	hl, #0x11
      0029E9 E5                    9346 	push	hl
      0029EA CDr00r00              9347 	call	_set_win_tiles
      0029ED E8 06                 9348 	add	sp, #6
                                   9349 ;src/main.c:1064: pickup = upgrade;//upgrade;
      0029EF 11 08 00              9350 	ld	de, #0x0008
      0029F2 D5                    9351 	push	de
      0029F3 11r08r07              9352 	ld	de, #_upgrade
      0029F6 D5                    9353 	push	de
      0029F7 11rE1r00              9354 	ld	de, #_pickup
      0029FA D5                    9355 	push	de
      0029FB CDr00r00              9356 	call	___memcpy
      0029FE E8 06                 9357 	add	sp, #6
                                   9358 ;src/main.c:1066: set_sprite_data(0x70, 4, Pickups);
      002A00 11r18r07              9359 	ld	de, #_Pickups
      002A03 D5                    9360 	push	de
      002A04 21 70 04              9361 	ld	hl, #0x470
      002A07 E5                    9362 	push	hl
      002A08 CDr00r00              9363 	call	_set_sprite_data
      002A0B E8 04                 9364 	add	sp, #4
                                   9365 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      002A0D 21r0Er00              9366 	ld	hl, #(_shadow_OAM + 14)
      002A10 36 7F                 9367 	ld	(hl), #0x7f
                                   9368 ;src/main.c:1070: move_sprite(3, pickup.x + 4, pickup.y + 12);
      002A12 FArE3r00              9369 	ld	a, (#(_pickup + 2) + 0)
      002A15 C6 0C                 9370 	add	a, #0x0c
      002A17 47                    9371 	ld	b, a
      002A18 FArE1r00              9372 	ld	a, (#_pickup + 0)
      002A1B C6 04                 9373 	add	a, #0x04
      002A1D 4F                    9374 	ld	c, a
                                   9375 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      002A1E 21r0Cr00              9376 	ld	hl, #(_shadow_OAM + 12)
                                   9377 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      002A21 78                    9378 	ld	a, b
      002A22 22                    9379 	ld	(hl+), a
      002A23 71                    9380 	ld	(hl), c
                                   9381 ;src/main.c:1070: move_sprite(3, pickup.x + 4, pickup.y + 12);
                                   9382 ;src/main.c:1072: }
      002A24 C9                    9383 	ret
                                   9384 ;src/main.c:1074: void main(){
                                   9385 ;	---------------------------------
                                   9386 ; Function main
                                   9387 ; ---------------------------------
      002A25                       9388 _main::
                                   9389 ;src/main.c:1077: initEnemyOptions();
      002A25 CDr1Er28              9390 	call	_initEnemyOptions
                                   9391 ;src/main.c:1080: STAT_REG = 0x45;
      002A28 3E 45                 9392 	ld	a, #0x45
      002A2A E0r00                 9393 	ldh	(_STAT_REG + 0), a
                                   9394 ;src/main.c:1081: LYC_REG = 0x7e; //line 126
      002A2C 3E 7E                 9395 	ld	a, #0x7e
      002A2E E0r00                 9396 	ldh	(_LYC_REG + 0), a
                                   9397 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:671: __asm__("di");
      002A30 F3                    9398 	di
                                   9399 ;src/main.c:1083: add_LCD(interruptLCD);
      002A31 11r00r00              9400 	ld	de, #_interruptLCD
      002A34 D5                    9401 	push	de
      002A35 CDr00r00              9402 	call	_add_LCD
      002A38 33                    9403 	inc	sp
      002A39 33                    9404 	inc	sp
                                   9405 ;/home/milan/Documents/gameboy/gbdk/include/gb/gb.h:655: __asm__("ei");
      002A3A FB                    9406 	ei
                                   9407 ;src/main.c:1085: set_interrupts(VBL_IFLAG | LCD_IFLAG);   
      002A3B 3E 03                 9408 	ld	a, #0x03
      002A3D F5                    9409 	push	af
      002A3E 33                    9410 	inc	sp
      002A3F CDr00r00              9411 	call	_set_interrupts
      002A42 33                    9412 	inc	sp
                                   9413 ;src/main.c:1089: NR52_REG = 0x80; // sound on 
      002A43 3E 80                 9414 	ld	a, #0x80
      002A45 E0r00                 9415 	ldh	(_NR52_REG + 0), a
                                   9416 ;src/main.c:1090: NR50_REG = 0x77; // volume
      002A47 3E 77                 9417 	ld	a, #0x77
      002A49 E0r00                 9418 	ldh	(_NR50_REG + 0), a
                                   9419 ;src/main.c:1091: NR51_REG = 0xFF; // all channels
      002A4B 3E FF                 9420 	ld	a, #0xff
      002A4D E0r00                 9421 	ldh	(_NR51_REG + 0), a
                                   9422 ;src/main.c:1095: waitpad(J_A);
      002A4F 3E 10                 9423 	ld	a, #0x10
      002A51 F5                    9424 	push	af
      002A52 33                    9425 	inc	sp
      002A53 CDr00r00              9426 	call	_waitpad
      002A56 33                    9427 	inc	sp
                                   9428 ;src/main.c:1096: uint16_t seed = LY_REG;
      002A57 F0r00                 9429 	ldh	a, (_LY_REG + 0)
      002A59 4F                    9430 	ld	c, a
      002A5A 06 00                 9431 	ld	b, #0x00
                                   9432 ;src/main.c:1097: seed |= (uint16_t)DIV_REG << 8;
      002A5C F0r00                 9433 	ldh	a, (_DIV_REG + 0)
      002A5E 5F                    9434 	ld	e, a
      002A5F AF                    9435 	xor	a, a
      002A60 B1                    9436 	or	a, c
      002A61 4F                    9437 	ld	c, a
      002A62 7B                    9438 	ld	a, e
      002A63 B0                    9439 	or	a, b
      002A64 47                    9440 	ld	b, a
                                   9441 ;src/main.c:1098: initrand(seed);
      002A65 C5                    9442 	push	bc
      002A66 CDr00r00              9443 	call	_initrand
      002A69 E1                    9444 	pop	hl
                                   9445 ;src/main.c:1103: initGame();
      002A6A CDr8Br28              9446 	call	_initGame
                                   9447 ;src/main.c:1104: initEnemies(1);
      002A6D 3E 01                 9448 	ld	a, #0x01
      002A6F F5                    9449 	push	af
      002A70 33                    9450 	inc	sp
      002A71 CDrD9r0C              9451 	call	_initEnemies
      002A74 33                    9452 	inc	sp
                                   9453 ;src/main.c:1105: initProjectiles();
      002A75 CDr74r28              9454 	call	_initProjectiles
                                   9455 ;src/main.c:1107: while(1) {
      002A78                       9456 00117$:
                                   9457 ;src/main.c:1108: SHOW_SPRITES;
      002A78 F0r00                 9458 	ldh	a, (_LCDC_REG + 0)
      002A7A F6 02                 9459 	or	a, #0x02
      002A7C E0r00                 9460 	ldh	(_LCDC_REG + 0), a
                                   9461 ;src/main.c:1110: joydata = joypad(); // query for button states
      002A7E CDr00r00              9462 	call	_joypad
      002A81 21rDCr00              9463 	ld	hl, #_joydata
      002A84 73                    9464 	ld	(hl), e
                                   9465 ;src/main.c:1112: updateDirection(); // set player direction
      002A85 CDr4Cr0A              9466 	call	_updateDirection
                                   9467 ;src/main.c:1115: move(); 
      002A88 CDrF3r16              9468 	call	_move
                                   9469 ;src/main.c:1117: updateEnemyPositions();
      002A8B CDr84r0E              9470 	call	_updateEnemyPositions
                                   9471 ;src/main.c:1120: checkCollision(); 
      002A8E CDrD7r1C              9472 	call	_checkCollision
                                   9473 ;src/main.c:820: if (shield < maxShield) {
      002A91 21r71r08              9474 	ld	hl, #_maxShield
      002A94 4E                    9475 	ld	c, (hl)
      002A95 59                    9476 	ld	e, c
      002A96 21rDEr00              9477 	ld	hl, #_shield
      002A99 56                    9478 	ld	d, (hl)
      002A9A 7E                    9479 	ld	a, (hl)
      002A9B 91                    9480 	sub	a, c
      002A9C CB 7B                 9481 	bit	7, e
      002A9E 28 07                 9482 	jr	Z, 00179$
      002AA0 CB 7A                 9483 	bit	7, d
      002AA2 20 08                 9484 	jr	NZ, 00180$
      002AA4 BF                    9485 	cp	a, a
      002AA5 18 05                 9486 	jr	00180$
      002AA7                       9487 00179$:
      002AA7 CB 7A                 9488 	bit	7, d
      002AA9 28 01                 9489 	jr	Z, 00180$
      002AAB 37                    9490 	scf
      002AAC                       9491 00180$:
      002AAC 30 04                 9492 	jr	NC, 00125$
                                   9493 ;src/main.c:821: shield += 1;
      002AAE 21rDEr00              9494 	ld	hl, #_shield
      002AB1 34                    9495 	inc	(hl)
      002AB2                       9496 00125$:
                                   9497 ;src/main.c:823: setHealthBar(0, hull);
      002AB2 FArDDr00              9498 	ld	a, (#_hull)
      002AB5 67                    9499 	ld	h, a
      002AB6 2E 00                 9500 	ld	l, #0x00
      002AB8 E5                    9501 	push	hl
      002AB9 CDr73r08              9502 	call	_setHealthBar
      002ABC E1                    9503 	pop	hl
                                   9504 ;src/main.c:824: setHealthBar(1, shield);
      002ABD FArDEr00              9505 	ld	a, (#_shield)
      002AC0 67                    9506 	ld	h, a
      002AC1 2E 01                 9507 	ld	l, #0x01
      002AC3 E5                    9508 	push	hl
      002AC4 CDr73r08              9509 	call	_setHealthBar
      002AC7 E1                    9510 	pop	hl
                                   9511 ;src/main.c:1125: if (joydata & J_B && fireCooldown == 0) {
      002AC8 FArDCr00              9512 	ld	a, (#_joydata)
      002ACB CB 6F                 9513 	bit	5, a
      002ACD 28 09                 9514 	jr	Z, 00102$
      002ACF FAr85r00              9515 	ld	a, (#_fireCooldown)
      002AD2 B7                    9516 	or	a, a
      002AD3 20 03                 9517 	jr	NZ, 00102$
                                   9518 ;src/main.c:1126: fire();
      002AD5 CDr80r20              9519 	call	_fire
      002AD8                       9520 00102$:
                                   9521 ;src/main.c:1128: if (fireCooldown > 0) {
      002AD8 21r85r00              9522 	ld	hl, #_fireCooldown
      002ADB 7E                    9523 	ld	a, (hl)
      002ADC B7                    9524 	or	a, a
      002ADD 28 01                 9525 	jr	Z, 00105$
                                   9526 ;src/main.c:1129: --fireCooldown;
      002ADF 35                    9527 	dec	(hl)
      002AE0                       9528 00105$:
                                   9529 ;src/main.c:1132: if (joydata & J_SELECT && switchDelay == 0) {
      002AE0 FArDCr00              9530 	ld	a, (#_joydata)
      002AE3 CB 77                 9531 	bit	6, a
      002AE5 28 24                 9532 	jr	Z, 00112$
      002AE7 FArA0r00              9533 	ld	a, (#_switchDelay)
      002AEA B7                    9534 	or	a, a
      002AEB 20 1E                 9535 	jr	NZ, 00112$
                                   9536 ;src/main.c:1133: if (currentGun == 0) {
      002AED 21r9Ar00              9537 	ld	hl, #_currentGun
      002AF0 7E                    9538 	ld	a, (hl)
      002AF1 B7                    9539 	or	a, a
      002AF2 20 04                 9540 	jr	NZ, 00109$
                                   9541 ;src/main.c:1134: currentGun = 1;
      002AF4 36 01                 9542 	ld	(hl), #0x01
      002AF6 18 0B                 9543 	jr	00110$
      002AF8                       9544 00109$:
                                   9545 ;src/main.c:1136: else if (currentGun == 1) {
      002AF8 FAr9Ar00              9546 	ld	a, (#_currentGun)
      002AFB 3D                    9547 	dec	a
      002AFC 20 05                 9548 	jr	NZ, 00110$
                                   9549 ;src/main.c:1137: currentGun = 0;
      002AFE 21r9Ar00              9550 	ld	hl, #_currentGun
      002B01 36 00                 9551 	ld	(hl), #0x00
      002B03                       9552 00110$:
                                   9553 ;src/main.c:1139: setGunIcon();
      002B03 CDr4Dr20              9554 	call	_setGunIcon
                                   9555 ;src/main.c:1140: switchDelay = 30;
      002B06 21rA0r00              9556 	ld	hl, #_switchDelay
      002B09 36 1E                 9557 	ld	(hl), #0x1e
      002B0B                       9558 00112$:
                                   9559 ;src/main.c:1142: if (switchDelay != 0) {
      002B0B 21rA0r00              9560 	ld	hl, #_switchDelay
      002B0E 7E                    9561 	ld	a, (hl)
      002B0F B7                    9562 	or	a, a
      002B10 28 01                 9563 	jr	Z, 00115$
                                   9564 ;src/main.c:1143: switchDelay--;
      002B12 35                    9565 	dec	(hl)
      002B13                       9566 00115$:
                                   9567 ;src/main.c:1145: moveProjectiles();
      002B13 CDr19r26              9568 	call	_moveProjectiles
                                   9569 ;src/main.c:1146: tickPickups();
      002B16 CDr78r27              9570 	call	_tickPickups
                                   9571 ;src/main.c:1151: SHOW_WIN;	
      002B19 F0r00                 9572 	ldh	a, (_LCDC_REG + 0)
      002B1B F6 20                 9573 	or	a, #0x20
      002B1D E0r00                 9574 	ldh	(_LCDC_REG + 0), a
                                   9575 ;src/main.c:1152: wait_vbl_done(); // Idle until next frame
      002B1F CDr00r00              9576 	call	_wait_vbl_done
                                   9577 ;src/main.c:1157: }
      002B22 C3r78r2A              9578 	jp	00117$
                                   9579 	.area _CODE
                                   9580 	.area _INITIALIZER
      000000                       9581 __xinit__hullabel:
      000000 12                    9582 	.db #0x12	; 18
      000001 1F                    9583 	.db #0x1f	; 31
      000002 16                    9584 	.db #0x16	; 22
      000003 16                    9585 	.db #0x16	; 22
      000004                       9586 __xinit__shieldlabel:
      000004 1D                    9587 	.db #0x1d	; 29
      000005 12                    9588 	.db #0x12	; 18
      000006 16                    9589 	.db #0x16	; 22
      000007 0E                    9590 	.db #0x0e	; 14
      000008                       9591 __xinit__weaponlabel:
      000008 21                    9592 	.db #0x21	; 33
      000009 0F                    9593 	.db #0x0f	; 15
      00000A 1A                    9594 	.db #0x1a	; 26
      00000B 18                    9595 	.db #0x18	; 24
      00000C                       9596 __xinit__scorelabel:
      00000C 1D                    9597 	.db #0x1d	; 29
      00000D 0D                    9598 	.db #0x0d	; 13
      00000E 1C                    9599 	.db #0x1c	; 28
      00000F 0F                    9600 	.db #0x0f	; 15
      000010                       9601 __xinit__blob:
      000010 00 00                 9602 	.dw #0x0000
      000012 00 00                 9603 	.dw #0x0000
      000014 00                    9604 	.db #0x00	;  0
      000015 00                    9605 	.db #0x00	;  0
      000016 40                    9606 	.db #0x40	; 64
      000017 00                    9607 	.db #0x00	; 0
      000018 01                    9608 	.db #0x01	; 1
      000019 01                    9609 	.db #0x01	; 1
      00001A 01                    9610 	.db #0x01	; 1
      00001B 32                    9611 	.db #0x32	; 50	'2'
      00001C 03                    9612 	.db #0x03	;  3
      00001D 01                    9613 	.db #0x01	; 1
      00001E 00                    9614 	.db #0x00	;  0
      00001F 00                    9615 	.db #0x00	;  0
      000020                       9616 __xinit__bomb:
      000020 00 00                 9617 	.dw #0x0000
      000022 00 00                 9618 	.dw #0x0000
      000024 00                    9619 	.db #0x00	;  0
      000025 00                    9620 	.db #0x00	;  0
      000026 42                    9621 	.db #0x42	; 66	'B'
      000027 00                    9622 	.db #0x00	; 0
      000028 01                    9623 	.db #0x01	; 1
      000029 01                    9624 	.db #0x01	; 1
      00002A 01                    9625 	.db #0x01	; 1
      00002B 32                    9626 	.db #0x32	; 50	'2'
      00002C 05                    9627 	.db #0x05	;  5
      00002D 01                    9628 	.db #0x01	; 1
      00002E 00                    9629 	.db #0x00	;  0
      00002F 00                    9630 	.db #0x00	;  0
      000030                       9631 __xinit__miniship:
      000030 00 00                 9632 	.dw #0x0000
      000032 00 00                 9633 	.dw #0x0000
      000034 00                    9634 	.db #0x00	;  0
      000035 00                    9635 	.db #0x00	;  0
      000036 44                    9636 	.db #0x44	; 68	'D'
      000037 00                    9637 	.db #0x00	; 0
      000038 01                    9638 	.db #0x01	; 1
      000039 01                    9639 	.db #0x01	; 1
      00003A 01                    9640 	.db #0x01	; 1
      00003B 32                    9641 	.db #0x32	; 50	'2'
      00003C 05                    9642 	.db #0x05	;  5
      00003D 01                    9643 	.db #0x01	; 1
      00003E 00                    9644 	.db #0x00	;  0
      00003F 00                    9645 	.db #0x00	;  0
      000040                       9646 __xinit__bigblob:
      000040 00 00                 9647 	.dw #0x0000
      000042 00 00                 9648 	.dw #0x0000
      000044 00                    9649 	.db #0x00	;  0
      000045 00                    9650 	.db #0x00	;  0
      000046 50                    9651 	.db #0x50	; 80	'P'
      000047 52                    9652 	.db #0x52	; 82	'R'
      000048 02                    9653 	.db #0x02	; 2
      000049 01                    9654 	.db #0x01	; 1
      00004A 01                    9655 	.db #0x01	; 1
      00004B 32                    9656 	.db #0x32	; 50	'2'
      00004C 03                    9657 	.db #0x03	;  3
      00004D 01                    9658 	.db #0x01	; 1
      00004E 00                    9659 	.db #0x00	;  0
      00004F 00                    9660 	.db #0x00	;  0
      000050                       9661 __xinit__shieldship:
      000050 00 00                 9662 	.dw #0x0000
      000052 00 00                 9663 	.dw #0x0000
      000054 00                    9664 	.db #0x00	;  0
      000055 00                    9665 	.db #0x00	;  0
      000056 54                    9666 	.db #0x54	; 84	'T'
      000057 56                    9667 	.db #0x56	; 86	'V'
      000058 02                    9668 	.db #0x02	; 2
      000059 01                    9669 	.db #0x01	; 1
      00005A 01                    9670 	.db #0x01	; 1
      00005B 32                    9671 	.db #0x32	; 50	'2'
      00005C 03                    9672 	.db #0x03	;  3
      00005D 01                    9673 	.db #0x01	; 1
      00005E 00                    9674 	.db #0x00	;  0
      00005F 00                    9675 	.db #0x00	;  0
      000060                       9676 __xinit__singleGun:
      000060 00 00                 9677 	.dw #0x0000
      000062 00 00                 9678 	.dw #0x0000
      000064 00                    9679 	.db #0x00	;  0
      000065 00                    9680 	.db #0x00	;  0
      000066 FF                    9681 	.db #0xff	; -1
      000067 02                    9682 	.db #0x02	; 2
      000068 00                    9683 	.db #0x00	; 0
      000069 01                    9684 	.db #0x01	; 1
      00006A 0F                    9685 	.db #0x0f	; 15
      00006B 20                    9686 	.db #0x20	; 32
      00006C                       9687 __xinit__doubleGun:
      00006C 00 00                 9688 	.dw #0x0000
      00006E 00 00                 9689 	.dw #0x0000
      000070 00                    9690 	.db #0x00	;  0
      000071 00                    9691 	.db #0x00	;  0
      000072 FF                    9692 	.db #0xff	; -1
      000073 02                    9693 	.db #0x02	; 2
      000074 00                    9694 	.db #0x00	; 0
      000075 01                    9695 	.db #0x01	; 1
      000076 0F                    9696 	.db #0x0f	; 15
      000077 26                    9697 	.db #0x26	; 38
      000078                       9698 __xinit__missile:
      000078 00 00                 9699 	.dw #0x0000
      00007A 00 00                 9700 	.dw #0x0000
      00007C 00                    9701 	.db #0x00	;  0
      00007D 00                    9702 	.db #0x00	;  0
      00007E FF                    9703 	.db #0xff	; -1
      00007F 01                    9704 	.db #0x01	; 1
      000080 00                    9705 	.db #0x00	; 0
      000081 01                    9706 	.db #0x01	; 1
      000082 1E                    9707 	.db #0x1e	; 30
      000083 2C                    9708 	.db #0x2c	; 44
      000084                       9709 __xinit__oldestProjectile:
      000084 00                    9710 	.db #0x00	; 0
      000085                       9711 __xinit__fireCooldown:
      000085 00                    9712 	.db #0x00	; 0
      000086                       9713 __xinit__xDir:
      000086 00                    9714 	.db #0x00	;  0
      000087                       9715 __xinit__yDir:
      000087 FF                    9716 	.db #0xff	; -1
      000088                       9717 __xinit__xSpeed:
      000088 00                    9718 	.db #0x00	;  0
      000089                       9719 __xinit__ySpeed:
      000089 00                    9720 	.db #0x00	;  0
      00008A                       9721 __xinit__playerX:
      00008A 00 0A                 9722 	.dw #0x0a00
      00008C                       9723 __xinit__playerY:
      00008C 00 0A                 9724 	.dw #0x0a00
      00008E                       9725 __xinit__playerDrawX:
      00008E 50                    9726 	.db #0x50	; 80	'P'
      00008F                       9727 __xinit__playerDrawY:
      00008F 50                    9728 	.db #0x50	; 80	'P'
      000090                       9729 __xinit__bgX:
      000090 00 00                 9730 	.dw #0x0000
      000092                       9731 __xinit__bgY:
      000092 00 00                 9732 	.dw #0x0000
      000094                       9733 __xinit__xOverflow:
      000094 00 00                 9734 	.dw #0x0000
      000096                       9735 __xinit__yOverflow:
      000096 00 00                 9736 	.dw #0x0000
      000098                       9737 __xinit__enemyCollisionCount:
      000098 00                    9738 	.db #0x00	; 0
      000099                       9739 __xinit__gunLevel:
      000099 00                    9740 	.db #0x00	; 0
      00009A                       9741 __xinit__currentGun:
      00009A 00                    9742 	.db #0x00	; 0
      00009B                       9743 __xinit__missiles:
      00009B 01                    9744 	.db #0x01	; 1
      00009C                       9745 __xinit__MISSILES:
      00009C 01 00 00 00           9746 	.byte #0x01, #0x00, #0x00, #0x00	; 1
      0000A0                       9747 __xinit__switchDelay:
      0000A0 00                    9748 	.db #0x00	; 0
      0000A1                       9749 __xinit__gunMap:
      0000A1 53                    9750 	.db #0x53	; 83	'S'
      0000A2 5B                    9751 	.db #0x5b	; 91
      0000A3 61                    9752 	.db #0x61	; 97	'a'
      0000A4                       9753 __xinit__score:
      0000A4 00 00                 9754 	.dw #0x0000
      0000A6                       9755 __xinit__SCORE:
      0000A6 00 00 00 00           9756 	.byte #0x00, #0x00, #0x00, #0x00	; 0
      0000AA                       9757 __xinit__INCREMENT:
      0000AA 01 00 00 00           9758 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   9759 	.area _CABS (ABS)
